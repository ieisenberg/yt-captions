[
  {
    "text": "greetings my name is Matt word and I'm",
    "start": "6200",
    "end": "7919"
  },
  {
    "text": "here at the AWS headquarters in Seattle",
    "start": "7919",
    "end": "9559"
  },
  {
    "text": "to show you how AWS batch Works AWS",
    "start": "9559",
    "end": "12719"
  },
  {
    "text": "batch is a new service we launched at",
    "start": "12719",
    "end": "14400"
  },
  {
    "text": "reinvent this year that enables",
    "start": "14400",
    "end": "16160"
  },
  {
    "text": "developers scientists and Engineers to",
    "start": "16160",
    "end": "18320"
  },
  {
    "text": "easily and efficiently run hundreds of",
    "start": "18320",
    "end": "20000"
  },
  {
    "text": "thousands of batch processing jobs on",
    "start": "20000",
    "end": "22439"
  },
  {
    "text": "AWS it dynamically Provisions the",
    "start": "22439",
    "end": "24880"
  },
  {
    "text": "optimal quantity and type of compute",
    "start": "24880",
    "end": "26800"
  },
  {
    "text": "resources based on the volume and",
    "start": "26800",
    "end": "28840"
  },
  {
    "text": "specific resource requirements of the",
    "start": "28840",
    "end": "30439"
  },
  {
    "text": "batch job submitted with AWS batch there",
    "start": "30439",
    "end": "33040"
  },
  {
    "text": "is no need to install and manage batch",
    "start": "33040",
    "end": "34840"
  },
  {
    "text": "Computing software or server clusters",
    "start": "34840",
    "end": "36600"
  },
  {
    "text": "that you use to run your jobs allowing",
    "start": "36600",
    "end": "38399"
  },
  {
    "text": "you to focus on analyzing results and",
    "start": "38399",
    "end": "40360"
  },
  {
    "text": "solving real problems so I'm going to",
    "start": "40360",
    "end": "42559"
  },
  {
    "text": "demonstrate how AWS batch works here we",
    "start": "42559",
    "end": "45440"
  },
  {
    "text": "have a set of genomes that need to be",
    "start": "45440",
    "end": "46840"
  },
  {
    "text": "sequenced when sequencing genomes you",
    "start": "46840",
    "end": "48879"
  },
  {
    "text": "generally have a few different types of",
    "start": "48879",
    "end": "50559"
  },
  {
    "text": "processing steps you need to do",
    "start": "50559",
    "end": "52120"
  },
  {
    "text": "alignment variant calling and",
    "start": "52120",
    "end": "53840"
  },
  {
    "text": "comparative analysis each of these steps",
    "start": "53840",
    "end": "55879"
  },
  {
    "text": "can be broken into different batch",
    "start": "55879",
    "end": "57359"
  },
  {
    "text": "processes that have differing memory and",
    "start": "57359",
    "end": "59440"
  },
  {
    "text": "CPU requirements with AWS batch you can",
    "start": "59440",
    "end": "62239"
  },
  {
    "text": "map out each of the stages and set the",
    "start": "62239",
    "end": "65158"
  },
  {
    "text": "dependencies here we see that we can",
    "start": "65159",
    "end": "67080"
  },
  {
    "text": "model the first stage of the genome",
    "start": "67080",
    "end": "68799"
  },
  {
    "text": "sequencing workload we can create two",
    "start": "68799",
    "end": "70880"
  },
  {
    "text": "more stages of batch jobs that have",
    "start": "70880",
    "end": "72720"
  },
  {
    "text": "dependencies against the previous stages",
    "start": "72720",
    "end": "75320"
  },
  {
    "text": "now that we know how we can model batch",
    "start": "75320",
    "end": "76880"
  },
  {
    "text": "jobs in AWS batch let's talk a bit about",
    "start": "76880",
    "end": "79720"
  },
  {
    "text": "how we run the batch jobs themselves",
    "start": "79720",
    "end": "82479"
  },
  {
    "text": "first we have compute environments",
    "start": "82479",
    "end": "84520"
  },
  {
    "text": "compute environments dynamically",
    "start": "84520",
    "end": "85920"
  },
  {
    "text": "provision and scale compute resources",
    "start": "85920",
    "end": "88079"
  },
  {
    "text": "based on the volume and resource",
    "start": "88079",
    "end": "89439"
  },
  {
    "text": "requirements of your submitted jobs you",
    "start": "89439",
    "end": "91640"
  },
  {
    "text": "can set configurations like the minimum",
    "start": "91640",
    "end": "93439"
  },
  {
    "text": "and maximum number of vcpus that we want",
    "start": "93439",
    "end": "95640"
  },
  {
    "text": "AWS batch to spin up second AWS batch",
    "start": "95640",
    "end": "99200"
  },
  {
    "text": "enables you to set up cues this is where",
    "start": "99200",
    "end": "101640"
  },
  {
    "text": "submitted batch jobs are stored until",
    "start": "101640",
    "end": "103560"
  },
  {
    "text": "compute resources are available to",
    "start": "103560",
    "end": "105240"
  },
  {
    "text": "execute the job the AWS batch scheduler",
    "start": "105240",
    "end": "108079"
  },
  {
    "text": "evaluates when where and how to run jobs",
    "start": "108079",
    "end": "110719"
  },
  {
    "text": "that have been submitted to a queue",
    "start": "110719",
    "end": "112320"
  },
  {
    "text": "based on the resource requirements of",
    "start": "112320",
    "end": "113920"
  },
  {
    "text": "each job each queue can be linked to one",
    "start": "113920",
    "end": "116560"
  },
  {
    "text": "or more compute environments now we're",
    "start": "116560",
    "end": "119000"
  },
  {
    "text": "going to submit all all of the genome",
    "start": "119000",
    "end": "120439"
  },
  {
    "text": "sequencing jobs into the queue the",
    "start": "120439",
    "end": "122759"
  },
  {
    "text": "scheduler will now evaluate the queue",
    "start": "122759",
    "end": "124759"
  },
  {
    "text": "and the computer environment will spin",
    "start": "124759",
    "end": "126159"
  },
  {
    "text": "up the appropriate number of instances",
    "start": "126159",
    "end": "127560"
  },
  {
    "text": "to handle the workload see how the red",
    "start": "127560",
    "end": "129920"
  },
  {
    "text": "jobs have to get processed first before",
    "start": "129920",
    "end": "131760"
  },
  {
    "text": "the green jobs start",
    "start": "131760",
    "end": "134560"
  },
  {
    "text": "processing next we're going to set up a",
    "start": "134599",
    "end": "137160"
  },
  {
    "text": "new compute environment this time it's a",
    "start": "137160",
    "end": "139440"
  },
  {
    "text": "compute environment connected to spot",
    "start": "139440",
    "end": "141480"
  },
  {
    "text": "instances the spot environment can be",
    "start": "141480",
    "end": "143720"
  },
  {
    "text": "configured to spin up spot instances",
    "start": "143720",
    "end": "145920"
  },
  {
    "text": "once the spot price drops below 25% of",
    "start": "145920",
    "end": "148720"
  },
  {
    "text": "the ond demand price we can also",
    "start": "148720",
    "end": "150720"
  },
  {
    "text": "configure it with a maximum number of",
    "start": "150720",
    "end": "152599"
  },
  {
    "text": "vcpus we will set up a second queue",
    "start": "152599",
    "end": "155080"
  },
  {
    "text": "which will be processing low priority",
    "start": "155080",
    "end": "156959"
  },
  {
    "text": "jobs such as report generation or",
    "start": "156959",
    "end": "158680"
  },
  {
    "text": "Garbage Collection it's low priority so",
    "start": "158680",
    "end": "161000"
  },
  {
    "text": "we only want to process it when",
    "start": "161000",
    "end": "162319"
  },
  {
    "text": "instances are below a certain price you",
    "start": "162319",
    "end": "164840"
  },
  {
    "text": "can see that now as the price drops",
    "start": "164840",
    "end": "166879"
  },
  {
    "text": "below our preset threshold AWS batch",
    "start": "166879",
    "end": "169239"
  },
  {
    "text": "will start processing the jobs from the",
    "start": "169239",
    "end": "170680"
  },
  {
    "text": "second",
    "start": "170680",
    "end": "172080"
  },
  {
    "text": "CU next let me introduce you to Priority",
    "start": "172080",
    "end": "175040"
  },
  {
    "text": "scheduling we're going to connect q1 to",
    "start": "175040",
    "end": "177480"
  },
  {
    "text": "compute environment 2 but we are going",
    "start": "177480",
    "end": "179280"
  },
  {
    "text": "to set the pr priorities that it's",
    "start": "179280",
    "end": "180760"
  },
  {
    "text": "higher than",
    "start": "180760",
    "end": "182239"
  },
  {
    "text": "Q2 what happens now is that the",
    "start": "182239",
    "end": "184480"
  },
  {
    "text": "scheduler will run batch jobs based on",
    "start": "184480",
    "end": "186360"
  },
  {
    "text": "the priority of the",
    "start": "186360",
    "end": "188239"
  },
  {
    "text": "q's here you see that red jobs get first",
    "start": "188239",
    "end": "190959"
  },
  {
    "text": "priority on compute environment 2 only",
    "start": "190959",
    "end": "193599"
  },
  {
    "text": "when there is no red jobs available do",
    "start": "193599",
    "end": "195480"
  },
  {
    "text": "the Q2 yellow jobs get",
    "start": "195480",
    "end": "198400"
  },
  {
    "text": "processed you'll see that once all the",
    "start": "198400",
    "end": "200440"
  },
  {
    "text": "jobs in q1 finished the computer",
    "start": "200440",
    "end": "202159"
  },
  {
    "text": "environment will start spinning down its",
    "start": "202159",
    "end": "203640"
  },
  {
    "text": "instances back to",
    "start": "203640",
    "end": "205480"
  },
  {
    "text": "zero so that's it a quick introduction",
    "start": "205480",
    "end": "207920"
  },
  {
    "text": "of AWS batch thanks a lot oh",
    "start": "207920",
    "end": "213000"
  },
  {
    "text": "[Music]",
    "start": "213780",
    "end": "217409"
  }
]