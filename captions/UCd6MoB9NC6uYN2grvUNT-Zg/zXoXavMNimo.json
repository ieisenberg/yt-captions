[
  {
    "start": "0",
    "end": "19000"
  },
  {
    "text": "welcome everyone thank you for coming today my name is Todd Cignetti and I have with me Ram Romani and this is such",
    "start": "650",
    "end": "8220"
  },
  {
    "text": "an f ND 320 we're gonna be talking about ACM private CA root CA hierarchies for",
    "start": "8220",
    "end": "13670"
  },
  {
    "text": "AWS certificate manager private CA that's quite a mouthful I know so the",
    "start": "13670",
    "end": "20010"
  },
  {
    "start": "19000",
    "end": "52000"
  },
  {
    "text": "agenda for today is to talk about the challenges of operating a private CA and how the ACM private CA solves some of",
    "start": "20010",
    "end": "27480"
  },
  {
    "text": "those challenges we'll talk about use cases for a CA and private CA and have a",
    "start": "27480",
    "end": "33030"
  },
  {
    "text": "demonstration of creating a root CA hierarchy including a root and a subordinate CA and then we'll talk about",
    "start": "33030",
    "end": "39860"
  },
  {
    "text": "that'll take about 10 minutes to show how it's done but then we'll talk about the harder part which is actually",
    "start": "39860",
    "end": "45690"
  },
  {
    "text": "planning your CA hierarchy and some best practices for security around that so we",
    "start": "45690",
    "end": "53309"
  },
  {
    "start": "52000",
    "end": "84000"
  },
  {
    "text": "introduced ACM about three and a half years ago and ACM is our certificate",
    "start": "53309",
    "end": "58410"
  },
  {
    "text": "manager and while we were talking to customers about certificate management a lot of them talked about the problems of",
    "start": "58410",
    "end": "64228"
  },
  {
    "text": "certificate expiration and the problems of renewal and and we tried to solve",
    "start": "64229",
    "end": "69630"
  },
  {
    "text": "that with ACM but while we were talking to them in the area of certificates what came up a lot was customers also told us",
    "start": "69630",
    "end": "76619"
  },
  {
    "text": "they had a lot of problems managing and operating their own private CAS and so",
    "start": "76619",
    "end": "82140"
  },
  {
    "text": "about a year ago we introduced ACM private CA an ACM private CA is a",
    "start": "82140",
    "end": "87479"
  },
  {
    "start": "84000",
    "end": "174000"
  },
  {
    "text": "managed private CA service without the upfront investment and ongoing maintenance cost of operating your own",
    "start": "87479",
    "end": "93390"
  },
  {
    "text": "private CA there's no need to build your own CA infrastructure with ACM private",
    "start": "93390",
    "end": "99270"
  },
  {
    "text": "CA it's secure it's backed by FIPS 140-2 level 3 HSMs and there's no need for you",
    "start": "99270",
    "end": "107100"
  },
  {
    "text": "to manage the HSM s it's part of the service and the access controls auditing",
    "start": "107100",
    "end": "115079"
  },
  {
    "text": "and logging is built into the service so all of the controls you would want to",
    "start": "115079",
    "end": "121740"
  },
  {
    "text": "have in place around managing access to the CAS is built into the service and",
    "start": "121740",
    "end": "126899"
  },
  {
    "text": "you can configure these policies you can customize them but they're also AWS",
    "start": "126899",
    "end": "132599"
  },
  {
    "text": "defined pause these that are default managed policies that you can also use and so one of the",
    "start": "132599",
    "end": "140050"
  },
  {
    "text": "other benefits of and why we developed AC and private CA is to enable developers to issue certificates for",
    "start": "140050",
    "end": "148300"
  },
  {
    "text": "dynamic resources as they're building resources in the cloud to give them api's and give them the flexibility and",
    "start": "148300",
    "end": "155020"
  },
  {
    "text": "agility to issue certificates to identify those devices and resources and",
    "start": "155020",
    "end": "160260"
  },
  {
    "text": "with certificate manager we also integrated certificate manager with private CA so certificate manager gives",
    "start": "160260",
    "end": "167410"
  },
  {
    "text": "you the benefits of central management for both public and private certificates",
    "start": "167410",
    "end": "173670"
  },
  {
    "start": "174000",
    "end": "267000"
  },
  {
    "text": "so as of last week last Thursday we launched a new feature of a CM private",
    "start": "174989",
    "end": "180430"
  },
  {
    "text": "CA and we announced it publicly for the first time yesterday at the keynote here",
    "start": "180430",
    "end": "186640"
  },
  {
    "text": "at reinforce and that feature is root CA hierarchies for a CM private CA so",
    "start": "186640",
    "end": "192160"
  },
  {
    "text": "previously a CM private CA acted as a subordinate CA that chained up to an external root CA and you had to maintain",
    "start": "192160",
    "end": "199000"
  },
  {
    "text": "that root CA or intermediate CA infrastructure but we provided the",
    "start": "199000",
    "end": "204609"
  },
  {
    "text": "subordinates now with root CA hierarchies you can create a complete CA hierarchy including the root and",
    "start": "204609",
    "end": "211959"
  },
  {
    "text": "subordinate CAS with no need for external CAS so we support the entire hierarchy from root to intermediate to",
    "start": "211959",
    "end": "218200"
  },
  {
    "text": "subordinate issuing CAS and so what the",
    "start": "218200",
    "end": "223329"
  },
  {
    "text": "reason for having a root CA or a hierarchy of CAS is that a CA hierarchy",
    "start": "223329",
    "end": "229390"
  },
  {
    "text": "provides strong security and restrictive access controls for CAS at the top of the hierarchy like the root and",
    "start": "229390",
    "end": "235269"
  },
  {
    "text": "top-level we're in intermediates while having more permissive access and bulk",
    "start": "235269",
    "end": "241720"
  },
  {
    "text": "issuance for subordinate CA so allowing less restrictive access or more",
    "start": "241720",
    "end": "247180"
  },
  {
    "text": "permissive access to subordinate issuing CAS we're in a cloud environment you",
    "start": "247180",
    "end": "252400"
  },
  {
    "text": "might want your developers to be able to issue and entity certificates by accessing the CA but you don't want",
    "start": "252400",
    "end": "258579"
  },
  {
    "text": "necessarily developers who aren't administrators to access your root CA or top-level intermediates",
    "start": "258579",
    "end": "266450"
  },
  {
    "text": "so what this looks like before ACM privacy a hierarchies we had in this",
    "start": "266450",
    "end": "272640"
  },
  {
    "start": "267000",
    "end": "328000"
  },
  {
    "text": "diagram the existing CIA infrastructure was a root CA an intermediate say either",
    "start": "272640",
    "end": "278400"
  },
  {
    "text": "on premises or on a server running on an instance and you could create an issuing",
    "start": "278400",
    "end": "284310"
  },
  {
    "text": "CA and to chain it up to your root you generated a certificate signing request signed it by your intermediate CA and",
    "start": "284310",
    "end": "292080"
  },
  {
    "text": "then took that CA certificate and imported it into your issuing CA at that",
    "start": "292080",
    "end": "298290"
  },
  {
    "text": "point you're issuing CA was ready to issue trusted certificates that chained up to your root CA and as long as that",
    "start": "298290",
    "end": "304350"
  },
  {
    "text": "root ca's certificate is distributed in your environment those entity and entity",
    "start": "304350",
    "end": "309390"
  },
  {
    "text": "certificates would be trusted and this cave our customers a way to issue bulk",
    "start": "309390",
    "end": "315480"
  },
  {
    "text": "certificates for dynamic resources and they like this but they asked us they",
    "start": "315480",
    "end": "321270"
  },
  {
    "text": "wanted more they wanted we didn't solve the pain of operating the roots and the intermediate CAS so now with ACM private",
    "start": "321270",
    "end": "329580"
  },
  {
    "text": "CA hierarchies the entire infrastructure can be hosted on AWS with ACM private CA",
    "start": "329580",
    "end": "336570"
  },
  {
    "text": "a third party external CA is now optional before it was required the",
    "start": "336570",
    "end": "342450"
  },
  {
    "text": "process for enabling an issuing CA is the same as it was before creating the",
    "start": "342450",
    "end": "347970"
  },
  {
    "text": "CA generating a certificate signing request for that private key signing it with the intermediate and importing the",
    "start": "347970",
    "end": "356040"
  },
  {
    "text": "CA certificate into the issuing CA and RAM will show a demo a 10 minute demo of",
    "start": "356040",
    "end": "362550"
  },
  {
    "text": "how to create a two level hierarchy and how to use it to issue private certificates that's in a few minutes but",
    "start": "362550",
    "end": "368669"
  },
  {
    "text": "first let's talk about some of the reasons CAS are organized in a hierarchical structure and this is",
    "start": "368669",
    "end": "374730"
  },
  {
    "text": "basically a best practice and the primary reason that we create hierarchy",
    "start": "374730",
    "end": "379770"
  },
  {
    "text": "it's such a common structure is that it provides the most protection for the CAS",
    "start": "379770",
    "end": "385860"
  },
  {
    "text": "at the top of the hierarchy those CAS are the most restrictive most restricted and have the most trust because any",
    "start": "385860",
    "end": "394530"
  },
  {
    "text": "certificate issued that chains up to that root CA is trusted in that in and so we really want to protect against",
    "start": "394530",
    "end": "401860"
  },
  {
    "text": "mrs. Xuan particularly of a CA certificate that could be used in a way that's unconstrained and rogue CA",
    "start": "401860",
    "end": "409629"
  },
  {
    "text": "issuing trusted certificates is something we definitely want to avoid and so we we really provide a lot of",
    "start": "409629",
    "end": "415300"
  },
  {
    "text": "protection and access controls around the CAS at the top of the hierarchy conversely we want to grant more access",
    "start": "415300",
    "end": "422560"
  },
  {
    "text": "to more permissive access to subordinate CAS because we want those CAS to be",
    "start": "422560",
    "end": "428199"
  },
  {
    "text": "available and used to issue and entity certificates another reason for the CA",
    "start": "428199",
    "end": "434289"
  },
  {
    "text": "hierarchy structure is to give the ability to delegate access on the CA",
    "start": "434289",
    "end": "439810"
  },
  {
    "text": "boundary examples of this are - if you have different groups or different projects",
    "start": "439810",
    "end": "447009"
  },
  {
    "text": "and you want to have different CA administrators you can delegate access",
    "start": "447009",
    "end": "452020"
  },
  {
    "text": "to one CA for one project let's say an IOT application issuing certificates for devices has one CA administrator and a",
    "start": "452020",
    "end": "461400"
  },
  {
    "text": "CA that's generating issuing certificates for TLS endpoints within a",
    "start": "461400",
    "end": "466449"
  },
  {
    "text": "cloud environment as a completely different management structure and",
    "start": "466449",
    "end": "471460"
  },
  {
    "text": "control structure and policies - to govern it and so you can delegate access",
    "start": "471460",
    "end": "476590"
  },
  {
    "text": "to those CAS and keep them chained up to the same route by it but but delegate",
    "start": "476590",
    "end": "482009"
  },
  {
    "text": "access and then auditing and alarms for",
    "start": "482009",
    "end": "487419"
  },
  {
    "text": "every certificate we issue by the route is something we we recommend and we want",
    "start": "487419",
    "end": "493990"
  },
  {
    "text": "to have these different policies so if a root CA issues a certificate that may that may be cause for an alarm something",
    "start": "493990",
    "end": "500319"
  },
  {
    "text": "you want to you want to know about because it's such a rare event that your root CA is generally used to only issue",
    "start": "500319",
    "end": "506229"
  },
  {
    "text": "certificates for subordinate CAS that's an uncommon operation whereas for",
    "start": "506229",
    "end": "511270"
  },
  {
    "text": "subordinate issuing CAS they issue certificates in bulk maybe thousands of certificates per day you want to audit",
    "start": "511270",
    "end": "517630"
  },
  {
    "text": "random samples but you're not going to have the bandwidth to look at every single certificate in depth and so",
    "start": "517630",
    "end": "523300"
  },
  {
    "text": "that's another reason why we we have a hierarchy so we can we can separate these controls and and policies",
    "start": "523300",
    "end": "532200"
  },
  {
    "text": "next a question is what to what can end entity certificates issued by private CA",
    "start": "532200",
    "end": "538410"
  },
  {
    "text": "identify so TLS end points and resources things like websites databases servers",
    "start": "538410",
    "end": "545410"
  },
  {
    "text": "instances containers anytime you have server-to-server communication connected",
    "start": "545410",
    "end": "550480"
  },
  {
    "text": "with TLS you can use TLS certificates issued by ECM private CA IPSec VPN",
    "start": "550480",
    "end": "556240"
  },
  {
    "text": "endpoints is another application either in conjunction with TLS on top of",
    "start": "556240",
    "end": "561400"
  },
  {
    "text": "running on top of TLS to provide an extra layer of protection or instead of",
    "start": "561400",
    "end": "566620"
  },
  {
    "text": "TLS IPSec VPN provides secure network connectivity another use case or",
    "start": "566620",
    "end": "574390"
  },
  {
    "text": "application is for dynamic cloud resources resources like containers and instances that are created with",
    "start": "574390",
    "end": "580360"
  },
  {
    "text": "auto-scaling or or cloud formation other automation that automatically creates resources can",
    "start": "580360",
    "end": "589090"
  },
  {
    "text": "call ACM private CA api's to issue certificates to identify those resources and finally iot devices we have a lot of",
    "start": "589090",
    "end": "597190"
  },
  {
    "text": "customers issuing certificates involved to identify their iot devices one example is alexa for business uses",
    "start": "597190",
    "end": "605380"
  },
  {
    "text": "ACM private CA to identify amazon echo devices on enterprise wpa2 Wi-Fi",
    "start": "605380",
    "end": "611650"
  },
  {
    "text": "networks and there's a public use case on that you can look it up there's a",
    "start": "611650",
    "end": "616960"
  },
  {
    "text": "couple use cases that are not well supported today involving certificate enrollment protocols and the primary one",
    "start": "616960",
    "end": "625090"
  },
  {
    "text": "that a lot of customers are asking for and we're definitely considering for the future is to issue a dcs Active",
    "start": "625090",
    "end": "632140"
  },
  {
    "text": "Directory certificate services certificates that support auto enrollment in a Microsoft ADCs",
    "start": "632140",
    "end": "638440"
  },
  {
    "text": "environment that's not supported today it's something we're definitely thinking about and the other common application",
    "start": "638440",
    "end": "643570"
  },
  {
    "text": "that we hear from customers is to identify mobile devices over Skype simple certificate enrollment protocol",
    "start": "643570",
    "end": "649720"
  },
  {
    "text": "and that's something again we're thinking about for the future some of",
    "start": "649720",
    "end": "655390"
  },
  {
    "start": "654000",
    "end": "796000"
  },
  {
    "text": "the use cases that a cm private CA supports today and creating a hierarchy number one is to replace software or",
    "start": "655390",
    "end": "664000"
  },
  {
    "text": "server base CA how many of us have are aware of",
    "start": "664000",
    "end": "669180"
  },
  {
    "text": "developers or are other folks in our organization that for lack of a better solution have created open SSL route CAS",
    "start": "669180",
    "end": "677230"
  },
  {
    "text": "and are using them to issue certificates the other alternative that I frequently",
    "start": "677230",
    "end": "682269"
  },
  {
    "text": "see is developers or other individuals that are creating self-signed",
    "start": "682269",
    "end": "687279"
  },
  {
    "text": "certificates and ACM Pro I private CA really provides a much better solution",
    "start": "687279",
    "end": "692699"
  },
  {
    "text": "fundamental security with HSM backing as an alternative to those cases the other",
    "start": "692699",
    "end": "698829"
  },
  {
    "text": "case that ACM private CA supports not on the slide but replacing a CA that's",
    "start": "698829",
    "end": "705100"
  },
  {
    "text": "backed by an HSM it's an online online CA backed by an HSM where you are",
    "start": "705100",
    "end": "711430"
  },
  {
    "text": "operating that infrastructure you are operating those servers ACM private CA can can replace that the other use case",
    "start": "711430",
    "end": "719980"
  },
  {
    "text": "that we're hearing is customers and this is this is one that may not be for",
    "start": "719980",
    "end": "725260"
  },
  {
    "text": "everyone but to replace an offline root CA we'll talk about the pros and cons of this from a security perspective I would",
    "start": "725260",
    "end": "731199"
  },
  {
    "text": "tell you you can't go wrong with an offline root CA there's the the it's",
    "start": "731199",
    "end": "737250"
  },
  {
    "text": "absolutely disconnected from the network it requires physical access to issue certificates and and that's great there",
    "start": "737250",
    "end": "745060"
  },
  {
    "text": "are alternatives now where we can provide logical controls and logical",
    "start": "745060",
    "end": "750160"
  },
  {
    "text": "isolation for an online root CA if that meets your requirements you can do that with a CM private CA the less use case",
    "start": "750160",
    "end": "759070"
  },
  {
    "text": "is to complement an existing root CA so if you have an existing root CA infrastructure and you want to do some",
    "start": "759070",
    "end": "764949"
  },
  {
    "text": "testing or you want to get started quickly you can stand up another root CA hierarchy in AWS and use that to",
    "start": "764949",
    "end": "772569"
  },
  {
    "text": "identify resources in a limited trust zone you can create a boundary of instances and resources that trust those",
    "start": "772569",
    "end": "780640"
  },
  {
    "text": "certificates without going and using your your external third party CA and",
    "start": "780640",
    "end": "787000"
  },
  {
    "text": "that's a way to get started quickly with dev test and production on the kiled infrastructure with API based",
    "start": "787000",
    "end": "792699"
  },
  {
    "text": "certificates to identify resources so at this point Ram Romani is going to",
    "start": "792699",
    "end": "800760"
  },
  {
    "text": "demonstrate how to create see a hierarchy I'm just gonna let this play",
    "start": "800760",
    "end": "808850"
  },
  {
    "text": "we're going to show you a demonstration of ACN private CA and use this diagram",
    "start": "814050",
    "end": "820290"
  },
  {
    "text": "as the architecture so this architecture there is an application load balancer which is backed by a lambda function and",
    "start": "820290",
    "end": "826950"
  },
  {
    "text": "the lambda function supplies HTML code back to the application of balancer at",
    "start": "826950",
    "end": "832230"
  },
  {
    "text": "the goal is to establish a secure TLS connection between this Firefox browser and alb and the Firefox browser is gonna",
    "start": "832230",
    "end": "840150"
  },
  {
    "text": "hit this domain ECM demo comm this private domain and the certificate for",
    "start": "840150",
    "end": "846120"
  },
  {
    "text": "the private domain is going to come from the ECM service the CF hierarchy that we will use for this demo is gonna be",
    "start": "846120",
    "end": "852180"
  },
  {
    "text": "having two levels one of the routes here and then the subordinate CA the subordinate CA will issue a and a ten to",
    "start": "852180",
    "end": "859140"
  },
  {
    "text": "ten and a certificate that will go on the application load balancer this is",
    "start": "859140",
    "end": "866490"
  },
  {
    "text": "only one application of using a private certificate and for hitting a private",
    "start": "866490",
    "end": "871500"
  },
  {
    "text": "website but there are many others so let's take a look at how this works I'm",
    "start": "871500",
    "end": "876570"
  },
  {
    "start": "874000",
    "end": "1397000"
  },
  {
    "text": "going to go to the AWS console under the aw certificate manager service and click on get started under private certificate",
    "start": "876570",
    "end": "883500"
  },
  {
    "text": "authority you have two options either to",
    "start": "883500",
    "end": "888540"
  },
  {
    "text": "create a root CA or a subordinate CA we'll start with creating a root CA click Next and then organizations will",
    "start": "888540",
    "end": "896310"
  },
  {
    "text": "type in as my company leave the rest of the field is blank and common name say",
    "start": "896310",
    "end": "902550"
  },
  {
    "text": "my company root CA generation 1 you can have multiple certificate of different",
    "start": "902550",
    "end": "907830"
  },
  {
    "text": "generation but in this case if this is the first one I'm going to call it g1 or generation 1 and the certificate P",
    "start": "907830",
    "end": "915990"
  },
  {
    "text": "algorithm is going to be our say 2048 we will not enable the error distribution",
    "start": "915990",
    "end": "921300"
  },
  {
    "text": "for this demo no tags and for",
    "start": "921300",
    "end": "927060"
  },
  {
    "text": "configuring CA permissions are authorizing or denying ACM permission to renew private subscriber certificates we",
    "start": "927060",
    "end": "933420"
  },
  {
    "text": "will deny it because we're not going to use your energy and energy certificates using the root CA click Next and make",
    "start": "933420",
    "end": "940830"
  },
  {
    "text": "sure all the information is accurate so you can see here that",
    "start": "940830",
    "end": "945860"
  },
  {
    "text": "information as as I typed it if you want to change it you can always change by editing it by clicking right here or",
    "start": "945860",
    "end": "952020"
  },
  {
    "text": "this icon so click to confirm that you understand that we will charge a monthly",
    "start": "952020",
    "end": "957210"
  },
  {
    "text": "fee and then confirm and create so at this point the root CA keeper has been",
    "start": "957210",
    "end": "963510"
  },
  {
    "text": "created and we'll click on get started to take the root CA CSR and sign it by",
    "start": "963510",
    "end": "969870"
  },
  {
    "text": "the root CS private key think of it as a self signing the Canada will set the valid the valid ID to ten years and the",
    "start": "969870",
    "end": "976440"
  },
  {
    "text": "signature algorithm as two to six with RSA there are others if you choose to do so click Next and then confirm and",
    "start": "976440",
    "end": "982920"
  },
  {
    "text": "install it takes about two or three seconds and after which you will see on the console that there is an active root",
    "start": "982920",
    "end": "990450"
  },
  {
    "text": "CA with the common name that we created my company root CA g1 the next step for",
    "start": "990450",
    "end": "996030"
  },
  {
    "text": "us is to create a subordinate CA so click on create CA select subordinate CA",
    "start": "996030",
    "end": "1001970"
  },
  {
    "text": "and then you keep the same organization name leave the other fields as blank and",
    "start": "1001970",
    "end": "1008510"
  },
  {
    "text": "the common name is going to be my company subordinate CA in generation 1",
    "start": "1008510",
    "end": "1018400"
  },
  {
    "text": "click Next the certificate authority key algorithm RSA 2048 we will not enable",
    "start": "1018400",
    "end": "1025520"
  },
  {
    "text": "see our own distribution for this demo no tags and in this case I'm gonna",
    "start": "1025520",
    "end": "1032390"
  },
  {
    "text": "authorize a you seem to use the ca for renewals because we're gonna issue end entity certificates with the subordinate",
    "start": "1032390",
    "end": "1038780"
  },
  {
    "text": "CA make next make sure all the information is accurate it looks good and then click to confirm that you",
    "start": "1038780",
    "end": "1045050"
  },
  {
    "text": "understand the pricing module and control and create so the next step is",
    "start": "1045050",
    "end": "1052880"
  },
  {
    "text": "to install the CA certificate to activate your subordinate CA let's get started there are two options",
    "start": "1052880",
    "end": "1058160"
  },
  {
    "text": "one is you can either select the root CA that you actually own and you can bring",
    "start": "1058160",
    "end": "1065060"
  },
  {
    "text": "that in or you can use the fruits here that you just created with an AC and pcs cells so we will go with the option",
    "start": "1065060",
    "end": "1071210"
  },
  {
    "text": "where every the first option is in private CA click next select the routes here that we just",
    "start": "1071210",
    "end": "1077220"
  },
  {
    "text": "created with the common name my company root CA Giovanni let's set the validity",
    "start": "1077220",
    "end": "1082710"
  },
  {
    "text": "to three years and the signature algorithm is shocked 256 with RSA and you see this parameter here called path",
    "start": "1082710",
    "end": "1089280"
  },
  {
    "text": "length the path 1 you have three or four options 0 we can set it to zero one two",
    "start": "1089280",
    "end": "1094410"
  },
  {
    "text": "or three we're gonna set it as zero setting the path one to zero means that the this subordinate CA can issue only",
    "start": "1094410",
    "end": "1101429"
  },
  {
    "text": "an entity certificates and not CA certificates this is a security best practice to ensure that the subordinate",
    "start": "1101429",
    "end": "1107610"
  },
  {
    "text": "CA is issuing cannot issue a CIS certificate so let's click Next and then",
    "start": "1107610",
    "end": "1115890"
  },
  {
    "text": "click generate so there you can see now",
    "start": "1115890",
    "end": "1122490"
  },
  {
    "text": "that there is a subordinate CA with the common name my company's subordinate CA",
    "start": "1122490",
    "end": "1127770"
  },
  {
    "text": "g1 the next step for us to go to the certificate manager and create a private",
    "start": "1127770",
    "end": "1133500"
  },
  {
    "text": "certificate so we'll request private",
    "start": "1133500",
    "end": "1142799"
  },
  {
    "text": "certificate and select the subordinates here that we just created and the deme",
    "start": "1142799",
    "end": "1150390"
  },
  {
    "text": "domain I'm going to put it as lb dot HTM the more comp review and request confirm",
    "start": "1150390",
    "end": "1158880"
  },
  {
    "text": "to the demo domain looks good and the CA is that's important CA so takes about",
    "start": "1158880",
    "end": "1164820"
  },
  {
    "text": "two or three seconds and you're gonna have a private certificate for the domain lb dot HTM demo dot com so there",
    "start": "1164820",
    "end": "1171720"
  },
  {
    "text": "you go the certificate is issued and ready to go so let's now go to the ec2",
    "start": "1171720",
    "end": "1179669"
  },
  {
    "text": "service and find the load balancer on which we can put the private certificate so just to let you know this",
    "start": "1179669",
    "end": "1186210"
  },
  {
    "text": "architecture that I showed earlier this is pre created with a lb and the lambda functions have been pre created using a",
    "start": "1186210",
    "end": "1193049"
  },
  {
    "text": "cloud formation template so I'm not going to create it manually during this demonstration so let me go back here",
    "start": "1193049",
    "end": "1201489"
  },
  {
    "text": "go to the load balancing section and you will see that there is a load balancer",
    "start": "1201489",
    "end": "1207350"
  },
  {
    "text": "that it has been pre-created squared the listeners and I'm gonna add an HTTP",
    "start": "1207350",
    "end": "1212929"
  },
  {
    "text": "listener so that GTP's listener will be listening on port 443 the default action",
    "start": "1212929",
    "end": "1218690"
  },
  {
    "text": "is going to be forward to the lambda origin which is going to give the HTML code back TLB and for the certificate",
    "start": "1218690",
    "end": "1224389"
  },
  {
    "text": "I'm going to select a certificate for the private domain that we just created and click Save",
    "start": "1224389",
    "end": "1230649"
  },
  {
    "text": "so at this point the certificate has been applied to the alb so the next step",
    "start": "1230649",
    "end": "1236419"
  },
  {
    "text": "for us is we're going to go and try to get this private domain let's see what",
    "start": "1236419",
    "end": "1245869"
  },
  {
    "text": "happens so change that the connection is not secure the reason is that the root",
    "start": "1245869",
    "end": "1254029"
  },
  {
    "text": "CA certificate is not available in the Firefox browsers trust store and hence",
    "start": "1254029",
    "end": "1259330"
  },
  {
    "text": "Firefox cannot trust this website so the goal for us is to next put the root CA",
    "start": "1259330",
    "end": "1266330"
  },
  {
    "text": "certificate inside the trustor of the firefox browser so i'm going to do this really quickly so let me go back to the",
    "start": "1266330",
    "end": "1274519"
  },
  {
    "text": "certificate manager service and i'm",
    "start": "1274519",
    "end": "1282350"
  },
  {
    "text": "going to go pick up the root CA certificate",
    "start": "1282350",
    "end": "1287739"
  },
  {
    "text": "but let me select the roots here and go to the CA certificate and I'm gonna",
    "start": "1290170",
    "end": "1295990"
  },
  {
    "text": "download this certificate body to a farm alright so this is called certificate",
    "start": "1295990",
    "end": "1304410"
  },
  {
    "text": "dot Pam so there you go through this Bob and I'm gonna go and references and",
    "start": "1304410",
    "end": "1312750"
  },
  {
    "text": "import the certificate dot Pam so let's go here do this quickly typically in",
    "start": "1312750",
    "end": "1318610"
  },
  {
    "text": "your imagination you will be using automation for importing root certificates into your trust or I'm just",
    "start": "1318610",
    "end": "1324760"
  },
  {
    "text": "doing this manually here so so at this",
    "start": "1324760",
    "end": "1334900"
  },
  {
    "text": "point I have actually added the root CA certificate into the trustor so next the gold process is to see whether now the",
    "start": "1334900",
    "end": "1342130"
  },
  {
    "text": "certificate is crossed out and we are able to establish secure connection with",
    "start": "1342130",
    "end": "1347340"
  },
  {
    "text": "with alb and the lambda code HTML is relayed back to the browser",
    "start": "1347340",
    "end": "1353140"
  },
  {
    "text": "let's take a look there you go so you can see here that there is a trusted lock icon and this private domain is",
    "start": "1353140",
    "end": "1359560"
  },
  {
    "text": "trusted by the browser which means that the private certificate is valid and trusted and you can see the hello world",
    "start": "1359560",
    "end": "1366430"
  },
  {
    "text": "has been given back by the lambda function and relate all the way back to",
    "start": "1366430",
    "end": "1371680"
  },
  {
    "text": "the Firefox browser so we were able to create a private certificate authority",
    "start": "1371680",
    "end": "1377110"
  },
  {
    "text": "hierarchy and then issue an end entity certificate and then go back to the application load balancer and put that",
    "start": "1377110",
    "end": "1384100"
  },
  {
    "text": "energy certificate and make it trusted by the Firefox browser thank you this is",
    "start": "1384100",
    "end": "1389260"
  },
  {
    "text": "what I'm going to show you thanks Thank You Ram",
    "start": "1389260",
    "end": "1395550"
  },
  {
    "text": "so now that room showed how easy it is to create the hierarchy I want to talk",
    "start": "1397960",
    "end": "1403250"
  },
  {
    "text": "about some of the complexities and things you need to think about because as we all know PKI infrastructure tends",
    "start": "1403250",
    "end": "1409460"
  },
  {
    "text": "to last a long time he showed in the demo a route lasting validity period of 10 years so we want to think about",
    "start": "1409460",
    "end": "1416240"
  },
  {
    "text": "carefully about our environment and the CA infrastructure that we create so some",
    "start": "1416240",
    "end": "1421760"
  },
  {
    "text": "of the things this is probably a partial list so some of the things we want to think about are the key types and key",
    "start": "1421760",
    "end": "1427700"
  },
  {
    "text": "sizes RSA 2048 is the most common most accepted key size and key type but some",
    "start": "1427700",
    "end": "1436909"
  },
  {
    "text": "some customers have a requirement to use RSA 4096 certificates and typically we",
    "start": "1436909",
    "end": "1442399"
  },
  {
    "text": "see elliptic curve ECDSA certificates for customers who are issuing certificates for IOT devices because of",
    "start": "1442399",
    "end": "1449779"
  },
  {
    "text": "the reduced complexity of processing smaller keys so you want to think about",
    "start": "1449779",
    "end": "1457309"
  },
  {
    "text": "those things next revocation configuration ACM private CA can generate TRL's and send",
    "start": "1457309",
    "end": "1464600"
  },
  {
    "text": "them to your s3 bucket REM didn't show that in the demo but that's if he had clicked the button for CRLs we could we",
    "start": "1464600",
    "end": "1471110"
  },
  {
    "text": "would ask you for a bucket and send those to an s3 bucket you want to make sure your s3 bucket is reachable from",
    "start": "1471110",
    "end": "1476809"
  },
  {
    "text": "all of your clients that are going to be checking for certificate revocation the",
    "start": "1476809",
    "end": "1482330"
  },
  {
    "text": "other configuration setting we recommend is to and create a cname or a canonical",
    "start": "1482330",
    "end": "1487429"
  },
  {
    "text": "name that's a level of indirection to your s3 bucket so that the URI that goes",
    "start": "1487429",
    "end": "1493130"
  },
  {
    "text": "into the certificates that the client uses to look up the CRL is using a",
    "start": "1493130",
    "end": "1498620"
  },
  {
    "text": "friendly name instead of the exact bucket name and that allows you some flexibility later if you want to or need",
    "start": "1498620",
    "end": "1504529"
  },
  {
    "text": "to change the s3 bucket name you won't have to reissue those certificates they'll just use the the same cname next",
    "start": "1504529",
    "end": "1513889"
  },
  {
    "text": "thing to think about is AWS cloud trail logging for all of your API calls we I",
    "start": "1513889",
    "end": "1519950"
  },
  {
    "text": "strongly recommend turning this on so that you'll have audit log of every API call made against your CA you'll be able",
    "start": "1519950",
    "end": "1527480"
  },
  {
    "text": "to go down go back and track and see all the information about the API call",
    "start": "1527480",
    "end": "1533010"
  },
  {
    "text": "that was made and of course with a managed service like ACM private CA any",
    "start": "1533010",
    "end": "1538279"
  },
  {
    "text": "operation that you take any action that you take is done through an API call Ram",
    "start": "1538279",
    "end": "1543690"
  },
  {
    "text": "showed everything Ram showed in the console has an equivalent API and CLI",
    "start": "1543690",
    "end": "1549929"
  },
  {
    "text": "command line interface command to create those resources using automation and all",
    "start": "1549929",
    "end": "1558659"
  },
  {
    "text": "of those API commands can be logged into Cloud trail so you can see exactly what",
    "start": "1558659",
    "end": "1563730"
  },
  {
    "text": "was done and go back in time next is called watch metrics for alarms and",
    "start": "1563730",
    "end": "1570390"
  },
  {
    "text": "notifications ACM private CA can send a cloud watch metric for every certificate",
    "start": "1570390",
    "end": "1575789"
  },
  {
    "text": "issued successfully every failure and every time a crl is generated so for",
    "start": "1575789",
    "end": "1582539"
  },
  {
    "text": "example in for a root CA you might want to take that called watch metric and",
    "start": "1582539",
    "end": "1587850"
  },
  {
    "text": "generate an alarm if the root CA issues a certificate that's an uncommon",
    "start": "1587850",
    "end": "1593730"
  },
  {
    "text": "operation we talked about that before but generating an alarm based on that will alert you if there's any",
    "start": "1593730",
    "end": "1599809"
  },
  {
    "text": "unauthorized access or use of the of the root CA now you wouldn't want to do that",
    "start": "1599809",
    "end": "1605909"
  },
  {
    "text": "for bulk issuance subordinate CAS but what for roots it makes sense or even",
    "start": "1605909",
    "end": "1611580"
  },
  {
    "text": "high-level top level intermediate CAS next you want to think about audit reporting and you want to think about",
    "start": "1611580",
    "end": "1618409"
  },
  {
    "text": "who's doing the auditing how frequently are they auditing what are they looking",
    "start": "1618409",
    "end": "1623429"
  },
  {
    "text": "for and does how are they matching up what - what they see in the audit report with what actually happened in your",
    "start": "1623429",
    "end": "1630360"
  },
  {
    "text": "environment next are access policies and I'll go",
    "start": "1630360",
    "end": "1635789"
  },
  {
    "text": "into some depth about some of the logical access controls you can put in place but you want to think about who",
    "start": "1635789",
    "end": "1642059"
  },
  {
    "text": "can access the CAS who's an administrator role versus who has access to the CAS to only issue and revoke",
    "start": "1642059",
    "end": "1649110"
  },
  {
    "text": "certificates and we have a CM private CA has managed policies that allow you to",
    "start": "1649110",
    "end": "1655100"
  },
  {
    "text": "their policies managed by AWS that you can use as a basis I'll talk about those",
    "start": "1655100",
    "end": "1661320"
  },
  {
    "text": "a bit more and finally the CA lifecycle management how long is the validity period of your",
    "start": "1661320",
    "end": "1667440"
  },
  {
    "text": "CAS what is your plan for replacing a CA near the end of its lifetime you have",
    "start": "1667440",
    "end": "1673530"
  },
  {
    "text": "two options the best practice is generally considered to be stand up a new CA and keep the old CA running until",
    "start": "1673530",
    "end": "1682200"
  },
  {
    "text": "its lifetime expires but with the new CA start issuing new certificates from the new CA and and so on you also have the",
    "start": "1682200",
    "end": "1690450"
  },
  {
    "text": "alternative to issue a new certificate with a longer lifetime but that's that's",
    "start": "1690450",
    "end": "1695940"
  },
  {
    "text": "something you want to you want to think about and decide so some security best",
    "start": "1695940",
    "end": "1701250"
  },
  {
    "start": "1699000",
    "end": "1714000"
  },
  {
    "text": "practices again unless you know better ones these are things that we've found",
    "start": "1701250",
    "end": "1706340"
  },
  {
    "text": "in our environment at Amazon and from talking to customers that are our best",
    "start": "1706340",
    "end": "1712650"
  },
  {
    "text": "practices okay so the most controversial one here I think at a security",
    "start": "1712650",
    "end": "1718380"
  },
  {
    "start": "1714000",
    "end": "1847000"
  },
  {
    "text": "conference is to challenge the notion that of having an offline CA versus an",
    "start": "1718380",
    "end": "1723960"
  },
  {
    "text": "online CA and what an offline CA is is essentially it's a physical HSM it's",
    "start": "1723960",
    "end": "1729600"
  },
  {
    "text": "never connected to the network and it's typically stored in a vault so it",
    "start": "1729600",
    "end": "1734760"
  },
  {
    "text": "requires physical access frequently it requires two person access to get to the CA and of course the the main benefit of",
    "start": "1734760",
    "end": "1742590"
  },
  {
    "text": "this is the no network access it literally requires physical control of the device and as long as you can",
    "start": "1742590",
    "end": "1748890"
  },
  {
    "text": "control the physical access to the device you can control what certificates are issued and on top of that usually",
    "start": "1748890",
    "end": "1756030"
  },
  {
    "text": "the HSM has additional controls you may have multi person access you may need",
    "start": "1756030",
    "end": "1761580"
  },
  {
    "text": "for security officers out of six to you know walk around the HSM and enter their",
    "start": "1761580",
    "end": "1767040"
  },
  {
    "text": "pin codes before the HSM is operational of course the alternative is logical",
    "start": "1767040",
    "end": "1774120"
  },
  {
    "text": "access controls on an online CA an online route CA and the only benefit",
    "start": "1774120",
    "end": "1780270"
  },
  {
    "text": "really there is that there's a couple benefits that you can provide logical",
    "start": "1780270",
    "end": "1786710"
  },
  {
    "text": "access controls and restrict access logically instead of physically and in",
    "start": "1786710",
    "end": "1792180"
  },
  {
    "text": "the case where you have an operational event and you need to get to your CA and there's a",
    "start": "1792180",
    "end": "1797550"
  },
  {
    "text": "locked door between you and the root CA and you can't get to it",
    "start": "1797550",
    "end": "1802680"
  },
  {
    "text": "or you don't have a quorum and you have to gather people in there you know it's two o'clock in the morning an offline",
    "start": "1802680",
    "end": "1809070"
  },
  {
    "text": "route CA can be a burden an online route CA can give you a mechanism for",
    "start": "1809070",
    "end": "1814970"
  },
  {
    "text": "convening a quorum more quickly and and issuing in in the event of an",
    "start": "1814970",
    "end": "1820860"
  },
  {
    "text": "operational issue and of course you can have combinations you can have an offline route that you rarely or if ever",
    "start": "1820860",
    "end": "1826500"
  },
  {
    "text": "use locked in a vault and have a top level intermediate CA in AC and private",
    "start": "1826500",
    "end": "1832200"
  },
  {
    "text": "CA that has a long lifetime and you can set up you can design this any way you",
    "start": "1832200",
    "end": "1838770"
  },
  {
    "text": "want but those are the pros and cons some of the pros and cons of an online versus an offline route CA",
    "start": "1838770",
    "end": "1847220"
  },
  {
    "start": "1847000",
    "end": "2029000"
  },
  {
    "text": "so I've talked before a little bit about logical access controls and here are some best practices around controlling",
    "start": "1847520",
    "end": "1853680"
  },
  {
    "text": "access and isolating a root CA or a top level a top level intermediate CA first",
    "start": "1853680",
    "end": "1861900"
  },
  {
    "text": "of all recommend using separate AWS accounts for your route CA or top level",
    "start": "1861900",
    "end": "1867030"
  },
  {
    "text": "intermediate CA s and this allows you to strictly limit access to the account",
    "start": "1867030",
    "end": "1872100"
  },
  {
    "text": "where the root CA lives so that only certain people only certain groups have access to that account you can have less",
    "start": "1872100",
    "end": "1879810"
  },
  {
    "text": "restrictive policies for subordinate issuing CAS that allow your developers to issue certificates where the users of",
    "start": "1879810",
    "end": "1886590"
  },
  {
    "text": "your certificates to have access to the subordinates but they don't even have access to the AWS account where the root",
    "start": "1886590",
    "end": "1892140"
  },
  {
    "text": "or top-level intermediates live within an account for your subordinate CAS or",
    "start": "1892140",
    "end": "1897750"
  },
  {
    "text": "issuing CAS you can have I am access controls and the basic basic policies",
    "start": "1897750",
    "end": "1905250"
  },
  {
    "text": "are to use AWS managed iam policies and with AWS manage policies are predefined",
    "start": "1905250",
    "end": "1914040"
  },
  {
    "text": "policies managed by AWS and for private CA there are five predefined policies",
    "start": "1914040",
    "end": "1919920"
  },
  {
    "text": "there's full access which is complete administrative access to do anything there's a privileged user that is a CA",
    "start": "1919920",
    "end": "1926610"
  },
  {
    "text": "administrator that only has the ability to issue you see a certificate and then a user",
    "start": "1926610",
    "end": "1932370"
  },
  {
    "text": "which has only the ability to issue and entity certificates to identify devices",
    "start": "1932370",
    "end": "1938010"
  },
  {
    "text": "and resources and then there's an auditor and a read-only manage policy",
    "start": "1938010",
    "end": "1944180"
  },
  {
    "text": "and I'll I'll go into detail and show you what one of these policies looks like on the next slide another",
    "start": "1944180",
    "end": "1950520"
  },
  {
    "text": "recommendation is to disable your intermediate and route CAS by default the action of disabling the CA allows it",
    "start": "1950520",
    "end": "1959130"
  },
  {
    "text": "to continue generating certificate revocation list and posting them to s3 but no new certificates can be issued",
    "start": "1959130",
    "end": "1968160"
  },
  {
    "text": "from that CA and so one recommendation is to create a custom policies where one",
    "start": "1968160",
    "end": "1974640"
  },
  {
    "text": "group of users can only enable and disable the CA and a distinct separate",
    "start": "1974640",
    "end": "1979890"
  },
  {
    "text": "group can only issue certificates and this gives you effectively two-person",
    "start": "1979890",
    "end": "1985740"
  },
  {
    "text": "control to issue a certificate up from the root requires one person from the",
    "start": "1985740",
    "end": "1990780"
  },
  {
    "text": "first group to enable the CA and the second person from a separate group to",
    "start": "1990780",
    "end": "1996300"
  },
  {
    "text": "issue the certificate and this is really a best practice for restricting access logically to a root or top level",
    "start": "1996300",
    "end": "2003530"
  },
  {
    "text": "intermediate CA and since we're talking about access controls I also want to",
    "start": "2003530",
    "end": "2008570"
  },
  {
    "text": "talk about auditing and logging it's important for your top-level roots and intermediates to configure auditing and",
    "start": "2008570",
    "end": "2016010"
  },
  {
    "text": "logging so that you're carefully monitoring every certificate that these important top-level CAS are issuing as I",
    "start": "2016010",
    "end": "2024050"
  },
  {
    "text": "mentioned before you can also alarm on every certificate issued by the root and now let's look at an example privileged",
    "start": "2024050",
    "end": "2033140"
  },
  {
    "start": "2029000",
    "end": "2150000"
  },
  {
    "text": "user manage policy for ACM private CA so what this policy then this is just a",
    "start": "2033140",
    "end": "2038210"
  },
  {
    "text": "part of the policy the policy has different different sections this section is the one that controls the",
    "start": "2038210",
    "end": "2045559"
  },
  {
    "text": "issue certificate action and so what this does is the effect is allow and the",
    "start": "2045559",
    "end": "2052490"
  },
  {
    "text": "action is PCA issue certificate so this is going to control who can issue",
    "start": "2052490",
    "end": "2058010"
  },
  {
    "text": "certificates and it's very specific the resource in this case is any",
    "start": "2058010",
    "end": "2064049"
  },
  {
    "text": "you can actually narrow this down if you want to have different policies for different cas you can do that by specifying which resources this applies",
    "start": "2064049",
    "end": "2070919"
  },
  {
    "text": "to and the conditions string like references a template and the way ACM",
    "start": "2070919",
    "end": "2077579"
  },
  {
    "text": "private CA issues CA certificates is you give it a template that tells it to",
    "start": "2077579",
    "end": "2083908"
  },
  {
    "text": "issue a CA certificate the CA certificate looks a little bit different than end entity certificates in that and entity certificates don't have the CA",
    "start": "2083909",
    "end": "2093200"
  },
  {
    "text": "extension included your basic constraints extension with CA true they have typically don't have basic",
    "start": "2093200",
    "end": "2099029"
  },
  {
    "text": "constraints configured whereas CA certificates have a basic constraints extension CA true and typically they",
    "start": "2099029",
    "end": "2106200"
  },
  {
    "text": "have a path length specified so what this policy does is say on the on the left side it's allow this assigned user",
    "start": "2106200",
    "end": "2115079"
  },
  {
    "text": "or group to issue CA certificates and there's an explicit deny on the right side to issue certificates that are not",
    "start": "2115079",
    "end": "2122880"
  },
  {
    "text": "CA certificates and so what this user can do is according to this policy is",
    "start": "2122880",
    "end": "2128279"
  },
  {
    "text": "only issue CA certificates and not issue and end to these certificates so this is",
    "start": "2128279",
    "end": "2133529"
  },
  {
    "text": "a good policy for a CA administrator who really should only have access to managing the CAS and generating",
    "start": "2133529",
    "end": "2139500"
  },
  {
    "text": "subordinate CAS there's an equivalent policy for end entity certificates to",
    "start": "2139500",
    "end": "2145109"
  },
  {
    "text": "allow issuance with a template for and entity certificates next a couple a",
    "start": "2145109",
    "end": "2153420"
  },
  {
    "start": "2150000",
    "end": "2267000"
  },
  {
    "text": "couple points about constructing your CA hierarchy and how do we think about the",
    "start": "2153420",
    "end": "2158430"
  },
  {
    "text": "hierarchy one of the one of the important constraints is what is the height of of the CA hierarchy and in",
    "start": "2158430",
    "end": "2166289"
  },
  {
    "text": "this tree diagram this has a height of 3 and that's basically counting each level",
    "start": "2166289",
    "end": "2171299"
  },
  {
    "text": "starting with the root and one for each level and one thing we recommend is to",
    "start": "2171299",
    "end": "2178140"
  },
  {
    "text": "use the path constraints I just talked about it's an extension in the basic",
    "start": "2178140",
    "end": "2183329"
  },
  {
    "text": "constraints that can configure and limit how many CAS are below this CA in the",
    "start": "2183329",
    "end": "2188609"
  },
  {
    "text": "hierarchy really important for the subordinate CAS that have potentially without this constraint could issue CA",
    "start": "2188609",
    "end": "2196079"
  },
  {
    "text": "certificates what the path constraint path link constraint does is ensures that your",
    "start": "2196079",
    "end": "2202240"
  },
  {
    "text": "subordinate issuing CAS cannot issue CA certificates and that prevents them from issuing CA certificates that if if",
    "start": "2202240",
    "end": "2210160"
  },
  {
    "text": "issued could be used in an uncontrolled way to issue certificates for your environment path link constraint really",
    "start": "2210160",
    "end": "2216340"
  },
  {
    "text": "prevents that from happening next recommendation is to reduce the height",
    "start": "2216340",
    "end": "2222820"
  },
  {
    "text": "of the tree as much as possible but not too much so in cases where you need to",
    "start": "2222820",
    "end": "2228370"
  },
  {
    "text": "delegate access to a CA it's okay to put a level in your hierarchy for delegating",
    "start": "2228370",
    "end": "2234430"
  },
  {
    "text": "access but you want to use the minimum tree height because every time a TLS",
    "start": "2234430",
    "end": "2241360"
  },
  {
    "text": "connection is established the server is sending the entire certificate chain to",
    "start": "2241360",
    "end": "2246850"
  },
  {
    "text": "the client and the client has to check every CA certificate in the chain to validate that the certificate it wants",
    "start": "2246850",
    "end": "2253030"
  },
  {
    "text": "to trust the the end entity certificate is valid and so the smaller we make that",
    "start": "2253030",
    "end": "2258310"
  },
  {
    "text": "chain we save network bandwidth and we save processing time for the client to",
    "start": "2258310",
    "end": "2264280"
  },
  {
    "text": "validate the chain next I want to talk",
    "start": "2264280",
    "end": "2269410"
  },
  {
    "start": "2267000",
    "end": "2446000"
  },
  {
    "text": "about choosing the CA validity period this is how long the the CA lasts the CA",
    "start": "2269410",
    "end": "2275200"
  },
  {
    "text": "certificate has a validity period like any other certificate and we want to think carefully about how we set that",
    "start": "2275200",
    "end": "2282480"
  },
  {
    "text": "the one constraint that we we impose and most CA is imposed is that CAS cannot",
    "start": "2282480",
    "end": "2290560"
  },
  {
    "text": "and should not issue certificates that lasts longer or have a longer validity period than they do an ACM privacy",
    "start": "2290560",
    "end": "2298150"
  },
  {
    "text": "enforces this constraint and what this does the reason we enforce it is because if the CA could issue a certificate that",
    "start": "2298150",
    "end": "2304150"
  },
  {
    "text": "lasted longer than the CA certificate what would happen is when the CA",
    "start": "2304150",
    "end": "2309340"
  },
  {
    "text": "certificate expires instantly invalidates the certificate that it issued with the longer lifetime because",
    "start": "2309340",
    "end": "2316000"
  },
  {
    "text": "as I talked about before that the path length the chain checking when the the",
    "start": "2316000",
    "end": "2321250"
  },
  {
    "text": "client is checking the chain it's going to come across an invalid expired CA certificate and it's going to throw it",
    "start": "2321250",
    "end": "2327370"
  },
  {
    "text": "out it's going to reject that certificate so we want to in force this constraint and this is just",
    "start": "2327370",
    "end": "2332500"
  },
  {
    "text": "an example that shows how to enforce that constraint you may have other other factors in your environment that that",
    "start": "2332500",
    "end": "2339310"
  },
  {
    "text": "lead you to choose validity periods differently but what we do is start with",
    "start": "2339310",
    "end": "2344920"
  },
  {
    "text": "the end entity certificates that we're gonna issue and in this case I have a one year end entity certificate and I'm",
    "start": "2344920",
    "end": "2351190"
  },
  {
    "text": "gonna redo renew those about every nine months and that's shown in the diagram once I know how long my end entity",
    "start": "2351190",
    "end": "2357520"
  },
  {
    "text": "certificates are gonna last I can define how long I want my issuing CA certificate to last and in this case a",
    "start": "2357520",
    "end": "2364300"
  },
  {
    "text": "good rule of thumb is to multiply the lifetime of the the lower the level",
    "start": "2364300",
    "end": "2371410"
  },
  {
    "text": "below by two or more and then add some buffer time so the you give yourself a",
    "start": "2371410",
    "end": "2376810"
  },
  {
    "text": "chance to renew the certificate before it expires so in this case or actually",
    "start": "2376810",
    "end": "2383410"
  },
  {
    "text": "replace the CA if that's your if that's what you're gonna do so in this case I chose a three-year validity period for",
    "start": "2383410",
    "end": "2390610"
  },
  {
    "text": "the issuing CA which is two times the one year of the level below plus one year from buffer time that buffer time",
    "start": "2390610",
    "end": "2397270"
  },
  {
    "text": "depends on your environment but if you think your you know your process for replacing the CA could slip you just",
    "start": "2397270",
    "end": "2404620"
  },
  {
    "text": "want to give yourself enough time to replace it and then for the root CA I have a ten year root CA and this is what",
    "start": "2404620",
    "end": "2411580"
  },
  {
    "text": "Ram showed in the demo as well and I took the three-year lifetime of this of the issuing CA multiply it by a factor",
    "start": "2411580",
    "end": "2417730"
  },
  {
    "text": "of two to get six years and that's how often I'm gonna replace the root CA and again this is a case where the root CA",
    "start": "2417730",
    "end": "2425290"
  },
  {
    "text": "typically Tikes takes more time to distribute to every every instance or device every client in",
    "start": "2425290",
    "end": "2433570"
  },
  {
    "text": "your environment so you want to have a longer buffer time to allow yourself time to distribute the roots so this is",
    "start": "2433570",
    "end": "2441010"
  },
  {
    "text": "just a guideline for how to set the CA validity period and lasts some some",
    "start": "2441010",
    "end": "2447940"
  },
  {
    "start": "2446000",
    "end": "2566000"
  },
  {
    "text": "things to think about for operations Ram mentioned that we want to think about",
    "start": "2447940",
    "end": "2453450"
  },
  {
    "text": "automation for distributing root certificates to trust stores in your",
    "start": "2453450",
    "end": "2458950"
  },
  {
    "text": "environment you typically want to have automation to do this and you can build your roots",
    "start": "2458950",
    "end": "2466990"
  },
  {
    "text": "into your trust stores when you're establishing images or distribute them",
    "start": "2466990",
    "end": "2473109"
  },
  {
    "text": "in in another automated fashion the key point is that that process has to be",
    "start": "2473109",
    "end": "2479980"
  },
  {
    "text": "trusted you've got to make sure that you distribute only route CA certificates or",
    "start": "2479980",
    "end": "2486400"
  },
  {
    "text": "public keys that you trust and none that you don't trust I talked a little bit",
    "start": "2486400",
    "end": "2493119"
  },
  {
    "text": "about revocation and vending status information that's something you need to think about making sure your CR ELLs are",
    "start": "2493119",
    "end": "2499540"
  },
  {
    "text": "reachable from all of your clients in your environment and finally redundancy and disaster recovery a CM private CA",
    "start": "2499540",
    "end": "2506920"
  },
  {
    "text": "has an SLA of 99.9 percent but you still want to think about in your environment",
    "start": "2506920",
    "end": "2511990"
  },
  {
    "text": "what happens if that CA is not reachable does your environment fall over what are",
    "start": "2511990",
    "end": "2517960"
  },
  {
    "text": "the consequences and based on your answer to that you want to think about do you want to have multiple subordinate",
    "start": "2517960",
    "end": "2527470"
  },
  {
    "text": "issuing CAS that your your devices or your infrastructure can access in the",
    "start": "2527470",
    "end": "2533020"
  },
  {
    "text": "event of a failure and you want to think about potentially having you know a single root CA and multiple subordinate",
    "start": "2533020",
    "end": "2540579"
  },
  {
    "text": "issuing CAS in in multiple regions ACM privacy is available in 17 regions 15",
    "start": "2540579",
    "end": "2548380"
  },
  {
    "text": "commercial and to go cloud new US regions but you want to think about your redundancy story and disaster recovery",
    "start": "2548380",
    "end": "2555059"
  },
  {
    "text": "and and we can certainly help you with that and in our account teams can",
    "start": "2555059",
    "end": "2560559"
  },
  {
    "text": "certainly help but those are some of the things for operations that you want to think about and so that's all I have for",
    "start": "2560559",
    "end": "2567790"
  },
  {
    "start": "2566000",
    "end": "2693000"
  },
  {
    "text": "a prepared demonstration and talk and at this point welcome you to ask questions",
    "start": "2567790",
    "end": "2573910"
  },
  {
    "text": "and we have about 15 minutes left for for Q&A first question",
    "start": "2573910",
    "end": "2582660"
  },
  {
    "text": "the question is are there any plans to attach an mfa account authorization to",
    "start": "2594410",
    "end": "2601980"
  },
  {
    "text": "the account where the root CA lives it's certainly possible that sort of an",
    "start": "2601980",
    "end": "2607140"
  },
  {
    "text": "independent process right now so if you have MFA configured for the account your",
    "start": "2607140",
    "end": "2612710"
  },
  {
    "text": "login and and is governed by that MFA process the question is can you",
    "start": "2612710",
    "end": "2627000"
  },
  {
    "text": "integrate MFA into the process of issuing a certificate can you okay yeah",
    "start": "2627000",
    "end": "2634080"
  },
  {
    "text": "yes you can I mean you can use a string condition with MFA within your policy to check for the MFA target itself yeah",
    "start": "2634080",
    "end": "2642800"
  },
  {
    "text": "another user [Music]",
    "start": "2654220",
    "end": "2658530"
  },
  {
    "text": "so the question is can you have one user request a certificate and a separate user that sort of approves or holds a",
    "start": "2667950",
    "end": "2675430"
  },
  {
    "text": "certificate until it's approved today that's that's not possible the the way",
    "start": "2675430",
    "end": "2681400"
  },
  {
    "text": "private CA works is there's an issue certificate API and a get certificate and so if you have permission to issue",
    "start": "2681400",
    "end": "2687520"
  },
  {
    "text": "certificate the CA is available it just issues the certificate that's a thank",
    "start": "2687520",
    "end": "2694150"
  },
  {
    "start": "2693000",
    "end": "2986000"
  },
  {
    "text": "you for that that's a it's a suggestion we'll consider for a future release that",
    "start": "2694150",
    "end": "2705250"
  },
  {
    "text": "is a common feature request and the question was the OCSP versus only supporting CR ELLs that is a common",
    "start": "2705250",
    "end": "2711940"
  },
  {
    "text": "feature request and its is definitely one that we're considering for a future release",
    "start": "2711940",
    "end": "2717780"
  },
  {
    "text": "yeah so two questions were one redundancy of the service and two api's",
    "start": "2762320",
    "end": "2769350"
  },
  {
    "text": "to support a sort of client client self-service portal for issuing",
    "start": "2769350",
    "end": "2775920"
  },
  {
    "text": "certificates so as far as for redundancy ACM private CA is built on multi a-z",
    "start": "2775920",
    "end": "2781800"
  },
  {
    "text": "redundancy in every region that we operate we have we the the",
    "start": "2781800",
    "end": "2787470"
  },
  {
    "text": "infrastructure that provides the service is deployed in each AZ in that region so",
    "start": "2787470",
    "end": "2793160"
  },
  {
    "text": "that's the redundancy story for delivering the service if with high",
    "start": "2793160",
    "end": "2799620"
  },
  {
    "text": "availability in terms of a self-service portal or ap is everything everything",
    "start": "2799620",
    "end": "2807750"
  },
  {
    "text": "that we do for private CA has an API so everything you see in the console for",
    "start": "2807750",
    "end": "2812910"
  },
  {
    "text": "issuing certificates for creating the CA everything can be done through an API",
    "start": "2812910",
    "end": "2819860"
  },
  {
    "text": "one thing I will explain so RAAM RAAM showed how to request a certificate",
    "start": "2820190",
    "end": "2826050"
  },
  {
    "text": "through AWS certificate manager and in that scenario",
    "start": "2826050",
    "end": "2831480"
  },
  {
    "text": "AWS certificate manager generates the private key makes a request to the",
    "start": "2831480",
    "end": "2837120"
  },
  {
    "text": "private CA and then manages that certificate renews it when it's in use you can export a private certificate an",
    "start": "2837120",
    "end": "2844200"
  },
  {
    "text": "ACM will tell you send you a cloud watch event when it's been renewed and you can pick up the new certificate so that's",
    "start": "2844200",
    "end": "2850890"
  },
  {
    "text": "the sort of rich functionality for certificate management that the certificate manager provides if you want",
    "start": "2850890",
    "end": "2857610"
  },
  {
    "text": "just a standalone certificate authority private CA provides just the the CA as a",
    "start": "2857610",
    "end": "2866460"
  },
  {
    "text": "service where you manage the the certificate and the private key you take",
    "start": "2866460",
    "end": "2871860"
  },
  {
    "text": "care of renewals but there's sort of two modes of operation and I wanted to explain that because in terms of your",
    "start": "2871860",
    "end": "2878160"
  },
  {
    "text": "question about the self-service portal ACM does provide some of that",
    "start": "2878160",
    "end": "2883620"
  },
  {
    "text": "certificate management capability it's available in a console today and you can look at that and and",
    "start": "2883620",
    "end": "2890280"
  },
  {
    "text": "look at that console and see if that works for you but if not you can either use the ACM api's to request",
    "start": "2890280",
    "end": "2897120"
  },
  {
    "text": "certificates where you get the certificate management or you can go all the way to the standalone CA and request",
    "start": "2897120",
    "end": "2903330"
  },
  {
    "text": "certificates through directly through those api's cross signing CAS for RIM",
    "start": "2903330",
    "end": "2916200"
  },
  {
    "text": "give me the mic I was going you currently support cross signing CA for",
    "start": "2916200",
    "end": "2922500"
  },
  {
    "text": "another BK I are our key yeah so so the",
    "start": "2922500",
    "end": "2928110"
  },
  {
    "text": "PKI hierarchy you create is is really totally flexible that process I showed in in somewhere in the middle of the",
    "start": "2928110",
    "end": "2935280"
  },
  {
    "text": "slides where you create the CA and then generate a CSR you can take that CSR to",
    "start": "2935280",
    "end": "2941370"
  },
  {
    "text": "any parent CA and sign it and then import the sign CA certificate and that",
    "start": "2941370",
    "end": "2946860"
  },
  {
    "text": "changed your private CA certificate authority up to whatever parent signed",
    "start": "2946860",
    "end": "2952770"
  },
  {
    "text": "that but mom curious thank you can you across I'm with the from two different",
    "start": "2952770",
    "end": "2958500"
  },
  {
    "text": "route CAS across time with two different routes CAS no so ACM private CA the way",
    "start": "2958500",
    "end": "2966570"
  },
  {
    "text": "the chain is constructed is it assumes it has a one parent and so there's no",
    "start": "2966570",
    "end": "2973350"
  },
  {
    "text": "way to import sort of a second certificate from a second parent that",
    "start": "2973350",
    "end": "2978990"
  },
  {
    "text": "would be necessary for a cross sign next",
    "start": "2978990",
    "end": "2985730"
  },
  {
    "text": "when you were filling out the look like this certificate signing request you basically were setting all the",
    "start": "2985730",
    "end": "2991980"
  },
  {
    "start": "2986000",
    "end": "3311000"
  },
  {
    "text": "organization parameters and whatnot can I restrict a user to only be able to",
    "start": "2991980",
    "end": "2997110"
  },
  {
    "text": "request certs to be signed with you know kind of say a particular sub domain so",
    "start": "2997110",
    "end": "3004940"
  },
  {
    "text": "what you actually saw was him creating the subject of the certificate authority that is that is used to fill in the CSR",
    "start": "3004940",
    "end": "3012320"
  },
  {
    "text": "that's correct as of today there isn't a way to",
    "start": "3012320",
    "end": "3017849"
  },
  {
    "text": "to restrict the domain names on which a certificate can be issued that's",
    "start": "3017849",
    "end": "3024119"
  },
  {
    "text": "something we have a number of customers that have requested that feature it's something we're thinking about building",
    "start": "3024119",
    "end": "3029880"
  },
  {
    "text": "in but what some of our internal and external customers have done is stand up",
    "start": "3029880",
    "end": "3035479"
  },
  {
    "text": "an a proxy gateway where they they take the request and reject it if it's not in",
    "start": "3035479",
    "end": "3042359"
  },
  {
    "text": "the domain that that they want it's it's not great but that's something we're definitely thinking about but that's a",
    "start": "3042359",
    "end": "3048809"
  },
  {
    "text": "workaround for now so based on what do",
    "start": "3048809",
    "end": "3057930"
  },
  {
    "text": "you have said I can bring my own CA into the Qi right so I can change the support",
    "start": "3057930",
    "end": "3065779"
  },
  {
    "text": "that's correct that's okay another question is can I limit the",
    "start": "3065779",
    "end": "3072390"
  },
  {
    "text": "trust to a part of the chain so that I",
    "start": "3072390",
    "end": "3077699"
  },
  {
    "text": "have like here our key they want to trust only the the leaf CA that actually",
    "start": "3077699",
    "end": "3084719"
  },
  {
    "text": "issue a certificate not the whole chain you could do that by distributing the",
    "start": "3084719",
    "end": "3091019"
  },
  {
    "text": "certificate of the subordinate CA as the the trusted entity and put that into",
    "start": "3091019",
    "end": "3098219"
  },
  {
    "text": "your trust stores so the question was how do you you know if you have a subordinate CA that's not the route can",
    "start": "3098219",
    "end": "3104279"
  },
  {
    "text": "can you you know can that be trusted in your environment instead of the room so you could essentially that becomes a",
    "start": "3104279",
    "end": "3111380"
  },
  {
    "text": "trusted CA that's distributed to trust stores yep this is for the browsers for",
    "start": "3111380",
    "end": "3118019"
  },
  {
    "text": "the things that are outside of the infrastructure but if I'm using it also for the infrastructure so to be clear",
    "start": "3118019",
    "end": "3126989"
  },
  {
    "text": "this infrastructure is all private certificate authorities chaining up to a private route ACM does support issuing",
    "start": "3126989",
    "end": "3135930"
  },
  {
    "text": "publicly trusted certificates but those are completely separate from from private CA if you want any browser so",
    "start": "3135930",
    "end": "3144269"
  },
  {
    "text": "all browsers have trust doors and the trust doors come pre-installed with the",
    "start": "3144269",
    "end": "3149670"
  },
  {
    "text": "roots for Publix EAS Amazon is a public CA we issue certificates through ACM that are",
    "start": "3149670",
    "end": "3157420"
  },
  {
    "text": "already installed in browsers so you can use ACM public certificates - that would",
    "start": "3157420",
    "end": "3164529"
  },
  {
    "text": "be trusted by default by browsers but private certificates aren't trusted by default by browsers that's what Ram",
    "start": "3164529",
    "end": "3170680"
  },
  {
    "text": "showed when he installed the route into the trust store that's why he had to do that before it",
    "start": "3170680",
    "end": "3176229"
  },
  {
    "text": "was trusted in the demo did I did I answer your question thank you this is",
    "start": "3176229",
    "end": "3184660"
  },
  {
    "text": "backed by a level-3 HSN he said is it that shared or or dedicated to my use or",
    "start": "3184660",
    "end": "3195009"
  },
  {
    "text": "should I be using cloud HSM if I want that or is that possible if you want a dedicated single instance HSM that you",
    "start": "3195009",
    "end": "3203769"
  },
  {
    "text": "control the keys for you should use Cloud HSM this is the HSM is part of the",
    "start": "3203769",
    "end": "3209710"
  },
  {
    "text": "service and so your key is only used and decrypted in in the memory of the HSM",
    "start": "3209710",
    "end": "3216940"
  },
  {
    "text": "but it's not the HSM itself is not dedicated to you any other questions",
    "start": "3216940",
    "end": "3229680"
  },
  {
    "text": "yep",
    "start": "3229680",
    "end": "3232680"
  },
  {
    "text": "yeah the question is I recommended using a cname for the for the CRL to the s3",
    "start": "3243839",
    "end": "3251950"
  },
  {
    "text": "bucket and that is part of the CA configuration I think it's in their advanced so we might not have seen it in",
    "start": "3251950",
    "end": "3257290"
  },
  {
    "text": "the demo but it is it's just a name that you specify as a friendly name instead",
    "start": "3257290",
    "end": "3263320"
  },
  {
    "text": "of the s3 bucket and that that name is what is populated into the certificates under the extension that tells the",
    "start": "3263320",
    "end": "3270700"
  },
  {
    "text": "client where to look for the CRL question I'm sorry but in this form I I",
    "start": "3270700",
    "end": "3284349"
  },
  {
    "text": "can't give you a timeline but I can just say it's a it's a feature we're definitely considering for the future we",
    "start": "3284349",
    "end": "3290320"
  },
  {
    "text": "can we can maybe talk offline about dates okay",
    "start": "3290320",
    "end": "3298300"
  },
  {
    "text": "any other questions if you have any more to think of any other questions I'll be around just just let me know thank you",
    "start": "3298300",
    "end": "3306339"
  },
  {
    "text": "all for your attention thank you",
    "start": "3306339",
    "end": "3310470"
  }
]