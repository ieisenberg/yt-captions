[
  {
    "text": "Hey everyone, welcome to another episode \nof 'Back To Basics',",
    "start": "4811",
    "end": "8268"
  },
  {
    "text": "I'm Chloe, \na Partner Solutions Architect at AWS.",
    "start": "8268",
    "end": "11893"
  },
  {
    "text": "Today we're going to talk \nabout some of the architectural best practices",
    "start": "12402",
    "end": "15869"
  },
  {
    "text": "when using AWS Config \nand Conformance Packs",
    "start": "16009",
    "end": "19087"
  },
  {
    "text": "to help you manage \nyour resource configurations.",
    "start": "19344",
    "end": "21828"
  },
  {
    "text": "To get started, let's just talk \nabout what AWS Config is",
    "start": "22167",
    "end": "25789"
  },
  {
    "text": "and what Conformance Packs are.",
    "start": "25790",
    "end": "27555"
  },
  {
    "text": "Config is a service that lets you \nassess and audit your AWS infrastructure",
    "start": "28201",
    "end": "32451"
  },
  {
    "text": "by monitoring and recording \nyour resource configurations.",
    "start": "32451",
    "end": "35659"
  },
  {
    "text": "This service lets you create managed rules, \nwhich are predefined, customizable rules,",
    "start": "36122",
    "end": "40653"
  },
  {
    "text": "that AWS uses",
    "start": "40653",
    "end": "42074"
  },
  {
    "text": "to evaluate whether your resources \ncomply with common best practices.",
    "start": "42475",
    "end": "46621"
  },
  {
    "text": "These rules can encompass \na lot of use cases",
    "start": "46992",
    "end": "49695"
  },
  {
    "text": "around security, audit, \nor even cost optimization.",
    "start": "49695",
    "end": "53646"
  },
  {
    "text": "For example, there's a Config rule \nto check your Amazon S3 buckets",
    "start": "53990",
    "end": "58521"
  },
  {
    "text": "to make sure that there isn't \nany public access on an account level.",
    "start": "58521",
    "end": "63001"
  },
  {
    "text": "Config will take a look at your S3 buckets",
    "start": "64109",
    "end": "66632"
  },
  {
    "text": "and make sure that \nthey're in a desired configuration state",
    "start": "66632",
    "end": "69440"
  },
  {
    "text": "to keep them in compliance.",
    "start": "69440",
    "end": "70878"
  },
  {
    "text": "If you have an S3 bucket \nthat meets these requirements, ",
    "start": "71392",
    "end": "73847"
  },
  {
    "text": "it will be marked as compliant.",
    "start": "73847",
    "end": "75604"
  },
  {
    "text": "Otherwise, your resource \nwill be marked as non-compliant.",
    "start": "76095",
    "end": "78883"
  },
  {
    "text": "As you can see, in this example,",
    "start": "79406",
    "end": "80800"
  },
  {
    "text": "Config will look at the S3 buckets\nin your environment ",
    "start": "80801",
    "end": "83580"
  },
  {
    "text": "anytime they're created or modified.",
    "start": "83580",
    "end": "85885"
  },
  {
    "text": "Here, one bucket has public access \nand the other one doesn't.",
    "start": "86648",
    "end": "89808"
  },
  {
    "text": "As a result, one will be marked as compliant, \nand the other one as non-compliant.",
    "start": "90263",
    "end": "94412"
  },
  {
    "text": "With Config, there's actually a lot of flexibility \nthat comes with the service,",
    "start": "95688",
    "end": "99698"
  },
  {
    "text": "which is awesome,",
    "start": "99698",
    "end": "100606"
  },
  {
    "text": "because you can use it \nto cater to your specific workloads.",
    "start": "100771",
    "end": "104266"
  },
  {
    "text": "For example, \nlet's say you have a rule in mind",
    "start": "105261",
    "end": "107523"
  },
  {
    "text": "that isn't created by AWS.",
    "start": "107523",
    "end": "109568"
  },
  {
    "text": "You can create a custom Config rule.",
    "start": "109968",
    "end": "112000"
  },
  {
    "text": "These are backed by AWS Lambda functions.",
    "start": "112559",
    "end": "115247"
  },
  {
    "text": "When you actually create the custom rule, \nyou're going to point it to a Lambda function.",
    "start": "115452",
    "end": "119627"
  },
  {
    "text": "With custom rules, \nyou can really customize Config,",
    "start": "120252",
    "end": "123012"
  },
  {
    "text": "so that you can mark any resource \nas compliant or non-compliant.",
    "start": "123012",
    "end": "126449"
  },
  {
    "text": "For example, let's say \nI want to build an author my own rule",
    "start": "127039",
    "end": "130187"
  },
  {
    "text": "that ensures that all of my EBS volumes",
    "start": "130187",
    "end": "132762"
  },
  {
    "text": "are next generation gp3 volumes.",
    "start": "132762",
    "end": "135351"
  },
  {
    "text": "Right now, that rule isn't managed \nor created by AWS,",
    "start": "135821",
    "end": "139877"
  },
  {
    "text": "so I would need to build \na custom Config rule for that.",
    "start": "139877",
    "end": "142481"
  },
  {
    "text": "Another really great feature of Config",
    "start": "143546",
    "end": "145860"
  },
  {
    "text": "is the ability to remediate \nnon-compliant resources.",
    "start": "145860",
    "end": "149144"
  },
  {
    "text": "So I showed you what it looks like \nwhen there is a non-compliant resource type,",
    "start": "149767",
    "end": "153163"
  },
  {
    "text": "but what can we actually do about that.",
    "start": "153163",
    "end": "155125"
  },
  {
    "text": "Config is going to let you \nperform remediation actions",
    "start": "155555",
    "end": "158459"
  },
  {
    "text": "in response to your non-compliant items.",
    "start": "158460",
    "end": "160941"
  },
  {
    "text": "These are done \nusing Systems Manager Automation Documents.",
    "start": "161322",
    "end": "164644"
  },
  {
    "text": "So we can trigger some type of mechanism",
    "start": "164987",
    "end": "167257"
  },
  {
    "text": "to put the resource \nback into its desired state.",
    "start": "167257",
    "end": "170300"
  },
  {
    "text": "In our last example, \nthe automation document",
    "start": "170807",
    "end": "173506"
  },
  {
    "text": "would modify the S3 bucket",
    "start": "173506",
    "end": "175229"
  },
  {
    "text": "from non-compliant with public access",
    "start": "175229",
    "end": "177650"
  },
  {
    "text": "to compliant with no public access.",
    "start": "177650",
    "end": "180118"
  },
  {
    "text": "The last feature I want to discuss \nis conformance packs.",
    "start": "180675",
    "end": "183407"
  },
  {
    "text": "With Config, you have the ability \nto bundle numerous rules together as a pack",
    "start": "183626",
    "end": "188045"
  },
  {
    "text": "that can be deployed as a single entity, \nknown as Conformance Packs.",
    "start": "188045",
    "end": "192218"
  },
  {
    "text": "These are defined as YAML templates,",
    "start": "192678",
    "end": "194605"
  },
  {
    "text": "and they're a group of Config rules \nthat are immutable.",
    "start": "194605",
    "end": "197696"
  },
  {
    "text": "Users cannot make changes to the rules",
    "start": "198107",
    "end": "200166"
  },
  {
    "text": "unless there's an update \nto the Conformance Packs.",
    "start": "200166",
    "end": "202422"
  },
  {
    "text": "AWS provides sample templates",
    "start": "203393",
    "end": "205962"
  },
  {
    "text": "for various compliance standards\nand industry benchmarks.",
    "start": "205962",
    "end": "209172"
  },
  {
    "text": "For example, there are templates \naround HIPAA security and FedRAMP.",
    "start": "209916",
    "end": "213918"
  },
  {
    "text": "There are also Conformance Packs \nwith Config rules",
    "start": "214935",
    "end": "217808"
  },
  {
    "text": "that help with cost management \nor operational best practices,",
    "start": "217809",
    "end": "221408"
  },
  {
    "text": "such as the best practices for Amazon EC2 \nor for database resiliency.",
    "start": "221801",
    "end": "226631"
  },
  {
    "text": "With Conformance Packs,",
    "start": "227386",
    "end": "228547"
  },
  {
    "text": "you can incorporate custom rules \nand managed rules.",
    "start": "228547",
    "end": "231459"
  },
  {
    "text": "Can also incorporate remediations",
    "start": "231460",
    "end": "234161"
  },
  {
    "text": "if you want to remediate non-compliant resources.",
    "start": "234161",
    "end": "237558"
  },
  {
    "text": "Now let's take a look at our end-to-end architecture,",
    "start": "237909",
    "end": "240474"
  },
  {
    "text": "that leverages Config \nand Conformance Packs.",
    "start": "240475",
    "end": "243858"
  },
  {
    "text": "Our setup consists of a workload ",
    "start": "243858",
    "end": "245731"
  },
  {
    "text": "with various resources in AWS.",
    "start": "245731",
    "end": "248291"
  },
  {
    "text": "Here, you can see there are resources",
    "start": "248291",
    "end": "249964"
  },
  {
    "text": "like Amazon EC2 and S3 bucket,",
    "start": "249964",
    "end": "253095"
  },
  {
    "text": "and a database on Amazon RDS.",
    "start": "253095",
    "end": "255698"
  },
  {
    "text": "To manage this environment,",
    "start": "256160",
    "end": "257824"
  },
  {
    "text": "we can use Config and Conformance Packs.",
    "start": "257824",
    "end": "260443"
  },
  {
    "text": "Because we have a lot of flexibility,",
    "start": "260875",
    "end": "262910"
  },
  {
    "text": "with how we want to build \nthis Conformance Pack.",
    "start": "262910",
    "end": "265111"
  },
  {
    "text": "We can include AWS Manage Rules\n and custom Config rules.",
    "start": "265345",
    "end": "269146"
  },
  {
    "text": "There you can see the custom config rules \nin this Conformance Pack,",
    "start": "270286",
    "end": "273851"
  },
  {
    "text": "which I mentioned are backed\n by Lambda functions.",
    "start": "273851",
    "end": "276735"
  },
  {
    "text": "These custom Config rules",
    "start": "277139",
    "end": "278625"
  },
  {
    "text": "would first be deployed into your account,",
    "start": "278625",
    "end": "280999"
  },
  {
    "text": "and then you could refer\n to them within the YAML template",
    "start": "280999",
    "end": "283876"
  },
  {
    "text": "that you create \nfor your Conformance Pack.",
    "start": "283876",
    "end": "285815"
  },
  {
    "text": "In addition to your Config rules,",
    "start": "286804",
    "end": "288391"
  },
  {
    "text": "your Conformance Pack would also include",
    "start": "288391",
    "end": "290473"
  },
  {
    "text": "Systems Manager Automation Documents.",
    "start": "290473",
    "end": "292867"
  },
  {
    "text": "As a result, you'd be able\n to trigger API calls or scripts",
    "start": "293415",
    "end": "296890"
  },
  {
    "text": "to actually execute actions \non your AWS resources.",
    "start": "296890",
    "end": "300998"
  },
  {
    "text": "This way you can modify\n your non-compliant resource types",
    "start": "301418",
    "end": "304764"
  },
  {
    "text": "to move into a desired state.",
    "start": "304765",
    "end": "306719"
  },
  {
    "text": "As you can see here,",
    "start": "307541",
    "end": "308637"
  },
  {
    "text": "you now have an AWS environment",
    "start": "308637",
    "end": "310617"
  },
  {
    "text": "that is effectively govern and optimized",
    "start": "310618",
    "end": "312916"
  },
  {
    "text": "by using AWS Config and Conformance Pack.",
    "start": "312916",
    "end": "316194"
  },
  {
    "text": "To summarize, in this episode,",
    "start": "317205",
    "end": "319046"
  },
  {
    "text": "you learned some of the best practices",
    "start": "319046",
    "end": "320953"
  },
  {
    "text": "for using AWS Config \nand Conformance Packs,",
    "start": "320954",
    "end": "324210"
  },
  {
    "text": "to make sure your resource\n configurations remain in compliance.",
    "start": "324210",
    "end": "328341"
  },
  {
    "text": "Please check out the links below \nfor more details.",
    "start": "328709",
    "end": "331339"
  },
  {
    "text": "Thank you for watching 'Back To Basics',",
    "start": "331339",
    "end": "333259"
  },
  {
    "text": "and see you next time.",
    "start": "333260",
    "end": "334747"
  }
]