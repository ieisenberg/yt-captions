[
  {
    "start": "0",
    "end": "15000"
  },
  {
    "text": "in this video you'll see how to check",
    "start": "480",
    "end": "2240"
  },
  {
    "text": "aws cloud formation templates for policy",
    "start": "2240",
    "end": "4640"
  },
  {
    "text": "compliance using cloud formation guard",
    "start": "4640",
    "end": "7359"
  },
  {
    "text": "with this tool you can create custom",
    "start": "7359",
    "end": "9200"
  },
  {
    "text": "rules for your cloud formation templates",
    "start": "9200",
    "end": "11280"
  },
  {
    "text": "evaluate the templates for compliance",
    "start": "11280",
    "end": "13120"
  },
  {
    "text": "and fix any non-compliant code cloud",
    "start": "13120",
    "end": "16160"
  },
  {
    "start": "15000",
    "end": "76000"
  },
  {
    "text": "formation guard or cfn guard",
    "start": "16160",
    "end": "18240"
  },
  {
    "text": "is a command line interface or cli tool",
    "start": "18240",
    "end": "21199"
  },
  {
    "text": "that checks aws cloud formation",
    "start": "21199",
    "end": "23039"
  },
  {
    "text": "templates for policy compliance",
    "start": "23039",
    "end": "24800"
  },
  {
    "text": "using a simple policy as code",
    "start": "24800",
    "end": "26320"
  },
  {
    "text": "declarative syntax",
    "start": "26320",
    "end": "28800"
  },
  {
    "text": "let's navigate through the cfnguard",
    "start": "28800",
    "end": "30560"
  },
  {
    "text": "github repository to check the",
    "start": "30560",
    "end": "32078"
  },
  {
    "text": "prerequisites and setup instructions",
    "start": "32079",
    "end": "35760"
  },
  {
    "text": "the readme provides an overview of the",
    "start": "36160",
    "end": "37920"
  },
  {
    "text": "cfn guard tool and its use cases",
    "start": "37920",
    "end": "42000"
  },
  {
    "text": "here's a sample cloud formation template",
    "start": "42239",
    "end": "44160"
  },
  {
    "text": "along with a sample cloud formation",
    "start": "44160",
    "end": "45680"
  },
  {
    "text": "guard rule set",
    "start": "45680",
    "end": "48480"
  },
  {
    "text": "here's an example of how to use the cfn",
    "start": "49200",
    "end": "51280"
  },
  {
    "text": "guard binary with the sample template in",
    "start": "51280",
    "end": "53199"
  },
  {
    "text": "rule set",
    "start": "53199",
    "end": "55680"
  },
  {
    "text": "here's how to install the necessary",
    "start": "56800",
    "end": "58399"
  },
  {
    "text": "build tools for cloud formation guard",
    "start": "58399",
    "end": "60879"
  },
  {
    "text": "you must have rust installed as well as",
    "start": "60879",
    "end": "63039"
  },
  {
    "text": "a way to run make files",
    "start": "63039",
    "end": "65280"
  },
  {
    "text": "for the purposes of this example these",
    "start": "65280",
    "end": "67119"
  },
  {
    "text": "prerequisites have already been",
    "start": "67119",
    "end": "68400"
  },
  {
    "text": "installed",
    "start": "68400",
    "end": "70240"
  },
  {
    "text": "let's copy this git clone command which",
    "start": "70240",
    "end": "72479"
  },
  {
    "text": "will copy the cfn guard source code",
    "start": "72479",
    "end": "74400"
  },
  {
    "text": "locally",
    "start": "74400",
    "end": "76880"
  },
  {
    "start": "76000",
    "end": "127000"
  },
  {
    "text": "to ensure that the compiler is correctly",
    "start": "76960",
    "end": "78960"
  },
  {
    "text": "installed let's first run a command to",
    "start": "78960",
    "end": "81119"
  },
  {
    "text": "output the rust compiler version",
    "start": "81119",
    "end": "83200"
  },
  {
    "text": "the most recent stable rust compiler is",
    "start": "83200",
    "end": "85200"
  },
  {
    "text": "installed let's clone the cfnguard",
    "start": "85200",
    "end": "87439"
  },
  {
    "text": "repository to a local folder",
    "start": "87439",
    "end": "89200"
  },
  {
    "text": "so we can build and run it on a sample",
    "start": "89200",
    "end": "90960"
  },
  {
    "text": "template",
    "start": "90960",
    "end": "92479"
  },
  {
    "text": "next let's navigate to the cloned",
    "start": "92479",
    "end": "94000"
  },
  {
    "text": "repository so we can begin building the",
    "start": "94000",
    "end": "95840"
  },
  {
    "text": "source code into an executable binary",
    "start": "95840",
    "end": "98960"
  },
  {
    "text": "now you can begin building the cfn guard",
    "start": "98960",
    "end": "101040"
  },
  {
    "text": "tool by running the make command",
    "start": "101040",
    "end": "104320"
  },
  {
    "text": "cfn guard has finished building and it",
    "start": "104320",
    "end": "106799"
  },
  {
    "text": "has created an output binary for us to",
    "start": "106799",
    "end": "108799"
  },
  {
    "text": "run",
    "start": "108799",
    "end": "109119"
  },
  {
    "text": "alongside the sample cloudformation",
    "start": "109119",
    "end": "110799"
  },
  {
    "text": "template and ruleset file",
    "start": "110799",
    "end": "113119"
  },
  {
    "text": "let's run the binary with a version flag",
    "start": "113119",
    "end": "115119"
  },
  {
    "text": "to ensure that it's been built correctly",
    "start": "115119",
    "end": "117840"
  },
  {
    "text": "the binary has been correctly built so",
    "start": "117840",
    "end": "120000"
  },
  {
    "text": "it can now be used on the sample",
    "start": "120000",
    "end": "121360"
  },
  {
    "text": "cloudformation template",
    "start": "121360",
    "end": "123040"
  },
  {
    "text": "let's take a look at the template code",
    "start": "123040",
    "end": "124560"
  },
  {
    "text": "in visual studio",
    "start": "124560",
    "end": "128080"
  },
  {
    "start": "127000",
    "end": "176000"
  },
  {
    "text": "this sample cloudformation template",
    "start": "128080",
    "end": "129759"
  },
  {
    "text": "creates an amazon elastic compute cloud",
    "start": "129759",
    "end": "131840"
  },
  {
    "text": "or amazon ec2",
    "start": "131840",
    "end": "133120"
  },
  {
    "text": "instance alongside a security group for",
    "start": "133120",
    "end": "135920"
  },
  {
    "text": "the purposes of this example",
    "start": "135920",
    "end": "137440"
  },
  {
    "text": "let's take a look at a use case scenario",
    "start": "137440",
    "end": "139360"
  },
  {
    "text": "in which developers can create ephemeral",
    "start": "139360",
    "end": "141200"
  },
  {
    "text": "ec2 development environments using a",
    "start": "141200",
    "end": "143280"
  },
  {
    "text": "cloudformation template to specify cost",
    "start": "143280",
    "end": "145360"
  },
  {
    "text": "control and security rules",
    "start": "145360",
    "end": "147680"
  },
  {
    "text": "let's create a file describing these",
    "start": "147680",
    "end": "149360"
  },
  {
    "text": "rules in a syntax compliant with",
    "start": "149360",
    "end": "150959"
  },
  {
    "text": "cfnguard",
    "start": "150959",
    "end": "152080"
  },
  {
    "text": "to ensure that the template is checked",
    "start": "152080",
    "end": "153599"
  },
  {
    "text": "for compliance whenever the tool runs",
    "start": "153599",
    "end": "156160"
  },
  {
    "text": "note that cloud formation guard focuses",
    "start": "156160",
    "end": "158000"
  },
  {
    "text": "on the resources section of the template",
    "start": "158000",
    "end": "159920"
  },
  {
    "text": "to ensure resource parameter compliance",
    "start": "159920",
    "end": "162080"
  },
  {
    "text": "but parameters and output compliance",
    "start": "162080",
    "end": "163840"
  },
  {
    "text": "rules can also be set",
    "start": "163840",
    "end": "166000"
  },
  {
    "text": "let's create a rule file that can be",
    "start": "166000",
    "end": "167519"
  },
  {
    "text": "passed to cfnguard to ensure compliance",
    "start": "167519",
    "end": "171440"
  },
  {
    "text": "the file name and extension of the rule",
    "start": "171440",
    "end": "173280"
  },
  {
    "text": "file do not need to conform to any",
    "start": "173280",
    "end": "175040"
  },
  {
    "text": "specific invention",
    "start": "175040",
    "end": "176959"
  },
  {
    "start": "176000",
    "end": "306000"
  },
  {
    "text": "let's start by defining a rule for ec2",
    "start": "176959",
    "end": "179120"
  },
  {
    "text": "resource types",
    "start": "179120",
    "end": "181519"
  },
  {
    "text": "this rule checks the template to ensure",
    "start": "181519",
    "end": "183200"
  },
  {
    "text": "that the instance type property of",
    "start": "183200",
    "end": "184640"
  },
  {
    "text": "defined ec2 resources",
    "start": "184640",
    "end": "186319"
  },
  {
    "text": "is set to nano micro or small",
    "start": "186319",
    "end": "190080"
  },
  {
    "text": "this rule checks to ensure that the",
    "start": "190080",
    "end": "191599"
  },
  {
    "text": "security group ingress property of",
    "start": "191599",
    "end": "193360"
  },
  {
    "text": "security groups has its ssh",
    "start": "193360",
    "end": "195280"
  },
  {
    "text": "ports set to a non-default value here we",
    "start": "195280",
    "end": "198480"
  },
  {
    "text": "define a compliance rule for ec2 volume",
    "start": "198480",
    "end": "200720"
  },
  {
    "text": "sizes",
    "start": "200720",
    "end": "202400"
  },
  {
    "text": "finally this rule states that ec2",
    "start": "202400",
    "end": "204480"
  },
  {
    "text": "volumes must be specified as encrypted",
    "start": "204480",
    "end": "206480"
  },
  {
    "text": "in our template",
    "start": "206480",
    "end": "207360"
  },
  {
    "text": "and adds a custom error message let's",
    "start": "207360",
    "end": "209519"
  },
  {
    "text": "save this rule set file and run the cfn",
    "start": "209519",
    "end": "211599"
  },
  {
    "text": "guard tool",
    "start": "211599",
    "end": "214239"
  },
  {
    "text": "let's run the cfn guard binary by",
    "start": "214799",
    "end": "216959"
  },
  {
    "text": "specifying its relative path in the",
    "start": "216959",
    "end": "218560"
  },
  {
    "text": "repository we cloned earlier",
    "start": "218560",
    "end": "221360"
  },
  {
    "text": "as you can see cfnguard picked up four",
    "start": "221360",
    "end": "223599"
  },
  {
    "text": "compliance errors in our cloudformation",
    "start": "223599",
    "end": "225360"
  },
  {
    "text": "template",
    "start": "225360",
    "end": "226400"
  },
  {
    "text": "we did not however receive an error for",
    "start": "226400",
    "end": "228239"
  },
  {
    "text": "not specifying the ebs volumes as",
    "start": "228239",
    "end": "230239"
  },
  {
    "text": "encrypted",
    "start": "230239",
    "end": "230879"
  },
  {
    "text": "because that resource property doesn't",
    "start": "230879",
    "end": "232480"
  },
  {
    "text": "exist in the template",
    "start": "232480",
    "end": "234080"
  },
  {
    "text": "to trigger this rule we can pass the s",
    "start": "234080",
    "end": "236080"
  },
  {
    "text": "flag",
    "start": "236080",
    "end": "238000"
  },
  {
    "text": "passing the s flag gives another linting",
    "start": "238000",
    "end": "239920"
  },
  {
    "text": "error corresponding to our custom rule",
    "start": "239920",
    "end": "241840"
  },
  {
    "text": "requiring the template to specify ebs",
    "start": "241840",
    "end": "244080"
  },
  {
    "text": "volumes as encrypted",
    "start": "244080",
    "end": "245200"
  },
  {
    "text": "along with our custom error message",
    "start": "245200",
    "end": "248799"
  },
  {
    "text": "you can also use flexible syntax within",
    "start": "249599",
    "end": "251760"
  },
  {
    "text": "the rules file to define allowed",
    "start": "251760",
    "end": "253519"
  },
  {
    "text": "parameters and values",
    "start": "253519",
    "end": "255680"
  },
  {
    "text": "let's define a variable that contains a",
    "start": "255680",
    "end": "257440"
  },
  {
    "text": "list of allowed volume sizes",
    "start": "257440",
    "end": "259519"
  },
  {
    "text": "we'll then reference that variable in",
    "start": "259519",
    "end": "261120"
  },
  {
    "text": "the relevant rule",
    "start": "261120",
    "end": "263919"
  },
  {
    "text": "next let's return to the template to",
    "start": "264000",
    "end": "265600"
  },
  {
    "text": "correct the errors flagged by cfnguard",
    "start": "265600",
    "end": "269840"
  },
  {
    "text": "now let's run cfn guard again",
    "start": "283280",
    "end": "287120"
  },
  {
    "text": "as you can see we've received no linting",
    "start": "288000",
    "end": "290160"
  },
  {
    "text": "errors indicating that our",
    "start": "290160",
    "end": "291360"
  },
  {
    "text": "cloudformation template is now compliant",
    "start": "291360",
    "end": "293280"
  },
  {
    "text": "with our rule set",
    "start": "293280",
    "end": "295199"
  },
  {
    "text": "you've just seen how to check aws cloud",
    "start": "295199",
    "end": "297280"
  },
  {
    "text": "formation templates for policy",
    "start": "297280",
    "end": "298720"
  },
  {
    "text": "compliance using cloudformationguard",
    "start": "298720",
    "end": "301919"
  },
  {
    "text": "thanks for watching now it's your turn",
    "start": "301919",
    "end": "303600"
  },
  {
    "text": "to try",
    "start": "303600",
    "end": "308000"
  }
]