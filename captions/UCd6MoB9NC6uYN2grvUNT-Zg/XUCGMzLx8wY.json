[
  {
    "start": "0",
    "end": "16000"
  },
  {
    "text": "Hello, and welcome \nto 'This Is My Architecture.'",
    "start": "6530",
    "end": "9129"
  },
  {
    "text": "Today with me, I have Vasilisa from MYTONA.\nHi.",
    "start": "9129",
    "end": "12129"
  },
  {
    "text": "So, Vasilisa, can you \ntell us a little bit about MYTONA?",
    "start": "12129",
    "end": "15867"
  },
  {
    "text": "Sure, MYTONA is a game developer \nand publisher company,",
    "start": "15867",
    "end": "20088"
  },
  {
    "start": "16000",
    "end": "52000"
  },
  {
    "text": "We create mobile games \nin the time management and hidden object genres.",
    "start": "20088",
    "end": "24487"
  },
  {
    "text": "Okay, so mobile games, is it?",
    "start": "24487",
    "end": "26170"
  },
  {
    "text": "So, what's this interesting architecture \nthat you have for us today?",
    "start": "26170",
    "end": "31362"
  },
  {
    "text": "Yeah, for our games, we are solving the use case \nof more personalized and relevant offers.",
    "start": "31362",
    "end": "37109"
  },
  {
    "text": "So me and my machine learning team, ",
    "start": "37109",
    "end": "39474"
  },
  {
    "text": "we built an in-game purchase recommendation system, \nwhich is called ML Offer.",
    "start": "39474",
    "end": "44516"
  },
  {
    "text": "Okay, so the system with its own name, \nthat's very interesting.",
    "start": "45366",
    "end": "48734"
  },
  {
    "text": "So, what does it actually do?",
    "start": "48734",
    "end": "51226"
  },
  {
    "text": "Yeah, our system has two parts,",
    "start": "51226",
    "end": "54021"
  },
  {
    "text": "the one that makes predictions \nand the other is responsible for model training.",
    "start": "54021",
    "end": "58914"
  },
  {
    "text": "So, when game servers request predictions,",
    "start": "58914",
    "end": "62832"
  },
  {
    "text": "the Lambda function \ngets triggered by an API involvement,",
    "start": "62832",
    "end": "67280"
  },
  {
    "text": "and takes on the role of a reverse proxy.",
    "start": "67280",
    "end": "69895"
  },
  {
    "text": "It allocates traffic \nbetween our recommender models,",
    "start": "69895",
    "end": "73835"
  },
  {
    "text": "which are placed in the ECS cluster.",
    "start": "73835",
    "end": "78241"
  },
  {
    "text": "We also have one container for bandit here.",
    "start": "78241",
    "end": "83701"
  },
  {
    "text": "Multi-armed bandit.",
    "start": "83702",
    "end": "85305"
  },
  {
    "text": "Okay, so that's very interesting piece.",
    "start": "85305",
    "end": "87905"
  },
  {
    "text": "I suggest it allocates the traffic dynamically, \nbut how does it actually work?",
    "start": "87905",
    "end": "92354"
  },
  {
    "start": "92000",
    "end": "132000"
  },
  {
    "text": "Yeah. In our Lambda function, \nwe implemented dynamic traffic allocation.",
    "start": "92354",
    "end": "97294"
  },
  {
    "text": "The multi-armed bandit collects data from Kafka,",
    "start": "97294",
    "end": "101180"
  },
  {
    "text": "on the way users react to it \nfor different model predictions,",
    "start": "101180",
    "end": "105691"
  },
  {
    "text": "and periodically recounts weight.",
    "start": "105691",
    "end": "107940"
  },
  {
    "text": "Okay, so it assigns the different weights to the models, I guess.\nYeah.",
    "start": "109973",
    "end": "114557"
  },
  {
    "text": "Yep. So basically, we have our inner continuous A/B testing\nbetween our models.",
    "start": "114557",
    "end": "120468"
  },
  {
    "text": "Okay. So there's an additional use case,\nwhich is A/B testing?",
    "start": "120468",
    "end": "123644"
  },
  {
    "text": "Very interesting.\nYeah.",
    "start": "123644",
    "end": "124465"
  },
  {
    "text": "But for machine learning, \nthere is an additional interesting thing,",
    "start": "124466",
    "end": "128942"
  },
  {
    "text": "which is model training.\nHow do you actually train your models?",
    "start": "128943",
    "end": "131842"
  },
  {
    "text": "Sure. For model training \nwe use SageMaker,",
    "start": "131843",
    "end": "135359"
  },
  {
    "start": "132000",
    "end": "173000"
  },
  {
    "text": "which gets daily triggered by",
    "start": "135359",
    "end": "140139"
  },
  {
    "text": "and manage workflow in an EC2\n based Airflow.",
    "start": "140139",
    "end": "144404"
  },
  {
    "text": "Which is a workflow manager, I suggest?",
    "start": "145026",
    "end": "147376"
  },
  {
    "text": "Yeah, it collects data from Kafka,",
    "start": "147376",
    "end": "150254"
  },
  {
    "text": "and eventually, \nour model is stored in an S3 bucket,",
    "start": "150254",
    "end": "154102"
  },
  {
    "text": "from there that gets added \nto build model API containers.",
    "start": "154102",
    "end": "158604"
  },
  {
    "text": "And we also use ECR",
    "start": "158604",
    "end": "160901"
  },
  {
    "text": "to store our API images \nfor different models.",
    "start": "160901",
    "end": "165276"
  },
  {
    "text": "Okay, so that's very interesting",
    "start": "165276",
    "end": "167878"
  },
  {
    "text": "but definitely while building the system,",
    "start": "167878",
    "end": "169731"
  },
  {
    "text": "you might have had \nsome challenges and problems.",
    "start": "169731",
    "end": "172125"
  },
  {
    "text": "What were those?",
    "start": "172125",
    "end": "173662"
  },
  {
    "start": "173000",
    "end": "211000"
  },
  {
    "text": "Yeah, you see, the ECS cluster and Lambda \nwere not our first choices.",
    "start": "173662",
    "end": "178909"
  },
  {
    "text": "As the first we implemented manually,",
    "start": "178909",
    "end": "181571"
  },
  {
    "text": "a Docker swarm on EC2 instances\nwith traffic for traffic allocation.",
    "start": "181571",
    "end": "186602"
  },
  {
    "text": "And it brought a lot of problems with scaling \nand adding new versions of models.",
    "start": "186602",
    "end": "192128"
  },
  {
    "text": "Okay, so what were these issues?",
    "start": "192128",
    "end": "194677"
  },
  {
    "text": "You see, as the requests \nare not evenly distributed within a day,",
    "start": "194677",
    "end": "199118"
  },
  {
    "text": "so we had to manually add new replicas, \ncreate new instances,",
    "start": "199118",
    "end": "205428"
  },
  {
    "text": "or change the capacity \nto handle traffic spikes.",
    "start": "205428",
    "end": "208338"
  },
  {
    "text": "Okay, kind of a challenge. \nHow did you actually solve it?",
    "start": "208338",
    "end": "211099"
  },
  {
    "start": "211000",
    "end": "236000"
  },
  {
    "text": "Yeah, actually switching to this version\nof the architecture of our solution.",
    "start": "211100",
    "end": "215854"
  },
  {
    "text": "Having our models as ECS containers",
    "start": "215854",
    "end": "219897"
  },
  {
    "text": "allows us to create triggers for auto-scaling,",
    "start": "219897",
    "end": "222968"
  },
  {
    "text": "and to safely add new versions for models.",
    "start": "222968",
    "end": "225831"
  },
  {
    "text": "So problem solved, is it?\nYeah.",
    "start": "225831",
    "end": "228226"
  },
  {
    "text": "Okay, so you've been running this system \nfor some time already.",
    "start": "228227",
    "end": "232233"
  },
  {
    "text": "So what were actually the performance \nand the outcomes of the system?",
    "start": "232233",
    "end": "235802"
  },
  {
    "text": "Yeah, according to test results,\nour system performed much better",
    "start": "235802",
    "end": "240795"
  },
  {
    "start": "236000",
    "end": "279000"
  },
  {
    "text": "than the one \nwithout the machine learning personalization.",
    "start": "240795",
    "end": "243541"
  },
  {
    "text": "We increased our conversion rate three times,",
    "start": "245578",
    "end": "249340"
  },
  {
    "text": "and our revenue was boosted four times \nfor these type of offers.",
    "start": "249340",
    "end": "254678"
  },
  {
    "text": "Okay, but how actually many customers \nis this system used per day?",
    "start": "254678",
    "end": "260036"
  },
  {
    "text": "It's like, several hundreds of thousands.",
    "start": "260037",
    "end": "263100"
  },
  {
    "text": "Okay, that's impressive.",
    "start": "263101",
    "end": "264461"
  },
  {
    "text": "Well, thank you, Vasilisa, \nfor sharing this information with us today.",
    "start": "264461",
    "end": "268361"
  },
  {
    "text": "Thank you for having me.\nAnd thank you for watching 'This Is My Architecture.'",
    "start": "268361",
    "end": "272584"
  }
]