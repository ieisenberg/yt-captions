[
  {
    "start": "0",
    "end": "17000"
  },
  {
    "text": "thank everybody for coming welcome to slashing big data complexity so how Comcast's x1 powers analytics with",
    "start": "0",
    "end": "6299"
  },
  {
    "text": "amazon kinesis my name is Leah Morrison and I'm a solutions architect with AWS and with me I have Charlie Hamel who is",
    "start": "6299",
    "end": "13469"
  },
  {
    "text": "a solutions architect with comcast so a little bit about what to expect in today's session so first I'm going to go",
    "start": "13469",
    "end": "20189"
  },
  {
    "start": "17000",
    "end": "17000"
  },
  {
    "text": "over what we have seen from our customers in their streaming data evolution then I'm going to cover the",
    "start": "20189",
    "end": "26189"
  },
  {
    "text": "services that make up the amazon kinesis platform and how they all fit together from there I'm going to hand off to",
    "start": "26189",
    "end": "32130"
  },
  {
    "text": "Charlie Hamill from comcast who will deep dive into the comcast x1 platform and how comcast is using it to build and",
    "start": "32130",
    "end": "39870"
  },
  {
    "text": "share real-time analytics with their partners Charlie's also going to cover some of the issues they face song the",
    "start": "39870",
    "end": "47070"
  },
  {
    "text": "way and some of the creative ways they're able to overcome those issues all right so let's get started so what",
    "start": "47070",
    "end": "55260"
  },
  {
    "start": "51000",
    "end": "51000"
  },
  {
    "text": "we have seen from our customers that real-time processing applies to pretty much every scenario where data is being",
    "start": "55260",
    "end": "60449"
  },
  {
    "text": "generated on a continual basis and pretty much every market segment that we work with so that includes adtech io t",
    "start": "60449",
    "end": "68040"
  },
  {
    "text": "mobile devices make gaming much more so",
    "start": "68040",
    "end": "73080"
  },
  {
    "text": "when our customers take on the streaming data journey the first phase they tend to encounter is what we call the",
    "start": "73080",
    "end": "78840"
  },
  {
    "text": "accelerated data ingest transform and load phase so that's where you're taking real-time streaming data and pushing",
    "start": "78840",
    "end": "87479"
  },
  {
    "text": "into a data store or an analytical system for analysis soon after the fact so it could be log data ingestion that",
    "start": "87479",
    "end": "94170"
  },
  {
    "text": "you're pushing into a persistent store like s3 so very soon after that they",
    "start": "94170",
    "end": "99270"
  },
  {
    "text": "move on to what we call the continual metrics generation phase so now that they've got this real-time data",
    "start": "99270",
    "end": "104549"
  },
  {
    "text": "streaming into their systems they're able to actually to continually gain insights from that data stream so",
    "start": "104549",
    "end": "110579"
  },
  {
    "text": "finally they move on to what we call the most sophisticated scenario which is responsive data analysis so that's when",
    "start": "110579",
    "end": "117570"
  },
  {
    "text": "you're reacting to your data in real time such as personalizing the user experience based on in-game decisions",
    "start": "117570",
    "end": "124229"
  },
  {
    "text": "made in a mobile gaming scenario or reacting automatically to mechanical issues in an IOT scenario so the goal of",
    "start": "124229",
    "end": "131190"
  },
  {
    "text": "the Kinesis platform is to provide Aereo's and services that apply to each and every use case and pretty much any",
    "start": "131190",
    "end": "137489"
  },
  {
    "text": "use case our customers can think of so currently Kinesis as a platform is made",
    "start": "137489",
    "end": "143760"
  },
  {
    "start": "140000",
    "end": "140000"
  },
  {
    "text": "up of three services so back in 2013 we launched Kinesis streams which is a",
    "start": "143760",
    "end": "149280"
  },
  {
    "text": "managed service for streaming data so think of this is a foundational building block that are primitive that enables",
    "start": "149280",
    "end": "155519"
  },
  {
    "text": "developers to have complete control and flexibility to build their own stream processing applications using whatever",
    "start": "155519",
    "end": "162030"
  },
  {
    "text": "tools they prefer so last year at reinvent we built on that and release",
    "start": "162030",
    "end": "167849"
  },
  {
    "text": "kinases fire hose so Kinesis takes what we learned from kanisa or kinases fire hose takes what we learned from cases",
    "start": "167849",
    "end": "173430"
  },
  {
    "text": "streams and makes the task of capture and delivery of streaming data extremely simple so it provides several",
    "start": "173430",
    "end": "180750"
  },
  {
    "text": "destinations that are persistent for that streaming data so today we launched an Kinesis analytics earlier in the day",
    "start": "180750",
    "end": "188180"
  },
  {
    "text": "sokun nisa analytics is a stream processing counterpart to both Kinesis streams and fire hose that enables you",
    "start": "188180",
    "end": "194639"
  },
  {
    "text": "to express your stream processing applications in sequel without having to manage complex frameworks so let's start",
    "start": "194639",
    "end": "201569"
  },
  {
    "text": "with Kinesis oh actually there sorry let's start with caseous streams so",
    "start": "201569",
    "end": "207470"
  },
  {
    "start": "202000",
    "end": "202000"
  },
  {
    "text": "kinesis dreams again it's a managed service so there are no clusters to manage and it takes care of itself you",
    "start": "207470",
    "end": "214139"
  },
  {
    "text": "can do some simple work to scale it up and down so on the left you have what we'd call data producers so data",
    "start": "214139",
    "end": "221489"
  },
  {
    "text": "producers can be anything from ec2 instances mobile applications IOT devices you name it so you configure",
    "start": "221489",
    "end": "228419"
  },
  {
    "text": "your data producers to push data into the Kinesis stream and then on the other",
    "start": "228419",
    "end": "234209"
  },
  {
    "text": "side conesus or sorry can you put data into the canoes to stream so let's take",
    "start": "234209",
    "end": "239639"
  },
  {
    "text": "for example kinases or click stream analytics so data from web sites is sent into the Kinesis stream which then",
    "start": "239639",
    "end": "246840"
  },
  {
    "text": "process that data you can have full control over how the stream is organized how you partition your data how you",
    "start": "246840",
    "end": "251879"
  },
  {
    "text": "scale your stream how you read that data now you process that data so a couple the benefits of camisa streams are easy",
    "start": "251879",
    "end": "259169"
  },
  {
    "text": "administration so it's very simple to create a stream and get started so you simply create the stream set your",
    "start": "259169",
    "end": "265560"
  },
  {
    "text": "desired level of throughput which is down by setting the number of shards in that stream then you can scale that stream to",
    "start": "265560",
    "end": "272860"
  },
  {
    "text": "match the throughput needs that you have by simply adding and removing shards the second is it allows you to build",
    "start": "272860",
    "end": "279849"
  },
  {
    "text": "real-time application so it allows you to perform continual processing on your streaming data using things like the",
    "start": "279849",
    "end": "286210"
  },
  {
    "text": "Kinesis client library known as the kcl apache spark storm AWS lambda and more",
    "start": "286210",
    "end": "292240"
  },
  {
    "text": "and the third is this extremely low cost so using that sharding concept that i",
    "start": "292240",
    "end": "297310"
  },
  {
    "text": "mentioned earlier it allows you to scale your stream to handle workloads of any",
    "start": "297310",
    "end": "302590"
  },
  {
    "text": "sides so you can get cost-efficient workloads at any scale so a little bit",
    "start": "302590",
    "end": "308319"
  },
  {
    "start": "307000",
    "end": "307000"
  },
  {
    "text": "about how to get data in and out of kinases so the way kinases achieves that full flexibility is through the variety",
    "start": "308319",
    "end": "314979"
  },
  {
    "text": "of options of both sending and reading data into the stream and from the stream so sending data in the streams can be",
    "start": "314979",
    "end": "321460"
  },
  {
    "text": "accomplished through a variety of different methodologies that can be the SDKs the Kinesis producer library known",
    "start": "321460",
    "end": "327550"
  },
  {
    "text": "as the kpl or open source technologies like log4j flume or fluent d so on the",
    "start": "327550",
    "end": "334570"
  },
  {
    "text": "flip side we also have a lot of different ways to actually read data from the stream so at the very primitive",
    "start": "334570",
    "end": "340719"
  },
  {
    "text": "level we have the get AP is up to Amazon provided methodologies such as the cases",
    "start": "340719",
    "end": "347380"
  },
  {
    "text": "client library AWS lambda and starting today Kinesis analytics finally we also",
    "start": "347380",
    "end": "353169"
  },
  {
    "text": "have open source platforms such as apache spark and storm so this is not a",
    "start": "353169",
    "end": "358810"
  },
  {
    "text": "complete list which is some of the many options that are available to you with Kinesis streams so one great thing about",
    "start": "358810",
    "end": "364990"
  },
  {
    "text": "the Kinesis client library and Kinesis producer library k CL and kpl is that",
    "start": "364990",
    "end": "370060"
  },
  {
    "text": "these are open source libraries that we've built that are designed to make creating producers and consumers for",
    "start": "370060",
    "end": "376599"
  },
  {
    "text": "Kinesis extremely simple so this also handles a lot of the tougher parts and",
    "start": "376599",
    "end": "382719"
  },
  {
    "text": "the throughput concerns such as aggregating of records reacting to shard changes and much more so in a little bit",
    "start": "382719",
    "end": "389319"
  },
  {
    "text": "Charlie's going to actually tell you about how they use the KCl and kpl to overcome some of the throughput concerns",
    "start": "389319",
    "end": "395560"
  },
  {
    "text": "that Comcast saw so moving on to kinases fire hose so",
    "start": "395560",
    "end": "401980"
  },
  {
    "start": "398000",
    "end": "398000"
  },
  {
    "text": "Kinesis fire hose again makes the process of loading streaming data into several common destinations extremely",
    "start": "401980",
    "end": "407530"
  },
  {
    "text": "simple so one of the interesting things we've learned from our work with Kinesis dreams is that one of the most common",
    "start": "407530",
    "end": "413680"
  },
  {
    "text": "use cases that our customers saw was that they wanted to take streaming data and load it into a persistent store",
    "start": "413680",
    "end": "419710"
  },
  {
    "text": "which is kind of ironic but that was one of the common use cases with Kinesis once they've got that streaming data so",
    "start": "419710",
    "end": "427000"
  },
  {
    "text": "on the left side what you see is very similar to what you saw with Kinesis streams where you have producers like the Amazon SDK however once it goes into",
    "start": "427000",
    "end": "435550"
  },
  {
    "text": "Kinesis firehose it is a fully managed service so you don't have to deal with shards you know how to deal right",
    "start": "435550",
    "end": "440800"
  },
  {
    "text": "consumers it is just sending that data straight into the persistent store which",
    "start": "440800",
    "end": "445870"
  },
  {
    "text": "today can include s3 redshift and the amazon elastic search service so",
    "start": "445870",
    "end": "453030"
  },
  {
    "text": "thinking about it in the the scenario of that first scenario we talked about",
    "start": "453030",
    "end": "458290"
  },
  {
    "text": "which is accelerated data and just transform and load so Kinesis is a fire hose is extremely good at that so let's",
    "start": "458290",
    "end": "469120"
  },
  {
    "start": "469000",
    "end": "469000"
  },
  {
    "text": "look at the sending and receiving with regards to Kinesis fire hose so this is going to look very similar to what you",
    "start": "469120",
    "end": "474669"
  },
  {
    "text": "saw with Kinesis streams however on the left you have data producers which include the SDKs mobile and standard",
    "start": "474669",
    "end": "482169"
  },
  {
    "text": "Amazon SDKs AWS IOT and the Kinesis agent so the Kinesis agent is a",
    "start": "482169",
    "end": "488950"
  },
  {
    "text": "standalone application that monitors files and sends data records into your",
    "start": "488950",
    "end": "494289"
  },
  {
    "text": "delivery streaming without having to write a line of code and it handles a lot of the the standard issues you might",
    "start": "494289",
    "end": "499510"
  },
  {
    "text": "have such as file rotation checkpointing retry upon failure the Kinesis agent",
    "start": "499510",
    "end": "504520"
  },
  {
    "text": "also has some data pre-processing features so it does things such as log parsing and format conversion so one",
    "start": "504520",
    "end": "513460"
  },
  {
    "text": "additional thing to note about the Kinesis agent is that it also works with cases streams so it allows you to get",
    "start": "513460",
    "end": "519760"
  },
  {
    "text": "data in do Kinesis both fire hose and streams without writing code so the main",
    "start": "519760",
    "end": "524920"
  },
  {
    "text": "difference here now that is in fire hose is that fire are lose again fully managed service so you didn't have to specify the throughput you needed",
    "start": "524920",
    "end": "531400"
  },
  {
    "text": "conesus fire hose just take care of that so you have your choice of destinations currently which is s3",
    "start": "531400",
    "end": "537250"
  },
  {
    "text": "redshift and the amazon elastic search service so if you're looking for more variety in ways to push data into fire",
    "start": "537250",
    "end": "545200"
  },
  {
    "text": "hose or pull data from fire hose or Kinesis in general you're going to want to look at Kinesis streams so finally we",
    "start": "545200",
    "end": "554020"
  },
  {
    "text": "have Kinesis analytics which again may generally available earlier today so think of Kinesis analytics as a managed",
    "start": "554020",
    "end": "560710"
  },
  {
    "text": "Kinesis consumer one that makes it easy to continuously query the real-time data using standard sequel queries so it",
    "start": "560710",
    "end": "568600"
  },
  {
    "text": "allows you to manage complex analytics without having to build a whole framework or manager framework so this",
    "start": "568600",
    "end": "575440"
  },
  {
    "text": "allows you to iterate through many stream processing use cases very quickly will help you easily progress towards",
    "start": "575440",
    "end": "581350"
  },
  {
    "text": "that goal of reactive data analysis so a couple of the benefits of Kinesis",
    "start": "581350",
    "end": "586840"
  },
  {
    "text": "streams is that allows you to take the sequel skills you have currently and manage that and apply them directly to a",
    "start": "586840",
    "end": "593170"
  },
  {
    "text": "streaming data solution second is it also allows you to build real time applications but allows you to do so",
    "start": "593170",
    "end": "599200"
  },
  {
    "text": "without having to write a line of code or deal with things like skala and third",
    "start": "599200",
    "end": "604600"
  },
  {
    "text": "is it scales elastically so conesus analytics is designed to scale with most",
    "start": "604600",
    "end": "611560"
  },
  {
    "text": "workloads without having any operator intervention so getting started with",
    "start": "611560",
    "end": "617500"
  },
  {
    "start": "615000",
    "end": "615000"
  },
  {
    "text": "Kinesis analytics is extremely simple so it allows you to build an application with three simple steps so the first",
    "start": "617500",
    "end": "624220"
  },
  {
    "text": "step is you set where you want to get your data from so you set your streaming source and that can be Kinesis streams",
    "start": "624220",
    "end": "631120"
  },
  {
    "text": "or Kinesis fire hose second is you write sequel code to process that streaming",
    "start": "631120",
    "end": "637180"
  },
  {
    "text": "data so you can author applications with a single sequel statement or you can build sophisticated applications with",
    "start": "637180",
    "end": "643030"
  },
  {
    "text": "multi-step pipelines with advanced analytical functions and the third you set your output so you set where you",
    "start": "643030",
    "end": "649210"
  },
  {
    "text": "want those continuously delivered sequel results to go so as of today outputs can",
    "start": "649210",
    "end": "654760"
  },
  {
    "text": "include kanisa streams firehose s3 and redshift however you can also use",
    "start": "654760",
    "end": "660370"
  },
  {
    "text": "services like AWS lambda and fire hose to configure custom destination",
    "start": "660370",
    "end": "666300"
  },
  {
    "text": "so for more information about this I definitely urge everyone to check out the session that starts in this room",
    "start": "666300",
    "end": "671860"
  },
  {
    "text": "actually right after this session so there's a new launch session with Kinesis analytics information so now i'm",
    "start": "671860",
    "end": "680440"
  },
  {
    "text": "going to hand it off to Charlie Hamel who will go over the streaming data journey that Comcast took on and give you some of the insights that they found",
    "start": "680440",
    "end": "686680"
  },
  {
    "text": "in their journey Thank You Liam how many",
    "start": "686680",
    "end": "691930"
  },
  {
    "text": "of you here just a quick poll our comcast subscribers great the rest of",
    "start": "691930",
    "end": "698470"
  },
  {
    "text": "you can leave this is just about compact no I'm kidding totally of you who are Comcast subscribers how many of you have",
    "start": "698470",
    "end": "705220"
  },
  {
    "text": "what you know to be x1 great for the",
    "start": "705220",
    "end": "712270"
  },
  {
    "text": "rest of you here's a short little video to give you just a tiny taste of what x1",
    "start": "712270",
    "end": "717430"
  },
  {
    "text": "is like this summer the networks of nbcuniversal are bringing you the most",
    "start": "717430",
    "end": "723970"
  },
  {
    "text": "comprehensive olympics coverage ever and there's no better way to experience it",
    "start": "723970",
    "end": "729160"
  },
  {
    "text": "all than with Xfinity x1 find what you want to watch when you want to watch it",
    "start": "729160",
    "end": "735300"
  },
  {
    "text": "by sport by athlete and by country eleven networks more than 6,000 hours",
    "start": "735300",
    "end": "743700"
  },
  {
    "text": "every event streamed live on every device personalize your must-see moments",
    "start": "743700",
    "end": "752370"
  },
  {
    "text": "and holds your viewing experience with the x1 sports app dive deeper into the action with live information athlete",
    "start": "760470",
    "end": "767880"
  },
  {
    "text": "BIOS highlights and schedules all available if your fingers is so that",
    "start": "767880",
    "end": "775680"
  },
  {
    "text": "gives you a small taste of what x1 is like MZ some of it you might have seen",
    "start": "775680",
    "end": "780690"
  },
  {
    "text": "some very Olympics specific menus and pages you sell things about Rio in",
    "start": "780690",
    "end": "786930"
  },
  {
    "text": "general you saw sports events you saw teams countries specific athletes and it",
    "start": "786930",
    "end": "793560"
  },
  {
    "text": "allows you to drill down into those things when you finally land on a page take action like watch an event that",
    "start": "793560",
    "end": "799500"
  },
  {
    "text": "already happened on demand or decide to record one that's going to happen in the future or decide to even get a text",
    "start": "799500",
    "end": "806370"
  },
  {
    "text": "message about when it's about to begin all of that required really no code it",
    "start": "806370",
    "end": "812040"
  },
  {
    "text": "was all menu configuration and metadata for the graphics and things and that's",
    "start": "812040",
    "end": "817050"
  },
  {
    "text": "because in general it's a platform running in the cloud just to kind of",
    "start": "817050",
    "end": "823020"
  },
  {
    "text": "repeat a point that Sri Cote made earlier today in the keynote back in 96",
    "start": "823020",
    "end": "828750"
  },
  {
    "text": "NBC offered in Atlanta about 150 200 hours of coverage that was kind of",
    "start": "828750",
    "end": "834780"
  },
  {
    "text": "manageable for most human beings this time it's about 6,800 hours of coverage",
    "start": "834780",
    "end": "840090"
  },
  {
    "text": "they're offering not to manageable so system like x1 allows you to drill in",
    "start": "840090",
    "end": "845400"
  },
  {
    "text": "and what you care about and decide how you're going to watch it that's another interesting feature of putting",
    "start": "845400",
    "end": "851250"
  },
  {
    "text": "everything in the cloud you can watch it on all your screens you can see things",
    "start": "851250",
    "end": "856680"
  },
  {
    "text": "on your mobile devices your PC of course your TV here's the challenge we took on",
    "start": "856680",
    "end": "864570"
  },
  {
    "start": "861000",
    "end": "861000"
  },
  {
    "text": "when we decided to build the x1 platform we decided from the start that it was going to be essentially in an experience",
    "start": "864570",
    "end": "870930"
  },
  {
    "text": "only platform and we're also going to make it a platform as a service that we would syndicate to other video companies",
    "start": "870930",
    "end": "877640"
  },
  {
    "text": "certainly comcast came first but others have come along since then that give",
    "start": "877640",
    "end": "883230"
  },
  {
    "text": "gave those of us in the data world a big challenge to because we had to syndicate",
    "start": "883230",
    "end": "888600"
  },
  {
    "text": "data along with all the other features to the partners who were going to be",
    "start": "888600",
    "end": "893940"
  },
  {
    "text": "subscribe vers of the platform syndicators of the platform and particularly they needed",
    "start": "893940",
    "end": "899160"
  },
  {
    "text": "all kinds of data in order to operate the platform on behalf of their customers things like stream quality",
    "start": "899160",
    "end": "905160"
  },
  {
    "text": "status or Vaud usage where error rates and things that customers are experiencing on their screens so in",
    "start": "905160",
    "end": "912930"
  },
  {
    "text": "order to do that and not make it a best-effort kind of practice but now data is actually a feature of the",
    "start": "912930",
    "end": "919080"
  },
  {
    "text": "platform we had to latch onto the white design or an architectural pattern for",
    "start": "919080",
    "end": "924090"
  },
  {
    "text": "getting that done so we decided the answer was a data bus looking at the the",
    "start": "924090",
    "end": "930060"
  },
  {
    "text": "narrower context of this data bus environment the big x1 platform has on",
    "start": "930060",
    "end": "935490"
  },
  {
    "text": "the one side a lot of services that pretty MIT interesting and important telemetry data then in the middle we",
    "start": "935490",
    "end": "942780"
  },
  {
    "text": "have this area called fairmount which is the data bus i'll be talking about and that does all the TLC kinds of things",
    "start": "942780",
    "end": "949680"
  },
  {
    "text": "with data to make it useful for consumers things like receiving it and getting it where it needs to go",
    "start": "949680",
    "end": "955220"
  },
  {
    "text": "enriching it making sure the quality is right and then over on this side we have",
    "start": "955220",
    "end": "960660"
  },
  {
    "text": "all the consumers which we call partners or syndication partners who need that data in order to run their businesses so",
    "start": "960660",
    "end": "969330"
  },
  {
    "text": "I'd like to talk specifically about the solution that we came to the data bus and I'd like to say three things about",
    "start": "969330",
    "end": "976080"
  },
  {
    "text": "it first the data bus pattern and why that's an important idea next the data",
    "start": "976080",
    "end": "981570"
  },
  {
    "text": "bus foundation that we ended up with and thirdly the overall data bus ecosystem",
    "start": "981570",
    "end": "987140"
  },
  {
    "text": "so let's first talk about the data bus pattern just imagine you have and you're",
    "start": "987140",
    "end": "993840"
  },
  {
    "start": "990000",
    "end": "990000"
  },
  {
    "text": "in a little environment six participants who need to deal with data a few producers three and three consumers if",
    "start": "993840",
    "end": "1001460"
  },
  {
    "text": "they were to directly connect wii with each other to get what they need you'd end up with 18 connections maximum and",
    "start": "1001460",
    "end": "1008060"
  },
  {
    "text": "if we added just one more consumer to this mix it explodes to 24 connections",
    "start": "1008060",
    "end": "1013580"
  },
  {
    "text": "that's exponential growth and complexity it's a mess it's hard to maintain it's",
    "start": "1013580",
    "end": "1020120"
  },
  {
    "text": "hard to fix when something breaks and it's hard to extend now if we take those",
    "start": "1020120",
    "end": "1025310"
  },
  {
    "text": "same participants and put a bus in the middle it's much simpler with the case of just",
    "start": "1025310",
    "end": "1030699"
  },
  {
    "text": "the six participants it's only 12 connections because each participant only needs two connections to the bus",
    "start": "1030700",
    "end": "1036339"
  },
  {
    "text": "they don't even know about each other and if we want to extend it to a fourth",
    "start": "1036340",
    "end": "1041350"
  },
  {
    "text": "consumer it's just two more connections that's linear growth and complexity it's",
    "start": "1041350",
    "end": "1046660"
  },
  {
    "text": "a lot easier to manage some other characteristics of a data bus that are important to us first it decouples",
    "start": "1046660",
    "end": "1053920"
  },
  {
    "start": "1049000",
    "end": "1049000"
  },
  {
    "text": "senders and receivers that's kind of like what I was just showing you secondly it has extensible features for",
    "start": "1053920",
    "end": "1061210"
  },
  {
    "text": "enriching filtering forking duplicating and storing data and thirdly it has",
    "start": "1061210",
    "end": "1067240"
  },
  {
    "text": "topics which are unique channels for specific data publications and lastly",
    "start": "1067240",
    "end": "1073000"
  },
  {
    "text": "it's reusable any number of topics producers and subscribers can",
    "start": "1073000",
    "end": "1078250"
  },
  {
    "text": "participate in this bus and these qualities are difficult if not impossible when senders and receivers",
    "start": "1078250",
    "end": "1084070"
  },
  {
    "text": "are directly connecting with each other so next let's move on to the second",
    "start": "1084070",
    "end": "1089590"
  },
  {
    "text": "point I wanted to make and that's the bus foundation here's where we were back in 2014 when we decided to build our own",
    "start": "1089590",
    "end": "1096790"
  },
  {
    "text": "bus it's probably a pretty familiar stack if you're into the Big Data world",
    "start": "1096790",
    "end": "1102690"
  },
  {
    "text": "we had things like flume Hadoop storm Kafka mem sequel you might also",
    "start": "1102690",
    "end": "1109720"
  },
  {
    "text": "recognize this as something some people call the lambda pattern not to be confused with Amazon lambda across the",
    "start": "1109720",
    "end": "1117220"
  },
  {
    "text": "top is the more bachelor oriented analytics path where you can do rich historical analytics and have a",
    "start": "1117220",
    "end": "1123250"
  },
  {
    "text": "reporting front end like tableau to represent it and the bottom path is the more real-time streaming path for",
    "start": "1123250",
    "end": "1129820"
  },
  {
    "text": "real-time urgency data we went along",
    "start": "1129820",
    "end": "1135940"
  },
  {
    "start": "1135000",
    "end": "1135000"
  },
  {
    "text": "with this for a while but after a year we were continuing to have challenges namely with the kafka bus at this point",
    "start": "1135940",
    "end": "1144580"
  },
  {
    "text": "our mean time between failure was two weeks our mean time to recovery was four",
    "start": "1144580",
    "end": "1149980"
  },
  {
    "text": "hours the impact well it affected syndication subscribers and it required",
    "start": "1149980",
    "end": "1155200"
  },
  {
    "text": "extensive overtime for the staff and the root causes of these problems ranged",
    "start": "1155200",
    "end": "1160210"
  },
  {
    "text": "from data balancing on the kafka cluster infrastructure issues zookeeper problems",
    "start": "1160210",
    "end": "1166000"
  },
  {
    "text": "and overloading by others noisy neighbours in addition to that we had",
    "start": "1166000",
    "end": "1171550"
  },
  {
    "text": "weak or missing features in this environment namely multi-tenant guardrails to protect us from noisy",
    "start": "1171550",
    "end": "1178360"
  },
  {
    "text": "neighbours elastic scale is very difficult to achieve with Kafka security",
    "start": "1178360",
    "end": "1183880"
  },
  {
    "text": "was non-existent in 2014 it's there now but it's pretty primitive and lastly geo",
    "start": "1183880",
    "end": "1190240"
  },
  {
    "text": "distributed high availability is very difficult to do and we were at the point",
    "start": "1190240",
    "end": "1195610"
  },
  {
    "text": "where we had to think about something different our partner was just our",
    "start": "1195610",
    "end": "1201220"
  },
  {
    "text": "second partner was just about to get started our first partner was already getting it streams directly from Kafka",
    "start": "1201220",
    "end": "1206590"
  },
  {
    "text": "and we really didn't like that arrangement it presented an unpredictable load pattern inside of our",
    "start": "1206590",
    "end": "1211840"
  },
  {
    "text": "data centers it created a little bit of a security challenge so we wanted to move away from that and time and",
    "start": "1211840",
    "end": "1218890"
  },
  {
    "text": "patience were frankly running out for this situation so what we did is first",
    "start": "1218890",
    "end": "1224860"
  },
  {
    "start": "1223000",
    "end": "1223000"
  },
  {
    "text": "thought let's deliver these streams from Kafka out to a reliable and in sort of a",
    "start": "1224860",
    "end": "1231310"
  },
  {
    "text": "DMZ like environment for our partners let's ask them to establish a Masonic",
    "start": "1231310",
    "end": "1236860"
  },
  {
    "text": "house and give us cough Kinesis streams to forward their data to that would",
    "start": "1236860",
    "end": "1242200"
  },
  {
    "text": "solve security high availability and scale for us so we did that we worked",
    "start": "1242200",
    "end": "1248080"
  },
  {
    "text": "with our partners coach them on and so pitch to them the benefits of doing",
    "start": "1248080",
    "end": "1253720"
  },
  {
    "text": "things this way we got their local Amazon teams on board and held their hands and got them going and as it was",
    "start": "1253720",
    "end": "1260350"
  },
  {
    "text": "moving along the elephant in the room for us became why are we still struggling with Kafka so we pivoted and",
    "start": "1260350",
    "end": "1267940"
  },
  {
    "text": "went with Kinesis as well so as of about December January this year this is what",
    "start": "1267940",
    "end": "1273520"
  },
  {
    "text": "things looked like for us we began building topics on Kinesis we went",
    "start": "1273520",
    "end": "1279220"
  },
  {
    "text": "through the learning curve or developers really started getting on board but I have to say to you that our developers",
    "start": "1279220",
    "end": "1286120"
  },
  {
    "text": "were initially kind of resistant now in the x1 organization overall we're very",
    "start": "1286120",
    "end": "1292020"
  },
  {
    "text": "invented here kind of mindset we love open source we love building everything ourselves so getting a group of heady",
    "start": "1292020",
    "end": "1299440"
  },
  {
    "text": "engineers to let go of some of that and move over to a managed service was a little bit of a persuasion effort on",
    "start": "1299440",
    "end": "1306220"
  },
  {
    "text": "some of our parts but they got on board and as the more they got on board they began to experience what we now call",
    "start": "1306220",
    "end": "1313180"
  },
  {
    "text": "serverless computing a little bit of it and the relief of doing that became",
    "start": "1313180",
    "end": "1318760"
  },
  {
    "text": "pretty palpable they were liking it and additionally I could say that X 1",
    "start": "1318760",
    "end": "1325630"
  },
  {
    "text": "overall from the beginning has embraced amazon web services as infrastructure",
    "start": "1325630",
    "end": "1330850"
  },
  {
    "text": "only and this was one of the early steps into managed services for anyone in x1",
    "start": "1330850",
    "end": "1337740"
  },
  {
    "text": "so a lot of newness going on here and a little bit of culture shift what",
    "start": "1337740",
    "end": "1343480"
  },
  {
    "text": "happened then is we some of us nudged the teams into more managed services to build out the the capabilities of the",
    "start": "1343480",
    "end": "1350710"
  },
  {
    "text": "Kinesis environment and so we did they already had committed to using spark",
    "start": "1350710",
    "end": "1356560"
  },
  {
    "text": "they being the engineers so why not do spark on EMR kind of a semi managed",
    "start": "1356560",
    "end": "1361960"
  },
  {
    "text": "environment take away the server cluster management headaches and think about Kinesis analytics we just got to know",
    "start": "1361960",
    "end": "1368620"
  },
  {
    "text": "about that recently and we're looking into it and starting to use it what about Kinesis firehose a really easy way",
    "start": "1368620",
    "end": "1375790"
  },
  {
    "text": "to archive Kinesis streams into s3 that was easy and we did that early on and what got really interesting is I was AWS",
    "start": "1375790",
    "end": "1384310"
  },
  {
    "text": "lambda as a computing platform so storm and spark her great but lambda became",
    "start": "1384310",
    "end": "1391030"
  },
  {
    "text": "pretty interesting as also a real-time processing environment especially for",
    "start": "1391030",
    "end": "1396070"
  },
  {
    "text": "producing and consuming streams into and out of lambda Kinesis so there we were",
    "start": "1396070",
    "end": "1403500"
  },
  {
    "text": "so that's the the data bus foundation and I mentions there were some qualities that were really important to us that",
    "start": "1403500",
    "end": "1409330"
  },
  {
    "start": "1404000",
    "end": "1404000"
  },
  {
    "text": "were a little bit weak before these four qualities were multi-tenancy elastic scale security and high availability",
    "start": "1409330",
    "end": "1416070"
  },
  {
    "text": "let's talk about how Kinesis addresses those first with multi-tenancy now by",
    "start": "1416070",
    "end": "1423130"
  },
  {
    "start": "1419000",
    "end": "1419000"
  },
  {
    "text": "multi-tenancy i mean something specific on a data bus i want to be sure that",
    "start": "1423130",
    "end": "1428320"
  },
  {
    "text": "my capacity is mine and nobody can mess with it and I'm pretty sure the other tenants feel the same way here's how",
    "start": "1428320",
    "end": "1435610"
  },
  {
    "text": "Kinesis does that the key here is something called the shard and a shard has strict read and write limits on it",
    "start": "1435610",
    "end": "1442120"
  },
  {
    "text": "if you exceed the capacity you'll time out either as a producer or a consumer and that's what we want if you need more",
    "start": "1442120",
    "end": "1450250"
  },
  {
    "text": "capacity you can ask for it and closely related to that then is elastic scale",
    "start": "1450250",
    "end": "1456940"
  },
  {
    "start": "1454000",
    "end": "1454000"
  },
  {
    "text": "how do you scale with Kinesis the idea is you ask for more shards let's say in",
    "start": "1456940",
    "end": "1464559"
  },
  {
    "text": "this scenario we're floating along happily with tushar that's handling the load but then somehow we detect hotness",
    "start": "1464559",
    "end": "1470710"
  },
  {
    "text": "and that means we're running out of capacity well you can solve it very quickly by making the API call with a",
    "start": "1470710",
    "end": "1477580"
  },
  {
    "text": "plus one meaning give me one more shard in that case the API will do a split it'll take the data that's running into",
    "start": "1477580",
    "end": "1484690"
  },
  {
    "text": "shards and distribute it across three and let's say everything is happy at that point and let's say actually things",
    "start": "1484690",
    "end": "1491320"
  },
  {
    "text": "cool off and you detect that it's too cool you're probably wasting money you've got too much capacity you call",
    "start": "1491320",
    "end": "1496870"
  },
  {
    "text": "the same API with a minus one and it'll take that one shard away and merge your",
    "start": "1496870",
    "end": "1502240"
  },
  {
    "text": "data onto two shards now so that's what we do this is really easy using the API",
    "start": "1502240",
    "end": "1508899"
  },
  {
    "text": "externally to any of your consumers or producers and have your consumers and producers just using the kpl on kacl but",
    "start": "1508899",
    "end": "1516100"
  },
  {
    "text": "because they won't know about this adding and taking away of shards I also want to tell you just FYI of something",
    "start": "1516100",
    "end": "1522759"
  },
  {
    "text": "we got wrong and maybe you'll learn from it some one on one of our teams tried to",
    "start": "1522759",
    "end": "1527919"
  },
  {
    "text": "go it alone without the kpl and kind of misunderstood what a fundamental",
    "start": "1527919",
    "end": "1534070"
  },
  {
    "text": "principle here is that Kinesis calls batching and specifically batching consists of two topics one called",
    "start": "1534070",
    "end": "1542970"
  },
  {
    "start": "1537000",
    "end": "1537000"
  },
  {
    "text": "collecting any other called aggregating so over on the Left imagine these are",
    "start": "1542970",
    "end": "1548830"
  },
  {
    "text": "all your records that you're trying to jam into a Kinesis stream you've got some sort of producing application looping along and throwing things into",
    "start": "1548830",
    "end": "1555639"
  },
  {
    "text": "the API let's say it's the kpl you're using so you're kind of blind to what's",
    "start": "1555639",
    "end": "1560769"
  },
  {
    "text": "going on under the cup but what the kpl is doing for you something called aggregating aggregating",
    "start": "1560769",
    "end": "1566470"
  },
  {
    "text": "tries to pack as much of your user records as possible into as few Kinesis records as possible to optimize how much",
    "start": "1566470",
    "end": "1573490"
  },
  {
    "text": "you can get into the stream every second in addition there's something called",
    "start": "1573490",
    "end": "1578770"
  },
  {
    "text": "collecting when the algorithm in the kpl recognizes it's time to punt it's time",
    "start": "1578770",
    "end": "1584770"
  },
  {
    "text": "to get that payload out the door every second it will pass it on to an API called put records put records will",
    "start": "1584770",
    "end": "1592390"
  },
  {
    "text": "optimize network bandwidth by putting all of those records that da kpl just produced into one call minimizing",
    "start": "1592390",
    "end": "1599650"
  },
  {
    "text": "Network chatter so aggregating maca maximizes your throughput per second and",
    "start": "1599650",
    "end": "1605470"
  },
  {
    "text": "collecting macom maximizes your network bandwidth where we got it wrong by not",
    "start": "1605470",
    "end": "1610960"
  },
  {
    "text": "using the kpl is our producer was just looping through user records doing put",
    "start": "1610960",
    "end": "1616390"
  },
  {
    "text": "records calls and our I 0 through Kinesis fell through the floor was really bad so next thirdly we talked",
    "start": "1616390",
    "end": "1625660"
  },
  {
    "text": "about security as a feature we wanted and Kinesis being an amazon service has",
    "start": "1625660",
    "end": "1633100"
  },
  {
    "text": "all of the familiar Amazon security features so there's no question about how that security is great it's just a",
    "start": "1633100",
    "end": "1639160"
  },
  {
    "text": "question of what how what options you want to take advantage of and how you want to use them I am credentials is one",
    "start": "1639160",
    "end": "1644920"
  },
  {
    "text": "option Federation is an option and cross the count trust as an option and that's",
    "start": "1644920",
    "end": "1650890"
  },
  {
    "text": "the one that worked best for us so let me drill into it for just a second here first imagine that we have two accounts",
    "start": "1650890",
    "end": "1658330"
  },
  {
    "start": "1655000",
    "end": "1655000"
  },
  {
    "text": "which is what we have to deal with in our situation we've got the partner who has to trust us to write to their",
    "start": "1658330",
    "end": "1664780"
  },
  {
    "text": "Kinesis stream as I mentioned and we have us the publisher who needs to be trusted how that works is first the",
    "start": "1664780",
    "end": "1672550"
  },
  {
    "text": "trusting account the partner needs to set up a couple of things a couple of policies here one declaring a role and",
    "start": "1672550",
    "end": "1679780"
  },
  {
    "text": "what that role can do in this case it's all about the limited rights that we",
    "start": "1679780",
    "end": "1684940"
  },
  {
    "text": "want to have on Kinesis describe records put record put records and then they",
    "start": "1684940",
    "end": "1690040"
  },
  {
    "text": "have to have another statement to describe what account can assume that role that would be us in this case next over",
    "start": "1690040",
    "end": "1697309"
  },
  {
    "text": "one on our side of things we also have to declare what role we're going to",
    "start": "1697309",
    "end": "1702500"
  },
  {
    "text": "Alette a specific participant assume in that other account so here what we're",
    "start": "1702500",
    "end": "1707990"
  },
  {
    "text": "saying is we're going to allow lambda to assume that role in the other account now we can get into action here the",
    "start": "1707990",
    "end": "1715490"
  },
  {
    "text": "lambda publisher can reach out to the other account and authenticate because",
    "start": "1715490",
    "end": "1721700"
  },
  {
    "text": "of all the policy that the other side set up they'll say yes have at it and return a temporary set of credentials",
    "start": "1721700",
    "end": "1728600"
  },
  {
    "text": "that the publisher can use and go ahead and start writing to a Kinesis stream",
    "start": "1728600",
    "end": "1734890"
  },
  {
    "text": "the nice thing about this is those credentials expire in an hour they can inspire suit sooner if someone wanted to",
    "start": "1734890",
    "end": "1741440"
  },
  {
    "text": "manually take it away the privileges so it's a very secure way of doing things and it also doesn't proliferate I am",
    "start": "1741440",
    "end": "1748250"
  },
  {
    "text": "logins and all your accounts that's a mess doesn't scale very well so that's",
    "start": "1748250",
    "end": "1753590"
  },
  {
    "text": "great for us the next quality I wanted to talk about it's the final one is what",
    "start": "1753590",
    "end": "1759020"
  },
  {
    "text": "I call opaque high availability so high availability can mean a lot of things but what I mean here is I want the",
    "start": "1759020",
    "end": "1766370"
  },
  {
    "text": "service to be deployed across three data centers at least secondly I want all",
    "start": "1766370",
    "end": "1772250"
  },
  {
    "text": "three locations to be active no active standby no failover failback and thirdly",
    "start": "1772250",
    "end": "1778030"
  },
  {
    "text": "my applications shouldn't be aware of any of those data centers their point of",
    "start": "1778030",
    "end": "1783140"
  },
  {
    "text": "contact should be a URL and lastly my applications won't know about a failure",
    "start": "1783140",
    "end": "1788809"
  },
  {
    "text": "if it failure happens in an entire data center I want to just be redirected to one of the other two and I don't want to",
    "start": "1788809",
    "end": "1794690"
  },
  {
    "text": "know about it so this is effectively what kinesis does normally the the",
    "start": "1794690",
    "end": "1802059"
  },
  {
    "text": "interaction is to a URL and something is directing that URL to one of the Kinesis",
    "start": "1802059",
    "end": "1808090"
  },
  {
    "text": "availability zones I don't know I don't care how that happens and next what",
    "start": "1808090",
    "end": "1813169"
  },
  {
    "text": "would happen if an entire availability zone fails is that something in between would direct me somewhere else again i",
    "start": "1813169",
    "end": "1819169"
  },
  {
    "text": "don't know i don't care i'm happy no failover know Faye bat fail back no",
    "start": "1819169",
    "end": "1825530"
  },
  {
    "text": "replay or recovery no message loss or duplication now our",
    "start": "1825530",
    "end": "1832289"
  },
  {
    "text": "third point of our solution I mentioned was called the data bus ecosystem we've talked about the pattern and the foundation now the ecosystem why the",
    "start": "1832289",
    "end": "1840059"
  },
  {
    "text": "ecosystem well in spite of all the riches I've described so far with Amazon managed services around Kinesis it still",
    "start": "1840059",
    "end": "1847230"
  },
  {
    "text": "wasn't enough for our purposes there are some additional things we had to build we need to build three things we needed",
    "start": "1847230",
    "end": "1855149"
  },
  {
    "text": "to build schema management we needed to build self-service message routing and",
    "start": "1855149",
    "end": "1862529"
  },
  {
    "text": "we needed to define and establish security governance so first schema",
    "start": "1862529",
    "end": "1868260"
  },
  {
    "text": "management what is schema in this case well schema is the thing that's going to",
    "start": "1868260",
    "end": "1873570"
  },
  {
    "text": "describe what every single message looks like flowing through the bus for a particular topic and it's a text",
    "start": "1873570",
    "end": "1879779"
  },
  {
    "text": "template that defines the look of the message it's JSON now there's a lot of ways to do this Google protocol buffers",
    "start": "1879779",
    "end": "1887340"
  },
  {
    "text": "is one thrift is one Avro is another we chose Avro with a significant twist to",
    "start": "1887340",
    "end": "1893130"
  },
  {
    "text": "it so here's an Avro sample schema it's just JSON and it describes what a an",
    "start": "1893130",
    "end": "1899399"
  },
  {
    "text": "Avro message would look like for this particular scheme ID and what it would",
    "start": "1899399",
    "end": "1904649"
  },
  {
    "text": "look like in the abstract is schema up top and a lot of data encoded as binary",
    "start": "1904649",
    "end": "1909750"
  },
  {
    "text": "records below it avril has the concept of a dro containers the idea is some",
    "start": "1909750",
    "end": "1915450"
  },
  {
    "text": "process will declare the schema and serialize the schema and a bunch of",
    "start": "1915450",
    "end": "1920520"
  },
  {
    "text": "Records out to a container that ends up in a file it's great for batch processing environments like mapreduce",
    "start": "1920520",
    "end": "1927240"
  },
  {
    "text": "and hadoop but we wanted to hijack it and use it for streaming purposes which is not really designed for here's a",
    "start": "1927240",
    "end": "1936240"
  },
  {
    "text": "particular Avro message the actually is a container the big blue part is the",
    "start": "1936240",
    "end": "1943140"
  },
  {
    "text": "schema a schema that defines eight fields and at the bottom there are two records eight bytes apiece it happens to",
    "start": "1943140",
    "end": "1950640"
  },
  {
    "text": "be a Twitter tweet this was going to work so well for us because if we tried to stream anything like this",
    "start": "1950640",
    "end": "1957350"
  },
  {
    "text": "it would look something like this lots of schema and a little bit of binary data every second so we had to figure",
    "start": "1957350",
    "end": "1965059"
  },
  {
    "text": "out how we're going to do something different what we did is this we chucked",
    "start": "1965059",
    "end": "1970100"
  },
  {
    "start": "1968000",
    "end": "1968000"
  },
  {
    "text": "the schema and instead created a custom header that's eight bytes long only three of which we're using right now it",
    "start": "1970100",
    "end": "1976400"
  },
  {
    "text": "declares the schema ID and the major and minor version of the schema it's in",
    "start": "1976400",
    "end": "1981740"
  },
  {
    "text": "clear text and it's followed by the binary encoded single message by doing",
    "start": "1981740",
    "end": "1988340"
  },
  {
    "text": "this we save about sixty percent of what we would have had if we news use normal straight out of the box Avro and here's",
    "start": "1988340",
    "end": "1997850"
  },
  {
    "text": "what it looks like over streaming a little bit of header and a lot of binary data much better but it begs the",
    "start": "1997850",
    "end": "2005650"
  },
  {
    "text": "question where is the schema now what we created was a schema registry and that's",
    "start": "2005650",
    "end": "2013900"
  },
  {
    "start": "2008000",
    "end": "2008000"
  },
  {
    "text": "a lot like if you're familiar with XML like an x SD an XML file can have a URL",
    "start": "2013900",
    "end": "2019570"
  },
  {
    "text": "reference at the top that declares that references the x SD that describes the UML message it's a lot like that there",
    "start": "2019570",
    "end": "2026530"
  },
  {
    "text": "is an online schema registry that anyone who knows about it can refer to to get the schema and here's how it works the",
    "start": "2026530",
    "end": "2033880"
  },
  {
    "text": "producer of a message will create the schema and register it in the registry",
    "start": "2033880",
    "end": "2039070"
  },
  {
    "text": "then produce messages with that header on board that declares the schema reference it flows through the workflow",
    "start": "2039070",
    "end": "2047110"
  },
  {
    "text": "in the pipeline with a much lower payload the consumer gets it and the",
    "start": "2047110",
    "end": "2053260"
  },
  {
    "text": "first time they will actually have to do a lookup into that URL that I mentioned and pull the schema down cash it in",
    "start": "2053260",
    "end": "2058898"
  },
  {
    "text": "memory and keep it forever then from there on out as messages fly fly by",
    "start": "2058899",
    "end": "2064320"
  },
  {
    "text": "hundreds of thousands per second in our case they are simply looking at that clear text header and very quickly",
    "start": "2064320",
    "end": "2070750"
  },
  {
    "text": "making a decision whether they can accept the message or not if it's a schema version that they've got there fine they know how to interpret the",
    "start": "2070750",
    "end": "2077169"
  },
  {
    "text": "message and the second thing we had to build is something I call self service",
    "start": "2077169",
    "end": "2084128"
  },
  {
    "text": "message routing it's kind of related to the schema problem",
    "start": "2084129",
    "end": "2090090"
  },
  {
    "text": "you might have heard in the keynote today when Sri Cote talked about how fast we deliver features we do software",
    "start": "2090090",
    "end": "2098350"
  },
  {
    "start": "2093000",
    "end": "2093000"
  },
  {
    "text": "releases an x1 the rate of thousands per month and that means lots of new data features it might even mean existing",
    "start": "2098350",
    "end": "2105700"
  },
  {
    "text": "data features have changed and we have",
    "start": "2105700",
    "end": "2110770"
  },
  {
    "text": "to be able to move at the speed of our production of it to speed of our innovation and thus we have to release",
    "start": "2110770",
    "end": "2116770"
  },
  {
    "text": "new data features when we need to release them and can't be tightly bound to consumers readiness to receive them",
    "start": "2116770",
    "end": "2122610"
  },
  {
    "text": "so raises the question how in the world can we move forward with new data",
    "start": "2122610",
    "end": "2127690"
  },
  {
    "text": "changes new schema changes and not break the downstream consumers well what we",
    "start": "2127690",
    "end": "2134200"
  },
  {
    "start": "2133000",
    "end": "2133000"
  },
  {
    "text": "came up with it was this in the middle there Lucy something called the publishing agent and that's going to",
    "start": "2134200",
    "end": "2141640"
  },
  {
    "text": "have on it it's not quite done yet another registry area it will be an extension of the schema registry that I",
    "start": "2141640",
    "end": "2148120"
  },
  {
    "text": "already mentioned and there we will publish schema versions and consumers",
    "start": "2148120",
    "end": "2155980"
  },
  {
    "text": "will be able to log on there visually and see what's going on they'll notice they'll get notifications automatically",
    "start": "2155980",
    "end": "2161110"
  },
  {
    "text": "that new schema versions are ready and they'll be able to make routing decisions about new versions of a schema",
    "start": "2161110",
    "end": "2166240"
  },
  {
    "text": "when they come along let's walk through an actual scenario let's say right now schema version 1.2 is the happy one",
    "start": "2166240",
    "end": "2173080"
  },
  {
    "text": "everybody's got it it's flowing through it's going into the partners production path but let's say a new version comes",
    "start": "2173080",
    "end": "2181150"
  },
  {
    "text": "along in our world let's say it's specifically a breaking version i'll call it 2 point 0 meaning that an",
    "start": "2181150",
    "end": "2187030"
  },
  {
    "text": "existing field that say was an integer is now an array of integers that should",
    "start": "2187030",
    "end": "2192340"
  },
  {
    "text": "break their consumer they shouldn't know how to deal with an array so we've got",
    "start": "2192340",
    "end": "2197470"
  },
  {
    "text": "to release it we've developed our code or producer code around it we need to push in the production fast and not be",
    "start": "2197470",
    "end": "2203440"
  },
  {
    "text": "held back so that's what we do but because the router is not configured to do anything with it because the consumer",
    "start": "2203440",
    "end": "2210250"
  },
  {
    "text": "hasn't configured it yet it just drops on the floor so everyone is safe at this point we're done our work and now we're",
    "start": "2210250",
    "end": "2217180"
  },
  {
    "text": "someone's just waiting for the consumer to go I'll go ahead and and configure it to go where it needs to go",
    "start": "2217180",
    "end": "2225210"
  },
  {
    "text": "now they go along and develop their consuming code to deal with two point oh and it's time for them to test it and",
    "start": "2226860",
    "end": "2234180"
  },
  {
    "text": "that's what they'll do they'll go into the configuration set it up to route it to a new Kinesis stream for test",
    "start": "2234180",
    "end": "2240280"
  },
  {
    "text": "purposes they're on their own and when they get through their testing cyclin",
    "start": "2240280",
    "end": "2245380"
  },
  {
    "text": "are happy with it they can go ahead and promote it up their stock till it's into production and that's what they'll do",
    "start": "2245380",
    "end": "2250630"
  },
  {
    "text": "next so with that we're completely decoupled we moved at our pace they move",
    "start": "2250630",
    "end": "2257110"
  },
  {
    "text": "at their pace they're in control their destiny we're not going to break them the last thing we needed to deal with",
    "start": "2257110",
    "end": "2264010"
  },
  {
    "start": "2263000",
    "end": "2263000"
  },
  {
    "text": "that I said to complete our Arbus ecosystem is security governance now",
    "start": "2264010",
    "end": "2269380"
  },
  {
    "text": "this isn't code this isn't anything that engineers had to do but it's thinking about the security options that are",
    "start": "2269380",
    "end": "2276040"
  },
  {
    "text": "available to us within amazon and communicating with everyone including our partners and collaborating with them",
    "start": "2276040",
    "end": "2283030"
  },
  {
    "text": "and deciding how we're going to move forward with security and amounts to policy practices and procedures classic",
    "start": "2283030",
    "end": "2289570"
  },
  {
    "start": "2285000",
    "end": "2285000"
  },
  {
    "text": "governance so you have to do that you have to think about it you need to",
    "start": "2289570",
    "end": "2294690"
  },
  {
    "text": "evangelize it collaborate coach do whatever it takes to get everybody on board with that write it down and then",
    "start": "2294690",
    "end": "2300880"
  },
  {
    "text": "follow it it's a step we had to take the step anyone would have to take so let's",
    "start": "2300880",
    "end": "2306760"
  },
  {
    "start": "2306000",
    "end": "2306000"
  },
  {
    "text": "look at a retrospective now we took on a",
    "start": "2306760",
    "end": "2312820"
  },
  {
    "text": "mission critical data streaming challenge because of syndicating the x1",
    "start": "2312820",
    "end": "2318580"
  },
  {
    "text": "platform where data become a first became a first-class participant in that",
    "start": "2318580",
    "end": "2323770"
  },
  {
    "text": "platform it's not an afterthought it's a feature and we tried to do it in-house",
    "start": "2323770",
    "end": "2329470"
  },
  {
    "text": "we encountered some struggles we decided to pivot and go with managed services we",
    "start": "2329470",
    "end": "2335620"
  },
  {
    "text": "told you about some challenges that we had with with the in-house version and how we expected the managed service",
    "start": "2335620",
    "end": "2341620"
  },
  {
    "text": "approach to change some of that well so far our mean time between failure has",
    "start": "2341620",
    "end": "2347530"
  },
  {
    "text": "been infinity because we've never had a failure with Kinesis so far the meantime",
    "start": "2347530",
    "end": "2352720"
  },
  {
    "text": "to recovery of course is zero as well multi-tenant guardrails free sure i mentioned we're missing from",
    "start": "2352720",
    "end": "2359440"
  },
  {
    "text": "Kafka they're in place and they're clear and they're enforced by the platform the elastic scale is okay it's an API I",
    "start": "2359440",
    "end": "2367540"
  },
  {
    "text": "would like it to not be an API I would like it to be as easy as it is in fire hose so go go amazon and thirdly the",
    "start": "2367540",
    "end": "2377080"
  },
  {
    "text": "security is great I am saml Federation cross account trust they're all there to",
    "start": "2377080",
    "end": "2383230"
  },
  {
    "text": "make a decision about them and use them how you see fit and fourthly multi den",
    "start": "2383230",
    "end": "2388270"
  },
  {
    "text": "data center high availability is there now it's time for you to think about it",
    "start": "2388270",
    "end": "2395770"
  },
  {
    "text": "if I've done my job well as I said at the beginning maybe you've got some ideas from what I've mentioned in our",
    "start": "2395770",
    "end": "2401560"
  },
  {
    "text": "story of how you can apply some of this maybe you've got a workflow that's kind",
    "start": "2401560",
    "end": "2406990"
  },
  {
    "text": "of static kind of traditional ETL like and you'd like to think about streaming or you've got a new thing that's coming",
    "start": "2406990",
    "end": "2413320"
  },
  {
    "text": "along that really would benefit from streaming maybe you've been tackling streaming and maybe how facing some of",
    "start": "2413320",
    "end": "2420190"
  },
  {
    "text": "the same challenges we were facing either those are candidates for taking on an experiment you might want to",
    "start": "2420190",
    "end": "2426310"
  },
  {
    "text": "decide whether you want to go high visibility and maybe high risk or low visibility low risk but pick a data flow",
    "start": "2426310",
    "end": "2432600"
  },
  {
    "text": "preferably a new one and get an eager developer to who wants to get involved",
    "start": "2432600",
    "end": "2437890"
  },
  {
    "text": "with this and maybe get the resume perks from doing it pitch it to an end",
    "start": "2437890",
    "end": "2442900"
  },
  {
    "text": "consumer even if it's inside your organization your team and that's an",
    "start": "2442900",
    "end": "2447970"
  },
  {
    "text": "important step getting used to pitching it and advocating something that's quite different as a good thing to go through",
    "start": "2447970",
    "end": "2453870"
  },
  {
    "text": "choose a schema approach it really matters don't neglect this no good",
    "start": "2453870",
    "end": "2459040"
  },
  {
    "text": "having data flow through that nobody knows how to interpret decide on a real-time processing framework spark",
    "start": "2459040",
    "end": "2465850"
  },
  {
    "text": "storm AWS lambda lambda Kinesis analytics any or all of them build a",
    "start": "2465850",
    "end": "2472930"
  },
  {
    "text": "producer proxy to get data into Kinesis don't necessarily ask for the producer",
    "start": "2472930",
    "end": "2478330"
  },
  {
    "text": "to do that for you and get them all ramped up on how to do Kinesis take it on yourself as a proxy for them build a",
    "start": "2478330",
    "end": "2486580"
  },
  {
    "text": "consumer to get the data off Kinesis and get it somewhere useful maybe it only needs be at rest somewhere like us three that",
    "start": "2486580",
    "end": "2494070"
  },
  {
    "text": "would be easy to do with fire hose or maybe you want to send it somewhere so an ETL process can pick it up even",
    "start": "2494070",
    "end": "2499650"
  },
  {
    "text": "though s3 is a great a TTL pickup point and lastly evaluate that whole cycle and",
    "start": "2499650",
    "end": "2506760"
  },
  {
    "text": "decide how it went for you and iterate and do more so there's our story",
    "start": "2506760",
    "end": "2512510"
  },
  {
    "text": "remember to fill out your evaluations we want to know if this was useful for you and Liam and I will be here right now to",
    "start": "2512510",
    "end": "2519630"
  },
  {
    "text": "answer questions and maybe even a little longer if they go longer than that thank you questions are gone we can do some",
    "start": "2519630",
    "end": "2533130"
  },
  {
    "text": "onstage questions or take them down off to the side any questions yeah there's a",
    "start": "2533130",
    "end": "2540750"
  },
  {
    "text": "mic up for questions",
    "start": "2540750",
    "end": "2544640"
  },
  {
    "text": "or if you yell at I can repeat it for the the camera as well okay so just a",
    "start": "2546870",
    "end": "2561790"
  },
  {
    "text": "pretty simple question you mentioned previously you guys had different topics inside your your data bus environment",
    "start": "2561790",
    "end": "2568600"
  },
  {
    "text": "and I know that's a native concept inside of Kafka what did you guys do for that in your Kinesis environment where",
    "start": "2568600",
    "end": "2574960"
  },
  {
    "text": "they just separate streams or yes okay yeah we just consider streams equivalent to topics okay cool yeah thanks any",
    "start": "2574960",
    "end": "2583120"
  },
  {
    "text": "other questions hope when the avenue",
    "start": "2583120",
    "end": "2591430"
  },
  {
    "text": "data flows through kinds of streams and you have a fire hose we have a verb data",
    "start": "2591430",
    "end": "2597280"
  },
  {
    "text": "is not really plain simple avro no it's modified ever with a header and the payload and there is a schema look up to",
    "start": "2597280",
    "end": "2603970"
  },
  {
    "text": "create the final proper Avro file industry so how do you do that in the",
    "start": "2603970",
    "end": "2609790"
  },
  {
    "text": "fire hose we actually don't we just stream it as we've created it into fire hose and it's sitting there in a mangled",
    "start": "2609790",
    "end": "2616780"
  },
  {
    "text": "Avro for its not able to right yeah right we don't bother creating containers we've encountered a couple of",
    "start": "2616780",
    "end": "2622330"
  },
  {
    "text": "scenarios where people subscribers would like us to do that and we could do that hey I would probably do it in lambda you",
    "start": "2622330",
    "end": "2629320"
  },
  {
    "text": "take up a whole bunch of stuff periodic in batch form and create an avro container and send it out to s3 that way",
    "start": "2629320",
    "end": "2635730"
  },
  {
    "text": "okay yeah hi do you guys know the schema",
    "start": "2635730",
    "end": "2643390"
  },
  {
    "text": "registry that thing so how do you maintain that in a separate link cluster",
    "start": "2643390",
    "end": "2648970"
  },
  {
    "text": "or in a database how do you maintain okay that's kind of a single node of failure because if that fails and",
    "start": "2648970",
    "end": "2654160"
  },
  {
    "text": "everything right right so our standard with everything in x1 is high availability active active active",
    "start": "2654160",
    "end": "2660090"
  },
  {
    "text": "everything so the same with there for that so that registry is in three data",
    "start": "2660090",
    "end": "2666130"
  },
  {
    "text": "centers I think it's all an Amazon actually yeah it's all an Amazon the front end is all a web farm distributed",
    "start": "2666130",
    "end": "2674800"
  },
  {
    "text": "across three AZ s just in one region and then the backing data store is",
    "start": "2674800",
    "end": "2680069"
  },
  {
    "text": "believe DynamoDB okay a normal question you have used Kafka right before like",
    "start": "2680069",
    "end": "2686130"
  },
  {
    "text": "and Kafka make use of partisans two parties in the data how do you use that",
    "start": "2686130",
    "end": "2691440"
  },
  {
    "text": "in Kansas like or you have never used like how do we partition have our concept of partisans yeah leaves it's",
    "start": "2691440",
    "end": "2700979"
  },
  {
    "text": "really the same thing as shards I believe yeah same thing okay yeah oh yeah by the way Owen or I want to",
    "start": "2700979",
    "end": "2707880"
  },
  {
    "text": "emphasize this is not a bash of Kafka at all it's it's a showing that taking on",
    "start": "2707880",
    "end": "2713459"
  },
  {
    "text": "Kafka is a big undertaking plenty of people do Kafka really well and and Netflix in particular did it in a pretty",
    "start": "2713459",
    "end": "2720839"
  },
  {
    "text": "h a way by doing it in in amazon by just distributing the cluster across three",
    "start": "2720839",
    "end": "2726630"
  },
  {
    "text": "az's because the network lake and see latency is so slow you can get so fast start that you can get by with that so",
    "start": "2726630",
    "end": "2734039"
  },
  {
    "text": "it's not at all a bastion coffee it's just what we were trying to do was more than our particular team could actually succeed with a good presentation just",
    "start": "2734039",
    "end": "2745829"
  },
  {
    "text": "one question from a technical analysis why Avril why do you use a verizon meses",
    "start": "2745829",
    "end": "2751170"
  },
  {
    "text": "message specification over Lexus a protocol buffs that's little bit more specific for messaging right right we",
    "start": "2751170",
    "end": "2758279"
  },
  {
    "text": "were liking the the fact that Chris the binary encoding was good and the idea that it was actually possible to",
    "start": "2758279",
    "end": "2764219"
  },
  {
    "text": "separate out the schema we could figure out how to hack it and pull the schema out and not affect it there's also some",
    "start": "2764219",
    "end": "2770759"
  },
  {
    "text": "things on on either side or like when you're using java objects to to handle",
    "start": "2770759",
    "end": "2775799"
  },
  {
    "text": "the consumption of the rectory there's java generic objects and java specific object that you compile to the actual",
    "start": "2775799",
    "end": "2781559"
  },
  {
    "text": "schema to make make the object ready to to interpret the address schema that we liked as well those are some of the",
    "start": "2781559",
    "end": "2788099"
  },
  {
    "text": "factors ok make sense thank you yeah last question",
    "start": "2788099",
    "end": "2794538"
  },
  {
    "text": "come it's more around the fact of a blow",
    "start": "2795160",
    "end": "2800830"
  },
  {
    "text": "and the schema that you actually more hybrid hybridized schema maybe you",
    "start": "2800830",
    "end": "2807310"
  },
  {
    "text": "answer this question around do you actually input that in conjunction with your registry into any of the processing",
    "start": "2807310",
    "end": "2813640"
  },
  {
    "text": "engines to do any of the analytics or is it just for the screaming have not used it for analytics yet because I'm trying",
    "start": "2813640",
    "end": "2819730"
  },
  {
    "text": "to see whether I can actually try to use it for Matt for an analysis purpose",
    "start": "2819730",
    "end": "2824980"
  },
  {
    "text": "because it actually might work technically might work if I have",
    "start": "2824980",
    "end": "2830130"
  },
  {
    "text": "registry as robust as you're talking about did you do it do did you do any of",
    "start": "2830130",
    "end": "2836290"
  },
  {
    "text": "the analytics on that file so yeah I think I understand your question is this",
    "start": "2836290",
    "end": "2841780"
  },
  {
    "text": "this this fairly proprietary message flying by might not work so well in a",
    "start": "2841780",
    "end": "2846940"
  },
  {
    "text": "streaming analytics application is that it yes and have we tried to deal with that so the answer is we would have to",
    "start": "2846940",
    "end": "2854170"
  },
  {
    "text": "pull the schema down in real time and have it in cash in order to interpret it for analytics purpose because it is",
    "start": "2854170",
    "end": "2860440"
  },
  {
    "text": "binary encoded so even if we hadn't mangled it in any way it's still binary and it doesn't serve very well for",
    "start": "2860440",
    "end": "2867370"
  },
  {
    "text": "real-time analytics you have to decode it into full JSON ASCII text right yes",
    "start": "2867370",
    "end": "2874150"
  },
  {
    "text": "in order to make use of it have you done that no we haven't but it's not that we haven't tried I mean if we haven't even",
    "start": "2874150",
    "end": "2880810"
  },
  {
    "text": "tried because it hasn't been an application where that concerned with yet well we we will have to get to there",
    "start": "2880810",
    "end": "2887050"
  },
  {
    "text": "in order to take more advantage of for instance Kinesis analytics and that's where suddenly at lambda comes into play",
    "start": "2887050",
    "end": "2892540"
  },
  {
    "text": "so you would actually take it off the screen use lambda to shape it into a different format and possibly push it",
    "start": "2892540",
    "end": "2898060"
  },
  {
    "text": "into another Kinesis stream that you can then run your analytics on for something like Kinesis analytics that would be the",
    "start": "2898060",
    "end": "2903250"
  },
  {
    "text": "current methodology yeah be nice to have adapters in there that know how to deal with avril for insolence yeah Thank sure",
    "start": "2903250",
    "end": "2910060"
  },
  {
    "text": "and will be around here as well a little later we actually have some of the kinases team I see them I see them floating around the audience here so",
    "start": "2910060",
    "end": "2916000"
  },
  {
    "text": "we're round if you have any questions thank you thank you",
    "start": "2916000",
    "end": "2922289"
  }
]