[
  {
    "start": "0",
    "end": "27000"
  },
  {
    "text": "[Music]",
    "start": "0",
    "end": "3159"
  },
  {
    "text": "[Music]",
    "start": "5960",
    "end": "7319"
  },
  {
    "text": "just to give you a little bit of",
    "start": "7319",
    "end": "8360"
  },
  {
    "text": "background adroll is a multi-product",
    "start": "8360",
    "end": "11480"
  },
  {
    "text": "advertising technology company and",
    "start": "11480",
    "end": "14280"
  },
  {
    "text": "basically we uh have a bunch of",
    "start": "14280",
    "end": "16920"
  },
  {
    "text": "customers and for those customers we",
    "start": "16920",
    "end": "19400"
  },
  {
    "text": "want to show ads to end users we",
    "start": "19400",
    "end": "22400"
  },
  {
    "text": "participate in realtime bidding to buy",
    "start": "22400",
    "end": "26240"
  },
  {
    "text": "ads there are some users on the internet",
    "start": "26240",
    "end": "29119"
  },
  {
    "start": "27000",
    "end": "27000"
  },
  {
    "text": "there's an advertising exchange there's",
    "start": "29119",
    "end": "30840"
  },
  {
    "text": "some infrastructure that we have uh",
    "start": "30840",
    "end": "32719"
  },
  {
    "text": "we're 100% based on Amazon web services",
    "start": "32719",
    "end": "35079"
  },
  {
    "text": "by the way uh how do we show them ads",
    "start": "35079",
    "end": "38399"
  },
  {
    "text": "when these users are browsing the web",
    "start": "38399",
    "end": "41239"
  },
  {
    "text": "going to some website the ad exchange",
    "start": "41239",
    "end": "43760"
  },
  {
    "text": "will be contacted as a result of that",
    "start": "43760",
    "end": "46079"
  },
  {
    "text": "and they will then contact each of the",
    "start": "46079",
    "end": "48160"
  },
  {
    "text": "market participants which includes",
    "start": "48160",
    "end": "49800"
  },
  {
    "text": "adroll to say hey do you want a bid on",
    "start": "49800",
    "end": "53160"
  },
  {
    "text": "this guy or that guy or whatever and we",
    "start": "53160",
    "end": "57079"
  },
  {
    "text": "have an opportunity to bid in order to",
    "start": "57079",
    "end": "59440"
  },
  {
    "text": "actually decide whether to bid they also",
    "start": "59440",
    "end": "62559"
  },
  {
    "text": "provide some additional information uh",
    "start": "62559",
    "end": "64559"
  },
  {
    "text": "which lets us identify the user to some",
    "start": "64559",
    "end": "66880"
  },
  {
    "text": "degree so we're able to look up some",
    "start": "66880",
    "end": "69520"
  },
  {
    "text": "information about each user which lets",
    "start": "69520",
    "end": "71840"
  },
  {
    "text": "us make a decision on how much we value",
    "start": "71840",
    "end": "75759"
  },
  {
    "text": "uh an impression for that",
    "start": "75759",
    "end": "77799"
  },
  {
    "text": "User it's real time in the sense that we",
    "start": "77799",
    "end": "81560"
  },
  {
    "text": "have to respond to these requests uh in",
    "start": "81560",
    "end": "84240"
  },
  {
    "text": "a timely manner most ad exchanges have a",
    "start": "84240",
    "end": "87680"
  },
  {
    "text": "hard limit uh of 100 milliseconds so we",
    "start": "87680",
    "end": "90479"
  },
  {
    "text": "have to receive the request do all kinds",
    "start": "90479",
    "end": "93159"
  },
  {
    "text": "of processing on it uh validate our",
    "start": "93159",
    "end": "95880"
  },
  {
    "text": "system make sure it's",
    "start": "95880",
    "end": "97640"
  },
  {
    "text": "healthy find out what that user might be",
    "start": "97640",
    "end": "101000"
  },
  {
    "text": "interested in based on some data that we",
    "start": "101000",
    "end": "102479"
  },
  {
    "text": "pre-computed and stored uh we have to do",
    "start": "102479",
    "end": "104799"
  },
  {
    "text": "a lookup in Dynamo we have to do all",
    "start": "104799",
    "end": "107320"
  },
  {
    "text": "that and then return a response with a",
    "start": "107320",
    "end": "108719"
  },
  {
    "text": "price in less than 100 milliseconds so",
    "start": "108719",
    "end": "111159"
  },
  {
    "text": "that's what real time means it's also a",
    "start": "111159",
    "end": "115360"
  },
  {
    "text": "pretty high volume system uh I think the",
    "start": "115360",
    "end": "118360"
  },
  {
    "text": "current Global Peak uh beta request",
    "start": "118360",
    "end": "121000"
  },
  {
    "text": "volume is in excess of half a million",
    "start": "121000",
    "end": "123799"
  },
  {
    "text": "requests per second globally and that's",
    "start": "123799",
    "end": "126280"
  },
  {
    "text": "from every exchange combined uh this is",
    "start": "126280",
    "end": "128720"
  },
  {
    "text": "just for the real-time bidding product",
    "start": "128720",
    "end": "130000"
  },
  {
    "text": "there's also non-real time bidding",
    "start": "130000",
    "end": "132120"
  },
  {
    "text": "products that uh we also manage we are",
    "start": "132120",
    "end": "135000"
  },
  {
    "text": "100% based on Amazon web services like I",
    "start": "135000",
    "end": "137280"
  },
  {
    "text": "said uh we use Dynamo extensively I",
    "start": "137280",
    "end": "140480"
  },
  {
    "text": "think we're one of the top users of",
    "start": "140480",
    "end": "142200"
  },
  {
    "text": "Dynamo DB we upload data to and pull",
    "start": "142200",
    "end": "145319"
  },
  {
    "text": "data from S3 we use Kinesis uh so yeah",
    "start": "145319",
    "end": "149480"
  },
  {
    "start": "147000",
    "end": "147000"
  },
  {
    "text": "we also use Lambda we don't use Lambda",
    "start": "149480",
    "end": "152080"
  },
  {
    "text": "on the real-time bidding side but we do",
    "start": "152080",
    "end": "154319"
  },
  {
    "text": "use it to make our lives easier in other",
    "start": "154319",
    "end": "156720"
  },
  {
    "text": "areas which I'm going to talk about",
    "start": "156720",
    "end": "158280"
  },
  {
    "text": "today there are four areas that I",
    "start": "158280",
    "end": "159959"
  },
  {
    "text": "thought would be interesting to talk",
    "start": "159959",
    "end": "161239"
  },
  {
    "text": "about uh where we're using Lambda today",
    "start": "161239",
    "end": "164360"
  },
  {
    "text": "server housekeeping and by that I just",
    "start": "164360",
    "end": "167000"
  },
  {
    "text": "mean we have all these",
    "start": "167000",
    "end": "169239"
  },
  {
    "text": "servers we need to do things when these",
    "start": "169239",
    "end": "171319"
  },
  {
    "text": "servers come online and when they go",
    "start": "171319",
    "end": "173239"
  },
  {
    "text": "away we have a server housekeeping tool",
    "start": "173239",
    "end": "175519"
  },
  {
    "text": "that does that work offload and",
    "start": "175519",
    "end": "178000"
  },
  {
    "text": "privilege separation",
    "start": "178000",
    "end": "180560"
  },
  {
    "text": "by that I just",
    "start": "180560",
    "end": "181720"
  },
  {
    "text": "mean uh we have some system that is",
    "start": "181720",
    "end": "184720"
  },
  {
    "text": "receiving requests for work to be done",
    "start": "184720",
    "end": "186519"
  },
  {
    "text": "it just hands it off to Lambda to",
    "start": "186519",
    "end": "187920"
  },
  {
    "text": "actually do the",
    "start": "187920",
    "end": "189040"
  },
  {
    "text": "work uh event fan out and that's just uh",
    "start": "189040",
    "end": "193159"
  },
  {
    "text": "when we upload data S3 that results in",
    "start": "193159",
    "end": "196040"
  },
  {
    "text": "events occurring and we use Lambda to",
    "start": "196040",
    "end": "198799"
  },
  {
    "text": "Route those events and finally",
    "start": "198799",
    "end": "201040"
  },
  {
    "text": "serverless control systems on the",
    "start": "201040",
    "end": "203360"
  },
  {
    "text": "real-time bidding team uh as part of one",
    "start": "203360",
    "end": "205599"
  },
  {
    "text": "of our safety systems we actually have",
    "start": "205599",
    "end": "208599"
  },
  {
    "text": "uh a component that is is solely based",
    "start": "208599",
    "end": "211280"
  },
  {
    "text": "in Lambda and it reacts to S3 events and",
    "start": "211280",
    "end": "214159"
  },
  {
    "text": "its output uh is basically an S3 upload",
    "start": "214159",
    "end": "217239"
  },
  {
    "text": "that results in our system being",
    "start": "217239",
    "end": "218519"
  },
  {
    "text": "controlled as part of like a feedback",
    "start": "218519",
    "end": "220560"
  },
  {
    "text": "loop uh so we control our real-time",
    "start": "220560",
    "end": "222920"
  },
  {
    "text": "bidding product using Lambda so I",
    "start": "222920",
    "end": "226120"
  },
  {
    "text": "mentioned that we have a lot of servers",
    "start": "226120",
    "end": "229120"
  },
  {
    "text": "uh handling a lot of volume and by a lot",
    "start": "229120",
    "end": "231319"
  },
  {
    "text": "I mean up to a thousand as just an",
    "start": "231319",
    "end": "233480"
  },
  {
    "text": "example that number can vary throughout",
    "start": "233480",
    "end": "235239"
  },
  {
    "text": "the day uh this graph is from data dog",
    "start": "235239",
    "end": "239879"
  },
  {
    "text": "it's a plot of our bid request volume",
    "start": "239879",
    "end": "241720"
  },
  {
    "text": "over a period of a couple of days and as",
    "start": "241720",
    "end": "244360"
  },
  {
    "text": "you can see it varies uh throughout the",
    "start": "244360",
    "end": "246159"
  },
  {
    "text": "day so when there's uh a dip in volume",
    "start": "246159",
    "end": "250000"
  },
  {
    "text": "thanks to autoscaling we will uh have",
    "start": "250000",
    "end": "252200"
  },
  {
    "text": "fewer instances and as volume",
    "start": "252200",
    "end": "255000"
  },
  {
    "text": "increases we get more throughout the day",
    "start": "255000",
    "end": "258440"
  },
  {
    "text": "when these instances come online we want",
    "start": "258440",
    "end": "261320"
  },
  {
    "text": "to take action uh we want to set up",
    "start": "261320",
    "end": "264360"
  },
  {
    "text": "ancillary resources that these instances",
    "start": "264360",
    "end": "267199"
  },
  {
    "text": "depend on in order to function correctly",
    "start": "267199",
    "end": "270039"
  },
  {
    "text": "and it turns out as I'll describ that",
    "start": "270039",
    "end": "272600"
  },
  {
    "text": "Lambda is actually a pretty good fit for",
    "start": "272600",
    "end": "274440"
  },
  {
    "text": "this with this system as I said we need",
    "start": "274440",
    "end": "277320"
  },
  {
    "text": "to keep track of all of our instances we",
    "start": "277320",
    "end": "279960"
  },
  {
    "text": "need to have control over them and for",
    "start": "279960",
    "end": "282360"
  },
  {
    "text": "anything that we set up we need it to go",
    "start": "282360",
    "end": "284520"
  },
  {
    "text": "away when the instances go away since",
    "start": "284520",
    "end": "286320"
  },
  {
    "text": "we're using autoscaling we can actually",
    "start": "286320",
    "end": "288400"
  },
  {
    "text": "use uh this neat feature called life",
    "start": "288400",
    "end": "290639"
  },
  {
    "text": "cycle hooks a life cycle Hook is",
    "start": "290639",
    "end": "293400"
  },
  {
    "text": "basically something that allows you to",
    "start": "293400",
    "end": "295440"
  },
  {
    "text": "take action while your instance is",
    "start": "295440",
    "end": "297600"
  },
  {
    "text": "pending and before it actually enters",
    "start": "297600",
    "end": "299160"
  },
  {
    "text": "into service",
    "start": "299160",
    "end": "300320"
  },
  {
    "text": "and similarly when it's terminating",
    "start": "300320",
    "end": "302520"
  },
  {
    "text": "before it actually terminates you have",
    "start": "302520",
    "end": "303960"
  },
  {
    "text": "an opportunity to take action and you",
    "start": "303960",
    "end": "306720"
  },
  {
    "text": "can take pretty much any action here",
    "start": "306720",
    "end": "310000"
  },
  {
    "text": "uh essentially the life cycle hook",
    "start": "310000",
    "end": "313880"
  },
  {
    "text": "specifies uh a notification Target for",
    "start": "313880",
    "end": "316720"
  },
  {
    "text": "an autoscaling event and along with that",
    "start": "316720",
    "end": "319759"
  },
  {
    "text": "event there's a life cycle token which",
    "start": "319759",
    "end": "322880"
  },
  {
    "text": "your life cycle hook Handler can then",
    "start": "322880",
    "end": "325000"
  },
  {
    "text": "use to complete the life cycle action",
    "start": "325000",
    "end": "326560"
  },
  {
    "text": "after it's taken whatever actions it",
    "start": "326560",
    "end": "328319"
  },
  {
    "text": "needs to take as an example of what this",
    "start": "328319",
    "end": "330639"
  },
  {
    "text": "looks like this is just attaching a life",
    "start": "330639",
    "end": "333600"
  },
  {
    "text": "cycle hook uh to an autoscaling group",
    "start": "333600",
    "end": "336560"
  },
  {
    "text": "and for this code by the way I actually",
    "start": "336560",
    "end": "338600"
  },
  {
    "text": "created a uh public repo on GitHub under",
    "start": "338600",
    "end": "342039"
  },
  {
    "text": "adroll just with some examples of uh",
    "start": "342039",
    "end": "345680"
  },
  {
    "text": "like a complete uh system that exercises",
    "start": "345680",
    "end": "350120"
  },
  {
    "text": "what I'm describing here server",
    "start": "350120",
    "end": "351880"
  },
  {
    "text": "housekeeping as well as something I'll",
    "start": "351880",
    "end": "354160"
  },
  {
    "text": "talk about in the next section why",
    "start": "354160",
    "end": "356360"
  },
  {
    "text": "Lambda you don't have to use Lambda for",
    "start": "356360",
    "end": "358319"
  },
  {
    "text": "this uh you could have your life cycle",
    "start": "358319",
    "end": "362400"
  },
  {
    "text": "uh your auto scaling event be sent to an",
    "start": "362400",
    "end": "364360"
  },
  {
    "text": "sqsq which you have some server that is",
    "start": "364360",
    "end": "367240"
  },
  {
    "text": "sitting around waiting for to process uh",
    "start": "367240",
    "end": "370240"
  },
  {
    "text": "for us though on the realtime bidding",
    "start": "370240",
    "end": "372680"
  },
  {
    "text": "team",
    "start": "372680",
    "end": "373759"
  },
  {
    "text": "specifically we don't want to add more",
    "start": "373759",
    "end": "375840"
  },
  {
    "text": "different kinds of servers to our",
    "start": "375840",
    "end": "377759"
  },
  {
    "text": "system every time we add a new kind of",
    "start": "377759",
    "end": "380440"
  },
  {
    "text": "thing into our system which is different",
    "start": "380440",
    "end": "382280"
  },
  {
    "text": "from everything else is there it's",
    "start": "382280",
    "end": "383960"
  },
  {
    "text": "additional complexity that we don't need",
    "start": "383960",
    "end": "385960"
  },
  {
    "text": "and we on the rtb team maintain our own",
    "start": "385960",
    "end": "388039"
  },
  {
    "text": "infrastructure so if something goes",
    "start": "388039",
    "end": "389919"
  },
  {
    "text": "wrong and we're troubleshooting that's",
    "start": "389919",
    "end": "391840"
  },
  {
    "text": "just an additional burden on every team",
    "start": "391840",
    "end": "393759"
  },
  {
    "text": "member to understand okay go check on",
    "start": "393759",
    "end": "396240"
  },
  {
    "text": "this server now uh so if we can avoid",
    "start": "396240",
    "end": "399199"
  },
  {
    "text": "running servers that's a good thing and",
    "start": "399199",
    "end": "401759"
  },
  {
    "text": "obviously that's one of the central",
    "start": "401759",
    "end": "404440"
  },
  {
    "text": "Promises of Lambda so good",
    "start": "404440",
    "end": "407199"
  },
  {
    "text": "fit",
    "start": "407199",
    "end": "409080"
  },
  {
    "text": "secondly if your code isn't running then",
    "start": "409080",
    "end": "411319"
  },
  {
    "text": "you don't pay for it uh it may not",
    "start": "411319",
    "end": "414800"
  },
  {
    "text": "matter here specifically but",
    "start": "414800",
    "end": "417919"
  },
  {
    "text": "conceptually that's pleasing uh to me at",
    "start": "417919",
    "end": "420879"
  },
  {
    "text": "least uh if we have long L periods where",
    "start": "420879",
    "end": "425080"
  },
  {
    "text": "our autoscaling groups have no activity",
    "start": "425080",
    "end": "427039"
  },
  {
    "text": "which we do we have several minutes uh",
    "start": "427039",
    "end": "429599"
  },
  {
    "text": "all the time where nothing happens then",
    "start": "429599",
    "end": "431520"
  },
  {
    "text": "we don't",
    "start": "431520",
    "end": "432759"
  },
  {
    "text": "pay uh again with the serverless aspect",
    "start": "432759",
    "end": "437280"
  },
  {
    "text": "if we can shift the management burden",
    "start": "437280",
    "end": "440160"
  },
  {
    "text": "onto Amazon that's something less for us",
    "start": "440160",
    "end": "443319"
  },
  {
    "text": "to worry",
    "start": "443319",
    "end": "445639"
  },
  {
    "text": "about uh it also kind of promotes a more",
    "start": "445639",
    "end": "448440"
  },
  {
    "text": "functional Style",
    "start": "448440",
    "end": "450240"
  },
  {
    "text": "and by that I just mean instead of",
    "start": "450240",
    "end": "452520"
  },
  {
    "text": "standing up some server which has some",
    "start": "452520",
    "end": "454800"
  },
  {
    "text": "complicated internal State you're just",
    "start": "454800",
    "end": "457280"
  },
  {
    "text": "feeding events to your Lambda functions",
    "start": "457280",
    "end": "458759"
  },
  {
    "text": "and they're reacting to them and it's",
    "start": "458759",
    "end": "460400"
  },
  {
    "text": "just simple to think about I think uh if",
    "start": "460400",
    "end": "462879"
  },
  {
    "text": "you have a small function that just does",
    "start": "462879",
    "end": "464919"
  },
  {
    "text": "one thing",
    "start": "464919",
    "end": "465960"
  },
  {
    "text": "well I think that's a good thing as",
    "start": "465960",
    "end": "468120"
  },
  {
    "text": "opposed",
    "start": "468120",
    "end": "469120"
  },
  {
    "text": "to well the alternative and you can run",
    "start": "469120",
    "end": "472400"
  },
  {
    "text": "just about any code uh it doesn't have",
    "start": "472400",
    "end": "474800"
  },
  {
    "text": "to be in python or JavaScript although",
    "start": "474800",
    "end": "477199"
  },
  {
    "text": "you do need a harness to run whatever",
    "start": "477199",
    "end": "478599"
  },
  {
    "text": "code you want but",
    "start": "478599",
    "end": "480360"
  },
  {
    "text": "uh and in fact one of our teams does run",
    "start": "480360",
    "end": "482720"
  },
  {
    "text": "a pretty complicated C program that's",
    "start": "482720",
    "end": "485080"
  },
  {
    "text": "launched using a python Lambda Handler",
    "start": "485080",
    "end": "487520"
  },
  {
    "text": "uh to handle something which I'll talk",
    "start": "487520",
    "end": "488680"
  },
  {
    "text": "about later I mentioned that when our",
    "start": "488680",
    "end": "490599"
  },
  {
    "text": "instances launch we have to set up",
    "start": "490599",
    "end": "492039"
  },
  {
    "text": "ancillary infrastructure that those",
    "start": "492039",
    "end": "494400"
  },
  {
    "text": "instances need in order to function uh",
    "start": "494400",
    "end": "497120"
  },
  {
    "text": "what we actually do is uh what actually",
    "start": "497120",
    "end": "500720"
  },
  {
    "text": "happens is the life cycle hook will",
    "start": "500720",
    "end": "504479"
  },
  {
    "text": "cause an event uh to be passed to an SNS",
    "start": "504479",
    "end": "507960"
  },
  {
    "text": "topic that topic is used as an event",
    "start": "507960",
    "end": "510960"
  },
  {
    "text": "source for a Lambda function that",
    "start": "510960",
    "end": "513479"
  },
  {
    "text": "function then takes whatever actions it",
    "start": "513479",
    "end": "515080"
  },
  {
    "text": "needs then finally completes the life",
    "start": "515080",
    "end": "517000"
  },
  {
    "text": "cycle uh which lets our instances",
    "start": "517000",
    "end": "518680"
  },
  {
    "text": "continue what we do is create an sqs Q",
    "start": "518680",
    "end": "522039"
  },
  {
    "text": "for every one of our instances uh the Q",
    "start": "522039",
    "end": "524760"
  },
  {
    "text": "name includes the instance ID and when",
    "start": "524760",
    "end": "528000"
  },
  {
    "text": "an instance wants to uh access its que",
    "start": "528000",
    "end": "532959"
  },
  {
    "text": "it can just calculate its instance ID uh",
    "start": "532959",
    "end": "534800"
  },
  {
    "text": "using the metadata service so it gets",
    "start": "534800",
    "end": "536440"
  },
  {
    "text": "the right que and instance IDs are",
    "start": "536440",
    "end": "539120"
  },
  {
    "text": "unique per account uh as far as I know",
    "start": "539120",
    "end": "542079"
  },
  {
    "text": "so this works after creating the queue",
    "start": "542079",
    "end": "545120"
  },
  {
    "text": "we subscribe it to our Command and",
    "start": "545120",
    "end": "546600"
  },
  {
    "text": "control",
    "start": "546600",
    "end": "547600"
  },
  {
    "text": "topic we use a single topic globally to",
    "start": "547600",
    "end": "550800"
  },
  {
    "text": "which all of our cues for all of our",
    "start": "550800",
    "end": "552839"
  },
  {
    "text": "instances in every region subscribe it",
    "start": "552839",
    "end": "555519"
  },
  {
    "text": "works well if we have some control",
    "start": "555519",
    "end": "557160"
  },
  {
    "text": "system that needs to distribute an",
    "start": "557160",
    "end": "558600"
  },
  {
    "text": "Urgent Message it just emits it to the",
    "start": "558600",
    "end": "560600"
  },
  {
    "text": "topic it then filters out uh to the",
    "start": "560600",
    "end": "563000"
  },
  {
    "text": "individual",
    "start": "563000",
    "end": "564480"
  },
  {
    "text": "machines",
    "start": "564480",
    "end": "566000"
  },
  {
    "text": "so you might ask yourself why do this",
    "start": "566000",
    "end": "569040"
  },
  {
    "text": "instead of just having an SNS topic uh",
    "start": "569040",
    "end": "571959"
  },
  {
    "text": "that all of these instances listen to we",
    "start": "571959",
    "end": "575200"
  },
  {
    "text": "could do that I personally like this",
    "start": "575200",
    "end": "577120"
  },
  {
    "text": "approach because you don't have to",
    "start": "577120",
    "end": "579720"
  },
  {
    "text": "create an endpoint that's a public uh",
    "start": "579720",
    "end": "582240"
  },
  {
    "text": "web service essentially for SNS to admit",
    "start": "582240",
    "end": "584680"
  },
  {
    "text": "events to this also allows us to have",
    "start": "584680",
    "end": "587920"
  },
  {
    "text": "events be in Flight while an instance is",
    "start": "587920",
    "end": "590320"
  },
  {
    "text": "still coming online if it was done with",
    "start": "590320",
    "end": "593519"
  },
  {
    "text": "an SNS listener if there were an Urgent",
    "start": "593519",
    "end": "596240"
  },
  {
    "text": "Message and yet its event listener were",
    "start": "596240",
    "end": "599079"
  },
  {
    "text": "not online or it weren't subscribed or",
    "start": "599079",
    "end": "600680"
  },
  {
    "text": "something it wouldn't get the message",
    "start": "600680",
    "end": "603560"
  },
  {
    "text": "so I think this is useful after we",
    "start": "603560",
    "end": "606880"
  },
  {
    "text": "create the queue And subscribe it to our",
    "start": "606880",
    "end": "608480"
  },
  {
    "text": "commanded control topic we record the",
    "start": "608480",
    "end": "610959"
  },
  {
    "text": "fact that our instance is alive in a",
    "start": "610959",
    "end": "614120"
  },
  {
    "text": "Dynamo table uh of our live nodes and",
    "start": "614120",
    "end": "616920"
  },
  {
    "text": "this just contains our instance ID the",
    "start": "616920",
    "end": "619519"
  },
  {
    "text": "region that the instance is in and then",
    "start": "619519",
    "end": "622240"
  },
  {
    "text": "a subscription resource name and we use",
    "start": "622240",
    "end": "624320"
  },
  {
    "text": "that later to unsubscribe later uh when",
    "start": "624320",
    "end": "627399"
  },
  {
    "text": "the instance goes away",
    "start": "627399",
    "end": "630560"
  },
  {
    "text": "so you don't actually need to do this uh",
    "start": "630560",
    "end": "633640"
  },
  {
    "text": "necessarily one reason that we record",
    "start": "633640",
    "end": "635839"
  },
  {
    "text": "instances separately in a Dynamo table",
    "start": "635839",
    "end": "637880"
  },
  {
    "text": "is because of API rate",
    "start": "637880",
    "end": "640240"
  },
  {
    "text": "limiting uh if you have a lot of",
    "start": "640240",
    "end": "642440"
  },
  {
    "text": "different teams all using the same",
    "start": "642440",
    "end": "643720"
  },
  {
    "text": "Amazon account like we do uh so some",
    "start": "643720",
    "end": "647279"
  },
  {
    "text": "other team say could be querying the ec2",
    "start": "647279",
    "end": "649399"
  },
  {
    "text": "API or elb API at the same time we are",
    "start": "649399",
    "end": "653120"
  },
  {
    "text": "uh to get information about what",
    "start": "653120",
    "end": "654320"
  },
  {
    "text": "instances are",
    "start": "654320",
    "end": "656040"
  },
  {
    "text": "online when that happens that call can",
    "start": "656040",
    "end": "658920"
  },
  {
    "text": "actually fail because you're R limited",
    "start": "658920",
    "end": "661040"
  },
  {
    "text": "and the technically correct thing to do",
    "start": "661040",
    "end": "662839"
  },
  {
    "text": "is uh back off with like exponential",
    "start": "662839",
    "end": "665519"
  },
  {
    "text": "retry but one of our systems was written",
    "start": "665519",
    "end": "668680"
  },
  {
    "text": "with the assumption that it could always",
    "start": "668680",
    "end": "670200"
  },
  {
    "text": "get immediately data about what",
    "start": "670200",
    "end": "672279"
  },
  {
    "text": "instances are alive at any moment so we",
    "start": "672279",
    "end": "674720"
  },
  {
    "text": "actually take the union of this table",
    "start": "674720",
    "end": "676399"
  },
  {
    "text": "and uh API sources after everything has",
    "start": "676399",
    "end": "679360"
  },
  {
    "text": "been set up the Lambda function",
    "start": "679360",
    "end": "682320"
  },
  {
    "text": "completes the life cycle and our",
    "start": "682320",
    "end": "683959"
  },
  {
    "text": "instances can proceed if you have a",
    "start": "683959",
    "end": "685839"
  },
  {
    "text": "setup like this then this is basically",
    "start": "685839",
    "end": "688000"
  },
  {
    "text": "what it looks like as we have a control",
    "start": "688000",
    "end": "690200"
  },
  {
    "text": "system that can send events to our",
    "start": "690200",
    "end": "692920"
  },
  {
    "text": "Global command and control topic which",
    "start": "692920",
    "end": "694839"
  },
  {
    "text": "filters through to our sqs Qs which then",
    "start": "694839",
    "end": "698360"
  },
  {
    "text": "go to our instances on top of that uh we",
    "start": "698360",
    "end": "701600"
  },
  {
    "start": "700000",
    "end": "700000"
  },
  {
    "text": "don't actually do this but I thought it",
    "start": "701600",
    "end": "703040"
  },
  {
    "text": "would be interesting to add you could",
    "start": "703040",
    "end": "704959"
  },
  {
    "text": "also have a control",
    "start": "704959",
    "end": "706360"
  },
  {
    "text": "system that if it wants to distribute a",
    "start": "706360",
    "end": "708720"
  },
  {
    "text": "message to an individual node it can",
    "start": "708720",
    "end": "711079"
  },
  {
    "text": "just look up the nodes in the table and",
    "start": "711079",
    "end": "713120"
  },
  {
    "text": "then just route it directly to the queue",
    "start": "713120",
    "end": "715000"
  },
  {
    "text": "if it wants to not necessarily through",
    "start": "715000",
    "end": "716720"
  },
  {
    "text": "the topic which goes to all instances",
    "start": "716720",
    "end": "718519"
  },
  {
    "text": "again this is in the public repository",
    "start": "718519",
    "end": "721240"
  },
  {
    "text": "on GitHub uh under ad r/ Lambda examples",
    "start": "721240",
    "end": "724760"
  },
  {
    "text": "if you want to look this is just a",
    "start": "724760",
    "end": "727240"
  },
  {
    "text": "python Lambda Handler I greatly prefer",
    "start": "727240",
    "end": "729720"
  },
  {
    "text": "using python for Lambda functions having",
    "start": "729720",
    "end": "732240"
  },
  {
    "text": "written both in JavaScript uh and python",
    "start": "732240",
    "end": "735600"
  },
  {
    "text": "for Lambda I personally don't care for",
    "start": "735600",
    "end": "738480"
  },
  {
    "text": "callback oriented programming to me it's",
    "start": "738480",
    "end": "740760"
  },
  {
    "text": "much clearer What's Happening Here uh",
    "start": "740760",
    "end": "742800"
  },
  {
    "text": "you can look at it and immediately tell",
    "start": "742800",
    "end": "744800"
  },
  {
    "text": "what's going",
    "start": "744800",
    "end": "747240"
  },
  {
    "text": "on so yeah so here uh the event that we",
    "start": "747880",
    "end": "751519"
  },
  {
    "text": "receive is just a python object in this",
    "start": "751519",
    "end": "754279"
  },
  {
    "text": "case a dictionary which contains records",
    "start": "754279",
    "end": "758040"
  },
  {
    "text": "uh those records are basically SNS",
    "start": "758040",
    "end": "761279"
  },
  {
    "text": "events we handle each one if it",
    "start": "761279",
    "end": "764639"
  },
  {
    "text": "corresponds to a life cycle event which",
    "start": "764639",
    "end": "767480"
  },
  {
    "text": "we can handle uh there are only two of",
    "start": "767480",
    "end": "769120"
  },
  {
    "text": "these but anyway if it's one of those we",
    "start": "769120",
    "end": "771600"
  },
  {
    "text": "handle it we pass to our uh Handler the",
    "start": "771600",
    "end": "776320"
  },
  {
    "text": "region the instance ID and then the",
    "start": "776320",
    "end": "778320"
  },
  {
    "text": "context which is just like the name of",
    "start": "778320",
    "end": "780519"
  },
  {
    "text": "your Lambda function how much time it",
    "start": "780519",
    "end": "782000"
  },
  {
    "text": "has left to execute and so on when an",
    "start": "782000",
    "end": "785000"
  },
  {
    "text": "instance is launching as I mentioned we",
    "start": "785000",
    "end": "786800"
  },
  {
    "text": "create the que subscribe it to a topic",
    "start": "786800",
    "end": "789279"
  },
  {
    "text": "and then record the instance in our",
    "start": "789279",
    "end": "790639"
  },
  {
    "text": "database again very straightforward uh",
    "start": "790639",
    "end": "792959"
  },
  {
    "text": "we're just using bot 3 which is included",
    "start": "792959",
    "end": "794880"
  },
  {
    "text": "in the python runtime for Lambda the",
    "start": "794880",
    "end": "796959"
  },
  {
    "text": "only real gotcha is uh as mentioned we",
    "start": "796959",
    "end": "800639"
  },
  {
    "text": "have cues that are subscribed to an SNS",
    "start": "800639",
    "end": "803279"
  },
  {
    "text": "topic and in order for that to work you",
    "start": "803279",
    "end": "805560"
  },
  {
    "text": "actually need a per policy that allows",
    "start": "805560",
    "end": "808399"
  },
  {
    "text": "the topic to publish to the que which is",
    "start": "808399",
    "end": "810680"
  },
  {
    "text": "what this",
    "start": "810680",
    "end": "812079"
  },
  {
    "text": "is uh otherwise we just name the queue",
    "start": "812079",
    "end": "814839"
  },
  {
    "text": "according to the instance ID and then",
    "start": "814839",
    "end": "816440"
  },
  {
    "text": "proceed as I already described I",
    "start": "816440",
    "end": "818639"
  },
  {
    "text": "mentioned work offload and privilege",
    "start": "818639",
    "end": "820600"
  },
  {
    "text": "separation so the scenario is you have a",
    "start": "820600",
    "end": "824040"
  },
  {
    "text": "user for your application they have work",
    "start": "824040",
    "end": "826560"
  },
  {
    "text": "that they want to be done they're",
    "start": "826560",
    "end": "828600"
  },
  {
    "text": "submitting it to your system somehow",
    "start": "828600",
    "end": "830279"
  },
  {
    "text": "your system should do the work and then",
    "start": "830279",
    "end": "831680"
  },
  {
    "text": "return the result for example you could",
    "start": "831680",
    "end": "833839"
  },
  {
    "text": "have a web front end uh which is",
    "start": "833839",
    "end": "836000"
  },
  {
    "text": "receiving",
    "start": "836000",
    "end": "836959"
  },
  {
    "text": "requests handling it somehow",
    "start": "836959",
    "end": "839959"
  },
  {
    "text": "uh returning the result what if you want",
    "start": "839959",
    "end": "841639"
  },
  {
    "text": "to add some resource intensive process",
    "start": "841639",
    "end": "844880"
  },
  {
    "text": "or some process Which is less safe uh",
    "start": "844880",
    "end": "848040"
  },
  {
    "text": "for some values of safe it would be good",
    "start": "848040",
    "end": "849800"
  },
  {
    "text": "if you could separate the execution",
    "start": "849800",
    "end": "851920"
  },
  {
    "text": "context from the request context and by",
    "start": "851920",
    "end": "854120"
  },
  {
    "text": "that I just mean your web Handler which",
    "start": "854120",
    "end": "856079"
  },
  {
    "text": "is receiving the the request to do the",
    "start": "856079",
    "end": "857959"
  },
  {
    "text": "work shouldn't actually do that work if",
    "start": "857959",
    "end": "860040"
  },
  {
    "text": "it's risky or whatever resource",
    "start": "860040",
    "end": "863360"
  },
  {
    "text": "intensive uh you can hand it off to some",
    "start": "863360",
    "end": "866040"
  },
  {
    "text": "backend system you could hand it off to",
    "start": "866040",
    "end": "868120"
  },
  {
    "text": "Lambda why would would you want to do",
    "start": "868120",
    "end": "869639"
  },
  {
    "text": "this I think it's kind of a natural fit",
    "start": "869639",
    "end": "871680"
  },
  {
    "text": "for many uh uses uh in our case we",
    "start": "871680",
    "end": "875079"
  },
  {
    "text": "actually have a system which is",
    "start": "875079",
    "end": "877360"
  },
  {
    "text": "basically a form validation service and",
    "start": "877360",
    "end": "880560"
  },
  {
    "text": "a user can submit a URL and our web",
    "start": "880560",
    "end": "884360"
  },
  {
    "text": "Handler will pass a request to Lambda to",
    "start": "884360",
    "end": "887759"
  },
  {
    "text": "fetch the URL evaluate its JavaScript",
    "start": "887759",
    "end": "890480"
  },
  {
    "text": "and then return some result",
    "start": "890480",
    "end": "893759"
  },
  {
    "text": "uh so yeah we could have done that in",
    "start": "893759",
    "end": "896920"
  },
  {
    "text": "our web worker but it makes the system",
    "start": "896920",
    "end": "900199"
  },
  {
    "text": "more complicated uh there's other",
    "start": "900199",
    "end": "903120"
  },
  {
    "text": "issues having components which are",
    "start": "903120",
    "end": "905000"
  },
  {
    "text": "isolated is obviously well it's a good",
    "start": "905000",
    "end": "907800"
  },
  {
    "text": "practice uh it makes it easier to reason",
    "start": "907800",
    "end": "909800"
  },
  {
    "text": "about what your system is",
    "start": "909800",
    "end": "911759"
  },
  {
    "text": "doing and yeah for Lambda your",
    "start": "911759",
    "end": "914839"
  },
  {
    "text": "containers uh or sandboxes are basically",
    "start": "914839",
    "end": "917839"
  },
  {
    "text": "mostly stess uh mostly ephemeral they go",
    "start": "917839",
    "end": "920720"
  },
  {
    "text": "away after some period of time if you",
    "start": "920720",
    "end": "922759"
  },
  {
    "text": "mess up your environment it's not",
    "start": "922759",
    "end": "926040"
  },
  {
    "text": "permanent and if you're doing this you",
    "start": "926040",
    "end": "929040"
  },
  {
    "text": "essentially will have uh a microservice",
    "start": "929040",
    "end": "931639"
  },
  {
    "text": "architecture I mean using Lambda is like",
    "start": "931639",
    "end": "933880"
  },
  {
    "text": "the",
    "start": "933880",
    "end": "934720"
  },
  {
    "text": "definition of a microservice if your",
    "start": "934720",
    "end": "937000"
  },
  {
    "start": "937000",
    "end": "937000"
  },
  {
    "text": "needs are simple then the implementation",
    "start": "937000",
    "end": "939160"
  },
  {
    "text": "is also simple I'm not going to cover",
    "start": "939160",
    "end": "942120"
  },
  {
    "text": "more advanced uses like uh API Gateway",
    "start": "942120",
    "end": "945800"
  },
  {
    "text": "but cuz we haven't needed that yet but",
    "start": "945800",
    "end": "949880"
  },
  {
    "text": "what we actually do is just invoke the",
    "start": "949880",
    "end": "952639"
  },
  {
    "text": "Lambda function from within our web",
    "start": "952639",
    "end": "954160"
  },
  {
    "text": "Handler scenario could be this uh you",
    "start": "954160",
    "end": "956839"
  },
  {
    "text": "have user submitting the work to your",
    "start": "956839",
    "end": "959199"
  },
  {
    "text": "web front end the web front end is",
    "start": "959199",
    "end": "961519"
  },
  {
    "text": "invoking a Lambda function that function",
    "start": "961519",
    "end": "963639"
  },
  {
    "text": "can do whatever it needs to do uh your",
    "start": "963639",
    "end": "965600"
  },
  {
    "text": "front end doesn't need to know it could",
    "start": "965600",
    "end": "967600"
  },
  {
    "text": "do the work itself it could submit it to",
    "start": "967600",
    "end": "970160"
  },
  {
    "text": "a system like what I described at the",
    "start": "970160",
    "end": "971480"
  },
  {
    "text": "beginning some control system which then",
    "start": "971480",
    "end": "973319"
  },
  {
    "text": "distributes it to a",
    "start": "973319",
    "end": "974920"
  },
  {
    "text": "worker and so on imagine that you have a",
    "start": "974920",
    "end": "977680"
  },
  {
    "text": "very important and compelling URL that",
    "start": "977680",
    "end": "980399"
  },
  {
    "text": "you want to analyze uh and you have some",
    "start": "980399",
    "end": "982880"
  },
  {
    "text": "web application that's accepting such",
    "start": "982880",
    "end": "984880"
  },
  {
    "text": "URLs uh for this",
    "start": "984880",
    "end": "987120"
  },
  {
    "text": "example there's a demo flask app in that",
    "start": "987120",
    "end": "989880"
  },
  {
    "text": "public repository I created which",
    "start": "989880",
    "end": "992000"
  },
  {
    "text": "basically invokes two Lambda functions",
    "start": "992000",
    "end": "993839"
  },
  {
    "text": "in order to handle such requests uh in",
    "start": "993839",
    "end": "996319"
  },
  {
    "text": "this case it will invoke an initial",
    "start": "996319",
    "end": "998839"
  },
  {
    "text": "validator which basically says uh yes",
    "start": "998839",
    "end": "1001639"
  },
  {
    "text": "this URL is valid uh for example it's on",
    "start": "1001639",
    "end": "1004399"
  },
  {
    "text": "a white list it looks like a URL and so",
    "start": "1004399",
    "end": "1006560"
  },
  {
    "text": "on it then Returns the canonical form of",
    "start": "1006560",
    "end": "1008639"
  },
  {
    "text": "the URL which is then used in a second",
    "start": "1008639",
    "end": "1011440"
  },
  {
    "text": "invocation to actually do some work in",
    "start": "1011440",
    "end": "1014279"
  },
  {
    "text": "this case the second Lambda function is",
    "start": "1014279",
    "end": "1016120"
  },
  {
    "text": "actually fetching the URL and then",
    "start": "1016120",
    "end": "1018319"
  },
  {
    "text": "Distributing it to a backend worker uh",
    "start": "1018319",
    "end": "1020480"
  },
  {
    "text": "for subsequent processing it's another",
    "start": "1020480",
    "end": "1022800"
  },
  {
    "text": "python uh module in this case we are",
    "start": "1022800",
    "end": "1026000"
  },
  {
    "text": "again using bot 3 very straightforward",
    "start": "1026000",
    "end": "1028480"
  },
  {
    "text": "uh the payload is just a Json blob and",
    "start": "1028480",
    "end": "1030839"
  },
  {
    "text": "then that will get passed through to the",
    "start": "1030839",
    "end": "1032000"
  },
  {
    "text": "Handler as a python dictionary event fan",
    "start": "1032000",
    "end": "1034438"
  },
  {
    "text": "out so suppose that you have a system",
    "start": "1034439",
    "end": "1036480"
  },
  {
    "text": "like what I've been describing uh set of",
    "start": "1036480",
    "end": "1038520"
  },
  {
    "text": "backend worker nodes or instances doing",
    "start": "1038520",
    "end": "1041160"
  },
  {
    "text": "tasks they're going to be uploading logs",
    "start": "1041160",
    "end": "1043480"
  },
  {
    "text": "as well as results to S3 chances are",
    "start": "1043480",
    "end": "1046558"
  },
  {
    "text": "some other people are interested in that",
    "start": "1046559",
    "end": "1048558"
  },
  {
    "text": "data so how do you get that data to them",
    "start": "1048559",
    "end": "1050919"
  },
  {
    "text": "our machines upload logs uh of different",
    "start": "1050919",
    "end": "1055320"
  },
  {
    "text": "types which correspond to different",
    "start": "1055320",
    "end": "1056720"
  },
  {
    "text": "kinds of events and they all go to the",
    "start": "1056720",
    "end": "1058400"
  },
  {
    "text": "same place on",
    "start": "1058400",
    "end": "1059640"
  },
  {
    "text": "S3 uh they're partitioned by date and",
    "start": "1059640",
    "end": "1062880"
  },
  {
    "text": "instance and basically not everyone is",
    "start": "1062880",
    "end": "1066039"
  },
  {
    "text": "interested in every type so we have",
    "start": "1066039",
    "end": "1067840"
  },
  {
    "text": "these different kinds of consumers our",
    "start": "1067840",
    "end": "1069960"
  },
  {
    "text": "goal is basically to distribute relevant",
    "start": "1069960",
    "end": "1072400"
  },
  {
    "text": "events to relevant consumers as",
    "start": "1072400",
    "end": "1074240"
  },
  {
    "text": "mentioned our uploads are not",
    "start": "1074240",
    "end": "1075320"
  },
  {
    "text": "partitioned by type uh I mention that",
    "start": "1075320",
    "end": "1078039"
  },
  {
    "text": "because with three you can configure an",
    "start": "1078039",
    "end": "1080640"
  },
  {
    "text": "event configuration which basically is",
    "start": "1080640",
    "end": "1082960"
  },
  {
    "text": "uh different according to the prefix of",
    "start": "1082960",
    "end": "1084360"
  },
  {
    "text": "the key to which the event corresponds",
    "start": "1084360",
    "end": "1087240"
  },
  {
    "text": "so we can't do that for this application",
    "start": "1087240",
    "end": "1089400"
  },
  {
    "text": "you could just use uh a single SNS topic",
    "start": "1089400",
    "end": "1092559"
  },
  {
    "text": "which then distributes events",
    "start": "1092559",
    "end": "1094559"
  },
  {
    "text": "corresponding to all types of objects to",
    "start": "1094559",
    "end": "1096320"
  },
  {
    "text": "every consumer it's not the worst",
    "start": "1096320",
    "end": "1097960"
  },
  {
    "text": "solution I think it's somewhat wasteful",
    "start": "1097960",
    "end": "1100159"
  },
  {
    "text": "for a consumer to see events that it's",
    "start": "1100159",
    "end": "1102320"
  },
  {
    "text": "never going to care",
    "start": "1102320",
    "end": "1103840"
  },
  {
    "text": "about if you can precisely direct your",
    "start": "1103840",
    "end": "1106400"
  },
  {
    "text": "Events maybe you can make your consumer",
    "start": "1106400",
    "end": "1108320"
  },
  {
    "text": "code slightly simpler uh if your",
    "start": "1108320",
    "end": "1110640"
  },
  {
    "text": "consumer has to know about all the event",
    "start": "1110640",
    "end": "1112520"
  },
  {
    "text": "types and then discard what it's not",
    "start": "1112520",
    "end": "1114000"
  },
  {
    "text": "interested in it makes it slightly more",
    "start": "1114000",
    "end": "1115679"
  },
  {
    "text": "complicated obviously you can still do",
    "start": "1115679",
    "end": "1117480"
  },
  {
    "text": "it",
    "start": "1117480",
    "end": "1118679"
  },
  {
    "text": "but if instead you're using Lambda you",
    "start": "1118679",
    "end": "1121320"
  },
  {
    "text": "could",
    "start": "1121320",
    "end": "1122280"
  },
  {
    "text": "perhaps just make your consumer care",
    "start": "1122280",
    "end": "1125200"
  },
  {
    "text": "about where its output is going to go",
    "start": "1125200",
    "end": "1126440"
  },
  {
    "text": "but just always process this input for",
    "start": "1126440",
    "end": "1128760"
  },
  {
    "text": "example although we're not using Lambda",
    "start": "1128760",
    "end": "1131240"
  },
  {
    "text": "to actually process these but only to",
    "start": "1131240",
    "end": "1132520"
  },
  {
    "text": "rout them but just as on as",
    "start": "1132520",
    "end": "1135960"
  },
  {
    "text": "side uh and yeah we have long periods of",
    "start": "1135960",
    "end": "1138320"
  },
  {
    "text": "inactivity",
    "start": "1138320",
    "end": "1139400"
  },
  {
    "text": "between uh log upload events our",
    "start": "1139400",
    "end": "1142120"
  },
  {
    "text": "instances dump logs uh like every 10",
    "start": "1142120",
    "end": "1144600"
  },
  {
    "text": "minutes currently and that's uh these",
    "start": "1144600",
    "end": "1148200"
  },
  {
    "text": "periodic spikes as shown on the graph",
    "start": "1148200",
    "end": "1149840"
  },
  {
    "text": "for what this would actually look like",
    "start": "1149840",
    "end": "1150960"
  },
  {
    "start": "1150000",
    "end": "1150000"
  },
  {
    "text": "with Lambda you just configure S3 to",
    "start": "1150960",
    "end": "1153400"
  },
  {
    "text": "invoke your function with uh as a result",
    "start": "1153400",
    "end": "1156039"
  },
  {
    "text": "of an upload event and then your Lambda",
    "start": "1156039",
    "end": "1158960"
  },
  {
    "text": "function takes care of routing it",
    "start": "1158960",
    "end": "1160799"
  },
  {
    "text": "appropriately in our case we Reit events",
    "start": "1160799",
    "end": "1164559"
  },
  {
    "text": "to a per event type SNS topic as well as",
    "start": "1164559",
    "end": "1168840"
  },
  {
    "text": "as a set of sqs Qs uh for some other",
    "start": "1168840",
    "end": "1171240"
  },
  {
    "text": "application and it might look like this",
    "start": "1171240",
    "end": "1173799"
  },
  {
    "text": "uh with this setup only consumers of",
    "start": "1173799",
    "end": "1177320"
  },
  {
    "text": "type A receive events of type A and so",
    "start": "1177320",
    "end": "1179799"
  },
  {
    "text": "on servess Control",
    "start": "1179799",
    "end": "1182200"
  },
  {
    "text": "Systems so I mentioned that realtime",
    "start": "1182200",
    "end": "1185679"
  },
  {
    "text": "bidding is high volume and low latency",
    "start": "1185679",
    "end": "1188880"
  },
  {
    "text": "and it's a pretty significant scale and",
    "start": "1188880",
    "end": "1191520"
  },
  {
    "text": "when things go wrong they can go wrong",
    "start": "1191520",
    "end": "1193360"
  },
  {
    "text": "pretty quickly as part of uh one of our",
    "start": "1193360",
    "end": "1196360"
  },
  {
    "text": "safety systems we have a control",
    "start": "1196360",
    "end": "1198840"
  },
  {
    "text": "mechanism in place which can basically",
    "start": "1198840",
    "end": "1200440"
  },
  {
    "text": "clamp down on our system's",
    "start": "1200440",
    "end": "1202679"
  },
  {
    "text": "Behavior Uh adding a new server into the",
    "start": "1202679",
    "end": "1205919"
  },
  {
    "text": "mix to do this like I mentioned before",
    "start": "1205919",
    "end": "1207919"
  },
  {
    "text": "just complicates our system we can get",
    "start": "1207919",
    "end": "1210280"
  },
  {
    "text": "away with using Lambda for this and so",
    "start": "1210280",
    "end": "1211679"
  },
  {
    "text": "we do with the setup that we have uh as",
    "start": "1211679",
    "end": "1214440"
  },
  {
    "text": "I mentioned earlier we have a feedback",
    "start": "1214440",
    "end": "1215880"
  },
  {
    "text": "loop our bidding nodes upload events to",
    "start": "1215880",
    "end": "1219400"
  },
  {
    "text": "S3 those filter through and then they",
    "start": "1219400",
    "end": "1221840"
  },
  {
    "text": "make it to our control system which then",
    "start": "1221840",
    "end": "1224280"
  },
  {
    "text": "decides what to do based on the data",
    "start": "1224280",
    "end": "1225880"
  },
  {
    "text": "that it's seeing as well as data from",
    "start": "1225880",
    "end": "1227480"
  },
  {
    "text": "other parts of our system",
    "start": "1227480",
    "end": "1229400"
  },
  {
    "text": "that then emits events to our Command",
    "start": "1229400",
    "end": "1231679"
  },
  {
    "text": "and control topic which tell our",
    "start": "1231679",
    "end": "1234320"
  },
  {
    "text": "instances what to do uh or what not to",
    "start": "1234320",
    "end": "1236960"
  },
  {
    "text": "do I think what we uh the main thing",
    "start": "1236960",
    "end": "1239520"
  },
  {
    "text": "that we actually do with this system is",
    "start": "1239520",
    "end": "1242640"
  },
  {
    "text": "broadcast S3 key update events uh our",
    "start": "1242640",
    "end": "1246159"
  },
  {
    "text": "control system uploads a control file to",
    "start": "1246159",
    "end": "1248240"
  },
  {
    "text": "S3 and then broadcasts take this file",
    "start": "1248240",
    "end": "1251600"
  },
  {
    "text": "from S3 and use it uh it's basically how",
    "start": "1251600",
    "end": "1254080"
  },
  {
    "text": "it's implemented we wanted the feedback",
    "start": "1254080",
    "end": "1255440"
  },
  {
    "start": "1255000",
    "end": "1255000"
  },
  {
    "text": "loop to control worker behavior and",
    "start": "1255440",
    "end": "1257200"
  },
  {
    "text": "Lambda was a good fit we didn't want to",
    "start": "1257200",
    "end": "1258799"
  },
  {
    "text": "add a new server it's been working well",
    "start": "1258799",
    "end": "1261159"
  },
  {
    "text": "in practice for the last five or six",
    "start": "1261159",
    "end": "1263400"
  },
  {
    "text": "months as for the Y of Lambda I think",
    "start": "1263400",
    "end": "1266280"
  },
  {
    "text": "I've already touched on some of these uh",
    "start": "1266280",
    "end": "1269760"
  },
  {
    "text": "a couple things specifically though on",
    "start": "1269760",
    "end": "1272039"
  },
  {
    "text": "our team we use S3 extensively uh we",
    "start": "1272039",
    "end": "1276200"
  },
  {
    "text": "also use it as an interface between our",
    "start": "1276200",
    "end": "1278039"
  },
  {
    "text": "own systems as well as other teams in",
    "start": "1278039",
    "end": "1281039"
  },
  {
    "text": "order to talk to us another team might",
    "start": "1281039",
    "end": "1282840"
  },
  {
    "text": "upload a file to S3 which we'll handle",
    "start": "1282840",
    "end": "1284640"
  },
  {
    "text": "in some",
    "start": "1284640",
    "end": "1285520"
  },
  {
    "text": "way uh I kind of like that approach it's",
    "start": "1285520",
    "end": "1289000"
  },
  {
    "text": "easy to inspect the state of the system",
    "start": "1289000",
    "end": "1290799"
  },
  {
    "text": "and see what's happening think about",
    "start": "1290799",
    "end": "1292200"
  },
  {
    "text": "what should happen Lambda is very easily",
    "start": "1292200",
    "end": "1295080"
  },
  {
    "text": "configurable to react to S3 events and",
    "start": "1295080",
    "end": "1298279"
  },
  {
    "text": "our events are sporadic uh our",
    "start": "1298279",
    "end": "1300520"
  },
  {
    "text": "controller only has to run after",
    "start": "1300520",
    "end": "1302760"
  },
  {
    "text": "something changes it doesn't need to",
    "start": "1302760",
    "end": "1304360"
  },
  {
    "text": "just sit",
    "start": "1304360",
    "end": "1305320"
  },
  {
    "text": "around uh so it's event driven and again",
    "start": "1305320",
    "end": "1308720"
  },
  {
    "text": "with no server to",
    "start": "1308720",
    "end": "1310400"
  },
  {
    "text": "manage that helps a lot when things are",
    "start": "1310400",
    "end": "1312840"
  },
  {
    "text": "breaking and we're troubleshooting we",
    "start": "1312840",
    "end": "1314400"
  },
  {
    "text": "don't have to worry about this because",
    "start": "1314400",
    "end": "1315760"
  },
  {
    "text": "as long as Lambda is online our code is",
    "start": "1315760",
    "end": "1318000"
  },
  {
    "text": "going to work this is what our system",
    "start": "1318000",
    "end": "1319480"
  },
  {
    "text": "actually looks like uh our serverless",
    "start": "1319480",
    "end": "1321520"
  },
  {
    "text": "control system it's basically a set of",
    "start": "1321520",
    "end": "1324760"
  },
  {
    "text": "different Lambda functions which are all",
    "start": "1324760",
    "end": "1326080"
  },
  {
    "text": "composed together to cooperate this",
    "start": "1326080",
    "end": "1328039"
  },
  {
    "text": "could have all been done with a single",
    "start": "1328039",
    "end": "1329960"
  },
  {
    "text": "function uh maybe with different code",
    "start": "1329960",
    "end": "1331919"
  },
  {
    "text": "paths depending on where its events are",
    "start": "1331919",
    "end": "1333880"
  },
  {
    "text": "coming from uh but the inputs to each of",
    "start": "1333880",
    "end": "1337320"
  },
  {
    "text": "these functions is basically an S3 event",
    "start": "1337320",
    "end": "1339919"
  },
  {
    "text": "I like keeping things small uh with",
    "start": "1339919",
    "end": "1342240"
  },
  {
    "text": "small Lambda functions it's easy to",
    "start": "1342240",
    "end": "1344080"
  },
  {
    "text": "inspect and tell by inspection what's",
    "start": "1344080",
    "end": "1346919"
  },
  {
    "text": "happening what should be happening as",
    "start": "1346919",
    "end": "1348720"
  },
  {
    "text": "well as for other team members to",
    "start": "1348720",
    "end": "1350360"
  },
  {
    "text": "participate uh if anything's going wrong",
    "start": "1350360",
    "end": "1352559"
  },
  {
    "text": "or if modifications are",
    "start": "1352559",
    "end": "1355080"
  },
  {
    "text": "needed uh so yeah works well in practice",
    "start": "1355080",
    "end": "1357640"
  },
  {
    "text": "S3 upload events result in our functions",
    "start": "1357640",
    "end": "1359919"
  },
  {
    "text": "being triggered some of these might be",
    "start": "1359919",
    "end": "1362159"
  },
  {
    "text": "from our own system uh its output others",
    "start": "1362159",
    "end": "1366000"
  },
  {
    "text": "might be from other systems that are",
    "start": "1366000",
    "end": "1367240"
  },
  {
    "text": "telling us are giving us information",
    "start": "1367240",
    "end": "1369159"
  },
  {
    "text": "about uh what's",
    "start": "1369159",
    "end": "1371240"
  },
  {
    "text": "happening these other functions do their",
    "start": "1371240",
    "end": "1373640"
  },
  {
    "text": "thing they're basically filters uh if",
    "start": "1373640",
    "end": "1377320"
  },
  {
    "text": "you can imagine composing a command line",
    "start": "1377320",
    "end": "1380039"
  },
  {
    "text": "which is just a sequence of piped",
    "start": "1380039",
    "end": "1382200"
  },
  {
    "text": "commands I mean that's kind of the",
    "start": "1382200",
    "end": "1384039"
  },
  {
    "text": "philosophy behind this uh the end result",
    "start": "1384039",
    "end": "1387120"
  },
  {
    "text": "is after our business logic has run the",
    "start": "1387120",
    "end": "1390240"
  },
  {
    "text": "results are then aggregated uploaded to",
    "start": "1390240",
    "end": "1392840"
  },
  {
    "text": "S3 and then using our Command and",
    "start": "1392840",
    "end": "1394799"
  },
  {
    "text": "control topic our instances are",
    "start": "1394799",
    "end": "1396720"
  },
  {
    "text": "commanded to fetch the updated Control",
    "start": "1396720",
    "end": "1398200"
  },
  {
    "text": "Data everything outside of the square is",
    "start": "1398200",
    "end": "1400960"
  },
  {
    "text": "our control system everything is the",
    "start": "1400960",
    "end": "1402720"
  },
  {
    "text": "rest of our",
    "start": "1402720",
    "end": "1405320"
  },
  {
    "text": "system",
    "start": "1407440",
    "end": "1410440"
  }
]