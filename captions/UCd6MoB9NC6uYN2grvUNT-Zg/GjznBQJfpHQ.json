[
  {
    "text": "you're interested in learning more about building service applications on AWS definitely in the right place in the",
    "start": "0",
    "end": "6299"
  },
  {
    "text": "course of the day we're going to get progressively deeper with the technical sessions that we're going to run so the",
    "start": "6299",
    "end": "11759"
  },
  {
    "text": "first session is going to be a quick recap of recent announcements associated with running serverless apps on AWS",
    "start": "11759",
    "end": "18810"
  },
  {
    "text": "which I'll deliver myself I'll introduce myself in a second and talk a little bit more about what we're going to cover then we're going to have Danilo appacha",
    "start": "18810",
    "end": "25590"
  },
  {
    "text": "who's sitting up front with me here actually one of the first authors in the service domain Danilo is the author of a",
    "start": "25590",
    "end": "33329"
  },
  {
    "text": "book called AWS lambda in action which was published over a year ago now Manning which is really one of the first",
    "start": "33329",
    "end": "39770"
  },
  {
    "text": "educational books about how you can build applications using this new programming model using this new delivery paradigm so I've got a real",
    "start": "39770",
    "end": "45870"
  },
  {
    "text": "expert in the room to talk to you a little bit about the developer experience for service apps and he's",
    "start": "45870",
    "end": "51239"
  },
  {
    "text": "going to return at the end of the day and talk about step functions which is an adjacent service that we have that",
    "start": "51239",
    "end": "56670"
  },
  {
    "text": "enables customers to build more complex multi function applications that have",
    "start": "56670",
    "end": "61859"
  },
  {
    "text": "branching logic state control and other advanced features within them so you'll have that at the end of the day that's going to be a 400 level session and then",
    "start": "61859",
    "end": "68909"
  },
  {
    "text": "now those will sort of bookend two more sessions with Adrian hornsby Adrian is a",
    "start": "68909",
    "end": "74430"
  },
  {
    "text": "sorry Adrian is a Technical Evangelist with AWS up here in the Nordics and we'll be talking about patterns in",
    "start": "74430",
    "end": "81090"
  },
  {
    "text": "architecture for service apps and also we're talking about a new AWS feet chef",
    "start": "81090",
    "end": "86340"
  },
  {
    "text": "of an existing AWS service a new feature called dynamodb global tables which is a mechanism for building globally",
    "start": "86340",
    "end": "93270"
  },
  {
    "text": "distributed state stores that you might put behind your service applications to assure good performance for customers",
    "start": "93270",
    "end": "98670"
  },
  {
    "text": "that are globally distributed again that's going to be a 400 level talks as we go later in the day we'll get",
    "start": "98670",
    "end": "104009"
  },
  {
    "text": "progressively deeper with the content I hope you'll stick with us and listen to the whole track if you're interested in",
    "start": "104009",
    "end": "109049"
  },
  {
    "text": "learning more about this domain area so my name is Ian Ian massing ham I lead",
    "start": "109049",
    "end": "116100"
  },
  {
    "text": "technology and developer evangelism for AWS worldwide so they gave me the less",
    "start": "116100",
    "end": "121290"
  },
  {
    "text": "technical session from zoomix I have manager in my job title I'm getting down rank now as I get more senior I get less",
    "start": "121290",
    "end": "127409"
  },
  {
    "text": "trusted with they're talking about technical topics like the CTO you know the amount of code you ride",
    "start": "127409",
    "end": "133260"
  },
  {
    "text": "right is inversely proportional to the level of seniority that you have the more senior you get the more your team look at you and think stay away from the",
    "start": "133260",
    "end": "139799"
  },
  {
    "text": "keyboard stay away from the keyboard so I guess that's happening to me as well it's going to take you through some of",
    "start": "139799",
    "end": "145709"
  },
  {
    "text": "the new things that we have recently announced in this topic area in the area",
    "start": "145709",
    "end": "150870"
  },
  {
    "text": "of service application development and hopefully give you an insight into how",
    "start": "150870",
    "end": "155879"
  },
  {
    "text": "this is helping customers use AWS lambda and these other associated services for",
    "start": "155879",
    "end": "162209"
  },
  {
    "text": "a broader range of different application types to satisfy a broader range of different use cases just wind back to",
    "start": "162209",
    "end": "170190"
  },
  {
    "text": "when we first announced AWS lambda and did little and I were both in the keynote at AWS reinvent Wien when we",
    "start": "170190",
    "end": "176609"
  },
  {
    "text": "announced this service I think it was a really interesting launch for AWS we",
    "start": "176609",
    "end": "183870"
  },
  {
    "text": "have a few of these where we announce new services and customers kind of know",
    "start": "183870",
    "end": "191190"
  },
  {
    "text": "they're going to be significant that you can't quite appreciate quite how significant they're going to be you know",
    "start": "191190",
    "end": "196260"
  },
  {
    "text": "quite how different a new sir make the way in which develop",
    "start": "196260",
    "end": "203239"
  },
  {
    "text": "you know problem most well-known and heavily used AWS services who could have predicted at",
    "start": "204880",
    "end": "211010"
  },
  {
    "text": "that point quite what a big impact it would have on the way in which not only the way in which developers work but the",
    "start": "211010",
    "end": "216079"
  },
  {
    "text": "way in which the IT industry works at large it's actually been a really you know really big change over the course",
    "start": "216079",
    "end": "222590"
  },
  {
    "text": "of the last eleven years you probably look back now and and you know here's a question for you if you're building a",
    "start": "222590",
    "end": "228439"
  },
  {
    "text": "new application or service or a new product who here would default to buying servers and buying equipment to do that",
    "start": "228439",
    "end": "235930"
  },
  {
    "text": "who would actually put a rack of equipment into a datacenter somewhere and use that to deliver an app or service today remember that just 11",
    "start": "235930",
    "end": "244340"
  },
  {
    "text": "years ago you had no other option that was the only way to work it was the only way to build apps every app you built he didn't even for such a stack that went",
    "start": "244340",
    "end": "250639"
  },
  {
    "text": "with it that is a really really substantial change in the way in which we work as professionals in the domain",
    "start": "250639",
    "end": "256549"
  },
  {
    "text": "in which we work right it's probably one of the biggest changes in IT that's ever happened the idea that the ownership of",
    "start": "256549",
    "end": "262099"
  },
  {
    "text": "infrastructure is completely disconnected from the software that we write that's a big big deal right",
    "start": "262099",
    "end": "267949"
  },
  {
    "text": "and I think if you look back 10 years from now at AWS lambda and the other",
    "start": "267949",
    "end": "273530"
  },
  {
    "text": "services that sit around it and remember service is way more than just compute services the whole delivery model for",
    "start": "273530",
    "end": "279830"
  },
  {
    "text": "not running low-level infrastructure components and not managing low-level infrastructure components through their",
    "start": "279830",
    "end": "285740"
  },
  {
    "text": "lifetime it's all about entering the stack at the highest possible level of abstraction and writing the absolute",
    "start": "285740",
    "end": "291889"
  },
  {
    "text": "minimum amount of code that is required to get the job done right that's what we're really talking about we talk about service I bet you that in 10 years",
    "start": "291889",
    "end": "298639"
  },
  {
    "text": "you'll look back on AWS lambda and the rise of service applications and you'll think the change that we saw with ec2 in",
    "start": "298639",
    "end": "305720"
  },
  {
    "text": "the rise of cloud computing was minor in comparison to the change that we've seen over the last 10 years with the",
    "start": "305720",
    "end": "312349"
  },
  {
    "text": "introduction of this new programming model and this new way of building applications I think it'll be that significant when you look back on it and",
    "start": "312349",
    "end": "318800"
  },
  {
    "text": "you sort of two and a half to three years in to substantial use so you're still in the Pioneer group you're still",
    "start": "318800",
    "end": "323870"
  },
  {
    "text": "the first people that are learning how to build applications in this new way the people in this room in the Nordics",
    "start": "323870",
    "end": "329389"
  },
  {
    "text": "are likely to be those that first two sees this new model and actually it can really transform the impact that you",
    "start": "329389",
    "end": "335659"
  },
  {
    "text": "have in your careers and really transform the impact that you have in the sectors and industries in which you work as well so I know it's kind of",
    "start": "335659",
    "end": "341150"
  },
  {
    "text": "a big opening but I wouldn't I don't believe it's possible to overstate how important this change is going to be as",
    "start": "341150",
    "end": "347840"
  },
  {
    "text": "we look back on it in a few years time it's a big big deal okay and the reason",
    "start": "347840",
    "end": "353060"
  },
  {
    "text": "it's a big deal is this you know like I just said writing the minimum amount of",
    "start": "353060",
    "end": "358070"
  },
  {
    "text": "code to get the job done and performing the absolute minimum amount of heavy lifting a WSU here is trot this out",
    "start": "358070",
    "end": "364520"
  },
  {
    "text": "quite a lot undifferentiated heavy lifting activities that you have to focus on but don't really add to your",
    "start": "364520",
    "end": "369950"
  },
  {
    "text": "mission don't really add to you achieving the goals that you have our view is that you should move as much of that stuff as possible down into the",
    "start": "369950",
    "end": "376370"
  },
  {
    "text": "platform and let the features of the service that you build on top on top of",
    "start": "376370",
    "end": "381530"
  },
  {
    "text": "carry most of that heavy lifting for you okay in the case of service that means",
    "start": "381530",
    "end": "386690"
  },
  {
    "text": "no operating system",
    "start": "386690",
    "end": "390550"
  },
  {
    "text": "and if we're talking about compute each time I access one of these low level or high level primitives upon which I have",
    "start": "391810",
    "end": "398200"
  },
  {
    "text": "built some aspect of my service just interacting with that service through",
    "start": "398200",
    "end": "403360"
  },
  {
    "text": "this high-level abstraction interface and I don't have to think about the underlying technology upon which it sits",
    "start": "403360",
    "end": "409960"
  },
  {
    "text": "even where it runs okay whether or not the underlying infrastructure is patched to the appropriate level whether or not",
    "start": "409960",
    "end": "416620"
  },
  {
    "text": "they're going to be enough copies of my function or enough capacity to support the level of throughput that I need on",
    "start": "416620",
    "end": "421810"
  },
  {
    "text": "my database all of those activities are pushed down into the platform and carried automatically by the service so",
    "start": "421810",
    "end": "428440"
  },
  {
    "text": "no server management flexible scaling within reason with a few dials and",
    "start": "428440",
    "end": "433990"
  },
  {
    "text": "sliders practically unlimited practically infinite scaling actually so there's no upper limit on how much",
    "start": "433990",
    "end": "440110"
  },
  {
    "text": "capacity you can use as long as you move those limits upwards and we'll talk a little bit later about why you want",
    "start": "440110",
    "end": "445900"
  },
  {
    "text": "might want to artificially move those limits downwards as well because through our good reasons for that we introduced",
    "start": "445900",
    "end": "451450"
  },
  {
    "text": "some new features quite recently that give you a greater degree of control over scaling both downwards as well as",
    "start": "451450",
    "end": "458350"
  },
  {
    "text": "upwards upwards has always been there but enabling you to control scrape scaling with fine levels of granularity",
    "start": "458350",
    "end": "464080"
  },
  {
    "text": "quite an important feature high availability so you'll know here in the",
    "start": "464080",
    "end": "469090"
  },
  {
    "text": "Nordics that we are building a region here in the greatest home area which is",
    "start": "469090",
    "end": "474400"
  },
  {
    "text": "going to have three availability zones at launch which means at least three physical data centers in practice",
    "start": "474400",
    "end": "479710"
  },
  {
    "text": "there'll be more than that but we present three physical data centers to customers in the form of logical",
    "start": "479710",
    "end": "487120"
  },
  {
    "text": "availability zones that you can build on top of if you use ec2 and some of other services you'll know all about these",
    "start": "487120",
    "end": "492580"
  },
  {
    "text": "AZ's is a mechanism for achieving availability goals and targets that you might have with lambda those things are",
    "start": "492580",
    "end": "499900"
  },
  {
    "text": "still there with service those things are still there it's just we use them to deliver an availability goal to you you",
    "start": "499900",
    "end": "506650"
  },
  {
    "text": "don't actually think about how you distribute your app or distribute your database your server list database",
    "start": "506650",
    "end": "511900"
  },
  {
    "text": "across those availability zones we do that so you automatically benefit from high availability and if we have a",
    "start": "511900",
    "end": "517510"
  },
  {
    "text": "failure well if you've got functions that are in flight when we have the failure those functions might fail so",
    "start": "517510",
    "end": "523270"
  },
  {
    "text": "you need to retry logic in your apps but the next time you come to launch a function that will still happen it will",
    "start": "523270",
    "end": "528610"
  },
  {
    "text": "just happen in an availability zone that's left you know one of the ones that is still accessible or still functional so you don't have to manage",
    "start": "528610",
    "end": "535510"
  },
  {
    "text": "availability you have to think about recovery actions and then lastly on cost efficiency okay we've made some changes",
    "start": "535510",
    "end": "544390"
  },
  {
    "text": "to ec2 quite recently that move it a little bit further towards surplus particularly in the linux area where",
    "start": "544390",
    "end": "550780"
  },
  {
    "text": "towards the latter end of 2017 we introduced per second billing which I'm",
    "start": "550780",
    "end": "556330"
  },
  {
    "text": "sure a lot of you will know about so you can run Linux machines on AWS pay for them by the second with a minimum of a",
    "start": "556330",
    "end": "563140"
  },
  {
    "text": "sixty second usage period so you're gonna have at least one sixtieth of your",
    "start": "563140",
    "end": "568420"
  },
  {
    "text": "hourly charge each time you start an ec2 instance if you finish it within 60",
    "start": "568420",
    "end": "573580"
  },
  {
    "text": "seconds on the 60 a second you'll get 60 seconds of charging and after that you'll increment in individual seconds",
    "start": "573580",
    "end": "579610"
  },
  {
    "text": "61 62 63 and so on still at least 600",
    "start": "579610",
    "end": "585610"
  },
  {
    "text": "times larger in terms of billing granularity than a lambda function so",
    "start": "585610",
    "end": "591130"
  },
  {
    "text": "lambda function is billing in the hundred millisecond increment which is a tenth of a second of course okay and",
    "start": "591130",
    "end": "597220"
  },
  {
    "text": "there's no minimum below that 100 millisecond increment so you've got a tenth of a second minimum billing period",
    "start": "597220",
    "end": "603600"
  },
  {
    "text": "you've also got more granularity in terms of sliding the capacity scale so",
    "start": "603600",
    "end": "610900"
  },
  {
    "text": "you can start down at 128 megabytes of capacity with a proportional amount of CPU and network throughput and you can",
    "start": "610900",
    "end": "617550"
  },
  {
    "text": "tick that to a quite a large number now which we'll talk about later you know",
    "start": "617550",
    "end": "622690"
  },
  {
    "text": "you can set that dial that slider very accurately depending on what your level of memory footprint or performance",
    "start": "622690",
    "end": "628240"
  },
  {
    "text": "requirements are so not only is it more granular in the sense of timing it's also more granular than in the sense of",
    "start": "628240",
    "end": "634870"
  },
  {
    "text": "sizing as well so you can more accurately size your environment be very tight on your cost control or",
    "start": "634870",
    "end": "641310"
  },
  {
    "text": "over-provision if you need performance or just to be sure that functions are not going to fail if they have variable",
    "start": "641310",
    "end": "646330"
  },
  {
    "text": "memory footprint you have a lot of control over capacity usage but importantly you have zero idle you don't",
    "start": "646330",
    "end": "652810"
  },
  {
    "text": "pay for resources that are not in use and if there are periods of the day or the week or the month or the year where",
    "start": "652810",
    "end": "658540"
  },
  {
    "text": "you functions are just inactive and not used you have no fixed costs you know you have no floor costs that are there just",
    "start": "658540",
    "end": "664660"
  },
  {
    "text": "ticking over that you've been charged for you're only going to get hit with a bill when your functions are actually invoked okay we've also introduced some",
    "start": "664660",
    "end": "673630"
  },
  {
    "text": "enhancements to other services DynamoDB is a good example this actually with auto scaling so you can now also",
    "start": "673630",
    "end": "680850"
  },
  {
    "text": "automatically scale other parts of your service architecture outside of just the compute domain just those computing",
    "start": "680850",
    "end": "687250"
  },
  {
    "text": "computed functions but also in storage we're trying to drive towards this ideal of scale up and scale down and we pre",
    "start": "687250",
    "end": "693880"
  },
  {
    "text": "announced a new service set we invent last year at the beginning of December aurora service which will provide a",
    "start": "693880",
    "end": "701440"
  },
  {
    "text": "relational database model which also has these elastic per second billing characteristics as well so we're moving",
    "start": "701440",
    "end": "707110"
  },
  {
    "text": "many of our the services forward in a way which will help them better align and better support this sort of model",
    "start": "707110",
    "end": "712780"
  },
  {
    "text": "this sort of capacity constrained model where you ought capacity constraint this low wastage model where you can only you",
    "start": "712780",
    "end": "719890"
  },
  {
    "text": "only pay for the resources that you use okay so let's just see how the workflow",
    "start": "719890",
    "end": "727150"
  },
  {
    "text": "goes for a developer that is building applications in this world way and talk about some of the enhancements that we've made and the way in which some of",
    "start": "727150",
    "end": "734080"
  },
  {
    "text": "these new enhancements new service announcements affect the way in which developers might work with this",
    "start": "734080",
    "end": "739210"
  },
  {
    "text": "collection of services that we provide so this developers made a promise to his",
    "start": "739210",
    "end": "744820"
  },
  {
    "text": "boss do they run out with specific functionality how do we tackle that okay he knows that he wants to build it in a way which is efficient service without",
    "start": "744820",
    "end": "752530"
  },
  {
    "text": "having to an operator infrastructure so the first thing that he can do is look",
    "start": "752530",
    "end": "757840"
  },
  {
    "text": "for an example of an application which already fulfills the broad use case",
    "start": "757840",
    "end": "762910"
  },
  {
    "text": "requirements that he has in mind for this particular application okay knows he needs the service web app wants to",
    "start": "762910",
    "end": "770170"
  },
  {
    "text": "host it on an API gateway endpoint access existing data stored in a dynamodb table has some static assets",
    "start": "770170",
    "end": "777910"
  },
  {
    "text": "associated with it JavaScript CSS client-side JavaScript by his CSS maybe",
    "start": "777910",
    "end": "783760"
  },
  {
    "text": "art assets that are required for the look and feel of the application and he wants to encode business logic as lambda",
    "start": "783760",
    "end": "789580"
  },
  {
    "text": "functions and you know something new AWS reinvent called the service application",
    "start": "789580",
    "end": "796149"
  },
  {
    "text": "repository if you are white listed for this it will appear inside the lamda",
    "start": "796149",
    "end": "801519"
  },
  {
    "text": "console when you hit the create a new function button which is of course in the top right of the lamda console",
    "start": "801519",
    "end": "807370"
  },
  {
    "text": "you'll see an extra tab available to you these two have been there forever okay",
    "start": "807370",
    "end": "812440"
  },
  {
    "text": "and actually this really to some extent extends the idea of blueprints let's just talk about these - first of all",
    "start": "812440",
    "end": "818350"
  },
  {
    "text": "author from scratch will drop you into a configuration page where you can either use a WYSIWYG editor to edit your",
    "start": "818350",
    "end": "824740"
  },
  {
    "text": "function directly inline in the console and we'll describe that a little bit more later or you can choose a blueprint",
    "start": "824740",
    "end": "830380"
  },
  {
    "text": "and the blueprint is just a pre uploaded package of lambda function code that we made available in the console that has",
    "start": "830380",
    "end": "837730"
  },
  {
    "text": "the function code and dependencies package within it for a specific use case one of the common examples that we",
    "start": "837730",
    "end": "843370"
  },
  {
    "text": "started with that day one was image resizing still available as a blueprint within the console another is Alexa",
    "start": "843370",
    "end": "850149"
  },
  {
    "text": "skills so there are various blueprints for Alexa skills with different functionality available in the lambda",
    "start": "850149",
    "end": "856510"
  },
  {
    "text": "console viewer getting started Alexa I was an echo programmer you can use one of those and it will bootstrap a",
    "start": "856510",
    "end": "863020"
  },
  {
    "text": "function that has basic functionality for particular types of skills I believe one of them is the favorite color skill",
    "start": "863020",
    "end": "869260"
  },
  {
    "text": "so you can specify your favorite color and then ask Alexa later on what your favorite color is and it will remember",
    "start": "869260",
    "end": "874390"
  },
  {
    "text": "it using state storage so these are very very simple apps that don't really have dependencies okay they're very very",
    "start": "874390",
    "end": "880240"
  },
  {
    "text": "lightweight single function models what we're doing with the serverless application repository is extending that",
    "start": "880240",
    "end": "887410"
  },
  {
    "text": "okay into fully packaged fully functional service applications okay and",
    "start": "887410",
    "end": "894430"
  },
  {
    "text": "you can search here by typing in in this search box characteristics attributes",
    "start": "894430",
    "end": "900300"
  },
  {
    "text": "functionality that you're looking for okay so this image conversion might be something that you go for you could type that or stateless we're about absolute",
    "start": "900300",
    "end": "906520"
  },
  {
    "text": "done here and you'll see a catalog of",
    "start": "906520",
    "end": "911610"
  },
  {
    "text": "applications not function as a catalog of applications be returned back to you when you do that okay and that will",
    "start": "911610",
    "end": "919329"
  },
  {
    "text": "allow you to work through a wizard-based configuration and deployment model for",
    "start": "919329",
    "end": "925329"
  },
  {
    "text": "the applications that are packaged up available inside that serverless application repository what",
    "start": "925329",
    "end": "930910"
  },
  {
    "text": "you're using here is some templates so the servlet application model which is a",
    "start": "930910",
    "end": "938940"
  },
  {
    "text": "further abstraction layer transformation layer which is defined using AWS",
    "start": "939060",
    "end": "945520"
  },
  {
    "text": "CloudFormation okay so Sam is really a special purpose cloud formation template",
    "start": "945520",
    "end": "952390"
  },
  {
    "text": "that provides simpler abstractions for resources that are commonly used in",
    "start": "952390",
    "end": "958840"
  },
  {
    "text": "service applications lambda functions API endpoints and a specific derivative",
    "start": "958840",
    "end": "964930"
  },
  {
    "text": "of the DynamoDB table which is intended for very simple or simpler use cases let's say okay so you can define all of",
    "start": "964930",
    "end": "972040"
  },
  {
    "text": "those within a Sam template a service application model template so you can",
    "start": "972040",
    "end": "977530"
  },
  {
    "text": "see here we have a AWS service function resource type defined and we have this",
    "start": "977530",
    "end": "987460"
  },
  {
    "text": "connected to an API gateway with a particular resource type here called slash products available with a method",
    "start": "987460",
    "end": "994450"
  },
  {
    "text": "and that's linked to a specific handler within the lambda function so we can essentially define and layout the",
    "start": "994450",
    "end": "1001320"
  },
  {
    "text": "resources that are required for application in this templating language we can execute those directly from the",
    "start": "1001320",
    "end": "1009630"
  },
  {
    "text": "service application repository and have them deployed directly into our account as fully functioning service",
    "start": "1009630",
    "end": "1015600"
  },
  {
    "text": "applications there's going to be a library of apps available inside the",
    "start": "1015600",
    "end": "1020610"
  },
  {
    "text": "service application repository for deployment via this process also expansion tokens available so when these",
    "start": "1020610",
    "end": "1028350"
  },
  {
    "text": "are deployed into different customers accounts they will be customized and we use environment variables to do this so",
    "start": "1028350",
    "end": "1034709"
  },
  {
    "text": "you're gonna have environment variables within your lambda function config there's that set up the account specific",
    "start": "1034709",
    "end": "1041220"
  },
  {
    "text": "attributes for your individual deployment of these apps there's",
    "start": "1041220",
    "end": "1046589"
  },
  {
    "text": "actually two sides to this so yeah it simplifies the process of deploying service applications for developers but",
    "start": "1046589",
    "end": "1052920"
  },
  {
    "text": "as a developer you can also publish into the repository okay so if you have an",
    "start": "1052920",
    "end": "1058140"
  },
  {
    "text": "application that you've built that you want to with other users other customers",
    "start": "1058140",
    "end": "1063660"
  },
  {
    "text": "you can upload that into the service application repository and make it available for other users to access and",
    "start": "1063660",
    "end": "1070200"
  },
  {
    "text": "for other users to deploy there might be other users within your organization there might be other users in the public",
    "start": "1070200",
    "end": "1076380"
  },
  {
    "text": "sense in the border service community broader community of AWS users okay at the moment there's no monetization",
    "start": "1076380",
    "end": "1083040"
  },
  {
    "text": "directly within service application reaper so we're talking about kind of",
    "start": "1083040",
    "end": "1088310"
  },
  {
    "text": "altruistic sharing of applications via",
    "start": "1088310",
    "end": "1094590"
  },
  {
    "text": "this model but you can have AP eyes that are called within your deployed code",
    "start": "1094590",
    "end": "1100020"
  },
  {
    "text": "okay and you can monetize those API boundaries that you define you can actually use our AWS marketplace to do",
    "start": "1100020",
    "end": "1107550"
  },
  {
    "text": "billing and monetization of those api's if you want to do so so if you didn't want to use this as a mechanism for",
    "start": "1107550",
    "end": "1112710"
  },
  {
    "text": "building a business model where you're distributing a service in quotes SDK for",
    "start": "1112710",
    "end": "1118140"
  },
  {
    "text": "access to a product that you've built for an API endpoint that you've built you can do that by using an API",
    "start": "1118140",
    "end": "1124920"
  },
  {
    "text": "boundaries the monetization point if you've ever experimented anyone here done any significant work with the",
    "start": "1124920",
    "end": "1130440"
  },
  {
    "text": "Elector with them as an echo and with your LexA skills care ok wanna see people you'll know this is the same",
    "start": "1130440",
    "end": "1135900"
  },
  {
    "text": "model so you can't directly monetize within the Alexa skill store today but you can build Alexa skills that require",
    "start": "1135900",
    "end": "1142950"
  },
  {
    "text": "account linking that account linking can be to an API boundary and you can monetize at the API boundary it's quite",
    "start": "1142950",
    "end": "1149430"
  },
  {
    "text": "a similar model to that actually with the service application Reaper you can monetize at the api boundary where your",
    "start": "1149430",
    "end": "1156570"
  },
  {
    "text": "service application model applications interface with other resources that you operate as a service ok so there are",
    "start": "1156570",
    "end": "1162630"
  },
  {
    "text": "ways in which you can build businesses around this as well this is in preview at the moment and of course if you're",
    "start": "1162630",
    "end": "1168390"
  },
  {
    "text": "not familiar with these excuse me AWS terms public preview means that",
    "start": "1168390",
    "end": "1173400"
  },
  {
    "text": "essentially you have to request access to a service we essentially gate and whitelist customers for access to the",
    "start": "1173400",
    "end": "1180150"
  },
  {
    "text": "service based on their use case criteria and if you do try to access Sam today",
    "start": "1180150",
    "end": "1185250"
  },
  {
    "text": "you'll see a request access to the preview form appear inside the console on the website enter some details about",
    "start": "1185250",
    "end": "1191340"
  },
  {
    "text": "your use case there our team will evaluate your request and permit you",
    "start": "1191340",
    "end": "1196470"
  },
  {
    "text": "access to the preview if you meet qualifying criteria if you want to kind of shortcut that process quick tip you",
    "start": "1196470",
    "end": "1204150"
  },
  {
    "text": "can access the previews via our developer advocate and the evangelism team as well so if there's something",
    "start": "1204150",
    "end": "1209310"
  },
  {
    "text": "specific that you want to do that requires excellence the preview chat to myself chatted a low chatter",
    "start": "1209310",
    "end": "1214710"
  },
  {
    "text": "Adrienne chat to another member of the team that's here today give us some details and we can get you pushed through the process a little bit more",
    "start": "1214710",
    "end": "1220380"
  },
  {
    "text": "quickly we can't help can help okay so that's a little bit about the service application reach reaper did say that",
    "start": "1220380",
    "end": "1227430"
  },
  {
    "text": "i'd return to editing in the console this is something that we've enhanced a lot recently about 18 months ago we",
    "start": "1227430",
    "end": "1235620"
  },
  {
    "text": "acquired a company called cloud 9 ok this is a company headquartered in the",
    "start": "1235620",
    "end": "1240960"
  },
  {
    "text": "netherlands with a mostly Dutch engineering team yeah who have built had",
    "start": "1240960",
    "end": "1248760"
  },
  {
    "text": "built a browser-based IDE ok so a development environment that",
    "start": "1248760",
    "end": "1253860"
  },
  {
    "text": "runs entirely within the browser and actually really one feature value that I",
    "start": "1253860",
    "end": "1260730"
  },
  {
    "text": "really like if you've used something like Google Docs or quip you'll know that they have",
    "start": "1260730",
    "end": "1266460"
  },
  {
    "text": "concurrent editing so it's not like a traditional version control system where you're checking out assets from a repo",
    "start": "1266460",
    "end": "1272600"
  },
  {
    "text": "working on them and then checking them back in again and you've got a sort of async working model where I do something",
    "start": "1272600",
    "end": "1278220"
  },
  {
    "text": "and then you do something and then you do something and then I do something which kind of lengthens the process with",
    "start": "1278220",
    "end": "1283680"
  },
  {
    "text": "these modern collaborative editors were in the same document at the same time right I can see which cell in your",
    "start": "1283680",
    "end": "1288750"
  },
  {
    "text": "Google sheet you're in and you can see where I am in my quick document that would might be collaborative editing on",
    "start": "1288750",
    "end": "1294320"
  },
  {
    "text": "cloud 9 does the same thing but for code so we can both be collaborating in the same file in the same code could be code",
    "start": "1294320",
    "end": "1301230"
  },
  {
    "text": "based concurrently we can both see where the where each of those cursor is in real time ok",
    "start": "1301230",
    "end": "1306360"
  },
  {
    "text": "and there's integrated chat features available in the client as well so we can not only write in the codebase but",
    "start": "1306360",
    "end": "1311610"
  },
  {
    "text": "we can also type and cut and paste in an interactive chat box which is adjacent to the code base in the GUI it's kind of",
    "start": "1311610",
    "end": "1318360"
  },
  {
    "text": "nice it's like a distributed pair programming tool where you can work concurrently on the same codebase see",
    "start": "1318360",
    "end": "1324000"
  },
  {
    "text": "each other's changes in real time and it's really helpful writing accurate cracked code without",
    "start": "1324000",
    "end": "1331980"
  },
  {
    "text": "having to have this sort of long asynchronous code review model where I do something you validate it and then pass it back to me which I actually",
    "start": "1331980",
    "end": "1338430"
  },
  {
    "text": "really like I think it's a I've never seen anything like that before applied to this particular kind of use",
    "start": "1338430",
    "end": "1343770"
  },
  {
    "text": "case I think it's pretty cool so this AWS cloud 9 it's now available as a",
    "start": "1343770",
    "end": "1349080"
  },
  {
    "text": "standalone service and there's quite a lot of integration with other AWS services probably going to talk about",
    "start": "1349080",
    "end": "1354780"
  },
  {
    "text": "code star a little bit later on in the course of some of the sessions that we're going to have which is our end-to-end continuous integration",
    "start": "1354780",
    "end": "1362070"
  },
  {
    "text": "environment which allows you to really simply establish source code control build pipelines deployment tools",
    "start": "1362070",
    "end": "1369120"
  },
  {
    "text": "application metrics okay so that's AWS code star cloud 9 is also integrated",
    "start": "1369120",
    "end": "1374610"
  },
  {
    "text": "with that so you can create a create a project in code star and create your cloud9 IDE environment directly from",
    "start": "1374610",
    "end": "1381210"
  },
  {
    "text": "within the code star tooling and end up with a not only with those resources that I've talked about but also with an",
    "start": "1381210",
    "end": "1387990"
  },
  {
    "text": "IDE environment for you to develop your code provisioned as part of the process so it's integrated there the other place",
    "start": "1387990",
    "end": "1395340"
  },
  {
    "text": "that it's integrated is in the lambda console so if I jump into the lambda console and go edit function today I",
    "start": "1395340",
    "end": "1401010"
  },
  {
    "text": "don't just have a box within which I can change my function code have a complete",
    "start": "1401010",
    "end": "1407250"
  },
  {
    "text": "complete cloud9 IDE embedded within the lambda console so I can not only edit my",
    "start": "1407250",
    "end": "1415050"
  },
  {
    "text": "function code but I can also see all of the dependencies within my package that I've deployed they're all available to",
    "start": "1415050",
    "end": "1420930"
  },
  {
    "text": "me to inspect you can see the hierarchy of my deployment archive available to me",
    "start": "1420930",
    "end": "1426800"
  },
  {
    "text": "of course I can modify my code and it has syntax check checking linting it has",
    "start": "1426800",
    "end": "1435300"
  },
  {
    "text": "the ability to spawn an AWS terminal",
    "start": "1435300",
    "end": "1440670"
  },
  {
    "text": "session with our command-line tools directly within the editor so you can run AWS CLI commands it has the ability",
    "start": "1440670",
    "end": "1448680"
  },
  {
    "text": "to step through and debug JavaScript code natively insert breakpoints halt",
    "start": "1448680",
    "end": "1454830"
  },
  {
    "text": "execution and inspect variables and program state directly within the editor so you have a fully fledged IDE",
    "start": "1454830",
    "end": "1461040"
  },
  {
    "text": "is embedded directly within the AWS Lander console supports editing for all",
    "start": "1461040",
    "end": "1466890"
  },
  {
    "text": "function types and these advanced debugging operations for JavaScript today with additional support for",
    "start": "1466890",
    "end": "1473190"
  },
  {
    "text": "additional languages to come in the future it's a really nice really nice enhancement okay so what else have we",
    "start": "1473190",
    "end": "1484950"
  },
  {
    "text": "done which is new a lot of these could be regarded as developer experience",
    "start": "1484950",
    "end": "1490680"
  },
  {
    "text": "tweaks feature tweaks which are intended to broaden the applicable use cases for",
    "start": "1490680",
    "end": "1496560"
  },
  {
    "text": "AWS lambda make it suitable for more use cases and one thing you should know probably some of you knows already",
    "start": "1496560",
    "end": "1502160"
  },
  {
    "text": "AWS product development the service development that we do well over 90% of",
    "start": "1502160",
    "end": "1507240"
  },
  {
    "text": "the enhancements that we create the service features that we build come directly from customer feedback okay so",
    "start": "1507240",
    "end": "1513330"
  },
  {
    "text": "pretty much every time we build anything because we've had a conversation with more than one customer that said I want",
    "start": "1513330",
    "end": "1518730"
  },
  {
    "text": "you to change the way this works or build this additional feature or you know might go I can't use this",
    "start": "1518730",
    "end": "1524820"
  },
  {
    "text": "particular service for this particular use case because of its got this deficiency doesn't support this",
    "start": "1524820",
    "end": "1529890"
  },
  {
    "text": "particular scenario that I have in mind I can work backwards from that to create new features and what you're going to",
    "start": "1529890",
    "end": "1536280"
  },
  {
    "text": "see here is a list of examples of situations where we've had big feedback from customers that have helped us",
    "start": "1536280",
    "end": "1542660"
  },
  {
    "text": "identify which direction we should take the development of lambda and some of these associated services so that it",
    "start": "1542660",
    "end": "1548160"
  },
  {
    "text": "fits the broader range of different use cases okay so the first is on concurrency it used to be 100 concurrent",
    "start": "1548160",
    "end": "1556830"
  },
  {
    "text": "function executions per account per region okay when we started with AWS",
    "start": "1556830",
    "end": "1562080"
  },
  {
    "text": "lambda we increase that to a thousand now so every customer can run a thousand",
    "start": "1562080",
    "end": "1568620"
  },
  {
    "text": "concurrent lambda functions per region by default okay but if you make a limit",
    "start": "1568620",
    "end": "1575370"
  },
  {
    "text": "raise request via our limits console every account can be automatically",
    "start": "1575370",
    "end": "1580740"
  },
  {
    "text": "approved to three times that without manual approval manual intervention as long as the account is we call it in",
    "start": "1580740",
    "end": "1586620"
  },
  {
    "text": "good standing which means your account is not an account with history of non-payment of bills or with behavior",
    "start": "1586620",
    "end": "1593760"
  },
  {
    "text": "which indicates but you're doing usage okay so like an account which is not being fully validated or verified okay so as long as",
    "start": "1593760",
    "end": "1600419"
  },
  {
    "text": "your account is in good standing kind of reminds me of World of Warcraft walk off that you know you've got you've",
    "start": "1600419",
    "end": "1605669"
  },
  {
    "text": "got you've got positive reputation with the AWS faction some of you will get that - um you know you've been grinding",
    "start": "1605669",
    "end": "1611549"
  },
  {
    "text": "whatever those things are that we need to gain that then you can you can automatically get approval to three",
    "start": "1611549",
    "end": "1618419"
  },
  {
    "text": "times the default I mean customers might ask why do these limits exist okay one of the reasons these limits exist is not",
    "start": "1618419",
    "end": "1624659"
  },
  {
    "text": "so much to protect AWS but to protect customers from overruns you know this is",
    "start": "1624659",
    "end": "1629700"
  },
  {
    "text": "a service where functions are triggered by events yeah and functions can be",
    "start": "1629700",
    "end": "1636200"
  },
  {
    "text": "recursive in nature one function can trigger another function you can even with things like step functions have one",
    "start": "1636200",
    "end": "1642629"
  },
  {
    "text": "function trigger in 10 parallel executions of a function so you could quickly have fan-out and if you make mistakes in your programming you can",
    "start": "1642629",
    "end": "1649799"
  },
  {
    "text": "quickly have excessive fan-out and if we didn't have these limits you could run up actually quite large bills very",
    "start": "1649799",
    "end": "1654960"
  },
  {
    "text": "quickly so one of the reasons these limits are here is to enable customers to gradually dial up the amount of usage",
    "start": "1654960",
    "end": "1661889"
  },
  {
    "text": "that they have and to do that in a controlled way to control expenditure okay I know of a customer in the UK this",
    "start": "1661889",
    "end": "1668399"
  },
  {
    "text": "is several years ago now they had their limits set to 125,000 concurrent okay so",
    "start": "1668399",
    "end": "1674879"
  },
  {
    "text": "it was at the time twelve and a half thousand times the default limits the default limit back then was a hundred",
    "start": "1674879",
    "end": "1680549"
  },
  {
    "text": "and that was fine so you can run these numbers up to very high levels if you've",
    "start": "1680549",
    "end": "1685679"
  },
  {
    "text": "got a valid use case for that and you can confirm to us that you definitely need to do so and therefore you're happy",
    "start": "1685679",
    "end": "1691710"
  },
  {
    "text": "to pay the costs associated with running functions with high concurrency that particular example was for real time",
    "start": "1691710",
    "end": "1697919"
  },
  {
    "text": "push notifications for a gaming news case where they were using the lambda functions to modify the outbound",
    "start": "1697919",
    "end": "1703919"
  },
  {
    "text": "messages that were going out to their mobile phone app so a mobile app that they were running so they were sending hundreds of thousands for these push",
    "start": "1703919",
    "end": "1710099"
  },
  {
    "text": "notifications a second at certain times of the days and week they were driven by events in the real world they would send",
    "start": "1710099",
    "end": "1715769"
  },
  {
    "text": "out many many hundreds of thousands of these notifications and every single one was personalised for a particular user",
    "start": "1715769",
    "end": "1721019"
  },
  {
    "text": "with user related metadata in the message that went out so they were using lambda in that way really high-volume",
    "start": "1721019",
    "end": "1726179"
  },
  {
    "text": "really good use case extremely lastic costs for the other 7 days and 23",
    "start": "1726179",
    "end": "1731820"
  },
  {
    "text": "hours and 40 minutes of the week they had almost no activity on that service it's a really really efficient way to do",
    "start": "1731820",
    "end": "1737010"
  },
  {
    "text": "it and you can get to very high numbers if you need them thousand concurrent functions per account region and auto",
    "start": "1737010",
    "end": "1744180"
  },
  {
    "text": "approval to three times that the second thing that we've optimized is cold start",
    "start": "1744180",
    "end": "1749190"
  },
  {
    "text": "optimization this is a sort of natural characteristics of the characteristic of",
    "start": "1749190",
    "end": "1754350"
  },
  {
    "text": "the platform what do you think happens under the covers when you first launch a lambda function so the first time we get",
    "start": "1754350",
    "end": "1761700"
  },
  {
    "text": "a qualifying event if we haven't run the function for a while it's not on our infrastructure so we would call that a",
    "start": "1761700",
    "end": "1767190"
  },
  {
    "text": "cold start it's on our infrastructure in the sense that the code package is in our infrastructure somewhere but there",
    "start": "1767190",
    "end": "1772770"
  },
  {
    "text": "isn't a cache copy of that code package packaged up in a container available adjacent to a CPU to execute so we have",
    "start": "1772770",
    "end": "1780510"
  },
  {
    "text": "to get the package grab the container that the package is packaged within pull it down onto a",
    "start": "1780510",
    "end": "1786420"
  },
  {
    "text": "machine and execute it and that's the cold start time that you have when you first run a copy of the function now",
    "start": "1786420",
    "end": "1792809"
  },
  {
    "text": "that function will then be cached in the execution environment and the second and subsequent executions will they'll be",
    "start": "1792809",
    "end": "1799770"
  },
  {
    "text": "fast because the function code will be cached on the machine and will be available it comes a point where you",
    "start": "1799770",
    "end": "1806670"
  },
  {
    "text": "need a second copy of the function because you're exceeding the execution capacity of that first machine that you're running on probably going to put",
    "start": "1806670",
    "end": "1814230"
  },
  {
    "text": "this in a second availability zone for durability and availability we have to get that container as well and pull that",
    "start": "1814230",
    "end": "1819660"
  },
  {
    "text": "down okay and you'll have a second cold start somewhere in your list of",
    "start": "1819660",
    "end": "1824820"
  },
  {
    "text": "executions when we get that second container and move it down to that second machine and then the third and the fourth each time you warm for new",
    "start": "1824820",
    "end": "1831360"
  },
  {
    "text": "machine to start running a copy of the function on there we're going to pull down the container onto that machine and run it and because the containers come",
    "start": "1831360",
    "end": "1839370"
  },
  {
    "text": "across the network the bigger the function the longer it takes us to pull the code down onto this machine and",
    "start": "1839370",
    "end": "1844710"
  },
  {
    "text": "start to execute it was a problem particularly for large functions that had lots of dependencies bundled within",
    "start": "1844710",
    "end": "1851100"
  },
  {
    "text": "them I'm gonna be Java based functions were more susceptible to this because",
    "start": "1851100",
    "end": "1859470"
  },
  {
    "text": "you quite have to often have very large classifier dependencies that are bundled within the function even large post compilation so",
    "start": "1859470",
    "end": "1868260"
  },
  {
    "text": "a large bike by Claude bike code files that are bundled up within within the deployment package we've made some",
    "start": "1868260",
    "end": "1875220"
  },
  {
    "text": "optimizations here to drive down cold start okay so it's gaining up to eighty percent reduction in start times for",
    "start": "1875220",
    "end": "1881400"
  },
  {
    "text": "larger functions that's with positioning curb base differently in performing some",
    "start": "1881400",
    "end": "1887190"
  },
  {
    "text": "other optimization steps as well inside the platform okay so that can help you with overcoming latency at first start",
    "start": "1887190",
    "end": "1894210"
  },
  {
    "text": "of a new copy of your function third thing is monitoring enhancements so you",
    "start": "1894210",
    "end": "1902190"
  },
  {
    "text": "can now see directly within the console within your monitoring tab I'm sure doing a little through this a little bit later on when he talks about",
    "start": "1902190",
    "end": "1908370"
  },
  {
    "text": "developer experience in the console you can now see your logs more easily access your logging to it more easily without",
    "start": "1908370",
    "end": "1913800"
  },
  {
    "text": "the need to navigate between multiple AWS consoles or with simplified navigation between different consoles",
    "start": "1913800",
    "end": "1919800"
  },
  {
    "text": "actually it's probably a better way to describe that so that's like DX experience to make it easier for you to debug and establish how your functions",
    "start": "1919800",
    "end": "1927990"
  },
  {
    "text": "are behaving don't mention it explicitly within this deck we've also got integration with another service called",
    "start": "1927990",
    "end": "1933440"
  },
  {
    "text": "AWS x-ray anyone heard of that I really like that service it allows you to embed",
    "start": "1933440",
    "end": "1940740"
  },
  {
    "text": "a special-purpose SDK within your lambda runtime and that special-purpose SDK",
    "start": "1940740",
    "end": "1946400"
  },
  {
    "text": "instruments remote calls so when you call out of the function to another AWS",
    "start": "1946400",
    "end": "1951690"
  },
  {
    "text": "service say dynamo or comprehend I have instrument that in one of mine which is a beat service for an LP for natural",
    "start": "1951690",
    "end": "1957780"
  },
  {
    "text": "language processing you can see latency to these remote endpoints you can also",
    "start": "1957780",
    "end": "1964280"
  },
  {
    "text": "create custom instrumentation within your apps so before I had comprehend I had a third-party sentiment API in one",
    "start": "1964280",
    "end": "1970500"
  },
  {
    "text": "of my apps I had custom custom instrumentation wrapped around that so I could see the latency for me to call out to this third",
    "start": "1970500",
    "end": "1976650"
  },
  {
    "text": "party API endpoint and have my responses returned back to me you can see all this",
    "start": "1976650",
    "end": "1981750"
  },
  {
    "text": "in textual format in the form of what we call tracers which are individual log entries for each front function",
    "start": "1981750",
    "end": "1987570"
  },
  {
    "text": "invocation that includes a chart based breakdown of execution time where the",
    "start": "1987570",
    "end": "1994560"
  },
  {
    "text": "differ third party components will be graphed out for you in linear format also includes service mapping okay so that",
    "start": "1994560",
    "end": "2000200"
  },
  {
    "text": "again is integrated directly within the lambda console you can see the traces for a specific lambda function just",
    "start": "2000200",
    "end": "2006590"
  },
  {
    "text": "click off onto them as well as as well as this textual logging and then we also have increased the maximum sum functions",
    "start": "2006590",
    "end": "2014570"
  },
  {
    "text": "from what gigs to three gigs and this is actually really important okay and I think something that really needs to be",
    "start": "2014570",
    "end": "2021499"
  },
  {
    "text": "reiterated to every new user of the platform when we talk about memory we're talking about all system resources being",
    "start": "2021499",
    "end": "2028789"
  },
  {
    "text": "scaled in accordance with the amount of RAM that you allocate so when you move that Ram slider up what you're doing is",
    "start": "2028789",
    "end": "2035330"
  },
  {
    "text": "allocating more of the host to the function it's not actually just memory it's also more of the CPU and it's also",
    "start": "2035330",
    "end": "2041570"
  },
  {
    "text": "more of the network throughput for that particular function as well so you're allocating all resources in a manner",
    "start": "2041570",
    "end": "2048079"
  },
  {
    "text": "which is proportional to the memory allocation that you make if I give one gig rather than 100 Meg's I'm giving ten",
    "start": "2048079",
    "end": "2055368"
  },
  {
    "text": "times the amount of CPU shares and ten times the amount of network bandwidth to that function as well okay so shouldn't just think about my",
    "start": "2055369",
    "end": "2063589"
  },
  {
    "text": "function may not be memory constrained you know may be throughput constrained or CPU constrained but I still move the",
    "start": "2063589",
    "end": "2070849"
  },
  {
    "text": "memory slider in order to allocate more of those resources slightly counterintuitive but it's just the",
    "start": "2070849",
    "end": "2077148"
  },
  {
    "text": "simplest okay so everything's scaled",
    "start": "2077149",
    "end": "2081429"
  },
  {
    "text": "Meg's to 30x at now to three gigs per function and that will give you a whole",
    "start": "2083940",
    "end": "2089510"
  },
  {
    "text": "substrate eventually a whole machine essentially a whole a full allocation of",
    "start": "2089510",
    "end": "2094858"
  },
  {
    "text": "the resources on one machine so the second time you start a function they'll be running on a new machine so you'll",
    "start": "2094859",
    "end": "2099900"
  },
  {
    "text": "have more frequent cold starts with bigger functions it's also something just bear in mind okay and then brand",
    "start": "2099900",
    "end": "2106740"
  },
  {
    "text": "new just in last was for not quite a week ago we announced general",
    "start": "2106740",
    "end": "2112650"
  },
  {
    "text": "availability for two new runtimes okay so we already have Java Python JavaScript and we had c-sharp net core",
    "start": "2112650",
    "end": "2121550"
  },
  {
    "text": "1.0 available those are the four runtimes now we have general availability and dotnet core 2.0 and we",
    "start": "2121550",
    "end": "2128069"
  },
  {
    "text": "also have general availability on go go along as well so you can write your lambda functions in these",
    "start": "2128069",
    "end": "2134180"
  },
  {
    "text": "you",
    "start": "2139690",
    "end": "2141750"
  },
  {
    "text": "directly within code start immediately at launch as well in fact Paul Paul Maddox who's speaking here later on",
    "start": "2159070",
    "end": "2164320"
  },
  {
    "text": "today is responsible for some of these features actually built them so if you want to ask more about that he's a",
    "start": "2164320",
    "end": "2169750"
  },
  {
    "text": "really really good person to talk to obviously golang very very popular for micro services and web services",
    "start": "2169750",
    "end": "2175720"
  },
  {
    "text": "development and fully supported in lamda is first-class function from first class citizen from last week okay does a brand",
    "start": "2175720",
    "end": "2183280"
  },
  {
    "text": "new okay ah what's next yeah so changes okay this",
    "start": "2183280",
    "end": "2189460"
  },
  {
    "text": "is one of the areas where we're getting quite a lot of feedback we need more support in making AWS lambda production",
    "start": "2189460",
    "end": "2198220"
  },
  {
    "text": "ready okay in making the service production ready we're thinking about all of the things which hang around the",
    "start": "2198220",
    "end": "2205900"
  },
  {
    "text": "technology in order to make it more",
    "start": "2205900",
    "end": "2212910"
  },
  {
    "text": "order to make it easier for us to maintain and deploy applications using",
    "start": "2212910",
    "end": "2218380"
  },
  {
    "text": "this model in a predictable way so supporting roll back roll forward version control testing fitting within C",
    "start": "2218380",
    "end": "2225550"
  },
  {
    "text": "ICD pipelines enabling us to do things like deployment control for Canario deployments or weighted deployments",
    "start": "2225550",
    "end": "2232180"
  },
  {
    "text": "where we might have a be testing and the like okay so it's kind of bringing some of the higher value you control features",
    "start": "2232180",
    "end": "2239950"
  },
  {
    "text": "that fit around software development processes and applying them to AWS lambda in the way that we might apply",
    "start": "2239950",
    "end": "2245680"
  },
  {
    "text": "them to other technology approaches so real high scale production use these are important things okay so going beyond",
    "start": "2245680",
    "end": "2252580"
  },
  {
    "text": "simply having AWS cloud no.9 inside the lambda console obviously we also have",
    "start": "2252580",
    "end": "2258580"
  },
  {
    "text": "the standalone service the standalone cloud cloud 9 service there's some",
    "start": "2258580",
    "end": "2263710"
  },
  {
    "text": "advanced features in this which I did talk about a little bit later well I didn't talk about earlier was something",
    "start": "2263710",
    "end": "2269710"
  },
  {
    "text": "called Sam local so Sam local allows you to establish independent development",
    "start": "2269710",
    "end": "2276970"
  },
  {
    "text": "environments that contain the resource types that are defined within a Sam template and those as I mentioned",
    "start": "2276970",
    "end": "2282550"
  },
  {
    "text": "earlier were lambda functions API gateway endpoints and these more simple",
    "start": "2282550",
    "end": "2287620"
  },
  {
    "text": "dynamodb tables ok and when I talk about local instances of those",
    "start": "2287620",
    "end": "2292750"
  },
  {
    "text": "services I mean standalone copies of the lambda runtime environment of the API",
    "start": "2292750",
    "end": "2298270"
  },
  {
    "text": "gateway endpoints and of those simple dynamodb tables that run locally independent of an AWS region okay and",
    "start": "2298270",
    "end": "2306250"
  },
  {
    "text": "now that local execution can be on your laptop or we can be directly within the",
    "start": "2306250",
    "end": "2311710"
  },
  {
    "text": "cloud 9 environment if in the cloud in an environment of course it's still in an AWS region but it's not going back to",
    "start": "2311710",
    "end": "2317860"
  },
  {
    "text": "origin it's not going back to an actual lambda function running on our execution environment it's not going back to an",
    "start": "2317860",
    "end": "2323080"
  },
  {
    "text": "actual API gateway endpoint running on our global infrastructure and it's not going back to Dynamo DV running on a",
    "start": "2323080",
    "end": "2329650"
  },
  {
    "text": "table so a you don't have to provision those resources within your regular AWS",
    "start": "2329650",
    "end": "2334660"
  },
  {
    "text": "account be you don't have latency to those resources they're immediately",
    "start": "2334660",
    "end": "2339970"
  },
  {
    "text": "available directly in the execution environment where you're running your code and see you don't have costs okay",
    "start": "2339970",
    "end": "2345850"
  },
  {
    "text": "so after provision read write throughput units on a DynamoDB table just for testing purposes I can do all of those",
    "start": "2345850",
    "end": "2351880"
  },
  {
    "text": "things locally using the some local environment we'll hear a little bit more about this later during the course of",
    "start": "2351880",
    "end": "2357400"
  },
  {
    "text": "the day Danilo is definitely talking about this but the way it works is a set of containers are established directly",
    "start": "2357400",
    "end": "2363700"
  },
  {
    "text": "in the development environment either on the laptop or in the IDE environment in this case those containers literally",
    "start": "2363700",
    "end": "2369160"
  },
  {
    "text": "contain copies of lambda runtime they contain an emulator for DynamoDB and a",
    "start": "2369160",
    "end": "2375310"
  },
  {
    "text": "copy of the API gateway endpoint infrastructure as well so you can run all of that locally directly on your",
    "start": "2375310",
    "end": "2380710"
  },
  {
    "text": "laptop or inside the ide changes are instant you don't have any costs you're not traversing the internet to",
    "start": "2380710",
    "end": "2387010"
  },
  {
    "text": "reach our endpoints in an AWS region okay it's also integrated within the cloud 9 ID so I can spin up a some local",
    "start": "2387010",
    "end": "2394300"
  },
  {
    "text": "environment directly inside the machine which hosts my cloud9 IDE can benefit",
    "start": "2394300",
    "end": "2399400"
  },
  {
    "text": "from all of those features adjacent to where my code is stored back in the cloud in this case but adjacent to where",
    "start": "2399400",
    "end": "2405250"
  },
  {
    "text": "my code is stored directly on the local machine that's a pretty nice set of features ok from within cloud9 IDE you",
    "start": "2405250",
    "end": "2412300"
  },
  {
    "text": "can of course directly deploy to your lambda service so replacing existing functions natively form within the",
    "start": "2412300",
    "end": "2419230"
  },
  {
    "text": "cloud9 IDE and we have version control as well so you can talk to any get compatible endpoint our code commits",
    "start": "2419230",
    "end": "2424780"
  },
  {
    "text": "service github enterprise or a big book you always get compatible endpoints that you",
    "start": "2424780",
    "end": "2430960"
  },
  {
    "text": "might run elsewhere okay so you can both operate in the cloud IDE and then check",
    "start": "2430960",
    "end": "2436450"
  },
  {
    "text": "your code in check it out and work with on a laptop who's going to be operating disconnected well actually that many",
    "start": "2436450",
    "end": "2442290"
  },
  {
    "text": "environments in which we operate disconnected today unless like me you live in the UK and travel by train in",
    "start": "2442290",
    "end": "2448420"
  },
  {
    "text": "which case all bets are off you need to local environment our broadband infrastructure is pretty dire",
    "start": "2448420",
    "end": "2454260"
  },
  {
    "text": "Wireless blog broadband infrastructure is pretty dire not endowed with great trained Wi-Fi light you have over here",
    "start": "2454260",
    "end": "2459970"
  },
  {
    "text": "in in Sweden okay so that's that's the ID and then the build process okay so we",
    "start": "2459970",
    "end": "2470080"
  },
  {
    "text": "have something called AWS code pipeline which literally what it says it allows",
    "start": "2470080",
    "end": "2475240"
  },
  {
    "text": "you to establish a pipeline to build and deploy software automatically using AWS",
    "start": "2475240",
    "end": "2480700"
  },
  {
    "text": "code star is the no doubt the easiest way to get started with this okay so you can create your application within code",
    "start": "2480700",
    "end": "2488080"
  },
  {
    "text": "star from a template and it will establish the source code control and build pipeline for you you can also snap",
    "start": "2488080",
    "end": "2494140"
  },
  {
    "text": "in and snap out different components here so a good example of that would be at the front end you know maybe I've got",
    "start": "2494140",
    "end": "2500770"
  },
  {
    "text": "some projects that I want to do open source open have them integrated into",
    "start": "2500770",
    "end": "2509109"
  },
  {
    "text": "the github ecosystem well I can replace code commit with github I can initiate my code pipeline on commit to a specific",
    "start": "2509109",
    "end": "2516280"
  },
  {
    "text": "branch stored in github rather than commit to a specific branch stored in our code commit service conversely maybe",
    "start": "2516280",
    "end": "2522850"
  },
  {
    "text": "I've got a high security requirement for my codebase I want to make sure that it's stored in a specific location in",
    "start": "2522850",
    "end": "2529359"
  },
  {
    "text": "the world in order to meet compliance requirements I want to make sure that I have multi-factor author and my code I",
    "start": "2529359",
    "end": "2535390"
  },
  {
    "text": "want to make sure that I have all of the AWS compliance controls that are available I want to make sure that my",
    "start": "2535390",
    "end": "2540760"
  },
  {
    "text": "code base is stored extremely durable if those are the criteria that I want to me then maybe get hub isn't a good answer",
    "start": "2540760",
    "end": "2546550"
  },
  {
    "text": "and I want to have code commits it meets this extremely high compliance bar that I know I can rely upon an AWS to meet so",
    "start": "2546550",
    "end": "2553930"
  },
  {
    "text": "maybe I use code commit for that kind of project but github for some of the stuff so this is pluggable at the front end",
    "start": "2553930",
    "end": "2559660"
  },
  {
    "text": "and then in the pipeline these are individual AWS services which you",
    "start": "2559660",
    "end": "2565420"
  },
  {
    "text": "probably recognize code build cloud formation cloud watch with code star",
    "start": "2565420",
    "end": "2570940"
  },
  {
    "text": "will provision these services as a resources within the pipeline that I can",
    "start": "2570940",
    "end": "2576400"
  },
  {
    "text": "then go in and modify them as standalone services using the regular tools that I use so it will establish the environment",
    "start": "2576400",
    "end": "2582460"
  },
  {
    "text": "and then free to customize modify and involve that environment over time okay",
    "start": "2582460",
    "end": "2587710"
  },
  {
    "text": "so I can change the way in which my pipeline works as my project gets more complex or as my business requirements",
    "start": "2587710",
    "end": "2594099"
  },
  {
    "text": "change that's it really very very easy to use very very powerful tool",
    "start": "2594099",
    "end": "2601440"
  },
  {
    "text": "additional feedback we received additional feedback we received sorry back I talked about some of this stuff",
    "start": "2603150",
    "end": "2609819"
  },
  {
    "text": "already so deployments how can i reintroduce some of the advanced",
    "start": "2609819",
    "end": "2616690"
  },
  {
    "text": "features that I might use today to enable me to do safe incremental",
    "start": "2616690",
    "end": "2621880"
  },
  {
    "text": "deployment of applications features that were historically not present inside AWS",
    "start": "2621880",
    "end": "2628450"
  },
  {
    "text": "lambda we're doing a lot of work to make AWS lambda more suitable for enterprise and production use cases so for the",
    "start": "2628450",
    "end": "2634750"
  },
  {
    "text": "moldings that we've introduced weighted aliases okay so this allows me to do",
    "start": "2634750",
    "end": "2641309"
  },
  {
    "text": "traffic shifting proportional traffic shifting between multiple versions of",
    "start": "2641309",
    "end": "2647140"
  },
  {
    "text": "the same function without having to do that at the API gateway using weighted",
    "start": "2647140",
    "end": "2653200"
  },
  {
    "text": "DNS records it's how I might have done it historically so the front end there might have distributed all of my traffic across the DNS record and had 70 30 or",
    "start": "2653200",
    "end": "2661569"
  },
  {
    "text": "90/10 distribution across two different API endpoints there's quite a lot of heavy lifting there and also it then",
    "start": "2661569",
    "end": "2668260"
  },
  {
    "text": "there's a dependency on all access to my function entering via that API endpoint",
    "start": "2668260",
    "end": "2673480"
  },
  {
    "text": "and all access to my function using dns resolution for load balancing it's not practical I do quite a lot of",
    "start": "2673480",
    "end": "2679960"
  },
  {
    "text": "development on the service we've got called Amazon Lakes which is our service for chat BOTS I'll be talking about it",
    "start": "2679960",
    "end": "2685240"
  },
  {
    "text": "in the other track later and you'll see quite a lot of lambda usage there and quite a lot of Python code as well",
    "start": "2685240",
    "end": "2692730"
  },
  {
    "text": "there's no dns resolution for lambda that likes to talk to lambda is just natively invoking those functions inside",
    "start": "2693010",
    "end": "2700150"
  },
  {
    "text": "the AWS platform so that approach of using dns for traffic distribution was just not available for that sort of use",
    "start": "2700150",
    "end": "2706630"
  },
  {
    "text": "case but with these weighted functions it is okay so I can have two versions of",
    "start": "2706630",
    "end": "2712090"
  },
  {
    "text": "my lambda function deployed and I can balance traffic across them it doesn't matter what the invocation sources",
    "start": "2712090",
    "end": "2717640"
  },
  {
    "text": "whether the invocation source is an API gateway invocation source elects invocation source Kinesis stream",
    "start": "2717640",
    "end": "2723880"
  },
  {
    "text": "whatever it is I'll be getting both functions invoked in whatever proportions that I specify I can",
    "start": "2723880",
    "end": "2729700"
  },
  {
    "text": "instrument them and use them for a be testing okay if you are using the API gateway we've got sub stages in the API",
    "start": "2729700",
    "end": "2737020"
  },
  {
    "text": "gateway allowing it to share traffic between two stages at the front end so again there's no need to use DNS based",
    "start": "2737020",
    "end": "2744000"
  },
  {
    "text": "weighted DNS based distribution across two different API gateway endpoints you can balance across different stages",
    "start": "2744000",
    "end": "2750940"
  },
  {
    "text": "within the same API gateway endpoint much simpler to manage at the front end okay and then lastly with code deploy we",
    "start": "2750940",
    "end": "2759460"
  },
  {
    "text": "have automated support for safe services deployment which means automated metrics",
    "start": "2759460",
    "end": "2764980"
  },
  {
    "text": "driven roll out and roll backs if the deployer function and I see elevated",
    "start": "2764980",
    "end": "2770410"
  },
  {
    "text": "error rates as a result of deploying that new version I can automatically roll back to a previous version of the",
    "start": "2770410",
    "end": "2776440"
  },
  {
    "text": "function that's a really nice feature if I break something I can revert back to a",
    "start": "2776440",
    "end": "2782350"
  },
  {
    "text": "prior version which didn't exhibit those issues and be functioning again without having to issue a command or have a",
    "start": "2782350",
    "end": "2788140"
  },
  {
    "text": "member of my ops team diagnose that issue it's all automated really nice feature okay how does this look so in",
    "start": "2788140",
    "end": "2794380"
  },
  {
    "text": "the console you can specify weights okay this is actually in deployment or we're",
    "start": "2794380",
    "end": "2800800"
  },
  {
    "text": "looking at deployment status pre deployment validation step two is",
    "start": "2800800",
    "end": "2806050"
  },
  {
    "text": "traffic shifting to the new function post deployment validation and then we'll roll through and this is what the",
    "start": "2806050",
    "end": "2812440"
  },
  {
    "text": "console like as we're in this traffic State traffic shifting phase so we've done our validation essentially we've",
    "start": "2812440",
    "end": "2818619"
  },
  {
    "text": "got a working deployable okay then we start to move traffic you can see over here in real-time how our traffic is",
    "start": "2818619",
    "end": "2825430"
  },
  {
    "text": "being distributed so here we got 90% of the existing version 10% of traffic on the new and as we move",
    "start": "2825430",
    "end": "2832600"
  },
  {
    "text": "through the process that will shift okay so more substantial amount of traffic is being shifted over now as this",
    "start": "2832600",
    "end": "2839200"
  },
  {
    "text": "deployment is in process and 40 percent of our traffic is on our new variant",
    "start": "2839200",
    "end": "2844260"
  },
  {
    "text": "50/50 and eventually we complete our deployment process you can see all this",
    "start": "2844260",
    "end": "2849340"
  },
  {
    "text": "in real time in the console as code deploy pushes out that new version of your of your function you can also do",
    "start": "2849340",
    "end": "2856840"
  },
  {
    "text": "these canary deployments so this is putting a new variant of a function into",
    "start": "2856840",
    "end": "2863830"
  },
  {
    "text": "production of course we're just a limited subset of users or limited some subset of invitations hitting that new variant",
    "start": "2863830",
    "end": "2871060"
  },
  {
    "text": "okay this is where our automated roll back roll back and additional instrumentation within our function",
    "start": "2871060",
    "end": "2877210"
  },
  {
    "text": "could be valuable of course there's more here than just are we getting error",
    "start": "2877210",
    "end": "2884200"
  },
  {
    "text": "codes returned by our function there's also the question of whether or not the new variant of F of our function",
    "start": "2884200",
    "end": "2890050"
  },
  {
    "text": "actually helps us achieve the business objectives that we want okay maybe there's a change that we've implemented to improve performance and reduce",
    "start": "2890050",
    "end": "2896680"
  },
  {
    "text": "latency so we could instrument for that and evaluate that over those 10 percent of new function invitations establishing",
    "start": "2896680",
    "end": "2904030"
  },
  {
    "text": "whether that code is actually more optimal than the previous version that we had we can control that canary",
    "start": "2904030",
    "end": "2911170"
  },
  {
    "text": "deployment manually promoting it to a production variant we can also see",
    "start": "2911170",
    "end": "2916930"
  },
  {
    "text": "directly within the console how many copies of our canary getting invoked in",
    "start": "2916930",
    "end": "2924730"
  },
  {
    "text": "comparison to copies of our original function here we've set 90 as our ratio so 90 it goes to our prior version 10%",
    "start": "2924730",
    "end": "2932920"
  },
  {
    "text": "new when you can validate that within the console we've got one point 1 to K hitting product on 113 in vacations",
    "start": "2932920",
    "end": "2939940"
  },
  {
    "text": "hitting our canary over the same period of time which just illustrates that 90/10 ratio that I've talked about that's visible directly within cloud",
    "start": "2939940",
    "end": "2946420"
  },
  {
    "text": "watch ok so now we're talking about do this pretty quickly to nine out of 10",
    "start": "2946420",
    "end": "2952270"
  },
  {
    "text": "now we're talking about enterprise features so a lot of what I've talked about is high value for application",
    "start": "2952270",
    "end": "2959500"
  },
  {
    "text": "developers that are you modern tooling very content familiar and comfortable with CIC D approaches want",
    "start": "2959500",
    "end": "2966250"
  },
  {
    "text": "to have a really high degree of automation in their deployment workflows and want to strive towards having you",
    "start": "2966250",
    "end": "2972460"
  },
  {
    "text": "know of operations overhead to say things like automated rollback in the",
    "start": "2972460",
    "end": "2977620"
  },
  {
    "text": "event of error that really allows my developers to be more autonomous and to use tools to defend themselves from",
    "start": "2977620",
    "end": "2984070"
  },
  {
    "text": "issues right rather than having an opportunity the blame the developers can roll back in the event that functions",
    "start": "2984070",
    "end": "2990850"
  },
  {
    "text": "don't perform as expected the other side of this is features that are intended for enterprise users and",
    "start": "2990850",
    "end": "2998260"
  },
  {
    "text": "there's another category of stuff here that we can quickly talk about so dealing with legacy things things you",
    "start": "2998260",
    "end": "3004290"
  },
  {
    "text": "might want to do monitor concurrency limit concurrency hook up api's to VPC",
    "start": "3004290",
    "end": "3011610"
  },
  {
    "text": "based services and order in log function in vacations okay and there's a few",
    "start": "3011610",
    "end": "3016770"
  },
  {
    "text": "reasons that these are important again based on customer feedback so I",
    "start": "3016770",
    "end": "3022610"
  },
  {
    "text": "mentioned before that I would talk a little bit about valid reasons that you",
    "start": "3022610",
    "end": "3029190"
  },
  {
    "text": "might want to limit function concurrency there's a couple of reasons for that one of them is my back-end systems might",
    "start": "3029190",
    "end": "3035730"
  },
  {
    "text": "just not have the capacity to deal with the level of traffic that I'm seeing in a new service that I release you know if",
    "start": "3035730",
    "end": "3042570"
  },
  {
    "text": "I'm a legacy organization and I'm experimenting with opening up mobile",
    "start": "3042570",
    "end": "3047850"
  },
  {
    "text": "first channels for my customers to interact with my product or with my service or with my organization more",
    "start": "3047850",
    "end": "3052860"
  },
  {
    "text": "generally what sort of risks does that present how do i right size my legacy",
    "start": "3052860",
    "end": "3058350"
  },
  {
    "text": "infrastructure for this experimental new channel what if the experimental new channel is way more popular ient than I",
    "start": "3058350",
    "end": "3064200"
  },
  {
    "text": "anticipated that might degrade service quality for existing users it might",
    "start": "3064200",
    "end": "3071850"
  },
  {
    "text": "result in me breaching licensing obligations or terms",
    "start": "3071850",
    "end": "3078090"
  },
  {
    "text": "that I have what if I've got a database back-end which is licensed for a hundred concurrent connections but I've got a",
    "start": "3078090",
    "end": "3084930"
  },
  {
    "text": "mobile app which is heavily trafficked which is driving 10,000 concurrent connections how do i govern that how do",
    "start": "3084930",
    "end": "3091290"
  },
  {
    "text": "I control it so consequence of control is really important to these kinds of",
    "start": "3091290",
    "end": "3096490"
  },
  {
    "text": "use cases and there's a few things we've added here first of all we've added a visibility feature which is concurrency",
    "start": "3096490",
    "end": "3102849"
  },
  {
    "text": "metrics so I can see in a cloud watch console how many copies of a specific",
    "start": "3102849",
    "end": "3108220"
  },
  {
    "text": "function are running concurrently simple a valuable feature to enable me to assess of the basis of functions that I",
    "start": "3108220",
    "end": "3115660"
  },
  {
    "text": "have how is that distributed across different functions that might comprise my app what we had before this was that",
    "start": "3115660",
    "end": "3122440"
  },
  {
    "text": "simple limit of a hundred or a thousand but you couldn't actually book it that down and see that I had 59 coverage of",
    "start": "3122440",
    "end": "3127780"
  },
  {
    "text": "this 161 copies of this one and nine hundred copies of this one running concurrently it was just you've hit your limit and",
    "start": "3127780",
    "end": "3133960"
  },
  {
    "text": "that was the only visibility that you had into the metric so we've allowed you to see a level of detail below that and",
    "start": "3133960",
    "end": "3140430"
  },
  {
    "text": "moving beyond that we've also now allow you to establish concurrency limits per",
    "start": "3140430",
    "end": "3145869"
  },
  {
    "text": "individual function so each individual function that you've got defined you can specify a concurrency limit independent",
    "start": "3145869",
    "end": "3154180"
  },
  {
    "text": "of other functions that are running so say I've got some functions that interact with one of these back-end",
    "start": "3154180",
    "end": "3159220"
  },
  {
    "text": "databases I can pin that one 200 concurrent executions and not apply a",
    "start": "3159220",
    "end": "3165490"
  },
  {
    "text": "metric to any others allowing them to consume the rest of my capacity in whatever ratio they want or with me I've",
    "start": "3165490",
    "end": "3171339"
  },
  {
    "text": "got you know prod and test environment I can have 95 connections from my prod",
    "start": "3171339",
    "end": "3178180"
  },
  {
    "text": "environment 5 for tests and leave the rest of them unconstrained I can define",
    "start": "3178180",
    "end": "3183700"
  },
  {
    "text": "my own policy essentially enables me to limit concurrency to legacy systems it",
    "start": "3183700",
    "end": "3190089"
  },
  {
    "text": "allows me to do this protection model as well I just don't want to overwhelm a back-end system so that's also an",
    "start": "3190089",
    "end": "3195609"
  },
  {
    "text": "important feature I can use this to temporarily disable a function so I've got a function I want to take out of",
    "start": "3195609",
    "end": "3201250"
  },
  {
    "text": "service set the concurrency to zero and it will still be there in the account",
    "start": "3201250",
    "end": "3206410"
  },
  {
    "text": "I don't after deep provision name I can just prevent it from getting executed that's quite a useful feature as well",
    "start": "3206410",
    "end": "3212099"
  },
  {
    "text": "and then lastly I can develop functions with run away protection if I do have",
    "start": "3212099",
    "end": "3218829"
  },
  {
    "text": "functions that are recursive in nature maybe I've seen issues where I've had overruns for whatever reason not yet",
    "start": "3218829",
    "end": "3226000"
  },
  {
    "text": "being able to diagnose precisely what's causing I can just put a backstop there to prevent those symptoms from occurring",
    "start": "3226000",
    "end": "3232400"
  },
  {
    "text": "again whilst I work on the root cause and remove it my application is still functional but if I do have another",
    "start": "3232400",
    "end": "3237800"
  },
  {
    "text": "recurrence where my code misbehaves and I start to overrun my cost base I can constrain that and then almost lastly",
    "start": "3237800",
    "end": "3247090"
  },
  {
    "text": "VPC private links so and regional endpoints so this is providing access",
    "start": "3247090",
    "end": "3253550"
  },
  {
    "text": "for lambda functions to resources that",
    "start": "3253550",
    "end": "3259760"
  },
  {
    "text": "are within a V PC okay now we've had vc p s-- v pc support for lambda functions",
    "start": "3259760",
    "end": "3266359"
  },
  {
    "text": "for quite a while this is a useful feature for things like connecting lambda functions to relational databases",
    "start": "3266359",
    "end": "3272720"
  },
  {
    "text": "okay relational database is typically relying on secrets for authentication rather than cryptographic signatures so",
    "start": "3272720",
    "end": "3280490"
  },
  {
    "text": "they're weaker than the authentication and authorization model for them is weaker than the authentication and",
    "start": "3280490",
    "end": "3286850"
  },
  {
    "text": "authorization model like",
    "start": "3286850",
    "end": "3291130"
  },
  {
    "text": "for you've got shared secrets that are required for access to relational database endpoints and because those",
    "start": "3294010",
    "end": "3300940"
  },
  {
    "text": "secrets are difficult to automatically rotate okay you want to protect them and",
    "start": "3300940",
    "end": "3307240"
  },
  {
    "text": "this protection normally takes two forms storing the secrets in some kind of secret store where they're protected by",
    "start": "3307240",
    "end": "3312880"
  },
  {
    "text": "encryption of course okay and we have a feature for that inside lambda which I'll just touch upon briefly in a second and then secondly putting the database",
    "start": "3312880",
    "end": "3319480"
  },
  {
    "text": "endpoints themselves somewhere where there are additional layers of protection around them and those",
    "start": "3319480",
    "end": "3324640"
  },
  {
    "text": "additional layers of protection are typically private subnets within V pcs so they're on non internet root of all",
    "start": "3324640",
    "end": "3330760"
  },
  {
    "text": "addresses and then security groups that provide stateful traffic filtering for",
    "start": "3330760",
    "end": "3336340"
  },
  {
    "text": "connections to and from those private endpoints that are within those private subnets so in lambda there's a couple of",
    "start": "3336340",
    "end": "3343359"
  },
  {
    "text": "things here they're relevant the first is there is secrets handling within it WS lambda you can inject secrets into",
    "start": "3343359",
    "end": "3349510"
  },
  {
    "text": "lambda functions using environment variables you can encrypt those environment variables using a service we",
    "start": "3349510",
    "end": "3355390"
  },
  {
    "text": "have called kms which is the key management service that encrypts them with AES 256-bit encryption and then",
    "start": "3355390",
    "end": "3361090"
  },
  {
    "text": "there's an encryption helper that you can run within your lambda function that will decrypt the environment variables of function start up time this means",
    "start": "3361090",
    "end": "3367630"
  },
  {
    "text": "that your environment variables only head into your lambda function encrypted with AES 256-bit encryption so they're",
    "start": "3367630",
    "end": "3374619"
  },
  {
    "text": "encrypted in transit across our infrastructure okay and then secondly you can audit access to the wrapper keys",
    "start": "3374619",
    "end": "3381310"
  },
  {
    "text": "that are used to decrypt those environment variables within the function so it's a very strong encryption environment with visibility",
    "start": "3381310",
    "end": "3387790"
  },
  {
    "text": "of each decrypt operation available in order that's actually a really powerful feature and anybody that's using secrets",
    "start": "3387790",
    "end": "3394180"
  },
  {
    "text": "in lambda should use that approach it's so easy to do that you might as well just encrypt all of your environment variables and do that okay so that's one",
    "start": "3394180",
    "end": "3400480"
  },
  {
    "text": "thing then the second thing is when you establish lambda function inside of EPC it has a security group associated with",
    "start": "3400480",
    "end": "3407230"
  },
  {
    "text": "it okay so it uses the same access control mechanism as an ec2 instance the",
    "start": "3407230",
    "end": "3413890"
  },
  {
    "text": "database instances that you run inside your V PC can only be accessed by lambda functions that have the right security",
    "start": "3413890",
    "end": "3419500"
  },
  {
    "text": "group so you have stateful traffic filtering for access to your database endpoints as well so just like ec2",
    "start": "3419500",
    "end": "3426400"
  },
  {
    "text": "instances in that okay this is actually slightly different this is for bringing in other services",
    "start": "3426400",
    "end": "3432519"
  },
  {
    "text": "to your V PC in a secure way that might run outside the V PC and actually just",
    "start": "3432519",
    "end": "3438549"
  },
  {
    "text": "this week we announced a private link endpoint for kms so your key Management",
    "start": "3438549",
    "end": "3444130"
  },
  {
    "text": "Service endpoints the ones that are going to be used to decrypt for example",
    "start": "3444130",
    "end": "3449589"
  },
  {
    "text": "your database secrets using these wrapper keys they can actually be presented directly within your V PC so",
    "start": "3449589",
    "end": "3455259"
  },
  {
    "text": "the kms endpoint that you communicate with to do your decrypt operations or to get your keys that can be inside your V",
    "start": "3455259",
    "end": "3462249"
  },
  {
    "text": "PC in a private subnet as well so that traffic doesn't have to transit the public Internet either so there's lots",
    "start": "3462249",
    "end": "3468039"
  },
  {
    "text": "of capability to bring in services and actually anybody can establish one of",
    "start": "3468039",
    "end": "3474789"
  },
  {
    "text": "these V PC link endpoints so you can create this in one AWS account and then",
    "start": "3474789",
    "end": "3480489"
  },
  {
    "text": "you can privately present it inside of e PC in a second AWS account using one of",
    "start": "3480489",
    "end": "3487239"
  },
  {
    "text": "these V PC links which is part of our programmable network platform uses our network load balancer and allows you to",
    "start": "3487239",
    "end": "3493989"
  },
  {
    "text": "securely present endpoints inside v pcs between accounts actually very powerful",
    "start": "3493989",
    "end": "3499569"
  },
  {
    "text": "feature okay so there are lots of steps forward that we've taken to help customers to get their traffic off the",
    "start": "3499569",
    "end": "3506049"
  },
  {
    "text": "internet okay and the last thing to talk about is logging and auditing so very",
    "start": "3506049",
    "end": "3513759"
  },
  {
    "text": "important for enterprise customers that might have regulatory oversight a couple of things we've done here we've added",
    "start": "3513759",
    "end": "3519099"
  },
  {
    "text": "structured logging for the API gateway so you can see structured log messages",
    "start": "3519099",
    "end": "3524679"
  },
  {
    "text": "for API gateway requests and then secondly we've added cloud trail support for lambda functions so cloud trail is",
    "start": "3524679",
    "end": "3530889"
  },
  {
    "text": "our auditing service if you're not familiar with this it operates at the control plane within AWS so each time I",
    "start": "3530889",
    "end": "3538269"
  },
  {
    "text": "deploy a new lambda function or invoke a lambda function using our control plane endpoint then we can have a cloud trail",
    "start": "3538269",
    "end": "3546429"
  },
  {
    "text": "audit log entry appear okay which we can subsequently use for verification inspection forensics components",
    "start": "3546429",
    "end": "3553449"
  },
  {
    "text": "reporting one of the nice things about Cloud trail is you can store your Cloud trail logs in a different AWS account",
    "start": "3553449",
    "end": "3561100"
  },
  {
    "text": "okay with different permissions with the right only policy so you can use it for out of account logging and auditing",
    "start": "3561100",
    "end": "3566580"
  },
  {
    "text": "really really good for establishing a sort of Basti and control point for all",
    "start": "3566580",
    "end": "3572800"
  },
  {
    "text": "of your logging activity and keeping it outside of the black beautiful account",
    "start": "3572800",
    "end": "3578110"
  },
  {
    "text": "compromise okay so for those customers that need the highest levels of compliance that's a really really",
    "start": "3578110",
    "end": "3584170"
  },
  {
    "text": "important feature as well okay so just recapping things that we focused on here",
    "start": "3584170",
    "end": "3589270"
  },
  {
    "text": "in these enterprise use cases it's really trying to make AWS lambda and serverless",
    "start": "3589270",
    "end": "3594370"
  },
  {
    "text": "approaches more generally more suitable for developers that are working in",
    "start": "3594370",
    "end": "3600520"
  },
  {
    "text": "environments where most of the applications already exist we need to integrate with AWS lambda based",
    "start": "3600520",
    "end": "3606190"
  },
  {
    "text": "environments to help them take advantage of this new way of building apps or it's",
    "start": "3606190",
    "end": "3611320"
  },
  {
    "text": "for customers that have to meet specific compliance requirements in order to operate in certain markets like",
    "start": "3611320",
    "end": "3617620"
  },
  {
    "text": "regulated industries in payments farmer or the financial services for example okay so really trying to work to help",
    "start": "3617620",
    "end": "3623650"
  },
  {
    "text": "make AWS lambda more suitable for those use cases okay so that concludes session",
    "start": "3623650",
    "end": "3628810"
  },
  {
    "text": "1 which is a quick update on what's new with AWS lambda I'm going to turn it over to donor",
    "start": "3628810",
    "end": "3635490"
  }
]