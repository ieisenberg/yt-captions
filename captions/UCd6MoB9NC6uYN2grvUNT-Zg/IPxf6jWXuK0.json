[
  {
    "start": "0",
    "end": "20000"
  },
  {
    "text": "hello",
    "start": "2720",
    "end": "3760"
  },
  {
    "text": "in this video we'll walk you through the",
    "start": "3760",
    "end": "5520"
  },
  {
    "text": "various options available to host",
    "start": "5520",
    "end": "7919"
  },
  {
    "text": "dot net web application on amazon web",
    "start": "7919",
    "end": "10639"
  },
  {
    "text": "services",
    "start": "10639",
    "end": "11360"
  },
  {
    "text": "aws i'm gary singh and i'm a senior",
    "start": "11360",
    "end": "15200"
  },
  {
    "text": "solutions architect",
    "start": "15200",
    "end": "16560"
  },
  {
    "text": "at aws focused on microsoft workloads",
    "start": "16560",
    "end": "19920"
  },
  {
    "text": "we will start with a quick introduction",
    "start": "19920",
    "end": "21920"
  },
  {
    "start": "20000",
    "end": "46000"
  },
  {
    "text": "to talk about deploying.net applications",
    "start": "21920",
    "end": "24640"
  },
  {
    "text": "on aws followed by a quick look",
    "start": "24640",
    "end": "28080"
  },
  {
    "text": "at the application migration strategies",
    "start": "28080",
    "end": "30640"
  },
  {
    "text": "and where",
    "start": "30640",
    "end": "31279"
  },
  {
    "text": "net applications fit finally",
    "start": "31279",
    "end": "34800"
  },
  {
    "text": "we'll run through a decision tree that",
    "start": "34800",
    "end": "36880"
  },
  {
    "text": "will help you understand the different",
    "start": "36880",
    "end": "38640"
  },
  {
    "text": "options available to deploy net",
    "start": "38640",
    "end": "41440"
  },
  {
    "text": "application on aws",
    "start": "41440",
    "end": "44079"
  },
  {
    "text": "let's get started now developing and",
    "start": "44079",
    "end": "47760"
  },
  {
    "start": "46000",
    "end": "107000"
  },
  {
    "text": "deploying.net applications on aws",
    "start": "47760",
    "end": "50559"
  },
  {
    "text": "is a key activity to help organizations",
    "start": "50559",
    "end": "53520"
  },
  {
    "text": "achieve the scale",
    "start": "53520",
    "end": "54800"
  },
  {
    "text": "and agility offered by cloud computing",
    "start": "54800",
    "end": "58079"
  },
  {
    "text": "whether it's migrating legacy.net",
    "start": "58079",
    "end": "60320"
  },
  {
    "text": "framework applications",
    "start": "60320",
    "end": "62160"
  },
  {
    "text": "or creating modern microservices",
    "start": "62160",
    "end": "64878"
  },
  {
    "text": "using.net core",
    "start": "64879",
    "end": "66640"
  },
  {
    "text": "aws offers a wide range of end-to-end",
    "start": "66640",
    "end": "69680"
  },
  {
    "text": "services",
    "start": "69680",
    "end": "70720"
  },
  {
    "text": "tools and solutions for application",
    "start": "70720",
    "end": "73520"
  },
  {
    "text": "development deployment",
    "start": "73520",
    "end": "75119"
  },
  {
    "text": "and maintenance now let's talk about the",
    "start": "75119",
    "end": "78159"
  },
  {
    "text": "application migration strategies",
    "start": "78159",
    "end": "80720"
  },
  {
    "text": "organizations considering a migration",
    "start": "80720",
    "end": "82960"
  },
  {
    "text": "often debate the approach to get there",
    "start": "82960",
    "end": "85439"
  },
  {
    "text": "while there is no one size fit all",
    "start": "85439",
    "end": "87439"
  },
  {
    "text": "approach the focus should be on grouping",
    "start": "87439",
    "end": "90159"
  },
  {
    "text": "each of the it",
    "start": "90159",
    "end": "91680"
  },
  {
    "text": "portfolio applications into buckets",
    "start": "91680",
    "end": "94560"
  },
  {
    "text": "defined by one of the migration",
    "start": "94560",
    "end": "96240"
  },
  {
    "text": "strategies",
    "start": "96240",
    "end": "97200"
  },
  {
    "text": "outlined in this slide some of these",
    "start": "97200",
    "end": "100240"
  },
  {
    "text": "choices are clear",
    "start": "100240",
    "end": "101520"
  },
  {
    "text": "and easy to decide whereas some require",
    "start": "101520",
    "end": "104000"
  },
  {
    "text": "considering",
    "start": "104000",
    "end": "104640"
  },
  {
    "text": "organizational objectives and",
    "start": "104640",
    "end": "106159"
  },
  {
    "text": "constraints",
    "start": "106159",
    "end": "108079"
  },
  {
    "start": "107000",
    "end": "245000"
  },
  {
    "text": "in the context of.net application",
    "start": "108079",
    "end": "111439"
  },
  {
    "text": "we will look at three strategies that is",
    "start": "111439",
    "end": "113920"
  },
  {
    "text": "re-host",
    "start": "113920",
    "end": "114640"
  },
  {
    "text": "re-platform and refactor",
    "start": "114640",
    "end": "117680"
  },
  {
    "text": "first one is re-host also known as lift",
    "start": "117680",
    "end": "120479"
  },
  {
    "text": "and shift",
    "start": "120479",
    "end": "121439"
  },
  {
    "text": "in a large legacy migration scenario",
    "start": "121439",
    "end": "123759"
  },
  {
    "text": "where the organization is looking to",
    "start": "123759",
    "end": "125439"
  },
  {
    "text": "scale quickly",
    "start": "125439",
    "end": "126880"
  },
  {
    "text": "we find that the majority of",
    "start": "126880",
    "end": "128560"
  },
  {
    "text": "applications are rehosted",
    "start": "128560",
    "end": "130640"
  },
  {
    "text": "most rehosting can be automated with",
    "start": "130640",
    "end": "132800"
  },
  {
    "text": "tools such as",
    "start": "132800",
    "end": "134319"
  },
  {
    "text": "aws server migration service sms",
    "start": "134319",
    "end": "137599"
  },
  {
    "text": "although some customers prefer to do",
    "start": "137599",
    "end": "139360"
  },
  {
    "text": "this manually as they learn how to apply",
    "start": "139360",
    "end": "141360"
  },
  {
    "text": "their",
    "start": "141360",
    "end": "142000"
  },
  {
    "text": "legacy systems to the new cloud platform",
    "start": "142000",
    "end": "145680"
  },
  {
    "text": "it has also become evident that",
    "start": "145680",
    "end": "147520"
  },
  {
    "text": "applications are easier to optimize",
    "start": "147520",
    "end": "149920"
  },
  {
    "text": "or re-architect once they are already",
    "start": "149920",
    "end": "152640"
  },
  {
    "text": "running in the cloud",
    "start": "152640",
    "end": "154160"
  },
  {
    "text": "partially because your organization will",
    "start": "154160",
    "end": "156319"
  },
  {
    "text": "have developed",
    "start": "156319",
    "end": "157200"
  },
  {
    "text": "better skills to do so and partially",
    "start": "157200",
    "end": "160000"
  },
  {
    "text": "because the hard part",
    "start": "160000",
    "end": "161840"
  },
  {
    "text": "that is migrating the application data",
    "start": "161840",
    "end": "164160"
  },
  {
    "text": "and traffic",
    "start": "164160",
    "end": "165200"
  },
  {
    "text": "has already been accomplished the second",
    "start": "165200",
    "end": "168400"
  },
  {
    "text": "strategy we will look into is",
    "start": "168400",
    "end": "170080"
  },
  {
    "text": "re-platform",
    "start": "170080",
    "end": "171599"
  },
  {
    "text": "sometimes referred to as lift tinker and",
    "start": "171599",
    "end": "174400"
  },
  {
    "text": "shift",
    "start": "174400",
    "end": "175360"
  },
  {
    "text": "the re-platform strategy is similar to",
    "start": "175360",
    "end": "177440"
  },
  {
    "text": "re-hosting because the core",
    "start": "177440",
    "end": "178800"
  },
  {
    "text": "infrastructure of the application is not",
    "start": "178800",
    "end": "181040"
  },
  {
    "text": "changed",
    "start": "181040",
    "end": "181840"
  },
  {
    "text": "when they are re-platformed the biggest",
    "start": "181840",
    "end": "184239"
  },
  {
    "text": "difference is that when the re-platform",
    "start": "184239",
    "end": "186159"
  },
  {
    "text": "strategy is used",
    "start": "186159",
    "end": "187440"
  },
  {
    "text": "a few cloud optimizations may be made to",
    "start": "187440",
    "end": "190560"
  },
  {
    "text": "deliver a specific",
    "start": "190560",
    "end": "191920"
  },
  {
    "text": "tangible benefit such as migrating to a",
    "start": "191920",
    "end": "195440"
  },
  {
    "text": "database as a service offering like",
    "start": "195440",
    "end": "197840"
  },
  {
    "text": "amazon relational database service",
    "start": "197840",
    "end": "200239"
  },
  {
    "text": "amazon rds the last strategy we look",
    "start": "200239",
    "end": "204159"
  },
  {
    "text": "into is refactor",
    "start": "204159",
    "end": "206080"
  },
  {
    "text": "changing the way the application is",
    "start": "206080",
    "end": "207760"
  },
  {
    "text": "architected and developed",
    "start": "207760",
    "end": "209120"
  },
  {
    "text": "usually done by employing cloud native",
    "start": "209120",
    "end": "211120"
  },
  {
    "text": "features",
    "start": "211120",
    "end": "212400"
  },
  {
    "text": "typically this is driven by a strong",
    "start": "212400",
    "end": "214400"
  },
  {
    "text": "business need to add feature",
    "start": "214400",
    "end": "216480"
  },
  {
    "text": "scale or improve performance that would",
    "start": "216480",
    "end": "219519"
  },
  {
    "text": "otherwise be difficult to achieve in the",
    "start": "219519",
    "end": "221599"
  },
  {
    "text": "applications",
    "start": "221599",
    "end": "222799"
  },
  {
    "text": "existing environment if your",
    "start": "222799",
    "end": "225040"
  },
  {
    "text": "organization is looking to boost",
    "start": "225040",
    "end": "226799"
  },
  {
    "text": "agility or improve business continuity",
    "start": "226799",
    "end": "229519"
  },
  {
    "text": "it is worth pursuing",
    "start": "229519",
    "end": "231280"
  },
  {
    "text": "even though it is often the most",
    "start": "231280",
    "end": "233280"
  },
  {
    "text": "expensive solution",
    "start": "233280",
    "end": "235120"
  },
  {
    "text": "there should be a careful comparison of",
    "start": "235120",
    "end": "237200"
  },
  {
    "text": "the additional value",
    "start": "237200",
    "end": "238640"
  },
  {
    "text": "and effort before choosing whether an",
    "start": "238640",
    "end": "240720"
  },
  {
    "text": "application should go through a complete",
    "start": "240720",
    "end": "242480"
  },
  {
    "text": "refactoring",
    "start": "242480",
    "end": "243519"
  },
  {
    "text": "or not now let's move on to the decision",
    "start": "243519",
    "end": "246959"
  },
  {
    "start": "245000",
    "end": "310000"
  },
  {
    "text": "tree to help",
    "start": "246959",
    "end": "248159"
  },
  {
    "text": "uh migrate your dotted application to",
    "start": "248159",
    "end": "250319"
  },
  {
    "text": "aws",
    "start": "250319",
    "end": "251360"
  },
  {
    "text": "we will categorize the options to",
    "start": "251360",
    "end": "253120"
  },
  {
    "text": "migrate in three buckets",
    "start": "253120",
    "end": "254799"
  },
  {
    "text": "discussed in the previous slide the",
    "start": "254799",
    "end": "257440"
  },
  {
    "text": "first option is rehost",
    "start": "257440",
    "end": "258959"
  },
  {
    "text": "it is fairly a simple choice and easy to",
    "start": "258959",
    "end": "261280"
  },
  {
    "text": "decide",
    "start": "261280",
    "end": "262400"
  },
  {
    "text": "what we have here is two options to",
    "start": "262400",
    "end": "264320"
  },
  {
    "text": "migrate the.net application",
    "start": "264320",
    "end": "266960"
  },
  {
    "text": "to aws that is amazon ec2",
    "start": "266960",
    "end": "271120"
  },
  {
    "text": "and aws elastic bean stock service the",
    "start": "271120",
    "end": "274240"
  },
  {
    "text": "decision is very simple to make",
    "start": "274240",
    "end": "276240"
  },
  {
    "text": "if the migration target is going to be a",
    "start": "276240",
    "end": "278320"
  },
  {
    "text": "vm we need to decide between",
    "start": "278320",
    "end": "280639"
  },
  {
    "text": "aws managed or self-managed the",
    "start": "280639",
    "end": "283440"
  },
  {
    "text": "self-managed",
    "start": "283440",
    "end": "284320"
  },
  {
    "text": "amazon ec2 option gives you more control",
    "start": "284320",
    "end": "287040"
  },
  {
    "text": "on the environment",
    "start": "287040",
    "end": "288320"
  },
  {
    "text": "which leads to higher operational",
    "start": "288320",
    "end": "290160"
  },
  {
    "text": "overhead",
    "start": "290160",
    "end": "291440"
  },
  {
    "text": "in many cases you may not require full",
    "start": "291440",
    "end": "293680"
  },
  {
    "text": "control over the underlying",
    "start": "293680",
    "end": "294880"
  },
  {
    "text": "infrastructure",
    "start": "294880",
    "end": "296080"
  },
  {
    "text": "used for hosting an application and may",
    "start": "296080",
    "end": "298560"
  },
  {
    "text": "prefer a managed environment",
    "start": "298560",
    "end": "300479"
  },
  {
    "text": "this is where aws elastic bean stock",
    "start": "300479",
    "end": "303120"
  },
  {
    "text": "fits well",
    "start": "303120",
    "end": "304160"
  },
  {
    "text": "it allows you to focus on the",
    "start": "304160",
    "end": "305680"
  },
  {
    "text": "application and simply deploy",
    "start": "305680",
    "end": "307440"
  },
  {
    "text": "application updates when needed",
    "start": "307440",
    "end": "311360"
  },
  {
    "start": "310000",
    "end": "378000"
  },
  {
    "text": "let's jump on to the second option that",
    "start": "311360",
    "end": "312960"
  },
  {
    "text": "is re-platform",
    "start": "312960",
    "end": "314560"
  },
  {
    "text": "irrespective of the document",
    "start": "314560",
    "end": "316000"
  },
  {
    "text": "implementation in use that is",
    "start": "316000",
    "end": "318160"
  },
  {
    "text": "dotnet framework or dotnet core",
    "start": "318160",
    "end": "321199"
  },
  {
    "text": "we can migrate the application to",
    "start": "321199",
    "end": "323039"
  },
  {
    "text": "windows container",
    "start": "323039",
    "end": "324479"
  },
  {
    "text": "containers allow applications to be",
    "start": "324479",
    "end": "326400"
  },
  {
    "text": "bundled with their own libraries",
    "start": "326400",
    "end": "328320"
  },
  {
    "text": "and configuration files and then execute",
    "start": "328320",
    "end": "331759"
  },
  {
    "text": "in isolation on a single os kernel",
    "start": "331759",
    "end": "334479"
  },
  {
    "text": "bringing a number of benefits",
    "start": "334479",
    "end": "337120"
  },
  {
    "text": "the simple choice we need to make here",
    "start": "337120",
    "end": "338880"
  },
  {
    "text": "is to choosing the container",
    "start": "338880",
    "end": "340240"
  },
  {
    "text": "orchestration engine",
    "start": "340240",
    "end": "341759"
  },
  {
    "text": "if your organization has made an",
    "start": "341759",
    "end": "343600"
  },
  {
    "text": "investment into kubernetes",
    "start": "343600",
    "end": "345680"
  },
  {
    "text": "and would like to use that in amazon we",
    "start": "345680",
    "end": "348160"
  },
  {
    "text": "have",
    "start": "348160",
    "end": "348720"
  },
  {
    "text": "amazon elastic community service eks",
    "start": "348720",
    "end": "352479"
  },
  {
    "text": "to meet your needs however if you are",
    "start": "352479",
    "end": "355199"
  },
  {
    "text": "beginning your container journey",
    "start": "355199",
    "end": "356960"
  },
  {
    "text": "and is not willing to manage",
    "start": "356960",
    "end": "359199"
  },
  {
    "text": "orchestration engine yourself",
    "start": "359199",
    "end": "361360"
  },
  {
    "text": "amazon elastic container service ecs",
    "start": "361360",
    "end": "364479"
  },
  {
    "text": "is the way forward ecs is a highly",
    "start": "364479",
    "end": "367360"
  },
  {
    "text": "scalable",
    "start": "367360",
    "end": "368080"
  },
  {
    "text": "and high performance container",
    "start": "368080",
    "end": "369600"
  },
  {
    "text": "orchestration service",
    "start": "369600",
    "end": "371280"
  },
  {
    "text": "that has been natively developed in aws",
    "start": "371280",
    "end": "374319"
  },
  {
    "text": "and offers deep integration with other",
    "start": "374319",
    "end": "377039"
  },
  {
    "text": "aws services",
    "start": "377039",
    "end": "379520"
  },
  {
    "text": "the last and the final option is",
    "start": "379520",
    "end": "381199"
  },
  {
    "text": "refactor",
    "start": "381199",
    "end": "382720"
  },
  {
    "text": "if you are planning to re-architect your",
    "start": "382720",
    "end": "384560"
  },
  {
    "text": "application for example moving from",
    "start": "384560",
    "end": "386400"
  },
  {
    "text": "dotnet framework to.net core",
    "start": "386400",
    "end": "388800"
  },
  {
    "text": "and willing to run it on linux you get a",
    "start": "388800",
    "end": "391039"
  },
  {
    "text": "variety of options to migrate",
    "start": "391039",
    "end": "393759"
  },
  {
    "text": "if you don't see value in managing and",
    "start": "393759",
    "end": "395520"
  },
  {
    "text": "provisioning servers to host the",
    "start": "395520",
    "end": "396960"
  },
  {
    "text": "application",
    "start": "396960",
    "end": "398000"
  },
  {
    "text": "and would like to target serverless",
    "start": "398000",
    "end": "399759"
  },
  {
    "text": "functions aws lambda is the best fit",
    "start": "399759",
    "end": "403680"
  },
  {
    "text": "aws lambda provides a serverless",
    "start": "403680",
    "end": "405919"
  },
  {
    "text": "function as a service",
    "start": "405919",
    "end": "407520"
  },
  {
    "text": "model which automatically manages the",
    "start": "407520",
    "end": "410319"
  },
  {
    "text": "underlying computer resources for you",
    "start": "410319",
    "end": "413280"
  },
  {
    "text": "c-sharp code can be uploaded into a",
    "start": "413280",
    "end": "415520"
  },
  {
    "text": "lambda function",
    "start": "415520",
    "end": "416720"
  },
  {
    "text": "and everything else is handled by aws",
    "start": "416720",
    "end": "419440"
  },
  {
    "text": "lambda",
    "start": "419440",
    "end": "421360"
  },
  {
    "text": "if you prefer container over functions",
    "start": "421360",
    "end": "424080"
  },
  {
    "text": "and like to go serverless compute engine",
    "start": "424080",
    "end": "426960"
  },
  {
    "text": "aws farget checks all the boxes",
    "start": "426960",
    "end": "430560"
  },
  {
    "text": "however if you still need to manage the",
    "start": "430560",
    "end": "432880"
  },
  {
    "text": "compute",
    "start": "432880",
    "end": "433840"
  },
  {
    "text": "container images including the guest os",
    "start": "433840",
    "end": "436479"
  },
  {
    "text": "and any application dependencies",
    "start": "436479",
    "end": "438800"
  },
  {
    "text": "you can choose one of the container",
    "start": "438800",
    "end": "440319"
  },
  {
    "text": "services irrespective of the option you",
    "start": "440319",
    "end": "443039"
  },
  {
    "text": "pick",
    "start": "443039",
    "end": "443840"
  },
  {
    "text": "we offer eks for open source",
    "start": "443840",
    "end": "446000"
  },
  {
    "text": "orchestration engine",
    "start": "446000",
    "end": "447120"
  },
  {
    "text": "based on kubernetes and amazon native",
    "start": "447120",
    "end": "449919"
  },
  {
    "text": "container orchestration service",
    "start": "449919",
    "end": "451599"
  },
  {
    "text": "ecs now let's summarize the option",
    "start": "451599",
    "end": "455199"
  },
  {
    "text": "available to host",
    "start": "455199",
    "end": "456639"
  },
  {
    "text": "dot net web application on aws",
    "start": "456639",
    "end": "459919"
  },
  {
    "text": "and the deciding factors for each of",
    "start": "459919",
    "end": "461840"
  },
  {
    "text": "these options",
    "start": "461840",
    "end": "463599"
  },
  {
    "text": "amazon ec2 offers the most flexibility",
    "start": "463599",
    "end": "466240"
  },
  {
    "text": "to you",
    "start": "466240",
    "end": "466879"
  },
  {
    "text": "to manage your.net web application",
    "start": "466879",
    "end": "469199"
  },
  {
    "text": "environment",
    "start": "469199",
    "end": "470240"
  },
  {
    "text": "whereas aws elastic beanstalk offers",
    "start": "470240",
    "end": "473520"
  },
  {
    "text": "managed services to host your.net",
    "start": "473520",
    "end": "475360"
  },
  {
    "text": "application",
    "start": "475360",
    "end": "477120"
  },
  {
    "text": "for dotnet framework implementation on",
    "start": "477120",
    "end": "479440"
  },
  {
    "text": "windows container you can choose between",
    "start": "479440",
    "end": "482000"
  },
  {
    "text": "aws native orchestration engine ecs",
    "start": "482000",
    "end": "485759"
  },
  {
    "text": "or our kubernetes orchestration engine",
    "start": "485759",
    "end": "488639"
  },
  {
    "text": "eks",
    "start": "488639",
    "end": "490240"
  },
  {
    "text": "finally if you have application built",
    "start": "490240",
    "end": "492879"
  },
  {
    "text": "on.net core",
    "start": "492879",
    "end": "493919"
  },
  {
    "text": "implementation you have a choice of",
    "start": "493919",
    "end": "496319"
  },
  {
    "text": "running serverless functions",
    "start": "496319",
    "end": "497759"
  },
  {
    "text": "on aws lambda or in",
    "start": "497759",
    "end": "500800"
  },
  {
    "text": "linux or windows container running on",
    "start": "500800",
    "end": "503520"
  },
  {
    "text": "eks",
    "start": "503520",
    "end": "504319"
  },
  {
    "text": "and ecs for linux based containers we",
    "start": "504319",
    "end": "507840"
  },
  {
    "text": "offer fargate",
    "start": "507840",
    "end": "509039"
  },
  {
    "text": "our serverless compute engine for",
    "start": "509039",
    "end": "510879"
  },
  {
    "text": "container thank you",
    "start": "510879",
    "end": "520080"
  }
]