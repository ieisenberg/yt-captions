[
  {
    "start": "0",
    "end": "42000"
  },
  {
    "text": "hello everyone my name is Nathan Peck I work as a developer advocate at it'll be us and today I'm happy to be here for",
    "start": "890",
    "end": "7919"
  },
  {
    "text": "the container office hours and I'm going to be live building an application and",
    "start": "7919",
    "end": "13019"
  },
  {
    "text": "deploying it to a double yes so first of all let me start out with old introduction to what the application is",
    "start": "13019",
    "end": "18750"
  },
  {
    "text": "that we're going to be building and what we're gonna be building is a web application that takes a screenshot of a",
    "start": "18750",
    "end": "25680"
  },
  {
    "text": "web page and then returns back the URL of that screenshot so a couple different",
    "start": "25680",
    "end": "30720"
  },
  {
    "text": "components we have an API we'll be able to submit an API URL to a background",
    "start": "30720",
    "end": "36390"
  },
  {
    "text": "worker that will take a screenshot of a web page and that will return back the URL of that web page now this is",
    "start": "36390",
    "end": "43530"
  },
  {
    "start": "42000",
    "end": "188000"
  },
  {
    "text": "something that I've built a few different times over the years for different startups and it's turned out to be something that's very useful for a",
    "start": "43530",
    "end": "50039"
  },
  {
    "text": "lot of different use cases I want to show one example of what you can accomplish with an application like this",
    "start": "50039",
    "end": "56070"
  },
  {
    "text": "so I worked at this startup airtime and one of the things that they have as a",
    "start": "56070",
    "end": "62789"
  },
  {
    "text": "feature is a social media share page for",
    "start": "62789",
    "end": "68490"
  },
  {
    "text": "your user profile and if I go into the source code you'll see something called og image a stands for Open Graph image",
    "start": "68490",
    "end": "75810"
  },
  {
    "text": "and one of the one they asked from the product team when I was working on this",
    "start": "75810",
    "end": "81210"
  },
  {
    "text": "particular feature was that they wanted to have a robust share image for social media and you can see that it looks",
    "start": "81210",
    "end": "87930"
  },
  {
    "text": "something like this there's obviously a lot going on in that image but the",
    "start": "87930",
    "end": "93990"
  },
  {
    "text": "important thing about it is this had to be generated on the server side so whenever somebody shared this page on",
    "start": "93990",
    "end": "99090"
  },
  {
    "text": "social media we needed to have an image that would be embedded on their Twitter Facebook whatever a social media was",
    "start": "99090",
    "end": "105509"
  },
  {
    "text": "shared on that had the users profile name image different details like number",
    "start": "105509",
    "end": "111390"
  },
  {
    "text": "of friends and rooms here and this had to be dynamically generated by the server so there's a lot of different",
    "start": "111390",
    "end": "118290"
  },
  {
    "text": "ways that we could approach developing this I could have chosen to composite",
    "start": "118290",
    "end": "124110"
  },
  {
    "text": "and image myself on the fly but that's pretty complicated I mean you can see",
    "start": "124110",
    "end": "129239"
  },
  {
    "text": "that there are some gradients in there actually gradient on that text that says join me on air time is rounded corners",
    "start": "129239",
    "end": "135840"
  },
  {
    "text": "and stuff like that so it would be pretty challenging to develop a process that could draw this type of image on",
    "start": "135840",
    "end": "143040"
  },
  {
    "text": "the fly on the server but web browsers are very good at doing all of these all",
    "start": "143040",
    "end": "148410"
  },
  {
    "text": "these different things so I chose to implement this as an HTML template built",
    "start": "148410",
    "end": "153780"
  },
  {
    "text": "using HTML and CSS and use a headless web browser to take a screenshot of that",
    "start": "153780",
    "end": "159720"
  },
  {
    "text": "web page whenever any time we needed to generate this and so this gives you a lot of flexibility allows you to change up the design quickly and rerender all",
    "start": "159720",
    "end": "167040"
  },
  {
    "text": "these web pages to get updated images if the design or CSS changes for that HTML",
    "start": "167040",
    "end": "174209"
  },
  {
    "text": "snippet that generates this this image so if you ever run across the feature",
    "start": "174209",
    "end": "179280"
  },
  {
    "text": "that's similar to this that you need to develop something that needs to have a dynamically generated image this is a",
    "start": "179280",
    "end": "185910"
  },
  {
    "text": "good way to do it you can use a headless web browser so let me show the the architecture that we're gonna be",
    "start": "185910",
    "end": "192480"
  },
  {
    "start": "188000",
    "end": "268000"
  },
  {
    "text": "building to accomplish this type of workflow so the idea here is that users",
    "start": "192480",
    "end": "199799"
  },
  {
    "text": "who want to interact with the system can talk to a load balancer to submit a URL",
    "start": "199799",
    "end": "206010"
  },
  {
    "text": "that they would like rendered into an image and that URL is going to be submitted via the load balancer to a few",
    "start": "206010",
    "end": "213690"
  },
  {
    "text": "different API containers that are listening for those restful api requests",
    "start": "213690",
    "end": "220200"
  },
  {
    "text": "and they're gonna store that information into dynamodb they're also going to",
    "start": "220200",
    "end": "225840"
  },
  {
    "text": "submit the job - a job queue and it's in this case Amazon simple queue service on",
    "start": "225840",
    "end": "232380"
  },
  {
    "text": "the other end of the queue we're gonna have some workers a pool of workers which are grabbing jobs off of",
    "start": "232380",
    "end": "238440"
  },
  {
    "text": "the queue inside of each worker there's gonna be a headless web browser that renders that URL and then it stores the",
    "start": "238440",
    "end": "246390"
  },
  {
    "text": "results back into a screenshot bucket and Amazon s3 and then a user can make a",
    "start": "246390",
    "end": "252450"
  },
  {
    "text": "request to the Amazon s3 bucket to fetch that URL so in building this you can see",
    "start": "252450",
    "end": "261090"
  },
  {
    "text": "there's a lot of different components here this is a little bit more complicated than your than your average",
    "start": "261090",
    "end": "266360"
  },
  {
    "text": "HelloWorld application so we're going to need some tooling to help us build off",
    "start": "266360",
    "end": "272900"
  },
  {
    "start": "268000",
    "end": "406000"
  },
  {
    "text": "that and the tool and I'm going to be using today for this demo is a business",
    "start": "272900",
    "end": "278569"
  },
  {
    "text": "cloud development kit so Club development kit is a new SDK that we are",
    "start": "278569",
    "end": "284000"
  },
  {
    "text": "developing at ABS to enable advanced infrastructure as code capabilities for",
    "start": "284000",
    "end": "290599"
  },
  {
    "text": "your application without needing to learn how to write a bunch of low-level JSON or email documents you know there",
    "start": "290599",
    "end": "297229"
  },
  {
    "text": "are other instruction code providers out there but a lot of them right now they just function as a basic metadata",
    "start": "297229",
    "end": "305270"
  },
  {
    "text": "description of what you want deployed and then you submit that that plain metadata to service and increase the",
    "start": "305270",
    "end": "311690"
  },
  {
    "text": "resources but what if there was a way to write your instructors code using the language that you're familiar with in",
    "start": "311690",
    "end": "317990"
  },
  {
    "text": "this case Java Script is one of my favorite languages for writing code in and use a native SDK in your own",
    "start": "317990",
    "end": "325849"
  },
  {
    "text": "language that has your editor with all of its auto-completion all of us warning",
    "start": "325849",
    "end": "332990"
  },
  {
    "text": "is a stuff like that you're able to write the infiltration area code as if you were writing your own application",
    "start": "332990",
    "end": "338270"
  },
  {
    "text": "and in the same language in fact as your own application so this is what it with a cdk is designed to accomplish and I",
    "start": "338270",
    "end": "347569"
  },
  {
    "text": "want to introduce some of the concepts of CK before I dive into actually writing code for it so here you can see",
    "start": "347569",
    "end": "355219"
  },
  {
    "text": "the idea of behind cdk application is this made up of multiple stacks and inside of each stack is multiple",
    "start": "355219",
    "end": "363259"
  },
  {
    "text": "constructs and now do you behind a construct is it's an encapsulation of a particular database resource maybe it's",
    "start": "363259",
    "end": "370039"
  },
  {
    "text": "an s3 bucket or maybe it's a container a service or maybe it's a den a ODB table and all the best practices that are",
    "start": "370039",
    "end": "378139"
  },
  {
    "text": "associated with that particular resource so for example maybe a construct from",
    "start": "378139",
    "end": "384469"
  },
  {
    "text": "UCF service comes along with its own include I am roll its own auto scaling",
    "start": "384469",
    "end": "390650"
  },
  {
    "text": "rules that are automatically included s3 bucket would come with bucket policies for defining which items are",
    "start": "390650",
    "end": "398400"
  },
  {
    "text": "which items are public you get all of this for free along with your construct from cdk by just creating one construct",
    "start": "398400",
    "end": "406460"
  },
  {
    "text": "so let me start showing how this works once we get into the code so starting",
    "start": "406460",
    "end": "414180"
  },
  {
    "text": "with a fresh brand new file this is the best way to the start code GREEN field",
    "start": "414180",
    "end": "419600"
  },
  {
    "text": "the first thing I'm going to do I'm gonna be writing this in JavaScript so you can use a variety of different",
    "start": "419600",
    "end": "425850"
  },
  {
    "text": "languages now that have cdk support javascript is just the one that i wrote everything else and this particular",
    "start": "425850",
    "end": "431639"
  },
  {
    "text": "application in and it's one that I've used for a long time so I'm pretty familiar with so the first thing I'm",
    "start": "431639",
    "end": "437400"
  },
  {
    "text": "going to do is I'm going to import the CD k package this is an open source",
    "start": "437400",
    "end": "443400"
  },
  {
    "text": "package is right there on on NPM so you can install it in your application just",
    "start": "443400",
    "end": "449669"
  },
  {
    "text": "like you would install any other package and it's very easy to require into your",
    "start": "449669",
    "end": "455970"
  },
  {
    "text": "particular application code now CK has two different top-level resource types",
    "start": "455970",
    "end": "462900"
  },
  {
    "text": "that I'm will be using to build my cdk application with the stack and the app and the way that I instantiate a stack",
    "start": "462900",
    "end": "470520"
  },
  {
    "text": "an app is they're just classes that are included as part of the core CD k",
    "start": "470520",
    "end": "475849"
  },
  {
    "text": "package so here I'm going to create a base resource of stack I'm gonna create",
    "start": "475849",
    "end": "482820"
  },
  {
    "text": "a API stack I'm going to create a worker stack and then to hold all of those",
    "start": "482820",
    "end": "490050"
  },
  {
    "text": "stacks I'm going to create an app stack which extends cdk app and then finally",
    "start": "490050",
    "end": "499979"
  },
  {
    "text": "in order to kick everything off in this particular process I'm gonna say new app",
    "start": "499979",
    "end": "506630"
  },
  {
    "text": "run so this is the basic skeleton it's an empty skeleton of a cdk",
    "start": "506630",
    "end": "513080"
  },
  {
    "text": "infrastructure as code application and right now it's it's totally empty there's nothing inside these stacks but",
    "start": "513080",
    "end": "519959"
  },
  {
    "text": "I've created three stacks one which is gonna hold the base resources of my particular application like an VPC a",
    "start": "519959",
    "end": "526400"
  },
  {
    "text": "cluster to run my application any shared tables s3 buckets stuff like",
    "start": "526400",
    "end": "533500"
  },
  {
    "text": "and then the API and worker stacks are respectively going to actually deploy",
    "start": "533500",
    "end": "538690"
  },
  {
    "text": "that API component in that worker component so let's see how I would use",
    "start": "538690",
    "end": "544720"
  },
  {
    "start": "541000",
    "end": "704000"
  },
  {
    "text": "this stack I'm going to try and deploy it right now even though it's completely empty it's not going to do anything",
    "start": "544720",
    "end": "552550"
  },
  {
    "text": "particularly impressive right now but I can use the first command okay so this",
    "start": "552550",
    "end": "571090"
  },
  {
    "text": "app contains no stacks yeah so obviously there's there's no there's no stacks in",
    "start": "571090",
    "end": "576790"
  },
  {
    "text": "this application yet and I need to add them to my app so the way I do that is I",
    "start": "576790",
    "end": "582160"
  },
  {
    "text": "utilize the constructor of the application class first thing I need to",
    "start": "582160",
    "end": "588490"
  },
  {
    "text": "do is I need to use super to pass the arguments down to the city code cdk code",
    "start": "588490",
    "end": "595860"
  },
  {
    "text": "internally for the application but then what I can do is I can create the sub",
    "start": "595860",
    "end": "602920"
  },
  {
    "text": "stacks that are going to part my application by just saying new based",
    "start": "602920",
    "end": "608770"
  },
  {
    "text": "resources and there's this particular pattern I'm about to type is something you see a lot in cdk code first",
    "start": "608770",
    "end": "615160"
  },
  {
    "text": "parameter is this that defines what the parent of the resources that I'm about to be creating the second parameter is",
    "start": "615160",
    "end": "622930"
  },
  {
    "text": "the name of the resource and then the third parameter is any properties that I may want pass down into the stack to",
    "start": "622930",
    "end": "630910"
  },
  {
    "text": "control what gets created as part of that stack so I'm going to take these three resources and I'm going to",
    "start": "630910",
    "end": "639360"
  },
  {
    "text": "instantiate these stacks as part of the of the application this tells CDK I have",
    "start": "639360",
    "end": "647050"
  },
  {
    "text": "an application that's made up of these three stacks with these names and I would like you to create them okay",
    "start": "647050",
    "end": "656960"
  },
  {
    "text": "I'm gonna get my spelling right there okay so now if I go back over here and I",
    "start": "656960",
    "end": "664010"
  },
  {
    "text": "run the command you'll see what cdk does",
    "start": "664010",
    "end": "670390"
  },
  {
    "text": "it's created three files that live inside a synth folder inside my my",
    "start": "670390",
    "end": "676130"
  },
  {
    "text": "project and if I go to these files you'll see that they start out pretty much empty but what this file is is a",
    "start": "676130",
    "end": "682850"
  },
  {
    "text": "CloudFormation template or the basic structure of one and right now all it has in it is metadata for these three",
    "start": "682850",
    "end": "690560"
  },
  {
    "text": "files all they have is a basic metadata that says this file was generated by CD K and that's because there's new",
    "start": "690560",
    "end": "696290"
  },
  {
    "text": "constructs inside these stacks yet well if I start adding some contracts these stacks they will be created and added to that",
    "start": "696290",
    "end": "703730"
  },
  {
    "text": "template so let's go back to that diagram again actually I can just can",
    "start": "703730",
    "end": "710779"
  },
  {
    "start": "704000",
    "end": "962000"
  },
  {
    "text": "open it right here in the end so top level a couple of resources where I need",
    "start": "710779",
    "end": "716410"
  },
  {
    "text": "let's let's create the base resources first the VPC that will wrap around all",
    "start": "716410",
    "end": "723230"
  },
  {
    "text": "the networking for this application in the ECS cluster that's going to provide",
    "start": "723230",
    "end": "729050"
  },
  {
    "text": "a boundary in this case it'll be powered by Fargate but we're gonna have a dedicated namespace inside ECS for the",
    "start": "729050",
    "end": "736880"
  },
  {
    "text": "cluster to can hold these resources so let me go back over here in order to",
    "start": "736880",
    "end": "743660"
  },
  {
    "text": "utilize constructs from CDK what I need to do is I need to include the library",
    "start": "743660",
    "end": "748700"
  },
  {
    "text": "that provides that those constructs and all these libraries are the packages",
    "start": "748700",
    "end": "754970"
  },
  {
    "text": "right there on NPM just like the core cdk package so I'm going to include two",
    "start": "754970",
    "end": "760630"
  },
  {
    "text": "packages ec2 package and ECS package and",
    "start": "760630",
    "end": "766370"
  },
  {
    "text": "the ec2 package I'm going to use to create a V PC for my application and",
    "start": "766370",
    "end": "775870"
  },
  {
    "text": "then the the other one I'm gonna use to create an ECS cluster so first of all a",
    "start": "775870",
    "end": "784690"
  },
  {
    "text": "network and then an ECS cluster",
    "start": "784690",
    "end": "790259"
  },
  {
    "text": "so I'm gonna III like to create these different constructs as sub properties",
    "start": "790259",
    "end": "795910"
  },
  {
    "text": "of the stack you don't have to if you want to keep one private but I like to use this and then say something like",
    "start": "795910",
    "end": "803470"
  },
  {
    "text": "this type V PC equals new ec2 V PC",
    "start": "803470",
    "end": "809350"
  },
  {
    "text": "Network and you'll notice as I'm typing this there's actually auto completion",
    "start": "809350",
    "end": "814480"
  },
  {
    "text": "going on in my code editor so this is one of my favorite things about cdk from",
    "start": "814480",
    "end": "819790"
  },
  {
    "text": "typing the same structure as code it gives me hints about what I should be typing for the different parameters",
    "start": "819790",
    "end": "826600"
  },
  {
    "text": "because this is native JavaScript language and the editor has capability",
    "start": "826600",
    "end": "834730"
  },
  {
    "text": "to know what those parameters are and what their types are and even give me hints as to what what I'm working on",
    "start": "834730",
    "end": "840459"
  },
  {
    "text": "so based on this I know that once again the first property is going to be this aka the parent stack that's going to be",
    "start": "840459",
    "end": "849040"
  },
  {
    "text": "holding this construct the second primer is gonna be the name of the constructs VPC and then third parameter is going to",
    "start": "849040",
    "end": "855129"
  },
  {
    "text": "be some properties so for the V PC there are a few properties I can specify I'm",
    "start": "855129",
    "end": "860860"
  },
  {
    "text": "going to choose to use the max AZ's property and lower it down to two and I'm going to say that I only want one",
    "start": "860860",
    "end": "868300"
  },
  {
    "text": "nat gateway so there's a couple properties i can pass it in the contract to control what gets created but when",
    "start": "868300",
    "end": "875079"
  },
  {
    "text": "this contract gets created by cdk it's going to go out there and create two AZ's it's gonna create one NAT gateway",
    "start": "875079",
    "end": "881019"
  },
  {
    "text": "and it's going to create the routing rules to hook the subnets of those availability zones up to the net gateway",
    "start": "881019",
    "end": "887579"
  },
  {
    "text": "automatically and I've able to do that all in just your four lines let me",
    "start": "887579",
    "end": "892930"
  },
  {
    "text": "create one more I want to create an ACS cluster and call it cluster you see a",
    "start": "892930",
    "end": "899529"
  },
  {
    "text": "step cluster once again this call it cluster and there's one property for the",
    "start": "899529",
    "end": "907149"
  },
  {
    "text": "cluster which is what VPC it needs to go into and I'm just going to pass in that same VPC that I just created",
    "start": "907149",
    "end": "914430"
  },
  {
    "text": "so what we have now is we have a basic structure for the base resources let's",
    "start": "914430",
    "end": "919809"
  },
  {
    "text": "go back to that CD case synth command again and see how the templates change once I",
    "start": "919809",
    "end": "927220"
  },
  {
    "text": "synthesized them into conformation again and go back to or is it based resources",
    "start": "927220",
    "end": "933970"
  },
  {
    "text": "okay Wow yeah so here you can see a lot of different resources that have been",
    "start": "933970",
    "end": "941020"
  },
  {
    "text": "created now based on just these few lines that I added to the code let's say",
    "start": "941020",
    "end": "947470"
  },
  {
    "text": "I added added like eight new lines but those expand it out into two hundred and",
    "start": "947470",
    "end": "954700"
  },
  {
    "text": "fifty lines of raw underlying primitive",
    "start": "954700",
    "end": "960100"
  },
  {
    "text": "resources to create the VPC in the networking world I say question the chat does the ec2 V PC network function",
    "start": "960100",
    "end": "966520"
  },
  {
    "start": "962000",
    "end": "1051000"
  },
  {
    "text": "create one V PC with public and private subnets or just public ones so in this case is creating V PC",
    "start": "966520",
    "end": "972670"
  },
  {
    "text": "with private and public subnets and the way I've had it configured is going to",
    "start": "972670",
    "end": "978040"
  },
  {
    "text": "create two subnets that are public and to their private cuz I specify to Easy's",
    "start": "978040",
    "end": "983290"
  },
  {
    "text": "but it's only going to create an accurate way in one of the public subnets and it's going to route the traffic from the other azs do that one",
    "start": "983290",
    "end": "990820"
  },
  {
    "text": "neck gateway reason why I did that is just to make this tact a little bit cheaper to reduce the cost in the setup",
    "start": "990820",
    "end": "997360"
  },
  {
    "text": "time so I would have to provision two neck gateways so let's move on to the",
    "start": "997360",
    "end": "1004050"
  },
  {
    "text": "next step which is I have the base base resources to find I want to add I want",
    "start": "1004050",
    "end": "1012840"
  },
  {
    "text": "to add some placeholder services to my stack I'm a big believer in using",
    "start": "1012840",
    "end": "1020160"
  },
  {
    "text": "placeholder services rather than trying to deploy my full production service",
    "start": "1020160",
    "end": "1025650"
  },
  {
    "text": "right away I find it's easier to start by deploying a basic skeleton service",
    "start": "1025650",
    "end": "1033390"
  },
  {
    "text": "that mimics what I want the production of service to do but doesn't actually",
    "start": "1033390",
    "end": "1040260"
  },
  {
    "text": "have the same complexity as the production of service so in this case for the API I've prepared a API",
    "start": "1040260",
    "end": "1046680"
  },
  {
    "text": "placeholder and let me show you what that what that code ends up looking like it's actually nothing but a tiny Express",
    "start": "1046680",
    "end": "1054090"
  },
  {
    "start": "1051000",
    "end": "1113000"
  },
  {
    "text": "server that has a single endpoint at full load balancer to talk to and it",
    "start": "1054090",
    "end": "1059310"
  },
  {
    "text": "just returns the string placeholder up and running and it listens on a port so I can take this particular placeholder",
    "start": "1059310",
    "end": "1065610"
  },
  {
    "text": "application and if I go into that folder API placeholder I can run it",
    "start": "1065610",
    "end": "1075860"
  },
  {
    "text": "oops I need to specify important and",
    "start": "1076190",
    "end": "1084840"
  },
  {
    "text": "what's this up and running I can send some requests to it let's make this",
    "start": "1084840",
    "end": "1091290"
  },
  {
    "text": "bigger okay I can I get a response back so that so this is very simple it's just",
    "start": "1091290",
    "end": "1096540"
  },
  {
    "text": "a few lines of JavaScript and it returns some logs here now the next thing is I",
    "start": "1096540",
    "end": "1102210"
  },
  {
    "text": "want to deploy this as a container because I do know that eventually the application is going to get more complicated and it's gonna have",
    "start": "1102210",
    "end": "1107730"
  },
  {
    "text": "different dependencies and need to run so let me show you how I do that I have a docker file and it's built and this",
    "start": "1107730",
    "end": "1114750"
  },
  {
    "start": "1113000",
    "end": "1540000"
  },
  {
    "text": "docker file is a multi-stage dr build you'll notice there's two sections to this file the first file is the build",
    "start": "1114750",
    "end": "1122130"
  },
  {
    "text": "stage and what it's doing is it's pulling an entire new Jazz 12 environment and it's running the NPM",
    "start": "1122130",
    "end": "1129030"
  },
  {
    "text": "install to get all the packages from the throwing the registry and then it's",
    "start": "1129030",
    "end": "1135840"
  },
  {
    "text": "taking the note slim environment and it's copying my code in there and running it so I can go back over here I",
    "start": "1135840",
    "end": "1143430"
  },
  {
    "text": "can do doctor build and just like that it's built my docker image pulled in my",
    "start": "1143430",
    "end": "1151320"
  },
  {
    "text": "dependencies in create an image and it's given me an image ID so now I can run",
    "start": "1151320",
    "end": "1157470"
  },
  {
    "text": "this image locally I want to run it with a dash D flag for detached I want to",
    "start": "1157470",
    "end": "1163320"
  },
  {
    "text": "specify a port that it's gonna listen on and substitute in my package or my",
    "start": "1163320",
    "end": "1172680"
  },
  {
    "text": "container ID and boom if I do dr. PS I see that have a container running in the",
    "start": "1172680",
    "end": "1178650"
  },
  {
    "text": "background and I see that it's mapping port 32 seven seven one on the host to",
    "start": "1178650",
    "end": "1184980"
  },
  {
    "text": "the container so I can say localhost 32",
    "start": "1184980",
    "end": "1190230"
  },
  {
    "text": "someone I can send some requests and once again I get placeholder up in her name so now my code is actually running",
    "start": "1190230",
    "end": "1195330"
  },
  {
    "text": "inside a placeholder container instead of directly on my laptop and I can also",
    "start": "1195330",
    "end": "1201480"
  },
  {
    "text": "say give me the logs for this container ID and yep I can see my see my logs for",
    "start": "1201480",
    "end": "1212340"
  },
  {
    "text": "this container so I'm just gonna kill this container real quick make sure it's dead yep okay now all these steps that I",
    "start": "1212340",
    "end": "1221250"
  },
  {
    "text": "just did in order to build the container locally I want to automate those I don't",
    "start": "1221250",
    "end": "1227250"
  },
  {
    "text": "want to have to do that by hand every time I release my application and fortunately cdk can handle that for me",
    "start": "1227250",
    "end": "1235910"
  },
  {
    "text": "so let me go back to my cdk application and the way I you do that is once again",
    "start": "1235910",
    "end": "1245820"
  },
  {
    "text": "I'm using the ECS construct now there's a very fantastic API construct that",
    "start": "1245820",
    "end": "1252510"
  },
  {
    "text": "works great for web applications restful api is anything that you may want to",
    "start": "1252510",
    "end": "1257640"
  },
  {
    "text": "deploy that has a web server and needs to answer a request from the public and it's called the load-balanced Fargate",
    "start": "1257640",
    "end": "1264030"
  },
  {
    "text": "service it's a top-level construct of the cdk you can see I'm gonna use the",
    "start": "1264030",
    "end": "1271530"
  },
  {
    "text": "autocomplete here a little balance far get service I'm creating it in this stack I'm gonna create it as the API and",
    "start": "1271530",
    "end": "1278850"
  },
  {
    "text": "have some parameters now the first parameter is the cluster that I wanted",
    "start": "1278850",
    "end": "1284070"
  },
  {
    "text": "deploy into now you might notice I",
    "start": "1284070",
    "end": "1289740"
  },
  {
    "text": "create Li closer and a different stack of the application I created the the closer right here in this base resources",
    "start": "1289740",
    "end": "1294870"
  },
  {
    "text": "stack but I want to reference that cluster inside of the API stack and fortunately there's a good way to do",
    "start": "1294870",
    "end": "1300840"
  },
  {
    "text": "this you know notice I created the cluster as a property of the base resources tag which means that it's",
    "start": "1300840",
    "end": "1307140"
  },
  {
    "text": "accessible up here at the app level and that means I can take the particular",
    "start": "1307140",
    "end": "1313350"
  },
  {
    "text": "property and I can pass it in as a property on my stack over here I can say this base resources that cost",
    "start": "1313350",
    "end": "1322900"
  },
  {
    "text": "I say question and chat and cloud formation it's not supported that you",
    "start": "1322900",
    "end": "1328870"
  },
  {
    "text": "have SSM parameters in the EECS task definition container you have to create a custom resource for that is it",
    "start": "1328870",
    "end": "1334120"
  },
  {
    "text": "possible to that with a CD key code unfortunately right now yeah you're right a CD K can't do anything that",
    "start": "1334120",
    "end": "1340600"
  },
  {
    "text": "CloudFormation can't do it does do some extra things as lambda functions but in",
    "start": "1340600",
    "end": "1347740"
  },
  {
    "text": "general CDKs is limited to what formation has support for fortunately",
    "start": "1347740",
    "end": "1353290"
  },
  {
    "text": "we're working on improving the CloudFormation support as quickly as possible so there",
    "start": "1353290",
    "end": "1359440"
  },
  {
    "text": "may be some gaps in feature between time we release a feature for ECS and when it becomes available in CD k but you know",
    "start": "1359440",
    "end": "1366850"
  },
  {
    "text": "we're working on those as quickly as possible so once again to recap what I did was I took my closer from the base",
    "start": "1366850",
    "end": "1372910"
  },
  {
    "text": "resources stack and I'm passing it in as a property to the API stack and once",
    "start": "1372910",
    "end": "1379120"
  },
  {
    "text": "it's passed in I can use that property now this is one of the coolest things that I really like about this is it will",
    "start": "1379120",
    "end": "1385510"
  },
  {
    "text": "automatically create an export in the one cloud formation template and automatically create an import and the other CloudFormation template to pass",
    "start": "1385510",
    "end": "1391870"
  },
  {
    "text": "this resource along another great helper that is part of the ECS construct is a",
    "start": "1391870",
    "end": "1399220"
  },
  {
    "text": "helper to build a container image so here I'm going to build an image from",
    "start": "1399220",
    "end": "1405280"
  },
  {
    "text": "asset and what that means is I want to take a local docker file that's on my",
    "start": "1405280",
    "end": "1410470"
  },
  {
    "text": "development laptop and I want to build it and push it to a device and then I'm",
    "start": "1410470",
    "end": "1417280"
  },
  {
    "text": "going to use that that image for my",
    "start": "1417280",
    "end": "1423670"
  },
  {
    "text": "application so here we go what am I missing here oops listen ah okay",
    "start": "1423670",
    "end": "1432280"
  },
  {
    "text": "so I so I'm building this image from the asset which is that docker file in that API placeholder folder that I showed",
    "start": "1432280",
    "end": "1438610"
  },
  {
    "text": "earlier for the service I wanted to launch two of them I want to specify how",
    "start": "1438610",
    "end": "1443890"
  },
  {
    "text": "much CPU is gonna take I'm going to specify 256 as the CPU that's roughly a",
    "start": "1443890",
    "end": "1449470"
  },
  {
    "text": "quarter of a core then memory I'm gonna specify a 512",
    "start": "1449470",
    "end": "1455440"
  },
  {
    "text": "this is one of the smallest Fargate containers that you can run and I'm also",
    "start": "1455440",
    "end": "1461139"
  },
  {
    "text": "gonna specify create logs so this is this is very useful because this high",
    "start": "1461139",
    "end": "1466210"
  },
  {
    "text": "level API construct now is complete and what's what it's going to do is it's",
    "start": "1466210",
    "end": "1471759"
  },
  {
    "text": "gonna build the image locally on my host it's going to put it into that cluster it's going to put to the cluster and",
    "start": "1471759",
    "end": "1476769"
  },
  {
    "text": "it's even going to automatically create a log group and cloud watch and pipe the logs to it and all that accomplished in",
    "start": "1476769",
    "end": "1483220"
  },
  {
    "text": "what may be less than 10 lines it's gonna oh yeah it's also gonna",
    "start": "1483220",
    "end": "1488500"
  },
  {
    "text": "automatically create a load balancer and direct traffic that goes to the load balancer to that service so let me just",
    "start": "1488500",
    "end": "1495820"
  },
  {
    "text": "double check I like to rerun since every once in a while to just check to make",
    "start": "1495820",
    "end": "1500950"
  },
  {
    "text": "sure I didn't have any errors in my in my scripts because it'll do some type",
    "start": "1500950",
    "end": "1508179"
  },
  {
    "text": "checks and everything on my JavaScript to make sure that I didn't make any",
    "start": "1508179",
    "end": "1513490"
  },
  {
    "text": "mistakes when I was using these constructs so here I can go in and let's look at this again okay yeah so now with",
    "start": "1513490",
    "end": "1519820"
  },
  {
    "text": "the API template it went from being just nothing but metadata to being a fully",
    "start": "1519820",
    "end": "1525149"
  },
  {
    "text": "fold-out detailed description of an ECS service with auto scaling I'll hooked up",
    "start": "1525149",
    "end": "1531850"
  },
  {
    "text": "load balancer security groups and their final output is going to be the URL of",
    "start": "1531850",
    "end": "1539409"
  },
  {
    "text": "that load balancer now so that covers a basic structure for the API and what",
    "start": "1539409",
    "end": "1545440"
  },
  {
    "start": "1540000",
    "end": "1570000"
  },
  {
    "text": "about the worker so I've also created a placeholder for the worker and Ryan 10",
    "start": "1545440",
    "end": "1551019"
  },
  {
    "text": "is for this worker to be listening to work in the background and picking it up off a cue automatically but that means",
    "start": "1551019",
    "end": "1556990"
  },
  {
    "text": "that there is no web server for this so instead what I have is I have a basic skeleton that does nothing but output",
    "start": "1556990",
    "end": "1565029"
  },
  {
    "text": "every two seconds checking for work okay so this will be a placeholder for that and I want to add this to my application",
    "start": "1565029",
    "end": "1572139"
  },
  {
    "text": "as well obviously I'm not going to use the load-balanced Fargate service constructs because there isn't a little",
    "start": "1572139",
    "end": "1577539"
  },
  {
    "text": "bouncer it needs to be connected to this instead I'm going to create a service",
    "start": "1577539",
    "end": "1583179"
  },
  {
    "text": "from scratch so this is going to show you that there are multiple different levels of",
    "start": "1583179",
    "end": "1588490"
  },
  {
    "text": "constructs that you can create I can use a very high level constructs like the",
    "start": "1588490",
    "end": "1594400"
  },
  {
    "text": "load balance per gate service they creates a lot of different resources or I can use some of the slightly lower",
    "start": "1594400",
    "end": "1599890"
  },
  {
    "text": "level ones that give me more raw access to the underlying configuration that's",
    "start": "1599890",
    "end": "1605320"
  },
  {
    "text": "available with ECS so here what I'm",
    "start": "1605320",
    "end": "1611770"
  },
  {
    "text": "doing is I'm creating a task definition and if you're familiar with ECS you'll know that task definition is just a",
    "start": "1611770",
    "end": "1618040"
  },
  {
    "text": "document which describes what your application is and how you would like it to run and so at the top level I'm just",
    "start": "1618040",
    "end": "1624850"
  },
  {
    "text": "saying my application is a container that needs 2048 CPU at k2 cores and it",
    "start": "1624850",
    "end": "1631570"
  },
  {
    "text": "needs four gigs of memory and to this I",
    "start": "1631570",
    "end": "1637690"
  },
  {
    "text": "want to add a container so I'm going to say this that worker definition and",
    "start": "1637690",
    "end": "1643540"
  },
  {
    "text": "there's a nice helper method on this particular contract called add container I'm gonna call that container worker and",
    "start": "1643540",
    "end": "1652320"
  },
  {
    "text": "once again there's an image I'm just gonna go ahead and copy this code from up here something lazy you know they",
    "start": "1652320",
    "end": "1658900"
  },
  {
    "text": "want to retype this and I'm gonna call this the worker placeholder and worker",
    "start": "1658900",
    "end": "1665620"
  },
  {
    "text": "image I say question the chat what's the nice placeholder history display you've got",
    "start": "1665620",
    "end": "1671740"
  },
  {
    "text": "going on in the terminal there look up oh my z z SH it's actually a shell yeah",
    "start": "1671740",
    "end": "1681160"
  },
  {
    "text": "and I have power line installed I have a power parallel the Menlo font for a",
    "start": "1681160",
    "end": "1686800"
  },
  {
    "text": "power line there's a few different configuration I have setup in there but I highly recommend",
    "start": "1686800",
    "end": "1693760"
  },
  {
    "text": "oh my Z Sh I don't know how you're supposed to see it but it's a fantastic",
    "start": "1693760",
    "end": "1699280"
  },
  {
    "text": "terminal experience okay so let me specify some more parameters for this",
    "start": "1699280",
    "end": "1705340"
  },
  {
    "text": "container that I'm creating CPU 2048 memory once again 4096 now you can see",
    "start": "1705340",
    "end": "1712840"
  },
  {
    "text": "that that says I'm using a lower-level construct here I do have to do a little bit more typing because that high-level",
    "start": "1712840",
    "end": "1719100"
  },
  {
    "text": "conch that load-balanced Fargate service was doing a lot for me automatically and I",
    "start": "1719100",
    "end": "1727290"
  },
  {
    "text": "don't I don't have the luxury when I'm using a lower-level construct of letting it do things like automatically I create",
    "start": "1727290",
    "end": "1733290"
  },
  {
    "text": "my logs for me but the flipside of that is it does give me more control over",
    "start": "1733290",
    "end": "1740910"
  },
  {
    "text": "what gets over like it's great because I have access to those raw underlying parameters yeah okay this error can be",
    "start": "1740910",
    "end": "1754080"
  },
  {
    "text": "resolved and so now I have a worker definition that has a container inside",
    "start": "1754080",
    "end": "1759240"
  },
  {
    "text": "of it and the last thing I want to do is I want to create a service out of it",
    "start": "1759240",
    "end": "1764510"
  },
  {
    "text": "question how does ECS container image from a set work I'm about to show that when I want to actually deploy this so",
    "start": "1764510",
    "end": "1770850"
  },
  {
    "text": "let me finish typing out this Fargate service and then I'll run the cdk deploy",
    "start": "1770850",
    "end": "1777480"
  },
  {
    "text": "you'll get to see exactly what it does but you're correct it's gonna build that container locally then it's gonna push",
    "start": "1777480",
    "end": "1783390"
  },
  {
    "text": "it up to ECR automatically and it's gonna automatically to pull the service referencing that you see our image so",
    "start": "1783390",
    "end": "1791370"
  },
  {
    "text": "once again I need to specify the cluster I want to run in count two and in this",
    "start": "1791370",
    "end": "1797490"
  },
  {
    "text": "case rather than to point the image directly I'm going to pull this task definition because the task definition",
    "start": "1797490",
    "end": "1803000"
  },
  {
    "text": "has the full definition of everything I want created okay let's so let's double check to make sure I didn't mess",
    "start": "1803000",
    "end": "1809010"
  },
  {
    "text": "anything up so make sure it's synthesized okay Oh yep I got an error here there's already contract with me",
    "start": "1809010",
    "end": "1814799"
  },
  {
    "text": "and worker okay yeah and I know what I did here um which one is it yep I added",
    "start": "1814799",
    "end": "1823169"
  },
  {
    "text": "a worker as the task definition and worker as a service so each of these",
    "start": "1823169",
    "end": "1828960"
  },
  {
    "text": "things inside of a stack does need to have its own name that's easily solved",
    "start": "1828960",
    "end": "1834090"
  },
  {
    "text": "though I can just call this a worker definition and the service will be worker make sure to make sure this works",
    "start": "1834090",
    "end": "1839900"
  },
  {
    "text": "okay yeah so everything's synthesized and if I go in to my stack I'm gonna see",
    "start": "1839900",
    "end": "1848210"
  },
  {
    "start": "1840000",
    "end": "2070000"
  },
  {
    "text": "that the worker is now also filled out with good almost 350 lines of CloudFormation",
    "start": "1848210",
    "end": "1857790"
  },
  {
    "text": "template so it's time to deploy it time to play this but before I deploy it I want to do one thing I want to do run",
    "start": "1857790",
    "end": "1864660"
  },
  {
    "text": "script if I want to see a preview of everything that's going to be deployed and so what I see here is it's detected",
    "start": "1864660",
    "end": "1874410"
  },
  {
    "text": "three stacks on my application as listing out all the resources are going to be created you can see in the base",
    "start": "1874410",
    "end": "1880140"
  },
  {
    "text": "resources stack all the PPC and networking related things and outputs",
    "start": "1880140",
    "end": "1885240"
  },
  {
    "text": "that are going to be added so that way I can reference those VPC networking things in a another stack I can see a",
    "start": "1885240",
    "end": "1891780"
  },
  {
    "text": "bunch of roles I am roles they're gonna be create automatically once again this is then my favorite thing is about cdk I don't",
    "start": "1891780",
    "end": "1897690"
  },
  {
    "text": "actually have to create all these iron rolls by hand I don't think anybody really likes going in there and messing",
    "start": "1897690",
    "end": "1903780"
  },
  {
    "text": "with I am rules directly so this saves me from that that challenge I see in my",
    "start": "1903780",
    "end": "1909600"
  },
  {
    "text": "second stack all the service related things and finally my last stack I see even more service writing things so",
    "start": "1909600",
    "end": "1917070"
  },
  {
    "text": "fingers crossed hope this works I'm gonna run the deploy now and we're gonna",
    "start": "1917070",
    "end": "1925770"
  },
  {
    "text": "see this start to deploy as it's deploying the base resources stack right now it starts out by creating cloud",
    "start": "1925770",
    "end": "1932550"
  },
  {
    "text": "formation change set just to make sure that there's nothing that's going wrong",
    "start": "1932550",
    "end": "1938040"
  },
  {
    "text": "if confirmation write reject the stack and then what it does is it starts to",
    "start": "1938040",
    "end": "1943050"
  },
  {
    "text": "point resources you see it gives me a live log as it creates things you can",
    "start": "1943050",
    "end": "1948360"
  },
  {
    "text": "see 0 of 24 so there's gonna be 24 resources in this base resources stack expanding out from just the two",
    "start": "1948360",
    "end": "1954750"
  },
  {
    "text": "constructs that I put in there and you can see it's starting to count 1 2 3 4 as it creates those different resources",
    "start": "1954750",
    "end": "1960570"
  },
  {
    "text": "and your the question in check how do",
    "start": "1960570",
    "end": "1965580"
  },
  {
    "text": "you get your terminal to show the colors over the ps1 I'm just using I term and",
    "start": "1965580",
    "end": "1972720"
  },
  {
    "text": "so it comes with built-in color support and then the the shell that I'm using",
    "start": "1972720",
    "end": "1979040"
  },
  {
    "text": "has a default color scheme I did customize a little bit because I like to have that dark background and the faded view but",
    "start": "1979040",
    "end": "1988670"
  },
  {
    "text": "yeah uh uh it was pretty easy Anna I don't think I had to customize too much",
    "start": "1988670",
    "end": "1994360"
  },
  {
    "text": "so Wallace is deploying let me go in to the console and let's see what's doing",
    "start": "1994360",
    "end": "2001930"
  },
  {
    "text": "underneath the covers you'll see that it created a couple cloud formations text",
    "start": "2001930",
    "end": "2007300"
  },
  {
    "text": "and it was right now as to pulling the base resources stack so this is really it's using cloud formation under the",
    "start": "2007300",
    "end": "2014230"
  },
  {
    "text": "covers I just don't have to touch the cloud formation by hand I ideally my my",
    "start": "2014230",
    "end": "2019600"
  },
  {
    "text": "philosophy when I'm using AWS is that I like to use the console as a read-only interface",
    "start": "2019600",
    "end": "2026940"
  },
  {
    "text": "ideally everything should be created by infrastructure as code and I'm just using the console to view what got",
    "start": "2026970",
    "end": "2033940"
  },
  {
    "text": "created and so cbk helps me out with that because rather than having to write a bunch of cloud formation by hand cdk",
    "start": "2033940",
    "end": "2041140"
  },
  {
    "text": "will let me write just a few lines and go ahead and create that automatically so while the while the placeholder",
    "start": "2041140",
    "end": "2048520"
  },
  {
    "text": "services are deploying let me introduce the real services in their code I deploy",
    "start": "2048520",
    "end": "2056620"
  },
  {
    "text": "the placeholder is just to make sure that I'm going to be able to deploy a service but let's look at some of the",
    "start": "2056620",
    "end": "2061960"
  },
  {
    "text": "more complex code that's actually going to be deployed once I'm ready for that",
    "start": "2061960",
    "end": "2068399"
  },
  {
    "text": "so let's start by looking at the the API and here's the code for that oops not",
    "start": "2068400",
    "end": "2075610"
  },
  {
    "start": "2070000",
    "end": "2260000"
  },
  {
    "text": "this one that's the placeholder it's this one so you can see that the real",
    "start": "2075610",
    "end": "2081040"
  },
  {
    "text": "API it actually isn't that much more complicated than the placeholder it's still only 73 lines the main thing is",
    "start": "2081040",
    "end": "2088240"
  },
  {
    "text": "that it has two new routes on it one of them is post a job and the other is get",
    "start": "2088240",
    "end": "2094600"
  },
  {
    "text": "a job and specify the job ID to get the",
    "start": "2094600",
    "end": "2100080"
  },
  {
    "text": "results of a job and you can see the inside this handler or what's doing is it's inserting an item into the database",
    "start": "2100080",
    "end": "2105700"
  },
  {
    "text": "and it's setting a message to a queue and then when I'm getting the job all",
    "start": "2105700",
    "end": "2111610"
  },
  {
    "text": "I'm really doing is I'm reading out of the database so this is very very simple on the other side",
    "start": "2111610",
    "end": "2117730"
  },
  {
    "text": "in the worker this is where the the magic really happens I'm using the",
    "start": "2117730",
    "end": "2124030"
  },
  {
    "text": "puppeteer package this is a great package on NPM that allows you to interact with headless Chrome using an",
    "start": "2124030",
    "end": "2131380"
  },
  {
    "text": "async await interface inside of your JavaScript and the other thing I'm using is I'm using a squish there's one of my",
    "start": "2131380",
    "end": "2137170"
  },
  {
    "text": "favorite packages for high-performance pulling on sq sq it can I've tested this",
    "start": "2137170",
    "end": "2144160"
  },
  {
    "text": "up to hundreds of messages per second but what it does is it gets all these messages off the queue and it kicks off",
    "start": "2144160",
    "end": "2149890"
  },
  {
    "text": "a job it updates the status in the database it launches a headless browser",
    "start": "2149890",
    "end": "2155670"
  },
  {
    "text": "it takes a screenshot it uploads that to s3 and then it up does a final update on",
    "start": "2155670",
    "end": "2162160"
  },
  {
    "text": "the status from a database and once again this worker it actually ends up only being hard 24 lines so this is a",
    "start": "2162160",
    "end": "2169869"
  },
  {
    "text": "fairly basic setup I don't have to write a lot to actually make this work some of",
    "start": "2169869",
    "end": "2176619"
  },
  {
    "text": "the more complex things are actually in the docker file for the worker code you",
    "start": "2176619",
    "end": "2182050"
  },
  {
    "text": "can actually see that I've had to install Google Chrome inside of the",
    "start": "2182050",
    "end": "2187960"
  },
  {
    "text": "docker file and we'll see in a little bit why actually it substitute this in what the complexity is on that in terms",
    "start": "2187960",
    "end": "2195250"
  },
  {
    "text": "of size and everything I'd saw a question if your database is specified with cdk how would you upgrade database",
    "start": "2195250",
    "end": "2201099"
  },
  {
    "text": "version or change instance size without destroying data so good question fortunately I don't have that problem",
    "start": "2201099",
    "end": "2207280"
  },
  {
    "text": "because I use dynamodb everything that I want to update with that I would DB can",
    "start": "2207280",
    "end": "2213400"
  },
  {
    "text": "be updated using the API and I'll actually show when I set this up now if",
    "start": "2213400",
    "end": "2219280"
  },
  {
    "text": "I was using Aurora there's also ways to do a zero downtime and like update on",
    "start": "2219280",
    "end": "2224319"
  },
  {
    "text": "that you'd have to look in the documentation for that but it shouldn't",
    "start": "2224319",
    "end": "2229900"
  },
  {
    "text": "be a problem either in general in general confirmation does do the right thing you may need to be very careful",
    "start": "2229900",
    "end": "2237700"
  },
  {
    "text": "with RDS Aurora is a little bit easier",
    "start": "2237700",
    "end": "2242880"
  },
  {
    "text": "okay so let me go back to my application code and look at his architecture",
    "start": "2242880",
    "end": "2249250"
  },
  {
    "text": "diagram again obviously some I'm gonna have to hang some new constructs to make this work I'm gonna",
    "start": "2249250",
    "end": "2254509"
  },
  {
    "text": "have to add that s3 bucket that sqs service in that demo DBQ so let me show how I'm gonna do that first I got add",
    "start": "2254509",
    "end": "2263269"
  },
  {
    "start": "2260000",
    "end": "2310000"
  },
  {
    "text": "import those packages so s3 sqs and and",
    "start": "2263269",
    "end": "2268429"
  },
  {
    "text": "I'm going to beat this three sqs oops",
    "start": "2268429",
    "end": "2275949"
  },
  {
    "text": "and then in DB and I'm gonna be creating",
    "start": "2275949",
    "end": "2281239"
  },
  {
    "text": "the resources in my base stack because I don't want to have to recreate those resources if I change something in my",
    "start": "2281239",
    "end": "2288229"
  },
  {
    "text": "application or if I want to even delete my application entirely I don't want my",
    "start": "2288229",
    "end": "2293890"
  },
  {
    "text": "database table to be deleted if I just because I deleted my service for example and what's more of this table for",
    "start": "2293890",
    "end": "2300859"
  },
  {
    "text": "example is going to be shared across multiple services so it makes sense to put it in one parent stack and then",
    "start": "2300859",
    "end": "2306949"
  },
  {
    "text": "reference that same table in the other two stacks so let me start by creating a bucket so s3 like it actually before I",
    "start": "2306949",
    "end": "2320719"
  },
  {
    "start": "2310000",
    "end": "2350000"
  },
  {
    "text": "start typing this let me go back you look at this to make sure it's still creating things yeah okay so here you",
    "start": "2320719",
    "end": "2329359"
  },
  {
    "text": "can see it's already it's currently working on deploying the API and you can see that cdk automatically built and",
    "start": "2329359",
    "end": "2336859"
  },
  {
    "text": "pushed my image and then it created cloud formation change set that referenced that image and now it's",
    "start": "2336859",
    "end": "2343069"
  },
  {
    "text": "currently deploying that service out",
    "start": "2343069",
    "end": "2348519"
  },
  {
    "text": "okay get back up here I'm gonna start adding some more resources so I'm",
    "start": "2348519",
    "end": "2354259"
  },
  {
    "start": "2350000",
    "end": "2445000"
  },
  {
    "text": "creating it in my parent stack and call it bucket and one more thing I want",
    "start": "2354259",
    "end": "2360349"
  },
  {
    "text": "public read access on this I want people to be able to access those screenshots",
    "start": "2360349",
    "end": "2368079"
  },
  {
    "text": "queue this one is easy I don't really",
    "start": "2368079",
    "end": "2374509"
  },
  {
    "text": "need any primers for that at all that's just gonna go ahead and create a queue for me with all the proper settings that",
    "start": "2374509",
    "end": "2381229"
  },
  {
    "text": "I need and then finally the table",
    "start": "2381229",
    "end": "2385719"
  },
  {
    "text": "this is this one gets a little bit more complicated because I have to pass in some properties that pertain to enabled",
    "start": "2391900",
    "end": "2399229"
  },
  {
    "text": "EB and how it works itself which is the key that I'm be using for looking stuff",
    "start": "2399229",
    "end": "2404630"
  },
  {
    "text": "up inside of the database unfortunately as I mentioned before there's some",
    "start": "2404630",
    "end": "2411319"
  },
  {
    "text": "excellent autocomplete in CK so it helps me to find the properties I need so I",
    "start": "2411319",
    "end": "2417109"
  },
  {
    "text": "want to create an ID property and I want it to be a string attribute type so",
    "start": "2417109",
    "end": "2422420"
  },
  {
    "text": "there we go and also wants to building those on this table I don't want to have",
    "start": "2422420",
    "end": "2427549"
  },
  {
    "text": "to worry about capacity provisioning at all so I'm going to be using the billing",
    "start": "2427549",
    "end": "2432559"
  },
  {
    "text": "mode which is pay per request nice ok so",
    "start": "2432559",
    "end": "2440359"
  },
  {
    "text": "so I added three new resources to the parent stack bucket queue and table I need to pass those resources in to my",
    "start": "2440359",
    "end": "2448309"
  },
  {
    "start": "2445000",
    "end": "2615000"
  },
  {
    "text": "actual application stack so let's do this table equals this based resources",
    "start": "2448309",
    "end": "2455749"
  },
  {
    "text": "table and you okay",
    "start": "2455749",
    "end": "2463609"
  },
  {
    "text": "and then the worker ease access to the table and queue as well but it also",
    "start": "2463609",
    "end": "2470779"
  },
  {
    "text": "needs access to the bucket okay so let",
    "start": "2470779",
    "end": "2482660"
  },
  {
    "text": "me switch out my code for the API with with the real API and the way I've",
    "start": "2482660",
    "end": "2487880"
  },
  {
    "text": "chosen to configure that my application is via environment variables so the",
    "start": "2487880",
    "end": "2495259"
  },
  {
    "text": "environment variables specify where my container can find there was resources that I've created so I'm gonna pass them",
    "start": "2495259",
    "end": "2501950"
  },
  {
    "text": "in by directly referencing a property of the constants truck that was created in",
    "start": "2501950",
    "end": "2509210"
  },
  {
    "text": "the other stack and the amazing thing about cdk is it automatically resolves this reference so it's going to locate",
    "start": "2509210",
    "end": "2517190"
  },
  {
    "text": "that other resource another stack import it and find that that attribute of the queue",
    "start": "2517190",
    "end": "2523620"
  },
  {
    "text": "URL and put it in there as an environment variable inside of my test definition when deploys that service I",
    "start": "2523620",
    "end": "2529940"
  },
  {
    "text": "can do the same thing for the dynamo DB tape them with the table name now the",
    "start": "2529940",
    "end": "2539100"
  },
  {
    "text": "one thing you might wonder is well how is my application going to have permission to actually talk to this",
    "start": "2539100",
    "end": "2545940"
  },
  {
    "text": "queue in this table well fortunately there are helpers for that so once again I can reference the queue and I can use",
    "start": "2545940",
    "end": "2554760"
  },
  {
    "text": "a method called grant send messages and I can specify the role that was",
    "start": "2554760",
    "end": "2561900"
  },
  {
    "text": "automatically created as part of my",
    "start": "2561900",
    "end": "2566029"
  },
  {
    "text": "service constructs and I can do the same thing for the table itself except as the",
    "start": "2567110",
    "end": "2574770"
  },
  {
    "text": "helper method for that is current read/write data and so what this is",
    "start": "2574770",
    "end": "2579780"
  },
  {
    "text": "going to do is this can automatically create the ion rules that will allow the API to send messages to the queue and",
    "start": "2579780",
    "end": "2586740"
  },
  {
    "text": "allow the API to read and write data to the table this is so much superior to manually",
    "start": "2586740",
    "end": "2593520"
  },
  {
    "text": "where any I am permissions I mean once I started using this I really I couldn't go back to handwriting",
    "start": "2593520",
    "end": "2599160"
  },
  {
    "text": "I am permissions because this automatically has the default limited",
    "start": "2599160",
    "end": "2604170"
  },
  {
    "text": "subset of permissions that are needed to send messages but not necessarily delete them off the queue but then I can use a",
    "start": "2604170",
    "end": "2610620"
  },
  {
    "text": "different method on the other side for the worker so once again I'm gonna",
    "start": "2610620",
    "end": "2615690"
  },
  {
    "start": "2615000",
    "end": "2725000"
  },
  {
    "text": "switch that code over from the placeholder to the real worker all right I'm going to add environment variables",
    "start": "2615690",
    "end": "2622830"
  },
  {
    "text": "so it can find the resources bucket",
    "start": "2622830",
    "end": "2633500"
  },
  {
    "text": "whoops I need to get that",
    "start": "2633800",
    "end": "2637820"
  },
  {
    "text": "they get those properties right cute",
    "start": "2639979",
    "end": "2645479"
  },
  {
    "text": "table okay it's looking good",
    "start": "2645479",
    "end": "2650849"
  },
  {
    "text": "still a little then we'll look look it a look it over and make sure I didn't mess",
    "start": "2650849",
    "end": "2656339"
  },
  {
    "text": "anything up there okay looks good and once again I have to add some permissions down here for for I um",
    "start": "2656339",
    "end": "2663450"
  },
  {
    "text": "permissions I'm going to start by copying this up here it's already typed that out I've changed it a little bit in",
    "start": "2663450",
    "end": "2672390"
  },
  {
    "text": "this case I was referencing a test definition was automatically created by a construct so now I'm using a test definition I",
    "start": "2672390",
    "end": "2680609"
  },
  {
    "text": "manually created as a manually created test definition construct so instead I'm just going to refer to that worker",
    "start": "2680609",
    "end": "2687329"
  },
  {
    "text": "definition directly and the to consumer",
    "start": "2687329",
    "end": "2692549"
  },
  {
    "text": "that's gonna be reading off the queue it doesn't need send message and these consume messages so here I've",
    "start": "2692549",
    "end": "2697979"
  },
  {
    "text": "automatically created minimal permissions the worker is gonna have permission to pull things off the queue but not push things on and then the API",
    "start": "2697979",
    "end": "2704880"
  },
  {
    "text": "is gonna be able to push things on the queue but not pull things off the queue and I need to add permission is to talk",
    "start": "2704880",
    "end": "2711150"
  },
  {
    "text": "to the bucket so grant readwrite on that",
    "start": "2711150",
    "end": "2716670"
  },
  {
    "text": "bucket and that should do it for",
    "start": "2716670",
    "end": "2722640"
  },
  {
    "text": "deploying the application let me switch back over here okay great so that my placeholders I've actually deployed now",
    "start": "2722640",
    "end": "2728819"
  },
  {
    "start": "2725000",
    "end": "2810000"
  },
  {
    "text": "and I have a URL for the application so if I go over here and load up that URL",
    "start": "2728819",
    "end": "2737029"
  },
  {
    "text": "hmm placeholder up and running I get a little message please hold her up and",
    "start": "2737029",
    "end": "2742200"
  },
  {
    "text": "running okay so what's a switch that over to the live application now first",
    "start": "2742200",
    "end": "2748109"
  },
  {
    "text": "things first I'm going to run the cdk",
    "start": "2748109",
    "end": "2754190"
  },
  {
    "text": "since communities to make sure there's no obvious mistakes whoops",
    "start": "2754190",
    "end": "2761150"
  },
  {
    "text": "and yep it looks like they they were able to synthesize a conformation",
    "start": "2762830",
    "end": "2768060"
  },
  {
    "text": "correctly I'm gonna run that diff command to make sure that the list of",
    "start": "2768060",
    "end": "2773340"
  },
  {
    "text": "resources are gonna be created match where I expect I love this command because I'm able to see at high level",
    "start": "2773340",
    "end": "2780570"
  },
  {
    "text": "all the new things are being added so I can see there's a bucket edie bucket policy a queue table I can see",
    "start": "2780570",
    "end": "2787110"
  },
  {
    "text": "exports being added and importantly I can also see these IM statement changes so i can see that my api is getting",
    "start": "2787110",
    "end": "2793830"
  },
  {
    "text": "these new permissions to talk to the queue to talk to the table and i can see that my environment variables are being",
    "start": "2793830",
    "end": "2800010"
  },
  {
    "text": "added to my tasks definition so all of this is it's is really beautifully done",
    "start": "2800010",
    "end": "2805290"
  },
  {
    "text": "I think it seemed a great job on making it very clear what's going to be added to your infrastructure and very easy to",
    "start": "2805290",
    "end": "2812970"
  },
  {
    "start": "2810000",
    "end": "3055000"
  },
  {
    "text": "interact with so let me kick off the deploy now all",
    "start": "2812970",
    "end": "2821130"
  },
  {
    "text": "right now while this deploys let me switch over the ECS console and show",
    "start": "2821130",
    "end": "2826740"
  },
  {
    "text": "what's going on inside that that console I can see my cluster and I can see some",
    "start": "2826740",
    "end": "2833940"
  },
  {
    "text": "running tests in there and once again I'd like to treat this as a read-only",
    "start": "2833940",
    "end": "2839190"
  },
  {
    "text": "interface it's not particularly easy to create tasks by hand in the console I",
    "start": "2839190",
    "end": "2846750"
  },
  {
    "text": "know a lot of people when they first start out with UCS they try to use the console to create resources but when is",
    "start": "2846750",
    "end": "2854010"
  },
  {
    "text": "that happening is there are a lot of settings involved with a container and you have to get all the ports alright",
    "start": "2854010",
    "end": "2859740"
  },
  {
    "text": "you have to get all the settings correct and you can easily end up miss configuring and going through a lot of",
    "start": "2859740",
    "end": "2864840"
  },
  {
    "text": "pain and frustration trying to iterate through and get all your settings correct",
    "start": "2864840",
    "end": "2870600"
  },
  {
    "text": "I find it's easier to use a higher-level framework such as cdk because it automatically sets all those things for",
    "start": "2870600",
    "end": "2877020"
  },
  {
    "text": "you and then I just use the console to view and verify that everything did",
    "start": "2877020",
    "end": "2883230"
  },
  {
    "text": "deploy as I expected and that I have in this case two of the API is running it",
    "start": "2883230",
    "end": "2888450"
  },
  {
    "text": "and two of the workers running these are actually the the placeholders though not the not the real service real service is",
    "start": "2888450",
    "end": "2895830"
  },
  {
    "text": "current deploying right now so you can see it added the new bucket antenna would t be",
    "start": "2895830",
    "end": "2901000"
  },
  {
    "text": "table to the Bay Area's versus stack and now it's building and pushing the API",
    "start": "2901000",
    "end": "2907170"
  },
  {
    "text": "and I want to show you a little trick once this starts deploying you can use",
    "start": "2907170",
    "end": "2913930"
  },
  {
    "text": "to speed up your UCS deploys a little bit when you are deploying them by",
    "start": "2913930",
    "end": "2922809"
  },
  {
    "text": "default ECS tries to be very very conservative about how switches over tasks but it is",
    "start": "2922809",
    "end": "2933130"
  },
  {
    "text": "possible to do it a little bit faster than the default settings so I'll show that once the new task comes up the",
    "start": "2933130",
    "end": "2940299"
  },
  {
    "text": "comment ECS was pain in the beginning was setting I but really happy now it's running soon and so that's that's good",
    "start": "2940299",
    "end": "2946630"
  },
  {
    "text": "to hear the what I like to tell people is you see us a lot of the frustration is",
    "start": "2946630",
    "end": "2953170"
  },
  {
    "text": "initial setup cost but initial setup costs are our one time ideally you have",
    "start": "2953170",
    "end": "2959680"
  },
  {
    "text": "a one-time setup cost to get your cluster up and running you get your application into the cluster but then",
    "start": "2959680",
    "end": "2965680"
  },
  {
    "text": "from that point on it's going to save you a lot of time and effort because",
    "start": "2965680",
    "end": "2970720"
  },
  {
    "text": "that's going to keep your application highly available it's going to keep moving it around to newer instances like",
    "start": "2970720",
    "end": "2976839"
  },
  {
    "text": "the instance type gets removed from your cluster because you want to upgrade it'll automatically move to your next instance type there's so many benefits",
    "start": "2976839",
    "end": "2984700"
  },
  {
    "text": "of using ECS once it's setup and we are working on making that initial setup",
    "start": "2984700",
    "end": "2992579"
  },
  {
    "text": "period easier and one of the tools that were using to do that is the cdk tool",
    "start": "2992579",
    "end": "2997660"
  },
  {
    "text": "and i'm showing right now so definitely feel free to also reach out to the team",
    "start": "2997660",
    "end": "3003510"
  },
  {
    "text": "if you have any feedback on things that were you know more complicated than you felt it should be and then we could we",
    "start": "3003510",
    "end": "3009780"
  },
  {
    "text": "could be working on so currently it says update and progress on the ECS server so I'm going to show you a little trick to",
    "start": "3009780",
    "end": "3015390"
  },
  {
    "text": "speed this up a little bit so as I mentioned by default ECS wants to keep you with zero downtime",
    "start": "3015390",
    "end": "3022290"
  },
  {
    "text": "when your deploys so it keeps an older version of the container running in parallel with your newer version to make",
    "start": "3022290",
    "end": "3029070"
  },
  {
    "text": "sure that there's no loss of traffic but I'm gonna Yolo this because I don't",
    "start": "3029070",
    "end": "3035130"
  },
  {
    "text": "really I don't really care about this not really production traffic so I'm just gonna go ahead and stop the older",
    "start": "3035130",
    "end": "3041010"
  },
  {
    "text": "versions of the tasks and make sure they get terminated without actually waiting",
    "start": "3041010",
    "end": "3046980"
  },
  {
    "text": "for zero downtime and just leave the new ones running and so when it happens it's",
    "start": "3046980",
    "end": "3052590"
  },
  {
    "text": "going to cause that deployment to go a little bit faster and if I see where's",
    "start": "3052590",
    "end": "3063540"
  },
  {
    "start": "3055000",
    "end": "3210000"
  },
  {
    "text": "my URL for the yeah but I can go ahead and get it if I go to services you see -",
    "start": "3063540",
    "end": "3073530"
  },
  {
    "text": "I'm gonna hit the URL for my application again and show how this works",
    "start": "3073530",
    "end": "3080720"
  },
  {
    "text": "Willard balancers questioning out of",
    "start": "3080720",
    "end": "3086850"
  },
  {
    "text": "interest why aren't using Fargate I actually am using Fargate so a lot of",
    "start": "3086850",
    "end": "3091950"
  },
  {
    "text": "people when they see ECS and forget they get a little bit confused about the difference between the two so you actually currently cannot",
    "start": "3091950",
    "end": "3098970"
  },
  {
    "text": "actually use Fargate by itself without using ECS and the reason for that is",
    "start": "3098970",
    "end": "3106050"
  },
  {
    "text": "that ECS is the administration api that you used to say I would like to deploy",
    "start": "3106050",
    "end": "3112530"
  },
  {
    "text": "this far gate is the underlying hosting layer that actually runs the containers",
    "start": "3112530",
    "end": "3117990"
  },
  {
    "text": "themselves so what I'm doing is I'm using ECS to orchestrate the deployment and I'm using Fargate to actually run",
    "start": "3117990",
    "end": "3123960"
  },
  {
    "text": "the containers that are inside of the deployment so it's so you notice if I look into the code again I created a",
    "start": "3123960",
    "end": "3131810"
  },
  {
    "text": "load balanced far gate service and I created a far gate task definition and",
    "start": "3131810",
    "end": "3137700"
  },
  {
    "text": "so that was all I needed actually to you to switch from ec2 mode to far gate mode",
    "start": "3137700",
    "end": "3143670"
  },
  {
    "text": "and that's a that's how it worked okay so I I got load balancer address here",
    "start": "3143670",
    "end": "3151020"
  },
  {
    "text": "I'm able to hit that and I see that the message changed from placeholder up and running - up and running so I know that",
    "start": "3151020",
    "end": "3157380"
  },
  {
    "text": "that API is there and available now so let me switch to my",
    "start": "3157380",
    "end": "3163190"
  },
  {
    "text": "httpclient I like to use a paw I'm not sure if you're familiar with it but paw",
    "start": "3163190",
    "end": "3168240"
  },
  {
    "text": "httpclient it's a really nice slick interface that allows you to set up all your all your",
    "start": "3168240",
    "end": "3175800"
  },
  {
    "text": "requests and send the request to your application easily to make sure it works so I'm going to send a request to create",
    "start": "3175800",
    "end": "3182730"
  },
  {
    "text": "a job to render reddit calm and check",
    "start": "3182730",
    "end": "3188190"
  },
  {
    "text": "job so currently it says that the status was having an I can't make that any bigger unfortunately but the status says",
    "start": "3188190",
    "end": "3195240"
  },
  {
    "text": "that the job is submitted and that's because the worker is not done deploying",
    "start": "3195240",
    "end": "3200280"
  },
  {
    "text": "and if I switch back over here to the tab that's currently wearing cdk you can see that just finished building my",
    "start": "3200280",
    "end": "3206190"
  },
  {
    "text": "worker image and pushing it but if I go over to the console and I load up the",
    "start": "3206190",
    "end": "3213560"
  },
  {
    "start": "3210000",
    "end": "3600000"
  },
  {
    "text": "DynamoDB service look at the table that",
    "start": "3213560",
    "end": "3218730"
  },
  {
    "text": "I created earlier as per my based resources and look at the items in there I'm able to see that that that URL by",
    "start": "3218730",
    "end": "3226320"
  },
  {
    "text": "submitted is currently in the database with a status of submitted and as soon as my worker is up and running it's",
    "start": "3226320",
    "end": "3232260"
  },
  {
    "text": "going to grab that job and start working on it it's going to take a few more minutes because unfortunately the image",
    "start": "3232260",
    "end": "3239040"
  },
  {
    "text": "for the worker is quite large if I switch over to ECR you can see that the",
    "start": "3239040",
    "end": "3245070"
  },
  {
    "text": "worker image through the first placeholder was only 55 megabytes the",
    "start": "3245070",
    "end": "3251300"
  },
  {
    "text": "actual production worker that has Google Chrome headless on it is just over 600",
    "start": "3251300",
    "end": "3257310"
  },
  {
    "text": "megabytes so that's a beefy image it has a lot going on inside of it while I'm",
    "start": "3257310",
    "end": "3265230"
  },
  {
    "text": "waiting on that let me go back to the chat I see some some talk about Fargate",
    "start": "3265230",
    "end": "3271860"
  },
  {
    "text": "costs yeah we did we did lower the",
    "start": "3271860",
    "end": "3277020"
  },
  {
    "text": "prices on Fargate by up to 50% at the start of the year so according to some",
    "start": "3277020",
    "end": "3283470"
  },
  {
    "text": "of the the research that I've seen done Fargate it can actually be cheaper and",
    "start": "3283470",
    "end": "3291470"
  },
  {
    "text": "ec2 for the vast majority of workloads let me see if I can find this pricing if",
    "start": "3291470",
    "end": "3299470"
  },
  {
    "text": "context Chuck ten this is a really great article that somebody at truck ten made",
    "start": "3299470",
    "end": "3306370"
  },
  {
    "text": "about Fargate pricing and what they determined is that break even between",
    "start": "3306370",
    "end": "3313330"
  },
  {
    "text": "far gay and ec2 happens in the sixty to eighty percent reservation rate so what",
    "start": "3313330",
    "end": "3319300"
  },
  {
    "text": "this means is when you're running a cluster ec2 instances in order to get your money's worth out of them you have to keep them utilized you have to keep",
    "start": "3319300",
    "end": "3325900"
  },
  {
    "text": "that CPU busy and you have to keep that memory full of things so you have to run",
    "start": "3325900",
    "end": "3331810"
  },
  {
    "text": "a lot of applications on those ec2 instances and so if you're running an ec2 instance 24/7 and it's not being",
    "start": "3331810",
    "end": "3337930"
  },
  {
    "text": "utilized or essentially wasting money verse doesn't forget what that allows you to do is is launch a small container",
    "start": "3337930",
    "end": "3344140"
  },
  {
    "text": "that more accurately matches the size of your task and you don't pay for any of",
    "start": "3344140",
    "end": "3350470"
  },
  {
    "text": "that extra space on the ec2 instance that would otherwise be going to waste so their conclusion once they did the",
    "start": "3350470",
    "end": "3357670"
  },
  {
    "text": "cost analysis is that foreclosure is only fifty percent utilized you might actually see a ten to twenty percent cost reduction with our game so",
    "start": "3357670",
    "end": "3364900"
  },
  {
    "text": "definitely look into it I find that the vast majority of people who are running on ec2 especially smaller companies they",
    "start": "3364900",
    "end": "3373030"
  },
  {
    "text": "don't tend to get good utilization out of their ec2 instances because they don't have enough traffic to fully",
    "start": "3373030",
    "end": "3380410"
  },
  {
    "text": "utilize an ec2 instance and so for them in particular switching the Fargate would be a big cost savings because it",
    "start": "3380410",
    "end": "3386650"
  },
  {
    "text": "allows you to downsize the amount of resources you pay for versus the amount of resources they are actually using",
    "start": "3386650",
    "end": "3393120"
  },
  {
    "text": "okay Wow so while while I was chatting the worker or service is deployed and we can see",
    "start": "3393120",
    "end": "3398140"
  },
  {
    "text": "that according to the database it shouldn't the job is showing up it's done let me go into ECS and verify that",
    "start": "3398140",
    "end": "3406900"
  },
  {
    "text": "my tasks are running the right definition yep and there's only two of them so that means now I can now go to",
    "start": "3406900",
    "end": "3413320"
  },
  {
    "text": "my HTTP client I can submit a job to",
    "start": "3413320",
    "end": "3418690"
  },
  {
    "text": "take a screenshot of Reddit I can check okay it says the job is started I mean",
    "start": "3418690",
    "end": "3424060"
  },
  {
    "text": "keep going right it's a pretty big website so it takes a little time the I find the headless web browser",
    "start": "3424060",
    "end": "3429789"
  },
  {
    "text": "for small websites is done less than a second for some of the websites that like reddit they have more there we go",
    "start": "3429789",
    "end": "3438729"
  },
  {
    "text": "it took a screenshot of the right home page and that looks like that is indeed",
    "start": "3438729",
    "end": "3445650"
  },
  {
    "text": "reddit right there a nice big high-resolution screen shot of the current status of Reddit so yeah",
    "start": "3445650",
    "end": "3454539"
  },
  {
    "text": "everything is working the and the cool thing about this is it will",
    "start": "3454539",
    "end": "3459910"
  },
  {
    "text": "automatically scale so it will horizontally scale to increase the number of API workers and and the",
    "start": "3459910",
    "end": "3467799"
  },
  {
    "text": "background workers as needed in order for everything to work so I'm pretty",
    "start": "3467799",
    "end": "3474670"
  },
  {
    "text": "excited about this particular cdk workflow and how easy it is one things",
    "start": "3474670",
    "end": "3480309"
  },
  {
    "text": "I'm going to do is I'm going to go ahead and open source the code that I used for this demo application so that way you",
    "start": "3480309",
    "end": "3486279"
  },
  {
    "text": "guys can take a look at it as well please type the name of the ethan pack",
    "start": "3486279",
    "end": "3493979"
  },
  {
    "text": "its creation up service OOP and I'm",
    "start": "3493979",
    "end": "3501400"
  },
  {
    "text": "going to go ahead and make that public",
    "start": "3501400",
    "end": "3510009"
  },
  {
    "text": "for you okay all right so so you might",
    "start": "3510009",
    "end": "3517539"
  },
  {
    "text": "drop this into the chat github.com it's a Peck screenshot service give that",
    "start": "3517539",
    "end": "3527799"
  },
  {
    "text": "look that's the that's the raw code that I use for this particular application",
    "start": "3527799",
    "end": "3532839"
  },
  {
    "text": "you can take the cdk templates and deploy them yourself or you can just take the the ROC code",
    "start": "3532839",
    "end": "3539969"
  },
  {
    "text": "for the worker and API and test out deploying it with a different tool as",
    "start": "3539969",
    "end": "3546160"
  },
  {
    "text": "well I hope this has been a useful learning experience and feel free to reach out if you have any questions or",
    "start": "3546160",
    "end": "3552339"
  },
  {
    "text": "go ahead and ask them in the in the chat right now I see one question how do you envision the CI CD pipeline of the",
    "start": "3552339",
    "end": "3558849"
  },
  {
    "text": "applications with CDK so the city key is just a JavaScript",
    "start": "3558849",
    "end": "3564900"
  },
  {
    "text": "tool which runs on any machine that has no GS installed on it so for the CDI CD",
    "start": "3564900",
    "end": "3571990"
  },
  {
    "text": "pipeline of cdk I would set up probably a code build or circle CI or any any",
    "start": "3571990",
    "end": "3579250"
  },
  {
    "text": "other CI CD provider that has JavaScript and node.js support and I would run the",
    "start": "3579250",
    "end": "3584829"
  },
  {
    "text": "node.js code of the cdk on that machine so for for example if I was doing a",
    "start": "3584829",
    "end": "3592000"
  },
  {
    "text": "circle CI or code build I would just add to that repo a top-level file which said",
    "start": "3592000",
    "end": "3598980"
  },
  {
    "text": "for the build I would like you to run npm install because we have to run npm",
    "start": "3598980",
    "end": "3605289"
  },
  {
    "text": "install first to install these prerequisite packages that are used by c",
    "start": "3605289",
    "end": "3610720"
  },
  {
    "text": "became and then the next command would be to actually run this command from the",
    "start": "3610720",
    "end": "3618160"
  },
  {
    "text": "npm file the npm run script deploy which runs cdk deploy require approval never",
    "start": "3618160",
    "end": "3624700"
  },
  {
    "text": "never so that's what the CI TV server would be doing is it would literally be building the CloudFormation template on",
    "start": "3624700",
    "end": "3631000"
  },
  {
    "text": "the fly and deploying it to the Ava's",
    "start": "3631000",
    "end": "3637390"
  },
  {
    "text": "cloud formation once it ran that cdk deployment any",
    "start": "3637390",
    "end": "3643599"
  },
  {
    "text": "other questions before I sign off here",
    "start": "3643599",
    "end": "3648910"
  },
  {
    "text": "we give everybody a chance to ask if there's anything else you're curious about dcs containers or the ada based",
    "start": "3648910",
    "end": "3657549"
  },
  {
    "text": "cloud development kit all right well it",
    "start": "3657549",
    "end": "3665289"
  },
  {
    "text": "looks like I have answered everyone's questions then once again feel free to reach out to me on Twitter my Twitter is",
    "start": "3665289",
    "end": "3675059"
  },
  {
    "text": "Nathan Capek if you have any questions at any time and there's the there's a",
    "start": "3675059",
    "end": "3682869"
  },
  {
    "text": "link right there whoops doesn't like and I'm always answering",
    "start": "3682869",
    "end": "3688029"
  },
  {
    "text": "ECS questions cdk questions I also even answered no just questions sometimes",
    "start": "3688029",
    "end": "3693790"
  },
  {
    "text": "and enjoy your journey of building applications and deploying them on AWS",
    "start": "3693790",
    "end": "3699010"
  },
  {
    "text": "thanks a lot [Music]",
    "start": "3699010",
    "end": "3710270"
  },
  {
    "text": "you [Music]",
    "start": "3710270",
    "end": "3713790"
  }
]