[
  {
    "start": "0",
    "end": "71000"
  },
  {
    "text": "welcome to the video series on aws glue",
    "start": "560",
    "end": "3840"
  },
  {
    "text": "data brew",
    "start": "3840",
    "end": "5040"
  },
  {
    "text": "my name is srikant sopirala i'm a",
    "start": "5040",
    "end": "8000"
  },
  {
    "text": "principal analytics specialist solutions",
    "start": "8000",
    "end": "10639"
  },
  {
    "text": "architect with amazon web services",
    "start": "10639",
    "end": "14000"
  },
  {
    "text": "this is part two of the four part glue",
    "start": "14000",
    "end": "16960"
  },
  {
    "text": "data brew series",
    "start": "16960",
    "end": "19359"
  },
  {
    "text": "in part one we reviewed how to create",
    "start": "19359",
    "end": "22160"
  },
  {
    "text": "data sets connecting to various data",
    "start": "22160",
    "end": "24560"
  },
  {
    "text": "sources and profiling data using aws",
    "start": "24560",
    "end": "27519"
  },
  {
    "text": "glue data proof in this part we will",
    "start": "27519",
    "end": "30240"
  },
  {
    "text": "focus on cleaning data sets using blue",
    "start": "30240",
    "end": "33040"
  },
  {
    "text": "data proof",
    "start": "33040",
    "end": "34239"
  },
  {
    "text": "so what is aws glue data blue",
    "start": "34239",
    "end": "37760"
  },
  {
    "text": "data brew is a visual data preparation",
    "start": "37760",
    "end": "40879"
  },
  {
    "text": "tool that makes it easy for a data",
    "start": "40879",
    "end": "43520"
  },
  {
    "text": "analyst and data scientist to prepare",
    "start": "43520",
    "end": "46559"
  },
  {
    "text": "data with an interactive point and click",
    "start": "46559",
    "end": "50160"
  },
  {
    "text": "visual interface without writing a",
    "start": "50160",
    "end": "52239"
  },
  {
    "text": "single line of code",
    "start": "52239",
    "end": "54079"
  },
  {
    "text": "so with data brew you can easily",
    "start": "54079",
    "end": "56160"
  },
  {
    "text": "visualize clean normalized terabytes and",
    "start": "56160",
    "end": "59680"
  },
  {
    "text": "even petabytes of data directly from",
    "start": "59680",
    "end": "62160"
  },
  {
    "text": "your data lake data warehouse and",
    "start": "62160",
    "end": "64559"
  },
  {
    "text": "databases including amazon s3 amazon",
    "start": "64559",
    "end": "67920"
  },
  {
    "text": "redshift amazon aurora and amazon rds",
    "start": "67920",
    "end": "71520"
  },
  {
    "start": "71000",
    "end": "121000"
  },
  {
    "text": "with aws glue data brew you can profile",
    "start": "71520",
    "end": "74240"
  },
  {
    "text": "your data to understand data quality",
    "start": "74240",
    "end": "77360"
  },
  {
    "text": "clean and normalize the data with over",
    "start": "77360",
    "end": "79759"
  },
  {
    "text": "250 built-in functions without writing a",
    "start": "79759",
    "end": "82880"
  },
  {
    "text": "single line of code",
    "start": "82880",
    "end": "84880"
  },
  {
    "text": "it will also give you a data lineage on",
    "start": "84880",
    "end": "87840"
  },
  {
    "text": "where the data came from and how it",
    "start": "87840",
    "end": "90079"
  },
  {
    "text": "travels through various stages and",
    "start": "90079",
    "end": "92560"
  },
  {
    "text": "transformations",
    "start": "92560",
    "end": "94560"
  },
  {
    "text": "users can then save these cleaning and",
    "start": "94560",
    "end": "97119"
  },
  {
    "text": "normalization steps into a workflow",
    "start": "97119",
    "end": "99840"
  },
  {
    "text": "called the recipe and apply them",
    "start": "99840",
    "end": "102000"
  },
  {
    "text": "automatically to future incoming data",
    "start": "102000",
    "end": "104960"
  },
  {
    "text": "thereby operationalizing the data",
    "start": "104960",
    "end": "107680"
  },
  {
    "text": "preparation pipelines",
    "start": "107680",
    "end": "110880"
  },
  {
    "text": "aws glue data brew is a serverless and",
    "start": "110880",
    "end": "113840"
  },
  {
    "text": "fully managed service so customers do",
    "start": "113840",
    "end": "116479"
  },
  {
    "text": "not have to configure provision or",
    "start": "116479",
    "end": "119040"
  },
  {
    "text": "manage any compute resources",
    "start": "119040",
    "end": "122159"
  },
  {
    "start": "121000",
    "end": "163000"
  },
  {
    "text": "in this video we will primarily focus on",
    "start": "122159",
    "end": "125119"
  },
  {
    "text": "cleaning data sets and see how we can",
    "start": "125119",
    "end": "127439"
  },
  {
    "text": "accomplish that",
    "start": "127439",
    "end": "128800"
  },
  {
    "text": "using aws glue data",
    "start": "128800",
    "end": "131440"
  },
  {
    "text": "we will double click on imputing missing",
    "start": "131440",
    "end": "134160"
  },
  {
    "text": "values handling nulls merging different",
    "start": "134160",
    "end": "137280"
  },
  {
    "text": "columns removing special characters",
    "start": "137280",
    "end": "140080"
  },
  {
    "text": "replace data with various patterns and",
    "start": "140080",
    "end": "142720"
  },
  {
    "text": "applying filter transforms without",
    "start": "142720",
    "end": "144800"
  },
  {
    "text": "writing a single line of code",
    "start": "144800",
    "end": "147520"
  },
  {
    "text": "the data set we are using is a set of",
    "start": "147520",
    "end": "149920"
  },
  {
    "text": "three tables for an online pet store",
    "start": "149920",
    "end": "152720"
  },
  {
    "text": "which contains customers products and",
    "start": "152720",
    "end": "155200"
  },
  {
    "text": "sales date",
    "start": "155200",
    "end": "157840"
  },
  {
    "text": "now let's go to the aws glue data brew",
    "start": "157920",
    "end": "160319"
  },
  {
    "text": "console and look at how we can clean our",
    "start": "160319",
    "end": "162800"
  },
  {
    "text": "dataset as part of the first video in",
    "start": "162800",
    "end": "165280"
  },
  {
    "start": "163000",
    "end": "197000"
  },
  {
    "text": "this series we have already created a",
    "start": "165280",
    "end": "167680"
  },
  {
    "text": "customer's data set from a csv file that",
    "start": "167680",
    "end": "170959"
  },
  {
    "text": "is stored in the s3 bucket",
    "start": "170959",
    "end": "173840"
  },
  {
    "text": "so if we go to the",
    "start": "173840",
    "end": "176239"
  },
  {
    "text": "customer data sets we can see that there",
    "start": "176239",
    "end": "179120"
  },
  {
    "text": "is a customer data set that's already",
    "start": "179120",
    "end": "181440"
  },
  {
    "text": "created",
    "start": "181440",
    "end": "182800"
  },
  {
    "text": "you could see that the s3 location is is",
    "start": "182800",
    "end": "185680"
  },
  {
    "text": "coming from this bucket and then we can",
    "start": "185680",
    "end": "188480"
  },
  {
    "text": "see the dataset preview",
    "start": "188480",
    "end": "191440"
  },
  {
    "text": "we also created a project in part one of",
    "start": "191440",
    "end": "194640"
  },
  {
    "text": "the dataset",
    "start": "194640",
    "end": "196840"
  },
  {
    "text": "series a project is an interactive data",
    "start": "196840",
    "end": "200480"
  },
  {
    "start": "197000",
    "end": "381000"
  },
  {
    "text": "preparation workspace in data group",
    "start": "200480",
    "end": "203680"
  },
  {
    "text": "so a database project helps in managing",
    "start": "203680",
    "end": "206640"
  },
  {
    "text": "a collection of related items",
    "start": "206640",
    "end": "210879"
  },
  {
    "text": "like data",
    "start": "211120",
    "end": "212640"
  },
  {
    "text": "transformations and schedule processes",
    "start": "212640",
    "end": "216879"
  },
  {
    "text": "you can see that this is our we have",
    "start": "218000",
    "end": "220000"
  },
  {
    "text": "opened our project in this project you",
    "start": "220000",
    "end": "222319"
  },
  {
    "text": "can see on the top of the screen the",
    "start": "222319",
    "end": "225599"
  },
  {
    "text": "this is the all the different",
    "start": "225599",
    "end": "227280"
  },
  {
    "text": "transformations",
    "start": "227280",
    "end": "228879"
  },
  {
    "text": "and then the this is the data preview in",
    "start": "228879",
    "end": "231680"
  },
  {
    "text": "here we have two different views we have",
    "start": "231680",
    "end": "234000"
  },
  {
    "text": "a grid view and we have a schema view",
    "start": "234000",
    "end": "236640"
  },
  {
    "text": "which gives you information about the",
    "start": "236640",
    "end": "238720"
  },
  {
    "text": "columns and the statistics",
    "start": "238720",
    "end": "241519"
  },
  {
    "text": "missing data is predominant in all data",
    "start": "241519",
    "end": "244640"
  },
  {
    "text": "sets and can have a significant impact",
    "start": "244640",
    "end": "247680"
  },
  {
    "text": "on the analytics or ml models using the",
    "start": "247680",
    "end": "250799"
  },
  {
    "text": "data",
    "start": "250799",
    "end": "252480"
  },
  {
    "text": "missing values in data sets can skew or",
    "start": "252480",
    "end": "255599"
  },
  {
    "text": "bias the data and result in invalid",
    "start": "255599",
    "end": "258479"
  },
  {
    "text": "conclusions so handling missing values",
    "start": "258479",
    "end": "261600"
  },
  {
    "text": "is one of the most frequently used data",
    "start": "261600",
    "end": "264479"
  },
  {
    "text": "preparation steps",
    "start": "264479",
    "end": "266400"
  },
  {
    "text": "in data brew project you can get a quick",
    "start": "266400",
    "end": "268960"
  },
  {
    "text": "view of missing values in your sample",
    "start": "268960",
    "end": "271919"
  },
  {
    "text": "under the data quality in the schema",
    "start": "271919",
    "end": "274400"
  },
  {
    "text": "view and the column statistics",
    "start": "274400",
    "end": "277919"
  },
  {
    "text": "so for example we can take a look at our",
    "start": "277919",
    "end": "280639"
  },
  {
    "text": "column",
    "start": "280639",
    "end": "282080"
  },
  {
    "text": "we the gender you can see that there is",
    "start": "282080",
    "end": "284880"
  },
  {
    "text": "18 percent of missing values in this in",
    "start": "284880",
    "end": "287600"
  },
  {
    "text": "this call",
    "start": "287600",
    "end": "289199"
  },
  {
    "text": "so let's go back to the grid view",
    "start": "289199",
    "end": "292639"
  },
  {
    "text": "in here we can select the gender column",
    "start": "292639",
    "end": "297840"
  },
  {
    "text": "so for any data column you can choose",
    "start": "301520",
    "end": "303919"
  },
  {
    "text": "either remove the missing rows or fill",
    "start": "303919",
    "end": "306479"
  },
  {
    "text": "it with an empty string null last valid",
    "start": "306479",
    "end": "309600"
  },
  {
    "text": "value or the most frequent value or a",
    "start": "309600",
    "end": "312080"
  },
  {
    "text": "custom value",
    "start": "312080",
    "end": "313520"
  },
  {
    "text": "for numerical data columns you can also",
    "start": "313520",
    "end": "315919"
  },
  {
    "text": "fill missing values with numerical",
    "start": "315919",
    "end": "318240"
  },
  {
    "text": "aggregates of values like average and",
    "start": "318240",
    "end": "321440"
  },
  {
    "text": "mode and sum or median of values",
    "start": "321440",
    "end": "324880"
  },
  {
    "text": "so let's go here",
    "start": "324880",
    "end": "326880"
  },
  {
    "text": "and let's look at this this data",
    "start": "326880",
    "end": "330960"
  },
  {
    "text": "so let's select the gender",
    "start": "332400",
    "end": "335199"
  },
  {
    "text": "and let's look at the missing",
    "start": "335199",
    "end": "339759"
  },
  {
    "text": "on the on the top of the menu so you",
    "start": "339759",
    "end": "342400"
  },
  {
    "text": "have you could do you could remove the",
    "start": "342400",
    "end": "344400"
  },
  {
    "text": "missing rows we can fill with custom",
    "start": "344400",
    "end": "346720"
  },
  {
    "text": "values empty value",
    "start": "346720",
    "end": "348800"
  },
  {
    "text": "null",
    "start": "348800",
    "end": "349680"
  },
  {
    "text": "our most frequent values are the last",
    "start": "349680",
    "end": "352240"
  },
  {
    "text": "valid values",
    "start": "352240",
    "end": "353919"
  },
  {
    "text": "in this case let's remove the let's use",
    "start": "353919",
    "end": "356639"
  },
  {
    "text": "the remove missing rows",
    "start": "356639",
    "end": "359919"
  },
  {
    "text": "in here we are going to remove the",
    "start": "360160",
    "end": "362639"
  },
  {
    "text": "delete the rows",
    "start": "362639",
    "end": "364240"
  },
  {
    "text": "or remove the rows with missing values",
    "start": "364240",
    "end": "366800"
  },
  {
    "text": "and apply the transformer and let's",
    "start": "366800",
    "end": "369360"
  },
  {
    "text": "preview the changes",
    "start": "369360",
    "end": "372319"
  },
  {
    "text": "and then apply",
    "start": "374639",
    "end": "378039"
  },
  {
    "start": "381000",
    "end": "571000"
  },
  {
    "text": "so once we apply",
    "start": "382720",
    "end": "384400"
  },
  {
    "text": "you",
    "start": "384400",
    "end": "385280"
  },
  {
    "text": "these steps are created on the right",
    "start": "385280",
    "end": "387919"
  },
  {
    "text": "hand side of the screen",
    "start": "387919",
    "end": "390560"
  },
  {
    "text": "as a recipe",
    "start": "390560",
    "end": "393039"
  },
  {
    "text": "in data brew a recipe is a set of",
    "start": "393039",
    "end": "395520"
  },
  {
    "text": "instructions or steps for data that you",
    "start": "395520",
    "end": "398880"
  },
  {
    "text": "want data brew to act upon",
    "start": "398880",
    "end": "401280"
  },
  {
    "text": "a recipe can contain many steps and each",
    "start": "401280",
    "end": "404639"
  },
  {
    "text": "step can contain many actions",
    "start": "404639",
    "end": "407440"
  },
  {
    "text": "so what you can do is you can use the",
    "start": "407440",
    "end": "409840"
  },
  {
    "text": "transformation tools on the toolbar",
    "start": "409840",
    "end": "412960"
  },
  {
    "text": "and then to set up all the changes that",
    "start": "412960",
    "end": "415199"
  },
  {
    "text": "you want to make to your data",
    "start": "415199",
    "end": "417520"
  },
  {
    "text": "later when you're ready you can see the",
    "start": "417520",
    "end": "419680"
  },
  {
    "text": "finished product in the recipe and you",
    "start": "419680",
    "end": "422080"
  },
  {
    "text": "can assign this to a job",
    "start": "422080",
    "end": "424400"
  },
  {
    "text": "you can create a job",
    "start": "424400",
    "end": "426080"
  },
  {
    "text": "to the data brew and you can schedule it",
    "start": "426080",
    "end": "430080"
  },
  {
    "text": "now that you have seen how you can",
    "start": "432080",
    "end": "434240"
  },
  {
    "text": "impute missing values let's jump in and",
    "start": "434240",
    "end": "436960"
  },
  {
    "text": "see how we can handle nulls",
    "start": "436960",
    "end": "439919"
  },
  {
    "text": "just like handing handling missing",
    "start": "439919",
    "end": "442240"
  },
  {
    "text": "values we can also replace nulls with",
    "start": "442240",
    "end": "444880"
  },
  {
    "text": "custom value or remove records with",
    "start": "444880",
    "end": "447120"
  },
  {
    "text": "nulls",
    "start": "447120",
    "end": "448240"
  },
  {
    "text": "so let's look at the column",
    "start": "448240",
    "end": "450479"
  },
  {
    "text": "suffix",
    "start": "450479",
    "end": "452000"
  },
  {
    "text": "so in here you can you can",
    "start": "452000",
    "end": "454170"
  },
  {
    "text": "[Music]",
    "start": "454170",
    "end": "455440"
  },
  {
    "text": "look at the missing filling values you",
    "start": "455440",
    "end": "457840"
  },
  {
    "text": "can fill with empty values you can fill",
    "start": "457840",
    "end": "460400"
  },
  {
    "text": "with null you can fill with the most",
    "start": "460400",
    "end": "462479"
  },
  {
    "text": "frequent values or you can fill with a",
    "start": "462479",
    "end": "464479"
  },
  {
    "text": "custom value",
    "start": "464479",
    "end": "465919"
  },
  {
    "text": "so",
    "start": "465919",
    "end": "468160"
  },
  {
    "text": "we can just replace the null to be",
    "start": "471199",
    "end": "472960"
  },
  {
    "text": "something more meaningful if it helps in",
    "start": "472960",
    "end": "475599"
  },
  {
    "text": "preparing our data for further",
    "start": "475599",
    "end": "478000"
  },
  {
    "text": "processing",
    "start": "478000",
    "end": "479360"
  },
  {
    "text": "one of the most common data cleaning",
    "start": "479360",
    "end": "481919"
  },
  {
    "text": "step is merging columns to make sense of",
    "start": "481919",
    "end": "484960"
  },
  {
    "text": "the data or to get more context to the",
    "start": "484960",
    "end": "487840"
  },
  {
    "text": "data",
    "start": "487840",
    "end": "489759"
  },
  {
    "text": "in our data we have three columns prefix",
    "start": "489759",
    "end": "494879"
  },
  {
    "text": "first name and last name",
    "start": "496639",
    "end": "500720"
  },
  {
    "text": "so",
    "start": "501759",
    "end": "502879"
  },
  {
    "text": "we can",
    "start": "502879",
    "end": "504560"
  },
  {
    "text": "we are going to merge the prefix first",
    "start": "504560",
    "end": "507840"
  },
  {
    "text": "name and last name into a single column",
    "start": "507840",
    "end": "510639"
  },
  {
    "text": "so let's go to",
    "start": "510639",
    "end": "512320"
  },
  {
    "text": "uh on the top of the menu let's click on",
    "start": "512320",
    "end": "515279"
  },
  {
    "text": "merge",
    "start": "515279",
    "end": "517680"
  },
  {
    "text": "and then let's select",
    "start": "518479",
    "end": "521839"
  },
  {
    "text": "the columns prefix",
    "start": "524159",
    "end": "526880"
  },
  {
    "text": "first name",
    "start": "526880",
    "end": "528959"
  },
  {
    "text": "and the last name",
    "start": "528959",
    "end": "531120"
  },
  {
    "text": "is space as i enter a separator as a",
    "start": "531120",
    "end": "534399"
  },
  {
    "text": "space",
    "start": "534399",
    "end": "536800"
  },
  {
    "text": "and then type in the name of a new",
    "start": "537040",
    "end": "539279"
  },
  {
    "text": "column",
    "start": "539279",
    "end": "540160"
  },
  {
    "text": "let's call this name",
    "start": "540160",
    "end": "543600"
  },
  {
    "text": "and then let's go preview the changes",
    "start": "547360",
    "end": "551040"
  },
  {
    "text": "so as you can see what we have just done",
    "start": "553360",
    "end": "555760"
  },
  {
    "text": "is we have merged the prefix",
    "start": "555760",
    "end": "558720"
  },
  {
    "text": "first name and last name into a new",
    "start": "558720",
    "end": "561200"
  },
  {
    "text": "column name and let's go and apply this",
    "start": "561200",
    "end": "565120"
  },
  {
    "text": "step",
    "start": "565120",
    "end": "567440"
  },
  {
    "text": "so it can be part of the recipe",
    "start": "569040",
    "end": "572000"
  },
  {
    "start": "571000",
    "end": "711000"
  },
  {
    "text": "so now let's jump into the cleaning data",
    "start": "572000",
    "end": "575040"
  },
  {
    "text": "with replacing the patterns or text",
    "start": "575040",
    "end": "577839"
  },
  {
    "text": "values",
    "start": "577839",
    "end": "579279"
  },
  {
    "text": "data brew supports various replace",
    "start": "579279",
    "end": "581680"
  },
  {
    "text": "patterns like replace between delimiters",
    "start": "581680",
    "end": "585040"
  },
  {
    "text": "between positions and replace value",
    "start": "585040",
    "end": "588080"
  },
  {
    "text": "or",
    "start": "588080",
    "end": "588839"
  },
  {
    "text": "patterns let's remove some of these",
    "start": "588839",
    "end": "591200"
  },
  {
    "text": "special characters in the address column",
    "start": "591200",
    "end": "593680"
  },
  {
    "text": "and then replace the value so let's find",
    "start": "593680",
    "end": "597040"
  },
  {
    "text": "our address column",
    "start": "597040",
    "end": "600399"
  },
  {
    "text": "let's click on the ellipsis",
    "start": "602000",
    "end": "604959"
  },
  {
    "text": "go to clean",
    "start": "604959",
    "end": "607680"
  },
  {
    "text": "and click on special characters",
    "start": "609040",
    "end": "612800"
  },
  {
    "text": "we have some custom special characters",
    "start": "613680",
    "end": "615920"
  },
  {
    "text": "here",
    "start": "615920",
    "end": "616839"
  },
  {
    "text": "so we are going to enter the special",
    "start": "616839",
    "end": "620000"
  },
  {
    "text": "characters",
    "start": "620000",
    "end": "621519"
  },
  {
    "text": "that we want to remove from here",
    "start": "621519",
    "end": "625440"
  },
  {
    "text": "and then preview the changes",
    "start": "629200",
    "end": "633240"
  },
  {
    "text": "so as you can see the address previously",
    "start": "636640",
    "end": "640000"
  },
  {
    "text": "had the special characters",
    "start": "640000",
    "end": "642320"
  },
  {
    "text": "of the ampersand",
    "start": "642320",
    "end": "646040"
  },
  {
    "text": "in the new column the address we have",
    "start": "646079",
    "end": "648640"
  },
  {
    "text": "removed those special characters",
    "start": "648640",
    "end": "650880"
  },
  {
    "text": "and now let's apply that",
    "start": "650880",
    "end": "652959"
  },
  {
    "text": "to be part of the recipe",
    "start": "652959",
    "end": "656720"
  },
  {
    "text": "now we can also in the address column we",
    "start": "657839",
    "end": "660720"
  },
  {
    "text": "can also go ahead and replace",
    "start": "660720",
    "end": "665199"
  },
  {
    "text": "a certain pattern so let's go to clean",
    "start": "665360",
    "end": "668720"
  },
  {
    "text": "and the replace in we can replace",
    "start": "668720",
    "end": "671200"
  },
  {
    "text": "between delimiters between positions or",
    "start": "671200",
    "end": "673920"
  },
  {
    "text": "replace value or a pattern so let's pick",
    "start": "673920",
    "end": "676560"
  },
  {
    "text": "a replace value or a pattern",
    "start": "676560",
    "end": "680160"
  },
  {
    "text": "and then",
    "start": "681279",
    "end": "682160"
  },
  {
    "text": "we we're going to pick the replacing",
    "start": "682160",
    "end": "684399"
  },
  {
    "text": "value or a pattern and then enter a",
    "start": "684399",
    "end": "686720"
  },
  {
    "text": "custom value which is going to be a",
    "start": "686720",
    "end": "688399"
  },
  {
    "text": "semicolon",
    "start": "688399",
    "end": "690079"
  },
  {
    "text": "and we will replace that with a space",
    "start": "690079",
    "end": "694800"
  },
  {
    "text": "let's preview the changes",
    "start": "696160",
    "end": "699959"
  },
  {
    "text": "as you can see we've replaced the",
    "start": "703360",
    "end": "705360"
  },
  {
    "text": "semicolon with",
    "start": "705360",
    "end": "707120"
  },
  {
    "text": "with the space in in the address",
    "start": "707120",
    "end": "711440"
  },
  {
    "start": "711000",
    "end": "801000"
  },
  {
    "text": "the other transformation that is more",
    "start": "712160",
    "end": "714160"
  },
  {
    "text": "commonly used while cleaning data sets",
    "start": "714160",
    "end": "716880"
  },
  {
    "text": "is filter transforms",
    "start": "716880",
    "end": "719120"
  },
  {
    "text": "you can filter values in a data set as a",
    "start": "719120",
    "end": "722079"
  },
  {
    "text": "transformation or as a filter the data",
    "start": "722079",
    "end": "724880"
  },
  {
    "text": "in your own grid view if you select",
    "start": "724880",
    "end": "727279"
  },
  {
    "text": "apply as a step the filter is added to",
    "start": "727279",
    "end": "729760"
  },
  {
    "text": "your recipe as a step",
    "start": "729760",
    "end": "732399"
  },
  {
    "text": "so let's go",
    "start": "732399",
    "end": "734959"
  },
  {
    "text": "here",
    "start": "734959",
    "end": "737200"
  },
  {
    "text": "let's go to the gender",
    "start": "737839",
    "end": "740000"
  },
  {
    "text": "column and then click on the column",
    "start": "740000",
    "end": "742839"
  },
  {
    "text": "filter",
    "start": "742839",
    "end": "744399"
  },
  {
    "text": "let's select",
    "start": "744399",
    "end": "747120"
  },
  {
    "text": "all the males about 989",
    "start": "747600",
    "end": "750480"
  },
  {
    "text": "and then you can apply as a filter as a",
    "start": "750480",
    "end": "752720"
  },
  {
    "text": "condition or we can add to a to a recipe",
    "start": "752720",
    "end": "756240"
  },
  {
    "text": "let's apply a filter as a condition",
    "start": "756240",
    "end": "760079"
  },
  {
    "text": "so as you can see this is applied as a",
    "start": "760079",
    "end": "762480"
  },
  {
    "text": "filter as a condition here and then you",
    "start": "762480",
    "end": "765440"
  },
  {
    "text": "can then apply a transform and add that",
    "start": "765440",
    "end": "768000"
  },
  {
    "text": "to the next step",
    "start": "768000",
    "end": "771560"
  },
  {
    "text": "for example you can in in the applied",
    "start": "772000",
    "end": "774720"
  },
  {
    "text": "condition you can go to the name",
    "start": "774720",
    "end": "778639"
  },
  {
    "text": "and",
    "start": "778639",
    "end": "780880"
  },
  {
    "text": "format",
    "start": "781040",
    "end": "783680"
  },
  {
    "text": "and then change that to a capital case",
    "start": "784000",
    "end": "787519"
  },
  {
    "text": "you can preview the changes",
    "start": "787519",
    "end": "790880"
  },
  {
    "text": "so we have mr paul shelton here we have",
    "start": "792320",
    "end": "796240"
  },
  {
    "text": "the capital case applied and then let's",
    "start": "796240",
    "end": "798720"
  },
  {
    "text": "apply it",
    "start": "798720",
    "end": "799680"
  },
  {
    "text": "to our recipe let's recap what we",
    "start": "799680",
    "end": "802800"
  },
  {
    "start": "801000",
    "end": "857000"
  },
  {
    "text": "learned in this video",
    "start": "802800",
    "end": "806000"
  },
  {
    "text": "we primarily focused on understanding",
    "start": "806160",
    "end": "808639"
  },
  {
    "text": "how to clean data sets without writing a",
    "start": "808639",
    "end": "811279"
  },
  {
    "text": "single line of code",
    "start": "811279",
    "end": "812959"
  },
  {
    "text": "we started with imputation and how to",
    "start": "812959",
    "end": "815680"
  },
  {
    "text": "deal with missing values then we looked",
    "start": "815680",
    "end": "818079"
  },
  {
    "text": "at how to handle nulls",
    "start": "818079",
    "end": "820800"
  },
  {
    "text": "we also reviewed how to merge different",
    "start": "820800",
    "end": "823199"
  },
  {
    "text": "columns to make sense of them and then",
    "start": "823199",
    "end": "825600"
  },
  {
    "text": "saw how to remove special characters and",
    "start": "825600",
    "end": "827839"
  },
  {
    "text": "replace patterns with text values",
    "start": "827839",
    "end": "831120"
  },
  {
    "text": "finally we learned how to use filter",
    "start": "831120",
    "end": "833600"
  },
  {
    "text": "transforms to wrap it up",
    "start": "833600",
    "end": "836000"
  },
  {
    "text": "hope you enjoyed this video next part of",
    "start": "836000",
    "end": "838639"
  },
  {
    "text": "the series will cover topics like group",
    "start": "838639",
    "end": "840959"
  },
  {
    "text": "by joining and union of data sets pivots",
    "start": "840959",
    "end": "844399"
  },
  {
    "text": "and feature engineering thank you for",
    "start": "844399",
    "end": "846480"
  },
  {
    "text": "watching and please stay tuned for more",
    "start": "846480",
    "end": "848480"
  },
  {
    "text": "videos in this aws glue data brew video",
    "start": "848480",
    "end": "851440"
  },
  {
    "text": "series",
    "start": "851440",
    "end": "854440"
  },
  {
    "text": "you",
    "start": "857279",
    "end": "859360"
  }
]