[
  {
    "start": "0",
    "end": "19000"
  },
  {
    "text": "in this video you'll see how to leverage",
    "start": "640",
    "end": "2760"
  },
  {
    "text": "Amazon cloudwatch logs in frequent",
    "start": "2760",
    "end": "5080"
  },
  {
    "text": "access with this new log class you can",
    "start": "5080",
    "end": "8000"
  },
  {
    "text": "centralize all your logs and cloudwatch",
    "start": "8000",
    "end": "10120"
  },
  {
    "text": "logs to improve visibility into",
    "start": "10120",
    "end": "12000"
  },
  {
    "text": "application Health perform after theact",
    "start": "12000",
    "end": "14519"
  },
  {
    "text": "forensic analysis and get more value",
    "start": "14519",
    "end": "16880"
  },
  {
    "text": "from",
    "start": "16880",
    "end": "19119"
  },
  {
    "start": "19000",
    "end": "91000"
  },
  {
    "text": "logging this is the Amazon cloudwatch",
    "start": "19119",
    "end": "21600"
  },
  {
    "text": "console where you can monitor store and",
    "start": "21600",
    "end": "23599"
  },
  {
    "text": "access your log files to get started",
    "start": "23599",
    "end": "26640"
  },
  {
    "text": "let's create a new log",
    "start": "26640",
    "end": "28199"
  },
  {
    "text": "group a log group is is a group of log",
    "start": "28199",
    "end": "30720"
  },
  {
    "text": "streams that share the same retention",
    "start": "30720",
    "end": "33000"
  },
  {
    "text": "monitoring and access control settings",
    "start": "33000",
    "end": "35960"
  },
  {
    "text": "we'll provide a name for the log group",
    "start": "35960",
    "end": "37640"
  },
  {
    "text": "and specify the log",
    "start": "37640",
    "end": "39600"
  },
  {
    "text": "class cloudwatch offers two log classes",
    "start": "39600",
    "end": "43120"
  },
  {
    "text": "standard and infrequent access the",
    "start": "43120",
    "end": "45960"
  },
  {
    "text": "standard log class is recommended for",
    "start": "45960",
    "end": "47640"
  },
  {
    "text": "most log types this log class provides",
    "start": "47640",
    "end": "50399"
  },
  {
    "text": "comprehensive log management including",
    "start": "50399",
    "end": "52520"
  },
  {
    "text": "all the features of the infrequent",
    "start": "52520",
    "end": "54239"
  },
  {
    "text": "access log class as well as advanced",
    "start": "54239",
    "end": "56800"
  },
  {
    "text": "capabilities that provide real-time",
    "start": "56800",
    "end": "58800"
  },
  {
    "text": "visibility into applic appliation Health",
    "start": "58800",
    "end": "61600"
  },
  {
    "text": "the infrequent access log class is a new",
    "start": "61600",
    "end": "64000"
  },
  {
    "text": "log class with a tailored set of",
    "start": "64000",
    "end": "65840"
  },
  {
    "text": "capabilities including ingestion storage",
    "start": "65840",
    "end": "68680"
  },
  {
    "text": "and ad hoc querying for after theact",
    "start": "68680",
    "end": "70920"
  },
  {
    "text": "forensic analysis encryption with AWS",
    "start": "70920",
    "end": "74000"
  },
  {
    "text": "Key Management Service and cross account",
    "start": "74000",
    "end": "77400"
  },
  {
    "text": "observability in this case we'll select",
    "start": "77400",
    "end": "79600"
  },
  {
    "text": "infrequent",
    "start": "79600",
    "end": "81000"
  },
  {
    "text": "access now let's create the log",
    "start": "81000",
    "end": "85119"
  },
  {
    "text": "group let's sort by the log class column",
    "start": "86159",
    "end": "88920"
  },
  {
    "text": "to find the log group we just",
    "start": "88920",
    "end": "91119"
  },
  {
    "start": "91000",
    "end": "167000"
  },
  {
    "text": "created notice that the columns to the",
    "start": "91119",
    "end": "93439"
  },
  {
    "text": "right show which features are not",
    "start": "93439",
    "end": "94960"
  },
  {
    "text": "supported for the infrequent access log",
    "start": "94960",
    "end": "97439"
  },
  {
    "text": "class let's view the details for our log",
    "start": "97439",
    "end": "100759"
  },
  {
    "text": "group we can also see which features are",
    "start": "100759",
    "end": "103240"
  },
  {
    "text": "not supported at the top of this",
    "start": "103240",
    "end": "105520"
  },
  {
    "text": "page here we can select any log stream",
    "start": "105520",
    "end": "108479"
  },
  {
    "text": "to query it in cloudwatch logs",
    "start": "108479",
    "end": "111079"
  },
  {
    "text": "insights let's run the predefined",
    "start": "111079",
    "end": "113759"
  },
  {
    "text": "query all of the log groups we include",
    "start": "113759",
    "end": "116280"
  },
  {
    "text": "in the query scope must belong to the",
    "start": "116280",
    "end": "118159"
  },
  {
    "text": "same log class let's select the ones we",
    "start": "118159",
    "end": "120920"
  },
  {
    "text": "want to search and run the",
    "start": "120920",
    "end": "124078"
  },
  {
    "text": "query log groups in the infrequent",
    "start": "130080",
    "end": "132800"
  },
  {
    "text": "access log class support all query",
    "start": "132800",
    "end": "135040"
  },
  {
    "text": "commands except pattern diff and",
    "start": "135040",
    "end": "138200"
  },
  {
    "text": "unmask let's see what happens when we",
    "start": "138200",
    "end": "140319"
  },
  {
    "text": "run a query that includes one of these",
    "start": "140319",
    "end": "144080"
  },
  {
    "text": "commands the query fails and a",
    "start": "145280",
    "end": "147920"
  },
  {
    "text": "compilation error is returned",
    "start": "147920",
    "end": "151040"
  },
  {
    "text": "additionally note that for infrequent",
    "start": "151040",
    "end": "152920"
  },
  {
    "text": "access log groups the maximum number of",
    "start": "152920",
    "end": "155440"
  },
  {
    "text": "concurrent logs insights queries is",
    "start": "155440",
    "end": "158319"
  },
  {
    "text": "five log anomalies and livet tail",
    "start": "158319",
    "end": "160840"
  },
  {
    "text": "features are not supported for the",
    "start": "160840",
    "end": "162280"
  },
  {
    "text": "infrequent access log",
    "start": "162280",
    "end": "165720"
  },
  {
    "text": "class you've just seen how to leverage",
    "start": "166640",
    "end": "168920"
  },
  {
    "start": "167000",
    "end": "182000"
  },
  {
    "text": "Amazon cloudwatch logs in frequent",
    "start": "168920",
    "end": "171840"
  },
  {
    "text": "access you can learn more about this",
    "start": "171840",
    "end": "174200"
  },
  {
    "text": "topic in the description and links for",
    "start": "174200",
    "end": "176159"
  },
  {
    "text": "this video thanks for watching now it's",
    "start": "176159",
    "end": "179400"
  },
  {
    "text": "your turn to",
    "start": "179400",
    "end": "181319"
  },
  {
    "text": "try",
    "start": "181319",
    "end": "184319"
  }
]