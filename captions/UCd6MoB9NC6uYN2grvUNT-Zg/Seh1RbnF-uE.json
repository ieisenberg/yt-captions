[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "in this video you'll see how to",
    "start": "399",
    "end": "1760"
  },
  {
    "text": "integrate scripts into aws systems",
    "start": "1760",
    "end": "3919"
  },
  {
    "text": "manager automation documents to create",
    "start": "3919",
    "end": "5920"
  },
  {
    "text": "run books",
    "start": "5920",
    "end": "7279"
  },
  {
    "text": "with this capability you can define",
    "start": "7279",
    "end": "8960"
  },
  {
    "text": "scripts to be executed",
    "start": "8960",
    "end": "10559"
  },
  {
    "text": "include them as steps in automation run",
    "start": "10559",
    "end": "12320"
  },
  {
    "text": "books and incorporate these run books",
    "start": "12320",
    "end": "14240"
  },
  {
    "text": "for efficient operations management",
    "start": "14240",
    "end": "16720"
  },
  {
    "text": "to get started let's navigate to systems",
    "start": "16720",
    "end": "18880"
  },
  {
    "text": "manager",
    "start": "18880",
    "end": "20240"
  },
  {
    "text": "we're going to examine and execute three",
    "start": "20240",
    "end": "22160"
  },
  {
    "text": "different automation documents",
    "start": "22160",
    "end": "25519"
  },
  {
    "start": "25000",
    "end": "147000"
  },
  {
    "text": "first we'll create and execute a custom",
    "start": "26080",
    "end": "28080"
  },
  {
    "text": "automation document",
    "start": "28080",
    "end": "30080"
  },
  {
    "text": "our document will send a message to a",
    "start": "30080",
    "end": "31760"
  },
  {
    "text": "user-specified amazon chime",
    "start": "31760",
    "end": "33680"
  },
  {
    "text": "chat room through its corresponding",
    "start": "33680",
    "end": "35280"
  },
  {
    "text": "webhook url",
    "start": "35280",
    "end": "38239"
  },
  {
    "text": "we can define the input attributes",
    "start": "38879",
    "end": "40640"
  },
  {
    "text": "target type and document tags",
    "start": "40640",
    "end": "43120"
  },
  {
    "text": "in this case let's require that a",
    "start": "43120",
    "end": "44640"
  },
  {
    "text": "meeting room webhook url and message",
    "start": "44640",
    "end": "46719"
  },
  {
    "text": "content are specified upon each",
    "start": "46719",
    "end": "48480"
  },
  {
    "text": "execution",
    "start": "48480",
    "end": "51120"
  },
  {
    "text": "systems manager documents or run books",
    "start": "53039",
    "end": "55280"
  },
  {
    "text": "are composed of individual steps that",
    "start": "55280",
    "end": "57039"
  },
  {
    "text": "perform a variety of functions",
    "start": "57039",
    "end": "59039"
  },
  {
    "text": "for this simple automation runbook we'll",
    "start": "59039",
    "end": "60960"
  },
  {
    "text": "specify only one step that sends a",
    "start": "60960",
    "end": "62719"
  },
  {
    "text": "message to the webhook url",
    "start": "62719",
    "end": "64320"
  },
  {
    "text": "provided by the user to do this we'll",
    "start": "64320",
    "end": "67600"
  },
  {
    "text": "run a script",
    "start": "67600",
    "end": "70320"
  },
  {
    "text": "next we'll specify the execution runtime",
    "start": "71600",
    "end": "74080"
  },
  {
    "text": "the script code itself",
    "start": "74080",
    "end": "75360"
  },
  {
    "text": "and the handler let's replace the sample",
    "start": "75360",
    "end": "79040"
  },
  {
    "text": "python code with our script",
    "start": "79040",
    "end": "82479"
  },
  {
    "text": "this code imports a python http client",
    "start": "82880",
    "end": "85439"
  },
  {
    "text": "library",
    "start": "85439",
    "end": "86080"
  },
  {
    "text": "called requests you can download these",
    "start": "86080",
    "end": "88479"
  },
  {
    "text": "packages from the python package index",
    "start": "88479",
    "end": "90479"
  },
  {
    "text": "or a package management system such as",
    "start": "90479",
    "end": "92159"
  },
  {
    "text": "conda",
    "start": "92159",
    "end": "93280"
  },
  {
    "text": "we'll need to provide the packaged code",
    "start": "93280",
    "end": "94880"
  },
  {
    "text": "for the library as an attachment to the",
    "start": "94880",
    "end": "96560"
  },
  {
    "text": "step",
    "start": "96560",
    "end": "98880"
  },
  {
    "text": "attachments can be either uploaded or",
    "start": "99840",
    "end": "101520"
  },
  {
    "text": "pulled from an amazon simple storage",
    "start": "101520",
    "end": "103280"
  },
  {
    "text": "service or amazon s3",
    "start": "103280",
    "end": "104799"
  },
  {
    "text": "bucket",
    "start": "104799",
    "end": "107119"
  },
  {
    "text": "we'll specify an s3 bucket url to host",
    "start": "108320",
    "end": "110799"
  },
  {
    "text": "the contents of our packaged library",
    "start": "110799",
    "end": "115840"
  },
  {
    "text": "next we'll specify the input parameters",
    "start": "117759",
    "end": "119840"
  },
  {
    "text": "that will be fed into the request",
    "start": "119840",
    "end": "123280"
  },
  {
    "text": "now let's create the automation runbook",
    "start": "126960",
    "end": "130720"
  },
  {
    "text": "custom runbooks appear on the owned by",
    "start": "131039",
    "end": "132959"
  },
  {
    "text": "me tab",
    "start": "132959",
    "end": "135520"
  },
  {
    "text": "here we can see the yaml specifications",
    "start": "138800",
    "end": "140640"
  },
  {
    "text": "for the document",
    "start": "140640",
    "end": "142080"
  },
  {
    "text": "let's execute it",
    "start": "142080",
    "end": "144959"
  },
  {
    "start": "147000",
    "end": "200000"
  },
  {
    "text": "as expected we're prompted to provide",
    "start": "147360",
    "end": "149200"
  },
  {
    "text": "two input parameters",
    "start": "149200",
    "end": "150640"
  },
  {
    "text": "let's open chime to get the webhook url",
    "start": "150640",
    "end": "157840"
  },
  {
    "text": "now we'll provide a sample message and",
    "start": "159120",
    "end": "160800"
  },
  {
    "text": "execute the run book",
    "start": "160800",
    "end": "163760"
  },
  {
    "text": "let's open chime to ensure our message",
    "start": "169040",
    "end": "170800"
  },
  {
    "text": "went through",
    "start": "170800",
    "end": "173360"
  },
  {
    "text": "as you can see our automation runbook",
    "start": "173760",
    "end": "175519"
  },
  {
    "text": "successfully sends a message to the chat",
    "start": "175519",
    "end": "177360"
  },
  {
    "text": "room",
    "start": "177360",
    "end": "179599"
  },
  {
    "text": "automation runbooks whether customized",
    "start": "182400",
    "end": "184400"
  },
  {
    "text": "or provided by aws",
    "start": "184400",
    "end": "186159"
  },
  {
    "text": "can be used as building blocks and",
    "start": "186159",
    "end": "187680"
  },
  {
    "text": "larger automation documents to enable",
    "start": "187680",
    "end": "189599"
  },
  {
    "text": "more complex workflows",
    "start": "189599",
    "end": "192879"
  },
  {
    "text": "let's look at an example that uses the",
    "start": "193440",
    "end": "195120"
  },
  {
    "text": "custom runbook we just created in one of",
    "start": "195120",
    "end": "197120"
  },
  {
    "text": "its steps",
    "start": "197120",
    "end": "199840"
  },
  {
    "start": "200000",
    "end": "317000"
  },
  {
    "text": "this automation runbook takes two inputs",
    "start": "200319",
    "end": "202239"
  },
  {
    "text": "upon execution from the user",
    "start": "202239",
    "end": "204480"
  },
  {
    "text": "a chime chatroom webhook url and the",
    "start": "204480",
    "end": "206959"
  },
  {
    "text": "instance id of an ec2 instance to be",
    "start": "206959",
    "end": "210840"
  },
  {
    "text": "restarted",
    "start": "210840",
    "end": "213200"
  },
  {
    "text": "the first step is defined as an execute",
    "start": "213200",
    "end": "215200"
  },
  {
    "text": "automation action",
    "start": "215200",
    "end": "216560"
  },
  {
    "text": "which allows for already defined",
    "start": "216560",
    "end": "218159"
  },
  {
    "text": "automation run books to be used",
    "start": "218159",
    "end": "220879"
  },
  {
    "text": "let's look at the inputs",
    "start": "220879",
    "end": "224000"
  },
  {
    "text": "this step uses the automation runbook we",
    "start": "225120",
    "end": "227120"
  },
  {
    "text": "created earlier to send a message to a",
    "start": "227120",
    "end": "229040"
  },
  {
    "text": "chime chat room",
    "start": "229040",
    "end": "229920"
  },
  {
    "text": "before rebooting the instance the",
    "start": "229920",
    "end": "232159"
  },
  {
    "text": "webhook url is left as an input to the",
    "start": "232159",
    "end": "234319"
  },
  {
    "text": "user",
    "start": "234319",
    "end": "234959"
  },
  {
    "text": "while the message content is predefined",
    "start": "234959",
    "end": "241680"
  },
  {
    "text": "the second step uses an aws provided",
    "start": "241680",
    "end": "244000"
  },
  {
    "text": "automation runbook to reboot a specified",
    "start": "244000",
    "end": "246159"
  },
  {
    "text": "ec2 instance",
    "start": "246159",
    "end": "247519"
  },
  {
    "text": "passing the instance id input as a",
    "start": "247519",
    "end": "249360"
  },
  {
    "text": "runtime parameter",
    "start": "249360",
    "end": "251519"
  },
  {
    "text": "the final step which is similar to the",
    "start": "251519",
    "end": "253200"
  },
  {
    "text": "first step sends a message to the chat",
    "start": "253200",
    "end": "255120"
  },
  {
    "text": "room after the reboot has finished",
    "start": "255120",
    "end": "258720"
  },
  {
    "text": "let's execute the automation runbook",
    "start": "260000",
    "end": "269840"
  },
  {
    "text": "we can see the ec2 instance stop and",
    "start": "283680",
    "end": "285840"
  },
  {
    "text": "then restart",
    "start": "285840",
    "end": "288479"
  },
  {
    "text": "now let's open chime to ensure that the",
    "start": "292400",
    "end": "294400"
  },
  {
    "text": "pre and post reboot messages were sent",
    "start": "294400",
    "end": "296320"
  },
  {
    "text": "to the chat room",
    "start": "296320",
    "end": "299040"
  },
  {
    "text": "as you can see the messages were sent",
    "start": "299680",
    "end": "301280"
  },
  {
    "text": "successfully",
    "start": "301280",
    "end": "304000"
  },
  {
    "text": "the final run book will execute is a",
    "start": "308960",
    "end": "310720"
  },
  {
    "text": "more complex automation document",
    "start": "310720",
    "end": "312560"
  },
  {
    "text": "consisting of several script execution",
    "start": "312560",
    "end": "314400"
  },
  {
    "text": "steps",
    "start": "314400",
    "end": "316800"
  },
  {
    "start": "317000",
    "end": "446000"
  },
  {
    "text": "this runbook targets specific ec2",
    "start": "317440",
    "end": "319680"
  },
  {
    "text": "instances in our account to perform",
    "start": "319680",
    "end": "321360"
  },
  {
    "text": "patching if needed it lets customers",
    "start": "321360",
    "end": "324000"
  },
  {
    "text": "choose which instances to patch or",
    "start": "324000",
    "end": "325680"
  },
  {
    "text": "exclude by specifying the right tags",
    "start": "325680",
    "end": "328080"
  },
  {
    "text": "it also restarts stopped instances for",
    "start": "328080",
    "end": "330160"
  },
  {
    "text": "the purpose of patching and puts those",
    "start": "330160",
    "end": "331840"
  },
  {
    "text": "back into the stopped state after",
    "start": "331840",
    "end": "333360"
  },
  {
    "text": "patching",
    "start": "333360",
    "end": "335840"
  },
  {
    "text": "most steps in this document perform an",
    "start": "337360",
    "end": "339120"
  },
  {
    "text": "execute script action",
    "start": "339120",
    "end": "340560"
  },
  {
    "text": "allowing a complicated workflow to be",
    "start": "340560",
    "end": "342320"
  },
  {
    "text": "executed easily",
    "start": "342320",
    "end": "344000"
  },
  {
    "text": "let's view the inputs for the first step",
    "start": "344000",
    "end": "346960"
  },
  {
    "text": "a python script filters ec2 instances in",
    "start": "346960",
    "end": "349520"
  },
  {
    "text": "our account based on key value pairs",
    "start": "349520",
    "end": "351440"
  },
  {
    "text": "provided as inputs upon execution",
    "start": "351440",
    "end": "353759"
  },
  {
    "text": "to identify instances that should be",
    "start": "353759",
    "end": "355520"
  },
  {
    "text": "patched it excludes instances that",
    "start": "355520",
    "end": "357919"
  },
  {
    "text": "belong to a specified tag",
    "start": "357919",
    "end": "361440"
  },
  {
    "text": "the second step runs a script to",
    "start": "364720",
    "end": "366319"
  },
  {
    "text": "identify which instances among those",
    "start": "366319",
    "end": "368160"
  },
  {
    "text": "filtered by the first step",
    "start": "368160",
    "end": "369440"
  },
  {
    "text": "are in a stopped state the third step",
    "start": "369440",
    "end": "372240"
  },
  {
    "text": "then runs a script to start these",
    "start": "372240",
    "end": "373680"
  },
  {
    "text": "stopped instances",
    "start": "373680",
    "end": "376560"
  },
  {
    "text": "the fourth step performs the patching",
    "start": "377840",
    "end": "379520"
  },
  {
    "text": "operation on all of these selected",
    "start": "379520",
    "end": "381120"
  },
  {
    "text": "instances",
    "start": "381120",
    "end": "381759"
  },
  {
    "text": "using a run command action the final",
    "start": "381759",
    "end": "384960"
  },
  {
    "text": "step stops any instances that were",
    "start": "384960",
    "end": "386720"
  },
  {
    "text": "restarted for the purposes of patching",
    "start": "386720",
    "end": "390560"
  },
  {
    "text": "let's run the automation",
    "start": "392639",
    "end": "395840"
  },
  {
    "text": "this automation document takes three",
    "start": "397520",
    "end": "399280"
  },
  {
    "text": "input parameters",
    "start": "399280",
    "end": "400639"
  },
  {
    "text": "a tag key value pair to filter for ec2",
    "start": "400639",
    "end": "403039"
  },
  {
    "text": "instances",
    "start": "403039",
    "end": "404000"
  },
  {
    "text": "a second key value pair to filter out",
    "start": "404000",
    "end": "405919"
  },
  {
    "text": "instances that should not be patched and",
    "start": "405919",
    "end": "408000"
  },
  {
    "text": "an aws",
    "start": "408000",
    "end": "408960"
  },
  {
    "text": "identity and access management or iam",
    "start": "408960",
    "end": "411199"
  },
  {
    "text": "role that allows automation to make",
    "start": "411199",
    "end": "413039"
  },
  {
    "text": "changes to the ec2 instances",
    "start": "413039",
    "end": "423840"
  },
  {
    "text": "again we can see the ec2 instance stop",
    "start": "425199",
    "end": "427599"
  },
  {
    "text": "and then restart",
    "start": "427599",
    "end": "430400"
  },
  {
    "text": "all five steps were executed",
    "start": "431599",
    "end": "433039"
  },
  {
    "text": "successfully",
    "start": "433039",
    "end": "435599"
  },
  {
    "text": "you've just seen how to integrate",
    "start": "435599",
    "end": "436960"
  },
  {
    "text": "scripts into aws systems manager",
    "start": "436960",
    "end": "439120"
  },
  {
    "text": "automation documents to create efficient",
    "start": "439120",
    "end": "440960"
  },
  {
    "text": "run books",
    "start": "440960",
    "end": "442720"
  },
  {
    "text": "thanks for watching now it's your turn",
    "start": "442720",
    "end": "444240"
  },
  {
    "text": "to try",
    "start": "444240",
    "end": "448479"
  }
]