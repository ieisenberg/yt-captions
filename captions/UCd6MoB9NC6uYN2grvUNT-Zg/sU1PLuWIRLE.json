[
  {
    "text": "delivering great software faster and safely those are the two main things",
    "start": "930",
    "end": "6640"
  },
  {
    "text": "employers expect from builders like us but it's also what customers expect from",
    "start": "6640",
    "end": "11830"
  },
  {
    "text": "all of us building service applications can help with the speed side of things",
    "start": "11830",
    "end": "17529"
  },
  {
    "text": "why because with serverless there are no more distractions looking after servers no more worrying about scalability for",
    "start": "17529",
    "end": "24550"
  },
  {
    "text": "infrastructure all these things are taking care on our behalf by AWS what",
    "start": "24550",
    "end": "30160"
  },
  {
    "text": "this means is that you're freeing up engineering time so you can do what",
    "start": "30160",
    "end": "35320"
  },
  {
    "text": "really matters shipping those services and features faster to your customers",
    "start": "35320",
    "end": "41940"
  },
  {
    "text": "but in order to deliver on this service promise of speed we need the right tools",
    "start": "41940",
    "end": "47340"
  },
  {
    "text": "who doesn't like achieving more with less code who doesn't like having",
    "start": "47340",
    "end": "53140"
  },
  {
    "text": "everything you need in your local machine so there are no interruptions when they're in this one you're in the",
    "start": "53140",
    "end": "58570"
  },
  {
    "text": "zone authoring testing and debugging code have you ever been in the middle of",
    "start": "58570",
    "end": "63820"
  },
  {
    "text": "a flood and thought I know how to fix this bug but realize you didn't have internet connectivity in order to have a",
    "start": "63820",
    "end": "70390"
  },
  {
    "text": "crack at it and you needed it well today I'm gonna introduce you to the alw",
    "start": "70390",
    "end": "75640"
  },
  {
    "text": "service application model or Sam Sam is gonna provide answers to these questions but more importantly it'll make it easy",
    "start": "75640",
    "end": "83020"
  },
  {
    "text": "for you to build serverless applications making you making you a faster more productive developer but speed is only",
    "start": "83020",
    "end": "92740"
  },
  {
    "text": "one side of the equation how about safety just like in Motorsports in business we're trying to",
    "start": "92740",
    "end": "98740"
  },
  {
    "text": "get more speed but we don't want to compromise safety do it so in this case",
    "start": "98740",
    "end": "103840"
  },
  {
    "text": "I'm talking specifically about safety in deployments for developers I'm sure no",
    "start": "103840",
    "end": "109360"
  },
  {
    "text": "one watching this session has ever made a deployment nervously not knowing if your code is gonna break production or",
    "start": "109360",
    "end": "115659"
  },
  {
    "text": "not am i right well in this session I'll also be showcasing features that will",
    "start": "115659",
    "end": "121479"
  },
  {
    "text": "give you peace of mind when the point serverless applications reducing the blast radius and automatically rolling",
    "start": "121479",
    "end": "127299"
  },
  {
    "text": "back if your code doesn't work as expected speed and safety by the end of this session",
    "start": "127299",
    "end": "134620"
  },
  {
    "text": "you'll know how to author test and debug service applications although with our internet from the convenience of your",
    "start": "134620",
    "end": "141519"
  },
  {
    "text": "next flight economy seed but more importantly you'll get access to the tools that you need in order to unlock",
    "start": "141519",
    "end": "147940"
  },
  {
    "text": "the speed of service applications so you can build anything serverless anytime",
    "start": "147940",
    "end": "153180"
  },
  {
    "text": "anywhere a couple of hours ago you sat on your",
    "start": "153180",
    "end": "158230"
  },
  {
    "text": "computer if you're like me you put on some jazz to get in the zone and then you crank out some great code some",
    "start": "158230",
    "end": "164230"
  },
  {
    "text": "lambda code and you're ready to ship that to lambda so that your customers can use it you're a great developer that",
    "start": "164230",
    "end": "170650"
  },
  {
    "text": "knows manual deployments are bad you want to use automation and you need in for that reason you need to define your",
    "start": "170650",
    "end": "176739"
  },
  {
    "text": "application as code at AWS we do this with AWS CloudFormation tranformation is",
    "start": "176739",
    "end": "184420"
  },
  {
    "text": "a service that allows you to create manage and update a collection available use resources in a controlled and",
    "start": "184420",
    "end": "189819"
  },
  {
    "text": "predictable way now the beauty of cloud formation is that it's declarative meaning that you define what the stack",
    "start": "189819",
    "end": "197049"
  },
  {
    "text": "should look like but you don't worry about how the changes are done or how they should be orchestrated all of that",
    "start": "197049",
    "end": "204069"
  },
  {
    "text": "is taken care on your behalf by cloud formation and because it's just it is just infrastructures code it means you",
    "start": "204069",
    "end": "211000"
  },
  {
    "text": "can chuck it in a repo and you get consistency over your deployments traceability for resource configuration",
    "start": "211000",
    "end": "217120"
  },
  {
    "text": "you can share it around iterate over it etc now you can certainly define service",
    "start": "217120",
    "end": "223989"
  },
  {
    "text": "components you see such as a dubious lambda an API gateway using cloud formation but as you start creating more",
    "start": "223989",
    "end": "230709"
  },
  {
    "text": "complex these two distributed several applications you'll want the power of",
    "start": "230709",
    "end": "235780"
  },
  {
    "text": "cloud formation but also the ability to write less code to define those surveillance resources this is exactly",
    "start": "235780",
    "end": "244359"
  },
  {
    "text": "where the service application model comes in or Sam Sam makes makes it easier for you to develop and manage",
    "start": "244359",
    "end": "251470"
  },
  {
    "text": "service application and it's only it's also a squirrel the only it'll be a service with their mascot you can think",
    "start": "251470",
    "end": "259570"
  },
  {
    "text": "of Sam as a higher level abstraction to cloud formation or maybe an extension or",
    "start": "259570",
    "end": "265480"
  },
  {
    "text": "simplification of confirmation that's been optimized for several s you're still using cloud formation in the",
    "start": "265480",
    "end": "271630"
  },
  {
    "text": "background when you upload your template you upload it to cloud formation but you write it in Sam syntax defining those",
    "start": "271630",
    "end": "278650"
  },
  {
    "text": "service resources with a lot less code now some supports anything that",
    "start": "278650",
    "end": "284050"
  },
  {
    "text": "Confirmation does in I mentioned earlier that Sam makes it easy for you to define",
    "start": "284050",
    "end": "289720"
  },
  {
    "text": "several s applications let me show you how easy it is this is a neat template",
    "start": "289720",
    "end": "296920"
  },
  {
    "text": "with just fourteen lines of code and it contains everything that Sam needs in order to create and configure our",
    "start": "296920",
    "end": "303250"
  },
  {
    "text": "restful api endpoint on Amazon API gateway in an ADA we aslam the function",
    "start": "303250",
    "end": "308800"
  },
  {
    "text": "with all the wirings and permissions needed so that when you user hits the API with the HTTP request it'll become",
    "start": "308800",
    "end": "316930"
  },
  {
    "text": "the source event that triggers lambda this is going to be also this template our starting point for the demo that",
    "start": "316930",
    "end": "323650"
  },
  {
    "text": "we'll be running in the first demo let's go through the all the parts of this",
    "start": "323650",
    "end": "328780"
  },
  {
    "text": "template you start the template by defining that within two lines that",
    "start": "328780",
    "end": "335260"
  },
  {
    "text": "these templates is retaining in a specific syntax in this case the Sam syntax so that when you blow the",
    "start": "335260",
    "end": "341920"
  },
  {
    "text": "template to cloud formation confirmation understands it and knows that I need to transform it into a fully blown",
    "start": "341920",
    "end": "348460"
  },
  {
    "text": "CloudFormation template now to prove how much Sam is doing for you let me show",
    "start": "348460",
    "end": "354130"
  },
  {
    "text": "you how the transform template for this Sam template looks like look at all the",
    "start": "354130",
    "end": "362230"
  },
  {
    "text": "code you didn't have to write it since I'm a hard-working little squirrel now",
    "start": "362230",
    "end": "368500"
  },
  {
    "text": "after the finding that this the syntax in the template you define all the resources that comprise your application",
    "start": "368500",
    "end": "375010"
  },
  {
    "text": "in the same way that you would with CloudFormation templates in this case I",
    "start": "375010",
    "end": "380350"
  },
  {
    "text": "am defining a single resource called calculator ad given that this is a",
    "start": "380350",
    "end": "385480"
  },
  {
    "text": "lambda function I need to give it the type a EE a server list function and then we define some configuration for",
    "start": "385480",
    "end": "393580"
  },
  {
    "text": "that lambda function and in the form of properties now some of those properties are many",
    "start": "393580",
    "end": "399310"
  },
  {
    "text": "turi such as handler and run time I'm using golang and version version 1 for",
    "start": "399310",
    "end": "405400"
  },
  {
    "text": "this function for example other properties are optional such as name and lambda memory and I am role that you",
    "start": "405400",
    "end": "412630"
  },
  {
    "text": "want your lambda function to assume and the environment variables so let's look",
    "start": "412630",
    "end": "418270"
  },
  {
    "text": "at another property this property is quite powerful the event property because it allows you to do two things",
    "start": "418270",
    "end": "424720"
  },
  {
    "text": "at once first it defines the event source that is allowed to trigger my lambda function",
    "start": "424720",
    "end": "430690"
  },
  {
    "text": "things like s3 Kinesis dynamodb in this case it is a HTTP GET request against my",
    "start": "430690",
    "end": "438340"
  },
  {
    "text": "api gateway endpoint but secondly sam is",
    "start": "438340",
    "end": "443530"
  },
  {
    "text": "smart enough to go out and create and manage that api gateway and port as well with the same lines of code of course",
    "start": "443530",
    "end": "451780"
  },
  {
    "text": "you could define API gateway explicitly as a standalone resource within the Sam template by providing a swagger file and",
    "start": "451780",
    "end": "458560"
  },
  {
    "text": "a stage name what we chose to have Sam make it easy for us with the event property another great thing about Sam",
    "start": "458560",
    "end": "467140"
  },
  {
    "text": "is that it not only is it simplifying the syntax we used to define several",
    "start": "467140",
    "end": "472420"
  },
  {
    "text": "ASAPS but also simplifies the deployment or the all of those changes by providing",
    "start": "472420",
    "end": "479740"
  },
  {
    "text": "us with two commands the package and the deploy command the first one puts all",
    "start": "479740",
    "end": "485890"
  },
  {
    "text": "over your code our artifacts into a sip file uploads that to s3 and creates a",
    "start": "485890",
    "end": "491020"
  },
  {
    "text": "package Sam template with the location of your code and then the deploy can execute those changes in confirmation",
    "start": "491020",
    "end": "498520"
  },
  {
    "text": "for your behalf so let's use Sam and the same commands on our first demo in this",
    "start": "498520",
    "end": "506440"
  },
  {
    "text": "demo we'll use this Sam template we've seen before to create a simple yet powerful calculator it is simple because",
    "start": "506440",
    "end": "513969"
  },
  {
    "text": "it only does one thing and it does it well it does addition but it's powerful",
    "start": "513970",
    "end": "519039"
  },
  {
    "text": "because it's entirely built using serverless technologies which among other things means that you can have a",
    "start": "519040",
    "end": "525070"
  },
  {
    "text": "single user using this calculator once or you could have millions of users using the calculations the calculator",
    "start": "525070",
    "end": "532030"
  },
  {
    "text": "millions of and it'll still work because with serverless the scaling is on for you now",
    "start": "532030",
    "end": "538550"
  },
  {
    "text": "the way this application works is a heat a user hits the API with a HTTP request with to query prompts those to query",
    "start": "538550",
    "end": "545839"
  },
  {
    "text": "prompts are passed to the lambda function written in go the function simply take those query prompts adds",
    "start": "545839",
    "end": "552050"
  },
  {
    "text": "them up and returns that is the result very simple we'll do three things in",
    "start": "552050",
    "end": "558050"
  },
  {
    "text": "this demo we'll use Sam the Sam commands and the AWS CLI to create our service",
    "start": "558050",
    "end": "564260"
  },
  {
    "text": "application I'll be using the CLI because it's an easy way to show you what I'm doing but you can of course",
    "start": "564260",
    "end": "570320"
  },
  {
    "text": "automate all of this using your preferred tool of choice we'll then gonna test our app and peace",
    "start": "570320",
    "end": "576709"
  },
  {
    "text": "ambitious changes to the lambda code and finally because this is a talk that is",
    "start": "576709",
    "end": "582500"
  },
  {
    "text": "about speed but also about safety in deployments I'll implement a security",
    "start": "582500",
    "end": "588230"
  },
  {
    "text": "mechanism that to prevent bad code from impacting all of our customers let me",
    "start": "588230",
    "end": "593930"
  },
  {
    "text": "show you how this last point will work say we have a version 1 deployed using",
    "start": "593930",
    "end": "600560"
  },
  {
    "text": "lambda and we are pointing all of our traffic to this first version we deploy",
    "start": "600560",
    "end": "607370"
  },
  {
    "text": "a new second version without pointing any traffic to it and we're not changing the alias live that points all the",
    "start": "607370",
    "end": "614959"
  },
  {
    "text": "traffic will then run some validation to make sure that the function is actually",
    "start": "614959",
    "end": "620480"
  },
  {
    "text": "adding the two numbers correctly if it isn't we're gonna roll back and keep the",
    "start": "620480",
    "end": "626000"
  },
  {
    "text": "alias pointing at version 1 this way we have prevented bad code from affecting",
    "start": "626000",
    "end": "631100"
  },
  {
    "text": "our customers but if the validation says yes this calculator is adding that we",
    "start": "631100",
    "end": "636440"
  },
  {
    "text": "can fully promote the the second version of the code by moving the live alias to",
    "start": "636440",
    "end": "643339"
  },
  {
    "text": "the new version so let's do this ok so in the interest of time I've done two",
    "start": "643339",
    "end": "648620"
  },
  {
    "text": "things I have pre applauded my stack using the same command don't worry I'm going to be using the same commands in",
    "start": "648620",
    "end": "655370"
  },
  {
    "text": "order to update the stack and I'll show you and I also have this here all the",
    "start": "655370",
    "end": "660500"
  },
  {
    "text": "commands that are going to be running and the reason for this is it's just because it's easier to copy and paste",
    "start": "660500",
    "end": "666269"
  },
  {
    "text": "so let me show you a couple of the artifacts that I have this is the same",
    "start": "666269",
    "end": "671500"
  },
  {
    "text": "template that you've seen before I think it's exactly the same one where I may have added a functional name but it's",
    "start": "671500",
    "end": "678490"
  },
  {
    "text": "the same one you saw on the slides before and it's have a look at the code so the code is written in go it's very",
    "start": "678490",
    "end": "686139"
  },
  {
    "text": "simple code it's just a simple calculator so in the handler what I'm doing is basically parsing those to",
    "start": "686139",
    "end": "693279"
  },
  {
    "text": "query primes and saving them in the left and right variables then I am defining",
    "start": "693279",
    "end": "699579"
  },
  {
    "text": "the result as remembered this should be adding it is an adding calculator but",
    "start": "699579",
    "end": "705220"
  },
  {
    "text": "I'm making an intentional mistake and this is just for the purpose of showing you how to update the code and then I'm",
    "start": "705220",
    "end": "711129"
  },
  {
    "text": "returning the result as part of there was the body of the API response okay so",
    "start": "711129",
    "end": "719740"
  },
  {
    "text": "let's test my application so I'm gonna be curling the endpoint with the query",
    "start": "719740",
    "end": "725620"
  },
  {
    "text": "prompts 4 & 3 you can see that this calculator is not adding let's try other",
    "start": "725620",
    "end": "731019"
  },
  {
    "text": "2 4 & 4 should be 8 not 16 so this is not adding so what we're going to do is",
    "start": "731019",
    "end": "737439"
  },
  {
    "text": "we're going to open update our code so we will change that for addition we'll",
    "start": "737439",
    "end": "744370"
  },
  {
    "text": "save it and after we've saved it we a minute we're gonna push that to the",
    "start": "744370",
    "end": "749769"
  },
  {
    "text": "cloud so we do that by first compiling the code because this is golang it's",
    "start": "749769",
    "end": "755410"
  },
  {
    "text": "compilation and then i'm gonna use this and package command for which you need",
    "start": "755410",
    "end": "761110"
  },
  {
    "text": "to pass the template name the s3 bucket and then this Sam deploy command we",
    "start": "761110",
    "end": "768339"
  },
  {
    "text": "simply execute in all of those changes in your stack in this case the stack is called calculator ad now this change is",
    "start": "768339",
    "end": "776559"
  },
  {
    "text": "going to take about 50 seconds while it does that I'll show you the security",
    "start": "776559",
    "end": "781899"
  },
  {
    "text": "mechanisms that we were going to implement so it turns out that canary",
    "start": "781899",
    "end": "788559"
  },
  {
    "text": "releases for a dubious lambda are done are made very easy by Sam with an",
    "start": "788559",
    "end": "794350"
  },
  {
    "text": "integration of code deploy and this is the way you can figure it you have a in preference as a property of your",
    "start": "794350",
    "end": "801930"
  },
  {
    "text": "lambda function that deployment preference gives you a couple of types actually it gives you several types and",
    "start": "801930",
    "end": "807990"
  },
  {
    "text": "these are just two that I'm gonna explain this one points 10% of the",
    "start": "807990",
    "end": "815070"
  },
  {
    "text": "traffic to your newly deployed code and provided that within five minutes this",
    "start": "815070",
    "end": "822180"
  },
  {
    "text": "cloud watch alarm isn't triggered then the canary is going to be completely promoted and received 100 percent of",
    "start": "822180",
    "end": "828660"
  },
  {
    "text": "traffic this second times is a little bit more conservative it points 10",
    "start": "828660",
    "end": "834329"
  },
  {
    "text": "percent of the traffic to your canary and provided that every on the first",
    "start": "834329",
    "end": "839699"
  },
  {
    "text": "minute only one minute the alarm and it's not triggered then it's gonna increase by 10 percent to traffic to the",
    "start": "839699",
    "end": "846959"
  },
  {
    "text": "canary so that configuration is going to take about 10 steps before your canary is fully promoted now code deploy and",
    "start": "846959",
    "end": "855089"
  },
  {
    "text": "Sam also give us a couple of toys we can play with critter traffic and post traffic hooks in order to integrate",
    "start": "855089",
    "end": "861589"
  },
  {
    "text": "dacing to our existing CI see the release process now I was a bit cheeky",
    "start": "861589",
    "end": "867870"
  },
  {
    "text": "and I didn't show you initially all of my Sam template but it turns out that I've included these four lines of code",
    "start": "867870",
    "end": "874649"
  },
  {
    "text": "before to implement the safety mechanism we talked about so I'm choosing an all",
    "start": "874649",
    "end": "880050"
  },
  {
    "text": "at once deployment preference which in itself is not secure at all but what I'm doing is",
    "start": "880050",
    "end": "886199"
  },
  {
    "text": "I am configuring a pre traffic hook with a valid data so my validator is basically inspecting",
    "start": "886199",
    "end": "893760"
  },
  {
    "text": "the code that I'm uploading to make sure that is actually an adding calculator so",
    "start": "893760",
    "end": "899790"
  },
  {
    "text": "it sends some to query prompts it checks that it's returning addition and if it",
    "start": "899790",
    "end": "905370"
  },
  {
    "text": "is it allows to deploy the function all at once so receiving 100 percent of the",
    "start": "905370",
    "end": "911160"
  },
  {
    "text": "traffic but if it isn't it doesn't allow that so it's a validator function it's",
    "start": "911160",
    "end": "916620"
  },
  {
    "text": "just a security mechanism so let's see that at work in a second for now let's",
    "start": "916620",
    "end": "925380"
  },
  {
    "text": "see what happened with my deployment my deployment went successfully let's test",
    "start": "925380",
    "end": "930510"
  },
  {
    "text": "it and see if my application is actually adding which is what it's supposed to be doing so I'm gonna give you the query",
    "start": "930510",
    "end": "936800"
  },
  {
    "text": "round four and three you can see a seven comes back for round five you can see a",
    "start": "936800",
    "end": "944029"
  },
  {
    "text": "nine comes back so it is actually adding so let's test the security mechanism by",
    "start": "944029",
    "end": "949459"
  },
  {
    "text": "introducing another mistake let's change edition for something else and let's",
    "start": "949459",
    "end": "956440"
  },
  {
    "text": "push all of this to the cloud and see what happens now this appointment is gonna take about",
    "start": "956440",
    "end": "962570"
  },
  {
    "text": "50 seconds similar to before so in the interest of style of time we're gonna go",
    "start": "962570",
    "end": "967640"
  },
  {
    "text": "back to the slides and then we'll revisit this okay so in summary of this first demo you've",
    "start": "967640",
    "end": "973040"
  },
  {
    "text": "seen how to get speed in software delivery by using several s apps you've",
    "start": "973040",
    "end": "978649"
  },
  {
    "text": "seen how sign makes it really easy to create manage and deploy several applications by allowing us to define",
    "start": "978649",
    "end": "985310"
  },
  {
    "text": "with less code several s applications but also by simplifying the deployment",
    "start": "985310",
    "end": "990529"
  },
  {
    "text": "process with a couple of commands you've also seen how Sam's integration with",
    "start": "990529",
    "end": "995600"
  },
  {
    "text": "code deploy gives us at that simple way to create automatic canary deployments",
    "start": "995600",
    "end": "1000730"
  },
  {
    "text": "and Bluegreen deployments so that we can get peace of mind when the point lambda reducing the blast radius and",
    "start": "1000730",
    "end": "1007690"
  },
  {
    "text": "automatically running back if our code doesn't work as expected now we can hit",
    "start": "1007690",
    "end": "1013029"
  },
  {
    "text": "the deployment button without fear but let's think for a moment about the",
    "start": "1013029",
    "end": "1019570"
  },
  {
    "text": "process we went through we wrote some code in lambda then we define the",
    "start": "1019570",
    "end": "1025688"
  },
  {
    "text": "application as code is in Sam that we deploy to the cloud using the same commands but then we have to wait we had",
    "start": "1025689",
    "end": "1033938"
  },
  {
    "text": "to wait for about 50 seconds before the app was ready to go in the cloud and",
    "start": "1033939",
    "end": "1039069"
  },
  {
    "text": "only then after wait in those 50 seconds we were able to test it get some feedback and then go back to the",
    "start": "1039069",
    "end": "1045550"
  },
  {
    "text": "offering to fix or to keep iterating or our code this flow is not great if",
    "start": "1045550",
    "end": "1052419"
  },
  {
    "text": "you're like me builders are very intolerant to inefficiencies and interruptions when you're in the zone",
    "start": "1052419",
    "end": "1057929"
  },
  {
    "text": "authoring testing and debugging code so we're gonna need a better flow for",
    "start": "1057929",
    "end": "1064240"
  },
  {
    "text": "example something like this having a tied authored test and debug loop in our machine and only checking",
    "start": "1064240",
    "end": "1071320"
  },
  {
    "text": "code into our CSV process when we're ready to ship those features and that software to the cloud this is great",
    "start": "1071320",
    "end": "1078370"
  },
  {
    "text": "there's no interruption no waiting it'll be much faster this way remember we're",
    "start": "1078370",
    "end": "1083530"
  },
  {
    "text": "getting speed but doesn't lambda leaving the run in the cloud well in order to",
    "start": "1083530",
    "end": "1091390"
  },
  {
    "text": "achieve this we're gonna have to bring the power of lambda to our local laptops",
    "start": "1091390",
    "end": "1096750"
  },
  {
    "text": "and this is exactly where this Sam CLI comes in this is a second tool we've",
    "start": "1096750",
    "end": "1102550"
  },
  {
    "text": "talked about today and it is a tool for a CLI tool for local testing debugging",
    "start": "1102550",
    "end": "1107620"
  },
  {
    "text": "and deploying of service applications so there's no waiting no interruption and",
    "start": "1107620",
    "end": "1112690"
  },
  {
    "text": "as an added bonus you don't need internet in order to author test and debug lambda functions so we're getting",
    "start": "1112690",
    "end": "1120520"
  },
  {
    "text": "more than speed more speed with Sam Sam CLI now the way Sam CLI works is by",
    "start": "1120520",
    "end": "1127540"
  },
  {
    "text": "using a docker image to mimic the lambdas execution environment into our machine it emulates things like the",
    "start": "1127540",
    "end": "1134260"
  },
  {
    "text": "lambda timeouts memory limits and runtimes now here are some of the things",
    "start": "1134260",
    "end": "1140710"
  },
  {
    "text": "that you can do with the Sam CLI I'm not going to go into the detail of all this because we're actually gonna I'm gonna",
    "start": "1140710",
    "end": "1146890"
  },
  {
    "text": "show you in the second demo but the important thing is now you can test your lambda function in a couple different",
    "start": "1146890",
    "end": "1153490"
  },
  {
    "text": "ways in your machine it essentially is a game changer it means you can quickly iterate over your",
    "start": "1153490",
    "end": "1159820"
  },
  {
    "text": "functions without reloading and you never have to wait getting speed in your service projects when you're in your",
    "start": "1159820",
    "end": "1165910"
  },
  {
    "text": "authoring and releasing of the software it also means that as an added bonus",
    "start": "1165910",
    "end": "1171580"
  },
  {
    "text": "that you don't need internet connectivity to author test and debug serverless applications",
    "start": "1171580",
    "end": "1176830"
  },
  {
    "text": "so next time you're flying you can use the serenity of most flights provided",
    "start": "1176830",
    "end": "1181870"
  },
  {
    "text": "there are no crying babies in order to launch Sam CLI get in the zone and start",
    "start": "1181870",
    "end": "1187180"
  },
  {
    "text": "coding so let's go for our second and last demo we learned that our customers",
    "start": "1187180",
    "end": "1195190"
  },
  {
    "text": "didn't want to add they want to multiply who would have thought that so what we're going to do is without",
    "start": "1195190",
    "end": "1201370"
  },
  {
    "text": "internet will offer a lambda function in nodejs with multiply functionality very",
    "start": "1201370",
    "end": "1207280"
  },
  {
    "text": "similar to the one we had before we'll test them and debug it locally with the Sam CLI before we deployed side by side",
    "start": "1207280",
    "end": "1215800"
  },
  {
    "text": "to our existing application the reason we're deploying it side by side is because I want to show you",
    "start": "1215800",
    "end": "1220810"
  },
  {
    "text": "another way of implementing safe deployments for several s applications",
    "start": "1220810",
    "end": "1226680"
  },
  {
    "text": "this time we're going to be using for safety canary releases for API gateway it's a",
    "start": "1226680",
    "end": "1233050"
  },
  {
    "text": "feature that allows you to gradually roll out new API and new API configurations in Amazon API gateway",
    "start": "1233050",
    "end": "1240300"
  },
  {
    "text": "will create a new stage configuration that points to our new lambda function",
    "start": "1240300",
    "end": "1245490"
  },
  {
    "text": "and bonus more percentage of traffic to it if we are happy with the outcome of",
    "start": "1245490",
    "end": "1252880"
  },
  {
    "text": "that small percentage of traffic we'll promote the API stage configuration to",
    "start": "1252880",
    "end": "1258040"
  },
  {
    "text": "receive 100% of the traffic so let's do this so let's check my previous",
    "start": "1258040",
    "end": "1264130"
  },
  {
    "text": "deployment before we start with them or - first off we can see that the deployment failed and that's a good sign",
    "start": "1264130",
    "end": "1271180"
  },
  {
    "text": "remember that we try to trigger the security mechanism so let's curl the endpoint and see if my calculator still",
    "start": "1271180",
    "end": "1277990"
  },
  {
    "text": "adding yes it's still adding one more thing that we can do to prove that my",
    "start": "1277990",
    "end": "1284530"
  },
  {
    "text": "safety mechanism work is using this to try to find rollback events in our cloud",
    "start": "1284530",
    "end": "1292240"
  },
  {
    "text": "formation events we can see that they've said actually a rollback event that was",
    "start": "1292240",
    "end": "1298360"
  },
  {
    "text": "started by class but I could deploy so we're good the security mechanism work",
    "start": "1298360",
    "end": "1303630"
  },
  {
    "text": "so let's go to our second demo in our",
    "start": "1303630",
    "end": "1309820"
  },
  {
    "text": "second demo we have all these artifacts I'll show you a few this one for example",
    "start": "1309820",
    "end": "1315160"
  },
  {
    "text": "is the Sam template before they multiply and function that we're going to deploy it's actually simpler that the one we",
    "start": "1315160",
    "end": "1321790"
  },
  {
    "text": "use in the previous demo because remember we're not the point a new API gateway here we're going to be using the",
    "start": "1321790",
    "end": "1326950"
  },
  {
    "text": "one before where they just deploy in the lambda function side-by-side and the code",
    "start": "1326950",
    "end": "1332760"
  },
  {
    "text": "we could argue all day about this but I believe JavaScript is much simpler than go but it's actually doing the same so",
    "start": "1332760",
    "end": "1340480"
  },
  {
    "text": "it's just taking those two career prams into the variables left and right and then defining the result as the addition",
    "start": "1340480",
    "end": "1348669"
  },
  {
    "text": "and then returning that as a string as part of the of my body now remember that",
    "start": "1348669",
    "end": "1355000"
  },
  {
    "text": "this function should be multiplying it's what our customers wanted but I'm making an intentional mistake again to show you",
    "start": "1355000",
    "end": "1361690"
  },
  {
    "text": "how to update this using the Sam CLI okay so let's start testing Sam Sam is a",
    "start": "1361690",
    "end": "1370750"
  },
  {
    "text": "CLI - the first thing we can I can show you is the version that I have installed on my machine in this case is a newly",
    "start": "1370750",
    "end": "1376990"
  },
  {
    "text": "released 0.2 so serpent 3.0 something",
    "start": "1376990",
    "end": "1383260"
  },
  {
    "text": "else we can do is we can validate our template and this is a best practice you should validate your templates in your",
    "start": "1383260",
    "end": "1389230"
  },
  {
    "text": "machine and as part of the C ICD process again the same way you would with cloud",
    "start": "1389230",
    "end": "1394630"
  },
  {
    "text": "formation so you can see that it gives us a couple of warnings and it's telling us that our template is valid so let's",
    "start": "1394630",
    "end": "1403230"
  },
  {
    "text": "test our lambda function in one way that some allows us to do and what we gonna",
    "start": "1403230",
    "end": "1410980"
  },
  {
    "text": "do here is Sam local star API what this is doing is basically creating a proxy",
    "start": "1410980",
    "end": "1416200"
  },
  {
    "text": "in my machine using docker that allows you to test our lambda function in",
    "start": "1416200",
    "end": "1422140"
  },
  {
    "text": "response to HTTP requests so what I can do is I can use that go to my browser",
    "start": "1422140",
    "end": "1429700"
  },
  {
    "text": "I'll zoom this up a little bit and I'm",
    "start": "1429700",
    "end": "1436149"
  },
  {
    "text": "passing the query prompts for and - and as you can see is returning the addition",
    "start": "1436149",
    "end": "1442750"
  },
  {
    "text": "in we don't want addition we want multiplication so let's fix that I'm",
    "start": "1442750",
    "end": "1449289"
  },
  {
    "text": "going to go back to my code my code I'm gonna fix this for multiplication which",
    "start": "1449289",
    "end": "1456340"
  },
  {
    "text": "is what it's supposed to do I save it and I can immediately swipe back to",
    "start": "1456340",
    "end": "1462190"
  },
  {
    "text": "where I was refresh the browser and it's going to be in lately using the new version of my",
    "start": "1462190",
    "end": "1468730"
  },
  {
    "text": "lambda code you can see now the result is eight this is big it means you can quickly get the right over your",
    "start": "1468730",
    "end": "1475540"
  },
  {
    "text": "functions without reloading so you don't have to wait how cool was that now as",
    "start": "1475540",
    "end": "1480910"
  },
  {
    "text": "part of that command that I show you you can see that you're also receiving the lambda logs in your laptop even without",
    "start": "1480910",
    "end": "1488770"
  },
  {
    "text": "using internet you're receiving what normally you find in cloud which locks and this is great if you need to troubleshoot or debug your code okay so",
    "start": "1488770",
    "end": "1497890"
  },
  {
    "text": "that was the Sam local star API let's",
    "start": "1497890",
    "end": "1503820"
  },
  {
    "text": "because I'm happy with that I'm going to quickly deploy it to the cloud and then I'll keep showing you all the good",
    "start": "1503820",
    "end": "1509679"
  },
  {
    "text": "things about Santa Sam CLI so let's deploy it using Sam package and",
    "start": "1509679",
    "end": "1514960"
  },
  {
    "text": "Sam deployed I don't need to compile anymore because we're using node yes and",
    "start": "1514960",
    "end": "1521169"
  },
  {
    "text": "that's gonna take that's gonna take about 50 seconds again so for now I'll",
    "start": "1521169",
    "end": "1527470"
  },
  {
    "text": "just interrupt this should have gone through and I'll show you the other",
    "start": "1527470",
    "end": "1532660"
  },
  {
    "text": "thing so we can test our lambda function in a second way using the same look on in book command but in order to do that",
    "start": "1532660",
    "end": "1539410"
  },
  {
    "text": "we need to pass it the event source that that lambda needs me to execute well the",
    "start": "1539410",
    "end": "1546100"
  },
  {
    "text": "Sam CLI also allows you to generate that event source using this command so I'm",
    "start": "1546100",
    "end": "1552580"
  },
  {
    "text": "creating an API event you can also generate s3 dynamodb and kimmy's events",
    "start": "1552580",
    "end": "1557860"
  },
  {
    "text": "it's gonna be a method get on the main resource and I'm gonna give it the two career prompts for and two it generates",
    "start": "1557860",
    "end": "1565660"
  },
  {
    "text": "an adjacent Paylor that if you save it the way that I did here in my request Jason then you can",
    "start": "1565660",
    "end": "1573549"
  },
  {
    "text": "use that Sam local in book command in order to execute Sam in execute lambda",
    "start": "1573549",
    "end": "1579730"
  },
  {
    "text": "on my machine this is gonna take a second or two and it's here so you you",
    "start": "1579730",
    "end": "1587860"
  },
  {
    "text": "get the locks in the same way we did before and you get the result the multiplication of two and for insight so",
    "start": "1587860",
    "end": "1595150"
  },
  {
    "text": "my Lander function is working fine one more thing that I'll show you about",
    "start": "1595150",
    "end": "1601250"
  },
  {
    "text": "Santos FC a lie is you can debug you can do live debugging on your own your own functions using the same command Sam",
    "start": "1601250",
    "end": "1608480"
  },
  {
    "text": "local in book you can pass it a debugger option and a port and what I've done is",
    "start": "1608480",
    "end": "1614330"
  },
  {
    "text": "I pre-configure my IDE to listen on this port 5858 so I am going to have a break point here",
    "start": "1614330",
    "end": "1622720"
  },
  {
    "text": "then we can go to my bugger start the",
    "start": "1622720",
    "end": "1628549"
  },
  {
    "text": "debugger and you are debugging your code in the same way you would with any non",
    "start": "1628549",
    "end": "1635270"
  },
  {
    "text": "serverless code so you see that here I have my variables two and four you can",
    "start": "1635270",
    "end": "1640730"
  },
  {
    "text": "step over that line of code then you can see the result is right the same way you",
    "start": "1640730",
    "end": "1645890"
  },
  {
    "text": "would any known server this code that's great okay so let's go back to our",
    "start": "1645890",
    "end": "1654940"
  },
  {
    "text": "deployment so hopefully our multiplication function was the quote",
    "start": "1654940",
    "end": "1660530"
  },
  {
    "text": "correctly and you can say that yes I actually grabbed the AR end of my",
    "start": "1660530",
    "end": "1666409"
  },
  {
    "text": "function so what we're gonna do now is we're gonna do canary releases for API gateway so at the moment we have our",
    "start": "1666409",
    "end": "1672950"
  },
  {
    "text": "application completely separate to this function so we need to tell that API gave way about this new function and we",
    "start": "1672950",
    "end": "1680360"
  },
  {
    "text": "need to tell this new function about the existing API again with so I'm gonna do",
    "start": "1680360",
    "end": "1685610"
  },
  {
    "text": "that with two CLI commands that I want you to memorize now I'm joking",
    "start": "1685610",
    "end": "1690710"
  },
  {
    "text": "you shouldn't memorize this but it's basically the API put integration command and the lambda at permission",
    "start": "1690710",
    "end": "1697520"
  },
  {
    "text": "command this is gonna allow them to know about each other so you run those",
    "start": "1697520",
    "end": "1702679"
  },
  {
    "text": "commands now they know about each other and what you finally need to do is to",
    "start": "1702679",
    "end": "1708470"
  },
  {
    "text": "create that canary the written deployment you do it with the AWS API",
    "start": "1708470",
    "end": "1713630"
  },
  {
    "text": "great gateway create deployment so this is going to create another stage of your API gateway and I'm going to point",
    "start": "1713630",
    "end": "1720409"
  },
  {
    "text": "twenty percent of the traffic to that second stage that it's going to be using my Neil on the function so let me just",
    "start": "1720409",
    "end": "1726830"
  },
  {
    "text": "stop here for a second I'm gonna be pointing I am pointing eighty percent of",
    "start": "1726830",
    "end": "1732080"
  },
  {
    "text": "the traffic to my and calculator in 20% of the traffic to my multiplication calculator so let's",
    "start": "1732080",
    "end": "1738679"
  },
  {
    "text": "test that hopefully about one-fifth of the time this function is gonna be",
    "start": "1738679",
    "end": "1744409"
  },
  {
    "text": "multiplying so if I give it a quick times four and three it is adding adding",
    "start": "1744409",
    "end": "1752539"
  },
  {
    "text": "adding the world we have all day for this adding and there you go actually exactly",
    "start": "1752539",
    "end": "1760039"
  },
  {
    "text": "one fifth of the time let me do one more and then you go seven so about 20% of the traffic is actually multiplying if",
    "start": "1760039",
    "end": "1767390"
  },
  {
    "text": "we're happy with the results of our canary release we can promote that canary with this last command and I",
    "start": "1767390",
    "end": "1773539"
  },
  {
    "text": "promise you this is the last time I'll be running today so you I'm basically copying the canary configuration into",
    "start": "1773539",
    "end": "1781880"
  },
  {
    "text": "the deployment configuration so that 100% of the traffic goes to the multiplication function and after I've",
    "start": "1781880",
    "end": "1789710"
  },
  {
    "text": "done that I can test it and verify that a hundred cent of traffic goes to the",
    "start": "1789710",
    "end": "1795950"
  },
  {
    "text": "multiplication function using the same API that you had before so you got multiplication multiplication",
    "start": "1795950",
    "end": "1801740"
  },
  {
    "text": "multiplication now you have seen how easy it is to create canary releases for",
    "start": "1801740",
    "end": "1807080"
  },
  {
    "text": "API gateway select go back to the slides in the second set demo we saw many",
    "start": "1807080",
    "end": "1813409"
  },
  {
    "text": "things we saw all the things that you can achieve with the Sam CLI how said the Sam CLI takes all the good parts of",
    "start": "1813409",
    "end": "1819500"
  },
  {
    "text": "Sam and it'll be as lambda and brings them to your local machine allowing you to have a tight loop when you're",
    "start": "1819500",
    "end": "1825230"
  },
  {
    "text": "authoring testing and debugging serverless code it's giving us speed in",
    "start": "1825230",
    "end": "1830600"
  },
  {
    "text": "software creation for several s apps by allowing us allowing us to build several applications with no waiting no",
    "start": "1830600",
    "end": "1837250"
  },
  {
    "text": "interruption and even without internet connectivity we also saw in the second",
    "start": "1837250",
    "end": "1844010"
  },
  {
    "text": "demo how easily is to enable safe deployments for API gateway by using",
    "start": "1844010",
    "end": "1849080"
  },
  {
    "text": "canary releases the canary releases feature this way we gradually roll it",
    "start": "1849080",
    "end": "1854390"
  },
  {
    "text": "out new API configurations but you can also roll out new API is entirely you",
    "start": "1854390",
    "end": "1859730"
  },
  {
    "text": "have the ability of rolling back if our changes don't work as intended and although I made these old manually and",
    "start": "1859730",
    "end": "1866570"
  },
  {
    "text": "demo you can automate it using the same commands that I use so to finish how can",
    "start": "1866570",
    "end": "1873019"
  },
  {
    "text": "you get started there are a lot of options from free online on-demand training to example some of the Sam the",
    "start": "1873019",
    "end": "1879710"
  },
  {
    "text": "CLI repos that you find on github a tutorial for your first work several is",
    "start": "1879710",
    "end": "1884899"
  },
  {
    "text": "web application you can find fine on the AWS website blueprints you can find on",
    "start": "1884899",
    "end": "1889940"
  },
  {
    "text": "the lambda council and also on the AWS several is application repository but",
    "start": "1889940",
    "end": "1895460"
  },
  {
    "text": "also there are two services AWS code starring code star and cloud nine that",
    "start": "1895460",
    "end": "1900529"
  },
  {
    "text": "make it really easy to get started with service with coats code star you just",
    "start": "1900529",
    "end": "1905720"
  },
  {
    "text": "make a couple of choices in the console and in five minutes it gets you started with a full CI CD pipeline and a fully",
    "start": "1905720",
    "end": "1912169"
  },
  {
    "text": "working application and if you want a cloud IDE as well now cloud 9 is the cloud ID that comes",
    "start": "1912169",
    "end": "1919549"
  },
  {
    "text": "prepackaged with all the tools that you need it allows you to write run and debug code with just a browser and it",
    "start": "1919549",
    "end": "1926509"
  },
  {
    "text": "provides a seamless experience for developing service applications so",
    "start": "1926509",
    "end": "1931909"
  },
  {
    "text": "tomorrow when you're sitting in front of your IDE about to write a new app or feature I want to challenge you to",
    "start": "1931909",
    "end": "1938659"
  },
  {
    "text": "deliver it faster by making it serverless but also deliver it safely by implementing canario releases finally",
    "start": "1938659",
    "end": "1946639"
  },
  {
    "text": "please remember to bring your laptop next time you go skydiving because now",
    "start": "1946639",
    "end": "1952549"
  },
  {
    "text": "you can build anything serverless anytime anywhere to gain more confidence",
    "start": "1952549",
    "end": "1958759"
  },
  {
    "text": "and hands-on experience with a AWS access or digital training which is built by AWS experts at 10 or",
    "start": "1958759",
    "end": "1966169"
  },
  {
    "text": "instructor-led classes by qualified adel vision structures and learn how to design deploy and operate highly",
    "start": "1966169",
    "end": "1972830"
  },
  {
    "text": "available cost-effective and secure applications on a test and then you can validate your technical expertise with",
    "start": "1972830",
    "end": "1979490"
  },
  {
    "text": "AWS and use practice exams to help you prepare for an AWS certification a",
    "start": "1979490",
    "end": "1986559"
  },
  {
    "text": "device has a wide partner ecosystem to help you focus on your success and take",
    "start": "1986559",
    "end": "1992059"
  },
  {
    "text": "full advantage of all the business benefits that AWS has to offer learn more about the APN partners and",
    "start": "1992059",
    "end": "1998960"
  },
  {
    "text": "find the right APN partner for your needs by visiting the AWS APN booth at our showcase thank you",
    "start": "1998960",
    "end": "2007150"
  },
  {
    "text": "for attending the session I hope you have learned something and that you're going back to your desks feeling",
    "start": "2007150",
    "end": "2012610"
  },
  {
    "text": "empowered to go out and build something great thank you",
    "start": "2012610",
    "end": "2017880"
  }
]