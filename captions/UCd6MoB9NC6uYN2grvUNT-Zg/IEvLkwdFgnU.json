[
  {
    "text": "hi everybody welcome back in there I hope you enjoyed lunch so we're going to",
    "start": "3700",
    "end": "8870"
  },
  {
    "text": "kick off this afternoon sessions talking about Fargate and showing you some of the features it can do I've got a little",
    "start": "8870",
    "end": "15170"
  },
  {
    "text": "demo for you as well which fingers crossed works so we're going to talk",
    "start": "15170",
    "end": "20270"
  },
  {
    "text": "first of all about why did we build filegate you'll notice some concepts brought over from the State of the Union",
    "start": "20270",
    "end": "26809"
  },
  {
    "text": "chat this morning and then I'm going to do a bit of a deep dive into the internal workings of Fargate and how it",
    "start": "26809",
    "end": "32840"
  },
  {
    "text": "works and how you build your application and then we're going to put that into practice and actually do a demo and",
    "start": "32840",
    "end": "38570"
  },
  {
    "text": "launch a little chat application and this chat application you'll actually all be able to log into from the",
    "start": "38570",
    "end": "44149"
  },
  {
    "text": "audience if you've got your phones on you or your laptop so you can put rude messages up on the screen while I'm",
    "start": "44149",
    "end": "49670"
  },
  {
    "text": "speaking please don't you can put messages up on the screen while I'm speaking so first of all let's let's",
    "start": "49670",
    "end": "56510"
  },
  {
    "text": "talk about the motivation we've already already talked about this morning we're saying at first we had ec2 and this is a",
    "start": "56510",
    "end": "63620"
  },
  {
    "text": "great way to quickly launch and provision compute resource in the cloud but then people wanted to use that",
    "start": "63620",
    "end": "71360"
  },
  {
    "text": "resource more densely so docker came along and we could build containers and",
    "start": "71360",
    "end": "76460"
  },
  {
    "text": "we could run multiple containers on an ec2 instance we could get better bang for our buck on cost we could put more",
    "start": "76460",
    "end": "84050"
  },
  {
    "text": "containers on the same host run more work more workloads without them interfering with each other and better",
    "start": "84050",
    "end": "90320"
  },
  {
    "text": "use our CPU and and RAM resources on there so that was great but it was very very difficult to to",
    "start": "90320",
    "end": "97610"
  },
  {
    "text": "money set over a large fleet of service and that's where when the admin came",
    "start": "97610",
    "end": "103670"
  },
  {
    "text": "along and said says please make this easier for us we decided to build ETS now why am I talking to ETS this talks",
    "start": "103670",
    "end": "110930"
  },
  {
    "text": "about far gate well far gate is kind of an evolution of ECS he shares a lot of",
    "start": "110930",
    "end": "116150"
  },
  {
    "text": "the same principles and concepts and ways of building I touched on this earlier you can actually take a a CS",
    "start": "116150",
    "end": "123730"
  },
  {
    "text": "configuration task and you can change one line in it and deploy a far gate and",
    "start": "123730",
    "end": "128899"
  },
  {
    "text": "vice versa so they share a lot of compute principles there's a few little differences will point out as we go",
    "start": "128899",
    "end": "135230"
  },
  {
    "text": "along but we'll get there so why is managing the cluster difficult why do I keep saying this well let's",
    "start": "135230",
    "end": "142370"
  },
  {
    "text": "look on the hosts that were running we have an ec2 instance on there we",
    "start": "142370",
    "end": "147380"
  },
  {
    "text": "generally want to keep this kind of minimal we've got our operating system we've got the docker agent and then",
    "start": "147380",
    "end": "153860"
  },
  {
    "text": "we've got the ECS asian the ECS agent is a thing that talks back to our management control plane and says how",
    "start": "153860",
    "end": "161150"
  },
  {
    "text": "much resource are easy to instances got I also reports on the health of the tasks running on there and any other",
    "start": "161150",
    "end": "168830"
  },
  {
    "text": "constraints we put in it's also responsible for starting the docker containers on the host so it's a bit",
    "start": "168830",
    "end": "175459"
  },
  {
    "text": "than just a communication between the management control plane and ec2 but if we're bringing these et2 instances",
    "start": "175459",
    "end": "182930"
  },
  {
    "text": "across ourselves we've got to manage that we've got to patch the OS we've got to make sure we're running the latest",
    "start": "182930",
    "end": "188570"
  },
  {
    "text": "version of the docker agent and the ECS agent is up to date now a lot this is",
    "start": "188570",
    "end": "193790"
  },
  {
    "text": "quite simplified because if you use our AMI there's the SFM agent on there and",
    "start": "193790",
    "end": "199640"
  },
  {
    "text": "in the console you can actually just click things for like upgrade ECS agent and it'll happen for you magically in",
    "start": "199640",
    "end": "205760"
  },
  {
    "text": "the background very having to SSH into each box but OS updates and docker agent and decorating updates",
    "start": "205760",
    "end": "212000"
  },
  {
    "text": "you still got to manage that and this all becomes overhead and time consuming from an Operations point of view when",
    "start": "212000",
    "end": "218480"
  },
  {
    "text": "you could be out building the cool stuff instead you're looking after me current infrastructure you're not moving forward",
    "start": "218480",
    "end": "224510"
  },
  {
    "text": "just resume what I said they're doing",
    "start": "224510",
    "end": "230330"
  },
  {
    "text": "this across a fleet is huge and also picking the scale that you need to run",
    "start": "230330",
    "end": "235760"
  },
  {
    "text": "out and the right size of instances it's all time consuming it's all quite complicated and it's hard to get right",
    "start": "235760",
    "end": "242390"
  },
  {
    "text": "you have to try several iterations before you've got the perfect sized cluster and you know when your auto",
    "start": "242390",
    "end": "248060"
  },
  {
    "text": "scale events are going to be it's quite hard to manage all that yourself elastic container service made this a",
    "start": "248060",
    "end": "254570"
  },
  {
    "text": "lot easier but then Fargate made it even easier because all you're focusing on",
    "start": "254570",
    "end": "259760"
  },
  {
    "text": "now is your containers no longer you have to look after all this just instead",
    "start": "259760",
    "end": "265010"
  },
  {
    "text": "you've got Fargate you talk to easy s's as per normal same tool today",
    "start": "265010",
    "end": "270889"
  },
  {
    "text": "command-line tools but we just focus on our containers so Fargate basically",
    "start": "270889",
    "end": "277249"
  },
  {
    "text": "manages all your management infrastructure and your working outs if a mastic it's scales up and down",
    "start": "277249",
    "end": "283729"
  },
  {
    "text": "seamlessly in the background something you don't have to worry about yet again there's no scaling for you to do no",
    "start": "283729",
    "end": "289099"
  },
  {
    "text": "consideration for you to have to do this and it's really really well integrated with the AWS ecosystem iron permissions",
    "start": "289099",
    "end": "297830"
  },
  {
    "text": "for tasks elastic load balancer integration with the AWS of EPC",
    "start": "297830",
    "end": "303529"
  },
  {
    "text": "networking which is the only networking mode that works in Fargate you get your own elastic network interface into AWS",
    "start": "303529",
    "end": "311889"
  },
  {
    "text": "now that's kind of important because it's it's very low jitter low latency into our network and that means you get",
    "start": "311889",
    "end": "319370"
  },
  {
    "text": "a really really good speed on your connection to your tasks and your your",
    "start": "319370",
    "end": "324650"
  },
  {
    "text": "containers within also cloud watch for login it's integrated but it's a very",
    "start": "324650",
    "end": "329900"
  },
  {
    "text": "very easy to change to another login model fluently for example it's just a configuration change as you go along and",
    "start": "329900",
    "end": "335629"
  },
  {
    "text": "build you task definition but by default all that's there and very very easy to",
    "start": "335629",
    "end": "341300"
  },
  {
    "text": "use so what do we have here",
    "start": "341300",
    "end": "346999"
  },
  {
    "text": "we have our image repository ECR then we used to",
    "start": "346999",
    "end": "353929"
  },
  {
    "text": "have a way of hosting on ec2 and we managed that using the elastic container service we're bringing out eks that's",
    "start": "353929",
    "end": "361549"
  },
  {
    "text": "another management layer yet again uses ec2 for hosting Fargate fits in here Fargate is actually the hosting section",
    "start": "361549",
    "end": "368599"
  },
  {
    "text": "of this so whilst you don't manage et2 it sits on that same to here that's what",
    "start": "368599",
    "end": "374839"
  },
  {
    "text": "you've got to think about in terms of accessing Fargate in when you do stuff so let's talk about what we're going to",
    "start": "374839",
    "end": "383089"
  },
  {
    "text": "build first of all I'm gonna go through and I'm going to show you all the concepts that we're going to use in this",
    "start": "383089",
    "end": "388999"
  },
  {
    "text": "this particular demo we're going to look at permissions we're going to look at load balancer connectivity and running",
    "start": "388999",
    "end": "396019"
  },
  {
    "text": "containers and I've also dropped in at the last minute service discovery which is relatively new so let's keep our",
    "start": "396019",
    "end": "401959"
  },
  {
    "text": "fingers crossed that bit works so we're going to build a chat application and",
    "start": "401959",
    "end": "407119"
  },
  {
    "text": "it's a very very simple socket IO no Jess application I'm going to run it in",
    "start": "407119",
    "end": "412639"
  },
  {
    "text": "multiple containers on the front link to a load balancer and then at the back end I'm actually going to run Redis in my",
    "start": "412639",
    "end": "419449"
  },
  {
    "text": "Fargate cluster just so I can use service discovery if it's kind of doing this in the production environment I'd",
    "start": "419449",
    "end": "425659"
  },
  {
    "text": "probably consider using saint-like ElastiCache Redis there so I don't have to manage that side and back ups and the",
    "start": "425659",
    "end": "432319"
  },
  {
    "text": "cluster and the availability and the fire over I'd use a service to abstract that but for this demo it's gonna be",
    "start": "432319",
    "end": "438379"
  },
  {
    "text": "great because we're going to use the service discovery so our front-end containers can find the Redis hosts at",
    "start": "438379",
    "end": "444679"
  },
  {
    "text": "the backend and you'll be able to test this by logging in and doing stuff",
    "start": "444679",
    "end": "450289"
  },
  {
    "text": "so let's have a look at the constructs of Fargate to start with it's all very",
    "start": "450289",
    "end": "455360"
  },
  {
    "text": "similar you write a task definition a task definition is where you define your",
    "start": "455360",
    "end": "460749"
  },
  {
    "text": "application you say which images you're going to use for your particular container you put in memory constraints",
    "start": "460749",
    "end": "468469"
  },
  {
    "text": "and CPU constraints in there we then have a cluster and within that cluster",
    "start": "468469",
    "end": "474860"
  },
  {
    "text": "we've got a isolation boundary so if I create a cluster and name production and I launch a task in there if I launch",
    "start": "474860",
    "end": "483050"
  },
  {
    "text": "that very same task in a put in a cluster called dev there's an isolation",
    "start": "483050",
    "end": "488360"
  },
  {
    "text": "boundary those containers cannot cross and talk to each other unless you go in and explicitly do some complicated",
    "start": "488360",
    "end": "494389"
  },
  {
    "text": "things to make them connect and you've got iron permissions here as well so our",
    "start": "494389",
    "end": "501979"
  },
  {
    "text": "task is going to run in our cluster and that runs by a service being created the",
    "start": "501979",
    "end": "508999"
  },
  {
    "text": "service is what what the ECS side of things does the Fargate management",
    "start": "508999",
    "end": "514310"
  },
  {
    "text": "control plane tells our cluster that we want to run a few of these tasks it",
    "start": "514310",
    "end": "519318"
  },
  {
    "text": "might be we want to run multiple copies of this task throughout our cluster it will also talk to the elastic load",
    "start": "519319",
    "end": "525560"
  },
  {
    "text": "balancers and it will also keep track of the health of those tasks if one of those tasks become unhealthy it will",
    "start": "525560",
    "end": "531769"
  },
  {
    "text": "replace it somewhere else in the cluster for us so it's got a lot of important jobs to do the service and it's what",
    "start": "531769",
    "end": "537470"
  },
  {
    "text": "basically makes sure everything is working as should so this is very very",
    "start": "537470",
    "end": "544819"
  },
  {
    "text": "simple test definition snippets on here I've got a family it's an immutable",
    "start": "544819",
    "end": "551899"
  },
  {
    "text": "document in here I've versioned it with the name chap for my family and where I",
    "start": "551899",
    "end": "558980"
  },
  {
    "text": "list name chat app and an image and the image is my docker repository image in",
    "start": "558980",
    "end": "565760"
  },
  {
    "text": "there I could put up to ten containers and I could configure them differently and in there I can open different ports",
    "start": "565760",
    "end": "574459"
  },
  {
    "text": "for each containers I can give them different CPU and memory constraints a",
    "start": "574459",
    "end": "579529"
  },
  {
    "text": "container level I can also give the entire task memory and CPU constraints as well so",
    "start": "579529",
    "end": "587540"
  },
  {
    "text": "each container definition needs a name image URL and can go in to more detail",
    "start": "587540",
    "end": "594050"
  },
  {
    "text": "which we will do in a minute I'm quickly going to tell you about registry support in far gate while reddit so we support",
    "start": "594050",
    "end": "601580"
  },
  {
    "text": "easy are naturally because this is our product we also support public repositories so things like docker hub",
    "start": "601580",
    "end": "608570"
  },
  {
    "text": "in fact the readies container I'm going to pull down comes directly from docker hub and we're also working on",
    "start": "608570",
    "end": "614570"
  },
  {
    "text": "integration for third-party private repos as well so the far gate or the ECS",
    "start": "614570",
    "end": "619810"
  },
  {
    "text": "system will be able to login to private repositories be that private docker hub",
    "start": "619810",
    "end": "625010"
  },
  {
    "text": "or something like e dot IO it'll be able to log in there I'm not saying queda IO for you over there how American friend",
    "start": "625010",
    "end": "631870"
  },
  {
    "text": "ahem so that integration will be coming soon right let's dig into the compute side of",
    "start": "631870",
    "end": "639080"
  },
  {
    "text": "this what's happening now how are our containers running so I mentioned that",
    "start": "639080",
    "end": "645770"
  },
  {
    "text": "our containers can have CPU limits now one virtual CPU equals 1024 CP units and",
    "start": "645770",
    "end": "654290"
  },
  {
    "text": "our memories make measured in megabytes so let's let's add some some task level",
    "start": "654290",
    "end": "659930"
  },
  {
    "text": "resources here my task has two containers in this this example here can",
    "start": "659930",
    "end": "665780"
  },
  {
    "text": "maximum use one virtual CPU and maximum",
    "start": "665780",
    "end": "670880"
  },
  {
    "text": "used to gigabytes of memory on a container level I've out",
    "start": "670880",
    "end": "677089"
  },
  {
    "text": "said I'm gonna use quarter of a CPU for this first container and 512 maker",
    "start": "677089",
    "end": "683120"
  },
  {
    "text": "memory so that's a container restraint not a task restraint so you can get quite granular on how you extrange thing",
    "start": "683120",
    "end": "691459"
  },
  {
    "text": "x' here so if you've got a container that doesn't need very much resource tell it in this level it doesn't need",
    "start": "691459",
    "end": "696709"
  },
  {
    "text": "much resource and the container needs loads let that fill its boots and use everything now task CPU memory",
    "start": "696709",
    "end": "707089"
  },
  {
    "text": "configurations there are 50 different configurations you can actually use here so it starts off at 0.25 of a virtual",
    "start": "707089",
    "end": "715370"
  },
  {
    "text": "CPU and they can come in five twelve one gig or two gig memory sizes a member can",
    "start": "715370",
    "end": "724399"
  },
  {
    "text": "jump right up to the big boy at the end here which is four virtual CPUs and thirty gigabyte of RAM that'd be a",
    "start": "724399",
    "end": "731120"
  },
  {
    "text": "pretty big container and if anybody's got a use case for that I'd love to hear it because I want to know what you're",
    "start": "731120",
    "end": "736309"
  },
  {
    "text": "running in containers it takes that much but it'd be great fun to see it now",
    "start": "736309",
    "end": "742189"
  },
  {
    "text": "pricing wise you're going to pay for it you proceed provision and you'll build it a task level so if your task is five",
    "start": "742189",
    "end": "750529"
  },
  {
    "text": "containers in and between that you're using two virtual CPUs you'll get charged on the two virtual CPU total and",
    "start": "750529",
    "end": "757939"
  },
  {
    "text": "the memory total that you using there's also per second billion it's a one minute minimum but if you switch your",
    "start": "757939",
    "end": "765110"
  },
  {
    "text": "containers off one minute 20 seconds in you'll get charged for one minutes 20 seconds with a runtime there let's have",
    "start": "765110",
    "end": "773509"
  },
  {
    "text": "a look at the network so when you launch your far gate tasks you launch them into",
    "start": "773509",
    "end": "778939"
  },
  {
    "text": "subnets in my example I'm using all three availability zones I've got a subnet in each availability zone you'll",
    "start": "778939",
    "end": "784819"
  },
  {
    "text": "see that soon and what happens to that font 8 tasks when it runs an elastic",
    "start": "784819",
    "end": "791120"
  },
  {
    "text": "network interface gets attached to it and that will get a private IP optionally it can have a public IP as",
    "start": "791120",
    "end": "797209"
  },
  {
    "text": "well so that private IP will allow you",
    "start": "797209",
    "end": "802370"
  },
  {
    "text": "to natively access other ec2 or low bonuses or DynamoDB or other endpoints",
    "start": "802370",
    "end": "809059"
  },
  {
    "text": "in your V PC because you've effectively got a network interface in your virtual private cloud",
    "start": "809059",
    "end": "814430"
  },
  {
    "text": "so you've got you've got an IP address this matches the rest of your network so",
    "start": "814430",
    "end": "820400"
  },
  {
    "text": "you can use security groups and network access control lists to do your normal configuring of access through your",
    "start": "820400",
    "end": "827600"
  },
  {
    "text": "network the internet can come on a public IP direct to the eni if you want",
    "start": "827600",
    "end": "835520"
  },
  {
    "text": "it's also possible to do this in a in a private mode which we'll touch on in a minute",
    "start": "835520",
    "end": "841870"
  },
  {
    "text": "now let's have a look here when we configure our test definition right at",
    "start": "842560",
    "end": "848090"
  },
  {
    "text": "the top of the test definition we have network mode AWS VPC this is the only",
    "start": "848090",
    "end": "854270"
  },
  {
    "text": "mode that works with Fargate ECS supports more it supports bridge mode so",
    "start": "854270",
    "end": "861530"
  },
  {
    "text": "if anyone's ever done anything with docker before on their laptop bridge modes very similar to that you share the",
    "start": "861530",
    "end": "866600"
  },
  {
    "text": "network interface and you have a virtual interface that comes up on your machine and you route traffic via that host mode",
    "start": "866600",
    "end": "875080"
  },
  {
    "text": "basically pins everything to the hosts elastic network interface host an AWS",
    "start": "875080",
    "end": "881360"
  },
  {
    "text": "VPC a faster than bridge but AWS VPC is far more separated and each task gets",
    "start": "881360",
    "end": "887990"
  },
  {
    "text": "its own network interface so in my opinion it's one of the nicest modes and it also seamlessly extends your VPC into",
    "start": "887990",
    "end": "895880"
  },
  {
    "text": "your container world which makes the simplification of security rules and",
    "start": "895880",
    "end": "902180"
  },
  {
    "text": "network access control is so much easier you don't have to jump through hoops to",
    "start": "902180",
    "end": "908570"
  },
  {
    "text": "connect a container to a ec2 instance or to it RDS instance you can just use the",
    "start": "908570",
    "end": "915470"
  },
  {
    "text": "normal constructs we have which are security groups and network access control lists so this is a little bit of",
    "start": "915470",
    "end": "922280"
  },
  {
    "text": "example of when you launch you can specify what subnets you're going to put your application into if you're doing",
    "start": "922280",
    "end": "927440"
  },
  {
    "text": "this from the command line in this case I've just picked two subnet IDs here and I can specify a security group as well",
    "start": "927440",
    "end": "934640"
  },
  {
    "text": "from I for my launch we're actually going to launch in cloud formation I'll",
    "start": "934640",
    "end": "940550"
  },
  {
    "text": "tell you why in a moment so internet access now the elastic",
    "start": "940550",
    "end": "946999"
  },
  {
    "text": "network interface is used for all inbound and outbound traffic that tasks and that includes pulling the images",
    "start": "946999",
    "end": "953059"
  },
  {
    "text": "from ECR or public repository also pushing logs out to cloud watch that",
    "start": "953059",
    "end": "958549"
  },
  {
    "text": "elastic network interfaces used for that the underlying host doesn't handle any about traffic for you it all go through",
    "start": "958549",
    "end": "964759"
  },
  {
    "text": "your task elastic network interface and this is great for separation in one way",
    "start": "964759",
    "end": "969799"
  },
  {
    "text": "if you've got multiple tasks running on the same host we've all got their own network interface network wise and",
    "start": "969799",
    "end": "975919"
  },
  {
    "text": "they're not going to be competing for each other for resources so two common",
    "start": "975919",
    "end": "982429"
  },
  {
    "text": "setups we have private with no inbound internet traffic but allows out by an",
    "start": "982429",
    "end": "987679"
  },
  {
    "text": "access to the Internet and we have a public TAS with both inbound and outbound internet access so let's have a",
    "start": "987679",
    "end": "994699"
  },
  {
    "text": "look at a private test set up first in diagrams we've got our normal V PC setup",
    "start": "994699",
    "end": "1001299"
  },
  {
    "text": "here we've got a private subnet and we're going to use a public subnet here",
    "start": "1001299",
    "end": "1007580"
  },
  {
    "text": "and that gateway we've got outbound access to the internet through the Gateway but there's no direct inbound",
    "start": "1007580",
    "end": "1013459"
  },
  {
    "text": "traffic into this task going on here now if we want to make that a public task we",
    "start": "1013459",
    "end": "1020149"
  },
  {
    "text": "could run a far gate container in the public network give it elastic network",
    "start": "1020149",
    "end": "1025160"
  },
  {
    "text": "interface and give it a public IP address we set our security groups up",
    "start": "1025160",
    "end": "1030770"
  },
  {
    "text": "and are inbound security rules and we allow access to direct into that container from the internet now what I",
    "start": "1030770",
    "end": "1038390"
  },
  {
    "text": "do in my example is kind of a mix between these two I'm just going to roll you back to this one I have a setup like",
    "start": "1038390",
    "end": "1044959"
  },
  {
    "text": "this I run my Fargate tests in private subnets but I have an elastic load balancer in",
    "start": "1044959",
    "end": "1050929"
  },
  {
    "text": "the public subnet that connects through to this and that's a similar construct I use whenever I'm building anything in",
    "start": "1050929",
    "end": "1057410"
  },
  {
    "text": "AWS my in my view public subnet should hold in that gateways Bastion hosts and",
    "start": "1057410",
    "end": "1064360"
  },
  {
    "text": "elastic load balancers if you can avoid it don't run servers in your public",
    "start": "1064360",
    "end": "1070870"
  },
  {
    "text": "domain obviously if you're gonna run a VPN server that's gotta be there it's got a public access but don't run",
    "start": "1070870",
    "end": "1078380"
  },
  {
    "text": "servers in your public network run it in private use load balancers to point",
    "start": "1078380",
    "end": "1083419"
  },
  {
    "text": "pinholes through security groups into the private network this is great for security",
    "start": "1083419",
    "end": "1090460"
  },
  {
    "text": "so let's fast-forward through that again elastic load balancer configuration so",
    "start": "1091059",
    "end": "1097039"
  },
  {
    "text": "we can put that in there first of all we give our container a port MAP in and then when we create our service we can",
    "start": "1097039",
    "end": "1104570"
  },
  {
    "text": "tell it to go to a current load balancer we give it the AR and the amazon resource namespace we tell it what",
    "start": "1104570",
    "end": "1112580"
  },
  {
    "text": "container we're going to connect to and what what port our service then is responsible for telling the load",
    "start": "1112580",
    "end": "1119480"
  },
  {
    "text": "balancer about each version of the task that's spun up so for running three copies of that task this service will",
    "start": "1119480",
    "end": "1126379"
  },
  {
    "text": "basically register them all with the load balancer as we go through here is",
    "start": "1126379",
    "end": "1131809"
  },
  {
    "text": "this is how I set it up I knew I have the slide somewhere this is what I do I",
    "start": "1131809",
    "end": "1137000"
  },
  {
    "text": "have an elastic load balancer or a I'll be in this case in the public subnet and everything goes through to a private IP",
    "start": "1137000",
    "end": "1143870"
  },
  {
    "text": "in the background like that so let's talk about storage quickly I'm not going",
    "start": "1143870",
    "end": "1149840"
  },
  {
    "text": "to use any storage in my demo but let's talk about it very quickly so we've got",
    "start": "1149840",
    "end": "1157039"
  },
  {
    "text": "the ephemeral EBS backed storage and that's provided in the forms of you've",
    "start": "1157039",
    "end": "1162980"
  },
  {
    "text": "got writable layers for storage and you can have volume stories as well you",
    "start": "1162980",
    "end": "1168110"
  },
  {
    "text": "could attach an EBS volume directory or container so the layered storage if you",
    "start": "1168110",
    "end": "1173659"
  },
  {
    "text": "know how docker containers work which is going to be covered in the next session now you'll see how this works in there",
    "start": "1173659",
    "end": "1180350"
  },
  {
    "text": "and by default each task has a 10 gigabyte storage for all the containers",
    "start": "1180350",
    "end": "1187340"
  },
  {
    "text": "on their share that 10 gigabyte worth of space even though the containers are logically separated so if one of your",
    "start": "1187340",
    "end": "1194509"
  },
  {
    "text": "containers uses a lot of that space the others can use less it's what I'm trying to say there once you stop the",
    "start": "1194509",
    "end": "1202460"
  },
  {
    "text": "containers that ephemeral storage disappears is gone so you lose that if",
    "start": "1202460",
    "end": "1207769"
  },
  {
    "text": "you want persistent storage you're going to use volumes and you can have a mount",
    "start": "1207769",
    "end": "1213200"
  },
  {
    "text": "point whether that either be an EBS volume or a TFS mount that you want to",
    "start": "1213200",
    "end": "1219350"
  },
  {
    "text": "put into your containers you've got lots of options there or if you want to spin up your own stress cluster somewhere and connect",
    "start": "1219350",
    "end": "1226220"
  },
  {
    "text": "that hing you've got lots of lots of options here so let's skip through I am",
    "start": "1226220",
    "end": "1232399"
  },
  {
    "text": "permissions so I talked about iron permissions very very briefly we've got",
    "start": "1232399",
    "end": "1241100"
  },
  {
    "text": "different levels here we've got cluster permissions a course the permission is what access you has as developers have",
    "start": "1241100",
    "end": "1248659"
  },
  {
    "text": "to do stuff in that cluster can you start containers can you stop containers can you create services can you scale",
    "start": "1248659",
    "end": "1255679"
  },
  {
    "text": "all those kind of granule configurations and access controls that you need that's",
    "start": "1255679",
    "end": "1261860"
  },
  {
    "text": "your access into e CS and into file gate we then have application permissions and",
    "start": "1261860",
    "end": "1268490"
  },
  {
    "text": "that's what these containers can actually do and you can grant a I am",
    "start": "1268490",
    "end": "1275210"
  },
  {
    "text": "role to your entire task and then each container inside can also have a task",
    "start": "1275210",
    "end": "1280340"
  },
  {
    "text": "level permission on there which we'll cover in a second and then we have some housekeeping permissions now in Fargate",
    "start": "1280340",
    "end": "1287299"
  },
  {
    "text": "these are what we create automatically in the background and this is to allow the Fargate host that we create and",
    "start": "1287299",
    "end": "1293509"
  },
  {
    "text": "manage in the background for you to reach in and do things like pull your images from your ECR and push to your",
    "start": "1293509",
    "end": "1300799"
  },
  {
    "text": "cloud watch create the elastic network interfaces in your account that's what these permissions allow Fargate to do it",
    "start": "1300799",
    "end": "1308360"
  },
  {
    "text": "also allows it to talk to the low balances so cluster permissions it's",
    "start": "1308360",
    "end": "1314539"
  },
  {
    "text": "something that you can have a look at the example here and you can set up different access in here this one would",
    "start": "1314539",
    "end": "1320720"
  },
  {
    "text": "let you run a task within a particular cluster and in fact clusters named as",
    "start": "1320720",
    "end": "1325820"
  },
  {
    "text": "well this one here will only let you read the tasks and describe the task of",
    "start": "1325820",
    "end": "1332600"
  },
  {
    "text": "running the cluster you won't actually let you start any or delete any or scale anything so you can get quite granular",
    "start": "1332600",
    "end": "1338480"
  },
  {
    "text": "in this as you go along obviously they're very very simple examples you can have much bigger policies as you go",
    "start": "1338480",
    "end": "1344720"
  },
  {
    "text": "along this and many more like it says on the slide there so application permissions if we",
    "start": "1344720",
    "end": "1352980"
  },
  {
    "text": "look at a task role if you want your application to do something we're going to create an iron role and that's going",
    "start": "1352980",
    "end": "1360000"
  },
  {
    "text": "to give permissions to that particular container in my example I'm not going to actually do any extra permissions but",
    "start": "1360000",
    "end": "1367230"
  },
  {
    "text": "what you could say in this is that if my if i enhance my chat container so you",
    "start": "1367230",
    "end": "1373260"
  },
  {
    "text": "could upload an avatar if I want to save an avatar in persistent storage somewhere I'm going to write it 2 s 3 as",
    "start": "1373260",
    "end": "1379200"
  },
  {
    "text": "my cheapest option for storage so I would give my container permission to",
    "start": "1379200",
    "end": "1384390"
  },
  {
    "text": "write those little graphics out to out to s3 and then my application could",
    "start": "1384390",
    "end": "1389550"
  },
  {
    "text": "consume those images from there and serve them to to the general public let's have a look at one of these here",
    "start": "1389550",
    "end": "1396600"
  },
  {
    "text": "so this is a task level permission but I can put any at a scroll AR n now we can",
    "start": "1396600",
    "end": "1403590"
  },
  {
    "text": "go a little bit deeper this this is basically what allows your application",
    "start": "1403590",
    "end": "1408600"
  },
  {
    "text": "to access AWS services without having keys embedded in your code so if you've",
    "start": "1408600",
    "end": "1416130"
  },
  {
    "text": "ever spun up an ec2 instance and had an iron roll on it's the same thing I said",
    "start": "1416130",
    "end": "1422640"
  },
  {
    "text": "look our housekeeping permissions we have an execution role and that's used for pulling images and pushing cloud",
    "start": "1422640",
    "end": "1428490"
  },
  {
    "text": "watch and also ECS service linked role which does Eni management and ELB",
    "start": "1428490",
    "end": "1434460"
  },
  {
    "text": "management these are created for you in the background they're immutable you",
    "start": "1434460",
    "end": "1439559"
  },
  {
    "text": "can't can't change them so let's click through these because I really want to",
    "start": "1439559",
    "end": "1445350"
  },
  {
    "text": "get on to the demo and show you the demo and hope that cloud watch is going to be nice to me today so our execution role if we ever look on",
    "start": "1445350",
    "end": "1452850"
  },
  {
    "text": "this as well as well as a task for all we can have an execution role where we can give it read-only permission to certain to our ECR so we",
    "start": "1452850",
    "end": "1462960"
  },
  {
    "text": "couldn't push images back from from say our file get cluster it depends if you",
    "start": "1462960",
    "end": "1468000"
  },
  {
    "text": "want to use anything like automated build tools and your in your file get cluster",
    "start": "1468000",
    "end": "1474020"
  },
  {
    "text": "link's roll here we're going to quickly skip through these so we can get to the demo as well sorry I didn't mean to go that fast ahem",
    "start": "1475610",
    "end": "1481880"
  },
  {
    "text": "so we're trying to get rid of the need for API keys in code",
    "start": "1481880",
    "end": "1487760"
  },
  {
    "text": "and I say this a lot in every talk I do about every service please don't put",
    "start": "1487760",
    "end": "1493040"
  },
  {
    "text": "your API keys in your code all it takes if you use in things like github is one",
    "start": "1493040",
    "end": "1499190"
  },
  {
    "text": "little Miss configuration to accidentally make your repository public and there are BOTS ATS can get hover all",
    "start": "1499190",
    "end": "1506720"
  },
  {
    "text": "the time I think it helps I think like it's 30 seconds after you make a",
    "start": "1506720",
    "end": "1512750"
  },
  {
    "text": "repository public with your API keys in but most keys are discovered and consumed so if it was me doing that I'd",
    "start": "1512750",
    "end": "1521990"
  },
  {
    "text": "find your API keys and if they had a lot of permissions in there I'd spin up a lot of Bitcoin miners and GPU miners and",
    "start": "1521990",
    "end": "1527780"
  },
  {
    "text": "cost you a fortune and not really cost me anything so be very very careful with",
    "start": "1527780",
    "end": "1533059"
  },
  {
    "text": "that I am API I am users and I am groups are for us for",
    "start": "1533059",
    "end": "1540110"
  },
  {
    "text": "human beings and you have API keys for it where necessary roles are for",
    "start": "1540110",
    "end": "1545540"
  },
  {
    "text": "instances functions containers don't put API keys in code please so visibility",
    "start": "1545540",
    "end": "1553970"
  },
  {
    "text": "and monitoring by default we've got the AWS logs driver so any of your",
    "start": "1553970",
    "end": "1559520"
  },
  {
    "text": "containers an output to stand it out we click those logs and we push them into cloud watch logs it's really really",
    "start": "1559520",
    "end": "1566750"
  },
  {
    "text": "simple to do and I'm actually doing in my demo which is quite nice so we create a cloud watch group in this case my",
    "start": "1566750",
    "end": "1573080"
  },
  {
    "text": "group is called chat app I've set a region of where I'm going to push my log to and then my stream prefix for this is",
    "start": "1573080",
    "end": "1580100"
  },
  {
    "text": "going to be chat app as well and you've got to remember to add permissions for",
    "start": "1580100",
    "end": "1585650"
  },
  {
    "text": "that particular stream to your to your execution role if you've locked things down this isn't actually my chat app but",
    "start": "1585650",
    "end": "1594110"
  },
  {
    "text": "this is what it would look like you'd have if you log into the cloud watch console you'll be able to search for",
    "start": "1594110",
    "end": "1599270"
  },
  {
    "text": "your particular log stream go through find your logs and you've got centralized login so if you're running",
    "start": "1599270",
    "end": "1605210"
  },
  {
    "text": "multiple versions of your tasks in your containers we all get aggregated together you can search through them very nicely",
    "start": "1605210",
    "end": "1610970"
  },
  {
    "text": "and easily there's other visibility tools here so I mentioned this earlier",
    "start": "1610970",
    "end": "1616640"
  },
  {
    "text": "ECS emits a ton of cloud watch events there's a lot of things going on in the",
    "start": "1616640",
    "end": "1622429"
  },
  {
    "text": "background you can look in there what's happening in your infrastructure and your in your entire setup so have a look",
    "start": "1622429",
    "end": "1630320"
  },
  {
    "text": "at those and if you're using ETS not far gate you can do things on top there's a open source project called blocks which",
    "start": "1630320",
    "end": "1637309"
  },
  {
    "text": "is a way to like extend your scheduler and do some cool placement of your containers and also we admit CPU and",
    "start": "1637309",
    "end": "1646370"
  },
  {
    "text": "memory utilization metrics and we push those into cloud watch on a task level as well so you can see how much memory",
    "start": "1646370",
    "end": "1652850"
  },
  {
    "text": "and CPU your task is taking right we're going to do the demo so I'm going to switch over now I'm going to mirror my",
    "start": "1652850",
    "end": "1659030"
  },
  {
    "text": "screen and drop to the console one last thing I want to say is I'm gonna use cloud formation for this because in my",
    "start": "1659030",
    "end": "1665929"
  },
  {
    "text": "opinion everything you deploy should be templated whether it's cloud formation",
    "start": "1665929",
    "end": "1670970"
  },
  {
    "text": "or terraform I don't mind it's it's up to you you've got options but the beauty",
    "start": "1670970",
    "end": "1677840"
  },
  {
    "text": "of this is when you see when I launch my stacks I'm calling this a production snack even though it's really a demo if",
    "start": "1677840",
    "end": "1684830"
  },
  {
    "text": "I wanted to make a brand-new copy of my stack I changed one variable and I can",
    "start": "1684830",
    "end": "1690140"
  },
  {
    "text": "add a lot I can launch an identical environment for doing some dev and debug and testing and and digging in deeper by",
    "start": "1690140",
    "end": "1697010"
  },
  {
    "text": "changing one variable now that's really really powerful and it makes crash",
    "start": "1697010",
    "end": "1702380"
  },
  {
    "text": "recovery better it makes development better it just makes your whole lifecycle management of containers",
    "start": "1702380",
    "end": "1708559"
  },
  {
    "text": "better so cloud formation or terraform for the win right let's drop over to my",
    "start": "1708559",
    "end": "1715280"
  },
  {
    "text": "browser now so I'm going to now MIT on mirror my screen",
    "start": "1715280",
    "end": "1720820"
  },
  {
    "text": "here again I'll make this a little bit bigger for you as well so it's easier to read okay so I'm going to start off and",
    "start": "1722580",
    "end": "1729870"
  },
  {
    "text": "tell you what I've already got I've cloud formed a V PC it's a network",
    "start": "1729870",
    "end": "1736320"
  },
  {
    "text": "it's a 10.000 it's my 16 network I've",
    "start": "1736320",
    "end": "1741659"
  },
  {
    "text": "got in there six subnets two in each availability zone I've got three public",
    "start": "1741659",
    "end": "1748919"
  },
  {
    "text": "subnets I've got three private subnets and on top of that I've exposed a load",
    "start": "1748919",
    "end": "1756389"
  },
  {
    "text": "of a variable so I can find out in my outputs I can find out the name of my",
    "start": "1756389",
    "end": "1762510"
  },
  {
    "text": "subnets for example public subnet one public subnet two I can find my V PC ID",
    "start": "1762510",
    "end": "1768500"
  },
  {
    "text": "so i can consume these outputs now by this export name at the end here in my",
    "start": "1768500",
    "end": "1776070"
  },
  {
    "text": "other scripts and the first one i've got my other CloudFormation here is to create myself a Fargate cluster which",
    "start": "1776070",
    "end": "1783539"
  },
  {
    "text": "sounds crazy I've already said there's no infrastructure why am i creating a creating a namespace basically and if I",
    "start": "1783539",
    "end": "1789990"
  },
  {
    "text": "have a look in ETS you can see my cloud formed Fargate cluster that's because it's cloud form",
    "start": "1789990",
    "end": "1796940"
  },
  {
    "text": "that's why we've got that big long UID on the end of on the end of here and one",
    "start": "1796940",
    "end": "1802760"
  },
  {
    "text": "thing to notice here we give this view you can see how many tasks and services we've got one in Fargate type I",
    "start": "1802760",
    "end": "1809290"
  },
  {
    "text": "mentioned we could have hybrid clusters I want you to notice we've got no",
    "start": "1809290",
    "end": "1815300"
  },
  {
    "text": "infrastructure money we've got no container instances I'm not cheating here I'm using faregates I'm not using",
    "start": "1815300",
    "end": "1821480"
  },
  {
    "text": "any ec2 ECS instances in this case and one thing that what makes sense until I",
    "start": "1821480",
    "end": "1827690"
  },
  {
    "text": "go through and do a bit my other demo is just know I've got two hosted zones in my DNS at the moment I'm going to do",
    "start": "1827690",
    "end": "1833870"
  },
  {
    "text": "some service discovery that's going to create me a new host and so these hosted zones here are did you lucien to i/o and",
    "start": "1833870",
    "end": "1840320"
  },
  {
    "text": "production did you Lucien do I owe quite a mouthful to say they're the only two",
    "start": "1840320",
    "end": "1845660"
  },
  {
    "text": "zones I've got now the first stack I'm going to go and create here",
    "start": "1845660",
    "end": "1852630"
  },
  {
    "text": "is my Redis master service I was hoping",
    "start": "1852630",
    "end": "1857640"
  },
  {
    "text": "to bring some ready slaves to this but I couldn't get me working in time so we just got really smashed to running please forgive me and I'm going to go on",
    "start": "1857640",
    "end": "1864780"
  },
  {
    "text": "cloud form this now I've stopped it deliberately on a point on this",
    "start": "1864780",
    "end": "1870860"
  },
  {
    "text": "template error has never good unresolved dependencies service name let's fix this live let's let's try this so always good",
    "start": "1871140",
    "end": "1880410"
  },
  {
    "text": "fun I know what this is I was messing about with it last night midnight never good things anew so let's have a look at",
    "start": "1880410",
    "end": "1886710"
  },
  {
    "text": "our readies cluster in here I need an extra configuration now has",
    "start": "1886710",
    "end": "1894890"
  },
  {
    "text": "anyone used CloudFormation before excellent a few a few that's good that's",
    "start": "1894890",
    "end": "1901450"
  },
  {
    "text": "good I'm happy to hear that so this is a templating language basically that",
    "start": "1901450",
    "end": "1906580"
  },
  {
    "text": "allows us to define our AWS infrastructure",
    "start": "1906580",
    "end": "1911460"
  },
  {
    "text": "I'm just gonna put a random value and I don't believe it matters so I'm going to",
    "start": "1921250",
    "end": "1928840"
  },
  {
    "text": "save that right let's try that again no",
    "start": "1928840",
    "end": "1934530"
  },
  {
    "text": "fail to upload let's reload CloudFormation",
    "start": "1934530",
    "end": "1940380"
  },
  {
    "text": "I've got a back-up plan to get out of this don't worry",
    "start": "1944800",
    "end": "1949290"
  },
  {
    "text": "CAPITAL LETTERS yes see what I was doing now sir I was",
    "start": "1953230",
    "end": "1959520"
  },
  {
    "text": "hoping you'd find that and I'm pointing out it was a test honest can tell this",
    "start": "1959520",
    "end": "1966540"
  },
  {
    "text": "is my last session of the day default there we go let's try now",
    "start": "1966540",
    "end": "1974480"
  },
  {
    "text": "see if we cannot blow again ah well done guys you're actually the",
    "start": "1976480",
    "end": "1984730"
  },
  {
    "text": "most observant audience I've ever had this makes my life easier I'm normally panicking at this point",
    "start": "1984730",
    "end": "1992340"
  },
  {
    "text": "string here we go right somebody laughed did I get that",
    "start": "1993340",
    "end": "1999690"
  },
  {
    "text": "right excellent let's try",
    "start": "1999690",
    "end": "2004240"
  },
  {
    "text": "here we go is looking better right I'm gonna create",
    "start": "2004990",
    "end": "2010420"
  },
  {
    "text": "ready smash sir I've got some CPU and memory constraints here I've also settled the port for",
    "start": "2010420",
    "end": "2016360"
  },
  {
    "text": "Redis which is six three seven nine I'll put these in his defaults a lot of this",
    "start": "2016360",
    "end": "2021580"
  },
  {
    "text": "doesn't really matter we're gonna go through and just just consume all this I'm gonna skip over this because at the",
    "start": "2021580",
    "end": "2028360"
  },
  {
    "text": "moment I'm not putting any particular I am roles or permissions in as this demo like matures it'll get some of those in",
    "start": "2028360",
    "end": "2035320"
  },
  {
    "text": "and now I'll stop doing what I preach is best practice so we'll get updated so",
    "start": "2035320",
    "end": "2042070"
  },
  {
    "text": "I'm going to go through and create this I'm going to show you what's happening in the background now I have to",
    "start": "2042070",
    "end": "2047770"
  },
  {
    "text": "deliberately stopped at a certain point in this creation I've only created a task definition I have not created a",
    "start": "2047770",
    "end": "2054399"
  },
  {
    "text": "service on top and that's because I actually want to build the service in front of you and show you some of the new little bits and pieces we've got",
    "start": "2054400",
    "end": "2060610"
  },
  {
    "text": "built into Fargate and ECS with service discovery so what's going to be happening here we've got a crate",
    "start": "2060610",
    "end": "2066580"
  },
  {
    "text": "complete it's slightly relieved there if",
    "start": "2066580",
    "end": "2071740"
  },
  {
    "text": "I go into ETS now I'm gonna go to task definitions and in here I've got a test",
    "start": "2071740",
    "end": "2077230"
  },
  {
    "text": "definition called production you saw me type her after I got the default value correct so have a look in production",
    "start": "2077230",
    "end": "2085240"
  },
  {
    "text": "here and I've got a test definition bill my networking type is AWS VPC we can run",
    "start": "2085240",
    "end": "2093460"
  },
  {
    "text": "on ec2 or Fargate but I'm saying this as a far gate task that I'm running I've got some memory constraints and then",
    "start": "2093460",
    "end": "2099910"
  },
  {
    "text": "I've got my container definition as well which is that I'm going to use the ready to latest image that's going to get",
    "start": "2099910",
    "end": "2105970"
  },
  {
    "text": "pulled down from docker hub for us automatically in the background there's no other real things I need to do with",
    "start": "2105970",
    "end": "2111400"
  },
  {
    "text": "this what I need to do is turn this into a service so I'm going to hit create service I'm gonna let this set for a",
    "start": "2111400",
    "end": "2119080"
  },
  {
    "text": "minute otherwise you get an error on the console if you notice that if you're too quick it says it's not compatible and",
    "start": "2119080",
    "end": "2124210"
  },
  {
    "text": "then it decides it is so I'm going to hit Fargate and the test definition were using is production",
    "start": "2124210",
    "end": "2131079"
  },
  {
    "text": "and the platform is going to be the latest one and my cluster is a cluster",
    "start": "2131079",
    "end": "2137049"
  },
  {
    "text": "of preforms on here I'm gonna give it a service name of ready smash stir again and I'm gonna say I only want one copy",
    "start": "2137049",
    "end": "2145359"
  },
  {
    "text": "of this task running I only want one readies container running and I'm going to hit in the next step",
    "start": "2145359",
    "end": "2152859"
  },
  {
    "text": "now if I drop down here I need to select the right VPC and luckily I can remember",
    "start": "2152859",
    "end": "2160269"
  },
  {
    "text": "this we need subnet three four and five",
    "start": "2160269",
    "end": "2168380"
  },
  {
    "text": "these are my private subnets isolated here and I'm going to edit this security",
    "start": "2168890",
    "end": "2174590"
  },
  {
    "text": "group and select an existing one to cheat I select this one",
    "start": "2174590",
    "end": "2181720"
  },
  {
    "text": "and I don't want a public IP on this so I can disable this as well",
    "start": "2182779",
    "end": "2187839"
  },
  {
    "text": "I'm not linking a load balancer to this particular service but what I do want to do I want my for an end application",
    "start": "2187839",
    "end": "2195589"
  },
  {
    "text": "semester fine getting connected on port 63 79 so I'm going to enable service",
    "start": "2195589",
    "end": "2201349"
  },
  {
    "text": "discovery and I'm gonna tell it to create a new private namespace and this is going to be a route 53 zone and the",
    "start": "2201349",
    "end": "2209329"
  },
  {
    "text": "namespace is gonna be called a local the service discovery name I'm going to use he's already - master so DNS why is it",
    "start": "2209329",
    "end": "2217069"
  },
  {
    "text": "like readies - master dot local is what I'll be looking up to connect to and I'm",
    "start": "2217069",
    "end": "2223969"
  },
  {
    "text": "going to give this a 500 second TTL so let's see it next and next step again",
    "start": "2223969",
    "end": "2231549"
  },
  {
    "text": "skip over this pit and we're gonna take it to create the service so fingers",
    "start": "2231549",
    "end": "2240559"
  },
  {
    "text": "crossed time again we want to see lots of green here so we've created a private namespace we've done our service",
    "start": "2240559",
    "end": "2246079"
  },
  {
    "text": "discovery record and we've created the service now I'll click on View service",
    "start": "2246079",
    "end": "2251929"
  },
  {
    "text": "but I'm going to drop you in to route 53 and I'm going to update this page you'll",
    "start": "2251929",
    "end": "2256969"
  },
  {
    "text": "notice I've automatically got a new route 53 zone here which is local and if",
    "start": "2256969",
    "end": "2261979"
  },
  {
    "text": "I dig into this at the moment because my task hasn't come up yet I've not got the",
    "start": "2261979",
    "end": "2267949"
  },
  {
    "text": "record for ready semester but if we drop back to our easy s cluster we've now got",
    "start": "2267949",
    "end": "2275059"
  },
  {
    "text": "one service created here and we've got a pending task so if we wait a moment",
    "start": "2275059",
    "end": "2280159"
  },
  {
    "text": "what's actually happening in the background now I'm not cheated I've not done anything with pre-warming any",
    "start": "2280159",
    "end": "2286659"
  },
  {
    "text": "Fargate hosts this hasn't run for about 12 hours now so all the infrastructure",
    "start": "2286659",
    "end": "2291769"
  },
  {
    "text": "that was kind of provisioned and helped me in the backgrounds gone away far gate is provisioning some instances for me",
    "start": "2291769",
    "end": "2297589"
  },
  {
    "text": "underneath and it's now pulling these images of fresh for me so it's pulling the Redis image down off of docker so",
    "start": "2297589",
    "end": "2303949"
  },
  {
    "text": "there's a little bit of a cold start time here so if I keep refreshing this eventually I will get a pending task",
    "start": "2303949",
    "end": "2310579"
  },
  {
    "text": "pop-up while we're waiting for that I'm going to drop you in and I'm going to",
    "start": "2310579",
    "end": "2315589"
  },
  {
    "text": "show you the the chat service yeah Mille I'll make",
    "start": "2315589",
    "end": "2321020"
  },
  {
    "text": "this screen a little bit bigger for you as well so this is my CloudFormation template here for those of you you",
    "start": "2321020",
    "end": "2327470"
  },
  {
    "text": "haven't used this before at the top we've got parameters and this is where you can set some defaults or things you",
    "start": "2327470",
    "end": "2334940"
  },
  {
    "text": "can change and tweak in the console as you as you launch a particular stack and",
    "start": "2334940",
    "end": "2341710"
  },
  {
    "text": "as we go down I'll point out some some important ones here I've got one here",
    "start": "2341710",
    "end": "2347390"
  },
  {
    "text": "called desired count now this is my chat application I want to run three versions of my tasks so I've like pre-programmed",
    "start": "2347390",
    "end": "2354200"
  },
  {
    "text": "that in there and stuck it in we've then got some resources my resources are",
    "start": "2354200",
    "end": "2360470"
  },
  {
    "text": "things like log groups and a task definition that's that bit I showed you in the console that I wasn't turned into",
    "start": "2360470",
    "end": "2365780"
  },
  {
    "text": "a service but on this template I've gone one step further and I've actually cloud for my service as well and this this",
    "start": "2365780",
    "end": "2373970"
  },
  {
    "text": "cloud formation will connect me to a load balancer it'll run the desired",
    "start": "2373970",
    "end": "2379190"
  },
  {
    "text": "count which is three which I pointed out earlier so it'll make sure I've got three copies of my tasks running and",
    "start": "2379190",
    "end": "2385480"
  },
  {
    "text": "another little thing I did and I added to this here's a load balancer definition to tell how it's connected up",
    "start": "2385480",
    "end": "2392620"
  },
  {
    "text": "if I scroll down I'm going to create a public DNS record now I'm gonna create a",
    "start": "2392620",
    "end": "2400570"
  },
  {
    "text": "DNS record called Fargate chat did you Lucian do i oh",
    "start": "2400570",
    "end": "2406400"
  },
  {
    "text": "I'll put that up a bit later so you can all try and log in and see it so I'm going to create some DNS as well one I'm",
    "start": "2406400",
    "end": "2412220"
  },
  {
    "text": "creating this and then this section here is about Auto scale alarms and that we're not going to demo that today but",
    "start": "2412220",
    "end": "2417860"
  },
  {
    "text": "I've basically allowed for this particular demo that if we get a lots of users in we can create Auto scale alarms",
    "start": "2417860",
    "end": "2424490"
  },
  {
    "text": "and we'll have more than three copies of my tasks running and it will scale back down as well so we're going to cross our",
    "start": "2424490",
    "end": "2431210"
  },
  {
    "text": "fingers and we're going to go back here and we've got one running task yes this",
    "start": "2431210",
    "end": "2436340"
  },
  {
    "text": "is going well so far I've got a ready server running and if I have a bit of an update on this you'll see here I've got",
    "start": "2436340",
    "end": "2443300"
  },
  {
    "text": "a new DNS record and I've got ready - master local and it's got a 10.0 dot 3.0",
    "start": "2443300",
    "end": "2450530"
  },
  {
    "text": "five address that's in my VPC and that's the power they last in network interface",
    "start": "2450530",
    "end": "2455570"
  },
  {
    "text": "being connected into that task I've got a real IP in my network I've not got some officer gated network that I've got",
    "start": "2455570",
    "end": "2463340"
  },
  {
    "text": "to do some funky routing to get into right let's put the last bit of this up now I'm going to create this stack and",
    "start": "2463340",
    "end": "2470930"
  },
  {
    "text": "this one's quite nice because it does a lot of stuff for me and ID after doing the console I'm gonna create my chat",
    "start": "2470930",
    "end": "2476150"
  },
  {
    "text": "service and I'm going to open that and in here a stack name I'm going to",
    "start": "2476150",
    "end": "2483310"
  },
  {
    "text": "call it the chat app and that's just what home that's just what my cloud formation is going to refer to it has",
    "start": "2483310",
    "end": "2489460"
  },
  {
    "text": "I've got this desired count here three now showed you that was in my parameters at the top if I actually changed my mind",
    "start": "2489460",
    "end": "2496120"
  },
  {
    "text": "here and decided want a six I can update it before I hit go so let's just put it",
    "start": "2496120",
    "end": "2501730"
  },
  {
    "text": "back to a normal three and let's go for it now this is the important bit my",
    "start": "2501730",
    "end": "2508480"
  },
  {
    "text": "application takes an environmental variable it gets passed to the docker container so if you're doing this on",
    "start": "2508480",
    "end": "2513730"
  },
  {
    "text": "there on a local docker install this is where you have there - 'flag and then",
    "start": "2513730",
    "end": "2519010"
  },
  {
    "text": "you have st. called ready send point equals Redis - master don't clean my",
    "start": "2519010",
    "end": "2524020"
  },
  {
    "text": "case so this is going to pass that into docker for me I'm going to hit next I'm",
    "start": "2524020",
    "end": "2530860"
  },
  {
    "text": "just going to check I've got everything go okay on that this should be Version three of my",
    "start": "2530860",
    "end": "2536790"
  },
  {
    "text": "container excellent",
    "start": "2536790",
    "end": "2542210"
  },
  {
    "text": "next again and skip through this",
    "start": "2542210",
    "end": "2546160"
  },
  {
    "text": "a so this would take slightly longer to do but what I'm hoping for this to",
    "start": "2547290",
    "end": "2552780"
  },
  {
    "text": "create I'm hoping for it to create me a new task a task definition that comes up",
    "start": "2552780",
    "end": "2558120"
  },
  {
    "text": "it's gonna create a service it's going to make sure three copies of that task is running it's gonna register them all",
    "start": "2558120",
    "end": "2564930"
  },
  {
    "text": "with my alb and it's also going to create me a DNS record for my lb as well",
    "start": "2564930",
    "end": "2571260"
  },
  {
    "text": "to make things nice and easy for the for the rest of the demo so let's just have a little bit of a refresh on on here and",
    "start": "2571260",
    "end": "2577530"
  },
  {
    "text": "we'll see what's going on you can now see we've got two services registered to Fargate and I've got three pending tasks",
    "start": "2577530",
    "end": "2584100"
  },
  {
    "text": "this is my chat application starting to spin up now depending on the day that",
    "start": "2584100",
    "end": "2590130"
  },
  {
    "text": "can either be really quick like that or take ages so here we go we've got form",
    "start": "2590130",
    "end": "2595650"
  },
  {
    "text": "running excellent let's just have a quick check back here and let's see the",
    "start": "2595650",
    "end": "2601020"
  },
  {
    "text": "progress of this so there's still some DNS stuff happening and there's still some linking with my load balancer done",
    "start": "2601020",
    "end": "2606570"
  },
  {
    "text": "so I'm not going to jump the gun and poison my DNS with a record that can't be looked up which I've done before all",
    "start": "2606570",
    "end": "2613020"
  },
  {
    "text": "alive I'm gonna wait until this crate is finished I'm gonna be patient person so",
    "start": "2613020",
    "end": "2619890"
  },
  {
    "text": "this is coming up and it's taking advantage of service discovery I don't",
    "start": "2619890",
    "end": "2625920"
  },
  {
    "text": "have to take advantage of service discovery I've got a version of this demo where I spin up an elastic cache",
    "start": "2625920",
    "end": "2631740"
  },
  {
    "text": "cluster for Redis instead and from that cloud formation I actually expose a",
    "start": "2631740",
    "end": "2636750"
  },
  {
    "text": "variable like I did from the production VPC to the cluster and I consume that in",
    "start": "2636750",
    "end": "2642810"
  },
  {
    "text": "my chat application instead but I just wanted to demonstrate this new cool feature which is service discovery",
    "start": "2642810",
    "end": "2648360"
  },
  {
    "text": "because a lot of people will say I need a service mesh my containers well I",
    "start": "2648360",
    "end": "2653850"
  },
  {
    "text": "would say you've not got a scalable DNS infrastructure that you can use properly if you're looking to use a service mesh",
    "start": "2653850",
    "end": "2659910"
  },
  {
    "text": "you need to use primitives don't over complex don't make it over complex use",
    "start": "2659910",
    "end": "2666330"
  },
  {
    "text": "DNS that's what it's there for discovering services okay that we've got a crate complete this is going well now",
    "start": "2666330",
    "end": "2672270"
  },
  {
    "text": "after the initial test I did on all of you so I'm gonna go here now first of",
    "start": "2672270",
    "end": "2678300"
  },
  {
    "text": "all I'm going to show you we got everything running it's all looking happy if I want to dig into this",
    "start": "2678300",
    "end": "2683900"
  },
  {
    "text": "I can dig into my Fargate chat and I can actually look at my three tasks that I",
    "start": "2683900",
    "end": "2690680"
  },
  {
    "text": "run in I can see which version of the test definition they are you can see I've done this demo sixteen times now",
    "start": "2690680",
    "end": "2695870"
  },
  {
    "text": "and I can see things like I'm running on platform 1.1 and and other bits of information that you can customize a",
    "start": "2695870",
    "end": "2701900"
  },
  {
    "text": "little bit I can also drop out to my logs and I can have a look at what my",
    "start": "2701900",
    "end": "2707990"
  },
  {
    "text": "logs are pushing out from each task why I've only got two and not three I don't know maybe it's just a delay in the",
    "start": "2707990",
    "end": "2713210"
  },
  {
    "text": "console but this server listening that port 3000 that was put into standard out",
    "start": "2713210",
    "end": "2720260"
  },
  {
    "text": "in my docker container it's been picked up by cloud watch logs and it's now in this so moment of truth everyone I'm",
    "start": "2720260",
    "end": "2728870"
  },
  {
    "text": "going to go to far gate - chat is that big enough to read",
    "start": "2728870",
    "end": "2735200"
  },
  {
    "text": "did you Lucian dot IO and if you go to this on your phones or on your laptops it will also work so I'm hoping there",
    "start": "2735200",
    "end": "2742550"
  },
  {
    "text": "Brent's gonna join at least and I'll have somebody to talk to on this chat so I'm going to go here and the first thing",
    "start": "2742550",
    "end": "2748310"
  },
  {
    "text": "it's going to ask is what's your nickname and I'm gonna say brick cuz that's my name so hit enter here I wait",
    "start": "2748310",
    "end": "2755990"
  },
  {
    "text": "for this to resolve on the network nervously now doesn't normally take this",
    "start": "2755990",
    "end": "2763070"
  },
  {
    "text": "long you",
    "start": "2763070",
    "end": "2768940"
  },
  {
    "text": "it's Fargate - chat dot digi Lucien dot",
    "start": "2769700",
    "end": "2775619"
  },
  {
    "text": "IO I'm just gonna refresh my page here a second yeah thank goodness for that",
    "start": "2775619",
    "end": "2783330"
  },
  {
    "text": "Thank You Josh it's working so if I say hello here we can all see each other",
    "start": "2783330",
    "end": "2789540"
  },
  {
    "text": "type in first person any types of rude word or now I'm gonna I'm just gonna pretend it's not there",
    "start": "2789540",
    "end": "2795210"
  },
  {
    "text": "type in Jim and I won't understand so this is our little app working in the",
    "start": "2795210",
    "end": "2800369"
  },
  {
    "text": "background and I'm not really on any infrastructure I'm gonna prove that I'm gonna go into my AWS console I'm gonna",
    "start": "2800369",
    "end": "2809430"
  },
  {
    "text": "go to ec2 and instances and this is",
    "start": "2809430",
    "end": "2814530"
  },
  {
    "text": "where I hope I'm not left to anything running in here yes no running instances I have no ec2",
    "start": "2814530",
    "end": "2819780"
  },
  {
    "text": "instances that I'm paying for I'm just paying for those individual containers running I've not got to patch anything",
    "start": "2819780",
    "end": "2825780"
  },
  {
    "text": "I'm not going to worry about agents I'm not going to worry about OS updates and and libraries being out a day open SSL",
    "start": "2825780",
    "end": "2832440"
  },
  {
    "text": "all of that worries gone someone's looking after for it for me I'm just looking after my containers so I've got",
    "start": "2832440",
    "end": "2838590"
  },
  {
    "text": "an infrastructure there by just giving containers to the service and that lets",
    "start": "2838590",
    "end": "2843900"
  },
  {
    "text": "me just focus on my container I can now go away and improve the application so",
    "start": "2843900",
    "end": "2850950"
  },
  {
    "text": "now one of the things we get asked a lot is how do I get into that container running Fargate to debug it",
    "start": "2850950",
    "end": "2857270"
  },
  {
    "text": "the proper answer is you shouldn't ever exact into a container in production to",
    "start": "2857270",
    "end": "2863609"
  },
  {
    "text": "do debug you should have a proper centralized login structure and collate",
    "start": "2863609",
    "end": "2868950"
  },
  {
    "text": "your logs and you say hello like elasticsearch to go through or cloud watch logs in and look at your logs",
    "start": "2868950",
    "end": "2875069"
  },
  {
    "text": "properly now I told you I came from a Cuban eTI's background I got very very",
    "start": "2875069",
    "end": "2880559"
  },
  {
    "text": "lazy Cuba Nettie's has got a very cool tool called cube control and you can do a cube control exec give it a container",
    "start": "2880559",
    "end": "2887940"
  },
  {
    "text": "name and then say bash and you can drop directly into a container wherever it's",
    "start": "2887940",
    "end": "2893010"
  },
  {
    "text": "running in your infrastructure really really cool but it made me a very lazy ops person because I'd go in our debug",
    "start": "2893010",
    "end": "2900059"
  },
  {
    "text": "so here come a container I might do a little bit of a hotfix to make it keep mine in production and then someone",
    "start": "2900059",
    "end": "2906630"
  },
  {
    "text": "would come and talk to me I'd forget to commit that change back to our git repo when all the containers restarted it all",
    "start": "2906630",
    "end": "2913319"
  },
  {
    "text": "broke again when I moved to start using ECS for demos I couldn't do that anymore and my",
    "start": "2913319",
    "end": "2919799"
  },
  {
    "text": "first reaction was this is massively frustrating but then it's like actually",
    "start": "2919799",
    "end": "2925770"
  },
  {
    "text": "I'm doing it the proper way now I've had to look at my logs there's a problem let's go and fix it in git let's do a",
    "start": "2925770",
    "end": "2931950"
  },
  {
    "text": "proper redeploy using up my CI CD pipeline and it made me a little bit tidier as a admin so whilst it felt like",
    "start": "2931950",
    "end": "2940319"
  },
  {
    "text": "a constraint I actually now welcome that to come in and I don't know it's it's",
    "start": "2940319",
    "end": "2947280"
  },
  {
    "text": "something I've grown to love if the feature was to come out and ECS I would be very happy but you've got to ask some",
    "start": "2947280",
    "end": "2953069"
  },
  {
    "text": "of the team about that so we're throw that one over to you feature requests this man here one last thing I'm going",
    "start": "2953069",
    "end": "2960809"
  },
  {
    "text": "to show you because we've got a bit of time I talked about our ETS cluster and I talked about how we could have a",
    "start": "2960809",
    "end": "2969750"
  },
  {
    "text": "hybrid cluster if you look at the state of my cluster now I've got no container",
    "start": "2969750",
    "end": "2975900"
  },
  {
    "text": "instances so if I wanted to move my workload into ec2 so I could ssh to that",
    "start": "2975900",
    "end": "2982140"
  },
  {
    "text": "box and use docker exec to get into the container and do naughty things with bash I could but I don't have any",
    "start": "2982140",
    "end": "2989770"
  },
  {
    "text": "container instances I can't SSH into Fargate so I'm gonna move my workload and I'm going to try and do stuff I'm",
    "start": "2989770",
    "end": "2995559"
  },
  {
    "text": "not actually gonna move my workload now but I'm going to show how easy it is to build a hybrid cluster so if I go back",
    "start": "2995559",
    "end": "3001470"
  },
  {
    "text": "to cloud formation here I'm going to create one less stack and I'll show this",
    "start": "3001470",
    "end": "3008160"
  },
  {
    "text": "this as well and I've got ECS cluster piano I'm going to open this",
    "start": "3008160",
    "end": "3016068"
  },
  {
    "text": "the name",
    "start": "3019940",
    "end": "3022270"
  },
  {
    "text": "you and I could override the the size of my",
    "start": "3027150",
    "end": "3032660"
  },
  {
    "text": "instances here so a might actually say I don't want to see for Excel I'm gonna override it enough at sorry for lives",
    "start": "3032660",
    "end": "3038300"
  },
  {
    "text": "I'm gonna have a C for Excel mainly because I'm not paying this AWS but also let's spin that up and I'm just gonna",
    "start": "3038300",
    "end": "3046580"
  },
  {
    "text": "pick one of my generic Fargate container security groups it doesn't matter for",
    "start": "3046580",
    "end": "3052970"
  },
  {
    "text": "this particular demo because we're not going to do anything with it but I'm gonna say i want three servers on this so I'm gonna go along here I'm gonna hit",
    "start": "3052970",
    "end": "3059450"
  },
  {
    "text": "next and I'm going to hit next again acknowledge that I'm creating some iron",
    "start": "3059450",
    "end": "3065600"
  },
  {
    "text": "rolls here and say create what's going to happen in the background here now is cloud formation is actually going to",
    "start": "3065600",
    "end": "3071330"
  },
  {
    "text": "provision some ec2 instances for me and it's going to connect them to the ECS",
    "start": "3071330",
    "end": "3077060"
  },
  {
    "text": "management control plane so my management control plane is going to be dealing with both Fargate and ECS type",
    "start": "3077060",
    "end": "3083390"
  },
  {
    "text": "instances so when i supply a task all i do is tell it which launch type i",
    "start": "3083390",
    "end": "3088610"
  },
  {
    "text": "want and ECS management control plane knows whether to put it on far gate or to push it out to ec2 for me so I can",
    "start": "3088610",
    "end": "3095840"
  },
  {
    "text": "move workloads back and forth between the two environments as much as I I wish",
    "start": "3095840",
    "end": "3100900"
  },
  {
    "text": "so let's have a quick refresh on a this might take some time like might not complete but if we drop into ec2 now",
    "start": "3100900",
    "end": "3112599"
  },
  {
    "text": "hopefully will I get some pending instances very very shortly while we're waiting for that let's just drop very",
    "start": "3113339",
    "end": "3120099"
  },
  {
    "text": "very quickly back to the slides and I'll show that at the end and we'll do a little bit of very",
    "start": "3120099",
    "end": "3125430"
  },
  {
    "text": "[Music] a little bit of a washer piercer I'm gonna go Oh automatic switch to",
    "start": "3125430",
    "end": "3132740"
  },
  {
    "text": "presentation mode a quite impressive man so we've seen our demo we've leveraged",
    "start": "3132740",
    "end": "3138810"
  },
  {
    "text": "conformation let's have a quick look at the summary before we drop back to the browser never lock so far gate is a new",
    "start": "3138810",
    "end": "3146370"
  },
  {
    "text": "launch type for ETS it uses all the same management control plane it uses the",
    "start": "3146370",
    "end": "3152400"
  },
  {
    "text": "same CLI tools you can leverage everything you've used before you can just change one line in it and correct",
    "start": "3152400",
    "end": "3158850"
  },
  {
    "text": "it same we terraform you just change one line launch type from et2 to Fargate and",
    "start": "3158850",
    "end": "3164160"
  },
  {
    "text": "you can launch same integrations with AWS and ec and ECS apart from the load",
    "start": "3164160",
    "end": "3171960"
  },
  {
    "text": "balancers as a little idiosyncrasy there with one being allowed to use elastic load balancers and one not being allowed",
    "start": "3171960",
    "end": "3179310"
  },
  {
    "text": "to use last load balancers Fargate can use a lbs and n lbs whereas ECS can use a lbs as well",
    "start": "3179310",
    "end": "3188330"
  },
  {
    "text": "there's very easy migration between the two of them if you're debating whether",
    "start": "3188330",
    "end": "3194520"
  },
  {
    "text": "to use ec2 or farg a start off with Fargate if you've got a need to then",
    "start": "3194520",
    "end": "3201480"
  },
  {
    "text": "drop into your containers and do extra things or tweak kernel parameters that's",
    "start": "3201480",
    "end": "3207270"
  },
  {
    "text": "when you move too easy too I would say don't give yourself the heavy lifting of managing worker notes if you can avoid",
    "start": "3207270",
    "end": "3213450"
  },
  {
    "text": "it concentrate on your application",
    "start": "3213450",
    "end": "3217190"
  },
  {
    "text": "really really really have to have that underline access to far gate it doesn't work I talked about the good reasons for",
    "start": "3219770",
    "end": "3227510"
  },
  {
    "text": "not being able to get in but I talked about the hybrid clusters as well as a get-out-of-jail-free card there almost",
    "start": "3227510",
    "end": "3233480"
  },
  {
    "text": "if you need to move it to ET to so you can get into a container you can do and",
    "start": "3233480",
    "end": "3238720"
  },
  {
    "text": "you can start using far gate today in u.s. East one it's great it's great fun",
    "start": "3238720",
    "end": "3246140"
  },
  {
    "text": "to play with and it's super simple just to get started even if you're not going to cloud form it log into the console",
    "start": "3246140",
    "end": "3252080"
  },
  {
    "text": "switch to North Virginia on your region and click the launch cluster and it's there the best bit about that is as long",
    "start": "3252080",
    "end": "3259640"
  },
  {
    "text": "as you're not running any containers there's no bill con associated with that as well so you can at least have a play",
    "start": "3259640",
    "end": "3265400"
  },
  {
    "text": "around the command line tools and get familiar with what's there I mentioned",
    "start": "3265400",
    "end": "3271190"
  },
  {
    "text": "this before this is Nathan pecks github account if you go on here it's a big",
    "start": "3271190",
    "end": "3277460"
  },
  {
    "text": "list of instructions and tutorials and demos and explanations about networking",
    "start": "3277460",
    "end": "3283360"
  },
  {
    "text": "as you scroll down this you can click whether you want to talk about far gay or ACS you can pick whether you want a",
    "start": "3283360",
    "end": "3290210"
  },
  {
    "text": "public deployment of ECS or forget or you want to run in a private network and it will give you different instructions",
    "start": "3290210",
    "end": "3296600"
  },
  {
    "text": "of how to do that it's a great set of resources and I relied on this heavily",
    "start": "3296600",
    "end": "3301610"
  },
  {
    "text": "so I could ramp up on this product so it's great to have a look at let's drop",
    "start": "3301610",
    "end": "3307070"
  },
  {
    "text": "back quickly to our our slide our",
    "start": "3307070",
    "end": "3312100"
  },
  {
    "text": "browser and let's see if our cloud formations finished",
    "start": "3312100",
    "end": "3317260"
  },
  {
    "text": "to do right I've got some instances starting so my cloud formation is creating me three instances it's nicely",
    "start": "3317260",
    "end": "3324010"
  },
  {
    "text": "spread them out in US east 1a 1b and 1c they're just starting up so they may",
    "start": "3324010",
    "end": "3329770"
  },
  {
    "text": "have not registered themselves with the cluster yet I have we've got no date",
    "start": "3329770",
    "end": "3335830"
  },
  {
    "text": "about from here but now I've got here three container instances so my one Fargate so my one ECS cluster you can",
    "start": "3335830",
    "end": "3343780"
  },
  {
    "text": "now launch both Fargate workload types and ec2 workload types so I've got a",
    "start": "3343780",
    "end": "3349240"
  },
  {
    "text": "hybrid cluster very very quickly and very easily so have a play about with",
    "start": "3349240",
    "end": "3354850"
  },
  {
    "text": "that it's great for them to play with and you'll get extra memory and CPU",
    "start": "3354850",
    "end": "3360220"
  },
  {
    "text": "utilization wants all this registers itself so you can see how much of ec2 you're using the thing to think about",
    "start": "3360220",
    "end": "3366790"
  },
  {
    "text": "with ec2 is you're paying for the instances underneath Fargate you paying a container level so that's worth taking",
    "start": "3366790",
    "end": "3373570"
  },
  {
    "text": "in consideration I've only got one last slide for you so",
    "start": "3373570",
    "end": "3379120"
  },
  {
    "text": "[Music] here we go thank you very much abbs to",
    "start": "3379120",
    "end": "3384330"
  },
  {
    "text": "amazon.com / Fargate do feel free to reach out to me on Twitter and ask me any questions and thank you very much I",
    "start": "3384330",
    "end": "3391410"
  },
  {
    "text": "hope you enjoyed that session Cheers [Applause]",
    "start": "3391410",
    "end": "3400260"
  }
]