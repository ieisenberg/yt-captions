[
  {
    "start": "0",
    "end": "104000"
  },
  {
    "text": "well we hope you're enjoying your reinvent so far my name is Justin pearl and I'm Vladimir Buddha love and thank",
    "start": "30",
    "end": "6660"
  },
  {
    "text": "you for joining us today by show of hands how many of you are working on apps where users need to sign in and",
    "start": "6660",
    "end": "13740"
  },
  {
    "text": "sign up so 95 plus percent okay and of",
    "start": "13740",
    "end": "19289"
  },
  {
    "text": "those apps how many of your users do you need to have different permissions in your apps for different users okay so",
    "start": "19289",
    "end": "26640"
  },
  {
    "text": "the majority be as well well today we're here to share best practices and tips on how you can accomplish these goals in a",
    "start": "26640",
    "end": "33360"
  },
  {
    "text": "secure and serverless wait this talk is modeled after a talk from reinvent 2016",
    "start": "33360",
    "end": "39170"
  },
  {
    "text": "but many change many services and features have changed since then so if some of this content looks familiar to",
    "start": "39170",
    "end": "45329"
  },
  {
    "text": "you realize there's a lot of new stuff we'll be demoing and talking about today as well to make this real what we've",
    "start": "45329",
    "end": "52649"
  },
  {
    "text": "done is to walk from a perspective of building an app in this case a hybrid mobile app using JavaScript SDKs behind",
    "start": "52649",
    "end": "59820"
  },
  {
    "text": "the scenes from start to finish of you know starting with sign up and other concerns as we go and this app and all",
    "start": "59820",
    "end": "66510"
  },
  {
    "text": "the demos you see today are available for use now on github at eight abuse labs and we'll have this again for any",
    "start": "66510",
    "end": "73350"
  },
  {
    "text": "photos at the end but just know do try this at home all of the source code of all that you see is available for your use to",
    "start": "73350",
    "end": "80130"
  },
  {
    "text": "accelerate your development under the Apache 2 license just so you know space",
    "start": "80130",
    "end": "85439"
  },
  {
    "text": "Finder is a conference room finder application so a simple app to find a",
    "start": "85439",
    "end": "90810"
  },
  {
    "text": "conference room book a conference room etc so you'll see how the identity",
    "start": "90810",
    "end": "96840"
  },
  {
    "text": "concern plays throughout and to talk you through more about how we approach identity alternative Lattimore so",
    "start": "96840",
    "end": "105200"
  },
  {
    "text": "imagine you're sitting at your desk drinking a cup of coffee waiting for the",
    "start": "105200",
    "end": "110399"
  },
  {
    "text": "work week to start and an email pops up you have to create a mobile application that allows users to sign up and sign in",
    "start": "110399",
    "end": "118460"
  },
  {
    "text": "upload their profile image and search and book conference rooms well what do",
    "start": "118460",
    "end": "125070"
  },
  {
    "text": "you do where do you start well since identities or managing",
    "start": "125070",
    "end": "131790"
  },
  {
    "text": "identities is an integral part to most of these components you should start there well",
    "start": "131790",
    "end": "138400"
  },
  {
    "text": "you want the user to sign up and sign in how do we do that you might roll up a",
    "start": "138400",
    "end": "143670"
  },
  {
    "text": "database and store the credentials how do you store the credentials maybe in",
    "start": "143670",
    "end": "149290"
  },
  {
    "text": "clear text format now how many of you know of a system that does this right",
    "start": "149290",
    "end": "154510"
  },
  {
    "text": "now production just one I'm glad it's just one it's a definite anti-pattern",
    "start": "154510",
    "end": "163300"
  },
  {
    "text": "for obvious reasons one of them is you can have a rogue employee go and scan the whole database and you have a huge",
    "start": "163300",
    "end": "170230"
  },
  {
    "text": "problem on your hands well you can hash passwords it used to be really common",
    "start": "170230",
    "end": "178270"
  },
  {
    "text": "just to hash passwords and save those hash passwords in the database but with rainbow tables and with dictionary",
    "start": "178270",
    "end": "185650"
  },
  {
    "text": "attacks you're not safe anymore what's a better approach a better approach is to sold",
    "start": "185650",
    "end": "192130"
  },
  {
    "text": "hash those passwords and that's actually what's being used quite often these days now what if you did not want to transfer",
    "start": "192130",
    "end": "201280"
  },
  {
    "text": "the password over the wire even in a soul that hash format what if you didn't even want to save the password in the",
    "start": "201280",
    "end": "208180"
  },
  {
    "text": "database what can you do well you can use secure remote password protocol",
    "start": "208180",
    "end": "215050"
  },
  {
    "text": "which was developed at Stanford and what that is it allows you to create a verifier code",
    "start": "215050",
    "end": "222250"
  },
  {
    "text": "from the password and transfer that and save that in the backend well now that",
    "start": "222250",
    "end": "228730"
  },
  {
    "text": "we've settled on how you're gonna actually take care of the passwords what about the other requirements such as",
    "start": "228730",
    "end": "235110"
  },
  {
    "text": "multi-factor authentication how about enforcing password policies or",
    "start": "235110",
    "end": "241170"
  },
  {
    "text": "encrypting data on the back end and what about you know other authentication flow",
    "start": "241170",
    "end": "246280"
  },
  {
    "text": "such as let's say including capture for example and what if all of a",
    "start": "246280",
    "end": "252430"
  },
  {
    "text": "sudden this application becomes so popular that you want to scale it out to hundreds of millions of users on top of",
    "start": "252430",
    "end": "259239"
  },
  {
    "text": "that what about the user flows on top of sign up and signing you want to be able",
    "start": "259239",
    "end": "264370"
  },
  {
    "text": "to have the functionality to reset a password or change your password obviously sign out well thankfully we",
    "start": "264370",
    "end": "271570"
  },
  {
    "text": "have a service for you and it's called Amazon Casino specifically Amazon cognero user pools which is a managed",
    "start": "271570",
    "end": "278140"
  },
  {
    "text": "user directory and Justin will go over the actual process of sign up and sign",
    "start": "278140",
    "end": "283330"
  },
  {
    "text": "in using Amazon kognito thanks Vlad Amir so to walk you through how you can use",
    "start": "283330",
    "end": "289000"
  },
  {
    "text": "kognito user pools let's take a look that the common flows with our SDK so it",
    "start": "289000",
    "end": "295120"
  },
  {
    "text": "all starts of course with sending the users information for registration and then you can optionally set up the",
    "start": "295120",
    "end": "301810"
  },
  {
    "text": "requirements to validate either a customer's email or their phone number",
    "start": "301810",
    "end": "306970"
  },
  {
    "text": "via SMS you know as a validation built into the service and then from there",
    "start": "306970",
    "end": "312340"
  },
  {
    "text": "once they've actually taken the code that they got back via email our SMS and confirm their registration only then do",
    "start": "312340",
    "end": "319570"
  },
  {
    "text": "you have a successful confirmed user which can actually authenticate so once the user goes to authenticate this is",
    "start": "319570",
    "end": "327310"
  },
  {
    "text": "done via secure remote password or SRP as volodymyr said when you authenticate",
    "start": "327310",
    "end": "333430"
  },
  {
    "text": "in send correct credentials Cognito user pulls returns to you a set of JWT tokens",
    "start": "333430",
    "end": "338890"
  },
  {
    "text": "or JSON web tokens well talk more about those if you're not familiar but what if",
    "start": "338890",
    "end": "344590"
  },
  {
    "text": "you have other needs you know beyond this basic flow if you need to hook in",
    "start": "344590",
    "end": "349600"
  },
  {
    "text": "and customize this authentication and signup experience well you can heavily",
    "start": "349600",
    "end": "356950"
  },
  {
    "text": "customize this flow so you could first authenticate just like before but say you need maybe a CAPTCHA or you want to",
    "start": "356950",
    "end": "364660"
  },
  {
    "text": "do multi-factor off using a very particular multi-factor often Cognito has it out of the box so you need",
    "start": "364660",
    "end": "371200"
  },
  {
    "text": "something else well you can define a custom challenge which is a lambda trigger that you can hook into the",
    "start": "371200",
    "end": "376510"
  },
  {
    "text": "workflow that could generate that challenge for your users and send the challenge back and then your users can",
    "start": "376510",
    "end": "382810"
  },
  {
    "text": "risk to the challenge in your own app sending the challenge response back with yet",
    "start": "382810",
    "end": "388120"
  },
  {
    "text": "another lambda function to verify the challenge response now once they pass",
    "start": "388120",
    "end": "393400"
  },
  {
    "text": "the challenges then of course you get the JWT tokens back just as before but",
    "start": "393400",
    "end": "399220"
  },
  {
    "text": "this is just one example of how you could customize your user experience to show you a more comprehensive list",
    "start": "399220",
    "end": "404440"
  },
  {
    "text": "here's a full view of a lot of the lamda triggers that you can hook in from the signup moment all the way through your",
    "start": "404440",
    "end": "411159"
  },
  {
    "text": "post authentication logic to customize your flows now I know I mentioned you're",
    "start": "411159",
    "end": "417039"
  },
  {
    "start": "415000",
    "end": "528000"
  },
  {
    "text": "getting back JWT tokens so for those that aren't familiar let's take a look at what a JWT token is so a JWT token",
    "start": "417039",
    "end": "425530"
  },
  {
    "text": "has a header a payload and a signature and all three together as a base64 blob",
    "start": "425530",
    "end": "433150"
  },
  {
    "text": "of text encoded blob of text make up a JWT token so this is an example of an",
    "start": "433150",
    "end": "438880"
  },
  {
    "text": "identity token so if you look at the payload all of the users attributes that the app client has access to read or",
    "start": "438880",
    "end": "444879"
  },
  {
    "text": "encode it in this token so my email my first name my last name unique ID etc",
    "start": "444879",
    "end": "451380"
  },
  {
    "text": "the header indicates the key used to sign the token and the signing algorithm",
    "start": "451380",
    "end": "456729"
  },
  {
    "text": "and the signature is there to validate that this token is in fact from the source that you expect it to be from in",
    "start": "456729",
    "end": "463419"
  },
  {
    "text": "this case a particular user pool with an amazon camino now with with this token",
    "start": "463419",
    "end": "469509"
  },
  {
    "text": "there are three types of tokens you get from Amazon kognito an access token an identity token and a refresh token the",
    "start": "469509",
    "end": "477639"
  },
  {
    "text": "access token is there to provide access or programmatic sort of API interactions for the user the identity token what",
    "start": "477639",
    "end": "485169"
  },
  {
    "text": "you're seeing here can be used for downstream sort of pseudo authentication or you know used for downstream sort of",
    "start": "485169",
    "end": "491740"
  },
  {
    "text": "reading of the claims of the user and being able to dynamically change the experience of the user in your",
    "start": "491740",
    "end": "497139"
  },
  {
    "text": "application just reading the token and the final one is something called the refresh token and the reason this exists",
    "start": "497139",
    "end": "503979"
  },
  {
    "text": "is the access token an identity token from Cognito are only good for one hour now when they're issued but a refresh",
    "start": "503979",
    "end": "511120"
  },
  {
    "text": "token can be customized for application to be valid for as long as 30 days",
    "start": "511120",
    "end": "516520"
  },
  {
    "text": "and you can use a refresh token to get a new access and identity token and all of",
    "start": "516520",
    "end": "521950"
  },
  {
    "text": "that is possible if you leave a long refresh token without the user needing to authenticate again so now we have a",
    "start": "521950",
    "end": "529690"
  },
  {
    "start": "528000",
    "end": "648000"
  },
  {
    "text": "way you know building up our space finder application that a user can sign in and sign up but what if they need to",
    "start": "529690",
    "end": "536770"
  },
  {
    "text": "access AWS resources so in our case each user has their own profile they want to",
    "start": "536770",
    "end": "542110"
  },
  {
    "text": "have a profile picture we want to take advantage of Amazon s3 for that well to",
    "start": "542110",
    "end": "547750"
  },
  {
    "text": "give them secure fine-grained access to Amazon s3 we need something else and there's another feature of Amazon cogito",
    "start": "547750",
    "end": "554620"
  },
  {
    "text": "called Cognito federated identities and what this service does is it allows you to exchange tokens from user pools or",
    "start": "554620",
    "end": "562240"
  },
  {
    "text": "another bearer token based provider for AWS native Prudential's in the form of",
    "start": "562240",
    "end": "568150"
  },
  {
    "text": "an identity and access management or I am role so these credentials you know or",
    "start": "568150",
    "end": "573640"
  },
  {
    "text": "an access key secret access key and a session token let's take a look at how",
    "start": "573640",
    "end": "578650"
  },
  {
    "text": "that works behind the scenes so first you would authenticate with cognitive",
    "start": "578650",
    "end": "583720"
  },
  {
    "text": "user pools you get back your set of JWT tokens just as before but this time you",
    "start": "583720",
    "end": "589240"
  },
  {
    "text": "would make a subsequent call to go ahead and pass the identity token to cognitive federated identities which would return",
    "start": "589240",
    "end": "596470"
  },
  {
    "text": "you and I did any ID now with the identity ID and the identity token you can then call to make",
    "start": "596470",
    "end": "603310"
  },
  {
    "text": "a get recruit n choose R ik West which behind the scenes kognito goes to the security token",
    "start": "603310",
    "end": "609790"
  },
  {
    "text": "service or STS service which is AWS is token vending machine effectively so all",
    "start": "609790",
    "end": "616300"
  },
  {
    "text": "AWS access keys you ever see come from STS and this generates the particular credentials for that role and ultimately",
    "start": "616300",
    "end": "624190"
  },
  {
    "text": "Cognito returns them back to you in the form of an iamb role so that's the access key secret access key session",
    "start": "624190",
    "end": "630490"
  },
  {
    "text": "token once you have those credentials you can then go ahead and use any AWS",
    "start": "630490",
    "end": "636040"
  },
  {
    "text": "SDK for any language you normally use to interact with AWS resources so in this",
    "start": "636040",
    "end": "641500"
  },
  {
    "text": "case s3 but that could be DynamoDB api gateway or some other service but a lot",
    "start": "641500",
    "end": "649300"
  },
  {
    "start": "648000",
    "end": "782000"
  },
  {
    "text": "of you said you have different users that need different permissions in your application so how can you solve that",
    "start": "649300",
    "end": "655670"
  },
  {
    "text": "challenge well prior to December of 2016",
    "start": "655670",
    "end": "661089"
  },
  {
    "text": "kognito federated identities only had an authenticated user role in an unauthenticated user role but in our",
    "start": "661089",
    "end": "668450"
  },
  {
    "text": "case we want to have different users with different permissions now there are two additional options available for you",
    "start": "668450",
    "end": "673940"
  },
  {
    "text": "for fine-grained access and authorization called choose role from rule and choose role from token the",
    "start": "673940",
    "end": "682190"
  },
  {
    "text": "first one choose roll from rule in your user pool you can define different attributes in this case we have a user pull with the",
    "start": "682190",
    "end": "689210"
  },
  {
    "text": "Department attribute and you can make a set of rules on based on these attributes so in this case we're parsing",
    "start": "689210",
    "end": "695480"
  },
  {
    "text": "the department and if someone as a member of say the engineering department we give them the engineers role but you",
    "start": "695480",
    "end": "701839"
  },
  {
    "text": "can define one or more rules that are processed in sequential order and the first matching rule would be the",
    "start": "701839",
    "end": "707450"
  },
  {
    "text": "effective role that the user gets now if you have a user that comes along that doesn't match any of your rules that you",
    "start": "707450",
    "end": "713540"
  },
  {
    "text": "define then you can decide do you give them the standard authenticated user role or do you just an either access all",
    "start": "713540",
    "end": "720200"
  },
  {
    "text": "together with federated identities so that's one option the other option available to you",
    "start": "720200",
    "end": "725870"
  },
  {
    "text": "is something called choose role from token and this is particular for use with Cognito user pools where we have a",
    "start": "725870",
    "end": "732680"
  },
  {
    "text": "new feature also launched last year called kognito groups and you're able to define different groups for different",
    "start": "732680",
    "end": "738200"
  },
  {
    "text": "users a user can be in more than one group so with each group you can specify an iamb role for each group and a",
    "start": "738200",
    "end": "747110"
  },
  {
    "text": "precedence values and what that means is if in this case we have an example user here who's both an admin and in the",
    "start": "747110",
    "end": "753920"
  },
  {
    "text": "finance department but because the admin group has a precedence of zero which is",
    "start": "753920",
    "end": "758959"
  },
  {
    "text": "lower than the Finance precedence of to this user would get the I am role of the",
    "start": "758959",
    "end": "764089"
  },
  {
    "text": "admin group you can only have one iron role at a time so this is another option",
    "start": "764089",
    "end": "769279"
  },
  {
    "text": "for you that's all out-of-the-box and all of the the logic of deciding which role and issuing the appropriate tokens",
    "start": "769279",
    "end": "775250"
  },
  {
    "text": "for that role all of that's done by Cognito for you so you make the same calls either way and it's this dynamic",
    "start": "775250",
    "end": "782110"
  },
  {
    "start": "782000",
    "end": "1044000"
  },
  {
    "text": "so to show this to you practice alternative lad Amir show you that so there's a lot of moving",
    "start": "782110",
    "end": "788570"
  },
  {
    "text": "components here and in order to showcase most of them we created the application",
    "start": "788570",
    "end": "793640"
  },
  {
    "text": "and we created a lot of one second we created a lot of logs so here you will",
    "start": "793640",
    "end": "802070"
  },
  {
    "text": "see a lot of those logs printed out as I interact with the application so let's",
    "start": "802070",
    "end": "808610"
  },
  {
    "text": "start by signing up let me enter the",
    "start": "808610",
    "end": "815149"
  },
  {
    "text": "username password",
    "start": "815149",
    "end": "820089"
  },
  {
    "text": "okay so what's going to happen now is I'm gonna click Sign Up and kognito will",
    "start": "839980",
    "end": "847750"
  },
  {
    "text": "sign me up but I'm not confirmed yet what's going to happen is Chimaera will send a",
    "start": "847750",
    "end": "853540"
  },
  {
    "text": "confirmation email to my email address with a code so let's take a look",
    "start": "853540",
    "end": "860070"
  },
  {
    "text": "all right so I got the code now I have to confirm my registration all right",
    "start": "869580",
    "end": "882829"
  },
  {
    "text": "I'm confirmed all right now let's login",
    "start": "883660",
    "end": "889240"
  },
  {
    "text": "saying in fact a username the password",
    "start": "889270",
    "end": "895450"
  },
  {
    "text": "is the same all right so as you can see",
    "start": "895450",
    "end": "903640"
  },
  {
    "text": "there's a lot of information printed out here so things to note the three jwg",
    "start": "903640",
    "end": "911270"
  },
  {
    "text": "tokens that I mentioned before are printed out here and they access",
    "start": "911270",
    "end": "916580"
  },
  {
    "text": "credentials that Amazon cognero federated identities have ended so let's",
    "start": "916580",
    "end": "923300"
  },
  {
    "text": "take a look at one of these JWT tokens specifically the ID token that's",
    "start": "923300",
    "end": "928790"
  },
  {
    "text": "deciphered all right so you can see the",
    "start": "928790",
    "end": "935930"
  },
  {
    "text": "header the payload and the payload contains all the information that I entered so you can use this JWT token in",
    "start": "935930",
    "end": "944510"
  },
  {
    "text": "your downstream services for further customization and further authorization",
    "start": "944510",
    "end": "951010"
  },
  {
    "text": "and you have the signature the signature you will use in your downstream services",
    "start": "951010",
    "end": "957320"
  },
  {
    "text": "to make sure that this is a valid jwg token you want to make sure that cognero",
    "start": "957320",
    "end": "962900"
  },
  {
    "text": "was the one who created it all right now",
    "start": "962900",
    "end": "968770"
  },
  {
    "text": "let's take a look at the one thing that",
    "start": "968770",
    "end": "974180"
  },
  {
    "text": "I wanted to show you one additional thing it is uploading an image first so",
    "start": "974180",
    "end": "981740"
  },
  {
    "text": "let's go here select an image we have a couple of pictures here all right so",
    "start": "981740",
    "end": "990680"
  },
  {
    "text": "we've uploaded an image just now and what happened is the image went directly",
    "start": "990680",
    "end": "996140"
  },
  {
    "text": "from this mobile device to s3 it did not go through a server it did not need a",
    "start": "996140",
    "end": "1001990"
  },
  {
    "text": "proxy it went directly to s3 so that was possible using I am roles and it's",
    "start": "1001990",
    "end": "1012580"
  },
  {
    "text": "stored in a s3 bucket that only this user access to meaning they asked three",
    "start": "1012580",
    "end": "1018420"
  },
  {
    "text": "buckets prefix only this user has access to the image that was just uploaded no",
    "start": "1018420",
    "end": "1024688"
  },
  {
    "text": "other user can access it alright so",
    "start": "1024689",
    "end": "1033829"
  },
  {
    "text": "let's take a look at the middle console alright so first let's start with user",
    "start": "1033829",
    "end": "1040230"
  },
  {
    "text": "pools the first thing that you see is",
    "start": "1040230",
    "end": "1045959"
  },
  {
    "text": "the pool idiom that's the unique ID that you will be referencing throughout your application now yeah a dashboard of",
    "start": "1045959",
    "end": "1054500"
  },
  {
    "text": "everything that's configured and as an example estimated number of users that's",
    "start": "1054500",
    "end": "1059760"
  },
  {
    "text": "in this container user pool now the second thing I want to show you are the actual users and groups so these are the",
    "start": "1059760",
    "end": "1066929"
  },
  {
    "text": "users that have logged in or registered with this cog near a user poll and these",
    "start": "1066929",
    "end": "1075360"
  },
  {
    "text": "are the groups that Justin mentioned and let's take a look at one of them so as",
    "start": "1075360",
    "end": "1080400"
  },
  {
    "text": "you can see this group is associated with a particular I am role so what that",
    "start": "1080400",
    "end": "1087270"
  },
  {
    "text": "means is if I place a user into this group that user went authenticated will",
    "start": "1087270",
    "end": "1093330"
  },
  {
    "text": "have that role as part of that token all",
    "start": "1093330",
    "end": "1098550"
  },
  {
    "text": "right the attributes cognero comes with default attributes and you can also",
    "start": "1098550",
    "end": "1104400"
  },
  {
    "text": "create custom attributes so think of custom attributes as what's your",
    "start": "1104400",
    "end": "1111000"
  },
  {
    "text": "favorite color or has the user paid as",
    "start": "1111000",
    "end": "1116970"
  },
  {
    "text": "an example and it's important due to the fact that in order to actually talk to",
    "start": "1116970",
    "end": "1123600"
  },
  {
    "text": "cognero you need an app ID as well so here we have configured to app IDs one",
    "start": "1123600",
    "end": "1129000"
  },
  {
    "text": "is the admin ID and the other one is the ID that's being used by this cognero",
    "start": "1129000",
    "end": "1134190"
  },
  {
    "text": "application right so as a client so the",
    "start": "1134190",
    "end": "1139440"
  },
  {
    "text": "client one is configured to use SRP and",
    "start": "1139440",
    "end": "1144559"
  },
  {
    "text": "one very important thing to note is we're actually telling what attributes",
    "start": "1144559",
    "end": "1152580"
  },
  {
    "text": "this client has access to in regards to reading and regards to writing so",
    "start": "1152580",
    "end": "1158720"
  },
  {
    "text": "imagine the following situation you have the client accessing and writing let's",
    "start": "1158720",
    "end": "1166890"
  },
  {
    "text": "say the color or my favorite color for example right but you don't want the client to have access to an attribute",
    "start": "1166890",
    "end": "1172860"
  },
  {
    "text": "that specify whether the client has paid for a subscription or for a conference",
    "start": "1172860",
    "end": "1178950"
  },
  {
    "text": "room for example you don't want the actual client to modify this value you want and admitting to modify this value",
    "start": "1178950",
    "end": "1186780"
  },
  {
    "text": "and this is where that's setup we've turned off srp here and the admin",
    "start": "1186780",
    "end": "1193620"
  },
  {
    "text": "application has access to all of the attributes including these three all",
    "start": "1193620",
    "end": "1204000"
  },
  {
    "text": "right now the next thing to note are the triggers so this is a way for you to",
    "start": "1204000",
    "end": "1210540"
  },
  {
    "text": "customize the authentication and the authorization flows and Justin went over",
    "start": "1210540",
    "end": "1216180"
  },
  {
    "text": "this a little bit more these are just simple lambda functions that you can use",
    "start": "1216180",
    "end": "1221310"
  },
  {
    "text": "and we have plenty of reference lambda functions for this you can also turn on",
    "start": "1221310",
    "end": "1227220"
  },
  {
    "text": "analytics which basically turns on pin point all right so let's take a look at",
    "start": "1227220",
    "end": "1236010"
  },
  {
    "text": "the federated identities so just to",
    "start": "1236010",
    "end": "1242240"
  },
  {
    "text": "remind you cognero user pools is your user directory it stores the users it",
    "start": "1242240",
    "end": "1249420"
  },
  {
    "text": "allows for an easy way to create the signup and sign-in functionality kaguro",
    "start": "1249420",
    "end": "1254970"
  },
  {
    "text": "federated identities is what allows those users who have logged in with",
    "start": "1254970",
    "end": "1260040"
  },
  {
    "text": "Koerner a user pools to get AWS credentials so you exchange jawge tokens",
    "start": "1260040",
    "end": "1267120"
  },
  {
    "text": "for AWS credentials and that's the way that those users inadvertently through",
    "start": "1267120",
    "end": "1273210"
  },
  {
    "text": "the application are able to access the AWS services such as s3 api gateway and",
    "start": "1273210",
    "end": "1278880"
  },
  {
    "text": "anything else so let's take a look at the pool",
    "start": "1278880",
    "end": "1284330"
  },
  {
    "text": "okay so what you see here is a list of",
    "start": "1290340",
    "end": "1297710"
  },
  {
    "text": "available providers or type of providers that you can integrate within this",
    "start": "1297710",
    "end": "1303090"
  },
  {
    "text": "within federated identities what that means is you can use cognero to allow",
    "start": "1303090",
    "end": "1309960"
  },
  {
    "text": "your users to sign up and sign in but you can also use Facebook or Twitter or",
    "start": "1309960",
    "end": "1315020"
  },
  {
    "text": "open ID provider or any sam'l provider and if you have that all packaged in",
    "start": "1315020",
    "end": "1323010"
  },
  {
    "text": "your UI and let's say the same user logs in with cognero and then later that same user decides to",
    "start": "1323010",
    "end": "1329760"
  },
  {
    "text": "log in with Facebook they have the same federated identity so you can identify",
    "start": "1329760",
    "end": "1335700"
  },
  {
    "text": "that user within the login process okay",
    "start": "1335700",
    "end": "1341600"
  },
  {
    "text": "now as you can see here the setup is quite simple you specify the user pool ID you specify the app client ID and you",
    "start": "1341600",
    "end": "1349800"
  },
  {
    "text": "specify the fine-grained controls here in here and just to show you quickly",
    "start": "1349800",
    "end": "1356970"
  },
  {
    "text": "Facebook Google Twitter okay all right",
    "start": "1356970",
    "end": "1366900"
  },
  {
    "text": "so you've allowed your users to sign up and sign in you've used federated",
    "start": "1366900",
    "end": "1374130"
  },
  {
    "start": "1368000",
    "end": "1425000"
  },
  {
    "text": "identities to allow your users to upload their profile image so now you're ready",
    "start": "1374130",
    "end": "1379860"
  },
  {
    "text": "for the business logic and for the business logic you can use API gateway",
    "start": "1379860",
    "end": "1385640"
  },
  {
    "text": "lambda and DynamoDB and Justin we'll go over the details of how that's implemented and set up thanks Lambie so",
    "start": "1385640",
    "end": "1395130"
  },
  {
    "text": "with our space finder application we'd like to have a fully serverless application right so the serverless api",
    "start": "1395130",
    "end": "1401340"
  },
  {
    "text": "pattern is very popular in common is api gateway AWS lambda and Amazon DynamoDB",
    "start": "1401340",
    "end": "1408470"
  },
  {
    "text": "and so we have that in space finder so when the nice thing about API gateway",
    "start": "1408470",
    "end": "1414180"
  },
  {
    "text": "being in this mix is you're able to offload all of the authorization and authentication decisions for your actual",
    "start": "1414180",
    "end": "1421710"
  },
  {
    "text": "business layer to API gateway and the way we can do that is three",
    "start": "1421710",
    "end": "1427410"
  },
  {
    "start": "1425000",
    "end": "1470000"
  },
  {
    "text": "different types of authorization options first I want to show you just to set the",
    "start": "1427410",
    "end": "1433020"
  },
  {
    "text": "context this is space finders API it's a simple restful api but within this api",
    "start": "1433020",
    "end": "1439340"
  },
  {
    "text": "we do have certain operations that are admin only operations so as you can see",
    "start": "1439340",
    "end": "1444870"
  },
  {
    "text": "here so we want certain users and our user poll to be able to do these in certain users not to be able to do these things to make it real",
    "start": "1444870",
    "end": "1451559"
  },
  {
    "text": "what these are in a conference room app like space finder anyone could book a room or delete their own booking but",
    "start": "1451559",
    "end": "1459059"
  },
  {
    "text": "creating a room itself or creating a building with rooms in them is something only an admin should be able to do as",
    "start": "1459059",
    "end": "1464940"
  },
  {
    "text": "well as deleting buildings and rooms so that's what you know we're trying to accomplish I mentioned there are three",
    "start": "1464940",
    "end": "1471299"
  },
  {
    "start": "1470000",
    "end": "1496000"
  },
  {
    "text": "types of authorization so let's take a closer look at each but one other thing you should might want to note is even if",
    "start": "1471299",
    "end": "1478380"
  },
  {
    "text": "you're not using a fully serverless stack today you can put api gateway in front of any existing application you",
    "start": "1478380",
    "end": "1485340"
  },
  {
    "text": "know that where you can where you have an api and leverage this not just in a serverless environment and still offload",
    "start": "1485340",
    "end": "1491460"
  },
  {
    "text": "your authorization challenges logging DDoS prevention and other things so but",
    "start": "1491460",
    "end": "1496740"
  },
  {
    "start": "1496000",
    "end": "1567000"
  },
  {
    "text": "the first one is Cognito user pool authorizers so with this if you have users that are using kognito user pools",
    "start": "1496740",
    "end": "1502700"
  },
  {
    "text": "the way this works is you first have those users authenticate with user pools and get back a set of JWT tokens and",
    "start": "1502700",
    "end": "1510020"
  },
  {
    "text": "then you take the identity token and you send the identity token to api gateway",
    "start": "1510020",
    "end": "1515760"
  },
  {
    "text": "in the header of your choice with your request so most likely the authorization header api gateway can then read the",
    "start": "1515760",
    "end": "1523380"
  },
  {
    "text": "token actually check its signature and check if the token is still valid since",
    "start": "1523380",
    "end": "1529140"
  },
  {
    "text": "an identity token is only good for one hour and if it is valid then and only then would we go ahead and invoke the",
    "start": "1529140",
    "end": "1535830"
  },
  {
    "text": "lambda function behind api gateway which then would use its I am execution roll",
    "start": "1535830",
    "end": "1541770"
  },
  {
    "text": "so an I am role specific to each lambda function that allows it to talk to other",
    "start": "1541770",
    "end": "1547110"
  },
  {
    "text": "AWS resources so in this case Amazon DynamoDB so that's a user Paul's authorizer",
    "start": "1547110",
    "end": "1553640"
  },
  {
    "text": "keeping here it's just going to check of a user as a valid user in your pool it's not going to be able to",
    "start": "1553640",
    "end": "1560040"
  },
  {
    "text": "differentiate our standard users and our admin users so so for that kind of fine-grained authorization we have two",
    "start": "1560040",
    "end": "1567000"
  },
  {
    "start": "1567000",
    "end": "1695000"
  },
  {
    "text": "other options the first option is something called AWS I am based",
    "start": "1567000",
    "end": "1572430"
  },
  {
    "text": "authorization so with I am based authorization you would first authenticate with Cognito user pools you",
    "start": "1572430",
    "end": "1579360"
  },
  {
    "text": "get back your JWT tokens you then go ahead and you get an I am role as",
    "start": "1579360",
    "end": "1584460"
  },
  {
    "text": "Vladimir showed you so you request your creds you get back you know behind the scenes",
    "start": "1584460",
    "end": "1590730"
  },
  {
    "text": "the validation cog Nino takes care of all of that for you and you get back your temporary AWS credentials and then",
    "start": "1590730",
    "end": "1597480"
  },
  {
    "text": "once you have those you're able to send your request to api gateway signing it",
    "start": "1597480",
    "end": "1602970"
  },
  {
    "text": "with a process called signature v4 or sigdi 4 which is our signing algorithm",
    "start": "1602970",
    "end": "1608400"
  },
  {
    "text": "this is the same request signing process used for all AWS api's so whether you",
    "start": "1608400",
    "end": "1614700"
  },
  {
    "text": "talk to s3 or something else and API gateway is able to extract from the",
    "start": "1614700",
    "end": "1620100"
  },
  {
    "text": "signature which role signed at this request and for that role check which",
    "start": "1620100",
    "end": "1626610"
  },
  {
    "text": "policies the role is associated with and then based on those policies actually see if the user is allowed to invoke the",
    "start": "1626610",
    "end": "1633660"
  },
  {
    "text": "operation requested it would then go ahead and invoke lamda just as before which then uses its role to talk to",
    "start": "1633660",
    "end": "1640590"
  },
  {
    "text": "dynamo dB so I mentioned the policies you know how might that look well here's an example",
    "start": "1640590",
    "end": "1647490"
  },
  {
    "text": "of a very simple I am policy for your reference so you can see in this policy",
    "start": "1647490",
    "end": "1653940"
  },
  {
    "text": "you know the the key action here to note is something called execute API invoke",
    "start": "1653940",
    "end": "1659040"
  },
  {
    "text": "and in this policy we're allowing our users to allow them to access any operation in the API with the exception",
    "start": "1659040",
    "end": "1666600"
  },
  {
    "text": "of post operations on our locations path and sub paths so this you know and in",
    "start": "1666600",
    "end": "1673950"
  },
  {
    "text": "real life as a best practice rather than doing this kind of blacklist approach of denying certain things you'd want a",
    "start": "1673950",
    "end": "1679620"
  },
  {
    "text": "whitelist only the things you your users need as API is dynamically change over",
    "start": "1679620",
    "end": "1684960"
  },
  {
    "text": "time and you might not update the policy but denies always take precedence and I am so the user is effectively",
    "start": "1684960",
    "end": "1691890"
  },
  {
    "text": "you know disallowed from certain things here so the final option is something called a custom authorizer so cuff em",
    "start": "1691890",
    "end": "1699330"
  },
  {
    "start": "1695000",
    "end": "1849000"
  },
  {
    "text": "authorizers are implemented via lambda functions and here's how they work first you authenticate with your",
    "start": "1699330",
    "end": "1706530"
  },
  {
    "text": "identity provider of choice so that one difference here you don't have to use COG you know at all to you leverage this",
    "start": "1706530",
    "end": "1713670"
  },
  {
    "text": "feature of API gateway as long as you have an identity provider that can provide a bearer token for you of",
    "start": "1713670",
    "end": "1720320"
  },
  {
    "text": "whatever format you can then take that token and get that back from the",
    "start": "1720320",
    "end": "1725910"
  },
  {
    "text": "provider then send that token to api gateway in your request in the header of your choice api gateway checks its own",
    "start": "1725910",
    "end": "1734340"
  },
  {
    "text": "local cache to see for that token if we have a known valid policy for the user",
    "start": "1734340",
    "end": "1739410"
  },
  {
    "text": "an effective you know policy define the IAM for them and if it doesn't know who",
    "start": "1739410",
    "end": "1746010"
  },
  {
    "text": "they are then it invokes the lambda function which is your custom authorizer lambda function which can run the",
    "start": "1746010",
    "end": "1752460"
  },
  {
    "text": "business logic of your choice talk to any third-party service or ID ID provider you may have to validate the",
    "start": "1752460",
    "end": "1759240"
  },
  {
    "text": "user and determine what access they should have ultimately sending back a well-formed I am policy back to the user",
    "start": "1759240",
    "end": "1767690"
  },
  {
    "text": "so once this is back you know with API gateway we check the I in policy that we",
    "start": "1767690",
    "end": "1773850"
  },
  {
    "text": "were got back to see if they have access for the operation they've requested assuming they do invoke lambda just as",
    "start": "1773850",
    "end": "1780390"
  },
  {
    "text": "before which then accesses dinamo now the key thing to note here upon the",
    "start": "1780390",
    "end": "1785730"
  },
  {
    "text": "second request of the same user to our API we wouldn't we would have that",
    "start": "1785730",
    "end": "1790860"
  },
  {
    "text": "policy cached locally for that particular token and we wouldn't need to",
    "start": "1790860",
    "end": "1795960"
  },
  {
    "text": "invoke our lambda function we can immediately make a decision around if they have access or not and you",
    "start": "1795960",
    "end": "1801600"
  },
  {
    "text": "configure the validity and the timing of how long that cache is good for by default it's five minutes so so I know",
    "start": "1801600",
    "end": "1810840"
  },
  {
    "text": "when I first heard this I thought well custom authorizers I need a lambda function to generate an iamb policy",
    "start": "1810840",
    "end": "1817020"
  },
  {
    "text": "that's well-formed how would I go about that we have a lambda function blueprint",
    "start": "1817020",
    "end": "1822120"
  },
  {
    "text": "out there today if you go to the lambda console and search for authorizer both python and javascript",
    "start": "1822120",
    "end": "1827549"
  },
  {
    "text": "where you can see a sample of here all you have to do is say allow method deny",
    "start": "1827549",
    "end": "1833070"
  },
  {
    "text": "method provide the operations you want to allow deny the operations you don't want to allow and then ultimately do a",
    "start": "1833070",
    "end": "1839880"
  },
  {
    "text": "callback so my first very simple custom authorizer i was able to get working in",
    "start": "1839880",
    "end": "1845640"
  },
  {
    "text": "under 10 minutes using the blueprints that we offer so in summary we have",
    "start": "1845640",
    "end": "1850710"
  },
  {
    "start": "1849000",
    "end": "1945000"
  },
  {
    "text": "three types of authorization with api gateway user pro authorizers for users of user pools that need simple sort of",
    "start": "1850710",
    "end": "1857549"
  },
  {
    "text": "valid user yes/no authorization I am based authorization for fine-grained",
    "start": "1857549",
    "end": "1862860"
  },
  {
    "text": "access via I am policies and kognito federated identities and then finally",
    "start": "1862860",
    "end": "1868650"
  },
  {
    "text": "custom authorizers which are the most flexible and providing you with you know",
    "start": "1868650",
    "end": "1873809"
  },
  {
    "text": "effectively any identity provider and being able to generate a policy on the fly for them specific to that user up to",
    "start": "1873809",
    "end": "1881400"
  },
  {
    "text": "three the most secure is I am based authorization and the reason for that is",
    "start": "1881400",
    "end": "1888090"
  },
  {
    "text": "because every request is uniquely signed and with the others if I were able to",
    "start": "1888090",
    "end": "1893790"
  },
  {
    "text": "intercept a request even though TLS is required with API gateway and if I were able to read the",
    "start": "1893790",
    "end": "1899220"
  },
  {
    "text": "header and get that token for the duration of the validity of that token I could make you know impersonated",
    "start": "1899220",
    "end": "1905340"
  },
  {
    "text": "requests to the to API gateway and be able to do things but with request signing via I am every request signature",
    "start": "1905340",
    "end": "1913380"
  },
  {
    "text": "is unique including the payload of the request the operation of the request the path of the request etc so even if",
    "start": "1913380",
    "end": "1920549"
  },
  {
    "text": "someone got my signature it would be invalid and useless to them upon their next call so it is the most secure",
    "start": "1920549",
    "end": "1926520"
  },
  {
    "text": "whenever possible and to make that process easier of even signing the",
    "start": "1926520",
    "end": "1931650"
  },
  {
    "text": "request to api gateway api gateway itself can generate SDKs in mobile and",
    "start": "1931650",
    "end": "1937410"
  },
  {
    "text": "web languages that have the signing library already built in so you don't have to go and implement all that",
    "start": "1937410",
    "end": "1942990"
  },
  {
    "text": "signing code yourself so to make this more concrete let's show you how space",
    "start": "1942990",
    "end": "1948630"
  },
  {
    "start": "1945000",
    "end": "2330000"
  },
  {
    "text": "finder uses these features",
    "start": "1948630",
    "end": "1952280"
  },
  {
    "text": "so first I'll show you space finders API so it's a simple restful api in all the",
    "start": "1955730",
    "end": "1962970"
  },
  {
    "text": "paths here like you saw and each given operation under a resource you're able",
    "start": "1962970",
    "end": "1969150"
  },
  {
    "text": "to define particular off details for the request so when I go to say the list two",
    "start": "1969150",
    "end": "1976470"
  },
  {
    "text": "locations method ok show me all the buildings this particular request I'm requiring authorization but I can pick",
    "start": "1976470",
    "end": "1983610"
  },
  {
    "text": "by operation in the API what type of authorization I want to require so this",
    "start": "1983610",
    "end": "1988800"
  },
  {
    "text": "one's using a user pull authorizer for demonstration purposes space finder uses",
    "start": "1988800",
    "end": "1994380"
  },
  {
    "text": "all three but in practice you would want to stick with one type of authorization for simplicity on your partner and",
    "start": "1994380",
    "end": "2001220"
  },
  {
    "text": "customer sides integration with your API so that's an example there another thing",
    "start": "2001220",
    "end": "2007550"
  },
  {
    "text": "to look at here we can define our authorizers so we have our user Pro authorizer",
    "start": "2007550",
    "end": "2012650"
  },
  {
    "text": "our custom authorized are defined and we can actually take a token so let me go",
    "start": "2012650",
    "end": "2018110"
  },
  {
    "text": "pull a valid token so this is Vladimir's account he just signed up with and I can",
    "start": "2018110",
    "end": "2026000"
  },
  {
    "text": "use the tester to show you passing in that token with the custom authorizer",
    "start": "2026000",
    "end": "2032410"
  },
  {
    "text": "that that request gave us something similar to the sample we saw so we've",
    "start": "2032950",
    "end": "2038270"
  },
  {
    "text": "allowed him access to anything with the exception of denying deleting and",
    "start": "2038270",
    "end": "2047180"
  },
  {
    "text": "posting on the locations paths and sub paths so deleting a room creating a room",
    "start": "2047180",
    "end": "2052250"
  },
  {
    "text": "etc so that's an example of you know custom authorizer that logic just ran dynamically right then so show you in",
    "start": "2052250",
    "end": "2059480"
  },
  {
    "text": "the app let's go over to the app again and I'm signed in right now as a user so",
    "start": "2059480",
    "end": "2066830"
  },
  {
    "text": "if I go and I for instance if I try and call that same request that lists locations without passing any off header",
    "start": "2066830",
    "end": "2073840"
  },
  {
    "text": "you can see I immediately get a 401 response an error response which says your unauthenticated if I try the same",
    "start": "2073840",
    "end": "2081379"
  },
  {
    "text": "request again and this time what we're doing here we're showing you the details of the request just to make it more",
    "start": "2081380",
    "end": "2087320"
  },
  {
    "text": "clear what's going on but this time I'm sending an authorization header which is my identity token then you can see all of",
    "start": "2087320",
    "end": "2095149"
  },
  {
    "text": "the buildings have loaded as we'd expect so I hear there's an event and aria",
    "start": "2095150",
    "end": "2100700"
  },
  {
    "text": "today so let's let's pull up this building and you can see now we're actually using an IM based get request",
    "start": "2100700",
    "end": "2108050"
  },
  {
    "text": "for authorization so with IM authorization unlike the first type of requests we're sending",
    "start": "2108050",
    "end": "2115040"
  },
  {
    "text": "several headers here so we have an authorization header itself which has multiple parts and then we're also",
    "start": "2115040",
    "end": "2122180"
  },
  {
    "text": "sending an X Amazon date header and an X Amazon security token headers these",
    "start": "2122180",
    "end": "2127850"
  },
  {
    "text": "three together make up that signature I'm talking about with AWS signature v4",
    "start": "2127850",
    "end": "2133820"
  },
  {
    "text": "signing but it was a valid signature we have authorization on this resource",
    "start": "2133820",
    "end": "2139040"
  },
  {
    "text": "hence our buildings loaded so let's go ahead now and say you know Ironwood this",
    "start": "2139040",
    "end": "2146660"
  },
  {
    "text": "is another I am request it loads is fine and now when I go to book the resource",
    "start": "2146660",
    "end": "2152200"
  },
  {
    "text": "we use the I am authorization here as well but on this post the thing to note all of this payload information is also",
    "start": "2152200",
    "end": "2159380"
  },
  {
    "text": "part of the signature so if someone were to call the same endpoint again same operation tamper with the payload the",
    "start": "2159380",
    "end": "2165590"
  },
  {
    "text": "signature would be invalid now if I go to bookings you can see I have my",
    "start": "2165590",
    "end": "2172910"
  },
  {
    "text": "booking but let's say even though this is not an admin user I'm going to turn on our admin UI to try and call some",
    "start": "2172910",
    "end": "2179810"
  },
  {
    "text": "admin things and so for instance let's go in and try and add a location and",
    "start": "2179810",
    "end": "2185990"
  },
  {
    "text": "I'll say test location right and I try and call this and you can see because",
    "start": "2185990",
    "end": "2193220"
  },
  {
    "text": "I'm not an admin my I am policy did not allow me to actually do this post",
    "start": "2193220",
    "end": "2199490"
  },
  {
    "text": "request even though I am authenticated with I am and authorize but I got a 403",
    "start": "2199490",
    "end": "2205010"
  },
  {
    "text": "response which means I know who you are but you're not authorized to do what you're asking so let's go ahead and sign",
    "start": "2205010",
    "end": "2211310"
  },
  {
    "text": "out now and sign in and say an admin user",
    "start": "2211310",
    "end": "2217599"
  },
  {
    "text": "so if I sign it again",
    "start": "2221100",
    "end": "2224760"
  },
  {
    "text": "same exact process but you can see our UI is dynamically reading our token to",
    "start": "2228930",
    "end": "2234360"
  },
  {
    "text": "change our experience here and you can look in the actual identity token we've",
    "start": "2234360",
    "end": "2239490"
  },
  {
    "text": "decoded it here for you and you can see because I'm in that admin group that I",
    "start": "2239490",
    "end": "2244680"
  },
  {
    "text": "get you know if my group is admin group right I'm in one group and that admin groups role was this particular I and",
    "start": "2244680",
    "end": "2251370"
  },
  {
    "text": "role that allows access to anything on the API and then if I had multiple roles",
    "start": "2251370",
    "end": "2256380"
  },
  {
    "text": "that might apply to me there here but that choose role from token option that we looked at its parsing this preferred",
    "start": "2256380",
    "end": "2262620"
  },
  {
    "text": "role attribute which is generated dynamically by Cognito so now that we're authenticated properly let's try this",
    "start": "2262620",
    "end": "2269880"
  },
  {
    "text": "again and this time it succeeded and",
    "start": "2269880",
    "end": "2279620"
  },
  {
    "text": "here we have our test location and then just to show you an example on the custom authorizer now we want to do a",
    "start": "2279620",
    "end": "2286680"
  },
  {
    "text": "post on our resources underneath the location so for instance if I do this as",
    "start": "2286680",
    "end": "2293880"
  },
  {
    "text": "an admin it also works so let's take",
    "start": "2293880",
    "end": "2299880"
  },
  {
    "text": "this user and we'll see the difference so if I take this identity token back to",
    "start": "2299880",
    "end": "2305790"
  },
  {
    "text": "our tester I run the test for our custom authorizer",
    "start": "2305790",
    "end": "2311150"
  },
  {
    "text": "you can see I also got a policy back and this policy allows everything there's no",
    "start": "2311150",
    "end": "2316470"
  },
  {
    "text": "deny state minh like our first user that's why we were able to create that resource with a custom authorizer orbit",
    "start": "2316470",
    "end": "2323250"
  },
  {
    "text": "i am we've set it up for both so that's just to look at that's you know the",
    "start": "2323250",
    "end": "2331320"
  },
  {
    "text": "different options available with api gateway authorization and now space",
    "start": "2331320",
    "end": "2336630"
  },
  {
    "text": "finder functionally wise is complete right we can sign in and sign up you can",
    "start": "2336630",
    "end": "2342120"
  },
  {
    "text": "access a two Bs resources and we have our own business logic necessary in our server list API but what if we want to",
    "start": "2342120",
    "end": "2350370"
  },
  {
    "text": "allow users to federate their existing identity providers we're hearing",
    "start": "2350370",
    "end": "2355560"
  },
  {
    "text": "customers asked more and more about identity Federation so I'll turn on a ladder mirror to discuss how that can be",
    "start": "2355560",
    "end": "2361200"
  },
  {
    "text": "implemented well previously prior to earlier this",
    "start": "2361200",
    "end": "2368730"
  },
  {
    "start": "2363000",
    "end": "2454000"
  },
  {
    "text": "year if you were using American Nero and you wanted to feather eight third-party",
    "start": "2368730",
    "end": "2374900"
  },
  {
    "text": "providers what you would have to do is create the UI create all those buttons",
    "start": "2374900",
    "end": "2380760"
  },
  {
    "text": "create all that UI logic and possibly the backend logic and you have to manage",
    "start": "2380760",
    "end": "2386520"
  },
  {
    "text": "all of that functionality now we have",
    "start": "2386520",
    "end": "2391910"
  },
  {
    "text": "released a feature called hosted UI so",
    "start": "2391910",
    "end": "2397170"
  },
  {
    "text": "what that is is it allows you when a click of a button to create a UI which",
    "start": "2397170",
    "end": "2403980"
  },
  {
    "text": "is highly customizable it allows for Federation with Facebook Google and",
    "start": "2403980",
    "end": "2411890"
  },
  {
    "text": "Amazon and also with sam'l to providers and it's it supports Auto so basically",
    "start": "2411890",
    "end": "2419640"
  },
  {
    "text": "it acts as your universal user directory",
    "start": "2419640",
    "end": "2425330"
  },
  {
    "text": "not only that what happens when you use the hosted UI all those parameters and",
    "start": "2425330",
    "end": "2432780"
  },
  {
    "text": "all those attributes that the third-party providers give you access to",
    "start": "2432780",
    "end": "2438600"
  },
  {
    "text": "are copied over into the user pool so now in your application",
    "start": "2438600",
    "end": "2445380"
  },
  {
    "text": "you only need to talk to cagney reusable rather than to any one of those providers that the user has logged in",
    "start": "2445380",
    "end": "2451500"
  },
  {
    "text": "with so the flow is quite simple right",
    "start": "2451500",
    "end": "2457590"
  },
  {
    "start": "2454000",
    "end": "2533000"
  },
  {
    "text": "you have the hosted UI presented to the user the user picks out what he wants to",
    "start": "2457590",
    "end": "2464580"
  },
  {
    "text": "login with so in this case Amazon the user is redirected to Amazon's like in",
    "start": "2464580",
    "end": "2471360"
  },
  {
    "text": "landing page enters his username and password Amazon takes care of the actual",
    "start": "2471360",
    "end": "2476700"
  },
  {
    "text": "log in and the user is redirected to Amazon cagney reusables with all of",
    "start": "2476700",
    "end": "2483090"
  },
  {
    "text": "those credentials that you saw previously and with additional credentials from Amazon as well so now",
    "start": "2483090",
    "end": "2490470"
  },
  {
    "text": "within your application you have access to both and you can if you want to",
    "start": "2490470",
    "end": "2495490"
  },
  {
    "text": "talk to Amazon directly with sam'l and at your enterprise IDPs the process is",
    "start": "2495490",
    "end": "2502900"
  },
  {
    "text": "quite similar the user chooses which corporate IDP to login with user is",
    "start": "2502900",
    "end": "2509140"
  },
  {
    "text": "redirected the corporate provider takes care of the actual login and you",
    "start": "2509140",
    "end": "2516640"
  },
  {
    "text": "redirect it back to Amazon can be reusable so in order to demonstrate this",
    "start": "2516640",
    "end": "2524790"
  },
  {
    "text": "justin will take takeover okay so we",
    "start": "2524790",
    "end": "2538540"
  },
  {
    "start": "2533000",
    "end": "2795000"
  },
  {
    "text": "just mentioned you know the identity Federation features so let me go back the space finder yet again and this time",
    "start": "2538540",
    "end": "2546670"
  },
  {
    "text": "let me sign out and if you notice we have an option at the top here we had",
    "start": "2546670",
    "end": "2551800"
  },
  {
    "text": "we've been using our own custom application UI with kognito SDKs so far but there is another option available",
    "start": "2551800",
    "end": "2558850"
  },
  {
    "text": "the hosted UI the vladimir mentioned so when I click that I'm on a mobile device",
    "start": "2558850",
    "end": "2565780"
  },
  {
    "text": "so it pops up a new tab for me now this UI it we've turned on a few",
    "start": "2565780",
    "end": "2572109"
  },
  {
    "text": "options but this is all out-of-the-box we haven't customized the styling in any way we haven't uploaded a logo or done",
    "start": "2572109",
    "end": "2578290"
  },
  {
    "text": "anything which is heavily customizable as you'll see but from here we could",
    "start": "2578290",
    "end": "2583390"
  },
  {
    "text": "sign in as our existing users you know with with a username and password but we can also Fedder a twith any of those",
    "start": "2583390",
    "end": "2589570"
  },
  {
    "text": "providers and Cognito will take care of all of the behind-the-scenes magic to get everything in one place so having an",
    "start": "2589570",
    "end": "2596680"
  },
  {
    "text": "endpoint that you can receive the post on from a similar response and mapping attributes etc so let's let's take a",
    "start": "2596680",
    "end": "2603040"
  },
  {
    "text": "look at that so let me first sign in with Google see how I come to Google so",
    "start": "2603040",
    "end": "2610090"
  },
  {
    "text": "let me actually have a new account here",
    "start": "2610090",
    "end": "2614580"
  },
  {
    "text": "okay and now I'm for my account you just finished signing in",
    "start": "2625890",
    "end": "2631400"
  },
  {
    "text": "so my signing was successful and if you noticed here comes the UI see here me",
    "start": "2637710",
    "end": "2646530"
  },
  {
    "text": "anxiously is signing one more time so",
    "start": "2646530",
    "end": "2652440"
  },
  {
    "text": "here comes our UI and you can see I'm signed in now because it's a mobile app",
    "start": "2652440",
    "end": "2658640"
  },
  {
    "text": "especially if you were doing a sam'l response directly Sam only supports a redirect response or a post back to your",
    "start": "2658640",
    "end": "2666420"
  },
  {
    "text": "client while on a mobile device you know neither is an easy option so Cognito actually intercepted that post response",
    "start": "2666420",
    "end": "2673950"
  },
  {
    "text": "from the sam'l provider and provides us a standardized set of these jadibooti",
    "start": "2673950",
    "end": "2679920"
  },
  {
    "text": "tokens that are always the same regardless of where you came from and then we get the callback actually from",
    "start": "2679920",
    "end": "2686610"
  },
  {
    "text": "kognito itself to actually do this sign in so if you notice the applet Arcand",
    "start": "2686610",
    "end": "2692100"
  },
  {
    "text": "popped up again it's because on a mobile device it used a deep linking callback so space finder colon slash slash",
    "start": "2692100",
    "end": "2698760"
  },
  {
    "text": "callback was the actual path for for a web app we would just use a simple redirect callback so just to show you",
    "start": "2698760",
    "end": "2706740"
  },
  {
    "text": "because it we did instantiate a new version of the app with our callback and switch over to that and you can see here",
    "start": "2706740",
    "end": "2715590"
  },
  {
    "text": "the process was the same even though we came in through Google we've got the same JDBC tokens the same access token",
    "start": "2715590",
    "end": "2721650"
  },
  {
    "text": "we have a different username here because we had a different ID but if I go around in the app and do anything you",
    "start": "2721650",
    "end": "2727590"
  },
  {
    "text": "know it's all the same so everything is identical ear now let's sign out this time and let's do a sam'l provider so in",
    "start": "2727590",
    "end": "2738000"
  },
  {
    "text": "this case we're showing octa here we've integrated octa which has a similar in",
    "start": "2738000",
    "end": "2743430"
  },
  {
    "text": "point as a sample so let me sign him the doctor but this could be any sam'l 2.0",
    "start": "2743430",
    "end": "2749760"
  },
  {
    "text": "compliant provider",
    "start": "2749760",
    "end": "2752690"
  },
  {
    "text": "oops fix that",
    "start": "2763840",
    "end": "2768210"
  },
  {
    "text": "and you can see I'm successfully signing with octa so here we go again and you",
    "start": "2776880",
    "end": "2783609"
  },
  {
    "text": "can see my username because of Howard's using a map it is just my octa unique identifier which happens to be my email",
    "start": "2783609",
    "end": "2790390"
  },
  {
    "text": "so it's prefixed by the user pool so let's look at this in the console so if",
    "start": "2790390",
    "end": "2797019"
  },
  {
    "start": "2795000",
    "end": "3038000"
  },
  {
    "text": "we go back to the Cognito console we have two additional sections we haven't looked at so far which is app",
    "start": "2797019",
    "end": "2803049"
  },
  {
    "text": "integration and Federation and in our app integration for this hosted UI you",
    "start": "2803049",
    "end": "2808269"
  },
  {
    "text": "can customize your desired domain prefix for your domain and you're able to set",
    "start": "2808269",
    "end": "2813910"
  },
  {
    "text": "per app client so we have our admin client here's our app client here the callback URLs that you want to",
    "start": "2813910",
    "end": "2819969"
  },
  {
    "text": "support so here's our space finder callback you just saw and the desired",
    "start": "2819969",
    "end": "2825279"
  },
  {
    "text": "identity providers that you want to enable for each app client as well as",
    "start": "2825279",
    "end": "2830319"
  },
  {
    "text": "which flows you want to enable from an OAuth 2.0 perspective so we support off",
    "start": "2830319",
    "end": "2835839"
  },
  {
    "text": "code and implicit grant etc now we're using the off code flow here so we've got an off code back then we need",
    "start": "2835839",
    "end": "2842380"
  },
  {
    "text": "another request to Cognito which gave us those final JWT tokens with the implicit",
    "start": "2842380",
    "end": "2848199"
  },
  {
    "text": "flow we would just get the JWT token directly in the callback and then of",
    "start": "2848199",
    "end": "2854109"
  },
  {
    "text": "course you can define the different scopes so how would you set up you know the different identity providers well if",
    "start": "2854109",
    "end": "2862209"
  },
  {
    "text": "we go here it's as simple as saying for the social providers say Facebook",
    "start": "2862209",
    "end": "2867449"
  },
  {
    "text": "registering an application on Facebook's developer portal pasting in its ID and",
    "start": "2867449",
    "end": "2872709"
  },
  {
    "text": "as your secret and the Scopes you want to allow and hitting enable and that would enable that Google is the same",
    "start": "2872709",
    "end": "2879059"
  },
  {
    "text": "same app ID and secret is all we've got there for sam'l providers it's a bit",
    "start": "2879059",
    "end": "2884469"
  },
  {
    "text": "different so sam'l providers if we look here to find octa you have a metadata",
    "start": "2884469",
    "end": "2890559"
  },
  {
    "text": "document that you need to specify which all sam'l endpoints can provide you give",
    "start": "2890559",
    "end": "2895689"
  },
  {
    "text": "it a name and then you can indicate something called the identifier and what the identifier does is if you have",
    "start": "2895689",
    "end": "2901420"
  },
  {
    "text": "multiple sam'l provider x' you can give them a particular string to parse in a username so most likely this would be a",
    "start": "2901420",
    "end": "2908380"
  },
  {
    "text": "domain name like amazon.com or something else and instead of having a button and said octa",
    "start": "2908380",
    "end": "2913630"
  },
  {
    "text": "I would just say sign in with your corporate email and if I type in Justin at Amazon it would read the amazon.com",
    "start": "2913630",
    "end": "2920500"
  },
  {
    "text": "part and it would send me to my amazon.com corporate sign-in page you know hosted by our sam'l service so",
    "start": "2920500",
    "end": "2928270"
  },
  {
    "text": "you can have many different sam'l providers all with one UI and behind the scenes redirecting them and then the",
    "start": "2928270",
    "end": "2935290"
  },
  {
    "text": "other part as Vladimir said we have a universal user directory so how can we get a consistent view of our users so if",
    "start": "2935290",
    "end": "2943119"
  },
  {
    "text": "we go in here to Google Google provides all of these standard attributes for our users so I've mapped them into user pull",
    "start": "2943119",
    "end": "2950440"
  },
  {
    "text": "attributes so most of these were just out-of-the-box user pull attributes like email a name but I've also set up a",
    "start": "2950440",
    "end": "2957310"
  },
  {
    "text": "custom attribute for my access token from Google and when it expires so if",
    "start": "2957310",
    "end": "2964480"
  },
  {
    "text": "you want to capture your access token from these other providers to be able to make calls on their behalf directly with",
    "start": "2964480",
    "end": "2970030"
  },
  {
    "text": "Google or something else it's as simple as creating that attribute and then mapping this to it with sam'l providers",
    "start": "2970030",
    "end": "2977109"
  },
  {
    "text": "it's much the same so here's a octa sam'l is soap based so you depends on",
    "start": "2977109",
    "end": "2983500"
  },
  {
    "text": "the provider how this looks but you just have my different attributes and then I map them to the name so when I look at",
    "start": "2983500",
    "end": "2990220"
  },
  {
    "text": "my users that have actually been in the pool you can see which ones have come in through standard username password sign",
    "start": "2990220",
    "end": "2997210"
  },
  {
    "text": "up versus my federated external users but when I click into them the",
    "start": "2997210",
    "end": "3003960"
  },
  {
    "text": "attributes of Cognito are the same so my given name is Justin last name email all",
    "start": "3003960",
    "end": "3010349"
  },
  {
    "text": "of that's been mapped into one consistent schema and Universal user directory for all of my users and then",
    "start": "3010349",
    "end": "3018300"
  },
  {
    "text": "the final thing to know as I mentioned our UI the hosted UI is very customizable you can get an ID here of",
    "start": "3018300",
    "end": "3025380"
  },
  {
    "text": "all the different types of things you can customize from the styling of an error message to the label to the logo",
    "start": "3025380",
    "end": "3031050"
  },
  {
    "text": "legal text and more",
    "start": "3031050",
    "end": "3034580"
  },
  {
    "start": "3038000",
    "end": "3056000"
  },
  {
    "text": "so one final thing we're hearing from customers is how can they migrate to use",
    "start": "3038950",
    "end": "3044990"
  },
  {
    "text": "some of these features if they're already using user pools so I'll terminate Wladimir to tell you about how that's possible there's actually a lot",
    "start": "3044990",
    "end": "3052310"
  },
  {
    "text": "of ways of migrating now I'll talk about two of the ways so the first one is a",
    "start": "3052310",
    "end": "3057770"
  },
  {
    "start": "3056000",
    "end": "3090000"
  },
  {
    "text": "bulk import you export users from your current users directory you create a CSV",
    "start": "3057770",
    "end": "3065240"
  },
  {
    "text": "file from them and then you run an import job and repeat and then what's",
    "start": "3065240",
    "end": "3072290"
  },
  {
    "text": "going to happen is you need to inform your users that they will have to reset",
    "start": "3072290",
    "end": "3078110"
  },
  {
    "text": "that password so let's assume you don't want to you want a more seamless",
    "start": "3078110",
    "end": "3083300"
  },
  {
    "text": "migration and you don't want your users to reset to have to reset our passwords",
    "start": "3083300",
    "end": "3089270"
  },
  {
    "text": "what do you do well there's a one at a time migration what that is is you will",
    "start": "3089270",
    "end": "3094640"
  },
  {
    "start": "3090000",
    "end": "3143000"
  },
  {
    "text": "have to tweak your UI a little bit to first try and authenticate the user with",
    "start": "3094640",
    "end": "3101390"
  },
  {
    "text": "the COG near a user pool if the response that you get is the user does not exist then you would authenticate the user",
    "start": "3101390",
    "end": "3108830"
  },
  {
    "text": "with the current directory and if the user exists and has successfully",
    "start": "3108830",
    "end": "3115160"
  },
  {
    "text": "authenticated in the background you register the user with canary user pools",
    "start": "3115160",
    "end": "3120620"
  },
  {
    "text": "and basically you will have to you know",
    "start": "3120620",
    "end": "3126970"
  },
  {
    "text": "give it some time in order to allow your users to go through the flow at the end",
    "start": "3126970",
    "end": "3133250"
  },
  {
    "text": "of the day some users will not use your application for example so you will still need to export those users and",
    "start": "3133250",
    "end": "3138920"
  },
  {
    "text": "import them and that will need to reset their passwords afterwards so just to",
    "start": "3138920",
    "end": "3145250"
  },
  {
    "text": "wrap up we've created a mobile application that allows your users to sign in to upload their profile images",
    "start": "3145250",
    "end": "3154220"
  },
  {
    "text": "and to search for conferences and to book them but it doesn't have to be a",
    "start": "3154220",
    "end": "3159290"
  },
  {
    "text": "mobile application can be a web application and this application is actually written using JavaScript so you",
    "start": "3159290",
    "end": "3165410"
  },
  {
    "text": "can run it in your browser and this is the github repo we have a",
    "start": "3165410",
    "end": "3172460"
  },
  {
    "start": "3170000",
    "end": "3184000"
  },
  {
    "text": "bunch of cognero reference architectures on AWS labs so please take a look at",
    "start": "3172460",
    "end": "3178220"
  },
  {
    "text": "them and if you're interested in this session you might be interested in these related sessions as well please complete",
    "start": "3178220",
    "end": "3186980"
  },
  {
    "text": "your evaluations and thank you for those",
    "start": "3186980",
    "end": "3195380"
  },
  {
    "text": "for those interested we'll hang around for questions and then the Cognito team if you guys could stand up so they're",
    "start": "3195380",
    "end": "3201230"
  },
  {
    "text": "back in that corner some of the cognitive engineers and folks are here feel free to ask any of us questions",
    "start": "3201230",
    "end": "3207910"
  }
]