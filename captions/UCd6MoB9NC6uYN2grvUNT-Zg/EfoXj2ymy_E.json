[
  {
    "start": "0",
    "end": "390000"
  },
  {
    "text": "so I'll start my talk with a little bit",
    "start": "79",
    "end": "3149"
  },
  {
    "text": "about what I'm going to talk about I'll",
    "start": "3149",
    "end": "4920"
  },
  {
    "text": "tell you a little bit about me about",
    "start": "4920",
    "end": "6120"
  },
  {
    "text": "tulip and what we do I'll talk about the",
    "start": "6120",
    "end": "9360"
  },
  {
    "text": "service the way we used to do it",
    "start": "9360",
    "end": "12000"
  },
  {
    "text": "the new way we do it and the really",
    "start": "12000",
    "end": "13980"
  },
  {
    "text": "great way we do it so I am bill",
    "start": "13980",
    "end": "17430"
  },
  {
    "text": "Vandenberg I'm a DevOps engineer with",
    "start": "17430",
    "end": "18960"
  },
  {
    "text": "tulip I've been the company since 2013",
    "start": "18960",
    "end": "22250"
  },
  {
    "text": "I'm a coffee nerd I really like food I'm",
    "start": "22250",
    "end": "25590"
  },
  {
    "text": "an amateur photographer and cat",
    "start": "25590",
    "end": "27390"
  },
  {
    "text": "enthusiast that is my cat one of my cats",
    "start": "27390",
    "end": "30260"
  },
  {
    "text": "if you're a dog enthusiast go check out",
    "start": "30260",
    "end": "33870"
  },
  {
    "text": "another talk I'm kidding please stay",
    "start": "33870",
    "end": "37340"
  },
  {
    "text": "so tulip is a mobile application",
    "start": "37340",
    "end": "39600"
  },
  {
    "text": "provider we're focused on empowering",
    "start": "39600",
    "end": "41520"
  },
  {
    "text": "store associates",
    "start": "41520",
    "end": "42600"
  },
  {
    "text": "we have apps that make our products",
    "start": "42600",
    "end": "45600"
  },
  {
    "text": "manage customer data we check out",
    "start": "45600",
    "end": "47399"
  },
  {
    "text": "shoppers and message clients and our",
    "start": "47399",
    "end": "49260"
  },
  {
    "text": "client telling apps help to elevate the",
    "start": "49260",
    "end": "50670"
  },
  {
    "text": "in-store experience and drive sales the",
    "start": "50670",
    "end": "54270"
  },
  {
    "text": "service I'm going to talk to you about",
    "start": "54270",
    "end": "55590"
  },
  {
    "text": "yeah we call image server it is a",
    "start": "55590",
    "end": "57660"
  },
  {
    "text": "restful api it does uploads and",
    "start": "57660",
    "end": "60539"
  },
  {
    "text": "transform and downloads of images for",
    "start": "60539",
    "end": "62969"
  },
  {
    "text": "use in the app that does things like",
    "start": "62969",
    "end": "65400"
  },
  {
    "text": "category and product images customer",
    "start": "65400",
    "end": "67260"
  },
  {
    "text": "images and it's it's really bursty so we",
    "start": "67260",
    "end": "71070"
  },
  {
    "text": "see uploads happen in bursts overnight",
    "start": "71070",
    "end": "73590"
  },
  {
    "text": "and our traffic patterns are very",
    "start": "73590",
    "end": "75750"
  },
  {
    "text": "strange",
    "start": "75750",
    "end": "76320"
  },
  {
    "text": "it's a multi-tenant service so all of",
    "start": "76320",
    "end": "77820"
  },
  {
    "text": "our customers run on this one service",
    "start": "77820",
    "end": "79770"
  },
  {
    "text": "that we run today that stores about six",
    "start": "79770",
    "end": "83310"
  },
  {
    "text": "terabytes of images so it's not",
    "start": "83310",
    "end": "84600"
  },
  {
    "text": "absolutely huge but it's respectable",
    "start": "84600",
    "end": "86939"
  },
  {
    "text": "that's over about 11 million images and",
    "start": "86939",
    "end": "89310"
  },
  {
    "text": "four and a half nines of availability",
    "start": "89310",
    "end": "90900"
  },
  {
    "text": "last year we see about 15 million",
    "start": "90900",
    "end": "93360"
  },
  {
    "text": "requests a day on this service so most",
    "start": "93360",
    "end": "98430"
  },
  {
    "text": "people will recognize the graph on the",
    "start": "98430",
    "end": "100290"
  },
  {
    "text": "top here as a normally distributed",
    "start": "100290",
    "end": "102020"
  },
  {
    "text": "traffic pattern this is what most web",
    "start": "102020",
    "end": "104040"
  },
  {
    "text": "applications see on the bottom is the",
    "start": "104040",
    "end": "106829"
  },
  {
    "text": "traffic pattern that we see for image",
    "start": "106829",
    "end": "108750"
  },
  {
    "text": "server so a little bursty",
    "start": "108750",
    "end": "113720"
  },
  {
    "text": "they're the old way we used to do this",
    "start": "113760",
    "end": "116320"
  },
  {
    "text": "is we had reverse proxies with the cash",
    "start": "116320",
    "end": "119590"
  },
  {
    "text": "in front of it so that is a cloud front",
    "start": "119590",
    "end": "121150"
  },
  {
    "text": "cache and just a couple of easy two",
    "start": "121150",
    "end": "124360"
  },
  {
    "text": "instances for reverse proxies and a",
    "start": "124360",
    "end": "126430"
  },
  {
    "text": "couple of ec2 instances hosting the",
    "start": "126430",
    "end": "127810"
  },
  {
    "text": "application itself images are stored in",
    "start": "127810",
    "end": "130060"
  },
  {
    "text": "an s3 bucket and the keys are stored",
    "start": "130060",
    "end": "133000"
  },
  {
    "text": "into my sequel database the old approach",
    "start": "133000",
    "end": "137710"
  },
  {
    "text": "is really great they worked fine it was",
    "start": "137710",
    "end": "140320"
  },
  {
    "text": "way better than the multiple image",
    "start": "140320",
    "end": "142120"
  },
  {
    "text": "servers that are replaced it was",
    "start": "142120",
    "end": "145090"
  },
  {
    "text": "deployed using ansible which is",
    "start": "145090",
    "end": "146170"
  },
  {
    "text": "basically just get Pola over an SSH",
    "start": "146170",
    "end": "148210"
  },
  {
    "text": "tunnel so that's easy to understand not",
    "start": "148210",
    "end": "151030"
  },
  {
    "text": "necessarily the most reliable though as",
    "start": "151030",
    "end": "152890"
  },
  {
    "text": "you add more servers so you can get out",
    "start": "152890",
    "end": "154300"
  },
  {
    "text": "of sync between your application servers",
    "start": "154300",
    "end": "156430"
  },
  {
    "text": "during deployment but it was really easy",
    "start": "156430",
    "end": "158890"
  },
  {
    "text": "to understand the operational complexity",
    "start": "158890",
    "end": "160630"
  },
  {
    "text": "here was basically zero",
    "start": "160630",
    "end": "163830"
  },
  {
    "text": "but then sales happened and we had more",
    "start": "164870",
    "end": "167660"
  },
  {
    "text": "customers hitting the server we saw more",
    "start": "167660",
    "end": "169190"
  },
  {
    "text": "batch uploads happening at the same time",
    "start": "169190",
    "end": "171230"
  },
  {
    "text": "overnight we saw a lot of failures of",
    "start": "171230",
    "end": "174650"
  },
  {
    "text": "the application though it's just running",
    "start": "174650",
    "end": "175849"
  },
  {
    "text": "out of memory as they handled more and",
    "start": "175849",
    "end": "177410"
  },
  {
    "text": "more requests and we started getting",
    "start": "177410",
    "end": "180500"
  },
  {
    "text": "more pages so we added two more",
    "start": "180500",
    "end": "183080"
  },
  {
    "text": "application servers and palm salts big",
    "start": "183080",
    "end": "185330"
  },
  {
    "text": "go home we increased our capacity you",
    "start": "185330",
    "end": "188239"
  },
  {
    "text": "know to be below the peaks to be above",
    "start": "188239",
    "end": "189980"
  },
  {
    "text": "the peaks but the problem here is that",
    "start": "189980",
    "end": "192049"
  },
  {
    "text": "this white area here above the traffic",
    "start": "192049",
    "end": "194920"
  },
  {
    "text": "between the Green Line is wasted spend",
    "start": "194920",
    "end": "197390"
  },
  {
    "text": "so we've got four servers running for",
    "start": "197390",
    "end": "199310"
  },
  {
    "text": "you know one server of capacity when",
    "start": "199310",
    "end": "201230"
  },
  {
    "text": "we're not doing uploads but we can",
    "start": "201230",
    "end": "203480"
  },
  {
    "text": "handle the traffic without falling over",
    "start": "203480",
    "end": "206440"
  },
  {
    "text": "but then more sales happened and we saw",
    "start": "206440",
    "end": "210680"
  },
  {
    "text": "more failures of our application servers",
    "start": "210680",
    "end": "212650"
  },
  {
    "text": "we have more lines going off so we added",
    "start": "212650",
    "end": "216470"
  },
  {
    "text": "four more servers and unsolved well",
    "start": "216470",
    "end": "222920"
  },
  {
    "text": "you're happy we were getting to your",
    "start": "222920",
    "end": "223849"
  },
  {
    "text": "pages I joke but this actually did buy",
    "start": "223849",
    "end": "226370"
  },
  {
    "text": "us a lot of time so the the old server",
    "start": "226370",
    "end": "228620"
  },
  {
    "text": "we ran on for a couple of years we had",
    "start": "228620",
    "end": "233690"
  },
  {
    "text": "some goals going forward this new",
    "start": "233690",
    "end": "236750"
  },
  {
    "text": "version that I like to call it we wanted",
    "start": "236750",
    "end": "239000"
  },
  {
    "text": "it to automatically adjust to scale we",
    "start": "239000",
    "end": "241160"
  },
  {
    "text": "wanted it to automatically recover from",
    "start": "241160",
    "end": "242450"
  },
  {
    "text": "failing instances we wanted the",
    "start": "242450",
    "end": "245329"
  },
  {
    "text": "deployments to be reliable and easy to",
    "start": "245329",
    "end": "248150"
  },
  {
    "text": "rollback",
    "start": "248150",
    "end": "250420"
  },
  {
    "text": "we have to be able to run the code",
    "start": "252200",
    "end": "253550"
  },
  {
    "text": "locally this is something we didn't have",
    "start": "253550",
    "end": "254900"
  },
  {
    "text": "before now so testing was hard basically",
    "start": "254900",
    "end": "257150"
  },
  {
    "text": "push to production and pray and it had",
    "start": "257150",
    "end": "261950"
  },
  {
    "text": "to be a breeze to monitor so we had to",
    "start": "261950",
    "end": "264200"
  },
  {
    "text": "have a dashboard that we could look at",
    "start": "264200",
    "end": "266150"
  },
  {
    "text": "and know immediately the state of the",
    "start": "266150",
    "end": "267470"
  },
  {
    "text": "service basically we just want to spend",
    "start": "267470",
    "end": "270860"
  },
  {
    "text": "less time triaging the image server it",
    "start": "270860",
    "end": "272300"
  },
  {
    "text": "was taking up our entire team's time",
    "start": "272300",
    "end": "274720"
  },
  {
    "text": "there's only four of us on the team so",
    "start": "274720",
    "end": "277930"
  },
  {
    "text": "one service taking up for people's times",
    "start": "277930",
    "end": "280730"
  },
  {
    "text": "not great",
    "start": "280730",
    "end": "282700"
  },
  {
    "text": "so the new approach we knew we wanted to",
    "start": "282700",
    "end": "284690"
  },
  {
    "text": "use containers we want to use CI to",
    "start": "284690",
    "end": "287300"
  },
  {
    "text": "build the containers around at every get",
    "start": "287300",
    "end": "288620"
  },
  {
    "text": "push to be available and we decide to",
    "start": "288620",
    "end": "290810"
  },
  {
    "text": "use CCS to manage the container",
    "start": "290810",
    "end": "292370"
  },
  {
    "text": "scheduling it keeps the service running",
    "start": "292370",
    "end": "294380"
  },
  {
    "text": "for us we powered the cluster using an",
    "start": "294380",
    "end": "297380"
  },
  {
    "text": "auto scaling group and we had a lambda",
    "start": "297380",
    "end": "299990"
  },
  {
    "text": "for auto scaling logic so we could",
    "start": "299990",
    "end": "301760"
  },
  {
    "text": "really specifically target what metrics",
    "start": "301760",
    "end": "304070"
  },
  {
    "text": "we wanted to use to scale our group we",
    "start": "304070",
    "end": "307820"
  },
  {
    "text": "pushed our logs cloud watch logs this is",
    "start": "307820",
    "end": "309350"
  },
  {
    "text": "a standard docker integration there's",
    "start": "309350",
    "end": "310970"
  },
  {
    "text": "nothing special going on here but one",
    "start": "310970",
    "end": "313220"
  },
  {
    "text": "thing that's nice about this is that",
    "start": "313220",
    "end": "314450"
  },
  {
    "text": "cloud watch logs does give you metric",
    "start": "314450",
    "end": "316010"
  },
  {
    "text": "filters so it can actually parse the",
    "start": "316010",
    "end": "317540"
  },
  {
    "text": "metrics out of your logs on the fly so",
    "start": "317540",
    "end": "319490"
  },
  {
    "text": "if you have something logging like",
    "start": "319490",
    "end": "320900"
  },
  {
    "text": "response time or number of bytes sent",
    "start": "320900",
    "end": "323570"
  },
  {
    "text": "you can get an average response byte",
    "start": "323570",
    "end": "326120"
  },
  {
    "text": "sent or response time graph in cloud",
    "start": "326120",
    "end": "327950"
  },
  {
    "text": "watch with zero work we also had a",
    "start": "327950",
    "end": "331340"
  },
  {
    "text": "lambda looking at the logs that was",
    "start": "331340",
    "end": "332479"
  },
  {
    "text": "doing some custom metrics so one",
    "start": "332479",
    "end": "335450"
  },
  {
    "text": "downside to metric filters is that you",
    "start": "335450",
    "end": "337370"
  },
  {
    "text": "can't do dimensions so you can't see",
    "start": "337370",
    "end": "339310"
  },
  {
    "text": "which container is spiking with latency",
    "start": "339310",
    "end": "342260"
  },
  {
    "text": "for example you'll only see that latency",
    "start": "342260",
    "end": "344690"
  },
  {
    "text": "is bad so the reason we want to go",
    "start": "344690",
    "end": "348680"
  },
  {
    "text": "containers hopefully you guys have yours",
    "start": "348680",
    "end": "351560"
  },
  {
    "text": "are using containers I we've definitely",
    "start": "351560",
    "end": "353390"
  },
  {
    "text": "brought into containers most of the",
    "start": "353390",
    "end": "355550"
  },
  {
    "text": "industry is going that way it seems now",
    "start": "355550",
    "end": "358010"
  },
  {
    "text": "it gives us repeatable deployment",
    "start": "358010",
    "end": "359240"
  },
  {
    "text": "application isolation from the operating",
    "start": "359240",
    "end": "361340"
  },
  {
    "text": "system so we don't have to worry about",
    "start": "361340",
    "end": "363620"
  },
  {
    "text": "the underlying instances at all it's",
    "start": "363620",
    "end": "365810"
  },
  {
    "text": "really easy to run locally we can fill",
    "start": "365810",
    "end": "367160"
  },
  {
    "text": "our container image and run it on our",
    "start": "367160",
    "end": "369080"
  },
  {
    "text": "laptops that's quick and easy to",
    "start": "369080",
    "end": "371539"
  },
  {
    "text": "rollback docker tags all your images so",
    "start": "371539",
    "end": "373070"
  },
  {
    "text": "if you push a bad tag you can roll back",
    "start": "373070",
    "end": "374990"
  },
  {
    "text": "to the old version that was running and",
    "start": "374990",
    "end": "377240"
  },
  {
    "text": "it scales really quickly",
    "start": "377240",
    "end": "379940"
  },
  {
    "text": "it also has enforced limits from the",
    "start": "379940",
    "end": "382340"
  },
  {
    "text": "operating system so if you run to the",
    "start": "382340",
    "end": "383900"
  },
  {
    "text": "memory it can really quickly kill your",
    "start": "383900",
    "end": "385340"
  },
  {
    "text": "container and spend up a new one without",
    "start": "385340",
    "end": "387350"
  },
  {
    "text": "the actual host going down we have a",
    "start": "387350",
    "end": "392120"
  },
  {
    "start": "390000",
    "end": "747000"
  },
  {
    "text": "Jenkins spot that watches our git repo",
    "start": "392120",
    "end": "394370"
  },
  {
    "text": "and automatically bilges our images on",
    "start": "394370",
    "end": "396230"
  },
  {
    "text": "every good push it gets tagged with the",
    "start": "396230",
    "end": "398510"
  },
  {
    "text": "build number so every every good push is",
    "start": "398510",
    "end": "400490"
  },
  {
    "text": "unique and they're easy to easy to parse",
    "start": "400490",
    "end": "403130"
  },
  {
    "text": "and their push to ECR after the test",
    "start": "403130",
    "end": "406280"
  },
  {
    "text": "pass",
    "start": "406280",
    "end": "408430"
  },
  {
    "text": "ECS is our container scheduler so we",
    "start": "408430",
    "end": "411430"
  },
  {
    "text": "have a cluster running ECS is the thing",
    "start": "411430",
    "end": "413470"
  },
  {
    "text": "that's managing the containers moving",
    "start": "413470",
    "end": "415300"
  },
  {
    "text": "them around from server to server and",
    "start": "415300",
    "end": "416410"
  },
  {
    "text": "making sure that it is available it does",
    "start": "416410",
    "end": "419650"
  },
  {
    "text": "a rowing deployment method it provides",
    "start": "419650",
    "end": "423520"
  },
  {
    "text": "automatic metrics on some of the KPIs",
    "start": "423520",
    "end": "426550"
  },
  {
    "text": "for the service so CPU and memory are",
    "start": "426550",
    "end": "428260"
  },
  {
    "text": "automatic you get them for free just in",
    "start": "428260",
    "end": "429850"
  },
  {
    "text": "there in the service view and it has",
    "start": "429850",
    "end": "432880"
  },
  {
    "text": "built-in oil based access control both",
    "start": "432880",
    "end": "434860"
  },
  {
    "text": "for access to the deployment the",
    "start": "434860",
    "end": "436980"
  },
  {
    "text": "deployment plane and the AWS resources",
    "start": "436980",
    "end": "439840"
  },
  {
    "text": "that the service is using so we're using",
    "start": "439840",
    "end": "441880"
  },
  {
    "text": "s3 to store images we can print access",
    "start": "441880",
    "end": "444670"
  },
  {
    "text": "to our service to the s3 bucket directly",
    "start": "444670",
    "end": "446680"
  },
  {
    "text": "through ECS this is a different size",
    "start": "446680",
    "end": "451330"
  },
  {
    "text": "screen than mine",
    "start": "451330",
    "end": "452220"
  },
  {
    "text": "AWS premium support was also that helped",
    "start": "452220",
    "end": "454720"
  },
  {
    "text": "us along the way so when we went into",
    "start": "454720",
    "end": "456790"
  },
  {
    "text": "hiccups with ECS we could really quickly",
    "start": "456790",
    "end": "458710"
  },
  {
    "text": "reach out start up a chat with one of",
    "start": "458710",
    "end": "460330"
  },
  {
    "text": "their engineers and figure out what's",
    "start": "460330",
    "end": "462190"
  },
  {
    "text": "going on so auto-scaling",
    "start": "462190",
    "end": "465160"
  },
  {
    "text": "definitely required for this service as",
    "start": "465160",
    "end": "467710"
  },
  {
    "text": "it is so bursty it gives us flexible",
    "start": "467710",
    "end": "470290"
  },
  {
    "text": "cluster capacity and cost savings",
    "start": "470290",
    "end": "473050"
  },
  {
    "text": "without without running that green line",
    "start": "473050",
    "end": "475570"
  },
  {
    "text": "that was way above this graph before",
    "start": "475570",
    "end": "476770"
  },
  {
    "text": "this graph is our account of containers",
    "start": "476770",
    "end": "479860"
  },
  {
    "text": "running",
    "start": "479860",
    "end": "481290"
  },
  {
    "text": "request rate so it really tightly",
    "start": "481290",
    "end": "483480"
  },
  {
    "text": "follows it also gives us automatic",
    "start": "483480",
    "end": "487080"
  },
  {
    "text": "recovery of failed instances so anything",
    "start": "487080",
    "end": "489120"
  },
  {
    "text": "any instance that's in an auto scaling",
    "start": "489120",
    "end": "490410"
  },
  {
    "text": "group and starts to fall over",
    "start": "490410",
    "end": "491790"
  },
  {
    "text": "AWS automatically says I'm going to",
    "start": "491790",
    "end": "493140"
  },
  {
    "text": "shoot that one and replace it and the",
    "start": "493140",
    "end": "497640"
  },
  {
    "text": "instance user data in the launch config",
    "start": "497640",
    "end": "499620"
  },
  {
    "text": "for the auto scaling group automatically",
    "start": "499620",
    "end": "501930"
  },
  {
    "text": "registers into the image server auto CCS",
    "start": "501930",
    "end": "505140"
  },
  {
    "text": "group GCS cluster",
    "start": "505140",
    "end": "508460"
  },
  {
    "text": "the lambda we used in a couple places",
    "start": "509010",
    "end": "511610"
  },
  {
    "text": "there were two functions there was one",
    "start": "511610",
    "end": "513630"
  },
  {
    "text": "that was doing custom metrics for",
    "start": "513630",
    "end": "515610"
  },
  {
    "text": "scaling the cluster so at first we",
    "start": "515610",
    "end": "517800"
  },
  {
    "text": "thought we had an application that was",
    "start": "517800",
    "end": "520229"
  },
  {
    "text": "seeing two different types of traffic",
    "start": "520229",
    "end": "521880"
  },
  {
    "text": "one that was memory intensive and one",
    "start": "521880",
    "end": "523919"
  },
  {
    "text": "that was CPU intensive so we really",
    "start": "523919",
    "end": "526140"
  },
  {
    "text": "wanted to be able to target when the",
    "start": "526140",
    "end": "527400"
  },
  {
    "text": "cluster was going to scale and we want",
    "start": "527400",
    "end": "529050"
  },
  {
    "text": "to understand that logic",
    "start": "529050",
    "end": "530780"
  },
  {
    "text": "[Applause]",
    "start": "530780",
    "end": "533980"
  },
  {
    "text": "and it kept the ECS service on the other",
    "start": "533980",
    "end": "535810"
  },
  {
    "text": "scaling group in sync so we were",
    "start": "535810",
    "end": "537430"
  },
  {
    "text": "actually running one container for host",
    "start": "537430",
    "end": "538980"
  },
  {
    "text": "to minimize context switching between",
    "start": "538980",
    "end": "541450"
  },
  {
    "text": "containers so when the auto scaling",
    "start": "541450",
    "end": "544899"
  },
  {
    "text": "group scaled out or in it would scale",
    "start": "544899",
    "end": "546550"
  },
  {
    "text": "the desired account for the EECS service",
    "start": "546550",
    "end": "548740"
  },
  {
    "text": "as well",
    "start": "548740",
    "end": "549090"
  },
  {
    "text": "[Applause]",
    "start": "549090",
    "end": "552340"
  },
  {
    "text": "it also adjusted the sorry you can't see",
    "start": "553320",
    "end": "555750"
  },
  {
    "text": "that bullet point it just hit the",
    "start": "555750",
    "end": "557040"
  },
  {
    "text": "minimum a maximum account for the ECF",
    "start": "557040",
    "end": "559980"
  },
  {
    "text": "deployments on the scaling event so if",
    "start": "559980",
    "end": "561660"
  },
  {
    "text": "we had two containers running the",
    "start": "561660",
    "end": "563580"
  },
  {
    "text": "minimum desired running would be 50% if",
    "start": "563580",
    "end": "566250"
  },
  {
    "text": "we had three containers would be 33%",
    "start": "566250",
    "end": "567920"
  },
  {
    "text": "until we got to five and we'd take out",
    "start": "567920",
    "end": "570090"
  },
  {
    "text": "20% of the gap of the capacity at a time",
    "start": "570090",
    "end": "571980"
  },
  {
    "text": "just to do new deployments cod wash logs",
    "start": "571980",
    "end": "576690"
  },
  {
    "text": "gives us a central place to look at logs",
    "start": "576690",
    "end": "578610"
  },
  {
    "text": "it's the standard docker integration and",
    "start": "578610",
    "end": "580890"
  },
  {
    "text": "like I said before the metric filters",
    "start": "580890",
    "end": "582870"
  },
  {
    "text": "are used to parse out some of our key",
    "start": "582870",
    "end": "584700"
  },
  {
    "text": "performance indicators so HTTP status",
    "start": "584700",
    "end": "586640"
  },
  {
    "text": "buckets we get from metric metric",
    "start": "586640",
    "end": "588750"
  },
  {
    "text": "filters so we can see the number of 100",
    "start": "588750",
    "end": "591510"
  },
  {
    "text": "responses 200 responses 300 responses",
    "start": "591510",
    "end": "594590"
  },
  {
    "text": "and yeah life is brave in this new world",
    "start": "594590",
    "end": "598500"
  },
  {
    "text": "the architecture diagram is a little",
    "start": "598500",
    "end": "600600"
  },
  {
    "text": "gross though there's a lot of lines and",
    "start": "600600",
    "end": "603030"
  },
  {
    "text": "a lot of operational complexity so we",
    "start": "603030",
    "end": "606330"
  },
  {
    "text": "had some some really great successes",
    "start": "606330",
    "end": "607920"
  },
  {
    "text": "with this new approach the service did",
    "start": "607920",
    "end": "610320"
  },
  {
    "text": "recover within a few minutes from a",
    "start": "610320",
    "end": "611760"
  },
  {
    "text": "failed instance the number of pages",
    "start": "611760",
    "end": "614790"
  },
  {
    "text": "really decreased so we weren't spending",
    "start": "614790",
    "end": "616260"
  },
  {
    "text": "as much time triaging the image server",
    "start": "616260",
    "end": "617960"
  },
  {
    "text": "and we could run the application server",
    "start": "617960",
    "end": "620850"
  },
  {
    "text": "locally so we could pull that in that",
    "start": "620850",
    "end": "622410"
  },
  {
    "text": "docker image that we built with Jenkins",
    "start": "622410",
    "end": "623640"
  },
  {
    "text": "run it on our laptop and run the tests",
    "start": "623640",
    "end": "626480"
  },
  {
    "text": "we also had a dashboard that we could",
    "start": "626480",
    "end": "629040"
  },
  {
    "text": "really really quickly and easily get to",
    "start": "629040",
    "end": "631560"
  },
  {
    "text": "that showed a very high view of the",
    "start": "631560",
    "end": "634650"
  },
  {
    "text": "service and how it was running in the",
    "start": "634650",
    "end": "637290"
  },
  {
    "text": "launcher all in one place we could go to",
    "start": "637290",
    "end": "639090"
  },
  {
    "text": "our cloud watch logs page and see logs",
    "start": "639090",
    "end": "641250"
  },
  {
    "text": "for every application server that was",
    "start": "641250",
    "end": "642510"
  },
  {
    "text": "running and we could search them we also",
    "start": "642510",
    "end": "645960"
  },
  {
    "text": "had automatic tests that I rebuild we",
    "start": "645960",
    "end": "648510"
  },
  {
    "text": "had safe deployments because every image",
    "start": "648510",
    "end": "650010"
  },
  {
    "text": "was tagged so we could guarantee that",
    "start": "650010",
    "end": "652050"
  },
  {
    "text": "every version of the image server that",
    "start": "652050",
    "end": "653610"
  },
  {
    "text": "was running out there was the same",
    "start": "653610",
    "end": "654720"
  },
  {
    "text": "version and it scaled to handle traffic",
    "start": "654720",
    "end": "657810"
  },
  {
    "text": "so great success kind of there were some",
    "start": "657810",
    "end": "661710"
  },
  {
    "text": "non success things so self recovery and",
    "start": "661710",
    "end": "665460"
  },
  {
    "text": "scaling took too long and the reason for",
    "start": "665460",
    "end": "666960"
  },
  {
    "text": "this is because we were running one",
    "start": "666960",
    "end": "668280"
  },
  {
    "text": "container per ECS instance ECS instances",
    "start": "668280",
    "end": "671190"
  },
  {
    "text": "do take a few minutes to come out in",
    "start": "671190",
    "end": "672960"
  },
  {
    "text": "some cases it depends on how busy Amazon",
    "start": "672960",
    "end": "674610"
  },
  {
    "text": "is",
    "start": "674610",
    "end": "676430"
  },
  {
    "text": "the auto-scaling logic also ended up",
    "start": "676430",
    "end": "678350"
  },
  {
    "text": "being complicated because it was running",
    "start": "678350",
    "end": "679670"
  },
  {
    "text": "an O&M de so because we wanted such",
    "start": "679670",
    "end": "682490"
  },
  {
    "text": "fine-grained control we had to",
    "start": "682490",
    "end": "684190"
  },
  {
    "text": "understand that control playing in",
    "start": "684190",
    "end": "686690"
  },
  {
    "text": "detail",
    "start": "686690",
    "end": "689080"
  },
  {
    "text": "as I said yeah we had we had one",
    "start": "689230",
    "end": "690850"
  },
  {
    "text": "container for UCS instance so not great",
    "start": "690850",
    "end": "693010"
  },
  {
    "text": "for speed and we also did some free",
    "start": "693010",
    "end": "696130"
  },
  {
    "text": "warming so we automatically increase the",
    "start": "696130",
    "end": "698200"
  },
  {
    "text": "size of the cluster this is one of the",
    "start": "698200",
    "end": "699460"
  },
  {
    "text": "things you can do with auto scaling",
    "start": "699460",
    "end": "700450"
  },
  {
    "text": "groups is you can have scheduled scaling",
    "start": "700450",
    "end": "702010"
  },
  {
    "text": "events so we had one every day from 5:00",
    "start": "702010",
    "end": "704200"
  },
  {
    "text": "a.m. to 9 a.m. to increase the size of",
    "start": "704200",
    "end": "706180"
  },
  {
    "text": "the cluster to handle uploads so imports",
    "start": "706180",
    "end": "710980"
  },
  {
    "text": "could still take the service offline not",
    "start": "710980",
    "end": "713740"
  },
  {
    "text": "great it also took the service offline",
    "start": "713740",
    "end": "716260"
  },
  {
    "text": "for both uploads and downloads so this",
    "start": "716260",
    "end": "721270"
  },
  {
    "text": "new image server just don't remove the",
    "start": "721270",
    "end": "723220"
  },
  {
    "text": "pot it's great",
    "start": "723220",
    "end": "725850"
  },
  {
    "text": "so we had another another phase of this",
    "start": "725900",
    "end": "728710"
  },
  {
    "text": "we had some new goals we ordered faster",
    "start": "728710",
    "end": "730880"
  },
  {
    "text": "scaling and recovery we wanted simpler",
    "start": "730880",
    "end": "732980"
  },
  {
    "text": "auto-scaling logic we want a continuous",
    "start": "732980",
    "end": "734900"
  },
  {
    "text": "deployment we wanted gated deployment to",
    "start": "734900",
    "end": "738770"
  },
  {
    "text": "production we wanted to split the",
    "start": "738770",
    "end": "740900"
  },
  {
    "text": "uploads in the download service so if",
    "start": "740900",
    "end": "742279"
  },
  {
    "text": "one went offline the other one still",
    "start": "742279",
    "end": "743600"
  },
  {
    "text": "worked we wanted to run the entire",
    "start": "743600",
    "end": "745970"
  },
  {
    "text": "environment locally and there was some",
    "start": "745970",
    "end": "748430"
  },
  {
    "start": "747000",
    "end": "779000"
  },
  {
    "text": "great new AWS tech to help us with that",
    "start": "748430",
    "end": "750020"
  },
  {
    "text": "since the last phase of the project",
    "start": "750020",
    "end": "751970"
  },
  {
    "text": "which we ran for a few months one of",
    "start": "751970",
    "end": "756350"
  },
  {
    "text": "those was far gate so far gate allows",
    "start": "756350",
    "end": "758540"
  },
  {
    "text": "you to run containers without needing to",
    "start": "758540",
    "end": "760670"
  },
  {
    "text": "manage the underlying ECS cluster you",
    "start": "760670",
    "end": "762320"
  },
  {
    "text": "basically just say here's a container",
    "start": "762320",
    "end": "763490"
  },
  {
    "text": "image go run it and they figure out the",
    "start": "763490",
    "end": "765770"
  },
  {
    "text": "rest you can actually do networking",
    "start": "765770",
    "end": "767420"
  },
  {
    "text": "inside your VP sees like you normally",
    "start": "767420",
    "end": "768860"
  },
  {
    "text": "would with ECS which is pretty cool they",
    "start": "768860",
    "end": "772010"
  },
  {
    "text": "also released target tracking for auto",
    "start": "772010",
    "end": "773630"
  },
  {
    "text": "scaling which is something we're taking",
    "start": "773630",
    "end": "775880"
  },
  {
    "text": "advantage of as well that is a really",
    "start": "775880",
    "end": "777560"
  },
  {
    "text": "simple auto scaling logic so here's a",
    "start": "777560",
    "end": "780860"
  },
  {
    "start": "779000",
    "end": "817000"
  },
  {
    "text": "zoomed in view of our traffic graph from",
    "start": "780860",
    "end": "783980"
  },
  {
    "text": "the beginning of the presentation and",
    "start": "783980",
    "end": "787220"
  },
  {
    "text": "Fargate like I said you don't need to",
    "start": "787220",
    "end": "789200"
  },
  {
    "text": "manage your EC Essences is underlying",
    "start": "789200",
    "end": "790880"
  },
  {
    "text": "the cluster and you get faster response",
    "start": "790880",
    "end": "792920"
  },
  {
    "text": "to scaling events so it's just fewer",
    "start": "792920",
    "end": "795320"
  },
  {
    "text": "moving parts in your cluster this this",
    "start": "795320",
    "end": "798020"
  },
  {
    "text": "red box here is a three times increase",
    "start": "798020",
    "end": "800959"
  },
  {
    "text": "in traffic and over a six minute period",
    "start": "800959",
    "end": "803300"
  },
  {
    "text": "this is what we normally see for uploads",
    "start": "803300",
    "end": "805490"
  },
  {
    "text": "overnight and this is about 1:00 a.m.",
    "start": "805490",
    "end": "807650"
  },
  {
    "text": "that the green box is a 7 times increase",
    "start": "807650",
    "end": "810350"
  },
  {
    "text": "over 40 minutes so that's a slower rate",
    "start": "810350",
    "end": "812630"
  },
  {
    "text": "but still a huge increase in the span of",
    "start": "812630",
    "end": "815450"
  },
  {
    "text": "under an hour",
    "start": "815450",
    "end": "818050"
  },
  {
    "start": "817000",
    "end": "878000"
  },
  {
    "text": "target tracking also gives us really",
    "start": "818050",
    "end": "820060"
  },
  {
    "text": "really easy to understand auto scaling",
    "start": "820060",
    "end": "821649"
  },
  {
    "text": "logic so basically we just say hey",
    "start": "821649",
    "end": "823180"
  },
  {
    "text": "Amazon aim for a 70% CPU usage in this",
    "start": "823180",
    "end": "826149"
  },
  {
    "text": "service run as many as you need or as",
    "start": "826149",
    "end": "828339"
  },
  {
    "text": "few as you need we do say specifically",
    "start": "828339",
    "end": "830680"
  },
  {
    "text": "don't run fewer than two because we want",
    "start": "830680",
    "end": "833680"
  },
  {
    "text": "high availability of this service and so",
    "start": "833680",
    "end": "837250"
  },
  {
    "text": "we were able to remove our lambda Fratus",
    "start": "837250",
    "end": "838660"
  },
  {
    "text": "going it turns out that we actually",
    "start": "838660",
    "end": "840839"
  },
  {
    "text": "we're able to use CPU directly for our",
    "start": "840839",
    "end": "844630"
  },
  {
    "text": "auto scaling logic once we split out the",
    "start": "844630",
    "end": "846519"
  },
  {
    "text": "services so the top path here the CPU",
    "start": "846519",
    "end": "850420"
  },
  {
    "text": "utilization the bottom graph is number",
    "start": "850420",
    "end": "852790"
  },
  {
    "text": "of containers running that's a little",
    "start": "852790",
    "end": "854320"
  },
  {
    "text": "hard to see on the on the TV but it",
    "start": "854320",
    "end": "857230"
  },
  {
    "text": "really tightly follows the the number of",
    "start": "857230",
    "end": "859180"
  },
  {
    "text": "tasks running really tightly follows the",
    "start": "859180",
    "end": "861700"
  },
  {
    "text": "CPU utilization graph these are two",
    "start": "861700",
    "end": "865360"
  },
  {
    "text": "services here both of them are image",
    "start": "865360",
    "end": "866980"
  },
  {
    "text": "server the blue line is for uploads the",
    "start": "866980",
    "end": "868839"
  },
  {
    "text": "purple line is for downloads same here",
    "start": "868839",
    "end": "871570"
  },
  {
    "text": "the dark purple is for downloads the",
    "start": "871570",
    "end": "873310"
  },
  {
    "text": "light light purple where you might see",
    "start": "873310",
    "end": "875320"
  },
  {
    "text": "it as blue is for uploads we also have",
    "start": "875320",
    "end": "880180"
  },
  {
    "start": "878000",
    "end": "947000"
  },
  {
    "text": "continuous deployment in this new world",
    "start": "880180",
    "end": "881560"
  },
  {
    "text": "so our Jenkins job is doing a deployment",
    "start": "881560",
    "end": "884110"
  },
  {
    "text": "on every git push to a beta cluster we",
    "start": "884110",
    "end": "886750"
  },
  {
    "text": "can test our changes there and then do a",
    "start": "886750",
    "end": "888399"
  },
  {
    "text": "gated deployment to production it's just",
    "start": "888399",
    "end": "890860"
  },
  {
    "text": "a one-click deploy to production button",
    "start": "890860",
    "end": "892750"
  },
  {
    "text": "and this is literally a screenshot of",
    "start": "892750",
    "end": "894070"
  },
  {
    "text": "the page you just click that and it goes",
    "start": "894070",
    "end": "895360"
  },
  {
    "text": "fraud",
    "start": "895360",
    "end": "897630"
  },
  {
    "text": "so the way this actually works is",
    "start": "898850",
    "end": "900950"
  },
  {
    "text": "there's a confirmation stack that",
    "start": "900950",
    "end": "902420"
  },
  {
    "text": "describes the service and Jenkins will",
    "start": "902420",
    "end": "905390"
  },
  {
    "text": "update that stack with the new docker",
    "start": "905390",
    "end": "907700"
  },
  {
    "text": "tag so easy",
    "start": "907700",
    "end": "909560"
  },
  {
    "text": "sorry confirmation will talk to ECS and",
    "start": "909560",
    "end": "912260"
  },
  {
    "text": "say hey I need to do a deployment with",
    "start": "912260",
    "end": "913370"
  },
  {
    "text": "this new tag pcs follows the deployment",
    "start": "913370",
    "end": "915740"
  },
  {
    "text": "and will roll back automatically if any",
    "start": "915740",
    "end": "917330"
  },
  {
    "text": "of the containers are failing and",
    "start": "917330",
    "end": "918880"
  },
  {
    "text": "Jenkins watches the state of the stack",
    "start": "918880",
    "end": "921350"
  },
  {
    "text": "so ECS will actually report back to",
    "start": "921350",
    "end": "922850"
  },
  {
    "text": "confirmation and say whether the",
    "start": "922850",
    "end": "924800"
  },
  {
    "text": "deployment was excessive a success or a",
    "start": "924800",
    "end": "926600"
  },
  {
    "text": "failure and the stack status or will",
    "start": "926600",
    "end": "928430"
  },
  {
    "text": "reflect that so if your stack goes into",
    "start": "928430",
    "end": "931640"
  },
  {
    "text": "update complete",
    "start": "931640",
    "end": "932390"
  },
  {
    "text": "no problem deployment done Jenkins will",
    "start": "932390",
    "end": "935270"
  },
  {
    "text": "actually sit there and poll I think it",
    "start": "935270",
    "end": "936470"
  },
  {
    "text": "falls every 5 minutes or something",
    "start": "936470",
    "end": "938230"
  },
  {
    "text": "whether the stack update is an update",
    "start": "938230",
    "end": "941420"
  },
  {
    "text": "complete or a rollback complete if it's",
    "start": "941420",
    "end": "943130"
  },
  {
    "text": "in a rollback complete it'll email one",
    "start": "943130",
    "end": "944570"
  },
  {
    "text": "of us to go look into what just happened",
    "start": "944570",
    "end": "946310"
  },
  {
    "text": "on the image server we also have split",
    "start": "946310",
    "end": "949640"
  },
  {
    "start": "947000",
    "end": "981000"
  },
  {
    "text": "the service so we separated uploads and",
    "start": "949640",
    "end": "951830"
  },
  {
    "text": "downloads so batch uploads no longer",
    "start": "951830",
    "end": "954830"
  },
  {
    "text": "take the gets offline so the app still",
    "start": "954830",
    "end": "956779"
  },
  {
    "text": "works still looks beautiful with the",
    "start": "956779",
    "end": "959900"
  },
  {
    "text": "upload service offline",
    "start": "959900",
    "end": "962890"
  },
  {
    "text": "the services also scale separately so",
    "start": "964779",
    "end": "967329"
  },
  {
    "text": "this class come before like I said this",
    "start": "967329",
    "end": "969069"
  },
  {
    "text": "top blue line here this sorry the blue",
    "start": "969069",
    "end": "971920"
  },
  {
    "text": "boxes are upload tasks running the",
    "start": "971920",
    "end": "974410"
  },
  {
    "text": "purple boxes are download tasks running",
    "start": "974410",
    "end": "976689"
  },
  {
    "text": "and same for the CPU blue is uploads",
    "start": "976689",
    "end": "979569"
  },
  {
    "text": "purple is downloads so splitting the",
    "start": "979569",
    "end": "983139"
  },
  {
    "start": "981000",
    "end": "1005000"
  },
  {
    "text": "service I actually kind of lied earlier",
    "start": "983139",
    "end": "984699"
  },
  {
    "text": "this is these graphs that were earlier",
    "start": "984699",
    "end": "987310"
  },
  {
    "text": "in the presentation are actually both of",
    "start": "987310",
    "end": "988689"
  },
  {
    "text": "our image server services so the",
    "start": "988689",
    "end": "991050"
  },
  {
    "text": "download side of the cluster actually",
    "start": "991050",
    "end": "993639"
  },
  {
    "text": "sees a normally distributed pattern just",
    "start": "993639",
    "end": "994959"
  },
  {
    "text": "like you'd expect from any other web",
    "start": "994959",
    "end": "996279"
  },
  {
    "text": "application but this is the upload side",
    "start": "996279",
    "end": "998079"
  },
  {
    "text": "of the cluster that we have to scale",
    "start": "998079",
    "end": "999160"
  },
  {
    "text": "separately so this is the reason for",
    "start": "999160",
    "end": "1000870"
  },
  {
    "text": "splitting out the services from each",
    "start": "1000870",
    "end": "1003480"
  },
  {
    "text": "other our local environment we are using",
    "start": "1003480",
    "end": "1007319"
  },
  {
    "start": "1005000",
    "end": "1041000"
  },
  {
    "text": "docker compose that just organizes our",
    "start": "1007319",
    "end": "1009959"
  },
  {
    "text": "containers for us so we know we have to",
    "start": "1009959",
    "end": "1011610"
  },
  {
    "text": "run a my sequel container we run a mini",
    "start": "1011610",
    "end": "1014310"
  },
  {
    "text": "o container it's just their little",
    "start": "1014310",
    "end": "1015449"
  },
  {
    "text": "flamingo logo that they're pretty cute",
    "start": "1015449",
    "end": "1016889"
  },
  {
    "text": "video is a drop-in replacement for s3",
    "start": "1016889",
    "end": "1019829"
  },
  {
    "text": "you can run locally",
    "start": "1019829",
    "end": "1020730"
  },
  {
    "text": "now you just point AWS SDKs right out of",
    "start": "1020730",
    "end": "1023129"
  },
  {
    "text": "it and it works like like s3 does so we",
    "start": "1023129",
    "end": "1026220"
  },
  {
    "text": "use this on our local environment to",
    "start": "1026220",
    "end": "1027959"
  },
  {
    "text": "store the images backing the image",
    "start": "1027959",
    "end": "1030030"
  },
  {
    "text": "server we also run our image server",
    "start": "1030030",
    "end": "1031770"
  },
  {
    "text": "container obviously and we have an AWS",
    "start": "1031770",
    "end": "1034798"
  },
  {
    "text": "CLI container which creates a bucket for",
    "start": "1034799",
    "end": "1037110"
  },
  {
    "text": "us on startup also pointed that min IO",
    "start": "1037110",
    "end": "1042079"
  },
  {
    "start": "1041000",
    "end": "1095000"
  },
  {
    "text": "she's been really great we've been",
    "start": "1042079",
    "end": "1044308"
  },
  {
    "text": "running this new configuration for a few",
    "start": "1044309",
    "end": "1045900"
  },
  {
    "text": "months we almost never get pages anymore",
    "start": "1045900",
    "end": "1048710"
  },
  {
    "text": "probably just got one because I said",
    "start": "1048710",
    "end": "1050610"
  },
  {
    "text": "that we have four and a half nines of",
    "start": "1050610",
    "end": "1052830"
  },
  {
    "text": "availability last year we don't have to",
    "start": "1052830",
    "end": "1055710"
  },
  {
    "text": "do pre-warming anymore we're able to",
    "start": "1055710",
    "end": "1057000"
  },
  {
    "text": "respond to those seven times increases",
    "start": "1057000",
    "end": "1058530"
  },
  {
    "text": "over 40 minutes we have a local",
    "start": "1058530",
    "end": "1061020"
  },
  {
    "text": "environment we can spin the entire stack",
    "start": "1061020",
    "end": "1063179"
  },
  {
    "text": "up on our laptops and test the image",
    "start": "1063179",
    "end": "1065580"
  },
  {
    "text": "server changes that we've made we've got",
    "start": "1065580",
    "end": "1067470"
  },
  {
    "text": "one button deployment that does very",
    "start": "1067470",
    "end": "1069600"
  },
  {
    "text": "very quick deployment and very easy",
    "start": "1069600",
    "end": "1072480"
  },
  {
    "text": "rollback and in fact automatic way back",
    "start": "1072480",
    "end": "1075330"
  },
  {
    "text": "because of the way UCS does deployments",
    "start": "1075330",
    "end": "1077100"
  },
  {
    "text": "we've got isolated uploads and downloads",
    "start": "1077100",
    "end": "1081080"
  },
  {
    "text": "this is our new architecture diagram so",
    "start": "1081299",
    "end": "1083039"
  },
  {
    "text": "we've we've cleaned up a little bit",
    "start": "1083039",
    "end": "1085009"
  },
  {
    "text": "there's fewer things in the auto scaling",
    "start": "1085009",
    "end": "1087690"
  },
  {
    "text": "group that we are managing so it's",
    "start": "1087690",
    "end": "1089549"
  },
  {
    "text": "basically just an EC s service backed by",
    "start": "1089549",
    "end": "1091350"
  },
  {
    "text": "some some service Amazon stuff so some",
    "start": "1091350",
    "end": "1096419"
  },
  {
    "text": "things that we learned over there doing",
    "start": "1096419",
    "end": "1097470"
  },
  {
    "text": "this is really to keep the auto scaling",
    "start": "1097470",
    "end": "1099450"
  },
  {
    "text": "logic simple one the simpler it is the",
    "start": "1099450",
    "end": "1101489"
  },
  {
    "text": "easier it is to understand why your",
    "start": "1101489",
    "end": "1103080"
  },
  {
    "text": "cluster scaled in or out when you are",
    "start": "1103080",
    "end": "1105029"
  },
  {
    "text": "doing triaging iterating is really",
    "start": "1105029",
    "end": "1108779"
  },
  {
    "text": "really important so we worked in phases",
    "start": "1108779",
    "end": "1110519"
  },
  {
    "text": "the old the new the grave these are all",
    "start": "1110519",
    "end": "1112590"
  },
  {
    "text": "phases that we did on the image server",
    "start": "1112590",
    "end": "1113879"
  },
  {
    "text": "and it really helps you to prioritize",
    "start": "1113879",
    "end": "1115139"
  },
  {
    "text": "and target your lowest cost with highest",
    "start": "1115139",
    "end": "1118009"
  },
  {
    "text": "reward things that you can do to a",
    "start": "1118009",
    "end": "1120029"
  },
  {
    "text": "service to improve its reliability never",
    "start": "1120029",
    "end": "1123480"
  },
  {
    "text": "stop exploring take time to explore new",
    "start": "1123480",
    "end": "1125039"
  },
  {
    "text": "stuff we were obviously unsure about",
    "start": "1125039",
    "end": "1127529"
  },
  {
    "text": "foreign aid when we started using it but",
    "start": "1127529",
    "end": "1129359"
  },
  {
    "text": "it's been really awesome it allows us to",
    "start": "1129359",
    "end": "1131519"
  },
  {
    "text": "spend up containers within seconds when",
    "start": "1131519",
    "end": "1133799"
  },
  {
    "text": "we ask for it without having to manage",
    "start": "1133799",
    "end": "1135779"
  },
  {
    "text": "anything underlying and trying many",
    "start": "1135779",
    "end": "1138989"
  },
  {
    "text": "services is also really good it may cost",
    "start": "1138989",
    "end": "1141450"
  },
  {
    "text": "a little more to try manage service but",
    "start": "1141450",
    "end": "1143009"
  },
  {
    "text": "one thing you have stick into account is",
    "start": "1143009",
    "end": "1144720"
  },
  {
    "text": "all the man-hours that you are putting",
    "start": "1144720",
    "end": "1146039"
  },
  {
    "text": "into running your own pcs clusters and",
    "start": "1146039",
    "end": "1148590"
  },
  {
    "text": "doing the other scaling logic yourself",
    "start": "1148590",
    "end": "1150499"
  },
  {
    "text": "it can save a lot of time yeah thanks",
    "start": "1150499",
    "end": "1157100"
  },
  {
    "text": "awesome thank you very much bill so",
    "start": "1160830",
    "end": "1163350"
  },
  {
    "text": "again we're going to open the floor to",
    "start": "1163350",
    "end": "1164640"
  },
  {
    "text": "questions for a couple minutes if you",
    "start": "1164640",
    "end": "1167490"
  },
  {
    "text": "have a question please raise your hand",
    "start": "1167490",
    "end": "1168720"
  },
  {
    "text": "I'll bring the microphone to you",
    "start": "1168720",
    "end": "1170399"
  },
  {
    "text": "you know try and keep the question",
    "start": "1170399",
    "end": "1171600"
  },
  {
    "text": "concise and and we'll get through as",
    "start": "1171600",
    "end": "1173970"
  },
  {
    "text": "many as you can in the time we have any",
    "start": "1173970",
    "end": "1176070"
  },
  {
    "text": "questions",
    "start": "1176070",
    "end": "1178330"
  },
  {
    "text": "[Applause]",
    "start": "1178330",
    "end": "1180080"
  },
  {
    "text": "other is segregated the upload and the",
    "start": "1180080",
    "end": "1182420"
  },
  {
    "text": "download or the application how do we",
    "start": "1182420",
    "end": "1184790"
  },
  {
    "text": "scale them how do segregate them so I'll",
    "start": "1184790",
    "end": "1188180"
  },
  {
    "text": "reverse boxes that are standing out of",
    "start": "1188180",
    "end": "1189560"
  },
  {
    "text": "the front are still there and and one of",
    "start": "1189560",
    "end": "1192170"
  },
  {
    "text": "the things that's actually just an",
    "start": "1192170",
    "end": "1193160"
  },
  {
    "text": "engine X Server engine X can actually",
    "start": "1193160",
    "end": "1195110"
  },
  {
    "text": "send to a different upstream based on",
    "start": "1195110",
    "end": "1196640"
  },
  {
    "text": "your request method so for posts it's",
    "start": "1196640",
    "end": "1198530"
  },
  {
    "text": "going to one service and forgets it's",
    "start": "1198530",
    "end": "1199880"
  },
  {
    "text": "going to another separate containers so",
    "start": "1199880",
    "end": "1205490"
  },
  {
    "text": "far gate runs in those two separate",
    "start": "1205490",
    "end": "1206780"
  },
  {
    "text": "services there's an upload service and a",
    "start": "1206780",
    "end": "1208550"
  },
  {
    "text": "download service",
    "start": "1208550",
    "end": "1211240"
  },
  {
    "text": "right you mentioned something about your",
    "start": "1218350",
    "end": "1220630"
  },
  {
    "text": "club watch metrics you'll use the only",
    "start": "1220630",
    "end": "1223149"
  },
  {
    "text": "CPU for now right is that correct yeah",
    "start": "1223149",
    "end": "1225130"
  },
  {
    "text": "so you're not using you're not",
    "start": "1225130",
    "end": "1226690"
  },
  {
    "text": "monitoring memory at all right we're not",
    "start": "1226690",
    "end": "1228610"
  },
  {
    "text": "bound to memory anymore okay",
    "start": "1228610",
    "end": "1231990"
  },
  {
    "text": "[Applause]",
    "start": "1235850",
    "end": "1241539"
  },
  {
    "text": "this frog 8 supports anything other than",
    "start": "1241539",
    "end": "1244429"
  },
  {
    "text": "the host load metrics for scaling like",
    "start": "1244429",
    "end": "1246860"
  },
  {
    "text": "an it's just two messages you can scale",
    "start": "1246860",
    "end": "1250549"
  },
  {
    "text": "based on any metric that you have in",
    "start": "1250549",
    "end": "1251960"
  },
  {
    "text": "cloud watch so any cloud watch metric",
    "start": "1251960",
    "end": "1254179"
  },
  {
    "text": "you can use for for scaling but in terms",
    "start": "1254179",
    "end": "1257299"
  },
  {
    "text": "of like scaling based on host metrics",
    "start": "1257299",
    "end": "1258860"
  },
  {
    "text": "from the actual Fargate hosts they don't",
    "start": "1258860",
    "end": "1260720"
  },
  {
    "text": "expose that information to you they",
    "start": "1260720",
    "end": "1262309"
  },
  {
    "text": "manage all that stuff on their own so",
    "start": "1262309",
    "end": "1263720"
  },
  {
    "text": "they manage the instances before you",
    "start": "1263720",
    "end": "1268179"
  },
  {
    "text": "somebody else's are back there",
    "start": "1270690",
    "end": "1273300"
  },
  {
    "text": "[Applause]",
    "start": "1273300",
    "end": "1278600"
  },
  {
    "text": "I'm not sure if you can disclose this",
    "start": "1278600",
    "end": "1280340"
  },
  {
    "text": "but just how much more expensive is it",
    "start": "1280340",
    "end": "1283490"
  },
  {
    "text": "to use Fargate than ec2 then ec2 I think",
    "start": "1283490",
    "end": "1289460"
  },
  {
    "text": "the costs are pretty comparable you",
    "start": "1289460",
    "end": "1291410"
  },
  {
    "text": "ought to look at the pricing page I'm",
    "start": "1291410",
    "end": "1292400"
  },
  {
    "text": "not sure off the top of my head but it's",
    "start": "1292400",
    "end": "1294320"
  },
  {
    "text": "it's pretty it's pretty cheap it's",
    "start": "1294320",
    "end": "1297140"
  },
  {
    "text": "similar cost I believe to ec2",
    "start": "1297140",
    "end": "1301060"
  },
  {
    "text": "here we have time for one one more",
    "start": "1301100",
    "end": "1302960"
  },
  {
    "text": "question",
    "start": "1302960",
    "end": "1305110"
  },
  {
    "text": "this forged supports an encrypted volume",
    "start": "1306770",
    "end": "1309890"
  },
  {
    "text": "of fine this market supports interpret",
    "start": "1309890",
    "end": "1312110"
  },
  {
    "text": "volume at all if I need to so a bit of",
    "start": "1312110",
    "end": "1317900"
  },
  {
    "text": "an interesting question",
    "start": "1317900",
    "end": "1319010"
  },
  {
    "text": "ECS just announced support for attaching",
    "start": "1319010",
    "end": "1321530"
  },
  {
    "text": "like EBS volumes directly to tasks but I",
    "start": "1321530",
    "end": "1324350"
  },
  {
    "text": "don't think it's available in Fargate",
    "start": "1324350",
    "end": "1325640"
  },
  {
    "text": "yet this is something that you have to",
    "start": "1325640",
    "end": "1327020"
  },
  {
    "text": "do in I'd like at the host level for",
    "start": "1327020",
    "end": "1330440"
  },
  {
    "text": "your ECS clusters so you actually it",
    "start": "1330440",
    "end": "1332060"
  },
  {
    "text": "uses docker volumes docker volume",
    "start": "1332060",
    "end": "1334550"
  },
  {
    "text": "drivers sorry and there's there's one",
    "start": "1334550",
    "end": "1336140"
  },
  {
    "text": "for EBS that you can install but that's",
    "start": "1336140",
    "end": "1338660"
  },
  {
    "text": "something I think you have to manage",
    "start": "1338660",
    "end": "1339740"
  },
  {
    "text": "your own cluster for right now great",
    "start": "1339740",
    "end": "1343310"
  },
  {
    "text": "thanks guys very much",
    "start": "1343310",
    "end": "1344450"
  },
  {
    "text": "I build again thank you very much for",
    "start": "1344450",
    "end": "1348320"
  },
  {
    "text": "sharing your story with us",
    "start": "1348320",
    "end": "1351190"
  }
]