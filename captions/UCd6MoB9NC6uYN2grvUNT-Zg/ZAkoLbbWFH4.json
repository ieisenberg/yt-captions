[
  {
    "start": "0",
    "end": "28000"
  },
  {
    "text": "cool so this morning's talk is meant to be a technical deep dive in how to",
    "start": "0",
    "end": "8120"
  },
  {
    "text": "properly secure and harden to your accounts we're gonna be going deep into how some of these functions work and be",
    "start": "8120",
    "end": "13799"
  },
  {
    "text": "throwing a lot of code at you a lot of different examples but to level set this",
    "start": "13799",
    "end": "19289"
  },
  {
    "text": "is meant to be a more technical talk so I'd rather you leave disappointed now than angry at the end if that's not your",
    "start": "19289",
    "end": "25650"
  },
  {
    "text": "cup of tea so what we're gonna go on through this talk hopefully why you're",
    "start": "25650",
    "end": "32250"
  },
  {
    "start": "28000",
    "end": "28000"
  },
  {
    "text": "here is you want to know how to better secure your AWS environment how you can",
    "start": "32250",
    "end": "37559"
  },
  {
    "text": "make sure all the accounts that are in your environment follow the rules and that they're complying with the",
    "start": "37559",
    "end": "42960"
  },
  {
    "text": "governance policies that you lay out for your organization you want to be able to detect threats in",
    "start": "42960",
    "end": "48390"
  },
  {
    "text": "one or many accounts inside of your environment and you're trying to figure out what tools should I be using what",
    "start": "48390",
    "end": "55469"
  },
  {
    "text": "are the best practices from both an AWS perspective as well as what's out there in the community and how can I make sure",
    "start": "55469",
    "end": "62489"
  },
  {
    "text": "that as we go and start to create new accounts in our organization how can I make sure that they're secure by default",
    "start": "62489",
    "end": "68670"
  },
  {
    "text": "so let's get started with chapter 1 I want to start with the basics",
    "start": "68670",
    "end": "73830"
  },
  {
    "text": "this is really kind of an overview for folks that are perhaps more seasoned on the AWS platform but it's really",
    "start": "73830",
    "end": "79500"
  },
  {
    "text": "important to understand how some of the security basics on AWS work because they're very key in how we deliver",
    "start": "79500",
    "end": "85920"
  },
  {
    "text": "security as an offering on the platform so the first part that is really",
    "start": "85920",
    "end": "90930"
  },
  {
    "start": "88000",
    "end": "88000"
  },
  {
    "text": "critical to make sure that you understand is the shared responsibility model so the way the shared responsibility model works on AWS is",
    "start": "90930",
    "end": "97920"
  },
  {
    "text": "that AWS is responsible for the security of the cloud so we make sure that the",
    "start": "97920",
    "end": "103799"
  },
  {
    "text": "facilities that we operate in that the resources that we're providing to you from a hypervisor on down level that's",
    "start": "103799",
    "end": "110340"
  },
  {
    "text": "an Amazon responsibility but you as the customer also have a responsibility in this place when you go to develop an",
    "start": "110340",
    "end": "117090"
  },
  {
    "text": "application be it on an ec2 instance or a lambda function or an RDS database you",
    "start": "117090",
    "end": "123180"
  },
  {
    "text": "need to make sure that you're properly safeguarding and securing the default configuration of that resource so that",
    "start": "123180",
    "end": "129030"
  },
  {
    "text": "you're not publicly exposing it so the good analogy here is that if you were to stand up a site on AWS and you were to make a login",
    "start": "129030",
    "end": "136590"
  },
  {
    "text": "portal and in the login portal there was a credential which used a login which is root and the password is one two three",
    "start": "136590",
    "end": "143100"
  },
  {
    "text": "four that's not an Amazon problem right that's an example of an application miss configuration and that would fall to",
    "start": "143100",
    "end": "149160"
  },
  {
    "text": "your side of the shared responsibility but this gets a little bit more abstracted when we start looking at some",
    "start": "149160",
    "end": "154500"
  },
  {
    "text": "of the newer services that AWS offers like containerized services as we can see basically the this shift starts to",
    "start": "154500",
    "end": "162150"
  },
  {
    "text": "occur where AWS starts to become more responsible for these services so we start to deal with platform management",
    "start": "162150",
    "end": "167850"
  },
  {
    "text": "and going up the stack a little bit and then even further abstracted when we look at some of the newer services which",
    "start": "167850",
    "end": "174090"
  },
  {
    "text": "would be fully operating independent like lambda where basically AWS is responsible for almost everything you as",
    "start": "174090",
    "end": "180480"
  },
  {
    "text": "a customer though are still responsible for the again code sanitization of that lambda function so it's really important",
    "start": "180480",
    "end": "188670"
  },
  {
    "start": "186000",
    "end": "186000"
  },
  {
    "text": "to from the outset set a standard that you're going to follow there are a",
    "start": "188670",
    "end": "193980"
  },
  {
    "text": "number of different control frameworks that you can leverage that will give you information about how to harden an",
    "start": "193980",
    "end": "200160"
  },
  {
    "text": "environment based on not just opinion in your environment but an actual recognized standard so some examples",
    "start": "200160",
    "end": "207209"
  },
  {
    "text": "NIST CIS CJIs HIPAA these are all different frameworks that you can use to",
    "start": "207209",
    "end": "213410"
  },
  {
    "text": "put as an outset and to make that process easier we have a QuickStart",
    "start": "213410",
    "end": "219150"
  },
  {
    "text": "portal that will help you align to those control frameworks in templatized way",
    "start": "219150",
    "end": "225030"
  },
  {
    "text": "but we also will provide you with the security controls matrix that outlines for each one of these quick starts where",
    "start": "225030",
    "end": "231090"
  },
  {
    "text": "AWS is responsible for a control and where you as a customer are responsible for our control and where there's",
    "start": "231090",
    "end": "237090"
  },
  {
    "start": "236000",
    "end": "236000"
  },
  {
    "text": "overlap between them so an example of how we can start to use this as code",
    "start": "237090",
    "end": "243150"
  },
  {
    "text": "this is an open source package that's available on AWS labs and what it does is does a CIS benchmark check against a",
    "start": "243150",
    "end": "250200"
  },
  {
    "text": "particular account so you can see not a lot to actually make this work but the outputs vary based on what your use case",
    "start": "250200",
    "end": "257039"
  },
  {
    "text": "is so we can report in an HTML document that you can provide to your leadership that gives you Fran a handy red light",
    "start": "257039",
    "end": "263849"
  },
  {
    "text": "green light type dashboard but you can also get raw JSON back that you can use in a lambda",
    "start": "263849",
    "end": "270220"
  },
  {
    "text": "function or in a downstream processor so that if you want to basically run that Python function in a scheduled iteration",
    "start": "270220",
    "end": "277900"
  },
  {
    "text": "you can take the outputs and and loop over them to get your end result or if what you really care about is just show",
    "start": "277900",
    "end": "284080"
  },
  {
    "text": "me the ones that failed you can also get the output of just the control elements that had failure so again we can use",
    "start": "284080",
    "end": "291940"
  },
  {
    "text": "that for a post-processing trigger the idea is that we want to supplement security events so that we're leveraging",
    "start": "291940",
    "end": "299379"
  },
  {
    "text": "automation as much as possible you're gonna see it as a repeated theme this morning for better or worse you know",
    "start": "299379",
    "end": "305889"
  },
  {
    "text": "humans we do a lot of things really well but things that we don't do well are often around repeatability and under",
    "start": "305889",
    "end": "312610"
  },
  {
    "text": "high stress at least if you're leveraging a high degree of automation in your environment you'll know that",
    "start": "312610",
    "end": "319210"
  },
  {
    "text": "it's consistently be done a certain way and even if that way is not always correct you at least know the pattern",
    "start": "319210",
    "end": "326409"
  },
  {
    "text": "that was followed during the entire iteration you want to make sure that you're preventing bad implementations before that they're actually committed",
    "start": "326409",
    "end": "333279"
  },
  {
    "text": "and we're gonna talk a little bit about how to do that and we want to address violations of policy immediately rather",
    "start": "333279",
    "end": "340509"
  },
  {
    "text": "than relying on a human to be in the loop so we don't want to wait basically for a dashboard event to go off we want",
    "start": "340509",
    "end": "346599"
  },
  {
    "text": "that that resolution to happen automatically so as we said the slides",
    "start": "346599",
    "end": "351759"
  },
  {
    "text": "will be available afterwards but I wanted to provide a couple examples of open source solutions that can help in",
    "start": "351759",
    "end": "357370"
  },
  {
    "text": "this specific space both from an AWS offered perspective as well as some",
    "start": "357370",
    "end": "362379"
  },
  {
    "text": "community support perspectives so let's talk a little bit about automation so",
    "start": "362379",
    "end": "368469"
  },
  {
    "text": "one of the areas that's really important to focus on in terms of automation is dealing with patching we want to make",
    "start": "368469",
    "end": "374710"
  },
  {
    "text": "sure that our environment is properly patched and that we're making sure that we're not exposing ourselves to",
    "start": "374710",
    "end": "380469"
  },
  {
    "text": "vulnerability by having legacy applications running unpatch for an extended period of time so how do we do that one service that we can use to do",
    "start": "380469",
    "end": "387879"
  },
  {
    "start": "384000",
    "end": "384000"
  },
  {
    "text": "this is Systems Manager and one of the cool functions within system manager is that we can deploy patches to an",
    "start": "387879",
    "end": "394690"
  },
  {
    "text": "identified subset of ec2 resources so as an example what we can do is identify",
    "start": "394690",
    "end": "401350"
  },
  {
    "text": "a particular subset of hosts and we can associate it with a patch baseline and that patch baseline can align with",
    "start": "401350",
    "end": "407200"
  },
  {
    "text": "whatever your organization's security posture is so it could be everything has to be patched up into the moment it",
    "start": "407200",
    "end": "413410"
  },
  {
    "text": "could be that there is a specific package that we're looking for a specific version to be present we can",
    "start": "413410",
    "end": "418510"
  },
  {
    "text": "associate it with that and then when we run that report we'll get back basically a list of hosts that are compliant with",
    "start": "418510",
    "end": "425140"
  },
  {
    "text": "that finding or non-compliant and because that attribute is queryable we can use non-compliance to trigger other",
    "start": "425140",
    "end": "431920"
  },
  {
    "text": "downstream events like automatic patching of an identified host so one of",
    "start": "431920",
    "end": "437590"
  },
  {
    "text": "the other really powerful functions though that goes overlooked when we talk about services like system manager is the run command so the reason that the",
    "start": "437590",
    "end": "444310"
  },
  {
    "text": "run command should be really interesting you as security practitioners is that it does something really powerful so I'm",
    "start": "444310",
    "end": "450520"
  },
  {
    "text": "gonna take everyone back a little bit it's the early 90s and there's this movie about dinosaurs running around and",
    "start": "450520",
    "end": "456520"
  },
  {
    "text": "you know people are really excited so there's this entity that works in this park some sort of a Jurassic Park I'm",
    "start": "456520",
    "end": "462970"
  },
  {
    "text": "told and he's sitting down at his terminal and he types this command into his terminal that's the command he types",
    "start": "462970",
    "end": "469300"
  },
  {
    "text": "is white rabbit and then suddenly there's velociraptors running around a park and we don't know exactly what he",
    "start": "469300",
    "end": "474850"
  },
  {
    "text": "did to let these these Raptors out right so what we've just demonstrated in sort of a you know 1990s awesomeness style",
    "start": "474850",
    "end": "481930"
  },
  {
    "text": "was an insider threat so we've got an adversary that is disgruntled that feels",
    "start": "481930",
    "end": "487450"
  },
  {
    "text": "like he or she wasn't being given the credit that they deserve and so they're gonna do damage to the company so in",
    "start": "487450",
    "end": "494050"
  },
  {
    "text": "this case the difficulty was is that the adversary used that command so we don't know what they actually executed this is",
    "start": "494050",
    "end": "500290"
  },
  {
    "text": "why the run command is powerful the run command allows you to execute code on an",
    "start": "500290",
    "end": "505690"
  },
  {
    "text": "ec2 instance without requiring a Bastion host to execute that code so I no longer",
    "start": "505690",
    "end": "511300"
  },
  {
    "text": "need to give my developers direct shell access to our environment instead I can use the run command to allow them to",
    "start": "511300",
    "end": "517990"
  },
  {
    "text": "execute code functions via the run command the reason that that's really powerful is because it's an API that",
    "start": "517990",
    "end": "523840"
  },
  {
    "text": "means it's gonna flow through cloud trail and that means that I can get every keystroke that an operator sends",
    "start": "523840",
    "end": "529990"
  },
  {
    "text": "and record it and I can use that for threat intelligence to understand that person did so that cloud trail data",
    "start": "529990",
    "end": "536810"
  },
  {
    "text": "can also be migrated to a separate account so that I've got a separate log",
    "start": "536810",
    "end": "541970"
  },
  {
    "text": "store in the event that our adversary is clever and figures out a way to basically disable or delete cloud trail",
    "start": "541970",
    "end": "547610"
  },
  {
    "text": "logs as well so now I've got a second data store for that log data but let's go deeper there's another service that",
    "start": "547610",
    "end": "554450"
  },
  {
    "text": "we run which is called guard duty so using that same model with guard duty",
    "start": "554450",
    "end": "559580"
  },
  {
    "text": "what guard duty will allow you to do is basically get threat intelligence about your environment it will allow you to",
    "start": "559580",
    "end": "565430"
  },
  {
    "text": "understand what resources are communicating with and if they're communicating with hosts that are known",
    "start": "565430",
    "end": "570650"
  },
  {
    "text": "to be bad actors or if they're performing operations that are of significant security concern to you so a",
    "start": "570650",
    "end": "577640"
  },
  {
    "start": "577000",
    "end": "577000"
  },
  {
    "text": "data flow example is is that I've got an actor that's using a run command and they're trying to be clever by",
    "start": "577640",
    "end": "582860"
  },
  {
    "text": "installing a Trojan on that horse so they're on the ricci to resource so they're still ultimately going to get",
    "start": "582860",
    "end": "589339"
  },
  {
    "text": "their code on because we're not actively looking at the the keystroke at this point so how do we deal then with the",
    "start": "589339",
    "end": "596390"
  },
  {
    "text": "the payload that this particular actor is installing on this even using the run command the way that we can address that",
    "start": "596390",
    "end": "601850"
  },
  {
    "text": "is with a guard duty automated kill chain so in this case what guard duty would do is look at the traffic that's",
    "start": "601850",
    "end": "608360"
  },
  {
    "text": "flowing through the V PC and then we can create a custom cloud watch event and that cloud watch event can look for",
    "start": "608360",
    "end": "614390"
  },
  {
    "text": "things like guard duty sending an alert for a particular type of threat that we're gonna identify and then we can use",
    "start": "614390",
    "end": "620750"
  },
  {
    "text": "lambda as a responder so an example of the rule set that we would create is we're basically looking for a guard duty",
    "start": "620750",
    "end": "628130"
  },
  {
    "text": "finding to pop up and when we see a guard duty finding we're gonna pass that to this lambda function and basically",
    "start": "628130",
    "end": "634370"
  },
  {
    "text": "that the subtext here is that it's nine lines of code and basically it's in that",
    "start": "634370",
    "end": "640130"
  },
  {
    "text": "do response part that we can decide based on our company's culture or our posture what we want to do so it could",
    "start": "640130",
    "end": "646310"
  },
  {
    "text": "be that we want to go and identify the credential of the user that made the call and then revoke access to them or",
    "start": "646310",
    "end": "652580"
  },
  {
    "text": "in some organizations it's that they want to allow the attacker to persist a little longer so that they can",
    "start": "652580",
    "end": "658459"
  },
  {
    "text": "understand their capabilities and what they're actually going after so it very much depends on what your risk posture",
    "start": "658459",
    "end": "663740"
  },
  {
    "text": "is so in this example basically going back again the adversaries made the call to a known malware",
    "start": "663740",
    "end": "668750"
  },
  {
    "text": "endpoint guard duty has identified that it's talking to a known command-and-control host but in this",
    "start": "668750",
    "end": "673940"
  },
  {
    "text": "case the lambda function is detected that guard duty finding and we can use that to basically auto shutdown the ec2",
    "start": "673940",
    "end": "681650"
  },
  {
    "text": "instance or bring the ec2 instance offline so going a little deeper though let's talk about networking so from a",
    "start": "681650",
    "end": "688490"
  },
  {
    "text": "networking perspective we need to make sure that we can see what's going on inside of our B PC and that we can again",
    "start": "688490",
    "end": "694490"
  },
  {
    "text": "automate when we detect anomalous behavior in the V PC so how do we do",
    "start": "694490",
    "end": "699500"
  },
  {
    "text": "that one of the technologies that we offer inside V PC is called V PC flow logs and what flow logs will give you is",
    "start": "699500",
    "end": "705980"
  },
  {
    "text": "basically a the equivalent of net flow I can see different source and destination of ports and protocols where a host is",
    "start": "705980",
    "end": "713210"
  },
  {
    "text": "communicating and whether or not that traffic would be allowed or rejected based on things like a security group so",
    "start": "713210",
    "end": "720050"
  },
  {
    "text": "did the traffic go through and actually go to the resource or are we blocking that resource and incidentally this is a",
    "start": "720050",
    "end": "726440"
  },
  {
    "text": "really good way to also validate to an auditor that if you say that a security group is preventing traffic from",
    "start": "726440",
    "end": "733310"
  },
  {
    "text": "interfacing with a resource like an ec2 instance how can I demonstrate that and prove that a security group is actually",
    "start": "733310",
    "end": "739340"
  },
  {
    "text": "doing what we say it's doing the answer is it would show up in the flow logs and you'll be able to demonstrate that this packet was blocked by this particular",
    "start": "739340",
    "end": "746150"
  },
  {
    "text": "policy so let's play that out so let's say we've got an application in our environment and the application is",
    "start": "746150",
    "end": "753190"
  },
  {
    "start": "747000",
    "end": "747000"
  },
  {
    "text": "making unusual calls so we're starting to see anomalous behavior so we want to look a little deeper so in this case",
    "start": "753190",
    "end": "759140"
  },
  {
    "text": "what we would do is we would use the flow log loop group with a cloud watch event and much like this similar or the",
    "start": "759140",
    "end": "765170"
  },
  {
    "text": "previous example will create a custom metric and in this case the custom metric that we're looking for is filtering on SSH reject traffic so in",
    "start": "765170",
    "end": "772850"
  },
  {
    "text": "this case if we see greater than 10 rejects within the flow log we'll use that as basically an indicator that a",
    "start": "772850",
    "end": "779630"
  },
  {
    "text": "host is compromised and that we think that someone's actually performing a brute-force inside of the environment and then we can use that in correlation",
    "start": "779630",
    "end": "786980"
  },
  {
    "text": "with an SMS topic and a lambda responder to basically go and identify the resource that is being used to call that",
    "start": "786980",
    "end": "794120"
  },
  {
    "text": "that reject traffic and do something like disconnect it's an elastic network interface and bring it offline but in",
    "start": "794120",
    "end": "800270"
  },
  {
    "text": "parallel for that lambda doesn't have to do just one thing we can make it do multiple things in the same execution so if",
    "start": "800270",
    "end": "806959"
  },
  {
    "text": "you're using a ticketing service that supports an API you can in parallel have",
    "start": "806959",
    "end": "812029"
  },
  {
    "text": "the lambda function open up a ticket on your behalf that indicates what the actor was doing what the resource was",
    "start": "812029",
    "end": "817940"
  },
  {
    "text": "what the event was that you chose to do which could be to bring the host offline and also whether or not that event was",
    "start": "817940",
    "end": "824450"
  },
  {
    "text": "successful or not all inside the ticket so that that way when your responder goes to look at the environment they",
    "start": "824450",
    "end": "830029"
  },
  {
    "text": "already have everything captured in the ticket for you but let's go even further how can we",
    "start": "830029",
    "end": "835790"
  },
  {
    "text": "better automate that to make it more practical for a larger enterprise so we",
    "start": "835790",
    "end": "841279"
  },
  {
    "start": "839000",
    "end": "839000"
  },
  {
    "text": "know that there are security threats that you all likely see in your environments and some of our larger",
    "start": "841279",
    "end": "846500"
  },
  {
    "text": "customers and government customers have threat Intel feeds that they subscribe to and that they publish so we're going",
    "start": "846500",
    "end": "851660"
  },
  {
    "text": "to use that model in this example what we're gonna do is basically identify a list of actors that we're going to",
    "start": "851660",
    "end": "857990"
  },
  {
    "text": "classify as hostile to our community and what we're gonna do is we're going to put that inside of a JSON file in this",
    "start": "857990",
    "end": "865880"
  },
  {
    "text": "case I'm labeling an IP threats so this would contain cider ranges of folks that",
    "start": "865880",
    "end": "871010"
  },
  {
    "text": "we know are being malicious both from our AWS logs as well as perhaps aggregate logs that you have from",
    "start": "871010",
    "end": "876860"
  },
  {
    "text": "information sharing agreements or through your own telemetry that perhaps you're collecting on your edge we can",
    "start": "876860",
    "end": "883190"
  },
  {
    "text": "use a service though like SNS to basically broadcast when this file will",
    "start": "883190",
    "end": "888320"
  },
  {
    "text": "change inside of your environment and then use lambda responders and all of",
    "start": "888320",
    "end": "893510"
  },
  {
    "text": "the accounts that you organize to input that threat feed and then associate it",
    "start": "893510",
    "end": "899720"
  },
  {
    "text": "with something like a security group so in plain English you can put a threats",
    "start": "899720",
    "end": "905240"
  },
  {
    "text": "file basically inside of your organization make changes to it on the fly and then have it be associated with",
    "start": "905240",
    "end": "911959"
  },
  {
    "text": "an SNS topic that various accounts are listening for and when you make changes to the file your SNS topic or your",
    "start": "911959",
    "end": "919370"
  },
  {
    "text": "lambda function will basically fire and change the security group so to visualize that a little bit better for",
    "start": "919370",
    "end": "924649"
  },
  {
    "text": "you let's say that we've got our threat feed and we've got a security account inside of an organization and we've made",
    "start": "924649",
    "end": "930079"
  },
  {
    "text": "a change to that that file we can use an s3 event trigger debate we broadcast an SNS topic notification",
    "start": "930079",
    "end": "937250"
  },
  {
    "text": "that the file has changed because all the downstream accounts are listening to that SMS topic they will go and pull",
    "start": "937250",
    "end": "943820"
  },
  {
    "text": "that threat feed into their account they'll spin up that lambda function to loop over the new IP ranges to look for",
    "start": "943820",
    "end": "950779"
  },
  {
    "text": "what changed in the new file and then they can go and report back to that s3 bucket that yes I've acknowledged this",
    "start": "950779",
    "end": "956750"
  },
  {
    "text": "payload these are the resources that I'm about to change and then we can go and proactively blacklist the Sider ranges",
    "start": "956750",
    "end": "963560"
  },
  {
    "text": "in either the security group or Knakal so that we can basically make sure that this actor isn't able to interface with",
    "start": "963560",
    "end": "969800"
  },
  {
    "text": "our environment now the power to this is that because it's being done in this pub/sub model it allows you to basically",
    "start": "969800",
    "end": "976160"
  },
  {
    "text": "ensure that for the entirety of your enterprise that you can make one change to one file and every account in your",
    "start": "976160",
    "end": "983690"
  },
  {
    "text": "organization now we'll start to block this traffic based on this topic notification so another area that I see",
    "start": "983690",
    "end": "991160"
  },
  {
    "text": "a lot in a government space in particular is people try to make things work like they worked in an old data",
    "start": "991160",
    "end": "997459"
  },
  {
    "text": "center in the legacy environment pre cloud and that's one of the areas where it's often not a really good experience",
    "start": "997459",
    "end": "1003339"
  },
  {
    "text": "for customers because you're trying to basically shoehorn a technology that doesn't lend itself as well as what you",
    "start": "1003339",
    "end": "1008589"
  },
  {
    "text": "could do on AWS so let me give you a practical example of that what I see a lot is customers do",
    "start": "1008589",
    "end": "1014170"
  },
  {
    "start": "1012000",
    "end": "1012000"
  },
  {
    "text": "this so for folks that are not familiar this is an nmap scan and this is the worst type of nmap scan this is a - a",
    "start": "1014170",
    "end": "1019930"
  },
  {
    "text": "and what you really need to know even if you don't know what nmap is is that basically this takes about three minutes to complete and we're scanning one host",
    "start": "1019930",
    "end": "1026970"
  },
  {
    "text": "what I would argue in an AWS environment is what you're trying to find out is what is our exposure for a particular",
    "start": "1026970",
    "end": "1033428"
  },
  {
    "text": "resource and the right way to do it from a cloud perspective is do a describe call on the security group note that",
    "start": "1033429",
    "end": "1040270"
  },
  {
    "start": "1034000",
    "end": "1034000"
  },
  {
    "text": "basically at the end this took about two seconds to run and instead of targeting one host I'm getting back basically",
    "start": "1040270",
    "end": "1046000"
  },
  {
    "text": "everything that's associated with that security group so it could be tens or hundreds of different ec2 resources on",
    "start": "1046000",
    "end": "1051970"
  },
  {
    "text": "our environment now there's someone in the audience right now that's saying yes but that nmap scan will tell me if it's",
    "start": "1051970",
    "end": "1057820"
  },
  {
    "text": "actually listening on the instance and I would argue to you that's irrelevant and the reason it's irrelevant is the",
    "start": "1057820",
    "end": "1064600"
  },
  {
    "text": "security group allows it and the reason that's important is how do you that an actor is not using a",
    "start": "1064600",
    "end": "1070280"
  },
  {
    "text": "time-delayed function to leverage an opening in that firewall based on an interval or something like a port knock",
    "start": "1070280",
    "end": "1076580"
  },
  {
    "text": "the answer is is that if the security group allows the traffic and that's not what's allowed via your policy then it's",
    "start": "1076580",
    "end": "1083900"
  },
  {
    "text": "a finding and you need to remediate it and that's why it's a much more efficient way to do this type of reconnaissance rather than going and",
    "start": "1083900",
    "end": "1090049"
  },
  {
    "text": "doing that longer nmap scan so another design I see a lot is hub-and-spoke",
    "start": "1090049",
    "end": "1095330"
  },
  {
    "text": "models so the difficulty with the hub-and-spoke model is that while it's appealing for smaller organizations and",
    "start": "1095330",
    "end": "1101929"
  },
  {
    "text": "works well at the onset at larger scale when you're dealing with hundreds or thousands of accounts you'll start to",
    "start": "1101929",
    "end": "1107750"
  },
  {
    "text": "see this model break down so from a data flow perspective this is what I used to",
    "start": "1107750",
    "end": "1112910"
  },
  {
    "text": "see a lot we have a customer a government customer that is relying on a service like a VPN or Direct Connect",
    "start": "1112910",
    "end": "1119570"
  },
  {
    "text": "they've got a set of applications that are hosted on AWS and they've defined the route table that to basically take",
    "start": "1119570",
    "end": "1125960"
  },
  {
    "text": "that traffic and flow it back through their data center and then ultimately go back out to the public Internet and the",
    "start": "1125960",
    "end": "1132290"
  },
  {
    "text": "reason that they want to do this is this particular VPC is you might notice has no internet gateway and so what they",
    "start": "1132290",
    "end": "1138230"
  },
  {
    "text": "want to do is basically perform traffic inspection on the hosts and be able to look at everything that's going over the",
    "start": "1138230",
    "end": "1144380"
  },
  {
    "text": "wire but obviously that that creates a huge latency concern the other issue is is that they're forgetting a key",
    "start": "1144380",
    "end": "1149830"
  },
  {
    "text": "capability inside of AWS which is that there are VPC endpoints that would allow them to accomplish that same goal of",
    "start": "1149830",
    "end": "1157010"
  },
  {
    "text": "limiting the traffic so that it stays in a private network Enclave rather than going out over the public Internet so in",
    "start": "1157010",
    "end": "1163880"
  },
  {
    "text": "this case let's say that for that s3 service that we wanted to communicate with we can define that VPC endpoints so",
    "start": "1163880",
    "end": "1169669"
  },
  {
    "text": "that this is still a closed VPC but we allow communication to that s3 endpoint",
    "start": "1169669",
    "end": "1174950"
  },
  {
    "text": "now the other reason that this is really important is that it allows us to identify multiple VPC endpoints for an",
    "start": "1174950",
    "end": "1183080"
  },
  {
    "start": "1179000",
    "end": "1179000"
  },
  {
    "text": "account or for a VPC resource so in this example you can see that I've got a number of resources that are going to be",
    "start": "1183080",
    "end": "1188600"
  },
  {
    "text": "pointing to you a backups directory but I have a number of other folks that are going to point to a compliance directory",
    "start": "1188600",
    "end": "1195049"
  },
  {
    "text": "and we can limit access to the VPC endpoint and the same granular structured link",
    "start": "1195049",
    "end": "1201100"
  },
  {
    "text": "of the bucket policy as you could for the bucket itself and in fact it's actually sort of the belts and suspenders approach because inside the",
    "start": "1201100",
    "end": "1207640"
  },
  {
    "text": "policy for the VPC end point I can say that only a specific subset of ec2",
    "start": "1207640",
    "end": "1213160"
  },
  {
    "text": "instances can talk to this VPC endpoint and not others and I can also say that communicating with this VPC endpoint is",
    "start": "1213160",
    "end": "1219549"
  },
  {
    "text": "only allowed to communicate with a specific s3 bucket so if I want to make sure that basically an adversary can't",
    "start": "1219549",
    "end": "1225940"
  },
  {
    "text": "go and use just any s3 bucket I can set the policy on the VPC endpoint so that basically I can only communicate with a",
    "start": "1225940",
    "end": "1232690"
  },
  {
    "text": "specific s3 bucket another way that we can extend this is through private link",
    "start": "1232690",
    "end": "1238960"
  },
  {
    "start": "1235000",
    "end": "1235000"
  },
  {
    "text": "what private link will allow you to do is basically create customized endpoints for your application and host it in the",
    "start": "1238960",
    "end": "1245620"
  },
  {
    "text": "same model so the idea is that if you create a customized application you'll use this endpoint and you can again put",
    "start": "1245620",
    "end": "1251380"
  },
  {
    "text": "it through separate VP C's and allow your resources to communicate with it even if it's a closed environment so the",
    "start": "1251380",
    "end": "1259270"
  },
  {
    "text": "other thing that we want to make sure is how do we keep people from doing things that we don't want them to do one way",
    "start": "1259270",
    "end": "1265090"
  },
  {
    "start": "1264000",
    "end": "1264000"
  },
  {
    "text": "that we can address that is through the use of config and config rules and for those that are not familiar config",
    "start": "1265090",
    "end": "1270549"
  },
  {
    "text": "allows you to basically set policy inside of your environment and define pre-built rules that look for compliance",
    "start": "1270549",
    "end": "1276520"
  },
  {
    "text": "based on a specific event or a specific context that you're looking for so in plain English let's say I want to make",
    "start": "1276520",
    "end": "1282700"
  },
  {
    "text": "sure that SSH is restricted in our environment so we have a pre-built rule that will do this for you but just as an",
    "start": "1282700",
    "end": "1288789"
  },
  {
    "text": "example I'll go and I'll select this rule looking for SSH I'll associate it with resources it",
    "start": "1288789",
    "end": "1294970"
  },
  {
    "text": "could be things like a security group it could be a specific tag they could be specific ec2 instances and then I'll say",
    "start": "1294970",
    "end": "1301539"
  },
  {
    "text": "whether and I want this to be a continuous or a periodic change so continuous means that anytime someone makes a change to that security group it",
    "start": "1301539",
    "end": "1307870"
  },
  {
    "text": "will run again periodic will be based on a scheduled interval so it could be that based on our compliance framework every",
    "start": "1307870",
    "end": "1313360"
  },
  {
    "text": "24 hours I need to make sure that all hosts have a fitting through a particular configuration so what you'll",
    "start": "1313360",
    "end": "1318850"
  },
  {
    "text": "get back basically is a compliance that report that shows which hosts have been identified as compliant and",
    "start": "1318850",
    "end": "1324130"
  },
  {
    "text": "non-compliant but the reason that this is important is that again because that config rule comes through as a JSON",
    "start": "1324130",
    "end": "1330640"
  },
  {
    "text": "event I can use that in correlation with a cloud watch event trigger and kickoff that same rule process that",
    "start": "1330640",
    "end": "1337360"
  },
  {
    "text": "we looked at earlier where if we find a host that has been identified as non-compliant we can use that lambda",
    "start": "1337360",
    "end": "1343450"
  },
  {
    "text": "responder to go and auto remediate that resource so in the case of an ssh security group change we can go and",
    "start": "1343450",
    "end": "1350470"
  },
  {
    "text": "identify that security group and basically go and revoke that change the environment we can also do things based",
    "start": "1350470",
    "end": "1356110"
  },
  {
    "text": "again on your company's culture and posture like locking the users account that made the change so it very much",
    "start": "1356110",
    "end": "1361720"
  },
  {
    "text": "depends on what your your risk tolerance is but if your organization is laid out a hard policy and wants to make sure",
    "start": "1361720",
    "end": "1367570"
  },
  {
    "text": "that it's enforced the locking of the users account is a pretty strong deterrent it's also important to",
    "start": "1367570",
    "end": "1373779"
  },
  {
    "start": "1372000",
    "end": "1372000"
  },
  {
    "text": "remember that within the cloud trail log the way that we're able to address that is because the cloud trail log captures",
    "start": "1373779",
    "end": "1379659"
  },
  {
    "text": "all the metadata about who made an individual call it's not that just that we can get the attribution to say that",
    "start": "1379659",
    "end": "1385419"
  },
  {
    "text": "this user perform this operation I can use it also in correlation with things like what role did they assume to do it",
    "start": "1385419",
    "end": "1391450"
  },
  {
    "text": "and from what I P address did they come through so that might tell us things like if I detect that they're using an",
    "start": "1391450",
    "end": "1397779"
  },
  {
    "text": "unusual role or they're coming from a cyber block that's maybe in a different part of the world that maybe someone has",
    "start": "1397779",
    "end": "1402929"
  },
  {
    "text": "compromised that credential so let's talk about access control how do we make",
    "start": "1402929",
    "end": "1408700"
  },
  {
    "text": "sure that data going in and out of our environment is secure and how do we make sure that only authorized individuals",
    "start": "1408700",
    "end": "1414460"
  },
  {
    "text": "can get access to the resources that they need to so there's a really powerful tool inside the IM console",
    "start": "1414460",
    "end": "1420700"
  },
  {
    "text": "today which is called the access advisor so the access advisor will allow you to look at a user a group or a role and",
    "start": "1420700",
    "end": "1427029"
  },
  {
    "text": "identify what that user has been assigned and what they're actually allowed to do but the important part is",
    "start": "1427029",
    "end": "1432850"
  },
  {
    "text": "not only will it tell you what they're assigned it will tell you when the last time they actually use that operation so",
    "start": "1432850",
    "end": "1438850"
  },
  {
    "text": "it's really powerful to be able to quickly look at whether or not you're giving too permissive of permission if",
    "start": "1438850",
    "end": "1444070"
  },
  {
    "text": "to a particular principle inside of AWS but the difficulty is that it's GUI access only today so how can we deal",
    "start": "1444070",
    "end": "1451029"
  },
  {
    "text": "with that more programmatically so this is an example of an Athena query that would let us query the cloud trail",
    "start": "1451029",
    "end": "1456580"
  },
  {
    "text": "bucket and look for the same information what a user has been granted and what",
    "start": "1456580",
    "end": "1461950"
  },
  {
    "text": "that user is actually using and then we can basically merge the two and identify that if we gave this user star star axe",
    "start": "1461950",
    "end": "1468490"
  },
  {
    "text": "but all I see is that they're using ec2 to run and stop instances then that might be a good example of that this",
    "start": "1468490",
    "end": "1474370"
  },
  {
    "text": "group or this user has too much permission and I want to go and revoke that access so if Athena and doing that",
    "start": "1474370",
    "end": "1480460"
  },
  {
    "text": "you know framework doesn't sound like fun to you or that you don't have the time to do that kind of tooling there",
    "start": "1480460",
    "end": "1486790"
  },
  {
    "text": "are two open-source products that Netflix put out that help with this process aardvark and repo kid so",
    "start": "1486790",
    "end": "1493270"
  },
  {
    "text": "aardvark basically does scraping of the environment via phantom Jas repo kid will basically take that data correlate",
    "start": "1493270",
    "end": "1499900"
  },
  {
    "text": "it with I am described calls and allow you to as the name suggests repo the permissions that are basically too broad",
    "start": "1499900",
    "end": "1506470"
  },
  {
    "text": "to permissive so an example of how we can do this as processes there was a",
    "start": "1506470",
    "end": "1512410"
  },
  {
    "text": "really good reinvent talk that we did in 2017 on security event response from idea to code execution and one of the",
    "start": "1512410",
    "end": "1519250"
  },
  {
    "text": "examples that they gave was what will you do when an adversary does something that would be a security binary and in",
    "start": "1519250",
    "end": "1525309"
  },
  {
    "text": "this case the security binary is stopping cloud trail logs so going back to that Jurassic Park analogy you've got",
    "start": "1525309",
    "end": "1531880"
  },
  {
    "text": "someone trying to basically mute a log store that records all the operations inside of your environment",
    "start": "1531880",
    "end": "1537820"
  },
  {
    "text": "there is almost no business justification for doing that you don't want to cut a ticket you don't want to",
    "start": "1537820",
    "end": "1542860"
  },
  {
    "text": "have a red light on a dashboard this is an example of I want it to be fixed immediately so in this case what we can",
    "start": "1542860",
    "end": "1549640"
  },
  {
    "text": "do again is use that same cloud watch metric capability look at the calls as",
    "start": "1549640",
    "end": "1555460"
  },
  {
    "text": "they're coming through and basically when we detect that the cloud trail stop logging call has been made we can use",
    "start": "1555460",
    "end": "1561460"
  },
  {
    "text": "that same lam to responder to go restart the cloud trail logging and put it back into operation so I've given this",
    "start": "1561460",
    "end": "1568390"
  },
  {
    "text": "example a couple times but I want to show it to you in principle so that you feel like you can trust that this is a",
    "start": "1568390",
    "end": "1573580"
  },
  {
    "text": "real working framework let me break out",
    "start": "1573580",
    "end": "1582700"
  },
  {
    "text": "for one sec",
    "start": "1582700",
    "end": "1585120"
  },
  {
    "text": "so what we have here is an I am console and what I'm going to do is we're gonna go into a user and what we're gonna do",
    "start": "1593130",
    "end": "1600299"
  },
  {
    "text": "is we're gonna say that we have a policy inside of our organization that no user",
    "start": "1600299",
    "end": "1605309"
  },
  {
    "text": "is allowed to assign inline policies to a principal and the idea is that we want them to use manage policies because our",
    "start": "1605309",
    "end": "1612210"
  },
  {
    "text": "security team knows what's in those manage policies and we can audit against it because it's a known baseline in this",
    "start": "1612210",
    "end": "1618600"
  },
  {
    "text": "case what the adversary is going to try to do is be clever and inject a higher level of permission than what they're",
    "start": "1618600",
    "end": "1624419"
  },
  {
    "text": "actually allowed to do so let's add our inline policy and in this case our",
    "start": "1624419",
    "end": "1629750"
  },
  {
    "text": "adversary is going to use ec2 and",
    "start": "1629750",
    "end": "1637220"
  },
  {
    "text": "they're going to go and try to perform a list operation",
    "start": "1637220",
    "end": "1642529"
  },
  {
    "text": "and because all adversaries are this helpful they're always so helpful so we",
    "start": "1649390",
    "end": "1661480"
  },
  {
    "text": "can go in and we can see bad guy policy is here and usually within about five",
    "start": "1661480",
    "end": "1670240"
  },
  {
    "text": "seconds",
    "start": "1670240",
    "end": "1672720"
  },
  {
    "text": "it's not so the reason that it's not there and I want to kind of demonstrate",
    "start": "1677710",
    "end": "1683320"
  },
  {
    "text": "this specifically is because I've told you how easy it is to do this I've told you that the code is not a very big",
    "start": "1683320",
    "end": "1690100"
  },
  {
    "text": "burden let me show you the code",
    "start": "1690100",
    "end": "1693809"
  },
  {
    "text": "that's it it's nine lines so all I'm doing is I'm looking for that cloud watch event that's being passed to the",
    "start": "1700400",
    "end": "1707150"
  },
  {
    "text": "lambda responder the cloud watch event has the metadata in it that tells me what the resource was and all lambda is",
    "start": "1707150",
    "end": "1713450"
  },
  {
    "text": "doing is basically saying if I see a match in the cloud watch event that I'm being provided which is an inline policy",
    "start": "1713450",
    "end": "1718910"
  },
  {
    "text": "has been associated with the principal it goes and deletes the policy from the principal because remember the cloud",
    "start": "1718910",
    "end": "1724880"
  },
  {
    "text": "watch event will tell it what it was which policy it was in which user performed that operation so in parallel",
    "start": "1724880",
    "end": "1730900"
  },
  {
    "text": "this could also be made to do things like again revoke access to my account so that the use of that performing",
    "start": "1730900",
    "end": "1737870"
  },
  {
    "text": "operation would be effectively restricted now I'm not doing that because I still want to do other stuff",
    "start": "1737870",
    "end": "1744460"
  },
  {
    "text": "so the reason that this is important is that we can have workloads that are",
    "start": "1746710",
    "end": "1751940"
  },
  {
    "text": "running anywhere AWS has regions spread throughout the globe and we have resources that allow customers to",
    "start": "1751940",
    "end": "1758110"
  },
  {
    "text": "execute those anywhere but what we're seeing especially from some of our government customers is that they have",
    "start": "1758110",
    "end": "1764440"
  },
  {
    "text": "contractual or legal requirements to make sure that their application and their users are based in the conus",
    "start": "1764440",
    "end": "1770809"
  },
  {
    "text": "region or that they're based in a specific region so how do I make sure that a principal can only perform",
    "start": "1770809",
    "end": "1777260"
  },
  {
    "text": "operations in a given region so in this case let's say that the region is US East one or the Virginia region the",
    "start": "1777260",
    "end": "1784220"
  },
  {
    "start": "1784000",
    "end": "1784000"
  },
  {
    "text": "answer is is that there's a new capability with an iamb that some may not be familiar with is the ability to",
    "start": "1784220",
    "end": "1790390"
  },
  {
    "text": "constrain a role to a region so in this case you can see I'm adding the conditional statement here which is that",
    "start": "1790390",
    "end": "1796790"
  },
  {
    "text": "the request region has to be US East one so what this will effectively allow you",
    "start": "1796790",
    "end": "1802370"
  },
  {
    "text": "to do is make sure that an IM principal can only make the call to a u.s. east one based region so what about making",
    "start": "1802370",
    "end": "1811250"
  },
  {
    "text": "sure that the core operating system is secure how do we make sure that we harden our core OS one way that we can",
    "start": "1811250",
    "end": "1818300"
  },
  {
    "text": "address that is through a service like inspector so we can use inspector to basically build in part of a dev sec ops",
    "start": "1818300",
    "end": "1824809"
  },
  {
    "text": "pipeline to look at the code prior to actually come publishing it to a running",
    "start": "1824809",
    "end": "1830030"
  },
  {
    "text": "instance or we can look at it after the event it will in integrate with most see ICD framework so",
    "start": "1830030",
    "end": "1837070"
  },
  {
    "text": "if you're already using a tool like Jenkins for instance there's already tight integration with that tool so you",
    "start": "1837070",
    "end": "1842920"
  },
  {
    "text": "can use an inspector base to scan when you're doing your build process an",
    "start": "1842920",
    "end": "1848440"
  },
  {
    "start": "1848000",
    "end": "1848000"
  },
  {
    "text": "example of how easy it is to do this in this case we're defining a specific",
    "start": "1848440",
    "end": "1854040"
  },
  {
    "text": "template that we want to use in this case it's the CVE inspection what we'll do is basically associate it with a set",
    "start": "1854040",
    "end": "1860710"
  },
  {
    "text": "of resources based on an individual instance or perhaps an ec2 tag and what",
    "start": "1860710",
    "end": "1866350"
  },
  {
    "text": "we get back is a findings report that will indicate not only whether the resource was found to be deficient in",
    "start": "1866350",
    "end": "1872500"
  },
  {
    "text": "something but we will often be very descriptive and what you need to do to remediate that finding so it's not just",
    "start": "1872500",
    "end": "1878380"
  },
  {
    "text": "we've identified something wrong you know it's your problem inspector will tell you how to remediate",
    "start": "1878380",
    "end": "1883690"
  },
  {
    "text": "that particular finding another cool capability for inspector as it pertains",
    "start": "1883690",
    "end": "1888880"
  },
  {
    "start": "1885000",
    "end": "1885000"
  },
  {
    "text": "to that workflow is that there are rules packages that again speak to specific frameworks so there's a CIS benchmark",
    "start": "1888880",
    "end": "1895390"
  },
  {
    "text": "that's in the inspector so we can make sure that the core operating system is hardened to a CIS standard also a really",
    "start": "1895390",
    "end": "1901390"
  },
  {
    "text": "important one is the security best practices template which allows you to make sure that the ec2 instance has been",
    "start": "1901390",
    "end": "1907690"
  },
  {
    "text": "hardened to AWS security breast practices which means things like if you're using a Linux based host you",
    "start": "1907690",
    "end": "1913360"
  },
  {
    "text": "haven't gone and enabled the root user or you've disabled the SSH public private key pair use the other part",
    "start": "1913360",
    "end": "1921370"
  },
  {
    "start": "1919000",
    "end": "1919000"
  },
  {
    "text": "that's important for the longer-term inspector runs is that it will look for anomalous behavior of the operating",
    "start": "1921370",
    "end": "1927580"
  },
  {
    "text": "system itself so what that means is that if you allow the scan to persist longer it will look for things like the",
    "start": "1927580",
    "end": "1933730"
  },
  {
    "text": "operating system exhibiting unusual characteristics like every 50 minutes",
    "start": "1933730",
    "end": "1938770"
  },
  {
    "text": "for some reason SSH opens for 30 seconds and then closes down it can detect that sort of anomalous use of a service or",
    "start": "1938770",
    "end": "1945940"
  },
  {
    "text": "anomalous use of a port inside of your environment and again that's a good example of an adversary trying to hide a",
    "start": "1945940",
    "end": "1951070"
  },
  {
    "text": "payload based on a timing event or based on a particular trigger event so let's",
    "start": "1951070",
    "end": "1956890"
  },
  {
    "text": "try to avoid failure where it's obvious a good example is storing secrets in",
    "start": "1956890",
    "end": "1962920"
  },
  {
    "text": "code this is something I've seen the number of customers do over the years they'll bacon credential into the code that they're actually",
    "start": "1962920",
    "end": "1969179"
  },
  {
    "text": "using in their production environment so what we would urge customers to do now is leverage a new tool like secret store",
    "start": "1969179",
    "end": "1976650"
  },
  {
    "text": "which allows you to basically set this key material in the application so that",
    "start": "1976650",
    "end": "1984960"
  },
  {
    "text": "rather than persisting that key material to the ec2 instance I can store it in the secrets manager and basically allow",
    "start": "1984960",
    "end": "1991650"
  },
  {
    "text": "rotation of that secret on on a frequency that you've determined so the",
    "start": "1991650",
    "end": "1996750"
  },
  {
    "text": "nice part of that again is is that for services like RDS I no longer have to persist an actual database credential to",
    "start": "1996750",
    "end": "2002090"
  },
  {
    "text": "the application itself and again as I mentioned another powerful function of",
    "start": "2002090",
    "end": "2007309"
  },
  {
    "text": "that is that again if you're bound to something like PCI where you have to rotate that credential and prove",
    "start": "2007309",
    "end": "2012679"
  },
  {
    "text": "rotation it's automated automatically integrated into the service so that you can do that customized rotation so",
    "start": "2012679",
    "end": "2020029"
  },
  {
    "text": "speaking of keys another area that I see a lot of customers make a mistake on is giving keys to things that don't deserve",
    "start": "2020029",
    "end": "2026960"
  },
  {
    "text": "keys so we want to try to make sure that keys are presented only to people not to",
    "start": "2026960",
    "end": "2033500"
  },
  {
    "text": "things so the analogy is that you want to make sure that if you have a user it's ok to give user hard-baked API keys",
    "start": "2033500",
    "end": "2041120"
  },
  {
    "text": "but if you have an application never give the application API keys the application should always be using a",
    "start": "2041120",
    "end": "2047419"
  },
  {
    "text": "role or an STS token to get temporary credential never a long-lived credential",
    "start": "2047419",
    "end": "2053388"
  },
  {
    "text": "because again everything that that key is authorized to do if an adversary is able to get that key from that",
    "start": "2053389",
    "end": "2058700"
  },
  {
    "text": "application they can do everything that that application is capable of doing as well so let's talk about when you not",
    "start": "2058700",
    "end": "2064760"
  },
  {
    "text": "only have to track one account what happens when you have to track a lot of stuff a lot of different accounts inside",
    "start": "2064760",
    "end": "2069830"
  },
  {
    "text": "of your organization so one technique that we can use is obviously AWS organizations an example of how orgs",
    "start": "2069830",
    "end": "2076608"
  },
  {
    "text": "works if you're not familiar with it is that orgs allow use allows you to set service control policies on an",
    "start": "2076609",
    "end": "2082908"
  },
  {
    "text": "organization and its sub resources so in this case you can see at the root account level I've defined a policy and",
    "start": "2082909",
    "end": "2088010"
  },
  {
    "text": "we've also assigned a policy at the compliance account oh you and then within the compliance no you I've broken",
    "start": "2088010",
    "end": "2094280"
  },
  {
    "text": "out two separate values based on a particular framework like HIPAA or PCI and when we look at how this is",
    "start": "2094280",
    "end": "2100339"
  },
  {
    "text": "basically ingested the downstream accounts you can see that the all the accounts will get the upper",
    "start": "2100339",
    "end": "2106310"
  },
  {
    "text": "policy because it's being pushed down from the root organization they will all get the secondary policy because it's",
    "start": "2106310",
    "end": "2112250"
  },
  {
    "text": "being pushed down from the compliance account but notice that the PCI account will only get the orange indicator here",
    "start": "2112250",
    "end": "2119150"
  },
  {
    "text": "because it's in that oh you only and we can apply that same logical breakdown not only to other OU's but to also",
    "start": "2119150",
    "end": "2125420"
  },
  {
    "text": "individual accounts so we can associate a policy with just an individual account as well so for folks that are not",
    "start": "2125420",
    "end": "2132140"
  },
  {
    "text": "familiar with the service control policies effectively what it allows you to do is black lists and white lists",
    "start": "2132140",
    "end": "2137900"
  },
  {
    "text": "different functions inside of your environment and reason that's important for customers is that when you give this",
    "start": "2137900",
    "end": "2144320"
  },
  {
    "text": "type of access to administrators in those accounts we want to make sure that",
    "start": "2144320",
    "end": "2149390"
  },
  {
    "text": "an administrator cannot override the permission that's being pushed down as a policy so a local administrator or a",
    "start": "2149390",
    "end": "2156230"
  },
  {
    "text": "privileged user in that account can't override this service control policy an",
    "start": "2156230",
    "end": "2161270"
  },
  {
    "text": "important call out though is is that the way that the policy is interpreted is that it is a union of the IAM policy",
    "start": "2161270",
    "end": "2167119"
  },
  {
    "text": "associated well so you have to take into consideration the IAM policy as well as the service control policy to to break",
    "start": "2167119",
    "end": "2173780"
  },
  {
    "text": "that down the way to make that process a little bit easier to be honest is there's a IM policy simulator simulator",
    "start": "2173780",
    "end": "2179690"
  },
  {
    "text": "that can help you with performing that so a couple examples so this is an",
    "start": "2179690",
    "end": "2186590"
  },
  {
    "text": "example of a policy that will do a simple black listing so we're saying that effectively we're going to allow everything except red shift for whatever",
    "start": "2186590",
    "end": "2194270"
  },
  {
    "text": "reason this organizes a organization has identified that they don't want users to use red shift so we're just going to",
    "start": "2194270",
    "end": "2199790"
  },
  {
    "text": "blacklist the use of red shift other customers take a different stance which is that they want to do white listing so",
    "start": "2199790",
    "end": "2205820"
  },
  {
    "text": "in this case we're defining a specific set of API calls not just to the service",
    "start": "2205820",
    "end": "2210890"
  },
  {
    "text": "but to the individual call within the service so in this case just the describe calls so how do we use this so",
    "start": "2210890",
    "end": "2217310"
  },
  {
    "start": "2216000",
    "end": "2216000"
  },
  {
    "text": "if we look at this from a security account perspective what we would do is basically have that security account",
    "start": "2217310",
    "end": "2222470"
  },
  {
    "text": "inside the organization and we can use things like a read-only access rule to basically start doing things like",
    "start": "2222470",
    "end": "2228290"
  },
  {
    "text": "describe calls to the member accounts inside of the organization we can use that SNS topic flow that I talked about",
    "start": "2228290",
    "end": "2234230"
  },
  {
    "text": "earlier where if we want to broadcast changes to our environment we can have the individual accounts listen to the SNS topic we can",
    "start": "2234230",
    "end": "2241640"
  },
  {
    "text": "also do things like via stacks sets and cloud formation in the organization configure all the member accounts to",
    "start": "2241640",
    "end": "2247940"
  },
  {
    "text": "automatically configure themselves to do things like put their cloud trail logs in the central security accounts s3",
    "start": "2247940",
    "end": "2254119"
  },
  {
    "text": "bucket for log retention and then we can also do things like create custom cloud watch them extra cloud watch metrics as",
    "start": "2254119",
    "end": "2261050"
  },
  {
    "text": "well so the way again that's sort of visually that would break down is if we had that organization the security",
    "start": "2261050",
    "end": "2266930"
  },
  {
    "text": "account would sort of hang off on that first branch and use the cross account role capability to assume access into",
    "start": "2266930",
    "end": "2274670"
  },
  {
    "text": "those those different accounts now an area that I want to make sure that is very clear this is a very sensitive",
    "start": "2274670",
    "end": "2280130"
  },
  {
    "text": "account this account can obviously log in to all the different accounts inside of your environment so you want to make",
    "start": "2280130",
    "end": "2285680"
  },
  {
    "text": "sure that access to this is count is on a need to lead to access basis and that",
    "start": "2285680",
    "end": "2291230"
  },
  {
    "text": "you're doing things like following best practices using multi-factor authentication looking for an ominous behavior within that I am principled but",
    "start": "2291230",
    "end": "2298130"
  },
  {
    "text": "how would I know what's anomalous behavior well the answer is guard duty so if we're using guard duty in that",
    "start": "2298130",
    "end": "2303980"
  },
  {
    "text": "central security account one of the things that guard duty can help you detect is anomalous behavior of the",
    "start": "2303980",
    "end": "2309500"
  },
  {
    "text": "individual user so let me show you that as sort of an example so going back to",
    "start": "2309500",
    "end": "2319130"
  },
  {
    "text": "our service list I'm gonna go into guard duty",
    "start": "2319130",
    "end": "2323799"
  },
  {
    "text": "and as an example of an anomalous behavior for a user what we're seeing here on the right-hand side basically",
    "start": "2326070",
    "end": "2331860"
  },
  {
    "text": "for folks that are in the back of the room is that we've identified that a particular principle is making API calls",
    "start": "2331860",
    "end": "2337080"
  },
  {
    "text": "from location that they are not geographically usually making them from so in this case this particular",
    "start": "2337080",
    "end": "2343290"
  },
  {
    "text": "principle usually makes calls from Virginia but for some reason right now the principle is making calls in Fort Worth",
    "start": "2343290",
    "end": "2349890"
  },
  {
    "text": "Texas so the the finding here may be that we simply have a developer that's",
    "start": "2349890",
    "end": "2355200"
  },
  {
    "text": "you know visiting family or that is working remotely and we can just let this go but an important call out for",
    "start": "2355200",
    "end": "2361830"
  },
  {
    "text": "how guard duty works is the actual finding report itself is this JSON structured document and the reason that",
    "start": "2361830",
    "end": "2368070"
  },
  {
    "text": "that's report important is again using that same lambda workflow what we can zero in on is this we can make a threat",
    "start": "2368070",
    "end": "2375570"
  },
  {
    "text": "decision based on the country that we're seeing in that guard duty finding so a good example is that perhaps some",
    "start": "2375570",
    "end": "2381630"
  },
  {
    "text": "organizations may make the choice that if all of my developers are based in the continental United States and I get this",
    "start": "2381630",
    "end": "2387180"
  },
  {
    "text": "type of alert we'll just mute the alert because we don't consider that to be a normal or unusual behavior but if I see",
    "start": "2387180",
    "end": "2394500"
  },
  {
    "text": "the developer present in the country that we don't do business in or that I wouldn't expect that developer to be",
    "start": "2394500",
    "end": "2399960"
  },
  {
    "text": "popping up in then we can use that basically to fire an event that will basically lock that users account and",
    "start": "2399960",
    "end": "2405600"
  },
  {
    "text": "rotate and remove the API key material",
    "start": "2405600",
    "end": "2409820"
  },
  {
    "text": "so an important way to make sure that that effectively is pushed out to all of your organization's accounts is that",
    "start": "2413090",
    "end": "2419340"
  },
  {
    "start": "2414000",
    "end": "2414000"
  },
  {
    "text": "much like organizations guard duty supports parent-child relationship or master account configuration where we",
    "start": "2419340",
    "end": "2427050"
  },
  {
    "text": "would use guard duty to basically push itself into the security account and then we can identify member accounts",
    "start": "2427050",
    "end": "2433410"
  },
  {
    "text": "inside the organization that will listen to guard duty findings but also broadcast their individual findings so",
    "start": "2433410",
    "end": "2439830"
  },
  {
    "text": "it allows the security account to basically see all the various guard duty alerts that are taking place across the",
    "start": "2439830",
    "end": "2445590"
  },
  {
    "text": "enterprise and that's a really good way to do threat and tell of your organization because now that I'm",
    "start": "2445590",
    "end": "2451020"
  },
  {
    "text": "aggravated the security account I can process it and look for signs that an actor is probing all of our",
    "start": "2451020",
    "end": "2457110"
  },
  {
    "text": "infrastructure so I can see that you know the you know Department of those you know Treasury just got this alert and then",
    "start": "2457110",
    "end": "2463850"
  },
  {
    "text": "suddenly three seconds later we see that another agency just gets the same alert we can use that in correlation to say",
    "start": "2463850",
    "end": "2469250"
  },
  {
    "text": "that this actor is scanning a specific subset of the IP ranges and use that pub/sub model to push out a block to all",
    "start": "2469250",
    "end": "2476450"
  },
  {
    "text": "agencies that are subscribers to block that traffic moving forward another area",
    "start": "2476450",
    "end": "2482510"
  },
  {
    "text": "that's important is enforcing consistency inside of your environment we want to make sure that everybody uses",
    "start": "2482510",
    "end": "2487640"
  },
  {
    "text": "the same tools the same building process so the way that we can do that is",
    "start": "2487640",
    "end": "2492860"
  },
  {
    "text": "through template ization of our build so in plain English we want to move away from the old Excel style checklist of",
    "start": "2492860",
    "end": "2500660"
  },
  {
    "text": "building out our resources and instead focus on template izing all of it in a cloud formation template and the reason",
    "start": "2500660",
    "end": "2506810"
  },
  {
    "text": "that that's important is that it allows us to basically take a template and deploy it and deploy it again and deploy",
    "start": "2506810",
    "end": "2511910"
  },
  {
    "text": "it again and keep deploying that resource in a repeatable way so that we know there's there's consistency inside",
    "start": "2511910",
    "end": "2518150"
  },
  {
    "text": "the environment but how do we deal with specific applications then one of the",
    "start": "2518150",
    "end": "2524090"
  },
  {
    "text": "cool capabilities within organizations and cloud formation is the ability to do what's called a stack set and what stack",
    "start": "2524090",
    "end": "2530000"
  },
  {
    "text": "sets will allow you to do is basically push cloud formation templates out to member accounts and basically push",
    "start": "2530000",
    "end": "2536390"
  },
  {
    "text": "artifacts to those accounts so if I wanted to make sure that every organization member in our environment",
    "start": "2536390",
    "end": "2542240"
  },
  {
    "text": "had a particular security group configured by baseline I could push that out as a stack set element and then when",
    "start": "2542240",
    "end": "2548120"
  },
  {
    "text": "we want to make a change to that security group I make it to one file and it will push to all the member accounts",
    "start": "2548120",
    "end": "2553430"
  },
  {
    "text": "inside of our environment another way that we can address that is with Service Catalog so we can provide that same",
    "start": "2553430",
    "end": "2560210"
  },
  {
    "text": "template in a marketplace type offering internally to make sure that our consumers can get that same repeatable",
    "start": "2560210",
    "end": "2566810"
  },
  {
    "text": "infrastructure but in a way that's perhaps more friendly to consume one of the interesting use cases for the use of",
    "start": "2566810",
    "end": "2573020"
  },
  {
    "start": "2571000",
    "end": "2571000"
  },
  {
    "text": "Service Catalog though is that if you have an R&D arm as part of your organization and you do things like",
    "start": "2573020",
    "end": "2579500"
  },
  {
    "text": "publish in a peer-reviewed journal Service Catalog allows you to deploy applications and versions and the reason",
    "start": "2579500",
    "end": "2585950"
  },
  {
    "text": "that that's really important for those that are in that space if you are going to publish a peer-reviewed document and",
    "start": "2585950",
    "end": "2592220"
  },
  {
    "text": "three years from now some it's gonna challenge your finding usually a part of that challenge is the difficulty with reproducibility with",
    "start": "2592220",
    "end": "2599720"
  },
  {
    "text": "service catalog I can go right back to the particular version that we did our analysis on and provide that third party",
    "start": "2599720",
    "end": "2605840"
  },
  {
    "text": "with basically the exact same environment that we did our analysis with the exact same tooling and the",
    "start": "2605840",
    "end": "2611150"
  },
  {
    "text": "exact same data set configuration so in summary we want to make sure that we're leveraging automation as much as",
    "start": "2611150",
    "end": "2617720"
  },
  {
    "text": "possible humans you know we we make mistakes we don't do things correct all the time code tends to never sleep tends",
    "start": "2617720",
    "end": "2625520"
  },
  {
    "text": "to never get bored tends to never not do what you tell it to do so leverage automation as much as possible",
    "start": "2625520",
    "end": "2630650"
  },
  {
    "text": "if you're going to use AWS for a larger organization consider the use of the",
    "start": "2630650",
    "end": "2636650"
  },
  {
    "text": "organization service it will allow you to push policy to all the resources that you have and allow you to automate the",
    "start": "2636650",
    "end": "2643940"
  },
  {
    "text": "distribution of governance and kampala see controls to those resources and a structured and controlled way and as of",
    "start": "2643940",
    "end": "2652090"
  },
  {
    "text": "two days ago there was a newer offering that we just released in the beta which is called landing zone there's a blog",
    "start": "2652090",
    "end": "2658670"
  },
  {
    "text": "post forthcoming but effectively what landing zone will allow you to do is sort of marry the two to create a",
    "start": "2658670",
    "end": "2664130"
  },
  {
    "text": "account vending system if you will to basically then accounts rather than have",
    "start": "2664130",
    "end": "2669800"
  },
  {
    "text": "accounts basically be provisioned on-demand so that's all I've got happy to take questions or in the back or hang",
    "start": "2669800",
    "end": "2675920"
  },
  {
    "text": "out but otherwise thanks very much for coming [Applause]",
    "start": "2675920",
    "end": "2683150"
  }
]