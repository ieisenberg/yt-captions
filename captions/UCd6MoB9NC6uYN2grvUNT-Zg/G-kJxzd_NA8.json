[
  {
    "start": "0",
    "end": "173000"
  },
  {
    "text": "my name is Eric my day job is with the AWS security team but I helped Marco and",
    "start": "599",
    "end": "6520"
  },
  {
    "text": "Kyle and the team with some of the security features for our new AWS iot service so that's what we're going to be",
    "start": "6520",
    "end": "12200"
  },
  {
    "text": "talking about today this is a a story that we're all familiar with we've got",
    "start": "12200",
    "end": "20119"
  },
  {
    "text": "things and they're getting connected uh this ranges from ordinary consumer gadgets like thermostats and watches to",
    "start": "20880",
    "end": "28359"
  },
  {
    "text": "Industrial things like wind turbines and I don't know my car is on the internet now um which it's kind of nice that I",
    "start": "28359",
    "end": "35079"
  },
  {
    "text": "know where it is and kind of disturbing that anyone with my password knows where it",
    "start": "35079",
    "end": "40160"
  },
  {
    "text": "is uh there there's a lot of predictions here everyone has a set of numbers but",
    "start": "40160",
    "end": "46199"
  },
  {
    "text": "the way we think about this is that everything that could possibly become connected will become connected so",
    "start": "46199",
    "end": "52879"
  },
  {
    "text": "apparently like even toothbrushes I hadn't even thought about an Internet connected toothbrush but apparently such a thing exists so there's going be lots",
    "start": "52879",
    "end": "60480"
  },
  {
    "text": "of these things and there's going to be lots of these things no matter what your definition of large is I work for Amazon",
    "start": "60480",
    "end": "65518"
  },
  {
    "text": "we're a company that's used to scale we talk about billions of things all the time and even in that world there's",
    "start": "65519",
    "end": "71320"
  },
  {
    "text": "going to be lots of iot devices and the problem is that that",
    "start": "71320",
    "end": "76960"
  },
  {
    "text": "connected doesn't mean smart the column on the left there is the internet stack that we used to have 30 years ago these",
    "start": "76960",
    "end": "83520"
  },
  {
    "text": "are the protocols that I grew up with on the internet I kind of miss Archie actually it was It was kind of fun but",
    "start": "83520",
    "end": "89960"
  },
  {
    "text": "but these are all clear text protocols this is this is the academic Network that turned into the internet you look",
    "start": "89960",
    "end": "96040"
  },
  {
    "text": "at the protocol stack on the right there and we're right there again that these Protocols are designed to accomplish",
    "start": "96040",
    "end": "101520"
  },
  {
    "text": "specific goals but security isn't one of them and then when you peel the onion",
    "start": "101520",
    "end": "106960"
  },
  {
    "text": "another layer it gets even more complicated uh the the world of of computing that we're traditionally used",
    "start": "106960",
    "end": "112960"
  },
  {
    "text": "to it used to be servers desk side or in the back room and then laptops came",
    "start": "112960",
    "end": "118200"
  },
  {
    "text": "along and now Computing is about pH and tablets but these devices are all basically the same there's some tablet",
    "start": "118200",
    "end": "124399"
  },
  {
    "text": "manufacturers out there that are very angry at me right now I'm sure but the the set of Hardware capabilities that",
    "start": "124399",
    "end": "130119"
  },
  {
    "text": "these devices have the form factors aren't that varied and you get into the the world of embedded devices and the",
    "start": "130119",
    "end": "136280"
  },
  {
    "text": "the form factors the capabilities the things that are built into the hardware are radically different I don't have a",
    "start": "136280",
    "end": "141760"
  },
  {
    "text": "device that I can't charge there are a lot of embedded devices that have a battery in them and that's a lifetime",
    "start": "141760",
    "end": "146920"
  },
  {
    "text": "battery when that battery is dead you throw the thing out so they're Miser about power there are devices where the",
    "start": "146920",
    "end": "152120"
  },
  {
    "text": "CPU has has just so many clock cycles and every instruction counts I have no idea I think my phone has like eight",
    "start": "152120",
    "end": "158319"
  },
  {
    "text": "cores in it or something like no one's counting instructions there some of these devices have Hardware Key storage",
    "start": "158319",
    "end": "164599"
  },
  {
    "text": "some of them don't so the the the world of iot the world of devices is much broader and much more varied than",
    "start": "164599",
    "end": "170800"
  },
  {
    "text": "traditional Computing devices so we have a simple goal we have",
    "start": "170800",
    "end": "176599"
  },
  {
    "start": "173000",
    "end": "173000"
  },
  {
    "text": "a device we have the AWS iot service we want the device to talk to the",
    "start": "176599",
    "end": "181760"
  },
  {
    "text": "service we want the service to talk to the device and we want to do so securely in both directions because this is a",
    "start": "181760",
    "end": "187920"
  },
  {
    "text": "security talk we are going to secure the heck out of this thing and why you ask",
    "start": "187920",
    "end": "193080"
  },
  {
    "text": "because there's a bearded guy on stage frothing at the mouth screaming about security this is a terrible reason to do",
    "start": "193080",
    "end": "199319"
  },
  {
    "text": "security you should do security because of the sensitivity of your data in your",
    "start": "199319",
    "end": "205439"
  },
  {
    "text": "applications and I hear this all the time my my day job is security for AWS I",
    "start": "206799",
    "end": "212239"
  },
  {
    "text": "talk to people inside the company outside the company and I hear my data isn't sensitive in the iot world",
    "start": "212239",
    "end": "218400"
  },
  {
    "text": "temperatures fuel levels vibration amounts actuator positions like very mundane stuff like who cares that it's",
    "start": "218400",
    "end": "225360"
  },
  {
    "text": "83 degrees in the first floor of my house but iot isn't free you're here at",
    "start": "225360",
    "end": "232000"
  },
  {
    "text": "this conference learning about this you're going to spend time and money implementing some iot project you have",
    "start": "232000",
    "end": "237680"
  },
  {
    "text": "some business goal in mind there's something you want to accomplish when you're doing this so you've got your",
    "start": "237680",
    "end": "244439"
  },
  {
    "text": "things they're they're going to feed data into some data store you're going to have some business application that",
    "start": "244439",
    "end": "250000"
  },
  {
    "text": "feeds off of that data and does something to it Aggregates filters extrapolates projects maybe you're going",
    "start": "250000",
    "end": "255840"
  },
  {
    "text": "to have some humans involved in the loop they're they're going to make decisions they're end result is that changes are",
    "start": "255840",
    "end": "261799"
  },
  {
    "text": "going to happen in the real world this is Internet of Things Not internet of abstractions or Internet of Concepts we",
    "start": "261799",
    "end": "268160"
  },
  {
    "text": "we're going to make change happen in the real world and so in addition to protecting your data you're protecting",
    "start": "268160",
    "end": "275639"
  },
  {
    "text": "the decisions that you're making based on that data so that's what you're protecting",
    "start": "275639",
    "end": "281520"
  },
  {
    "start": "281000",
    "end": "281000"
  },
  {
    "text": "here I've got this one thing in the the lower left corner and it's all lonely it's not talking to anyone because it's",
    "start": "281520",
    "end": "287880"
  },
  {
    "text": "evil it is an evil thing and it's feeding bad data in and that b data is",
    "start": "287880",
    "end": "293520"
  },
  {
    "text": "going to propagate to your applications it's going to propagate to your humans and it's going to cause bad changes to happen in the real world and some of",
    "start": "293520",
    "end": "300360"
  },
  {
    "text": "these may be trivial you may turn the temperature up in my house I will be angry I will go and I will turn the dial",
    "start": "300360",
    "end": "306600"
  },
  {
    "text": "down again maybe we get into a fight maybe I'll rip the thermostat off the wall and put a dumb thermostat in its place but that's that's not what we're",
    "start": "306600",
    "end": "313680"
  },
  {
    "text": "doing here we're talking about assembly lines manufacturing processes jet turbines and and uh wind turbines these",
    "start": "313680",
    "end": "321400"
  },
  {
    "text": "things are expensive people's lives could be placed at risk if they're operating improperly some of it is just",
    "start": "321400",
    "end": "326840"
  },
  {
    "text": "economic risk we we we mess with the data you think that your Fleet is wearing out faster than it is so you put",
    "start": "326840",
    "end": "332479"
  },
  {
    "text": "it in for maintenance too soon or that it's consuming more fuel than it actually is and you order fuel before",
    "start": "332479",
    "end": "338120"
  },
  {
    "text": "you have to you accelerate Capital maybe you take an assembly line out of operation because you think it's unsafe",
    "start": "338120",
    "end": "344000"
  },
  {
    "text": "or worse you leave an assembly line in operation because you incorrectly think that it is safe so the extent to which",
    "start": "344000",
    "end": "349919"
  },
  {
    "text": "you protect your iot deployment should be driven by the most expensive decision that you could make based on your data",
    "start": "349919",
    "end": "356600"
  },
  {
    "text": "not the most expensive decision that you do make based on your data",
    "start": "356600",
    "end": "361639"
  },
  {
    "text": "so a rogue actor that gains access to the system in many ways is worse than",
    "start": "365360",
    "end": "370520"
  },
  {
    "text": "fraudulent data if I'm able to feed fraudulent data into the system I have",
    "start": "370520",
    "end": "375800"
  },
  {
    "text": "to perturb it using its normal inputs I have to find the signal that will cause that system to behave uh irrationally to",
    "start": "375800",
    "end": "382919"
  },
  {
    "text": "behave incorrectly if I have direct access to the system I can just change its Behavior so we need to protect",
    "start": "382919",
    "end": "389039"
  },
  {
    "text": "against this as well another pattern that I run into in security all the time is that things",
    "start": "389039",
    "end": "395000"
  },
  {
    "text": "change today your iot deployment is simple you're collecting a bunch of data",
    "start": "395000",
    "end": "400080"
  },
  {
    "text": "like everything is already instrumented it's already on the network like you might as well collect the data and put",
    "start": "400080",
    "end": "405360"
  },
  {
    "text": "it somewhere like maybe it'll be useful someday you're not making any decisions driven off of that data so the most",
    "start": "405360",
    "end": "410720"
  },
  {
    "text": "expensive decision you could make off that data is zero it's not worth spending anything to protect it but six",
    "start": "410720",
    "end": "416240"
  },
  {
    "text": "months from now someone's going to come to you and say look this data is gold like I figured out that we can move this",
    "start": "416240",
    "end": "421759"
  },
  {
    "text": "much faster or we can accelerate delivery by this much or we can optimize cost by this much and you're going to",
    "start": "421759",
    "end": "427400"
  },
  {
    "text": "think about it and you're going to go for it because that's the right thing to do like you're in business to move faster to Delight your customers to",
    "start": "427400",
    "end": "433039"
  },
  {
    "text": "deliver more of whatever it is that you do and you're not going to remember that six-month old decision where you said",
    "start": "433039",
    "end": "438479"
  },
  {
    "text": "this data isn't being used to drive any decisions all of this data will eventually be used to drive decisions",
    "start": "438479",
    "end": "444560"
  },
  {
    "text": "and so as we go through iot deployments that's the operating assumption that we go in with",
    "start": "444560",
    "end": "451439"
  },
  {
    "start": "452000",
    "end": "452000"
  },
  {
    "text": "so in order to do this in order to to solve the problem that I've just posed",
    "start": "452160",
    "end": "457319"
  },
  {
    "text": "we need to make sure that when we talk to things we are the only parties in the conversation there are no use droppers",
    "start": "457319",
    "end": "462680"
  },
  {
    "text": "we need to make sure that the things that we're talking to are actually the things that we think we're talking to",
    "start": "462680",
    "end": "468080"
  },
  {
    "text": "and then we need to control access across the system we need to make sure that the things that we have in the system are the things we want in the",
    "start": "468080",
    "end": "474400"
  },
  {
    "text": "system that only the right data flows to the right places and that it's a proper member of the WS",
    "start": "474400",
    "end": "481080"
  },
  {
    "text": "ecosystem so the system that we live in starts with the AWS iot service this is",
    "start": "481080",
    "end": "486199"
  },
  {
    "start": "482000",
    "end": "482000"
  },
  {
    "text": "a standard AWS service it's even got a nice isomorphic uh logo so you know it's",
    "start": "486199",
    "end": "491800"
  },
  {
    "text": "good we have things there were supposed to be billions of these but PowerPoint crashed so I ratcheted back to",
    "start": "491800",
    "end": "499039"
  },
  {
    "text": "four and the things are going to talk to the service that's uh that makes sense",
    "start": "499039",
    "end": "505080"
  },
  {
    "text": "so blue arrows are things talking to the AWS iot service and you're going to have some set of of actors in the system",
    "start": "505080",
    "end": "511919"
  },
  {
    "text": "humans system processes whatever they're going to be talking to the iot service as well provisioning management so green",
    "start": "511919",
    "end": "519080"
  },
  {
    "text": "is other actors talking to the AWS iot service and then as verer mentioned",
    "start": "519080",
    "end": "524320"
  },
  {
    "text": "there's a rules engine inside the iot service and we can drive data we can we can process the data we can aggregate it",
    "start": "524320",
    "end": "530880"
  },
  {
    "text": "filter it and then we can drive that data into other parts of AWS and we need to make sure that that's done sanely as",
    "start": "530880",
    "end": "537920"
  },
  {
    "text": "well so if we peek inside the service if we zoom in a little",
    "start": "537920",
    "end": "543839"
  },
  {
    "text": "bit that is the best PowerPoint animation I have ever made thank you we've got device Shadows",
    "start": "543839",
    "end": "553440"
  },
  {
    "text": "these these are our control plane representation of the devices that you've got deployed in the field and so",
    "start": "553440",
    "end": "559720"
  },
  {
    "text": "this is where we maintain State about your uh your devices so if they're intermittently connected we maintain the",
    "start": "559720",
    "end": "565040"
  },
  {
    "text": "last known state of them so you can query that all the time you can drive State changes at the sh shadows and we'll propagate those out to the devices",
    "start": "565040",
    "end": "571560"
  },
  {
    "text": "when they reconnect and this is where this is where you can execute control plane operations on the on on the",
    "start": "571560",
    "end": "578920"
  },
  {
    "text": "devices so secure Communications with things we have blue",
    "start": "578920",
    "end": "584760"
  },
  {
    "text": "arrows um the blue arrows are mqtt it's a a standard queuing Pub sub protocol",
    "start": "584760",
    "end": "591600"
  },
  {
    "text": "and it's one that's supported broadly in embedded devices it's designed to be a lightweight messaging protocol there's a",
    "start": "591600",
    "end": "597600"
  },
  {
    "text": "ton of software that's already written to m qtt it's well suited to embedded development embedded deployments uh",
    "start": "597600",
    "end": "604000"
  },
  {
    "text": "devices with constrained CPU and memory so we support that for devices for things talking to the AWS iot",
    "start": "604000",
    "end": "610800"
  },
  {
    "text": "service and this is a a sample mqtt packet uh snagged off the wire and it",
    "start": "610800",
    "end": "616920"
  },
  {
    "text": "looks like a bunch of heximal gobleg but it can be decoded and this is",
    "start": "616920",
    "end": "623920"
  },
  {
    "text": "not because I am a wizard because I have mad networking skills this is because I have access to Google and I downloaded",
    "start": "623920",
    "end": "630480"
  },
  {
    "text": "wire shark literally like the the download",
    "start": "630480",
    "end": "636240"
  },
  {
    "text": "itself was the longest part of this literally 30 seconds worth of effort to decode this this is clearly a publish",
    "start": "636240",
    "end": "641839"
  },
  {
    "text": "message to a topic named fbar it's letting know that the temperature is",
    "start": "641839",
    "end": "647399"
  },
  {
    "text": "83° anyone that wants these tools will have them we should go in assuming that",
    "start": "647399",
    "end": "652959"
  },
  {
    "text": "anyone that wants to fold spindle mangle or mutilate mqtt packets can do so and",
    "start": "652959",
    "end": "659360"
  },
  {
    "text": "that's fine mqtt was intentionally designed as a lightweight protocol that didn't address security it's used in",
    "start": "659360",
    "end": "666079"
  },
  {
    "text": "many applications where it's perfectly reasonable to use mqtt natively but we're talking about devices talking to",
    "start": "666079",
    "end": "671880"
  },
  {
    "text": "the AWS iot service over the open internet we need to address security and because mqtt doesn't have a mechanism",
    "start": "671880",
    "end": "678200"
  },
  {
    "text": "for that we need something outside of mqtt the answer is mutual authentication",
    "start": "678200",
    "end": "685079"
  },
  {
    "start": "681000",
    "end": "681000"
  },
  {
    "text": "TLS this is a human being they have a web browser they're going to to the amazon.com retail site they want to go",
    "start": "685079",
    "end": "692360"
  },
  {
    "text": "shopping they're going to connect to amazon.com and Amazon's going to present a",
    "start": "692360",
    "end": "698519"
  },
  {
    "text": "certificate this certificate is public data literally any one of you sitting here now could go download that",
    "start": "698519",
    "end": "703839"
  },
  {
    "text": "certificate we present it to every single TLS connection to the Amazon website it is truly public",
    "start": "703839",
    "end": "709720"
  },
  {
    "text": "data we've also got a private key that corresponds to the public key embedded in that certificate and we go through a",
    "start": "709720",
    "end": "715760"
  },
  {
    "text": "challenge response dance with this caller and we prove that we're in possession of the private key that",
    "start": "715760",
    "end": "721320"
  },
  {
    "text": "corresponds to the certificate without exposing the private key and by proving that we have that private key we",
    "start": "721320",
    "end": "727839"
  },
  {
    "text": "authenticate ourselves now that you get the green lock in your browser everything is safe you know you can type",
    "start": "727839",
    "end": "733800"
  },
  {
    "text": "in your credit card number note that we have no idea who that human is they have not authenticated to us this is an",
    "start": "733800",
    "end": "739680"
  },
  {
    "text": "anonymous connection from their end that's why you still have to sign into your Amazon account once you've",
    "start": "739680",
    "end": "745120"
  },
  {
    "text": "connected we have a very similar diagram in the mqtt world",
    "start": "745120",
    "end": "751160"
  },
  {
    "text": "we have the device we want to talk to the AWS iot service brings up a session between",
    "start": "751240",
    "end": "757199"
  },
  {
    "text": "them we have exactly the same protocol the service presents a certificate cryptographically proves that it's in",
    "start": "757199",
    "end": "763199"
  },
  {
    "text": "possession of the private key and we've authenticated the service we go through the same dance in",
    "start": "763199",
    "end": "768880"
  },
  {
    "text": "the opposite direction the client is in possession of a certificate proves that it's in possession of its private key",
    "start": "768880",
    "end": "775079"
  },
  {
    "text": "and now the service has authenticated the client this is mutual authentication we've each authenticated the other end",
    "start": "775079",
    "end": "780600"
  },
  {
    "text": "point so now we've got confidentiality and integrity on The Wire because of TLS and we've got Mutual authentication",
    "start": "780600",
    "end": "787240"
  },
  {
    "text": "because we've both presented certificates and proven that we are who we claim to",
    "start": "787240",
    "end": "792279"
  },
  {
    "text": "be green arrows are not blue there's something else going on here these are",
    "start": "792680",
    "end": "798760"
  },
  {
    "text": "standard AWS API calls this is SSL HTTP AWS off exactly as it works in the rest",
    "start": "798760",
    "end": "806199"
  },
  {
    "text": "of Amazon so in contrast to Mutual off TLS we've got some human an I am user",
    "start": "806199",
    "end": "813959"
  },
  {
    "text": "something like that that wants to talk to the service they're going to authenticate the service using the certificate exactly like you do if",
    "start": "813959",
    "end": "819680"
  },
  {
    "text": "you're talking to ec2 or S3 or any of our other services but then to authenticate the caller the caller has a",
    "start": "819680",
    "end": "825800"
  },
  {
    "text": "set of AWS API Keys it's an access key ID and a secret and we don't authenticate the Channel with AWS we",
    "start": "825800",
    "end": "832360"
  },
  {
    "text": "authenticate each API call so we sign each API request and we send those in and then the service validates those",
    "start": "832360",
    "end": "838360"
  },
  {
    "text": "requests this is exactly how every single API called it SNS sqs simple DB",
    "start": "838360",
    "end": "844079"
  },
  {
    "text": "Etc work that authenticates the caller so now we've got Mutual authentication in both",
    "start": "844079",
    "end": "851199"
  },
  {
    "text": "cases it is exactly as different as it needs to be the whole goal of this was to support mqtt mqtt doesn't support AWS",
    "start": "852000",
    "end": "859920"
  },
  {
    "text": "API keys so we needed to be different there server authentication confidentiality all of the other bits of",
    "start": "859920",
    "end": "865480"
  },
  {
    "text": "the protocol are as similar as we could make them now I",
    "start": "865480",
    "end": "872079"
  },
  {
    "text": "claimed that I have this certificate provisioned on my device and really it's all about the",
    "start": "872079",
    "end": "879399"
  },
  {
    "text": "private key the private key is the cryptographic identity for the device just as the aw or the amazon.com private",
    "start": "879399",
    "end": "886480"
  },
  {
    "text": "key is precious to us we protect it carefully the private key for your device is its cryptographic identity",
    "start": "886480",
    "end": "892199"
  },
  {
    "text": "that's that's what makes it who it is and so we've reduced the problem of provisioning the device to the problem",
    "start": "892199",
    "end": "898880"
  },
  {
    "text": "of securely installing the private key and certificate on the device there's two ways that we support for doing",
    "start": "898880",
    "end": "905480"
  },
  {
    "text": "this the first is simple it's a single API call you call into the service you",
    "start": "905480",
    "end": "911839"
  },
  {
    "text": "say create keys and certificate which shockingly creates keys and certificate",
    "start": "911839",
    "end": "917040"
  },
  {
    "text": "so we're going to generate a key pair we're going to sign the the public key into a certificate and we return those",
    "start": "917040",
    "end": "922480"
  },
  {
    "text": "to you it's then your job to install that on the thing by whatever means makes sense for your device whether",
    "start": "922480",
    "end": "928680"
  },
  {
    "text": "that's over a USB cable or a JTAG port or however you provision things to the the device to actually accomplish this",
    "start": "928680",
    "end": "936160"
  },
  {
    "text": "in the CLI you just call AWS iot create keys and certificate you get back",
    "start": "936160",
    "end": "942360"
  },
  {
    "text": "adjacent formatted response it's a single command um you can see that last entry there the certificate ID it's very",
    "start": "942360",
    "end": "948800"
  },
  {
    "text": "long so I snipped out the middle of it there's more heximal that goes in there um that's the identifier that's the",
    "start": "948800",
    "end": "954480"
  },
  {
    "text": "globally unique system assigned identifier for that certificate um we also return it to you in AR format Arn",
    "start": "954480",
    "end": "961000"
  },
  {
    "text": "Arn is an Amazon resource name these are consistently used across the platform so",
    "start": "961000",
    "end": "966519"
  },
  {
    "text": "S3 buckets and objects and ec2 instances and sqs Qs and Kinesis streams all have",
    "start": "966519",
    "end": "971880"
  },
  {
    "text": "ARS it's our consistent way of naming things in the AWS ecosystem and then you get back the certificate and the key",
    "start": "971880",
    "end": "979079"
  },
  {
    "text": "pair both the public key and the private key the downside to",
    "start": "979079",
    "end": "986959"
  },
  {
    "text": "this is that we generated the key pair including the private keyy and that had to be moved across the network now we",
    "start": "986959",
    "end": "994279"
  },
  {
    "text": "take this very seriously that private key needs to be protected that's the cryptographic identity for your thing so",
    "start": "994279",
    "end": "1000199"
  },
  {
    "text": "we forget it we never write these to disk and that's important there is no API to refetch the private key if you",
    "start": "1000199",
    "end": "1006279"
  },
  {
    "text": "forget the response to create keys and certificate you can never get that private key back so we're going to take",
    "start": "1006279",
    "end": "1013000"
  },
  {
    "text": "good care not to write your key pairs to dis the connection there is protected with TLS so you're you've got",
    "start": "1013000",
    "end": "1019480"
  },
  {
    "text": "confidentiality on the network but then it's going to wind up on your laptop or whatever client you're using the key is",
    "start": "1019480",
    "end": "1025160"
  },
  {
    "text": "moving around and in some cases if you've got Hardware Key stores you can't move Keys around uh if you've ever used",
    "start": "1025160",
    "end": "1032720"
  },
  {
    "text": "a smart card the SIM cards that go in your phone things like that they generate the key pair in the device and",
    "start": "1032720",
    "end": "1038959"
  },
  {
    "text": "the key can't be exported there is no verb for export key and so in those",
    "start": "1038959",
    "end": "1046240"
  },
  {
    "text": "cases you have to have the client generate the key pair so in this workflow the client generates a key pair",
    "start": "1046240",
    "end": "1053600"
  },
  {
    "start": "1047000",
    "end": "1047000"
  },
  {
    "text": "whether this is done in software on the device whether it's done in a hardware key store maybe it's burned in at the factory and so when you get the system",
    "start": "1053600",
    "end": "1059880"
  },
  {
    "text": "on chip it's already got a key pair in it and using that key pair you sign a",
    "start": "1059880",
    "end": "1065080"
  },
  {
    "text": "CSR a certificate signing request this is internet standard stuff we did not",
    "start": "1065080",
    "end": "1071000"
  },
  {
    "start": "1068000",
    "end": "1068000"
  },
  {
    "text": "make this up the CSR format is defined in pkcs number 10 um this is this is how most of the certificates used on the",
    "start": "1071000",
    "end": "1077400"
  },
  {
    "text": "internet are issued now the CSR includes the public key but",
    "start": "1077400",
    "end": "1084360"
  },
  {
    "text": "it doesn't include the private key so it just includes that that cryptographic signature proof that we have the private",
    "start": "1084360",
    "end": "1090440"
  },
  {
    "text": "key and so this means that the CSR is not a sensitive document a malicious actor that obtained the CSR could at",
    "start": "1090440",
    "end": "1096520"
  },
  {
    "text": "worse turn it into a certificate which is a public document so these things can be moved around the network with much",
    "start": "1096520",
    "end": "1102320"
  },
  {
    "text": "less concern so now that we have a CS R we",
    "start": "1102320",
    "end": "1110200"
  },
  {
    "text": "fetch the CSR from the device and we call create certificate from CSR at the",
    "start": "1110200",
    "end": "1115760"
  },
  {
    "text": "AWS iot service and pass the CSR as a parameter and shockingly this will create a certificate from the",
    "start": "1115760",
    "end": "1122559"
  },
  {
    "text": "CSR we turn it into a certificate send it back to you you provision it on your",
    "start": "1122559",
    "end": "1129720"
  },
  {
    "text": "device and you're in exactly the same state that you were in before there's a private key and a certificate provisioned on the device except in this",
    "start": "1129720",
    "end": "1135919"
  },
  {
    "text": "case the private key never moved around the network um this is done using our own private",
    "start": "1135919",
    "end": "1142520"
  },
  {
    "text": "internal CA the ca is only used for AWS iot it is not a general purpose CA",
    "start": "1142520",
    "end": "1148799"
  },
  {
    "text": "because of that everything can be completely automated it's aable to automation even at very high",
    "start": "1148799",
    "end": "1154559"
  },
  {
    "text": "scale so to actually go through this this is an example of me doing it on an",
    "start": "1154559",
    "end": "1159840"
  },
  {
    "text": "ec2 instance I used op SSL to generate a key pair and then I used op SSL to generate",
    "start": "1159840",
    "end": "1167280"
  },
  {
    "text": "a CSR as well it turns out and this is a true fact in general that a CA is under no obligation",
    "start": "1167280",
    "end": "1175120"
  },
  {
    "text": "to use any of the data that you provide in the CSR other than the public key they can change any of the fields and so",
    "start": "1175120",
    "end": "1181600"
  },
  {
    "text": "because typically you're doing something like getting a certificate for dub. amazon.com that data is important and",
    "start": "1181600",
    "end": "1186919"
  },
  {
    "text": "the ca is going to validate it you're getting a certificate for a thing from a private CA that's only used for this one",
    "start": "1186919",
    "end": "1192240"
  },
  {
    "text": "service you can literally fill in anything you want we will ignore these values the only value that we rely on is",
    "start": "1192240",
    "end": "1198080"
  },
  {
    "text": "the distinguish name in the certificate which we set to be that globally unique",
    "start": "1198080",
    "end": "1204000"
  },
  {
    "text": "ID so then you call create certificate from CSR you pass in the CSR that you just generated and you set it as active",
    "start": "1204000",
    "end": "1211000"
  },
  {
    "text": "and you get back almost exactly the same response as you got back when you created the certificate and keys except",
    "start": "1211000",
    "end": "1216799"
  },
  {
    "text": "that we don't include the key pair because you already have them I keep saying the private key is",
    "start": "1216799",
    "end": "1223799"
  },
  {
    "start": "1221000",
    "end": "1221000"
  },
  {
    "text": "the cryptographic identity it has to be protected so I generated this on my ec2",
    "start": "1223799",
    "end": "1229280"
  },
  {
    "text": "instance I borked my umask and so now this this key pair which includes the private key is sitting there on dis",
    "start": "1229280",
    "end": "1234919"
  },
  {
    "text": "World readable not not not the best security protection if this is a test in Dev",
    "start": "1234919",
    "end": "1241280"
  },
  {
    "text": "machine Chad is bar raising security just removing World read permissions is",
    "start": "1241280",
    "end": "1246880"
  },
  {
    "text": "probably a reasonable place to stop and that's a common thing in security it's not about stopping all possible Badness",
    "start": "1246880",
    "end": "1253960"
  },
  {
    "text": "it's about taking an appropriate investment to mitigate the risks that are likely that the level of protection",
    "start": "1253960",
    "end": "1259120"
  },
  {
    "text": "you go to should depend on the threats that you're going to face if this is a Dev system that's never going to leave the lab stop here you've spent",
    "start": "1259120",
    "end": "1267640"
  },
  {
    "text": "enough then there's a fork in the road things tend to face either software threats or Hardware threats and it",
    "start": "1267640",
    "end": "1274960"
  },
  {
    "start": "1268000",
    "end": "1268000"
  },
  {
    "text": "depends on on the thing and the application it's being used for and um how valuable the thing is how valuable",
    "start": "1274960",
    "end": "1281520"
  },
  {
    "text": "the data is if your thing faces software threats and it's a general purpose Linux box there's things like CH rout and SE",
    "start": "1281520",
    "end": "1287559"
  },
  {
    "text": "Linux there's there's a whole body of literature on this um a lot of these embedded devices have fun things that",
    "start": "1287559",
    "end": "1293480"
  },
  {
    "text": "came out of the DRM efforts um that that they use on on other embedded devices like tablets so there's things like",
    "start": "1293480",
    "end": "1300159"
  },
  {
    "text": "one-time programmable fuses that you can use to protect the private key um again because of the vast variety of Hardware",
    "start": "1300159",
    "end": "1308279"
  },
  {
    "text": "that's used in these embedded devices it's hard to give specific advice um we've got a whole bunch of Dev kits that",
    "start": "1308279",
    "end": "1314400"
  },
  {
    "text": "you can pick up that are designed to work with AWS iot they're going to come with guidance you can stop by the booth",
    "start": "1314400",
    "end": "1320240"
  },
  {
    "text": "we've got people there that can talk to you about your exact use case and give you guidance if uh you've got Hardware",
    "start": "1320240",
    "end": "1326400"
  },
  {
    "start": "1325000",
    "end": "1325000"
  },
  {
    "text": "threats that's when you get into the fun things TPMS and smart cards if you can't even trust the physical environment in",
    "start": "1326400",
    "end": "1332240"
  },
  {
    "text": "which the thing is deployed you get into to FIP style controls like tamper switches where someone opens the Box",
    "start": "1332240",
    "end": "1337760"
  },
  {
    "text": "inappropriately it zeroz itself again there's there's a broad array of things that can be done here and so picking the",
    "start": "1337760",
    "end": "1344240"
  },
  {
    "text": "right one is probably best done in context uh ident identity",
    "start": "1344240",
    "end": "1349640"
  },
  {
    "start": "1347000",
    "end": "1347000"
  },
  {
    "text": "revocation we can revoke identities you You' you've issued a certificate you can list it here you see that same",
    "start": "1349640",
    "end": "1355960"
  },
  {
    "text": "description there um you do not get back the private key we don't have it you only get back the",
    "start": "1355960",
    "end": "1362320"
  },
  {
    "text": "certificate it's active that means it can be used so we can call update certificate",
    "start": "1362320",
    "end": "1369159"
  },
  {
    "text": "and set the status to revoked and shockingly it's now revoked this",
    "start": "1369159",
    "end": "1376640"
  },
  {
    "text": "immediately invalidates this certificate there's no dealing with csrs and ocsp",
    "start": "1376640",
    "end": "1382200"
  },
  {
    "text": "and all of that complexity because this is a closed ecosystem because the only actors in this system are your devices",
    "start": "1382200",
    "end": "1387960"
  },
  {
    "text": "and our service we can make this work very rapidly and very reliably and so if",
    "start": "1387960",
    "end": "1393480"
  },
  {
    "text": "you have a thing that you are suspicious of you think something has gone wrong you can very quickly knock it out of the",
    "start": "1393480",
    "end": "1399159"
  },
  {
    "text": "system now amusingly enough the revoke action cannot be revoked it is irrevocable so this this certificate is",
    "start": "1399159",
    "end": "1406840"
  },
  {
    "text": "now forever dead it will never make another API call but you can use that same key pair if the key pair is safe",
    "start": "1406840",
    "end": "1413200"
  },
  {
    "text": "let's say it was just a test you wanted to make sure that I wasn't lying to you about revoking certificate so you did it and now you want this thing to work",
    "start": "1413200",
    "end": "1419279"
  },
  {
    "text": "again or it was a game day or it turns out that the threat wasn't real for whatever reason you want to make this thing work again even if it has a",
    "start": "1419279",
    "end": "1425320"
  },
  {
    "text": "Hardware Key pair burned in at the factory you can just go through the CSR Dance Again get another certificate",
    "start": "1425320",
    "end": "1430799"
  },
  {
    "text": "signed and it's back in business but it's very important it is absolutely critical that every one of your things",
    "start": "1430799",
    "end": "1437159"
  },
  {
    "text": "have a unique certificate that certificate is its identity if you have an army of things and they all have",
    "start": "1437159",
    "end": "1442840"
  },
  {
    "text": "the same certificate we will not be able to differentiate between them at the control plane is also critical that all",
    "start": "1442840",
    "end": "1448600"
  },
  {
    "text": "of your things have distinct key pairs if just the certificate is compromised you can reuse the same key",
    "start": "1448600",
    "end": "1454919"
  },
  {
    "text": "pair you can resign again you're good to go if that key pair is compromised your entire product line is compromised every",
    "start": "1454919",
    "end": "1462120"
  },
  {
    "text": "single device that has that key in it is now suspect so you should always use distinct certificates and dis keys for",
    "start": "1462120",
    "end": "1469159"
  },
  {
    "text": "every single device so we know how to talk to the",
    "start": "1469159",
    "end": "1474600"
  },
  {
    "text": "devices we know who the devices are now we need to bootstrap them in the",
    "start": "1474600",
    "end": "1480200"
  },
  {
    "text": "system so that's this Arrow here we'll we'll assume it's an AM user managing",
    "start": "1480200",
    "end": "1486000"
  },
  {
    "start": "1481000",
    "end": "1481000"
  },
  {
    "text": "the service itself this is configuring the devices making them active members of your instance of the AWS iot service",
    "start": "1486000",
    "end": "1493159"
  },
  {
    "text": "and because this is a standard AWS service all of the I am richness that you get with other awo services work",
    "start": "1493159",
    "end": "1499799"
  },
  {
    "text": "here so I am users identity Federation eect roles for instances it all just works if you've used this elsewhere in",
    "start": "1499799",
    "end": "1506120"
  },
  {
    "text": "aw this this will be easy um so if I want to control what this user can",
    "start": "1506120",
    "end": "1514360"
  },
  {
    "text": "do button needs to work I assign a policy to them so I've decided that this",
    "start": "1514760",
    "end": "1520520"
  },
  {
    "text": "user should be able to manage certificates and I've listed there all of the API calls that allow this person",
    "start": "1520520",
    "end": "1526039"
  },
  {
    "text": "to manage certificates so the only thing you can do with these Keys is call in and manage certificates everything else",
    "start": "1526039",
    "end": "1532000"
  },
  {
    "text": "is going to be denied and one important part about this policy application and it applies to all of the policies that",
    "start": "1532000",
    "end": "1537559"
  },
  {
    "text": "we're going to describe in the system is that you can always change your mind you can always add a new policy it will",
    "start": "1537559",
    "end": "1543600"
  },
  {
    "text": "propagate very quickly across the system and be enforced and so none of these decisions are",
    "start": "1543600",
    "end": "1548760"
  },
  {
    "text": "final and in order to make this API call this principle has to have a set of API",
    "start": "1548760",
    "end": "1554080"
  },
  {
    "text": "Keys uh issued however you issue your AWS API keys",
    "start": "1554080",
    "end": "1560240"
  },
  {
    "text": "so this is another example of a policy this is not a very realistic policy I don't expect anyone to actually use it",
    "start": "1565760",
    "end": "1571480"
  },
  {
    "text": "in production but it's an example of the kind of flexibility that the AWS policy language gives you this principle is",
    "start": "1571480",
    "end": "1578080"
  },
  {
    "text": "allowed to call one API call update certificates uh we did this because we intend for them to be able to revoke one",
    "start": "1578080",
    "end": "1584000"
  },
  {
    "text": "certificate but it's scoped you can see there's a specific resource called out there so they can only make the update",
    "start": "1584000",
    "end": "1589919"
  },
  {
    "text": "certificate call and only on that one resource if they attempt to do anything to any other certificate that call will",
    "start": "1589919",
    "end": "1595919"
  },
  {
    "text": "fail and we've added a source IP address condition they can only do it if they're coming from that Source IP address so",
    "start": "1595919",
    "end": "1602039"
  },
  {
    "text": "for example this could be your server that's watching to make sure that the thing is behaving itself and it can",
    "start": "1602039",
    "end": "1607200"
  },
  {
    "text": "revoke that one certificate it has no other privileges in the system and if the keys are stolen off your server they",
    "start": "1607200",
    "end": "1612640"
  },
  {
    "text": "can't be used anywhere else so again this this policy is not terribly useful in the real world but it's the kind of",
    "start": "1612640",
    "end": "1617760"
  },
  {
    "text": "thing that you can can express using our policy language in many cases you have humans",
    "start": "1617760",
    "end": "1624080"
  },
  {
    "start": "1621000",
    "end": "1621000"
  },
  {
    "text": "involved humans are bad at remembering keys I am bad at remembering passwords",
    "start": "1624080",
    "end": "1630200"
  },
  {
    "text": "they all wind up being the same I write them down on sticky notes maybe you're all much better at this than I am but",
    "start": "1630200",
    "end": "1636080"
  },
  {
    "text": "typically humans aren't good at this and so we like to use identity Federation as an AWS administrator I have a smart",
    "start": "1636080",
    "end": "1643399"
  },
  {
    "text": "card it's it authenticates me against our corporate directory so I can plug my smart card into my life laptop and I can",
    "start": "1643399",
    "end": "1649320"
  },
  {
    "text": "authenticate against our corporate directory the corporate directory says this is actually",
    "start": "1649320",
    "end": "1655200"
  },
  {
    "text": "Eric and the corporate directory returns to me a set of temporary AWS API keys",
    "start": "1655200",
    "end": "1660360"
  },
  {
    "text": "and then I can call into the AWS iot service this is not unique to the iot service this works across the entire AWS",
    "start": "1660360",
    "end": "1667240"
  },
  {
    "text": "platform we have customers that are doing this all the time if you're already using identity Federation with AWS it'll just work with the AWS iot",
    "start": "1667240",
    "end": "1674559"
  },
  {
    "text": "service assuming you permit it in your policies",
    "start": "1674559",
    "end": "1679640"
  },
  {
    "text": "now we need to actually move data around the whole purpose of this was to collect data from The Real World to affect",
    "start": "1679880",
    "end": "1685080"
  },
  {
    "text": "change in the real world we need to start moving that data and one of the ways you can do that",
    "start": "1685080",
    "end": "1690559"
  },
  {
    "text": "is over the AWS apis themselves and so this sample policy",
    "start": "1690559",
    "end": "1697159"
  },
  {
    "text": "allows me to call in and get the thing Shadow for a thing named my thing again",
    "start": "1697159",
    "end": "1702720"
  },
  {
    "text": "we're creative at naming it also allows me to call publish on this special topic",
    "start": "1702720",
    "end": "1708640"
  },
  {
    "text": "and this is a magic topic the dollar sign AWS things is mapped by the service to the",
    "start": "1708640",
    "end": "1715279"
  },
  {
    "text": "things Shadow so by giving this policy to a principle I've allowed them to get in put to the things Shadow so now I can",
    "start": "1715279",
    "end": "1722840"
  },
  {
    "text": "interact with my thing and one of the interesting uh one of the interesting",
    "start": "1722840",
    "end": "1729919"
  },
  {
    "text": "capabilities that we've got is we have a mobile identity service called Cognito Cognito offers mobile identity",
    "start": "1729919",
    "end": "1736760"
  },
  {
    "text": "management and data synchronization for those mobile users so a mobile",
    "start": "1736760",
    "end": "1741840"
  },
  {
    "text": "application can authenticate against Cognito Cognito can give them a set of",
    "start": "1741840",
    "end": "1747000"
  },
  {
    "text": "temporary AWS API keys and then they can call into the service and the reason that this is a",
    "start": "1747000",
    "end": "1753880"
  },
  {
    "text": "safe thing to do is that we have these special policy variables the the highlighted yellow",
    "start": "1753880",
    "end": "1760240"
  },
  {
    "text": "stuff the Cognito identity that gets substituted by the Cognito service for",
    "start": "1760240",
    "end": "1765279"
  },
  {
    "text": "the authenticated user ID so I set the this one policy once and when I log in I get access to",
    "start": "1765279",
    "end": "1772720"
  },
  {
    "text": "my thing and when Alex logs in Alex gets access to his thing and this applies to",
    "start": "1772720",
    "end": "1777799"
  },
  {
    "text": "all of your users so it's one policy you don't have to own a directory Cognito manages everything here and so one you",
    "start": "1777799",
    "end": "1784919"
  },
  {
    "text": "can use mobile devices as things my phone is packed full of sensors I can",
    "start": "1784919",
    "end": "1790279"
  },
  {
    "text": "turn it into one of the devices in the AWS iot ecosystem and two you can build",
    "start": "1790279",
    "end": "1796600"
  },
  {
    "text": "iot enabled applications and all of the boxes on this chart are owned by AWS none of them are owned by",
    "start": "1796600",
    "end": "1802799"
  },
  {
    "text": "the application developer they own the policy they own the the rules but they don't have to run any",
    "start": "1802799",
    "end": "1809759"
  },
  {
    "start": "1810000",
    "end": "1810000"
  },
  {
    "text": "infrastructure for mqtt we have a similar story remember inside the service we've",
    "start": "1811080",
    "end": "1818600"
  },
  {
    "text": "got the device shadows and the device Shadows have ARs they're first order",
    "start": "1818600",
    "end": "1823720"
  },
  {
    "text": "members of the AWS ecosystem so we can hang policy off of them so here's a sample policy attached to a device",
    "start": "1823720",
    "end": "1831320"
  },
  {
    "text": "Shadow it allows it to publish to a couple of topics it's not a very exciting policy but now we've got a",
    "start": "1831320",
    "end": "1837919"
  },
  {
    "text": "thing that's connected to the service and it's authorized to feed data in which is what we were trying to accomplish a richer example is this",
    "start": "1837919",
    "end": "1845399"
  },
  {
    "text": "policy here um this is basically the same policy that we just applied to that I am",
    "start": "1845399",
    "end": "1852000"
  },
  {
    "text": "user but it's mqtt it's Pub sub it's not get things shadow but it's exactly the",
    "start": "1852000",
    "end": "1858960"
  },
  {
    "text": "same set of uh privileges I can get and put to the shadow for the thing named my",
    "start": "1858960",
    "end": "1864799"
  },
  {
    "text": "thing to actually accomplish this in the the CLI we put the policy in a flat file",
    "start": "1864799",
    "end": "1870960"
  },
  {
    "text": "use your favorite editor um hardcore people use cat and control",
    "start": "1870960",
    "end": "1876880"
  },
  {
    "text": "D then we create a policy this is a call into the iot service it basically just",
    "start": "1878080",
    "end": "1883840"
  },
  {
    "text": "uploads the policy document and Associates a name with it and again being the Creator of people that we are we named it my thing",
    "start": "1883840",
    "end": "1890720"
  },
  {
    "text": "policy and we get back of response and it actually includes the entire policy document in the response which is quite",
    "start": "1890720",
    "end": "1895880"
  },
  {
    "text": "long so I all lighted it um but it's got the name and the Ron for my thing policy and then we attach that policy to",
    "start": "1895880",
    "end": "1904279"
  },
  {
    "text": "the certificate associated with that thing and so we have just done exactly",
    "start": "1904279",
    "end": "1909399"
  },
  {
    "text": "the same thing that we did earlier we have a policy we attach it to an IM am user we have a policy we attach it to a thing Shadow and so we can constrict we",
    "start": "1909399",
    "end": "1916919"
  },
  {
    "text": "can constrain What actors in the system can do all using the same AWS policy language all",
    "start": "1916919",
    "end": "1922960"
  },
  {
    "text": "using the same access controll Primitives and so to the extent that we can we've converged these two protocols",
    "start": "1922960",
    "end": "1930039"
  },
  {
    "start": "1926000",
    "end": "1926000"
  },
  {
    "text": "mqtt and HTTP are different the way clients authenticate is different but",
    "start": "1930039",
    "end": "1936039"
  },
  {
    "text": "they have to be different because the whole point of doing this was to support mqtt everything else about this is the",
    "start": "1936039",
    "end": "1941639"
  },
  {
    "text": "same and so it allows you to swap between protocols it allows you to change your mind about how your think",
    "start": "1941639",
    "end": "1948000"
  },
  {
    "text": "are going to communicate with the ecosystem and the changes don't Ripple throughout the entire",
    "start": "1948000",
    "end": "1954398"
  },
  {
    "text": "installation so we have this rules engine we have the ability for AWS iot",
    "start": "1954639",
    "end": "1959840"
  },
  {
    "text": "to talk to other AWS services on your",
    "start": "1959840",
    "end": "1963799"
  },
  {
    "start": "1965000",
    "end": "1965000"
  },
  {
    "text": "behalf these green arrows that we've not yet discussed um so with these rules and",
    "start": "1965240",
    "end": "1970760"
  },
  {
    "text": "aggregation you can do all sorts of clever things you can say any temperatures that are in excess of 90° get averaged and get pushed into this",
    "start": "1970760",
    "end": "1977360"
  },
  {
    "text": "Kines system stream or or something like that um you can automatically publish new data to Dynamo DB process it using",
    "start": "1977360",
    "end": "1983639"
  },
  {
    "text": "Lambda like you can stack this together however you want and because this is part of the AWS ecosystem we can use the",
    "start": "1983639",
    "end": "1990720"
  },
  {
    "text": "same mechanisms that we use elsewhere in AWS to restrict this access you want the AWS iot service to be able to act on",
    "start": "1990720",
    "end": "1998279"
  },
  {
    "text": "your behalf within the bounds of the rights that you want to give it you want it to be publishing data to your thing",
    "start": "1998279",
    "end": "2004159"
  },
  {
    "text": "table you don't want it to be publishing data to your inventory tracking table and so in order to do this we need to",
    "start": "2004159",
    "end": "2010240"
  },
  {
    "text": "create a role an I am role this is a standard AWS concept and it's used",
    "start": "2010240",
    "end": "2015360"
  },
  {
    "text": "broadly across the platform the first thing we need is a ro trust policy there's going to be two policies",
    "start": "2015360",
    "end": "2021600"
  },
  {
    "start": "2016000",
    "end": "2016000"
  },
  {
    "text": "involved here the first one is all about who can assume the role so this policy",
    "start": "2021600",
    "end": "2027480"
  },
  {
    "text": "here says that the iot service can assume the",
    "start": "2027480",
    "end": "2033000"
  },
  {
    "text": "role we create the role at the AWS service we pass in the the name we want",
    "start": "2033679",
    "end": "2039639"
  },
  {
    "text": "which again creatively is thing actions role and we pass in that role policy document and so this creates a role the",
    "start": "2039639",
    "end": "2046200"
  },
  {
    "text": "role has no privileges at this point it can't do anything but the iot service can assume that role and act on your",
    "start": "2046200",
    "end": "2052398"
  },
  {
    "text": "behalf the next thing we need is a policy for the role an action policy and",
    "start": "2052399",
    "end": "2058480"
  },
  {
    "text": "in this case I've given whoever can assume this role the access to put or",
    "start": "2058480",
    "end": "2064079"
  },
  {
    "text": "update items in one Dynamo DB table so it's very constrainted access it's surgical access to my Dynamo DB",
    "start": "2064079",
    "end": "2071720"
  },
  {
    "text": "table I create that policy and then I attach that policy to the",
    "start": "2071720",
    "end": "2077158"
  },
  {
    "text": "role so you've got the role trust policy who can assume the role you create the role you create the policy that you want",
    "start": "2077159",
    "end": "2084440"
  },
  {
    "text": "the the role to be able to to perform and you associate that with the role and so the net result here is that the AWS",
    "start": "2084440",
    "end": "2090878"
  },
  {
    "text": "iot service can put an update in exactly one Dynamo DB table which is exactly the level of access you wanted and and if",
    "start": "2090879",
    "end": "2098240"
  },
  {
    "text": "you've used these mechanisms elsewhere in the AWS platform it's exactly the",
    "start": "2098240",
    "end": "2103920"
  },
  {
    "text": "same so now that we've got all of this how do",
    "start": "2103960",
    "end": "2109400"
  },
  {
    "text": "we actually use it how do we how do we make devices functional devices that we",
    "start": "2109400",
    "end": "2114599"
  },
  {
    "text": "we can sell to end users and I've got two scenarios here to go through the",
    "start": "2114599",
    "end": "2120320"
  },
  {
    "text": "first is an industrial device um which for the sake of the example has a hardware key store on it that's burned",
    "start": "2120320",
    "end": "2126119"
  },
  {
    "text": "in at the factory and it's sold to the end user explicitly as an AWS enabled device so they're buying it specifically",
    "start": "2126119",
    "end": "2133200"
  },
  {
    "text": "because it works with AWS iot and in order for that to be true it needs to have a key pair it needs to",
    "start": "2133200",
    "end": "2138960"
  },
  {
    "start": "2136000",
    "end": "2136000"
  },
  {
    "text": "have a certificate it needs to be bound to some application so the first person to touch",
    "start": "2138960",
    "end": "2144240"
  },
  {
    "text": "this device is the manufacturer they're going to make a system on chip and this device has a Hardware Key story so part",
    "start": "2144240",
    "end": "2150800"
  },
  {
    "text": "of the manufacturing process is that a key gets burned into that device that that that key cannot be",
    "start": "2150800",
    "end": "2156720"
  },
  {
    "text": "extracted cannot be rotated it's an inherent part of that system on chip this s so is sold to a vendor and",
    "start": "2156720",
    "end": "2164240"
  },
  {
    "text": "the vendor integrates it into whatever actuator control meter monitor that they're",
    "start": "2164240",
    "end": "2170800"
  },
  {
    "text": "building and then they sell that to the end user so at this point the end user has a device it's got a key in IT key",
    "start": "2171240",
    "end": "2178319"
  },
  {
    "text": "that was placed there by the manufacturer you can see the yellow border tracking it through its life but",
    "start": "2178319",
    "end": "2183640"
  },
  {
    "text": "it's not useful yet so because this device device has a hardware key store the private key can't",
    "start": "2183640",
    "end": "2190040"
  },
  {
    "text": "be extracted the new owner of this device is going to call create certificate from CSR after generating a",
    "start": "2190040",
    "end": "2195560"
  },
  {
    "text": "CSR they're going to install the certificate on the thing and so now we've got a certificate the key was",
    "start": "2195560",
    "end": "2201599"
  },
  {
    "text": "placed there by the manufacturer but the certificate is owned by the end user and then they can configure it with",
    "start": "2201599",
    "end": "2207240"
  },
  {
    "text": "their application and it can become a a healthy productive member of their Factory or assembly line or wind turbine",
    "start": "2207240",
    "end": "2212640"
  },
  {
    "text": "or whatever its purpose in life is the other example and I'm using a",
    "start": "2212640",
    "end": "2219400"
  },
  {
    "start": "2217000",
    "end": "2217000"
  },
  {
    "text": "thermostat here because I happen to have thermostat clip art but this could be a light bulb a vacuum cleaner apparently a",
    "start": "2219400",
    "end": "2225400"
  },
  {
    "text": "toothbrush like I still can't get over that one a scale um whatever consumer",
    "start": "2225400",
    "end": "2231160"
  },
  {
    "text": "device that you have and it's going to be controlled by a mobile application and it's sold to the end",
    "start": "2231160",
    "end": "2237280"
  },
  {
    "text": "user as an internet enabled device not an AWS enabled device the end user doesn't necessarily have an AWS account",
    "start": "2237280",
    "end": "2243319"
  },
  {
    "text": "AWS is just Plumbing here it's helping the manufacturer of the device do use use ful things but it's not explicit to",
    "start": "2243319",
    "end": "2250160"
  },
  {
    "text": "the end user so again in order to make this real we need a key pair a certificate and an",
    "start": "2250160",
    "end": "2258280"
  },
  {
    "text": "application this device does not have a hardware key store the manufacturer doesn't do anything cryptographic here",
    "start": "2258280",
    "end": "2263680"
  },
  {
    "text": "they make a system on chip and they pass it along to the vendor the vendor just to make the",
    "start": "2263680",
    "end": "2270960"
  },
  {
    "text": "example interesting uses create keys and certificate the other method we have for provisioning certificates onto devices",
    "start": "2270960",
    "end": "2276800"
  },
  {
    "text": "they install the private key and the certificate as part of the the thermostat manufacturing",
    "start": "2276800",
    "end": "2283160"
  },
  {
    "text": "process and so now we've got a vendor owned key and certificate located on",
    "start": "2283160",
    "end": "2288960"
  },
  {
    "text": "this device and now we can sell it to someone she takes it home she gets out",
    "start": "2288960",
    "end": "2296040"
  },
  {
    "text": "her phone and now she's got to make this her",
    "start": "2296040",
    "end": "2301680"
  },
  {
    "start": "2297000",
    "end": "2297000"
  },
  {
    "text": "thermostat so the first thing to do is to get the device on the network this can be done in many different ways you",
    "start": "2302160",
    "end": "2309119"
  },
  {
    "text": "type in the Wi-Fi password on the device or you use an app on your phone over Bluetooth or Ultrasonics this is this is",
    "start": "2309119",
    "end": "2315920"
  },
  {
    "text": "a well-studied problem and it depends on the use of the device but you get it on the network somehow and it's already got",
    "start": "2315920",
    "end": "2322359"
  },
  {
    "text": "a certificate on it it's already got a key pair on it so it's going to immediately start talking to that",
    "start": "2322359",
    "end": "2327640"
  },
  {
    "text": "vendor's AWS account it's already a part of the AWS iot",
    "start": "2327640",
    "end": "2332839"
  },
  {
    "text": "ecosystem now the mobile app is going to try and log in to the AWS thermostat",
    "start": "2332839",
    "end": "2339440"
  },
  {
    "text": "service we have no idea who they are so we're going to punt them we're going to say you need to go to Cognito and log",
    "start": "2339440",
    "end": "2344760"
  },
  {
    "text": "in so the mobile app goes to Cognito they authenticate if they need to be walked",
    "start": "2344760",
    "end": "2350119"
  },
  {
    "text": "through the new account creation process that's where this would happen Cognito does uh data storage for users so any",
    "start": "2350119",
    "end": "2356920"
  },
  {
    "text": "customizations that this user has or creates will be stored in cognito so when the app comes it authenticates to",
    "start": "2356920",
    "end": "2362920"
  },
  {
    "text": "Cognito it gets back an identity and proof of that identity it also gets back whatever customizations",
    "start": "2362920",
    "end": "2370400"
  },
  {
    "text": "exist they go back they get redirected back to the thermostat service",
    "start": "2370400",
    "end": "2376040"
  },
  {
    "text": "thermostat service knows now that they are authenticated they they've got a Cognito identity and so it's going to",
    "start": "2376040",
    "end": "2382119"
  },
  {
    "text": "call into the AWS iot service and it's going to set a policy I drew the arrow here because I needed the room on the",
    "start": "2382119",
    "end": "2387599"
  },
  {
    "text": "slide uh against the thing itself it's actually going to apply it to the device Shadow for the",
    "start": "2387599",
    "end": "2393240"
  },
  {
    "text": "thermostat and it's going to say that this thing this device is allowed to publish to the shadow for this one topic",
    "start": "2393240",
    "end": "2401480"
  },
  {
    "text": "name and I've got this percent Cognito ID percent uh uh syntax in there that's",
    "start": "2401480",
    "end": "2407560"
  },
  {
    "text": "not actually valid in AWS policy language what I mean there is you just got back an identity a Cognito ID it's a",
    "start": "2407560",
    "end": "2413640"
  },
  {
    "text": "10 character string from the Cognito service you replace that in this policy",
    "start": "2413640",
    "end": "2418839"
  },
  {
    "text": "so you're basically saying this is her thermostat then in the future when this",
    "start": "2418839",
    "end": "2426680"
  },
  {
    "text": "user shows up up they authenticate against Cognito they get a set of temporary AWS API keys and they can talk",
    "start": "2426680",
    "end": "2434359"
  },
  {
    "text": "directly to the AWS iot service none of your infrastructure has to be involved at this point and again the reason",
    "start": "2434359",
    "end": "2441000"
  },
  {
    "text": "that's safe is because when the user connects we can use policy variables and we can substitute in their Cognito",
    "start": "2441000",
    "end": "2446960"
  },
  {
    "text": "identity and so you've told the thing you're allowed to talk about this one",
    "start": "2446960",
    "end": "2452040"
  },
  {
    "text": "thermostat and you told the Cognito user you're allowed to talk about this one thermostat so you're good to go now this",
    "start": "2452040",
    "end": "2458640"
  },
  {
    "text": "user can log in cognito hands them any customizations any preferences they've got they talk directly to the iot",
    "start": "2458640",
    "end": "2464359"
  },
  {
    "text": "service they can find out what the temperature is they can set a new temperature change schedules like whatever it is that this thing is",
    "start": "2464359",
    "end": "2470000"
  },
  {
    "text": "supposed to do and so after we've gone through this claiming dance we wind up with a device",
    "start": "2470000",
    "end": "2476440"
  },
  {
    "text": "that's fully provisioned it's got a key pair and a certificate that are owned by the the vender the manufacturer of the",
    "start": "2476440",
    "end": "2482560"
  },
  {
    "text": "the finished device and it's bound to the application owned by the end user",
    "start": "2482560",
    "end": "2487640"
  },
  {
    "text": "and these are two paths through a very uh broad Space full of a lot of options",
    "start": "2487640",
    "end": "2493440"
  },
  {
    "text": "they're just two examples of ways that you can use this service to support",
    "start": "2493440",
    "end": "2498560"
  },
  {
    "text": "different business models to support different methods so depending on the capabilities of the system on chip of",
    "start": "2498560",
    "end": "2504760"
  },
  {
    "text": "the device itself depending on the business model you have whether you're explicitly selling something as AWS",
    "start": "2504760",
    "end": "2510040"
  },
  {
    "text": "enabled or it's an end user device and you don't want to you don't want to expose the use of AWS to that person",
    "start": "2510040",
    "end": "2515560"
  },
  {
    "text": "like I don't care that my thermostat uses AWS or whatever I care that the app is awesome and that I know what",
    "start": "2515560",
    "end": "2521000"
  },
  {
    "text": "temperature it is uh we can support both of those so the agenda that we opened",
    "start": "2521000",
    "end": "2529800"
  },
  {
    "text": "with had uh six lines here really Five Points I think we've hit them all um we",
    "start": "2529800",
    "end": "2537640"
  },
  {
    "text": "need to make sure that we are only talking to the things that we should be talking",
    "start": "2537640",
    "end": "2543400"
  },
  {
    "text": "to we need to make sure that the things that we're talking to are the things we think they are we have two methods for",
    "start": "2543400",
    "end": "2549720"
  },
  {
    "text": "doing that two protocols for securely deploying certificates onto devices and then we have flexible",
    "start": "2549720",
    "end": "2557000"
  },
  {
    "start": "2555000",
    "end": "2555000"
  },
  {
    "text": "consistent access control so using the AWS policy language you can control what",
    "start": "2557000",
    "end": "2562119"
  },
  {
    "text": "the users whether they're servers or applications or humans can do at the AWS API endpoint um both for managing the",
    "start": "2562119",
    "end": "2570200"
  },
  {
    "text": "service and for managing accessing data within the service uh including mobile clients identity Federated clients",
    "start": "2570200",
    "end": "2576559"
  },
  {
    "text": "things like that uh We've described how you can restrict access over the secure mqtt protocol",
    "start": "2576559",
    "end": "2584119"
  },
  {
    "text": "that we have and limit what your devices can do in the in the system and it's",
    "start": "2584119",
    "end": "2589720"
  },
  {
    "text": "exactly the same policy language it's exactly the same flexibility we've also talked about how",
    "start": "2589720",
    "end": "2595839"
  },
  {
    "text": "you can use iot uh AWS to to Grant iot very precise very controlled access to",
    "start": "2595839",
    "end": "2602880"
  },
  {
    "text": "your AWS resources so it can take action on your behalf it's the same policy language across the board and the the",
    "start": "2602880",
    "end": "2611880"
  },
  {
    "text": "the cool thing about this is that it's it's a collection of building blocks they can be stacked in many different",
    "start": "2611880",
    "end": "2617359"
  },
  {
    "text": "ways and so you could feel the devices yourself collect the data feed it into a",
    "start": "2617359",
    "end": "2622520"
  },
  {
    "text": "Kinesis stream and sell access to that data that's a business model that could be built using AWS you can build things",
    "start": "2622520",
    "end": "2629440"
  },
  {
    "text": "that are AWS enabled they're ready to go out of the box like our industrial example you can build consumer devices",
    "start": "2629440",
    "end": "2635440"
  },
  {
    "text": "um multi-tenant application where they're your things but you decide dynamically who gets access to which",
    "start": "2635440",
    "end": "2642040"
  },
  {
    "text": "things um some interesting Capture the Flag kinds of applications that you could build there and in many cases you",
    "start": "2642040",
    "end": "2648119"
  },
  {
    "text": "can build all of this without owning any infrastructure without having to have any persistent infrastructure online",
    "start": "2648119",
    "end": "2654160"
  },
  {
    "text": "it's all done by awo services so there a whole bunch of other sessions on iot if uh you have any",
    "start": "2654160",
    "end": "2661640"
  },
  {
    "text": "interest you should absolutely check them out thank you for the time and I will be",
    "start": "2661640",
    "end": "2667640"
  },
  {
    "text": "beaten if I do not remind you to fill out your evaluations we value your feedback a lot we'd like to know how we",
    "start": "2667640",
    "end": "2673440"
  },
  {
    "text": "did both here at the conference and with AWS in general thank you",
    "start": "2673440",
    "end": "2679720"
  }
]