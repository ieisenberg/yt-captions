[
  {
    "start": "0",
    "end": "173000"
  },
  {
    "text": "hello everyone welcome to the Aurora for enterprise session thank you for taking",
    "start": "2540",
    "end": "10590"
  },
  {
    "text": "a five-floor track to get all the way here we just wanted you to have have a",
    "start": "10590",
    "end": "16500"
  },
  {
    "text": "look from the top of how our or Alex everybody's having a good time at",
    "start": "16500",
    "end": "22410"
  },
  {
    "text": "Raymond so far it's just so before we",
    "start": "22410",
    "end": "28740"
  },
  {
    "text": "start talking this a show of hands how many of you have are already using Aurora for preview or after one secret",
    "start": "28740",
    "end": "35850"
  },
  {
    "text": "eh excellent and how many of you are from enterprises or companies that are",
    "start": "35850",
    "end": "42480"
  },
  {
    "text": "currently using Oracle as the main database sequel server my sequel you're",
    "start": "42480",
    "end": "50910"
  },
  {
    "text": "on the right place my name is abdul",
    "start": "50910",
    "end": "56760"
  },
  {
    "text": "Sattar said the product marketing manager for Amazon RDS and I have it me",
    "start": "56760",
    "end": "64588"
  },
  {
    "text": "GM for Aurora and my sequel d'banj and Saha and Robin Williams sorry Owen",
    "start": "64589",
    "end": "72030"
  },
  {
    "text": "Matthews from experience our esteemed customer so we thought you know",
    "start": "72030",
    "end": "80820"
  },
  {
    "text": "everything we do here Amazon is for you we start with you and with you we start",
    "start": "80820",
    "end": "86670"
  },
  {
    "text": "with figuring out what exactly is that you need what are your pain points what is the stuff that you would like to see",
    "start": "86670",
    "end": "92450"
  },
  {
    "text": "see us do and then geared towards it so we thought it's important that we have a",
    "start": "92450",
    "end": "98850"
  },
  {
    "text": "speaker from our customers to tell the story of how exactly they are using Aurora and what they are seeing though",
    "start": "98850",
    "end": "106680"
  },
  {
    "text": "I'm product marketing manager I'm quite a technical guy for I've worked on enterprise databases and",
    "start": "106680",
    "end": "113499"
  },
  {
    "text": "enterprise applications for 23 years and that time I have really developed a",
    "start": "113499",
    "end": "119229"
  },
  {
    "text": "great appreciation for the role of database in the enterprise in the",
    "start": "119229",
    "end": "125890"
  },
  {
    "text": "enterprise IT landscape I don't think there is anything else as critical as the database your applications can go",
    "start": "125890",
    "end": "132849"
  },
  {
    "text": "down come up they can you know be switched out swapped out your servers can be changed but your database cannot",
    "start": "132849",
    "end": "140260"
  },
  {
    "text": "be violated the database cannot go down because there are so many applications that are dependent on it there is so",
    "start": "140260",
    "end": "147459"
  },
  {
    "text": "much critical data related in your business that is residing in it so when",
    "start": "147459",
    "end": "153069"
  },
  {
    "text": "when we got on to building a database that's at enterprise class you looked at",
    "start": "153069",
    "end": "159400"
  },
  {
    "text": "it with all the seriousness of how it should perform what it should be able to",
    "start": "159400",
    "end": "164980"
  },
  {
    "text": "do and what shouldn't happen to it so if you think about the the pain points of",
    "start": "164980",
    "end": "171040"
  },
  {
    "text": "any enterprise when it comes to database it can be basically summarized in these",
    "start": "171040",
    "end": "176440"
  },
  {
    "start": "173000",
    "end": "173000"
  },
  {
    "text": "four points what basically an enterprise needs and wants and wishes for is a",
    "start": "176440",
    "end": "182709"
  },
  {
    "text": "database that is extremely highly available that actually kind of like stays up no matter what because there's",
    "start": "182709",
    "end": "190180"
  },
  {
    "text": "so so much running on it so much depends on and can performs consistently and",
    "start": "190180",
    "end": "195970"
  },
  {
    "text": "then the the the performance of the database a lot of times depends on your workload so you want the performance of",
    "start": "195970",
    "end": "202120"
  },
  {
    "text": "the database to adjust according to the workload because if you take any business whether it is a retail business",
    "start": "202120",
    "end": "208870"
  },
  {
    "text": "or an accounting business or a service business the usage patterns for the",
    "start": "208870",
    "end": "214299"
  },
  {
    "text": "database is not the same they vary quite a bit you know based on the seasons based on",
    "start": "214299",
    "end": "219370"
  },
  {
    "text": "what you are doing with it so you want the database performance to remain consistent no matter what you throw it",
    "start": "219370",
    "end": "225459"
  },
  {
    "text": "and then this is not a reality but this is something that a lot of enterprise",
    "start": "225459",
    "end": "231280"
  },
  {
    "text": "wish for that you want a database that doesn't need an army of experts to maintain and manage and patch and tune",
    "start": "231280",
    "end": "239139"
  },
  {
    "text": "and take care of right in a way it's kind of like similar to an automobile if you think about how",
    "start": "239139",
    "end": "246560"
  },
  {
    "text": "automobiles were 60 years ago so I think a lot of people in this room are quite",
    "start": "246560",
    "end": "251780"
  },
  {
    "text": "young so probably you haven't seen all those automobiles where you have to clean the carburetor and you know",
    "start": "251780",
    "end": "259329"
  },
  {
    "text": "maintain your clutch & gear and whatnot so if you if you look at the 1930s car",
    "start": "259329",
    "end": "266510"
  },
  {
    "text": "it's it's pretty interesting you know it's a it's a nice to have as a collectible item but I would really like",
    "start": "266510",
    "end": "272990"
  },
  {
    "text": "to drive something a lot more sophisticated under the hood for my long-distance dry or or the commute to",
    "start": "272990",
    "end": "279890"
  },
  {
    "text": "the to work right I don't want to depend on something that was designed and built a long time ago and when it comes to",
    "start": "279890",
    "end": "288680"
  },
  {
    "text": "cost that is a major pain point a lot of customers have and comes to database",
    "start": "288680",
    "end": "293930"
  },
  {
    "text": "databases are very expensive as especially enterprise-class databases are very expensive and as the hardware",
    "start": "293930",
    "end": "301030"
  },
  {
    "text": "that's underneath changes most of the database vendors come up with new ways to charge the customers it used to be",
    "start": "301030",
    "end": "308870"
  },
  {
    "text": "based on you know power units ease then it used to be based on number of users",
    "start": "308870",
    "end": "315169"
  },
  {
    "text": "then number of cores plus users sometimes number of cores lot of different things",
    "start": "315169",
    "end": "320800"
  },
  {
    "text": "so when we looked at it if you figured out you know this the the databases that",
    "start": "320800",
    "end": "326330"
  },
  {
    "text": "are in existence today do a great job a lot of them have the features and",
    "start": "326330",
    "end": "334190"
  },
  {
    "text": "capabilities that enterprises need but they are not implemented in a very",
    "start": "334190",
    "end": "340970"
  },
  {
    "text": "modern way so we decided we should probably go back to the drawing boards",
    "start": "340970",
    "end": "346760"
  },
  {
    "text": "take another look at it and see how we can design and build something for you",
    "start": "346760",
    "end": "352250"
  },
  {
    "text": "that kind of like stays from the outside it actually gives you the same",
    "start": "352250",
    "end": "357380"
  },
  {
    "text": "functionality as you have today but fulfills all these things that I told you about all these wishes that you have",
    "start": "357380",
    "end": "365500"
  },
  {
    "text": "so we build Aurora t1 back a lot of this actually a lot of stuff that you see in",
    "start": "365500",
    "end": "371780"
  },
  {
    "text": "Aurora is made possible because of the fact that it's a managed database so if it is something that",
    "start": "371780",
    "end": "379010"
  },
  {
    "text": "where somebody builds has just software and gives it to you where you go and implement many of these things couldn't",
    "start": "379010",
    "end": "384920"
  },
  {
    "text": "be done so because this is a managed database there are we have we can do a lot of things that cannot be done on",
    "start": "384920",
    "end": "391820"
  },
  {
    "text": "Prem or on your data in your data center so this is a database with real",
    "start": "391820",
    "end": "397520"
  },
  {
    "text": "enterprise class availability and performance and no licenses for you to",
    "start": "397520",
    "end": "402770"
  },
  {
    "text": "worry about so like I mentioned previously that's one of the major pain points for customers right you are",
    "start": "402770",
    "end": "409010"
  },
  {
    "text": "locked in to a specific number of licenses you have licenses for 10 sockets or you know 300 processors",
    "start": "409010",
    "end": "415490"
  },
  {
    "text": "that's all you can use and you have already paid for it whether you use it or not for many enterprises whether you are in",
    "start": "415490",
    "end": "423680"
  },
  {
    "text": "travel business or you are in retail business or service business whatever else your month and closing for your",
    "start": "423680",
    "end": "431060"
  },
  {
    "text": "financial books and and probably bi-weekly or monthly processing of",
    "start": "431060",
    "end": "436460"
  },
  {
    "text": "payroll put so much at axis the data is so much you are going to need a lot of",
    "start": "436460",
    "end": "441680"
  },
  {
    "text": "database performance at that time and unfortunately because of the kind of licensing you're bought into there's no",
    "start": "441680",
    "end": "447710"
  },
  {
    "text": "way you actually scale up your database because the hundred licenses that you have for the database that's all 100",
    "start": "447710",
    "end": "453800"
  },
  {
    "text": "that you can use so here we actually took away all that pain there are no licenses for you to worry about and in",
    "start": "453800",
    "end": "461390"
  },
  {
    "text": "addition to that the wrote total cost of the database with the same performance as an enterprise class database is 1/10",
    "start": "461390",
    "end": "469700"
  },
  {
    "text": "of the cost of an enterprise class database so I think all these things",
    "start": "469700",
    "end": "475850"
  },
  {
    "start": "472000",
    "end": "472000"
  },
  {
    "text": "together make Arora an excellent fit to be used in the enterprise for various",
    "start": "475850",
    "end": "482780"
  },
  {
    "text": "different applications that you use some lot of enterprises have many custom data",
    "start": "482780",
    "end": "490160"
  },
  {
    "text": "obligation home built in home to service the needs of the business all these are",
    "start": "490160",
    "end": "496310"
  },
  {
    "text": "an excellent fit for Arora there are a lot of my sequel compatible",
    "start": "496310",
    "end": "501550"
  },
  {
    "text": "off-the-shelf applications which are again a perfect fit for Arora there are",
    "start": "501550",
    "end": "507540"
  },
  {
    "text": "applications that are built for built specifically and supported only on specific proprietary databases like",
    "start": "507540",
    "end": "515729"
  },
  {
    "text": "Oracle and a sequel server many of them build slowly and slowly and start",
    "start": "515729",
    "end": "522000"
  },
  {
    "text": "supporting Aurora as well so this will be a good time for you to actually start you know contemplating how to actually",
    "start": "522000",
    "end": "528450"
  },
  {
    "text": "move them to Aurora some of the things that we implemented in Aurora for",
    "start": "528450",
    "end": "533940"
  },
  {
    "text": "availability and performance is six where application at the the storage",
    "start": "533940",
    "end": "539820"
  },
  {
    "text": "level so we have six replicas of the data that is got automatically happens",
    "start": "539820",
    "end": "546510"
  },
  {
    "text": "without you having to do anything think about how much pain is involved in setting this up with a proprietary later",
    "start": "546510",
    "end": "553950"
  },
  {
    "text": "it's possible to do with Oracle or sequel server or any of these other databases that you can buy but it needs",
    "start": "553950",
    "end": "560250"
  },
  {
    "text": "a lot of work a lot of expertise and a lot of maintenance here you go",
    "start": "560250",
    "end": "565260"
  },
  {
    "text": "do a bunch of clicks all this becomes available to you and when you do those clicks under the hood there's a lot of",
    "start": "565260",
    "end": "572160"
  },
  {
    "text": "stuff that's happening which is happening automatically because it's a",
    "start": "572160",
    "end": "577320"
  },
  {
    "text": "managed service just like many of you",
    "start": "577320",
    "end": "583680"
  },
  {
    "start": "580000",
    "end": "580000"
  },
  {
    "text": "who raised your hands who are using your over are today or or tried it out in preview you can see a lot of customers",
    "start": "583680",
    "end": "589320"
  },
  {
    "text": "has already started moving to Aurora so this is just a small sample of the customer so I have started using Aurora",
    "start": "589320",
    "end": "595560"
  },
  {
    "text": "so already I can see some of the big names including our France company here",
    "start": "595560",
    "end": "600840"
  },
  {
    "text": "Expedia the G or and Gas Pacific Gas and",
    "start": "600840",
    "end": "607080"
  },
  {
    "text": "Electric is using Amazon Aurora from some really mission critical workloads",
    "start": "607080",
    "end": "612590"
  },
  {
    "text": "probably some of you might have attended a session by alfresco today who's actually done a hold on you are testing",
    "start": "612590",
    "end": "620400"
  },
  {
    "text": "with Aurora on a database that's serving a billion documents for their CMS with",
    "start": "620400",
    "end": "628140"
  },
  {
    "text": "three million injections per second that's that's um you know mind-boggling",
    "start": "628140",
    "end": "634770"
  },
  {
    "text": "numbers now when it comes to setting up",
    "start": "634770",
    "end": "639870"
  },
  {
    "text": "high availability or scalability or you know fault tolerance",
    "start": "639870",
    "end": "644949"
  },
  {
    "text": "in commercial databases as I mentioned previously there are there's a lot of",
    "start": "644949",
    "end": "650829"
  },
  {
    "text": "stuff that you need to do if you go to bookstores or amazon.com you can see you",
    "start": "650829",
    "end": "656019"
  },
  {
    "text": "know tons and tons of books written on the best practices for setting up high",
    "start": "656019",
    "end": "662079"
  },
  {
    "text": "availability for sequel server or best practices for implementing enterprise",
    "start": "662079",
    "end": "668680"
  },
  {
    "text": "class Oracle when it comes to doing the same thing on Aurora I would think it'll",
    "start": "668680",
    "end": "673810"
  },
  {
    "text": "be just a couple of pages the first page would probably read like launch Aurora",
    "start": "673810",
    "end": "679600"
  },
  {
    "text": "with three clicks because we are taking care of all those best practices for you",
    "start": "679600",
    "end": "685110"
  },
  {
    "text": "now to tell you more about what happens when you do those couple of clicks to",
    "start": "685110",
    "end": "690790"
  },
  {
    "text": "launch in Aurora just the abundance",
    "start": "690790",
    "end": "695639"
  },
  {
    "text": "okay so you know I'm going to talk about how we achieve or what kind of",
    "start": "702360",
    "end": "708760"
  },
  {
    "text": "availability performance ease of use cost differentials that you have compared to commercial databases but",
    "start": "708760",
    "end": "715569"
  },
  {
    "text": "before I do that let me give little bit of a context in terms of the design",
    "start": "715569",
    "end": "722139"
  },
  {
    "text": "philosophy behind Aurora right if you look at the traditional databases the",
    "start": "722139",
    "end": "728110"
  },
  {
    "text": "relational databases not much has really changed in the last thirty years or so we have a monolithic stack where we have",
    "start": "728110",
    "end": "736839"
  },
  {
    "text": "sequel parsing transaction processing caching logging and then you have",
    "start": "736839",
    "end": "742690"
  },
  {
    "text": "storage and each of these essentially stayed within one machine and when he",
    "start": "742690",
    "end": "749439"
  },
  {
    "text": "created clusters he have taken the same stack and replicated that in multiple machines we haven't really done much",
    "start": "749439",
    "end": "755410"
  },
  {
    "text": "more than that so when you started thinking about Aurora so we think we started thinking",
    "start": "755410",
    "end": "761500"
  },
  {
    "text": "about what is that we can do differently in a cloud architecture right so what we",
    "start": "761500",
    "end": "766870"
  },
  {
    "text": "have in cloud we have hundreds of nodes right we can create a multi-tenant shared environment we can do massive",
    "start": "766870",
    "end": "773350"
  },
  {
    "text": "scale out take advantage of that and do something which is more fitting for a cloud",
    "start": "773350",
    "end": "778740"
  },
  {
    "text": "architecture and you know it's not completely done yet we have started doing it and what we have done first is",
    "start": "778740",
    "end": "785670"
  },
  {
    "text": "they have taken the logging and the storage layer combined them together into a scale out multi-tenant block",
    "start": "785670",
    "end": "792779"
  },
  {
    "text": "structure storage system which is purpose-built for data bases so this is not something like a nice cozy storage",
    "start": "792779",
    "end": "799709"
  },
  {
    "text": "or NFS storage or fibre channel storage that you are all used to when you run enterprise databases it's a custom build",
    "start": "799709",
    "end": "807620"
  },
  {
    "text": "shared highly distributed scale out storage which is log structured and only",
    "start": "807620",
    "end": "814410"
  },
  {
    "text": "thing we send from the database instance essentially the lead redo log records that goes from the instance to the",
    "start": "814410",
    "end": "820680"
  },
  {
    "text": "storage and we generate the data pages right at the storage layer right so that is one fundamental innovation that you",
    "start": "820680",
    "end": "827160"
  },
  {
    "text": "have the second thing that we did is that you know think of this as a",
    "start": "827160",
    "end": "832529"
  },
  {
    "text": "database service built on top of a bunch of micro services architecture Mike is micro services component so we used",
    "start": "832529",
    "end": "841130"
  },
  {
    "text": "Amazon ec2 so we don't use any specialized hardware for storage or",
    "start": "841130",
    "end": "847410"
  },
  {
    "text": "servers we use ec2 instances we use V PC for security we use dynamo DB for our",
    "start": "847410",
    "end": "854459"
  },
  {
    "text": "control plan we use simple workflow for automating some of the vanilla tasks that helps simplify database management",
    "start": "854459",
    "end": "863370"
  },
  {
    "text": "to use route 53 etc we take advantage of s3 for example a lot of you who have",
    "start": "863370",
    "end": "869189"
  },
  {
    "text": "managed databases know that you know taking backups is big painting you know we're right so in case of Aurora backup",
    "start": "869189",
    "end": "876839"
  },
  {
    "text": "is all automated so whenever we write something to storage we also send the same log record to s3 and we need to",
    "start": "876839",
    "end": "884009"
  },
  {
    "text": "recover from s3 restore from s3 that process is very simple and very accurate",
    "start": "884009",
    "end": "890490"
  },
  {
    "text": "also you can go back to pretty much any second in the past and restore your snapshot so with that introduction let",
    "start": "890490",
    "end": "897660"
  },
  {
    "text": "me talk about high availability this is something very very important for enterprise databases if your database is",
    "start": "897660",
    "end": "904139"
  },
  {
    "text": "not up and running then nothing else is important so how do we do high availability in",
    "start": "904139",
    "end": "910060"
  },
  {
    "start": "908000",
    "end": "908000"
  },
  {
    "text": "Aurora so again this is where probably the most fundamental innovation in",
    "start": "910060",
    "end": "916270"
  },
  {
    "text": "Aurora is as I said that our storage layer is a distributed scale-out storage",
    "start": "916270",
    "end": "921640"
  },
  {
    "text": "layer which is spread across three different availability zone each availability zone is really you",
    "start": "921640",
    "end": "929050"
  },
  {
    "text": "know a data center so you have a shared storage volume which is distributed",
    "start": "929050",
    "end": "934810"
  },
  {
    "text": "across three data centers and you have hundreds of nodes within that shared storage volume each running tens of SSDs",
    "start": "934810",
    "end": "941950"
  },
  {
    "text": "so you essentially have thousands of SSDs over which you are spreading your data and what we do that every data up",
    "start": "941950",
    "end": "950350"
  },
  {
    "text": "said that you have every piece of data that we have we replicate that three six",
    "start": "950350",
    "end": "955540"
  },
  {
    "text": "times across six different storage node across three different availability zone",
    "start": "955540",
    "end": "961050"
  },
  {
    "text": "that's what gives the availability that you see in Aurora and within that",
    "start": "961050",
    "end": "967000"
  },
  {
    "text": "structure our reads and writes our quorum reads and quorum lights so we",
    "start": "967000",
    "end": "972280"
  },
  {
    "text": "light six copies of the data they go to six different storage node this is for one piece of data for a different piece",
    "start": "972280",
    "end": "978760"
  },
  {
    "text": "of data it will go to another set of six different storage nodes right and as",
    "start": "978760",
    "end": "984310"
  },
  {
    "text": "soon as we get response back from four out of them we consider the data to be stable so you don't have to wait for all",
    "start": "984310",
    "end": "990460"
  },
  {
    "text": "six to respond back for reads it's three out of six read Quran that you do",
    "start": "990460",
    "end": "995860"
  },
  {
    "text": "although in most cases we know that who has the most recent data and we really don't need to do wait for three readers",
    "start": "995860",
    "end": "1005370"
  },
  {
    "text": "to give us data back in the background we are also doing peer-to-peer",
    "start": "1005370",
    "end": "1010790"
  },
  {
    "text": "replication between the storage nodes so for example if we have a storage node which is falling behind or if a storage",
    "start": "1010790",
    "end": "1017610"
  },
  {
    "text": "node which for example had a crash when it comes back up it's going to have a",
    "start": "1017610",
    "end": "1023490"
  },
  {
    "text": "peer-to-peer replication with its neighbor and fill the holes it has in the log sequence we are in the",
    "start": "1023490",
    "end": "1029850"
  },
  {
    "text": "background also continuously scrubbing data blocks we are monitoring all the nodes repairing all the disk and all of",
    "start": "1029850",
    "end": "1037079"
  },
  {
    "text": "this is happening transparently and you don't know anything about it you know when you operate the database",
    "start": "1037079",
    "end": "1043980"
  },
  {
    "text": "so how do you tolerate failure so you know I talked about four out of six",
    "start": "1045240",
    "end": "1051220"
  },
  {
    "text": "columns when you write so if you have for example entire data center going",
    "start": "1051220",
    "end": "1057640"
  },
  {
    "text": "down right you have two copies of data going down but still you have four",
    "start": "1057640",
    "end": "1062679"
  },
  {
    "text": "available so you still have light quorum and when you have one more node going",
    "start": "1062679",
    "end": "1069130"
  },
  {
    "text": "down or a disk going down you can still tolerate that for reads so the read",
    "start": "1069130",
    "end": "1076480"
  },
  {
    "text": "availability is when you have three copies of the data available you have read availability when you have four",
    "start": "1076480",
    "end": "1081640"
  },
  {
    "text": "copies of the data available you have light availability and that gives you pretty strong availability in terms of",
    "start": "1081640",
    "end": "1088330"
  },
  {
    "text": "loss of data centers lot of loss of nodes Network partition loss of storage",
    "start": "1088330",
    "end": "1094030"
  },
  {
    "text": "devices lot of loss of disk right so that's kind of the fundamental architectural innovation Noora that",
    "start": "1094030",
    "end": "1101410"
  },
  {
    "text": "gives us a huge benefit over the traditional database architectures even",
    "start": "1101410",
    "end": "1106750"
  },
  {
    "text": "even even when you move them to cloud so a couple of other interesting things",
    "start": "1106750",
    "end": "1114120"
  },
  {
    "start": "1110000",
    "end": "1110000"
  },
  {
    "text": "another big differentiator in aurora is crash recovery if you have worked with databases you know the crash recovery is",
    "start": "1114120",
    "end": "1120340"
  },
  {
    "text": "painful specifically if you are working for example we compared with my sequel here but other databases are not",
    "start": "1120340",
    "end": "1125950"
  },
  {
    "text": "entirely different is that you checkpoint every so often maybe every five minutes and then you store your",
    "start": "1125950",
    "end": "1133390"
  },
  {
    "text": "logs when you come back from a crash you replay the logs and often that replay is",
    "start": "1133390",
    "end": "1139210"
  },
  {
    "text": "single threaded and it can take minutes some time more than you know a few minutes to do a crash recover in case of",
    "start": "1139210",
    "end": "1145480"
  },
  {
    "text": "my sequel it can be pretty long in case of Aurora because of the architecture that we have logs are actually stored in",
    "start": "1145480",
    "end": "1153130"
  },
  {
    "text": "the storage nodes right so you are not storing you are distributing them across hundreds of storage nodes and when you",
    "start": "1153130",
    "end": "1160330"
  },
  {
    "text": "come back from a crash you are applying the logs on demand and as synchronously",
    "start": "1160330",
    "end": "1165580"
  },
  {
    "text": "so you don't have to wait for all the replay of the logs to complete before you come back from surely that gives us near instantaneous",
    "start": "1165580",
    "end": "1173270"
  },
  {
    "text": "cross recovery which is very very useful in an enterprise database environment where you want to recover from crash",
    "start": "1173270",
    "end": "1179390"
  },
  {
    "text": "very very quickly so all of these leads",
    "start": "1179390",
    "end": "1186620"
  },
  {
    "start": "1183000",
    "end": "1183000"
  },
  {
    "text": "to very quick failover and very predictable failover in Aurora if you",
    "start": "1186620",
    "end": "1192350"
  },
  {
    "text": "look at my sequel for example when a database fails after that you had to do failure detection then two things happen",
    "start": "1192350",
    "end": "1199250"
  },
  {
    "text": "in parallel that is recovery going on in the database node and then there is a DNS propagation going on which lets the",
    "start": "1199250",
    "end": "1208130"
  },
  {
    "text": "application know what is the IP address of the new master and the recovery in",
    "start": "1208130",
    "end": "1213860"
  },
  {
    "text": "case of my sequel because the crash recovery is pretty much unpredictable can go over for a long time and it's",
    "start": "1213860",
    "end": "1219260"
  },
  {
    "text": "very difficult to predict how long it will take to do a fast failover to do a failover in case of Aurora after the",
    "start": "1219260",
    "end": "1227030"
  },
  {
    "text": "failure is detected and it takes about 15 second which is not very different from what we have for my sequel now",
    "start": "1227030",
    "end": "1233060"
  },
  {
    "text": "although we are working on reducing that to 5 seconds the two things again happen",
    "start": "1233060",
    "end": "1238460"
  },
  {
    "text": "in parallel the recovery is going on but in our case recovery is actually very very fast it takes from 5 5 to 20",
    "start": "1238460",
    "end": "1244370"
  },
  {
    "text": "seconds and the DNS propagation also happening in parallel so it's the maximum of those two which is what it",
    "start": "1244370",
    "end": "1250580"
  },
  {
    "text": "takes to do a failover now what is interesting is that we have a custom",
    "start": "1250580",
    "end": "1255890"
  },
  {
    "text": "driver and this is in collaboration with Maria DB and the driver works for both my sequel Maria DB as well as Aurora",
    "start": "1255890",
    "end": "1263210"
  },
  {
    "text": "where you don't have to wait for DNS propagation so the driver has access to",
    "start": "1263210",
    "end": "1268280"
  },
  {
    "text": "a system table in the database and can figure out who the new master is without having to wait for the DNS propagation",
    "start": "1268280",
    "end": "1275210"
  },
  {
    "text": "to complete right that saves about you know 20 to 30 seconds in some cases so",
    "start": "1275210",
    "end": "1281480"
  },
  {
    "text": "if you use the Maria DB driver the Aurora crash Aurora failover can happen in less than 30 seconds and our goal",
    "start": "1281480",
    "end": "1288320"
  },
  {
    "text": "actually is to take it down to less than 10 seconds and hopefully in the next few months we will get there",
    "start": "1288320",
    "end": "1296230"
  },
  {
    "start": "1296000",
    "end": "1296000"
  },
  {
    "text": "continuous backup this is another I think key innovation in Aurora so what happens in case of backup is",
    "start": "1296440",
    "end": "1303630"
  },
  {
    "text": "that as I said the storage is striped across multiple storage nodes we call protection groups right let's call these",
    "start": "1303630",
    "end": "1310380"
  },
  {
    "text": "segments and parallely for each segment",
    "start": "1310380",
    "end": "1316340"
  },
  {
    "text": "we take full snapshots every once in a while the interval of that is dynamic it",
    "start": "1316340",
    "end": "1322920"
  },
  {
    "text": "depends on amount of load you have the storage node this that is kind of the long bars that you see and we also",
    "start": "1322920",
    "end": "1329700"
  },
  {
    "text": "stream all the logs to s3 along with the snapshot that we take every once in a",
    "start": "1329700",
    "end": "1335550"
  },
  {
    "text": "while right now let's say you have to recover you have to do a point-in-time recovery which is the dashed line that",
    "start": "1335550",
    "end": "1341250"
  },
  {
    "text": "you have there and all you need to do essentially get back the full snapshots",
    "start": "1341250",
    "end": "1346920"
  },
  {
    "text": "of those segments the last one that you have taken walking back from this point in time recovery that you want to get to",
    "start": "1346920",
    "end": "1354300"
  },
  {
    "text": "and retrieve all the log records and apply those in the storage nodes in",
    "start": "1354300",
    "end": "1360120"
  },
  {
    "text": "parallel again and you get your new recovered volume right very very quick",
    "start": "1360120",
    "end": "1365550"
  },
  {
    "text": "both taking the backup as well as doing",
    "start": "1365550",
    "end": "1370770"
  },
  {
    "text": "recovery from the snapshot is very very efficient right it doesn't really depend on size of the database because we are",
    "start": "1370770",
    "end": "1378240"
  },
  {
    "text": "doing everything in parallel multiple storage nodes so going to performance so",
    "start": "1378240",
    "end": "1390840"
  },
  {
    "text": "we have done like everybody else benchmarking we have used sis bands on",
    "start": "1390840",
    "end": "1396420"
  },
  {
    "text": "an eight Excel machine in this particular case you have done that for other machines also and you know as you",
    "start": "1396420",
    "end": "1403110"
  },
  {
    "text": "can see with this bench running simple writes and simple reads we get hundred",
    "start": "1403110",
    "end": "1409140"
  },
  {
    "text": "thousand writes per second and you get close to about six hundred thousand reads per second that's pretty",
    "start": "1409140",
    "end": "1415110"
  },
  {
    "text": "impressive number even for commercial databases if you compare this with my sequel or numbers or five times better",
    "start": "1415110",
    "end": "1421770"
  },
  {
    "text": "right but you know as you can say that anybody can generate a benchmark number",
    "start": "1421770",
    "end": "1428010"
  },
  {
    "text": "based on you know whatever data said you pick whatever number of connections you pick so we did some scaling test we",
    "start": "1428010",
    "end": "1436020"
  },
  {
    "start": "1433000",
    "end": "1433000"
  },
  {
    "text": "scale the table we increase the table counts from 10 200 2,000 to 10,000 and as you can see the",
    "start": "1436020",
    "end": "1443620"
  },
  {
    "text": "aurora performance you know doesn't really bud with ten tables you have 60,000 right eye ops again on an 8 XL",
    "start": "1443620",
    "end": "1450880"
  },
  {
    "text": "with hundred tables you have 66,000 and with 10,000 tables you have 54,000",
    "start": "1450880",
    "end": "1456130"
  },
  {
    "text": "pretty much in the same range it's pretty independent of number of table count and if you compare those on my",
    "start": "1456130",
    "end": "1462910"
  },
  {
    "text": "sequel running even on local storage our numbers are up to 11 times better we",
    "start": "1462910",
    "end": "1472390"
  },
  {
    "text": "also change the size of the database 1gb to 10gb to 100gb are done test for",
    "start": "1472390",
    "end": "1478120"
  },
  {
    "text": "larger databases also in fact aurora does very well compared to my sequel when the size of the database increases",
    "start": "1478120",
    "end": "1484870"
  },
  {
    "text": "right and you can understand why because we are using our storage so much better",
    "start": "1484870",
    "end": "1490570"
  },
  {
    "start": "1485000",
    "end": "1485000"
  },
  {
    "text": "and you know in this particular experiment you can get up to 67 X better",
    "start": "1490570",
    "end": "1496350"
  },
  {
    "text": "scaling factor when you compare to my sequel we scale the number of user",
    "start": "1496350",
    "end": "1502540"
  },
  {
    "start": "1500000",
    "end": "1500000"
  },
  {
    "text": "connections and we started with 50 we went up to 500 to 5000 again in this",
    "start": "1502540",
    "end": "1509500"
  },
  {
    "text": "case or a performance kind of goes up from 40,000 to 70 1000 and with 5000",
    "start": "1509500",
    "end": "1514900"
  },
  {
    "text": "connections you get 110 thousand right I ops now one thing I should mention here",
    "start": "1514900",
    "end": "1520030"
  },
  {
    "text": "is that Aurora actually does very well in terms of light throughput because we",
    "start": "1520030",
    "end": "1525400"
  },
  {
    "text": "have done a lot of optimization in the way we handle parallel threats for",
    "start": "1525400",
    "end": "1530860"
  },
  {
    "text": "example we have you know a lot of lock-free data structure which makes",
    "start": "1530860",
    "end": "1536440"
  },
  {
    "text": "handling up multiple threads very very efficient in case of my sequel as you",
    "start": "1536440",
    "end": "1542260"
  },
  {
    "text": "can see with 5,000 connection the throughput goes down to 13,000 drives per second again on the same eight excel",
    "start": "1542260",
    "end": "1548920"
  },
  {
    "text": "and you know if you look at the headline numbers it's up to 8 X faster than what you can see in my sequel I'm not going",
    "start": "1548920",
    "end": "1556720"
  },
  {
    "text": "to get into the details of this if you are interested in how this works Anurag Gupta actually gave talk on deep",
    "start": "1556720",
    "end": "1564010"
  },
  {
    "text": "dive and Aurora and there are a lot of things discuss in detail in his talk but how do we achieve these numbers",
    "start": "1564010",
    "end": "1569970"
  },
  {
    "text": "we do that by doing less work we do fewer iOS and one of the reasons we do",
    "start": "1569970",
    "end": "1576659"
  },
  {
    "text": "fear fear iOS is that we are not really for example doing the full right",
    "start": "1576659",
    "end": "1582600"
  },
  {
    "text": "data-page writes into our storage we are just sending the log records to our storage so the volume of prides that we",
    "start": "1582600",
    "end": "1589769"
  },
  {
    "text": "do that's roughly about one fiftieth of what you see in my sequel we also",
    "start": "1589769",
    "end": "1595169"
  },
  {
    "text": "minimize the network packets we make better use of the cache we offload some",
    "start": "1595169",
    "end": "1600629"
  },
  {
    "text": "of the database functions to storage nodes and we also want more efficiently you know a lot of our processing is",
    "start": "1600629",
    "end": "1607019"
  },
  {
    "text": "synchronous we reduce latency paths we use lock free",
    "start": "1607019",
    "end": "1612029"
  },
  {
    "text": "data structures wherever possible so a lot of hard-nosed engineering which contributes to performance improvement",
    "start": "1612029",
    "end": "1620720"
  },
  {
    "text": "now going to the next section that Abdul promised that we we are easy to use",
    "start": "1621230",
    "end": "1628830"
  },
  {
    "text": "right so we offer Arora as a managed service what does that mean you know if",
    "start": "1628830",
    "end": "1634169"
  },
  {
    "text": "you look at databases they are hard to manage and if you look at amount of time people spend in managing databases 20%",
    "start": "1634169",
    "end": "1640710"
  },
  {
    "text": "of the time goes in backup and recovery management 40% of the time goes in installing upgrading patching and",
    "start": "1640710",
    "end": "1647850"
  },
  {
    "text": "migrating and then other things you do for example performance tuning security planning and you know many other",
    "start": "1647850",
    "end": "1654120"
  },
  {
    "text": "functions now Aurora is offered and if you do if you have your database",
    "start": "1654120",
    "end": "1659570"
  },
  {
    "text": "on-premise then these are all the things you have to do yourself starting from power HVAC network",
    "start": "1659570",
    "end": "1665940"
  },
  {
    "text": "management rack and stack server maintenance waste installation whatever have you and then you have to do your",
    "start": "1665940",
    "end": "1672210"
  },
  {
    "text": "database functions which is you know database software install patches backups high availability and whatnot if",
    "start": "1672210",
    "end": "1680970"
  },
  {
    "text": "you come to ec2 for example or any cloud for that matter you see to of course does that better than many of the other",
    "start": "1680970",
    "end": "1687179"
  },
  {
    "text": "ones is that some of these functions are done by AWS right your power HVAC your",
    "start": "1687179",
    "end": "1693779"
  },
  {
    "text": "rack and stack server maintenance OS installation etc is done by AWS when you",
    "start": "1693779",
    "end": "1699149"
  },
  {
    "text": "come to Aurora which is a managed service on top of RDS we since our relational database management",
    "start": "1699149",
    "end": "1704410"
  },
  {
    "text": "service most of the things with respect to data based management starting from",
    "start": "1704410",
    "end": "1710020"
  },
  {
    "text": "power HVAC all the way up to database install patches backups high",
    "start": "1710020",
    "end": "1715240"
  },
  {
    "text": "availability scaling all done by RDS with our with our api's and only thing",
    "start": "1715240",
    "end": "1722200"
  },
  {
    "text": "you need to do is to focus on what differentiates your business which is essentially application optimization and",
    "start": "1722200",
    "end": "1728140"
  },
  {
    "text": "some of that lobbying is going to talk about so there are a few things I wanted",
    "start": "1728140",
    "end": "1735370"
  },
  {
    "text": "to mention I mean you know I didn't want to get into too much details with respect to all the things that we do in",
    "start": "1735370",
    "end": "1741280"
  },
  {
    "text": "RDS a few things I wanted to highlight one is advanced monitoring if you are",
    "start": "1741280",
    "end": "1746590"
  },
  {
    "text": "running an enterprise class database you want to have good visibility into what's going on in the database right and",
    "start": "1746590",
    "end": "1753990"
  },
  {
    "text": "databases are becoming complex they are not really just database it is part of a",
    "start": "1753990",
    "end": "1759070"
  },
  {
    "start": "1754000",
    "end": "1754000"
  },
  {
    "text": "big end-to-end application stack and you would like to manage everything yourself or everything on a single pane of glass",
    "start": "1759070",
    "end": "1765480"
  },
  {
    "text": "we're monitoring streams coming from applications wave servers as well as",
    "start": "1765480",
    "end": "1770620"
  },
  {
    "text": "databases you want to put them together on a single dashboard and in order to do that you need to have databases",
    "start": "1770620",
    "end": "1777040"
  },
  {
    "text": "providing all the system's level waist level as well as database level metrics and what we are doing is that we already",
    "start": "1777040",
    "end": "1786220"
  },
  {
    "text": "have you know about 15 or so metrics or 20 or so metrics available but we have",
    "start": "1786220",
    "end": "1791350"
  },
  {
    "text": "added lot more metrics that we are monitoring and making available so that",
    "start": "1791350",
    "end": "1796809"
  },
  {
    "text": "it is very very transparent to you so what we see is what you see right there is no difference between you know",
    "start": "1796809",
    "end": "1802750"
  },
  {
    "text": "managed service and something you manage yourself and all of these is going to be",
    "start": "1802750",
    "end": "1808270"
  },
  {
    "text": "available either through AWS console where you can monitor all these metrics",
    "start": "1808270",
    "end": "1814419"
  },
  {
    "text": "and you can create your own dashboard and by the way you can for example move",
    "start": "1814419",
    "end": "1819910"
  },
  {
    "text": "things around so that the layout is what you'd like it to be you can have some of the graphs bigger than the other ones",
    "start": "1819910",
    "end": "1826090"
  },
  {
    "text": "you can set alarms and more importantly you can actually will be able to vary",
    "start": "1826090",
    "end": "1832480"
  },
  {
    "text": "the granularity of the alarm granularity of the matrix you can retrieve them from anywhere between you",
    "start": "1832480",
    "end": "1837679"
  },
  {
    "text": "know every one second to sixty seconds and you can then pipe those metrics",
    "start": "1837679",
    "end": "1842870"
  },
  {
    "text": "these are all JSON files which are streamed into cloud watch logs into any third party tools monitoring tools that",
    "start": "1842870",
    "end": "1851000"
  },
  {
    "start": "1847000",
    "end": "1847000"
  },
  {
    "text": "you may be using in your environment so think of it this way let's say you have a graphite dashboard and you want to see",
    "start": "1851000",
    "end": "1857600"
  },
  {
    "text": "your end to an application stack monitored on that dashboard right some of your app servers are running in ec2",
    "start": "1857600",
    "end": "1864409"
  },
  {
    "text": "some may be on Prem you have your web servers running an ec2 you have your database running in RDS RDS will provide",
    "start": "1864409",
    "end": "1871909"
  },
  {
    "text": "you the monitoring stream that you can integrate with any of your favorite dashboards and you can have a complete",
    "start": "1871909",
    "end": "1879110"
  },
  {
    "text": "end-to-end view of your entire application stack at one place it's a pretty cool thing if you are running",
    "start": "1879110",
    "end": "1884929"
  },
  {
    "text": "enterprise apps so what about cost right",
    "start": "1884929",
    "end": "1895010"
  },
  {
    "text": "ultimately you know boils down to all all these are good features but how much does it cost so this is what we have for",
    "start": "1895010",
    "end": "1903710"
  },
  {
    "text": "Aurora the art three large which is the smallest instance we have is about",
    "start": "1903710",
    "end": "1909529"
  },
  {
    "text": "twenty nine cents an hour and the larger largest instance we have are 380 X large",
    "start": "1909529",
    "end": "1916010"
  },
  {
    "text": "is $4 64 cents an hour there is no licenses no login you pay",
    "start": "1916010",
    "end": "1922880"
  },
  {
    "text": "only for what you use and if you are using reserved instances you get pretty good discount 44% for one year is out",
    "start": "1922880",
    "end": "1929659"
  },
  {
    "text": "instances and up to 63% with three year reserved instances and if you compare",
    "start": "1929659",
    "end": "1936409"
  },
  {
    "start": "1935000",
    "end": "1935000"
  },
  {
    "text": "that with you know what you get from commercial vendors and you compare this",
    "start": "1936409",
    "end": "1941990"
  },
  {
    "text": "with Oracle Aurora has lot of unique features which are all included in the",
    "start": "1941990",
    "end": "1947899"
  },
  {
    "text": "pricing that he told you but if you get for example Oracle licenses first of all",
    "start": "1947899",
    "end": "1954470"
  },
  {
    "text": "you have to start with Enterprise Edition licenses in order to get your enterprise features but then you have to",
    "start": "1954470",
    "end": "1961220"
  },
  {
    "text": "pay for your data guard that's extra dollars you have to pay for your backup",
    "start": "1961220",
    "end": "1966590"
  },
  {
    "text": "in the cloud that X dollars per channel then he had to pay for your security which is extra dollars per core so all of this adds up and I",
    "start": "1966590",
    "end": "1974970"
  },
  {
    "text": "wanted to do a simple model take a",
    "start": "1974970",
    "end": "1980910"
  },
  {
    "text": "commercial database on ec2 and do an",
    "start": "1980910",
    "end": "1986550"
  },
  {
    "text": "hourly cost of that right so you know this is an eight Excel with six terabyte",
    "start": "1986550",
    "end": "1991800"
  },
  {
    "text": "of storage 30 KPI ups your instance cost $2 93 cents an hour your enterprise",
    "start": "1991800",
    "end": "1999720"
  },
  {
    "text": "licenses is $26 30 cents an hour your storage is $3.75 an hour and you have",
    "start": "1999720",
    "end": "2007430"
  },
  {
    "text": "added full three replicas to that and you know that's typically configuration a lot of customers have seen using and",
    "start": "2007430",
    "end": "2013400"
  },
  {
    "text": "the total cost for this configuration comes to 131 dollars 92 cents per hour",
    "start": "2013400",
    "end": "2020860"
  },
  {
    "text": "if you map this to an equivalent configuration of Aurora what you have is",
    "start": "2020860",
    "end": "2026450"
  },
  {
    "text": "a single storage volume because it's a shared storage and your primary as well as your replicas read from the storage",
    "start": "2026450",
    "end": "2033020"
  },
  {
    "text": "volume it is $5 15 cents for the storage and Aurora on 8 Excel including the",
    "start": "2033020",
    "end": "2039020"
  },
  {
    "text": "instance cost $4 65 cents an hour and if you add all of this up it's $23 71 cents",
    "start": "2039020",
    "end": "2046010"
  },
  {
    "text": "an hour roughly about 82 percent of savings now actually if you want more",
    "start": "2046010",
    "end": "2058220"
  },
  {
    "text": "savings I know that Dave Lang our product map product manager is waiting there at the back with $50 credit for",
    "start": "2058220",
    "end": "2064370"
  },
  {
    "text": "you to go and try your order but now you're wondering ok all you know you sold me how do I get in there and you",
    "start": "2064370",
    "end": "2072408"
  },
  {
    "text": "know we just announced or AWS migration",
    "start": "2072409",
    "end": "2077600"
  },
  {
    "text": "service and using AWS migration service you can move data from any database into",
    "start": "2077600",
    "end": "2084290"
  },
  {
    "text": "a row right in fact you can move from any database to any other database but in this particular case you can move",
    "start": "2084290",
    "end": "2089780"
  },
  {
    "text": "from Oracle or sequel server or my sequel or you know even from another Ora",
    "start": "2089780",
    "end": "2096408"
  },
  {
    "text": "instance and it happens while your applications are",
    "start": "2096409",
    "end": "2101570"
  },
  {
    "text": "right the way it works is that you start your replication instance then you",
    "start": "2101570",
    "end": "2107120"
  },
  {
    "text": "connect the source and target through this tool or service which is another instance essentially running and you",
    "start": "2107120",
    "end": "2113750"
  },
  {
    "text": "select your table schemas and databases and then the tool automatically starts migrating that to the other side and",
    "start": "2113750",
    "end": "2120140"
  },
  {
    "text": "once the migration incomplete you can cut over you know it's near zero",
    "start": "2120140",
    "end": "2125210"
  },
  {
    "text": "downtime of course there is a little bit of downtime when you cut over but almost no impact of the application we also",
    "start": "2125210",
    "end": "2133910"
  },
  {
    "text": "have another tool which we just announced this reinvent is the AWS",
    "start": "2133910",
    "end": "2139550"
  },
  {
    "text": "schema conversion tool you know when you are migrating from Oracle to sequel server to something which is my sequel",
    "start": "2139550",
    "end": "2145190"
  },
  {
    "text": "compatible you require to convert your schemas it's not just moving your data right so with the schema conversion tool",
    "start": "2145190",
    "end": "2152930"
  },
  {
    "text": "you can move your tables views stored procedure your DML to Aurora as well as",
    "start": "2152930",
    "end": "2159830"
  },
  {
    "text": "my sequel and MariaDB is essentially the same technique and it pretty much does from what I understood also depends on",
    "start": "2159830",
    "end": "2166400"
  },
  {
    "text": "your particular environment 80% of the job and 20% of the cases where it will",
    "start": "2166400",
    "end": "2171860"
  },
  {
    "text": "know how to do the conversion it will highlight that so that you can go to those specific areas and do it manually",
    "start": "2171860",
    "end": "2179540"
  },
  {
    "text": "right pretty good improvement from just trying to do it everything manually so",
    "start": "2179540",
    "end": "2186620"
  },
  {
    "text": "let me stop here and Robin is going to talk about they just moved to Aurora",
    "start": "2186620",
    "end": "2193970"
  },
  {
    "text": "he's going to talk about his experience Thank You Robin",
    "start": "2193970",
    "end": "2198790"
  },
  {
    "text": "hi everyone my name is Robin Matthews part of the Expedia worldwide",
    "start": "2206030",
    "end": "2212430"
  },
  {
    "text": "engineering organization and I'll be talking about my team's journey towards Aurora so before we get started in this",
    "start": "2212430",
    "end": "2221640"
  },
  {
    "text": "presentation I'll be talking about a lot of different database technologies and why it didn't work for our particular",
    "start": "2221640",
    "end": "2227220"
  },
  {
    "text": "use case but I want to caveat that you know those same technologies I are very",
    "start": "2227220",
    "end": "2234060"
  },
  {
    "text": "actively used for are very different use cases in different parts of the company and they work perfectly fine so with",
    "start": "2234060",
    "end": "2240780"
  },
  {
    "text": "that caveat let's get started I'm",
    "start": "2240780",
    "end": "2248370"
  },
  {
    "start": "2247000",
    "end": "2247000"
  },
  {
    "text": "guessing most of you heard of Expedia but for those that haven't we are one of",
    "start": "2248370",
    "end": "2254160"
  },
  {
    "text": "the largest travel companies in the world to give you an idea of our size last year we did more than 50 billion",
    "start": "2254160",
    "end": "2260340"
  },
  {
    "text": "dollars in gross travel bookings we have a you know broad range of supply across",
    "start": "2260340",
    "end": "2266760"
  },
  {
    "text": "different lines of businesses like flights and hotels and we also have you",
    "start": "2266760",
    "end": "2271890"
  },
  {
    "text": "know a large cross-section of brands and websites across different parts of the",
    "start": "2271890",
    "end": "2277200"
  },
  {
    "text": "world that generate a lot of demand for us so little introduction to of my team",
    "start": "2277200",
    "end": "2285150"
  },
  {
    "start": "2281000",
    "end": "2281000"
  },
  {
    "text": "so we call the lodging inventory services or also known as the elias team and think of us as sitting between",
    "start": "2285150",
    "end": "2291330"
  },
  {
    "text": "service layer sitting between our hotel ears and Expedia so Expedia provides a",
    "start": "2291330",
    "end": "2297210"
  },
  {
    "text": "lot of tools depending on the type of hotel if you're a small hotel a big hotel you get different tools and the hotels use those tools to actually work",
    "start": "2297210",
    "end": "2304620"
  },
  {
    "text": "with our marketplace right update rates inventory availability and all of those tools actually go through the Alaia",
    "start": "2304620",
    "end": "2310560"
  },
  {
    "text": "service layer before those updates make it into our marketplace I have some of my team members here on the front row so",
    "start": "2310560",
    "end": "2316710"
  },
  {
    "text": "NL Jeff and how do you want to quickly stand up so in case you want to talk to us about a journey later we'll be around",
    "start": "2316710",
    "end": "2322650"
  },
  {
    "text": "for maybe 10 15 minutes you can swing by so let's talk about the use cases at a",
    "start": "2322650",
    "end": "2330810"
  },
  {
    "start": "2327000",
    "end": "2327000"
  },
  {
    "text": "high level I would put it in two categories one that I call finding the needle in the haystack so",
    "start": "2330810",
    "end": "2337940"
  },
  {
    "text": "example of this is dispute calls that we get from a hotel yes so occasionally a",
    "start": "2337940",
    "end": "2343640"
  },
  {
    "text": "hotel here typically during invoicing time they might give us a call and say",
    "start": "2343640",
    "end": "2348680"
  },
  {
    "text": "hey we think you booked a room at the wrong rate it should have been $150 but",
    "start": "2348680",
    "end": "2354589"
  },
  {
    "text": "we see that he made the booking for $100 and you know we need we need the we need",
    "start": "2354589",
    "end": "2360380"
  },
  {
    "text": "data historical change data to kind of prove or disprove their statement right so we have tools today that can actually",
    "start": "2360380",
    "end": "2366890"
  },
  {
    "text": "pull up everything that happened to a room rate and we can tell the hotel in you know very minor detail what exactly",
    "start": "2366890",
    "end": "2374150"
  },
  {
    "text": "happened so in this case it's quite possible that the hotel EUR was kind of right because they did around that time",
    "start": "2374150",
    "end": "2379640"
  },
  {
    "text": "make that rate update $250 but guess what maybe the commit happened two",
    "start": "2379640",
    "end": "2385520"
  },
  {
    "text": "seconds after that booking so we're able to show them that hey yes you changed it to $150 but guess what when the booking",
    "start": "2385520",
    "end": "2392180"
  },
  {
    "text": "happened it was still hundred dollars then you know they're happy we are happy right so that's one use case so it's",
    "start": "2392180",
    "end": "2397280"
  },
  {
    "text": "really finding looking for those specific records in a huge swath of data and unlike the the image over here we",
    "start": "2397280",
    "end": "2405440"
  },
  {
    "text": "can't they're not going to wait for sixty-five thousand seconds right so they really need that response pretty quickly the second use case is what we",
    "start": "2405440",
    "end": "2413960"
  },
  {
    "text": "call value add features so an example of this would be you know hoteliers wanting",
    "start": "2413960",
    "end": "2419270"
  },
  {
    "text": "to know what the guy across the street is doing in terms of their pricing their rooms right so we could we would want to",
    "start": "2419270",
    "end": "2426079"
  },
  {
    "text": "give them information historical trends maybe when future states like what is",
    "start": "2426079",
    "end": "2431390"
  },
  {
    "text": "their competition doing in the next week how are they manipulating the rates so again we need this change data that I",
    "start": "2431390",
    "end": "2438200"
  },
  {
    "text": "was talking about to be able to generate those trends and share with the hotel so",
    "start": "2438200",
    "end": "2444800"
  },
  {
    "start": "2443000",
    "end": "2443000"
  },
  {
    "text": "now that I've talked about those use cases I want to give you guys an idea of the the size of the data we're talking",
    "start": "2444800",
    "end": "2450079"
  },
  {
    "text": "about here so any guesses from the audience and how many changes we see in",
    "start": "2450079",
    "end": "2455750"
  },
  {
    "text": "the Expedia travel marketplace on a typical day any guesses",
    "start": "2455750",
    "end": "2462490"
  },
  {
    "text": "several thousand much higher any other get sorry",
    "start": "2463859",
    "end": "2469469"
  },
  {
    "text": "7 1 million close so we do roughly 300",
    "start": "2469469",
    "end": "2476319"
  },
  {
    "text": "million updates a day and this is the typical day we might have a busy day maybe a big several of our big partners",
    "start": "2476319",
    "end": "2483069"
  },
  {
    "text": "are doing four refreshes and we could see like a billion plus updates happen on a single day now if you think about",
    "start": "2483069",
    "end": "2489999"
  },
  {
    "text": "the use case I mentioned earlier right about having the dispute resolution typically we want to keep this data or on for two years so think about that you",
    "start": "2489999",
    "end": "2497289"
  },
  {
    "text": "know 300 million updates a day keep the data around for two years ideally right",
    "start": "2497289",
    "end": "2502709"
  },
  {
    "text": "and obviously we want to do this set minimum cost and we also want super fast",
    "start": "2502709",
    "end": "2508509"
  },
  {
    "text": "response times when we're acquiring that data so before we talk about the",
    "start": "2508509",
    "end": "2516459"
  },
  {
    "start": "2513000",
    "end": "2513000"
  },
  {
    "text": "different solutions we looked at wanna spend a little bit time on what we use today right so all of the stuff that I",
    "start": "2516459",
    "end": "2522880"
  },
  {
    "text": "described you're actually doing today and we have a sequel server infrastructure that supports it it",
    "start": "2522880",
    "end": "2529539"
  },
  {
    "text": "worked very well for us back in the day even until a few years ago but the other data size has grown it started all of",
    "start": "2529539",
    "end": "2537670"
  },
  {
    "text": "you here using sequel server know that's really hard so we've done the typical things like you know we've used here",
    "start": "2537670",
    "end": "2543190"
  },
  {
    "text": "once and for fast IO we have obviously partitioned and scaled out so we're able to scale out but it is not as easy as",
    "start": "2543190",
    "end": "2549999"
  },
  {
    "text": "AWS right it's nothing is happening nothing is elastic or automatic right you have to keep it keep keep an eye on",
    "start": "2549999",
    "end": "2556119"
  },
  {
    "text": "it and you know do it yourself and the cost if you think about licensing the",
    "start": "2556119",
    "end": "2561130"
  },
  {
    "text": "hardware storage especially the tier once and the cost tends to get really high so one of the first things we",
    "start": "2561130",
    "end": "2571180"
  },
  {
    "text": "looked at was Cassandra along with Apache Solr so the reason we started off",
    "start": "2571180",
    "end": "2577269"
  },
  {
    "text": "we thought it will work well with our use cases then we had a couple teams in Expedia that had some success with this",
    "start": "2577269",
    "end": "2582989"
  },
  {
    "text": "but one of the issues we ran into because of the type of query and response time needs that we had we had",
    "start": "2582989",
    "end": "2589719"
  },
  {
    "text": "to have a lot of indexes not just one or two and what we saw is that other data size grew the solar index has got really",
    "start": "2589719",
    "end": "2596619"
  },
  {
    "text": "he and that would have meant we needed a lot more hardware in our Cassandra ring adding to the cost so it was not that",
    "start": "2596619",
    "end": "2603790"
  },
  {
    "text": "viable for us and this was around the time we were started exploring AWS and",
    "start": "2603790",
    "end": "2610599"
  },
  {
    "text": "we started with my sequel and we we started really simple we went with JP a",
    "start": "2610599",
    "end": "2617440"
  },
  {
    "text": "no provisioned I ops no table partitioning single inserts and we got a performance of roughly 400 inserts a",
    "start": "2617440",
    "end": "2624670"
  },
  {
    "text": "second we did some some of the basic tuning we use JDBC we started doing",
    "start": "2624670",
    "end": "2630310"
  },
  {
    "text": "batch batches we had be provisioned I often we we were able to increase the performance significantly to around",
    "start": "2630310",
    "end": "2636810"
  },
  {
    "text": "5,000 inserts a second but what we saw that we were bottleneck to that after around 300 million million rows and the",
    "start": "2636810",
    "end": "2644530"
  },
  {
    "text": "other thing was I talked about the amount of data we were my sequel supports just six terabytes of storage",
    "start": "2644530",
    "end": "2651190"
  },
  {
    "text": "and that certainly wouldn't have worked for us long term because of the our data was growing by leaps and bounds and like",
    "start": "2651190",
    "end": "2657460"
  },
  {
    "text": "I mentioned earlier we need to store ideally that two years worth of data so",
    "start": "2657460",
    "end": "2662470"
  },
  {
    "text": "this was around the time Amazon introduced Aurora so we had a portion of",
    "start": "2662470",
    "end": "2667930"
  },
  {
    "text": "the team tinkering with it we were able to use a lot of our learnings from my sequel and ported over and right off the",
    "start": "2667930",
    "end": "2674950"
  },
  {
    "text": "gate we saw much improved performance of about 25,000 writes inserts a second",
    "start": "2674950",
    "end": "2682390"
  },
  {
    "text": "with peaks of up to 70,000 this was one one months were the data and and our",
    "start": "2682390",
    "end": "2687819"
  },
  {
    "text": "region writes was super fast as well so",
    "start": "2687819",
    "end": "2693880"
  },
  {
    "text": "I guess in summary the early results look promising we've already started",
    "start": "2693880",
    "end": "2700089"
  },
  {
    "text": "migrating the two-year the data that I'm talking about and you know early results show that the performance you know",
    "start": "2700089",
    "end": "2706270"
  },
  {
    "text": "continues to stay similar as our data size is growing and the other other",
    "start": "2706270",
    "end": "2711280"
  },
  {
    "text": "thing that works for us the 64 terabytes right so I think that covers us for some time I mean we can definitely migrate do",
    "start": "2711280",
    "end": "2717640"
  },
  {
    "text": "24 months of data and then our data is growing as well as we add more and more ortelius so we should be able to this",
    "start": "2717640",
    "end": "2723430"
  },
  {
    "text": "should just anus for the near future so I guess",
    "start": "2723430",
    "end": "2728700"
  },
  {
    "text": "in conclusion what I would say is that you really need to think or I really",
    "start": "2728700",
    "end": "2733740"
  },
  {
    "text": "understand your use cases in detail before you can kind of narrow down you know database solution that might work",
    "start": "2733740",
    "end": "2740190"
  },
  {
    "text": "for you but even after that I think you until you actually put your real data through that through those systems and",
    "start": "2740190",
    "end": "2747210"
  },
  {
    "text": "try it out you're really not going to know how it's going to perform for you so that was like I guess the lesson learned for us and hopefully you know",
    "start": "2747210",
    "end": "2753930"
  },
  {
    "text": "you guys in the room can take a little bit out of that so that was it",
    "start": "2753930",
    "end": "2759300"
  },
  {
    "text": "from my side thank you thank you",
    "start": "2759300",
    "end": "2763040"
  }
]