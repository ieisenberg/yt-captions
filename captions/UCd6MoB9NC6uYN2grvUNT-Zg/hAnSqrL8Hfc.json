[
  {
    "text": "in this video you'll see how to set up",
    "start": "480",
    "end": "2399"
  },
  {
    "text": "amazon elastic kubernetes service or eks",
    "start": "2399",
    "end": "5200"
  },
  {
    "text": "monitoring with amazon managed service",
    "start": "5200",
    "end": "7120"
  },
  {
    "text": "for prometheus",
    "start": "7120",
    "end": "8800"
  },
  {
    "text": "with this service you can use a fully",
    "start": "8800",
    "end": "10400"
  },
  {
    "text": "managed prometheus backend to ingest",
    "start": "10400",
    "end": "12719"
  },
  {
    "text": "store and query prometheus metrics",
    "start": "12719",
    "end": "14639"
  },
  {
    "text": "collected from containerized workloads",
    "start": "14639",
    "end": "16320"
  },
  {
    "text": "deployed to an amazon eks cluster",
    "start": "16320",
    "end": "18640"
  },
  {
    "text": "and then visualize your data using",
    "start": "18640",
    "end": "20240"
  },
  {
    "text": "grafana",
    "start": "20240",
    "end": "22080"
  },
  {
    "text": "let's start by navigating to amazon eks",
    "start": "22080",
    "end": "24320"
  },
  {
    "text": "clusters",
    "start": "24320",
    "end": "26800"
  },
  {
    "text": "the eks cluster we'll be using is ready",
    "start": "26800",
    "end": "28720"
  },
  {
    "text": "to go let's create an amazon prometheus",
    "start": "28720",
    "end": "31439"
  },
  {
    "text": "workspace",
    "start": "31439",
    "end": "34000"
  },
  {
    "text": "next we need to enable a prometheus",
    "start": "40559",
    "end": "42239"
  },
  {
    "text": "server with permissions to remote right",
    "start": "42239",
    "end": "44000"
  },
  {
    "text": "into this workspace the steps on how to",
    "start": "44000",
    "end": "46559"
  },
  {
    "text": "do this are detailed in the blog post",
    "start": "46559",
    "end": "48640"
  },
  {
    "text": "getting started with amazon managed",
    "start": "48640",
    "end": "50320"
  },
  {
    "text": "service for prometheus",
    "start": "50320",
    "end": "53440"
  },
  {
    "text": "let's open a command line terminal to",
    "start": "54399",
    "end": "56079"
  },
  {
    "text": "continue the setup",
    "start": "56079",
    "end": "58079"
  },
  {
    "text": "the blog post we showed includes an",
    "start": "58079",
    "end": "59680"
  },
  {
    "text": "executable shell script that creates the",
    "start": "59680",
    "end": "61520"
  },
  {
    "text": "necessary aws",
    "start": "61520",
    "end": "62800"
  },
  {
    "text": "identity and access management or iam",
    "start": "62800",
    "end": "65040"
  },
  {
    "text": "roles and permissions",
    "start": "65040",
    "end": "66400"
  },
  {
    "text": "we'll run it now",
    "start": "66400",
    "end": "69200"
  },
  {
    "text": "let's verify the iam role and",
    "start": "70320",
    "end": "72000"
  },
  {
    "text": "permissions",
    "start": "72000",
    "end": "74560"
  },
  {
    "text": "the iam role was created successfully",
    "start": "74720",
    "end": "77040"
  },
  {
    "text": "let's verify the policy and trust",
    "start": "77040",
    "end": "78640"
  },
  {
    "text": "relationships",
    "start": "78640",
    "end": "81360"
  },
  {
    "text": "this role can be used by a kubernetes",
    "start": "83840",
    "end": "85439"
  },
  {
    "text": "service account with write access to",
    "start": "85439",
    "end": "87119"
  },
  {
    "text": "amazon managed service for prometheus or",
    "start": "87119",
    "end": "89280"
  },
  {
    "text": "amp",
    "start": "89280",
    "end": "90159"
  },
  {
    "text": "let's continue the setup",
    "start": "90159",
    "end": "93359"
  },
  {
    "text": "next we'll deploy a prometheus server",
    "start": "93600",
    "end": "96320"
  },
  {
    "text": "following the implementation in the blog",
    "start": "96320",
    "end": "98000"
  },
  {
    "text": "we'll do this by adding a prometheus",
    "start": "98000",
    "end": "99600"
  },
  {
    "text": "helm charts repo",
    "start": "99600",
    "end": "101360"
  },
  {
    "text": "we'll also create a kubernetes namespace",
    "start": "101360",
    "end": "103119"
  },
  {
    "text": "and install prometheus for amp using the",
    "start": "103119",
    "end": "105119"
  },
  {
    "text": "helm charts we added",
    "start": "105119",
    "end": "107280"
  },
  {
    "text": "this command modifies our prometheus",
    "start": "107280",
    "end": "108960"
  },
  {
    "text": "server configuration to deploy the",
    "start": "108960",
    "end": "110640"
  },
  {
    "text": "signing proxy and configure the remote",
    "start": "110640",
    "end": "112399"
  },
  {
    "text": "write endpoint",
    "start": "112399",
    "end": "114240"
  },
  {
    "text": "the prometheus server is now ready to",
    "start": "114240",
    "end": "115920"
  },
  {
    "text": "scrape metrics from services deployed in",
    "start": "115920",
    "end": "117600"
  },
  {
    "text": "the cluster and send them to the",
    "start": "117600",
    "end": "118880"
  },
  {
    "text": "specified workspace within amazon",
    "start": "118880",
    "end": "120719"
  },
  {
    "text": "managed service for prometheus via the",
    "start": "120719",
    "end": "122479"
  },
  {
    "text": "aws signing proxy",
    "start": "122479",
    "end": "125200"
  },
  {
    "text": "the next command lets us check all of",
    "start": "125200",
    "end": "126799"
  },
  {
    "text": "our prometheus pods and the running",
    "start": "126799",
    "end": "128319"
  },
  {
    "text": "states",
    "start": "128319",
    "end": "129920"
  },
  {
    "text": "next let's install and set up grafana",
    "start": "129920",
    "end": "133120"
  },
  {
    "text": "the metrics collected in a workspace",
    "start": "133120",
    "end": "134800"
  },
  {
    "text": "within amazon managed service for",
    "start": "134800",
    "end": "136480"
  },
  {
    "text": "prometheus can be visualized using",
    "start": "136480",
    "end": "138160"
  },
  {
    "text": "grafana",
    "start": "138160",
    "end": "139360"
  },
  {
    "text": "we'll add grafana's helm charts repo",
    "start": "139360",
    "end": "141440"
  },
  {
    "text": "create a kubernetes namespace",
    "start": "141440",
    "end": "143040"
  },
  {
    "text": "and install grafana for amp",
    "start": "143040",
    "end": "146640"
  },
  {
    "text": "let's check the pods",
    "start": "147920",
    "end": "150959"
  },
  {
    "text": "now we'll modify our grafana deployment",
    "start": "153680",
    "end": "155519"
  },
  {
    "text": "to enable the sig v4 protocol that the",
    "start": "155519",
    "end": "157599"
  },
  {
    "text": "aws signing proxy uses to authenticate",
    "start": "157599",
    "end": "162000"
  },
  {
    "text": "let's check the pods once more to make",
    "start": "162720",
    "end": "164239"
  },
  {
    "text": "sure our modified grafana deployment is",
    "start": "164239",
    "end": "166000"
  },
  {
    "text": "running",
    "start": "166000",
    "end": "167680"
  },
  {
    "text": "next let's port forward our grifana",
    "start": "167680",
    "end": "169360"
  },
  {
    "text": "deployment so that we can access the ui",
    "start": "169360",
    "end": "171280"
  },
  {
    "text": "from our browser",
    "start": "171280",
    "end": "173200"
  },
  {
    "text": "before we can log into the grafana",
    "start": "173200",
    "end": "174800"
  },
  {
    "text": "dashboard we must run a command that",
    "start": "174800",
    "end": "176720"
  },
  {
    "text": "will give us the auto-generated password",
    "start": "176720",
    "end": "179280"
  },
  {
    "text": "with the port forward command running in",
    "start": "179280",
    "end": "180879"
  },
  {
    "text": "the foreground we'll use another",
    "start": "180879",
    "end": "182480"
  },
  {
    "text": "terminal session to get the password",
    "start": "182480",
    "end": "185840"
  },
  {
    "text": "now we can copy and paste the password",
    "start": "188879",
    "end": "190560"
  },
  {
    "text": "to log into grafana",
    "start": "190560",
    "end": "199840"
  },
  {
    "text": "before we can visualize the metrics in",
    "start": "204319",
    "end": "206000"
  },
  {
    "text": "grafana it has to be configured with one",
    "start": "206000",
    "end": "207920"
  },
  {
    "text": "or more data sources",
    "start": "207920",
    "end": "209840"
  },
  {
    "text": "let's specify the workspace within",
    "start": "209840",
    "end": "211519"
  },
  {
    "text": "amazon managed service for prometheus as",
    "start": "211519",
    "end": "213519"
  },
  {
    "text": "a data source",
    "start": "213519",
    "end": "216239"
  },
  {
    "text": "the url we'll enter here as our amp",
    "start": "217200",
    "end": "219280"
  },
  {
    "text": "workspace query endpoint",
    "start": "219280",
    "end": "221200"
  },
  {
    "text": "let's switch back to aws to copy it",
    "start": "221200",
    "end": "226000"
  },
  {
    "text": "we need to make sure to only copy the",
    "start": "226000",
    "end": "227599"
  },
  {
    "text": "highlighted portion",
    "start": "227599",
    "end": "229040"
  },
  {
    "text": "not the entire url let's go back to",
    "start": "229040",
    "end": "232319"
  },
  {
    "text": "grafana and paste in the copied url",
    "start": "232319",
    "end": "236319"
  },
  {
    "text": "we'll turn on sigv4 authentication",
    "start": "236640",
    "end": "241840"
  },
  {
    "text": "we'll also change the default region to",
    "start": "242799",
    "end": "244560"
  },
  {
    "text": "the region our amp workspace and eks",
    "start": "244560",
    "end": "246799"
  },
  {
    "text": "cluster are in",
    "start": "246799",
    "end": "249519"
  },
  {
    "text": "now let's save and test the data source",
    "start": "249680",
    "end": "253439"
  },
  {
    "text": "the prometheus data source is working",
    "start": "253760",
    "end": "255760"
  },
  {
    "text": "let's go back and explore the metrics",
    "start": "255760",
    "end": "259440"
  },
  {
    "text": "let's query the api server's current",
    "start": "260320",
    "end": "262240"
  },
  {
    "text": "in-flight requests here are the results",
    "start": "262240",
    "end": "268720"
  },
  {
    "text": "of the query",
    "start": "268720",
    "end": "270400"
  },
  {
    "text": "you can configure your prometheus server",
    "start": "270400",
    "end": "272160"
  },
  {
    "text": "to scrape metrics to any container",
    "start": "272160",
    "end": "273759"
  },
  {
    "text": "workload in your eks cluster and",
    "start": "273759",
    "end": "275440"
  },
  {
    "text": "visualize the metrics here",
    "start": "275440",
    "end": "277840"
  },
  {
    "text": "you've just seen how to set up amazon",
    "start": "277840",
    "end": "279680"
  },
  {
    "text": "eks monitoring with amazon managed",
    "start": "279680",
    "end": "281759"
  },
  {
    "text": "service for prometheus",
    "start": "281759",
    "end": "283840"
  },
  {
    "text": "you can learn more about this topic in",
    "start": "283840",
    "end": "285360"
  },
  {
    "text": "the description and links for this video",
    "start": "285360",
    "end": "287360"
  },
  {
    "text": "thanks for watching now it's your turn",
    "start": "287360",
    "end": "288880"
  },
  {
    "text": "to try",
    "start": "288880",
    "end": "293120"
  }
]