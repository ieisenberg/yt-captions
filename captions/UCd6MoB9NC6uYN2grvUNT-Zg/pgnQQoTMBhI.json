[
  {
    "text": "good morning how's everybody doing welcome thank you for",
    "start": "4040",
    "end": "9559"
  },
  {
    "text": "coming very last day of AWS reinvent I hope you guys have had a great week hope",
    "start": "9559",
    "end": "15679"
  },
  {
    "text": "you have learned a lot this week and I also hope that you've had a little bit of fun too because after all this is",
    "start": "15679",
    "end": "22720"
  },
  {
    "text": "Vegas um maybe some of you are kind of recovering from last night's party um I",
    "start": "22720",
    "end": "28519"
  },
  {
    "text": "see a lot of suitcases which makes me very sad because tonight is Friday night in Vegas uh but",
    "start": "28519",
    "end": "34800"
  },
  {
    "text": "hopefully you've had a great time how many of you have the certainty",
    "start": "34800",
    "end": "42039"
  },
  {
    "text": "that your service your site is ready to handle three to four times the amount of",
    "start": "42039",
    "end": "47320"
  },
  {
    "text": "traffic that is receiving right now a few um not that",
    "start": "47320",
    "end": "54800"
  },
  {
    "text": "many so here's you you're you're having great dreams in your new satin sheets",
    "start": "54800",
    "end": "60039"
  },
  {
    "text": "and and they're warm and comfy and it's 4:00 in the morning and unknown to you",
    "start": "60039",
    "end": "66680"
  },
  {
    "text": "surprise maybe an influential blogger has posted a link to your site or somehow it's gone viral this is your big",
    "start": "66680",
    "end": "73600"
  },
  {
    "text": "break lots of people are just flocking to your site will your site be able to",
    "start": "73600",
    "end": "78880"
  },
  {
    "text": "handle what it's about to get it's kind of like rolling the dice unless you've done the proper amount of",
    "start": "78880",
    "end": "85759"
  },
  {
    "text": "load and performance testing and us being in Vegas maybe some some of you have done a little bit of rolling the",
    "start": "85759",
    "end": "91680"
  },
  {
    "text": "dice in the past few days and if you did you learn that sometimes you win",
    "start": "91680",
    "end": "97799"
  },
  {
    "text": "sometimes you don't right here's the things that I want you to get out of the next 45 minutes or so",
    "start": "97799",
    "end": "106280"
  },
  {
    "text": "first one is that load and performance issues cost they cost you a lot of money",
    "start": "106280",
    "end": "111799"
  },
  {
    "text": "they cost you customers and they cost your reputation these are a big deal to us at Amazon",
    "start": "111799",
    "end": "119920"
  },
  {
    "text": "second part of this is not every load related issue can be solved by adding",
    "start": "120000",
    "end": "127079"
  },
  {
    "text": "more Hardware in the age of cloud computing we tend to think that we just have",
    "start": "127079",
    "end": "132599"
  },
  {
    "text": "infinite resources at our disposal and we can do anything we want and we can just add Hardware to problems that's not",
    "start": "132599",
    "end": "139239"
  },
  {
    "text": "always the case and even if you could doesn't mean you should we don't want you to throw",
    "start": "139239",
    "end": "145560"
  },
  {
    "text": "your money away but with proper load testing you can identify the issues and you can",
    "start": "145560",
    "end": "151640"
  },
  {
    "text": "prevent them and you can fix them before they even show up or at the very least",
    "start": "151640",
    "end": "157160"
  },
  {
    "text": "you can have a better idea of when they will happen and how to mitigate",
    "start": "157160",
    "end": "162560"
  },
  {
    "text": "them and last but not least this is an AWS conference so how did we use AWS how",
    "start": "162560",
    "end": "169319"
  },
  {
    "text": "do we use AWS in the retail site to do load and performance",
    "start": "169319",
    "end": "175120"
  },
  {
    "text": "testing in other words we have systems that simulate the load that millions of users are putting onto the amazon.com",
    "start": "175120",
    "end": "182400"
  },
  {
    "text": "retail site this is not an easy problem but we solved it with AWS and I'll be",
    "start": "182400",
    "end": "188599"
  },
  {
    "text": "spending a little bit of time talking about how we did it and how you can too little bit a little bit about me my",
    "start": "188599",
    "end": "196640"
  },
  {
    "text": "name is Carlos Aras I'm a senior software engineer at Amazon I've been in",
    "start": "196640",
    "end": "201959"
  },
  {
    "text": "Amazon for about five years and before that I spent about 12 at Microsoft most of my professional career",
    "start": "201959",
    "end": "209480"
  },
  {
    "text": "I've worked with different teams in both of these companies doing load testing performance stress and resilience",
    "start": "209480",
    "end": "216319"
  },
  {
    "text": "testing currently I'm working as the the lead for and test architect for a number",
    "start": "216319",
    "end": "221599"
  },
  {
    "text": "of test tools across the company across Amazon this is a very fun position",
    "start": "221599",
    "end": "226640"
  },
  {
    "text": "because at Amazon we have this amazing scale and our low test tools have to do",
    "start": "226640",
    "end": "234360"
  },
  {
    "text": "pretty much what our real users do like you I am an AWS user I'm not",
    "start": "234360",
    "end": "242159"
  },
  {
    "text": "part of the AWS team I started off in my my Amazon career actually as part of the",
    "start": "242159",
    "end": "248120"
  },
  {
    "text": "AWS team I worked in elastic uh load balancing and and Cloud watch and um",
    "start": "248120",
    "end": "254400"
  },
  {
    "text": "Autos scaling and so forth but I've spent the last few years in the retail site so this is the amazon.com retail",
    "start": "254400",
    "end": "261479"
  },
  {
    "text": "site that you buy your your lawn mower and your big screen TV and your toothbrush from so we're a very very big user of",
    "start": "261479",
    "end": "269039"
  },
  {
    "text": "AWS but this entire talk is not from the",
    "start": "269039",
    "end": "274280"
  },
  {
    "text": "point of view of of an AWS member but rather as an AWS",
    "start": "274280",
    "end": "280039"
  },
  {
    "text": "user so let's talk about the amazon.com retail site first of all we receive a",
    "start": "280080",
    "end": "285919"
  },
  {
    "text": "lot of traffic if you guys went to the session that Jason Hamilton one of our senior distinguished Engineers did",
    "start": "285919",
    "end": "292960"
  },
  {
    "text": "yesterday he talked about scale a lot and the tremendous scale that we have to deal with in every aspect of our Amazon",
    "start": "292960",
    "end": "299759"
  },
  {
    "text": "on life amazon.com receives a lot of traffic you can look at rankings uh",
    "start": "299759",
    "end": "306479"
  },
  {
    "text": "usually we're in the top five in the nation top 10 or so in the world and",
    "start": "306479",
    "end": "312199"
  },
  {
    "text": "creating systems that can handle this kind of load and creating systems that test those systems is quite a",
    "start": "312199",
    "end": "319280"
  },
  {
    "text": "challenge just to be clear there's no such thing as an amazon.com app right",
    "start": "319280",
    "end": "324400"
  },
  {
    "text": "when you go to amazon.com you're actually the front end is actually making many many request to hundreds of",
    "start": "324400",
    "end": "331039"
  },
  {
    "text": "services under the hood every one of these Services has to be scaled with a",
    "start": "331039",
    "end": "336280"
  },
  {
    "text": "retail site we have additional problems we have",
    "start": "336280",
    "end": "343199"
  },
  {
    "text": "significant fluctuation throughout the day in this graph each one of these little bumps is a day of",
    "start": "343199",
    "end": "350000"
  },
  {
    "text": "traffic in the red rectangle that's one day of traffic and you can see people",
    "start": "350000",
    "end": "355160"
  },
  {
    "text": "don't buy a lot of stuff when they're sleeping they wake up they buy a bunch of stuff they take a little break from",
    "start": "355160",
    "end": "360800"
  },
  {
    "text": "shopping and they buy a lot more and then they go to sleep so all our systems have to be designed to handle this huge",
    "start": "360800",
    "end": "368039"
  },
  {
    "text": "fluctuation between day and night it is tremendous additionally not only do we",
    "start": "368039",
    "end": "375759"
  },
  {
    "text": "have this big day and night fluctuation we also have very very",
    "start": "375759",
    "end": "380800"
  },
  {
    "text": "different days for example what do we do after we finish eating our turkey on on",
    "start": "380800",
    "end": "387000"
  },
  {
    "text": "Thanksgiving we go to amazon.com to see what is the new big deal coming for",
    "start": "387000",
    "end": "392639"
  },
  {
    "text": "Thanksgiving and for Black Friday and for Cyber Monday so these two peaks here",
    "start": "392639",
    "end": "398160"
  },
  {
    "text": "are Black Friday and Cyber Monday they're very very big deal for us some of our services get two three four times",
    "start": "398160",
    "end": "404759"
  },
  {
    "text": "the amount of traffic depending on how they're scaling and what they're actually doing and this is a very very high",
    "start": "404759",
    "end": "411680"
  },
  {
    "text": "stakes day we make a lot of money these days and we want to make sure that when you go to amazon.com after you finish",
    "start": "411680",
    "end": "417840"
  },
  {
    "text": "your turkey meal we will will be up and running for you and last but not least we have",
    "start": "417840",
    "end": "424960"
  },
  {
    "text": "significant growth year to year every year a lot of our systems double or triple in traffic and we don't want to",
    "start": "424960",
    "end": "432039"
  },
  {
    "text": "be redesigning and rewriting systems every single year just because our load increases so we have to think ahead and",
    "start": "432039",
    "end": "438720"
  },
  {
    "text": "build things that will scale for years to come throughout my Amazon life I've had",
    "start": "438720",
    "end": "446280"
  },
  {
    "text": "the pleasure of breaking a lot of systems what I do is I go into a team and I pretend to be friends with them",
    "start": "446280",
    "end": "453000"
  },
  {
    "text": "and then I break their system and uh they don't like me so much anymore but",
    "start": "453000",
    "end": "458360"
  },
  {
    "text": "that makes for a few very interesting anecdotes about things that are run into and load related issues that I've",
    "start": "458360",
    "end": "464800"
  },
  {
    "text": "discovered and so forth there's some Lo related issues that can be solved by adding more Hardware not all of them but",
    "start": "464800",
    "end": "472000"
  },
  {
    "text": "some can so let's look over an example now this was in the Dark Ages",
    "start": "472000",
    "end": "478560"
  },
  {
    "text": "before EC to an autoscaling this was a service where we were running tens of thousands of",
    "start": "478560",
    "end": "484879"
  },
  {
    "text": "machines and we had to make sure we were scaled for peak in the Dark Ages before ec2 and AWS",
    "start": "484879",
    "end": "492280"
  },
  {
    "text": "and and Autos scaling we actually had to get this number right month two months",
    "start": "492280",
    "end": "497840"
  },
  {
    "text": "in advance because it took that long to provision thousands of machines to be ready for",
    "start": "497840",
    "end": "503879"
  },
  {
    "text": "traffic on a regular off peak day we had this cluster let's say about 10,",
    "start": "503879",
    "end": "509800"
  },
  {
    "text": "machines we're running it at 50% CPU this is to allow a little bit of",
    "start": "509800",
    "end": "515760"
  },
  {
    "text": "room for um unexpected traffic or also to allow for ad hoc jobs that might have",
    "start": "515760",
    "end": "521919"
  },
  {
    "text": "higher priority so running with quite a bit of of room here and we're we're processing n number",
    "start": "521919",
    "end": "529440"
  },
  {
    "text": "of transactions per second and for Peak traffic we're expecting about three",
    "start": "529440",
    "end": "534600"
  },
  {
    "text": "times that so then we're thinking we can't just triple the amount of hosts",
    "start": "534600",
    "end": "540200"
  },
  {
    "text": "that we have that's not cost effective and that also is very very difficult without",
    "start": "540200",
    "end": "546839"
  },
  {
    "text": "AWS so what we agreed to do is for for Peak traffic we're going to take her Fleet to about 85%",
    "start": "546839",
    "end": "554640"
  },
  {
    "text": "CPU so then the the math becomes not too bad you you say right now we have 10,000",
    "start": "554640",
    "end": "561880"
  },
  {
    "text": "hosts we have n transactions per second we're running a fleet at 50%",
    "start": "561880",
    "end": "567880"
  },
  {
    "text": "CPU we are expecting 3x number of transactions per",
    "start": "567880",
    "end": "573519"
  },
  {
    "text": "second we have agreed to take the fleet to about 85% CPU how many hosts do we",
    "start": "573519",
    "end": "580320"
  },
  {
    "text": "need and so we did this math and we provisioned the hardware and me being the cical engineer that I am I didn't",
    "start": "580320",
    "end": "587440"
  },
  {
    "text": "believe that was correct and I had about three weeks to prove that so in 3 weeks I had to write a",
    "start": "587440",
    "end": "594720"
  },
  {
    "text": "system that was going to simulate the load that the entire country and the entire world puts on",
    "start": "594720",
    "end": "600360"
  },
  {
    "text": "amazon.com on Peak traffic that's not a lot of time to",
    "start": "600360",
    "end": "605839"
  },
  {
    "text": "write something that needs to be horizontally scalable and secure and reliable and so forth but I did it with",
    "start": "605839",
    "end": "613800"
  },
  {
    "text": "AWS and I'll be talking a little bit about how we did that and we started running the test and",
    "start": "613800",
    "end": "620800"
  },
  {
    "text": "surprice surprice we got thousands of machines in production running at pretty",
    "start": "620800",
    "end": "625880"
  },
  {
    "text": "much 100% CPU we stopped it right before we felt that our production system was",
    "start": "625880",
    "end": "631959"
  },
  {
    "text": "compromised but at this point we were running a production service at three times the amount of traffic that it was",
    "start": "631959",
    "end": "637839"
  },
  {
    "text": "expecting any other day turns out our math wasn't",
    "start": "637839",
    "end": "643160"
  },
  {
    "text": "right why well things scale linearly until they no longer scale linearly and that's",
    "start": "643160",
    "end": "650519"
  },
  {
    "text": "a thing that we're reminded of constantly at amazon.com at the scale that we run",
    "start": "650519",
    "end": "656639"
  },
  {
    "text": "things always start kind of breaking most of the things that you take for granted start breaking when you get to",
    "start": "656639",
    "end": "662639"
  },
  {
    "text": "certain scale but we had done something very very important which is we took our system to its breaking point we had",
    "start": "662639",
    "end": "669760"
  },
  {
    "text": "extremely good data on how it scaled according to you know how many machines were were adding and how do they handle",
    "start": "669760",
    "end": "677360"
  },
  {
    "text": "the the transactions coming in and were're able to add additional hardware",
    "start": "677360",
    "end": "682519"
  },
  {
    "text": "and reun the test and this time we actually peaked at 85%",
    "start": "682519",
    "end": "687839"
  },
  {
    "text": "CPU so this is a happy case we run our test we figure out how many machines we",
    "start": "687839",
    "end": "693000"
  },
  {
    "text": "actually needed and we we happily lived Every",
    "start": "693000",
    "end": "698120"
  },
  {
    "text": "After much much simpler world today with AWS with ec2 and autoscaling you don't",
    "start": "698120",
    "end": "704200"
  },
  {
    "text": "actually need to do all this complicated math and and start provisioning host way",
    "start": "704200",
    "end": "709440"
  },
  {
    "text": "in advance and so forth but at the time we were moving your systems to AWS last year for for reinvent Laura",
    "start": "709440",
    "end": "717200"
  },
  {
    "text": "grit did a great talk on moving moving the retail site to AWS if you're",
    "start": "717200",
    "end": "722360"
  },
  {
    "text": "interested you can catch that on YouTube then there's some other load",
    "start": "722360",
    "end": "727720"
  },
  {
    "text": "related issues that can only be solved by redesigning your architecture this is where we start getting more and more",
    "start": "727720",
    "end": "734600"
  },
  {
    "text": "expensive let give you another example from my Amazon life we're running a a",
    "start": "734600",
    "end": "741120"
  },
  {
    "text": "system here that has an ingestion Fleet on the left and it is hooked up with",
    "start": "741120",
    "end": "747600"
  },
  {
    "text": "actually ec2 and Autos scale then as it's ingesting the data it's",
    "start": "747600",
    "end": "753519"
  },
  {
    "text": "putting the data in S3 it's writing a little bit of metad dat about the data in a database and it's processing the",
    "start": "753519",
    "end": "761800"
  },
  {
    "text": "data in Hadoop a very very big data uh map produce system and then there's an",
    "start": "761800",
    "end": "768360"
  },
  {
    "text": "output Fleet that that makes the data available to our users so for the most part the system is pretty scalable we've",
    "start": "768360",
    "end": "774519"
  },
  {
    "text": "got an ingestion Fleet that will autoscale we've got S3 which as far as concerned it's infinite we've got Hadoop",
    "start": "774519",
    "end": "782720"
  },
  {
    "text": "which is basically designed for very very big data we've got an output Fleet that's also designed to Autos",
    "start": "782720",
    "end": "790040"
  },
  {
    "text": "scale this looked great and we started doing low testing and the first thing we",
    "start": "790040",
    "end": "795600"
  },
  {
    "text": "saw was that in fact we didn't have the right number of hosts for the ingestion Fleet so the ingestion Fleet starts",
    "start": "795600",
    "end": "802279"
  },
  {
    "text": "running hot CPU starts running at 85% or so and when it gets to about 85 Autos",
    "start": "802279",
    "end": "808600"
  },
  {
    "text": "scaling kick in and provision is a whole bunch more Hardware this point we're high-fiving",
    "start": "808600",
    "end": "815040"
  },
  {
    "text": "each other saying this is awesome it is so much easier now with AWS and ec2 and",
    "start": "815040",
    "end": "820839"
  },
  {
    "text": "autoscaling it just magically Autos scal but of course there's a little bit",
    "start": "820839",
    "end": "826639"
  },
  {
    "text": "more than that so this database which is not an AWS database but a thirdparty",
    "start": "826639",
    "end": "833040"
  },
  {
    "text": "provider of databases wasn't properly scaled to handle that many more host",
    "start": "833040",
    "end": "838680"
  },
  {
    "text": "hitting so datab starts getting hot latency for rights start increasing and and some of",
    "start": "838680",
    "end": "845040"
  },
  {
    "text": "their rights start failing and so forth so we end up with all the holes that we just",
    "start": "845040",
    "end": "850759"
  },
  {
    "text": "autoscaled they're worthless they're all just still refusing connections because they can't connect to the database",
    "start": "850759",
    "end": "858880"
  },
  {
    "text": "underneath lesson learn here is that your system is only a scalable as your least scalable component and in this",
    "start": "858880",
    "end": "866800"
  },
  {
    "text": "case we can move the database to bigger Hardware keep moving into to bigger Hardware but we could see the writing in",
    "start": "866800",
    "end": "873399"
  },
  {
    "text": "the wall here at Amazon scale we were going to get to a point where we can't",
    "start": "873399",
    "end": "878440"
  },
  {
    "text": "move it to bigger hardware and in fact we often get to this situation with a lot of our services so I had to go back",
    "start": "878440",
    "end": "884639"
  },
  {
    "text": "and redesign the system and put Dynamo DB as one of the options here and we",
    "start": "884639",
    "end": "890320"
  },
  {
    "text": "lived happily ever after but we had to redesign our system a little bit to",
    "start": "890320",
    "end": "895720"
  },
  {
    "text": "actually take advantage of Amazon DB properly",
    "start": "895720",
    "end": "900839"
  },
  {
    "text": "then there's some load related issues that just cannot be solved by adding more Hardware this is where it gets",
    "start": "901880",
    "end": "907160"
  },
  {
    "text": "really tricky third example for my Amazon",
    "start": "907160",
    "end": "912240"
  },
  {
    "text": "life we're testing A system that we're expecting it to max out in terms of CPU",
    "start": "912240",
    "end": "918519"
  },
  {
    "text": "or maybe Network bandwidth we don't generally expect our systems to have problems with dis base at Amazon We",
    "start": "918519",
    "end": "925759"
  },
  {
    "text": "Believe Diss and hosts are pretty ephemeral they will die so we don't",
    "start": "925759",
    "end": "931240"
  },
  {
    "text": "necessarily take it for granted whatever you're writing to dis you could loose it any minute so we don't use a lot of",
    "start": "931240",
    "end": "937319"
  },
  {
    "text": "dis but we do monitor it when we're testing things and we're we're low",
    "start": "937319",
    "end": "942480"
  },
  {
    "text": "testing a system it's it's using about 5% dis and we start a load and we see",
    "start": "942480",
    "end": "949319"
  },
  {
    "text": "something very strange dis starts climbing up you climb from 5% to 20% in a matter",
    "start": "949319",
    "end": "956880"
  },
  {
    "text": "of 5 hours and looking at the traffic that we were about to put on this service we were going to run out of this",
    "start": "956880",
    "end": "963079"
  },
  {
    "text": "space in a matter of about 10 hours so by the time we actually got to Peak",
    "start": "963079",
    "end": "968680"
  },
  {
    "text": "traffic and that left us scratching our heads a little bit we thought we can keep adding Hardware to this problem we",
    "start": "968680",
    "end": "975319"
  },
  {
    "text": "can add another thousand machines but they will all happily run out of dispas as well no matter how many hosts we add",
    "start": "975319",
    "end": "982759"
  },
  {
    "text": "they'll just continue running out of dis space and when they do they'll start refusing connections through that we we",
    "start": "982759",
    "end": "989079"
  },
  {
    "text": "had a bug in production we actually had had it for many many months probably",
    "start": "989079",
    "end": "994480"
  },
  {
    "text": "about 6 months or so the reason we never notice is because the payloads we were getting during off peak traffic we were",
    "start": "994480",
    "end": "1001199"
  },
  {
    "text": "actually pretty small the bug was a bug under which if the payload was bigger",
    "start": "1001199",
    "end": "1006839"
  },
  {
    "text": "than a certain number of bites we would leak a file handle that wasn't very common during",
    "start": "1006839",
    "end": "1012120"
  },
  {
    "text": "off peak traffic and so once in a while we would leak a file handle but eventually our developer would check in",
    "start": "1012120",
    "end": "1018519"
  },
  {
    "text": "we would redeploy jvm would get restarted file handles would get freed up we never noticed we actually had this",
    "start": "1018519",
    "end": "1025678"
  },
  {
    "text": "bug in production for many many months but during Peak traffic we would",
    "start": "1025679",
    "end": "1031319"
  },
  {
    "text": "have actually had thousands of machines refusing connections because they were 100%",
    "start": "1031319",
    "end": "1039600"
  },
  {
    "text": "disused as we start thinking about doing load testing there's actually four",
    "start": "1040640",
    "end": "1045678"
  },
  {
    "text": "different terms that I've seen used almost interchangeably in the industry",
    "start": "1045679",
    "end": "1051760"
  },
  {
    "text": "and to me they mean very very different things there's a lot of overlap between them so you can actually be doing them",
    "start": "1051760",
    "end": "1058679"
  },
  {
    "text": "all at the same time but they do mean very very different things and to illustrate this I use the treadmill",
    "start": "1058679",
    "end": "1066679"
  },
  {
    "text": "analogy so what's low testing in the in the treadmill analogy",
    "start": "1066679",
    "end": "1072160"
  },
  {
    "text": "example you're expecting to run a marathon for our systems we expect a",
    "start": "1072160",
    "end": "1079520"
  },
  {
    "text": "certain Peak maybe on Black Friday maybe Cyber Monday maybe Christmas Day when people open up those Kindles and and",
    "start": "1079520",
    "end": "1085520"
  },
  {
    "text": "power them up there's some sort of peak that we're expecting and we know what it",
    "start": "1085520",
    "end": "1090679"
  },
  {
    "text": "will be like at least we have forecasts that that you know we expect this much traffic and we want to make sure that we",
    "start": "1090679",
    "end": "1097240"
  },
  {
    "text": "can handle that Peak coming our way in the treadmill analogy you're",
    "start": "1097240",
    "end": "1103000"
  },
  {
    "text": "going to run a marathon you know it's 20 mil you know it's 3 hours or whatever",
    "start": "1103000",
    "end": "1108080"
  },
  {
    "text": "you have a goal to reach so what you do is you get on the treadmill and you run and run and run you don't do the whole",
    "start": "1108080",
    "end": "1114559"
  },
  {
    "text": "thing the first time maybe you run five miles make sure you can run five",
    "start": "1114559",
    "end": "1119640"
  },
  {
    "text": "tomorrow you run six miles next day you run seven miles etc etc so you are in",
    "start": "1119640",
    "end": "1125120"
  },
  {
    "text": "this treadmill replicating simulating what you're expecting to do in real life",
    "start": "1125120",
    "end": "1130760"
  },
  {
    "text": "someday so that when the time comes you can cross that finish line with success",
    "start": "1130760",
    "end": "1136200"
  },
  {
    "text": "for us doing proper load testing means the system the Ral side is up and",
    "start": "1136200",
    "end": "1141559"
  },
  {
    "text": "running when you go 24 by7 Black Friday Cyber Monday Christmas you mention",
    "start": "1141559",
    "end": "1149159"
  },
  {
    "text": "it stress testing on the other hand is a lot more evil than that because the purpose of stress testing is to break",
    "start": "1149159",
    "end": "1156200"
  },
  {
    "text": "things purpose of low testing was to actually not break things happy outcome",
    "start": "1156200",
    "end": "1162080"
  },
  {
    "text": "of doing low testing is system would work for a peak we can go have a beer and be done with our day stress testing",
    "start": "1162080",
    "end": "1169559"
  },
  {
    "text": "on the other hand is all about breaking your system taking it to its breaking point so in the trepal analogy we put",
    "start": "1169559",
    "end": "1176240"
  },
  {
    "text": "you on the treadmill and we just keep increasing the speed until you actually fall over we want to see when do you",
    "start": "1176240",
    "end": "1182120"
  },
  {
    "text": "fall over that gives us valuable information on having mitigation plans",
    "start": "1182120",
    "end": "1188080"
  },
  {
    "text": "for what do we do when this happens resilience testing on the other",
    "start": "1188080",
    "end": "1194520"
  },
  {
    "text": "hand is all about horrible things happening to your system that you don't necessarily anticipate will ever happen",
    "start": "1194520",
    "end": "1201880"
  },
  {
    "text": "but they might so in the trip Mill analogy what we do here is we break your",
    "start": "1201880",
    "end": "1207400"
  },
  {
    "text": "leg and we put you on the treadmill and we want to see that you can still run maybe you can't run at full speed but",
    "start": "1207400",
    "end": "1214320"
  },
  {
    "text": "you can kind of hop along the treadmill with your broken leg and actually do something so this is all about things",
    "start": "1214320",
    "end": "1220280"
  },
  {
    "text": "like data centers going down hosts going down your dependency is going down it's",
    "start": "1220280",
    "end": "1225679"
  },
  {
    "text": "all about really weird situations you don't normally expect to see but you might right somebody took a picture of",
    "start": "1225679",
    "end": "1231600"
  },
  {
    "text": "this half naked guy running in the snow not something I would do but it",
    "start": "1231600",
    "end": "1237039"
  },
  {
    "text": "happened and then performance testing is all about how does latency and throughput",
    "start": "1237039",
    "end": "1242760"
  },
  {
    "text": "change as you're increasing your number of transactions per second or concurrent",
    "start": "1242760",
    "end": "1247880"
  },
  {
    "text": "connections or whatever it is that you consider",
    "start": "1247880",
    "end": "1252080"
  },
  {
    "text": "load but most importantly how do we use AWS for doing all these things",
    "start": "1253080",
    "end": "1259840"
  },
  {
    "text": "let's talk about generating load and different ways of generating load you can have traffic that you have",
    "start": "1259840",
    "end": "1268000"
  },
  {
    "text": "saved and you can Replay that traffic again to generate load or you can have some sort of",
    "start": "1268000",
    "end": "1274760"
  },
  {
    "text": "artificial traffic that you're generating you're generating an artificial rate that can be transactions",
    "start": "1274760",
    "end": "1280760"
  },
  {
    "text": "per second or concurrent connections and an artificial blend of operations these",
    "start": "1280760",
    "end": "1285840"
  },
  {
    "text": "are actually pretty different problems so let's start with a first One how can we replay traffic from something that",
    "start": "1285840",
    "end": "1292279"
  },
  {
    "text": "we've saved up but before I do that I want to introduce you to what I",
    "start": "1292279",
    "end": "1299679"
  },
  {
    "text": "call the most useful design pattern for AWS ever I use this thing for everything",
    "start": "1299679",
    "end": "1305200"
  },
  {
    "text": "it's very versatile what does NASA do when they need to fix their problems in space they",
    "start": "1305200",
    "end": "1312039"
  },
  {
    "text": "use duct tape it's actually true I didn't believe it until I Google it duct tape is one of those things that you can",
    "start": "1312039",
    "end": "1317720"
  },
  {
    "text": "use for anything you want I have it around the house baby's diaper breaks",
    "start": "1317720",
    "end": "1323000"
  },
  {
    "text": "you put duct tape around it problem fixed you can do anything you want with duct tape right you can do this I've",
    "start": "1323000",
    "end": "1330600"
  },
  {
    "text": "always want to do this to my kid this is not my kid because I don't want CBS to show up",
    "start": "1330600",
    "end": "1336039"
  },
  {
    "text": "my doorstep but I've always wanted to do it so I admire this guy you can do anything you want with duct tape you can",
    "start": "1336039",
    "end": "1342320"
  },
  {
    "text": "it's it's a very versatile thing you can make a cat hat you can make shoes um",
    "start": "1342320",
    "end": "1347600"
  },
  {
    "text": "pretty much anything you want want you can do it with duct tape so to me this design pattern is like duct tape of",
    "start": "1347600",
    "end": "1354840"
  },
  {
    "text": "AWS but first let's look at how do we do this the hard way this is a pretty common computer",
    "start": "1354840",
    "end": "1362360"
  },
  {
    "text": "science approach um nothing wrong with it it's been used for many many",
    "start": "1362360",
    "end": "1367679"
  },
  {
    "text": "services Master Slave type design so you've got a master that knows who its",
    "start": "1367679",
    "end": "1374120"
  },
  {
    "text": "slaves are and it it tells it slaves to work there's nothing wrong with it but it has a lot of complexity that it",
    "start": "1374120",
    "end": "1381520"
  },
  {
    "text": "doesn't need to have first of all it's a very tightly coupled",
    "start": "1381520",
    "end": "1387240"
  },
  {
    "text": "system when you start using aw us you start learning the value of decoupled",
    "start": "1387240",
    "end": "1392279"
  },
  {
    "text": "systems what you need here is the master has to know exactly what its slaves are the slaves have to know exactly what",
    "start": "1392279",
    "end": "1398720"
  },
  {
    "text": "their Master is there has to be this constant communication back and forth between them this puts you the master in",
    "start": "1398720",
    "end": "1406279"
  },
  {
    "text": "the business of health checks you have to know the health of all your slaves at all times maybe the slaves have to do",
    "start": "1406279",
    "end": "1412760"
  },
  {
    "text": "some sort of Health um like Ping Ping back or the master has to do some sort",
    "start": "1412760",
    "end": "1419240"
  },
  {
    "text": "of Health ping or something like that either way you have to get a state of the system and your master has to know",
    "start": "1419240",
    "end": "1425640"
  },
  {
    "text": "who's doing work who's not and so forth Master dies it's a single source",
    "start": "1425640",
    "end": "1433120"
  },
  {
    "text": "of failure it's a single point of failure and the more host that you run you'll realize that they die all all the",
    "start": "1433120",
    "end": "1438760"
  },
  {
    "text": "time it this will happen your master dies you don't know what your slaves don't know what to",
    "start": "1438760",
    "end": "1446120"
  },
  {
    "text": "do likewise let's say that what you're trying to do is you're trying to achieve 12,000 transactions per second so Master",
    "start": "1446120",
    "end": "1454559"
  },
  {
    "text": "knows it has four slaves it'll tell each slave to do 3,000 but then slaves die too and so",
    "start": "1454559",
    "end": "1463720"
  },
  {
    "text": "master has to know a slave died I have to redistribute the load ask the guys who were doing 3,000 to now do",
    "start": "1463720",
    "end": "1472519"
  },
  {
    "text": "4,000 this is this puts you in two different buckets that I don't ever want to be in one it puts you in the business",
    "start": "1473200",
    "end": "1480399"
  },
  {
    "text": "of having to know the health of every single host that is that is using",
    "start": "1480399",
    "end": "1487720"
  },
  {
    "text": "you health checks is one of those things that looks deceivingly simple you look at this problem you think it's not hard",
    "start": "1487720",
    "end": "1494360"
  },
  {
    "text": "right each host can send a pulse once in a while saying I'm still alive how",
    "start": "1494360",
    "end": "1499960"
  },
  {
    "text": "difficult is that actually is pretty non-trivial as you start looking into the edge cases especially at very very",
    "start": "1499960",
    "end": "1506559"
  },
  {
    "text": "high scale it's a hard problem I don't want to solve it it's been solved by",
    "start": "1506559",
    "end": "1511840"
  },
  {
    "text": "many people and they've spent a lot of time solving it it also puts you in the business",
    "start": "1511840",
    "end": "1518640"
  },
  {
    "text": "of having to redistribute load so it puts you in the business of having to load balance and load balancing is also",
    "start": "1518640",
    "end": "1526559"
  },
  {
    "text": "a very difficult problem it looks incredibly easy on the outside but the more that you start thinking about it",
    "start": "1526559",
    "end": "1533200"
  },
  {
    "text": "the more that you start thinking about itch cases and the more that you start actually doing it at the scale that we",
    "start": "1533200",
    "end": "1539880"
  },
  {
    "text": "do at Amazon load balancing is a very hard problem so those are two problems I",
    "start": "1539880",
    "end": "1545760"
  },
  {
    "text": "don't ever want to solve or have to solve when I have to do something very very quickly load balancing and health",
    "start": "1545760",
    "end": "1552919"
  },
  {
    "text": "checks that was the hard way how do we do this easy way",
    "start": "1552919",
    "end": "1560120"
  },
  {
    "text": "not too different actually instead of Master Slave we have a controller a queue in the middle and a",
    "start": "1560120",
    "end": "1568320"
  },
  {
    "text": "bunch of workers so controller is kind of like a master and workers are kind of like slaves but there's this magical",
    "start": "1568320",
    "end": "1575159"
  },
  {
    "text": "thing in the middle a q why is this so much better well first of all you've",
    "start": "1575159",
    "end": "1581760"
  },
  {
    "text": "decoupled your systems your controller doesn't care what workers are actually",
    "start": "1581760",
    "end": "1587360"
  },
  {
    "text": "listening to the Que its job is to write to the queue and as",
    "start": "1587360",
    "end": "1592480"
  },
  {
    "text": "long as I'm the controller as long as I'm putting a job in the queue and it disappears from the cube that means",
    "start": "1592480",
    "end": "1598240"
  },
  {
    "text": "somebody's doing it I don't care who host can die host can be brought in",
    "start": "1598240",
    "end": "1606640"
  },
  {
    "text": "host can be resuscitated it doesn't matter as far as the controller is concerned things are either getting done",
    "start": "1606640",
    "end": "1612360"
  },
  {
    "text": "or not and it knows based on the size of the cube likewise the workers didn't really",
    "start": "1612360",
    "end": "1618360"
  },
  {
    "text": "care who wrote a message they don't need to have this tightly coupled system where the workers have to know who the",
    "start": "1618360",
    "end": "1624399"
  },
  {
    "text": "controller is their job is once in a while go to a queue if there's a message",
    "start": "1624399",
    "end": "1629760"
  },
  {
    "text": "waiting there that's a job to be done grab it go do it I wish I could take credit for this",
    "start": "1629760",
    "end": "1637600"
  },
  {
    "text": "it's not my invention it's not even a computer science invention it's been",
    "start": "1637600",
    "end": "1642640"
  },
  {
    "text": "around forever what happens when you go to a restaurant waitress takes your order",
    "start": "1642640",
    "end": "1648679"
  },
  {
    "text": "writes it on a sticky goes back to the kitchen puts the sticky on some sort of order",
    "start": "1648679",
    "end": "1653880"
  },
  {
    "text": "wheel there's potentially many many chefs inside and whichever je Chef is",
    "start": "1653880",
    "end": "1659679"
  },
  {
    "text": "free will go in there grab the first stick you add of that order wheel and go do",
    "start": "1659679",
    "end": "1665240"
  },
  {
    "text": "it this is the way people have done this for many many years hundreds of years it's actually incredibly",
    "start": "1665240",
    "end": "1671840"
  },
  {
    "text": "effective you have all the information that you need to know about the health of your system in that order wheel",
    "start": "1671840",
    "end": "1679080"
  },
  {
    "text": "if you've got stickies growing and growing and growing then you know you don't have enough chefs in the kitchen",
    "start": "1679080",
    "end": "1686200"
  },
  {
    "text": "you need to get on the phone and call and get more chefs to come work if you don't if a waitress comes in",
    "start": "1686200",
    "end": "1693679"
  },
  {
    "text": "puts a sticky in there there should be a chef available to pick it up and go do it right away this is pretty much the",
    "start": "1693679",
    "end": "1699720"
  },
  {
    "text": "same for distributed System Controller put the job in there",
    "start": "1699720",
    "end": "1704919"
  },
  {
    "text": "it wants it to get done right away there's a worker available to pick it up and actually go do",
    "start": "1704919",
    "end": "1711080"
  },
  {
    "text": "it so this took us out of the load balancing business who's doing load balancing",
    "start": "1711080",
    "end": "1718320"
  },
  {
    "text": "here nobody the workers can grab a job whenever they're free and available to",
    "start": "1718320",
    "end": "1723720"
  },
  {
    "text": "do it if the controller boots a job if nobody available qze will grow qze tells",
    "start": "1723720",
    "end": "1731600"
  },
  {
    "text": "you everything you need to know also takes you out of the health check business you don't care who's actually",
    "start": "1731600",
    "end": "1737440"
  },
  {
    "text": "listening to the Q as long as I put things in and they disappear and I'm",
    "start": "1737440",
    "end": "1743000"
  },
  {
    "text": "good I can add more workers when the Q size is growing I can add more",
    "start": "1743000",
    "end": "1748320"
  },
  {
    "text": "controllers and have them right to the same Cube so I we use the design pattern to",
    "start": "1748320",
    "end": "1754919"
  },
  {
    "text": "replay traffic to generate load how do we do this in the three",
    "start": "1754919",
    "end": "1760720"
  },
  {
    "text": "weeks that I had to write a system to simulate the load that the entire country and the entire world was putting",
    "start": "1760720",
    "end": "1766720"
  },
  {
    "text": "onto the amazon.com retail site we started off with a test data",
    "start": "1766720",
    "end": "1771799"
  },
  {
    "text": "repository so this is an abstract concept where we have data to be",
    "start": "1771799",
    "end": "1777360"
  },
  {
    "text": "replayed and we have a controller and the controller goes to the test side repository and says give me a list of",
    "start": "1777360",
    "end": "1785120"
  },
  {
    "text": "all the files that contain data to replay this one minute this that repository has",
    "start": "1785120",
    "end": "1792240"
  },
  {
    "text": "information on these are the files that I should be replaying this minute gives me that list and then then as the",
    "start": "1792240",
    "end": "1798880"
  },
  {
    "text": "controller I put each one of these files as a message in my",
    "start": "1798880",
    "end": "1804799"
  },
  {
    "text": "queue then I have a worker that is listening to that so hopefully there's a free worker that is able to grab that",
    "start": "1804799",
    "end": "1811760"
  },
  {
    "text": "message go to the tested repository and download the file and actually create",
    "start": "1811760",
    "end": "1816840"
  },
  {
    "text": "the load process take that data is basically serialized transactions and deserialize them back into real",
    "start": "1816840",
    "end": "1825799"
  },
  {
    "text": "transactions so my design pattern seems pretty effective for this",
    "start": "1825799",
    "end": "1830919"
  },
  {
    "text": "problem eventually the workers will will grab the data we'll hit the service under test things look good and you're",
    "start": "1830919",
    "end": "1838480"
  },
  {
    "text": "going to have potentially hundreds or maybe thousands of hosts doing this so",
    "start": "1838480",
    "end": "1843720"
  },
  {
    "text": "it's very important to know the health of the system you want to get metrics and dashboards out of these hosts if I'm",
    "start": "1843720",
    "end": "1850399"
  },
  {
    "text": "creating a system that is putting load onto a production environment and can",
    "start": "1850399",
    "end": "1855559"
  },
  {
    "text": "potentially jeopardize that production environment I want to know what it's doing at all times and I want to know",
    "start": "1855559",
    "end": "1860799"
  },
  {
    "text": "how to stop it so Q size tells me everything I need",
    "start": "1860799",
    "end": "1866320"
  },
  {
    "text": "to know if the Q size is growing I don't have enough workers to to put the load that I'm trying to",
    "start": "1866320",
    "end": "1872720"
  },
  {
    "text": "put the system looks good but it would take an incredibly long amount of time to do it I only have three",
    "start": "1872720",
    "end": "1879720"
  },
  {
    "text": "weeks how did I do it with AWS well first of all Ted repository was",
    "start": "1879720",
    "end": "1886360"
  },
  {
    "text": "super easy to do basically as we're getting production data that we want to",
    "start": "1886360",
    "end": "1891480"
  },
  {
    "text": "resave that we want to save so that we can replay save it to S3 you can encrypt",
    "start": "1891480",
    "end": "1897039"
  },
  {
    "text": "it you can secure it it's a durable format as far as I'm concerned as an AWS",
    "start": "1897039",
    "end": "1902519"
  },
  {
    "text": "User it's a pretty infinite resource I can keep putting data in and it's pretty cost",
    "start": "1902519",
    "end": "1907840"
  },
  {
    "text": "effective it has a few other cool features such as you can ask it to clean up your bucket if it matches certain",
    "start": "1907840",
    "end": "1914360"
  },
  {
    "text": "criteria so I could say for the files this bucket that I'm",
    "start": "1914360",
    "end": "1919519"
  },
  {
    "text": "replaying if the files reach if the files are older than 30 days clean them",
    "start": "1919519",
    "end": "1925320"
  },
  {
    "text": "up so at any given point I only have 30 days of data that I can replay otherwise",
    "start": "1925320",
    "end": "1931120"
  },
  {
    "text": "this would be pedabytes and pedabytes of data I need to Index this data so I can",
    "start": "1931120",
    "end": "1936399"
  },
  {
    "text": "find it later and so I use Dynamo DB for that and so the test set repository is",
    "start": "1936399",
    "end": "1941799"
  },
  {
    "text": "just a very thin layer that allows me to say give me the files for this minute",
    "start": "1941799",
    "end": "1947399"
  },
  {
    "text": "goes to Dynamo DB gets the list of files for this minute and that's just metadata that we saved up in Dynamo DB and it",
    "start": "1947399",
    "end": "1954960"
  },
  {
    "text": "puts them as messages in the queue Amazon sqs simple Q service is",
    "start": "1954960",
    "end": "1961720"
  },
  {
    "text": "absolutely fantastic for doing qes gives me a couple of really cool things one of them is the state of my",
    "start": "1961720",
    "end": "1969639"
  },
  {
    "text": "system is now in the cloud I don't have it on a host that could die right now my",
    "start": "1969639",
    "end": "1975880"
  },
  {
    "text": "controller my workers could die any minute but the entire state of the system the things that need to happen are in the",
    "start": "1975880",
    "end": "1981960"
  },
  {
    "text": "cloud they're in the cube also gives me resilience so when you DQ a job off",
    "start": "1981960",
    "end": "1990200"
  },
  {
    "text": "sqs you're actually not really deleting the message from the queue you're",
    "start": "1990200",
    "end": "1995320"
  },
  {
    "text": "turning its visibility flag to false what that means is I've I've dced something nobody else can DQ it for a",
    "start": "1995320",
    "end": "2002200"
  },
  {
    "text": "certain number of time for a certain number of minutes or seconds and so worker gets a job and it",
    "start": "2002200",
    "end": "2010320"
  },
  {
    "text": "starts working on it but it dies after the visibility period time out that job comes back to the queue and",
    "start": "2010320",
    "end": "2018360"
  },
  {
    "text": "a different worker can grab it so this gives me the resilience that if I have",
    "start": "2018360",
    "end": "2024200"
  },
  {
    "text": "jobs if on hosts that die those jobs are not going to get done by that host but",
    "start": "2024200",
    "end": "2030000"
  },
  {
    "text": "eventually a different host will pick it up and actually do it this gives me the resilience without having to worry about",
    "start": "2030000",
    "end": "2036159"
  },
  {
    "text": "who's alive who's not and what are they doing Cloud watch is great for posting",
    "start": "2036159",
    "end": "2042679"
  },
  {
    "text": "metrics and getting pretty charts out of it so we use that for for that",
    "start": "2042679",
    "end": "2047800"
  },
  {
    "text": "purpose ec2 and autoscaling are absolutely fantastic for getting our",
    "start": "2047800",
    "end": "2053839"
  },
  {
    "text": "Hardware generally doing something like a a replay you have a very temporary need",
    "start": "2053839",
    "end": "2061040"
  },
  {
    "text": "for Hardware you don't need to allocate thousands and thousands of machines for months at a time and basically when I",
    "start": "2061040",
    "end": "2067520"
  },
  {
    "text": "start start get a whole bunch of machines start running my test and additionally I don't need to",
    "start": "2067520",
    "end": "2074320"
  },
  {
    "text": "know how many machines I have because with ec2 and Autos scaling I can say",
    "start": "2074320",
    "end": "2080679"
  },
  {
    "text": "whenever I I can start with a A guess on how many machines I need and whenever I",
    "start": "2080679",
    "end": "2087158"
  },
  {
    "text": "start if it reaches 80% CPU start allocating more hosts if it's under 30%",
    "start": "2087159",
    "end": "2094280"
  },
  {
    "text": "CPU start getting rid of some hosts so the system can go up and down in",
    "start": "2094280",
    "end": "2101240"
  },
  {
    "text": "terms of how many hostes it has without me having to do anything about remember the dark cages we had to figure out",
    "start": "2101240",
    "end": "2107359"
  },
  {
    "text": "exactly how many hostes we need for something get that provision etc etc the system can just automatically go up and",
    "start": "2107359",
    "end": "2113520"
  },
  {
    "text": "down as it needs to and it can be even smaller than that",
    "start": "2113520",
    "end": "2119720"
  },
  {
    "text": "because the Q size I mentioned gives me every I need to know about the state of the",
    "start": "2119720",
    "end": "2124839"
  },
  {
    "text": "system I can actually start autoscaling BAS on the Q size if the controller is",
    "start": "2124839",
    "end": "2130079"
  },
  {
    "text": "putting jobs into the Q Q size is growing then that means I don't have enough workers so I can start allocating",
    "start": "2130079",
    "end": "2136280"
  },
  {
    "text": "more and more host whenever I see that Q size growing up and then as I as allocate more Hardware that Q size is",
    "start": "2136280",
    "end": "2142880"
  },
  {
    "text": "going to go down that's all handy for replaying",
    "start": "2142880",
    "end": "2148640"
  },
  {
    "text": "traffic from Real World but how do we do the second part of this artificial",
    "start": "2148640",
    "end": "2155559"
  },
  {
    "text": "rate why would you want to do that maybe you don't have real world production",
    "start": "2156000",
    "end": "2161040"
  },
  {
    "text": "data that you want to replay maybe the traffic is not safe to replay maybe",
    "start": "2161040",
    "end": "2166599"
  },
  {
    "text": "you're expecting changes in production that you don't have a way to to have them",
    "start": "2166599",
    "end": "2172599"
  },
  {
    "text": "today these your things like controlling the rate so number of transactions per second number of concurrent connections",
    "start": "2172599",
    "end": "2179480"
  },
  {
    "text": "controlling the blend of operations maybe your system is doing reads and writes and deletes and you're expecting",
    "start": "2179480",
    "end": "2185480"
  },
  {
    "text": "a change in that and controlling duration how long you want to run in",
    "start": "2185480",
    "end": "2190800"
  },
  {
    "text": "for so let's say that you can Define your load in terms of steps First Step",
    "start": "2190800",
    "end": "2196640"
  },
  {
    "text": "you want to run a 50,000 transactions per second for 20 minutes and you've got",
    "start": "2196640",
    "end": "2201960"
  },
  {
    "text": "a blend of operations maybe 99% read 1% write if you got other steps 85,000 DPS",
    "start": "2201960",
    "end": "2208319"
  },
  {
    "text": "and so you're you're changing the number of transactions per second you're changing your blend you're changing your",
    "start": "2208319",
    "end": "2214280"
  },
  {
    "text": "duration um you can Define the load in this way number of steps and in different",
    "start": "2214280",
    "end": "2220119"
  },
  {
    "text": "steps so how do we do 50,000 TPS transactions per second for 20 minutes",
    "start": "2220119",
    "end": "2226359"
  },
  {
    "text": "with this particular blend you divide and conquer and the problem of doing 50,000",
    "start": "2226359",
    "end": "2232720"
  },
  {
    "text": "TPS for 20 minutes is really the same as the problem of doing 50,000 TPS for 1",
    "start": "2232720",
    "end": "2240000"
  },
  {
    "text": "minute 20 times over so we've taken a problem and we've",
    "start": "2240000",
    "end": "2245040"
  },
  {
    "text": "broken it up into smaller chunks now our problem is doing 50,000 DPS for",
    "start": "2245040",
    "end": "2251000"
  },
  {
    "text": "one minute use the same approach it's the same as 5,000 problems",
    "start": "2251000",
    "end": "2257640"
  },
  {
    "text": "of doing 10 DPS for one minute what we did is just divide and conquer take a",
    "start": "2257640",
    "end": "2262800"
  },
  {
    "text": "big problem and break it up into smaller chunks break it up into smaller chunks what we now have is a very granular step",
    "start": "2262800",
    "end": "2271560"
  },
  {
    "text": "and granular steps are great for what they're great for putting into CU each one of these little granular steps can",
    "start": "2271560",
    "end": "2278280"
  },
  {
    "text": "now become a tiny little job that you put into the queue so behold we have the",
    "start": "2278280",
    "end": "2284880"
  },
  {
    "text": "same design pattern that we use for replaying traffic that we can use for the exact for creating an artificial",
    "start": "2284880",
    "end": "2291520"
  },
  {
    "text": "blend off load Amazon ec2 spot instances is a new",
    "start": "2291520",
    "end": "2299119"
  },
  {
    "text": "hot thing I've seen mentioned a lot in different talks in the past few days and",
    "start": "2299119",
    "end": "2304920"
  },
  {
    "text": "I will mention it also is is a great way to inexpensively test there's lots of",
    "start": "2304920",
    "end": "2310960"
  },
  {
    "text": "teams out there using spot for very very cheap testing this is because you can get ec2",
    "start": "2310960",
    "end": "2318599"
  },
  {
    "text": "instances for a lot cheaper that you get On Demand maybe 90% up even up to 90%",
    "start": "2318599",
    "end": "2325680"
  },
  {
    "text": "you name your price and if Amazon is is um able to meet to match that price you",
    "start": "2325680",
    "end": "2331160"
  },
  {
    "text": "get the hardware it needs to be interaction tolerant tasks and time flexible",
    "start": "2331160",
    "end": "2338160"
  },
  {
    "text": "so if your low testing can be interaction tolerant and time flexible you can actually do this for very very cheap there a couple different",
    "start": "2338160",
    "end": "2345000"
  },
  {
    "text": "approaches that I've seen people do one of them is they can use spot for achieving bursts of traffic so they use",
    "start": "2345000",
    "end": "2352800"
  },
  {
    "text": "ond demand instances to create the load that they're trying to to create um just",
    "start": "2352800",
    "end": "2358240"
  },
  {
    "text": "kind of like the expected load but you want to see what happens when you have a burst of traffic what happens if you're",
    "start": "2358240",
    "end": "2363359"
  },
  {
    "text": "doing 10,000 transactions per second but all of a sudden you have a burst of 100,000 TPS great you can do that with",
    "start": "2363359",
    "end": "2371760"
  },
  {
    "text": "spot you can do a bed for spot and whenever that price becomes the the",
    "start": "2371760",
    "end": "2377319"
  },
  {
    "text": "price that the Amazon is is able to match then you get your host and you do this burst of traffic there's other",
    "start": "2377319",
    "end": "2384640"
  },
  {
    "text": "teams that are using it kind of as a first attempt so when they start doing",
    "start": "2384640",
    "end": "2389760"
  },
  {
    "text": "lad testing they try to get spot instances and if that fails they'll they'll go and and try to get on",
    "start": "2389760",
    "end": "2396319"
  },
  {
    "text": "demand so worst case scenario you're doing what you were doing before you're just getting on demand um but best case scenario you can",
    "start": "2396319",
    "end": "2403920"
  },
  {
    "text": "actually get those host for much cheaper than you were getting them before this allows you to do something that usually",
    "start": "2403920",
    "end": "2410319"
  },
  {
    "text": "cost a lot of money for very very",
    "start": "2410319",
    "end": "2414240"
  },
  {
    "text": "cheap not sure what I just did takeaways for this um first load and",
    "start": "2417680",
    "end": "2425599"
  },
  {
    "text": "and performance related issues can cost you a lot of money reputation",
    "start": "2425599",
    "end": "2430680"
  },
  {
    "text": "customers you don't necessarily get to add Hardware to all the problems and even if you could you don't necessarily",
    "start": "2430680",
    "end": "2437040"
  },
  {
    "text": "want to but with proper low testing you can identify the issues and you can save",
    "start": "2437040",
    "end": "2442880"
  },
  {
    "text": "yourself a lot of trouble by being ready for it and you can do that with AWS very",
    "start": "2442880",
    "end": "2448440"
  },
  {
    "text": "very quickly for able to do it for creating a system to simulate the load the entire country and entire United",
    "start": "2448440",
    "end": "2455119"
  },
  {
    "text": "States is putting onto Amazon retail site it scaled for our needs and it did",
    "start": "2455119",
    "end": "2461240"
  },
  {
    "text": "in a way that was cost effective and durable and secure and all the other great things that come out of using",
    "start": "2461240",
    "end": "2468240"
  },
  {
    "text": "AWS so with that I thank you for your time please fill in the the feedback forms and I'm",
    "start": "2468240",
    "end": "2475800"
  },
  {
    "text": "happy to take questions",
    "start": "2475800",
    "end": "2478920"
  }
]