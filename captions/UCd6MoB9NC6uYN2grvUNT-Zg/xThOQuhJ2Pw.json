[
  {
    "text": "[Music] hello everyone my name is andy hopper and i'm a senior",
    "start": "0",
    "end": "5359"
  },
  {
    "text": "solutions architect at amazon web services a frequent use case for customers running elastic compute cloud or",
    "start": "5359",
    "end": "10960"
  },
  {
    "text": "ec2 instances is to have a way to automatically install applications on these instances for",
    "start": "10960",
    "end": "16400"
  },
  {
    "text": "example you may have a ci cd pipeline that builds your code and you'd like to have the latest revision of the application deployed",
    "start": "16400",
    "end": "23039"
  },
  {
    "text": "after the build completes however what if this application is running in production and you can't afford to have any",
    "start": "23039",
    "end": "28880"
  },
  {
    "text": "downtime even while you're updating the application in this video we're going to explore how",
    "start": "28880",
    "end": "34239"
  },
  {
    "text": "you can use one of aws's devops services named code deploy and we'll look at one of the deployment",
    "start": "34239",
    "end": "39360"
  },
  {
    "text": "types that can enable this and it's called blue green deployments so what is a blue green deployment for a",
    "start": "39360",
    "end": "46079"
  },
  {
    "text": "lot of applications the way you update the deployed version is to uninstall the previous version and then install the new version now",
    "start": "46079",
    "end": "53520"
  },
  {
    "text": "code deploy has ways to allow you to perform the update on a fraction of your boxes at any given time so you don't have any down time but",
    "start": "53520",
    "end": "59920"
  },
  {
    "text": "sometimes you'd like to ensure that everything gets updated at once but still without any downtime this is",
    "start": "59920",
    "end": "66159"
  },
  {
    "text": "where blue green comes in rather than update the boxes that are currently running your application which we'll call the green group",
    "start": "66159",
    "end": "72479"
  },
  {
    "text": "we'll instead create a separate set of boxes which we'll call the blue group and install the application version on",
    "start": "72479",
    "end": "78080"
  },
  {
    "text": "them once we're satisfied the application is running properly in these boxes we'll make them the green group now i do",
    "start": "78080",
    "end": "85840"
  },
  {
    "text": "have to make sure my application is written to handle this but if i do it correctly my users might never know that anything changed",
    "start": "85840",
    "end": "92079"
  },
  {
    "text": "even while they're using the application for those of you who aren't familiar with code deploy it's a way for you to have software",
    "start": "92079",
    "end": "98560"
  },
  {
    "text": "automatically installed on ec2 instances elastic container service or ecs services",
    "start": "98560",
    "end": "104320"
  },
  {
    "text": "or even aws lambda for the purposes of this video we're going to focus on a windows use",
    "start": "104320",
    "end": "109840"
  },
  {
    "text": "case running on ec2 however if you're interested in performing similar steps on other os's",
    "start": "109840",
    "end": "115280"
  },
  {
    "text": "or platforms you can learn more from the aws documentation on code deploy so let's get started what i have open",
    "start": "115280",
    "end": "123200"
  },
  {
    "text": "here in visual studio is an asp.net core mvc web application now i'd like to point out that while",
    "start": "123200",
    "end": "129679"
  },
  {
    "text": "this particular application is using the.net core runtime everything i'll be describing in this video",
    "start": "129679",
    "end": "134879"
  },
  {
    "text": "applies to net framework applications as well you're just going to be using a different runtime for your application",
    "start": "134879",
    "end": "141280"
  },
  {
    "text": "by the way the source for this application is publicly available in github so if you want to peek at the code for",
    "start": "141280",
    "end": "146720"
  },
  {
    "text": "this as well as some other videos i'll be recording on deploying.net applications you can download it and try it out in",
    "start": "146720",
    "end": "152400"
  },
  {
    "text": "your own environment okay back to our application i'd like this application to be able to launch",
    "start": "152400",
    "end": "158080"
  },
  {
    "text": "automatically on boot and stay running this is an ideal use case for windows service so i've added the nuget package",
    "start": "158080",
    "end": "164640"
  },
  {
    "text": "that supports running a.net core application as a windows service so i've got my application i've got it",
    "start": "164640",
    "end": "170800"
  },
  {
    "text": "set up to run on boot so now i just need to figure out how i'm going to get this to automatically install on my instances",
    "start": "170800",
    "end": "177280"
  },
  {
    "text": "before we use code deploying the blue green deployment type there are a few things we need to make sure we have in place first",
    "start": "177280",
    "end": "183760"
  },
  {
    "text": "we'll need to ensure that the ec2 instances we're using have the code deploy agent installed on them and in addition we'll",
    "start": "183760",
    "end": "190080"
  },
  {
    "text": "have to ensure that that agent will have permission to talk to code deploy through the code deploy apis",
    "start": "190080",
    "end": "195760"
  },
  {
    "text": "to do this we'll ensure that we have an ec2 instance profile attached that includes the necessary permissions to",
    "start": "195760",
    "end": "201360"
  },
  {
    "text": "work with code deploy luckily amazon has already provided what's called a managed policy called",
    "start": "201360",
    "end": "206560"
  },
  {
    "text": "amazon ec2 role for aws code deploy that we can use for assigning these permissions we'll also",
    "start": "206560",
    "end": "212720"
  },
  {
    "text": "need to make sure that the ec2 instances my applications are running on have the ability to access the code",
    "start": "212720",
    "end": "218319"
  },
  {
    "text": "deploy and s3 public endpoints to do this we'll need to ensure that the vpc myec2 instances are on",
    "start": "218319",
    "end": "225280"
  },
  {
    "text": "have access to the internet through an internet gateway if i'm launching my application on ec2 instances",
    "start": "225280",
    "end": "231040"
  },
  {
    "text": "in private subnets we'll need to make sure that those private subnets have access to a nat",
    "start": "231040",
    "end": "236159"
  },
  {
    "text": "or an at gateway so that they can have access to the outside world finally we'll need a set of ec2",
    "start": "236159",
    "end": "242560"
  },
  {
    "text": "instances that we'll use for deploying any new revisions we publish to do this we can either manually",
    "start": "242560",
    "end": "248000"
  },
  {
    "text": "provision a set of ec2 instances or we can point code deploy at an auto scaling group that already includes the",
    "start": "248000",
    "end": "254640"
  },
  {
    "text": "configuration needed for those new ec2 instances we're going to use the auto scaling group option for this example",
    "start": "254640",
    "end": "261600"
  },
  {
    "text": "so let's go ahead and get things set up first i'll go ahead and create the ec2 profile i'll go to the identity and access",
    "start": "261600",
    "end": "268240"
  },
  {
    "text": "management console i'll go to roles and i'm going to create a role",
    "start": "268240",
    "end": "273520"
  },
  {
    "text": "in this case to make an ec2 profile we'll pick ec2 for the use case and now it's time for",
    "start": "273520",
    "end": "279600"
  },
  {
    "text": "me to attach policies now as i mentioned we have a managed policy for code deploy",
    "start": "279600",
    "end": "285919"
  },
  {
    "text": "and so i'm going to go ahead and check the amazon ec2 role for aws code deploy i'll skip past the tags and i'll give it",
    "start": "285919",
    "end": "293600"
  },
  {
    "text": "a name core demo and i'll leave the description as",
    "start": "293600",
    "end": "300560"
  },
  {
    "text": "the default okay great i've got my ec2 profile and",
    "start": "300560",
    "end": "307280"
  },
  {
    "text": "now it's time for me to create an auto scaling group okay we have our ec2 instance profile",
    "start": "307280",
    "end": "313280"
  },
  {
    "text": "now it's time for us to go ahead and create a load balancer to serve up traffic from our application so i'll navigate to ec2 and",
    "start": "313280",
    "end": "320960"
  },
  {
    "text": "i'll scroll down to load balancers and let's create a new load balancer",
    "start": "320960",
    "end": "327919"
  },
  {
    "text": "in this case i'll go ahead and use an application load balancer to serve up my traffic so it'll want a name asp.net core demo",
    "start": "327919",
    "end": "336800"
  },
  {
    "text": "it'll be an internet facing load balancer and it'll serve traffic up on port 80. next it wants to know what availability",
    "start": "336800",
    "end": "343280"
  },
  {
    "text": "zones and subnets it's going to be running the alb out of and so i'm going to go ahead and check the code deploy demo vpc that i've already",
    "start": "343280",
    "end": "350080"
  },
  {
    "text": "created and i will tell it have it serve traffic in the public subnet",
    "start": "350080",
    "end": "355919"
  },
  {
    "text": "in these two availability zones uh in this case i'm not going to use the aws global accelerator so i'll go ahead",
    "start": "355919",
    "end": "362639"
  },
  {
    "text": "and skip to security settings and i'm not setting up an ssl cert at this time so i'll go ahead and skip that",
    "start": "362639",
    "end": "368560"
  },
  {
    "text": "were you setting this up you would configure ssl here next is it's time to configure the",
    "start": "368560",
    "end": "374400"
  },
  {
    "text": "security groups uh in the vpc that i'm going to run my application in i've defined two security",
    "start": "374400",
    "end": "380080"
  },
  {
    "text": "groups so i've got a load balancer security group which allows access on port 80 to",
    "start": "380080",
    "end": "385960"
  },
  {
    "text": "0.0.0.0 and then i have the code deploy http security group that we'll use in our",
    "start": "385960",
    "end": "391840"
  },
  {
    "text": "launch configuration this security group only allows access on port 80 to this load balancer security group",
    "start": "391840",
    "end": "398479"
  },
  {
    "text": "that way i can run these applications in a private subnet and there will be no internet access to",
    "start": "398479",
    "end": "403919"
  },
  {
    "text": "these boxes directly it has to go through the load balancer next we'll configure the routing i'm",
    "start": "403919",
    "end": "410800"
  },
  {
    "text": "going to go ahead and define a new target group and so variations on a theme here i'm going to name it asp.net core demo",
    "start": "410800",
    "end": "417039"
  },
  {
    "text": "it's going to be of instances and i'm going to go ahead and have it serve traffic to port 80",
    "start": "417039",
    "end": "422160"
  },
  {
    "text": "and the health check will just be the root of the application in this case i'm not going to register",
    "start": "422160",
    "end": "428080"
  },
  {
    "text": "any targets at this point we're going to let the auto scaling group manage that part so next we'll click review it just shows",
    "start": "428080",
    "end": "433919"
  },
  {
    "text": "us all the choices that we made at this point and we'll go ahead and click create awesome now we have our load",
    "start": "433919",
    "end": "440240"
  },
  {
    "text": "balancer alright so for an auto scaling group to",
    "start": "440240",
    "end": "446720"
  },
  {
    "text": "be able to create ec2 instances automatically first i have to give it something called a launch configuration so",
    "start": "446720",
    "end": "452479"
  },
  {
    "text": "i'll go ahead and click on ec2 to go to the ecg dashboard i'll scroll down and i'll click on",
    "start": "452479",
    "end": "457759"
  },
  {
    "text": "launch configurations and then i'll click on create launch",
    "start": "457759",
    "end": "463039"
  },
  {
    "text": "configuration so it's going to ask me for a name so i'll call it asp.net core demo",
    "start": "463039",
    "end": "469280"
  },
  {
    "text": "and then it needs an ami id now in my case i've already looked up the ami for windows server core so i'll just go",
    "start": "469280",
    "end": "475919"
  },
  {
    "text": "ahead and paste that excuse me windows server full and i'll paste that in here next it'll ask me a few additional details so",
    "start": "475919",
    "end": "482479"
  },
  {
    "text": "i'm going to go ahead and choose an instance type this is going to be web application so i'll go ahead and make this a c5 large",
    "start": "482479",
    "end": "489199"
  },
  {
    "text": "i'll choose that and then next it's going to ask me for an instance profile in my case since",
    "start": "489199",
    "end": "495520"
  },
  {
    "text": "i want to be able to interact code deploy i'm going to go ahead and choose that asp.net core demo",
    "start": "495520",
    "end": "500560"
  },
  {
    "text": "instance profile we created earlier next it's going to ask us some advanced",
    "start": "500560",
    "end": "506160"
  },
  {
    "text": "details and one thing that i need to do as i mentioned earlier in our prerequisites is that i need to",
    "start": "506160",
    "end": "512640"
  },
  {
    "text": "have the code deploy agent automatically installed on the machine so what i'm going to do here is i'm",
    "start": "512640",
    "end": "518640"
  },
  {
    "text": "going to use a user data script that i've already written uh what this will do is it downloads and installs the code deploy",
    "start": "518640",
    "end": "525839"
  },
  {
    "text": "agent onto the machine and all it's really doing here is i'm creating a temporary path i download the",
    "start": "525839",
    "end": "530880"
  },
  {
    "text": "code deploy agent from the location that we have published in the code deploy documentation",
    "start": "530880",
    "end": "536880"
  },
  {
    "text": "and then all i'm doing is i'm actually running the code deploy agent installer on the machine and i'm indicating that i'd like for the",
    "start": "536880",
    "end": "543279"
  },
  {
    "text": "user data to wait until that code deploy agent has completed successfully",
    "start": "543279",
    "end": "549760"
  },
  {
    "text": "all right as far as ebs volume size is concerned i'll go ahead and accept the default of 30",
    "start": "549760",
    "end": "555440"
  },
  {
    "text": "but it is going to ask me what security groups that i'd like to use now as i mentioned earlier we've got our",
    "start": "555440",
    "end": "561920"
  },
  {
    "text": "code deploy http security group and so that's the one i'm going to use for the instances if you recall",
    "start": "561920",
    "end": "568000"
  },
  {
    "text": "what this security group is going to do is allow access from our load balancer to call port 80 on any instances in the security",
    "start": "568000",
    "end": "574959"
  },
  {
    "text": "group uh and it's it's just showing a warning message i haven't opened up 33.89 which",
    "start": "574959",
    "end": "580080"
  },
  {
    "text": "is fine i'm not going to launch these with a key pair as a matter of fact right here i'm going to indicate that no",
    "start": "580080",
    "end": "585760"
  },
  {
    "text": "i am not going to use a key pair for these instances code deploy is going to be the only thing that will",
    "start": "585760",
    "end": "590959"
  },
  {
    "text": "be doing anything on these boxes so let's go ahead and create our launch configuration",
    "start": "590959",
    "end": "596480"
  },
  {
    "text": "all right we have our launch configuration now it's time for us to create our auto scaling group",
    "start": "596480",
    "end": "602320"
  },
  {
    "text": "so let's go ahead and create our auto scaling group to do that we'll navigate to the ec2 console",
    "start": "602320",
    "end": "607680"
  },
  {
    "text": "we'll scroll down to auto scaling groups and then we'll click on the create auto",
    "start": "607680",
    "end": "613519"
  },
  {
    "text": "scaling group button and you guessed it we're going to name it asp.net core demo and then you'll notice in this case",
    "start": "613519",
    "end": "620320"
  },
  {
    "text": "where it's asking us to pick a launch template but we can switch to launch configuration since i've defined mine as the launch",
    "start": "620320",
    "end": "625440"
  },
  {
    "text": "config i'll go ahead and switch to that and i'll pick our asp.net core demo launch configuration and you'll notice",
    "start": "625440",
    "end": "632079"
  },
  {
    "text": "it's got the omni id we picked it's got the instance type we chose and you'll also notice that it doesn't have the a key pair associated with it",
    "start": "632079",
    "end": "638959"
  },
  {
    "text": "so let's click next here then it's going to ask us what vpc we're going to launch these instances into",
    "start": "638959",
    "end": "644000"
  },
  {
    "text": "i'm going to choose the code deploy demo vpc that i've already created and i'd like these instances to go into",
    "start": "644000",
    "end": "650079"
  },
  {
    "text": "the private subnets i'll let the load balancer live in the public subnet and be accessible to the outside world",
    "start": "650079",
    "end": "657279"
  },
  {
    "text": "next i'll enable load balancing and then it's going to ask me you know what target group my load",
    "start": "657279",
    "end": "662640"
  },
  {
    "text": "balancer is using i'm going to select the asp.net core demo target group that we created earlier",
    "start": "662640",
    "end": "668160"
  },
  {
    "text": "and then i'll click next and then it's asking me some information about the the size and number of instances i'd",
    "start": "668160",
    "end": "674959"
  },
  {
    "text": "like let's go ahead and we'll set everything to two here so i'll say i'd like to have a minimum of two instances just to show",
    "start": "674959",
    "end": "681440"
  },
  {
    "text": "how it how good the play works uh and i won't bother setting up any scaling policies or whatnot i'll",
    "start": "681440",
    "end": "688000"
  },
  {
    "text": "just leave it at two uh now this is all where you could optionally",
    "start": "688000",
    "end": "693120"
  },
  {
    "text": "configure any kind of notifications if you want to receive sms or email notifications when auto scaling uh takes effect i'm gonna go ahead and",
    "start": "693120",
    "end": "699920"
  },
  {
    "text": "skip this here we'll move to next and then finally we have the chance to uh to add tags to our instances i'm",
    "start": "699920",
    "end": "706720"
  },
  {
    "text": "going to go ahead and add a name tag to our ec2 instances and we'll call this code deploy",
    "start": "706720",
    "end": "713519"
  },
  {
    "text": "demo and we'll click next here and finally we just review all the",
    "start": "713519",
    "end": "719120"
  },
  {
    "text": "choices that we've made up to this point and i will go ahead and click on create auto scaling group",
    "start": "719120",
    "end": "725120"
  },
  {
    "text": "all right now at this point what's happening is the auto scaling group is creating the ec2 instances that it needs to actually",
    "start": "725120",
    "end": "732399"
  },
  {
    "text": "create rather than make you folks wait for this process to complete i'm going to use the",
    "start": "732399",
    "end": "737920"
  },
  {
    "text": "magic of video editing and i will just see you on the other side after our ec2 instances have been created all right it's time to create",
    "start": "737920",
    "end": "744959"
  },
  {
    "text": "our code deploy application so to do that we'll click on code deploy to navigate to the code deploy dashboard",
    "start": "744959",
    "end": "750880"
  },
  {
    "text": "and we'll click on applications so let's create one and i think you know what name i'm going",
    "start": "750880",
    "end": "756720"
  },
  {
    "text": "to use for my application by this point and then we get to choose the platform we're going to use for our application",
    "start": "756720",
    "end": "763120"
  },
  {
    "text": "now this is a cool feature of code deploy i have the ability to deploy to ec2 instances or my on-premises machines",
    "start": "763120",
    "end": "770240"
  },
  {
    "text": "but it also natively supports the ability to deploy to amazon elastic container service ecs",
    "start": "770240",
    "end": "775760"
  },
  {
    "text": "or to aws lambda but in this case we're going to stick with the windows ec2 instances that we've already had our",
    "start": "775760",
    "end": "781279"
  },
  {
    "text": "auto scaling group create so we'll go ahead and click create application and then next it's going to ask us to",
    "start": "781279",
    "end": "787760"
  },
  {
    "text": "create a deployment group so let's go ahead and do that so next we'll want a deployment group",
    "start": "787760",
    "end": "794480"
  },
  {
    "text": "name and i think we know what i'm going to use and then next it's going to ask us for a service role and this is actually",
    "start": "794480",
    "end": "800880"
  },
  {
    "text": "i forgot to mention this in the prerequisites so let's go ahead and take care of this in order for code deploy to work it's",
    "start": "800880",
    "end": "806480"
  },
  {
    "text": "got to have a service role that grants it access to to invoke the code deploy apis so let's",
    "start": "806480",
    "end": "811680"
  },
  {
    "text": "go ahead and we'll navigate to identity and access management and we'll create a service role for code",
    "start": "811680",
    "end": "817279"
  },
  {
    "text": "deploy so we'll click on roles we'll create a new role and instead of",
    "start": "817279",
    "end": "822959"
  },
  {
    "text": "ec2 like we did for the instance profile we'll scroll down and we'll go to code deploy and then",
    "start": "822959",
    "end": "828000"
  },
  {
    "text": "it's going to give us what our options are here now in this case i'll just choose the vanilla code deploy you'll notice that there are two other service",
    "start": "828000",
    "end": "833600"
  },
  {
    "text": "roles one for ecs and one for lambda in this case i'm deploying to ec2 so i'll just choose the original",
    "start": "833600",
    "end": "840560"
  },
  {
    "text": "next it will prompt us for permissions and it'll already have the aws code deploy managed policy attached to it because it",
    "start": "840560",
    "end": "847199"
  },
  {
    "text": "is a code deployed role i'm going to skip the tags there's nothing i want to add here but then finally i'll have to give it a role name",
    "start": "847199",
    "end": "853760"
  },
  {
    "text": "so we'll call this code deploy service role",
    "start": "853760",
    "end": "859199"
  },
  {
    "text": "and i'll leave the description as it is so let's go ahead and click on create role",
    "start": "859680",
    "end": "865199"
  },
  {
    "text": "and great now we have our new service rule defined so let's go back to the code deploy console",
    "start": "865199",
    "end": "870639"
  },
  {
    "text": "and what i'll need to do is just kind of recycle the page here so it'll refresh so i'll click create deployment group again and now i",
    "start": "870639",
    "end": "878079"
  },
  {
    "text": "get to go ahead and choose our asp.net core demo for the deployment group but now when we choose service role our",
    "start": "878079",
    "end": "883440"
  },
  {
    "text": "brand shiny new code deploy service role is available to us next we're going to be prompted for the",
    "start": "883440",
    "end": "889440"
  },
  {
    "text": "deployment type now in this case we're interested in using the blue green deployment type rather than the in place",
    "start": "889440",
    "end": "894959"
  },
  {
    "text": "so let's go ahead and select blue green then it's going to ask me what set of",
    "start": "894959",
    "end": "900320"
  },
  {
    "text": "ec2 instances am i going to deploy the new revisions to as i mentioned earlier you can either use manually provisioned ec2 instances",
    "start": "900320",
    "end": "907120"
  },
  {
    "text": "or you can use an auto scaling group in this case we're going to go ahead and use that auto scaling group that we defined",
    "start": "907120",
    "end": "912880"
  },
  {
    "text": "and we'll choose the only one that's available to us asp.net core demo next it'll ask us how we'd like to",
    "start": "912880",
    "end": "920000"
  },
  {
    "text": "handle traffic rerouting since we have a load balancer attached to this i can either decide when i'm ready to",
    "start": "920000",
    "end": "926320"
  },
  {
    "text": "have the traffic go to the new instances or i can go ahead and let code deploy automatically reroute that traffic i'll",
    "start": "926320",
    "end": "932240"
  },
  {
    "text": "go ahead and use the default and let code deploy just automatically start sending traffic to those new instances after everything's been",
    "start": "932240",
    "end": "938000"
  },
  {
    "text": "properly installed i'll then get prompted for how i'd like",
    "start": "938000",
    "end": "943360"
  },
  {
    "text": "to handle termination of the ec2 instances that were in the original green group",
    "start": "943360",
    "end": "948399"
  },
  {
    "text": "what this allows me to do is if i need to i can re-point my traffic back to the original green instances just in",
    "start": "948399",
    "end": "954639"
  },
  {
    "text": "case something went wrong with the deployment i'll go ahead and have it terminate the original ec2 instances just because i",
    "start": "954639",
    "end": "961519"
  },
  {
    "text": "don't want to keep them around after i'm done with my deployment next it's going to ask me what",
    "start": "961519",
    "end": "967360"
  },
  {
    "text": "configuration i'd want to use and since i'm using blue green i'm going to go ahead and choose all at once you can also decide if you want to",
    "start": "967360",
    "end": "974560"
  },
  {
    "text": "deploy it to one instance at a time or half at a time or you can even create a custom deployment configuration for your",
    "start": "974560",
    "end": "980720"
  },
  {
    "text": "own custom percentages since this is blue green i'll just go ahead and have it deployed to all the ec2 instances in the blue group all at",
    "start": "980720",
    "end": "987360"
  },
  {
    "text": "once next it's asking how i'd like to",
    "start": "987360",
    "end": "992959"
  },
  {
    "text": "configure load balancing for the traffic going to this application we're going to go ahead and choose the target group that i already have in",
    "start": "992959",
    "end": "998720"
  },
  {
    "text": "place for the asp.net core demo load balancer and we're ready to go let's go ahead and",
    "start": "998720",
    "end": "1004160"
  },
  {
    "text": "click create deployment group okay so we have our deployment group we",
    "start": "1004160",
    "end": "1010959"
  },
  {
    "text": "have a code deploy application now it's time to deploy a new revision of our application to our blue green environment",
    "start": "1010959",
    "end": "1019120"
  },
  {
    "text": "all right so let's create our application revision for deployment so we're back in our asp.net application",
    "start": "1019279",
    "end": "1025199"
  },
  {
    "text": "and if you look here i've taken the liberty of already building the necessary infrastructure to deploy",
    "start": "1025199",
    "end": "1031438"
  },
  {
    "text": "our application in the interest of time now what code deploy expects is at the root of the zip file which is your",
    "start": "1031439",
    "end": "1037839"
  },
  {
    "text": "application revision there will be a special file called appspec.yaml this is a yaml file that",
    "start": "1037839",
    "end": "1043199"
  },
  {
    "text": "includes the instructions needed to deploy your application to your instances and in this case what you do is i've",
    "start": "1043199",
    "end": "1050080"
  },
  {
    "text": "specified that this is for the windows operating system you can alternately specify linux",
    "start": "1050080",
    "end": "1055679"
  },
  {
    "text": "and then what i'm telling it is you know where it's going to pull the application's files from in this",
    "start": "1055679",
    "end": "1060799"
  },
  {
    "text": "case i'm going to have a subdirectory in that zip file that's called app and",
    "start": "1060799",
    "end": "1066240"
  },
  {
    "text": "the destination where it will extract all the files in that app folder too is going to be a new folder on the",
    "start": "1066240",
    "end": "1072000"
  },
  {
    "text": "machine called app server and then what i'll do is i'm actually",
    "start": "1072000",
    "end": "1077039"
  },
  {
    "text": "hooking lifecycle events in the deployment process so i've got a before install where i'm",
    "start": "1077039",
    "end": "1083120"
  },
  {
    "text": "going to install the.net runtime i've got application stop this is the script that gets called if you ever",
    "start": "1083120",
    "end": "1089039"
  },
  {
    "text": "remove the application in preparation to install a new revision onto the machine",
    "start": "1089039",
    "end": "1094960"
  },
  {
    "text": "after install which really means after it copies the files i'm going to have it register a windows",
    "start": "1094960",
    "end": "1101760"
  },
  {
    "text": "service on the machine because after all i want my application to boot to run when the when the machine when the machine boots",
    "start": "1101760",
    "end": "1108320"
  },
  {
    "text": "and then i'm hooking the application start event and what i'm doing here is i'm actually starting the windows service and then",
    "start": "1108320",
    "end": "1114720"
  },
  {
    "text": "finally there's a life cycle event called validate service this is a really important lifecycle",
    "start": "1114720",
    "end": "1120160"
  },
  {
    "text": "hook because this is what allows you to cause the deployment to fail if your test doesn't pass",
    "start": "1120160",
    "end": "1126000"
  },
  {
    "text": "so it's a it's a safety check for you to ensure that your application is actually properly up",
    "start": "1126000",
    "end": "1131120"
  },
  {
    "text": "and running and not giving you a false positive on the install so let's take a look at what these scripts look like so you'll notice",
    "start": "1131120",
    "end": "1137039"
  },
  {
    "text": "they're all ps1 scripts you get for windows machines you can either use batch files or powershell scripts",
    "start": "1137039",
    "end": "1144000"
  },
  {
    "text": "and if we actually look at the scripts themselves in in order we'll look at install.net so this is",
    "start": "1144000",
    "end": "1150160"
  },
  {
    "text": "simply a powershell script that will download the latest version of the dotnet runtime from microsoft at the time of recording",
    "start": "1150160",
    "end": "1156720"
  },
  {
    "text": "this video that's 3.1.6 i'm checking to see if i've got that",
    "start": "1156720",
    "end": "1162240"
  },
  {
    "text": "version installed on the local machine if it isn't already installed then i will download it",
    "start": "1162240",
    "end": "1167600"
  },
  {
    "text": "from microsoft's website and then i will invoke the installer and i'm just telling the",
    "start": "1167600",
    "end": "1173600"
  },
  {
    "text": "start process commandlet to wait for the complete installation of it before it does anything else",
    "start": "1173600",
    "end": "1181120"
  },
  {
    "text": "once it verifies that the asp.net runtime is installed in the box then if to actually install the",
    "start": "1181120",
    "end": "1188240"
  },
  {
    "text": "application let's go ahead and move on to after install we'll take a look at application stop in just a moment",
    "start": "1188240",
    "end": "1193360"
  },
  {
    "text": "so the after install script which is register service this simply creates a new windows",
    "start": "1193360",
    "end": "1200000"
  },
  {
    "text": "service so i give it a name asp.net core demo that should be pretty familiar to you by now i'm telling it where it'll find the",
    "start": "1200000",
    "end": "1206400"
  },
  {
    "text": "binary that my service is using and since this is asp.net core i'm going to specify the url that the",
    "start": "1206400",
    "end": "1212400"
  },
  {
    "text": "service is actually going to run on and you may recall that i'm using a special",
    "start": "1212400",
    "end": "1218480"
  },
  {
    "text": "nuget package that allows me to run my applications as a service i've actually written my application so",
    "start": "1218480",
    "end": "1223600"
  },
  {
    "text": "that when i see the dash dash service command line switch it knows to start as a windows service",
    "start": "1223600",
    "end": "1230080"
  },
  {
    "text": "once i've actually got the service register on the machine then i just go ahead and ensure that port 80",
    "start": "1230080",
    "end": "1236320"
  },
  {
    "text": "on the machine is open so that external applications can reach the web application",
    "start": "1236320",
    "end": "1243440"
  },
  {
    "text": "next i'll go to application start which is start service very simple uh command powershell",
    "start": "1244000",
    "end": "1250480"
  },
  {
    "text": "commandlet all it's doing is just invoking start service on the newly registered asp.net core demo",
    "start": "1250480",
    "end": "1255840"
  },
  {
    "text": "service and then finally i've got my validate service and all i'm doing here is i'm calling",
    "start": "1255840",
    "end": "1261919"
  },
  {
    "text": "smoke test and this smoke test script simply just invokes a web request on port 80.",
    "start": "1261919",
    "end": "1267440"
  },
  {
    "text": "all i'm doing is just verifying that i'm actually responding to traffic in practice what you're probably going",
    "start": "1267440",
    "end": "1272559"
  },
  {
    "text": "to want to do is perhaps invoke a synthetic transaction or something that exercises a lot more",
    "start": "1272559",
    "end": "1278480"
  },
  {
    "text": "of your application to verify that it really properly got installed on the machine now the",
    "start": "1278480",
    "end": "1283919"
  },
  {
    "text": "last thing i wanted to point out was the application stop hook we kind of blew past that here and the reason for that is that this",
    "start": "1283919",
    "end": "1290960"
  },
  {
    "text": "actually gets gets invoked when it comes time to remove the application from the",
    "start": "1290960",
    "end": "1296159"
  },
  {
    "text": "application server and here's a really important distinction the application stop event",
    "start": "1296159",
    "end": "1302080"
  },
  {
    "text": "is always called on the previous revision so i'm writing an application stop here",
    "start": "1302080",
    "end": "1308799"
  },
  {
    "text": "where i'm removing the service uh what this will actually do is it it knows how to remove",
    "start": "1308799",
    "end": "1314000"
  },
  {
    "text": "the current revision of the application so what you don't want to do is write a",
    "start": "1314000",
    "end": "1319520"
  },
  {
    "text": "stop service that knows how to clean up the prior version you're always delivering the necessary script to remove the",
    "start": "1319520",
    "end": "1326080"
  },
  {
    "text": "current revision so always keep that in mind if you have more than one revision deployed to an ec2 instance",
    "start": "1326080",
    "end": "1332000"
  },
  {
    "text": "the stop service is always going to get called on the previous package not the package that's currently being installed",
    "start": "1332000",
    "end": "1338480"
  },
  {
    "text": "okay great so i've got my apps back i've got my scripts now what i want to do is actually create",
    "start": "1338480",
    "end": "1343760"
  },
  {
    "text": "the zip file which is my application revision and to help with that i've actually",
    "start": "1343760",
    "end": "1348960"
  },
  {
    "text": "created a powershell script called create deployment let's go ahead and walk through the steps of what's actually happening this will be exactly",
    "start": "1348960",
    "end": "1355039"
  },
  {
    "text": "what you do inside your own ci cd pipeline so first i'm calling.netpublish and i'm",
    "start": "1355039",
    "end": "1360480"
  },
  {
    "text": "just telling it that i want to use the release configuration next i'm creating a working folder that",
    "start": "1360480",
    "end": "1366400"
  },
  {
    "text": "will hold the contents of my application revision because remember we're going to zip this all up together so",
    "start": "1366400",
    "end": "1371440"
  },
  {
    "text": "i created a new folder it's called deployment and then i'll cd into that deployment folder i will copy",
    "start": "1371440",
    "end": "1378000"
  },
  {
    "text": "the contents of this code deploy folder the one that has my apps back in my scripts for the lifecycle hooks into the",
    "start": "1378000",
    "end": "1385280"
  },
  {
    "text": "root level of this deployment folder next i'll ensure that i have my app",
    "start": "1385280",
    "end": "1390400"
  },
  {
    "text": "folder because after all remember my apps back i'm telling it that i want to copy the contents of my application from an",
    "start": "1390400",
    "end": "1395520"
  },
  {
    "text": "app subfolder then i'm copying everything that got built into the published folder into that new",
    "start": "1395520",
    "end": "1401840"
  },
  {
    "text": "app subfolder and then finally i'm just ensuring that if i had a previous version of the zip file i want to blow it away because i",
    "start": "1401840",
    "end": "1408159"
  },
  {
    "text": "want to make sure it's a clean file and then i'm using the compress archive commandlet to actually zip everything together all",
    "start": "1408159",
    "end": "1415440"
  },
  {
    "text": "right so let's go ahead and execute the script so we'll call createdeployment.ps1 and what this is",
    "start": "1415440",
    "end": "1422080"
  },
  {
    "text": "doing now is generating a build of my application and then it is zipping everything up",
    "start": "1422080",
    "end": "1428559"
  },
  {
    "text": "into a new zip file and once the archival process is complete we'll just uh",
    "start": "1428559",
    "end": "1434720"
  },
  {
    "text": "crank this open inside explorer just so we can take a look at what the contents of this file looks like so we'll look at deployment deployment.zip",
    "start": "1434720",
    "end": "1442080"
  },
  {
    "text": "and as you can see uh i've got that app spec.yaml it's at the root of the folder of the zip file because remember because",
    "start": "1442080",
    "end": "1448080"
  },
  {
    "text": "deploy must see this file at the very base of your zip file i've got the scripts that includes all the lifecycle",
    "start": "1448080",
    "end": "1453600"
  },
  {
    "text": "hooks that i'm using to actually register the application and to smoke test it and then finally i've got",
    "start": "1453600",
    "end": "1459600"
  },
  {
    "text": "the contents of my publish folder to just deliver the actual binaries of the application",
    "start": "1459600",
    "end": "1465440"
  },
  {
    "text": "okay so now it's time for us to actually deliver this to code deploy",
    "start": "1465440",
    "end": "1472240"
  },
  {
    "text": "all right so let's actually deliver this application revision to our code deploy application",
    "start": "1472240",
    "end": "1478640"
  },
  {
    "text": "now code deploy expects the application revision to come from an s3 bucket so let's go ahead and create an s3",
    "start": "1478640",
    "end": "1484720"
  },
  {
    "text": "bucket that will host the revisions we're going to deliver so we'll navigate to s3",
    "start": "1484720",
    "end": "1491600"
  },
  {
    "text": "and we'll click on create bucket and we are going to go ahead and create",
    "start": "1491600",
    "end": "1498400"
  },
  {
    "text": "a bucket for the application revisions and we'll click next",
    "start": "1498400",
    "end": "1505200"
  },
  {
    "text": "and that's all we're going to really need to set we don't need to set public access or anything like that so we'll go",
    "start": "1505760",
    "end": "1510880"
  },
  {
    "text": "ahead and click next and create bucket and now we have a place to actually host our application revisions",
    "start": "1510880",
    "end": "1516880"
  },
  {
    "text": "so let's navigate to our asp.net core demo bucket and we're going to upload our deployment",
    "start": "1516880",
    "end": "1522799"
  },
  {
    "text": "file so i'm going to navigate to the folder that's actually got my",
    "start": "1522799",
    "end": "1530960"
  },
  {
    "text": "there we go asp.net core deployment samples deployment deployment.zip and i'll go ahead and",
    "start": "1532080",
    "end": "1538799"
  },
  {
    "text": "click on the upload button and in just a moment my revision will be",
    "start": "1538799",
    "end": "1545200"
  },
  {
    "text": "ready to deploy to codeplay okay great so let's go ahead and click on services and we'll navigate to code deploy",
    "start": "1545200",
    "end": "1553360"
  },
  {
    "text": "and we'll go ahead and find our application so asp.net core demo and we'll click on the deployments tab",
    "start": "1553840",
    "end": "1560400"
  },
  {
    "text": "and now it's time to create our very first deployment to this application so we'll go ahead and click",
    "start": "1560400",
    "end": "1565600"
  },
  {
    "text": "on create deployment and it's going to ask us what deployment",
    "start": "1565600",
    "end": "1570880"
  },
  {
    "text": "group we want to use we'll use our asp.net core demo next it's going to ask us what revision",
    "start": "1570880",
    "end": "1576159"
  },
  {
    "text": "we want to deploy our application to in this case we have no previous revisions so we'll go ahead and give it the path to the revision we just created",
    "start": "1576159",
    "end": "1584480"
  },
  {
    "text": "all right so we'll paste this here and next it's going to ask for a deployment description and we'll go ahead and call",
    "start": "1584480",
    "end": "1589919"
  },
  {
    "text": "this first deployment and then it's going to ask us if we want to specify any additional",
    "start": "1589919",
    "end": "1595840"
  },
  {
    "text": "behaviorist settings we're going to go ahead and leave it as the defaults here and we're going to click create deployment",
    "start": "1595840",
    "end": "1602000"
  },
  {
    "text": "so we've got our deployment and now what it's doing is it's actually deploying the application",
    "start": "1602000",
    "end": "1607440"
  },
  {
    "text": "to some new ec2 instances that it's current going to create let's go ahead and refresh here for a moment and so you'll see here",
    "start": "1607440",
    "end": "1614640"
  },
  {
    "text": "now there are two ec2 instances these are not the ec2 instances our auto scaling group originally created let's",
    "start": "1614640",
    "end": "1620240"
  },
  {
    "text": "go take a quick look at what that looks like i'm going to duplicate this tab",
    "start": "1620240",
    "end": "1625360"
  },
  {
    "text": "and we'll navigate to the ec2 service and if we look at our instance list we",
    "start": "1625440",
    "end": "1632320"
  },
  {
    "text": "now see there are a couple of new ec2 instances that are being launched and the reason this is happening is",
    "start": "1632320",
    "end": "1638240"
  },
  {
    "text": "because under the covers what could deploy blue green did was take our initial auto scaling group",
    "start": "1638240",
    "end": "1643919"
  },
  {
    "text": "and it effectively cloned it so if you look here we now have a new",
    "start": "1643919",
    "end": "1649279"
  },
  {
    "text": "auto scaling group it's called code deploy underscore and then the name followed by the deployment id",
    "start": "1649279",
    "end": "1654720"
  },
  {
    "text": "and so what's going to happen is code deploy is going to wait for the instances to come up and",
    "start": "1654720",
    "end": "1660000"
  },
  {
    "text": "running the code deploy agent got installed by our launch configuration if you recall and once the instance is up and running",
    "start": "1660000",
    "end": "1666799"
  },
  {
    "text": "and the code deploy agent picks up the new revision it will then install that revision onto these instances okay",
    "start": "1666799",
    "end": "1673360"
  },
  {
    "text": "so what i'll do now is go to view the events on one of these ec2 instances and it's",
    "start": "1673360",
    "end": "1679120"
  },
  {
    "text": "going to take a little while for the ec2 inches to excuse me ec2 instances to launch so rather than make",
    "start": "1679120",
    "end": "1685200"
  },
  {
    "text": "you sit and wait for the deployment process to complete i'm going to use the magic of video editing",
    "start": "1685200",
    "end": "1691120"
  },
  {
    "text": "and i'll see you on the other side all right so our ec2 instances have been",
    "start": "1691120",
    "end": "1696320"
  },
  {
    "text": "created and now we're starting to reroute our traffic and let's actually take a quick look at the status of the",
    "start": "1696320",
    "end": "1701600"
  },
  {
    "text": "deployment inside the console so as you can see what's already happened is it's provisioned our ec2 instances",
    "start": "1701600",
    "end": "1708240"
  },
  {
    "text": "we've created it finished creating them and installing they could deploy agent on them to the user data",
    "start": "1708240",
    "end": "1713520"
  },
  {
    "text": "and it has already installed the application on these new ec2 instances and right now",
    "start": "1713520",
    "end": "1719440"
  },
  {
    "text": "what's actually happening is it's in the process of repointing the load balancer from the ec2 instances that were in that original",
    "start": "1719440",
    "end": "1725679"
  },
  {
    "text": "auto scaling group to the ones that were just created now this is going to take a couple more minutes here so i'm going to go ahead",
    "start": "1725679",
    "end": "1731840"
  },
  {
    "text": "and fast forward through that as well all right so it is finished reconfiguring our load balancer so that",
    "start": "1731840",
    "end": "1738240"
  },
  {
    "text": "it's pointing in our new ec2 instances let's go ahead and take a look at what our application looks like on our",
    "start": "1738240",
    "end": "1744240"
  },
  {
    "text": "new boxes so if we go to our load balancers",
    "start": "1744240",
    "end": "1750240"
  },
  {
    "text": "and we'll click on the asp.net core demo and we'll copy that dns name and we'll open up a new browser tab to",
    "start": "1751600",
    "end": "1756880"
  },
  {
    "text": "navigate to the application and there you go our application is now being served from the new ec2 instances",
    "start": "1756880",
    "end": "1762640"
  },
  {
    "text": "that were created by our blue green deployment all right so let's review what we went",
    "start": "1762640",
    "end": "1768080"
  },
  {
    "text": "over in this video first we took a look at how code deploy works and how you can use it",
    "start": "1768080",
    "end": "1773279"
  },
  {
    "text": "to automatically install your applications on ec2 or even on-premises machines as part of this you can write scripts",
    "start": "1773279",
    "end": "1780320"
  },
  {
    "text": "that are run as part of your code deploy deployment and not only can they help configure the machines they can also do things like",
    "start": "1780320",
    "end": "1786880"
  },
  {
    "text": "register demons or services if you want to have your applications running whenever the machine is running",
    "start": "1786880",
    "end": "1792880"
  },
  {
    "text": "you also have the ability to have a validation step that will confirm that your application is actually working properly before you",
    "start": "1792880",
    "end": "1799360"
  },
  {
    "text": "will allow the deployment to indicate whether it succeeded or failed and by virtue of using that you can",
    "start": "1799360",
    "end": "1806000"
  },
  {
    "text": "actually set up what are called blue green deployments where it will fully install your application",
    "start": "1806000",
    "end": "1811279"
  },
  {
    "text": "on new ec2 instances it will validate that the service is actually running on the instance and only after it",
    "start": "1811279",
    "end": "1818159"
  },
  {
    "text": "successfully indicates that it was working properly it will then start sending traffic to the new instances and it can even",
    "start": "1818159",
    "end": "1824799"
  },
  {
    "text": "decommission the old instances for you last thing i just wanted to point out was that a lot of aws ci cd services",
    "start": "1824799",
    "end": "1832880"
  },
  {
    "text": "such as code pipeline natively support code deploy and what this allows you to do is",
    "start": "1832880",
    "end": "1838159"
  },
  {
    "text": "build a deployment pipeline where not only will you have your code downloaded and built using services like code commit and code",
    "start": "1838159",
    "end": "1844960"
  },
  {
    "text": "build but you can even have a code pipeline automatically deliver the build artifacts to your code deploy",
    "start": "1844960",
    "end": "1851440"
  },
  {
    "text": "applications for deployment on your ec2 instances",
    "start": "1851440",
    "end": "1856480"
  },
  {
    "text": "thanks for watching i hope this video was useful to you and we cannot wait to see what you build on aws",
    "start": "1856480",
    "end": "1864070"
  },
  {
    "text": "[Music] you",
    "start": "1864070",
    "end": "1869600"
  }
]