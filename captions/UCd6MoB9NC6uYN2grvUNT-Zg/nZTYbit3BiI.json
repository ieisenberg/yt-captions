[
  {
    "start": "0",
    "end": "28000"
  },
  {
    "text": "go ahead can you hear me all right I'm going to go ahead and get started uh thank you all for joining",
    "start": "2879",
    "end": "8639"
  },
  {
    "text": "us today on the uh best practices for handling a 20 uh times traffic Spike um",
    "start": "8639",
    "end": "14559"
  },
  {
    "text": "my name is Alex Dunlap I'm the general manager of Amazon's uh cloudfront uh product or cloudfront service uh so and",
    "start": "14559",
    "end": "21960"
  },
  {
    "text": "I'm going to be joined uh later by Christof from uh the scrible live team I'm going to start out with a true",
    "start": "21960",
    "end": "28599"
  },
  {
    "start": "28000",
    "end": "28000"
  },
  {
    "text": "story um kind of set the stage for what we're going to be talking about here today um there was a popular Entertainer",
    "start": "28599",
    "end": "34600"
  },
  {
    "text": "a couple years ago they wanted to sell tickets for an upcoming tour date and uh",
    "start": "34600",
    "end": "39879"
  },
  {
    "text": "they put up a website um they uh then emailed all of their customers at the",
    "start": "39879",
    "end": "45520"
  },
  {
    "text": "same time and they said come check out my website where you can see all my upcoming tour dates and what do you",
    "start": "45520",
    "end": "51559"
  },
  {
    "text": "think happened I was one of these customers I went to the website and this Entertainer or probably his it firm had",
    "start": "51559",
    "end": "57760"
  },
  {
    "text": "not prepared for a uh this bike in traffic that resulted uh so no one was",
    "start": "57760",
    "end": "63000"
  },
  {
    "text": "able to view the website um so that's what we're going to talk about today and I'll start out with a kind of little audience participation um how many folks",
    "start": "63000",
    "end": "70479"
  },
  {
    "text": "have had to prepare for a just show hands uh had to prepare for a big online",
    "start": "70479",
    "end": "76119"
  },
  {
    "text": "event let see most of you how many folks have had maybe a spike that they didn't",
    "start": "76119",
    "end": "81600"
  },
  {
    "text": "anticipate so few few less and then how many folks have had outages or performance impacts from these from",
    "start": "81600",
    "end": "88759"
  },
  {
    "text": "these events a fair number once again so that's what we're talking about today um",
    "start": "88759",
    "end": "94320"
  },
  {
    "text": "we're going to do three things specifically uh the first thing I'm going to go through a little the background kind of the types of events",
    "start": "94320",
    "end": "99640"
  },
  {
    "text": "that we're talking about and some of the um uh uh circumstances that might result in",
    "start": "99640",
    "end": "106240"
  },
  {
    "text": "these uh traffic spikes um then I'm going to do a presentation or my part of the presentation on four best practices",
    "start": "106240",
    "end": "113280"
  },
  {
    "text": "uh for managing these events um I'm going to go deep into the first two I'll go uh into um a a little bit of a live",
    "start": "113280",
    "end": "120479"
  },
  {
    "text": "demo uh in terms of uh how you can use caching in order to protect your websites against traffic spikes and then",
    "start": "120479",
    "end": "126680"
  },
  {
    "text": "we'll go deep onto some cash control headers uh what I hope you're going to leave here today is a a more detailed",
    "start": "126680",
    "end": "132959"
  },
  {
    "text": "understanding of how to set cash control headers effectively in order to um get ready for these spikes even if you don't",
    "start": "132959",
    "end": "139280"
  },
  {
    "text": "know they're coming and then I'll briefly touch two other best practices that I think are important um but I",
    "start": "139280",
    "end": "145080"
  },
  {
    "text": "probably don't have the time to go as deep into uh during this session but just leave you uh to think about two",
    "start": "145080",
    "end": "150160"
  },
  {
    "text": "other things and then third sort of item C on the the slide I'm then going to turn things over to uh Kristoff from",
    "start": "150160",
    "end": "156599"
  },
  {
    "text": "scribble live uh scribble live is a customer who uh for whom these spikes are a everyday part of their",
    "start": "156599",
    "end": "163640"
  },
  {
    "text": "business so let's go ahead and get started um talk about kind of the types of events that would cause 20x traffic",
    "start": "163640",
    "end": "170480"
  },
  {
    "text": "spikes um the first type of event and I kind of alluded to this is an anticipated search so these are uh",
    "start": "170480",
    "end": "177440"
  },
  {
    "text": "events that you can kind of predict you know that they're coming maybe it's a product launch um something along those lines and the key questions to ask is",
    "start": "177440",
    "end": "184400"
  },
  {
    "text": "you know have we predicted how much traffic to expect and then have we set up our resources appropriately and that",
    "start": "184400",
    "end": "190840"
  },
  {
    "text": "compares against the second uh type of event which is uh something that goes viral so this could be something a news",
    "start": "190840",
    "end": "197959"
  },
  {
    "text": "article that gets picked up by a major news Outlet it could be something that gets popular on social media or Twitter",
    "start": "197959",
    "end": "203720"
  },
  {
    "text": "um we've also seen varieties of these it's unexpected Spike that when you unravel it actually turned out to be a",
    "start": "203720",
    "end": "209360"
  },
  {
    "text": "partner who was doing a load test against your uh application stack that you didn't know about and the big thing",
    "start": "209360",
    "end": "215720"
  },
  {
    "text": "I want you to take away is um it kind of beg the question if you don't anticipate the traffic how do you plan for it um",
    "start": "215720",
    "end": "223239"
  },
  {
    "text": "but the big thing I want you to take away is that regardless of type the preparation the steps you take in order",
    "start": "223239",
    "end": "228840"
  },
  {
    "text": "to get ready for traffic surges are independent of whether they're expected or unexpected and the most uh common",
    "start": "228840",
    "end": "236040"
  },
  {
    "text": "failure points are going to be incorrect caching policies and An unscaled Origin",
    "start": "236040",
    "end": "241239"
  },
  {
    "text": "so that's where we'll spend most of our time talking about the um the best",
    "start": "241239",
    "end": "246799"
  },
  {
    "text": "practices so here's a very you know hugely uh simplified architecture uh",
    "start": "247079",
    "end": "253360"
  },
  {
    "text": "we've got clients accessing an application that runs on hosts over a network and here I've said okay let's",
    "start": "253360",
    "end": "258799"
  },
  {
    "text": "say we have four types of um clients Each of which are driving 25,000",
    "start": "258799",
    "end": "264199"
  },
  {
    "text": "requests per second and five uh gigabits per second 5,000 megabits per second of traffic and um when you have a flash",
    "start": "264199",
    "end": "272199"
  },
  {
    "text": "crowd two things can happen the first thing that can happen is your host can get overwhelmed um so a high rate of",
    "start": "272199",
    "end": "278639"
  },
  {
    "text": "request can happen faster than your application can scale and this can lead to 500 series errors for your customers",
    "start": "278639",
    "end": "285360"
  },
  {
    "text": "the second thing that can happen is your network can get overwhelmed and basically what happens there is you can",
    "start": "285360",
    "end": "290560"
  },
  {
    "text": "s saturate network interfaces at various layers in the in the application stack or in the network this can create uh",
    "start": "290560",
    "end": "297400"
  },
  {
    "text": "retransmits and basically Browns out um Browns out your ability to send traffic to your customers um in both",
    "start": "297400",
    "end": "305199"
  },
  {
    "text": "these cases there's an impact to both latency and availability so the best case your your application's going to",
    "start": "305199",
    "end": "310240"
  },
  {
    "text": "slow down and your customers are just going to get latency but worst case some users won't be able to get uh content at",
    "start": "310240",
    "end": "316520"
  },
  {
    "text": "all so let's take some best practices and look at what these um what you can",
    "start": "316520",
    "end": "322080"
  },
  {
    "text": "do to help get to get ready for these events even if you don't know that they're coming the first and by far the most",
    "start": "322080",
    "end": "329319"
  },
  {
    "text": "basic one is to use caching so caching protects your servers uh so here I've",
    "start": "329319",
    "end": "335600"
  },
  {
    "start": "334000",
    "end": "334000"
  },
  {
    "text": "put in the same diagram a cach layer uh typically a 10:1 cache hit ratio is you",
    "start": "335600",
    "end": "341560"
  },
  {
    "text": "know is a rule of thumb your mileage will vary some applications will do far better than this some applications won't",
    "start": "341560",
    "end": "347360"
  },
  {
    "text": "do as well um but you can see that if by putting in a cach layer you can cut by a",
    "start": "347360",
    "end": "352600"
  },
  {
    "text": "factor of 10 the amount of requests per second that hit your servers so here rather than having 25 plus 25 plus 25 if",
    "start": "352600",
    "end": "359880"
  },
  {
    "text": "100,000 requests per second hitting your servers you're only needing 10,000 and by same uh by the same method",
    "start": "359880",
    "end": "367319"
  },
  {
    "start": "366000",
    "end": "366000"
  },
  {
    "text": "uh cashing protects your network so again because the bites are distributed from the edge of your network um again I",
    "start": "367319",
    "end": "373680"
  },
  {
    "text": "work with the CDN business at Amazon so this is really what we do we push that traffic out to the edge of the network",
    "start": "373680",
    "end": "379840"
  },
  {
    "text": "and so the the the um the bites never make it inside your network and don't",
    "start": "379840",
    "end": "385319"
  },
  {
    "text": "cause that congestion or retransmits um you can put cach up and down your stack uh at the database tier",
    "start": "385319",
    "end": "392880"
  },
  {
    "text": "um a lot of customers use Amazon elasticache in front of their database access layer um there's a bunch of",
    "start": "392880",
    "end": "398520"
  },
  {
    "text": "different options around using squid or varnish to do a caching in front of your origin and what I do is the Amazon",
    "start": "398520",
    "end": "404720"
  },
  {
    "text": "cloudfront business allows you to provide caching at at the at the edge so",
    "start": "404720",
    "end": "409880"
  },
  {
    "text": "let's just do a very simple live demo which is always a little bit dangerous but we'll give it a try and what I've",
    "start": "409880",
    "end": "418000"
  },
  {
    "text": "done is oh you can't see it so let me try",
    "start": "418280",
    "end": "423840"
  },
  {
    "text": "to okay uh so what I've done is I've created a very simple page um it's just",
    "start": "431440",
    "end": "437120"
  },
  {
    "text": "an image little text the Amazon logo and it's running on a single ec2 instance",
    "start": "437120",
    "end": "443479"
  },
  {
    "text": "and then what I've done is I've wrapped it in a uh wedge uh web page uh testing",
    "start": "443479",
    "end": "449720"
  },
  {
    "text": "script and so I can run the script and what it's going to do is it's going to analyze my traffic",
    "start": "449720",
    "end": "456039"
  },
  {
    "text": "pattern and it's going to say okay how long did it take and it will generate a",
    "start": "456039",
    "end": "462879"
  },
  {
    "text": "report that I can never find it that shows um how long it took to read I",
    "start": "462879",
    "end": "470479"
  },
  {
    "text": "can't read this but uh somewhere up there there is the time 1.2",
    "start": "470479",
    "end": "479240"
  },
  {
    "text": "Anton my your eyes are better than mine what where is the 32 320 milliseconds okay great so",
    "start": "479800",
    "end": "487039"
  },
  {
    "text": "now Anton is going to take that same page and turn on a uh flash crab and so",
    "start": "487039",
    "end": "493800"
  },
  {
    "text": "what we're going to do is use ec2 to generate some load against the same U same page and then I'm just going to re",
    "start": "493800",
    "end": "499400"
  },
  {
    "text": "re rerun the test so give me the thumbs up okay so now we're having load and let",
    "start": "499400",
    "end": "505400"
  },
  {
    "text": "me rerun the test and this may not finish it actually kind of depends on how much",
    "start": "505400",
    "end": "511280"
  },
  {
    "text": "load we put on it um but we are very deliberately trying to overwhelm the",
    "start": "511280",
    "end": "517039"
  },
  {
    "text": "server uh with a high rate of requests",
    "start": "517039",
    "end": "522279"
  },
  {
    "text": "and again okay so here's the page and you can see that the",
    "start": "522360",
    "end": "528320"
  },
  {
    "text": "speed um I still can't read it 4.9 4.9 seconds so we've gone from 320",
    "start": "528320",
    "end": "534399"
  },
  {
    "text": "milliseconds with no load to 4.9 seconds with load so let's go ahead and move",
    "start": "534399",
    "end": "541079"
  },
  {
    "text": "onward to the uh to the next phase um what this is is the same page only now",
    "start": "541079",
    "end": "547120"
  },
  {
    "text": "I've put cloudfront caching in front of it and again I'll run it without",
    "start": "547120",
    "end": "553279"
  },
  {
    "text": "load and here we go",
    "start": "558920",
    "end": "564279"
  },
  {
    "text": "um all right read it off 800 Mill 800 milliseconds and now let's go ahead and",
    "start": "564279",
    "end": "569360"
  },
  {
    "text": "turn the load on give it a",
    "start": "569360",
    "end": "573320"
  },
  {
    "text": "second 600 600 milliseconds so in that case we actually did better the luck of",
    "start": "587079",
    "end": "592440"
  },
  {
    "text": "caching in the internet says um we actually did better the second request",
    "start": "592440",
    "end": "597480"
  },
  {
    "text": "um where I was hitting a warm cache versus the even though there wi load um so that's a good example of how you can",
    "start": "597480",
    "end": "603480"
  },
  {
    "text": "use uh caching effectively um or how caching can help protect your origin and",
    "start": "603480",
    "end": "608760"
  },
  {
    "text": "protect the availability of your website against uh spikes and traffic um so let's close",
    "start": "608760",
    "end": "618279"
  },
  {
    "text": "this uh go on to the next one um now caching is also important to use",
    "start": "619000",
    "end": "624160"
  },
  {
    "text": "correctly um so uh want to talk a little bit about six cache control headers um",
    "start": "624160",
    "end": "631240"
  },
  {
    "start": "629000",
    "end": "629000"
  },
  {
    "text": "that uh you may use in order to get the caching semantics that you want out of your application",
    "start": "631240",
    "end": "638200"
  },
  {
    "text": "um so the most basic cach control header is an expires header and what an expires",
    "start": "638200",
    "end": "643600"
  },
  {
    "start": "639000",
    "end": "639000"
  },
  {
    "text": "header does this is something you said as an HTP header and you say a cach is free to trust the cached version of this",
    "start": "643600",
    "end": "650200"
  },
  {
    "text": "content until this specific point in time so in this slide I've set an example of you know Tuesday November 4th",
    "start": "650200",
    "end": "657200"
  },
  {
    "text": "at 719 GMT um up until that point in time a cach is free to serve a cached",
    "start": "657200",
    "end": "664240"
  },
  {
    "text": "copy without checking in with your origin after that point in time the",
    "start": "664240",
    "end": "670360"
  },
  {
    "text": "cache needs to check in with your origin to see if it has a new version um now you'll notice I'm being a little",
    "start": "670360",
    "end": "675959"
  },
  {
    "text": "deliberate in how I say that I'm not saying that the cash needs to go back and get a new version from your origin",
    "start": "675959",
    "end": "681959"
  },
  {
    "text": "most Cashers won't do that what they will do is make what's called an if modified sense call um so they will say",
    "start": "681959",
    "end": "687639"
  },
  {
    "text": "heyy I've got a version of this object the ker says it expired on Tuesday you",
    "start": "687639",
    "end": "693920"
  },
  {
    "text": "know the 4th of November at 7:19 a.m. is this version the safe to serve to end",
    "start": "693920",
    "end": "699200"
  },
  {
    "text": "users and the origin will respond with one of two things it will either say Yes",
    "start": "699200",
    "end": "704279"
  },
  {
    "text": "um that uh that object is safe to serve to end users that's what's called a 304 not modified um or it will say no I've",
    "start": "704279",
    "end": "711519"
  },
  {
    "text": "got a new one and here it is it give you 200 response and in that case the cash uh is um replaces the version that it",
    "start": "711519",
    "end": "718399"
  },
  {
    "text": "has with the one it received with the origin and serves the replaced version uh to your customers um so the upside of",
    "start": "718399",
    "end": "725160"
  },
  {
    "text": "all of this is that even if you're um uh even if you have a stale",
    "start": "725160",
    "end": "730440"
  },
  {
    "text": "piece of content in the cache uh caching can still protect your origin at least from the bytes load although request",
    "start": "730440",
    "end": "735519"
  },
  {
    "text": "will make it back to the origin um but you will not have to bring an object uh from the origin to the cache uh unless",
    "start": "735519",
    "end": "742399"
  },
  {
    "text": "the object has changed so a little bit more common than expires what we see customers doing is",
    "start": "742399",
    "end": "748720"
  },
  {
    "text": "setting the max age header and so a um max age rather than setting an absolute",
    "start": "748720",
    "end": "755040"
  },
  {
    "text": "point in time sets a relative period of time in seconds so in this example uh",
    "start": "755040",
    "end": "760120"
  },
  {
    "text": "the the max age of 60 says a cache can keep this object in Cache for up to 60",
    "start": "760120",
    "end": "766279"
  },
  {
    "text": "seconds without checking back in with me after 60 seconds you need to come back and you need to say hey do I have a new",
    "start": "766279",
    "end": "771920"
  },
  {
    "text": "version or not now a variant on this uh that some people don't know about is",
    "start": "771920",
    "end": "777519"
  },
  {
    "text": "there's actually two flavors of Mac max age there is a general max age that is used um by both the browser the client",
    "start": "777519",
    "end": "785480"
  },
  {
    "text": "and the server um if uh this one I'm about to talked about isn't isn't present um SM max age is for shared",
    "start": "785480",
    "end": "793279"
  },
  {
    "text": "caches I think of it as server max age but I think it's technically supposed to be S for shared um but it's a separate",
    "start": "793279",
    "end": "799600"
  },
  {
    "text": "cache control header that shared caches like a CDN uh honor if um if it's",
    "start": "799600",
    "end": "804720"
  },
  {
    "text": "present um so what this allows you to do is set different caching policies uh for",
    "start": "804720",
    "end": "809760"
  },
  {
    "text": "shared caches like cloudfront versus client caches that you might have in end user browser um so the there's a",
    "start": "809760",
    "end": "816920"
  },
  {
    "text": "difference between shared caches and uh browser caches in that browser caches are hard to invalidate so once you get",
    "start": "816920",
    "end": "823440"
  },
  {
    "text": "something in a browser cache um there's not really a way of getting it out of there until the object expires um in",
    "start": "823440",
    "end": "829760"
  },
  {
    "text": "contrast assured cach like cloudfront has an invalidation call that allows you to purge objects from the cash prior to",
    "start": "829760",
    "end": "835600"
  },
  {
    "text": "their expiration so what we see some customers do is setting a shorter period of time uh on the browser than they will",
    "start": "835600",
    "end": "842000"
  },
  {
    "text": "on the server so they would set a short max age of say 1 second in the in the browser and then a longer max age uh on",
    "start": "842000",
    "end": "848759"
  },
  {
    "text": "on the server side so there are also cache control headers that you can set in order to",
    "start": "848759",
    "end": "855440"
  },
  {
    "text": "control how um objects are written to disk and they're all similar but they",
    "start": "855440",
    "end": "861040"
  },
  {
    "text": "behave slightly differently uh so one is called private and uh what this allows",
    "start": "861040",
    "end": "867079"
  },
  {
    "text": "customers to do is to say sorry yeah would say um I don't want any shared",
    "start": "867079",
    "end": "873000"
  },
  {
    "text": "caches to store my object to disk so if you've got a piece of information that's specific to a user maybe it's sensitive",
    "start": "873000",
    "end": "879839"
  },
  {
    "text": "it's you can say hey it's you can set the cach control uh private header to",
    "start": "879839",
    "end": "885440"
  },
  {
    "text": "say hey um browsers you can cach this to disk but I don't want to store it in um",
    "start": "885440",
    "end": "891839"
  },
  {
    "text": "in any uh any shared cash uh no cash is a uh is different",
    "start": "891839",
    "end": "898560"
  },
  {
    "text": "than that what no cache does is it says um the shared caches like a CDN can",
    "start": "898560",
    "end": "904519"
  },
  {
    "text": "store a file to disk but should check in with the origin every time um every time",
    "start": "904519",
    "end": "910560"
  },
  {
    "text": "we get a request uh so there there it is allowed to Cache the object um but it",
    "start": "910560",
    "end": "915720"
  },
  {
    "text": "will do a if modified sense check on every request that it gets uh so you",
    "start": "915720",
    "end": "920880"
  },
  {
    "text": "would want to use private if you have something sensitive to a user uh versus no cache which is something you're just",
    "start": "920880",
    "end": "926399"
  },
  {
    "text": "worried about it changing and then finally uh there is a no store header um",
    "start": "926399",
    "end": "932240"
  },
  {
    "text": "what this says is that no cache whether client or server browser or shared cache uh can store the object to a a",
    "start": "932240",
    "end": "939959"
  },
  {
    "text": "non-volatile storage so basically the the CDN or any other cache can't write the object to dis whatsoever uh nor can",
    "start": "939959",
    "end": "946560"
  },
  {
    "text": "the nor can the browser so those are six headers that you can use uh in order to",
    "start": "946560",
    "end": "951959"
  },
  {
    "text": "control how caches uh access your content and provide that shielding that we saw in the demo um I'm going to on to",
    "start": "951959",
    "end": "959440"
  },
  {
    "text": "briefly two other best practices I'm not going to talk about these in a whole lot of depth uh Kristoff covers some of",
    "start": "959440",
    "end": "964519"
  },
  {
    "text": "these in his portion of the presentation but they're important to keep in mind um",
    "start": "964519",
    "end": "969959"
  },
  {
    "text": "as as as you build your application um best practice number three is scaling your origin and by far the way that we",
    "start": "969959",
    "end": "976480"
  },
  {
    "text": "recommend most often here at AWS is using autoscaling uh so without you know",
    "start": "976480",
    "end": "981519"
  },
  {
    "text": "doing a whole uh talk on autoscaling uh what autoscaling allows you to do is create triggers um based on scale up or",
    "start": "981519",
    "end": "988360"
  },
  {
    "text": "scale down events that allow you to add ec2 instances um to your application",
    "start": "988360",
    "end": "994360"
  },
  {
    "text": "Fleet in order to ensure that there is enough um server capacity host capacity",
    "start": "994360",
    "end": "1000240"
  },
  {
    "text": "in order to uh serve serve your traffic uh this all happens automatically based",
    "start": "1000240",
    "end": "1005360"
  },
  {
    "text": "on events that you can Define and Kristoff will talk a little bit about some of the criteria that he uses in order to trigger his Autos Skilling",
    "start": "1005360",
    "end": "1013040"
  },
  {
    "text": "events and then the last one I want to talk about um it's a little bit like AWS",
    "start": "1013040",
    "end": "1018519"
  },
  {
    "text": "we say Hey you know let us manage the undifferentiated heavy lifting of your business while you focus on what makes",
    "start": "1018519",
    "end": "1024400"
  },
  {
    "text": "your business special um I kind of try to apply this to your origin as well uh",
    "start": "1024400",
    "end": "1029438"
  },
  {
    "text": "let your origin Focus only on the work that it needs to do and basically what that means in practice is to let sta",
    "start": "1029439",
    "end": "1036558"
  },
  {
    "text": "content sit in S3 as your origin um you can use a feature called cloudfront Cash",
    "start": "1036559",
    "end": "1044000"
  },
  {
    "text": "behaviors which will send um based on a path pattern uh traffic to multiple",
    "start": "1044000",
    "end": "1049200"
  },
  {
    "start": "1046000",
    "end": "1046000"
  },
  {
    "text": "Origins for the same domain so you might set up dubdub du. alex.com as a cloudfront distribution and say if it's",
    "start": "1049200",
    "end": "1055960"
  },
  {
    "text": "SL static I want to send the traffic to my S3 based origin for my static content",
    "start": "1055960",
    "end": "1062360"
  },
  {
    "text": "this removes all of the heavy lifting of hand of managing static objects from",
    "start": "1062360",
    "end": "1067520"
  },
  {
    "text": "your origin and it allows your origin to focus on whatever it is that makes your origin special um and you can send the",
    "start": "1067520",
    "end": "1074360"
  },
  {
    "text": "rest of the traffic back to your origin as per usual",
    "start": "1074360",
    "end": "1079480"
  },
  {
    "text": "uh so with that I'm going to turn things over to Kristoff Kristoff is from scribble live and he's going to talk about how he uses these uh best",
    "start": "1079480",
    "end": "1085880"
  },
  {
    "text": "practices in practice thanks",
    "start": "1085880",
    "end": "1089919"
  },
  {
    "text": "Alex can you guys hear me",
    "start": "1093240",
    "end": "1097200"
  },
  {
    "text": "okay okay uh hello everyone uh I'm Chris I'm an infastructure engineer at scrib",
    "start": "1098799",
    "end": "1104559"
  },
  {
    "text": "live I've been with the company for close to 5 years now and I've worked and everything from designing our client",
    "start": "1104559",
    "end": "1111080"
  },
  {
    "text": "interface to um moving our infrastructure into the cloud and today I'll talk about how we designer",
    "start": "1111080",
    "end": "1117200"
  },
  {
    "text": "application and infrastructure to deal with large traffic",
    "start": "1117200",
    "end": "1122000"
  },
  {
    "text": "spikes so I'll cover three uh main topics today what scribble live is and how our clients use it how we use AWS to",
    "start": "1122840",
    "end": "1130159"
  },
  {
    "text": "handle large traffic spikes and I'll talk about our architecture and some",
    "start": "1130159",
    "end": "1135440"
  },
  {
    "text": "best practices so first of all scribble live is a",
    "start": "1135440",
    "end": "1140840"
  },
  {
    "text": "Canadian company which was founded in 2008 and my marketing team tells me that we're the leading NN content engagement",
    "start": "1140840",
    "end": "1147360"
  },
  {
    "text": "platform that enables Brands Sports organizations media companies to drive engagement on the digital assets resulting in improved retention and",
    "start": "1147360",
    "end": "1153799"
  },
  {
    "text": "Acquisitions of customers fans and [Applause]",
    "start": "1153799",
    "end": "1160520"
  },
  {
    "text": "audiences okay and I'll try to explain exactly what we",
    "start": "1160520",
    "end": "1166200"
  },
  {
    "text": "do um so we have a number of products uh Pro and Enterprise Edition as well as",
    "start": "1166720",
    "end": "1172559"
  },
  {
    "text": "recently acquired cover it live uh the main feature of uh Pro and Enterprise",
    "start": "1172559",
    "end": "1178120"
  },
  {
    "text": "Edition is what we called live blogging our clients use it to cover uh events such as breaking news uh Sports",
    "start": "1178120",
    "end": "1186280"
  },
  {
    "text": "uh or chats um so what a live blog is it's a",
    "start": "1186280",
    "end": "1192720"
  },
  {
    "text": "realtime stream of text images and video which are clients to content",
    "start": "1192720",
    "end": "1199200"
  },
  {
    "text": "producers create and they measure the performance of their content uh with the",
    "start": "1199200",
    "end": "1204919"
  },
  {
    "text": "analytics we collect their clients the end",
    "start": "1204919",
    "end": "1210440"
  },
  {
    "text": "users apart from watching it also comment votum polls and can like the",
    "start": "1210440",
    "end": "1215799"
  },
  {
    "text": "content there are several different uh display options that our clients have",
    "start": "1215799",
    "end": "1221799"
  },
  {
    "text": "from embeds to uh any custom API implementations so today I'll talk about",
    "start": "1221799",
    "end": "1227400"
  },
  {
    "text": "two main types of events planned events such as Apple product launches and unplanned events such as um Parliament H",
    "start": "1227400",
    "end": "1235360"
  },
  {
    "text": "Hill shooting and auto which happened a few weeks ago so one un a planed a schedule event",
    "start": "1235360",
    "end": "1243440"
  },
  {
    "start": "1241000",
    "end": "1241000"
  },
  {
    "text": "was the iPhone 6 launch back in September so we had plenty of experience with Apple product launches so we could",
    "start": "1243440",
    "end": "1251640"
  },
  {
    "text": "estimate roughly the traffic Spike for them uh for these types of events we",
    "start": "1251640",
    "end": "1257000"
  },
  {
    "text": "scale infrastructure before beforehand just to avoid any potential issues and we just increase all auto Skilling",
    "start": "1257000",
    "end": "1263440"
  },
  {
    "text": "groups for that and for such an event the traffic grows steadily hours before",
    "start": "1263440",
    "end": "1269159"
  },
  {
    "text": "the event starts and then there's a huge Spike when it actually starts and then that and the traffic",
    "start": "1269159",
    "end": "1275600"
  },
  {
    "text": "steady continues and an eventually drops off slowly at the end of the event and for this in this example we had over 1",
    "start": "1275600",
    "end": "1282760"
  },
  {
    "text": "million concurrent users at Peak so a couple weeks ago a a gunman",
    "start": "1282760",
    "end": "1290919"
  },
  {
    "text": "shot a soldier at the national War Memorial in Ottawa and then continued shooting in in",
    "start": "1290919",
    "end": "1296400"
  },
  {
    "text": "the Parliament Hill building so this was a breaking news event we had no idea what was going to happen and we could",
    "start": "1296400",
    "end": "1302000"
  },
  {
    "text": "not predict the traffic Spike for it so we depend on cloudfront to handle most of their increased re traffic and our",
    "start": "1302000",
    "end": "1310000"
  },
  {
    "text": "and uh we use Autos scaling groups extensively to handle these and for this",
    "start": "1310000",
    "end": "1315440"
  },
  {
    "text": "example there was about 600,000 concurrent users uh let's see how this looks on our graph so this this graph is",
    "start": "1315440",
    "end": "1323440"
  },
  {
    "text": "from one of our cloudfront distributions from October 22nd you can see uh it's about 15 T times Spike our",
    "start": "1323440",
    "end": "1332039"
  },
  {
    "text": "regular traffic regularly we have small day and night cycles but as you see when",
    "start": "1332039",
    "end": "1337799"
  },
  {
    "text": "breaking use happens it it spikes within minutes to many times a regular",
    "start": "1337799",
    "end": "1345200"
  },
  {
    "text": "traffic and let's see how a CDN helps us so on on the right oh sorry on the left",
    "start": "1345200",
    "end": "1350480"
  },
  {
    "text": "there's another gra a graph from another of our cloud from Distribution on the same day here we have a 30 times",
    "start": "1350480",
    "end": "1358360"
  },
  {
    "text": "Spike but on the right we have a graph from our elb which serves not only that",
    "start": "1358360",
    "end": "1364200"
  },
  {
    "text": "the Clon distribution but other ones as well so here it's only about three times the spike so you can see cloudron save",
    "start": "1364200",
    "end": "1371159"
  },
  {
    "text": "saved us a lot of hits but what if you can't use a CDN we have the example as well for our",
    "start": "1371159",
    "end": "1378640"
  },
  {
    "text": "metric product we have to process every single request so we send all all the",
    "start": "1378640",
    "end": "1384080"
  },
  {
    "text": "requests to our elastic low balancer in ec2 and again it's the same traffic pattern uh for this one it wasn't as",
    "start": "1384080",
    "end": "1390880"
  },
  {
    "text": "great but we've seen bigger ones so if you can't use a CDN don't",
    "start": "1390880",
    "end": "1396360"
  },
  {
    "text": "leave the room just yet and let me share what we've learned over the",
    "start": "1396360",
    "end": "1402640"
  },
  {
    "text": "years we rely on CDN such as Cloud front to take off take off as much traffic as",
    "start": "1402640",
    "end": "1408159"
  },
  {
    "text": "we can from our origin and we cache everything we can not just static files",
    "start": "1408159",
    "end": "1414480"
  },
  {
    "text": "but low TTL content such as rendered HTML pages and API",
    "start": "1414480",
    "end": "1419679"
  },
  {
    "text": "calls uh we designed our application uh in in uh self-contained subsystems which",
    "start": "1419679",
    "end": "1426120"
  },
  {
    "text": "I'll talk about later and are the main ideas so that they can can fail independently and not affect anything",
    "start": "1426120",
    "end": "1432919"
  },
  {
    "text": "else also Autos scaling groups that are properly configured are must for example",
    "start": "1432919",
    "end": "1439120"
  },
  {
    "text": "if you're using varnish cach you you will be uh autoscaling on network load instead of CPU because it will run out",
    "start": "1439120",
    "end": "1446000"
  },
  {
    "text": "of network uh B with a lot faster than CPU will be an issue and we actually had",
    "start": "1446000",
    "end": "1451720"
  },
  {
    "text": "that happen during the I Sy launch we had to Qui quickly added",
    "start": "1451720",
    "end": "1457279"
  },
  {
    "text": "additional varnish servers because uh Autos scaling group wasn't configured correctly another thing that happened",
    "start": "1457279",
    "end": "1464120"
  },
  {
    "text": "during the iPhone 6 event was that we had bad caching on one of our subsystems and that resulted in about 100 times",
    "start": "1464120",
    "end": "1471200"
  },
  {
    "text": "over traffic to our origin our Autos scaling group handled uh uh handled it",
    "start": "1471200",
    "end": "1477840"
  },
  {
    "text": "nicely but obviously cost us a lot more than we anticipated and things don't always go",
    "start": "1477840",
    "end": "1486000"
  },
  {
    "text": "so smoothly and we had our share of spectacular failures uh some of the things that",
    "start": "1486000",
    "end": "1491399"
  },
  {
    "text": "caused us trouble in the past was um things like request breaking through cash either because it wasn't conf",
    "start": "1491399",
    "end": "1498360"
  },
  {
    "text": "figure correctly or we weren't handling a random quer strings",
    "start": "1498360",
    "end": "1504360"
  },
  {
    "text": "correctly uh not being prepared for cash nodes failing again anything can fail at",
    "start": "1504360",
    "end": "1509640"
  },
  {
    "text": "any time and if your cod's not prepared for it you're going to have trouble uh insufficient monitoring if sometimes if",
    "start": "1509640",
    "end": "1516919"
  },
  {
    "text": "you don't have proper monitor you won't even know something's down uh bad code such such as long running regular",
    "start": "1516919",
    "end": "1523399"
  },
  {
    "text": "Expressions will cause your request to take to take a very long time and eventually time out and insufficient",
    "start": "1523399",
    "end": "1530720"
  },
  {
    "text": "capacity so you have to scale quickly for traffic",
    "start": "1530720",
    "end": "1535760"
  },
  {
    "text": "spikes a bit of History uh before AWS we were on managed hosting uh we've always",
    "start": "1535760",
    "end": "1541520"
  },
  {
    "text": "had a CN it was in a clap one at that time we had things like our own low balancers firewalls physical",
    "start": "1541520",
    "end": "1549320"
  },
  {
    "text": "servers obviously you have to run excessive capacity to handle traffic spikes since ordering new service took",
    "start": "1549320",
    "end": "1556000"
  },
  {
    "text": "weeks uh eventually uh as a company started growing we ran into problems such as maxing a firewall bandwidth and",
    "start": "1556000",
    "end": "1562919"
  },
  {
    "text": "we really realized that would not scale so we decided to move into the cloud and",
    "start": "1562919",
    "end": "1569960"
  },
  {
    "text": "uh Amazon was our choice so we moved to AWS about 3 years",
    "start": "1569960",
    "end": "1575799"
  },
  {
    "text": "ago uh eventually we we realized the cost savings about 50% overall and uh",
    "start": "1575799",
    "end": "1582279"
  },
  {
    "text": "70% savings on on the CDN alone when we move to Cloud front also we have lower",
    "start": "1582279",
    "end": "1588399"
  },
  {
    "text": "maintenance by using things like uh simple Q servers and Dynamo DB also uh AWS allows us to have improve",
    "start": "1588399",
    "end": "1596480"
  },
  {
    "text": "stability since we could engineer system to be a lot more fa tolerant by using uh",
    "start": "1596480",
    "end": "1602000"
  },
  {
    "text": "the apis that AWS",
    "start": "1602000",
    "end": "1606760"
  },
  {
    "text": "provides here's a graphical rep representation of uh some of the I mean",
    "start": "1607360",
    "end": "1612960"
  },
  {
    "text": "actually all of the AWS products that we use it's quite a few I'll cover the life",
    "start": "1612960",
    "end": "1618640"
  },
  {
    "text": "portion later in a lot more detail CU that's that's pretty interesting I'll talk about quickly how",
    "start": "1618640",
    "end": "1626559"
  },
  {
    "start": "1625000",
    "end": "1625000"
  },
  {
    "text": "why we choose uh why we chose what's the service that we use uh right now",
    "start": "1626559",
    "end": "1633799"
  },
  {
    "text": "we uh our uh CDN is cloudfront and we have it in in front of",
    "start": "1633799",
    "end": "1641600"
  },
  {
    "text": "majority of our public facing systems like I said we don't do it for metrics because we need to process every request",
    "start": "1641600",
    "end": "1648240"
  },
  {
    "text": "It's very cost- effective and then recently launched reports help us greatly to improve its efficiency uh we",
    "start": "1648240",
    "end": "1655760"
  },
  {
    "text": "moved all of our physical service to",
    "start": "1655760",
    "end": "1661000"
  },
  {
    "text": "ec2 uh because it has many availability zones and very good choice of the",
    "start": "1661000",
    "end": "1666039"
  },
  {
    "text": "instance type so we we can choose the right instance type for the",
    "start": "1666039",
    "end": "1671519"
  },
  {
    "text": "job uh we also use uh elbs and Autos scaling groups extensively uh our nosql",
    "start": "1671519",
    "end": "1677840"
  },
  {
    "text": "store is Dynamo it gives us great performance for our high througho components uh there's no maintenance on",
    "start": "1677840",
    "end": "1684640"
  },
  {
    "text": "our part and we use Dynamo Dynamic Dynamo DB to Autos scale the throughput so we save cost on that",
    "start": "1684640",
    "end": "1693279"
  },
  {
    "text": "uh uh we had a bit of trouble getting a Dynamo DB to work as well as as we",
    "start": "1693279",
    "end": "1699840"
  },
  {
    "text": "expected but Amazon was very good with helping us so right now we're very happy",
    "start": "1699840",
    "end": "1704880"
  },
  {
    "text": "with it all our static files are in S3 you know it's reliable and expensive uh we",
    "start": "1704880",
    "end": "1710919"
  },
  {
    "text": "we put CLA in front of it to save on the request costs uh some of the data we have in",
    "start": "1710919",
    "end": "1717279"
  },
  {
    "text": "Dynamo we move into red shift so we can run more complex queries on uh we uh use",
    "start": "1717279",
    "end": "1724240"
  },
  {
    "text": "MySQL and RDS for uh some of the lightly used components uh we use mcash and",
    "start": "1724240",
    "end": "1730760"
  },
  {
    "text": "redis in elastic cach again we don't have to worry about maintenance with those we recently switched to using",
    "start": "1730760",
    "end": "1737760"
  },
  {
    "text": "Amazon on Kinesis for metric processing this allowed us to deliver the data in",
    "start": "1737760",
    "end": "1743320"
  },
  {
    "text": "pretty much close to real time to our customers and also we got rid of our",
    "start": "1743320",
    "end": "1748840"
  },
  {
    "text": "Hadoop cluster because of it uh for video transcoding we use uh Amazon last transcoder and believe it or",
    "start": "1748840",
    "end": "1755960"
  },
  {
    "text": "not the best feature it it rotates iPhone videos correctly and it supports all the",
    "start": "1755960",
    "end": "1761480"
  },
  {
    "text": "formats we need uh we use sqs to Quee expens expensive jobs uh I'll I'll go",
    "start": "1761480",
    "end": "1768720"
  },
  {
    "text": "into more details what I mean by expensive it's not cost expensive CPU",
    "start": "1768720",
    "end": "1774360"
  },
  {
    "text": "expensive and it's very cheap all our DNS is Route 53 it works very well for",
    "start": "1774360",
    "end": "1780720"
  },
  {
    "text": "us and with other Amazon Services now this is a scrib life",
    "start": "1780720",
    "end": "1785760"
  },
  {
    "start": "1785000",
    "end": "1785000"
  },
  {
    "text": "portion of our architecture so the entry point like I mentioned previously we separate into",
    "start": "1785760",
    "end": "1792399"
  },
  {
    "text": "different subsystems and these are the three examples of what we use uh all the entry points are Amazon elbs um so on",
    "start": "1792399",
    "end": "1802159"
  },
  {
    "text": "the left we have our core component for which serves things like apis and",
    "start": "1802159",
    "end": "1807960"
  },
  {
    "text": "ineds so the elb receives traffic from a cloud front distribution and then forwards is",
    "start": "1807960",
    "end": "1814440"
  },
  {
    "text": "traffic into multiple engine X nodes they'll split traffic between",
    "start": "1814440",
    "end": "1819720"
  },
  {
    "text": "multiple clusters of varnish cache and app servers uh we usually run one",
    "start": "1819720",
    "end": "1825120"
  },
  {
    "text": "varnish cach per cluster so just to improve cash unless uh uh we expect a lot more",
    "start": "1825120",
    "end": "1831320"
  },
  {
    "text": "Network load and app servers are U asp.net in",
    "start": "1831320",
    "end": "1836399"
  },
  {
    "text": "that case don't laugh um for things like uh live updates and",
    "start": "1836399",
    "end": "1843919"
  },
  {
    "text": "uh likes we have that we have that in the middle again we have a CDN in front of",
    "start": "1843919",
    "end": "1851799"
  },
  {
    "text": "it and uh the entry point is elb uh we have a cluster of varnish servers there",
    "start": "1851799",
    "end": "1859200"
  },
  {
    "text": "and they'll send uh their requests to app CL app servers which run no",
    "start": "1859200",
    "end": "1865519"
  },
  {
    "text": "JS and for metrics types of products uh",
    "start": "1865519",
    "end": "1870639"
  },
  {
    "text": "the they the elb receives traffic directly from the enduser and it's forwards those requests",
    "start": "1870639",
    "end": "1878039"
  },
  {
    "text": "to nodejs servers those do a bitter processing and they send the whole",
    "start": "1878039",
    "end": "1883880"
  },
  {
    "text": "stream of data into Amazon Kinesis uh and then that data gets process asynchron asynchronously and on",
    "start": "1883880",
    "end": "1891120"
  },
  {
    "text": "the bottom we have all the storage Services uh that we",
    "start": "1891120",
    "end": "1896559"
  },
  {
    "text": "use a bit more about the Technologies like I said no JS for any High throughput such as metrics uh the core",
    "start": "1897760",
    "end": "1904279"
  },
  {
    "start": "1900000",
    "end": "1900000"
  },
  {
    "text": "functionality is ASP and C our main uh relational database is Microsoft SQL",
    "start": "1904279",
    "end": "1911080"
  },
  {
    "text": "Server uh with multiple read replicas again I also use MySQL for some lightly",
    "start": "1911080",
    "end": "1918559"
  },
  {
    "text": "used components uh we use engine X to",
    "start": "1918559",
    "end": "1923799"
  },
  {
    "text": "supplement elastic low balancing uh for example if you need to low balance on",
    "start": "1923799",
    "end": "1928880"
  },
  {
    "text": "path or some other criteria uh engine X is very good for that also allows us to",
    "start": "1928880",
    "end": "1936679"
  },
  {
    "text": "uh Route Around failed clusters uh we use varage to uh cach",
    "start": "1936679",
    "end": "1943279"
  },
  {
    "text": "content internally uh we also use it uh for things like uh cring filtering",
    "start": "1943279",
    "end": "1949480"
  },
  {
    "text": "modification um adjusting cach headers also more F tolerance since there's",
    "start": "1949480",
    "end": "1955120"
  },
  {
    "text": "multiple apps servers behind",
    "start": "1955120",
    "end": "1958559"
  },
  {
    "text": "it and now some best practices uh if you're using elastic low",
    "start": "1961240",
    "end": "1966360"
  },
  {
    "text": "balancers uh you need to understand that they scale on demand uh and to ensure",
    "start": "1966360",
    "end": "1971760"
  },
  {
    "text": "any blips in a traffic Spike and you are expecting a traffic Spike contact Amazon",
    "start": "1971760",
    "end": "1977840"
  },
  {
    "text": "and ask them to pre-warm it for you and if you do have unexpected traffic spikes just contact Amazon and",
    "start": "1977840",
    "end": "1984799"
  },
  {
    "text": "I'll they'll help you out with that and also make sure it's sending traffic to",
    "start": "1984799",
    "end": "1990440"
  },
  {
    "text": "different availability zones a proper CDN is essential for handling traffic spikes uh we cach",
    "start": "1990440",
    "end": "1997159"
  },
  {
    "text": "everything we can even for for like a few seconds two 5 Seconds it helps a",
    "start": "1997159",
    "end": "2003000"
  },
  {
    "text": "lot if you're using cloudfront um",
    "start": "2003000",
    "end": "2008039"
  },
  {
    "text": "uh you look at the behaviors and you should only pass the information that you need such as headers qu strings",
    "start": "2008039",
    "end": "2014120"
  },
  {
    "text": "cookies since that they base the hash key on that so the less data you can",
    "start": "2014120",
    "end": "2019399"
  },
  {
    "text": "send the better the caching is again correctly set ttls on your",
    "start": "2019399",
    "end": "2024960"
  },
  {
    "text": "content uh we set that at our origin um but Cloud for behaviors allow you to set",
    "start": "2024960",
    "end": "2030559"
  },
  {
    "text": "a minimum TTL for for a path also a low test against the CDN to make sure it's",
    "start": "2030559",
    "end": "2036799"
  },
  {
    "text": "configured correctly and uh review your logs uh and uh you",
    "start": "2036799",
    "end": "2044039"
  },
  {
    "text": "can look at the newly released cloud from rep reports which uh help quite a bit I have an example here of one of our",
    "start": "2044039",
    "end": "2050520"
  },
  {
    "text": "Cloud distributions uh this is a a popular",
    "start": "2050520",
    "end": "2056079"
  },
  {
    "text": "objects report it shows you uh the hit ratio and the the St the different",
    "start": "2056079",
    "end": "2062919"
  },
  {
    "text": "status codes so you can use it to improve your hit ratio and to see if there's any problems if you have a lot",
    "start": "2062919",
    "end": "2068720"
  },
  {
    "text": "of 500s being returned or things like",
    "start": "2068720",
    "end": "2072878"
  },
  {
    "text": "that also like I said before make sure ec2 instances have enough network capacity it's not the easiest thing to",
    "start": "2073879",
    "end": "2079878"
  },
  {
    "text": "determine uh so most likely you're going to have to do testing on that to see how much uh Network througho you can have on",
    "start": "2079879",
    "end": "2086240"
  },
  {
    "text": "a specific instance type uh you know separate your system to decoupled components especially when",
    "start": "2086240",
    "end": "2092638"
  },
  {
    "text": "you're testing something new if you don't know if it's going to be popular you don't know how stable it is just",
    "start": "2092639",
    "end": "2097720"
  },
  {
    "text": "make sure it doesn't affect anything else uh use Auto scaling groups uh all",
    "start": "2097720",
    "end": "2104040"
  },
  {
    "text": "all the pieces that I had on my architecture diagram like engine X varnish app service they're all in",
    "start": "2104040",
    "end": "2109359"
  },
  {
    "text": "separate Auto scaling groups and we scaled on different things most of the time CPU load for app",
    "start": "2109359",
    "end": "2116040"
  },
  {
    "text": "servers but for varnish or engine X you're going to have to scale on on network since the CPU is very low even",
    "start": "2116040",
    "end": "2123000"
  },
  {
    "text": "with the hard throughput uh if you're using autoing glp make",
    "start": "2123000",
    "end": "2128160"
  },
  {
    "text": "groups make sure your ec2 instances configure themselves when they at startup for example engine X needs to",
    "start": "2128160",
    "end": "2135440"
  },
  {
    "text": "find the which noes to send traffic to uh we use the AWS API to do that uh we",
    "start": "2135440",
    "end": "2142520"
  },
  {
    "text": "assign we we assigned roles using ec2 tags to different servers and that's how",
    "start": "2142520",
    "end": "2148640"
  },
  {
    "text": "basically that's how they find themselves now you'll probably have to",
    "start": "2148640",
    "end": "2154520"
  },
  {
    "text": "supplement uh CL for a bit with varnish",
    "start": "2154520",
    "end": "2159720"
  },
  {
    "text": "and and elastic low balancers again if you need to modify",
    "start": "2159720",
    "end": "2164960"
  },
  {
    "text": "traffic you know modify the query strings or yeah help you start help uh to",
    "start": "2164960",
    "end": "2171960"
  },
  {
    "text": "protect against like random query strings things like that uh use cloud watch to alert yourself to any potential",
    "start": "2171960",
    "end": "2179240"
  },
  {
    "text": "issues you know like you're getting a lot of network traffic you should be alerted if you don't have especially if",
    "start": "2179240",
    "end": "2185280"
  },
  {
    "text": "you don't have Autos scaling groups and use qes to uh Q expensive work so for",
    "start": "2185280",
    "end": "2192240"
  },
  {
    "text": "example uh we do a bit of processing on our comments from n users you know if you get a couple thousand those a second",
    "start": "2192240",
    "end": "2199280"
  },
  {
    "text": "we have to do spam checking on those uh so it might take a while so instead of",
    "start": "2199280",
    "end": "2204599"
  },
  {
    "text": "doing that in the request we put into a queue and then pretty much in real time",
    "start": "2204599",
    "end": "2211319"
  },
  {
    "text": "uh we have apps processing the queue you know doing spam checking any other",
    "start": "2211319",
    "end": "2216400"
  },
  {
    "text": "filtering on these comp comments and then eventually that we insert them into a database so high comment loow does not",
    "start": "2216400",
    "end": "2223480"
  },
  {
    "text": "affect us at",
    "start": "2223480",
    "end": "2226079"
  },
  {
    "text": "all uh use the correct database for job you know no SQL such as Dynamo db4 High",
    "start": "2229520",
    "end": "2236040"
  },
  {
    "text": "throughput um and if using SQL have uh many read replicas as many as",
    "start": "2236040",
    "end": "2241640"
  },
  {
    "text": "you need if using Route 53 look at the different writing options if you're using lb there's things like G routing",
    "start": "2241640",
    "end": "2247960"
  },
  {
    "text": "you can have multiple Els in different regions if you're not using elbs you can look at DNS fail",
    "start": "2247960",
    "end": "2254400"
  },
  {
    "text": "over and again use AWS API to advant to",
    "start": "2254400",
    "end": "2259720"
  },
  {
    "text": "your advantage and that's it uh I guess we'll",
    "start": "2259720",
    "end": "2266839"
  },
  {
    "text": "take in questions after or you know here's my Twitter handle if you have anything thanks I'm going to do a couple",
    "start": "2266839",
    "end": "2277078"
  },
  {
    "text": "thanks Kristoff I'm going to do just a couple of uh uh other things that are going on at uh the conference in the",
    "start": "2280400",
    "end": "2287000"
  },
  {
    "text": "last couple minutes here um come by the CDN and DNS Booth um we're going to be doing some live demos uh you know apart",
    "start": "2287000",
    "end": "2293280"
  },
  {
    "text": "from the caching stuff you just looked at when we going through live streaming um and then how to do things like",
    "start": "2293280",
    "end": "2298440"
  },
  {
    "text": "authenticated URLs custom error Pages redirects from HTP to htps um I talked",
    "start": "2298440",
    "end": "2304359"
  },
  {
    "text": "in the presentation about multiple Origins for static and dynamic content we'll demo that as well as showing uh",
    "start": "2304359",
    "end": "2310119"
  },
  {
    "text": "some of the reports that Kristoff talked about um there's a couple of related sessions coming up uh in the media and",
    "start": "2310119",
    "end": "2316640"
  },
  {
    "text": "entertainment track there is a session on securing um media delivery um so if you have a media use case this is a good",
    "start": "2316640",
    "end": "2323119"
  },
  {
    "text": "a good session for you um we'll also be talking about the benefit of uh",
    "start": "2323119",
    "end": "2328280"
  },
  {
    "text": "performance to your end users uh a lot of uh times we think about performance just because it's always good to have",
    "start": "2328280",
    "end": "2333640"
  },
  {
    "text": "fast performance um but we can talk about uh the reasons why that matters matters and then how you design deploy",
    "start": "2333640",
    "end": "2339000"
  },
  {
    "text": "and operate your application uh for the best possible performance uh that's tomorrow uh at 2:15 p.m. um also in kind",
    "start": "2339000",
    "end": "2347280"
  },
  {
    "text": "of my area of AWS at least a pure team uh we're going to be talking about building dos uh uh resilient",
    "start": "2347280",
    "end": "2353720"
  },
  {
    "text": "architectures on Amazon web services so that's tomorrow um from 5:30 to 6:30 uh",
    "start": "2353720",
    "end": "2359160"
  },
  {
    "text": "please join us for that uh last one next week we're going to be doing a webinar um we talked a little bit about during",
    "start": "2359160",
    "end": "2365000"
  },
  {
    "text": "this uh talk about some of the cloudfront report features uh we're doing a webinar on the uh Thursday the",
    "start": "2365000",
    "end": "2370960"
  },
  {
    "text": "20th at 10: a.m. Pacific uh take you through those uh so please join us if you can um again as Kristoff said we're",
    "start": "2370960",
    "end": "2377599"
  },
  {
    "text": "going to be up back there's a table uh you can come by ask us questions uh we look forward to talking to you and thank you so much for coming to the session",
    "start": "2377599",
    "end": "2384079"
  },
  {
    "text": "and thank you for coming to our conference [Applause]",
    "start": "2384079",
    "end": "2392079"
  }
]