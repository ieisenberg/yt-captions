[
  {
    "text": "hi there my name's Gabe jambe and I'm a",
    "start": "0",
    "end": "2700"
  },
  {
    "text": "software developer and Technical",
    "start": "2700",
    "end": "4110"
  },
  {
    "text": "Evangelist here at AWS I love my job",
    "start": "4110",
    "end": "7470"
  },
  {
    "text": "because I get to keep up-to-date with",
    "start": "7470",
    "end": "8849"
  },
  {
    "text": "all the latest services and features",
    "start": "8849",
    "end": "10620"
  },
  {
    "text": "from AWS and share these learnings with",
    "start": "10620",
    "end": "12960"
  },
  {
    "text": "software developers like you AWS is",
    "start": "12960",
    "end": "16529"
  },
  {
    "text": "innovating on behalf of our customers at",
    "start": "16529",
    "end": "18510"
  },
  {
    "text": "an accelerating pace and one area that's",
    "start": "18510",
    "end": "21150"
  },
  {
    "text": "very exciting right now is artificial",
    "start": "21150",
    "end": "23130"
  },
  {
    "text": "intelligence and machine learning",
    "start": "23130",
    "end": "24590"
  },
  {
    "text": "especially for workloads involving",
    "start": "24590",
    "end": "26519"
  },
  {
    "text": "computer vision and image recognition",
    "start": "26519",
    "end": "29359"
  },
  {
    "text": "traditionally these sorts of",
    "start": "29359",
    "end": "31349"
  },
  {
    "text": "capabilities have been locked away in",
    "start": "31349",
    "end": "32910"
  },
  {
    "text": "the domain of experts requiring",
    "start": "32910",
    "end": "34620"
  },
  {
    "text": "complicated and expensive development",
    "start": "34620",
    "end": "36300"
  },
  {
    "text": "and deployment of machine learning",
    "start": "36300",
    "end": "38219"
  },
  {
    "text": "models thankfully AWS has made image and",
    "start": "38219",
    "end": "41370"
  },
  {
    "text": "video analysis easy scalable and fast",
    "start": "41370",
    "end": "44100"
  },
  {
    "text": "with our service Amazon recognition in",
    "start": "44100",
    "end": "47670"
  },
  {
    "text": "this session will cover all the features",
    "start": "47670",
    "end": "50370"
  },
  {
    "text": "of Amazon recognition for image and",
    "start": "50370",
    "end": "52110"
  },
  {
    "text": "video analysis and we'll see some demos",
    "start": "52110",
    "end": "55199"
  },
  {
    "text": "of this cool technology in action let's",
    "start": "55199",
    "end": "58109"
  },
  {
    "text": "get started these days our digital",
    "start": "58109",
    "end": "62010"
  },
  {
    "text": "communication extends beyond the world",
    "start": "62010",
    "end": "63809"
  },
  {
    "text": "of text messages we're snapping and",
    "start": "63809",
    "end": "66570"
  },
  {
    "text": "sharing more photos and videos than ever",
    "start": "66570",
    "end": "69180"
  },
  {
    "text": "before and inside all of these bits",
    "start": "69180",
    "end": "71700"
  },
  {
    "text": "there's countless insights we can",
    "start": "71700",
    "end": "73890"
  },
  {
    "text": "extract and put to use for new types of",
    "start": "73890",
    "end": "76170"
  },
  {
    "text": "innovation from improving user",
    "start": "76170",
    "end": "78240"
  },
  {
    "text": "experiences to increasing business",
    "start": "78240",
    "end": "80280"
  },
  {
    "text": "revenue to improving the security of the",
    "start": "80280",
    "end": "82409"
  },
  {
    "text": "world around us the opportunities are",
    "start": "82409",
    "end": "84509"
  },
  {
    "text": "there waiting for us to jump in and",
    "start": "84509",
    "end": "86400"
  },
  {
    "text": "unlock all of the intelligence in our",
    "start": "86400",
    "end": "88049"
  },
  {
    "text": "media but it used to be challenging",
    "start": "88049",
    "end": "91460"
  },
  {
    "text": "complicated and expensive to analyze",
    "start": "91460",
    "end": "94049"
  },
  {
    "text": "images and videos of scale you had to",
    "start": "94049",
    "end": "96450"
  },
  {
    "text": "wrangle with deep learning frameworks",
    "start": "96450",
    "end": "97860"
  },
  {
    "text": "making sure you had an enormous amount",
    "start": "97860",
    "end": "99780"
  },
  {
    "text": "of training data to feed them and you",
    "start": "99780",
    "end": "101909"
  },
  {
    "text": "used to have to run computationally",
    "start": "101909",
    "end": "103860"
  },
  {
    "text": "expensive training sessions to build out",
    "start": "103860",
    "end": "105810"
  },
  {
    "text": "the machine learning models luckily for",
    "start": "105810",
    "end": "109229"
  },
  {
    "text": "many analysis workloads we have a great",
    "start": "109229",
    "end": "111390"
  },
  {
    "text": "service from AWS that can help Amazon",
    "start": "111390",
    "end": "113850"
  },
  {
    "text": "recognition analyst on recognition makes",
    "start": "113850",
    "end": "117509"
  },
  {
    "text": "it easy to add image and video analysis",
    "start": "117509",
    "end": "119939"
  },
  {
    "text": "tear applications through simple API",
    "start": "119939",
    "end": "122340"
  },
  {
    "text": "endpoints it's based on the same proven",
    "start": "122340",
    "end": "125130"
  },
  {
    "text": "highly scalable deep learning technology",
    "start": "125130",
    "end": "127950"
  },
  {
    "text": "developed by Amazon's computer vision",
    "start": "127950",
    "end": "130050"
  },
  {
    "text": "science",
    "start": "130050",
    "end": "130420"
  },
  {
    "text": "to analyze billions of images and videos",
    "start": "130420",
    "end": "132910"
  },
  {
    "text": "daily and requires no machine learning",
    "start": "132910",
    "end": "135760"
  },
  {
    "text": "expert to use to use recognition is a",
    "start": "135760",
    "end": "138520"
  },
  {
    "text": "simple and easy-to-use service that can",
    "start": "138520",
    "end": "140709"
  },
  {
    "text": "quickly analyze any image or video file",
    "start": "140709",
    "end": "143020"
  },
  {
    "text": "stored in Amazon simple storage service",
    "start": "143020",
    "end": "145120"
  },
  {
    "text": "s3 it's always learning from new data",
    "start": "145120",
    "end": "148120"
  },
  {
    "text": "and we are continually adding new labels",
    "start": "148120",
    "end": "150310"
  },
  {
    "text": "and facial recognition features to the",
    "start": "150310",
    "end": "152290"
  },
  {
    "text": "service in short Amazon recognition lets",
    "start": "152290",
    "end": "156459"
  },
  {
    "text": "you harness the power of cutting-edge",
    "start": "156459",
    "end": "158470"
  },
  {
    "text": "deep learning technology in a fully",
    "start": "158470",
    "end": "160720"
  },
  {
    "text": "managed service with no models to train",
    "start": "160720",
    "end": "162850"
  },
  {
    "text": "or endpoints to scale let's dive in and",
    "start": "162850",
    "end": "166660"
  },
  {
    "text": "take a deep look at all the features",
    "start": "166660",
    "end": "168550"
  },
  {
    "text": "that recognition has and what it can do",
    "start": "168550",
    "end": "170530"
  },
  {
    "text": "for us for analyzing images recognition",
    "start": "170530",
    "end": "175180"
  },
  {
    "text": "has a wide array of features and",
    "start": "175180",
    "end": "176769"
  },
  {
    "text": "capabilities including object and scene",
    "start": "176769",
    "end": "179709"
  },
  {
    "text": "detection facial analysis face",
    "start": "179709",
    "end": "183040"
  },
  {
    "text": "comparisons unsafe image detection",
    "start": "183040",
    "end": "186269"
  },
  {
    "text": "celebrity recognition and text and image",
    "start": "186269",
    "end": "189580"
  },
  {
    "text": "extraction with Amazon recognition",
    "start": "189580",
    "end": "193380"
  },
  {
    "text": "object and scene detection you can",
    "start": "193380",
    "end": "196120"
  },
  {
    "text": "identify all sorts of keywords that",
    "start": "196120",
    "end": "198519"
  },
  {
    "text": "describe content in an image from object",
    "start": "198519",
    "end": "201340"
  },
  {
    "text": "detection like vehicle sidewalk or lemon",
    "start": "201340",
    "end": "204340"
  },
  {
    "text": "to scene descriptions like sunset or",
    "start": "204340",
    "end": "206799"
  },
  {
    "text": "Beach for example in this image you can",
    "start": "206799",
    "end": "211120"
  },
  {
    "text": "see that recognition identifies this",
    "start": "211120",
    "end": "213040"
  },
  {
    "text": "picture contains a number of labels such",
    "start": "213040",
    "end": "215650"
  },
  {
    "text": "as boat plant harbours waterfront and",
    "start": "215650",
    "end": "219220"
  },
  {
    "text": "dock another really cool feature lets",
    "start": "219220",
    "end": "223570"
  },
  {
    "text": "you perform facial analysis you just",
    "start": "223570",
    "end": "227290"
  },
  {
    "text": "pass recognition and image and it will",
    "start": "227290",
    "end": "229630"
  },
  {
    "text": "return a lot of attribute data including",
    "start": "229630",
    "end": "231700"
  },
  {
    "text": "information about the location of each",
    "start": "231700",
    "end": "233500"
  },
  {
    "text": "face in the image as well as facial",
    "start": "233500",
    "end": "235750"
  },
  {
    "text": "landmarks emotion analysis and",
    "start": "235750",
    "end": "237850"
  },
  {
    "text": "demographic data like gender and age",
    "start": "237850",
    "end": "240010"
  },
  {
    "text": "range in this image recognition",
    "start": "240010",
    "end": "243010"
  },
  {
    "text": "identified the person as a male looks",
    "start": "243010",
    "end": "245950"
  },
  {
    "text": "happy has his eyes open",
    "start": "245950",
    "end": "247660"
  },
  {
    "text": "nd has facial hair it also tells us",
    "start": "247660",
    "end": "251290"
  },
  {
    "text": "image quality metrics namely the images",
    "start": "251290",
    "end": "254320"
  },
  {
    "text": "brightness and sharpness levels next up",
    "start": "254320",
    "end": "257769"
  },
  {
    "text": "face similarity detection and searching",
    "start": "257769",
    "end": "260880"
  },
  {
    "text": "recognition let's see match faces in",
    "start": "260880",
    "end": "263169"
  },
  {
    "text": "India",
    "start": "263169",
    "end": "263639"
  },
  {
    "text": "against an index of faces you've created",
    "start": "263639",
    "end": "265740"
  },
  {
    "text": "or you can compare a face in one image",
    "start": "265740",
    "end": "269340"
  },
  {
    "text": "against faces in another image looking",
    "start": "269340",
    "end": "271590"
  },
  {
    "text": "for matches between the two",
    "start": "271590",
    "end": "273379"
  },
  {
    "text": "in either case recognition will always",
    "start": "273379",
    "end": "276749"
  },
  {
    "text": "return a similarity score which your",
    "start": "276749",
    "end": "278789"
  },
  {
    "text": "application can use to determine the",
    "start": "278789",
    "end": "280439"
  },
  {
    "text": "likely correctness of the match",
    "start": "280439",
    "end": "283039"
  },
  {
    "text": "additionally recognition image can",
    "start": "283039",
    "end": "286020"
  },
  {
    "text": "recognize thousands of individuals who",
    "start": "286020",
    "end": "288270"
  },
  {
    "text": "are famous noteworthy or prominent in",
    "start": "288270",
    "end": "290939"
  },
  {
    "text": "their field with each match the service",
    "start": "290939",
    "end": "294029"
  },
  {
    "text": "will also provide relevant URLs for more",
    "start": "294029",
    "end": "296370"
  },
  {
    "text": "information about a celebrity if",
    "start": "296370",
    "end": "297960"
  },
  {
    "text": "available and of course this recognizes",
    "start": "297960",
    "end": "301139"
  },
  {
    "text": "Jeff binos if your application deals",
    "start": "301139",
    "end": "305580"
  },
  {
    "text": "with user contributed content you might",
    "start": "305580",
    "end": "308069"
  },
  {
    "text": "want to make sure the images your users",
    "start": "308069",
    "end": "309870"
  },
  {
    "text": "share are flagged for explicit or",
    "start": "309870",
    "end": "311879"
  },
  {
    "text": "suggestive content Amazon recognition",
    "start": "311879",
    "end": "314909"
  },
  {
    "text": "can help you perform image content",
    "start": "314909",
    "end": "316469"
  },
  {
    "text": "moderation automatically each image",
    "start": "316469",
    "end": "319439"
  },
  {
    "text": "moderation response includes a",
    "start": "319439",
    "end": "321330"
  },
  {
    "text": "hierarchical list of moderation labels",
    "start": "321330",
    "end": "323460"
  },
  {
    "text": "along with confident scorers giving you",
    "start": "323460",
    "end": "326009"
  },
  {
    "text": "insight into the explicit or suggestive",
    "start": "326009",
    "end": "328050"
  },
  {
    "text": "nature of the content in the image",
    "start": "328050",
    "end": "331159"
  },
  {
    "text": "finally recognition image makes it easy",
    "start": "331159",
    "end": "334289"
  },
  {
    "text": "to locate and extract text found in",
    "start": "334289",
    "end": "336089"
  },
  {
    "text": "images even when your images contain",
    "start": "336089",
    "end": "338310"
  },
  {
    "text": "real-world seems like road Sodom's or",
    "start": "338310",
    "end": "340469"
  },
  {
    "text": "license plates when analyzing the text",
    "start": "340469",
    "end": "343379"
  },
  {
    "text": "in an image recognition returns all of",
    "start": "343379",
    "end": "345990"
  },
  {
    "text": "the detected pieces of text both",
    "start": "345990",
    "end": "348180"
  },
  {
    "text": "individually and as groups of lines",
    "start": "348180",
    "end": "350550"
  },
  {
    "text": "along with a confidence score for every",
    "start": "350550",
    "end": "352560"
  },
  {
    "text": "detection inside the Amazon and",
    "start": "352560",
    "end": "355259"
  },
  {
    "text": "recognition web console there are a",
    "start": "355259",
    "end": "357330"
  },
  {
    "text": "number of interactive demos that make it",
    "start": "357330",
    "end": "359310"
  },
  {
    "text": "easy to see how the service performs",
    "start": "359310",
    "end": "361139"
  },
  {
    "text": "with various images there are a few",
    "start": "361139",
    "end": "363360"
  },
  {
    "text": "example images you can try out or you",
    "start": "363360",
    "end": "365699"
  },
  {
    "text": "can upload your own images to test with",
    "start": "365699",
    "end": "367520"
  },
  {
    "text": "the object and scene detection demo",
    "start": "367520",
    "end": "369990"
  },
  {
    "text": "makes it easy to quickly see the results",
    "start": "369990",
    "end": "372210"
  },
  {
    "text": "of the detect labels API call showing",
    "start": "372210",
    "end": "374490"
  },
  {
    "text": "the top labels and their confidence",
    "start": "374490",
    "end": "376050"
  },
  {
    "text": "scores for a given image",
    "start": "376050",
    "end": "379219"
  },
  {
    "text": "the image moderation demo shows results",
    "start": "384050",
    "end": "387050"
  },
  {
    "text": "for calling the detect moderation labels",
    "start": "387050",
    "end": "388970"
  },
  {
    "text": "API it has an example of a safe photo",
    "start": "388970",
    "end": "391400"
  },
  {
    "text": "which returns no labels describing",
    "start": "391400",
    "end": "393500"
  },
  {
    "text": "potentially unsafe content and a photo",
    "start": "393500",
    "end": "395810"
  },
  {
    "text": "of a woman in a bikini which recognition",
    "start": "395810",
    "end": "398240"
  },
  {
    "text": "identifies as containing possibly",
    "start": "398240",
    "end": "400220"
  },
  {
    "text": "suggestive content in the category of",
    "start": "400220",
    "end": "402229"
  },
  {
    "text": "female swimwear or underwear",
    "start": "402229",
    "end": "404560"
  },
  {
    "text": "the facial analysis demo shows off the",
    "start": "404560",
    "end": "407659"
  },
  {
    "text": "detect faces API so you can see how",
    "start": "407659",
    "end": "410030"
  },
  {
    "text": "recognition can analyze one or many",
    "start": "410030",
    "end": "412159"
  },
  {
    "text": "faces in the photo providing metadata",
    "start": "412159",
    "end": "414379"
  },
  {
    "text": "for each face detected it also",
    "start": "414379",
    "end": "416750"
  },
  {
    "text": "illustrates how to visualize the facial",
    "start": "416750",
    "end": "418729"
  },
  {
    "text": "landmarks detected for each face such as",
    "start": "418729",
    "end": "421039"
  },
  {
    "text": "eye nose and mouth position as well as",
    "start": "421039",
    "end": "424099"
  },
  {
    "text": "the pose information describing the roll",
    "start": "424099",
    "end": "426229"
  },
  {
    "text": "pitch and yaw information it sees for",
    "start": "426229",
    "end": "428599"
  },
  {
    "text": "each face the celebrity recognition demo",
    "start": "428599",
    "end": "431449"
  },
  {
    "text": "uses the recognized celebrity's API and",
    "start": "431449",
    "end": "433729"
  },
  {
    "text": "shows how it will return not only the",
    "start": "433729",
    "end": "436039"
  },
  {
    "text": "names of identified celebrities but also",
    "start": "436039",
    "end": "438050"
  },
  {
    "text": "relevant URLs if available for Jeff",
    "start": "438050",
    "end": "440990"
  },
  {
    "text": "Bezos and gives us an IMDB URL with more",
    "start": "440990",
    "end": "443780"
  },
  {
    "text": "information for Andy Jesse AWS the CEO",
    "start": "443780",
    "end": "447020"
  },
  {
    "text": "it just returns his name the face",
    "start": "447020",
    "end": "450770"
  },
  {
    "text": "comparison demo makes it easy to see how",
    "start": "450770",
    "end": "452960"
  },
  {
    "text": "recognition can search for a reference",
    "start": "452960",
    "end": "454610"
  },
  {
    "text": "face inside another photo using the",
    "start": "454610",
    "end": "457039"
  },
  {
    "text": "compare faces API here we can see how",
    "start": "457039",
    "end": "459919"
  },
  {
    "text": "recognition is able to correctly match",
    "start": "459919",
    "end": "461659"
  },
  {
    "text": "faces even when the pose or lighting",
    "start": "461659",
    "end": "464120"
  },
  {
    "text": "varies between the images finally the",
    "start": "464120",
    "end": "467990"
  },
  {
    "text": "text in image demo makes it easy to see",
    "start": "467990",
    "end": "470389"
  },
  {
    "text": "how recognition can extract text from",
    "start": "470389",
    "end": "472190"
  },
  {
    "text": "images even in the case of highly varied",
    "start": "472190",
    "end": "474590"
  },
  {
    "text": "fonts and orientation using the detect",
    "start": "474590",
    "end": "477409"
  },
  {
    "text": "text API now that we've taken a tour of",
    "start": "477409",
    "end": "479750"
  },
  {
    "text": "what Amazon recognition can do with",
    "start": "479750",
    "end": "481669"
  },
  {
    "text": "images let's see how we might put some",
    "start": "481669",
    "end": "484099"
  },
  {
    "text": "of these api's to work for us in a demo",
    "start": "484099",
    "end": "486050"
  },
  {
    "text": "application in this demo app we've taken",
    "start": "486050",
    "end": "489440"
  },
  {
    "text": "hundreds of images and run them through",
    "start": "489440",
    "end": "491419"
  },
  {
    "text": "the detect faces and detect objects AP",
    "start": "491419",
    "end": "494029"
  },
  {
    "text": "is storing the results so we can conduct",
    "start": "494029",
    "end": "496550"
  },
  {
    "text": "a comprehensive search of our image",
    "start": "496550",
    "end": "498710"
  },
  {
    "text": "library without having to rely on any",
    "start": "498710",
    "end": "501020"
  },
  {
    "text": "manual tagging of the images as you can",
    "start": "501020",
    "end": "506120"
  },
  {
    "text": "see we have a large variety of images",
    "start": "506120",
    "end": "508400"
  },
  {
    "text": "here let's search and see what we can",
    "start": "508400",
    "end": "511250"
  },
  {
    "text": "find with late images labeled universe",
    "start": "511250",
    "end": "514390"
  },
  {
    "text": "here's what recognition saw",
    "start": "514390",
    "end": "516440"
  },
  {
    "text": "you",
    "start": "516440",
    "end": "518500"
  },
  {
    "text": "you",
    "start": "523849",
    "end": "525909"
  },
  {
    "text": "how about something even more specific",
    "start": "528030",
    "end": "530430"
  },
  {
    "text": "like Milky Way as you can see the",
    "start": "530430",
    "end": "533670"
  },
  {
    "text": "results are pretty good it shows a 90%",
    "start": "533670",
    "end": "536400"
  },
  {
    "text": "confidence level or above what about",
    "start": "536400",
    "end": "539340"
  },
  {
    "text": "animal looks good as well",
    "start": "539340",
    "end": "542990"
  },
  {
    "text": "Amazon recognition can also identify the",
    "start": "542990",
    "end": "545370"
  },
  {
    "text": "animal species into text and images",
    "start": "545370",
    "end": "549260"
  },
  {
    "text": "let's try giraffe as you can see the",
    "start": "551060",
    "end": "555170"
  },
  {
    "text": "responses are in JSON format so you can",
    "start": "555170",
    "end": "557300"
  },
  {
    "text": "easily retrieve and process the data",
    "start": "557300",
    "end": "558890"
  },
  {
    "text": "inside your applications how about one",
    "start": "558890",
    "end": "561650"
  },
  {
    "text": "more search for the elixir of life",
    "start": "561650",
    "end": "563000"
  },
  {
    "text": "coffee recognition got that one right -",
    "start": "563000",
    "end": "566950"
  },
  {
    "text": "now let's try the facial analysis how",
    "start": "566950",
    "end": "571100"
  },
  {
    "text": "about a search for smiles there you go",
    "start": "571100",
    "end": "573860"
  },
  {
    "text": "looking good let me show you how we",
    "start": "573860",
    "end": "575720"
  },
  {
    "text": "built this demo the webpage that lets us",
    "start": "575720",
    "end": "579500"
  },
  {
    "text": "search and filter the images is a",
    "start": "579500",
    "end": "581180"
  },
  {
    "text": "statically hosted page on Amazon s3 all",
    "start": "581180",
    "end": "584450"
  },
  {
    "text": "of the search queries call a lambda",
    "start": "584450",
    "end": "586670"
  },
  {
    "text": "function via API gateway to look up",
    "start": "586670",
    "end": "589340"
  },
  {
    "text": "photos tagged with results we obtained",
    "start": "589340",
    "end": "591230"
  },
  {
    "text": "via Amazon recognition which we stored",
    "start": "591230",
    "end": "593960"
  },
  {
    "text": "inside DynamoDB as you can guess the",
    "start": "593960",
    "end": "598070"
  },
  {
    "text": "most interesting part is how we use",
    "start": "598070",
    "end": "599930"
  },
  {
    "text": "recognition to extract relevant",
    "start": "599930",
    "end": "602330"
  },
  {
    "text": "information from each photo so we could",
    "start": "602330",
    "end": "604700"
  },
  {
    "text": "store it in our database to get this",
    "start": "604700",
    "end": "608030"
  },
  {
    "text": "data we set up a simple pipeline that",
    "start": "608030",
    "end": "610490"
  },
  {
    "text": "takes photos uploaded into an s3 bucket",
    "start": "610490",
    "end": "612440"
  },
  {
    "text": "and fires an event that causes an AWS",
    "start": "612440",
    "end": "615410"
  },
  {
    "text": "lambda function to execute this lambda",
    "start": "615410",
    "end": "618680"
  },
  {
    "text": "function calls recognition hitting the",
    "start": "618680",
    "end": "620660"
  },
  {
    "text": "api's for each image namely the detect",
    "start": "620660",
    "end": "624260"
  },
  {
    "text": "labels API to perform objects and scene",
    "start": "624260",
    "end": "626570"
  },
  {
    "text": "detection and the detect faces API to",
    "start": "626570",
    "end": "630020"
  },
  {
    "text": "perform face analysis if we wanted to we",
    "start": "630020",
    "end": "633350"
  },
  {
    "text": "could easily extend it to other AP is",
    "start": "633350",
    "end": "635090"
  },
  {
    "text": "like the detect text API to find text",
    "start": "635090",
    "end": "638570"
  },
  {
    "text": "inside our images or the detect",
    "start": "638570",
    "end": "640760"
  },
  {
    "text": "moderation labels API to perform unsafe",
    "start": "640760",
    "end": "642950"
  },
  {
    "text": "content moderation the lambda function",
    "start": "642950",
    "end": "646640"
  },
  {
    "text": "processes the results from the API calls",
    "start": "646640",
    "end": "649190"
  },
  {
    "text": "and stores the data in dynamodb ready to",
    "start": "649190",
    "end": "651950"
  },
  {
    "text": "be queried by our web front-end this is",
    "start": "651950",
    "end": "654890"
  },
  {
    "text": "a serverless and event-driven image",
    "start": "654890",
    "end": "657200"
  },
  {
    "text": "analysis pipeline with this setup it's",
    "start": "657200",
    "end": "659810"
  },
  {
    "text": "easy to scale an extremely",
    "start": "659810",
    "end": "661880"
  },
  {
    "text": "cost-effective as we're not paying for",
    "start": "661880",
    "end": "663680"
  },
  {
    "text": "any idle server time looking at the",
    "start": "663680",
    "end": "667790"
  },
  {
    "text": "Amazon recognition API you'll see there",
    "start": "667790",
    "end": "670400"
  },
  {
    "text": "are two types of API operations non",
    "start": "670400",
    "end": "673250"
  },
  {
    "text": "storage operations and storage",
    "start": "673250",
    "end": "675110"
  },
  {
    "text": "operations non storage API operations",
    "start": "675110",
    "end": "677810"
  },
  {
    "text": "are the ones that take input and return",
    "start": "677810",
    "end": "680180"
  },
  {
    "text": "result without persisting any state the",
    "start": "680180",
    "end": "682970"
  },
  {
    "text": "detect labels and detect",
    "start": "682970",
    "end": "684320"
  },
  {
    "text": "faces and points are both examples of",
    "start": "684320",
    "end": "686150"
  },
  {
    "text": "non storage operations on the other hand",
    "start": "686150",
    "end": "688910"
  },
  {
    "text": "storage API operations persist some",
    "start": "688910",
    "end": "691430"
  },
  {
    "text": "information to AWS s servers in order to",
    "start": "691430",
    "end": "693860"
  },
  {
    "text": "let you make other API calls that rely",
    "start": "693860",
    "end": "695810"
  },
  {
    "text": "on this information for example let's",
    "start": "695810",
    "end": "699050"
  },
  {
    "text": "say you want to build an application",
    "start": "699050",
    "end": "700730"
  },
  {
    "text": "that will authenticate users by matching",
    "start": "700730",
    "end": "702800"
  },
  {
    "text": "pictures of their faces against a set of",
    "start": "702800",
    "end": "705230"
  },
  {
    "text": "profile photos in this case you'll start",
    "start": "705230",
    "end": "708620"
  },
  {
    "text": "by creating a collection on recognition",
    "start": "708620",
    "end": "710270"
  },
  {
    "text": "to store all of the face data for your",
    "start": "710270",
    "end": "712550"
  },
  {
    "text": "users you do this using the aptly named",
    "start": "712550",
    "end": "715610"
  },
  {
    "text": "create collection endpoint then you'll",
    "start": "715610",
    "end": "719540"
  },
  {
    "text": "want to analyze and remember the faces",
    "start": "719540",
    "end": "721670"
  },
  {
    "text": "for all of your users you can do this",
    "start": "721670",
    "end": "724610"
  },
  {
    "text": "using the index faces endpoint passing",
    "start": "724610",
    "end": "727280"
  },
  {
    "text": "in images and the name of the collection",
    "start": "727280",
    "end": "728960"
  },
  {
    "text": "you want recognition to store the face",
    "start": "728960",
    "end": "731000"
  },
  {
    "text": "vector metadata in once you've done this",
    "start": "731000",
    "end": "733910"
  },
  {
    "text": "you can use the search faces by image",
    "start": "733910",
    "end": "736910"
  },
  {
    "text": "API to search for faces in a photo that",
    "start": "736910",
    "end": "739190"
  },
  {
    "text": "match any in your collection the create",
    "start": "739190",
    "end": "742040"
  },
  {
    "text": "collection and index faces api's are",
    "start": "742040",
    "end": "744470"
  },
  {
    "text": "both storage API operations many",
    "start": "744470",
    "end": "748400"
  },
  {
    "text": "customers are already leveraging Amazon",
    "start": "748400",
    "end": "750500"
  },
  {
    "text": "recognition in their products and",
    "start": "750500",
    "end": "751760"
  },
  {
    "text": "services for example take Pinterest the",
    "start": "751760",
    "end": "756050"
  },
  {
    "text": "world's catalogue of ideas they use",
    "start": "756050",
    "end": "759050"
  },
  {
    "text": "Amazon recognition to detect and extract",
    "start": "759050",
    "end": "761630"
  },
  {
    "text": "the text found in the millions of images",
    "start": "761630",
    "end": "763730"
  },
  {
    "text": "they've stored in Amazon s3 allowing",
    "start": "763730",
    "end": "766640"
  },
  {
    "text": "their customers to discover relevant",
    "start": "766640",
    "end": "768410"
  },
  {
    "text": "content from their 200 million active",
    "start": "768410",
    "end": "771260"
  },
  {
    "text": "pinners worldwide or look at art finder",
    "start": "771260",
    "end": "775160"
  },
  {
    "text": "an online marketplace allowing artists",
    "start": "775160",
    "end": "777710"
  },
  {
    "text": "to sell directly to buyers they use",
    "start": "777710",
    "end": "780740"
  },
  {
    "text": "recognition to help match customers with",
    "start": "780740",
    "end": "783140"
  },
  {
    "text": "art they're more likely to enjoy so",
    "start": "783140",
    "end": "787280"
  },
  {
    "text": "we've seen how powerful and easy it is",
    "start": "787280",
    "end": "790010"
  },
  {
    "text": "to use recognition for image analysis",
    "start": "790010",
    "end": "791990"
  },
  {
    "text": "but what about video from personal",
    "start": "791990",
    "end": "795620"
  },
  {
    "text": "entertainment to physical security to",
    "start": "795620",
    "end": "797660"
  },
  {
    "text": "in-store customer behavioral analysis",
    "start": "797660",
    "end": "800060"
  },
  {
    "text": "there's countless opportunities to",
    "start": "800060",
    "end": "801890"
  },
  {
    "text": "innovate and find actionable insights",
    "start": "801890",
    "end": "803720"
  },
  {
    "text": "from video content the traditional",
    "start": "803720",
    "end": "806960"
  },
  {
    "text": "solution to analyzing video is to sample",
    "start": "806960",
    "end": "809450"
  },
  {
    "text": "still frames from a video feed",
    "start": "809450",
    "end": "811310"
  },
  {
    "text": "performing analysis on these images one",
    "start": "811310",
    "end": "813980"
  },
  {
    "text": "at",
    "start": "813980",
    "end": "815170"
  },
  {
    "text": "for some cases this approach can work",
    "start": "815170",
    "end": "817900"
  },
  {
    "text": "but there's a lot of opportunity for",
    "start": "817900",
    "end": "820030"
  },
  {
    "text": "improvement here video is all about",
    "start": "820030",
    "end": "824020"
  },
  {
    "text": "motion over time this builds up context",
    "start": "824020",
    "end": "827290"
  },
  {
    "text": "adjacent frames are related to each",
    "start": "827290",
    "end": "829360"
  },
  {
    "text": "other and a good analysis should take",
    "start": "829360",
    "end": "831520"
  },
  {
    "text": "this into account obviously if we just",
    "start": "831520",
    "end": "834760"
  },
  {
    "text": "perform a simple frame by frame analysis",
    "start": "834760",
    "end": "836770"
  },
  {
    "text": "looking at each image in isolation we're",
    "start": "836770",
    "end": "839590"
  },
  {
    "text": "not going to be able to leverage this",
    "start": "839590",
    "end": "841300"
  },
  {
    "text": "temporal context it probably won't",
    "start": "841300",
    "end": "844990"
  },
  {
    "text": "surprise you to hear that Amazon",
    "start": "844990",
    "end": "846550"
  },
  {
    "text": "recognition is also equipped with a set",
    "start": "846550",
    "end": "848470"
  },
  {
    "text": "of features to perform video analysis it",
    "start": "848470",
    "end": "851470"
  },
  {
    "text": "does it in a way that preserves this",
    "start": "851470",
    "end": "852850"
  },
  {
    "text": "context and it can handle videos stored",
    "start": "852850",
    "end": "855040"
  },
  {
    "text": "on s3 as well as streaming video content",
    "start": "855040",
    "end": "858660"
  },
  {
    "text": "when it comes to video files you can",
    "start": "858660",
    "end": "861310"
  },
  {
    "text": "perform object and activity detection",
    "start": "861310",
    "end": "863350"
  },
  {
    "text": "person tracking facial analysis unsafe",
    "start": "863350",
    "end": "867100"
  },
  {
    "text": "video detection celebrity recognition",
    "start": "867100",
    "end": "869470"
  },
  {
    "text": "and face recognition let's look at some",
    "start": "869470",
    "end": "872290"
  },
  {
    "text": "demos first let's see how it works for",
    "start": "872290",
    "end": "875560"
  },
  {
    "text": "face analysis on the left side of the",
    "start": "875560",
    "end": "878020"
  },
  {
    "text": "screen we have one of our AWS built on",
    "start": "878020",
    "end": "880570"
  },
  {
    "text": "commercials on the right side of the",
    "start": "880570",
    "end": "882490"
  },
  {
    "text": "screen we have a button that will",
    "start": "882490",
    "end": "883930"
  },
  {
    "text": "retrieve an analysis of the videos faces",
    "start": "883930",
    "end": "886150"
  },
  {
    "text": "fetched via the get face search API call",
    "start": "886150",
    "end": "888820"
  },
  {
    "text": "as you can see recognition successfully",
    "start": "888820",
    "end": "891670"
  },
  {
    "text": "identified 30 happy faces the face",
    "start": "891670",
    "end": "894610"
  },
  {
    "text": "analysis API response includes the time",
    "start": "894610",
    "end": "896890"
  },
  {
    "text": "stamps for each detection which lets us",
    "start": "896890",
    "end": "899140"
  },
  {
    "text": "associate specific frames of content",
    "start": "899140",
    "end": "901150"
  },
  {
    "text": "with the face information it detects in",
    "start": "901150",
    "end": "903190"
  },
  {
    "text": "this demo we've wired up each face",
    "start": "903190",
    "end": "905650"
  },
  {
    "text": "detection tag so clicking on it will",
    "start": "905650",
    "end": "907690"
  },
  {
    "text": "jump to the related spot in our video",
    "start": "907690",
    "end": "909400"
  },
  {
    "text": "player recognition also provides other",
    "start": "909400",
    "end": "911860"
  },
  {
    "text": "demographic information for each",
    "start": "911860",
    "end": "913270"
  },
  {
    "text": "detected face things like gender",
    "start": "913270",
    "end": "915460"
  },
  {
    "text": "eyeglasses beards and mustaches for",
    "start": "915460",
    "end": "918070"
  },
  {
    "text": "example next let's see how recognition",
    "start": "918070",
    "end": "921340"
  },
  {
    "text": "works for celebrity recognition in",
    "start": "921340",
    "end": "923020"
  },
  {
    "text": "videos here's a similar demo to the last",
    "start": "923020",
    "end": "925990"
  },
  {
    "text": "one on the left side of the screen we",
    "start": "925990",
    "end": "928630"
  },
  {
    "text": "have one of our Amazon Prime video",
    "start": "928630",
    "end": "930040"
  },
  {
    "text": "commercials featuring Jeremy Clarkson on",
    "start": "930040",
    "end": "932080"
  },
  {
    "text": "the right side of the screen we have a",
    "start": "932080",
    "end": "933910"
  },
  {
    "text": "button that will load the results we",
    "start": "933910",
    "end": "935320"
  },
  {
    "text": "obtained from calling the get celebrity",
    "start": "935320",
    "end": "937150"
  },
  {
    "text": "recognition API as you can see it found",
    "start": "937150",
    "end": "939760"
  },
  {
    "text": "three celebrities in this video other",
    "start": "939760",
    "end": "941680"
  },
  {
    "text": "than Jeremy Clarkson recognition found",
    "start": "941680",
    "end": "943960"
  },
  {
    "text": "Richard Hammond",
    "start": "943960",
    "end": "945649"
  },
  {
    "text": "and James may as well just like the face",
    "start": "945649",
    "end": "949399"
  },
  {
    "text": "Search API the celebrity detection API",
    "start": "949399",
    "end": "951889"
  },
  {
    "text": "for videos return some timestamps for",
    "start": "951889",
    "end": "953990"
  },
  {
    "text": "each detection in the clip the celebrity",
    "start": "953990",
    "end": "957230"
  },
  {
    "text": "recognition API returns the celebrity",
    "start": "957230",
    "end": "959209"
  },
  {
    "text": "name and any relevant URLs for each",
    "start": "959209",
    "end": "961279"
  },
  {
    "text": "celebrity for our final video demo let's",
    "start": "961279",
    "end": "966170"
  },
  {
    "text": "look at object and label detection for",
    "start": "966170",
    "end": "968119"
  },
  {
    "text": "videos here we're using the same",
    "start": "968119",
    "end": "970759"
  },
  {
    "text": "builders video as before but this time",
    "start": "970759",
    "end": "972949"
  },
  {
    "text": "we're using the get label detection API",
    "start": "972949",
    "end": "975829"
  },
  {
    "text": "to find objects and scene labels for the",
    "start": "975829",
    "end": "978319"
  },
  {
    "text": "video instead of facial detection when",
    "start": "978319",
    "end": "980480"
  },
  {
    "text": "we load the results you can see that",
    "start": "980480",
    "end": "982160"
  },
  {
    "text": "recognition returned 73 unique labels",
    "start": "982160",
    "end": "984800"
  },
  {
    "text": "across a total of more than a thousand",
    "start": "984800",
    "end": "986990"
  },
  {
    "text": "results from the entire video looks like",
    "start": "986990",
    "end": "989389"
  },
  {
    "text": "it did a pretty good job here as you can",
    "start": "989389",
    "end": "991490"
  },
  {
    "text": "see from all the results below colored",
    "start": "991490",
    "end": "993589"
  },
  {
    "text": "by their confidence corner for example",
    "start": "993589",
    "end": "995689"
  },
  {
    "text": "and correctly identified that this video",
    "start": "995689",
    "end": "997579"
  },
  {
    "text": "contains scenes with a meeting room that",
    "start": "997579",
    "end": "999829"
  },
  {
    "text": "shows a lot of intelligence here's how",
    "start": "999829",
    "end": "1001959"
  },
  {
    "text": "these demos work unlike recognitions API",
    "start": "1001959",
    "end": "1005740"
  },
  {
    "text": "operations for images which return",
    "start": "1005740",
    "end": "1008079"
  },
  {
    "text": "results immediately",
    "start": "1008079",
    "end": "1009269"
  },
  {
    "text": "analyzing videos works in any",
    "start": "1009269",
    "end": "1011350"
  },
  {
    "text": "synchronous fashion we started by",
    "start": "1011350",
    "end": "1014379"
  },
  {
    "text": "storing the video files on Amazon s3",
    "start": "1014379",
    "end": "1016259"
  },
  {
    "text": "then we called one of recognitions",
    "start": "1016259",
    "end": "1018939"
  },
  {
    "text": "asynchronous api's like start face",
    "start": "1018939",
    "end": "1021699"
  },
  {
    "text": "detection or start celebrity recognition",
    "start": "1021699",
    "end": "1024100"
  },
  {
    "text": "including the information for the video",
    "start": "1024100",
    "end": "1026079"
  },
  {
    "text": "files location on s3",
    "start": "1026079",
    "end": "1027788"
  },
  {
    "text": "and a resource identifier or a RN for an",
    "start": "1027789",
    "end": "1031178"
  },
  {
    "text": "Amazon simple notification service topic",
    "start": "1031179",
    "end": "1034409"
  },
  {
    "text": "after the analysis finishes recognition",
    "start": "1034409",
    "end": "1037659"
  },
  {
    "text": "publishes a notification to the topic we",
    "start": "1037659",
    "end": "1039668"
  },
  {
    "text": "provided we connected this topic to",
    "start": "1039669",
    "end": "1043029"
  },
  {
    "text": "invoke a lambda function which then",
    "start": "1043029",
    "end": "1044860"
  },
  {
    "text": "fetches the results from recognition",
    "start": "1044860",
    "end": "1046630"
  },
  {
    "text": "using the next appropriate call like get",
    "start": "1046630",
    "end": "1049419"
  },
  {
    "text": "face detection or get celebrity",
    "start": "1049419",
    "end": "1051429"
  },
  {
    "text": "recognition when the lambda function",
    "start": "1051429",
    "end": "1054549"
  },
  {
    "text": "gets the results it stores them in",
    "start": "1054549",
    "end": "1056380"
  },
  {
    "text": "dynamodb ready for our simple web app to",
    "start": "1056380",
    "end": "1058779"
  },
  {
    "text": "query all of the static content for the",
    "start": "1058779",
    "end": "1062740"
  },
  {
    "text": "web page on the demo was hosted in s3",
    "start": "1062740",
    "end": "1064690"
  },
  {
    "text": "and for fetching our results out of",
    "start": "1064690",
    "end": "1067539"
  },
  {
    "text": "DynamoDB our web that makes simple Ajax",
    "start": "1067539",
    "end": "1070270"
  },
  {
    "text": "calls to the API gateway which uses",
    "start": "1070270",
    "end": "1073149"
  },
  {
    "text": "another lambda function to query",
    "start": "1073149",
    "end": "1074500"
  },
  {
    "text": "DynamoDB and return the results",
    "start": "1074500",
    "end": "1078070"
  },
  {
    "text": "as you can see like the image search",
    "start": "1078070",
    "end": "1079930"
  },
  {
    "text": "demo we saw earlier we've built a",
    "start": "1079930",
    "end": "1082090"
  },
  {
    "text": "surrealist solution for video analysis",
    "start": "1082090",
    "end": "1083890"
  },
  {
    "text": "and search",
    "start": "1083890",
    "end": "1086340"
  },
  {
    "text": "besides the features we just saw in",
    "start": "1086340",
    "end": "1088420"
  },
  {
    "text": "these demos Amazon recognition also",
    "start": "1088420",
    "end": "1091000"
  },
  {
    "text": "performs person tracking this lets you",
    "start": "1091000",
    "end": "1094210"
  },
  {
    "text": "track people throughout a video learning",
    "start": "1094210",
    "end": "1096220"
  },
  {
    "text": "their positions within each frame as",
    "start": "1096220",
    "end": "1097750"
  },
  {
    "text": "well as the time stamp tone when they're",
    "start": "1097750",
    "end": "1099580"
  },
  {
    "text": "seen in the video it can even track",
    "start": "1099580",
    "end": "1102190"
  },
  {
    "text": "people through frames when their faces",
    "start": "1102190",
    "end": "1103990"
  },
  {
    "text": "are obscured or not facing the camera",
    "start": "1103990",
    "end": "1106800"
  },
  {
    "text": "the get person tracking API returns this",
    "start": "1106800",
    "end": "1109870"
  },
  {
    "text": "location information for each detected",
    "start": "1109870",
    "end": "1112030"
  },
  {
    "text": "person as well as any detected facial",
    "start": "1112030",
    "end": "1114460"
  },
  {
    "text": "landmarks for each person recognition",
    "start": "1114460",
    "end": "1117730"
  },
  {
    "text": "also allows you to perform searches of",
    "start": "1117730",
    "end": "1119620"
  },
  {
    "text": "detected faces against a collection of",
    "start": "1119620",
    "end": "1121480"
  },
  {
    "text": "faces you've previously defined if you",
    "start": "1121480",
    "end": "1124630"
  },
  {
    "text": "define a collection of faces with the",
    "start": "1124630",
    "end": "1126340"
  },
  {
    "text": "create collection API and populate it",
    "start": "1126340",
    "end": "1128410"
  },
  {
    "text": "with results from the index faces API",
    "start": "1128410",
    "end": "1130530"
  },
  {
    "text": "recognition video can search your videos",
    "start": "1130530",
    "end": "1132910"
  },
  {
    "text": "for matches against this collection",
    "start": "1132910",
    "end": "1134500"
  },
  {
    "text": "using the face Search API s and as I",
    "start": "1134500",
    "end": "1138880"
  },
  {
    "text": "mentioned before recognition lets you",
    "start": "1138880",
    "end": "1140830"
  },
  {
    "text": "detect explicit and suggestive content",
    "start": "1140830",
    "end": "1143200"
  },
  {
    "text": "in your videos giving you the",
    "start": "1143200",
    "end": "1144640"
  },
  {
    "text": "opportunity to flag or filter content",
    "start": "1144640",
    "end": "1146710"
  },
  {
    "text": "based on your applications needs one",
    "start": "1146710",
    "end": "1150970"
  },
  {
    "text": "customer doing cool things with this",
    "start": "1150970",
    "end": "1152560"
  },
  {
    "text": "service is the take they work with movie",
    "start": "1152560",
    "end": "1155170"
  },
  {
    "text": "studios and TV networks using Amazon",
    "start": "1155170",
    "end": "1157540"
  },
  {
    "text": "recognition to scalably identify and",
    "start": "1157540",
    "end": "1159640"
  },
  {
    "text": "track actors across millions of frames",
    "start": "1159640",
    "end": "1162070"
  },
  {
    "text": "of content another interesting use case",
    "start": "1162070",
    "end": "1165460"
  },
  {
    "text": "comes from c-span",
    "start": "1165460",
    "end": "1166480"
  },
  {
    "text": "a public service that provides",
    "start": "1166480",
    "end": "1168010"
  },
  {
    "text": "gavel-to-gavel coverage of US government",
    "start": "1168010",
    "end": "1170260"
  },
  {
    "text": "proceedings without any manual editing",
    "start": "1170260",
    "end": "1173970"
  },
  {
    "text": "c-span uses Amazon recognition to",
    "start": "1173970",
    "end": "1176500"
  },
  {
    "text": "automate footage tagging for more than",
    "start": "1176500",
    "end": "1178650"
  },
  {
    "text": "90,000 people and saves nine thousand",
    "start": "1178650",
    "end": "1181750"
  },
  {
    "text": "hours a year in labor we've talked about",
    "start": "1181750",
    "end": "1185890"
  },
  {
    "text": "how Amazon recognition can help you to",
    "start": "1185890",
    "end": "1187780"
  },
  {
    "text": "perform image and video analysis for",
    "start": "1187780",
    "end": "1189520"
  },
  {
    "text": "stored images and videos but what about",
    "start": "1189520",
    "end": "1193000"
  },
  {
    "text": "streaming videos of course we've made",
    "start": "1193000",
    "end": "1196540"
  },
  {
    "text": "this possible as well by orchestrating",
    "start": "1196540",
    "end": "1198490"
  },
  {
    "text": "recognition with Amazon Kinesis video",
    "start": "1198490",
    "end": "1200980"
  },
  {
    "text": "streams Amazon Kinesis video streams is",
    "start": "1200980",
    "end": "1205450"
  },
  {
    "text": "a secure and scalable service for",
    "start": "1205450",
    "end": "1207610"
  },
  {
    "text": "streaming video from connected devices",
    "start": "1207610",
    "end": "1209620"
  },
  {
    "text": "to AWS for",
    "start": "1209620",
    "end": "1211330"
  },
  {
    "text": "a Linux machine learning and other",
    "start": "1211330",
    "end": "1213580"
  },
  {
    "text": "processing it automatically provisions",
    "start": "1213580",
    "end": "1216700"
  },
  {
    "text": "and can elastically scale all of the",
    "start": "1216700",
    "end": "1218740"
  },
  {
    "text": "infrastructure needed to ingest",
    "start": "1218740",
    "end": "1220090"
  },
  {
    "text": "streaming video data from millions of",
    "start": "1220090",
    "end": "1222070"
  },
  {
    "text": "devices",
    "start": "1222070",
    "end": "1222820"
  },
  {
    "text": "it also durably stores encrypts and",
    "start": "1222820",
    "end": "1226150"
  },
  {
    "text": "indexes of video data in your streams",
    "start": "1226150",
    "end": "1228340"
  },
  {
    "text": "and allows you to access your data",
    "start": "1228340",
    "end": "1230020"
  },
  {
    "text": "through easy-to-use",
    "start": "1230020",
    "end": "1231250"
  },
  {
    "text": "AP is to send streaming video data into",
    "start": "1231250",
    "end": "1235720"
  },
  {
    "text": "a Kinesis video stream you'll want to",
    "start": "1235720",
    "end": "1237790"
  },
  {
    "text": "use one of our producer SDKs which make",
    "start": "1237790",
    "end": "1240070"
  },
  {
    "text": "it easy to securely and reliably stream",
    "start": "1240070",
    "end": "1242470"
  },
  {
    "text": "your video data to AWS currently we have",
    "start": "1242470",
    "end": "1245770"
  },
  {
    "text": "producer SDKs available for Java and C++",
    "start": "1245770",
    "end": "1249030"
  },
  {
    "text": "then once your streaming data into a",
    "start": "1249030",
    "end": "1252220"
  },
  {
    "text": "Kinesis video stream you can point",
    "start": "1252220",
    "end": "1254170"
  },
  {
    "text": "recognition at it for analysis let's see",
    "start": "1254170",
    "end": "1257860"
  },
  {
    "text": "how this works there are three parts",
    "start": "1257860",
    "end": "1261310"
  },
  {
    "text": "that you'll need when you want to do",
    "start": "1261310",
    "end": "1263170"
  },
  {
    "text": "video streaming analysis first an amazon",
    "start": "1263170",
    "end": "1267250"
  },
  {
    "text": "Kinesis video stream to send in your",
    "start": "1267250",
    "end": "1269860"
  },
  {
    "text": "streaming video content as mentioned",
    "start": "1269860",
    "end": "1273010"
  },
  {
    "text": "you'll probably want to use the producer",
    "start": "1273010",
    "end": "1274930"
  },
  {
    "text": "SDK to make it easy to capture video",
    "start": "1274930",
    "end": "1277090"
  },
  {
    "text": "from your devices and stream it directly",
    "start": "1277090",
    "end": "1279160"
  },
  {
    "text": "to your Kinesis video stream the",
    "start": "1279160",
    "end": "1281290"
  },
  {
    "text": "producer SDK will also handle the stream",
    "start": "1281290",
    "end": "1284080"
  },
  {
    "text": "creation token rotation and other",
    "start": "1284080",
    "end": "1286690"
  },
  {
    "text": "actions for reliable streaming you'll",
    "start": "1286690",
    "end": "1290200"
  },
  {
    "text": "also need to take note of the AR N of",
    "start": "1290200",
    "end": "1292210"
  },
  {
    "text": "the Kinesis video stream that will be",
    "start": "1292210",
    "end": "1294220"
  },
  {
    "text": "receiving the content next you need to",
    "start": "1294220",
    "end": "1297910"
  },
  {
    "text": "create a Kinesis data stream to store",
    "start": "1297910",
    "end": "1300400"
  },
  {
    "text": "the results that recognition produces as",
    "start": "1300400",
    "end": "1302290"
  },
  {
    "text": "it analyzes the streaming video content",
    "start": "1302290",
    "end": "1304560"
  },
  {
    "text": "you'll want to note down this AR n also",
    "start": "1304560",
    "end": "1308520"
  },
  {
    "text": "that takes care of setting up the source",
    "start": "1308520",
    "end": "1310870"
  },
  {
    "text": "and destination Kinesis streams now you",
    "start": "1310870",
    "end": "1313300"
  },
  {
    "text": "just need to connect them together",
    "start": "1313300",
    "end": "1315390"
  },
  {
    "text": "amazon recognition has a built-in stream",
    "start": "1315390",
    "end": "1318010"
  },
  {
    "text": "processor that can receive video streams",
    "start": "1318010",
    "end": "1320350"
  },
  {
    "text": "analyze the data and send their results",
    "start": "1320350",
    "end": "1322750"
  },
  {
    "text": "out as it processes the frames start",
    "start": "1322750",
    "end": "1326500"
  },
  {
    "text": "with creating a recognition video stream",
    "start": "1326500",
    "end": "1328330"
  },
  {
    "text": "processor providing the AR NS for the",
    "start": "1328330",
    "end": "1330730"
  },
  {
    "text": "incoming video stream and the outgoing",
    "start": "1330730",
    "end": "1332860"
  },
  {
    "text": "data streams you created then",
    "start": "1332860",
    "end": "1335850"
  },
  {
    "text": "recognition glues this process together",
    "start": "1335850",
    "end": "1338410"
  },
  {
    "text": "and is ready to run which you can",
    "start": "1338410",
    "end": "1340690"
  },
  {
    "text": "trigger using one of recognition",
    "start": "1340690",
    "end": "1342519"
  },
  {
    "text": "start api's like start person tracking",
    "start": "1342519",
    "end": "1345999"
  },
  {
    "text": "or start label detection for example",
    "start": "1345999",
    "end": "1350309"
  },
  {
    "text": "after completing all the parts needed",
    "start": "1350309",
    "end": "1352960"
  },
  {
    "text": "your application can now consume the",
    "start": "1352960",
    "end": "1355330"
  },
  {
    "text": "data from the Kinesis data stream one of",
    "start": "1355330",
    "end": "1359230"
  },
  {
    "text": "our customers performing streaming video",
    "start": "1359230",
    "end": "1360940"
  },
  {
    "text": "analysis with amazon recognition is the",
    "start": "1360940",
    "end": "1363129"
  },
  {
    "text": "city of Orlando Florida in the United",
    "start": "1363129",
    "end": "1365350"
  },
  {
    "text": "States the Orlando Police Department is",
    "start": "1365350",
    "end": "1368230"
  },
  {
    "text": "running a pilot program to analyze live",
    "start": "1368230",
    "end": "1370570"
  },
  {
    "text": "video feeds from cameras using",
    "start": "1370570",
    "end": "1372549"
  },
  {
    "text": "recognition to provide a real-time",
    "start": "1372549",
    "end": "1374169"
  },
  {
    "text": "detection and notification regarding",
    "start": "1374169",
    "end": "1376600"
  },
  {
    "text": "persons of interest so now that you've",
    "start": "1376600",
    "end": "1380799"
  },
  {
    "text": "seen how recognition once you leverage",
    "start": "1380799",
    "end": "1382570"
  },
  {
    "text": "the power of machine learning for image",
    "start": "1382570",
    "end": "1384369"
  },
  {
    "text": "and video analysis without any of the",
    "start": "1384369",
    "end": "1386950"
  },
  {
    "text": "hassle of needing to train and deploy",
    "start": "1386950",
    "end": "1388509"
  },
  {
    "text": "your own models how are you going to put",
    "start": "1388509",
    "end": "1391119"
  },
  {
    "text": "it to work in your applications if you",
    "start": "1391119",
    "end": "1394779"
  },
  {
    "text": "want some more inspiration here are a",
    "start": "1394779",
    "end": "1396730"
  },
  {
    "text": "few more use cases if your website or",
    "start": "1396730",
    "end": "1399879"
  },
  {
    "text": "app contains user generated or submitted",
    "start": "1399879",
    "end": "1402009"
  },
  {
    "text": "content you probably want to know if",
    "start": "1402009",
    "end": "1404409"
  },
  {
    "text": "that material is free of explicit or",
    "start": "1404409",
    "end": "1406720"
  },
  {
    "text": "suggestive content you can set up an",
    "start": "1406720",
    "end": "1409720"
  },
  {
    "text": "automatic moderation pipeline like this",
    "start": "1409720",
    "end": "1412049"
  },
  {
    "text": "if you store your uploads on Amazon s3",
    "start": "1412049",
    "end": "1415389"
  },
  {
    "text": "you can trigger a lambda function",
    "start": "1415389",
    "end": "1417279"
  },
  {
    "text": "whenever new content is added to your",
    "start": "1417279",
    "end": "1419320"
  },
  {
    "text": "storage bucket the lambda function can",
    "start": "1419320",
    "end": "1422080"
  },
  {
    "text": "use recognitions detect moderation",
    "start": "1422080",
    "end": "1423999"
  },
  {
    "text": "labels API and if it gets any labels",
    "start": "1423999",
    "end": "1427330"
  },
  {
    "text": "back you could decide to set the image",
    "start": "1427330",
    "end": "1429100"
  },
  {
    "text": "aside for a review by a human before",
    "start": "1429100",
    "end": "1431019"
  },
  {
    "text": "showing it to your users here's another",
    "start": "1431019",
    "end": "1434710"
  },
  {
    "text": "cool use case automatic sentiment",
    "start": "1434710",
    "end": "1437200"
  },
  {
    "text": "analysis for a retail store you could",
    "start": "1437200",
    "end": "1440259"
  },
  {
    "text": "take streaming video feeds from a retail",
    "start": "1440259",
    "end": "1442059"
  },
  {
    "text": "store and have recognition perform",
    "start": "1442059",
    "end": "1443889"
  },
  {
    "text": "real-time demographic and sentiment",
    "start": "1443889",
    "end": "1446200"
  },
  {
    "text": "analysis on the faces of the people it",
    "start": "1446200",
    "end": "1447999"
  },
  {
    "text": "sees in the store you could keep this",
    "start": "1447999",
    "end": "1451179"
  },
  {
    "text": "metadata on s3 periodically load it into",
    "start": "1451179",
    "end": "1454029"
  },
  {
    "text": "redshift and plug it into quick site to",
    "start": "1454029",
    "end": "1456100"
  },
  {
    "text": "easily analyze the content and visualize",
    "start": "1456100",
    "end": "1458499"
  },
  {
    "text": "trends and demographic data and customer",
    "start": "1458499",
    "end": "1460419"
  },
  {
    "text": "sentiment over time as you can see",
    "start": "1460419",
    "end": "1464759"
  },
  {
    "text": "Amazon recognition lets you add powerful",
    "start": "1464759",
    "end": "1467830"
  },
  {
    "text": "AI image and video analysis capabilities",
    "start": "1467830",
    "end": "1470590"
  },
  {
    "text": "to your applications in minutes with",
    "start": "1470590",
    "end": "1472960"
  },
  {
    "text": "only a few lines of code",
    "start": "1472960",
    "end": "1476659"
  },
  {
    "text": "automatically extract objects and scene",
    "start": "1476659",
    "end": "1478950"
  },
  {
    "text": "descriptions recognizer compare faces",
    "start": "1478950",
    "end": "1481409"
  },
  {
    "text": "detects suggestive or explicit visual",
    "start": "1481409",
    "end": "1483840"
  },
  {
    "text": "content collect demographic details",
    "start": "1483840",
    "end": "1485820"
  },
  {
    "text": "track people and things and video",
    "start": "1485820",
    "end": "1488039"
  },
  {
    "text": "streams perform sentiment analysis and",
    "start": "1488039",
    "end": "1490409"
  },
  {
    "text": "more it's easy to get started and",
    "start": "1490409",
    "end": "1493649"
  },
  {
    "text": "cost-effective too I hope I've inspired",
    "start": "1493649",
    "end": "1497100"
  },
  {
    "text": "you to dive in and leverage recognition",
    "start": "1497100",
    "end": "1499350"
  },
  {
    "text": "in your own apps and I can't wait to",
    "start": "1499350",
    "end": "1501390"
  },
  {
    "text": "hear about what you build to see even",
    "start": "1501390",
    "end": "1505080"
  },
  {
    "text": "more examples of what you can build with",
    "start": "1505080",
    "end": "1506519"
  },
  {
    "text": "recognition",
    "start": "1506519",
    "end": "1507299"
  },
  {
    "text": "check out the AWS samples or apposite or",
    "start": "1507299",
    "end": "1509850"
  },
  {
    "text": "e on github you'll find working code for",
    "start": "1509850",
    "end": "1512490"
  },
  {
    "text": "a variety of tasks including making a",
    "start": "1512490",
    "end": "1515100"
  },
  {
    "text": "smart image cropping Twitter bot finding",
    "start": "1515100",
    "end": "1517649"
  },
  {
    "text": "missing people using social media",
    "start": "1517649",
    "end": "1519049"
  },
  {
    "text": "performing automatic content moderation",
    "start": "1519049",
    "end": "1521549"
  },
  {
    "text": "for chats and of course a service hot",
    "start": "1521549",
    "end": "1524549"
  },
  {
    "text": "dog detection app to continue your",
    "start": "1524549",
    "end": "1527909"
  },
  {
    "text": "learning journey we have a lot of",
    "start": "1527909",
    "end": "1529679"
  },
  {
    "text": "options to help you out to gain more",
    "start": "1529679",
    "end": "1532260"
  },
  {
    "text": "confidence and hands-on experience with",
    "start": "1532260",
    "end": "1534240"
  },
  {
    "text": "AWS we offer free self-paced digital",
    "start": "1534240",
    "end": "1537690"
  },
  {
    "text": "training in the form of online courses",
    "start": "1537690",
    "end": "1539580"
  },
  {
    "text": "built by AWS experts you can also attend",
    "start": "1539580",
    "end": "1544200"
  },
  {
    "text": "our instructor-led classes taught by",
    "start": "1544200",
    "end": "1546179"
  },
  {
    "text": "qualified AWS instructors and learn how",
    "start": "1546179",
    "end": "1548880"
  },
  {
    "text": "to design deploy and operate highly",
    "start": "1548880",
    "end": "1551820"
  },
  {
    "text": "available cost-effective and secure",
    "start": "1551820",
    "end": "1553860"
  },
  {
    "text": "applications on AWS and finally when you",
    "start": "1553860",
    "end": "1558690"
  },
  {
    "text": "feel ready",
    "start": "1558690",
    "end": "1559350"
  },
  {
    "text": "why not validate your technical",
    "start": "1559350",
    "end": "1561210"
  },
  {
    "text": "experience with AWS by pursuing an AWS",
    "start": "1561210",
    "end": "1564299"
  },
  {
    "text": "certification you can learn more about",
    "start": "1564299",
    "end": "1567000"
  },
  {
    "text": "all of these options at w WAW s training",
    "start": "1567000",
    "end": "1573230"
  },
  {
    "text": "AWS also has a wide partner ecosystem to",
    "start": "1573230",
    "end": "1577019"
  },
  {
    "text": "help you focus on your success and take",
    "start": "1577019",
    "end": "1579149"
  },
  {
    "text": "full advantage of all the business",
    "start": "1579149",
    "end": "1581159"
  },
  {
    "text": "benefits that AWS has to offer to learn",
    "start": "1581159",
    "end": "1584490"
  },
  {
    "text": "more about APN partners and find the",
    "start": "1584490",
    "end": "1586799"
  },
  {
    "text": "right one that fits your needs please",
    "start": "1586799",
    "end": "1588960"
  },
  {
    "text": "visit the AWS APN booth",
    "start": "1588960",
    "end": "1591210"
  },
  {
    "text": "at our showcase thanks again for taking",
    "start": "1591210",
    "end": "1594840"
  },
  {
    "text": "the time to learn about Amazon",
    "start": "1594840",
    "end": "1596279"
  },
  {
    "text": "recognition today please take a few more",
    "start": "1596279",
    "end": "1599159"
  },
  {
    "text": "moments to provide feedback on today's",
    "start": "1599159",
    "end": "1600960"
  },
  {
    "text": "event so we can continue to improve and",
    "start": "1600960",
    "end": "1603270"
  },
  {
    "text": "innovate on behalf of our customers I'm",
    "start": "1603270",
    "end": "1605940"
  },
  {
    "text": "Gabe Holland me thanks very much and",
    "start": "1605940",
    "end": "1608070"
  },
  {
    "text": "build on",
    "start": "1608070",
    "end": "1610490"
  }
]