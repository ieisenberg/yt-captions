[
  {
    "start": "0",
    "end": "16000"
  },
  {
    "text": "[Music]",
    "start": "0",
    "end": "6049"
  },
  {
    "text": "hello my name is American Adam and I'm a",
    "start": "6049",
    "end": "9630"
  },
  {
    "text": "senior solution architect at AWS in this",
    "start": "9630",
    "end": "12420"
  },
  {
    "text": "video we are going to learn about using",
    "start": "12420",
    "end": "14280"
  },
  {
    "text": "lambda layers in darknet first we will",
    "start": "14280",
    "end": "17640"
  },
  {
    "start": "16000",
    "end": "34000"
  },
  {
    "text": "have a quick introduction of a SS lambda",
    "start": "17640",
    "end": "19859"
  },
  {
    "text": "and then learn about using lambda layers",
    "start": "19859",
    "end": "22050"
  },
  {
    "text": "later we will take a look at how lambda",
    "start": "22050",
    "end": "24779"
  },
  {
    "text": "layers work we will then go through a",
    "start": "24779",
    "end": "26910"
  },
  {
    "text": "demo of creating and publishing lambda",
    "start": "26910",
    "end": "29099"
  },
  {
    "text": "layers in darknet and make use of the",
    "start": "29099",
    "end": "31560"
  },
  {
    "text": "lambda layer in a sample lambda function",
    "start": "31560",
    "end": "34280"
  },
  {
    "text": "eight of this lambda is a service",
    "start": "34280",
    "end": "36930"
  },
  {
    "text": "environment that allows you to run your",
    "start": "36930",
    "end": "38760"
  },
  {
    "text": "code without provisioning or managing",
    "start": "38760",
    "end": "40649"
  },
  {
    "text": "any servers you just upload the code and",
    "start": "40649",
    "end": "43379"
  },
  {
    "text": "lambda takes care of everything required",
    "start": "43379",
    "end": "45450"
  },
  {
    "text": "to run the code and scales as needed to",
    "start": "45450",
    "end": "48539"
  },
  {
    "text": "support high availability you only pay",
    "start": "48539",
    "end": "51360"
  },
  {
    "text": "for the time the lambda is run in 100",
    "start": "51360",
    "end": "53940"
  },
  {
    "text": "millisecond increments and pay nothing",
    "start": "53940",
    "end": "56010"
  },
  {
    "text": "if the lambda is not running you can",
    "start": "56010",
    "end": "58949"
  },
  {
    "text": "invoke a lambda through HTTP using",
    "start": "58949",
    "end": "62010"
  },
  {
    "text": "Amazon API gateway or configure various",
    "start": "62010",
    "end": "65220"
  },
  {
    "text": "trigger events from other a SS services",
    "start": "65220",
    "end": "68220"
  },
  {
    "text": "such as Amazon s3 Amazon sqs Amazon SNS",
    "start": "68220",
    "end": "71970"
  },
  {
    "text": "and many more lambda layers was",
    "start": "71970",
    "end": "75420"
  },
  {
    "start": "73000",
    "end": "94000"
  },
  {
    "text": "introduced in November 2018",
    "start": "75420",
    "end": "77640"
  },
  {
    "text": "during green web conference it allows",
    "start": "77640",
    "end": "80310"
  },
  {
    "text": "you to package a part of your",
    "start": "80310",
    "end": "81840"
  },
  {
    "text": "application code into a zip file and",
    "start": "81840",
    "end": "83670"
  },
  {
    "text": "upload it as a layer you can package",
    "start": "83670",
    "end": "86640"
  },
  {
    "text": "application dependencies or custom",
    "start": "86640",
    "end": "89070"
  },
  {
    "text": "runtime components into a layer and",
    "start": "89070",
    "end": "91140"
  },
  {
    "text": "refer the layer in other lambda",
    "start": "91140",
    "end": "92970"
  },
  {
    "text": "functions",
    "start": "92970",
    "end": "95420"
  },
  {
    "start": "94000",
    "end": "182000"
  },
  {
    "text": "[Music]",
    "start": "95440",
    "end": "96630"
  },
  {
    "text": "now let's take a look at how and the",
    "start": "96630",
    "end": "99280"
  },
  {
    "text": "layers works let's assume that there are",
    "start": "99280",
    "end": "101140"
  },
  {
    "text": "two lambda functions called my lambda",
    "start": "101140",
    "end": "103240"
  },
  {
    "text": "function one and my lambda function two",
    "start": "103240",
    "end": "105310"
  },
  {
    "text": "and both lambda functions use my logic",
    "start": "105310",
    "end": "108130"
  },
  {
    "text": "library dll and my exception handling",
    "start": "108130",
    "end": "110799"
  },
  {
    "text": "libraries are dll library files when you",
    "start": "110799",
    "end": "113500"
  },
  {
    "text": "deploy them to lambda they get deployed",
    "start": "113500",
    "end": "115840"
  },
  {
    "text": "in separate packages as shown here along",
    "start": "115840",
    "end": "118540"
  },
  {
    "text": "with the common components that get",
    "start": "118540",
    "end": "120399"
  },
  {
    "text": "deployed in each one of the lambda",
    "start": "120399",
    "end": "121960"
  },
  {
    "text": "function notice the size of the each one",
    "start": "121960",
    "end": "124810"
  },
  {
    "text": "of the lambda functions being 3.2",
    "start": "124810",
    "end": "127119"
  },
  {
    "text": "megabytes and 3.5 mega bytes",
    "start": "127119",
    "end": "129009"
  },
  {
    "text": "respectively",
    "start": "129009",
    "end": "129910"
  },
  {
    "text": "totaling 6.7 megabytes all together when",
    "start": "129910",
    "end": "133570"
  },
  {
    "text": "you use lambda layers you can separate",
    "start": "133570",
    "end": "135940"
  },
  {
    "text": "the common components into a layer and",
    "start": "135940",
    "end": "137940"
  },
  {
    "text": "only package their application specific",
    "start": "137940",
    "end": "140890"
  },
  {
    "text": "files into their respective packages as",
    "start": "140890",
    "end": "144160"
  },
  {
    "text": "shown here now look at the size of the",
    "start": "144160",
    "end": "146620"
  },
  {
    "text": "application packages being much smaller",
    "start": "146620",
    "end": "148630"
  },
  {
    "text": "and the combined space used by the",
    "start": "148630",
    "end": "151239"
  },
  {
    "text": "lambda functions and the layer is just",
    "start": "151239",
    "end": "153489"
  },
  {
    "text": "3.7 megabytes compared to 6.7 megabytes",
    "start": "153489",
    "end": "157030"
  },
  {
    "text": "earlier let's take the case of my lambda",
    "start": "157030",
    "end": "159850"
  },
  {
    "text": "function 1 as an example when you invoke",
    "start": "159850",
    "end": "162489"
  },
  {
    "text": "the lambda function the layer components",
    "start": "162489",
    "end": "164980"
  },
  {
    "text": "are dynamically pulled and deployed into",
    "start": "164980",
    "end": "168579"
  },
  {
    "text": "the big folder in case of dotnet core",
    "start": "168579",
    "end": "170829"
  },
  {
    "text": "being the runtime for languages like",
    "start": "170829",
    "end": "173140"
  },
  {
    "text": "Ruby Python nodejs etc the layered",
    "start": "173140",
    "end": "176110"
  },
  {
    "text": "components are copied to opt folder in",
    "start": "176110",
    "end": "178600"
  },
  {
    "text": "the relaxed environment to make this",
    "start": "178600",
    "end": "184720"
  },
  {
    "start": "182000",
    "end": "206000"
  },
  {
    "text": "work in dotnet lambda layers uses a",
    "start": "184720",
    "end": "187030"
  },
  {
    "text": "technique called a runtime package store",
    "start": "187030",
    "end": "188920"
  },
  {
    "text": "it is a feature that was introduced in",
    "start": "188920",
    "end": "190989"
  },
  {
    "text": "dart nerd code 2.0 it basically allows",
    "start": "190989",
    "end": "193600"
  },
  {
    "text": "you to package and deploy apps against a",
    "start": "193600",
    "end": "196239"
  },
  {
    "text": "known set of packages that exist in the",
    "start": "196239",
    "end": "198579"
  },
  {
    "text": "target environment to benefit from",
    "start": "198579",
    "end": "200530"
  },
  {
    "text": "faster deployments lower disk space",
    "start": "200530",
    "end": "202720"
  },
  {
    "text": "usage and improved startup performance",
    "start": "202720",
    "end": "204730"
  },
  {
    "text": "in some cases all you have to do is",
    "start": "204730",
    "end": "208450"
  },
  {
    "start": "206000",
    "end": "231000"
  },
  {
    "text": "create an XML file based on this",
    "start": "208450",
    "end": "210910"
  },
  {
    "text": "template as shown here a sample file",
    "start": "210910",
    "end": "213400"
  },
  {
    "text": "could look like this as you might have",
    "start": "213400",
    "end": "215950"
  },
  {
    "text": "already noticed this XML file is based",
    "start": "215950",
    "end": "218799"
  },
  {
    "text": "on the typical CS proj file structure",
    "start": "218799",
    "end": "221310"
  },
  {
    "text": "optionally you could also use a CS proj",
    "start": "221310",
    "end": "224650"
  },
  {
    "text": "file for this process later in the video",
    "start": "224650",
    "end": "227290"
  },
  {
    "text": "we will see how this file is being",
    "start": "227290",
    "end": "229470"
  },
  {
    "text": "used to create lambda layers before we",
    "start": "229470",
    "end": "233700"
  },
  {
    "start": "231000",
    "end": "266000"
  },
  {
    "text": "see a demo of how to do this in the real",
    "start": "233700",
    "end": "236040"
  },
  {
    "text": "world let's walk through the tools we",
    "start": "236040",
    "end": "238410"
  },
  {
    "text": "have use in addition to installing and",
    "start": "238410",
    "end": "240600"
  },
  {
    "text": "configuring a SS CLI first install the",
    "start": "240600",
    "end": "243660"
  },
  {
    "text": "darknet lambda global tool using this",
    "start": "243660",
    "end": "246510"
  },
  {
    "text": "command which allows us to easily create",
    "start": "246510",
    "end": "249090"
  },
  {
    "text": "test and deploy lambda functions if you",
    "start": "249090",
    "end": "253020"
  },
  {
    "text": "already have the tool installed you need",
    "start": "253020",
    "end": "255450"
  },
  {
    "text": "to update it with this command in order",
    "start": "255450",
    "end": "257640"
  },
  {
    "text": "to work with lambda layers you will also",
    "start": "257640",
    "end": "260100"
  },
  {
    "text": "need to install lambda templates using",
    "start": "260100",
    "end": "262350"
  },
  {
    "text": "this command which will allow you to",
    "start": "262350",
    "end": "264210"
  },
  {
    "text": "create lambda projects easily now I'm on",
    "start": "264210",
    "end": "269400"
  },
  {
    "start": "266000",
    "end": "545000"
  },
  {
    "text": "the Ubuntu console using Windows 10 you",
    "start": "269400",
    "end": "272040"
  },
  {
    "text": "can also use PowerShell",
    "start": "272040",
    "end": "273270"
  },
  {
    "text": "or Windows command prompt for everything",
    "start": "273270",
    "end": "275490"
  },
  {
    "text": "that I'm going to show here I have",
    "start": "275490",
    "end": "277230"
  },
  {
    "text": "already installed and configured",
    "start": "277230",
    "end": "278820"
  },
  {
    "text": "aw CLI dotnet lambda tools and lambda",
    "start": "278820",
    "end": "282090"
  },
  {
    "text": "templates let's create a new lambda",
    "start": "282090",
    "end": "284460"
  },
  {
    "text": "project called demo layer using the",
    "start": "284460",
    "end": "286680"
  },
  {
    "text": "darknet lambda CLI the project will be",
    "start": "286680",
    "end": "289470"
  },
  {
    "text": "based on the lambda dot empty function",
    "start": "289470",
    "end": "291120"
  },
  {
    "text": "template the project has been created",
    "start": "291120",
    "end": "295050"
  },
  {
    "text": "successfully let's see the contents",
    "start": "295050",
    "end": "297930"
  },
  {
    "text": "inside you can clearly see that there is",
    "start": "297930",
    "end": "300510"
  },
  {
    "text": "a folder called demo layer created under",
    "start": "300510",
    "end": "302460"
  },
  {
    "text": "SRC which has the project files let's",
    "start": "302460",
    "end": "305130"
  },
  {
    "text": "get into it",
    "start": "305130",
    "end": "307580"
  },
  {
    "text": "I'm going to open this folder in vs code",
    "start": "309140",
    "end": "312060"
  },
  {
    "text": "to check the contents",
    "start": "312060",
    "end": "315350"
  },
  {
    "text": "as you can see this is a simple lambda",
    "start": "319270",
    "end": "322340"
  },
  {
    "text": "function that converts an input string",
    "start": "322340",
    "end": "324620"
  },
  {
    "text": "to uppercase and returns the converted",
    "start": "324620",
    "end": "327170"
  },
  {
    "text": "string let's see the CS proj file of the",
    "start": "327170",
    "end": "329990"
  },
  {
    "text": "project to see the nougat packages that",
    "start": "329990",
    "end": "332210"
  },
  {
    "text": "are referenced as you can see here there",
    "start": "332210",
    "end": "335270"
  },
  {
    "text": "are two nougat packages that are being",
    "start": "335270",
    "end": "337760"
  },
  {
    "text": "referenced in this lambda function I'm",
    "start": "337760",
    "end": "341660"
  },
  {
    "text": "going to create a new manifest file",
    "start": "341660",
    "end": "344000"
  },
  {
    "text": "which I will use to publish the lambda",
    "start": "344000",
    "end": "346340"
  },
  {
    "text": "layer I'm going to create the manifest",
    "start": "346340",
    "end": "351410"
  },
  {
    "text": "XML file by copying this content and",
    "start": "351410",
    "end": "354050"
  },
  {
    "text": "creating a new file and calling it",
    "start": "354050",
    "end": "356690"
  },
  {
    "text": "manifest our example now I am back on",
    "start": "356690",
    "end": "362210"
  },
  {
    "text": "the CLI and I am going to publish a new",
    "start": "362210",
    "end": "364610"
  },
  {
    "text": "lambda layer using the darknet lambda",
    "start": "364610",
    "end": "366920"
  },
  {
    "text": "publish layer command this will create a",
    "start": "366920",
    "end": "369290"
  },
  {
    "text": "new layer and push the layer contents to",
    "start": "369290",
    "end": "372260"
  },
  {
    "text": "the Amaya",
    "start": "372260",
    "end": "372920"
  },
  {
    "text": "- lambda layer s3 bucket notice that I",
    "start": "372920",
    "end": "376100"
  },
  {
    "text": "am also supplying the manifest XML file",
    "start": "376100",
    "end": "378860"
  },
  {
    "text": "as input for the package manifest",
    "start": "378860",
    "end": "381380"
  },
  {
    "text": "parameter the lambda layer has been",
    "start": "381380",
    "end": "384650"
  },
  {
    "text": "published successfully you can use the",
    "start": "384650",
    "end": "389480"
  },
  {
    "text": "dot and lambda list layers command to",
    "start": "389480",
    "end": "391760"
  },
  {
    "text": "list all lambda layers in your account",
    "start": "391760",
    "end": "393830"
  },
  {
    "text": "in the region as you can see the demo",
    "start": "393830",
    "end": "398180"
  },
  {
    "text": "layer lambda layer has been created",
    "start": "398180",
    "end": "399920"
  },
  {
    "text": "successfully you can also get the",
    "start": "399920",
    "end": "401630"
  },
  {
    "text": "details of the lambda layer using the",
    "start": "401630",
    "end": "403970"
  },
  {
    "text": "darknet clam de gate layered version",
    "start": "403970",
    "end": "405860"
  },
  {
    "text": "command this gives a lot of information",
    "start": "405860",
    "end": "410960"
  },
  {
    "text": "about the lambda layer like the manifest",
    "start": "410960",
    "end": "413510"
  },
  {
    "text": "location which is the s3 bucket location",
    "start": "413510",
    "end": "416090"
  },
  {
    "text": "whether the packages are optimized or",
    "start": "416090",
    "end": "418340"
  },
  {
    "text": "not and the packages directory as well",
    "start": "418340",
    "end": "420260"
  },
  {
    "text": "this also shows the negative akka jizz",
    "start": "420260",
    "end": "422660"
  },
  {
    "text": "that are present inside the lambda layer",
    "start": "422660",
    "end": "425320"
  },
  {
    "text": "now we are on the AWS lambda console as",
    "start": "425320",
    "end": "428450"
  },
  {
    "text": "you can see the lambda layer has been",
    "start": "428450",
    "end": "430370"
  },
  {
    "text": "published successfully now now let's go",
    "start": "430370",
    "end": "433100"
  },
  {
    "text": "to the s3 bucket and see what files have",
    "start": "433100",
    "end": "435350"
  },
  {
    "text": "been uploaded there",
    "start": "435350",
    "end": "436759"
  },
  {
    "text": "let's download these files and see",
    "start": "436759",
    "end": "438680"
  },
  {
    "text": "what's in there the packages dot zip",
    "start": "438680",
    "end": "441710"
  },
  {
    "text": "file contains the libraries that were",
    "start": "441710",
    "end": "443599"
  },
  {
    "text": "packaged into the layer as expected",
    "start": "443599",
    "end": "448699"
  },
  {
    "text": "there are two nougat packages in this",
    "start": "448699",
    "end": "450979"
  },
  {
    "text": "lambda layer now that our layer is",
    "start": "450979",
    "end": "457009"
  },
  {
    "text": "published let's go ahead and publish the",
    "start": "457009",
    "end": "458779"
  },
  {
    "text": "lambda function notice the function",
    "start": "458779",
    "end": "461539"
  },
  {
    "text": "layers parameter where I am supplying",
    "start": "461539",
    "end": "463460"
  },
  {
    "text": "the air and of the newly created lambda",
    "start": "463460",
    "end": "465499"
  },
  {
    "text": "layer the lambda function has been",
    "start": "465499",
    "end": "468020"
  },
  {
    "text": "published successfully let's go to the",
    "start": "468020",
    "end": "470149"
  },
  {
    "text": "lambda console to see the details now we",
    "start": "470149",
    "end": "473629"
  },
  {
    "text": "are on the lambda console and let's",
    "start": "473629",
    "end": "475430"
  },
  {
    "text": "click on the lambda function we just",
    "start": "475430",
    "end": "476689"
  },
  {
    "text": "created as you can see there is a layer",
    "start": "476689",
    "end": "480800"
  },
  {
    "text": "associated with it you click on the",
    "start": "480800",
    "end": "482839"
  },
  {
    "text": "layers can see that the layer that we",
    "start": "482839",
    "end": "485419"
  },
  {
    "text": "created called demo layer is associated",
    "start": "485419",
    "end": "487789"
  },
  {
    "text": "with this lambda function",
    "start": "487789",
    "end": "490809"
  },
  {
    "text": "let's check the s3 bucket that contains",
    "start": "490899",
    "end": "493729"
  },
  {
    "text": "a lambda function code as you can see",
    "start": "493729",
    "end": "495860"
  },
  {
    "text": "the zip file size is really small and we",
    "start": "495860",
    "end": "499520"
  },
  {
    "text": "are going to download this file and see",
    "start": "499520",
    "end": "500899"
  },
  {
    "text": "what files are inside",
    "start": "500899",
    "end": "504219"
  },
  {
    "text": "as expected the only TRL that is present",
    "start": "504490",
    "end": "508880"
  },
  {
    "text": "is de Mol a dll and the only other one",
    "start": "508880",
    "end": "511370"
  },
  {
    "text": "is Newton sup adjacent our DLL which we",
    "start": "511370",
    "end": "514130"
  },
  {
    "text": "did not package into a lambda later",
    "start": "514130",
    "end": "515870"
  },
  {
    "text": "so the overall packet size is really",
    "start": "515870",
    "end": "517760"
  },
  {
    "text": "small let's go ahead and test the",
    "start": "517760",
    "end": "521000"
  },
  {
    "text": "function using the darknet lambda CLI",
    "start": "521000",
    "end": "523039"
  },
  {
    "text": "invoke function command I got the",
    "start": "523039",
    "end": "529010"
  },
  {
    "text": "uppercase converted input string as",
    "start": "529010",
    "end": "530960"
  },
  {
    "text": "response this means the function is",
    "start": "530960",
    "end": "533030"
  },
  {
    "text": "working successfully thanks for watching",
    "start": "533030",
    "end": "536360"
  },
  {
    "text": "this video",
    "start": "536360",
    "end": "536930"
  },
  {
    "text": "happy coding",
    "start": "536930",
    "end": "538000"
  },
  {
    "text": "[Music]",
    "start": "538000",
    "end": "542600"
  }
]