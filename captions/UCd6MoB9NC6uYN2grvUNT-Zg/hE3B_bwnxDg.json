[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "everybody my name is Toby canal I'm a",
    "start": "199",
    "end": "3230"
  },
  {
    "text": "co-founder and CTO of mesosphere and I'd",
    "start": "3230",
    "end": "6870"
  },
  {
    "text": "like to talk about one of our customer",
    "start": "6870",
    "end": "8849"
  },
  {
    "text": "use cases you know this customer a Royal",
    "start": "8849",
    "end": "11820"
  },
  {
    "text": "Caribbean",
    "start": "11820",
    "end": "12330"
  },
  {
    "text": "they're running our product DC us both",
    "start": "12330",
    "end": "15120"
  },
  {
    "text": "on AWS and on their cruise ships out on",
    "start": "15120",
    "end": "18119"
  },
  {
    "text": "the ocean so this is me kind of an old",
    "start": "18119",
    "end": "21660"
  },
  {
    "text": "photo this is what I look like right now",
    "start": "21660",
    "end": "25189"
  },
  {
    "start": "25000",
    "end": "101000"
  },
  {
    "text": "I want to talk about brief history of",
    "start": "25400",
    "end": "29310"
  },
  {
    "text": "our company and our technology so Mesa",
    "start": "29310",
    "end": "31650"
  },
  {
    "text": "sphere what we do our product is called",
    "start": "31650",
    "end": "35579"
  },
  {
    "text": "a DCOs",
    "start": "35579",
    "end": "36480"
  },
  {
    "text": "it's actually based on an open-source",
    "start": "36480",
    "end": "38820"
  },
  {
    "text": "technology called Apache mesas Apache",
    "start": "38820",
    "end": "42210"
  },
  {
    "text": "missiles was created by my co-founder",
    "start": "42210",
    "end": "43800"
  },
  {
    "text": "Ben Heineman at UC Berkeley in 2009 and",
    "start": "43800",
    "end": "47129"
  },
  {
    "text": "it was really the first open-source",
    "start": "47129",
    "end": "49500"
  },
  {
    "text": "production grade container management",
    "start": "49500",
    "end": "51750"
  },
  {
    "text": "system so container management and",
    "start": "51750",
    "end": "55379"
  },
  {
    "text": "cluster management originally started at",
    "start": "55379",
    "end": "58170"
  },
  {
    "text": "Google and Facebook they were the first",
    "start": "58170",
    "end": "59760"
  },
  {
    "text": "companies to run the infrastructure that",
    "start": "59760",
    "end": "61800"
  },
  {
    "text": "way they built internal systems",
    "start": "61800",
    "end": "63960"
  },
  {
    "text": "proprietary systems to do that and Mesa",
    "start": "63960",
    "end": "66360"
  },
  {
    "text": "sauce really was based around the same",
    "start": "66360",
    "end": "68549"
  },
  {
    "text": "ideas but it was the first open source",
    "start": "68549",
    "end": "70799"
  },
  {
    "text": "system that was freely available the",
    "start": "70799",
    "end": "74100"
  },
  {
    "text": "first the companies that adopted Apache",
    "start": "74100",
    "end": "75960"
  },
  {
    "text": "mesas were Twitter and Airbnb I worked",
    "start": "75960",
    "end": "78390"
  },
  {
    "text": "at Airbnb my two co-founders worked at",
    "start": "78390",
    "end": "80280"
  },
  {
    "text": "Twitter we set up the infrastructure",
    "start": "80280",
    "end": "81780"
  },
  {
    "text": "there which is based on on Apache mesas",
    "start": "81780",
    "end": "85280"
  },
  {
    "text": "we then started Mesa sphere in 2013 to",
    "start": "85280",
    "end": "88380"
  },
  {
    "text": "take this open-source technology create",
    "start": "88380",
    "end": "90869"
  },
  {
    "text": "a product around it that product is",
    "start": "90869",
    "end": "92369"
  },
  {
    "text": "called DCOs",
    "start": "92369",
    "end": "93180"
  },
  {
    "text": "and today we have over 125 customers",
    "start": "93180",
    "end": "96299"
  },
  {
    "text": "worldwide that are using the software",
    "start": "96299",
    "end": "101210"
  },
  {
    "start": "101000",
    "end": "176000"
  },
  {
    "text": "so what Mesa sphere dcs really enables",
    "start": "101450",
    "end": "105990"
  },
  {
    "text": "is modern data-driven applications so",
    "start": "105990",
    "end": "110780"
  },
  {
    "text": "data-driven applications meaning you",
    "start": "110780",
    "end": "114360"
  },
  {
    "text": "know customers are collecting data in",
    "start": "114360",
    "end": "116100"
  },
  {
    "text": "real time from their users on a website",
    "start": "116100",
    "end": "119280"
  },
  {
    "text": "from IOT devices from cars or from",
    "start": "119280",
    "end": "124860"
  },
  {
    "text": "cruise ship customers that are wearing",
    "start": "124860",
    "end": "127290"
  },
  {
    "text": "wristbands as they're moving around the",
    "start": "127290",
    "end": "129090"
  },
  {
    "text": "ship so modern data-driven applications",
    "start": "129090",
    "end": "132430"
  },
  {
    "text": "and semana data-driven applications",
    "start": "132430",
    "end": "134799"
  },
  {
    "text": "require a lot of infrastructure you need",
    "start": "134799",
    "end": "137049"
  },
  {
    "text": "to ingest data in real time you need to",
    "start": "137049",
    "end": "139390"
  },
  {
    "text": "process and analyze it in real time you",
    "start": "139390",
    "end": "141459"
  },
  {
    "text": "need to store it in a time series",
    "start": "141459",
    "end": "142780"
  },
  {
    "text": "database and then you need to build",
    "start": "142780",
    "end": "144670"
  },
  {
    "text": "applications that are reading that data",
    "start": "144670",
    "end": "146950"
  },
  {
    "text": "and are reacting to it as it changes and",
    "start": "146950",
    "end": "149530"
  },
  {
    "text": "serving it back to the user so dcs is a",
    "start": "149530",
    "end": "152349"
  },
  {
    "text": "platform that allows you to run all of",
    "start": "152349",
    "end": "153879"
  },
  {
    "text": "the infrastructure components that you",
    "start": "153879",
    "end": "155590"
  },
  {
    "text": "need to build a modern to enterprise",
    "start": "155590",
    "end": "158409"
  },
  {
    "text": "data driven application on a single",
    "start": "158409",
    "end": "160510"
  },
  {
    "text": "platform",
    "start": "160510",
    "end": "161579"
  },
  {
    "text": "Decius runs on any type of",
    "start": "161579",
    "end": "163720"
  },
  {
    "text": "infrastructure so you can run it on AWS",
    "start": "163720",
    "end": "166389"
  },
  {
    "text": "you can run it on any other public cloud",
    "start": "166389",
    "end": "168639"
  },
  {
    "text": "provider you can also run it on physical",
    "start": "168639",
    "end": "171370"
  },
  {
    "text": "machines or on a private cloud and now",
    "start": "171370",
    "end": "174159"
  },
  {
    "text": "even on cruise ships at a high level the",
    "start": "174159",
    "end": "178599"
  },
  {
    "start": "176000",
    "end": "274000"
  },
  {
    "text": "components in dcs is you know apache",
    "start": "178599",
    "end": "181540"
  },
  {
    "text": "missiles that's the core of it that's",
    "start": "181540",
    "end": "183700"
  },
  {
    "text": "the resource manager it's what enables",
    "start": "183700",
    "end": "186310"
  },
  {
    "text": "all of these different types of",
    "start": "186310",
    "end": "187389"
  },
  {
    "text": "applications to run on top what Maslin",
    "start": "187389",
    "end": "189970"
  },
  {
    "text": "provides is it takes all the machines",
    "start": "189970",
    "end": "192639"
  },
  {
    "text": "that you have deployed in your AWS",
    "start": "192639",
    "end": "194829"
  },
  {
    "text": "account or in your private cloud or a",
    "start": "194829",
    "end": "197709"
  },
  {
    "text": "data center puts them together into what",
    "start": "197709",
    "end": "200139"
  },
  {
    "text": "we call a resource pool so they get",
    "start": "200139",
    "end": "203319"
  },
  {
    "text": "thrown in together into a pool and then",
    "start": "203319",
    "end": "205359"
  },
  {
    "text": "that pool is exposed to the different",
    "start": "205359",
    "end": "207040"
  },
  {
    "text": "types of applications so any workload",
    "start": "207040",
    "end": "209290"
  },
  {
    "text": "you run on TCS runs on the same pool of",
    "start": "209290",
    "end": "212260"
  },
  {
    "text": "machines that allows us to drive up your",
    "start": "212260",
    "end": "215019"
  },
  {
    "text": "utilization dramatically and also",
    "start": "215019",
    "end": "217389"
  },
  {
    "text": "reschedule applications easily on to",
    "start": "217389",
    "end": "219370"
  },
  {
    "text": "other machines you know should you have",
    "start": "219370",
    "end": "221169"
  },
  {
    "text": "a hardware failure or should the",
    "start": "221169",
    "end": "222669"
  },
  {
    "text": "application crash so other pieces that",
    "start": "222669",
    "end": "226090"
  },
  {
    "text": "are built into dcs application-aware",
    "start": "226090",
    "end": "228220"
  },
  {
    "text": "scheduling so you know there's container",
    "start": "228220",
    "end": "231609"
  },
  {
    "text": "orchestration with tools like kubernetes",
    "start": "231609",
    "end": "234489"
  },
  {
    "text": "and docker swarm and marathon which is a",
    "start": "234489",
    "end": "236590"
  },
  {
    "text": "container scheduler that we built but if",
    "start": "236590",
    "end": "239290"
  },
  {
    "text": "you're running stateful applications",
    "start": "239290",
    "end": "240819"
  },
  {
    "text": "which you need for modern data-driven",
    "start": "240819",
    "end": "242109"
  },
  {
    "text": "applications",
    "start": "242109",
    "end": "242859"
  },
  {
    "text": "you know databases like Cassandra",
    "start": "242859",
    "end": "244720"
  },
  {
    "text": "message queues like Kafka they need a",
    "start": "244720",
    "end": "247389"
  },
  {
    "text": "different kind of orchestration they're",
    "start": "247389",
    "end": "249129"
  },
  {
    "text": "stateful so you need to really take care",
    "start": "249129",
    "end": "250840"
  },
  {
    "text": "of your words the data how do you manage",
    "start": "250840",
    "end": "252699"
  },
  {
    "text": "that",
    "start": "252699",
    "end": "253180"
  },
  {
    "text": "so Decius provides application we're",
    "start": "253180",
    "end": "255250"
  },
  {
    "text": "scheduling provides security and",
    "start": "255250",
    "end": "258190"
  },
  {
    "text": "compliance really important for",
    "start": "258190",
    "end": "259389"
  },
  {
    "text": "enterprise environments multi-tenancy so",
    "start": "259389",
    "end": "261969"
  },
  {
    "text": "you can actually run multiple workloads",
    "start": "261969",
    "end": "263560"
  },
  {
    "text": "multiple business",
    "start": "263560",
    "end": "264950"
  },
  {
    "text": "it's on the same platform and in all the",
    "start": "264950",
    "end": "268400"
  },
  {
    "text": "management and operations tools that you",
    "start": "268400",
    "end": "270050"
  },
  {
    "text": "need to run a production grade platform",
    "start": "270050",
    "end": "274060"
  },
  {
    "start": "274000",
    "end": "334000"
  },
  {
    "text": "on top of these yes you can run a range",
    "start": "274060",
    "end": "278240"
  },
  {
    "text": "of workloads so I mentioned container",
    "start": "278240",
    "end": "281360"
  },
  {
    "text": "orchestration that's a critical workload",
    "start": "281360",
    "end": "283400"
  },
  {
    "text": "for us micro-service container",
    "start": "283400",
    "end": "285110"
  },
  {
    "text": "orchestration marathon was the first",
    "start": "285110",
    "end": "287860"
  },
  {
    "text": "production grade container Orchestrator",
    "start": "287860",
    "end": "290120"
  },
  {
    "text": "that was out there it's a product",
    "start": "290120",
    "end": "291670"
  },
  {
    "text": "open-source project built by Mesa sphere",
    "start": "291670",
    "end": "293840"
  },
  {
    "text": "we also support kubernetes on top of DVR",
    "start": "293840",
    "end": "296600"
  },
  {
    "text": "so you can choose which Orchestrator you",
    "start": "296600",
    "end": "298400"
  },
  {
    "text": "would like and then there's a whole",
    "start": "298400",
    "end": "300350"
  },
  {
    "text": "range of other workloads dev tools CI CD",
    "start": "300350",
    "end": "304520"
  },
  {
    "text": "Jenkins and get lab and others are",
    "start": "304520",
    "end": "306770"
  },
  {
    "text": "supported and then there's over a",
    "start": "306770",
    "end": "308930"
  },
  {
    "text": "hundred data services so databases",
    "start": "308930",
    "end": "311660"
  },
  {
    "text": "message queues big data tools machine",
    "start": "311660",
    "end": "314840"
  },
  {
    "text": "learning tools the leading open source",
    "start": "314840",
    "end": "316970"
  },
  {
    "text": "and commercial products so open source",
    "start": "316970",
    "end": "319280"
  },
  {
    "text": "databases like Cassandra there",
    "start": "319280",
    "end": "321260"
  },
  {
    "text": "commercial",
    "start": "321260",
    "end": "322150"
  },
  {
    "text": "variants like data stacks enterprise or",
    "start": "322150",
    "end": "324910"
  },
  {
    "text": "open source Kafka and then confluent",
    "start": "324910",
    "end": "327650"
  },
  {
    "text": "Kafka the enterprise version of that so",
    "start": "327650",
    "end": "330170"
  },
  {
    "text": "over a hundred of these services that",
    "start": "330170",
    "end": "331910"
  },
  {
    "text": "you can run on DC us",
    "start": "331910",
    "end": "334870"
  },
  {
    "start": "334000",
    "end": "394000"
  },
  {
    "text": "so I mentioned DCs takes all the",
    "start": "335350",
    "end": "337850"
  },
  {
    "text": "machines and puts them together into a",
    "start": "337850",
    "end": "339350"
  },
  {
    "text": "pool and really what you get is your",
    "start": "339350",
    "end": "343130"
  },
  {
    "text": "cloud deployment or your your data",
    "start": "343130",
    "end": "345050"
  },
  {
    "text": "center now starts to look like a giant",
    "start": "345050",
    "end": "347390"
  },
  {
    "text": "computer and if you go to the dashboard",
    "start": "347390",
    "end": "350240"
  },
  {
    "text": "of DCs this is what it looks like it",
    "start": "350240",
    "end": "352640"
  },
  {
    "text": "literally shows you one big pool it",
    "start": "352640",
    "end": "354920"
  },
  {
    "text": "doesn't show you individual machines and",
    "start": "354920",
    "end": "356420"
  },
  {
    "text": "so that gives us a lot of flexibility",
    "start": "356420",
    "end": "358670"
  },
  {
    "text": "and you know I always like to compare it",
    "start": "358670",
    "end": "361040"
  },
  {
    "text": "to you know if you if you were to run",
    "start": "361040",
    "end": "363110"
  },
  {
    "text": "applications on your laptop the same way",
    "start": "363110",
    "end": "365270"
  },
  {
    "text": "that we run them in the data center or",
    "start": "365270",
    "end": "366950"
  },
  {
    "text": "cloud sometimes you know you would start",
    "start": "366950",
    "end": "369080"
  },
  {
    "text": "your browser and then a window what pop",
    "start": "369080",
    "end": "370580"
  },
  {
    "text": "up and ask you on which CPU you want to",
    "start": "370580",
    "end": "372380"
  },
  {
    "text": "run it right that's obviously not how it",
    "start": "372380",
    "end": "374270"
  },
  {
    "text": "works there's an operating system on a",
    "start": "374270",
    "end": "376130"
  },
  {
    "text": "laptop that decides which CPU core to",
    "start": "376130",
    "end": "378170"
  },
  {
    "text": "run it on and so DCOs provides the",
    "start": "378170",
    "end": "380930"
  },
  {
    "text": "equivalent of that at the cloud level or",
    "start": "380930",
    "end": "383390"
  },
  {
    "text": "datacenter level so it schedules",
    "start": "383390",
    "end": "385340"
  },
  {
    "text": "whatever workloads you have onto the",
    "start": "385340",
    "end": "387230"
  },
  {
    "text": "machines that have the right resources",
    "start": "387230",
    "end": "388820"
  },
  {
    "text": "the right hardware available for those",
    "start": "388820",
    "end": "391220"
  },
  {
    "text": "for those workloads",
    "start": "391220",
    "end": "394240"
  },
  {
    "start": "394000",
    "end": "435000"
  },
  {
    "text": "the way you install these these platform",
    "start": "394700",
    "end": "397590"
  },
  {
    "text": "services these workloads so databases",
    "start": "397590",
    "end": "400230"
  },
  {
    "text": "machine learning tools even kubernetes",
    "start": "400230",
    "end": "402350"
  },
  {
    "text": "is from the deseos catalog so it's very",
    "start": "402350",
    "end": "405900"
  },
  {
    "text": "similar to you know how you run AWS",
    "start": "405900",
    "end": "409590"
  },
  {
    "text": "services from the AWS console you have a",
    "start": "409590",
    "end": "412470"
  },
  {
    "text": "catalog of all these workloads if you",
    "start": "412470",
    "end": "414810"
  },
  {
    "text": "accept the defaults default",
    "start": "414810",
    "end": "416610"
  },
  {
    "text": "configuration you can literally start",
    "start": "416610",
    "end": "417750"
  },
  {
    "text": "them with a single click of a button but",
    "start": "417750",
    "end": "420270"
  },
  {
    "text": "a lot of parameters are also tunable so",
    "start": "420270",
    "end": "422010"
  },
  {
    "text": "you can decide what size cluster of you",
    "start": "422010",
    "end": "424680"
  },
  {
    "text": "know any of those workloads you want how",
    "start": "424680",
    "end": "427260"
  },
  {
    "text": "much CPU memory and disk to allocate to",
    "start": "427260",
    "end": "429630"
  },
  {
    "text": "them so it's a real really easy",
    "start": "429630",
    "end": "432570"
  },
  {
    "text": "experience to get any of these data",
    "start": "432570",
    "end": "434610"
  },
  {
    "text": "services running so benefits what are",
    "start": "434610",
    "end": "439830"
  },
  {
    "start": "435000",
    "end": "521000"
  },
  {
    "text": "the outcomes of using GCS what are our",
    "start": "439830",
    "end": "441900"
  },
  {
    "text": "customers seeing and really it's all",
    "start": "441900",
    "end": "444480"
  },
  {
    "text": "about agility for a number of different",
    "start": "444480",
    "end": "448140"
  },
  {
    "text": "personas so for operators by pooling",
    "start": "448140",
    "end": "451500"
  },
  {
    "text": "these workloads together you drive up",
    "start": "451500",
    "end": "453270"
  },
  {
    "text": "your utilization right you no longer",
    "start": "453270",
    "end": "454710"
  },
  {
    "text": "have all these VMs or physical machines",
    "start": "454710",
    "end": "457800"
  },
  {
    "text": "that you're not utilizing we actually",
    "start": "457800",
    "end": "461130"
  },
  {
    "text": "bin pack multiple workloads onto the",
    "start": "461130",
    "end": "462780"
  },
  {
    "text": "same physical or virtual machines to",
    "start": "462780",
    "end": "465030"
  },
  {
    "text": "drive up your utilization so you no",
    "start": "465030",
    "end": "466560"
  },
  {
    "text": "longer have to keep track of all the",
    "start": "466560",
    "end": "468720"
  },
  {
    "text": "different hardware configurations",
    "start": "468720",
    "end": "469980"
  },
  {
    "text": "whether those are virtual machines on a",
    "start": "469980",
    "end": "471990"
  },
  {
    "text": "cloud or physical machines in a data",
    "start": "471990",
    "end": "474330"
  },
  {
    "text": "center data center automation so these",
    "start": "474330",
    "end": "478320"
  },
  {
    "text": "workloads are actually automated to a",
    "start": "478320",
    "end": "479970"
  },
  {
    "text": "very high degree they install with a",
    "start": "479970",
    "end": "482010"
  },
  {
    "text": "single click of a button you can upgrade",
    "start": "482010",
    "end": "484050"
  },
  {
    "text": "them with a click of a button or an API",
    "start": "484050",
    "end": "485760"
  },
  {
    "text": "call scale them up scale them down and",
    "start": "485760",
    "end": "489150"
  },
  {
    "text": "it enables hybrid cloud so which is what",
    "start": "489150",
    "end": "491940"
  },
  {
    "text": "I'm going to talk about for this",
    "start": "491940",
    "end": "494310"
  },
  {
    "text": "ship-to-shore use case for developers",
    "start": "494310",
    "end": "496860"
  },
  {
    "text": "container orchestration I already talked",
    "start": "496860",
    "end": "498570"
  },
  {
    "text": "about continuous integration continuous",
    "start": "498570",
    "end": "500040"
  },
  {
    "text": "deployment you can run Jenkins gitlab",
    "start": "500040",
    "end": "502140"
  },
  {
    "text": "many other tools like that and data",
    "start": "502140",
    "end": "505530"
  },
  {
    "text": "services you know this whole range of",
    "start": "505530",
    "end": "507210"
  },
  {
    "text": "databases that developers can use for",
    "start": "507210",
    "end": "509880"
  },
  {
    "text": "data scientists you can run a lot of big",
    "start": "509880",
    "end": "511980"
  },
  {
    "text": "data tools on top of DCs SPARC flink",
    "start": "511980",
    "end": "514940"
  },
  {
    "text": "tensorflow of many others so machine",
    "start": "514940",
    "end": "518610"
  },
  {
    "text": "learning and then fast data workloads as",
    "start": "518610",
    "end": "520320"
  },
  {
    "text": "well",
    "start": "520320",
    "end": "522470"
  },
  {
    "start": "521000",
    "end": "844000"
  },
  {
    "text": "all right so let's talk about this use",
    "start": "522720",
    "end": "524520"
  },
  {
    "text": "case at Royal Caribbean it's really",
    "start": "524520",
    "end": "526460"
  },
  {
    "text": "interesting so rocky ribbon has a fleet",
    "start": "526460",
    "end": "529920"
  },
  {
    "text": "of over 20 cruise ships and their use",
    "start": "529920",
    "end": "532920"
  },
  {
    "text": "gives us they want to collect data as",
    "start": "532920",
    "end": "534900"
  },
  {
    "text": "customers move around the ship and go on",
    "start": "534900",
    "end": "536730"
  },
  {
    "text": "excursions they want to collect that",
    "start": "536730",
    "end": "538860"
  },
  {
    "text": "data to provide a more personalized",
    "start": "538860",
    "end": "540810"
  },
  {
    "text": "experience for their customers so",
    "start": "540810",
    "end": "543890"
  },
  {
    "text": "customers are wearing wristbands they're",
    "start": "543890",
    "end": "546000"
  },
  {
    "text": "doing purchases on the ship they're",
    "start": "546000",
    "end": "547590"
  },
  {
    "text": "collecting all that data then they run",
    "start": "547590",
    "end": "549990"
  },
  {
    "text": "marketing campaigns and things like that",
    "start": "549990",
    "end": "551430"
  },
  {
    "text": "based on that data now a cruise ship is",
    "start": "551430",
    "end": "554730"
  },
  {
    "text": "out on the ocean right the way a cruise",
    "start": "554730",
    "end": "557010"
  },
  {
    "text": "ship connects city to the Internet is",
    "start": "557010",
    "end": "559380"
  },
  {
    "text": "via a satellite link that satellite link",
    "start": "559380",
    "end": "562110"
  },
  {
    "text": "has fairly low bandwidth actually most",
    "start": "562110",
    "end": "563910"
  },
  {
    "text": "of the bandwidth of that link is you",
    "start": "563910",
    "end": "565890"
  },
  {
    "text": "know used by the customers checking",
    "start": "565890",
    "end": "568080"
  },
  {
    "text": "snapchat and so on so it's a low",
    "start": "568080",
    "end": "570630"
  },
  {
    "text": "bandwidth link it's a high latency link",
    "start": "570630",
    "end": "572400"
  },
  {
    "text": "so for building a real-time application",
    "start": "572400",
    "end": "575130"
  },
  {
    "text": "on the ship it's not feasible to always",
    "start": "575130",
    "end": "578160"
  },
  {
    "text": "send every request back to shore to a",
    "start": "578160",
    "end": "580530"
  },
  {
    "text": "data center or a cloud so they had to",
    "start": "580530",
    "end": "583230"
  },
  {
    "text": "run part of their applications on every",
    "start": "583230",
    "end": "586020"
  },
  {
    "text": "ship so there's you know a mini data",
    "start": "586020",
    "end": "588360"
  },
  {
    "text": "center on each ship that's running Kafka",
    "start": "588360",
    "end": "591600"
  },
  {
    "text": "as a message queue and a number of micro",
    "start": "591600",
    "end": "593670"
  },
  {
    "text": "services that are you know providing",
    "start": "593670",
    "end": "595500"
  },
  {
    "text": "these personalized experiences on the",
    "start": "595500",
    "end": "598080"
  },
  {
    "text": "ship now Royal Caribbean is also an AWS",
    "start": "598080",
    "end": "602970"
  },
  {
    "text": "customer so they love AWS they love the",
    "start": "602970",
    "end": "605610"
  },
  {
    "text": "automation that the cloud provides and",
    "start": "605610",
    "end": "608460"
  },
  {
    "text": "they wanted that same experience on",
    "start": "608460",
    "end": "609930"
  },
  {
    "text": "their ships right ships are out in the",
    "start": "609930",
    "end": "612330"
  },
  {
    "text": "ocean you can't have a you know full",
    "start": "612330",
    "end": "614340"
  },
  {
    "text": "operations team on every one of the 20",
    "start": "614340",
    "end": "616080"
  },
  {
    "text": "ships that's not feasible so they wanted",
    "start": "616080",
    "end": "618060"
  },
  {
    "text": "a cloud-like experience on every ship",
    "start": "618060",
    "end": "619950"
  },
  {
    "text": "the same level of automation the same",
    "start": "619950",
    "end": "622200"
  },
  {
    "text": "level of you know fault tolerance and",
    "start": "622200",
    "end": "623790"
  },
  {
    "text": "self-healing capabilities so that's why",
    "start": "623790",
    "end": "626070"
  },
  {
    "text": "they picked DCOs it's one big reason the",
    "start": "626070",
    "end": "628470"
  },
  {
    "text": "other reason they picked these us is",
    "start": "628470",
    "end": "630300"
  },
  {
    "text": "they wanted the same stack running on",
    "start": "630300",
    "end": "633510"
  },
  {
    "text": "AWS and on the ships the same way to",
    "start": "633510",
    "end": "636570"
  },
  {
    "text": "deploy applications to upgrade them",
    "start": "636570",
    "end": "638630"
  },
  {
    "text": "because some of the components are",
    "start": "638630",
    "end": "640589"
  },
  {
    "text": "actually the same so you can see kafka",
    "start": "640589",
    "end": "642210"
  },
  {
    "text": "running both on the ship and on shore",
    "start": "642210",
    "end": "644370"
  },
  {
    "text": "they're also running Cassandra it's",
    "start": "644370",
    "end": "647190"
  },
  {
    "text": "actually data stacks Enterprise that",
    "start": "647190",
    "end": "649260"
  },
  {
    "text": "they're running as they're distributed",
    "start": "649260",
    "end": "650850"
  },
  {
    "text": "database in a number of micro services",
    "start": "650850",
    "end": "652860"
  },
  {
    "text": "and spark for for doing analytics so",
    "start": "652860",
    "end": "656100"
  },
  {
    "text": "same",
    "start": "656100",
    "end": "656850"
  },
  {
    "text": "deployments tak same way to architect",
    "start": "656850",
    "end": "658740"
  },
  {
    "text": "the applications they don't have to",
    "start": "658740",
    "end": "660269"
  },
  {
    "text": "build two different silos of tools for",
    "start": "660269",
    "end": "662250"
  },
  {
    "text": "the ships and for for AWS dcs gives them",
    "start": "662250",
    "end": "666120"
  },
  {
    "text": "that abstraction on top of whatever the",
    "start": "666120",
    "end": "668910"
  },
  {
    "text": "underlying infrastructure is whether",
    "start": "668910",
    "end": "670259"
  },
  {
    "text": "it's AWS or physical machines on the",
    "start": "670259",
    "end": "672690"
  },
  {
    "text": "ship so they can deploy applications the",
    "start": "672690",
    "end": "676079"
  },
  {
    "text": "same way this is a really good example",
    "start": "676079",
    "end": "679980"
  },
  {
    "text": "of what I mentioned initially a modern",
    "start": "679980",
    "end": "683339"
  },
  {
    "text": "data-driven application right so if you",
    "start": "683339",
    "end": "687120"
  },
  {
    "text": "look at the top of the slide here that",
    "start": "687120",
    "end": "688889"
  },
  {
    "text": "the journey actually starts when the",
    "start": "688889",
    "end": "690540"
  },
  {
    "text": "customer is still at home and you know",
    "start": "690540",
    "end": "692940"
  },
  {
    "text": "booking the next cruise researching the",
    "start": "692940",
    "end": "695160"
  },
  {
    "text": "packages researching what the options",
    "start": "695160",
    "end": "697050"
  },
  {
    "text": "are you know which excursions they can",
    "start": "697050",
    "end": "699380"
  },
  {
    "text": "go on so they start collecting data even",
    "start": "699380",
    "end": "702810"
  },
  {
    "text": "there and this goes obviously to the to",
    "start": "702810",
    "end": "704819"
  },
  {
    "text": "the unprimed atuh center sorry the cloud",
    "start": "704819",
    "end": "707519"
  },
  {
    "text": "data center onshore did data center so",
    "start": "707519",
    "end": "710310"
  },
  {
    "text": "they're collecting some of the data",
    "start": "710310",
    "end": "711389"
  },
  {
    "text": "there and then as the customer gets",
    "start": "711389",
    "end": "713430"
  },
  {
    "text": "ready to go on the cruise some of that",
    "start": "713430",
    "end": "715709"
  },
  {
    "text": "data actually needs to get synced to the",
    "start": "715709",
    "end": "717899"
  },
  {
    "text": "ship right which trips that this",
    "start": "717899",
    "end": "719970"
  },
  {
    "text": "customer booked and so on",
    "start": "719970",
    "end": "721860"
  },
  {
    "text": "so they're using Kafka for that as a way",
    "start": "721860",
    "end": "725370"
  },
  {
    "text": "to exchange data back and forth so both",
    "start": "725370",
    "end": "727800"
  },
  {
    "text": "the data that the customer generated",
    "start": "727800",
    "end": "729329"
  },
  {
    "text": "onshore goes to the ship and then while",
    "start": "729329",
    "end": "732750"
  },
  {
    "text": "they're on the cruise you know the",
    "start": "732750",
    "end": "734970"
  },
  {
    "text": "location data where the customer is",
    "start": "734970",
    "end": "736350"
  },
  {
    "text": "moving which trips they're going on gets",
    "start": "736350",
    "end": "738240"
  },
  {
    "text": "then sync back to the AWS deployment",
    "start": "738240",
    "end": "741750"
  },
  {
    "text": "again via Kafka so they can also run",
    "start": "741750",
    "end": "744300"
  },
  {
    "text": "analytics across multiple cruises across",
    "start": "744300",
    "end": "747180"
  },
  {
    "text": "multiple ships and then use that to do",
    "start": "747180",
    "end": "750300"
  },
  {
    "text": "to create compelling offers for their",
    "start": "750300",
    "end": "752130"
  },
  {
    "text": "customers right to run campaigns to",
    "start": "752130",
    "end": "755670"
  },
  {
    "text": "create a customer 360 profile over",
    "start": "755670",
    "end": "758130"
  },
  {
    "text": "multiple journeys that this customer",
    "start": "758130",
    "end": "760680"
  },
  {
    "text": "went on so talked about modern data",
    "start": "760680",
    "end": "765630"
  },
  {
    "text": "driven applications they require a lot",
    "start": "765630",
    "end": "768750"
  },
  {
    "text": "of infrastructure a message queue like",
    "start": "768750",
    "end": "770670"
  },
  {
    "text": "Kafka analytics engine like spark a",
    "start": "770670",
    "end": "773009"
  },
  {
    "text": "distributed database like Cassandra lots",
    "start": "773009",
    "end": "776130"
  },
  {
    "text": "and lots of micro services dcs is really",
    "start": "776130",
    "end": "780000"
  },
  {
    "text": "a great platform for running all of",
    "start": "780000",
    "end": "781620"
  },
  {
    "text": "these components together on the same",
    "start": "781620",
    "end": "783779"
  },
  {
    "text": "platform and you know we talk a lot",
    "start": "783779",
    "end": "787019"
  },
  {
    "text": "about micro service container",
    "start": "787019",
    "end": "788490"
  },
  {
    "text": "orchestration",
    "start": "788490",
    "end": "790860"
  },
  {
    "text": "that's an important workload for us what",
    "start": "790860",
    "end": "793860"
  },
  {
    "text": "these years does is it also has data",
    "start": "793860",
    "end": "796940"
  },
  {
    "text": "service orchestration built-in so",
    "start": "796940",
    "end": "799020"
  },
  {
    "text": "there's actually what we call an",
    "start": "799020",
    "end": "800880"
  },
  {
    "text": "application aware scheduler it's a piece",
    "start": "800880",
    "end": "802710"
  },
  {
    "text": "of software that we create for each one",
    "start": "802710",
    "end": "805950"
  },
  {
    "text": "of those workloads for Kafka Cassander",
    "start": "805950",
    "end": "807720"
  },
  {
    "text": "and so on that has all the operational",
    "start": "807720",
    "end": "810300"
  },
  {
    "text": "logic of the service built-in so you no",
    "start": "810300",
    "end": "814260"
  },
  {
    "text": "longer have to be an expert in each one",
    "start": "814260",
    "end": "816150"
  },
  {
    "text": "of these technologies in order to deploy",
    "start": "816150",
    "end": "818100"
  },
  {
    "text": "them think about it as a human operator",
    "start": "818100",
    "end": "820470"
  },
  {
    "text": "and a runbook that's basically stored as",
    "start": "820470",
    "end": "824010"
  },
  {
    "text": "code that comes part of the package as",
    "start": "824010",
    "end": "827040"
  },
  {
    "text": "you install it on DCOs and so this level",
    "start": "827040",
    "end": "831360"
  },
  {
    "text": "of automation piece you know Software",
    "start": "831360",
    "end": "833610"
  },
  {
    "text": "Defined run books and operators that's",
    "start": "833610",
    "end": "836430"
  },
  {
    "text": "what enables Royal Caribbean to have a",
    "start": "836430",
    "end": "839220"
  },
  {
    "text": "cloud-like experience even out on the",
    "start": "839220",
    "end": "842280"
  },
  {
    "text": "ocean on their cruise ships so this is",
    "start": "842280",
    "end": "846060"
  },
  {
    "start": "844000",
    "end": "871000"
  },
  {
    "text": "just one of the use cases that dcs",
    "start": "846060",
    "end": "849240"
  },
  {
    "text": "supports I think it's a really fun one",
    "start": "849240",
    "end": "851160"
  },
  {
    "text": "it's you know a form of edge computing",
    "start": "851160",
    "end": "853980"
  },
  {
    "text": "that you kind of don't expect when you",
    "start": "853980",
    "end": "855720"
  },
  {
    "text": "hear it first there's many other use",
    "start": "855720",
    "end": "857640"
  },
  {
    "text": "cases across literally every industry",
    "start": "857640",
    "end": "860040"
  },
  {
    "text": "vertical a lot of IOT use cases for DCs",
    "start": "860040",
    "end": "863160"
  },
  {
    "text": "connected car financial industry so to",
    "start": "863160",
    "end": "866910"
  },
  {
    "text": "learn more stop by our booth lots of",
    "start": "866910",
    "end": "869400"
  },
  {
    "text": "folks there and thank you for listening",
    "start": "869400",
    "end": "873200"
  }
]