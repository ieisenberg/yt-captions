[
  {
    "start": "0",
    "end": "150000"
  },
  {
    "text": "okay welcome everybody uh thanks so much for coming to this session so just a few logistics uh",
    "start": "2879",
    "end": "8480"
  },
  {
    "text": "before we get started um so you want to have a q a session right in the end after the talk",
    "start": "8480",
    "end": "14080"
  },
  {
    "text": "so you know please deserve any questions for the end um if you like something applause also you know and keep it to",
    "start": "14080",
    "end": "20160"
  },
  {
    "text": "the end um and uh the mic is going to be on the",
    "start": "20160",
    "end": "26080"
  },
  {
    "text": "side of the room so please you know make your way there",
    "start": "26080",
    "end": "31840"
  },
  {
    "text": "okay great uh so day two of the conference thanks so much all for coming um so quick uh thought exercise uh you",
    "start": "35040",
    "end": "42640"
  },
  {
    "text": "know before we begin um and what's the most frustrating experience you've had when you visit a",
    "start": "42640",
    "end": "48640"
  },
  {
    "text": "you know website or uh you know use an app or you know any other sort of",
    "start": "48640",
    "end": "54160"
  },
  {
    "text": "application and most likely many of you are going to say that you know it's slow it's being unresponsive yeah",
    "start": "54160",
    "end": "62000"
  },
  {
    "text": "um also i'm going to state the bleedingly obvious here you know these days with so many",
    "start": "62000",
    "end": "68799"
  },
  {
    "text": "different types of platforms mobile devices you know web applications",
    "start": "68799",
    "end": "74960"
  },
  {
    "text": "mobile apps smart tvs etc the end users are being",
    "start": "74960",
    "end": "80000"
  },
  {
    "text": "inundated with in a lot of sources of information and as a result they have very little time so when they",
    "start": "80000",
    "end": "87759"
  },
  {
    "text": "grace your app or you know your application with their time you want to really serve them well you",
    "start": "87759",
    "end": "94720"
  },
  {
    "text": "want to do it as fast as possible so this session is not going to be about",
    "start": "94720",
    "end": "100400"
  },
  {
    "text": "you know building responsive apps but we'll talk about one tool that you can use in order to",
    "start": "100400",
    "end": "106000"
  },
  {
    "text": "build highly responsive apps and that tool is server side caching",
    "start": "106000",
    "end": "111200"
  },
  {
    "text": "so the lineup for today um so my name is umar zaki i'm a product",
    "start": "111200",
    "end": "117200"
  },
  {
    "text": "manager of amazon elasticash so i'm going to get started i'll talk about you know what caching is",
    "start": "117200",
    "end": "124799"
  },
  {
    "text": "you know what are the different types of caches you know what is amazon elastic cache that's the web service that does caching",
    "start": "124799",
    "end": "131599"
  },
  {
    "text": "and what are some of the use cases design patterns and then after that i'll hand it over to",
    "start": "131599",
    "end": "138080"
  },
  {
    "text": "nick and nick is from gree and he'll talk about what amazing things they have done with elastic cache",
    "start": "138080",
    "end": "143520"
  },
  {
    "text": "and finally we'll have james who will also talk about how they have very responsive apps with elastic so",
    "start": "143520",
    "end": "150640"
  },
  {
    "start": "150000",
    "end": "247000"
  },
  {
    "text": "you know what is a cache so it's cache is nothing but a specialized data store that keeps frequently you know accessed",
    "start": "150640",
    "end": "157040"
  },
  {
    "text": "items in memory and i mentioned you know caches can help to build highly",
    "start": "157040",
    "end": "162160"
  },
  {
    "text": "responsive web apps so pretty much because the information is in memory it is very fast to access",
    "start": "162160",
    "end": "169120"
  },
  {
    "text": "so any data store that allows you to do so is a cache so why use a cache so i saw this um in a",
    "start": "169120",
    "end": "176480"
  },
  {
    "text": "court on a blog post you know latency is the mother of all interactivity that's true as the latency profile of an",
    "start": "176480",
    "end": "183599"
  },
  {
    "text": "app or an application goes up users are likely going to move away from the app so that's a bad thing similarly",
    "start": "183599",
    "end": "192080"
  },
  {
    "text": "you know as your you know let's say your website gets very popular you start getting lots of users or if a",
    "start": "192080",
    "end": "198720"
  },
  {
    "text": "small part of a app is really hot some page is really hot",
    "start": "198720",
    "end": "204080"
  },
  {
    "text": "it's likely to increase the latency for all the other users so that's also a bad thing and what happens is that",
    "start": "204080",
    "end": "210159"
  },
  {
    "text": "a lot of those requests go and hit the database tier and depending upon how you've architected your entire stack",
    "start": "210159",
    "end": "217920"
  },
  {
    "text": "that database may just you know tilt and just fall over so that's again a really bad situation",
    "start": "217920",
    "end": "223680"
  },
  {
    "text": "which will result in horrible end user experience so with that situation as well",
    "start": "223680",
    "end": "229840"
  },
  {
    "text": "a cache can actually help a lot and the good thing is why does the cache work primarily because",
    "start": "229840",
    "end": "236319"
  },
  {
    "text": "most of the data that you're accessing is you know primarily reads rights are",
    "start": "236319",
    "end": "241920"
  },
  {
    "text": "really a small fraction of it so if you can read it you better cache it",
    "start": "241920",
    "end": "247200"
  },
  {
    "start": "247000",
    "end": "355000"
  },
  {
    "text": "so you know let's say you decide okay you know i need to now you know put a cache on my application stack you're going to likely",
    "start": "247920",
    "end": "254400"
  },
  {
    "text": "encounter a lot of choices so a tech stack obviously is fairly",
    "start": "254400",
    "end": "260160"
  },
  {
    "text": "complex so let's say you know you walk through the sort of request coming from say a mobile",
    "start": "260160",
    "end": "266479"
  },
  {
    "text": "phone it's going to go all the way you know into the cloud and let's say you know from then it's going to go hit many servers so there are several",
    "start": "266479",
    "end": "273680"
  },
  {
    "text": "sources of latencies that are going to you know come all along the way similarly depending upon how the app is architected",
    "start": "273680",
    "end": "279360"
  },
  {
    "text": "there could be various aggregation layers that will consolidate requests coming from you know millions of devices",
    "start": "279360",
    "end": "284960"
  },
  {
    "text": "and let's say you know one of those layers is you know getting a lot of requests again",
    "start": "284960",
    "end": "290560"
  },
  {
    "text": "that layer could become slow so there are caches that are that are there for each of these different tiers",
    "start": "290560",
    "end": "297199"
  },
  {
    "text": "now we're not going to go into all of it instead we're just going to focus on the server side caching that's inside",
    "start": "297199",
    "end": "302400"
  },
  {
    "text": "the aws cloud and which is networked attached then there are many other",
    "start": "302400",
    "end": "307600"
  },
  {
    "text": "characteristics of caches as well so for instance uh you know some caches their persistence",
    "start": "307600",
    "end": "313039"
  },
  {
    "text": "they have different scale scalability characteristics some caches are able to warm themselves etc so i'm just mentioning them just to",
    "start": "313039",
    "end": "320160"
  },
  {
    "text": "give you a sense for the gamut of choices that you're likely going to encounter and the considerations you",
    "start": "320160",
    "end": "326080"
  },
  {
    "text": "have to take into account um and then even from the architecture standpoint you could have a site cache",
    "start": "326080",
    "end": "331280"
  },
  {
    "text": "read through right back etc i want to focus on two common caching engines that are",
    "start": "331280",
    "end": "338160"
  },
  {
    "text": "there one is memcached and redis and both of these are open source and",
    "start": "338160",
    "end": "343199"
  },
  {
    "text": "they're both a key value network network attached they're very popular in web",
    "start": "343199",
    "end": "348400"
  },
  {
    "text": "architectures and these are the two that and that's the reason we have them in our managed service so let's talk about",
    "start": "348400",
    "end": "355440"
  },
  {
    "start": "355000",
    "end": "524000"
  },
  {
    "text": "memcached first so this is a fairly simple key value store in memory key value",
    "start": "355440",
    "end": "360479"
  },
  {
    "text": "store it's been around for well over a decade now and many of the top you know sites and",
    "start": "360479",
    "end": "366240"
  },
  {
    "text": "applications apps they all use them the uh let's just look at the architecture of",
    "start": "366240",
    "end": "372800"
  },
  {
    "text": "this so what you have over here uh is the cache on the right hand side and then you have the application on the",
    "start": "372800",
    "end": "380240"
  },
  {
    "text": "left so the application talks to the cache server using a application client and this",
    "start": "380240",
    "end": "387360"
  },
  {
    "text": "again goes over tcp and i mentioned to you that this is also",
    "start": "387360",
    "end": "392479"
  },
  {
    "text": "a clustered cache so the way clustering is achieved for memcache is",
    "start": "392479",
    "end": "397600"
  },
  {
    "text": "by the client so client uses a consistent hashing algorithm and using that algorithm you actually",
    "start": "397600",
    "end": "403440"
  },
  {
    "text": "spread the load across all the different cache servers also this i mentioned this is a site",
    "start": "403440",
    "end": "410080"
  },
  {
    "text": "cache so what that means is what your application does is that it is it will first",
    "start": "410080",
    "end": "415120"
  },
  {
    "text": "look at the cache for information if the information is there it's going to return it to the",
    "start": "415120",
    "end": "420160"
  },
  {
    "text": "end user if the information is not there and that's a cache miss you want to go to the database or you",
    "start": "420160",
    "end": "425599"
  },
  {
    "text": "know the backend layer uh you'll get that information out put it in the cache return it back to the application",
    "start": "425599",
    "end": "432160"
  },
  {
    "text": "to the end user sorry and it's called a site cache because you have to add one more sort of data",
    "start": "432160",
    "end": "438400"
  },
  {
    "text": "path in order to go to the cache talk about redis again this is also key",
    "start": "438400",
    "end": "444400"
  },
  {
    "text": "value store network attached cache again it is in memory",
    "start": "444400",
    "end": "449759"
  },
  {
    "text": "it's different from memcached in the sense that it it has support for data structure that makes it really",
    "start": "449759",
    "end": "455759"
  },
  {
    "text": "versatile you've got strings lists sets sorted sets it supports",
    "start": "455759",
    "end": "461039"
  },
  {
    "text": "asynchronous replication out of the box so you are able to create a read replica both for aha as",
    "start": "461039",
    "end": "468000"
  },
  {
    "text": "well as for you know read scaling it supports soft persistence and i say it's soft because",
    "start": "468000",
    "end": "473680"
  },
  {
    "text": "you know there are some limitations so if you're going to rely on redis let's say as your primary data store you better be done",
    "start": "473680",
    "end": "479440"
  },
  {
    "text": "sure about what are the characteristics you know of how the persistence actually",
    "start": "479440",
    "end": "484879"
  },
  {
    "text": "works and and lastly um i should mention that also has pub sub capability so if you",
    "start": "484879",
    "end": "490479"
  },
  {
    "text": "want to communicate between different you know processes or applications you can use",
    "start": "490479",
    "end": "495520"
  },
  {
    "text": "the publisher subscriber feature of redis in order to do so",
    "start": "495520",
    "end": "501120"
  },
  {
    "text": "in terms of architecture fairly similar to that of memcached again network attached cache",
    "start": "501680",
    "end": "507520"
  },
  {
    "text": "the one thing i want to point out over here is on the right hand side you can see that i have added a node for the read replica",
    "start": "507520",
    "end": "514080"
  },
  {
    "text": "so you send a request or write request to the master asynchronously will be sent off to the",
    "start": "514080",
    "end": "520000"
  },
  {
    "text": "read replica and that way both of them are in sync",
    "start": "520000",
    "end": "525120"
  },
  {
    "start": "524000",
    "end": "626000"
  },
  {
    "text": "so that brings me to elastic cache so we talked about some popular caching engines now let's talk about the managed service that we have at amazon",
    "start": "525519",
    "end": "532399"
  },
  {
    "text": "so it's elastic cache it's like other managed services it is scalable and secure but more",
    "start": "532399",
    "end": "538560"
  },
  {
    "text": "importantly it allows you to provision your cache nodes it allows you to monitor them and you know take any repair action that",
    "start": "538560",
    "end": "545360"
  },
  {
    "text": "you have to do if a node were to fail it has its pay as you go and let's",
    "start": "545360",
    "end": "553040"
  },
  {
    "text": "let's look at sort of you know how you will structure your application here right on top you have your end users",
    "start": "553040",
    "end": "559040"
  },
  {
    "text": "they're interacting with your web application that's right below which is part of our ec2 security group",
    "start": "559040",
    "end": "564880"
  },
  {
    "text": "and there you have your application stack which consists of the client library so you use the client",
    "start": "564880",
    "end": "570720"
  },
  {
    "text": "library to talk to the cache and the cache is going to be remote so",
    "start": "570720",
    "end": "575839"
  },
  {
    "text": "you'll go over to tcp half to actually get to the cache and the caches are in a cache security",
    "start": "575839",
    "end": "581279"
  },
  {
    "text": "group the reason we do that is to make sure that your caches are secure so you're able to control",
    "start": "581279",
    "end": "587839"
  },
  {
    "text": "explicit access and actually indicate which ec2 machines are able to access your cache memcached by default",
    "start": "587839",
    "end": "595839"
  },
  {
    "text": "runs wide open so we don't like that and that's the reason we added these sort of containers around both your ec2",
    "start": "595839",
    "end": "602399"
  },
  {
    "text": "machines as well as your cache you also have cloudwatch metrics",
    "start": "602399",
    "end": "608160"
  },
  {
    "text": "similar to other managed services which allow you to keep tabs on how your cache is doing what the eviction rate is",
    "start": "608160",
    "end": "613440"
  },
  {
    "text": "etc here i show the memcached protocol that the client is talking that is from",
    "start": "613440",
    "end": "619200"
  },
  {
    "text": "the application to the cache but the structure is very similar to uh",
    "start": "619200",
    "end": "624240"
  },
  {
    "text": "for redis as well so where all is amazon elastic cache use so we have customers",
    "start": "624240",
    "end": "631680"
  },
  {
    "start": "626000",
    "end": "706000"
  },
  {
    "text": "you know using it in all different use cases i'm just going to speak to a couple so on the gaming side elastic cache is",
    "start": "631680",
    "end": "637760"
  },
  {
    "text": "heavily used to keep track of you know what all is going on in a game so you have the transient data for the",
    "start": "637760",
    "end": "643360"
  },
  {
    "text": "game that is stored in elastic what the gamers are doing you know what their scores are",
    "start": "643360",
    "end": "649279"
  },
  {
    "text": "you know what is their uh behavior etcetera and then you may also you know conduct some statistics uh",
    "start": "649279",
    "end": "655040"
  },
  {
    "text": "on the user base all that is also stored uh in elastic cache on the mobile side",
    "start": "655040",
    "end": "661839"
  },
  {
    "text": "you need to be able to handle large number of uh you know end users a lot of those requests are coming into",
    "start": "661839",
    "end": "667279"
  },
  {
    "text": "a centralized infrastructure in the cloud and again you don't want all of that to be hitting your database",
    "start": "667279",
    "end": "673360"
  },
  {
    "text": "or your backend storage layer and there again you know elastic cache is very helpful last thing i want to point out is ad",
    "start": "673360",
    "end": "680160"
  },
  {
    "text": "tech here what you have generally is large number of requests coming into a very small amount of",
    "start": "680160",
    "end": "685680"
  },
  {
    "text": "data a lot of that information is uh keeping track of transactions at pretty fine grained level",
    "start": "685680",
    "end": "691920"
  },
  {
    "text": "as you know uh real-time bidding uh has uh i mean does very very fine grain access",
    "start": "691920",
    "end": "696959"
  },
  {
    "text": "per impression so all that information can be kept in a do you have the counters all that is kept in in in a",
    "start": "696959",
    "end": "703040"
  },
  {
    "text": "cache like elasticash so simple gaming deployment here just to",
    "start": "703040",
    "end": "708959"
  },
  {
    "start": "706000",
    "end": "760000"
  },
  {
    "text": "give you a sense for how elastic cache interacts with other",
    "start": "708959",
    "end": "714079"
  },
  {
    "text": "aws services so what you have are the user requests coming in from the left typically it hits uh elastic load",
    "start": "714079",
    "end": "721519"
  },
  {
    "text": "balancer goes into your front-end application servers that are in a auto-scaling group so depending",
    "start": "721519",
    "end": "727360"
  },
  {
    "text": "upon the load they sort of you know grow or shrink and then you have the in-memory layer which is",
    "start": "727360",
    "end": "732480"
  },
  {
    "text": "typically elastic cache in which you are keeping track of as i mentioned uh things like uh you know scores things",
    "start": "732480",
    "end": "739040"
  },
  {
    "text": "like what the users are doing so common design pattern here is like a leader board and then that information",
    "start": "739040",
    "end": "744320"
  },
  {
    "text": "is persisted in a back end a relational database such as mysql",
    "start": "744320",
    "end": "749920"
  },
  {
    "text": "and then you have cloud front for you know the more heavy images and things like that what are the",
    "start": "749920",
    "end": "755600"
  },
  {
    "text": "multimedia types of videos etc so in terms of design",
    "start": "755600",
    "end": "761839"
  },
  {
    "start": "760000",
    "end": "856000"
  },
  {
    "text": "patterns again lots of them we're going to touch upon a few the most common one is database offloading so that's something i've been",
    "start": "761839",
    "end": "767760"
  },
  {
    "text": "sort of talking about with a cache a centralized cache like either memcached or redis you have it",
    "start": "767760",
    "end": "774000"
  },
  {
    "text": "you have the ability to grow the uh centralized cache layer depending upon your need let's say that you're",
    "start": "774000",
    "end": "779600"
  },
  {
    "text": "you want to expect a large amount of uh traffic because you let's say you launched you know your your app or you have",
    "start": "779600",
    "end": "786240"
  },
  {
    "text": "launched some major new feature so then you can provision a much larger layer and a lot of information there is going to be",
    "start": "786240",
    "end": "792079"
  },
  {
    "text": "read-only so all that can hit in your cache and does not kind of flow all the way down to your",
    "start": "792079",
    "end": "797600"
  },
  {
    "text": "database so that's really the most common use of a cache a session management comes in become",
    "start": "797600",
    "end": "803120"
  },
  {
    "text": "often we talked about in terms of gaming uh anytime you're keeping track of you know what your users are doing",
    "start": "803120",
    "end": "809600"
  },
  {
    "text": "as part of that interaction with your app or application that's a session it happens in gaming it",
    "start": "809600",
    "end": "815360"
  },
  {
    "text": "happens in e-commerce you have the shopping cart so again a cache is used quite heavily over there",
    "start": "815360",
    "end": "821199"
  },
  {
    "text": "lastly you have the in-memory sort of storage for time-consuming tasks so let's say you had a bunch of emr jobs",
    "start": "821199",
    "end": "827760"
  },
  {
    "text": "you had to run to get some really extract some you know information from your jio data and you don't want to be doing",
    "start": "827760",
    "end": "834720"
  },
  {
    "text": "this stuff on the fly every time so you do it sort of once and then you you know keep the information",
    "start": "834720",
    "end": "840480"
  },
  {
    "text": "in the cache and then depending upon when your users need them you can serve them there are a few more i'm going to omit",
    "start": "840480",
    "end": "846639"
  },
  {
    "text": "those we have a another session on caching tomorrow or deep dive it's at 11 30 tomorrow i believe that",
    "start": "846639",
    "end": "853440"
  },
  {
    "text": "307 and we'll go into each of those so that brings me to the end of my part",
    "start": "853440",
    "end": "860000"
  },
  {
    "start": "856000",
    "end": "967000"
  },
  {
    "text": "and now i'm going to introduce nick who's going to tell us about what exciting things they are doing agree",
    "start": "860000",
    "end": "866720"
  },
  {
    "text": "thanks thanks everyone so my name is nick i",
    "start": "868839",
    "end": "874000"
  },
  {
    "text": "work at gree um not many i don't know if you've heard of greed before",
    "start": "874000",
    "end": "880079"
  },
  {
    "text": "this is a little bit about our our history our degree was founded in japan in 2004 first as a social network",
    "start": "880079",
    "end": "887680"
  },
  {
    "text": "and then the company quickly pivoted when mobile really started to become big in japan quickly pivoted to mobile games",
    "start": "887680",
    "end": "896639"
  },
  {
    "text": "in 2011 gree decided to expand and established offices in the",
    "start": "896639",
    "end": "903040"
  },
  {
    "text": "u.s we have our offices in san francisco and at the time we were using",
    "start": "903040",
    "end": "908399"
  },
  {
    "text": "kind of the traditional physical data center model we had to plan ahead for a procurement",
    "start": "908399",
    "end": "914639"
  },
  {
    "text": "of systems configuration of those systems we had a lot of itil background",
    "start": "914639",
    "end": "921120"
  },
  {
    "text": "and we started to see the benefits of moving more towards a devops",
    "start": "921120",
    "end": "926160"
  },
  {
    "text": "environment in 2012 gree acquired a company called funzio and this is where aws came into the",
    "start": "926160",
    "end": "933199"
  },
  {
    "text": "picture and very excited about that acquisition and we were able to really",
    "start": "933199",
    "end": "938880"
  },
  {
    "text": "bring the provisioning times to a much you know much more quickly what you know we were",
    "start": "938880",
    "end": "944399"
  },
  {
    "text": "able to see today for some time we had both games",
    "start": "944399",
    "end": "949519"
  },
  {
    "text": "inside data centers and also within amazon we spent the last year really",
    "start": "949519",
    "end": "956240"
  },
  {
    "text": "consolidating everything within amazon in fact just last week we converted",
    "start": "956240",
    "end": "961440"
  },
  {
    "text": "another game out of our data center into amazon",
    "start": "961440",
    "end": "968399"
  },
  {
    "start": "967000",
    "end": "1065000"
  },
  {
    "text": "so what do we do we make games uh they're all mobile all free to play you may recognize some um all for ios",
    "start": "968399",
    "end": "976000"
  },
  {
    "text": "and android devices currently and we're also focusing uh on tablets as well",
    "start": "976000",
    "end": "982639"
  },
  {
    "text": "these are some of our game types we have about five there are four here but we have a",
    "start": "982639",
    "end": "989519"
  },
  {
    "text": "couple other game engines as well that kind of run the gamut from the different types of games that",
    "start": "989519",
    "end": "994800"
  },
  {
    "text": "that people like to play so our role playing games you know these are our oldest top grossing titles multi-million dollar",
    "start": "994800",
    "end": "1000959"
  },
  {
    "text": "franchises games like crime city modern war kingdom age",
    "start": "1000959",
    "end": "1006320"
  },
  {
    "text": "these games are consistently in the top charts in itunes and also in a",
    "start": "1006320",
    "end": "1013759"
  },
  {
    "text": "google google store we've also started developing games in some other",
    "start": "1013759",
    "end": "1019279"
  },
  {
    "text": "genres our our hardcore games are more for people that are that come from the hardcore pc gaming um",
    "start": "1019279",
    "end": "1025918"
  },
  {
    "text": "that like to have a much longer play session um more mechanics uh a lot more pvp",
    "start": "1025919",
    "end": "1032160"
  },
  {
    "text": "player versus player action we've also gotten into real-time",
    "start": "1032160",
    "end": "1037280"
  },
  {
    "text": "strategy so we just recently announced call to arms this is a kind of a fast action",
    "start": "1037280",
    "end": "1042400"
  },
  {
    "text": "you build a small town you send you create armies and units and you send them out and they go attack other",
    "start": "1042400",
    "end": "1047678"
  },
  {
    "text": "players and then we also have a very uh successful casino and casual games",
    "start": "1047679",
    "end": "1052960"
  },
  {
    "text": "franchise jackpot slots jackpot bingo here and then we have a variety of other",
    "start": "1052960",
    "end": "1059120"
  },
  {
    "text": "games as well some card battler games and so forth it's a little bit of a",
    "start": "1059120",
    "end": "1066799"
  },
  {
    "start": "1065000",
    "end": "1120000"
  },
  {
    "text": "scale of what we're managing today um we have quite a bit within amazon as you can see",
    "start": "1066799",
    "end": "1072480"
  },
  {
    "text": "here um a lot of the as owmer mentioned a lot of",
    "start": "1072480",
    "end": "1077520"
  },
  {
    "text": "what we do within amazon is in in memory caching so we have quite a large elastic",
    "start": "1077520",
    "end": "1083840"
  },
  {
    "text": "environment our databases as well a lot of the games have multiple shards",
    "start": "1083840",
    "end": "1090400"
  },
  {
    "text": "to handle all the different data sets and our application servers generate about a terabyte of data per",
    "start": "1090400",
    "end": "1097679"
  },
  {
    "text": "day and this is data that's not only data like game events and so forth but",
    "start": "1097679",
    "end": "1104400"
  },
  {
    "text": "also information about how the the health of the game is functioning",
    "start": "1104400",
    "end": "1109440"
  },
  {
    "text": "and so we use that data to then uh set our our checks our alerts and things like that and as i",
    "start": "1109440",
    "end": "1116400"
  },
  {
    "text": "mentioned earlier millions of monthly active users",
    "start": "1116400",
    "end": "1121200"
  },
  {
    "start": "1120000",
    "end": "1224000"
  },
  {
    "text": "so i want to kind of run through our typical game architecture this is our our oldest architecture where we really",
    "start": "1121520",
    "end": "1128400"
  },
  {
    "text": "make a heavy use of elastic caches our role-playing games architecture fairly standard if you've worked in a",
    "start": "1128400",
    "end": "1136080"
  },
  {
    "text": "kind of lamp stack environment application servers behind a elastic",
    "start": "1136080",
    "end": "1141200"
  },
  {
    "text": "load balancers here and again these these are php based app servers all those game events i",
    "start": "1141200",
    "end": "1148400"
  },
  {
    "text": "mentioned those app servers not only have the actual application itself but then they send analytics data to our",
    "start": "1148400",
    "end": "1154880"
  },
  {
    "text": "analytic subsystems below that we have our elastocache and this is where in our games",
    "start": "1154880",
    "end": "1162799"
  },
  {
    "text": "we make very very heavy use of elastic cache i'll talk more about that in a minute",
    "start": "1162799",
    "end": "1168000"
  },
  {
    "text": "and then we have our batch processing servers so these are is a tier that we had to insert between",
    "start": "1168000",
    "end": "1175039"
  },
  {
    "text": "our database and cache tier so that we could not overload our",
    "start": "1175039",
    "end": "1180559"
  },
  {
    "text": "databases and i'll talk a little bit about what what we're doing there then finally we use",
    "start": "1180559",
    "end": "1186240"
  },
  {
    "text": "rds heavy users of rds and we actually developed we were some of the",
    "start": "1186240",
    "end": "1192640"
  },
  {
    "text": "early users of rds so we kind of helped amazon with their feature set and also um we've developed our own way",
    "start": "1192640",
    "end": "1200880"
  },
  {
    "text": "to not have an rds failover event",
    "start": "1200880",
    "end": "1206320"
  },
  {
    "text": "be have an impact with game players so we've developed this little failover",
    "start": "1206320",
    "end": "1211360"
  },
  {
    "text": "database that when we have an rds failover uh rights will go to that failover database and when the",
    "start": "1211360",
    "end": "1217760"
  },
  {
    "text": "rds master comes back we'll dump all those rights back into the master",
    "start": "1217760",
    "end": "1223760"
  },
  {
    "start": "1224000",
    "end": "1301000"
  },
  {
    "text": "so a little bit about caching the rpg plus game architecture actually predates what",
    "start": "1225919",
    "end": "1232000"
  },
  {
    "text": "we considered no stable no sql but we wanted to have that that performance and",
    "start": "1232000",
    "end": "1238720"
  },
  {
    "text": "back then there wasn't too much available to us but we had memcache and we had databases so we",
    "start": "1238720",
    "end": "1245600"
  },
  {
    "text": "we actually work our we have our internal response time is actually a lot lower now",
    "start": "1245600",
    "end": "1250640"
  },
  {
    "text": "closer to 300. we picked a model where memcache is the authoritative source of data",
    "start": "1250640",
    "end": "1257840"
  },
  {
    "text": "we still of course have rds on the back end to ensure that we we minimize any",
    "start": "1257840",
    "end": "1263360"
  },
  {
    "text": "potential data loss since nodes do disappear and what it also allowed us to do is to",
    "start": "1263360",
    "end": "1268799"
  },
  {
    "text": "have a much simpler database layer since all the kind of heavy lifting the reading and writing is happening in",
    "start": "1268799",
    "end": "1274400"
  },
  {
    "text": "memcache we don't have to have big iron database servers below that",
    "start": "1274400",
    "end": "1279919"
  },
  {
    "text": "one of the key things that that we do there is we don't do any relative row replacements on the",
    "start": "1279919",
    "end": "1286159"
  },
  {
    "text": "databases so we're always you know things like current vote row value plus one we just",
    "start": "1286159",
    "end": "1291280"
  },
  {
    "text": "don't do because we actually use the elastic cache combined with rds to kind of",
    "start": "1291280",
    "end": "1296720"
  },
  {
    "text": "sort of do a nosql type setup where we're storing",
    "start": "1296720",
    "end": "1302000"
  },
  {
    "start": "1301000",
    "end": "1395000"
  },
  {
    "text": "various very uh um simple data sets within our within rds",
    "start": "1302960",
    "end": "1309679"
  },
  {
    "text": "so here's uh the data flow um we all the reads just hit um they go app",
    "start": "1309679",
    "end": "1316240"
  },
  {
    "text": "server to cache we have our two types of rights our synchronous versus asynchronous rights",
    "start": "1316240",
    "end": "1323360"
  },
  {
    "text": "so for synchronous rights these are things like when someone's going through requests",
    "start": "1323360",
    "end": "1330159"
  },
  {
    "text": "and they're doing through going through each step at the final step we want to award them an item we'll want to record",
    "start": "1330159",
    "end": "1337600"
  },
  {
    "text": "that final step directly to the database and then read that back and say yep you get an item so those are",
    "start": "1337600",
    "end": "1344320"
  },
  {
    "text": "kind of the synchronous rights one thing we never do here is we never do it just a blind",
    "start": "1344320",
    "end": "1349840"
  },
  {
    "text": "write we never just say hey we're just going to write this value from the client directly to the database we always read that",
    "start": "1349840",
    "end": "1355760"
  },
  {
    "text": "whatever the value is in memcache first we see if that's if that makes sense and then if if it's",
    "start": "1355760",
    "end": "1362240"
  },
  {
    "text": "the latest value would then write that on our uh asynchronous rights this is where our",
    "start": "1362240",
    "end": "1368880"
  },
  {
    "text": "batch processor comes in and our batch processor we've written that in",
    "start": "1368880",
    "end": "1374720"
  },
  {
    "text": "in node.js and we're starting to move a lot of that over to go",
    "start": "1374720",
    "end": "1380880"
  },
  {
    "text": "and what that does is because 80 percent of our right traffic is asynchronous we can send a whole",
    "start": "1381360",
    "end": "1387360"
  },
  {
    "text": "bunch of stuff to this batch processor and say hey write this",
    "start": "1387360",
    "end": "1392480"
  },
  {
    "text": "at the next 30 second flush and so these are the types of situations where",
    "start": "1392480",
    "end": "1398880"
  },
  {
    "start": "1395000",
    "end": "1438000"
  },
  {
    "text": "again you're doing these quests and you'll do several quests you'll get",
    "start": "1398880",
    "end": "1404559"
  },
  {
    "text": "10 items within that that time period so the app server will send all that stuff downstream",
    "start": "1404559",
    "end": "1411120"
  },
  {
    "text": "the cache server will again send that downstream to the database but we intercept that at",
    "start": "1411120",
    "end": "1416159"
  },
  {
    "text": "the batch processor and because we version every single",
    "start": "1416159",
    "end": "1423520"
  },
  {
    "text": "request the batch processor will then write just the final value to the database with the updated count",
    "start": "1424080",
    "end": "1430159"
  },
  {
    "text": "and so that really saves a lot of work from our databases that they don't get overloaded",
    "start": "1430159",
    "end": "1437360"
  },
  {
    "start": "1438000",
    "end": "1499000"
  },
  {
    "text": "so again as over mentioned the the hashing for memcache is done at the application",
    "start": "1440080",
    "end": "1445360"
  },
  {
    "text": "level and in our case we we really use",
    "start": "1445360",
    "end": "1451120"
  },
  {
    "text": "the database more like a key value store right we just have a key we have that version",
    "start": "1451120",
    "end": "1457039"
  },
  {
    "text": "string i was talking about we have the time stamp and then we have usually a json blob of some some some data set um",
    "start": "1457039",
    "end": "1465360"
  },
  {
    "text": "what happens you know occasionally we do get uh version collisions you have one app server sending something you have another",
    "start": "1465360",
    "end": "1470720"
  },
  {
    "text": "sending something with the same version string it's usually pretty rare in that case",
    "start": "1470720",
    "end": "1476559"
  },
  {
    "text": "our application will will uh will will fail for most",
    "start": "1476559",
    "end": "1481600"
  },
  {
    "text": "requests but it happens so quickly and for some very key requests we actually have",
    "start": "1481600",
    "end": "1486960"
  },
  {
    "text": "some some retries there um but again the the version collisions actually end up being",
    "start": "1486960",
    "end": "1492000"
  },
  {
    "text": "fairly rare even for some of the the more uh active games where we have you know hundreds of thousands of people playing",
    "start": "1492000",
    "end": "1498000"
  },
  {
    "text": "a day so then we get into high concurrency and",
    "start": "1498000",
    "end": "1503760"
  },
  {
    "start": "1499000",
    "end": "1585000"
  },
  {
    "text": "so these are things like matchmaking big battles between large groups of players",
    "start": "1503760",
    "end": "1510799"
  },
  {
    "text": "in this particular example this is our world domination events in in modern war and the you you create",
    "start": "1510799",
    "end": "1517679"
  },
  {
    "text": "armies so you can band together a bunch of other players and then these armies will will fight each other attack",
    "start": "1517679",
    "end": "1523520"
  },
  {
    "text": "each other so these this puts a lot of strain on the on the whole data layer itself and",
    "start": "1523520",
    "end": "1530080"
  },
  {
    "text": "there's quite a lot of concurrency happening there so here we",
    "start": "1530080",
    "end": "1535840"
  },
  {
    "text": "actually do contradict ourselves a little bit we do relatives update only at the memcache",
    "start": "1535840",
    "end": "1542080"
  },
  {
    "text": "layer and so sometimes we do get collisions there where we're trying to just update something very quickly",
    "start": "1542080",
    "end": "1549520"
  },
  {
    "text": "and in that case we have a retry cycle we have it it's up to five times um and",
    "start": "1549520",
    "end": "1557039"
  },
  {
    "text": "usually because we're using memcache it's all on memory it's very fast usually the second third try uh it's it",
    "start": "1557039",
    "end": "1563840"
  },
  {
    "text": "succeeds um and this actually i've talked to the engineer that's that wrote this and this",
    "start": "1563840",
    "end": "1570799"
  },
  {
    "text": "this happens so fast in in the code it's a block of code about this big",
    "start": "1570799",
    "end": "1576000"
  },
  {
    "text": "um and so that's uh we we usually don't get too many problems even in the high concurrency events by",
    "start": "1576000",
    "end": "1581279"
  },
  {
    "text": "uh by depending on memcache",
    "start": "1581279",
    "end": "1585840"
  },
  {
    "start": "1585000",
    "end": "1648000"
  },
  {
    "text": "so it's the cloud it's elastic things do fail",
    "start": "1586720",
    "end": "1591840"
  },
  {
    "text": "we do have memcache nodes that fail on occasion and so what happens here is because our",
    "start": "1591919",
    "end": "1598080"
  },
  {
    "text": "application is we we're sharding across many different memcache nodes",
    "start": "1598080",
    "end": "1604640"
  },
  {
    "text": "particular node fails we'll then send rights directly to the database so for",
    "start": "1604640",
    "end": "1609679"
  },
  {
    "text": "the time it takes for memcache to or elastic cache to spin a new node up",
    "start": "1609679",
    "end": "1614880"
  },
  {
    "text": "put it in play and get it so that our app servers can talk to it we'll have a little bit higher load on",
    "start": "1614880",
    "end": "1620159"
  },
  {
    "text": "our databases but because we're sharding the impact is only going to affect a",
    "start": "1620159",
    "end": "1626000"
  },
  {
    "text": "certain number of players that are on those on those database shards so we'll have a little bit of spike in performance",
    "start": "1626000",
    "end": "1632720"
  },
  {
    "text": "but usually the node comes back online fairly quickly at that point the application notices that the node's back online",
    "start": "1632720",
    "end": "1639039"
  },
  {
    "text": "start sending traffic to it the cache will refill organically and then we see a drop in database",
    "start": "1639039",
    "end": "1644559"
  },
  {
    "text": "database load",
    "start": "1644559",
    "end": "1647278"
  },
  {
    "start": "1648000",
    "end": "1776000"
  },
  {
    "text": "so why elastic cache for us so compared to ec2 it's actually pretty stable we don't have uh as many",
    "start": "1650159",
    "end": "1658080"
  },
  {
    "text": "uh uh instances of node failures then again we have a lot more ec2 nodes so the percentage-wise you",
    "start": "1658080",
    "end": "1664960"
  },
  {
    "text": "know we i elastic cache is a much more stable",
    "start": "1664960",
    "end": "1670080"
  },
  {
    "text": "platform um the automatic node replacement is great same node name same same dns we don't",
    "start": "1670080",
    "end": "1676240"
  },
  {
    "text": "have to change anything in the application when it comes back online our app sees it and we send traffic to it",
    "start": "1676240",
    "end": "1682399"
  },
  {
    "text": "if you're really needing to push very high performance into elastic cache the larger instances",
    "start": "1682399",
    "end": "1690559"
  },
  {
    "text": "do have much better network performance so really depends on your application if",
    "start": "1690559",
    "end": "1696080"
  },
  {
    "text": "that's something that that you need for an individual node and then recently i",
    "start": "1696080",
    "end": "1701120"
  },
  {
    "text": "believe it was this year amazon announced the configuration endpoint for elasticash",
    "start": "1701120",
    "end": "1707600"
  },
  {
    "text": "and so this is um a way for the application to dynamically query",
    "start": "1707600",
    "end": "1713440"
  },
  {
    "text": "or to query the elastic cache cluster to get information about how many nodes are available and what",
    "start": "1713440",
    "end": "1718960"
  },
  {
    "text": "this does is you can then have the application use that information",
    "start": "1718960",
    "end": "1724000"
  },
  {
    "text": "with your scaling scripts and so forth to then create new nodes to and automatically rebalance your hashes across",
    "start": "1724000",
    "end": "1730399"
  },
  {
    "text": "those nodes we used to have to do a lot of what we call our manual memcache migrations where",
    "start": "1730399",
    "end": "1735840"
  },
  {
    "text": "if we needed to rebalance a a node cluster we would actually spin up a whole new node with a the new number of a new",
    "start": "1735840",
    "end": "1743120"
  },
  {
    "text": "cluster with a new number of nodes and then kind of write to both for some time and then make",
    "start": "1743120",
    "end": "1748240"
  },
  {
    "text": "the switch over with this configuration endpoint we can just make the application do that uh on the",
    "start": "1748240",
    "end": "1754000"
  },
  {
    "text": "fly and it'll rebalance itself across new nodes that are added to the cluster we actually just got one of our games uh",
    "start": "1754000",
    "end": "1761279"
  },
  {
    "text": "to start using that a couple weeks ago so we're in the watching phase and running a whole bunch",
    "start": "1761279",
    "end": "1768159"
  },
  {
    "text": "of tests to see how that goes if everything goes well we'll probably be moving all of our games to",
    "start": "1768159",
    "end": "1774000"
  },
  {
    "text": "make use of the configuration endpoint so what been speaking about so far are",
    "start": "1774000",
    "end": "1781360"
  },
  {
    "start": "1776000",
    "end": "1911000"
  },
  {
    "text": "kind of our our older games and at the time it made sense um again",
    "start": "1781360",
    "end": "1787760"
  },
  {
    "text": "because of the the nature of nosql it made sense for doing things the way we've i've just",
    "start": "1787760",
    "end": "1794000"
  },
  {
    "text": "described um but it's kind of a it's an old way of doing it",
    "start": "1794000",
    "end": "1799760"
  },
  {
    "text": "and then our newer games games like war of nations uh cta call to arms they're much more",
    "start": "1799760",
    "end": "1806480"
  },
  {
    "text": "modern in terms of architecture those games are also focusing on providing a more real-time like",
    "start": "1806480",
    "end": "1812159"
  },
  {
    "text": "experience for players to be able to you know chat with someone in real time and then",
    "start": "1812159",
    "end": "1817520"
  },
  {
    "text": "coordinate how you're going to attack a particular base or something like that that's going to change our caching model",
    "start": "1817520",
    "end": "1824000"
  },
  {
    "text": "a little bit we'll we'll probably actually end up having less pools but",
    "start": "1824000",
    "end": "1829279"
  },
  {
    "text": "larger pools of cash and especially with the configuration endpoint we can grow and shrink those pools a lot",
    "start": "1829279",
    "end": "1835039"
  },
  {
    "text": "more dynamically i mentioned our batch processor servers that were built in",
    "start": "1835039",
    "end": "1841120"
  },
  {
    "text": "nosql we've actually moved a lot of that to to go go is the google a language developed by",
    "start": "1841120",
    "end": "1848159"
  },
  {
    "text": "google for really good at high concurrency types of applications so it was a",
    "start": "1848159",
    "end": "1853679"
  },
  {
    "text": "perfect kind of shoe-in for our batch servers and we have actually had some good",
    "start": "1853679",
    "end": "1859200"
  },
  {
    "text": "success moving a lot of our my sql batching over to go um we've been using",
    "start": "1859200",
    "end": "1865760"
  },
  {
    "text": "queuing systems for a while we've used rabbitmq zero and q uh lately we've been uh using uh nsq",
    "start": "1865760",
    "end": "1874000"
  },
  {
    "text": "as well so um the our call to arms games and use a lot more queuing for that",
    "start": "1874000",
    "end": "1881120"
  },
  {
    "text": "and for a long time we were using the the old memcache libraries",
    "start": "1881120",
    "end": "1886720"
  },
  {
    "text": "when we initially needed to develop this casualty the architecture for the games",
    "start": "1886720",
    "end": "1891840"
  },
  {
    "text": "we had some initial problems with memcached and so we we stuck with the memcache library so we're finally",
    "start": "1891840",
    "end": "1898159"
  },
  {
    "text": "now coming into the the future by using memcached libraries and that",
    "start": "1898159",
    "end": "1904480"
  },
  {
    "text": "will enable us to make use of the configuration endpoint that amazon provides with their classic hash",
    "start": "1904480",
    "end": "1911039"
  },
  {
    "start": "1911000",
    "end": "1979000"
  },
  {
    "text": "so what else uh we're really excited uh after the move to memcached we can actually make use of check and set",
    "start": "1912960",
    "end": "1919200"
  },
  {
    "text": "tokens these are within it's a standard memcached",
    "start": "1919200",
    "end": "1924720"
  },
  {
    "text": "option it's basically an internal versioning so we were",
    "start": "1924720",
    "end": "1930240"
  },
  {
    "text": "we'll probably be able to reduce the number of retries reduce the incidence of collisions by really",
    "start": "1930240",
    "end": "1936720"
  },
  {
    "text": "making use of the atomic nature of each of those those transactions",
    "start": "1936720",
    "end": "1942720"
  },
  {
    "text": "we will also looking at maybe doing a real no sql implementation right dynamodb has come",
    "start": "1942720",
    "end": "1949440"
  },
  {
    "text": "to maturity so we'll be looking at that and then redis as well we actually do",
    "start": "1949440",
    "end": "1955840"
  },
  {
    "text": "quite a bit of redis internally right now with some other shared subsystems that our games use",
    "start": "1955840",
    "end": "1962320"
  },
  {
    "text": "and with the release of the redis service from amazon we actually helped to",
    "start": "1962320",
    "end": "1968559"
  },
  {
    "text": "provide some beta feedback for that and we're starting to move some of the discrete redis boxes that we had in our",
    "start": "1968559",
    "end": "1973919"
  },
  {
    "text": "environment into the amazon redis service so we'll see how that goes",
    "start": "1973919",
    "end": "1979919"
  },
  {
    "text": "that's all i had today thanks and a lot of questions at the end",
    "start": "1981200",
    "end": "1991840"
  },
  {
    "text": "thanks nick uh so now we're going to hear from james who's the cto and co-founder of 2u",
    "start": "1994720",
    "end": "2005760"
  },
  {
    "text": "hi guys i'm james koenigsberg and i'm a part of the founding team and situated to you so",
    "start": "2005760",
    "end": "2013600"
  },
  {
    "text": "what is it that we do to you partners with top universities to create great online degrees and the reason",
    "start": "2013600",
    "end": "2021600"
  },
  {
    "text": "there's obviously a lot of disruption in our market but the reason we are different is because we provide real",
    "start": "2021600",
    "end": "2027279"
  },
  {
    "text": "degrees there's no e there's no i when when people graduate they read",
    "start": "2027279",
    "end": "2032960"
  },
  {
    "text": "list alphabetically of people on campus and online we probably realize classes so there's a",
    "start": "2032960",
    "end": "2039440"
  },
  {
    "text": "lot of synchronous learning you spend about 12 to 16 hours",
    "start": "2039440",
    "end": "2045039"
  },
  {
    "text": "a day i'm sorry a week in a live class face to face it's real faculty it's faculty from",
    "start": "2045039",
    "end": "2052960"
  },
  {
    "text": "great universities which i will mention in a minute and provide real outcomes which i will",
    "start": "2052960",
    "end": "2058800"
  },
  {
    "start": "2053000",
    "end": "2063000"
  },
  {
    "text": "bring up at the end and share some of the outcomes that we've been seeing lately",
    "start": "2058800",
    "end": "2064319"
  },
  {
    "start": "2063000",
    "end": "2180000"
  },
  {
    "text": "here's here's some of our partners we partner with as an example georgetown university",
    "start": "2064960",
    "end": "2070398"
  },
  {
    "text": "which is a 250 year old school brand that's older than coke they",
    "start": "2070399",
    "end": "2076158"
  },
  {
    "text": "trusted us to partner with them and sort of help to unleash them online",
    "start": "2076159",
    "end": "2081599"
  },
  {
    "text": "we have a master of information and data with uc berkeley and recently we we have a new venture an",
    "start": "2081599",
    "end": "2087599"
  },
  {
    "text": "undergraduate which is semester online where you can take a whole semester from a variety of",
    "start": "2087599",
    "end": "2093520"
  },
  {
    "text": "universities such as unc boston college or wake forest and we just actually added",
    "start": "2093520",
    "end": "2098880"
  },
  {
    "text": "university of melbourne and college of trinity from ireland so it's international as well",
    "start": "2098880",
    "end": "2105440"
  },
  {
    "text": "how do we do it we have a lot of amazing asynchronous content we we self-produce all of our content we",
    "start": "2105440",
    "end": "2112400"
  },
  {
    "text": "work with universities content strategists to make sure that the essence of how they teach is in our",
    "start": "2112400",
    "end": "2119119"
  },
  {
    "text": "online programs as well as i mentioned we have a lot of face-to-face learning where there is no",
    "start": "2119119",
    "end": "2125200"
  },
  {
    "text": "back row i have no clue what half of you are doing in this room you might be checking email and not listening to me but when",
    "start": "2125200",
    "end": "2131200"
  },
  {
    "text": "you like that very clearly face to face",
    "start": "2131200",
    "end": "2136319"
  },
  {
    "text": "we haven't developed virtual babies yet so if you as an example a nursing student trying to become a",
    "start": "2137440",
    "end": "2144320"
  },
  {
    "text": "midwife we will place you in a in a healthcare facility",
    "start": "2144320",
    "end": "2150240"
  },
  {
    "text": "in this case you see nurses going through our on campus intensive so they fly out to campus and they work with gus",
    "start": "2150240",
    "end": "2155760"
  },
  {
    "text": "gus is a georgetown university simulator that's why it does and it's a freaky doll that can breathe",
    "start": "2155760",
    "end": "2161200"
  },
  {
    "text": "and react to anesthesia and things of that nature last but not least",
    "start": "2161200",
    "end": "2166640"
  },
  {
    "text": "our learning management system what we call an online campus",
    "start": "2166640",
    "end": "2171760"
  },
  {
    "text": "which is the reason why i'm here i'm going to talk about memcache and caching in general as well",
    "start": "2171760",
    "end": "2177440"
  },
  {
    "text": "as our use of of the cloud the breadth of our technology is pretty wide because on",
    "start": "2177440",
    "end": "2184000"
  },
  {
    "text": "one side you have to work with university student information systems and then you have the online campus then",
    "start": "2184000",
    "end": "2191359"
  },
  {
    "text": "you have to play you you have to place students and technology is in the middle of it so the breadth of it is very widened and anything from content",
    "start": "2191359",
    "end": "2200000"
  },
  {
    "text": "management crm and we're completely cloud-based and i'm going to cover some of that history with you",
    "start": "2200000",
    "end": "2206079"
  },
  {
    "text": "let's start with two with our online campus the learning experience is not the pages",
    "start": "2206079",
    "end": "2212000"
  },
  {
    "text": "you read or the tests you take it's really all the collaborative and social events that happen that's if your",
    "start": "2212000",
    "end": "2218880"
  },
  {
    "text": "life is a slideshow those are the slides you remember it's the great conversations you had with other students or with other with",
    "start": "2218880",
    "end": "2225040"
  },
  {
    "text": "faculty members and that's why we build our online campus to be highly collaborative",
    "start": "2225040",
    "end": "2230960"
  },
  {
    "text": "and highly social and as you guys know that could be some spiky data and usage so let's get into",
    "start": "2230960",
    "end": "2239680"
  },
  {
    "start": "2238000",
    "end": "2280000"
  },
  {
    "text": "some of the details so uh that's one of my latest favorite quotes so i want to take",
    "start": "2239680",
    "end": "2245280"
  },
  {
    "text": "you through a quick history of our infrastructure and",
    "start": "2245280",
    "end": "2250720"
  },
  {
    "text": "share some of the numbers that we have in 2008 we started the company i was there",
    "start": "2250720",
    "end": "2256240"
  },
  {
    "text": "we had one server under my desk we had no engineers no developers it's pretty much just me in office",
    "start": "2256240",
    "end": "2264079"
  },
  {
    "text": "comes 2009 we have a few servers i hired my first engineer he's right there there you go um",
    "start": "2264160",
    "end": "2272800"
  },
  {
    "text": "but i had a brilliant idea to do a collocation in canada i thought it was cold and i'll save a",
    "start": "2272800",
    "end": "2279119"
  },
  {
    "text": "bunch of money on cooling that didn't work out that well that was actually the architecture in 2009",
    "start": "2279119",
    "end": "2285838"
  },
  {
    "start": "2280000",
    "end": "2312000"
  },
  {
    "text": "we didn't realize that not everyone we remember the fedex commercial with",
    "start": "2285920",
    "end": "2291680"
  },
  {
    "text": "the counter going up we started getting a lot of scale very quickly",
    "start": "2291680",
    "end": "2296880"
  },
  {
    "text": "realized that our we weren't going to stay up so we kept going down uh pretty much in a meeting we decided we",
    "start": "2296880",
    "end": "2305040"
  },
  {
    "text": "have aws is ready they have our ds we have we can build the resilient",
    "start": "2305040",
    "end": "2310800"
  },
  {
    "text": "architecture we want so we decided over a month of planning",
    "start": "2310800",
    "end": "2316480"
  },
  {
    "start": "2312000",
    "end": "2345000"
  },
  {
    "text": "to go and build our center so in 2008 2010",
    "start": "2316480",
    "end": "2321680"
  },
  {
    "text": "amazon is to the rescue they release rds elastic load",
    "start": "2321680",
    "end": "2329040"
  },
  {
    "text": "we implement memcache why because like i said as you guys we started",
    "start": "2329040",
    "end": "2334079"
  },
  {
    "text": "getting scale all those news feeds for collaborative learning all those social groups and",
    "start": "2334079",
    "end": "2340079"
  },
  {
    "text": "ability to surge came to a crawling stop so we introduced memcache first",
    "start": "2340079",
    "end": "2346480"
  },
  {
    "start": "2345000",
    "end": "2402000"
  },
  {
    "text": "in 2011 we're now up to 100 instances only two engineers still",
    "start": "2346480",
    "end": "2351839"
  },
  {
    "text": "we got some redundancy amazon s3 started using that as cs and i think it was in 2012 went out to",
    "start": "2353119",
    "end": "2360960"
  },
  {
    "text": "200 instances only one extra engineer after long planning we decided to try",
    "start": "2360960",
    "end": "2369280"
  },
  {
    "text": "elastic cache and i'm going to read you guys we're doing a statement this is actually chris collins he's my vice",
    "start": "2369280",
    "end": "2374320"
  },
  {
    "text": "president of software development he was the third engineer on that i'm currently doing a staging build",
    "start": "2374320",
    "end": "2380480"
  },
  {
    "text": "i had to wait for some database to restore so for the hell of it i decided to see if i could easily slip in elastic cache turns out it's",
    "start": "2380480",
    "end": "2387119"
  },
  {
    "text": "very easy i guess i shouldn't have expected because amazon states that it replicates memcache protocol exactly",
    "start": "2387119",
    "end": "2392400"
  },
  {
    "text": "but it's still nice when things just fall into place and i didn't this is not a fake email this was done",
    "start": "2392400",
    "end": "2398160"
  },
  {
    "text": "and you can see the data on the right so there you go so now we're in elastic",
    "start": "2398160",
    "end": "2404560"
  },
  {
    "start": "2402000",
    "end": "2462000"
  },
  {
    "text": "it works we just kind of works for us and all of our walls and all of our news",
    "start": "2404560",
    "end": "2411599"
  },
  {
    "text": "feeds and collaborative learning starts floating pretty easily small problem 2012",
    "start": "2411599",
    "end": "2417839"
  },
  {
    "text": "that's actually my front yard sandy comes over and i don't",
    "start": "2417839",
    "end": "2424960"
  },
  {
    "text": "i don't have a waterfront property that's actually um my artie my engineer tells me",
    "start": "2424960",
    "end": "2432079"
  },
  {
    "text": "that might be bad for us we should move from virginia to oregon we literally with probably four days of",
    "start": "2432079",
    "end": "2438160"
  },
  {
    "text": "planning 48 hours we move 200 instances over yeah about 200 instances over to oregon",
    "start": "2438160",
    "end": "2444800"
  },
  {
    "text": "overnight i can i can talk about that story because we were losing people people losing power we were like lose",
    "start": "2444800",
    "end": "2450800"
  },
  {
    "text": "engineers and we have a small team in ukraine that watches our servers at night so we assume they would be fine",
    "start": "2450800",
    "end": "2456800"
  },
  {
    "text": "and then they they lost their power as well and but we moved and we're now in oregon uh brings us to",
    "start": "2456800",
    "end": "2464640"
  },
  {
    "start": "2462000",
    "end": "2485000"
  },
  {
    "text": "today we have about 450 instances only for engineers which is kind of cool think about it my entire team and we",
    "start": "2464640",
    "end": "2470800"
  },
  {
    "text": "embrace devops uh culture and everything and that's our architecture as you can see",
    "start": "2470800",
    "end": "2476079"
  },
  {
    "text": "we pretty much use everything amazon produces we're we're huge fans um",
    "start": "2476079",
    "end": "2482400"
  },
  {
    "text": "we're using amazon redshift aws been great to us so if you think about amazon and aws are",
    "start": "2482400",
    "end": "2490160"
  },
  {
    "start": "2485000",
    "end": "2500000"
  },
  {
    "text": "committed to their customers our mission as to you we're committed to changing your life",
    "start": "2490160",
    "end": "2496640"
  },
  {
    "text": "and so just just to share some of the outcomes i promised to share in the beginning by having amazon web services and",
    "start": "2496640",
    "end": "2504240"
  },
  {
    "start": "2500000",
    "end": "2650000"
  },
  {
    "text": "elastic cache and such it helps us to not think about infrastructure it helps us to concentrate on what we do",
    "start": "2504240",
    "end": "2510400"
  },
  {
    "text": "well which is changing your lives through education so specifically our first client was our",
    "start": "2510400",
    "end": "2516240"
  },
  {
    "text": "first partner was university of southern california um research school of education they had",
    "start": "2516240",
    "end": "2521280"
  },
  {
    "text": "about 68 graduates a year and their mission statement was to",
    "start": "2521280",
    "end": "2526800"
  },
  {
    "text": "change the pace of urban education and with 68 people a year that's hard to do",
    "start": "2526800",
    "end": "2532800"
  },
  {
    "text": "we now have 1700 graduates which we're estimating this this is data from redshift uh it's",
    "start": "2533280",
    "end": "2540400"
  },
  {
    "text": "about 3.2 million lives are being impacted from k-12 you have a little over a thousand",
    "start": "2540400",
    "end": "2546160"
  },
  {
    "text": "students about to graduate the way we're thinking about 2019",
    "start": "2546160",
    "end": "2552400"
  },
  {
    "text": "will there'll be about 12 and a half million k-12 students that would be impacted by",
    "start": "2552400",
    "end": "2558720"
  },
  {
    "text": "massive arts and teaching as well here right and that's these are the sort of outcomes that",
    "start": "2558720",
    "end": "2564000"
  },
  {
    "text": "everyone strives for and because of aws commitment to us as a customer and taking our infrastructure out of the",
    "start": "2564000",
    "end": "2569520"
  },
  {
    "text": "way we're able to concentrate on that this actually um we're actually global but it didn't look as good so i just",
    "start": "2569520",
    "end": "2575760"
  },
  {
    "text": "used the usa map each one of those is actually clusters of student learning",
    "start": "2575760",
    "end": "2581280"
  },
  {
    "text": "as of like i think a week ago two weeks ago um and we have we have some awesome cases we have we have a guy on uh",
    "start": "2581280",
    "end": "2588240"
  },
  {
    "text": "on an oil rig 200 miles away from the close closest shore who was in",
    "start": "2588240",
    "end": "2594720"
  },
  {
    "text": "air force and was involved in delta ii mission mission to the moon and he's getting his",
    "start": "2594720",
    "end": "2600240"
  },
  {
    "text": "mba right we have people marines in afghanistan who are like sitting on a roof because",
    "start": "2600240",
    "end": "2606319"
  },
  {
    "text": "that's the best place to get wi-fi getting getting degrees in",
    "start": "2606319",
    "end": "2611839"
  },
  {
    "text": "social work and this is this is why i",
    "start": "2611839",
    "end": "2619200"
  },
  {
    "text": "i came up and i was a software engineer and i've never understood what those guys do in the closet",
    "start": "2619200",
    "end": "2625839"
  },
  {
    "text": "with the servers and everything and i think with with with the infrastructure being amazon web",
    "start": "2625839",
    "end": "2631839"
  },
  {
    "text": "services it is it made it made it easy for us and it made us immediate it let us do what we do best",
    "start": "2631839",
    "end": "2640160"
  },
  {
    "text": "and it's changing your lives thank you",
    "start": "2640160",
    "end": "2649838"
  },
  {
    "text": "you",
    "start": "2650800",
    "end": "2652880"
  }
]