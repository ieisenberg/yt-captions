[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "[Music]",
    "start": "720",
    "end": "5770"
  },
  {
    "text": "Dynamo DB is the database for the clown",
    "start": "6640",
    "end": "10679"
  },
  {
    "text": "a completely hands-off seamlessly",
    "start": "10679",
    "end": "12759"
  },
  {
    "text": "scalable system if the needs of your",
    "start": "12759",
    "end": "14639"
  },
  {
    "text": "business grow by an order of magnitude",
    "start": "14639",
    "end": "16840"
  },
  {
    "text": "or you know by a thousand times you just",
    "start": "16840",
    "end": "19199"
  },
  {
    "text": "go to Dynamo DB's Management console",
    "start": "19199",
    "end": "21240"
  },
  {
    "text": "turn a knob say I need this much more",
    "start": "21240",
    "end": "22720"
  },
  {
    "text": "throughput and you've got it it's as",
    "start": "22720",
    "end": "24359"
  },
  {
    "text": "easy as that with no SQL systems at",
    "start": "24359",
    "end": "26439"
  },
  {
    "start": "25000",
    "end": "69000"
  },
  {
    "text": "least with Dynamo DB the goal is scale",
    "start": "26439",
    "end": "29279"
  },
  {
    "text": "without bounds and be able to get in and",
    "start": "29279",
    "end": "31279"
  },
  {
    "text": "out in under 10 milliseconds Dynamo DB",
    "start": "31279",
    "end": "34040"
  },
  {
    "text": "real simple create a table you can start",
    "start": "34040",
    "end": "36960"
  },
  {
    "text": "running gets and puts against it if",
    "start": "36960",
    "end": "38800"
  },
  {
    "text": "you're running gets and puts at the",
    "start": "38800",
    "end": "40120"
  },
  {
    "text": "order two or three a second it works if",
    "start": "40120",
    "end": "42399"
  },
  {
    "text": "you're running gets and puts at tens of",
    "start": "42399",
    "end": "44440"
  },
  {
    "text": "thousands per second still works the",
    "start": "44440",
    "end": "46960"
  },
  {
    "text": "same non-relational databases come with",
    "start": "46960",
    "end": "49440"
  },
  {
    "text": "the mindset that I need to scale that is",
    "start": "49440",
    "end": "52960"
  },
  {
    "text": "the fundamental Drive behind it that",
    "start": "52960",
    "end": "55559"
  },
  {
    "text": "there's not going to be a single point",
    "start": "55559",
    "end": "57120"
  },
  {
    "text": "of failure or a single server but I",
    "start": "57120",
    "end": "59399"
  },
  {
    "text": "think a lot of the Vel opers will find",
    "start": "59399",
    "end": "60600"
  },
  {
    "text": "really attractive about the product is",
    "start": "60600",
    "end": "62079"
  },
  {
    "text": "that they can achieve really high",
    "start": "62079",
    "end": "63640"
  },
  {
    "text": "performance they can achieve a great",
    "start": "63640",
    "end": "65518"
  },
  {
    "text": "deal of scalability uh and just really",
    "start": "65519",
    "end": "68320"
  },
  {
    "text": "not have to worry that much about it",
    "start": "68320",
    "end": "70000"
  },
  {
    "start": "69000",
    "end": "95000"
  },
  {
    "text": "under the covers Dynamo DB takes care of",
    "start": "70000",
    "end": "72640"
  },
  {
    "text": "the",
    "start": "72640",
    "end": "73400"
  },
  {
    "text": "replication um not only for reliability",
    "start": "73400",
    "end": "76280"
  },
  {
    "text": "but also for performance um it takes",
    "start": "76280",
    "end": "78640"
  },
  {
    "text": "care of the scaling it takes care of",
    "start": "78640",
    "end": "80720"
  },
  {
    "text": "managing frut for its customers there",
    "start": "80720",
    "end": "83000"
  },
  {
    "text": "are two Dimensions to data scaling one",
    "start": "83000",
    "end": "85079"
  },
  {
    "text": "is on the storage footprint and the",
    "start": "85079",
    "end": "86600"
  },
  {
    "text": "other one is on the request throughput",
    "start": "86600",
    "end": "89159"
  },
  {
    "text": "the storage uh scaling level we",
    "start": "89159",
    "end": "91439"
  },
  {
    "text": "automatically take care of the scaling",
    "start": "91439",
    "end": "93759"
  },
  {
    "text": "customers don't even have to think about",
    "start": "93759",
    "end": "95799"
  },
  {
    "text": "it the throughput capacity is uh when",
    "start": "95799",
    "end": "97880"
  },
  {
    "text": "you create a table or update a table you",
    "start": "97880",
    "end": "99759"
  },
  {
    "text": "tell us how much uh throughput you want",
    "start": "99759",
    "end": "102040"
  },
  {
    "text": "the table to be able to achieve we",
    "start": "102040",
    "end": "103600"
  },
  {
    "text": "charge you by the hour just for what you",
    "start": "103600",
    "end": "105159"
  },
  {
    "text": "need and then if you can scale up or",
    "start": "105159",
    "end": "106840"
  },
  {
    "text": "down later and your bill will change",
    "start": "106840",
    "end": "108200"
  },
  {
    "text": "accordingly Dynamo DB was designed to",
    "start": "108200",
    "end": "110479"
  },
  {
    "text": "take advantage of the unique",
    "start": "110479",
    "end": "111439"
  },
  {
    "text": "characteristics of solid state drives or",
    "start": "111439",
    "end": "113439"
  },
  {
    "text": "ssds we use ssds uh partly to just",
    "start": "113439",
    "end": "116520"
  },
  {
    "text": "achieve blazing fast latencies we also",
    "start": "116520",
    "end": "118719"
  },
  {
    "text": "use them to keep the cost of throughput",
    "start": "118719",
    "end": "120640"
  },
  {
    "text": "down next to that there's this unique",
    "start": "120640",
    "end": "122920"
  },
  {
    "text": "mechanism for developers to reserve both",
    "start": "122920",
    "end": "126320"
  },
  {
    "text": "read and write uh frut capacity such",
    "start": "126320",
    "end": "129399"
  },
  {
    "text": "that they can really rely on the",
    "start": "129399",
    "end": "131840"
  },
  {
    "text": "performance of the system through the",
    "start": "131840",
    "end": "133840"
  },
  {
    "text": "console you can create a table update a",
    "start": "133840",
    "end": "136000"
  },
  {
    "text": "table to increase or decrease the",
    "start": "136000",
    "end": "137400"
  },
  {
    "text": "throughput levels that you need uh you",
    "start": "137400",
    "end": "139080"
  },
  {
    "text": "can see how much storage you've put into",
    "start": "139080",
    "end": "140840"
  },
  {
    "text": "the table and you can also look at",
    "start": "140840",
    "end": "142280"
  },
  {
    "text": "cloudwatch metrics to see how things are",
    "start": "142280",
    "end": "143879"
  },
  {
    "text": "performance it makes it a very low cost",
    "start": "143879",
    "end": "146400"
  },
  {
    "text": "and easy to grow surface",
    "start": "146400",
    "end": "150319"
  },
  {
    "text": "[Music]",
    "start": "151960",
    "end": "155419"
  }
]