[
  {
    "start": "0",
    "end": "28000"
  },
  {
    "text": "all right well hello everyone and thanks for coming along to the session um my name is Steve Roberts uh your co-pilot",
    "start": "120",
    "end": "6960"
  },
  {
    "text": "today is nor Johansson hi everybody um if you were at the net talk yesterday you'll know that Norman I uh software",
    "start": "6960",
    "end": "13400"
  },
  {
    "text": "developers at AWS if you were not at the talk Norman iio software developers at AWS um we work in the team responsible",
    "start": "13400",
    "end": "20600"
  },
  {
    "text": "for the net SDK for AWS the visual studio toolkit and more importantly for today's presentation the tool for",
    "start": "20600",
    "end": "26119"
  },
  {
    "text": "Windows Powershell so in the session we're going to take a look at how can we move a",
    "start": "26119",
    "end": "31480"
  },
  {
    "start": "28000",
    "end": "28000"
  },
  {
    "text": "physical server into the cloud now little bit of um smokeing mirrors here we don't actually have a physical server",
    "start": "31480",
    "end": "37800"
  },
  {
    "text": "here right and we don't have a corporate Network to connect to right so we're going to do a little bit of simulation",
    "start": "37800",
    "end": "42960"
  },
  {
    "text": "but basically we're going to go through how can we virtualize a server or take existing VMS and move them into the",
    "start": "42960",
    "end": "48520"
  },
  {
    "text": "cloud right you may have VMS running in your organization today that are now beginning to stress the hardware that",
    "start": "48520",
    "end": "53960"
  },
  {
    "text": "actually physically running on right you want to take advantage of perhaps the the bigger ec2 instance types to get them running in that",
    "start": "53960",
    "end": "60640"
  },
  {
    "text": "once we get the server imported into ec2 we're going to take a look at how can we connect that the private network uh",
    "start": "60640",
    "end": "66720"
  },
  {
    "text": "sorry how can we launch it into a private Network and connect it back to our corporate on Prem Network how to do",
    "start": "66720",
    "end": "72240"
  },
  {
    "text": "it securely just in case this server has things on it that you don't want on the public internet and then we're going to set up monitoring of the virtualized",
    "start": "72240",
    "end": "78280"
  },
  {
    "text": "server right once it's under our desk we can keep an an easy eye on it we know when things are going wrong we hope",
    "start": "78280",
    "end": "83840"
  },
  {
    "text": "right once it's in the cloud we don't have that physical access so we're going to show how set of monitoring and we can",
    "start": "83840",
    "end": "89000"
  },
  {
    "text": "keep an eye on it from a distance our focus is going to be on repeatable scriptable automation no button clicks",
    "start": "89000",
    "end": "96799"
  },
  {
    "text": "okay now why automate today it's just one server that we're going to move right in a month's",
    "start": "96799",
    "end": "103000"
  },
  {
    "start": "98000",
    "end": "98000"
  },
  {
    "text": "time six months time it could be tens of servers hundreds of servers right if you have a fleet of VMS if I ask Norm to",
    "start": "103000",
    "end": "108680"
  },
  {
    "text": "repeat the steps in a week's time there's a good chance he'll remember what we did and he'll get it right A month's time reasonable 6 months",
    "start": "108680",
    "end": "116759"
  },
  {
    "text": "unlikely 12 months forget it right cuz some new core CLR thing will have come out and you'll be distracted right so",
    "start": "116759",
    "end": "123520"
  },
  {
    "text": "we're going to capture what we do in a script that we can automate right we're looking for consistency we want to make",
    "start": "123520",
    "end": "128599"
  },
  {
    "text": "sure that when we run these scripts or when we do these operations we get the same results every time now once we do",
    "start": "128599",
    "end": "135319"
  },
  {
    "text": "that and we put it into say Version Control right we have a safety net right if we need to move another Fleet of",
    "start": "135319",
    "end": "140760"
  },
  {
    "text": "servers at some point down the down the line in time but we need to make slightly different changes how it's done",
    "start": "140760",
    "end": "146239"
  },
  {
    "text": "we can easily clone the script to make the changes we need and run it again and you know we're going to get predictable",
    "start": "146239",
    "end": "151800"
  },
  {
    "text": "results right if we make a mistake and we do something wrong and it all bursts into flame and we're all",
    "start": "151800",
    "end": "157640"
  },
  {
    "text": "running around with our hair on fire instead of trying to resort to a Wiki that is probably now out of date right",
    "start": "157640",
    "end": "162959"
  },
  {
    "text": "with what we did last time we can just roll back the script rerun it we're back to a known good",
    "start": "162959",
    "end": "168239"
  },
  {
    "text": "system and obviously when we're talking at Cloud scale right button clicks don't scale normally he has one mouse that he",
    "start": "168239",
    "end": "175760"
  },
  {
    "text": "can click right well two mes up but you know it just generally doesn't scale",
    "start": "175760",
    "end": "180840"
  },
  {
    "text": "right we want the scripts they scale easily right we can just run those in an automated fashion just over and over and",
    "start": "180840",
    "end": "187280"
  },
  {
    "text": "over and over again for however many instances that we need so that's why we're so insistent on automation we don't want any button",
    "start": "187280",
    "end": "193760"
  },
  {
    "text": "clicks so in the session we're going to take a look primarily at the adus tools for Windows Powershell so this uh",
    "start": "193760",
    "end": "199799"
  },
  {
    "start": "194000",
    "end": "194000"
  },
  {
    "text": "Powershell module now numbers in excess of 1300 command LS as of this mornings release um we Sim ship every time the",
    "start": "199799",
    "end": "207120"
  },
  {
    "text": "net SDK updates the power shell tools update automatically they use the net SDK",
    "start": "207120",
    "end": "212360"
  },
  {
    "text": "underneath we're then going to use uh Amazon S3 and Amazon ec2 together to actually import our server we're going",
    "start": "212360",
    "end": "218000"
  },
  {
    "text": "to be using the new import service that ec2 launched I believe earlier this year was when I blogged about it we're then",
    "start": "218000",
    "end": "224239"
  },
  {
    "text": "going to create and configure the private network with virtual private cloud and we're going to use Amazon's simple systems ec2 simple systems",
    "start": "224239",
    "end": "230920"
  },
  {
    "text": "manager to actually do some postlaunch configuration we want to do things like domain join we want to set up the",
    "start": "230920",
    "end": "238239"
  },
  {
    "text": "monitoring so before progressing to the scenario I'd like you to meet Norm our developer you really left that picture",
    "start": "238239",
    "end": "243560"
  },
  {
    "start": "239000",
    "end": "239000"
  },
  {
    "text": "in there I did um Norm has a problem well one um a problem scenario that we",
    "start": "243560",
    "end": "249959"
  },
  {
    "text": "want to go through today just to sort of you know set the set the talk up so nor why didn't you tell them what your problem is well one of my problems one",
    "start": "249959",
    "end": "256680"
  },
  {
    "text": "is working with you apparently you do things like this is my boss came over to me and said that one of the other devs",
    "start": "256680",
    "end": "264360"
  },
  {
    "text": "who just left was running our one of his our production systems under his desk",
    "start": "264360",
    "end": "270160"
  },
  {
    "text": "and of course he didn't leave very much documentation and now that box is not starting to work very well and he said",
    "start": "270160",
    "end": "276800"
  },
  {
    "text": "my job is now to fix this system up okay I'm kind of scared to see if anybody's actually been in this scenario I know I",
    "start": "276800",
    "end": "283240"
  },
  {
    "text": "have right and it's pretty scary right so Norm you've obviously gone through your options what do you think well I",
    "start": "283240",
    "end": "289960"
  },
  {
    "start": "287000",
    "end": "287000"
  },
  {
    "text": "few things I could do I could try and actually log on this box and figure out what's wrong with it but I don't have any clue what's on this machine and",
    "start": "289960",
    "end": "296280"
  },
  {
    "text": "quite likely it will make problems worse I could try and buy a new box provision it but since I don't know what's on the",
    "start": "296280",
    "end": "302919"
  },
  {
    "text": "other box the likelihood of actually me getting everything correctly configured on the other box is pretty",
    "start": "302919",
    "end": "308919"
  },
  {
    "text": "slim so what I thought I'd do is I know there's a lot of third party tools we can use that actually will capture our",
    "start": "308919",
    "end": "314600"
  },
  {
    "text": "this physical machine into a virtual machine and then I would like like to host that up into a",
    "start": "314600",
    "end": "320280"
  },
  {
    "text": "cloud let's see how so what we've done he's put together a Parell module um and",
    "start": "320280",
    "end": "326919"
  },
  {
    "start": "322000",
    "end": "322000"
  },
  {
    "text": "we've pushed it onto gate herb along with the samples from yesterday. net session um that you can use to actually",
    "start": "326919",
    "end": "332600"
  },
  {
    "text": "automate this process you can get used to get started uh it includes a number of command lits that we're going to functions we're going to run through",
    "start": "332600",
    "end": "337680"
  },
  {
    "text": "today um this is a level 200 session so we're not going to go too deep into the script code but it should give you an",
    "start": "337680",
    "end": "343440"
  },
  {
    "text": "idea of how you can get started and how you can adapt this and extend it for what you need it does include a single",
    "start": "343440",
    "end": "348479"
  },
  {
    "text": "command that runs the entire process end to end um if if you find that useful um",
    "start": "348479",
    "end": "354280"
  },
  {
    "text": "but we're going to focus on the individual commands so you can see what's going on get a feel for the steps involved please take the code modify TI",
    "start": "354280",
    "end": "359759"
  },
  {
    "text": "it to your knees and if you're on GitHub right now pull the module down and follow along so the process steps we're going",
    "start": "359759",
    "end": "366440"
  },
  {
    "start": "365000",
    "end": "365000"
  },
  {
    "text": "to go through first we're going to do some tool setup we're going to get the tools for windows poell installed well they're already installed but set up and",
    "start": "366440",
    "end": "371479"
  },
  {
    "text": "ready to go and then the actual import and launch uh is four steps import and",
    "start": "371479",
    "end": "376680"
  },
  {
    "text": "convert create the network launch the server do the post launch",
    "start": "376680",
    "end": "382000"
  },
  {
    "text": "configuration so let's get started with the tool setup so I mentioned that the tools are already installed on the machine that Norm's",
    "start": "382000",
    "end": "388560"
  },
  {
    "start": "388000",
    "end": "388000"
  },
  {
    "text": "using if you're using ec2 Windows images the public images the tools of Windows Powell are already pre-installed and",
    "start": "388560",
    "end": "394639"
  },
  {
    "text": "they revise every time uh ec2 revises the windows images if you're working on your local workstation you have two",
    "start": "394639",
    "end": "400639"
  },
  {
    "text": "options traditionally we've distributed the tools in a Windows installer along with the SDK for.net and the visual",
    "start": "400639",
    "end": "406560"
  },
  {
    "text": "studio toolkit so a lot of users still use that if you're using Windows 10 or",
    "start": "406560",
    "end": "411880"
  },
  {
    "text": "you have the Windows management framework five preview from back in April of this year I believe and there",
    "start": "411880",
    "end": "417360"
  },
  {
    "text": "was a refresh about a month or two ago if you have that installed you can use the new Powershell gallery now when you",
    "start": "417360",
    "end": "423479"
  },
  {
    "text": "use the gallery installing the uh the power shell module is simple as typing install Dash module name Adis Parell and",
    "start": "423479",
    "end": "432039"
  },
  {
    "start": "425000",
    "end": "425000"
  },
  {
    "text": "that will install it um for all users on the machine so it will prompt for elevation okay if you add a scope",
    "start": "432039",
    "end": "437199"
  },
  {
    "text": "parameter to that with current user as the value you can install it on a per user basis and this has some advantages",
    "start": "437199",
    "end": "442759"
  },
  {
    "text": "because it will keep the historical versions of the module uh installed as well so if you need to roll back at any",
    "start": "442759",
    "end": "448280"
  },
  {
    "text": "time you have that you have the capabil ility with the windows installer we overlay what was already on the machine",
    "start": "448280",
    "end": "453360"
  },
  {
    "text": "so that may be of interest to you so let's go through how you would get started your first five minutes with",
    "start": "453360",
    "end": "459319"
  },
  {
    "text": "the tools so here we are in the ISC and nor when we make calls to AWS obviously",
    "start": "459319",
    "end": "465720"
  },
  {
    "text": "we need credentials right okay and most adous resources are scoped by region so we need to set of a region now all of",
    "start": "465720",
    "end": "471159"
  },
  {
    "text": "the command lits take access key and secret key parameters and a region parameter right gets pretty tedious typing in a secret key over and over I",
    "start": "471159",
    "end": "478000"
  },
  {
    "text": "love doing it and we also don't want to put any of those keys in our scripts right so what we'd like to do is able to",
    "start": "478000",
    "end": "484120"
  },
  {
    "text": "use the sdk's credential store which is shared with the toolkit for visual studio and the poers shell tools and the",
    "start": "484120",
    "end": "489800"
  },
  {
    "text": "way we do that is using the command that called set- AWS credentials okay so set AWS credentials and we'll top in our",
    "start": "489800",
    "end": "497159"
  },
  {
    "text": "access key and secret key from wherever we got",
    "start": "497159",
    "end": "501599"
  },
  {
    "text": "them that's secret now if we were to hit enter at this point those credentials would become live in this shell okay but",
    "start": "503960",
    "end": "510599"
  },
  {
    "text": "when we close the shell down you'd have to type them all in again in another shell right we want to store them so the way you do that is to use the store as",
    "start": "510599",
    "end": "517640"
  },
  {
    "text": "parameter and you give it a profile name and this is the name you will use to reference this set of credentials in",
    "start": "517640",
    "end": "523279"
  },
  {
    "text": "future it's very much like using the toolkit and the SDK okay I call it live demo okay so hit",
    "start": "523279",
    "end": "529760"
  },
  {
    "text": "enter so those credentials are now in the store in fact we can see what we've got on the machine if we type get- A",
    "start": "529760",
    "end": "536839"
  },
  {
    "text": "credentials and there's a switch parameter called this profile profiles you can see we got two profiles set up now the live demo that Norm just set up",
    "start": "536839",
    "end": "543680"
  },
  {
    "text": "which won't obviously work they weren't real keys and the ones we're actually going to use so that takes care of setting",
    "start": "543680",
    "end": "548800"
  },
  {
    "text": "credentials in our scripts now or in our shell all we would need to do is just type to activate those credentials we go",
    "start": "548800",
    "end": "554320"
  },
  {
    "text": "back to set adus credentials and we give it the profile name that we want to use and within your",
    "start": "554320",
    "end": "560120"
  },
  {
    "text": "script you can switch your own credentials at will these will get stored in a variable um in fact you can see here that it says live demo at I",
    "start": "560120",
    "end": "566760"
  },
  {
    "text": "have a customized prompt in my Pell and my shells this shows me the region I'm in and the credential set I'm using so I",
    "start": "566760",
    "end": "573320"
  },
  {
    "text": "even always know what I am so that's credentials let's switch to",
    "start": "573320",
    "end": "578560"
  },
  {
    "text": "a real set of credentials because we're going to want to make some calls in a little so let's use the reinvent 2015",
    "start": "578560",
    "end": "585480"
  },
  {
    "text": "set okay so now we want to set of a region all the command again we'll take a region parameter but it gets a little",
    "start": "586160",
    "end": "592240"
  },
  {
    "text": "bit tedious so I always have a default region set up and the one we're going to use today is Us West 2 okay so you do",
    "start": "592240",
    "end": "598079"
  },
  {
    "text": "that with set default ads region and then just us West to and",
    "start": "598079",
    "end": "604360"
  },
  {
    "text": "within your script you can you can change these around if you need to run a command lit against a a different region that you're currently using you've got",
    "start": "604360",
    "end": "610600"
  },
  {
    "text": "set default in your shell just add the region parameter and that will override the shell default okay so now we have",
    "start": "610600",
    "end": "616360"
  },
  {
    "text": "credentials setup we have a region setup we're good start calling AWS right but there are over 1300",
    "start": "616360",
    "end": "622399"
  },
  {
    "text": "commandlets covering the vast majority of the ad Services right so finding a way around can be a little bit tricky when you first get started so what we do",
    "start": "622399",
    "end": "629560"
  },
  {
    "text": "is we effectively namespace the commandlets by adding a little two or threel prefix to the noun okay so S3 is",
    "start": "629560",
    "end": "636279"
  },
  {
    "text": "an obvious one ec2 is another you can find out what um pneumonics or the prefixes in use are by using our version",
    "start": "636279",
    "end": "642560"
  },
  {
    "text": "commandlet so you type get- AWS power shell version and if you add the list service",
    "start": "642560",
    "end": "649680"
  },
  {
    "text": "versions list service version info yeah you see that in the center are the pneumonics that we apply to the noun",
    "start": "649680",
    "end": "655920"
  },
  {
    "text": "okay so now you can do things like get command Dash noun S3 star and see all the S3 commands that's why it also tell",
    "start": "655920",
    "end": "663360"
  },
  {
    "text": "you exactly which services are supported from Powershell okay so let's how to find out what services are there and what the ponic is sometimes though you",
    "start": "663360",
    "end": "670240"
  },
  {
    "text": "might be familiar with the actual service API right and you want to know you know Parell has a slightly",
    "start": "670240",
    "end": "675279"
  },
  {
    "text": "restrictive verb and noun naming scheme what does that map to in Powershell so we have another command L that will help with that that's called get- AWS command",
    "start": "675279",
    "end": "682839"
  },
  {
    "text": "lit name and you give in the API operation so let's pick one them uh well we're",
    "start": "682839",
    "end": "689920"
  },
  {
    "text": "going to run instances so let's run instance right run instance yeah and",
    "start": "689920",
    "end": "695600"
  },
  {
    "text": "that'll show you that the command lit is new E2 instance okay now you can use Rex queries in this it's a match with Rex",
    "start": "695600",
    "end": "702200"
  },
  {
    "text": "switch so you know if you're unsure you can just type in just enough that you you think you recognize and it'll come",
    "start": "702200",
    "end": "707560"
  },
  {
    "text": "back with all the matches it has it also has another little cool feature when you through a documentation you'll see a lot",
    "start": "707560",
    "end": "713560"
  },
  {
    "text": "of samples for the AWS CLI it can translate to some rudimentary",
    "start": "713560",
    "end": "718760"
  },
  {
    "text": "form an aw CLI command into the equivalent Powershell command L name so this is useful if you find a sample and",
    "start": "718760",
    "end": "724920"
  },
  {
    "text": "you want to know what's what would it be in Powershell to do that you execute the same",
    "start": "724920",
    "end": "730200"
  },
  {
    "text": "commandlet and this time you give it the a CA command and you just need to give it just enough that it can pass it so",
    "start": "730200",
    "end": "738600"
  },
  {
    "text": "ec2 and what is the it we run hyphen instance is in the",
    "start": "738600",
    "end": "743959"
  },
  {
    "text": "CLI okay okay that should come back and say new2 instance okay you don't need",
    "start": "743959",
    "end": "749320"
  },
  {
    "text": "the AWS prefix all it really wants is it's looking for the the service uh code and then the name any parameters it'll",
    "start": "749320",
    "end": "755680"
  },
  {
    "text": "just dump it's not actually going to translate the parameters for you but that's a way you can get started in finding a way around the commandlets and",
    "start": "755680",
    "end": "761880"
  },
  {
    "text": "figuring out you know what's the power shell for this okay so let's head back to the",
    "start": "761880",
    "end": "768600"
  },
  {
    "text": "slides that's started we're set up we're ready to go let's start importing our",
    "start": "769480",
    "end": "775320"
  },
  {
    "text": "server now as I said earlier on we don't actually have a physical server under the desk that we're going to import so we already have a vhd a virtual machine",
    "start": "775320",
    "end": "782160"
  },
  {
    "start": "776000",
    "end": "776000"
  },
  {
    "text": "image that we're going to use today but if you're actually going to do this on a physical server some tools you can use um this is no particular endorsement",
    "start": "782160",
    "end": "788519"
  },
  {
    "text": "this is just something that we just quickly Googled for CIS internals has a free disc to vhd",
    "start": "788519",
    "end": "793880"
  },
  {
    "text": "um tool you can use they're generally called PTV migration tools uh you can find some in system centers there's a",
    "start": "793880",
    "end": "800399"
  },
  {
    "text": "very long link there but the slides will be available there's also a link there to the ec2 import prerequisites list",
    "start": "800399",
    "end": "806560"
  },
  {
    "text": "things like licensing info what kind of versions you can you can import Etc I encourage you to go and read that",
    "start": "806560",
    "end": "812639"
  },
  {
    "text": "there so to actually do the import it's actually very simple three-step process as far as you're concerned you",
    "start": "812639",
    "end": "819279"
  },
  {
    "start": "814000",
    "end": "814000"
  },
  {
    "text": "virtualize the hardware or you take your existing VM so that you have a virtual machine image file you then upload that",
    "start": "819279",
    "end": "825320"
  },
  {
    "text": "file to S3 once the file's in S3 we need to set up a rooll and roll permissions so that",
    "start": "825320",
    "end": "832000"
  },
  {
    "text": "ec2 can access those artifacts even though this is within AWS and it's",
    "start": "832000",
    "end": "837120"
  },
  {
    "text": "services ec2 does not permissions to access your S3 artifacts unless you give it permission okay so the first thing",
    "start": "837120",
    "end": "843639"
  },
  {
    "text": "we're going to do is set up a roll we're then going to add an assume rooll policy to that role so that ec2 can get credentials on your behalf to do work",
    "start": "843639",
    "end": "850759"
  },
  {
    "text": "right you probably all used this sort of stuff before once it has those credentials though it still can't do anything we're going to attach a role",
    "start": "850759",
    "end": "856839"
  },
  {
    "text": "policy that's going to give access to the specific artifacts in S3 that we're going to import once that's set up we",
    "start": "856839",
    "end": "863199"
  },
  {
    "text": "then make a call to e2's import uh routine saying hey here are my artifacts please do the import and convert",
    "start": "863199",
    "end": "869680"
  },
  {
    "text": "and then we just sit back and wait and the ultimate um result of that will be a private Amazon machine image that you",
    "start": "869680",
    "end": "875320"
  },
  {
    "text": "can then go and launch as an ec2 instance sound good now sounds good let's go do it all",
    "start": "875320",
    "end": "881920"
  },
  {
    "text": "right so I mentioned earlier that we've written a script module um that you know codifies all of this we've got the",
    "start": "881920",
    "end": "887680"
  },
  {
    "text": "actual script module here um the scripts loaded so let's import the module okay",
    "start": "887680",
    "end": "895440"
  },
  {
    "text": "import okay and it's there we go okay okay so you can see we've got five",
    "start": "895880",
    "end": "902560"
  },
  {
    "text": "tabs open the first tab is the do it all for me script that we wrote okay so this will do the import it'll wait for the",
    "start": "902560",
    "end": "908759"
  },
  {
    "text": "import to finish which can be tens of minutes an hour whatever the size of the image is um and then we'll actually go",
    "start": "908759",
    "end": "913800"
  },
  {
    "text": "off and launch create the network launch Etc with just a few parameters we're not going to use this one we're going to go through the individual command so let's",
    "start": "913800",
    "end": "919480"
  },
  {
    "text": "go to the second Tab and this is the import routine that we're going to step through so because",
    "start": "919480",
    "end": "924639"
  },
  {
    "text": "we want to step through the code and we're not going to do it to any great depth we're going to step through it let's set a break point in here so that we can uh do that so poell has a",
    "start": "924639",
    "end": "931880"
  },
  {
    "text": "breakpoint command set PS breakpoint but it has a very helpful Alias SBP sa you typing all that not okay I don't want to",
    "start": "931880",
    "end": "938360"
  },
  {
    "text": "type all that right so you give it Dash command and then you give it the function name that you're going to run",
    "start": "938360",
    "end": "944639"
  },
  {
    "text": "in this case it's going to be import - VM to",
    "start": "944639",
    "end": "950439"
  },
  {
    "text": "AWS okay our breakpoint is set so let's start running it all right import VM to",
    "start": "951360",
    "end": "957120"
  },
  {
    "text": "AWS okay now the first parameter Resource Group name you'll see this consistently",
    "start": "957120",
    "end": "962720"
  },
  {
    "text": "through all the the functions that we wrote for this when you're building a collection of resources that you're",
    "start": "962720",
    "end": "967759"
  },
  {
    "text": "going to use together it's helpful to tag them all in some common way so you can identify them all later on or use a",
    "start": "967759",
    "end": "972839"
  },
  {
    "text": "consistent name scheme right that's what this Resource Group name is we're going to use this consistently throughout this to identify this collected set of",
    "start": "972839",
    "end": "979519"
  },
  {
    "text": "resources if you like so let's give this a tag of reinvent okay the second parameter that",
    "start": "979519",
    "end": "986160"
  },
  {
    "text": "we're going to want is the VM file what do you want to mean to import and convert okay okay I think you put that",
    "start": "986160",
    "end": "991519"
  },
  {
    "text": "under reinvent is that right it's under yeah it's under reinvent 2015 VM and it's cunningly named under disk server",
    "start": "991519",
    "end": "998120"
  },
  {
    "text": "very cunning and then the third and sub final parameter is the bucket name where in S3 do you want me to put this right",
    "start": "998120",
    "end": "1004079"
  },
  {
    "text": "it's your bucket you have to tell us where it's going to go now bucket names are globally unique so I grabbed the",
    "start": "1004079",
    "end": "1009360"
  },
  {
    "text": "name under desk Corp under desk any hyphens or anything no okay then we",
    "start": "1009360",
    "end": "1015079"
  },
  {
    "text": "could add a verbos switch here to we see the output but as we're going to step through we'll just skip that let's just enter and execute okay so Norm you're a",
    "start": "1015079",
    "end": "1022759"
  },
  {
    "text": "power shell newbie relatively relatively let's see if you can describe what's going on all right so it looks",
    "start": "1022759",
    "end": "1029120"
  },
  {
    "text": "like we're going to first just validate that we've had to the default region because we didn't want to specify the region individually for all the",
    "start": "1029120",
    "end": "1035319"
  },
  {
    "text": "commands make sure our VM file actually exists and that our bucket actually exists and then we're going to take care",
    "start": "1035319",
    "end": "1041880"
  },
  {
    "text": "of uploading that to S3 so and here we're going to create",
    "start": "1041880",
    "end": "1047360"
  },
  {
    "text": "that S3 object key and then using that Resource Group name that you use as a prefix of it that's sort of how we",
    "start": "1047360",
    "end": "1053000"
  },
  {
    "text": "can group things and tag things in S3 and then looks like you're getting",
    "start": "1053000",
    "end": "1058520"
  },
  {
    "text": "the object is that what's going on yeah so what we're actually doing here is getting the object Med we're looking to see does this object already exist in S3",
    "start": "1058520",
    "end": "1065039"
  },
  {
    "text": "right the image that we're attempting to import here is 22 gig in size right now on the corporate land back in Seattle it",
    "start": "1065039",
    "end": "1071799"
  },
  {
    "text": "takes about 4 minutes to upload that over my home Wi-Fi it took two days right so we didn't want to stand here",
    "start": "1071799",
    "end": "1077559"
  },
  {
    "text": "and wait while it did the inut we've already uploaded it right so what this is doing is get if the object exists get",
    "start": "1077559",
    "end": "1083000"
  },
  {
    "text": "me its metadata and look at its length and when it was written and compare that to the local file right if you haven't",
    "start": "1083000",
    "end": "1088440"
  },
  {
    "text": "changed it don't upload it again that's all that's doing if it did need to upload it you see down below it's going",
    "start": "1088440",
    "end": "1094240"
  },
  {
    "text": "to um use the right S3 object so get S3 object gets the object metadata not the",
    "start": "1094240",
    "end": "1099840"
  },
  {
    "text": "content to get the content you use you use read S3 object and corresponding right S3 object to upload and under the",
    "start": "1099840",
    "end": "1107120"
  },
  {
    "text": "covers that's using the sdk's trans manager so it'll upload in a multi-threaded you know push the push",
    "start": "1107120",
    "end": "1112400"
  },
  {
    "text": "the content up faster so now it looks like we need to actually give ec2 permission to access",
    "start": "1112400",
    "end": "1119280"
  },
  {
    "text": "S3 y so we're taking an assume Ro policy that so this is isal policy you'll find",
    "start": "1119280",
    "end": "1125960"
  },
  {
    "text": "this in the ec2 import documentation is just crib directly here because certain Fields need to stay the same like the",
    "start": "1125960",
    "end": "1131600"
  },
  {
    "text": "the service name Etc so that's our assumer policy that's going to allow ec2 to get credentials temporary credentials",
    "start": "1131600",
    "end": "1137200"
  },
  {
    "text": "on our behalf to do work not necessarily call anything yet though so this gives me basically ECU can call the assume",
    "start": "1137200",
    "end": "1144080"
  },
  {
    "text": "roll API call get credentials but it still can't do anything right cor gets",
    "start": "1144080",
    "end": "1150080"
  },
  {
    "text": "critics okay so then we're going to go and see if that R exists it doesn't so",
    "start": "1150080",
    "end": "1155600"
  },
  {
    "text": "created and oh so here's the policy where we're actually going to give off those permissions right so you can see",
    "start": "1155600",
    "end": "1160919"
  },
  {
    "text": "we've got a operations in there the ec22 wants to call against S3 to get the content okay and then looks like you're",
    "start": "1160919",
    "end": "1167320"
  },
  {
    "text": "locking down the resource to the actual S3 object key so we're only going to give access to ec2 to just this object",
    "start": "1167320",
    "end": "1175039"
  },
  {
    "text": "yeah so this could be a onetime operation right if you're doing multiple Imports you might want to put them all in consist in a the same bucket under a",
    "start": "1175039",
    "end": "1182679"
  },
  {
    "text": "similar key prefix and then you would just do this once right to show that we can lock down into the specific artifact",
    "start": "1182679",
    "end": "1188080"
  },
  {
    "text": "we CH to make a more restrictive policy today and then ac2 underneath that needs",
    "start": "1188080",
    "end": "1193880"
  },
  {
    "text": "a few operations it's going to run as well ec2 can't call itself unless you give it permission was pretty",
    "start": "1193880",
    "end": "1199400"
  },
  {
    "text": "yeah so we set that policy up so there's just the power shell commands that actually write that IM policy yeah so",
    "start": "1199400",
    "end": "1205559"
  },
  {
    "text": "we're using splatting here I you may some of you may not be familiar with splatting some of the commands can run",
    "start": "1205559",
    "end": "1211320"
  },
  {
    "text": "off the edge of the screen especially on these small resolutions so we collect the parameters into a hash map a hash table and then we just give that to the",
    "start": "1211320",
    "end": "1217240"
  },
  {
    "text": "power shell commandlet power shell does all the binding for us it's pretty convenient so there's a pause in here",
    "start": "1217240",
    "end": "1223400"
  },
  {
    "text": "now right we've just called uh identity access Management's Global endpoint in or endpoint in IAD",
    "start": "1223400",
    "end": "1229200"
  },
  {
    "text": "usc1 so now that's been propagated out to all the regions only takes a second or so in fact it's done now right this",
    "start": "1229200",
    "end": "1235960"
  },
  {
    "text": "is just there in case you run this at full speed so we return the role name because",
    "start": "1235960",
    "end": "1241159"
  },
  {
    "text": "we're going to use that okay so now we're on to that third stage right we've set up we've set up our artifacts we've",
    "start": "1241159",
    "end": "1246520"
  },
  {
    "text": "set up our role we can ask ec2 to go and do the import okay so this is setting that that image disc container looks",
    "start": "1246520",
    "end": "1253280"
  },
  {
    "text": "like the file extension is what we're using to determine the format yeah so we support vhd uh OV formats and I believe",
    "start": "1253280",
    "end": "1259520"
  },
  {
    "text": "vmdk I think is the form the other format that we support right now okay and then looks like we're just telling",
    "start": "1259520",
    "end": "1265520"
  },
  {
    "text": "it where the object were actual images in S3 yeah there are a couple of other ways you can also identify where the",
    "start": "1265520",
    "end": "1271080"
  },
  {
    "text": "artifacts are we've just chosen to list the bucket and key here okay after that we are just calling the import command",
    "start": "1271080",
    "end": "1277159"
  },
  {
    "text": "and you'll notice we're passing the role name so that ec2 knows what role to use to do the work and that's it that's it",
    "start": "1277159",
    "end": "1283159"
  },
  {
    "text": "right so what we've been returned is an import task or conversion task if we scroll up through here you see there's",
    "start": "1283159",
    "end": "1289000"
  },
  {
    "text": "the task that was returned and you'll see that there's an import task ID so this task is effectively asynchronous",
    "start": "1289000",
    "end": "1294200"
  },
  {
    "text": "right it's going to go off and it's going to take a while to do its job right to do the conversion it's not available immediately so we can go and",
    "start": "1294200",
    "end": "1299600"
  },
  {
    "text": "test we can you know every so often poll are you done yet are you done yet which is what the main script the end to end script does right just to be aware that",
    "start": "1299600",
    "end": "1307000"
  },
  {
    "text": "it will just sit there and wait then it'll go to sleep for a minute and then it'll test again at any given time we can check the progress by using the get",
    "start": "1307000",
    "end": "1314640"
  },
  {
    "text": "ec2 import image task I believe it's called okay yeah if your power session is",
    "start": "1314640",
    "end": "1321799"
  },
  {
    "text": "closed the import is still happening oh yes yeah yeah it's happening on in the cloud now we",
    "start": "1321799",
    "end": "1327400"
  },
  {
    "text": "done and you just give it the import task ID still pending okay we'll come back",
    "start": "1327400",
    "end": "1333440"
  },
  {
    "text": "and check so when this is done obviously status will change to completed and we'll actually have an image ID which is",
    "start": "1333440",
    "end": "1338960"
  },
  {
    "text": "the Amazon machine image yes that we can then go launch and if you look at the end to end script that we have once the import and conversion is complete we",
    "start": "1338960",
    "end": "1346080"
  },
  {
    "text": "actually take the image ID out of that and then we go and apply the tag the resource Group name tag to it automatically okay so back to the",
    "start": "1346080",
    "end": "1355039"
  },
  {
    "text": "slides so norom what do you learn as a PO shell new uh I learned now",
    "start": "1355480",
    "end": "1361159"
  },
  {
    "text": "as in poers Shell how to actually upload our image to S3 and then we needed to give e to",
    "start": "1361159",
    "end": "1366840"
  },
  {
    "text": "access to actually access the object in S3 so we learn how to set up those IM roles and the permissions and how to be",
    "start": "1366840",
    "end": "1372880"
  },
  {
    "text": "able to assume the roles get those credentials and then after that we set up how to start the import conversion we",
    "start": "1372880",
    "end": "1380840"
  },
  {
    "text": "called that partial commandlet which gave us our import task ID that we will then just continually to pull to see",
    "start": "1380840",
    "end": "1386400"
  },
  {
    "text": "when the actual completion is done right step one done three just three to",
    "start": "1386400",
    "end": "1392400"
  },
  {
    "text": "go I'm going to create a network now so the server that we've uploaded we're going to assume it has some critical system on it some HR System that or you",
    "start": "1392400",
    "end": "1398400"
  },
  {
    "text": "know we don't want on the public internet so we're going to launch it into a private network using a virtual private Cloud so vpcs let you subset an",
    "start": "1398400",
    "end": "1405720"
  },
  {
    "start": "1400000",
    "end": "1400000"
  },
  {
    "text": "AWS Cloud into a small private region your own IP resses you can configure inbound and outbound access with network",
    "start": "1405720",
    "end": "1412000"
  },
  {
    "text": "access control list security groups Etc you have a tremendous amount of control over the bpc topology and you can Bridge",
    "start": "1412000",
    "end": "1418240"
  },
  {
    "text": "it securely with your on-site Network so effectively extending your corporate Network out into the cloud there are a",
    "start": "1418240",
    "end": "1423799"
  },
  {
    "text": "couple of wi papers listed on here that I'd encourage you to read if you haven't seen them now VPC is a very deep and and",
    "start": "1423799",
    "end": "1430039"
  },
  {
    "text": "uh very powerful topic we'd have time to go into it in a huge amount of depth today again it's a level 200 session so",
    "start": "1430039",
    "end": "1435480"
  },
  {
    "text": "if you read those what we're going to do is walk through how we would potentially set up our VPC and then we'll see what we've",
    "start": "1435480",
    "end": "1441799"
  },
  {
    "text": "actually done to simulate that so there's our lonely corporate data center that we want to bridge to",
    "start": "1441799",
    "end": "1447520"
  },
  {
    "start": "1444000",
    "end": "1444000"
  },
  {
    "text": "now like a lot of AG things everything starts with a region VPC is a scope by a region so the first thing we're going to",
    "start": "1447520",
    "end": "1453400"
  },
  {
    "text": "do is create a VPC and we're going to give an address range in this case 1016 so 10 Z is the significant parts of",
    "start": "1453400",
    "end": "1460440"
  },
  {
    "text": "the address the rest will match as far as rating uh is concerned regions obviously span availability Zs right",
    "start": "1460440",
    "end": "1467080"
  },
  {
    "text": "that's how we do our fault tolerance Etc vpcs also span those availability zones and they do it by creating things",
    "start": "1467080",
    "end": "1473520"
  },
  {
    "text": "called subnets subnets do a number of jobs for us firstly they anchor parts of the VPC to an availability Zone and you",
    "start": "1473520",
    "end": "1479799"
  },
  {
    "text": "can create multiple subnets in an A or just one or nonone it's your choice you have that complete control the subnet",
    "start": "1479799",
    "end": "1486360"
  },
  {
    "text": "also partitions the address space down so you'll notice that in subnet one here we're using",
    "start": "1486360",
    "end": "1492919"
  },
  {
    "text": "1024 right so we've cut it down to just 200 and some odd servers sub two is",
    "start": "1492919",
    "end": "1498720"
  },
  {
    "text": "using 101 024 right inside the subnets that's where we run our",
    "start": "1498720",
    "end": "1505520"
  },
  {
    "text": "instances and every VPC comes with a router hey I said it right cool",
    "start": "1505520",
    "end": "1511320"
  },
  {
    "text": "um as a Brit that's really hard um you'll notice that we have a route table",
    "start": "1511320",
    "end": "1516640"
  },
  {
    "text": "at the bottom here the main route table the default route table all subnets are associated with that route table by default unless you explicitly override",
    "start": "1516640",
    "end": "1522919"
  },
  {
    "text": "in set a custom route table and that just basically means all traffic is local nothing's coming in nothing's",
    "start": "1522919",
    "end": "1528640"
  },
  {
    "text": "going out not quite what we need we want actually hook to the corporate data center and we there's a couple options for that we could use Direct Connect",
    "start": "1528640",
    "end": "1535399"
  },
  {
    "text": "what we could also use is a virtual private Gateway so here we'd attach a virtual private gateway to the VPC we'd",
    "start": "1535399",
    "end": "1541360"
  },
  {
    "text": "have a customer Gateway on site which is software or hardware and a VPN connection linking the two and then in",
    "start": "1541360",
    "end": "1547000"
  },
  {
    "text": "this particular example we've applied a custom route table to the only one subnet so any traffic that's not for the",
    "start": "1547000",
    "end": "1553200"
  },
  {
    "text": "local VPC is going to go out through the gateway to the corporate net okay now the what this allows you to do is if you",
    "start": "1553200",
    "end": "1559640"
  },
  {
    "text": "do want to have public internet access say for subnet one you can still rout it through all your internal proxies and",
    "start": "1559640",
    "end": "1565919"
  },
  {
    "text": "fils Etc to control that access alternatively you could just attach a an internet gateway to the VPC and then",
    "start": "1565919",
    "end": "1571880"
  },
  {
    "text": "control the routing there okay this is very similar to what we actually want to",
    "start": "1571880",
    "end": "1576960"
  },
  {
    "text": "do today for our demo right except that we don't have a real domain so what I did I set up a VPC that simulates the",
    "start": "1576960",
    "end": "1584520"
  },
  {
    "start": "1582000",
    "end": "1582000"
  },
  {
    "text": "corporate Network that's on the left side of the screen okay so that's a VPC it's got a couple of subnets in it for",
    "start": "1584520",
    "end": "1590320"
  },
  {
    "text": "example it's running a simple ad with the ads directory service it's simulating our domain on the right hand",
    "start": "1590320",
    "end": "1596919"
  },
  {
    "text": "side is the VPC that we're going to set up to host the server that we're importing so that's going to have again a couple of subnets in a 172 address",
    "start": "1596919",
    "end": "1603600"
  },
  {
    "text": "range when you use VPC pairing as you see in the center here the address ranges shouldn't overlap it's router by default Etc and",
    "start": "1603600",
    "end": "1611200"
  },
  {
    "text": "then we going to set up VPC pering between the two and we're going to do all that from po shell so let's do it all right",
    "start": "1611200",
    "end": "1620200"
  },
  {
    "text": "so this is I'm swing this cre VPC Network script we're going to do y so let's set a break point SBP",
    "start": "1620200",
    "end": "1627799"
  },
  {
    "text": "command newc",
    "start": "1627799",
    "end": "1635200"
  },
  {
    "text": "Okay so Resource Group n that's going to be reinvent be reinvent yeah okay so then we want the Base",
    "start": "1635440",
    "end": "1642320"
  },
  {
    "text": "address for the VPC that we're creating so that's the 17200 okay and what will happen is the",
    "start": "1642320",
    "end": "1647799"
  },
  {
    "text": "script actually partition that down into subnets automatically for",
    "start": "1647799",
    "end": "1652799"
  },
  {
    "text": "us then we want the name of the VPC that we're going to appear to this is our corporate simulation Network okay now a",
    "start": "1652880",
    "end": "1659159"
  },
  {
    "text": "general practice that I found quite useful is instead of expecting operators to type in IDs for things like the VPC",
    "start": "1659159",
    "end": "1665159"
  },
  {
    "text": "ID or the directory ID is to give them the name of something because that's more easy memorable right let the script",
    "start": "1665159",
    "end": "1671039"
  },
  {
    "text": "go and find out what it needs to run as a general principle right rather than use IDs so the actual VPC P name we're",
    "start": "1671039",
    "end": "1677600"
  },
  {
    "text": "going to connect to is under desk",
    "start": "1677600",
    "end": "1681278"
  },
  {
    "text": "Corp okay and I think that was it for parameters again we have Vose but we're going to step through so we'll ignore",
    "start": "1682679",
    "end": "1688080"
  },
  {
    "text": "that start executing okay so again testing our region and then creating our cider from",
    "start": "1688080",
    "end": "1695320"
  },
  {
    "text": "our Base address just adding that sl16 and that's all you really need for creating the bpc just that that's it and",
    "start": "1695320",
    "end": "1701440"
  },
  {
    "text": "then tagging it so we use that same resource SC name this PPC is going to called reinvent",
    "start": "1701440",
    "end": "1708440"
  },
  {
    "text": "uh which looks like here you're doing some more uh dealing with the eventual consistency yeah eventual consistency",
    "start": "1708440",
    "end": "1713640"
  },
  {
    "text": "right we need to make sure that the VPC is initialized before we start adding the subnets only takes a second or so but just pause if this is running at",
    "start": "1713640",
    "end": "1719679"
  },
  {
    "text": "full speed okay then what are you doing over here so what we're doing now is",
    "start": "1719679",
    "end": "1725880"
  },
  {
    "text": "we're taking that Base address the 17200 splitting it to its individual quads right then we're going to take the first",
    "start": "1725880",
    "end": "1731840"
  },
  {
    "text": "two quads and we're going to increment the third quad so 172 0 0 0 1720 1 Z",
    "start": "1731840",
    "end": "1739240"
  },
  {
    "text": "with 24 net masks because we're going to create an a a subnet in every a US West 2 has three azs so we're going to create",
    "start": "1739240",
    "end": "1746440"
  },
  {
    "text": "three subnets all right so we created our three subnets and then looks like you're going to do filter all those to",
    "start": "1746440",
    "end": "1752200"
  },
  {
    "text": "make sure uh they are all available is that right yeah so rather than poll each",
    "start": "1752200",
    "end": "1757279"
  },
  {
    "text": "subnet to make sure it's available before we proceed what I'm doing is making a filter that says give me all the available subnets in the VPC when",
    "start": "1757279",
    "end": "1763960"
  },
  {
    "text": "that matches the number that I created I'm good to go right okay and then now",
    "start": "1763960",
    "end": "1769559"
  },
  {
    "text": "this is the point yeah so you can say oh so yeah here it looks like we would be creating our actual custom Gateway right",
    "start": "1769559",
    "end": "1776760"
  },
  {
    "text": "but it's not under here yeah so we don't have one so we're going to simulate so now we're going to set up the VPC pair",
    "start": "1776760",
    "end": "1782200"
  },
  {
    "text": "to the VPC that we already have okay so we're going to go fetch that pering VPC",
    "start": "1782200",
    "end": "1788320"
  },
  {
    "text": "and we're going to actually request creating that connection there right so when you set of the VPC peering the peer",
    "start": "1788320",
    "end": "1795840"
  },
  {
    "text": "the VPC you're peering to has to approve it someone or something has to approve that request right now we could um set",
    "start": "1795840",
    "end": "1804039"
  },
  {
    "text": "of VPC with with other accounts right right and we'd be relied on them whoever that is to go and do the approval",
    "start": "1804039",
    "end": "1810200"
  },
  {
    "text": "because we actually own these vpcs we're going to do this from script so we have to wait for the peering connection to",
    "start": "1810200",
    "end": "1815360"
  },
  {
    "text": "reach a pending acceptance stage before we actually issue the command okay then we just right so we just approve ec2 VPC",
    "start": "1815360",
    "end": "1822640"
  },
  {
    "text": "pering connection right the two vpcs are now peered but there's no traffic flowing between them we need to",
    "start": "1822640",
    "end": "1828000"
  },
  {
    "text": "configure the route tables now so that traffic can go from end to end and that's all these next two steps to do",
    "start": "1828000",
    "end": "1834679"
  },
  {
    "text": "okay so looks like yeah we're setting up one route table this is from our",
    "start": "1834679",
    "end": "1840399"
  },
  {
    "text": "corporate Network back to our new network is that right I think so yeah okay and then we're going to do the reverse so we can have traffic going",
    "start": "1840399",
    "end": "1846279"
  },
  {
    "text": "back and forth to our new networks yeah okay is that it that's it we're done",
    "start": "1846279",
    "end": "1852159"
  },
  {
    "text": "Network set up okay let's go back to the slides so nor what do you think about",
    "start": "1852159",
    "end": "1858679"
  },
  {
    "text": "creating vpcs oh it was awesome so yeah with power show we learn how to actually construct configure our",
    "start": "1858679",
    "end": "1864880"
  },
  {
    "text": "VPC all with Automation and Powers shell learning the subnets and also how to do all the peering so we could have two",
    "start": "1864880",
    "end": "1870960"
  },
  {
    "text": "different vpcs be able to communicate with each other that was our simulation since we don't actually have our",
    "start": "1870960",
    "end": "1876399"
  },
  {
    "text": "corporate Network um yeah that's it all right two4",
    "start": "1876399",
    "end": "1882279"
  },
  {
    "text": "done nearly there so next stages to launch our server this is the easiest bit we're go straight back to the demo",
    "start": "1882279",
    "end": "1888760"
  },
  {
    "text": "all right so another breako yep break point",
    "start": "1888760",
    "end": "1895399"
  },
  {
    "text": "now this one this particular command lit takes a lot more parameters because you have a lot more customization of how you launch an instance but some of them are",
    "start": "1895399",
    "end": "1901240"
  },
  {
    "text": "defaulted so we'll go through that uh I had Code Monkey fail and forgot to say",
    "start": "1901240",
    "end": "1906330"
  },
  {
    "text": "[Music] command",
    "start": "1906330",
    "end": "1913159"
  },
  {
    "text": "okay okay and so research GP Stills reinvent mhm subnet zone so here we get to choose",
    "start": "1914519",
    "end": "1922279"
  },
  {
    "text": "which uh so this script can launch multiple instances of the image in",
    "start": "1922279",
    "end": "1928440"
  },
  {
    "text": "multiple subnets right we're going to launch it one subnet one instance so in this case you would type Us West 2A Us",
    "start": "1928440",
    "end": "1935240"
  },
  {
    "text": "West 2B Etc as an array let's just use us West 2A or whichever one you fancy",
    "start": "1935240",
    "end": "1940279"
  },
  {
    "text": "image ID we don't need right we're going to use that Resource Group name to go and find our image that we've imported",
    "start": "1940279",
    "end": "1946000"
  },
  {
    "text": "right we haven't actually checked up on the status of it but I'm pretty sure it hasn't converted yet so we've already got one to go we're good um instance",
    "start": "1946000",
    "end": "1952880"
  },
  {
    "text": "type if you don't specify it this script defaults to a T2 small because we're launching a VPC we can use the t2s",
    "start": "1952880",
    "end": "1958840"
  },
  {
    "text": "instance count will default to one if we don't specify it and what you'll if you specify instance count you will get instance count instances per a that you",
    "start": "1958840",
    "end": "1965840"
  },
  {
    "text": "specify so if you give me two azs three instances you're going to get six instances",
    "start": "1965840",
    "end": "1971080"
  },
  {
    "text": "okay Ingress IP and Ingress Port can be used to open up the security group we're going to create a security group",
    "start": "1971080",
    "end": "1976600"
  },
  {
    "text": "wrapping this instance what the in you're launching and we can use this to control access into that instance at",
    "start": "1976600",
    "end": "1982880"
  },
  {
    "text": "secur level right so let's specify the ports first okay so what I want to do is",
    "start": "1982880",
    "end": "1988679"
  },
  {
    "text": "I want to open up Port 80 because we're going to use that for poell remoting okay well we're not going to use it",
    "start": "1988679",
    "end": "1994080"
  },
  {
    "text": "we're going to set it up and show it and then 3389 because if you're sitting in your corporate land you might want a remote desktop into this instance for",
    "start": "1994080",
    "end": "2001279"
  },
  {
    "text": "some reason or you might want to do Parell remoting so we should have to set that up well we don't want everybody to hit this right we only want from our",
    "start": "2001279",
    "end": "2007799"
  },
  {
    "text": "corporate land which is on the 10 Z Network right so then we give an engress I uh Ingress IP of our 10 z0000 okay and",
    "start": "2007799",
    "end": "2016440"
  },
  {
    "text": "then you need the sl6 you could limit this if you wanted all right next one is managed",
    "start": "2016440",
    "end": "2023279"
  },
  {
    "text": "policy name so the policies that we saw earlier on are called inline policies you saw the strings expanded IM also has",
    "start": "2023279",
    "end": "2029279"
  },
  {
    "text": "the concept of manage policies it has some defaults and it has something you can set up yourself right in this ones",
    "start": "2029279",
    "end": "2034840"
  },
  {
    "text": "we just give it a name if we don't specify manage policy now the script will use power user access so the script",
    "start": "2034840",
    "end": "2040240"
  },
  {
    "text": "the the in the instances or code running on the instances can effectively call any a do a service they can't do any I",
    "start": "2040240",
    "end": "2046279"
  },
  {
    "text": "tinkering around the con set of users Etc that sort of thing so we can leave that one alone PS remoting Port that we",
    "start": "2046279",
    "end": "2051638"
  },
  {
    "text": "want to use right if you're behind a corporate firewall sometimes Parell remoting is hard to set up right what",
    "start": "2051639",
    "end": "2057679"
  },
  {
    "text": "you need to do is set a pass a script across when you launch the instance the script will actually set one up for you for the port you specify so we're going",
    "start": "2057679",
    "end": "2063878"
  },
  {
    "text": "to use port 880 because that can get over corporate firewalls this is what I used back in Seattle two instances we're",
    "start": "2063879",
    "end": "2069800"
  },
  {
    "text": "good to go all right all right so again check",
    "start": "2069800",
    "end": "2075320"
  },
  {
    "text": "region and test VPC go in there so here we're just trying to make sure we have",
    "start": "2075320",
    "end": "2080520"
  },
  {
    "text": "our VPC so not you know instead of passing in the VPC ID we're going to go and find the VPC using the resource",
    "start": "2080520",
    "end": "2085560"
  },
  {
    "text": "Group name that we just gave it much more convenient for operators to use okay and then we need to go find the",
    "start": "2085560",
    "end": "2092440"
  },
  {
    "text": "image that we actually went to launch right so you're going to go by that same tag name yep and do get image for",
    "start": "2092440",
    "end": "2100040"
  },
  {
    "text": "that oh I messed up Steve so I stepped over what we probably",
    "start": "2100040",
    "end": "2107079"
  },
  {
    "text": "wanted to go into it's down here believe so we'll just look at",
    "start": "2107079",
    "end": "2113520"
  },
  {
    "text": "that so setting up the role we would have set up again we would just set up another role with the assume",
    "start": "2113520",
    "end": "2118760"
  },
  {
    "text": "policy um and then we're going to register the managed policy which is the",
    "start": "2118760",
    "end": "2124599"
  },
  {
    "text": "power shell or the power user policy right yeah okay y so that's all we just did yep",
    "start": "2124599",
    "end": "2131960"
  },
  {
    "text": "okay okay so we have that role um now when we launch e do instances we don't give rols we actually have to give it an",
    "start": "2131960",
    "end": "2138480"
  },
  {
    "text": "instance profile right so we need to wrap that profile or that roll with an instance profile so here we're going to",
    "start": "2138480",
    "end": "2144400"
  },
  {
    "text": "go and create that instance profile and then once we create it we're going to add the RO that we just created",
    "start": "2144400",
    "end": "2149880"
  },
  {
    "text": "to that instance profile all right now we're going to go create that secur de we talking",
    "start": "2149880",
    "end": "2155839"
  },
  {
    "text": "about so Technic exists I'm guessing it does not so we",
    "start": "2155839",
    "end": "2164040"
  },
  {
    "text": "are okay we're just going to create just a security group and then it looks like",
    "start": "2165720",
    "end": "2170800"
  },
  {
    "text": "we're going to Loop through all of our ports here yep so for each for each Port that we specified we're going to set up",
    "start": "2170800",
    "end": "2176040"
  },
  {
    "text": "an IP permission object that has the IP address range that we want to restrict to it to that open port you can do it in",
    "start": "2176040",
    "end": "2182079"
  },
  {
    "text": "other ways but we're going to use IP range here once we have that collection of Ip permissions we just Grant Ingress",
    "start": "2182079",
    "end": "2189160"
  },
  {
    "text": "right we can also Grant egress as well similar command look pass back the group ID cuz you're going to want it on launch",
    "start": "2189160",
    "end": "2194760"
  },
  {
    "text": "okay so we're going to set up some basic launch parameters in our Splat okay so we requested that we want Pell remoting",
    "start": "2194760",
    "end": "2200319"
  },
  {
    "text": "enabled on Port 80 so when you set this up what you have to do is set a small Powershell script that configures winrm",
    "start": "2200319",
    "end": "2207079"
  },
  {
    "text": "on the instance on the port that you specify and this has to be spe this has to be pass as a base 64 encoded string",
    "start": "2207079",
    "end": "2213200"
  },
  {
    "text": "to ec2 on the launch so this little helper function here you might find useful just just this alone okay to",
    "start": "2213200",
    "end": "2218359"
  },
  {
    "text": "build the the Parell script that you need to configure with the requested",
    "start": "2218359",
    "end": "2223960"
  },
  {
    "text": "Port pass that back as the base 64 string and then we just add it to our launch parameters now I said that we're going",
    "start": "2223960",
    "end": "2230319"
  },
  {
    "text": "to launch in multip we could launch in multiple subnets all this is doing is going getting getting hold of my subnets for this VPC matching them with the ones",
    "start": "2230319",
    "end": "2236920"
  },
  {
    "text": "I specified on the command line and then setting that as the subnet we're going to launch into okay so then once we have",
    "start": "2236920",
    "end": "2243200"
  },
  {
    "text": "that subnet we do the launch C and that gives us back a reservation right which that has its collection of instances if",
    "start": "2243200",
    "end": "2249880"
  },
  {
    "text": "we would have said more than one instance it would have been more than it would have been that but in our case it's just that one and now we're just",
    "start": "2249880",
    "end": "2255000"
  },
  {
    "text": "going to go tag all those ec2 instances with that same tag we've been using throughout our talk today yeah and not",
    "start": "2255000",
    "end": "2260640"
  },
  {
    "text": "that we don't have to wait for them to be fully launched to tag them we can do it straight away okay and we should pass back the",
    "start": "2260640",
    "end": "2267079"
  },
  {
    "text": "instances that's it our server that we're currently converting is is up or their version of it is no open and",
    "start": "2267079",
    "end": "2272599"
  },
  {
    "text": "running in fact why don't we go and check on the conversion progress okay",
    "start": "2272599",
    "end": "2278240"
  },
  {
    "text": "oh there it is yeah bring that up so we are converting it's converting",
    "start": "2279680",
    "end": "2288400"
  },
  {
    "text": "right okay so back to the",
    "start": "2288400",
    "end": "2292200"
  },
  {
    "start": "2293000",
    "end": "2293000"
  },
  {
    "text": "slides so here we get to learn with Powershell how we can actually set up our security groups and lock down access",
    "start": "2293680",
    "end": "2300319"
  },
  {
    "text": "to our instances and once we did that we actually launched our inance into our VPC in with our subnet for availability",
    "start": "2300319",
    "end": "2307079"
  },
  {
    "text": "Zone we could have done it across multiple availability zones to give us that High um",
    "start": "2307079",
    "end": "2313079"
  },
  {
    "text": "tolerance and then we used uh learned how we could use uh the user data to",
    "start": "2313079",
    "end": "2319079"
  },
  {
    "text": "actually run some power shell scripts in the initial launch of our ec2 instances in our case we use that to set up the",
    "start": "2319079",
    "end": "2324520"
  },
  {
    "text": "power shell remoting we're nearly there we have one",
    "start": "2324520",
    "end": "2330040"
  },
  {
    "text": "more job to do Post launch configuration so Norm wants this server to be connected to the corporate Network",
    "start": "2330040",
    "end": "2335880"
  },
  {
    "start": "2331000",
    "end": "2331000"
  },
  {
    "text": "corporate domain and he wants to turn on cloudwatch monitoring he wants the logs and collect logs and metrics from the",
    "start": "2335880",
    "end": "2341200"
  },
  {
    "text": "instance so he can watch them securely online just make sure this instance is running just fine and to do that as I",
    "start": "2341200",
    "end": "2347000"
  },
  {
    "text": "said we're going to use Simple systems manager now simple systems manager or SSM it's a thin automation bootstrap",
    "start": "2347000",
    "end": "2353920"
  },
  {
    "text": "layer for ec2 Windows instances if you launch a public ec2 Windows instance there's nothing on it well it's",
    "start": "2353920",
    "end": "2360200"
  },
  {
    "text": "technically not true it has the ec2 config service running it has the ads SDK for net and it has the tools to Windows Powershell but that's it right",
    "start": "2360200",
    "end": "2367680"
  },
  {
    "text": "so you can use SSM to do things like Auto domain join you can install Parell modules you can install MSI packages and",
    "start": "2367680",
    "end": "2374720"
  },
  {
    "text": "you can set up cloudwatch monitoring metrics now if you you canili with um",
    "start": "2374720",
    "end": "2380119"
  },
  {
    "text": "DSC Chef puppet you're probably thinking well isn't this the same thing over again well not really it's actually",
    "start": "2380119",
    "end": "2385280"
  },
  {
    "text": "complimentary right those instances that you're launching or or could be launching as I said have nothing on them",
    "start": "2385280",
    "end": "2390520"
  },
  {
    "text": "right so you need a way of bootstrapping that content and then you can hand over if you want to do more detailed uh",
    "start": "2390520",
    "end": "2396079"
  },
  {
    "text": "configuration set up afterwards so think of this as a complimentary Tech to those systems so what Norm has to do is",
    "start": "2396079",
    "end": "2403200"
  },
  {
    "text": "basically create a configuration document adjacent document you then register that document with SSM and then",
    "start": "2403200",
    "end": "2409240"
  },
  {
    "text": "you ask SSM hey associate this with these running instances you can check the status at any time with the command",
    "start": "2409240",
    "end": "2415359"
  },
  {
    "text": "L and optionally you could configure those instances using Windows Tas scheduler to reapply that document on a",
    "start": "2415359",
    "end": "2423200"
  },
  {
    "text": "scheduled basis okay by default uh the ec2 service on the instance will look every 15 minutes I believe for a new",
    "start": "2423200",
    "end": "2429880"
  },
  {
    "text": "document to apply you can force it to R we using the the CLI so when are we going and take a look",
    "start": "2429880",
    "end": "2435839"
  },
  {
    "text": "at this configuration document all right let's bring that up here so here we are",
    "start": "2435839",
    "end": "2441960"
  },
  {
    "text": "it's a very simple very simple document you can see we got two what are called plugins AWS domain join and AWS",
    "start": "2441960",
    "end": "2448200"
  },
  {
    "text": "cloudwatch these just contain a bunch of properties that configure the the particular plug-in if we expand the domain join you can see here that we've",
    "start": "2448200",
    "end": "2454680"
  },
  {
    "text": "got some IP addresses for the DNS system in our directory as simple ad um and the directory ID if we expand the cloudwatch",
    "start": "2454680",
    "end": "2462280"
  },
  {
    "text": "configuration this is a little bit more involved because this is where we're configuring the event sources that we want the log sources we want to capture",
    "start": "2462280",
    "end": "2468560"
  },
  {
    "text": "and where they're going to go and the metric sources and where they're going to go now I am sply inept at editing",
    "start": "2468560",
    "end": "2475000"
  },
  {
    "text": "Json documents I always miss a comma somewhere or a colon something I can never get it does I can never get a",
    "start": "2475000",
    "end": "2482000"
  },
  {
    "text": "valid Jason document from day one so when I was setting this up I was thinking is there a better way of doing this as far as I'm concerned you may not",
    "start": "2482000",
    "end": "2487440"
  },
  {
    "text": "agree um obviously this file when you've got it in this document format it's easy to put in a Version Control right it's",
    "start": "2487440",
    "end": "2492880"
  },
  {
    "text": "one of the things about devops we want to Version Control our configurations but I started to think well this is just",
    "start": "2492880",
    "end": "2497920"
  },
  {
    "text": "a hash table right can I use a Parell hash table and have Parell do the heavy lifting of making me a valid Json",
    "start": "2497920",
    "end": "2504520"
  },
  {
    "text": "document that I can then use I don't lose the configuration version aspect of it because I just Version Control my",
    "start": "2504520",
    "end": "2510560"
  },
  {
    "text": "script fairly simple so that's what I did so let's go and take a look at the final function",
    "start": "2510560",
    "end": "2517720"
  },
  {
    "text": "okay it's another break",
    "start": "2517720",
    "end": "2520838"
  },
  {
    "text": "point all I can't type all that too many people to watch for me to",
    "start": "2528720",
    "end": "2535440"
  },
  {
    "text": "type that and this is the simplest of the scripts to launch it just takes two parameters first the resource Group name",
    "start": "2535440",
    "end": "2541760"
  },
  {
    "text": "okay you know what that is okay and then it wants the directory name remember that principle I said about don't make",
    "start": "2541760",
    "end": "2546839"
  },
  {
    "text": "people type in IDs for things give them names they're going to remember so we type in our directory name which happens",
    "start": "2546839",
    "end": "2552319"
  },
  {
    "text": "to be under desk Doc",
    "start": "2552319",
    "end": "2557680"
  },
  {
    "text": "corp.net and then the script is going to go away and find out all that directory info it needs to configure that plugin",
    "start": "2557680",
    "end": "2563040"
  },
  {
    "text": "okay enter all right oops so testing our",
    "start": "2563040",
    "end": "2568400"
  },
  {
    "text": "origion again and now let's go do our SSM unsurprising going to want to roll policy so it can do the work on your",
    "start": "2568400",
    "end": "2574680"
  },
  {
    "text": "behalf okay that's all this is doing so we're basically we already have an IM roll on our machine we're adding yet",
    "start": "2574680",
    "end": "2581359"
  },
  {
    "text": "another policy on there is what we're doing yeah and this is giving it all the permissions that s I'm showing you this",
    "start": "2581359",
    "end": "2586880"
  },
  {
    "text": "just in case you've set a more restrictive role policy on your launch in our case that's not true since we said it as power user yeah but so we",
    "start": "2586880",
    "end": "2594119"
  },
  {
    "text": "just write that policy to our existing IM roll okay so now we're going to build",
    "start": "2594119",
    "end": "2599559"
  },
  {
    "text": "that runtime config that we just saw in Jason using hash tables okay so what we do is again we're going to go and get",
    "start": "2599559",
    "end": "2606240"
  },
  {
    "text": "that directory using get DS directory the one of our ads commandlets we going to break apart the directory name into",
    "start": "2606240",
    "end": "2612800"
  },
  {
    "text": "organizational units you probably have a slightly different OU thing but this is what we need for today and then we just",
    "start": "2612800",
    "end": "2617960"
  },
  {
    "text": "going to set up a hashtable the directory ID that we discovered the domain name Etc o unit and the DNS IP addresses nobody need to remember any of",
    "start": "2617960",
    "end": "2624200"
  },
  {
    "text": "that right it gives us our domain join plugin okay we step in this so this is what",
    "start": "2624200",
    "end": "2630920"
  },
  {
    "text": "you're doing when you're creating these plugins you're just using that to create that hash table yeah okay",
    "start": "2630920",
    "end": "2637839"
  },
  {
    "text": "and I'm going to do the same thing for the system event log the application event log event trace for Windows log",
    "start": "2638119",
    "end": "2643160"
  },
  {
    "text": "the logs will take a similar format okay and then the perf",
    "start": "2643160",
    "end": "2648520"
  },
  {
    "text": "metrics in this case we're going to capture just one metric for the memory okay and then we you need the region",
    "start": "2648520",
    "end": "2653559"
  },
  {
    "text": "here for Steve so some of the plugins need the region information okay so that's all that's capturing is what region am I running in inject that into",
    "start": "2653559",
    "end": "2660280"
  },
  {
    "text": "the uh hash table okay so what we'll be building up now is just collections of hash tables we're going to assemble",
    "start": "2660280",
    "end": "2665599"
  },
  {
    "text": "those into another hash table and so on and so on once we got the metrics the plugins",
    "start": "2665599",
    "end": "2671760"
  },
  {
    "text": "done we need to set the flows for cloudwatch right cloudwatch needs to know where do you want this data to go I know where it's coming from but where's",
    "start": "2671760",
    "end": "2676880"
  },
  {
    "text": "it going to go and he does that with flows so you can set up a source to destination a source to multiple destinations or multiple sources to a",
    "start": "2676880",
    "end": "2683680"
  },
  {
    "text": "single destination so we want to get send our logs our three hashtable logs to cloudwatch logs and obviously the",
    "start": "2683680",
    "end": "2689800"
  },
  {
    "text": "memory per per metric to cloudwatch itself and then we just assemble that runtime config that we saw in the file",
    "start": "2689800",
    "end": "2696400"
  },
  {
    "text": "so that's where you're combining all those hash tables together combining hash tables into another hash table Yeah okay pass that back and now we can call",
    "start": "2696400",
    "end": "2703160"
  },
  {
    "text": "our actual command that's going to do the work of of S with the instances so it looks like this if I",
    "start": "2703160",
    "end": "2709319"
  },
  {
    "text": "didn't want to use this hash table approach and I just wrote my Json document I could just call this command L right yes",
    "start": "2709319",
    "end": "2716760"
  },
  {
    "text": "yeah okay so we didn't have a file we're going to convert that hash table so there's our Master hash table now the",
    "start": "2716760",
    "end": "2722520"
  },
  {
    "text": "overall config we're going to pass that through convert to Json okay now we have Jason document I no commas were harmed",
    "start": "2722520",
    "end": "2729680"
  },
  {
    "text": "in the making of that script right so now we're going to register that document with SSM again we're going to wait the SSM to",
    "start": "2729680",
    "end": "2736720"
  },
  {
    "text": "say yep good we can go again it takes less than a second now we're going to go find our",
    "start": "2736720",
    "end": "2742640"
  },
  {
    "text": "instances remember we're going to use that Resource Group name now that we tagged the instance of earlier please go find me that",
    "start": "2742640",
    "end": "2749240"
  },
  {
    "text": "instance okay I'll tag we've done that and then we're just pipe the instances in for each one we're going to associate",
    "start": "2749240",
    "end": "2754880"
  },
  {
    "text": "uh the document we could do that as a batch operation as well but decid to show it that way all right and that's it now sometime within the next 15 minutes",
    "start": "2754880",
    "end": "2761000"
  },
  {
    "text": "and there are 30 minutes left those that instance will reach out get that document and start to apply do the",
    "start": "2761000",
    "end": "2766240"
  },
  {
    "text": "domain join and do the cloudwatch setup right so once that's done we be on the join I can go then also to our",
    "start": "2766240",
    "end": "2771280"
  },
  {
    "text": "cloudwatch console and actually see some of the metrics there now if you wanted to take effect immediately what you",
    "start": "2771280",
    "end": "2777000"
  },
  {
    "text": "would do is now you power shell remote in to that instance we remember we configured power shell remoting uh and",
    "start": "2777000",
    "end": "2782040"
  },
  {
    "text": "you run the ec2 config - CLI command with the- a switch and that would cause it to go and reach out immediately and",
    "start": "2782040",
    "end": "2787079"
  },
  {
    "text": "try and grab a document and apply it if you need to do that right that's it all",
    "start": "2787079",
    "end": "2793839"
  },
  {
    "text": "right so here I learned SSM how we can actually use that to bootst our system",
    "start": "2795800",
    "end": "2801160"
  },
  {
    "text": "how to actually get it to join our domain didn't actually have to log in and do anything for that just all done with automation um Steve showed us his",
    "start": "2801160",
    "end": "2808680"
  },
  {
    "text": "fancy trick of avoiding Json and using hash tables there and we also are able",
    "start": "2808680",
    "end": "2813760"
  },
  {
    "text": "to set up cloudwatch um and cloudwatch log so we can be able to monitor this um from without being on the machine see",
    "start": "2813760",
    "end": "2820920"
  },
  {
    "text": "it's that's it we're done we've gone from a server on a VM into the cloud in",
    "start": "2820920",
    "end": "2826040"
  },
  {
    "start": "2822000",
    "end": "2822000"
  },
  {
    "text": "a private Network now it's post configuring post launch configuring and joining domains Etc and setting up logging so Norm where do you think you",
    "start": "2826040",
    "end": "2832559"
  },
  {
    "text": "might go from here well now that I actually have it in the cloud I can start decommissioning the box that's",
    "start": "2832559",
    "end": "2838480"
  },
  {
    "text": "under the desk and I would really like to know what's actually on that machine so one of the things now I have the benefit is I can actually go spin up",
    "start": "2838480",
    "end": "2844520"
  },
  {
    "text": "test versions of this and play own that and actually understand that while everyone else is using the first one so",
    "start": "2844520",
    "end": "2849839"
  },
  {
    "text": "this kind of gives me that easy way to test things out and without breaking everyone currently using things I'd also",
    "start": "2849839",
    "end": "2855559"
  },
  {
    "text": "actually like to start taking advantage of the multip availability zones and make sure that we have this system",
    "start": "2855559",
    "end": "2860599"
  },
  {
    "text": "always up and running on multiple zones so what we've learned then in",
    "start": "2860599",
    "end": "2866200"
  },
  {
    "text": "recap how to use the tools for Windows Powershell to you know automate how to get the servers virtualize and imported",
    "start": "2866200",
    "end": "2871760"
  },
  {
    "text": "into the cloud constructing the virtual private Network and you might want to use that VPC pairing approach to do testing for example if you're hacking",
    "start": "2871760",
    "end": "2878480"
  },
  {
    "text": "around with network akles Etc you might want to test them before you apply it to your corporate net VPC paing is a good",
    "start": "2878480",
    "end": "2883680"
  },
  {
    "text": "way of doing that with simulated vpcs for your corporate net and how to configure those instances once they're running in a repeatable consistent and",
    "start": "2883680",
    "end": "2890240"
  },
  {
    "text": "scalable manner no button clicks right got some links for you before we",
    "start": "2890240",
    "end": "2896119"
  },
  {
    "text": "leave um the link to the uh where we put the samples so yesterday's net session on Cor CLR and Docker samples are in",
    "start": "2896119",
    "end": "2903079"
  },
  {
    "text": "there as well as the scripts that we just ran through today uh ad. net blog where Norma and",
    "start": "2903079",
    "end": "2908680"
  },
  {
    "text": "the rest of the team back in Seattle do blogs on net and Powershell development there are two blog posts on there of",
    "start": "2908680",
    "end": "2913800"
  },
  {
    "text": "interest one from this year one on the new import apis that we saw today and",
    "start": "2913800",
    "end": "2919640"
  },
  {
    "text": "what was the second one uh forgot what the second one of Interest was oh well you'll find it just look for me on there you'll find",
    "start": "2919640",
    "end": "2926240"
  },
  {
    "text": "it it's all poers shop um and a link there to the managing the windows instance configuration stuff from SSM",
    "start": "2926240",
    "end": "2931440"
  },
  {
    "text": "it's quite an interesting read with that I'd like to thank you for coming along hope you enjoyed it you found it useful",
    "start": "2931440",
    "end": "2937400"
  },
  {
    "text": "and please remember to complete your evaluations",
    "start": "2937400",
    "end": "2941440"
  }
]