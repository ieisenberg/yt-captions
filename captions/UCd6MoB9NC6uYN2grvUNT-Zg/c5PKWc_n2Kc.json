[
  {
    "start": "0",
    "end": "15000"
  },
  {
    "text": "- [Instructor] Hello everyone.",
    "start": "1860",
    "end": "2760"
  },
  {
    "text": "Today I'm going to demonstrate",
    "start": "2760",
    "end": "4380"
  },
  {
    "text": "how to set up Amazon S3\nlifecycle management policies",
    "start": "4380",
    "end": "8040"
  },
  {
    "text": "in order to make your\nbuckets more efficient",
    "start": "8040",
    "end": "10500"
  },
  {
    "text": "by cost optimization strategies.",
    "start": "10500",
    "end": "12753"
  },
  {
    "start": "15000",
    "end": "88000"
  },
  {
    "text": "So as you can see here,\nthis is a broad variety",
    "start": "15840",
    "end": "18360"
  },
  {
    "text": "of storage classes we\noffer within Amazon S3.",
    "start": "18360",
    "end": "21840"
  },
  {
    "text": "Today I will not be\ntalking too much in detail",
    "start": "21840",
    "end": "24480"
  },
  {
    "text": "about each of the storage classes,",
    "start": "24480",
    "end": "26400"
  },
  {
    "text": "but keep in mind each of the\nstorage classes is catered",
    "start": "26400",
    "end": "30029"
  },
  {
    "text": "to serve a use case",
    "start": "30030",
    "end": "31410"
  },
  {
    "text": "depending on the access\npattern of the workload.",
    "start": "31410",
    "end": "33873"
  },
  {
    "text": "Just to provide some context here,",
    "start": "35220",
    "end": "37680"
  },
  {
    "text": "the third storage class from the left,",
    "start": "37680",
    "end": "39840"
  },
  {
    "text": "our general rule of thumb\nyear is Amazon S3 Standard",
    "start": "39840",
    "end": "42810"
  },
  {
    "text": "is a great storage class",
    "start": "42810",
    "end": "43890"
  },
  {
    "text": "for objects accessed\nmore than once per month.",
    "start": "43890",
    "end": "46413"
  },
  {
    "text": "Then we have Amazon S3\nStandard Infrequently Accessed,",
    "start": "47430",
    "end": "50550"
  },
  {
    "text": "which is good for objects\naccessed around once per month.",
    "start": "50550",
    "end": "54000"
  },
  {
    "text": "Then we have Amazon S3\nGlacier Instant Retrieval,",
    "start": "54000",
    "end": "56820"
  },
  {
    "text": "which is good for objects\naccessed once per quarter.",
    "start": "56820",
    "end": "59613"
  },
  {
    "text": "Then we have Amazon S3\nGlacier Flexible Retrieval,",
    "start": "60960",
    "end": "64080"
  },
  {
    "text": "which is good for objects\naccessed once every six months.",
    "start": "64080",
    "end": "66963"
  },
  {
    "text": "And then in the end we have\nAmazon S3 Glacier Deep Archive,",
    "start": "67980",
    "end": "71040"
  },
  {
    "text": "which is good for objects\naccessed once every year.",
    "start": "71040",
    "end": "73863"
  },
  {
    "text": "Now, if you have a workload",
    "start": "75210",
    "end": "77190"
  },
  {
    "text": "where the object access patterns\nchange in a predicted way,",
    "start": "77190",
    "end": "80340"
  },
  {
    "text": "you can use lifecycle management policies",
    "start": "80340",
    "end": "82469"
  },
  {
    "text": "to make it more efficient.",
    "start": "82470",
    "end": "83793"
  },
  {
    "text": "Let's take a look at an example.",
    "start": "84660",
    "end": "86313"
  },
  {
    "start": "88000",
    "end": "160000"
  },
  {
    "text": "In this example, we have a workload",
    "start": "89460",
    "end": "91740"
  },
  {
    "text": "where the objects being accessed\nare several times a month",
    "start": "91740",
    "end": "95850"
  },
  {
    "text": "until the first three months,",
    "start": "95850",
    "end": "97380"
  },
  {
    "text": "and then it is not as much around,",
    "start": "97380",
    "end": "99689"
  },
  {
    "text": "and then after 90 days we only see access",
    "start": "99690",
    "end": "102030"
  },
  {
    "text": "around once per quarter,\nand then after 365 days",
    "start": "102030",
    "end": "105210"
  },
  {
    "text": "we only need it for retention purposes.",
    "start": "105210",
    "end": "107610"
  },
  {
    "text": "With this, rule number one,\nwe'll move all of the objects",
    "start": "107610",
    "end": "111060"
  },
  {
    "text": "older than 90 days to\nS3 Instant Retrieval.",
    "start": "111060",
    "end": "114302"
  },
  {
    "text": "Keep in mind here that S3\nGlacier Instant Retrieval",
    "start": "115380",
    "end": "117930"
  },
  {
    "text": "is a synchronous storage class,",
    "start": "117930",
    "end": "119580"
  },
  {
    "text": "and in this case we will have our objects,",
    "start": "119580",
    "end": "121830"
  },
  {
    "text": "once they're created and uploaded,",
    "start": "121830",
    "end": "123390"
  },
  {
    "text": "we will have the objects\nin Amazon S3 Standard",
    "start": "123390",
    "end": "125280"
  },
  {
    "text": "for the first 90 days",
    "start": "125280",
    "end": "126900"
  },
  {
    "text": "and then we will have it tier down",
    "start": "126900",
    "end": "129119"
  },
  {
    "text": "to Amazon S3 Glacier Instant Retrieval",
    "start": "129120",
    "end": "131129"
  },
  {
    "text": "for cost optimization.",
    "start": "131130",
    "end": "133158"
  },
  {
    "text": "Then as you saw previously\nin the example, we wanted",
    "start": "133158",
    "end": "136410"
  },
  {
    "text": "to have a storage class where\nwe need to have our objects",
    "start": "136410",
    "end": "140460"
  },
  {
    "text": "just for retention purposes.",
    "start": "140460",
    "end": "142050"
  },
  {
    "text": "With this, we have a\nrule number two set up",
    "start": "142050",
    "end": "144660"
  },
  {
    "text": "where rule number two will move\nobjects older than 365 days",
    "start": "144660",
    "end": "148080"
  },
  {
    "text": "to S3 Glacier Deep Archive.",
    "start": "148080",
    "end": "150030"
  },
  {
    "text": "This is how you can cost\noptimize your buckets,",
    "start": "150030",
    "end": "152880"
  },
  {
    "text": "by moving objects from one\nstorage class to another",
    "start": "152880",
    "end": "155370"
  },
  {
    "text": "once you know the access patterns",
    "start": "155370",
    "end": "156900"
  },
  {
    "text": "of the objects in your bucket.",
    "start": "156900",
    "end": "158403"
  },
  {
    "text": "So this is how you can\nuse Amazon S3 lifecycle",
    "start": "162090",
    "end": "165750"
  },
  {
    "text": "to optimize your storage spend.",
    "start": "165750",
    "end": "167550"
  },
  {
    "text": "You can do two things, you\ncan either transition objects,",
    "start": "167550",
    "end": "170310"
  },
  {
    "text": "which means you can transition objects",
    "start": "170310",
    "end": "171810"
  },
  {
    "text": "from one storage class to another,",
    "start": "171810",
    "end": "173700"
  },
  {
    "text": "or you can either expire objects,",
    "start": "173700",
    "end": "175470"
  },
  {
    "text": "where you can use lifecycle\nmanagement policies",
    "start": "175470",
    "end": "177930"
  },
  {
    "text": "to mark those objects for expiration",
    "start": "177930",
    "end": "179819"
  },
  {
    "text": "and then Amazon S3 deletes\nexpired objects on your behalf.",
    "start": "179820",
    "end": "183393"
  },
  {
    "text": "The chart on the right shows\nstorage class transitions",
    "start": "184980",
    "end": "187709"
  },
  {
    "text": "that are allowed.",
    "start": "187710",
    "end": "188700"
  },
  {
    "text": "And as you can see, it\nfollows a waterfall method,",
    "start": "188700",
    "end": "192000"
  },
  {
    "text": "which means you can only go down the chart",
    "start": "192000",
    "end": "194250"
  },
  {
    "text": "but you cannot do the other way around.",
    "start": "194250",
    "end": "196560"
  },
  {
    "text": "For example, you can transition\nfrom Amazon S3 Standard",
    "start": "196560",
    "end": "199800"
  },
  {
    "text": "to any other storage class,",
    "start": "199800",
    "end": "202050"
  },
  {
    "text": "but you cannot do that",
    "start": "202050",
    "end": "203100"
  },
  {
    "text": "from Amazon S3 Standard\nInfrequently Accessed,",
    "start": "203100",
    "end": "205590"
  },
  {
    "text": "You cannot come back",
    "start": "205590",
    "end": "206430"
  },
  {
    "text": "from Amazon Standard Infrequently Accessed",
    "start": "206430",
    "end": "208530"
  },
  {
    "text": "to Amazon S3 Standard.",
    "start": "208530",
    "end": "209883"
  },
  {
    "text": "You can use lifecycle to expire objects",
    "start": "211641",
    "end": "213990"
  },
  {
    "text": "after some defined time.",
    "start": "213990",
    "end": "215253"
  },
  {
    "text": "With that, let's go on our AWS console.",
    "start": "216900",
    "end": "219543"
  },
  {
    "start": "220000",
    "end": "633000"
  },
  {
    "text": "So here, as you can see, we\nare in my AWS environment.",
    "start": "220770",
    "end": "224070"
  },
  {
    "text": "Let's go and select S3.",
    "start": "224070",
    "end": "225813"
  },
  {
    "text": "To use lifecycle management\npolicies on a certain bucket,",
    "start": "228390",
    "end": "231180"
  },
  {
    "text": "we have to go and select that\nbucket first and then go on",
    "start": "231180",
    "end": "236069"
  },
  {
    "text": "and select management.",
    "start": "236070",
    "end": "237543"
  },
  {
    "text": "And then you'll see lifecycle rules.",
    "start": "239640",
    "end": "241740"
  },
  {
    "text": "We'll go and say create lifecycle rule.",
    "start": "241740",
    "end": "243690"
  },
  {
    "text": "As you see here, the\nfirst thing it prompts us",
    "start": "245640",
    "end": "247680"
  },
  {
    "text": "is to name our lifecycle rule.",
    "start": "247680",
    "end": "249269"
  },
  {
    "text": "So let's say LC1.",
    "start": "249270",
    "end": "251013"
  },
  {
    "text": "You can do two things",
    "start": "253320",
    "end": "254190"
  },
  {
    "text": "with this lifecycle management policies.",
    "start": "254190",
    "end": "255450"
  },
  {
    "text": "You can make it act on all\nof the objects in your bucket",
    "start": "255450",
    "end": "258600"
  },
  {
    "text": "or you can limit the scope of the rule",
    "start": "258600",
    "end": "260400"
  },
  {
    "text": "using one or more filters.",
    "start": "260400",
    "end": "262053"
  },
  {
    "text": "Let's say you only wanted this\nlifecycle management policy",
    "start": "263130",
    "end": "265740"
  },
  {
    "text": "to act on a certain prefix in your bucket.",
    "start": "265740",
    "end": "268020"
  },
  {
    "text": "You can input that prefix here.",
    "start": "268020",
    "end": "269569"
  },
  {
    "text": "If you have a bucket\nwith multiple prefixes",
    "start": "271920",
    "end": "274620"
  },
  {
    "text": "and you only want that\nlifecycle management policy",
    "start": "274620",
    "end": "277290"
  },
  {
    "text": "to act on objects with certain tags,",
    "start": "277290",
    "end": "279420"
  },
  {
    "text": "then you can use the key and\nthe value pair given here,",
    "start": "279420",
    "end": "283380"
  },
  {
    "text": "and then this lifecycle\nmanagement policy will only act on",
    "start": "283380",
    "end": "286080"
  },
  {
    "text": "the objects with the certain tags.",
    "start": "286080",
    "end": "287974"
  },
  {
    "text": "You can also filter it\ndown by object size.",
    "start": "287974",
    "end": "290940"
  },
  {
    "text": "Let's say you want this\nlifecycle management policies",
    "start": "290940",
    "end": "293670"
  },
  {
    "text": "to act on objects more\nthan one MB in size.",
    "start": "293670",
    "end": "297300"
  },
  {
    "text": "Then you can specify the\nminimum object size here.",
    "start": "297300",
    "end": "299819"
  },
  {
    "text": "In this case we specify\none MB, is one megabyte.",
    "start": "299820",
    "end": "304320"
  },
  {
    "text": "So in this case, this rule\nwill only act on objects",
    "start": "304320",
    "end": "306930"
  },
  {
    "text": "which are more than one MB in size.",
    "start": "306930",
    "end": "309780"
  },
  {
    "text": "For this example, we'll just apply it",
    "start": "309780",
    "end": "311550"
  },
  {
    "text": "to all objects in the bucket.",
    "start": "311550",
    "end": "313315"
  },
  {
    "text": "And as you see here, there's\nfive things you can do",
    "start": "313316",
    "end": "316200"
  },
  {
    "text": "with lifecycle rule actions.",
    "start": "316200",
    "end": "318210"
  },
  {
    "text": "The first one is to move\ncurrent versions of the objects",
    "start": "318210",
    "end": "320880"
  },
  {
    "text": "between storage classes.",
    "start": "320880",
    "end": "322290"
  },
  {
    "text": "So as you saw previously in\nthe example what I mentioned,",
    "start": "322290",
    "end": "325860"
  },
  {
    "text": "you can use this to move\nthe current versions",
    "start": "325860",
    "end": "327870"
  },
  {
    "text": "of the objects between storage classes.",
    "start": "327870",
    "end": "329580"
  },
  {
    "text": "So in this case, let's say we will move it",
    "start": "329580",
    "end": "331710"
  },
  {
    "text": "to S3 Glacier Instant Retrieval",
    "start": "331710",
    "end": "334050"
  },
  {
    "text": "after 90 days of object creation.",
    "start": "334050",
    "end": "336599"
  },
  {
    "text": "So day one to day 90, when\nthe object is created,",
    "start": "336600",
    "end": "339870"
  },
  {
    "text": "after 90 days, it's gonna move it",
    "start": "339870",
    "end": "341600"
  },
  {
    "text": "to S3 Glacier Instant Retrieval,",
    "start": "341600",
    "end": "343710"
  },
  {
    "text": "and then after 365 days,",
    "start": "343710",
    "end": "346020"
  },
  {
    "text": "we only need it for retention purposes,",
    "start": "346020",
    "end": "348360"
  },
  {
    "text": "then we'll use S3 Glacier\nDeep Archive and say 365 days.",
    "start": "348360",
    "end": "352560"
  },
  {
    "text": "And with this, it's gonna move the objects",
    "start": "352560",
    "end": "354300"
  },
  {
    "text": "to S3 Glacier Deep Archive from\nS3 Glacier Instant Retrieval",
    "start": "354300",
    "end": "357360"
  },
  {
    "text": "after 365 days.",
    "start": "357360",
    "end": "359193"
  },
  {
    "text": "Also, you need to keep in\nmind when you transition",
    "start": "360090",
    "end": "362040"
  },
  {
    "text": "small objects to S3\nGlacier Flexible Retrieval",
    "start": "362040",
    "end": "364290"
  },
  {
    "text": "or S3 Glacier Deep\nArchive, you are charged",
    "start": "364290",
    "end": "367860"
  },
  {
    "text": "a fixed amount of storage\nto accommodate metadata",
    "start": "367860",
    "end": "370590"
  },
  {
    "text": "for managing the object,\nwhich increases storage costs.",
    "start": "370590",
    "end": "372930"
  },
  {
    "text": "So let's say I acknowledge.",
    "start": "372930",
    "end": "374403"
  },
  {
    "text": "And as you see here,",
    "start": "375330",
    "end": "376979"
  },
  {
    "text": "it stays from zero to 90 in S3 Standard.",
    "start": "376980",
    "end": "380040"
  },
  {
    "text": "Then after 90 it moves it to\nS3 Glacier Instant Retrieval.",
    "start": "380040",
    "end": "383220"
  },
  {
    "text": "And then after 365 days\nit moves the object",
    "start": "383220",
    "end": "385830"
  },
  {
    "text": "to S3 Glacier Deep Archive.",
    "start": "385830",
    "end": "387332"
  },
  {
    "text": "Now the other way to move",
    "start": "388680",
    "end": "390720"
  },
  {
    "text": "or delete current version of the objects",
    "start": "390720",
    "end": "392370"
  },
  {
    "text": "is by selecting expired\ncurrent version of the objects.",
    "start": "392370",
    "end": "395070"
  },
  {
    "text": "This is the same as what we saw before.",
    "start": "395070",
    "end": "396690"
  },
  {
    "text": "The only difference is\nwith the first rule,",
    "start": "396690",
    "end": "399090"
  },
  {
    "text": "we were transitioning objects",
    "start": "399090",
    "end": "400380"
  },
  {
    "text": "from a storage class to another.",
    "start": "400380",
    "end": "402180"
  },
  {
    "text": "With this rule set up,\nwe are expiring objects.",
    "start": "402180",
    "end": "404613"
  },
  {
    "text": "So let's say we want to expire objects",
    "start": "406569",
    "end": "408510"
  },
  {
    "text": "after 365 days of creation.",
    "start": "408510",
    "end": "410550"
  },
  {
    "text": "With this rule set up,",
    "start": "410550",
    "end": "411840"
  },
  {
    "text": "the object will live in Amazon\nS3 Standard for 365 days,",
    "start": "411840",
    "end": "415889"
  },
  {
    "text": "and once 365 days\npasses, it's gonna expire",
    "start": "415890",
    "end": "418950"
  },
  {
    "text": "and mark that object for deletion.",
    "start": "418950",
    "end": "420650"
  },
  {
    "text": "Now the next thing is\nmoving non-current versions",
    "start": "422610",
    "end": "425280"
  },
  {
    "text": "of the objects between storage classes.",
    "start": "425280",
    "end": "428040"
  },
  {
    "text": "So when you select that, you\ncan move a non-current version",
    "start": "428040",
    "end": "432150"
  },
  {
    "text": "between the storage classes,\njust as you saw previously,",
    "start": "432150",
    "end": "434220"
  },
  {
    "text": "where we are moving current\nversion of the storage classes.",
    "start": "434220",
    "end": "436770"
  },
  {
    "text": "What is the difference is\nwith non-current versions,",
    "start": "436770",
    "end": "438990"
  },
  {
    "text": "if you have a version enabled bucket,",
    "start": "438990",
    "end": "440880"
  },
  {
    "text": "you can optimize it more further",
    "start": "440880",
    "end": "442980"
  },
  {
    "text": "by keeping the current version",
    "start": "442980",
    "end": "445080"
  },
  {
    "text": "in the most optimized storage class",
    "start": "445080",
    "end": "448379"
  },
  {
    "text": "and then moving all the\nnon-current versions",
    "start": "448380",
    "end": "450030"
  },
  {
    "text": "to a cheaper storage class.",
    "start": "450030",
    "end": "451530"
  },
  {
    "text": "So in this case, let's say we wanna move",
    "start": "451530",
    "end": "453930"
  },
  {
    "text": "all of the non-current versions",
    "start": "453930",
    "end": "455280"
  },
  {
    "text": "which have been past 30 days",
    "start": "455280",
    "end": "457830"
  },
  {
    "text": "to S3 Standard Infrequently Accessed,",
    "start": "457830",
    "end": "460379"
  },
  {
    "text": "and then we move it to S3\nGlacier Instant Retrieval",
    "start": "460380",
    "end": "463200"
  },
  {
    "text": "after 180 days.",
    "start": "463200",
    "end": "464991"
  },
  {
    "text": "And then this is one of the\nthings you can also mention.",
    "start": "464991",
    "end": "467669"
  },
  {
    "text": "So let's say we want to\nalso have one of the objects",
    "start": "467670",
    "end": "471820"
  },
  {
    "text": "from non-current versions",
    "start": "472860",
    "end": "473909"
  },
  {
    "text": "to always sit with our\ncurrent version, right?",
    "start": "473910",
    "end": "477000"
  },
  {
    "text": "So in this case, as you see here,",
    "start": "477000",
    "end": "478980"
  },
  {
    "text": "nothing happens to the current version.",
    "start": "478980",
    "end": "481050"
  },
  {
    "text": "Day 30, one newest non-current\nversions is retained,",
    "start": "481050",
    "end": "484199"
  },
  {
    "text": "which means our current version",
    "start": "484200",
    "end": "486330"
  },
  {
    "text": "and one of the non-current versions",
    "start": "486330",
    "end": "488099"
  },
  {
    "text": "will stay in Amazon S3 Standard.",
    "start": "488100",
    "end": "490260"
  },
  {
    "text": "And then all other non-current versions",
    "start": "490260",
    "end": "492150"
  },
  {
    "text": "move to S3 Standard Infrequently Accessed,",
    "start": "492150",
    "end": "494370"
  },
  {
    "text": "which is shown in rule number one.",
    "start": "494370",
    "end": "496143"
  },
  {
    "text": "After day 180,",
    "start": "497040",
    "end": "498720"
  },
  {
    "text": "again, one of the newest\nnon-current versions is retained.",
    "start": "498720",
    "end": "502440"
  },
  {
    "text": "And then all of the other\nnon-current versions",
    "start": "502440",
    "end": "504600"
  },
  {
    "text": "move to S3 Glacier Instant\nRetrieval after 180 days.",
    "start": "504600",
    "end": "507723"
  },
  {
    "text": "So now this is how you can\nmove non-current versions",
    "start": "509670",
    "end": "512130"
  },
  {
    "text": "between storage classes.",
    "start": "512130",
    "end": "513719"
  },
  {
    "text": "The next rule I'm gonna talk\nabout is permanently delete",
    "start": "513720",
    "end": "516149"
  },
  {
    "text": "non-current versions of the objects.",
    "start": "516150",
    "end": "518370"
  },
  {
    "text": "This is very similar to\nwhat we spoke before.",
    "start": "518370",
    "end": "520650"
  },
  {
    "text": "The only difference is\nrather than transitioning",
    "start": "520650",
    "end": "522419"
  },
  {
    "text": "between storage classes, we\nare marking it for deletion.",
    "start": "522420",
    "end": "525510"
  },
  {
    "text": "So here in this case,\nlet's say after 30 days",
    "start": "525510",
    "end": "528570"
  },
  {
    "text": "when the object becomes non-current,",
    "start": "528570",
    "end": "530400"
  },
  {
    "text": "and I only want to keep one copy,",
    "start": "530400",
    "end": "532410"
  },
  {
    "text": "with this it means nothing will change",
    "start": "532410",
    "end": "534029"
  },
  {
    "text": "to the current version.",
    "start": "534030",
    "end": "535290"
  },
  {
    "text": "But when a non-current version,",
    "start": "535290",
    "end": "537240"
  },
  {
    "text": "we will keep one newest\nnon-current version",
    "start": "537240",
    "end": "539130"
  },
  {
    "text": "with our current version,",
    "start": "539130",
    "end": "540210"
  },
  {
    "text": "and then all of the other\nnon-current versions",
    "start": "540210",
    "end": "542040"
  },
  {
    "text": "will be permanently deleted\nafter 30 days, right?",
    "start": "542040",
    "end": "544680"
  },
  {
    "text": "So this is how you can cost optimize,",
    "start": "544680",
    "end": "546660"
  },
  {
    "text": "by moving non-current versions",
    "start": "546660",
    "end": "548670"
  },
  {
    "text": "or deleting non-current\nversions of objects.",
    "start": "548670",
    "end": "551133"
  },
  {
    "text": "The last piece here is talking",
    "start": "552330",
    "end": "554310"
  },
  {
    "text": "about deleting expired\nobject delete markers",
    "start": "554310",
    "end": "556470"
  },
  {
    "text": "or incomplete multi-part uploads.",
    "start": "556470",
    "end": "558689"
  },
  {
    "text": "So as you know with a version bucket,",
    "start": "558690",
    "end": "561000"
  },
  {
    "text": "when you delete a certain object,",
    "start": "561000",
    "end": "563010"
  },
  {
    "text": "Amazon S3 places a delete\nmarker on top of it, which means",
    "start": "563010",
    "end": "568010"
  },
  {
    "text": "that the delete marker",
    "start": "568050",
    "end": "568950"
  },
  {
    "text": "becomes the current version of the object.",
    "start": "568950",
    "end": "570960"
  },
  {
    "text": "In this case, you also want to\nclean up these delete markers",
    "start": "570960",
    "end": "573600"
  },
  {
    "text": "and you can do that by\nusing this rule here.",
    "start": "573600",
    "end": "576600"
  },
  {
    "text": "And the last piece is using\nincomplete multi-part uploads.",
    "start": "576600",
    "end": "579540"
  },
  {
    "text": "So when you upload larger\nobjects to Amazon S3",
    "start": "579540",
    "end": "584199"
  },
  {
    "text": "via the multi-part API,\nsometimes when the upload",
    "start": "584200",
    "end": "588720"
  },
  {
    "text": "is not successfully\nuploaded, then in that case",
    "start": "588720",
    "end": "592560"
  },
  {
    "text": "all of those uploads which\nhave been there previously",
    "start": "592560",
    "end": "595230"
  },
  {
    "text": "are incomplete, right?",
    "start": "595230",
    "end": "596430"
  },
  {
    "text": "And they incur storage costs.",
    "start": "596430",
    "end": "598110"
  },
  {
    "text": "So in this case, you want",
    "start": "598110",
    "end": "599310"
  },
  {
    "text": "to delete incomplete multi-part uploads,",
    "start": "599310",
    "end": "601410"
  },
  {
    "text": "and in this case you can\nsay after seven days.",
    "start": "601410",
    "end": "603810"
  },
  {
    "text": "So if there's any incomplete\nmulti-part uploads",
    "start": "603810",
    "end": "605640"
  },
  {
    "text": "seven days after that object is created,",
    "start": "605640",
    "end": "607920"
  },
  {
    "text": "you can delete that,",
    "start": "607920",
    "end": "608753"
  },
  {
    "text": "which will help you\nincur less storage costs.",
    "start": "608753",
    "end": "612093"
  },
  {
    "text": "With that being said, this is an overview",
    "start": "613470",
    "end": "615779"
  },
  {
    "text": "of S3 lifecycle management\npolicies in our AWS console.",
    "start": "615780",
    "end": "619740"
  },
  {
    "text": "You can scan the QR code\nfrom your smartphones",
    "start": "619740",
    "end": "622740"
  },
  {
    "text": "or visit this website for more details.",
    "start": "622740",
    "end": "625649"
  },
  {
    "text": "Thank you for your time.",
    "start": "625650",
    "end": "626850"
  }
]