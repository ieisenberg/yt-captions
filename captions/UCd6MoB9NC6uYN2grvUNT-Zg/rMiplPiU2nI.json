[
  {
    "text": "everybody good afternoon how's everybody doing here welcome to the new ADA police",
    "start": "620",
    "end": "7410"
  },
  {
    "text": "IOT service I'm really glad to see all of you here and in this session we are",
    "start": "7410",
    "end": "14219"
  },
  {
    "text": "going to be telling you about hardware platforms IOT toys devices and industrial devices how to program them",
    "start": "14219",
    "end": "21510"
  },
  {
    "text": "how to develop on them using our SDKs on the devices and also some words on the protocols themselves my name is Marco",
    "start": "21510",
    "end": "29580"
  },
  {
    "text": "I'm a technology evangelist at ADA Peleus and I'm joining this session by John my colleague who works for the ADA",
    "start": "29580",
    "end": "35520"
  },
  {
    "text": "police IOT service the main takeaways the three things that you should",
    "start": "35520",
    "end": "41610"
  },
  {
    "text": "remember from this session are these with ADA police IOT it's easy for you to",
    "start": "41610",
    "end": "46980"
  },
  {
    "text": "securely connect any number of devices to aeropolis whether it's one device or a billion devices literally anyone can",
    "start": "46980",
    "end": "56340"
  },
  {
    "text": "connect the device we've made it really easy using the new service that you will see soon and also a partnership with the",
    "start": "56340",
    "end": "62699"
  },
  {
    "text": "hardware manufacturers the device is connected to cloud securely by default and getting started is super easy",
    "start": "62699",
    "end": "71070"
  },
  {
    "text": "we've made some starter kits if you will the hello world kids of IOT you see some",
    "start": "71070",
    "end": "76470"
  },
  {
    "text": "of them here we will explain them more later so together with our hardware partners like media tech we've made",
    "start": "76470",
    "end": "83400"
  },
  {
    "text": "these starter kits you can buy them online and each one of these devices comes with example applications that are",
    "start": "83400",
    "end": "91650"
  },
  {
    "text": "really easy hello world starters for you to connect traitor please use the different services and build a solution",
    "start": "91650",
    "end": "97860"
  },
  {
    "text": "together with the hardware and the cloud services as a holistic end-to-end solution we are going to be highlighting",
    "start": "97860",
    "end": "104700"
  },
  {
    "text": "some examples of those today now let's start with security security is",
    "start": "104700",
    "end": "110340"
  },
  {
    "text": "obviously the number one priority so what do you need 40 security you need",
    "start": "110340",
    "end": "116399"
  },
  {
    "text": "strong authentication you need to know is this my device is this someone else's",
    "start": "116399",
    "end": "122070"
  },
  {
    "text": "device trying to look like my device once you've authenticated the devices you need to give fine-grained",
    "start": "122070",
    "end": "129450"
  },
  {
    "text": "least privileged principled authorization and access control remember least privilege",
    "start": "129450",
    "end": "136780"
  },
  {
    "text": "principle is always the way you should be doing it white listings don't try to blacklist bad things only allow those things that",
    "start": "136780",
    "end": "144220"
  },
  {
    "text": "you really need for your solution to work and everything else is denied and of course you need to secure the",
    "start": "144220",
    "end": "149620"
  },
  {
    "text": "communication end-to-end just in case now we have another session on security which really deep dives on the IAM rules",
    "start": "149620",
    "end": "157060"
  },
  {
    "text": "for fine-grained authorization so please find that on YouTube later and look at that in this session we are going to",
    "start": "157060",
    "end": "163690"
  },
  {
    "text": "talk about strong authentication and communicates now let's start with the authentication part we use standard",
    "start": "163690",
    "end": "171670"
  },
  {
    "text": "internet security controls TLS 1.2 and",
    "start": "171670",
    "end": "176940"
  },
  {
    "text": "basically all the devices you have will have their own certificate that you",
    "start": "176940",
    "end": "182020"
  },
  {
    "text": "create a new manage and the devices will have their own private keys so x.509",
    "start": "182020",
    "end": "188740"
  },
  {
    "text": "certificates and TLS 1.2 and TLS mutual authentication back with the service and",
    "start": "188740",
    "end": "196170"
  },
  {
    "text": "then you need to manage your keys you need to protect your keys so yes you will have the keys on the devices and",
    "start": "196170",
    "end": "201790"
  },
  {
    "text": "there are best best practices how to do this on the device side you can use for",
    "start": "201790",
    "end": "207489"
  },
  {
    "text": "example software algorithms like key wrappers you can use trusted platform",
    "start": "207489",
    "end": "213280"
  },
  {
    "text": "modules which are cryptographic processors to store and manage your keys on the device itself but the main point",
    "start": "213280",
    "end": "220090"
  },
  {
    "text": "here is that you do not have to have any credentials on your device just a certificate that you create and the",
    "start": "220090",
    "end": "226330"
  },
  {
    "text": "private key and like you heard in the keynote this morning you can revoke the",
    "start": "226330",
    "end": "232209"
  },
  {
    "text": "certificate remotely centrally with one single command so you don't have to go and find the physical device to block it",
    "start": "232209",
    "end": "239680"
  },
  {
    "text": "from accessing your services you just revoke the certificate and that's it now",
    "start": "239680",
    "end": "245110"
  },
  {
    "text": "TLS 1.2 is the way we handle end-to-end communication security so with that you",
    "start": "245110",
    "end": "251560"
  },
  {
    "text": "don't have to worry about man in the middle or eavesdropping it's in to insecurity between the device and the service and again we use standard",
    "start": "251560",
    "end": "258190"
  },
  {
    "text": "internet security protocols and mechanisms here and we have enabled only the strongest cipher Suites on TLS 1.2",
    "start": "258190",
    "end": "265360"
  },
  {
    "text": "and those are listed in the documentation of the service now that sounds complicated",
    "start": "265360",
    "end": "271450"
  },
  {
    "text": "right now you're thinking that's not easy security well we've made it easy so",
    "start": "271450",
    "end": "276850"
  },
  {
    "text": "we have the SD case the device SD case that make it easy for you to implement high levels of security and we also",
    "start": "276850",
    "end": "285220"
  },
  {
    "text": "package the TLS library example library with the embedded CSD k so if your",
    "start": "285220",
    "end": "290410"
  },
  {
    "text": "device manufacturer you have an implementation there that you can use",
    "start": "290410",
    "end": "295680"
  },
  {
    "text": "let's switch a little bit talking about protocols now with IOT MQTT is really",
    "start": "295710",
    "end": "304270"
  },
  {
    "text": "one of the if not the de facto standard for protocols that's one way of",
    "start": "304270",
    "end": "309550"
  },
  {
    "text": "communicating with IOT devices the second way that you can programmatically control your devices is a service",
    "start": "309550",
    "end": "317310"
  },
  {
    "text": "functionality available in a deploys iot called device channels that's a really",
    "start": "317310",
    "end": "322360"
  },
  {
    "text": "cool way for you as a developer to manage what your device is doing and more about both of these let's start",
    "start": "322360",
    "end": "329140"
  },
  {
    "text": "with MQTT so what is MQTT if you're not familiar with that it's a standard protocol defined policies and it's",
    "start": "329140",
    "end": "336790"
  },
  {
    "text": "really intended for IOT devices it's super lightweight for devices that are",
    "start": "336790",
    "end": "342430"
  },
  {
    "text": "constrained on the processing capabilities it's super lightweight which is good for battery power and it's",
    "start": "342430",
    "end": "349479"
  },
  {
    "text": "very efficient on the network side let's",
    "start": "349479",
    "end": "355090"
  },
  {
    "text": "take a look at some use cases so how would you use MQTT with a deploys iot on the left there you see a field fleet of",
    "start": "355090",
    "end": "361660"
  },
  {
    "text": "cars connected cars maybe BMW for example and these cars could be posting",
    "start": "361660",
    "end": "366850"
  },
  {
    "text": "their telemetry their sensor readings their location whatever and what you see",
    "start": "366850",
    "end": "372070"
  },
  {
    "text": "on the bottom there is an MQTT topic so it will be posting messages from the",
    "start": "372070",
    "end": "377860"
  },
  {
    "text": "clients the devices to the topics so you can have for example my devices or my",
    "start": "377860",
    "end": "382870"
  },
  {
    "text": "cars as a fleet and then each of the cars could have a subtopic there and on",
    "start": "382870",
    "end": "389320"
  },
  {
    "text": "the other side on the Central Services side you can then for example start",
    "start": "389320",
    "end": "394330"
  },
  {
    "text": "receiving all of the messages from all the cars with the hash like a wild card why would you do that",
    "start": "394330",
    "end": "400479"
  },
  {
    "text": "so that you can aggregate you can see the values of all the cars you can have",
    "start": "400479",
    "end": "405550"
  },
  {
    "text": "common - sports of your entire fleet and if you want to deep dive on a particular",
    "start": "405550",
    "end": "410830"
  },
  {
    "text": "device or car in this case you just subscribe to that cars particular topic like car number four then you get only",
    "start": "410830",
    "end": "417999"
  },
  {
    "text": "the messages from that particular device and then what you want to do is command and control you want to have the",
    "start": "417999",
    "end": "424629"
  },
  {
    "text": "feedback loop back from your central system back to the device so you can publish messages to that particular cars",
    "start": "424629",
    "end": "432520"
  },
  {
    "text": "topic so then only that car receives the MQTT message so impute et is a pops up",
    "start": "432520",
    "end": "438310"
  },
  {
    "text": "publish and subscribe protocol or you can send a distribute message you can",
    "start": "438310",
    "end": "444039"
  },
  {
    "text": "send a message to all of your devices so for example you could run common",
    "start": "444039",
    "end": "449139"
  },
  {
    "text": "configuration changes maybe firmware updates like this to your entire fleet of devices we support to quality of",
    "start": "449139",
    "end": "457960"
  },
  {
    "text": "services of MQTT protocol qs0 and one what is qs0 it's fire and forget",
    "start": "457960",
    "end": "465749"
  },
  {
    "text": "you have the tcp reliability there but on the end-to-end level from the device",
    "start": "465749",
    "end": "472360"
  },
  {
    "text": "back to aeropolis iot service qa0 message this means that if it's lost somewhere in transport it's lost so the",
    "start": "472360",
    "end": "480939"
  },
  {
    "text": "common use case for that is for example constant telemetry data from a sensor",
    "start": "480939",
    "end": "486300"
  },
  {
    "text": "you don't really care if you lose one packet you're anyway aggregating them maybe averaging them graphing them in",
    "start": "486300",
    "end": "492729"
  },
  {
    "text": "real time so if you lose something from history nevermind however maybe for the",
    "start": "492729",
    "end": "498459"
  },
  {
    "text": "command and control messages you don't want to lose those you want to make sure that the device actually receives the",
    "start": "498459",
    "end": "504099"
  },
  {
    "text": "control message like do something so for that q as one is better with q as one",
    "start": "504099",
    "end": "509529"
  },
  {
    "text": "there's into an acknowledgment and you can see message number four is lost in transit and then it's retransmitted",
    "start": "509529",
    "end": "516310"
  },
  {
    "text": "again so that is q as one and MQTT also",
    "start": "516310",
    "end": "522669"
  },
  {
    "text": "has a keepalive mechanism and this is a true end-to-end keepalive mechanism tcp",
    "start": "522669",
    "end": "528550"
  },
  {
    "text": "sometimes fakes it so there are tcp devices maybe routers firewalls load balancers",
    "start": "528550",
    "end": "533830"
  },
  {
    "text": "that are claiming to duty CPT Paula keepalive but they actually drop the connection to save whatever bandwidth",
    "start": "533830",
    "end": "538990"
  },
  {
    "text": "and number of TCP connections and they fake them they play with these TCP counters and numbers the mqtt keepalive",
    "start": "538990",
    "end": "546190"
  },
  {
    "text": "is an actual ping back and forth so with that you can know if your device is actually connected or not it's like hey",
    "start": "546190",
    "end": "553240"
  },
  {
    "text": "are you there hi I'm here good and you can control the frequency how often you",
    "start": "553240",
    "end": "559030"
  },
  {
    "text": "send this ping message back and forth now let's talk a little bit about",
    "start": "559030",
    "end": "565120"
  },
  {
    "text": "shadows shadows is a really cool feature in the other place IOT service with",
    "start": "565120",
    "end": "570490"
  },
  {
    "text": "shadows as a developer it's super easy for you to have a representation of the",
    "start": "570490",
    "end": "576220"
  },
  {
    "text": "state of your device remember the devices have intermitted network connectivity",
    "start": "576220",
    "end": "581260"
  },
  {
    "text": "maybe they connect with 3G anyway wireless connection so sometimes the devices will go offline and they use",
    "start": "581260",
    "end": "587890"
  },
  {
    "text": "mqtt typically as the protocol so you as a developer will you make web application server side applications",
    "start": "587890",
    "end": "593520"
  },
  {
    "text": "with the device shadow on IOT service it's really easy for you to use restful",
    "start": "593520",
    "end": "599290"
  },
  {
    "text": "HTTP or mqtt to talk to the shadow what is the shadow it's a representation of",
    "start": "599290",
    "end": "606700"
  },
  {
    "text": "the device so with the shadow you can read the current state of the device",
    "start": "606700",
    "end": "612040"
  },
  {
    "text": "when the device connects it will update the shadow hi I'm a vacuum cleaner and my current state is I'm off and then you",
    "start": "612040",
    "end": "619870"
  },
  {
    "text": "can programmatically control the device by changing the state of the shadow and it's easy you can use HTTP restful",
    "start": "619870",
    "end": "626680"
  },
  {
    "text": "interface for example and then the next time the device connects it will check with the shadow and it will get a delta",
    "start": "626680",
    "end": "633820"
  },
  {
    "text": "it will get a delta background a shadow that actually vacuum-cleaner your desired state is on you should PR",
    "start": "633820",
    "end": "639970"
  },
  {
    "text": "you're off Delta is on and then the vacuum cleaner will switch on and it",
    "start": "639970",
    "end": "646750"
  },
  {
    "text": "will acknowledge it will say that hi I'm a vacuum cleaner it will update the shadow that yes my current state is",
    "start": "646750",
    "end": "652960"
  },
  {
    "text": "indeed on so the device Seto is a really easy way for you to actually control the",
    "start": "652960",
    "end": "659620"
  },
  {
    "text": "devices without having to worry about how to actually connect to the device itself which might not be there right",
    "start": "659620",
    "end": "666040"
  },
  {
    "text": "now and if you mqtt you can see an example here on the right hand side that the desired state",
    "start": "666040",
    "end": "672970"
  },
  {
    "text": "is red color but the reported State is green on the lamp so the Delta is that",
    "start": "672970",
    "end": "679180"
  },
  {
    "text": "indeed it should be red and there's a version number there so the version number determines what is the latest",
    "start": "679180",
    "end": "684790"
  },
  {
    "text": "version of the shadow how does the device actually talk to the shadow well",
    "start": "684790",
    "end": "690760"
  },
  {
    "text": "it uses MQTT we have a couple of topics for the shadow service so you can pop",
    "start": "690760",
    "end": "697330"
  },
  {
    "text": "please to that topic to get the latest state of the device and shadow you can update the shadow like switch the motor",
    "start": "697330",
    "end": "705130"
  },
  {
    "text": "on switch the colored red and then the device will get back messages accept it",
    "start": "705130",
    "end": "711520"
  },
  {
    "text": "rejected and Delta Delta is the key to determining what it should be so know",
    "start": "711520",
    "end": "717459"
  },
  {
    "text": "I'm red it should be green so using these two topics this topic for the",
    "start": "717459",
    "end": "724000"
  },
  {
    "text": "device and the publish and subscribe to that topic it's easy for the device to know what should its current state be",
    "start": "724000",
    "end": "731560"
  },
  {
    "text": "and if you'll also update the state to that same shadow you can see the topic there it's dubbed elevator plays things",
    "start": "731560",
    "end": "738760"
  },
  {
    "text": "thing ID and then shadow that's the mqtt topic how would you use this let's say",
    "start": "738760",
    "end": "747370"
  },
  {
    "text": "that you have a mobile app with a nice user interface of humans using the mobile app using HTTP restful interface",
    "start": "747370",
    "end": "755730"
  },
  {
    "text": "you click something on the mobile app and you say I want the ends in to be armed so you actually update the shadow",
    "start": "755730",
    "end": "762160"
  },
  {
    "text": "in a place IOT service then at some point the engine controller connects",
    "start": "762160",
    "end": "767829"
  },
  {
    "text": "back to the cloud when it gets Internet again and it says hi I'm an engine controller I'm currently off my state is",
    "start": "767829",
    "end": "773920"
  },
  {
    "text": "off then the shadow service will detect the build-up between the current and desired state and tail back to the",
    "start": "773920",
    "end": "780550"
  },
  {
    "text": "engine controller no no use it beyond all right I'm going to switch off my engine and then it updates back to the",
    "start": "780550",
    "end": "787420"
  },
  {
    "text": "shadow I am now on so that's fine now the current state is the same as the desired State now with that I'd like to",
    "start": "787420",
    "end": "796690"
  },
  {
    "text": "hand over to John my colleague who's going to walk you through how to get started with these different",
    "start": "796690",
    "end": "802509"
  },
  {
    "text": "devices decays John right how do you get",
    "start": "802509",
    "end": "814869"
  },
  {
    "text": "started with our service and what have we done to make it easy for you the first is we have SDKs we've got three",
    "start": "814869",
    "end": "820329"
  },
  {
    "text": "SDKs in a variety of languages to help you get started we also have partnered",
    "start": "820329",
    "end": "825429"
  },
  {
    "text": "with hardware partners they use to make starter kits so you can get hardware you can order from Amazon com get the",
    "start": "825429",
    "end": "831249"
  },
  {
    "text": "hardware in your hand get started we've tested our SDK on these devices our partners have optimized the SDK for",
    "start": "831249",
    "end": "836860"
  },
  {
    "text": "their particular device so it really helps you get going quickly",
    "start": "836860",
    "end": "841649"
  },
  {
    "text": "there's three SDKs we've made the first is Arduino SDK it's targeted to the",
    "start": "841949",
    "end": "846999"
  },
  {
    "text": "Arduino Yeun the next is an ojs sdk it's made for those embedded Linux devices",
    "start": "846999",
    "end": "852579"
  },
  {
    "text": "like the Raspberry Pi and tell Edison the Aero dragon board and then we have a C SDK that's made for their more deeply",
    "start": "852579",
    "end": "859480"
  },
  {
    "text": "embedded devices those devices may be battery powered devices wearable devices so an sdk that's made for something like",
    "start": "859480",
    "end": "866199"
  },
  {
    "text": "that so let's get started with the arduino yoon sdk it's gonna be you're",
    "start": "866199",
    "end": "872499"
  },
  {
    "text": "gonna be programming in the familiar arduino ide that you're used to you're gonna be able to take advantage of library if you've built some arduino",
    "start": "872499",
    "end": "878589"
  },
  {
    "text": "code before you're gonna be able to use those libraries there's a great arduino hardware ecosystem so shield sensors",
    "start": "878589",
    "end": "884740"
  },
  {
    "text": "actuators things you're probably already building some maker devices with it'll all work with this sdk now a little bit",
    "start": "884740",
    "end": "891879"
  },
  {
    "text": "about the arduino union one of the things that makes this networking possible is it's got a little",
    "start": "891879",
    "end": "897579"
  },
  {
    "text": "microcontroller that's where you're writing your sketch code that's where your you know the easy access to the hardware you can actuate things analog",
    "start": "897579",
    "end": "905049"
  },
  {
    "text": "reads it makes it really easy that are doing experience that you're used to and then there's a serial connection between",
    "start": "905049",
    "end": "910089"
  },
  {
    "text": "that processor and a linux microprocessor that's also on the board and that's what's doing all the heavy",
    "start": "910089",
    "end": "915129"
  },
  {
    "text": "lifting for the network so the TLS the mq TC and one of the advantages of something like this is we're able to",
    "start": "915129",
    "end": "920829"
  },
  {
    "text": "take we've got a runtime in our sdk that runs on that linux microprocessor and talks to your sketch and so we're able",
    "start": "920829",
    "end": "926829"
  },
  {
    "text": "to pull a lot of that complex code off of the microcontroller and onto this heavier microprocessor and so it allows",
    "start": "926829",
    "end": "933790"
  },
  {
    "text": "you more sketch space more code space more RAM to write your application so now I'm going to go",
    "start": "933790",
    "end": "940590"
  },
  {
    "text": "through a demo I'm gonna be using seed studios version of the Arduino unit it's called the seed we know cloud and what",
    "start": "940590",
    "end": "947730"
  },
  {
    "text": "this demo is gonna be is you may have seen these IOT buttons that we've handed out basically a button you can you can",
    "start": "947730",
    "end": "953910"
  },
  {
    "text": "click once it connects to the cloud runs a lambda function once once you're going to lambda function you can do all manner",
    "start": "953910",
    "end": "959460"
  },
  {
    "text": "of things in the cloud it's a really cool application and so what happens is when I push a button on this seed studio",
    "start": "959460",
    "end": "965310"
  },
  {
    "text": "device it's gonna send an MQTT message to the cloud this rule is going to recognize that message and then execute",
    "start": "965310",
    "end": "971160"
  },
  {
    "text": "a lambda function",
    "start": "971160",
    "end": "973550"
  },
  {
    "text": "so you can hear you can see the Arduino IDE you're used to bring up the AWS IOT",
    "start": "991870",
    "end": "998950"
  },
  {
    "text": "console",
    "start": "998950",
    "end": "1001400"
  },
  {
    "text": "let's do soo min here and take a quick look at what this is doing",
    "start": "1011070",
    "end": "1016399"
  },
  {
    "text": "it's a real simple stuff you're probably used to if you've used Arduino some setup stuff we're gonna configure a",
    "start": "1018910",
    "end": "1024520"
  },
  {
    "text": "button attach an interrupt to that button and we connect to the service",
    "start": "1024520",
    "end": "1033089"
  },
  {
    "text": "and then we go into the loop and in that",
    "start": "1039820",
    "end": "1045189"
  },
  {
    "text": "loop we construct a message that says event type is button press and we're going to publish it on this topic this",
    "start": "1045190",
    "end": "1052330"
  },
  {
    "text": "is Uma back out here let's build this",
    "start": "1052330",
    "end": "1058270"
  },
  {
    "text": "shoot it down to the device go over here",
    "start": "1058270",
    "end": "1064840"
  },
  {
    "text": "to our serial console",
    "start": "1064840",
    "end": "1067799"
  },
  {
    "text": "and now you can see we've connected and we're in the loop waiting for the button press now you can see the device here",
    "start": "1072300",
    "end": "1084360"
  },
  {
    "text": "hit a little button here little Grove button attached to their device I'm gonna push that button you see the",
    "start": "1084360",
    "end": "1091660"
  },
  {
    "text": "button press was recognized by the device",
    "start": "1091660",
    "end": "1095550"
  },
  {
    "text": "and my lambda function ran let's take a look at what I ran in the console you",
    "start": "1097690",
    "end": "1103930"
  },
  {
    "text": "can see here's what the rule that was going to that was action on that topic so select all the messages from this",
    "start": "1103930",
    "end": "1111430"
  },
  {
    "text": "topic so let's take a look at that",
    "start": "1111430",
    "end": "1120460"
  },
  {
    "text": "lambda function that I ran so it was",
    "start": "1120460",
    "end": "1126910"
  },
  {
    "text": "really cool about this is when that rule ran it actually grabbed the payload of the MQ TD message and it passed it off",
    "start": "1126910",
    "end": "1132370"
  },
  {
    "text": "to the lambda function so I was able to grab that event and print out what event type you remember in my sketch I said",
    "start": "1132370",
    "end": "1138010"
  },
  {
    "text": "the event type was Brett and press so let's let's go over the monitoring you",
    "start": "1138010",
    "end": "1143230"
  },
  {
    "text": "can see there's been some executions of that lambda function we take a look at our cloud watch logs from that lambda",
    "start": "1143230",
    "end": "1150480"
  },
  {
    "text": "and you can see that that event was passed in my lambda function so you could do some cool things like you could",
    "start": "1152610",
    "end": "1157720"
  },
  {
    "text": "have multiple buttons you press button one you send button one in the payload and then your lambda can make it make a cool decision based on what button you",
    "start": "1157720",
    "end": "1163990"
  },
  {
    "text": "push it's some really cool stuff once you can run a lambda from a button there's a lot of things you can do in",
    "start": "1163990",
    "end": "1169450"
  },
  {
    "text": "the cloud with that",
    "start": "1169450",
    "end": "1172019"
  },
  {
    "text": "so that was the Arduino SDK",
    "start": "1182410",
    "end": "1186270"
  },
  {
    "text": "there we go thank you so let's talk",
    "start": "1199730",
    "end": "1205760"
  },
  {
    "text": "about the note gsst came if you're running a board like a BeagleBone or raspberry pi until Edison one of these",
    "start": "1205760",
    "end": "1212870"
  },
  {
    "text": "that you can log into you can run node this is a great option for you and it allows you to write code in a high-level",
    "start": "1212870",
    "end": "1218330"
  },
  {
    "text": "language and these board makers have been it made it really easy to write in a language like JavaScript and you still",
    "start": "1218330",
    "end": "1223610"
  },
  {
    "text": "have access to the hardware so you can still do some really cool stuff and then write in a high-level language it's",
    "start": "1223610",
    "end": "1229250"
  },
  {
    "text": "gonna be easily installed with NPM so just npm install the library and the",
    "start": "1229250",
    "end": "1235610"
  },
  {
    "text": "codes really concise there's just a handful of lines of code this is just a simple example to publish the time every two seconds just connecting publishing",
    "start": "1235610",
    "end": "1243080"
  },
  {
    "text": "in an event loop it's really really simple stuff so let's take a look at getting started with that",
    "start": "1243080",
    "end": "1249159"
  },
  {
    "text": "so here we have the a degress console again",
    "start": "1258230",
    "end": "1262330"
  },
  {
    "text": "and this this example is gonna be an example interacting with the shadow so marki walked through the use case where",
    "start": "1269010",
    "end": "1274890"
  },
  {
    "text": "he had an engine controller you may be offline it's gonna connect see if you should be running or not and we're gonna command that through the",
    "start": "1274890",
    "end": "1280500"
  },
  {
    "text": "shadow so let's take a quick look at the",
    "start": "1280500",
    "end": "1288270"
  },
  {
    "text": "example they made so at the top we've",
    "start": "1288270",
    "end": "1293669"
  },
  {
    "text": "got some configuration information how do you get to the private key and the certificate what do you want the thing",
    "start": "1293669",
    "end": "1298980"
  },
  {
    "text": "name to be and then on connection we're",
    "start": "1298980",
    "end": "1305010"
  },
  {
    "text": "registering that thing with the cloud so we're saying I'm interested in Delta messages from that thing and at that",
    "start": "1305010",
    "end": "1315299"
  },
  {
    "text": "point I default this to be saying the engine is off so every time this power is up it's gonna say the engines off",
    "start": "1315299",
    "end": "1320520"
  },
  {
    "text": "it's gonna broadcast that to the shadow and say I'm off set my safe set my reported state to off and then here",
    "start": "1320520",
    "end": "1330809"
  },
  {
    "text": "we're saying when I receive a delta message from the cloud so when the cloud recognizes there's a difference between my reported and desired state what do I",
    "start": "1330809",
    "end": "1338580"
  },
  {
    "text": "want to do and what have decided to act on is if they state from the cloud says I should be on then I'm pretty gonna",
    "start": "1338580",
    "end": "1344910"
  },
  {
    "text": "pretend like I start up my engine controller and then i broadcast once I am started I broadcast to the cloud that",
    "start": "1344910",
    "end": "1349980"
  },
  {
    "text": "says my reported state is now running it's now on and likewise if that state",
    "start": "1349980",
    "end": "1355410"
  },
  {
    "text": "was to say no you actually should be off I'm gonna mimic shutting down the engine and then once it's shut down I'm gonna",
    "start": "1355410",
    "end": "1360929"
  },
  {
    "text": "broadcast back to the cloud and say ok my desert my reported state now is off",
    "start": "1360929",
    "end": "1367279"
  },
  {
    "text": "so let's start that up",
    "start": "1375110",
    "end": "1378398"
  },
  {
    "text": "and now it's connected and it's told to shadow my current state my reported state is off so let's go over here to",
    "start": "1380800",
    "end": "1387160"
  },
  {
    "text": "the console and you can see the current state in the shadow is for desired is",
    "start": "1387160",
    "end": "1392410"
  },
  {
    "text": "off reported is off so let's click on update stayed and let's set that to on",
    "start": "1392410",
    "end": "1400470"
  },
  {
    "text": "so when I send that update the shadow realized there was a Delta between",
    "start": "1402900",
    "end": "1408490"
  },
  {
    "text": "desired and reported and it fired a delta message to the device that device saw that message and said ok now it's",
    "start": "1408490",
    "end": "1414670"
  },
  {
    "text": "time to start the engine I'm gonna turn it on and then as I said it went after it after it is on it says back to the",
    "start": "1414670",
    "end": "1421150"
  },
  {
    "text": "cloud that ok my state is reported is now on so if we go look at the shadow state now you'll see it's in sync the",
    "start": "1421150",
    "end": "1433690"
  },
  {
    "text": "desired States on the engines running and the reported state from the engine is on so let's try that again let's set",
    "start": "1433690",
    "end": "1438700"
  },
  {
    "text": "it off",
    "start": "1438700",
    "end": "1440940"
  },
  {
    "text": "Update desired again there was a delta the engine decides to shut off and then",
    "start": "1446370",
    "end": "1451890"
  },
  {
    "text": "it reports that it's off so that's great now let's try let's try the offline case so I'm gonna take the engine controller",
    "start": "1451890",
    "end": "1458160"
  },
  {
    "text": "offline and then I'm gonna go back to my console and I'm gonna program against it",
    "start": "1458160",
    "end": "1463320"
  },
  {
    "text": "and say I want the state to be on let's make sure this is refresh there we go",
    "start": "1463320",
    "end": "1470850"
  },
  {
    "text": "we're in sync both are off that's command it to on again",
    "start": "1470850",
    "end": "1477290"
  },
  {
    "text": "update state and now the shadow has a conflict our desired States on the last",
    "start": "1477290",
    "end": "1483900"
  },
  {
    "text": "reported state's office says actually there's a delta the engine engine controller should be on but it's offline",
    "start": "1483900",
    "end": "1490890"
  },
  {
    "text": "and so what we're gonna do is the shadow is gonna keep this state as a delta until the next time it connects so if",
    "start": "1490890",
    "end": "1496860"
  },
  {
    "text": "you remember when I started up it was gonna broadcast at stade so let's start it back up and it's gonna tell the cloud",
    "start": "1496860",
    "end": "1503400"
  },
  {
    "text": "hey my last word as state is off and that Delta message then comes back down to the device and says no you actually",
    "start": "1503400",
    "end": "1508800"
  },
  {
    "text": "should be on the device recognizes that Delta and comes back up and so this is a really powerful programming model if",
    "start": "1508800",
    "end": "1513840"
  },
  {
    "text": "you're programming against the device and had to worry about connection state you'd always have to wonder is that device connected or not and in this",
    "start": "1513840",
    "end": "1519929"
  },
  {
    "text": "model it's easy you program against the shadow and then we take care of syncing that message the next time the device comes online",
    "start": "1519929",
    "end": "1527090"
  },
  {
    "text": "so there was a no js' SEK now let's talk about the C SDK like I said before this",
    "start": "1542920",
    "end": "1549520"
  },
  {
    "text": "SDK is targeted for those deeply embedded device is targeted for a microcontroller something you're gonna save power on battery powered device",
    "start": "1549520",
    "end": "1556150"
  },
  {
    "text": "possibly maybe a wearable it's designed for something that you're gonna port to",
    "start": "1556150",
    "end": "1561190"
  },
  {
    "text": "your device you've got an existing device you've written this code and C already and you're going to want to port components of this SDK into your device",
    "start": "1561190",
    "end": "1567580"
  },
  {
    "text": "architecture the SDK is delivered with a port already we port it already - POSIX",
    "start": "1567580",
    "end": "1574420"
  },
  {
    "text": "so you can run it on Linux in OS 10 so you can download the SDK get started quickly on your Mac your Linux machine",
    "start": "1574420",
    "end": "1580120"
  },
  {
    "text": "and then when you realize you've used the service you've used yesterday I got a feel for it then you can do the port",
    "start": "1580120",
    "end": "1586060"
  },
  {
    "text": "the porting work to get port it to your platform the SDK is made to be a memory",
    "start": "1586060",
    "end": "1591580"
  },
  {
    "text": "conscious so there's no no dynamic memory allocation there's no Malick's and all the",
    "start": "1591580",
    "end": "1596740"
  },
  {
    "text": "resources like buffer sizes are configurable so you can decide how big the SDK should be for your your",
    "start": "1596740",
    "end": "1602110"
  },
  {
    "text": "particular application it's got a TLS implementation built into it so if you don't have one you can use this one it's",
    "start": "1602110",
    "end": "1608920"
  },
  {
    "text": "got an MQTT client it's a client that we rode we took the PAHO embedded client and added some things for our for our",
    "start": "1608920",
    "end": "1615520"
  },
  {
    "text": "service it as a shadow sdk so that interaction i just showed you to the nodejs sdk you can do that way and see",
    "start": "1615520",
    "end": "1621820"
  },
  {
    "text": "as well and we've included a lot of examples to help you get started so there's a lot of use cases of I have a",
    "start": "1621820",
    "end": "1627130"
  },
  {
    "text": "telemetry data device that's transmitting telemetry data maybe I have that same inch and controller example",
    "start": "1627130",
    "end": "1633850"
  },
  {
    "text": "we've included examples in the SDK to help you get started the SDKs structured",
    "start": "1633850",
    "end": "1639940"
  },
  {
    "text": "it in a layer in a series of layers so going from the top is your application what your firmware is down to your",
    "start": "1639940",
    "end": "1646570"
  },
  {
    "text": "hardware in the bottom and in between is our SDK and the connection code and that stuff and I'll walk through these layers",
    "start": "1646570",
    "end": "1651970"
  },
  {
    "text": "and it's important to note in between these layers that's where we've put care to make it easily portable so you can",
    "start": "1651970",
    "end": "1658060"
  },
  {
    "text": "decide I want to use the shadow or I don't I want to use your MQTT client or maybe I have my own we've tried to make",
    "start": "1658060",
    "end": "1664780"
  },
  {
    "text": "it easy for you to port what portions this you need so at the top is your",
    "start": "1664780",
    "end": "1670000"
  },
  {
    "text": "custom application and this is the soul of your device this is what it does so you decide I want to be connected all",
    "start": "1670000",
    "end": "1675100"
  },
  {
    "text": "the time I want to send this data how you want how you actually want to interact with the cloud minutes so",
    "start": "1675100",
    "end": "1680220"
  },
  {
    "text": "that's much like your application today the next layer down is the thing shadow you could choose to use this or not if",
    "start": "1680220",
    "end": "1686820"
  },
  {
    "text": "you decide to use it we've got a great SDK for it that handles things like managing those subscriptions tracking",
    "start": "1686820",
    "end": "1692550"
  },
  {
    "text": "versions we talking about how versions help you keep track of what the most recent shadow is we've got that built",
    "start": "1692550",
    "end": "1697770"
  },
  {
    "text": "into our SDK and then we've got some helpers to help you wrangle the JSON that comes in and out a C library for",
    "start": "1697770",
    "end": "1704250"
  },
  {
    "text": "doing that below that is the mqtt client so if you have a simple publish and",
    "start": "1704250",
    "end": "1710070"
  },
  {
    "text": "subscribe type model you can use this directly there's also an interface so if you come with an your own MQTT client",
    "start": "1710070",
    "end": "1717330"
  },
  {
    "text": "you can use that interface and put our shadow implementation on top and use your existing MPD client if you have one",
    "start": "1717330",
    "end": "1723650"
  },
  {
    "text": "below that it's the interface to the hardware and so this is where a lot of your porting work is going to happen we've made an interface for timers the",
    "start": "1723650",
    "end": "1731070"
  },
  {
    "text": "mqtt needs timers to decide for session management and controlling timeouts and",
    "start": "1731070",
    "end": "1736770"
  },
  {
    "text": "then obviously the TLS interface you're going to each of your devices it's probably going to have or each class of",
    "start": "1736770",
    "end": "1743700"
  },
  {
    "text": "device you're going to have is going to have a different way to talk to the network and we've made it easy for porting your network infrastructure into",
    "start": "1743700",
    "end": "1749340"
  },
  {
    "text": "that and so that's there and then at the bottom of course is your hardware so now",
    "start": "1749340",
    "end": "1756540"
  },
  {
    "text": "I'm going to walk through the C SDK I'm going to show you those porting points I'm gonna run a quick example the last",
    "start": "1756540",
    "end": "1762750"
  },
  {
    "text": "bullet here one thing to note is to do proper server certificate validation you're going to have current time on the",
    "start": "1762750",
    "end": "1768750"
  },
  {
    "text": "device and so in this case we're using NTP and some of these embedded boards - they have NTP clients so that's that's",
    "start": "1768750",
    "end": "1775230"
  },
  {
    "text": "what you're gonna have to do if you want to do proper validation of that server cert that comes back from our service",
    "start": "1775230",
    "end": "1781670"
  },
  {
    "text": "so here's the C SDK as it looks when you download it we've got some documentation and various directories where you can",
    "start": "1801390",
    "end": "1808350"
  },
  {
    "text": "store your certificates when you're playing with the SDK the embed TLS library if you choose to use our TLS",
    "start": "1808350",
    "end": "1814260"
  },
  {
    "text": "implementation so let's first let's take a look at that timer interface I talked about so we",
    "start": "1814260",
    "end": "1822540"
  },
  {
    "text": "need to find interfaces on how you're going to present timers to us so your artists is different from this artists",
    "start": "1822540",
    "end": "1828240"
  },
  {
    "text": "is different from Linux of how you handle timers and we need to know that when we're running on top of it so we've",
    "start": "1828240",
    "end": "1833309"
  },
  {
    "text": "provided nice little porting points of give me a countdown timer in milliseconds and we pass in the timer",
    "start": "1833309",
    "end": "1839490"
  },
  {
    "text": "and so then it's up to you this is this happens to be the POSIX way of handling timers for you to port and say this is",
    "start": "1839490",
    "end": "1846270"
  },
  {
    "text": "how timers are handled on my device so likewise we have the same same story",
    "start": "1846270",
    "end": "1853169"
  },
  {
    "text": "with the network interface when you do",
    "start": "1853169",
    "end": "1860220"
  },
  {
    "text": "things like I want to knit the TLS connection there's certain things each library has a different way of parsing",
    "start": "1860220",
    "end": "1865950"
  },
  {
    "text": "their certificates and loading a context and so that's what you would present here and you can see here here is our",
    "start": "1865950",
    "end": "1871200"
  },
  {
    "text": "port of using MN TLS with this SDK so",
    "start": "1871200",
    "end": "1875600"
  },
  {
    "text": "like I said the SDK comes with a couple examples let's take a look first at this",
    "start": "1876860",
    "end": "1882390"
  },
  {
    "text": "simple publish and subscribe example it's pretty standard mqtt stuff if",
    "start": "1882390",
    "end": "1888630"
  },
  {
    "text": "you've seen that before at the top we've got the configuration stuff again you",
    "start": "1888630",
    "end": "1894150"
  },
  {
    "text": "configure where your certificates live connection parameters things where you'd set that MQTT keep a live interval your",
    "start": "1894150",
    "end": "1901650"
  },
  {
    "text": "client ID for mqtt those those are set in these parameters here's where we connect to the service we'll go down we",
    "start": "1901650",
    "end": "1909929"
  },
  {
    "text": "subscribe to this SDK test topic and",
    "start": "1909929",
    "end": "1915090"
  },
  {
    "text": "then we drop into a loop and every second we publish a new message it says hello from the SDK increments a number",
    "start": "1915090",
    "end": "1922040"
  },
  {
    "text": "and we publish that to the same topic so if you hop out of here just build simply",
    "start": "1922040",
    "end": "1929550"
  },
  {
    "text": "with make it builds on OS 10 it builds on Linux out of the box",
    "start": "1929550",
    "end": "1934910"
  },
  {
    "text": "and then we can run that example you see it connect and does the TLS handshake",
    "start": "1935240",
    "end": "1940559"
  },
  {
    "text": "it's subscribing to a it's subscribing to the same topic it's publishing so there's a round trip it sends a message",
    "start": "1940559",
    "end": "1946350"
  },
  {
    "text": "and then receives the message it's a really quick test of did I set the SDK up correctly as my is my credentials",
    "start": "1946350",
    "end": "1952169"
  },
  {
    "text": "correctly and I'm connecting and I'm publishing and subscribing and over here",
    "start": "1952169",
    "end": "1957330"
  },
  {
    "text": "I'm going to show you a mosquito I'm sorry an mqtt test pool called mosquito so we can connect and subscribe to that",
    "start": "1957330",
    "end": "1964590"
  },
  {
    "text": "same topic and now you can see yes indeed the SDK is up it's publishing I'm getting messages on that same topic so",
    "start": "1964590",
    "end": "1976980"
  },
  {
    "text": "that's the C SDK",
    "start": "1976980",
    "end": "1979880"
  },
  {
    "text": "so I talked about porting and a great story about porting is the people from media tech you've probably seen them on",
    "start": "1989230",
    "end": "1994960"
  },
  {
    "text": "the conference floor talking about their link at one boards they took our C SDK",
    "start": "1994960",
    "end": "2000600"
  },
  {
    "text": "and they ported it into their Arduino environments so they're using embed TLS like I showed you they're using our MQTT",
    "start": "2000600",
    "end": "2005970"
  },
  {
    "text": "client and they made an Arduino wrapper around that so it's easy to use the Arduino programming environment but they",
    "start": "2005970",
    "end": "2012149"
  },
  {
    "text": "took our SDK and poured it and so that was a great story about how someone was able to take it and port it in a short",
    "start": "2012149",
    "end": "2017279"
  },
  {
    "text": "amount of time some statistics about the SDK it just a puck simple pub/sub example is around 8 K of code for K a",
    "start": "2017279",
    "end": "2024210"
  },
  {
    "text": "ram usage and that's with 512 K or I'm sorry 512 byte send and receive buffers",
    "start": "2024210",
    "end": "2030299"
  },
  {
    "text": "if you bring in our shadow code it goes up to 11 K and 6 K of ram so quite",
    "start": "2030299",
    "end": "2036659"
  },
  {
    "text": "lightweight and it's important to note that those numbers don't include the the Wi-Fi stack the tcp/ip stack and the TLS",
    "start": "2036659",
    "end": "2044159"
  },
  {
    "text": "layer so those are things that probably are gonna differ from device to device and so this these numbers are just what",
    "start": "2044159",
    "end": "2049260"
  },
  {
    "text": "our C SDK is",
    "start": "2049260",
    "end": "2052220"
  },
  {
    "text": "so let's talk a little bit about the starter kits we're doing there's you can see eight of them on on the board here",
    "start": "2055680",
    "end": "2060929"
  },
  {
    "text": "companies like arrow electronics seed studio Marvel I mentioned media tech",
    "start": "2060930",
    "end": "2066090"
  },
  {
    "text": "before the Intel Edison board a wide variety of starter kits anywhere from boards super-powerful boards like this",
    "start": "2066090",
    "end": "2072510"
  },
  {
    "text": "dragon boards got a quad-core Snapdragon processor be great for driving like digital signage things all the way down",
    "start": "2072510",
    "end": "2079560"
  },
  {
    "text": "to these boards like from Marvel or Broadcom where I'm gonna make I'm gonna",
    "start": "2079560",
    "end": "2085740"
  },
  {
    "text": "make a battery powered device may be some wearable thing it's gotta last a long time maybe you'll want it to be really low cost I can't run a big Linux",
    "start": "2085740",
    "end": "2092370"
  },
  {
    "text": "board so we've got a lot of starter kits a lot of different choices if you're gonna if you're making something you",
    "start": "2092370",
    "end": "2097710"
  },
  {
    "text": "want to just get started if you're actually you know you're playing around in your garage all the way to I'm actually gonna make 500,000 of these",
    "start": "2097710",
    "end": "2104010"
  },
  {
    "text": "there's a starter kit for all of those situations this next slide shows it",
    "start": "2104010",
    "end": "2109470"
  },
  {
    "text": "shows the variety of os's and so some of these the dragon board is running a new",
    "start": "2109470",
    "end": "2116130"
  },
  {
    "text": "butoh in ubuntu version of linux there's different art tosses like free are toss and thread X there's just a wide variety",
    "start": "2116130",
    "end": "2123480"
  },
  {
    "text": "of starter kits there's one for everybody at this point I'm going to hand it back over to mark ooh we've",
    "start": "2123480",
    "end": "2129060"
  },
  {
    "text": "built a end-to-end demo showing a lot of these boards it's a pretty cool demo",
    "start": "2129060",
    "end": "2135470"
  },
  {
    "text": "so you guys want to see an intern demo yeah cool all right let's have an",
    "start": "2142820",
    "end": "2148850"
  },
  {
    "text": "earthquake sensor grid right let's see if there's an earthquake going on how could we implement such an IOT solution",
    "start": "2148850",
    "end": "2156220"
  },
  {
    "text": "earthquake monitoring so in this particular demo here right here in the states I'm going to show them to you",
    "start": "2156220",
    "end": "2161870"
  },
  {
    "text": "soon we have three devices as the clients as the sensors so we have a",
    "start": "2161870",
    "end": "2166970"
  },
  {
    "text": "Marvel mediatek link it's one and an Arduino unipod it's of TS as an accelerometer sensor and they are",
    "start": "2166970",
    "end": "2173570"
  },
  {
    "text": "pumping acceleration values to common topic so they are posting and publishing what is the current state of",
    "start": "2173570",
    "end": "2179870"
  },
  {
    "text": "acceleration for these devices to the same topic in Ada Police IOT with MQTT and then we hit the rules engine and",
    "start": "2179870",
    "end": "2187820"
  },
  {
    "text": "with the rules engine I've made a couple of rules the first rule is that I want to have a live dashboard I want to see a",
    "start": "2187820",
    "end": "2193520"
  },
  {
    "text": "visualization really an acceleration visualization of all the values so I",
    "start": "2193520",
    "end": "2199070"
  },
  {
    "text": "send all the MQTT messages to Kinesis amazon Kinesis and then i have an",
    "start": "2199070",
    "end": "2204590"
  },
  {
    "text": "elastic beanstalk beanstalk application simply visualizing whatever Kinesis has",
    "start": "2204590",
    "end": "2210040"
  },
  {
    "text": "the second roll has a sequel statement when the value of the acceleration when",
    "start": "2210040",
    "end": "2217580"
  },
  {
    "text": "the sensor value exceeds 5 G's of acceleration we have an earthquake so in",
    "start": "2217580",
    "end": "2222920"
  },
  {
    "text": "that case I want to be notified and I want Amazon SNS simple notification",
    "start": "2222920",
    "end": "2228050"
  },
  {
    "text": "service to send me a message to my phone the apps phone if you will with the current shaky-shaky value the same value",
    "start": "2228050",
    "end": "2234530"
  },
  {
    "text": "so the rules engine is going to forward the message system as an SMS only if the value is greater than 5 and if the value",
    "start": "2234530",
    "end": "2242270"
  },
  {
    "text": "is greater than 5 the second part of the rule is trigger a lambda function and with the lambda function I want a",
    "start": "2242270",
    "end": "2248990"
  },
  {
    "text": "physical world alarm so have an Intel Edison port right here and the Intel",
    "start": "2248990",
    "end": "2255260"
  },
  {
    "text": "Edison has a relay switch and it has an industrial alarm lamp that's really loud and the lambda function is going to",
    "start": "2255260",
    "end": "2263000"
  },
  {
    "text": "update the alarm state the state of the shadow to be alarm and then Edison is",
    "start": "2263000",
    "end": "2268760"
  },
  {
    "text": "going to get this Delta know you should be an alarm state it gets the alarm and then it should light the lamp and",
    "start": "2268760",
    "end": "2273860"
  },
  {
    "text": "because the lamp is really painful and loud the three seconds the Edison switches it off and updates the shadow state again",
    "start": "2273860",
    "end": "2281599"
  },
  {
    "text": "to not alarm Allah alarm off so let's see what this looks like in the real",
    "start": "2281599",
    "end": "2286700"
  },
  {
    "text": "world let's get to the demo the first thing I want to show you is what we have",
    "start": "2286700",
    "end": "2291740"
  },
  {
    "text": "here so let's take my phone and using magic we have a video camera now okay",
    "start": "2291740",
    "end": "2301730"
  },
  {
    "text": "very cool like that so first of all we've got the Arduino UHN here and connect it to the Arduino yone we have",
    "start": "2301730",
    "end": "2308089"
  },
  {
    "text": "an accelerometer sensor that's a three axis analog accelerometer in this case then we have the media tech link it's",
    "start": "2308089",
    "end": "2314450"
  },
  {
    "text": "one and Marvel ports Mirotic is on top it's got a digital accelerometer and the Marvel is simulating an accelerometer in",
    "start": "2314450",
    "end": "2321740"
  },
  {
    "text": "software core anyway these are the three clients bumping accelerometer values after the same topic in a tablet IOT",
    "start": "2321740",
    "end": "2328700"
  },
  {
    "text": "service and then we have the Intel Edison port right here which is controlling this guy the really loud and",
    "start": "2328700",
    "end": "2334790"
  },
  {
    "text": "painful alarm lamp and there's a real a sweet so the Edison is when it gets the shadow state alarms should be on it",
    "start": "2334790",
    "end": "2341450"
  },
  {
    "text": "basically sweets is on five volts of power to that one pin which controls the",
    "start": "2341450",
    "end": "2346520"
  },
  {
    "text": "relay switch within enables 12 volts to this painful alarm lamp right here alright and remember we should get an",
    "start": "2346520",
    "end": "2352549"
  },
  {
    "text": "SNS notification as well to my phone if the acceleration goes beyond 5 G's so",
    "start": "2352549",
    "end": "2358400"
  },
  {
    "text": "let's start breaking down the solution how did I actually build it so I'm gonna show you a little bit of the Arduino",
    "start": "2358400",
    "end": "2363920"
  },
  {
    "text": "code here so this is the code for the u n-- for the other two devices it's very similar you can see it on the top I'm",
    "start": "2363920",
    "end": "2369710"
  },
  {
    "text": "loading the unit library for MQTT and we",
    "start": "2369710",
    "end": "2375349"
  },
  {
    "text": "create a client MQTT client on the top there and briefly when we get to the",
    "start": "2375349",
    "end": "2382010"
  },
  {
    "text": "loop here so the I dunno ports always run through the loop it's it runs through the setup once and then it runs",
    "start": "2382010",
    "end": "2388849"
  },
  {
    "text": "to loop forever the loop is really simple it's analog it reads the analog",
    "start": "2388849",
    "end": "2394339"
  },
  {
    "text": "value of that pin the x-axis of the accelerometer it basically gets a voltage of the accelerometer value and",
    "start": "2394339",
    "end": "2400309"
  },
  {
    "text": "then using magic and great mathematics here I'm converting that to g-force and",
    "start": "2400309",
    "end": "2407450"
  },
  {
    "text": "then using the MQTT client we publish the g-force value of the x-axis to this MQTT",
    "start": "2407450",
    "end": "2414049"
  },
  {
    "text": "topic here census less acceleration and that's it and then it runs through the",
    "start": "2414049",
    "end": "2419630"
  },
  {
    "text": "loop again and it does that twice a second and we can actually now monitor",
    "start": "2419630",
    "end": "2425089"
  },
  {
    "text": "to see if we are getting something from the UHN well yes we are so actually all three",
    "start": "2425089",
    "end": "2430700"
  },
  {
    "text": "devices are now publishing to the same topic so how am i doing this monitoring",
    "start": "2430700",
    "end": "2435740"
  },
  {
    "text": "let me show you so my laptop just like you saw John do earlier I'm using",
    "start": "2435740",
    "end": "2441920"
  },
  {
    "text": "mosquito pops up client and I'm subscribing my laptop to the same topic",
    "start": "2441920",
    "end": "2448180"
  },
  {
    "text": "sensor acceleration so let's do that my laptop is now connected to the same",
    "start": "2448180",
    "end": "2454099"
  },
  {
    "text": "topic and you can see values there so if I start for example wiggling slightly the accelerometer and the UHN you should",
    "start": "2454099",
    "end": "2461960"
  },
  {
    "text": "see that one of the values starts changing the you start getting negative values negative values there but it",
    "start": "2461960",
    "end": "2467839"
  },
  {
    "text": "looks a little bit better if you look at the visualization anyway we can see that that MQTT topic has acceleration values",
    "start": "2467839",
    "end": "2475210"
  },
  {
    "text": "going in to the other place IOT service what happens next is the rules engine so",
    "start": "2475210",
    "end": "2482630"
  },
  {
    "text": "let's switch to the ADA police IOT console here is the console of a new service and these are my rules let's",
    "start": "2482630",
    "end": "2490039"
  },
  {
    "text": "take a look at the first rule the first rule is post - keenie Z so I created a",
    "start": "2490039",
    "end": "2495079"
  },
  {
    "text": "rule and specifically it we have a",
    "start": "2495079",
    "end": "2500210"
  },
  {
    "text": "simple sequel statement I think it's really cool that you can write a simple sequel statement against a real-time",
    "start": "2500210",
    "end": "2506240"
  },
  {
    "text": "stream of packets and data so here with the sequel statement in the rule engine we select all the packets all the MQTT",
    "start": "2506240",
    "end": "2514190"
  },
  {
    "text": "packets from this topic and we send them to Kinesis so all I needed to do was to",
    "start": "2514190",
    "end": "2521119"
  },
  {
    "text": "tell where there's an I am role of course it's just for security and then",
    "start": "2521119",
    "end": "2526220"
  },
  {
    "text": "this is the canacee stream where the rules engine of ADA Poulos IOT will be",
    "start": "2526220",
    "end": "2531529"
  },
  {
    "text": "forwarding the package to Kinesis this is that particular Kinesis stream that I",
    "start": "2531529",
    "end": "2536720"
  },
  {
    "text": "have called sensor grid and you can see looking at the Kinesis monitoring that",
    "start": "2536720",
    "end": "2542630"
  },
  {
    "text": "indeed we are getting records into the canoes a stream and somebody's also reading them from the canoes a",
    "start": "2542630",
    "end": "2548210"
  },
  {
    "text": "stream who is reading them so the devices are pushing them to Kinesis through IOT service and this guy is",
    "start": "2548210",
    "end": "2554810"
  },
  {
    "text": "tender visualization so this is a live visualization of the sense of values",
    "start": "2554810",
    "end": "2560510"
  },
  {
    "text": "coming in right now the values are fluctuating between zero and zero point",
    "start": "2560510",
    "end": "2565730"
  },
  {
    "text": "four G's so they're not exactly calibrated correct all of them identically so the different devices are",
    "start": "2565730",
    "end": "2572240"
  },
  {
    "text": "slightly different sensor values now in their normal state so that's a live graph so this graph has a Kinesis client",
    "start": "2572240",
    "end": "2579190"
  },
  {
    "text": "one running on elastic Beanstalk receiving the kidneys payload and then",
    "start": "2579190",
    "end": "2584270"
  },
  {
    "text": "visualizing them there but let's get back to the rules engine for the second roll the second rule is the more",
    "start": "2584270",
    "end": "2591020"
  },
  {
    "text": "interesting one the alarm1 let's take a look at that if in the sense of",
    "start": "2591020",
    "end": "2596900"
  },
  {
    "text": "acceleration topic the value of x x-axis is over five GS or smaller than negative",
    "start": "2596900",
    "end": "2604430"
  },
  {
    "text": "five g's we need to have an alarm and there are three actions the first action",
    "start": "2604430",
    "end": "2609710"
  },
  {
    "text": "is to publish the value of acceleration to my phone you can use an SNS topic or",
    "start": "2609710",
    "end": "2616430"
  },
  {
    "text": "you can use an SNS endpoint target directly like a device so in this case I have a topic and I have my iPhone",
    "start": "2616430",
    "end": "2623540"
  },
  {
    "text": "subscribe to that topic so wizard could have message straight to my phone I'm also republishing these alarm messages",
    "start": "2623540",
    "end": "2630380"
  },
  {
    "text": "or messages that go over the five T threshold to another topic senses less",
    "start": "2630380",
    "end": "2635630"
  },
  {
    "text": "alarm and a third action if they go over five g's is to call a lambda function",
    "start": "2635630",
    "end": "2642070"
  },
  {
    "text": "which does something what does the lambda function do this is that lambda function here so the third thing that",
    "start": "2642070",
    "end": "2651320"
  },
  {
    "text": "happens if we exceed five GS is that lambda executes this particular function it loads data policy SDK it gets the",
    "start": "2651320",
    "end": "2660260"
  },
  {
    "text": "event which has which has the mqtt payload and then it does this it",
    "start": "2660260",
    "end": "2669410"
  },
  {
    "text": "basically changes the state of the shadow to have alarm equals true so when",
    "start": "2669410",
    "end": "2677210"
  },
  {
    "text": "the lambda function kicks all all it does is update the shadow state of the Intel Edison you can see it isn't",
    "start": "2677210",
    "end": "2683630"
  },
  {
    "text": "there it updates the Edison shadow and tells the reason that the alarm should",
    "start": "2683630",
    "end": "2688730"
  },
  {
    "text": "be true so next time Edison connects to the service it will get a delta from a a",
    "start": "2688730",
    "end": "2694850"
  },
  {
    "text": "SS IOT and it will say alarm should be true that's the lambda function on the Edison",
    "start": "2694850",
    "end": "2700850"
  },
  {
    "text": "side I'm running this code and let me show you what happens if there's the",
    "start": "2700850",
    "end": "2706280"
  },
  {
    "text": "Delta so if we get a delta on the Edison this is running on the Edison chaser so we use the nodejs SDK on the Edison",
    "start": "2706280",
    "end": "2713450"
  },
  {
    "text": "Linux if alarm is true we write 5 volts",
    "start": "2713450",
    "end": "2720650"
  },
  {
    "text": "ovn April 5 volts of power to pin number 5 which has to relay switch which will switch 12 volts to the alarm lamp but",
    "start": "2720650",
    "end": "2728870"
  },
  {
    "text": "because it's really painful and loud after 3 seconds with R it's off the alarm and we also update the state in",
    "start": "2728870",
    "end": "2735380"
  },
  {
    "text": "the shadow back to not in alarm this is running on the editor so those are the",
    "start": "2735380",
    "end": "2741800"
  },
  {
    "text": "two rules all the data to Keaney sees so we can visualize all of it if it's over 5 G's SNS par please republish to",
    "start": "2741800",
    "end": "2749090"
  },
  {
    "text": "another mqtt topic and kick off the lambda function which should raise the alarm with the Edison so let's see how",
    "start": "2749090",
    "end": "2756170"
  },
  {
    "text": "that works let's have the visualization graph here and on the bottom here on the",
    "start": "2756170",
    "end": "2766070"
  },
  {
    "text": "bottom terminal window we can subscribe to the alarm topic so if we get messages",
    "start": "2766070",
    "end": "2771170"
  },
  {
    "text": "to the bottom right corner window they should be over 5 G's only only those",
    "start": "2771170",
    "end": "2777020"
  },
  {
    "text": "messages the top right has all of the messages coming from the accelerometers and then the visualization visualizes",
    "start": "2777020",
    "end": "2784910"
  },
  {
    "text": "all the data so let's see what happens let's get my phone visible as well now",
    "start": "2784910",
    "end": "2789950"
  },
  {
    "text": "we are good to go alright so I'll choose the Eun I start wiggling the accelerometer let's start going negative",
    "start": "2789950",
    "end": "2796480"
  },
  {
    "text": "they start going below zero there you go start having negative values",
    "start": "2796480",
    "end": "2802040"
  },
  {
    "text": "let's go positive a little bit back there ok let's go and get it oh we went over 5 and",
    "start": "2802040",
    "end": "2810050"
  },
  {
    "text": "wait a few seconds no there isn't a",
    "start": "2810050",
    "end": "2816360"
  },
  {
    "text": "sleeping hello alright another matter I'm gonna show you how I'm going to debug this anyway",
    "start": "2816360",
    "end": "2823830"
  },
  {
    "text": "it is to develop a system so let's take the serial console to the Edison we plug it into my laptop we simply need to",
    "start": "2823830",
    "end": "2831540"
  },
  {
    "text": "restart the app on the Edison so now I'm gonna use screen on my Mac I connected",
    "start": "2831540",
    "end": "2837060"
  },
  {
    "text": "the serial cable to the Edison serial port we log into the Linux there we go",
    "start": "2837060",
    "end": "2842460"
  },
  {
    "text": "so I'm now locked in material console to the Edison and I made a system service",
    "start": "2842460",
    "end": "2848700"
  },
  {
    "text": "out of this node.js app so simply I'm just gonna try this restart the my IOT",
    "start": "2848700",
    "end": "2854580"
  },
  {
    "text": "service that's the node.js app that we are running and I have a little lamp",
    "start": "2854580",
    "end": "2860100"
  },
  {
    "text": "here indicating that it should be started and running what we can also do",
    "start": "2860100",
    "end": "2866240"
  },
  {
    "text": "is look at the log files alright",
    "start": "2866240",
    "end": "2873510"
  },
  {
    "text": "that's normal that time oh don't worry so let's try it again let's go over five T's there you go",
    "start": "2873510",
    "end": "2883579"
  },
  {
    "text": "and that was successful so the Edison received the shadow state and if you",
    "start": "2886020",
    "end": "2892260"
  },
  {
    "text": "look at my phone I'm going to show you the SNS still so it's on the phone do it",
    "start": "2892260",
    "end": "2900600"
  },
  {
    "text": "one more time so we can see SNS giving us that message on the phone I'm gonna",
    "start": "2900600",
    "end": "2909090"
  },
  {
    "text": "plug in the phone here bear with me one second quite a few cables here there you go",
    "start": "2909090",
    "end": "2918110"
  },
  {
    "text": "switch to my phone get that guy back",
    "start": "2918110",
    "end": "2923340"
  },
  {
    "text": "there so that's a live feed from our iPhone let's do one more look at the",
    "start": "2923340",
    "end": "2929640"
  },
  {
    "text": "graph and let's have an earthquake here come on then jeez yay there you go",
    "start": "2929640",
    "end": "2942050"
  },
  {
    "text": "cool so that's an example of an end-to-end solution so just to run to it",
    "start": "2943390",
    "end": "2949630"
  },
  {
    "text": "again device is sending accelerometer data to the same topic in a deploys IOT one rule all the data to Kinesis we",
    "start": "2949630",
    "end": "2956349"
  },
  {
    "text": "visualize that if we go over five g's with the sequel statement on the rule engine saying that post message to my",
    "start": "2956349",
    "end": "2962650"
  },
  {
    "text": "phone which worked : I'm the function which worked the lambda function updated the shadow state of the Edison to be",
    "start": "2962650",
    "end": "2969549"
  },
  {
    "text": "alarm equals true it is in red t shadow state when I restarted the app and then",
    "start": "2969549",
    "end": "2975760"
  },
  {
    "text": "edit and flip the sweets on the alarm and then after three seconds it went back to alarm status off right hope you",
    "start": "2975760",
    "end": "2984549"
  },
  {
    "text": "enjoyed the demo the three things that you should remember from this system is it's super easy for anybody now to",
    "start": "2984549",
    "end": "2989589"
  },
  {
    "text": "connect the device our service makes it easy to handle it on the backend side security is owned by default strong",
    "start": "2989589",
    "end": "2996400"
  },
  {
    "text": "security and because of the hardware partners if we have it our partners and the getting started kids it's easy for",
    "start": "2996400",
    "end": "3002369"
  },
  {
    "text": "you to get started and each one of these Hardware kids has a hello world application that you can take as a baseline thank you very much and please",
    "start": "3002369",
    "end": "3009900"
  },
  {
    "text": "remember to evaluate our system thank you",
    "start": "3009900",
    "end": "3013670"
  }
]