[
  {
    "start": "0",
    "end": "38000"
  },
  {
    "text": "i guess we will get started um hello everybody uh welcome to this uh event uh",
    "start": "1520",
    "end": "9679"
  },
  {
    "text": "SDDD 404 uh Amazon RDS for Microsoft SQL Server Deep Dive um my name is Gim Sim Chua and",
    "start": "9679",
    "end": "18960"
  },
  {
    "text": "I'm a product manager for Amazon Web Services um with me today is uh Phil uh",
    "start": "18960",
    "end": "26160"
  },
  {
    "text": "Interar from uh also from Amazon Web Services he's our database engineer and",
    "start": "26160",
    "end": "32360"
  },
  {
    "text": "also Miguel from out",
    "start": "32360",
    "end": "37040"
  },
  {
    "text": "systems so in today's deep dive session I'd like to talk a little bit about how",
    "start": "37640",
    "end": "44079"
  },
  {
    "start": "38000",
    "end": "38000"
  },
  {
    "text": "you can build high availability and reliability systems using some of the exciting new features uh that we have",
    "start": "44079",
    "end": "51039"
  },
  {
    "text": "released in AWS uh I will also talk a little bit about some of the uh new instance and storage",
    "start": "51039",
    "end": "58800"
  },
  {
    "text": "types that uh Andy spoke about today in his uh keynote speech this morning uh",
    "start": "58800",
    "end": "65119"
  },
  {
    "text": "that will provide more cost-effective computing um and I will also uh go into",
    "start": "65119",
    "end": "72000"
  },
  {
    "text": "uh some traditional uh and wellestablished techniques for creating high performance databases and then",
    "start": "72000",
    "end": "79119"
  },
  {
    "text": "lastly I'll invite um Miguel up to stage uh and he will share with us how",
    "start": "79119",
    "end": "86000"
  },
  {
    "text": "outsystems uh leverages uh SQL server uh to build uh their outsystems platform",
    "start": "86000",
    "end": "95399"
  },
  {
    "text": "so um in May of this year uh we released a new feature that allowed um our",
    "start": "96000",
    "end": "102320"
  },
  {
    "text": "customers uh to launch RDSQL server uh in multiAZ now multi-AZ uses SQL servers",
    "start": "102320",
    "end": "111759"
  },
  {
    "text": "native mirroring technology to provide enhanced availability and reliability",
    "start": "111759",
    "end": "118799"
  },
  {
    "text": "uh what multi-AZ basically is is an it is an automatic synchronous replication",
    "start": "118799",
    "end": "125600"
  },
  {
    "text": "of your database to a totally different standby instance that lives in a",
    "start": "125600",
    "end": "131120"
  },
  {
    "text": "different availability zone so how does um multi-AZ work well",
    "start": "131120",
    "end": "138080"
  },
  {
    "text": "here's a typical uh architecture diagram of an application that uses uh Microsoft",
    "start": "138080",
    "end": "144560"
  },
  {
    "text": "SQL Server for its database layer uh the application is configured uh to",
    "start": "144560",
    "end": "152160"
  },
  {
    "text": "use uh Microsoft SQL server through its DNS name because it's running in",
    "start": "152160",
    "end": "157920"
  },
  {
    "text": "multi-AZ uh the data is synchronously replicated in a standby",
    "start": "157920",
    "end": "164360"
  },
  {
    "text": "instance and this standby instance lives in a totally different availability zone",
    "start": "164360",
    "end": "169760"
  },
  {
    "text": "with its own uh physical infrastructure however it does have high-speed network",
    "start": "169760",
    "end": "175680"
  },
  {
    "text": "connectivity to other availability zones in that",
    "start": "175680",
    "end": "180920"
  },
  {
    "text": "region and lastly there's also another uh SQL server that resides in a third",
    "start": "180920",
    "end": "187599"
  },
  {
    "text": "availability zone acting as the witness now the purpose of this witness is to pull the master database periodically to",
    "start": "187599",
    "end": "195360"
  },
  {
    "text": "ensure uh that it is uh running uh up and running and online and functioning",
    "start": "195360",
    "end": "200959"
  },
  {
    "text": "normally so let's see what happens uh when the master database goes offline",
    "start": "200959",
    "end": "207599"
  },
  {
    "text": "due to uh some service failure well the witness will notice",
    "start": "207599",
    "end": "214480"
  },
  {
    "text": "that the master database is offline and auto uh and automatically cause a",
    "start": "214480",
    "end": "220080"
  },
  {
    "text": "failover to happen uh the DNS server will now point to uh the standby",
    "start": "220080",
    "end": "226760"
  },
  {
    "text": "instance and because the application is configured to point uh using the DNS uh",
    "start": "226760",
    "end": "232799"
  },
  {
    "text": "name it does not need to be reconfigured to point to the standby",
    "start": "232799",
    "end": "239519"
  },
  {
    "text": "instance now after the failover RDSQL server will then automatically uh create",
    "start": "241799",
    "end": "248000"
  },
  {
    "text": "a new standby uh that will reside in another uh availability",
    "start": "248000",
    "end": "254959"
  },
  {
    "start": "255000",
    "end": "255000"
  },
  {
    "text": "zone so I'd like to go over some of the um multi-AZ best practices uh first you",
    "start": "255000",
    "end": "262960"
  },
  {
    "text": "can configure database events to monitor failovers",
    "start": "262960",
    "end": "268440"
  },
  {
    "text": "uh you can uh uh for instance during a fail over uh be uh notified uh that the",
    "start": "268440",
    "end": "275840"
  },
  {
    "text": "event happened uh through email or text messaging and because to ensure uh",
    "start": "275840",
    "end": "283440"
  },
  {
    "text": "database consistency uh we have made sure that Amazon RDS uh mirrors all your",
    "start": "283440",
    "end": "289520"
  },
  {
    "text": "databases uh in that instance uh if however you do not want uh certain",
    "start": "289520",
    "end": "295520"
  },
  {
    "text": "databases to be mirrored uh you're welcome to set up another uh instance in",
    "start": "295520",
    "end": "302400"
  },
  {
    "text": "single a and move those databases that you do not want mirrored over to that instance",
    "start": "302400",
    "end": "308800"
  },
  {
    "text": "also if you cache your uh DNS data uh we",
    "start": "308800",
    "end": "313919"
  },
  {
    "text": "suggest and highly recommend that you set your uh time to live or TTL value to",
    "start": "313919",
    "end": "319440"
  },
  {
    "text": "less than 30 seconds because after a failover the IP address of that server",
    "start": "319440",
    "end": "324880"
  },
  {
    "text": "may change uh if you cache it for an extended period of time you may be",
    "start": "324880",
    "end": "330160"
  },
  {
    "text": "hitting your application may be uh hitting up against a an IP address that",
    "start": "330160",
    "end": "335440"
  },
  {
    "text": "is no longer in service we do not recommend that you turn on",
    "start": "335440",
    "end": "340479"
  },
  {
    "text": "simple recovery mode offline mode or readonly mode because these modes actually turn off um transaction logs",
    "start": "340479",
    "end": "348720"
  },
  {
    "text": "and as you know uh SQL server replication uh re uh relies on the uh",
    "start": "348720",
    "end": "355759"
  },
  {
    "text": "the transaction logs to do synchronous replication however rest assured uh if",
    "start": "355759",
    "end": "361680"
  },
  {
    "text": "you uh we will fix them for you if you do accidentally turn these modes on",
    "start": "361680",
    "end": "368720"
  },
  {
    "text": "now we can't stress this more uh please test test test uh your application uh",
    "start": "370639",
    "end": "377199"
  },
  {
    "text": "test them to understand how long uh it takes uh the failover process",
    "start": "377199",
    "end": "382960"
  },
  {
    "text": "uh to go on uh because different databases different uh storage sizes",
    "start": "382960",
    "end": "388160"
  },
  {
    "text": "different instances uh different transactions will cause the failover times to be different um also you want",
    "start": "388160",
    "end": "395840"
  },
  {
    "text": "to test uh whether your application can actually switch over and connect to the",
    "start": "395840",
    "end": "402880"
  },
  {
    "text": "standby instance uh after the failover there are also a couple ways to",
    "start": "402880",
    "end": "408080"
  },
  {
    "text": "shorten your failover duration um if you do not have sufficient um IO provisioned",
    "start": "408080",
    "end": "415120"
  },
  {
    "text": "uh for your database workload you may encounter an ex uh a long uh failover",
    "start": "415120",
    "end": "420880"
  },
  {
    "text": "time uh because uh your database uh relies on",
    "start": "420880",
    "end": "427479"
  },
  {
    "text": "uh IO to be present um sufficient IO to be present for database recovery you",
    "start": "427479",
    "end": "435360"
  },
  {
    "text": "will also uh realize that um database recovery uh is dependent on uh how big",
    "start": "435360",
    "end": "442880"
  },
  {
    "text": "your transactions are so therefore if you have large transactions your database recovery times will be",
    "start": "442880",
    "end": "448479"
  },
  {
    "text": "lengthened so we highly recommend that you use smaller transactions to improve",
    "start": "448479",
    "end": "453599"
  },
  {
    "text": "the failover duration uh we also suggest uh that you consider",
    "start": "453599",
    "end": "460800"
  },
  {
    "text": "uh in your application uh the that there may be elevated latencies uh because",
    "start": "460800",
    "end": "467360"
  },
  {
    "text": "RDSQL server is automatically replicating your data over to a secondary database however the the",
    "start": "467360",
    "end": "475120"
  },
  {
    "text": "upside is that your data your data is being committed to two separate databases",
    "start": "475120",
    "end": "480879"
  },
  {
    "text": "and lastly we recommend that you deploy uh your applications to all the",
    "start": "480879",
    "end": "486319"
  },
  {
    "text": "available uh availability zones um because if your",
    "start": "486319",
    "end": "492639"
  },
  {
    "text": "if a particular availability zone does go down the applications in the other",
    "start": "492639",
    "end": "498800"
  },
  {
    "text": "availability zones will be able to take over",
    "start": "498800",
    "end": "503800"
  },
  {
    "text": "now that we've seen how to build um high available and reliable databases uh with",
    "start": "503840",
    "end": "509120"
  },
  {
    "text": "multi-AZ um I want to take a look at some of the new storage and computing",
    "start": "509120",
    "end": "514320"
  },
  {
    "text": "types uh that will be uh a little bit more cost- effective for some people um",
    "start": "514320",
    "end": "521919"
  },
  {
    "text": "now there are some workloads that are by nature uh spiky or bursty um meaning",
    "start": "521919",
    "end": "529360"
  },
  {
    "text": "that you have short periods of high IO and uh CPU utilization um however most of the time",
    "start": "529360",
    "end": "536399"
  },
  {
    "text": "that workload is low um so to help our customers save some money um AWS has",
    "start": "536399",
    "end": "543440"
  },
  {
    "text": "introduced a new storage type called generalpurpose storage or GP2 and a new instance type called T2",
    "start": "543440",
    "end": "552120"
  },
  {
    "start": "553000",
    "end": "553000"
  },
  {
    "text": "now these uh storage and instance types are uh have a characteristics uh that uh",
    "start": "553519",
    "end": "560560"
  },
  {
    "text": "is designed to uh handle bursty or spiky traffic um but yet pro provide a very",
    "start": "560560",
    "end": "568160"
  },
  {
    "text": "decent baseline performance throughout uh for instance for GP2 um it is",
    "start": "568160",
    "end": "574360"
  },
  {
    "text": "SSDbased it has a base performance of three IOPS per gigabyte",
    "start": "574360",
    "end": "580160"
  },
  {
    "text": "uh but it can burst up to 3,000 IOPS per second um its performance uh scales",
    "start": "580160",
    "end": "586959"
  },
  {
    "text": "linearly and predictably and has a flat a very simple uh fee structure uh flat g",
    "start": "586959",
    "end": "593920"
  },
  {
    "text": "per gigabyte rate um and also no uh additional IO fees uh similarly for T2",
    "start": "593920",
    "end": "603839"
  },
  {
    "text": "uh instance types uh they have a great uh base performance and ability to burst",
    "start": "603839",
    "end": "610160"
  },
  {
    "text": "up to 100% uh CPU utilization and uh you earn credits when",
    "start": "610160",
    "end": "616240"
  },
  {
    "text": "your workload is below uh the base performance um you then accumulate these",
    "start": "616240",
    "end": "622000"
  },
  {
    "text": "credits and these credits uh uh are available to you for about 24",
    "start": "622000",
    "end": "628000"
  },
  {
    "text": "hours so how do uh GP2 credits work well I",
    "start": "628000",
    "end": "634000"
  },
  {
    "start": "630000",
    "end": "630000"
  },
  {
    "text": "like to think of it as a leaky bucket so um you accumulate",
    "start": "634000",
    "end": "640279"
  },
  {
    "text": "approximately three IOPS per gigabyte per second uh in your bucket",
    "start": "640279",
    "end": "647120"
  },
  {
    "text": "and this bucket can hold a maximum of 5.4 million IOPS per volume",
    "start": "647120",
    "end": "654560"
  },
  {
    "text": "uh from this bucket you can use the credits to spend up to 3,000 IOPS per second and after you exhaust all your",
    "start": "654560",
    "end": "662560"
  },
  {
    "text": "credits in the bucket you go you fall back to uh your base performance of three IOPS per",
    "start": "662560",
    "end": "670040"
  },
  {
    "text": "second so now let's take a look at a possible uh real life scenario um say",
    "start": "670040",
    "end": "677120"
  },
  {
    "start": "672000",
    "end": "672000"
  },
  {
    "text": "for instance you have a SQL server with 500 gigabytes of magnetic storage uh",
    "start": "677120",
    "end": "683640"
  },
  {
    "text": "provisioned now this magnetic storage costs you 10 cents per gigabyte month",
    "start": "683640",
    "end": "690079"
  },
  {
    "text": "and cost you a total of $50 per month now um every day at 2 am in the morning",
    "start": "690079",
    "end": "698560"
  },
  {
    "text": "uh an automatic report gets kicked off but you notice that the performance",
    "start": "698560",
    "end": "704560"
  },
  {
    "text": "is really really sluggish uh and sometimes it does not complete in time",
    "start": "704560",
    "end": "710480"
  },
  {
    "text": "for the 8 a.m meeting for the executives to review the report so you look into um",
    "start": "710480",
    "end": "716640"
  },
  {
    "text": "provision diops uh but then you realize oh my god uh this thing costs more than",
    "start": "716640",
    "end": "721839"
  },
  {
    "text": "four times the cost of a magnetic so it's like uh that's way too expensive so",
    "start": "721839",
    "end": "728320"
  },
  {
    "text": "you decide to move your database over to GP2 uh which only costs uh marginally",
    "start": "728320",
    "end": "734639"
  },
  {
    "text": "more expensive at 11.5 cents per gigabyte month and so your storage will cost you only",
    "start": "734639",
    "end": "741720"
  },
  {
    "text": "$57.50 so you run your report and you notice that wow this is great um with",
    "start": "741720",
    "end": "748320"
  },
  {
    "text": "3,000 uh with the ability to burst to 3,000 IOPS the report uh gets generated",
    "start": "748320",
    "end": "754079"
  },
  {
    "text": "within 2 hours and it's done by 4:00 a.m uh with plenty of time to spare you use",
    "start": "754079",
    "end": "760399"
  },
  {
    "text": "up all your credits but that's okay because uh you get to replenish your credits throughout the day when your uh",
    "start": "760399",
    "end": "767120"
  },
  {
    "text": "usage is low so in this example we see that in a low",
    "start": "767120",
    "end": "773600"
  },
  {
    "start": "770000",
    "end": "770000"
  },
  {
    "text": "IO usage scenario um GP2 is only marginally more expensive",
    "start": "773600",
    "end": "780560"
  },
  {
    "text": "than magnetic but GP2 can actually burst up to 3,000 IOPS per second in the high",
    "start": "780560",
    "end": "788720"
  },
  {
    "text": "IO usage scenario um although provisioned IOPS can handle this scenar",
    "start": "788720",
    "end": "795040"
  },
  {
    "text": "uh handle this case it is significantly more expensive in our example is four times more expensive than uh GP2 in the",
    "start": "795040",
    "end": "802959"
  },
  {
    "text": "case of magnetic it's not even capable of handling such a",
    "start": "802959",
    "end": "808480"
  },
  {
    "text": "workload so similarly for T2 credits um",
    "start": "808680",
    "end": "813839"
  },
  {
    "start": "809000",
    "end": "809000"
  },
  {
    "text": "you can use uh you can earn uh t uh CPU credits when you have a low workload and",
    "start": "813839",
    "end": "820959"
  },
  {
    "text": "use them during high utilization um for T2 one CPU credit is",
    "start": "820959",
    "end": "827440"
  },
  {
    "text": "equivalent to running a virtual CPU at 100% utilization for 1",
    "start": "827440",
    "end": "833720"
  },
  {
    "text": "minute or a virtual CPU at 50% utilization for 2 minutes or two virtual",
    "start": "833720",
    "end": "842720"
  },
  {
    "text": "CPUs uh at 25 uh% utilization for 2",
    "start": "842720",
    "end": "847760"
  },
  {
    "text": "minutes and so forth so for instance uh you launch a T2 micro",
    "start": "847760",
    "end": "854399"
  },
  {
    "text": "instance type uh that has one virtual CPU and uh you're given an initial CPU",
    "start": "854399",
    "end": "861360"
  },
  {
    "text": "credit of 30 units this 30 units allows you to have decent uh performance during",
    "start": "861360",
    "end": "868120"
  },
  {
    "text": "launch and uh you earn about six units uh per hour uh you have a base",
    "start": "868120",
    "end": "875120"
  },
  {
    "text": "performance of 10% so if your workload is less than 10% uh you get to",
    "start": "875120",
    "end": "880399"
  },
  {
    "text": "accumulate these credits for a maximum of 144",
    "start": "880399",
    "end": "885760"
  },
  {
    "text": "uh units total so um if you use up all these",
    "start": "885760",
    "end": "891519"
  },
  {
    "text": "units to burst to 100% you uh utilization um then if you use it all up",
    "start": "891519",
    "end": "898079"
  },
  {
    "text": "then you fall back to a base performance of 10% of your uh CPU utilization now",
    "start": "898079",
    "end": "905519"
  },
  {
    "text": "it's important to note that uh these CPU credits do expire uh after 24 hours uh",
    "start": "905519",
    "end": "913519"
  },
  {
    "text": "after you earned it and they are not persisted uh between reboots but you are",
    "start": "913519",
    "end": "919760"
  },
  {
    "text": "however given uh another initial uh set of 30 CPU credits uh upon startup of",
    "start": "919760",
    "end": "927680"
  },
  {
    "text": "that instance so using the same GP2 um uh example we",
    "start": "927680",
    "end": "935120"
  },
  {
    "start": "930000",
    "end": "930000"
  },
  {
    "text": "see earlier uh you your report will chew up 100% CPU utilization uh to generate",
    "start": "935120",
    "end": "944079"
  },
  {
    "text": "that report um and you use up all your uh credits during that time however you",
    "start": "944079",
    "end": "951279"
  },
  {
    "text": "will you uh the remaining time you will build up uh your credits again because your utilization is fairly low we see",
    "start": "951279",
    "end": "958959"
  },
  {
    "text": "that T2 is um quite uh the cost of T2 is",
    "start": "958959",
    "end": "964000"
  },
  {
    "text": "actually lower than uh T1 micro M1 small and M1 medium in most",
    "start": "964000",
    "end": "972000"
  },
  {
    "text": "regions so I'd like to turn our attention now to um how one can um",
    "start": "972360",
    "end": "977839"
  },
  {
    "text": "design high performance databases uh most of the time when we talk about uh",
    "start": "977839",
    "end": "982880"
  },
  {
    "text": "increasing performance we talk about uh lowering your latency as well as",
    "start": "982880",
    "end": "988560"
  },
  {
    "text": "increasing your throughput so there are uh a number of",
    "start": "988560",
    "end": "993600"
  },
  {
    "start": "993000",
    "end": "993000"
  },
  {
    "text": "very wellestablished techniques uh for improving performance uh push button",
    "start": "993600",
    "end": "999120"
  },
  {
    "text": "scaling charting and provisioned IOPS will help you increase your throughput",
    "start": "999120",
    "end": "1004240"
  },
  {
    "text": "um provisioned IOPS will also help you reduce your latency",
    "start": "1004240",
    "end": "1010120"
  },
  {
    "text": "um so let's take a look uh deeper look into how these techniques uh are done so",
    "start": "1010160",
    "end": "1016240"
  },
  {
    "text": "with push button scaling you can scale vertically so for instance if you start",
    "start": "1016240",
    "end": "1022240"
  },
  {
    "text": "out with a low in a smaller instance um you can with a push of a button scale up",
    "start": "1022240",
    "end": "1028400"
  },
  {
    "text": "to a much bigger instance uh and what RDS SQL server will do for",
    "start": "1028400",
    "end": "1034798"
  },
  {
    "text": "you it will it will automatically provision that instance for you and",
    "start": "1034799",
    "end": "1040160"
  },
  {
    "text": "reattach your datab uh your data files for you automatically now for um sharding uh it",
    "start": "1040160",
    "end": "1049120"
  },
  {
    "text": "allows you to scale out uh your databases horizontally meaning that you",
    "start": "1049120",
    "end": "1054400"
  },
  {
    "text": "can actually take your database and uh chop it up to small little uh smaller",
    "start": "1054400",
    "end": "1060280"
  },
  {
    "text": "databases um so for instance you can use a",
    "start": "1060280",
    "end": "1066760"
  },
  {
    "text": "uh a predefined key uh on uh the customer ID um such as uh for all",
    "start": "1066760",
    "end": "1073760"
  },
  {
    "text": "customer ID starting with one will go into uh the first database shard and so",
    "start": "1073760",
    "end": "1078960"
  },
  {
    "text": "forth now um sharding is not automatic but with RDSQL server uh it we allow you",
    "start": "1078960",
    "end": "1086559"
  },
  {
    "text": "to spin up hundreds if not thousands of these servers um really really",
    "start": "1086559",
    "end": "1092039"
  },
  {
    "text": "easily and lastly um if you want to improve the IO performance of your database you can purchase uh GP2",
    "start": "1092039",
    "end": "1099760"
  },
  {
    "text": "instances or provisioned IOPS to provide highio a higher IO throughput for your",
    "start": "1099760",
    "end": "1106160"
  },
  {
    "text": "databases currently SQL Server has a one terabyte and 10,000 IOPS limit um but",
    "start": "1106160",
    "end": "1114640"
  },
  {
    "text": "you can definitely use sharding uh to overcome uh those",
    "start": "1114640",
    "end": "1119960"
  },
  {
    "text": "limits um of course you can use any uh any one of these three techniques in",
    "start": "1119960",
    "end": "1126320"
  },
  {
    "text": "combination or individually to improve your the performance of your database",
    "start": "1126320",
    "end": "1133880"
  },
  {
    "text": "now um I have the distinct pleasure of welcoming on stage uh Miguel who will",
    "start": "1133919",
    "end": "1139440"
  },
  {
    "text": "talk about uh his uh experience with RDS SQL server and how we leverage it for uh",
    "start": "1139440",
    "end": "1146559"
  },
  {
    "text": "the out systems platform thank you thank you",
    "start": "1146559",
    "end": "1151720"
  },
  {
    "text": "so uh hello my name is Miguel and I'm a lead cloud software engineer in the out",
    "start": "1152880",
    "end": "1159280"
  },
  {
    "text": "systems R&D uh department uh I'm responsible for the development of the",
    "start": "1159280",
    "end": "1164480"
  },
  {
    "text": "core framework uh that supports our platform as a service uh offer in the cloud i'm here",
    "start": "1164480",
    "end": "1172160"
  },
  {
    "text": "to share our experience uh leveraging the Amazon RDSSQL server uh with the",
    "start": "1172160",
    "end": "1178480"
  },
  {
    "text": "outsystems platform uh most of you never heard about outsystems so I will start with a",
    "start": "1178480",
    "end": "1185919"
  },
  {
    "text": "very short technical um deep dive of the platform over SQL server",
    "start": "1185919",
    "end": "1194400"
  },
  {
    "start": "1194000",
    "end": "1194000"
  },
  {
    "text": "so Outsystems is a software company that provides uh the Outsystems rapid",
    "start": "1194400",
    "end": "1201919"
  },
  {
    "text": "application delivery platform which enables our customers to deliver",
    "start": "1201919",
    "end": "1207799"
  },
  {
    "text": "uh custom enterprise mobile and web applications faster than uh traditional",
    "start": "1207799",
    "end": "1215720"
  },
  {
    "text": "technologies the developers uh build the applications",
    "start": "1215720",
    "end": "1220960"
  },
  {
    "text": "once for all devices taking advantage of full responsive uh design and easily",
    "start": "1220960",
    "end": "1228640"
  },
  {
    "text": "integrate with external systems using web services or uh custom connectors",
    "start": "1228640",
    "end": "1236480"
  },
  {
    "text": "they use a visual language IDE which allows them to build applications faster",
    "start": "1236480",
    "end": "1243280"
  },
  {
    "text": "and with effortless change and a manage application management uh life cycle",
    "start": "1243280",
    "end": "1249760"
  },
  {
    "text": "which uh provides the way to deploy the applications across several staging",
    "start": "1249760",
    "end": "1255919"
  },
  {
    "text": "environments up to production and these environments can be run on the cloud uh",
    "start": "1255919",
    "end": "1262400"
  },
  {
    "text": "on premises or both in a hybrid scenario so the outsystems platform",
    "start": "1262400",
    "end": "1269640"
  },
  {
    "text": "architecture has in its core the platform server which is responsible for",
    "start": "1269640",
    "end": "1275320"
  },
  {
    "text": "application deployment and support runtime activities",
    "start": "1275320",
    "end": "1280960"
  },
  {
    "text": "we also provide the visual language development IDE which enables the",
    "start": "1280960",
    "end": "1286240"
  },
  {
    "text": "developers to build their mobile and web applications we also have an integration",
    "start": "1286240",
    "end": "1293520"
  },
  {
    "text": "IDE which extends those applications with custom.net or Java code",
    "start": "1293520",
    "end": "1301120"
  },
  {
    "text": "we have a web management tool to uh configure the platform server and",
    "start": "1301120",
    "end": "1306640"
  },
  {
    "text": "provide easy access to logging and reporting capabilities and finally our",
    "start": "1306640",
    "end": "1312720"
  },
  {
    "text": "application life cycle management tool which allows to push the applications across several uh environments with a",
    "start": "1312720",
    "end": "1320080"
  },
  {
    "text": "single click the platform server uh in its core",
    "start": "1320080",
    "end": "1325679"
  },
  {
    "text": "has uh a database this is where SQL server comes in uh it's basically",
    "start": "1325679",
    "end": "1331679"
  },
  {
    "text": "deployed on standard technologies uh like IIS and JBoss for application",
    "start": "1331679",
    "end": "1337280"
  },
  {
    "text": "server uh which is where the applications reside the platform",
    "start": "1337280",
    "end": "1342400"
  },
  {
    "text": "metadata and the application definition is stored on the",
    "start": "1342400",
    "end": "1347880"
  },
  {
    "text": "database so when the developer publish the application it deploys the",
    "start": "1347880",
    "end": "1353280"
  },
  {
    "start": "1350000",
    "end": "1350000"
  },
  {
    "text": "application on the development environment this is done with a fully automated process with a single",
    "start": "1353280",
    "end": "1360840"
  },
  {
    "text": "click then the DevOps teams can actually push the applications across the several",
    "start": "1360840",
    "end": "1368240"
  },
  {
    "text": "staging environments up to production also uh at the push of the",
    "start": "1368240",
    "end": "1375400"
  },
  {
    "text": "button so how does the platform work with SQL Server",
    "start": "1375400",
    "end": "1382799"
  },
  {
    "text": "it all starts with the development environment uh the visual development environment allows the developers to",
    "start": "1382799",
    "end": "1389679"
  },
  {
    "start": "1383000",
    "end": "1383000"
  },
  {
    "text": "build uh relational data models for the application uh rich user interfaces and",
    "start": "1389679",
    "end": "1397919"
  },
  {
    "text": "core logic workflows in addition to schedule and asynchronous tasks and to",
    "start": "1397919",
    "end": "1403840"
  },
  {
    "text": "model and execute business processes when the developer publish the",
    "start": "1403840",
    "end": "1410080"
  },
  {
    "text": "application uh onto the development environment it starts a process of code",
    "start": "1410080",
    "end": "1416400"
  },
  {
    "text": "generation to actually build the application in the background uh the data model definition",
    "start": "1416400",
    "end": "1425039"
  },
  {
    "text": "is translated into SQL scripts that will then run on the database uh but this",
    "start": "1425039",
    "end": "1431600"
  },
  {
    "text": "translation is based on introspecting the existing data model and generating",
    "start": "1431600",
    "end": "1438000"
  },
  {
    "text": "the SQL statements just uh for the updates required to achieve the new data",
    "start": "1438000",
    "end": "1444679"
  },
  {
    "text": "model uh this is done for tables uh columns indexes and foreign keys",
    "start": "1444679",
    "end": "1452159"
  },
  {
    "text": "on the other hand we also have the application code which is generated either inn net car or java and um we",
    "start": "1452159",
    "end": "1463039"
  },
  {
    "text": "optimize the code to achieve the best performance for instance if you have a",
    "start": "1463039",
    "end": "1469840"
  },
  {
    "text": "page view which shows uh data from a database table we generate the SQL",
    "start": "1469840",
    "end": "1477440"
  },
  {
    "text": "statement to fetch only the columns and the rows that are actually shown on that",
    "start": "1477440",
    "end": "1483919"
  },
  {
    "text": "page view this improves performance",
    "start": "1483919",
    "end": "1488600"
  },
  {
    "text": "so this is a very short introduction of how the outsystems platform works on an",
    "start": "1489039",
    "end": "1495520"
  },
  {
    "text": "on-remise scenario using a standalone SQL server last year uh we've noticed an",
    "start": "1495520",
    "end": "1502400"
  },
  {
    "text": "increased demand for having the outsystems platform running in the cloud as a service so with the maturity of the",
    "start": "1502400",
    "end": "1510080"
  },
  {
    "text": "cloud services we decided to go to the cloud the question remain when we launch",
    "start": "1510080",
    "end": "1516240"
  },
  {
    "text": "the infrastructure in the cloud should we install a standalone SQL server or",
    "start": "1516240",
    "end": "1522159"
  },
  {
    "text": "use a database service like Amazon RDS so the benefits of using a service",
    "start": "1522159",
    "end": "1529440"
  },
  {
    "start": "1527000",
    "end": "1527000"
  },
  {
    "text": "like Amazon RDS are obvious we have out of the box automatic backups high",
    "start": "1529440",
    "end": "1535919"
  },
  {
    "text": "availability using mirroring and the ease and the flexibility of deployments",
    "start": "1535919",
    "end": "1541679"
  },
  {
    "text": "using APIs which allow us to automate the process so would the platform work uh on",
    "start": "1541679",
    "end": "1550480"
  },
  {
    "text": "top of SQL server RDS we decided to put it to a test uh",
    "start": "1550480",
    "end": "1557360"
  },
  {
    "text": "and we early in the early stages we bumped into a a configuration problem",
    "start": "1557360",
    "end": "1563039"
  },
  {
    "text": "which is basically uh our initial setup was uh defining database file settings",
    "start": "1563039",
    "end": "1568320"
  },
  {
    "text": "which are not supported on Amazon RDS but they are not needed either so we",
    "start": "1568320",
    "end": "1574799"
  },
  {
    "text": "surpassed that problem and we then focus on the deployment and the runtime engine",
    "start": "1574799",
    "end": "1581760"
  },
  {
    "text": "so all our SQL scripts and the generated queries try to follow NCSQL patterns we",
    "start": "1581760",
    "end": "1588880"
  },
  {
    "text": "didn't expect many problems there and we are correct so we were ready to go to",
    "start": "1588880",
    "end": "1594559"
  },
  {
    "text": "the cloud the next challenge would be how",
    "start": "1594559",
    "end": "1599840"
  },
  {
    "text": "we're going to do it so we decided to define um a simple",
    "start": "1599840",
    "end": "1605679"
  },
  {
    "text": "architecture but effective and with the push of a button with a single click we",
    "start": "1605679",
    "end": "1611039"
  },
  {
    "text": "were able to deploy any number of non-production environments uh and a production environments taking",
    "start": "1611039",
    "end": "1618000"
  },
  {
    "text": "advantage of multi-AZ capabilities so we deployed the Amazon RDS with multi-AZ in",
    "start": "1618000",
    "end": "1626880"
  },
  {
    "text": "addition to uh several front ends uh scattered around the availability zones",
    "start": "1626880",
    "end": "1634080"
  },
  {
    "text": "uh behind an elastic load balancer we added uh a VPC and firewall",
    "start": "1634080",
    "end": "1640080"
  },
  {
    "text": "with internet gateway to provide the minimum requires for security",
    "start": "1640080",
    "end": "1645440"
  },
  {
    "text": "so the amazing part is that we automated all this process and in a couple of",
    "start": "1645440",
    "end": "1651520"
  },
  {
    "text": "hours we actually uh bootstrapped a rapid delivery infrastructure to our",
    "start": "1651520",
    "end": "1658760"
  },
  {
    "text": "customers uh when in their before we went to the cloud they usually took",
    "start": "1658760",
    "end": "1665440"
  },
  {
    "text": "weeks to do it on their on premise data centers",
    "start": "1665440",
    "end": "1671320"
  },
  {
    "text": "so we also extended our management tools to take advantage of the cloud",
    "start": "1671679",
    "end": "1677520"
  },
  {
    "text": "elasticity uh we've built in in our uh life cycle",
    "start": "1677520",
    "end": "1682960"
  },
  {
    "text": "management tool um features like adding new front-end",
    "start": "1682960",
    "end": "1688640"
  },
  {
    "text": "servers uh on the production environment as well as managing the uh Amazon RDSSQL",
    "start": "1688640",
    "end": "1695720"
  },
  {
    "text": "server for instance increasing the the storage size managing backups or",
    "start": "1695720",
    "end": "1701600"
  },
  {
    "text": "activating and deactivating the multi-AZ option whenever one of these um actions is",
    "start": "1701600",
    "end": "1709200"
  },
  {
    "text": "triggered it's processed uh on our core framework uh so we have to build an",
    "start": "1709200",
    "end": "1717640"
  },
  {
    "start": "1717000",
    "end": "1717000"
  },
  {
    "text": "orchestration framework to support all these requests here's a short example uh",
    "start": "1717640",
    "end": "1724000"
  },
  {
    "text": "of activating the multi-AZ um feature on the Amazon RDSSQL server which basically",
    "start": "1724000",
    "end": "1731120"
  },
  {
    "text": "calls an API to change the the mirroring",
    "start": "1731120",
    "end": "1736559"
  },
  {
    "text": "option group uh on the instance um this is done using the",
    "start": "1736559",
    "end": "1742080"
  },
  {
    "text": "outsystems technology and the wrapper for uh the API uh of Amazon web services",
    "start": "1742080",
    "end": "1750000"
  },
  {
    "start": "1748000",
    "end": "1748000"
  },
  {
    "text": "is done with AWS SDK for Java so in this simple example is as simple as you know",
    "start": "1750000",
    "end": "1756880"
  },
  {
    "text": "a couple of lines of code to trigger the to change the the option group of the",
    "start": "1756880",
    "end": "1762640"
  },
  {
    "text": "Amazon RDS and we are now able to activate and deactivate right from the",
    "start": "1762640",
    "end": "1768240"
  },
  {
    "text": "customer uh front end on the uh application life cycle management",
    "start": "1768240",
    "end": "1773320"
  },
  {
    "text": "tool so it was that simple uh last year when we decided to",
    "start": "1773320",
    "end": "1780159"
  },
  {
    "text": "go to the cloud we we had a great challenge uh we",
    "start": "1780159",
    "end": "1785760"
  },
  {
    "text": "actually had a very short and tight schedule to launch this offer in less than two months we had to uh design",
    "start": "1785760",
    "end": "1794159"
  },
  {
    "text": "implement and release our platform as a service offer in the cloud",
    "start": "1794159",
    "end": "1801080"
  },
  {
    "text": "uh due to the maturity of the Amazon Web Services APIs the flexibility and",
    "start": "1801640",
    "end": "1808840"
  },
  {
    "text": "stability allow us to focus on our core offer and release on time",
    "start": "1808840",
    "end": "1815840"
  },
  {
    "text": "uh currently uh over 50% of our cloud",
    "start": "1815840",
    "end": "1821360"
  },
  {
    "text": "based uh customers are using the Amazon RDS for SQL server instead of other RDS",
    "start": "1821360",
    "end": "1829600"
  },
  {
    "text": "that we support so this was a very a bit of our",
    "start": "1829600",
    "end": "1835600"
  },
  {
    "text": "story uh and how we are leveraging the SQL server in in Amazon uh to deploy our",
    "start": "1835600",
    "end": "1842559"
  },
  {
    "text": "rapid application delivery platform uh if you have if you're curious to know",
    "start": "1842559",
    "end": "1847679"
  },
  {
    "text": "a little bit more about outsystems go to outsystems.com try out our free offer uh",
    "start": "1847679",
    "end": "1854240"
  },
  {
    "text": "and I'll be available also to answer any questions in after the session so thank",
    "start": "1854240",
    "end": "1860159"
  },
  {
    "text": "you very much thank you thank you very much um Miguel",
    "start": "1860159",
    "end": "1868240"
  },
  {
    "text": "for that very very interesting talk um now I'd just like to call upon all of",
    "start": "1868240",
    "end": "1876080"
  },
  {
    "text": "you to uh try out multi-AZ if you have not and also uh give uh the new T2 and",
    "start": "1876080",
    "end": "1883760"
  },
  {
    "text": "GP2 storage types a spin and uh let us know",
    "start": "1883760",
    "end": "1888919"
  },
  {
    "text": "um I will be up here uh for the next couple minutes along with Phil and",
    "start": "1888919",
    "end": "1896240"
  },
  {
    "text": "Miguel to answer any questions that you may have thank you for uh attending this session",
    "start": "1896240",
    "end": "1902920"
  },
  {
    "text": "[Applause]",
    "start": "1902920",
    "end": "1908560"
  }
]