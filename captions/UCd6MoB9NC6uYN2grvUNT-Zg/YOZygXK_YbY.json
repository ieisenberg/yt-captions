[
  {
    "start": "0",
    "end": "24000"
  },
  {
    "text": "- [Tom Moore] Hi, this\nis Tom Moore with AWS. This is part five in our\nvideo series about modernizing",
    "start": "1210",
    "end": "7220"
  },
  {
    "text": "applications on AWS. In this video series, our customer Acme Financial\nData Services has been going",
    "start": "7220",
    "end": "15349"
  },
  {
    "text": "through a process of moving\ntheir application from a legacy monolith on premises to\na modern architecture",
    "start": "15350",
    "end": "21880"
  },
  {
    "text": "deployed on AWS. Let's take a quick recap\nof where our customer",
    "start": "21880",
    "end": "28150"
  },
  {
    "start": "24000",
    "end": "95000"
  },
  {
    "text": "Acme is in their journey.",
    "start": "28150",
    "end": "30403"
  },
  {
    "text": "In the previous videos in this series, Acme Financial Data Services\nwas able to segment out",
    "start": "33590",
    "end": "39190"
  },
  {
    "text": "functionalities and\nmonolithic application. They were able to convert code\nfrom an older.net framework",
    "start": "39190",
    "end": "47091"
  },
  {
    "text": "application into a\nmodern.net core application. And they have configured their application to build as a container.",
    "start": "47091",
    "end": "53293"
  },
  {
    "text": "Those efforts have\nresulted in the application being more portable, lower weight from a\ndevelopment perspective,",
    "start": "54670",
    "end": "61200"
  },
  {
    "text": "and much more aligned with a microservices architecture.",
    "start": "61200",
    "end": "64003"
  },
  {
    "text": "We have all the codes\nstored in a Git repository. In this case, we're\nusing AWS's CodeCommit.",
    "start": "66290",
    "end": "72310"
  },
  {
    "text": "However, all the deployments\nin the application are currently being done manually.",
    "start": "73210",
    "end": "77763"
  },
  {
    "text": "Acme wants to update their deployment process with automation. This will allow them to\nensure the deployment process",
    "start": "79270",
    "end": "85620"
  },
  {
    "text": "is done the same way every time. This leads us to the current\nvideo and the tasks at hand",
    "start": "85620",
    "end": "92250"
  },
  {
    "start": "95000",
    "end": "159000"
  },
  {
    "text": "Acme wants to fully embrace DevOps as part of their development culture. To achieve this,",
    "start": "96850",
    "end": "103379"
  },
  {
    "text": "they wanna fully integrate\na continuous integration and continuous deployment\npipeline for their application.",
    "start": "103379",
    "end": "108823"
  },
  {
    "text": "In this video, we'll be implementing the\nfollowing functionality. We wanna automatically build\nour application on check-in.",
    "start": "109990",
    "end": "117732"
  },
  {
    "text": "We wanna automatically test\nour application on build to ensure we don't have\nany code root aggressions.",
    "start": "118600",
    "end": "124260"
  },
  {
    "text": "We want to use serverless\ncontainers to host our application using AWS Fargate.",
    "start": "125100",
    "end": "129662"
  },
  {
    "text": "We want a blue green deployment\nmethodology that allows for zero downtime deployments and allows us",
    "start": "130840",
    "end": "136760"
  },
  {
    "text": "to easily roll back changes\nif an error does occur. We want our deployment to the\ndevelopment environment to be",
    "start": "136760",
    "end": "144760"
  },
  {
    "text": "automated and fully hands off to ensure the process is repeatable.",
    "start": "144760",
    "end": "149003"
  },
  {
    "text": "And if all goes well in\ndeployment, in development, we wanna be able to automatically deploy",
    "start": "150180",
    "end": "156730"
  },
  {
    "text": "our applications into production. The first step in the\nautomation process is called",
    "start": "156730",
    "end": "163820"
  },
  {
    "start": "159000",
    "end": "166000"
  },
  {
    "text": "continuous integration. The continuous integration\nflow looks like this.",
    "start": "163820",
    "end": "170140"
  },
  {
    "start": "166000",
    "end": "202000"
  },
  {
    "text": "A user makes changes to\ntheir code And then checks in the code into the Git repository.",
    "start": "170140",
    "end": "176583"
  },
  {
    "text": "We'll automatically build\nthe new software version, run the tests on the software,",
    "start": "178600",
    "end": "185280"
  },
  {
    "text": "and then if all of this is successful, we'll automatically build the container.",
    "start": "185280",
    "end": "189202"
  },
  {
    "text": "Once the build is completed, we're gonna automatically\npush the container into a container registry",
    "start": "190820",
    "end": "197380"
  },
  {
    "text": "so that the changes are available for downstream processing.",
    "start": "197380",
    "end": "201063"
  },
  {
    "start": "202000",
    "end": "252000"
  },
  {
    "text": "For this section of the video, we're gonna set up a container repository in Elastic Container\nRepository service, or ECR.",
    "start": "204749",
    "end": "213463"
  },
  {
    "text": "We'll use AWS CodeBuild to\nperform all of the build tasks on the software, run the unit tests on the application,",
    "start": "214880",
    "end": "222180"
  },
  {
    "text": "and to build and push the container. We'll use AWS CodePipeline to orchestrate",
    "start": "222180",
    "end": "228360"
  },
  {
    "text": "the build process, including triggering the build on check-in.",
    "start": "228360",
    "end": "232013"
  },
  {
    "text": "For our containers, we'll use a tagging strategy\nthat automatically tags the container with a build\nnumber and the latest tag.",
    "start": "233780",
    "end": "241470"
  },
  {
    "text": "This allows our development\nenvironment to know which build the container is the latest,\nfor testing purposes.",
    "start": "241470",
    "end": "248423"
  },
  {
    "text": "Now, let's see all of this in action. Because Acme has decided\non a container strategy",
    "start": "249390",
    "end": "257130"
  },
  {
    "start": "252000",
    "end": "335000"
  },
  {
    "text": "for this part of their application, we need to set up a repository inside of a container registry.",
    "start": "257130",
    "end": "263323"
  },
  {
    "text": "AWS has the Amazon Elastic\nContainer Registry, or ECR",
    "start": "264550",
    "end": "269550"
  },
  {
    "text": "that we can use. From the main menu, I'm gonna select ECR.",
    "start": "269580",
    "end": "274383"
  },
  {
    "text": "From here, I'm gonna click get started.",
    "start": "287490",
    "end": "289492"
  },
  {
    "text": "I need to provide a\nname for my repository. So I'm going to select\nproduct catalog repository.",
    "start": "298460",
    "end": "306682"
  },
  {
    "text": "For the rest of the settings, I'm going to leave them as default and then I'm going to\nclick create repository.",
    "start": "308720",
    "end": "314063"
  },
  {
    "text": "I'll need to save this name\nfor later because I'm going to incorporate it into my\ncontinuous integration script.",
    "start": "319350",
    "end": "325303"
  },
  {
    "text": "Now let's look at the\ncode in Visual Studio.",
    "start": "331260",
    "end": "333460"
  },
  {
    "start": "335000",
    "end": "546000"
  },
  {
    "text": "The code is built as a\nstandard.net core web API. The main functionality,",
    "start": "338130",
    "end": "344686"
  },
  {
    "text": "no changes have been\nrequired in order to allow the application to function inside of AWS.",
    "start": "344686",
    "end": "348957"
  },
  {
    "text": "The containers that we implement\nfor the application will run behind an application load balancer.",
    "start": "350460",
    "end": "355963"
  },
  {
    "text": "AWS's application load balancer provides the ability to\nspecify a health check to determine if the running\ncontainer is healthy or not.",
    "start": "357010",
    "end": "365570"
  },
  {
    "text": "I've implemented that health\ncheck via a home controller.",
    "start": "365570",
    "end": "368653"
  },
  {
    "text": "My home controller contains a\ngap method that will be used as the health check. For my current implementation,",
    "start": "371698",
    "end": "378373"
  },
  {
    "text": "I'm simply returning okay\nfor the health check, but I can extend this method as my application gets more complex.",
    "start": "379398",
    "end": "385623"
  },
  {
    "text": "My code also includes a unit\ntesting project that has been built using the standard.net\ncore testing functionality.",
    "start": "390540",
    "end": "398223"
  },
  {
    "text": "In this case, I have two automated tests\nthat will help to test my code for regressions.",
    "start": "399090",
    "end": "405480"
  },
  {
    "text": "These tests will automatically\nbe run by CodeBuild after a successful build.",
    "start": "405480",
    "end": "409523"
  },
  {
    "text": "The final addition I need\nto make to my source code is a build spec yaml file.",
    "start": "412890",
    "end": "417293"
  },
  {
    "text": "I have the file here.",
    "start": "418200",
    "end": "419373"
  },
  {
    "text": "The file contains several sections. The install section",
    "start": "425950",
    "end": "430030"
  },
  {
    "text": "is used to set up to build\nenvironment for me to use. In this case,",
    "start": "432700",
    "end": "437834"
  },
  {
    "text": "it specifies that it.net core\n3.1 runtime is used in order to build my project.",
    "start": "437834",
    "end": "443203"
  },
  {
    "text": "The pre-build section\ncontains the AWS CLI commands necessary to log into\nECR and provide access",
    "start": "445310",
    "end": "453080"
  },
  {
    "text": "to my container registry in my account.",
    "start": "453080",
    "end": "455163"
  },
  {
    "text": "The build section contains the\ncommands necessary to perform an automated build.",
    "start": "459860",
    "end": "466449"
  },
  {
    "text": "The first command tells .net",
    "start": "466450",
    "end": "467850"
  },
  {
    "text": "to build my main project. There is then the.net test command, which will execute the unit\ntests against my project.",
    "start": "474090",
    "end": "481763"
  },
  {
    "text": "I then have a series of Docker\ncommands that will build my container and set up the\ntags on the new container",
    "start": "488070",
    "end": "494560"
  },
  {
    "text": "for tracking purposes.",
    "start": "494560",
    "end": "496033"
  },
  {
    "text": "Finally, we have the post build section.",
    "start": "501460",
    "end": "504022"
  },
  {
    "text": "in the post build section, we push the new container\nto the repository.",
    "start": "506989",
    "end": "509983"
  },
  {
    "text": "The report section of the\nbuild spec file allows me to identify where we store the results",
    "start": "517150",
    "end": "522610"
  },
  {
    "text": "of the automated testing runs. With all of these files\nchecked into CodeBuild,",
    "start": "522610",
    "end": "527877"
  },
  {
    "text": "we can set up our automated build process for our application. For this we wanna go\nback to the AWS console.",
    "start": "528960",
    "end": "536623"
  },
  {
    "text": "The next step in the build process is to set up AWS CodeBuild.",
    "start": "540420",
    "end": "543990"
  },
  {
    "start": "546000",
    "end": "808000"
  },
  {
    "text": "CodeBuild will automatically\nset up the build environment and build our application\nbased off the commands that are",
    "start": "547236",
    "end": "552790"
  },
  {
    "text": "included in our build spec yaml file.",
    "start": "552790",
    "end": "554962"
  },
  {
    "text": "From the main AWS console, I'm\ngonna select AWS CodeBuild.",
    "start": "564700",
    "end": "568707"
  },
  {
    "text": "From CodeBuild, I'm\ngonna select the option to create a new build project.",
    "start": "576000",
    "end": "579342"
  },
  {
    "text": "I need to provide a name for my build.",
    "start": "588230",
    "end": "590233"
  },
  {
    "text": "I can provide an optional description from my automated build here.",
    "start": "594470",
    "end": "597793"
  },
  {
    "text": "For source code, I'm\ngonna select CodeCommit and select the repository for my code.",
    "start": "601940",
    "end": "608571"
  },
  {
    "text": "I need to tell Git where to find the updated application\ncode in my repository. For this, I'm going to\nchoose the master branch.",
    "start": "613670",
    "end": "620903"
  },
  {
    "text": "You could choose to build\nyour code based off of a different branch or commit IDs or tags,",
    "start": "627410",
    "end": "635880"
  },
  {
    "text": "depending on how you manage source control in your environment.",
    "start": "635880",
    "end": "638680"
  },
  {
    "text": "Next, I need to set up the\nactual build environment that I use. I can use an AWS managed image or an image",
    "start": "643040",
    "end": "651500"
  },
  {
    "text": "that I manage myself. I'm going to choose to use\nan AWS managed instance.",
    "start": "651500",
    "end": "658083"
  },
  {
    "text": "I'm gonna choose Amazon Linux\nas the operating system.",
    "start": "659920",
    "end": "663793"
  },
  {
    "text": "For run times, I'm going\nto choose standard.",
    "start": "665820",
    "end": "668020"
  },
  {
    "text": "And for the image version, I'm going to choose the latest version.",
    "start": "671370",
    "end": "675080"
  },
  {
    "text": "I'm gonna allow the option to\nalways use the latest image for this run time.",
    "start": "679210",
    "end": "684213"
  },
  {
    "text": "Because I'm building a Docker image, I need to enable the privileged access",
    "start": "686120",
    "end": "690240"
  },
  {
    "text": "As every interaction with\nAWS, CodeBuild requires an AWS role in order to interact",
    "start": "698100",
    "end": "704510"
  },
  {
    "text": "with resources in my account. I'm going to allow the setup\nprocess to create a new role",
    "start": "704510",
    "end": "709740"
  },
  {
    "text": "for me with the required permissions.",
    "start": "709740",
    "end": "712343"
  },
  {
    "text": "I do need to record this name so I can modify it after setup. So copy the name off to the side.",
    "start": "719570",
    "end": "725793"
  },
  {
    "text": "For the build spec file selection, I use the option here to use",
    "start": "740760",
    "end": "746690"
  },
  {
    "text": "the normally included build spec file.",
    "start": "746690",
    "end": "749893"
  },
  {
    "text": "I could optionally insert the\nbuild commands manually here, or I can provide an alternate\nname for the build spec file.",
    "start": "752640",
    "end": "760113"
  },
  {
    "text": "I'm going to use the default.",
    "start": "761320",
    "end": "762823"
  },
  {
    "text": "For build artifacts, I'm gonna choose to deposit\nthe artifacts into S three.",
    "start": "767390",
    "end": "772283"
  },
  {
    "text": "Here I can select a bucket\nthat I already have access to in my account.",
    "start": "773420",
    "end": "778859"
  },
  {
    "text": "Finally, I'm gonna click the\ncreate build project button.",
    "start": "786270",
    "end": "791270"
  },
  {
    "start": "808000",
    "end": "964000"
  },
  {
    "text": "The build setup created a new\nidentity and access management or IAM role for CodeBuild to use.",
    "start": "809630",
    "end": "816890"
  },
  {
    "text": "However, that role will have\nsome missing permissions. I need to update that role\nto allow access to some",
    "start": "816890",
    "end": "822459"
  },
  {
    "text": "additional services before I can use it, From the services menu,\nI'm gonna select IAM.",
    "start": "822460",
    "end": "830087"
  },
  {
    "text": "I'm gonna select roles.",
    "start": "840010",
    "end": "841513"
  },
  {
    "text": "I need to find the role that\nmy build project created",
    "start": "859400",
    "end": "863900"
  },
  {
    "text": "and edit it. I can see here are the\npermissions that were created.",
    "start": "866930",
    "end": "872563"
  },
  {
    "text": "From here, need to add access to ECR to be able to interact\nwith the image repository.",
    "start": "882960",
    "end": "890251"
  },
  {
    "text": "Now, my role has the required permissions. I can go back to CodeBuild and test",
    "start": "920962",
    "end": "927279"
  },
  {
    "text": "the build of the project.",
    "start": "927280",
    "end": "929163"
  },
  {
    "text": "For my first build, I'm going\nto run the build manually.",
    "start": "933690",
    "end": "937783"
  },
  {
    "text": "By clicking start build, I can review the settings, in this case.",
    "start": "941290",
    "end": "947300"
  },
  {
    "text": "I don't wanna change any,\nand click start build.",
    "start": "947300",
    "end": "950773"
  },
  {
    "text": "I'm gonna pause the video now and allow the build commands to complete.",
    "start": "952630",
    "end": "956993"
  },
  {
    "start": "964000",
    "end": "1234000"
  },
  {
    "text": "Now my build is completed. Let's look at what's happened. I can see here the log of all\nthe actions that have occurred",
    "start": "965260",
    "end": "972060"
  },
  {
    "text": "for the build process based\non the commands that were entered in my build spec yaml file.",
    "start": "972060",
    "end": "977513"
  },
  {
    "text": "I can see here that the build succeeded.",
    "start": "978490",
    "end": "980623"
  },
  {
    "text": "My report history, I can see reports of all the\ntests that were run on my build",
    "start": "983860",
    "end": "988910"
  },
  {
    "text": "automatically as part\nof the build process. I can see here that two\ntests were run and two tests",
    "start": "988910",
    "end": "997140"
  },
  {
    "text": "were passed and I can inspect\nthe details of that view.",
    "start": "997420",
    "end": "1001902"
  },
  {
    "text": "As the final part of the build process, my image will have been published to ECR.",
    "start": "1006550",
    "end": "1011113"
  },
  {
    "text": "So I can have a look for\nmy container registry.",
    "start": "1013730",
    "end": "1018053"
  },
  {
    "text": "And I can see here, the latest image has been\npublished to the registry",
    "start": "1020830",
    "end": "1026949"
  },
  {
    "text": "with tags of a build\nnumber one and latest.",
    "start": "1026950",
    "end": "1031949"
  },
  {
    "text": "This will help me later to\ndrive downstream processing.",
    "start": "1032350",
    "end": "1037350"
  },
  {
    "text": "The final aspect of the\ncontinuous integration process is to build a pipeline\nwhich automatically connects",
    "start": "1041270",
    "end": "1049210"
  },
  {
    "text": "the check-in of my code to\nthe automated build system.",
    "start": "1049210",
    "end": "1054210"
  },
  {
    "text": "The service we wanna look\nat to automate this process is called CodePipeline.",
    "start": "1062270",
    "end": "1066120"
  },
  {
    "text": "Here I'll create a new pipeline.",
    "start": "1071410",
    "end": "1073593"
  },
  {
    "text": "I'll give the pipeline a name.",
    "start": "1078350",
    "end": "1080043"
  },
  {
    "text": "Once again, I'll allow the setup process to create a new service role for this CodePipeline to use.",
    "start": "1096900",
    "end": "1104332"
  },
  {
    "text": "For my source code provider, once again, I'm gonna choose AWS CodeCommit.",
    "start": "1109415",
    "end": "1112833"
  },
  {
    "text": "I'm going to choose the repository\nname and the branch name.",
    "start": "1114750",
    "end": "1119750"
  },
  {
    "text": "I have an option to determine\nhow I will check for changes in the code.",
    "start": "1122160",
    "end": "1127300"
  },
  {
    "text": "I can either use CloudWatch Events, the recommended approach,",
    "start": "1127300",
    "end": "1131493"
  },
  {
    "text": "or I can have the pipeline\npoll periodically. I'm going to use the\ndefault recommended path",
    "start": "1132630",
    "end": "1138220"
  },
  {
    "text": "of CloudWatch events.",
    "start": "1138220",
    "end": "1139853"
  },
  {
    "text": "I'm gonna add a build stage. And in this case, I'm\ngonna choose AWS CodeBuild,",
    "start": "1144570",
    "end": "1149420"
  },
  {
    "text": "And I'm gonna choose the project, which I've already set up and\ntested in the previous steps.",
    "start": "1151720",
    "end": "1156893"
  },
  {
    "text": "At this point, I'm going to\nskip the deployment stage.",
    "start": "1162590",
    "end": "1165482"
  },
  {
    "text": "Finally, I can review my settings\nand click create pipeline.",
    "start": "1171300",
    "end": "1175143"
  },
  {
    "text": "Once your CodePipeline has been created, it's automatically going\nto kick off the process",
    "start": "1185940",
    "end": "1191549"
  },
  {
    "text": "to retrieve the code and build. This is the same process that\nwill happen automatically",
    "start": "1191550",
    "end": "1199313"
  },
  {
    "text": "when new code is checked in. You can see here in the UI,",
    "start": "1199313",
    "end": "1203053"
  },
  {
    "text": "we've successfully retrieved the code. And now we're launching the\nbuild process up to once again,",
    "start": "1204490",
    "end": "1211393"
  },
  {
    "text": "build my project and\npublish the updated version of the code into the repository.",
    "start": "1212500",
    "end": "1219823"
  },
  {
    "text": "Once again, I'm gonna pause the video to allow the CodeBuild\nprocess to complete.",
    "start": "1228210",
    "end": "1233453"
  },
  {
    "text": "After some time the build\nprocess has completed and our CodePipeline has\nsuccessfully published",
    "start": "1236040",
    "end": "1242399"
  },
  {
    "text": "all our changes. We can review those changes\nonce again by opening up ECR.",
    "start": "1242400",
    "end": "1249143"
  },
  {
    "text": "Going to our repository, and we can see a new image has been posted with a new build number\nand the latest tag.",
    "start": "1256400",
    "end": "1264250"
  },
  {
    "text": "Our tag has moved from the\nfirst image to the latest one that's been published.",
    "start": "1264250",
    "end": "1269190"
  },
  {
    "text": "Now, the only thing left\nto do is test our changes to make sure that we can\nautomatically trigger them",
    "start": "1275870",
    "end": "1281740"
  },
  {
    "text": "based off of code being\nchecked in from Visual Studio.",
    "start": "1281740",
    "end": "1286740"
  },
  {
    "text": "So let's go back to Visual Studio.",
    "start": "1290370",
    "end": "1292083"
  },
  {
    "text": "We'll go to our home control\nand make a trivial change.",
    "start": "1296850",
    "end": "1300742"
  },
  {
    "text": "I'll save my change.",
    "start": "1313290",
    "end": "1314603"
  },
  {
    "text": "And then I will go and publish my changes.",
    "start": "1323150",
    "end": "1326650"
  },
  {
    "text": "Commit and push those\nchanges to source control.",
    "start": "1335160",
    "end": "1338093"
  },
  {
    "text": "Once those changes have been\npublished to source control, I will swap back to CodePipeline.",
    "start": "1343120",
    "end": "1349346"
  },
  {
    "text": "In a few moments, we should notice that the continuous integration service",
    "start": "1351070",
    "end": "1356330"
  },
  {
    "text": "kicks off and starts building\nthe latest changes to my code.",
    "start": "1356330",
    "end": "1360132"
  },
  {
    "text": "So we can see here once again, the put CodePipeline has triggered based on source code changed,\nupdated health check.",
    "start": "1368985",
    "end": "1378203"
  },
  {
    "text": "And now we're once again going\nthrough the build process to publish the new updated",
    "start": "1379421",
    "end": "1384740"
  },
  {
    "text": "version of my container to the repository.",
    "start": "1384740",
    "end": "1387123"
  },
  {
    "text": "So far, Acme Financial Data Services has been able to implement a\ncontinuous integration system",
    "start": "1393050",
    "end": "1399230"
  },
  {
    "text": "to automatically build, test, and publish updated containers as changes are applied",
    "start": "1399230",
    "end": "1404930"
  },
  {
    "text": "to the source code. The first set of changes\nmeans that they can reliably",
    "start": "1404930",
    "end": "1410160"
  },
  {
    "text": "and repeatably build new packages every time the source code is checked in.",
    "start": "1410160",
    "end": "1414803"
  },
  {
    "text": "Now, let's look at the\nnext set of objectives.",
    "start": "1415990",
    "end": "1418290"
  },
  {
    "text": "In this next section, we're gonna set up the infrastructure required\nto run our containers.",
    "start": "1422320",
    "end": "1427093"
  },
  {
    "text": "We need to create a Fargate cluster to run our containers on.",
    "start": "1428810",
    "end": "1433313"
  },
  {
    "text": "We need to create a pair of load balancers to access the containers. Because Acme wants to incorporate",
    "start": "1434540",
    "end": "1441040"
  },
  {
    "text": "a blue green deployment methodology, we'll have two load balancers.",
    "start": "1441040",
    "end": "1446280"
  },
  {
    "text": "This will allow us to\nswap the deployments. We'll need to create a task\nand a service definition",
    "start": "1446280",
    "end": "1452950"
  },
  {
    "text": "to use for our deployments. Finally, we'll deploy our\ninitial service manually",
    "start": "1452950",
    "end": "1461059"
  },
  {
    "text": "using the AWS command line\nto make sure everything is working correctly before we start wiring up\nto continuous delivery.",
    "start": "1461060",
    "end": "1468002"
  },
  {
    "text": "Now let's head back to the AWS console. When a container is\nexecuting inside of AWS,",
    "start": "1469200",
    "end": "1476570"
  },
  {
    "start": "1472000",
    "end": "1806000"
  },
  {
    "text": "that container needs to\nhave an execution role. We'll first set up that\nexecution role in AWS identity",
    "start": "1476570",
    "end": "1483020"
  },
  {
    "text": "and access management. From the console, let's open\nidentity and access management.",
    "start": "1483020",
    "end": "1490510"
  },
  {
    "text": "I'm gonna select roles and\nI'm gonna select create role.",
    "start": "1501520",
    "end": "1506073"
  },
  {
    "text": "I need to specify the service\nthat the role is going to be used by, in this case,\nElastic Container Service.",
    "start": "1510560",
    "end": "1516943"
  },
  {
    "text": "And then down here under use case, I'm gonna choose Elastic\nContainer Service task",
    "start": "1518260",
    "end": "1522510"
  },
  {
    "text": "For permissions, I need the...",
    "start": "1527710",
    "end": "1532070"
  },
  {
    "text": "The Amazon ECS task execution role policy. I'm going to attach this.",
    "start": "1543881",
    "end": "1550193"
  },
  {
    "text": "If my container required\nany additional permissions while executing, I could\nattach those permissions",
    "start": "1552400",
    "end": "1557950"
  },
  {
    "text": "to the container here and now. However, my container doesn't, so I'm gonna go next, review.",
    "start": "1557950",
    "end": "1566380"
  },
  {
    "text": "I need to give the role a name.",
    "start": "1566380",
    "end": "1567930"
  },
  {
    "text": "Optionally I can provide\na role description and I'm gonna click create role.",
    "start": "1573730",
    "end": "1579273"
  },
  {
    "text": "I now have this role available\nfor my task definition.",
    "start": "1590280",
    "end": "1593633"
  },
  {
    "text": "The next thing we wanna do\nis create a task definition for our container. We want the entire\nprocess to be automated.",
    "start": "1596090",
    "end": "1603620"
  },
  {
    "text": "So to do this, we're gonna be using the\nAWS command line tools and configuration files for our code.",
    "start": "1603620",
    "end": "1610523"
  },
  {
    "text": "I've already created an empty AWS code commit repository for my code files.",
    "start": "1612710",
    "end": "1617813"
  },
  {
    "text": "Now let's look at the\nactual configuration files.",
    "start": "1626100",
    "end": "1628713"
  },
  {
    "text": "Here, you can see I have a JSON file that's got all of the\nconfiguration necessary to spin up",
    "start": "1637800",
    "end": "1644330"
  },
  {
    "text": "my service definition.",
    "start": "1644330",
    "end": "1645872"
  },
  {
    "text": "Here in this file, we can say I've got the definition for the role,",
    "start": "1653790",
    "end": "1659059"
  },
  {
    "text": "the execution role that\ncontainer's going to use. I'm giving my container a name.",
    "start": "1659060",
    "end": "1664063"
  },
  {
    "text": "I'm giving it the address\nto pull the latest version of my container,",
    "start": "1665130",
    "end": "1671132"
  },
  {
    "text": "defining it as essential\nsetting up my port mappings.",
    "start": "1672250",
    "end": "1675853"
  },
  {
    "text": "And here you can see, I want to, I'm going to run my container\nin a Fargate cluster.",
    "start": "1677370",
    "end": "1682890"
  },
  {
    "text": "This means I don't have\nservice to manage on my own.",
    "start": "1682890",
    "end": "1685493"
  },
  {
    "text": "After all of that, I'm giving\nthe task a family name.",
    "start": "1688180",
    "end": "1691863"
  },
  {
    "text": "I'll now execute a command\nvia the AWS command line.",
    "start": "1696650",
    "end": "1701433"
  },
  {
    "text": "This command defines the\nprofile I'm going to use, which is defined in my local\nmachine, defines the region,",
    "start": "1707250",
    "end": "1715420"
  },
  {
    "text": "tells us ECS register task\ndefinition and tells it to use",
    "start": "1715420",
    "end": "1720420"
  },
  {
    "text": "the JSON file that I have\nhere as the input from my,",
    "start": "1722500",
    "end": "1727500"
  },
  {
    "text": "the commands and the\nparameters to set up my task. I'm gonna run the command now.",
    "start": "1728690",
    "end": "1734270"
  },
  {
    "text": "This has set up the task\ndefinition in my AWS account.",
    "start": "1739030",
    "end": "1744030"
  },
  {
    "text": "Here, back in ECS, we can\ngo to task definitions, and we can say, I have a\ntask definition set up,",
    "start": "1754100",
    "end": "1761600"
  },
  {
    "text": "which corresponds to the task\ndefinition of my input file.",
    "start": "1761600",
    "end": "1766600"
  },
  {
    "text": "And here I can see I've got\na definition for the tasks that I can use in the\ncreation of my service.",
    "start": "1772510",
    "end": "1779132"
  },
  {
    "text": "The next thing I need to do\nis actually set up my service and the load balancers that\nwill connect to the service",
    "start": "1790220",
    "end": "1797259"
  },
  {
    "text": "so that I can run my task\ninside of ECS and test it.",
    "start": "1797260",
    "end": "1802260"
  },
  {
    "start": "1806000",
    "end": "2248000"
  },
  {
    "text": "To create my Amazon EC2\napplication load balancer. I'm gonna start at the\nAWS management console.",
    "start": "1807610",
    "end": "1815549"
  },
  {
    "text": "I'm gonna select the EC2 service area,",
    "start": "1815550",
    "end": "1817983"
  },
  {
    "text": "Gonna scroll down here towards the bottom and select load balancers.",
    "start": "1821080",
    "end": "1824842"
  },
  {
    "text": "Let's create a load balancer. I'm going to choose\napplication load balancer from the options.",
    "start": "1829820",
    "end": "1835513"
  },
  {
    "text": "Obviously I need to give\nmy load balancer a name.",
    "start": "1841630",
    "end": "1844793"
  },
  {
    "text": "I'm going to choose internet facing because the application's\ngoing to be serving pages to the internet,",
    "start": "1851120",
    "end": "1855893"
  },
  {
    "text": "and I'm gonna choose IPV4\nfour as the address type. For my listeners,",
    "start": "1856800",
    "end": "1862679"
  },
  {
    "text": "I get a default listener of\nHTTP attached to port 80. Because I'm going to be doing",
    "start": "1862680",
    "end": "1868760"
  },
  {
    "text": "a blue green deployment method, I'm gonna add a second listener\nfor HTTP and allow traffic",
    "start": "1868760",
    "end": "1875960"
  },
  {
    "text": "to port 8080. This will allow me to have\ntwo deployments running on the application load balancer",
    "start": "1875960",
    "end": "1882770"
  },
  {
    "text": "and allow my deployment method to swap the target groups.",
    "start": "1882770",
    "end": "1886983"
  },
  {
    "text": "I need to specify the\navailability zones that I'll allow my load balancer to run in.",
    "start": "1889770",
    "end": "1894860"
  },
  {
    "text": "In this case, I'm using\nthe default VPC or network.",
    "start": "1894860",
    "end": "1898443"
  },
  {
    "text": "I have to choose at least two subnets from our load balancer to run in.",
    "start": "1901200",
    "end": "1906640"
  },
  {
    "text": "I'm going to choose all five.",
    "start": "1906640",
    "end": "1908090"
  },
  {
    "text": "Next, I'm gonna configure\nsecurity settings. I receive a warning here\nbecause I'm only allowing",
    "start": "1912360",
    "end": "1918630"
  },
  {
    "text": "HTTP traffic through my load balancer and not HTTPS.",
    "start": "1918630",
    "end": "1923732"
  },
  {
    "text": "I certainly can add HTTPS if I choose to. At this point, I'm just going\nto skip past this warning.",
    "start": "1924660",
    "end": "1931513"
  },
  {
    "text": "I need to figure configure\na security group that allows access to my load balancer.",
    "start": "1936230",
    "end": "1941430"
  },
  {
    "text": "This is a stateful\nfirewall that's implemented at the hypervisor level.",
    "start": "1941430",
    "end": "1947040"
  },
  {
    "text": "In this case, I'm going to\ncreate a new security group.",
    "start": "1947040",
    "end": "1949693"
  },
  {
    "text": "And as you can see, the wizard is already selected\nto allow both traffic on port",
    "start": "1978770",
    "end": "1984029"
  },
  {
    "text": "80 and 8080. Because this is HTTP traffic,",
    "start": "1984030",
    "end": "1989669"
  },
  {
    "text": "we're allowing that traffic\nto be received from anywhere.",
    "start": "1989670",
    "end": "1992520"
  },
  {
    "text": "Next I'm gonna configure routing.",
    "start": "1995950",
    "end": "1997600"
  },
  {
    "text": "I'm gonna create a new target group and give this target group a name.",
    "start": "2006030",
    "end": "2009200"
  },
  {
    "text": "I'm gonna specify the\ntarget type as IP addresses. The protocol is HTTP\nand allow it on port 80.",
    "start": "2012090",
    "end": "2021002"
  },
  {
    "text": "The next thing to do is\nconfigure my health check. As we saw when I was looking at the code",
    "start": "2022440",
    "end": "2027580"
  },
  {
    "text": "that I implemented, I have a health check set\nup on the home controller or the root path of my application.",
    "start": "2027580",
    "end": "2035140"
  },
  {
    "text": "So in this case, I will leave the default. If my health check was\nresponding at a different URL,",
    "start": "2035140",
    "end": "2041430"
  },
  {
    "text": "I would want to configure this here. I'm gonna click next register targets.",
    "start": "2041430",
    "end": "2049030"
  },
  {
    "text": "Because I don't have\nany targets registered I'm just going to skip past\nand click review and create.",
    "start": "2049030",
    "end": "2054823"
  },
  {
    "text": "I can click here on the\nload balancer name to view my load balancer in the console.",
    "start": "2065290",
    "end": "2071010"
  },
  {
    "text": "And I can see that it is provisioning. For my Blue Green diploma to work,",
    "start": "2071010",
    "end": "2077629"
  },
  {
    "text": "I need to configure a second target group. I'm gonna click here on target groups.",
    "start": "2077630",
    "end": "2083143"
  },
  {
    "text": "I'm gonna click to create a target group for my second group. Again, I'm gonna choose IP address.",
    "start": "2086370",
    "end": "2092663"
  },
  {
    "text": "Specify a name, in this\ncase, target group two. I need to change my protocol to 8080",
    "start": "2101442",
    "end": "2109270"
  },
  {
    "text": "to match the second set of\nIP of ports that I specified",
    "start": "2109270",
    "end": "2114270"
  },
  {
    "text": "for my application.",
    "start": "2114380",
    "end": "2115672"
  },
  {
    "text": "For health checks, I wanna have the same health\ncheck specified here as I did",
    "start": "2121870",
    "end": "2127030"
  },
  {
    "text": "in my previous setup. I'm gonna click next.",
    "start": "2127030",
    "end": "2131693"
  },
  {
    "text": "I don't wanna manually\nregister any targets, So I'll click create target group.",
    "start": "2133820",
    "end": "2138303"
  },
  {
    "text": "This is a second target group\nset up and I need to now register this against my load balancer.",
    "start": "2140660",
    "end": "2145703"
  },
  {
    "text": "So I'll swap back to load balancers. And I can see here",
    "start": "2147120",
    "end": "2152301"
  },
  {
    "text": "my load balancer is still provisioning. Here under listeners,",
    "start": "2152301",
    "end": "2157640"
  },
  {
    "text": "I can see the two listeners,\nand I can see that right now both of these are specified\nto go to target group one.",
    "start": "2157640",
    "end": "2165493"
  },
  {
    "text": "I'm gonna click. I'm gonna find the target\ngroup that references 48080.",
    "start": "2167210",
    "end": "2174620"
  },
  {
    "text": "I'm gonna click edit rules.",
    "start": "2180916",
    "end": "2183166"
  },
  {
    "text": "I'm gonna click the option\nto edit my current role.",
    "start": "2190520",
    "end": "2193343"
  },
  {
    "text": "I'm gonna choose the edit\nitem for this specific role. Now I can see here, I say\nforward to target group one.",
    "start": "2199709",
    "end": "2206550"
  },
  {
    "text": "I want to change that. And I wanna specify target group two.",
    "start": "2206550",
    "end": "2211172"
  },
  {
    "text": "And then I wanna click update.",
    "start": "2214190",
    "end": "2215690"
  },
  {
    "text": "Now my load balance has been set, so that traffic going\nto port 80 will go to",
    "start": "2220570",
    "end": "2226089"
  },
  {
    "text": "the first target group and\ntraffic going to port 8080 will go to the second target group.",
    "start": "2226090",
    "end": "2231662"
  },
  {
    "text": "The next thing to do is to set\nup my cluster in my service.",
    "start": "2236310",
    "end": "2239663"
  },
  {
    "text": "For that, I'm gonna head\nback to the AWS console.",
    "start": "2241410",
    "end": "2244303"
  },
  {
    "start": "2248000",
    "end": "2356000"
  },
  {
    "text": "Now we're gonna create\nthe Amazon ECS cluster. From the services,",
    "start": "2248766",
    "end": "2254720"
  },
  {
    "text": "I can start typing ECS and\nselect Elastic Container Service.",
    "start": "2254720",
    "end": "2259263"
  },
  {
    "text": "I'm gonna navigate to\nclusters and select the option to create cluster.",
    "start": "2263290",
    "end": "2267933"
  },
  {
    "text": "For the type of cluster I'm\ngonna choose networking only because I want to use AWS\nFargate to control my clusters",
    "start": "2271144",
    "end": "2277990"
  },
  {
    "text": "and not have to worry about\nunderlying infrastructure. I'm gonna click next step.",
    "start": "2277990",
    "end": "2284059"
  },
  {
    "text": "I'm gonna give my cluster a name.",
    "start": "2284060",
    "end": "2285710"
  },
  {
    "text": "I choose AFDs cluster. I have the option here to create\na new VPC for this cluster,",
    "start": "2294784",
    "end": "2302170"
  },
  {
    "text": "but I don't wanna do that\nbecause I'm using the default VPC for this instance,",
    "start": "2302170",
    "end": "2307162"
  },
  {
    "text": "After that I'm gonna click create. So you can see my\ncluster, it gets created.",
    "start": "2308830",
    "end": "2314089"
  },
  {
    "text": "And if I click view, I can see the cluster is being provisioned here in the console.",
    "start": "2315807",
    "end": "2320872"
  },
  {
    "text": "It'll take a few moments for this cluster to finish provisioning. I'm gonna pause the video\nwhile I allow this to complete.",
    "start": "2325392",
    "end": "2333613"
  },
  {
    "text": "After a minute or two, I can see that my\ncluster is up and running and currently in an active state.",
    "start": "2334940",
    "end": "2341343"
  },
  {
    "text": "I don't have any services or tasks running in my cluster yet. That'll be the next thing\nto do in this video.",
    "start": "2342270",
    "end": "2349530"
  },
  {
    "start": "2356000",
    "end": "2569000"
  },
  {
    "text": "Now that we have all of the\nunderlying infrastructure created to support running my service,",
    "start": "2356820",
    "end": "2361433"
  },
  {
    "text": "I'm gonna actually create\nthe service and have that run inside of the cluster that I just created.",
    "start": "2362680",
    "end": "2368100"
  },
  {
    "text": "To do that, I'm gonna leverage the AWS command line once again.",
    "start": "2368100",
    "end": "2371583"
  },
  {
    "text": "I have here in an input file,\nwhich defines my service.",
    "start": "2374770",
    "end": "2379263"
  },
  {
    "text": "The first thing I'm going to\ndo is specify a service name. I've called it product catalog service.",
    "start": "2380380",
    "end": "2385723"
  },
  {
    "text": "I specify the task definition. Now this was created in an earlier step,",
    "start": "2388300",
    "end": "2393400"
  },
  {
    "text": "and I can see the task\nname and the revision. I'm gonna specify the cluster",
    "start": "2393400",
    "end": "2398730"
  },
  {
    "text": "that I just created, AFDs cluster. For load balancers,",
    "start": "2398730",
    "end": "2404270"
  },
  {
    "text": "I need to specify the target\ngroup that I'm going to register my instances against.",
    "start": "2404270",
    "end": "2409960"
  },
  {
    "text": "In this case, it's gonna be the ARN of\nthe first target group that was created.",
    "start": "2409960",
    "end": "2415333"
  },
  {
    "text": "I need to specify the container\nthat this will attach to, in this case product catalog two,",
    "start": "2416870",
    "end": "2422213"
  },
  {
    "text": "and the port that traffic is\ngoing to be traversing on, in this case, port 80.",
    "start": "2423340",
    "end": "2428243"
  },
  {
    "text": "For desired count, I've\ncurrently set that to one. Now this is the number\nof container instances",
    "start": "2431220",
    "end": "2438317"
  },
  {
    "text": "that are going to be spun\nup to support my load. In a production instance,",
    "start": "2438317",
    "end": "2443603"
  },
  {
    "text": "You would want to have\nmore than one instance of the container running,\nbut because this is simply",
    "start": "2445160",
    "end": "2451630"
  },
  {
    "text": "a test environment, I'm\nonly going to use one. The launch type is gonna be Fargate,",
    "start": "2452590",
    "end": "2458637"
  },
  {
    "text": "because I don't wanna manage the underlying infrastructure. I'm specifying CodeDeploy as\nthe deployment controller,",
    "start": "2458637",
    "end": "2466630"
  },
  {
    "text": "because I will be using\nCodeDeploy to deploy all of the updates to this cluster.",
    "start": "2466630",
    "end": "2471983"
  },
  {
    "text": "For subnets, I've collected\nthe IDs of the subnets that are in my default VPC.",
    "start": "2473720",
    "end": "2481150"
  },
  {
    "text": "These are the subnets that\nFargate can use to spin up underlying infrastructure for.",
    "start": "2481150",
    "end": "2486593"
  },
  {
    "text": "And finally, I specified\nthe security group that I created to and attached",
    "start": "2488320",
    "end": "2496369"
  },
  {
    "text": "to my load balancer that\nallows traffic on port 80 and port 8080.",
    "start": "2496370",
    "end": "2500773"
  },
  {
    "text": "The next thing for me to do\nis to go to the command line.",
    "start": "2503000",
    "end": "2506883"
  },
  {
    "text": "I can see here that I'm in\nthe directory that has access to the create service file that\nI've just been editing here,",
    "start": "2510130",
    "end": "2517990"
  },
  {
    "text": "create service, and now I'm gonna execute\nthe AWS command line.",
    "start": "2517990",
    "end": "2523023"
  },
  {
    "text": "Once again, I specify\nthe credentials profile that that exists on my local machine.",
    "start": "2527160",
    "end": "2532563"
  },
  {
    "text": "I specify the region that\nI wanna spin up my service, in US east one, and then I\nissue the AWS command lines.",
    "start": "2533733",
    "end": "2540450"
  },
  {
    "text": "So ECS create service and\nspecify the CLI input JSON file,",
    "start": "2540450",
    "end": "2545450"
  },
  {
    "text": "as create service.",
    "start": "2547050",
    "end": "2548543"
  },
  {
    "text": "Once that's done, I get the result of the return from the AWS command line.",
    "start": "2554340",
    "end": "2562650"
  },
  {
    "start": "2569000",
    "end": "2623000"
  },
  {
    "text": "If I go here to Elastic Container Service, and I look at my cluster,",
    "start": "2569720",
    "end": "2575863"
  },
  {
    "text": "I can see that the product\ncatalog service is up and running",
    "start": "2577760",
    "end": "2582400"
  },
  {
    "text": "in my cluster. I can also look into the service\ndetails to see the mapping",
    "start": "2583850",
    "end": "2591770"
  },
  {
    "text": "to the target group,\nthe subnet, et cetera. And I can look at the tasks,\nI can see here that my service",
    "start": "2593179",
    "end": "2601810"
  },
  {
    "text": "is running one task, which is the AFDs product catalog version one task definition.",
    "start": "2601810",
    "end": "2608523"
  },
  {
    "text": "The next thing for me to\ndo is to test the service to make sure it is\nactually still responding",
    "start": "2611840",
    "end": "2617810"
  },
  {
    "text": "and appropriately. So I can do that by once again navigating to the AWS management console,",
    "start": "2617810",
    "end": "2625950"
  },
  {
    "start": "2623000",
    "end": "2789000"
  },
  {
    "text": "I can select EC2.",
    "start": "2625950",
    "end": "2627233"
  },
  {
    "text": "I wanna scroll down towards the bottom and select load balancers.",
    "start": "2632010",
    "end": "2635833"
  },
  {
    "text": "From here I can find the load balancer I created for my project,\nAFDs load balancer.",
    "start": "2642600",
    "end": "2648122"
  },
  {
    "text": "By selecting this load balancer, I can find the DNS name that\nhas been allocated and copy it.",
    "start": "2650300",
    "end": "2656063"
  },
  {
    "text": "I'm gonna open up a new tab in my browser.",
    "start": "2661090",
    "end": "2663433"
  },
  {
    "text": "And I can see here by\nbrowsing to the root address attached to the load balancer that I get",
    "start": "2668863",
    "end": "2674980"
  },
  {
    "text": "my health check message, OK - healthy.",
    "start": "2674980",
    "end": "2677883"
  },
  {
    "text": "I can also call directly into the service",
    "start": "2681700",
    "end": "2684150"
  },
  {
    "text": "to get the sample data returned that my service interacts with.",
    "start": "2688710",
    "end": "2693780"
  },
  {
    "text": "So now I can see that I have\nnot only the source code",
    "start": "2693780",
    "end": "2698780"
  },
  {
    "text": "up into AWS, but I've got a fully running\nservice that can be called from an API call.",
    "start": "2699190",
    "end": "2705832"
  },
  {
    "text": "In the last segment, we built out the infrastructure\nfor our deployments and got the service up and\nrunning in AWS Fargate,",
    "start": "2706790",
    "end": "2714220"
  },
  {
    "text": "allowing for our containers to be managed with serverless infrastructure.",
    "start": "2714220",
    "end": "2718063"
  },
  {
    "text": "The next stage in this video\nis to automatically trigger an update to the development environment",
    "start": "2725340",
    "end": "2730760"
  },
  {
    "text": "once the build system\npublishes a new version of the container.",
    "start": "2730760",
    "end": "2734483"
  },
  {
    "text": "To achieve these goals, we're going to use AWS services.",
    "start": "2739700",
    "end": "2743743"
  },
  {
    "text": "First off, all of the code\nfiles that were used to stand up the infrastructure have been checked into",
    "start": "2744720",
    "end": "2750610"
  },
  {
    "text": "an AWS code commit repository. This is a different\nrepository to the one housing",
    "start": "2750610",
    "end": "2757380"
  },
  {
    "text": "our application code. We'll use AWS CodeDeploy to\nupdate our running service",
    "start": "2757380",
    "end": "2765030"
  },
  {
    "text": "and manage the cutover of the application. AWS CodeDeploy will also\nmonitor the application",
    "start": "2765030",
    "end": "2771450"
  },
  {
    "text": "for deployment errors and allow us to roll back changes to our, if something goes wrong.",
    "start": "2771450",
    "end": "2776902"
  },
  {
    "text": "We'll once again use AWS CodePipeline to orchestrate the updates\nto the application.",
    "start": "2779480",
    "end": "2784623"
  },
  {
    "text": "Now let's jump back into the console.",
    "start": "2786240",
    "end": "2788543"
  },
  {
    "start": "2789000",
    "end": "2900000"
  },
  {
    "text": "Back in the AWS management console, we're going to set up our AWS\nCodeDeploy service to deploy",
    "start": "2791278",
    "end": "2798560"
  },
  {
    "text": "our application into the\ndevelopment environment. As with all services,",
    "start": "2798560",
    "end": "2804120"
  },
  {
    "text": "the first thing we need to\ndo is set up an identity and an access management\nrole for CodeDeploy to use.",
    "start": "2804120",
    "end": "2812230"
  },
  {
    "text": "I'm gonna start by going into identity and access management.",
    "start": "2814420",
    "end": "2819073"
  },
  {
    "text": "I'm gonna select roles and I'm\ngonna select create a role.",
    "start": "2823450",
    "end": "2828450"
  },
  {
    "text": "I wanna select CodeDeploy as the service",
    "start": "2846470",
    "end": "2849859"
  },
  {
    "text": "and CodeDeploy ECS as the use case.",
    "start": "2853110",
    "end": "2856793"
  },
  {
    "text": "The wizard's automatically\ngonna select the relative required permissions for me.",
    "start": "2868330",
    "end": "2873313"
  },
  {
    "text": "I'm gonna click next tags and review.",
    "start": "2874710",
    "end": "2877293"
  },
  {
    "text": "I need to give the role a name. And then I'm gonna click create.",
    "start": "2885450",
    "end": "2891510"
  },
  {
    "start": "2900000",
    "end": "3198000"
  },
  {
    "text": "The next thing I need to do\nis to set up AWS CodeDeploy.",
    "start": "2902100",
    "end": "2905703"
  },
  {
    "text": "I need to set up an\napplication definition, so I will select applications\nand create application.",
    "start": "2924640",
    "end": "2932310"
  },
  {
    "text": "And then I need to give\nthe application a name.",
    "start": "2932310",
    "end": "2934660"
  },
  {
    "text": "For the compute platform,\nI'm going to choose ECS",
    "start": "2944550",
    "end": "2948550"
  },
  {
    "text": "and I'm gonna click create application.",
    "start": "2950727",
    "end": "2952677"
  },
  {
    "text": "The next thing I need to do\nis set up a deployment group.",
    "start": "2960320",
    "end": "2963170"
  },
  {
    "text": "I'm gonna click create deployment group.",
    "start": "2965708",
    "end": "2967293"
  },
  {
    "text": "I need to give the\ndeployment group a name. For the service role, I can select the role that I just created.",
    "start": "2981890",
    "end": "2988922"
  },
  {
    "text": "In the environment configuration, I can choose the cluster\nthat I created previously,",
    "start": "2992210",
    "end": "2997053"
  },
  {
    "text": "and the service name that I\ncreated in the previous step.",
    "start": "2999560",
    "end": "3002793"
  },
  {
    "text": "For load balancers, I'm going to choose the load balancer that's attached to my application.",
    "start": "3006290",
    "end": "3014093"
  },
  {
    "text": "I'm going to choose the production\nlistener port as port 80",
    "start": "3020054",
    "end": "3024971"
  },
  {
    "text": "and the test listener report is port 8080",
    "start": "3027734",
    "end": "3030276"
  },
  {
    "text": "Target group one, I'm going to select my target\ngroup and target group two,",
    "start": "3037260",
    "end": "3042300"
  },
  {
    "text": "I'm going to select my target group. This will automatically\nallowed CodeDeploy to send",
    "start": "3042300",
    "end": "3049280"
  },
  {
    "text": "the production traffic to port 80. It will then spin up the\nnew instance on port 8080,",
    "start": "3049280",
    "end": "3057683"
  },
  {
    "text": "and then swap the target groups\naround so that my code uses the new set of containers,",
    "start": "3058670",
    "end": "3068263"
  },
  {
    "text": "but keeps the old set of containers ready in case of fallback.",
    "start": "3069130",
    "end": "3072783"
  },
  {
    "text": "Under deployment settings, I'm going to choose reroute\nthe traffic immediately",
    "start": "3084670",
    "end": "3089990"
  },
  {
    "text": "so the traffic gets immediately sent to my new set of containers.",
    "start": "3089990",
    "end": "3093363"
  },
  {
    "text": "Under deployment configuration, I have a number of options that I can use. In this case, because I've\nonly got one instance,",
    "start": "3095300",
    "end": "3102458"
  },
  {
    "text": "I'm going to choose all at once, to change the traffic completely over to my new set of infrastructure.",
    "start": "3102458",
    "end": "3110632"
  },
  {
    "text": "If I wanted to test a\nsmall amount of traffic on the new deployment and\ngradually route traffic",
    "start": "3113430",
    "end": "3120600"
  },
  {
    "text": "to the new deployment, away from the old deployment, I could choose one of these other options.",
    "start": "3120600",
    "end": "3127423"
  },
  {
    "text": "Finally, I have the option to specify how long my old application\nrevision will be available.",
    "start": "3131070",
    "end": "3138700"
  },
  {
    "text": "This helps determine how\nlong I can trigger a rollback",
    "start": "3140990",
    "end": "3144650"
  },
  {
    "text": "For the purposes of this video, I'm going to set the value\nto a relatively short period",
    "start": "3148270",
    "end": "3153870"
  },
  {
    "text": "of five minutes. However, in a production environment,",
    "start": "3153870",
    "end": "3158940"
  },
  {
    "text": "I would probably wanna extend this out. Next, I'm going to click\ncreate deployment group.",
    "start": "3158940",
    "end": "3166092"
  },
  {
    "text": "The next stage in this process\nis to create the pipeline which will use the deployment\nthat I just created",
    "start": "3180600",
    "end": "3188360"
  },
  {
    "text": "to trigger the updates to the code.",
    "start": "3190820",
    "end": "3192570"
  },
  {
    "start": "3198000",
    "end": "3519000"
  },
  {
    "text": "We can see here, if I go to look at source\ncode and repositories",
    "start": "3198920",
    "end": "3203710"
  },
  {
    "text": "that I have an infrastructure catalog. This contains the files\nthat I was using earlier.",
    "start": "3207333",
    "end": "3212293"
  },
  {
    "text": "I had a file here that\nI used to create my task inside of AWS.",
    "start": "3227170",
    "end": "3232747"
  },
  {
    "text": "I've made a copy of that\ncalled taskdef.json. And the only change I've\nmade is to put a placeholder",
    "start": "3235070",
    "end": "3241500"
  },
  {
    "text": "in for the image of the\ncontainer as it's been updated.",
    "start": "3241500",
    "end": "3246500"
  },
  {
    "text": "I also have an appspec.yaml file, which will be used in the\ndeployment of the app,",
    "start": "3250920",
    "end": "3256900"
  },
  {
    "text": "of the new updated application.",
    "start": "3256900",
    "end": "3259172"
  },
  {
    "text": "These files have been checked here into the infrastructure repository.",
    "start": "3262070",
    "end": "3269603"
  },
  {
    "text": "Now I can change over to pipeline.",
    "start": "3276610",
    "end": "3278483"
  },
  {
    "text": "I have my existing CodePipeline\nthat controls the process to build and publish the new container",
    "start": "3283450",
    "end": "3291070"
  },
  {
    "text": "when the source code has been updated. I'm gonna create a new pipeline.",
    "start": "3291070",
    "end": "3296763"
  },
  {
    "text": "I need to give my pipeline a name.",
    "start": "3300590",
    "end": "3302290"
  },
  {
    "text": "I click next. Under source provider, I'm\ngoing to choose AWS CodeCommit.",
    "start": "3320880",
    "end": "3327610"
  },
  {
    "text": "I'm going to choose the repository. And in this case, I'm choosing the infrastructure\nrepository that I created",
    "start": "3338050",
    "end": "3343530"
  },
  {
    "text": "previously and the master branch.",
    "start": "3343530",
    "end": "3346223"
  },
  {
    "text": "I'm going to skip the build\nprovider in this stage because I don't need to build anything.",
    "start": "3353760",
    "end": "3358963"
  },
  {
    "text": "Under the deployment, I'm going to choose Amazon ECS Blue Green.",
    "start": "3362310",
    "end": "3367403"
  },
  {
    "text": "I'm gonna choose the region, which I've deployed all\nmy infrastructure to.",
    "start": "3369380",
    "end": "3374213"
  },
  {
    "text": "The application and the deployment groups that I've just set up.",
    "start": "3376820",
    "end": "3381473"
  },
  {
    "text": "Under the ECS task definition, I'm gonna choose source\nartifact and type taskdef.json.",
    "start": "3389500",
    "end": "3397707"
  },
  {
    "text": "This corresponds to the\nfile that I created, which has the placeholder in it.",
    "start": "3414150",
    "end": "3419303"
  },
  {
    "text": "For appspec, I'm gonna once again choose source artifact and type appspec.",
    "start": "3429080",
    "end": "3436880"
  },
  {
    "text": "Once again, this corresponds to a file that I have created in\nmy infrastructure code that contains the placeholders necessary",
    "start": "3449100",
    "end": "3455910"
  },
  {
    "text": "for CodeBuild for CodeDeploy.",
    "start": "3455910",
    "end": "3457343"
  },
  {
    "text": "I'm going to choose next,",
    "start": "3473890",
    "end": "3475392"
  },
  {
    "text": "scroll down and create my pipeline.",
    "start": "3479150",
    "end": "3481382"
  },
  {
    "text": "Now this pipeline is initially\ngoing to fail because I need to do some more edits to\nit, to complete the process.",
    "start": "3498220",
    "end": "3505973"
  },
  {
    "text": "As you can see here, it\nfails pretty quickly.",
    "start": "3509300",
    "end": "3511863"
  },
  {
    "start": "3519000",
    "end": "3599000"
  },
  {
    "text": "The first thing I need\nto do is click edit. And I need to edit the source stage.",
    "start": "3521826",
    "end": "3527893"
  },
  {
    "text": "I need to add an action\nand I need to add ECR",
    "start": "3531940",
    "end": "3536660"
  },
  {
    "text": "as a provider.",
    "start": "3540090",
    "end": "3541103"
  },
  {
    "text": "I'm going to choose the\nrepository that my image is being updated in.",
    "start": "3552889",
    "end": "3558142"
  },
  {
    "text": "Because this is a deployment into the test environment,\nI'm always going to use",
    "start": "3578900",
    "end": "3585270"
  },
  {
    "text": "the latest tag. This is also the default.",
    "start": "3585270",
    "end": "3589723"
  },
  {
    "text": "I need to provide a\nname for the output in, for the output artifacts to be used later",
    "start": "3605660",
    "end": "3611210"
  },
  {
    "text": "in my deployment process.",
    "start": "3611210",
    "end": "3613192"
  },
  {
    "text": "And finally, I'm going to click done. I need to remember to save\nthe changes I've made.",
    "start": "3628060",
    "end": "3636683"
  },
  {
    "text": "I need to make one more edit,",
    "start": "3643700",
    "end": "3645313"
  },
  {
    "text": "and this time to the deployment stage.",
    "start": "3649380",
    "end": "3651503"
  },
  {
    "text": "I need to add an input\nartifact being the image",
    "start": "3681920",
    "end": "3686890"
  },
  {
    "text": "that's being pulled from\nthe source repository.",
    "start": "3687820",
    "end": "3691317"
  },
  {
    "text": "And then I need to define\nthe variable substitutions that occur in my deployment.",
    "start": "3699160",
    "end": "3705493"
  },
  {
    "text": "Here in the deployment stage, I need to add another input\nartifact, which is the image,",
    "start": "3741240",
    "end": "3748350"
  },
  {
    "text": "which I'm retrieving from\nthe image repository.",
    "start": "3748350",
    "end": "3751723"
  },
  {
    "text": "The other thing I need to\ndo is dynamically update the task definition, and I'll do that by specifying\nmy image and the tag",
    "start": "3759080",
    "end": "3767980"
  },
  {
    "text": "that will be updated.",
    "start": "3775547",
    "end": "3776380"
  },
  {
    "text": "You can see here this corresponds to the task definition file\nand the tag name is there.",
    "start": "3785230",
    "end": "3791970"
  },
  {
    "text": "I'm gonna click done, save\nmy changes and click save.",
    "start": "3798650",
    "end": "3803650"
  },
  {
    "text": "Now, if I click release changes, this pipeline should run again.",
    "start": "3810860",
    "end": "3816642"
  },
  {
    "text": "My pipeline has run and\nit's completed going through the deployment for my application.",
    "start": "3819480",
    "end": "3826260"
  },
  {
    "text": "We can see now that\nalthough the deployment is listed as in progress,",
    "start": "3826260",
    "end": "3830483"
  },
  {
    "text": "it's waiting through the timeout value that I set my pipeline to make sure",
    "start": "3832010",
    "end": "3837570"
  },
  {
    "text": "that the deployment is\ncompleted successfully. I can click here on details\nto open up the panel",
    "start": "3837570",
    "end": "3846109"
  },
  {
    "text": "and see the CodeDeployment details. I can see that my\ntraffic has gone through,",
    "start": "3847340",
    "end": "3852720"
  },
  {
    "text": "it's being rerouted to the new instance.",
    "start": "3852720",
    "end": "3856053"
  },
  {
    "text": "And now I'm in my fourth step, which is waiting for five minutes.",
    "start": "3857820",
    "end": "3861523"
  },
  {
    "text": "We can see over here\nthat 100% of the traffic has been shifted to the\nreplacement instance",
    "start": "3863210",
    "end": "3869380"
  },
  {
    "text": "and the original is still\nsitting and waiting. Once this five minute\ntimeout is completed,",
    "start": "3869380",
    "end": "3875433"
  },
  {
    "text": "the original task will be\nterminated and cleaned up.",
    "start": "3877630",
    "end": "3880543"
  },
  {
    "text": "I'll allow this to complete, and then we'll demonstrate\nhow a code change",
    "start": "3885600",
    "end": "3891980"
  },
  {
    "text": "can be checked in from our source code all the way through to deploying into the development environment.",
    "start": "3891980",
    "end": "3898303"
  },
  {
    "text": "Now that my deployment is completed and the original stack\nhas been terminated,",
    "start": "3902170",
    "end": "3910363"
  },
  {
    "text": "I'm gonna go back into Visual Studio. Again, I'm gonna make a trivial\nchange to my source code.",
    "start": "3911490",
    "end": "3917283"
  },
  {
    "text": "In this case, I'm simply\ngoing to update the message by my home, controller, save.",
    "start": "3922260",
    "end": "3929942"
  },
  {
    "text": "I'm gonna commit the\nchanges to my source code and I'm going to look\nback into the AWS console.",
    "start": "3952675",
    "end": "3961700"
  },
  {
    "text": "I can see here that once again, my build project has been kicked off",
    "start": "3968680",
    "end": "3975000"
  },
  {
    "text": "with the source code update.",
    "start": "3976670",
    "end": "3978382"
  },
  {
    "text": "And triggered the build.",
    "start": "3985650",
    "end": "3986849"
  },
  {
    "text": "Once this build completes,\nwe'll see the execution,",
    "start": "3993650",
    "end": "3996986"
  },
  {
    "text": "we'll see this marked as succeeded, and then we'll see the deploy\nto development automatically",
    "start": "4000460",
    "end": "4008090"
  },
  {
    "text": "kick off as the new\ncontainer image arrives in my repository.",
    "start": "4008090",
    "end": "4012253"
  },
  {
    "text": "I'll pause the video now\nand allow this process to move along.",
    "start": "4013750",
    "end": "4018563"
  },
  {
    "text": "Now that the build and the publisher, the container has moved along, we can see that now my\ndeploy into development",
    "start": "4022730",
    "end": "4030860"
  },
  {
    "text": "has been triggered and the\nnew code is being deployed into the development environment.",
    "start": "4033080",
    "end": "4037859"
  },
  {
    "text": "As the deployment process moves through, we can check the load balancer",
    "start": "4050870",
    "end": "4057280"
  },
  {
    "text": "and see that our changes have\nautomatically been pushed through all the way from source code",
    "start": "4059840",
    "end": "4065790"
  },
  {
    "text": "to our development environment.",
    "start": "4067070",
    "end": "4068620"
  },
  {
    "text": "In the segment so far, Acme\nFinancial Data Services has built a system that\nautomatically carries",
    "start": "4074290",
    "end": "4079840"
  },
  {
    "text": "the code changes ranges from source code to build and deploys them hands off into the development environment.",
    "start": "4079840",
    "end": "4086299"
  },
  {
    "text": "The final step in this process is to implement continuous delivery.",
    "start": "4088000",
    "end": "4092033"
  },
  {
    "text": "Continuous delivery extends this pattern to automatically roll out changes into the production environment",
    "start": "4095230",
    "end": "4101920"
  },
  {
    "text": "once they've been tested in development.",
    "start": "4101920",
    "end": "4103920"
  },
  {
    "text": "The good news at this point is\nthe steps you need to follow are exactly the same as the\nsteps in the previous segment.",
    "start": "4107290",
    "end": "4114093"
  },
  {
    "text": "I've already created a second cluster, a new load balancer and\na set of target groups.",
    "start": "4116010",
    "end": "4122000"
  },
  {
    "text": "Let's have a look at the\nchanges in the console. Here in the AWS console,\nonce again, we can go to EC2",
    "start": "4122000",
    "end": "4131050"
  },
  {
    "text": "and scroll down to load balancers.",
    "start": "4135490",
    "end": "4138033"
  },
  {
    "text": "You can see here, I've created\na production load balancer, exactly the same as I did for my test environments load balancer.",
    "start": "4144460",
    "end": "4152223"
  },
  {
    "text": "If I go to Elastic Container Service, you can see I've created\na production cluster.",
    "start": "4158870",
    "end": "4165822"
  },
  {
    "text": "Just as with the development cluster, I've created a service that is running.",
    "start": "4169720",
    "end": "4174493"
  },
  {
    "text": "And if I go to CodePipeline,\nwe can look at the deploy,",
    "start": "4184577",
    "end": "4188903"
  },
  {
    "text": "the container deployment, and you can see what I've done is added a second deployment step.",
    "start": "4190300",
    "end": "4196290"
  },
  {
    "text": "I followed exactly the same\ninstructions as setting up the initial deployment step",
    "start": "4196290",
    "end": "4202030"
  },
  {
    "text": "into the development\nenvironment and only substituted the values for the production items.",
    "start": "4202030",
    "end": "4210193"
  },
  {
    "text": "You can see by looking at the pipeline, as soon as the deployment into\nthe development environment",
    "start": "4216430",
    "end": "4224510"
  },
  {
    "text": "has been completed, which in this pipeline takes five minutes,",
    "start": "4224840",
    "end": "4230443"
  },
  {
    "text": "we then roll forward and automatically deploy into production.",
    "start": "4231630",
    "end": "4235123"
  },
  {
    "text": "You can see here in the\nproduction standpoint, we've shifted all the traffic into the new set of\ncontainers, and we're waiting.",
    "start": "4238060",
    "end": "4247980"
  },
  {
    "text": "In this case, we're using\nthe default timeout period of one hour.",
    "start": "4250150",
    "end": "4253553"
  },
  {
    "text": "In a production situation, you would want to set the time\nout in development to a much",
    "start": "4255610",
    "end": "4262469"
  },
  {
    "text": "larger value to give you an\nopportunity to test the changes before automatically rolling\nthem into production.",
    "start": "4262470",
    "end": "4269403"
  },
  {
    "text": "You can see up here that\nthe AWS console gives you the opportunities to stop\nand roll back the deployment",
    "start": "4270730",
    "end": "4278250"
  },
  {
    "text": "in the case of a failure.",
    "start": "4278250",
    "end": "4279683"
  },
  {
    "text": "Acme's accomplished a\nlot in this video series. So let's recap what we\nwere able to accomplish",
    "start": "4285170",
    "end": "4290810"
  },
  {
    "text": "in this session. Acme's no longer deploying the\ncode from developer laptops.",
    "start": "4290810",
    "end": "4296530"
  },
  {
    "text": "The updated deployment process\nis repeatable and reliable. Acme's using serverless containers",
    "start": "4296530",
    "end": "4303410"
  },
  {
    "text": "to house their application. This means that there's no\nunderlying infrastructure to manage in the form of servers.",
    "start": "4303410",
    "end": "4310193"
  },
  {
    "text": "Updates are fully automated\nfrom checking in code all the way through\ndeploying into production.",
    "start": "4313580",
    "end": "4319960"
  },
  {
    "text": "This is a completely hands off approach. And finally, all deployments are using",
    "start": "4319960",
    "end": "4326240"
  },
  {
    "text": "a blue green deployment methodology, allowing for zero downtime, deployments and rollbacks.",
    "start": "4326240",
    "end": "4332853"
  },
  {
    "text": "I hope this video's been helpful.",
    "start": "4334867",
    "end": "4336463"
  }
]