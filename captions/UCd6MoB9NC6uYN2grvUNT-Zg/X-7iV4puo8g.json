[
  {
    "text": "hello everyone welcome to this tutorial",
    "start": "160",
    "end": "2480"
  },
  {
    "text": "on automating the creation and rotation",
    "start": "2480",
    "end": "4560"
  },
  {
    "text": "of Amazon SCS SMTP credentials my name",
    "start": "4560",
    "end": "7919"
  },
  {
    "text": "is Gautam and I have Rakkesh and Shrinat",
    "start": "7919",
    "end": "10320"
  },
  {
    "text": "here with me we are all from AWS and we",
    "start": "10320",
    "end": "13200"
  },
  {
    "text": "are excited to walk you through",
    "start": "13200",
    "end": "14559"
  },
  {
    "text": "implementing automated solutions for",
    "start": "14559",
    "end": "16560"
  },
  {
    "text": "Amazon SCS SMTP credential rotation",
    "start": "16560",
    "end": "19760"
  },
  {
    "text": "before we begin I'd like to acknowledge",
    "start": "19760",
    "end": "22000"
  },
  {
    "text": "the original authors of this solution",
    "start": "22000",
    "end": "24240"
  },
  {
    "text": "Zip Jesse Brett and Rob whose excellent",
    "start": "24240",
    "end": "27840"
  },
  {
    "text": "work on the AWS messaging and targeting",
    "start": "27840",
    "end": "29840"
  },
  {
    "text": "blog forms the foundation of today's",
    "start": "29840",
    "end": "33000"
  },
  {
    "text": "demonstration let us walk you through",
    "start": "33000",
    "end": "35120"
  },
  {
    "text": "what this blog",
    "start": "35120",
    "end": "36600"
  },
  {
    "text": "offers this blog post presents three",
    "start": "36600",
    "end": "39760"
  },
  {
    "text": "approaches for managing SCS SMTP",
    "start": "39760",
    "end": "42840"
  },
  {
    "text": "credentials each designed to address",
    "start": "42840",
    "end": "45360"
  },
  {
    "text": "different use cases and requirements",
    "start": "45360",
    "end": "48079"
  },
  {
    "text": "option one is a fully automated solution",
    "start": "48079",
    "end": "50640"
  },
  {
    "text": "that leverages AWS Lambda Secrets",
    "start": "50640",
    "end": "53680"
  },
  {
    "text": "Manager and Systems",
    "start": "53680",
    "end": "55800"
  },
  {
    "text": "Manager this approach automates the",
    "start": "55800",
    "end": "58239"
  },
  {
    "text": "entire credential rotation process from",
    "start": "58239",
    "end": "60399"
  },
  {
    "text": "creation to deployment across your email",
    "start": "60399",
    "end": "62920"
  },
  {
    "text": "servers it's built around AWS Secret",
    "start": "62920",
    "end": "65840"
  },
  {
    "text": "Manager's rotation functionality and",
    "start": "65840",
    "end": "68560"
  },
  {
    "text": "uses systems manager to automatically",
    "start": "68560",
    "end": "70880"
  },
  {
    "text": "update credentials on your email servers",
    "start": "70880",
    "end": "74159"
  },
  {
    "text": "option two provides a semi-automated",
    "start": "74159",
    "end": "76680"
  },
  {
    "text": "approach combining AWS Lambda and",
    "start": "76680",
    "end": "79759"
  },
  {
    "text": "Secrets Manager for credential rotation",
    "start": "79759",
    "end": "82560"
  },
  {
    "text": "while keeping your server updates manual",
    "start": "82560",
    "end": "85759"
  },
  {
    "text": "this solution is particularly useful",
    "start": "85759",
    "end": "88000"
  },
  {
    "text": "when you need to maintain direct control",
    "start": "88000",
    "end": "90080"
  },
  {
    "text": "over your email server configurations or",
    "start": "90080",
    "end": "93040"
  },
  {
    "text": "when automated server updates aren't",
    "start": "93040",
    "end": "94880"
  },
  {
    "text": "suitable for your environment",
    "start": "94880",
    "end": "97840"
  },
  {
    "text": "option three presents an alternative",
    "start": "97840",
    "end": "99759"
  },
  {
    "text": "approach by migrating to SCS mail",
    "start": "99759",
    "end": "101920"
  },
  {
    "text": "manager and using authenticated ingress",
    "start": "101920",
    "end": "104320"
  },
  {
    "text": "endpoint which supports either a",
    "start": "104320",
    "end": "106240"
  },
  {
    "text": "standard SMTP password or AWS secrets",
    "start": "106240",
    "end": "109640"
  },
  {
    "text": "manager in today's demonstration we will",
    "start": "109640",
    "end": "112799"
  },
  {
    "text": "be focusing on implementing options one",
    "start": "112799",
    "end": "114960"
  },
  {
    "text": "and two walking you through detailed",
    "start": "114960",
    "end": "117520"
  },
  {
    "text": "implementations of both automated and",
    "start": "117520",
    "end": "119439"
  },
  {
    "text": "semi-automated approaches these",
    "start": "119439",
    "end": "121920"
  },
  {
    "text": "implementations will give you a solid",
    "start": "121920",
    "end": "123920"
  },
  {
    "text": "foundation for setting up credential",
    "start": "123920",
    "end": "126000"
  },
  {
    "text": "rotation in your own environment",
    "start": "126000",
    "end": "128319"
  },
  {
    "text": "regardless of which approach you",
    "start": "128319",
    "end": "129920"
  },
  {
    "text": "ultimately choose to adopt let's examine",
    "start": "129920",
    "end": "132560"
  },
  {
    "text": "the architecture for both options in",
    "start": "132560",
    "end": "134920"
  },
  {
    "text": "detail for option one which is the fully",
    "start": "134920",
    "end": "137760"
  },
  {
    "text": "automated solution the process begins",
    "start": "137760",
    "end": "140319"
  },
  {
    "text": "with AWS secrets manager which initiates",
    "start": "140319",
    "end": "143200"
  },
  {
    "text": "the credential rotation either on a",
    "start": "143200",
    "end": "145120"
  },
  {
    "text": "defined schedule or manually",
    "start": "145120",
    "end": "148080"
  },
  {
    "text": "this triggers a lambda function that",
    "start": "148080",
    "end": "151040"
  },
  {
    "text": "creates new SCS SMTP credentials",
    "start": "151040",
    "end": "153760"
  },
  {
    "text": "validates these credentials coordinates",
    "start": "153760",
    "end": "156480"
  },
  {
    "text": "with systems manager to update the email",
    "start": "156480",
    "end": "159000"
  },
  {
    "text": "servers manages cleanup of all",
    "start": "159000",
    "end": "161360"
  },
  {
    "text": "credentials and with AWS systems manager",
    "start": "161360",
    "end": "164560"
  },
  {
    "text": "through its agent on EC2 instances",
    "start": "164560",
    "end": "167200"
  },
  {
    "text": "handles the secure update of credentials",
    "start": "167200",
    "end": "169519"
  },
  {
    "text": "across all email servers thus providing",
    "start": "169519",
    "end": "172080"
  },
  {
    "text": "complete automation without any manual",
    "start": "172080",
    "end": "174160"
  },
  {
    "text": "intervention",
    "start": "174160",
    "end": "176080"
  },
  {
    "text": "for option two which is the",
    "start": "176080",
    "end": "177519"
  },
  {
    "text": "semi-automated solution this",
    "start": "177519",
    "end": "179760"
  },
  {
    "text": "architecture shares the initial",
    "start": "179760",
    "end": "181280"
  },
  {
    "text": "components with option one but is",
    "start": "181280",
    "end": "183680"
  },
  {
    "text": "designed for environments that require",
    "start": "183680",
    "end": "185599"
  },
  {
    "text": "more control over server updates the",
    "start": "185599",
    "end": "188640"
  },
  {
    "text": "workflow starts similarly where AWS",
    "start": "188640",
    "end": "191519"
  },
  {
    "text": "secrets manager initiates the rotation",
    "start": "191519",
    "end": "194640"
  },
  {
    "text": "lambda function then creates and",
    "start": "194640",
    "end": "196400"
  },
  {
    "text": "validates new",
    "start": "196400",
    "end": "198120"
  },
  {
    "text": "credentials these new credentials are",
    "start": "198120",
    "end": "200640"
  },
  {
    "text": "then stored securely in secrets manager",
    "start": "200640",
    "end": "204879"
  },
  {
    "text": "the key distinction is in the final step",
    "start": "204879",
    "end": "207440"
  },
  {
    "text": "that is instead of automatic deployment",
    "start": "207440",
    "end": "209519"
  },
  {
    "text": "the credentials await manual",
    "start": "209519",
    "end": "210959"
  },
  {
    "text": "implementation on your email servers to",
    "start": "210959",
    "end": "214080"
  },
  {
    "text": "support this workflow Amazon Event",
    "start": "214080",
    "end": "216400"
  },
  {
    "text": "Bridge monitors for successful",
    "start": "216400",
    "end": "218319"
  },
  {
    "text": "credential rotation when detected it",
    "start": "218319",
    "end": "221360"
  },
  {
    "text": "triggers an Amazon SNS",
    "start": "221360",
    "end": "223480"
  },
  {
    "text": "notification administrators then receive",
    "start": "223480",
    "end": "226239"
  },
  {
    "text": "alerts about the new credentials and",
    "start": "226239",
    "end": "228560"
  },
  {
    "text": "manual updates can then be performed at",
    "start": "228560",
    "end": "230560"
  },
  {
    "text": "the appropriate time this approach is",
    "start": "230560",
    "end": "232879"
  },
  {
    "text": "particularly valuable when your",
    "start": "232879",
    "end": "235040"
  },
  {
    "text": "environment requires manual control of",
    "start": "235040",
    "end": "236720"
  },
  {
    "text": "server configurations updates need to",
    "start": "236720",
    "end": "239360"
  },
  {
    "text": "align with maintenance windows and",
    "start": "239360",
    "end": "241760"
  },
  {
    "text": "security policies require human",
    "start": "241760",
    "end": "243519"
  },
  {
    "text": "oversight of credential",
    "start": "243519",
    "end": "245879"
  },
  {
    "text": "changes in summary both architectures",
    "start": "245879",
    "end": "248720"
  },
  {
    "text": "effectively handle credential rotation",
    "start": "248720",
    "end": "250959"
  },
  {
    "text": "while offering different levels of",
    "start": "250959",
    "end": "252400"
  },
  {
    "text": "automation to match your operational",
    "start": "252400",
    "end": "254840"
  },
  {
    "text": "needs for our demonstration we are using",
    "start": "254840",
    "end": "257919"
  },
  {
    "text": "an EC2 instance running Postfix though",
    "start": "257919",
    "end": "261359"
  },
  {
    "text": "any SMTP compatible email server would",
    "start": "261359",
    "end": "263720"
  },
  {
    "text": "work we are operating within the SCS",
    "start": "263720",
    "end": "266560"
  },
  {
    "text": "sandbox mode which is perfect for",
    "start": "266560",
    "end": "268680"
  },
  {
    "text": "testing but in the sandbox mode you can",
    "start": "268680",
    "end": "271360"
  },
  {
    "text": "send only to verified email identities",
    "start": "271360",
    "end": "273919"
  },
  {
    "text": "and are capped at 200 emails per day our",
    "start": "273919",
    "end": "277600"
  },
  {
    "text": "setup follows the configuration which is",
    "start": "277600",
    "end": "279759"
  },
  {
    "text": "outlined in this block's cloud formation",
    "start": "279759",
    "end": "281759"
  },
  {
    "text": "template the EC2 instance is configured",
    "start": "281759",
    "end": "285120"
  },
  {
    "text": "with outbound access on port 587 for STP",
    "start": "285120",
    "end": "288160"
  },
  {
    "text": "traffic and has an IM role granting",
    "start": "288160",
    "end": "290400"
  },
  {
    "text": "necessary systems manager and ACS",
    "start": "290400",
    "end": "293479"
  },
  {
    "text": "permissions we have also installed the",
    "start": "293479",
    "end": "295759"
  },
  {
    "text": "SSM agent on the instance and tagged it",
    "start": "295759",
    "end": "298479"
  },
  {
    "text": "with the key email server and value true",
    "start": "298479",
    "end": "302240"
  },
  {
    "text": "these tags are critical as they are how",
    "start": "302240",
    "end": "304400"
  },
  {
    "text": "systems manager identifies which servers",
    "start": "304400",
    "end": "306800"
  },
  {
    "text": "to update during the credential rotation",
    "start": "306800",
    "end": "309440"
  },
  {
    "text": "we have also ensured AWS CLI access and",
    "start": "309440",
    "end": "312080"
  },
  {
    "text": "the right permissions for services like",
    "start": "312080",
    "end": "314160"
  },
  {
    "text": "cloud formation lambda systems manager",
    "start": "314160",
    "end": "317520"
  },
  {
    "text": "secrets manager and",
    "start": "317520",
    "end": "319479"
  },
  {
    "text": "SCS while this setup suits our",
    "start": "319479",
    "end": "321880"
  },
  {
    "text": "demonstration remember that these",
    "start": "321880",
    "end": "324000"
  },
  {
    "text": "principles are",
    "start": "324000",
    "end": "325320"
  },
  {
    "text": "flexible you can adapt them to various",
    "start": "325320",
    "end": "327840"
  },
  {
    "text": "environments whether you are working",
    "start": "327840",
    "end": "329199"
  },
  {
    "text": "with different email servers outside the",
    "start": "329199",
    "end": "331919"
  },
  {
    "text": "sandbox or even in hybrid cloud on",
    "start": "331919",
    "end": "334800"
  },
  {
    "text": "premises setups now let's dive into the",
    "start": "334800",
    "end": "337360"
  },
  {
    "text": "implementation of option one which is",
    "start": "337360",
    "end": "339919"
  },
  {
    "text": "the fully automated credential rotation",
    "start": "339919",
    "end": "341919"
  },
  {
    "text": "solution i'll first log into my as",
    "start": "341919",
    "end": "344320"
  },
  {
    "text": "console and navigate to cloud",
    "start": "344320",
    "end": "346680"
  },
  {
    "text": "shell i want to highlight that you can",
    "start": "346680",
    "end": "349199"
  },
  {
    "text": "use any IDE with AWS CLI configured but",
    "start": "349199",
    "end": "352720"
  },
  {
    "text": "in this demonstration I'm using AWS",
    "start": "352720",
    "end": "355440"
  },
  {
    "text": "cloud shell so to begin let's first",
    "start": "355440",
    "end": "358240"
  },
  {
    "text": "clone our repository containing the",
    "start": "358240",
    "end": "360320"
  },
  {
    "text": "automation scripts",
    "start": "360320",
    "end": "362479"
  },
  {
    "text": "i will run the get clone command",
    "start": "362479",
    "end": "364479"
  },
  {
    "text": "specifying the SCS credential rotation",
    "start": "364479",
    "end": "367880"
  },
  {
    "text": "branch as you can see the repository has",
    "start": "367880",
    "end": "371039"
  },
  {
    "text": "been successfully cloned let's change",
    "start": "371039",
    "end": "373520"
  },
  {
    "text": "into the automatic rotation directory",
    "start": "373520",
    "end": "375680"
  },
  {
    "text": "and examine the readme file to",
    "start": "375680",
    "end": "377520"
  },
  {
    "text": "understand our implementation",
    "start": "377520",
    "end": "380280"
  },
  {
    "text": "steps this readme file provides a",
    "start": "380280",
    "end": "382639"
  },
  {
    "text": "detailed guide of the steps we'll be",
    "start": "382639",
    "end": "384520"
  },
  {
    "text": "following it's a great resource to refer",
    "start": "384520",
    "end": "386960"
  },
  {
    "text": "back to if you are implementing the",
    "start": "386960",
    "end": "388479"
  },
  {
    "text": "solution in your own environment",
    "start": "388479",
    "end": "391199"
  },
  {
    "text": "you can also find this information on",
    "start": "391199",
    "end": "393199"
  },
  {
    "text": "the GitHub repository page our first",
    "start": "393199",
    "end": "395840"
  },
  {
    "text": "task is creating an S3 bucket in your",
    "start": "395840",
    "end": "398479"
  },
  {
    "text": "east one to store our deployment",
    "start": "398479",
    "end": "401240"
  },
  {
    "text": "artifacts next we'll package our cloud",
    "start": "401240",
    "end": "403759"
  },
  {
    "text": "for template this process uploads our",
    "start": "403759",
    "end": "406319"
  },
  {
    "text": "Lambda functions to the S3 bucket we",
    "start": "406319",
    "end": "408479"
  },
  {
    "text": "just created and generates a new",
    "start": "408479",
    "end": "410400"
  },
  {
    "text": "template with updated",
    "start": "410400",
    "end": "412440"
  },
  {
    "text": "references we can also see the cloud for",
    "start": "412440",
    "end": "415120"
  },
  {
    "text": "package exported as an object in the S3",
    "start": "415120",
    "end": "417440"
  },
  {
    "text": "bucket here now comes the crucial step",
    "start": "417440",
    "end": "419520"
  },
  {
    "text": "which is deploying our stack i'm running",
    "start": "419520",
    "end": "422560"
  },
  {
    "text": "the cloud for deploy command with",
    "start": "422560",
    "end": "424560"
  },
  {
    "text": "several important",
    "start": "424560",
    "end": "427080"
  },
  {
    "text": "parameters we are specifying our stack",
    "start": "427080",
    "end": "429440"
  },
  {
    "text": "name the necessary IM capabilities and",
    "start": "429440",
    "end": "432800"
  },
  {
    "text": "various parameters including our email",
    "start": "432800",
    "end": "435039"
  },
  {
    "text": "address for notifications and the tags",
    "start": "435039",
    "end": "437759"
  },
  {
    "text": "that will identify our email servers",
    "start": "437759",
    "end": "440880"
  },
  {
    "text": "while our stack is deploying let me show",
    "start": "440880",
    "end": "442880"
  },
  {
    "text": "you our EC2 instance configuration this",
    "start": "442880",
    "end": "445840"
  },
  {
    "text": "instance has been preconfigured with",
    "start": "445840",
    "end": "447440"
  },
  {
    "text": "postfix and the necessary SCS",
    "start": "447440",
    "end": "450840"
  },
  {
    "text": "permissions notice the tax applied email",
    "start": "450840",
    "end": "454639"
  },
  {
    "text": "server true these tags are crucial as",
    "start": "454639",
    "end": "457440"
  },
  {
    "text": "they allow automation to identify which",
    "start": "457440",
    "end": "460000"
  },
  {
    "text": "servers need credential",
    "start": "460000",
    "end": "463080"
  },
  {
    "text": "updates the instance has a systems",
    "start": "463080",
    "end": "465680"
  },
  {
    "text": "manager role attached which enables",
    "start": "465680",
    "end": "467919"
  },
  {
    "text": "automated configuration updates during",
    "start": "467919",
    "end": "469680"
  },
  {
    "text": "the rotation",
    "start": "469680",
    "end": "472479"
  },
  {
    "text": "with our EC2 instance properly",
    "start": "472479",
    "end": "474000"
  },
  {
    "text": "configured let's return to our deploy",
    "start": "474000",
    "end": "475840"
  },
  {
    "text": "stack and examine the resources it",
    "start": "475840",
    "end": "479599"
  },
  {
    "text": "created so this is the IM key created as",
    "start": "479800",
    "end": "483599"
  },
  {
    "text": "part of the cloud formation template",
    "start": "483599",
    "end": "485280"
  },
  {
    "text": "which we are going to rotate in the next",
    "start": "485280",
    "end": "487160"
  },
  {
    "text": "step let's test our automated rotation",
    "start": "487160",
    "end": "490360"
  },
  {
    "text": "process i'm navigating to secrets",
    "start": "490360",
    "end": "492720"
  },
  {
    "text": "manager where we can see our secret",
    "start": "492720",
    "end": "495039"
  },
  {
    "text": "notice that the rotation configuration",
    "start": "495039",
    "end": "496720"
  },
  {
    "text": "is set for automatic rotation every 30",
    "start": "496720",
    "end": "498639"
  },
  {
    "text": "days however this interval can be",
    "start": "498639",
    "end": "501440"
  },
  {
    "text": "customized based on your security",
    "start": "501440",
    "end": "503800"
  },
  {
    "text": "requirements while the automatic",
    "start": "503800",
    "end": "505680"
  },
  {
    "text": "rotation will happen according to the",
    "start": "505680",
    "end": "507199"
  },
  {
    "text": "schedule for our demonstration today I",
    "start": "507199",
    "end": "509759"
  },
  {
    "text": "will bypass the waiting period and",
    "start": "509759",
    "end": "511120"
  },
  {
    "text": "trigger a manual rotation by clicking",
    "start": "511120",
    "end": "513120"
  },
  {
    "text": "rotate secret",
    "start": "513120",
    "end": "515240"
  },
  {
    "text": "immediately let's look at the AM console",
    "start": "515240",
    "end": "518000"
  },
  {
    "text": "now after the rotation you can see the",
    "start": "518000",
    "end": "520719"
  },
  {
    "text": "new access key here that was created 1",
    "start": "520719",
    "end": "523120"
  },
  {
    "text": "minute ago",
    "start": "523120",
    "end": "526360"
  },
  {
    "text": "now let's monitor the rotation process",
    "start": "534560",
    "end": "536480"
  },
  {
    "text": "in real time i'm navigating to our",
    "start": "536480",
    "end": "538480"
  },
  {
    "text": "Lambda function in the AWS console here",
    "start": "538480",
    "end": "541760"
  },
  {
    "text": "I'll click on the monitor tab and then",
    "start": "541760",
    "end": "543760"
  },
  {
    "text": "select view cloudatch",
    "start": "543760",
    "end": "545320"
  },
  {
    "text": "logs let me open the most recent log",
    "start": "545320",
    "end": "547920"
  },
  {
    "text": "stream so that we can see the latest",
    "start": "547920",
    "end": "549440"
  },
  {
    "text": "rotation activity",
    "start": "549440",
    "end": "552000"
  },
  {
    "text": "as you look at these logs you can see",
    "start": "552000",
    "end": "553680"
  },
  {
    "text": "the rotation process follows four",
    "start": "553680",
    "end": "555200"
  },
  {
    "text": "distinct stages let me walk you through",
    "start": "555200",
    "end": "557839"
  },
  {
    "text": "each one as we see them in the",
    "start": "557839",
    "end": "559880"
  },
  {
    "text": "logs first we have the create secret",
    "start": "559880",
    "end": "563720"
  },
  {
    "text": "stage here in the logs we can see it",
    "start": "563720",
    "end": "566399"
  },
  {
    "text": "generating new IM",
    "start": "566399",
    "end": "567959"
  },
  {
    "text": "credentials this is the first step in",
    "start": "567959",
    "end": "569920"
  },
  {
    "text": "our rotation",
    "start": "569920",
    "end": "571240"
  },
  {
    "text": "process scrolling down a bit we come to",
    "start": "571240",
    "end": "573680"
  },
  {
    "text": "the set secret stage notice how it's",
    "start": "573680",
    "end": "576480"
  },
  {
    "text": "updating these newly created credentials",
    "start": "576480",
    "end": "578240"
  },
  {
    "text": "in secrets manager",
    "start": "578240",
    "end": "580560"
  },
  {
    "text": "this ensures that our secret storage is",
    "start": "580560",
    "end": "582480"
  },
  {
    "text": "always up to",
    "start": "582480",
    "end": "584360"
  },
  {
    "text": "date next we have the test secret stage",
    "start": "584360",
    "end": "588000"
  },
  {
    "text": "this is a crucial step where the",
    "start": "588000",
    "end": "589440"
  },
  {
    "text": "function verifies that the new",
    "start": "589440",
    "end": "590959"
  },
  {
    "text": "credentials work correctly with",
    "start": "590959",
    "end": "593640"
  },
  {
    "text": "SCS finally we have the finish secret",
    "start": "593640",
    "end": "596760"
  },
  {
    "text": "stage in this last step the function",
    "start": "596760",
    "end": "599440"
  },
  {
    "text": "updates our EC2 instances with the new",
    "start": "599440",
    "end": "601839"
  },
  {
    "text": "credentials and removes the old",
    "start": "601839",
    "end": "604600"
  },
  {
    "text": "ones this completes our rotation cycle",
    "start": "604600",
    "end": "608800"
  },
  {
    "text": "looking further in the logs we can also",
    "start": "608800",
    "end": "610800"
  },
  {
    "text": "see a message showing that the old IM",
    "start": "610800",
    "end": "613839"
  },
  {
    "text": "access keys for user SS secret IM has",
    "start": "613839",
    "end": "617279"
  },
  {
    "text": "been successfully deleted which confirms",
    "start": "617279",
    "end": "619839"
  },
  {
    "text": "that the cleanup of all credentials has",
    "start": "619839",
    "end": "621920"
  },
  {
    "text": "completed",
    "start": "621920",
    "end": "624320"
  },
  {
    "text": "successfully now that we have seen the",
    "start": "628120",
    "end": "630160"
  },
  {
    "text": "fully automated solution let's explore",
    "start": "630160",
    "end": "632320"
  },
  {
    "text": "option two the manual credential",
    "start": "632320",
    "end": "634399"
  },
  {
    "text": "rotation solution this approach is",
    "start": "634399",
    "end": "636880"
  },
  {
    "text": "particularly useful when you need more",
    "start": "636880",
    "end": "638880"
  },
  {
    "text": "control over the rotation process or",
    "start": "638880",
    "end": "640640"
  },
  {
    "text": "when automatic updates aren't feasible",
    "start": "640640",
    "end": "642320"
  },
  {
    "text": "in your",
    "start": "642320",
    "end": "644720"
  },
  {
    "text": "environment since we have cloud shell",
    "start": "645959",
    "end": "648240"
  },
  {
    "text": "already open let's navigate to the",
    "start": "648240",
    "end": "650079"
  },
  {
    "text": "manual rotation directory in our clone",
    "start": "650079",
    "end": "652600"
  },
  {
    "text": "repository looking at the readme file",
    "start": "652600",
    "end": "655200"
  },
  {
    "text": "you will notice the key differences in",
    "start": "655200",
    "end": "656880"
  },
  {
    "text": "this implementation",
    "start": "656880",
    "end": "658720"
  },
  {
    "text": "while option one handled everything",
    "start": "658720",
    "end": "660680"
  },
  {
    "text": "automatically option two provides a more",
    "start": "660680",
    "end": "663040"
  },
  {
    "text": "controlled approach with manual",
    "start": "663040",
    "end": "664480"
  },
  {
    "text": "confirmation",
    "start": "664480",
    "end": "666200"
  },
  {
    "text": "steps let's start by creating our S3",
    "start": "666200",
    "end": "668880"
  },
  {
    "text": "bucket for this implementation I'll use",
    "start": "668880",
    "end": "671360"
  },
  {
    "text": "a different bucket name to keep our",
    "start": "671360",
    "end": "673360"
  },
  {
    "text": "solution separate and package and store",
    "start": "673360",
    "end": "675279"
  },
  {
    "text": "the lambda functions",
    "start": "675279",
    "end": "678240"
  },
  {
    "text": "here checking the S3 bucket we can see",
    "start": "681000",
    "end": "684079"
  },
  {
    "text": "that the uploaded artifacts are in this",
    "start": "684079",
    "end": "685760"
  },
  {
    "text": "S3 bucket",
    "start": "685760",
    "end": "688000"
  },
  {
    "text": "next let's deploy our cloud formation",
    "start": "688000",
    "end": "690920"
  },
  {
    "text": "template the command structure is",
    "start": "690920",
    "end": "693040"
  },
  {
    "text": "similar to option one but notice the",
    "start": "693040",
    "end": "695760"
  },
  {
    "text": "different parameter",
    "start": "695760",
    "end": "697240"
  },
  {
    "text": "set for deployment we are specifying",
    "start": "697240",
    "end": "700399"
  },
  {
    "text": "parameters that include our notification",
    "start": "700399",
    "end": "702480"
  },
  {
    "text": "email addresses and IM user",
    "start": "702480",
    "end": "706200"
  },
  {
    "text": "settings while the cloud formation stack",
    "start": "706200",
    "end": "708640"
  },
  {
    "text": "is being deployed you will receive an",
    "start": "708640",
    "end": "710399"
  },
  {
    "text": "important email this is an SNS",
    "start": "710399",
    "end": "712800"
  },
  {
    "text": "subscription confirmation email and it",
    "start": "712800",
    "end": "714640"
  },
  {
    "text": "is crucial to click the confirmation",
    "start": "714640",
    "end": "716240"
  },
  {
    "text": "link in this email this will enable the",
    "start": "716240",
    "end": "718640"
  },
  {
    "text": "notification system for our rotation",
    "start": "718640",
    "end": "722399"
  },
  {
    "text": "process i see the stack being deployed",
    "start": "722839",
    "end": "725440"
  },
  {
    "text": "successfully",
    "start": "725440",
    "end": "727240"
  },
  {
    "text": "now with the stack now deployed and",
    "start": "727240",
    "end": "729920"
  },
  {
    "text": "notifications confirmed let's add our",
    "start": "729920",
    "end": "732399"
  },
  {
    "text": "server as an item to the Dynamob table",
    "start": "732399",
    "end": "735600"
  },
  {
    "text": "this tracks our server inventory so we",
    "start": "735600",
    "end": "738320"
  },
  {
    "text": "are doing this by creating an item and",
    "start": "738320",
    "end": "740079"
  },
  {
    "text": "adding the value of our instance ID",
    "start": "740079",
    "end": "741920"
  },
  {
    "text": "against the attribute",
    "start": "741920",
    "end": "744880"
  },
  {
    "text": "name navigating back to the IM console",
    "start": "745880",
    "end": "749760"
  },
  {
    "text": "we can see that we have one access key",
    "start": "749760",
    "end": "753120"
  },
  {
    "text": "now we can go back to systems manager",
    "start": "753120",
    "end": "756000"
  },
  {
    "text": "parameter store where the SMTP password",
    "start": "756000",
    "end": "758880"
  },
  {
    "text": "that is derived from the AM secret key",
    "start": "758880",
    "end": "760959"
  },
  {
    "text": "is being",
    "start": "760959",
    "end": "762200"
  },
  {
    "text": "stored we can see this under the show",
    "start": "762200",
    "end": "764800"
  },
  {
    "text": "decrypted value here",
    "start": "764800",
    "end": "768720"
  },
  {
    "text": "so now let's examine the step functions",
    "start": "768720",
    "end": "771200"
  },
  {
    "text": "created as part of the cloud formation",
    "start": "771200",
    "end": "773160"
  },
  {
    "text": "package to start the rotation process",
    "start": "773160",
    "end": "775519"
  },
  {
    "text": "under the step function let's click on",
    "start": "775519",
    "end": "777600"
  },
  {
    "text": "the start execution button and start the",
    "start": "777600",
    "end": "780240"
  },
  {
    "text": "execution with an empty JSON",
    "start": "780240",
    "end": "783720"
  },
  {
    "text": "object we can immediately see the",
    "start": "783720",
    "end": "785920"
  },
  {
    "text": "workflow begin the green highlighting",
    "start": "785920",
    "end": "788720"
  },
  {
    "text": "shows the current step in the process",
    "start": "788720",
    "end": "790800"
  },
  {
    "text": "and you can watch it progress through",
    "start": "790800",
    "end": "792560"
  },
  {
    "text": "different states",
    "start": "792560",
    "end": "794639"
  },
  {
    "text": "this visual representation provides",
    "start": "794639",
    "end": "796720"
  },
  {
    "text": "clear visibility into the rotation",
    "start": "796720",
    "end": "800319"
  },
  {
    "text": "process as you can see below we are at",
    "start": "801880",
    "end": "804880"
  },
  {
    "text": "the manual confirmation stage",
    "start": "804880",
    "end": "807959"
  },
  {
    "text": "now and looking at the manual",
    "start": "807959",
    "end": "810160"
  },
  {
    "text": "confirmation step function we are",
    "start": "810160",
    "end": "812399"
  },
  {
    "text": "waiting on the credential change request",
    "start": "812399",
    "end": "814160"
  },
  {
    "text": "for which we should have received an",
    "start": "814160",
    "end": "815760"
  },
  {
    "text": "email notification",
    "start": "815760",
    "end": "819079"
  },
  {
    "text": "this email requests us to update the",
    "start": "820240",
    "end": "822000"
  },
  {
    "text": "credentials from system manager",
    "start": "822000",
    "end": "823680"
  },
  {
    "text": "parameter store on our servers and then",
    "start": "823680",
    "end": "826399"
  },
  {
    "text": "click on the email confirming that the",
    "start": "826399",
    "end": "828240"
  },
  {
    "text": "change is",
    "start": "828240",
    "end": "829959"
  },
  {
    "text": "done so back in system manager parameter",
    "start": "829959",
    "end": "833120"
  },
  {
    "text": "store we can see that the SCS secret",
    "start": "833120",
    "end": "835680"
  },
  {
    "text": "value shows version two of our",
    "start": "835680",
    "end": "837959"
  },
  {
    "text": "credentials this indicates that the new",
    "start": "837959",
    "end": "840240"
  },
  {
    "text": "values have been stored now we can also",
    "start": "840240",
    "end": "842639"
  },
  {
    "text": "verify this in the version history",
    "start": "842639",
    "end": "845399"
  },
  {
    "text": "here and in IM console we can see two",
    "start": "845399",
    "end": "849360"
  },
  {
    "text": "access keys now this is expected during",
    "start": "849360",
    "end": "852000"
  },
  {
    "text": "the rotation process as we maintain both",
    "start": "852000",
    "end": "854399"
  },
  {
    "text": "old and new credentials during this",
    "start": "854399",
    "end": "856320"
  },
  {
    "text": "transition",
    "start": "856320",
    "end": "858800"
  },
  {
    "text": "period assuming we have updated the keys",
    "start": "859240",
    "end": "862000"
  },
  {
    "text": "in our email server i will now manually",
    "start": "862000",
    "end": "864639"
  },
  {
    "text": "go and click the confirmation link in",
    "start": "864639",
    "end": "866560"
  },
  {
    "text": "the email notification we received",
    "start": "866560",
    "end": "870839"
  },
  {
    "text": "as we can see the confirmation message",
    "start": "871440",
    "end": "873279"
  },
  {
    "text": "here this confirmation triggers the next",
    "start": "873279",
    "end": "875279"
  },
  {
    "text": "phase of our rotation",
    "start": "875279",
    "end": "878399"
  },
  {
    "text": "process so back at our step function",
    "start": "878680",
    "end": "881360"
  },
  {
    "text": "console we can see the manual",
    "start": "881360",
    "end": "883120"
  },
  {
    "text": "confirmation execution has succeeded",
    "start": "883120",
    "end": "885279"
  },
  {
    "text": "next we go to the credential rotation",
    "start": "885279",
    "end": "887760"
  },
  {
    "text": "step function and refresh the state",
    "start": "887760",
    "end": "889519"
  },
  {
    "text": "machine to check the",
    "start": "889519",
    "end": "892320"
  },
  {
    "text": "events as manual confirmation execution",
    "start": "893160",
    "end": "895839"
  },
  {
    "text": "is succeeded now we see it's entered the",
    "start": "895839",
    "end": "898639"
  },
  {
    "text": "weight state specifically wait a day to",
    "start": "898639",
    "end": "900959"
  },
  {
    "text": "check the",
    "start": "900959",
    "end": "903279"
  },
  {
    "text": "confirmation this visual workflow shows",
    "start": "909639",
    "end": "912160"
  },
  {
    "text": "us progressing from creating the new",
    "start": "912160",
    "end": "914000"
  },
  {
    "text": "access key for ACS user through to its",
    "start": "914000",
    "end": "916480"
  },
  {
    "text": "final stages where it waits 3 days",
    "start": "916480",
    "end": "918800"
  },
  {
    "text": "before deleting the old access key",
    "start": "918800",
    "end": "923160"
  },
  {
    "text": "we have walked through both automation",
    "start": "923440",
    "end": "925360"
  },
  {
    "text": "options for creating and rotating Amazon",
    "start": "925360",
    "end": "927760"
  },
  {
    "text": "SCS SMTP credentials we hope this",
    "start": "927760",
    "end": "930880"
  },
  {
    "text": "walkthrough helps you implement the",
    "start": "930880",
    "end": "932720"
  },
  {
    "text": "solution that best fits your environment",
    "start": "932720",
    "end": "935199"
  },
  {
    "text": "for more details including the specific",
    "start": "935199",
    "end": "937360"
  },
  {
    "text": "blog post this video is based on please",
    "start": "937360",
    "end": "939519"
  },
  {
    "text": "check the description below",
    "start": "939519",
    "end": "943320"
  }
]