[
  {
    "start": "0",
    "end": "113000"
  },
  {
    "text": "I'm gonna go ahead and get started thank you everyone for coming my name is",
    "start": "60",
    "end": "6660"
  },
  {
    "text": "Laura grit and I am a principal technical program manager at Amazon",
    "start": "6660",
    "end": "11820"
  },
  {
    "text": "I've been at Amazon for five years and during that time I have worked for the Amazon retail business",
    "start": "11820",
    "end": "18420"
  },
  {
    "text": "now when I say Amazon retail I mean everything that's not AWS",
    "start": "18420",
    "end": "23760"
  },
  {
    "text": "there's a common misconception that AWS was created specifically for Amazon",
    "start": "23760",
    "end": "29099"
  },
  {
    "text": "retail but nothing can be further from the truth we operate as completely separate businesses in Amazon we report",
    "start": "29099",
    "end": "36780"
  },
  {
    "text": "into different senior vice presidents we sit in different buildings and we also operate independently like you Amazon",
    "start": "36780",
    "end": "44460"
  },
  {
    "text": "retail is another user of AWS we work with account managers technical account",
    "start": "44460",
    "end": "49680"
  },
  {
    "text": "managers and solutions Architects as we design our Solutions and approaches to AWS and to the cloud",
    "start": "49680",
    "end": "56219"
  },
  {
    "text": "today I've been invited here to talk to you about how Amazon retail is using AWS",
    "start": "56219",
    "end": "62219"
  },
  {
    "text": "to power our retail business now I'm presenting this talk from the perspective of Amazon retail so when I",
    "start": "62219",
    "end": "69060"
  },
  {
    "text": "say Amazon I mean the retail side of the business when I mean AWS I'll specifically say AWS",
    "start": "69060",
    "end": "76700"
  },
  {
    "text": "over two and a half years ago I took over an initiative called moving Amazon to AWS or Moz as we refer to it",
    "start": "76860",
    "end": "84360"
  },
  {
    "text": "internally while Amazon has been using AWS Services ever since S3 launched we wanted to have",
    "start": "84360",
    "end": "90540"
  },
  {
    "text": "a program that looked across our company to see if we were approaching our",
    "start": "90540",
    "end": "95700"
  },
  {
    "text": "migration at the right pace and also if we were taking big steps towards AWS as",
    "start": "95700",
    "end": "102180"
  },
  {
    "text": "opposed to incremental ones we wanted to make sure that we were creating the right culture with our Engineers so that",
    "start": "102180",
    "end": "107820"
  },
  {
    "text": "they were looking towards AWS first for their service solutions",
    "start": "107820",
    "end": "113119"
  },
  {
    "start": "113000",
    "end": "232000"
  },
  {
    "text": "here's the top reasons why Amazon retail is looking at AWS and why we're",
    "start": "113399",
    "end": "118979"
  },
  {
    "text": "migrating to AWS the first is to enable our Engineers to go faster",
    "start": "118979",
    "end": "124920"
  },
  {
    "text": "by using AWS Services we don't have to start everything from scratch and it can",
    "start": "124920",
    "end": "130679"
  },
  {
    "text": "instead spend time working on the things we want to spend time on which is building out differential features for",
    "start": "130679",
    "end": "135900"
  },
  {
    "text": "our customers things like putting servers into racks is not something that we want to spend our time doing and we",
    "start": "135900",
    "end": "142080"
  },
  {
    "text": "happily let AWS do that for us the next reason that we look at AWS is",
    "start": "142080",
    "end": "148319"
  },
  {
    "text": "to decrease our cost of our business doing things like right sizing our fleets and by dynamically scaling our",
    "start": "148319",
    "end": "154800"
  },
  {
    "text": "fleets we've been able to save costs as we've migrated to AWS last and equally important is we want to",
    "start": "154800",
    "end": "162900"
  },
  {
    "text": "influence the AWS roadmap whenever our Engineers find features or services that",
    "start": "162900",
    "end": "169500"
  },
  {
    "text": "they feel that AWS should be providing we make sure to submit those requests now just because Amazon retail submits a",
    "start": "169500",
    "end": "176099"
  },
  {
    "text": "request to AWS it does not get to the top of the priority queue there's no direct line for Amazon retail to jump",
    "start": "176099",
    "end": "183360"
  },
  {
    "text": "above everyone else instead AWS includes the Amazon retail request with all of",
    "start": "183360",
    "end": "188760"
  },
  {
    "text": "the other requests that they're getting from their users to figure out what makes sense for their business and what",
    "start": "188760",
    "end": "194220"
  },
  {
    "text": "their customers really need while we focus on building out new Services directly on AWS for Amazon",
    "start": "194220",
    "end": "201239"
  },
  {
    "text": "retail we have a lot of services that predate AWS and in fact we found that",
    "start": "201239",
    "end": "207540"
  },
  {
    "text": "it's different to migrate existing services to AWS than it is to build directly new services on AWS",
    "start": "207540",
    "end": "215459"
  },
  {
    "text": "so today I'm going to talk to you about how Amazon retail approaches migrating services to AWS and also come back to",
    "start": "215459",
    "end": "223019"
  },
  {
    "text": "point one here about how using AWS has enabled our Engineers to go faster and",
    "start": "223019",
    "end": "228299"
  },
  {
    "text": "what that has meant for us as an Enterprise as I mentioned since S3 was launched we",
    "start": "228299",
    "end": "235260"
  },
  {
    "start": "232000",
    "end": "278000"
  },
  {
    "text": "have been migrating services to AWS in fact anytime AWS has a new service",
    "start": "235260",
    "end": "241200"
  },
  {
    "text": "launch there are multiple teams in retail that are signed up for their Beta release in fact for Amazon redshift as",
    "start": "241200",
    "end": "247500"
  },
  {
    "text": "Andy jassy mentioned earlier our Amazon data warehouse team is signed up and has been working with them on the product",
    "start": "247500",
    "end": "254640"
  },
  {
    "text": "however the biggest migration that we did and one that occurred early in the move to AWS program at Amazon was the",
    "start": "254640",
    "end": "261479"
  },
  {
    "text": "migration of the amazon.com web server Fleet and as the head of the program",
    "start": "261479",
    "end": "266699"
  },
  {
    "text": "that's the one that I get asked the most about so I want to dig into that a little bit so why did we start looking at migrating",
    "start": "266699",
    "end": "274259"
  },
  {
    "text": "the amazon.com web server Fleet to AWS in the first place this is a typical weekly graph of Amazon",
    "start": "274259",
    "end": "281820"
  },
  {
    "text": "traffic you see that we have Peaks during the day and trusts at night also",
    "start": "281820",
    "end": "287820"
  },
  {
    "text": "we have pretty consistent traffic between the different days if you manage a website you might be very familiar",
    "start": "287820",
    "end": "293820"
  },
  {
    "text": "with this type of traffic trend we require capacity that aligns with this graph during the day we require",
    "start": "293820",
    "end": "300240"
  },
  {
    "text": "thousands of servers to support the traffic coming into amazon.com and at night we don't need as many when we",
    "start": "300240",
    "end": "305639"
  },
  {
    "text": "don't have as many customers working on the site I'm going to be referring in this talk to something called a fleet a fleet is",
    "start": "305639",
    "end": "312600"
  },
  {
    "text": "what we call a collection of servers or instances required to host an application or service",
    "start": "312600",
    "end": "319638"
  },
  {
    "text": "so we don't just keep capacity in the amazon.com Fleet at the Blue Line instead we keep capacity at this red",
    "start": "319740",
    "end": "326880"
  },
  {
    "text": "line which represents the Max Capacity we require for our traffic plus a 15",
    "start": "326880",
    "end": "332880"
  },
  {
    "text": "buffer in case we have any unexpected traffic demands",
    "start": "332880",
    "end": "338039"
  },
  {
    "text": "we got pretty good as a company at figuring out where to set this red line unless there were any unannounced sales",
    "start": "338039",
    "end": "344460"
  },
  {
    "text": "events or other external factors that caused our traffic to spike the problem is there's a lot of space",
    "start": "344460",
    "end": "351120"
  },
  {
    "text": "between that red line and the blue line on the graph and all of that represents the capacity that we own but don't",
    "start": "351120",
    "end": "358800"
  },
  {
    "text": "actually need for our service so how much is going to waste",
    "start": "358800",
    "end": "364680"
  },
  {
    "text": "the Blue Area here represents the capacity that we actually need to host the amazon.com website and the red",
    "start": "364680",
    "end": "371520"
  },
  {
    "text": "represents the capacity that we own but don't actually use during the course of the week you can see that on an average",
    "start": "371520",
    "end": "378240"
  },
  {
    "text": "week we were wasting about 40 percent of our capacity for the web server Fleet",
    "start": "378240",
    "end": "383880"
  },
  {
    "text": "however the problem is actually worse than that you see we don't just have a",
    "start": "383880",
    "end": "389580"
  },
  {
    "start": "384000",
    "end": "454000"
  },
  {
    "text": "daily cycle for the website instead we have an annual traffic cycle that follows the normal retail cycle so this",
    "start": "389580",
    "end": "397560"
  },
  {
    "text": "shows the traffic over the course of November our traffic progressively goes up as we get closer and closer to the",
    "start": "397560",
    "end": "403380"
  },
  {
    "text": "peak time of the year and in November you see gradually ramps up until we hit",
    "start": "403380",
    "end": "408539"
  },
  {
    "text": "Black Friday and Cyber Monday we have capacity that comes in in terms",
    "start": "408539",
    "end": "414539"
  },
  {
    "text": "of a step function so for our data centers we don't just purchase a single server at a time to scale literally",
    "start": "414539",
    "end": "420419"
  },
  {
    "text": "instead we purchase servers on the order of a rack and so what that means is we",
    "start": "420419",
    "end": "425699"
  },
  {
    "text": "have a step function of capacity coming in and at some point in time we're",
    "start": "425699",
    "end": "431280"
  },
  {
    "text": "actually going to run out of space in our data center when we run out of space in our data center in order to add that next server",
    "start": "431280",
    "end": "437759"
  },
  {
    "text": "and that next rack that we need we're going to need to build an entire new data center in order to incrementally",
    "start": "437759",
    "end": "445139"
  },
  {
    "text": "increase the amount of servers that we have for our website that's going to require seriously time and require",
    "start": "445139",
    "end": "451319"
  },
  {
    "text": "millions of dollars to do now even that doesn't show the extent of",
    "start": "451319",
    "end": "458160"
  },
  {
    "start": "454000",
    "end": "575000"
  },
  {
    "text": "our wasted capacity problem for Q4 we want to make sure that we have",
    "start": "458160",
    "end": "464099"
  },
  {
    "text": "capacity in place well before Peak we don't want our service coming in just",
    "start": "464099",
    "end": "469199"
  },
  {
    "text": "right before depending on the amount of time that it takes to procure and provision our hosts and our data center",
    "start": "469199",
    "end": "475460"
  },
  {
    "text": "so in actuality this is what our held capacity looked like on an average",
    "start": "475460",
    "end": "481020"
  },
  {
    "text": "November where we got all of our capacity in place well ahead of when we",
    "start": "481020",
    "end": "486120"
  },
  {
    "text": "actually needed it towards the end of the month and of course after our Peak while our",
    "start": "486120",
    "end": "492300"
  },
  {
    "text": "traffic exits the year higher than we come in as we gain new customers through the holiday season we still have excess",
    "start": "492300",
    "end": "498419"
  },
  {
    "text": "capacity that we purchased for that peak season that we now don't need come January or February",
    "start": "498419",
    "end": "503460"
  },
  {
    "text": "so how much was going to waste in an average November you can see here about",
    "start": "503460",
    "end": "508979"
  },
  {
    "text": "three quarters of our capacity we didn't actually require throughout the course of an average November now this is not",
    "start": "508979",
    "end": "516659"
  },
  {
    "text": "consistent with Amazon's retail goal of providing our customers the lowest possible prices on the items that we",
    "start": "516659",
    "end": "523440"
  },
  {
    "text": "sell one of the main benefits that people talk about for cloud computing is the",
    "start": "523440",
    "end": "528959"
  },
  {
    "text": "ability to dynamically scale capacity up and down when you actually need it the idea is when you don't need capacity you",
    "start": "528959",
    "end": "535860"
  },
  {
    "text": "release it back to the cloud and you don't pay for it during that time and then when you need capacity again you",
    "start": "535860",
    "end": "541320"
  },
  {
    "text": "simply get it back and from this data the web server Fleet should be the poster child for this type",
    "start": "541320",
    "end": "548160"
  },
  {
    "text": "of dynamic scale story so from this data the problem's pretty",
    "start": "548160",
    "end": "553800"
  },
  {
    "text": "obvious we want to move the amazon.com web server Fleet to handle our wasted capacity now one more thing there's also",
    "start": "553800",
    "end": "561360"
  },
  {
    "text": "common misconception that all of this red area is actually what AWS sold to customers that's not true this was",
    "start": "561360",
    "end": "568320"
  },
  {
    "text": "sitting idle in the amazon.com data center just sitting there waiting to be used",
    "start": "568320",
    "end": "575360"
  },
  {
    "start": "575000",
    "end": "591000"
  },
  {
    "text": "so we started looking at migrating the web server Fleet but how are we going to do",
    "start": "575580",
    "end": "581220"
  },
  {
    "text": "this we started looking at what ec2 had to offer and discovered it wasn't going to be as straightforward as just simply",
    "start": "581220",
    "end": "587760"
  },
  {
    "text": "putting the web server Fleet on ac2 so when we started looking like well we",
    "start": "587760",
    "end": "594000"
  },
  {
    "start": "591000",
    "end": "783000"
  },
  {
    "text": "definitely want the web server Fleet running on AWS and ec2 but the web server Fleet calls back to a lot of",
    "start": "594000",
    "end": "600540"
  },
  {
    "text": "dependencies that we're still in the Amazon retail data center in addition there were back-end databases and also",
    "start": "600540",
    "end": "607440"
  },
  {
    "text": "over the years we built a lot of tools to help our Engineers manage our fleets were we going to need to migrate the web",
    "start": "607440",
    "end": "613920"
  },
  {
    "text": "server Fleet all of its dependencies all the backend databases and all of our",
    "start": "613920",
    "end": "618959"
  },
  {
    "text": "tools at the same time while the goal of the move to AWS program at Amazon is to move everything",
    "start": "618959",
    "end": "624839"
  },
  {
    "text": "to AWS that would be a lot to tackle at once and we really wanted to have a big",
    "start": "624839",
    "end": "630120"
  },
  {
    "text": "win with migrating the web server Fleet and migrate the rest as it was appropriate",
    "start": "630120",
    "end": "635220"
  },
  {
    "text": "so we started talking to ec2 and found out they had heard similar concerns from",
    "start": "635220",
    "end": "640920"
  },
  {
    "text": "other Enterprises and had started working on a set of products that would",
    "start": "640920",
    "end": "646079"
  },
  {
    "text": "enable Enterprises to extend their data center into AWS",
    "start": "646079",
    "end": "651959"
  },
  {
    "text": "and when we heard about this we volunteered to be early adopters of the products so the technical solution to",
    "start": "651959",
    "end": "658260"
  },
  {
    "text": "migrating the web server fleet was to utilize the virtual private Cloud product and the AWS Direct Connect",
    "start": "658260",
    "end": "663839"
  },
  {
    "text": "products we use the virtual private Cloud to carve out a section of AWS and",
    "start": "663839",
    "end": "670380"
  },
  {
    "text": "have it be for Amazon it also allows us to assign our own IP addresses to those",
    "start": "670380",
    "end": "675420"
  },
  {
    "text": "ec2 instances we then use the AWS Direct Connect product to create a dedicated",
    "start": "675420",
    "end": "680880"
  },
  {
    "text": "connection between the Amazon retail Data Center and our vpcs in AWS",
    "start": "680880",
    "end": "686160"
  },
  {
    "text": "what this really meant for us is once we had ec2 instances connected back to the",
    "start": "686160",
    "end": "691500"
  },
  {
    "text": "Amazon retail data center we could focus on the web server Fleet migration in isolation and then start looking at the",
    "start": "691500",
    "end": "698519"
  },
  {
    "text": "other parts of our architecture as we've predicted um so the web server Fleet",
    "start": "698519",
    "end": "705600"
  },
  {
    "text": "had been finely tuned over the course of many years to run on a specific type of",
    "start": "705600",
    "end": "710940"
  },
  {
    "text": "physical server and anytime we upgraded to a new version of the physical server or anytime we",
    "start": "710940",
    "end": "717300"
  },
  {
    "text": "migrated to a new version of Linux there were always problems with the web server Fleet and the team that managed the",
    "start": "717300",
    "end": "723360"
  },
  {
    "text": "fleet would have to spend a lot of time figuring out how to get that web server Fleet running on that new type of",
    "start": "723360",
    "end": "728459"
  },
  {
    "text": "hardware so as we approach the migration just getting the virtual private cloud and AWS Direct Connect products in place was",
    "start": "728459",
    "end": "735480"
  },
  {
    "text": "not the end of the migration we knew going from our specific physical server type to ec2 instances was going to",
    "start": "735480",
    "end": "742860"
  },
  {
    "text": "require some work and as we predicted when we started testing we found that",
    "start": "742860",
    "end": "748320"
  },
  {
    "text": "there were going to be different performance characteristics and we needed to invest the time in making the",
    "start": "748320",
    "end": "753720"
  },
  {
    "text": "web server Fleet run high performantly on ec2 and so a big part of the web server",
    "start": "753720",
    "end": "759480"
  },
  {
    "text": "migration was actually doing a deep dive in our own performance in terms of CPU memory i o and doing things like",
    "start": "759480",
    "end": "766139"
  },
  {
    "text": "reducing our memory footprint so that we could run the web server Fleet at equal performance on ec2 as we had",
    "start": "766139",
    "end": "773579"
  },
  {
    "text": "before and I'm happy to say that after a lot of testing and some changes to our software we were able to get the web",
    "start": "773579",
    "end": "779880"
  },
  {
    "text": "server Fleet running on ec2 this date November 10 2010 is the day we",
    "start": "779880",
    "end": "786120"
  },
  {
    "start": "783000",
    "end": "864000"
  },
  {
    "text": "turned off the last physical web server in the amazon.com data center for the web server Fleet",
    "start": "786120",
    "end": "792180"
  },
  {
    "text": "since this day every web page to the amazon.com website has been rendered on",
    "start": "792180",
    "end": "798720"
  },
  {
    "text": "a fleet of ec2 machines now look at this date this happened just",
    "start": "798720",
    "end": "804060"
  },
  {
    "text": "a little bit before Black Friday in 2010. now people might think we're a",
    "start": "804060",
    "end": "809220"
  },
  {
    "text": "little crazy to make that big of an architectural change right before Q4 and believe me we got a lot of questions",
    "start": "809220",
    "end": "815820"
  },
  {
    "text": "inside Amazon as well however notice I said that November 10th was the day we turned off the last physical web server",
    "start": "815820",
    "end": "822360"
  },
  {
    "text": "we didn't just do one big flip over to ec2 and hoped everything worked throughout the course of the previous",
    "start": "822360",
    "end": "828060"
  },
  {
    "text": "year we had tested incrementally migrated and verified that we were good",
    "start": "828060",
    "end": "833339"
  },
  {
    "text": "to go on ec2 and only fully migrated once we were 100 confident that we could",
    "start": "833339",
    "end": "838860"
  },
  {
    "text": "run at high performance on ec2 and ec2 can handle our scale for Q4 that year and I'm happy to say that in Q4 2010 we",
    "start": "838860",
    "end": "847320"
  },
  {
    "text": "had excellent performance and our availability was of that or higher than what we had before when we ran in our",
    "start": "847320",
    "end": "853079"
  },
  {
    "text": "own data centers in fact we're going through our third peak season now on ec2 and our",
    "start": "853079",
    "end": "859320"
  },
  {
    "text": "availability and performance has been fantastic so going back did we solve the problem",
    "start": "859320",
    "end": "866220"
  },
  {
    "text": "we had in the first place of having underutilized capacity for the amazon.com web server Fleet",
    "start": "866220",
    "end": "872459"
  },
  {
    "text": "and the answer is yes this dotted line represents our held capacity now that",
    "start": "872459",
    "end": "877800"
  },
  {
    "text": "we're in ec2 we still retain our 15 buffer to quickly be able to handle",
    "start": "877800",
    "end": "883019"
  },
  {
    "text": "unexpected traffic demand but through releasing capacity when we don't need it we've been able to save over 25 percent",
    "start": "883019",
    "end": "889680"
  },
  {
    "text": "of our costs with going to ec2 as a matter of fact we didn't just solve",
    "start": "889680",
    "end": "895680"
  },
  {
    "text": "some cost problems and capacity held problems we also helped reduce some",
    "start": "895680",
    "end": "901740"
  },
  {
    "text": "operational load for the developers that were managing the web server Fleet and I want to dig into that a little bit more",
    "start": "901740",
    "end": "907980"
  },
  {
    "text": "because that's been an important part of our migration story from a program perspective",
    "start": "907980",
    "end": "913079"
  },
  {
    "text": "so let's go back to our held capacity before we went to ec2 we once again have",
    "start": "913079",
    "end": "918660"
  },
  {
    "text": "our flat line at about 15 percent above what our Max is going to be for the week",
    "start": "918660",
    "end": "924300"
  },
  {
    "text": "let's say Tuesday night we have a multi-rack outage now even though we paid for and we own",
    "start": "924300",
    "end": "931380"
  },
  {
    "text": "the capacity we now have less available capacity than we had before and less",
    "start": "931380",
    "end": "936420"
  },
  {
    "text": "than what we need for the rest of the week we handle this as you'd expect we get a lot of people on the phone on Tuesday",
    "start": "936420",
    "end": "942600"
  },
  {
    "text": "night and figure out what happened to the racks and eventually with a lot of heroics",
    "start": "942600",
    "end": "948060"
  },
  {
    "text": "get the racks back up and now we're good to go for the rest of the week however come Friday",
    "start": "948060",
    "end": "955199"
  },
  {
    "text": "we discovered that the game box 7000 has launched and we weren't told ahead of",
    "start": "955199",
    "end": "960720"
  },
  {
    "text": "time now we have traffic that's going higher than what we predicted our Max traffic was going to be for the rest of the week",
    "start": "960720",
    "end": "967800"
  },
  {
    "text": "so once again we get a bunch of people on the phone and figure out how to scramble to find extra capacity from",
    "start": "967800",
    "end": "974880"
  },
  {
    "text": "inside our data centers to put inside the web server Fleet and with heroics we",
    "start": "974880",
    "end": "980220"
  },
  {
    "text": "once again get extra capacity and we're good to go however now we have even more",
    "start": "980220",
    "end": "985320"
  },
  {
    "text": "capacity from when the sale ends than what we actually predict we need for the next week and we need to figure out what",
    "start": "985320",
    "end": "992100"
  },
  {
    "text": "we're going to do with that extra capacity now that we're on ec2 the process is",
    "start": "992100",
    "end": "998399"
  },
  {
    "text": "completely different and in fact we don't just use ec2 for the web server Fleet we use ec2 with",
    "start": "998399",
    "end": "1004220"
  },
  {
    "text": "auto scaling Auto scaling is a feature of ec2 that detects if a host goes down",
    "start": "1004220",
    "end": "1009920"
  },
  {
    "text": "and does automatic replacement of it as well as Dynamic scaling of fleets so",
    "start": "1009920",
    "end": "1015079"
  },
  {
    "text": "let's step through the same series of events and see what it looks like now that we're on ec2",
    "start": "1015079",
    "end": "1021579"
  },
  {
    "text": "first there's a multi-rack outage on Tuesday night there's a blip and our",
    "start": "1021620",
    "end": "1027020"
  },
  {
    "text": "available capacity but Auto scaling detects that our instances went down and immediately launches new instances to",
    "start": "1027020",
    "end": "1033620"
  },
  {
    "text": "replace them the main thing here is no one in Amazon retail has to get on a call to handle",
    "start": "1033620",
    "end": "1040520"
  },
  {
    "text": "this we automatically recover through Auto scaling now I'm assuming someone in ec2 had to handle the fact that we had a",
    "start": "1040520",
    "end": "1048380"
  },
  {
    "text": "multi-rack outage but not our problem we got our replaced instances and everyone in Amazon retail can go through without",
    "start": "1048380",
    "end": "1055100"
  },
  {
    "text": "getting paged now we once again have our sale on Friday and once again it's not a fire",
    "start": "1055100",
    "end": "1062059"
  },
  {
    "text": "drill we simply see through Auto scaling that our CPU is running hotter than expected and we add more ec2 instances",
    "start": "1062059",
    "end": "1069799"
  },
  {
    "text": "to the fleet and of course compared to before once",
    "start": "1069799",
    "end": "1075860"
  },
  {
    "text": "the sale is done we can return the extra capacity we got back to ec2 and we don't have to pay for it anymore and in fact",
    "start": "1075860",
    "end": "1082220"
  },
  {
    "text": "this is how we handle our big launches now such as the Kindle Fire launch from earlier this year",
    "start": "1082220",
    "end": "1087500"
  },
  {
    "text": "now that we're on ec2 if we mispredict our capacity needs it's not a big deal anymore we simply go and add more",
    "start": "1087500",
    "end": "1094460"
  },
  {
    "text": "machines from ec2 moving the web server Fleet not only got the business excited about the cost",
    "start": "1094460",
    "end": "1101960"
  },
  {
    "start": "1097000",
    "end": "1246000"
  },
  {
    "text": "savings and our ability to scale literally but also got developers excited about the operational load",
    "start": "1101960",
    "end": "1107900"
  },
  {
    "text": "decrease that they had to bird one benefits of this migration were",
    "start": "1107900",
    "end": "1114679"
  },
  {
    "text": "shown to the rest of the company it actually jump started a wave of migrations to ec2 from inside Amazon",
    "start": "1114679",
    "end": "1121460"
  },
  {
    "text": "retail and we found from a program perspective this has been important to find early migrations that benefit both",
    "start": "1121460",
    "end": "1128539"
  },
  {
    "text": "the business and the developers because then they both are working together to figure out how to move their services to",
    "start": "1128539",
    "end": "1135140"
  },
  {
    "text": "AWS at Amazon we don't force anyone to migrate instead we lure teams to migrate",
    "start": "1135140",
    "end": "1142580"
  },
  {
    "text": "themselves to AWS with the benefits that they're going to gain through the migration",
    "start": "1142580",
    "end": "1147679"
  },
  {
    "text": "when you're considering migrating your Enterprise to AWS it's also important to consider your application stack look at",
    "start": "1147679",
    "end": "1154820"
  },
  {
    "text": "the different services that you have and your company and determine how complex that migration is going to be and what",
    "start": "1154820",
    "end": "1161059"
  },
  {
    "text": "you're going to get in return from that migration also important especially by early",
    "start": "1161059",
    "end": "1166460"
  },
  {
    "text": "migrations is to look at who owns the service you're considering migrating",
    "start": "1166460",
    "end": "1171500"
  },
  {
    "text": "determine that team's level of ownership their technical expertise and their motivations and their excitement about",
    "start": "1171500",
    "end": "1178039"
  },
  {
    "text": "getting that service running on AWS you may choose to not migrate the simplest service that you have in your company",
    "start": "1178039",
    "end": "1184220"
  },
  {
    "text": "but instead one that will create a cultural change in the company and force more migrations automatically to AWS",
    "start": "1184220",
    "end": "1192500"
  },
  {
    "text": "in the case of the web server Fleet they had very spiky traffic demands which made them an ideal use case for ec2",
    "start": "1192500",
    "end": "1199400"
  },
  {
    "text": "however it's a really big Fleet it's thousands of machines and it's also a",
    "start": "1199400",
    "end": "1205220"
  },
  {
    "text": "major Revenue source for Amazon so if the migration didn't go well that could be a big risk to our company",
    "start": "1205220",
    "end": "1211520"
  },
  {
    "text": "however it's stateless in that we don't retain State on the Amazon retail Fleet",
    "start": "1211520",
    "end": "1216559"
  },
  {
    "text": "and so that made it a little bit easier of a service to migrate than some of our more complex Services we have in our",
    "start": "1216559",
    "end": "1221660"
  },
  {
    "text": "company also the team had good technical ownership and also was incredibly",
    "start": "1221660",
    "end": "1227419"
  },
  {
    "text": "motivated to get the web server Fleet to ec2 in the end we chose to migrate one of",
    "start": "1227419",
    "end": "1233780"
  },
  {
    "text": "our big services in order to make a point that if the web server Fleet could migrate other services with similar",
    "start": "1233780",
    "end": "1239900"
  },
  {
    "text": "characteristics would be able to migrate as well and that's exactly what happened in Amazon",
    "start": "1239900",
    "end": "1245500"
  },
  {
    "text": "so the web server fleet was stateless as I mentioned but what about services that retain data",
    "start": "1245840",
    "end": "1251539"
  },
  {
    "start": "1246000",
    "end": "1559000"
  },
  {
    "text": "there's probably no piece of our infrastructure that's proven more problematic over the years than our",
    "start": "1251539",
    "end": "1256880"
  },
  {
    "text": "databases we constantly struggled to get our relational databases to scale at the pace of our business",
    "start": "1256880",
    "end": "1263120"
  },
  {
    "text": "so let's take a look at a service that migrated to handle their database scaling problem",
    "start": "1263120",
    "end": "1270639"
  },
  {
    "text": "one of the promises that Amazon makes to our customers is that you will always be able to see the past orders that you",
    "start": "1270799",
    "end": "1277460"
  },
  {
    "text": "placed on Amazon here you can see a screenshot of my order history page and circled in right",
    "start": "1277460",
    "end": "1283340"
  },
  {
    "text": "you can click on any of the years that I have made a purchase on Amazon and I can see what orders I have made",
    "start": "1283340",
    "end": "1290360"
  },
  {
    "text": "as you might imagine in the course of our history our customers have placed billions of orders",
    "start": "1290360",
    "end": "1295760"
  },
  {
    "text": "and a few years ago we made an interesting discovery most discussions around database scaling involves the",
    "start": "1295760",
    "end": "1303020"
  },
  {
    "text": "transactions per second that the database can handle however when we were looking at our infrastructure costs we",
    "start": "1303020",
    "end": "1308659"
  },
  {
    "text": "stumbled upon the fact that for us there was an equally important if not more important factor in our ability to scale",
    "start": "1308659",
    "end": "1315200"
  },
  {
    "text": "and that was the cumulative amount of data stored by the database and if you think about it it makes sense",
    "start": "1315200",
    "end": "1321220"
  },
  {
    "text": "the more data you get into your database the more memory pressure you're going to be putting on that hardware and by",
    "start": "1321220",
    "end": "1327919"
  },
  {
    "text": "reducing the accumulate amount of data that you have the more requests can be handled in memory as opposed to going to",
    "start": "1327919",
    "end": "1333380"
  },
  {
    "text": "disk so here's a high level architecture overview of our ordering service it's a",
    "start": "1333380",
    "end": "1339980"
  },
  {
    "text": "pretty straightforward service oriented architecture the web servers talk to the ordering service which in turn talks",
    "start": "1339980",
    "end": "1345500"
  },
  {
    "text": "through the ordering database below you can see the two most common",
    "start": "1345500",
    "end": "1350900"
  },
  {
    "text": "ways that people scale databases pattern one you simply buy bigger and bigger",
    "start": "1350900",
    "end": "1357500"
  },
  {
    "text": "databases to handle the increased amount of data and transactions you need for your database",
    "start": "1357500",
    "end": "1362659"
  },
  {
    "text": "in the second you Shard your data across multiple databases",
    "start": "1362659",
    "end": "1368360"
  },
  {
    "text": "pattern one gets more expensive as you move to more and more exotic types of hardware and eventually you're going to",
    "start": "1368360",
    "end": "1374840"
  },
  {
    "text": "hit a wall where there isn't Hardware that's big enough to handle the size of your database",
    "start": "1374840",
    "end": "1379940"
  },
  {
    "text": "in the second pattern it becomes much more complex in the case of failures replication and handling inner server",
    "start": "1379940",
    "end": "1386900"
  },
  {
    "text": "communication ultimately neither of these patterns make us happy",
    "start": "1386900",
    "end": "1392299"
  },
  {
    "text": "so the problems are pretty straightforward first we found that cumulative amount of data not just",
    "start": "1392299",
    "end": "1397820"
  },
  {
    "text": "transactions per second we're impacting our ability to scale our databases second we didn't really like either of",
    "start": "1397820",
    "end": "1404360"
  },
  {
    "text": "these approaches they each have its own pitfalls third the most expensive Hardwares we",
    "start": "1404360",
    "end": "1410120"
  },
  {
    "text": "have in the Amazon retail data center are database hosts our dbas require us",
    "start": "1410120",
    "end": "1415220"
  },
  {
    "text": "to get high-end expensive components for them to host our applications so to the extent that we can reduce the number of",
    "start": "1415220",
    "end": "1421880"
  },
  {
    "text": "database boxes we have in the amazon.com retail data center the lower our costs",
    "start": "1421880",
    "end": "1427039"
  },
  {
    "text": "are going to be for our business the solution we came up with was to create a tiered storage architecture for",
    "start": "1427039",
    "end": "1434120"
  },
  {
    "text": "the ordering service utilizing AWS data store specifically in this case S3",
    "start": "1434120",
    "end": "1439940"
  },
  {
    "text": "the solution takes advantage of the fact there's actually two types of data being stored in the ordering database the",
    "start": "1439940",
    "end": "1446480"
  },
  {
    "text": "first are the orders that are still changing pretty rapidly those where customers are checking to see what their",
    "start": "1446480",
    "end": "1452480"
  },
  {
    "text": "delivery dates are or those where customers are going to return or orders that they determine they no longer need",
    "start": "1452480",
    "end": "1459140"
  },
  {
    "text": "the second type of data are the orders that are now closed those that aren't changing and are immutable",
    "start": "1459140",
    "end": "1465440"
  },
  {
    "text": "the architecture looks like this what the ordering service does is they denormalize the older orders from the",
    "start": "1465440",
    "end": "1472940"
  },
  {
    "text": "relational database and push them to S3 encrypted they then keep a pointer from the",
    "start": "1472940",
    "end": "1478220"
  },
  {
    "text": "relational database to S3 to find the older orders what made this possible is that the",
    "start": "1478220",
    "end": "1483919"
  },
  {
    "text": "ordering service made changes to their application to allow them to read from two different types of data stores the",
    "start": "1483919",
    "end": "1490159"
  },
  {
    "text": "relational data store and the S3 data store the teams early in their migration but",
    "start": "1490159",
    "end": "1495919"
  },
  {
    "text": "so far they've moved more than 670 million orders to their S3 encrypted",
    "start": "1495919",
    "end": "1501080"
  },
  {
    "text": "repository that's a lot less database hosts that we need for hosting the",
    "start": "1501080",
    "end": "1506120"
  },
  {
    "text": "ordering service now than we did before by removing all of this cold data it's",
    "start": "1506120",
    "end": "1511460"
  },
  {
    "text": "actually reduced the amount of money that we need to spend on the ordering Fleet and although S3 is slightly slower",
    "start": "1511460",
    "end": "1517640"
  },
  {
    "text": "than pulling directly from a relational database we have discovered it doesn't impact our customers our end customers",
    "start": "1517640",
    "end": "1524360"
  },
  {
    "text": "intuitively assume that it's going to take a little bit longer to pull orders from 2002 than it does to pull an order",
    "start": "1524360",
    "end": "1531260"
  },
  {
    "text": "that was placed yesterday finally moving the older orders from the relational database to S3 is really the",
    "start": "1531260",
    "end": "1539000"
  },
  {
    "text": "ordering service first phase on their migration to AWS by reducing the size of",
    "start": "1539000",
    "end": "1544340"
  },
  {
    "text": "their relational database and by changing their code to be able to pull from multiple types of data sources they",
    "start": "1544340",
    "end": "1550340"
  },
  {
    "text": "are now in a position to start looking at where they're going to migrate the data from the relational database into something like RDS or dynamodb",
    "start": "1550340",
    "end": "1559220"
  },
  {
    "start": "1559000",
    "end": "1972000"
  },
  {
    "text": "so I've gone through two examples of services that have done migrations to AWS and here in general is what we've",
    "start": "1559220",
    "end": "1566179"
  },
  {
    "text": "learned from a program perspective about migrating our Enterprise to AWS while there's a goal of having",
    "start": "1566179",
    "end": "1572059"
  },
  {
    "text": "everything migrate not everything in your company is going to migrate at the same time for the web server Fleet getting the",
    "start": "1572059",
    "end": "1579020"
  },
  {
    "text": "virtual private cloud and AWS direct connects products in place allowed us to do incremental migrations of our",
    "start": "1579020",
    "end": "1584419"
  },
  {
    "text": "architecture to AWS in the case of the ordering service they were able to focus on part of their",
    "start": "1584419",
    "end": "1591380"
  },
  {
    "text": "system that was causing them operational pain without having to figure out what to do with all of their different types of data",
    "start": "1591380",
    "end": "1597500"
  },
  {
    "text": "it's important to combine migrations with architectural initiatives and choose good early migration targets for",
    "start": "1597500",
    "end": "1603919"
  },
  {
    "text": "your company with strong technical owners and ones that are going to make a cultural change by setting an example of",
    "start": "1603919",
    "end": "1610520"
  },
  {
    "text": "what it means to move to AWS in fact not everything in your company",
    "start": "1610520",
    "end": "1615919"
  },
  {
    "text": "is going to migrate to AWS for example don't invest in migrating",
    "start": "1615919",
    "end": "1621200"
  },
  {
    "text": "services that are on a path to deprecation directly to AWS instead focus on building out the replacement of",
    "start": "1621200",
    "end": "1627919"
  },
  {
    "text": "that service directly on AWS in the case of the ordering service well I showed it as a pretty simple box a couple slides",
    "start": "1627919",
    "end": "1635179"
  },
  {
    "text": "ago it's actually a very complex set of interlocking services and that teams in",
    "start": "1635179",
    "end": "1640279"
  },
  {
    "text": "the process of deprecating that service and replacing it with a new ordering service",
    "start": "1640279",
    "end": "1645380"
  },
  {
    "text": "how they're approaching their migration is they first did the older or ordered data and put those into S3 and they're",
    "start": "1645380",
    "end": "1652100"
  },
  {
    "text": "working on Switching out the different parts of their application and directly building the parts they're switching out",
    "start": "1652100",
    "end": "1657860"
  },
  {
    "text": "onto AWS by the time they're done with the replacement they'll be 100 on AWS",
    "start": "1657860",
    "end": "1663559"
  },
  {
    "text": "and then be able to deprecate the older service also don't expect migrations to require",
    "start": "1663559",
    "end": "1669559"
  },
  {
    "text": "no changes to your applications the web server fleet was not lift and shift even",
    "start": "1669559",
    "end": "1674840"
  },
  {
    "text": "once we had VPC in place we still had to make changes to change from different types of Hardware profiles in the case",
    "start": "1674840",
    "end": "1681919"
  },
  {
    "text": "of the ordering service they had to make changes to their application to read from a different type of data store than",
    "start": "1681919",
    "end": "1687620"
  },
  {
    "text": "a relational database you may have to make changes in order to take full advantage of AWS services and",
    "start": "1687620",
    "end": "1693799"
  },
  {
    "text": "the cloud in general so now I want to go back to one of the key reasons that Amazon retail business",
    "start": "1693799",
    "end": "1700580"
  },
  {
    "text": "is migrating to AWS and that's enabling our Engineers to move faster we want to get the most out of our",
    "start": "1700580",
    "end": "1707059"
  },
  {
    "text": "developers and we found that they're able to innovate the best when there's not a lot of red tape getting in their",
    "start": "1707059",
    "end": "1712640"
  },
  {
    "text": "way in fact Amazon's culture is very focused on enabling our developers this is a",
    "start": "1712640",
    "end": "1719059"
  },
  {
    "text": "quote from Jeff Bezos about the importance of providing self-service platforms to enable developer innovation",
    "start": "1719059",
    "end": "1724760"
  },
  {
    "text": "in it he says even well meaning Gatekeepers slow innovation it's important for us to not get in the",
    "start": "1724760",
    "end": "1732020"
  },
  {
    "text": "way of our engineers and to allow them to be creative in their Solutions and AWS has allowed us to do this",
    "start": "1732020",
    "end": "1739640"
  },
  {
    "text": "it's important as you move your Enterprise that you don't dictate a single approach to how services are",
    "start": "1739640",
    "end": "1745340"
  },
  {
    "text": "going to integrate or move to AWS one way you can set an artificial gatekeeper is to tell your developers there's only",
    "start": "1745340",
    "end": "1752299"
  },
  {
    "text": "one way to do things and from the different ways that our developers have found to integrate Amazon retail with",
    "start": "1752299",
    "end": "1758240"
  },
  {
    "text": "AWS there's lots of different ways that you can approach it depending on the type of service you have",
    "start": "1758240",
    "end": "1763820"
  },
  {
    "text": "so going back to the architecture for the web server Fleet migration the VPC and Direct Connect products was",
    "start": "1763820",
    "end": "1771020"
  },
  {
    "text": "really critical for the web server Fleet to migrate while keeping its dependencies in the Amazon retail Data",
    "start": "1771020",
    "end": "1776419"
  },
  {
    "text": "Center and lots of our services have migrated using this exact same approach however that's not the only way that",
    "start": "1776419",
    "end": "1782779"
  },
  {
    "text": "we've integrated Amazon retail with AWS another way that's very common at Amazon",
    "start": "1782779",
    "end": "1789740"
  },
  {
    "text": "is to utilize AWS data stores what happens is teams push data",
    "start": "1789740",
    "end": "1795500"
  },
  {
    "text": "encrypted to AWS data stores and then use other AWS services to act on that",
    "start": "1795500",
    "end": "1800899"
  },
  {
    "text": "data after that David is changed or analyzed they then push it back to an AWS data store where it's then read from",
    "start": "1800899",
    "end": "1807559"
  },
  {
    "text": "Amazon retail and that's exactly the case of our a B test analysis service",
    "start": "1807559",
    "end": "1813320"
  },
  {
    "text": "in Amazon we run experiments every day on the website to determine what",
    "start": "1813320",
    "end": "1818720"
  },
  {
    "text": "features our customers like best the teams that are running the experiments then get the results of the",
    "start": "1818720",
    "end": "1823820"
  },
  {
    "text": "analysis and determine what features are going to be permanent fixtures on amazon.com site so what the A B test analysis service",
    "start": "1823820",
    "end": "1830960"
  },
  {
    "text": "does is throughout the day it pushes the data from the experiments encrypted to",
    "start": "1830960",
    "end": "1836059"
  },
  {
    "text": "S3 at the end of the day it cues all of the different experiments that were run in",
    "start": "1836059",
    "end": "1841940"
  },
  {
    "text": "Amazon's simple queue service and then does an analysis of that data using elastic mapreduce",
    "start": "1841940",
    "end": "1848240"
  },
  {
    "text": "once that analysis is complete the data is pushed back to S3 where it's then made available for the teams to analyze",
    "start": "1848240",
    "end": "1854779"
  },
  {
    "text": "and look at the results of the experiments for those of you who are not familiar with mapreduce it's a way of expressing",
    "start": "1854779",
    "end": "1861080"
  },
  {
    "text": "data processing problems in small steps that make them very easy to paralyze across multiple machines and data such",
    "start": "1861080",
    "end": "1869179"
  },
  {
    "text": "as the test analysis data is really useful for mapreduce because it can be very paralyzable",
    "start": "1869179",
    "end": "1875240"
  },
  {
    "text": "in fact Amazon retail teams are adopting elastic map reduce at a very fast pace",
    "start": "1875240",
    "end": "1881299"
  },
  {
    "text": "and they're doing so because they're finding more and more ways that they can analyze big data using mapreduce",
    "start": "1881299",
    "end": "1887059"
  },
  {
    "text": "algorithms as well as they love the fact that they don't have to host their",
    "start": "1887059",
    "end": "1892700"
  },
  {
    "text": "cluster when they use elastic mapreduce they can simply turn off the machines to",
    "start": "1892700",
    "end": "1897919"
  },
  {
    "text": "reduce costs when they're not running an analysis and if they have a lot more data than they expected or need to get",
    "start": "1897919",
    "end": "1903620"
  },
  {
    "text": "something done faster they can simply add more ec2 machines very quickly into their elastic mapreduce cluster to get",
    "start": "1903620",
    "end": "1910039"
  },
  {
    "text": "the processing done faster from a business perspective AWS allows",
    "start": "1910039",
    "end": "1916399"
  },
  {
    "text": "us to take more risks on projects than we could before unlike when we're in our own data centers",
    "start": "1916399",
    "end": "1922340"
  },
  {
    "text": "when you have a project you might have to purchase specialty Hardware that really is only useful for that project",
    "start": "1922340",
    "end": "1927679"
  },
  {
    "text": "and if that project isn't successful you now have that Hardware laying around",
    "start": "1927679",
    "end": "1932960"
  },
  {
    "text": "unused until you can find another project to use that Hardware with AWS if you have a project that",
    "start": "1932960",
    "end": "1940220"
  },
  {
    "text": "doesn't succeed you just simply release the resources back to AWS and you're not paying for it anymore you don't have",
    "start": "1940220",
    "end": "1946399"
  },
  {
    "text": "that potential long-term impact of a service not succeeding however if a",
    "start": "1946399",
    "end": "1951799"
  },
  {
    "text": "service is successful you can then double down on it as a business and potentially invest more in ideas that",
    "start": "1951799",
    "end": "1959720"
  },
  {
    "text": "your developers have that are going to be game changers for your business in a way from a business perspective you",
    "start": "1959720",
    "end": "1965000"
  },
  {
    "text": "can look at AWS as a giant undo button where you don't have to pay long-term costs if something doesn't work out",
    "start": "1965000",
    "end": "1972679"
  },
  {
    "start": "1972000",
    "end": "2446000"
  },
  {
    "text": "I'm going to walk through an example of this at Amazon we used to have a legacy internal video",
    "start": "1972679",
    "end": "1979039"
  },
  {
    "text": "service for Amazon employees it was really only used to host all hands videos and in order to get a video",
    "start": "1979039",
    "end": "1985700"
  },
  {
    "text": "posted you had to send lots of different emails to people and in fact once the videos got uploaded",
    "start": "1985700",
    "end": "1991460"
  },
  {
    "text": "our employees couldn't really search for where the videos were and so the service was hardly ever used at the same time we",
    "start": "1991460",
    "end": "1999620"
  },
  {
    "text": "had a lot of interesting talks happening at Amazon given by different people in our business and our engineers and if",
    "start": "1999620",
    "end": "2006220"
  },
  {
    "text": "you were in another meeting at the time of the talk or if you worked in one of our International sites you never got to",
    "start": "2006220",
    "end": "2011559"
  },
  {
    "text": "see the interesting information that was being shared so a couple developers pitched an idea to their VP to create an",
    "start": "2011559",
    "end": "2018700"
  },
  {
    "text": "internal video service for Amazon employees he gave them a week worst case it was a",
    "start": "2018700",
    "end": "2024100"
  },
  {
    "text": "week of development time and it wasn't going to be that much cost in terms of resources due to AWS",
    "start": "2024100",
    "end": "2030640"
  },
  {
    "text": "by the end of the week they had a functioning prototype of what you see here and by the end of the third week",
    "start": "2030640",
    "end": "2035799"
  },
  {
    "text": "they had a production-ready corporate video service for Amazon employees we call the service broadcasts as you",
    "start": "2035799",
    "end": "2042279"
  },
  {
    "text": "can see from this screenshot videos are made available to our internal employees we post things up here from q a sessions",
    "start": "2042279",
    "end": "2049300"
  },
  {
    "text": "with Jeff Bezos who talks by our principal engineers and in fact broadcast has changed the",
    "start": "2049300",
    "end": "2054760"
  },
  {
    "text": "way that we work internally as a company WE Post everything up here to Brown Bags",
    "start": "2054760",
    "end": "2060339"
  },
  {
    "text": "to training videos and in fact we use it in ways that the engineers that created it never even thought it would be used",
    "start": "2060339",
    "end": "2065980"
  },
  {
    "text": "for example our warehouse workers use it to send pictures of what's happening in",
    "start": "2065980",
    "end": "2071260"
  },
  {
    "text": "the warehouse to our Engineers that are developing the software use in the warehouse so it's really created an",
    "start": "2071260",
    "end": "2076599"
  },
  {
    "text": "interesting collaborative environment across Amazon internal employees internationally",
    "start": "2076599",
    "end": "2082060"
  },
  {
    "text": "so how are the developers able to get this up and running so quickly here's the architecture broadcast it's",
    "start": "2082060",
    "end": "2089020"
  },
  {
    "text": "pretty straightforward a web server Fleet hosts the site and employs upload",
    "start": "2089020",
    "end": "2094540"
  },
  {
    "text": "videos to broadcast they're then pushed to S3 encrypted and Amazon simple",
    "start": "2094540",
    "end": "2100480"
  },
  {
    "text": "workflow the text that there's a new video and pushes it to an ec2 encoding Fleet",
    "start": "2100480",
    "end": "2105580"
  },
  {
    "text": "once the video is encoded it's pushed back to S3 and if there's no videos being coded at that time simple workflow",
    "start": "2105580",
    "end": "2112660"
  },
  {
    "text": "shuts down the fleet of vc2 encoding machines once the video is encoded it's then made",
    "start": "2112660",
    "end": "2118420"
  },
  {
    "text": "available for employees to watch on broadcast the developers were able to get this up and going so quickly because of AWS AWS",
    "start": "2118420",
    "end": "2126940"
  },
  {
    "text": "provided them the building blocks they needed so they didn't have to start from scratch from everything for example instead of building a workflow system",
    "start": "2126940",
    "end": "2133540"
  },
  {
    "text": "they were able to integrate with simple workflow in addition when they were in our Amazon retail data centers just",
    "start": "2133540",
    "end": "2141220"
  },
  {
    "text": "getting the boxes for an encoding Fleet could have taken up to a couple months instead they were able to get boxes",
    "start": "2141220",
    "end": "2148060"
  },
  {
    "text": "within the order of minutes that really allowed them to innovate very quickly and to try out new things",
    "start": "2148060",
    "end": "2155260"
  },
  {
    "text": "another part of AWS that made broadcast successful is its ability to scale",
    "start": "2155260",
    "end": "2160780"
  },
  {
    "text": "keep in mind broadcast replaced something that no one was using so they had no idea when they launched",
    "start": "2160780",
    "end": "2166300"
  },
  {
    "text": "broadcasts if it was going to be popular or not and in the end it turned out to be very popular very quickly instead of",
    "start": "2166300",
    "end": "2172540"
  },
  {
    "text": "worrying about the success of their service launch they simply added more ec2 machines and more S3 buckets and in",
    "start": "2172540",
    "end": "2179320"
  },
  {
    "text": "fact the team has run broadcasts for three years without having to worry about scaling from the vp's perspective because of AWS",
    "start": "2179320",
    "end": "2186520"
  },
  {
    "text": "he was able to take a risk on the developer's idea and give them a little bit of time to play around and see if it",
    "start": "2186520",
    "end": "2192040"
  },
  {
    "text": "was going to work in the end it did work but had it not it would have just been a week of developer time and a little bit",
    "start": "2192040",
    "end": "2198220"
  },
  {
    "text": "of AWS resources that he would have paid instead of having something that would have lasted a long time",
    "start": "2198220",
    "end": "2204280"
  },
  {
    "text": "so using AWS has allowed our developers to try out more things more rapidly and",
    "start": "2204280",
    "end": "2209680"
  },
  {
    "text": "to allow our business to take more chances on their ideas while broadcast is a great example of",
    "start": "2209680",
    "end": "2217300"
  },
  {
    "text": "how AWS can allow you to take more risks and enable developers to move faster moving fast can have its downsides",
    "start": "2217300",
    "end": "2224380"
  },
  {
    "text": "things can get messy if you don't maintain best practices As you move to AWS the cloud is not a universal Panacea",
    "start": "2224380",
    "end": "2232240"
  },
  {
    "text": "it can't cover up for messy engineering practices an example of this is",
    "start": "2232240",
    "end": "2237460"
  },
  {
    "text": "availability designing for failure is a fundamental design principle at Amazon we design",
    "start": "2237460",
    "end": "2243400"
  },
  {
    "text": "assuming everything can fail and we can lose bits and pieces of our architectures and not impact our",
    "start": "2243400",
    "end": "2249160"
  },
  {
    "text": "customers this is core to our company culture in that we're constantly monitoring availability latency and error rates in",
    "start": "2249160",
    "end": "2257140"
  },
  {
    "text": "fact we don't just look at failure from a hardware perspective but we also feel that",
    "start": "2257140",
    "end": "2263339"
  },
  {
    "text": "badly architectured code is latent failures that are going to impact our customers later and in fact at Amazon we",
    "start": "2263339",
    "end": "2270400"
  },
  {
    "text": "prefer simple stateless services that talk to each other that compose our larger architecture",
    "start": "2270400",
    "end": "2276339"
  },
  {
    "text": "as we went to AWS we maintained a culture of assuming everything will fail we assume that Hardware will fail and in",
    "start": "2276339",
    "end": "2284260"
  },
  {
    "text": "fact we assume entire availability zones are going to fail and one thing we learned when we moved to AWS is we didn't have to change our",
    "start": "2284260",
    "end": "2290980"
  },
  {
    "text": "approach to availability instead AWS provided us the tools that we needed to maintain a highly available system in",
    "start": "2290980",
    "end": "2297880"
  },
  {
    "text": "the cloud and in fact because Services were making some changes as they migrated to the",
    "start": "2297880",
    "end": "2303579"
  },
  {
    "text": "cloud we took advantage of this change to look at the lessons that we learned",
    "start": "2303579",
    "end": "2309099"
  },
  {
    "text": "from availability in our own data centers and have the services architect",
    "start": "2309099",
    "end": "2314140"
  },
  {
    "text": "as they went to the cloud to be higher availability than they were in our data centers",
    "start": "2314140",
    "end": "2319839"
  },
  {
    "text": "we have two different types of services at Amazon we have customer impacting",
    "start": "2319839",
    "end": "2325300"
  },
  {
    "text": "Services ones that if something goes wrong are going to negatively impact our customers and non-customer impacting",
    "start": "2325300",
    "end": "2332200"
  },
  {
    "text": "Services once that if something happens it has no impact to our customers but it might to our developers such as our",
    "start": "2332200",
    "end": "2338260"
  },
  {
    "text": "developer tool space for our services that are customer impacting we pay for high availability",
    "start": "2338260",
    "end": "2344079"
  },
  {
    "text": "and what that means you see here when there's three availability zones we retain our 15 buffer we talked about",
    "start": "2344079",
    "end": "2350980"
  },
  {
    "text": "before plus 33 extra capacity in case of an availability Zone failure",
    "start": "2350980",
    "end": "2356680"
  },
  {
    "text": "we constantly monitor our availability zones to determine if something's happening and if we detect something we",
    "start": "2356680",
    "end": "2362680"
  },
  {
    "text": "quickly flip out of that availability Zone and enable the other two to handle the excess load until at which point we",
    "start": "2362680",
    "end": "2368800"
  },
  {
    "text": "determine the other availability zone is good to go and we flip back to that",
    "start": "2368800",
    "end": "2373960"
  },
  {
    "text": "it's easier to do this type of architecture with stateless services but we found that we can even retain higher",
    "start": "2373960",
    "end": "2380260"
  },
  {
    "text": "availability stateful services with AWS for example with dynamodb AWS does our",
    "start": "2380260",
    "end": "2386560"
  },
  {
    "text": "replication for us instead of us figuring out the right replication model while I mentioned we have different",
    "start": "2386560",
    "end": "2392560"
  },
  {
    "text": "types of services AWS has also allowed us to have our non-customer impacting",
    "start": "2392560",
    "end": "2397720"
  },
  {
    "text": "Services be more highly available for our developers for example we retain logs for everything that's happening in",
    "start": "2397720",
    "end": "2404560"
  },
  {
    "text": "the retail server space just to analyze what trends are happening across the retail Fleet and developers are",
    "start": "2404560",
    "end": "2410619"
  },
  {
    "text": "accessing this to do analysis the team used to run a fleet of file servers and",
    "start": "2410619",
    "end": "2416320"
  },
  {
    "text": "if something was going wrong with one of those servers they would shut down the ability to access the logs this had no",
    "start": "2416320",
    "end": "2422200"
  },
  {
    "text": "impact to our customers but definitely made our developers annoyed when they wanted to get access to those logs and",
    "start": "2422200",
    "end": "2427359"
  },
  {
    "text": "they weren't available a couple years ago that team migrated all of those logs to an encrypted S3",
    "start": "2427359",
    "end": "2432940"
  },
  {
    "text": "store and as a result we haven't had any of the availability issues we had because of S3 replication in fact new",
    "start": "2432940",
    "end": "2440260"
  },
  {
    "text": "developers to Amazon can't imagine those logs not being available",
    "start": "2440260",
    "end": "2445320"
  },
  {
    "text": "so beyond good engineering we've also learned it's important to have some governance as you migrate to the cloud",
    "start": "2445900",
    "end": "2451060"
  },
  {
    "start": "2446000",
    "end": "2540000"
  },
  {
    "text": "we want to unlock Innovation but we don't want to cause harm to our company or to our customers",
    "start": "2451060",
    "end": "2456579"
  },
  {
    "text": "one of the roles that the move to AWS program has played in Amazon is determining when governance is required",
    "start": "2456579",
    "end": "2462640"
  },
  {
    "text": "and how much governance is required at any point in time an example of this is security which is",
    "start": "2462640",
    "end": "2468700"
  },
  {
    "text": "a traditional gatekeeper for a lot of Enterprises and you're going to be kind of branching out into new ground when",
    "start": "2468700",
    "end": "2475720"
  },
  {
    "text": "you go to AWS in terms of security so you can either treat your security team as an enemy in your migration or as a",
    "start": "2475720",
    "end": "2483220"
  },
  {
    "text": "partner we chose to engage our security team very early in the migration and to keep",
    "start": "2483220",
    "end": "2488680"
  },
  {
    "text": "them appraised of what we're doing and in turn they helped us in architecting our Solutions on AWS",
    "start": "2488680",
    "end": "2495760"
  },
  {
    "text": "as an example when we started working on the move to AWS program every service went through a manual Security review",
    "start": "2495760",
    "end": "2501700"
  },
  {
    "text": "with a security engineer at the rate that we were migrating to the cloud this was not scalable at all",
    "start": "2501700",
    "end": "2508480"
  },
  {
    "text": "so we worked with our security team and determined AWS guidelines for different",
    "start": "2508480",
    "end": "2514060"
  },
  {
    "text": "types of Amazon data for example public data that was available on our website versus customer sensitive data security",
    "start": "2514060",
    "end": "2520720"
  },
  {
    "text": "also created a straightforward way for all of our Engineers to determine what level of data they had in their",
    "start": "2520720",
    "end": "2526720"
  },
  {
    "text": "applications as a result the security team is able to focus their time working with the",
    "start": "2526720",
    "end": "2532420"
  },
  {
    "text": "service owners of those with sensitive data and enabling those with non-sensitive data to move quickly to",
    "start": "2532420",
    "end": "2538599"
  },
  {
    "text": "AWS so what we've learned from enabling our developers to move quickly is that we",
    "start": "2538599",
    "end": "2544359"
  },
  {
    "start": "2540000",
    "end": "2648000"
  },
  {
    "text": "can take more risks and say yes to more developer ideas while this is great you need to make",
    "start": "2544359",
    "end": "2549940"
  },
  {
    "text": "sure that you pay attention to where governance is required an example of that is to really talk to your security",
    "start": "2549940",
    "end": "2555460"
  },
  {
    "text": "team as your approach for migration also don't forget to retain best practices in your migration the cloud",
    "start": "2555460",
    "end": "2562900"
  },
  {
    "text": "can't cover up for sloppy engineering you still need to think about availability and performance build your",
    "start": "2562900",
    "end": "2569440"
  },
  {
    "text": "services knowing your dependencies build fault tolerance systems and learn about",
    "start": "2569440",
    "end": "2574660"
  },
  {
    "text": "Concepts like availability zones and redundancy models finally here's the lessons we've learned",
    "start": "2574660",
    "end": "2581440"
  },
  {
    "text": "so far as a company in our migration to AWS you don't need to migrate all at once choose early migration targets",
    "start": "2581440",
    "end": "2588160"
  },
  {
    "text": "carefully to make progress towards your migration and to create a cultural change that focuses your engineers on",
    "start": "2588160",
    "end": "2594160"
  },
  {
    "text": "AWS Service Solutions also enable your developers to move quickly and find ways to keep up with",
    "start": "2594160",
    "end": "2601300"
  },
  {
    "text": "their speed of innovation as opposed to blocking their creativity lastly you'll be surprised at the",
    "start": "2601300",
    "end": "2607119"
  },
  {
    "text": "benefits you'll receive by going to AWS I know that we have an Amazon retail I'll be available up front if you have",
    "start": "2607119",
    "end": "2613839"
  },
  {
    "text": "any questions and also if you have any questions about how your company can use some of the techniques we have you can",
    "start": "2613839",
    "end": "2620560"
  },
  {
    "text": "also find any of the AWS account managers so Solutions Architects that's here in the conference they know about our use cases as well as many other",
    "start": "2620560",
    "end": "2627520"
  },
  {
    "text": "companies that have done migrations and can help you work through what makes best sense for your company",
    "start": "2627520",
    "end": "2633640"
  },
  {
    "text": "in conclusion we have had a great experience at Amazon retail being an Enterprise customer of AWS and we expect",
    "start": "2633640",
    "end": "2640119"
  },
  {
    "text": "and know that you will as well thank you",
    "start": "2640119",
    "end": "2644279"
  }
]