[
  {
    "text": "right so we're going to talk about from local Docker development to production deployments so in this session we'll",
    "start": "599",
    "end": "7120"
  },
  {
    "text": "talk about Docker compose so Docker compose is a tool that is often used in Docker ecosystem for development",
    "start": "7120",
    "end": "12799"
  },
  {
    "text": "environments but then people are like well this is great for development with but I can't really use that for",
    "start": "12799",
    "end": "18600"
  },
  {
    "text": "production right so I'm here to dispel that myth and show you that compost can also be used in production and show how",
    "start": "18600",
    "end": "25039"
  },
  {
    "text": "to take this nice Dev environment that we have with compos how to take it to production and how to scale it so we're",
    "start": "25039",
    "end": "31199"
  },
  {
    "text": "going to talk about cluster provisioning about managing and building container images about service Discovery we're",
    "start": "31199",
    "end": "38000"
  },
  {
    "text": "going to talk about tools from the docker ecosystem like compose machine and swarm but also tools from the AWS",
    "start": "38000",
    "end": "44200"
  },
  {
    "text": "ecosystems like ECS the container service I expect that you are familiar with container Basics like you already",
    "start": "44200",
    "end": "50079"
  },
  {
    "text": "have done like a Docker run Docker PS Docker build if not that's okay uh if",
    "start": "50079",
    "end": "55480"
  },
  {
    "text": "you don't know anything about compose machine swam and ECS that's fine because I'm here also to steer up some interest",
    "start": "55480",
    "end": "62559"
  },
  {
    "text": "for those things so introductions I am Jerome poni and I work for Docker before",
    "start": "62559",
    "end": "69960"
  },
  {
    "text": "Docker was Docker it was do cloud and five years ago when I joined do Cloud we",
    "start": "69960",
    "end": "75280"
  },
  {
    "text": "were already doing containers and that container thing that we were doing eventually became darker so that puts me",
    "start": "75280",
    "end": "81840"
  },
  {
    "text": "in this really awesome situation of having almost five years of experience on a project that is just only two years",
    "start": "81840",
    "end": "87320"
  },
  {
    "text": "old so I'm going to share some of that experience with you today now let's imagine for a second that I'm just a",
    "start": "87320",
    "end": "93960"
  },
  {
    "text": "software engineer and tomorrow I'm going to start in a new company and I will work on a new project called Docker",
    "start": "93960",
    "end": "99960"
  },
  {
    "text": "coins it's something with like Bitcoin cryptocurrency blockchain something and",
    "start": "99960",
    "end": "105000"
  },
  {
    "text": "so those people are big fans of Docker and they use Docker and compos in them and they're happy with it but they don't",
    "start": "105000",
    "end": "111000"
  },
  {
    "text": "know how to deploy at scale and they hired me for that uh because on my resume it says I know how to cloud and",
    "start": "111000",
    "end": "116920"
  },
  {
    "text": "during the interview I was able to tell the difference between E2 and his3 so I got the job and so now I have to deploy that",
    "start": "116920",
    "end": "125000"
  },
  {
    "text": "thing and scale it on E2 all right so before starting for the job I asked them",
    "start": "125000",
    "end": "130160"
  },
  {
    "text": "hey what's the stack like what languages are you using what's the the thing and they tell me okay we are in a kind of a",
    "start": "130160",
    "end": "135879"
  },
  {
    "text": "rush now so you know what just install the darker toolbox this is your brand new laptop install the toolbox on it and",
    "start": "135879",
    "end": "142599"
  },
  {
    "text": "let's see tomorrow when you show up okay fine so then I go to see how do we install that doer toolbox thing and",
    "start": "142599",
    "end": "149360"
  },
  {
    "text": "since I'm presenting from a Linux computer I'm going to show you a short video what it's like to install on a Mac",
    "start": "149360",
    "end": "154480"
  },
  {
    "text": "like this so you Google Google do toolbox and then you click on the first link and hooray there is a download",
    "start": "154480",
    "end": "160959"
  },
  {
    "text": "button then you go for a 200 megabytes download and after that you install it and what it will really do under the",
    "start": "160959",
    "end": "167280"
  },
  {
    "text": "hood is that it will install virtual box in Virtual box there will be a Linux VM with Docker on it and you will have a",
    "start": "167280",
    "end": "173519"
  },
  {
    "text": "bunch of tools and wrappers so that you can use Docker as if it were installed",
    "start": "173519",
    "end": "178560"
  },
  {
    "text": "locally so just like on the Linux machine when you do Docker this Docker that on a Mac or on a Windows machine",
    "start": "178560",
    "end": "184239"
  },
  {
    "text": "you will be able to do Docker this Docker that and it will really talk to the VM here so here I do Docker version",
    "start": "184239",
    "end": "190879"
  },
  {
    "text": "from a Mac machine and it talks to this VM I do Docker run busy box hello world so this downloads like the basic busy",
    "start": "190879",
    "end": "198000"
  },
  {
    "text": "box container and okay so I can use Docker as if I had Docker directly natively great so I'm ready for my first",
    "start": "198000",
    "end": "206159"
  },
  {
    "text": "day and so when I show up I ask them okay so what's the deal where is the code and how do I get working and they",
    "start": "206159",
    "end": "213000"
  },
  {
    "text": "say okay no time to explain uh we are in a rush again so this is the repo you just clone it you do compose up and the",
    "start": "213000",
    "end": "219959"
  },
  {
    "text": "app will be up and running so I'm like it this true and so let's try it so I take my brand new compose install and I",
    "start": "219959",
    "end": "227360"
  },
  {
    "text": "try this thing and this is what happens when I do it and here again I show a video because it will be downloading a",
    "start": "227360",
    "end": "233280"
  },
  {
    "text": "bunch of things like okay it's downloading python so apparently the stack is running on python okay",
    "start": "233280",
    "end": "239799"
  },
  {
    "text": "apparently this company is using python yeah I forgot to ask during the interview uh now it's downloading redis okay so apparently the stack is python",
    "start": "239799",
    "end": "246879"
  },
  {
    "text": "plus redis and now Ruby oh they use Python and Ruby if I had known and then J install okay no what oh no GS that's",
    "start": "246879",
    "end": "255599"
  },
  {
    "text": "npm right so they have python Ruby node and redis uh that's a festival okay",
    "start": "255599",
    "end": "261799"
  },
  {
    "text": "maybe they know about microservices something like that this is the app up and running and so I go to my browser",
    "start": "261799",
    "end": "267960"
  },
  {
    "text": "and this this is what I see when I I connect to the app it's a Docker coin Miner thing so it's mining Docker coins",
    "start": "267960",
    "end": "275440"
  },
  {
    "text": "and I hope that with Docker coins eventually we can buy some coffee but for now this is the app it's up and",
    "start": "275440",
    "end": "280560"
  },
  {
    "text": "running on a computer like this one fine but uh okay so what did really happen",
    "start": "280560",
    "end": "286160"
  },
  {
    "text": "here how does compose work when you do Docker compose up uh it will run the app",
    "start": "286160",
    "end": "291600"
  },
  {
    "text": "but for that first it needs to build it and to know what it should do compose looks in the compost file it's a yaml",
    "start": "291600",
    "end": "297720"
  },
  {
    "text": "file that looks like this for a really simple application so I have a web front end I have a back end and that's it and",
    "start": "297720",
    "end": "304160"
  },
  {
    "text": "for the application that I just started one minute ago it's a little bit more complicated I have like five sections",
    "start": "304160",
    "end": "310080"
  },
  {
    "text": "RNG hasher worker webui redis those are the services of my application and",
    "start": "310080",
    "end": "316600"
  },
  {
    "text": "basically the app is broken down into Services each service has a container and each container can either be taken",
    "start": "316600",
    "end": "324039"
  },
  {
    "text": "like from an official image like for redis I just have image colon redis that means take the official container from",
    "start": "324039",
    "end": "330520"
  },
  {
    "text": "the docker library and use it all those containers can be built using my source code that's the case for the four other",
    "start": "330520",
    "end": "337479"
  },
  {
    "text": "services so this is what the repo looks like if you go on GitHub on on jzo",
    "start": "337479",
    "end": "342840"
  },
  {
    "text": "that's me/ doer coins you can see that app you can see the code you can see four directories corresponding to the",
    "start": "342840",
    "end": "348479"
  },
  {
    "text": "four containers and if you want you can run that application you won't be actually mining Docker coins but we're",
    "start": "348479",
    "end": "354440"
  },
  {
    "text": "trying so this application using a microservice architecture so I have multiple services using different",
    "start": "354440",
    "end": "360759"
  },
  {
    "text": "languages different Frameworks so I have a ruby and Sinatra Python and flask Nos and express I have background workers I",
    "start": "360759",
    "end": "367360"
  },
  {
    "text": "have uh rest apis I have a stateful data store with red so it's a big Festival of",
    "start": "367360",
    "end": "372680"
  },
  {
    "text": "all the things we could see in an actual application I have to have like one slide of microservices otherwise that",
    "start": "372680",
    "end": "378759"
  },
  {
    "text": "wouldn't be an actual talk microservices are great because you can break down your application into multiple little",
    "start": "378759",
    "end": "384880"
  },
  {
    "text": "components that you can deploy and develop and scale independently microservices also so are not so great",
    "start": "384880",
    "end": "390639"
  },
  {
    "text": "because then your app becomes a distributed application and distributed systems are really hard but anyway okay",
    "start": "390639",
    "end": "397360"
  },
  {
    "text": "so now I say let's see if I can deploy that on cloud and I can like go on an E2",
    "start": "397360",
    "end": "403319"
  },
  {
    "text": "instance FR freshly deployed uh with Docker and bring that application up and running so let's do this and let's do",
    "start": "403319",
    "end": "410199"
  },
  {
    "text": "this like for real this time so I'm going to S into an2 instance uh and uh I'm going to do a git",
    "start": "410199",
    "end": "419360"
  },
  {
    "text": "uh not jit git clone git colone github.com jpo Docker",
    "start": "419360",
    "end": "427840"
  },
  {
    "text": "coins then I go into Docker coins and I do just like earlier Docker compose up",
    "start": "427840",
    "end": "433680"
  },
  {
    "text": "so we will see the same bill except that time it's not a stage video it's the real thing happening right now in an ec2",
    "start": "433680",
    "end": "440280"
  },
  {
    "text": "instance so I hope that ec2 instance will stay up because otherwise I will be pretty embarrassed uh okay so it's",
    "start": "440280",
    "end": "446479"
  },
  {
    "text": "building native extensions and so what I'm going to to do then is I will do some uh little editing on this app to",
    "start": "446479",
    "end": "452720"
  },
  {
    "text": "show what the workflow is like and then we will see how to take that at scale building more native extensions okay and",
    "start": "452720",
    "end": "461479"
  },
  {
    "text": "uh if you want to uh kind of poke at the application once once it will be up and running I attached a DNS entry to it so",
    "start": "461479",
    "end": "468879"
  },
  {
    "text": "it will be reinvent dodc a.info yeah I'm crazy enough to give you the address of",
    "start": "468879",
    "end": "474159"
  },
  {
    "text": "the machine I'm using okay the app is up and running so those are the logs so I can go to my web browser and I can do to",
    "start": "474159",
    "end": "481440"
  },
  {
    "text": "reinvent wow I have no idea what I see here but uh and it's for",
    "start": "481440",
    "end": "488080"
  },
  {
    "text": "8,000 um okay reinvent doer info column",
    "start": "488400",
    "end": "496520"
  },
  {
    "text": "8 oh okay thanks",
    "start": "496520",
    "end": "503199"
  },
  {
    "text": "uh all right let's do this again reinvent DC a info col",
    "start": "505280",
    "end": "512518"
  },
  {
    "text": "8000 we got this great so the app is up and running",
    "start": "512519",
    "end": "519719"
  },
  {
    "text": "that's great okay um so that those are just the commands I did so now I want",
    "start": "519719",
    "end": "524720"
  },
  {
    "text": "see okay what it's like to make changes in that application because that build process was fast like one or two minutes",
    "start": "524720",
    "end": "530360"
  },
  {
    "text": "but it was still long enough I don't want to do tab dancing each time I make a change in the app so let's see what",
    "start": "530360",
    "end": "535640"
  },
  {
    "text": "happens if I make some changes like you you saw like those labels on the left",
    "start": "535640",
    "end": "540720"
  },
  {
    "text": "they are not extremely readable especially for those of you in that other corner so I'm going to make them",
    "start": "540720",
    "end": "546160"
  },
  {
    "text": "bigger uh so okay let's go there and um",
    "start": "546160",
    "end": "552399"
  },
  {
    "text": "okay let's uh edit like a web UI files index HTML and let's look for the CSS",
    "start": "552399",
    "end": "559360"
  },
  {
    "text": "and make that like bigger and in bold font and less transparent and darker compose build and",
    "start": "559360",
    "end": "567360"
  },
  {
    "text": "this time the build would be like super fast that's it it's done because Docker has a super caching system basically it",
    "start": "567360",
    "end": "574160"
  },
  {
    "text": "just takes a snapshot of each build stage so that when you rebuild you can resume from the snapshot instead of",
    "start": "574160",
    "end": "579560"
  },
  {
    "text": "doing everything over and over so while the application was done I have like a stop in doer con mining but if I reload",
    "start": "579560",
    "end": "585880"
  },
  {
    "text": "no on the left you will see the numbers showing up bigger and everything okay so",
    "start": "585880",
    "end": "590920"
  },
  {
    "text": "developing with that is pretty easy and almost fun all",
    "start": "590920",
    "end": "596320"
  },
  {
    "text": "right let's stop this and go ahead so takeaways Docker abstracts my Dev",
    "start": "596320",
    "end": "601880"
  },
  {
    "text": "environment so I can uh Deploy on a Mac like this on my Linux machine on some ec2 instance I can deploy like on Prem",
    "start": "601880",
    "end": "609480"
  },
  {
    "text": "on a virtual box VM on an open stack cluster and obviously on in2 uh so it's super easy to unborn new people when",
    "start": "609480",
    "end": "616399"
  },
  {
    "text": "somebody joins the team it's like here is your laptop install compose and I mean install Docker toolbox and you're",
    "start": "616399",
    "end": "621920"
  },
  {
    "text": "set but now how do I take that at scale how do I go from one single VM to",
    "start": "621920",
    "end": "627800"
  },
  {
    "text": "something bigger because that's when thing gets uh things get really interesting what are we missing well",
    "start": "627800",
    "end": "633880"
  },
  {
    "text": "we're missing a bunch of things but at least we're missing something to provision the cluster something to build",
    "start": "633880",
    "end": "639480"
  },
  {
    "text": "the code and deploy it and something to do service Discovery okay we also need like Matrix and logging and security and",
    "start": "639480",
    "end": "646920"
  },
  {
    "text": "tons of other things but we're going to talk about that for now all right so first how do we provision the cluster uh",
    "start": "646920",
    "end": "653480"
  },
  {
    "text": "to be able to deploy uh Acker applications on it so if you deploying",
    "start": "653480",
    "end": "659320"
  },
  {
    "text": "on E2 and creating instances you can go to the console and click click and create the instan one by one but that's",
    "start": "659320",
    "end": "666399"
  },
  {
    "text": "manual so that's bad so you want to script something using the AWS CLI or maybe the API or you could use some",
    "start": "666399",
    "end": "673519"
  },
  {
    "text": "Autos scaling groups that better because it gives you a kind of big will that you can turn to get more instances or less",
    "start": "673519",
    "end": "679360"
  },
  {
    "text": "instances uh you can use cloud formation templates that's when you don't use only instances but also others services so",
    "start": "679360",
    "end": "686320"
  },
  {
    "text": "you can put everything in one of those templates and there are a couple of kind of Docker specific systems that I want",
    "start": "686320",
    "end": "692560"
  },
  {
    "text": "to talk about there is Docker machine and there is ECS CLI so Docker machine is a tool that comes with a Docker",
    "start": "692560",
    "end": "699000"
  },
  {
    "text": "toolbox and as the name implies it can deal with Docker machines so Docker host it can create Docker host on clouds",
    "start": "699000",
    "end": "706519"
  },
  {
    "text": "whether it E2 or others on local environments like again a virtual box DVM or some open Stock cluster or",
    "start": "706519",
    "end": "711920"
  },
  {
    "text": "whatever physical machines and it can create clusters integrating with swarm",
    "start": "711920",
    "end": "717000"
  },
  {
    "text": "swarm is darker native clustering solution tldd swarm takes a a bunch of",
    "start": "717000",
    "end": "722279"
  },
  {
    "text": "dockum machines and make them look like one big giant machine that's a really short version uh machine has some",
    "start": "722279",
    "end": "729000"
  },
  {
    "text": "limitations like for now if you want to create multiple machines you have to do that one at a time so if you want to",
    "start": "729000",
    "end": "734160"
  },
  {
    "text": "create 100 machines you do a for Loop and create one two three and so on and also machine currently has centralized",
    "start": "734160",
    "end": "741519"
  },
  {
    "text": "credentials which means that if I create machines using doc machine then I have",
    "start": "741519",
    "end": "746720"
  },
  {
    "text": "to get those credentials like certificates and keys to the rest of the team but still let's see what it's like",
    "start": "746720",
    "end": "753040"
  },
  {
    "text": "to deploy a cluster with the machine and here again I will use a video just because it takes a few minutes and I",
    "start": "753040",
    "end": "760079"
  },
  {
    "text": "would feel really guilty to have everybody sitting like for four minutes while we wait for instance coming up like 1,000 people for four minutes",
    "start": "760079",
    "end": "766959"
  },
  {
    "text": "that's I don't know how many man hours of engineering but that would be a shame so I will really run those like 10 lines",
    "start": "766959",
    "end": "776399"
  },
  {
    "text": "uh which basically uh create uh a primary cluster controller like the",
    "start": "776399",
    "end": "781920"
  },
  {
    "text": "master node and then it creates additional nodes and using a cluster",
    "start": "781920",
    "end": "787320"
  },
  {
    "text": "Discovery mechanism and so it takes like three four five minutes and then we have a cluster up and running and so now I",
    "start": "787320",
    "end": "793920"
  },
  {
    "text": "you say Okay I want to point my client to this cluster so that when I do Docker this Docker that instead of talking to",
    "start": "793920",
    "end": "800680"
  },
  {
    "text": "my local machine now I'm talking to the cluster and when I do Docker version in",
    "start": "800680",
    "end": "805720"
  },
  {
    "text": "the server section in the bottom instead of saying okay I'm talking to Docker it tells me you're talking to swamp fine",
    "start": "805720",
    "end": "812800"
  },
  {
    "text": "and when I do Docker info instead of just telling me you're running on this node it gives me a list of the five",
    "start": "812800",
    "end": "818600"
  },
  {
    "text": "nodes on my cluster here so it kind of follows the docker API except now I'm talking to a cluster instead all right",
    "start": "818600",
    "end": "826440"
  },
  {
    "text": "now another method to create a cluster is to use the ECS CLI those of you who were at doer Con in San Francisco in",
    "start": "826440",
    "end": "833279"
  },
  {
    "text": "June might remember when dexing from Amazon told okay we're working on",
    "start": "833279",
    "end": "838560"
  },
  {
    "text": "tighter integration between Docker and AWS this is one of those things the ECS",
    "start": "838560",
    "end": "844360"
  },
  {
    "text": "CLI is a tool it's a CLI for ECS the container service uh and I'm going to",
    "start": "844360",
    "end": "850440"
  },
  {
    "text": "give you a sneak peek of that tool here so that you get an idea of what you can do with it the ECS CLI allows to create",
    "start": "850440",
    "end": "857279"
  },
  {
    "text": "cluster following AWS best practices so it will use a nice cloud formation template there is an Autos Skilling",
    "start": "857279",
    "end": "863079"
  },
  {
    "text": "group so when you need more machines or less machines you just go to Autos scaling and more less and in takes care",
    "start": "863079",
    "end": "869519"
  },
  {
    "text": "of everything and it integrates with IM am so you don't have that problem of having to distribute credentials around",
    "start": "869519",
    "end": "875160"
  },
  {
    "text": "so I'm going to give a little demo and there again it's a video because there again it takes three minutes and a half",
    "start": "875160",
    "end": "881240"
  },
  {
    "text": "I timed it because I was like how can I make that go faster to do a live demo of it so all you have to do is ECS CLI",
    "start": "881240",
    "end": "888000"
  },
  {
    "text": "configure so you set a few um uh environment variables to give your AWS",
    "start": "888000",
    "end": "894519"
  },
  {
    "text": "credentials and the name of the cluster and then you just do ECS CLI configure e",
    "start": "894519",
    "end": "901040"
  },
  {
    "text": "Hub it's a a SAS registry operated by Docker Inc or you can also run your own",
    "start": "959240",
    "end": "965079"
  },
  {
    "text": "using DTR the docker trusted registry so that's basically the docker Hub but on your servers and it's available among",
    "start": "965079",
    "end": "972279"
  },
  {
    "text": "other things with thews Marketplace or you can also since the registry is open source operate it yourself uh if you if",
    "start": "972279",
    "end": "979440"
  },
  {
    "text": "you're so inclined So the plan here is okay let's build everything with compos so Docker compose build then we tag",
    "start": "979440",
    "end": "986120"
  },
  {
    "text": "those images with a unra number we push that to the registry and then we generate a new compost file and in that",
    "start": "986120",
    "end": "992160"
  },
  {
    "text": "compost file instead of having build from this directory we have used that",
    "start": "992160",
    "end": "997360"
  },
  {
    "text": "image that we just build and and Tagg and since those steps are fair repetitive we will use a script to do",
    "start": "997360",
    "end": "1003279"
  },
  {
    "text": "all that so speaking of which all the scripts that I will use like during the the rest of the the demos are available",
    "start": "1003279",
    "end": "1010199"
  },
  {
    "text": "on GitHub uh in the repository shown here don't panic I will show again this link at the very end of the presentation",
    "start": "1010199",
    "end": "1016480"
  },
  {
    "text": "and so you are welcome to take those scripts and borrow from them and do whatever you want with it all right so",
    "start": "1016480",
    "end": "1022079"
  },
  {
    "text": "let's see how that works so the first script I want to show is build tack push",
    "start": "1022079",
    "end": "1027400"
  },
  {
    "text": "so when I do that uh it's uh building the the app the build is done and now",
    "start": "1027400",
    "end": "1034120"
  },
  {
    "text": "it's pushing in parallel all those images to the hub and that takes a minute so while it does that I will show",
    "start": "1034120",
    "end": "1040400"
  },
  {
    "text": "you what this build tag post script script looks like uh what I want to show",
    "start": "1040400",
    "end": "1045918"
  },
  {
    "text": "is that it's not rocket science it's exact L 69 lines of python including",
    "start": "1045919",
    "end": "1051559"
  },
  {
    "text": "comments so if you want to do your own for your own needs it's really easy this",
    "start": "1051559",
    "end": "1056600"
  },
  {
    "text": "is not like 10 days of engineering effort it's like a couple of hours to couble this together and okay it has",
    "start": "1056600",
    "end": "1064760"
  },
  {
    "text": "pushed all my images to the docker Hub and now I have a new um Docker compost",
    "start": "1064760",
    "end": "1070960"
  },
  {
    "text": "file and I would like to show what it look like if I can only get my here okay",
    "start": "1070960",
    "end": "1077280"
  },
  {
    "text": "uh go compose f so in this compost file as you can see each section instead of having a build I",
    "start": "1077280",
    "end": "1084679"
  },
  {
    "text": "have image and I reference the image that I just pushed to uh The Hub so this",
    "start": "1084679",
    "end": "1090280"
  },
  {
    "text": "compost file is now kind of independent of the code and I can give it to the deployment system all",
    "start": "1090280",
    "end": "1097039"
  },
  {
    "text": "right so service Discovery so why do we need service Discovery and what is even",
    "start": "1097039",
    "end": "1102480"
  },
  {
    "text": "service Discovery Well in my application I have services that need to talk to each other for instance I have a web",
    "start": "1102480",
    "end": "1107720"
  },
  {
    "text": "frontend that needs to talk to redis to know how many precious Docker coins we just m so for that my web frontend needs",
    "start": "1107720",
    "end": "1114120"
  },
  {
    "text": "to know where the redis container is located what's the host the port maybe the passwords credentials whatever",
    "start": "1114120",
    "end": "1120840"
  },
  {
    "text": "sometimes it's even more complicated than that because I have multiple uh Services multiple back ends and I'm",
    "start": "1120840",
    "end": "1126600"
  },
  {
    "text": "doing load balancing uh and sometimes it's even more complicated than that because things change over time because",
    "start": "1126600",
    "end": "1133400"
  },
  {
    "text": "I'm scaling up so instead of sending traffic just to those back ends I also have to send to those other back ends or",
    "start": "1133400",
    "end": "1138840"
  },
  {
    "text": "or I have failover and so my database failed I'm switching over to the secondary one so I have to tell my code",
    "start": "1138840",
    "end": "1145360"
  },
  {
    "text": "okay move your uh connections to that way server Discovery addresses those",
    "start": "1145360",
    "end": "1151080"
  },
  {
    "text": "things so let's see from the developer point of view what it's like to do service Discovery well at first it looks",
    "start": "1151080",
    "end": "1156880"
  },
  {
    "text": "like this I just put in my code like the address of my database of my Red Data store of my API back end and then maybe",
    "start": "1156880",
    "end": "1164400"
  },
  {
    "text": "I have my other coworker who's like well no I put everything into VMS and so those are the IP addresses of my VMS",
    "start": "1164400",
    "end": "1171240"
  },
  {
    "text": "hardcoded into my code uh and then in production we have something different and passwords and everything that's not",
    "start": "1171240",
    "end": "1178280"
  },
  {
    "text": "good so generally because when you need to go to production it's a mess because you need to change all that so you don't want to do that obviously you put your",
    "start": "1178280",
    "end": "1185320"
  },
  {
    "text": "all the credentials all the things that change in a config file and you just switch the config file when going from",
    "start": "1185320",
    "end": "1191480"
  },
  {
    "text": "Dev to prod you can still make pretty big mistakes with that like oh I'm doing stats on the production thing oh now I'm",
    "start": "1191480",
    "end": "1198240"
  },
  {
    "text": "testing the new inest job on whatever and I forgot to change the database and I just screwed up the entire production",
    "start": "1198240",
    "end": "1204840"
  },
  {
    "text": "database too bad and also maintenance is pretty expensive because when you need to add a service you have like many",
    "start": "1204840",
    "end": "1211240"
  },
  {
    "text": "config files for the different environments and you need to add that service into every single environment",
    "start": "1211240",
    "end": "1216600"
  },
  {
    "text": "and when you create a new environment you have to figure out okay so this service what will be the address this",
    "start": "1216600",
    "end": "1221679"
  },
  {
    "text": "service what will be the address so it's not so great some people thought we could do better with something called 12",
    "start": "1221679",
    "end": "1228320"
  },
  {
    "text": "Factor app principles uh so that's that's a bunch of kind of guidelines to make apps and one of those guidelines is",
    "start": "1228320",
    "end": "1234559"
  },
  {
    "text": "put the uh things the that change in your environment into environment",
    "start": "1234559",
    "end": "1240360"
  },
  {
    "text": "variables so then the code looks like this you have references to the environment everywhere I have examples",
    "start": "1240360",
    "end": "1246039"
  },
  {
    "text": "in PHP Ruby and go the code is not as nice as in the beginning but at least it doesn't change so that's better so now",
    "start": "1246039",
    "end": "1253200"
  },
  {
    "text": "instead of having config file well you still have config files but they are just like key value pairs because it's",
    "start": "1253200",
    "end": "1258240"
  },
  {
    "text": "just on environment and it's nice because environment variables are now used to describe variations in the",
    "start": "1258240",
    "end": "1263919"
  },
  {
    "text": "environment which was maybe the goal in the first place and it's also pretty interesting because when you are going",
    "start": "1263919",
    "end": "1269360"
  },
  {
    "text": "to production if you're using pass or even like if you are on Amazon you can use tags so that basically the really",
    "start": "1269360",
    "end": "1276159"
  },
  {
    "text": "some sensitive information doesn't have to be in your repo it can be somewhere in the credentials Vault of whatever",
    "start": "1276159",
    "end": "1283480"
  },
  {
    "text": "you're using to deploy and then okay what if I want to be dynamic what if I want to be able to move things around",
    "start": "1283480",
    "end": "1290640"
  },
  {
    "text": "that's where the idea of a configuration database pops up instead of having everything in files I will have a config",
    "start": "1290640",
    "end": "1297200"
  },
  {
    "text": "database and I will put in that config database the location of the other services so when I want to connect to my",
    "start": "1297200",
    "end": "1303159"
  },
  {
    "text": "database I connect first to the config database and I ask the config database where is my my SQL database that's great",
    "start": "1303159",
    "end": "1310720"
  },
  {
    "text": "except the code is now like even more complicated and in the little example that I have here it doesn't even account",
    "start": "1310720",
    "end": "1316720"
  },
  {
    "text": "for dynamic things so the fact that not only you have this more complicated code just to connect to a database but now",
    "start": "1316720",
    "end": "1323720"
  },
  {
    "text": "you also have to pull the config database or set the watch on it so that when it changes you can react to it and",
    "start": "1323720",
    "end": "1330000"
  },
  {
    "text": "restart the code using the new database so for developers it's not that great because oh yeah there is worse if you",
    "start": "1330000",
    "end": "1336360"
  },
  {
    "text": "want parity between Dev and prod environments if you have a zookeeper cluster in prod it means well you should",
    "start": "1336360",
    "end": "1341960"
  },
  {
    "text": "have a zookeeper cluster as well in Dev so now you just want to develop an application but you also have to maintain a Zuko cluster great great so",
    "start": "1341960",
    "end": "1349919"
  },
  {
    "text": "some people had some interesting ideas for instance this is from bbnb Smart stack where the idea is you have",
    "start": "1349919",
    "end": "1356440"
  },
  {
    "text": "everything running on Local Host kind of so you when you want to connect to myql you connect with 3306 when you want to",
    "start": "1356440",
    "end": "1363400"
  },
  {
    "text": "connect to redis you connect to 6379 uh your API like if you have multiple API",
    "start": "1363400",
    "end": "1368760"
  },
  {
    "text": "you say let's put them on P 80001 8,002 and so on and so forth so in Dev you just run everything locally in the",
    "start": "1368760",
    "end": "1375400"
  },
  {
    "text": "machine and in prod you put like a pro or relays so that when you connect on",
    "start": "1375400",
    "end": "1380760"
  },
  {
    "text": "3306 that's not myql that's a kind of R director that routes your connection to the actual MySQL server that's nice",
    "start": "1380760",
    "end": "1387760"
  },
  {
    "text": "because the code will be the same in Dev and prod you don't have to have a complicated zookeeper or console or itd",
    "start": "1387760",
    "end": "1394320"
  },
  {
    "text": "just on your Dev environment to achieve parity between Dev and prod so that's that's rather nice so now I want to talk",
    "start": "1394320",
    "end": "1400799"
  },
  {
    "text": "about the Ambassador pattern which is kind of inspired by this but takes it one step further let's say um so we want",
    "start": "1400799",
    "end": "1409279"
  },
  {
    "text": "to achieve this in our code base we want to be able to say I want to connect to the database well I connect to DB I want",
    "start": "1409279",
    "end": "1415320"
  },
  {
    "text": "to connect to redis I connect to redis let's pretend that there is some DNS entry that resolves correctly and what",
    "start": "1415320",
    "end": "1422240"
  },
  {
    "text": "we will do is that so in Orange that's my Docker host and in blue that's a bunch of containers and so I will deploy",
    "start": "1422240",
    "end": "1429159"
  },
  {
    "text": "my containers and here worker has to connect to redis hasher and RNG okay so",
    "start": "1429159",
    "end": "1435480"
  },
  {
    "text": "I will collect the IP addresses and I will generate a slashy C host file inside the worker container so that in",
    "start": "1435480",
    "end": "1441600"
  },
  {
    "text": "the worker container if I ping redis or if I connect to redus it resolves to The redus Container great now if I go to a",
    "start": "1441600",
    "end": "1449320"
  },
  {
    "text": "different machine or I'm using a different addressing plan that's totally fine because I just have to generate the",
    "start": "1449320",
    "end": "1455120"
  },
  {
    "text": "right UTC host file and I'm good now uh the good news some good news are that",
    "start": "1455120",
    "end": "1461159"
  },
  {
    "text": "compost does that for us when you bring some application up with compos you can define something called links and links",
    "start": "1461159",
    "end": "1467640"
  },
  {
    "text": "will exactly Define those entries in SLC SL automatically so that when one",
    "start": "1467640",
    "end": "1473399"
  },
  {
    "text": "container connects to redis it's actually connecting to the redis container now how do we get that uh on",
    "start": "1473399",
    "end": "1480120"
  },
  {
    "text": "multihost environment well the idea of ambassadors is that instead of connecting directly to redus you connect",
    "start": "1480120",
    "end": "1487679"
  },
  {
    "text": "to the Ambassador for redus in Gray so that's another container and it pretends",
    "start": "1487679",
    "end": "1492919"
  },
  {
    "text": "to be redish it's listening on the redish port and when it receives a connection it like sends the traffic to",
    "start": "1492919",
    "end": "1498840"
  },
  {
    "text": "the actual radius so in production the stack looks like this on the left I have like Walker connecting to radius above",
    "start": "1498840",
    "end": "1505559"
  },
  {
    "text": "it and it will bounce to the right in the radius container and let's look at the RNG service on the bottom I have",
    "start": "1505559",
    "end": "1511720"
  },
  {
    "text": "multiple instance of of RNG so I want to load balance traffic in that case the RNG Ambassador will also serve as a load",
    "start": "1511720",
    "end": "1518919"
  },
  {
    "text": "balancer all right so with ambassadors the code will remain uh readable and",
    "start": "1518919",
    "end": "1524320"
  },
  {
    "text": "clean and everything uh so that's great for devs devs like don't have to about anything now somebody still has to do",
    "start": "1524320",
    "end": "1531840"
  },
  {
    "text": "the job of Plumbing all those things together somebody has to deploy load balancers somebody has to use elbs or H",
    "start": "1531840",
    "end": "1539520"
  },
  {
    "text": "proxy or engine X or F5 Hardware Lo balancer or whatever so that's a dirty job but somebody has to do it so now",
    "start": "1539520",
    "end": "1546440"
  },
  {
    "text": "let's see from the upside what it will look like to set up that kind of infrastructure so for the Ops my main",
    "start": "1546440",
    "end": "1553279"
  },
  {
    "text": "question to my boss will be how fast are we moving how fast are we deploying and all that stuff and depending on the",
    "start": "1553279",
    "end": "1559159"
  },
  {
    "text": "answers we will use different strategies like if we're moving slowly so we're deploying every month or even every week",
    "start": "1559159",
    "end": "1565880"
  },
  {
    "text": "on a regular schedule we deploy every Thursday so on Wednesday it's got freeze",
    "start": "1565880",
    "end": "1571159"
  },
  {
    "text": "and uh we can accept a little bit of downtime because we do the deploy like in the middle of the night kind of sucks",
    "start": "1571159",
    "end": "1576320"
  },
  {
    "text": "for the people who have to do it in the middle of the night but maybe we can have a follow the sun rotation and the people in Russia are going to deploy for",
    "start": "1576320",
    "end": "1583240"
  },
  {
    "text": "the US and vice versa uh so that nobody has to stay up at night or whatever uh",
    "start": "1583240",
    "end": "1588279"
  },
  {
    "text": "failures are pretty rare like once a year we have a database server that blows up and okay then we have to deal",
    "start": "1588279",
    "end": "1593840"
  },
  {
    "text": "with it but that's once a year so it's okay and reconfigurations are not urgent when we like okay we need to add servers",
    "start": "1593840",
    "end": "1601080"
  },
  {
    "text": "that can wait for the deploy of next week so that's fine well in that case uh",
    "start": "1601080",
    "end": "1606120"
  },
  {
    "text": "that's pretty easy let's bake the configuration inside the application so all the config files and everything",
    "start": "1606120",
    "end": "1611679"
  },
  {
    "text": "let's put that in the container imag that we deploy so then we need to make a redeploy we just make new images and we",
    "start": "1611679",
    "end": "1618480"
  },
  {
    "text": "build and we deploy and it takes a while but that's okay because we do that once a week at worst we can even like connect",
    "start": "1618480",
    "end": "1624679"
  },
  {
    "text": "on the machine and do the config manually don't and in case of emergency when really bad things happen we can",
    "start": "1624679",
    "end": "1630360"
  },
  {
    "text": "always s and VI the config to point the new server so advantages zero investment",
    "start": "1630360",
    "end": "1636640"
  },
  {
    "text": "like okay you can be off the ground really quickly it's pretty easy to understand well except for your boss when she's asking why is database still",
    "start": "1636640",
    "end": "1643720"
  },
  {
    "text": "down while one of you is trying to understand why the primary DB is down why the secondary database has a",
    "start": "1643720",
    "end": "1650279"
  },
  {
    "text": "replication lag somebody's trying to restore from backups and well then you're in trouble because this only",
    "start": "1650279",
    "end": "1655760"
  },
  {
    "text": "happens once a year so you're not prepared so that's kind of expensive in the long run so the next scenario is",
    "start": "1655760",
    "end": "1662559"
  },
  {
    "text": "when you want to move like mildly fast so this time you want to deploy every",
    "start": "1662559",
    "end": "1667600"
  },
  {
    "text": "day and downtime is not okay uh because I mean maybe you can accept some short",
    "start": "1667600",
    "end": "1672720"
  },
  {
    "text": "glitches like it's deployment time and so there are a few people like for like 5 Seconds people loading the homepage",
    "start": "1672720",
    "end": "1678840"
  },
  {
    "text": "will get a blank page or some error but it happens so early that you can't tolerate it failures happen regularly",
    "start": "1678840",
    "end": "1685720"
  },
  {
    "text": "not because the code is crap but because you have more servers and more services and it's just basic math like if you if",
    "start": "1685720",
    "end": "1692320"
  },
  {
    "text": "you have a server failure once a year if you have 1,000 servers then you have three failures a day deal with it so you",
    "start": "1692320",
    "end": "1698440"
  },
  {
    "text": "must resolve that faster reconfigurations happen often like you might scale up scale down like somebody",
    "start": "1698440",
    "end": "1704399"
  },
  {
    "text": "shows up and say hey we are a News website and that big thing just happen and we need to scale up or this we are",
    "start": "1704399",
    "end": "1711519"
  },
  {
    "text": "working on this thing and we want it to go faster for a few days so scale up now now now uh so in that case the strategy",
    "start": "1711519",
    "end": "1718320"
  },
  {
    "text": "that I suggest is to inject the configuration after the deployment so you deploy and then you configure so the",
    "start": "1718320",
    "end": "1724640"
  },
  {
    "text": "first time you deploy things are broken nothing works then you configure it it's fine and when you redeploy you redeploy",
    "start": "1724640",
    "end": "1730720"
  },
  {
    "text": "and only the things that change need to be reconfigured and to do that configuration I suggest to have a kind",
    "start": "1730720",
    "end": "1736360"
  },
  {
    "text": "of a push button mechanic M that automates the whole thing so that basically automates connecting to the",
    "start": "1736360",
    "end": "1742120"
  },
  {
    "text": "servers and dropping the config in the right place and reloading things the advantage of that is that it's pretty",
    "start": "1742120",
    "end": "1748159"
  },
  {
    "text": "easy to understand and to implement there are not a lot of extra moving Parts there I mean the only moving part",
    "start": "1748159",
    "end": "1753760"
  },
  {
    "text": "is that script and it's only running while it's running so the rest of the time your infrastructure is still pretty",
    "start": "1753760",
    "end": "1759279"
  },
  {
    "text": "normal on the downside your services must allow reconfiguration even if reconfiguration means I ssh in and then",
    "start": "1759279",
    "end": "1766880"
  },
  {
    "text": "I put the new config and I reload the service but you must at least be able to do that and you need to remember to",
    "start": "1766880",
    "end": "1773799"
  },
  {
    "text": "trigger that reconfiguration after every change the risk of meta failure appears",
    "start": "1773799",
    "end": "1779120"
  },
  {
    "text": "So Meta failure is a failure in the deployment system because now if there is a failure if there is a bug in the",
    "start": "1779120",
    "end": "1784200"
  },
  {
    "text": "deployment system when you push the button to deploy it doesn't deploy so if you have a bug and you want to fix the",
    "start": "1784200",
    "end": "1789240"
  },
  {
    "text": "bug first you need to fix your tools so that you can fix the bug so sometimes",
    "start": "1789240",
    "end": "1794880"
  },
  {
    "text": "it's not super comfortable then there is when you're moving really really fast so you do uh you deploy continuously tens",
    "start": "1794880",
    "end": "1802480"
  },
  {
    "text": "hundreds thousands of times a day downtime is not okay even a few glitches are not fine because it compounds and",
    "start": "1802480",
    "end": "1808720"
  },
  {
    "text": "accumulates and overall it will be visible in the eror graph failures happen all the time because you have so",
    "start": "1808720",
    "end": "1814440"
  },
  {
    "text": "many servers and so many services that something is going to fail every day multiple times a day and again it's not",
    "start": "1814440",
    "end": "1821399"
  },
  {
    "text": "because the code is scrap or whatever it's just B basic math so repair actions",
    "start": "1821399",
    "end": "1826519"
  },
  {
    "text": "may be stly automated when something breaks it shouldn't need someone to push on the button it should be completely",
    "start": "1826519",
    "end": "1832559"
  },
  {
    "text": "automated and reconfigurations also happen all the time in dynamically it's not someone saying hey we need more",
    "start": "1832559",
    "end": "1839679"
  },
  {
    "text": "processing power it's suddenly the load increases and automatically something see that and adds more instances",
    "start": "1839679",
    "end": "1847240"
  },
  {
    "text": "automatically right so the strategy here is that you need to detect when things happen in real time so by using a",
    "start": "1847240",
    "end": "1854000"
  },
  {
    "text": "combination of really like good monitoring uh hopefully having a stream of events like all the things happening",
    "start": "1854000",
    "end": "1860120"
  },
  {
    "text": "on the platform like knowing what happens if possible you can have Services registering themselves pushing",
    "start": "1860120",
    "end": "1866120"
  },
  {
    "text": "metrics all around you can pull them but you you need visibility you need lots of data and basically you listen to those",
    "start": "1866120",
    "end": "1872399"
  },
  {
    "text": "events to all those things and you react to events like oh some container or some",
    "start": "1872399",
    "end": "1877519"
  },
  {
    "text": "service just appeared you to thresholds like latency went above this on the Q",
    "start": "1877519",
    "end": "1883240"
  },
  {
    "text": "size above that and you react by scaling up or down when it's the opposite events",
    "start": "1883240",
    "end": "1888919"
  },
  {
    "text": "so the result is that that's nice everything happens automatically uh there are no extra steps to do when you deploy you deploy and your whole service",
    "start": "1888919",
    "end": "1895399"
  },
  {
    "text": "picks up everything great you have more modularity as well because you can have one service that listens to the database",
    "start": "1895399",
    "end": "1901240"
  },
  {
    "text": "cluster and one service that listens to the API cluster and they use completely different Logic the drawbacks is that",
    "start": "1901240",
    "end": "1906960"
  },
  {
    "text": "that's a lot of extra code obviously a lot of extra moving parts to maintain and The Meta failers are now super",
    "start": "1906960",
    "end": "1913080"
  },
  {
    "text": "dangerous because if there is like let's say you change the scaling something whatever policy and suddenly someone",
    "start": "1913080",
    "end": "1919360"
  },
  {
    "text": "deploys and boom you're down and you're down until you can fix the first mistake so uh in that case you can move fast and",
    "start": "1919360",
    "end": "1926679"
  },
  {
    "text": "break things as long as you don't break the things that repair things that are broken kind",
    "start": "1926679",
    "end": "1932679"
  },
  {
    "text": "of so little recap table of what we said here so those are the different",
    "start": "1932679",
    "end": "1938279"
  },
  {
    "text": "strategies like uh each line is like a hardcoded configuration 12 Factor config database local load balancers",
    "start": "1938279",
    "end": "1945000"
  },
  {
    "text": "ambassadors and um I put like some emojis to indicate if developers were",
    "start": "1945000",
    "end": "1950159"
  },
  {
    "text": "happy or sad and Ops happy or sad and what would happen when things go wrong if you don't like emojis I have a PL",
    "start": "1950159",
    "end": "1956000"
  },
  {
    "text": "English version but basically with ambassadors things are kind of fine except there is one thing",
    "start": "1956000",
    "end": "1962559"
  },
  {
    "text": "that we haven't really discussed it's what it's really like for Ops to implement that Ambassador thing because",
    "start": "1962559",
    "end": "1969639"
  },
  {
    "text": "if I'm just you know like my favorite thing is the bump in the carpet if I'm just pushing the bump in the carpet now",
    "start": "1969639",
    "end": "1974880"
  },
  {
    "text": "the carpet here is fine but I have a nasty bump a few feet further so let's see what it is really",
    "start": "1974880",
    "end": "1980480"
  },
  {
    "text": "like to implement those ambassadors all right so the plan here is I will take a really simple web",
    "start": "1980480",
    "end": "1987000"
  },
  {
    "text": "application like front end and there is a rist back end and I will deploy that on ECS and on Swarm and then I will take",
    "start": "1987000",
    "end": "1993639"
  },
  {
    "text": "the doer coins application of the beginning and again deploy it on ECS and on Swarm so first our simple training uh",
    "start": "1993639",
    "end": "2001519"
  },
  {
    "text": "training wheels application that's super simple I have a so this is one of those applications you know where you have a",
    "start": "2001519",
    "end": "2006919"
  },
  {
    "text": "web counter you connect to it and it says you've seen that page five times reload six times reload seven times",
    "start": "2006919",
    "end": "2012360"
  },
  {
    "text": "except there is a twist it will tell us which back end serve the request this is server ABC and I serve eight request and",
    "start": "2012360",
    "end": "2019960"
  },
  {
    "text": "then it will give you the list of the other back ends so then you can go to another machine and it will tell you this is server XYZ and I served one",
    "start": "2019960",
    "end": "2026559"
  },
  {
    "text": "request and ABC served eight so you reload seven times and now you beat that other ABC server so that's really the",
    "start": "2026559",
    "end": "2033080"
  },
  {
    "text": "most basic disability application you could imagine so let's see what that app application looks like so there again",
    "start": "2033080",
    "end": "2039639"
  },
  {
    "text": "code on GitHub so git clone git colon jpo SL no github.com",
    "start": "2039639",
    "end": "2047839"
  },
  {
    "text": "uh jpo trining Wheels great we go to",
    "start": "2047839",
    "end": "2054079"
  },
  {
    "text": "draining Wheels we doer compose up and",
    "start": "2054079",
    "end": "2059878"
  },
  {
    "text": "all right it's building and what's in up and running it will be on the same machine and this time I hope I can type",
    "start": "2059879",
    "end": "2066320"
  },
  {
    "text": "the address correctly we'll see right now the app is up so um I want to go to",
    "start": "2066320",
    "end": "2073960"
  },
  {
    "text": "reinvent doer. info uh colon 8,000 that",
    "start": "2073960",
    "end": "2079079"
  },
  {
    "text": "the same address y That's the training wheel applications and yeah that's that's how",
    "start": "2079079",
    "end": "2085280"
  },
  {
    "text": "it works and uh so it gives us a kind of a counter uh of how many people looked",
    "start": "2085280",
    "end": "2091158"
  },
  {
    "text": "at it so I can reload oh like there some people tried something well that web scale fine uh",
    "start": "2091159",
    "end": "2100320"
  },
  {
    "text": "let's move forward okay so I want to deploy that on ECS to scale it uh so on ECS so some",
    "start": "2100320",
    "end": "2108920"
  },
  {
    "text": "kind of ECS 101 information on ECS a container is a member of a task so a",
    "start": "2108920",
    "end": "2114760"
  },
  {
    "text": "task and so a task are created from task definitions and task definitions look a",
    "start": "2114760",
    "end": "2121200"
  },
  {
    "text": "lot like compos files conceptually uh it's not the same format but you can kind of map to it and so uh there is a",
    "start": "2121200",
    "end": "2129480"
  },
  {
    "text": "tool that I mean there are multiple tools to map from that but the ECS CLI comes to the rescue here because the ECS",
    "start": "2129480",
    "end": "2136320"
  },
  {
    "text": "CLI will take a the compost file will turn it into a task definition it will",
    "start": "2136320",
    "end": "2141880"
  },
  {
    "text": "register that task definition with ECS and then it will tell to ECS run instances of that task definition",
    "start": "2141880",
    "end": "2148640"
  },
  {
    "text": "however ECS CLI for now will not accept build sections like if you compos file",
    "start": "2148640",
    "end": "2153800"
  },
  {
    "text": "says build from this directory CS says c will tell you no I can do that so fine",
    "start": "2153800",
    "end": "2158880"
  },
  {
    "text": "we will use the build tag push script of earlier so that we get a compos file",
    "start": "2158880",
    "end": "2164720"
  },
  {
    "text": "that ECS can deal with all right so let's stop this application and uh so",
    "start": "2164720",
    "end": "2171760"
  },
  {
    "text": "build tag push and after that so a little thing there is a a super minor uh",
    "start": "2171760",
    "end": "2178280"
  },
  {
    "text": "kind of bug in between uh the yaml file that I generate and the yaml file that",
    "start": "2178280",
    "end": "2185319"
  },
  {
    "text": "ECS C can read so I'm going to run a fix upml script it's just a oneline set",
    "start": "2185319",
    "end": "2191040"
  },
  {
    "text": "script so there is no magic in it I promise uh I can even like prove that now like cat Bean SL fix up where is it",
    "start": "2191040",
    "end": "2200280"
  },
  {
    "text": "um Bean fix UPL right okay there is like 10 lines of",
    "start": "2200280",
    "end": "2206200"
  },
  {
    "text": "blah blah blah checking if the file exist and then there is one said line uh but anyway now so it's pushed so I can",
    "start": "2206200",
    "end": "2212960"
  },
  {
    "text": "do fixl all right so can we start the app app now not yet because if if I start",
    "start": "2212960",
    "end": "2220280"
  },
  {
    "text": "the app now I will get on ECS one web front end and one redus great and if I",
    "start": "2220280",
    "end": "2226280"
  },
  {
    "text": "scale I get one web frontend and one red somewhere and another web frontend and another red elsewhere and if I scale up",
    "start": "2226280",
    "end": "2232400"
  },
  {
    "text": "and up and up I just get many copies of my app but that's not what I want what I want is many copies of the front end but",
    "start": "2232400",
    "end": "2239240"
  },
  {
    "text": "all of them talking to the same redice so for that we're going to deploy redus separately using ECS CLI as well and",
    "start": "2239240",
    "end": "2247400"
  },
  {
    "text": "then then we will replace redis by an ambassador in in our main application",
    "start": "2247400",
    "end": "2252760"
  },
  {
    "text": "pointing to that so to do the Ambassador R I will use",
    "start": "2252760",
    "end": "2258040"
  },
  {
    "text": "jpoa it's a little kind of Swiss army knife of load balancing that I did uh",
    "start": "2258040",
    "end": "2263560"
  },
  {
    "text": "and so you just give it the port to listen to and a list of back ends if there is only one back end it just like",
    "start": "2263560",
    "end": "2270000"
  },
  {
    "text": "Rouse the traffic if there are multiple back ends it does load balancing you are welcome to implement your own again like",
    "start": "2270000",
    "end": "2276040"
  },
  {
    "text": "if you go to the docker Hub and look at this there's like 50 lines of shell",
    "start": "2276040",
    "end": "2281440"
  },
  {
    "text": "script maybe for that container so that's again not rocket science all right so first the job is to deploy",
    "start": "2281440",
    "end": "2288680"
  },
  {
    "text": "radus all right so let's create a new directory like my Rus and let's uh oh",
    "start": "2288680",
    "end": "2295599"
  },
  {
    "text": "okay I forgot a little something here The compost file fix upml okay and now I copy the",
    "start": "2295599",
    "end": "2303040"
  },
  {
    "text": "compost file to um my red directory I go",
    "start": "2303040",
    "end": "2308119"
  },
  {
    "text": "there I edit the compost file and here so first I just want to deploy radius by",
    "start": "2308119",
    "end": "2313280"
  },
  {
    "text": "itself so I remove www and then I want that radius to be um reachable by the",
    "start": "2313280",
    "end": "2319880"
  },
  {
    "text": "rest of the stack so I'm going to say okay let's export the radius Port all right and now I do ECS CLI",
    "start": "2319880",
    "end": "2327520"
  },
  {
    "text": "compose up now I do ECS CLI compos PS okay it's",
    "start": "2327520",
    "end": "2334960"
  },
  {
    "text": "up and running so I have to copy paste like the host and Port",
    "start": "2334960",
    "end": "2340800"
  },
  {
    "text": "here all right and so the next step is to deploy the application itself so we",
    "start": "2340800",
    "end": "2346839"
  },
  {
    "text": "go back to the training wheels directory and we also modify the compost",
    "start": "2346839",
    "end": "2353720"
  },
  {
    "text": "file uh so this time uh I changed the redis service so that instead of being",
    "start": "2353720",
    "end": "2359800"
  },
  {
    "text": "the actual redis it will be an ambassador so image jpo hmar and then I",
    "start": "2359800",
    "end": "2365319"
  },
  {
    "text": "give the command so listen on rist Port 6379 and send all traffic to that",
    "start": "2365319",
    "end": "2372400"
  },
  {
    "text": "address and Port all right now I do ECS CLI compose up and since I'm a crazy",
    "start": "2372400",
    "end": "2380040"
  },
  {
    "text": "person I also do ECS CLI compose scale 4 and then I dos C compose PS and let's",
    "start": "2380040",
    "end": "2389000"
  },
  {
    "text": "see what happens all right I already have one up and running two three all",
    "start": "2389000",
    "end": "2394520"
  },
  {
    "text": "right so I'm going to go copy paste here go into the",
    "start": "2394520",
    "end": "2400720"
  },
  {
    "text": "browser all right and I see a few request because there is an neb in front of it so those are the health checks of",
    "start": "2400720",
    "end": "2406400"
  },
  {
    "text": "the elb so you see when I reload it tells me I have 17 18 19 request okay",
    "start": "2406400",
    "end": "2411960"
  },
  {
    "text": "now I'm going to check another back end like this one uh and",
    "start": "2411960",
    "end": "2419720"
  },
  {
    "text": "uh yep and know I when I reload you see it's the it's the the yellow line",
    "start": "2419720",
    "end": "2425160"
  },
  {
    "text": "indicates which back end it is in the list so if I fast enough it's going to pass in front of the other one right and",
    "start": "2425160",
    "end": "2430720"
  },
  {
    "text": "I also have a load balancer in front and the load balancer is e lb. DC a.info and",
    "start": "2430720",
    "end": "2438480"
  },
  {
    "text": "so here if I reload it will switch from one back end to the other that's got classic classic load balancer uh and um",
    "start": "2438480",
    "end": "2447760"
  },
  {
    "text": "so uh and sometimes it does a blank page what's going on okay let's reload a",
    "start": "2447760",
    "end": "2453280"
  },
  {
    "text": "little bit okay let's talk directly to the back end okay apparently someone also decided",
    "start": "2453280",
    "end": "2459280"
  },
  {
    "text": "to send a bunch of request to that so the back ends are still alive the load balancer okay it's back yeah I need I I",
    "start": "2459280",
    "end": "2465640"
  },
  {
    "text": "should go to one of the elb sessions to learn how to properly deploy a load balancer apparently but it seems to be",
    "start": "2465640",
    "end": "2471640"
  },
  {
    "text": "working right okay um so uh now let's do some cleanup",
    "start": "2471640",
    "end": "2478319"
  },
  {
    "text": "let's not leave that app running because otherwise it would conflict with the other app I want to deploy after so I'm",
    "start": "2478319",
    "end": "2483800"
  },
  {
    "text": "just going to do ECS CLI compos down down and it will terminate my",
    "start": "2483800",
    "end": "2488960"
  },
  {
    "text": "application all right so now I want to put this training wheels application on Swarm and here the idea is a little bit",
    "start": "2488960",
    "end": "2496000"
  },
  {
    "text": "different I will keep the same compost file but I will replace the links with",
    "start": "2496000",
    "end": "2501280"
  },
  {
    "text": "ambassadors uh and I will use local uh the the the local addresses so the",
    "start": "2501280",
    "end": "2506880"
  },
  {
    "text": "containers will share the network namespace what does that mean it means that if I have those two containers so",
    "start": "2506880",
    "end": "2513079"
  },
  {
    "text": "the web front end on the bottom and Rus on top uh I will will have in the in the",
    "start": "2513079",
    "end": "2518920"
  },
  {
    "text": "web front end uh in the ETC host entry instead of having the IP address of a container I have a local address 1271",
    "start": "2518920",
    "end": "2526359"
  },
  {
    "text": "12702 redis so when I try to connect to redis it doesn't work because there is nothing on that address it's a it's a",
    "start": "2526359",
    "end": "2532880"
  },
  {
    "text": "local host address so nothing connection refused but then I will start the Ambassador sharing the same network",
    "start": "2532880",
    "end": "2540040"
  },
  {
    "text": "namespace so two containers sharing the same network name space are still independent they have their own process",
    "start": "2540040",
    "end": "2545920"
  },
  {
    "text": "space their own memory on um everything except for the network stack they have",
    "start": "2545920",
    "end": "2551200"
  },
  {
    "text": "the same network stack the same interfaces and everything so now the Ambassador is here but it's not configured yet so when I connect to it I",
    "start": "2551200",
    "end": "2558359"
  },
  {
    "text": "get either connection refused or a timeout okay and so then I put the configuration into the road balancer and",
    "start": "2558359",
    "end": "2565359"
  },
  {
    "text": "now it's fine because when I connect to the Ambassador it relates the traffic to the actual radius so that's exactly what",
    "start": "2565359",
    "end": "2571520"
  },
  {
    "text": "we're going to do with swam so the first step uh is that I will point my uh",
    "start": "2571520",
    "end": "2580040"
  },
  {
    "text": "darker uh environment uh to the Swarm cluster uh so it's with the Comm machine",
    "start": "2580040",
    "end": "2586760"
  },
  {
    "text": "okay D Das swarm so now if I do like darker info I see like all the NOS of my cluster great",
    "start": "2586760",
    "end": "2594880"
  },
  {
    "text": "uh now I edit the compost file uh and uh I will put back here",
    "start": "2594880",
    "end": "2601400"
  },
  {
    "text": "image radius I remove the command and now I a couple of other",
    "start": "2601400",
    "end": "2607880"
  },
  {
    "text": "scripts so link to ambassadors and link to ambassadors so now here instead of",
    "start": "2607880",
    "end": "2613920"
  },
  {
    "text": "having a link for Rus I have this extra host radius 1271 12702 thing now I do",
    "start": "2613920",
    "end": "2619760"
  },
  {
    "text": "Docker compose up- D to starting in the background so now my whole cluster is pulling the",
    "start": "2619760",
    "end": "2626599"
  },
  {
    "text": "images for the front end and that's it now it's running uh and so now if I do like Docker compost PS and I try to open",
    "start": "2626599",
    "end": "2634680"
  },
  {
    "text": "the application uh it will not work because remember it's not configured yet like my",
    "start": "2634680",
    "end": "2641880"
  },
  {
    "text": "uh web front end end up talking like to nothing see right I have a big red error",
    "start": "2641880",
    "end": "2647920"
  },
  {
    "text": "page uh and so what I need to do is to inject well first create ambassadors one",
    "start": "2647920",
    "end": "2653760"
  },
  {
    "text": "script it's okay creating it and then configure ambassadors okay finding out",
    "start": "2653760",
    "end": "2658920"
  },
  {
    "text": "the address of Frist injecting the config and now if I come back here and I reload it works",
    "start": "2658920",
    "end": "2665119"
  },
  {
    "text": "great so now we wants to scale obviously uh so to scale it will be pretty easy",
    "start": "2665119",
    "end": "2672319"
  },
  {
    "text": "that's the N thing here is that I just do darker compose scale so it's a basic",
    "start": "2672319",
    "end": "2677400"
  },
  {
    "text": "command in in compose except when you scale with compose if you scale a worker it's great you have multiple copies up and running but if you scale a a server",
    "start": "2677400",
    "end": "2685800"
  },
  {
    "text": "that that accepts traffic the first copy is receiving traffic but the others are just sitting there but let's do that",
    "start": "2685800",
    "end": "2691720"
  },
  {
    "text": "Docker scale www to four instances it's starting them okay",
    "start": "2691720",
    "end": "2697960"
  },
  {
    "text": "uh and now if I do Docker compost PS I see them so I can connect to one of",
    "start": "2697960",
    "end": "2705920"
  },
  {
    "text": "them uh for next time I will try to have a bigger Mouse pointer okay and now if I",
    "start": "2705920",
    "end": "2713240"
  },
  {
    "text": "connect here it gives me the error because I have to set up the ambassadors so fine create ambassadors it will be",
    "start": "2713240",
    "end": "2718720"
  },
  {
    "text": "smart enough to realize that the first one already exist configure",
    "start": "2718720",
    "end": "2724760"
  },
  {
    "text": "ambassadors so that's a little bit of more work and now if I reload here it works okay so far so good so what",
    "start": "2724760",
    "end": "2733480"
  },
  {
    "text": "happened here is that in the beginning I had just like web and redis and the Ambassador below it and then I create",
    "start": "2733480",
    "end": "2739720"
  },
  {
    "text": "the additional copies of the web server but they are not operational yet so I",
    "start": "2739720",
    "end": "2744880"
  },
  {
    "text": "add the ambassadors like right next to them and then I configure the ambassadors and then things work let's",
    "start": "2744880",
    "end": "2751119"
  },
  {
    "text": "do some cleanup before we move on to deploy the actual application so do compose kill and Docker compose",
    "start": "2751119",
    "end": "2758480"
  },
  {
    "text": "RM okay so now I want to scale Docker coins",
    "start": "2758480",
    "end": "2763520"
  },
  {
    "text": "like the the application of the beginning with the graph so we will use exactly the same Technique we will put",
    "start": "2763520",
    "end": "2769040"
  },
  {
    "text": "radius on the side actually we will reuse the same radus because it's still running then in in the compos file I",
    "start": "2769040",
    "end": "2775040"
  },
  {
    "text": "will change redus to put an ambassador and I will lets do the rest so let's do that uh so I go to Docker",
    "start": "2775040",
    "end": "2785359"
  },
  {
    "text": "coins uh oh I need first to go to redis and make sure that I remember the host",
    "start": "2785359",
    "end": "2792400"
  },
  {
    "text": "and part of my redis thing okay that's it now I go to Docker coins and uh I",
    "start": "2792400",
    "end": "2801200"
  },
  {
    "text": "need to set the compose file so export",
    "start": "2801200",
    "end": "2806839"
  },
  {
    "text": "compose file equal",
    "start": "2806839",
    "end": "2811280"
  },
  {
    "text": "this uh I just screwed up my",
    "start": "2812280",
    "end": "2817480"
  },
  {
    "text": "copy paste of this all right so now we will edit the compost file and uh here we have a few",
    "start": "2817480",
    "end": "2826520"
  },
  {
    "text": "things to do so first we have to change radius so that in fact we will be using",
    "start": "2826520",
    "end": "2832160"
  },
  {
    "text": "uh the Ambassador so image jpo hm okay listen on the radi sport so",
    "start": "2832160",
    "end": "2841839"
  },
  {
    "text": "obviously you want to automate this I had to make a really tough decision of what I wanted to script what I did not",
    "start": "2841839",
    "end": "2847760"
  },
  {
    "text": "want to script uh but obviously like in a real deployment this would be scripted like you would have a little thing",
    "start": "2847760",
    "end": "2853559"
  },
  {
    "text": "saying this is the list of services I want to replace with ambassadors and you would have this pipeline that takes your",
    "start": "2853559",
    "end": "2858839"
  },
  {
    "text": "compost file and does horrible things with it uh until you can push it to",
    "start": "2858839",
    "end": "2864480"
  },
  {
    "text": "compose uh okay and here I need to add something else as well I need to put a m limit on my",
    "start": "2864480",
    "end": "2870960"
  },
  {
    "text": "container otherwise by default each container will get 500 Megs and that will be too much for the poor little",
    "start": "2870960",
    "end": "2878160"
  },
  {
    "text": "instances that I provisioned for this and I need to put that in the right place okay I need to also remove the",
    "start": "2878160",
    "end": "2887520"
  },
  {
    "text": "volumes all right do I have everything hopefully so I need to fix upml okay and",
    "start": "2887520",
    "end": "2894160"
  },
  {
    "text": "now I can try to do let's see okay I did all those things ECS compose up let's",
    "start": "2894160",
    "end": "2900440"
  },
  {
    "text": "see C compose up okay and now let's watch it going",
    "start": "2900440",
    "end": "2906319"
  },
  {
    "text": "live so watchs CLI compos PS so we will see in pending State and",
    "start": "2906319",
    "end": "2913280"
  },
  {
    "text": "we will see the containers like showing up one after the other and uh to be a",
    "start": "2913280",
    "end": "2919040"
  },
  {
    "text": "little bit faster I will be extremely Optimist and assume that this will work and I will scale right away to",
    "start": "2919040",
    "end": "2926519"
  },
  {
    "text": "four all right okay so like this is one of the web services it's up another web",
    "start": "2927359",
    "end": "2933319"
  },
  {
    "text": "service is up but I want the web UI to be up yep that's the web UI great let's",
    "start": "2933319",
    "end": "2938440"
  },
  {
    "text": "go there here okay and I'm mining four Docker coins",
    "start": "2938440",
    "end": "2945319"
  },
  {
    "text": "per second and hopefully when the other members of the stack also come up I will",
    "start": "2945319",
    "end": "2950880"
  },
  {
    "text": "see that graph come up as well yep I have another and then yet another and that should climb to 16 in a few seconds",
    "start": "2950880",
    "end": "2958480"
  },
  {
    "text": "hopefully yep if everything goes right perfect so I deployed and scaled my app on ECS and so the last thing is now that",
    "start": "2958480",
    "end": "2966000"
  },
  {
    "text": "I will oh so to explain exactly what happened here I had my redus service and then I deployed the whole stack where",
    "start": "2966000",
    "end": "2971839"
  },
  {
    "text": "redis is just a pointer to the actual R service and then I deploy another copy",
    "start": "2971839",
    "end": "2976920"
  },
  {
    "text": "of the stack and then another and so on and so forth so now with swarm we will be able to scale things independently",
    "start": "2976920",
    "end": "2984280"
  },
  {
    "text": "slightly different strategy so I will quickly show that to to conclude uh so",
    "start": "2984280",
    "end": "2989720"
  },
  {
    "text": "we have to edit the compos file again uh to uh restore redus to be like a just",
    "start": "2989720",
    "end": "2996920"
  },
  {
    "text": "the normal Rus and not the Ambassador uh and then we have to run",
    "start": "2996920",
    "end": "3003319"
  },
  {
    "text": "link to ambassadors doer compos of",
    "start": "3003319",
    "end": "3008319"
  },
  {
    "text": "DD so it's deing",
    "start": "3010680",
    "end": "3014920"
  },
  {
    "text": "everything and then I will do configure ambassadors and okay I need to do one",
    "start": "3018599",
    "end": "3024559"
  },
  {
    "text": "little thing uh and and so the the key difference",
    "start": "3024559",
    "end": "3031880"
  },
  {
    "text": "here is that instead of having unti Stacks we have independent containers so",
    "start": "3031880",
    "end": "3037880"
  },
  {
    "text": "if we look at what's would be happening on the cluster the key difference is that okay let's say I have two Docker hosts so I have a bunch of containers",
    "start": "3037880",
    "end": "3044799"
  },
  {
    "text": "initially and then I they can't St to each other like all broken I add the",
    "start": "3044799",
    "end": "3050280"
  },
  {
    "text": "ambassadors and I have one Ambassador for each container needing to talk to another and then I inject the",
    "start": "3050280",
    "end": "3056680"
  },
  {
    "text": "configuration and when I will scale what happens is that I add more containers again they are broken unconfigured I add",
    "start": "3056680",
    "end": "3063760"
  },
  {
    "text": "the ambassadors I configure the ambassadors and at that point everything works you might think that it makes a",
    "start": "3063760",
    "end": "3069240"
  },
  {
    "text": "lot of ambassadors but what I want to show here okay it's still downloading uh yeah I think I still had",
    "start": "3069240",
    "end": "3076559"
  },
  {
    "text": "some scaling parameters on the cluster so it's starting a crazy number of workers and everything",
    "start": "3076559",
    "end": "3085200"
  },
  {
    "text": "uh but that's great because what I want to to show is how lightweight those",
    "start": "3085640",
    "end": "3091160"
  },
  {
    "text": "ambassadors are okay it's",
    "start": "3091160",
    "end": "3097200"
  },
  {
    "text": "slow um but just to give you a hint it's about one megabyte per Ambassador so",
    "start": "3097200",
    "end": "3103200"
  },
  {
    "text": "that's that's how expensive is a container so a container on Docker can be as lightweight as one megabyte uh",
    "start": "3103200",
    "end": "3111920"
  },
  {
    "text": "okay downloading and pulling okay I will show that just after because because I want to move forward",
    "start": "3111920",
    "end": "3118079"
  },
  {
    "text": "uh and I want that that's still the one on ECS that's not the one we want to see yeah sorry I think I kind of screwed",
    "start": "3118079",
    "end": "3125440"
  },
  {
    "text": "up that part of the demo normally it comes up in a couple of minutes and then we scale instead of scaling directly so",
    "start": "3125440",
    "end": "3131520"
  },
  {
    "text": "some discussions about this Ambassador Al though some people initially were extremely um kind of unhappy about this",
    "start": "3131520",
    "end": "3137880"
  },
  {
    "text": "idea because they say well you're just adding one extra hop and so that sucks and I don't want to have anything to do",
    "start": "3137880",
    "end": "3143440"
  },
  {
    "text": "with it in fact we're not adding an extra hop so because this is a local Hub",
    "start": "3143440",
    "end": "3148720"
  },
  {
    "text": "you're connecting of a local host so the latency is like micro second like compared to the network latency will be",
    "start": "3148720",
    "end": "3155880"
  },
  {
    "text": "which will be millisecond like even if you have a really fast Network then it means you have really fast machines so",
    "start": "3155880",
    "end": "3161240"
  },
  {
    "text": "your local connection will always be much much much faster than the thing of the network and actually when you have",
    "start": "3161240",
    "end": "3167640"
  },
  {
    "text": "load balancers anywhere if you don't use ambassadors you have client load balancer and service so you're doing two",
    "start": "3167640",
    "end": "3175040"
  },
  {
    "text": "Network hops hops if you have ambassadors you do client Ambassador and",
    "start": "3175040",
    "end": "3180440"
  },
  {
    "text": "straight to the back end so you're actually saving one up so ambassadors actually improve",
    "start": "3180440",
    "end": "3186079"
  },
  {
    "text": "latency okay well it's still working so um whatever so to recap uh with compos we",
    "start": "3186079",
    "end": "3193319"
  },
  {
    "text": "had a really nice workflow to go from uh those so compos on like normal machines",
    "start": "3193319",
    "end": "3199599"
  },
  {
    "text": "like this with the doctor toolbox and then we can use Docker compose again",
    "start": "3199599",
    "end": "3204760"
  },
  {
    "text": "with Docker swarm or we can use this CS CLI to take those compos files to ECS um",
    "start": "3204760",
    "end": "3210520"
  },
  {
    "text": "and so that gives us application portability between Dev and prod and the interface points like the common things",
    "start": "3210520",
    "end": "3216680"
  },
  {
    "text": "are the compos file and the docker registry whether it's the docker Hub or the DTR or your own operated registry",
    "start": "3216680",
    "end": "3224599"
  },
  {
    "text": "some highlights about ECS and swarm both give you super easy provisioning tools",
    "start": "3224599",
    "end": "3229880"
  },
  {
    "text": "ECS is obviously strongly integrated with the AWS ecosystem it integrates with elbs with IM am it provides health",
    "start": "3229880",
    "end": "3237079"
  },
  {
    "text": "check and selfhealing I didn't show that here but you can like kill containers or",
    "start": "3237079",
    "end": "3242400"
  },
  {
    "text": "instances and ECS will restart that for you swam on the other hand is more tied",
    "start": "3242400",
    "end": "3248280"
  },
  {
    "text": "within the darker ecosystem it gives you parity between your local and production environments and it also expose a stream",
    "start": "3248280",
    "end": "3256839"
  },
  {
    "text": "of events so if you want to build that smarter system where you're reacting real time you can easily do that with",
    "start": "3256839",
    "end": "3263680"
  },
  {
    "text": "swarm because you get that Str of events already uh both currently require extra",
    "start": "3263680",
    "end": "3269640"
  },
  {
    "text": "tools like all the the little scripts that I demoed here uh but when you will look at those scripts you will see that",
    "start": "3269640",
    "end": "3276040"
  },
  {
    "text": "it's really not complicated and I'm really to bet that those scripts are way smaller than the other scripts that you",
    "start": "3276040",
    "end": "3282480"
  },
  {
    "text": "already have to deal with your infrastructure so my hidden terminal tells me that this is ready so now I can",
    "start": "3282480",
    "end": "3290200"
  },
  {
    "text": "do um so create ambassadors which will take a",
    "start": "3290200",
    "end": "3296240"
  },
  {
    "text": "while because there are so many of them to create since the app is scale like",
    "start": "3296240",
    "end": "3301400"
  },
  {
    "text": "crazy um okay so future directions and ideas so first we would love to have",
    "start": "3301400",
    "end": "3306839"
  },
  {
    "text": "your feedback on that because uh swarm is pretty young the ECS CI is so young",
    "start": "3306839",
    "end": "3312040"
  },
  {
    "text": "that it's not here yet but it will be soon uh some ideas are also to use app specific ambassadors instead of using",
    "start": "3312040",
    "end": "3318720"
  },
  {
    "text": "just a proxy that relay the traffic for instance for redis you can use a proxy",
    "start": "3318720",
    "end": "3324520"
  },
  {
    "text": "that will inject your credentials so it connect to the backend redis and it will pass the credentials so that your",
    "start": "3324520",
    "end": "3330119"
  },
  {
    "text": "application still connects to redis without using a password but the Ambassador will take care authenticating",
    "start": "3330119",
    "end": "3336400"
  },
  {
    "text": "so that the code Still Remains clean and without credentials and so on and so forth uh you can also translate that to",
    "start": "3336400",
    "end": "3343200"
  },
  {
    "text": "API proxies to add credentials or SQL bouncers another interesting idea is to",
    "start": "3343200",
    "end": "3348720"
  },
  {
    "text": "detect when a composed file is using an official image like redis and say hm",
    "start": "3348720",
    "end": "3353880"
  },
  {
    "text": "okay instead of using an ambassador and whatever I mean I will still have an ambassador but basically what I will do",
    "start": "3353880",
    "end": "3359160"
  },
  {
    "text": "is that I will spin up a redice container not container sorry service on elastic cache and then my Ambassador",
    "start": "3359160",
    "end": "3366160"
  },
  {
    "text": "will use that will use that so I have some high availability same thing if I detect that you're using my SQL or",
    "start": "3366160",
    "end": "3372599"
  },
  {
    "text": "postgress I can bring up uh database cluster on RGS and use that um other",
    "start": "3372599",
    "end": "3379760"
  },
  {
    "text": "improvements so as I said swarm exposes a stream of events so you can detect when containers go up and down and do",
    "start": "3379760",
    "end": "3385920"
  },
  {
    "text": "some res resiliency uh there are some tools that do that automatically like",
    "start": "3385920",
    "end": "3391240"
  },
  {
    "text": "interlock that will then automatically configure balancers or registrator that will add the containers into uh",
    "start": "3391240",
    "end": "3398119"
  },
  {
    "text": "something like console and then you can have another system that Taps into console and sets up thead balancing",
    "start": "3398119",
    "end": "3404079"
  },
  {
    "text": "overlay networks are a thing as well they allow to have direct container to container communication so in some",
    "start": "3404079",
    "end": "3409599"
  },
  {
    "text": "scenarios that's great if you don't need load balancing you just have a bunch of actors talking to each other then",
    "start": "3409599",
    "end": "3416359"
  },
  {
    "text": "overlay networks are a good thing to use thanks we have like uh one minute and a half for",
    "start": "3416359",
    "end": "3422680"
  },
  {
    "text": "questions please feel your evaluations uh if you did",
    "start": "3422680",
    "end": "3430280"
  }
]