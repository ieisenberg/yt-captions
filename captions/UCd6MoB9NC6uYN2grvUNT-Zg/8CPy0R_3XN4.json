[
  {
    "text": "hi I'm Alexi iano worldwide security and",
    "start": "2240",
    "end": "5480"
  },
  {
    "text": "identity partner Solutions architect",
    "start": "5480",
    "end": "7359"
  },
  {
    "text": "with Amazon verified permissions today",
    "start": "7359",
    "end": "10120"
  },
  {
    "text": "I'll be demonstrating a new feature that",
    "start": "10120",
    "end": "12360"
  },
  {
    "text": "makes it simple for you to use any open",
    "start": "12360",
    "end": "15360"
  },
  {
    "text": "ID connect identity providers and Amazon",
    "start": "15360",
    "end": "18680"
  },
  {
    "text": "verified permissions to authenticate and",
    "start": "18680",
    "end": "21800"
  },
  {
    "text": "authorize user access to any apis hosted",
    "start": "21800",
    "end": "25920"
  },
  {
    "text": "on Amazon API",
    "start": "25920",
    "end": "28960"
  },
  {
    "text": "Gateway Amazon verified permission",
    "start": "28960",
    "end": "31199"
  },
  {
    "text": "service enables you to implement",
    "start": "31199",
    "end": "33360"
  },
  {
    "text": "permissions management and authorization",
    "start": "33360",
    "end": "35760"
  },
  {
    "text": "within the applications that you",
    "start": "35760",
    "end": "38879"
  },
  {
    "text": "build it's authorization as a service",
    "start": "38879",
    "end": "42280"
  },
  {
    "text": "instead of building your own application",
    "start": "42280",
    "end": "44440"
  },
  {
    "text": "specific authorization system you can",
    "start": "44440",
    "end": "47039"
  },
  {
    "text": "add granular permissions into your",
    "start": "47039",
    "end": "49879"
  },
  {
    "text": "application your application or a",
    "start": "49879",
    "end": "52640"
  },
  {
    "text": "logical enforcement Point like Amazon",
    "start": "52640",
    "end": "55399"
  },
  {
    "text": "API Gateway can call Amazon verified",
    "start": "55399",
    "end": "58239"
  },
  {
    "text": "permissions to determine if a user can",
    "start": "58239",
    "end": "61680"
  },
  {
    "text": "access to a",
    "start": "61680",
    "end": "63479"
  },
  {
    "text": "resource verified permissions can check",
    "start": "63479",
    "end": "66400"
  },
  {
    "text": "a user's access rights based on the",
    "start": "66400",
    "end": "69159"
  },
  {
    "text": "policies in its policy story for example",
    "start": "69159",
    "end": "73000"
  },
  {
    "text": "in a banking application the application",
    "start": "73000",
    "end": "75640"
  },
  {
    "text": "would call Amazon verified permissions",
    "start": "75640",
    "end": "78320"
  },
  {
    "text": "every time when the user withdraws money",
    "start": "78320",
    "end": "80479"
  },
  {
    "text": "to ensure that the user is authorized to",
    "start": "80479",
    "end": "82880"
  },
  {
    "text": "take that",
    "start": "82880",
    "end": "84439"
  },
  {
    "text": "action let's have a look at the end to",
    "start": "84439",
    "end": "87000"
  },
  {
    "text": "end architecture flow to understand how",
    "start": "87000",
    "end": "89280"
  },
  {
    "text": "verified perm permissions accurates at",
    "start": "89280",
    "end": "91200"
  },
  {
    "text": "TR time for example serverless is a",
    "start": "91200",
    "end": "94880"
  },
  {
    "text": "common pattern in this diagram we deploy",
    "start": "94880",
    "end": "98079"
  },
  {
    "text": "an application using any open ID connect",
    "start": "98079",
    "end": "100360"
  },
  {
    "text": "provider as the identity provider a user",
    "start": "100360",
    "end": "104200"
  },
  {
    "text": "logs in locally of affiliation and the",
    "start": "104200",
    "end": "107799"
  },
  {
    "text": "identity provider generates custom",
    "start": "107799",
    "end": "110680"
  },
  {
    "text": "tokens as you can see the token can",
    "start": "110680",
    "end": "113439"
  },
  {
    "text": "contain different claim including a",
    "start": "113439",
    "end": "116079"
  },
  {
    "text": "group representing the user's role with",
    "start": "116079",
    "end": "119439"
  },
  {
    "text": "access or identity token the user can",
    "start": "119439",
    "end": "123479"
  },
  {
    "text": "request application in points the",
    "start": "123479",
    "end": "126439"
  },
  {
    "text": "browser or application sends the token",
    "start": "126439",
    "end": "129959"
  },
  {
    "text": "to the API Gateway API Gateway serves as",
    "start": "129959",
    "end": "133200"
  },
  {
    "text": "a policy enforcement point it stops the",
    "start": "133200",
    "end": "136760"
  },
  {
    "text": "request and executes a custom L",
    "start": "136760",
    "end": "139840"
  },
  {
    "text": "authorizer the authorizer performs the",
    "start": "139840",
    "end": "142760"
  },
  {
    "text": "is authorized to with stalking call to",
    "start": "142760",
    "end": "145200"
  },
  {
    "text": "verified permissions for a policy",
    "start": "145200",
    "end": "148120"
  },
  {
    "text": "decision Amazon verifi permissions",
    "start": "148120",
    "end": "151239"
  },
  {
    "text": "responds with an allow or deny decision",
    "start": "151239",
    "end": "154840"
  },
  {
    "text": "in this instance the decision was",
    "start": "154840",
    "end": "157200"
  },
  {
    "text": "allowed so the request proceeds to the",
    "start": "157200",
    "end": "159800"
  },
  {
    "text": "backend",
    "start": "159800",
    "end": "162200"
  },
  {
    "text": "API verified permissions launched quick",
    "start": "162200",
    "end": "165280"
  },
  {
    "text": "start a stepbystep wizard to walk you",
    "start": "165280",
    "end": "168680"
  },
  {
    "text": "through the setup process and",
    "start": "168680",
    "end": "170680"
  },
  {
    "text": "automatically apply verified permissions",
    "start": "170680",
    "end": "172800"
  },
  {
    "text": "policies to your API gway of resources",
    "start": "172800",
    "end": "176400"
  },
  {
    "text": "we enable role based or group based",
    "start": "176400",
    "end": "179440"
  },
  {
    "text": "access out of the box this covers the",
    "start": "179440",
    "end": "182640"
  },
  {
    "text": "authorization pattern that most builders",
    "start": "182640",
    "end": "185560"
  },
  {
    "text": "start with quick start will",
    "start": "185560",
    "end": "188720"
  },
  {
    "text": "autogenerate all of the components you",
    "start": "188720",
    "end": "191360"
  },
  {
    "text": "need to have an endtoend working",
    "start": "191360",
    "end": "194480"
  },
  {
    "text": "solution a quick start wizard will guide",
    "start": "194480",
    "end": "197200"
  },
  {
    "text": "you through the step-by-step",
    "start": "197200",
    "end": "198599"
  },
  {
    "text": "configuration process we are going to",
    "start": "198599",
    "end": "200840"
  },
  {
    "text": "review this process later in the video",
    "start": "200840",
    "end": "203879"
  },
  {
    "text": "when creating a new policy store in",
    "start": "203879",
    "end": "206000"
  },
  {
    "text": "Amazon verified permissions you can",
    "start": "206000",
    "end": "208040"
  },
  {
    "text": "choose an external open ID connect",
    "start": "208040",
    "end": "210080"
  },
  {
    "text": "provider option and provide its details",
    "start": "210080",
    "end": "213280"
  },
  {
    "text": "to Amazon verified",
    "start": "213280",
    "end": "214760"
  },
  {
    "text": "permissions you select what API and",
    "start": "214760",
    "end": "218000"
  },
  {
    "text": "Stage you want to protect with",
    "start": "218000",
    "end": "220879"
  },
  {
    "text": "authorization Amazon verified",
    "start": "220879",
    "end": "222680"
  },
  {
    "text": "permissions pulls all the required API",
    "start": "222680",
    "end": "225120"
  },
  {
    "text": "Gateway configuration and points and",
    "start": "225120",
    "end": "228040"
  },
  {
    "text": "actions",
    "start": "228040",
    "end": "229680"
  },
  {
    "text": "automatically using graphic user",
    "start": "229680",
    "end": "231680"
  },
  {
    "text": "interface you manually Define actions",
    "start": "231680",
    "end": "234120"
  },
  {
    "text": "allowed for each User Group verifi",
    "start": "234120",
    "end": "237079"
  },
  {
    "text": "permissions create a policy store",
    "start": "237079",
    "end": "238879"
  },
  {
    "text": "containing policy and schema and a",
    "start": "238879",
    "end": "241799"
  },
  {
    "text": "Lambda function that authorizes",
    "start": "241799",
    "end": "244560"
  },
  {
    "text": "request finally Amazon verified",
    "start": "244560",
    "end": "247000"
  },
  {
    "text": "permissions automatically assigns the",
    "start": "247000",
    "end": "249079"
  },
  {
    "text": "new Lambda function as an authorizer to",
    "start": "249079",
    "end": "251760"
  },
  {
    "text": "the API resources that you need to",
    "start": "251760",
    "end": "254760"
  },
  {
    "text": "protect the Lambda function generates",
    "start": "254760",
    "end": "257120"
  },
  {
    "text": "and enforces verified permissions",
    "start": "257120",
    "end": "258680"
  },
  {
    "text": "authorization",
    "start": "258680",
    "end": "260280"
  },
  {
    "text": "requests let's see how to use Amazon",
    "start": "260280",
    "end": "263040"
  },
  {
    "text": "verified permissions with an open it",
    "start": "263040",
    "end": "265360"
  },
  {
    "text": "connect identity provider to protect an",
    "start": "265360",
    "end": "268280"
  },
  {
    "text": "Amazon API Gateway",
    "start": "268280",
    "end": "271320"
  },
  {
    "text": "API you need to preconfig the oidc",
    "start": "271320",
    "end": "274960"
  },
  {
    "text": "identity provider of your choice we are",
    "start": "274960",
    "end": "277280"
  },
  {
    "text": "using key clock in this example create",
    "start": "277280",
    "end": "282560"
  },
  {
    "text": "users for this example I created two",
    "start": "282560",
    "end": "285199"
  },
  {
    "text": "users Alis and Bop create groups and",
    "start": "285199",
    "end": "288360"
  },
  {
    "text": "assign users to the",
    "start": "288360",
    "end": "290759"
  },
  {
    "text": "groups in this example Alis is in the",
    "start": "290759",
    "end": "294400"
  },
  {
    "text": "admin group and supposed to have full",
    "start": "294400",
    "end": "296639"
  },
  {
    "text": "access to the API Bop is in the user",
    "start": "296639",
    "end": "300160"
  },
  {
    "text": "group and supposed to have only read",
    "start": "300160",
    "end": "302560"
  },
  {
    "text": "access to the",
    "start": "302560",
    "end": "303960"
  },
  {
    "text": "API the open ID configuration allows you",
    "start": "303960",
    "end": "307919"
  },
  {
    "text": "to discover all the required values",
    "start": "307919",
    "end": "310320"
  },
  {
    "text": "needed to interact with a open ID",
    "start": "310320",
    "end": "312720"
  },
  {
    "text": "connect",
    "start": "312720",
    "end": "313680"
  },
  {
    "text": "provider create an Amazon API Gateway",
    "start": "313680",
    "end": "316440"
  },
  {
    "text": "API that you want to",
    "start": "316440",
    "end": "318680"
  },
  {
    "text": "protect we're using the pet store API",
    "start": "318680",
    "end": "321800"
  },
  {
    "text": "that is available as an example in the",
    "start": "321800",
    "end": "324080"
  },
  {
    "text": "Amazon API Gateway",
    "start": "324080",
    "end": "326199"
  },
  {
    "text": "console deploy a new stage of the API",
    "start": "326199",
    "end": "330120"
  },
  {
    "text": "that you want to protect we're using the",
    "start": "330120",
    "end": "332720"
  },
  {
    "text": "pro stage in this",
    "start": "332720",
    "end": "334400"
  },
  {
    "text": "example just to reiterate on the use",
    "start": "334400",
    "end": "337120"
  },
  {
    "text": "case our API has get and post methods I",
    "start": "337120",
    "end": "341199"
  },
  {
    "text": "want to secure this API based on the",
    "start": "341199",
    "end": "343479"
  },
  {
    "text": "users group membership admin users",
    "start": "343479",
    "end": "346759"
  },
  {
    "text": "should have full access to the API while",
    "start": "346759",
    "end": "349560"
  },
  {
    "text": "users belonging to the user group should",
    "start": "349560",
    "end": "352160"
  },
  {
    "text": "only have read access I'm going to use",
    "start": "352160",
    "end": "355400"
  },
  {
    "text": "Amazon verified permissions to achieve",
    "start": "355400",
    "end": "358319"
  },
  {
    "text": "this now get to the Amazon veried",
    "start": "358319",
    "end": "361440"
  },
  {
    "text": "permissions Management console click",
    "start": "361440",
    "end": "364319"
  },
  {
    "text": "create policy store in the top",
    "start": "364319",
    "end": "367000"
  },
  {
    "text": "right choose setup with API Gateway and",
    "start": "367000",
    "end": "371479"
  },
  {
    "text": "an identity provider and click",
    "start": "371479",
    "end": "374039"
  },
  {
    "text": "next choose the API that you want to",
    "start": "374039",
    "end": "377160"
  },
  {
    "text": "import actions and resources from in",
    "start": "377160",
    "end": "380599"
  },
  {
    "text": "this case select the pet store",
    "start": "380599",
    "end": "383560"
  },
  {
    "text": "API choose the deployment stage that you",
    "start": "383560",
    "end": "386199"
  },
  {
    "text": "want to import actions and resources",
    "start": "386199",
    "end": "388680"
  },
  {
    "text": "from and in this case we select the pro",
    "start": "388680",
    "end": "392680"
  },
  {
    "text": "stage finally click import API you will",
    "start": "392680",
    "end": "396360"
  },
  {
    "text": "see the map of imported resources and",
    "start": "396360",
    "end": "398400"
  },
  {
    "text": "actions click next choose external",
    "start": "398400",
    "end": "401560"
  },
  {
    "text": "opened connect provider option and",
    "start": "401560",
    "end": "403639"
  },
  {
    "text": "configure the oidc provider details we",
    "start": "403639",
    "end": "407440"
  },
  {
    "text": "need the issuer URL the issuer URL could",
    "start": "407440",
    "end": "410919"
  },
  {
    "text": "be found in the well-known open ID",
    "start": "410919",
    "end": "412840"
  },
  {
    "text": "connected provider configuration in",
    "start": "412840",
    "end": "414960"
  },
  {
    "text": "point token type select the token that",
    "start": "414960",
    "end": "418360"
  },
  {
    "text": "you are passing to a API Gateway in the",
    "start": "418360",
    "end": "421360"
  },
  {
    "text": "authorization header we also need to",
    "start": "421360",
    "end": "424360"
  },
  {
    "text": "define the token claims that map to user",
    "start": "424360",
    "end": "428000"
  },
  {
    "text": "and group entities in the policy store",
    "start": "428000",
    "end": "430520"
  },
  {
    "text": "schema verified permissions uses toen",
    "start": "430520",
    "end": "433160"
  },
  {
    "text": "claims to map to policies in an is",
    "start": "433160",
    "end": "436400"
  },
  {
    "text": "authorized with token",
    "start": "436400",
    "end": "438319"
  },
  {
    "text": "call let's check the content of the",
    "start": "438319",
    "end": "441639"
  },
  {
    "text": "token let's authenticate as Lis copy the",
    "start": "441639",
    "end": "445440"
  },
  {
    "text": "identity token and use an online tool in",
    "start": "445440",
    "end": "448639"
  },
  {
    "text": "order to check the claims in this token",
    "start": "448639",
    "end": "452280"
  },
  {
    "text": "as you can see the token has a sub claim",
    "start": "452280",
    "end": "454879"
  },
  {
    "text": "that identifies the user the group claim",
    "start": "454879",
    "end": "457639"
  },
  {
    "text": "contains the groups that the user",
    "start": "457639",
    "end": "459840"
  },
  {
    "text": "belongs to we're using the groups claim",
    "start": "459840",
    "end": "462400"
  },
  {
    "text": "to define the actions allowed for each",
    "start": "462400",
    "end": "464879"
  },
  {
    "text": "group as you see the groups have slashes",
    "start": "464879",
    "end": "467879"
  },
  {
    "text": "in the beginning your identity provider",
    "start": "467879",
    "end": "470280"
  },
  {
    "text": "May return the groups in a different",
    "start": "470280",
    "end": "472720"
  },
  {
    "text": "format the audience validation is",
    "start": "472720",
    "end": "475120"
  },
  {
    "text": "optional you can configure it if you",
    "start": "475120",
    "end": "477039"
  },
  {
    "text": "want to validate the audience in the",
    "start": "477039",
    "end": "478879"
  },
  {
    "text": "token",
    "start": "478879",
    "end": "480479"
  },
  {
    "text": "you should be validating the audience of",
    "start": "480479",
    "end": "482159"
  },
  {
    "text": "the token to make sure that the token is",
    "start": "482159",
    "end": "484120"
  },
  {
    "text": "intended for your application never",
    "start": "484120",
    "end": "486560"
  },
  {
    "text": "leave the audience validation unchecked",
    "start": "486560",
    "end": "488759"
  },
  {
    "text": "in a production environment since this",
    "start": "488759",
    "end": "491199"
  },
  {
    "text": "is the demo we are skipping this step",
    "start": "491199",
    "end": "494280"
  },
  {
    "text": "it's time to Define actions allowed for",
    "start": "494280",
    "end": "496800"
  },
  {
    "text": "each group we have two groups admin and",
    "start": "496800",
    "end": "500199"
  },
  {
    "text": "user we are allowing all actions for the",
    "start": "500199",
    "end": "502919"
  },
  {
    "text": "admin group and only get actions for the",
    "start": "502919",
    "end": "506120"
  },
  {
    "text": "user group verified permissions create a",
    "start": "506120",
    "end": "509800"
  },
  {
    "text": "policy store and the Lambda function",
    "start": "509800",
    "end": "512080"
  },
  {
    "text": "that authorizes request we need to",
    "start": "512080",
    "end": "515039"
  },
  {
    "text": "assign the new Lambda function as an",
    "start": "515039",
    "end": "517399"
  },
  {
    "text": "authorizer to the API that we need to",
    "start": "517399",
    "end": "520800"
  },
  {
    "text": "protect the function generates and",
    "start": "520800",
    "end": "523039"
  },
  {
    "text": "enforces veried permissions",
    "start": "523039",
    "end": "524600"
  },
  {
    "text": "authorization",
    "start": "524600",
    "end": "526120"
  },
  {
    "text": "requests we are choosing now to make",
    "start": "526120",
    "end": "528440"
  },
  {
    "text": "Amazon verified permissions to attach",
    "start": "528440",
    "end": "530519"
  },
  {
    "text": "the authorizer to the API immediately",
    "start": "530519",
    "end": "533320"
  },
  {
    "text": "click create policy store the resources",
    "start": "533320",
    "end": "536360"
  },
  {
    "text": "are deployed using AWS Cloud information",
    "start": "536360",
    "end": "539480"
  },
  {
    "text": "you can see the status of the deployment",
    "start": "539480",
    "end": "542160"
  },
  {
    "text": "in the cloud formation",
    "start": "542160",
    "end": "544120"
  },
  {
    "text": "conso once the deployment is complete",
    "start": "544120",
    "end": "546880"
  },
  {
    "text": "let's check what was created for",
    "start": "546880",
    "end": "549160"
  },
  {
    "text": "us now weate to the Amazon verified",
    "start": "549160",
    "end": "552279"
  },
  {
    "text": "permissions",
    "start": "552279",
    "end": "553320"
  },
  {
    "text": "counil you can see that a policy store",
    "start": "553320",
    "end": "556040"
  },
  {
    "text": "is created it has two policies one for",
    "start": "556040",
    "end": "559480"
  },
  {
    "text": "the admin group and one for the user",
    "start": "559480",
    "end": "562680"
  },
  {
    "text": "group each policy defines the principle",
    "start": "562680",
    "end": "566399"
  },
  {
    "text": "user group and the actions allowed",
    "start": "566399",
    "end": "570200"
  },
  {
    "text": "you can also see what that a policy",
    "start": "570200",
    "end": "572519"
  },
  {
    "text": "schema is created it defines the",
    "start": "572519",
    "end": "575279"
  },
  {
    "text": "relationship between entities such as",
    "start": "575279",
    "end": "577600"
  },
  {
    "text": "principles actions and",
    "start": "577600",
    "end": "580279"
  },
  {
    "text": "resources let's check the Amazon API",
    "start": "580279",
    "end": "583440"
  },
  {
    "text": "Gateway resources and make sure that a",
    "start": "583440",
    "end": "585680"
  },
  {
    "text": "Lambda authorizer is attached to the API",
    "start": "585680",
    "end": "588680"
  },
  {
    "text": "that we want to protect as you can see",
    "start": "588680",
    "end": "591959"
  },
  {
    "text": "the authorizer is attached to every",
    "start": "591959",
    "end": "593920"
  },
  {
    "text": "method of the API but options",
    "start": "593920",
    "end": "599160"
  },
  {
    "text": "Let's test our",
    "start": "599839",
    "end": "601680"
  },
  {
    "text": "configuration let's get the API Gateway",
    "start": "601680",
    "end": "604279"
  },
  {
    "text": "URL of the pet store API I weate to the",
    "start": "604279",
    "end": "607519"
  },
  {
    "text": "Amazon API Gateway console and check the",
    "start": "607519",
    "end": "610399"
  },
  {
    "text": "stages copy the invoke URL of the pro",
    "start": "610399",
    "end": "614399"
  },
  {
    "text": "stage open Postman let's configure the",
    "start": "614399",
    "end": "617760"
  },
  {
    "text": "authorization for the request navigate",
    "start": "617760",
    "end": "620040"
  },
  {
    "text": "to the authorization Tab and select the",
    "start": "620040",
    "end": "622200"
  },
  {
    "text": "allos to point0",
    "start": "622200",
    "end": "624959"
  },
  {
    "text": "type as you can see the authorization",
    "start": "624959",
    "end": "628240"
  },
  {
    "text": "data will be passed in the authorization",
    "start": "628240",
    "end": "631200"
  },
  {
    "text": "header of the HTTP request the bearer",
    "start": "631200",
    "end": "634279"
  },
  {
    "text": "header prefix is added automatically by",
    "start": "634279",
    "end": "637399"
  },
  {
    "text": "Postman before the actual value of the",
    "start": "637399",
    "end": "640240"
  },
  {
    "text": "token choose the token name of your",
    "start": "640240",
    "end": "644399"
  },
  {
    "text": "choice let's complete the configuration",
    "start": "644399",
    "end": "647519"
  },
  {
    "text": "the grand type is authorization",
    "start": "647519",
    "end": "651480"
  },
  {
    "text": "code the all URL is the authorization",
    "start": "651480",
    "end": "654959"
  },
  {
    "text": "end point of the open ID connect",
    "start": "654959",
    "end": "658040"
  },
  {
    "text": "provider the access token URL is a token",
    "start": "658040",
    "end": "661560"
  },
  {
    "text": "end point of the opened connect",
    "start": "661560",
    "end": "665360"
  },
  {
    "text": "provider the client ID and client secret",
    "start": "667440",
    "end": "670440"
  },
  {
    "text": "are the client credentials that you",
    "start": "670440",
    "end": "672560"
  },
  {
    "text": "created in the open ID connect provider",
    "start": "672560",
    "end": "675600"
  },
  {
    "text": "the scope is the scope that you want to",
    "start": "675600",
    "end": "677839"
  },
  {
    "text": "request the Callback URL is a URL that",
    "start": "677839",
    "end": "681040"
  },
  {
    "text": "the open ID connect provider will",
    "start": "681040",
    "end": "683079"
  },
  {
    "text": "redirect to after the user authenticates",
    "start": "683079",
    "end": "686959"
  },
  {
    "text": "we using the postman callback URL click",
    "start": "686959",
    "end": "690079"
  },
  {
    "text": "get new access token Postman will open a",
    "start": "690079",
    "end": "693440"
  },
  {
    "text": "new window to authenticate with the open",
    "start": "693440",
    "end": "695760"
  },
  {
    "text": "Ed connect provider enter the username",
    "start": "695760",
    "end": "698519"
  },
  {
    "text": "and password of the user that you want",
    "start": "698519",
    "end": "700760"
  },
  {
    "text": "to authenticate as Postman will redirect",
    "start": "700760",
    "end": "704240"
  },
  {
    "text": "you to the postman call back URL with",
    "start": "704240",
    "end": "706800"
  },
  {
    "text": "the authorization code Postman will",
    "start": "706800",
    "end": "709519"
  },
  {
    "text": "exchange the authorization code for the",
    "start": "709519",
    "end": "711800"
  },
  {
    "text": "token you can see the token in the",
    "start": "711800",
    "end": "714079"
  },
  {
    "text": "postman",
    "start": "714079",
    "end": "716079"
  },
  {
    "text": "environment let's authenticate as Alis",
    "start": "716079",
    "end": "719800"
  },
  {
    "text": "send get pets request to the API you",
    "start": "719800",
    "end": "724200"
  },
  {
    "text": "should get a 200 okay response with a",
    "start": "724200",
    "end": "727480"
  },
  {
    "text": "list of",
    "start": "727480",
    "end": "728560"
  },
  {
    "text": "pads send a post pets request to the API",
    "start": "728560",
    "end": "734480"
  },
  {
    "text": "you should get a 200 okay response with",
    "start": "734480",
    "end": "736839"
  },
  {
    "text": "the new pad because Ellis is the admin",
    "start": "736839",
    "end": "738839"
  },
  {
    "text": "user and allowed to perform any actions",
    "start": "738839",
    "end": "741560"
  },
  {
    "text": "in the",
    "start": "741560",
    "end": "742440"
  },
  {
    "text": "application now let's authenticate as",
    "start": "742440",
    "end": "744800"
  },
  {
    "text": "Bob send a get pets request to the API",
    "start": "744800",
    "end": "749279"
  },
  {
    "text": "you should get a 200 okay response with",
    "start": "749279",
    "end": "751760"
  },
  {
    "text": "a list of pets because Bob belongs to",
    "start": "751760",
    "end": "754399"
  },
  {
    "text": "user group and user group is allowed to",
    "start": "754399",
    "end": "758160"
  },
  {
    "text": "perform get requests now send a post",
    "start": "758160",
    "end": "761839"
  },
  {
    "text": "pets request to the API you will see",
    "start": "761839",
    "end": "765440"
  },
  {
    "text": "that request was forbidden because Bob",
    "start": "765440",
    "end": "768199"
  },
  {
    "text": "is not allowed to create new",
    "start": "768199",
    "end": "771480"
  },
  {
    "text": "pets with the announcement of quick",
    "start": "771480",
    "end": "773839"
  },
  {
    "text": "start for open a connect we want to give",
    "start": "773839",
    "end": "776240"
  },
  {
    "text": "a quick highlight to our partners this",
    "start": "776240",
    "end": "778880"
  },
  {
    "text": "allow allows you to bring your own",
    "start": "778880",
    "end": "781000"
  },
  {
    "text": "identity to AWS and leave the last mile",
    "start": "781000",
    "end": "784720"
  },
  {
    "text": "of authorization integration to",
    "start": "784720",
    "end": "787560"
  },
  {
    "text": "us this feature works with standard open",
    "start": "787560",
    "end": "790680"
  },
  {
    "text": "connect identity providers and we are",
    "start": "790680",
    "end": "793120"
  },
  {
    "text": "excited to announce that three of the",
    "start": "793120",
    "end": "795160"
  },
  {
    "text": "top identity providers cyber art OCTA",
    "start": "795160",
    "end": "797959"
  },
  {
    "text": "and transman security have partnered",
    "start": "797959",
    "end": "800880"
  },
  {
    "text": "with us for lunch and highlighted how",
    "start": "800880",
    "end": "803680"
  },
  {
    "text": "their identity provider works with this",
    "start": "803680",
    "end": "807680"
  },
  {
    "text": "feature you can find more information",
    "start": "807680",
    "end": "810560"
  },
  {
    "text": "about Amazon verified permissions by",
    "start": "810560",
    "end": "813040"
  },
  {
    "text": "following these",
    "start": "813040",
    "end": "814680"
  },
  {
    "text": "links thank you",
    "start": "814680",
    "end": "818880"
  }
]