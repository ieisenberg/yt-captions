[
  {
    "start": "0",
    "end": "165000"
  },
  {
    "text": "all right welcome back we are here with episode 7 of database deep dive today",
    "start": "0",
    "end": "5730"
  },
  {
    "text": "we've got a really amazing topic we're gonna be diving into graph databases with Amazon Neptune but first we've got",
    "start": "5730",
    "end": "12300"
  },
  {
    "text": "an amazing guest with us here Brad bebe bebe bebe yeah all right so Brad",
    "start": "12300",
    "end": "18300"
  },
  {
    "text": "what you do here and your work with you with the Neptune team yeah sure so my",
    "start": "18300",
    "end": "24330"
  },
  {
    "text": "role here is I lead product engineering for Amazon Neptune and you know I've",
    "start": "24330",
    "end": "30090"
  },
  {
    "text": "been involved in this with a service since before it's general availability which was in May of last year and in",
    "start": "30090",
    "end": "36899"
  },
  {
    "text": "general I've been in the graph space for quite a long time and so it's been sort of exciting to see graphs and how",
    "start": "36899",
    "end": "42989"
  },
  {
    "text": "customers use graphs evolve over the years and I think that this is a very interesting time to be in graph because",
    "start": "42989",
    "end": "49890"
  },
  {
    "text": "we're really starting to see customers really see how to use relationships and",
    "start": "49890",
    "end": "55410"
  },
  {
    "text": "how to use relationships to build new applications and create new things and the performance of graph databases is",
    "start": "55410",
    "end": "61800"
  },
  {
    "text": "now there where you really can think about using these things for applications at a broad scale that you",
    "start": "61800",
    "end": "67350"
  },
  {
    "text": "know key whereas before you might have limitations or pieces so awesome and I've been I've hoodwinked my co-hosts",
    "start": "67350",
    "end": "74610"
  },
  {
    "text": "there at the end of the aisle Randall back with us again unfortunately you're stuck with me",
    "start": "74610",
    "end": "80090"
  },
  {
    "text": "so yeah we've got an awesome show lined up for you today brad has a lot with we're gonna talk about with graph",
    "start": "80090",
    "end": "86250"
  },
  {
    "text": "databases but you know where do we start here well I think what we should say is we should set this in the context the",
    "start": "86250",
    "end": "92670"
  },
  {
    "text": "various other databases that we've talked about so for those of you who are joining on the stream live we've been",
    "start": "92670",
    "end": "97950"
  },
  {
    "text": "doing this series for a couple episodes now and we've been taking a lot of questions from the audience and we've also been taking questions from email",
    "start": "97950",
    "end": "104220"
  },
  {
    "text": "all those questions via the email we're gonna get to those in the last maybe 15 minutes of the show here but for the",
    "start": "104220",
    "end": "109979"
  },
  {
    "text": "first person of the first portion of this show what we're gonna do is we're going to talk about graph databases and",
    "start": "109979",
    "end": "115799"
  },
  {
    "text": "talk about Amazon Neptune but any questions that you have you know Brad is the the person he is the expert easy",
    "start": "115799",
    "end": "123240"
  },
  {
    "text": "this is your chance to stump the experts you know so please send your questions",
    "start": "123240",
    "end": "129000"
  },
  {
    "text": "in chat and send them over email we'll be monitoring those throughout the course of this episode with that said maybe we can kind of jump",
    "start": "129000",
    "end": "134870"
  },
  {
    "text": "into why we use graph databases yeah I",
    "start": "134870",
    "end": "140239"
  },
  {
    "text": "mean I think the thing to remember about graph is that you really want to use a graph database when you want to make a",
    "start": "140239",
    "end": "146660"
  },
  {
    "text": "connection or when the primary thing that you're doing in your application is traversing relationships and that's",
    "start": "146660",
    "end": "153560"
  },
  {
    "text": "really when you kind of want to focus on a graph because a graph database optimizes storage and query processing",
    "start": "153560",
    "end": "161780"
  },
  {
    "text": "to be able to traverse those relationships very quickly and easily yeah and so when I think graph I think",
    "start": "161780",
    "end": "168380"
  },
  {
    "start": "165000",
    "end": "165000"
  },
  {
    "text": "in querying graphs I think about these really complex statements that I would need to write for in sequel or in know",
    "start": "168380",
    "end": "174680"
  },
  {
    "text": "sequel and career a bunch of data and filter it down but graph sort of flipped out on its head and say well we",
    "start": "174680",
    "end": "180079"
  },
  {
    "text": "understand that data exists and is very connected out in the wild for certain instances what if we could essentially",
    "start": "180079",
    "end": "185660"
  },
  {
    "text": "query that in a very efficient way in the same way we think about those relationships right that's right I mean at the core a graph is a data model and",
    "start": "185660",
    "end": "193400"
  },
  {
    "text": "it's a data model that consists of nodes and links and the those links make it of",
    "start": "193400",
    "end": "199850"
  },
  {
    "text": "make those relationships sort of first-class entities in the data model so if you think about a relational model",
    "start": "199850",
    "end": "205340"
  },
  {
    "text": "or a key value store you can model those relationships but you have to denormalize the data are used join",
    "start": "205340",
    "end": "211160"
  },
  {
    "text": "tables or other things that I'm sure everybody's familiar with but you're not referring to those relationships directly and in a graph model in a",
    "start": "211160",
    "end": "218359"
  },
  {
    "text": "database that supports a graph model you can refer to them directly and write applications very quickly and easily",
    "start": "218359",
    "end": "223970"
  },
  {
    "text": "over them yeah so for example in the correlational database you just as you get more entities you just have this",
    "start": "223970",
    "end": "229579"
  },
  {
    "text": "exploding sparse data set that just has ones and zeroes to represent relationships but in Neptune it can do",
    "start": "229579",
    "end": "236420"
  },
  {
    "text": "it in a more efficient fashion for example right yeah and many customers build use different ways to try and",
    "start": "236420",
    "end": "242269"
  },
  {
    "text": "model graphs and non graph systems and I think in general the you know the end result is you know often the same is",
    "start": "242269",
    "end": "248720"
  },
  {
    "text": "that it's something that you can do but what you lose is agility and the ability",
    "start": "248720",
    "end": "255650"
  },
  {
    "text": "to create new relationships on the fly and that's really where the power of graphs come from because graphs allow",
    "start": "255650",
    "end": "263000"
  },
  {
    "text": "you to just make relationships between things that you wouldn't have thought of before maybe systems that weren't ever designed to be",
    "start": "263000",
    "end": "270340"
  },
  {
    "text": "related excuse me and so you can do that very easily with the graph database yeah and so for a lot of people that may not be familiar with graph databases they",
    "start": "270340",
    "end": "276910"
  },
  {
    "text": "hear these things like you know if my data is connected or these relationships between different points but what are",
    "start": "276910",
    "end": "282490"
  },
  {
    "text": "tangible examples of like data sets that fulfill this sort of dichotomy of nodes edges and relationships yeah well I",
    "start": "282490",
    "end": "289180"
  },
  {
    "text": "think the thing that many people relate to initially is things like social networks for example I mean most folks",
    "start": "289180",
    "end": "296620"
  },
  {
    "text": "have have some experience with some kind of social networking application and in that model you know that individuals in",
    "start": "296620",
    "end": "302950"
  },
  {
    "text": "the network and their connections are sort of fundamental in a graph and so you know that is one example I think one",
    "start": "302950",
    "end": "309310"
  },
  {
    "text": "of the things that you know we think about the power of relationships if you think about a social network and you",
    "start": "309310",
    "end": "314919"
  },
  {
    "text": "have maybe 10 people and their connections that's sort of interesting but imagine that you have ten thousand",
    "start": "314919",
    "end": "321910"
  },
  {
    "text": "or a hundred thousand or a million or ten million or a billion relationships now you have this pretty rich set of",
    "start": "321910",
    "end": "329080"
  },
  {
    "text": "information and you can traverse it and ask you questions and it can tell you really interesting things and so that's",
    "start": "329080",
    "end": "334960"
  },
  {
    "text": "really where we like to think about you know from in terms of relationships and relationships at scale for graphs and",
    "start": "334960",
    "end": "340450"
  },
  {
    "text": "one of the interesting things for me to learn as I was learning about graph databases was that it's not just the",
    "start": "340450",
    "end": "347020"
  },
  {
    "text": "nodes that have rich data it's also the edges that have very rich data associated with them as well so you know",
    "start": "347020",
    "end": "354160"
  },
  {
    "text": "the edges can contain complex data in them and it's not just you know the the node is is not the only object that is",
    "start": "354160",
    "end": "361030"
  },
  {
    "text": "able to be queried that's right you can in a graph model you can have essentially properties or statements",
    "start": "361030",
    "end": "368320"
  },
  {
    "text": "about both edges and nodes and you know the right way to do it really depends on your use case I mean sometimes it makes",
    "start": "368320",
    "end": "375460"
  },
  {
    "text": "sense to put those kind of attributes onto edges sometimes it's you may want to model them as nodes it really depends",
    "start": "375460",
    "end": "382180"
  },
  {
    "text": "on the questions that you're going to ask and you like almost every database system we you know recommend you start",
    "start": "382180",
    "end": "388389"
  },
  {
    "text": "with the question and then you know once you understand the questions that you want to ask a lot of that will drive the",
    "start": "388389",
    "end": "394120"
  },
  {
    "text": "data model how you want to look at things Smee we can step through some of these slides here and see what a social you know how",
    "start": "394120",
    "end": "401540"
  },
  {
    "text": "we might model these things kind of walk through some of the vocabulary and walk through some of the use cases as well as maybe some customer examples yeah I mean",
    "start": "401540",
    "end": "409490"
  },
  {
    "text": "so the one thing to take away from the day is is you know if they if your question is when should I use the graph",
    "start": "409490",
    "end": "414500"
  },
  {
    "text": "database it's when I have relationships and I want to traverse them and that's really the core thing to remember and",
    "start": "414500",
    "end": "419600"
  },
  {
    "text": "that's when a graph database is really the right the right choice the thing that is just really cool about graphs is",
    "start": "419600",
    "end": "426020"
  },
  {
    "start": "424000",
    "end": "424000"
  },
  {
    "text": "how broad the use cases in the application space is you can go from",
    "start": "426020",
    "end": "432280"
  },
  {
    "text": "talking about social networking to helping people find information to",
    "start": "432280",
    "end": "437440"
  },
  {
    "text": "protecting your network to understanding how to link health care systems to discovering new drugs to making",
    "start": "437440",
    "end": "444200"
  },
  {
    "text": "recommendations all in a single day or you know in some cases an hour and so it's it's really exciting to see all the",
    "start": "444200",
    "end": "450710"
  },
  {
    "text": "different places where graph data models are important and they show up and so you know these are the six that we have",
    "start": "450710",
    "end": "457310"
  },
  {
    "text": "here are really you know the six that we really focus on from a product perspective but there are you know a",
    "start": "457310",
    "end": "463250"
  },
  {
    "text": "broad set of different applications and I think that's a that's a power of graph it's it's also a challenge for a lot of",
    "start": "463250",
    "end": "468890"
  },
  {
    "text": "customers to get started because the many of the solutions that people have used successfully there may be a little",
    "start": "468890",
    "end": "475370"
  },
  {
    "text": "different than you see as a user of graph and so you want some help or you're interested in how do I take",
    "start": "475370",
    "end": "480620"
  },
  {
    "text": "something that's been successful and apply it in your own use case I mean even social networking that's a pretty",
    "start": "480620",
    "end": "486800"
  },
  {
    "text": "broad area of recommendations is super broad knowledge gaps are super broad so you see that those are the six that we",
    "start": "486800",
    "end": "493400"
  },
  {
    "text": "focus on but when I when I look at these you know there's a huge portion of right these are really as you say these are",
    "start": "493400",
    "end": "499640"
  },
  {
    "text": "really broad sets and you know even in in any one of them you can find different applications that are of both",
    "start": "499640",
    "end": "506060"
  },
  {
    "text": "a different nature in terms of you know maybe they're interactive access patterns or maybe they're more analytic access patterns you can find them you",
    "start": "506060",
    "end": "513440"
  },
  {
    "text": "know that have very different types of data and so there's a there's a broad diversity of the kinds of use cases and",
    "start": "513440",
    "end": "519349"
  },
  {
    "text": "things that you can do there yeah I mean even on the topic of life sciences I think you just mentioned drug discovery",
    "start": "519349",
    "end": "524420"
  },
  {
    "text": "for example sharam but then also I know that you genes exist the genotype and",
    "start": "524420",
    "end": "530379"
  },
  {
    "text": "phenotype exist sort of as a graph relationship and so understanding what genes are mapping to certain outputs is",
    "start": "530379",
    "end": "536139"
  },
  {
    "text": "a huge graph problem probably better word I'm being able to set that up in a graph database enables computation on",
    "start": "536139",
    "end": "542410"
  },
  {
    "text": "top of that to be able to make that analysis possible yeah you can't reverse the relationships between the gene",
    "start": "542410",
    "end": "548079"
  },
  {
    "text": "expressions you can ask questions about patterns of them I mean and you know even in the health care and life",
    "start": "548079",
    "end": "553509"
  },
  {
    "text": "sciences you have these things like looking at genomics and then you have these things like looking at chemical",
    "start": "553509",
    "end": "559029"
  },
  {
    "text": "compounds in protein pathways but then you also have integrating hospital systems and you know how do I make a",
    "start": "559029",
    "end": "564879"
  },
  {
    "text": "patient record that's coming from lots of different places look in some way canonicalize so that I can query it",
    "start": "564879",
    "end": "571360"
  },
  {
    "text": "easily and so you know Eve every one of these you know domains has those kinds of examples that really run the gamut",
    "start": "571360",
    "end": "577779"
  },
  {
    "text": "yes so the big takeaway here is that graphs are kind of everywhere we may be used to seeing them but we may not be",
    "start": "577779",
    "end": "583059"
  },
  {
    "text": "used to thinking about them in the graph data set sort of model I think that's absolutely right I think that you know",
    "start": "583059",
    "end": "589149"
  },
  {
    "text": "the way that we look at graph is that the number of customers that today know",
    "start": "589149",
    "end": "596290"
  },
  {
    "text": "they're you they want to use the graph database or are using a graph database is relatively small versus the number of",
    "start": "596290",
    "end": "603160"
  },
  {
    "text": "people that have a graph problem or could benefit from processing relationships wonderful so maybe by",
    "start": "603160",
    "end": "610720"
  },
  {
    "text": "watching this show they they'll figure out how they can get started with the multiverse that gap absolutely so if I",
    "start": "610720",
    "end": "616509"
  },
  {
    "text": "wanted to for instance query recommendations or figure out you know",
    "start": "616509",
    "end": "621990"
  },
  {
    "text": "what's the the the Netflix use case right is like oh this person watch this movie and this person you know how do we",
    "start": "621990",
    "end": "628569"
  },
  {
    "text": "recommend other things to people and that is that a good kind of graph problem recommendation certainly can be",
    "start": "628569",
    "end": "635339"
  },
  {
    "text": "sometimes I stay away from recommendation a little bit because there are many ways to make",
    "start": "635339",
    "end": "642220"
  },
  {
    "text": "recommendations deep learning and some of them are graph based and graph can be a great way to do it if the things you",
    "start": "642220",
    "end": "647470"
  },
  {
    "text": "want to recommend are based on relationships but there's lots of other ways that people make recommendations so",
    "start": "647470",
    "end": "653649"
  },
  {
    "text": "it's a comment it is a good graph use case but it's one that also has other other use cases associated with it I think that's a great example of how in",
    "start": "653649",
    "end": "660290"
  },
  {
    "text": "the same way graphs can be applicable in many subject domains like even a specific use case like driving",
    "start": "660290",
    "end": "665509"
  },
  {
    "text": "personalizations can have many different types of technology that can be optimal depending on on the you know the",
    "start": "665509",
    "end": "672110"
  },
  {
    "text": "situation at hand absolutely and as you guys talked about before we really you",
    "start": "672110",
    "end": "677179"
  },
  {
    "text": "know believe that it's kind of looking at what's the right purpose-built solution for which part of your application so you know you take your",
    "start": "677179",
    "end": "682339"
  },
  {
    "text": "applications who to decompose it down and you know graph is it has an important place in that in that process",
    "start": "682339",
    "end": "687730"
  },
  {
    "text": "so let's let's continue on here and see if we can't see a couple examples of you",
    "start": "687730",
    "end": "694579"
  },
  {
    "text": "know this in practice yeah so you were asking about relationships and so I have a quick example that's sort of a",
    "start": "694579",
    "end": "700610"
  },
  {
    "text": "conceptual one you know on a relationship a recommendation piece and so you know suppose that you know I",
    "start": "700610",
    "end": "706549"
  },
  {
    "text": "start with a little bit of a social network you can see that you know Bill knows Alice and Bob here and then you",
    "start": "706549",
    "end": "712459"
  },
  {
    "text": "know I mean I'll use the power graph I'm going to bring in another data set that I have so I'm gonna bring in some",
    "start": "712459",
    "end": "717799"
  },
  {
    "text": "product purchase history so I can also see that you know Dave purchased this product is that bill and Bob and you",
    "start": "717799",
    "end": "723889"
  },
  {
    "text": "know remember that you know one system had my social networks and one system of my products and so I'm building",
    "start": "723889",
    "end": "729709"
  },
  {
    "text": "something new that makes relationships between them and I also have some shared",
    "start": "729709",
    "end": "735019"
  },
  {
    "text": "interest information so I can see that Bob follows sports and cerebellum follows sports and by using a technique",
    "start": "735019",
    "end": "742189"
  },
  {
    "text": "that you call triadic closure which is basically a triangle is the smallest",
    "start": "742189",
    "end": "747199"
  },
  {
    "text": "fully connected subgraph in a graph by finding edges that I can create relationships I can create to complete",
    "start": "747199",
    "end": "754459"
  },
  {
    "text": "triangles I can do the start of a recommendation engine so I can for example say that you know Sarah might",
    "start": "754459",
    "end": "760850"
  },
  {
    "text": "want to purchase this product because people who also follow sports and purchase the product and again if you",
    "start": "760850",
    "end": "767239"
  },
  {
    "text": "look back to that social side you can see that there are two people who have a friend in common but don't yet have a",
    "start": "767239",
    "end": "772999"
  },
  {
    "text": "relationship and so again that would be a candidate for a recommendation example",
    "start": "772999",
    "end": "780249"
  },
  {
    "text": "now I don't want you to think that graphs are all about social networks and recommendations because they're really",
    "start": "780860",
    "end": "786329"
  },
  {
    "start": "782000",
    "end": "782000"
  },
  {
    "text": "not you know that's just one important use case and so one something that we see quite a lot of is something that's",
    "start": "786329",
    "end": "792300"
  },
  {
    "text": "called a knowledge graph and a knowledge graph uses a graph model to encode",
    "start": "792300",
    "end": "798600"
  },
  {
    "text": "information to represent things that you know and how they're related and then",
    "start": "798600",
    "end": "803610"
  },
  {
    "text": "you can use knowledge graphs to help people find things to help people answer questions so for example Amazon Alexa",
    "start": "803610",
    "end": "810749"
  },
  {
    "text": "uses Neptune as part of the technology to implement their knowledge graph Suites we have you know other you know",
    "start": "810749",
    "end": "816990"
  },
  {
    "text": "customers that are building knowledge graphs and so this is a quick example of a knowledge graph application and it's",
    "start": "816990",
    "end": "823290"
  },
  {
    "text": "taken from the World Wide Web Consortium or the w3c sort of primer on knowledge graphs and we start with a very famous",
    "start": "823290",
    "end": "830730"
  },
  {
    "text": "piece of artwork the Mona Lisa and where it's located a very famous museum the Louvre and we also have some information",
    "start": "830730",
    "end": "836939"
  },
  {
    "text": "about you know the artist and where it was was presented and again in that",
    "start": "836939",
    "end": "842370"
  },
  {
    "text": "theme of linking information from different sources we also have some social network and shared interest",
    "start": "842370",
    "end": "847829"
  },
  {
    "text": "information so we can see that Bob is interested in the Mona Lisa bob has some friends there's some biographical",
    "start": "847829",
    "end": "853679"
  },
  {
    "text": "information and again we'll now add in some reference information so we know",
    "start": "853679",
    "end": "859709"
  },
  {
    "text": "some facts we know where the Eiffel Tower is located we have some travel history we know that we're Alice's",
    "start": "859709",
    "end": "866069"
  },
  {
    "text": "traveled and that they visited the Eiffel Tower and that the Eiffel Tower is in Paris and by bringing all these",
    "start": "866069",
    "end": "871649"
  },
  {
    "text": "things together and encoding them in a graph form we can now start to answer",
    "start": "871649",
    "end": "877079"
  },
  {
    "text": "more sophisticated questions so we can say things like who painted the Mona Lisa or what museum should Alice visit",
    "start": "877079",
    "end": "885540"
  },
  {
    "text": "well in Paris or what other artists have paintings in the Louvre and so this kind",
    "start": "885540",
    "end": "891660"
  },
  {
    "text": "of knowledge graph approach is a really powerful way to do a lot of different things but it's all starts with",
    "start": "891660",
    "end": "896720"
  },
  {
    "text": "representing things you know or a domain of information that you care about in a way that you can ask questions over it",
    "start": "896720",
    "end": "903540"
  },
  {
    "text": "and that's fundamentally kind of what we're doing here there was a I was trying to find this not too long ago",
    "start": "903540",
    "end": "908879"
  },
  {
    "text": "there we used to have this data set I think it was the University of Sheffield or somebody that created it and it was",
    "start": "908879",
    "end": "914290"
  },
  {
    "text": "this huge knowledge graph that was kind of scraped from Wikipedia and it linked all those nodes together and I I don't",
    "start": "914290",
    "end": "921100"
  },
  {
    "text": "see it in our open datasets anymore but we do have the software heritage graph dataset now which is but if you've never",
    "start": "921100",
    "end": "927580"
  },
  {
    "text": "seen this before it's it's basically version control history from a bunch of",
    "start": "927580",
    "end": "933100"
  },
  {
    "text": "different projects everything from like the Linux kernel to a bunch of stuff on github and that's a fun little database",
    "start": "933100",
    "end": "940120"
  },
  {
    "text": "to play around with and it's all on s3 but are there any kind of cool open",
    "start": "940120",
    "end": "945190"
  },
  {
    "text": "datasets that you know of for knowledge graphs I mean there's quite a lot of them I think that you know the place",
    "start": "945190",
    "end": "951430"
  },
  {
    "text": "that a lot of customers start in general is you know you mentioned Wikipedia there's an effort within Wikipedia",
    "start": "951430",
    "end": "957910"
  },
  {
    "text": "called wiki data wiki data manages the structured information that they're",
    "start": "957910",
    "end": "963580"
  },
  {
    "text": "owned by the Wikimedia Foundation and wiki data a couple of years ago stood up",
    "start": "963580",
    "end": "969160"
  },
  {
    "text": "a wiki did an endpoint and they have a query service and so they represent all of this structured data as a graph you",
    "start": "969160",
    "end": "975460"
  },
  {
    "text": "can issue sparkl queries over it and you can answer questions you know vary with",
    "start": "975460",
    "end": "981340"
  },
  {
    "text": "anything that wiki data knows over it so that's something that is a lot of customers use a lot a lot of them boot",
    "start": "981340",
    "end": "987010"
  },
  {
    "text": "used to bootstrap different knowledge graph informations if it's in sort of a consumer or public domain space piece",
    "start": "987010",
    "end": "993280"
  },
  {
    "text": "and it's it of course it's always fun if you're at you're out and you you want to answer a question or you need to settle some sort of dispute between in two",
    "start": "993280",
    "end": "1000390"
  },
  {
    "text": "individuals it's effective way to do that as well if you're skilled at writing Sparkle you can go and say okay",
    "start": "1000390",
    "end": "1006210"
  },
  {
    "text": "well did this many more references to this so Andy you should actually I encourage everyone to check out sort of",
    "start": "1006210",
    "end": "1012420"
  },
  {
    "text": "query that wiki data that work they have a handy sort of sparkle editor that you can you can you can use to edit queries",
    "start": "1012420",
    "end": "1018600"
  },
  {
    "text": "and they have a lot of example queries and so it may it's it's quite a nice easy way for you know for you to explore",
    "start": "1018600",
    "end": "1024329"
  },
  {
    "text": "the wiki data and also get a sense of you know what's a knowledge graph and how can a graph representation help you",
    "start": "1024329",
    "end": "1029939"
  },
  {
    "text": "find things and build applications over it I think another thing to mention is that obviously there's a large number of",
    "start": "1029940",
    "end": "1035250"
  },
  {
    "text": "great open datasets that are out there but yeah this isn't particularly difficult to get up and start building",
    "start": "1035250",
    "end": "1040560"
  },
  {
    "text": "your own graph database internally and you can conglomerate different data sources that you already have from their different database",
    "start": "1040560",
    "end": "1047280"
  },
  {
    "text": "formats as long as you have you know some level of continuity between them such that there's valuable relationships",
    "start": "1047280",
    "end": "1052679"
  },
  {
    "text": "there right so a great example here is pieces of art and users and locations obviously not every company has those as",
    "start": "1052679",
    "end": "1060480"
  },
  {
    "text": "their subjects but you know with one common thread between the different relationships you can start to answer",
    "start": "1060480",
    "end": "1065790"
  },
  {
    "text": "these very complex questions or build functionality based on those queries just by using the data you already have",
    "start": "1065790",
    "end": "1071250"
  },
  {
    "text": "yeah absolutely and you know there's different there's different graph data models as well and you know one of the",
    "start": "1071250",
    "end": "1077250"
  },
  {
    "text": "things that is you know a strength of certainly the resource description framework or the RDF model is that it",
    "start": "1077250",
    "end": "1084179"
  },
  {
    "text": "has a very strong sense of identity and so each piece of information has a what",
    "start": "1084179",
    "end": "1089790"
  },
  {
    "text": "looks like a URL which is actually called an IRI or an internationalized resource identifier that to uniquely",
    "start": "1089790",
    "end": "1095130"
  },
  {
    "text": "identify it so that really facilitates these kinds of use cases where you you know maybe there's publicly available",
    "start": "1095130",
    "end": "1100410"
  },
  {
    "text": "information you want to build some things on top of it but having that identity allows you to link between",
    "start": "1100410",
    "end": "1106620"
  },
  {
    "text": "these datasets so you can have multiple disparate data sets and different locations and even hosts by different",
    "start": "1106620",
    "end": "1113610"
  },
  {
    "text": "customers and you can pull them together in the same schema by using that IRI absolutely present I I arrive IRA IRA",
    "start": "1113610",
    "end": "1121080"
  },
  {
    "text": "and that's one of the things that I learned we have a customer Siemens corporate technology that spoke with me",
    "start": "1121080",
    "end": "1126330"
  },
  {
    "text": "on stage in Berlin yeah and they talked about how they basically have a hundred",
    "start": "1126330",
    "end": "1132870"
  },
  {
    "text": "and forty different canonical sources of truth for all of their different",
    "start": "1132870",
    "end": "1138090"
  },
  {
    "text": "turbines and and different things that they manage in the field and they bring all of that in to Neptune in order to",
    "start": "1138090",
    "end": "1145080"
  },
  {
    "text": "query and to do everything from preventative maintenance to supply chain",
    "start": "1145080",
    "end": "1151040"
  },
  {
    "text": "prediction to forecasting for how many new turbines are going to need to build",
    "start": "1151040",
    "end": "1157380"
  },
  {
    "text": "and stuff like that and they use those IRI is in order to link all that kind of",
    "start": "1157380",
    "end": "1163820"
  },
  {
    "text": "commonly referenced information together from all these different data sets and I hate XML so working with RDF has never",
    "start": "1163820",
    "end": "1171780"
  },
  {
    "text": "been fun for me but I do see the value in in that kind of",
    "start": "1171780",
    "end": "1177409"
  },
  {
    "text": "format of the the semantic definition of what the data should look like yeah and",
    "start": "1177409",
    "end": "1182659"
  },
  {
    "text": "I was sitting at the back of your talk there I gave a talk later at the memory and the the presenter from Siemens gave",
    "start": "1182659",
    "end": "1189500"
  },
  {
    "text": "a quote that I recall that I use a number time he's like I love graph because it lets me integrate data like",
    "start": "1189500",
    "end": "1194570"
  },
  {
    "text": "crazy and that's when he set up on the stage at Berlin summit and I think that's really true and you know customers that that's what customers",
    "start": "1194570",
    "end": "1200269"
  },
  {
    "text": "want is that they're able to innovate because they can make these relationships and integrate the data",
    "start": "1200269",
    "end": "1205850"
  },
  {
    "text": "very easily and you know the in terms of the XML site you know RDF is a data",
    "start": "1205850",
    "end": "1211309"
  },
  {
    "text": "model so yeah there's there's XML and on XML simulations as well so even if you don't like XML there are some options",
    "start": "1211309",
    "end": "1216710"
  },
  {
    "text": "for you I I would love to learn about those because the only ones I've seen have been like even the wiki data one",
    "start": "1216710",
    "end": "1222590"
  },
  {
    "text": "I'm pretty sure it has this huge XML definition for each article and things like that yeah yeah it's definitely",
    "start": "1222590",
    "end": "1228470"
  },
  {
    "text": "definitely there so mostly because I guess this kind of came about in the time of like XSLT and all the maybe like",
    "start": "1228470",
    "end": "1238639"
  },
  {
    "text": "the the mid 2003 2004 timeframe is when they really started taking off with",
    "start": "1238639",
    "end": "1244129"
  },
  {
    "text": "these kinds of formats of semantic definition of what these things should look like yeah it was actually a little",
    "start": "1244129",
    "end": "1249529"
  },
  {
    "text": "bit before that I was it was in the late 90s they you know they were largely different kinds of metadata management",
    "start": "1249529",
    "end": "1256299"
  },
  {
    "text": "applications and sort of in the late 90s the the US DARPA the Defense Advanced",
    "start": "1256299",
    "end": "1262789"
  },
  {
    "text": "Research Project agency started something called damodar puzzle agent Marco Dan'l DARPA agent markup language",
    "start": "1262789",
    "end": "1268940"
  },
  {
    "text": "and then the Europeans had something called oil which was an ontology interchange I remember that and those",
    "start": "1268940",
    "end": "1274129"
  },
  {
    "text": "sort of came together about 2000 and you know became you know what was now called",
    "start": "1274129",
    "end": "1279649"
  },
  {
    "text": "owl the ontology web language and that was built on into the data model for the resource description framework so you",
    "start": "1279649",
    "end": "1285860"
  },
  {
    "text": "know a lot of the legacy of somewhat some of that side of the stack you know dates back to there but there really are thinking about you know at",
    "start": "1285860",
    "end": "1291350"
  },
  {
    "text": "that time was XML was all the range and so you know there were lots of serialization there but I think we've",
    "start": "1291350",
    "end": "1296419"
  },
  {
    "text": "we've learned that XML could be verbose and yeah we've moved beyond that",
    "start": "1296419",
    "end": "1301880"
  },
  {
    "text": "I just I do this every episode I'm so sorry but I want to draw an illusion",
    "start": "1301880",
    "end": "1307730"
  },
  {
    "text": "back to the the 1990 Oracle at the 1990 Postgres design paper in which they",
    "start": "1307730",
    "end": "1313010"
  },
  {
    "text": "originally laid out the the idea of how graph models could be represented in in",
    "start": "1313010",
    "end": "1318350"
  },
  {
    "text": "relational databases and I'm just gonna go ahead and say again the people who made Postgres Stonebreaker and all those",
    "start": "1318350",
    "end": "1325370"
  },
  {
    "text": "other people for a way ahead of time they were tuned in they knew what was gonna happen so Postgres plus plus a",
    "start": "1325370",
    "end": "1334630"
  },
  {
    "text": "general comment but yeah I mean so I think that's a great like segue into talking a little bit about the the",
    "start": "1334720",
    "end": "1340970"
  },
  {
    "text": "interface for interacting with this right so that's that's a ton on like the serialization and how that data is",
    "start": "1340970",
    "end": "1346550"
  },
  {
    "text": "stored semantically and how ultimately we converge on some sort of standard and",
    "start": "1346550",
    "end": "1352490"
  },
  {
    "text": "RDF is now what we work with today but then how you choose to query that",
    "start": "1352490",
    "end": "1357620"
  },
  {
    "text": "because it's an entirely different ballgame right there there are different optimizations that you may want to make",
    "start": "1357620",
    "end": "1362690"
  },
  {
    "text": "with respect to that query so you know like what are examples of customers that are using this oh yeah yeah I actually",
    "start": "1362690",
    "end": "1369590"
  },
  {
    "text": "want to go back to the graph model question a little bit yeah it's really important and so there's really there's",
    "start": "1369590",
    "end": "1375800"
  },
  {
    "text": "just two leading models for graph we talked a little bit about RDF today but the other model is something called",
    "start": "1375800",
    "end": "1381860"
  },
  {
    "text": "property graph and in fact you know in some cases many more customers may be familiar with property graph as a graph",
    "start": "1381860",
    "end": "1387620"
  },
  {
    "text": "model and they both represent graphs right I think you know property graphs are typically people think of nodes and",
    "start": "1387620",
    "end": "1394670"
  },
  {
    "text": "edges and nodes and edges both have properties and then you know in RDF graphs we talked extensively they sort",
    "start": "1394670",
    "end": "1400970"
  },
  {
    "text": "of have this history and resource description so they have these I our eyes and other things but you know what",
    "start": "1400970",
    "end": "1407150"
  },
  {
    "text": "you know we find is that developers tend to resonate towards property graph you",
    "start": "1407150",
    "end": "1413000"
  },
  {
    "text": "know if you think if you're thinking about coming from a relational database thinking about rows and tables and then",
    "start": "1413000",
    "end": "1418670"
  },
  {
    "text": "going to nodes and edges and and their properties can be a relatively straightforward kind of transition and",
    "start": "1418670",
    "end": "1426080"
  },
  {
    "text": "customers that are really thinking about their data models and so your information architects you know really",
    "start": "1426080",
    "end": "1432840"
  },
  {
    "text": "tend to resonate you know from to the RDF side because it has these standards and ways to represent different information models",
    "start": "1432840",
    "end": "1439679"
  },
  {
    "text": "and I think that what we see increasingly is that you know really",
    "start": "1439679",
    "end": "1445349"
  },
  {
    "text": "customers want both you know customers want the power of being able to relate",
    "start": "1445349",
    "end": "1451080"
  },
  {
    "text": "data together and they want to be able to diverse relationships and so they they really want graph is what they want",
    "start": "1451080",
    "end": "1458549"
  },
  {
    "text": "is that they don't necessarily want property graph or there were already F graphs that they want to be able to build graph applications you know over",
    "start": "1458549",
    "end": "1465330"
  },
  {
    "text": "their data you know quickly and easily so we we increasingly see customers that you know really interested in in in both",
    "start": "1465330",
    "end": "1471720"
  },
  {
    "text": "models it you know to kind of make it graph for me don't don't make it RDF don't make a property graph give me the best of both of them and let me query",
    "start": "1471720",
    "end": "1478499"
  },
  {
    "text": "using the model that matches the data yeah I mean did you choose the best",
    "start": "1478499",
    "end": "1483899"
  },
  {
    "text": "model for your application sometimes that's property ground sometimes that's our GF but you know you have the power to choose and then you",
    "start": "1483899",
    "end": "1490440"
  },
  {
    "text": "know in many cases customers also want to have have the power to go between them okay okay I think that's kind of",
    "start": "1490440",
    "end": "1496200"
  },
  {
    "text": "like one of the biggest themes we found with the show is that like it's not that you can't do it in one form you can you can do it in both typically but you want",
    "start": "1496200",
    "end": "1502769"
  },
  {
    "text": "to optimize again here for your use case and a lot of times that comes down to what is the query that your developer is",
    "start": "1502769",
    "end": "1508559"
  },
  {
    "text": "going to be writing and sometimes you may have different teams or different developers that need to query that graph",
    "start": "1508559",
    "end": "1513599"
  },
  {
    "text": "in different ways right and sometimes you also have you have more of a system",
    "start": "1513599",
    "end": "1519629"
  },
  {
    "text": "approach to it as well so you might have you know like for example in the Siemens use case that they presented at the",
    "start": "1519629",
    "end": "1526229"
  },
  {
    "text": "Berlin Summit they had lots of different sources of data they were using the RDF",
    "start": "1526229",
    "end": "1531479"
  },
  {
    "text": "model to bring them together but then when they want applications people to build applications against that you know",
    "start": "1531479",
    "end": "1538200"
  },
  {
    "text": "often they want the property graph model and so how do you take the power of",
    "start": "1538200",
    "end": "1543479"
  },
  {
    "text": "doing all that alignment you know doing all the hard work about figuring out what this means and what schema and how do I translate that to",
    "start": "1543479",
    "end": "1549890"
  },
  {
    "text": "where to where and then take it in a form that people can really build applications over to very easily so and",
    "start": "1549890",
    "end": "1556820"
  },
  {
    "text": "so the kicker here is that Neptune enables you to use both so Neptune does support both so Neptune enough supports",
    "start": "1556820",
    "end": "1562760"
  },
  {
    "text": "both the property graph model and the RDF model and it so gives you the really the choice of choosing which one is best",
    "start": "1562760",
    "end": "1569330"
  },
  {
    "text": "for you today Neptune does not support interoperability between them so what you can use Neptune for either but your",
    "start": "1569330",
    "end": "1575900"
  },
  {
    "text": "data is essentially separated in between them but we're very interested in hearing kind of use cases and you know",
    "start": "1575900",
    "end": "1582260"
  },
  {
    "text": "where customers want to go between them and want to do both and it's something that we do see as I mentioned their",
    "start": "1582260",
    "end": "1587870"
  },
  {
    "text": "customers wanting to do wonderful so maybe to be really been able to take a",
    "start": "1587870",
    "end": "1593000"
  },
  {
    "text": "look at what these queries of these relationships look like in you know in rdf or in what these physical encoded",
    "start": "1593000",
    "end": "1599120"
  },
  {
    "text": "relationships look like between objects yeah so let me start with a property graph example and this is taken from a",
    "start": "1599120",
    "end": "1606380"
  },
  {
    "start": "1605000",
    "end": "1605000"
  },
  {
    "text": "practical guide to gremlin which if you haven't seen it is an open source Apache 2 license book about using",
    "start": "1606380",
    "end": "1613610"
  },
  {
    "text": "gremlin for full disclosure it's is written by Kelvin Lawrence who's now with us at AWS and so he's on our",
    "start": "1613610",
    "end": "1621860"
  },
  {
    "text": "customer advisory team but you know he's really put together a you know a very good place to get started with the",
    "start": "1621860",
    "end": "1629870"
  },
  {
    "text": "gremlin language and property graphs and the data model that he's chosen probably not unlike you guys because he",
    "start": "1629870",
    "end": "1635810"
  },
  {
    "text": "likes to spend time in airplanes is really looking at airports routes and",
    "start": "1635810",
    "end": "1642010"
  },
  {
    "text": "distances between them and so you know he's the the whole book takes place around this this air routes data set",
    "start": "1642010",
    "end": "1648260"
  },
  {
    "text": "that he's created and it makes publicly available and so this is an example of a",
    "start": "1648260",
    "end": "1653870"
  },
  {
    "text": "graph that we see and we're basically looking at on one hand we can in the",
    "start": "1653870",
    "end": "1660260"
  },
  {
    "text": "middle you can see the graph the things that are the ovals represent your nodes and the the arcs between them",
    "start": "1660260",
    "end": "1666410"
  },
  {
    "text": "representing your edges if you look on the left you can see your node or protects properties and so these are",
    "start": "1666410",
    "end": "1672350"
  },
  {
    "text": "data attributes that are about that node so you can see the you know with the",
    "start": "1672350",
    "end": "1677630"
  },
  {
    "text": "label which is like a type in a property graph that the code the iCal code the",
    "start": "1677630",
    "end": "1682970"
  },
  {
    "text": "name of it the lat/long kinds of things so these are examples of attributes that you might want to store in a graph and",
    "start": "1682970",
    "end": "1688700"
  },
  {
    "text": "then on the right hand side you can see an edge and you can see examples of the edge that you want to have there and so",
    "start": "1688700",
    "end": "1695570"
  },
  {
    "text": "you have the edge has an ID it also has a label and in this case the edge has an attribute which is distance so I have a",
    "start": "1695570",
    "end": "1703460"
  },
  {
    "text": "question here so I'm a huge graph nerd and so when I look at these properties they're kind of non directional like the",
    "start": "1703460",
    "end": "1710870"
  },
  {
    "text": "route regardless of which way you're going would have at least in this example I know planes take different routes sometimes but same amount of",
    "start": "1710870",
    "end": "1717140"
  },
  {
    "text": "miles the label and the idea would be the same now here in this diagram we have directionality for those edges",
    "start": "1717140",
    "end": "1723980"
  },
  {
    "text": "where it's you know that the arrow has a head on one side rather than it being a bi-directional relationship obviously",
    "start": "1723980",
    "end": "1729410"
  },
  {
    "text": "depending on what data you're modeling directionality may or may not be important but how does that work with respect to the property graph for the",
    "start": "1729410",
    "end": "1735500"
  },
  {
    "text": "edges or is that like something that is yeah I mean and so in Neptune and in",
    "start": "1735500",
    "end": "1740929"
  },
  {
    "text": "property graph in RDF the edges are directional so each when you create an edge you have a couple things that it",
    "start": "1740929",
    "end": "1746419"
  },
  {
    "text": "requires so you have to have an identifier this is in property graph you have to have a label which gives it a",
    "start": "1746419",
    "end": "1751580"
  },
  {
    "text": "type in property graph then you have to have a two in a from node and so you know where is the edge going to and",
    "start": "1751580",
    "end": "1757910"
  },
  {
    "text": "where is it coming from you know in the case of property graph that those nodes",
    "start": "1757910",
    "end": "1763250"
  },
  {
    "text": "and edges have to exist before you can coerce the nodes have to exist before you can create the edge awesome yeah",
    "start": "1763250",
    "end": "1769700"
  },
  {
    "text": "because I guess maybe even when you're designing your your your graph data set or your model essentially there may be",
    "start": "1769700",
    "end": "1776330"
  },
  {
    "text": "relationships you want in one direction that you don't need modeled in the reverse direction and you'll only know",
    "start": "1776330",
    "end": "1781340"
  },
  {
    "text": "that depending on how you're thinking of querying or the data that you have at hand right and you could always traverse",
    "start": "1781340",
    "end": "1786410"
  },
  {
    "text": "the the each edge and in the backwards direction if you choose right and so it",
    "start": "1786410",
    "end": "1791809"
  },
  {
    "text": "also you know whether things are modeled as an edge or a node you know as I mentioned early can really become a design choice I mean",
    "start": "1791809",
    "end": "1798490"
  },
  {
    "text": "I think often the example that people often think about is a purchase order kind of scenario you start building an",
    "start": "1798490",
    "end": "1805390"
  },
  {
    "text": "application and customers are buying things and you haven't you know you have a node from customer purchase product and then you realize that they actually",
    "start": "1805390",
    "end": "1811840"
  },
  {
    "text": "they buy many things at one time and you want to track in so then the you think about a purchase order as a node and it",
    "start": "1811840",
    "end": "1818710"
  },
  {
    "text": "go through those kinds of scenarios awesome so we we have what this looks like we have our entities which again",
    "start": "1818710",
    "end": "1824800"
  },
  {
    "text": "are the nodes and the edges or the vertexes and the edges but what does it look like to try and query or to assess",
    "start": "1824800",
    "end": "1832270"
  },
  {
    "text": "sort of this sort of model yeah so one thing that look before we get to that",
    "start": "1832270",
    "end": "1837520"
  },
  {
    "text": "let's take a quick look at what it might look like in sequel yeah I've hired a guy I've worked in a lot of different",
    "start": "1837520",
    "end": "1849490"
  },
  {
    "start": "1845000",
    "end": "1845000"
  },
  {
    "text": "places where we've tried to model this sort of stuff in sequel and I've been to DBA I was vollendroff to into the role",
    "start": "1849490",
    "end": "1855850"
  },
  {
    "text": "and when you have this r dot from stuff you know no no no no I'm not ever",
    "start": "1855850",
    "end": "1863440"
  },
  {
    "text": "managing that ever again yeah I mean so this is so you until you absolutely can",
    "start": "1863440",
    "end": "1869470"
  },
  {
    "text": "you know model these things in a relational database or key value store you know for that matter I mean we used",
    "start": "1869470",
    "end": "1875830"
  },
  {
    "text": "to have Titan DB was a thing that you could run on dynamo DB and it would do that same sort of setup as here as you",
    "start": "1875830",
    "end": "1880840"
  },
  {
    "text": "would have these from in to and you would have things represented in these different fashions and so it does where",
    "start": "1880840",
    "end": "1886030"
  },
  {
    "text": "it can key value stories as well yeah I think the challenge is that you know one thing is you when you want to query this",
    "start": "1886030",
    "end": "1892090"
  },
  {
    "text": "data when you want to ask that question like what are the routes between Austin and Auckland and how lorem are they you",
    "start": "1892090",
    "end": "1899560"
  },
  {
    "text": "end up with a sequel join query kind of like this because the way that you traverse these relationships in a",
    "start": "1899560",
    "end": "1904900"
  },
  {
    "text": "relational database is through joins and that has a obviously the pain of writing",
    "start": "1904900",
    "end": "1910510"
  },
  {
    "text": "these large join queries but it also has a performance implication and that the kinds of i/o access patterns that tend",
    "start": "1910510",
    "end": "1917680"
  },
  {
    "text": "to occur in graph databases are very different than you then relational databases are optimized for so these",
    "start": "1917680",
    "end": "1923500"
  },
  {
    "text": "join queries are not only difficult to write but they tend to execute slowly and so you have",
    "start": "1923500",
    "end": "1928720"
  },
  {
    "text": "you have this sort of double whammy if you will of something that's hard to write maintain and then something that that's kind of run you know slowly in",
    "start": "1928720",
    "end": "1934960"
  },
  {
    "text": "the maintain part I feel is one of the least people forget that",
    "start": "1934960",
    "end": "1940810"
  },
  {
    "text": "someone after you is going to have to look at this code and someone after you is gonna have to eventually modify this",
    "start": "1940810",
    "end": "1945910"
  },
  {
    "text": "code and if that person knows where you live and they're looking at a query like this you know you're not safe so it's",
    "start": "1945910",
    "end": "1954610"
  },
  {
    "text": "really important I think to you know frankly I think there's a better way of",
    "start": "1954610",
    "end": "1959860"
  },
  {
    "text": "writing this query but the fact is you shouldn't have to contort your mind into",
    "start": "1959860",
    "end": "1967210"
  },
  {
    "text": "some fashion that can write these queries because you're gonna have to",
    "start": "1967210",
    "end": "1972280"
  },
  {
    "text": "Train anyone who comes after you to do the same thing yeah and I think the thing that just you know like gut reaction is we can we can formulate a",
    "start": "1972280",
    "end": "1980380"
  },
  {
    "text": "question that's so simple right what are all of the users that flew between these routes or what are all of the cities in",
    "start": "1980380",
    "end": "1986680"
  },
  {
    "text": "between you know this start and end destination these are simple questions with what should be very clear one-step",
    "start": "1986680",
    "end": "1992050"
  },
  {
    "text": "answers but here you have to write a query that you know you are your reverse",
    "start": "1992050",
    "end": "1997060"
  },
  {
    "text": "engineering essentially how to ask that question in your tools format or syntax rather than simply having a tool that",
    "start": "1997060",
    "end": "2003270"
  },
  {
    "text": "can operate the way your brain is operating and so that may have been a limitation of technology at a certain point in time but that was never a",
    "start": "2003270",
    "end": "2009630"
  },
  {
    "text": "limitation of what could be possible with respect to creating a querying interface but you know even today people",
    "start": "2009630",
    "end": "2015330"
  },
  {
    "text": "still write queries like this right sure and you know one of the things that we talk about is the you know if you're in",
    "start": "2015330",
    "end": "2021900"
  },
  {
    "text": "a room with you know and you're asked to solve a hard problem you know you typically people get together they have a discussion and then",
    "start": "2021900",
    "end": "2027450"
  },
  {
    "text": "somebody goes to the whiteboard and they draw out you know this is gonna be connected to that it's gonna be connected and then there's gonna be this",
    "start": "2027450",
    "end": "2033240"
  },
  {
    "text": "thing that happens and then we're gonna go there and so they solve the problems by conceptualizing it as a graph on the",
    "start": "2033240",
    "end": "2038970"
  },
  {
    "text": "board and then we go off and build you know build in a relational database",
    "start": "2038970",
    "end": "2045120"
  },
  {
    "text": "ability to keep a store and that's not always the wrong choice it's just it's you know if the key part of the problem",
    "start": "2045120",
    "end": "2052648"
  },
  {
    "text": "is traversing these relationships then graph can give you both better development velocity so faster time",
    "start": "2052649",
    "end": "2059770"
  },
  {
    "text": "market and the thing that I think is also under appreciated is that when you",
    "start": "2059770",
    "end": "2065980"
  },
  {
    "text": "do these kinds of things over a relational p-value you have to denormalize your data because of this",
    "start": "2065980",
    "end": "2071139"
  },
  {
    "text": "performance problem and you can get better performance but it ultimately cost you in agility and flexibility",
    "start": "2071140",
    "end": "2077679"
  },
  {
    "text": "right is the real power graphs is I can now just boom I want a create relationship I can do it I can do it",
    "start": "2077679",
    "end": "2084908"
  },
  {
    "text": "data model it's very easy the graph database takes care of indexing it for you and making it fast traverse so you",
    "start": "2084909",
    "end": "2091300"
  },
  {
    "text": "lose that when you know that agility when you end up having to do you talk about denormalizing the data and it's",
    "start": "2091300",
    "end": "2096550"
  },
  {
    "text": "like you do have to do that to get to performance and if you're not doing that you're doing it anyway without realizing",
    "start": "2096550",
    "end": "2101740"
  },
  {
    "text": "it because what the the engine and the background is doing is it's creating some view right and then creating a b-tree on that view that you're querying",
    "start": "2101740",
    "end": "2108160"
  },
  {
    "text": "because you'd query it so often the optimizer goes in and says hey stop joining these tables Hey if you run",
    "start": "2108160",
    "end": "2115030"
  },
  {
    "text": "explain on the query it's like you need indexes on every field you need foreign key constraints on everything or you",
    "start": "2115030",
    "end": "2121960"
  },
  {
    "text": "know like if you're just trying to go through a full database you may just be doing scans like just completely unoptimized",
    "start": "2121960",
    "end": "2128370"
  },
  {
    "text": "but to do that here not only you have to rethink how you're asking the question based on how its formatted but there is",
    "start": "2135250",
    "end": "2140860"
  },
  {
    "text": "some sort of skill floor where you have to learn all of these different parameters just to do the thing you",
    "start": "2140860",
    "end": "2146230"
  },
  {
    "text": "already know you want to do right honestly the way most people learn it is they build this in a relational database",
    "start": "2146230",
    "end": "2151720"
  },
  {
    "text": "the first time and then they hit the performance wall and like oh crap what are my options and in a Google graph",
    "start": "2151720",
    "end": "2157930"
  },
  {
    "text": "database and lo and behold or they watch this show where they want to fear about it the first time since I don't have to",
    "start": "2157930",
    "end": "2164140"
  },
  {
    "text": "learn from their mistakes they can learn from other people's mistakes or history Church ever you prefer so let's see what",
    "start": "2164140",
    "end": "2169510"
  },
  {
    "text": "this looks like in gremlin yeah absolutely so one option that we have with Neptune is you can write it in gremlin",
    "start": "2169510",
    "end": "2174910"
  },
  {
    "text": "now gremlin is an imperative traversal language it's something that's an open source part of the Apache tinker project",
    "start": "2174910",
    "end": "2181870"
  },
  {
    "text": "and so when you write in a gremlin you basically you can write these traversals directly that look at the",
    "start": "2181870",
    "end": "2188620"
  },
  {
    "start": "2188000",
    "end": "2188000"
  },
  {
    "text": "nodes so here I start with the ICG devii has code since so now I've just basically looked",
    "start": "2188620",
    "end": "2195040"
  },
  {
    "text": "up all of the vertices that have this property a US which is an airport code",
    "start": "2195040",
    "end": "2200109"
  },
  {
    "text": "in this case and then I fall it traverse the edge label route and I count them",
    "start": "2200109",
    "end": "2205599"
  },
  {
    "text": "and that's basically that's how straightforward it is to basically count all of the outbound edges that of the",
    "start": "2205599",
    "end": "2212200"
  },
  {
    "text": "label route coming from the airport in Austin and so you can sort of see that you know the graph optimized language",
    "start": "2212200",
    "end": "2219819"
  },
  {
    "text": "makes it easier to to traverse and right now it's not always familiar you know if",
    "start": "2219819",
    "end": "2225099"
  },
  {
    "text": "you're used to writing sequel this this may not look like something that you know immediately is there but you know I think as customers use it and try it out",
    "start": "2225099",
    "end": "2232059"
  },
  {
    "text": "it's certainly they come to appreciate the value of being able to traverse and address these relationships directly one",
    "start": "2232059",
    "end": "2238630"
  },
  {
    "text": "of the things that took me a long time to kind of grok with the language was was d-do and and stuff like that is your",
    "start": "2238630",
    "end": "2246010"
  },
  {
    "text": "own node can be included in your queries so you you start from a particular node or you start from like the root of the",
    "start": "2246010",
    "end": "2253089"
  },
  {
    "text": "graph or something and you go and you write some query that says hey find me all of the paths that have the following",
    "start": "2253089",
    "end": "2258309"
  },
  {
    "text": "attribute and then I want you to find some mapping out of those to get some",
    "start": "2258309",
    "end": "2263619"
  },
  {
    "text": "other thing and I in in sequel that can happen too when you have these complex",
    "start": "2263619",
    "end": "2269380"
  },
  {
    "text": "graphs but in sequel you you have your node is like an ID that you've set and",
    "start": "2269380",
    "end": "2274690"
  },
  {
    "text": "in in gremlin I forgot that you needed to like take out part of the query of",
    "start": "2274690",
    "end": "2281619"
  },
  {
    "text": "what you were querying if that makes any sense that's not a good excellent I'm in grandma does have a deed OOP yeah you know traversal step built into",
    "start": "2281619",
    "end": "2287890"
  },
  {
    "text": "language and it is something that you know there's lots of things that can happen in graphs so you can have cycles",
    "start": "2287890",
    "end": "2293349"
  },
  {
    "text": "in graph exactly we're edges point back to themselves or where that they go through other directionality and",
    "start": "2293349",
    "end": "2298359"
  },
  {
    "text": "Hamiltonian graphs and all and it's it's also shockingly easy to write a gremlin",
    "start": "2298359",
    "end": "2306160"
  },
  {
    "text": "traversal or a sparkle traversal that brings back to the whole graph yeah right and so so there's there's lots of",
    "start": "2306160",
    "end": "2312280"
  },
  {
    "text": "those things that you know it is optimized for graph but there's still some lessons and tips to learn around",
    "start": "2312280",
    "end": "2317319"
  },
  {
    "text": "the way I mean I've seen I've seen it in gremlin you know and I've also seen in sparkle you know in some places people",
    "start": "2317319",
    "end": "2323260"
  },
  {
    "text": "make spelling take on a variable and you know it's much like forgetting a wear closet it",
    "start": "2323260",
    "end": "2328940"
  },
  {
    "text": "brings back a lot more than you expected yep and and I've learned that now and I feel like after a couple days with",
    "start": "2328940",
    "end": "2335510"
  },
  {
    "text": "gremlin I have a pretty good handle on it because there are only so many verbs that you need to learn there only so many parts of the language that you need",
    "start": "2335510",
    "end": "2341660"
  },
  {
    "text": "to learn and then with that simple toolkit you can go out and write just about anything absolutely I like it as a",
    "start": "2341660",
    "end": "2348050"
  },
  {
    "text": "language I much prefer it over sparkle I think there's there's important use",
    "start": "2348050",
    "end": "2354080"
  },
  {
    "text": "cases for both and I think that you know that it's it does come down to preference I mean you know and people do",
    "start": "2354080",
    "end": "2359450"
  },
  {
    "text": "feel passionate about it but I think obviously you're on one side here but I",
    "start": "2359450",
    "end": "2364970"
  },
  {
    "text": "think what we really see is is for regardless of the passion for grandmother the passion for idea if it",
    "start": "2364970",
    "end": "2370400"
  },
  {
    "text": "sparkle people are really passionate about Graff and like that's really where we want it want people to focus is you",
    "start": "2370400",
    "end": "2375830"
  },
  {
    "text": "know what is it that you need to build Graff applications you know quickly and effectively and and part of supporting",
    "start": "2375830",
    "end": "2382730"
  },
  {
    "text": "both models was very intentional for that reason because we saw customers that wanted rdf and sparkle we saw",
    "start": "2382730",
    "end": "2390050"
  },
  {
    "text": "customers that want to tinker Bachman gremlin and in general we saw customers that want a graph and so we wanted to",
    "start": "2390050",
    "end": "2395390"
  },
  {
    "text": "you know give them the tools to do that to speak a little further to that I think it's something on the order of 90",
    "start": "2395390",
    "end": "2400850"
  },
  {
    "text": "plus 95 percent of EWS is future roadmap is customer driven and so when we say we",
    "start": "2400850",
    "end": "2406700"
  },
  {
    "text": "saw customers wanting this out in the wild that's from existing customers customers we speak at speak with that",
    "start": "2406700",
    "end": "2412520"
  },
  {
    "text": "meetups at our conferences summits so on and so forth talking to us is the best way to guarantee that features or",
    "start": "2412520",
    "end": "2420520"
  },
  {
    "text": "compatibility for certain languages will make its way into production because we're building for you at the end of the day and this episode is a great way to",
    "start": "2420520",
    "end": "2427609"
  },
  {
    "text": "get Brad to implement things so awesome directly the person who helps drive that",
    "start": "2427609",
    "end": "2433010"
  },
  {
    "text": "future roadmap you're committed so maybe we can take a look now at a sparkle",
    "start": "2433010",
    "end": "2439910"
  },
  {
    "text": "query or kind of dive deeper in a couple more use cases we've only got about 15 minutes left and we're gonna have to get",
    "start": "2439910",
    "end": "2446000"
  },
  {
    "text": "to some questions at the end so let's see if we can't show a little bit more of Neptune and talk a little bit more about it and then hop over to the",
    "start": "2446000",
    "end": "2451310"
  },
  {
    "text": "questions yeah so let me take you through another graph query example and so I'm just brush over yes so there's the oldest and",
    "start": "2451310",
    "end": "2458619"
  },
  {
    "text": "most well-known graph benchmark is something called the Lehigh University benchmark or the lumen benchmark and it",
    "start": "2458619",
    "end": "2464080"
  },
  {
    "start": "2464000",
    "end": "2464000"
  },
  {
    "text": "basically consists of a it's a parameterised benchmark and consists of universities where universities have",
    "start": "2464080",
    "end": "2469660"
  },
  {
    "text": "students and they have professors and professors teach courses and students take courses and teach the courses and",
    "start": "2469660",
    "end": "2485650"
  },
  {
    "text": "so this query has this benchmark is 14 different queries and they basically ask",
    "start": "2485650",
    "end": "2491440"
  },
  {
    "text": "different questions about this data set and it's designed to evaluate you know graph databases and graph database",
    "start": "2491440",
    "end": "2496810"
  },
  {
    "text": "performance and the this happens to be lumen query number two which effectively",
    "start": "2496810",
    "end": "2502780"
  },
  {
    "text": "asks find all the graduate students that are taking or doing their graduate work",
    "start": "2502780",
    "end": "2509350"
  },
  {
    "text": "at the same university where they did their undergraduate degree essentially and we can look at this query as a",
    "start": "2509350",
    "end": "2515530"
  },
  {
    "text": "conjunctive joint and here's a you know the screen is showing sort of what that pattern looks like so I want graduate",
    "start": "2515530",
    "end": "2520990"
  },
  {
    "text": "students that are members of departments and departments are part of universities and then they can receive their",
    "start": "2520990",
    "end": "2526090"
  },
  {
    "text": "undergraduate degree so let's then look at this query now first looking at in",
    "start": "2526090",
    "end": "2531280"
  },
  {
    "text": "Gremlin so you know imperative traversal we start off find me all the graduate",
    "start": "2531280",
    "end": "2536980"
  },
  {
    "text": "students we store it off as student and it's a temporary variable we're going to refer to later and then we start",
    "start": "2536980",
    "end": "2543250"
  },
  {
    "text": "traversing the relationships so find me this outgoing edge where the graduate student received their undergraduate",
    "start": "2543250",
    "end": "2549160"
  },
  {
    "text": "degree and then find the vertex there and then find the incoming edge for",
    "start": "2549160",
    "end": "2554619"
  },
  {
    "text": "where the departments or sub organizations of the University and then go back to the graduate students that",
    "start": "2554619",
    "end": "2559930"
  },
  {
    "text": "are members of those departments and then effectively you know take the intersection of that set with the where clause referring back to the student and",
    "start": "2559930",
    "end": "2567130"
  },
  {
    "text": "that's effectively how you would evaluate that question and gremlin so you're kind of saying at each step of",
    "start": "2567130",
    "end": "2574690"
  },
  {
    "text": "this query you're saying get me all this data coming out of it and then you're filtering all of those you're get me all",
    "start": "2574690",
    "end": "2580780"
  },
  {
    "text": "the vertices coming out that have this edge get me all the vertices that are",
    "start": "2580780",
    "end": "2585900"
  },
  {
    "text": "going out that have this edge and you you're kind of going and filtering at",
    "start": "2585900",
    "end": "2591490"
  },
  {
    "text": "each step of the query and that's right and then you you and then you're comparing preparing that filtered set",
    "start": "2591490",
    "end": "2596850"
  },
  {
    "text": "which is the you know where they graduate so you start and get all the universities where these all the graduate students got their",
    "start": "2596850",
    "end": "2602500"
  },
  {
    "text": "undergraduate degrees and then you take the set of the students there and then and with the universities that they got",
    "start": "2602500",
    "end": "2607930"
  },
  {
    "text": "the graduate student from and then that's effectively how you reduce it so it's like a journal in diagram yeah and",
    "start": "2607930",
    "end": "2613960"
  },
  {
    "text": "you're bursting along the way and that's really how the imperative traversal languages work you know you're building this traversal as you go and if you were",
    "start": "2613960",
    "end": "2620650"
  },
  {
    "text": "to try to like imagine what this looks like if you if you take the first one where they're all of all graduate",
    "start": "2620650",
    "end": "2625840"
  },
  {
    "text": "students you know you start at that pool or all those nodes and with each of these steps you could iteratively try to",
    "start": "2625840",
    "end": "2631270"
  },
  {
    "text": "imagine sort of like what new nodes are lighting up that satisfy those relationship as you go down but I think",
    "start": "2631270",
    "end": "2636490"
  },
  {
    "text": "the most important part here is that you don't have to figure out what the transform necessarily is like with joins and sequel you really just have to",
    "start": "2636490",
    "end": "2643330"
  },
  {
    "text": "understand okay what is the sequential order of parameters essentially or properties that I need to to know in",
    "start": "2643330",
    "end": "2650890"
  },
  {
    "text": "enumerate such that gremlin can return the the set that I want or anything it",
    "start": "2650890",
    "end": "2656500"
  },
  {
    "text": "helps to still let down as simply as possible you just need to know the relationship or the edge you want to",
    "start": "2656500",
    "end": "2662230"
  },
  {
    "text": "traverse you don't even need to know the type you could say any edge you could say find me you know this case we're asking for something specific but I",
    "start": "2662230",
    "end": "2667720"
  },
  {
    "text": "could say find me graduate students with any relationship hmm you know and so you don't have to really know a deeper level",
    "start": "2667720",
    "end": "2674050"
  },
  {
    "text": "about the data model there there's a there's a joke in there about graduate students and relationships being",
    "start": "2674050",
    "end": "2679270"
  },
  {
    "text": "non-existent yeah we may take that offline upper and perhaps everyone's too",
    "start": "2679270",
    "end": "2685540"
  },
  {
    "start": "2682000",
    "end": "2682000"
  },
  {
    "text": "busy to it so so we also act ask and answer the same question using sparkle",
    "start": "2685540",
    "end": "2691660"
  },
  {
    "text": "now if you're familiar with sequel Sparkle is a declarative graph pure language like sequel is a declarative",
    "start": "2691660",
    "end": "2697990"
  },
  {
    "text": "query language and so to look a little bit more familiar from that perspective you know you'll notice right across the",
    "start": "2697990",
    "end": "2705280"
  },
  {
    "text": "top that you know these the IRI is that I mentioned so you see these things that look like URL there's our I our eyes",
    "start": "2705280",
    "end": "2710680"
  },
  {
    "text": "that's where you're getting this strong sense of identity that makes is very powerful for a lot of these applications",
    "start": "2710680",
    "end": "2716020"
  },
  {
    "text": "where you're merging data are joining data to go and I see it has this owl reference which was the the",
    "start": "2716020",
    "end": "2721640"
  },
  {
    "text": "ontology that you were yeah so all the ontology web language that's the w3c standard that I referenced earlier and",
    "start": "2721640",
    "end": "2728300"
  },
  {
    "text": "which lets you effectively apply different levels of meaning over on top of your data and then to evaluate the",
    "start": "2728300",
    "end": "2734240"
  },
  {
    "text": "query we're going to do this select statement and so we're basically going to select student and in sparkle",
    "start": "2734240",
    "end": "2739550"
  },
  {
    "text": "variables have this question mark engrained is how you refer to variable and we're doing a where clause and the",
    "start": "2739550",
    "end": "2745340"
  },
  {
    "text": "first three what they call triple patterns each one of these lines is represents a triple pattern basically",
    "start": "2745340",
    "end": "2751130"
  },
  {
    "text": "bind the variables to different types and so students bind all of the graduate",
    "start": "2751130",
    "end": "2756710"
  },
  {
    "text": "students to the student variable bind all the universities to the university variable bind all the departments the",
    "start": "2756710",
    "end": "2761720"
  },
  {
    "text": "department variable and then we execute the conduct conjunctive join so now in",
    "start": "2761720",
    "end": "2766820"
  },
  {
    "text": "this case here's where we're traversing basically so we're looking for this pattern where students are members of",
    "start": "2766820",
    "end": "2771950"
  },
  {
    "text": "the departments departments are sub organizations of the university and then the students receive their undergraduate",
    "start": "2771950",
    "end": "2777620"
  },
  {
    "text": "degree from the same University and those shared variables between the triple patterns are effectively how you",
    "start": "2777620",
    "end": "2784550"
  },
  {
    "text": "execute the joins and how you traverse it so the first part of this is basically setting up the query setting",
    "start": "2784550",
    "end": "2790100"
  },
  {
    "text": "up the variables that we're gonna use by loading them in from this comment RDF type so we're we're saying that the type",
    "start": "2790100",
    "end": "2797060"
  },
  {
    "text": "is going to be in brought in from this ontology from the the whatever the",
    "start": "2797060",
    "end": "2803840"
  },
  {
    "text": "university benchmark is and that's gonna be bound to like an RDF type and then we're gonna use the edges from like this",
    "start": "2803840",
    "end": "2811430"
  },
  {
    "text": "ontology again member of we're gonna use the edges sub organization of and edges undergraduate degree from yeah and in",
    "start": "2811430",
    "end": "2818000"
  },
  {
    "text": "this kit and that's true in this case but you know really more fundamentally this you know student RDF type graduate",
    "start": "2818000",
    "end": "2823640"
  },
  {
    "text": "student is really just another it's another relationship and saying that this variable student has this",
    "start": "2823640",
    "end": "2829760"
  },
  {
    "text": "relationship type to this other node that's graduate student alright can we",
    "start": "2829760",
    "end": "2835640"
  },
  {
    "text": "go back we have a question from the stream foam from polios Hernandez yeah so if we go back to the gremlin query",
    "start": "2835640",
    "end": "2842750"
  },
  {
    "text": "yeah the question is just what is the deal what does the string that the student is being compared to and it's",
    "start": "2842750",
    "end": "2849050"
  },
  {
    "text": "not that it's a string that it's being compared to yeah think of it as if the azan gremlin is effectively like sort of",
    "start": "2849050",
    "end": "2854940"
  },
  {
    "text": "storing it off in a buffer so basically to take the result of this step in the traversal and I want to take that",
    "start": "2854940",
    "end": "2862140"
  },
  {
    "text": "effectively net name solution set I want to call it student and I'm gonna later in my traversal refer to this thing",
    "start": "2862140",
    "end": "2869069"
  },
  {
    "text": "student and it will have the value that was evaluated at the step previously so we're saying at the top here this vertex",
    "start": "2869069",
    "end": "2875099"
  },
  {
    "text": "graduate student is being stored as student and then we're doing the where clause at the end here and the Equality",
    "start": "2875099",
    "end": "2880140"
  },
  {
    "text": "match of find me all the students that match these conditions yeah and it's not just a graduate student it's the set of",
    "start": "2880140",
    "end": "2887789"
  },
  {
    "text": "vertices that have the label graduate student in the graph so in the beginning essentially correct me if I'm wrong here",
    "start": "2887789",
    "end": "2893339"
  },
  {
    "text": "you are instantiating this variable or data structure student that represents the entirety of this the output of the",
    "start": "2893339",
    "end": "2900119"
  },
  {
    "text": "first query here which is all graduate students and then all of the other things all the other steps are going to",
    "start": "2900119",
    "end": "2905670"
  },
  {
    "text": "be filters or transforms on that student graph well they're not even there's not",
    "start": "2905670",
    "end": "2910829"
  },
  {
    "text": "a not a filter of per se it's taking all of the the vertices all the nodes and it's storing that step in the traversal",
    "start": "2910829",
    "end": "2917849"
  },
  {
    "text": "off mm-hm and then we continue so we say find me all the graduate students store them off now find me all the outcoming",
    "start": "2917849",
    "end": "2924989"
  },
  {
    "text": "edges from all of the graduate students so we're gonna we're gonna do traversals on that and it's not until the end that",
    "start": "2924989",
    "end": "2931619"
  },
  {
    "text": "we take the intersection with all the graduate students with all the ones that we've gotten to with students where they",
    "start": "2931619",
    "end": "2937079"
  },
  {
    "text": "got their undergraduate degree great alright let's talk a little bit about neptune very quickly and then we'll hop",
    "start": "2937079",
    "end": "2942960"
  },
  {
    "text": "over and do a couple questions from our email of course so I think you have a slide kind of walking through what Neptune looks like I do let me just get",
    "start": "2942960",
    "end": "2950940"
  },
  {
    "text": "back there so this is a very so this our our architectural diagram you know if",
    "start": "2950940",
    "end": "2956549"
  },
  {
    "start": "2952000",
    "end": "2952000"
  },
  {
    "text": "you will of Neptune the core of Neptune which is that sort of blue rectangle is",
    "start": "2956549",
    "end": "2962219"
  },
  {
    "text": "a purpose-built storage engine that's optimized for graph and is durable and",
    "start": "2962219",
    "end": "2967769"
  },
  {
    "text": "acid with immediate consistency on the right master and then it we expose that",
    "start": "2967769",
    "end": "2973140"
  },
  {
    "text": "functionality by supporting both property graph through the apache tinker pop and gremlin stack so every Neptune",
    "start": "2973140",
    "end": "2979289"
  },
  {
    "text": "instance supports a gremlin WebSocket server and a gremlin server and then we also support the RDF",
    "start": "2979289",
    "end": "2985349"
  },
  {
    "text": "graphs and the sparkle stack so every Neptune instance also has a rest service",
    "start": "2985349",
    "end": "2990570"
  },
  {
    "text": "that implements the sparkle 1/1 protocol and so that purpose-built engine is exposed to you in open source and open",
    "start": "2990570",
    "end": "2997410"
  },
  {
    "text": "standards ways for you to to use your graph now all of this sits on top of a",
    "start": "2997410",
    "end": "3002750"
  },
  {
    "text": "cloud native storage layer that was originally developed for other AWS database services and it provides multi",
    "start": "3002750",
    "end": "3009410"
  },
  {
    "text": "a-z high availability we support up to 15 different low latency read replicas",
    "start": "3009410",
    "end": "3014869"
  },
  {
    "text": "we support encryption at rest with customer manager sound familiar it's",
    "start": "3014869",
    "end": "3020290"
  },
  {
    "text": "it's definitely it's a key you know it's a very differentiating technology for databases and a lot of the things and",
    "start": "3020290",
    "end": "3027440"
  },
  {
    "text": "topics and services we've discussed in previous episodes are not just generalizable to just sequel just no",
    "start": "3027440",
    "end": "3033200"
  },
  {
    "text": "sequel or now just graph databases it's how it is the offering here in Neptune build upon the general graph best best",
    "start": "3033200",
    "end": "3040940"
  },
  {
    "text": "practices and principles with all the knowledge we've built to be able to build a product that can truly be cloud",
    "start": "3040940",
    "end": "3046099"
  },
  {
    "text": "native in cloud first and that intersection is what Neptune essentially is I mean I think one of the things you",
    "start": "3046099",
    "end": "3051980"
  },
  {
    "text": "know it's talking really earlier about you know how is exciting to be on graphs today but you know the fully managed aspect of Neptune is a really a",
    "start": "3051980",
    "end": "3059119"
  },
  {
    "text": "differentiating piece for a lot of customers I mean graph databases are you know can be difficult to manage you can",
    "start": "3059119",
    "end": "3066560"
  },
  {
    "text": "you spend a lot of time with JVM parameters you can spend a lot of time trying to create custom indices and part",
    "start": "3066560",
    "end": "3072980"
  },
  {
    "text": "of what Neptune does is give you the fully managed experience for provisioning Neptune high availability",
    "start": "3072980",
    "end": "3079250"
  },
  {
    "text": "is available and if you choose the smallest or the largest instance you have a highly available cluster and so I",
    "start": "3079250",
    "end": "3084470"
  },
  {
    "text": "think you know that's one of the things that customers use to build graph applications with confidence right on",
    "start": "3084470",
    "end": "3089869"
  },
  {
    "text": "top of it so one of the things that I like about RDS in general is that it",
    "start": "3089869",
    "end": "3095450"
  },
  {
    "text": "manages a lot of things for you like you're talking about this fully managed solution you get your backups you get",
    "start": "3095450",
    "end": "3100780"
  },
  {
    "text": "patching and all these other things however in RDS we have this concept of parameter groups that you can use to",
    "start": "3100780",
    "end": "3107599"
  },
  {
    "text": "apply specific parameters for the underlying database engine do we do that at all in Neptune or do you just don't",
    "start": "3107599",
    "end": "3112790"
  },
  {
    "text": "even need to care because it's all kind Oh Neptune does support a similar concept electric parameter groups cool I",
    "start": "3112790",
    "end": "3118840"
  },
  {
    "text": "think that one of the things that that we've done as a product from a product design philosophy is we've tried to give",
    "start": "3118840",
    "end": "3125620"
  },
  {
    "text": "customers as few knobs and dials as possible defaults you know we want to you know you can choose options like",
    "start": "3125620",
    "end": "3131830"
  },
  {
    "text": "controlling your query time out you know there's a few other different options but in general you know they're really",
    "start": "3131830",
    "end": "3138700"
  },
  {
    "text": "related to deployment pieces and things for managing the instances and we've really tried to make it easy for you to",
    "start": "3138700",
    "end": "3145330"
  },
  {
    "text": "load data and have a good experience and good query performance related to it so",
    "start": "3145330",
    "end": "3150580"
  },
  {
    "text": "you don't want to be tinkering you want to be tinkerer pop you want to tinker with your graph not your database I've",
    "start": "3150580",
    "end": "3161800"
  },
  {
    "text": "just been waiting to make that pun the whole time so alright so this is Neptune",
    "start": "3161800",
    "end": "3167380"
  },
  {
    "text": "and it's generally available now as of like me yeah so Neptune we're just over",
    "start": "3167380",
    "end": "3174040"
  },
  {
    "text": "we just had our first birthday I the cake is a couple weeks old but I'd share a piece with you if you want it's",
    "start": "3174040",
    "end": "3179710"
  },
  {
    "text": "distributed in graph format you know and we're you know we're now launched you",
    "start": "3179710",
    "end": "3185950"
  },
  {
    "text": "know in eleven regions worldwide and so we're continuing to expand the service you know and we're always launching new",
    "start": "3185950",
    "end": "3192520"
  },
  {
    "text": "features so for example you know just today we're gonna be announcing the ability to put audit logs and cloud",
    "start": "3192520",
    "end": "3198400"
  },
  {
    "text": "watch thanks and you know we've launched in the sort of Seoul region last month",
    "start": "3198400",
    "end": "3206350"
  },
  {
    "text": "and so we're continuing you know to increase and you know and make updates to the service and I think one of the",
    "start": "3206350",
    "end": "3211540"
  },
  {
    "text": "things that kind of prevented you from getting into Seoul was they had to add that additional availability zone so",
    "start": "3211540",
    "end": "3217360"
  },
  {
    "text": "both Seoul and one other region recently added an additional availabilities on giving them three availability zones in",
    "start": "3217360",
    "end": "3223750"
  },
  {
    "text": "the way the storage engine is designed is like it wants the data in six different copies and three different",
    "start": "3223750",
    "end": "3229600"
  },
  {
    "text": "AZ's and bad things backed by history yeah 11:9 to durability and and so I I",
    "start": "3229600",
    "end": "3235390"
  },
  {
    "text": "really loved seeing some of the older regions get that additional availability zone so that they can kind of",
    "start": "3235390",
    "end": "3240490"
  },
  {
    "text": "immediately I've seen this rush of all these services coming in and like deploying into those regions since",
    "start": "3240490",
    "end": "3245980"
  },
  {
    "text": "that's happened and now we've got I think twenty-one regions with 66 availability",
    "start": "3245980",
    "end": "3251380"
  },
  {
    "text": "zones which is pretty darn cool it's a lot of places to deploy all right cool we've got time for two questions from",
    "start": "3251380",
    "end": "3257200"
  },
  {
    "text": "the stream from the database email so the first question that I have is from Doron levar E which says how can I",
    "start": "3257200",
    "end": "3265120"
  },
  {
    "text": "maintain multiple similar identical schemas or databases in the same database service I think people understand how it's done with Aurora and",
    "start": "3265120",
    "end": "3270670"
  },
  {
    "text": "document DB but everybody would be fairly interested in knowing how it's possible with Neptune and maybe dynamo do we already answer this in the West",
    "start": "3270670",
    "end": "3276040"
  },
  {
    "text": "yeah so we talked about with respect to server or serverless last time um but I",
    "start": "3276040",
    "end": "3281860"
  },
  {
    "text": "think with respect to graph and and in Neptune do we want to speak to that little bit like what what would",
    "start": "3281860",
    "end": "3287980"
  },
  {
    "text": "different schemas essentially look like for one data set in Neptune or would you even have multiple schemas for your same",
    "start": "3287980",
    "end": "3294280"
  },
  {
    "text": "data set yeah so from in depth today in Neptune each cluster effectively gives",
    "start": "3294280",
    "end": "3300520"
  },
  {
    "text": "you a graph that you can use for your property graph and gremlin and then you have the RDF graph that you can use and",
    "start": "3300520",
    "end": "3305890"
  },
  {
    "text": "within that within your application you can have many different graphs that would coexist inside of there we don't",
    "start": "3305890",
    "end": "3312040"
  },
  {
    "text": "today in Neptune support a kind of multi-tenancy concept where you could have multiple databases within a single",
    "start": "3312040",
    "end": "3317200"
  },
  {
    "text": "cluster instance so what we recommend in that case is they have more smaller clusters for that in that the idea of",
    "start": "3317200",
    "end": "3323170"
  },
  {
    "text": "kind of taking multiple places that's what Sparkle is you have those IR eyes so then you can yeah and in the",
    "start": "3323170",
    "end": "3330190"
  },
  {
    "text": "sparkle use case there's something called a named graph which serves as a container concept so many customers and",
    "start": "3330190",
    "end": "3335980"
  },
  {
    "text": "will build applications using named graphs as the container for it and there was a question from the email about any",
    "start": "3335980",
    "end": "3341920"
  },
  {
    "text": "kind of Active Directory relationships and things like that how does that go with Neptune or is there no integration",
    "start": "3341920",
    "end": "3348790"
  },
  {
    "text": "so sorry we are running right up against the clock and there's another stream that is coming immediately after us like",
    "start": "3348790",
    "end": "3354790"
  },
  {
    "text": "right now so that's all the time we have for today unfortunately we will answer this question off stream and get that",
    "start": "3354790",
    "end": "3361420"
  },
  {
    "text": "responded to but thank you so much for coming out this was again our up to episode on Amazon Neptune and graph",
    "start": "3361420",
    "end": "3367300"
  },
  {
    "text": "databases so thank you again breath it's been a pleasure thanks a lot thanks for coming on Brad appreciate it see you",
    "start": "3367300",
    "end": "3372460"
  },
  {
    "text": "next week",
    "start": "3372460",
    "end": "3374820"
  },
  {
    "text": "[Music]",
    "start": "3377850",
    "end": "3404129"
  }
]