[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "Welcome to Solving with",
    "start": "14010",
    "end": "15278"
  },
  {
    "text": "AWS Solutions, your deep dive",
    "start": "15278",
    "end": "17213"
  },
  {
    "text": "into reference architectures",
    "start": "17213",
    "end": "18681"
  },
  {
    "text": "built by AWS that are ready to",
    "start": "18681",
    "end": "20450"
  },
  {
    "text": "deploy instantly in the cloud.",
    "start": "20450",
    "end": "22185"
  },
  {
    "text": "I'm Johny and I'm here today",
    "start": "22185",
    "end": "23619"
  },
  {
    "text": "with Mukta from the AWS",
    "start": "23619",
    "end": "25088"
  },
  {
    "text": "Solutions team to tell you",
    "start": "25088",
    "end": "26556"
  },
  {
    "text": "about the AWS ML",
    "start": "26556",
    "end": "27757"
  },
  {
    "text": "Ops Framework solution.",
    "start": "27757",
    "end": "29058"
  },
  {
    "text": "Thanks, Johnny.",
    "start": "29058",
    "end": "30293"
  },
  {
    "text": "MLOps is a systematic process",
    "start": "30293",
    "end": "31793"
  },
  {
    "text": "of taking experimental machine",
    "start": "31794",
    "end": "33396"
  },
  {
    "text": "learning models from training",
    "start": "33396",
    "end": "34931"
  },
  {
    "text": "to deployment",
    "start": "34931",
    "end": "35798"
  },
  {
    "text": "and monitoring them.",
    "start": "35798",
    "end": "36899"
  },
  {
    "text": "Customers often find managing",
    "start": "36899",
    "end": "39067"
  },
  {
    "text": "the lifecycle of machine",
    "start": "39068",
    "end": "40203"
  },
  {
    "text": "learning models to be overly",
    "start": "40203",
    "end": "41571"
  },
  {
    "text": "manual and time consuming.",
    "start": "41571",
    "end": "42905"
  },
  {
    "text": "This solution helps",
    "start": "42905",
    "end": "44107"
  },
  {
    "text": "organizations feel confident in",
    "start": "44107",
    "end": "46175"
  },
  {
    "text": "building MLOps workload by",
    "start": "46175",
    "end": "48478"
  },
  {
    "text": "eliminating the need",
    "start": "48478",
    "end": "49379"
  },
  {
    "text": "of extensive coding.",
    "start": "49379",
    "end": "50713"
  },
  {
    "start": "50000",
    "end": "72000"
  },
  {
    "text": "I'm very interested to hear",
    "start": "50713",
    "end": "52015"
  },
  {
    "text": "more about this,",
    "start": "52015",
    "end": "52849"
  },
  {
    "text": "so let's dive in.",
    "start": "52849",
    "end": "53683"
  },
  {
    "text": "OK Mukta, take me",
    "start": "55018",
    "end": "56319"
  },
  {
    "text": "through the solution.",
    "start": "56319",
    "end": "57353"
  },
  {
    "text": "Sure.",
    "start": "57353",
    "end": "57920"
  },
  {
    "text": "This is a landing page",
    "start": "57920",
    "end": "58887"
  },
  {
    "text": "for the solution.",
    "start": "58888",
    "end": "59822"
  },
  {
    "text": "There is a link for",
    "start": "59822",
    "end": "60656"
  },
  {
    "text": "implementation guide here,",
    "start": "60657",
    "end": "61958"
  },
  {
    "text": "which will give you all the",
    "start": "63326",
    "end": "64627"
  },
  {
    "text": "information about",
    "start": "64627",
    "end": "65528"
  },
  {
    "text": "the solution.",
    "start": "65528",
    "end": "66429"
  },
  {
    "text": "There's a link for",
    "start": "66429",
    "end": "67296"
  },
  {
    "text": "source code, which you can use",
    "start": "67296",
    "end": "69098"
  },
  {
    "text": "to modify according to",
    "start": "69098",
    "end": "71367"
  },
  {
    "text": "your use case.",
    "start": "71367",
    "end": "72268"
  },
  {
    "start": "72000",
    "end": "110000"
  },
  {
    "text": "There's a link for Cloud",
    "start": "72268",
    "end": "73135"
  },
  {
    "text": "Formation template, which you",
    "start": "73136",
    "end": "74337"
  },
  {
    "text": "can use to deploy",
    "start": "74337",
    "end": "75203"
  },
  {
    "text": "the solution.",
    "start": "75204",
    "end": "76572"
  },
  {
    "text": "OK, how about you take me",
    "start": "76572",
    "end": "78007"
  },
  {
    "text": "through the architecture?",
    "start": "78007",
    "end": "79042"
  },
  {
    "text": "Sure.",
    "start": "79042",
    "end": "79609"
  },
  {
    "text": "Let me start with",
    "start": "79609",
    "end": "80176"
  },
  {
    "text": "single account architecture.",
    "start": "80176",
    "end": "81744"
  },
  {
    "text": "There are two components",
    "start": "81744",
    "end": "82945"
  },
  {
    "text": "of it.",
    "start": "82945",
    "end": "83513"
  },
  {
    "text": "One is Orchestrator and one",
    "start": "83513",
    "end": "85148"
  },
  {
    "text": "is Provisioned Pipeline.",
    "start": "85148",
    "end": "86582"
  },
  {
    "text": "The Orchestrator is deployed by",
    "start": "86582",
    "end": "88351"
  },
  {
    "text": "solutions mean template.",
    "start": "88351",
    "end": "89852"
  },
  {
    "text": "The Provisioned Pipeline is",
    "start": "89852",
    "end": "91154"
  },
  {
    "text": "deployed by Orchestrator.",
    "start": "91154",
    "end": "93189"
  },
  {
    "text": "The customer initiates the API",
    "start": "93189",
    "end": "95258"
  },
  {
    "text": "call to Amazon API Gateway.",
    "start": "95258",
    "end": "97593"
  },
  {
    "text": "Orchestrator's Lambda then",
    "start": "97593",
    "end": "99662"
  },
  {
    "text": "creates AWS CodePipeline,",
    "start": "99662",
    "end": "102031"
  },
  {
    "text": "and then AWS CodePipeline,",
    "start": "102031",
    "end": "103733"
  },
  {
    "text": "then provision",
    "start": "103733",
    "end": "104567"
  },
  {
    "text": "the requested pipeline.",
    "start": "104567",
    "end": "105868"
  },
  {
    "text": "Similarly, you can use multi",
    "start": "105868",
    "end": "108303"
  },
  {
    "text": "account template, but you can",
    "start": "108304",
    "end": "110706"
  },
  {
    "start": "110000",
    "end": "147000"
  },
  {
    "text": "have different environments in",
    "start": "110706",
    "end": "112241"
  },
  {
    "text": "different AWS accounts.",
    "start": "112241",
    "end": "113943"
  },
  {
    "text": "OK, and what type of models",
    "start": "113943",
    "end": "116512"
  },
  {
    "text": "does this solution support?",
    "start": "116512",
    "end": "117780"
  },
  {
    "text": "Two models.",
    "start": "117780",
    "end": "118781"
  },
  {
    "text": "One is can pre-trained using",
    "start": "118781",
    "end": "120882"
  },
  {
    "text": "Amazon SageMaker building",
    "start": "120883",
    "end": "123553"
  },
  {
    "text": "portals and industry using",
    "start": "123553",
    "end": "124887"
  },
  {
    "text": "model registry and custom",
    "start": "124887",
    "end": "127323"
  },
  {
    "text": "models for build your",
    "start": "127323",
    "end": "129459"
  },
  {
    "text": "own model scenarios.",
    "start": "129459",
    "end": "131026"
  },
  {
    "text": "And how do I ensure that my",
    "start": "131027",
    "end": "132795"
  },
  {
    "text": "models are relevant and",
    "start": "132795",
    "end": "135231"
  },
  {
    "text": "accurate over time?",
    "start": "135231",
    "end": "136866"
  },
  {
    "text": "You can use solutions,",
    "start": "136866",
    "end": "138334"
  },
  {
    "text": "data quality and model quality",
    "start": "138334",
    "end": "140369"
  },
  {
    "text": "monitoring models,",
    "start": "140369",
    "end": "142038"
  },
  {
    "text": "monitoring pipelines which",
    "start": "142038",
    "end": "144273"
  },
  {
    "text": "which you can use for",
    "start": "144273",
    "end": "145407"
  },
  {
    "text": "continuously monitoring the",
    "start": "145408",
    "end": "148144"
  },
  {
    "start": "147000",
    "end": "222000"
  },
  {
    "text": "quality of",
    "start": "148144",
    "end": "149145"
  },
  {
    "text": "machine learning models.",
    "start": "149145",
    "end": "150546"
  },
  {
    "text": "OK, let's see it in action.",
    "start": "150546",
    "end": "152048"
  },
  {
    "text": "Sure.",
    "start": "152048",
    "end": "152648"
  },
  {
    "text": "So I have a CloudFormation",
    "start": "152648",
    "end": "154950"
  },
  {
    "text": "template deployed here.",
    "start": "154951",
    "end": "156185"
  },
  {
    "text": "You can choose between single",
    "start": "156185",
    "end": "157553"
  },
  {
    "text": "and multi account here, and for",
    "start": "157553",
    "end": "159722"
  },
  {
    "text": "the demo,",
    "start": "159722",
    "end": "160289"
  },
  {
    "text": "I'm using single account.",
    "start": "160289",
    "end": "161491"
  },
  {
    "text": "So once you deploy the single",
    "start": "161491",
    "end": "163459"
  },
  {
    "text": "account template, you can call",
    "start": "163459",
    "end": "165628"
  },
  {
    "text": "the Orchestrator API,",
    "start": "165628",
    "end": "167430"
  },
  {
    "text": "which will then call Lambda to",
    "start": "167430",
    "end": "169131"
  },
  {
    "text": "provision your",
    "start": "169132",
    "end": "170133"
  },
  {
    "text": "AWS CodePipeline.",
    "start": "170133",
    "end": "171032"
  },
  {
    "text": "So I have an example here.",
    "start": "171033",
    "end": "173703"
  },
  {
    "text": "So this is the example where I",
    "start": "173703",
    "end": "175771"
  },
  {
    "text": "am provisioning real time",
    "start": "175771",
    "end": "177607"
  },
  {
    "text": "inference pipeline, which uses",
    "start": "177607",
    "end": "179842"
  },
  {
    "text": "energy boost model to",
    "start": "179842",
    "end": "181444"
  },
  {
    "text": "predict customer churn.",
    "start": "181444",
    "end": "182879"
  },
  {
    "text": "So once you call this API,",
    "start": "182879",
    "end": "184514"
  },
  {
    "text": "it will deploy a CloudFormation",
    "start": "184514",
    "end": "185982"
  },
  {
    "text": "template here, which will then",
    "start": "185982",
    "end": "187817"
  },
  {
    "text": "create your SageMaker inference",
    "start": "187817",
    "end": "189652"
  },
  {
    "text": "endpoint and also",
    "start": "189652",
    "end": "190752"
  },
  {
    "text": "deploy API Gateway.",
    "start": "190753",
    "end": "192455"
  },
  {
    "text": "So once the API Gateway and Sage",
    "start": "192455",
    "end": "194857"
  },
  {
    "text": "Maker Endpoint is deployed,",
    "start": "194857",
    "end": "196726"
  },
  {
    "text": "you can use the Inference API,",
    "start": "196726",
    "end": "198728"
  },
  {
    "text": "which you can get as",
    "start": "198728",
    "end": "199929"
  },
  {
    "text": "an output here.",
    "start": "199929",
    "end": "201564"
  },
  {
    "text": "This is where you get this is",
    "start": "201564",
    "end": "203799"
  },
  {
    "text": "your bring your own model",
    "start": "203800",
    "end": "205301"
  },
  {
    "text": "inference Lambda rest API.",
    "start": "205301",
    "end": "207069"
  },
  {
    "text": "You can use this API to request",
    "start": "207069",
    "end": "210540"
  },
  {
    "text": "the predictions for",
    "start": "210540",
    "end": "212508"
  },
  {
    "text": "your model.",
    "start": "212508",
    "end": "213308"
  },
  {
    "text": "So I have an example here.",
    "start": "213309",
    "end": "215211"
  },
  {
    "text": "So this is this is the example",
    "start": "215211",
    "end": "217980"
  },
  {
    "text": "API call I have.",
    "start": "217980",
    "end": "219749"
  },
  {
    "text": "Once you call this API,",
    "start": "219749",
    "end": "221017"
  },
  {
    "text": "you will get the probability of",
    "start": "221017",
    "end": "222818"
  },
  {
    "start": "222000",
    "end": "249000"
  },
  {
    "text": "churn here, which is 0.46.",
    "start": "222818",
    "end": "226989"
  },
  {
    "text": "Again what are some of the",
    "start": "226989",
    "end": "228024"
  },
  {
    "text": "pipelines that the",
    "start": "228024",
    "end": "228958"
  },
  {
    "text": "solution contains?",
    "start": "228958",
    "end": "230493"
  },
  {
    "text": "Along with real time",
    "start": "230493",
    "end": "231761"
  },
  {
    "text": "inference pipeline, which we",
    "start": "231761",
    "end": "233930"
  },
  {
    "text": "just saw in the demo, we have",
    "start": "233930",
    "end": "235564"
  },
  {
    "text": "batch transform pipeline,",
    "start": "235565",
    "end": "237466"
  },
  {
    "text": "which again uses Amazon Sage",
    "start": "237466",
    "end": "239168"
  },
  {
    "text": "Maker and a custom algorithm.",
    "start": "239168",
    "end": "242238"
  },
  {
    "text": "Along with that, we have",
    "start": "242238",
    "end": "243039"
  },
  {
    "text": "image builder, which uses",
    "start": "243039",
    "end": "244574"
  },
  {
    "text": "Docker images and then model",
    "start": "244574",
    "end": "246542"
  },
  {
    "text": "quality to continuously monitor",
    "start": "246542",
    "end": "248311"
  },
  {
    "text": "the deployed",
    "start": "248311",
    "end": "248911"
  },
  {
    "text": "machine learning models.",
    "start": "248911",
    "end": "250612"
  },
  {
    "start": "249000",
    "end": "268000"
  },
  {
    "text": "Awesome.",
    "start": "250613",
    "end": "251180"
  },
  {
    "text": "Thanks, Mukta.",
    "start": "251180",
    "end": "251814"
  },
  {
    "text": "Thank you.",
    "start": "251814",
    "end": "252315"
  },
  {
    "text": "Thank you for joining our",
    "start": "253849",
    "end": "254951"
  },
  {
    "text": "review of the AWS",
    "start": "254951",
    "end": "256586"
  },
  {
    "text": "MLOps Framework,",
    "start": "256586",
    "end": "257420"
  },
  {
    "text": "which simplifies the process of",
    "start": "257420",
    "end": "258988"
  },
  {
    "text": "taking an experimental ML model",
    "start": "258988",
    "end": "260756"
  },
  {
    "text": "into a production system.",
    "start": "260756",
    "end": "261991"
  },
  {
    "text": "Check out the solution and many",
    "start": "261991",
    "end": "263459"
  },
  {
    "text": "of those on the",
    "start": "263459",
    "end": "264060"
  },
  {
    "text": "AWS Solutions webpage.",
    "start": "264060",
    "end": "265794"
  },
  {
    "text": "Thank you for watching.",
    "start": "265795",
    "end": "266662"
  }
]