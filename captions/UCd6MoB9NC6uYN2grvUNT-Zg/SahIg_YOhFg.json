[
  {
    "text": "hello again welcome to AWS event for startups and developers we're very",
    "start": "560",
    "end": "6629"
  },
  {
    "text": "excited to be back in New York City we were just here last year in June my name is Radhika actually handles startup and",
    "start": "6629",
    "end": "12719"
  },
  {
    "text": "developer marketing for AWS if you follow AWS startups I typically man that account so please follow it there's a",
    "start": "12719",
    "end": "19380"
  },
  {
    "text": "lot of really cool interesting developer information there and just to cut to the chase we want to be really mindful of",
    "start": "19380",
    "end": "26400"
  },
  {
    "text": "your time today the kind of speaker line-up that we have for today is really",
    "start": "26400",
    "end": "31769"
  },
  {
    "text": "around you know the the fact that you guys are building web and mobile apps and we want to teach you and show you",
    "start": "31769",
    "end": "38070"
  },
  {
    "text": "how to really leverage AWS products for those apps so without further ado I'd like to introduce our first speaker Matt",
    "start": "38070",
    "end": "44460"
  },
  {
    "text": "would our technology evangelist who is going to be walking you through an introduction to AWS and show you how to",
    "start": "44460",
    "end": "50940"
  },
  {
    "text": "use our products from a web app mad thank you very much hey thank you thank",
    "start": "50940",
    "end": "58820"
  },
  {
    "text": "you so much so hello everybody my name is Matt would I am the technology evangelist families and web services",
    "start": "58820",
    "end": "64559"
  },
  {
    "text": "that basically means that I get to come to events such as this and talk to smart people such as yourselves about cloud",
    "start": "64559",
    "end": "71010"
  },
  {
    "text": "computing in general answer any questions that you have and answer any questions you have about amazon's cloud platform specifically this always gets",
    "start": "71010",
    "end": "77970"
  },
  {
    "text": "left to the end so i just want to echo Radhika and thank you all very much for joining us here today it's a real",
    "start": "77970",
    "end": "83369"
  },
  {
    "text": "privilege to have you here I appreciate you're all busy people and you've taken time to join us today and it's a as a",
    "start": "83369",
    "end": "89009"
  },
  {
    "text": "real privilege to talk through some of the things we're doing at Amazon in the cloud computing space so I guess you're",
    "start": "89009",
    "end": "96299"
  },
  {
    "text": "all here this is an event focused towards developers building applications",
    "start": "96299",
    "end": "102390"
  },
  {
    "text": "and we see customers of all shapes and sizes building our applications on the",
    "start": "102390",
    "end": "107939"
  },
  {
    "text": "Amazon Cloud we have hundreds of thousands of customers now across 190 countries which as i remember is pretty",
    "start": "107939",
    "end": "114180"
  },
  {
    "text": "much all of them and they're all building our applications so whether that is applications which one on the",
    "start": "114180",
    "end": "119399"
  },
  {
    "text": "web with standard web applications social networks multiplayer online games",
    "start": "119399",
    "end": "124710"
  },
  {
    "text": "casual games you name it through to mobile applications delivered to iOS",
    "start": "124710",
    "end": "130020"
  },
  {
    "text": "devices to Android devices and building out deep deep experiences on",
    "start": "130020",
    "end": "136550"
  },
  {
    "text": "mobile mobile applications with the sort of flexible elastic back-end that we're",
    "start": "136550",
    "end": "141680"
  },
  {
    "text": "sort of well known for our we're seeing a lot of a lot of adoption in enterprise customers so people building out",
    "start": "141680",
    "end": "147500"
  },
  {
    "text": "business line of sight applications building out deep analytics around our platform and just out of left field",
    "start": "147500",
    "end": "153860"
  },
  {
    "text": "we're also seeing some adoption on Mars so this is one of my all-time favorite use cases from our friends at NASA this",
    "start": "153860",
    "end": "160520"
  },
  {
    "text": "is the NASA Jet Propulsion Laboratory NASA JPL and they are running this",
    "start": "160520",
    "end": "165530"
  },
  {
    "text": "little guy this is one of the one of the Mars rovers it's currently pootle around on the on the surface of Mars right now",
    "start": "165530",
    "end": "171050"
  },
  {
    "text": "and the bit that talks to AWS is up there in the top bit in the wall-e sort",
    "start": "171050",
    "end": "177140"
  },
  {
    "text": "of eyes so these guys have a to high-resolution 3d cameras and basically",
    "start": "177140",
    "end": "182720"
  },
  {
    "text": "they're continually planning the surface of Mars the red planet and pulling in information and the guys at NASA the",
    "start": "182720",
    "end": "188750"
  },
  {
    "text": "tactical command back at NASA use these images in the telemetry from the from the instrument from the from the rover",
    "start": "188750",
    "end": "194120"
  },
  {
    "text": "to basically guide are the little guy ran Mars so they pull in those high",
    "start": "194120",
    "end": "199310"
  },
  {
    "text": "resolution images are they run them through a workflow running on Amazon simple workflow and they build out an",
    "start": "199310",
    "end": "204680"
  },
  {
    "text": "image which looks a bit like this this is tiled generated on the Amazon Cloud this is a two gigapixel image which is",
    "start": "204680",
    "end": "211670"
  },
  {
    "text": "used for technical tactical direction of these little lot Mars rovers so you can see the rover itself down in the bottom",
    "start": "211670",
    "end": "217310"
  },
  {
    "text": "left hand corner if we pan across this massive gigapixel image you can see the little tracks and you can see the other",
    "start": "217310",
    "end": "223760"
  },
  {
    "text": "solar panels on the other side and the guys back at NASA here on earth basically get to click where they want",
    "start": "223760",
    "end": "228859"
  },
  {
    "text": "the Mars rover to go and they can take in the full 3d space in Mars navigate round rocks and if they see anything",
    "start": "228859",
    "end": "234440"
  },
  {
    "text": "interesting Martians or anything they can go offer and I investigate them so this pretty much is there is as broad as",
    "start": "234440",
    "end": "240859"
  },
  {
    "text": "you can get and when we started working on Amazon Web Services about six years ago H it was our sixth anniversary of",
    "start": "240859",
    "end": "247400"
  },
  {
    "text": "the launch of s three last month we very much thought that the advantages of utility computing so the elasticity the",
    "start": "247400",
    "end": "254570"
  },
  {
    "text": "removal of capital investment to be able to build applications sophisticated applications at any scale would really",
    "start": "254570",
    "end": "260750"
  },
  {
    "text": "be of a particular interest to startups who who were resource constrained but",
    "start": "260750",
    "end": "265909"
  },
  {
    "text": "what we've seen over to is this remarkable diversity of applications across web across the mobile space across business line of",
    "start": "265909",
    "end": "272690"
  },
  {
    "text": "sight applications disaster recovery data analytics all the way up into the celestial bodies running on Mars so",
    "start": "272690",
    "end": "280580"
  },
  {
    "text": "across all of these use cases we've really seen a trend an uptick in people building out you know what you can",
    "start": "280580",
    "end": "287000"
  },
  {
    "text": "consider sophisticated applications these are applications which are designed to take advantage of some of",
    "start": "287000",
    "end": "292400"
  },
  {
    "text": "the common elasticity found in cloud computing so by its sophisticated I",
    "start": "292400",
    "end": "298430"
  },
  {
    "text": "guess I'm really talking about applications that can scale so applications that can quickly respond and scale up when you have an increased",
    "start": "298430",
    "end": "304760"
  },
  {
    "text": "demand for resources and converse you can scale down when that demand starts to fall away applications which are",
    "start": "304760",
    "end": "310820"
  },
  {
    "text": "automated so you can quickly deploy development and test environment integration tests and move into an",
    "start": "310820",
    "end": "316970"
  },
  {
    "text": "automated production environment which again bends and flex based on your demand we've seen applications that are",
    "start": "316970",
    "end": "322760"
  },
  {
    "text": "becoming price aware that are taking advantage of some of the different pricing options that we've got using on-demand instances when it makes sense",
    "start": "322760",
    "end": "329240"
  },
  {
    "text": "but falling back to work with our spot instances where you basically get to set the price of the compute that you want",
    "start": "329240",
    "end": "335300"
  },
  {
    "text": "to use yourself so choosing and using our price and cost as a driver for their",
    "start": "335300",
    "end": "341030"
  },
  {
    "text": "architecture in the same way that you might consider demand a driver for the for your architecture and also are",
    "start": "341030",
    "end": "346760"
  },
  {
    "text": "flexible applications so applications which are agile and can respond quickly to the sort of business opportunities",
    "start": "346760",
    "end": "352610"
  },
  {
    "text": "that present themselves and I guess if if low cost and the removal of this sort",
    "start": "352610",
    "end": "358280"
  },
  {
    "text": "of initial capital spend is the sizzle the stake that keeps people coming back",
    "start": "358280",
    "end": "363530"
  },
  {
    "text": "really at any site at any size and any scope is this flexibility this increased agility that our customers see when",
    "start": "363530",
    "end": "369710"
  },
  {
    "text": "they're working in cloud environments so this is really what I define as a sophisticated application an application",
    "start": "369710",
    "end": "376070"
  },
  {
    "text": "which can take advantage of these sort of utility computing mechanics and the real goal you know is is is to be more",
    "start": "376070",
    "end": "383630"
  },
  {
    "text": "productive so you know you can define the cloud in a number of different ways but for me the cloud is a collection of",
    "start": "383630",
    "end": "389540"
  },
  {
    "text": "really productivity tools for tightly constrained domains and that really falls into engineering and into startups",
    "start": "389540",
    "end": "396500"
  },
  {
    "text": "particularly so the goal of our services is to hell our customers become more productive to move to market more quickly to remove",
    "start": "396500",
    "end": "403350"
  },
  {
    "text": "the sort of undifferentiated heavy lifting that's commonly associated with infrastructure provisioning and really",
    "start": "403350",
    "end": "409620"
  },
  {
    "text": "to allow our customers to focus back in on their core competency rather than having to worry about provisioning and",
    "start": "409620",
    "end": "416130"
  },
  {
    "text": "the the management and the maintenance of infrastructure pretty much any scale and this focus is really important so if",
    "start": "416130",
    "end": "423870"
  },
  {
    "text": "you consider the sort of typical application lifecycle you might have an initial idea and we don't have a service",
    "start": "423870",
    "end": "429630"
  },
  {
    "text": "for that yet you have to come up with that yourselves at the moment but then you move in and you start to develop your application you start to move",
    "start": "429630",
    "end": "436620"
  },
  {
    "text": "through the release phase to get it out to your customers and then you typically evaluate some of the data that your",
    "start": "436620",
    "end": "442320"
  },
  {
    "text": "application is generating and use some of that information use some of those metrics to iterate on your product idea",
    "start": "442320",
    "end": "448800"
  },
  {
    "text": "or if it's not working out to pivot and take some of your technology and apply it to a different domain so this is the typical sort of approach that customers",
    "start": "448800",
    "end": "456330"
  },
  {
    "text": "take in the development lifecycle very common in startups particularly startups are following the sort of lean",
    "start": "456330",
    "end": "461910"
  },
  {
    "text": "methodology from Eric Reese's book so the great thing about this life cycle is",
    "start": "461910",
    "end": "467910"
  },
  {
    "text": "that the faster you can run from development through release through evaluation through to the point where",
    "start": "467910",
    "end": "473250"
  },
  {
    "text": "you want to iterate or pivot the better this allows you to address customer needs much more quickly it allows you to",
    "start": "473250",
    "end": "479330"
  },
  {
    "text": "address new business opportunities as and when their rights the problem is that in traditionally provision",
    "start": "479330",
    "end": "485310"
  },
  {
    "text": "infrastructure infrastructure can act as a as friction for this process so I TS",
    "start": "485310",
    "end": "491760"
  },
  {
    "text": "is supposed to enable innovation but what we typically see in statically",
    "start": "491760",
    "end": "497220"
  },
  {
    "text": "provision traditionally provision infrastructure is that it actually acts to slow this cycle down it takes a long",
    "start": "497220",
    "end": "502410"
  },
  {
    "text": "time to provision new hardware you have to go and fix it when it breaks and all these sort of things and any of that",
    "start": "502410",
    "end": "507750"
  },
  {
    "text": "just takes your focus away from where it should be which is back on your customers so what we hope is that with",
    "start": "507750",
    "end": "513690"
  },
  {
    "text": "this with these flexible utility computing building blocks that we offer an Amazon is that we really want to help",
    "start": "513690",
    "end": "519450"
  },
  {
    "text": "customers accelerate this cycle to move through development more quickly to support a more successful release to",
    "start": "519450",
    "end": "525510"
  },
  {
    "text": "allow you to be able to evaluate the data that your application is generating and to be able to iterate and pivot to really address your own customers needs",
    "start": "525510",
    "end": "532420"
  },
  {
    "text": "so this means you can move to your Minimum Viable Product more quickly when you're getting up and running it also",
    "start": "532420",
    "end": "538160"
  },
  {
    "text": "means that you're faster to production and faster to your market and you can move very very smoothly from a",
    "start": "538160",
    "end": "544640"
  },
  {
    "text": "development a test environment on the cloud into a production environment it also means as I say it's also faster to",
    "start": "544640",
    "end": "550850"
  },
  {
    "text": "pivot so if something isn't working out you can simply spin down the infrastructure that you no longer need and try out another idea which may have",
    "start": "550850",
    "end": "558020"
  },
  {
    "text": "different infrastructure requirements there's no risk to taking these infrastructure building blocks and using them because when if you don't need them",
    "start": "558020",
    "end": "563660"
  },
  {
    "text": "anymore you can just decommission them and you stop paying for them so utility model so with all that said ask Rudy by",
    "start": "563660",
    "end": "569990"
  },
  {
    "text": "way of introduction for people that may not not be familiar with some of the benefits of working on the Amazon Cloud there's really three things that I want",
    "start": "569990",
    "end": "575660"
  },
  {
    "text": "to talk a talk today in in this session I want to talk a little bit about application architecture and give you",
    "start": "575660",
    "end": "581210"
  },
  {
    "text": "some insight into how some of our customers are utilizing this utility",
    "start": "581210",
    "end": "586250"
  },
  {
    "text": "model to build out highly available flexible scalable applications and then talk a little bit about some of our",
    "start": "586250",
    "end": "592700"
  },
  {
    "text": "newer services that enable you to build out these sophisticated services which are remain flexible but a much more",
    "start": "592700",
    "end": "600230"
  },
  {
    "text": "productive way of working and then we'll touch on at the end something that a lot of people are interested in which is how",
    "start": "600230",
    "end": "606470"
  },
  {
    "text": "we go about securing this and our customers role in securing applications in the cloud so so let's get started",
    "start": "606470",
    "end": "613000"
  },
  {
    "text": "this is a developer event and so there will be code up on stage I'm going to be",
    "start": "613000",
    "end": "618530"
  },
  {
    "text": "doing some some live demos so fingers crossed the demo overlords are smiling",
    "start": "618530",
    "end": "623570"
  },
  {
    "text": "upon me today and this is going to be a technical session so fair warning there so what I'm going to do is I'm basically",
    "start": "623570",
    "end": "631070"
  },
  {
    "text": "going to use this opportunity to build out a production a web application live",
    "start": "631070",
    "end": "636800"
  },
  {
    "text": "in front of you and like all good ideas this one started are on the back of a back of a napkin this is me scribbling",
    "start": "636800",
    "end": "643970"
  },
  {
    "text": "down some ideas for this event when we're planning it out for a web application which allows customers to share the things that they love so it",
    "start": "643970",
    "end": "650780"
  },
  {
    "text": "basically allows customers to upload photos and share them tag them and all the rest of it so this was drawn on the",
    "start": "650780",
    "end": "656420"
  },
  {
    "text": "back of a back of a napkin on a American Airlines flight over to the US and this",
    "start": "656420",
    "end": "662600"
  },
  {
    "text": "is what the application turned into so this is the application running live on the AWS cloud it's called likeability",
    "start": "662600",
    "end": "668150"
  },
  {
    "text": "and as I say allows customers to share the things that they love to share the things that they're passionate about photograph work there there are there",
    "start": "668150",
    "end": "675170"
  },
  {
    "text": "they're interested in upload them and share them with their friends so what I was thinking about this we sort of got",
    "start": "675170",
    "end": "681140"
  },
  {
    "text": "together we did a brainstorm and I'm sure all of you particularly the startups have I've done something similar where you get round your",
    "start": "681140",
    "end": "686570"
  },
  {
    "text": "whiteboard and really throw some ideas together and we wanted the sort of key feature to be a service which allowed",
    "start": "686570",
    "end": "693440"
  },
  {
    "text": "customers to share and tagged images right so nice and straight forward and some of the additional application",
    "start": "693440",
    "end": "699260"
  },
  {
    "text": "features that we wanted to support was that we wanted customers to be able to browse by tag we only customers to be",
    "start": "699260",
    "end": "704510"
  },
  {
    "text": "able to like images so we can get an idea of what the most popular images and the most popular things are up on the on",
    "start": "704510",
    "end": "710120"
  },
  {
    "text": "the service we only obviously customers to be able to view the images right we want to be able to collect some basic",
    "start": "710120",
    "end": "715460"
  },
  {
    "text": "statistics so we want to be able to collect the most views are the most viewed item and for those people that",
    "start": "715460",
    "end": "721340"
  },
  {
    "text": "are clicking our little heart or like button we won't be able to collect up what the most popular likes were I",
    "start": "721340",
    "end": "726350"
  },
  {
    "text": "really thread in some search and we only be able to support this across both web and mobile applications so this is our",
    "start": "726350",
    "end": "732560"
  },
  {
    "text": "sort of application definition just on a whiteboard but we also have some sort of operational concerns so how do we want",
    "start": "732560",
    "end": "739040"
  },
  {
    "text": "to implement this what was important to us in terms of delivering this service operationally well obviously we all need to be as available as possible not it to",
    "start": "739040",
    "end": "745700"
  },
  {
    "text": "be always up I will need to be scalable so when we hit the front page of hacker news and we had enough capacity or",
    "start": "745700",
    "end": "751850"
  },
  {
    "text": "architecture good increase when we have a sudden influx of new customers we only the thing to be fast so it could respond",
    "start": "751850",
    "end": "759950"
  },
  {
    "text": "quickly our customers love fast web web applications and we all need to be low-cost so we're going to be able to use some of the as I say thee the cost",
    "start": "759950",
    "end": "768200"
  },
  {
    "text": "optimization approaches that are common customers commonly used in order to be able to support the scale but also feel",
    "start": "768200",
    "end": "774260"
  },
  {
    "text": "to control costs when we get started so with that in mind this is the",
    "start": "774260",
    "end": "780080"
  },
  {
    "text": "application architecture that we came up with and this very much represents the sort of best practices that we see in",
    "start": "780080",
    "end": "785660"
  },
  {
    "text": "deploying applications are both own inside amazon and some of our customers use in deploying their own applications",
    "start": "785660",
    "end": "792040"
  },
  {
    "text": "so here's our application architecture a blueprint if you will for what we're going to build out we're going to build",
    "start": "792040",
    "end": "797870"
  },
  {
    "text": "out a sort of typical earth retail web application we're going to have a data store and for that we're",
    "start": "797870",
    "end": "803269"
  },
  {
    "text": "going to use Amazon DynamoDB I'll talk in detail about Amazon dynamodb but if you're not familiar with it it's a a",
    "start": "803269",
    "end": "809119"
  },
  {
    "text": "managed no SQL database service we're going to use Amazon ec2 the elastic",
    "start": "809119",
    "end": "814189"
  },
  {
    "text": "compute cloud for our application servers they're going to sit in the application tier and in front of that to control the load and the flow into these",
    "start": "814189",
    "end": "820790"
  },
  {
    "text": "into these are load balancers into these application service sorry we're going to use the elastic load balancing service",
    "start": "820790",
    "end": "826579"
  },
  {
    "text": "or or elb so that's our typical three-tier web application let's take a look at how we're going to provision",
    "start": "826579",
    "end": "832279"
  },
  {
    "text": "that now fingers crossed ladies and gentlemen I am going to try and do this live so I have backup videos if this",
    "start": "832279",
    "end": "838490"
  },
  {
    "text": "doesn't work but here we go okay 500 people in the room no pressure so this",
    "start": "838490",
    "end": "846319"
  },
  {
    "text": "is the Amazon Web management console if you not seen it before we have our services across the top everything from elastic beanstalk I which will hear more",
    "start": "846319",
    "end": "852559"
  },
  {
    "text": "about from my colleague Paul in the second session things like s3 the simple storage service we've got ec2 at the",
    "start": "852559",
    "end": "859009"
  },
  {
    "text": "virtual private cloud on and on and on and our rate of innovation is so high that we actually starting to run off the",
    "start": "859009",
    "end": "864049"
  },
  {
    "text": "top of our of our of our bar here so we have some of our services that don't quite fit on drop down here so I'm going",
    "start": "864049",
    "end": "870529"
  },
  {
    "text": "to take a look at dynamo dB amazon dynamo DB is as i say oh no SQL manage",
    "start": "870529",
    "end": "875899"
  },
  {
    "text": "database service it's very very easy to use and I want to give you a sense of just how easy and quick it is to provision a database which can really",
    "start": "875899",
    "end": "883309"
  },
  {
    "text": "operate at high scale and it's highly available so I have a couple of dynamo DB tables that we're going to use to",
    "start": "883309",
    "end": "889369"
  },
  {
    "text": "store data in already provisioned but I want to provision the the the new one here for you live so all we have to do",
    "start": "889369",
    "end": "895189"
  },
  {
    "text": "is we have to click on create table we give the table a quick name so I'm going to call it items and then because this",
    "start": "895189",
    "end": "902089"
  },
  {
    "text": "is a no SQL data store we don't have to provide any schema or any additional information to the database are the only",
    "start": "902089",
    "end": "907879"
  },
  {
    "text": "thing that we do have to provide is the primary key for the data this is the mechanism that we're going to use to retrieve data from our database so we",
    "start": "907879",
    "end": "914990"
  },
  {
    "text": "support a number of different primary keys both hash keys and hash and range keys and I'll talk about those in a",
    "start": "914990",
    "end": "921259"
  },
  {
    "text": "minute but for now I'm just going to use a standard hash key this is just a normal primary key with a unique",
    "start": "921259",
    "end": "926420"
  },
  {
    "text": "identifier and we're going to call that ID get a click continue the next I'm going to do is provision the capacity",
    "start": "926420",
    "end": "932419"
  },
  {
    "text": "that I'm going to need so Amazon dynamodb has a provision throughput model this allows you to",
    "start": "932419",
    "end": "937880"
  },
  {
    "text": "basically reserve the amount of i/o performance that your application needs in rights but reads and writes per",
    "start": "937880",
    "end": "943490"
  },
  {
    "text": "second so i'm going to set up that i need 50 reads and 50 writes per second i'll talk more in detail about this in a",
    "start": "943490",
    "end": "949130"
  },
  {
    "text": "minute what it really means for your application we're going to set up this provision throughput when your application starts to reach the limit of",
    "start": "949130",
    "end": "955820"
  },
  {
    "text": "your provision throughput will get a simple notification system alert which will be sent to us by email you can also",
    "start": "955820",
    "end": "962030"
  },
  {
    "text": "use this to ping a programmatic service to automatically scale your dynamodb provisioning so we'll go ahead and click",
    "start": "962030",
    "end": "968840"
  },
  {
    "text": "create table and that is pretty much all you need to do so now DynamoDB will well",
    "start": "968840",
    "end": "974030"
  },
  {
    "text": "as a service will go off and provision the infrastructure that it needs to support 50 reads and 50 writes per",
    "start": "974030",
    "end": "979640"
  },
  {
    "text": "second it'll do this on solid state disks up on the on the Amazon infrastructure and that's pretty much",
    "start": "979640",
    "end": "985010"
  },
  {
    "text": "all we have to do so we have to worry about provisioning the instances or the storage underneath it dynamo DB will",
    "start": "985010",
    "end": "990260"
  },
  {
    "text": "take care of all of that for us all we have to worry about is what is our data model look like what information does I",
    "start": "990260",
    "end": "995510"
  },
  {
    "text": "application want to put and get from dynamo dB so it's a very productive way of getting started the next I'm going to",
    "start": "995510",
    "end": "1001360"
  },
  {
    "text": "do is provision a full application web stack along our application architecture because Amazon Web Services provides its",
    "start": "1001360",
    "end": "1008980"
  },
  {
    "text": "collection of infrastructure building blocks we can go ahead and provision ec2",
    "start": "1008980",
    "end": "1014170"
  },
  {
    "text": "instances and low balances are by hand if we want to but because this is a programmatic or a programmable platform",
    "start": "1014170",
    "end": "1020110"
  },
  {
    "text": "all of our infrastructure is basically available at the end of an API call and this allows us to build out these sophisticated applications which can be",
    "start": "1020110",
    "end": "1027370"
  },
  {
    "text": "automatic and deployed automatically for that I'm going to use a service called AWS CloudFormation you can see the",
    "start": "1027370",
    "end": "1032890"
  },
  {
    "text": "dynamo DB table just provisioned it's all ready for use now we're going to go",
    "start": "1032890",
    "end": "1038050"
  },
  {
    "text": "to the cloud formation tab and we're going to spin up the rest of the infrastructure in an automatic way so I'm not going to go ahead and provision",
    "start": "1038050",
    "end": "1043870"
  },
  {
    "text": "these instances by hand instead I've already defined what my application architecture looks like in a very simple",
    "start": "1043870",
    "end": "1049270"
  },
  {
    "text": "JSON template and I'm going to go ahead and use that template to provision the full stack the full architecture so I'm",
    "start": "1049270",
    "end": "1055630"
  },
  {
    "text": "going to jump to the cloud formation tab here I'm going to click create new stack I'm going to give it a name so demo day",
    "start": "1055630",
    "end": "1060820"
  },
  {
    "text": "one and then I'm going to provide the template URL so I've stored the template up on Amazon s",
    "start": "1060820",
    "end": "1066760"
  },
  {
    "text": "three this is great for versioning and also great for sharing with other members of your team it's great if you want to spin up ass and developer",
    "start": "1066760",
    "end": "1073480"
  },
  {
    "text": "sandboxes or if you want to provision new services very very quickly and what this is going to do is it's going to",
    "start": "1073480",
    "end": "1078910"
  },
  {
    "text": "read in my application architecture so these three tiers with the load balancer with the elastic compute cloud",
    "start": "1078910",
    "end": "1084850"
  },
  {
    "text": "application servers we're going to store an s3 bucket to store the images that are our users going to upload but we",
    "start": "1084850",
    "end": "1091420"
  },
  {
    "text": "also need to tell it which DynamoDB tables to use in the application and then cloud formation will not only provision the infrastructure but it will",
    "start": "1091420",
    "end": "1097420"
  },
  {
    "text": "also go ahead and configure our application bootstrap or application so it can start to be used so we've got a",
    "start": "1097420",
    "end": "1103690"
  },
  {
    "text": "table for the items which is the items table that I just created and the other two that I had I had pre created and I",
    "start": "1103690",
    "end": "1109390"
  },
  {
    "text": "can specify a key name here if I want to log into the instances that they're going to be provisioned on our behalf I click the like knowledge that click",
    "start": "1109390",
    "end": "1116110"
  },
  {
    "text": "continue and finally review my changes click continue and that's it so now",
    "start": "1116110",
    "end": "1121540"
  },
  {
    "text": "cloud formation will go ahead and provision the resources that we want to cloud formation is a free service you",
    "start": "1121540",
    "end": "1127300"
  },
  {
    "text": "only pay for the resources that your provision it's also really nice sir a tools and additional services built into",
    "start": "1127300",
    "end": "1133030"
  },
  {
    "text": "it which allow you to manage your infrastructure or adjust your infrastructure when it's in a running state so that takes about three minutes",
    "start": "1133030",
    "end": "1139360"
  },
  {
    "text": "to bake so I'm going to jump back to my slides and we'll come back to this when it's provisioned in a second okay I some",
    "start": "1139360",
    "end": "1146230"
  },
  {
    "text": "videos lined up just in case we had connectivity issues so I'm just going to click through these are really quickly so what do we just launched right so",
    "start": "1146230",
    "end": "1152860"
  },
  {
    "text": "what we just launched in just a couple of clicks in just a couple of minutes was basically a full production stack so",
    "start": "1152860",
    "end": "1158770"
  },
  {
    "text": "this is a collection of infrastructure building blocks which have been provisioned ready for production use these are battle-hardened and ready for",
    "start": "1158770",
    "end": "1165310"
  },
  {
    "text": "use so we followed cloud architecture best practices we followed the the rules",
    "start": "1165310",
    "end": "1170620"
  },
  {
    "text": "and the experience that a lot of our customers are built up over the years in order to be able to drive application",
    "start": "1170620",
    "end": "1177010"
  },
  {
    "text": "architectures which are scalable which our fault tolerant and which can work in a low-cost way so are our CTO said this",
    "start": "1177010",
    "end": "1186070"
  },
  {
    "text": "many many years ago verna vocals amazoncom CTO he basically said that with computer systems or infrastructure",
    "start": "1186070",
    "end": "1192340"
  },
  {
    "text": "everything fails all of the time and this is one of these sort of guiding features of cloud architecture the fact",
    "start": "1192340",
    "end": "1198610"
  },
  {
    "text": "that we can't stop things failing the cloud any more than you can stop the hard drive in your laptop failing or",
    "start": "1198610",
    "end": "1204159"
  },
  {
    "text": "connection failing to your house what we can do is we can use the fact that we know that computer systems are brittle",
    "start": "1204159",
    "end": "1209860"
  },
  {
    "text": "and you can have power failures and you can have cpu and drive failures and all the rest of it and use that to drive the",
    "start": "1209860",
    "end": "1215590"
  },
  {
    "text": "definition of our architecture going forwards so we're going to design for the fact that failure can occur we can",
    "start": "1215590",
    "end": "1221559"
  },
  {
    "text": "hope that it won't but eventually over a long enough time frame things work might go wrong but we can use that to drive",
    "start": "1221559",
    "end": "1227289"
  },
  {
    "text": "our architecture to drive it that if we expect failure to happen we can recover quickly from that failure we can deliver",
    "start": "1227289",
    "end": "1233110"
  },
  {
    "text": "higher availability applications and there's a nice sweetener the very same application architecture practices I'm",
    "start": "1233110",
    "end": "1238600"
  },
  {
    "text": "going to talk about are used to deliver a scalable architecture so the first",
    "start": "1238600",
    "end": "1244570"
  },
  {
    "text": "thing that we want to do is to start to think of our application in terms of collection of decoupled services so in",
    "start": "1244570",
    "end": "1251049"
  },
  {
    "text": "static static traditionally provision infrastructure it's very common because you want to cut costs to overload your",
    "start": "1251049",
    "end": "1257710"
  },
  {
    "text": "individual in service right so the individual hardware that you're provisioning ends up being something to",
    "start": "1257710",
    "end": "1262750"
  },
  {
    "text": "everyone so on that you'll run your database your application servers you might even run your load balancer on that problem here is obviously you've",
    "start": "1262750",
    "end": "1268570"
  },
  {
    "text": "got one massive single point of failure if anything happens to that one server then then your application will will",
    "start": "1268570",
    "end": "1274510"
  },
  {
    "text": "become unavailable but in decoupling in this way and starting to think in terms of these horizontal tears over here I",
    "start": "1274510",
    "end": "1280390"
  },
  {
    "text": "have a load balancer we have our application servers and we have our data store beneath it and any other asynchronous processes that you might",
    "start": "1280390",
    "end": "1286750"
  },
  {
    "text": "have under the hood you can start to decouple and remove these single points of failure so we start to decouple our",
    "start": "1286750",
    "end": "1292390"
  },
  {
    "text": "load balancer from our application servers and our dates store into these horizontal tears the next thing that we",
    "start": "1292390",
    "end": "1298029"
  },
  {
    "text": "want to do is we want to ensure that our application servers are effectively stateless this means that each",
    "start": "1298029",
    "end": "1303610"
  },
  {
    "text": "application server each instance that we're going to run in our application tier doesn't need to know too much about",
    "start": "1303610",
    "end": "1309039"
  },
  {
    "text": "any of the other instances that are running that they're not going to share too much and we're not going to maintain the state on a single instance if you do",
    "start": "1309039",
    "end": "1316510"
  },
  {
    "text": "that it's a bad idea because should that instance fail or become the application crash on that instance you're going to",
    "start": "1316510",
    "end": "1321669"
  },
  {
    "text": "lose the state of your running application so you want to ensure that these things are stateless that they're persisting their state either in a data",
    "start": "1321669",
    "end": "1328419"
  },
  {
    "text": "store in some other caching layer and that you can then start to replicate out your servers",
    "start": "1328419",
    "end": "1334390"
  },
  {
    "text": "provision as much capacity as you need so providing this sort of stateless environment a safeguards you fell apart",
    "start": "1334390",
    "end": "1340870"
  },
  {
    "text": "away from the fact that an instance might fail but it also allows you to start adding redundancy into each of",
    "start": "1340870",
    "end": "1346780"
  },
  {
    "text": "your into application tier so should one of your instances become unavailable obviously you've got no single point of",
    "start": "1346780",
    "end": "1352840"
  },
  {
    "text": "failure you can start to you can lose a single instance and because you've got redundancy across the application tier",
    "start": "1352840",
    "end": "1359170"
  },
  {
    "text": "your application will remain available and of course because we have utility elastic provisioning you can basically",
    "start": "1359170",
    "end": "1366970"
  },
  {
    "text": "just spin up a replacement as easy as anything else and because you can respond to that programmatically it",
    "start": "1366970",
    "end": "1372400"
  },
  {
    "text": "means that you're not going to get woken up when you're on page of duty or when things do start to go wrong so this stateless decoupled approach is very",
    "start": "1372400",
    "end": "1378730"
  },
  {
    "text": "very important and housing your application servers in this logical manner across these horizontal tears is",
    "start": "1378730",
    "end": "1384070"
  },
  {
    "text": "a very powerful approach to delivering high availability applications beyond",
    "start": "1384070",
    "end": "1389290"
  },
  {
    "text": "that you can also spread your spread your application instances across what we call availability zones so",
    "start": "1389290",
    "end": "1395080"
  },
  {
    "text": "availability zones are one or more data centers which are redundantly powered were done utley connected they're all",
    "start": "1395080",
    "end": "1401950"
  },
  {
    "text": "the rest of it so you can start to mitigate not only for individual server or hardware failure but you can mitigate",
    "start": "1401950",
    "end": "1407590"
  },
  {
    "text": "against the entire data center failure by spreading out your applications across these availability zones and",
    "start": "1407590",
    "end": "1414040"
  },
  {
    "text": "these availability zones are on separate flood plains and fault lines and all the rest of it so that sort of takes care of",
    "start": "1414040",
    "end": "1420360"
  },
  {
    "text": "removing the single points of failure by adding additional layers of redundancy into your application tier and allowing",
    "start": "1420360",
    "end": "1426880"
  },
  {
    "text": "you to be able to recover from these failures very very quickly but we also talked about this application wanting to be scalable so the top right there so",
    "start": "1426880",
    "end": "1433750"
  },
  {
    "text": "let's take a quick look at that so the number of approaches that you can employ here one is a vertical scaling because",
    "start": "1433750",
    "end": "1439810"
  },
  {
    "text": "your provisioned on an elastic infrastructure you can basically increase the hardware resources that your application servers are running",
    "start": "1439810",
    "end": "1445660"
  },
  {
    "text": "against because you basically have a machine image which you can redeploy on different hardware you've decoupled your",
    "start": "1445660",
    "end": "1452320"
  },
  {
    "text": "application from the from the hardware that it's running on and so you can start to scale up we call it vertical scaling you can start to scale up your",
    "start": "1452320",
    "end": "1458890"
  },
  {
    "text": "application tears by throwing more CPU more memory more metal at the problem",
    "start": "1458890",
    "end": "1464020"
  },
  {
    "text": "basically and you can do this in a scalable way if you can increase the amount of a cpu memory resources available to your",
    "start": "1464020",
    "end": "1470470"
  },
  {
    "text": "application or your database or anything else as and when you need additional capacity and you can scale back down as",
    "start": "1470470",
    "end": "1476380"
  },
  {
    "text": "and when you need to so that's one of the advances running on this utility environment where we have a number of",
    "start": "1476380",
    "end": "1482050"
  },
  {
    "text": "different instance types physical hardware that you can run against so",
    "start": "1482050",
    "end": "1487630"
  },
  {
    "text": "that's one approach the other approach that a lot of customers use is what's called horizontal scaling so again",
    "start": "1487630",
    "end": "1493060"
  },
  {
    "text": "because we've got this decoupled stateless architecture which originally we put in place to maintain availability",
    "start": "1493060",
    "end": "1499390"
  },
  {
    "text": "and reduce single points of failure what we actually get for free if you like is additional scale so the dirty secret of",
    "start": "1499390",
    "end": "1506500"
  },
  {
    "text": "scale is really the most customers have a pretty good idea of their operational limits or when they start working on",
    "start": "1506500",
    "end": "1512590"
  },
  {
    "text": "things but this approach lets you have your cake and eat it basically you can provision an architect for high",
    "start": "1512590",
    "end": "1518410"
  },
  {
    "text": "availability which everybody needs or you don't want your application to be down at any point but you basically get",
    "start": "1518410",
    "end": "1523450"
  },
  {
    "text": "scale for free so you can do this by basically adding additional instances as you adding additional resources into the",
    "start": "1523450",
    "end": "1529870"
  },
  {
    "text": "application tier so you can add additional instances and remember this is an elastic environment so that can go as basically as wide as you want as and",
    "start": "1529870",
    "end": "1537160"
  },
  {
    "text": "when you need additional capacity and this is a very good way and you can use a mixture of vertical scaling and",
    "start": "1537160",
    "end": "1542530"
  },
  {
    "text": "horizontal scaling in order to find the right cost point for your application it may be that a large number of small",
    "start": "1542530",
    "end": "1548080"
  },
  {
    "text": "service if you're running a simple service is much more effective than running a small number of large service",
    "start": "1548080",
    "end": "1555010"
  },
  {
    "text": "for example but you get the choice of where to balance that so it's a nice flexible approach so you get to scale up",
    "start": "1555010",
    "end": "1560200"
  },
  {
    "text": "when you start to start to receive a bit of a bit of attention and when you're on the front page of TechCrunch and running",
    "start": "1560200",
    "end": "1566350"
  },
  {
    "text": "wing or startup competitions you can provision these additional servers extremely quickly to able to respond to",
    "start": "1566350",
    "end": "1572110"
  },
  {
    "text": "that conversely with this approach you can also scale down your architecture",
    "start": "1572110",
    "end": "1577450"
  },
  {
    "text": "and because we have utility meted billing as soon as you start to scale down or decommission your architecture",
    "start": "1577450",
    "end": "1582760"
  },
  {
    "text": "this could be for example at night when nobody's using your application it could be that you need to scale up for a to",
    "start": "1582760",
    "end": "1589960"
  },
  {
    "text": "support a particular event or to support a particular period in time as we have to do at Amazon to support the Christmas",
    "start": "1589960",
    "end": "1595330"
  },
  {
    "text": "rush but when those peak times aren't there so at night and the rest of the year you can",
    "start": "1595330",
    "end": "1600990"
  },
  {
    "text": "go down your infrastructure because we have this utility metered billing you stop paying for your infrastructure as soon as you as soon as you start as soon",
    "start": "1600990",
    "end": "1607710"
  },
  {
    "text": "as you decommission it so by removing that infrastructure you stop paying for it you can find significant cost savings there so we've got as I say we're",
    "start": "1607710",
    "end": "1615690"
  },
  {
    "text": "talking about sophisticated applications here one aspect of this sophistication is really that we can drive an automated",
    "start": "1615690",
    "end": "1621500"
  },
  {
    "text": "environment here where some services to help you with this automatic scaling imaginatively enough it's called auto",
    "start": "1621500",
    "end": "1627540"
  },
  {
    "text": "scaling the auto scaling service and we're very bare-bones an Amazon where you know we just call things what they",
    "start": "1627540",
    "end": "1632910"
  },
  {
    "text": "are so we have an auto scaling service which will allow you to set the operational thresholds on your service",
    "start": "1632910",
    "end": "1638610"
  },
  {
    "text": "and the way it works is like this so you basically specify a launch configuration this is basically telling the auth the",
    "start": "1638610",
    "end": "1645420"
  },
  {
    "text": "auto scanning service what to do when it launches a new instance so which virtual machine to apply to which particular",
    "start": "1645420",
    "end": "1652320"
  },
  {
    "text": "size of instance and how to deploy those and any other configuration details that you might need and then deploy those",
    "start": "1652320",
    "end": "1658200"
  },
  {
    "text": "into what we call an auto scaling group and manages the metrics across that auto scaling group so auto scaling is plugged",
    "start": "1658200",
    "end": "1664500"
  },
  {
    "text": "into the cloud watch monitoring service to pull in the CPU and all the other metrics and so we can pull in a network",
    "start": "1664500",
    "end": "1671790"
  },
  {
    "text": "disk i/o we can pull in any custom metrics that you might want to track so page load time database query time and",
    "start": "1671790",
    "end": "1678630"
  },
  {
    "text": "we can start to drews those to drive our application architecture in an elastic way so we can collect these metrics",
    "start": "1678630",
    "end": "1685620"
  },
  {
    "text": "they're available free to any instance that you're running on the amazon and the amazon platform you can increase the",
    "start": "1685620",
    "end": "1691350"
  },
  {
    "text": "resolution by paying a small addition to the hourly charge it's five minutes for free or one minute resolution and you",
    "start": "1691350",
    "end": "1697740"
  },
  {
    "text": "can set what we call cloud watch alarms so these are the operational limits of running your architecture so they may be",
    "start": "1697740",
    "end": "1704100"
  },
  {
    "text": "the amount of I opposite your applications currently supporting or the page load time and you can start set",
    "start": "1704100",
    "end": "1709170"
  },
  {
    "text": "these operational thresholds and monitor those when your application architecture starts to move outside those operational",
    "start": "1709170",
    "end": "1715620"
  },
  {
    "text": "thresholds so when page load time starts to increase because you're seeing an increase in demand and then you can",
    "start": "1715620",
    "end": "1721110"
  },
  {
    "text": "trigger auto scaling policies and these auto scanning policies can add or remove architecture from your environment and",
    "start": "1721110",
    "end": "1726929"
  },
  {
    "text": "because we have this stateless decoupled system it's perfectly safe to do that so this will do this the auto scaling",
    "start": "1726929",
    "end": "1733320"
  },
  {
    "text": "service will do this within pounds so auto scaling is not going to go off and provision in million new servers and leave you with a big bill at",
    "start": "1733320",
    "end": "1739210"
  },
  {
    "text": "the end of the month are you set the operational bounds that you want to work with and then the auto scaling service will work within those this is what it",
    "start": "1739210",
    "end": "1746140"
  },
  {
    "text": "looks like if you're working with the with the AWS tools on the command line so you can create a launch configuration here you you give it a name web launch",
    "start": "1746140",
    "end": "1753220"
  },
  {
    "text": "config in this case you give it the image ID as I said and the instance type that you want to that you want to launch",
    "start": "1753220",
    "end": "1758740"
  },
  {
    "text": "on you can also give it security groups and other configuration names once you created this launch configuration this",
    "start": "1758740",
    "end": "1764380"
  },
  {
    "text": "is the this is a cookie cutter for building out or adding instances into into your wider auto scaling group you",
    "start": "1764380",
    "end": "1772150"
  },
  {
    "text": "create your new auto scaling group these are empty by default and the auto scaling service will provision instances",
    "start": "1772150",
    "end": "1778420"
  },
  {
    "text": "inside that to reach your operational thresholds so you can set which availability zones you want to run the instances across for maximum",
    "start": "1778420",
    "end": "1785020"
  },
  {
    "text": "availability you say the launch configuration the template that you want to provision the instances against you",
    "start": "1785020",
    "end": "1790090"
  },
  {
    "text": "set a minimum and a maximum size these are the operational bounds auto scaling won't move outside there's operational",
    "start": "1790090",
    "end": "1795400"
  },
  {
    "text": "bound and the auto scaling service will work along with the cloud watch metrics service to register and deregister these",
    "start": "1795400",
    "end": "1801790"
  },
  {
    "text": "instances with the elastic load balancing service you can also set the minimum the maximum size to be the same",
    "start": "1801790",
    "end": "1807850"
  },
  {
    "text": "so if you set them to both be 20 for example the auto scaling service will ensure that there's also always 20",
    "start": "1807850",
    "end": "1813520"
  },
  {
    "text": "instances running aside the auto scaling group so you can build self healing systems that automatically recover from failure in that way finally you put the",
    "start": "1813520",
    "end": "1821500"
  },
  {
    "text": "auto scaling policy against the auto scaling group so we've got a scale-up policy here where we're going to make a an adjustment of ten percent in changing",
    "start": "1821500",
    "end": "1829090"
  },
  {
    "text": "capacity and then there's a cool-down that you can give to the auto scaling service which will mean that it will not",
    "start": "1829090",
    "end": "1834220"
  },
  {
    "text": "be retried within in this case 300 seconds so you can make sure that you provision the architecture and you're responding to that capacity before these",
    "start": "1834220",
    "end": "1840970"
  },
  {
    "text": "policies fire again and these user deployed in pairs want to scale up but also want to scale down and this means",
    "start": "1840970",
    "end": "1846550"
  },
  {
    "text": "that when you start to see a decrease in your capacity or improvement in performance in your in your operational metrics you can start to scale down your",
    "start": "1846550",
    "end": "1853420"
  },
  {
    "text": "infrastructure when you no longer need it and you stop paying for it at that point so now we have our load balancer",
    "start": "1853420",
    "end": "1859600"
  },
  {
    "text": "we have our application servers we have our auto scaling service and we have our dynamodb tables and all of that was",
    "start": "1859600",
    "end": "1864880"
  },
  {
    "text": "provisioned along the lines of the CloudFormation template that just used so again I'm going to cross my",
    "start": "1864880",
    "end": "1870940"
  },
  {
    "text": "fingers and dive back in to the CloudFormation template so here's the the cloud formation tap that we talked",
    "start": "1870940",
    "end": "1877510"
  },
  {
    "text": "about before I'm just going to click refresh here and we can see that the status has changed from creation into",
    "start": "1877510",
    "end": "1882970"
  },
  {
    "text": "the fact that it has created and if we dive into this in a bit more detail we can click on the the stack the cloud",
    "start": "1882970",
    "end": "1888490"
  },
  {
    "text": "formation stat that I provisioned and we can jump in and see the resources that have been provisioned on our behalf so",
    "start": "1888490",
    "end": "1893650"
  },
  {
    "text": "again these are the infrastructure building blocks which cloud formation is provisioned so you can see we've got a cloud formation user so I've created a",
    "start": "1893650",
    "end": "1900010"
  },
  {
    "text": "new identity and access management user so this is nice and secure this isn't using my master account credentials just",
    "start": "1900010",
    "end": "1906070"
  },
  {
    "text": "to in order to be able to mediate access into an s3 bucket we have the load balancer that's been provisioned here we",
    "start": "1906070",
    "end": "1913210"
  },
  {
    "text": "have a weight handle this is a cloud formation technique which will ensure that the application is fully spun up",
    "start": "1913210",
    "end": "1918610"
  },
  {
    "text": "and it will wait to mark the stack is completed until the application has been provisioned the security groups to run",
    "start": "1918610",
    "end": "1925570"
  },
  {
    "text": "the application servers in the launch configuration that I mentioned the web server group and another weight",
    "start": "1925570",
    "end": "1930700"
  },
  {
    "text": "condition there so all of this provisioned along these best practices and connected up using this template",
    "start": "1930700",
    "end": "1937210"
  },
  {
    "text": "whoops I'm sorry about it so the other thing that cloud formation does is it",
    "start": "1937210",
    "end": "1942970"
  },
  {
    "text": "can specify outputs and so what I've done here is I've told cloud formation to pull out the URL of the elastic load",
    "start": "1942970",
    "end": "1949180"
  },
  {
    "text": "balancer so that we can take a look to see if our application is running so all I have to do is click up here and we can",
    "start": "1949180",
    "end": "1954790"
  },
  {
    "text": "see that we have a fresh instance of our likeability app running live on AWS and I can go ahead and try and share",
    "start": "1954790",
    "end": "1960430"
  },
  {
    "text": "something this will upload an image into into amazon s3 and it'll register all",
    "start": "1960430",
    "end": "1965620"
  },
  {
    "text": "the metadata for the image into the dynamo DB tables that we created so i'm going to have ahead and upload one of my",
    "start": "1965620",
    "end": "1970690"
  },
  {
    "text": "favorite things cupcakes from magnolia bakery here we go we're going to share",
    "start": "1970690",
    "end": "1976990"
  },
  {
    "text": "something this is going to do the upload commit the upload to s3 and there are my favorite cupcakes uploaded running on",
    "start": "1976990",
    "end": "1983560"
  },
  {
    "text": "Amazon Cloud the metadata again written to dynamo dB all provisioned with as you saw just a couple of clicks and provisioned in I guess less than five or",
    "start": "1983560",
    "end": "1990400"
  },
  {
    "text": "ten minutes we have a like button down here we have tags at people can browse and we can just click like and you can",
    "start": "1990400",
    "end": "1996880"
  },
  {
    "text": "see the speed of dynamo DB there it's literally the page refresh time before we start the lights improve and you can see we're",
    "start": "1996880",
    "end": "2003390"
  },
  {
    "text": "recording the views and also the likes there and will be generating some thumbnails I'll talk to you about how that works in just a second so that's",
    "start": "2003390",
    "end": "2011220"
  },
  {
    "text": "the application running live there's one other thing that I wanted to show you i have a video for this and that is how to",
    "start": "2011220",
    "end": "2016740"
  },
  {
    "text": "register the load balancer information against a particular domain name so we",
    "start": "2016740",
    "end": "2022529"
  },
  {
    "text": "have a service for this the load balancer will give you a cname back in response but we have a service called",
    "start": "2022529",
    "end": "2028080"
  },
  {
    "text": "route 53 which is already playing my apologies go back no go back pause every",
    "start": "2028080",
    "end": "2033899"
  },
  {
    "text": "I so we have a service called at the route 53 which will is basically an on-demand elastic dns service and it's",
    "start": "2033899",
    "end": "2042299"
  },
  {
    "text": "also tied into some of our elastic services such as the elastic load balancer and that means that we can map",
    "start": "2042299",
    "end": "2047669"
  },
  {
    "text": "our elastic load balancer directly to the root apex of our domain name so i",
    "start": "2047669",
    "end": "2052858"
  },
  {
    "text": "can show this happening here so we're back in the route 53 console here i've specified the the the hosted zone which",
    "start": "2052859",
    "end": "2059908"
  },
  {
    "text": "is the likability me a URL from there oh I'm sorry there we go so we can go to",
    "start": "2059909",
    "end": "2066868"
  },
  {
    "text": "the record sets to adjust those you can see that I can look at the record sets we have the the bare bones for the for",
    "start": "2066869",
    "end": "2073169"
  },
  {
    "text": "the URL there I can simply specify the cine for my for my dynamic for my",
    "start": "2073169",
    "end": "2080158"
  },
  {
    "text": "elastic load balancer and that's it it's all hooked up so we don't have to directly map the URL or saw the IP",
    "start": "2080159",
    "end": "2086849"
  },
  {
    "text": "address of our elastic load bounce or anything like that we can simply register the cname at the root apex and",
    "start": "2086849",
    "end": "2092628"
  },
  {
    "text": "route 53 knows to talk to that to direct traffic in the right way it'll direct",
    "start": "2092629",
    "end": "2097920"
  },
  {
    "text": "traffic the elastic load balancer two instances that have the lowest number of operational metrics so that are less",
    "start": "2097920",
    "end": "2104609"
  },
  {
    "text": "used and also do round-robin direction across availability zones and it'll also",
    "start": "2104609",
    "end": "2109770"
  },
  {
    "text": "do latency based delivery so if you have applications running across the various different geographic regions you can",
    "start": "2109770",
    "end": "2116070"
  },
  {
    "text": "route all of that through route 53 and they'll take into account the latency of the request to push out the the the",
    "start": "2116070",
    "end": "2122609"
  },
  {
    "text": "request to the lowest latency region depending on the source of origin this is the demo just again that the resort",
    "start": "2122609",
    "end": "2129119"
  },
  {
    "text": "for so what we set up now is a production stack with our load balancer",
    "start": "2129119",
    "end": "2134310"
  },
  {
    "text": "which is tied into our auto service which is our monitoring and scaling dynamically our elastic infrastructure in our application tier",
    "start": "2134310",
    "end": "2140760"
  },
  {
    "text": "you can see here that we we can still have a data store problem right so we",
    "start": "2140760",
    "end": "2145770"
  },
  {
    "text": "still have potentially a single point of failure in the data store database is a relatively challenging to scale and the",
    "start": "2145770",
    "end": "2151980"
  },
  {
    "text": "problem with that is that particularly with relational databases the performance starts to decrease at scale",
    "start": "2151980",
    "end": "2157589"
  },
  {
    "text": "so the more queries you're throwing at your relational database the more the",
    "start": "2157589",
    "end": "2163140"
  },
  {
    "text": "more data you've got in that database or the complexity of the queries that you're running across that database are you see a significant degradation in",
    "start": "2163140",
    "end": "2169619"
  },
  {
    "text": "performance as that scale increases the problem with this is that your application typically requires a",
    "start": "2169619",
    "end": "2175320"
  },
  {
    "text": "predictable consistent performance so this dotted line on my sort of business school 101 graph here of performance",
    "start": "2175320",
    "end": "2181560"
  },
  {
    "text": "against scale is what your application is designed for and what your application requires to deliver on this",
    "start": "2181560",
    "end": "2187109"
  },
  {
    "text": "fast high availability roadmap that we set out on our whiteboard the problem is",
    "start": "2187109",
    "end": "2192630"
  },
  {
    "text": "that with relational databases as scale starts to increase you see this sort of degradation in performance and it gets",
    "start": "2192630",
    "end": "2198000"
  },
  {
    "text": "worse and worse and worse as highlighted by this sort of big pink blob but this big pink blob represents really a",
    "start": "2198000",
    "end": "2204150"
  },
  {
    "text": "multitude of sins it represents a whole load of work that you have to do in order to manage that relational data in",
    "start": "2204150",
    "end": "2210930"
  },
  {
    "text": "order to be able to manage that relational database yeah start thinking about data sharding and data caching you",
    "start": "2210930",
    "end": "2216300"
  },
  {
    "text": "have to start thinking about provisioning you Hardware if you're not yet running up on the Amazon Cloud you have to think about managing clusters",
    "start": "2216300",
    "end": "2221730"
  },
  {
    "text": "and splitting your data across instances for high availability and for scale and then how to manage that in a",
    "start": "2221730",
    "end": "2227640"
  },
  {
    "text": "fault-tolerant way and none of this really has very much to do at all with the applications that you want to build this very much falls under this",
    "start": "2227640",
    "end": "2234420"
  },
  {
    "text": "undifferentiated heavy lifting that I'm talking about none of these really providing differentiating value to your",
    "start": "2234420",
    "end": "2240390"
  },
  {
    "text": "business they're just the cost of getting your application out the door and scaling it up as more customers want",
    "start": "2240390",
    "end": "2245760"
  },
  {
    "text": "to make use of it and where we see these particularly thorny technical challenges at amazon this is where we want to",
    "start": "2245760",
    "end": "2251460"
  },
  {
    "text": "innovate on behalf of our customers and so we have a service which we rolled out a couple of months ago I called dynamodb",
    "start": "2251460",
    "end": "2258180"
  },
  {
    "text": "you've already seen me provision a table and how quickly that happens but DynamoDB is a fully managed no SQL",
    "start": "2258180",
    "end": "2264569"
  },
  {
    "text": "database service that is designed to provide this consistently fast before moments a predictable performance that",
    "start": "2264569",
    "end": "2271109"
  },
  {
    "text": "your applications desire so it's designed with low latency in mind so you can expect single-digit Layton sees on",
    "start": "2271109",
    "end": "2277469"
  },
  {
    "text": "your queries and on your your rights and your reads so less than five milliseconds for reads and less than",
    "start": "2277469",
    "end": "2282989"
  },
  {
    "text": "about 10 milliseconds for rights as I say all of that is possible because we're backing this on solid state disk",
    "start": "2282989",
    "end": "2288239"
  },
  {
    "text": "so all of the dynamo DB data is stored on SSDs up on the Amazon Cloud and we use that to provide this this very low",
    "start": "2288239",
    "end": "2295319"
  },
  {
    "text": "latency access it also provides seamless scalability so there are no table size",
    "start": "2295319",
    "end": "2300839"
  },
  {
    "text": "limits you can put as much data as you want into dynamodb and it'll handle it it's got unlimited storage and it will",
    "start": "2300839",
    "end": "2306930"
  },
  {
    "text": "handle the live repartitioning of the data under the hood so you don't have to worry too much about that its goal",
    "start": "2306930",
    "end": "2312329"
  },
  {
    "text": "really is to provide all of this the speed the persistent performance really without any administration so there's no",
    "start": "2312329",
    "end": "2319589"
  },
  {
    "text": "need to go in and manage a distributed fault tolerant application architecture just to handle your your data store this",
    "start": "2319589",
    "end": "2326219"
  },
  {
    "text": "is really point-and-click just as you saw so when I click create table and fire and went through the what was it three or four clicks to provision that",
    "start": "2326219",
    "end": "2332099"
  },
  {
    "text": "DynamoDB will handle all of the provisioning of the of the infrastructure under the hood of the storage under the hood announced to be",
    "start": "2332099",
    "end": "2338130"
  },
  {
    "text": "able to put my data in and get it out it's designed to me is obviously durable and available so DynamoDB has consistent",
    "start": "2338130",
    "end": "2345450"
  },
  {
    "text": "a disc only rights so one way that you can work with these relational databases at scale is to put a cache in front of",
    "start": "2345450",
    "end": "2351150"
  },
  {
    "text": "them but then you have to worry about cache misses and availability of the cash and all those sort of things it's",
    "start": "2351150",
    "end": "2356579"
  },
  {
    "text": "not ideal we're DynamoDB we only acknowledge that a right has been completed in that very low latency time",
    "start": "2356579",
    "end": "2362489"
  },
  {
    "text": "frame I wanted to actually hit a disc and when it's copied across multiple data centers and then we'll copy across",
    "start": "2362489",
    "end": "2368249"
  },
  {
    "text": "multiple availability availability zones asynchronously from there and as I say",
    "start": "2368249",
    "end": "2374190"
  },
  {
    "text": "this predictable performance is is very important and it's delivered on DynamoDB with a approach that we call provision",
    "start": "2374190",
    "end": "2381359"
  },
  {
    "text": "throughput so provision throughput allows you to face it reserve the amount of i/o through your application needs so",
    "start": "2381359",
    "end": "2387960"
  },
  {
    "text": "you can set this per table as you saw when I span this up originally this was set up at creation but you can also",
    "start": "2387960",
    "end": "2393749"
  },
  {
    "text": "scale it at any time via the API and if critically you can do that without any",
    "start": "2393749",
    "end": "2399660"
  },
  {
    "text": "downtime so DynamoDB will stay available as scaling itself under the hood as your",
    "start": "2399660",
    "end": "2404950"
  },
  {
    "text": "twiddling the dial to provision an additional throughput additional read and write I oh so let's take a look at",
    "start": "2404950",
    "end": "2411250"
  },
  {
    "text": "what this actually looks like so here we can see just what it takes to increase",
    "start": "2411250",
    "end": "2416440"
  },
  {
    "text": "the provision throughput of an instance I just go in I click modify table I",
    "start": "2416440",
    "end": "2421800"
  },
  {
    "text": "increase the amount of read and write units and I click okay and we're done and what dynamodb were is doing under",
    "start": "2421800",
    "end": "2428800"
  },
  {
    "text": "the hood is provisioning additional additional discs additional infrastructure in order to be able to",
    "start": "2428800",
    "end": "2434770"
  },
  {
    "text": "deliver on your reserve and you can do that programmatically or as you can see live here as soon as you click update",
    "start": "2434770",
    "end": "2441610"
  },
  {
    "text": "that will go to active and the update has been complete so what this means is",
    "start": "2441610",
    "end": "2446710"
  },
  {
    "text": "that you can be running this this is a you can be running a particular level of provision throughput and suddenly when",
    "start": "2446710",
    "end": "2452890"
  },
  {
    "text": "you need additional scale you can start to scale up so these is this is a graph that I collected from our crab walks",
    "start": "2452890",
    "end": "2458890"
  },
  {
    "text": "monitoring service this represents the the number of read units that the DynamoDB service is is currently",
    "start": "2458890",
    "end": "2465370"
  },
  {
    "text": "consuming and as you can probably guess this little red arrow that's the point of which I turned up the provision",
    "start": "2465370",
    "end": "2471100"
  },
  {
    "text": "throughput that's when I started to drive more traffic to the likeability application to in order to test its scale in order to do that I was able to",
    "start": "2471100",
    "end": "2477730"
  },
  {
    "text": "additionally provision the infrastructure so I could scale that up very very quickly and you can see the",
    "start": "2477730",
    "end": "2483280"
  },
  {
    "text": "the response to that as scale started to increase conversely when scale start is",
    "start": "2483280",
    "end": "2488740"
  },
  {
    "text": "decrease at this point we can see the amount of read units being consumed each minute alright each five minute interval",
    "start": "2488740",
    "end": "2495100"
  },
  {
    "text": "and you can see that starting to decrease and this is the point where you can start to think about decommissioning some of that provision throughput as",
    "start": "2495100",
    "end": "2501220"
  },
  {
    "text": "soon as you start doing that you stop paying for it so it's still got that elastic flexible nature that you're used to and running an elastic infrastructure",
    "start": "2501220",
    "end": "2507880"
  },
  {
    "text": "but it's all done under the hood on your behalf and this is a really interesting graph so this is the amount of CPU",
    "start": "2507880",
    "end": "2514810"
  },
  {
    "text": "utilization used across my auto scaling group so here I drove what I think I simulated about 10,000 concurrent users",
    "start": "2514810",
    "end": "2521680"
  },
  {
    "text": "and drove it at my application for about 30 minutes you can see the cpu utilization spiking up there going up",
    "start": "2521680",
    "end": "2527920"
  },
  {
    "text": "through the roof but you can also see the get latency so here in the green line at the bottom the pretty much flat",
    "start": "2527920",
    "end": "2533740"
  },
  {
    "text": "line this is the latency of the reads that done DB is showing so even as I'm driving this massive increase immediate increase",
    "start": "2533740",
    "end": "2541070"
  },
  {
    "text": "in scale the DynamoDB latency actually doesn't increase in fact in this graph you can actually see that it remains",
    "start": "2541070",
    "end": "2546590"
  },
  {
    "text": "remarkably level inside the inside the period when I'm driving a lot more traffic at the web application so a CP",
    "start": "2546590",
    "end": "2553310"
  },
  {
    "text": "utilization going through the roof and DynamoDB not even breaking a sweat so",
    "start": "2553310",
    "end": "2558950"
  },
  {
    "text": "let's take a quick look at how you can take advantage of this flexible no SQL data model this is slightly a slight",
    "start": "2558950",
    "end": "2564680"
  },
  {
    "text": "change from the relational model that some of you might be using so i just wanted to cover it in a very high order",
    "start": "2564680",
    "end": "2569780"
  },
  {
    "text": "way basically rather as i said earlier rather than DynamoDB having a skimmer",
    "start": "2569780",
    "end": "2576080"
  },
  {
    "text": "having a required set of columns of rows and all the rest of it you can basically",
    "start": "2576080",
    "end": "2582560"
  },
  {
    "text": "specify any key value pairs we call them attribute pairs in DynamoDB and these",
    "start": "2582560",
    "end": "2588290"
  },
  {
    "text": "are basically a bag of key keys and values that you can assign to what we call an item so you can think of this as",
    "start": "2588290",
    "end": "2594830"
  },
  {
    "text": "an associative array or a hash or anything like that it's simply a key and a value and you can have very sparse",
    "start": "2594830",
    "end": "2601010"
  },
  {
    "text": "data structure supported in DynamoDB so not all individual item within your",
    "start": "2601010",
    "end": "2606320"
  },
  {
    "text": "DynamoDB table can have very very different keys and values so you can add metadata and additional information as",
    "start": "2606320",
    "end": "2612830"
  },
  {
    "text": "and when you need to but not have that taking up space not have that wasting so you can have these very sparse data",
    "start": "2612830",
    "end": "2618050"
  },
  {
    "text": "structures so as I mentioned earlier the only piece of information that DynamoDB does need is a primary key and here this",
    "start": "2618050",
    "end": "2626000"
  },
  {
    "text": "is a unique key that uniquely identifies the the collection the hash the bag of",
    "start": "2626000",
    "end": "2631730"
  },
  {
    "text": "keys and values that you're going to retrieve so here we specify the primary key of an ID and we just have one key",
    "start": "2631730",
    "end": "2637310"
  },
  {
    "text": "there you can also use composite keys so the primary key is the only way to",
    "start": "2637310",
    "end": "2642980"
  },
  {
    "text": "retrieve information from a dynamo DB table when it's running live on dynamodb in order to extend that to make it a",
    "start": "2642980",
    "end": "2649700"
  },
  {
    "text": "little bit more flexible we also support what we call composite keys and this air allows you to specify a hash and then a",
    "start": "2649700",
    "end": "2655250"
  },
  {
    "text": "secondary composite range key and that looks a bit like this so in our tagging table this is the data structure that",
    "start": "2655250",
    "end": "2661220"
  },
  {
    "text": "we're using each item each tag has a primary key which is the tag name in",
    "start": "2661220",
    "end": "2666800"
  },
  {
    "text": "this case cupcakes and an item for which is the unique identifier of the photo and all the",
    "start": "2666800",
    "end": "2672200"
  },
  {
    "text": "other metadata and this allows us to basically retrieve for example all of the items that are tagged with with in",
    "start": "2672200",
    "end": "2679370"
  },
  {
    "text": "this case cupcakes so you can do more complicated queries and this would also be a good way of retrieving for example",
    "start": "2679370",
    "end": "2685130"
  },
  {
    "text": "if you had an order for an e-commerce site you could retrieve all of the orders for a particular customer in a",
    "start": "2685130",
    "end": "2690920"
  },
  {
    "text": "date range and things like that so it's a relatively flexible way of providing more query flexibility in dynamo dB so",
    "start": "2690920",
    "end": "2699530"
  },
  {
    "text": "the best practice when working with dynamo DB is to produce well-balanced fine-grained hash keys so good primary",
    "start": "2699530",
    "end": "2706550"
  },
  {
    "text": "keys for dynamo DB are things like customer's orders and items these are relatively discreet and basically easy",
    "start": "2706550",
    "end": "2713630"
  },
  {
    "text": "to distribute across the distributed hash of dynamo DB bad bad primary keys",
    "start": "2713630",
    "end": "2721040"
  },
  {
    "text": "would be things like game ID or store ID that will drive a lot of traffic to a particular point in in dynamo DB that",
    "start": "2721040",
    "end": "2727520"
  },
  {
    "text": "point you're going to start to lose some of the benefits of this distributed zero administration predictable performance",
    "start": "2727520",
    "end": "2732920"
  },
  {
    "text": "model so one of the things I really like about dynamo DB is it has a super simple",
    "start": "2732920",
    "end": "2737930"
  },
  {
    "text": "API so the whole likeability application including all the tagging and all the workflow and all the the image",
    "start": "2737930",
    "end": "2744670"
  },
  {
    "text": "manipulation everything else is less than 200 lines long so we still DynamoDB you don't connect up to it as a standard",
    "start": "2744670",
    "end": "2751550"
  },
  {
    "text": "as you might own relational database there's no connection pool to manage you just make simple puts and gets against",
    "start": "2751550",
    "end": "2757730"
  },
  {
    "text": "the database so here we can just create a new item by putting our bag our hash",
    "start": "2757730",
    "end": "2763010"
  },
  {
    "text": "of values into dynamo dB so this makes it very very productive when you're working through development and test in",
    "start": "2763010",
    "end": "2768170"
  },
  {
    "text": "your data model is evolving but it also means that you can involve that data model as your business need to change so",
    "start": "2768170",
    "end": "2773540"
  },
  {
    "text": "you can start to add remove keys without me to go through the hassle of migrating schemas and all those sort of things it",
    "start": "2773540",
    "end": "2779240"
  },
  {
    "text": "also supports the atomic updates us this is very useful and we use this to drive the the like speech or the views feature",
    "start": "2779240",
    "end": "2785420"
  },
  {
    "text": "this allows you to make atomic changes to 22 attributes inside dynamo dB so if",
    "start": "2785420",
    "end": "2791720"
  },
  {
    "text": "you've got a hundred thousand customers all liking the thing at the same time are you get an atomic edition of those",
    "start": "2791720",
    "end": "2798080"
  },
  {
    "text": "rather than all of them are being applied just once so Tommy updates are done DynamoDB you",
    "start": "2798080",
    "end": "2804219"
  },
  {
    "text": "get all of that for free and that's how we do the likes and the page views so that sort of introduces dynamodb and our",
    "start": "2804219",
    "end": "2810339"
  },
  {
    "text": "typical three-tier web application but I just want to spend a few minutes talking about how some of the additional services were used in order to be able",
    "start": "2810339",
    "end": "2817180"
  },
  {
    "text": "to help in order to be able to build out more automation and to be able out greater flexibility down the line so",
    "start": "2817180",
    "end": "2823210"
  },
  {
    "text": "sophisticated services so one of the things that is inside likeability is an image processing pipeline this basically",
    "start": "2823210",
    "end": "2830650"
  },
  {
    "text": "works a little bit like this so when a customer or user makes a new share against there against their photo we",
    "start": "2830650",
    "end": "2837700"
  },
  {
    "text": "basically run it through a series of series of steps so this is an image processing pipeline that this could easily be our business process this",
    "start": "2837700",
    "end": "2844869"
  },
  {
    "text": "could easily be a collection of synchronous and asynchronous or long running tasks so some of the things we",
    "start": "2844869",
    "end": "2850329"
  },
  {
    "text": "do is we obviously upload that image to s3 we want to get that into the durable storage of s3 as quickly as possible we",
    "start": "2850329",
    "end": "2855849"
  },
  {
    "text": "want to create thumbnails so we create a tiny little thumbnail which we use it for a preview but also a slightly larger",
    "start": "2855849",
    "end": "2862420"
  },
  {
    "text": "thumbnail that which which we use and deliver to the mobile application where we want to still conserve bandwidth but",
    "start": "2862420",
    "end": "2867609"
  },
  {
    "text": "provide a slightly higher resolution image from the very high resolution images that the customers might upload we then might want to do some duplicate",
    "start": "2867609",
    "end": "2874660"
  },
  {
    "text": "detection so to take a look to see if customers are uploading identical items and amazon has a great service for this",
    "start": "2874660",
    "end": "2880869"
  },
  {
    "text": "called Mechanical Turk it allows you to present information to real people this is perfect for tasks which people do",
    "start": "2880869",
    "end": "2887650"
  },
  {
    "text": "well but computers typically do very badly so categorization duplicate detection all the rest of it so in this",
    "start": "2887650",
    "end": "2893859"
  },
  {
    "text": "case we could throw up to mechanical turk a large collection of people that are willing to go through and add",
    "start": "2893859",
    "end": "2899229"
  },
  {
    "text": "metadata to in front to information basically and awesome to detect the duplicates to show them two images and",
    "start": "2899229",
    "end": "2904390"
  },
  {
    "text": "say are these two the same things and you can either do that for free or pay them a little bit for their time finally",
    "start": "2904390",
    "end": "2910119"
  },
  {
    "text": "we want to run some statistics and some reporting and build out a top 100 list so the most viewed and the most liked",
    "start": "2910119",
    "end": "2915969"
  },
  {
    "text": "images in our application so obviously we've got duplicate detection which is going to be long running which is going",
    "start": "2915969",
    "end": "2922180"
  },
  {
    "text": "to go out to real people and can potentially take out a large amount of time we've got an update some statistics",
    "start": "2922180",
    "end": "2927789"
  },
  {
    "text": "and some reporting which very large data sets may take a long time as well but we also have things that we want to happen",
    "start": "2927789",
    "end": "2933579"
  },
  {
    "text": "immediately like upload image so the problem here is that we just can't do this inside the event loop",
    "start": "2933579",
    "end": "2938839"
  },
  {
    "text": "we can't do this inside the the request response loop in the browser because as soon as we get to these long-running",
    "start": "2938839",
    "end": "2944150"
  },
  {
    "text": "asynchronous tasks yeah what are we going to do we can't get the brow the person on the other end of the line to wait until we run through the west of",
    "start": "2944150",
    "end": "2950059"
  },
  {
    "text": "our business process in order to return them a result so we return the result as quickly as we can and then basically continue to run this workflow outside of",
    "start": "2950059",
    "end": "2957769"
  },
  {
    "text": "the event loop one of the ways that we can do that or the sort of typical way of designing this and in a",
    "start": "2957769",
    "end": "2964029"
  },
  {
    "text": "service-oriented architecture is to turn these into services so to have a thumbnail service that we can make",
    "start": "2964029",
    "end": "2970009"
  },
  {
    "text": "requests against which will take the image and generate the thumbnails for us which are duplicates service which will",
    "start": "2970009",
    "end": "2975650"
  },
  {
    "text": "take the image and again cue up the tasks on Mechanical Turk the reporting or a stat service as well and the way",
    "start": "2975650",
    "end": "2981499"
  },
  {
    "text": "that this is typically orchestrated is using message queues so as soon as we've uploaded the image to s3 rather than",
    "start": "2981499",
    "end": "2987559"
  },
  {
    "text": "generating the thumbnails in line we may put and add a message to a message queue and the thumbnail service would simply",
    "start": "2987559",
    "end": "2992930"
  },
  {
    "text": "poll that message queue in order to be able to collect the information that it needs as soon as it's as soon as it's got a new image generated the thumbnails",
    "start": "2992930",
    "end": "2999559"
  },
  {
    "text": "it'll in queue a next image in the next step the duplicates service once that's done it'll be in queue it and you can",
    "start": "2999559",
    "end": "3005859"
  },
  {
    "text": "imagine these film-forming quite quite complicated trees with dependencies and",
    "start": "3005859",
    "end": "3012640"
  },
  {
    "text": "ordering and all the rest of it but that's typically the way that it's it's done one of the benefits here is that you can scale these services",
    "start": "3012640",
    "end": "3018640"
  },
  {
    "text": "independently so you can add additional capacity to each of the services when you want to build out high availability services and pretty much run them",
    "start": "3018640",
    "end": "3025150"
  },
  {
    "text": "wherever you want because the orchestration happens through these message queues the problem with this approach is that orchestration is really",
    "start": "3025150",
    "end": "3031239"
  },
  {
    "text": "hard with complex business processes you start building a tangled web where part",
    "start": "3031239",
    "end": "3036279"
  },
  {
    "text": "of your business logic is is encoded in your orchestration logic some of your some of your dependency tree is encoded",
    "start": "3036279",
    "end": "3043989"
  },
  {
    "text": "in their ordering becomes difficult so you want to ensure that one thing happens after the next you don't want to have duplication of tasks particularly",
    "start": "3043989",
    "end": "3051190"
  },
  {
    "text": "tasks which are expensive to run such as mechanical turk tasks or looking up in an external service that you might have",
    "start": "3051190",
    "end": "3056710"
  },
  {
    "text": "to pay for and you have to manage all of the metadata associated with this as well so it's a lot again of undifferentiated heavy lifting here is a",
    "start": "3056710",
    "end": "3063519"
  },
  {
    "text": "lot of work that customers have to do just in order to be able to build out the service oriented architecture",
    "start": "3063519",
    "end": "3068650"
  },
  {
    "text": "so again where we see this level of this hell level of heavy lifting we like to innovate on behalf of those customers",
    "start": "3068650",
    "end": "3075099"
  },
  {
    "text": "and so I cut about a month ago now we are launched simple workflow so simple workflow is an orchestration service",
    "start": "3075099",
    "end": "3081190"
  },
  {
    "text": "which basically allows you to handle all of these in a managed way so this is the",
    "start": "3081190",
    "end": "3086349"
  },
  {
    "text": "way it works so you have a simple workflow running up on the Amazon Cloud again you don't have to provision any of",
    "start": "3086349",
    "end": "3092470"
  },
  {
    "text": "the the infrastructure to handle this it's a managed service you can basically get to focus on the business critical",
    "start": "3092470",
    "end": "3099010"
  },
  {
    "text": "aspects of your workflow so you can run your your workers up or perhaps on the",
    "start": "3099010",
    "end": "3104319"
  },
  {
    "text": "Amazon Cloud so these are the services which are actually going to implement the image resizing service or anything",
    "start": "3104319",
    "end": "3111279"
  },
  {
    "text": "else you can push asynchronous or manual tasks of two particular individuals",
    "start": "3111279",
    "end": "3116500"
  },
  {
    "text": "through mobile or other interfaces and you can run some of this on existing infrastructure as well so anything any",
    "start": "3116500",
    "end": "3123130"
  },
  {
    "text": "service any mobile device that whether it's on Prem were in the cloud that has visibility into the simple workflow API",
    "start": "3123130",
    "end": "3129339"
  },
  {
    "text": "can take advantage of these orchestration features so that means that you can mix and match on-premise",
    "start": "3129339",
    "end": "3135029"
  },
  {
    "text": "services with services it might be running in the cloud and you get to encapsulate your business logic into",
    "start": "3135029",
    "end": "3141970"
  },
  {
    "text": "something that we call a decider so a decider can be written in any language and it basically takes a look at the",
    "start": "3141970",
    "end": "3148960"
  },
  {
    "text": "running state of the application of the of the workflow and decide what to do next so you can build out our complex",
    "start": "3148960",
    "end": "3156490"
  },
  {
    "text": "business logic and encapsulate it in the right place which is in your own code and they can be written in any language that you want then the workers on the",
    "start": "3156490",
    "end": "3164950"
  },
  {
    "text": "mobile devices on Prem wherever else get to poll the AWS simple workflow service they pull down tasks that are waiting",
    "start": "3164950",
    "end": "3172480"
  },
  {
    "text": "for them to to be to be processed and the decider also polls are the simple workflow service and gets the running",
    "start": "3172480",
    "end": "3179020"
  },
  {
    "text": "state of the application and basically gets to say white well if that's the running state for this particular task in that case do this next and it can do",
    "start": "3179020",
    "end": "3186520"
  },
  {
    "text": "that pretty much any scale in a managed environment so I thought you might like to see this actually running in process",
    "start": "3186520",
    "end": "3192760"
  },
  {
    "text": "so this is two terminals super exciting I know on the left hand side I think we",
    "start": "3192760",
    "end": "3199240"
  },
  {
    "text": "have we have the the activity this is one of the workers that's running on the Amazon Cloud this is going to do the",
    "start": "3199240",
    "end": "3205180"
  },
  {
    "text": "image resizing for us and on the right hand side we have the decider I what I'm going to do is I'm just going to play",
    "start": "3205180",
    "end": "3210310"
  },
  {
    "text": "through what happens when somebody submits a request to to the likability",
    "start": "3210310",
    "end": "3215500"
  },
  {
    "text": "web application so here we go on the left hand side in the decider is this",
    "start": "3215500",
    "end": "3220990"
  },
  {
    "text": "plane hang on a sec go awesome so then",
    "start": "3220990",
    "end": "3226720"
  },
  {
    "text": "on the right hand side you see the decider receive the tasks that something's going to happen on the left hand side you can see the activity you",
    "start": "3226720",
    "end": "3232119"
  },
  {
    "text": "can see it resizing the images and then the decider gets told that this image resize has completed and it basically",
    "start": "3232119",
    "end": "3237580"
  },
  {
    "text": "wraps up and completes the task so you can see that that was very quick you can see that it was that this is happening",
    "start": "3237580",
    "end": "3242980"
  },
  {
    "text": "across multiple instances and you can basically put these wherever you want so that's a worker and the decider running",
    "start": "3242980",
    "end": "3249670"
  },
  {
    "text": "live polling the information from simple workflow another advantage of this service oriented approach is one of",
    "start": "3249670",
    "end": "3256090"
  },
  {
    "text": "flexibility we talked about that being an important aspect of sophistication and what's really good about these workflows is that you conversion them so",
    "start": "3256090",
    "end": "3262660"
  },
  {
    "text": "you can work against different versions and so for example if Amazon were to introduce a search service such as we",
    "start": "3262660",
    "end": "3268810"
  },
  {
    "text": "did last week you could easily integrate that into your workflow so you can provision and deploy a new version of",
    "start": "3268810",
    "end": "3275140"
  },
  {
    "text": "your workflow pipeline which not only updated the tables did the duplicate detection but also updated the search",
    "start": "3275140",
    "end": "3280750"
  },
  {
    "text": "index in the search in the in cloud search so you can see how flexible this is you can continue to evolve you can",
    "start": "3280750",
    "end": "3287140"
  },
  {
    "text": "add and build out complex dependencies between these tasks which brings us",
    "start": "3287140",
    "end": "3292359"
  },
  {
    "text": "nicely to stats and trends we implemented that as a service in our workflow so after the duplicate",
    "start": "3292359",
    "end": "3297670"
  },
  {
    "text": "detection or in parallel with duplicate detection we might want to do some statistics awesome reporting against the",
    "start": "3297670",
    "end": "3303010"
  },
  {
    "text": "data that we're housing in our dynamodb table so this is really common you typically want to get some insight you",
    "start": "3303010",
    "end": "3309670"
  },
  {
    "text": "want to be able to evaluate customer behavior but also you might want to be able to take some of those statistics and pass those back and build them out",
    "start": "3309670",
    "end": "3315520"
  },
  {
    "text": "as part of your part of your application such as the most viewed and the most liked applicator items or photos or",
    "start": "3315520",
    "end": "3321850"
  },
  {
    "text": "whatever in your application so for this really common service is called Hadoop",
    "start": "3321850",
    "end": "3327190"
  },
  {
    "text": "this is an open source of patchy project it basically allows you to distribute",
    "start": "3327190",
    "end": "3332230"
  },
  {
    "text": "your task across multiple instances this is an implementation of the popular",
    "start": "3332230",
    "end": "3337860"
  },
  {
    "text": "MapReduce framework which allows you to basically run distributed computation at any scale it scales really really well",
    "start": "3337860",
    "end": "3344400"
  },
  {
    "text": "but it's kind of time consuming in order to be able to manage a dupe cluster",
    "start": "3344400",
    "end": "3349950"
  },
  {
    "text": "again you have to deal with failures and scaling and all the rest of it and again where we see these sort of point pain",
    "start": "3349950",
    "end": "3356310"
  },
  {
    "text": "points on our customers we like to innovate and so about 18 months ago we launched elastic MapReduce so this is a",
    "start": "3356310",
    "end": "3363540"
  },
  {
    "text": "managed Hadoop service which allows you to really focus in on the queries the",
    "start": "3363540",
    "end": "3369180"
  },
  {
    "text": "questions that you want to ask of your data of your customers of your behavior of your customers or any other data",
    "start": "3369180",
    "end": "3374820"
  },
  {
    "text": "source and be able to ask questions of it pretty much at any scale so this is a you know used for very very large sort",
    "start": "3374820",
    "end": "3382020"
  },
  {
    "text": "of financial services I'm going to show you how you can use it at pretty much any scale so elastic MapReduce",
    "start": "3382020",
    "end": "3387570"
  },
  {
    "text": "integrates really nicely with dynamo dB it can read in data from DynamoDB pull",
    "start": "3387570",
    "end": "3393240"
  },
  {
    "text": "it into the distributed cluster and then allow you to ask much more flexible queries of your data so in dynamo dB",
    "start": "3393240",
    "end": "3400590"
  },
  {
    "text": "because of its because of the distributed hatch nature as I said we only have primary keys and composite",
    "start": "3400590",
    "end": "3407910"
  },
  {
    "text": "keys to access our data with elastic MapReduce we can open that up and expose",
    "start": "3407910",
    "end": "3413220"
  },
  {
    "text": "that data to what we call hive queries you can use it for backup and restore but you can also run these flexible",
    "start": "3413220",
    "end": "3419580"
  },
  {
    "text": "queries against your data so hive queries look a lot like SQL it was designed this way if anybody's ever",
    "start": "3419580",
    "end": "3425730"
  },
  {
    "text": "written any SQL you should recognize this and this is the query that we're running using elastic MapReduce to talk",
    "start": "3425730",
    "end": "3431400"
  },
  {
    "text": "to the data live in dynamo dB in order to be able to pull out a list of items",
    "start": "3431400",
    "end": "3436650"
  },
  {
    "text": "in art a dynamo DB table ordered by the amount of views that they've had we've got a similar one for likes so we can do",
    "start": "3436650",
    "end": "3443640"
  },
  {
    "text": "this with live data and dynamo dB we can also cross those we can span those queries across live data and dynamo dB",
    "start": "3443640",
    "end": "3450330"
  },
  {
    "text": "but also in data which may be archived into s3 so we can create these these",
    "start": "3450330",
    "end": "3455400"
  },
  {
    "text": "external virtual tables of our data and query across them using dynamo DB you're",
    "start": "3455400",
    "end": "3460980"
  },
  {
    "text": "using sorry elastic MapReduce so the goal here as I've been to keep saying is to really remove this undifferentiated",
    "start": "3460980",
    "end": "3467580"
  },
  {
    "text": "heavy lifting providing these sophisticated services and we're going to continue to drive",
    "start": "3467580",
    "end": "3472810"
  },
  {
    "text": "forward in identifying pain points everything we do at Amazon is really driven by our customer feedback so by",
    "start": "3472810",
    "end": "3479710"
  },
  {
    "text": "all means if you've got anything that is causing you pain please come and talk to myself or anybody else in an Amazon",
    "start": "3479710",
    "end": "3485980"
  },
  {
    "text": "Jersey and tell us sir what's causing you pain and we'll be able to take that on board and use that information in our",
    "start": "3485980",
    "end": "3491170"
  },
  {
    "text": "product roadmap going forwards if you've got specific deep technical architecture questions that you want to ask we've",
    "start": "3491170",
    "end": "3496420"
  },
  {
    "text": "also got a Q&A session with some of our solution architects are a fantastic resource so in the room next door to",
    "start": "3496420",
    "end": "3502630"
  },
  {
    "text": "this just go out of the Durham turn right and then right again you'll see a little handwritten sign that says QA by",
    "start": "3502630",
    "end": "3508330"
  },
  {
    "text": "all means are going there are scar solution architecture team if you've got any specific burning architecture problems so with that I just want to",
    "start": "3508330",
    "end": "3515950"
  },
  {
    "text": "wrap up in the last couple of minutes with just a really brief overview of security in the cloud so security really",
    "start": "3515950",
    "end": "3521290"
  },
  {
    "text": "underpins everything that we do at AWS and so I wanted to give you a sense of",
    "start": "3521290",
    "end": "3526540"
  },
  {
    "text": "where the responsibilities lie when it comes to securing these architectures so we have a pretty global footprint these",
    "start": "3526540",
    "end": "3533740"
  },
  {
    "text": "days we have a number of different what we call regions and regions how's our services you can think of them basically",
    "start": "3533740",
    "end": "3539800"
  },
  {
    "text": "as individual mini clouds so we have regions the yellow circles over on the left hand side in in the west coast",
    "start": "3539800",
    "end": "3547150"
  },
  {
    "text": "we've got one here in on the east coast we're opened up in in San Paulo in Europe and also singapore and tokyo in",
    "start": "3547150",
    "end": "3554650"
  },
  {
    "text": "asia pacific region as well and in addition to that we have a growing number of points of presence for our",
    "start": "3554650",
    "end": "3561190"
  },
  {
    "text": "content delivery network which are the little blue guys so these regions",
    "start": "3561190",
    "end": "3566200"
  },
  {
    "text": "contain multiple availability zones I which a lot of these services like DynamoDB and s3 use to build out high",
    "start": "3566200",
    "end": "3572920"
  },
  {
    "text": "availability are durable services for your data s3 for example is tolerant to",
    "start": "3572920",
    "end": "3578800"
  },
  {
    "text": "two simultaneous points of failure and it achieves 11-9 of data durability it",
    "start": "3578800",
    "end": "3584380"
  },
  {
    "text": "does that by splitting out across availability zones and you can take advantage of those availability zones in building out your architecture on ec2 as",
    "start": "3584380",
    "end": "3591340"
  },
  {
    "text": "well so you can design for durability and a lot of our services do that under the hood by DynamoDB ns3 importantly",
    "start": "3591340",
    "end": "3599020"
  },
  {
    "text": "data stays local so whilst we might mirror data across these availability zones for for durability we",
    "start": "3599020",
    "end": "3605470"
  },
  {
    "text": "won't move data between regions so you can do that yourself if you want to but there's often good compliance reason why",
    "start": "3605470",
    "end": "3611589"
  },
  {
    "text": "you wouldn't want to so data always stays local and you retain ownership and access control of that data but",
    "start": "3611589",
    "end": "3618490"
  },
  {
    "text": "ultimately we operate a shared responsibility model and this is boring the most important slide that i'm going to show today so we share the",
    "start": "3618490",
    "end": "3626109"
  },
  {
    "text": "responsibility of securing the crowd application full stack with our customers we basically take the",
    "start": "3626109",
    "end": "3633430"
  },
  {
    "text": "responsibility of securing the infrastructure so everything from the foundations of our data centers all the",
    "start": "3633430",
    "end": "3638920"
  },
  {
    "text": "way up to the hypervisors of our virtual machines that's on us and we take that responsibility very very seriously beyond that the operating systems that",
    "start": "3638920",
    "end": "3646119"
  },
  {
    "text": "are running on those virtual machines the applications that are running on top of those operating systems and the data",
    "start": "3646119",
    "end": "3651670"
  },
  {
    "text": "which is housed within those applications it's up to our customers it's our customers responsibility to secure those applications so you it's up",
    "start": "3651670",
    "end": "3658810"
  },
  {
    "text": "to you to decide on the right level of encryption for your data to meet your own needs we don't have any visibility",
    "start": "3658810",
    "end": "3663940"
  },
  {
    "text": "into how you're using these services on ec2 so we won't be able to stop you if you're running a an open ftp service",
    "start": "3663940",
    "end": "3669970"
  },
  {
    "text": "with your password file don't do that by the waves that's not best practice but",
    "start": "3669970",
    "end": "3674980"
  },
  {
    "text": "it's your responsibility to ensure that that isn't happening and it's our responsibility to ensure that the infrastructure is secure and we can do",
    "start": "3674980",
    "end": "3681160"
  },
  {
    "text": "that with a number of certifications to show how we're approaching this so we have service organization controls which",
    "start": "3681160",
    "end": "3687730"
  },
  {
    "text": "certify our our control objectives around our infrastructure where ISO 27001 compliant we can reach fist more",
    "start": "3687730",
    "end": "3694839"
  },
  {
    "text": "moderate compliance I'm also PCI DSS level 1 compliant for our payment",
    "start": "3694839",
    "end": "3700089"
  },
  {
    "text": "processing and that's a really good example of this shared responsibility model if you want to reach that with your own application we can infest we",
    "start": "3700089",
    "end": "3706630"
  },
  {
    "text": "can certify the infrastructure we have to certify your application on top of that here to reach PCI DSS level 1 at",
    "start": "3706630",
    "end": "3712359"
  },
  {
    "text": "the application layer so it's a shared responsibility model a very important aspect of securing applications running",
    "start": "3712359",
    "end": "3718420"
  },
  {
    "text": "on Amazon Cloud we have a great collection of white papers on our security center go to AWS to amazon.com",
    "start": "3718420",
    "end": "3723940"
  },
  {
    "text": "/ security they are we got one on security a security overview of our",
    "start": "3723940",
    "end": "3730030"
  },
  {
    "text": "security practices and one on compliance compliance and risk in the cloud I highly recommend you take a look at them",
    "start": "3730030",
    "end": "3736270"
  },
  {
    "text": "if you're deploying on AWS they are well worth the read the written in plain English they're relatively short available as as kindle ebooks so you can",
    "start": "3736270",
    "end": "3743480"
  },
  {
    "text": "download them and and read them on your daily commute so in summary just to wrap up I want talk about some of the things",
    "start": "3743480",
    "end": "3749990"
  },
  {
    "text": "we talked about as we touched on designing for failure and the importance of building out redundancy in your application talked about using",
    "start": "3749990",
    "end": "3755920"
  },
  {
    "text": "decoupling to build stateless architectures that can respond a horizontal scale you can use auto",
    "start": "3755920",
    "end": "3762110"
  },
  {
    "text": "scaling to automate that response to add additional capacity when you need it and shrink that capacity down when you don't",
    "start": "3762110",
    "end": "3768590"
  },
  {
    "text": "need to we talked about DynamoDB and offering up this high-performance consistent performance running on SSDs",
    "start": "3768590",
    "end": "3775160"
  },
  {
    "text": "we talked about using simple workflow to build out this sort of sophisticated asynchronous processing pipelines",
    "start": "3775160",
    "end": "3781570"
  },
  {
    "text": "encapsulate in your business logic in the right way talked about elastic MapReduce and using that to drive",
    "start": "3781570",
    "end": "3786970"
  },
  {
    "text": "analytics and additional insight into your data and we also touched on the availability of cloud search which is",
    "start": "3786970",
    "end": "3793670"
  },
  {
    "text": "also extremely easy to use in just a couple of steps and with that I'd like to thank you very much for your",
    "start": "3793670",
    "end": "3799280"
  },
  {
    "text": "attention and I hope to see you all our summit here tomorrow",
    "start": "3799280",
    "end": "3803410"
  },
  {
    "text": "thanks a lot matt you wanna do Q&A now or later alrighty any questions anybody",
    "start": "3808589",
    "end": "3814920"
  },
  {
    "text": "we have one there yes gentlemen we need",
    "start": "3814920",
    "end": "3841210"
  },
  {
    "text": "a control for the dns server and also to do to do that I think also we need the",
    "start": "3841210",
    "end": "3848589"
  },
  {
    "text": "Foley dedicated IP address and I actually spoke to was a very fortunate",
    "start": "3848589",
    "end": "3856000"
  },
  {
    "text": "to speak to two of your senior engineers and was confirmed that's possible but",
    "start": "3856000",
    "end": "3862300"
  },
  {
    "text": "for afterwards when I have really technical issues they couldn't answer and one person didn't fear this fear",
    "start": "3862300",
    "end": "3871750"
  },
  {
    "text": "answer when I ask a question he answered very quickly another one who is working",
    "start": "3871750",
    "end": "3877150"
  },
  {
    "text": "for what 53 I think that's a group directly working on that issues but he",
    "start": "3877150",
    "end": "3884650"
  },
  {
    "text": "couldn't the answer question he said you know he's probably better off to ask you know the yes easy to group and also very",
    "start": "3884650",
    "end": "3895420"
  },
  {
    "text": "interesting you know because i have this opportunity you know now so before I came here I also asked the group which",
    "start": "3895420",
    "end": "3903790"
  },
  {
    "text": "does the IP reverse mapping I think that group is also very directly working on",
    "start": "3903790",
    "end": "3911800"
  },
  {
    "text": "this issue but the person who first said that he didn't stand a question and at",
    "start": "3911800",
    "end": "3920349"
  },
  {
    "text": "the end the rep whoo-hoo you know the person who rep you know he said he",
    "start": "3920349",
    "end": "3927040"
  },
  {
    "text": "claims my hip and the same my crazy it sounds like you have you have a sort of specific yes let's turn around the block",
    "start": "3927040",
    "end": "3933160"
  },
  {
    "text": "that's a so it's a very important issue because if we cannot have controls of",
    "start": "3933160",
    "end": "3938800"
  },
  {
    "text": "our Dean's a lot of applications at one work right so I'm not sure I totally understand",
    "start": "3938800",
    "end": "3945420"
  },
  {
    "text": "your your specifics but by all means come and talk to me offline and I'll be",
    "start": "3945420",
    "end": "3950680"
  },
  {
    "text": "able to introduce you to to our solution architecture team to to help work through some of this in a bit more detail absolutely thank you yes sir",
    "start": "3950680",
    "end": "3959400"
  },
  {
    "text": "investment the minimum platform that you can I'm sorry thank you what's your minimum cost monthly to to be able to",
    "start": "3960509",
    "end": "3966729"
  },
  {
    "text": "provide a scalable architecture obviously load balancer at least one micro ec2 instance and scalable database",
    "start": "3966729",
    "end": "3972430"
  },
  {
    "text": "sure so it's it's very much application-specific right so you know",
    "start": "3972430",
    "end": "3979989"
  },
  {
    "text": "the there are some minimum requirements to deliver a high availability architecture that is to have instances",
    "start": "3979989",
    "end": "3987460"
  },
  {
    "text": "across the veil ability zones running your application tier and have some sort of load balancer in front of them so",
    "start": "3987460",
    "end": "3993249"
  },
  {
    "text": "there are cost-effective ways of delivering that are you mentioned micro instances which are a very low cost",
    "start": "3993249",
    "end": "3999150"
  },
  {
    "text": "relatively a resource-constrained instance type but it really depends on your on your application so one of the",
    "start": "3999150",
    "end": "4005759"
  },
  {
    "text": "advantages of running on the AWS cloud is that you get to decide the cost performance balance for your application",
    "start": "4005759",
    "end": "4011519"
  },
  {
    "text": "so you get to weigh up exactly where you want to spend spend arc to",
    "start": "4011519",
    "end": "4017190"
  },
  {
    "text": "infrastructure resources are within your architecture so maybe that will be running on DynamoDB maybe that we're",
    "start": "4017190",
    "end": "4023069"
  },
  {
    "text": "running on the relational database service maybe that will be running purely against s3 you can drive a lot of",
    "start": "4023069",
    "end": "4028890"
  },
  {
    "text": "static content just from s3 and static pages just from s3 for example there's a lot of best practices in delivering that",
    "start": "4028890",
    "end": "4036049"
  },
  {
    "text": "the other critical thing is to take advantage of these these different pricing options so we have what we call",
    "start": "4036049",
    "end": "4042900"
  },
  {
    "text": "on demand resources so that's the price that you pay for for resources if you just jump up log on to our website and",
    "start": "4042900",
    "end": "4049289"
  },
  {
    "text": "start provisioning and start using them but if you know that you have resources that are going to run for a particular length of time either low medium or high",
    "start": "4049289",
    "end": "4056519"
  },
  {
    "text": "utilization then you can make a small upfront commitment to run that and that",
    "start": "4056519",
    "end": "4062609"
  },
  {
    "text": "allows us to plan more efficiently in our own data centers and because we're sort of committed to pass those",
    "start": "4062609",
    "end": "4068369"
  },
  {
    "text": "efficiencies on to our customers there's a lower hourly rate of running those instances so finding out the level of utilization",
    "start": "4068369",
    "end": "4074880"
  },
  {
    "text": "for each component of your architecture allows you to make the judgment call of whether you want to which sort of",
    "start": "4074880",
    "end": "4080430"
  },
  {
    "text": "utilization reservation you might need to make and then of course we have the spot instances as well and we do have",
    "start": "4080430",
    "end": "4085650"
  },
  {
    "text": "some customers that run entirely on the spot that's not necessarily are recommended and you do have to architect",
    "start": "4085650",
    "end": "4091319"
  },
  {
    "text": "for the fact that interruption can occur but there's a very effective way of pulling in very very low cost resources",
    "start": "4091319",
    "end": "4098278"
  },
  {
    "text": "where you get to decide the level of price that you want to you want to take advantage of so really understanding those those different pricing models",
    "start": "4098279",
    "end": "4105420"
  },
  {
    "text": "will help you get a better idea if you got a specific architecture in mind by all means come and talk to us and we'll be able to point you in the right",
    "start": "4105420",
    "end": "4111508"
  },
  {
    "text": "direction give you some guidance on online on your specifics you're welcome yes sir you got time for one this is the",
    "start": "4111509",
    "end": "4119100"
  },
  {
    "text": "last one make it a good one to do use",
    "start": "4119100",
    "end": "4135060"
  },
  {
    "text": "the auto scale the elastic bentler again",
    "start": "4135060",
    "end": "4140130"
  },
  {
    "text": "I'd have no more about your specific your specific point but absolutely right i mean there there are a lot of",
    "start": "4140130",
    "end": "4146488"
  },
  {
    "text": "applications which can take advantage of elasticity but the first steps are very much in providing a decoupled",
    "start": "4146489",
    "end": "4153150"
  },
  {
    "text": "architecture in providing stateless servers and all the rest of it but there is another migration path for for",
    "start": "4153150",
    "end": "4159500"
  },
  {
    "text": "applications which have a larger legacy I which maybe weren't designed with architecture in mind and there's a",
    "start": "4159500",
    "end": "4165719"
  },
  {
    "text": "there's a sort of phased approach that you can take in terms of moving those over or migrating them onto the AWS",
    "start": "4165719",
    "end": "4171270"
  },
  {
    "text": "cloud and again we'd love to talk to you about that in more detail offline no actually it's designed with D copper architecture and stateless it's all that",
    "start": "4171270",
    "end": "4177960"
  },
  {
    "text": "perfect you'll get to the servers that are that we have provision we didn't do the auto scaling yet I see right you",
    "start": "4177960",
    "end": "4184710"
  },
  {
    "text": "want to retrofit auto scaling right on an existing instance yeah so that is",
    "start": "4184710",
    "end": "4190048"
  },
  {
    "text": "possible but we don't have time to go into the details of Mary how it's done right now but come and find me afterwards I'll talk you through how to",
    "start": "4190049",
    "end": "4195659"
  },
  {
    "text": "do okay all right thanks a lot everybody I think we're ready for our next speaker well",
    "start": "4195659",
    "end": "4201380"
  },
  {
    "text": "thanks a lot man awesome job",
    "start": "4202710",
    "end": "4206639"
  }
]