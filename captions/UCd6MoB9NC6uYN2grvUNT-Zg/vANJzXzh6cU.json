[
  {
    "start": "0",
    "end": "120000"
  },
  {
    "text": "[Music]",
    "start": "140",
    "end": "1160"
  },
  {
    "text": "[Applause]",
    "start": "1160",
    "end": "2910"
  },
  {
    "text": "[Music]",
    "start": "2910",
    "end": "6080"
  },
  {
    "text": "hello I am Shivam a cloud support",
    "start": "7319",
    "end": "10040"
  },
  {
    "text": "engineer here at the AWS office in",
    "start": "10040",
    "end": "12440"
  },
  {
    "text": "Hyderabad India today I'm going to show",
    "start": "12440",
    "end": "15400"
  },
  {
    "text": "you how to give internet access to an",
    "start": "15400",
    "end": "17760"
  },
  {
    "text": "AWS Lambda function that's connected to",
    "start": "17760",
    "end": "20240"
  },
  {
    "text": "an Amazon virtual private Cloud let's",
    "start": "20240",
    "end": "22800"
  },
  {
    "text": "get started Lambda functions by default",
    "start": "22800",
    "end": "26119"
  },
  {
    "text": "run in a secure Amazon VPC with access",
    "start": "26119",
    "end": "28920"
  },
  {
    "text": "to AWS services and the internet Lambda",
    "start": "28920",
    "end": "32040"
  },
  {
    "text": "service owns this Amazon VPC and it",
    "start": "32040",
    "end": "35480"
  },
  {
    "text": "isn't connected to a customer managed",
    "start": "35480",
    "end": "37520"
  },
  {
    "text": "VPC Lambda functions that are associated",
    "start": "37520",
    "end": "40480"
  },
  {
    "text": "with your Amazon VPC can access the",
    "start": "40480",
    "end": "42840"
  },
  {
    "text": "internet only when you configure your",
    "start": "42840",
    "end": "44879"
  },
  {
    "text": "Amazon VPC to provide access to provide",
    "start": "44879",
    "end": "48000"
  },
  {
    "text": "internet access to your function you",
    "start": "48000",
    "end": "50160"
  },
  {
    "text": "must associate the function to a private",
    "start": "50160",
    "end": "52399"
  },
  {
    "text": "subnet doing this requires a network",
    "start": "52399",
    "end": "55000"
  },
  {
    "text": "address translation on natat and also",
    "start": "55000",
    "end": "57640"
  },
  {
    "text": "requires routing the outbound traffic to",
    "start": "57640",
    "end": "59719"
  },
  {
    "text": "an ad Gateway in a public subnet let's",
    "start": "59719",
    "end": "62559"
  },
  {
    "text": "look at two possible ways to do this",
    "start": "62559",
    "end": "65198"
  },
  {
    "text": "give internet access to a Lambda",
    "start": "65199",
    "end": "66840"
  },
  {
    "text": "function that's already associated with",
    "start": "66840",
    "end": "69080"
  },
  {
    "text": "an Amazon VPC create a new Amazon VPC",
    "start": "69080",
    "end": "72040"
  },
  {
    "text": "with internet access and then associate",
    "start": "72040",
    "end": "74080"
  },
  {
    "text": "it with a Lambda function note to",
    "start": "74080",
    "end": "77400"
  },
  {
    "text": "associate a Lambda function to your",
    "start": "77400",
    "end": "79360"
  },
  {
    "text": "Amazon VPC you must add the AWS Lambda",
    "start": "79360",
    "end": "82799"
  },
  {
    "text": "VPC access execution role manage policy",
    "start": "82799",
    "end": "86320"
  },
  {
    "text": "to your lambda's execution role to get",
    "start": "86320",
    "end": "89439"
  },
  {
    "text": "started first login to your AWS",
    "start": "89439",
    "end": "93840"
  },
  {
    "text": "account for this demonstration I've",
    "start": "93840",
    "end": "96759"
  },
  {
    "text": "already created a Lambda function that's",
    "start": "96759",
    "end": "98920"
  },
  {
    "text": "associated with an existing VPC in a",
    "start": "98920",
    "end": "101680"
  },
  {
    "text": "private subnet and default security",
    "start": "101680",
    "end": "103680"
  },
  {
    "text": "group that allows outbound",
    "start": "103680",
    "end": "106119"
  },
  {
    "text": "traffic this means that if I try to run",
    "start": "106119",
    "end": "109280"
  },
  {
    "text": "this function right now it will make a",
    "start": "109280",
    "end": "111560"
  },
  {
    "text": "request to public endpoint and then",
    "start": "111560",
    "end": "113560"
  },
  {
    "text": "return no internet because NAD Gateway",
    "start": "113560",
    "end": "116200"
  },
  {
    "text": "is not configured yet now let's open the",
    "start": "116200",
    "end": "119840"
  },
  {
    "text": "the Amazon VPC",
    "start": "119840",
    "end": "122679"
  },
  {
    "start": "120000",
    "end": "252000"
  },
  {
    "text": "console filter the vpcs from the top",
    "start": "124079",
    "end": "127039"
  },
  {
    "text": "left",
    "start": "127039",
    "end": "128920"
  },
  {
    "text": "section and then choose",
    "start": "128920",
    "end": "132759"
  },
  {
    "text": "submits copy the name of at least two",
    "start": "132920",
    "end": "135360"
  },
  {
    "text": "public subnets in different availability",
    "start": "135360",
    "end": "137280"
  },
  {
    "text": "zones that are present in these",
    "start": "137280",
    "end": "139640"
  },
  {
    "text": "vpcs next choose n gateways from the",
    "start": "139640",
    "end": "142760"
  },
  {
    "text": "left panel and then choose create n",
    "start": "142760",
    "end": "146319"
  },
  {
    "text": "Gateway enter the name that you want to",
    "start": "146319",
    "end": "148760"
  },
  {
    "text": "use and then select a publish subnet",
    "start": "148760",
    "end": "151760"
  },
  {
    "text": "from the drop down where you want to",
    "start": "151760",
    "end": "153680"
  },
  {
    "text": "create the N Gateway the connectivity",
    "start": "153680",
    "end": "156360"
  },
  {
    "text": "type must be public select an elastic IP",
    "start": "156360",
    "end": "160120"
  },
  {
    "text": "address from the drop- down list if no",
    "start": "160120",
    "end": "163040"
  },
  {
    "text": "free elastic IP address is present in",
    "start": "163040",
    "end": "165319"
  },
  {
    "text": "this region then you must allocate an",
    "start": "165319",
    "end": "167720"
  },
  {
    "text": "elastic IP address now scroll down and",
    "start": "167720",
    "end": "171120"
  },
  {
    "text": "choose create n",
    "start": "171120",
    "end": "173120"
  },
  {
    "text": "gateways repeat the same step for the",
    "start": "173120",
    "end": "175440"
  },
  {
    "text": "other public subnet for high",
    "start": "175440",
    "end": "176680"
  },
  {
    "text": "availability for this demonstration I'll",
    "start": "176680",
    "end": "179080"
  },
  {
    "text": "do this for for only one subnet when you",
    "start": "179080",
    "end": "181879"
  },
  {
    "text": "are done let's associate this n gateway",
    "start": "181879",
    "end": "185239"
  },
  {
    "text": "to the private subnet associated with",
    "start": "185239",
    "end": "187239"
  },
  {
    "text": "the Lambda function to do this go to the",
    "start": "187239",
    "end": "192400"
  },
  {
    "text": "subnets and select the private",
    "start": "194519",
    "end": "197440"
  },
  {
    "text": "subnet from the bottom panel select",
    "start": "197440",
    "end": "200040"
  },
  {
    "text": "route table and then choose the route",
    "start": "200040",
    "end": "202519"
  },
  {
    "text": "table the route table associated with",
    "start": "202519",
    "end": "205120"
  },
  {
    "text": "the private subnet",
    "start": "205120",
    "end": "207239"
  },
  {
    "text": "appears again from the bottom panel",
    "start": "207239",
    "end": "210159"
  },
  {
    "text": "choose",
    "start": "210159",
    "end": "211280"
  },
  {
    "text": "routes and then edit the",
    "start": "211280",
    "end": "215159"
  },
  {
    "text": "routes choose add route for Destination",
    "start": "215239",
    "end": "219400"
  },
  {
    "text": "enter",
    "start": "219400",
    "end": "221040"
  },
  {
    "text": "0.0.0.0",
    "start": "221040",
    "end": "223000"
  },
  {
    "text": "sl0 for Target choose an ad Gateway from",
    "start": "223000",
    "end": "226319"
  },
  {
    "text": "the drop- down list and select the N",
    "start": "226319",
    "end": "229560"
  },
  {
    "text": "Gateway repeat the same for the other",
    "start": "229560",
    "end": "232000"
  },
  {
    "text": "subnet if the route table Association is",
    "start": "232000",
    "end": "235319"
  },
  {
    "text": "different Let's test the Lambda function",
    "start": "235319",
    "end": "238680"
  },
  {
    "text": "again",
    "start": "238680",
    "end": "241640"
  },
  {
    "text": "now we can see that the Lambda function",
    "start": "241640",
    "end": "244280"
  },
  {
    "text": "can connect to the public subnet through",
    "start": "244280",
    "end": "246400"
  },
  {
    "text": "the internet and return the connected",
    "start": "246400",
    "end": "249360"
  },
  {
    "text": "response go to the VPC",
    "start": "249360",
    "end": "252599"
  },
  {
    "start": "252000",
    "end": "353000"
  },
  {
    "text": "console and choose create",
    "start": "252599",
    "end": "255479"
  },
  {
    "text": "VPC select VPC and more enter the VPC",
    "start": "255479",
    "end": "259560"
  },
  {
    "text": "name that you want to use and other",
    "start": "259560",
    "end": "261519"
  },
  {
    "text": "information for this demonstration let's",
    "start": "261519",
    "end": "264000"
  },
  {
    "text": "use the default values then select the",
    "start": "264000",
    "end": "267000"
  },
  {
    "text": "number of availability zones number of",
    "start": "267000",
    "end": "269240"
  },
  {
    "text": "public subnets and the number of private",
    "start": "269240",
    "end": "272680"
  },
  {
    "text": "subnets note it is a best practice to",
    "start": "272680",
    "end": "276240"
  },
  {
    "text": "have at least two public private subnets",
    "start": "276240",
    "end": "278680"
  },
  {
    "text": "in different availability zones for high",
    "start": "278680",
    "end": "280800"
  },
  {
    "text": "availability of Lambda functions now",
    "start": "280800",
    "end": "283479"
  },
  {
    "text": "select the number of n gateways that you",
    "start": "283479",
    "end": "285520"
  },
  {
    "text": "want to create for high availability",
    "start": "285520",
    "end": "287720"
  },
  {
    "text": "select one per a we don't want to create",
    "start": "287720",
    "end": "291039"
  },
  {
    "text": "a VPC endpoint right now so let's select",
    "start": "291039",
    "end": "294160"
  },
  {
    "text": "none finally choose create",
    "start": "294160",
    "end": "297639"
  },
  {
    "text": "vpcs note if it takes around 1 minute to",
    "start": "297639",
    "end": "300960"
  },
  {
    "text": "create all the resources in the back end",
    "start": "300960",
    "end": "303639"
  },
  {
    "text": "so let's wait for that to complete and",
    "start": "303639",
    "end": "305720"
  },
  {
    "text": "then proceed after it's",
    "start": "305720",
    "end": "308960"
  },
  {
    "text": "done now go to the Lambda console and",
    "start": "310919",
    "end": "313520"
  },
  {
    "text": "select the Lambda function choose",
    "start": "313520",
    "end": "316039"
  },
  {
    "text": "configuration select VPC and then choose",
    "start": "316039",
    "end": "319960"
  },
  {
    "text": "the edit button choose the newly created",
    "start": "319960",
    "end": "323240"
  },
  {
    "text": "VPC then select the private",
    "start": "323240",
    "end": "327800"
  },
  {
    "text": "subnet",
    "start": "328479",
    "end": "331319"
  },
  {
    "text": "finally select the default Security",
    "start": "331319",
    "end": "334360"
  },
  {
    "text": "Group wait for the function to be",
    "start": "334360",
    "end": "337120"
  },
  {
    "text": "updated after configuring the N Gateway",
    "start": "337120",
    "end": "339600"
  },
  {
    "text": "in your Amazon VPC correctly you can now",
    "start": "339600",
    "end": "342120"
  },
  {
    "text": "connect to the internet successfully",
    "start": "342120",
    "end": "343800"
  },
  {
    "text": "from your Lambda",
    "start": "343800",
    "end": "345680"
  },
  {
    "text": "function and now you know how to give",
    "start": "345680",
    "end": "348319"
  },
  {
    "text": "internet access to a Lambda function",
    "start": "348319",
    "end": "350880"
  },
  {
    "text": "that's connected to an Amazon",
    "start": "350880",
    "end": "353160"
  },
  {
    "start": "353000",
    "end": "370000"
  },
  {
    "text": "VPC thanks for watching and happy cloud",
    "start": "353160",
    "end": "356120"
  },
  {
    "text": "computing from all of us here at AWS",
    "start": "356120",
    "end": "359990"
  },
  {
    "text": "[Applause]",
    "start": "359990",
    "end": "362460"
  },
  {
    "text": "[Music]",
    "start": "362460",
    "end": "370130"
  }
]