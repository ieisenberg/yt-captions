[
  {
    "text": "all right welcome welcome to reinvent 2018 it's kind of just kicking off the",
    "start": "530",
    "end": "8370"
  },
  {
    "text": "whole week of activities and welcome to the global partner summit really excited",
    "start": "8370",
    "end": "14070"
  },
  {
    "text": "to be here today's session is scaling and automating DevOps with cloudBees and",
    "start": "14070",
    "end": "21210"
  },
  {
    "text": "spot instances it was interesting I actually renamed this segment a couple",
    "start": "21210",
    "end": "28560"
  },
  {
    "text": "of weeks ago when I submitted my deck and a lot of that is I renamed it to DevOps with friends and a big reason for",
    "start": "28560",
    "end": "35850"
  },
  {
    "text": "that is that I am a partner Solutions Architect and that means I spend a lot of time working with partners so in a",
    "start": "35850",
    "end": "42989"
  },
  {
    "text": "given day I'll spend the vast majority of my day with partners my family actually know the names of the partners",
    "start": "42989",
    "end": "49200"
  },
  {
    "text": "even though they have no idea what those partners do my kids think data dog is is",
    "start": "49200",
    "end": "54239"
  },
  {
    "text": "a pet or you know an animal shelter I'm not sure but sorry I submitted it as my",
    "start": "54239",
    "end": "61859"
  },
  {
    "text": "my presentation is DevOps with friends and the event staff came back and said wow that is really super cheesy and so",
    "start": "61859",
    "end": "68670"
  },
  {
    "text": "we're gonna go with our original naming convention so I'm a partner Solutions Architect and that means that I work",
    "start": "68670",
    "end": "75180"
  },
  {
    "text": "with predominantly partners but also customers on technical enablement so",
    "start": "75180",
    "end": "80520"
  },
  {
    "text": "what that means is I kind of help them design for the platform kind of get rolling to ensure efficiency scalability",
    "start": "80520",
    "end": "87360"
  },
  {
    "text": "availability and reliability kind of going through today's agenda so just to",
    "start": "87360",
    "end": "94140"
  },
  {
    "text": "kind of get everybody on the same path we're gonna spend the vast majority going through kind of some examples some",
    "start": "94140",
    "end": "99869"
  },
  {
    "text": "sample deployments things like that but we're gonna go through some of the basics so maybe for the first 10 minutes",
    "start": "99869",
    "end": "105990"
  },
  {
    "text": "or so we're just gonna kind of get on the same page so that we all understand exactly where we're going with this if",
    "start": "105990",
    "end": "112799"
  },
  {
    "text": "you read the the description of this segment which I don't even think I did",
    "start": "112799",
    "end": "119310"
  },
  {
    "text": "before I got here but we're gonna be looking at not just cloud bees not just spot instances but",
    "start": "119310",
    "end": "125549"
  },
  {
    "text": "also the integration of a number of AWS partners in a number of different",
    "start": "125549",
    "end": "130550"
  },
  {
    "text": "development pipelines so to kind of get everybody on the on the same boat here we're gonna go",
    "start": "130550",
    "end": "137190"
  },
  {
    "text": "through some basics of CIC be some basics of AWS DevOps technology the",
    "start": "137190",
    "end": "143519"
  },
  {
    "text": "importance of testing kind of important and then just kind of going through some",
    "start": "143519",
    "end": "149400"
  },
  {
    "text": "of our examples where we actually show how easy it is to kind of get rolling with some of these features so kind of",
    "start": "149400",
    "end": "157769"
  },
  {
    "text": "starting off the goals and the challenges so I always love this quote because it it kind of reflects a lot of",
    "start": "157769",
    "end": "165150"
  },
  {
    "text": "you know what we really try to focus on here and the idea is that you work on a",
    "start": "165150",
    "end": "171269"
  },
  {
    "text": "lot of things that are what are referred to as undifferentiated heavy lifting so",
    "start": "171269",
    "end": "176660"
  },
  {
    "text": "you know when I first got started in in technology my first my gifts real job",
    "start": "176660",
    "end": "183629"
  },
  {
    "text": "was as a Linux systems administrator and I had an individual that that you could",
    "start": "183629",
    "end": "190170"
  },
  {
    "text": "say was a mentor basically he was the guy that was there to train me and tell me that everything I did was wrong but a",
    "start": "190170",
    "end": "197639"
  },
  {
    "text": "really cool guy absolutely one of the most intelligent people I've ever met and he always said that your job as",
    "start": "197639",
    "end": "204090"
  },
  {
    "text": "assists at men is to do as little as possible and it was interesting he's at",
    "start": "204090",
    "end": "209609"
  },
  {
    "text": "the time I understood that as automate everything and you know make sure that your systems are as solid as possible",
    "start": "209609",
    "end": "216200"
  },
  {
    "text": "but always you know kind of pursue that ideal deployment always pursue that",
    "start": "216200",
    "end": "223230"
  },
  {
    "text": "ideal infrastructure design what he actually meant was really literally do as little as possible but fun guy",
    "start": "223230",
    "end": "230959"
  },
  {
    "text": "definitely great mentor so what is this this concept of CIC be how many because",
    "start": "230959",
    "end": "238530"
  },
  {
    "text": "this is the global partner summit how many of you our partners are were you",
    "start": "238530",
    "end": "244079"
  },
  {
    "text": "know working with part our partners of eight of you as part of the partner network ok all right so vast majority it",
    "start": "244079",
    "end": "252239"
  },
  {
    "text": "seems like and so you're probably somewhat familiar and if not that's fine",
    "start": "252239",
    "end": "257310"
  },
  {
    "text": "but the idea here is that we want to automate as much as possible so that we can get rid of that whole",
    "start": "257310",
    "end": "263700"
  },
  {
    "text": "undifferentiated have you lift you know it's that idea of if you have a directory unlike your desktop I mean how",
    "start": "263700",
    "end": "270730"
  },
  {
    "text": "many times you have like you know final dot C final final dot C really",
    "start": "270730",
    "end": "275950"
  },
  {
    "text": "definitely going to be final dot C dash D or zr1 and so the idea is you know",
    "start": "275950",
    "end": "281290"
  },
  {
    "text": "let's keep that a little bit more organized and kind of automate getting that over to where we want it to and",
    "start": "281290",
    "end": "287110"
  },
  {
    "text": "then you know the concept of what do we have what are we gonna do with it and where is it going you know it's kind of",
    "start": "287110",
    "end": "292840"
  },
  {
    "text": "like the really a 30,000 foot view here and this is the template that we're",
    "start": "292840",
    "end": "299080"
  },
  {
    "text": "going to be working through today so if you've ever been in a AWS DevOps",
    "start": "299080",
    "end": "305290"
  },
  {
    "text": "presentation this is probably the template that you're going to see the most this goes through kind of exactly",
    "start": "305290",
    "end": "311740"
  },
  {
    "text": "where we want to be and some of the goals that we have here so we've got our source control you know what do we have",
    "start": "311740",
    "end": "318600"
  },
  {
    "text": "you know our build what are we doing with it and then all the way at the end",
    "start": "318600",
    "end": "323770"
  },
  {
    "text": "we've got our production environment which is where is it going there's a step in the middle there which is our",
    "start": "323770",
    "end": "330460"
  },
  {
    "text": "staging environment and what we're trying to do you know today we're going to give you some examples but the goal",
    "start": "330460",
    "end": "335920"
  },
  {
    "text": "is to really bridge that gap between being able to automatically push things to staging and then being able to trust",
    "start": "335920",
    "end": "343120"
  },
  {
    "text": "your system to actually get them to production and you know have things turn",
    "start": "343120",
    "end": "348700"
  },
  {
    "text": "out the way that you hope that they will turn out you know that whenever we worked through these deployments you",
    "start": "348700",
    "end": "355090"
  },
  {
    "text": "know years ago you know before there was really kind of a DevOps term you know it was just operations you know it was all",
    "start": "355090",
    "end": "361510"
  },
  {
    "text": "just operations everybody sat in the NOC together you know it was it was kumbaya everybody was happy and so long before",
    "start": "361510",
    "end": "367720"
  },
  {
    "text": "DevOps was really kind of a terminology that was that was kind of used you know",
    "start": "367720",
    "end": "373390"
  },
  {
    "text": "we had this idea of you know where are syncing these directories we are",
    "start": "373390",
    "end": "378850"
  },
  {
    "text": "manually copying things we're kicking things off there's one guy in the company that actually knows how to do a",
    "start": "378850",
    "end": "385140"
  },
  {
    "text": "revision reversal so we push to production oh no something went wrong we",
    "start": "385140",
    "end": "390580"
  },
  {
    "text": "were able to reverse things get him back to normal and we had this entire group of people that would click through our",
    "start": "390580",
    "end": "397300"
  },
  {
    "text": "web application to make sure that you know as a customer to make sure that everything worked the way that it was supposed to and as you can",
    "start": "397300",
    "end": "403810"
  },
  {
    "text": "imagine that that's pretty slow but you tend to trust those people you know this is where that that there's a there's a",
    "start": "403810",
    "end": "409060"
  },
  {
    "text": "little icon here I won't use my red button so we've got the approval which",
    "start": "409060",
    "end": "414789"
  },
  {
    "text": "is a manual process typically you know what does it take to really trust your system to automatically push that to",
    "start": "414789",
    "end": "421360"
  },
  {
    "text": "production and so what are the opportunities here to so you know if we",
    "start": "421360",
    "end": "426580"
  },
  {
    "text": "can get to that point where we feel like if we push something it goes past all of",
    "start": "426580",
    "end": "432069"
  },
  {
    "text": "our unit testing performance testing security testing it will be ready for production that's going to get our",
    "start": "432069",
    "end": "437470"
  },
  {
    "text": "product to the customers faster it's gonna reduce maintenance and really focus on you know what kind of testing",
    "start": "437470",
    "end": "445060"
  },
  {
    "text": "does it take to really get there and how",
    "start": "445060",
    "end": "450639"
  },
  {
    "text": "did we used to do it you know you always kind of look to the past you know predict the future something like that and so you know what was the",
    "start": "450639",
    "end": "458560"
  },
  {
    "text": "process you know it was it was shell scripts you know I remember you know kind of working through some of these",
    "start": "458560",
    "end": "464590"
  },
  {
    "text": "some of these issues in the 90s it was considered kind of a big leap just to have automated shell scripts that did",
    "start": "464590",
    "end": "471639"
  },
  {
    "text": "this you know we had CVS version control and it was amazing because all you did was a commit and all of a sudden boom it was",
    "start": "471639",
    "end": "478509"
  },
  {
    "text": "over into you know your staging environment everything was testing you know being able to roll back you know it was a it was a pretty big concept back",
    "start": "478509",
    "end": "484930"
  },
  {
    "text": "then but everything was manual so every time you went with a new project or you started a new company anything like that",
    "start": "484930",
    "end": "490780"
  },
  {
    "text": "you know you'd have to rewrite a lot of these shell scripts from scratch and you know you had a lot of people kind of",
    "start": "490780",
    "end": "496569"
  },
  {
    "text": "bringing all this collateral with them which also left technical debt behind them you know all of these manual",
    "start": "496569",
    "end": "502659"
  },
  {
    "text": "processes to kind of get all this updating and then limited testing so seeing as this is a DevOps presentation",
    "start": "502659",
    "end": "510759"
  },
  {
    "text": "there's there's probably a lot of you that have experience using like you know selenium jmeter a ton of different tools",
    "start": "510759",
    "end": "517240"
  },
  {
    "text": "out there but even then it takes a little bit of a learning curve in order to get kind of up to speed with those",
    "start": "517240",
    "end": "524140"
  },
  {
    "text": "tools so how do we get that done even quick and even faster you know I always loved",
    "start": "524140",
    "end": "529900"
  },
  {
    "text": "the idea of the AWS pace of innovation you know it's constantly almost doubling",
    "start": "529900",
    "end": "534970"
  },
  {
    "text": "every year and it kind of shows that you know we really really subscribe to some",
    "start": "534970",
    "end": "540640"
  },
  {
    "text": "of these models that were pushing and so here's kind of our mantra so whenever",
    "start": "540640",
    "end": "546970"
  },
  {
    "text": "you work for a company with AWS we have our leadership principles with CIC be this is kind of our pillars that were",
    "start": "546970",
    "end": "553570"
  },
  {
    "text": "really focusing on so everything that we're doing should have a basis in you",
    "start": "553570",
    "end": "558670"
  },
  {
    "text": "know improve collaboration the rapid delivery of these products and features the reliability of the system as well as",
    "start": "558670",
    "end": "567010"
  },
  {
    "text": "the as well as the processes and pipelines that get that system out there obviously security pretty important it's",
    "start": "567010",
    "end": "573910"
  },
  {
    "text": "jobs zero at AWS the ability to scale and the speed of both deployment and the",
    "start": "573910",
    "end": "580510"
  },
  {
    "text": "application and getting those products out so we're not actually going to be",
    "start": "580510",
    "end": "586630"
  },
  {
    "text": "demoing code start today it's just something I wanted to do a quick call out to when we're when we're working on",
    "start": "586630",
    "end": "593430"
  },
  {
    "text": "you know what I hear a lot is I'm just doing a small project I'm just going to push it up and I'm probably not gonna",
    "start": "593430",
    "end": "599800"
  },
  {
    "text": "have to update it so there's really no need for a pipeline or anything and it takes a while to deploy a pipeline you",
    "start": "599800",
    "end": "604990"
  },
  {
    "text": "know you get you get a lot of these little little pieces of feedback but I would encourage you to just give give",
    "start": "604990",
    "end": "610300"
  },
  {
    "text": "code starshot it's pretty cool I recently switched over completely to using the cloud9 IDE it's been it's been",
    "start": "610300",
    "end": "618280"
  },
  {
    "text": "a lot of fun it comes with a dark theme pretty excited about that and so you",
    "start": "618280",
    "end": "623440"
  },
  {
    "text": "know all of these components are kind of built into code stars so if you want to deploy let's say you know a serverless",
    "start": "623440",
    "end": "629920"
  },
  {
    "text": "application you have a lot of the tools already built in a lot of those pipeline features already built in so it just",
    "start": "629920",
    "end": "636460"
  },
  {
    "text": "kind of gets you up to speed a little bit quicker and so I just thought it was",
    "start": "636460",
    "end": "641890"
  },
  {
    "text": "pretty interesting but overall here we have our our services that we're gonna",
    "start": "641890",
    "end": "647890"
  },
  {
    "text": "be looking at today so for version control just for simplicity sake and all",
    "start": "647890",
    "end": "654760"
  },
  {
    "text": "of the examples we're going to be using code commit obviously there's a lot of different",
    "start": "654760",
    "end": "660259"
  },
  {
    "text": "examples during last reinvent and reinvents previously I would always use",
    "start": "660259",
    "end": "665929"
  },
  {
    "text": "github but this year you know you can use s3 you can use a ton of different things just for you know kind of that",
    "start": "665929",
    "end": "672649"
  },
  {
    "text": "simplicity we're gonna stick with code commit for today for our build in two of",
    "start": "672649",
    "end": "678829"
  },
  {
    "text": "the examples we're actually going to be using code build before we start kind of going into Jenkins we're also going to",
    "start": "678829",
    "end": "685459"
  },
  {
    "text": "use a little bit of code pipeline with Jenkins and then obviously kind of focus",
    "start": "685459",
    "end": "690799"
  },
  {
    "text": "on a little bit of spot instances but then third-party tooling so you know",
    "start": "690799",
    "end": "697009"
  },
  {
    "text": "remember how I talked about how are we testing these applications to make sure that they're you know kind of ready for primetime",
    "start": "697009",
    "end": "702649"
  },
  {
    "text": "you know what does that look like it's you know in order to get these tests into the system how hard is that to",
    "start": "702649",
    "end": "708949"
  },
  {
    "text": "configure and that's something I'm really excited about because it is just built into a lot of these processes and",
    "start": "708949",
    "end": "714979"
  },
  {
    "text": "so we'll be showcasing that and then what does production look like so this is a placeholder here our production",
    "start": "714979",
    "end": "721910"
  },
  {
    "text": "environments today are going to be elastic Beanstalk for one code deploy for another lambda api gateway for",
    "start": "721910",
    "end": "728720"
  },
  {
    "text": "another and then ECS for our jenkins example and then where we're using code",
    "start": "728720",
    "end": "738049"
  },
  {
    "text": "pipeline to enable this orchestration once again you know obviously we can use",
    "start": "738049",
    "end": "744019"
  },
  {
    "text": "Jenkins for this approach this is for the continuity of the examples just to try to make things not overly",
    "start": "744019",
    "end": "750139"
  },
  {
    "text": "complicated when we're switching between one and the other and then once again my",
    "start": "750139",
    "end": "755749"
  },
  {
    "text": "call-out to code star it's pretty fun it's super easy and we look at a lot of",
    "start": "755749",
    "end": "761509"
  },
  {
    "text": "the technology partners so if you go to view Google AWS DevOps competency you're",
    "start": "761509",
    "end": "768019"
  },
  {
    "text": "gonna get a lot of the AWS DevOps competency partners these are partners that I spend probably",
    "start": "768019",
    "end": "775220"
  },
  {
    "text": "just as much time with as I do my family and so they put together a lot of really cool solutions I've got blog posts with",
    "start": "775220",
    "end": "781789"
  },
  {
    "text": "actually me and just about everybody else in my group has blog posts with just about all these partners these are",
    "start": "781789",
    "end": "788029"
  },
  {
    "text": "the partners that we were we did not highlight in the in the example today and it is purely",
    "start": "788029",
    "end": "793840"
  },
  {
    "text": "because of lack of time there's only so much you can do in an hour and so kind",
    "start": "793840",
    "end": "801580"
  },
  {
    "text": "of the kind of kicking things off the idea of deployment testing today we're",
    "start": "801580",
    "end": "806590"
  },
  {
    "text": "gonna be showcasing ghost inspector ghost inspectors and AWS partner solution they have direct integration",
    "start": "806590",
    "end": "814180"
  },
  {
    "text": "with AWS code pipeline and kind of one of the really fun things I like is",
    "start": "814180",
    "end": "820000"
  },
  {
    "text": "probably the simplest thing that they do which is the Chrome browser extension you know if you're putting together a an",
    "start": "820000",
    "end": "828880"
  },
  {
    "text": "implementation and you want what is the quickest way that I can get some unit",
    "start": "828880",
    "end": "834280"
  },
  {
    "text": "tests done against my web application let's say I have an individual that is that it's not technical like you know",
    "start": "834280",
    "end": "840550"
  },
  {
    "text": "let's say I have that person in QA that is used to just you know clicking on a",
    "start": "840550",
    "end": "846040"
  },
  {
    "text": "website entering some information validating forms you know kind of you know the the typical QA type of",
    "start": "846040",
    "end": "852370"
  },
  {
    "text": "responsibilities where you're making sure that you know the blue graphic is indeed blue you know how easy is it for",
    "start": "852370",
    "end": "858100"
  },
  {
    "text": "them to be able to create a unit test to be able to offload some of those responsibilities that have been sitting",
    "start": "858100",
    "end": "864370"
  },
  {
    "text": "with you know a lot of the DevOps individuals the engineers the developers and so you know ghost inspector really",
    "start": "864370",
    "end": "871600"
  },
  {
    "text": "puts a lot of that simplicity into the hands of individuals that may not be as",
    "start": "871600",
    "end": "876670"
  },
  {
    "text": "technically enabled as others in the organization and then we're gonna go",
    "start": "876670",
    "end": "882910"
  },
  {
    "text": "through some load testing so the the examples that we'll be using today in in",
    "start": "882910",
    "end": "889180"
  },
  {
    "text": "the demos are run scope and in blaze meter I wanted to call out a couple of",
    "start": "889180",
    "end": "896470"
  },
  {
    "text": "other solutions so micro focus has a direct integration with AWS Code",
    "start": "896470",
    "end": "901540"
  },
  {
    "text": "pipeline also has a also has a free trial to give it a shot and then locust",
    "start": "901540",
    "end": "907480"
  },
  {
    "text": "locust is a as look as a fun one so you know years ago I'm doing a blog post",
    "start": "907480",
    "end": "912820"
  },
  {
    "text": "with a company called spot inst and the whole point of the post was use",
    "start": "912820",
    "end": "918430"
  },
  {
    "text": "spot instances to be able to scale your auto scaling groups so that you can you",
    "start": "918430",
    "end": "923470"
  },
  {
    "text": "know scale to meet demand if you have to run a hundred instances you know wouldn't it make more sense to",
    "start": "923470",
    "end": "928550"
  },
  {
    "text": "run those hundred instances on spot instances and so at the time that I did the blog post I needed a load generator",
    "start": "928550",
    "end": "935060"
  },
  {
    "text": "at the time the Chicago Tribune had a project that they open sourced calls",
    "start": "935060",
    "end": "940310"
  },
  {
    "text": "called bees with machine guns and it's kind of been serving me for four years",
    "start": "940310",
    "end": "945950"
  },
  {
    "text": "now and so I didn't bother to look at anything new and the dev ops group here",
    "start": "945950",
    "end": "951530"
  },
  {
    "text": "probably last year said you know you should really check out locust and it was really great so if you know you're",
    "start": "951530",
    "end": "959270"
  },
  {
    "text": "looking for an open-source tool this is the recommendation that I got from the engineer's it deploys quite well with",
    "start": "959270",
    "end": "966980"
  },
  {
    "text": "ECS and it's really scalable and you know really important is you know kind of free to use you know so that's kind",
    "start": "966980",
    "end": "973520"
  },
  {
    "text": "of a kind of fun example and so we'll be starting off with from the most basic",
    "start": "973520",
    "end": "980900"
  },
  {
    "text": "examples that we can think of so today we're setting up a web application first",
    "start": "980900",
    "end": "988570"
  },
  {
    "text": "and we're going to be deploying it to AWS instances just like whether you're",
    "start": "988570",
    "end": "995300"
  },
  {
    "text": "running your build server or you're running you know your your web servers or your database servers we always want",
    "start": "995300",
    "end": "1002080"
  },
  {
    "text": "to make sure that we're running things as efficiently as possible so if you're running a Jenkins instance and you need",
    "start": "1002080",
    "end": "1007810"
  },
  {
    "text": "to as we'll show in some of the examples it's only around to build a couple of things you probably don't want to be",
    "start": "1007810",
    "end": "1013630"
  },
  {
    "text": "paying on-demand prices because you're paying a premium for a system that you're only using sporadically you know",
    "start": "1013630",
    "end": "1021010"
  },
  {
    "text": "at the same time if you have that main orchestration server that you always want to be available you want to make",
    "start": "1021010",
    "end": "1026740"
  },
  {
    "text": "sure that you're running it adds a reserved instance because it's not going anywhere and all we should be around and",
    "start": "1026740",
    "end": "1032530"
  },
  {
    "text": "you want to make sure that it's around at the same time you know there's been some new additions to ec2 spot",
    "start": "1032530",
    "end": "1039699"
  },
  {
    "text": "capability we're going to be going through the deployment utilization of ec2 spot fleet but there's a lot of",
    "start": "1039699",
    "end": "1047230"
  },
  {
    "text": "really other cool examples like the ability to say I want a spot instance and I definitely want it to be around",
    "start": "1047230",
    "end": "1053380"
  },
  {
    "text": "for an hour or for a half-hour so that you know even if you're outbid you don't",
    "start": "1053380",
    "end": "1058730"
  },
  {
    "text": "lose access to that instance and so for",
    "start": "1058730",
    "end": "1064220"
  },
  {
    "text": "our simple example here that we're starting off with first we're gonna be using code commit as the as the source",
    "start": "1064220",
    "end": "1070519"
  },
  {
    "text": "code we're going to go through what what the build definition looks like code build is going to build this one and",
    "start": "1070519",
    "end": "1077929"
  },
  {
    "text": "then we're gonna be sending output artifacts at first to elastic Beanstalk",
    "start": "1077929",
    "end": "1082940"
  },
  {
    "text": "and then we're gonna be sending them in the in the second simple example over to",
    "start": "1082940",
    "end": "1088539"
  },
  {
    "text": "code deploy to go to ec2 but just as we're using code pipeline just as we're",
    "start": "1088539",
    "end": "1094999"
  },
  {
    "text": "using code build all of these components can be replaced out with Jenkins it's",
    "start": "1094999",
    "end": "1100460"
  },
  {
    "text": "kind of a little bit of personal preference and so you know later on in the day you know half hour from now",
    "start": "1100460",
    "end": "1107690"
  },
  {
    "text": "we're gonna be looking at what does that look what what does that look like you know to replace out these components and",
    "start": "1107690",
    "end": "1114200"
  },
  {
    "text": "utilize Jenkins for these service interactions and engagements all right",
    "start": "1114200",
    "end": "1119929"
  },
  {
    "text": "so let's see",
    "start": "1119929",
    "end": "1122648"
  },
  {
    "text": "all right so man didn't see that coming",
    "start": "1130350",
    "end": "1139180"
  },
  {
    "text": "so today we're working with a company called unicorn rentals they are the 16th largest provider of",
    "start": "1139180",
    "end": "1144790"
  },
  {
    "text": "mythical creatures on the western US how many people here have been to a gay AWS",
    "start": "1144790",
    "end": "1149800"
  },
  {
    "text": "game day event or planning to attend AWS game day at reinvent all right we got we",
    "start": "1149800",
    "end": "1155680"
  },
  {
    "text": "got one we got one all right thank you sir because it would been awkward at zero so I'm responsible for the AWS game",
    "start": "1155680",
    "end": "1163480"
  },
  {
    "text": "day program and unicorn rentals is the company that we use for all of all of",
    "start": "1163480",
    "end": "1168940"
  },
  {
    "text": "our events so in today's example this is the unicorn rentals reservation lookup",
    "start": "1168940",
    "end": "1175900"
  },
  {
    "text": "application so the idea is when you rent a unicorn you get a confirmation code",
    "start": "1175900",
    "end": "1181470"
  },
  {
    "text": "you want to be able to have a website where you plug that confirmation code in and you get the unicorn access code so",
    "start": "1181470",
    "end": "1188320"
  },
  {
    "text": "when your unicorn arrives at your house you whisper this code in its ear and it follows you around wherever you go so",
    "start": "1188320",
    "end": "1196210"
  },
  {
    "text": "this is what we're going to be replicating throughout our examples so",
    "start": "1196210",
    "end": "1205630"
  },
  {
    "text": "at so starting off you know how do we create this pipeline from the very beginning so we're gonna create an AWS",
    "start": "1205630",
    "end": "1213550"
  },
  {
    "text": "code pipeline kind of fun I decided to record this at the last minute since you know typically since these things tend",
    "start": "1213550",
    "end": "1220000"
  },
  {
    "text": "to break so hopefully this works so we're creating a brand new pipeline as we've",
    "start": "1220000",
    "end": "1226930"
  },
  {
    "text": "kind of said we're going to be we're going to standardizing on code commit for these examples and I have a",
    "start": "1226930",
    "end": "1232060"
  },
  {
    "text": "repository set up for each of these so the repository for this example is DevOps Beanstalk I'm committing",
    "start": "1232060",
    "end": "1239440"
  },
  {
    "text": "everything to master and we're gonna be using cloud watch events to kick off the build process rather than having code",
    "start": "1239440",
    "end": "1246250"
  },
  {
    "text": "pipeline constantly pull code commit for this information we're gonna be using code build for the for the build",
    "start": "1246250",
    "end": "1253660"
  },
  {
    "text": "environment and so we're going to be creating a new code build process here",
    "start": "1253660",
    "end": "1260120"
  },
  {
    "text": "you can see it's built directly and you just click on create a new one we're just gonna name it we're gonna provide",
    "start": "1260120",
    "end": "1266870"
  },
  {
    "text": "some really basic information but the instructions for how to build are actually in the repository already so",
    "start": "1266870",
    "end": "1274910"
  },
  {
    "text": "everything is going to be built using Linux with its actually go laying by binary that gets deployed so we're gonna",
    "start": "1274910",
    "end": "1281810"
  },
  {
    "text": "specify golang as as the environment there's only one option for versions and",
    "start": "1281810",
    "end": "1288410"
  },
  {
    "text": "this is not going to be a docker container so we're just gonna just going to create a standard go line build",
    "start": "1288410",
    "end": "1294320"
  },
  {
    "text": "environment so that it compiles the single binary and it's able to deploy to",
    "start": "1294320",
    "end": "1299900"
  },
  {
    "text": "our beanstalk environment as is so by default it'll be the build spec yml that",
    "start": "1299900",
    "end": "1307070"
  },
  {
    "text": "exists within your repository but you can set that to whatever you want so if",
    "start": "1307070",
    "end": "1312200"
  },
  {
    "text": "you want to name it something else just put it into just put the file name in there otherwise you know just like",
    "start": "1312200",
    "end": "1318560"
  },
  {
    "text": "Jenkins you could put all of those run instructions directly directly into code build manually here we're gonna be just",
    "start": "1318560",
    "end": "1327140"
  },
  {
    "text": "playing this example to elastic Beanstalk we already have our environment identified here so we're",
    "start": "1327140",
    "end": "1334430"
  },
  {
    "text": "just gonna pull up what's already built in I don't think anybody wanted to see me build a new Beanstalk environment so",
    "start": "1334430",
    "end": "1341660"
  },
  {
    "text": "our beanstalk environment is a unicorn app and so boom we create the pipeline",
    "start": "1341660",
    "end": "1347870"
  },
  {
    "text": "and so now this pipeline is created in code pipeline as its first",
    "start": "1347870",
    "end": "1354290"
  },
  {
    "text": "responsibility it's going to go through it's gonna build everything and just run",
    "start": "1354290",
    "end": "1359330"
  },
  {
    "text": "through that pipeline to make sure that everything kind of deploys properly so it's doing the pull from source but what",
    "start": "1359330",
    "end": "1366410"
  },
  {
    "text": "we don't have here is the actual testing components so you know kind of this",
    "start": "1366410",
    "end": "1372140"
  },
  {
    "text": "follow the bouncing ball approach gives us a really basic implementation of what",
    "start": "1372140",
    "end": "1377180"
  },
  {
    "text": "a pipeline should be so now we want to add some of these test components and so one of the things we mentioned is the",
    "start": "1377180",
    "end": "1384200"
  },
  {
    "text": "fact that this is built directly into code pipeline a lot of those partner solutions so here you know real simple",
    "start": "1384200",
    "end": "1390980"
  },
  {
    "text": "we're gonna add a stage once again it's almost like a follow Inbal we're gonna do first that ghost",
    "start": "1390980",
    "end": "1397190"
  },
  {
    "text": "inspector engagement and that's just gonna make sure that when we deploy our absolute application does it work you",
    "start": "1397190",
    "end": "1403610"
  },
  {
    "text": "know does it work as intended so this is gonna do things like you know when you pull up the website does it contain the",
    "start": "1403610",
    "end": "1410480"
  },
  {
    "text": "text that it's supposed to when you submit values do you get returned information like you're supposed to and",
    "start": "1410480",
    "end": "1417679"
  },
  {
    "text": "so you know this is this is and we're gonna go through exactly how to create these tests in a little in a second here",
    "start": "1417679",
    "end": "1424070"
  },
  {
    "text": "but what I want to highlight here is the ease of integration so we select ghost",
    "start": "1424070",
    "end": "1429710"
  },
  {
    "text": "inspector from a drop-down list click on connect and all of our unit testing all of our pre created tests are now",
    "start": "1429710",
    "end": "1436160"
  },
  {
    "text": "available for selection so I've got my unicorn Beanstalk example click on",
    "start": "1436160",
    "end": "1442340"
  },
  {
    "text": "integrate and then save and now we have now we have that test built directly",
    "start": "1442340",
    "end": "1449390"
  },
  {
    "text": "into our pipeline and as we'll kind of see it's kind of fun because the creation of the test is so simple with",
    "start": "1449390",
    "end": "1456410"
  },
  {
    "text": "that chrome app that you know this whole process to create the test of the",
    "start": "1456410",
    "end": "1461630"
  },
  {
    "text": "application and get it into code pipeline it's I mean I did this with a",
    "start": "1461630",
    "end": "1466700"
  },
  {
    "text": "pretty slow internet connection but it's typically like under a minute it's pretty it's pretty impressive I mean I can't imagine I can't think of how to",
    "start": "1466700",
    "end": "1472970"
  },
  {
    "text": "make it kind of any easier at this point which is a nice change so now we know we",
    "start": "1472970",
    "end": "1479510"
  },
  {
    "text": "have our test of does the application work at all so we want to add another test which is you know is the",
    "start": "1479510",
    "end": "1485510"
  },
  {
    "text": "performance or is the performance where it's supposed to be you know what killing me",
    "start": "1485510",
    "end": "1493000"
  },
  {
    "text": "there we go so what does the performance look like so we're using blaze meter",
    "start": "1498210",
    "end": "1504970"
  },
  {
    "text": "we've got that direct integration once again we've selected just blaze meter from a drop-down we predefined are our",
    "start": "1504970",
    "end": "1513340"
  },
  {
    "text": "blaze meter tests and we'll go through that in a second too but this just shows kind of how easy it is to get this into",
    "start": "1513340",
    "end": "1520540"
  },
  {
    "text": "the pipeline you know it's at a stage at a component to the stage a few items",
    "start": "1520540",
    "end": "1525550"
  },
  {
    "text": "from a drop-down and then save and now we've got it all added to the pipeline we're gonna release the latest batch of",
    "start": "1525550",
    "end": "1532030"
  },
  {
    "text": "changes and push that all through that pipeline now once this is done it's",
    "start": "1532030",
    "end": "1537820"
  },
  {
    "text": "going to update our beanstalk environment and we're gonna have you know we're gonna have our CI CD pipeline",
    "start": "1537820",
    "end": "1544090"
  },
  {
    "text": "so anything that's checked into code commits is automatically going to be pushed over to Beanstalk and then it's",
    "start": "1544090",
    "end": "1549430"
  },
  {
    "text": "going to go through Ghost inspector testing and then blaze meteor performance testing",
    "start": "1549430",
    "end": "1556530"
  },
  {
    "text": "so that's our first super simple example you know going over to Beanstalk we're",
    "start": "1574830",
    "end": "1580350"
  },
  {
    "text": "going through the same process now except instead of deploying to Beanstalk we're deploying to AWS code deploy so",
    "start": "1580350",
    "end": "1587100"
  },
  {
    "text": "the idea is we've got a few different instances that are a part of a",
    "start": "1587100",
    "end": "1592679"
  },
  {
    "text": "deployment group once again it's the it's the same thing it's a golang application that's been compiled to a",
    "start": "1592679",
    "end": "1598950"
  },
  {
    "text": "binary and so it's just taking this application it's pushing it over to a",
    "start": "1598950",
    "end": "1604169"
  },
  {
    "text": "bunch of instances starting it up and getting ready for the deploy just as in",
    "start": "1604169",
    "end": "1610380"
  },
  {
    "text": "the last example we've got ghost inspector and making sure that the application actually works the way that",
    "start": "1610380",
    "end": "1617250"
  },
  {
    "text": "it's supposed to we've got blaze meter making sure that the performance is where it is where it",
    "start": "1617250",
    "end": "1622260"
  },
  {
    "text": "supposed to be so we've got maybe a little small to see but we've got our",
    "start": "1622260",
    "end": "1627899"
  },
  {
    "text": "app spec dot yml which is what defines where everything how everything",
    "start": "1627899",
    "end": "1633090"
  },
  {
    "text": "interacts with code code deploy so once it gets to the ec2 instance what is it supposed to do and then we'll go through",
    "start": "1633090",
    "end": "1640049"
  },
  {
    "text": "a little bit more what the build spec looks like so the build spec is very similar for the first two examples",
    "start": "1640049",
    "end": "1646710"
  },
  {
    "text": "because it's doing the same thing it's getting all that source code compiling an application and then pushing that out",
    "start": "1646710",
    "end": "1654510"
  },
  {
    "text": "in our example here we actually just made an update not important but it actually changes the performance aspect",
    "start": "1654510",
    "end": "1660360"
  },
  {
    "text": "of the application so for whatever reason you know the organization has decided to make the application slower",
    "start": "1660360",
    "end": "1668539"
  },
  {
    "text": "to save resources or I can't remember why but the idea is that we just made",
    "start": "1668539",
    "end": "1674519"
  },
  {
    "text": "the application slower how does that impact the outcome of our testing so",
    "start": "1674519",
    "end": "1681590"
  },
  {
    "text": "pretty everybody's probably familiar we just checked in Akko a change to our",
    "start": "1681590",
    "end": "1687419"
  },
  {
    "text": "source code repository and we're gonna watch it kind of go through the process here so it's a little bit quicker when",
    "start": "1687419",
    "end": "1694980"
  },
  {
    "text": "we with our integration with code pipeline and code commit bees we are",
    "start": "1694980",
    "end": "1700019"
  },
  {
    "text": "using that cloud watch events integration so we're not waiting for the code pipeline to keep polling every",
    "start": "1700019",
    "end": "1706470"
  },
  {
    "text": "minute or so to see if there's a change so it should be kind of a little bit quicker and it's going to go through this",
    "start": "1706470",
    "end": "1711940"
  },
  {
    "text": "process now which is no we go so while",
    "start": "1711940",
    "end": "1726100"
  },
  {
    "text": "it's going to that process we're gonna kind of look at this build spec here so",
    "start": "1726100",
    "end": "1731530"
  },
  {
    "text": "this is the definition of in that pipeline what is it that code build is",
    "start": "1731530",
    "end": "1737050"
  },
  {
    "text": "supposed to be doing all this is if you're not familiar with go it's just downloading a bunch of libraries to this",
    "start": "1737050",
    "end": "1743590"
  },
  {
    "text": "code build environment it's running the make command so that it goes through and",
    "start": "1743590",
    "end": "1748690"
  },
  {
    "text": "just compiles all this for those for those not familiar with go the source code is compiled into a binary and that",
    "start": "1748690",
    "end": "1755710"
  },
  {
    "text": "binary can be run on like operating systems so we're compiling for 64-bit",
    "start": "1755710",
    "end": "1761530"
  },
  {
    "text": "Linux l32 and so that binary should be compatible with the other Linux systems",
    "start": "1761530",
    "end": "1768220"
  },
  {
    "text": "that are also you know x86 of 32 here we have a closer look at the app spec the",
    "start": "1768220",
    "end": "1775630"
  },
  {
    "text": "the key component here is that we've got a few ini files that are required to be sent along with the application so the",
    "start": "1775630",
    "end": "1783310"
  },
  {
    "text": "application has to know like where the database server is you know other components that are important so we",
    "start": "1783310",
    "end": "1789880"
  },
  {
    "text": "include that in the app spec as well as the build file to make sure that it's included in the source code archive and",
    "start": "1789880",
    "end": "1796660"
  },
  {
    "text": "that it gets copied over to all of these instances once we deploy it to code code",
    "start": "1796660",
    "end": "1803050"
  },
  {
    "text": "deploy as we're going through we see that the tests for Ghost inspector has",
    "start": "1803050",
    "end": "1808930"
  },
  {
    "text": "passed and we have our our website so we're gonna look at what is it that the",
    "start": "1808930",
    "end": "1815350"
  },
  {
    "text": "website should do so we get to our reservations lookup page and we want to",
    "start": "1815350",
    "end": "1820540"
  },
  {
    "text": "be able to enter a reservation here and then get the results back you'll notice",
    "start": "1820540",
    "end": "1826780"
  },
  {
    "text": "that something that should be pretty instantaneous actually takes a second so that's something we want to keep an eye",
    "start": "1826780",
    "end": "1832840"
  },
  {
    "text": "on is you know is that performance where it's supposed to be I think I sped it up",
    "start": "1832840",
    "end": "1838210"
  },
  {
    "text": "because it actually takes five seconds to return this value and so that that that's technically a little bit slow is that something that",
    "start": "1838210",
    "end": "1843990"
  },
  {
    "text": "our pipeline is going to end up coming across so here we're gonna oh here we're",
    "start": "1843990",
    "end": "1850980"
  },
  {
    "text": "gonna showcase the the the chrome app for Ghost inspector I thought this is",
    "start": "1850980",
    "end": "1858149"
  },
  {
    "text": "pretty nifty it's it's really it's really straightforward so you go to the you go to plugins you just you install",
    "start": "1858149",
    "end": "1864929"
  },
  {
    "text": "the ghost inspector app you know you obviously log in to ghost inspector I but now once you've done that you go to",
    "start": "1864929",
    "end": "1871679"
  },
  {
    "text": "your website and we're gonna start recording what it is that we're doing so",
    "start": "1871679",
    "end": "1877049"
  },
  {
    "text": "at the very top we click on ghost inspector we click on start recording and we're gonna be creating a new test",
    "start": "1877049",
    "end": "1883679"
  },
  {
    "text": "and once again ghost inspector is just does this work or does it not work the way that works the post the way that we",
    "start": "1883679",
    "end": "1889380"
  },
  {
    "text": "want it to so the first test that we did is you know does the website come up right now we make an assertion does the",
    "start": "1889380",
    "end": "1896340"
  },
  {
    "text": "website contain the text that we want it to now we record actually clicking on a",
    "start": "1896340",
    "end": "1903330"
  },
  {
    "text": "link once it so it records it'll click on that link and now if that link works",
    "start": "1903330",
    "end": "1911309"
  },
  {
    "text": "and a new page comes up does it contain the text associated there now we're",
    "start": "1911309",
    "end": "1917640"
  },
  {
    "text": "going to enter our our confirmation number so this is our sample that we're using this is a this is a production",
    "start": "1917640",
    "end": "1925250"
  },
  {
    "text": "unicorn customer so you know I guess technically a unicorn rentals production",
    "start": "1925250",
    "end": "1931770"
  },
  {
    "text": "data and so we've entered this customer's confirmation number and we always when we're looking up that",
    "start": "1931770",
    "end": "1938460"
  },
  {
    "text": "customer we always want it to contain that reservation code so in under 30",
    "start": "1938460",
    "end": "1944580"
  },
  {
    "text": "seconds we now have a full test that ensures that the unicorn rentals website",
    "start": "1944580",
    "end": "1950880"
  },
  {
    "text": "comes up ghost inspector pulls the screenshot down as well so that every",
    "start": "1950880",
    "end": "1956130"
  },
  {
    "text": "time it runs through this process you can actually you know have a have a little screen shot that shows you oh it",
    "start": "1956130",
    "end": "1962640"
  },
  {
    "text": "also looks good too you could do a lot of CSS testing as well but this is the",
    "start": "1962640",
    "end": "1968610"
  },
  {
    "text": "very basic so this is the question you know as we said you know does this work at all so",
    "start": "1968610",
    "end": "1973929"
  },
  {
    "text": "you've done the integration we've pushed it we've pushed a change through and we see that ghost inspector has come up as",
    "start": "1973929",
    "end": "1980950"
  },
  {
    "text": "a success from that test that we created in our Chrome application previously I",
    "start": "1980950",
    "end": "1987999"
  },
  {
    "text": "guess we're running another one now but you know here's the test definition and",
    "start": "1987999",
    "end": "1994929"
  },
  {
    "text": "it goes through exactly what we anticipate it'll go through you know it enters that reservation number it double",
    "start": "1994929",
    "end": "2000629"
  },
  {
    "text": "checks that the website responds at all obviously it does that simulated",
    "start": "2000629",
    "end": "2005999"
  },
  {
    "text": "clicking on those environments and it makes sure that all that text is there",
    "start": "2005999",
    "end": "2011460"
  },
  {
    "text": "so that confirmation code that we entered as our example is the",
    "start": "2011460",
    "end": "2017669"
  },
  {
    "text": "confirmation code that it pulled up and then super important is that Unicorn access code that comes up that's the",
    "start": "2017669",
    "end": "2023669"
  },
  {
    "text": "most critical piece to make sure that that never changes so this customer should always get that value you know",
    "start": "2023669",
    "end": "2030360"
  },
  {
    "text": "it's pretty nice we have a static value that we can test against and make sure that the application is definitely",
    "start": "2030360",
    "end": "2036029"
  },
  {
    "text": "working and then we see the screenshot of what of what the system sees on the",
    "start": "2036029",
    "end": "2042840"
  },
  {
    "text": "right there and that's with you know the full CSS and JavaScript rendering this",
    "start": "2042840",
    "end": "2048148"
  },
  {
    "text": "website it's actually a it's it's bootstrap so you know it's nice to actually have that visual representation",
    "start": "2048149",
    "end": "2054628"
  },
  {
    "text": "here but what about that performance testing we see that we've only got five",
    "start": "2054629",
    "end": "2062099"
  },
  {
    "text": "virtual users that blaze meters testing for so out of the five users that are",
    "start": "2062099",
    "end": "2067770"
  },
  {
    "text": "being tested to hit this application we've got a performance time an average",
    "start": "2067770",
    "end": "2073559"
  },
  {
    "text": "response time at 24 seconds that means that when five people hit this website at the same time it's taking 25 seconds",
    "start": "2073559",
    "end": "2081750"
  },
  {
    "text": "in order to get a response interestingly the the leadership at unicorn rentals is",
    "start": "2081750",
    "end": "2087990"
  },
  {
    "text": "actually ok with this response rate as long as it's under 30 seconds and so this test is actually considered passing",
    "start": "2087990",
    "end": "2094740"
  },
  {
    "text": "will see a test that fails but their magic number is 30 seconds but as we see",
    "start": "2094740",
    "end": "2100140"
  },
  {
    "text": "from the performance metrics over here we've got an average response time",
    "start": "2100140",
    "end": "2106370"
  },
  {
    "text": "of 18 seconds initially we've got some failures but kind of the the fun part",
    "start": "2106370",
    "end": "2112130"
  },
  {
    "text": "here is the overview that you get and a lot of the visual representation of this information as it goes through so we",
    "start": "2112130",
    "end": "2119150"
  },
  {
    "text": "kind of looked at how you know kind of how simple it is to get that integration going with blaze meter and our pipeline",
    "start": "2119150",
    "end": "2125780"
  },
  {
    "text": "and now this information this data this report is just made available quite",
    "start": "2125780",
    "end": "2131690"
  },
  {
    "text": "quite simply you know with minimal you know with minimal configuration minimal",
    "start": "2131690",
    "end": "2136790"
  },
  {
    "text": "implementation we've got we go we also here's some jmeter information that",
    "start": "2136790",
    "end": "2143570"
  },
  {
    "text": "might look really familiar to some people in this group but our original test configuration this is where we",
    "start": "2143570",
    "end": "2149960"
  },
  {
    "text": "identify what are those success features you know what what what denotes a",
    "start": "2149960",
    "end": "2155420"
  },
  {
    "text": "success versus a failure here and so some of those values that we set are the",
    "start": "2155420",
    "end": "2162100"
  },
  {
    "text": "the maximum response time should not be over 30 seconds here we see that it is",
    "start": "2162100",
    "end": "2168110"
  },
  {
    "text": "22 seconds as our response to our maximum response time you should not",
    "start": "2168110",
    "end": "2173870"
  },
  {
    "text": "have any errors also the number of errors should not have should I think",
    "start": "2173870",
    "end": "2179030"
  },
  {
    "text": "it's less than 2 or less than 5% something like that but this is how we identify how we create this test so",
    "start": "2179030",
    "end": "2186740"
  },
  {
    "text": "blaze meter has a bunch of different ways that you can configure a test you can upload a script you can upload",
    "start": "2186740",
    "end": "2192110"
  },
  {
    "text": "jmeter you can upload selenium scripts do a bunch of different things to get the scripts updated or you can use their web",
    "start": "2192110",
    "end": "2199910"
  },
  {
    "text": "interface to to define what the test looks like and this is where we set",
    "start": "2199910",
    "end": "2205070"
  },
  {
    "text": "those failure and success parameters and so as we saw from this example we give",
    "start": "2205070",
    "end": "2210560"
  },
  {
    "text": "it a URL and we're just posting some data over to the API and that's the test",
    "start": "2210560",
    "end": "2216200"
  },
  {
    "text": "that's taking place so we have our test defined in blaze meter this one's still",
    "start": "2216200",
    "end": "2221420"
  },
  {
    "text": "running in our current pipeline but the test is defined so that when it runs through code pipeline it hits that test",
    "start": "2221420",
    "end": "2228140"
  },
  {
    "text": "definition and code pipeline knows exactly what it's supposed to be testing so after all this is done we'll have a",
    "start": "2228140",
    "end": "2235760"
  },
  {
    "text": "success from ghost inspector which says that the applications working and we'll have a success from Blaise",
    "start": "2235760",
    "end": "2241849"
  },
  {
    "text": "meter that says not only is it working but it's within you know sudo acceptable",
    "start": "2241849",
    "end": "2246859"
  },
  {
    "text": "performance parameters",
    "start": "2246859",
    "end": "2249910"
  },
  {
    "text": "and so we went through so that's you know the simplest examples we can think of is you've got a you've got an",
    "start": "2259830",
    "end": "2266140"
  },
  {
    "text": "application a single binary file a couple of configuration files and you're",
    "start": "2266140",
    "end": "2271300"
  },
  {
    "text": "deploying that to ec2 instances you know there's no containerization it's just we're taking an application running it",
    "start": "2271300",
    "end": "2277840"
  },
  {
    "text": "on instances and it were automating that deployment so how do we look at some of",
    "start": "2277840",
    "end": "2283570"
  },
  {
    "text": "the other opportunities here so the next one is how do we build that exact same application but we're gonna do it",
    "start": "2283570",
    "end": "2289600"
  },
  {
    "text": "serverless right so kind of going through some of the services we're gonna be using this is well technically these",
    "start": "2289600",
    "end": "2295570"
  },
  {
    "text": "are all the these are the service services we're gonna be using lambda s3",
    "start": "2295570",
    "end": "2300960"
  },
  {
    "text": "interestingly we're not going to be using dynamo it's a long story but we've",
    "start": "2300960",
    "end": "2306820"
  },
  {
    "text": "got our service application which is the idea of infrastructure as code everything that's going to be used for",
    "start": "2306820",
    "end": "2313630"
  },
  {
    "text": "this serverless implementation of the application is defined in cloud",
    "start": "2313630",
    "end": "2319120"
  },
  {
    "text": "formation as well as some random zip files that we're gonna be digging through and this is what the overview",
    "start": "2319120",
    "end": "2325960"
  },
  {
    "text": "looks like so we've got we've got cloud front sitting in front API gateway which is handling our HTTP",
    "start": "2325960",
    "end": "2332680"
  },
  {
    "text": "endpoint we've got it some static content and s3 lambda is going to be doing the dynamic execution and then",
    "start": "2332680",
    "end": "2339790"
  },
  {
    "text": "interestingly two weeks ago the application was written in dynamo as I said you know we work a lot with our",
    "start": "2339790",
    "end": "2345700"
  },
  {
    "text": "partners one of my partners asked me to do some performance testing with lambda and V PC so in order to do that kind of",
    "start": "2345700",
    "end": "2352570"
  },
  {
    "text": "two birds one stone I switched it over to Maria DB slash my SQL with VP C so",
    "start": "2352570",
    "end": "2359410"
  },
  {
    "text": "the application is now lambda you know connecting to a MySQL you know",
    "start": "2359410",
    "end": "2365500"
  },
  {
    "text": "compatible server using V PC",
    "start": "2365500",
    "end": "2369810"
  },
  {
    "text": "all right so one of the first things we'll notice is a little bit about the performance aspect this application it",
    "start": "2402599",
    "end": "2410400"
  },
  {
    "text": "was a single binary previously it is now run in serverless because we had to",
    "start": "2410400",
    "end": "2415920"
  },
  {
    "text": "refactor the entire piece because unicorn rentals had to refactor the entire application for serverless they",
    "start": "2415920",
    "end": "2422489"
  },
  {
    "text": "actually changed some of their performance metrics associated with it so it's much faster than it used to be",
    "start": "2422489",
    "end": "2429569"
  },
  {
    "text": "in in ec2 but that's entirely because they got a new team that came in and",
    "start": "2429569",
    "end": "2434970"
  },
  {
    "text": "redid the source code so we've got once again we've got our ghost inspector",
    "start": "2434970",
    "end": "2441869"
  },
  {
    "text": "implementation that is going to be doing our testing we've run through how it is that we engage with ghost inspector we",
    "start": "2441869",
    "end": "2449999"
  },
  {
    "text": "also have a blaze meter that's going through and doing a lot of the performance metrics as well",
    "start": "2449999",
    "end": "2459018"
  },
  {
    "text": "okay that's actually so no sorry about that that's actually out of order",
    "start": "2468359",
    "end": "2473989"
  },
  {
    "text": "yeah yeah sorry about that did that a little bit out of order",
    "start": "2492100",
    "end": "2496950"
  },
  {
    "text": "all right so going through what does it look like to be serverless here we've",
    "start": "2502630",
    "end": "2509619"
  },
  {
    "text": "got so we're using API gateway in order to create this API endpoint so we've got",
    "start": "2509619",
    "end": "2517180"
  },
  {
    "text": "our static content that is being hosted in s3 we're using jQuery in order to",
    "start": "2517180",
    "end": "2522819"
  },
  {
    "text": "query our API endpoint and we're using VPC with lambda to be able to get the",
    "start": "2522819",
    "end": "2529960"
  },
  {
    "text": "data out of a MySQL compatible server so",
    "start": "2529960",
    "end": "2535450"
  },
  {
    "text": "the first thing that we're gonna do is we need to create our lambda function we're using the server list application",
    "start": "2535450",
    "end": "2540849"
  },
  {
    "text": "model here so it's all wrapped in a cloud formation template and then",
    "start": "2540849",
    "end": "2546400"
  },
  {
    "text": "dynamically updated with the serverless application model so as you can as you",
    "start": "2546400",
    "end": "2552220"
  },
  {
    "text": "can probably expect we want to create test cases which eat with with each of these steps so we've got we've got API",
    "start": "2552220",
    "end": "2561220"
  },
  {
    "text": "gateway with a with a built-in test we've got lambda with a built-in test so that we can have it so we can ensure",
    "start": "2561220",
    "end": "2566980"
  },
  {
    "text": "functionality on every step here we've got when we're looking at the at the",
    "start": "2566980",
    "end": "2573069"
  },
  {
    "text": "serverless application model we're gonna get the we're gonna get the definition for our api gateway endpoints as swagger",
    "start": "2573069",
    "end": "2580839"
  },
  {
    "text": "and so that's part of that dynamic updating as this is pushed straight",
    "start": "2580839",
    "end": "2586569"
  },
  {
    "text": "through the you know the the swagger file by default you probably want to",
    "start": "2586569",
    "end": "2594670"
  },
  {
    "text": "even when you copy it and over to your property or pipeline you probably want to dig through it a little bit more to",
    "start": "2594670",
    "end": "2600700"
  },
  {
    "text": "update things like or any other details that you know are kind of",
    "start": "2600700",
    "end": "2605980"
  },
  {
    "text": "important to your implementation so we've got our API defined as slash",
    "start": "2605980",
    "end": "2611500"
  },
  {
    "text": "lookup we're expecting a post since that's the only method that is returning",
    "start": "2611500",
    "end": "2616720"
  },
  {
    "text": "information and so you know the build pipeline looks a little bit different as",
    "start": "2616720",
    "end": "2622210"
  },
  {
    "text": "does the build spec you know we're still doing that make so we decided to keep it",
    "start": "2622210",
    "end": "2628210"
  },
  {
    "text": "as golang only now we're building go laying specifically for lambda so you",
    "start": "2628210",
    "end": "2634750"
  },
  {
    "text": "know a little bit of refactoring as part of this build process now since everything",
    "start": "2634750",
    "end": "2639860"
  },
  {
    "text": "is serverless we're copying some assets over to s3 because there might be some",
    "start": "2639860",
    "end": "2645680"
  },
  {
    "text": "HTML updates where I code build will",
    "start": "2645680",
    "end": "2650930"
  },
  {
    "text": "create a copy of the of the the build archive but as you can see I always tend",
    "start": "2650930",
    "end": "2659090"
  },
  {
    "text": "to keep an extra version laying around so which is why lookup dot zip is copied",
    "start": "2659090",
    "end": "2664820"
  },
  {
    "text": "over to a static location in addition to what code build creates that's a",
    "start": "2664820",
    "end": "2670850"
  },
  {
    "text": "versioned destination so that I could always say I always have a static link of where my current code base is located",
    "start": "2670850",
    "end": "2678910"
  },
  {
    "text": "we've got the the important part is that is that CloudFormation",
    "start": "2678910",
    "end": "2684110"
  },
  {
    "text": "update segment so what happens is you have this you have this idea of a cloud",
    "start": "2684110",
    "end": "2691010"
  },
  {
    "text": "formation sort of overall template and then and then you know the Sam update",
    "start": "2691010",
    "end": "2697280"
  },
  {
    "text": "that's applied to it so we have a template that says these are the lambda functions that are needed here's the",
    "start": "2697280",
    "end": "2703640"
  },
  {
    "text": "lambda permissions that are needed and then as code build goes through and creates these new iterations of the",
    "start": "2703640",
    "end": "2709760"
  },
  {
    "text": "application it'll actually update that process so that when you create a change",
    "start": "2709760",
    "end": "2715130"
  },
  {
    "text": "set so in cloud formation we have our stack already running the stack never stops running it just gets updated that's done",
    "start": "2715130",
    "end": "2722060"
  },
  {
    "text": "with a change set here we have the difference here is run scope so run",
    "start": "2722060",
    "end": "2727520"
  },
  {
    "text": "scope is what we're using for our API monitoring so in the previous examples",
    "start": "2727520",
    "end": "2732680"
  },
  {
    "text": "everything was done as a single standalone application single binary here we have our API endpoint with HTML",
    "start": "2732680",
    "end": "2742220"
  },
  {
    "text": "separate via static content that then does the poll as needed from that",
    "start": "2742220",
    "end": "2747770"
  },
  {
    "text": "dynamic endpoint so run scope is just purely testing our API gateway",
    "start": "2747770",
    "end": "2753200"
  },
  {
    "text": "implementation so run scope will do a post against this during the deployment process it'll just send JSON data",
    "start": "2753200",
    "end": "2760070"
  },
  {
    "text": "directly to our API gateway endpoint and it expects J saw a specific JSON",
    "start": "2760070",
    "end": "2766580"
  },
  {
    "text": "back with our HTML file that's being hosted statically this is a jQuery",
    "start": "2766580",
    "end": "2774020"
  },
  {
    "text": "implementation so that's something that you're going to see for serverless serverless content you're gonna look at",
    "start": "2774020",
    "end": "2780650"
  },
  {
    "text": "a lot that like angular react you know standard jQuery but it is the separation",
    "start": "2780650",
    "end": "2786380"
  },
  {
    "text": "between that which is static content and that which is the API so seeing as we're",
    "start": "2786380",
    "end": "2793100"
  },
  {
    "text": "looking at API this is the this is a curl representation of pretty much",
    "start": "2793100",
    "end": "2799280"
  },
  {
    "text": "exactly what run scope is going to be doing so it's just doing a post to our API gateway endpoint and that is the",
    "start": "2799280",
    "end": "2806780"
  },
  {
    "text": "JSON data that should be returned so if we mucked anything up during the build",
    "start": "2806780",
    "end": "2811850"
  },
  {
    "text": "we obviously want this to fail if it fails run scope will pick that up and it's the same thing as adding ghost",
    "start": "2811850",
    "end": "2818720"
  },
  {
    "text": "inspector to the process is the same thing as adding blaze meter to the process run scope is a drop down set is",
    "start": "2818720",
    "end": "2825110"
  },
  {
    "text": "the drop down option when we say what test are we going to implement here so",
    "start": "2825110",
    "end": "2831860"
  },
  {
    "text": "we've so here's some of the some of the details associated with run scope have a",
    "start": "2831860",
    "end": "2837530"
  },
  {
    "text": "little bit of performance information but what we're looking at here is we're",
    "start": "2837530",
    "end": "2842600"
  },
  {
    "text": "using blaze meter as the emphasis for our performance testing what we care about with run scope is does it work and",
    "start": "2842600",
    "end": "2849170"
  },
  {
    "text": "does it resolve in an acceptable amount of time so we're looking at error rate very similar to what we're looking at",
    "start": "2849170",
    "end": "2855950"
  },
  {
    "text": "with ghost inspector we're looking at error rate does it work and does it work an acceptable amount of time so just",
    "start": "2855950",
    "end": "2863750"
  },
  {
    "text": "like before we're doing a build with code build the difference here is that when we deploy this application this is",
    "start": "2863750",
    "end": "2871040"
  },
  {
    "text": "doing a deploy directly to cloud formation so it does a call that says I have an update for everything in cloud",
    "start": "2871040",
    "end": "2877910"
  },
  {
    "text": "formation so our API gateway our lambda everything is in cloud formation right now you know we we have an update to do",
    "start": "2877910",
    "end": "2885740"
  },
  {
    "text": "so a change set is created so there's actually two different steps here the first is that the change set is",
    "start": "2885740",
    "end": "2891830"
  },
  {
    "text": "submitted to cloud formation and the second one is that the change set is executed in cloud for",
    "start": "2891830",
    "end": "2896890"
  },
  {
    "text": "nation and kind of this is where you get that that that divide between do we automate everything or do we have a",
    "start": "2896890",
    "end": "2903370"
  },
  {
    "text": "manual process that says I accept the change so you know we've automated everything here which is that executes",
    "start": "2903370",
    "end": "2909550"
  },
  {
    "text": "change set in a typical ago where you don't want to automate that final leg to",
    "start": "2909550",
    "end": "2915850"
  },
  {
    "text": "production you would make that a manual step where your QA staff says ok I",
    "start": "2915850",
    "end": "2921150"
  },
  {
    "text": "accept this change I don't think it's going to break anything execute change set and then that's how",
    "start": "2921150",
    "end": "2926920"
  },
  {
    "text": "you get that final leg as it goes to production",
    "start": "2926920",
    "end": "2933090"
  },
  {
    "text": "all right and now our final example here I think we need to see the slide deck",
    "start": "2950599",
    "end": "2956960"
  },
  {
    "text": "again so we now have our application running in the serverless environment",
    "start": "2956960",
    "end": "2962660"
  },
  {
    "text": "we've seen the example of checking that the application is functioning with run scope so what does this look like with",
    "start": "2962660",
    "end": "2969079"
  },
  {
    "text": "with Jenkins and how we doing this entire build environment utilizing spot",
    "start": "2969079",
    "end": "2974779"
  },
  {
    "text": "instances so we have the same application once again this is a goaling application in this example we're",
    "start": "2974779",
    "end": "2982039"
  },
  {
    "text": "building it we're building it in Jenkins we're deploying it to docker so we're",
    "start": "2982039",
    "end": "2987170"
  },
  {
    "text": "having to build this docker container store this docker container somewhere and then instruct ECS that's actually",
    "start": "2987170",
    "end": "2994729"
  },
  {
    "text": "orchestrating the docker container that it's ready for update and it should be updated",
    "start": "2994729",
    "end": "3000119"
  },
  {
    "text": "we've got once again we're doing some some checking here we're standardizing on on ghost inspector just to make sure",
    "start": "3000119",
    "end": "3009369"
  },
  {
    "text": "that the application runs as anticipated so here we have our Jenkins instance if",
    "start": "3009369",
    "end": "3016869"
  },
  {
    "text": "you'll notice on the bottom left we've got some executors which our which are our spot instances that are being run",
    "start": "3016869",
    "end": "3023890"
  },
  {
    "text": "with this Jenkins has a spot fleet module plugin that we're actually that",
    "start": "3023890",
    "end": "3029890"
  },
  {
    "text": "we're using and here we've selected a fleet within a region we're defining",
    "start": "3029890",
    "end": "3035920"
  },
  {
    "text": "this fleet according to you know what are the requirements of our application what are the requirements for our build",
    "start": "3035920",
    "end": "3041549"
  },
  {
    "text": "for this specific build you know we're using t-series instances because this is",
    "start": "3041549",
    "end": "3047259"
  },
  {
    "text": "a pretty quick build you know you want to make sure they use the instance types that kind of really reflect what you're",
    "start": "3047259",
    "end": "3052599"
  },
  {
    "text": "using but the but the fun part here is that you don't have to say oh I'm going to use it a t2 Micro I'm gonna use a t1",
    "start": "3052599",
    "end": "3059049"
  },
  {
    "text": "micro you can say I want to use this class of instances just whatever is cheapest and let's pot fleet figure that",
    "start": "3059049",
    "end": "3065619"
  },
  {
    "text": "out you know you can say you know maybe I want to use maybe I want to expand that to em threes and fours you know",
    "start": "3065619",
    "end": "3074019"
  },
  {
    "text": "whatever it looks like you know let's pot flee to do those calculations and you just say I just want a fleet that",
    "start": "3074019",
    "end": "3080619"
  },
  {
    "text": "meets these requirements that fleets always available you don't exactly what instance is available but",
    "start": "3080619",
    "end": "3086110"
  },
  {
    "text": "that fleets always available so whatever is assigned to that fleet starts up it attaches to your Jenkins instance and is",
    "start": "3086110",
    "end": "3093010"
  },
  {
    "text": "run as an executor for that instance here we have so we've just in our",
    "start": "3093010",
    "end": "3100030"
  },
  {
    "text": "example we've just made an update to the task definition so we've updated the application the application",
    "start": "3100030",
    "end": "3106870"
  },
  {
    "text": "you know kicks off a code commit to update which requires the entire process",
    "start": "3106870",
    "end": "3112000"
  },
  {
    "text": "to rebuild this container because we built everything as a single static piece of content in that container and",
    "start": "3112000",
    "end": "3118270"
  },
  {
    "text": "so Jenkins creates our new container it uploads it to AWS ECR you can see we",
    "start": "3118270",
    "end": "3125020"
  },
  {
    "text": "have a version tag here and when we refresh you'll see that there's a new task definition that goes from 11 to 12",
    "start": "3125020",
    "end": "3132930"
  },
  {
    "text": "and so as this process goes it creates a new new container uploads it to ECR",
    "start": "3132930",
    "end": "3140560"
  },
  {
    "text": "creates a new task definition and then tells ECS that there's a new task definition so you have to you know",
    "start": "3140560",
    "end": "3147370"
  },
  {
    "text": "update all of the current tasks that are running and get that new version out",
    "start": "3147370",
    "end": "3152800"
  },
  {
    "text": "there and deployed here in our test definition you'll notice that there's a",
    "start": "3152800",
    "end": "3158080"
  },
  {
    "text": "build number of dynamic parameter at the very end and that's where we identify",
    "start": "3158080",
    "end": "3164250"
  },
  {
    "text": "you know the the build number from Jenkins and just to make it a little bit more",
    "start": "3164250",
    "end": "3170290"
  },
  {
    "text": "easier to read in the world we tag it with a version number so that we can see",
    "start": "3170290",
    "end": "3175690"
  },
  {
    "text": "that this is version 28 29 that type of thing here's our docker configuration",
    "start": "3175690",
    "end": "3181480"
  },
  {
    "text": "super simple it's a single binary with with some with some configuration files",
    "start": "3181480",
    "end": "3188620"
  },
  {
    "text": "associated with it and then for our production environment",
    "start": "3188620",
    "end": "3194010"
  },
  {
    "text": "we also included the app spec but that's because I was also going to be deploying to code deploy so once again we've got",
    "start": "3194010",
    "end": "3202210"
  },
  {
    "text": "our Jenkins implementation it is actually going to be building all of this and deploying all this via those",
    "start": "3202210",
    "end": "3209140"
  },
  {
    "text": "spot instances that are dynamically associated with the Jenkins server if",
    "start": "3209140",
    "end": "3214780"
  },
  {
    "text": "let's say that we are not bidding enough in our spot fleet where we would lose our instance what",
    "start": "3214780",
    "end": "3220640"
  },
  {
    "text": "would happen is that instance would drop off something that does meet our pricing guidelines the cheapest thing out of all",
    "start": "3220640",
    "end": "3227510"
  },
  {
    "text": "of those different ec2 instance categories would be associated and then that would become available for building",
    "start": "3227510",
    "end": "3234610"
  },
  {
    "text": "one of the questions that we get is you know what if you know I'm in the middle",
    "start": "3234610",
    "end": "3240050"
  },
  {
    "text": "of building like you know they've got a four-hour build process you know I don't want spot fleets cycling out those",
    "start": "3240050",
    "end": "3247220"
  },
  {
    "text": "specific instances you know just to give me something cheaper like I want that one instance that's starting to build",
    "start": "3247220",
    "end": "3252740"
  },
  {
    "text": "and that's actually another feature of spot where you can do guaranteed time on",
    "start": "3252740",
    "end": "3258260"
  },
  {
    "text": "instances so you know you you would then say that for each of these spot",
    "start": "3258260",
    "end": "3263810"
  },
  {
    "text": "instances that I'm starting up I want this available for X amount of time so",
    "start": "3263810",
    "end": "3269030"
  },
  {
    "text": "that you know it wouldn't go anywhere in our example this is a really quick deployment this only takes like two",
    "start": "3269030",
    "end": "3275120"
  },
  {
    "text": "minutes to build so you know if it fails just let it do it again not a different",
    "start": "3275120",
    "end": "3280490"
  },
  {
    "text": "instance here we have our our build instructions we're using the Jenkins",
    "start": "3280490",
    "end": "3287150"
  },
  {
    "text": "golang plugin we've got our commands here you know real simple pretty much a make all download some libraries we're",
    "start": "3287150",
    "end": "3295550"
  },
  {
    "text": "building our container with the with the Jenkins docker plugin we're identifying",
    "start": "3295550",
    "end": "3302090"
  },
  {
    "text": "that build number and then we're doing the execution we've got our build steps",
    "start": "3302090",
    "end": "3307220"
  },
  {
    "text": "they're in the execution and these are just some instructions that say create a",
    "start": "3307220",
    "end": "3312530"
  },
  {
    "text": "new task definition for each of these and then you know update ECS with that",
    "start": "3312530",
    "end": "3318170"
  },
  {
    "text": "associated task definition so as we do a so as we do an update to any of this",
    "start": "3318170",
    "end": "3325280"
  },
  {
    "text": "whether it's an application code update whether it's an HTML update that content",
    "start": "3325280",
    "end": "3330860"
  },
  {
    "text": "is constantly rebuilt and constantly pushed out to ECS and you know a really fun part is we can really easily expand",
    "start": "3330860",
    "end": "3338210"
  },
  {
    "text": "this to do Bluegreen deployments where maybe it only updates the half and there's an association with a staging",
    "start": "3338210",
    "end": "3344270"
  },
  {
    "text": "URL to those half you know if there's something that does go wrong that you don't",
    "start": "3344270",
    "end": "3349350"
  },
  {
    "text": "you know you can easily revert back you could do this idea of 50% 25% deployment",
    "start": "3349350",
    "end": "3355560"
  },
  {
    "text": "strategies you know it there's there's a lot of different configuration options associated with that and then you know",
    "start": "3355560",
    "end": "3371310"
  },
  {
    "text": "the overall view here for that one is you know we've got code commit creating",
    "start": "3371310",
    "end": "3376560"
  },
  {
    "text": "a change you know we're put we're having docker I mean we're having Jenkins orchestrate everything push to ECR and then over to",
    "start": "3376560",
    "end": "3383910"
  },
  {
    "text": "ECS and and that's it I I would encourage you to please fill out your",
    "start": "3383910",
    "end": "3390030"
  },
  {
    "text": "surveys then in our department we have a little competition whoever does the worst on the surveys has to walk home",
    "start": "3390030",
    "end": "3396420"
  },
  {
    "text": "and so Seattle's pretty far so I'd like not to do the worst but that's alright I got a new pair of shoes pretty excited",
    "start": "3396420",
    "end": "3402840"
  },
  {
    "text": "also as I said you know kind of doing a little bit of a promo for game day so I've got stickers so you guys want to",
    "start": "3402840",
    "end": "3409890"
  },
  {
    "text": "hang out for just the second here while I hand out stickers I'd appreciate it and thank you very much",
    "start": "3409890",
    "end": "3415130"
  },
  {
    "text": "[Applause]",
    "start": "3415130",
    "end": "3418159"
  }
]