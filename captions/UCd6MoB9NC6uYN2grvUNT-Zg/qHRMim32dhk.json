[
  {
    "start": "0",
    "end": "32000"
  },
  {
    "text": "my name is so hip tahir and I am a Solutions Architect AWS in the state local government team and my",
    "start": "30",
    "end": "6210"
  },
  {
    "text": "co-presenter Brian Tracy he's also senior solution raccattack in my team and today we are going to talk",
    "start": "6210",
    "end": "12360"
  },
  {
    "text": "about how you can simplify compliance security and governance and operations",
    "start": "12360",
    "end": "19770"
  },
  {
    "text": "using Systems Manager we will take all the questions towards the end we have a bit of the ground to cover",
    "start": "19770",
    "end": "25199"
  },
  {
    "text": "so please please on please hold on to your questions so let's get started so a",
    "start": "25199",
    "end": "33540"
  },
  {
    "start": "32000",
    "end": "32000"
  },
  {
    "text": "quick show of hands how many people have used systems manager quite a few how",
    "start": "33540",
    "end": "40739"
  },
  {
    "text": "many people have know about ablest systems manager good alright so first",
    "start": "40739",
    "end": "47879"
  },
  {
    "text": "thing first so Systems Manager which was formerly known as Amazon ec2 Systems Manager or",
    "start": "47879",
    "end": "54770"
  },
  {
    "text": "Amazon simple Systems Manager is basically it's a collection of capabilities for configuring and",
    "start": "54770",
    "end": "61530"
  },
  {
    "text": "managing your Amazon ec2 instances your on-prem resources or any VM with the",
    "start": "61530",
    "end": "67290"
  },
  {
    "text": "Systems Manager agent running on it and you can do that at scale you can do",
    "start": "67290",
    "end": "73020"
  },
  {
    "text": "things like applying operating system patches or software patches you can collect inventory data you can build",
    "start": "73020",
    "end": "81180"
  },
  {
    "text": "automation workflows like creating golden images and so on with system manager different features and you can",
    "start": "81180",
    "end": "88770"
  },
  {
    "text": "use Systems Manager console which is a new experience that we came up with last week that became a came up with last",
    "start": "88770",
    "end": "95640"
  },
  {
    "text": "year or you can use tli or SDK for",
    "start": "95640",
    "end": "100680"
  },
  {
    "text": "system manager as well we also have AWS toolkit for for PowerShell you can also",
    "start": "100680",
    "end": "107399"
  },
  {
    "text": "use that for using Systems Manager service so Systems Manager basically",
    "start": "107399",
    "end": "113280"
  },
  {
    "text": "helps you to reduce the time to detect and resolve your operational issues and",
    "start": "113280",
    "end": "119820"
  },
  {
    "text": "also maintain security and compliance how you do it you basically can group",
    "start": "119820",
    "end": "125490"
  },
  {
    "text": "your resources in a logical manner using Systems Manager and then you can gain insight into those resources such as you",
    "start": "125490",
    "end": "132720"
  },
  {
    "text": "can get operation matrix operation alerts you can get the API information about those resources you can drag an enforce",
    "start": "132720",
    "end": "140970"
  },
  {
    "text": "configuration changes and then basically you can take either a proactive action",
    "start": "140970",
    "end": "146970"
  },
  {
    "text": "or a reactive action using again system manager features and we will talk through those throughout this session",
    "start": "146970",
    "end": "154280"
  },
  {
    "text": "alright so moving on system managers have has multiple components I'll talk",
    "start": "154280",
    "end": "162930"
  },
  {
    "start": "155000",
    "end": "155000"
  },
  {
    "text": "about some of them in detail in the later part but just to give you a highlight it has many of these features",
    "start": "162930",
    "end": "170490"
  },
  {
    "start": "168000",
    "end": "168000"
  },
  {
    "text": "that you are seeing on the slide one of the important component is Systems Manager document so it's basically a set",
    "start": "170490",
    "end": "176880"
  },
  {
    "text": "of instructions that you can use to execute commands or automation workflows or enforce policies configuration",
    "start": "176880",
    "end": "183209"
  },
  {
    "text": "policies and then it has features like run command that can allow you to remotely execute commands or scripts as",
    "start": "183209",
    "end": "189780"
  },
  {
    "text": "long as you have an agent on the machine you can also configure something like",
    "start": "189780",
    "end": "195090"
  },
  {
    "text": "maintenance windows for scheduling disruptive actions that you have to",
    "start": "195090",
    "end": "201269"
  },
  {
    "text": "perform on your environment all right so",
    "start": "201269",
    "end": "206959"
  },
  {
    "text": "let's dive deep into some of these features so the first one I like to talk about is AWS resource group which is",
    "start": "206959",
    "end": "214920"
  },
  {
    "start": "210000",
    "end": "210000"
  },
  {
    "text": "part which is a feature of a Systems Manager service it basically allows you",
    "start": "214920",
    "end": "220709"
  },
  {
    "text": "to group your resources logically based on a matching criteria such as a tag and",
    "start": "220709",
    "end": "227630"
  },
  {
    "text": "you guys may know a tag is a key value pair so you can just define a tag something like environment equal to",
    "start": "227630",
    "end": "234269"
  },
  {
    "text": "production once you have this tag you can query systems manager and you can",
    "start": "234269",
    "end": "239400"
  },
  {
    "text": "find all the resources within this particular environment such as ec2 instances EBS volumes",
    "start": "239400",
    "end": "246950"
  },
  {
    "text": "lambda functions RDS instances and so on you can also group your resources or",
    "start": "246950",
    "end": "253880"
  },
  {
    "text": "building block of your applications together using resource groups such as a friendly a front-end layer and then a",
    "start": "253880",
    "end": "260880"
  },
  {
    "text": "back-end layer and then you can again query them or execute actions against these these resources using the",
    "start": "260880",
    "end": "267480"
  },
  {
    "text": "source group resource group is also dynamic what I mean by that is basically",
    "start": "267480",
    "end": "274350"
  },
  {
    "text": "for example if you have a resource group that has a bunch of ec2 instances in auto scaling group or the scaling can",
    "start": "274350",
    "end": "281280"
  },
  {
    "text": "actually add and remove resources on based on the criteria define and resource group is automatically going to",
    "start": "281280",
    "end": "288630"
  },
  {
    "text": "update that and you don't have to go and manually update your resource group so again if you have some action that",
    "start": "288630",
    "end": "294480"
  },
  {
    "text": "you're running on your resource group it will work just as fine even if the auto scaling group is adding or removing",
    "start": "294480",
    "end": "300000"
  },
  {
    "text": "resources on the fly the next feature that I like to talk about related to",
    "start": "300000",
    "end": "307500"
  },
  {
    "start": "305000",
    "end": "305000"
  },
  {
    "text": "system geyser is built-in insights so built-in insights is basically integration with other a double services",
    "start": "307500",
    "end": "312930"
  },
  {
    "text": "such as AWS cloud trail so AWS cloud trail is our API tracking and auditing",
    "start": "312930",
    "end": "318720"
  },
  {
    "text": "service so in systems manager allow you through this feature to basically find",
    "start": "318720",
    "end": "324750"
  },
  {
    "text": "the API calls within the resource group similarly you can also see AWS",
    "start": "324750",
    "end": "330930"
  },
  {
    "text": "configuration upon figitus sorry configuration changes on your resources using AWS config on your Z resource",
    "start": "330930",
    "end": "338550"
  },
  {
    "text": "group the other thing that is also built into this inside dashboard is personal",
    "start": "338550",
    "end": "346650"
  },
  {
    "text": "health dashboard that actually shows you the operational status of alw services you can also see that in single",
    "start": "346650",
    "end": "352820"
  },
  {
    "text": "dashboard view and similar is the case with AWS trusted advisor which is our",
    "start": "352820",
    "end": "357980"
  },
  {
    "text": "service that allows that actually that actually provides you recommendations on AWS practices around security cost",
    "start": "357980",
    "end": "364560"
  },
  {
    "text": "optimization and performance optimization so you can get all those recommendations in the summary in",
    "start": "364560",
    "end": "369900"
  },
  {
    "text": "Systems Manager built-in insight dashboard alright so moving on so the",
    "start": "369900",
    "end": "377370"
  },
  {
    "start": "375000",
    "end": "375000"
  },
  {
    "text": "next feature you can use when it comes to system manager is building your operational dashboards and you can build",
    "start": "377370",
    "end": "383880"
  },
  {
    "text": "your operational dashboards using cloud watch dashboards in systems manager",
    "start": "383880",
    "end": "388910"
  },
  {
    "text": "console basically so you can build operational dashboards for your team so",
    "start": "388910",
    "end": "394980"
  },
  {
    "text": "teams let's say for example you can build a operational dashboard for your",
    "start": "394980",
    "end": "400500"
  },
  {
    "text": "networking team similarly you can build your operational dashboard for maybe a storage team with the relevant relevant metrics you can if",
    "start": "400500",
    "end": "407040"
  },
  {
    "text": "you are using if you are already using cloud watch metrics maybe custom cloud",
    "start": "407040",
    "end": "412410"
  },
  {
    "text": "watch metrics such as memory utilization you can also bring them in this dashboard and you can make it part of",
    "start": "412410",
    "end": "418770"
  },
  {
    "text": "your operational process similar is the case with leveraging your existing cloud",
    "start": "418770",
    "end": "426300"
  },
  {
    "text": "watch leverage cloud watch metrics and it's not just about infrastructure level",
    "start": "426300",
    "end": "431850"
  },
  {
    "text": "metrics you can also include your application metrics all right so the",
    "start": "431850",
    "end": "438660"
  },
  {
    "start": "437000",
    "end": "437000"
  },
  {
    "text": "next feature I like to talk about is inventory and compliance you can build",
    "start": "438660",
    "end": "445650"
  },
  {
    "text": "your software catalog using inventory feature of Systems Manager you can track",
    "start": "445650",
    "end": "451070"
  },
  {
    "text": "operating system version application version software version you can even",
    "start": "451070",
    "end": "457080"
  },
  {
    "text": "track folders and files and permissions using inventory feature and once you have once you have built this software",
    "start": "457080",
    "end": "464040"
  },
  {
    "text": "catalog you can define what you consider to be a compliant behavior and then you can create compliant rule compliance",
    "start": "464040",
    "end": "470460"
  },
  {
    "text": "rules using maybe existing scripts or maybe PowerShell scripts even shell",
    "start": "470460",
    "end": "475890"
  },
  {
    "text": "scripts R or something like ansible I'm going to show you a demo about ansible later in the presentation",
    "start": "475890",
    "end": "482850"
  },
  {
    "text": "but you can use your as existing tools as well to build those combined rules and then the system manager console can",
    "start": "482850",
    "end": "491160"
  },
  {
    "text": "actually show you if your resources are compliant or not against these rules one of the third-party tool that you can use",
    "start": "491160",
    "end": "499800"
  },
  {
    "text": "to build compliance rules or is basically chef inspect you can also use if you are using it today and bring",
    "start": "499800",
    "end": "506070"
  },
  {
    "text": "those rules maybe through github or Amazon s3 into system manager so that it",
    "start": "506070",
    "end": "511260"
  },
  {
    "text": "can check your resources against those chef inspect compliance rules once you have collected all this data what you",
    "start": "511260",
    "end": "518010"
  },
  {
    "start": "518000",
    "end": "518000"
  },
  {
    "text": "can do is you can actually push all this data into maybe a central s3 bucket so",
    "start": "518010",
    "end": "524550"
  },
  {
    "text": "think about this from a central IT perspective for example if you are a central IT and you if you want to build",
    "start": "524550",
    "end": "529710"
  },
  {
    "text": "the governance model you may have you know other agencies",
    "start": "529710",
    "end": "535170"
  },
  {
    "text": "that you want to basically you want to enforce a compliance policy on that you",
    "start": "535170",
    "end": "541320"
  },
  {
    "text": "can basically use resource Data Sync feature to collect all the inventory and compliance data from those sub agencies",
    "start": "541320",
    "end": "548339"
  },
  {
    "text": "and collect them in in central ID bucket s3 bucket and then you know you can use your third-party analytical tools or you",
    "start": "548339",
    "end": "556709"
  },
  {
    "text": "can use AWS services like Amazon Athena or Amazon quick side to basically see if",
    "start": "556709",
    "end": "561930"
  },
  {
    "text": "they are combined or not and then enforce compliance from there all right so this was all about the insights that",
    "start": "561930",
    "end": "569550"
  },
  {
    "text": "you can have into your resources but once you have the insight what do you need to do about that data or you know",
    "start": "569550",
    "end": "576899"
  },
  {
    "text": "how you want to take the action so there are two ways to take actions you can either take a reactive action or you can",
    "start": "576899",
    "end": "582180"
  },
  {
    "text": "take a proactive action when it comes to reactive reactive action it's normally to mitigate on going issues after the",
    "start": "582180",
    "end": "589050"
  },
  {
    "text": "fact and we have bunch of services and systems manager that can allow you to do that such as run command we we talked",
    "start": "589050",
    "end": "595920"
  },
  {
    "text": "about automation over here so automation is a very powerful feature of system",
    "start": "595920",
    "end": "601260"
  },
  {
    "start": "598000",
    "end": "598000"
  },
  {
    "text": "manager you can basically write entire workflow in a Systems Manager document",
    "start": "601260",
    "end": "608190"
  },
  {
    "text": "which is kind of a repertory repetative or maybe you know it has sequential steps that you perform on daily basis",
    "start": "608190",
    "end": "614160"
  },
  {
    "text": "you can convert that into a Systems Manager automation document and input that to automation feature and then it",
    "start": "614160",
    "end": "620100"
  },
  {
    "text": "can execute it and it can do that automatically based on the schedule you are defined through a maintenance window or you can also trigger that automation",
    "start": "620100",
    "end": "627720"
  },
  {
    "text": "document as well as as a result of some operational event or compliance event we",
    "start": "627720",
    "end": "633890"
  },
  {
    "text": "you can also write your own automation documents and you can publish them in github so that it can be used by",
    "start": "633890",
    "end": "639720"
  },
  {
    "text": "community the other thing automation provide is stepwise execution so if you want to see",
    "start": "639720",
    "end": "645959"
  },
  {
    "text": "you know how your step each of this step is performing or if you want to track the individual step you can also do so",
    "start": "645959",
    "end": "653430"
  },
  {
    "text": "with automation and then you can also include approvals so for example if you if at some point in time your automation",
    "start": "653430",
    "end": "660389"
  },
  {
    "text": "workflow is going to launch an ec2 instance you can include include an approval condition so it will go and it",
    "start": "660389",
    "end": "666060"
  },
  {
    "text": "will get maybe approval from an admin and then it will execute that launch instance API so you can do things like",
    "start": "666060",
    "end": "672600"
  },
  {
    "text": "that with automation as well and then for example the other thing that which",
    "start": "672600",
    "end": "677640"
  },
  {
    "text": "is pretty cool about automation is that for example if I mean I am a user I don't have permission to create maybe cloud formation stack using automation",
    "start": "677640",
    "end": "685620"
  },
  {
    "text": "but my admin has it so or I or I have a rule that allows it to do it I can",
    "start": "685620",
    "end": "691140"
  },
  {
    "text": "delegate access temporary access through automation as well so in short you can",
    "start": "691140",
    "end": "697620"
  },
  {
    "text": "do different kind of things with automation some of the example use cases are you can basically automate the",
    "start": "697620",
    "end": "703710"
  },
  {
    "text": "process of creation and golden image you can automate the process of recovering an unrepeatable or unaccessible instance",
    "start": "703710",
    "end": "711600"
  },
  {
    "text": "you can create an automation document for and these are actually these automation documents are already",
    "start": "711600",
    "end": "717060"
  },
  {
    "text": "existing so you can use them you can build on top of them depending on your requirements and then you can meet your",
    "start": "717060",
    "end": "723150"
  },
  {
    "text": "compliance and operational needs like that the other good feature of that you",
    "start": "723150",
    "end": "728700"
  },
  {
    "text": "can leverage is the velocity control or rate control or error error the thresholds that you can define within",
    "start": "728700",
    "end": "735660"
  },
  {
    "text": "your automation workflow so for example if you have a hundred instances both on-prem and ec2 and you want to apply",
    "start": "735660",
    "end": "742650"
  },
  {
    "text": "your automation on bunch of there may be 25 or 25% of them you can you can you",
    "start": "742650",
    "end": "748410"
  },
  {
    "text": "can use automation rate control to do that and you can also define the Edit threshold in case you know if you if one",
    "start": "748410",
    "end": "754500"
  },
  {
    "text": "of the steps fail in your execution it can stop the automation workflow and you can go and you can troubleshoot and you",
    "start": "754500",
    "end": "761610"
  },
  {
    "text": "can also get notifications as soon as notification so that you can go and you can look into if there is a failure or",
    "start": "761610",
    "end": "766860"
  },
  {
    "text": "something alright and automation absolutely works on resource groups that I was explaining earlier so if you have",
    "start": "766860",
    "end": "773130"
  },
  {
    "text": "defined your environments in terms of tags like production environment or you know in terms of layers like front-end",
    "start": "773130",
    "end": "778830"
  },
  {
    "text": "back-end layer you can you can execute automation workflow against those resource groups alright so that was a",
    "start": "778830",
    "end": "786540"
  },
  {
    "start": "785000",
    "end": "785000"
  },
  {
    "text": "reactive action so you can also do proactive actions which can improve your",
    "start": "786540",
    "end": "791700"
  },
  {
    "text": "day to day to day operations using Systems Manager such as you can deploy operating system patches you can enforce",
    "start": "791700",
    "end": "799890"
  },
  {
    "text": "configuration so that you can prevent configuration drifts you can store your secrets or you know data such as the",
    "start": "799890",
    "end": "808440"
  },
  {
    "text": "database username password in parameter store so all these things can improve",
    "start": "808440",
    "end": "813780"
  },
  {
    "text": "your day-to-day operations and we have a bunch of features and systems manager that can allow you to do so the first",
    "start": "813780",
    "end": "819900"
  },
  {
    "start": "819000",
    "end": "819000"
  },
  {
    "text": "one that I'd like to talk about here is patch manager so patch manager basically allows you to select and deploy",
    "start": "819900",
    "end": "826470"
  },
  {
    "text": "operating system patches operating system and software patches both on either ec2 instances or on Prem",
    "start": "826470",
    "end": "833300"
  },
  {
    "text": "resources so how you do it so first of all you would have to create what we call a patch baseline so patch baseline",
    "start": "833300",
    "end": "840480"
  },
  {
    "text": "includes rules for auto approval of selected patches and you can also define",
    "start": "840480",
    "end": "846150"
  },
  {
    "text": "the delay in that auto approval in terms of number of days and if you want to",
    "start": "846150",
    "end": "852240"
  },
  {
    "text": "override your auto approval rules you can also specify approved or rejected patches from those lists of patches such",
    "start": "852240",
    "end": "860280"
  },
  {
    "text": "as operating system patches or security patches so how do you use it it's pretty",
    "start": "860280",
    "end": "865770"
  },
  {
    "start": "865000",
    "end": "865000"
  },
  {
    "text": "straightforward so first of all you would have to create what I just define as patch baseline you define your rules",
    "start": "865770",
    "end": "871080"
  },
  {
    "text": "patch rules you define your the patch rule would include like you know the severity of the patches like critical or",
    "start": "871080",
    "end": "878460"
  },
  {
    "text": "medium level critical or and then you can also define what kind of patches they are maybe operating system or",
    "start": "878460",
    "end": "884580"
  },
  {
    "text": "software patches and then you have to put your resources in a in a tag what we",
    "start": "884580",
    "end": "892890"
  },
  {
    "text": "call a patch group and then you can create a maintenance window when you will schedule for this patch deployment",
    "start": "892890",
    "end": "901050"
  },
  {
    "text": "so that it can recurringly get deployed without without you to have any interval",
    "start": "901050",
    "end": "907230"
  },
  {
    "text": "without you requiring to do any kind of integration intervention alright so the",
    "start": "907230",
    "end": "913260"
  },
  {
    "start": "912000",
    "end": "912000"
  },
  {
    "text": "next feature of system managers that I like to talk about is state manager so",
    "start": "913260",
    "end": "918480"
  },
  {
    "text": "state manager allows you to basically define and maintain cos sensed consistent operate operating system",
    "start": "918480",
    "end": "923970"
  },
  {
    "text": "configurations what I mean by that is you can define a configuration policy",
    "start": "923970",
    "end": "929160"
  },
  {
    "text": "based on maybe a shell script or ansible playbook and feed it into a state manager it is going to execute the",
    "start": "929160",
    "end": "935889"
  },
  {
    "text": "based on again your defined schedule and then it will also prevent drift so if it",
    "start": "935889",
    "end": "942509"
  },
  {
    "text": "detects a drift in the next run it is going to revert all the changes that",
    "start": "942509",
    "end": "948249"
  },
  {
    "text": "were made out of the band and you can also monitor the changes off on on your",
    "start": "948249",
    "end": "956739"
  },
  {
    "text": "instances or your resources through statement Systems Manager API and you can also view what resources are",
    "start": "956739",
    "end": "963999"
  },
  {
    "text": "compliant to your configuration policy and what are not and then you can take actions as well if you want to otherwise",
    "start": "963999",
    "end": "970569"
  },
  {
    "text": "state manager will automatically bring them or make them follow the",
    "start": "970569",
    "end": "976329"
  },
  {
    "text": "configuration that you have defined in your state manager workflow okay so here",
    "start": "976329",
    "end": "982959"
  },
  {
    "text": "are a few use cases basically we have a bunch of blog posts out there that you can go and implement yourself and in",
    "start": "982959",
    "end": "990669"
  },
  {
    "text": "this presentation we have we are demoing a couple of those so one of the ones that I am going to demo later is is you",
    "start": "990669",
    "end": "998290"
  },
  {
    "text": "is basically running ansible playbooks using state manager I haven't implemented the run command but it's",
    "start": "998290",
    "end": "1004110"
  },
  {
    "text": "pretty straightforward you can do it yourself as well so what we are going to do in this demo or in about what is",
    "start": "1004110",
    "end": "1010079"
  },
  {
    "text": "happening in this blog post basically we are going to configure our ec2 instances",
    "start": "1010079",
    "end": "1015959"
  },
  {
    "text": "and maybe hybrid environments hybrid when I say hybrid environments it can be ec2 instances may be running in some",
    "start": "1015959",
    "end": "1022860"
  },
  {
    "text": "other AWS account or it or they can be on primary sources as well so we are going to execute what we call AWS run",
    "start": "1022860",
    "end": "1029938"
  },
  {
    "text": "ansible playbook document that is going to install an Apache server on various",
    "start": "1029939",
    "end": "1035639"
  },
  {
    "text": "Linux distributions such as Red Hat and Amazon Linux and these instances will be",
    "start": "1035639",
    "end": "1042480"
  },
  {
    "text": "running as SSM systems manager agent and then state manager is going to enforce a",
    "start": "1042480",
    "end": "1048720"
  },
  {
    "text": "configuration and it will also prevent any drift that happens out of bang so",
    "start": "1048720",
    "end": "1055909"
  },
  {
    "text": "let's see how it works through a demo we",
    "start": "1055909",
    "end": "1061100"
  },
  {
    "text": "have the other one is Red Hat Enterprise",
    "start": "1061100",
    "end": "1066430"
  },
  {
    "text": "Linux instance the first step is for us to install and simple module on both of",
    "start": "1066430",
    "end": "1073210"
  },
  {
    "text": "these instances I'm going to show how to install ansible module using run command",
    "start": "1073210",
    "end": "1078880"
  },
  {
    "text": "on Amazon in existence now we will go to aw Systems Manager console under actions",
    "start": "1078880",
    "end": "1087970"
  },
  {
    "text": "we will hit recommend here we will",
    "start": "1087970",
    "end": "1093790"
  },
  {
    "text": "select the appropriate run command document in our case it's the AWS run",
    "start": "1093790",
    "end": "1100030"
  },
  {
    "text": "shell script we select that and we will",
    "start": "1100030",
    "end": "1106000"
  },
  {
    "text": "select our target instance which is Amazon Linux in this case and we will",
    "start": "1106000",
    "end": "1112360"
  },
  {
    "text": "copy the command that we want to execute in this case we want to install ansible",
    "start": "1112360",
    "end": "1118650"
  },
  {
    "text": "we can change the working directory but we will leave it as is and you will also",
    "start": "1118650",
    "end": "1124390"
  },
  {
    "text": "the rest of the parameters to default settings one of the important features",
    "start": "1124390",
    "end": "1133090"
  },
  {
    "text": "of run command is rate control where you can define how many servers execute the command you can define that in terms of",
    "start": "1133090",
    "end": "1138309"
  },
  {
    "text": "a number or a percentage in addition you can define error sure in case a command fails and you can",
    "start": "1138309",
    "end": "1146500"
  },
  {
    "text": "configure SMS notifications we also generate a CLI command for you to",
    "start": "1146500",
    "end": "1151630"
  },
  {
    "text": "execute now we will hit fun here you can see the command was successfully",
    "start": "1151630",
    "end": "1158770"
  },
  {
    "text": "executed now we will go and look at output of the command in the output we",
    "start": "1158770",
    "end": "1164350"
  },
  {
    "text": "can see the messages that were generated during the execution time let's take a look at our manage instances here we are",
    "start": "1164350",
    "end": "1173080"
  },
  {
    "text": "seeing three instances the first one is the one that we just configured the second one is a pre-configured Red Hat",
    "start": "1173080",
    "end": "1179350"
  },
  {
    "text": "instance and the third one is actually an instance from a different Erebus account that is being managed by this",
    "start": "1179350",
    "end": "1185200"
  },
  {
    "text": "account using activation our goal is to execute ansible playbook against all these three",
    "start": "1185200",
    "end": "1192310"
  },
  {
    "text": "instances using state manager association I'll go back to the ec2 console I have",
    "start": "1192310",
    "end": "1200220"
  },
  {
    "text": "associated operating system tag to all of my ec2 instances with the value of",
    "start": "1200220",
    "end": "1205890"
  },
  {
    "text": "Linux I am going to use this tag in state manager Association I will go back",
    "start": "1205890",
    "end": "1211200"
  },
  {
    "text": "to the systems manager I create a stage manager Association I'll give it a name",
    "start": "1211200",
    "end": "1216570"
  },
  {
    "text": "and I'll select the run ansible playbook from the document list the next step is",
    "start": "1216570",
    "end": "1222510"
  },
  {
    "text": "to copy the playbook from the blog post and I have been using this script is",
    "start": "1222510",
    "end": "1228120"
  },
  {
    "text": "responsible for installing an Apache server and then started it I'll copy the",
    "start": "1228120",
    "end": "1234150"
  },
  {
    "text": "playbook here and I'll make sure that there are no syntax errors the next step",
    "start": "1234150",
    "end": "1240300"
  },
  {
    "text": "is to select the instances I can do that manually I can select each of those instances one by one or I can use the",
    "start": "1240300",
    "end": "1247380"
  },
  {
    "text": "tag that I was showing earlier which was operating system dad the next step is to",
    "start": "1247380",
    "end": "1254610"
  },
  {
    "text": "select a cron schedule I can build our own schedule or I can write an expression I'll select 30 minutes crown",
    "start": "1254610",
    "end": "1262230"
  },
  {
    "text": "schedule and I create an association once i refresh the page the association",
    "start": "1262230",
    "end": "1273740"
  },
  {
    "text": "has been successfully created and go into the Association and I should see",
    "start": "1274100",
    "end": "1279690"
  },
  {
    "text": "all the instances that are part of the Association based on the operating system tag I'll go into one of those",
    "start": "1279690",
    "end": "1288090"
  },
  {
    "text": "instances to find more information about it and through this page you can find",
    "start": "1288090",
    "end": "1293570"
  },
  {
    "text": "information like inventory if you would have configured that on the instance you can find all the tags associated with",
    "start": "1293570",
    "end": "1299670"
  },
  {
    "text": "the instance you can find Association build is part of the patch information and the configuration to finds I'll",
    "start": "1299670",
    "end": "1308130"
  },
  {
    "text": "switch back to the ec2 console and I'll double check that the party service is",
    "start": "1308130",
    "end": "1314820"
  },
  {
    "text": "running on both of these instances",
    "start": "1314820",
    "end": "1318740"
  },
  {
    "text": "as a next step I'm going to SSH into one of my Linux box and stop the service so",
    "start": "1328160",
    "end": "1336170"
  },
  {
    "text": "you go back to the ec2 console and as such into the instance using the IP",
    "start": "1336170",
    "end": "1342830"
  },
  {
    "text": "address from the ec2 console I could have views run command to stop the party service as well",
    "start": "1342830",
    "end": "1348410"
  },
  {
    "text": "I'll arif I the status of the service it's running now I'll stop it",
    "start": "1348410",
    "end": "1354429"
  },
  {
    "text": "and I'll refresh the page to make sure that the service is not running anymore",
    "start": "1355660",
    "end": "1362110"
  },
  {
    "text": "and go back to Systems Manager console again and apply the association to",
    "start": "1362110",
    "end": "1369730"
  },
  {
    "text": "refresh it please note that you would not need to reapply the association since we already have defined a cron",
    "start": "1369730",
    "end": "1377420"
  },
  {
    "text": "scheduled or refresh in the page I can now see that the Archie has been",
    "start": "1377420",
    "end": "1383480"
  },
  {
    "text": "restarted all right so you saw that it's",
    "start": "1383480",
    "end": "1392710"
  },
  {
    "start": "1389000",
    "end": "1389000"
  },
  {
    "text": "really easy to set up a state manager view we were able to execute",
    "start": "1392710",
    "end": "1397910"
  },
  {
    "text": "ansible playbook so it basically complements your ansible scripts if you",
    "start": "1397910",
    "end": "1403580"
  },
  {
    "text": "have them and we also looked at the velocity and control feature of state",
    "start": "1403580",
    "end": "1409340"
  },
  {
    "text": "manager and and how you can use it for multiple ad based accounts and hybrid",
    "start": "1409340",
    "end": "1414860"
  },
  {
    "text": "environments and one important point is point to note is that there is no",
    "start": "1414860",
    "end": "1420050"
  },
  {
    "text": "additional charge for using Systems Manager so you can easily complement it with its configuration management tools",
    "start": "1420050",
    "end": "1427760"
  },
  {
    "text": "like ansible or salt or your chef alright moving on so the other blog",
    "start": "1427760",
    "end": "1433190"
  },
  {
    "start": "1432000",
    "end": "1432000"
  },
  {
    "text": "posts that actually I wrote this this year is central IT governance governance",
    "start": "1433190",
    "end": "1439190"
  },
  {
    "text": "model so we actually worked with one of our state-level customers and they had",
    "start": "1439190",
    "end": "1444320"
  },
  {
    "text": "basically AWS account for the for the central IT and then they had child accounts for all the others other",
    "start": "1444320",
    "end": "1450770"
  },
  {
    "text": "agencies and they wanted to basically build a governance model where they can",
    "start": "1450770",
    "end": "1456020"
  },
  {
    "text": "enforce patching and you know golden images through a central ID account so in this solution what we",
    "start": "1456020",
    "end": "1463919"
  },
  {
    "text": "were able to do is we were able to create a central ID account for the central ID",
    "start": "1463919",
    "end": "1468960"
  },
  {
    "text": "agency and then we created a sandbox account sandbox prod and dev account for",
    "start": "1468960",
    "end": "1475200"
  },
  {
    "text": "the other agencies and all of them were actually registered to the central ID account using what we call Systems",
    "start": "1475200",
    "end": "1482909"
  },
  {
    "text": "Manager activation and then all the concepts that I was talking about earlier like patch manager estate",
    "start": "1482909",
    "end": "1488309"
  },
  {
    "text": "manager automation and we were able to apply that using tags on on all these",
    "start": "1488309",
    "end": "1494490"
  },
  {
    "text": "resources running in agency accounts at this point I'll turn it over to Brian",
    "start": "1494490",
    "end": "1500820"
  },
  {
    "text": "Tracy to talk through possible rotation for Windows instances thank you so",
    "start": "1500820",
    "end": "1509000"
  },
  {
    "text": "afternoon everybody I have said my name is Brian Tracy and I'm here to talk to you today about",
    "start": "1512990",
    "end": "1518580"
  },
  {
    "text": "password rotation for Windows instances and automating that with ec2 rescue this",
    "start": "1518580",
    "end": "1525360"
  },
  {
    "text": "is a solution that I've implemented at numerous state level agencies across the eastern seaboard so the question is why",
    "start": "1525360",
    "end": "1535649"
  },
  {
    "text": "do we do this so you're probably already familiar with the fact that AWS uses key",
    "start": "1535649",
    "end": "1541529"
  },
  {
    "text": "pairs when you stand up an instance to be able to give you access to those resources and what that means with",
    "start": "1541529",
    "end": "1548370"
  },
  {
    "text": "Windows Server specifically is you essentially decrypt the local",
    "start": "1548370",
    "end": "1553559"
  },
  {
    "text": "administrators password using that key pair after that agencies typically",
    "start": "1553559",
    "end": "1558779"
  },
  {
    "text": "either join those instances two domains and utilize their 80 credentials to",
    "start": "1558779",
    "end": "1565140"
  },
  {
    "text": "access those systems or they create local users on that box those agencies",
    "start": "1565140",
    "end": "1571140"
  },
  {
    "text": "also typically have password rotation policies such that users are forced to",
    "start": "1571140",
    "end": "1576510"
  },
  {
    "text": "rotate their passwords I know you all have endured that probably numerous",
    "start": "1576510",
    "end": "1581640"
  },
  {
    "text": "times throughout the year sometimes painfully and usually those policies say",
    "start": "1581640",
    "end": "1587280"
  },
  {
    "text": "okay look if Sohaib didn't rotate his password in the last 60 or 90 days he's got three days to do it or I'm",
    "start": "1587280",
    "end": "1593400"
  },
  {
    "text": "locking him out of the system and those policies work pretty effectively what",
    "start": "1593400",
    "end": "1598590"
  },
  {
    "text": "they overlook in a lot of cases is the local administrators password that",
    "start": "1598590",
    "end": "1603900"
  },
  {
    "text": "account typically isn't getting used very heavily those credentials are typically owned by a small group of",
    "start": "1603900",
    "end": "1610020"
  },
  {
    "text": "people who sort of say look our team is pretty secure and we don't have to rotate those on a regular basis so it",
    "start": "1610020",
    "end": "1615960"
  },
  {
    "text": "gets overlooked the problem with that is for specific workloads that have",
    "start": "1615960",
    "end": "1621590"
  },
  {
    "text": "compliance regulations attached to them it causes you to be out of compliance with those workloads so one of the",
    "start": "1621590",
    "end": "1629250"
  },
  {
    "text": "agencies that I've done this for recently had a HIPAA workload and this",
    "start": "1629250",
    "end": "1634320"
  },
  {
    "text": "was causing them to be out of compliance with their local administrative account password rotation they didn't have the",
    "start": "1634320",
    "end": "1641370"
  },
  {
    "text": "cycles to do it they didn't have the team to do it and they had numerous servers on which they had to do so so",
    "start": "1641370",
    "end": "1648510"
  },
  {
    "text": "Havis already said there's no additional charge for this service I'm a huge fan of automation because I can't I can't",
    "start": "1648510",
    "end": "1654750"
  },
  {
    "text": "quantify how many times I've had good intentions and hit wrong keys so the idea here is let me help this state",
    "start": "1654750",
    "end": "1661560"
  },
  {
    "text": "agency automate for that automate this for them and keep them in compliance so",
    "start": "1661560",
    "end": "1667470"
  },
  {
    "start": "1667000",
    "end": "1667000"
  },
  {
    "text": "so habes already covered things like you know what what an systems manager",
    "start": "1667470",
    "end": "1672810"
  },
  {
    "text": "document is just to quickly rehash that it's a set of instructions right so it's",
    "start": "1672810",
    "end": "1677940"
  },
  {
    "text": "a PowerShell script or a bash script that has steps and instructions of what",
    "start": "1677940",
    "end": "1683280"
  },
  {
    "text": "you intend to do on those servers this particular one that we're going to talk about today is called AWS support run",
    "start": "1683280",
    "end": "1690780"
  },
  {
    "text": "ec2 rescue for Windows tool and the password rotation is one element that",
    "start": "1690780",
    "end": "1696480"
  },
  {
    "text": "we're going to talk about today but in fact this tool has numerous other use cases available to you with capabilities",
    "start": "1696480",
    "end": "1703530"
  },
  {
    "text": "that are very worthwhile this particular one will use kms keys to essentially",
    "start": "1703530",
    "end": "1711060"
  },
  {
    "text": "cycle the local administrators password and then store it safely in the systems manager parameter store really nice",
    "start": "1711060",
    "end": "1719070"
  },
  {
    "text": "requires no downtime requires no system reboots Sohaib elaborated a little bit",
    "start": "1719070",
    "end": "1724980"
  },
  {
    "text": "we're about the requirement to have an assistance manager agent already running",
    "start": "1724980",
    "end": "1730380"
  },
  {
    "text": "on those machines and you can do that both in AWS and in on Prem servers or in",
    "start": "1730380",
    "end": "1736590"
  },
  {
    "text": "other cloud provider servers as well right it's a simple agent load you configure",
    "start": "1736590",
    "end": "1743429"
  },
  {
    "text": "the Systems Manager maintenance windows that he also talked about earlier my my demo video will go into a little more",
    "start": "1743429",
    "end": "1749160"
  },
  {
    "text": "depth about how to do that and essentially what I've done in my demo to set this up a little bit is in",
    "start": "1749160",
    "end": "1756330"
  },
  {
    "text": "my past life of 20 20 odd years we'll just leave it at 20 odd years of the software development has been that",
    "start": "1756330",
    "end": "1763220"
  },
  {
    "text": "different administrative teams typically give different levels of access whether it's development test queue a staging",
    "start": "1763220",
    "end": "1770580"
  },
  {
    "text": "production in my very simple example here today I've created development",
    "start": "1770580",
    "end": "1776220"
  },
  {
    "text": "servers and production servers and I've used two different KMS keys to allow people with the development permissions",
    "start": "1776220",
    "end": "1783990"
  },
  {
    "text": "to access those passwords to those instances and people with the production role to access those instances so next",
    "start": "1783990",
    "end": "1793140"
  },
  {
    "text": "we will go to the demo starting in our ec2 console you'll see that I have three",
    "start": "1793140",
    "end": "1798780"
  },
  {
    "text": "production instances and three development instances we use tags a key",
    "start": "1798780",
    "end": "1804179"
  },
  {
    "text": "value pair to indicate which environment each instance is a member of for either",
    "start": "1804179",
    "end": "1810030"
  },
  {
    "text": "production or development as you see here as I click through each of those instances the value changing from",
    "start": "1810030",
    "end": "1817290"
  },
  {
    "text": "production to development clicking on",
    "start": "1817290",
    "end": "1823740"
  },
  {
    "text": "the description tab I want to scroll down and point out that each instance has an ec2 role attached to it which",
    "start": "1823740",
    "end": "1831360"
  },
  {
    "text": "grants permissions for this Systems Manager and no key pair provided an instance creation which means that these",
    "start": "1831360",
    "end": "1837870"
  },
  {
    "text": "instances won't be able to have their administrative password decrypted by default shifting to the systems manager",
    "start": "1837870",
    "end": "1844890"
  },
  {
    "text": "and now clicking down on the managed instances section you'll see those same six instances three production and three",
    "start": "1844890",
    "end": "1852030"
  },
  {
    "text": "development this is possible because they're running the system manager agent on those Windows operating",
    "start": "1852030",
    "end": "1857590"
  },
  {
    "text": "systems and they automatically get registered as managed instances in Systems Manager if we look at the tags",
    "start": "1857590",
    "end": "1864370"
  },
  {
    "text": "within systems manager you'll see the same environment key and a value for",
    "start": "1864370",
    "end": "1869950"
  },
  {
    "text": "either production or development on those instances I've created two maintenance windows one for development",
    "start": "1869950",
    "end": "1876940"
  },
  {
    "text": "and the other for production so that I can manage those password changes independently the description tab shows",
    "start": "1876940",
    "end": "1883300"
  },
  {
    "text": "some details about the maintenance window such as a small description for it a cron expression for how often you'd",
    "start": "1883300",
    "end": "1889510"
  },
  {
    "text": "like it to run and the duration of the maintenance window clicking the targets tab you'll see the targets that I",
    "start": "1889510",
    "end": "1896920"
  },
  {
    "text": "previously registered for this in this case the development environment clicking into that you'll see how I",
    "start": "1896920",
    "end": "1902950"
  },
  {
    "text": "accomplished that I gave it a name and a small description and then I use those tags that we created on the ec2",
    "start": "1902950",
    "end": "1909700"
  },
  {
    "text": "instances earlier to define the environment and in this case development",
    "start": "1909700",
    "end": "1916830"
  },
  {
    "text": "clicking into the tasks part of the maintenance window I want to highlight",
    "start": "1918540",
    "end": "1924430"
  },
  {
    "text": "the AWS managed document that's used to control the tasks scrolling down to the",
    "start": "1924430",
    "end": "1932440"
  },
  {
    "text": "managed documents that you see here and going to page 3 you'll see an AWS",
    "start": "1932440",
    "end": "1937750"
  },
  {
    "text": "support run ec2 rescue for Windows tool document scrolling a bit further you see",
    "start": "1937750",
    "end": "1944020"
  },
  {
    "text": "the targets that we've previously identified in this case for the development environment and scrolling",
    "start": "1944020",
    "end": "1950470"
  },
  {
    "text": "down a bit further you see the role associated with this maintenance window we'll talk more about that role soon and",
    "start": "1950470",
    "end": "1957000"
  },
  {
    "text": "finally the parameters now this document has a number of different capabilities",
    "start": "1957000",
    "end": "1962700"
  },
  {
    "text": "resetting access is the one that we're going to focus on today and then the",
    "start": "1962700",
    "end": "1968020"
  },
  {
    "text": "parameter and the parameter is the ID of the KMS key that you want to encrypt the",
    "start": "1968020",
    "end": "1973930"
  },
  {
    "text": "rotated password back to that role that the maintenance window uses it's simply",
    "start": "1973930",
    "end": "1981340"
  },
  {
    "text": "an iamb roll using a managed Amazon roll for maintenance windows if we look at",
    "start": "1981340",
    "end": "1988390"
  },
  {
    "text": "the encryption keys used in this solution you'll see that my administrative account doesn't have access to these keys so we're going",
    "start": "1988390",
    "end": "1995980"
  },
  {
    "text": "to change roles to one that does have access now you see the allowed decrypt",
    "start": "1995980",
    "end": "2001290"
  },
  {
    "text": "production windows role has access to that production key switching to the",
    "start": "2001290",
    "end": "2006360"
  },
  {
    "text": "development role now has access to the development key if we go back to the",
    "start": "2006360",
    "end": "2011790"
  },
  {
    "text": "Systems Manager console you can see that those keys are secured as secure strings",
    "start": "2011790",
    "end": "2017400"
  },
  {
    "text": "and when I try to show the value of the encrypted string I get this error",
    "start": "2017400",
    "end": "2022530"
  },
  {
    "text": "because my admin user doesn't have permissions to use that encryption key",
    "start": "2022530",
    "end": "2027890"
  },
  {
    "text": "switching to the decrypt production windows role allows me to then decrypt",
    "start": "2027890",
    "end": "2033390"
  },
  {
    "text": "that production key the history tab will",
    "start": "2033390",
    "end": "2042120"
  },
  {
    "text": "show you the history of versions that have been rotated and give you the ability to decrypt them if we go back to",
    "start": "2042120",
    "end": "2049800"
  },
  {
    "text": "the parameter store and go down and identify a development password and try",
    "start": "2049800",
    "end": "2056340"
  },
  {
    "text": "to access that using our decrypt production windows role you'll see that we also get a security error switching",
    "start": "2056340",
    "end": "2064080"
  },
  {
    "text": "roles now to use a development Windows key I can likewise decrypt that password",
    "start": "2064080",
    "end": "2071659"
  },
  {
    "start": "2072000",
    "end": "2072000"
  },
  {
    "text": "great so you know thankful for taped demos I'm not a huge fan of live demos",
    "start": "2073460",
    "end": "2080720"
  },
  {
    "text": "so wrapping up what we just showed you was the total time it took me to set up",
    "start": "2080720",
    "end": "2086250"
  },
  {
    "text": "that demo was approximately an hour estimated cost for solution we've already talked about Systems Manager not",
    "start": "2086250",
    "end": "2093358"
  },
  {
    "text": "costing anything additional from AWS so that's a really powerful tool that we give you to be able to automate a lot of",
    "start": "2093359",
    "end": "2100200"
  },
  {
    "text": "the capabilities within your organization no additional cost there was theoretically a slight charge",
    "start": "2100200",
    "end": "2107430"
  },
  {
    "text": "for the kms encryption keys that I utilized kms keys for custom keys are",
    "start": "2107430",
    "end": "2114420"
  },
  {
    "text": "$1.00 per month so in this example because I used two different kms keys for production and development and if I",
    "start": "2114420",
    "end": "2122150"
  },
  {
    "text": "this run for a month my total cost there would have been about two bucks and with",
    "start": "2122150",
    "end": "2127670"
  },
  {
    "text": "the kms API you get twenty thousand requests each month as part of the free",
    "start": "2127670",
    "end": "2133579"
  },
  {
    "text": "tier and beyond that cost it's about three cents per 10,000 requests so for",
    "start": "2133579",
    "end": "2140420"
  },
  {
    "text": "these six servers three production three development I let this solution run in my account for about a week's time and I",
    "start": "2140420",
    "end": "2148250"
  },
  {
    "text": "was changing passwords in each of those instances every two hours that's pretty excessive I don't",
    "start": "2148250",
    "end": "2153829"
  },
  {
    "text": "recommend that unless you're really concerned about password rotation and I",
    "start": "2153829",
    "end": "2159200"
  },
  {
    "text": "didn't even clear a thousand API requests so this solution was effectively you know a rounding error in",
    "start": "2159200",
    "end": "2166940"
  },
  {
    "text": "terms of additional costs but the value that your organization can derive from",
    "start": "2166940",
    "end": "2173089"
  },
  {
    "text": "it in terms of compliance with different regulations is invaluable so what we",
    "start": "2173089",
    "end": "2181130"
  },
  {
    "text": "covered today so earlier in the talks Sohaib gave you an overview of the systems manager service he talked about",
    "start": "2181130",
    "end": "2188480"
  },
  {
    "text": "a lot of stuff you know we could have felt filled probably a whole day talking about the different capabilities and",
    "start": "2188480",
    "end": "2194299"
  },
  {
    "text": "features inside of systems manager and how you might be able to leverage them we talked about simplifying operations",
    "start": "2194299",
    "end": "2200630"
  },
  {
    "text": "for compliance and governance I think we were able to demonstrate to you some of",
    "start": "2200630",
    "end": "2206510"
  },
  {
    "text": "the efficiencies and ease of use I know this this presentation is very quick it is available after after the summit and",
    "start": "2206510",
    "end": "2214849"
  },
  {
    "text": "certainly will provide our contact information as well and I think it also showed how you can",
    "start": "2214849",
    "end": "2220369"
  },
  {
    "text": "handle fleet wide management of your resources in an efficient and economical",
    "start": "2220369",
    "end": "2226430"
  },
  {
    "text": "way so there are a lot of other use cases that we didn't cover today",
    "start": "2226430",
    "end": "2233210"
  },
  {
    "text": "sohave did talk a little bit about system inventory and patch management as well as the hybrid environments I",
    "start": "2233210",
    "end": "2239180"
  },
  {
    "text": "touched on earlier that our definition of hybrid environment is AWS and any",
    "start": "2239180",
    "end": "2244670"
  },
  {
    "text": "other environment whether that's your on-prem environment or whether that's you have resources and other cloud",
    "start": "2244670",
    "end": "2250819"
  },
  {
    "text": "providers all that is capable and installing and removing some where the key message that I have for",
    "start": "2250819",
    "end": "2257690"
  },
  {
    "text": "you here is we have a bunch of predefined system managers documents that will help you do a lot of things",
    "start": "2257690",
    "end": "2264650"
  },
  {
    "text": "but but not all of them may be documented and written to help you solve the problems that you may be trying to",
    "start": "2264650",
    "end": "2271040"
  },
  {
    "text": "solve in your own organizations so if if you don't have a document that can help you do that right one",
    "start": "2271040",
    "end": "2277070"
  },
  {
    "text": "sohave also mentioned earlier Systems Manager is available out on github and it's open source while you don't have to",
    "start": "2277070",
    "end": "2283880"
  },
  {
    "text": "share any documents that you write with the open source community it's certainly favorable to do so so before I call",
    "start": "2283880",
    "end": "2292730"
  },
  {
    "text": "Sohaib up on to the stage to help answer any questions that you might have one question I would ask of you in the room",
    "start": "2292730",
    "end": "2298970"
  },
  {
    "text": "he asked earlier how many people are using it or have heard about it so after our discussion today what I'd sort of",
    "start": "2298970",
    "end": "2305480"
  },
  {
    "text": "like to get a feel for is how many of you intend to go out and and kick the tires on Systems Manager and see what it",
    "start": "2305480",
    "end": "2311270"
  },
  {
    "text": "might be able to do for your organization great so I'm gonna sort of take a rough guess and say that was more",
    "start": "2311270",
    "end": "2316820"
  },
  {
    "text": "than when we started and so that puts a smile on my face can we answer any questions for you",
    "start": "2316820",
    "end": "2323500"
  },
  {
    "text": "yes sir is there any plan for the agent to be IO to support iOS so generally we",
    "start": "2326560",
    "end": "2334030"
  },
  {
    "text": "don't talk about future enhancements to the service having said that you know",
    "start": "2334030",
    "end": "2340090"
  },
  {
    "text": "I'm not aware of that at the moment but that's certainly a possibility one of",
    "start": "2340090",
    "end": "2345640"
  },
  {
    "text": "the things that I think is very important to point out here and it's it's before my next line is that",
    "start": "2345640",
    "end": "2351190"
  },
  {
    "text": "feedback from customers like yourself really helped drive 90 to 95 percent of our product roadmap so if that is of",
    "start": "2351190",
    "end": "2358270"
  },
  {
    "text": "need to you then then let's work together to submit what we call a PFR product feature request and get that in",
    "start": "2358270",
    "end": "2364690"
  },
  {
    "text": "front of our service teams the other questions sorry it's hard to see people",
    "start": "2364690",
    "end": "2372210"
  },
  {
    "text": "can you come to my just step back from play the install of ansible was it",
    "start": "2375140",
    "end": "2383809"
  },
  {
    "text": "agent-based or agentless so you have to have a Systems Manager agent running on",
    "start": "2383809",
    "end": "2389960"
  },
  {
    "text": "the machine to execute ansible playbooks honored them were you also",
    "start": "2389960",
    "end": "2395329"
  },
  {
    "text": "installed ansible the ansible itself was it agent it can be either other",
    "start": "2395329",
    "end": "2408829"
  },
  {
    "text": "questions so we'll be outside for some time if anybody has additional questions and want to talk about systems manager",
    "start": "2408829",
    "end": "2415009"
  },
  {
    "text": "thank you so much for your time and as I mentioned earlier we generate a lot of",
    "start": "2415009",
    "end": "2420440"
  },
  {
    "text": "our roadmap and capabilities based on your input so please also fill out your surveys for today thank you thank you",
    "start": "2420440",
    "end": "2427580"
  },
  {
    "text": "[Applause]",
    "start": "2427580",
    "end": "2431230"
  }
]