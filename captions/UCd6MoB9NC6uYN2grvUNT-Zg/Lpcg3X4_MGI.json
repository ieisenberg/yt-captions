[
  {
    "start": "0",
    "end": "64000"
  },
  {
    "text": "so good morning everybody and thanks for coming to this session it's technically kind of apart from the",
    "start": "4640",
    "end": "10000"
  },
  {
    "text": "keynote the first one of the day how many people went to the keynote this morning anybody",
    "start": "10000",
    "end": "15519"
  },
  {
    "text": "how many people went to the party and didn't go to the keynote this morning suddenly some people are",
    "start": "15519",
    "end": "21119"
  },
  {
    "text": "honest about what they're doing so uh i went to some of the party i hope you had a good time but i had a",
    "start": "21119",
    "end": "26560"
  },
  {
    "text": "an early bedtime because i wanted to make sure i was in top shape for this presentation this morning so um",
    "start": "26560",
    "end": "32640"
  },
  {
    "text": "thanks for coming this session is about aws infrastructure automation my name is paul duffy i'm joined here by",
    "start": "32640",
    "end": "38800"
  },
  {
    "text": "chris muns we're both members of the solutions architecture team based in new york city",
    "start": "38800",
    "end": "44239"
  },
  {
    "text": "and our job is to work with customers like you who are thinking of deploying solutions in the aws cloud",
    "start": "44239",
    "end": "49600"
  },
  {
    "text": "to make sure that you're doing them in a way that takes advantage of all the building blocks that aws offers",
    "start": "49600",
    "end": "54719"
  },
  {
    "text": "in the best possible way and that you set up for success so chris is going to take a seat for a little while",
    "start": "54719",
    "end": "60079"
  },
  {
    "text": "and i'm going to start the presentation and tell you a little bit of what this is about",
    "start": "60079",
    "end": "65280"
  },
  {
    "start": "64000",
    "end": "230000"
  },
  {
    "text": "so what do we want to cover today well obviously there's something about operations that we're going to talk about",
    "start": "65280",
    "end": "73280"
  },
  {
    "text": "we want to help you understand some of the things that are a little bit different with aws from all of the operations stuff that",
    "start": "73280",
    "end": "79600"
  },
  {
    "text": "you've been doing no doubt for a number of years and make sure that you're well set up for success now i don't know how many of",
    "start": "79600",
    "end": "85520"
  },
  {
    "text": "you had a chance to go to andy jesse's keynote yesterday but a lot of the things that he was talking about there about the cloud",
    "start": "85520",
    "end": "91840"
  },
  {
    "text": "these things are different than how you would have necessarily done things on-prem there are things that are going to be",
    "start": "91840",
    "end": "97200"
  },
  {
    "text": "the same in the way that you might manage an operating system stack and the way you might have to do configuration items there but there",
    "start": "97200",
    "end": "104000"
  },
  {
    "text": "are many new things that aws offers which require a slightly different approach some different tools",
    "start": "104000",
    "end": "110000"
  },
  {
    "text": "for you to manage so what we're trying to do here is help you understand some of these things that are different and set you up for",
    "start": "110000",
    "end": "115759"
  },
  {
    "text": "some success we also wanted to clarify the kind of the counterpoint to that what is this",
    "start": "115759",
    "end": "121040"
  },
  {
    "text": "session not about what are we explicitly not going to cover just so you make sure you're comfortable that you're in the",
    "start": "121040",
    "end": "126079"
  },
  {
    "text": "right room so we're not going to cover a deep dive on any specific tool",
    "start": "126079",
    "end": "132160"
  },
  {
    "text": "now i'm hoping no one puts their hand up to the next question we're going to ask did anybody go to the boot camp that chris did earlier in",
    "start": "132160",
    "end": "138239"
  },
  {
    "text": "the week i hope no one good so chris spent seven hours on tuesday",
    "start": "138239",
    "end": "144239"
  },
  {
    "text": "just focused on this kind of operations topic we have today 50 minutes to do that so",
    "start": "144239",
    "end": "149760"
  },
  {
    "text": "we're not going to be doing a deep dive on any specific tool we're going to talk about some of the tools like we said in the abstract are",
    "start": "149760",
    "end": "155680"
  },
  {
    "text": "going to help you out here but we're not going to be spending 15 minutes just zoning in on one",
    "start": "155680",
    "end": "160800"
  },
  {
    "text": "specific tool and also as we don't know all of your environments intimately",
    "start": "160800",
    "end": "165920"
  },
  {
    "text": "we're not going to give you some prescriptive guidance for exactly the things that you need to go and implement in your own environment those things are",
    "start": "165920",
    "end": "172160"
  },
  {
    "text": "all going to be a little bit different we're aiming to set you up for success understand some of the tools and some of the different things",
    "start": "172160",
    "end": "178480"
  },
  {
    "text": "with aws and make sure that you can go off and hopefully have success in your deployments",
    "start": "178480",
    "end": "185840"
  },
  {
    "text": "so the specific things we are going to cover we're going to introduce and spend some time talking through and giving you a demonstration of aws",
    "start": "186720",
    "end": "194159"
  },
  {
    "text": "cloud formation which is one of the built-in services that we offer at aws we're going to think about",
    "start": "194159",
    "end": "199920"
  },
  {
    "text": "some of the kind of the high-level constructs in aws and how they mean that you need to think about things a little bit differently",
    "start": "199920",
    "end": "205760"
  },
  {
    "text": "and then we're also going to cover two additional tools chef and puppet and understand help you understand",
    "start": "205760",
    "end": "211360"
  },
  {
    "text": "how those will also fit in to your deployment so what kind of things does aws give you",
    "start": "211360",
    "end": "218080"
  },
  {
    "text": "well when andy talked in his keynote yesterday one of the things he mentioned was lots of building blocks lots of building",
    "start": "218080",
    "end": "223920"
  },
  {
    "text": "blocks that you can use and you can use together to build solutions that you deploy in aws",
    "start": "223920",
    "end": "231040"
  },
  {
    "start": "230000",
    "end": "317000"
  },
  {
    "text": "now some things are new to manage probably nobody in this room is unfamiliar with what has to be done in a",
    "start": "231040",
    "end": "237120"
  },
  {
    "text": "data center chris spent a number of years in that environment racking and stacking doing cabling kind of stuff so there's a",
    "start": "237120",
    "end": "243760"
  },
  {
    "text": "bunch of stuff that people are used to managing but with aws there are new kind of constructs there are new things to",
    "start": "243760",
    "end": "250000"
  },
  {
    "text": "manage which are different when andy talked in his keynote yesterday and he talked about things like server provisioning",
    "start": "250000",
    "end": "256000"
  },
  {
    "text": "it used to be that you were measuring this kind of thing in days probably unlikely to be days but you were measuring it in weeks or maybe even",
    "start": "256000",
    "end": "262639"
  },
  {
    "text": "months you were ordering a physical server which at some point would turn up into a rack you might be doing virtualization with",
    "start": "262639",
    "end": "268639"
  },
  {
    "text": "it probably will be nowadays and you would ultimately deploy software on it and manage it in your physical",
    "start": "268639",
    "end": "274080"
  },
  {
    "text": "environment it's very unlikely in that old world that you were doing some kind of command line or api based thing",
    "start": "274080",
    "end": "280160"
  },
  {
    "text": "for some abstract type of computing resource which is the way that we do that with aws when we start to think",
    "start": "280160",
    "end": "285360"
  },
  {
    "text": "about provisioning things like servers so these things require a slightly new way of thinking",
    "start": "285360",
    "end": "291520"
  },
  {
    "text": "many things are different things like virtual private cloud these kind of things didn't really exist in the physical world that people have",
    "start": "291520",
    "end": "297840"
  },
  {
    "text": "been used to in data centers but yet many things are still the same so the skills that you've developed in managing operating systems",
    "start": "297840",
    "end": "304240"
  },
  {
    "text": "and so on whether that's the microsoft set of operating systems or linux based ones those things are still",
    "start": "304240",
    "end": "309440"
  },
  {
    "text": "the same but what we're focused on today is just understanding how you approach managing some of those different things",
    "start": "309440",
    "end": "317520"
  },
  {
    "start": "317000",
    "end": "345000"
  },
  {
    "text": "so first of all we're going to talk about the kind of the structural components in aws and what we mean by those are things",
    "start": "317520",
    "end": "324000"
  },
  {
    "text": "like security groups ec2 instances virtual private clouds",
    "start": "324000",
    "end": "329199"
  },
  {
    "text": "things like rds our relational database service instances rap 53 our dns service record sets",
    "start": "329199",
    "end": "335840"
  },
  {
    "text": "associated with that so we're going to talk about some of those things to start with before we start to look at some of the things",
    "start": "335840",
    "end": "342080"
  },
  {
    "text": "that are host-based a little bit later on and we also wanted to kind of consider",
    "start": "342080",
    "end": "348080"
  },
  {
    "start": "345000",
    "end": "410000"
  },
  {
    "text": "this in something of a practical way another very important thing andy mentioned yesterday he talked about how",
    "start": "348080",
    "end": "354639"
  },
  {
    "text": "things can very very quickly become global now we start off for example with an application or an environment that",
    "start": "354639",
    "end": "360080"
  },
  {
    "text": "we've deployed in north america let's say the application that we deploy has been very very successful it's what",
    "start": "360080",
    "end": "366080"
  },
  {
    "text": "people are generally hoping for if they deploy those things and you want to replicate that in",
    "start": "366080",
    "end": "371360"
  },
  {
    "text": "australia we just launched a new region there a number of weeks ago in the old world",
    "start": "371360",
    "end": "376479"
  },
  {
    "text": "doing that would have been very very difficult you've got to somehow take this infrastructure you've got to go and not",
    "start": "376479",
    "end": "381520"
  },
  {
    "text": "only are you worried about the configuration stuff you've got to do but you've got to establish some kind of relationship with a hosting provider maybe in",
    "start": "381520",
    "end": "387840"
  },
  {
    "text": "australia do commercial stuff make sure it's the same kind of hardware or hardware that you're comfortable with",
    "start": "387840",
    "end": "393280"
  },
  {
    "text": "and do it that was complicated but we try and take a kind of an abstract way of looking at it",
    "start": "393280",
    "end": "400160"
  },
  {
    "text": "so it sounds hard and indeed it was hard what it really sounds like you want to do in terms of",
    "start": "400160",
    "end": "405680"
  },
  {
    "text": "the way we might use the the words in aws is to manage a stack",
    "start": "405680",
    "end": "411199"
  },
  {
    "start": "410000",
    "end": "641000"
  },
  {
    "text": "so we're going to introduce aws cloud formation now and before i hand over to chris who's",
    "start": "411199",
    "end": "416240"
  },
  {
    "text": "going to go into some technical some more technical details of it they say a picture's worth a thousand words",
    "start": "416240",
    "end": "422000"
  },
  {
    "text": "i think a a scenario is is certainly worth a thousand words so we're going to do a demonstration of",
    "start": "422000",
    "end": "427120"
  },
  {
    "text": "cloud formation before chris starts to talk the scenario that i picked for this because i think it's",
    "start": "427120",
    "end": "432400"
  },
  {
    "text": "quite an interesting one is live video streaming it's very pertinent to some people who've been watching",
    "start": "432400",
    "end": "437599"
  },
  {
    "text": "the event here via a live stream how many people in this room are use live streaming out of interest many so the live",
    "start": "437599",
    "end": "445520"
  },
  {
    "text": "streaming scenario might not be relevant for everybody in the room but what we're going to do in building this demo probably is relevant in some way to",
    "start": "445520",
    "end": "451680"
  },
  {
    "text": "everybody in this room so to do a live streaming event the kind of things that we need we need some kind of",
    "start": "451680",
    "end": "457440"
  },
  {
    "text": "compute instance that in this case is going to run adobe's fms server to do that streaming we need some security groups we're going",
    "start": "457440",
    "end": "464080"
  },
  {
    "text": "to have a cloudfront distribution configured with our content distribution network we're going to have some dns records and some other configuration",
    "start": "464080",
    "end": "470639"
  },
  {
    "text": "metadata now back in the old world it might have been complex to get that done we're going to show you a simple way of",
    "start": "470639",
    "end": "476479"
  },
  {
    "text": "doing that so i'm just going to switch over to my demo laptop here just give me one",
    "start": "476479",
    "end": "485198"
  },
  {
    "text": "moment so what you can all see here is the aws",
    "start": "490840",
    "end": "496000"
  },
  {
    "text": "management console and particularly the cloud formation management console so there are a number of stacks that are",
    "start": "496000",
    "end": "502560"
  },
  {
    "text": "already running in this environment what i'm going to do now",
    "start": "502560",
    "end": "507840"
  },
  {
    "text": "is just look at this one",
    "start": "508720",
    "end": "517440"
  },
  {
    "text": "second i'm going to create a new stack which i'm going to give a name",
    "start": "518839",
    "end": "524800"
  },
  {
    "text": "and i'm going to upload a template file in here",
    "start": "527600",
    "end": "535839"
  },
  {
    "text": "so this template file chris will go over in a little while it's basically a json file",
    "start": "537680",
    "end": "543120"
  },
  {
    "text": "with a whole bunch of things in which will include parameters that i'm going to be asked to input a set of resources that it's going to",
    "start": "543120",
    "end": "549440"
  },
  {
    "text": "build for me and ultimately a set of outputs what this is asking me now first of all",
    "start": "549440",
    "end": "554560"
  },
  {
    "text": "is from the key pair that i'm going to use that i've created earlier which is called pdf demo it's going to ask me for an admin",
    "start": "554560",
    "end": "561360"
  },
  {
    "text": "password for the flash media server that we're going to deploy put the password in",
    "start": "561360",
    "end": "566480"
  },
  {
    "text": "it's going to ask for a username which i'll leave as it is and the only thing i'm going to change here",
    "start": "566480",
    "end": "571600"
  },
  {
    "text": "is the type of instance that we're going to use with ec2 this is a very very simple demo we're going to do for a small number of people so i don't need",
    "start": "571600",
    "end": "578080"
  },
  {
    "text": "large instances i'm going to choose a smaller one that all looks right i don't need to put",
    "start": "578080",
    "end": "584160"
  },
  {
    "text": "any tags in here and it's summarizing here what am i calling the stack it's giving me a description of the stack which",
    "start": "584160",
    "end": "590000"
  },
  {
    "text": "creates um something including cloud formation using an ec2 ami for flash media server",
    "start": "590000",
    "end": "596640"
  },
  {
    "text": "for live http streaming it's got the parameters i put in there",
    "start": "596640",
    "end": "602079"
  },
  {
    "text": "and i'm going to start that off now so that stack is created is in the",
    "start": "602079",
    "end": "607440"
  },
  {
    "text": "process of being created now you can see that it says create in progress here and if i go to look at the um",
    "start": "607440",
    "end": "614720"
  },
  {
    "text": "the events tab there i can see that it's starting off it's creating the stack and then it is going to do in the right",
    "start": "614720",
    "end": "619839"
  },
  {
    "text": "order create all of those things i need for my live streaming session so it's going to create security",
    "start": "619839",
    "end": "625920"
  },
  {
    "text": "groups it's going to create instances let's just see how it's progressing yeah",
    "start": "625920",
    "end": "631040"
  },
  {
    "text": "it's on the the way to creating the security group now this stack will take about 12 minutes to provision everything fully so we're",
    "start": "631040",
    "end": "637839"
  },
  {
    "text": "not going to watch that in process now what we are going to do",
    "start": "637839",
    "end": "642880"
  },
  {
    "start": "641000",
    "end": "833000"
  },
  {
    "text": "is come back when it's finished so at this point i'm going to hand over to chris who's",
    "start": "642880",
    "end": "648720"
  },
  {
    "text": "going to spend some time talking about what cloud formation is and reviewing the what the results that you're about to see a bit later so chris",
    "start": "648720",
    "end": "654800"
  },
  {
    "text": "thanks paul hello hey good morning everybody so uh thanks",
    "start": "654800",
    "end": "660560"
  },
  {
    "text": "paul uh paul just you know kicked off a quick demo here to show you what cloudformation uh is capable of doing but what's",
    "start": "660560",
    "end": "666959"
  },
  {
    "text": "actually going on behind the scenes and we're gonna talk a little bit about what cloudformation is and how you work with it today",
    "start": "666959",
    "end": "672480"
  },
  {
    "text": "so cloudformation allows you to easily create and manage collections of aws resources those resources are going to be the",
    "start": "672480",
    "end": "678320"
  },
  {
    "text": "things that typically you'd be interfacing with via the management console command line tools apis",
    "start": "678320",
    "end": "684320"
  },
  {
    "text": "it's the full range of things from ec2 instances security groups vpc subnets rds instances iam users",
    "start": "684320",
    "end": "692320"
  },
  {
    "text": "simple queue service cues and etc it's very easy to create these templates we'll see a brief example of that in a",
    "start": "692320",
    "end": "698399"
  },
  {
    "text": "moment here we also have a lot of samples online so if you go to the cloudfront doc sorry the cloud formation",
    "start": "698399",
    "end": "704240"
  },
  {
    "text": "documentation you'll see that we have i think something around like 50 different sample templates",
    "start": "704240",
    "end": "709920"
  },
  {
    "text": "that do everything from creating active directory domains to setting up full wordpress stacks",
    "start": "709920",
    "end": "716240"
  },
  {
    "text": "to setting up a couple of really interesting applications that we see a lot of heavy use cases for",
    "start": "716240",
    "end": "721839"
  },
  {
    "text": "you interface with cloud information via the management console apis or command line it's very easy again as paul was saying",
    "start": "721839",
    "end": "727920"
  },
  {
    "text": "you don't have to worry about dependencies and what order they come the document structure is actually pretty loose and then lastly one of the",
    "start": "727920",
    "end": "734320"
  },
  {
    "text": "key points that everyone loves is that it's free so you don't pay anything extra for using cloud formation you just pay for",
    "start": "734320",
    "end": "739760"
  },
  {
    "text": "the resources that you fire up with it so three key points to take away here",
    "start": "739760",
    "end": "744800"
  },
  {
    "text": "about cloudformation you use templates describe aws resources you modify and update those resources in",
    "start": "744800",
    "end": "751200"
  },
  {
    "text": "a very predictable controlled manner and one thing that's really nice about these being text-based files it's very",
    "start": "751200",
    "end": "756480"
  },
  {
    "text": "easy to version control your infrastructure so my question for you is have you ever been able to easily do this in a",
    "start": "756480",
    "end": "762320"
  },
  {
    "text": "physical data center as paul said earlier i have background doing physical data center work i've",
    "start": "762320",
    "end": "767440"
  },
  {
    "text": "racked and stacked many many many servers one that i'd ever like to probably remember i've done wiring i've done cabling i've kind of",
    "start": "767440",
    "end": "774160"
  },
  {
    "text": "seen the full gamut of all of that i i couldn't probably easily describe all the things that i've",
    "start": "774160",
    "end": "780560"
  },
  {
    "text": "done in a text-based document but with aws and with aws cloud formation this becomes something that's",
    "start": "780560",
    "end": "785839"
  },
  {
    "text": "very very easy to do and you can see how maybe using cloudformation and updating it",
    "start": "785839",
    "end": "790959"
  },
  {
    "text": "to update your infrastructure you very easily can see a history of changes across your infrastructure",
    "start": "790959",
    "end": "796560"
  },
  {
    "text": "taking a cloud formation template and putting it into something like a you know source code revision control system something like",
    "start": "796560",
    "end": "802560"
  },
  {
    "text": "git svn you'd be able to see who did what when why",
    "start": "802560",
    "end": "808399"
  },
  {
    "text": "and you know the full differences between those different things so it's a very very powerful thing to have",
    "start": "808399",
    "end": "815839"
  },
  {
    "text": "okay so the process here is you make a template you pass that through cloud formation",
    "start": "816240",
    "end": "821279"
  },
  {
    "text": "and then you end up with provisioned resources so we didn't see the make the template part in paul's demo here",
    "start": "821279",
    "end": "827440"
  },
  {
    "text": "but we saw the putting into cloud formation in a couple minutes we'll see the stack fully stood up and running",
    "start": "827440",
    "end": "833839"
  },
  {
    "start": "833000",
    "end": "869000"
  },
  {
    "text": "so let's look at the anatomy of a template i don't expect most of you in the room to be able to see exactly what is going",
    "start": "833839",
    "end": "840240"
  },
  {
    "text": "on in this template here this is a very basic template to start an ec2 instance but what i do want you to take away from",
    "start": "840240",
    "end": "846240"
  },
  {
    "text": "this is that there are five key parts to a cloudformation template there are the headers parameters",
    "start": "846240",
    "end": "852160"
  },
  {
    "text": "mappings resources and outputs headers there's not too too much to say about here we",
    "start": "852160",
    "end": "857600"
  },
  {
    "text": "have a version of the document right now there's only one of those aws hasn't had a second version to the document yet",
    "start": "857600",
    "end": "863760"
  },
  {
    "text": "and a brief description usually of what the purpose is of this template file",
    "start": "863760",
    "end": "870399"
  },
  {
    "start": "869000",
    "end": "1293000"
  },
  {
    "text": "well let's look at some of the parts of the demo template that paul just started for us",
    "start": "870399",
    "end": "876000"
  },
  {
    "text": "so uh in one of the first screens right after paul went and uploaded the template there were a",
    "start": "876000",
    "end": "881839"
  },
  {
    "text": "number of questions basically or parameters that he had to fill out you saw him give it a name you saw him",
    "start": "881839",
    "end": "887519"
  },
  {
    "text": "pass in a password for the fms application so with the parameters part of the",
    "start": "887519",
    "end": "893519"
  },
  {
    "text": "cloudformation template this is really what allows you to have a very dynamic",
    "start": "893519",
    "end": "899120"
  },
  {
    "text": "flow to your cloud formation templates allows you to reuse them many many times but build your stack slightly",
    "start": "899120",
    "end": "904320"
  },
  {
    "text": "differently we saw him pass in an instance type we saw him pass in the password",
    "start": "904320",
    "end": "909519"
  },
  {
    "text": "so this here is actually the example block for that password we can see that it has a type of string",
    "start": "909519",
    "end": "915199"
  },
  {
    "text": "uh the variable here for no echo basically we'll treat this as a password field so you'll never see it",
    "start": "915199",
    "end": "920240"
  },
  {
    "text": "again it'll just be you know little stars like you would normally see in a web application when you're putting in your password",
    "start": "920240",
    "end": "926000"
  },
  {
    "text": "and then we can set constraints around min length max length and a loud pattern uh there's a description of what this field is and",
    "start": "926000",
    "end": "932480"
  },
  {
    "text": "then below you can see at the bottom there's a constraint description such that if you weren't actually going to when you filled this",
    "start": "932480",
    "end": "938399"
  },
  {
    "text": "in you didn't meet the restrictions there it would prompt you saying that",
    "start": "938399",
    "end": "943680"
  },
  {
    "text": "you had to mute that next up are mappings mappings are a really really powerful",
    "start": "943680",
    "end": "949680"
  },
  {
    "text": "part of cloud formation you know paul was talking about what do you do if you have your infrastructure running in north america you need to move it to",
    "start": "949680",
    "end": "957040"
  },
  {
    "text": "sydney with cloud formation being able to map something like regions to amis this is very very easy to do so ami ids",
    "start": "957040",
    "end": "965680"
  },
  {
    "text": "it's a globally unique namespace so you never have the same one in another region it's completely unique",
    "start": "965680",
    "end": "970800"
  },
  {
    "text": "around the globe but that doesn't mean that you couldn't still have basically the same ami at least as you had defined it in every",
    "start": "970800",
    "end": "978000"
  },
  {
    "text": "region around the globe so we're seeing here is an example of an ami that exists in all these different",
    "start": "978000",
    "end": "983920"
  },
  {
    "text": "regions and when the cloud formation template runs we'll see a little bit here how it",
    "start": "983920",
    "end": "988959"
  },
  {
    "text": "looks to see what region it's in and then it would execute launching the instance based on one of these amis",
    "start": "988959",
    "end": "996079"
  },
  {
    "text": "uh there's a ec2 resource obviously that paul had to fire up for this this is a brief example here of you know",
    "start": "996079",
    "end": "1002000"
  },
  {
    "text": "setting up an ec2 instance and you pass into this the same properties that you would if you were",
    "start": "1002000",
    "end": "1007040"
  },
  {
    "text": "launching this via the command line tool the console any sort of other third-party console that might be launching an ec2 instance",
    "start": "1007040",
    "end": "1013600"
  },
  {
    "text": "so we see here that you have properties for availability zone if it's going to be ebs optimized or not",
    "start": "1013600",
    "end": "1020000"
  },
  {
    "text": "the image id the instance type this is the actual block here from uh paul's template that gets",
    "start": "1020000",
    "end": "1026880"
  },
  {
    "text": "launched and i realized for lizzie in the back it's probably a little small and hard to see but breaking it down from the top to",
    "start": "1026880",
    "end": "1032640"
  },
  {
    "text": "bottom we define the type of the of the resource here which is an ec2 instance there are a number of",
    "start": "1032640",
    "end": "1038319"
  },
  {
    "text": "properties some of which were passed in by paul and those are referenced via the ref in front of another property there",
    "start": "1038319",
    "end": "1045600"
  },
  {
    "text": "and then down at the bottom for those of you on the front here probably see a little bit better it's actually a bash script that we pass",
    "start": "1045600",
    "end": "1052080"
  },
  {
    "text": "through to this instance when it starts and so that bash script is actually going to handle some of the configuration and setup of the instance",
    "start": "1052080",
    "end": "1059039"
  },
  {
    "text": "after it's installed and this is one of the really powerful parts of cloudformation in helping you get a fully automated",
    "start": "1059039",
    "end": "1066000"
  },
  {
    "text": "system around turning up this instance and being ready to go",
    "start": "1066000",
    "end": "1070960"
  },
  {
    "text": "then we see again because this is a video streaming demonstration here with cloudformation",
    "start": "1071600",
    "end": "1077039"
  },
  {
    "text": "we have to create a cloudfront distribution so cloudfront is aws is cdn service you can do video",
    "start": "1077039",
    "end": "1082720"
  },
  {
    "text": "streaming with it normal kind of cdm things that you would be doing here so in cloud formation this",
    "start": "1082720",
    "end": "1087840"
  },
  {
    "text": "is very very easy to establish a a cdn distribution",
    "start": "1087840",
    "end": "1093919"
  },
  {
    "text": "those of you who work with other cdn providers how easy is it for you to get in touch with them to create a",
    "start": "1093919",
    "end": "1099760"
  },
  {
    "text": "cdn distribution for a lot of them it could be a phone call an email a ticket you have to put",
    "start": "1099760",
    "end": "1104799"
  },
  {
    "text": "in with aws cloudfront and cloud formation it's as simple these 10 or so lines",
    "start": "1104799",
    "end": "1109919"
  },
  {
    "text": "right here so what we're seeing is uh that this resource has a name live streaming distribution there's an",
    "start": "1109919",
    "end": "1116880"
  },
  {
    "text": "origin that we're going to point it at an http port an https port the origin policy",
    "start": "1116880",
    "end": "1122480"
  },
  {
    "text": "whether it's enabled in a comment and it's all that you need to instantly have access to the 38 pops that we have",
    "start": "1122480",
    "end": "1128400"
  },
  {
    "text": "around the globe capable of helping you stream your content",
    "start": "1128400",
    "end": "1133360"
  },
  {
    "text": "the last section in the cloud formation template were the outputs outputs are actually going to be the results of what it is that you do in",
    "start": "1133679",
    "end": "1139840"
  },
  {
    "text": "your cloud formation template that you might need to access so there are three here fms",
    "start": "1139840",
    "end": "1145120"
  },
  {
    "text": "server fms url and stream and these are values that paul's gonna need later on when he actually does the demonstration of the",
    "start": "1145120",
    "end": "1151120"
  },
  {
    "text": "live streaming there's a lot more so we're really just kind of scratching the surface here",
    "start": "1151120",
    "end": "1158240"
  },
  {
    "text": "let's say that you needed to create an rds database with rds it's again very very easy to do what we're seeing here",
    "start": "1158240",
    "end": "1164480"
  },
  {
    "text": "with the again in quotes the ref and the value name after that are references to other things that were",
    "start": "1164480",
    "end": "1169919"
  },
  {
    "text": "passing into this part of the template so when we saw the parameters before that paul was filling out",
    "start": "1169919",
    "end": "1175520"
  },
  {
    "text": "how you would reference those in the template is via this so what we're seeing here actually are seven different",
    "start": "1175520",
    "end": "1180960"
  },
  {
    "text": "reference parameters that we passed in so what you can think about here is if you had to launch a number of rds",
    "start": "1180960",
    "end": "1187919"
  },
  {
    "text": "instances maybe you're standing up a development stack per developer traditionally this is something where you potentially build",
    "start": "1187919",
    "end": "1193760"
  },
  {
    "text": "out the resources bit by bit but with cloud formation it's very easy to pass this in you can even have them",
    "start": "1193760",
    "end": "1198880"
  },
  {
    "text": "do it right so when it comes up they have a database instance named for them they can pass in the username and",
    "start": "1198880",
    "end": "1205039"
  },
  {
    "text": "password you could figure out how much storage needs to be allocated this type of the instance",
    "start": "1205039",
    "end": "1212080"
  },
  {
    "text": "and so looking again here at uh sorry and then things such as the security",
    "start": "1212080",
    "end": "1218240"
  },
  {
    "text": "groups that we needed for this so it's very very flexible very very dynamic these do not need to be statically typed",
    "start": "1218240",
    "end": "1224240"
  },
  {
    "text": "templates that are difficult to change or relaunch",
    "start": "1224240",
    "end": "1229679"
  },
  {
    "text": "an example of security group again the instance that paul launches inside of a security group this is just a brief example of setting",
    "start": "1229760",
    "end": "1236080"
  },
  {
    "text": "up a security group to enable ssh access to an instance so just like you would have done probably from the console the command",
    "start": "1236080",
    "end": "1242080"
  },
  {
    "text": "line you have a from port a two port the site or ip range very very straightforward and if you",
    "start": "1242080",
    "end": "1247679"
  },
  {
    "text": "needed to add this into a vpc to make it a vpc security group it's as simple as just referencing the vpc inside of it",
    "start": "1247679",
    "end": "1255039"
  },
  {
    "text": "so speaking of vpc if you needed to create a vpc with cloud formation it's as easy as these four lines so",
    "start": "1255039",
    "end": "1261039"
  },
  {
    "text": "again going back to my background of being someone who spent a lot of time in data centers a lot of time physical infrastructure",
    "start": "1261039",
    "end": "1266240"
  },
  {
    "text": "if someone were to come up to you and say you need to create a siphoned off part of our network infrastructure for a certain environment to live inside",
    "start": "1266240",
    "end": "1272720"
  },
  {
    "text": "of and uh do it very quickly how long would that take you potentially days potentially",
    "start": "1272720",
    "end": "1279039"
  },
  {
    "text": "weeks you know new equipment needs to be set up it needs to be connected to different things with vpc so with cloud formation you",
    "start": "1279039",
    "end": "1286640"
  },
  {
    "text": "have a vpc a siphoned off portion of our environment in the cloud for yourself very very easily",
    "start": "1286640",
    "end": "1293840"
  },
  {
    "start": "1293000",
    "end": "1428000"
  },
  {
    "text": "really really big part of cloudformation is metadata so we're talking about metadata here and again",
    "start": "1294480",
    "end": "1299600"
  },
  {
    "text": "my apologies for those of you in the back part of cloudformation is something called cloud formation init so we saw that bash script before that",
    "start": "1299600",
    "end": "1307360"
  },
  {
    "text": "was an example of user data but with cloud formation you also have the ability to find metadata around ec2",
    "start": "1307360",
    "end": "1313440"
  },
  {
    "text": "instances and this can also live inside of auto scaling groups so with this there are a number of handlers that cloud formation",
    "start": "1313440",
    "end": "1319520"
  },
  {
    "text": "can act upon when your instance starts up there's a packages handler a sources handler commands",
    "start": "1319520",
    "end": "1325440"
  },
  {
    "text": "files services users and groups they do pretty much exactly what they",
    "start": "1325440",
    "end": "1330480"
  },
  {
    "text": "sound like the packages handler will install packages on your instance the users of groups handler will create",
    "start": "1330480",
    "end": "1335760"
  },
  {
    "text": "users and groups the sources handler will actually take a remote file that you pointed out that is",
    "start": "1335760",
    "end": "1341039"
  },
  {
    "text": "either a tarball or a zip file and you you say a directory on the instance that you want to pass that into",
    "start": "1341039",
    "end": "1347679"
  },
  {
    "text": "so what's really cool about this is you can actually point part of your cloudformation template at a github repo",
    "start": "1347679",
    "end": "1354000"
  },
  {
    "text": "and have it download the master from that github repo and uncompress it into a directory so you have any sort of dependencies",
    "start": "1354000",
    "end": "1360240"
  },
  {
    "text": "that rely on outside resources for your application it's very easy to pass those in",
    "start": "1360240",
    "end": "1366240"
  },
  {
    "text": "this is an example here actually of that packages handler so what this is going to do is reference",
    "start": "1366240",
    "end": "1371840"
  },
  {
    "text": "the yum command on the system so for those of you from the linux worlds and red hat and related distributions",
    "start": "1371840",
    "end": "1378320"
  },
  {
    "text": "you use yum to install packages normally so this template here would be based for an ami that supported yum",
    "start": "1378320",
    "end": "1385760"
  },
  {
    "text": "if you were on a debian or ubuntu you would use apt there's handlers for windows also but so",
    "start": "1385760",
    "end": "1391280"
  },
  {
    "text": "we see here with yum we're installing these four packages and so once the instance started up and",
    "start": "1391280",
    "end": "1396559"
  },
  {
    "text": "clouded it ran it would go ahead and do this for you so",
    "start": "1396559",
    "end": "1402400"
  },
  {
    "text": "again when you work with cloud formation templates it's very very easy to do we saw an example of the web console here",
    "start": "1402400",
    "end": "1407840"
  },
  {
    "text": "you can also pass this in via the command line or api tools uh if you're doing it via the api it's as simple as a single line",
    "start": "1407840",
    "end": "1414320"
  },
  {
    "text": "so you can see how you can even take cloudformation templates the automation that they provide you when setting up a you know stack of",
    "start": "1414320",
    "end": "1421039"
  },
  {
    "text": "resources and automate that as part of another process so automating the automation",
    "start": "1421039",
    "end": "1426320"
  },
  {
    "text": "of setting up your infrastructure so we're gonna go back over to paul here real quick and uh see how our demo is",
    "start": "1426320",
    "end": "1432559"
  },
  {
    "start": "1428000",
    "end": "1723000"
  },
  {
    "text": "coming along thanks chris so i'll just get back to my",
    "start": "1432559",
    "end": "1438240"
  },
  {
    "text": "laptop and see where that has got to",
    "start": "1438240",
    "end": "1445840"
  },
  {
    "text": "so we can see the aos management console is here and that stack that i created earlier it's all green crate complete so it's",
    "start": "1455360",
    "end": "1461919"
  },
  {
    "text": "done that kind of work and if we have a look at that stack in the events",
    "start": "1461919",
    "end": "1467760"
  },
  {
    "text": "tab there if you remember we started at the bottom when it was doing the um the the stack itself and the security",
    "start": "1467760",
    "end": "1472960"
  },
  {
    "text": "group this way it's gone all the way up we've got the ec2 instance that's there we've got the cloudfront distribution",
    "start": "1472960",
    "end": "1480559"
  },
  {
    "text": "and the stack is ultimately complete so that's gone from nothing in the time that chris was talking to",
    "start": "1480559",
    "end": "1486240"
  },
  {
    "text": "an environment that's ready to do some kind of live streaming so what's the next step for us to do",
    "start": "1486240",
    "end": "1491840"
  },
  {
    "text": "so chris mentioned that there were two things more than two things but two important things in that template one was a set of",
    "start": "1491840",
    "end": "1498559"
  },
  {
    "text": "parameters that i gave it in terms of the size of the instances that i wanted the password",
    "start": "1498559",
    "end": "1503760"
  },
  {
    "text": "that i gave the fms server but then there was also that section for outputs as well so if i look at the",
    "start": "1503760",
    "end": "1509840"
  },
  {
    "text": "outputs i've got for my stack here some of these are specific to this",
    "start": "1509840",
    "end": "1515360"
  },
  {
    "text": "particular environment for live streaming but i see things like um",
    "start": "1515360",
    "end": "1521120"
  },
  {
    "text": "the uh the address of the admin console for this i also see things like the fms url so",
    "start": "1522000",
    "end": "1529600"
  },
  {
    "text": "here is an rtmp connection string that i can take go",
    "start": "1529600",
    "end": "1534799"
  },
  {
    "text": "over to my media encoder here and i can just put this straight in here",
    "start": "1534799",
    "end": "1543840"
  },
  {
    "text": "so i'm click with one click i'm connected to that media server i just had to to copy and paste that i could have done",
    "start": "1544880",
    "end": "1550240"
  },
  {
    "text": "that potentially in an automated way and served it to someone somehow differently and i can start that",
    "start": "1550240",
    "end": "1555760"
  },
  {
    "text": "stream so in a couple of seconds it will start",
    "start": "1555760",
    "end": "1560880"
  },
  {
    "text": "streaming that up to um start streaming that up to my fms server",
    "start": "1560880",
    "end": "1566320"
  },
  {
    "text": "so we know the stream is going there might be nice just to see that it actually works",
    "start": "1566320",
    "end": "1572000"
  },
  {
    "text": "so we can also find the manifest file that we need here",
    "start": "1572000",
    "end": "1579039"
  },
  {
    "text": "and we have a demo flash media setup page that we've got here so we're going to put that url in here",
    "start": "1583600",
    "end": "1589840"
  },
  {
    "text": "yep we're using live streaming we don't need this what we should hopefully see",
    "start": "1589840",
    "end": "1599840"
  },
  {
    "text": "is something that might not be what you want to see in your live video stream but you know i know that i'm good at",
    "start": "1600880",
    "end": "1606559"
  },
  {
    "text": "some things and not good at others and i clearly don't have a career for um live streaming so we'll um stop uh",
    "start": "1606559",
    "end": "1613919"
  },
  {
    "text": "yeah i think we probably want to stop that streaming for now so there are some things in some things in vegas that stay in vegas",
    "start": "1613919",
    "end": "1620640"
  },
  {
    "text": "this is one of those things um so once we finished doing that so we went in 12 minutes from",
    "start": "1620640",
    "end": "1626559"
  },
  {
    "text": "going from nothing to having all of the infrastructure that we needed to do a live media event now i said when i",
    "start": "1626559",
    "end": "1632880"
  },
  {
    "text": "asked the question about how many people used live streaming here it wasn't like the whole room put their hand up",
    "start": "1632880",
    "end": "1639120"
  },
  {
    "text": "but unless you're accidentally in the wrong room and that you thought you were at the luxury travel conference upstairs",
    "start": "1639120",
    "end": "1645520"
  },
  {
    "text": "i guarantee that pretty much everybody here can understand how cloud formation could fit in there everybody who's dealing with infrastructure has some",
    "start": "1645520",
    "end": "1651520"
  },
  {
    "text": "kind of stack it might be development stacks like chris is talking about with database instances but let's just go from nothing to",
    "start": "1651520",
    "end": "1658000"
  },
  {
    "text": "something in a very short period of time and then at the end click delete say that i want to delete",
    "start": "1658000",
    "end": "1664880"
  },
  {
    "text": "it and now cloud formation is is doing a good job of cleaning up all those resources and taking them away",
    "start": "1664880",
    "end": "1671440"
  },
  {
    "text": "so i wasn't paying when we went into this room i wasn't paying for a stack sitting there waiting for my event i spun it up when i needed it",
    "start": "1671440",
    "end": "1677600"
  },
  {
    "text": "i had my very small event in this case and at the end of it i removed the stack and by the time that instance is gone",
    "start": "1677600",
    "end": "1683760"
  },
  {
    "text": "no one is paying for anything there so that's the end of that part of the demonstration and i hope that",
    "start": "1683760",
    "end": "1689840"
  },
  {
    "text": "people can see how that might be relevant in their environment so what if we wanted to take that stack",
    "start": "1689840",
    "end": "1696399"
  },
  {
    "text": "to sydney or somewhere else and the fact is it's very easy you take that template",
    "start": "1696399",
    "end": "1702240"
  },
  {
    "text": "the parameters are going to be a little bit different for an event maybe in australia you're going to give it a different name but fundamentally you build your stack",
    "start": "1702240",
    "end": "1708399"
  },
  {
    "text": "you build this script keep it in some kind of version control system but like andy said in his keynote yesterday",
    "start": "1708399",
    "end": "1714000"
  },
  {
    "text": "now the ease that you can take a stack that you start off in the east coast of the us you want to",
    "start": "1714000",
    "end": "1719200"
  },
  {
    "text": "move it over to sydney very very simple for you to do that",
    "start": "1719200",
    "end": "1724320"
  },
  {
    "start": "1723000",
    "end": "1822000"
  },
  {
    "text": "so cloud formation helps with lots of these aws building blocks almost every aws service you can get",
    "start": "1724320",
    "end": "1730159"
  },
  {
    "text": "through through cloud formation you will expect to see more and more of that as time goes on and there are a",
    "start": "1730159",
    "end": "1735360"
  },
  {
    "text": "variety of different things that you can provision or modify some of the things that we saw here ec2 instances we can also modify stacks",
    "start": "1735360",
    "end": "1742240"
  },
  {
    "text": "whilst they're running so it's not just about creating them and getting rid of them so all of the kind of things we thought we needed in",
    "start": "1742240",
    "end": "1747840"
  },
  {
    "text": "that stack very very easy for us to do so that's some of those structural",
    "start": "1747840",
    "end": "1753919"
  },
  {
    "text": "things i talked about what are some of the other things that we might need to do in that environment",
    "start": "1753919",
    "end": "1759679"
  },
  {
    "text": "so these things are not going to be a surprise to anybody who's ever done any kind of operations it might be patching operating systems it might be pushing",
    "start": "1759679",
    "end": "1766720"
  },
  {
    "text": "new versions of code out it might be changing a configuration setting it might be doing something to a very",
    "start": "1766720",
    "end": "1772240"
  },
  {
    "text": "specific pool a very specific part of your environment still things that you need to do could",
    "start": "1772240",
    "end": "1778399"
  },
  {
    "text": "you do this with cloud formation yeah you probably could do most of that with cloud formation but it's potentially difficult to do at",
    "start": "1778399",
    "end": "1785120"
  },
  {
    "text": "scale cloud formation is a very useful tool for the kinds of things that we saw there for creating stacks for modifying",
    "start": "1785120",
    "end": "1790799"
  },
  {
    "text": "stacks and so on but you know you want to install a package just on a certain set of hosts in your environment you need to change",
    "start": "1790799",
    "end": "1796880"
  },
  {
    "text": "the ldap config on certain ec2 instances a little bit more difficult to do that",
    "start": "1796880",
    "end": "1802640"
  },
  {
    "text": "with cloud formation so cloud formation really needs a sidekick here to help out doing some",
    "start": "1802640",
    "end": "1808080"
  },
  {
    "text": "other things and that sidekick is called host-based configuration management so at this point i'm going to hand back",
    "start": "1808080",
    "end": "1814000"
  },
  {
    "text": "to chris and he's going to talk through how that what that really means and what that might mean in your environment so",
    "start": "1814000",
    "end": "1819440"
  },
  {
    "text": "chris back to you again thanks paul so host-based configuration management",
    "start": "1819440",
    "end": "1825120"
  },
  {
    "start": "1822000",
    "end": "1967000"
  },
  {
    "text": "so we saw with uh paul's demo that we were able to do everything that we needed to for that individual you know",
    "start": "1825120",
    "end": "1830640"
  },
  {
    "text": "project that streaming distribution demo with cloudformation but as paul was just saying you know there are some",
    "start": "1830640",
    "end": "1836559"
  },
  {
    "text": "things that you would need to do as you all know in your day-to-day lives dealing with infrastructure",
    "start": "1836559",
    "end": "1841760"
  },
  {
    "text": "that uh confirmation just a really best tune to do so we're looking for another tool here that can kind of fill in some of those",
    "start": "1841760",
    "end": "1847600"
  },
  {
    "text": "gaps so we'd like something that would potentially be running on hosts continuously to help us",
    "start": "1847600",
    "end": "1853200"
  },
  {
    "text": "with the management of that instance of that host it'd be really powerful to have a central point of knowledge or control",
    "start": "1853200",
    "end": "1859440"
  },
  {
    "text": "we would still want something to play with our version control practices again being able to see when a change was made who made it very",
    "start": "1859440",
    "end": "1865840"
  },
  {
    "text": "very useful and powerful for you it'd be great to have a really flexible framework you know a lot of people uh i won't ask for people to raise hands",
    "start": "1865840",
    "end": "1872559"
  },
  {
    "text": "here i'm sure a number of people this room have some really really dirty shell scripts that do a lot of very",
    "start": "1872559",
    "end": "1877760"
  },
  {
    "text": "interesting things in your infrastructure uh and so here we're going to talk about some tools that are kind of swiss army",
    "start": "1877760",
    "end": "1883440"
  },
  {
    "text": "knives of operations work such that maybe you can get rid of some of those shell scripts won't ask you to get rid of all of them",
    "start": "1883440",
    "end": "1888880"
  },
  {
    "text": "i know everybody loves their shell scripts very dearly but kind of like verner was talking about today you know there are people",
    "start": "1888880",
    "end": "1894240"
  },
  {
    "text": "who hug servers but those servers don't hug you back your shell scripts don't hug you back either",
    "start": "1894240",
    "end": "1900640"
  },
  {
    "text": "so there's two options that we're going to discuss today ops code chef and puppet labs as puppet",
    "start": "1900640",
    "end": "1906080"
  },
  {
    "text": "we're not going to go too much into the difference between the two of them they can both perform similar tasks they both run on a",
    "start": "1906080",
    "end": "1913279"
  },
  {
    "text": "you know the complete variations of different operating systems windows linuxes freebsd in some cases and they're really",
    "start": "1913279",
    "end": "1920960"
  },
  {
    "text": "used pretty much the same way they have slightly different philosophies they have slightly different syntaxes",
    "start": "1920960",
    "end": "1926559"
  },
  {
    "text": "but uh we would spend a whole lot of time today and would become kind of a religious conversation to discuss the differences between them",
    "start": "1926559",
    "end": "1932399"
  },
  {
    "text": "so it's not something we're going to go too deeply into but i do really if you're not using these tools today i suggest you spend some time looking into",
    "start": "1932399",
    "end": "1938640"
  },
  {
    "text": "them to figure out which one might be best for you so what does chef the ops code people say that",
    "start": "1938640",
    "end": "1944559"
  },
  {
    "text": "chef is an open source systems integration framework built specifically for automating the cloud",
    "start": "1944559",
    "end": "1950960"
  },
  {
    "text": "what is puppet well the puppet labs people say that pup is an i.t automation software that helps systems",
    "start": "1950960",
    "end": "1956159"
  },
  {
    "text": "administrators manage infrastructure throughout its life cycle from provisioning and configuration to patch management and compliance",
    "start": "1956159",
    "end": "1962640"
  },
  {
    "text": "so if we take a second to kind of sit and ruminate on this it sounds a lot like aws cloud formation",
    "start": "1962640",
    "end": "1969600"
  },
  {
    "text": "so there are definitely a lot of similarities between the two a lot of overlap but there are some key differences between them",
    "start": "1969600",
    "end": "1975440"
  },
  {
    "text": "so with cloud formation it runs as part of the aws platform it can manage all of the aws resources",
    "start": "1975440",
    "end": "1981600"
  },
  {
    "text": "that cloudformation is capable of managing from ec2 instances to security groups the vpcs etc",
    "start": "1981600",
    "end": "1987840"
  },
  {
    "text": "but it can only help you manage those resources so cloud information is not something that you could take and run into your own environment if you're in a",
    "start": "1987840",
    "end": "1993840"
  },
  {
    "text": "hybrid or another cloud or some sort of other data center environment and it's built and maintained by us here at aws",
    "start": "1993840",
    "end": "2000720"
  },
  {
    "text": "but if we talk about puppet and chef these are things that only would run on server hosts so on your instances",
    "start": "2000720",
    "end": "2006559"
  },
  {
    "text": "you can't take for instance pop it or shaft and run it on an rds instance or use it to set up a cloudfront distribution",
    "start": "2006559",
    "end": "2013440"
  },
  {
    "text": "but it can help you manage those servers pretty much anywhere so what's really great about these tools is you could use them to manage your servers",
    "start": "2013440",
    "end": "2019360"
  },
  {
    "text": "on aws on another cloud on on-prem you know wherever else you might have infrastructure today and",
    "start": "2019360",
    "end": "2025519"
  },
  {
    "text": "uh it's really important to note there are some skeptics about these you know these these types of software",
    "start": "2025519",
    "end": "2032080"
  },
  {
    "text": "both puppet and chef are maintained by real organizations real enterprise companies there are a lot of really big users of",
    "start": "2032080",
    "end": "2038000"
  },
  {
    "text": "these both ops code and puppet labs are very strong partners of aws",
    "start": "2038000",
    "end": "2045039"
  },
  {
    "text": "so together you have a really great solution so with cloud formation you can create",
    "start": "2045279",
    "end": "2050638"
  },
  {
    "text": "update and manage your aws resources and their configuration and properties then with something like shaffer puppet",
    "start": "2050639",
    "end": "2056320"
  },
  {
    "text": "you can go a little deeper on instance bootstrap that will run configure the host to uh",
    "start": "2056320",
    "end": "2061679"
  },
  {
    "text": "whatever it is that you pass into those to do and then in an ongoing management life cycle you're using puppet and chef",
    "start": "2061679",
    "end": "2067358"
  },
  {
    "text": "to handle things like those tasks that paul was talking about before updating software installing new software installing you",
    "start": "2067359",
    "end": "2074079"
  },
  {
    "text": "know the latest versions of you know maybe your application code uh tweaking kernel parameters things like that",
    "start": "2074079",
    "end": "2081119"
  },
  {
    "text": "so really fulfill you know end to end configuration management control here around automating your infrastructure",
    "start": "2082079",
    "end": "2088158"
  },
  {
    "text": "everything from vpcs to setting up apache creating users to creating rds instances",
    "start": "2088159",
    "end": "2094638"
  },
  {
    "text": "to uh you know anything you could think about that you would normally be doing hands-on with a with some sort of a you know operating",
    "start": "2094639",
    "end": "2101280"
  },
  {
    "text": "system or with a server you can do with these tools all of it version controlled again it's really really powerful",
    "start": "2101280",
    "end": "2107359"
  },
  {
    "text": "if you currently are not using version control software in your environment for you know those gnarly shell scripts that you have",
    "start": "2107359",
    "end": "2114079"
  },
  {
    "text": "really really recommend that you get into the habit of doing that it's extremely powerful to see what changes were made when they were",
    "start": "2114079",
    "end": "2120480"
  },
  {
    "text": "made why they were made who made them and both of these uh two different things here cloud formation",
    "start": "2120480",
    "end": "2126320"
  },
  {
    "text": "and shaffer puppet playing with that really really well so what does the flow look like in",
    "start": "2126320",
    "end": "2133119"
  },
  {
    "text": "putting the two of these together uh from an abstract here you need cloud formation to install chef or puppet and",
    "start": "2133119",
    "end": "2138960"
  },
  {
    "text": "all their dependencies you need to then configure chef or puppet on the instance",
    "start": "2138960",
    "end": "2145440"
  },
  {
    "text": "so set up a configuration file potentially to point it at in the case of chef perhaps a chef",
    "start": "2145440",
    "end": "2150880"
  },
  {
    "text": "server and pop it you have the the puppet master and then continue to use cloudformation to create aws",
    "start": "2150880",
    "end": "2156839"
  },
  {
    "text": "resources on the instant side of things with chef and puppet you need them to run when they first start up",
    "start": "2156839",
    "end": "2162560"
  },
  {
    "text": "reach out to whatever the centralized sources that they're talking to perform the tasks that they're set up to",
    "start": "2162560",
    "end": "2168400"
  },
  {
    "text": "perform and then you use those things to ongoing manage those instances so using puppet and chef later on to do",
    "start": "2168400",
    "end": "2174960"
  },
  {
    "text": "more things once the instance is up and running so what does this really look like under",
    "start": "2174960",
    "end": "2180720"
  },
  {
    "text": "the scenes here talking about cloud formation and how you tie the two together",
    "start": "2180720",
    "end": "2185839"
  },
  {
    "text": "something else real quick here that we're going to stop to think about uh for those of you who are in werner's talk he spent a lot of time talking",
    "start": "2185839",
    "end": "2190880"
  },
  {
    "text": "about auto scaling auto scaling is a very powerful service here at aws uh some great customers like pinterest",
    "start": "2190880",
    "end": "2197359"
  },
  {
    "text": "were up there talking about earlier today and there's a couple things that you really need to do well in order for auto",
    "start": "2197359",
    "end": "2202880"
  },
  {
    "start": "2198000",
    "end": "2393000"
  },
  {
    "text": "scaling to be very beneficial for your infrastructure so we have to talk here a little bit about bootstrapping",
    "start": "2202880",
    "end": "2209040"
  },
  {
    "text": "so bootstrapping is the action of what actually happens when an instance starts up it's what's going to happen from the point that that os has booted and is",
    "start": "2209040",
    "end": "2215760"
  },
  {
    "text": "running for you that uh will go up until the point where it's ready for you to use",
    "start": "2215760",
    "end": "2220960"
  },
  {
    "text": "in production and i don't mean necessarily production being the live place that you get traffic i mean production for more of a state of",
    "start": "2220960",
    "end": "2227040"
  },
  {
    "text": "this instance is up and running and usable whether it's in a dev environment a qa environment or a prod a real prod environment so",
    "start": "2227040",
    "end": "2235040"
  },
  {
    "text": "bootstrapping here you want this to be as automated as possible you don't want there to be manual intervention",
    "start": "2235040",
    "end": "2241280"
  },
  {
    "text": "oh wrong button so uh again talking about manual intervention uh there's probably a lot",
    "start": "2241280",
    "end": "2247839"
  },
  {
    "text": "of things that you do in your day-to-day if you're working in a physical data center that are a lot of manual intervention so what type of things are we talking",
    "start": "2247839",
    "end": "2253920"
  },
  {
    "text": "about automating everything that's up here on the screens right so you don't want to be copying data cloudformation and chef republic handle",
    "start": "2253920",
    "end": "2260560"
  },
  {
    "text": "that for you you don't want to be opening up a port you know in something like iptables or windows firewall",
    "start": "2260560",
    "end": "2265839"
  },
  {
    "text": "again something that cloud formation popular chef could be doing for you you don't want to be updating packages",
    "start": "2265839",
    "end": "2271200"
  },
  {
    "text": "mounting ebs volumes registering with dns anything that you would be doing manually think about yourselves right",
    "start": "2271200",
    "end": "2278079"
  },
  {
    "text": "now what it takes for you to to get a server up and running in your environment if there's a single manual",
    "start": "2278079",
    "end": "2283359"
  },
  {
    "text": "step a single time that you have to log on to that host that is in the way of you being able to really easily do things such as auto",
    "start": "2283359",
    "end": "2289520"
  },
  {
    "text": "scaling so there are a few different approaches though that come in with this",
    "start": "2289520",
    "end": "2294720"
  },
  {
    "text": "and there are three real key points to an ami or key kind of gradients of an ami",
    "start": "2294720",
    "end": "2300480"
  },
  {
    "text": "that you could use with you know automating the building up of your infrastructure we're gonna look at them here on a",
    "start": "2300480",
    "end": "2306400"
  },
  {
    "text": "gradient i think it makes it a little bit easier to kind of picture where they are so starting at i guess what is your guys",
    "start": "2306400",
    "end": "2311839"
  },
  {
    "text": "far left there you have a fully functional ami so this is an ami that you're going to have basically almost everything",
    "start": "2311839",
    "end": "2317440"
  },
  {
    "text": "bundled into it already so maybe you've already used the cloud formation template and something of chef and puppet to set up that",
    "start": "2317440",
    "end": "2322960"
  },
  {
    "text": "that instance and then you've made an ami such that when that instance launched based on that ami",
    "start": "2322960",
    "end": "2328240"
  },
  {
    "text": "there's only going to be maybe you know five percent of the work left for a chef or a puppet to do and if you talk about wanting to do auto",
    "start": "2328240",
    "end": "2334640"
  },
  {
    "text": "scaling and very rapidly turn up instances you need an ami that's a little bit further on that spectrum there towards a",
    "start": "2334640",
    "end": "2340640"
  },
  {
    "text": "fully uh functional ami the middle ground there a partially configured ami maybe you have",
    "start": "2340640",
    "end": "2345839"
  },
  {
    "text": "a base ami that you've set up that has some things right out of the box that it can do in your infrastructure maybe it needs to",
    "start": "2345839",
    "end": "2352079"
  },
  {
    "text": "talk to your ldap environment maybe it needs to add some management users such that when you turn it up if for some reason popular chef",
    "start": "2352079",
    "end": "2358480"
  },
  {
    "text": "weren't running you could still access that instance and then the last far end of the spectrum",
    "start": "2358480",
    "end": "2363520"
  },
  {
    "text": "here is having just a very base os so when we talk about portability and we were looking at the mappings before",
    "start": "2363520",
    "end": "2369359"
  },
  {
    "text": "that could have been a completely blank you know out of the box uh amazon linux ami windows server ami",
    "start": "2369359",
    "end": "2376240"
  },
  {
    "text": "and then you would rely on cloud formation or shaft and pop it to do most of the heavy lifting and set it up for you in terms of working with something less",
    "start": "2376240",
    "end": "2382880"
  },
  {
    "text": "auto scaling you would have a bit of a delay then waiting for this instance to kind of you know get fully warmed up and have",
    "start": "2382880",
    "end": "2389359"
  },
  {
    "text": "everything installed on it before it would become functional for your application",
    "start": "2389359",
    "end": "2394160"
  },
  {
    "start": "2393000",
    "end": "2706000"
  },
  {
    "text": "so actually looking here at what this looks like with cloudformation uh in this case we're just going to show uh",
    "start": "2394800",
    "end": "2400640"
  },
  {
    "text": "how you would go about setting up chef client on an instance so uh we have a cloud formation resource",
    "start": "2400640",
    "end": "2406800"
  },
  {
    "text": "here called frontends you can think of it as your your front end web server so it is a type ec2 instance we pass",
    "start": "2406800",
    "end": "2413119"
  },
  {
    "text": "into it metadata we see here that we're using the packages handler we're using two functions of the package",
    "start": "2413119",
    "end": "2418480"
  },
  {
    "text": "i'm sorry the packages handler one is yum the other one is rubygem so you can have cloudformation install",
    "start": "2418480",
    "end": "2425040"
  },
  {
    "text": "rubygems just like you could packages with yum here so uh for this cloudformation template",
    "start": "2425040",
    "end": "2430720"
  },
  {
    "text": "um chef is built on ruby so we're going to install ruby19 and some of the other packages that are",
    "start": "2430720",
    "end": "2436400"
  },
  {
    "text": "required there and then the ruby gems we're going to install are chef and then ohi which is another component of chef",
    "start": "2436400",
    "end": "2444160"
  },
  {
    "text": "in terms of files we need to set up the configuration file for chef client so this would be for a chef client that",
    "start": "2444160",
    "end": "2449520"
  },
  {
    "text": "is actually talking to a chef server somewhere and so what we have here is a very",
    "start": "2449520",
    "end": "2455040"
  },
  {
    "text": "straightforward file that we pass in using the filers handle from the metadata and we can see there are actually two",
    "start": "2455040",
    "end": "2461119"
  },
  {
    "text": "reference fields that we have in the middle where we call a get attribute and what we're getting in this attribute here is",
    "start": "2461119",
    "end": "2467040"
  },
  {
    "text": "a chef server url that this client is going to need to talk to",
    "start": "2467040",
    "end": "2472078"
  },
  {
    "text": "then we have a file that we need to define the role of the instance or actually sorry the run list of this",
    "start": "2472480",
    "end": "2477680"
  },
  {
    "text": "instance the run list is what chef is going to do once it starts up and has talked to the server pulled in its cookbooks",
    "start": "2477680",
    "end": "2483599"
  },
  {
    "text": "that it needs to you know configure the instance itself and then lastly we actually need to tell",
    "start": "2483599",
    "end": "2491040"
  },
  {
    "text": "cloudformation to run chef client once the instance starts so after it's completed all the other parts",
    "start": "2491040",
    "end": "2496640"
  },
  {
    "text": "of installing the packages setting up the configuration file here if you look down towards the bottom here",
    "start": "2496640",
    "end": "2502160"
  },
  {
    "text": "i'm sorry again for those of you in the back you'll see a line that we actually use to call chef client",
    "start": "2502160",
    "end": "2507440"
  },
  {
    "text": "we pass in that first run json that we established in the previous slide that you saw here",
    "start": "2507440",
    "end": "2513839"
  },
  {
    "text": "above and below here what you're actually seeing are some other functions that cloud formation can handle so we see something called a chef client weight",
    "start": "2513839",
    "end": "2520839"
  },
  {
    "text": "handle with cloud formation when you're setting up various different resources it's going to try to very quickly",
    "start": "2520839",
    "end": "2526960"
  },
  {
    "text": "establish them for you but if you need to do something out of band from the aws aspects of turning up the resources such",
    "start": "2526960",
    "end": "2533440"
  },
  {
    "text": "as run software on a host run commands do something such as bootstrap and instance with chef clients you might",
    "start": "2533440",
    "end": "2539280"
  },
  {
    "text": "want to wait for the this to finish before other resources will be fired up so in this case what we've told cloud formation is",
    "start": "2539280",
    "end": "2545760"
  },
  {
    "text": "run chef client and then holds back on doing anything else until after chef client is run",
    "start": "2545760",
    "end": "2552240"
  },
  {
    "text": "so really the full big utopia picture here is to not be super super obsessed about what",
    "start": "2552800",
    "end": "2559280"
  },
  {
    "text": "your amis are you know you get paul and i uh based out of the new york city office for aws spent a lot of time working with",
    "start": "2559280",
    "end": "2565119"
  },
  {
    "text": "large enterprises small startups kind of everything in between i spent a lot of time talking about amis",
    "start": "2565119",
    "end": "2570800"
  },
  {
    "text": "a lot of time people worried about that you know golden based image that they're going to have and that they're going to bring with them and",
    "start": "2570800",
    "end": "2576480"
  },
  {
    "text": "what happens if i lose it what happens if somebody deletes it well using something such as cloud formation and shaft or puppet you can",
    "start": "2576480",
    "end": "2583040"
  },
  {
    "text": "recreate it at any time right so you want something like cloud formation and chef and puppet able to take",
    "start": "2583040",
    "end": "2588640"
  },
  {
    "text": "that base os the ami that we were talking about before and get it as close to a fully functional ami as possible",
    "start": "2588640",
    "end": "2595119"
  },
  {
    "text": "and this is going to be the thing that's going to enable you to take benefit of things such as auto scaling",
    "start": "2595119",
    "end": "2601520"
  },
  {
    "text": "for your environment and then you know again putting these all together it's really really easy to",
    "start": "2601520",
    "end": "2606560"
  },
  {
    "text": "do full stack environments here so we're talking before about the example of maybe needing to stamp out uh a stack per developer you could think",
    "start": "2606560",
    "end": "2614000"
  },
  {
    "text": "about maybe you have different qa or dev environments for different uh products that your company might have",
    "start": "2614000",
    "end": "2619839"
  },
  {
    "text": "maybe you're talking about needing to do multi-region right so if you need to do multi-region very quickly and rapidly",
    "start": "2619839",
    "end": "2625680"
  },
  {
    "text": "it's something that is very difficult to do if you weren't using a tool such as cloud formation or shaft and puppet",
    "start": "2625680",
    "end": "2631040"
  },
  {
    "text": "andy talked a little bit yesterday about the obama campaign and their heavy use of aws",
    "start": "2631040",
    "end": "2636480"
  },
  {
    "text": "they had a very great story that they talked about before hurricane sandy came and hit the east coast they were concerned about what the storm",
    "start": "2636480",
    "end": "2643520"
  },
  {
    "text": "might do so they were able to move their infrastructure from u.s east to u.s west and i believe under 24 hours",
    "start": "2643520",
    "end": "2652560"
  },
  {
    "text": "this was several hundred instances a lot of applications and they were able to move it with the",
    "start": "2652560",
    "end": "2657680"
  },
  {
    "text": "help of things such as cloud formation and i don't remember if they were using puppet or chef but i know they were",
    "start": "2657680",
    "end": "2662960"
  },
  {
    "text": "using one of them to help with that so i'm going to hand it back over to paul now",
    "start": "2662960",
    "end": "2669520"
  },
  {
    "text": "thanks chris so in closing we hope you found this session useful we looked at what these",
    "start": "2669520",
    "end": "2674880"
  },
  {
    "text": "tools are how cloud formation works with other things like chef and puppet to to be your kind of toolbox for having",
    "start": "2674880",
    "end": "2681520"
  },
  {
    "text": "the best kind of operational experience with aws what we would recommend is spend some",
    "start": "2681520",
    "end": "2687040"
  },
  {
    "text": "time to understand these tools it's definitely worth the investment into learning them to make sure you have the best experience and favor the kind of the",
    "start": "2687040",
    "end": "2694160"
  },
  {
    "text": "best practices we have for dynamic kind of configuration and chris's utopian view of being ami agnostic so thanks for your",
    "start": "2694160",
    "end": "2701760"
  },
  {
    "text": "time we hope you found this useful this is the first user conference that we've done so",
    "start": "2701760",
    "end": "2708079"
  }
]