[
  {
    "start": "0",
    "end": "73000"
  },
  {
    "text": "hello everyone in this session we are going to learn how you can containerize",
    "start": "79",
    "end": "5160"
  },
  {
    "text": "dotnet applications and run them on Amazon Elastic content services my name is Shree Manta Tanaka and I'm a",
    "start": "5160",
    "end": "11490"
  },
  {
    "text": "partner solution architect at Amazon Web Services so what's the agenda for today",
    "start": "11490",
    "end": "16890"
  },
  {
    "text": "we are going to containerize an exe application and asp.net application",
    "start": "16890",
    "end": "21960"
  },
  {
    "text": "using visual studio doing containerization use in Visual Studio is",
    "start": "21960",
    "end": "27150"
  },
  {
    "text": "super easy we are going to containerize an exe application manually to understand the fundamental of",
    "start": "27150",
    "end": "33530"
  },
  {
    "text": "containerization and if you have an application without source code you will learn how you can easily do that once we",
    "start": "33530",
    "end": "40860"
  },
  {
    "text": "learn the basics of containerization we will go and explore amis an elastic container service and Amazon elastic",
    "start": "40860",
    "end": "47280"
  },
  {
    "text": "container registry we are going to spend on your very quick time learning that and we will then directly jump into how",
    "start": "47280",
    "end": "54750"
  },
  {
    "text": "you can run a dotnet application on Amazon DCs we will then learn how you",
    "start": "54750",
    "end": "60000"
  },
  {
    "text": "can create a CI CD pipeline to continuously deploy containers to ezs in",
    "start": "60000",
    "end": "66390"
  },
  {
    "text": "this case we are going to explore asp.net web application deployment so let's get started let's first",
    "start": "66390",
    "end": "76320"
  },
  {
    "start": "73000",
    "end": "295000"
  },
  {
    "text": "containerize an exe application and an asp.net web app site using visual studio",
    "start": "76320",
    "end": "83210"
  },
  {
    "text": "so I have started which was to do so I'm going to create a new project a console application you can give it a name that",
    "start": "83250",
    "end": "91440"
  },
  {
    "text": "you like what I'm going to do here is to paste some command so all what I'm doing",
    "start": "91440",
    "end": "98580"
  },
  {
    "text": "here is creating multiple threads using task power library and then spot",
    "start": "98580",
    "end": "105690"
  },
  {
    "text": "multiple threads and then printing them into screen some numbers I'm printing into screen right not very complex to",
    "start": "105690",
    "end": "112770"
  },
  {
    "text": "simulate a batch application so when you run this it uses all the CPU available",
    "start": "112770",
    "end": "118260"
  },
  {
    "text": "and it prints some numbers so you can find that multiple threads printing some",
    "start": "118260",
    "end": "123570"
  },
  {
    "text": "numbers into the screen very simple application to make it dhaka enable i go",
    "start": "123570",
    "end": "129660"
  },
  {
    "text": "to visual studio click add and then click docker support so when I add",
    "start": "129660",
    "end": "134760"
  },
  {
    "text": "docker support it will add the file called docker files so if you go into",
    "start": "134760",
    "end": "142620"
  },
  {
    "text": "docker file you can find that the base image that is going to based out off and",
    "start": "142620",
    "end": "148190"
  },
  {
    "text": "what application that it's going to run with this container on so in this case",
    "start": "148190",
    "end": "153209"
  },
  {
    "text": "see app my batch application dot exe so now I have this docker enable so when I",
    "start": "153209",
    "end": "159720"
  },
  {
    "text": "click docker what will happen is the visual studio will grab an image docker",
    "start": "159720",
    "end": "166650"
  },
  {
    "text": "image if it does not exist from Internet and if it already exists you will start",
    "start": "166650",
    "end": "173730"
  },
  {
    "text": "building it so here you can find that it's downloading the image because it didn't have this image locally and it's",
    "start": "173730",
    "end": "181739"
  },
  {
    "text": "going to copy these files the build artifact in this case exe and then deployed so you can find that the debug",
    "start": "181739",
    "end": "188430"
  },
  {
    "text": "points works as before all right so the debugging of docker containers is pretty",
    "start": "188430",
    "end": "195239"
  },
  {
    "text": "much similar when you do it on visual studio and suppose to when you create a simple",
    "start": "195239",
    "end": "200340"
  },
  {
    "text": "exe application so if you type docker PS you can find that behind the scene which was 2d has started the container and the",
    "start": "200340",
    "end": "207810"
  },
  {
    "text": "experience is pretty much similar if you containerize and web application so here i have a SP dotnet web application i",
    "start": "207810",
    "end": "213900"
  },
  {
    "text": "click add and then go for blockers support so here",
    "start": "213900",
    "end": "220290"
  },
  {
    "text": "the base image is going to be asp.net based image and it's going to run ie is",
    "start": "220290",
    "end": "226349"
  },
  {
    "text": "behind the scene right so you can find that behind the scene it's now downloading that image because I did not",
    "start": "226349",
    "end": "231510"
  },
  {
    "text": "have that and once it downloaded what we'll do it will start this container",
    "start": "231510",
    "end": "237480"
  },
  {
    "text": "and we'll run iOS with the website so",
    "start": "237480",
    "end": "242670"
  },
  {
    "text": "it's a starting the website the only difference you will find here is that it's instead of running on local machine",
    "start": "242670",
    "end": "249360"
  },
  {
    "text": "it's running on a special network which is a nut network in the docker so you",
    "start": "249360",
    "end": "255810"
  },
  {
    "text": "will have access to your website so this website is running inside a container the beauty here is that if you have some",
    "start": "255810",
    "end": "263160"
  },
  {
    "text": "JavaScript that you want to debug you can easily go here and then make some changes with that for example if I make",
    "start": "263160",
    "end": "268740"
  },
  {
    "text": "changes to this HTML page you can find that I can easily view that without",
    "start": "268740",
    "end": "275340"
  },
  {
    "text": "restarting iis or restarting the container so I just save this HTML page and if i refresh this you can find that",
    "start": "275340",
    "end": "284240"
  },
  {
    "text": "the changes I have made reflected my debug point also get heat you can find",
    "start": "284479",
    "end": "290039"
  },
  {
    "text": "that the changes are being reflected you",
    "start": "290039",
    "end": "296340"
  },
  {
    "start": "295000",
    "end": "376000"
  },
  {
    "text": "may be wondering what happened behind the scene when we make some changes to",
    "start": "296340",
    "end": "301440"
  },
  {
    "text": "the website page and refresh the website that is running inside the container",
    "start": "301440",
    "end": "307919"
  },
  {
    "text": "you saw that the we didn't restart I is we didn't restart the debugging process",
    "start": "307919",
    "end": "313740"
  },
  {
    "text": "of Visual Studio but the changes we made to the page immediately after the change",
    "start": "313740",
    "end": "319830"
  },
  {
    "text": "appeared once we refresh the website so what happened behind the scene so you were running your visual studio and when",
    "start": "319830",
    "end": "327270"
  },
  {
    "text": "you run the docker container it spin up a new container with iOS running inside",
    "start": "327270",
    "end": "332729"
  },
  {
    "text": "and it then mounts your folder that has the website into the root directory of",
    "start": "332729",
    "end": "339900"
  },
  {
    "text": "is inside the container so whenever you make changes to your web pages because",
    "start": "339900",
    "end": "346200"
  },
  {
    "text": "it's a mounted volume it does change appears inside the container is route",
    "start": "346200",
    "end": "352860"
  },
  {
    "text": "fault you can of course run your remote",
    "start": "352860",
    "end": "358650"
  },
  {
    "text": "debugging process inside the container and then attach into that so this is how",
    "start": "358650",
    "end": "365400"
  },
  {
    "text": "you get the seamless debugging experience similar to the debugging experience that you would get in",
    "start": "365400",
    "end": "372080"
  },
  {
    "text": "building a speed on an application or exe application we now know how easy it",
    "start": "372080",
    "end": "378779"
  },
  {
    "start": "376000",
    "end": "765000"
  },
  {
    "text": "is to containerize an exe application using Visual Studio but there may be",
    "start": "378779",
    "end": "383939"
  },
  {
    "text": "some times where you need to containerize an exe application manually so what I'm going to do now is to",
    "start": "383939",
    "end": "389849"
  },
  {
    "text": "containerize the same exe application I just built but I'm going to do it manually the reason why we need to",
    "start": "389849",
    "end": "396900"
  },
  {
    "text": "understand is that at some point in creating your CI CD pipeline you may decide hey I'm not going to use Visual",
    "start": "396900",
    "end": "404909"
  },
  {
    "text": "Studio to containerize it but I'm going to script the build process in a way that I just get an exe application or",
    "start": "404909",
    "end": "412499"
  },
  {
    "text": "I'm MSI package install it in the container and then create an image out of it so let's see how we can manually",
    "start": "412499",
    "end": "419039"
  },
  {
    "text": "containerize an exe application I have a sample exe application that I want to",
    "start": "419039",
    "end": "425610"
  },
  {
    "text": "containerize it's called my batch app so let's run it and then see how it works",
    "start": "425610",
    "end": "431789"
  },
  {
    "text": "so all what it does is spin up multiple threads and then paint some random numbers if you go to the CPU utilization",
    "start": "431789",
    "end": "439259"
  },
  {
    "text": "you can find that it pretty much uses all the CPU available of the machine a classic bad behaving application so",
    "start": "439259",
    "end": "447569"
  },
  {
    "text": "let's see how we can containerize this application so I started PowerShell as",
    "start": "447569",
    "end": "455879"
  },
  {
    "text": "an administrator and I'm going to",
    "start": "455879",
    "end": "462899"
  },
  {
    "text": "download an image from Microsoft to do that I'm going to call docker pool and",
    "start": "462899",
    "end": "468689"
  },
  {
    "text": "I'm going to give you the name of the image Microsoft Windows server call this",
    "start": "468689",
    "end": "475830"
  },
  {
    "text": "will go to Dhaka hub and download the latest version of Windows server coinage so it already identified that some",
    "start": "475830",
    "end": "483150"
  },
  {
    "text": "layers already exist so it's not going to download the existing layers and there's one layer that is missing maybe",
    "start": "483150",
    "end": "489990"
  },
  {
    "text": "it's a new security patch on an upgrade from Microsoft so it's downloading that missing layer",
    "start": "489990",
    "end": "496880"
  },
  {
    "text": "so this layer is a compressed version of the image so the download is fast so now",
    "start": "496880",
    "end": "503640"
  },
  {
    "text": "it's extracting that compressed layer so we are almost done",
    "start": "503640",
    "end": "510800"
  },
  {
    "text": "so the download is now complete",
    "start": "514760",
    "end": "519050"
  },
  {
    "text": "and if I type docker images you can find in the latest downloaded images",
    "start": "520310",
    "end": "527540"
  },
  {
    "text": "so let's run a docker container in this case I'm going to run it interactively and they can image that I'm going to use",
    "start": "532720",
    "end": "540610"
  },
  {
    "text": "this Microsoft Windows Server course and I'm going to run PowerShell inside this container so when I type enter it will",
    "start": "540610",
    "end": "548560"
  },
  {
    "text": "go inside the container because I'm running it as an interactive mode to",
    "start": "548560",
    "end": "553750"
  },
  {
    "text": "know the container ID I can type host name so you get the container ID so if",
    "start": "553750",
    "end": "560200"
  },
  {
    "text": "you look at the directory structure of this container you can find that it's completely different from the container",
    "start": "560200",
    "end": "565690"
  },
  {
    "text": "host and from any other containers running on this machine so containers",
    "start": "565690",
    "end": "571480"
  },
  {
    "text": "have their own file system for the registry entries or any configuration that you modified in the container is",
    "start": "571480",
    "end": "577870"
  },
  {
    "text": "only visible within that container same for the task list if you look at the",
    "start": "577870",
    "end": "582880"
  },
  {
    "text": "processors running inside the container you can find that they are different from what you find on your container",
    "start": "582880",
    "end": "588970"
  },
  {
    "text": "host containers start fast because they don't need to start all the processors",
    "start": "588970",
    "end": "595090"
  },
  {
    "text": "that you need to start when you run a virtual machine so let's make a",
    "start": "595090",
    "end": "607690"
  },
  {
    "text": "directory inside this container so I'm going to say mkdir and I'm going to tell",
    "start": "607690",
    "end": "612910"
  },
  {
    "text": "it as my app and I have started another PowerShell window in the container host",
    "start": "612910",
    "end": "619410"
  },
  {
    "text": "so if I type dock appears I can find the running containers inside this container",
    "start": "619410",
    "end": "624550"
  },
  {
    "text": "host so I have one call for a six nine",
    "start": "624550",
    "end": "630120"
  },
  {
    "text": "so what I'm going to do now is to copy my exe application inside mic which is",
    "start": "630120",
    "end": "636430"
  },
  {
    "text": "inside my container host undersea install my batch into the container so I",
    "start": "636430",
    "end": "642160"
  },
  {
    "text": "give the content ID in this case four six nine you can only do part of the ID",
    "start": "642160",
    "end": "647470"
  },
  {
    "text": "as long as it distinguished from the rest of the run in containers and inside my content I have a folder called my app",
    "start": "647470",
    "end": "654430"
  },
  {
    "text": "and I'm going to copy it to that my app folder so if you look at my app folder you can find that exe application has",
    "start": "654430",
    "end": "660550"
  },
  {
    "text": "been copied so my exe is now inside the container I can exit from the container",
    "start": "660550",
    "end": "667860"
  },
  {
    "text": "like this because I have copied the file or I can simply say a docker stop and",
    "start": "667860",
    "end": "673440"
  },
  {
    "text": "give the Content ID from my container host so I'm going to stop the container",
    "start": "673440",
    "end": "680880"
  },
  {
    "text": "that I just modified so it has the exe that I copied the next thing I'm going",
    "start": "680880",
    "end": "688260"
  },
  {
    "text": "to do is to call docker commit that will save these changes as an image so the",
    "start": "688260",
    "end": "695279"
  },
  {
    "text": "container that I want to save is 46:9 that's the container ID you can give only part of the container ID if you",
    "start": "695279",
    "end": "700649"
  },
  {
    "text": "like and then I give a name for my image so in this case I'm going to call it my app so from the time I do that it will",
    "start": "700649",
    "end": "708360"
  },
  {
    "text": "save the changes that I have made so if",
    "start": "708360",
    "end": "714660"
  },
  {
    "text": "I type docker images you can find my newly created image called my app",
    "start": "714660",
    "end": "720440"
  },
  {
    "text": "so I can now run this container image that I just created but instead of giving all the CP available I'm going to",
    "start": "730020",
    "end": "736380"
  },
  {
    "text": "give only 20% of the CPU so image I'm going to run is called my app inside",
    "start": "736380",
    "end": "742080"
  },
  {
    "text": "that image I have a application called my bad chap so from the time that I've type inter application will start as",
    "start": "742080",
    "end": "749430"
  },
  {
    "text": "normal like before but if you look at the CPU utilization you can see that I",
    "start": "749430",
    "end": "754529"
  },
  {
    "text": "have slice and dice my CPU and give only fraction of it so it's now no longer",
    "start": "754529",
    "end": "760140"
  },
  {
    "text": "using the hundred percent of my CPU the",
    "start": "760140",
    "end": "767279"
  },
  {
    "start": "765000",
    "end": "1234000"
  },
  {
    "text": "first thing you need to understand is running a simple container is very easy you can do it manually but the",
    "start": "767279",
    "end": "775529"
  },
  {
    "text": "challenges comes when you try to run multiples containers you need to think",
    "start": "775529",
    "end": "780630"
  },
  {
    "text": "about how you how you are going to schedule these containers because some containers you want to run for few hours",
    "start": "780630",
    "end": "787470"
  },
  {
    "text": "maybe for a few minutes and then you need to terminate them you need to think",
    "start": "787470",
    "end": "793470"
  },
  {
    "text": "about allocating available hardware resources for your containers because",
    "start": "793470",
    "end": "798600"
  },
  {
    "text": "you may have a HR application that you want to allocate a small number of memory and CPU whereas you may have a",
    "start": "798600",
    "end": "805529"
  },
  {
    "text": "very compute intensive application where you need to allocate more memory and CPU so you need to find places where you",
    "start": "805529",
    "end": "813209"
  },
  {
    "text": "have leftover hardware resources and then schedule your containers accordingly and that's why sometimes",
    "start": "813209",
    "end": "819510"
  },
  {
    "text": "these bookkeeping tasks like where you have spare resources can take a lot of",
    "start": "819510",
    "end": "825959"
  },
  {
    "text": "time so to make your life easy when you run hundreds or even thousands of",
    "start": "825959",
    "end": "832170"
  },
  {
    "text": "containers we have it invented these services called Amazon ecs or elastic",
    "start": "832170",
    "end": "838380"
  },
  {
    "text": "container service and amass an ECR elastic container registry Amazon in C R",
    "start": "838380",
    "end": "843450"
  },
  {
    "text": "is something similar to docker hub where you can keep your docker images the only",
    "start": "843450",
    "end": "849779"
  },
  {
    "text": "difference is it's tightly integrated with AWS identity and access management",
    "start": "849779",
    "end": "858110"
  },
  {
    "text": "systems so that you can define for example hey",
    "start": "858110",
    "end": "863400"
  },
  {
    "text": "these are my production images and they are available only for the servers running or the clusters running in my",
    "start": "863400",
    "end": "870960"
  },
  {
    "text": "production environment and these are my development services and the developers or the your build systems have access to",
    "start": "870960",
    "end": "878000"
  },
  {
    "text": "the given repositories you can easily define the identities for easy are elastic container service is the content",
    "start": "878000",
    "end": "885840"
  },
  {
    "text": "orchestration engine so easiest knows how to place your containers in available hardware resources and",
    "start": "885840",
    "end": "891840"
  },
  {
    "text": "orchestrate your containers based on different parameters so underneath",
    "start": "891840",
    "end": "899900"
  },
  {
    "text": "easiest is best out of a concept called cluster a cluster abstract ec2 instances",
    "start": "899900",
    "end": "907160"
  },
  {
    "text": "so some of these ec2 instance you may already have some running software like",
    "start": "907160",
    "end": "912420"
  },
  {
    "text": "SQL Server or there may be some new ec2 instance that you added to the cluster",
    "start": "912420",
    "end": "919910"
  },
  {
    "text": "the cluster can scale out or scaling depending on different parameters for",
    "start": "919910",
    "end": "925680"
  },
  {
    "text": "example if the cluster CP utilization goes above 85% you can specify to add",
    "start": "925680",
    "end": "932130"
  },
  {
    "text": "more ec2 instance or if the class utilization goes below let's say 20% of",
    "start": "932130",
    "end": "938430"
  },
  {
    "text": "the CPU you can remove certain in situ instances so there are a lot of capabilities to scale out and scale in",
    "start": "938430",
    "end": "945560"
  },
  {
    "text": "when you find that you don't have enough resources to run your containers the",
    "start": "945560",
    "end": "951120"
  },
  {
    "text": "cluster can automatically scale out and scaling so once you create the cluster",
    "start": "951120",
    "end": "956220"
  },
  {
    "text": "you create something called a task a task is nothing more than a construct",
    "start": "956220",
    "end": "962400"
  },
  {
    "text": "that you used to define the set of containers that you won't run you can say hey yes I want to run SQL Server and",
    "start": "962400",
    "end": "970710"
  },
  {
    "text": "a website and these are the containers that contains that application you also",
    "start": "970710",
    "end": "977160"
  },
  {
    "text": "can specify things like constraints you can specify things like hey this is a",
    "start": "977160",
    "end": "982620"
  },
  {
    "text": "human resource application and I don't want to run it in the same ec2 machine",
    "start": "982620",
    "end": "987930"
  },
  {
    "text": "where my finance application is running due to compliance reasons you can also define things like what ec2 instance",
    "start": "987930",
    "end": "994560"
  },
  {
    "text": "that this container should run and also you can define tags too easy to",
    "start": "994560",
    "end": "999660"
  },
  {
    "text": "instance and then place containers on certain instance but not the others also",
    "start": "999660",
    "end": "1005330"
  },
  {
    "text": "you can specify the resource demands for example if you have a memory intensive application you can allocate more memory",
    "start": "1005330",
    "end": "1011390"
  },
  {
    "text": "and also you can define how much CPU that you wanted to have so once you",
    "start": "1011390",
    "end": "1016580"
  },
  {
    "text": "create a task you have defined what containers you want to run its resource",
    "start": "1016580",
    "end": "1021920"
  },
  {
    "text": "demands and the constraints then what you do is you create something called a service a task you can start manually",
    "start": "1021920",
    "end": "1030980"
  },
  {
    "text": "but it doesn't guarantee that the task will run always a service is something",
    "start": "1030980",
    "end": "1036770"
  },
  {
    "text": "that you can use to maintain some desired state you can say for example",
    "start": "1036770",
    "end": "1041900"
  },
  {
    "text": "how many tasks that you want to run what's the deployment strategy how the",
    "start": "1041900",
    "end": "1047839"
  },
  {
    "text": "auto-scaling should work for example you can say hey this is a website and I want",
    "start": "1047839",
    "end": "1053450"
  },
  {
    "text": "to run two containers to absorb the Lord so in that case the service will maintain that two containers or the two",
    "start": "1053450",
    "end": "1060170"
  },
  {
    "text": "tasks always running if for some reason one container fails due to let's say an",
    "start": "1060170",
    "end": "1065960"
  },
  {
    "text": "ec2 instance failure or two virus or a patch in upgrade or you manually deleted",
    "start": "1065960",
    "end": "1071690"
  },
  {
    "text": "it the service will make sure that it will start a container in another available hardware resource ECS has some",
    "start": "1071690",
    "end": "1080960"
  },
  {
    "text": "built-in intelligence for example it can define how we are going to place your",
    "start": "1080960",
    "end": "1086390"
  },
  {
    "text": "containers when you deploy them for example if you use a bin packing strategy it will first feel one easy to",
    "start": "1086390",
    "end": "1093500"
  },
  {
    "text": "instance with available containers and then it will go into the next visual instance you can also define things like",
    "start": "1093500",
    "end": "1101090"
  },
  {
    "text": "balance spread so in that case it will place your containers evenly across the available is your instance in your",
    "start": "1101090",
    "end": "1107180"
  },
  {
    "text": "cluster you can also define your custom algorithms if you want but it's beyond",
    "start": "1107180",
    "end": "1112790"
  },
  {
    "text": "the scope of this presentation so once you create your services you place them",
    "start": "1112790",
    "end": "1119570"
  },
  {
    "text": "on the cluster and in random so for example you can run your human resource application along with your finance",
    "start": "1119570",
    "end": "1125270"
  },
  {
    "text": "application and your marketing application the cluster can scale in and out",
    "start": "1125270",
    "end": "1131779"
  },
  {
    "text": "independently for example you may have thousand containers that runs on this cluster but you may only have four ec2",
    "start": "1131779",
    "end": "1138529"
  },
  {
    "text": "instance back in this you are being charged only for the ec2 instance that",
    "start": "1138529",
    "end": "1144200"
  },
  {
    "text": "backed this cluster but you are not being charged for how many containers that you run so for example if you are",
    "start": "1144200",
    "end": "1150649"
  },
  {
    "text": "running four and four large instances",
    "start": "1150649",
    "end": "1156049"
  },
  {
    "text": "you only been charged for falling for large instances regardless of how many containers that you run in the cluster",
    "start": "1156049",
    "end": "1163929"
  },
  {
    "text": "so behind the scene how it works is you have these container hosts which are",
    "start": "1163929",
    "end": "1170960"
  },
  {
    "text": "pretty much easy to instance that can be in any availability zones so example",
    "start": "1170960",
    "end": "1176509"
  },
  {
    "text": "here I have two ec2 instances a container host in availability zone one and there's another container house in",
    "start": "1176509",
    "end": "1183649"
  },
  {
    "text": "availability zone 2 and the ECS can place your containers across",
    "start": "1183649",
    "end": "1188960"
  },
  {
    "text": "availability zones so for example if you have two ec2 instance in two",
    "start": "1188960",
    "end": "1194840"
  },
  {
    "text": "availability zones you can define some balance spread deployment and then specify some constraints so that your",
    "start": "1194840",
    "end": "1202220"
  },
  {
    "text": "containers will be placed on two different availability zones for high availability and resource recovery",
    "start": "1202220",
    "end": "1208940"
  },
  {
    "text": "purposes all right behind the scene there's an EC s agent which communicates",
    "start": "1208940",
    "end": "1215929"
  },
  {
    "text": "with EC s so all what easiest does is communicate with this easiest agent to",
    "start": "1215929",
    "end": "1221480"
  },
  {
    "text": "send some docker commands to invoke and start containers inside your container",
    "start": "1221480",
    "end": "1227600"
  },
  {
    "text": "host so we will go into much detail later and then showcase you how this works you",
    "start": "1227600",
    "end": "1234399"
  },
  {
    "text": "now know different ways to create docker images and then package your dotnet",
    "start": "1234399",
    "end": "1240500"
  },
  {
    "text": "application in today so you can do it with visual studio you can do it manually so regardless of how you build",
    "start": "1240500",
    "end": "1248389"
  },
  {
    "text": "that application at the end of the day what you are going to get is docker image so in the subsequent demo where",
    "start": "1248389",
    "end": "1256129"
  },
  {
    "text": "I'm going to showcase you is how you can run this image or the application that is inside image",
    "start": "1256129",
    "end": "1263160"
  },
  {
    "text": "using Amazon easiest or elastic container service I'm in my AWS console",
    "start": "1263160",
    "end": "1270840"
  },
  {
    "start": "1267000",
    "end": "1353000"
  },
  {
    "text": "so go to elastic container service so here you can find that I already have",
    "start": "1270840",
    "end": "1276450"
  },
  {
    "text": "two clusters already created my fabrikam cluster and my controller cluster my",
    "start": "1276450",
    "end": "1282120"
  },
  {
    "text": "controller cluster already has two ec2 instance running and it has one service and 12 tasks running so you can find",
    "start": "1282120",
    "end": "1292920"
  },
  {
    "text": "that it's backed by two ec2 instances so let's go into the repository so this is",
    "start": "1292920",
    "end": "1298890"
  },
  {
    "text": "where you find Amazon ECR it's something similar to docker hub but partly",
    "start": "1298890",
    "end": "1304920"
  },
  {
    "text": "integrated with AWS or Indian access management so you can find that there are two repositories already existing so",
    "start": "1304920",
    "end": "1312780"
  },
  {
    "text": "what I'm going to do now is to create a new repository to keep my image so click",
    "start": "1312780",
    "end": "1318210"
  },
  {
    "text": "create new repository and give the repository your name in this case I'm",
    "start": "1318210",
    "end": "1323820"
  },
  {
    "text": "going to call it hello world click Next so once you create the repository it",
    "start": "1323820",
    "end": "1329100"
  },
  {
    "text": "gives you some command that you can use to push the image that you created into",
    "start": "1329100",
    "end": "1334410"
  },
  {
    "text": "a CR so these are all standard docker command except only the login one so you",
    "start": "1334410",
    "end": "1341250"
  },
  {
    "text": "click done and then you have your repository created so if you want to weave the command again you can view the",
    "start": "1341250",
    "end": "1347160"
  },
  {
    "text": "push commands using that button and it will give you the standard Ducker commands that you need to execute so I",
    "start": "1347160",
    "end": "1355140"
  },
  {
    "start": "1353000",
    "end": "1465000"
  },
  {
    "text": "started PowerShell in the machine that I have built this image so if I type docker images you can find that my app",
    "start": "1355140",
    "end": "1361500"
  },
  {
    "text": "is there so this is the image that I need to publish into easier the first",
    "start": "1361500",
    "end": "1366900"
  },
  {
    "text": "thing is to call docker tank so I'm going to tag my app latest with the full",
    "start": "1366900",
    "end": "1372180"
  },
  {
    "text": "URL of my ECR repository so in this case",
    "start": "1372180",
    "end": "1377220"
  },
  {
    "text": "it's going to be a hello world latest so when I press ENTER it will tag it and it",
    "start": "1377220",
    "end": "1383340"
  },
  {
    "text": "will create an alias for an existing image so you can find my apology exists and it created a new alias with the full",
    "start": "1383340",
    "end": "1389580"
  },
  {
    "text": "URL of my CR the next thing you need to do is of",
    "start": "1389580",
    "end": "1394680"
  },
  {
    "text": "course you need to login into ezr to publish this image so you invoke expression e WSC CR get login and so in",
    "start": "1394680",
    "end": "1402870"
  },
  {
    "text": "this way I can log in so all these commands are given when you create the repository so login is successful the",
    "start": "1402870",
    "end": "1410250"
  },
  {
    "text": "important thing is that the machine has to have write permissions to get the token and now here I'm showing docker",
    "start": "1410250",
    "end": "1417870"
  },
  {
    "text": "push and give the full URL so what I'm",
    "start": "1417870",
    "end": "1423240"
  },
  {
    "text": "going to do now is to go to",
    "start": "1423240",
    "end": "1427940"
  },
  {
    "text": "so the login is successful what I'm",
    "start": "1443510",
    "end": "1450110"
  },
  {
    "text": "going to do now is to call docker push and give the full URL of the image so",
    "start": "1450110",
    "end": "1457250"
  },
  {
    "text": "once I do that you can find that it's blood in that image only the Delta changes are uploaded so it has uploaded",
    "start": "1457250",
    "end": "1466340"
  },
  {
    "start": "1465000",
    "end": "1593000"
  },
  {
    "text": "image so if I go into my ECR and then refresh this you can find that the image",
    "start": "1466340",
    "end": "1471440"
  },
  {
    "text": "has been uploaded so it's not though everything is uploading your approach only the Delta changes and you can find",
    "start": "1471440",
    "end": "1477230"
  },
  {
    "text": "that the size is very small so once it's",
    "start": "1477230",
    "end": "1483500"
  },
  {
    "text": "upload this image the next thing is to of course create a cluster to run this so you can run it on an existing",
    "start": "1483500",
    "end": "1490400"
  },
  {
    "text": "clusters if you want but I'm in this case I'm going to create a new cluster to run it right so select easy to",
    "start": "1490400",
    "end": "1499430"
  },
  {
    "text": "Windows or networking you can run Linux clusters but in this case I am running Windows based images give the cluster a",
    "start": "1499430",
    "end": "1506660"
  },
  {
    "text": "name so call it hello world Oh you can run on-demand instances or spot",
    "start": "1506660",
    "end": "1512870"
  },
  {
    "text": "instances it's up to you to select it you can select the size of the instance",
    "start": "1512870",
    "end": "1519140"
  },
  {
    "text": "you want to run so you are built only based on the c2 instance you are running you can change them later if you want so",
    "start": "1519140",
    "end": "1525770"
  },
  {
    "text": "behind the scene what happens it's it's create an auto scaling group with 4 in these these instances that you selected",
    "start": "1525770",
    "end": "1532730"
  },
  {
    "text": "you can select the storage the secret decree if you want to remote login into ec2 instances what network that you need",
    "start": "1532730",
    "end": "1539780"
  },
  {
    "text": "to drop these ec2 instances you can create a new V PC or you can use X's in one what security groups or ports that",
    "start": "1539780",
    "end": "1548060"
  },
  {
    "text": "need to be opened and what's the role that these issues will assume to invoke",
    "start": "1548060",
    "end": "1553130"
  },
  {
    "text": "UW services so you can define a one so that it can invoke certain AWS services",
    "start": "1553130",
    "end": "1558200"
  },
  {
    "text": "so click create so it spin up some cloud formation stack and then it create",
    "start": "1558200",
    "end": "1564640"
  },
  {
    "text": "certain resources so if you go to this cloud formation stack you can find that it's creating certain resources like",
    "start": "1564640",
    "end": "1571640"
  },
  {
    "text": "auto scaling group subnets V pcs so it's basic cloud formation running B",
    "start": "1571640",
    "end": "1577010"
  },
  {
    "text": "and the scene so it creates an auto scaling group so you remember that we",
    "start": "1577010",
    "end": "1583100"
  },
  {
    "text": "added four ec2 instance and sets the auto scaling group to have that four ec2 instances so behind the scene it uses",
    "start": "1583100",
    "end": "1590390"
  },
  {
    "text": "basically the obvious construct to create the cluster so if I go into my ec2 you can if you go into auto scaling",
    "start": "1590390",
    "end": "1598070"
  },
  {
    "start": "1593000",
    "end": "1614000"
  },
  {
    "text": "groups you can find that the cluster creation process has created a new auto",
    "start": "1598070",
    "end": "1604340"
  },
  {
    "text": "scaling group right with four ec2 instance that needs to be there so these",
    "start": "1604340",
    "end": "1609800"
  },
  {
    "text": "are typical auto scaling group you can change it if you like so if I go into my",
    "start": "1609800",
    "end": "1615470"
  },
  {
    "start": "1614000",
    "end": "1648000"
  },
  {
    "text": "task definition now while the cluster is being created I'm going to create a task",
    "start": "1615470",
    "end": "1620930"
  },
  {
    "text": "definition to define what contain instances that I want to run so create a",
    "start": "1620930",
    "end": "1626420"
  },
  {
    "text": "new task definition here's where I",
    "start": "1626420",
    "end": "1631820"
  },
  {
    "text": "define what is the location of my image give the name for this task definition if you want to give special permissions",
    "start": "1631820",
    "end": "1639830"
  },
  {
    "text": "for this you can assume a role in this task so what's the network you need to keep it default because Windows",
    "start": "1639830",
    "end": "1645800"
  },
  {
    "text": "containers only support default networking mode so here's where I add the container so you define the",
    "start": "1645800",
    "end": "1651800"
  },
  {
    "start": "1648000",
    "end": "1837000"
  },
  {
    "text": "container name and then you type the URL so this can be a docker hub URL or this",
    "start": "1651800",
    "end": "1657080"
  },
  {
    "text": "can be ECR URL so usually if it is a private repository you provide the Amazon ECR or recover URL so what",
    "start": "1657080",
    "end": "1667220"
  },
  {
    "text": "usually happens is you here you can define the latest one if you want and then of course you can define how much",
    "start": "1667220",
    "end": "1674360"
  },
  {
    "text": "memory is required for this task so in this case I'm going to provide something like 1 to 8 if you are running a website",
    "start": "1674360",
    "end": "1684440"
  },
  {
    "text": "you can also define port mappings so remember like in this website this is an",
    "start": "1684440",
    "end": "1690140"
  },
  {
    "text": "exe application so there's no any load balancing happening but I'll showcase you shortly like how to write or run a",
    "start": "1690140",
    "end": "1696470"
  },
  {
    "text": "website so I provide the memory that I want there's nothing port map in here because",
    "start": "1696470",
    "end": "1702890"
  },
  {
    "text": "it's not a iis or some other website that is running so just you can leave it blank",
    "start": "1702890",
    "end": "1709030"
  },
  {
    "text": "so imagine this is a batch application so and there are multiple parameters you",
    "start": "1709289",
    "end": "1715679"
  },
  {
    "text": "can specify here one of them is the CPU units so one virtual we CPU equivalent",
    "start": "1715679",
    "end": "1722900"
  },
  {
    "text": "2024 so if you want to allocate fraction of your CPU you define let's say two",
    "start": "1722900",
    "end": "1728549"
  },
  {
    "text": "five six so if you want to have half of each CPU define fight well so what I'm",
    "start": "1728549",
    "end": "1733950"
  },
  {
    "text": "going to do now is install allocating the full we CPU I'm allocating only a one-car 1/4 of it",
    "start": "1733950",
    "end": "1740279"
  },
  {
    "text": "so 25% of in CPU is 2 5 6 right because 1 we see please thousand 24 so and then",
    "start": "1740279",
    "end": "1748529"
  },
  {
    "text": "you I need to specify what's the command that I want to run when this contain is running so remember when we created this",
    "start": "1748529",
    "end": "1755970"
  },
  {
    "text": "image we put our exe application into a folder called C my app and my match",
    "start": "1755970",
    "end": "1765510"
  },
  {
    "text": "application dot exe right so this is relative to so this is you are referring",
    "start": "1765510",
    "end": "1771600"
  },
  {
    "text": "to exe application inside your container right it's nothing something inside the",
    "start": "1771600",
    "end": "1777299"
  },
  {
    "text": "container host but you are referring to an in exe application inside the container that you just specified using",
    "start": "1777299",
    "end": "1783720"
  },
  {
    "text": "the ECR URL so once I specify this exe",
    "start": "1783720",
    "end": "1789480"
  },
  {
    "text": "what will happen is when easiest starts this is going to start this application so by default you can define for when",
    "start": "1789480",
    "end": "1797220"
  },
  {
    "text": "when the container starts to run a default application but the way I have defined this contain Easter's there's no",
    "start": "1797220",
    "end": "1802679"
  },
  {
    "text": "default application that will start so I need to specify the command so you can of course specify things like the DNS",
    "start": "1802679",
    "end": "1808830"
  },
  {
    "text": "servers how we are going to resolve the host names you can also specify things",
    "start": "1808830",
    "end": "1815130"
  },
  {
    "text": "like the mount point so imagine that you have multiple containers that you want",
    "start": "1815130",
    "end": "1820169"
  },
  {
    "text": "to share a data volume you can also do that right so in this simple application",
    "start": "1820169",
    "end": "1825299"
  },
  {
    "text": "I don't want to share any data or like amount new data volumes I just do you",
    "start": "1825299",
    "end": "1832020"
  },
  {
    "text": "everything blank and just click Add so once you add this container so it's",
    "start": "1832020",
    "end": "1839820"
  },
  {
    "start": "1837000",
    "end": "1854000"
  },
  {
    "text": "now defined you can define add multiple containers for example if your application needs to have dependencies",
    "start": "1839820",
    "end": "1845280"
  },
  {
    "text": "you can add some dependent application you can define constraints like hey this HR application should not run on the",
    "start": "1845280",
    "end": "1850920"
  },
  {
    "text": "same application that human resource application is running so just click create and you created the task my",
    "start": "1850920",
    "end": "1857250"
  },
  {
    "start": "1854000",
    "end": "1866000"
  },
  {
    "text": "cluster HelloWorld cluster is ready so let's now run some tasks on this cluster",
    "start": "1857250",
    "end": "1864300"
  },
  {
    "text": "so how to do that select the cluster go to your task and then you can schedule a",
    "start": "1864300",
    "end": "1871170"
  },
  {
    "start": "1866000",
    "end": "1921000"
  },
  {
    "text": "task to run on this custom it's a very easy clear cron tasks so here I'm",
    "start": "1871170",
    "end": "1876180"
  },
  {
    "text": "running on your one time task if you want to schedule them there's a scheduler that you can set it up select",
    "start": "1876180",
    "end": "1882180"
  },
  {
    "text": "which version of the task so every time when you create a new task with the same name it creates a new version I have",
    "start": "1882180",
    "end": "1887760"
  },
  {
    "text": "only one version I want to run six of these tasks in balanced print manner so",
    "start": "1887760",
    "end": "1893370"
  },
  {
    "text": "if it is because let's say it's absorb the load so click run task when you",
    "start": "1893370",
    "end": "1900090"
  },
  {
    "text": "click run task what will happen is it will start like four running tasks behind the scene it's actually running",
    "start": "1900090",
    "end": "1905700"
  },
  {
    "text": "for container as four six containers so six tasks running six containers are",
    "start": "1905700",
    "end": "1911880"
  },
  {
    "text": "running on my cluster as of now they are in pending State after a while they will automatically start not that it takes",
    "start": "1911880",
    "end": "1918690"
  },
  {
    "text": "some time if you don't have that image to download it so you can find that some of the tasks or the containers have",
    "start": "1918690",
    "end": "1924510"
  },
  {
    "start": "1921000",
    "end": "2055000"
  },
  {
    "text": "already started three out of six has started so let's go into these tasks and",
    "start": "1924510",
    "end": "1931560"
  },
  {
    "text": "then see where they get scheduled so if I go into this task I can find which ec2",
    "start": "1931560",
    "end": "1938460"
  },
  {
    "text": "instance that they are running so behind the scene is actually running ec2 instances so you can have thousand tasks",
    "start": "1938460",
    "end": "1946230"
  },
  {
    "text": "running on one ec2 instance and depending on how you have defined your cluster so normally in production",
    "start": "1946230",
    "end": "1952110"
  },
  {
    "text": "environments you cannot remote login into this but remember when I created the cluster I define a secret key so",
    "start": "1952110",
    "end": "1959430"
  },
  {
    "text": "which means that I can now remote login if I want so imagine this is a test environment so what I'm going to do now",
    "start": "1959430",
    "end": "1965520"
  },
  {
    "text": "is to remote login into this easy - instance where are the containers get scary remember production environment we don't",
    "start": "1965520",
    "end": "1971820"
  },
  {
    "text": "do that but this is just to showcase you if you want if you define a key you can still log in into that and they are just",
    "start": "1971820",
    "end": "1978150"
  },
  {
    "text": "yet another Windows machines so I enable the RDP access I connect into that I",
    "start": "1978150",
    "end": "1983790"
  },
  {
    "text": "browse my I I have the access key for that so I can now login into this so I",
    "start": "1983790",
    "end": "1990270"
  },
  {
    "text": "just type the password you more desktop into that and once I dream or desktop",
    "start": "1990270",
    "end": "1996030"
  },
  {
    "text": "into that I'm going to open PowerShell so I open the PowerShell so I type host",
    "start": "1996030",
    "end": "2002090"
  },
  {
    "text": "name you can find as easy to instance name docker PS this is the container that ECS has scheduled on this ec2",
    "start": "2002090",
    "end": "2008419"
  },
  {
    "text": "instance so I can do some more detail into that pipe docker inspect type the",
    "start": "2008419",
    "end": "2014720"
  },
  {
    "text": "container name Phi ad II can specify some short number as long as in",
    "start": "2014720",
    "end": "2020809"
  },
  {
    "text": "distinguish to run in containers so you can find its run in my app of my batch a",
    "start": "2020809",
    "end": "2026240"
  },
  {
    "text": "PXE you can find information like to which cluster that it belongs to some",
    "start": "2026240",
    "end": "2032690"
  },
  {
    "text": "metadata about it of course if you want to check some more detail you can also",
    "start": "2032690",
    "end": "2038900"
  },
  {
    "text": "attach into this run in container so you can say doc attach and then type the",
    "start": "2038900",
    "end": "2043940"
  },
  {
    "text": "container ID to attach into this container so you am attaching into the container and like before you can find",
    "start": "2043940",
    "end": "2050898"
  },
  {
    "text": "that numbers appearing that showcase you that my application is running so this",
    "start": "2050899",
    "end": "2056330"
  },
  {
    "start": "2055000",
    "end": "2125000"
  },
  {
    "text": "is a task if you want to maintain some design state you create a service so",
    "start": "2056330",
    "end": "2062000"
  },
  {
    "text": "that's also you see you go to the service tab and then create a service so",
    "start": "2062000",
    "end": "2067608"
  },
  {
    "text": "service is something that you can maintain some decide number of containers always running right to do",
    "start": "2067609",
    "end": "2074990"
  },
  {
    "text": "that click create under service tab so which task that I want to run it as a service",
    "start": "2074990",
    "end": "2082010"
  },
  {
    "text": "so I'm going to select the same task that I created a moment ago give the",
    "start": "2082010",
    "end": "2088220"
  },
  {
    "text": "service a name and how many tasks that I want to run so this is what the in this",
    "start": "2088220",
    "end": "2093648"
  },
  {
    "text": "case I'm going to run for tasks you can specify whether you want to have load balancing this is exe application I",
    "start": "2093649",
    "end": "2100369"
  },
  {
    "text": "don't want to do load balance using application load balancer if you want Auto scale you can do that for",
    "start": "2100369",
    "end": "2106710"
  },
  {
    "text": "example based on cpu utilization or memory utilization you can auto scale but this is a simple configuration so",
    "start": "2106710",
    "end": "2114870"
  },
  {
    "text": "I'm not going to define I'm just going to keep everything by default do not scale click Next",
    "start": "2114870",
    "end": "2119970"
  },
  {
    "text": "so here I'm going to maintain four running containers create the task so if",
    "start": "2119970",
    "end": "2125250"
  },
  {
    "text": "I go into my service you can find a desired count is for running count is 0 so it's deviated from the current States",
    "start": "2125250",
    "end": "2132570"
  },
  {
    "text": "now it started two containers desired count is for pending count is two so two",
    "start": "2132570",
    "end": "2138330"
  },
  {
    "text": "containers are pending starting still not the healthy state so if you keep refreshing now you can find that it's a",
    "start": "2138330",
    "end": "2144180"
  },
  {
    "text": "healthy State I want to have four desired running containers and I have run in count is equal to four so it's in",
    "start": "2144180",
    "end": "2151800"
  },
  {
    "text": "healthy state now to stimulate a failure let's say ec2 instance crash or you",
    "start": "2151800",
    "end": "2157110"
  },
  {
    "text": "restart these machines due to maintenance some lightning striking the data center I'm going to stop these",
    "start": "2157110",
    "end": "2163460"
  },
  {
    "text": "containers you can for example stop the ec2 instance that is run in these containers so I'm going to stop two",
    "start": "2163460",
    "end": "2169520"
  },
  {
    "text": "containers running so I'm just manually doing this in this case so once I do",
    "start": "2169520",
    "end": "2175470"
  },
  {
    "text": "that what will happen is now the decide counters for running count is two if i",
    "start": "2175470",
    "end": "2181020"
  },
  {
    "text": "refresh it you can find that on your own encounter is too easy as will understand that there's a deviation from desired",
    "start": "2181020",
    "end": "2186660"
  },
  {
    "text": "state and you can automatically schedule some other containers to make it for so",
    "start": "2186660",
    "end": "2192780"
  },
  {
    "text": "it automatically started the few to two more containers and there in pending",
    "start": "2192780",
    "end": "2198120"
  },
  {
    "text": "keep refreshing and you will find that now it's in the healthy state decide count equal to the running count",
    "start": "2198120",
    "end": "2205700"
  },
  {
    "text": "let's now create a CI CD pipeline to deliver your software as containers so",
    "start": "2209929",
    "end": "2218759"
  },
  {
    "text": "that every time a developer commits some changes the build system will build that",
    "start": "2218759",
    "end": "2224309"
  },
  {
    "text": "software and in publish into Amazon Elastic content service so imagine you have a web application that is behind a",
    "start": "2224309",
    "end": "2233819"
  },
  {
    "text": "lot balancer and this Lord balancé balancé Lord between two containers you",
    "start": "2233819",
    "end": "2242400"
  },
  {
    "text": "have the container with the application version one running and this application",
    "start": "2242400",
    "end": "2248880"
  },
  {
    "text": "is backed by two running containers so whenever request comes the load balancer",
    "start": "2248880",
    "end": "2254999"
  },
  {
    "text": "direct this traffic to the version one of these containers so inevitably of",
    "start": "2254999",
    "end": "2260069"
  },
  {
    "text": "course you get a new feature request and imagine that there's a developer who",
    "start": "2260069",
    "end": "2266999"
  },
  {
    "text": "built this new feature so he's going to use Visual Studio going to create some",
    "start": "2266999",
    "end": "2273289"
  },
  {
    "text": "changes and once he make that changes depending on what kind of source control",
    "start": "2273289",
    "end": "2279539"
  },
  {
    "text": "system that they are using the developer is going to commit that changes into the",
    "start": "2279539",
    "end": "2284640"
  },
  {
    "text": "source control system so it could be something like big bucket or it could be something like Microsoft TFS or VSDs so",
    "start": "2284640",
    "end": "2294089"
  },
  {
    "text": "once the developer commits these changes into let's say Microsoft Team Foundation server or be shows to your team services",
    "start": "2294089",
    "end": "2301009"
  },
  {
    "text": "what will happen is there going to be a continuous integration system that will",
    "start": "2301009",
    "end": "2309299"
  },
  {
    "text": "build this software so in the case of Microsoft Team Foundation server it has its own continuous integration system in",
    "start": "2309299",
    "end": "2318299"
  },
  {
    "text": "the case of let's say if you use another build system like Jenkins or teamcity",
    "start": "2318299",
    "end": "2323549"
  },
  {
    "text": "you can still use that so what will happen is your changes will be picked up by your continuous integration system",
    "start": "2323549",
    "end": "2330329"
  },
  {
    "text": "and it will start building that to build that it's going to spin up built agent",
    "start": "2330329",
    "end": "2336289"
  },
  {
    "text": "so this built agent can be an ec2 instance",
    "start": "2336289",
    "end": "2341600"
  },
  {
    "text": "so if you are using teamcity you can add an easy-to instance with the proper",
    "start": "2341600",
    "end": "2347990"
  },
  {
    "text": "tools installed as a built agent if you are using Microsoft Team Foundation server or VSDs it comes with a built a",
    "start": "2347990",
    "end": "2357080"
  },
  {
    "text": "gern that you need to install in an ec2 instance if you are running the cloud",
    "start": "2357080",
    "end": "2362300"
  },
  {
    "text": "version of DFS which is which goes to a team services to grant authorization you",
    "start": "2362300",
    "end": "2370190"
  },
  {
    "text": "can create something called pet or personal access token and then",
    "start": "2370190",
    "end": "2375230"
  },
  {
    "text": "authenticate this build agent into your Team Foundation server or visual studio",
    "start": "2375230",
    "end": "2380270"
  },
  {
    "text": "team services so once this built agent has access into your team services or",
    "start": "2380270",
    "end": "2386750"
  },
  {
    "text": "Microsoft Team Foundation server whenever the the new change comes the",
    "start": "2386750",
    "end": "2393860"
  },
  {
    "text": "build agent will build this software of course the build agent has to have",
    "start": "2393860",
    "end": "2399530"
  },
  {
    "text": "certain application installed the obvious one is docker you need to have",
    "start": "2399530",
    "end": "2405260"
  },
  {
    "text": "if you are going to build Microsoft which was your base solution you need to",
    "start": "2405260",
    "end": "2411800"
  },
  {
    "text": "have MS build kind of tools installed and also if you are going to invoke AWS",
    "start": "2411800",
    "end": "2417080"
  },
  {
    "text": "services you need to have AWS PowerShell toolkit and AWS command line tool kits",
    "start": "2417080",
    "end": "2424010"
  },
  {
    "text": "install in this build agent to invoke certain AWS commands once the the built",
    "start": "2424010",
    "end": "2430850"
  },
  {
    "text": "agent builds the image the next thing it's going to do is to using docker commands publish that image into Amazon",
    "start": "2430850",
    "end": "2438230"
  },
  {
    "text": "Elastic container registry so you can publish it into your own private",
    "start": "2438230",
    "end": "2444470"
  },
  {
    "text": "repository or something like docker hub it's up to you and once it published",
    "start": "2444470",
    "end": "2450500"
  },
  {
    "text": "that image into MS and easy are it's going to invoke the orchestration engine",
    "start": "2450500",
    "end": "2456890"
  },
  {
    "text": "in our case it's going to be Amazon ECS or elastic container service to render",
    "start": "2456890",
    "end": "2462590"
  },
  {
    "text": "this image into its custom all our api's",
    "start": "2462590",
    "end": "2467930"
  },
  {
    "text": "are exposed in PowerShell so in this case I'm going to showcase you how to use PowerShell to tell",
    "start": "2467930",
    "end": "2474870"
  },
  {
    "text": "yes Hayes yes I have a new image with the new application version God and and",
    "start": "2474870",
    "end": "2480870"
  },
  {
    "text": "render this new image in your cluster we don't limit you from using Amazon UCS",
    "start": "2480870",
    "end": "2487470"
  },
  {
    "text": "like for example for Amazon in CR you can instead of using Amazon in CR you can use docker hub in the case of Amazon",
    "start": "2487470",
    "end": "2495510"
  },
  {
    "text": "easy as if you say you are going to render this image in your own",
    "start": "2495510",
    "end": "2502070"
  },
  {
    "text": "orchestration engine like kubernetes cluster or any other technology that you use you can still do that you can also",
    "start": "2502070",
    "end": "2508650"
  },
  {
    "text": "render this image in another cloud service provided if you want because at the end of the day what you have is a",
    "start": "2508650",
    "end": "2515160"
  },
  {
    "text": "docker image which can run on any any cluster there's no any dependency around",
    "start": "2515160",
    "end": "2523080"
  },
  {
    "text": "the technology you're using because it's jet another docker image",
    "start": "2523080",
    "end": "2528510"
  },
  {
    "text": "so once the ECS in once you invoke the easiest to render this image what will",
    "start": "2528510",
    "end": "2534180"
  },
  {
    "text": "happen is that easiest going to pick this image from ECR and then render it",
    "start": "2534180",
    "end": "2540150"
  },
  {
    "text": "as the version 2 of your application in its custom so it can take this image",
    "start": "2540150",
    "end": "2546030"
  },
  {
    "text": "from docker hub if you want but in this case we are using Amazon ECR so once it",
    "start": "2546030",
    "end": "2553020"
  },
  {
    "text": "renders the version 2 of your application it has to go the two",
    "start": "2553020",
    "end": "2558060"
  },
  {
    "text": "containers that I have here has to go through some health checks and once those health check passes the Lord",
    "start": "2558060",
    "end": "2563520"
  },
  {
    "text": "balancer is going to direct traffic use a traffic into version 2 and it's going to slowly be commissioned the version 1",
    "start": "2563520",
    "end": "2570450"
  },
  {
    "text": "of your containers so those containers will be stopped and your new traffic will be directed into the version 2 of",
    "start": "2570450",
    "end": "2577170"
  },
  {
    "text": "your containers so finally your users will have the new feature in their",
    "start": "2577170",
    "end": "2583050"
  },
  {
    "text": "website so let's see how I have created this CI CD pipeline and then explore how",
    "start": "2583050",
    "end": "2591360"
  },
  {
    "text": "I have built this pipeline using Microsoft TFS or Team Foundation service",
    "start": "2591360",
    "end": "2596420"
  },
  {
    "start": "2596000",
    "end": "2816000"
  },
  {
    "text": "so I'm in my TFS server which I have set up to build a website so name of the",
    "start": "2596420",
    "end": "2603240"
  },
  {
    "text": "website is called Lula pets so let's go into this build definition so if I go into Bill",
    "start": "2603240",
    "end": "2608760"
  },
  {
    "text": "and releases well have defined the build steps you can find that I have created a",
    "start": "2608760",
    "end": "2614760"
  },
  {
    "text": "new build definition called Loula pets asp.net with container CI so let's go into that here you can find that I have",
    "start": "2614760",
    "end": "2623250"
  },
  {
    "text": "already like create a few builds so let's edit this to see how I have defined the different build steps so of",
    "start": "2623250",
    "end": "2630840"
  },
  {
    "text": "course the first thing I do is I get the source control from here and then I get",
    "start": "2630840",
    "end": "2638070"
  },
  {
    "text": "the new cut packages and then build solution so these are like normal build steps that you can add so and then I'm",
    "start": "2638070",
    "end": "2645270"
  },
  {
    "text": "building the MS build solution I pass some parameters build a solution and",
    "start": "2645270",
    "end": "2651330"
  },
  {
    "text": "this is where I called publish to elastic condon registry so I invoke a",
    "start": "2651330",
    "end": "2657480"
  },
  {
    "text": "command to publish this image into ECR so it's a PowerShell command that I",
    "start": "2657480",
    "end": "2663390"
  },
  {
    "text": "added here so in any system you can add like different build commands if you like so we have like pre build actions",
    "start": "2663390",
    "end": "2671250"
  },
  {
    "text": "like AWS s3 upload we can archive them so this is a PowerShell task that I've added so here I'm doing like first I",
    "start": "2671250",
    "end": "2678810"
  },
  {
    "text": "logging in to easier this you can log in",
    "start": "2678810",
    "end": "2683910"
  },
  {
    "text": "because the built agent running this script has easier login permissions so",
    "start": "2683910",
    "end": "2690480"
  },
  {
    "text": "once it login completes of course it locks in behind the scene and then I'm",
    "start": "2690480",
    "end": "2695910"
  },
  {
    "text": "calling docker tag these are the commands that you find in your ECR that",
    "start": "2695910",
    "end": "2701850"
  },
  {
    "text": "I mean working in this step to tag this newly built image with the full URL of",
    "start": "2701850",
    "end": "2709380"
  },
  {
    "text": "ECR so this is how it end up the normal image that it builds Lulla dot latest",
    "start": "2709380",
    "end": "2715170"
  },
  {
    "text": "and then I tagged it with the ECR full URL to publish it then of course I",
    "start": "2715170",
    "end": "2722040"
  },
  {
    "text": "called octopus with the full URL of the ECR so once it published that image so",
    "start": "2722040",
    "end": "2729510"
  },
  {
    "text": "it once this build step is completed its go to the next step so in this case I'm invoking command line interface just to",
    "start": "2729510",
    "end": "2737220"
  },
  {
    "text": "showcase you that all of API is I exposed in command line as well so I'm going to say",
    "start": "2737220",
    "end": "2742619"
  },
  {
    "text": "yes go and update the service in this case the name of the cluster Colwyn 3",
    "start": "2742619",
    "end": "2747930"
  },
  {
    "text": "name of the service that I have created is called Lula website so this is the",
    "start": "2747930",
    "end": "2753359"
  },
  {
    "text": "creation of this service is similar to the way that you create a service that I've shown guys before I'm going to do a",
    "start": "2753359",
    "end": "2759180"
  },
  {
    "text": "force deployment and the region of course it's going to be in Australia health check grace period is about 80",
    "start": "2759180",
    "end": "2764999"
  },
  {
    "text": "seconds and decide count is going to be 2 so once I run this what will happen is the ECS is configured to take the latest",
    "start": "2764999",
    "end": "2774329"
  },
  {
    "text": "version from the ECR so once I do the update service and then set this one up",
    "start": "2774329",
    "end": "2780390"
  },
  {
    "text": "what will happen is the image is already updated what it'll do is it'll do a refresh and when it does the Refresh it",
    "start": "2780390",
    "end": "2786299"
  },
  {
    "text": "will take the latest version that way I publish so you can find the latest version so this is how I have come this",
    "start": "2786299",
    "end": "2792599"
  },
  {
    "text": "is the image that I'm using in my ECS so if I update the latest version to let us",
    "start": "2792599",
    "end": "2798660"
  },
  {
    "text": "build one and i refresh the easiest it's going to take this version the latest",
    "start": "2798660",
    "end": "2804990"
  },
  {
    "text": "version so what will happen is it will then render the new containers in the cluster so let's go and then make a",
    "start": "2804990",
    "end": "2812220"
  },
  {
    "text": "build and then see how this build steps are working here you can find out how I",
    "start": "2812220",
    "end": "2818670"
  },
  {
    "start": "2816000",
    "end": "2957000"
  },
  {
    "text": "have configured my build agent my built agent is an ec2 instance so I have a",
    "start": "2818670",
    "end": "2824670"
  },
  {
    "text": "built a Junt called 3d view TFS built the machine for container because I have",
    "start": "2824670",
    "end": "2830009"
  },
  {
    "text": "multiple built agents configured in the security groups I have enabled if I go into security",
    "start": "2830009",
    "end": "2836819"
  },
  {
    "text": "groups here build servers you can find that I have enable traffic now of course you should not enable it for Internet",
    "start": "2836819",
    "end": "2843269"
  },
  {
    "text": "you should set it up in a way that it allows you to take the base image either",
    "start": "2843269",
    "end": "2848700"
  },
  {
    "text": "from your private repository or from a public repository like docker hub but you need to go through some kind from",
    "start": "2848700",
    "end": "2854579"
  },
  {
    "text": "that gateway in this case I'm opening this all traffic from the Internet as an",
    "start": "2854579",
    "end": "2860579"
  },
  {
    "text": "inbound traffic so that I can download the base images when this built agent",
    "start": "2860579",
    "end": "2866670"
  },
  {
    "text": "start building the image so if you won't have some security control make sure that you enable traffic so that it can",
    "start": "2866670",
    "end": "2872849"
  },
  {
    "text": "access the public repository or your private rip that's number one number two is I am",
    "start": "2872849",
    "end": "2880170"
  },
  {
    "text": "role so I have define one called LF build server because this build machine",
    "start": "2880170",
    "end": "2885810"
  },
  {
    "text": "I use for multiple deployment I have enabled certain different access but what you really need to do is to",
    "start": "2885810",
    "end": "2892800"
  },
  {
    "text": "give write access to immerse an ECR so either if you can so in this case I have",
    "start": "2892800",
    "end": "2899730"
  },
  {
    "text": "defined Amazon ec2 container registry power-user which allows is to do multiple actions because it's not only",
    "start": "2899730",
    "end": "2906690"
  },
  {
    "text": "that I publish an image into ECR I tell ECS to refresh the container with the",
    "start": "2906690",
    "end": "2913230"
  },
  {
    "text": "new image that I publish so you need to give enough permissions for it to do it in this case I'm given more than the",
    "start": "2913230",
    "end": "2919590"
  },
  {
    "text": "access that I want to give it and also I use this built agent to do elastic Beanstalk deployment core deployed",
    "start": "2919590",
    "end": "2926010"
  },
  {
    "text": "deployment is three deployments on s3 based deployment so I have given multiple access but in your case make",
    "start": "2926010",
    "end": "2932670"
  },
  {
    "text": "sure that you give just enough permissions for that this built agent",
    "start": "2932670",
    "end": "2937770"
  },
  {
    "text": "has permissions to a write into e CR to write the new image B to refresh the",
    "start": "2937770",
    "end": "2945180"
  },
  {
    "text": "easiest so that it can you can tell Hays yes go and then refresh the image with",
    "start": "2945180",
    "end": "2951600"
  },
  {
    "text": "the latest image so that's the build agent configuration what have done was",
    "start": "2951600",
    "end": "2959090"
  },
  {
    "start": "2957000",
    "end": "3072000"
  },
  {
    "text": "registered this the built agent that I created with my build system so you can find I have different queues one for",
    "start": "2959090",
    "end": "2967080"
  },
  {
    "text": "containers one for other builds sorry under the container builds I have a machine called build machine for which I",
    "start": "2967080",
    "end": "2973710"
  },
  {
    "text": "registered with GFS the way I did it you can search it on MSDN I created",
    "start": "2973710",
    "end": "2979920"
  },
  {
    "text": "something called a pat token or personal access token to do that you go into your profile you should have of course TFS",
    "start": "2979920",
    "end": "2987030"
  },
  {
    "text": "administered you access go under security and if you go under security",
    "start": "2987030",
    "end": "2992960"
  },
  {
    "text": "you can create a pat token so I only have I created a token here TFS built",
    "start": "2992960",
    "end": "2999570"
  },
  {
    "text": "agent for container so this is the talkin that has been used in my ec2 instance so imagine that this is instead",
    "start": "2999570",
    "end": "3005930"
  },
  {
    "text": "of using TFS you are using STS or which was to your team services",
    "start": "3005930",
    "end": "3011970"
  },
  {
    "text": "which is the hosted version or the managed version of the foundation server",
    "start": "3011970",
    "end": "3017280"
  },
  {
    "text": "and you want to register one of AWS built machine against that registered",
    "start": "3017280",
    "end": "3023070"
  },
  {
    "text": "version what you need to do is to go to your VST S or in the case in this case it's DFS click add defined expiration",
    "start": "3023070",
    "end": "3031080"
  },
  {
    "text": "date may be 128 days my new can contain",
    "start": "3031080",
    "end": "3037710"
  },
  {
    "text": "built machine and you give this one and then you create a token so it creates",
    "start": "3037710",
    "end": "3044880"
  },
  {
    "text": "this token so of course I'm going to delete this but you can use this token now to register your built agent and",
    "start": "3044880",
    "end": "3054140"
  },
  {
    "text": "once you register your built agent your built agents will appear under your",
    "start": "3054140",
    "end": "3062750"
  },
  {
    "text": "agent pools so in this case I have already registered this bill agent as my",
    "start": "3062750",
    "end": "3068610"
  },
  {
    "text": "easy to instance as bm4 the best place to look how to configure the DFS",
    "start": "3068610",
    "end": "3075690"
  },
  {
    "start": "3072000",
    "end": "3156000"
  },
  {
    "text": "obviously agent is of course Microsoft documents if you go into this URL you",
    "start": "3075690",
    "end": "3081780"
  },
  {
    "text": "can find how to configure the agent for different operating system it talks",
    "start": "3081780",
    "end": "3087570"
  },
  {
    "text": "about the permissions how you are going to download things around which URL you",
    "start": "3087570",
    "end": "3094050"
  },
  {
    "text": "should use to connect depending on which kind which version of TFS you are using how to download and configure the agent",
    "start": "3094050",
    "end": "3100920"
  },
  {
    "text": "so you execute certain commands depending on whether you want to run your agent as a Windows service or as",
    "start": "3100920",
    "end": "3110660"
  },
  {
    "text": "like a batch file so all this information is given on Microsoft",
    "start": "3110660",
    "end": "3116880"
  },
  {
    "text": "documentation also the per how to create a personal access token or Pat token is",
    "start": "3116880",
    "end": "3122610"
  },
  {
    "text": "also very well described in Microsoft documentation so depending on your",
    "start": "3122610",
    "end": "3128910"
  },
  {
    "text": "platform if you use Jenkin or teamcity they will have different configurations",
    "start": "3128910",
    "end": "3134580"
  },
  {
    "text": "to configure the build agent but you need to refer to your continuous",
    "start": "3134580",
    "end": "3140040"
  },
  {
    "text": "integration system vacuum datian how to generate an authentication token or some other password",
    "start": "3140040",
    "end": "3146289"
  },
  {
    "text": "authentication technique to integrate with your agent that will build your",
    "start": "3146289",
    "end": "3154119"
  },
  {
    "text": "software so I have this sample web application called Loula pets so it",
    "start": "3154119",
    "end": "3161589"
  },
  {
    "text": "keeps track of the owner the name of the pet and how many steps that each pit ran",
    "start": "3161589",
    "end": "3167019"
  },
  {
    "text": "right so these are lazy pets like my cat in the flat they are not walking that",
    "start": "3167019",
    "end": "3172119"
  },
  {
    "text": "much right so if I go into info it shows you the content instance back in this",
    "start": "3172119",
    "end": "3178720"
  },
  {
    "text": "you can find that there are two container instance behind the load balancer every time when i refresh you",
    "start": "3178720",
    "end": "3185260"
  },
  {
    "text": "can find that the container ID changes because there are two containers back in",
    "start": "3185260",
    "end": "3190569"
  },
  {
    "text": "this so the application version is still version number one if you look at this",
    "start": "3190569",
    "end": "3197200"
  },
  {
    "text": "so these are the two containers that back in this is your instance so they",
    "start": "3197200",
    "end": "3202809"
  },
  {
    "text": "are running under two different pots right both are healthy and so this is my",
    "start": "3202809",
    "end": "3209289"
  },
  {
    "text": "cluster so if I go into my cluster you can find that there's two clusters windows and windows 3 I have a service",
    "start": "3209289",
    "end": "3217869"
  },
  {
    "text": "called doula pets so this is a service that I published before alright and so",
    "start": "3217869",
    "end": "3224970"
  },
  {
    "text": "now running count equal decide count the website is in good conditions if I go",
    "start": "3224970",
    "end": "3231369"
  },
  {
    "text": "into the deployments all right you can see the deployments that I have done",
    "start": "3231369",
    "end": "3237490"
  },
  {
    "text": "right so as of now there's a primary so there's no any deployment happening at the moment so they're in good condition",
    "start": "3237490",
    "end": "3243779"
  },
  {
    "text": "so application version is version number one right so let's try to make some",
    "start": "3243779",
    "end": "3251500"
  },
  {
    "text": "changes into this application and do a continuous delivery so I'm on my visual studio so this is the application right",
    "start": "3251500",
    "end": "3259140"
  },
  {
    "text": "so this is already integrated with TFS it could be VST s it could be your bit",
    "start": "3259140",
    "end": "3266140"
  },
  {
    "text": "bucket with teamcity or it could be jenkins or don't care alright so as of",
    "start": "3266140",
    "end": "3271480"
  },
  {
    "text": "now it's integrated so I'm going to change some right so I'm going to say application version to add a new feature so this is",
    "start": "3271480",
    "end": "3277430"
  },
  {
    "text": "sampling develop add in some new features so in this case I'm changing an HTML page so I can commit this so behind",
    "start": "3277430",
    "end": "3284780"
  },
  {
    "text": "the scene of course I used it so I make this changes so what I'm going to do is",
    "start": "3284780",
    "end": "3289880"
  },
  {
    "text": "to commit this right so my build system is configured to take any changes that",
    "start": "3289880",
    "end": "3296630"
  },
  {
    "text": "get committed recently and it will build the software all right so let's commit this so I'm going to say something like",
    "start": "3296630",
    "end": "3303380"
  },
  {
    "text": "version 2 I added new features so maybe",
    "start": "3303380",
    "end": "3309110"
  },
  {
    "text": "that this needs to go into a testing environment to do do load testing right so I click commit and push so that will",
    "start": "3309110",
    "end": "3315290"
  },
  {
    "text": "push these changes into TFS all right so",
    "start": "3315290",
    "end": "3320870"
  },
  {
    "text": "it could be a bit Parker - it could be JIT hub we don't know so behind the scene the build system has started and",
    "start": "3320870",
    "end": "3326570"
  },
  {
    "text": "you build it's running the build now so this is TFS you can see the commands it's executing so the PowerShell",
    "start": "3326570",
    "end": "3333290"
  },
  {
    "text": "commands so it's building that image getting look at packages building the",
    "start": "3333290",
    "end": "3340460"
  },
  {
    "text": "image so it has container support the build agent so it's going to create the",
    "start": "3340460",
    "end": "3345500"
  },
  {
    "text": "image then publish this image into the container and faucet or E its publishing only the layers it wants because it's",
    "start": "3345500",
    "end": "3352430"
  },
  {
    "text": "doing Delta loads it will publish image publication is super fast so now image is in the container",
    "start": "3352430",
    "end": "3359000"
  },
  {
    "text": "registry you can find that it started a new deployment into ECS right so primary",
    "start": "3359000",
    "end": "3365240"
  },
  {
    "text": "is still serving the request and the secondary started deploying alright so if there's a live environment the live",
    "start": "3365240",
    "end": "3371300"
  },
  {
    "text": "users will not see any difference because the Lord is still supported by the old version right so what will",
    "start": "3371300",
    "end": "3378200"
  },
  {
    "text": "happen you can find if you refresh the website is still the load balancing is directing the traffic to the old containers so after a while what will",
    "start": "3378200",
    "end": "3386630"
  },
  {
    "text": "happen is that these new containers will come alive or so running count of new content is equal to the side count so",
    "start": "3386630",
    "end": "3392330"
  },
  {
    "text": "then it needs to pass through some health checks so that's why the load balance is still haven't directed traffic to the new containers still",
    "start": "3392330",
    "end": "3398600"
  },
  {
    "text": "version 1 so if you go into the load balancer what will happen is the new containers will become healthy at some",
    "start": "3398600",
    "end": "3404720"
  },
  {
    "text": "point in time right so they are still in so all containers are one content is",
    "start": "3404720",
    "end": "3410090"
  },
  {
    "text": "drying so it's draining one is healthy so new containers are still in initial state so they need to pass through",
    "start": "3410090",
    "end": "3415700"
  },
  {
    "text": "health checks so once the health checks passes you can find that I guess one thing is already",
    "start": "3415700",
    "end": "3422830"
  },
  {
    "text": "passed the health check so if I go into my the URL and then refresh it of course",
    "start": "3422830",
    "end": "3429500"
  },
  {
    "text": "now it will direct into the new version you'll feel a slight delay because still",
    "start": "3429500",
    "end": "3435110"
  },
  {
    "text": "it needs to get the is up and running and after a while what will happen is",
    "start": "3435110",
    "end": "3440810"
  },
  {
    "text": "you will see the application version or whatever the changes that I've made appears here all right so just refresh",
    "start": "3440810",
    "end": "3449960"
  },
  {
    "text": "it LD so let me see still loading so is loading all the DLS so here you",
    "start": "3449960",
    "end": "3456140"
  },
  {
    "text": "have application version two with the new feature so that's how you can easily integrate your continuous build systems",
    "start": "3456140",
    "end": "3462560"
  },
  {
    "text": "with AWS hope you enjoy the session thank you",
    "start": "3462560",
    "end": "3469300"
  }
]