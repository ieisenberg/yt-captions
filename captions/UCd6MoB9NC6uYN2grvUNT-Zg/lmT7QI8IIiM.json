[
  {
    "start": "0",
    "end": "57000"
  },
  {
    "text": "like good morning everyone hear me fine in the back yes everyone oh wait",
    "start": "0",
    "end": "8730"
  },
  {
    "text": "still sleeping we good okay wanna see sure so my name is Aaron I worked for a",
    "start": "8730",
    "end": "16770"
  },
  {
    "text": "Qualcomm on the cloud team and today I'll be speaking with Bob about Qualcomm sisa Beanstalk excited to give you guys",
    "start": "16770",
    "end": "24090"
  },
  {
    "text": "some more information thank you and I'm Bob O'Dell I'm a principal product manager for elastic Beanstalk",
    "start": "24090",
    "end": "32340"
  },
  {
    "text": "and I guess just to get started for my sake of understanding is how many in the",
    "start": "32340",
    "end": "37829"
  },
  {
    "text": "room have used elastic Beanstalk today well not today but just up up till today",
    "start": "37829",
    "end": "45059"
  },
  {
    "text": "good point um so about half okay so hopefully everyone's in the right room and I appreciate everyone both coming to",
    "start": "45059",
    "end": "52649"
  },
  {
    "text": "reinvent as well as to the session here [Music] what I really want to try to cover in",
    "start": "52649",
    "end": "60449"
  },
  {
    "start": "57000",
    "end": "109000"
  },
  {
    "text": "the session is you know what we see is some of the challenges of web",
    "start": "60449",
    "end": "65489"
  },
  {
    "text": "application development but more importantly I want you to take away from",
    "start": "65489",
    "end": "71520"
  },
  {
    "text": "this really how easy it is to run a web application on AWS using an elastic Beanstalk once once we kind of get",
    "start": "71520",
    "end": "79650"
  },
  {
    "text": "through some of that I want to share some of the really core capabilities of Beanstalk and some of the more advanced",
    "start": "79650",
    "end": "85890"
  },
  {
    "text": "features behind it I want to show you how that can be easily integrated into a",
    "start": "85890",
    "end": "91829"
  },
  {
    "text": "CI CD type workflow and then Aaron is going to share a very advanced use case",
    "start": "91829",
    "end": "98909"
  },
  {
    "text": "of how Qualcomm took Beanstalk and integrated it into an application or a",
    "start": "98909",
    "end": "105329"
  },
  {
    "text": "platform of their own Before we jump in",
    "start": "105329",
    "end": "112200"
  },
  {
    "start": "109000",
    "end": "223000"
  },
  {
    "text": "though I'd really like to share kind of what we hear is an all too common scenario today so I'm sure a lot of you",
    "start": "112200",
    "end": "119880"
  },
  {
    "text": "have probably heard this is yeah as a developer as a manager or a leader",
    "start": "119880",
    "end": "126500"
  },
  {
    "text": "basically you get handed a task let's develop a new web or update or migrate an existing app",
    "start": "126500",
    "end": "133170"
  },
  {
    "text": "really to respond to customer needs and competitive pressures and there's always",
    "start": "133170",
    "end": "139560"
  },
  {
    "text": "a and make sure to list and usually that's composed of things like you know",
    "start": "139560",
    "end": "144930"
  },
  {
    "text": "let's do it yesterday we don't have a lot of time to do this we have to react very quickly by the way we don't have",
    "start": "144930",
    "end": "151110"
  },
  {
    "text": "any budget so we've got to do it very cheap you can't eliminate or you have to",
    "start": "151110",
    "end": "156900"
  },
  {
    "text": "try to eliminate as much downtime especially if it's migrating an existing app or updating an existing app and then",
    "start": "156900",
    "end": "163980"
  },
  {
    "text": "the one big gotcha is make sure you adhere to all of our company standards make sure it fits in with our compliance",
    "start": "163980",
    "end": "170310"
  },
  {
    "text": "and our governance and then by the way make sure you keep everything else that you're doing up and running and in most",
    "start": "170310",
    "end": "177239"
  },
  {
    "text": "cases what we hear is is the list of make sure to actually takes longer than the development itself so I was working",
    "start": "177239",
    "end": "184560"
  },
  {
    "text": "with a customer just the other week who said you know we had a project very similar to this it took us about five",
    "start": "184560",
    "end": "191790"
  },
  {
    "text": "weeks so just over two Sprint's of ours to basically develop this web app it",
    "start": "191790",
    "end": "197220"
  },
  {
    "text": "took us another six to eight weeks to get the equipment to get it rack to get",
    "start": "197220",
    "end": "202410"
  },
  {
    "text": "the security review to get all of the checklists done and then to actually get",
    "start": "202410",
    "end": "207870"
  },
  {
    "text": "it deployed and by the way it was highly overcapacity so on premise in the data",
    "start": "207870",
    "end": "214379"
  },
  {
    "text": "center it was built for more than what it needed to be getting launched so we",
    "start": "214379",
    "end": "219780"
  },
  {
    "text": "hear that often and we hear that a lot so some of the challenges that that that",
    "start": "219780",
    "end": "226440"
  },
  {
    "start": "223000",
    "end": "300000"
  },
  {
    "text": "scenario really represents is from a business perspective how can I do this",
    "start": "226440",
    "end": "233069"
  },
  {
    "text": "with limited resources and do this means things like load balancing operations",
    "start": "233069",
    "end": "238349"
  },
  {
    "text": "auto scaling updates how do i how do i create health dashboards in monitoring",
    "start": "238349",
    "end": "245780"
  },
  {
    "text": "how can i make sure all of these have best practices built in and meet some of",
    "start": "245780",
    "end": "251549"
  },
  {
    "text": "the standards that my company is set forth another business challenge that we",
    "start": "251549",
    "end": "257070"
  },
  {
    "text": "hear a lot about is is how can I accelerate innovation but also allow",
    "start": "257070",
    "end": "262469"
  },
  {
    "text": "developers to use run times in different technology stacks and from a business perspective is as",
    "start": "262469",
    "end": "269370"
  },
  {
    "text": "the number of run times increase so does the support and the security around",
    "start": "269370",
    "end": "274470"
  },
  {
    "text": "those and it becomes a critical factor at some point a third business challenge",
    "start": "274470",
    "end": "280770"
  },
  {
    "text": "that we hear quite often is how can we adopt a very systematic approach to CI CD and how can we make sure that both",
    "start": "280770",
    "end": "289409"
  },
  {
    "text": "from a licensing perspective from a maintenance perspective and from a",
    "start": "289409",
    "end": "294780"
  },
  {
    "text": "knowledge sharing perspective across teams that we're doing the right things",
    "start": "294780",
    "end": "300020"
  },
  {
    "start": "300000",
    "end": "353000"
  },
  {
    "text": "now the challenges from a developer perspective are a little different there",
    "start": "300020",
    "end": "306000"
  },
  {
    "text": "how can I quickly deploy and test my application and it's really about speed at that point and I want that speed",
    "start": "306000",
    "end": "313409"
  },
  {
    "text": "without having to learn a lot of new domain technology without having to learn how to basically build",
    "start": "313409",
    "end": "320520"
  },
  {
    "text": "infrastructure I just want to focus and develop code and then once I'm able to",
    "start": "320520",
    "end": "326819"
  },
  {
    "text": "do that I know that I have to meet some of those standards around governance and compliance so how can I create a very",
    "start": "326819",
    "end": "333090"
  },
  {
    "text": "simple but yet very robust CIC ICD kind of workflow that automates a lot of that",
    "start": "333090",
    "end": "340440"
  },
  {
    "text": "work for me all the way from testing to building into deployment to staging how",
    "start": "340440",
    "end": "346380"
  },
  {
    "text": "can I do that in a way that doesn't slow what I want to do in development down",
    "start": "346380",
    "end": "352430"
  },
  {
    "text": "and then when we look at this across both the business and the developer and",
    "start": "352430",
    "end": "359370"
  },
  {
    "start": "353000",
    "end": "395000"
  },
  {
    "text": "we look at this kind of challenge both from our customers as well as from Amazon's experience internally we see",
    "start": "359370",
    "end": "367229"
  },
  {
    "text": "kind of two common challenges come up and one is too much time is spent on",
    "start": "367229",
    "end": "372870"
  },
  {
    "text": "things that don't deliver value for us and the other is inevitably you always",
    "start": "372870",
    "end": "378449"
  },
  {
    "text": "have to integrate that existing application in with existing infrastructure or existing applications",
    "start": "378449",
    "end": "385349"
  },
  {
    "text": "whether that's authorization whether that's internal systems whether that's databases you always have to do that at",
    "start": "385349",
    "end": "392729"
  },
  {
    "text": "some point and so I'd love to talk to",
    "start": "392729",
    "end": "397770"
  },
  {
    "start": "395000",
    "end": "406000"
  },
  {
    "text": "you talk about next is really how can we run a web application on AWS and what",
    "start": "397770",
    "end": "404230"
  },
  {
    "text": "exactly does that mean so if we if we put aside the how do I get it on - aw",
    "start": "404230",
    "end": "411570"
  },
  {
    "text": "AWS and just look at the running aspect of an application we kind of break it down into three really kind of key areas",
    "start": "411570",
    "end": "418810"
  },
  {
    "text": "and that is how do i how do i basically select what my infrastructure is how do",
    "start": "418810",
    "end": "424780"
  },
  {
    "text": "i provision that infrastructure how do i configure it the way that i want to once",
    "start": "424780",
    "end": "430210"
  },
  {
    "text": "i do that then how do i deploy my code onto that infrastructure and then last",
    "start": "430210",
    "end": "435820"
  },
  {
    "text": "once i have my code deployed how do i ongoing manage and monitor that web",
    "start": "435820",
    "end": "442510"
  },
  {
    "text": "application now AWS itself has a lot of",
    "start": "442510",
    "end": "450270"
  },
  {
    "start": "445000",
    "end": "517000"
  },
  {
    "text": "existing services that really enable you to do that so if you look at our compute category for instance we've got ec2",
    "start": "450270",
    "end": "457780"
  },
  {
    "text": "we've got lambda we've got ECS eks and Fargate we've got services like",
    "start": "457780",
    "end": "464770"
  },
  {
    "text": "lightsail that help you basically have the compute power behind your applications storage with s3 and",
    "start": "464770",
    "end": "473170"
  },
  {
    "text": "database with RDS and Aurora networking we've got elastic load balancing and VP",
    "start": "473170",
    "end": "479950"
  },
  {
    "text": "C's and then management tools we've got a really robust set of management tools with auto scaling with cloud formation",
    "start": "479950",
    "end": "487180"
  },
  {
    "text": "and with Systems Manager and if you look at each of these services individually",
    "start": "487180",
    "end": "492400"
  },
  {
    "text": "they're very powerful services but if you also think about running an",
    "start": "492400",
    "end": "497980"
  },
  {
    "text": "application on AWS each of these services although very powerful leave it",
    "start": "497980",
    "end": "504730"
  },
  {
    "text": "up to you to learn how to use them and how to put them together in a way that you can run your application on and then",
    "start": "504730",
    "end": "511570"
  },
  {
    "text": "once it's there it really leaves the the configuration and the management up to you as well and that's what elastic",
    "start": "511570",
    "end": "519340"
  },
  {
    "start": "517000",
    "end": "578000"
  },
  {
    "text": "Beanstalk does for you elastic Beanstalk is is really the easiest way to get a web application up and running in",
    "start": "519340",
    "end": "526660"
  },
  {
    "text": "literally minutes no domain expertise no knowledge of all of the",
    "start": "526660",
    "end": "531850"
  },
  {
    "text": "Lyonne infrastructure but elastic beanstalk is really a managed service",
    "start": "531850",
    "end": "536920"
  },
  {
    "text": "that that automatically handles that infrastructure provisioning and configuration it handles the deployment",
    "start": "536920",
    "end": "544180"
  },
  {
    "text": "the load balancing and the auto scaling and then it handles the health monetary",
    "start": "544180",
    "end": "549639"
  },
  {
    "text": "not only during deployment but ongoing as well and then it even enables you so",
    "start": "549639",
    "end": "555100"
  },
  {
    "text": "if you do see something you can get into a very deep level of analysis and debugging and then you've got",
    "start": "555100",
    "end": "561069"
  },
  {
    "text": "centralized logging and the great thing about elastic beanstalk is the service",
    "start": "561069",
    "end": "566649"
  },
  {
    "text": "itself is completely free so there's no charge for elastic beanstalk you only",
    "start": "566649",
    "end": "571720"
  },
  {
    "text": "pay for the underlying resources that you consume through beanstalk so elastic",
    "start": "571720",
    "end": "580269"
  },
  {
    "text": "beanstalk today supports some of the most common kind of runtimes",
    "start": "580269",
    "end": "585880"
  },
  {
    "text": "as well as docker images and those runtimes are anything from dotnet dotnet",
    "start": "585880",
    "end": "592269"
  },
  {
    "text": "cored dotnet framework to PHP Java we",
    "start": "592269",
    "end": "597370"
  },
  {
    "text": "also support various application servers such as Tomcat Ruby Go node Python most",
    "start": "597370",
    "end": "605740"
  },
  {
    "text": "of the common languages are supported through Beanstalk today a lot of those",
    "start": "605740",
    "end": "611649"
  },
  {
    "text": "are built on Amazon Linux and if you have as a company of standardized on a",
    "start": "611649",
    "end": "616959"
  },
  {
    "text": "different flavor of Linux for example we also allow you to basically supply your",
    "start": "616959",
    "end": "624939"
  },
  {
    "text": "own custom platform or custom image so there's a lot of control that you have",
    "start": "624939",
    "end": "630130"
  },
  {
    "text": "over that infrastructure and a lot of ways that you can tailor that to really meet your developer's needs now what I'd",
    "start": "630130",
    "end": "639610"
  },
  {
    "text": "like to do is is really just show you how easy it is it's one thing to say it it's another thing to actually do it so",
    "start": "639610",
    "end": "646120"
  },
  {
    "text": "if we think back on on specifically the developer challenge how can I quickly deploy and test a web application and",
    "start": "646120",
    "end": "653500"
  },
  {
    "text": "with Beanstalk you could do that in one of three ways and I'm gonna highlight the command line that for me is actually",
    "start": "653500",
    "end": "660880"
  },
  {
    "text": "the simplest especially if I'm in working on an application and I'm in my IDE or I'm on my machine but you",
    "start": "660880",
    "end": "668360"
  },
  {
    "text": "could also do these same steps through the console or you could integrate it directly through the elastic Beanstalk",
    "start": "668360",
    "end": "674660"
  },
  {
    "text": "API but we'll go through a scenario here where I've got a I've got an application",
    "start": "674660",
    "end": "679990"
  },
  {
    "text": "it's actually a go application and I'm gonna do I'm gonna basically deploy that",
    "start": "679990",
    "end": "685070"
  },
  {
    "text": "application in three very simple steps and in fact it's actually two steps to deploy it and one step to commit a",
    "start": "685070",
    "end": "691160"
  },
  {
    "text": "change and using the command line those are EB in it EB create an EB deploy and really what",
    "start": "691160",
    "end": "699320"
  },
  {
    "text": "this requires is the prerequisite list is very small so what this demo requires",
    "start": "699320",
    "end": "705230"
  },
  {
    "text": "is one I've got an AWS account - I've got the the write permissions within my",
    "start": "705230",
    "end": "711680"
  },
  {
    "text": "account to be able to use elastic beanstalk and then three I've got the",
    "start": "711680",
    "end": "717110"
  },
  {
    "text": "AWS command line or I've got a confetti configuration file with my credentials",
    "start": "717110",
    "end": "723110"
  },
  {
    "text": "set up on my machine and that's really it and then elastic Beanstalk has its",
    "start": "723110",
    "end": "728660"
  },
  {
    "text": "own CEO I called EB CLI and you can get that from from our doc pages or base or",
    "start": "728660",
    "end": "735590"
  },
  {
    "text": "just from the downloads from Python ok",
    "start": "735590",
    "end": "742730"
  },
  {
    "start": "741000",
    "end": "1009000"
  },
  {
    "text": "let's jump in here so I've got my go application here very simple I'm a",
    "start": "742730",
    "end": "749690"
  },
  {
    "text": "product manager so I had to keep this very very simple basically it's just",
    "start": "749690",
    "end": "754760"
  },
  {
    "text": "putting it out to a web page so I can go locally I can see that hey I'm doing my",
    "start": "754760",
    "end": "759830"
  },
  {
    "text": "testing I'm doing my coding I can run it and you'll see it's just a very simple",
    "start": "759830",
    "end": "766810"
  },
  {
    "text": "sample web application so if I go to it on my local machine it's gonna come up",
    "start": "766810",
    "end": "773240"
  },
  {
    "text": "and show me congratulations I created my first go app so now how next step how do I deploy that to AWS",
    "start": "773240",
    "end": "782410"
  },
  {
    "text": "first thing I'll do is I'll use the the command line EB in it and this is an",
    "start": "782410",
    "end": "787910"
  },
  {
    "text": "interactive command line I could also script this but I wanted to show the interactive mode and the first thing",
    "start": "787910",
    "end": "793910"
  },
  {
    "text": "we'll do here is select a region second thing we'll do is we'll define what our applications name is that we",
    "start": "793910",
    "end": "801100"
  },
  {
    "text": "want to as we want to see it in elastic Beanstalk and I'll talk a little bit about that I select a platform next so",
    "start": "801100",
    "end": "808480"
  },
  {
    "text": "this is a go application and I then get to select which version of go I want I",
    "start": "808480",
    "end": "815560"
  },
  {
    "text": "want to run on my AWS infrastructure I",
    "start": "815560",
    "end": "823020"
  },
  {
    "text": "could choose to SSH into those instances once they're created I chose not to and",
    "start": "823020",
    "end": "830440"
  },
  {
    "text": "now what I want to do is I basically want to deploy my application and you do that through EB create which again is",
    "start": "830440",
    "end": "837310"
  },
  {
    "text": "going to walk through a couple very simple steps here's where I want to give",
    "start": "837310",
    "end": "842590"
  },
  {
    "text": "it an environment name and I'll share the difference between application and environment I can choose to give it a C",
    "start": "842590",
    "end": "850240"
  },
  {
    "text": "name if I want to use a custom C name what type of load balancer I want to use",
    "start": "850240",
    "end": "855340"
  },
  {
    "text": "and again these all have defaults built in so if you don't know it's very easy to just click through and then basically",
    "start": "855340",
    "end": "863970"
  },
  {
    "text": "we're creating the application on AWS now i fast-forwarded this a little bit",
    "start": "863970",
    "end": "869680"
  },
  {
    "text": "but if you're watching time stamps you'll see this entire process only took about three and a half minutes to",
    "start": "869680",
    "end": "875740"
  },
  {
    "text": "complete and typically that's what we see is deploying an application through Beanstalk especially in a development",
    "start": "875740",
    "end": "883360"
  },
  {
    "text": "kind of testing mode is usually between two to three minutes on average and now",
    "start": "883360",
    "end": "889540"
  },
  {
    "text": "I've got a fully running application in AWS on elastic beanstalk if I go to the",
    "start": "889540",
    "end": "896590"
  },
  {
    "text": "elastic beanstalk council you can actually see there's my web application and there's my dev environment that I",
    "start": "896590",
    "end": "903160"
  },
  {
    "text": "created to run that application in so what happens if I want to make a code",
    "start": "903160",
    "end": "909580"
  },
  {
    "text": "change how easy is that then to go back into basically to deploy that into AWS",
    "start": "909580",
    "end": "916600"
  },
  {
    "text": "into the into the application that I just created and here I wanted to change the background color so I can go ahead",
    "start": "916600",
    "end": "923650"
  },
  {
    "text": "and go go to my code make that change locally",
    "start": "923650",
    "end": "928740"
  },
  {
    "text": "and to deploy that it's basically again one command line its EB deploy now",
    "start": "931190",
    "end": "939570"
  },
  {
    "text": "because my infrastructure is already created my application is already up and running this step usually is anywhere",
    "start": "939570",
    "end": "946740"
  },
  {
    "text": "between thirty to sixty seconds so this is a very very fast update to do I can",
    "start": "946740",
    "end": "953400"
  },
  {
    "text": "go back and refresh and I can see that that change has now been deployed to my application on AWS and if I dig in",
    "start": "953400",
    "end": "961620"
  },
  {
    "text": "further to that development environment in Beanstalk and I look at what that looks like you can actually see it shows",
    "start": "961620",
    "end": "967800"
  },
  {
    "text": "you the event history there so you can see with with this particular one I initially deployed it and then I",
    "start": "967800",
    "end": "974160"
  },
  {
    "text": "deployed a new version to those instances that were up and running so you've got a full audit trail in a full",
    "start": "974160",
    "end": "980190"
  },
  {
    "text": "history behind that that again we'll talk a little bit more about so very",
    "start": "980190",
    "end": "985920"
  },
  {
    "text": "very simple to do and again I could have done these same things by packaging my code up and you know deploying it",
    "start": "985920",
    "end": "992730"
  },
  {
    "text": "through the council or I could have used an API if I had a workflow that I wanted to already integrate that in but very",
    "start": "992730",
    "end": "1000140"
  },
  {
    "text": "very simple to do and I didn't have to know anything about any of the underlying infrastructure that my",
    "start": "1000140",
    "end": "1006260"
  },
  {
    "text": "application is running on so if we look at what really just happened kind of",
    "start": "1006260",
    "end": "1012620"
  },
  {
    "start": "1009000",
    "end": "1064000"
  },
  {
    "text": "behind the scenes as we'll see that Beanstalk provisioned all of the infrastructure required including the",
    "start": "1012620",
    "end": "1018770"
  },
  {
    "text": "ec2 instances the security groups that work between the resources the load",
    "start": "1018770",
    "end": "1025640"
  },
  {
    "text": "balancer and in this case I chose a application load balancer and then all",
    "start": "1025640",
    "end": "1030740"
  },
  {
    "text": "of my auto scaling groups and more importantly we manage the health behind",
    "start": "1030740",
    "end": "1036140"
  },
  {
    "text": "that so we set best practices we set defaults we know into Auto scale based on a number of metrics around CPU around",
    "start": "1036140",
    "end": "1045230"
  },
  {
    "text": "memory around latency we do all of that work for you without you having to create some of those metrics yourself we",
    "start": "1045230",
    "end": "1053300"
  },
  {
    "text": "configured it with an amazon route 53 unique domain that you actually could",
    "start": "1053300",
    "end": "1058520"
  },
  {
    "text": "define but then you can map to that for your own custom I mean on top of it and then once that",
    "start": "1058520",
    "end": "1065930"
  },
  {
    "text": "infrastructure was there we basically took the operating system we took the",
    "start": "1065930",
    "end": "1071420"
  },
  {
    "text": "runtime that you supplied we took the application or a web server that was part of that platform and we put your",
    "start": "1071420",
    "end": "1078710"
  },
  {
    "text": "coat on top of that and then we safely deployed that onto that running infrastructure now if you would have",
    "start": "1078710",
    "end": "1086480"
  },
  {
    "text": "created this as let's say for instance a docker container of course you then",
    "start": "1086480",
    "end": "1092450"
  },
  {
    "text": "would have done the the the runtime the application server and packaged it up",
    "start": "1092450",
    "end": "1097490"
  },
  {
    "text": "but exact same process we would have deployed that on top of either ec2 or ECS directly for you you basically just",
    "start": "1097490",
    "end": "1105530"
  },
  {
    "text": "give us your image will read it through the docker file and we'll do the deploy so very very similar mechanism but works",
    "start": "1105530",
    "end": "1112970"
  },
  {
    "text": "both ways so if we jump into some of the",
    "start": "1112970",
    "end": "1118250"
  },
  {
    "text": "kind of core capabilities of elastic beanstalk itself and and some of the concepts that we just talked about one",
    "start": "1118250",
    "end": "1126350"
  },
  {
    "start": "1125000",
    "end": "1252000"
  },
  {
    "text": "of the first things that I really wanted to to share is is a concept of applications and environments and this",
    "start": "1126350",
    "end": "1132410"
  },
  {
    "text": "becomes really important when you think about staging so an application can",
    "start": "1132410",
    "end": "1138200"
  },
  {
    "text": "contain multiple environment so if you think back to our go sample we created",
    "start": "1138200",
    "end": "1143900"
  },
  {
    "text": "an application called go web application and then within that we created an",
    "start": "1143900",
    "end": "1149060"
  },
  {
    "text": "environment called dev environment I could also create an environment called",
    "start": "1149060",
    "end": "1154520"
  },
  {
    "text": "staging and I could create an environment further called production and all of those reside within kind of",
    "start": "1154520",
    "end": "1160700"
  },
  {
    "text": "the logical web application application that I created so when you deploy your",
    "start": "1160700",
    "end": "1167690"
  },
  {
    "text": "code you actually deploy it directly to an environment and what this allows us to do is really match different",
    "start": "1167690",
    "end": "1174470"
  },
  {
    "text": "deployment types with different configurations so for instance I may have a dev environment where I'm really",
    "start": "1174470",
    "end": "1180260"
  },
  {
    "text": "my my core concern is I want it I want to test I want to get it speed is important I want to deploy my",
    "start": "1180260",
    "end": "1187100"
  },
  {
    "text": "application I want to see it quickly and then I want to be able to do some testing behind it so there you may only need a single",
    "start": "1187100",
    "end": "1193910"
  },
  {
    "text": "instance sir a small instance type and you may want a deployment methodology that's very quick",
    "start": "1193910",
    "end": "1200620"
  },
  {
    "text": "but yet in my production environment I don't want those same characteristics",
    "start": "1200620",
    "end": "1207230"
  },
  {
    "text": "I want to be able to have that a very safe deployment I want it to be very high availability",
    "start": "1207230",
    "end": "1213200"
  },
  {
    "text": "I wanted to basically make sure that I'd minimize any downtime or risk to a running application when I do a",
    "start": "1213200",
    "end": "1219470"
  },
  {
    "text": "deployment so that's how elastic Beanstalk allows you to do that is to the concept of applications in",
    "start": "1219470",
    "end": "1226640"
  },
  {
    "text": "environments we support two type of environments so you can deploy a single",
    "start": "1226640",
    "end": "1232190"
  },
  {
    "text": "instance or you can deploy it in high availability and again that may be a case where a dev stage versus production",
    "start": "1232190",
    "end": "1239390"
  },
  {
    "text": "stage and then your deployment and health notifications you can receive those through Amazon SNS or cloud watch",
    "start": "1239390",
    "end": "1248030"
  },
  {
    "text": "log streaming as well so today elastic",
    "start": "1248030",
    "end": "1254510"
  },
  {
    "start": "1252000",
    "end": "1379000"
  },
  {
    "text": "Beanstalk has support for both ec2 and ECS so you can deploy directly to an ec2",
    "start": "1254510",
    "end": "1260840"
  },
  {
    "text": "instance or you can provide basically a docker image and run it either as a",
    "start": "1260840",
    "end": "1267740"
  },
  {
    "text": "single image instance or a multi container deployment we've got a wide",
    "start": "1267740",
    "end": "1274340"
  },
  {
    "text": "selection of ec2 instance types so you can choose everything through micros up",
    "start": "1274340",
    "end": "1280460"
  },
  {
    "text": "into really large you know GPUs say p3s for instance and then we support all",
    "start": "1280460",
    "end": "1287000"
  },
  {
    "text": "three load balancer types an important aspect unlike maybe a traditional paths",
    "start": "1287000",
    "end": "1293750"
  },
  {
    "text": "is you own all of the resources underlying this so when we create and",
    "start": "1293750",
    "end": "1298850"
  },
  {
    "text": "provision those we do that within your AWS account which also gives you a very",
    "start": "1298850",
    "end": "1304700"
  },
  {
    "text": "high level of control behind that and in order to interact with those resources we provided a mechanism called the EB",
    "start": "1304700",
    "end": "1313010"
  },
  {
    "text": "extensions which are basically just a set of configuration files but with an EB extension you really and you can find",
    "start": "1313010",
    "end": "1320360"
  },
  {
    "text": "these on github if you go to the AWS elastic beanstalk samples you'll see a",
    "start": "1320360",
    "end": "1326660"
  },
  {
    "text": "lot of e Extension samples out there and think of",
    "start": "1326660",
    "end": "1331980"
  },
  {
    "text": "them as things where I could I could basically configure my instances to work with WebSockets so if I didn't want to",
    "start": "1331980",
    "end": "1338700"
  },
  {
    "text": "you know do a standard web server I wanted a WebSocket type of implementation I could use an EB",
    "start": "1338700",
    "end": "1345120"
  },
  {
    "text": "extension to enable that and I could do it through manage it managing it as code",
    "start": "1345120",
    "end": "1350990"
  },
  {
    "text": "now a tip without is I would always recommend deploying an EB extension kind",
    "start": "1350990",
    "end": "1356610"
  },
  {
    "text": "of testing in a new environment because if you don't get those quite right you do own those instances and you could you",
    "start": "1356610",
    "end": "1363360"
  },
  {
    "text": "could you could really mess it up and disable it so test it first and then deploy it as part of your code package",
    "start": "1363360",
    "end": "1369540"
  },
  {
    "text": "but you've got full control over all of the underlying resources and can tweak",
    "start": "1369540",
    "end": "1375270"
  },
  {
    "text": "those as much as you need to the other",
    "start": "1375270",
    "end": "1381180"
  },
  {
    "start": "1379000",
    "end": "1471000"
  },
  {
    "text": "thing that Beanstalk provides because of the way we manage applications and",
    "start": "1381180",
    "end": "1386190"
  },
  {
    "text": "environments is we also manage outside of code what we call application versions so every time you do a",
    "start": "1386190",
    "end": "1393540"
  },
  {
    "text": "deployment you create a unique application version in the years these are stored within your Amazon s3",
    "start": "1393540",
    "end": "1400260"
  },
  {
    "text": "accounts as very unique deployments and if you think about there's a couple use",
    "start": "1400260",
    "end": "1406200"
  },
  {
    "text": "cases of what this allows you to do is so for instance if you've got a small team everybody's committing code changes",
    "start": "1406200",
    "end": "1412860"
  },
  {
    "text": "you do a deployment to Beanstalk and something's not working instead of",
    "start": "1412860",
    "end": "1418370"
  },
  {
    "text": "basically extending any potential impact or downtime associated with that you",
    "start": "1418370",
    "end": "1424560"
  },
  {
    "text": "could instantly roll back to the last known working version through an elastic Beanstalk application version you didn't",
    "start": "1424560",
    "end": "1431940"
  },
  {
    "text": "have to change any change anything on your source code you have time to figure",
    "start": "1431940",
    "end": "1436950"
  },
  {
    "text": "it out but yet your application can be reverted back to to a last known good state the other thing that application",
    "start": "1436950",
    "end": "1444570"
  },
  {
    "text": "versions really allow you to do is if you want to do promotion so if I if I'm testing in my development environment",
    "start": "1444570",
    "end": "1451650"
  },
  {
    "text": "and I it passed all of my tests and I want to then move that same version that",
    "start": "1451650",
    "end": "1456780"
  },
  {
    "text": "exists to a staging environment I could do that through an application version",
    "start": "1456780",
    "end": "1461920"
  },
  {
    "text": "very easy to select what version you want to be running on each of the environments within kind of your",
    "start": "1461920",
    "end": "1467650"
  },
  {
    "text": "application structure one of the other",
    "start": "1467650",
    "end": "1473290"
  },
  {
    "start": "1471000",
    "end": "1570000"
  },
  {
    "text": "really big benefits of elastic Beanstalk is health monitoring and health monitoring is done both through",
    "start": "1473290",
    "end": "1480100"
  },
  {
    "text": "deployments as well as through ongoing and and what health monitoring is is it",
    "start": "1480100",
    "end": "1485830"
  },
  {
    "text": "really consists of checks around your load balancer around your resource",
    "start": "1485830",
    "end": "1492460"
  },
  {
    "text": "metrics around your OS metrics as well as your web server or application server",
    "start": "1492460",
    "end": "1498700"
  },
  {
    "text": "logs so again instead of you having to do that yourself and set those up and",
    "start": "1498700",
    "end": "1505030"
  },
  {
    "text": "define those and gather those elastic Beanstalk does that for you and we make",
    "start": "1505030",
    "end": "1510220"
  },
  {
    "text": "determinations based on those different kind of gathered resources on what the",
    "start": "1510220",
    "end": "1517060"
  },
  {
    "text": "state of your application is so we've got various states ranging all the way from okay to unknown all the way to",
    "start": "1517060",
    "end": "1526810"
  },
  {
    "text": "degraded or severe and it's based off of all of those metrics that we gather we",
    "start": "1526810",
    "end": "1532630"
  },
  {
    "text": "also enable you to eat we give you the capability to easily enable x-ray so",
    "start": "1532630",
    "end": "1538870"
  },
  {
    "text": "with x-ray you can do traces you can do debugging you can really get to a",
    "start": "1538870",
    "end": "1544300"
  },
  {
    "text": "granular granular level of where an issue may reside and these are all",
    "start": "1544300",
    "end": "1550000"
  },
  {
    "text": "visible through the console and the elastic Beanstalk console we have a health overview as well as through cloud",
    "start": "1550000",
    "end": "1557440"
  },
  {
    "text": "watch logs and then you could also use the CLI or API for easy integration of",
    "start": "1557440",
    "end": "1563110"
  },
  {
    "text": "these health metrics and monitoring into an existing system or workflow that you have elastic Beanstalk also has a very",
    "start": "1563110",
    "end": "1575050"
  },
  {
    "start": "1570000",
    "end": "1681000"
  },
  {
    "text": "focused security and compliance aspect to it so one of the things that we",
    "start": "1575050",
    "end": "1581980"
  },
  {
    "text": "provide is what we call managed updates and managed updates could be both patch",
    "start": "1581980",
    "end": "1588040"
  },
  {
    "text": "versions as well as minor versions so for instance in my NGO application I may",
    "start": "1588040",
    "end": "1593680"
  },
  {
    "text": "want to have that ethically patched for any of the underlying OS patches that come out or I",
    "start": "1593680",
    "end": "1600370"
  },
  {
    "text": "may want that automatically upgraded to any minor versions of go that that are",
    "start": "1600370",
    "end": "1606730"
  },
  {
    "text": "available an elastic Beanstalk will do that in a very visible way for you and if we detect that your application",
    "start": "1606730",
    "end": "1613240"
  },
  {
    "text": "doesn't work with us we'll automatically roll that back so we won't ever leave the application in a degraded State and",
    "start": "1613240",
    "end": "1621010"
  },
  {
    "text": "we'll notify you that your application wasn't able to be upgraded so that you can then further troubleshoot why we",
    "start": "1621010",
    "end": "1628390"
  },
  {
    "text": "also integrate directly with with I am for instance profiles as well as service",
    "start": "1628390",
    "end": "1634960"
  },
  {
    "text": "roles so again because you own the resources you have a very high level of control of who can access those what",
    "start": "1634960",
    "end": "1641740"
  },
  {
    "text": "what other resources the Beanstalk resources that were created can access and you can do that through very common",
    "start": "1641740",
    "end": "1648970"
  },
  {
    "text": "ways with with I am today and then everything is is auditable so we",
    "start": "1648970",
    "end": "1654850"
  },
  {
    "text": "integrate directly with cloud trail you can see who's making changes what's occurring to your applications and your",
    "start": "1654850",
    "end": "1660520"
  },
  {
    "text": "environments what Beanstalk commands are being run and by whom and then we also",
    "start": "1660520",
    "end": "1665559"
  },
  {
    "text": "integrate with config so if you have a company standard around what an application could look like you could",
    "start": "1665559",
    "end": "1673059"
  },
  {
    "text": "set that up and config and instantly be notified when something steps outside of those bounds so one of the other",
    "start": "1673059",
    "end": "1683500"
  },
  {
    "start": "1681000",
    "end": "1714000"
  },
  {
    "text": "challenges that we talked about at the start was really how do I extend to a CI",
    "start": "1683500",
    "end": "1689080"
  },
  {
    "text": "CD kind of DevOps workflow and the way",
    "start": "1689080",
    "end": "1694090"
  },
  {
    "text": "that we can do that there's multiple ways but one of the easiest ways we can do that with elastic Beanstalk is by",
    "start": "1694090",
    "end": "1701080"
  },
  {
    "text": "integration with our code suite services and our code suite services are things",
    "start": "1701080",
    "end": "1707260"
  },
  {
    "text": "like AWS code commit code pipeline in code build that have native integrations",
    "start": "1707260",
    "end": "1712750"
  },
  {
    "text": "with elastic Beanstalk if we look at each one of those in each of these are",
    "start": "1712750",
    "end": "1717910"
  },
  {
    "start": "1714000",
    "end": "1761000"
  },
  {
    "text": "actually a reinvent topic in themselves but just at a very high level code",
    "start": "1717910",
    "end": "1723309"
  },
  {
    "text": "commit as a fully managed get service so if you're if you're used to push",
    "start": "1723309",
    "end": "1728860"
  },
  {
    "text": "into github or another get service very this will be very very familiar for you",
    "start": "1728860",
    "end": "1735490"
  },
  {
    "text": "and directly integrated with elastic Beanstalk code build is a fully managed build",
    "start": "1735490",
    "end": "1741130"
  },
  {
    "text": "service for compiling source code for running unit testing and basically for",
    "start": "1741130",
    "end": "1747340"
  },
  {
    "text": "producing software packages that can then be deployed through AWS code pipeline and that's a continuous",
    "start": "1747340",
    "end": "1754540"
  },
  {
    "text": "deployment service for basically really fast and reliable updates now the great",
    "start": "1754540",
    "end": "1762340"
  },
  {
    "start": "1761000",
    "end": "1815000"
  },
  {
    "text": "thing about AWS services is their plug-and-play so another challenge is I've already got some existing",
    "start": "1762340",
    "end": "1768940"
  },
  {
    "text": "infrastructure around DevOps or CI CD and how can i leverage that these really",
    "start": "1768940",
    "end": "1774970"
  },
  {
    "text": "are interchangeable so elastic Beanstalk could work just as easy with the code",
    "start": "1774970",
    "end": "1780490"
  },
  {
    "text": "suite services on the previous slide as they could with existing technologies",
    "start": "1780490",
    "end": "1785830"
  },
  {
    "text": "that you may have today so if you've got a github repo whether that's calm or an",
    "start": "1785830",
    "end": "1791440"
  },
  {
    "text": "enterprise if you're using Jenkins as your pipeline you could still use something like the code build plug-in to",
    "start": "1791440",
    "end": "1798400"
  },
  {
    "text": "Jenkins and deploy directly into an elastic Beanstalk environment so",
    "start": "1798400",
    "end": "1803530"
  },
  {
    "text": "regardless of what type of toolchain deployment tool chain you have you can still leverage the operational and",
    "start": "1803530",
    "end": "1810160"
  },
  {
    "text": "ongoing management strengths of elastic Beanstalk itself and then finally for",
    "start": "1810160",
    "end": "1817540"
  },
  {
    "start": "1815000",
    "end": "1877000"
  },
  {
    "text": "customers that want to even take that a step further whether you're a customer",
    "start": "1817540",
    "end": "1823059"
  },
  {
    "text": "or your partner and you want a deeper level of integration all of these services can be consumed through a set",
    "start": "1823059",
    "end": "1830740"
  },
  {
    "text": "of public API so everything that we work with from code commit to code build to",
    "start": "1830740",
    "end": "1837220"
  },
  {
    "text": "Code pipeline they're using the exact same elastic Beanstalk api's that are available for you today and what this",
    "start": "1837220",
    "end": "1844090"
  },
  {
    "text": "what this really allows is customers and partners to build their own application",
    "start": "1844090",
    "end": "1849730"
  },
  {
    "text": "platforms on top of Beanstalk that still really leverage the experience of the",
    "start": "1849730",
    "end": "1855280"
  },
  {
    "text": "scale and the brett's of services provided by AWS and the second part of",
    "start": "1855280",
    "end": "1860710"
  },
  {
    "text": "this talk Aaron's going to provide for us as a customer in Qualcomm that did exactly",
    "start": "1860710",
    "end": "1866800"
  },
  {
    "text": "that they took a very advanced use case and basically built it out on top of the",
    "start": "1866800",
    "end": "1872200"
  },
  {
    "text": "Beanstalk api's okay thanks Bob so who",
    "start": "1872200",
    "end": "1878380"
  },
  {
    "start": "1877000",
    "end": "1893000"
  },
  {
    "text": "or what is Qualcomm for who aren't familiar we're the number one fabless semiconductor company number one in 3g",
    "start": "1878380",
    "end": "1884080"
  },
  {
    "text": "and 4g more didn't excuse-me modem technology now developing 5g so we're helping innovate and the wireless and",
    "start": "1884080",
    "end": "1890230"
  },
  {
    "text": "now the IOT space and so kind of why did",
    "start": "1890230",
    "end": "1895570"
  },
  {
    "start": "1893000",
    "end": "1963000"
  },
  {
    "text": "Paul Kyle make the decision to go to cloud so for those who aren't familiar welcome is basically a very large",
    "start": "1895570",
    "end": "1900970"
  },
  {
    "text": "engineering company and so what we do have an idea presence that's a small portion of it but basically we reach a",
    "start": "1900970",
    "end": "1906940"
  },
  {
    "text": "certain point where you can't just continue to buy and buy millions and dollars of hardware and continue to grow",
    "start": "1906940",
    "end": "1912130"
  },
  {
    "text": "so how do we begin to scale so we wanted to look at things how do we look at taking advantage of the breadth of",
    "start": "1912130",
    "end": "1917200"
  },
  {
    "text": "services that we weren't able to previously how do we look at things where instead of having to have huge upfront capex models how do we do things",
    "start": "1917200",
    "end": "1923830"
  },
  {
    "text": "that our utility based where as we use things we get charged for it and when we decide we're done with it or it's a proof of concept we just turned it off",
    "start": "1923830",
    "end": "1930400"
  },
  {
    "text": "and there's no more cost to be incurred for that so those were very large",
    "start": "1930400",
    "end": "1935680"
  },
  {
    "text": "reasons for us a lot of the managed services that A to B s had on even early on a few years ago when we began our",
    "start": "1935680",
    "end": "1941770"
  },
  {
    "text": "journey for the cloud meant that instead of having to manually stand up these services and maintain the software and the configurations a lot of those things",
    "start": "1941770",
    "end": "1948430"
  },
  {
    "text": "were made significantly easier by Amazon and lastly it gave us a really quick time-to-market",
    "start": "1948430",
    "end": "1953680"
  },
  {
    "text": "so again instead of having to do hardware purchases procurement a lot of these things that take up time you need",
    "start": "1953680",
    "end": "1960130"
  },
  {
    "text": "something in the cloud click a button and it's there so why AWS like I",
    "start": "1960130",
    "end": "1965740"
  },
  {
    "start": "1963000",
    "end": "2014000"
  },
  {
    "text": "mentioned the breadth of services and capabilities and obviously is you've all been watching this week and I don't know they probably had 30 announcements since",
    "start": "1965740",
    "end": "1971800"
  },
  {
    "text": "we got here well some of us got here Monday I mean they just continue to innovate quickly so it's really great",
    "start": "1971800",
    "end": "1977980"
  },
  {
    "text": "for people who are looking to continue to be you know at the leading edge or just looking for how do I work with a",
    "start": "1977980",
    "end": "1982990"
  },
  {
    "text": "platform that's continued gonna continue to grow is my company gross and then as a part of that the unmatched scalability",
    "start": "1982990",
    "end": "1990040"
  },
  {
    "text": "and reliability I forget the exact number maybe Bob remembers but Amazon's bigger than like the neck three top cloud providers combined so",
    "start": "1990040",
    "end": "1997710"
  },
  {
    "text": "they definitely have the market share to prove their growth and show their innovation and then for us specifically",
    "start": "1997710",
    "end": "2003080"
  },
  {
    "text": "we utilize enterprise support and so that was a big part of the decision for us is we wanted to know that as we use a",
    "start": "2003080",
    "end": "2008600"
  },
  {
    "text": "cloud provider when we build on top of their services and their capabilities that we get that direct support from them so how did we go about our adoption",
    "start": "2008600",
    "end": "2017630"
  },
  {
    "start": "2014000",
    "end": "2131000"
  },
  {
    "text": "of cloud at Qualcomm what comes cloud journey so to speak began about five",
    "start": "2017630",
    "end": "2023150"
  },
  {
    "text": "years ago it was kind of slow the first two years a really exploratory to see what can we do what does cloud offer but",
    "start": "2023150",
    "end": "2028910"
  },
  {
    "text": "the last three years we've really made a lot bigger growth there and with that we studied to learn you know what are kind",
    "start": "2028910",
    "end": "2034130"
  },
  {
    "text": "of the pain points of going to the cloud a how do we make sure that the environments are secure you know we've",
    "start": "2034130",
    "end": "2039560"
  },
  {
    "text": "we figured how to how to do that on premise but how do we make sure that we can build those same capabilities for security in the cloud as well next how",
    "start": "2039560",
    "end": "2047330"
  },
  {
    "text": "do we look at building h.a environments so you know we can build a chae but for someone who's perhaps new database or",
    "start": "2047330",
    "end": "2053898"
  },
  {
    "text": "just new to cloud technologies you can also do that incorrectly and it gets expensive very quickly saying you want",
    "start": "2053899",
    "end": "2059780"
  },
  {
    "text": "to scale to a thousand nodes potentially for a very large service and then accidentally scaling all the time means",
    "start": "2059780",
    "end": "2065960"
  },
  {
    "text": "your bill is significantly larger than you expected it to be next my team is a",
    "start": "2065960",
    "end": "2071629"
  },
  {
    "text": "the cloud team there's about eight of us and we kind of served as a center of excellence for cloud via Qualcomm",
    "start": "2071630",
    "end": "2077020"
  },
  {
    "text": "Qualcomm has 30,000 employees if you can do quick and simple map that doesn't scale infinitely very quickly so we kind",
    "start": "2077020",
    "end": "2084200"
  },
  {
    "text": "of have to figure out how do we best support the company in the cloud journey that we're making as we continue to our",
    "start": "2084200",
    "end": "2090710"
  },
  {
    "text": "cloud journey we discovered you know there's a lot of things that you have to take into consideration Qualcomm is notoriously bill been very good at",
    "start": "2090710",
    "end": "2097370"
  },
  {
    "text": "managing data centers and doing things in-house but when you go to the cloud there's a lot of things that you have to",
    "start": "2097370",
    "end": "2103250"
  },
  {
    "text": "think about differently architecture security just the general mindset of the tools that the cloud offers specifically",
    "start": "2103250",
    "end": "2108440"
  },
  {
    "text": "AWS you kind of have to reevaluate how you're going to utilize all those things and so as a part of that we had some",
    "start": "2108440",
    "end": "2114890"
  },
  {
    "text": "learning curves and some of that was you know if we take some of the user element out of using the cloud we can help",
    "start": "2114890",
    "end": "2120530"
  },
  {
    "text": "develop help developers and operations teams utilize the cloud more easily and basically that's what led us to",
    "start": "2120530",
    "end": "2126950"
  },
  {
    "text": "our solution forged which all lead into in the next couple slides so Forge was",
    "start": "2126950",
    "end": "2133880"
  },
  {
    "start": "2131000",
    "end": "2146000"
  },
  {
    "text": "the solution that Qualcomm decided to build and builds on top of beam sucks all kind of highlight a lot of what",
    "start": "2133880",
    "end": "2139160"
  },
  {
    "text": "Bob's talk about and build on how we specifically took advantage of those capabilities within the Beanstalk",
    "start": "2139160",
    "end": "2144250"
  },
  {
    "text": "service offering so the first thing we wanted to look at is how do I make sure",
    "start": "2144250",
    "end": "2149569"
  },
  {
    "text": "that everything we do is fully automated we don't have to mess with manual configurations and then as a part of",
    "start": "2149569",
    "end": "2156410"
  },
  {
    "text": "that how do we orchestrate the best practices that AWS recommends as part of their blogs they put together in terms",
    "start": "2156410",
    "end": "2161930"
  },
  {
    "text": "of shared security models and other responsibilities as a cloud user and then make sure that we're also following",
    "start": "2161930",
    "end": "2167900"
  },
  {
    "text": "the best practices that Qualcomm puts together and last but not least in as Bob mentioned how do we get web",
    "start": "2167900",
    "end": "2172940"
  },
  {
    "text": "applications out to users and developers and operations seems quickly literally within minutes so that way they can",
    "start": "2172940",
    "end": "2178010"
  },
  {
    "text": "continue working continue to develop and innovate as a part of that Bob touched",
    "start": "2178010",
    "end": "2184309"
  },
  {
    "text": "on looking at how do we make incremental changes to our applications so if I'm making a small configuration I don't",
    "start": "2184309",
    "end": "2189530"
  },
  {
    "text": "wanna have to go rebuild everything I need to be able to innovate quickly and iterate on my changes that developers are making and then when things do go",
    "start": "2189530",
    "end": "2196190"
  },
  {
    "text": "wrong how do we take that and handle those roll backs or the management of",
    "start": "2196190",
    "end": "2201530"
  },
  {
    "text": "making sure that just because a bad change was committed or when bob was talking about the platform updates how",
    "start": "2201530",
    "end": "2206750"
  },
  {
    "text": "do we make sure that if something goes wrong this doesn't all just fall on the floor and now we have a broken application and someone has to go figure",
    "start": "2206750",
    "end": "2212540"
  },
  {
    "text": "out why making that graceful is one of the great things that Beanstalk has done and why we chose to build on top of the",
    "start": "2212540",
    "end": "2218599"
  },
  {
    "text": "platform itself I'll touch on security of a little bit later but that was one of the big things we wanted to keep in mind and then as I touched on how do we",
    "start": "2218599",
    "end": "2226040"
  },
  {
    "text": "kind of abstract away the cloud not that using AWS is difficult but there's definitely some learning curve in that learning curve differs for each and",
    "start": "2226040",
    "end": "2231890"
  },
  {
    "text": "every person so if we can kind of take away some of that element of I need to learn how to use ec2 and then I need to",
    "start": "2231890",
    "end": "2237559"
  },
  {
    "text": "know how to integrate it with load balancers and then if when I get to the point of using beam stuff how do I tie all these things together we wanted to",
    "start": "2237559",
    "end": "2244280"
  },
  {
    "text": "make it seem very seamless to the user not necessary had to understand the complexities that come from linking all",
    "start": "2244280",
    "end": "2249859"
  },
  {
    "text": "these services and the integrations that they involve together for them and last how do we build CI CD into this offering",
    "start": "2249859",
    "end": "2257390"
  },
  {
    "text": "you know we want to make sure that teams who are familiar with a CD can continue to utilize those tools but also groups who don't have any",
    "start": "2257390",
    "end": "2263900"
  },
  {
    "text": "experience into tools like Jenkins are the various DevOps tools that you see common for CI CD pipeline work that we",
    "start": "2263900",
    "end": "2269990"
  },
  {
    "text": "can enable them to utilize those technologies as well without having to necessarily understand how to implement those tools and that how to utilize them",
    "start": "2269990",
    "end": "2276200"
  },
  {
    "text": "fully so we'll take a quick glance at forge and kind of what brought us to this",
    "start": "2276200",
    "end": "2281660"
  },
  {
    "text": "point so I mentioned large organization eight people are not going to be able to handhold or work individually you know",
    "start": "2281660",
    "end": "2288589"
  },
  {
    "text": "face to face with all of those 30,000 people to make sure that each use case gets guided time into the cloud",
    "start": "2288589",
    "end": "2294770"
  },
  {
    "text": "it just doesn't scale at least until somebody figures out a way to get more than 24 hours that of a day so with that",
    "start": "2294770",
    "end": "2301160"
  },
  {
    "text": "how do we provide a robust solution that touches and makes use of CI CD and again",
    "start": "2301160",
    "end": "2306410"
  },
  {
    "text": "security a big thing and we'll touch on that a little bit later and most importantly not just for the end users",
    "start": "2306410",
    "end": "2312890"
  },
  {
    "text": "our customers utilizing Forge but for my team as well how do we make it easy we wanted to go from you know having very",
    "start": "2312890",
    "end": "2320060"
  },
  {
    "text": "large time investments for complex architectures to still making that same use case very simple for those larger",
    "start": "2320060",
    "end": "2325130"
  },
  {
    "text": "use cases we encounter a lot of the same problems that Bob touched on so one of",
    "start": "2325130",
    "end": "2330890"
  },
  {
    "text": "the common things that we get is how much is a DBS gonna cost me to use and for anyone who's used a DBS long enough",
    "start": "2330890",
    "end": "2336650"
  },
  {
    "text": "that answer is yes it will cost you how much it will cost you and how you break that down can become very difficult and",
    "start": "2336650",
    "end": "2342650"
  },
  {
    "text": "so we wanted to make that a little bit more transparent to the user and I'll touch on that a little bit later and show you some examples the other big",
    "start": "2342650",
    "end": "2348920"
  },
  {
    "text": "thing we ran into Pro mises there's a lot of enterprise services that Qualcomm offers for the various application",
    "start": "2348920",
    "end": "2353990"
  },
  {
    "text": "developer teams how do we integrate those into forge as a solution and there's always adherents the best",
    "start": "2353990",
    "end": "2359240"
  },
  {
    "text": "practices so what we found is basically when someone comes to us and says hey I",
    "start": "2359240",
    "end": "2365780"
  },
  {
    "text": "have an application I want to take it to the cloud that in initial kind of engagement with that group can be a",
    "start": "2365780",
    "end": "2372530"
  },
  {
    "text": "simple one-hour meeting sometimes and they know enough about eight ABS already that they kind of get going and keep",
    "start": "2372530",
    "end": "2377960"
  },
  {
    "text": "working on their own or there are times where they don't have much experience with AWS it's a large use case and we",
    "start": "2377960",
    "end": "2383599"
  },
  {
    "text": "can spend weeks - sometimes a months with some of these teams helping them make their journey into the cloud",
    "start": "2383599",
    "end": "2389900"
  },
  {
    "text": "utilizing AWS so obviously that weeks the months time period doesn't scale and",
    "start": "2389900",
    "end": "2395150"
  },
  {
    "text": "that's where the time and people resource becomes an issue so we found as a result of utilizing forge we've taken",
    "start": "2395150",
    "end": "2400819"
  },
  {
    "text": "application teams who've had that same question how do I get my app into the cloud and instead of spending weeks or",
    "start": "2400819",
    "end": "2405920"
  },
  {
    "text": "months in a single business week or less we've gotten their application deployed and running fully in an H a prod",
    "start": "2405920",
    "end": "2411589"
  },
  {
    "text": "environment for them and they're ready to go and there's not as much of that time learning the services and",
    "start": "2411589",
    "end": "2416930"
  },
  {
    "text": "understanding how that all works when we put forward together we wanted to make sure that you know we're not reinventing",
    "start": "2416930",
    "end": "2422569"
  },
  {
    "text": "the wheel so to speak we don't want to build everything from scratch a that's a maintenance overhead for us we don't want to incur a lot a technical debt so",
    "start": "2422569",
    "end": "2428900"
  },
  {
    "text": "how do we do this in a much better and more efficient service or more efficient fashion and so we used AWS services",
    "start": "2428900",
    "end": "2434329"
  },
  {
    "text": "natively again touching on what Bob you was mentioning we rake heavy used to be",
    "start": "2434329",
    "end": "2439730"
  },
  {
    "text": "B extensions for allowing users to customize their environment within Bienstock and do some other fancy things",
    "start": "2439730",
    "end": "2444859"
  },
  {
    "text": "that we'll touch on as part of the forge specific platform itself so in terms of",
    "start": "2444859",
    "end": "2451900"
  },
  {
    "start": "2449000",
    "end": "2515000"
  },
  {
    "text": "helping still solve the overall problem of cloud one of the common things we see is people inevitably spin up there you",
    "start": "2451900",
    "end": "2458359"
  },
  {
    "text": "see two instances that manually managed someone needs to make a change that gets pushed to production so how do they do",
    "start": "2458359",
    "end": "2463460"
  },
  {
    "text": "it they go SSH into every instance and push that change except for that one instance they forgot about or they made a type one so how do we get rid of",
    "start": "2463460",
    "end": "2470869"
  },
  {
    "text": "infrastructure drift so that was a big problem that we helped to solve as a part of forge basically underneath the",
    "start": "2470869",
    "end": "2476809"
  },
  {
    "text": "hood and I'll show a little bit later we're actually using CloudFormation to build all of the Beanstalk environments",
    "start": "2476809",
    "end": "2482180"
  },
  {
    "text": "in the configuration which means that we have a known repeatable pattern that deploys these applications over and over",
    "start": "2482180",
    "end": "2487309"
  },
  {
    "text": "and over again so that means that worst case scenario if someone goes in and",
    "start": "2487309",
    "end": "2492349"
  },
  {
    "text": "makes a manual change we can revert back and there are ways to prevent that infrastructure drift and again just how",
    "start": "2492349",
    "end": "2499549"
  },
  {
    "text": "do we get those services for the enterprise like single sign-on DNS logging how do we make all those things",
    "start": "2499549",
    "end": "2505279"
  },
  {
    "text": "really easy for the user instead of having to understand a spagetti of this integration goes here and make sure you",
    "start": "2505279",
    "end": "2511400"
  },
  {
    "text": "check these three boxes and make sure that you get everything else configured so at its core forge is really just an",
    "start": "2511400",
    "end": "2518960"
  },
  {
    "start": "2515000",
    "end": "2568000"
  },
  {
    "text": "orchestration platform we take a bunch of templates that are pre-built in CloudFormation we define those and then",
    "start": "2518960",
    "end": "2526400"
  },
  {
    "text": "CloudFormation - deploys those first builds the beanstalk environment and then for the users perspective really",
    "start": "2526400",
    "end": "2531739"
  },
  {
    "text": "what they're getting in their only real entry point into the forge environment other than a web UI for selecting how",
    "start": "2531739",
    "end": "2537650"
  },
  {
    "text": "they configure their environment is pushing their code so we make heavy use of the developer tool sets code pipeline",
    "start": "2537650",
    "end": "2543709"
  },
  {
    "text": "code commit code build and the native integration for all of those services with Beanstalk means that we can make",
    "start": "2543709",
    "end": "2550099"
  },
  {
    "text": "developer integrations and their deployments into the Beanstalk environments on top of forge really really simple again not all teams had",
    "start": "2550099",
    "end": "2557150"
  },
  {
    "text": "experience and so the use of these tools and their integration into Beanstalk is what helps makes Forge sisters success",
    "start": "2557150",
    "end": "2563239"
  },
  {
    "text": "and extend those capabilities to teams whether or not they have the knowledge",
    "start": "2563239",
    "end": "2568479"
  },
  {
    "start": "2568000",
    "end": "2720000"
  },
  {
    "text": "so security as we started building Forge our security team was very focused on",
    "start": "2568599",
    "end": "2574640"
  },
  {
    "text": "well how do you make sure that this isn't going to result in the same sort of configurations we see for people who",
    "start": "2574640",
    "end": "2579920"
  },
  {
    "text": "build things by hand so inevitably someone will create a security group ingress for ssh open to the world that's",
    "start": "2579920",
    "end": "2586430"
  },
  {
    "text": "not great that presents problems so how do we make sure that we can solve those types of things so all the source code isn't encrypted",
    "start": "2586430",
    "end": "2592969"
  },
  {
    "text": "from point to point there's nowhere that anything at rest or in transit is unencrypted so there's a lot of peace of",
    "start": "2592969",
    "end": "2599869"
  },
  {
    "text": "mind for a security team there and then in terms of building more security boundaries we put each application into",
    "start": "2599869",
    "end": "2605929"
  },
  {
    "text": "its own account caveat to that being we understand there are some applications that are composed of multiple micro",
    "start": "2605929",
    "end": "2611599"
  },
  {
    "text": "services or maybe you have to development teams you have a web front-end we have a back-end development team and those are two logically",
    "start": "2611599",
    "end": "2616969"
  },
  {
    "text": "separate components of a single application and so in that case we do allow more than one application to be",
    "start": "2616969",
    "end": "2622339"
  },
  {
    "text": "deployed but then even within that single AWS account taking the example let's say of an angular front-end and a",
    "start": "2622339",
    "end": "2628489"
  },
  {
    "text": "Python back-end your angular application as a front-end gets to pull it into its logically own non-routable VPC and then",
    "start": "2628489",
    "end": "2634880"
  },
  {
    "text": "the Python back-end as well also gets deployed into its own non-routable VPC we allow for linking and I'll show some",
    "start": "2634880",
    "end": "2640549"
  },
  {
    "text": "examples of that later basically we're making use of VPC peering between those non erodible v pcs to create a rattle",
    "start": "2640549",
    "end": "2646429"
  },
  {
    "text": "bolo out between those it's an awkward phrase but basically how do we take",
    "start": "2646429",
    "end": "2651679"
  },
  {
    "text": "those micro services and then or the multiple components of an application that allows users to still deploy the same way there to expect to in terms of",
    "start": "2651679",
    "end": "2659500"
  },
  {
    "text": "common things we also see people inevitably from time to time can commit secrets into their version control",
    "start": "2659500",
    "end": "2666160"
  },
  {
    "text": "system that practice don't do that but we also see them writing things out to disk and so even if they're not committing it to source control when it",
    "start": "2666160",
    "end": "2673270"
  },
  {
    "text": "actually gets deployed onto the server you actually have secret or sensitive information on disk and we wanted to",
    "start": "2673270",
    "end": "2678370"
  },
  {
    "text": "help prevent that so we have tie-in heavily with parameter store and through the use of the EB extensions we actually",
    "start": "2678370",
    "end": "2685060"
  },
  {
    "text": "are able to then give the users the capability to dynamically inject all these application secrets into their",
    "start": "2685060",
    "end": "2690280"
  },
  {
    "text": "application at runtime so nothing's ever written to disk making for a really",
    "start": "2690280",
    "end": "2695950"
  },
  {
    "text": "great secure in addition because parameter store integrates with kms which means that everything's encrypted at rest and we're tying into cloud",
    "start": "2695950",
    "end": "2703030"
  },
  {
    "text": "information again helping prevent drift so all these things were a lot of things that we took into consideration and for",
    "start": "2703030",
    "end": "2708610"
  },
  {
    "text": "right now everything we build on forge is only limited to Internet access we're working on it external but the goal here",
    "start": "2708610",
    "end": "2715030"
  },
  {
    "text": "was how do we help enable the enterprise to build things securely and those one aspect but help there so we'll take a",
    "start": "2715030",
    "end": "2721240"
  },
  {
    "start": "2720000",
    "end": "2741000"
  },
  {
    "text": "look at what is for it what does it look like what do our users see how did they kind of get started so you can see here",
    "start": "2721240",
    "end": "2728050"
  },
  {
    "text": "there's actually a couple of other options outside of just deploying a web app before it is more than just build on Beanstalk but Beanstalk is a heavy",
    "start": "2728050",
    "end": "2734590"
  },
  {
    "text": "component of this so other use cases supported but basically they choose from our landing page what do you want to",
    "start": "2734590",
    "end": "2741070"
  },
  {
    "text": "create once they go there we collect a little bit of metadata some of this is for governance and compliance for us",
    "start": "2741070",
    "end": "2746890"
  },
  {
    "text": "kind of determining some environment information like what's the application name so we tie stuff into CMDB we want",
    "start": "2746890",
    "end": "2753160"
  },
  {
    "text": "our what type of environment is it development production so on and so forth and this is other metadata that helps the user if you're deploying",
    "start": "2753160",
    "end": "2758800"
  },
  {
    "text": "multiple applications or environment types above and beyond that then we start going to configurations so this is",
    "start": "2758800",
    "end": "2765850"
  },
  {
    "text": "where we start to get into more of the complete abstraction away from them understanding that there is actually being stuck gonna meet the hood and this",
    "start": "2765850",
    "end": "2772210"
  },
  {
    "text": "isn't to say in order to use being stuck you have to go this route we chose to take a very abstracted approach because",
    "start": "2772210",
    "end": "2778570"
  },
  {
    "text": "we helped we found that that was what was gonna best engage our users and our specific enterprise but that's not to",
    "start": "2778570",
    "end": "2784090"
  },
  {
    "text": "say you have to build something like forge to utilize Beanstalk you can definitely go and use methods like Bob",
    "start": "2784090",
    "end": "2789130"
  },
  {
    "text": "talked about use the CLI use the guys use CloudFormation to define everything you're still gonna get great",
    "start": "2789130",
    "end": "2794450"
  },
  {
    "text": "results from a service that's terribly risen terribly resilient incredibly resilient and helps make their developer",
    "start": "2794450",
    "end": "2800720"
  },
  {
    "text": "and operations lives much easier than building things by hand so part of that is we wanted to simplify things fix CPU",
    "start": "2800720",
    "end": "2808249"
  },
  {
    "text": "and RAM footprint so we don't offer every particular instance type that's available because that would be overwhelming but we want to provide some",
    "start": "2808249",
    "end": "2814069"
  },
  {
    "text": "basic configurations that they used to seeing coming up with things like same things for databases so what engine",
    "start": "2814069",
    "end": "2820670"
  },
  {
    "text": "flavor do you want you're using my sequel using Postgres are you using Aurora and then big media or small medium and large for database types once",
    "start": "2820670",
    "end": "2827839"
  },
  {
    "text": "they pick this they get some configurations that are actually showing for them and kind of change on the",
    "start": "2827839",
    "end": "2833450"
  },
  {
    "text": "screen and so part of this is helping the answer the question of how much this is costing me so this isn't anything",
    "start": "2833450",
    "end": "2839119"
  },
  {
    "text": "exact it will cost you n number of dollars a month but we give them an estimate so as they make these choices",
    "start": "2839119",
    "end": "2844490"
  },
  {
    "text": "and say I want a medium-sized ec2 instance or I want a large database we actually update a dynamic costing panel",
    "start": "2844490",
    "end": "2850549"
  },
  {
    "text": "in our UI for them and as they change these these configuration options they can see how that affects their running",
    "start": "2850549",
    "end": "2855950"
  },
  {
    "text": "monthly cost and gives them some better insight into how Forge how much the",
    "start": "2855950",
    "end": "2861349"
  },
  {
    "text": "forge environment they deployed will cost them for users who are deploying multiple applications we have insight",
    "start": "2861349",
    "end": "2868430"
  },
  {
    "start": "2864000",
    "end": "2879000"
  },
  {
    "text": "into showing you know what is everything that's running in their account or accounts if they have multiple giving",
    "start": "2868430",
    "end": "2874549"
  },
  {
    "text": "them a quick access to see all of the Beanstalk applications they've created clicking into applications were",
    "start": "2874549",
    "end": "2881059"
  },
  {
    "text": "basically taking a lot of the metadata that Beanstalk exposes the configurations for what type of ec2",
    "start": "2881059",
    "end": "2886099"
  },
  {
    "text": "instances they pick what region is it deployed into exposing these out to the user and then giving them that cost",
    "start": "2886099",
    "end": "2891769"
  },
  {
    "text": "summary again so that way as they've made changes or configuration tweaks this information is always readily present and transparent to the user so",
    "start": "2891769",
    "end": "2898339"
  },
  {
    "text": "they know what's happening so secrets I mentioned we make use of parameter store",
    "start": "2898339",
    "end": "2905359"
  },
  {
    "start": "2901000",
    "end": "2932000"
  },
  {
    "text": "so users get access to this everything again is encrypted at rest they can then",
    "start": "2905359",
    "end": "2910789"
  },
  {
    "text": "make use of these through eb extensions and take these secrets that they need to specify for their application you know",
    "start": "2910789",
    "end": "2916880"
  },
  {
    "text": "api secrets user names passwords whatever it may be sensitive information and all this gets dynamically injected",
    "start": "2916880",
    "end": "2923299"
  },
  {
    "text": "into the beans environment for them and means that they don't actually have to mess with how do",
    "start": "2923299",
    "end": "2928480"
  },
  {
    "text": "I store my secrets so in the use case",
    "start": "2928480",
    "end": "2933580"
  },
  {
    "text": "where you have applications that need to talk to each other again these V pcs are internet only and they're non-routable",
    "start": "2933580",
    "end": "2939190"
  },
  {
    "text": "so we wanted to give them capabilities where maybe you have multiple applications that talk to each other or",
    "start": "2939190",
    "end": "2944290"
  },
  {
    "text": "dependencies on each other so we put together in what we recall linking it's really just V PC peering",
    "start": "2944290",
    "end": "2949540"
  },
  {
    "text": "underneath the hood and this gives you the capabilities to link multiple applications together that need to make dependency calls or just talk to other",
    "start": "2949540",
    "end": "2956440"
  },
  {
    "text": "services for other information so as Bob",
    "start": "2956440",
    "end": "2963640"
  },
  {
    "start": "2960000",
    "end": "3076000"
  },
  {
    "text": "mentioned one of the great things about being stuck is you have all these things like your ec2 instances your load balancers access to logs but typically",
    "start": "2963640",
    "end": "2970600"
  },
  {
    "text": "if you're building an application just raw on top of ec2 configuring your load balancer even if you do this in an automated fashion and you've got your",
    "start": "2970600",
    "end": "2977170"
  },
  {
    "text": "Clara watch logs agent you stream all your logs to Clara watch logs if you don't already have some sort of centralized logging in place that helps",
    "start": "2977170",
    "end": "2983260"
  },
  {
    "text": "for log aggregation and more of a centralized view for debugging there's no quick and easy way to get access to",
    "start": "2983260",
    "end": "2989530"
  },
  {
    "text": "all those things from a single pane of glass but beanstalk actually enables that and so whether you're doing it via",
    "start": "2989530",
    "end": "2995020"
  },
  {
    "text": "API is or directly in the beanstalk console you can actually go take your deployed application all the logs from",
    "start": "2995020",
    "end": "3000120"
  },
  {
    "text": "that instance whether in a tailed format and it'll give you the last hundred lines of everything or say I want all the logs and it'll just give you a huge",
    "start": "3000120",
    "end": "3006150"
  },
  {
    "text": "bundle you can actually do all of that directly through Beanstalk so you're not actually going from one service to the",
    "start": "3006150",
    "end": "3011730"
  },
  {
    "text": "next to try and go troubleshoot things it really helps with making that seamless integration and use of a service kind of the developer and",
    "start": "3011730",
    "end": "3018660"
  },
  {
    "text": "operations dream and Beanstalk has done that very well and as a part of that we'd take that and then we expose to the",
    "start": "3018660",
    "end": "3024030"
  },
  {
    "text": "Beanstalk api's those logs to the users so if a user deploys a bad configuration",
    "start": "3024030",
    "end": "3029150"
  },
  {
    "text": "there can be used cases where if you deployed that code like Beanstalk will potentially deploy that code and maybe",
    "start": "3029150",
    "end": "3035520"
  },
  {
    "text": "your route isn't accessible to an API method in your application so developers and operators need to know okay what's",
    "start": "3035520",
    "end": "3041580"
  },
  {
    "text": "happening with that so we give them quick access to deploy excuse me to download those logs directly through",
    "start": "3041580",
    "end": "3047250"
  },
  {
    "text": "Forge again making use of Beanstalk and then that bottom section that you're saying is what bob showed for the",
    "start": "3047250",
    "end": "3053100"
  },
  {
    "text": "console events so as the Beanstalk environment makes configuration tweaks or if you want where things are in a degraded or severe",
    "start": "3053100",
    "end": "3060030"
  },
  {
    "text": "unknown State we give all of that information that we're pulling out of the Beanstalk api's back to the user in",
    "start": "3060030",
    "end": "3065579"
  },
  {
    "text": "the UI format and Forge again they don't need to know how to go find it in the Beanstalk console so we're making heavy",
    "start": "3065579",
    "end": "3071430"
  },
  {
    "text": "use of the api's to expose that information in an abstracted way for them so kind of tying all this together",
    "start": "3071430",
    "end": "3079220"
  },
  {
    "start": "3076000",
    "end": "3113000"
  },
  {
    "text": "our goal is how do we make this easy so common use cases are web applications being stuck allows us to do this very",
    "start": "3079220",
    "end": "3085710"
  },
  {
    "text": "easily very quickly in a very robust manner and make things secure then it",
    "start": "3085710",
    "end": "3090809"
  },
  {
    "text": "allows us to continue to adhere to Amazon's best practices as well as Qualcomm's and then it's really helped",
    "start": "3090809",
    "end": "3095819"
  },
  {
    "text": "us with our adoption so we were able to go from these really large engagements taking a lot of time to basically now we",
    "start": "3095819",
    "end": "3101940"
  },
  {
    "text": "can take two or three days and we have it users with applications and with that I'll turn it back over to Bob great",
    "start": "3101940",
    "end": "3109680"
  },
  {
    "text": "thanks Aaron so just to wrap up our",
    "start": "3109680",
    "end": "3115470"
  },
  {
    "start": "3113000",
    "end": "3222000"
  },
  {
    "text": "session here hopefully if we think about like the the common scenario that we",
    "start": "3115470",
    "end": "3121710"
  },
  {
    "text": "talked about some of the challenges at the beginning hopefully what you guys have been able to see is is just really",
    "start": "3121710",
    "end": "3128700"
  },
  {
    "text": "how easy it is to launch an application a web application on AWS using an",
    "start": "3128700",
    "end": "3135180"
  },
  {
    "text": "elastic Beanstalk and with that there's no need to learn any of the underlying services no need to worry about the",
    "start": "3135180",
    "end": "3141720"
  },
  {
    "text": "provisioning really just simple to do and again think of the go sample or the",
    "start": "3141720",
    "end": "3147630"
  },
  {
    "text": "go demo that we did within three to five minutes you can have a fully running application up there so you can do it",
    "start": "3147630",
    "end": "3155760"
  },
  {
    "text": "all the way from development through all you know a fully managed production stage and really what that gets to is is",
    "start": "3155760",
    "end": "3163920"
  },
  {
    "text": "kind of those common challenges as Beanstalk really helps you spend your time where it matters most and that's",
    "start": "3163920",
    "end": "3169160"
  },
  {
    "text": "developing your code and solving business problems so hopefully everyone was able to see a little bit about that",
    "start": "3169160",
    "end": "3176000"
  },
  {
    "text": "we've got some related breakout sessions here so a couple of our engineering",
    "start": "3176000",
    "end": "3181079"
  },
  {
    "text": "managers actually later today and tomorrow are doing advanced deployment",
    "start": "3181079",
    "end": "3187349"
  },
  {
    "text": "blue/green deployments using elastic beanstalk and how you can easily do that and what the different",
    "start": "3187349",
    "end": "3192920"
  },
  {
    "text": "deployment mechanisms look like and then if you're interested in DevOps server",
    "start": "3192920",
    "end": "3198920"
  },
  {
    "text": "lists containers or building micro services architectures we've also got a",
    "start": "3198920",
    "end": "3204740"
  },
  {
    "text": "session on Thursday that features the GM's of those businesses and should be",
    "start": "3204740",
    "end": "3211430"
  },
  {
    "text": "really really interesting as well so I think it was a late added session there's probably some seats left but if",
    "start": "3211430",
    "end": "3218060"
  },
  {
    "text": "you've got an opportunity and interested in that take a look at that as well but with that I would really like to",
    "start": "3218060",
    "end": "3223700"
  },
  {
    "start": "3222000",
    "end": "3255000"
  },
  {
    "text": "thank everyone for coming this morning again I'm Bob odo and Erin Bauer if you",
    "start": "3223700",
    "end": "3230840"
  },
  {
    "text": "have questions you know feel free to come to us afterwards yep find me on Twitter or go online I have a website",
    "start": "3230840",
    "end": "3236720"
  },
  {
    "text": "you can shoot me an email dad up stock cloud feel free to reach out happy to help answer anything I can um so we'll",
    "start": "3236720",
    "end": "3243170"
  },
  {
    "text": "go ahead and end the session but myself and Erin will stick around if anyone's got some questions we'd be happy to help",
    "start": "3243170",
    "end": "3248450"
  },
  {
    "text": "all we've got a few minutes here left in the room so thank you everyone [Applause]",
    "start": "3248450",
    "end": "3256299"
  }
]