[
  {
    "text": "what we're going to cover in this",
    "start": "829",
    "end": "2490"
  },
  {
    "text": "session is first a quick overview of",
    "start": "2490",
    "end": "4680"
  },
  {
    "text": "lambda so I'll catch those of you who",
    "start": "4680",
    "end": "7620"
  },
  {
    "text": "haven't used the service already aren't",
    "start": "7620",
    "end": "9210"
  },
  {
    "text": "familiar with it up on the basics then",
    "start": "9210",
    "end": "12330"
  },
  {
    "text": "we'll talk a little bit about some of",
    "start": "12330",
    "end": "13559"
  },
  {
    "text": "the recent launches and some of the new",
    "start": "13559",
    "end": "15120"
  },
  {
    "text": "features that have been shipped in the",
    "start": "15120",
    "end": "16949"
  },
  {
    "text": "last three months and then in the second",
    "start": "16949",
    "end": "20010"
  },
  {
    "text": "half of the talk I want to transition to",
    "start": "20010",
    "end": "21570"
  },
  {
    "text": "actually talking a little bit about",
    "start": "21570",
    "end": "22880"
  },
  {
    "text": "serverless design patterns so having",
    "start": "22880",
    "end": "25740"
  },
  {
    "text": "covered some of the things that you can",
    "start": "25740",
    "end": "27689"
  },
  {
    "text": "do with lambda I want to talk a little",
    "start": "27689",
    "end": "29460"
  },
  {
    "text": "bit about how you can put it together",
    "start": "29460",
    "end": "30720"
  },
  {
    "text": "with other AWS services or a third party",
    "start": "30720",
    "end": "33300"
  },
  {
    "text": "services to build these larger",
    "start": "33300",
    "end": "36300"
  },
  {
    "text": "serverless design patterns for your",
    "start": "36300",
    "end": "38100"
  },
  {
    "text": "applications so let's go ahead and get",
    "start": "38100",
    "end": "41730"
  },
  {
    "text": "started here first of all let's talk a",
    "start": "41730",
    "end": "44879"
  },
  {
    "text": "bit about what lambda is and also a",
    "start": "44879",
    "end": "47100"
  },
  {
    "text": "little bit about what lambda isn't so",
    "start": "47100",
    "end": "49500"
  },
  {
    "text": "it's the newest compute service from AWS",
    "start": "49500",
    "end": "51600"
  },
  {
    "text": "and what's different about it is that",
    "start": "51600",
    "end": "54239"
  },
  {
    "text": "you don't have to think about servers",
    "start": "54239",
    "end": "56340"
  },
  {
    "text": "and if you've been an AWS customer if",
    "start": "56340",
    "end": "59309"
  },
  {
    "text": "you've used easy to as an infrastructure",
    "start": "59309",
    "end": "61140"
  },
  {
    "text": "offering you're very used to thinking",
    "start": "61140",
    "end": "63149"
  },
  {
    "text": "about all the things that you do with",
    "start": "63149",
    "end": "64680"
  },
  {
    "text": "servers you capacity plan for them you",
    "start": "64680",
    "end": "67380"
  },
  {
    "text": "stand them up you provision them you",
    "start": "67380",
    "end": "69390"
  },
  {
    "text": "deploy code to them with lambda you",
    "start": "69390",
    "end": "71939"
  },
  {
    "text": "don't do any of those steps instead you",
    "start": "71939",
    "end": "75810"
  },
  {
    "text": "give us the code and we run it for you",
    "start": "75810",
    "end": "77909"
  },
  {
    "text": "and that has some interesting",
    "start": "77909",
    "end": "79290"
  },
  {
    "text": "implications among other things you can",
    "start": "79290",
    "end": "82590"
  },
  {
    "text": "never be over or under capacity with",
    "start": "82590",
    "end": "84659"
  },
  {
    "text": "lambda so there's no notion of not",
    "start": "84659",
    "end": "86820"
  },
  {
    "text": "having enough servers to supply to",
    "start": "86820",
    "end": "88590"
  },
  {
    "text": "actually take care of the load that your",
    "start": "88590",
    "end": "91680"
  },
  {
    "text": "clients are giving you but you're also",
    "start": "91680",
    "end": "93930"
  },
  {
    "text": "never over capacity either which means",
    "start": "93930",
    "end": "96299"
  },
  {
    "text": "for instance that you don't pay for cold",
    "start": "96299",
    "end": "97950"
  },
  {
    "text": "servers or extra idle time that you",
    "start": "97950",
    "end": "99780"
  },
  {
    "text": "aren't actually using you only pay when",
    "start": "99780",
    "end": "101880"
  },
  {
    "text": "you're actually doing something hot now",
    "start": "101880",
    "end": "105630"
  },
  {
    "text": "that also means that if you don't have",
    "start": "105630",
    "end": "106920"
  },
  {
    "text": "the servers you don't deploy things to",
    "start": "106920",
    "end": "108570"
  },
  {
    "text": "servers that's a challenge that lambda",
    "start": "108570",
    "end": "110700"
  },
  {
    "text": "takes on in your behalf so you upload",
    "start": "110700",
    "end": "112409"
  },
  {
    "text": "the code lambda make sure it gets to the",
    "start": "112409",
    "end": "114600"
  },
  {
    "text": "right machines and the right containers",
    "start": "114600",
    "end": "116219"
  },
  {
    "text": "that it needs to be in in order to",
    "start": "116219",
    "end": "117509"
  },
  {
    "text": "operate we also take care of the scaling",
    "start": "117509",
    "end": "121259"
  },
  {
    "text": "and fault tolerance and we'll talk a",
    "start": "121259",
    "end": "122490"
  },
  {
    "text": "little bit as we go along here how some",
    "start": "122490",
    "end": "124290"
  },
  {
    "text": "of that works and then behind the scenes",
    "start": "124290",
    "end": "126960"
  },
  {
    "text": "of course we're managing the servers on",
    "start": "126960",
    "end": "129209"
  },
  {
    "text": "your behalf and so we take care of",
    "start": "129209",
    "end": "130830"
  },
  {
    "text": "things like keeping them up to date",
    "start": "130830",
    "end": "132239"
  },
  {
    "text": "making",
    "start": "132239",
    "end": "133180"
  },
  {
    "text": "they're all healthy updating the",
    "start": "133180",
    "end": "135340"
  },
  {
    "text": "operating systems and language runtimes",
    "start": "135340",
    "end": "137170"
  },
  {
    "text": "behind the scenes so you never have to",
    "start": "137170",
    "end": "138849"
  },
  {
    "text": "see that and then we build a couple of",
    "start": "138849",
    "end": "141280"
  },
  {
    "text": "things in like metrics and logging so",
    "start": "141280",
    "end": "143530"
  },
  {
    "text": "while you're free to use any third-party",
    "start": "143530",
    "end": "145060"
  },
  {
    "text": "service you one you can take advantage",
    "start": "145060",
    "end": "146920"
  },
  {
    "text": "of ready to go built-in functionality",
    "start": "146920",
    "end": "149500"
  },
  {
    "text": "for some of those mechanical basics now",
    "start": "149500",
    "end": "153250"
  },
  {
    "text": "once you've gotten that you can do all",
    "start": "153250",
    "end": "154750"
  },
  {
    "text": "kinds of cool things with it you can",
    "start": "154750",
    "end": "156519"
  },
  {
    "text": "very quickly get code up in the cloud",
    "start": "156519",
    "end": "158290"
  },
  {
    "text": "because it's highly productive you don't",
    "start": "158290",
    "end": "160120"
  },
  {
    "text": "have to do all those things that are",
    "start": "160120",
    "end": "161409"
  },
  {
    "text": "listed on the left up there and you can",
    "start": "161409",
    "end": "164379"
  },
  {
    "text": "bring any code you like so unlike some",
    "start": "164379",
    "end": "166540"
  },
  {
    "text": "other systems that have been devised to",
    "start": "166540",
    "end": "168310"
  },
  {
    "text": "be easy to use that often have either",
    "start": "168310",
    "end": "170500"
  },
  {
    "text": "curated libraries or a lot of",
    "start": "170500",
    "end": "172569"
  },
  {
    "text": "restrictions lambda lets you bring any",
    "start": "172569",
    "end": "174700"
  },
  {
    "text": "code you want you can even compile C or",
    "start": "174700",
    "end": "176799"
  },
  {
    "text": "C++ code down into native libraries and",
    "start": "176799",
    "end": "179349"
  },
  {
    "text": "upload that as well so we intentionally",
    "start": "179349",
    "end": "181629"
  },
  {
    "text": "build a very robust very flexible",
    "start": "181629",
    "end": "183909"
  },
  {
    "text": "security policy to enable you to do all",
    "start": "183909",
    "end": "186040"
  },
  {
    "text": "of that now the other thing that's",
    "start": "186040",
    "end": "188230"
  },
  {
    "text": "really nice is that you can run code in",
    "start": "188230",
    "end": "190090"
  },
  {
    "text": "parallel in a very easy fashion so once",
    "start": "190090",
    "end": "193000"
  },
  {
    "text": "you've uploaded that code to lambda",
    "start": "193000",
    "end": "194439"
  },
  {
    "text": "every time you give us a request we'll",
    "start": "194439",
    "end": "196569"
  },
  {
    "text": "run it and if you give us a thousand",
    "start": "196569",
    "end": "198340"
  },
  {
    "text": "requests a second we'll run a thousand",
    "start": "198340",
    "end": "200560"
  },
  {
    "text": "different copies of your code all in",
    "start": "200560",
    "end": "202180"
  },
  {
    "text": "parallel so you don't have to be an",
    "start": "202180",
    "end": "204040"
  },
  {
    "text": "expert in distributed systems or",
    "start": "204040",
    "end": "205720"
  },
  {
    "text": "parallel programming or any particular",
    "start": "205720",
    "end": "208569"
  },
  {
    "text": "framework in order to get the advantage",
    "start": "208569",
    "end": "210159"
  },
  {
    "text": "of massive horizontal scale out lambda",
    "start": "210159",
    "end": "212979"
  },
  {
    "text": "takes care of those challenges behind",
    "start": "212979",
    "end": "214479"
  },
  {
    "text": "the scenes and then once you've got that",
    "start": "214479",
    "end": "216879"
  },
  {
    "text": "you can do all kinds of things you can",
    "start": "216879",
    "end": "218859"
  },
  {
    "text": "create mobile and IOT backends you can",
    "start": "218859",
    "end": "221590"
  },
  {
    "text": "create event handlers for other AWS",
    "start": "221590",
    "end": "223540"
  },
  {
    "text": "services and you can create real time",
    "start": "223540",
    "end": "225549"
  },
  {
    "text": "processing systems and we'll take a look",
    "start": "225549",
    "end": "227319"
  },
  {
    "text": "at some of those in our design patterns",
    "start": "227319",
    "end": "229829"
  },
  {
    "text": "now using lambda simple as I mentioned",
    "start": "229829",
    "end": "232900"
  },
  {
    "text": "the first thing you do is you pick a",
    "start": "232900",
    "end": "234939"
  },
  {
    "text": "language and then you upload the code",
    "start": "234939",
    "end": "236560"
  },
  {
    "text": "that you want to write and you can bring",
    "start": "236560",
    "end": "238479"
  },
  {
    "text": "any libraries that you want to bear for",
    "start": "238479",
    "end": "240250"
  },
  {
    "text": "that you write your code and the ID of",
    "start": "240250",
    "end": "242349"
  },
  {
    "text": "your choice you can write use the",
    "start": "242349",
    "end": "244209"
  },
  {
    "text": "command line and for the languages that",
    "start": "244209",
    "end": "246340"
  },
  {
    "text": "are dynamic like Python and nodejs you",
    "start": "246340",
    "end": "248709"
  },
  {
    "text": "can also author the code directly in the",
    "start": "248709",
    "end": "250599"
  },
  {
    "text": "lambda console makes it really easy to",
    "start": "250599",
    "end": "252879"
  },
  {
    "text": "get started and right especially smaller",
    "start": "252879",
    "end": "255280"
  },
  {
    "text": "snippets of code but you can use all of",
    "start": "255280",
    "end": "257799"
  },
  {
    "text": "your existing build and deploy",
    "start": "257799",
    "end": "258880"
  },
  {
    "text": "infrastructure if you've got an existing",
    "start": "258880",
    "end": "261250"
  },
  {
    "text": "system now the programming model for",
    "start": "261250",
    "end": "264340"
  },
  {
    "text": "lambda is a little different than what",
    "start": "264340",
    "end": "265690"
  },
  {
    "text": "you might be used to",
    "start": "265690",
    "end": "266570"
  },
  {
    "text": "while the languages are conventional",
    "start": "266570",
    "end": "268250"
  },
  {
    "text": "what you don't have is persistent",
    "start": "268250",
    "end": "270050"
  },
  {
    "text": "storage on a server itself because that",
    "start": "270050",
    "end": "272450"
  },
  {
    "text": "server can change over time so while we",
    "start": "272450",
    "end": "274940"
  },
  {
    "text": "give you working memory and working disk",
    "start": "274940",
    "end": "276740"
  },
  {
    "text": "space it's all ephemeral and so any",
    "start": "276740",
    "end": "279320"
  },
  {
    "text": "persistent state that you want needs to",
    "start": "279320",
    "end": "281090"
  },
  {
    "text": "get stored someplace else like s3",
    "start": "281090",
    "end": "283900"
  },
  {
    "text": "dynamodb Kinesis or some other",
    "start": "283900",
    "end": "286220"
  },
  {
    "text": "persistent storage mechanism you pick a",
    "start": "286220",
    "end": "290170"
  },
  {
    "text": "power level that you want to use and",
    "start": "290170",
    "end": "292550"
  },
  {
    "text": "we'll talk a little bit about what that",
    "start": "292550",
    "end": "294110"
  },
  {
    "text": "model looks like here and then once",
    "start": "294110",
    "end": "296300"
  },
  {
    "text": "you've done that and given us a little",
    "start": "296300",
    "end": "297590"
  },
  {
    "text": "bit of information like the name of the",
    "start": "297590",
    "end": "298970"
  },
  {
    "text": "function you're ready to go things like",
    "start": "298970",
    "end": "301340"
  },
  {
    "text": "logging metrics scaling fault tolerance",
    "start": "301340",
    "end": "304640"
  },
  {
    "text": "they're all built in and as soon as have",
    "start": "304640",
    "end": "306890"
  },
  {
    "text": "you done that it's all ready to go now",
    "start": "306890",
    "end": "311750"
  },
  {
    "text": "lambdas just about a year old and when",
    "start": "311750",
    "end": "313790"
  },
  {
    "text": "we launched a year ago has a preview",
    "start": "313790",
    "end": "315560"
  },
  {
    "text": "service at reinvent 2014 we had only a",
    "start": "315560",
    "end": "319070"
  },
  {
    "text": "single use case which was integration as",
    "start": "319070",
    "end": "321230"
  },
  {
    "text": "an event handler for three other AWS",
    "start": "321230",
    "end": "323480"
  },
  {
    "text": "services amazon s3 or blob storage",
    "start": "323480",
    "end": "326620"
  },
  {
    "text": "DynamoDB which was then in preview form",
    "start": "326620",
    "end": "329030"
  },
  {
    "text": "furs for its streams update to build",
    "start": "329030",
    "end": "331520"
  },
  {
    "text": "triggers and Kinesis streams now a year",
    "start": "331520",
    "end": "335870"
  },
  {
    "text": "later were integrated across the AWS",
    "start": "335870",
    "end": "339590"
  },
  {
    "text": "portfolio with support for things like",
    "start": "339590",
    "end": "342170"
  },
  {
    "text": "custom handlers and cloud formation",
    "start": "342170",
    "end": "345760"
  },
  {
    "text": "support for message handlers in amazon",
    "start": "345760",
    "end": "348260"
  },
  {
    "text": "SNS that makes it really easy to build",
    "start": "348260",
    "end": "350000"
  },
  {
    "text": "intelligent IT automation systems and",
    "start": "350000",
    "end": "353270"
  },
  {
    "text": "when they were going to talk a little",
    "start": "353270",
    "end": "354200"
  },
  {
    "text": "bit more about here api gateway so api",
    "start": "354200",
    "end": "358550"
  },
  {
    "text": "gateway is another service but it's a",
    "start": "358550",
    "end": "360650"
  },
  {
    "text": "very very close relative to lambda and",
    "start": "360650",
    "end": "362690"
  },
  {
    "text": "people often use the two in combination",
    "start": "362690",
    "end": "364190"
  },
  {
    "text": "we'll talk about that in some of the",
    "start": "364190",
    "end": "366200"
  },
  {
    "text": "design patterns that we take a look at",
    "start": "366200",
    "end": "368230"
  },
  {
    "text": "API gateway offers a fully managed",
    "start": "368230",
    "end": "370850"
  },
  {
    "text": "system for hosting your api's so you can",
    "start": "370850",
    "end": "374240"
  },
  {
    "text": "design your ap is on there you can",
    "start": "374240",
    "end": "376670"
  },
  {
    "text": "upload them in various forms including",
    "start": "376670",
    "end": "378800"
  },
  {
    "text": "swagger definitions and then you can",
    "start": "378800",
    "end": "380900"
  },
  {
    "text": "manage different versions and different",
    "start": "380900",
    "end": "382550"
  },
  {
    "text": "deployments of those AP is so a very",
    "start": "382550",
    "end": "384440"
  },
  {
    "text": "flexible system that takes care behind",
    "start": "384440",
    "end": "386990"
  },
  {
    "text": "the scenes of all the challenges of",
    "start": "386990",
    "end": "388790"
  },
  {
    "text": "doing that hosting for you including",
    "start": "388790",
    "end": "390920"
  },
  {
    "text": "just like lambda does for your code the",
    "start": "390920",
    "end": "393380"
  },
  {
    "text": "scale out and the fault tolerance now it",
    "start": "393380",
    "end": "396710"
  },
  {
    "text": "also gives you the tools to do a bunch",
    "start": "396710",
    "end": "398720"
  },
  {
    "text": "of the management that you need",
    "start": "398720",
    "end": "400000"
  },
  {
    "text": "for your AP is including things like",
    "start": "400000",
    "end": "401920"
  },
  {
    "text": "just deciding who can use it and how",
    "start": "401920",
    "end": "404530"
  },
  {
    "text": "much they can use so you can get network",
    "start": "404530",
    "end": "407260"
  },
  {
    "text": "control over throttles you get automatic",
    "start": "407260",
    "end": "409480"
  },
  {
    "text": "built-in DDoS protection through cloud",
    "start": "409480",
    "end": "411460"
  },
  {
    "text": "front and you have the ability to",
    "start": "411460",
    "end": "413620"
  },
  {
    "text": "leverage a variety of different security",
    "start": "413620",
    "end": "415930"
  },
  {
    "text": "models including the Identity and Access",
    "start": "415930",
    "end": "418330"
  },
  {
    "text": "Management to authorize access to your",
    "start": "418330",
    "end": "420430"
  },
  {
    "text": "resources so lots of flexibility to",
    "start": "420430",
    "end": "422830"
  },
  {
    "text": "decide who gets in that front door and",
    "start": "422830",
    "end": "424990"
  },
  {
    "text": "how they're going to use those api's and",
    "start": "424990",
    "end": "427020"
  },
  {
    "text": "then of course while you can use gateway",
    "start": "427020",
    "end": "430120"
  },
  {
    "text": "to go to anything you can reach on the",
    "start": "430120",
    "end": "432730"
  },
  {
    "text": "web including services you build on ec2",
    "start": "432730",
    "end": "435550"
  },
  {
    "text": "or third-party services out there on the",
    "start": "435550",
    "end": "438040"
  },
  {
    "text": "web that are available through https one",
    "start": "438040",
    "end": "440890"
  },
  {
    "text": "of the easiest and simplest things to do",
    "start": "440890",
    "end": "443020"
  },
  {
    "text": "is to couple it to lambda and when you",
    "start": "443020",
    "end": "445240"
  },
  {
    "text": "do that API gateway functions is the",
    "start": "445240",
    "end": "447490"
  },
  {
    "text": "interface and you can think of lambdas",
    "start": "447490",
    "end": "449380"
  },
  {
    "text": "the implementation of your code so the",
    "start": "449380",
    "end": "451210"
  },
  {
    "text": "two work together hand in hand now onto",
    "start": "451210",
    "end": "454510"
  },
  {
    "text": "step you briefly through some of the",
    "start": "454510",
    "end": "455980"
  },
  {
    "text": "things that we've launched recently",
    "start": "455980",
    "end": "457000"
  },
  {
    "text": "starting with the pre reinvent launches",
    "start": "457000",
    "end": "460360"
  },
  {
    "text": "back in September we added two of our",
    "start": "460360",
    "end": "463510"
  },
  {
    "text": "newest event sources for lambda first",
    "start": "463510",
    "end": "465970"
  },
  {
    "text": "the simple email service or the SAS as",
    "start": "465970",
    "end": "468760"
  },
  {
    "text": "is commonly called which added support",
    "start": "468760",
    "end": "470950"
  },
  {
    "text": "for inbound mail processing and when you",
    "start": "470950",
    "end": "473830"
  },
  {
    "text": "do that the rules engine for that is",
    "start": "473830",
    "end": "475720"
  },
  {
    "text": "built on lambda so that you can very",
    "start": "475720",
    "end": "478270"
  },
  {
    "text": "easily decide which mail should be",
    "start": "478270",
    "end": "480310"
  },
  {
    "text": "directed where which mail should be",
    "start": "480310",
    "end": "481840"
  },
  {
    "text": "rejected and so forth and wanted to",
    "start": "481840",
    "end": "484479"
  },
  {
    "text": "illustrate this in part because it's a",
    "start": "484479",
    "end": "486100"
  },
  {
    "text": "great example of things you can do in",
    "start": "486100",
    "end": "487750"
  },
  {
    "text": "your own applications you can use lambda",
    "start": "487750",
    "end": "490180"
  },
  {
    "text": "as a way to provide a custom arbitrary",
    "start": "490180",
    "end": "493540"
  },
  {
    "text": "coded interface to your customers so",
    "start": "493540",
    "end": "496330"
  },
  {
    "text": "they can extend and grow an ecosystem",
    "start": "496330",
    "end": "498310"
  },
  {
    "text": "around whatever your applications",
    "start": "498310",
    "end": "499750"
  },
  {
    "text": "already doing it was very easy for the",
    "start": "499750",
    "end": "502180"
  },
  {
    "text": "SES guys to take lambda and add this",
    "start": "502180",
    "end": "504669"
  },
  {
    "text": "arbitrary computing power and their end",
    "start": "504669",
    "end": "507070"
  },
  {
    "text": "users never have to suffer the burden of",
    "start": "507070",
    "end": "509020"
  },
  {
    "text": "figuring out how to stand up servers",
    "start": "509020",
    "end": "510580"
  },
  {
    "text": "manage capacity and so forth so the ease",
    "start": "510580",
    "end": "513280"
  },
  {
    "text": "of use that lambda fords makes it really",
    "start": "513280",
    "end": "515229"
  },
  {
    "text": "easy to build these computational",
    "start": "515229",
    "end": "517000"
  },
  {
    "text": "ecosystems and now another one we",
    "start": "517000",
    "end": "521020"
  },
  {
    "text": "launched back in September was cloud",
    "start": "521020",
    "end": "523330"
  },
  {
    "text": "watch logs processing so you can",
    "start": "523330",
    "end": "526660"
  },
  {
    "text": "actually have a do two different things",
    "start": "526660",
    "end": "528520"
  },
  {
    "text": "now here you can write lambda functions",
    "start": "528520",
    "end": "530350"
  },
  {
    "text": "which will send logs to cloud watch most",
    "start": "530350",
    "end": "533360"
  },
  {
    "text": "look at that in our demo in a few",
    "start": "533360",
    "end": "534709"
  },
  {
    "text": "minutes here but you can also take logs",
    "start": "534709",
    "end": "537230"
  },
  {
    "text": "regardless of where they came from and",
    "start": "537230",
    "end": "539000"
  },
  {
    "text": "process them with lambda so if you want",
    "start": "539000",
    "end": "541399"
  },
  {
    "text": "to do log indexing auditing",
    "start": "541399",
    "end": "543459"
  },
  {
    "text": "transformations search for various kinds",
    "start": "543459",
    "end": "545899"
  },
  {
    "text": "of data aggregate them all of those",
    "start": "545899",
    "end": "548060"
  },
  {
    "text": "capabilities you can do simply by",
    "start": "548060",
    "end": "549860"
  },
  {
    "text": "hooking up your logs to lambda and",
    "start": "549860",
    "end": "552140"
  },
  {
    "text": "lambda will automatically impedance maps",
    "start": "552140",
    "end": "554899"
  },
  {
    "text": "so as you write more things to the logs",
    "start": "554899",
    "end": "556670"
  },
  {
    "text": "more lambda functions get spun up as you",
    "start": "556670",
    "end": "559519"
  },
  {
    "text": "stop writing things to log those",
    "start": "559519",
    "end": "560779"
  },
  {
    "text": "functions get spun down and so behind",
    "start": "560779",
    "end": "562730"
  },
  {
    "text": "the scenes all of that gets taken care",
    "start": "562730",
    "end": "564529"
  },
  {
    "text": "of automatically so moving on to october",
    "start": "564529",
    "end": "569810"
  },
  {
    "text": "and reinvent i want to step you suit",
    "start": "569810",
    "end": "572750"
  },
  {
    "text": "through some of the things that jeff",
    "start": "572750",
    "end": "574100"
  },
  {
    "text": "mentioned in a little more detail first",
    "start": "574100",
    "end": "577010"
  },
  {
    "text": "we launched support for our third major",
    "start": "577010",
    "end": "578959"
  },
  {
    "text": "language python which is available in",
    "start": "578959",
    "end": "582170"
  },
  {
    "text": "all of our SDKs and from the command",
    "start": "582170",
    "end": "584089"
  },
  {
    "text": "line as well as in the lambda console",
    "start": "584089",
    "end": "586220"
  },
  {
    "text": "and we'll take a look in at that in a",
    "start": "586220",
    "end": "588320"
  },
  {
    "text": "demo very shortly now what are the",
    "start": "588320",
    "end": "590360"
  },
  {
    "text": "things we did with this is we also built",
    "start": "590360",
    "end": "592040"
  },
  {
    "text": "in photo3 so that if you want to use",
    "start": "592040",
    "end": "595310"
  },
  {
    "text": "Python to control other AWS services",
    "start": "595310",
    "end": "597949"
  },
  {
    "text": "that's really easy to do you don't even",
    "start": "597949",
    "end": "600019"
  },
  {
    "text": "have to bundle that library it's ready",
    "start": "600019",
    "end": "601670"
  },
  {
    "text": "to go of course if you have any other",
    "start": "601670",
    "end": "603560"
  },
  {
    "text": "libraries that you want to use including",
    "start": "603560",
    "end": "605209"
  },
  {
    "text": "native libraries you're free to bring",
    "start": "605209",
    "end": "606769"
  },
  {
    "text": "those as well we extended the running",
    "start": "606769",
    "end": "610699"
  },
  {
    "text": "time of lambda from 60 seconds to five",
    "start": "610699",
    "end": "612920"
  },
  {
    "text": "minutes and this allows especially some",
    "start": "612920",
    "end": "615560"
  },
  {
    "text": "of our customers who want to do more",
    "start": "615560",
    "end": "617000"
  },
  {
    "text": "heavyweight computations like video",
    "start": "617000",
    "end": "619100"
  },
  {
    "text": "transcoding or large log file processing",
    "start": "619100",
    "end": "621800"
  },
  {
    "text": "to be able to handle those larger data",
    "start": "621800",
    "end": "624140"
  },
  {
    "text": "objects and their computational",
    "start": "624140",
    "end": "625670"
  },
  {
    "text": "requirements inside of lambda I'm going",
    "start": "625670",
    "end": "631519"
  },
  {
    "text": "to take a quick aside here to talk a",
    "start": "631519",
    "end": "632959"
  },
  {
    "text": "little bit about the resource model for",
    "start": "632959",
    "end": "635029"
  },
  {
    "text": "lambda so you heard me mention power",
    "start": "635029",
    "end": "637339"
  },
  {
    "text": "levels and running time here how do",
    "start": "637339",
    "end": "639050"
  },
  {
    "text": "those two things play together so lambda",
    "start": "639050",
    "end": "641690"
  },
  {
    "text": "offers a very simplified notion of",
    "start": "641690",
    "end": "643579"
  },
  {
    "text": "resources instead of picking a type of",
    "start": "643579",
    "end": "645680"
  },
  {
    "text": "instance you tell us how much power you",
    "start": "645680",
    "end": "647660"
  },
  {
    "text": "want and you tell us that in the form of",
    "start": "647660",
    "end": "649610"
  },
  {
    "text": "asking for memory and you might choose",
    "start": "649610",
    "end": "652160"
  },
  {
    "text": "to ask for more because compute power",
    "start": "652160",
    "end": "655100"
  },
  {
    "text": "and memory moving move together in",
    "start": "655100",
    "end": "657110"
  },
  {
    "text": "lambda so more memory equals more",
    "start": "657110",
    "end": "658940"
  },
  {
    "text": "compute if you turn all the way up to",
    "start": "658940",
    "end": "660980"
  },
  {
    "text": "the highest power 1.5 gigabytes then you",
    "start": "660980",
    "end": "663949"
  },
  {
    "text": "also get the maximum amount",
    "start": "663949",
    "end": "666300"
  },
  {
    "text": "computing power now how do you pick well",
    "start": "666300",
    "end": "669540"
  },
  {
    "text": "if you've got an i/o task that doesn't",
    "start": "669540",
    "end": "671250"
  },
  {
    "text": "do a lot of computing and that maybe is",
    "start": "671250",
    "end": "673350"
  },
  {
    "text": "more focused on throughput than latency",
    "start": "673350",
    "end": "675570"
  },
  {
    "text": "you should set this as low as you can",
    "start": "675570",
    "end": "677310"
  },
  {
    "text": "save yourself some money however if",
    "start": "677310",
    "end": "680040"
  },
  {
    "text": "you've got a CPU intensive task then you",
    "start": "680040",
    "end": "682950"
  },
  {
    "text": "might want to turn that up because",
    "start": "682950",
    "end": "684090"
  },
  {
    "text": "you'll be able to get the job done",
    "start": "684090",
    "end": "685260"
  },
  {
    "text": "faster for about the same amount of",
    "start": "685260",
    "end": "687150"
  },
  {
    "text": "money or if you've got a bursty kind of",
    "start": "687150",
    "end": "691260"
  },
  {
    "text": "task that's very latency sensitive",
    "start": "691260",
    "end": "692930"
  },
  {
    "text": "turning it up will give you the maximum",
    "start": "692930",
    "end": "694860"
  },
  {
    "text": "amount of responsiveness so you get to",
    "start": "694860",
    "end": "697380"
  },
  {
    "text": "decide how you want to pick on that",
    "start": "697380",
    "end": "699360"
  },
  {
    "text": "price power continuum now once you've",
    "start": "699360",
    "end": "702990"
  },
  {
    "text": "made that decision the price scales",
    "start": "702990",
    "end": "704460"
  },
  {
    "text": "linearly with the compute power so this",
    "start": "704460",
    "end": "706440"
  },
  {
    "text": "is this is basically how you also",
    "start": "706440",
    "end": "708240"
  },
  {
    "text": "determine the the compute pricing for",
    "start": "708240",
    "end": "710400"
  },
  {
    "text": "lambda and then we bill you based on",
    "start": "710400",
    "end": "712830"
  },
  {
    "text": "your duration and we offer one tenth of",
    "start": "712830",
    "end": "716070"
  },
  {
    "text": "a second duration so you can run for as",
    "start": "716070",
    "end": "717930"
  },
  {
    "text": "little as a hundred milliseconds and we",
    "start": "717930",
    "end": "720270"
  },
  {
    "text": "round up to the next hundred",
    "start": "720270",
    "end": "721560"
  },
  {
    "text": "milliseconds so very very fine-grain",
    "start": "721560",
    "end": "723780"
  },
  {
    "text": "increments of compute time that you're",
    "start": "723780",
    "end": "725340"
  },
  {
    "text": "buying now that's head there's also a",
    "start": "725340",
    "end": "728550"
  },
  {
    "text": "very generous free tier you get a",
    "start": "728550",
    "end": "730410"
  },
  {
    "text": "million free requests and four hundred",
    "start": "730410",
    "end": "732240"
  },
  {
    "text": "thousand gigabytes seconds per month",
    "start": "732240",
    "end": "733890"
  },
  {
    "text": "every account in perpetuity and so you",
    "start": "733890",
    "end": "738210"
  },
  {
    "text": "have a lot of power there a lot of",
    "start": "738210",
    "end": "740010"
  },
  {
    "text": "requests that you can make if you're a",
    "start": "740010",
    "end": "741990"
  },
  {
    "text": "small development team maybe you're",
    "start": "741990",
    "end": "744030"
  },
  {
    "text": "working on an open source project you've",
    "start": "744030",
    "end": "745740"
  },
  {
    "text": "got some trial projects at home you can",
    "start": "745740",
    "end": "747840"
  },
  {
    "text": "often do all the work you want",
    "start": "747840",
    "end": "749610"
  },
  {
    "text": "completely for free and only when you",
    "start": "749610",
    "end": "751920"
  },
  {
    "text": "move into production do you actually end",
    "start": "751920",
    "end": "753600"
  },
  {
    "text": "up paying now we also launched support",
    "start": "753600",
    "end": "758160"
  },
  {
    "text": "for what was probably our most requested",
    "start": "758160",
    "end": "760020"
  },
  {
    "text": "feature at reinvent scheduled functions",
    "start": "760020",
    "end": "762810"
  },
  {
    "text": "lots of people want to be able to use",
    "start": "762810",
    "end": "764910"
  },
  {
    "text": "cron tasks they have background tasks",
    "start": "764910",
    "end": "767730"
  },
  {
    "text": "overnight tasks or they need to do",
    "start": "767730",
    "end": "770070"
  },
  {
    "text": "something like Poland eventsource maybe",
    "start": "770070",
    "end": "772070"
  },
  {
    "text": "SQS or some other kind of queuing system",
    "start": "772070",
    "end": "774660"
  },
  {
    "text": "where they need to be able to do",
    "start": "774660",
    "end": "776220"
  },
  {
    "text": "something repeatedly or on some kind of",
    "start": "776220",
    "end": "778680"
  },
  {
    "text": "schedule so schedule functions make this",
    "start": "778680",
    "end": "781080"
  },
  {
    "text": "easy you can pick recurring functions",
    "start": "781080",
    "end": "783690"
  },
  {
    "text": "you can use cron syntax and you set this",
    "start": "783690",
    "end": "786180"
  },
  {
    "text": "up through the lambda console will be",
    "start": "786180",
    "end": "788430"
  },
  {
    "text": "bringing SDK and see ally support for",
    "start": "788430",
    "end": "790770"
  },
  {
    "text": "the same feature to market in the",
    "start": "790770",
    "end": "792600"
  },
  {
    "text": "upcoming months now today you can go",
    "start": "792600",
    "end": "794910"
  },
  {
    "text": "down to five minutes of granularity will",
    "start": "794910",
    "end": "797100"
  },
  {
    "text": "eventually be reducing that to one",
    "start": "797100",
    "end": "798760"
  },
  {
    "text": "it but if you need to get more",
    "start": "798760",
    "end": "800710"
  },
  {
    "text": "fine-grained that's actually not that",
    "start": "800710",
    "end": "802510"
  },
  {
    "text": "hard all you do is you write a lambda",
    "start": "802510",
    "end": "804850"
  },
  {
    "text": "function and then you set a timer in the",
    "start": "804850",
    "end": "806950"
  },
  {
    "text": "language of your choice which can go off",
    "start": "806950",
    "end": "808510"
  },
  {
    "text": "as much as often as you want so you can",
    "start": "808510",
    "end": "811210"
  },
  {
    "text": "actually spin inside that that recurring",
    "start": "811210",
    "end": "813610"
  },
  {
    "text": "timer at the language level and may give",
    "start": "813610",
    "end": "816280"
  },
  {
    "text": "yourself a finer-grained timer if you",
    "start": "816280",
    "end": "817840"
  },
  {
    "text": "like and then finally we launched a",
    "start": "817840",
    "end": "823540"
  },
  {
    "text": "feature that a lot of enterprises have",
    "start": "823540",
    "end": "825700"
  },
  {
    "text": "been asking for which is versioning so",
    "start": "825700",
    "end": "828490"
  },
  {
    "text": "API gateway gives you the capability to",
    "start": "828490",
    "end": "830560"
  },
  {
    "text": "version the AP is that you use and now",
    "start": "830560",
    "end": "833890"
  },
  {
    "text": "lambda offers you the ability to version",
    "start": "833890",
    "end": "835540"
  },
  {
    "text": "the code that sits behind them now the",
    "start": "835540",
    "end": "838990"
  },
  {
    "text": "development model remains really simple",
    "start": "838990",
    "end": "840810"
  },
  {
    "text": "nothing changes if you don't want to use",
    "start": "840810",
    "end": "843100"
  },
  {
    "text": "versions works exactly as before anytime",
    "start": "843100",
    "end": "846010"
  },
  {
    "text": "you feel like it you can upload code to",
    "start": "846010",
    "end": "847660"
  },
  {
    "text": "lambda and the current version of the",
    "start": "847660",
    "end": "849280"
  },
  {
    "text": "function changes to be the code that",
    "start": "849280",
    "end": "850900"
  },
  {
    "text": "you've just uploaded so super simple but",
    "start": "850900",
    "end": "854500"
  },
  {
    "text": "now let's say that you've gotten to a",
    "start": "854500",
    "end": "855670"
  },
  {
    "text": "version that you like you think that",
    "start": "855670",
    "end": "857560"
  },
  {
    "text": "this is you know this is a really good",
    "start": "857560",
    "end": "858910"
  },
  {
    "text": "version you'd like to ship it out to",
    "start": "858910",
    "end": "860170"
  },
  {
    "text": "clients and you'd like to be able to",
    "start": "860170",
    "end": "861610"
  },
  {
    "text": "allow them to keep using it that's what",
    "start": "861610",
    "end": "863740"
  },
  {
    "text": "we call publishing so you publish a",
    "start": "863740",
    "end": "866170"
  },
  {
    "text": "version which creates an immutable",
    "start": "866170",
    "end": "867820"
  },
  {
    "text": "snapshot not just of the code but also",
    "start": "867820",
    "end": "870520"
  },
  {
    "text": "of the configuration so the power level",
    "start": "870520",
    "end": "872860"
  },
  {
    "text": "that you pick the name of the function",
    "start": "872860",
    "end": "874120"
  },
  {
    "text": "the IM role that you associated with it",
    "start": "874120",
    "end": "876970"
  },
  {
    "text": "to give it permissions to access other",
    "start": "876970",
    "end": "878470"
  },
  {
    "text": "AWS resources all of that gets bundled",
    "start": "878470",
    "end": "881110"
  },
  {
    "text": "up into an immutable snapshot and we",
    "start": "881110",
    "end": "883270"
  },
  {
    "text": "give you a simple name for that which is",
    "start": "883270",
    "end": "884680"
  },
  {
    "text": "basically the function colon some number",
    "start": "884680",
    "end": "887730"
  },
  {
    "text": "so that allows you to give a client this",
    "start": "887730",
    "end": "890140"
  },
  {
    "text": "this representation for a specific",
    "start": "890140",
    "end": "891940"
  },
  {
    "text": "version of the code now let's say you",
    "start": "891940",
    "end": "894910"
  },
  {
    "text": "want to go a step further and you want",
    "start": "894910",
    "end": "896710"
  },
  {
    "text": "to define pneumonic version you want to",
    "start": "896710",
    "end": "899470"
  },
  {
    "text": "define say the production version of",
    "start": "899470",
    "end": "901570"
  },
  {
    "text": "your code or the development version of",
    "start": "901570",
    "end": "903250"
  },
  {
    "text": "your code but you want to be able to",
    "start": "903250",
    "end": "904810"
  },
  {
    "text": "change it over time for that we",
    "start": "904810",
    "end": "907210"
  },
  {
    "text": "implemented what we call aliases if",
    "start": "907210",
    "end": "909010"
  },
  {
    "text": "you've used symbolic links and in UNIX",
    "start": "909010",
    "end": "911890"
  },
  {
    "text": "then you know exactly how these work",
    "start": "911890",
    "end": "913180"
  },
  {
    "text": "today they're basically just a label and",
    "start": "913180",
    "end": "915640"
  },
  {
    "text": "you can decide which immutable version",
    "start": "915640",
    "end": "917710"
  },
  {
    "text": "that label points to and you can change",
    "start": "917710",
    "end": "919720"
  },
  {
    "text": "it at any time so you can now very",
    "start": "919720",
    "end": "922000"
  },
  {
    "text": "easily do roll forward and roll backward",
    "start": "922000",
    "end": "924070"
  },
  {
    "text": "with lambda just by updating that",
    "start": "924070",
    "end": "925510"
  },
  {
    "text": "version setting and then lambda will",
    "start": "925510",
    "end": "927610"
  },
  {
    "text": "take care of the hard work of",
    "start": "927610",
    "end": "928810"
  },
  {
    "text": "redeploying all of your software",
    "start": "928810",
    "end": "931710"
  },
  {
    "text": "cross the fleet to make that happen now",
    "start": "931710",
    "end": "938160"
  },
  {
    "text": "one of the really exciting things we",
    "start": "938160",
    "end": "939450"
  },
  {
    "text": "launched to reinvent was the support for",
    "start": "939450",
    "end": "941700"
  },
  {
    "text": "our new Internet of Things service AWS",
    "start": "941700",
    "end": "943740"
  },
  {
    "text": "IOT and that could be a whole series of",
    "start": "943740",
    "end": "946800"
  },
  {
    "text": "talks in its own right including some of",
    "start": "946800",
    "end": "948600"
  },
  {
    "text": "the ones that are going on here today so",
    "start": "948600",
    "end": "950460"
  },
  {
    "text": "I'm not going to go into that in any",
    "start": "950460",
    "end": "951600"
  },
  {
    "text": "detail what I wanted to talk about was",
    "start": "951600",
    "end": "953820"
  },
  {
    "text": "just the use of lambda with AWS IOT so",
    "start": "953820",
    "end": "958290"
  },
  {
    "text": "one of the nice things about the way",
    "start": "958290",
    "end": "960900"
  },
  {
    "text": "this works is that it's a lot like using",
    "start": "960900",
    "end": "964200"
  },
  {
    "text": "API gateway so in this case it connects",
    "start": "964200",
    "end": "967650"
  },
  {
    "text": "devices which are sending data to the",
    "start": "967650",
    "end": "970050"
  },
  {
    "text": "cloud to AWS lambda so when device",
    "start": "970050",
    "end": "973770"
  },
  {
    "text": "information comes in the message broker",
    "start": "973770",
    "end": "975750"
  },
  {
    "text": "routes it the rules engine decides if",
    "start": "975750",
    "end": "978600"
  },
  {
    "text": "it's information that's interesting that",
    "start": "978600",
    "end": "980370"
  },
  {
    "text": "should fire off some kind of activity",
    "start": "980370",
    "end": "982020"
  },
  {
    "text": "and if it is then it sends it over to",
    "start": "982020",
    "end": "985110"
  },
  {
    "text": "lambda and so you can build an IOT",
    "start": "985110",
    "end": "987810"
  },
  {
    "text": "back-end that runs in a fully managed",
    "start": "987810",
    "end": "990180"
  },
  {
    "text": "way with no servers either for the",
    "start": "990180",
    "end": "992100"
  },
  {
    "text": "processing and ingestion of the data or",
    "start": "992100",
    "end": "994140"
  },
  {
    "text": "for the actual running of the backend",
    "start": "994140",
    "end": "996090"
  },
  {
    "text": "code and finally we added support for",
    "start": "996090",
    "end": "1002450"
  },
  {
    "text": "the Tokyo region for API gateway which",
    "start": "1002450",
    "end": "1005210"
  },
  {
    "text": "gives us now a complete trio of IOT API",
    "start": "1005210",
    "end": "1009050"
  },
  {
    "text": "gateway and lambda in each of these four",
    "start": "1009050",
    "end": "1011720"
  },
  {
    "text": "regions Tokyo Dublin and us east and",
    "start": "1011720",
    "end": "1015290"
  },
  {
    "text": "west so we've got a complete stack of",
    "start": "1015290",
    "end": "1018230"
  },
  {
    "text": "all three of those in each of those four",
    "start": "1018230",
    "end": "1019430"
  },
  {
    "text": "regions now and finally we've been busy",
    "start": "1019430",
    "end": "1023510"
  },
  {
    "text": "even since reinvent now I tell you about",
    "start": "1023510",
    "end": "1026000"
  },
  {
    "text": "a couple of things we've done here so",
    "start": "1026000",
    "end": "1028280"
  },
  {
    "text": "when API gateway we went back and added",
    "start": "1028280",
    "end": "1030680"
  },
  {
    "text": "support for both the API and CLI this is",
    "start": "1030680",
    "end": "1033350"
  },
  {
    "text": "one of our most requested features",
    "start": "1033350",
    "end": "1034610"
  },
  {
    "text": "because we launched initially just with",
    "start": "1034610",
    "end": "1036680"
  },
  {
    "text": "console support and this allows you to",
    "start": "1036680",
    "end": "1039230"
  },
  {
    "text": "build full kamata mation and deployment",
    "start": "1039230",
    "end": "1041500"
  },
  {
    "text": "infrastructure around your AP is so you",
    "start": "1041500",
    "end": "1045020"
  },
  {
    "text": "can do things now like define us make a",
    "start": "1045020",
    "end": "1047480"
  },
  {
    "text": "swagger definition and then",
    "start": "1047480",
    "end": "1048620"
  },
  {
    "text": "programmatically update that to create",
    "start": "1048620",
    "end": "1050510"
  },
  {
    "text": "or modify ap is you can also",
    "start": "1050510",
    "end": "1053180"
  },
  {
    "text": "programmatically generate custom client",
    "start": "1053180",
    "end": "1055370"
  },
  {
    "text": "SDKs as well as manage and monitor those",
    "start": "1055370",
    "end": "1057830"
  },
  {
    "text": "AP is so anything you can do in the",
    "start": "1057830",
    "end": "1059450"
  },
  {
    "text": "console with API gateway you can now do",
    "start": "1059450",
    "end": "1061880"
  },
  {
    "text": "programmatically as well",
    "start": "1061880",
    "end": "1063130"
  },
  {
    "text": "and we put an easy button in four cores",
    "start": "1063130",
    "end": "1066130"
  },
  {
    "text": "one of the things that we often see",
    "start": "1066130",
    "end": "1069010"
  },
  {
    "text": "people doing is they set up cores",
    "start": "1069010",
    "end": "1070510"
  },
  {
    "text": "especially when they want to use API",
    "start": "1070510",
    "end": "1072220"
  },
  {
    "text": "gateway with lambda to serve dynamic web",
    "start": "1072220",
    "end": "1074470"
  },
  {
    "text": "content and that took a few steps",
    "start": "1074470",
    "end": "1076540"
  },
  {
    "text": "initially in the API gateways in the API",
    "start": "1076540",
    "end": "1079180"
  },
  {
    "text": "gateway console now there's a simple",
    "start": "1079180",
    "end": "1081460"
  },
  {
    "text": "button that you just press it and it",
    "start": "1081460",
    "end": "1082810"
  },
  {
    "text": "sets all the cores configuration for you",
    "start": "1082810",
    "end": "1084640"
  },
  {
    "text": "automatically so it makes it really easy",
    "start": "1084640",
    "end": "1086500"
  },
  {
    "text": "to do one of the more common",
    "start": "1086500",
    "end": "1087790"
  },
  {
    "text": "configurations and then I want to",
    "start": "1087790",
    "end": "1091210"
  },
  {
    "text": "mention just one more thing that we're",
    "start": "1091210",
    "end": "1092830"
  },
  {
    "text": "currently working on planning to ship in",
    "start": "1092830",
    "end": "1094870"
  },
  {
    "text": "the upcoming months which is v pc access",
    "start": "1094870",
    "end": "1097450"
  },
  {
    "text": "for lambda so one of the most common",
    "start": "1097450",
    "end": "1100360"
  },
  {
    "text": "requests that we get is the ability to",
    "start": "1100360",
    "end": "1102730"
  },
  {
    "text": "access resources that are locked behind",
    "start": "1102730",
    "end": "1105490"
  },
  {
    "text": "a VPC boundary especially things like",
    "start": "1105490",
    "end": "1108250"
  },
  {
    "text": "sequel databases like RDS elastic cash",
    "start": "1108250",
    "end": "1111850"
  },
  {
    "text": "instances private endpoints on ec2 and",
    "start": "1111850",
    "end": "1114520"
  },
  {
    "text": "on all of those things that you put",
    "start": "1114520",
    "end": "1116080"
  },
  {
    "text": "behind VPC for security purposes and so",
    "start": "1116080",
    "end": "1119350"
  },
  {
    "text": "we're working now on the VPC feature for",
    "start": "1119350",
    "end": "1121810"
  },
  {
    "text": "lambda which will let you run any of",
    "start": "1121810",
    "end": "1123340"
  },
  {
    "text": "your lambda code inside of your v pc so",
    "start": "1123340",
    "end": "1126430"
  },
  {
    "text": "it'll have access to all of those",
    "start": "1126430",
    "end": "1127780"
  },
  {
    "text": "resources alright and take a little",
    "start": "1127780",
    "end": "1133660"
  },
  {
    "text": "break from the slides here and show you",
    "start": "1133660",
    "end": "1139570"
  },
  {
    "text": "some of the new features that we brought",
    "start": "1139570",
    "end": "1141070"
  },
  {
    "text": "to market so here i am in the lambda",
    "start": "1141070",
    "end": "1143560"
  },
  {
    "text": "console i'm just taking a look at the",
    "start": "1143560",
    "end": "1146200"
  },
  {
    "text": "the top level of the console which lists",
    "start": "1146200",
    "end": "1148060"
  },
  {
    "text": "all my functions and i'll go ahead and",
    "start": "1148060",
    "end": "1149980"
  },
  {
    "text": "select new function creation here and",
    "start": "1149980",
    "end": "1151960"
  },
  {
    "text": "what this takes me to is what we call",
    "start": "1151960",
    "end": "1154150"
  },
  {
    "text": "our blueprints page so while you can",
    "start": "1154150",
    "end": "1157150"
  },
  {
    "text": "bypass blueprints they offer a really",
    "start": "1157150",
    "end": "1159280"
  },
  {
    "text": "easy way to get started and they give",
    "start": "1159280",
    "end": "1161470"
  },
  {
    "text": "you a set of templates for common for",
    "start": "1161470",
    "end": "1163570"
  },
  {
    "text": "commonly used code so when we added",
    "start": "1163570",
    "end": "1166150"
  },
  {
    "text": "Python we added a bunch of new",
    "start": "1166150",
    "end": "1167950"
  },
  {
    "text": "blueprints written in Python to make it",
    "start": "1167950",
    "end": "1169930"
  },
  {
    "text": "easy to use that language as well so i'm",
    "start": "1169930",
    "end": "1172540"
  },
  {
    "text": "going to show you one in particular here",
    "start": "1172540",
    "end": "1173890"
  },
  {
    "text": "that we've designed to run in",
    "start": "1173890",
    "end": "1175480"
  },
  {
    "text": "conjunction with our new scheduling",
    "start": "1175480",
    "end": "1177010"
  },
  {
    "text": "feature we call this the lambda canaria",
    "start": "1177010",
    "end": "1180210"
  },
  {
    "text": "now what the canary does is very simple",
    "start": "1180210",
    "end": "1183030"
  },
  {
    "text": "it basically sets up a recurring",
    "start": "1183030",
    "end": "1185770"
  },
  {
    "text": "schedule with the lambda function and it",
    "start": "1185770",
    "end": "1188110"
  },
  {
    "text": "goes and checks whether or not a",
    "start": "1188110",
    "end": "1189280"
  },
  {
    "text": "particular HTTP endpoint is alive and",
    "start": "1189280",
    "end": "1192370"
  },
  {
    "text": "has a and has a particular value",
    "start": "1192370",
    "end": "1194380"
  },
  {
    "text": "in it right so it just gets that HTML",
    "start": "1194380",
    "end": "1196930"
  },
  {
    "text": "h back and then it looks to see if it",
    "start": "1196930",
    "end": "1198490"
  },
  {
    "text": "can find a particular string so here i",
    "start": "1198490",
    "end": "1202300"
  },
  {
    "text": "am i'm going to configure what we call",
    "start": "1202300",
    "end": "1204250"
  },
  {
    "text": "the event source here which in this case",
    "start": "1204250",
    "end": "1205720"
  },
  {
    "text": "is a scheduled event if we were building",
    "start": "1205720",
    "end": "1208210"
  },
  {
    "text": "something else like say an s3 handler",
    "start": "1208210",
    "end": "1210430"
  },
  {
    "text": "this would have a select the s3 bucket",
    "start": "1210430",
    "end": "1212890"
  },
  {
    "text": "we want it to use and this was going to",
    "start": "1212890",
    "end": "1215140"
  },
  {
    "text": "run every five minutes so i'll go ahead",
    "start": "1215140",
    "end": "1216700"
  },
  {
    "text": "and accept that I'll give my function to",
    "start": "1216700",
    "end": "1222280"
  },
  {
    "text": "name and you can see here how easy it is",
    "start": "1222280",
    "end": "1224800"
  },
  {
    "text": "to create a new function the run time",
    "start": "1224800",
    "end": "1227080"
  },
  {
    "text": "here is set to python 27 which is our",
    "start": "1227080",
    "end": "1229210"
  },
  {
    "text": "newest language and what the blueprint",
    "start": "1229210",
    "end": "1234220"
  },
  {
    "text": "has done now in addition to get filling",
    "start": "1234220",
    "end": "1235780"
  },
  {
    "text": "out the schedule is it's filled out the",
    "start": "1235780",
    "end": "1237700"
  },
  {
    "text": "code for us as well and you can see I",
    "start": "1237700",
    "end": "1240130"
  },
  {
    "text": "think everything except the final line",
    "start": "1240130",
    "end": "1242050"
  },
  {
    "text": "of code here so this is all the this is",
    "start": "1242050",
    "end": "1243790"
  },
  {
    "text": "the entire code for the canary and what",
    "start": "1243790",
    "end": "1246940"
  },
  {
    "text": "it's going to do in this case is we've",
    "start": "1246940",
    "end": "1248650"
  },
  {
    "text": "kind of pre programmed it to pick our",
    "start": "1248650",
    "end": "1250480"
  },
  {
    "text": "own amazon.com retail site and it's",
    "start": "1250480",
    "end": "1254320"
  },
  {
    "text": "going to look for a particular string",
    "start": "1254320",
    "end": "1255640"
  },
  {
    "text": "called online shopping and every five",
    "start": "1255640",
    "end": "1257920"
  },
  {
    "text": "minutes is going to go ahead and check",
    "start": "1257920",
    "end": "1259300"
  },
  {
    "text": "and make sure that that site is still up",
    "start": "1259300",
    "end": "1261040"
  },
  {
    "text": "and still but still possesses that",
    "start": "1261040",
    "end": "1262960"
  },
  {
    "text": "particular string in it so you can use",
    "start": "1262960",
    "end": "1265390"
  },
  {
    "text": "this for the side of your choice or",
    "start": "1265390",
    "end": "1266920"
  },
  {
    "text": "maybe to set up a more elaborate canary",
    "start": "1266920",
    "end": "1269140"
  },
  {
    "text": "that checks to make sure that you know",
    "start": "1269140",
    "end": "1270910"
  },
  {
    "text": "your retail website is up and running or",
    "start": "1270910",
    "end": "1273160"
  },
  {
    "text": "that some other HTTP or HTTPS endpoint",
    "start": "1273160",
    "end": "1275620"
  },
  {
    "text": "that you set up is doing what you expect",
    "start": "1275620",
    "end": "1279270"
  },
  {
    "text": "now the code itself is very simple but",
    "start": "1279720",
    "end": "1282790"
  },
  {
    "text": "under the covers lambda and the",
    "start": "1282790",
    "end": "1284770"
  },
  {
    "text": "scheduler events are going to make sure",
    "start": "1284770",
    "end": "1286330"
  },
  {
    "text": "that this is highly available fault",
    "start": "1286330",
    "end": "1288310"
  },
  {
    "text": "tolerant and can run as many copies of",
    "start": "1288310",
    "end": "1290590"
  },
  {
    "text": "it as we're needed now we're going to go",
    "start": "1290590",
    "end": "1293290"
  },
  {
    "text": "ahead and complete the creation of this",
    "start": "1293290",
    "end": "1294760"
  },
  {
    "text": "i'm going to pick the the role now in",
    "start": "1294760",
    "end": "1298150"
  },
  {
    "text": "this case the basic execution role is",
    "start": "1298150",
    "end": "1300820"
  },
  {
    "text": "good enough because we don't need access",
    "start": "1300820",
    "end": "1302260"
  },
  {
    "text": "to a lot of other AWS resources if we",
    "start": "1302260",
    "end": "1305020"
  },
  {
    "text": "were going to use dynamo s3 or something",
    "start": "1305020",
    "end": "1307090"
  },
  {
    "text": "else here we would need to pick a role",
    "start": "1307090",
    "end": "1308500"
  },
  {
    "text": "that would enable us to do all of that",
    "start": "1308500",
    "end": "1309910"
  },
  {
    "text": "and down here we can select the power",
    "start": "1309910",
    "end": "1313120"
  },
  {
    "text": "level for example I could turn this up a",
    "start": "1313120",
    "end": "1315430"
  },
  {
    "text": "little bit and then go ahead and move on",
    "start": "1315430",
    "end": "1318280"
  },
  {
    "text": "to the final page now I'm going to let",
    "start": "1318280",
    "end": "1321610"
  },
  {
    "text": "this set to be enabled later we aren't",
    "start": "1321610",
    "end": "1323440"
  },
  {
    "text": "actually going to sit here and wait for",
    "start": "1323440",
    "end": "1324520"
  },
  {
    "text": "five minutes to watch this accrue I'll",
    "start": "1324520",
    "end": "1327460"
  },
  {
    "text": "go ahead and create the function",
    "start": "1327460",
    "end": "1329299"
  },
  {
    "text": "and that click is all it took to stand",
    "start": "1329299",
    "end": "1332269"
  },
  {
    "text": "up a robust fault-tolerant scalable",
    "start": "1332269",
    "end": "1335539"
  },
  {
    "text": "function in this region now we're ready",
    "start": "1335539",
    "end": "1337340"
  },
  {
    "text": "to go we can go turn this on if we want",
    "start": "1337340",
    "end": "1338989"
  },
  {
    "text": "to get those scheduled events but",
    "start": "1338989",
    "end": "1341299"
  },
  {
    "text": "instead what I'm going to do is go ahead",
    "start": "1341299",
    "end": "1342679"
  },
  {
    "text": "and test this now so I'm going to go",
    "start": "1342679",
    "end": "1345590"
  },
  {
    "text": "ahead and pick a scheduled event sample",
    "start": "1345590",
    "end": "1347749"
  },
  {
    "text": "this just mocks up what a scheduler",
    "start": "1347749",
    "end": "1350419"
  },
  {
    "text": "event looks like to lambda and then",
    "start": "1350419",
    "end": "1352700"
  },
  {
    "text": "we're going to go ahead and send it to",
    "start": "1352700",
    "end": "1353720"
  },
  {
    "text": "send it to lambda and watch what our",
    "start": "1353720",
    "end": "1355249"
  },
  {
    "text": "function does so I'll go ahead and hit",
    "start": "1355249",
    "end": "1362179"
  },
  {
    "text": "the test button and you can see it",
    "start": "1362179",
    "end": "1366499"
  },
  {
    "text": "returns the result here which isn't very",
    "start": "1366499",
    "end": "1367940"
  },
  {
    "text": "interesting it's just the input of the",
    "start": "1367940",
    "end": "1370159"
  },
  {
    "text": "time from the scheduled event what's",
    "start": "1370159",
    "end": "1372350"
  },
  {
    "text": "more interesting is what sits in the log",
    "start": "1372350",
    "end": "1374330"
  },
  {
    "text": "here so you can see that it actually",
    "start": "1374330",
    "end": "1376190"
  },
  {
    "text": "went out and it checked that particular",
    "start": "1376190",
    "end": "1377779"
  },
  {
    "text": "site and the check passed in this case",
    "start": "1377779",
    "end": "1379489"
  },
  {
    "text": "and if we were now go to enable this",
    "start": "1379489",
    "end": "1381710"
  },
  {
    "text": "we'd have a canary that I mean for as",
    "start": "1381710",
    "end": "1383720"
  },
  {
    "text": "long as we allow it to keep running",
    "start": "1383720",
    "end": "1384919"
  },
  {
    "text": "we'll keep checking the retail site to",
    "start": "1384919",
    "end": "1386809"
  },
  {
    "text": "make sure that it's functioning properly",
    "start": "1386809",
    "end": "1390008"
  },
  {
    "text": "now if we back up we can take a look at",
    "start": "1391509",
    "end": "1395059"
  },
  {
    "text": "our function management page again here",
    "start": "1395059",
    "end": "1400929"
  },
  {
    "text": "I'm actually going to drill into this",
    "start": "1400929",
    "end": "1402889"
  },
  {
    "text": "one more time and show you the",
    "start": "1402889",
    "end": "1404149"
  },
  {
    "text": "monitoring so this is this gives us kind",
    "start": "1404149",
    "end": "1407840"
  },
  {
    "text": "of a quick dashboard we can see that",
    "start": "1407840",
    "end": "1409369"
  },
  {
    "text": "we've made some in vocations and we get",
    "start": "1409369",
    "end": "1410960"
  },
  {
    "text": "some rough sentence of the duration we",
    "start": "1410960",
    "end": "1413090"
  },
  {
    "text": "could also hop over to the cloud watch",
    "start": "1413090",
    "end": "1414649"
  },
  {
    "text": "service and we can take a look at that",
    "start": "1414649",
    "end": "1416419"
  },
  {
    "text": "same information here so we could check",
    "start": "1416419",
    "end": "1419210"
  },
  {
    "text": "out our our lambda metrics down here",
    "start": "1419210",
    "end": "1421909"
  },
  {
    "text": "this will be a copy of the dashboard",
    "start": "1421909",
    "end": "1423619"
  },
  {
    "text": "with a few more controls for you to get",
    "start": "1423619",
    "end": "1425239"
  },
  {
    "text": "a finer grain look we can also hop in",
    "start": "1425239",
    "end": "1427999"
  },
  {
    "text": "and take a look at the logs this is the",
    "start": "1427999",
    "end": "1429649"
  },
  {
    "text": "same log that the console showed you can",
    "start": "1429649",
    "end": "1432919"
  },
  {
    "text": "see it over here in the form of the log",
    "start": "1432919",
    "end": "1435470"
  },
  {
    "text": "groups and the information there so you",
    "start": "1435470",
    "end": "1437509"
  },
  {
    "text": "can see the complete copy of the log",
    "start": "1437509",
    "end": "1439129"
  },
  {
    "text": "here and this of course you'll see",
    "start": "1439129",
    "end": "1440869"
  },
  {
    "text": "regardless of whether or not you're",
    "start": "1440869",
    "end": "1442100"
  },
  {
    "text": "working in the console or not this is",
    "start": "1442100",
    "end": "1443749"
  },
  {
    "text": "where the logs will always show up",
    "start": "1443749",
    "end": "1447129"
  },
  {
    "text": "alright and then one more thing I'm",
    "start": "1450149",
    "end": "1452140"
  },
  {
    "text": "going to give you a quick look at",
    "start": "1452140",
    "end": "1454120"
  },
  {
    "text": "versioning here so what we've done so",
    "start": "1454120",
    "end": "1456519"
  },
  {
    "text": "far is is worked on the latest version",
    "start": "1456519",
    "end": "1458919"
  },
  {
    "text": "of this code and if we keep changing it",
    "start": "1458919",
    "end": "1461049"
  },
  {
    "text": "will keep changing the latest version",
    "start": "1461049",
    "end": "1462480"
  },
  {
    "text": "but let's say we like what we've just",
    "start": "1462480",
    "end": "1464500"
  },
  {
    "text": "done we can come in here and select",
    "start": "1464500",
    "end": "1467169"
  },
  {
    "text": "publish we can give it an optional",
    "start": "1467169",
    "end": "1470620"
  },
  {
    "text": "description and now we've created",
    "start": "1470620",
    "end": "1472899"
  },
  {
    "text": "version 1 of that code now we can hand",
    "start": "1472899",
    "end": "1476169"
  },
  {
    "text": "out and Arne for this a resource",
    "start": "1476169",
    "end": "1478029"
  },
  {
    "text": "identifier that will always and forever",
    "start": "1478029",
    "end": "1480220"
  },
  {
    "text": "mean exactly that copy of the code with",
    "start": "1480220",
    "end": "1482889"
  },
  {
    "text": "exactly that set of configurations and",
    "start": "1482889",
    "end": "1485610"
  },
  {
    "text": "we can go back to the latest and",
    "start": "1485610",
    "end": "1488049"
  },
  {
    "text": "continue to make changes here I'll just",
    "start": "1488049",
    "end": "1489580"
  },
  {
    "text": "make some innocuous change go ahead and",
    "start": "1489580",
    "end": "1492370"
  },
  {
    "text": "save it and I'll publish again so we can",
    "start": "1492370",
    "end": "1496120"
  },
  {
    "text": "create version 2 now I've got version 1",
    "start": "1496120",
    "end": "1499330"
  },
  {
    "text": "and version 2 so I can discriminate",
    "start": "1499330",
    "end": "1500830"
  },
  {
    "text": "between the two of them and let's say we",
    "start": "1500830",
    "end": "1503019"
  },
  {
    "text": "want to create a new alias here so I'll",
    "start": "1503019",
    "end": "1505450"
  },
  {
    "text": "go ahead and create an alias will call",
    "start": "1505450",
    "end": "1508360"
  },
  {
    "text": "this production so we can define what",
    "start": "1508360",
    "end": "1511419"
  },
  {
    "text": "production means and i'll make that the",
    "start": "1511419",
    "end": "1515200"
  },
  {
    "text": "latest version so now we can see our",
    "start": "1515200",
    "end": "1519070"
  },
  {
    "text": "alias our production a list which is",
    "start": "1519070",
    "end": "1521740"
  },
  {
    "text": "pointing to version two if we go back",
    "start": "1521740",
    "end": "1523990"
  },
  {
    "text": "two versions we can see that is indeed",
    "start": "1523990",
    "end": "1525549"
  },
  {
    "text": "the where the alias is sitting and we",
    "start": "1525549",
    "end": "1528309"
  },
  {
    "text": "can also go in and change this so I can",
    "start": "1528309",
    "end": "1532539"
  },
  {
    "text": "go back to the configuration of this",
    "start": "1532539",
    "end": "1534250"
  },
  {
    "text": "alias and I could switch this to be one",
    "start": "1534250",
    "end": "1536649"
  },
  {
    "text": "here and simply by clicking on that I've",
    "start": "1536649",
    "end": "1538990"
  },
  {
    "text": "done a rollback and behind the scenes",
    "start": "1538990",
    "end": "1540970"
  },
  {
    "text": "lambda will wipe out all of the copies",
    "start": "1540970",
    "end": "1543190"
  },
  {
    "text": "of two and recreate the your fleet with",
    "start": "1543190",
    "end": "1546399"
  },
  {
    "text": "all the copies of one and all of and the",
    "start": "1546399",
    "end": "1548980"
  },
  {
    "text": "next time you start making requests",
    "start": "1548980",
    "end": "1550539"
  },
  {
    "text": "you'll automatically get the old version",
    "start": "1550539",
    "end": "1552309"
  },
  {
    "text": "again so it's very simple now to do to",
    "start": "1552309",
    "end": "1555010"
  },
  {
    "text": "do roll forward and roll back",
    "start": "1555010",
    "end": "1558149"
  },
  {
    "text": "okay I'm going to switch gears now and",
    "start": "1563640",
    "end": "1566380"
  },
  {
    "text": "move into the other part of the talk",
    "start": "1566380",
    "end": "1568200"
  },
  {
    "text": "having shown you a little bit about what",
    "start": "1568200",
    "end": "1570220"
  },
  {
    "text": "lambda is in some of the new features",
    "start": "1570220",
    "end": "1571570"
  },
  {
    "text": "let's talk about what you can do with it",
    "start": "1571570",
    "end": "1574110"
  },
  {
    "text": "so we'll step through a series of",
    "start": "1574110",
    "end": "1576220"
  },
  {
    "text": "recipes here that illustrate some of the",
    "start": "1576220",
    "end": "1579250"
  },
  {
    "text": "power of lambda particularly for",
    "start": "1579250",
    "end": "1581530"
  },
  {
    "text": "building these cerberus applications so",
    "start": "1581530",
    "end": "1585100"
  },
  {
    "text": "the first and probably the most obvious",
    "start": "1585100",
    "end": "1586600"
  },
  {
    "text": "one here is that you can build backends",
    "start": "1586600",
    "end": "1588550"
  },
  {
    "text": "for mobile apps IOT apps web apps in a",
    "start": "1588550",
    "end": "1592090"
  },
  {
    "text": "way that is completely scalable and also",
    "start": "1592090",
    "end": "1594340"
  },
  {
    "text": "service how do you do that well for",
    "start": "1594340",
    "end": "1597970"
  },
  {
    "text": "mobile apps you will use the AWS Mobile",
    "start": "1597970",
    "end": "1600100"
  },
  {
    "text": "SDK and you can optionally use Amazon",
    "start": "1600100",
    "end": "1602710"
  },
  {
    "text": "cognito for authentication and that",
    "start": "1602710",
    "end": "1605080"
  },
  {
    "text": "takes care of the client side on the",
    "start": "1605080",
    "end": "1606520"
  },
  {
    "text": "device for IOT you would use IOT clients",
    "start": "1606520",
    "end": "1611380"
  },
  {
    "text": "and then of course you would configure",
    "start": "1611380",
    "end": "1612790"
  },
  {
    "text": "the AWS IOT service as well and set",
    "start": "1612790",
    "end": "1615670"
  },
  {
    "text": "those rules engines up that I showed you",
    "start": "1615670",
    "end": "1617110"
  },
  {
    "text": "earlier to point to your lambda code in",
    "start": "1617110",
    "end": "1620520"
  },
  {
    "text": "lambda you can go to that blueprints",
    "start": "1620520",
    "end": "1623320"
  },
  {
    "text": "page and pick the mobile backend",
    "start": "1623320",
    "end": "1624850"
  },
  {
    "text": "blueprint and we'll take a look at that",
    "start": "1624850",
    "end": "1626320"
  },
  {
    "text": "in a in a second here in another demo",
    "start": "1626320",
    "end": "1628240"
  },
  {
    "text": "you can see what that looks like and",
    "start": "1628240",
    "end": "1630120"
  },
  {
    "text": "then you need a place to store your data",
    "start": "1630120",
    "end": "1632200"
  },
  {
    "text": "so dynamodb being an obvious one where",
    "start": "1632200",
    "end": "1634960"
  },
  {
    "text": "you can place your data especially for",
    "start": "1634960",
    "end": "1636940"
  },
  {
    "text": "crud type services very easy to use",
    "start": "1636940",
    "end": "1638940"
  },
  {
    "text": "scalable no sequel database and with",
    "start": "1638940",
    "end": "1642340"
  },
  {
    "text": "those three things in combination you've",
    "start": "1642340",
    "end": "1644470"
  },
  {
    "text": "now got a back-end that can scale from",
    "start": "1644470",
    "end": "1647230"
  },
  {
    "text": "your development days all the way up to",
    "start": "1647230",
    "end": "1649870"
  },
  {
    "text": "a full-scale production deployment",
    "start": "1649870",
    "end": "1651760"
  },
  {
    "text": "without you having to change any of the",
    "start": "1651760",
    "end": "1653860"
  },
  {
    "text": "code or any of the configurations it's",
    "start": "1653860",
    "end": "1656200"
  },
  {
    "text": "all ready to go so that distance between",
    "start": "1656200",
    "end": "1658840"
  },
  {
    "text": "hey it worked once on my box is",
    "start": "1658840",
    "end": "1661150"
  },
  {
    "text": "functionally complete and it's ready to",
    "start": "1661150",
    "end": "1663520"
  },
  {
    "text": "roll out to production to our customers",
    "start": "1663520",
    "end": "1665370"
  },
  {
    "text": "vanishes all those challenging things",
    "start": "1665370",
    "end": "1668200"
  },
  {
    "text": "that stand in the way like setting up",
    "start": "1668200",
    "end": "1669820"
  },
  {
    "text": "monitoring and logging and going back",
    "start": "1669820",
    "end": "1671770"
  },
  {
    "text": "and wearing about do you have enough",
    "start": "1671770",
    "end": "1673390"
  },
  {
    "text": "capacity what happens if you get a burst",
    "start": "1673390",
    "end": "1675760"
  },
  {
    "text": "of customers all at once all those",
    "start": "1675760",
    "end": "1677920"
  },
  {
    "text": "become AWS is problems and you get to",
    "start": "1677920",
    "end": "1680320"
  },
  {
    "text": "just focus on the code so that was",
    "start": "1680320",
    "end": "1686110"
  },
  {
    "text": "mobile and IOT how would we change this",
    "start": "1686110",
    "end": "1688030"
  },
  {
    "text": "for web apps well we bring two",
    "start": "1688030",
    "end": "1690730"
  },
  {
    "text": "additional things into the mix here",
    "start": "1690730",
    "end": "1692590"
  },
  {
    "text": "one of them is s3 for serving static",
    "start": "1692590",
    "end": "1695559"
  },
  {
    "text": "content so this is a feature we've had",
    "start": "1695559",
    "end": "1697659"
  },
  {
    "text": "for a long time you can put your media",
    "start": "1697659",
    "end": "1700120"
  },
  {
    "text": "and other static assets in an s3 bucket",
    "start": "1700120",
    "end": "1702580"
  },
  {
    "text": "considers configure static web site",
    "start": "1702580",
    "end": "1704890"
  },
  {
    "text": "hosting and then you can serve those up",
    "start": "1704890",
    "end": "1706450"
  },
  {
    "text": "out of there automatically and s3 will",
    "start": "1706450",
    "end": "1708279"
  },
  {
    "text": "take care of the hard work of doing that",
    "start": "1708279",
    "end": "1709900"
  },
  {
    "text": "for you again totally server list",
    "start": "1709900",
    "end": "1711940"
  },
  {
    "text": "doesn't require any infrastructure and",
    "start": "1711940",
    "end": "1714220"
  },
  {
    "text": "you can optionally stand up cloud front",
    "start": "1714220",
    "end": "1715840"
  },
  {
    "text": "in front of that if you want to do",
    "start": "1715840",
    "end": "1717370"
  },
  {
    "text": "caching across the world on a per pop",
    "start": "1717370",
    "end": "1720789"
  },
  {
    "text": "basis as well now that had",
    "start": "1720789",
    "end": "1725220"
  }
]