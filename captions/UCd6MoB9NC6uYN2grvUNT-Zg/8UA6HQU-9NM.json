[
  {
    "start": "0",
    "end": "85000"
  },
  {
    "text": "all right so thanks thanks everyone",
    "start": "10120",
    "end": "15980"
  },
  {
    "text": "so my name is Martin Bishop I'm obviously with AWS I lead the solution architecture team for public sector in",
    "start": "15980",
    "end": "22369"
  },
  {
    "text": "the UK and really you've heard anybody here heard about lamda just once okay",
    "start": "22369",
    "end": "32090"
  },
  {
    "text": "I might mention lamda API gateway anyone yeah okay s3 DynamoDB so a bunch of",
    "start": "32090",
    "end": "40460"
  },
  {
    "text": "stuff the night I mean I'm not going to talk about I hopefully a lot of the same",
    "start": "40460",
    "end": "45710"
  },
  {
    "text": "stuff I'm going to touch on some of it but really the aim of this talks really if you've got an application how could",
    "start": "45710",
    "end": "51800"
  },
  {
    "text": "you actually practically you know what kind of application how do you actually get started technically you know where how do you",
    "start": "51800",
    "end": "58370"
  },
  {
    "text": "actually just get into this and build a simple application so I've got a really simple website oh it's actually not that",
    "start": "58370",
    "end": "65990"
  },
  {
    "text": "simple it's really simple for me because I don't need to operate anything and I've used all managed services and I",
    "start": "65990",
    "end": "71000"
  },
  {
    "text": "just leave it there and it just works when I need it to but we're just going to basically look at that look at the",
    "start": "71000",
    "end": "77810"
  },
  {
    "text": "console do a bit of a practical and see you know what does it look like if these functions and tables and all this stuff",
    "start": "77810",
    "end": "83569"
  },
  {
    "text": "is defined okay so traditional web apps so I would have how would I built this",
    "start": "83569",
    "end": "90319"
  },
  {
    "start": "85000",
    "end": "243000"
  },
  {
    "text": "this voting application so the use case that I've I've had here is you know I'm",
    "start": "90319",
    "end": "95660"
  },
  {
    "text": "running the next next pop idols I guess tech idols and you know I I want to be",
    "start": "95660",
    "end": "104270"
  },
  {
    "text": "able to provide people with the facility that they can vote via SMS my case I've only got three participants",
    "start": "104270",
    "end": "110810"
  },
  {
    "text": "and there are colours but anyway will will Park that previously I would've maybe said okay look I need to be on the",
    "start": "110810",
    "end": "117110"
  },
  {
    "text": "internet so I'm gonna need a DNS name so I'll use route 53 because I need to be on the Internet I'm gonna need in the",
    "start": "117110",
    "end": "123110"
  },
  {
    "text": "elastic IP and I can point that at an ec2 instance have a little my sequel database on there engine X or whatever",
    "start": "123110",
    "end": "130039"
  },
  {
    "text": "your web server of choice is right put a code you know pretty straightforward not that bad having a database on my ec2",
    "start": "130039",
    "end": "138349"
  },
  {
    "text": "instance is probably not the best thing to do so I could use a managed service like RDS and let's AWS manage my",
    "start": "138349",
    "end": "144770"
  },
  {
    "text": "database for me make sure it's backed up slightly better hmm if my application",
    "start": "144770",
    "end": "149980"
  },
  {
    "text": "consists of multiple parts I could split it out and say I'm going to have a front front-end so this might be potentially",
    "start": "149980",
    "end": "158150"
  },
  {
    "text": "publicly accessible but of an application layer an app server and that",
    "start": "158150",
    "end": "163190"
  },
  {
    "text": "talks to my database again slightly better or the way you do it properly on",
    "start": "163190",
    "end": "169340"
  },
  {
    "text": "AWS you know use auto scaling groups set up your servers so they start from",
    "start": "169340",
    "end": "175810"
  },
  {
    "text": "basically the bootstrap data or from the am i use RDS in a multi easy capability",
    "start": "175810",
    "end": "183760"
  },
  {
    "text": "use load balancers to make sure your traffic gets distributed appropriately so if you've used AWS before you know",
    "start": "183760",
    "end": "191930"
  },
  {
    "text": "you've probably built something like this and if you haven't you will probably build something like this if",
    "start": "191930",
    "end": "197450"
  },
  {
    "text": "you choose to use AWS and that's a good architecture it's it's great lots of people do this literally thousands and",
    "start": "197450",
    "end": "204560"
  },
  {
    "text": "thousands of organizations run workloads just like this on AWS very successfully but the challenge with it is that you've",
    "start": "204560",
    "end": "212450"
  },
  {
    "text": "still got one thing all these servers to manage so all these servers are still basically",
    "start": "212450",
    "end": "219470"
  },
  {
    "text": "as per our shared responsibility model which might have been mentioned today you know where take responsibility up to",
    "start": "219470",
    "end": "226130"
  },
  {
    "text": "a point so to your questions around you know possible policies and all that stuff on these servers now you're gonna",
    "start": "226130",
    "end": "232310"
  },
  {
    "text": "have to be responsible for patching them you know making sure they're secured appropriately who gets log on to them",
    "start": "232310",
    "end": "237890"
  },
  {
    "text": "when just the whole management cycle around the server so yeah it's pretty",
    "start": "237890",
    "end": "245209"
  },
  {
    "start": "243000",
    "end": "410000"
  },
  {
    "text": "good but it's still quite expensive potentially to operate in that manner so",
    "start": "245209",
    "end": "251769"
  },
  {
    "text": "mobile apps kind of force the point somewhat and they give us an opportunity and I think this sort of driven a",
    "start": "251769",
    "end": "257600"
  },
  {
    "text": "different way in terms of designing applications where you've got a rich front-end if you like and that front-end",
    "start": "257600",
    "end": "264229"
  },
  {
    "text": "relies primarily on API is in the backend so started maybe you could sort",
    "start": "264229",
    "end": "269630"
  },
  {
    "text": "of argue that it's primarily driven through apps have really driven the change but many websites now operate",
    "start": "269630",
    "end": "275670"
  },
  {
    "text": "in the same way you have a bunch of static content you download you've got some JavaScript that wrote actually runs",
    "start": "275670",
    "end": "282060"
  },
  {
    "text": "on the client so the dynamic stuffs happening on the client instead of you know generating static content and",
    "start": "282060",
    "end": "288390"
  },
  {
    "text": "pushing that down to clients the con the clients actually generate their own content with JavaScript and the they",
    "start": "288390",
    "end": "294930"
  },
  {
    "text": "rely on API is in the backend so yeah clients potentially as I said mobile",
    "start": "294930",
    "end": "302040"
  },
  {
    "text": "apps to begin off begin with but nowadays many many web sites implementing sort of Ajax or that kind",
    "start": "302040",
    "end": "308550"
  },
  {
    "text": "of methodology the sister style stuff works does this make sense so far okay okay the cash box yep okay okay",
    "start": "308550",
    "end": "345780"
  },
  {
    "text": "so yeah as I said now you can also",
    "start": "345780",
    "end": "351180"
  },
  {
    "text": "implement this with API gateway and lambda so obviously the benefit they're not having to manage a lot of this",
    "start": "351180",
    "end": "357690"
  },
  {
    "text": "infrastructure all the stuff you guys have heard today I'm not going to keep repeating it but yeah lots and lots of",
    "start": "357690",
    "end": "363990"
  },
  {
    "text": "benefits web server lists that you can focus on writing your application working on your business logic and what",
    "start": "363990",
    "end": "372510"
  },
  {
    "text": "I've also got to do in in this picture is I need to be sure I'm ready to scale",
    "start": "372510",
    "end": "378090"
  },
  {
    "text": "if I've got an event that's going to come up or you know my tech idles goes viral I'm gonna have to sort of be ready",
    "start": "378090",
    "end": "384930"
  },
  {
    "text": "to suck up this load again with server lists you don't really have to worry about that as much any questions",
    "start": "384930",
    "end": "393120"
  },
  {
    "text": "ah hi I hate to give you a consultant",
    "start": "393120",
    "end": "413910"
  },
  {
    "text": "sponsor but it depends if it took",
    "start": "413910",
    "end": "419550"
  },
  {
    "text": "afterwards so it really depends on how you've implemented it if it's Java for",
    "start": "419550",
    "end": "424860"
  },
  {
    "text": "example you can you can do a wrapper around Java and yeah as long as there's",
    "start": "424860",
    "end": "433560"
  },
  {
    "text": "no state for example on your web servers that kind of stuff if it's really stateless and you're running it at sane",
    "start": "433560",
    "end": "439020"
  },
  {
    "text": "and easy to fleet that kind of thing and it's event-driven or you can drive it by schedule or an API then you know it's definitely doable",
    "start": "439020",
    "end": "446789"
  },
  {
    "text": "there's a few constraints around the maximum runtime so actually runtime for a lambda at the moment five minutes and",
    "start": "446789",
    "end": "453000"
  },
  {
    "text": "there's also around constraints of I think it's around one and half gigabytes at the moment so really you know it's it",
    "start": "453000",
    "end": "461580"
  },
  {
    "text": "requires a bit of diving deeper but yeah lots of people have done it and it's",
    "start": "461580",
    "end": "467220"
  },
  {
    "text": "very easy to do a proof of concept so you can also with lambda this is going off off beat of it but a use case I've",
    "start": "467220",
    "end": "473669"
  },
  {
    "text": "heard recently is we did a hackathon with TfL and TfL have got great data",
    "start": "473669",
    "end": "479690"
  },
  {
    "text": "they've got all these centers in the road you drive over it you get a 1 you",
    "start": "479690",
    "end": "485340"
  },
  {
    "text": "know there's no car on it it's a zero simple it samples every quarter of a",
    "start": "485340",
    "end": "490710"
  },
  {
    "text": "second mmm they've got loads of them all over London and we had all this data so",
    "start": "490710",
    "end": "497419"
  },
  {
    "text": "with that I had a seed native application compiled application that",
    "start": "497419",
    "end": "502889"
  },
  {
    "text": "University College of London actually developed so I didn't have the code to go and refactor that but I could rap",
    "start": "502889",
    "end": "510180"
  },
  {
    "text": "using Python as a wrapper you can also include the native C so I basically",
    "start": "510180",
    "end": "515250"
  },
  {
    "text": "included the native C wrapped it with a bit of a Python script and was able to use lambda to basically transform all",
    "start": "515250",
    "end": "521550"
  },
  {
    "text": "those files so it's a Linux environment you can do a lot in there that's not just you know",
    "start": "521550",
    "end": "526590"
  },
  {
    "text": "doing API driven stuff you can even include native compiled binaries as long as those run on say Amazon Amazon Linux",
    "start": "526590",
    "end": "533370"
  },
  {
    "text": "you can run those within your lambdas as well so sorry I don't know if it exactly",
    "start": "533370",
    "end": "538770"
  },
  {
    "text": "having to talk afterwards okay hmm anything else any other questions okay",
    "start": "538770",
    "end": "547620"
  },
  {
    "text": "so where do we want to get to in this example we want to get to a an",
    "start": "547620",
    "end": "552660"
  },
  {
    "text": "application where it's all managed so using API gateway as the front-end lambda as our basically our compute",
    "start": "552660",
    "end": "559740"
  },
  {
    "text": "engine we're using something that you might not have encountered today called kognito so I'll just do a very quick",
    "start": "559740",
    "end": "567630"
  },
  {
    "start": "565000",
    "end": "620000"
  },
  {
    "text": "intro into what kognito is so kognito provides you with an identity management",
    "start": "567630",
    "end": "572660"
  },
  {
    "text": "so it's got a couple of parts but basically I think for the purpose of",
    "start": "572660",
    "end": "578430"
  },
  {
    "text": "this talk just know that this kognito helps us manage identities whether there are federated identities or identities",
    "start": "578430",
    "end": "585390"
  },
  {
    "text": "that we manage when you'll be off so you can have an AWS identity pool a bunch of people that use your website or you",
    "start": "585390",
    "end": "591930"
  },
  {
    "text": "could federate in from what your organization should have done federated in from Active Directory and you know",
    "start": "591930",
    "end": "599100"
  },
  {
    "text": "just track that person there as an identity in your in your application so first building block lambda so instead",
    "start": "599100",
    "end": "605220"
  },
  {
    "text": "of showing you more slides I think I'll just pop into the console this works",
    "start": "605220",
    "end": "615500"
  },
  {
    "start": "620000",
    "end": "690000"
  },
  {
    "text": "okay can you see that okay so I'm not",
    "start": "628660",
    "end": "636170"
  },
  {
    "text": "sure this is the best best way to try to do this but here we go so this is lambda",
    "start": "636170",
    "end": "643029"
  },
  {
    "text": "if you go in here you can see we've got a number of lambda functions and in this",
    "start": "643029",
    "end": "654589"
  },
  {
    "text": "case this vote Nats ik is my lambda function and I'm going to talk about come in here and we",
    "start": "654589",
    "end": "664010"
  },
  {
    "text": "can see actually you know you could edit the code in line or you can create as a package that includes you know if you",
    "start": "664010",
    "end": "669830"
  },
  {
    "text": "have binaries for example or your java application it actually creates this lambda package and deploy that to your",
    "start": "669830",
    "end": "675740"
  },
  {
    "text": "lambda function you've got some configuration my Internet's not great",
    "start": "675740",
    "end": "682250"
  },
  {
    "text": "I'll get there",
    "start": "682250",
    "end": "685420"
  },
  {
    "text": "while less loading let's have a look at this so this is the this is the application okay it's hosted primarily",
    "start": "687790",
    "end": "695530"
  },
  {
    "start": "690000",
    "end": "845000"
  },
  {
    "text": "in an s3 bucket some static content and then it's got some api's and the lambda",
    "start": "695530",
    "end": "700630"
  },
  {
    "text": "running in the backend so coming back to lambda all right so the code is taking a",
    "start": "700630",
    "end": "706840"
  },
  {
    "text": "bit of time so I'll skip that so in the configuration you can choose the runtime so whichever you know runtime",
    "start": "706840",
    "end": "714100"
  },
  {
    "text": "environment you want to use where you have to enter where this function enters",
    "start": "714100",
    "end": "719190"
  },
  {
    "text": "which role your function should have so this is really an important thing to point out with lambda as well and you",
    "start": "719190",
    "end": "725620"
  },
  {
    "text": "know Dave might have mentioned it earlier but if you deploy it on to ec2 what you would have is ec2 roles so it",
    "start": "725620",
    "end": "733180"
  },
  {
    "text": "basically means you give this server permissions to do these things within your AWS environment the crazy thing now",
    "start": "733180",
    "end": "740710"
  },
  {
    "text": "is or not crazy the great thing now is that you can actually give a function access to specific things in AWS so if",
    "start": "740710",
    "end": "748450"
  },
  {
    "text": "you had a web server that you know had to be able to grab an image from somewhere or update a DynamoDB table",
    "start": "748450",
    "end": "754800"
  },
  {
    "text": "whatever you'd actually have to give permission if you used ec2 rolls to the",
    "start": "754800",
    "end": "760030"
  },
  {
    "text": "whole instance to do it so basically meant if somebody got onto the instance they would be able to potentially do what that instance has the rights to do",
    "start": "760030",
    "end": "767460"
  },
  {
    "text": "with lambda though you can be very granular in terms of you can have a role per function so if I've got an add user",
    "start": "767460",
    "end": "774220"
  },
  {
    "text": "function I can write to the users table in dynamodb but if I'm a check user",
    "start": "774220",
    "end": "781420"
  },
  {
    "text": "function I've got my business writing to any tables I just want to be able to do",
    "start": "781420",
    "end": "786910"
  },
  {
    "text": "a quick read so you can use AWS as identity and access management platform to do very very granular access control",
    "start": "786910",
    "end": "794050"
  },
  {
    "text": "in applications which honestly if you try and do that in your own applications it's it's becomes super or that you're",
    "start": "794050",
    "end": "800560"
  },
  {
    "text": "shaking your head it sounds like you might have tried to do it it's not easy to do okay",
    "start": "800560",
    "end": "807070"
  },
  {
    "text": "the triggers are the events that will cause this lambda to fire",
    "start": "807070",
    "end": "812370"
  },
  {
    "text": "hopefully so haven't got any triggers but this could be for example as Dave had you know someone put something into",
    "start": "812370",
    "end": "818680"
  },
  {
    "text": "an s3 bucket or something goes onto Kinesis stream or a bunch of different",
    "start": "818680",
    "end": "823980"
  },
  {
    "text": "sources like that and I can see you know",
    "start": "823980",
    "end": "830250"
  },
  {
    "text": "when my functions being invoked and I get some monitoring data around that",
    "start": "830250",
    "end": "836600"
  },
  {
    "text": "okay so that's the lambda function pop back yeah",
    "start": "837560",
    "end": "845030"
  },
  {
    "start": "845000",
    "end": "1258000"
  },
  {
    "text": "so the second building block to all of this is we've now got this bit of code this bit of code expects an input the",
    "start": "845030",
    "end": "852270"
  },
  {
    "text": "inputs in our case is a color red green or blue and we need to get that what for",
    "start": "852270",
    "end": "859050"
  },
  {
    "text": "say was like elixir we we need to somehow get that to show our function so",
    "start": "859050",
    "end": "865410"
  },
  {
    "text": "the way to do that is to use API gateway so I've skin setup just set up an API",
    "start": "865410",
    "end": "873750"
  },
  {
    "text": "here so it's the boat API it's only got one method which is a post it's not",
    "start": "873750",
    "end": "880500"
  },
  {
    "text": "doing anything special in terms of authentication and the integration request is basically to run my lambda",
    "start": "880500",
    "end": "886200"
  },
  {
    "text": "function so if you call this method it's just going to fire off my lambda and my",
    "start": "886200",
    "end": "891570"
  },
  {
    "text": "lambda is going to do what it needs to do and I'll show you what that is in a bit and it'll get get back to the caller",
    "start": "891570",
    "end": "898620"
  },
  {
    "text": "so see if this is loaded now",
    "start": "898620",
    "end": "905060"
  },
  {
    "text": "okay well that's",
    "start": "929480",
    "end": "933050"
  },
  {
    "text": "right then I really want to show you the code anyway we'll get the code on",
    "start": "940910",
    "end": "948440"
  },
  {
    "text": "comments we'll get there this application needs a very basic table to store some data it's nothing",
    "start": "948440",
    "end": "954560"
  },
  {
    "text": "complicated so for that I'm using dynamodb literally gone into dynamo DB said create a table and when you create",
    "start": "954560",
    "end": "960980"
  },
  {
    "text": "a table you've got certain things that you can configure and the key key part",
    "start": "960980",
    "end": "966500"
  },
  {
    "text": "that you really need to manage when you're using DynamoDB is to configure the capacity so two elements how many",
    "start": "966500",
    "end": "972890"
  },
  {
    "text": "how quickly do you want to be able to read this table how quickly do you want to be able to write to this table so really I mean you can't really get much",
    "start": "972890",
    "end": "980930"
  },
  {
    "text": "more simple than that then you know just completely not worrying about capacity so what this means is you can have 20",
    "start": "980930",
    "end": "988550"
  },
  {
    "text": "reads per second and 10 writes per second and you can scale these up you",
    "start": "988550",
    "end": "993860"
  },
  {
    "text": "know as required and they're not fixed at the create table creation time so you know they can also flex in and out",
    "start": "993860",
    "end": "1000340"
  },
  {
    "text": "somewhat okay so if you actually have a look at the data within the table",
    "start": "1000340",
    "end": "1008760"
  },
  {
    "text": "okay I'm gonna park that for a second okay so what API gateway is done is it",
    "start": "1044550",
    "end": "1052170"
  },
  {
    "text": "gives given us this front-end and that's now accessible from the outside we've got the dynamo DB table I'll show you in",
    "start": "1052170",
    "end": "1058710"
  },
  {
    "text": "a bit and our lambda function so what the API",
    "start": "1058710",
    "end": "1064410"
  },
  {
    "text": "gateway is providing us is you know it provides functionality that we can cache API calls so if you've got primarily a",
    "start": "1064410",
    "end": "1071820"
  },
  {
    "text": "read-only API like would be a good one like the Met Office I guess they spoke",
    "start": "1071820",
    "end": "1078420"
  },
  {
    "text": "yesterday so if you're looking for a forecast for a specific area for example",
    "start": "1078420",
    "end": "1083430"
  },
  {
    "text": "it might make sense for us to cache that for you for half an hour instead of going back and hitting your back-end",
    "start": "1083430",
    "end": "1088860"
  },
  {
    "text": "servers it provides you with a DDoS protection because it's cloud front is",
    "start": "1088860",
    "end": "1095250"
  },
  {
    "text": "baked into the API gateway solution so the endpoint that you get on the Internet is already protected by cloud",
    "start": "1095250",
    "end": "1100980"
  },
  {
    "text": "front and you can import and export your api's as required with the swagger",
    "start": "1100980",
    "end": "1106860"
  },
  {
    "text": "functionality",
    "start": "1106860",
    "end": "1109549"
  },
  {
    "text": "sorry is there another Wi-Fi network I could use ya",
    "start": "1139380",
    "end": "1145970"
  },
  {
    "text": "it's alright",
    "start": "1179149",
    "end": "1182390"
  },
  {
    "text": "I think we're it's good we're good",
    "start": "1192540",
    "end": "1200900"
  },
  {
    "text": "yeah okay so let's yeah okay great",
    "start": "1200900",
    "end": "1210480"
  },
  {
    "text": "this has suddenly gotten a lot easier so this is the table so you can see it's",
    "start": "1210480",
    "end": "1215610"
  },
  {
    "text": "got three records it's basically just gonna increment these you know when we get a votes what the lambda function",
    "start": "1215610",
    "end": "1220740"
  },
  {
    "text": "does is literally just read their current value look at the value that was voted for and increase it by one so the",
    "start": "1220740",
    "end": "1228510"
  },
  {
    "text": "lambda stuff should work because well now yeah great so this is the the code",
    "start": "1228510",
    "end": "1240180"
  },
  {
    "text": "so in this case it's no jeaious you can see in here you know it's basically doing what I mentioned it's gonna just",
    "start": "1240180",
    "end": "1246720"
  },
  {
    "text": "extract the color get the current value from dynamo DB and just increment it with with one and so you can see at the",
    "start": "1246720",
    "end": "1259140"
  },
  {
    "start": "1258000",
    "end": "1415000"
  },
  {
    "text": "moment we've got nine was nine seven seven and that's our setup",
    "start": "1259140",
    "end": "1268940"
  },
  {
    "text": "right so the another element in all of this is Cognito so I mentioned kognito",
    "start": "1270600",
    "end": "1276850"
  },
  {
    "text": "provides you with this temporary identity so what the web front end so that's vote dot n SSA demos net but",
    "start": "1276850",
    "end": "1285130"
  },
  {
    "text": "that's actually doing is there's JavaScript running on the client side that is querying dynamic DynamoDB",
    "start": "1285130",
    "end": "1291340"
  },
  {
    "text": "directly so you'd notice I didn't have an API to say get current votes or anything like that you can actually",
    "start": "1291340",
    "end": "1297220"
  },
  {
    "text": "offload that give the web clients credentials to do what they need to do",
    "start": "1297220",
    "end": "1303010"
  },
  {
    "text": "directly against the aw services so in this case for example counting the",
    "start": "1303010",
    "end": "1309870"
  },
  {
    "text": "reading the number of votes but obviously you wouldn't give them access to write the votes so again you're using",
    "start": "1309870",
    "end": "1315400"
  },
  {
    "text": "a double yeses security module to enforce access to data within your",
    "start": "1315400",
    "end": "1321730"
  },
  {
    "text": "application okay and then the final element to all of this is we need we",
    "start": "1321730",
    "end": "1329650"
  },
  {
    "text": "need a caller so in our case the caller is Twilio so there was a phone number on that site so that if you an SMS a color",
    "start": "1329650",
    "end": "1337750"
  },
  {
    "text": "to that that would call Twilio Twilio calls the votes API that we've exposed",
    "start": "1337750",
    "end": "1343900"
  },
  {
    "text": "by a api gateway that far as off the lambda which updates dynamodb and we've",
    "start": "1343900",
    "end": "1350890"
  },
  {
    "text": "got the s3 client that's you know coming in via route 53 and DNS and as",
    "start": "1350890",
    "end": "1357940"
  },
  {
    "text": "credentials to query the lambda are the Varnum ODB data directly okay",
    "start": "1357940",
    "end": "1367110"
  },
  {
    "text": "did you mind giving it a shot man",
    "start": "1370620",
    "end": "1375300"
  },
  {
    "text": "so if that's the site yeah so you can",
    "start": "1379960",
    "end": "1385659"
  },
  {
    "text": "see it's it's quite responsive I guess you're voting for roadmap yeah so yeah it's 20 quid a borough semester",
    "start": "1385659",
    "end": "1395759"
  },
  {
    "text": "yeah I'll be okay yeah so that's it's really really simple application happy",
    "start": "1395759",
    "end": "1402129"
  },
  {
    "text": "to take some questions sorry was a bit bumpy with the with the access I don't want to present lots more slides to you",
    "start": "1402129",
    "end": "1407950"
  },
  {
    "text": "I'm sure you've seen a lot of slides so yeah happy to take any questions",
    "start": "1407950",
    "end": "1414240"
  },
  {
    "text": "Michelson like I have them and test and production for this website I have",
    "start": "1418750",
    "end": "1424100"
  },
  {
    "text": "written one lambda function and I want to pass only the call and I have three s3 bucket one for day one for test and",
    "start": "1424100",
    "end": "1432170"
  },
  {
    "text": "one production from those bucket I want to get this color or whatever the image so I want to write one function but pass",
    "start": "1432170",
    "end": "1439640"
  },
  {
    "text": "a conflict of that environment so is any provision we can pass conflict environments specific to lambda function",
    "start": "1439640",
    "end": "1446090"
  },
  {
    "text": "so I don't want to write three function 3 lambda or three different environment yes a lambda has and get water score",
    "start": "1446090",
    "end": "1453980"
  },
  {
    "text": "mats and alias yes type so ap I get",
    "start": "1453980",
    "end": "1459020"
  },
  {
    "text": "where you would use stages so you could have a stage for dev test production for",
    "start": "1459020",
    "end": "1464870"
  },
  {
    "text": "example on the API version 1 2 3 label",
    "start": "1464870",
    "end": "1483770"
  },
  {
    "text": "version 1 as prod to as a 3 step as you increment versions you can point the",
    "start": "1483770",
    "end": "1489590"
  },
  {
    "text": "aliases particular versions so you can always be crawled on on a particular version had for five more tests and then",
    "start": "1489590",
    "end": "1496010"
  },
  {
    "text": "when happy changed a is for profit from version one to version 5 and all new institutions run again and you showed",
    "start": "1496010",
    "end": "1510590"
  },
  {
    "text": "writing an API using the UI assuming that you can do all that and CLI yeah",
    "start": "1510590",
    "end": "1515870"
  },
  {
    "text": "definitely so normally I mean they've mentioned it you would create a swagger type package and just create your API",
    "start": "1515870",
    "end": "1522350"
  },
  {
    "text": "with that or the within server lists",
    "start": "1522350",
    "end": "1527660"
  },
  {
    "text": "what's the club serverless application model Sam which now let you use CloudFormation to wrap up your lambdas",
    "start": "1527660",
    "end": "1535130"
  },
  {
    "text": "as well as your API so it's basically it's cloud formation for server lists so",
    "start": "1535130",
    "end": "1540650"
  },
  {
    "text": "let you do what you would have done with infrastructure using cloud formation you cannot do that for your service",
    "start": "1540650",
    "end": "1546470"
  },
  {
    "text": "applications as well I was intrigued about the cook neato and",
    "start": "1546470",
    "end": "1556390"
  },
  {
    "text": "let's here at this type of use case I'm already I'm using a third party API",
    "start": "1556390",
    "end": "1563890"
  },
  {
    "text": "provider for a handling authentication and authorization I want to move to AWS",
    "start": "1563890",
    "end": "1569390"
  },
  {
    "text": "and I've got all my users before the credentials typically with an app ID up",
    "start": "1569390",
    "end": "1575780"
  },
  {
    "text": "key I might have both or I might have another type of a delegation method and I want to migrate I need to migrate all",
    "start": "1575780",
    "end": "1582590"
  },
  {
    "text": "my users as well - this is Cognito basic allows to import",
    "start": "1582590",
    "end": "1589720"
  },
  {
    "text": "identities from a third party or how does it work if I want to migrate rather",
    "start": "1589720",
    "end": "1596180"
  },
  {
    "text": "than start from scratch with it so I think there's there's probably two approaches one definitely is to migrate",
    "start": "1596180",
    "end": "1602000"
  },
  {
    "text": "and absolutely you can bring your user base across two kognito pools so pools",
    "start": "1602000",
    "end": "1607580"
  },
  {
    "text": "is the bit that lets you manage your own users so that is an option if your",
    "start": "1607580",
    "end": "1613460"
  },
  {
    "text": "existing identity provider though supports OAuth for example chances are",
    "start": "1613460",
    "end": "1618620"
  },
  {
    "text": "very good that you could continue to use them you know so with this it's not an all-or-nothing sort of thing you can use",
    "start": "1618620",
    "end": "1625280"
  },
  {
    "text": "bits of their technology and all of it is I think designed so that you know",
    "start": "1625280",
    "end": "1630440"
  },
  {
    "text": "there's standard ways to federate in for example like oh or so you would Fedder a tin from your identity provider into",
    "start": "1630440",
    "end": "1636560"
  },
  {
    "text": "Cognito which would give you temporary AWS sort of bland credentials and then",
    "start": "1636560",
    "end": "1641780"
  },
  {
    "text": "you could use those credentials to you know access aw specific services or you",
    "start": "1641780",
    "end": "1646910"
  },
  {
    "text": "can move your user days user base into Cognito pools and yeah there's functionality to obviously bring them",
    "start": "1646910",
    "end": "1652880"
  },
  {
    "text": "across in bulk or Cognito pools also supports the sign up use case and a few",
    "start": "1652880",
    "end": "1657980"
  },
  {
    "text": "use cases that you know you might have had to implement previously with your application so you know when a user",
    "start": "1657980",
    "end": "1665450"
  },
  {
    "text": "signs up you can send the verification email send a verification SMS that stuff's just taken care of it's all part",
    "start": "1665450",
    "end": "1671990"
  },
  {
    "text": "of the service so when you configure your pool you can define those configuration elements you can also",
    "start": "1671990",
    "end": "1677810"
  },
  {
    "text": "define requirements around multi-factor authentication you know when would you require that so you know it's a service in its own",
    "start": "1677810",
    "end": "1684240"
  },
  {
    "text": "but it's definitely not mandatory to use it to build applications like this does",
    "start": "1684240",
    "end": "1689640"
  },
  {
    "text": "it help also to prevent abuse let's say I've got a free tier I providing my API",
    "start": "1689640",
    "end": "1697320"
  },
  {
    "text": "you know you can have X number of requests and then the user opens you",
    "start": "1697320",
    "end": "1702390"
  },
  {
    "text": "know ten different accounts with the same email address or a similar one you",
    "start": "1702390",
    "end": "1707700"
  },
  {
    "text": "can have unique addresses I think you can store information so metadata about",
    "start": "1707700",
    "end": "1712890"
  },
  {
    "text": "users connecting I think if you're talking about API you know providing API",
    "start": "1712890",
    "end": "1719190"
  },
  {
    "text": "keys for example then you can build usage plans is the functionality that",
    "start": "1719190",
    "end": "1724380"
  },
  {
    "text": "it's called on API gateway we have a basic you know free usage tier for example and then you can provide people",
    "start": "1724380",
    "end": "1730590"
  },
  {
    "text": "with premium tiers etc so that's kind of more functionality of the API gateway",
    "start": "1730590",
    "end": "1736050"
  },
  {
    "text": "when you're talking api's and yeah obviously you'd need to look into the",
    "start": "1736050",
    "end": "1741060"
  },
  {
    "text": "specifics it's very difficult to prevent someone from you know just getting another email address and pretending to be someone else but you know we capture",
    "start": "1741060",
    "end": "1747750"
  },
  {
    "text": "all the data and we can definitely help you identify you know people coming in from the same IP address and that kind",
    "start": "1747750",
    "end": "1752970"
  },
  {
    "text": "of thing but as far as I know it's not something that the service just does natively today but building in checks",
    "start": "1752970",
    "end": "1758880"
  },
  {
    "text": "like you know SMS authentication for example requiring that that becomes a bit of a barrier because now you know",
    "start": "1758880",
    "end": "1765480"
  },
  {
    "text": "it's it's slightly harder to get an SMS address than its miss number than it is to get an email address but it's not",
    "start": "1765480",
    "end": "1772020"
  },
  {
    "text": "impossible either so yeah everybody's making more it makes it more difficult and yeah it's just becoming a pain and",
    "start": "1772020",
    "end": "1779670"
  },
  {
    "text": "then they will give up absolutely yeah exactly yeah yeah I just want to know",
    "start": "1779670",
    "end": "1785280"
  },
  {
    "text": "what is the option ever they will for ablest so in one of the application is barcode we need to scan for mobile",
    "start": "1785280",
    "end": "1791760"
  },
  {
    "text": "device so that we can say about is the cost of this invoice if it is create everything so in that one we use our",
    "start": "1791760",
    "end": "1799370"
  },
  {
    "text": "local machine attach the device and is carried yeah so India AWS I mean",
    "start": "1799370",
    "end": "1806270"
  },
  {
    "text": "it is not on website so we do is do some hard Hardware feature like suppose the",
    "start": "1806270",
    "end": "1812120"
  },
  {
    "text": "application is on-premises or something which need to be installed locally I",
    "start": "1812120",
    "end": "1818540"
  },
  {
    "text": "think the short answer is no the longer answer is we have got some devices that",
    "start": "1818540",
    "end": "1824180"
  },
  {
    "text": "go on to hardware so we've recently announced green green grass yeah it's a",
    "start": "1824180",
    "end": "1832730"
  },
  {
    "text": "green grass which is an IOT development environment I guess so if you're building a an IOT type device you can",
    "start": "1832730",
    "end": "1840110"
  },
  {
    "text": "license green grass and green grass will provide you of local storage you know",
    "start": "1840110",
    "end": "1845150"
  },
  {
    "text": "something like lambda but that can run on your on your IOT device it provides",
    "start": "1845150",
    "end": "1850670"
  },
  {
    "text": "the security in terms of talking back to AWS services so if you're really if you're building a device green grass",
    "start": "1850670",
    "end": "1856309"
  },
  {
    "text": "would be interesting so yeah if you're building and say an IOT device that",
    "start": "1856309",
    "end": "1861650"
  },
  {
    "text": "happens to scan barcodes and communicates with back-end services that would be interesting to look at but I think for your use case to be honest",
    "start": "1861650",
    "end": "1868460"
  },
  {
    "text": "it's simpler just to do it locally it's a barcode yeah",
    "start": "1868460",
    "end": "1874780"
  }
]