[
  {
    "start": "0",
    "end": "29000"
  },
  {
    "text": "[Music]",
    "start": "410",
    "end": "12400"
  },
  {
    "text": "hello i am adesh a cloud support",
    "start": "12400",
    "end": "14880"
  },
  {
    "text": "engineer here at the aws office in",
    "start": "14880",
    "end": "17600"
  },
  {
    "text": "bangalore india",
    "start": "17600",
    "end": "19119"
  },
  {
    "text": "today i am going to explain why a table",
    "start": "19119",
    "end": "22000"
  },
  {
    "text": "in amazon redshift cluster can consume",
    "start": "22000",
    "end": "24480"
  },
  {
    "text": "more or less disk storage space than",
    "start": "24480",
    "end": "27199"
  },
  {
    "text": "expected let's get started in amazon",
    "start": "27199",
    "end": "30720"
  },
  {
    "start": "29000",
    "end": "69000"
  },
  {
    "text": "redshift the minimum table size is the",
    "start": "30720",
    "end": "33760"
  },
  {
    "text": "smallest footprint that a table has on",
    "start": "33760",
    "end": "36640"
  },
  {
    "text": "an amazon redshift cluster some of the",
    "start": "36640",
    "end": "39120"
  },
  {
    "text": "factors which impact the minimum table",
    "start": "39120",
    "end": "41600"
  },
  {
    "text": "size in amazon redshift are number of",
    "start": "41600",
    "end": "44160"
  },
  {
    "text": "populated slices distribution style of",
    "start": "44160",
    "end": "46960"
  },
  {
    "text": "the table number of table segments",
    "start": "46960",
    "end": "49680"
  },
  {
    "text": "number of user columns for tables",
    "start": "49680",
    "end": "51840"
  },
  {
    "text": "created using key even or auto even",
    "start": "51840",
    "end": "55120"
  },
  {
    "text": "distribution style use this formula to",
    "start": "55120",
    "end": "57600"
  },
  {
    "text": "find the minimum table size",
    "start": "57600",
    "end": "61358"
  },
  {
    "text": "for tables created using all or auto all",
    "start": "61520",
    "end": "65280"
  },
  {
    "text": "distribution style",
    "start": "65280",
    "end": "67040"
  },
  {
    "text": "use this formula",
    "start": "67040",
    "end": "69680"
  },
  {
    "text": "in this example the number of segment is",
    "start": "69680",
    "end": "72320"
  },
  {
    "text": "based on whether the table has a defined",
    "start": "72320",
    "end": "75680"
  },
  {
    "text": "sort key",
    "start": "75680",
    "end": "76960"
  },
  {
    "text": "if an amazon redshift table has no sort",
    "start": "76960",
    "end": "80159"
  },
  {
    "text": "key then the table produces only one",
    "start": "80159",
    "end": "83680"
  },
  {
    "text": "unsorted segment",
    "start": "83680",
    "end": "85360"
  },
  {
    "text": "to calculate the number of populated",
    "start": "85360",
    "end": "87200"
  },
  {
    "text": "slices use the following query",
    "start": "87200",
    "end": "91520"
  },
  {
    "text": "note that i will show you steps using ps",
    "start": "92079",
    "end": "95520"
  },
  {
    "text": "click line to create a table with even",
    "start": "95520",
    "end": "98240"
  },
  {
    "text": "distribution style in this demo i am",
    "start": "98240",
    "end": "101600"
  },
  {
    "text": "going to use a 4 node dc to large as",
    "start": "101600",
    "end": "104640"
  },
  {
    "text": "well as 8 node dc to large",
    "start": "104640",
    "end": "107600"
  },
  {
    "text": "which has 2 slices per node",
    "start": "107600",
    "end": "110240"
  },
  {
    "text": "you can confirm this with this query",
    "start": "110240",
    "end": "115240"
  },
  {
    "text": "the following query creates a table with",
    "start": "122719",
    "end": "124960"
  },
  {
    "text": "even distribution style",
    "start": "124960",
    "end": "128920"
  },
  {
    "text": "now let's insert the same number of rows",
    "start": "135520",
    "end": "137520"
  },
  {
    "text": "in both the clusters",
    "start": "137520",
    "end": "141080"
  },
  {
    "text": "to find the number of rows present per",
    "start": "148080",
    "end": "150160"
  },
  {
    "text": "slice for the column",
    "start": "150160",
    "end": "152640"
  },
  {
    "text": "use this query",
    "start": "152640",
    "end": "156360"
  },
  {
    "text": "to see the size of a table including the",
    "start": "167440",
    "end": "169840"
  },
  {
    "text": "three internal columns",
    "start": "169840",
    "end": "171680"
  },
  {
    "text": "we talked about run this query",
    "start": "171680",
    "end": "176680"
  },
  {
    "text": "to get the actual size of a table",
    "start": "190080",
    "end": "192560"
  },
  {
    "text": "including the system columns use this",
    "start": "192560",
    "end": "195120"
  },
  {
    "text": "query",
    "start": "195120",
    "end": "198120"
  },
  {
    "text": "to calculate the minimum table size",
    "start": "232799",
    "end": "235280"
  },
  {
    "text": "for an even distribution style which we",
    "start": "235280",
    "end": "238000"
  },
  {
    "text": "created use the following formula",
    "start": "238000",
    "end": "242400"
  },
  {
    "start": "242000",
    "end": "303000"
  },
  {
    "text": "for 4 nodes",
    "start": "243280",
    "end": "246159"
  },
  {
    "text": "for 8 nodes",
    "start": "247360",
    "end": "250319"
  },
  {
    "text": "a similar logic can be applied for all",
    "start": "251840",
    "end": "254799"
  },
  {
    "text": "other distribution styles",
    "start": "254799",
    "end": "256720"
  },
  {
    "text": "remember that if a table has a sort key",
    "start": "256720",
    "end": "260320"
  },
  {
    "text": "it has two segments sorted and unsorted",
    "start": "260320",
    "end": "264240"
  },
  {
    "text": "and so the number of table segments will",
    "start": "264240",
    "end": "267199"
  },
  {
    "text": "be 2.",
    "start": "267199",
    "end": "268320"
  },
  {
    "text": "note that when a classic resize is",
    "start": "268320",
    "end": "270720"
  },
  {
    "text": "performed the number of populated slices",
    "start": "270720",
    "end": "273919"
  },
  {
    "text": "grew without a corresponding growth in",
    "start": "273919",
    "end": "276560"
  },
  {
    "text": "data volume",
    "start": "276560",
    "end": "277919"
  },
  {
    "text": "for the table",
    "start": "277919",
    "end": "279440"
  },
  {
    "text": "as a result the amount of free space",
    "start": "279440",
    "end": "282560"
  },
  {
    "text": "after the resize does not grow linearly",
    "start": "282560",
    "end": "285919"
  },
  {
    "text": "so now you know how you can calculate",
    "start": "285919",
    "end": "289360"
  },
  {
    "text": "minimum size of a table in amazon",
    "start": "289360",
    "end": "291680"
  },
  {
    "text": "redshift thanks for watching and happy",
    "start": "291680",
    "end": "294240"
  },
  {
    "text": "cloud computing from all of us here at",
    "start": "294240",
    "end": "296560"
  },
  {
    "text": "aws",
    "start": "296560",
    "end": "298160"
  },
  {
    "text": "[Music]",
    "start": "298160",
    "end": "303579"
  }
]