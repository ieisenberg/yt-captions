[
  {
    "start": "0",
    "end": "79000"
  },
  {
    "text": "everyone so I'm John thanks for coming out well steamy in here huh how's everyone doing all right cool okay so so I work in New",
    "start": "0",
    "end": "9389"
  },
  {
    "text": "York City with on the startup team so I work with startups of all ages and sizes and a large focus of what I do day to",
    "start": "9389",
    "end": "15299"
  },
  {
    "text": "day is help startups use AWS more efficiently and save money it's something we proselytize to customers of",
    "start": "15299",
    "end": "22020"
  },
  {
    "text": "all sizes you know even the large enterprise customers but for small customers it's even more pivotal right",
    "start": "22020",
    "end": "27900"
  },
  {
    "text": "because every dollar is an extension of the runway that that startup could use to you know get that next round of",
    "start": "27900",
    "end": "34829"
  },
  {
    "text": "funding or find their product market fit or or whatever it is how many folks here today are using AWS is there okay so",
    "start": "34829",
    "end": "42360"
  },
  {
    "text": "you're all actively building any bus how many of you like suspect that you might be able to like suspect you might be",
    "start": "42360",
    "end": "47730"
  },
  {
    "text": "overspending okay yeah yeah cool so all of you have access to an account manager",
    "start": "47730",
    "end": "54780"
  },
  {
    "text": "and someone like me a Solutions Architect and you can get in touch with them and get him or her to look at your account",
    "start": "54780",
    "end": "60539"
  },
  {
    "text": "and help you optimize your spend right we're eager to do it it's something it's",
    "start": "60539",
    "end": "65970"
  },
  {
    "text": "it's a very fun game so if you take nothing out of this next 30 minutes or so of us talking about cost optimization",
    "start": "65970",
    "end": "72210"
  },
  {
    "text": "take that as homework find your account manager call him or her say you want to do a cost optimization session with an",
    "start": "72210",
    "end": "78360"
  },
  {
    "text": "essay okay so what to expect we're gonna go through just on a high level some",
    "start": "78360",
    "end": "84509"
  },
  {
    "start": "79000",
    "end": "111000"
  },
  {
    "text": "benefits of the cloud visa fee costs we're gonna talk about right sizing your",
    "start": "84509",
    "end": "89610"
  },
  {
    "text": "environment for your workload we're gonna talk specifically about development environments which is a great first target for cost optimization",
    "start": "89610",
    "end": "96329"
  },
  {
    "text": "activities we're gonna call it talk about density how to think about using",
    "start": "96329",
    "end": "102170"
  },
  {
    "text": "containerization to reduce compute costs and we're going to talk about server lists in terms of how it can affect your",
    "start": "102170",
    "end": "109530"
  },
  {
    "text": "overall spend so cost benefits of the cloud we'll just go through this very quickly you know so the benefits of AWS",
    "start": "109530",
    "end": "117719"
  },
  {
    "start": "111000",
    "end": "267000"
  },
  {
    "text": "would allow you to move from a forecast model to a consumption model right so instead of getting that Pio and ordering",
    "start": "117719",
    "end": "123110"
  },
  {
    "text": "you know a bunch of systems and rack and stacking them you can instead you know just pay for what you're actually using",
    "start": "123110",
    "end": "130050"
  },
  {
    "text": "and be billed on a utility model super-important like this is the big leap this is what enables",
    "start": "130050",
    "end": "135630"
  },
  {
    "text": "startups on the cloud the fact that you no longer have to guess what you need you can measure it figure out what you",
    "start": "135630",
    "end": "141990"
  },
  {
    "text": "need and provision just that capacity you benefit from the economies of scale so AWS has millions of active customers",
    "start": "141990",
    "end": "147570"
  },
  {
    "text": "and you benefit from all that kind of innovation and all the the price pressure that those millions of",
    "start": "147570",
    "end": "153420"
  },
  {
    "text": "customers put on I mean Amazon's a peculiar company when it comes to you know pricing in general like our teams",
    "start": "153420",
    "end": "159120"
  },
  {
    "text": "are internally constantly pushed to take cost out of their own cost structure so we could take those savings and pass",
    "start": "159120",
    "end": "165900"
  },
  {
    "text": "them on to customers in the form of lower prices I think the number is we've done over 60 price drops as of now in",
    "start": "165900",
    "end": "172590"
  },
  {
    "text": "AWS is history so we're always trying to reduce prices for our customers and you",
    "start": "172590",
    "end": "180480"
  },
  {
    "text": "know talks like this we want to help our customers take advantage of those lower prices you no longer spending money on",
    "start": "180480",
    "end": "186600"
  },
  {
    "text": "data center operations so instead of sitting there wiring up patch cables crimping cables you're spending money on",
    "start": "186600",
    "end": "192200"
  },
  {
    "text": "developing your software for your business for your customers you could transparently attribute your",
    "start": "192200",
    "end": "198840"
  },
  {
    "text": "expenditure so you could know through the AWS platform if that dollar is being spent towards your development",
    "start": "198840",
    "end": "204780"
  },
  {
    "text": "environment or your production environment or business groups A's project or business group be the tools",
    "start": "204780",
    "end": "210390"
  },
  {
    "text": "are there for you to take advantage of to really granularly track where your money is going and why continuously",
    "start": "210390",
    "end": "218400"
  },
  {
    "text": "re-evaluate design choices so again back to the PIO you sign that p oh that money's gone and you're on a three year",
    "start": "218400",
    "end": "223890"
  },
  {
    "text": "depreciation cycle with AWS you could continually look at what you've done what your infrastructure is resize it",
    "start": "223890",
    "end": "231330"
  },
  {
    "text": "right size it you know measure refine iterate etc and then finally manage",
    "start": "231330",
    "end": "238200"
  },
  {
    "text": "services so you know if you look at AWS and 2006 through you know a couple years",
    "start": "238200",
    "end": "243750"
  },
  {
    "text": "following that the primitives were were primitive right there were storage s3 compute ec2 you know just basically",
    "start": "243750",
    "end": "251400"
  },
  {
    "text": "giving you object storage and compute if you look at the last couple of years 2014 lambda a lot of the services that",
    "start": "251400",
    "end": "258570"
  },
  {
    "text": "we're shipping or further up the stack and they're managed services that reduce the concern space of what you actually",
    "start": "258570",
    "end": "264810"
  },
  {
    "text": "have to manage we'll talk more about that it's important to think about sort of",
    "start": "264810",
    "end": "270100"
  },
  {
    "start": "267000",
    "end": "343000"
  },
  {
    "text": "the amount of effort and time and you know mind share of your team that goes",
    "start": "270100",
    "end": "276370"
  },
  {
    "text": "to scaling your business right and how much of that is going toward building features and products and business value",
    "start": "276370",
    "end": "283570"
  },
  {
    "text": "for your customers and how much of it is going towards infrastructure or how much is it going towards this undifferentiated heavy lifting of you",
    "start": "283570",
    "end": "290770"
  },
  {
    "text": "know managing a bunch of UNIX servers or racking and stacking a bunch of networking equipment and maybe in your",
    "start": "290770",
    "end": "296980"
  },
  {
    "text": "early days with 1 million users it's you know negligible you have a couple of Engineers and and they handle that but",
    "start": "296980",
    "end": "303670"
  },
  {
    "text": "as you grow you know that those concerns are only gonna keep growing right as your data increases as your theme your",
    "start": "303670",
    "end": "311080"
  },
  {
    "text": "compute needs evolve you're going to need to continue to invest in staff to handle that and you know it's just kind",
    "start": "311080",
    "end": "318160"
  },
  {
    "text": "of sharply increases if you can outsource all of that work just offshore a lot like ship it off to a company like",
    "start": "318160",
    "end": "323620"
  },
  {
    "text": "AWS like take that every time right like take that deal every time instead of worrying about you know security patches",
    "start": "323620",
    "end": "331180"
  },
  {
    "text": "on your servers you could have AWS management for you that's a win because time is a zero-sum game it's it's the",
    "start": "331180",
    "end": "337180"
  },
  {
    "text": "most precious commodity you have as a start-up and you know the timers the fire in which we burn as they say so",
    "start": "337180",
    "end": "344500"
  },
  {
    "text": "just talking about where cost savings come from generally what we find with customers is that there's kind of 80/20",
    "start": "344500",
    "end": "350470"
  },
  {
    "text": "split like the Pareto principle so generally 80% of the cost Blut if we",
    "start": "350470",
    "end": "355780"
  },
  {
    "text": "look at a customer's invoice will come from 20% of the causes and as generally things like compute ec2 and storage on",
    "start": "355780",
    "end": "362440"
  },
  {
    "text": "s3 and because of this and because the AWS platform is now over 10 years old and no",
    "start": "362440",
    "end": "368800"
  },
  {
    "text": "two workloads are the same they're all very different a degress has lots of different mechanics in each of their services to",
    "start": "368800",
    "end": "375130"
  },
  {
    "text": "help you acquire these two services at the exact right amount of your workload",
    "start": "375130",
    "end": "380980"
  },
  {
    "text": "so for example on ec2 there are multiple pricing structures different ways to",
    "start": "380980",
    "end": "387280"
  },
  {
    "text": "acquire compute capacity on s3 there are different ways to store data with different pricing structures we'll talk",
    "start": "387280",
    "end": "393520"
  },
  {
    "text": "a little bit more about that but generally there's there's this split where 20% of the problem is 20% of the",
    "start": "393520",
    "end": "400180"
  },
  {
    "text": "causes result in 80% of the problem so by being smart about storage and compute you can",
    "start": "400180",
    "end": "406210"
  },
  {
    "start": "403000",
    "end": "706000"
  },
  {
    "text": "have a major impact on your spend if you just look at ec2 and start there that's generally the 80% of cost reductions so",
    "start": "406210",
    "end": "414850"
  },
  {
    "text": "just a couple of like quick things off the top of you know that off the top here on ec2 ways you can reduce your",
    "start": "414850",
    "end": "420700"
  },
  {
    "text": "spend so if you look at ec2 there are three major ways to acquire compute capacity in each detail there's on",
    "start": "420700",
    "end": "426460"
  },
  {
    "text": "demand right you pay AWS by the second if you're using most distributions of Lenox or by",
    "start": "426460",
    "end": "431980"
  },
  {
    "text": "the hour with some commercial distributions or windows and you know",
    "start": "431980",
    "end": "437920"
  },
  {
    "text": "what your only charge for what you use if you use it for three hours 15 minutes you could charge those three hours 15",
    "start": "437920",
    "end": "443380"
  },
  {
    "text": "minutes the other two ways are you can reserve capacity so you could say you know I have this workload the system's",
    "start": "443380",
    "end": "450310"
  },
  {
    "text": "going to be up 24 hours a day seven days a week it's never going to go down I want to reserve that capacity and a",
    "start": "450310",
    "end": "456520"
  },
  {
    "text": "dress will give you a discount for reserving that capacity there's quite a lot of different mechanics within",
    "start": "456520",
    "end": "463060"
  },
  {
    "text": "reserved instances there are convertible instances there's one-year terms three year terms so you know you could size",
    "start": "463060",
    "end": "468790"
  },
  {
    "text": "your reservation to your to your actual needs so that's the second way first ways on-demand you know pay by the hour",
    "start": "468790",
    "end": "474970"
  },
  {
    "text": "pay by the second reserved instances I know I'm gonna need this for a year I'm gonna pay you less money for the year",
    "start": "474970",
    "end": "480790"
  },
  {
    "text": "and the third is the spot market well the spot market allows you to acquire unused ec2 compute capacity at a",
    "start": "480790",
    "end": "487720"
  },
  {
    "text": "steep discount could be like 90% in most cases so this is great for things like",
    "start": "487720",
    "end": "493290"
  },
  {
    "text": "big data processing or maybe you're building an AI model maybe you're",
    "start": "493290",
    "end": "499150"
  },
  {
    "text": "running some sort of job that's interruptible in some way spot instances the the trade-off for that 90 percent",
    "start": "499150",
    "end": "505030"
  },
  {
    "text": "savings is they're interrupted bull so within two minutes you can get a warning that says hey actually you were outbid",
    "start": "505030",
    "end": "510640"
  },
  {
    "text": "for this kind of instance the market place price changed you're gonna lose that instance terminated on you but if",
    "start": "510640",
    "end": "517300"
  },
  {
    "text": "you're running some sort of workload where you have interruptible work it doesn't really matter it's better to Bank that 90 percent put it back in your",
    "start": "517300",
    "end": "523240"
  },
  {
    "text": "pocket in addition to that there were other so reserved instances being the last one here you know you could reserve",
    "start": "523240",
    "end": "530140"
  },
  {
    "text": "capacity always something we deal with companies who have like that database server that's just never going away pay less",
    "start": "530140",
    "end": "537339"
  },
  {
    "text": "for it you know you're gonna run it 24 by 7 work with your account manager to figure out the right type of reserved",
    "start": "537339",
    "end": "542620"
  },
  {
    "text": "instance but make sure you're paying the least amount of money possible for it and then in the middle you know there",
    "start": "542620",
    "end": "549070"
  },
  {
    "text": "are mechanisms to reduce your spend that are less about the way your purchase and",
    "start": "549070",
    "end": "555940"
  },
  {
    "text": "more about how you operate those instances so for example with auto scaling if you have an auto scaling",
    "start": "555940",
    "end": "561730"
  },
  {
    "text": "group you can have your work or your web",
    "start": "561730",
    "end": "567040"
  },
  {
    "text": "form or your your server form grow and shrink based upon your actual demand alright so think about a company like",
    "start": "567040",
    "end": "572920"
  },
  {
    "text": "Pinterest so Pinterest is a very popular website they have a pretty predictable",
    "start": "572920",
    "end": "578410"
  },
  {
    "text": "traffic cycle if you look at it if you pull out and look at a week view you know that's kind of like during the day during business hours there's a lot of",
    "start": "578410",
    "end": "584860"
  },
  {
    "text": "traffic during the night it dips down there's a trial then back up without",
    "start": "584860",
    "end": "590320"
  },
  {
    "text": "auto scaling they'd have to run you know some percentage above that that peak right they would have to say okay we're",
    "start": "590320",
    "end": "595630"
  },
  {
    "text": "gonna acquire enough instances to handle our peak load plus 15% or whatever it is",
    "start": "595630",
    "end": "602830"
  },
  {
    "text": "with auto scaling they can have easy to adjust depending upon what their actual",
    "start": "602830",
    "end": "607990"
  },
  {
    "text": "demand is so based upon CPU utilization or based upon you know even a like user",
    "start": "607990",
    "end": "615250"
  },
  {
    "text": "facing latency if latency crawls above a certain number spin out more servers spread that load out this ultimately",
    "start": "615250",
    "end": "621339"
  },
  {
    "text": "reduces your cost all right it matches the amount of money that you're spending to your actual customer demand and that",
    "start": "621339",
    "end": "627550"
  },
  {
    "text": "that's that that's one of the overarching themes here you want to match the amount of money you're spending to your consumer demand exactly",
    "start": "627550",
    "end": "634540"
  },
  {
    "text": "a c2 scheduler is a project that we",
    "start": "634540",
    "end": "639550"
  },
  {
    "text": "built internally similar auto-scaling it helps you stop and start instances on the schedule so if you have and we're",
    "start": "639550",
    "end": "646360"
  },
  {
    "text": "going to talk a little bit more about this but if you have a developer development environment your developers probably aren't working at midnight I",
    "start": "646360",
    "end": "651820"
  },
  {
    "text": "hope you can turn off those instances at a p.m. or 6 p.m. or whatever it is and",
    "start": "651820",
    "end": "657850"
  },
  {
    "text": "turn them back on at 8 a.m. the next day and banked that 12 hours of runtime instead of paying that you know the",
    "start": "657850",
    "end": "663760"
  },
  {
    "text": "amount of money you'd be paying to keep that server running all the time and doing thing you can use mechanisms like this",
    "start": "663760",
    "end": "669799"
  },
  {
    "text": "to ensure that you're not that you're not been wasting that money put pouring money down the drain it's kind of like",
    "start": "669799",
    "end": "678529"
  },
  {
    "text": "when I was a kid I'd stay home from school I remember they were like there were two game shows on back-to-back one",
    "start": "678529",
    "end": "684499"
  },
  {
    "text": "was called supermarket sweep which was like this ridiculous game show where you had like a shopping cart and you had to like spend the most money possible and",
    "start": "684499",
    "end": "691189"
  },
  {
    "text": "right after that was the price is right right so like we want our customers not to do the supermarket sweep thing where",
    "start": "691189",
    "end": "696410"
  },
  {
    "text": "they're just like blindly grabbing things off the shelf I want to make sure that customers are like doing more of a",
    "start": "696410",
    "end": "701600"
  },
  {
    "text": "prices right like figuring out exactly what they need to spend and not spending a nickel above that yes please like the",
    "start": "701600",
    "end": "712459"
  },
  {
    "start": "706000",
    "end": "1117000"
  },
  {
    "text": "free tier okay",
    "start": "712459",
    "end": "721779"
  },
  {
    "text": "[Music]",
    "start": "731320",
    "end": "734529"
  },
  {
    "text": "yeah so the easy to schedule is a great option there and we'll talk more about that after maybe you and I should just",
    "start": "753180",
    "end": "758410"
  },
  {
    "text": "talk after and talk about your specific problem yeah cool so getting back to cost awareness and education one thing",
    "start": "758410",
    "end": "766120"
  },
  {
    "text": "that I found working on teams building on top of the cloud is that it's kind of like the costs of your infrastructure",
    "start": "766120",
    "end": "773020"
  },
  {
    "text": "grow day by day right it's not like a thing where you're like okay this is going to cost us three thousand dollars",
    "start": "773020",
    "end": "780100"
  },
  {
    "text": "a month and it kind of stays that way in perpetuity what generally happens is you start out with an infrastructure and you",
    "start": "780100",
    "end": "785440"
  },
  {
    "text": "have a monthly run rate and then month after month it slowly creeps up right it's kind of like weight gain if you're",
    "start": "785440",
    "end": "790750"
  },
  {
    "text": "not stepping on the scale every day like you may look in the mirror one day and be like oh I guess I need to change my",
    "start": "790750",
    "end": "796180"
  },
  {
    "text": "diet or something right if you're not constantly in an ambient way aware of",
    "start": "796180",
    "end": "801190"
  },
  {
    "text": "your spend it could get away from you fast so one trick that I found is that when I when I've inherited projects or",
    "start": "801190",
    "end": "807670"
  },
  {
    "text": "inherited teams first thing I do is I set up a nightly alert every day to hit slack or HipChat or camp fire or",
    "start": "807670",
    "end": "814570"
  },
  {
    "text": "whatever I'm using just to take the current month to date spend and put it in the channel put it in the Deaf",
    "start": "814570",
    "end": "820029"
  },
  {
    "text": "Channel right so that everyone knows that hey here's what we're spending today maybe it's maybe we're on track",
    "start": "820029",
    "end": "825370"
  },
  {
    "text": "maybe off track but everyone's aware of it in an ambient way if you have like a you know like a dashboard performance",
    "start": "825370",
    "end": "832120"
  },
  {
    "text": "metrics or business metrics or you know maybe even some logging utilities like",
    "start": "832120",
    "end": "838089"
  },
  {
    "text": "just on the wall it's great to put this number on there right and AWS has a bunch of API is to help you get at that",
    "start": "838089",
    "end": "843339"
  },
  {
    "text": "number just make sure people are aware of the cost all right it's like the the first thing you can do to kind of get",
    "start": "843339",
    "end": "850890"
  },
  {
    "text": "your your team to think about things in a cost conscious more frugal way and",
    "start": "850890",
    "end": "859120"
  },
  {
    "text": "then on that right we talked about sorry talk about attribute expenditure so you",
    "start": "859120",
    "end": "866500"
  },
  {
    "text": "know the first thing you do when you sort of deploy to AWS does you spin up a bunch of stuff hopefully you're doing that through some sort of infrastructure",
    "start": "866500",
    "end": "872770"
  },
  {
    "text": "as code tool like you know AWS CloudFormation or hash of corpse terraform but you're probably not",
    "start": "872770",
    "end": "878350"
  },
  {
    "text": "thinking like we need to attribute which servers are for which purpose right and",
    "start": "878350",
    "end": "883570"
  },
  {
    "text": "you only do that sort of post facto when there are some questions about the bill and you need to figure out where spend is happening with AWS resource tagging",
    "start": "883570",
    "end": "891160"
  },
  {
    "text": "you can tag your your resources and say well this dynamodb table is for this project or this ec2 instance is",
    "start": "891160",
    "end": "898300"
  },
  {
    "text": "servicing this team this internal business function and you can run reports you know either through through",
    "start": "898300",
    "end": "904540"
  },
  {
    "text": "the billing console or you know frankly you could just download the raw data and put in Excel and then understand exactly",
    "start": "904540",
    "end": "909910"
  },
  {
    "text": "where your spend is going it's just really good practice to start doing this from day one I mentioned before amazon.com every team has sort of",
    "start": "909910",
    "end": "917560"
  },
  {
    "text": "incentivized to reduce their cost structure right it's it's something that we're pretty religious about you know",
    "start": "917560",
    "end": "924040"
  },
  {
    "text": "it's it's also something engineers love doing right if you give it's like it's a great game because it's very easy to",
    "start": "924040",
    "end": "930370"
  },
  {
    "text": "keep score if you have three projects you know you can measure how much those",
    "start": "930370",
    "end": "936250"
  },
  {
    "text": "three projects are costing you in a monthly run rate basis and ensure that your engineers have the data they need",
    "start": "936250",
    "end": "943720"
  },
  {
    "text": "to be able to optimize further so thinking about your resources and",
    "start": "943720",
    "end": "949360"
  },
  {
    "text": "tagging them from day one is pretty important and pretty powerful and it's a fun competition yes it's different for",
    "start": "949360",
    "end": "958089"
  },
  {
    "text": "every service so for ec2 for example there's an API call where you can tag running instances or you can add tags to",
    "start": "958089",
    "end": "967149"
  },
  {
    "text": "when you create the instance so for example there's this deck will be online and there's a link I believe to the",
    "start": "967149",
    "end": "973240"
  },
  {
    "text": "documentation on resource tagging it's worth spending some time in there sure",
    "start": "973240",
    "end": "978360"
  },
  {
    "text": "and then you know finally another thing is just understanding how much of your",
    "start": "978360",
    "end": "983380"
  },
  {
    "text": "system is idle right like every system that I've ever operated has like its own",
    "start": "983380",
    "end": "989670"
  },
  {
    "text": "sort of like health signature right they have their own characteristics around",
    "start": "989670",
    "end": "995880"
  },
  {
    "text": "load their own characteristics around latency they have their own like signature around like if you look at you",
    "start": "995880",
    "end": "1002790"
  },
  {
    "text": "know the graphs of like things like CPU and memory and latency and you know they generally tend to have patterns",
    "start": "1002790",
    "end": "1009199"
  },
  {
    "text": "understanding how much of your system is idle how much spare capacity you have that's just opportunity right that idle",
    "start": "1009199",
    "end": "1015420"
  },
  {
    "text": "capacity if you can kill that idle capacity and Bank it your costs go down and you're spending",
    "start": "1015420",
    "end": "1022500"
  },
  {
    "text": "less money on on basically you're paying Amazon less which is good for you and",
    "start": "1022500",
    "end": "1027688"
  },
  {
    "text": "frankly get better for Amazon in the long run it's like using all the Buffalo if you have an entire ec2 server and",
    "start": "1027689",
    "end": "1034620"
  },
  {
    "text": "it's five percent utilized maybe it runs a cron job every 12 hours there's probably a better way to do that we'll",
    "start": "1034620",
    "end": "1040470"
  },
  {
    "text": "talk a little bit more about that in a minute on the the visibility perspective",
    "start": "1040470",
    "end": "1045839"
  },
  {
    "text": "and on the awareness perspective it's really good to sort of like break down that number too so there's a monthly run",
    "start": "1045839",
    "end": "1051780"
  },
  {
    "text": "rate number which tells you okay we're spending this much but here's what really matters right like how much does it cost to you per user to deliver your",
    "start": "1051780",
    "end": "1058650"
  },
  {
    "text": "service if you have you know in this case we have ninety ninety eight hundred daily active users and you know our",
    "start": "1058650",
    "end": "1066570"
  },
  {
    "text": "spend is forty two hundred well that Nets out to forty four cents per write so on average you know for this month in",
    "start": "1066570",
    "end": "1073740"
  },
  {
    "text": "particular it's costing me forty four cents per user to operate my business and is my business netting more than",
    "start": "1073740",
    "end": "1080130"
  },
  {
    "text": "forty four cents from that user good good to know this number also good to know how it's changing over time so here",
    "start": "1080130",
    "end": "1087150"
  },
  {
    "text": "the the number of users is growing more sharply than cost which is great and exactly what we want to see and you want",
    "start": "1087150",
    "end": "1093030"
  },
  {
    "text": "to get to the point where your cost kind of flattens out and you take advantage of your own economies of scale as your",
    "start": "1093030",
    "end": "1098490"
  },
  {
    "text": "your user base grows this is a this is",
    "start": "1098490",
    "end": "1104010"
  },
  {
    "text": "not realistic there's no way anyone's paying forty two hundred dollars for less than ten thousand users but anyway",
    "start": "1104010",
    "end": "1110250"
  },
  {
    "text": "the point is the same it's good to know kind of like what doesn't this per number is to help you plan and project",
    "start": "1110250",
    "end": "1116070"
  },
  {
    "text": "and forecast let's talk a little bit about right sizing so getting the right",
    "start": "1116070",
    "end": "1122760"
  },
  {
    "start": "1117000",
    "end": "1403000"
  },
  {
    "text": "resource for your workload is super important as part of that is about understanding your workload understanding where the constraints are",
    "start": "1122760",
    "end": "1130050"
  },
  {
    "text": "you know are you running something that requires a lot of memory right but maybe not a lot of CPU or are you running",
    "start": "1130050",
    "end": "1136860"
  },
  {
    "text": "something that's extremely CPU intensive but doesn't require any memory or and it you know doesn't have much IO to speak",
    "start": "1136860",
    "end": "1142950"
  },
  {
    "text": "of doesn't need any disk understanding kind of where you are and which one of these cylinders is important to your",
    "start": "1142950",
    "end": "1149070"
  },
  {
    "text": "workload will help you pick the right set of resources to to power that workload for example with",
    "start": "1149070",
    "end": "1156860"
  },
  {
    "text": "ec2 you know there's instance types from the tea to nano I think it is has it's",
    "start": "1156860",
    "end": "1162610"
  },
  {
    "text": "basically one V CPU and half a gig of ram I believe in a cost less than a",
    "start": "1162610",
    "end": "1167960"
  },
  {
    "text": "penny an hour right now it scales all the way up to the X 1/32 large or whatever it is that has you know",
    "start": "1167960",
    "end": "1173270"
  },
  {
    "text": "terabytes of memory right so there's a huge spread of the types of instances that you could be running and there's",
    "start": "1173270",
    "end": "1180140"
  },
  {
    "text": "specialization within that spread for every kind of workload that in between so you know if you have a CPU intensive",
    "start": "1180140",
    "end": "1189010"
  },
  {
    "text": "workload perhaps you need a CPU intensive instance right a CPU instance",
    "start": "1189010",
    "end": "1195020"
  },
  {
    "text": "like a c4 maybe that's more appropriate for your spend type so adding more",
    "start": "1195020",
    "end": "1201110"
  },
  {
    "text": "instances without really understanding just saying oh wow you know we heard from customer support customers are",
    "start": "1201110",
    "end": "1206419"
  },
  {
    "text": "saying the site is slow what do we do saying like okay we'll just add four more instances that's like the retro that's like an alarm bell right that",
    "start": "1206419",
    "end": "1212720"
  },
  {
    "text": "shows that you're not you need to spend a little bit more time understanding",
    "start": "1212720",
    "end": "1217760"
  },
  {
    "text": "your workload so you can just not turn one knob but like figure out the right knobs to turn you know AWS 90 plus",
    "start": "1217760",
    "end": "1224510"
  },
  {
    "text": "services there's a lot of knobs and figuring out how to turn the right ones",
    "start": "1224510",
    "end": "1229760"
  },
  {
    "text": "is a function of understanding your workloads needs and how to best service that within the platform different",
    "start": "1229760",
    "end": "1237529"
  },
  {
    "text": "applications require different resources obviously you know there there are some depending on the tool sets you use",
    "start": "1237529",
    "end": "1243440"
  },
  {
    "text": "depending on what your application is actually doing it's gonna change the size of these cylinders and what what",
    "start": "1243440",
    "end": "1249770"
  },
  {
    "text": "you actually need to provision and an optimization of your workloads so",
    "start": "1249770",
    "end": "1256750"
  },
  {
    "text": "understanding these numbers helps you eliminate idle time which is great it helps you scale much more deliberately",
    "start": "1256750",
    "end": "1264020"
  },
  {
    "text": "and specifically which is also great but it's also going to tell you what might not be working about your application it",
    "start": "1264020",
    "end": "1270440"
  },
  {
    "text": "might show you that hey when someone hits our you know users end point that",
    "start": "1270440",
    "end": "1276320"
  },
  {
    "text": "takes 800 milliseconds why is it taking you a hundred milliseconds to look up a user because throughput is a function of",
    "start": "1276320",
    "end": "1283940"
  },
  {
    "text": "how much you can get done within a given period of time and latency is the amount the requests take right so if 800",
    "start": "1283940",
    "end": "1290480"
  },
  {
    "text": "milliseconds user is waiting in hundred milliseconds for that simple response it's gonna affect your throughput and",
    "start": "1290480",
    "end": "1296090"
  },
  {
    "text": "it's going to affect your users experience so there's the soft the other benefit of understanding your workload",
    "start": "1296090",
    "end": "1301159"
  },
  {
    "text": "it's not just about like tuning it for the cloud it's also about understanding where your opportunities are to optimize",
    "start": "1301159",
    "end": "1307330"
  },
  {
    "text": "to give your customers a better experience load testing is part of this",
    "start": "1307330",
    "end": "1312409"
  },
  {
    "text": "you know it's not often it's not something startups do early on right load testing is kind of on a low list of",
    "start": "1312409",
    "end": "1320000"
  },
  {
    "text": "priorities staying alive and you know make sure everyone gets paid is higher up on the list load testing is usually",
    "start": "1320000",
    "end": "1326630"
  },
  {
    "text": "somewhere in the couple hundred range but you reach a point where it makes",
    "start": "1326630",
    "end": "1331640"
  },
  {
    "text": "sense to start understanding the boundaries of what your application can do and you know there's a ton of low",
    "start": "1331640",
    "end": "1337880"
  },
  {
    "text": "testing tools both open source tools and there's a bunch here but also in our",
    "start": "1337880",
    "end": "1343070"
  },
  {
    "text": "marketplace in the APN in the ATF's marketplace you'll find a bunch of commercial load testing tools that you",
    "start": "1343070",
    "end": "1348710"
  },
  {
    "text": "can use out of the box to stress test your application to understand both its throughput and latency dynamics you can",
    "start": "1348710",
    "end": "1357230"
  },
  {
    "text": "even you know a lot of customers who you",
    "start": "1357230",
    "end": "1362240"
  },
  {
    "text": "know find low testing to be imperative what they'll end up doing is not just low testing as a kind of a post facto",
    "start": "1362240",
    "end": "1368510"
  },
  {
    "text": "exercise but low testing throughout their development process so you know you can actually and this is common you",
    "start": "1368510",
    "end": "1375080"
  },
  {
    "text": "can integrate load testing tools into a continuous delivery pipeline such that if a regression occurs and that users",
    "start": "1375080",
    "end": "1381350"
  },
  {
    "text": "end point maybe it was 30 milliseconds right before somebody added a feature to it and blew it and now it's 800",
    "start": "1381350",
    "end": "1387289"
  },
  {
    "text": "milliseconds instead of catching that in production if you do load testing as part of your delivery process you know",
    "start": "1387289",
    "end": "1393710"
  },
  {
    "text": "whether it's manual or automated through a CI CD pipeline you can catch that before you ever ship it to users and nip",
    "start": "1393710",
    "end": "1400159"
  },
  {
    "text": "it in the bud um they're just more about latency and throughput so this is subtle",
    "start": "1400159",
    "end": "1407150"
  },
  {
    "start": "1403000",
    "end": "1574000"
  },
  {
    "text": "it's just important to think about these two numbers and what they mean because they're they're related but different",
    "start": "1407150",
    "end": "1412909"
  },
  {
    "text": "there are thuggin or concepts so latency it's gonna measure the end to end processing time right if I have a",
    "start": "1412909",
    "end": "1418220"
  },
  {
    "text": "function and all it does is sleep one right the latency of that function will always be one ish right a little over one but",
    "start": "1418220",
    "end": "1425120"
  },
  {
    "text": "one ish always right so it would be a second of latency to get the result of",
    "start": "1425120",
    "end": "1431300"
  },
  {
    "text": "that of that operation throughput is different throughput means the amount of the amount of requests that can be",
    "start": "1431300",
    "end": "1437809"
  },
  {
    "text": "processed through a server within a given period of time so let's say it's a",
    "start": "1437809",
    "end": "1443360"
  },
  {
    "text": "second if I only if I have four web workers and I'm in a single threaded environment and it can only handle one",
    "start": "1443360",
    "end": "1450200"
  },
  {
    "text": "request at a time then my throughput on that sleep one function is going to be four so I'm gonna be able to handle four",
    "start": "1450200",
    "end": "1457550"
  },
  {
    "text": "requests in a given second and each request is gonna take a second no matter what I do all right so there are ways to",
    "start": "1457550",
    "end": "1464210"
  },
  {
    "text": "change these into independently write throughput even if you add eight workers now your throughput is eight if you have",
    "start": "1464210",
    "end": "1470300"
  },
  {
    "text": "twelve workers now your throughput is twelve latency if I said sleep point",
    "start": "1470300",
    "end": "1476030"
  },
  {
    "text": "four zero point five instead of sleep one well now my four web workers can do eight in the given second alright so",
    "start": "1476030",
    "end": "1481760"
  },
  {
    "text": "important to understand here between these two numbers but important to understand both of these numbers visa",
    "start": "1481760",
    "end": "1487700"
  },
  {
    "text": "Vee your application what is it what is the latency of the different endpoints of my application and what is the throughput how much traffic and I",
    "start": "1487700",
    "end": "1493760"
  },
  {
    "text": "actually handle having good measurements helps you kind of figure this out alright so this graph is great this",
    "start": "1493760",
    "end": "1500510"
  },
  {
    "text": "graph is an opportunity so here this is CPU of an instance and what we see here",
    "start": "1500510",
    "end": "1505640"
  },
  {
    "text": "is that for this is what an hour nope half hour so for most for half of",
    "start": "1505640",
    "end": "1512720"
  },
  {
    "text": "this half hour this server was basically completely idle and then for 15 minutes of it it was at a hundred percent right",
    "start": "1512720",
    "end": "1519740"
  },
  {
    "text": "so for for 15 of those minutes we were spending money on this server that didn't have to be running right so this",
    "start": "1519740",
    "end": "1526670"
  },
  {
    "text": "is this is like a hidden jewel of an instance in your account that you can take action on and save money and you",
    "start": "1526670",
    "end": "1534710"
  },
  {
    "text": "know every if you've not spent a lot of time and Claude watch metrics I encourage you just to like take a couple",
    "start": "1534710",
    "end": "1540800"
  },
  {
    "text": "hours and just look at all your graphs build some dashboards alright build some dashboards for your application and get",
    "start": "1540800",
    "end": "1546500"
  },
  {
    "text": "to understand the heartbeat and signature of your system and find opportunities like this to save money like maybe this is a server that runs a",
    "start": "1546500",
    "end": "1553100"
  },
  {
    "text": "job at you know eight to eighteen twenty six twenty every night well maybe this doesn't need",
    "start": "1553100",
    "end": "1558440"
  },
  {
    "text": "to be a server running maybe this could be a lambda function or a step function that is automated through cloud watch",
    "start": "1558440",
    "end": "1564769"
  },
  {
    "text": "events though it just runs and and does its job and you only pay for the amount of processing time you're actually using",
    "start": "1564769",
    "end": "1570260"
  },
  {
    "text": "instead of paying for this extra fifteen minutes on this note so there's this",
    "start": "1570260",
    "end": "1575990"
  },
  {
    "start": "1574000",
    "end": "1841000"
  },
  {
    "text": "this kind of snarky corollary to Moore's law gates law or works law the idea is that",
    "start": "1575990",
    "end": "1582590"
  },
  {
    "text": "like software's getting crappier and slower faster than hardware is getting faster right so the whole moore's laura",
    "start": "1582590",
    "end": "1588710"
  },
  {
    "text": "thing of every 18 months of doubling of speed developers like us are blowing it",
    "start": "1588710",
    "end": "1595159"
  },
  {
    "text": "and making things worse faster than the hardware can compensate and we're doing that for good reason we have the best of",
    "start": "1595159",
    "end": "1600679"
  },
  {
    "text": "intentions we are trying to ship newer newer cooler features to our customers but this is pretty common right you'll",
    "start": "1600679",
    "end": "1607190"
  },
  {
    "text": "have an endpoint like a friend's endpoint here v1 will be super snappy 32 milliseconds by the time our our product",
    "start": "1607190",
    "end": "1614690"
  },
  {
    "text": "folks and our dev team is done with it we've you know added 16 milliseconds to it to it on latency right so",
    "start": "1614690",
    "end": "1621580"
  },
  {
    "text": "understanding you know tracking and understanding and measuring this kind of latency on on an endpoint by endpoint",
    "start": "1621580",
    "end": "1629210"
  },
  {
    "text": "basis is also really important again it's just part of your systems behavior it's part of its health signature you",
    "start": "1629210",
    "end": "1635960"
  },
  {
    "text": "know typically stuff like this gets caught in code review or you know potentially the gold standard is to",
    "start": "1635960",
    "end": "1641389"
  },
  {
    "text": "catch this jump and you know the 60 milliseconds is in the end of the world but what if this was 800 milliseconds",
    "start": "1641389",
    "end": "1646970"
  },
  {
    "text": "right getting nipping that during the development cycle rather than having",
    "start": "1646970",
    "end": "1652970"
  },
  {
    "text": "your customers discovering it is the goal all right so figuring out a way to measure this proactively what's in",
    "start": "1652970",
    "end": "1658250"
  },
  {
    "text": "production today how is it operating will I get alerted if my endpoints",
    "start": "1658250",
    "end": "1664159"
  },
  {
    "text": "become super latent and then catching it in development so that your customers don't actually feel that pain if it's",
    "start": "1664159",
    "end": "1670669"
  },
  {
    "text": "actually changed if the latency increase is and occur is a result of some change",
    "start": "1670669",
    "end": "1676220"
  },
  {
    "text": "you made in development another tool so there's a bunch of interesting tools that are I think our",
    "start": "1676220",
    "end": "1682100"
  },
  {
    "text": "support team build so one is called ec2 right-sizing it's essentially a group of Python scripts that",
    "start": "1682100",
    "end": "1687850"
  },
  {
    "text": "you could deploy through a cloud formation template onto an instance and it will look at all of your instances",
    "start": "1687850",
    "end": "1693400"
  },
  {
    "text": "and it'll tell you it will give you suggestions on how to optimize your spent say like this instance has been",
    "start": "1693400",
    "end": "1699160"
  },
  {
    "text": "idle ninety-five percent of the time you know can you use something like the ec2",
    "start": "1699160",
    "end": "1704320"
  },
  {
    "text": "scheduler to start and stop it or you know can you employ auto scaling or maybe you're just not using that",
    "start": "1704320",
    "end": "1709330"
  },
  {
    "text": "instance anymore you know something we commonly find will sit down with a customer and the customer or he or she will say I'm spending too much money",
    "start": "1709330",
    "end": "1715500"
  },
  {
    "text": "we'll look at their account and you know we'll ask her where you deployed they'll say Northern Virginia and then we'll",
    "start": "1715500",
    "end": "1720970"
  },
  {
    "text": "find like oh you have several hundred dollars of instances running in Oregon did you know no I didn't know right so",
    "start": "1720970",
    "end": "1727360"
  },
  {
    "text": "if you're not with the the rate of new",
    "start": "1727360",
    "end": "1734620"
  },
  {
    "text": "growth new hires that you're making as a start up with the fact that the first engineer he or she's going to grow so",
    "start": "1734620",
    "end": "1740289"
  },
  {
    "text": "many responsibilities that they may not recall every micro decision they made in the first year of the company's life",
    "start": "1740289",
    "end": "1746100"
  },
  {
    "text": "using tools like this to sort of verify what's been done in the past is super important to be able to identify",
    "start": "1746100",
    "end": "1751600"
  },
  {
    "text": "opportunities to reduce your spend on that note there's a service called",
    "start": "1751600",
    "end": "1756880"
  },
  {
    "text": "trusted advisors anyone using trusted adviser you want to know okay awesome cool so there's probably you know",
    "start": "1756880",
    "end": "1764890"
  },
  {
    "text": "there's thousands of folks at a table yes with my job right and our job is to work with customers to help them not",
    "start": "1764890",
    "end": "1770020"
  },
  {
    "text": "only on cost optimization but you know to ensure that they're using the platform as securely as possible with",
    "start": "1770020",
    "end": "1776650"
  },
  {
    "text": "the most reliability and fault tolerance and for the best performance right and sometimes these are tugs on each other",
    "start": "1776650",
    "end": "1782640"
  },
  {
    "text": "we've codified a lot of the suggestions we make over and over again to customers and what we've learned frankly from our",
    "start": "1782640",
    "end": "1788530"
  },
  {
    "text": "customers educating us on what they need into trusted advisor you can go into trusted advisor and get cost",
    "start": "1788530",
    "end": "1794620"
  },
  {
    "text": "optimization recommendations so without doing any work on your own you click on trusted advisor you click on cost the",
    "start": "1794620",
    "end": "1801220"
  },
  {
    "text": "cost pillar and it'll show you some opportunities like you know you're running a load balancer but that load balancer doesn't have any instances on",
    "start": "1801220",
    "end": "1807340"
  },
  {
    "text": "it you're just paying $20 a month for no reason click here to destroy it you know so",
    "start": "1807340",
    "end": "1813270"
  },
  {
    "text": "really really good like we always start here with customers let's go into",
    "start": "1813270",
    "end": "1818650"
  },
  {
    "text": "trusted advisor let's look at what - Liz suggesting to you and let's treat that as a starting point usually there's",
    "start": "1818650",
    "end": "1824350"
  },
  {
    "text": "some really good low-hanging fruit in there so I encourage you all to check that out so you with business support",
    "start": "1824350",
    "end": "1831850"
  },
  {
    "text": "it's all free so if you have a business support account you get it with that business support there's a you get",
    "start": "1831850",
    "end": "1837550"
  },
  {
    "text": "access to some of the data but not all the data so let's talk about density a",
    "start": "1837550",
    "end": "1842980"
  },
  {
    "start": "1841000",
    "end": "2166000"
  },
  {
    "text": "little bit so this is going back to compute alright so this is a pretty typical kind of like application",
    "start": "1842980",
    "end": "1851310"
  },
  {
    "text": "deployment so here we have five ec2 instances right and here's sort of like this is AWS this problem right this is",
    "start": "1851310",
    "end": "1858820"
  },
  {
    "text": "the line response water line of responsibility and this is this is your application your dependencies your your",
    "start": "1858820",
    "end": "1865270"
  },
  {
    "text": "binaries notice something here so we have five instances running this is CPU",
    "start": "1865270",
    "end": "1871990"
  },
  {
    "text": "utilization those numbers are kind of all over the map right so one system we have an on average a",
    "start": "1871990",
    "end": "1877210"
  },
  {
    "text": "nine percent utilization one we have a fifty-seven percent utilization so you know perhaps this is running a very",
    "start": "1877210",
    "end": "1884440"
  },
  {
    "text": "lightweight application that doesn't require much CPU perhaps this is running",
    "start": "1884440",
    "end": "1889480"
  },
  {
    "text": "a little bit more of a dog an application that requires a little bit more CPU but we're spending the same",
    "start": "1889480",
    "end": "1895810"
  },
  {
    "text": "amount of money all right so there's resources here let's let's pretend for the for just for assumption that these",
    "start": "1895810",
    "end": "1901270"
  },
  {
    "text": "are all the same kind of instance but we're not utilizing them all to their full potential we're not using all of",
    "start": "1901270",
    "end": "1906280"
  },
  {
    "text": "the buffalo right like the Native Americans we're only using nine percent of this particular Buffalo so how do we",
    "start": "1906280",
    "end": "1911590"
  },
  {
    "text": "increase the density of the amount that we're able to run on each instance right",
    "start": "1911590",
    "end": "1917560"
  },
  {
    "text": "so one problem with you know just loading up instances with disparate types of workloads is state management",
    "start": "1917560",
    "end": "1923650"
  },
  {
    "text": "if you have three different web applications now you have three different sets of dependencies binaries",
    "start": "1923650",
    "end": "1929050"
  },
  {
    "text": "libraries kind of commingled on the server maybe you have version conflicts where one application requires version",
    "start": "1929050",
    "end": "1935430"
  },
  {
    "text": "1.0 of some library and one requires 2.2 now you can't run those concurrently",
    "start": "1935430",
    "end": "1942300"
  },
  {
    "text": "containerization really really really helps here right so a container a docker container is the is a shippable artifact",
    "start": "1942300",
    "end": "1950200"
  },
  {
    "text": "that includes not only your application but its dependencies and the ec2 container service allows you",
    "start": "1950200",
    "end": "1956110"
  },
  {
    "text": "to very easily deploy docker containers onto AWS without managing your own",
    "start": "1956110",
    "end": "1961149"
  },
  {
    "text": "orchestration software so let's say you have those those two applications the one that requires version 1.0 of",
    "start": "1961149",
    "end": "1967299"
  },
  {
    "text": "something and another version that requires 2.2 you can create two different docker containers you have two",
    "start": "1967299",
    "end": "1972340"
  },
  {
    "text": "different doctor files that build those dependencies package them into a docker container and they can coexist on the",
    "start": "1972340",
    "end": "1977950"
  },
  {
    "text": "same ec2 instance so here we have you know we're able to reduce our spend so this is the important bit from five",
    "start": "1977950",
    "end": "1984250"
  },
  {
    "text": "systems five instances to three and those three instances are much better utilized right and we still have",
    "start": "1984250",
    "end": "1991360"
  },
  {
    "text": "our five containers running and maybe this has one set of dependencies that says another this has another but now we could bid pack the the work that we're",
    "start": "1991360",
    "end": "1999370"
  },
  {
    "text": "doing onto a smaller number of instances and spend less money right a lot of benefits here yes",
    "start": "1999370",
    "end": "2006710"
  },
  {
    "text": "across accounts",
    "start": "2007490",
    "end": "2011360"
  },
  {
    "text": "yeah absolutely so I mean you can you can have you know a separate you know two clusters or cross accounts right",
    "start": "2017309",
    "end": "2023470"
  },
  {
    "text": "that's generally how customers do it it could be the same applications right but just running within different ec2",
    "start": "2023470",
    "end": "2028750"
  },
  {
    "text": "contacts we're gonna talk a little bit more about kind of containers and how",
    "start": "2028750",
    "end": "2034840"
  },
  {
    "text": "that how that fits in but we see a lot of pickup with containers because it just makes it a lot easier for customers",
    "start": "2034840",
    "end": "2042279"
  },
  {
    "text": "to get predictability in their development cycle it makes operations a lot easier to solve the whole class of problems the",
    "start": "2042279",
    "end": "2049358"
  },
  {
    "text": "enemy when dealing with managing instances in the cloud is state alright so if you have some state where you know",
    "start": "2049359",
    "end": "2056980"
  },
  {
    "text": "you need to before this application can run you have to run this script and this script installed version 2.2 of that library that is a liability that's a",
    "start": "2056980",
    "end": "2064628"
  },
  {
    "text": "pointed gun already at your foot waiting to go off using a docker container lets you encapsulate that state into a shippable",
    "start": "2064629",
    "end": "2071230"
  },
  {
    "text": "artifact we'll talk a little bit more about state the ec2 container service does anyone heard of kubernetes or ECS",
    "start": "2071230",
    "end": "2078520"
  },
  {
    "text": "okay cool so there are different ways to run docker containers the trip was running a docker container you know it's",
    "start": "2078520",
    "end": "2084040"
  },
  {
    "text": "easy to run one container right and docker run may be - d make it a demon that's all well and good you could do",
    "start": "2084040",
    "end": "2090070"
  },
  {
    "text": "that very easily problem is if you're doing a micro services based architecture it's not just one doctor continuing or running",
    "start": "2090070",
    "end": "2095349"
  },
  {
    "text": "you're probably running many docker containers many different docker containers docker container images and",
    "start": "2095349",
    "end": "2101710"
  },
  {
    "text": "you need something to orchestrate that what happens when that docker container dies like let's say I introduce a bug and someone hits an endpoint in that",
    "start": "2101710",
    "end": "2108400"
  },
  {
    "text": "docker container crashes whose job is it to restart that docker container what if an instance disappears maybe a Tobias",
    "start": "2108400",
    "end": "2114220"
  },
  {
    "text": "has a service event and an entire availability zone goes down right can happen how how does that that docker",
    "start": "2114220",
    "end": "2120609"
  },
  {
    "text": "container get restarted with in another availability zone this is the province of ec2 container service this is the",
    "start": "2120609",
    "end": "2126700"
  },
  {
    "text": "problem it solves for you it is a way to easily manage clusters of any scale could be two servers could be thousands",
    "start": "2126700",
    "end": "2133150"
  },
  {
    "text": "of servers you can dictate what containers get placed on what instances",
    "start": "2133150",
    "end": "2139570"
  },
  {
    "text": "maybe you have a container that requires GPU access maybe of another container that requires high amounts of memory",
    "start": "2139570",
    "end": "2145330"
  },
  {
    "text": "you can configure that all within the ec2 container service it's extensible it performs that scale we build on it a ton",
    "start": "2145330",
    "end": "2152200"
  },
  {
    "text": "you know someone mentioned before AWS batch was built on ECS things like code build like there are tons of AWS in",
    "start": "2152200",
    "end": "2158770"
  },
  {
    "text": "general is using ec2 at scale ie CS at scale as are many of our customers let's",
    "start": "2158770",
    "end": "2166810"
  },
  {
    "start": "2166000",
    "end": "2276000"
  },
  {
    "text": "talk about development environments development environments are a great opportunity for cost savings how do you",
    "start": "2166810",
    "end": "2174390"
  },
  {
    "text": "you know how do you how do you Bank some free money here so your developers",
    "start": "2174390",
    "end": "2179680"
  },
  {
    "text": "generally will work a certain number of days in a in a week and a certain number",
    "start": "2179680",
    "end": "2184960"
  },
  {
    "text": "of hours on those days so there's built-in idle time so instead of running your development environments 24 hours",
    "start": "2184960",
    "end": "2191880"
  },
  {
    "text": "if you get into a state where you can power on and power off that's a much better place to be so here you're",
    "start": "2191880",
    "end": "2197980"
  },
  {
    "text": "banking eight hours that's like right back and you're in your wallet and you",
    "start": "2197980",
    "end": "2203050"
  },
  {
    "text": "know you're ensuring that the system is up during business hours so you can use ec2 scheduler for this if you google ec2",
    "start": "2203050",
    "end": "2209500"
  },
  {
    "text": "scheduler you'll find any of your s answers page and very quickly you know easy to schedule is just the lambda",
    "start": "2209500",
    "end": "2215200"
  },
  {
    "text": "function right so one of the cool things about lambda is that you can use it to automate your infrastructure so you can use lambda to start and stop instances",
    "start": "2215200",
    "end": "2223450"
  },
  {
    "text": "on a schedule you can say you know at 8 a.m. let's make sure my development environment is up so that mean",
    "start": "2223450",
    "end": "2228760"
  },
  {
    "text": "developers can come in and they can get to work and when they go home for the day at 9 p.m. or 8 p.m. or whatever it",
    "start": "2228760",
    "end": "2234040"
  },
  {
    "text": "is 5 p.m. shutdown all that infrastructure right why pay to run it all night no one's working all night hopefully hopefully",
    "start": "2234040",
    "end": "2240100"
  },
  {
    "text": "you're not in that place that's that's another talk but you know take advantage",
    "start": "2240100",
    "end": "2245440"
  },
  {
    "text": "of stuff like this like there's no reason to run these instances all the time you're just pouring money down the drain",
    "start": "2245440",
    "end": "2250680"
  },
  {
    "text": "and here's a little bit more about ec2 scheduler words words words so you can point ec2 scheduler add a certain set of",
    "start": "2250680",
    "end": "2257950"
  },
  {
    "text": "resource tags so maybe you have a tag like environment : dev you could say",
    "start": "2257950",
    "end": "2263470"
  },
  {
    "text": "none of my dev environments need to be running on the weekend I want them all stopped on Friday night right that's",
    "start": "2263470",
    "end": "2269050"
  },
  {
    "text": "very easy to do you can get that done within 15 minutes by installing ec2 scheduler super worthwhile",
    "start": "2269050",
    "end": "2277180"
  },
  {
    "start": "2276000",
    "end": "2351000"
  },
  {
    "text": "next auto-scaling so we touched on this before so our scaling you can scale by metrics right and that's like CPU goes",
    "start": "2277180",
    "end": "2284079"
  },
  {
    "text": "above eighty percent on my auto scaling group then I want to add instances or if it goes below twenty percent I want to",
    "start": "2284079",
    "end": "2290380"
  },
  {
    "text": "remove instances totally you can do that it makes a lot of sense for some workloads schedule scheduling might make",
    "start": "2290380",
    "end": "2297039"
  },
  {
    "text": "more sense like maybe you're a b2b application and you know that work comes in to your application nine-to-five like",
    "start": "2297039",
    "end": "2303789"
  },
  {
    "text": "clockwork right you know this because your metrics and you look at the metrics and you see the graph you can tell ec to",
    "start": "2303789",
    "end": "2309220"
  },
  {
    "text": "scale up in the morning let's create six instances and keep those running if you need more than that use this metric to",
    "start": "2309220",
    "end": "2315250"
  },
  {
    "text": "scale up but make sure you maintain six and at night at six pm",
    "start": "2315250",
    "end": "2320589"
  },
  {
    "text": "scaling back down let's have up to just for those stragglers and maybe working around the clock those poor poor souls",
    "start": "2320589",
    "end": "2327599"
  },
  {
    "text": "you could scalp so you can scale by policy scale by schedule super powerful",
    "start": "2327599",
    "end": "2332619"
  },
  {
    "text": "I mean there's so many classes of application where you know there may be your us focus may be your Eastern East",
    "start": "2332619",
    "end": "2339369"
  },
  {
    "text": "Coast focus where there's just no reason to maintain the same fleet size during the night so use these tools make sure",
    "start": "2339369",
    "end": "2346329"
  },
  {
    "text": "you're not make sure you're not paying AWS a dollar more than you need to and",
    "start": "2346329",
    "end": "2352230"
  },
  {
    "start": "2351000",
    "end": "2526000"
  },
  {
    "text": "finally you know you want the tug on cost optimization especially with dev",
    "start": "2352230",
    "end": "2359140"
  },
  {
    "text": "workloads it's always efficiency right you want to make sure that you're spending the least amount of money",
    "start": "2359140",
    "end": "2364599"
  },
  {
    "text": "possible but no less right that's like a deed Aramco like good design is removing everything but nothing more you want to",
    "start": "2364599",
    "end": "2371230"
  },
  {
    "text": "make sure that your developers don't hit a wall where they're like I couldn't get this work done because you're trying to",
    "start": "2371230",
    "end": "2376390"
  },
  {
    "text": "pinch pennies and my development environment isn't there the best thing you can do is give your team tools so",
    "start": "2376390",
    "end": "2382630"
  },
  {
    "text": "they can spin up and spin down their own instances so you know chat ops is a",
    "start": "2382630",
    "end": "2387640"
  },
  {
    "text": "great way to do that something I've done in the past is I worked at a company where we had ten developer environments",
    "start": "2387640",
    "end": "2393609"
  },
  {
    "text": "red green blue whatever and we were turning them off at night but it was still inefficient because we weren't",
    "start": "2393609",
    "end": "2399220"
  },
  {
    "text": "using all ten at any given time and they were just long-running they were just you know they just existed and instead",
    "start": "2399220",
    "end": "2406180"
  },
  {
    "text": "of doing that instead of keeping them running what we did instead was we created an interface through chata",
    "start": "2406180",
    "end": "2412690"
  },
  {
    "text": "and exposed to through chat ops where any engineer can say I have a topic branch on github I want to take that",
    "start": "2412690",
    "end": "2418809"
  },
  {
    "text": "topic branch and spin up a new environment so with one command like you know new environment new and then topic",
    "start": "2418809",
    "end": "2426010"
  },
  {
    "text": "name the child spot would go provision the infrastructure necessary using a cloud formation template tag it so that",
    "start": "2426010",
    "end": "2433299"
  },
  {
    "text": "it knows so that AWS is aware of the fact that this is being spun up by this",
    "start": "2433299",
    "end": "2438339"
  },
  {
    "text": "user for this project you know with this cost center code or whatever all done",
    "start": "2438339",
    "end": "2445000"
  },
  {
    "text": "for you so the customer doesn't have to know the engineer and tell him or herself do not need to worry about",
    "start": "2445000",
    "end": "2450930"
  },
  {
    "text": "spinning up infrastructure to work they can just run one command and they'll have a standard cookie cutter",
    "start": "2450930",
    "end": "2456609"
  },
  {
    "text": "environment even better now that environment is tracked so you can have like a lambda function or something that",
    "start": "2456609",
    "end": "2463270"
  },
  {
    "text": "looks at those environments and figures out which ones aren't used anymore and reaps them you know maybe you have like",
    "start": "2463270",
    "end": "2468670"
  },
  {
    "text": "a seven-day limit you know at the end of seven days it just kills it and then tells your dev group hey I killed dev",
    "start": "2468670",
    "end": "2474039"
  },
  {
    "text": "environment new login page it goes it's seven days or maybe it says new login",
    "start": "2474039",
    "end": "2479140"
  },
  {
    "text": "page hasn't had a deployment in two days I'm going to kill it yes no so it",
    "start": "2479140",
    "end": "2484750"
  },
  {
    "text": "increases visibility it creates an interface for your your team to be able to spin up",
    "start": "2484750",
    "end": "2491230"
  },
  {
    "text": "infrastructure in an improved way in a tracked way here we're demoing this is Mackenzie demoing you know you can have",
    "start": "2491230",
    "end": "2498069"
  },
  {
    "text": "a chat box that lets you power on and power off instances again like this lets your developers without having like",
    "start": "2498069",
    "end": "2504539"
  },
  {
    "text": "console access to ec2 have an interface to be able to move create the resources",
    "start": "2504539",
    "end": "2509890"
  },
  {
    "text": "they need to get their work done without with team awareness everyone sees that",
    "start": "2509890",
    "end": "2516250"
  },
  {
    "text": "this happened that this is powered on and power it off and then folks can it just raises it creates an environment",
    "start": "2516250",
    "end": "2522460"
  },
  {
    "text": "where people are more conscientious about what they're using what they're spending sizing is really important with",
    "start": "2522460",
    "end": "2529569"
  },
  {
    "start": "2526000",
    "end": "2559000"
  },
  {
    "text": "Devon says this is the easy one we see lots of desert Devon senses that are like m4 larges and it's like what you",
    "start": "2529569",
    "end": "2536980"
  },
  {
    "text": "know don't spend you know tens of dollars a month on those development instances spend dollars right",
    "start": "2536980",
    "end": "2544180"
  },
  {
    "text": "make sure your right sizing your workload all the way down and you know be be aggressive here is again like a",
    "start": "2544180",
    "end": "2549490"
  },
  {
    "text": "tee to nano or you know a tee to micro you could be like a penny a penny and a fifth for your dev instances as opposed",
    "start": "2549490",
    "end": "2556299"
  },
  {
    "text": "to paying a couple bucks an hour deploy pipelines so you know seeing cost",
    "start": "2556299",
    "end": "2564039"
  },
  {
    "start": "2559000",
    "end": "2706000"
  },
  {
    "text": "optimization is more about it's it's more than just like the monthly one rate of your infrastructure that you pay out",
    "start": "2564039",
    "end": "2570250"
  },
  {
    "text": "of your ass all right there's cost in your development process as I mentioned you don't want to slow down your developers to pinch pennies right because it's",
    "start": "2570250",
    "end": "2576130"
  },
  {
    "text": "Pennywise pound-foolish if you put a bunch of resource limitations in the way and you're saving a hundred bucks a",
    "start": "2576130",
    "end": "2583599"
  },
  {
    "text": "month that's awesome but your developer who maybe you're paying hundreds of dollars a day is now blocked and he or",
    "start": "2583599",
    "end": "2589390"
  },
  {
    "text": "she can't do their job and that's a loss right that's a net loss so you know",
    "start": "2589390",
    "end": "2594609"
  },
  {
    "text": "keeping your development environment keeping your developers unblocked keeping your process fast keeping all",
    "start": "2594609",
    "end": "2601690"
  },
  {
    "text": "this automation in place is important for that development pipelines are build",
    "start": "2601690",
    "end": "2607270"
  },
  {
    "text": "pipelines see ICD pipelines help you it's it's a an automated manifestation of the process that you take to get your",
    "start": "2607270",
    "end": "2614049"
  },
  {
    "text": "code from your source code repository into production right so from your source code layer all the way up to",
    "start": "2614049",
    "end": "2619960"
  },
  {
    "text": "monitoring in production part of that is building your code right so maybe that",
    "start": "2619960",
    "end": "2625990"
  },
  {
    "text": "actually means like you're using like Java or go or something and you're compiling some sort of binary or",
    "start": "2625990",
    "end": "2631569"
  },
  {
    "text": "artifact maybe you're running unit tests right maybe you're using node or Ruby on Rails and you're running our specs backs",
    "start": "2631569",
    "end": "2637480"
  },
  {
    "text": "or something like that but there's always there's a build step right so you have a CI server it's running tests",
    "start": "2637480",
    "end": "2643569"
  },
  {
    "text": "against your build it's compiling your build and there's a red light green light if your build broke and your team's made aware of it this is always",
    "start": "2643569",
    "end": "2650680"
  },
  {
    "text": "an opportunity if you're running your own server to do your own builds there's always a cheaper way to do that so the",
    "start": "2650680",
    "end": "2657010"
  },
  {
    "text": "the retrograde example is that you're running like a Jenkins server and it's running 24 by 7 and there are so many",
    "start": "2657010",
    "end": "2664569"
  },
  {
    "text": "ways to optimize that so one cool way is with Jenkins in particular Jenkins is",
    "start": "2664569",
    "end": "2669730"
  },
  {
    "text": "just the CI server this open source very popular you can use its spot fleet",
    "start": "2669730",
    "end": "2674799"
  },
  {
    "text": "integration plug-in to plug Jenkins into spot so instead of using on-demand instances and paying by the second you know",
    "start": "2674799",
    "end": "2681740"
  },
  {
    "text": "premium price you could tell Jenkins actually build using this type of",
    "start": "2681740",
    "end": "2686900"
  },
  {
    "text": "instance and I'm willing to pay this much right and that's your bid and you'll would be charged of the",
    "start": "2686900",
    "end": "2691910"
  },
  {
    "text": "marketplace price so it's super super easy way to like lower your bill right away like instead of paying top dollar",
    "start": "2691910",
    "end": "2698180"
  },
  {
    "text": "for build servers you spot right and Jenkins makes it easy you install a plugin you tell what you want to pay done there are alternatives to that we",
    "start": "2698180",
    "end": "2706940"
  },
  {
    "start": "2706000",
    "end": "2769000"
  },
  {
    "text": "launched at reinvent last year's servers called AWS code build so code build is a build service the idea here is that you're not",
    "start": "2706940",
    "end": "2713270"
  },
  {
    "text": "managing servers of any kind you are basically you give code build your",
    "start": "2713270",
    "end": "2719810"
  },
  {
    "text": "project your source script repository and it will build for you it'll spin up all the resources you need it'll do your",
    "start": "2719810",
    "end": "2725960"
  },
  {
    "text": "build and it will let you know if it passed or failed the really cool bit about code built so there's per minute",
    "start": "2725960",
    "end": "2731450"
  },
  {
    "text": "billing not per second yeah but it's per minute so you're not paying for on-demand instances but the really cool",
    "start": "2731450",
    "end": "2736820"
  },
  {
    "text": "thing is like I've always been on that dev team where you check something in you have a topic branch you want to be",
    "start": "2736820",
    "end": "2742850"
  },
  {
    "text": "done you want to be done and you have to wait right the build process is blocked there's three builds going there's no",
    "start": "2742850",
    "end": "2749390"
  },
  {
    "text": "more slots for you you just got to wait so you go play ping pong or whatever it is code build you get instant scale so you",
    "start": "2749390",
    "end": "2754910"
  },
  {
    "text": "don't have three slots it'll just scale as much as you need to as many builds as you need to run",
    "start": "2754910",
    "end": "2759920"
  },
  {
    "text": "concurrently that it sounds like a small thing but it's so important to keeping your developers moving and unblocked",
    "start": "2759920",
    "end": "2765970"
  },
  {
    "text": "code builds a really cool service I would encourage you to check it out let's talk more about state so how am i",
    "start": "2765970",
    "end": "2773270"
  },
  {
    "text": "doing on time Bret pretty close all right what five minutes all right all",
    "start": "2773270",
    "end": "2778820"
  },
  {
    "text": "right let's let's power through this let's skip this slide so I talked about state so state is a state is often the",
    "start": "2778820",
    "end": "2787850"
  },
  {
    "start": "2781000",
    "end": "2844000"
  },
  {
    "text": "enemy when it comes to operating instances in production right you don't want your instances to be let's fill",
    "start": "2787850",
    "end": "2794300"
  },
  {
    "text": "pets not cattle analogy you don't want your instance to be these thing that you name that you take care of that you kind",
    "start": "2794300",
    "end": "2801110"
  },
  {
    "text": "of craft by hand artistically you want them to be disposable all right so here's a common situation where you have",
    "start": "2801110",
    "end": "2807260"
  },
  {
    "text": "a service failure someone logs into that box they manually make it tweak and service recovers and one psyched right that was in February",
    "start": "2807260",
    "end": "2813620"
  },
  {
    "text": "in April you have three new developers they provision a new instance the",
    "start": "2813620",
    "end": "2819170"
  },
  {
    "text": "missing and missing the manual treats because no one documented it wasn't them to infrastructure as code the service fails the problem here isn't the missing",
    "start": "2819170",
    "end": "2826070"
  },
  {
    "text": "manual tweak it's the fact that weeks are made manually so getting to a state where like Bluegreen deployment where",
    "start": "2826070",
    "end": "2833000"
  },
  {
    "text": "every new deployment you launch new instances helps you sort of keep these servers pure you always know the state",
    "start": "2833000",
    "end": "2839780"
  },
  {
    "text": "of them because anytime a state change happens it's a new server there's no question about state there all right so",
    "start": "2839780",
    "end": "2847070"
  },
  {
    "start": "2844000",
    "end": "2895000"
  },
  {
    "text": "very quickly I just want to touch upon this before where you get out of here so serverless the idea of serverless here",
    "start": "2847070",
    "end": "2853280"
  },
  {
    "text": "and you look at the evolution so 2000 let's say 2006 with ec2 you know you",
    "start": "2853280",
    "end": "2859520"
  },
  {
    "text": "could provision servers and minutes without you know requisitioning hardware right huge advance well your concern space was still quite large right you",
    "start": "2859520",
    "end": "2866180"
  },
  {
    "text": "have to worry about the OS you have to worry about security patches to worry about the applications docker docker",
    "start": "2866180",
    "end": "2872960"
  },
  {
    "text": "container docker and specifically but containerization in general helps reduce that a little bit you know you know when",
    "start": "2872960",
    "end": "2878270"
  },
  {
    "text": "you deploy a container you're less worried about the underlying instance in fact you want that instance to be as skinny as possible and you're more",
    "start": "2878270",
    "end": "2884750"
  },
  {
    "text": "focused on the environment and the dependencies of your application service is the extension of this where you're",
    "start": "2884750",
    "end": "2889760"
  },
  {
    "text": "not worried about any of that you you know you're worried about your code that your business needs to run for your",
    "start": "2889760",
    "end": "2895010"
  },
  {
    "start": "2895000",
    "end": "2909000"
  },
  {
    "text": "customers so you know a typical example here is an API call through API gateway goes the lambda goes to",
    "start": "2895010",
    "end": "2901190"
  },
  {
    "text": "dynamodb and this is this is a like this could be a micro service representing an",
    "start": "2901190",
    "end": "2907070"
  },
  {
    "text": "operation against a piece of data so we're done you know in summary Brent",
    "start": "2907070",
    "end": "2915080"
  },
  {
    "start": "2909000",
    "end": "2967000"
  },
  {
    "text": "in summary pay us as little as possible but no less right and like don't like",
    "start": "2915080",
    "end": "2921440"
  },
  {
    "text": "and press on your ad based account team to help you pay less it's it's something",
    "start": "2921440",
    "end": "2926600"
  },
  {
    "text": "that's important to I can't stress enough that we that this is this is part",
    "start": "2926600",
    "end": "2931640"
  },
  {
    "text": "of our focus we want you to pay as little as possible ensure that you're aware of your applications behavior",
    "start": "2931640",
    "end": "2938090"
  },
  {
    "text": "increase your visibility into your application find opportunities for cost reduction idle servers build sir",
    "start": "2938090",
    "end": "2945170"
  },
  {
    "text": "furs development environments and be be aggressive be like relentless about like stamping cost out of your infrastructure",
    "start": "2945170",
    "end": "2951079"
  },
  {
    "text": "these slides will be online there's a bunch of stuff here about helping you you know right sizing which which is the",
    "start": "2951079",
    "end": "2958329"
  },
  {
    "text": "ec2 scheduler is linked from there as well and that's that thank you all for your attention super appreciate it thank",
    "start": "2958329",
    "end": "2964549"
  },
  {
    "text": "you thanks guys [Applause]",
    "start": "2964549",
    "end": "2968900"
  }
]