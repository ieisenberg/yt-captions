[
  {
    "start": "0",
    "end": "32000"
  },
  {
    "text": "so this is the well welcome to start with and uh",
    "start": "80",
    "end": "5200"
  },
  {
    "text": "my name is chris whittaker i'm the development manager the software development manager for the elastic beanstalk team and for the clay",
    "start": "5200",
    "end": "11519"
  },
  {
    "text": "formation team and this presentation is really kind of a follow-on from",
    "start": "11519",
    "end": "16640"
  },
  {
    "text": "the presentation evan did this morning uh in the same room so it kind of falls on from that and",
    "start": "16640",
    "end": "21680"
  },
  {
    "text": "goes into more detail about other things you can do with elastic beanstalk",
    "start": "21680",
    "end": "28240"
  },
  {
    "text": "um let's find a clicker there we go um so the good news is you don't have to",
    "start": "28800",
    "end": "34320"
  },
  {
    "start": "32000",
    "end": "139000"
  },
  {
    "text": "listen to me for now we have um syndra and pen chow from thoughtworks",
    "start": "34320",
    "end": "39680"
  },
  {
    "text": "and they're going to talk about an interesting application tool that they built on top of elastic bean stock",
    "start": "39680",
    "end": "45120"
  },
  {
    "text": "that makes it easier to deploy and manage applications on top of elastic green stock and so i hand it over to them",
    "start": "45120",
    "end": "52079"
  },
  {
    "text": "about halfway through so what are we going to talk about so we",
    "start": "52079",
    "end": "58079"
  },
  {
    "text": "have we have a few things to talk about so we're going to talk about kind of how to control the lifetime of",
    "start": "58079",
    "end": "64158"
  },
  {
    "text": "aws resources relative to the application itself so for example you may have your",
    "start": "64159",
    "end": "70799"
  },
  {
    "text": "application deployed you may have a database you want to deploy but you may want the database to",
    "start": "70799",
    "end": "76479"
  },
  {
    "text": "last longer than the application itself and we'll talk about how to do that",
    "start": "76479",
    "end": "83200"
  },
  {
    "text": "then we're going to talk about how to extend elastic bean stock so we give you a specific set of",
    "start": "83200",
    "end": "88880"
  },
  {
    "text": "resources when you create an environment and we're going to talk about how to add other resources to that",
    "start": "88880",
    "end": "94560"
  },
  {
    "text": "configuration and then we're going to talk a little bit about how you might control the traffic to",
    "start": "94560",
    "end": "100240"
  },
  {
    "text": "your application as you do a deployment so how to do zero downtime deployments things like that",
    "start": "100240",
    "end": "107920"
  },
  {
    "text": "um on full disclosure i'm going to assume that you guys all know about elastic beanstalk so i'm not going to do",
    "start": "109439",
    "end": "115439"
  },
  {
    "text": "anything about introduction to elastic beanstalk i'm just going to assume you guys know that i'm going to walk through a few",
    "start": "115439",
    "end": "121200"
  },
  {
    "text": "scenarios and how you would deploy how you would use those deploy those",
    "start": "121200",
    "end": "126399"
  },
  {
    "text": "so that you can get an application up and running and then we'll hear from the thoughtworks guys",
    "start": "126399",
    "end": "131520"
  },
  {
    "text": "and then at the end we'll do a q a session uh time permitting if not we'll certainly be outside um",
    "start": "131520",
    "end": "139920"
  },
  {
    "start": "139000",
    "end": "312000"
  },
  {
    "text": "so let's talk about controlling the lifetime of resources so the the key takeaway for beanstalk",
    "start": "139920",
    "end": "146560"
  },
  {
    "text": "environments is we'll create a whole bunch of resources on your behalf so if you create an auto scaled load balance",
    "start": "146560",
    "end": "153040"
  },
  {
    "text": "beanstalk environment we'll create a load balancer we'll create an auto scaling group a bunch of other resources all those are",
    "start": "153040",
    "end": "160400"
  },
  {
    "text": "created as a single unit and managed as a single unit so anything in that environment has the",
    "start": "160400",
    "end": "165680"
  },
  {
    "text": "same lifetime so if you create that environment all those resources will be created",
    "start": "165680",
    "end": "171360"
  },
  {
    "text": "if you terminate that environment all of those resources will be deleted if you do an uh rebuild then",
    "start": "171360",
    "end": "178159"
  },
  {
    "text": "we actually tear down all of those resources and rebuild all of those resources so why is that important elastic",
    "start": "178159",
    "end": "185599"
  },
  {
    "text": "beanstalk supports rds out of the box so you can click in the console and say",
    "start": "185599",
    "end": "190879"
  },
  {
    "text": "i want a database associated with this environment or in the eb tool you can say yes i want",
    "start": "190879",
    "end": "197040"
  },
  {
    "text": "an rds database we'll actually create an rds database for you during that environment creation",
    "start": "197040",
    "end": "204080"
  },
  {
    "text": "but the lifetime of that database is tied to that environment so if you terminate that environment the database will go away if you rebuild",
    "start": "204080",
    "end": "211360"
  },
  {
    "text": "that environment we'll tear down the database and bring up a new one you can create snapshot of the data",
    "start": "211360",
    "end": "219040"
  },
  {
    "text": "when when we delete it so you can save the data but the new environment that comes up if",
    "start": "219040",
    "end": "224159"
  },
  {
    "text": "you do a rebuild is not going to have that data in it so there's a couple of ways you can get",
    "start": "224159",
    "end": "230239"
  },
  {
    "text": "around that it works well for kind of dev test environments where you actually do want",
    "start": "230239",
    "end": "235599"
  },
  {
    "text": "a clean database every time you spin up the environment for production that maybe not what you want because you may have",
    "start": "235599",
    "end": "242480"
  },
  {
    "text": "interesting data kind of the crown jewel data inside that database you actually need that database that to",
    "start": "242480",
    "end": "248000"
  },
  {
    "text": "keep running after the environment's terminated so you've got a couple of ways one is",
    "start": "248000",
    "end": "253439"
  },
  {
    "text": "obviously you can go to console create an ids database in the rds console link it up to the beanstalk",
    "start": "253439",
    "end": "258880"
  },
  {
    "text": "environment the other way and we'll talk a little bit about it is to use cloudformation",
    "start": "258880",
    "end": "264639"
  },
  {
    "text": "to manage the resources which have different lifetimes independently for those that don't know",
    "start": "264639",
    "end": "271520"
  },
  {
    "text": "what cloud formation is it's really just it's a one of the aws services that provides a way to create",
    "start": "271520",
    "end": "278400"
  },
  {
    "text": "a set of resources as a single unit and manage them as a single unit",
    "start": "278400",
    "end": "283520"
  },
  {
    "text": "and so in this case we'll create a beanstalk application and a database in a cloud formation stack",
    "start": "283520",
    "end": "289520"
  },
  {
    "text": "i won't talk too much about cloud formation um there've been there was a talk last year one kind of",
    "start": "289520",
    "end": "295600"
  },
  {
    "text": "intro to cloud formation that's on youtube for the reinvent um youtube channel",
    "start": "295600",
    "end": "301440"
  },
  {
    "text": "and there were a couple of uh cloudformation talks during this re invent so if you want to",
    "start": "301440",
    "end": "306880"
  },
  {
    "text": "learn more about cloudformation they're definitely good resources to look at",
    "start": "306880",
    "end": "312080"
  },
  {
    "start": "312000",
    "end": "378000"
  },
  {
    "text": "so let's dig into that a little bit more so this is my application i have an",
    "start": "312479",
    "end": "317759"
  },
  {
    "text": "environment running i have an elb my apps running on a logo on an auto scale link group and i have a",
    "start": "317759",
    "end": "325280"
  },
  {
    "text": "database and that database was created as part of this environment so it's within the box that indicates that environment",
    "start": "325280",
    "end": "333198"
  },
  {
    "text": "if i terminate that environment we're going to blow all that away so the database is going to be",
    "start": "333280",
    "end": "339199"
  },
  {
    "text": "terminated if you rebuild that environment we'll terminate the database and bring a new one up",
    "start": "339199",
    "end": "346560"
  },
  {
    "text": "for production environments where you actually want to keep that database then we really want to take that database out the environment",
    "start": "347039",
    "end": "353520"
  },
  {
    "text": "so this diagram kind of describes that where now i have the environment it just contains the load balancer",
    "start": "353520",
    "end": "359919"
  },
  {
    "text": "and the auto scaling group and some other other resources in that environment but the database is pulled out of it so",
    "start": "359919",
    "end": "366800"
  },
  {
    "text": "now when i terminate that environment we'll just terminate the elastic beanstalk",
    "start": "366800",
    "end": "372639"
  },
  {
    "text": "environment itself and the database will be kept running",
    "start": "372639",
    "end": "377919"
  },
  {
    "start": "378000",
    "end": "455000"
  },
  {
    "text": "so i'll just flip to kind of give you maybe",
    "start": "378720",
    "end": "385440"
  },
  {
    "text": "or not",
    "start": "389520",
    "end": "395840"
  },
  {
    "text": "maybe we won't look at the template we'll skip on from that but essentially i can give",
    "start": "404720",
    "end": "409919"
  },
  {
    "text": "you guys a confirmation template that will be visible we'll give that to you guys really a cloudformation template is a json file",
    "start": "409919",
    "end": "417120"
  },
  {
    "text": "it contains the set of resources that you want to create during that um",
    "start": "417120",
    "end": "424240"
  },
  {
    "text": "let's see if we can get back to that um that's fine that's yeah we're good um so it's really a json",
    "start": "424240",
    "end": "430000"
  },
  {
    "text": "file it contains the set of resources that i want to create and when you see that template you'll see that there's a database",
    "start": "430000",
    "end": "436319"
  },
  {
    "text": "a bunch of security groups and an elastic beanstalk application that defined in that template when i use",
    "start": "436319",
    "end": "441919"
  },
  {
    "text": "cloudformation to create that stack we'll create all of those resources now i can terminate or rebuild that",
    "start": "441919",
    "end": "448080"
  },
  {
    "text": "environment and the database will not be not be touched at all",
    "start": "448080",
    "end": "454000"
  },
  {
    "start": "455000",
    "end": "544000"
  },
  {
    "text": "so we talked kind of about how you add rds databases to that environment but there",
    "start": "455840",
    "end": "461440"
  },
  {
    "text": "may be other resources that you want to add so elastic beanstalk out the box gives",
    "start": "461440",
    "end": "467759"
  },
  {
    "text": "you a couple of different configurations so you have load balanced auto scaled configurations so that's a load balancer",
    "start": "467759",
    "end": "474240"
  },
  {
    "text": "an auto scaling group a bunch of security groups things like that we also support a single instance uh environment and so",
    "start": "474240",
    "end": "481840"
  },
  {
    "text": "that's a single instance with an eip mostly used for kind of deaf test environments where you don't need the",
    "start": "481840",
    "end": "487520"
  },
  {
    "text": "low bar so you only have a single instance and then we support rds databases but",
    "start": "487520",
    "end": "493199"
  },
  {
    "text": "what if you want to add other resources so for example i want to add a molester cache cluster",
    "start": "493199",
    "end": "498879"
  },
  {
    "text": "or a dynamodb table to keep session state or i want to add specific cloudwatch alarms",
    "start": "498879",
    "end": "504560"
  },
  {
    "text": "so that i can monitor my application that are created as part of the",
    "start": "504560",
    "end": "509840"
  },
  {
    "text": "environment so you got a couple of options we talked a little bit about cloud formation so that's definitely one",
    "start": "509840",
    "end": "515360"
  },
  {
    "text": "option but elastic beanstalk has a way to extend elastic bean stock environments",
    "start": "515360",
    "end": "522240"
  },
  {
    "text": "uh and like it says on on the slide the resources that you create as part of the ebay extensions",
    "start": "522240",
    "end": "528399"
  },
  {
    "text": "are actually have the same lifetime as the environment so for example if i want to create an alarm",
    "start": "528399",
    "end": "533839"
  },
  {
    "text": "that is specific to this environment i can put it in the extension and it will be torn down when the",
    "start": "533839",
    "end": "539279"
  },
  {
    "text": "environment's torn down everything will be cleaned up just fine",
    "start": "539279",
    "end": "543839"
  },
  {
    "start": "544000",
    "end": "647000"
  },
  {
    "text": "so how do you actually add resources using extensions so the way we",
    "start": "544720",
    "end": "551920"
  },
  {
    "text": "we think about extensions is they're really dependencies that the application has",
    "start": "551920",
    "end": "557600"
  },
  {
    "text": "just like packages and files that you deploy to that to the environment and so what we did",
    "start": "557600",
    "end": "563839"
  },
  {
    "text": "was say well i want to keep those with the application and so the way you do that",
    "start": "563839",
    "end": "569600"
  },
  {
    "text": "is to create configuration files that are part of the application package",
    "start": "569600",
    "end": "574959"
  },
  {
    "text": "itself and they go in a special directory eb extensions",
    "start": "574959",
    "end": "580000"
  },
  {
    "text": "you can have as many config files in there as you want when you create that environment elastic",
    "start": "580000",
    "end": "585519"
  },
  {
    "text": "beanstalk pulls down those extensions and adds them into whatever the environment is so if i want",
    "start": "585519",
    "end": "592640"
  },
  {
    "text": "to add an ebs volume to my environment i can add those if i want to create alarms i can add those",
    "start": "592640",
    "end": "599279"
  },
  {
    "text": "all defined in the configuration files so let's look a bit more deeply",
    "start": "599279",
    "end": "606880"
  },
  {
    "text": "at a configuration file so configuration file is really just it's a yaml file",
    "start": "606880",
    "end": "612880"
  },
  {
    "text": "and in that file you can specify option settings so you can configure various attributes",
    "start": "612880",
    "end": "619040"
  },
  {
    "text": "of the different resources that are in the elastic beanstalk environment and we'll go into that in a little bit",
    "start": "619040",
    "end": "624240"
  },
  {
    "text": "i can also add resources into that configuration file so if i want to add an alarm i need an",
    "start": "624240",
    "end": "629760"
  },
  {
    "text": "sns topic and i need an alarm i can add those resources into the config file when you create",
    "start": "629760",
    "end": "635760"
  },
  {
    "text": "that environment then it'll take those options settings apply those to the environment and it'll add the additional resources",
    "start": "635760",
    "end": "642079"
  },
  {
    "text": "into your elastic beanstalk environment",
    "start": "642079",
    "end": "647279"
  },
  {
    "start": "647000",
    "end": "711000"
  },
  {
    "text": "so this looks specifically a ban i want to add an ebs volume to my environment",
    "start": "647279",
    "end": "652720"
  },
  {
    "text": "ebs is actually directly ebs volumes are actually directly supported by beanstalk itself kind of",
    "start": "652720",
    "end": "659440"
  },
  {
    "text": "like rds and you can enable them by setting particular option settings",
    "start": "659440",
    "end": "664720"
  },
  {
    "text": "so in the configuration file i can have an option settings section that option settings section within that",
    "start": "664720",
    "end": "672160"
  },
  {
    "text": "you have different name spaces for different pieces of the environment in this case",
    "start": "672160",
    "end": "677279"
  },
  {
    "text": "i actually want to change the launch configuration i want to be able to say well i really want an m1 large instance",
    "start": "677279",
    "end": "683040"
  },
  {
    "text": "type and i want to i want to attach an ebs",
    "start": "683040",
    "end": "688480"
  },
  {
    "text": "volume to each instance that is spun out and so i can do that through block device mappings",
    "start": "688480",
    "end": "694160"
  },
  {
    "text": "auto scaling support block device mappings to allow you to attach ebs volumes during instance creation so each",
    "start": "694160",
    "end": "701040"
  },
  {
    "text": "instance in this case will get a hundred gig volume that will be attached to dev sdj in a linux world",
    "start": "701040",
    "end": "710480"
  },
  {
    "start": "711000",
    "end": "879000"
  },
  {
    "text": "if i want to add additional resources i can also add resources in the resources section of the configuration file",
    "start": "711440",
    "end": "719040"
  },
  {
    "text": "so in this case i want to create an alarm which means i need an sns topic to actually send that notification to",
    "start": "719040",
    "end": "726160"
  },
  {
    "text": "so within that i can define the what that topic should look like uh",
    "start": "726160",
    "end": "732639"
  },
  {
    "text": "in this case uh it's an sns topic and has a bunch of properties one of which is what protocol to use to send a",
    "start": "732639",
    "end": "739279"
  },
  {
    "text": "notification in this case email and then where to send that email",
    "start": "739279",
    "end": "745360"
  },
  {
    "text": "which is the end point in this configuration within a configuration you can reference",
    "start": "745360",
    "end": "750800"
  },
  {
    "text": "other option settings so for example in this example the alarm email address is",
    "start": "750800",
    "end": "756560"
  },
  {
    "text": "actually taken from one of the other option settings and you can default the value so if you",
    "start": "756560",
    "end": "762240"
  },
  {
    "text": "didn't specify a value for alarm email then it'll get sent to nobody at amazon.com",
    "start": "762240",
    "end": "767600"
  },
  {
    "text": "so that's kind of a way to add other resources to your environment and be able to",
    "start": "767600",
    "end": "774560"
  },
  {
    "text": "access other option settings to configure those particular resources i then need the alarm so",
    "start": "774560",
    "end": "780800"
  },
  {
    "text": "in this case i'm creating a cloud watch alarm it's a cpu alarm so it has ec2 namespace cpu utilization",
    "start": "780800",
    "end": "790000"
  },
  {
    "text": "particular it's the average i want a period of 300 evaluation period and so forth",
    "start": "790000",
    "end": "798399"
  },
  {
    "text": "but i want to actually have the aggregate across the auto scaling group so cloudwatch allows you to do that by",
    "start": "798399",
    "end": "804720"
  },
  {
    "text": "what it calls dimensions and one of the dimensions you can specify to an alarm is",
    "start": "804720",
    "end": "809760"
  },
  {
    "text": "the auto scaling group name so we need to put that into the configuration",
    "start": "809760",
    "end": "815200"
  },
  {
    "text": "in order to get the aggregate alarm the way you can do that within the eb extensions is i can",
    "start": "815200",
    "end": "821360"
  },
  {
    "text": "reference other resources that are in that configuration",
    "start": "821360",
    "end": "826480"
  },
  {
    "text": "so in this case i need the auto scaling group name and so you can see there that there's a reference to",
    "start": "826480",
    "end": "832000"
  },
  {
    "text": "the aws auto scaling group that's the group that elastic beanstalk created in order to",
    "start": "832000",
    "end": "838480"
  },
  {
    "text": "run this environment so you can reference the resources that beanstalk created within configuration",
    "start": "838480",
    "end": "846480"
  },
  {
    "text": "um just as kind of a reference here this the list of the names of resources that",
    "start": "848079",
    "end": "853199"
  },
  {
    "text": "elastic beanstalk creates that you can reference in configuration files so you've got the auto scaling group",
    "start": "853199",
    "end": "858560"
  },
  {
    "text": "the launch configuration we give you the environment name if you need the environment name",
    "start": "858560",
    "end": "863760"
  },
  {
    "text": "the load balance of the database the security group so you can get the names or any of the other",
    "start": "863760",
    "end": "869120"
  },
  {
    "text": "attributes of those resources and apply those in your own configuration to extend",
    "start": "869120",
    "end": "874639"
  },
  {
    "text": "a elastic beanstalk environment",
    "start": "874639",
    "end": "878639"
  },
  {
    "text": "so that's kind of how to extend the elastic beanstalk to include all the resources so let's kind of move on to how you",
    "start": "879839",
    "end": "886320"
  },
  {
    "text": "might think about deploying to elastic beanstalk environments we'll talk about a few different things",
    "start": "886320",
    "end": "891839"
  },
  {
    "text": "so we'll talk about how to use git branches to be able to deploy",
    "start": "891839",
    "end": "898000"
  },
  {
    "text": "an application maybe a production environment in the qa environment using the same repo",
    "start": "898000",
    "end": "903440"
  },
  {
    "text": "and how you would manage and control that we'll then talk about how to do zero",
    "start": "903440",
    "end": "909040"
  },
  {
    "text": "down time deployments using cname flips and that works even like if the environment's on the heavy",
    "start": "909040",
    "end": "914639"
  },
  {
    "text": "load um cname flip is kind of an all or nothing all the traffic moves from one",
    "start": "914639",
    "end": "920720"
  },
  {
    "text": "place to another and so at the end there we'll talk a little bit about how you might control",
    "start": "920720",
    "end": "926240"
  },
  {
    "text": "the traffic in a little bit more finer grain so that i can move traffic over over time and not have a complete",
    "start": "926240",
    "end": "932959"
  },
  {
    "text": "flip from one thing to the other so branches let's talk about branches so",
    "start": "932959",
    "end": "939680"
  },
  {
    "start": "936000",
    "end": "974000"
  },
  {
    "text": "the goal is that i have production environment i have a qa environment they're all the same source code but different versions of that",
    "start": "939680",
    "end": "946560"
  },
  {
    "text": "i want to use a single git repository in order to maintain and manage that application",
    "start": "946560",
    "end": "951920"
  },
  {
    "text": "source and so i can have a single git repo and you can associate different branches in",
    "start": "951920",
    "end": "958240"
  },
  {
    "text": "that git repo with different environments which means that i can then push branch one",
    "start": "958240",
    "end": "964560"
  },
  {
    "text": "to in this case the blue environment and branch two to the green environment",
    "start": "964560",
    "end": "970079"
  },
  {
    "text": "so with and we'll look at how to do that",
    "start": "970079",
    "end": "975920"
  },
  {
    "start": "974000",
    "end": "1160000"
  },
  {
    "text": "so this in this case i'm using the command line as an example so if we walk through this so",
    "start": "976720",
    "end": "983600"
  },
  {
    "text": "in this case i'm initializing the git repo um and then we're using the eb command",
    "start": "983600",
    "end": "989040"
  },
  {
    "text": "so that's the client that's the elastic bean store command line tool so we need to",
    "start": "989040",
    "end": "995199"
  },
  {
    "text": "initialize that what that really does is say for the master branch in this git repository",
    "start": "995199",
    "end": "1001040"
  },
  {
    "text": "which environment should we deploy it to and with eb init you can either specify an",
    "start": "1001040",
    "end": "1007040"
  },
  {
    "text": "existing environment or you can create new environment or you can specify the configuration for a new",
    "start": "1007040",
    "end": "1013360"
  },
  {
    "text": "environment in this case i'm actually targeting an existing environment but if you wanted to target a new",
    "start": "1013360",
    "end": "1019440"
  },
  {
    "text": "environment then after the ebna you just do an eb start and then using whatever the init",
    "start": "1019440",
    "end": "1024720"
  },
  {
    "text": "configuration was we'll fire up a beanstalk application then i can go through the test",
    "start": "1024720",
    "end": "1030640"
  },
  {
    "text": "deployment cycle so i can add the add the source edit the source do git commits",
    "start": "1030640",
    "end": "1036000"
  },
  {
    "text": "and then do the git aws push that then pushes the get repo up to whichever environment's been",
    "start": "1036000",
    "end": "1042160"
  },
  {
    "text": "configured in this case for the master branch once i'm happy with that",
    "start": "1042160",
    "end": "1048400"
  },
  {
    "text": "i'm going to cut a branch because that's now my production code so i'm going to create a git branch in this case v1 i'm",
    "start": "1048400",
    "end": "1055120"
  },
  {
    "text": "going to check it out just so that the default git branch is the v1 branch and then i need to associate that branch",
    "start": "1055120",
    "end": "1061840"
  },
  {
    "text": "with another environment so eb has an eb branch command and just like the eb init command it associates",
    "start": "1061840",
    "end": "1069760"
  },
  {
    "text": "the current branch within with an elastic beanstalk environment so in this case again it's going to be",
    "start": "1069760",
    "end": "1076799"
  },
  {
    "text": "associated with an existing one but if i wanted to associate it with a new one as soon as i've done the eb branch i'd",
    "start": "1076799",
    "end": "1082880"
  },
  {
    "text": "then do an eb start which would start up that that new environment once i've done that",
    "start": "1082880",
    "end": "1088720"
  },
  {
    "text": "i can then do a git push that's going to push the v1 branch to the environment that i just registered",
    "start": "1088720",
    "end": "1096000"
  },
  {
    "text": "and now i have the code running in v1 for the production branch and i have the master branch pushed out",
    "start": "1096000",
    "end": "1103440"
  },
  {
    "text": "to the development environment now i can just flip between branches so i can check out the mass to edit the",
    "start": "1103440",
    "end": "1109520"
  },
  {
    "text": "source to get aws push now i can push back to the test environment so i can continue my",
    "start": "1109520",
    "end": "1115280"
  },
  {
    "text": "development cycle eventually i might want to then create another branch of v2 branch for example",
    "start": "1115280",
    "end": "1123039"
  },
  {
    "text": "so i can do a git branch a git check out and then i can do another eb branch and i can associate that with the",
    "start": "1123039",
    "end": "1128960"
  },
  {
    "text": "same environment as the v1 branch and we keep that entire history and we'll look at",
    "start": "1128960",
    "end": "1134720"
  },
  {
    "text": "whichever branch you're in will push that to whatever environment is configured so",
    "start": "1134720",
    "end": "1140880"
  },
  {
    "text": "i may push to the v2 branch to my production environment decide that that wasn't the right thing to do",
    "start": "1140880",
    "end": "1146720"
  },
  {
    "text": "flip back to the v1 branch and re-push and that'll re-push the v1 branch to production",
    "start": "1146720",
    "end": "1151840"
  },
  {
    "text": "so it gives you a way to manage branches and be able to associate different environments with different branches",
    "start": "1151840",
    "end": "1159120"
  },
  {
    "start": "1160000",
    "end": "1316000"
  },
  {
    "text": "let's talk about zero downtime deployment so you you can as we just looked at you can do a get aws push to",
    "start": "1160640",
    "end": "1166320"
  },
  {
    "text": "an existing environment we just launched a feature earlier this week to do roland upgrades",
    "start": "1166320",
    "end": "1173120"
  },
  {
    "text": "to an existing environment so you can roll a change through it and not just push that to all instances",
    "start": "1173120",
    "end": "1178799"
  },
  {
    "text": "at the same time but if you have a couple of additional requirements i don't want any customer to be impacted",
    "start": "1178799",
    "end": "1185440"
  },
  {
    "text": "by the push and i want to be able to roll back quickly then cname swaps a potential",
    "start": "1185440",
    "end": "1192640"
  },
  {
    "text": "way of doing that so let's kind of walk through that so i have my elastic bean stock",
    "start": "1192640",
    "end": "1198960"
  },
  {
    "text": "environment it's up and running it's attached to my url yourapp.com",
    "start": "1198960",
    "end": "1205200"
  },
  {
    "text": "and it's all configured and set up and any customer data or any request to that url are going to",
    "start": "1205200",
    "end": "1212640"
  },
  {
    "text": "get routed to my application with um the goal is to be able to do",
    "start": "1212640",
    "end": "1221200"
  },
  {
    "text": "zero downtime deployment so the way we do that with cname flips is you create another",
    "start": "1221200",
    "end": "1227120"
  },
  {
    "text": "environment in this case a green environment running potentially a different version",
    "start": "1227120",
    "end": "1233039"
  },
  {
    "text": "of the application so in this case the blue environment is running v1 the green environment is running v2",
    "start": "1233039",
    "end": "1240480"
  },
  {
    "text": "in this case the databases are outside of any particular environment so it's it's okay to reference from both",
    "start": "1240480",
    "end": "1247840"
  },
  {
    "text": "of the environments then i can do a cname flip",
    "start": "1247840",
    "end": "1252880"
  },
  {
    "text": "so now with a simple command in the console there's a button that says cnameflip and",
    "start": "1252880",
    "end": "1258720"
  },
  {
    "text": "you get the option of what's the source what's the destination and so we'll actually flip the c name to the new",
    "start": "1258720",
    "end": "1264000"
  },
  {
    "text": "branch to the new environment so now all user traffic is directed to the new brand and the new",
    "start": "1264000",
    "end": "1270960"
  },
  {
    "text": "environment if for some reason we decided that",
    "start": "1270960",
    "end": "1276640"
  },
  {
    "text": "didn't work as expected we still have the old environment there so we can do a cname flip back",
    "start": "1276640",
    "end": "1284080"
  },
  {
    "text": "and that traffic will get routed back to the previous environment so that gives you a way to",
    "start": "1286240",
    "end": "1292480"
  },
  {
    "text": "do a deployment of a new version still having the old version and being",
    "start": "1292480",
    "end": "1298320"
  },
  {
    "text": "able to flip back and forth if you need to once you're happy with the v2 version obviously you can delete the v1 version",
    "start": "1298320",
    "end": "1304240"
  },
  {
    "text": "and then maybe in future have a v3 version and flip back and forth between those so it kind of gives you a way to do zero",
    "start": "1304240",
    "end": "1310880"
  },
  {
    "text": "downtime deployments with minimal customer impact",
    "start": "1310880",
    "end": "1316320"
  },
  {
    "start": "1316000",
    "end": "1462000"
  },
  {
    "text": "what if you so the one thing about cnameflip is as you just saw we completely flipped the cname from",
    "start": "1317039",
    "end": "1323039"
  },
  {
    "text": "one environment to another that means that all new traffic that comes in is gonna move to the new environment",
    "start": "1323039",
    "end": "1328960"
  },
  {
    "text": "obviously there'll be dns ttls that need to happen and things like that but ultimately all the new traffic",
    "start": "1328960",
    "end": "1334000"
  },
  {
    "text": "will get to the new environment what if we want to control that amount of traffic going to the new",
    "start": "1334000",
    "end": "1339679"
  },
  {
    "text": "environment so we're not comfortable flipping everything we just want to flip some subset of it so that you can test the new environment",
    "start": "1339679",
    "end": "1346000"
  },
  {
    "text": "before you actually um flip it over so we have with eb extensions",
    "start": "1346000",
    "end": "1353840"
  },
  {
    "text": "i can create any resource and so one of the resources i can create is a route 53 weighted uh",
    "start": "1353840",
    "end": "1361679"
  },
  {
    "text": "record set so route 53 is amazon's dns",
    "start": "1361679",
    "end": "1366799"
  },
  {
    "text": "service and it has a mechanism where you can you can have multiple records on the",
    "start": "1366799",
    "end": "1372159"
  },
  {
    "text": "same dns entry and you can weight those",
    "start": "1372159",
    "end": "1377280"
  },
  {
    "text": "so now what i can do is i can add an ebay extension which is add me a resource record to my",
    "start": "1377679",
    "end": "1383919"
  },
  {
    "text": "environment that resource record will be applied to whatever the dns name is and so now my application",
    "start": "1383919",
    "end": "1392480"
  },
  {
    "text": "is linked to my dns name i can have multiple of those so now i",
    "start": "1392480",
    "end": "1398400"
  },
  {
    "text": "can start to control the traffic so let's look at that a little bit so in this case i have the blue and green",
    "start": "1398400",
    "end": "1404720"
  },
  {
    "text": "environments again uh the blue ones running v1 the green one is running v2",
    "start": "1404720",
    "end": "1410320"
  },
  {
    "text": "and i'm currently set up so that all of the traffic throughout the green one have a weight of 100 on the blue one",
    "start": "1410320",
    "end": "1415840"
  },
  {
    "text": "sorry the blue one the weight for the blue one is 100 the weight for the green one is zero so",
    "start": "1415840",
    "end": "1422159"
  },
  {
    "text": "none of the traffic is going to flow to the green one i can go into the rat53 console and flip",
    "start": "1422159",
    "end": "1430240"
  },
  {
    "text": "the weights in the console so now i can put say a weight of 10",
    "start": "1430240",
    "end": "1435360"
  },
  {
    "text": "to the green environment and 10 of 110 of the requests will be routed",
    "start": "1435360",
    "end": "1441679"
  },
  {
    "text": "to the green environment so now i have a way to kind of control the amount of traffic going to my new environment once i'm comfortable",
    "start": "1441679",
    "end": "1449919"
  },
  {
    "text": "with that i can flip away essentially from the blue one by flipping the weights to 100 0 the other way around so now i have",
    "start": "1449919",
    "end": "1457360"
  },
  {
    "text": "all my traffic flowing to the green one none of the traffic flow into the blue one",
    "start": "1457360",
    "end": "1463039"
  },
  {
    "start": "1462000",
    "end": "1515000"
  },
  {
    "text": "we'll see if this works",
    "start": "1463919",
    "end": "1466799"
  },
  {
    "text": "i guess it's not going to that's okay",
    "start": "1470720",
    "end": "1475360"
  },
  {
    "text": "slides so what what it this demo was is it's really the",
    "start": "1484840",
    "end": "1490159"
  },
  {
    "text": "extension and i'll give you guys the extension um it's really just a ramp 53 record set definition that you",
    "start": "1490159",
    "end": "1498640"
  },
  {
    "text": "put in the eb extension and it uses a option setting to flip the weights so you can either",
    "start": "1498640",
    "end": "1505919"
  },
  {
    "text": "flip the weights through option settings which means a deployment or you can flip the weights through the rat 53 console and so it gives you a way",
    "start": "1505919",
    "end": "1512799"
  },
  {
    "text": "to control the traffic like that um just this kind of a throw in there",
    "start": "1512799",
    "end": "1519520"
  },
  {
    "start": "1515000",
    "end": "1568000"
  },
  {
    "text": "because we now have the ability to put route 53 entries into a beanstalk application route 53",
    "start": "1519520",
    "end": "1527120"
  },
  {
    "text": "also has the notion of latency-based record sets what that means is i can put elastic",
    "start": "1527120",
    "end": "1533840"
  },
  {
    "text": "bean stock environments in different regions maybe usc 1 us-west one",
    "start": "1533840",
    "end": "1539760"
  },
  {
    "text": "and rather than set up a weighted record set i can set up a latency based record set",
    "start": "1539760",
    "end": "1545520"
  },
  {
    "text": "now my traffic from my users will be requested routed to the nearest by route 53's definition of",
    "start": "1545520",
    "end": "1552400"
  },
  {
    "text": "nearest environment so now i can have kind of a geo load balanced elastic bean stock",
    "start": "1552400",
    "end": "1559039"
  },
  {
    "text": "application i have two environments and i have a latency based record set in order to",
    "start": "1559039",
    "end": "1564080"
  },
  {
    "text": "rank traffic to the nearest entry",
    "start": "1564080",
    "end": "1568000"
  },
  {
    "start": "1568000",
    "end": "1621000"
  },
  {
    "text": "so that's kind of the the the extension the the pieces we went through we went",
    "start": "1569760",
    "end": "1575039"
  },
  {
    "text": "through customizing the infrastructure so you guys should look at ebay extensions to be able to add additional resources",
    "start": "1575039",
    "end": "1581919"
  },
  {
    "text": "or option settings to your elastic bean stock environments if you want to control the lifetime of",
    "start": "1581919",
    "end": "1588960"
  },
  {
    "text": "resources independent of the app of the environment itself look at using cloud",
    "start": "1588960",
    "end": "1594240"
  },
  {
    "text": "formation and beanstalk together that kind of gives you a good way to automate creating environments creating applications that",
    "start": "1594240",
    "end": "1601360"
  },
  {
    "text": "you can control different pieces at different times use eb and get to do deployments to",
    "start": "1601360",
    "end": "1608400"
  },
  {
    "text": "multiple branches and either use cname flip or amazon right 53 configuration to manage those",
    "start": "1608400",
    "end": "1615279"
  },
  {
    "text": "deployments",
    "start": "1615279",
    "end": "1617919"
  },
  {
    "start": "1621000",
    "end": "1665000"
  },
  {
    "text": "a few other things to look at so the zero to 68 obs elastic beanstalk",
    "start": "1621600",
    "end": "1628000"
  },
  {
    "text": "presentation that evan did this morning that's a good one to look at it's kind of the",
    "start": "1628000",
    "end": "1633039"
  },
  {
    "text": "precursor to this and then there's a couple of cloud formation",
    "start": "1633039",
    "end": "1638480"
  },
  {
    "text": "sessions that are useful so there's a 0 to 60 cloud formation um that was this morning i think or",
    "start": "1638480",
    "end": "1644240"
  },
  {
    "text": "yesterday and then there's the aws cloud formation under the hood uh session which is five o'clock today",
    "start": "1644240",
    "end": "1652399"
  },
  {
    "text": "there's also the session that we did last year on the introduction to cloud formation for",
    "start": "1652399",
    "end": "1657440"
  },
  {
    "text": "people who haven't used car information and then come find me the developer booth",
    "start": "1657440",
    "end": "1662799"
  },
  {
    "text": "whatever i should be outside so i'll hand over to syndra and pen chow and they can walk",
    "start": "1662799",
    "end": "1669360"
  },
  {
    "text": "through the cool tools that they built on top",
    "start": "1669360",
    "end": "1674399"
  },
  {
    "text": "thank you chris uh for that good introduction of elastic beanstalk a little bit about myself i'm sudeendra",
    "start": "1681600",
    "end": "1688000"
  },
  {
    "text": "i have worked with artworks for about nine years i found out that i like breaking things and then making them back and",
    "start": "1688000",
    "end": "1694799"
  },
  {
    "text": "building them back recently we have been involved in moving one of our applications that we work on",
    "start": "1694799",
    "end": "1700880"
  },
  {
    "text": "called bingo over to sas and last year at uh aws re invent actually",
    "start": "1700880",
    "end": "1706799"
  },
  {
    "text": "uh we learned from the cloud formation session that that's the direction that we want to go and it we",
    "start": "1706799",
    "end": "1712320"
  },
  {
    "text": "completely changed the way we are building cloud and this year we are here to talk about eb deployer a tool",
    "start": "1712320",
    "end": "1717440"
  },
  {
    "text": "uh about elastic beanstalk uh i'm wpc from southwest we are on the",
    "start": "1717440",
    "end": "1723279"
  },
  {
    "text": "same team i have been in southwest for uh seven eight years and uh let's uh let's start so",
    "start": "1723279",
    "end": "1731600"
  },
  {
    "text": "today our topic gonna be uh how do we do blue green deployment uh on investment stock uh our way to",
    "start": "1731600",
    "end": "1738559"
  },
  {
    "text": "doing this so uh from last year we moved",
    "start": "1738559",
    "end": "1743600"
  },
  {
    "text": "mingo to aws and uh we started providing sas offering and from this year uh we start an",
    "start": "1743600",
    "end": "1750640"
  },
  {
    "text": "interesting transition that trying to break mingo from a monolithic application to some",
    "start": "1750640",
    "end": "1756799"
  },
  {
    "text": "decoupled small services and for all the new services with provision we put it on usb stock",
    "start": "1756799",
    "end": "1763919"
  },
  {
    "text": "why because it provides a software stack for us that we needed and it provides all the",
    "start": "1763919",
    "end": "1769520"
  },
  {
    "text": "scaling monitoring log archive out of box yeah and we picked the elastic beanstalk",
    "start": "1769520",
    "end": "1775600"
  },
  {
    "text": "because of all these services that it provided but but we wanted to do more with elastic",
    "start": "1775600",
    "end": "1780880"
  },
  {
    "text": "bean stock and with our app we really wanted to do more continuous deployment continuous delivery kind of",
    "start": "1780880",
    "end": "1786080"
  },
  {
    "text": "things and we found that elastic beanstalk had all these things that you could do with it but there could be more we could do with",
    "start": "1786080",
    "end": "1792480"
  },
  {
    "text": "it like for example automating your deployments and taking them to the next level",
    "start": "1792480",
    "end": "1797679"
  },
  {
    "text": "automating your blue green deployments so we thought we could contribute uh use elastic beanstalk apis and build",
    "start": "1797679",
    "end": "1805200"
  },
  {
    "text": "a tool and we call it eb deployer uh it's open sourced you can find it at this url and go try",
    "start": "1805200",
    "end": "1813200"
  },
  {
    "text": "to use it and we're going to introduce you what eb deployer does eb deploy essentially is a tool to allow you to take your",
    "start": "1813200",
    "end": "1820880"
  },
  {
    "start": "1816000",
    "end": "1923000"
  },
  {
    "text": "stock application and put it on elastic bean stock and do blue-green deployments without any effort on your part",
    "start": "1820880",
    "end": "1828559"
  },
  {
    "text": "so what what are traditional blue-green deployments just an introduction so consider that a typical app stack",
    "start": "1830240",
    "end": "1836960"
  },
  {
    "text": "which has a few ec2 machines uh a cue maybe a cache and any other thing that you could",
    "start": "1836960",
    "end": "1842799"
  },
  {
    "text": "include in our in your app and let's say you have deployed a version n uh that is in production right now",
    "start": "1842799",
    "end": "1847840"
  },
  {
    "text": "let's call it the blue uh blue app what happens when you actually write new",
    "start": "1847840",
    "end": "1852960"
  },
  {
    "text": "features and then you want to deploy it and make sure that everything works and then switch it over so that your",
    "start": "1852960",
    "end": "1858640"
  },
  {
    "text": "customers can get to access the new features so you write more code build a new version of",
    "start": "1858640",
    "end": "1865760"
  },
  {
    "text": "the app and you deploy a parallel stack uh let's call it the green stack it has the new version now you want to make",
    "start": "1865760",
    "end": "1871760"
  },
  {
    "text": "sure that your deployment went through all the features that you wrote do make sense and they work so what do",
    "start": "1871760",
    "end": "1878480"
  },
  {
    "text": "you do usually you do some testing maybe manual maybe somebody triggers a test somebody is involved in figuring out",
    "start": "1878480",
    "end": "1885039"
  },
  {
    "text": "whether it works or not once you're satisfied with that you do a a manual cname switch or",
    "start": "1885039",
    "end": "1894399"
  },
  {
    "text": "press a button somewhere which does a switch and then all the customers are now now",
    "start": "1894399",
    "end": "1900480"
  },
  {
    "text": "using your latest and greatest features once you're done once you're satisfied that",
    "start": "1900480",
    "end": "1905760"
  },
  {
    "text": "this is stable and works for a while you go and uh sorry one second",
    "start": "1905760",
    "end": "1912480"
  },
  {
    "text": "the clicker stopped okay and then you go and terminate the old instance because then you don't want to pay for the stack and keep on",
    "start": "1912480",
    "end": "1919279"
  },
  {
    "text": "maintaining that right so a lot of manual steps involved so what does eb deploy do",
    "start": "1919279",
    "end": "1924799"
  },
  {
    "start": "1923000",
    "end": "2032000"
  },
  {
    "text": "so eb deployer automated this whole process out of box by removing all the manual",
    "start": "1924799",
    "end": "1932720"
  },
  {
    "text": "steps so same with before when you do the",
    "start": "1932840",
    "end": "1938320"
  },
  {
    "text": "deployment you have blue and green element uh both active uh both running parallely and instead of",
    "start": "1938320",
    "end": "1947200"
  },
  {
    "text": "manually tested it uh runs a smoke test that you config in your configuration",
    "start": "1947200",
    "end": "1953200"
  },
  {
    "text": "and the track whether the newly created element is uh is good or not once after that",
    "start": "1953200",
    "end": "1958320"
  },
  {
    "text": "pass it automatically uh swap the cname between disarmament and then come to the last part instead",
    "start": "1958320",
    "end": "1965120"
  },
  {
    "text": "of a terminator of the airmen they just leave it there wait for the skill down to release the resources",
    "start": "1965120",
    "end": "1971440"
  },
  {
    "text": "and use it as a safe night for the for the whole deployment process means if there is anything like a",
    "start": "1971440",
    "end": "1979039"
  },
  {
    "text": "doesn't work bad happened didn't catch by the smoke test you still have chance just simply swap",
    "start": "1979039",
    "end": "1985200"
  },
  {
    "text": "it back and resolve the recovery from the disaster yeah and what do you need to do to do",
    "start": "1985200",
    "end": "1992240"
  },
  {
    "text": "all this is just run one simple command let's say you are developing this beautiful app called jrobi rails 4",
    "start": "1992240",
    "end": "1998399"
  },
  {
    "text": "and you have built features with it you just package it as a war we like binary packaging better",
    "start": "1998399",
    "end": "2004159"
  },
  {
    "text": "and then you give it to eb deploy and it will it will go ahead and figure out what needs to be done to to get you to a blue green state",
    "start": "2004159",
    "end": "2011600"
  },
  {
    "text": "there are some configurations that you will make before you start on this and it's like you'll specify which region you want to deploy you'll specify",
    "start": "2011600",
    "end": "2018240"
  },
  {
    "text": "your aws credentials and things like that nothing nothing unusual for aws user",
    "start": "2018240",
    "end": "2023519"
  },
  {
    "text": "but it is as simple as this and you run this over and over and over in your life and then that's that gives",
    "start": "2023519",
    "end": "2029360"
  },
  {
    "text": "you continuous deployment it also includes uh the configuration",
    "start": "2029360",
    "end": "2035519"
  },
  {
    "start": "2032000",
    "end": "2090000"
  },
  {
    "text": "also includes a way to just run smoke tests here we are showing you an example of a simple curl",
    "start": "2035519",
    "end": "2040640"
  },
  {
    "text": "it just tests whether our app which is a very simple rails app which is like a blog shows hello world",
    "start": "2040640",
    "end": "2047440"
  },
  {
    "text": "as its welcome page so it's just doing a health check but you can imagine putting here any kinds of tests any shell script any",
    "start": "2047440",
    "end": "2054638"
  },
  {
    "text": "selenium cucumber any of the tests that you want and smoke test the features that you are",
    "start": "2054639",
    "end": "2059679"
  },
  {
    "text": "developing right we are actually going to switch to a demo and it i'll just tell you what",
    "start": "2059679",
    "end": "2065520"
  },
  {
    "text": "will be included in the demo we'll start from one application stack then do an actual",
    "start": "2065520",
    "end": "2071440"
  },
  {
    "text": "blue-green deployment you will see the switch happen on the smoke test running and then we'll build more features",
    "start": "2071440",
    "end": "2077118"
  },
  {
    "text": "during the process and then do another deployment and you will see the switch happening again and we'll show you a few details of",
    "start": "2077119",
    "end": "2083520"
  },
  {
    "text": "where to go and look for whether the auto scaling happened correctly or not okay let's watch the demo",
    "start": "2083520",
    "end": "2090878"
  },
  {
    "text": "so we have this one environment already let's call it dev a let's call it the blue one so let's say",
    "start": "2091679",
    "end": "2097599"
  },
  {
    "text": "we went and did some work you ran the golden command",
    "start": "2097599",
    "end": "2105119"
  },
  {
    "text": "and a new environment came up a new stack came up and it is being deployed let's call it the green deployment now",
    "start": "2108720",
    "end": "2114320"
  },
  {
    "text": "this the green that it shows is elastic beanstalk knows that it is green",
    "start": "2114320",
    "end": "2119680"
  },
  {
    "text": "so we are now running a smoke test on a green stack once the smoke tests are successful",
    "start": "2119680",
    "end": "2128640"
  },
  {
    "text": "this could take time depending on how long you smoke test take",
    "start": "2129599",
    "end": "2134640"
  },
  {
    "text": "once this text is successful we do the cname switch health status is green we do this cname",
    "start": "2134960",
    "end": "2140000"
  },
  {
    "text": "switch now dev b is our golden environment that is what our all our users are hitting and if you look at the details",
    "start": "2140000",
    "end": "2146079"
  },
  {
    "text": "here is where you would go and find out what happened to dev a that it scaled down so those numbers should go down because more and more",
    "start": "2146079",
    "end": "2153200"
  },
  {
    "text": "users will start hitting your new dev b environment and that is what is active now let's say over the course of the day",
    "start": "2153200",
    "end": "2159040"
  },
  {
    "text": "you wrote more features it's time to deploy again what do you do you just run the same command",
    "start": "2159040",
    "end": "2165599"
  },
  {
    "text": "and then it deploys to the old stack that we already had just reuses whatever it had and makes that inactive it will always",
    "start": "2167119",
    "end": "2174160"
  },
  {
    "text": "deploy to inactive it will not touch your active stack till smoke tests are green and the cname",
    "start": "2174160",
    "end": "2180800"
  },
  {
    "text": "switch has happened so this is the typical life cycle elastic beam stock",
    "start": "2180800",
    "end": "2186560"
  },
  {
    "text": "gets provisioned again we do we run the same things elastic bean stock will run its health",
    "start": "2186560",
    "end": "2192400"
  },
  {
    "text": "check this is the health check running green then smoke test will run that is what it",
    "start": "2192400",
    "end": "2199520"
  },
  {
    "text": "is doing right now and once smoke tests are successful it will switch and you will see that now",
    "start": "2199520",
    "end": "2205280"
  },
  {
    "text": "dev a will become active so it is inactive still because smoke tests are being run",
    "start": "2205280",
    "end": "2214079"
  },
  {
    "text": "and once everything is successful everything is green uh it switches the cname here",
    "start": "2214079",
    "end": "2221599"
  },
  {
    "text": "and you will see that dev a has become uh there's no there is no inactive tag in it so dev a is the now the the",
    "start": "2222640",
    "end": "2229520"
  },
  {
    "text": "active one so we have we have swapped and now dev air has become the green or the blue as as you wanted",
    "start": "2229520",
    "end": "2237839"
  },
  {
    "text": "right the new features have been deployed",
    "start": "2237839",
    "end": "2242880"
  },
  {
    "start": "2241000",
    "end": "2316000"
  },
  {
    "text": "so ebt plural also has some resource management functionalities that can make blue green",
    "start": "2242880",
    "end": "2249200"
  },
  {
    "text": "deployment easier to implement",
    "start": "2249200",
    "end": "2254240"
  },
  {
    "text": "so like chris said typically the resources provisioned from lesbian",
    "start": "2254400",
    "end": "2260960"
  },
  {
    "text": "stock is uh this lifecycle is bounded to the specific requirement",
    "start": "2260960",
    "end": "2266480"
  },
  {
    "text": "and this sometimes can make blue blue-green deployment much much harder to implement so",
    "start": "2266480",
    "end": "2273200"
  },
  {
    "text": "think about the example for if you have rds per uh requirement and then when you do",
    "start": "2273200",
    "end": "2278480"
  },
  {
    "text": "the deployment actually you need to sync up the changes between the database that are obviously not a trivial job to",
    "start": "2278480",
    "end": "2285119"
  },
  {
    "text": "do so with eb deploy the airmen have become a higher level concept",
    "start": "2285119",
    "end": "2291280"
  },
  {
    "text": "which glues the blue and the green uh lesbian talk element together with the",
    "start": "2291280",
    "end": "2297280"
  },
  {
    "text": "similar naming convention you can define a cloud formation stack",
    "start": "2297280",
    "end": "2303760"
  },
  {
    "text": "just uh just a like a attack attached to the lifecycle of data resources that are provisioned from that",
    "start": "2304000",
    "end": "2311040"
  },
  {
    "text": "cloud formation stack to the whole higher level erm concept",
    "start": "2311040",
    "end": "2317200"
  },
  {
    "start": "2316000",
    "end": "2387000"
  },
  {
    "text": "so let's go through a concrete example of adding rds to the",
    "start": "2317440",
    "end": "2323359"
  },
  {
    "text": "deployment so first thing you need to do you need a define a cloud formation",
    "start": "2323359",
    "end": "2329520"
  },
  {
    "text": "template this is another json format it's just a some pseudo pseudo code at the bottom of the",
    "start": "2329520",
    "end": "2336720"
  },
  {
    "text": "resource section of the template you can see we gonna provision three resources the rds path",
    "start": "2336720",
    "end": "2344560"
  },
  {
    "text": "security group is a ec2 security group rds db security group is a security group",
    "start": "2344560",
    "end": "2351280"
  },
  {
    "text": "say only the rds particular group can have access to this database",
    "start": "2351280",
    "end": "2358800"
  },
  {
    "text": "and the last one is the earliest database which is the database system itself and we define two options uh two",
    "start": "2358800",
    "end": "2366560"
  },
  {
    "text": "options output values rds database configuration is just some connection information that",
    "start": "2366560",
    "end": "2374320"
  },
  {
    "text": "is collected from the database instance under the rds plus security group we",
    "start": "2374320",
    "end": "2380960"
  },
  {
    "text": "just mentioned the institute security group data highway access to the database",
    "start": "2380960",
    "end": "2388240"
  },
  {
    "start": "2387000",
    "end": "2467000"
  },
  {
    "text": "then next step you add a resources section to eb deployer configuration",
    "start": "2388240",
    "end": "2396000"
  },
  {
    "text": "so first you pointing the template to the template that we just created",
    "start": "2396000",
    "end": "2401040"
  },
  {
    "text": "the my rds suggestion and then you can define an output section which is",
    "start": "2401040",
    "end": "2408079"
  },
  {
    "text": "just a list of rules how do we want to map those cloud formation output values",
    "start": "2408079",
    "end": "2415520"
  },
  {
    "text": "to elastin stock option settings so for example we have two rules here",
    "start": "2415520",
    "end": "2423040"
  },
  {
    "text": "the rds pass security group the the security group we just transformation",
    "start": "2423040",
    "end": "2428560"
  },
  {
    "text": "it's gone its value air and can be mapped to other scaling land configuration security groups so that",
    "start": "2428560",
    "end": "2436400"
  },
  {
    "text": "all the ec2 instance that uh started by elizabeth's talk has uh access to the database database",
    "start": "2436400",
    "end": "2444319"
  },
  {
    "text": "redress provision under the next one is the rds database configuration",
    "start": "2444319",
    "end": "2449599"
  },
  {
    "text": "which will be mapped to the environment airmen wearable of the application means it will be",
    "start": "2449599",
    "end": "2457280"
  },
  {
    "text": "assigned to the runtime your in runtime your application can fetch that",
    "start": "2457280",
    "end": "2462560"
  },
  {
    "text": "setup database configure database connections",
    "start": "2462560",
    "end": "2467599"
  },
  {
    "start": "2467000",
    "end": "2548000"
  },
  {
    "text": "so we have a demo here if you configure this when you run the deploy with the same command",
    "start": "2467599",
    "end": "2474079"
  },
  {
    "text": "it will start creating uh the cloud formation template you know the cloud format cloud",
    "start": "2474079",
    "end": "2479520"
  },
  {
    "text": "formation stack by some naming conventions",
    "start": "2479520",
    "end": "2484720"
  },
  {
    "text": "the stack name will just be uh application name plus the url name to",
    "start": "2484960",
    "end": "2491359"
  },
  {
    "text": "keep it unique between applications and it's creating",
    "start": "2491359",
    "end": "2497440"
  },
  {
    "text": "you can see it's creating the three resources we defined in the template first is the easy to secure the group",
    "start": "2500480",
    "end": "2510240"
  },
  {
    "text": "there is the db security group the last one is the database instance",
    "start": "2513520",
    "end": "2519920"
  },
  {
    "text": "itself so provisional databases is going to take a little bit long",
    "start": "2519920",
    "end": "2525119"
  },
  {
    "text": "longer than other resources so we cut off the videos here",
    "start": "2525119",
    "end": "2532319"
  },
  {
    "text": "and the deploy will just continue after provision the resource stack it will just start a",
    "start": "2532880",
    "end": "2540000"
  },
  {
    "text": "lesbian stock deployment",
    "start": "2540000",
    "end": "2543280"
  },
  {
    "start": "2548000",
    "end": "2657000"
  },
  {
    "text": "so everything is done our stack is in uh is in ready state",
    "start": "2548960",
    "end": "2556160"
  },
  {
    "text": "then next yeah oh yeah so that works back",
    "start": "2556160",
    "end": "2562960"
  },
  {
    "text": "so then after after this you can go to the lesbian stock console to check like say",
    "start": "2562960",
    "end": "2568960"
  },
  {
    "text": "how the value is set to there yeah",
    "start": "2568960",
    "end": "2573200"
  },
  {
    "text": "okay next so ebd blur also provides some interesting",
    "start": "2575359",
    "end": "2582000"
  },
  {
    "text": "options to give you different deployment flavors you can check for example the phoenix",
    "start": "2582000",
    "end": "2590000"
  },
  {
    "text": "mode if you set this option to true what it does it will do a finic server deployment means for",
    "start": "2590000",
    "end": "2597599"
  },
  {
    "text": "any airmen trying to deploy the first terminated then recreated environment this will take",
    "start": "2597599",
    "end": "2604400"
  },
  {
    "text": "make the deployment process a little bit longer but the benefit you get is you will guarantee never accumulate",
    "start": "2604400",
    "end": "2612000"
  },
  {
    "text": "any state in your lesbian style configurations and any ec2 incidents this so",
    "start": "2612000",
    "end": "2618720"
  },
  {
    "text": "it can avoid no snowflake problem another thing you can tweak is a like",
    "start": "2618720",
    "end": "2625040"
  },
  {
    "text": "deployment strategy so besides blue green deployment",
    "start": "2625040",
    "end": "2630160"
  },
  {
    "text": "we also provide the in-place update which instead of means which means",
    "start": "2630160",
    "end": "2636160"
  },
  {
    "text": "instead of keep two arm and deploy alternatively between them we just keep one environment and keep",
    "start": "2636160",
    "end": "2643920"
  },
  {
    "text": "updating it this will help downtime probably not fit for any production",
    "start": "2643920",
    "end": "2649040"
  },
  {
    "text": "environment but for developing armed it is handy for saving costs and time",
    "start": "2649040",
    "end": "2656880"
  },
  {
    "start": "2657000",
    "end": "2725000"
  },
  {
    "text": "so the the reason we built eb deployer was so that we can integrate with our uh our tool for",
    "start": "2657680",
    "end": "2664800"
  },
  {
    "text": "deployment we called it tool go and we'd use this for our daily deployments now uh",
    "start": "2664800",
    "end": "2670400"
  },
  {
    "text": "since uh since the time we first started using eb deployer it has gotten mature over time and we have",
    "start": "2670400",
    "end": "2675520"
  },
  {
    "text": "we have more and more confidence in the tool uh so what what is happening today is uh none",
    "start": "2675520",
    "end": "2680960"
  },
  {
    "text": "of the developers are actually involved in figuring out when the deployment should go out uh actually till till staging everything",
    "start": "2680960",
    "end": "2687200"
  },
  {
    "text": "is automatic and then our release manager can figure out whether he wants to deploy it to production or not actually on another micro service",
    "start": "2687200",
    "end": "2694000"
  },
  {
    "text": "that we built even the release manager is not involved in figuring it out if everything goes well in staging after a few hours",
    "start": "2694000",
    "end": "2700079"
  },
  {
    "text": "it automatically deploys uh to production because we we have so much confidence in the tool and the features",
    "start": "2700079",
    "end": "2705839"
  },
  {
    "text": "and the testing that we are doing right and what is the worst thing that could happen it what could happen is",
    "start": "2705839",
    "end": "2711839"
  },
  {
    "text": "that smoke test would fail and there would be no there will be no effect effect to the user so essentially whatever we do we can",
    "start": "2711839",
    "end": "2718240"
  },
  {
    "text": "just continue doing our work and if smoke does fail we get an email and we go and figure out what's going on so eb deployer has",
    "start": "2718240",
    "end": "2726160"
  },
  {
    "start": "2725000",
    "end": "2747000"
  },
  {
    "text": "really helped us get to a better state in continuous delivery so our continuous deployment problem is solved",
    "start": "2726160",
    "end": "2732240"
  },
  {
    "text": "and we are we are we are getting better at delivering features more regularly these days we do multiple deployments a",
    "start": "2732240",
    "end": "2739119"
  },
  {
    "text": "day to production and our users users just get new features every day",
    "start": "2739119",
    "end": "2745839"
  },
  {
    "text": "why should you use eb deployer so what do we get other box from eb deployer well blue",
    "start": "2745839",
    "end": "2752800"
  },
  {
    "start": "2747000",
    "end": "2775000"
  },
  {
    "text": "green department automated and save blue green deployment with small test and it's a build",
    "start": "2752800",
    "end": "2759440"
  },
  {
    "text": "pipeline friendly you can put it into your automated deployment process very easily",
    "start": "2759440",
    "end": "2764480"
  },
  {
    "text": "and there is a help you define shared resources between blue and the green garment and have a",
    "start": "2764480",
    "end": "2770079"
  },
  {
    "text": "different deployment flavors that you choose yeah so treat this as a christmas gift",
    "start": "2770079",
    "end": "2775200"
  },
  {
    "start": "2775000",
    "end": "2794000"
  },
  {
    "text": "and use it and tell us if you want to add more things if you want to go and hack on ebay",
    "start": "2775200",
    "end": "2780560"
  },
  {
    "text": "employer make it fit for your needs and send us a pull request and you can find us on twitter or on our",
    "start": "2780560",
    "end": "2785839"
  },
  {
    "text": "thoughtworks emails thank you thank you",
    "start": "2785839",
    "end": "2796000"
  }
]