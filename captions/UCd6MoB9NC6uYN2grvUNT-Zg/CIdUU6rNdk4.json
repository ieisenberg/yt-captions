[
  {
    "text": "awesome thanks for joining us again here today we're coming in here live from the",
    "start": "30",
    "end": "5069"
  },
  {
    "text": "Davis loft in San Francisco we're here at the loft today covering a whole range",
    "start": "5069",
    "end": "10650"
  },
  {
    "text": "of topics around server lists if you missed us here in the previous hour we just did an initial view into lambda and",
    "start": "10650",
    "end": "16410"
  },
  {
    "text": "Sur bliss applications this next section here we're gonna be taking it a little bit further and doing a deep dive into",
    "start": "16410",
    "end": "21779"
  },
  {
    "text": "something called aw Sam and a de BES Sam CLI and again we're here all day talking about serverless topics and there's a",
    "start": "21779",
    "end": "28080"
  },
  {
    "text": "lot of things that we're gonna cover for those of you who are just joining us either both here physically in the loft or virtually on online here with twitch",
    "start": "28080",
    "end": "35100"
  },
  {
    "text": "my name is Chris ones I am currently a principal in the lead developer advocate for serve lists at AWS I am based in New",
    "start": "35100",
    "end": "41730"
  },
  {
    "text": "York City and have been at AWS here for a little over six and a half years across a couple of different roles primarily coming out of start-up space",
    "start": "41730",
    "end": "48600"
  },
  {
    "text": "in New York City working for companies such as Etsy and meetup calm and as primarily as a DevOps person but today I",
    "start": "48600",
    "end": "55050"
  },
  {
    "text": "get to talk about this this awesome space of service that is growing rapidly and really kind of transforming the industry to a degree so why are we here",
    "start": "55050",
    "end": "63780"
  },
  {
    "text": "today again we've already been talking a lot about Cameo about the service space",
    "start": "63780",
    "end": "69900"
  },
  {
    "text": "and in various aspects about it this section here today we're gonna talk a bit about some of the tooling that we have here from AWS that can really",
    "start": "69900",
    "end": "76140"
  },
  {
    "text": "simplify your life with building service applications again there are just enough things about service that make it",
    "start": "76140",
    "end": "82259"
  },
  {
    "text": "nuanced and different that having a purpose-built tool for building service applications can be really valuable and",
    "start": "82259",
    "end": "88829"
  },
  {
    "text": "so in the last session I had a slide about some of the different frameworks that we had and one of them in particular that we're gonna focus on",
    "start": "88829",
    "end": "94650"
  },
  {
    "text": "right now is my good squirrel friend here called Sam and so we're gonna talk here today about AWS Sam so what Sam",
    "start": "94650",
    "end": "103200"
  },
  {
    "text": "stands for is service application model this is a kind of tooling framework that we have here for service applications at",
    "start": "103200",
    "end": "109500"
  },
  {
    "text": "AWS it's been around now for just a little over a year and a half in total I",
    "start": "109500",
    "end": "114930"
  },
  {
    "text": "believe and again we're really in deep in depth here about it so what Sam is is",
    "start": "114930",
    "end": "121350"
  },
  {
    "text": "is built on top of another service that we have here at AWS called a TMS cloud formation a cloud formation is a service",
    "start": "121350",
    "end": "127979"
  },
  {
    "text": "that provides a template driven way or document base driven way for provisioning managing",
    "start": "127979",
    "end": "133260"
  },
  {
    "text": "updating your infrastructure and so you have a text document it represents the resources inside of your infrastructure",
    "start": "133260",
    "end": "139409"
  },
  {
    "text": "and then you pass it to the service and it goes and provisions those and manages those for you now what Sam does is provide some",
    "start": "139409",
    "end": "146280"
  },
  {
    "text": "special capabilities specific just a service on top of cloud formation and so",
    "start": "146280",
    "end": "151379"
  },
  {
    "text": "we have a couple of special resources we have service functions API as tables and",
    "start": "151379",
    "end": "157049"
  },
  {
    "text": "the layers and applications which is a newer concept for us here it could support almost anything that cloud",
    "start": "157049",
    "end": "162900"
  },
  {
    "text": "formation supports today again it's built on top of that now Sam is an open source tool so not only is the",
    "start": "162900",
    "end": "169409"
  },
  {
    "text": "specification open source but we'll talk about something later called the the translator which is also open sourced",
    "start": "169409",
    "end": "174900"
  },
  {
    "text": "and you can find out about Sam by going to aws.amazon.com server lists and almost everything we're gonna cover here",
    "start": "174900",
    "end": "181590"
  },
  {
    "text": "today gets mentioned there now previously I mentioned how when we talk about a service application there's kind",
    "start": "181590",
    "end": "188310"
  },
  {
    "text": "of three main aspects to it there is your invocation source so today we've got over 40 services in AWS that can",
    "start": "188310",
    "end": "194430"
  },
  {
    "text": "invoke lamda there is your lambda function and then there is what your lambda function might need to be talking",
    "start": "194430",
    "end": "199949"
  },
  {
    "text": "to so databases data stores other endpoints on the internet now imagine we",
    "start": "199949",
    "end": "205919"
  },
  {
    "text": "wanted to provision these three things and manage them so let's say we have an API based workload so we need to",
    "start": "205919",
    "end": "211470"
  },
  {
    "text": "provision and manage an EPA gateway our lambda function and let's say we have a dynamo DB table for storage of our our",
    "start": "211470",
    "end": "217949"
  },
  {
    "text": "data information now what's and what we can do is create a document that looks",
    "start": "217949",
    "end": "223230"
  },
  {
    "text": "just like this this is about 20 or so lines of code and let's break down what goes on inside of this so in the first",
    "start": "223230",
    "end": "230220"
  },
  {
    "text": "section what we have here the top two lines are considered the headers and CloudFormation the first one template",
    "start": "230220",
    "end": "235709"
  },
  {
    "text": "format version is just kind of a thing that sells CloudFormation that this is a cloud formation template the second line",
    "start": "235709",
    "end": "241500"
  },
  {
    "text": "though here transform is really important to us here in this talk now this transform says AWS : : server list",
    "start": "241500",
    "end": "248250"
  },
  {
    "text": "- and then you see a date stamp there now this tells the cloud formation",
    "start": "248250",
    "end": "254489"
  },
  {
    "text": "service that oh this is a special type of template file I'm going to need to",
    "start": "254489",
    "end": "259500"
  },
  {
    "text": "apply a transform to it and what the transform is going to do is convert",
    "start": "259500",
    "end": "264570"
  },
  {
    "text": "these special resources into rock information down below here then we see two different resources that are defined",
    "start": "264570",
    "end": "271140"
  },
  {
    "text": "then I'll talk about the bottom one first in this case because it's really really basic we have a resource that's named list table it's of type AWS",
    "start": "271140",
    "end": "278910"
  },
  {
    "text": "service simple table and what this represents is a DynamoDB table with a base five read and write units really",
    "start": "278910",
    "end": "286470"
  },
  {
    "text": "really straightforward basic DynamoDB table that's all we need to do to define it if we go up kind of like the middle",
    "start": "286470",
    "end": "293130"
  },
  {
    "text": "of this document the kind of the main body of it we see that we have a resource called get HTML function it's",
    "start": "293130",
    "end": "300000"
  },
  {
    "text": "of type service function a data service function and then it has properties that are broken down into two areas",
    "start": "300000",
    "end": "306000"
  },
  {
    "text": "now the first four properties are really specific to a lambda function we have where the handler is so we talked about",
    "start": "306000",
    "end": "312480"
  },
  {
    "text": "on the previous session of the handler is what the service looks to invoke your code and inject the event into we have",
    "start": "312480",
    "end": "319110"
  },
  {
    "text": "the runtime in this case nodejs 6.10 we have where the code lives we have a policy for my function so this function",
    "start": "319110",
    "end": "325620"
  },
  {
    "text": "has read-only access to DynamoDB and the below that we have this event structure this event structure has a single",
    "start": "325620",
    "end": "333000"
  },
  {
    "text": "resource called get HTML it's of type API and it has properties for proxy",
    "start": "333000",
    "end": "339420"
  },
  {
    "text": "routing and the any method in HTTP now what's going to come out of this is a",
    "start": "339420",
    "end": "345210"
  },
  {
    "text": "lambda function an API gateway stage and endpoint configured my code part of that",
    "start": "345210",
    "end": "351240"
  },
  {
    "text": "lambda function and a DynamoDB table and then all of the resources and policies necessary to glue them together created",
    "start": "351240",
    "end": "357810"
  },
  {
    "text": "for me and so again here it's about 17 18 lines of code another way to think",
    "start": "357810",
    "end": "363390"
  },
  {
    "text": "about this and this is from an example that we have up in github called Sam farm is that from I believe here it's",
    "start": "363390",
    "end": "369270"
  },
  {
    "text": "roughly lines 10 through 25 so 15 lines of code gives you seven different AWS",
    "start": "369270",
    "end": "374940"
  },
  {
    "text": "resources and so it if you were to go through the console and go and create",
    "start": "374940",
    "end": "380100"
  },
  {
    "text": "all of these you'd be doing quite a lot of clicking if you're doing these just from the CLI you'd be quite a lot of CLI commands but in this case this roughly",
    "start": "380100",
    "end": "387090"
  },
  {
    "text": "total 25 lines of code with a bunch of CloudFormation specific things here is",
    "start": "387090",
    "end": "392700"
  },
  {
    "text": "going to give you those seven resources now when you transform this using cloud formation behind the scenes to rock",
    "start": "392700",
    "end": "399690"
  },
  {
    "text": "cloud formation this is about 70 or 80 lines of code so it can quickly go four or five X what",
    "start": "399690",
    "end": "405789"
  },
  {
    "text": "you see here in this template if you were to do it in just raw CloudFormation so this really really really simplifies",
    "start": "405789",
    "end": "411549"
  },
  {
    "text": "and streamlines what's required in building and managing a surplus application so it's go little bit deeper",
    "start": "411549",
    "end": "418419"
  },
  {
    "text": "here so again we have five special resources today inside of Sam templates",
    "start": "418419",
    "end": "425679"
  },
  {
    "text": "that you can create we have a service function and we see here just a snippet of actually what's available for a",
    "start": "425679",
    "end": "431229"
  },
  {
    "text": "function we can define almost any aspect or attribute about our lambda function",
    "start": "431229",
    "end": "436659"
  },
  {
    "text": "its event sources environment variables and all sorts of information about it we",
    "start": "436659",
    "end": "442300"
  },
  {
    "text": "have an API definition so this represents an API gateway stage and we can configure things like caching we",
    "start": "442300",
    "end": "448329"
  },
  {
    "text": "could also configure things like authorization an endpoint configuration like cores and headers and other stuff like that we have a simple table which",
    "start": "448329",
    "end": "455800"
  },
  {
    "text": "is again a dynamodb table and DynamoDB table we have a couple of basic attributes here that you can configure",
    "start": "455800",
    "end": "463229"
  },
  {
    "text": "we have something called a layer version and we're going to talk about layers here again after lunch but this is a",
    "start": "463229",
    "end": "469599"
  },
  {
    "text": "exciting new capability inside of lambda today and then we have a service",
    "start": "469599",
    "end": "475479"
  },
  {
    "text": "application and so one other thing that we announced back at reinvent which",
    "start": "475479",
    "end": "480489"
  },
  {
    "text": "we'll talk a little bit deeper about here today is we already saw today in",
    "start": "480489",
    "end": "485499"
  },
  {
    "text": "the service application repository that I could easily go and launch an application well we could actually do",
    "start": "485499",
    "end": "490719"
  },
  {
    "text": "now is something called nested applications which allows me to have one service application reference an",
    "start": "490719",
    "end": "496959"
  },
  {
    "text": "existing application in the application repo as if they were basically one entity so when I go to deploy my",
    "start": "496959",
    "end": "503199"
  },
  {
    "text": "application I could say oh my application also deploy depends on this other app in SAR and it'll pull that",
    "start": "503199",
    "end": "510069"
  },
  {
    "text": "down and install that in my account the same way so this allows me to define that other application as part of my",
    "start": "510069",
    "end": "516159"
  },
  {
    "text": "application now in terms of functions and event sources we've got the ability",
    "start": "516159",
    "end": "522789"
  },
  {
    "text": "to configure pretty almost any event source that you have here we're not going to go through all of these here today but it's all in the documentation",
    "start": "522789",
    "end": "528970"
  },
  {
    "text": "for Sam and so each event might have some specific properties we see for an",
    "start": "528970",
    "end": "533980"
  },
  {
    "text": "s3 bucket we can specify our for an s3 object we could specify just a bucket but we could",
    "start": "533980",
    "end": "539310"
  },
  {
    "text": "also a filter on prefix or suffix say which specific s3 event we care about puts there deletes for example and so",
    "start": "539310",
    "end": "547199"
  },
  {
    "text": "you can really get fine-grained as to what your your event trigger is I mentioned before he choose cloud watch",
    "start": "547199",
    "end": "552480"
  },
  {
    "text": "events to replace cron jobs and for this you can actually just pass in the the true cron syntax from when a function",
    "start": "552480",
    "end": "558240"
  },
  {
    "text": "should be executed and so for all the different services that we have you can get you know all of that configuration",
    "start": "558240",
    "end": "564449"
  },
  {
    "text": "now what Sam will do in some case is actually configure that resource for you so if that resource doesn't exist it",
    "start": "564449",
    "end": "570480"
  },
  {
    "text": "will go and create an s3 bucket for you for others it will expect you to pass in an existing resource start a little bit",
    "start": "570480",
    "end": "577889"
  },
  {
    "text": "more about Sam from the CloudFormation side of things so again Sam is built a",
    "start": "577889",
    "end": "583079"
  },
  {
    "text": "topic CloudFormation this is a CloudFormation template don't expect anybody be able to read what's in there",
    "start": "583079",
    "end": "588139"
  },
  {
    "text": "but what I didn't want you get from it is that there are a couple of different kind of sections of codes that can exist",
    "start": "588139",
    "end": "595620"
  },
  {
    "text": "inside of a CloudFormation template that have different capabilities so we already talked about the headers and we",
    "start": "595620",
    "end": "600689"
  },
  {
    "text": "saw that we had a header that said this is a cloud formation template it has a transform and that's something that you need in pretty much every",
    "start": "600689",
    "end": "606990"
  },
  {
    "text": "CloudFormation template and same template you're gonna create let me have other capabilities that can add a lot of interesting power to this so the concept",
    "start": "606990",
    "end": "613620"
  },
  {
    "text": "of parameters and apologies here if the lighting makes a little harsh Cetus but these are parameters are things that are",
    "start": "613620",
    "end": "620579"
  },
  {
    "text": "passed in at execution time of this template so at provision time you could pass in information maybe let's say a",
    "start": "620579",
    "end": "628019"
  },
  {
    "text": "developers name you could pass in an environment you could pass in whatever information you might need to that could",
    "start": "628019",
    "end": "634170"
  },
  {
    "text": "add some dynamic 'no stew this template we have mappings so in this case",
    "start": "634170",
    "end": "639269"
  },
  {
    "text": "mappings are you can think of it as a predefined case statement or switch statement inside of your template we",
    "start": "639269",
    "end": "645870"
  },
  {
    "text": "have conditionals which are similar to mappings but in the context basically allow you to say that a resource should",
    "start": "645870",
    "end": "652050"
  },
  {
    "text": "or shouldn't be created given some other context so you know in production we will always do something h.a but in dev",
    "start": "652050",
    "end": "659069"
  },
  {
    "text": "we won't type of a thing there's the resources so that's kind of the the meat of this document the the",
    "start": "659069",
    "end": "664800"
  },
  {
    "text": "actual database resources that we're going to define and then our outputs so what outputs represent",
    "start": "664800",
    "end": "669890"
  },
  {
    "text": "much like it sounds is what are the results of this template and I might need those results to pass into another",
    "start": "669890",
    "end": "675050"
  },
  {
    "text": "application stack or to tell someone where they could find my applications endpoint or other information about it",
    "start": "675050",
    "end": "680300"
  },
  {
    "text": "and so these capabilities make CloudFormation really powerful from a provisioning tool standpoint so again we",
    "start": "680300",
    "end": "687800"
  },
  {
    "text": "can mix in these various capabilities we can launch other AWS resources or reference them and there's other things",
    "start": "687800",
    "end": "695060"
  },
  {
    "text": "like we'll talk about here in a moment this concept of intrinsic functions which are basically shortcuts inside of",
    "start": "695060",
    "end": "700190"
  },
  {
    "text": "CloudFormation code that could do things like reference other resources or split strings or join strings or do a number",
    "start": "700190",
    "end": "707420"
  },
  {
    "text": "of other things that you can have here there's something called imports and exports and CloudFormation which is a bit too much again into here today but a",
    "start": "707420",
    "end": "714020"
  },
  {
    "text": "long a short of it is that it allows you to define essentially inside of a region a global namespace for resources that",
    "start": "714020",
    "end": "721880"
  },
  {
    "text": "have been created so I could create in one cloud formation templates something that I call prod DB and then in any",
    "start": "721880",
    "end": "727790"
  },
  {
    "text": "other CloudFormation template or Sam template that I launch I can reference that database just by saying give me",
    "start": "727790",
    "end": "733700"
  },
  {
    "text": "prod DB and it will tie that back to say like an RDS database or a dynamo DB table all right so again I can get all",
    "start": "733700",
    "end": "740480"
  },
  {
    "text": "of those things put together and then lastly for both Sam and CloudFormation we support yeah Mille or JSON so pick",
    "start": "740480",
    "end": "746600"
  },
  {
    "text": "your flavor and you can do that so let's tie this back into what we can do with lambda now inside of lambda we have a",
    "start": "746600",
    "end": "754310"
  },
  {
    "text": "concept called environment variables pretty straightforward for any place else you ever seen environment variables in this case these are represented from",
    "start": "754310",
    "end": "760850"
  },
  {
    "text": "the underlying operating system on up and so you could just use the native calls inside of whatever language you're",
    "start": "760850",
    "end": "766220"
  },
  {
    "text": "using to get environment variables from the underlying operating system so for example here we show in Python its OS",
    "start": "766220",
    "end": "773030"
  },
  {
    "text": "dot and fire on and so what we can do with these is all sorts of things we can",
    "start": "773030",
    "end": "778070"
  },
  {
    "text": "pass in key value pairs for feature flags for credentials for databases or",
    "start": "778070",
    "end": "783440"
  },
  {
    "text": "api's we can pass in all sorts of configuration information we can",
    "start": "783440",
    "end": "789200"
  },
  {
    "text": "optionally encrypt this if we want to and so we can use these to add again further dynamic in this to our code and",
    "start": "789200",
    "end": "794840"
  },
  {
    "text": "keep us from doing things like hard coding in sensitive information you typically wouldn't want to do",
    "start": "794840",
    "end": "801509"
  },
  {
    "text": "similarly with API gateway we have a concept called stage variables and so much kind of like lambda environment",
    "start": "801509",
    "end": "807159"
  },
  {
    "text": "variables stage variables add this this extra bit of dynamic miss that can get passed down from a request to my",
    "start": "807159",
    "end": "813399"
  },
  {
    "text": "back-end and then we can act on it and and respond differently depending on what has been configured for this so",
    "start": "813399",
    "end": "820539"
  },
  {
    "text": "let's put these two things together plus some Sam capabilities so what I have",
    "start": "820539",
    "end": "826509"
  },
  {
    "text": "here is an example of think of this as one contiguous code file so kind of goes",
    "start": "826509",
    "end": "831579"
  },
  {
    "text": "from the top of column one all the way down to the top of column two and so inside of this I have a parameter",
    "start": "831579",
    "end": "837849"
  },
  {
    "text": "defined called my environment it is of type string it defaults to testing and",
    "start": "837849",
    "end": "843009"
  },
  {
    "text": "then I have allowed values so I can specify only what can be passed into this parameter execution time so testing",
    "start": "843009",
    "end": "850209"
  },
  {
    "text": "staging and prod if you tried to pass it in banana it's gonna fail right it's lonely to take these three values I then",
    "start": "850209",
    "end": "856419"
  },
  {
    "text": "have a mapping so the mapping again you can think of as kind of a conditional switch statement so for this I have a",
    "start": "856419",
    "end": "862329"
  },
  {
    "text": "mapping called special feature one and then we see that under special feature one for testing staging and production I",
    "start": "862329",
    "end": "869679"
  },
  {
    "text": "then have an attribute called status and status is either on or off and then if",
    "start": "869679",
    "end": "875199"
  },
  {
    "text": "you go over the other column you see that I have a service function defined and a service API to find now in the",
    "start": "875199",
    "end": "880509"
  },
  {
    "text": "function I pass in some environment variables I pass in one that literally just called environment and that uses",
    "start": "880509",
    "end": "886239"
  },
  {
    "text": "again what's called an intrinsic function that exclamation R EF for reference and then it references my",
    "start": "886239",
    "end": "892479"
  },
  {
    "text": "parameter called my environment below that you see something called special feature one essentially as an",
    "start": "892479",
    "end": "898539"
  },
  {
    "text": "environment variable and now this Maps uses a sorry an intrinsic function",
    "start": "898539",
    "end": "903729"
  },
  {
    "text": "called find and map which points to the mapping in this template and it's a little bit more complex",
    "start": "903729",
    "end": "909609"
  },
  {
    "text": "it basically says I'm using the map special feature 1 and I'm going to key",
    "start": "909609",
    "end": "914919"
  },
  {
    "text": "off of the reference to my environment and I'm looking for the attribute status",
    "start": "914919",
    "end": "920399"
  },
  {
    "text": "so the way that this will work out when it all gets spelled out is that the",
    "start": "920399",
    "end": "925899"
  },
  {
    "text": "parameter that I end that I add in for my environment from the template will get passed into my lambda function as",
    "start": "925899",
    "end": "931599"
  },
  {
    "text": "that and so inside of my code I might want to do something different for testing or staging your prod and",
    "start": "931599",
    "end": "936910"
  },
  {
    "text": "based on how I launched this stack of resources it will do that different thing as well for the special feature",
    "start": "936910",
    "end": "944950"
  },
  {
    "text": "aspect in you know testing for in this case I have status set to on but in",
    "start": "944950",
    "end": "950050"
  },
  {
    "text": "production I have status set to OFF and maybe what do I wanna enable is some debugging output or contexts in testing",
    "start": "950050",
    "end": "956589"
  },
  {
    "text": "and staging but not in production or I'm testing an actual new feature in one of those and so I want to control it that",
    "start": "956589",
    "end": "962170"
  },
  {
    "text": "way and so again in this case I'm assuming that my code is just going to look for that environment variable and",
    "start": "962170",
    "end": "967480"
  },
  {
    "text": "that's I'm going to pass that in at execution time okay now you can go by",
    "start": "967480",
    "end": "976420"
  },
  {
    "text": "this to do some other interesting things so with lambda we have a concept of versions pretty straightforward as you",
    "start": "976420",
    "end": "982480"
  },
  {
    "text": "launch a new version of your code it's gonna correspond to an innumerable numr",
    "start": "982480",
    "end": "988660"
  },
  {
    "text": "of alyou that increments automatically I could then assign what's called an alias to that version so we see here under my",
    "start": "988660",
    "end": "995950"
  },
  {
    "text": "function I have eight versions that I have deployed three of them have aliases so I see version 3 as alias - currently",
    "start": "995950",
    "end": "1003060"
  },
  {
    "text": "- prod version 6 is alias - beta version 8 is alias to death now what I can do on",
    "start": "1003060",
    "end": "1008910"
  },
  {
    "text": "the API gateway side is using stage variables say based on the stage variable aligned to the alias of the",
    "start": "1008910",
    "end": "1015600"
  },
  {
    "text": "lambda function and so where I pass in for the stage variable of lambda alias",
    "start": "1015600",
    "end": "1021180"
  },
  {
    "text": "prod it's gonna point to my prod lambda function and so on so pretty straightforward I can have different environments I can have the same",
    "start": "1021180",
    "end": "1028170"
  },
  {
    "text": "configuration generally speaking when I deploy these resources and then based on",
    "start": "1028170",
    "end": "1033780"
  },
  {
    "text": "these environment variables it will do different things now when I want to go",
    "start": "1033780",
    "end": "1039900"
  },
  {
    "text": "ahead and make it so that version 6 is now gonna leave beta and be promoted to",
    "start": "1039900",
    "end": "1045808"
  },
  {
    "text": "prod it's pretty easy I can take the alias for pride pointed at version 6 and",
    "start": "1045809",
    "end": "1051450"
  },
  {
    "text": "all my traffic we'll just swap over and cut over to that well this could be problematic and so often what you want",
    "start": "1051450",
    "end": "1057809"
  },
  {
    "text": "to do is actually test this functionality slowly you want to slowly roll out the change to your function so",
    "start": "1057809",
    "end": "1063870"
  },
  {
    "text": "you know maybe cause an impact all your customers and so in lambda we have a capability called alias",
    "start": "1063870",
    "end": "1070289"
  },
  {
    "text": "traffic shifting and much like the name sounds what allows me to do is shift a portion of my traffic over to a new",
    "start": "1070289",
    "end": "1077400"
  },
  {
    "text": "version with the same alias so we see here I have now configured version 6 -",
    "start": "1077400",
    "end": "1082620"
  },
  {
    "text": "how also have the alias of prod but I'm only going to say only sent 5% of traffic towards it now on my API gateway",
    "start": "1082620",
    "end": "1089820"
  },
  {
    "text": "for the prod stage that has the stage variable of lambda Elias equals prod I don't to do anything I'm a PA waste is",
    "start": "1089820",
    "end": "1096570"
  },
  {
    "text": "exactly the same and so API requests are going to come in and 5% of them are gonna go to this new version and now I",
    "start": "1096570",
    "end": "1103529"
  },
  {
    "text": "can do this by hand I can run the command line tools and and bump this and move it up and do all of that or I could",
    "start": "1103529",
    "end": "1110580"
  },
  {
    "text": "do this with Sam and so inside of Sam we have a couple of capabilities that make what we call inside of Sam safe",
    "start": "1110580",
    "end": "1117870"
  },
  {
    "text": "deployments really really easy and it's basically just these couple of lines of code right here then I'm gonna go into",
    "start": "1117870",
    "end": "1124309"
  },
  {
    "text": "so the first is that inside of Sam we have a capability that you can have for your functions called auto publish alias",
    "start": "1124309",
    "end": "1130820"
  },
  {
    "text": "basically what this says is that every time that I deploy this function I'm going to assign the alias of whatever",
    "start": "1130820",
    "end": "1137429"
  },
  {
    "text": "I'm going to assign it to in here now in the previous code snippet it's a little hard to see maybe here it's kind of the",
    "start": "1137429",
    "end": "1143460"
  },
  {
    "text": "top line of the highlighted box but you see that I'm gonna assign Auto publish",
    "start": "1143460",
    "end": "1148470"
  },
  {
    "text": "alias to whatever I've assigned this environment to so if it was staging or testing or prod that's gonna be the",
    "start": "1148470",
    "end": "1154529"
  },
  {
    "text": "alias for my function just like we see aliases for aligned here so that",
    "start": "1154529",
    "end": "1161700"
  },
  {
    "text": "basically enables safe deployments for me then I have a deployment preference and so in deployment preference here",
    "start": "1161700",
    "end": "1167940"
  },
  {
    "text": "with Sam we have a couple of predefined preferences that you can have and you can think of these at the speed at which I'm going to attempt to deploy this",
    "start": "1167940",
    "end": "1174360"
  },
  {
    "text": "function so we see here a concept of Canaries Canaries is a term that you",
    "start": "1174360",
    "end": "1182490"
  },
  {
    "text": "know exists outside of lambda but basically I'm going to shift just a certain percentage of traffic for a period of time and then if everything is",
    "start": "1182490",
    "end": "1188880"
  },
  {
    "text": "okay then I'm gonna shift the rest of my traffic if not then I'm gonna roll it back we also see here a linear",
    "start": "1188880",
    "end": "1195059"
  },
  {
    "text": "preference so in this case linear preference is going to automatically increment the percentage of traffic over",
    "start": "1195059",
    "end": "1200760"
  },
  {
    "text": "the window of time and so I'm complete or I roll it back and so we see here for example canary 10% five",
    "start": "1200760",
    "end": "1208559"
  },
  {
    "text": "minutes that means run ten percent of the traffic four or five minutes everything's good ramp it up to 100 we",
    "start": "1208559",
    "end": "1215309"
  },
  {
    "text": "see linear 10% every two minutes and so every two minutes it's going to increase the traffic by 10 percent until we get",
    "start": "1215309",
    "end": "1222090"
  },
  {
    "text": "to 100% and so with this model I can deploy out new code shift it out to a small percentage of my customer base and",
    "start": "1222090",
    "end": "1228539"
  },
  {
    "text": "will actually create specific logs and metrics for the version of your canary",
    "start": "1228539",
    "end": "1234600"
  },
  {
    "text": "code so that you could go and compare them that doesn't sound like a lot of fun that sounds like a little bit of",
    "start": "1234600",
    "end": "1239940"
  },
  {
    "text": "work to sit there and side by side watch those metrics and see how differently things are performing and if that's good",
    "start": "1239940",
    "end": "1245159"
  },
  {
    "text": "or not so the second part of this is that it supports the ability for you to align with your function alarms and",
    "start": "1245159",
    "end": "1254039"
  },
  {
    "text": "apologies some of the colors got a little messed up here in this slide but what I could do here is actually tie",
    "start": "1254039",
    "end": "1259140"
  },
  {
    "text": "back this deployment to cloud watch alarms so I can have cloud watch alarms on things like errors or latency or",
    "start": "1259140",
    "end": "1266130"
  },
  {
    "text": "other metrics that are important to me in this function and if for some way it trips that alarm so Lindsay gets too",
    "start": "1266130",
    "end": "1272340"
  },
  {
    "text": "high it will automatically stop and roll back this deployment for me so we'll end the impact to my customers and so you",
    "start": "1272340",
    "end": "1279270"
  },
  {
    "text": "can define up to ten different alarms today and you can create custom alarms with cloud watch that represent you know",
    "start": "1279270",
    "end": "1284789"
  },
  {
    "text": "business logic metrics again it can be the built in metrics things like latency or error rate and stuff like that but",
    "start": "1284789",
    "end": "1291090"
  },
  {
    "text": "this allows you to be able to automate this process of to play up my code test it if things are good go forward if the",
    "start": "1291090",
    "end": "1297390"
  },
  {
    "text": "alarm triggers automatically roll it back and then I can deal with that going along with this then we see this",
    "start": "1297390",
    "end": "1303210"
  },
  {
    "text": "concepts down here of hooks so you have a pre traffic hook and a post traffic hook much like those names sound they",
    "start": "1303210",
    "end": "1309750"
  },
  {
    "text": "are things that are executed before traffic is put on this function or after it and so we can use these to say put a",
    "start": "1309750",
    "end": "1315840"
  },
  {
    "text": "message in the slack that says hey doing a deployment to prod or updates a change management system or calls off to a",
    "start": "1315840",
    "end": "1322289"
  },
  {
    "text": "monitoring service or calls off to another function to test this function and hit it with a number of requests and",
    "start": "1322289",
    "end": "1327539"
  },
  {
    "text": "make sure that it works so there's a lot of different things that you can do here and again the end goal is to make",
    "start": "1327539",
    "end": "1333690"
  },
  {
    "text": "deployments really safe for your end customers and for your code another",
    "start": "1333690",
    "end": "1339509"
  },
  {
    "text": "capability we have here in Sam is a concept called Global's so what we see here in this document and again imagine",
    "start": "1339509",
    "end": "1345690"
  },
  {
    "text": "this is a single document running kind of top to bottom across these two columns is that I have a shot at my",
    "start": "1345690",
    "end": "1351210"
  },
  {
    "text": "document called Global's it has a subsection called functions and then inside of this are attributes that",
    "start": "1351210",
    "end": "1356909"
  },
  {
    "text": "pertain to lambda functions so we see my run time when my code lives my memory size my time out etcetera",
    "start": "1356909",
    "end": "1363029"
  },
  {
    "text": "we then see three other service functions that are defined here and it's pretty obvious what they don't have in",
    "start": "1363029",
    "end": "1369539"
  },
  {
    "text": "their definitions is the stuff that's in the Global's so imagine I had an API and my API had 50 different lambda functions",
    "start": "1369539",
    "end": "1376169"
  },
  {
    "text": "in it if I have Global's to find that's 50 less lines of code times however many",
    "start": "1376169",
    "end": "1382139"
  },
  {
    "text": "things I have in Global's that I don't have to define per function now if you look here at the get birds function",
    "start": "1382139",
    "end": "1388830"
  },
  {
    "text": "you'll see that it does have time-out specified and this is basically that inside of the actual resource you can",
    "start": "1388830",
    "end": "1395309"
  },
  {
    "text": "override what's in a global but again right the way that works the Sam",
    "start": "1395309",
    "end": "1401369"
  },
  {
    "text": "template is each of these function lines of code if it was raw CloudFormation is going to be 3 to 4x what you see here in",
    "start": "1401369",
    "end": "1408179"
  },
  {
    "text": "sam and then Global's allow you to write even less sam so again we're greatly",
    "start": "1408179",
    "end": "1413549"
  },
  {
    "text": "reducing the lines of code that we need to manage this and we're getting kind of the benefits of being able to standardize across an entire application",
    "start": "1413549",
    "end": "1419789"
  },
  {
    "text": "some of these capabilities cool another",
    "start": "1419789",
    "end": "1425070"
  },
  {
    "text": "thing we have in Sam so I mentioned earlier today about talking about security with lambda there's two main concepts what can my",
    "start": "1425070",
    "end": "1431190"
  },
  {
    "text": "function do and who can invoke my function both of them really critical to",
    "start": "1431190",
    "end": "1436229"
  },
  {
    "text": "get right and make sure you've got the right level of security in your function so we have this concept called policy",
    "start": "1436229",
    "end": "1443099"
  },
  {
    "text": "templates and this impacts the policies for what your function can do so what",
    "start": "1443099",
    "end": "1449429"
  },
  {
    "text": "can it talk to you inside of your infrastructure and so in this case I have a policy that is called sqs polar",
    "start": "1449429",
    "end": "1455219"
  },
  {
    "text": "policy it takes in a single attribute which is a queue name and in this case I'm using the intrinsic function ref to",
    "start": "1455219",
    "end": "1462779"
  },
  {
    "text": "reference the queue that you see at the very bottom of the slide and now this",
    "start": "1462779",
    "end": "1468149"
  },
  {
    "text": "single kind of really two lines of code will actually correspond out to a complete I am policy",
    "start": "1468149",
    "end": "1475320"
  },
  {
    "text": "that will be keyed directly to what it says here basically doing sqs polling and so you'll see here kind of a snippet",
    "start": "1475320",
    "end": "1482009"
  },
  {
    "text": "of this code kind of right in the middle there is the I am policy that is really important for this so if those you who",
    "start": "1482009",
    "end": "1488159"
  },
  {
    "text": "are not familiar I am or write down any exes and management need of us is pretty much the core policy rules rights",
    "start": "1488159",
    "end": "1495210"
  },
  {
    "text": "grouping user capability inside of a ws across the board like an impact security",
    "start": "1495210",
    "end": "1501059"
  },
  {
    "text": "across the entirety of the platform and so I per service that you're talking to",
    "start": "1501059",
    "end": "1506340"
  },
  {
    "text": "depending on what you're trying to do there could be a lot of things to learn about this it's kind of its own language",
    "start": "1506340",
    "end": "1511710"
  },
  {
    "text": "in a sense we see here that I'm giving this function via this policy basically",
    "start": "1511710",
    "end": "1518340"
  },
  {
    "text": "six different rights specific to this one Q and so this greatly greatly",
    "start": "1518340",
    "end": "1524070"
  },
  {
    "text": "simplifies this right two lines of code twenty lines of code two lines of code",
    "start": "1524070",
    "end": "1529169"
  },
  {
    "text": "twenty lines of code so you can kind of get here the impact of this now we have close to I think fifty or so different",
    "start": "1529169",
    "end": "1535619"
  },
  {
    "text": "predefined policies for you today these cover things like only be able to read and write from a single DynamoDB table",
    "start": "1535619",
    "end": "1541499"
  },
  {
    "text": "or a single s3 bucket or only be able to read from this specific Kinesis stream and so you can kind of think of it so",
    "start": "1541499",
    "end": "1549629"
  },
  {
    "text": "this link here which hopefully still works but if not you can get to it from the the documentation for Sam it's",
    "start": "1549629",
    "end": "1554639"
  },
  {
    "text": "basically acts as a cheat sheet for I am if at all you're dealing with I am and you've got to figure out how to configure it these predefined templates",
    "start": "1554639",
    "end": "1562440"
  },
  {
    "text": "are gonna make it a lot easier for you and then again in Sam you can reference it and behind the scenes we unpacked it for you cool so let's go a little bit",
    "start": "1562440",
    "end": "1572639"
  },
  {
    "text": "beyond the template here so we've talked about various capabilities of the template these are some of the big ones there's some other little nuance things",
    "start": "1572639",
    "end": "1578639"
  },
  {
    "text": "that you can do but you've you've crafted the most beautiful template in the world you've painted the Mona Lisa",
    "start": "1578639",
    "end": "1584159"
  },
  {
    "text": "of Sam template files what do you do with it from there the second part of Sam that we have is something that's now",
    "start": "1584159",
    "end": "1590700"
  },
  {
    "text": "called the Sam CLI when we first launched it it was called Sam local and much like the name hinted at back then",
    "start": "1590700",
    "end": "1597749"
  },
  {
    "text": "and the idea for the Sam CLI is that we allow you to run debug build test lambda",
    "start": "1597749",
    "end": "1603269"
  },
  {
    "text": "function locally on your laptop on your desktop on any place that you can run the CLI",
    "start": "1603269",
    "end": "1609760"
  },
  {
    "text": "which runs on Linux Windows Mac it's just a Python application at the end of the day and so this can become basically",
    "start": "1609760",
    "end": "1616720"
  },
  {
    "text": "your interface into the serverless application world and so you take your template file and your codebase and what",
    "start": "1616720",
    "end": "1624220"
  },
  {
    "text": "Sam CLI can do is basically take those things bundle them into a docker container running locally on your",
    "start": "1624220",
    "end": "1630610"
  },
  {
    "text": "workstation it can mock API gateway for you essentially give you an API interface that you can test against it",
    "start": "1630610",
    "end": "1636910"
  },
  {
    "text": "can create a lambda API for you such as you can test your own code two interfaces with lambda or you can",
    "start": "1636910",
    "end": "1644440"
  },
  {
    "text": "generate fake events from other services that would cause lambda to be fired up it gives you all those capabilities",
    "start": "1644440",
    "end": "1649620"
  },
  {
    "text": "actually could do quite a lot of things so just a quick run-through of where we stand today and I'm going to show you it",
    "start": "1649620",
    "end": "1656350"
  },
  {
    "text": "much less here in a moment but you can build application dependencies you can package and deploy you can do again",
    "start": "1656350",
    "end": "1662260"
  },
  {
    "text": "local testing you could create new service applications you can tail logs from production you can validate your",
    "start": "1662260",
    "end": "1669310"
  },
  {
    "text": "template files you can publish to the app repo so a lot of things that you can do here from Sam CLI and it's a toolkit",
    "start": "1669310",
    "end": "1676030"
  },
  {
    "text": "that we're seeing being built into all sorts of other tools as well so pretty cool thing to get started with in a play",
    "start": "1676030",
    "end": "1682000"
  },
  {
    "text": "with here now I mentioned application repository already before we saw that I",
    "start": "1682000",
    "end": "1687880"
  },
  {
    "text": "launched magic 8-ball from it and again this is a place where sorry so service",
    "start": "1687880",
    "end": "1694390"
  },
  {
    "text": "app repo in order to publish app two it has to have a Sam template so there's a requirement for using the app repository",
    "start": "1694390",
    "end": "1699850"
  },
  {
    "text": "and it's part of the magic that helps make the app repository so simple to use when you want to launch applications and",
    "start": "1699850",
    "end": "1707050"
  },
  {
    "text": "so again you need Sam in order to be able to use SAR today so let's let's take a demo here and get out of slides",
    "start": "1707050",
    "end": "1714130"
  },
  {
    "text": "for a bit",
    "start": "1714130",
    "end": "1716490"
  },
  {
    "text": "okay so in this case I'm going to come over to cloud nine so cloud nine is in a",
    "start": "1719180",
    "end": "1727370"
  },
  {
    "text": "cloud hosted IDE that we have here at AWS let me actually just real quick try",
    "start": "1727370",
    "end": "1732660"
  },
  {
    "text": "to make these colors a little bit better for those either in the room and so you",
    "start": "1732660",
    "end": "1738810"
  },
  {
    "text": "know cloud nine can be kind of the full you got a full cloud-based ID let's see",
    "start": "1738810",
    "end": "1746820"
  },
  {
    "text": "if I can just do that's sorry let's say",
    "start": "1746820",
    "end": "1754800"
  },
  {
    "text": "here let's see if this makes it a little",
    "start": "1754800",
    "end": "1760920"
  },
  {
    "text": "bit easier is that any easier for people",
    "start": "1760920",
    "end": "1776790"
  },
  {
    "text": "to see if I make it a little bit bigger here in the room sort of okay we'll take",
    "start": "1776790",
    "end": "1782940"
  },
  {
    "text": "we'll take sort of for today I guess so Clementine managed IT in the cloud",
    "start": "1782940",
    "end": "1788210"
  },
  {
    "text": "interacts and it's tied into AWS in a number of different ways and this actually runs here in ec2 so you see",
    "start": "1788210",
    "end": "1794670"
  },
  {
    "text": "that I'm on a terminal window in here for ec2 user now this is again a",
    "start": "1794670",
    "end": "1799740"
  },
  {
    "text": "full-fledged IDE I come in here I can write a native code and do all sorts of things now inside of cloud nine we",
    "start": "1799740",
    "end": "1805620"
  },
  {
    "text": "actually already have Sam installed and so I can come in here and just see that Sam is installed",
    "start": "1805620",
    "end": "1811710"
  },
  {
    "text": "I've got version 10 of the CLI I can come in here and run help and see all of",
    "start": "1811710",
    "end": "1817860"
  },
  {
    "text": "the various capabilities that we just saw on that previous slide now I it's",
    "start": "1817860",
    "end": "1823740"
  },
  {
    "text": "assuming I'm in a completely blank environment which in this case I am I have nothing else going on inside of this environment here today I could",
    "start": "1823740",
    "end": "1830850"
  },
  {
    "text": "actually go and create a new service application so I can run Sam in it and I'm just showing you here with the help",
    "start": "1830850",
    "end": "1836610"
  },
  {
    "text": "structure I can run Sam in it and then pass in my run time I can run Sam in it",
    "start": "1836610",
    "end": "1841920"
  },
  {
    "text": "and pass in a github URL an HTTP path",
    "start": "1841920",
    "end": "1847530"
  },
  {
    "text": "all sorts of different things that are out there and so we have a lot of companies that are sharing service applications",
    "start": "1847530",
    "end": "1852540"
  },
  {
    "text": "via this way now I'm just going to come in and create a really basic application in Python 2.7 so I'm running Sam in it -",
    "start": "1852540",
    "end": "1860429"
  },
  {
    "text": "- runtime Python 2.7 and you might notice here right above that we've got runtime support for all of the managed",
    "start": "1860429",
    "end": "1867660"
  },
  {
    "text": "runtimes we don't yet have support for the bring your own runtime okay so I ran Sam in it",
    "start": "1867660",
    "end": "1876990"
  },
  {
    "text": "- just one time Python 2.7 it came over here on the left and the File Explorer and it created this directory structure",
    "start": "1876990",
    "end": "1883470"
  },
  {
    "text": "called Sam map in here is a test directory a hello world directory I've",
    "start": "1883470",
    "end": "1888660"
  },
  {
    "text": "got a readme file a template um oh and it get ignore the readme basically explains everything that's inside here",
    "start": "1888660",
    "end": "1895679"
  },
  {
    "text": "and what I would need to do to test this function and so that's cool the template",
    "start": "1895679",
    "end": "1901290"
  },
  {
    "text": "file is an actual Sam template and so I",
    "start": "1901290",
    "end": "1907950"
  },
  {
    "text": "see here that I have a global section I have my resources I have outputs inside",
    "start": "1907950",
    "end": "1915510"
  },
  {
    "text": "of here I have a single function definition so this function definition a has you know my handler is my runtime",
    "start": "1915510",
    "end": "1922580"
  },
  {
    "text": "environment variables and then an API path for it I can come here into hello",
    "start": "1922580",
    "end": "1928650"
  },
  {
    "text": "world and find my actual app code this is Python code it's got basically some",
    "start": "1928650",
    "end": "1934860"
  },
  {
    "text": "comments about how it works behind the scenes and what gets passed into it and if I come all the way to the bottom here really what happens inside my handler is",
    "start": "1934860",
    "end": "1941520"
  },
  {
    "text": "that it makes a call to a URL out on the internet which is check IP to Amazon AWS",
    "start": "1941520",
    "end": "1949110"
  },
  {
    "text": "calm this is a tool you can use to pretty easily get your IP address from",
    "start": "1949110",
    "end": "1954450"
  },
  {
    "text": "wherever you are so it's gonna call that get my IP address from my function where it's running and it's going to do much",
    "start": "1954450",
    "end": "1960990"
  },
  {
    "text": "like in the first demonstration that I showed here today it's gonna spit out a response wrapped in JSON that says hello",
    "start": "1960990",
    "end": "1968940"
  },
  {
    "text": "world and then my my IP address for location so now this application also",
    "start": "1968940",
    "end": "1977040"
  },
  {
    "text": "has requirements for it so it has some dependencies that need to be installed in this case it just has the request",
    "start": "1977040",
    "end": "1982320"
  },
  {
    "text": "dependencies the requests is a really popular Python library and is not currently installed here so",
    "start": "1982320",
    "end": "1989840"
  },
  {
    "text": "if I read the readme what it would tell me is that what I need to do is install that dependency before I can go forward",
    "start": "1989840",
    "end": "1996680"
  },
  {
    "text": "and so to do this I can just from the root of this application type in Sam",
    "start": "1996680",
    "end": "2002140"
  },
  {
    "text": "build and so what Sam build is going to do is it's going to go and it's going to",
    "start": "2002140",
    "end": "2007650"
  },
  {
    "text": "look at my Sam template my Sam template says oh my function code is in the hollow world directory",
    "start": "2007650",
    "end": "2013570"
  },
  {
    "text": "it's going to go and look at how long the world directory and it's going to say okay this is a Python application so I'm looking to see if there's a",
    "start": "2013570",
    "end": "2019270"
  },
  {
    "text": "requirement text file which defines Python dependencies and then if it is I'm going to deploy this I'm going to",
    "start": "2019270",
    "end": "2024700"
  },
  {
    "text": "install those dependencies so I ran that and it created another directory here called aw Sam and inside that a build",
    "start": "2024700",
    "end": "2032680"
  },
  {
    "text": "directory and inside that a HelloWorld function directory and then you can see here kind of on the left-hand side of",
    "start": "2032680",
    "end": "2039070"
  },
  {
    "text": "this all of these other folders and those are all of the dependencies and sub dependencies of this function and so",
    "start": "2039070",
    "end": "2048040"
  },
  {
    "text": "that's all that's all in there for me I didn't have to run the PIP command or deal with that myself so I can go into",
    "start": "2048040",
    "end": "2054760"
  },
  {
    "text": "this directory and I have now in here again a template UML file it's been",
    "start": "2054760",
    "end": "2061690"
  },
  {
    "text": "slightly updated and it tells me where my code is it's now in this build directory and we'll have some been done",
    "start": "2061690",
    "end": "2067990"
  },
  {
    "text": "to execute it and all of that so I basically at this point have a ready to",
    "start": "2067990",
    "end": "2074139"
  },
  {
    "text": "go application that could be tested with and so I know this is an API so let me",
    "start": "2074140",
    "end": "2079179"
  },
  {
    "text": "go ahead and do Sam local start - API oops",
    "start": "2079180",
    "end": "2084659"
  },
  {
    "text": "and I'll reference the template file okay it's kind of jumbled here but",
    "start": "2084660",
    "end": "2092020"
  },
  {
    "text": "what's gonna happen behind the scenes is that Sam CLI is going to take my code fire it up in a docker container running",
    "start": "2092020",
    "end": "2099160"
  },
  {
    "text": "lis local running locally inside of this environment and it makes it available here on localhost colon 3000 my running",
    "start": "2099160",
    "end": "2106840"
  },
  {
    "text": "application so I can copy this go over",
    "start": "2106840",
    "end": "2112420"
  },
  {
    "text": "to another terminal window and I can just curl this local interface",
    "start": "2112420",
    "end": "2118510"
  },
  {
    "text": "so now that failed I knew it would because what I actually have to do here is go and look at my event and my path",
    "start": "2118510",
    "end": "2125290"
  },
  {
    "text": "is /hello so you can come back here and I'm gonna curl /hello okay",
    "start": "2125290",
    "end": "2133720"
  },
  {
    "text": "so what I got back here now is my function actually running so I got message hello world and I got location",
    "start": "2133720",
    "end": "2139420"
  },
  {
    "text": "and I got the IP address that it shows this lambda function running behind if I come back to the first terminal window",
    "start": "2139420",
    "end": "2145840"
  },
  {
    "text": "that I was in again apologies for some of the text here being just a little",
    "start": "2145840",
    "end": "2150910"
  },
  {
    "text": "kind of hard to read in this but when I see down below here is the actual execution taking place and maybe it's",
    "start": "2150910",
    "end": "2157240"
  },
  {
    "text": "worse if I highlight um so I see a a start to the request I see an end of the",
    "start": "2157240",
    "end": "2162460"
  },
  {
    "text": "request I see your report this is all the same information that lambda would be giving me if I actually ran this in",
    "start": "2162460",
    "end": "2167680"
  },
  {
    "text": "you know quote-unquote production lambda I see also the log of the request so it",
    "start": "2167680",
    "end": "2173560"
  },
  {
    "text": "was basically just an API call to /al oh it was HTTP 1.1 because it's curl and I",
    "start": "2173560",
    "end": "2179920"
  },
  {
    "text": "spit out you know a 200 response and so I could sit here and I could test this and I can do all sorts of different",
    "start": "2179920",
    "end": "2186700"
  },
  {
    "text": "things to test and you know see what happens if I type in something invalid and it's just gonna say that it there's",
    "start": "2186700",
    "end": "2191859"
  },
  {
    "text": "that's not gonna work I tell us we come back to my code say hello world's kind of basic let's change",
    "start": "2191859",
    "end": "2199210"
  },
  {
    "text": "this again hello I slept loft come back here to my code test that and so oh I",
    "start": "2199210",
    "end": "2208930"
  },
  {
    "text": "edited the wrong file I will say yeah it remembers it in the right directory",
    "start": "2208930",
    "end": "2215220"
  },
  {
    "text": "take two that's better I can live edit my code and in this case I don't have to",
    "start": "2220400",
    "end": "2227029"
  },
  {
    "text": "stop and start the local utility it's just editing the code that's running in the docker container for me and so all",
    "start": "2227029",
    "end": "2233450"
  },
  {
    "text": "of that work now let's imagine that I was a really bad developer and I changed",
    "start": "2233450",
    "end": "2241910"
  },
  {
    "text": "for example here status code 202 cats cats is not a valid spec status code for",
    "start": "2241910",
    "end": "2250130"
  },
  {
    "text": "those you know HTTP and so mmm no data",
    "start": "2250130",
    "end": "2255859"
  },
  {
    "text": "that's strange I can then go back over to the local window here and I can see up you know",
    "start": "2255859",
    "end": "2262190"
  },
  {
    "text": "what global named cats is not defined so again kind of a silly error to make in",
    "start": "2262190",
    "end": "2267469"
  },
  {
    "text": "Python now I can also come in here and actually the IDE is smart and it told me hey wait a sec oh there's something not",
    "start": "2267469",
    "end": "2273229"
  },
  {
    "text": "right about this there's other things that I could do here I can actually use a debugger inside of cloud 9 to set",
    "start": "2273229",
    "end": "2278779"
  },
  {
    "text": "breakpoints in my code and be able to test those with my service application as I am building it I could also come in",
    "start": "2278779",
    "end": "2286339"
  },
  {
    "text": "here once my application is working and I can deploy from here I could also go",
    "start": "2286339",
    "end": "2291589"
  },
  {
    "text": "and pull down any of my live lambda functions and be able to edit them and",
    "start": "2291589",
    "end": "2297170"
  },
  {
    "text": "repost them again so we do all this from cloud 9 you Sam local for testing and in do all of that let me go ahead and",
    "start": "2297170",
    "end": "2303849"
  },
  {
    "text": "change cats back to 200 valid status code save it cleans the error here I can",
    "start": "2303849",
    "end": "2311210"
  },
  {
    "text": "go and test this great everything is working again I could then go from here",
    "start": "2311210",
    "end": "2319309"
  },
  {
    "text": "and deploy this function so let me get into the right directory here",
    "start": "2319309",
    "end": "2326890"
  },
  {
    "text": "so I can run the same package command which is basically gonna take this code",
    "start": "2336599",
    "end": "2342670"
  },
  {
    "text": "and zip it all up and put it up in s3 for me it then goes and modifies my",
    "start": "2342670",
    "end": "2348940"
  },
  {
    "text": "template file and it creates a package template file which is what I named it here which is actually gonna say that my",
    "start": "2348940",
    "end": "2356019"
  },
  {
    "text": "code lives in this specific URI so it takes that zip file it puts it up into an s3 bucket for me which in this case",
    "start": "2356019",
    "end": "2361869"
  },
  {
    "text": "is just called month - code and it has a hash as the object name and I can come",
    "start": "2361869",
    "end": "2367479"
  },
  {
    "text": "back down here to my Sam window and I can do Sam deploy let me give this a",
    "start": "2367479",
    "end": "2373599"
  },
  {
    "text": "unique name second here",
    "start": "2373599",
    "end": "2377309"
  },
  {
    "text": "Sam hold aloft and so from here what it's going to do is it's actually going",
    "start": "2383230",
    "end": "2388990"
  },
  {
    "text": "to say okay based on this template file based on the code that we have just saved and created go and deploy this",
    "start": "2388990",
    "end": "2394630"
  },
  {
    "text": "into production in actual lambda now it's getting use the Sam template file in here now to deploy this func to",
    "start": "2394630",
    "end": "2401619"
  },
  {
    "text": "configure all of the services resources that we have so again just coming back and looking at the the package version",
    "start": "2401619",
    "end": "2407829"
  },
  {
    "text": "of this my timeout is sent two to three milliseconds the outputs are defined",
    "start": "2407829",
    "end": "2415030"
  },
  {
    "text": "here it will show it happens from that my single resource which is my function and then my API definition and it should",
    "start": "2415030",
    "end": "2422050"
  },
  {
    "text": "take just a couple moments for it to tell CloudFormation to create this resource and push this up",
    "start": "2422050",
    "end": "2430349"
  },
  {
    "text": "[Music]",
    "start": "2433390",
    "end": "2436739"
  },
  {
    "text": "cool so down at the bottom here it says successfully created / updated stack Sam",
    "start": "2438730",
    "end": "2445070"
  },
  {
    "text": "hello loft what I can now do is go back to my console there's a couple ways that",
    "start": "2445070",
    "end": "2453950"
  },
  {
    "text": "I can find out more about this I can go to the cloud formation console oops let",
    "start": "2453950",
    "end": "2459110"
  },
  {
    "text": "me go in the right region here Virginia I see that I have a stack here called",
    "start": "2459110",
    "end": "2466730"
  },
  {
    "text": "Sam hello loft cloves the sidebar I could find out all the various bits of information about this so it has the",
    "start": "2466730",
    "end": "2473210"
  },
  {
    "text": "name I if I had enabled something called drift detection I could go into the events and see the events of all the",
    "start": "2473210",
    "end": "2479540"
  },
  {
    "text": "actions that it took to create this stack I come to resources and this is gonna show me all of the individual",
    "start": "2479540",
    "end": "2486530"
  },
  {
    "text": "service resources that were created so function permissions I am roles API",
    "start": "2486530",
    "end": "2491600"
  },
  {
    "text": "gateway stuff etc I could see here the outputs so I mentioned before the outputs are basically thing that you",
    "start": "2491600",
    "end": "2498110"
  },
  {
    "text": "define that represents what comes out of this function and so I can see right here that I actually have the the URI",
    "start": "2498110",
    "end": "2503540"
  },
  {
    "text": "for my endpoint right here so I can grab that if I wanted to I see the parameters",
    "start": "2503540",
    "end": "2509480"
  },
  {
    "text": "in this case there were no parameters that I passed in and then I can go view the template and so this is the same",
    "start": "2509480",
    "end": "2516109"
  },
  {
    "text": "template again as it shows up here just about 20 to 30 or so lines of code and I",
    "start": "2516109",
    "end": "2522350"
  },
  {
    "text": "could actually click on a view process template and this shows me the actual template if I had written it in",
    "start": "2522350",
    "end": "2528740"
  },
  {
    "text": "CloudFormation and look again how far I'm scrolling through this this is easily two to three times as many lines",
    "start": "2528740",
    "end": "2536030"
  },
  {
    "text": "of code had I actually written this any CloudFormation verse Sam so again here's the Sam pretty",
    "start": "2536030",
    "end": "2545090"
  },
  {
    "text": "much fit all in a single window here's the rock cloud formation a whole lot",
    "start": "2545090",
    "end": "2550520"
  },
  {
    "text": "more code a couple times over the amount of code there's another thing that we have if I go to the lambda console I can",
    "start": "2550520",
    "end": "2557720"
  },
  {
    "text": "go and click on this tab this item on the left hand nav bar called applications and now one thing that",
    "start": "2557720",
    "end": "2565940"
  },
  {
    "text": "we've done so we've been building out this new applications dashboard over the last couple months we keep adding stuff",
    "start": "2565940",
    "end": "2571010"
  },
  {
    "text": "kind of periodically to it but if you launch a a function with Sam or with CloudFormation",
    "start": "2571010",
    "end": "2576170"
  },
  {
    "text": "it will show up here and so if I click into this I get kind of a little bit more of a view into the resources of",
    "start": "2576170",
    "end": "2584840"
  },
  {
    "text": "this servlet application so I see here that there are seven resources they're grouped by the major category types of",
    "start": "2584840",
    "end": "2590450"
  },
  {
    "text": "lambda function an API gateway and this is the same information that I would see from cloud formation I can actually view",
    "start": "2590450",
    "end": "2598280"
  },
  {
    "text": "the Sam template so what was it that was deployed as part of this I can come over here and see the deployment history so",
    "start": "2598280",
    "end": "2604670"
  },
  {
    "text": "this was an application that I was iterating on I could continue to see all of the deployments that had ever happened and then I can see the",
    "start": "2604670",
    "end": "2611300"
  },
  {
    "text": "monitoring and metrics information from this for both lambda an API gateway and any other resource that was defined in",
    "start": "2611300",
    "end": "2617450"
  },
  {
    "text": "the Sam template so this can become kind of a single go to dashboard for information about this coming back to",
    "start": "2617450",
    "end": "2624740"
  },
  {
    "text": "overview here under the API I know that have an API endpoint so let's up into",
    "start": "2624740",
    "end": "2631130"
  },
  {
    "text": "tab I have to throw in slash hello and then again here's the text that we saw",
    "start": "2631130",
    "end": "2638800"
  },
  {
    "text": "cool so what kind of happened here we started in started in in this case cloud",
    "start": "2638800",
    "end": "2648320"
  },
  {
    "text": "nine but could have been any terminal window I had Sam CLI installed I needed a new function which created a base",
    "start": "2648320",
    "end": "2654500"
  },
  {
    "text": "directory that had Sam template and some application code I used Sam builds to",
    "start": "2654500",
    "end": "2659780"
  },
  {
    "text": "pull in my applications dependencies I then was able to locally test and iterate and debug my function I was able",
    "start": "2659780",
    "end": "2666680"
  },
  {
    "text": "to throw fake API calls out at C the response see what broke when I broke it and then fix that again really quick",
    "start": "2666680",
    "end": "2673220"
  },
  {
    "text": "rapid iteration cycle on that I was then able to package it up and deploy it up to in quotes the cloud all directly from",
    "start": "2673220",
    "end": "2681740"
  },
  {
    "text": "that CLI now I did all of that just using the raw shell commands cloud nine actually has a fun little GUI that you",
    "start": "2681740",
    "end": "2687860"
  },
  {
    "text": "can use to edit the Sam template and to do Sam local testing and stuff like that but I wanted to show you just in the CLI",
    "start": "2687860",
    "end": "2693620"
  },
  {
    "text": "because I could have done that in the OS X terminal you could have done it from a a Windows shell or from ec2 instance and",
    "start": "2693620",
    "end": "2700550"
  },
  {
    "text": "Linux or anywhere else that you wanted to so Sam CLI really powerful tool great play",
    "start": "2700550",
    "end": "2705650"
  },
  {
    "text": "to get started and again a lot of learning value there now behind the",
    "start": "2705650",
    "end": "2711920"
  },
  {
    "text": "scenes for Sam the thing that takes those we saw was 30 or so lines of Sam template and turn it into about 80 lines",
    "start": "2711920",
    "end": "2718309"
  },
  {
    "text": "of CloudFormation is this thing that's called the Sam translator the Sam translator is that",
    "start": "2718309",
    "end": "2723529"
  },
  {
    "text": "transform construct that basically maps out the special resources that we have things like Global's policy templates",
    "start": "2723529",
    "end": "2730970"
  },
  {
    "text": "the safe deployments capabilities and turns that into the raw underlying capabilities behind the scenes now back",
    "start": "2730970",
    "end": "2738499"
  },
  {
    "text": "in the spring of 2018 we actually rewrote this from the way that it was originally written it's now in Python",
    "start": "2738499",
    "end": "2745069"
  },
  {
    "text": "it's open sourced you can go and you can pull at it you can look what happens you can read about it you can also",
    "start": "2745069",
    "end": "2751069"
  },
  {
    "text": "contribute and so we've had some really awesome contributions from the community a couple of these have have gone live",
    "start": "2751069",
    "end": "2757700"
  },
  {
    "text": "have been really valuable the one that's kind of on the your left-hand side number four for seven inline code for",
    "start": "2757700",
    "end": "2765140"
  },
  {
    "text": "Sam templates really pretty cool you can have a document that represents all the aspects of your function and your",
    "start": "2765140",
    "end": "2770599"
  },
  {
    "text": "function code and just rip that and deploy that and not have to have anything more complicated all sorts of",
    "start": "2770599",
    "end": "2776900"
  },
  {
    "text": "stuff that you can do with that there and so this is open source the CLI is also open source so back when we",
    "start": "2776900",
    "end": "2783940"
  },
  {
    "text": "announced Ruby support a different developer inside of AWS actually put the",
    "start": "2783940",
    "end": "2790579"
  },
  {
    "text": "Ruby support into the Sam CLI before the Sam team had the chance to do it so they were so excited about Ruby they put that",
    "start": "2790579",
    "end": "2797119"
  },
  {
    "text": "in put in a PR team merged it awesome so seeing lots of interesting stuff happened here in in this space and we",
    "start": "2797119",
    "end": "2804380"
  },
  {
    "text": "continue to see more and more capabilities come into this and so you can check this out you can make issues",
    "start": "2804380",
    "end": "2810140"
  },
  {
    "text": "you can ask for feature requests all this stuff in github for the Sam CLI now",
    "start": "2810140",
    "end": "2815509"
  },
  {
    "text": "to talk a little bit here again we've seen the application repository and we saw the magic 8-ball",
    "start": "2815509",
    "end": "2820519"
  },
  {
    "text": "app that came out of it again what you can do with the app repository is you can share both publicly and privately",
    "start": "2820519",
    "end": "2826489"
  },
  {
    "text": "inside of an organization entire service applications so I could have taken this this hello world application that we",
    "start": "2826489",
    "end": "2832489"
  },
  {
    "text": "just created and tested locally and published it up to the app repo and you",
    "start": "2832489",
    "end": "2837619"
  },
  {
    "text": "could have gone and and pull that down and done whatever you wanted to with it yourself that we",
    "start": "2837619",
    "end": "2843680"
  },
  {
    "text": "announced at reinvent again just kind of the end of November is this concept called nested applications and so the",
    "start": "2843680",
    "end": "2851270"
  },
  {
    "text": "concept of nesting is that you can basically again relate different entire",
    "start": "2851270",
    "end": "2856280"
  },
  {
    "text": "service applications to each other and I think one of the the best examples that we have for this is the lead product",
    "start": "2856280",
    "end": "2867020"
  },
  {
    "text": "manager for API gateway whose name is Dougal he was getting your request for a",
    "start": "2867020",
    "end": "2875960"
  },
  {
    "text": "really basic authorization mechanism for API gateway and he said okay and we'll",
    "start": "2875960",
    "end": "2883550"
  },
  {
    "text": "talk about this a little just afternoon",
    "start": "2883550",
    "end": "2886600"
  },
  {
    "text": "yeah API gateway supports a concept called custom authorizers with lambda basically you can use a lambda function",
    "start": "2889300",
    "end": "2895970"
  },
  {
    "text": "to do authorization for your API the people were looking for basic HTTP",
    "start": "2895970",
    "end": "2901340"
  },
  {
    "text": "authentication which is a really basic kind of old-school way of doing user name/password",
    "start": "2901340",
    "end": "2906890"
  },
  {
    "text": "inside of web apps it's not something typically encouraged these days but people are asking for it and he was",
    "start": "2906890",
    "end": "2912740"
  },
  {
    "text": "trying to make an example of how easy it is and so he wrote the code published in github and then made a service a pre-poo",
    "start": "2912740",
    "end": "2920120"
  },
  {
    "text": "application and so anybody can now go and find the template for this it uses",
    "start": "2920120",
    "end": "2926090"
  },
  {
    "text": "dynamodb to store user name and password and you can just go and deploy this and",
    "start": "2926090",
    "end": "2931280"
  },
  {
    "text": "so you can deploy this author this authorization mechanism tie it in to your api gateways and glue it all",
    "start": "2931280",
    "end": "2937280"
  },
  {
    "text": "together now one thing that we did for",
    "start": "2937280",
    "end": "2942890"
  },
  {
    "text": "the launch blog for this was show how you can have a Sam template that just",
    "start": "2942890",
    "end": "2948080"
  },
  {
    "text": "references this app and basically save for all of your AP is include this",
    "start": "2948080",
    "end": "2953660"
  },
  {
    "text": "authorizer and then that's not something that you have to write so where we see a lot of organizations do is let's say",
    "start": "2953660",
    "end": "2959840"
  },
  {
    "text": "that you have a user management service already and you want to integrate that with a service application you could",
    "start": "2959840",
    "end": "2965720"
  },
  {
    "text": "create a lambda function that talks to your user system and then tell everyone the organization this is the authorizer",
    "start": "2965720",
    "end": "2971630"
  },
  {
    "text": "that you use if you want to build a surplus application and you just saved everyone your organization from ever having to write",
    "start": "2971630",
    "end": "2977030"
  },
  {
    "text": "that code and so again you can really quickly and easily relate these two things together and that is kind of the",
    "start": "2977030",
    "end": "2983150"
  },
  {
    "text": "power of nested applications and so you could build really really complex surplice architectures using all sorts",
    "start": "2983150",
    "end": "2990470"
  },
  {
    "text": "of different applications together nested applications can refer to other nested applications so you can get kind of interesting bits and pieces there in",
    "start": "2990470",
    "end": "2998470"
  },
  {
    "text": "this case I've already kind of demoed this before so you can read all about",
    "start": "2998470",
    "end": "3004990"
  },
  {
    "text": "Sam again we talked about the templating structure today greatly reduces the",
    "start": "3004990",
    "end": "3010570"
  },
  {
    "text": "amount of work that you need to do to build to provision and manage these resources in AWS we saw again that kind",
    "start": "3010570",
    "end": "3016450"
  },
  {
    "text": "of one to five mapping of lines of Sam two lines of CloudFormation you got",
    "start": "3016450",
    "end": "3021640"
  },
  {
    "text": "capabilities like safe deployments and Global's and policy templates all of the capabilities there in CloudFormation and",
    "start": "3021640",
    "end": "3026890"
  },
  {
    "text": "for parameters and mappings let me saw the CLI being able to go from kind of zero to full application running",
    "start": "3026890",
    "end": "3032710"
  },
  {
    "text": "in a cloud where we tested it we debugged it all that locally before we deployed it up you can find out all the",
    "start": "3032710",
    "end": "3038530"
  },
  {
    "text": "information about Sam the open source repos documentation everything else at AWS to amazon.com slash service slash",
    "start": "3038530",
    "end": "3045160"
  },
  {
    "text": "Sam again Sam is our the the squirrel that you see here that is Sam so Sam the",
    "start": "3045160",
    "end": "3051400"
  },
  {
    "text": "squirrel is our mascot think of it like the docker will and the Go gopher this",
    "start": "3051400",
    "end": "3057220"
  },
  {
    "text": "is our version of that we're happy today for those of you here at the laughs we've got all sorts of fun stickers that",
    "start": "3057220",
    "end": "3062440"
  },
  {
    "text": "we're gonna put out on a table in the hallway here and so so make sure you grab some some Sam for your laptop I've",
    "start": "3062440",
    "end": "3069130"
  },
  {
    "text": "got a little Sam guy here on my laptop as well but again you can find out a lot more about Sam Terms of Service stuff as",
    "start": "3069130",
    "end": "3077350"
  },
  {
    "text": "I mentioned earlier today you go to aws.amazon.com slash server lists and find information and links to all sorts",
    "start": "3077350",
    "end": "3083080"
  },
  {
    "text": "of different types of content getting up there and that kind of white middle header bar you got links to the service",
    "start": "3083080",
    "end": "3088360"
  },
  {
    "text": "app repo - developer tools like Sam - resource pages and everything else that you might need if you're leaving us and",
    "start": "3088360",
    "end": "3095470"
  },
  {
    "text": "not sticking around for the rest of the day and my name is Chris Mons I'm a principal developer advocate for service here at AWS based out of New York City",
    "start": "3095470",
    "end": "3101140"
  },
  {
    "text": "if you find me at Munson amazon.com or AK responds on Twitter happy to take questions there",
    "start": "3101140",
    "end": "3106390"
  },
  {
    "text": "follows you here at the loft we're breaking for lunch for the next hour for those of you who are live here on Twitch",
    "start": "3106390",
    "end": "3111580"
  },
  {
    "text": "I think we're switching to some other fun stuff here for a little bit but we're gonna be here later today and hope",
    "start": "3111580",
    "end": "3117280"
  },
  {
    "text": "you can join us thank you again for coming today and again if you can stick around for the afternoon we've got a lot",
    "start": "3117280",
    "end": "3122860"
  },
  {
    "text": "more fun stuff to talk about layers of runtime api deep dive into AP a gateway step functions so we're still kind of in",
    "start": "3122860",
    "end": "3130330"
  },
  {
    "text": "the early part of our day here but thank you again for coming [Applause]",
    "start": "3130330",
    "end": "3138689"
  }
]