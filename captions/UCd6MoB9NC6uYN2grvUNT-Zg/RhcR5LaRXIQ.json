[
  {
    "start": "0",
    "end": "28000"
  },
  {
    "text": "hi everyone i'm jerry hargrove the",
    "start": "240",
    "end": "2000"
  },
  {
    "text": "amazon light cell developer advocate",
    "start": "2000",
    "end": "4080"
  },
  {
    "text": "and in this video i'm going to show you",
    "start": "4080",
    "end": "5600"
  },
  {
    "text": "how easy it is to deploy your first",
    "start": "5600",
    "end": "7279"
  },
  {
    "text": "containerized application using amazon",
    "start": "7279",
    "end": "9519"
  },
  {
    "text": "light cell containers",
    "start": "9519",
    "end": "12559"
  },
  {
    "text": "in this video i'll show you how to",
    "start": "12719",
    "end": "13920"
  },
  {
    "text": "create a new container service in amazon",
    "start": "13920",
    "end": "15759"
  },
  {
    "text": "light cell",
    "start": "15759",
    "end": "16400"
  },
  {
    "text": "and then how to deploy a container to",
    "start": "16400",
    "end": "18160"
  },
  {
    "text": "that service",
    "start": "18160",
    "end": "20320"
  },
  {
    "text": "more information about tutorials to",
    "start": "20320",
    "end": "22000"
  },
  {
    "text": "accompany this video is included in the",
    "start": "22000",
    "end": "23760"
  },
  {
    "text": "description below",
    "start": "23760",
    "end": "25439"
  },
  {
    "text": "let's get started",
    "start": "25439",
    "end": "28320"
  },
  {
    "start": "28000",
    "end": "168000"
  },
  {
    "text": "to begin log into your aws account and",
    "start": "29359",
    "end": "31519"
  },
  {
    "text": "navigate to the lightsail web console",
    "start": "31519",
    "end": "35360"
  },
  {
    "text": "from here open the containers tab",
    "start": "37920",
    "end": "41760"
  },
  {
    "text": "and create a new container service",
    "start": "42160",
    "end": "45840"
  },
  {
    "text": "a container service requires a location",
    "start": "46079",
    "end": "48399"
  },
  {
    "text": "a capacity and a name",
    "start": "48399",
    "end": "51120"
  },
  {
    "text": "the location of your container service",
    "start": "51120",
    "end": "53120"
  },
  {
    "text": "determines which aws region the service",
    "start": "53120",
    "end": "55360"
  },
  {
    "text": "will be in",
    "start": "55360",
    "end": "56719"
  },
  {
    "text": "choosing a location for your container",
    "start": "56719",
    "end": "58320"
  },
  {
    "text": "service is just like choosing a location",
    "start": "58320",
    "end": "60640"
  },
  {
    "text": "for a light sale instance or other aws",
    "start": "60640",
    "end": "62960"
  },
  {
    "text": "resource",
    "start": "62960",
    "end": "64878"
  },
  {
    "text": "you might choose a particular region",
    "start": "64879",
    "end": "66720"
  },
  {
    "text": "because it's close to your users and",
    "start": "66720",
    "end": "68320"
  },
  {
    "text": "will reduce latency",
    "start": "68320",
    "end": "70240"
  },
  {
    "text": "or you might choose a particular region",
    "start": "70240",
    "end": "72320"
  },
  {
    "text": "because you have data sovereignty or",
    "start": "72320",
    "end": "74000"
  },
  {
    "text": "other regional requirements",
    "start": "74000",
    "end": "75840"
  },
  {
    "text": "i'm going to choose the aws oregon",
    "start": "75840",
    "end": "77520"
  },
  {
    "text": "region because it's the closest region",
    "start": "77520",
    "end": "79200"
  },
  {
    "text": "to my actual location",
    "start": "79200",
    "end": "80720"
  },
  {
    "text": "and i'm the only user",
    "start": "80720",
    "end": "83840"
  },
  {
    "text": "the capacity of your container service",
    "start": "84720",
    "end": "86479"
  },
  {
    "text": "determines how much power and scale your",
    "start": "86479",
    "end": "88320"
  },
  {
    "text": "service will have",
    "start": "88320",
    "end": "89840"
  },
  {
    "text": "the power of your service is defined by",
    "start": "89840",
    "end": "91680"
  },
  {
    "text": "the number of virtual cpus and the",
    "start": "91680",
    "end": "93439"
  },
  {
    "text": "amount of memory associated with each",
    "start": "93439",
    "end": "95360"
  },
  {
    "text": "node in the service",
    "start": "95360",
    "end": "98240"
  },
  {
    "text": "the scale of your service is defined by",
    "start": "98240",
    "end": "100079"
  },
  {
    "text": "the number of nodes it has",
    "start": "100079",
    "end": "101920"
  },
  {
    "text": "the power and scale that you need is",
    "start": "101920",
    "end": "103920"
  },
  {
    "text": "determined by the requirements of your",
    "start": "103920",
    "end": "105600"
  },
  {
    "text": "particular application",
    "start": "105600",
    "end": "107520"
  },
  {
    "text": "i'm going to go with a single nano node",
    "start": "107520",
    "end": "109280"
  },
  {
    "text": "for my first container service which i",
    "start": "109280",
    "end": "111040"
  },
  {
    "text": "know doesn't require much capacity",
    "start": "111040",
    "end": "114720"
  },
  {
    "text": "it's important to know that if your",
    "start": "114720",
    "end": "116399"
  },
  {
    "text": "capacity requirements change later on",
    "start": "116399",
    "end": "118640"
  },
  {
    "text": "you can very easily return and update",
    "start": "118640",
    "end": "120640"
  },
  {
    "text": "both the power and scale of your",
    "start": "120640",
    "end": "122240"
  },
  {
    "text": "container service",
    "start": "122240",
    "end": "125200"
  },
  {
    "text": "the name of your service should follow",
    "start": "126320",
    "end": "127680"
  },
  {
    "text": "the documented naming guidelines and",
    "start": "127680",
    "end": "129440"
  },
  {
    "text": "provided constraints",
    "start": "129440",
    "end": "130800"
  },
  {
    "text": "this name will become part of the",
    "start": "130800",
    "end": "132080"
  },
  {
    "text": "default domain name for your container",
    "start": "132080",
    "end": "133840"
  },
  {
    "text": "service so it needs to be dns compliant",
    "start": "133840",
    "end": "137360"
  },
  {
    "text": "i'm going to use my first service as an",
    "start": "137360",
    "end": "139520"
  },
  {
    "text": "app descriptor",
    "start": "139520",
    "end": "142560"
  },
  {
    "text": "finally review your container service",
    "start": "142560",
    "end": "144640"
  },
  {
    "text": "configuration",
    "start": "144640",
    "end": "145760"
  },
  {
    "text": "make any changes if you need to and then",
    "start": "145760",
    "end": "148400"
  },
  {
    "text": "create the container service",
    "start": "148400",
    "end": "151280"
  },
  {
    "text": "after a few minutes your container",
    "start": "151280",
    "end": "152879"
  },
  {
    "text": "service will be provisioned and ready",
    "start": "152879",
    "end": "154480"
  },
  {
    "text": "for use",
    "start": "154480",
    "end": "156879"
  },
  {
    "text": "from the container service page you can",
    "start": "156879",
    "end": "158959"
  },
  {
    "text": "create and review deployments to the",
    "start": "158959",
    "end": "160640"
  },
  {
    "text": "service",
    "start": "160640",
    "end": "161519"
  },
  {
    "text": "change the services capacity administer",
    "start": "161519",
    "end": "164400"
  },
  {
    "text": "custom domains",
    "start": "164400",
    "end": "165840"
  },
  {
    "text": "and view service metrics",
    "start": "165840",
    "end": "169120"
  },
  {
    "start": "168000",
    "end": "359000"
  },
  {
    "text": "now that you've created your container",
    "start": "169120",
    "end": "170480"
  },
  {
    "text": "service i'll show you how to deploy your",
    "start": "170480",
    "end": "172080"
  },
  {
    "text": "first container to that service",
    "start": "172080",
    "end": "174640"
  },
  {
    "text": "on the container service page open the",
    "start": "174640",
    "end": "176400"
  },
  {
    "text": "deployments tab and create a new",
    "start": "176400",
    "end": "177920"
  },
  {
    "text": "deployment",
    "start": "177920",
    "end": "180480"
  },
  {
    "text": "a deployment is a set of specifications",
    "start": "180560",
    "end": "182640"
  },
  {
    "text": "for the container workload that you want",
    "start": "182640",
    "end": "184319"
  },
  {
    "text": "to launch in your container service",
    "start": "184319",
    "end": "187120"
  },
  {
    "text": "a deployment can handle up to 10",
    "start": "187120",
    "end": "188720"
  },
  {
    "text": "containers and each container has a name",
    "start": "188720",
    "end": "191040"
  },
  {
    "text": "and image and configuration options",
    "start": "191040",
    "end": "194080"
  },
  {
    "text": "for this video you'll be deploying just",
    "start": "194080",
    "end": "195840"
  },
  {
    "text": "a single container to your service the",
    "start": "195840",
    "end": "197680"
  },
  {
    "text": "official nginx docker image provided by",
    "start": "197680",
    "end": "200000"
  },
  {
    "text": "nginx",
    "start": "200000",
    "end": "201280"
  },
  {
    "text": "nginx is a popular web server and",
    "start": "201280",
    "end": "203200"
  },
  {
    "text": "reverse proxy many of you might already",
    "start": "203200",
    "end": "205200"
  },
  {
    "text": "be familiar with it",
    "start": "205200",
    "end": "208000"
  },
  {
    "text": "the name of your container should follow",
    "start": "208000",
    "end": "209519"
  },
  {
    "text": "the appropriate naming guidelines",
    "start": "209519",
    "end": "211360"
  },
  {
    "text": "and should be something descriptive that",
    "start": "211360",
    "end": "213200"
  },
  {
    "text": "allows you to identify your container",
    "start": "213200",
    "end": "214959"
  },
  {
    "text": "easily",
    "start": "214959",
    "end": "216640"
  },
  {
    "text": "i'm going to use nginx as the name but",
    "start": "216640",
    "end": "219200"
  },
  {
    "text": "other names like",
    "start": "219200",
    "end": "220080"
  },
  {
    "text": "web or proxy might also be useful",
    "start": "220080",
    "end": "223680"
  },
  {
    "text": "source container images can come from a",
    "start": "223680",
    "end": "225519"
  },
  {
    "text": "public repository like docker hub",
    "start": "225519",
    "end": "227760"
  },
  {
    "text": "or can be images that you've created and",
    "start": "227760",
    "end": "229760"
  },
  {
    "text": "stored with your container service",
    "start": "229760",
    "end": "231599"
  },
  {
    "text": "i'll talk more about that in another",
    "start": "231599",
    "end": "233280"
  },
  {
    "text": "video",
    "start": "233280",
    "end": "234959"
  },
  {
    "text": "we're using the official nginx docker",
    "start": "234959",
    "end": "237040"
  },
  {
    "text": "image and can reference it directly by",
    "start": "237040",
    "end": "238879"
  },
  {
    "text": "name",
    "start": "238879",
    "end": "239760"
  },
  {
    "text": "this will resolve to the latest version",
    "start": "239760",
    "end": "241519"
  },
  {
    "text": "of the nginx image available",
    "start": "241519",
    "end": "244400"
  },
  {
    "text": "you can also provide optional",
    "start": "244400",
    "end": "245840"
  },
  {
    "text": "configuration like launch commands",
    "start": "245840",
    "end": "248239"
  },
  {
    "text": "environmental variables and open ports",
    "start": "248239",
    "end": "250560"
  },
  {
    "text": "for the container",
    "start": "250560",
    "end": "252799"
  },
  {
    "text": "these dynamic options allow you to",
    "start": "252799",
    "end": "254480"
  },
  {
    "text": "provide configuration information to",
    "start": "254480",
    "end": "256239"
  },
  {
    "text": "your container when it is created",
    "start": "256239",
    "end": "258639"
  },
  {
    "text": "for the nginx container you don't need",
    "start": "258639",
    "end": "260799"
  },
  {
    "text": "to specify launch command or",
    "start": "260799",
    "end": "262240"
  },
  {
    "text": "environmental variables",
    "start": "262240",
    "end": "263600"
  },
  {
    "text": "but do need to add an open port",
    "start": "263600",
    "end": "267040"
  },
  {
    "text": "the official nginx container listens on",
    "start": "267040",
    "end": "269120"
  },
  {
    "text": "port 80 for http",
    "start": "269120",
    "end": "270880"
  },
  {
    "text": "traffic",
    "start": "270880",
    "end": "273280"
  },
  {
    "text": "public endpoints allow end users or",
    "start": "274400",
    "end": "276320"
  },
  {
    "text": "consumers of your service to reach it",
    "start": "276320",
    "end": "278000"
  },
  {
    "text": "from the internet",
    "start": "278000",
    "end": "279600"
  },
  {
    "text": "when you specify a public endpoint light",
    "start": "279600",
    "end": "281840"
  },
  {
    "text": "cell will create a secure public https",
    "start": "281840",
    "end": "284479"
  },
  {
    "text": "endpoint for your service that is",
    "start": "284479",
    "end": "286320"
  },
  {
    "text": "accessible from the internet",
    "start": "286320",
    "end": "287759"
  },
  {
    "text": "through the default domain name",
    "start": "287759",
    "end": "291199"
  },
  {
    "text": "if you had more than one container in",
    "start": "291680",
    "end": "293280"
  },
  {
    "text": "your service that had open ports",
    "start": "293280",
    "end": "295199"
  },
  {
    "text": "you could choose from any one of those",
    "start": "295199",
    "end": "296880"
  },
  {
    "text": "containers to act as your public",
    "start": "296880",
    "end": "298320"
  },
  {
    "text": "endpoint",
    "start": "298320",
    "end": "299040"
  },
  {
    "text": "but can only have one public endpoint",
    "start": "299040",
    "end": "301120"
  },
  {
    "text": "per container service at a time",
    "start": "301120",
    "end": "304000"
  },
  {
    "text": "after providing a name imagine",
    "start": "304000",
    "end": "305759"
  },
  {
    "text": "configuration for your container",
    "start": "305759",
    "end": "307520"
  },
  {
    "text": "and endpoint configuration you can now",
    "start": "307520",
    "end": "309840"
  },
  {
    "text": "create your deployment",
    "start": "309840",
    "end": "311440"
  },
  {
    "text": "printing your deployment will take a few",
    "start": "311440",
    "end": "313039"
  },
  {
    "text": "minutes during creation",
    "start": "313039",
    "end": "315520"
  },
  {
    "text": "you can monitor the progress of your",
    "start": "315520",
    "end": "317120"
  },
  {
    "text": "deployment here on the service page",
    "start": "317120",
    "end": "319440"
  },
  {
    "text": "and by viewing service logs",
    "start": "319440",
    "end": "325840"
  },
  {
    "text": "once your service has been deployed you",
    "start": "327759",
    "end": "329520"
  },
  {
    "text": "can visit the public endpoint with your",
    "start": "329520",
    "end": "331120"
  },
  {
    "text": "browser by clicking on the link on the",
    "start": "331120",
    "end": "332960"
  },
  {
    "text": "service page",
    "start": "332960",
    "end": "334560"
  },
  {
    "text": "here you can verify that your nginx web",
    "start": "334560",
    "end": "336400"
  },
  {
    "text": "server has been deployed correctly",
    "start": "336400",
    "end": "338000"
  },
  {
    "text": "and is accepting traffic from the",
    "start": "338000",
    "end": "339520"
  },
  {
    "text": "internet",
    "start": "339520",
    "end": "342000"
  },
  {
    "text": "once you've verified your container",
    "start": "342639",
    "end": "344160"
  },
  {
    "text": "service is operating correctly",
    "start": "344160",
    "end": "345680"
  },
  {
    "text": "and you're finished with it you can",
    "start": "345680",
    "end": "347280"
  },
  {
    "text": "easily delete your light cell container",
    "start": "347280",
    "end": "348960"
  },
  {
    "text": "service and all the resources associated",
    "start": "348960",
    "end": "350880"
  },
  {
    "text": "with it",
    "start": "350880",
    "end": "351440"
  },
  {
    "text": "including deployments and saved",
    "start": "351440",
    "end": "353199"
  },
  {
    "text": "container images",
    "start": "353199",
    "end": "356240"
  },
  {
    "start": "359000",
    "end": "402000"
  },
  {
    "text": "in this video i've shown you how easy it",
    "start": "360080",
    "end": "361919"
  },
  {
    "text": "is to deploy a containerized application",
    "start": "361919",
    "end": "363840"
  },
  {
    "text": "in the cloud using amazon light cell",
    "start": "363840",
    "end": "365680"
  },
  {
    "text": "containers",
    "start": "365680",
    "end": "366639"
  },
  {
    "text": "i've demonstrated how to create a new",
    "start": "366639",
    "end": "368160"
  },
  {
    "text": "container service and how to deploy a",
    "start": "368160",
    "end": "370000"
  },
  {
    "text": "container",
    "start": "370000",
    "end": "370800"
  },
  {
    "text": "all from the lightsail web console",
    "start": "370800",
    "end": "373360"
  },
  {
    "text": "amazon light cell containers is an easy",
    "start": "373360",
    "end": "375280"
  },
  {
    "text": "way to get started with containers in",
    "start": "375280",
    "end": "376880"
  },
  {
    "text": "the cloud",
    "start": "376880",
    "end": "377600"
  },
  {
    "text": "particularly for startups developers and",
    "start": "377600",
    "end": "379840"
  },
  {
    "text": "hobbyists taking their first steps into",
    "start": "379840",
    "end": "381680"
  },
  {
    "text": "containerization",
    "start": "381680",
    "end": "382880"
  },
  {
    "text": "you can use amazon lifestyle containers",
    "start": "382880",
    "end": "384560"
  },
  {
    "text": "to learn about containers in the cloud",
    "start": "384560",
    "end": "386400"
  },
  {
    "text": "to gain experience managing containers",
    "start": "386400",
    "end": "388240"
  },
  {
    "text": "in the cloud and can do so with light",
    "start": "388240",
    "end": "390319"
  },
  {
    "text": "cell simplified container orchestration",
    "start": "390319",
    "end": "392720"
  },
  {
    "text": "for more information about lightsail",
    "start": "392720",
    "end": "394240"
  },
  {
    "text": "containers please visit the lightsail",
    "start": "394240",
    "end": "396160"
  },
  {
    "text": "product page",
    "start": "396160",
    "end": "398800"
  },
  {
    "text": "thanks",
    "start": "401800",
    "end": "404800"
  }
]