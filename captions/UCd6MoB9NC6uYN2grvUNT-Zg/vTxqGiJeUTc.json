[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "- Hi, I'm Mike Havey.",
    "start": "2700",
    "end": "3780"
  },
  {
    "text": "I'm a Senior Specialist\nSolutions Architect with AWS.",
    "start": "3780",
    "end": "7500"
  },
  {
    "text": "In today's Neptune Snackables,",
    "start": "7500",
    "end": "10140"
  },
  {
    "text": "I wanna investigate how you can discover,",
    "start": "10140",
    "end": "12960"
  },
  {
    "text": "or reverse engineer,",
    "start": "12960",
    "end": "14493"
  },
  {
    "text": "the model, or the schema, in\nyour Neptune graph database.",
    "start": "15330",
    "end": "20070"
  },
  {
    "text": "And once you've discovered it,",
    "start": "20070",
    "end": "21210"
  },
  {
    "text": "how you can draw it using\ndiagram-as-code tools.",
    "start": "21210",
    "end": "24783"
  },
  {
    "start": "25000",
    "end": "136000"
  },
  {
    "text": "Now, if you're reverse engineering,",
    "start": "26430",
    "end": "28620"
  },
  {
    "text": "it means you've already adopted graph.",
    "start": "28620",
    "end": "30780"
  },
  {
    "text": "What was the promise of\ngraph that motivated you?",
    "start": "30780",
    "end": "33230"
  },
  {
    "text": "We know that graph is built\nfrom some basic building blocks.",
    "start": "34680",
    "end": "38070"
  },
  {
    "text": "We have nodes and edges.",
    "start": "38070",
    "end": "39360"
  },
  {
    "text": "Nodes represent business objects,",
    "start": "39360",
    "end": "41850"
  },
  {
    "text": "edges represent the relationships.",
    "start": "41850",
    "end": "43922"
  },
  {
    "text": "And from those foundations,",
    "start": "45780",
    "end": "47039"
  },
  {
    "text": "we can tackle some technical challenges.",
    "start": "47040",
    "end": "50190"
  },
  {
    "text": "We can combine data\nacross different silos.",
    "start": "50190",
    "end": "52440"
  },
  {
    "text": "We can find connections between objects.",
    "start": "52440",
    "end": "56670"
  },
  {
    "text": "We can work with heterogeneous data.",
    "start": "56670",
    "end": "60930"
  },
  {
    "text": "And our data can be full of\nmany-to-many relationships.",
    "start": "60930",
    "end": "64023"
  },
  {
    "text": "And therefore we can build use cases,",
    "start": "66840",
    "end": "68700"
  },
  {
    "text": "such as social networking,\nrecommendations,",
    "start": "68700",
    "end": "71130"
  },
  {
    "text": "knowledge graphs, fraud\ndetection, life sciences,",
    "start": "71130",
    "end": "74460"
  },
  {
    "text": "network and IT use cases,",
    "start": "74460",
    "end": "76500"
  },
  {
    "text": "all of which involve highly\nconnected data domain,",
    "start": "76500",
    "end": "80010"
  },
  {
    "text": "the ability to query that\nhighly connected structure,",
    "start": "80010",
    "end": "83430"
  },
  {
    "text": "and indeed to filter results",
    "start": "83430",
    "end": "86520"
  },
  {
    "text": "based on strength of relationship.",
    "start": "86520",
    "end": "88323"
  },
  {
    "text": "So, Amazon Neptune is a\nmanaged graph database service",
    "start": "90450",
    "end": "93450"
  },
  {
    "text": "from AWS that implements graph.",
    "start": "93450",
    "end": "96450"
  },
  {
    "text": "And among its attributes\nare that it is open,",
    "start": "96450",
    "end": "100950"
  },
  {
    "text": "supporting both Apache TinkerPop,",
    "start": "100950",
    "end": "103799"
  },
  {
    "text": "labeled property graph representations,",
    "start": "103800",
    "end": "106380"
  },
  {
    "text": "as well as resource\nsubscription framework,",
    "start": "106380",
    "end": "108450"
  },
  {
    "text": "or RDF, from the W3C.",
    "start": "108450",
    "end": "110673"
  },
  {
    "text": "It can scale to achieve fast performance",
    "start": "111720",
    "end": "116430"
  },
  {
    "text": "with the ability to query\nbillions of relationships",
    "start": "116430",
    "end": "118620"
  },
  {
    "text": "with millisecond latency.",
    "start": "118620",
    "end": "120720"
  },
  {
    "text": "Its architecture lends itself",
    "start": "120720",
    "end": "122250"
  },
  {
    "text": "to a great deal of\nreliability, durability,",
    "start": "122250",
    "end": "126540"
  },
  {
    "text": "and fault tolerance.",
    "start": "126540",
    "end": "128640"
  },
  {
    "text": "And it is flexible in supporting",
    "start": "128640",
    "end": "130710"
  },
  {
    "text": "the three main query languages today,",
    "start": "130710",
    "end": "132900"
  },
  {
    "text": "Gremlin, openCypher, and SPARQL.",
    "start": "132900",
    "end": "135527"
  },
  {
    "start": "136000",
    "end": "277000"
  },
  {
    "text": "Now, we already started.",
    "start": "138540",
    "end": "140702"
  },
  {
    "text": "Now we wanna know what's\nin our database today.",
    "start": "141750",
    "end": "144183"
  },
  {
    "text": "So, we probably started our graph journey",
    "start": "148230",
    "end": "151560"
  },
  {
    "text": "with some sort of data model,\nsome sort of graph model.",
    "start": "151560",
    "end": "155550"
  },
  {
    "text": "And naturally our\nintention is that the data",
    "start": "155550",
    "end": "158804"
  },
  {
    "text": "that lands in our database\nfollows that model.",
    "start": "158804",
    "end": "162543"
  },
  {
    "text": "But if you've been doing\ngraph for some time",
    "start": "163650",
    "end": "166680"
  },
  {
    "text": "and are well into your\nlifecycle, who knows?",
    "start": "166680",
    "end": "170459"
  },
  {
    "text": "You probably wanna take\nsome sort of inventory",
    "start": "170460",
    "end": "173040"
  },
  {
    "text": "to see what the data actually looks like.",
    "start": "173040",
    "end": "175920"
  },
  {
    "text": "So you may have development databases",
    "start": "175920",
    "end": "178290"
  },
  {
    "text": "that have been around for many sprints,",
    "start": "178290",
    "end": "182549"
  },
  {
    "text": "have had many contributors",
    "start": "182550",
    "end": "184380"
  },
  {
    "text": "and lots of exploratory activities.",
    "start": "184380",
    "end": "187023"
  },
  {
    "text": "So who knows what's actually\nin your DEV database today?",
    "start": "188040",
    "end": "192629"
  },
  {
    "text": "A test database is a bit more controlled",
    "start": "192630",
    "end": "194730"
  },
  {
    "text": "but probably has many versions of data.",
    "start": "194730",
    "end": "196680"
  },
  {
    "text": "You want to take inventory there too.",
    "start": "196680",
    "end": "198810"
  },
  {
    "text": "And even production, which\nis highly controlled,",
    "start": "198810",
    "end": "201722"
  },
  {
    "text": "may have some surprises.",
    "start": "202770",
    "end": "204993"
  },
  {
    "text": "So let's check it out.",
    "start": "208290",
    "end": "210150"
  },
  {
    "text": "What I'd like to demo is a tool",
    "start": "210150",
    "end": "212549"
  },
  {
    "text": "that discovers and then\nvisualizes the model",
    "start": "212550",
    "end": "215430"
  },
  {
    "text": "that's actually in your database.",
    "start": "215430",
    "end": "218250"
  },
  {
    "text": "And once you've seen that visualization,",
    "start": "218250",
    "end": "221070"
  },
  {
    "text": "you can compare it to\nwhat you started with",
    "start": "221070",
    "end": "223110"
  },
  {
    "text": "to see how close they are.",
    "start": "223110",
    "end": "224763"
  },
  {
    "text": "So what we wanna do is\nto take an inventory",
    "start": "225660",
    "end": "227790"
  },
  {
    "text": "of the types of things, the\ntypes of nodes and edges,",
    "start": "227790",
    "end": "231209"
  },
  {
    "text": "rather than the individual\ninstances that are in your graph.",
    "start": "231210",
    "end": "235713"
  },
  {
    "text": "And we want to be able to draw it",
    "start": "236670",
    "end": "238200"
  },
  {
    "text": "using a clear, uncluttered picture.",
    "start": "238200",
    "end": "240930"
  },
  {
    "text": "And it should scale, even\nif the database is huge,",
    "start": "240930",
    "end": "244230"
  },
  {
    "text": "we should be able to\nproduce this visualization",
    "start": "244230",
    "end": "246989"
  },
  {
    "text": "of the schema quickly and efficiently.",
    "start": "246990",
    "end": "249903"
  },
  {
    "text": "Now, working in our favor\nhere is the fact that",
    "start": "251460",
    "end": "255300"
  },
  {
    "text": "databases tend to have lots of instances,",
    "start": "255300",
    "end": "258060"
  },
  {
    "text": "but the number of types tends\nto be much smaller in number.",
    "start": "258060",
    "end": "261010"
  },
  {
    "text": "But nonetheless, if part of our discovery",
    "start": "262680",
    "end": "265889"
  },
  {
    "text": "means looking at\ninstances to find patterns",
    "start": "265890",
    "end": "268290"
  },
  {
    "text": "that would allow us to generalize types,",
    "start": "268290",
    "end": "270720"
  },
  {
    "text": "that also needs to scale.",
    "start": "270720",
    "end": "272040"
  },
  {
    "text": "So even if it's a huge database,",
    "start": "272040",
    "end": "273570"
  },
  {
    "text": "we need to be able to do that efficiently.",
    "start": "273570",
    "end": "275670"
  },
  {
    "start": "277000",
    "end": "776000"
  },
  {
    "text": "Okay, let's look at the tool in action.",
    "start": "277710",
    "end": "280710"
  },
  {
    "text": "In my AWS account,",
    "start": "280710",
    "end": "282240"
  },
  {
    "text": "I've created two resources that I'll need.",
    "start": "282240",
    "end": "285090"
  },
  {
    "text": "One is a Neptune database\ncluster, which I'm showing here.",
    "start": "285090",
    "end": "288273"
  },
  {
    "text": "And I also created a notebook.",
    "start": "290790",
    "end": "292923"
  },
  {
    "text": "So this is a SageMaker notebook instance.",
    "start": "295560",
    "end": "298470"
  },
  {
    "text": "And I'm actually gonna\nbe using the notebook",
    "start": "298470",
    "end": "300630"
  },
  {
    "text": "to drive the discovery and\nvisualization of the data",
    "start": "300630",
    "end": "303960"
  },
  {
    "text": "in the Neptune database cluster.",
    "start": "303960",
    "end": "305883"
  },
  {
    "text": "The discovery tool is available in GitHub.",
    "start": "307020",
    "end": "310080"
  },
  {
    "text": "So here's the code.",
    "start": "310080",
    "end": "311432"
  },
  {
    "text": "And what I need to do",
    "start": "312420",
    "end": "313770"
  },
  {
    "text": "is move this over to my notebook instance.",
    "start": "313770",
    "end": "317432"
  },
  {
    "text": "So I have it here.",
    "start": "319710",
    "end": "321000"
  },
  {
    "text": "You can see that it's\nin a folder in Jupiter.",
    "start": "321000",
    "end": "323463"
  },
  {
    "text": "And I have two notebooks,",
    "start": "327030",
    "end": "329130"
  },
  {
    "text": "one to demonstrate labeled property graph,",
    "start": "329130",
    "end": "331260"
  },
  {
    "text": "the other to demonstrate RDF.",
    "start": "331260",
    "end": "334080"
  },
  {
    "text": "I'll talk about labeled property graph.",
    "start": "334080",
    "end": "336629"
  },
  {
    "text": "So I'll open up this notebook,\nI already have it open,",
    "start": "336630",
    "end": "340143"
  },
  {
    "text": "and let's walk through it step by step.",
    "start": "342300",
    "end": "344250"
  },
  {
    "text": "So the first step will be to\ninstall the iPlantUML plugin.",
    "start": "345540",
    "end": "349410"
  },
  {
    "text": "As I said, I'm gonna use\nPlantUML to render the diagram.",
    "start": "349410",
    "end": "353133"
  },
  {
    "text": "And then I'll import the iPlantUML library",
    "start": "356580",
    "end": "359789"
  },
  {
    "text": "so that I can call it later\nto render the diagram.",
    "start": "359790",
    "end": "363273"
  },
  {
    "text": "And then I'll do some setup\nby configuring a connection",
    "start": "364320",
    "end": "367980"
  },
  {
    "text": "to my Neptune cluster, its\nhost, port and other details.",
    "start": "367980",
    "end": "371913"
  },
  {
    "text": "And it will be against that\ndatabase that I do my discovery.",
    "start": "373290",
    "end": "376503"
  },
  {
    "text": "Now I'll seed some test data.",
    "start": "380040",
    "end": "382500"
  },
  {
    "text": "I'm actually starting with\nan empty database cluster.",
    "start": "382500",
    "end": "385110"
  },
  {
    "text": "In your case, there may be\nexisting data in your cluster.",
    "start": "385110",
    "end": "388473"
  },
  {
    "text": "So I'll load three different datasets,",
    "start": "389820",
    "end": "393330"
  },
  {
    "text": "airports, fraud graph,\nand knowledge graph.",
    "start": "393330",
    "end": "398330"
  },
  {
    "text": "And I'm gonna use the seed magic,",
    "start": "400500",
    "end": "402783"
  },
  {
    "text": "which ingests this data\ninto my Neptune cluster",
    "start": "404850",
    "end": "407520"
  },
  {
    "text": "from a set of test files.",
    "start": "407520",
    "end": "409923"
  },
  {
    "text": "So this is useful data.",
    "start": "411090",
    "end": "412949"
  },
  {
    "text": "What I want to do is\nhave the discovery tool",
    "start": "412950",
    "end": "416430"
  },
  {
    "text": "show me what the schema of\nthese datasets looks like.",
    "start": "416430",
    "end": "419133"
  },
  {
    "text": "And I'm gonna poke around a bit",
    "start": "424530",
    "end": "426300"
  },
  {
    "text": "and explore the data that\nI have, just for fun.",
    "start": "426300",
    "end": "429900"
  },
  {
    "text": "So in the air routes\ndataset, what I wanna look at",
    "start": "429900",
    "end": "433556"
  },
  {
    "text": "is the connectivity from\nthe Atlanta airport.",
    "start": "433556",
    "end": "438120"
  },
  {
    "text": "So I'm gonna run an openCypher query.",
    "start": "438120",
    "end": "441000"
  },
  {
    "text": "And I'll start with the Atlanta\nairport and look at routes",
    "start": "441000",
    "end": "446000"
  },
  {
    "text": "that that airport has to other airports.",
    "start": "447570",
    "end": "451383"
  },
  {
    "text": "And I can see from the results,",
    "start": "453360",
    "end": "455879"
  },
  {
    "text": "first of all, what airports look like.",
    "start": "455880",
    "end": "458529"
  },
  {
    "text": "So, airports like Atlanta\nhave a description,",
    "start": "458529",
    "end": "461460"
  },
  {
    "text": "a longitude, number of runways, and so on.",
    "start": "461460",
    "end": "466080"
  },
  {
    "text": "So we get a sense of some of\nthe properties of an airport.",
    "start": "466080",
    "end": "468979"
  },
  {
    "text": "I can see that the\nroute, which is an edge,",
    "start": "471480",
    "end": "474393"
  },
  {
    "text": "actually has a property\ncalled \"dist\" or distance.",
    "start": "475530",
    "end": "478560"
  },
  {
    "text": "So it's the the distance of the route.",
    "start": "478560",
    "end": "481200"
  },
  {
    "text": "And of course,",
    "start": "481200",
    "end": "482043"
  },
  {
    "text": "since this is a relationship\nbetween two airports,",
    "start": "483000",
    "end": "486240"
  },
  {
    "text": "on the other end of this\nroute we have another airport,",
    "start": "486240",
    "end": "488639"
  },
  {
    "text": "which is Austin, and\nwe can see that Austin",
    "start": "488640",
    "end": "491940"
  },
  {
    "text": "has a similar set of\nattributes to Atlanta.",
    "start": "491940",
    "end": "495213"
  },
  {
    "text": "Now, that query was just exploration.",
    "start": "497700",
    "end": "499530"
  },
  {
    "text": "We haven't started the discovery yet.",
    "start": "499530",
    "end": "501723"
  },
  {
    "text": "We will start that now",
    "start": "505050",
    "end": "506940"
  },
  {
    "text": "by getting a summary of the\ndata in the Neptune database.",
    "start": "506940",
    "end": "510810"
  },
  {
    "text": "So we run the summary magic",
    "start": "510810",
    "end": "512909"
  },
  {
    "text": "and this calls the Neptune summary API,",
    "start": "512910",
    "end": "515009"
  },
  {
    "text": "which returns statistics\nthat it's collected.",
    "start": "515010",
    "end": "517383"
  },
  {
    "text": "And here's a dump of what it consists of.",
    "start": "518880",
    "end": "521520"
  },
  {
    "text": "So it tells us about\nparticular node labels",
    "start": "521520",
    "end": "524310"
  },
  {
    "text": "that exist in the graph.",
    "start": "524310",
    "end": "525633"
  },
  {
    "text": "Also edge labels, as well as\nsome additional information",
    "start": "528750",
    "end": "533750"
  },
  {
    "text": "like the node properties that are found,",
    "start": "534000",
    "end": "537003"
  },
  {
    "text": "edge properties, as\nwell as node structures,",
    "start": "538590",
    "end": "541620"
  },
  {
    "text": "combinations of properties\nthat we might see on nodes,",
    "start": "541620",
    "end": "544440"
  },
  {
    "text": "and so on.",
    "start": "544440",
    "end": "545850"
  },
  {
    "text": "This is all very useful information.",
    "start": "545850",
    "end": "547829"
  },
  {
    "text": "We can get it very quickly\nbecause it comes directly",
    "start": "547830",
    "end": "549960"
  },
  {
    "text": "from the statistics on the database.",
    "start": "549960",
    "end": "552363"
  },
  {
    "text": "Next, we call our discovery\ntool to take that summary",
    "start": "556080",
    "end": "560380"
  },
  {
    "text": "and do some further\nqueries of the database.",
    "start": "562110",
    "end": "565440"
  },
  {
    "text": "Implicitly it uses openCypher queries",
    "start": "565440",
    "end": "568140"
  },
  {
    "text": "to introspect the database.",
    "start": "568140",
    "end": "569883"
  },
  {
    "text": "The result is held in a\ndictionary called Observation,",
    "start": "571710",
    "end": "575433"
  },
  {
    "text": "which basically provides a\nset of node types, or classes,",
    "start": "577230",
    "end": "582209"
  },
  {
    "text": "node properties, relationships,",
    "start": "582210",
    "end": "585390"
  },
  {
    "text": "attributes of those relationships,",
    "start": "585390",
    "end": "587520"
  },
  {
    "text": "provides it as a dictionary",
    "start": "587520",
    "end": "589110"
  },
  {
    "text": "that I could actually\nuse in its own right,",
    "start": "589110",
    "end": "591273"
  },
  {
    "text": "but what I intend to do with\nit is actually to draw it.",
    "start": "594690",
    "end": "597603"
  },
  {
    "text": "So what I'll do is I'll\nactually call the discovery tool",
    "start": "599640",
    "end": "603780"
  },
  {
    "text": "to render this data structure\nas PlantUML markup text.",
    "start": "603780",
    "end": "608780"
  },
  {
    "text": "And we can see that the\nresult, which I have here,",
    "start": "610770",
    "end": "615483"
  },
  {
    "text": "is a PlantUML representation of my data.",
    "start": "618540",
    "end": "622203"
  },
  {
    "text": "Since it's a UML class diagram,",
    "start": "623130",
    "end": "625230"
  },
  {
    "text": "it consists of a set of classes,",
    "start": "625230",
    "end": "627393"
  },
  {
    "text": "and each class can have\nattributes, shown as the bullets.",
    "start": "629130",
    "end": "632283"
  },
  {
    "text": "The name of the class is the node label.",
    "start": "633810",
    "end": "636303"
  },
  {
    "text": "So you can see that\nthere's several classes",
    "start": "639930",
    "end": "641640"
  },
  {
    "text": "representing nodes.",
    "start": "641640",
    "end": "642933"
  },
  {
    "text": "We also have relationships.",
    "start": "643860",
    "end": "645633"
  },
  {
    "text": "Here are the relationships.",
    "start": "646830",
    "end": "649320"
  },
  {
    "text": "And you can see that these will represent",
    "start": "649320",
    "end": "653080"
  },
  {
    "text": "associations in the UML class diagram.",
    "start": "653970",
    "end": "656733"
  },
  {
    "text": "They have names like DateOfBirth.",
    "start": "657660",
    "end": "660240"
  },
  {
    "text": "They connect one class to another.",
    "start": "660240",
    "end": "662190"
  },
  {
    "text": "So in this case, DateOfBirth\nconnects an account",
    "start": "662190",
    "end": "664230"
  },
  {
    "text": "to a feature of an account.",
    "start": "664230",
    "end": "665613"
  },
  {
    "text": "And I can now paste this\ntext into any PlantUML tool,",
    "start": "666900",
    "end": "671900"
  },
  {
    "text": "of which there are many.",
    "start": "674010",
    "end": "675210"
  },
  {
    "text": "But because PlantUML has\na plugin to notebooks,",
    "start": "676560",
    "end": "680070"
  },
  {
    "text": "I'll just draw it\ndirectly in the notebook.",
    "start": "680070",
    "end": "682413"
  },
  {
    "text": "So next, I'll render the PlantUML\nusing the PlantUML magic.",
    "start": "684660",
    "end": "689660"
  },
  {
    "text": "And it's shown here.",
    "start": "691380",
    "end": "692673"
  },
  {
    "text": "It's a sprawling diagram\nwith many boxes and arrows.",
    "start": "693600",
    "end": "697319"
  },
  {
    "text": "The boxes are classes,",
    "start": "697320",
    "end": "700560"
  },
  {
    "text": "and as you can see, they represent nodes.",
    "start": "700560",
    "end": "703113"
  },
  {
    "text": "There are many of them.",
    "start": "704490",
    "end": "705660"
  },
  {
    "text": "The arrows represent edges.",
    "start": "705660",
    "end": "708332"
  },
  {
    "text": "And because we have so many\ndifferent types of data",
    "start": "709830",
    "end": "713880"
  },
  {
    "text": "in the database, there's\nquite a lot to look at here.",
    "start": "713880",
    "end": "717183"
  },
  {
    "text": "But that's fine, we wanted\nto discover everything,",
    "start": "720150",
    "end": "723420"
  },
  {
    "text": "but we might wanna narrow it down.",
    "start": "723420",
    "end": "725313"
  },
  {
    "text": "So, to do so, we'll\nregenerate the PlantUML",
    "start": "726570",
    "end": "730440"
  },
  {
    "text": "with a class filter.",
    "start": "730440",
    "end": "731703"
  },
  {
    "text": "We want to see only four classes:",
    "start": "733170",
    "end": "734790"
  },
  {
    "text": "continent, country, airport, version.",
    "start": "734790",
    "end": "737162"
  },
  {
    "text": "We end up with the\nfollowing PlantUML markup",
    "start": "739590",
    "end": "743410"
  },
  {
    "text": "containing only those four\nclasses and the relationships.",
    "start": "744870",
    "end": "748320"
  },
  {
    "text": "And when we render it, we'll\nsee a simplified picture.",
    "start": "748320",
    "end": "752493"
  },
  {
    "text": "We can see the picture\nhere in the notebook.",
    "start": "754410",
    "end": "756180"
  },
  {
    "text": "We can also save it to a file.",
    "start": "756180",
    "end": "758162"
  },
  {
    "text": "In the command, we're\nsaving it to lpg_airport.",
    "start": "759090",
    "end": "762423"
  },
  {
    "text": "If we look in the folder view of Jupiter,",
    "start": "763290",
    "end": "765750"
  },
  {
    "text": "we can see that we have\nan lpg_airport.svg file.",
    "start": "765750",
    "end": "770520"
  },
  {
    "text": "This is an image that\nwe can share with others",
    "start": "770520",
    "end": "772830"
  },
  {
    "text": "so that they can view it offline.",
    "start": "772830",
    "end": "774543"
  },
  {
    "start": "776000",
    "end": "827000"
  },
  {
    "text": "All right, let's summarize.",
    "start": "776790",
    "end": "778352"
  },
  {
    "text": "So I demonstrated a tool that\ntakes inventory of the model",
    "start": "779910",
    "end": "783660"
  },
  {
    "text": "that's already in your Neptune database.",
    "start": "783660",
    "end": "786540"
  },
  {
    "text": "And why would you use such a tool?",
    "start": "786540",
    "end": "788670"
  },
  {
    "text": "It's because that the\ninventory that it takes",
    "start": "788670",
    "end": "791550"
  },
  {
    "text": "confirms that the data in your database",
    "start": "791550",
    "end": "794700"
  },
  {
    "text": "aligns with your intended model.",
    "start": "794700",
    "end": "797040"
  },
  {
    "text": "And it also reveals surprises.",
    "start": "797040",
    "end": "798990"
  },
  {
    "text": "There may be types of data",
    "start": "798990",
    "end": "800970"
  },
  {
    "text": "that you didn't expect\nto be in your database.",
    "start": "800970",
    "end": "803269"
  },
  {
    "text": "And we showed that we're\nable to discover this data",
    "start": "804780",
    "end": "808350"
  },
  {
    "text": "using a combination of\nthe Neptune summary API,",
    "start": "808350",
    "end": "811800"
  },
  {
    "text": "as well as some additional\nqueries of the data,",
    "start": "811800",
    "end": "815040"
  },
  {
    "text": "and that we drew it as\na UML class diagram,",
    "start": "815040",
    "end": "818639"
  },
  {
    "text": "using PlantUML diagram-as-code tool.",
    "start": "818640",
    "end": "822240"
  },
  {
    "text": "And that just proves to\nbe a really effective",
    "start": "822240",
    "end": "824160"
  },
  {
    "text": "visualization of graph data.",
    "start": "824160",
    "end": "825933"
  },
  {
    "start": "827000",
    "end": "917000"
  },
  {
    "text": "Some additional resources.",
    "start": "827700",
    "end": "829413"
  },
  {
    "text": "This tool is available on\nGitHub at the first link.",
    "start": "830640",
    "end": "834630"
  },
  {
    "text": "And I wanted to point out\na couple of other tools",
    "start": "834630",
    "end": "837150"
  },
  {
    "text": "that also do schema discovery.",
    "start": "837150",
    "end": "840450"
  },
  {
    "text": "The Neptune GraphQL\nutility at the second link",
    "start": "840450",
    "end": "844440"
  },
  {
    "text": "includes schema discovery.",
    "start": "844440",
    "end": "847050"
  },
  {
    "text": "And the Neptune Graph\nExplorer, the third link,",
    "start": "847050",
    "end": "850170"
  },
  {
    "text": "is primarily a visualization of instances,",
    "start": "850170",
    "end": "853470"
  },
  {
    "text": "but it also shows the\nstructure of the data",
    "start": "853470",
    "end": "856290"
  },
  {
    "text": "in your database.",
    "start": "856290",
    "end": "857373"
  },
  {
    "text": "Some related artifacts.",
    "start": "860910",
    "end": "863310"
  },
  {
    "text": "I have a blog post on how\nto produce an easy model",
    "start": "863310",
    "end": "867240"
  },
  {
    "text": "that also uses PlantUML",
    "start": "867240",
    "end": "869880"
  },
  {
    "text": "as a way of visualizing a graph model.",
    "start": "869880",
    "end": "872583"
  },
  {
    "text": "And the notebook that\naccompanies that post",
    "start": "873810",
    "end": "876510"
  },
  {
    "text": "is the second link.",
    "start": "876510",
    "end": "877713"
  },
  {
    "text": "You can get a Neptune database\ncluster up and running",
    "start": "879240",
    "end": "882720"
  },
  {
    "text": "in your AWS account within\nminutes at the first link shown.",
    "start": "882720",
    "end": "887490"
  },
  {
    "text": "And also check out the Neptune Demos Hub,",
    "start": "887490",
    "end": "890880"
  },
  {
    "text": "which includes demonstrations",
    "start": "890880",
    "end": "893220"
  },
  {
    "text": "of various graph use\ncases involving Neptune.",
    "start": "893220",
    "end": "895952"
  },
  {
    "text": "We'd love to discuss further with you.",
    "start": "898170",
    "end": "899820"
  },
  {
    "text": "Please contact my team.",
    "start": "899820",
    "end": "901080"
  },
  {
    "text": "Our email address is\nwwso-neptune-ssa@amazon.com.",
    "start": "901080",
    "end": "906080"
  },
  {
    "text": "Appreciate your time\ntoday, thank you very much!",
    "start": "908550",
    "end": "910983"
  }
]