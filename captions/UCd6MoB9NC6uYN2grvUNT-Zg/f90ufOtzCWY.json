[
  {
    "start": "0",
    "end": "215000"
  },
  {
    "text": "hello everyone and thanks for joining us for the new episode of Bhutan service",
    "start": "7639",
    "end": "13139"
  },
  {
    "text": "here we have James honest yeah and today we're going to be talking about a tweet",
    "start": "13139",
    "end": "19770"
  },
  {
    "text": "tweet like a pro so James do you want to give us a more details about what we gonna do today yeah so today we're gonna",
    "start": "19770",
    "end": "26820"
  },
  {
    "text": "do a number of things but the number one thing we're going to do is we're going to build a service application in Java",
    "start": "26820",
    "end": "33300"
  },
  {
    "text": "and it's going to actually use another service application that exists in the",
    "start": "33300",
    "end": "39149"
  },
  {
    "text": "service application repository the AWS service application repository so I",
    "start": "39149",
    "end": "44789"
  },
  {
    "text": "wanted to make a fun project so we're going to do some analysis of tweets and",
    "start": "44789",
    "end": "50399"
  },
  {
    "text": "we're going to use a service that that I haven't used yet so this will be",
    "start": "50399",
    "end": "55770"
  },
  {
    "text": "exciting it'll either why could possibly go wrong right new we're going to use",
    "start": "55770",
    "end": "63000"
  },
  {
    "text": "Amazon comprehend which gives an API that allows you to do sentiment analysis on tweets so whether or sorry any text",
    "start": "63000",
    "end": "71100"
  },
  {
    "text": "on whether it's positive or negative or neutral and and so we're going to build a service application that does",
    "start": "71100",
    "end": "77970"
  },
  {
    "text": "sentiment analysis of tweets that's perfect and you want a quick introduce",
    "start": "77970",
    "end": "83820"
  },
  {
    "text": "yourself because I forgot totally my bad yeah no problem my name is James hood",
    "start": "83820",
    "end": "89159"
  },
  {
    "text": "I'm a senior software developer here at Amazon and I actually been with a",
    "start": "89159",
    "end": "94590"
  },
  {
    "text": "company coming up on nine years in August's I've been here Wow and worked in both retail side and AWS and last",
    "start": "94590",
    "end": "102450"
  },
  {
    "text": "summer I came back to AWS to be the tech lead for the AWS server --less application repository and definitely",
    "start": "102450",
    "end": "110610"
  },
  {
    "text": "really excited about I was excited about server lists before I came to AWS and and continue to get",
    "start": "110610",
    "end": "117119"
  },
  {
    "text": "more and more excited as we progress the technology and just see what's kick what it's capable of video awesome okay so it",
    "start": "117119",
    "end": "126299"
  },
  {
    "text": "seems like we're going to use a bunch of services today and we're going to Butte a several application right yes",
    "start": "126299",
    "end": "133530"
  },
  {
    "text": "oh okay and we which language are we going to use is that some Java today yep",
    "start": "133530",
    "end": "140250"
  },
  {
    "text": "we're going to use Java today the nice thing about serverless applications is",
    "start": "140250",
    "end": "145650"
  },
  {
    "text": "that you can really use any language that's supported by AWS lambda so Python",
    "start": "145650",
    "end": "150989"
  },
  {
    "text": "and go you know dotnet Java as well today we're going to use Java I think",
    "start": "150989",
    "end": "157650"
  },
  {
    "text": "there are a lot of Java developers out there who might be curious how you would structure a Java server list application",
    "start": "157650",
    "end": "164580"
  },
  {
    "text": "and and do you use maven do you like how do you do it so we're hoping to answer a",
    "start": "164580",
    "end": "169890"
  },
  {
    "text": "lot of those questions today that's perfect I actually get that question quite a lot I people usually get",
    "start": "169890",
    "end": "175200"
  },
  {
    "text": "confused about should I use a single function for everything today's separate a multiple functions how do i structure",
    "start": "175200",
    "end": "181709"
  },
  {
    "text": "my codes should i use brain boots or other frameworks that's perfect okay",
    "start": "181709",
    "end": "187410"
  },
  {
    "text": "well let's definitely talk about all that answers many questions as I can I've definitely developed a number of",
    "start": "187410",
    "end": "194190"
  },
  {
    "text": "service applications in Java as well as other other languages so hopefully I can help compare and contrast as well",
    "start": "194190",
    "end": "200760"
  },
  {
    "text": "sure okay perfect so I guess that's what we need them doesn't have any questions or anyone new to all of this hopefully",
    "start": "200760",
    "end": "207750"
  },
  {
    "text": "now and then we are we're going to be on the chats as well helping out so yeah let's crack on let's get going okay",
    "start": "207750",
    "end": "214890"
  },
  {
    "text": "great so I wanted to start by talking about what the AWS server lists application",
    "start": "214890",
    "end": "221940"
  },
  {
    "start": "215000",
    "end": "435000"
  },
  {
    "text": "and repository is but first let's even take a step back and talk about what is",
    "start": "221940",
    "end": "227310"
  },
  {
    "text": "a server list application right so just to make sure everyone's on the same page",
    "start": "227310",
    "end": "232799"
  },
  {
    "text": "and level said when we talk about server lists we're talking about a family of technologies that allows you to build a",
    "start": "232799",
    "end": "239850"
  },
  {
    "text": "full application without needing to manage servers of course there are",
    "start": "239850",
    "end": "245340"
  },
  {
    "text": "servers in the background but the nice thing is AWS takes care of all of those details including things like making",
    "start": "245340",
    "end": "250920"
  },
  {
    "text": "sure hosts are passed and up-to-date making sure that you have enough hosts so that you can scale if your traffic",
    "start": "250920",
    "end": "257820"
  },
  {
    "text": "spikes so a lot of these operational details that have been on the engineers to to take care of and configure in the",
    "start": "257820",
    "end": "265349"
  },
  {
    "text": "past serverless allows you to the concept of serverless is that that host management is",
    "start": "265349",
    "end": "271229"
  },
  {
    "text": "completely abstract away from you as much as possible and and you're able to",
    "start": "271229",
    "end": "276330"
  },
  {
    "text": "just focus on code but it's more than just AWS lambda it's any service that",
    "start": "276330",
    "end": "282419"
  },
  {
    "text": "AWS provides that that has this feature so even services that have been around a",
    "start": "282419",
    "end": "288870"
  },
  {
    "text": "really long time like dynamodb s3 I mean you don't spin up hosts and manage hosts",
    "start": "288870",
    "end": "295289"
  },
  {
    "text": "to put an object and object into s3 so that's considered a service component",
    "start": "295289",
    "end": "300680"
  },
  {
    "text": "that can be used in a service application so so a service application",
    "start": "300680",
    "end": "306630"
  },
  {
    "text": "is really a family of these resources plus you are a lambda function code that",
    "start": "306630",
    "end": "312389"
  },
  {
    "text": "you put together into a full application to solve some problem right if people",
    "start": "312389",
    "end": "319410"
  },
  {
    "text": "are interested in knowing more about those building blocks and James just mentioned if you go to the page",
    "start": "319410",
    "end": "324930"
  },
  {
    "text": "aws.amazon.com slash service you will find a bunch of resources including",
    "start": "324930",
    "end": "330630"
  },
  {
    "text": "customer case studies and some give help codes they can have a look at those right and so the AWS server lists",
    "start": "330630",
    "end": "338789"
  },
  {
    "text": "application repository is a is a relatively new sorry there's a",
    "start": "338789",
    "end": "344190"
  },
  {
    "text": "relatively new offering it was announced in preview at reinvent last year in",
    "start": "344190",
    "end": "349770"
  },
  {
    "text": "November and then it became generally available so use it last February and",
    "start": "349770",
    "end": "356460"
  },
  {
    "text": "with it the AWS service application repository allows publishers can publish",
    "start": "356460",
    "end": "363750"
  },
  {
    "text": "serverless applications to it and then consumers people anyone with an AWS",
    "start": "363750",
    "end": "369270"
  },
  {
    "text": "account can quickly discover deploy them to their account and use them to solve",
    "start": "369270",
    "end": "376050"
  },
  {
    "text": "their problems or be a piece of a larger application that's perfect so if I if I",
    "start": "376050",
    "end": "381810"
  },
  {
    "text": "think that right I would be able to publish some applications that in my company I could use my co-workers or",
    "start": "381810",
    "end": "388440"
  },
  {
    "text": "friends and it could somewhat compose those applications and also learn I",
    "start": "388440",
    "end": "393570"
  },
  {
    "text": "could actually install an application lookup for the source code when someone published that and even learn how people",
    "start": "393570",
    "end": "400320"
  },
  {
    "text": "are gonna are called where is one actually one of the most common questions we get these days right exactly it's a wonderful tool",
    "start": "400320",
    "end": "407820"
  },
  {
    "text": "not just for using in production but also for learning so we do offer private",
    "start": "407820",
    "end": "415200"
  },
  {
    "text": "publishing of applications you can publish an application that's available either just to your AWS account or you",
    "start": "415200",
    "end": "422130"
  },
  {
    "text": "can set policies on it to make it available to other AWS accounts specifically and that's private sharing",
    "start": "422130",
    "end": "428790"
  },
  {
    "text": "but then there's also a mode where you can make an application public and that means that it's available on a public",
    "start": "428790",
    "end": "435420"
  },
  {
    "start": "435000",
    "end": "510000"
  },
  {
    "text": "search experience which is actually right here I'll make that a little bigger so it's available on a public",
    "start": "435420",
    "end": "441930"
  },
  {
    "text": "search experience and it can be deployed by anyone with an AWS account so and the",
    "start": "441930",
    "end": "448290"
  },
  {
    "text": "nice thing with the public applications is we require those applications to have a open source license associated with",
    "start": "448290",
    "end": "456540"
  },
  {
    "text": "them so the source code is all online you can go to github or bitbucket and",
    "start": "456540",
    "end": "462060"
  },
  {
    "text": "wherever their source code is stored and see and understand the application and what it does so again like you said",
    "start": "462060",
    "end": "468660"
  },
  {
    "text": "great place to understand applications that's interesting if one thing I actually haven't noticed myself and now",
    "start": "468660",
    "end": "475380"
  },
  {
    "text": "I'm noticing in the big screen each of those applications have a number of deployments and you can see how many",
    "start": "475380",
    "end": "481380"
  },
  {
    "text": "times someone actually tried that out and also the tags absolutely and in this",
    "start": "481380",
    "end": "489150"
  },
  {
    "text": "number of deployments actually only on the public site it actually just reflects what's been deployed in a",
    "start": "489150",
    "end": "496470"
  },
  {
    "text": "single region in u.s. East one right now so there are also other deployments and",
    "start": "496470",
    "end": "501690"
  },
  {
    "text": "other regions as well but yeah you can see deployment counts and you have a search experience so since we're talking",
    "start": "501690",
    "end": "508230"
  },
  {
    "text": "about Twitter today I'm just going to search on Twitter and actually this app is the one that we're going to use today",
    "start": "508230",
    "end": "514560"
  },
  {
    "start": "510000",
    "end": "655000"
  },
  {
    "text": "so so you can see when you look at an application you get a link to wherever",
    "start": "514560",
    "end": "520530"
  },
  {
    "text": "the source code is you can see if it's github you can see how many stars are on it you have an option to deploy it to",
    "start": "520530",
    "end": "527550"
  },
  {
    "text": "your account and we'll talk about that later but you can see the readme for",
    "start": "527550",
    "end": "532800"
  },
  {
    "text": "this and we'll talk through this particular app in a little more detail you can also see license",
    "start": "532800",
    "end": "538740"
  },
  {
    "text": "information this one's MIT licensed and available from AWS AWS labs that's pretty cool so",
    "start": "538740",
    "end": "549450"
  },
  {
    "text": "I can even see the source code before they deploy that application in my account as well yeah absolutely and when",
    "start": "549450",
    "end": "556020"
  },
  {
    "text": "you do click on deploy you're taken to the AWS console and you do you are given",
    "start": "556020",
    "end": "563310"
  },
  {
    "text": "a link to the source code URL in this case it's actually the github tag the",
    "start": "563310",
    "end": "569040"
  },
  {
    "text": "specific github tag of the exact source",
    "start": "569040",
    "end": "575100"
  },
  {
    "text": "code of the version that you're deploying so you can look into it and see exactly what you're going to be",
    "start": "575100",
    "end": "581310"
  },
  {
    "text": "deploying to your system you can also see permissions so it'll tell you what",
    "start": "581310",
    "end": "587550"
  },
  {
    "text": "permissions this application will have so it'll be able to invoke the lambda it",
    "start": "587550",
    "end": "593279"
  },
  {
    "text": "will also be able to do some operations on dynamodb table so cred is just the",
    "start": "593279",
    "end": "600480"
  },
  {
    "text": "create read update delete and it also has a read policy there's a kms",
    "start": "600480",
    "end": "606060"
  },
  {
    "text": "decryption policy so it'll be able to decrypt and we'll talk about why it's doing that you can also see with",
    "start": "606060",
    "end": "613050"
  },
  {
    "text": "serverless applications we use a tool called Sam the serverless application model and there's a Sam",
    "start": "613050",
    "end": "619350"
  },
  {
    "text": "template associated with it and you can actually view the Sam template right here and if you want a deeper",
    "start": "619350",
    "end": "625529"
  },
  {
    "text": "understanding of exactly how this app is laid out and what it does that's really",
    "start": "625529",
    "end": "630690"
  },
  {
    "text": "cool ok and those I just noticed something I there's actually a parameters in there",
    "start": "630690",
    "end": "636779"
  },
  {
    "text": "which I presume severs application repo we we use by the time we make those",
    "start": "636779",
    "end": "641820"
  },
  {
    "text": "deployments right yeah so deploying an application what what does that mean so that actually means that we're creating",
    "start": "641820",
    "end": "648690"
  },
  {
    "text": "a cloud formation change set for this application into your account on your",
    "start": "648690",
    "end": "654270"
  },
  {
    "text": "behalf so if I scroll down again you'll see the readme right there so that you",
    "start": "654270",
    "end": "660300"
  },
  {
    "start": "655000",
    "end": "730000"
  },
  {
    "text": "can reference it but you have to give your application a name and this",
    "start": "660300",
    "end": "665640"
  },
  {
    "text": "corresponds to the name of the stack that created by CloudFormation so you give it a name and then there are various",
    "start": "665640",
    "end": "673110"
  },
  {
    "text": "parameters that are part of the app and this is app specific so these are these",
    "start": "673110",
    "end": "678180"
  },
  {
    "text": "are values that are in this template this description is in the template so",
    "start": "678180",
    "end": "683279"
  },
  {
    "text": "it's just being rendered here and this particular app actually has a very large",
    "start": "683279",
    "end": "688589"
  },
  {
    "text": "number of parameters there's there are a lot of things that you need to fill in for interacting with the Twitter API and",
    "start": "688589",
    "end": "695330"
  },
  {
    "text": "again we'll go into a little bit more detail about that when we get to it",
    "start": "695330",
    "end": "700709"
  },
  {
    "text": "yeah any more questions on the repo yeah I think I'm good to go I was just",
    "start": "700709",
    "end": "707220"
  },
  {
    "text": "looking at their chance there was one question about the polar if we can reduce that to 30 seconds but I believe",
    "start": "707220",
    "end": "715050"
  },
  {
    "text": "that's the madhava you're using cloud watch events from what I can see it and that's a permanent basis yes if you look",
    "start": "715050",
    "end": "722490"
  },
  {
    "text": "at cloud watch event or if you look at this diagram this actually explains the app I'm gonna go back to this page so we",
    "start": "722490",
    "end": "729330"
  },
  {
    "text": "can just see it here so so this is a picture of the Twitter event source app",
    "start": "729330",
    "end": "736170"
  },
  {
    "start": "730000",
    "end": "970000"
  },
  {
    "text": "so what is this app this app allows you to process tweets from a Twitter search",
    "start": "736170",
    "end": "743640"
  },
  {
    "text": "so you can do a search against Twitter and then you actually put the search",
    "start": "743640",
    "end": "749760"
  },
  {
    "text": "terms in as a parameter to to this app and what will happen is it will then",
    "start": "749760",
    "end": "756870"
  },
  {
    "text": "start invoking your whatever lambda function you tell it with whatever",
    "start": "756870",
    "end": "762990"
  },
  {
    "text": "tweets are returned from that search and so it Twitter the Twitter Search API",
    "start": "762990",
    "end": "768900"
  },
  {
    "text": "their standard search API is a pulled API it's just you call it to perform a",
    "start": "768900",
    "end": "774570"
  },
  {
    "text": "search so this uses cloud watch events it creates a cloud watch events role on",
    "start": "774570",
    "end": "779579"
  },
  {
    "text": "a schedule to trigger the lambda function now the question about can we go more frequent than one minute and",
    "start": "779579",
    "end": "786800"
  },
  {
    "text": "actually the answer is no right now because cloud watch events they support",
    "start": "786800",
    "end": "792870"
  },
  {
    "text": "minutes minutes is the smallest granularity they support and I believe it has to be an integer value ever",
    "start": "792870",
    "end": "799820"
  },
  {
    "text": "he tried point five seven point five minutes but but yeah so one minute is",
    "start": "799820",
    "end": "806600"
  },
  {
    "text": "was the most frequent I was able to get it yep okay I guess I believe Jack",
    "start": "806600",
    "end": "813020"
  },
  {
    "text": "should take that from the person who asks on the chats take that on board from as a feature request of to the",
    "start": "813020",
    "end": "819590"
  },
  {
    "text": "product team yeah absolutely okay all right so yeah so this so what I",
    "start": "819590",
    "end": "826940"
  },
  {
    "text": "want to do today is this is this is an idea I'm actually really excited about",
    "start": "826940",
    "end": "832730"
  },
  {
    "text": "and something I've been kind of evangelizing just on my own team internally and then we've done a couple",
    "start": "832730",
    "end": "839990"
  },
  {
    "text": "other twitch livestreams because when you hear serverless app you may think well does that have to",
    "start": "839990",
    "end": "846620"
  },
  {
    "text": "be a complete application that that does one thing and the neat thing about apps",
    "start": "846620",
    "end": "853370"
  },
  {
    "text": "like this are they can be composed into a larger application so this application",
    "start": "853370",
    "end": "858800"
  },
  {
    "text": "takes care of one thing it it handles the details of interacting with the",
    "start": "858800",
    "end": "864080"
  },
  {
    "text": "twitter search api but it delegates out to whatever lambda function you give it",
    "start": "864080",
    "end": "869570"
  },
  {
    "text": "to actually process the tweets that are returned so it doesn't know what you're doing with the tweets this app doesn't",
    "start": "869570",
    "end": "875510"
  },
  {
    "text": "care but now it's just that much less code for you to build right you don't",
    "start": "875510",
    "end": "880670"
  },
  {
    "text": "have to learn the twitter search api you don't have to code against it you can",
    "start": "880670",
    "end": "886130"
  },
  {
    "text": "just deploy this application and then you write a lambda function that just takes an array of tweets and that is",
    "start": "886130",
    "end": "892070"
  },
  {
    "text": "really powerful absolutely and it's it is great to see that moving into that",
    "start": "892070",
    "end": "897350"
  },
  {
    "text": "direction because we can move closer to composable applications as we reach an",
    "start": "897350",
    "end": "902450"
  },
  {
    "text": "about the field of x as well yeah that's one of the things I'm personally most",
    "start": "902450",
    "end": "908330"
  },
  {
    "text": "excited about with serverless right now is this potential especially with the serverless application repository of now",
    "start": "908330",
    "end": "915100"
  },
  {
    "text": "publishing a number of building blocks these generic building blocks that you can pull into your application I think",
    "start": "915100",
    "end": "921410"
  },
  {
    "text": "serverless the technology really greatly simplified the operational burden like",
    "start": "921410",
    "end": "928610"
  },
  {
    "text": "it reduces the operational burden for teams and I believe that serverless apps further reduces the development burden",
    "start": "928610",
    "end": "935500"
  },
  {
    "text": "on teams so very excited about this council the same Calgary great all right",
    "start": "935500",
    "end": "943370"
  },
  {
    "text": "sure we get some coding yeah absolutely I think people already are signing to ask",
    "start": "943370",
    "end": "948380"
  },
  {
    "text": "show me the ID show me your eternity I want to see some customizations and that actually a funny enough that's actually",
    "start": "948380",
    "end": "954830"
  },
  {
    "text": "one of the questions we got the most it was seems to start dispute on service what is it that you're doing your",
    "start": "954830",
    "end": "961370"
  },
  {
    "text": "terminal what is it what is is your extension for your IDE or something like this so you can definitely expect some",
    "start": "961370",
    "end": "968420"
  },
  {
    "text": "of those questions as well yeah well I think you may be surprised that my ID is",
    "start": "968420",
    "end": "973610"
  },
  {
    "start": "970000",
    "end": "1035000"
  },
  {
    "text": "is pretty standard it's so I'm using IntelliJ here for Java and I have a",
    "start": "973610",
    "end": "980840"
  },
  {
    "text": "pretty standard maven setup so I right before this live stream and this is this",
    "start": "980840",
    "end": "989480"
  },
  {
    "text": "is my first live coding on Twitch so I love this it's like it's pretty fun",
    "start": "989480",
    "end": "994880"
  },
  {
    "text": "because it's it's almost like live demo on steroids right like live demos are really scary but this is like watching",
    "start": "994880",
    "end": "1001000"
  },
  {
    "text": "me code the live demo so so so I'm pretty excited about this and and I",
    "start": "1001000",
    "end": "1007930"
  },
  {
    "text": "really wanted to try to stick with the spirit of it so I didn't like write this app beforehand and try to get the",
    "start": "1007930",
    "end": "1013720"
  },
  {
    "text": "practice on it like I really haven't done anything with it so right before this you know 15 minutes ago I just used",
    "start": "1013720",
    "end": "1021520"
  },
  {
    "text": "IntelliJ to set up a new maven project and this one's called AWS server list",
    "start": "1021520",
    "end": "1028209"
  },
  {
    "text": "tweet sentiment metrics alright and it's",
    "start": "1028210",
    "end": "1033280"
  },
  {
    "text": "empty there's no source code in it right now I do have some basics so I'm going to show you my palm XML maven creates it",
    "start": "1033280",
    "end": "1042040"
  },
  {
    "start": "1035000",
    "end": "1075000"
  },
  {
    "text": "for you creates the skeleton for you but I put in my group ID I put in my my",
    "start": "1042040",
    "end": "1049870"
  },
  {
    "text": "artifact ID is just the name of my project my version I'm using semantic versioning so that's another thing the",
    "start": "1049870",
    "end": "1056680"
  },
  {
    "text": "surveillance application repository uses semantic versioning to version your applications so I'm using semantic",
    "start": "1056680",
    "end": "1062530"
  },
  {
    "text": "versioning and then and then if I scroll so there's a couple special plugins that",
    "start": "1062530",
    "end": "1069580"
  },
  {
    "text": "I use when I do lambda based applications so let's talk about those so the big one is the shade plugin the",
    "start": "1069580",
    "end": "1078159"
  },
  {
    "start": "1075000",
    "end": "1145000"
  },
  {
    "text": "Maven shade plugin so yes so when you create so normally in a java library",
    "start": "1078159",
    "end": "1085450"
  },
  {
    "text": "maven would just compile your code only into a single jar now with AWS lambda",
    "start": "1085450",
    "end": "1091809"
  },
  {
    "text": "your your jar may have many dependencies right and with AWS lambda when you",
    "start": "1091809",
    "end": "1097120"
  },
  {
    "text": "create your lambda function you need to package up all those dependencies as well one way to do it is to grab all of",
    "start": "1097120",
    "end": "1104710"
  },
  {
    "text": "the jars and zip them all up into a zip file and then you can put that into lambda no that can have a little bit of",
    "start": "1104710",
    "end": "1113440"
  },
  {
    "text": "a performance penalty because jars themselves are also zip archives so if",
    "start": "1113440",
    "end": "1118929"
  },
  {
    "text": "you think of trying to unpack that you unzip the zip and then you have to unzip all of those jars so what the shape",
    "start": "1118929",
    "end": "1125890"
  },
  {
    "text": "plug-in allows you to do is it'll it'll actually grab all the dependent jars",
    "start": "1125890",
    "end": "1131230"
  },
  {
    "text": "it'll unzip them all and then just put all the class files in one big flat",
    "start": "1131230",
    "end": "1136950"
  },
  {
    "text": "directory structure and then turn those into like an uber jar into a single jar",
    "start": "1136950",
    "end": "1142690"
  },
  {
    "text": "for your application and let me see if I can show this here yeah yeah in the",
    "start": "1142690",
    "end": "1150370"
  },
  {
    "start": "1145000",
    "end": "1230000"
  },
  {
    "text": "meantime for those of you who are seeing this for the first time in the meantime James actually brings us up the page",
    "start": "1150370",
    "end": "1156490"
  },
  {
    "text": "that just posted them to chats actually has a bunch of best practices including how you're gonna add two classes and",
    "start": "1156490",
    "end": "1162720"
  },
  {
    "text": "some other other stuff is about to speed up the performance as well in that scenario yeah and so what you can see is",
    "start": "1162720",
    "end": "1169210"
  },
  {
    "text": "that in the target directory and that's just a maven thing maven puts things and tart built artifacts in the targeted",
    "start": "1169210",
    "end": "1175750"
  },
  {
    "text": "directory there's a there are two jars there is a original - and then my jar",
    "start": "1175750",
    "end": "1182740"
  },
  {
    "text": "and then there's the actual jar that you would normally see in maven and if if I",
    "start": "1182740",
    "end": "1188950"
  },
  {
    "text": "look the so if you look the original jar",
    "start": "1188950",
    "end": "1194919"
  },
  {
    "text": "is very small because it contained my source code which right now is nothing and then",
    "start": "1194919",
    "end": "1200150"
  },
  {
    "text": "the the actual jar is much larger and that's because it actually contains any",
    "start": "1200150",
    "end": "1205880"
  },
  {
    "text": "dependencies that I've put in my maven in my maven runtime dependencies so that's all included and this jar is now",
    "start": "1205880",
    "end": "1213920"
  },
  {
    "text": "ready to be uploaded to lambda as because all your dependencies are there",
    "start": "1213920",
    "end": "1219470"
  },
  {
    "text": "and there are yeah I think you linked the doc with there's best practices there are walkthroughs in our",
    "start": "1219470",
    "end": "1226040"
  },
  {
    "text": "documentation on using the maven shade plugin and so so yeah so that's the",
    "start": "1226040",
    "end": "1232490"
  },
  {
    "start": "1230000",
    "end": "1492000"
  },
  {
    "text": "shade plugin what else do I have here I have some log4j stuff let's see I said",
    "start": "1232490",
    "end": "1241040"
  },
  {
    "text": "show using not dirty there is that am I reading that right yes and I'm gonna talk a little bit more about that so",
    "start": "1241040",
    "end": "1247220"
  },
  {
    "text": "let's talk about making a service application at scale so if you're",
    "start": "1247220",
    "end": "1255200"
  },
  {
    "text": "playing around with lambda there's a request handler that's like your entry",
    "start": "1255200",
    "end": "1260390"
  },
  {
    "text": "point for the lambda it's a object in Java you have a request handler object",
    "start": "1260390",
    "end": "1265520"
  },
  {
    "text": "and it has a function and that's your entry point for your lambda in other languages you have Python you have you",
    "start": "1265520",
    "end": "1272840"
  },
  {
    "text": "just define a function somewhere that's your entry point for lambda so lambda",
    "start": "1272840",
    "end": "1278570"
  },
  {
    "text": "has an entry point somewhere if you're just starting out you can you can write all of your code in that one class but",
    "start": "1278570",
    "end": "1285800"
  },
  {
    "text": "if you're writing anything other than if you're writing a non-trivial application you're not going to want to put all of",
    "start": "1285800",
    "end": "1291830"
  },
  {
    "text": "your business logic into that one class so they no need to start getting more advanced so dependency injection is a",
    "start": "1291830",
    "end": "1299720"
  },
  {
    "text": "really common pattern in java programming and and a lot of the",
    "start": "1299720",
    "end": "1306440"
  },
  {
    "text": "frameworks that are used for that so common ones are spring juice and dagger",
    "start": "1306440",
    "end": "1311540"
  },
  {
    "text": "is another dependency injection framework dagger is the one that I recommend using for lambda and the",
    "start": "1311540",
    "end": "1317450"
  },
  {
    "text": "reason for that is that spring generally brings a lot of dependencies in with it",
    "start": "1317450",
    "end": "1322460"
  },
  {
    "text": "and the larger that jar and the larger the zip that you send up to lambda it",
    "start": "1322460",
    "end": "1328130"
  },
  {
    "text": "actually impacts how long it takes on the first run of the lambda function which is called a cold start so you",
    "start": "1328130",
    "end": "1334990"
  },
  {
    "text": "really want to try to minimize your dependencies as much as possible if spring generally brings it is",
    "start": "1334990",
    "end": "1340030"
  },
  {
    "text": "componentized but it brings a lot of dependencies in with it juice is much lighter weight but it uses",
    "start": "1340030",
    "end": "1347049"
  },
  {
    "text": "reflection quite heavily and so that can incur a penalty at runtime so dagger",
    "start": "1347049",
    "end": "1353610"
  },
  {
    "text": "dagger still follows the jsr and uses a lot of the java X inject annotations but",
    "start": "1353610",
    "end": "1360940"
  },
  {
    "text": "what it does is it generates a lot of code at Build time so that when you're",
    "start": "1360940",
    "end": "1366250"
  },
  {
    "text": "doing that first run it's just executing Auto generated code that's just mooing",
    "start": "1366250",
    "end": "1371590"
  },
  {
    "text": "up objects so it still gives you all the dependency injection but it's doing it",
    "start": "1371590",
    "end": "1377110"
  },
  {
    "text": "at Build time it's doing the heavy lifting at build time so the run time is very fast so I I do recommend using",
    "start": "1377110",
    "end": "1383620"
  },
  {
    "text": "dagger jacoco is our coverage tool and I'm just telling it to exclude a lot of",
    "start": "1383620",
    "end": "1390130"
  },
  {
    "text": "the dagger and then my core lambda request Handler and you'll see why's my",
    "start": "1390130",
    "end": "1395169"
  },
  {
    "text": "my pattern is I use dagger for dependency injection and then my lambda request handler is very thin it just",
    "start": "1395169",
    "end": "1402669"
  },
  {
    "text": "pulls whatever object it needs out of the dependency injection system and then",
    "start": "1402669",
    "end": "1407710"
  },
  {
    "text": "when the lambda function is invoked it just makes one call so that so that to",
    "start": "1407710",
    "end": "1412870"
  },
  {
    "text": "actually process the logic I think the lesson learned from here is and thank you for actually saying that is when",
    "start": "1412870",
    "end": "1420220"
  },
  {
    "text": "when I see customers using spring in general they're often coming from ec2",
    "start": "1420220",
    "end": "1425260"
  },
  {
    "text": "from docker or other places where they're used to actually launch any situations and white so that dependency",
    "start": "1425260",
    "end": "1432940"
  },
  {
    "text": "of that startup time is actually compared from spring with dagger it's actually very significant and more",
    "start": "1432940",
    "end": "1438970"
  },
  {
    "text": "importantly what you just said is let the function should do only one thing and one thing really well and as fast as",
    "start": "1438970",
    "end": "1446020"
  },
  {
    "text": "possibly can if you try to do everything you can possibly think about in a single lambda",
    "start": "1446020",
    "end": "1451210"
  },
  {
    "text": "function that could definitely hurt many principles single responsibility modules and many others in general and it's",
    "start": "1451210",
    "end": "1458440"
  },
  {
    "text": "great that you mention dagger once again because that's also in the best practices page oh great good I'm glad to",
    "start": "1458440",
    "end": "1466000"
  },
  {
    "text": "know following best practices I'm actually I mean and and you know feel free to ask",
    "start": "1466000",
    "end": "1471620"
  },
  {
    "text": "me questions I use survey lists in production so I have built many service",
    "start": "1471620",
    "end": "1477350"
  },
  {
    "text": "apps that are used in real production scenarios so I definitely passionate",
    "start": "1477350",
    "end": "1482660"
  },
  {
    "text": "about the topic I have a lot to say on it and yeah we use dagger we use and and",
    "start": "1482660",
    "end": "1488510"
  },
  {
    "text": "very thin request handlers it helps with testability as you'll see let's see what",
    "start": "1488510",
    "end": "1493760"
  },
  {
    "start": "1492000",
    "end": "1675000"
  },
  {
    "text": "else we have here so I'm probably not going to get a chance to write integration test today but in my service",
    "start": "1493760",
    "end": "1501560"
  },
  {
    "text": "apps I write unit tests I write integration tests so I use a plugin that",
    "start": "1501560",
    "end": "1507650"
  },
  {
    "text": "actually does a little bit of pre integration test setup and that essentially runs a script that deploys",
    "start": "1507650",
    "end": "1513500"
  },
  {
    "text": "my application to an AWS account and then it runs my integration test files",
    "start": "1513500",
    "end": "1518960"
  },
  {
    "text": "using maven standard integration test runner and then and then the post",
    "start": "1518960",
    "end": "1525860"
  },
  {
    "text": "integration test step is tearing down those tests stacks that were created if",
    "start": "1525860",
    "end": "1532160"
  },
  {
    "text": "people are interested maybe we can go through this and a different which just just before I go just to make it clear",
    "start": "1532160",
    "end": "1538610"
  },
  {
    "text": "for people who are watching when you say integration test on the way you are used to setup now that you are running",
    "start": "1538610",
    "end": "1544400"
  },
  {
    "text": "production into the integration test you are setting up a whole new stack just to",
    "start": "1544400",
    "end": "1549530"
  },
  {
    "text": "test the real service that you're using right you're not trying to mock every every single one of services correct",
    "start": "1549530",
    "end": "1555890"
  },
  {
    "text": "yeah absolutely so this and there are many levels of testing and I'm not I",
    "start": "1555890",
    "end": "1561980"
  },
  {
    "text": "don't like getting into the naming battle of is that an integration test or an acceptance test or a you know all",
    "start": "1561980",
    "end": "1568370"
  },
  {
    "text": "these assistance tests and I like to think about it in terms of mocking because every layer of testing you're",
    "start": "1568370",
    "end": "1574910"
  },
  {
    "text": "mucking somewhere I think unit tests every that's where you have the highest level of agreement",
    "start": "1574910",
    "end": "1580460"
  },
  {
    "text": "on where we're mocking your you're generally trying to just test the class individually and not a lot of",
    "start": "1580460",
    "end": "1587720"
  },
  {
    "text": "dependencies on it mocking out the dependencies for this integration test what I mean is that I actually deploy a",
    "start": "1587720",
    "end": "1594200"
  },
  {
    "text": "class I deploy the application as a confirmation stack I may deploy a test",
    "start": "1594200",
    "end": "1599970"
  },
  {
    "text": "that has additional resources so for Twitter as an event source for example that app needs some lambda function that",
    "start": "1599970",
    "end": "1606960"
  },
  {
    "text": "it can invoke to try to do something right and so your test stack may set up",
    "start": "1606960",
    "end": "1612030"
  },
  {
    "text": "some of those other functions but they're actually deployed in an AWS account and then the integration test",
    "start": "1612030",
    "end": "1620160"
  },
  {
    "text": "can query CloudFormation grab the actual lambda function name and then really invoke them or in the case",
    "start": "1620160",
    "end": "1626850"
  },
  {
    "text": "of the twitter as an event source application it's automatically invoked by the cloud watch events triggers so",
    "start": "1626850",
    "end": "1634940"
  },
  {
    "text": "you're more just looking for the effect of whatever your lambda is that receives",
    "start": "1634940",
    "end": "1639990"
  },
  {
    "text": "the tweets so that's what I mean when I say integration test it's really deploying to lambda it's really using",
    "start": "1639990",
    "end": "1646140"
  },
  {
    "text": "DynamoDB if your app uses that and and you're trying to make calls to AWS to",
    "start": "1646140",
    "end": "1651690"
  },
  {
    "text": "verify the various things perfect okay that's fun faster I work to leave it another link to the channel if you're",
    "start": "1651690",
    "end": "1658650"
  },
  {
    "text": "interested more in more those details about what happens in production how do you separate those tags and pretty much",
    "start": "1658650",
    "end": "1666660"
  },
  {
    "text": "everything else that you might want to ask yourself when you are running in prod but definitely a week we could cover in another episode of this yeah",
    "start": "1666660",
    "end": "1674490"
  },
  {
    "text": "absolutely okay for dependencies this I don't think this is covering the best",
    "start": "1674490",
    "end": "1681060"
  },
  {
    "start": "1675000",
    "end": "2107000"
  },
  {
    "text": "practice doc I personally really enjoy using project Lombok and it saves me a lot of boilerplate so I'll have that in",
    "start": "1681060",
    "end": "1687300"
  },
  {
    "text": "here I'll try to explain a couple of those the first time I use it in case you're not familiar with it it really",
    "start": "1687300",
    "end": "1693840"
  },
  {
    "text": "just saves a lot of the kind of java boilerplate code like getters and setters and equals and hashcode methods",
    "start": "1693840",
    "end": "1700200"
  },
  {
    "text": "and it just Auto generates them at build time but you can see I'm using dagger as",
    "start": "1700200",
    "end": "1705210"
  },
  {
    "text": "a compiler I'm using SL f4j which is a logging interface package is very common in Java",
    "start": "1705210",
    "end": "1713160"
  },
  {
    "text": "it abstract cyou from the exact logging framework that you're using so this AWS",
    "start": "1713160",
    "end": "1720480"
  },
  {
    "text": "lambda Java core an AWS lambda Java events gives you objects that are that",
    "start": "1720480",
    "end": "1727770"
  },
  {
    "text": "are the structure of the events that lambda sends you I actually we may not",
    "start": "1727770",
    "end": "1733320"
  },
  {
    "text": "even use these but they're kind of part of my boilerplate it's a service app I'd throw them in here I end up using some",
    "start": "1733320",
    "end": "1741570"
  },
  {
    "text": "niceties from Google guava which we'll see if we use that yeah what I haven't",
    "start": "1741570",
    "end": "1747870"
  },
  {
    "text": "added here are actually the AWS SDK so I will be adding that as we need it and",
    "start": "1747870",
    "end": "1754130"
  },
  {
    "text": "then a runtime I my actual logging implementation is log4j and I'm using",
    "start": "1754130",
    "end": "1761370"
  },
  {
    "text": "log4j 2 here and there's actually a lambda Java log4j to that that makes it",
    "start": "1761370",
    "end": "1768780"
  },
  {
    "text": "so that using standard SL f4j results in the right thing happening in lambda and",
    "start": "1768780",
    "end": "1774030"
  },
  {
    "text": "you get your logs in cloud watch logs that's cool yeah for unit testing I use",
    "start": "1774030",
    "end": "1781950"
  },
  {
    "text": "J unit I use mockito for mocking I like using ham crusts as opposed to the",
    "start": "1781950",
    "end": "1788340"
  },
  {
    "text": "standard J unit asserts I like and I'll show a quick example of that I'm",
    "start": "1788340",
    "end": "1793740"
  },
  {
    "text": "probably not going to do exhaustive unit tests during this live stream but I will",
    "start": "1793740",
    "end": "1798810"
  },
  {
    "text": "show what I would normally do cool so that covers dependencies all right we're",
    "start": "1798810",
    "end": "1807240"
  },
  {
    "text": "ready to start so okay so tweet",
    "start": "1807240",
    "end": "1812640"
  },
  {
    "text": "sentiment what does that mean so I can",
    "start": "1812640",
    "end": "1818070"
  },
  {
    "text": "go to Twitter and oh let's see let me",
    "start": "1818070",
    "end": "1825980"
  },
  {
    "text": "know I'm gonna have to log in here so I can go to Twitter and I can search give",
    "start": "1826190",
    "end": "1834510"
  },
  {
    "text": "me just a second here basically on Twitter I can search for let me say that",
    "start": "1834510",
    "end": "1841230"
  },
  {
    "text": "let me just not let's see yeah I'm just",
    "start": "1841230",
    "end": "1847200"
  },
  {
    "text": "looking at you you should be able to search through my twitter.com slash search okay then and then just use a",
    "start": "1847200",
    "end": "1853020"
  },
  {
    "text": "query strings a query string Q alright hours so what I'm hoping to do is to",
    "start": "1853020",
    "end": "1859050"
  },
  {
    "text": "maybe do hash tag serverless so here are",
    "start": "1859050",
    "end": "1864600"
  },
  {
    "text": "search results that have the hash service in them right and and there's",
    "start": "1864600",
    "end": "1872559"
  },
  {
    "text": "text in this search so what I'm hoping to do today is Emma Amazon comprehend is",
    "start": "1872559",
    "end": "1883230"
  },
  {
    "text": "this pretty neat service where you can put in freeform text and it can do",
    "start": "1883230",
    "end": "1890950"
  },
  {
    "text": "various pieces of analysis so it tries to extract meaning from your text and it can try to extract things like locations",
    "start": "1890950",
    "end": "1898419"
  },
  {
    "text": "or organizations but the other big thing it can do is sentiment analysis so it",
    "start": "1898419",
    "end": "1905230"
  },
  {
    "text": "can try to come up with a neutral ask or a positive a negative score so what I",
    "start": "1905230",
    "end": "1914710"
  },
  {
    "text": "want to do is I want to create a lambda function that receives tweets so I will",
    "start": "1914710",
    "end": "1920679"
  },
  {
    "text": "configure the Twitter event source app with rest search with some search like",
    "start": "1920679",
    "end": "1926110"
  },
  {
    "text": "hashtag circles and I want that's going to start invoking my lambda function",
    "start": "1926110",
    "end": "1932830"
  },
  {
    "text": "with a list of tweets and then I want to send the text of those tweets to Amazon",
    "start": "1932830",
    "end": "1939549"
  },
  {
    "text": "comprehend and I want to I want to pull the sentiment scores out and then I want",
    "start": "1939549",
    "end": "1946960"
  },
  {
    "text": "to publish those to CloudWatch metrics and that way I can get a graph and kind",
    "start": "1946960",
    "end": "1952299"
  },
  {
    "text": "of get a feel for what maybe let's say the average or what kind of sentiment",
    "start": "1952299",
    "end": "1958240"
  },
  {
    "text": "that we're seeing for that particular search so that's my hope that's what I wanted to today yeah that",
    "start": "1958240",
    "end": "1963820"
  },
  {
    "text": "looks awesome all right good yeah so this is a great way to test it out so I",
    "start": "1963820",
    "end": "1969460"
  },
  {
    "text": "can grab a tweet let's let's try to look",
    "start": "1969460",
    "end": "1974500"
  },
  {
    "text": "at this one and see what or let's see I",
    "start": "1974500",
    "end": "1983049"
  },
  {
    "text": "think that one what I found interesting is you can actually even pass through the console so you don't even need to",
    "start": "1983049",
    "end": "1989019"
  },
  {
    "text": "make an API call to comprehend just to get a feeling of how that was also kind of look like and if there's even emoji",
    "start": "1989019",
    "end": "1995679"
  },
  {
    "text": "there how interesting to see how it's gonna let's see how it does so so the",
    "start": "1995679",
    "end": "2002679"
  },
  {
    "text": "sentiment on this was mostly neutral it actually thinks a little bit negative which is funny because it says went full",
    "start": "2002679",
    "end": "2008830"
  },
  {
    "text": "service on a new site project related to stock options trading on AWS let's see if I ever get to the point where I will",
    "start": "2008830",
    "end": "2015280"
  },
  {
    "text": "miss an actual server instance so it's actually pretty positive when you look at it but but you know language is",
    "start": "2015280",
    "end": "2021309"
  },
  {
    "text": "difficult it did detect that this was English so the emoji you didn't throw it off but it's just fun that's fun service",
    "start": "2021309",
    "end": "2030600"
  },
  {
    "text": "let's see yeah that's the famous crease let's see all the emojis and see let's",
    "start": "2030600",
    "end": "2039429"
  },
  {
    "text": "see analyze this it's the neutrality is",
    "start": "2039429",
    "end": "2045340"
  },
  {
    "text": "actually pretty low it's saying that it's mostly positive so that's a point three I'm positive I believe the way",
    "start": "2045340",
    "end": "2050950"
  },
  {
    "text": "that this score works is that a 1.0 is a hundred percent I think 1.0 is like",
    "start": "2050950",
    "end": "2056770"
  },
  {
    "text": "maximum confidence on how this works so so yeah you cannot make sense because if",
    "start": "2056770",
    "end": "2063250"
  },
  {
    "text": "you look at the language confidence is actually 0.99 so it's definitely uh",
    "start": "2063250",
    "end": "2069179"
  },
  {
    "text": "that's we definitely can't check the docs but it looks like you're right this",
    "start": "2069179",
    "end": "2075100"
  },
  {
    "text": "is a confidence percentage yep so so today I asked people for feedback on the",
    "start": "2075100",
    "end": "2081398"
  },
  {
    "text": "EWS lambda roadmap and a good bunch of replies those people helping other people solve their problems hell yeah",
    "start": "2081399",
    "end": "2088320"
  },
  {
    "text": "service community alright so it looks like that that's definitely very positive and comprehend was able to",
    "start": "2088320",
    "end": "2094868"
  },
  {
    "text": "detect that there were positive sentiments and that in that text so cool so this is a neat API I'm excited to use",
    "start": "2094869",
    "end": "2103540"
  },
  {
    "text": "it for the first time here so let's see how it goes alright so now let's so what",
    "start": "2103540",
    "end": "2111430"
  },
  {
    "start": "2107000",
    "end": "2332000"
  },
  {
    "text": "I keep switching away from is I actually have another app that I built that interacts with the Twitter event source",
    "start": "2111430",
    "end": "2118000"
  },
  {
    "text": "it's called retweet leaderboard I used it on my last twitch livestream and and",
    "start": "2118000",
    "end": "2123460"
  },
  {
    "text": "I have it pulled up because that's my safety net if I don't know what if I find something where",
    "start": "2123460",
    "end": "2129550"
  },
  {
    "text": "how do I usually set that up I'm probably gonna flip over to it and copy something over from it but I'll try to",
    "start": "2129550",
    "end": "2134560"
  },
  {
    "text": "explain that as I do it so let's talk about how we structure our java packages",
    "start": "2134560",
    "end": "2140980"
  },
  {
    "text": "so IntelliJ setup the standard maven setup so everything's under Maine and",
    "start": "2140980",
    "end": "2146730"
  },
  {
    "text": "our sorry there's everything's under source and you have Maine and test so",
    "start": "2146730",
    "end": "2152200"
  },
  {
    "text": "Maine is where your actual functional logic is and then test is any of your test code I also set up a basic get",
    "start": "2152200",
    "end": "2159940"
  },
  {
    "text": "ignore just for any kind of Java and then my pom.xml was created I just",
    "start": "2159940",
    "end": "2166000"
  },
  {
    "text": "showed you that and then I have a samyama so we should talk about that but that's that is my Sam template for this",
    "start": "2166000",
    "end": "2173650"
  },
  {
    "text": "application which right now so so this",
    "start": "2173650",
    "end": "2179980"
  },
  {
    "text": "is Sam template is actually a AWS CloudFormation transform that's applied",
    "start": "2179980",
    "end": "2187300"
  },
  {
    "text": "over conformation so this is the template version CloudFormation template",
    "start": "2187300",
    "end": "2192580"
  },
  {
    "text": "version and then to use sam use you add this transform saying AWS service from",
    "start": "2192580",
    "end": "2199900"
  },
  {
    "text": "there it's it's a fairly standard confirmation however Sam adds a lot of",
    "start": "2199900",
    "end": "2205690"
  },
  {
    "text": "really nice nice extra features that are very friendly for serverless",
    "start": "2205690",
    "end": "2211210"
  },
  {
    "text": "applications so I have one resource in this app right now it's just a single",
    "start": "2211210",
    "end": "2217510"
  },
  {
    "text": "function AWS serverless function is not a resource type that's supported by",
    "start": "2217510",
    "end": "2224530"
  },
  {
    "text": "native CloudFormation it's actually something that's defined by Sam and it gives you a more compact syntax for",
    "start": "2224530",
    "end": "2231010"
  },
  {
    "text": "defining a function what events trigger it things like that for this particular",
    "start": "2231010",
    "end": "2237280"
  },
  {
    "text": "application it's just a standalone sorry there's more boilerplate that I have left over it's just a standalone",
    "start": "2237280",
    "end": "2243760"
  },
  {
    "text": "function and what I have right now is that the runtime is Java 8 we haven't",
    "start": "2243760",
    "end": "2250840"
  },
  {
    "text": "written a handler for it yet so I don't have that we don't have code for it but actually I can populate that now",
    "start": "2250840",
    "end": "2258870"
  },
  {
    "text": "so where is the code well I showed you it's in Target slash and then it's this",
    "start": "2258870",
    "end": "2266470"
  },
  {
    "text": "jar so I can put a target slash in that",
    "start": "2266470",
    "end": "2272170"
  },
  {
    "text": "jar and this is a local reference but as we'll see later sam provides some tools",
    "start": "2272170",
    "end": "2278920"
  },
  {
    "text": "that will convert this into an object in s3 for me right if you're actually",
    "start": "2278920",
    "end": "2284920"
  },
  {
    "text": "watching this now and you're new to Sam etc the previous episode we actually touched on on Sam and how we open-source",
    "start": "2284920",
    "end": "2293080"
  },
  {
    "text": "the same engine behind the scenes we actually basically Sam is a superset of",
    "start": "2293080",
    "end": "2298870"
  },
  {
    "text": "Confirmation that will make it easier for you to build and define your service application in a much nicer and compact",
    "start": "2298870",
    "end": "2306400"
  },
  {
    "text": "way when you look at that service function there will likely trigger and create multiple resources and more",
    "start": "2306400",
    "end": "2313120"
  },
  {
    "text": "importantly as James just said or the code Arai instead of actually passing a s3 URL you actually pass a relative path",
    "start": "2313120",
    "end": "2321610"
  },
  {
    "text": "which can we can package it up for you and we can use that for deployment so I sent a link on chats which has a",
    "start": "2321610",
    "end": "2328540"
  },
  {
    "text": "recording from the previous episode and there's definitely more to come on that on that end great yeah",
    "start": "2328540",
    "end": "2336480"
  },
  {
    "start": "2332000",
    "end": "2397000"
  },
  {
    "text": "so I don't know if so you can set this is the code the runtime is Java 8",
    "start": "2336480",
    "end": "2343270"
  },
  {
    "text": "my handler will come back and fill that in later tracing this is to support X ray tracing and I hope to show some of",
    "start": "2343270",
    "end": "2349540"
  },
  {
    "text": "that later as well our memory size you have to specify a memory size for your",
    "start": "2349540",
    "end": "2355450"
  },
  {
    "text": "lambda function I'm just starting with 512 megabytes memory and then time out",
    "start": "2355450",
    "end": "2361510"
  },
  {
    "text": "so you can go up to 5 minutes this is in seconds I'm just saying one minute for now policies will talk about permissions",
    "start": "2361510",
    "end": "2369250"
  },
  {
    "text": "once we actually need them we will need to define some permissions to talk to comprehend for example and then",
    "start": "2369250",
    "end": "2377380"
  },
  {
    "text": "environment variables they allow you to set environment variables that you can look at in that you can pull inside your",
    "start": "2377380",
    "end": "2384040"
  },
  {
    "text": "lambda function and I don't know if we're going to need any today but I'll still show where I",
    "start": "2384040",
    "end": "2390470"
  },
  {
    "text": "usually put them and how I usually handle that in a job application so this is our stamp templates so far",
    "start": "2390470",
    "end": "2398590"
  },
  {
    "start": "2397000",
    "end": "2507000"
  },
  {
    "text": "let's okay let's get to some actual code",
    "start": "2398780",
    "end": "2404680"
  },
  {
    "text": "so so let's see well say I don't know",
    "start": "2404680",
    "end": "2413900"
  },
  {
    "text": "one I thought all this sentiment analyzer something like that and what",
    "start": "2413900",
    "end": "2419840"
  },
  {
    "text": "does this do this will process tweets",
    "start": "2419840",
    "end": "2424940"
  },
  {
    "text": "and get a score from comprehend and",
    "start": "2424940",
    "end": "2433570"
  },
  {
    "text": "publish them Sariah and publish",
    "start": "2433570",
    "end": "2439240"
  },
  {
    "text": "sentiment scores to cloud watch metrics",
    "start": "2439240",
    "end": "2445480"
  },
  {
    "text": "its java that's if you if you follow a single responsibility principle you'll",
    "start": "2445480",
    "end": "2450800"
  },
  {
    "text": "see that I said a bunch of different things that it's going to do so I'll probably create some helper objects and",
    "start": "2450800",
    "end": "2456859"
  },
  {
    "text": "things to do it but let's start there so this is going to take a some kind of",
    "start": "2456859",
    "end": "2465430"
  },
  {
    "text": "let's say this will process tweets and then what is this going to take is this",
    "start": "2465640",
    "end": "2471440"
  },
  {
    "text": "go ahead and take some lists of strings I really don't know this so so I could",
    "start": "2471440",
    "end": "2480589"
  },
  {
    "text": "process the tweets of strings we'll probably want to do a little better than that I'll probably look at what I did for retweet leaderboard to",
    "start": "2480589",
    "end": "2487190"
  },
  {
    "text": "see so this is our sentiment analyzer we are going to have to talk to comprehend or somebody's going to have to talk to",
    "start": "2487190",
    "end": "2493280"
  },
  {
    "text": "comprehend so but let's say this is essentially our entry point this is",
    "start": "2493280",
    "end": "2498950"
  },
  {
    "text": "going to process the tweets so is lambda going to call this directly well in Java",
    "start": "2498950",
    "end": "2505869"
  },
  {
    "text": "No so in Java this is my regular business",
    "start": "2505869",
    "end": "2510950"
  },
  {
    "text": "logic so the way I like to structure things you can see I have a package prefix that's just a server list and",
    "start": "2510950",
    "end": "2517280"
  },
  {
    "text": "then I'm calling this tweet sentiment okay maybe I'll rename this I'll call",
    "start": "2517280",
    "end": "2523460"
  },
  {
    "text": "this tweet processing okay and then I can",
    "start": "2523460",
    "end": "2530599"
  },
  {
    "text": "just call it process I love those i de reef actors cool yeah now let's talk",
    "start": "2530599",
    "end": "2540829"
  },
  {
    "text": "about where lambda is going to come in so what I usually do is I create a package I create two packages one of",
    "start": "2540829",
    "end": "2547579"
  },
  {
    "text": "them is called lambda and that's where my lambda handlers are going to live and",
    "start": "2547579",
    "end": "2552919"
  },
  {
    "text": "then another one is called dagger and that's where my dagger dependency injection will go so for lambda I will",
    "start": "2552919",
    "end": "2562399"
  },
  {
    "text": "create a tweet processor handler okay",
    "start": "2562399",
    "end": "2573409"
  },
  {
    "text": "and then this will be entry point for the tweet processor lambda alright so in",
    "start": "2573409",
    "end": "2581989"
  },
  {
    "text": "order to do this the there's a helper",
    "start": "2581989",
    "end": "2587139"
  },
  {
    "text": "interface that's provided by that Java core and it's called request Handler so",
    "start": "2587139",
    "end": "2594409"
  },
  {
    "text": "you get to specify some input in this case I'll say it's a list of tweets that",
    "start": "2594409",
    "end": "2603079"
  },
  {
    "text": "are going to come in and then some output in this case I don't need to return anything back this is a processor",
    "start": "2603079",
    "end": "2610129"
  },
  {
    "text": "that's going to be async invoked and it's going to do something as a side effect and not not need to return",
    "start": "2610129",
    "end": "2618289"
  },
  {
    "text": "anything back so we need to implement some methods so this interface defines a",
    "start": "2618289",
    "end": "2624169"
  },
  {
    "text": "method called handle requests so there's going to be our request Handler so at",
    "start": "2624169",
    "end": "2630199"
  },
  {
    "text": "this point we need to call our tweet processor right so where do we get it",
    "start": "2630199",
    "end": "2637419"
  },
  {
    "text": "well we can get it from in our this",
    "start": "2637419",
    "end": "2644419"
  },
  {
    "text": "object what happens is when lambda colt starts when the lambda function first",
    "start": "2644419",
    "end": "2650929"
  },
  {
    "text": "call starts this object gets initialized so we actually need to",
    "start": "2650929",
    "end": "2658090"
  },
  {
    "text": "put our tweet processor in this function and we need to I made it final which",
    "start": "2658090",
    "end": "2665000"
  },
  {
    "text": "means it has to be initialized in the constructor so how do I get it right",
    "start": "2665000",
    "end": "2671860"
  },
  {
    "text": "something so how do I get it well I'm going to get it from dagger so dagger is",
    "start": "2673450",
    "end": "2680180"
  },
  {
    "start": "2677000",
    "end": "2837000"
  },
  {
    "text": "where I can do all of my setup I'm so in",
    "start": "2680180",
    "end": "2688640"
  },
  {
    "text": "in dagger the way dagger works is you define an interface you define an",
    "start": "2688640",
    "end": "2697970"
  },
  {
    "text": "interface that returns the things that you need so we need this suite processor well this right so we have some method",
    "start": "2697970",
    "end": "2709190"
  },
  {
    "text": "that returns our tweet processor so in our handler we're actually going to have",
    "start": "2709190",
    "end": "2716870"
  },
  {
    "text": "this component so I don't know where I'm",
    "start": "2716870",
    "end": "2726380"
  },
  {
    "text": "gonna get it but once I do have it then I can call and I'll just do this for now",
    "start": "2726380",
    "end": "2733430"
  },
  {
    "text": "so that until it is happy so once I do that then okay I can pull it from this",
    "start": "2733430",
    "end": "2740150"
  },
  {
    "text": "component great so now once I'm in my function then I can call my tweet processor process tweets and right now",
    "start": "2740150",
    "end": "2748510"
  },
  {
    "text": "these are tweets okay so boom there we",
    "start": "2748510",
    "end": "2755150"
  },
  {
    "text": "are we're done just kidding so James",
    "start": "2755150",
    "end": "2761420"
  },
  {
    "text": "let's actually pause there very quickly just for explain why we're doing because there's some people joining right now so",
    "start": "2761420",
    "end": "2766580"
  },
  {
    "text": "I'm just trying to kind of uh cover everybody up in the same pace the reason that we actually did that",
    "start": "2766580",
    "end": "2772270"
  },
  {
    "text": "outside the handler the private final and everything and you mention about co-stars if you are actually getting",
    "start": "2772270",
    "end": "2778370"
  },
  {
    "text": "here right now and you're still a bit confused and the why we're doing all of this is basically when Linda receives",
    "start": "2778370",
    "end": "2784730"
  },
  {
    "text": "the first request imaginate we're trying to process it search those two it's for the first time we will execute",
    "start": "2784730",
    "end": "2790910"
  },
  {
    "text": "that will execute the entire code for you the second time he executes the what happens there is if we have a execution",
    "start": "2790910",
    "end": "2798859"
  },
  {
    "text": "environment running or a let's say container running we may not need to run the entire code we only going to execute",
    "start": "2798859",
    "end": "2805099"
  },
  {
    "text": "the handle requests yep yeah so so on",
    "start": "2805099",
    "end": "2811640"
  },
  {
    "text": "your cold start initialization this will execute once and then you'll have this object which can be reused between if",
    "start": "2811640",
    "end": "2818839"
  },
  {
    "text": "the container if the lambda the lambda container itself is reused then then",
    "start": "2818839",
    "end": "2827089"
  },
  {
    "text": "this object won't be reinitialized it'll just enter this function this handle request function when your lambda is",
    "start": "2827089",
    "end": "2833839"
  },
  {
    "text": "invoked okay pretty cool all right but we still have a problem right so component has not been a dish",
    "start": "2833839",
    "end": "2840200"
  },
  {
    "text": "initialized so how do we do that so in dagger actually this is not a",
    "start": "2840200",
    "end": "2845750"
  },
  {
    "text": "valid component yet because I have to use daggers component annotation to tell",
    "start": "2845750",
    "end": "2851359"
  },
  {
    "text": "it that it's that it is a valid component so it's an I tell it it's a",
    "start": "2851359",
    "end": "2859039"
  },
  {
    "text": "dagger component and ask asks me for modules what modules are associated with",
    "start": "2859039",
    "end": "2864740"
  },
  {
    "text": "this dagger component well I need to write one I don't have one yet so let's",
    "start": "2864740",
    "end": "2872510"
  },
  {
    "text": "create one and by the way no pressure Chris bones is now watching us and he is",
    "start": "2872510",
    "end": "2878710"
  },
  {
    "text": "so all right so we're going to so this",
    "start": "2878710",
    "end": "2888470"
  },
  {
    "text": "is our di module that's going to populate our populate our objects this",
    "start": "2888470",
    "end": "2896809"
  },
  {
    "text": "is where we actually do our initialization of objects for our dependency injection if you've used juice this is going to look very similar",
    "start": "2896809",
    "end": "2903770"
  },
  {
    "text": "to you if you use spring with Java config not the XML based config it's",
    "start": "2903770",
    "end": "2909200"
  },
  {
    "text": "going to look pretty familiar to you so hopefully so it I picked up dagger",
    "start": "2909200",
    "end": "2914539"
  },
  {
    "text": "really really fast and it's not because I'm special it's I coded I'd done Java config in spring I had done a little bit",
    "start": "2914539",
    "end": "2921529"
  },
  {
    "text": "of juice like a little bit and I think dagger really quickly it's actually",
    "start": "2921529",
    "end": "2927450"
  },
  {
    "text": "really simple app to use but I am",
    "start": "2927450",
    "end": "2932940"
  },
  {
    "text": "probably going to cheat because let me see if I can remember all of these things so what do I need I need a tweet",
    "start": "2932940",
    "end": "2938910"
  },
  {
    "text": "processor handler right that's the thing that I actually need oh sorry no I need",
    "start": "2938910",
    "end": "2944220"
  },
  {
    "text": "my tweet processor that's the actual file I need so so I need something that",
    "start": "2944220",
    "end": "2950850"
  },
  {
    "text": "returns a tweet processor so they're",
    "start": "2950850",
    "end": "2956070"
  },
  {
    "text": "provided tweet processor and I will",
    "start": "2956070",
    "end": "2961560"
  },
  {
    "text": "return a new tweet processor very exciting so this is a singleton object",
    "start": "2961560",
    "end": "2970280"
  },
  {
    "text": "one thing with juice and with daggers that so spring everything defaults to",
    "start": "2970280",
    "end": "2977460"
  },
  {
    "text": "singleton scope and what singleton means is that this same object it won't be recreated over and over again",
    "start": "2977460",
    "end": "2982890"
  },
  {
    "text": "it'll be created once and reused across all any threads now with this now juice",
    "start": "2982890",
    "end": "2991380"
  },
  {
    "text": "and dagger went the other way and their default is that everything is a new object per thread for anyone using it so",
    "start": "2991380",
    "end": "2998580"
  },
  {
    "text": "you have to explicitly say this is a singleton I think there's something like provides yeah so I believe this is all I",
    "start": "2998580",
    "end": "3005570"
  },
  {
    "text": "have to do if this doesn't work then you know I'll cheat and look at my retweet",
    "start": "3005570",
    "end": "3010820"
  },
  {
    "text": "leaderboard I don't think a person will ever remember all of these by heart yeah",
    "start": "3010820",
    "end": "3016880"
  },
  {
    "text": "exactly sighs I think we're not a bunch of times too which is probably the only reason I",
    "start": "3016880",
    "end": "3022790"
  },
  {
    "text": "even remember these on my head okay so here now we can map this app module",
    "start": "3022790",
    "end": "3030130"
  },
  {
    "text": "class to our to our app component and what it's going to do is is now dagger",
    "start": "3030130",
    "end": "3037280"
  },
  {
    "text": "at Build time will generate a bunch of classes that and it'll generate a class",
    "start": "3037280",
    "end": "3043550"
  },
  {
    "text": "that implements this interface right and so in that class uses they follow this",
    "start": "3043550",
    "end": "3050450"
  },
  {
    "text": "very specific naming convention so they've prefix things with dagger so",
    "start": "3050450",
    "end": "3055610"
  },
  {
    "text": "there's going to be there's going to be a class that's generated at built time that's called",
    "start": "3055610",
    "end": "3061260"
  },
  {
    "text": "dagger component and it'll have a static initializer method called create and now",
    "start": "3061260",
    "end": "3067860"
  },
  {
    "text": "I will magically have basically my map component interface and it will give me",
    "start": "3067860",
    "end": "3073920"
  },
  {
    "text": "this object that was created here and even though it looks like if I call this",
    "start": "3073920",
    "end": "3079830"
  },
  {
    "text": "once and if I keep calling this it'll keep giving me new objects dagger puts",
    "start": "3079830",
    "end": "3084930"
  },
  {
    "text": "all the magic wrappers around everything because I said this is a singleton it's only going to execute this code once and",
    "start": "3084930",
    "end": "3092250"
  },
  {
    "text": "then it'll save that object and if I ever pull a component that's tied to that module that's pulling out this",
    "start": "3092250",
    "end": "3099180"
  },
  {
    "text": "object the same objects going to come out every time so that's just the dependency injection magic and how that",
    "start": "3099180",
    "end": "3106350"
  },
  {
    "text": "works so that is this is the core structure of how I like to do Java Java",
    "start": "3106350",
    "end": "3112830"
  },
  {
    "text": "lambda functions this may seem like a lot of overhead when you're business",
    "start": "3112830",
    "end": "3118410"
  },
  {
    "text": "logic looks like this but when you're business logic is many many many classes",
    "start": "3118410",
    "end": "3123990"
  },
  {
    "text": "and objects and different dependencies this becomes critical there's you really",
    "start": "3123990",
    "end": "3129360"
  },
  {
    "text": "can't and you will frequently have many lambda functions that might point to the",
    "start": "3129360",
    "end": "3135960"
  },
  {
    "text": "same module of business logic and you don't want to of course you're not going to duplicate those and every handler",
    "start": "3135960",
    "end": "3142230"
  },
  {
    "text": "it's just it's a very clean structure here for your lambdas I think reflecting",
    "start": "3142230",
    "end": "3148050"
  },
  {
    "text": "on that point not really only Java but because I mostly use Python for almost everything or Python and ojs is I try to",
    "start": "3148050",
    "end": "3156480"
  },
  {
    "text": "follow a similar approach because similar to what you said previously it actually facilitates testing a lot and",
    "start": "3156480",
    "end": "3163040"
  },
  {
    "text": "also facilitates were London in this case it's just gonna be your computing",
    "start": "3163040",
    "end": "3168510"
  },
  {
    "text": "environment where you've all you receive is an event in a context where I can have as a POJO there but essentially all",
    "start": "3168510",
    "end": "3174690"
  },
  {
    "text": "your business logic should leave somewhere else so your alums it just becomes yet another Java fire in their",
    "start": "3174690",
    "end": "3181200"
  },
  {
    "text": "java class and that's it if you're actually need to do some profiling or some testing well the to Z you normally",
    "start": "3181200",
    "end": "3188160"
  },
  {
    "text": "use are exactly the same yep yeah it's completely agree okay so",
    "start": "3188160",
    "end": "3194400"
  },
  {
    "text": "so now let's actually write our business logic so this is the core structure this is how I structure things this for",
    "start": "3194400",
    "end": "3201760"
  },
  {
    "text": "surplice apps what I find is I can usually just use app component in app",
    "start": "3201760",
    "end": "3206770"
  },
  {
    "text": "module and put everything in app module and everything in app component and I'm generally good I try to create my",
    "start": "3206770",
    "end": "3212950"
  },
  {
    "text": "service applications to be fairly small and then are targeted and then compose them together I have written much more",
    "start": "3212950",
    "end": "3220750"
  },
  {
    "text": "complex very large service service applications where I further break out this class structure you'll notice this",
    "start": "3220750",
    "end": "3227500"
  },
  {
    "text": "component annotation takes a list of modules so if you need to structure your",
    "start": "3227500",
    "end": "3233380"
  },
  {
    "text": "dagger files out in into more modules you can absolutely do that with dagger",
    "start": "3233380",
    "end": "3240300"
  },
  {
    "text": "all right let's get into our core code here so we're going to process tweets so",
    "start": "3240300",
    "end": "3245500"
  },
  {
    "text": "at this point I'm let's let's just start so here's some Lombok magic so usually",
    "start": "3245500",
    "end": "3252970"
  },
  {
    "text": "what you have to do is you have to create a logger you have to create some static logger at the top of your class",
    "start": "3252970",
    "end": "3258190"
  },
  {
    "text": "and everything this just does it for you so this makes it so I now have this magical log variable that's a static",
    "start": "3258190",
    "end": "3268060"
  },
  {
    "text": "variable in my class and I can do my info logs so let's just list the let's",
    "start": "3268060",
    "end": "3274450"
  },
  {
    "text": "just do an info log of all the tweets that we get let's say so the compiler",
    "start": "3274450",
    "end": "3283600"
  },
  {
    "text": "stopped pointing at me great so let's just start here and let's see if we can just get this to work that's another",
    "start": "3283600",
    "end": "3290050"
  },
  {
    "text": "thing I like to do my development is just incremental start incrementally another best practice for me of course",
    "start": "3290050",
    "end": "3296560"
  },
  {
    "text": "is is using git so right now I have a lot of stuff in here and I haven't made",
    "start": "3296560",
    "end": "3304480"
  },
  {
    "start": "3297000",
    "end": "3599000"
  },
  {
    "text": "a single commit so far so I'm just going to say I'm going to create a commit for",
    "start": "3304480",
    "end": "3311350"
  },
  {
    "text": "my git ignore my mom my samyama and and",
    "start": "3311350",
    "end": "3316690"
  },
  {
    "text": "I'm just gonna call this basic server list set up work I'm actually loving",
    "start": "3316690",
    "end": "3323559"
  },
  {
    "text": "because they're even using gif now every well it's actually that's evolving quite quite fast yeah I'm really trying to show that my",
    "start": "3323559",
    "end": "3331029"
  },
  {
    "text": "actual development process like this is what I do so great so now let's go ahead",
    "start": "3331029",
    "end": "3337059"
  },
  {
    "text": "and add our source and we have no test so far and I think I'm to make it happy",
    "start": "3337059",
    "end": "3343479"
  },
  {
    "text": "I'm probably gonna have to add some file here so so now James can do me a favor",
    "start": "3343479",
    "end": "3352660"
  },
  {
    "text": "connection cleared up your your terminar just because some of the commands are going to the bottom and I'm not seeing",
    "start": "3352660",
    "end": "3357819"
  },
  {
    "text": "some of those yeah yeah absolutely no I appreciate the feedback yeah let me know whatever makes it easier to see what I'm",
    "start": "3357819",
    "end": "3363249"
  },
  {
    "text": "doing um so here you can see all my basic dagger setup and lambda and everything and my empty tweet processor",
    "start": "3363249",
    "end": "3370630"
  },
  {
    "text": "is is all in a commit so let's call this logging tweet processor okay and at this",
    "start": "3370630",
    "end": "3381729"
  },
  {
    "text": "point we know we have a clean working branch alright and we have committed all",
    "start": "3381729",
    "end": "3388209"
  },
  {
    "text": "this so IntelliJ stops complaining at me alright and it so yeah go ahead oh I was",
    "start": "3388209",
    "end": "3394539"
  },
  {
    "text": "just gonna say so IntelliJ is complaining because they can't find this stager app component but hopefully maven",
    "start": "3394539",
    "end": "3400299"
  },
  {
    "text": "should be happy let's let's check it out and see if it is her in the meantime that's actually doing it",
    "start": "3400299",
    "end": "3406569"
  },
  {
    "text": "what one thing I learned from a customer recently is about to get ignore there's",
    "start": "3406569",
    "end": "3412179"
  },
  {
    "text": "a website called git ignore that IO that you essentially say one of the operating systems you're going to be developing",
    "start": "3412179",
    "end": "3418089"
  },
  {
    "text": "what IDE is you're gonna be developing and what language and equates a big git",
    "start": "3418089",
    "end": "3423279"
  },
  {
    "text": "ignore for they're really really like lots of stuff in there yeah alright first error so component unscoped me not",
    "start": "3423279",
    "end": "3435910"
  },
  {
    "text": "reference scoped bindings so this is probably where I'm going to cheat and",
    "start": "3435910",
    "end": "3441640"
  },
  {
    "text": "look at my other example to see if I forgot some annotation oh so app",
    "start": "3441640",
    "end": "3447729"
  },
  {
    "text": "component doesn't just have component it has singleton on it so let's see if that",
    "start": "3447729",
    "end": "3453189"
  },
  {
    "text": "helps okay I'm gonna put this here and then",
    "start": "3453189",
    "end": "3459570"
  },
  {
    "text": "let's check our module real quick so that just says module and provides in singleton so let me see if that was",
    "start": "3459570",
    "end": "3467370"
  },
  {
    "text": "enough to fix it whoops may even not",
    "start": "3467370",
    "end": "3473790"
  },
  {
    "text": "moved they should they should create a up and we'd be like as drops yeah all",
    "start": "3473790",
    "end": "3481380"
  },
  {
    "text": "right so that dagger class now exists so if we look in target I want to see if we",
    "start": "3481380",
    "end": "3487680"
  },
  {
    "text": "can find it that's classes let's look at generated",
    "start": "3487680",
    "end": "3493110"
  },
  {
    "text": "sources okay so here is kind of the magic right that's at the bottom let me",
    "start": "3493110",
    "end": "3499170"
  },
  {
    "text": "show you again so here is you can see that under target generated sources",
    "start": "3499170",
    "end": "3505560"
  },
  {
    "text": "there's a new class that was generated by dagger called dagger app components now I can look at it and it's big",
    "start": "3505560",
    "end": "3515960"
  },
  {
    "text": "well okay it's not that big actually but this is all the dagger magic to wrap",
    "start": "3515960",
    "end": "3521460"
  },
  {
    "text": "things but you can see that that create method that I was talking about right up",
    "start": "3521460",
    "end": "3528150"
  },
  {
    "text": "here this free method is here and it's a",
    "start": "3528150",
    "end": "3533610"
  },
  {
    "text": "static method so I wasn't lying and it returns that interface that I defined so it is there and that's dagger doing its",
    "start": "3533610",
    "end": "3540930"
  },
  {
    "text": "magic you can see it also for the module itself it created this factory class I'm not gonna look at it it's it's it's a",
    "start": "3540930",
    "end": "3548970"
  },
  {
    "text": "lot of dagger magic and it's a pretty amazing honestly that all the build time logic it's really cool it's fun to look",
    "start": "3548970",
    "end": "3555360"
  },
  {
    "text": "through but let's not do that today we're building but I didn't have to make",
    "start": "3555360",
    "end": "3561510"
  },
  {
    "text": "a fix so I'm just gonna do a commit - a - - amends so that means - a means add",
    "start": "3561510",
    "end": "3568680"
  },
  {
    "text": "this to my what I'm going to commit a man means I'm just gonna add it to the last commit that I had so my logging",
    "start": "3568680",
    "end": "3574830"
  },
  {
    "text": "tweet processor what I love about this like these sweet streams is especially",
    "start": "3574830",
    "end": "3581760"
  },
  {
    "text": "this particular build on the server this is I can see every presenter has its own preferences I know I wouldn't use them",
    "start": "3581760",
    "end": "3588780"
  },
  {
    "text": "I wonder people love it and then it's just it's just so fun to see how every person do it differently and we all get",
    "start": "3588780",
    "end": "3595590"
  },
  {
    "text": "there at the end anyway yeah absolutely there's different styles and you know what works for one person may not work",
    "start": "3595590",
    "end": "3601710"
  },
  {
    "text": "for the other and that is completely okay I'm also get command-line user I'm a big command-line user other people",
    "start": "3601710",
    "end": "3607890"
  },
  {
    "text": "like there are some really amazing UI tools forget that people prefer using yeah I'm not going to I'm not kind of",
    "start": "3607890",
    "end": "3616110"
  },
  {
    "text": "you know make fun of anybody for that okay unless it's Chris no I'm just kidding I",
    "start": "3616110",
    "end": "3625400"
  },
  {
    "text": "actually not only crazy still there but we also have dart vendor Darth Vader actually what making a comments maybe we",
    "start": "3625400",
    "end": "3632280"
  },
  {
    "text": "should just use git push - force but actually actually deploy so you have so",
    "start": "3632280",
    "end": "3647580"
  },
  {
    "text": "I didn't have to write anything involving the Twitter API here because I have an app to take care of that for me",
    "start": "3647580",
    "end": "3654050"
  },
  {
    "text": "now let's so how do we actually deploy",
    "start": "3654050",
    "end": "3659100"
  },
  {
    "text": "so I have the AWS CLI installed I have a",
    "start": "3659100",
    "end": "3664920"
  },
  {
    "text": "profile that I created for twitch so I'm just gonna I use s3 LS just to make sure that I'm that it's working and right",
    "start": "3664920",
    "end": "3672540"
  },
  {
    "text": "account okay great so that's pointing to my account I'm s3 doesn't require a region but",
    "start": "3672540",
    "end": "3679140"
  },
  {
    "text": "let's just actually I think I set this beforehand but you can either specify a region parameter on your command line or",
    "start": "3679140",
    "end": "3686610"
  },
  {
    "text": "another thing you can do is send an environment very no and now every AWS",
    "start": "3686610",
    "end": "3694950"
  },
  {
    "text": "command is going to assume that so I will use my profile and and it's US East",
    "start": "3694950",
    "end": "3705780"
  },
  {
    "text": "one so now if I called something like CloudFormation and if you're ever wondering what the commands are they're",
    "start": "3705780",
    "end": "3712170"
  },
  {
    "text": "available you just type help and it shows you all the different command okay",
    "start": "3712170",
    "end": "3719760"
  },
  {
    "text": "sorry I know I'm flipping around pretty fast here but on the Paige there are different all the different applications you can do so if",
    "start": "3719760",
    "end": "3728339"
  },
  {
    "text": "I look at CloudFormation I can type CloudFormation and then just help and then it tells me all the",
    "start": "3728339",
    "end": "3733739"
  },
  {
    "text": "CloudFormation commands available so let's take a look at describe stacks for",
    "start": "3733739",
    "end": "3740099"
  },
  {
    "text": "example we find it here we go so now if I do describe stacks then this working",
    "start": "3740099",
    "end": "3747569"
  },
  {
    "text": "yes okay so I have some stacks available in my account",
    "start": "3747569",
    "end": "3753930"
  },
  {
    "text": "let me find formation yeah I like to set",
    "start": "3753930",
    "end": "3759930"
  },
  {
    "text": "up snippets see my ID especially because the confirmation package deploy and this",
    "start": "3759930",
    "end": "3765359"
  },
  {
    "text": "crap they usually have some nice little tricks with James path but yeah like I",
    "start": "3765359",
    "end": "3770519"
  },
  {
    "text": "said it's a preference thing which is cool yeah so what you can see here is that I've deployed from the server this",
    "start": "3770519",
    "end": "3776970"
  },
  {
    "text": "application repository this was actually for my last twitch stream I have the",
    "start": "3776970",
    "end": "3782069"
  },
  {
    "text": "Twitter event source and I have my retweet leaderboard which uses Twitter event source what I'm going to do is I'm",
    "start": "3782069",
    "end": "3788339"
  },
  {
    "text": "actually just going to repurpose this to use my new app so let's deploy so the",
    "start": "3788339",
    "end": "3794910"
  },
  {
    "text": "first step is let's actually deploy this so CloudFormation let me recall what my",
    "start": "3794910",
    "end": "3803940"
  },
  {
    "text": "buckets are I'm just going to use this one I have a one that I used for Sam",
    "start": "3803940",
    "end": "3810239"
  },
  {
    "text": "publishing in u.s. East one so I'm just going to copy that bucket down for",
    "start": "3810239",
    "end": "3816150"
  },
  {
    "text": "future reference so in CloudFormation",
    "start": "3816150",
    "end": "3821400"
  },
  {
    "text": "there's a command called package and this is used with Sam so let me take a",
    "start": "3821400",
    "end": "3827220"
  },
  {
    "text": "look at the help for this because I don't remember what the parameters are okay so you have to point to a template",
    "start": "3827220",
    "end": "3835019"
  },
  {
    "text": "file and then you have to provide an s3 bucket so I have my template file oh I",
    "start": "3835019",
    "end": "3844019"
  },
  {
    "text": "have to have completion yes all right template file and that's my Sam yeah mo",
    "start": "3844019",
    "end": "3850049"
  },
  {
    "text": "I have s3 buckets there it is and I did",
    "start": "3850049",
    "end": "3855960"
  },
  {
    "text": "copy that down though like I'd be the offensive I copied this down earlier and",
    "start": "3855960",
    "end": "3862049"
  },
  {
    "text": "let's see what happens here it's probably gonna air on me but let's see you should have an ounce but actually I",
    "start": "3862049",
    "end": "3869829"
  },
  {
    "text": "can buy the foods we just haven't okay so something happened where it uploaded to it uploaded some object to my s3",
    "start": "3869829",
    "end": "3878079"
  },
  {
    "text": "bucket and then it just spit out a new template so I think the way you normally",
    "start": "3878079",
    "end": "3883960"
  },
  {
    "text": "use it is you give it a output yeah I was just actually cheating and looking",
    "start": "3883960",
    "end": "3889359"
  },
  {
    "text": "at mine my snippets yeah so there's an",
    "start": "3889359",
    "end": "3896289"
  },
  {
    "text": "output template file and then and we'll call this we'll call this device like",
    "start": "3896289",
    "end": "3903400"
  },
  {
    "text": "yeah you can call it the employer my usually call mine's packaged IMO deploy",
    "start": "3903400",
    "end": "3910170"
  },
  {
    "text": "I like it sorry okay so this time it packaged it up and wrote",
    "start": "3910170",
    "end": "3919390"
  },
  {
    "text": "it and it even gives me this little tip it says okay AWS CloudFormation deploy template file and it gives me a really",
    "start": "3919390",
    "end": "3926349"
  },
  {
    "text": "long full path to my package demo and then stack name so it's going to allow me to create a stack so now I can deploy",
    "start": "3926349",
    "end": "3932950"
  },
  {
    "text": "a by creating a stack I did just realize that there's a problem with my template so I just employ it if you guys want to",
    "start": "3932950",
    "end": "3941289"
  },
  {
    "text": "see it but it's just gonna fail so my handler is to do which ah sorry my",
    "start": "3941289",
    "end": "3948579"
  },
  {
    "text": "handler wants to do I don't that is definitely not valid so what is the",
    "start": "3948579",
    "end": "3954160"
  },
  {
    "text": "handler well the handler is language dependence right but the handlers language dependent so this is the",
    "start": "3954160",
    "end": "3960999"
  },
  {
    "text": "handler that we want so the way to reference a java package is that we",
    "start": "3960999",
    "end": "3967450"
  },
  {
    "text": "actually have to we put the full name",
    "start": "3967450",
    "end": "3974609"
  },
  {
    "text": "for the full class name to the request handler let's see if I can type",
    "start": "3974700",
    "end": "3982890"
  },
  {
    "text": "processor yep so we we put the full name of the class and then we have to do",
    "start": "3984120",
    "end": "3991050"
  },
  {
    "text": "colon colon and then the method to call handle request so if you look in here",
    "start": "3991050",
    "end": "3999480"
  },
  {
    "text": "it's called handle request so that's what I'm typing in my Sam template okay",
    "start": "3999480",
    "end": "4005750"
  },
  {
    "text": "so that tells it this is the code bundle and then in that code bundle you're",
    "start": "4005750",
    "end": "4011180"
  },
  {
    "text": "going to look for this class and invoke this method in Java Runtime environment",
    "start": "4011180",
    "end": "4016280"
  },
  {
    "text": "I also just noticed in the meantime we're there the pod this is actually there's no policies in there maybe we",
    "start": "4016280",
    "end": "4022400"
  },
  {
    "text": "just comment that out for now sure yeah we find that later",
    "start": "4022400",
    "end": "4027860"
  },
  {
    "text": "yeah there's also really no environment variables here I should talk about",
    "start": "4027860",
    "end": "4033020"
  },
  {
    "text": "environment variables and what I do with that since we talked about structure a little bit because I don't think this",
    "start": "4033020",
    "end": "4038510"
  },
  {
    "text": "app is really going to use any so what I usually do and this is just my convention but I create a class called",
    "start": "4038510",
    "end": "4046130"
  },
  {
    "text": "env I see what you're doing and then",
    "start": "4046130",
    "end": "4053830"
  },
  {
    "text": "sorry this is kind of job of this practice but if it's just gonna be static helpers than you you make it so",
    "start": "4053830",
    "end": "4060920"
  },
  {
    "text": "you can instantiate it and it's final but let's say I have let's say I have an",
    "start": "4060920",
    "end": "4067520"
  },
  {
    "text": "environment variable that's whatever my",
    "start": "4067520",
    "end": "4075920"
  },
  {
    "text": "are so so the key is going to be",
    "start": "4075920",
    "end": "4083420"
  },
  {
    "text": "something called my bar and then let's say it's a number right so I like to use",
    "start": "4083420",
    "end": "4089270"
  },
  {
    "text": "Javas strong typing to to kind of handle that detail for me in the code so I",
    "start": "4089270",
    "end": "4094880"
  },
  {
    "text": "create this public static and then let's say it's supposed to be an integer and",
    "start": "4094880",
    "end": "4100400"
  },
  {
    "text": "then I might have something like my bar and then I'll say return injur percent",
    "start": "4100400",
    "end": "4111080"
  },
  {
    "text": "and then system Gedeon be my bar key",
    "start": "4111080",
    "end": "4117650"
  },
  {
    "text": "okay so this handle is kind of the parsing and you can put additional validation or some fallback behavior if",
    "start": "4117650",
    "end": "4124069"
  },
  {
    "text": "you want in here but I'm just keeping this one simple I usually keep them pretty simple but this is nice because",
    "start": "4124070",
    "end": "4129920"
  },
  {
    "text": "then from inside my code oh my other best practice is that I",
    "start": "4129920",
    "end": "4135080"
  },
  {
    "text": "don't put any of the details of like environment variable is a detail of kind of that we're using lambda and I don't",
    "start": "4135080",
    "end": "4141710"
  },
  {
    "text": "want that in my regular business logic so let's say I needed my var in this",
    "start": "4141710",
    "end": "4146839"
  },
  {
    "text": "class I would just create a constructor argument that takes my bar in let's say",
    "start": "4146840",
    "end": "4155359"
  },
  {
    "text": "I needed that for some reason okay let's",
    "start": "4155360",
    "end": "4162350"
  },
  {
    "text": "see I let's say I needed that for some reason I'll just do okay",
    "start": "4162350",
    "end": "4169430"
  },
  {
    "text": "I needed this so it's final which means that it needs to be passed in the constructor I could write a constructor",
    "start": "4169430",
    "end": "4176410"
  },
  {
    "text": "treat processor that takes this string my bar and this is all our fun job of",
    "start": "4176410",
    "end": "4182960"
  },
  {
    "text": "boilerplate stuff right I could write that or I could just use Lombok which",
    "start": "4182960",
    "end": "4189440"
  },
  {
    "text": "has a required or X constructor and boom it understands final means this is a",
    "start": "4189440",
    "end": "4194840"
  },
  {
    "text": "required argument so I'm going to create a constructor that takes that argument for you so this is why I use Lombok it",
    "start": "4194840",
    "end": "4200750"
  },
  {
    "text": "just really eliminates a lot of that boilerplate for you I was I was i I'm not gonna lie I was looking at the",
    "start": "4200750",
    "end": "4207020"
  },
  {
    "text": "boilerplate I was like wow okay and then I just just love how the IDL two",
    "start": "4207020",
    "end": "4213620"
  },
  {
    "text": "completes most of these pieces already yeah one box one of those things that you as soon as you start using it you're",
    "start": "4213620",
    "end": "4219440"
  },
  {
    "text": "like yeah this I'm not gonna stop using I could give this a try so but my point",
    "start": "4219440",
    "end": "4227420"
  },
  {
    "text": "here is that this has no knowledge of how it this is the whole dependency injection and inversion of control the",
    "start": "4227420",
    "end": "4234410"
  },
  {
    "text": "format that this just takes in this string it doesn't know where it comes from and what you can do is now in this",
    "start": "4234410",
    "end": "4240890"
  },
  {
    "text": "module now this requires a string right so now I can just say in V dot my bar",
    "start": "4240890",
    "end": "4247520"
  },
  {
    "text": "and that positivism so this keeps it I found this to be very clean oh except it's giving me in here",
    "start": "4247520",
    "end": "4254500"
  },
  {
    "text": "because I made this Australian and supposed to be in it it's actually pretty cool because you can then ended",
    "start": "4254500",
    "end": "4261010"
  },
  {
    "text": "up passing multiple environment arbors and still keeping an interface by clean yeah absolutely it keeps the code really",
    "start": "4261010",
    "end": "4267520"
  },
  {
    "text": "nice and clean so I used this and it also helps make it more readable because this env your your variable name if you",
    "start": "4267520",
    "end": "4274780"
  },
  {
    "text": "want to keep environment variable conventions it's like all caps and everything and rather than having system",
    "start": "4274780",
    "end": "4281950"
  },
  {
    "text": "dot Guinea and be sprinkled throughout your business logic you just have it all in this this dependency injection layer",
    "start": "4281950",
    "end": "4288010"
  },
  {
    "text": "and then your class just takes really simple parameters with it okay now the",
    "start": "4288010",
    "end": "4293920"
  },
  {
    "text": "last piece of the puzzle is I do sorry I'm jumping around a bit but this variable is supposed to be defined now",
    "start": "4293920",
    "end": "4301000"
  },
  {
    "text": "by default it'll be null but that's going to explode when I try to parse it as an integer so where this links up",
    "start": "4301000",
    "end": "4307750"
  },
  {
    "text": "with your Sam template is in your environment you can specify this variable and give it some value right",
    "start": "4307750",
    "end": "4315120"
  },
  {
    "text": "yeah so so now this will actually come",
    "start": "4315120",
    "end": "4322270"
  },
  {
    "text": "in as a string because environment variables are all strings this will come in as a string but my code is going to",
    "start": "4322270",
    "end": "4328360"
  },
  {
    "text": "parse it as an integer is going to parse it as an integer and that way I get",
    "start": "4328360",
    "end": "4333820"
  },
  {
    "text": "strong typing in my application so that's how I like to handle environment variables and using them in my app like",
    "start": "4333820",
    "end": "4341350"
  },
  {
    "text": "science I guess I guess for a few people who are seeing this for the first time there's definitely multiple places in",
    "start": "4341350",
    "end": "4346990"
  },
  {
    "text": "multiple ways of you using for configuration I like that approach and at the same time there's also draw",
    "start": "4346990",
    "end": "4353530"
  },
  {
    "text": "backward if you need to make a change of that configuration you need to trigger a new deployment and your packaging and",
    "start": "4353530",
    "end": "4358990"
  },
  {
    "text": "your deployment but there's definitely other ways as well so people for if you've never done this before if you're",
    "start": "4358990",
    "end": "4364660"
  },
  {
    "text": "on the tweet stream there's a cool really cool service code system manager parameter store that also does some of",
    "start": "4364660",
    "end": "4371590"
  },
  {
    "text": "those heavy lifting for you and there's also environmental variables for lambda itself but this is actually a feeling I",
    "start": "4371590",
    "end": "4378100"
  },
  {
    "text": "wanted really liked about this approach is how clean the interface looks like and you can reuse that somewhere else as",
    "start": "4378100",
    "end": "4383920"
  },
  {
    "text": "well not all day I left a handler yeah it's a nice reusable pattern and again",
    "start": "4383920",
    "end": "4389920"
  },
  {
    "text": "like I said it may seem like a lot at this face when this is all my business logic is you know I promise you for any",
    "start": "4389920",
    "end": "4397420"
  },
  {
    "text": "non-trivial application like its it becomes a really nice clean pattern anyway it's I I like it it works for me",
    "start": "4397420",
    "end": "4405010"
  },
  {
    "text": "and my teams okay so you should just just to make sure we are still in time",
    "start": "4405010",
    "end": "4410230"
  },
  {
    "text": "we have about 45 mins so we can definitely add get more details by the",
    "start": "4410230",
    "end": "4416140"
  },
  {
    "text": "way for those of you who haven't haven't done this yet we have a slack channel most of us are there already if not",
    "start": "4416140",
    "end": "4422380"
  },
  {
    "text": "everyone please join us we posted a link on the twitch in case I need to leave or",
    "start": "4422380",
    "end": "4428380"
  },
  {
    "text": "in case in when I watched it later hopefully gonna stay with wasn't you the end but if you want to catch ups later",
    "start": "4428380",
    "end": "4434500"
  },
  {
    "text": "about all of this stuff and probably more join us on this like channel please",
    "start": "4434500",
    "end": "4439600"
  },
  {
    "text": "yeah pretty please I just ran maven package to rebuild and re recreate my uber jar for this my",
    "start": "4439600",
    "end": "4447400"
  },
  {
    "text": "lamda jar and then I just reran my package command so now let's actually deploy this the CloudFormation deploy it",
    "start": "4447400",
    "end": "4457780"
  },
  {
    "text": "says template file and it wants me to point to my package demo file and then a",
    "start": "4457780",
    "end": "4465429"
  },
  {
    "text": "stack name let's call it tweets sentiments okay let's give it a shot",
    "start": "4465429",
    "end": "4471640"
  },
  {
    "text": "let's see what happens okay so the",
    "start": "4471640",
    "end": "4478330"
  },
  {
    "text": "meantime that I'm just can actually post at some of those pieces all your outputs doesn't have any resources any keys so",
    "start": "4478330",
    "end": "4484780"
  },
  {
    "text": "you know what I comment that out sure Bob unstuck breaks let's see alright",
    "start": "4484780",
    "end": "4494739"
  },
  {
    "text": "yeah so this hasn't a thing under it let's comment this out we will now I",
    "start": "4494739",
    "end": "4501370"
  },
  {
    "text": "don't have to rebuild in maven because because it's the codes is pretty much",
    "start": "4501370",
    "end": "4507790"
  },
  {
    "text": "the same yes now the food hasn't changed just the template has so I just",
    "start": "4507790",
    "end": "4513010"
  },
  {
    "text": "regenerated the template and then let's try deploying again let's see what happens yeah but if it's if this is the",
    "start": "4513010",
    "end": "4520739"
  },
  {
    "text": "first time for you actually seen confirmation package and Confirmation deploy oh you just need a flag you need",
    "start": "4520739",
    "end": "4527070"
  },
  {
    "text": "a capability so it's complaining and I just have to have those capabilities",
    "start": "4527070",
    "end": "4532429"
  },
  {
    "text": "capability I am yeah because your upper body cranium I actually you're Sam is",
    "start": "4532429",
    "end": "4537600"
  },
  {
    "text": "greater than I am role for you behind the scenes and adding informations you need like sending the logs to cloud",
    "start": "4537600",
    "end": "4544080"
  },
  {
    "text": "watch logs and everything so this created successfully and now let's actually watch it so here it is",
    "start": "4544080",
    "end": "4549420"
  },
  {
    "text": "tweet sentiment and cloud formation and yet as you alluded to even though it looks like a single resource there's",
    "start": "4549420",
    "end": "4556679"
  },
  {
    "text": "actually going to be multiple resources created in this template I won't open up the actual template but you can see the",
    "start": "4556679",
    "end": "4562199"
  },
  {
    "text": "transform template if you want to look here so if CloudFormation gives you all this",
    "start": "4562199",
    "end": "4567780"
  },
  {
    "text": "and we'll watch is it it's creating an I am role that's used by lambda 2 that's",
    "start": "4567780",
    "end": "4573929"
  },
  {
    "text": "assumed by lambda to invoke it and it's completed so now we have parts of the",
    "start": "4573929",
    "end": "4579270"
  },
  {
    "text": "function that doesn't do a whole lot but okay we have it deployed already it's",
    "start": "4579270",
    "end": "4584969"
  },
  {
    "text": "actually a good sign we are you know progressively getting better yeah so you can see the actual name of this lambda",
    "start": "4584969",
    "end": "4591270"
  },
  {
    "text": "function is CloudFormation generates the name a best practice for generating Sam",
    "start": "4591270",
    "end": "4599100"
  },
  {
    "text": "templates don't specify the name yourself if you hard code the name then",
    "start": "4599100",
    "end": "4604199"
  },
  {
    "text": "if somebody wants to deploy to different stacks with the same app the names will conflict so confirmation that's actually",
    "start": "4604199",
    "end": "4611219"
  },
  {
    "text": "a huge thing that they do for you is that they can generate names on a better unique yeah and even more recently if",
    "start": "4611219",
    "end": "4619020"
  },
  {
    "text": "you look at the at the top there's actually a blue message in there and saying that we're now automatically",
    "start": "4619020",
    "end": "4624570"
  },
  {
    "text": "detecting that the love the function belongs to a culture Matt confirmation stack and we even highlight that for you",
    "start": "4624570",
    "end": "4631080"
  },
  {
    "text": "yeah that's actually no there's no then there's no excuse of that one anymore so let's go ahead and test our function the",
    "start": "4631080",
    "end": "4637530"
  },
  {
    "text": "console makes it pretty easy to test I don't have a real tweet available but I",
    "start": "4637530",
    "end": "4643619"
  },
  {
    "text": "did say it just takes an array of strings right so let's create that is definitely not validations",
    "start": "4643619",
    "end": "4651190"
  },
  {
    "text": "that's creating a list of sorry it's",
    "start": "4651190",
    "end": "4657139"
  },
  {
    "text": "jumping around a bunch there I'll just",
    "start": "4657139",
    "end": "4664639"
  },
  {
    "text": "create this and then oops if you want to",
    "start": "4664639",
    "end": "4673610"
  },
  {
    "text": "know these are my official test strings that I like to use all the time I actually love this because I use blind",
    "start": "4673610",
    "end": "4680480"
  },
  {
    "text": "human all the time I keep trying to find new words but sounds like everyone follows black everywhere or fubar oh",
    "start": "4680480",
    "end": "4689440"
  },
  {
    "text": "alright runtime error occurred during Jason parsing stacktrace Jason mapping",
    "start": "4689440",
    "end": "4694969"
  },
  {
    "text": "let's see okay so there's a bunch of stuff here so under the covers lambda is",
    "start": "4694969",
    "end": "4700489"
  },
  {
    "text": "using Jackson to deserialize so that's the instance of string out of this",
    "start": "4700489",
    "end": "4706730"
  },
  {
    "text": "object okay so it doesn't like that it's a string so how about we make this a so",
    "start": "4706730",
    "end": "4716270"
  },
  {
    "text": "what it's I'm sorry that's my other app so what it's not liking is that I'm",
    "start": "4716270",
    "end": "4721340"
  },
  {
    "text": "trying to create a string and it sees a JSON object and so it gets angry now this is a place where Java gets a little",
    "start": "4721340",
    "end": "4727940"
  },
  {
    "text": "painful working with Jason so one thing I can do is say alright I know these are all gonna be on strings so I can create",
    "start": "4727940",
    "end": "4734989"
  },
  {
    "text": "this kind of generic ish thing and say it's a map of optics alright so here are",
    "start": "4734989",
    "end": "4741230"
  },
  {
    "text": "my tweets let's now it's complaining but the nice thing with IntelliJ is it can just fix",
    "start": "4741230",
    "end": "4748369"
  },
  {
    "text": "the problem so just change this outfit to take a map of tweets and now I let's",
    "start": "4748369",
    "end": "4754369"
  },
  {
    "text": "let's see if this works all right okay I don't know if I have installed but you would be cool for possibly for",
    "start": "4754369",
    "end": "4762260"
  },
  {
    "text": "the next episode to actually use some local so we could actually sort that fit",
    "start": "4762260",
    "end": "4767270"
  },
  {
    "text": "the particular feedback loop so we can see how absolutely you know I thought",
    "start": "4767270",
    "end": "4773030"
  },
  {
    "text": "about that this morning and it was like 30 minutes beforehand so",
    "start": "4773030",
    "end": "4778090"
  },
  {
    "text": "override or anything that method from the super type so it's not happy with my",
    "start": "4781809",
    "end": "4787420"
  },
  {
    "text": "handler and that's because that's because in my handler I say that it",
    "start": "4787420",
    "end": "4793780"
  },
  {
    "text": "takes a list of strings when it actually takes a list of that I changed it so",
    "start": "4793780",
    "end": "4799809"
  },
  {
    "text": "that should be design man alright I should have listened to IntelliJ anyway",
    "start": "4799809",
    "end": "4809130"
  },
  {
    "text": "okay so let's I'm just gonna do a clean and a package just to make sure we're good yeah let's confirmation package",
    "start": "4809219",
    "end": "4822130"
  },
  {
    "text": "this again so I'm just searching back in my history to do the same command and then let's do confirmation deploy and it",
    "start": "4822130",
    "end": "4833349"
  },
  {
    "text": "automatically since I have the same stack name it's just updating that stack with right so the stack already exists",
    "start": "4833349",
    "end": "4839289"
  },
  {
    "text": "and it's going to update our configuration here okay and this will",
    "start": "4839289",
    "end": "4847659"
  },
  {
    "text": "automatically wait for it to complete oh it complete it already sounds like it's done already yeah so I didn't really have to refresh",
    "start": "4847659",
    "end": "4855369"
  },
  {
    "text": "this page I'd say I'd say that is the first time I haven't yeah here we go",
    "start": "4855369",
    "end": "4862030"
  },
  {
    "text": "worked alright return value okay but I",
    "start": "4862030",
    "end": "4867159"
  },
  {
    "text": "actually wanted the log I wanted to know what was logged so what I can do in the",
    "start": "4867159",
    "end": "4872710"
  },
  {
    "text": "lambda console it actually has this really nice monitoring tab I use it all the time we can see the number of",
    "start": "4872710",
    "end": "4878349"
  },
  {
    "text": "implications that have happened you can actually jump to cloud watch metrics if you want to do more with these metrics",
    "start": "4878349",
    "end": "4884829"
  },
  {
    "text": "you can see how long that they took in milliseconds right now that's a little high because of that cold start time",
    "start": "4884829",
    "end": "4890920"
  },
  {
    "text": "right I just updated you'll see if I run it again super fast yeah alright so you",
    "start": "4890920",
    "end": "4896949"
  },
  {
    "text": "can see the difference I had that error from the first time I ran I had one",
    "start": "4896949",
    "end": "4901989"
  },
  {
    "text": "error but now I haven't had any sense and I can jump to the logs so this takes",
    "start": "4901989",
    "end": "4909460"
  },
  {
    "text": "me apply watch logs and I'm able to see here is my first",
    "start": "4909460",
    "end": "4915190"
  },
  {
    "text": "and then now let's see if I I'm not seeing my stuff so I'm not seeing my",
    "start": "4915190",
    "end": "4921220"
  },
  {
    "text": "logs so I'm using log4j - and I don't have any log4j - config that's set up so",
    "start": "4921220",
    "end": "4927970"
  },
  {
    "text": "that's something I need to add this one I'm totally gonna steal from my leaderboard app so under resources of",
    "start": "4927970",
    "end": "4935860"
  },
  {
    "text": "this log for day 2 and I will show you what it looks like but basically it adds",
    "start": "4935860",
    "end": "4945570"
  },
  {
    "text": "that's not very clear okay so basically it adds this there's a lambda appender",
    "start": "4945570",
    "end": "4951550"
  },
  {
    "text": "that's something that was that I got from and again this is all documented in AWS documentation I'm going to put the",
    "start": "4951550",
    "end": "4957700"
  },
  {
    "text": "date at the beginning AWS request ID and then my logs some extra information and our log levels set",
    "start": "4957700",
    "end": "4964600"
  },
  {
    "text": "to info for this okay so great let's let's try it again we just got a package",
    "start": "4964600",
    "end": "4973650"
  },
  {
    "text": "yet except well need to rego yeah so maven package so that my jar was updated",
    "start": "4973650",
    "end": "4980260"
  },
  {
    "text": "because this resource is actually put into the jar and then I'll do my CloudFormation package and the meantime",
    "start": "4980260",
    "end": "4988930"
  },
  {
    "text": "we're doing this there was a there was a comments very early in the day in the very twitch at this episode were a",
    "start": "4988930",
    "end": "4996100"
  },
  {
    "text": "person called David who hopefully is gonna be joining us now on slack chicken Sheena that conversation I was actually",
    "start": "4996100",
    "end": "5002070"
  },
  {
    "text": "mentioning about you know what's for all this bullsh wrapping maven package CLI",
    "start": "5002070",
    "end": "5008220"
  },
  {
    "text": "package CLI deploy in a way that becomes quite single is like museum make farm I use a make file almost all the time",
    "start": "5008220",
    "end": "5014700"
  },
  {
    "text": "other people ended up using show strips and it's something all of these pieces",
    "start": "5014700",
    "end": "5019860"
  },
  {
    "text": "can be automated as well we're actually showing you using the CLI commands for",
    "start": "5019860",
    "end": "5024990"
  },
  {
    "text": "now to actually make that easier you can see at the bottom there's a if you scroll that them again I could see that",
    "start": "5024990",
    "end": "5031440"
  },
  {
    "text": "there's a tweet processor my bar I'm just waiting for the strings you",
    "start": "5031440",
    "end": "5037110"
  },
  {
    "text": "actually update but I am quite sure I can see that now okay let me refresh",
    "start": "5037110",
    "end": "5042270"
  },
  {
    "text": "this",
    "start": "5042270",
    "end": "5044570"
  },
  {
    "text": "okay so you can see the log with my bar 42 and then the log with this is my my",
    "start": "5048660",
    "end": "5055210"
  },
  {
    "text": "array so great all right we have a tweet that we have this processor alright so",
    "start": "5055210",
    "end": "5062220"
  },
  {
    "text": "now that we have kind of this end-to-end experience I'm just going to minimize this because I keep accidentally go into",
    "start": "5062220",
    "end": "5068470"
  },
  {
    "text": "this one okay so now we have deployed and functioning it's just not doing what we set out to",
    "start": "5068470",
    "end": "5076450"
  },
  {
    "text": "do so now we need to actually do something with our process so I'm gonna remove this my bar thing because I don't",
    "start": "5076450",
    "end": "5083290"
  },
  {
    "text": "actually need it but I need to replace it with I need to make a call to comprehend so I'll start going a little",
    "start": "5083290",
    "end": "5090460"
  },
  {
    "text": "bit faster just because I feel like we've established kind of a general workflow here so now for our regular",
    "start": "5090460",
    "end": "5097390"
  },
  {
    "text": "dependencies I'm going to add a new dependency I don't remember I was I",
    "start": "5097390",
    "end": "5105150"
  },
  {
    "text": "don't remember the actual maven that's fine it's going to move in so I got",
    "start": "5105150",
    "end": "5113860"
  },
  {
    "text": "bigger I'm gonna search for AWS SDK and there's ica to be s SDK Java alright",
    "start": "5113860",
    "end": "5125220"
  },
  {
    "text": "here we go and then I'm going to search for comprehend and there it is so this",
    "start": "5125580",
    "end": "5134050"
  },
  {
    "text": "is my group ID and then I don't know if",
    "start": "5134050",
    "end": "5141820"
  },
  {
    "text": "it'll find it automatically for me let's look for comprehend I see preview in the name so I'm hoping",
    "start": "5141820",
    "end": "5148660"
  },
  {
    "text": "this I don't have to be wait-listed to preview this though but then the console shouldn't have worked so that's why I",
    "start": "5148660",
    "end": "5154570"
  },
  {
    "text": "think I'm okay and then latest version let me see all",
    "start": "5154570",
    "end": "5160260"
  },
  {
    "text": "yeah so I'll just go with this all right",
    "start": "5160260",
    "end": "5165990"
  },
  {
    "text": "and hopefully I can find it it's trying",
    "start": "5165990",
    "end": "5171700"
  },
  {
    "text": "to resolve the dependency right now you can do it",
    "start": "5171700",
    "end": "5179670"
  },
  {
    "text": "issued let me stop here to go works oh yay alright and then let's find out",
    "start": "5180720",
    "end": "5189670"
  },
  {
    "text": "first I started cloud watch so I definitely need cloud watch metrics oh",
    "start": "5189670",
    "end": "5195580"
  },
  {
    "text": "this is the preview of 2.0 oh I'm sorry you know what I need to go to the review",
    "start": "5195580",
    "end": "5202510"
  },
  {
    "text": "for the SDK yeah this is the developer preview for the sdk 2.0 and I don't know",
    "start": "5202510",
    "end": "5208150"
  },
  {
    "text": "we want to do that or do we want to I think I think we should not take that risk yeah that's that's not take change this",
    "start": "5208150",
    "end": "5214000"
  },
  {
    "text": "for this episode because we only have 30 minutes you know it's like so we hopefully we can leave that for another",
    "start": "5214000",
    "end": "5219430"
  },
  {
    "text": "episode or a follow up with that yeah absolutely I'm the SDK v2 is in preview right now",
    "start": "5219430",
    "end": "5225580"
  },
  {
    "text": "and it's there's some very exciting stuff with it um again I'm gonna go cheat and go to my other app and find",
    "start": "5225580",
    "end": "5232780"
  },
  {
    "text": "okay here's here's what the regular it is SDK anytime you do this let me just",
    "start": "5232780",
    "end": "5239320"
  },
  {
    "text": "actually main message every one of the on the twitch chats that I sent you a link to the the new version of the Java",
    "start": "5239320",
    "end": "5246880"
  },
  {
    "text": "SDK that actually cludes a lot of interesting things and one of them that I'm more excited for me at least of on a",
    "start": "5246880",
    "end": "5253420"
  },
  {
    "text": "performance perspective is that you can swap actually the HTTP client implementation so that should help a lot",
    "start": "5253420",
    "end": "5260260"
  },
  {
    "text": "from the bootstrapping perspective instead of using apache httpclient you can use something that's more",
    "start": "5260260",
    "end": "5266320"
  },
  {
    "text": "lightweight so for lambda that's actually a big boost yes and and it really makes a big difference and",
    "start": "5266320",
    "end": "5273630"
  },
  {
    "text": "actually cold start times it makes a big difference for Java it's very very",
    "start": "5273630",
    "end": "5279310"
  },
  {
    "text": "exciting okay so what did I need I need a comprehend all right there we go that",
    "start": "5279310",
    "end": "5284680"
  },
  {
    "text": "looks more stupid that looks stable now we check city makes my heart bean",
    "start": "5284680",
    "end": "5290740"
  },
  {
    "text": "actually goes lower now yeah it's not for you yeah all right 324 and you",
    "start": "5290740",
    "end": "5298000"
  },
  {
    "text": "should totally try the preview - it is very I'm not saying anything against the preview I just didn't want to take",
    "start": "5298000",
    "end": "5307150"
  },
  {
    "text": "cameras this was just not for today but we do great with it I could definitely",
    "start": "5307150",
    "end": "5312280"
  },
  {
    "text": "try that yeah watch metrics that sounds like what we need it's probably the same",
    "start": "5312280",
    "end": "5325169"
  },
  {
    "text": "ICSD cake cloud watch so actually that cloud watch metrics I think we'll try it",
    "start": "5325169",
    "end": "5331840"
  },
  {
    "text": "we'll try it actually I'm just gonna stay clutch and we'll see what happens yeah cuz that's not even popping up let",
    "start": "5331840",
    "end": "5339010"
  },
  {
    "text": "me see if I see oh it is there all right I should probably use that because that's actually what I wasn't and I mean in the",
    "start": "5339010",
    "end": "5344829"
  },
  {
    "text": "meantime you do your magic I'm just gonna replace to some of the comments in here yes so so there isn't that he",
    "start": "5344829",
    "end": "5351219"
  },
  {
    "text": "actually actually you need initialize in a faster way just because of the HTTP",
    "start": "5351219",
    "end": "5357099"
  },
  {
    "text": "client you don't you no longer have to do all of this heavy lifting for a hipster TTP connection pool etc while I",
    "start": "5357099",
    "end": "5364510"
  },
  {
    "text": "still have it there's a bunch of other stuff that Apache actually does behind the scenes that's actually quite CPU",
    "start": "5364510",
    "end": "5370719"
  },
  {
    "text": "intensive so if you actually cut that short and use something more lightweight when you try that that diversion - even",
    "start": "5370719",
    "end": "5378340"
  },
  {
    "text": "for the first request doing something really silly like a hello world or hello universe you're gonna see how much of",
    "start": "5378340",
    "end": "5383919"
  },
  {
    "text": "that difference actually makes if you make a call to let's say a fake JSON API",
    "start": "5383919",
    "end": "5389409"
  },
  {
    "text": "but something I normally use when I'm doing prototyping if you just make a simple API call for that that one using",
    "start": "5389409",
    "end": "5396909"
  },
  {
    "text": "the HTTP client you see how much of a difference that makes okay so what I've done here is I've",
    "start": "5396909",
    "end": "5402639"
  },
  {
    "text": "taken now my tweet processor needs comprehend in and needs clobb watch right so I can go over to my module so",
    "start": "5402639",
    "end": "5411999"
  },
  {
    "text": "now that's failing so I'm going to delete I really don't think I'm going to need environment variables so I'm just gonna get rid of this and then so now we",
    "start": "5411999",
    "end": "5420189"
  },
  {
    "text": "actually need we need those objects right so I need something Amazon sorry",
    "start": "5420189",
    "end": "5426519"
  },
  {
    "text": "I'll make this a me and Amazon Cloud watch I need a comprehend okay so I need those",
    "start": "5426519",
    "end": "5439780"
  },
  {
    "text": "so where will I get them well in dagger you can just create the methods that return it so I could either",
    "start": "5439780",
    "end": "5448059"
  },
  {
    "text": "well actually the simpler way to do it is I can actually just create them right",
    "start": "5448059",
    "end": "5455439"
  },
  {
    "text": "in here so the standard way and Java to",
    "start": "5455439",
    "end": "5461229"
  },
  {
    "text": "do this is to get a client builder and standard so still you're actually using",
    "start": "5461229",
    "end": "5466959"
  },
  {
    "text": "the opposite while you're using comprehends for Amazon called just in",
    "start": "5466959",
    "end": "5471999"
  },
  {
    "text": "case they both serve a C I don't know what to tell you that's fine",
    "start": "5471999",
    "end": "5477010"
  },
  {
    "text": "that's actually called live coding it looks really simple when you're doing it or when you're doing live every second",
    "start": "5477010",
    "end": "5483399"
  },
  {
    "text": "you look it looks like oh my god I just black out or whatever yeah okay so what",
    "start": "5483399",
    "end": "5496479"
  },
  {
    "text": "you'll notice here is normally you have to worry about providing credentials and providing a region and all these",
    "start": "5496479",
    "end": "5502269"
  },
  {
    "text": "different values the reason why I don't have to provide those here is because in",
    "start": "5502269",
    "end": "5507639"
  },
  {
    "text": "the lambda environment the SDK will actually just figure it all out so region will get set to the same",
    "start": "5507639",
    "end": "5514629"
  },
  {
    "text": "region that your lambda is executing in if you don't want that then you manually set it yeah when I call it in a",
    "start": "5514629",
    "end": "5520869"
  },
  {
    "text": "different region and and then the credentials it's actually the role that the lambda is assumed it'll it'll just",
    "start": "5520869",
    "end": "5527979"
  },
  {
    "text": "use the same role so whatever permissions you give that role and that's what we're going to run",
    "start": "5527979",
    "end": "5532989"
  },
  {
    "text": "into here that's what you're that you'll have your lambda will have those",
    "start": "5532989",
    "end": "5538989"
  },
  {
    "text": "permissions and these clients will be calling with those credentials so now I might week processors armed and ready if",
    "start": "5538989",
    "end": "5546399"
  },
  {
    "text": "I were doing this I've probably created these and I probably maybe create some proxy object over these but I'm actually",
    "start": "5546399",
    "end": "5552909"
  },
  {
    "text": "just not even going to do that for this okay so I've added all this but what does my tweet actually look like so I",
    "start": "5552909",
    "end": "5559179"
  },
  {
    "text": "want to take the text of the tweet right so before I deploy I have a working",
    "start": "5559179",
    "end": "5564999"
  },
  {
    "text": "lambda function right I have a working lambda function that logs whatever is",
    "start": "5564999",
    "end": "5570280"
  },
  {
    "text": "given it so I'm gonna wire it to the actual twitch",
    "start": "5570280",
    "end": "5577400"
  },
  {
    "text": "they're sorry not to which the actual tweet eventsource so let's take so this",
    "start": "5577400",
    "end": "5588200"
  },
  {
    "text": "is the Twitter event source has this let",
    "start": "5588200",
    "end": "5593540"
  },
  {
    "text": "me see here's the Twitter search polar and what you'll see is that has some",
    "start": "5593540",
    "end": "5598640"
  },
  {
    "text": "environment variables and oh my god don't look at my credentials I'm just kidding they're encrypted so",
    "start": "5598640",
    "end": "5603790"
  },
  {
    "text": "one of the reasons why I just my next my heartbeat would just went to the roof no",
    "start": "5603790",
    "end": "5609380"
  },
  {
    "text": "no so one of the reasons why I have this",
    "start": "5609380",
    "end": "5615320"
  },
  {
    "text": "pre deployed is because I didn't want to like encrypt my Twitter API credentials live which so these are already",
    "start": "5615320",
    "end": "5623600"
  },
  {
    "text": "encrypted the app supports decrypting them via kms there are alternative options and you should definitely",
    "start": "5623600",
    "end": "5630050"
  },
  {
    "text": "discuss that but the key here is that there is a tweet processor function name",
    "start": "5630050",
    "end": "5637700"
  },
  {
    "text": "and I can change that so I'm going to change it to be my sentiment metrics to",
    "start": "5637700",
    "end": "5644840"
  },
  {
    "text": "a function before I save it I'm gonna make sure I want my that kalsa yeah just",
    "start": "5644840",
    "end": "5653450"
  },
  {
    "text": "before I go in we could also change that the hashtag and we can use another hashtag like viewed on servers or",
    "start": "5653450",
    "end": "5659900"
  },
  {
    "text": "something yeah absolutely absolutely I was gonna actually the twitch audience you should come up with hashtags you",
    "start": "5659900",
    "end": "5666710"
  },
  {
    "text": "want me to search maybe it'll go terribly but let's figure it out would",
    "start": "5666710",
    "end": "5672650"
  },
  {
    "text": "be like tweeting make tweet face or something but so right now I have this",
    "start": "5672650",
    "end": "5677960"
  },
  {
    "text": "cloud watch event rule disabled and what that means is that my land is not getting invoked over and over all right",
    "start": "5677960",
    "end": "5684110"
  },
  {
    "text": "this is kind of a personal account",
    "start": "5684110",
    "end": "5688030"
  },
  {
    "text": "function if I'm not using it so so yeah I switched the tweet processor and I'm",
    "start": "5689710",
    "end": "5696320"
  },
  {
    "text": "going to save that configuration but nothing's going to happen because as you",
    "start": "5696320",
    "end": "5701900"
  },
  {
    "text": "can see it's not being invoked so I'm going to go ahead and enable that now sorry you just wanted me to change the",
    "start": "5701900",
    "end": "5708950"
  },
  {
    "text": "search to the hash sign yeah so right now let me try just server less and then there are additional",
    "start": "5708950",
    "end": "5717789"
  },
  {
    "text": "parameters that the the Twitter search actually can recognize and this - filter",
    "start": "5717789",
    "end": "5724570"
  },
  {
    "text": "native retweets what that means is that so in Twitter and Twitter's data model",
    "start": "5724570",
    "end": "5731469"
  },
  {
    "text": "if you retweet a tweet your retweet even though it doesn't look like it it's",
    "start": "5731469",
    "end": "5737530"
  },
  {
    "text": "considered its own tweet so this is thing don't return all of those individual tweets it's really like the",
    "start": "5737530",
    "end": "5744039"
  },
  {
    "text": "original it's credible so that's just additional flags and those are all",
    "start": "5744039",
    "end": "5749379"
  },
  {
    "text": "things that you can test out here so so",
    "start": "5749379",
    "end": "5754570"
  },
  {
    "text": "I got some ideas so from the check there's one which I like it's called Yolo all right all right so so if I just",
    "start": "5754570",
    "end": "5763329"
  },
  {
    "text": "wanted to test this so that - filter all that that is actually Twitter so yes",
    "start": "5763329",
    "end": "5768789"
  },
  {
    "text": "that filters these out so you can test out these things another one that I deleted that I had on there there's like",
    "start": "5768789",
    "end": "5774909"
  },
  {
    "text": "min retweets there's equals some number there's actually a lot of cool flags that there",
    "start": "5774909",
    "end": "5780340"
  },
  {
    "text": "is so try that's actually is Linda as a hashtag for now just just because or or",
    "start": "5780340",
    "end": "5787269"
  },
  {
    "text": "even viewed on servers and I can make some tweets from my accounts as well yeah I totally should have had you do",
    "start": "5787269",
    "end": "5793209"
  },
  {
    "text": "the try that first let me see if I'm",
    "start": "5793209",
    "end": "5800199"
  },
  {
    "text": "sorry lambda okay so we have tweets on",
    "start": "5800199",
    "end": "5806229"
  },
  {
    "text": "lambda or do you want a to be s lambda yeah that's that's actually go for - so",
    "start": "5806229",
    "end": "5813699"
  },
  {
    "text": "we can great so I'm gonna put that in yeah note to",
    "start": "5813699",
    "end": "5824829"
  },
  {
    "text": "self you're gonna you're going to test out the searches before I throw them in alright so it'll be lambda filtering out",
    "start": "5824829",
    "end": "5831789"
  },
  {
    "text": "native retweets and then I'll save this function I will enable okay so I mean",
    "start": "5831789",
    "end": "5839379"
  },
  {
    "text": "that let me get my tweet a Twitter already mm-hmm log ding yeah so hopefully what we",
    "start": "5839379",
    "end": "5847710"
  },
  {
    "text": "should see so I'm gonna just so again",
    "start": "5847710",
    "end": "5853410"
  },
  {
    "text": "it's every minute so we're going to wait to see an invocation and come in and",
    "start": "5853410",
    "end": "5862520"
  },
  {
    "text": "once we see that invocation we should then see oh I did want to kind of set a",
    "start": "5862850",
    "end": "5868380"
  },
  {
    "text": "bigger batch size but we'll save that for later I guess I just made a tweet",
    "start": "5868380",
    "end": "5876560"
  },
  {
    "text": "let's see I was trying to remember if",
    "start": "5876560",
    "end": "5883110"
  },
  {
    "text": "you can also force a a call from college I can also go so we got our first",
    "start": "5883110",
    "end": "5891020"
  },
  {
    "text": "invocation let's so that it aired Oh No all right let's see what happened oh I",
    "start": "5891020",
    "end": "5899790"
  },
  {
    "text": "know what happened actually so when you create this function it it didn't have",
    "start": "5899790",
    "end": "5905160"
  },
  {
    "text": "done the hash formations yeah so normally when you deploy it so normally",
    "start": "5905160",
    "end": "5910500"
  },
  {
    "text": "you wouldn't go in hacked the name the way that I did",
    "start": "5910500",
    "end": "5916340"
  },
  {
    "text": "so finally yes I'm not normally so but for those of you watching this mean",
    "start": "5917750",
    "end": "5924030"
  },
  {
    "text": "normally we would go to the same thing plating add additional privileges and permissions because we're short on time",
    "start": "5924030",
    "end": "5930900"
  },
  {
    "text": "we have plenty minutes before we finish we we just kind of make that little",
    "start": "5930900",
    "end": "5936030"
  },
  {
    "text": "change let's put this fight yeah so let me see what I have here yeah so this is",
    "start": "5936030",
    "end": "5942960"
  },
  {
    "text": "the invoke function and you can see that it's not a new function so you would",
    "start": "5942960",
    "end": "5949200"
  },
  {
    "text": "have to click on add it's policy you can change our JSON yeah so I'm going to put",
    "start": "5949200",
    "end": "5956820"
  },
  {
    "text": "my new preprocessor in here twits and Patricks",
    "start": "5956820",
    "end": "5962020"
  },
  {
    "text": "[Music]",
    "start": "5962020",
    "end": "5965209"
  },
  {
    "text": "alright ok so no just before we good",
    "start": "5968120",
    "end": "5975570"
  },
  {
    "text": "they permit dead lunda function we are calling for the tweets processor do we have permission to call Claude watch and",
    "start": "5975570",
    "end": "5981150"
  },
  {
    "text": "comprehend azaab I'm just actually we don't yet yeah I didn't even so I didn't",
    "start": "5981150",
    "end": "5987750"
  },
  {
    "text": "even upload those changes that I'd made not because I just have the function that logs and so what I want to do is",
    "start": "5987750",
    "end": "5994650"
  },
  {
    "text": "actually just log some tweets so I can see the agenda of the API is gotcha so",
    "start": "5994650",
    "end": "6005469"
  },
  {
    "text": "waiting on the okay here's another invoke let's see if it all right got a couple invokes Oh still getting",
    "start": "6007120",
    "end": "6014210"
  },
  {
    "text": "sexually hammering out yet so let's check it out live coding for the wind",
    "start": "6014210",
    "end": "6019340"
  },
  {
    "text": "yeah alright let's see what's happening here so still some authorization errors",
    "start": "6019340",
    "end": "6028060"
  },
  {
    "text": "so Twitter search Polar's not authorized to invoke function and let me just make",
    "start": "6028060",
    "end": "6034489"
  },
  {
    "text": "sure that I've got is that the same region I'm just actually cautious about region is fine yeah I usually maybe I",
    "start": "6034489",
    "end": "6040070"
  },
  {
    "text": "make those city things yeah it should be let me expand this it could just no this",
    "start": "6040070",
    "end": "6047420"
  },
  {
    "text": "doesn't seem like it's matching let me see",
    "start": "6047420",
    "end": "6052840"
  },
  {
    "text": "alright so I'm going to it's the same it",
    "start": "6054489",
    "end": "6065060"
  },
  {
    "text": "could just be delay it could just be a little bit of delay so what about yeah I was thinking what about having been",
    "start": "6065060",
    "end": "6070550"
  },
  {
    "text": "tying name instead of a wild card but I think one card is far fine yeah you've seen the wild card is there's so that",
    "start": "6070550",
    "end": "6077330"
  },
  {
    "text": "any version if you want to invoke a different version or an alias that you have on top of it that's really with us",
    "start": "6077330",
    "end": "6083420"
  },
  {
    "text": "therefore okay so so I'm going to go",
    "start": "6083420",
    "end": "6091580"
  },
  {
    "text": "ahead and direct invoke this yes I if",
    "start": "6091580",
    "end": "6096620"
  },
  {
    "text": "you click on the test you should be able to have a cloud watch if you click on the event template",
    "start": "6096620",
    "end": "6102320"
  },
  {
    "text": "there's a cloud watch schedule there should be a scheduled event here we go",
    "start": "6102320",
    "end": "6108710"
  },
  {
    "text": "okay that's a scheduled event that's create so now we can mimic club lunch",
    "start": "6108710",
    "end": "6122540"
  },
  {
    "text": "events okay looks like it's versatile the function succeeded great great so",
    "start": "6122540",
    "end": "6128239"
  },
  {
    "text": "now we can see maybe the metrics don't reflected yet but that one succeeded",
    "start": "6128239",
    "end": "6134690"
  },
  {
    "text": "let's see what happens here okay so now",
    "start": "6134690",
    "end": "6141530"
  },
  {
    "text": "we see eleven invokes that's still eleven failures let's check let's check",
    "start": "6141530",
    "end": "6147860"
  },
  {
    "text": "our in worst case we can just manually invoke it here but let's let's check our",
    "start": "6147860",
    "end": "6154429"
  },
  {
    "text": "other function and save that Wow was ever called right yeah and where's my",
    "start": "6154429",
    "end": "6160850"
  },
  {
    "text": "sentiment metrics all right here's my sentiment metrics and I can see that",
    "start": "6160850",
    "end": "6165949"
  },
  {
    "text": "it's been invoked a number of times in all this but it actually has some ears which is interesting",
    "start": "6165949",
    "end": "6172390"
  },
  {
    "text": "yeah those are alive coding all right",
    "start": "6172390",
    "end": "6178400"
  },
  {
    "text": "let's let's see so I can see the tweets",
    "start": "6178400",
    "end": "6188390"
  },
  {
    "text": "in there at least oh yeah there's this Linda okay so here's a to BOS lambda so",
    "start": "6188390",
    "end": "6197060"
  },
  {
    "text": "I do see that you're getting a Jacksonville Anand no no then I that's",
    "start": "6197060",
    "end": "6202520"
  },
  {
    "text": "just a warning or ISM and yeah it looks like an exception okay well at least",
    "start": "6202520",
    "end": "6211790"
  },
  {
    "text": "where this function is being called we are searching and we are actually signing those tweets should have",
    "start": "6211790",
    "end": "6217610"
  },
  {
    "text": "function from processing rate got halfway true okay all right so if we",
    "start": "6217610",
    "end": "6230239"
  },
  {
    "text": "can't instantiate that value so it's a it's really a serialization things so I think I'm gonna go cheat and",
    "start": "6230239",
    "end": "6236450"
  },
  {
    "text": "look at my other one and see what I did there because I definitely have handlers",
    "start": "6236450",
    "end": "6241910"
  },
  {
    "text": "that can process this there's my tweet processor I actually",
    "start": "6241910",
    "end": "6249350"
  },
  {
    "text": "take a list of strings there and then my handler actually does take a list of",
    "start": "6249350",
    "end": "6255740"
  },
  {
    "text": "strings so I'm going to change my tweet processor to just take a list of strings I remember that was blowing up before",
    "start": "6255740",
    "end": "6262850"
  },
  {
    "text": "but maybe there's something different about the structure of it and then my",
    "start": "6262850",
    "end": "6267860"
  },
  {
    "text": "processor accepts the list of strings and then what does it do so it actually",
    "start": "6267860",
    "end": "6275860"
  },
  {
    "text": "it actually filters those it creates this new tweet object so cool I'm just",
    "start": "6275860",
    "end": "6282410"
  },
  {
    "text": "gonna copy this over to my processor",
    "start": "6282410",
    "end": "6288040"
  },
  {
    "text": "yeah but by the way for those of you actually who are watching on this on this string don't worry you know all the",
    "start": "6288040",
    "end": "6295040"
  },
  {
    "text": "code that we actually use on those beads on Sutterville is are those those two extremes we actually share those source",
    "start": "6295040",
    "end": "6300830"
  },
  {
    "text": "code afters as well sometimes maybe not meet readily available on a database labs or a the best samples but we surely",
    "start": "6300830",
    "end": "6308840"
  },
  {
    "text": "actually share those those called out after that anyway okay so here's some",
    "start": "6308840",
    "end": "6316670"
  },
  {
    "text": "JSON dependencies that I need on with teasing I'm just gonna grab those over",
    "start": "6316670",
    "end": "6325630"
  },
  {
    "text": "told you I had a safety net okay all",
    "start": "6325630",
    "end": "6336410"
  },
  {
    "text": "right so this is actually a let's get ID",
    "start": "6336410",
    "end": "6343510"
  },
  {
    "text": "get close you can retweet caps so I'm going to look at my object here and find",
    "start": "6343510",
    "end": "6350360"
  },
  {
    "text": "actual text data",
    "start": "6350360",
    "end": "6355989"
  },
  {
    "text": "so I'm just gonna add a next I gotta",
    "start": "6359430",
    "end": "6366730"
  },
  {
    "text": "follow those formats okay so now I can",
    "start": "6366730",
    "end": "6377050"
  },
  {
    "text": "get text up here I'm going to have my lambda handler take I'm going to change",
    "start": "6377050",
    "end": "6383350"
  },
  {
    "text": "it back to digging a list of string I thought that's what I had taken before",
    "start": "6383350",
    "end": "6388530"
  },
  {
    "text": "yeah I actually remember that we chance to object we didn't get back at you string but that's that's fine okay so my",
    "start": "6392220",
    "end": "6401140"
  },
  {
    "text": "tweets I'm gonna go ahead and log again I'm just gonna grab this goes you know",
    "start": "6401140",
    "end": "6408310"
  },
  {
    "text": "if you've done it before that's a good thing",
    "start": "6408310",
    "end": "6414269"
  },
  {
    "text": "okay so I'm processing my tweets as JSON and it tells you how many are processing",
    "start": "6414750",
    "end": "6423100"
  },
  {
    "text": "and now at this point I will have a process for those caissons we're gonna",
    "start": "6423100",
    "end": "6433600"
  },
  {
    "text": "stream that to create a new tweet object",
    "start": "6433600",
    "end": "6439120"
  },
  {
    "text": "this parses it and then I need to create",
    "start": "6439120",
    "end": "6449340"
  },
  {
    "text": "actually I'll just do this and say for each processed each and I'll create that",
    "start": "6450090",
    "end": "6462250"
  },
  {
    "text": "method it's like there are of tweets and",
    "start": "6462250",
    "end": "6467430"
  },
  {
    "text": "sorry",
    "start": "6467430",
    "end": "6470430"
  },
  {
    "text": "okay so now I'm be in a place where I can just grab the text okay so what I",
    "start": "6478780",
    "end": "6486710"
  },
  {
    "text": "want to do is I want to call comprehends batch so actually I want to convert this",
    "start": "6486710",
    "end": "6494180"
  },
  {
    "text": "to text so and I'm going to do tweets",
    "start": "6494180",
    "end": "6502600"
  },
  {
    "text": "get text and then I'm actually just going to basically convert this too so",
    "start": "6502600",
    "end": "6514940"
  },
  {
    "text": "I'm going to pull the text out of the tweet right so I have the tweet text",
    "start": "6514940",
    "end": "6521000"
  },
  {
    "text": "list and then I'm going to convert that to a batch of so now we're going to say",
    "start": "6521000",
    "end": "6531010"
  },
  {
    "text": "comprehends batch detects sentiments and",
    "start": "6531010",
    "end": "6538730"
  },
  {
    "text": "I'll create a new request sorry I don't know why I have this screen like split",
    "start": "6538730",
    "end": "6544600"
  },
  {
    "text": "and we're going to say with text lists",
    "start": "6544600",
    "end": "6550000"
  },
  {
    "text": "and so I've never used this API so let's just see language code is should we",
    "start": "6550000",
    "end": "6558680"
  },
  {
    "text": "assume it's all in English I think we can just and maybe you get two or maybe you can help me out here if you look up",
    "start": "6558680",
    "end": "6564440"
  },
  {
    "text": "riehen documentation I was wondering if maybe you can tell me I'm guessing that parameter is optional and a little",
    "start": "6564440",
    "end": "6569750"
  },
  {
    "text": "auto-detect if I don't fill it in okay so there's the batch detects sentiment but I'm",
    "start": "6569750",
    "end": "6576350"
  },
  {
    "text": "going to put my tweet text list in here get a response out I'm just looking at",
    "start": "6576350",
    "end": "6584510"
  },
  {
    "text": "the docs right now so let's say so I'll",
    "start": "6584510",
    "end": "6591590"
  },
  {
    "text": "get a result list that gives me something I don't know what this is I'm guessing it's a list so so this returns",
    "start": "6591590",
    "end": "6601130"
  },
  {
    "text": "me a list of the text sentiment item results you actually have to pass",
    "start": "6601130",
    "end": "6607470"
  },
  {
    "text": "language as E and for English that that's not optional alright well we're",
    "start": "6607470",
    "end": "6613470"
  },
  {
    "text": "just gonna assume it's English which is not a great assumption to make but we're just gonna do the best we can I think",
    "start": "6613470",
    "end": "6619590"
  },
  {
    "text": "there's a separate API for for detecting language and so we could at first we",
    "start": "6619590",
    "end": "6627150"
  },
  {
    "text": "could yeah yes let me see if there's batch detect dominant language so there",
    "start": "6627150",
    "end": "6634860"
  },
  {
    "text": "is an API for detecting the on the dominant language but for now let's assume it's English and then we'll add",
    "start": "6634860",
    "end": "6641780"
  },
  {
    "text": "which I understand is insensitive but culturally insensitive for the process",
    "start": "6641780",
    "end": "6648570"
  },
  {
    "text": "of iterative development let's do that so we'll get the result list from here",
    "start": "6648570",
    "end": "6653970"
  },
  {
    "text": "and now those objects so I'm just doing this to see what's in here",
    "start": "6653970",
    "end": "6660260"
  },
  {
    "text": "so there's an index there's a sentiment and there's a sentiment score all we",
    "start": "6660680",
    "end": "6667080"
  },
  {
    "text": "really care about is the sentiment score let me see what that is so so I'm going",
    "start": "6667080",
    "end": "6676800"
  },
  {
    "text": "to pull up a plot the API reference yes",
    "start": "6676800",
    "end": "6695340"
  },
  {
    "text": "that one yep okay so now we're going to",
    "start": "6695340",
    "end": "6701640"
  },
  {
    "text": "detect sentiments and we're going to look at the response so sentiment score",
    "start": "6701640",
    "end": "6710790"
  },
  {
    "text": "okay so this is exactly what we saw in the UI so we saw mixed negative neutral and positive so hopefully this hopefully",
    "start": "6710790",
    "end": "6721110"
  },
  {
    "text": "this has some yeah okay so it has float values for each one of these I bet",
    "start": "6721110",
    "end": "6726150"
  },
  {
    "text": "there's even a method for that cool yep cool so what we want to do is we want to",
    "start": "6726150",
    "end": "6731670"
  },
  {
    "text": "convert this to request how much metrics request so let's see what Clow watches",
    "start": "6731670",
    "end": "6739600"
  },
  {
    "text": "I'm gonna comment this out for now and I think we're all doing this one in one big method which is the best practice",
    "start": "6739600",
    "end": "6745840"
  },
  {
    "text": "just kidding so we want to put metric data right and",
    "start": "6745840",
    "end": "6752620"
  },
  {
    "text": "that's going to take a put metric data requests and that'll have a collection",
    "start": "6752620",
    "end": "6757660"
  },
  {
    "text": "of metrics data okay so what I'll do is I'm going to grab our result list and",
    "start": "6757660",
    "end": "6769110"
  },
  {
    "text": "let me yeah let's do this on one thing",
    "start": "6769110",
    "end": "6774730"
  },
  {
    "text": "but basically going to map it to two",
    "start": "6774730",
    "end": "6781140"
  },
  {
    "text": "metric data and probably flat appetit",
    "start": "6781140",
    "end": "6790840"
  },
  {
    "text": "well let's let's just try this first I think we're going to end up with a collection of collections but unless so",
    "start": "6790840",
    "end": "6801670"
  },
  {
    "text": "what we want is what is this one one",
    "start": "6801670",
    "end": "6807250"
  },
  {
    "text": "this parameter wants the collection of metric data specific about this so",
    "start": "6807250",
    "end": "6824890"
  },
  {
    "text": "here's a sentiment item results we live long names in Java so we're going to",
    "start": "6824890",
    "end": "6834940"
  },
  {
    "text": "collect this to a list okay so there's our request so what what that's doing is",
    "start": "6834940",
    "end": "6842680"
  },
  {
    "text": "sticking it's putting metric data into cloud watch and it's taking the result",
    "start": "6842680",
    "end": "6849130"
  },
  {
    "text": "of the sentiment score analysis and it's turning it into a list of metrics to return okay let's see so now I have to",
    "start": "6849130",
    "end": "6861280"
  },
  {
    "text": "convert this sentiment item result into metrics so let's see what this takes",
    "start": "6861280",
    "end": "6870690"
  },
  {
    "text": "this actions so we're gonna call this I",
    "start": "6870800",
    "end": "6880580"
  },
  {
    "text": "guess we can just do these as separate metrics those thinking dimensions so what we can do is yeah let's we could",
    "start": "6880580",
    "end": "6892500"
  },
  {
    "text": "actually keep it simply just a simple like tweeter does that I mention and then a metric name a yeah sentiment or",
    "start": "6892500",
    "end": "6901230"
  },
  {
    "text": "something let's let's say sorry we'll",
    "start": "6901230",
    "end": "6906840"
  },
  {
    "text": "just say the positive score all right so",
    "start": "6906840",
    "end": "6912540"
  },
  {
    "text": "we won't do dimensions right now we'll do statistic values timestamp timestamp",
    "start": "6912540",
    "end": "6921900"
  },
  {
    "text": "we'll just use air actually well if we",
    "start": "6921900",
    "end": "6928739"
  },
  {
    "text": "wanted to be really good about it we could do okay so if we wanted to we",
    "start": "6928739",
    "end": "6942570"
  },
  {
    "text": "could use the tweet timestamp which might be a little bit better but let's not let's just say this is as of now so",
    "start": "6942570",
    "end": "6950969"
  },
  {
    "text": "we have a metric name we have a timestamp we are not going to use dimensions we are going to use a new",
    "start": "6950969",
    "end": "6958830"
  },
  {
    "text": "statistics set and we're just going to",
    "start": "6958830",
    "end": "6965370"
  },
  {
    "text": "say the sum is this sorry can't handle",
    "start": "6965370",
    "end": "6973350"
  },
  {
    "text": "the giant name so the net result get",
    "start": "6973350",
    "end": "6979160"
  },
  {
    "text": "sentiment score get positive so this will be our positive let's see if we can",
    "start": "6979160",
    "end": "6989310"
  },
  {
    "text": "make that into a double yes yes okay cool count so we have we have",
    "start": "6989310",
    "end": "6997230"
  },
  {
    "text": "converted a idem result now this sentiment result contains multiple is like positive score",
    "start": "6997230",
    "end": "7002949"
  },
  {
    "text": "neutral negative right I just pulling out positive because otherwise I'll end up with a list of lists and there is a",
    "start": "7002949",
    "end": "7009610"
  },
  {
    "text": "way to flatten them but off the top of my head I'm not remembering so let's start here and then we can always enhance and make it better so what this",
    "start": "7009610",
    "end": "7016960"
  },
  {
    "text": "is doing is it's receiving a batch of tweets it's sending that batch to comprehend to detect the sentiment as",
    "start": "7016960",
    "end": "7023830"
  },
  {
    "text": "English it's assuming English and then it's taking that result and it's",
    "start": "7023830",
    "end": "7028960"
  },
  {
    "text": "converting it into the positive statistic into metric to cloud watch and",
    "start": "7028960",
    "end": "7034179"
  },
  {
    "text": "then it's sending it to cloud watch okay the other thing that you have alluded to many times is that we need permissions",
    "start": "7034179",
    "end": "7041739"
  },
  {
    "text": "and so we need permissions to call comprehend and one way is to kind of manually create policies but the",
    "start": "7041739",
    "end": "7050260"
  },
  {
    "text": "serverless application let's see so the",
    "start": "7050260",
    "end": "7057130"
  },
  {
    "text": "Sam github has so Sam provides a really",
    "start": "7057130",
    "end": "7066010"
  },
  {
    "text": "cool feature called policy templates policy templates give you there we go so",
    "start": "7066010",
    "end": "7073540"
  },
  {
    "text": "it gives you this named policy that you can just use and it'll expand it Sam",
    "start": "7073540",
    "end": "7080920"
  },
  {
    "text": "will expand it into this so you can see that there's a comprehend basic access policy and it gives you the ability to",
    "start": "7080920",
    "end": "7087100"
  },
  {
    "text": "and and hopefully batch detects sentiment is one of them so we can go to",
    "start": "7087100",
    "end": "7093730"
  },
  {
    "text": "our Sam template and we can add this policy I'm going to cheat and double",
    "start": "7093730",
    "end": "7100510"
  },
  {
    "text": "check my other template just to make sure I'm doing this right yes okay so",
    "start": "7100510",
    "end": "7107730"
  },
  {
    "text": "now you may say that sounds like AWS manage policies and for this particular",
    "start": "7107730",
    "end": "7114130"
  },
  {
    "text": "policy it's very similar but where it becomes so AWS management policies are",
    "start": "7114130",
    "end": "7121390"
  },
  {
    "text": "very helpful but for example there's a DynamoDB read-only and the resource on",
    "start": "7121390",
    "end": "7127390"
  },
  {
    "text": "it is set to star that means that that lambda function has permission to read any dinamo table in your table right and",
    "start": "7127390",
    "end": "7134530"
  },
  {
    "text": "so these give tighter restrictions you can see here's a dynamo policy for Becca to restore from Becca",
    "start": "7134530",
    "end": "7141790"
  },
  {
    "text": "and you can see that the resource is constrained so this policy template has",
    "start": "7141790",
    "end": "7147250"
  },
  {
    "text": "a parameter called table name and you can give it you can fill in the parameter and you can see it constrains",
    "start": "7147250",
    "end": "7153340"
  },
  {
    "text": "the resource down to only that table in this account in this region so it grinds",
    "start": "7153340",
    "end": "7159190"
  },
  {
    "text": "it down for you so that's a it's actually a pretty nice security feature of Sam to allow you to better scope your",
    "start": "7159190",
    "end": "7168280"
  },
  {
    "text": "image so sorry for code you started just because of our own time if writing trust any more details about the policies I've",
    "start": "7168280",
    "end": "7175030"
  },
  {
    "text": "sent you a link exactly what in the docs we go through this and there's a bunch",
    "start": "7175030",
    "end": "7180040"
  },
  {
    "text": "of other policies in there they're quite helpful explains about emitters how to use it and how to use that in the same",
    "start": "7180040",
    "end": "7186670"
  },
  {
    "text": "thing plate as well and if you watched for the previous episodes as well about Sam we open-source the entire thing so",
    "start": "7186670",
    "end": "7194500"
  },
  {
    "text": "you can even start helping us and contribute to you the project if you wanted to and if you are still learning",
    "start": "7194500",
    "end": "7200560"
  },
  {
    "text": "about the project itself I also follow along there's actually other episodes about just the Sam open sourcing with",
    "start": "7200560",
    "end": "7207130"
  },
  {
    "text": "Sanath the one yeah one of the man behind actually the Sam alright let's",
    "start": "7207130",
    "end": "7212650"
  },
  {
    "text": "see if we can get to a point some billion now if done successfully we're",
    "start": "7212650",
    "end": "7220120"
  },
  {
    "text": "going to repackage it and deploy it",
    "start": "7220120",
    "end": "7223890"
  },
  {
    "text": "and like I said there may be some permissions issues still I don't know if there's still permissions issue on let's",
    "start": "7234820",
    "end": "7241940"
  },
  {
    "text": "check how we're doing sorry I know I'm flipping through this pretty quickly let me check how we're doing on our",
    "start": "7241940",
    "end": "7247250"
  },
  {
    "text": "polar advantage and sand another tweaks just",
    "start": "7247250",
    "end": "7253400"
  },
  {
    "text": "in case so it looks like that issue got fixed so I can see 30 in most of this",
    "start": "7253400",
    "end": "7258890"
  },
  {
    "text": "polar and then I can see only 11 errors so it looks like the I am change kicked",
    "start": "7258890",
    "end": "7265490"
  },
  {
    "text": "in and now we're successfully getting our tweet processor called and if I look",
    "start": "7265490",
    "end": "7271130"
  },
  {
    "text": "at our actual tweet sentiment thing you can see it's been called many many times it's just being called the Twitter",
    "start": "7271130",
    "end": "7278420"
  },
  {
    "text": "search polar batches them in batches of 15 and then async invokes lambda I'm",
    "start": "7278420",
    "end": "7283970"
  },
  {
    "text": "still getting these errors but I just deployed so we just deployed our new",
    "start": "7283970",
    "end": "7289810"
  },
  {
    "text": "usually failed on deployment I think it was something with the Sam templates or something like this mmm don't you the",
    "start": "7289810",
    "end": "7298340"
  },
  {
    "text": "confirmation console we should be able to see why I failed but yeah definitely they see a live but",
    "start": "7298340",
    "end": "7303710"
  },
  {
    "text": "just because it's quicker we are a little bit past the time but let's let's practice on all right so there was a",
    "start": "7303710",
    "end": "7310160"
  },
  {
    "text": "rollback yeah let's find our events on",
    "start": "7310160",
    "end": "7316030"
  },
  {
    "text": "the comprehends basic access policy is not fun it's oh okay well it is using",
    "start": "7316030",
    "end": "7323720"
  },
  {
    "text": "Sam so yeah worst case I can just use a custom policy but I was hoping to use",
    "start": "7323720",
    "end": "7332060"
  },
  {
    "text": "that feature okay so but let me go ahead",
    "start": "7332060",
    "end": "7338510"
  },
  {
    "text": "and do that I was looking for a quick",
    "start": "7338510",
    "end": "7343820"
  },
  {
    "text": "access pod is for you right now in the meantime yeah so do you have I have I",
    "start": "7343820",
    "end": "7351140"
  },
  {
    "text": "have an additional policy as an example and see where I can send it over to you",
    "start": "7351140",
    "end": "7357250"
  },
  {
    "text": "if you got you yeah yeah you can go to Sam but if you there's also a cookie",
    "start": "7357580",
    "end": "7362659"
  },
  {
    "text": "cutter that I could actually you speed those stuff up mm-hmm so if you go to",
    "start": "7362659",
    "end": "7367820"
  },
  {
    "text": "github either breath samples",
    "start": "7367820",
    "end": "7371860"
  },
  {
    "text": "give her be the best - samples cookie cutter I'm gonna post a cookie cutter -",
    "start": "7374860",
    "end": "7382639"
  },
  {
    "text": "in the blasts - Sam - Python mm-hmm is",
    "start": "7382639",
    "end": "7389389"
  },
  {
    "text": "it cookie - good you're an awl there's an ad there's a typo in there here you go so if you open",
    "start": "7389389",
    "end": "7397280"
  },
  {
    "text": "up the templates cookie cutter project slug there's a folder in there yeah open",
    "start": "7397280",
    "end": "7402620"
  },
  {
    "text": "up template da mo at the bottom there's a policy that I added in case you need",
    "start": "7402620",
    "end": "7408770"
  },
  {
    "text": "for it so to keep it clean you see the first function additional permission also copy that and we can change the",
    "start": "7408770",
    "end": "7416210"
  },
  {
    "text": "role to match the function I can help you with that mmm okay I should be able to just pass",
    "start": "7416210",
    "end": "7421250"
  },
  {
    "text": "statements in there but I think we're out of time on it and yeah I'm concerned if I switch it to just this permission",
    "start": "7421250",
    "end": "7427190"
  },
  {
    "text": "because where does this get reverenced so I say if you actually so basically what we're going to do we have to say",
    "start": "7427190",
    "end": "7434360"
  },
  {
    "text": "comprehends and then wild card for a star for all the actions and resource start just for now",
    "start": "7434360",
    "end": "7442000"
  },
  {
    "text": "mmm see unless you have one already so there should be some examples in here",
    "start": "7442000",
    "end": "7449260"
  },
  {
    "text": "whooping anyway this one I think this does a lot of it for you I do have one",
    "start": "7449260",
    "end": "7457159"
  },
  {
    "text": "in my encryption proxy but again that's gonna use an IM roller and everything right that's policy to include",
    "start": "7457159",
    "end": "7467650"
  },
  {
    "text": "that's what I'm looking for all I see is",
    "start": "7470820",
    "end": "7477250"
  },
  {
    "text": "you once you pass any line focusing okay yeah okay like that apparently I hope it",
    "start": "7477250",
    "end": "7496930"
  },
  {
    "text": "likes the put metric policy you but guess what I'll just just flag is a",
    "start": "7496930",
    "end": "7509860"
  },
  {
    "text": "cloud watch just because we're out of",
    "start": "7509860",
    "end": "7518290"
  },
  {
    "text": "time I was thinking I'm just using just don't placate that I just use cloud watch star mmm-hmm let's see and",
    "start": "7518290",
    "end": "7529500"
  },
  {
    "text": "comprehend star just for the sake of it now absolutely and then oops",
    "start": "7529500",
    "end": "7537100"
  },
  {
    "text": "yeah star and so he does for cloud watch that's what we need yeah so you we get",
    "start": "7537100",
    "end": "7543040"
  },
  {
    "text": "it working okay all right let's try that",
    "start": "7543040",
    "end": "7548760"
  },
  {
    "text": "fingers crossed everyone there but",
    "start": "7548760",
    "end": "7560199"
  },
  {
    "text": "that's okay so our packaging that up beard succeeds",
    "start": "7560199",
    "end": "7565440"
  },
  {
    "text": "package with dad and lasted boy",
    "start": "7565440",
    "end": "7573420"
  },
  {
    "text": "all right fingers crossed let's actually let's go to the console and see if that worked",
    "start": "7586760",
    "end": "7592050"
  },
  {
    "text": "yeah because the polling may take about two or three seconds okay progress I'm",
    "start": "7592050",
    "end": "7602340"
  },
  {
    "text": "here with all my prayers here we go all",
    "start": "7602340",
    "end": "7610920"
  },
  {
    "text": "right so I'm just going to manually invoke this test method x hey looks like",
    "start": "7610920",
    "end": "7620340"
  },
  {
    "text": "I'm working okay it's a little difficult to tell okay so let's jump logs let's",
    "start": "7620340",
    "end": "7635640"
  },
  {
    "text": "see if let's cut that down and the",
    "start": "7635640",
    "end": "7641130"
  },
  {
    "text": "latest one I can see Jackson complaining about something but I can see their",
    "start": "7641130",
    "end": "7646380"
  },
  {
    "text": "tweets yeah well that's still the old failures we were just having and try I",
    "start": "7646380",
    "end": "7655680"
  },
  {
    "text": "think there's just castle of these so",
    "start": "7655680",
    "end": "7661400"
  },
  {
    "text": "when you t see right now switch to just",
    "start": "7661460",
    "end": "7667590"
  },
  {
    "text": "put 7:00 p.m. or something or actually yeah 10:10 a.m. your time I bet I'm just looking at my sorry find something here",
    "start": "7667590",
    "end": "7687710"
  },
  {
    "text": "another way that we can tell if it's working is just to look at the metrics yeah I was about about to say that I",
    "start": "7687710",
    "end": "7694500"
  },
  {
    "text": "could see some of the logs that this is looking forward to for that one so you",
    "start": "7694500",
    "end": "7702390"
  },
  {
    "text": "actually have a name I actually have a name of that is that positive you know well I don't actually have a name space",
    "start": "7702390",
    "end": "7708330"
  },
  {
    "text": "on my so it's probably going to fail because I need a name space when I'm",
    "start": "7708330",
    "end": "7715770"
  },
  {
    "text": "calling what I'm calling this so I gave it the",
    "start": "7715770",
    "end": "7720920"
  },
  {
    "text": "metric data but I probably have to give it a name space let's see if there's",
    "start": "7720920",
    "end": "7731150"
  },
  {
    "text": "anything else I have to do so that's credentials yeah I think I have to give it a name space so it's probably a validation error happening",
    "start": "7731150",
    "end": "7739389"
  },
  {
    "text": "okay okay",
    "start": "7739389",
    "end": "7760719"
  },
  {
    "text": "cool okay let's see how the joys of",
    "start": "7770030",
    "end": "7776610"
  },
  {
    "text": "coding there's this great yummy that i retweeted a couple days ago that just i loved it because it said so the two",
    "start": "7776610",
    "end": "7783209"
  },
  {
    "text": "states of every programmer and one of them was i am a god and the other one was I have no idea what I'm doing I",
    "start": "7783209",
    "end": "7796379"
  },
  {
    "text": "think I think I was falling from from the from different angles I was season",
    "start": "7796379",
    "end": "7801539"
  },
  {
    "text": "me and I became a developer I follow blah etc and I used to that the beginning was like why Disney isn't",
    "start": "7801539",
    "end": "7806849"
  },
  {
    "text": "working she why this is working you shouldn't be working it's actually that",
    "start": "7806849",
    "end": "7813300"
  },
  {
    "text": "was another one it was it was my code works and I did error my code doesn't",
    "start": "7813300",
    "end": "7818789"
  },
  {
    "text": "work and I don't understand why and then there was another one that was my code works and I don't understand if you do a",
    "start": "7818789",
    "end": "7826320"
  },
  {
    "text": "hard refresh in there because Claudel they call so maybe maybe catching try searching for the metric name I think",
    "start": "7826320",
    "end": "7834599"
  },
  {
    "text": "was positive score or something or maybe just positive because it's like there's",
    "start": "7834599",
    "end": "7843449"
  },
  {
    "text": "some metric that will open up on the left-hand side but it's not there yet I think it's just a layman's show there",
    "start": "7843449",
    "end": "7850649"
  },
  {
    "text": "may be some other area that's going on in the lambda so what do you think we're way over time should we just call yeah",
    "start": "7850649",
    "end": "7855769"
  },
  {
    "text": "because we're over time right now I think what we could do it's up to you an output up to the audience on the stream",
    "start": "7855769",
    "end": "7862019"
  },
  {
    "text": "we could actually have a follow-up on that one and we could continue in another episode",
    "start": "7862019",
    "end": "7867059"
  },
  {
    "text": "still this month we just find a quick day that worked from all of us and then we we just crack on it down yeah keep",
    "start": "7867059",
    "end": "7874800"
  },
  {
    "text": "going on this I'm I am planning to publish this as an app to the service application repository as soon as we",
    "start": "7874800",
    "end": "7881219"
  },
  {
    "text": "find whatever bug is calling this maybe it's still some tweet serialization issue I just very rapidly copied",
    "start": "7881219",
    "end": "7887789"
  },
  {
    "text": "something over from my other app so there could be a bug there but yeah yeah I'm happy to either follow up on this or",
    "start": "7887789",
    "end": "7893939"
  },
  {
    "text": "I'll just fix it and publish it and people can look at it there but yep yeah",
    "start": "7893939",
    "end": "7899399"
  },
  {
    "text": "so I was actually looking at people were actually at the beginning and what we could do is let's actually",
    "start": "7899399",
    "end": "7905340"
  },
  {
    "text": "have as a follow-up discussion I believe we should have a second episode on this too because to do that this month if a",
    "start": "7905340",
    "end": "7911130"
  },
  {
    "text": "gender permits it's primarily to show I think it's nice for people to see how the troubleshooting works and because",
    "start": "7911130",
    "end": "7917550"
  },
  {
    "text": "this is actually a live coding as well how all of this can happen in the same place anyway we we could also use some",
    "start": "7917550",
    "end": "7924329"
  },
  {
    "text": "local to do some of those tests in the next episode let's say I think we I think they were all just actually",
    "start": "7924329",
    "end": "7929760"
  },
  {
    "text": "deserves a follow-up and let's actually do this as a follow-up and then we can fix it we can fix it live and we can",
    "start": "7929760",
    "end": "7936599"
  },
  {
    "text": "show what went wrong and then everyone learns all right I'll commit this is",
    "start": "7936599",
    "end": "7941880"
  },
  {
    "text": "live stream number one fair unless that's not that big downer and everyone",
    "start": "7941880",
    "end": "7948539"
  },
  {
    "text": "knows what a big holding is actually stuff fun to do fix bugs alright until",
    "start": "7948539",
    "end": "7955110"
  },
  {
    "text": "next time okay no problem so everyone thanks for watching to be them service",
    "start": "7955110",
    "end": "7960449"
  },
  {
    "text": "this was episode number three we would do a follow-up on this one she fixed what we just encountered we don't know",
    "start": "7960449",
    "end": "7966269"
  },
  {
    "text": "yet what it is but we'll fix it as usual and then we will get you a link to where",
    "start": "7966269",
    "end": "7972389"
  },
  {
    "text": "the next session is going to be please join us on slack Channel we're always discussing these pieces perhaps even if",
    "start": "7972389",
    "end": "7978659"
  },
  {
    "text": "we already fix this in the meantime the session how it haven't happened yet we can post a link to the application anyway and then we can also post a link",
    "start": "7978659",
    "end": "7986729"
  },
  {
    "text": "to where the events that episode's going to happen but for now thanks for watching",
    "start": "7986729",
    "end": "7992179"
  },
  {
    "text": "apologize you've done everything went perfectly well but at least I hope you learned some of the tricky lessons",
    "start": "7992179",
    "end": "7998070"
  },
  {
    "text": "learned on troubleshooting especially having James doing the troubleshooting live for me that was actually awesome to",
    "start": "7998070",
    "end": "8004429"
  },
  {
    "text": "see how he would think it and it's fun yeah it's like that yeah I don't mind I mean this is real",
    "start": "8004429",
    "end": "8010849"
  },
  {
    "text": "development right this is how development works things do not go smoothly you have bugs you have issues you have to fix it and yeah and you're",
    "start": "8010849",
    "end": "8017959"
  },
  {
    "text": "generally under a tight timeline right so I think we cut all those elements yeah I think that I think I wouldn't",
    "start": "8017959",
    "end": "8024889"
  },
  {
    "text": "like if the episode went perfectly well and that's why the series is called the build on servers we're gonna build",
    "start": "8024889",
    "end": "8030320"
  },
  {
    "text": "something live we then I physican a favor not even if we probably have built that before building our life with the",
    "start": "8030320",
    "end": "8037320"
  },
  {
    "text": "pressure and everyone asking questions it's definitely a whole different game",
    "start": "8037320",
    "end": "8043610"
  },
  {
    "text": "cool thanks for joining us James are really appreciate there and let's do that certainly follow-up episode",
    "start": "8043850",
    "end": "8049560"
  },
  {
    "text": "yeah I'm Kevin please alright thanks a lot thanks everyone",
    "start": "8049560",
    "end": "8054830"
  },
  {
    "text": "you",
    "start": "8062179",
    "end": "8064239"
  }
]