[
  {
    "start": "0",
    "end": "50000"
  },
  {
    "text": "is now starting all attendees are in listen only",
    "start": "2000",
    "end": "6838"
  },
  {
    "text": "mode hi guys uh thanks for um attending this",
    "start": "8480",
    "end": "14799"
  },
  {
    "text": "webinar so today we are going to talk about uh apps using Amazon elasticache um so um you can post your",
    "start": "16279",
    "end": "24080"
  },
  {
    "text": "questions uh using the panel for questions and uh we will collate them",
    "start": "24080",
    "end": "30160"
  },
  {
    "text": "and uh answer them through the webinar as well as take a few of them and answer at the end of the webinar um so uh Rahul",
    "start": "30160",
    "end": "37960"
  },
  {
    "text": "parak is's a senior product manager um managing the Amazon elastic as product",
    "start": "37960",
    "end": "43399"
  },
  {
    "text": "uh so he's going to take over and start the presentation thanks P hi everybody",
    "start": "43399",
    "end": "48640"
  },
  {
    "text": "thanks for coming and let's get started so today what I'm going to do is",
    "start": "48640",
    "end": "54000"
  },
  {
    "start": "50000",
    "end": "104000"
  },
  {
    "text": "uh provide an introduction to caching and a very popular open source Library",
    "start": "54000",
    "end": "59039"
  },
  {
    "text": "mcash d which is used by many of the world's top websites and then I'm going to tell you about Amazon elasticache",
    "start": "59039",
    "end": "65640"
  },
  {
    "text": "give you a demonstration of how to create a cach cluster uh using the elasticache console and then we'll",
    "start": "65640",
    "end": "72280"
  },
  {
    "text": "explore um how to create a sample app using Amazon cloud formation templates",
    "start": "72280",
    "end": "77360"
  },
  {
    "text": "and these are templates that automate the creation and deployment of AWS",
    "start": "77360",
    "end": "82680"
  },
  {
    "text": "resources we'll then have some time as pin mentioned for Q&A and we'll attempt to answer as many of your questions as",
    "start": "82680",
    "end": "89280"
  },
  {
    "text": "we can and then also what we're doing for this webinar is um for everyone who's attending today we'll offer a two-month",
    "start": "89280",
    "end": "96560"
  },
  {
    "text": "trial of elasticache and um we'll give you details on how that'll get to you uh at",
    "start": "96560",
    "end": "101880"
  },
  {
    "text": "the end of the session so thank you we'll get started uh so let's talk about a typical",
    "start": "101880",
    "end": "108079"
  },
  {
    "start": "104000",
    "end": "228000"
  },
  {
    "text": "web application at a very simplistic level uh what we have are users on multiple devices and and uh different",
    "start": "108079",
    "end": "114240"
  },
  {
    "text": "types of browsers web servers and database server and for the purposes of this discussion",
    "start": "114240",
    "end": "120159"
  },
  {
    "text": "we'll uh focus on we'll just call it my SQL but it could be any form of persistent",
    "start": "120159",
    "end": "125680"
  },
  {
    "text": "storage um so in a typical flow users will hit your web server web server",
    "start": "125680",
    "end": "131640"
  },
  {
    "text": "makes a request to the database database Returns the results and the web server puts that result in the page and Returns",
    "start": "131640",
    "end": "138200"
  },
  {
    "text": "the page to the users and um as you scale traffic goes up and one common",
    "start": "138200",
    "end": "144319"
  },
  {
    "text": "approach to deal with this is to add more servers and more database servers to maintain the perform performance of",
    "start": "144319",
    "end": "150319"
  },
  {
    "text": "your application so that your user experience stays consistent and good um you know this doesn't always",
    "start": "150319",
    "end": "157200"
  },
  {
    "text": "work or sometimes you continue to scale and there are alternatives and one of them is to use uh use a cache some form",
    "start": "157200",
    "end": "164640"
  },
  {
    "text": "of caching system between your web server and your database server and what this does is it allows you to maintain",
    "start": "164640",
    "end": "170800"
  },
  {
    "text": "high performance and low latency for your users and reduces the load uh that your database server",
    "start": "170800",
    "end": "177560"
  },
  {
    "text": "see and um so a cach is really a component in your system that stes frequently accessed data in",
    "start": "177560",
    "end": "184879"
  },
  {
    "text": "memory and um typically most applications display some locality of",
    "start": "184879",
    "end": "191720"
  },
  {
    "text": "reference and what that means is that data that's used once is often used again fairly soon afterwards and so",
    "start": "191720",
    "end": "197959"
  },
  {
    "text": "caching that data in memory means that you can return faster responses to that data and it also means that you're",
    "start": "197959",
    "end": "204040"
  },
  {
    "text": "spending less time looking up repetitive things on your database and um you know most web",
    "start": "204040",
    "end": "211159"
  },
  {
    "text": "applications today have very high read to write ratios and often it's as high as 80 to 90% reads and since memory is",
    "start": "211159",
    "end": "218920"
  },
  {
    "text": "orders of magnitude faster than dis disk access by caching this frequently read data in your memory systems you can see",
    "start": "218920",
    "end": "226319"
  },
  {
    "text": "latency go down to micros seconds from milliseconds uh so simple example of",
    "start": "226319",
    "end": "232920"
  },
  {
    "start": "228000",
    "end": "266000"
  },
  {
    "text": "caching say we're trying to look up the phone number of a person uh something that doesn't change all that often so",
    "start": "232920",
    "end": "238159"
  },
  {
    "text": "the first time we do it our cach is empty uh we look in the cache it's not there and that's called a cache Miss we",
    "start": "238159",
    "end": "245480"
  },
  {
    "text": "then go to the database get the value and update the cache and so the user gets the value back and the cache now",
    "start": "245480",
    "end": "252239"
  },
  {
    "text": "contains um the key which is John Smith and the value which is the phone number",
    "start": "252239",
    "end": "257519"
  },
  {
    "text": "and so the second time we need that data we look it up in the cache we see it right away and we can avoid the uh the",
    "start": "257519",
    "end": "263520"
  },
  {
    "text": "database access in that round trip and get the information back to the user uh so when it comes to implementing",
    "start": "263520",
    "end": "271639"
  },
  {
    "start": "266000",
    "end": "289000"
  },
  {
    "text": "a cache for your web applications mcash D is a free open-source solution that",
    "start": "271639",
    "end": "277560"
  },
  {
    "text": "was developed in 2003 for live journal and it's been used um I think at one point by 18 of the top 20 websites in",
    "start": "277560",
    "end": "284440"
  },
  {
    "text": "the world based on user accounts and these are names that we're all familiar with YouTube Zinga",
    "start": "284440",
    "end": "290600"
  },
  {
    "start": "289000",
    "end": "320000"
  },
  {
    "text": "Facebook and um basically mcash is uh it comes in two components there's a client",
    "start": "290600",
    "end": "296520"
  },
  {
    "text": "client side piece of software and that's main function is to map Keys which is",
    "start": "296520",
    "end": "301720"
  },
  {
    "text": "the items you want to store and their values to the servers uh where the cache exists and then there's software that",
    "start": "301720",
    "end": "308560"
  },
  {
    "text": "resides on the server and what that does is it maintains a hash table of keys and",
    "start": "308560",
    "end": "313919"
  },
  {
    "text": "values to store the data and it also manages memory so it deals with what happens when items expire or when the",
    "start": "313919",
    "end": "320440"
  },
  {
    "start": "320000",
    "end": "443000"
  },
  {
    "text": "cach fills up um some of the other key Concepts in",
    "start": "320440",
    "end": "325560"
  },
  {
    "text": "MCD uh it's designed to use multiple servers and so the clients side software",
    "start": "325560",
    "end": "330720"
  },
  {
    "text": "contains hashing algorithms that decide which server a particular key will map",
    "start": "330720",
    "end": "336639"
  },
  {
    "text": "onto uh it operates on as a least recently used cache and what this means",
    "start": "336639",
    "end": "342360"
  },
  {
    "text": "is um it as the cache fills up when new requests come in uh it'll look at what",
    "start": "342360",
    "end": "347400"
  },
  {
    "text": "was used most um the longest time ago and remove that",
    "start": "347400",
    "end": "352600"
  },
  {
    "text": "from the cache if it needs to store new items mcash D also supports the idea of expiration times for objects that you",
    "start": "352600",
    "end": "359720"
  },
  {
    "text": "store in the cache and so it'll also look for expired objects if it needs to free up memory uh to store new",
    "start": "359720",
    "end": "366080"
  },
  {
    "text": "data the other key component here is that mcash d by default does not uh",
    "start": "366080",
    "end": "372479"
  },
  {
    "text": "persist data and so what that means is that if your cache goes down uh all the data that was within it in is lost and",
    "start": "372479",
    "end": "380199"
  },
  {
    "text": "typically it's up to you and your application to make sure that any data that you need to keep around you persist",
    "start": "380199",
    "end": "385759"
  },
  {
    "text": "in a um database layer or a file system uh as a appropriate for your",
    "start": "385759",
    "end": "392240"
  },
  {
    "text": "needs so the other thing about mcash D is that you can store really any arbitrary data um in a simple key value",
    "start": "393280",
    "end": "401319"
  },
  {
    "text": "form and um it's often used to store Snippets of render HTML uh the",
    "start": "401319",
    "end": "408960"
  },
  {
    "text": "particular user and uh it's often used as well in",
    "start": "408960",
    "end": "414080"
  },
  {
    "text": "computational processes that are resource intensive and so you can store intermediate results keep the",
    "start": "414080",
    "end": "420000"
  },
  {
    "text": "performance of your application moving fast and uh to maintain performance and",
    "start": "420000",
    "end": "425080"
  },
  {
    "text": "low latency mimc D limits its key sizes to 250 bytes and limits the values that",
    "start": "425080",
    "end": "431240"
  },
  {
    "text": "you can store to one megabyte and if you need to store larger values you typically would split them across",
    "start": "431240",
    "end": "436960"
  },
  {
    "text": "multiple keys or look to some alternative form of uh of of caching",
    "start": "436960",
    "end": "443879"
  },
  {
    "start": "443000",
    "end": "476000"
  },
  {
    "text": "mechanism uh so if you're implementing mecd today and doing it by yourself you",
    "start": "443919",
    "end": "449080"
  },
  {
    "text": "would download software install libraries on your",
    "start": "449080",
    "end": "454759"
  },
  {
    "text": "client install software on the server you'd be configuring it running it and managing it uh you can do this also on",
    "start": "454759",
    "end": "462160"
  },
  {
    "text": "ec2 and in this case most of the steps remain the same but adding nodes and replicating setup is somewhat easier but",
    "start": "462160",
    "end": "469000"
  },
  {
    "text": "you're still spending time managing your cash and that's time that you're not spent working on your",
    "start": "469000",
    "end": "476319"
  },
  {
    "start": "476000",
    "end": "544000"
  },
  {
    "text": "application so we believe there's a better way to do it and that is using Amazon",
    "start": "477159",
    "end": "483159"
  },
  {
    "text": "elasticache so Amazon elasticache is a web service that lets you easily create and use caching clusters in the",
    "start": "483159",
    "end": "490280"
  },
  {
    "text": "cloud it's 100% compatible with mcash d and what that means is that you can use",
    "start": "490280",
    "end": "496080"
  },
  {
    "text": "many of the dozens of libraries that are out there for client side software and you should be able to run them against",
    "start": "496080",
    "end": "502400"
  },
  {
    "text": "Amazon elasticache unchanged and like all Amazon web",
    "start": "502400",
    "end": "507759"
  },
  {
    "text": "services it's managed it's scalable as you need it to be and it's secure uh one of the things about MCD by default is",
    "start": "507759",
    "end": "514719"
  },
  {
    "text": "that it doesn't include any form of authentication and so there have been cases where caches have been left open",
    "start": "514719",
    "end": "522039"
  },
  {
    "text": "and uh that's something that's managed through elastic cache so not a worry at all and um it's reliable Amazon monitors",
    "start": "522039",
    "end": "529560"
  },
  {
    "text": "cache nodes and replaces them in the event that they go down and so you can focus just on keeping your application",
    "start": "529560",
    "end": "535760"
  },
  {
    "text": "running and then finally it's pay as you go so you can add capacity when you need it and take it down when you need it and",
    "start": "535760",
    "end": "542040"
  },
  {
    "text": "so deal with um varying workloads as they come up and uh just to sort of go through",
    "start": "542040",
    "end": "549440"
  },
  {
    "start": "544000",
    "end": "599000"
  },
  {
    "text": "some of the the key benefits in more detail from a deployment perspective and we'll walk through a demonstration of",
    "start": "549440",
    "end": "554760"
  },
  {
    "text": "this uh shortly you can deploy multi-node cache clusters using uh just",
    "start": "554760",
    "end": "560000"
  },
  {
    "text": "a few clicks in the Amazon web services console or by making some simple API",
    "start": "560000",
    "end": "565800"
  },
  {
    "text": "calls migrating applications that are already running MCD is straightforward",
    "start": "565800",
    "end": "571000"
  },
  {
    "text": "because the code is 100% compatible and so once you update your configurations in your application to point to your new",
    "start": "571000",
    "end": "578279"
  },
  {
    "text": "cluster you should be able to proceed without any trouble uh Administration is also",
    "start": "578279",
    "end": "583640"
  },
  {
    "text": "simplified elastic cach will handle node replacement and software patching and then Cloud watch and that lets you",
    "start": "583640",
    "end": "589440"
  },
  {
    "text": "monitor I think about 20 uh metrics related to your cache performance cache hits latency Etc and scaling is also",
    "start": "589440",
    "end": "598040"
  },
  {
    "text": "very straightforward um here are just some of the uh some of",
    "start": "598040",
    "end": "603399"
  },
  {
    "text": "the ways in which some customers uh are using elasticache and um it's typically used",
    "start": "603399",
    "end": "609959"
  },
  {
    "text": "to handle and make managing multiple node distributed caching environments easier to take care of and uh this is um",
    "start": "609959",
    "end": "617440"
  },
  {
    "text": "PBS using it as behind their media layers top Joy is a mobile app Network",
    "start": "617440",
    "end": "624680"
  },
  {
    "start": "620000",
    "end": "642000"
  },
  {
    "text": "that's deployed worldwide and they cach stats and metadata and um Mo backing",
    "start": "624680",
    "end": "630040"
  },
  {
    "text": "mobile applications is a relatively common use case for uh elastic has since it allows you to maintain high",
    "start": "630040",
    "end": "636440"
  },
  {
    "text": "performance on the client side uh typically over network connections that aren't that great in the mobile",
    "start": "636440",
    "end": "642920"
  },
  {
    "start": "642000",
    "end": "657000"
  },
  {
    "text": "world and um in terms of dealing with spiky workloads ticket leap uh around",
    "start": "642920",
    "end": "649040"
  },
  {
    "text": "event has uh traffic climb and then drop off as those events go away and um again",
    "start": "649040",
    "end": "655440"
  },
  {
    "text": "using elastic cash it's straightforward to handle this so a lot of use cases where um",
    "start": "655440",
    "end": "662600"
  },
  {
    "start": "657000",
    "end": "714000"
  },
  {
    "text": "elasticache can really help in terms of managing out and helping you balance your uh read workload and your database",
    "start": "662600",
    "end": "668839"
  },
  {
    "text": "load or social networks things like people's friends lists don't change all that often but they're used by multiple",
    "start": "668839",
    "end": "676000"
  },
  {
    "text": "aspects of their networks uh gaming where multiple people are in interacting",
    "start": "676000",
    "end": "681200"
  },
  {
    "text": "with an environment that is relatively static uh media and news sites where there's a vast amount of read traffic",
    "start": "681200",
    "end": "686880"
  },
  {
    "text": "compared to WR traffic uh the same thing is true on Q&A portals and on uh review",
    "start": "686880",
    "end": "692639"
  },
  {
    "text": "sites where for example uh the number of people writing reviews versus the number of people reading reviews is uh is very",
    "start": "692639",
    "end": "698959"
  },
  {
    "text": "skewed and then in areas where computation is expensive so things like recommendation engines where recomputing",
    "start": "698959",
    "end": "705639"
  },
  {
    "text": "everything is expensive you can store intermediate results or previously computed results in your cache and uh",
    "start": "705639",
    "end": "712120"
  },
  {
    "text": "generate a faster experience for your",
    "start": "712120",
    "end": "716560"
  },
  {
    "start": "714000",
    "end": "824000"
  },
  {
    "text": "users so when you're you're thinking about deploying elasticache and MCD in general uh there's some things to keep",
    "start": "717519",
    "end": "724760"
  },
  {
    "text": "in mind MCD is designed to be a distributed cache system and since elastic cache is 100% compatible it's",
    "start": "724760",
    "end": "732360"
  },
  {
    "text": "got the same design considerations in place and so multiple nodes and by this",
    "start": "732360",
    "end": "737519"
  },
  {
    "text": "I mean multiple caching nodes give you a higher overall availability and make your system more resilient in the event",
    "start": "737519",
    "end": "744639"
  },
  {
    "text": "that any one node goes down since only a small portion of your caching system would be affected um if you had just one",
    "start": "744639",
    "end": "751680"
  },
  {
    "text": "massive cache node and you required that to",
    "start": "751680",
    "end": "757000"
  },
  {
    "text": "keep your application functioning if that went down you would um and so uh",
    "start": "758199",
    "end": "763480"
  },
  {
    "text": "another important thing to keep in mind when deploying elastic hash is uh the client Side Library is where you control",
    "start": "763480",
    "end": "770720"
  },
  {
    "text": "the key hashing and this is and by key hashing I mean how your your data is distributed across your multiple cache",
    "start": "770720",
    "end": "777160"
  },
  {
    "text": "nodes and by default most MCD clients use a very simple form",
    "start": "777160",
    "end": "782480"
  },
  {
    "text": "of hashing uh based on modular arithmetic and so what that means is when you add or take away a node you end",
    "start": "782480",
    "end": "788480"
  },
  {
    "text": "up rebalancing your entire cluster so that can create problems uh there are a number of clients out there that support",
    "start": "788480",
    "end": "793959"
  },
  {
    "text": "consistent hashing and this provides for much less thrashing and rebalancing when",
    "start": "793959",
    "end": "799240"
  },
  {
    "text": "uh you're making changes to your nodes uh the the other consideration when Distributing nodes is to just make sure",
    "start": "799240",
    "end": "805639"
  },
  {
    "text": "that each individual node has the right amount of memory for your workload so you don't don't end up with lots of cash",
    "start": "805639",
    "end": "810800"
  },
  {
    "text": "misses and uh this is an area where elastic cache makes it very easy to test different configurations because you can",
    "start": "810800",
    "end": "816800"
  },
  {
    "text": "spin up clusters run tests against your application using your particular workloads and then find the ones that",
    "start": "816800",
    "end": "823360"
  },
  {
    "text": "work best for you and move on from there uh so in terms of deploying a",
    "start": "823360",
    "end": "829600"
  },
  {
    "start": "824000",
    "end": "1001000"
  },
  {
    "text": "cache cluster I will um I'll actually try and walk you through it live but if not I can demonstrate uh the process can",
    "start": "829600",
    "end": "837720"
  },
  {
    "text": "you still see my screen okay and so um here I'm logged into the",
    "start": "837720",
    "end": "843120"
  },
  {
    "text": "Amazon elasticache web console um you can see we've uh we recently launched um",
    "start": "843120",
    "end": "848959"
  },
  {
    "text": "we're initially in Us East but we've recently launched in four new regions so you can pick one uh closest to where you",
    "start": "848959",
    "end": "855160"
  },
  {
    "text": "expect most of your traffic to be and where your applications are housed what then happens is um you and",
    "start": "855160",
    "end": "862000"
  },
  {
    "text": "I'll just walk you through the console quickly this is showing you the Clusters which is currently empty there security",
    "start": "862000",
    "end": "868279"
  },
  {
    "text": "groups um cache parameter groups so you can edit um all of the parameters related to",
    "start": "868279",
    "end": "874800"
  },
  {
    "text": "your mcash D setup and store them in a group so you can easily apply them to",
    "start": "874800",
    "end": "880480"
  },
  {
    "text": "Cache nodes or to clusters and then um various events related to your caching",
    "start": "880480",
    "end": "886360"
  },
  {
    "text": "and so what I'll do is I'll walk you through creating a cache cluster it's very straightforward select launch and",
    "start": "886360",
    "end": "893519"
  },
  {
    "text": "then we'll give it a name in this case I'll call it webinar uh you can then",
    "start": "893519",
    "end": "899680"
  },
  {
    "text": "pick what type of cache node you want uh the essentially one of the restrictions",
    "start": "899680",
    "end": "905399"
  },
  {
    "text": "that we put in place is that within a given cache cluster each node will be of the same type and so in this case I'm",
    "start": "905399",
    "end": "910959"
  },
  {
    "text": "going to select uh the uh M24 extra large which has 68",
    "start": "910959",
    "end": "916959"
  },
  {
    "text": "gigs of memory and we'll create 16 nodes and default cache Port from MCD we",
    "start": "916959",
    "end": "924519"
  },
  {
    "text": "will leave unchanged um no preference on the availability Zone",
    "start": "924519",
    "end": "929720"
  },
  {
    "text": "and you can then set um how you want to handle upgrades so in this case we'll",
    "start": "929720",
    "end": "935600"
  },
  {
    "text": "leave minor version upgrades on and then",
    "start": "939839",
    "end": "949279"
  },
  {
    "text": "continue a maintenance window and what this means is you pick uh you pick a time slot",
    "start": "949279",
    "end": "957399"
  },
  {
    "text": "during which we'll perform any system the maintenance that's needed whether it's um handling nodes or dealing with",
    "start": "957399",
    "end": "963000"
  },
  {
    "text": "software patches and upgrades and this way you can manage uh any outages that would occur and we would notify you uh",
    "start": "963000",
    "end": "969319"
  },
  {
    "text": "before any of these took place and typically they last just a few minutes so we'll go with no preference and the",
    "start": "969319",
    "end": "975279"
  },
  {
    "text": "system will assign a maintenance window after we confirm we'll then",
    "start": "975279",
    "end": "980839"
  },
  {
    "text": "launch our um cluster and so you can see",
    "start": "980839",
    "end": "986160"
  },
  {
    "text": "it's being created it'll take a few minutes and I'll uh I'll I'll continue",
    "start": "986160",
    "end": "991319"
  },
  {
    "text": "with the presentation in the meantime so I'll just walk through this",
    "start": "991319",
    "end": "998000"
  },
  {
    "text": "quickly since we've seen all",
    "start": "998000",
    "end": "1001240"
  },
  {
    "start": "1001000",
    "end": "1047000"
  },
  {
    "text": "this so one of the things uh that comes up is some of some of you and a lot of",
    "start": "1004959",
    "end": "1010519"
  },
  {
    "text": "people are already running mcash D on ec2 instances and migrating to",
    "start": "1010519",
    "end": "1015600"
  },
  {
    "text": "elasticache and getting the benefits of a managed service is relatively straightforward just have to make sure",
    "start": "1015600",
    "end": "1021360"
  },
  {
    "text": "that your Amazon elastic cache cluster can talk to an ec2 to your ec2 application by making sure your security",
    "start": "1021360",
    "end": "1027959"
  },
  {
    "text": "groups line up and then you update the client node list on your application and that's as",
    "start": "1027959",
    "end": "1033798"
  },
  {
    "text": "straightforward as um using an API call or within the Management console itself",
    "start": "1033799",
    "end": "1040000"
  },
  {
    "text": "uh you can just copy a comma separated list of your node endpoints and place them into your mcash um client side",
    "start": "1040000",
    "end": "1047640"
  },
  {
    "start": "1047000",
    "end": "1097000"
  },
  {
    "text": "configuration and um we'll look at now cloud formation",
    "start": "1047640",
    "end": "1054360"
  },
  {
    "text": "and this is um a service within AWS which allows you to create templates",
    "start": "1054360",
    "end": "1059600"
  },
  {
    "text": "that make it very easy to provision and deploy a collection of AWS resources and so in one go you could create uh cache",
    "start": "1059600",
    "end": "1067640"
  },
  {
    "text": "clusters ec2 instances connect them all together and even deploy a sample application and uh we'll walk you",
    "start": "1067640",
    "end": "1074200"
  },
  {
    "text": "through that process here so elastic hash sample template",
    "start": "1074200",
    "end": "1079400"
  },
  {
    "text": "that was recently deployed uh does does the following things it creates a cache cluster sets up ec2 installs a core set",
    "start": "1079400",
    "end": "1087960"
  },
  {
    "text": "of packages to enable a web application based on PHP supporting",
    "start": "1087960",
    "end": "1093280"
  },
  {
    "text": "mcache and then gets the cache nodes configures mcash and you're up and",
    "start": "1093280",
    "end": "1099120"
  },
  {
    "start": "1097000",
    "end": "1237000"
  },
  {
    "text": "running and you can see um this is a typical template and these can be",
    "start": "1099120",
    "end": "1104480"
  },
  {
    "text": "authored or also derived from existing setups and so this is a great way for you to uh replicate and redeploy",
    "start": "1104480",
    "end": "1111840"
  },
  {
    "text": "applications uh within AWS and um let me go back to the console",
    "start": "1111840",
    "end": "1118120"
  },
  {
    "text": "and we can work through creating that and this is uh Amazon",
    "start": "1118120",
    "end": "1126000"
  },
  {
    "text": "cloudfront and there are no charges for cloudfront you only pay for the underlying uh excuse me I'm uh for cloud",
    "start": "1126000",
    "end": "1133640"
  },
  {
    "text": "formation you only pay for the underlying resources that you use and um we use one of the sample",
    "start": "1133640",
    "end": "1140000"
  },
  {
    "text": "templates uh there's",
    "start": "1140000",
    "end": "1143400"
  },
  {
    "text": "elasticache and so um these are fairly straightforward the template URL is",
    "start": "1145159",
    "end": "1152440"
  },
  {
    "text": "pre-populated we then uh continue and you can decide what type of instances you'd like to use the number of cache",
    "start": "1152440",
    "end": "1159159"
  },
  {
    "text": "nodes in this case you'll need an ec2 key name uh we have I have one set",
    "start": "1159159",
    "end": "1166120"
  },
  {
    "text": "up and we can start this Pro process and so now um this is going to",
    "start": "1166120",
    "end": "1172480"
  },
  {
    "text": "deploy a range of resources across AWS and we should end up with a sample application that's talking to a mcash an",
    "start": "1172480",
    "end": "1180159"
  },
  {
    "text": "elastic clh cach cluster so the process is now beginning",
    "start": "1180159",
    "end": "1187280"
  },
  {
    "text": "um it'll take a few minutes and we'll move on and I I'll come back to this as it goes but just to give you a sense for",
    "start": "1187280",
    "end": "1192799"
  },
  {
    "text": "what's happening in the system um it's beginning to create against this template you can see the",
    "start": "1192799",
    "end": "1198039"
  },
  {
    "text": "events uh as they unfold so it's creating uh the cache clusters and then",
    "start": "1198039",
    "end": "1203600"
  },
  {
    "text": "moving on from there and then setting up the rest of the",
    "start": "1203600",
    "end": "1207799"
  },
  {
    "text": "application and when it completes you can see the range of instances it's created all of the steps that it's taken",
    "start": "1212799",
    "end": "1220120"
  },
  {
    "text": "and um it's a it's a great way to deploy applications that need elastic cache",
    "start": "1220120",
    "end": "1225360"
  },
  {
    "text": "across Amazon and AWS um and so now we'll have time for some",
    "start": "1225360",
    "end": "1231960"
  },
  {
    "text": "questions and I'll work with P to get some answer so uh feel free to send in your",
    "start": "1231960",
    "end": "1239320"
  },
  {
    "start": "1237000",
    "end": "1269000"
  },
  {
    "text": "questions we have a few here um that we'll start um talking about um so this",
    "start": "1239320",
    "end": "1244840"
  },
  {
    "text": "is from Matson what are the best meashi client libraries for Java um so we don't",
    "start": "1244840",
    "end": "1251400"
  },
  {
    "text": "recommend specific client libraries but on the um on the mcash D repositories",
    "start": "1251400",
    "end": "1257080"
  },
  {
    "text": "online and at code. Google go.com there are lists of clients for all major um all major programming platforms",
    "start": "1257080",
    "end": "1264679"
  },
  {
    "text": "and um that should be um a good a great place to get started so one of the caveats to note with some of the client",
    "start": "1264679",
    "end": "1271600"
  },
  {
    "start": "1269000",
    "end": "1317000"
  },
  {
    "text": "libraries especially uh there's one called spy cach ke I guess for Java um",
    "start": "1271600",
    "end": "1277039"
  },
  {
    "text": "is that they tend to Cache um the IP address corresponding to your nodes so I",
    "start": "1277039",
    "end": "1283039"
  },
  {
    "text": "think defining uh a reasonable TTL would be helpful because whenever so like rah",
    "start": "1283039",
    "end": "1288600"
  },
  {
    "text": "mentioned one of the key advantages of elastic Ash is the failure recovery in",
    "start": "1288600",
    "end": "1293880"
  },
  {
    "text": "case if there's Network partitioning or host level failures um elastic Ash",
    "start": "1293880",
    "end": "1299240"
  },
  {
    "text": "replaces the nodes for you and uh the DNS name would remain the same but the underlying IP address would change and",
    "start": "1299240",
    "end": "1306039"
  },
  {
    "text": "so um being able to uh um you know understand um or being able to use the",
    "start": "1306039",
    "end": "1312120"
  },
  {
    "text": "DNS name instead of the IP address would be helpful from a client perspective okay uh the next question we",
    "start": "1312120",
    "end": "1320159"
  },
  {
    "start": "1317000",
    "end": "1338000"
  },
  {
    "text": "have is from Justin uh can you autoscale the cash cluster um at the moment the",
    "start": "1320159",
    "end": "1325880"
  },
  {
    "text": "cash cluster does not autoscale um so it's something that you would do either via the console or the API uh it's",
    "start": "1325880",
    "end": "1332120"
  },
  {
    "text": "definitely something that we're thinking about and uh exploring right um is Network latency",
    "start": "1332120",
    "end": "1341039"
  },
  {
    "start": "1338000",
    "end": "1362000"
  },
  {
    "text": "that is using elastic as but accessing from a web server outside Amazon's Services an issue uh so currently the",
    "start": "1341039",
    "end": "1349279"
  },
  {
    "text": "way elasticache is set up you it can only be accessed from within um the AWS",
    "start": "1349279",
    "end": "1355240"
  },
  {
    "text": "environment and so your application would need to be running within ec2 to have a security group that would allow",
    "start": "1355240",
    "end": "1360480"
  },
  {
    "text": "the cach to access it yeah so the the primary reason uh we chose to go down that path obviously you",
    "start": "1360480",
    "end": "1367720"
  },
  {
    "text": "know apart from the latency constraints right so um caching use cases are very latency sensitive so you wouldn't",
    "start": "1367720",
    "end": "1373919"
  },
  {
    "text": "typically want to have your web server placed you know elsewhere far apart from your or uh cash uh server uh apart from",
    "start": "1373919",
    "end": "1381720"
  },
  {
    "text": "that mcash fee doesn't have uh any built-in authentication or security",
    "start": "1381720",
    "end": "1386880"
  },
  {
    "text": "mechanism um so we um consciously chose to um allow access to uh elastic Ash",
    "start": "1386880",
    "end": "1395039"
  },
  {
    "text": "only through ECT security group so that you know you have more security um for when you access U elastic",
    "start": "1395039",
    "end": "1403759"
  },
  {
    "start": "1405000",
    "end": "1482000"
  },
  {
    "text": "Ash the next question is um sorry I was a bit late to the webinar what is it",
    "start": "1405000",
    "end": "1411240"
  },
  {
    "text": "basically that elastic as offers so I think it it'll be helpful to answer this question from a perspective of what do",
    "start": "1411240",
    "end": "1416440"
  },
  {
    "text": "you what do I get out of elastic Ash compared to managing uh my own cluster on PC2 absolutely and you know the the",
    "start": "1416440",
    "end": "1424200"
  },
  {
    "text": "biggest benefits of elastic cache are one that it's completely managed for you and so elasticache manages M watches",
    "start": "1424200",
    "end": "1432640"
  },
  {
    "text": "your CL your cache nodes you can set up clusters very easily and you don't have to spend any time worrying about whether",
    "start": "1432640",
    "end": "1438279"
  },
  {
    "text": "you're your clusters up and down you can monitor it in Cloud watch uh if a node goes down it gets replaced automatically",
    "start": "1438279",
    "end": "1444240"
  },
  {
    "text": "if you need more caching you can add new nodes uh and so really you spend no time",
    "start": "1444240",
    "end": "1450200"
  },
  {
    "text": "managing your cash and much more time on managing your application and so while",
    "start": "1450200",
    "end": "1455279"
  },
  {
    "text": "it's not uh while it may be somewhat um it's not the most challenging thing in the world to manage an MCD installation",
    "start": "1455279",
    "end": "1461960"
  },
  {
    "text": "yourself it's just another subsystem that you have to keep track of keep consistent and keep keep monitoring and",
    "start": "1461960",
    "end": "1467880"
  },
  {
    "text": "that's one the big things that we take away uh with elastic Cache can we uh use elastic cach to",
    "start": "1467880",
    "end": "1475559"
  },
  {
    "text": "enhance our web file server access in the",
    "start": "1475559",
    "end": "1480520"
  },
  {
    "start": "1482000",
    "end": "1506000"
  },
  {
    "text": "cloud um I I'm not sure I understand exactly the question but I think um you can definitely use elasticache as a way",
    "start": "1482039",
    "end": "1489559"
  },
  {
    "text": "to really reduce latency for any accesses that your web server needs to do and uh it's not really uh the storage",
    "start": "1489559",
    "end": "1497600"
  },
  {
    "text": "subsystem that backing elasticache isn't really of concern to the caching layer itself it's really just about your",
    "start": "1497600",
    "end": "1505000"
  },
  {
    "text": "application do you recommend using elastic cash for an application which is used to get live cricket scores a live",
    "start": "1505000",
    "end": "1512520"
  },
  {
    "start": "1506000",
    "end": "1542000"
  },
  {
    "text": "match in progress to saing approximately 5,000 sare per minute um so that",
    "start": "1512520",
    "end": "1519000"
  },
  {
    "text": "actually is somewhat of an ideal use case for elasticache because simply you have one source of data and multiple",
    "start": "1519000",
    "end": "1525080"
  },
  {
    "text": "consumers of data and um since people are trying try to get scores live latency becomes very important and so in",
    "start": "1525080",
    "end": "1531320"
  },
  {
    "text": "that situation yes I think it would be a useful uh addition to your application",
    "start": "1531320",
    "end": "1536440"
  },
  {
    "text": "setup can you protect your elastic as network connection with the SSL",
    "start": "1536440",
    "end": "1541960"
  },
  {
    "text": "certificate so um right we do not support SSL right now for elastic cash",
    "start": "1541960",
    "end": "1548320"
  },
  {
    "start": "1542000",
    "end": "1592000"
  },
  {
    "text": "but but it's a great question uh we have to understand if M Cas can of allows SSL",
    "start": "1548320",
    "end": "1554399"
  },
  {
    "text": "uh based uh um encryption so that said uh um ec2 network uh is essentially very",
    "start": "1554399",
    "end": "1562520"
  },
  {
    "text": "the network in which uh packets get transferred between your E2 instances is a private Network and uh no package",
    "start": "1562520",
    "end": "1569760"
  },
  {
    "text": "sniffing would be possible within that Network um so um as long as you use the ec2 security group which is kind of",
    "start": "1569760",
    "end": "1576000"
  },
  {
    "text": "mandatory for elastic Ash uh you should be um you know safe in terms of uh um",
    "start": "1576000",
    "end": "1582159"
  },
  {
    "text": "packet s frame yeah and basic basic M casd does not uh provide for any authentication if you can talk to the",
    "start": "1582159",
    "end": "1588399"
  },
  {
    "text": "report on the server you'll be able to see the cache what happens if you have a single",
    "start": "1588399",
    "end": "1596000"
  },
  {
    "start": "1592000",
    "end": "1636000"
  },
  {
    "text": "note cluster and your node goes down it really depends on your application",
    "start": "1596559",
    "end": "1603000"
  },
  {
    "text": "workloads but typically a single node cluster going down could result in all",
    "start": "1603000",
    "end": "1608360"
  },
  {
    "text": "of those all of those requests that were being handled by the cash cluster or the cach node going directly to your",
    "start": "1608360",
    "end": "1614720"
  },
  {
    "text": "database or storage subsystem and that could result in in um massively increased latencies and just backlogs",
    "start": "1614720",
    "end": "1621000"
  },
  {
    "text": "and queuing of requests depending on how much of the load uh the cash was handling and in general um given that",
    "start": "1621000",
    "end": "1627640"
  },
  {
    "text": "mcash D and elastic cach are designed to be distributed um it's it's generally",
    "start": "1627640",
    "end": "1633159"
  },
  {
    "text": "far better to have more than one node if possible think a similar question um how",
    "start": "1633159",
    "end": "1638840"
  },
  {
    "start": "1636000",
    "end": "1675000"
  },
  {
    "text": "does elastic cash Grant security security uh so elastic cache defines",
    "start": "1638840",
    "end": "1645080"
  },
  {
    "text": "when and you might have seen this or notice this when we create cre the cluster but you have to define a security group and that security group",
    "start": "1645080",
    "end": "1652559"
  },
  {
    "text": "is the only place uh and the only collection of resources that's allowed to access your elasticache cluster and",
    "start": "1652559",
    "end": "1658919"
  },
  {
    "text": "so you can define a security group on your web servers in ec2 and as long as",
    "start": "1658919",
    "end": "1664440"
  },
  {
    "text": "the same Security Group has access to the cache cluster that's how you would set up the security between those two",
    "start": "1664440",
    "end": "1669880"
  },
  {
    "text": "and nothing else outside of that security group would be able to talk to your caching system is there a significant",
    "start": "1669880",
    "end": "1678519"
  },
  {
    "start": "1675000",
    "end": "1733000"
  },
  {
    "text": "latency Inc are um connected to each other through high Network high",
    "start": "1686200",
    "end": "1692480"
  },
  {
    "text": "throughput fiber um so that said um you would have uh slightly um higher latency",
    "start": "1692480",
    "end": "1700559"
  },
  {
    "text": "uh when your elastic Ash cluster and E2 uh instance are uh split across",
    "start": "1700559",
    "end": "1706159"
  },
  {
    "text": "availability zones um so usually the latency is in the order of a millisecond",
    "start": "1706159",
    "end": "1711840"
  },
  {
    "text": "or two um so um you know caching use cases different caching use cases of",
    "start": "1711840",
    "end": "1717360"
  },
  {
    "text": "different latency sensitivities so uh would be helpful to kind of try that out and how and and see how your workload",
    "start": "1717360",
    "end": "1723640"
  },
  {
    "text": "reacts in terms when uh your um instances are split across availability",
    "start": "1723640",
    "end": "1730840"
  },
  {
    "text": "zones when adding the new node in a cluster does it invalidate the cache",
    "start": "1731960",
    "end": "1738440"
  },
  {
    "start": "1733000",
    "end": "1776000"
  },
  {
    "text": "uh so this is um this is something I touched on earlier and it depends on the hashing scheme that's been set up on",
    "start": "1738440",
    "end": "1744519"
  },
  {
    "text": "your client and if you a lot of the default hashing schemes are the uh the more simple just use modular arithmetic",
    "start": "1744519",
    "end": "1752559"
  },
  {
    "text": "to rotate Keys around service and in that case yes adding a node would create um a lot of rebalancing",
    "start": "1752559",
    "end": "1759519"
  },
  {
    "text": "effects and that's uh it's one of the reasons why consistent hashing is something that's recommended and there",
    "start": "1759519",
    "end": "1765240"
  },
  {
    "text": "are a number of stable clients out there that support that and in the case of consistent hashing far fewer nodes would",
    "start": "1765240",
    "end": "1772320"
  },
  {
    "text": "be affected so you'd see much less rebalancing activity so I may need to leave in five",
    "start": "1772320",
    "end": "1778519"
  },
  {
    "start": "1776000",
    "end": "1795000"
  },
  {
    "text": "minutes would you email the tw- month uh free Trail offer to my email oh yes sorry please don't worry about that we",
    "start": "1778519",
    "end": "1784480"
  },
  {
    "text": "will uh we will be emailing out uh the two-month offer to everybody's email in in a few days so look for it and we uh",
    "start": "1784480",
    "end": "1791519"
  },
  {
    "text": "we hope you'll try El the cash as a result what is the difference between uh",
    "start": "1791519",
    "end": "1798320"
  },
  {
    "start": "1795000",
    "end": "1802000"
  },
  {
    "text": "snapshots and cloud formation so um I don't exactly know if",
    "start": "1798320",
    "end": "1805360"
  },
  {
    "start": "1802000",
    "end": "1897000"
  },
  {
    "text": "uh the question is about EVS snapshots RDS snapchot versus cloud formation but",
    "start": "1805360",
    "end": "1810440"
  },
  {
    "text": "just to kind of um um give a high level introduction uh to cloud formation similar to what Rahul um demoed uh in",
    "start": "1810440",
    "end": "1818200"
  },
  {
    "text": "the presentation so cloud formation essentially enables you to uh Define templates and uh uh use those templates",
    "start": "1818200",
    "end": "1826360"
  },
  {
    "text": "templates for AWS resources and use those templates to replicate um your resources you know within a few minutes",
    "start": "1826360",
    "end": "1834120"
  },
  {
    "text": "so you can say that um you know create um so I I need to have a particular ec2",
    "start": "1834120",
    "end": "1839440"
  },
  {
    "text": "instance with a particular instance type and so let let's step step back and talk about an application so if you're",
    "start": "1839440",
    "end": "1845679"
  },
  {
    "text": "talking about uh a production application that requires a specific number of ec2 instances a load balance",
    "start": "1845679",
    "end": "1852080"
  },
  {
    "text": "or uh security groups that um you know that you would like to Define and an Rus",
    "start": "1852080",
    "end": "1857480"
  },
  {
    "text": "instance so this is kind of a stack right you have an application uh stack with multiple a AWS resources so you can",
    "start": "1857480",
    "end": "1864279"
  },
  {
    "text": "replicate that stack and create uh uh production sorry um staging tier a",
    "start": "1864279",
    "end": "1870840"
  },
  {
    "text": "development tier with the same set of resources uh to to enable you to quickly",
    "start": "1870840",
    "end": "1876480"
  },
  {
    "text": "kind of you know um replicate the same infrastructure and continue with your development or testing or uh even",
    "start": "1876480",
    "end": "1882279"
  },
  {
    "text": "redundancy for that matter right so if um you know God forward and easy goes down uh you have have u a cloud",
    "start": "1882279",
    "end": "1888919"
  },
  {
    "text": "formation template that will help you replicate your infrastructure in a different availability",
    "start": "1888919",
    "end": "1895840"
  },
  {
    "text": "zone so that's at a high level what uh cloud formation helps you and uh helps you to do uh EVS snapshots are kind of",
    "start": "1895840",
    "end": "1902600"
  },
  {
    "start": "1897000",
    "end": "1922000"
  },
  {
    "text": "completely different uh around so that enable you to take um you know snapshots",
    "start": "1902600",
    "end": "1908120"
  },
  {
    "text": "of your U EBS volumes and store them in you know S3 so that you can use that to",
    "start": "1908120",
    "end": "1914559"
  },
  {
    "text": "revive um either your application uh inst or your database",
    "start": "1914559",
    "end": "1920960"
  },
  {
    "text": "instance is elastic Ash available in VPC um currently it is not but it's",
    "start": "1921840",
    "end": "1928639"
  },
  {
    "text": "definitely something that's on our road map what are the pricing tiers for",
    "start": "1928639",
    "end": "1933720"
  },
  {
    "start": "1932000",
    "end": "1964000"
  },
  {
    "text": "elastic a Services uh so the pricing tiers are they're all available on the uh AWS",
    "start": "1933720",
    "end": "1941360"
  },
  {
    "text": "elastic Cas detail page um you know the M1 small instance starts at um I believe",
    "start": "1941360",
    "end": "1947200"
  },
  {
    "text": "it's a 9.5 cents an hour and uh they go up from there depending on the size of the",
    "start": "1947200",
    "end": "1953080"
  },
  {
    "text": "instance that you're looking for yeah so uh right now only on demand pricing is supported uh we will support reserved",
    "start": "1953080",
    "end": "1960440"
  },
  {
    "text": "instance pricing as part of our road map uh is there any advantage to caching",
    "start": "1960440",
    "end": "1968279"
  },
  {
    "start": "1964000",
    "end": "2027000"
  },
  {
    "text": "non-bb data such as static web pages what other types of objects would be useful",
    "start": "1968279",
    "end": "1974440"
  },
  {
    "text": "images um it's absolutely useful in general anything that comes under the",
    "start": "1974440",
    "end": "1979639"
  },
  {
    "text": "one megabyte mcash D limit that is frequently used and doesn't change often is a great candidate for uh being stored",
    "start": "1979639",
    "end": "1987120"
  },
  {
    "text": "in your caching system and typically applications will store not just results from the database but they'll store",
    "start": "1987120",
    "end": "1993159"
  },
  {
    "text": "pre-computed fragments of web pages um you know for example on a city guide",
    "start": "1993159",
    "end": "1998519"
  },
  {
    "text": "site the top 10 list of restaurants might be cached so that on every every user from that City sees it and it's",
    "start": "1998519",
    "end": "2004159"
  },
  {
    "text": "served from the cache and not recomputed in all cases so really it's up to you to think through what elements of your",
    "start": "2004159",
    "end": "2010200"
  },
  {
    "text": "application can be placed in there but me um elastic cach can handle arbitrary data yeah and I think images is",
    "start": "2010200",
    "end": "2016720"
  },
  {
    "text": "definitely a great example as well so if you have thumb thumbnail images you know that feed a retail website so that will",
    "start": "2016720",
    "end": "2023080"
  },
  {
    "text": "be a great use case for images um when setting one up if total",
    "start": "2023080",
    "end": "2030760"
  },
  {
    "start": "2027000",
    "end": "2048000"
  },
  {
    "text": "instance sizes are consistent and I want to achieve similar consistent hashing",
    "start": "2030760",
    "end": "2036159"
  },
  {
    "text": "compatibilities and perform per as a three node MCD cluster will a single",
    "start": "2036159",
    "end": "2041639"
  },
  {
    "text": "node elastic as do that",
    "start": "2041639",
    "end": "2047119"
  },
  {
    "text": "uh so I mean I think the specifics of deployment um would would really depend",
    "start": "2047119",
    "end": "2053960"
  },
  {
    "start": "2048000",
    "end": "2070000"
  },
  {
    "text": "on your application and your workload but um you know if I understand the question as can one elastic hash cluster",
    "start": "2053960",
    "end": "2060720"
  },
  {
    "text": "be used instead of three nodes you can just set up that elasticache cluster to have three nodes and um replicate that",
    "start": "2060720",
    "end": "2067398"
  },
  {
    "text": "setup in in a very straightforward way so I think this related question I noticed",
    "start": "2067399",
    "end": "2072760"
  },
  {
    "text": "that for most of our MCD clusters going Beyond three node clusters in order to",
    "start": "2072760",
    "end": "2078398"
  },
  {
    "text": "achieve consistent hashing degrades performance is the same true for node",
    "start": "2078399",
    "end": "2083520"
  },
  {
    "text": "sizes for elastic Ash instances um so I think again",
    "start": "2083520",
    "end": "2091320"
  },
  {
    "start": "2088000",
    "end": "2115000"
  },
  {
    "text": "uh think a lot of these questions will depend on the specific application um",
    "start": "2091320",
    "end": "2096679"
  },
  {
    "text": "consistent hashing is is really a hashing strategy and I think that's somewhat decoupled from the",
    "start": "2096679",
    "end": "2102920"
  },
  {
    "text": "number of notes so I would be surprised if that were the dri of decreased performance um but I think it's",
    "start": "2102920",
    "end": "2108720"
  },
  {
    "text": "something that can only really be answered for testing from testing your particular",
    "start": "2108720",
    "end": "2114440"
  },
  {
    "text": "application if we lose a node in a cluster do we lose part of the cache or is it replicated between nodes um the",
    "start": "2114440",
    "end": "2122160"
  },
  {
    "text": "way MCD is set up if a node goes down you know by default it does nothing since nodes do come back up and so yes",
    "start": "2122160",
    "end": "2128520"
  },
  {
    "text": "you would see degraded cache performance um while that node was being replaced in the case of elastic cache or",
    "start": "2128520",
    "end": "2134680"
  },
  {
    "text": "while you brought another nodee up um if you are managing the cach yourself and I think one of the key aspects to",
    "start": "2134680",
    "end": "2140760"
  },
  {
    "text": "deploying mcache in front of your application is to really understand during testing how many nodes you can",
    "start": "2140760",
    "end": "2146359"
  },
  {
    "text": "lose before your application starts to fall over can the cash cluster and easy to instance live in different regions",
    "start": "2146359",
    "end": "2154960"
  },
  {
    "start": "2149000",
    "end": "2240000"
  },
  {
    "text": "how is Network level security handled between easy2 un cach",
    "start": "2154960",
    "end": "2160079"
  },
  {
    "text": "not so um you cannot actually um use ec2",
    "start": "2160079",
    "end": "2166359"
  },
  {
    "text": "security groups in one region um defined in region one in region two um so um in",
    "start": "2166359",
    "end": "2174520"
  },
  {
    "text": "that sense you wouldn't be able to access um elastic Ash cluster in region one from region two um and that said",
    "start": "2174520",
    "end": "2183160"
  },
  {
    "text": "again it's it's kind of very similar to one of the questions that uh we talked about before um so accessing a cash",
    "start": "2183160",
    "end": "2189480"
  },
  {
    "text": "across regions imposes huge U you know Network latency and uh you know",
    "start": "2189480",
    "end": "2194599"
  },
  {
    "text": "inconsistency in uh um the uh performance right so um we would",
    "start": "2194599",
    "end": "2201079"
  },
  {
    "text": "recommend against doing that in even if we were to support that and the next question is uh how is the network level",
    "start": "2201079",
    "end": "2208319"
  },
  {
    "text": "security handled between ec2 and cach nodes so we talked about the ec2 security groups and so you can define a",
    "start": "2208319",
    "end": "2216359"
  },
  {
    "text": "set of ec2 instances and say that only these ec2 instances can access my uh",
    "start": "2216359",
    "end": "2221520"
  },
  {
    "text": "elastic as cluster um so um the security groups kind of uh uh the instances talk",
    "start": "2221520",
    "end": "2229040"
  },
  {
    "text": "through a different network and like we discussed packet sniffing is is uh um you know not possible within uh um the",
    "start": "2229040",
    "end": "2236200"
  },
  {
    "text": "internal E2 networ consider that um I have a very",
    "start": "2236200",
    "end": "2242720"
  },
  {
    "start": "2240000",
    "end": "2257000"
  },
  {
    "text": "small set of data that I would like to store but it uh but there's a huge huge",
    "start": "2242720",
    "end": "2247760"
  },
  {
    "text": "need of throughput is there a way to configure elastic as to replicate data to all nodes to increase",
    "start": "2247760",
    "end": "2255240"
  },
  {
    "text": "availability um so you know I think you can",
    "start": "2255240",
    "end": "2261079"
  },
  {
    "start": "2257000",
    "end": "2295000"
  },
  {
    "text": "um the configuration to achieve that is something that you would do on the client side and within your application",
    "start": "2261079",
    "end": "2266920"
  },
  {
    "text": "it's not really a recommended use case for MCD um simply because replicating",
    "start": "2266920",
    "end": "2272280"
  },
  {
    "text": "the same data across multiple cache nodes just tends to mean you have less available cache in total but if your",
    "start": "2272280",
    "end": "2278400"
  },
  {
    "text": "application doesn't have a large working set that may be an option that works but it's something that I think you would handle on the client side and it would",
    "start": "2278400",
    "end": "2285680"
  },
  {
    "text": "override the default behavior of mcash which is to uh to distribute data across",
    "start": "2285680",
    "end": "2290760"
  },
  {
    "text": "independent cach nodes rather than to keep data replicated across multiple ones yeah so you could create multiple",
    "start": "2290760",
    "end": "2297359"
  },
  {
    "start": "2295000",
    "end": "2311000"
  },
  {
    "text": "cache clusters and uh replicate the data at an application Level uh but uh at a",
    "start": "2297359",
    "end": "2304480"
  },
  {
    "text": "um server level we don't support replication at this",
    "start": "2304480",
    "end": "2309800"
  },
  {
    "text": "point do you uh have really detailed examples we could look uh at after this",
    "start": "2310200",
    "end": "2316680"
  },
  {
    "start": "2311000",
    "end": "2343000"
  },
  {
    "text": "webinar example with PHP and Java and potentially the file system can you send us a link um so there's um you know we we do",
    "start": "2316680",
    "end": "2324720"
  },
  {
    "text": "have documented examples on the elastic cache detail page and um there is a on",
    "start": "2324720",
    "end": "2330520"
  },
  {
    "text": "the code.google.com mcash repository there are numerous examples um of using",
    "start": "2330520",
    "end": "2335880"
  },
  {
    "text": "really any backend store um and uh MCD compatible system and LS",
    "start": "2335880",
    "end": "2342119"
  },
  {
    "text": "cach can you please define what a client is in in this sense so a client um a",
    "start": "2342119",
    "end": "2350319"
  },
  {
    "start": "2343000",
    "end": "2379000"
  },
  {
    "text": "client in this sense is software um for example if you're running PHP a PHP",
    "start": "2350319",
    "end": "2355599"
  },
  {
    "text": "mcash D library that would live along with your application code and so and",
    "start": "2355599",
    "end": "2361760"
  },
  {
    "text": "that that's what we mean when we talk about client in the context of MCD it's code that lives uh with your application",
    "start": "2361760",
    "end": "2368119"
  },
  {
    "text": "which allows you to configure your application to talk to MCD cach nodes",
    "start": "2368119",
    "end": "2374240"
  },
  {
    "text": "and allows you to perform operations um with the Cache can I use MC on my own servers and",
    "start": "2374240",
    "end": "2381640"
  },
  {
    "start": "2379000",
    "end": "2425000"
  },
  {
    "text": "then use AWS ltic cash for secondary failover autoscaling needs of mcash",
    "start": "2381640",
    "end": "2386680"
  },
  {
    "text": "mcache uh don't know whether this makes sense um I think in theory the answer is",
    "start": "2386680",
    "end": "2393240"
  },
  {
    "text": "yes if your own servers live in ec2 but I I'm not sure that you benefit from doing this um if you're interested in",
    "start": "2393240",
    "end": "2401119"
  },
  {
    "text": "achieving failover one way to do it as pen mentioned is to create multiple elastic cache clusters and do it that",
    "start": "2401119",
    "end": "2407520"
  },
  {
    "text": "way um but in general from a design philosophy standpoint the cache and",
    "start": "2407520",
    "end": "2412760"
  },
  {
    "text": "elastic cache is designed to be ephemeral with a persistent store behind it and having multiple layers of it",
    "start": "2412760",
    "end": "2418440"
  },
  {
    "text": "doesn't really achieve much U and adds quite a bit to your management management overhead and stack complexity",
    "start": "2418440",
    "end": "2424920"
  },
  {
    "text": "can I use mcash oh yeah sorry uh can i w app S3 request using elastic",
    "start": "2424920",
    "end": "2430280"
  },
  {
    "start": "2425000",
    "end": "2541000"
  },
  {
    "text": "Ash um so I guess uh if you mean um storing S3 related metadata in elasticas",
    "start": "2430280",
    "end": "2438839"
  },
  {
    "text": "yeah sure um also I think um S3 uh allows customers to um create um signed",
    "start": "2438839",
    "end": "2448040"
  },
  {
    "text": "URLs that live for a specific amount of time that can be sent out to multiple users so that's possible use case but",
    "start": "2448040",
    "end": "2455400"
  },
  {
    "text": "I'm not entirely sure what does wrapping S3 mean in this scenario yeah but at at",
    "start": "2455400",
    "end": "2461880"
  },
  {
    "text": "a high level if if S3 is your persistent store um you can use elastic cach in",
    "start": "2461880",
    "end": "2466920"
  },
  {
    "text": "front of it yeah so you can either store S3 um you know objects in S3 and put",
    "start": "2466920",
    "end": "2473359"
  },
  {
    "text": "them in elastic Ash for low latency axles or you could store your metadata um corresponding to um you know S3 and",
    "start": "2473359",
    "end": "2481440"
  },
  {
    "text": "put that in elastic Ash uh again it depends on the use case um is elastic as",
    "start": "2481440",
    "end": "2488200"
  },
  {
    "text": "useful for worldwide multi- gigabyte downloads that is DVD dis image downloads I think that's a great",
    "start": "2488200",
    "end": "2494240"
  },
  {
    "text": "question um so we have another service called cloudfront uh which has uh Edge",
    "start": "2494240",
    "end": "2500599"
  },
  {
    "text": "locations across the world that enables customers to um move content near their",
    "start": "2500599",
    "end": "2507079"
  },
  {
    "text": "end users um so cloudfront is uh you know very useful for U it's like a CDN",
    "start": "2507079",
    "end": "2514040"
  },
  {
    "text": "right so content delivery Network um it's uh very useful for static um and uh",
    "start": "2514040",
    "end": "2521200"
  },
  {
    "text": "High uh large objects whereas elastic Ash is more tuned for dynamic small",
    "start": "2521200",
    "end": "2527520"
  },
  {
    "text": "objects so um and and you know elastic Ash would typically use to um connect",
    "start": "2527520",
    "end": "2532640"
  },
  {
    "text": "with your application server and uh uh provide low low latency access for um",
    "start": "2532640",
    "end": "2538079"
  },
  {
    "text": "small object requests uh what is the maximum size or",
    "start": "2538079",
    "end": "2544160"
  },
  {
    "start": "2541000",
    "end": "2577000"
  },
  {
    "text": "number of notes that we can spin up in on elastic ad uh so on elastic cach we have a a",
    "start": "2544160",
    "end": "2550319"
  },
  {
    "text": "current limit of 20 nodes per cluster and um if you want to go over",
    "start": "2550319",
    "end": "2556800"
  },
  {
    "text": "that there is a um there is a sort of a submission request that will allow you to go higher um and there's no there's",
    "start": "2556800",
    "end": "2564760"
  },
  {
    "text": "no limit on uh the amount of memory it's just you can use the largest type of node and generate 20 of them if you",
    "start": "2564760",
    "end": "2570160"
  },
  {
    "text": "would like to do that does Elastica support Unicode data as well in key and value",
    "start": "2570160",
    "end": "2577960"
  },
  {
    "start": "2577000",
    "end": "2592000"
  },
  {
    "text": "um that that is a good question and while I don't have the I would be uh I'm",
    "start": "2577960",
    "end": "2584760"
  },
  {
    "text": "confident that it's yes as long as you can store it um it will be supported so as long as MCD supports it you can store",
    "start": "2584760",
    "end": "2591480"
  },
  {
    "text": "it are there plans to integrate elastic bean stock and elastic Ash to provide a single scalable",
    "start": "2591480",
    "end": "2598160"
  },
  {
    "start": "2592000",
    "end": "2612000"
  },
  {
    "text": "environment uh so we are exploring how to uh combine beant stock and um and",
    "start": "2598160",
    "end": "2604160"
  },
  {
    "text": "elastic cach and it's it's some and you know RDS is also part of that conversation and it's something that is",
    "start": "2604160",
    "end": "2609880"
  },
  {
    "text": "uh is on our road great uh so I guess that's pretty much it uh uh so uh I have a few",
    "start": "2609880",
    "end": "2618079"
  },
  {
    "start": "2612000",
    "end": "2729000"
  },
  {
    "text": "questions it'll be uh awesome if you guys can spend a couple of uh you know few seconds to answer them uh primarily",
    "start": "2618079",
    "end": "2625520"
  },
  {
    "text": "to get feedback from uh the you know for the webinar and uh how it whether it has",
    "start": "2625520",
    "end": "2631559"
  },
  {
    "text": "been useful for you so first question here did you find this webinar useful",
    "start": "2631559",
    "end": "2638920"
  },
  {
    "text": "and um just while we're doing the polls um thank you very much for your time and",
    "start": "2644480",
    "end": "2649880"
  },
  {
    "text": "we will be sending out uh the the credits for the two- months trial via email and recordings of the slides will",
    "start": "2649880",
    "end": "2657960"
  },
  {
    "text": "also be available and um you know as always feel free to get in touch with us um and my contact information is on the",
    "start": "2657960",
    "end": "2665599"
  },
  {
    "text": "slides as well okay uh the next one uh what do you think of the content level on the",
    "start": "2665599",
    "end": "2673920"
  },
  {
    "text": "quality would help us figure out if we need to get more technical or make it a",
    "start": "2673920",
    "end": "2679280"
  },
  {
    "text": "bit more high level uh in the subsequent",
    "start": "2679280",
    "end": "2685480"
  },
  {
    "text": "webinars great and the last question would you consider Amazon",
    "start": "2693880",
    "end": "2700960"
  },
  {
    "text": "elastic Ash for your future",
    "start": "2700960",
    "end": "2705480"
  },
  {
    "text": "projects yep cool excellent thank you very much um we really appreciate your",
    "start": "2720680",
    "end": "2726599"
  },
  {
    "text": "time f",
    "start": "2726599",
    "end": "2730280"
  }
]