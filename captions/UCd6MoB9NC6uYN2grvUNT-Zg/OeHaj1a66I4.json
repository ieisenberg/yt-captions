[
  {
    "text": "all right add my on i'm on that's great uh good morning guys",
    "start": "1439",
    "end": "7759"
  },
  {
    "text": "uh everybody thanks for coming out i know it's early and probably everybody",
    "start": "7759",
    "end": "13200"
  },
  {
    "text": "was out partying last night so i didn't actually get to attend uh skrillex but except on the 26th floor",
    "start": "13200",
    "end": "21520"
  },
  {
    "text": "i actually could hear skrillex so um i was included i was part of the",
    "start": "21520",
    "end": "26640"
  },
  {
    "text": "party so uh john handler i'm a solution architect with amazon web",
    "start": "26640",
    "end": "32078"
  },
  {
    "text": "services and um it's been a really a tremendously exciting year for cloud search really",
    "start": "32079",
    "end": "38960"
  },
  {
    "text": "happy to share with you a ton of the developments and new features that we've brought out this year",
    "start": "38960",
    "end": "44480"
  },
  {
    "text": "about 25 new features for cloud search and we'll go over all of those and and",
    "start": "44480",
    "end": "50079"
  },
  {
    "text": "go into a good deal of depth on a bunch of those features so first",
    "start": "50079",
    "end": "55680"
  },
  {
    "text": "thing i want to ask is who is a cloud search user current user okay",
    "start": "55680",
    "end": "62719"
  },
  {
    "text": "so maybe half of the audience so this is a deep dive talk and i",
    "start": "62719",
    "end": "68560"
  },
  {
    "text": "promise you we will go deep but let's make sure for the half of the audience that has not used cloud search we just",
    "start": "68560",
    "end": "75360"
  },
  {
    "text": "cover a little bit of the basics i promise i'll be quick so you have a big pile of data and you want",
    "start": "75360",
    "end": "82400"
  },
  {
    "text": "to search that data and uh generally speaking you know",
    "start": "82400",
    "end": "87680"
  },
  {
    "text": "you you want to get that data into a format and send it into a search engine right",
    "start": "87680",
    "end": "93520"
  },
  {
    "text": "so with cloud search what we do is you create what we call a search domain with your domain",
    "start": "93520",
    "end": "99280"
  },
  {
    "text": "you get two endpoints one of those is a document endpoint this is a an endpoint exposed through",
    "start": "99280",
    "end": "105759"
  },
  {
    "text": "dns the interaction is restful so",
    "start": "105759",
    "end": "111119"
  },
  {
    "text": "you structure your documents and you send them off to your document endpoint at the other end of it you have a search",
    "start": "111119",
    "end": "118880"
  },
  {
    "text": "endpoint and we provide a query language that allows you to write queries",
    "start": "118880",
    "end": "125280"
  },
  {
    "text": "against that data and really the point of a search engine is a search engine will bring back the",
    "start": "125280",
    "end": "133280"
  },
  {
    "text": "most relevant results for those queries it's a little bit of a way to differentiate from a database in a",
    "start": "133280",
    "end": "139360"
  },
  {
    "text": "database you send a query and you receive all of the answers with a search engine you send a query",
    "start": "139360",
    "end": "147360"
  },
  {
    "text": "and you receive the best answers and the relevance itself is a function that you",
    "start": "147360",
    "end": "152400"
  },
  {
    "text": "can either write or there's built-in statistical relevance functions that sort your documents for you",
    "start": "152400",
    "end": "158160"
  },
  {
    "text": "according to the query and ultimately the point is as you",
    "start": "158160",
    "end": "164000"
  },
  {
    "text": "integrate with your application or your website that you drive engagement through",
    "start": "164000",
    "end": "169360"
  },
  {
    "text": "getting people to the data that they're interested in and the the products that they want to buy",
    "start": "169360",
    "end": "175920"
  },
  {
    "text": "or what have you and this is you know drives engagement sells your",
    "start": "175920",
    "end": "181840"
  },
  {
    "text": "products and that so let's talk a little bit about amazon",
    "start": "181840",
    "end": "187440"
  },
  {
    "text": "cloud search and again it's been a really exciting year we've as i said 25 products new released",
    "start": "187440",
    "end": "194959"
  },
  {
    "text": "released this year but looking at sort of the arc of where we're coming from in 2012 what was that",
    "start": "194959",
    "end": "203280"
  },
  {
    "text": "in 2012 we released amazon cloud search based on the proprietary",
    "start": "203280",
    "end": "208319"
  },
  {
    "text": "a9 engine and what we found you know our customers really demanded both more features and kind of",
    "start": "208319",
    "end": "215360"
  },
  {
    "text": "a lower cost structure so um we have started moving",
    "start": "215360",
    "end": "220560"
  },
  {
    "text": "in an open source direction we actually took apache solar barton and brought it in as our core",
    "start": "220560",
    "end": "228239"
  },
  {
    "text": "search technology and what we really see is our core mission is to make the process and the",
    "start": "228239",
    "end": "234480"
  },
  {
    "text": "operation of a search engine getting it up and running making it highly available",
    "start": "234480",
    "end": "240319"
  },
  {
    "text": "monitoring and making it self-healing keeping the cluster up and running we",
    "start": "240319",
    "end": "245599"
  },
  {
    "text": "see that as our core mission and our core value add so that's really where we look to bring",
    "start": "245599",
    "end": "250720"
  },
  {
    "text": "value and features so um in march of this year again we",
    "start": "250720",
    "end": "258000"
  },
  {
    "text": "brought out our solar product and i'm gonna be putting up a couple of pro tips here and there",
    "start": "258000",
    "end": "264080"
  },
  {
    "text": "um you know i was just talking with a couple of customers in the audience who have migrated from the older version",
    "start": "264080",
    "end": "270639"
  },
  {
    "text": "to the newer version and consensus was great idea migrate forward to the newer api of",
    "start": "270639",
    "end": "277600"
  },
  {
    "text": "cloud search so just some of the things that we've come out with",
    "start": "277600",
    "end": "283840"
  },
  {
    "text": "with that version so as i mentioned more features and actually we find that there's a lower cost structure so if you're",
    "start": "283840",
    "end": "290240"
  },
  {
    "text": "running on the 2011 version and you migrate forward to 2013 we see",
    "start": "290240",
    "end": "295440"
  },
  {
    "text": "quite a bit of savings just in that step alone we also have a ton of new features so",
    "start": "295440",
    "end": "302400"
  },
  {
    "text": "we have additional data types the original version was somewhat limited in the data types",
    "start": "302400",
    "end": "307759"
  },
  {
    "text": "most importantly we do support now natively dates and geo types as well as some additional",
    "start": "307759",
    "end": "314160"
  },
  {
    "text": "numeric types out of the box one of the big customer asks was that we would support more than just english original",
    "start": "314160",
    "end": "320800"
  },
  {
    "text": "version was just english the newer version supports 34 different languages",
    "start": "320800",
    "end": "326320"
  },
  {
    "text": "we also added some critical sort of search ui features like highlighting and search suggestions",
    "start": "326320",
    "end": "334000"
  },
  {
    "text": "which support things like a type ahead or an auto complete feature we have some solar features in there",
    "start": "334000",
    "end": "339680"
  },
  {
    "text": "like turn boosting fuzzy matching and we also continue to innovate on the operational front so we have",
    "start": "339680",
    "end": "346720"
  },
  {
    "text": "i am integration full im integration down to the ability to control the search and",
    "start": "346720",
    "end": "353039"
  },
  {
    "text": "document updates integration with the aws sdk and the common cli to let you script it",
    "start": "353039",
    "end": "359520"
  },
  {
    "text": "up and a host of others so we're going to go into depth on those",
    "start": "359520",
    "end": "364560"
  },
  {
    "text": "and you know as i talk to customers and as i hear where people are running into problems i",
    "start": "364560",
    "end": "370160"
  },
  {
    "text": "thought it over and i tried to sort of bucket it out and figure out where the places that people kind of typically run into",
    "start": "370160",
    "end": "376880"
  },
  {
    "text": "issues so these are the buckets that i came up with um as simple as it is to get started with",
    "start": "376880",
    "end": "383759"
  },
  {
    "text": "cloud search a lot of people run into issues with getting everything set up and getting",
    "start": "383759",
    "end": "388880"
  },
  {
    "text": "their data in so we're gonna spend a little time talking about how do we do that in a good way",
    "start": "388880",
    "end": "394479"
  },
  {
    "text": "scaling is a huge topic and we've released a feature that lets you",
    "start": "394479",
    "end": "399840"
  },
  {
    "text": "set a minimum on your scale but this has also caused a lot of confusion",
    "start": "399840",
    "end": "405039"
  },
  {
    "text": "because people don't know well how to think about how big do i need to get so we're going to have quite a bit of",
    "start": "405039",
    "end": "410720"
  },
  {
    "text": "detail on scaling we're going to talk through some of the new query interface and then we'll also talk about some",
    "start": "410720",
    "end": "417280"
  },
  {
    "text": "common architectural patterns that i run into",
    "start": "417280",
    "end": "422319"
  },
  {
    "text": "okay so let's uh dive into this first topic of setting up",
    "start": "422319",
    "end": "427840"
  },
  {
    "text": "to get set up with cloud search you know what you want to do first of all is you want to create your search domain",
    "start": "428560",
    "end": "435440"
  },
  {
    "text": "you want to configure it and then you need to take your documents and create batches out of those",
    "start": "435440",
    "end": "440960"
  },
  {
    "text": "documents now document is the core object or the core entity of the search engine so in this step what",
    "start": "440960",
    "end": "446639"
  },
  {
    "text": "you're really going to do is you're going to take your data build it into a format or a set of entities that cloud search can",
    "start": "446639",
    "end": "452880"
  },
  {
    "text": "search over and then you're going to well you're going to secure your domain as well",
    "start": "452880",
    "end": "458880"
  },
  {
    "text": "and then you're going to upload that set of documents to the search engine so that you can search against them and",
    "start": "458880",
    "end": "465199"
  },
  {
    "text": "the last thing is you want to actually monitor the security and want to make sure that",
    "start": "465199",
    "end": "470479"
  },
  {
    "text": "the access to that domain is the intended access",
    "start": "470479",
    "end": "475120"
  },
  {
    "text": "so again one of our big features we released was the integration with the aws common cli",
    "start": "475680",
    "end": "481919"
  },
  {
    "text": "we have the aws cloud search command and this allows you to do all of the",
    "start": "481919",
    "end": "487440"
  },
  {
    "text": "administrative tasks and you know here what i recommend one common thing that we hear",
    "start": "487440",
    "end": "492960"
  },
  {
    "text": "is that people want to either copy or take a dev a q a qa environment and a prod",
    "start": "492960",
    "end": "499039"
  },
  {
    "text": "environment and they want to be able to copy the configuration forward so my recommendation is to",
    "start": "499039",
    "end": "504400"
  },
  {
    "text": "set this all up in a script and then you can script up your your index configuration it lets you",
    "start": "504400",
    "end": "511120"
  },
  {
    "text": "run that script and just copy out a new version of your domain",
    "start": "511120",
    "end": "517200"
  },
  {
    "text": "as simple as it seems taking your data and getting it into cloud search format actually is a",
    "start": "519519",
    "end": "526000"
  },
  {
    "text": "stumbling block for many people um there's a lot of different places that this happens but",
    "start": "526000",
    "end": "531760"
  },
  {
    "text": "we're just going to look at the general pattern of what you need to do to get your data in so what i've done is",
    "start": "531760",
    "end": "537680"
  },
  {
    "text": "i actually downloaded a bunch of tweets and i had them on my local file system",
    "start": "537680",
    "end": "543600"
  },
  {
    "text": "so i wrote a script where i just walked that directory and opened each of the",
    "start": "543600",
    "end": "549839"
  },
  {
    "text": "files and read all of that data in now the pattern is the same whether you have a streaming api you may",
    "start": "549839",
    "end": "557040"
  },
  {
    "text": "have objects in s3 you may have objects in a relational database",
    "start": "557040",
    "end": "562560"
  },
  {
    "text": "the pattern is i'm going to go to my object store or stores open that store up and then one at a",
    "start": "562560",
    "end": "569440"
  },
  {
    "text": "time pull objects out of there for each one i'm actually going to do a conversion from",
    "start": "569440",
    "end": "575760"
  },
  {
    "text": "the original form to the form that cloud search expects and once i fill up my batch",
    "start": "575760",
    "end": "583680"
  },
  {
    "text": "cloud search document endpoint is a batch api once i fill up my batch then i will",
    "start": "583680",
    "end": "589440"
  },
  {
    "text": "flush it out i chose to flush it to my local disk you can actually use the",
    "start": "589440",
    "end": "594720"
  },
  {
    "text": "sdk or another http transport method to push it straight to your domain",
    "start": "594720",
    "end": "600720"
  },
  {
    "text": "whichever way you'd like to do it one of this is this is maybe the most",
    "start": "600720",
    "end": "607279"
  },
  {
    "text": "important thing that i can tell you this morning so one of the most important things so uh as i said cloud search has a",
    "start": "607279",
    "end": "613760"
  },
  {
    "text": "batch format for its document uploads we the batches themselves can be up to",
    "start": "613760",
    "end": "620160"
  },
  {
    "text": "five megabytes and within that batch you can have as many documents as will fit in five megabytes",
    "start": "620160",
    "end": "626160"
  },
  {
    "text": "so you'll get absolutely the best performance if you put as many documents in your batch as possible sometimes what",
    "start": "626160",
    "end": "632959"
  },
  {
    "text": "we've seen is that people who are sending single document batches will see the times increase for how long",
    "start": "632959",
    "end": "640240"
  },
  {
    "text": "it takes to deploy those documents to the running index so to get the best throughput and to get",
    "start": "640240",
    "end": "646800"
  },
  {
    "text": "the lowest latency on your updates use the maximum batches",
    "start": "646800",
    "end": "651920"
  },
  {
    "text": "okay so we've walked the file and i'm just going to talk a little bit about the data conversion so the first thing",
    "start": "652079",
    "end": "659600"
  },
  {
    "text": "that that you need to do much of this data can come from users so it can be user generated data",
    "start": "659600",
    "end": "665760"
  },
  {
    "text": "could be coming from some kind of legacy system uh and it could have uh bad characters",
    "start": "665760",
    "end": "671760"
  },
  {
    "text": "in it actually typically it has at least a bunch of some bad characters in it and bad characters here cloud",
    "start": "671760",
    "end": "677600"
  },
  {
    "text": "search accepts uh all of the unicode characters except for those that are illegal xml",
    "start": "677600",
    "end": "683920"
  },
  {
    "text": "but all of the unicode characters encoded as utf-8 if the coding's off or",
    "start": "683920",
    "end": "689120"
  },
  {
    "text": "if the characters are bad things will fail and it is confusing many people get confused by this",
    "start": "689120",
    "end": "695120"
  },
  {
    "text": "so the first really important thing is to clean the text and make sure that all of the characters",
    "start": "695120",
    "end": "700399"
  },
  {
    "text": "are valid characters cloud search documents have an id and",
    "start": "700399",
    "end": "706000"
  },
  {
    "text": "the id is what identifies that document uniquely within the search engine for me it was fairly easy i have tweets",
    "start": "706000",
    "end": "713360"
  },
  {
    "text": "tweets have ids so i simply pulled out the tweet id as my document id",
    "start": "713360",
    "end": "719120"
  },
  {
    "text": "if there are you can do almost anything with the id if it's you know from a database you may",
    "start": "719120",
    "end": "724800"
  },
  {
    "text": "have a row identifier you may have you can hash up something and just have a random value in there either but it",
    "start": "724800",
    "end": "731040"
  },
  {
    "text": "has to be consistent the next thing we want to do cloud search is a",
    "start": "731040",
    "end": "736639"
  },
  {
    "text": "denormalized format for documents so we don't support a nested document type tweets actually are nested",
    "start": "736639",
    "end": "742959"
  },
  {
    "text": "they have a user section and they have a retweeted section so you want to go in and pull out all of",
    "start": "742959",
    "end": "748959"
  },
  {
    "text": "those additional pieces of metadata and bring them up to the top level and again this is true if you have",
    "start": "748959",
    "end": "754959"
  },
  {
    "text": "nested documents in any format you want to go in and denormalize them and pull all that data up to the top",
    "start": "754959",
    "end": "761760"
  },
  {
    "text": "finally there's some additional stuff in there that we don't care about so we'll throw that stuff away and in",
    "start": "761760",
    "end": "767600"
  },
  {
    "text": "the end what we get is a set of fields this is the the format that i was talking about",
    "start": "767600",
    "end": "773440"
  },
  {
    "text": "i have a class that i wrote that just puts out the correct json but fundamentally we have a set of fields",
    "start": "773440",
    "end": "778800"
  },
  {
    "text": "and values that have been sourced from the tweet as i mentioned have cli integration now",
    "start": "778800",
    "end": "786800"
  },
  {
    "text": "the important thing is we have two commands in the aws cli a lot of people have missed the second",
    "start": "786800",
    "end": "791839"
  },
  {
    "text": "command so there is a aws cloud search dom what is a cloud",
    "start": "791839",
    "end": "797360"
  },
  {
    "text": "search domain client and then this one is the one that you call to do",
    "start": "797360",
    "end": "803360"
  },
  {
    "text": "document uploads searches and suggests so you can do all those through the cli",
    "start": "803360",
    "end": "808480"
  },
  {
    "text": "but you have to use the right command cli responds yes i uploaded 5000 some",
    "start": "808480",
    "end": "814399"
  },
  {
    "text": "documents another great thing that we came out with this year is",
    "start": "814399",
    "end": "820320"
  },
  {
    "text": "iam integration for across all of cloud search commands we had already",
    "start": "820320",
    "end": "826800"
  },
  {
    "text": "integration for configuration commands we now have integration for search dock and suggest so you can",
    "start": "826800",
    "end": "832800"
  },
  {
    "text": "set up your im security resource based policy like this attaches to a resources this allows you to",
    "start": "832800",
    "end": "838720"
  },
  {
    "text": "specify for a domain either the actors or the ip addresses that are allowed to connect",
    "start": "838720",
    "end": "845040"
  },
  {
    "text": "to that domain in this case for the actions of search and suggest",
    "start": "845040",
    "end": "850480"
  },
  {
    "text": "you can also set it up user-based and user-based policy again this this confuses me endlessly",
    "start": "850480",
    "end": "856399"
  },
  {
    "text": "the user-based policies don't have users they attach to users right so the user-based policy attaches to a user",
    "start": "856399",
    "end": "862959"
  },
  {
    "text": "with this you can control what that particular user can do and you can see here you specify the arn",
    "start": "862959",
    "end": "870079"
  },
  {
    "text": "amazon resource name for your domain and then you can specify the actions for that user",
    "start": "870079",
    "end": "875920"
  },
  {
    "text": "so you also want to monitor and make sure that uh",
    "start": "875920",
    "end": "880959"
  },
  {
    "text": "you know people are accessing your domain in the way that you intend this this year we also released",
    "start": "880959",
    "end": "886240"
  },
  {
    "text": "integration with cloudtrail for um configuration commands so these are the describe star and update star",
    "start": "886240",
    "end": "893199"
  },
  {
    "text": "delete star we are pushing uh logs to cloudtrail",
    "start": "893199",
    "end": "898240"
  },
  {
    "text": "and i just have an example there it's really small don't worry about it just wanted to show",
    "start": "898240",
    "end": "903279"
  },
  {
    "text": "you what kind of comes out of cloud search this is a describe domains call so you can use cloudtrail to do the",
    "start": "903279",
    "end": "909279"
  },
  {
    "text": "normal auditing and monitoring of the access to your domain",
    "start": "909279",
    "end": "915360"
  },
  {
    "text": "secure and monitor your domain and when you look at the different policies",
    "start": "916160",
    "end": "921600"
  },
  {
    "text": "and what you can accomplish with them uh what we typically would would see is that your search and suggest commands should be",
    "start": "921600",
    "end": "929519"
  },
  {
    "text": "fairly wide open this will allow a broad range of people to connect and do searches if you have for instance a mobile application",
    "start": "929519",
    "end": "936079"
  },
  {
    "text": "you may want to open it all the way up just to let people connect directly the doc service you want to keep that",
    "start": "936079",
    "end": "942639"
  },
  {
    "text": "one really tightly locked down that's the one where if somebody is uploading documents to your",
    "start": "942639",
    "end": "949199"
  },
  {
    "text": "domain that's not you not a good thing don't want to do that and then as i mentioned with the",
    "start": "949199",
    "end": "955040"
  },
  {
    "text": "user-based policies you can actually build up a set of policies for different business classes of users so if you have",
    "start": "955040",
    "end": "961519"
  },
  {
    "text": "say somebody who is an operator they would need to do something like maybe scale domains",
    "start": "961519",
    "end": "967839"
  },
  {
    "text": "you could have devs who want to have full access to the range of cloud search commands",
    "start": "967839",
    "end": "973440"
  },
  {
    "text": "you could have business owners that are able to set up either will list out all the domains and",
    "start": "973440",
    "end": "979120"
  },
  {
    "text": "and do some monitoring on them okay first big topic",
    "start": "979120",
    "end": "985839"
  },
  {
    "text": "so thinking about scaling as i said we released a feature that lets you set the minimum instance type and the",
    "start": "985839",
    "end": "992800"
  },
  {
    "text": "minimum number of replicas for that instance type and what does that mean and how do i",
    "start": "992800",
    "end": "998079"
  },
  {
    "text": "think about that and how do i understand what numbers i should use for that",
    "start": "998079",
    "end": "1003920"
  },
  {
    "text": "so there's a couple of cases where you definitely want to think about scaling and the first one of those is when",
    "start": "1003920",
    "end": "1010079"
  },
  {
    "text": "you're loading in data and we'll cover that one and we'll cover how you do that and then if you're going to anticipate a",
    "start": "1010079",
    "end": "1017199"
  },
  {
    "text": "traffic spike you also want to scale in that case and we'll cover that too",
    "start": "1017199",
    "end": "1022880"
  },
  {
    "text": "so when you create a cloud search domain your search domain starts on a single small",
    "start": "1023199",
    "end": "1028959"
  },
  {
    "text": "and we have a number of people who have large data sets hundreds of gigabytes",
    "start": "1028959",
    "end": "1034319"
  },
  {
    "text": "and they're starting out on a small if you try to stick hundreds of gigabytes through a small",
    "start": "1034319",
    "end": "1039918"
  },
  {
    "text": "the experience is pretty rocky right what happens again you start on a small and now cloud",
    "start": "1039919",
    "end": "1045839"
  },
  {
    "text": "search will automatically as you push data in scale you to a large an extra large",
    "start": "1045839",
    "end": "1051520"
  },
  {
    "text": "a double extra large and then partition out but all of this there's a there's a",
    "start": "1051520",
    "end": "1056559"
  },
  {
    "text": "somewhat slow reaction time and you want to be able to",
    "start": "1056559",
    "end": "1062640"
  },
  {
    "text": "scale yourself up beforehand so this is a largish table and what i've done here",
    "start": "1062640",
    "end": "1070720"
  },
  {
    "text": "is i've taken each of the instance types and i've maximally loaded it with two different data sets okay the",
    "start": "1070720",
    "end": "1078480"
  },
  {
    "text": "twitter data is mostly metadata and a small amount of text the common",
    "start": "1078480",
    "end": "1085360"
  },
  {
    "text": "crawl data is from a web crawl and it's a data set available on aws",
    "start": "1085360",
    "end": "1091039"
  },
  {
    "text": "the common crawl data is larger documents about 6k average with fewer metadata so we have",
    "start": "1091039",
    "end": "1097200"
  },
  {
    "text": "two kind of different document types and you can see the results are actually a little bit different for the tweets",
    "start": "1097200",
    "end": "1103120"
  },
  {
    "text": "if we look at the 2x larges we can get 107 gigs of tweets into a single 2x large whereas with the",
    "start": "1103120",
    "end": "1111840"
  },
  {
    "text": "common crawl data we can get 64 gig into uh into the the 2x large",
    "start": "1111840",
    "end": "1118559"
  },
  {
    "text": "the asterisk there is each partition of 2x larges would take that amount of data so when you're",
    "start": "1118559",
    "end": "1125760"
  },
  {
    "text": "thinking about it you can use this as sort of a baseline or for your thinking about how do i",
    "start": "1125760",
    "end": "1130960"
  },
  {
    "text": "scale up for my load in and what's going on here what's the difference really between",
    "start": "1130960",
    "end": "1136960"
  },
  {
    "text": "the tweets and the common crawl data when your data comes in what cloud",
    "start": "1136960",
    "end": "1142880"
  },
  {
    "text": "search does is creates a data structure called an inverted index out of that data the size",
    "start": "1142880",
    "end": "1148559"
  },
  {
    "text": "of that thing is dependent on number one the number of different words and then number two the number of",
    "start": "1148559",
    "end": "1154720"
  },
  {
    "text": "occurrences of those different words so when you have text you have something that's dense",
    "start": "1154720",
    "end": "1160559"
  },
  {
    "text": "with words and occurrences of those words the index structure itself actually is quite a bit larger than when",
    "start": "1160559",
    "end": "1166480"
  },
  {
    "text": "you have a more sparse version of text like with metadata or",
    "start": "1166480",
    "end": "1171679"
  },
  {
    "text": "short tweets right eventually those go on to the node",
    "start": "1171679",
    "end": "1176799"
  },
  {
    "text": "the other important thing to think about is options so with the cloud search configuration you",
    "start": "1176799",
    "end": "1182000"
  },
  {
    "text": "can actually set uh different options on your search fields",
    "start": "1182000",
    "end": "1187280"
  },
  {
    "text": "and as you set those options those have various costs in terms of index space so what i did here is with the common",
    "start": "1187280",
    "end": "1193919"
  },
  {
    "text": "crawl data i started out with all of the options off and i took a baseline index size then i",
    "start": "1193919",
    "end": "1200240"
  },
  {
    "text": "turned on all of the options and took an index size for that and what you find there is that",
    "start": "1200240",
    "end": "1205520"
  },
  {
    "text": "with all of the options on it's about two and a half times as big",
    "start": "1205520",
    "end": "1210559"
  },
  {
    "text": "i then went one by one and turned on the options and compared them to the baseline no option index size in this case you",
    "start": "1211600",
    "end": "1218720"
  },
  {
    "text": "can see that highlight is most of what the all options case is",
    "start": "1218720",
    "end": "1225280"
  },
  {
    "text": "and return is also a large portion of that now when you turn on highlight actually you're also turning on return",
    "start": "1225280",
    "end": "1231919"
  },
  {
    "text": "so that's why you have a little bit of overlap there you can see the oh there it goes that using the sort",
    "start": "1231919",
    "end": "1240000"
  },
  {
    "text": "is fairly inexpensive and using facet is very inexpensive so if you're thinking about costing and",
    "start": "1240000",
    "end": "1247520"
  },
  {
    "text": "you have some higher costs and you want to turn off some options to optimize that cost",
    "start": "1247520",
    "end": "1252720"
  },
  {
    "text": "you look first at the highlight and make sure that you're using highlighting cases where you really need it",
    "start": "1252720",
    "end": "1257760"
  },
  {
    "text": "and then look at return is also a big a chance to really drop your index size",
    "start": "1257760",
    "end": "1263039"
  },
  {
    "text": "quite a bit another question that comes up a lot is well can i multi-thread",
    "start": "1263039",
    "end": "1269039"
  },
  {
    "text": "against cloud search and the answer here is yes you can multi-thread and what i have up on the screen is the",
    "start": "1269039",
    "end": "1275360"
  },
  {
    "text": "number of threads that we run on each of the instance types to accept document service",
    "start": "1275360",
    "end": "1280400"
  },
  {
    "text": "connections so smalls we have 2 then 5 9 and 17. and the recommendation here is",
    "start": "1280400",
    "end": "1288080"
  },
  {
    "text": "if you're going to multi-thread against an instance of that type that you use these",
    "start": "1288080",
    "end": "1293120"
  },
  {
    "text": "numbers one three five and nine threads you can push it harder and what you would see is if you put too",
    "start": "1293120",
    "end": "1299600"
  },
  {
    "text": "many threads against it you'll start getting 500 errors so you can use that to sort of dial in",
    "start": "1299600",
    "end": "1305280"
  },
  {
    "text": "the maximum throughput okay so all of this let's take an",
    "start": "1305280",
    "end": "1311280"
  },
  {
    "text": "example to kind of make it a little bit more concrete let's say you have 150 gigabytes of data",
    "start": "1311280",
    "end": "1316799"
  },
  {
    "text": "that you want to load into cloud search so what i typically use is 64 gig",
    "start": "1316799",
    "end": "1322480"
  },
  {
    "text": "as a baseline kind of common number for what i would expect to get onto a 2x",
    "start": "1322480",
    "end": "1327919"
  },
  {
    "text": "large so if i say okay well i'll get 2x 64 gigs and i have 150",
    "start": "1327919",
    "end": "1333200"
  },
  {
    "text": "probably what i need is three partitions of 2x larges so i'd scale myself up to three partitions and with those three",
    "start": "1333200",
    "end": "1339200"
  },
  {
    "text": "partitions i could run 27 concurrent threads to push all that data in",
    "start": "1339200",
    "end": "1347840"
  },
  {
    "text": "how do i do that is the first thing i want to do is again scale up my domain and when i when i",
    "start": "1347919",
    "end": "1354000"
  },
  {
    "text": "issue the command to update scaling parameters my my domain will require an",
    "start": "1354000",
    "end": "1359679"
  },
  {
    "text": "indexing so i scale my domain and i index it when it comes in with the three hosts i",
    "start": "1359679",
    "end": "1366480"
  },
  {
    "text": "can then load in my data so i can push it in as fast as i can now if you are pushing at a maximal velocity",
    "start": "1366480",
    "end": "1373440"
  },
  {
    "text": "like this your searches will be somewhat wonky they really will",
    "start": "1373440",
    "end": "1379440"
  },
  {
    "text": "but as as this is a data load typically that's not going to matter if you just want to get your data in as fast as",
    "start": "1379440",
    "end": "1384880"
  },
  {
    "text": "possible scale it up push it as fast as you can and then what you want to do is set it back",
    "start": "1384880",
    "end": "1390159"
  },
  {
    "text": "to the mid to the defaults or the minimums so in this case i set it back down to an m1 small and a partition",
    "start": "1390159",
    "end": "1396320"
  },
  {
    "text": "button so why did i do that well cloud search you're setting a floor on",
    "start": "1396320",
    "end": "1401840"
  },
  {
    "text": "scaling so this is not saying make my domain a single m1 small it's saying make it minimum and n1 small",
    "start": "1401840",
    "end": "1409039"
  },
  {
    "text": "cloud search will take all of that data you pushed in and when you when you run your index documents cloud search will then",
    "start": "1409039",
    "end": "1415600"
  },
  {
    "text": "pick the right deployment for you so if it actually went on three you'll go on three",
    "start": "1415600",
    "end": "1420640"
  },
  {
    "text": "if it actually went on six you'll go on six right and if 101 you'll go on one so this second step allows cloud search",
    "start": "1420640",
    "end": "1427600"
  },
  {
    "text": "to resize the index repartition it and get it ready to go",
    "start": "1427600",
    "end": "1432799"
  },
  {
    "text": "so frequently you'll be running along at a fine clip and you have some you know something",
    "start": "1435440",
    "end": "1441520"
  },
  {
    "text": "that's coming up super bowl or you know a big ad release or something like that and you know",
    "start": "1441520",
    "end": "1446799"
  },
  {
    "text": "you're going to have some kind of traffic spike you want to warm for that traffic spike because cloud",
    "start": "1446799",
    "end": "1451840"
  },
  {
    "text": "search will respond but if it's a very spiky behavior cloud search takes five ten minutes to scale up if you want",
    "start": "1451840",
    "end": "1458640"
  },
  {
    "text": "to be ready you can now pre-scale for that so just looking at how cloud search scales",
    "start": "1458640",
    "end": "1465039"
  },
  {
    "text": "let's say i have my three partitions and i have a certain set of cpus every query goes to every partition",
    "start": "1465039",
    "end": "1471440"
  },
  {
    "text": "so the cpus are sort of joined to serve that query the query itself will take some amount",
    "start": "1471440",
    "end": "1477840"
  },
  {
    "text": "of cpu and as i push more traffic in what happens is that cpu becomes loaded",
    "start": "1477840",
    "end": "1484720"
  },
  {
    "text": "when it gets loaded cloud search will then add additional hosts replicas of those partitions",
    "start": "1484720",
    "end": "1489919"
  },
  {
    "text": "so i'll essentially get more cpu to serve each partition if i keep sending data that'll keep",
    "start": "1489919",
    "end": "1495440"
  },
  {
    "text": "coming in of course cloud searches elastic will also scale down when you when your load drops so scaling",
    "start": "1495440",
    "end": "1502240"
  },
  {
    "text": "for queries we add partitions i did some testing to come up with",
    "start": "1502240",
    "end": "1509440"
  },
  {
    "text": "what is the capacity of each of the instance types i have to put a ton of caveats here uh",
    "start": "1509440",
    "end": "1516159"
  },
  {
    "text": "this is with you know my test data and my test queries so my test data in this case again twitter and common crawl",
    "start": "1516159",
    "end": "1523760"
  },
  {
    "text": "and i also generated ten thousand one two and three word queries and i used",
    "start": "1523760",
    "end": "1529919"
  },
  {
    "text": "the simple query interface just q equals and some text this would probably represent",
    "start": "1529919",
    "end": "1535919"
  },
  {
    "text": "something like an upper bound on what you could get but i actually got these numbers so i ran jmeter with a script called",
    "start": "1535919",
    "end": "1544080"
  },
  {
    "text": "jmeter ec2 it's kind of groovy it's a little bit kind of old school but it's a bash script that fires up ec2 instances",
    "start": "1544080",
    "end": "1551919"
  },
  {
    "text": "for you puts everything on them and runs it so with the m1 smalls i used two hosts and 10",
    "start": "1551919",
    "end": "1559520"
  },
  {
    "text": "threads and i was able to achieve 25 or 48 qps for the different data sets and",
    "start": "1559520",
    "end": "1566400"
  },
  {
    "text": "those are the average query times and you can see as it scales up i use four hosts 20 threads",
    "start": "1566400",
    "end": "1572240"
  },
  {
    "text": "i get 108 and on the big end i got 566 and 985. these actually were somewhat",
    "start": "1572240",
    "end": "1578480"
  },
  {
    "text": "surprising to me i would expect them to be about half as big in a normal use case one of the things that happened here",
    "start": "1578480",
    "end": "1584320"
  },
  {
    "text": "is because i had multiple hosts running the same query set i actually was benefiting from the",
    "start": "1584320",
    "end": "1589760"
  },
  {
    "text": "caching in solar so if in your case if you do have a big common",
    "start": "1589760",
    "end": "1595200"
  },
  {
    "text": "data query load and you have a long tail you may get something like this anyway i",
    "start": "1595200",
    "end": "1602240"
  },
  {
    "text": "wanted to sort of point at it and say okay here's at least one test case where",
    "start": "1602240",
    "end": "1607760"
  },
  {
    "text": "with my queries i got these these response times and throughputs",
    "start": "1607760",
    "end": "1614559"
  },
  {
    "text": "so again let's take an example let's say you're going along at a good clip and you know that your single m1 small",
    "start": "1614559",
    "end": "1620159"
  },
  {
    "text": "can can take 20 queries per second of your traffic and you know okay i'm",
    "start": "1620159",
    "end": "1625360"
  },
  {
    "text": "going to go up to 75 queries per second that's my forecast right so what i'm going to do in that case i'm going to use my update scaling",
    "start": "1625360",
    "end": "1632320"
  },
  {
    "text": "to add additional replicas i would set my minimum replicas to 3 on the somewhat optimistic hope that",
    "start": "1632320",
    "end": "1638559"
  },
  {
    "text": "there's a little bit above that 20 qps and three should probably be able to handle it",
    "start": "1638559",
    "end": "1645919"
  },
  {
    "text": "the other thing that i don't particularly have a slide for is all of those numbers are good if you're",
    "start": "1647840",
    "end": "1653440"
  },
  {
    "text": "trying to cost out a cloud search use case so you can you can use those numbers and",
    "start": "1653440",
    "end": "1659039"
  },
  {
    "text": "and figure out okay well i have 500 gig of data and i know about 64 gig to a 2x large that",
    "start": "1659039",
    "end": "1666159"
  },
  {
    "text": "should put me on about eight partitions to sort of size out the number of petitions same thing for query traffic",
    "start": "1666159",
    "end": "1672240"
  },
  {
    "text": "you can use these as a guess to try to figure out how much it's going to cost",
    "start": "1672240",
    "end": "1677840"
  },
  {
    "text": "i have a quick walk through the query interface the 2013 api we really released",
    "start": "1677840",
    "end": "1684080"
  },
  {
    "text": "something that is a lot more solar in flavor so the syntax is different in the migration this is one of the steps that",
    "start": "1684080",
    "end": "1690960"
  },
  {
    "text": "you'll have to make is to change your queries to the new query format so we have a simple queries",
    "start": "1690960",
    "end": "1698399"
  },
  {
    "text": "same thing q equals with a piece of text this is against the twitter data set so",
    "start": "1698399",
    "end": "1703840"
  },
  {
    "text": "if i say idk i get i don't know if it's yummy or what lal i'm hungry",
    "start": "1703840",
    "end": "1711840"
  },
  {
    "text": "we also do support structured queries and the way we've handled this is we now have a q.parser parameter that lets you",
    "start": "1711840",
    "end": "1719679"
  },
  {
    "text": "specify that you want to use a structured query so this query looks for i don't know within the country of the united states",
    "start": "1719679",
    "end": "1727520"
  },
  {
    "text": "and that gives me i don't know what it is but something's different",
    "start": "1727520",
    "end": "1733200"
  },
  {
    "text": "we also have a number of different query options that you can specify there are enough there are a number of different parsers",
    "start": "1736080",
    "end": "1741200"
  },
  {
    "text": "we also support the lucene parser and the dis max parser out of solar i can set options so in",
    "start": "1741200",
    "end": "1747120"
  },
  {
    "text": "this case what i'm doing is i'm specifying which fields i want to search the fields are the text and also the",
    "start": "1747120",
    "end": "1753679"
  },
  {
    "text": "user description and then i can set weights on those fields to boost",
    "start": "1753679",
    "end": "1758720"
  },
  {
    "text": "their value in scoring them so in this case i've multiplied my text by 4 my",
    "start": "1758720",
    "end": "1763840"
  },
  {
    "text": "user description by half this is a typical thing that i would do with titles and bodies or other things where there's a",
    "start": "1763840",
    "end": "1770960"
  },
  {
    "text": "more important piece of text i can boost that up in this case i get the as you can see",
    "start": "1770960",
    "end": "1777520"
  },
  {
    "text": "the i don't know gets heavily weighted in the text so we get really lots of occurrences of that",
    "start": "1777520",
    "end": "1785679"
  },
  {
    "text": "we did release native geosupport so you know how do i do geo",
    "start": "1786320",
    "end": "1792960"
  },
  {
    "text": "we have a lat lawn data type a native data type that lets you specify a lat-lon pair in this case i can filter my queries",
    "start": "1792960",
    "end": "1800720"
  },
  {
    "text": "across a range of latitudes and longitudes this gives me a nice bounding box so i can search in this case near",
    "start": "1800720",
    "end": "1806640"
  },
  {
    "text": "pac-bell park in san francisco between those latitudes longitude search for baseball",
    "start": "1806640",
    "end": "1813360"
  },
  {
    "text": "and use the structured parser and then i find i love talking baseball with my dad",
    "start": "1813360",
    "end": "1820000"
  },
  {
    "text": "the fq there is somewhat confusing to people so now we have a q and we have an fq so what's the",
    "start": "1820960",
    "end": "1826080"
  },
  {
    "text": "difference in which one do i use well the fq",
    "start": "1826080",
    "end": "1832000"
  },
  {
    "text": "is used strictly for filtering so it's the matches for an fq do not count",
    "start": "1832240",
    "end": "1838640"
  },
  {
    "text": "towards the score that's the main difference between them the other is that filters are actually a little",
    "start": "1838640",
    "end": "1845520"
  },
  {
    "text": "bit faster there's code in solar that actually aggressively caches filters so what i've done here is",
    "start": "1845520",
    "end": "1853360"
  },
  {
    "text": "i've actually run a q query and then an fq query that was equivalent",
    "start": "1853360",
    "end": "1859519"
  },
  {
    "text": "and then actually because because i wanted to really see the value of the caches i actually ran only 10",
    "start": "1859519",
    "end": "1865840"
  },
  {
    "text": "queries with the the same fq and the lines there you have the green line is the 90th",
    "start": "1865840",
    "end": "1871600"
  },
  {
    "text": "percentile the red line is the average and the blue line is the 50th percentile so you can see it's it's nearly twice as",
    "start": "1871600",
    "end": "1878720"
  },
  {
    "text": "fast in the you really got good use of the cache case",
    "start": "1878720",
    "end": "1884320"
  },
  {
    "text": "again use use filters when you can they support the structured query language",
    "start": "1884480",
    "end": "1889519"
  },
  {
    "text": "so you can use ands ors knots you can build up complex filters and run them",
    "start": "1889519",
    "end": "1897600"
  },
  {
    "text": "the other thing you can do with our geodata type is you can sort by distance so we've exposed a",
    "start": "1897760",
    "end": "1903919"
  },
  {
    "text": "function the haberman distance function this is a big hairy piece of math that",
    "start": "1903919",
    "end": "1909120"
  },
  {
    "text": "tries to take into account this the curvature of the earth at the particular latitude or longitude wherever you are",
    "start": "1909120",
    "end": "1916000"
  },
  {
    "text": "but it's fair it's really easy to use in cloud search you just put in the target latitude and",
    "start": "1916000",
    "end": "1921679"
  },
  {
    "text": "longitude again pac-bell park and then the geo is the field on the document",
    "start": "1921679",
    "end": "1927440"
  },
  {
    "text": "so this will expression will calculate for each document that matches the",
    "start": "1927440",
    "end": "1932480"
  },
  {
    "text": "distance to pack bell park and then i use my sort parameter",
    "start": "1932480",
    "end": "1938799"
  },
  {
    "text": "to say okay i want to sort by that distance right so i use a bounding box filter and then sort by",
    "start": "1938799",
    "end": "1945519"
  },
  {
    "text": "distance i get all of the matches that are close to back bell park sorted by how close they are to pac-bell park",
    "start": "1945519",
    "end": "1952480"
  },
  {
    "text": "you use a structured parser i can return text still can't believe it what a game can't",
    "start": "1952480",
    "end": "1958320"
  },
  {
    "text": "wait for tuesday etc",
    "start": "1958320",
    "end": "1963440"
  },
  {
    "text": "so another feature we released was term boosting this is very useful if you have a",
    "start": "1963440",
    "end": "1968720"
  },
  {
    "text": "personalization use case where you know something about your particular user who's querying",
    "start": "1968720",
    "end": "1974399"
  },
  {
    "text": "you can you want to sort of boost up matches for brands or things that they",
    "start": "1974399",
    "end": "1980880"
  },
  {
    "text": "like so if i just search for baseball i get a bunch of tweets about baseball",
    "start": "1980880",
    "end": "1987600"
  },
  {
    "text": "i can also use this syntax to search the hashtag fields",
    "start": "1987600",
    "end": "1992640"
  },
  {
    "text": "for sf giants and boost that up by four this syntax works in the in the",
    "start": "1992640",
    "end": "2000480"
  },
  {
    "text": "structured query parser and in that in this case i actually boosted it up so high i got",
    "start": "2000480",
    "end": "2005519"
  },
  {
    "text": "only sf giants but you can use ores here and you can allow that that weight to play with the",
    "start": "2005519",
    "end": "2012159"
  },
  {
    "text": "kinds of matches that come back for that user",
    "start": "2012159",
    "end": "2019760"
  },
  {
    "text": "i mentioned we support 34 languages i would be remiss if i did not talk about how we support",
    "start": "2019760",
    "end": "2025360"
  },
  {
    "text": "those languages so our approach to languages is we take all of the text processing",
    "start": "2025360",
    "end": "2032399"
  },
  {
    "text": "parameterization for how to deal with a particular language and we put it in something that we call an analysis",
    "start": "2032399",
    "end": "2037440"
  },
  {
    "text": "scheme so the analysis scheme i give it a name i can set the language there",
    "start": "2037440",
    "end": "2042960"
  },
  {
    "text": "and then this is half of the menu so you can see some of the examples of the languages we support",
    "start": "2042960",
    "end": "2048800"
  },
  {
    "text": "i can also set stop words for that language and stems we have algorithmic stemming",
    "start": "2048800",
    "end": "2054800"
  },
  {
    "text": "depending on language we have different levels of stemming available and also i can set up synonyms through a synonym",
    "start": "2054800",
    "end": "2061040"
  },
  {
    "text": "dictionary so all of this will be then in my configuration i take that and i apply that language",
    "start": "2061040",
    "end": "2068079"
  },
  {
    "text": "to a particular field tweets actually come with a language of the tweet in all of",
    "start": "2068079",
    "end": "2075679"
  },
  {
    "text": "that metadata so one of the usual ways to handle a multilingual case like that",
    "start": "2075679",
    "end": "2081599"
  },
  {
    "text": "is to split out each of the languages into a different field we'll talk about there's another way you",
    "start": "2081599",
    "end": "2086638"
  },
  {
    "text": "can handle that and there's some trade-offs and pluses and minuses for that but in this case what i did is i created",
    "start": "2086639",
    "end": "2093200"
  },
  {
    "text": "a text field in each of the languages as i'm processing the tweet i'm gonna split it out i'm gonna say okay this is a",
    "start": "2093200",
    "end": "2099680"
  },
  {
    "text": "french tweet so i'll stick it into the french text field then my query is if i know my queryer is",
    "start": "2099680",
    "end": "2105440"
  },
  {
    "text": "querying in french then i'll query just against that field or i can use a mix of weights",
    "start": "2105440",
    "end": "2111359"
  },
  {
    "text": "and query against all of those text fields if i don't know the language",
    "start": "2111359",
    "end": "2117838"
  },
  {
    "text": "you can also use the aws sdk for searching and we now have",
    "start": "2118480",
    "end": "2125359"
  },
  {
    "text": "again a split in the classes that are available so we have the amazon cloud search",
    "start": "2125359",
    "end": "2130560"
  },
  {
    "text": "client we also have the amazon cloud search domain client very important some people again",
    "start": "2130560",
    "end": "2136480"
  },
  {
    "text": "have missed this you can use the domain client to send search requests and document requests to",
    "start": "2136480",
    "end": "2143200"
  },
  {
    "text": "your cloud search domain and what what i've done here it's fairly simple",
    "start": "2143200",
    "end": "2148240"
  },
  {
    "text": "i use my prop my profile credentials provider this is a newer one that that uses a an",
    "start": "2148240",
    "end": "2154560"
  },
  {
    "text": "aws profile to grab the present credentials user profile there should be replaced with",
    "start": "2154560",
    "end": "2160480"
  },
  {
    "text": "the name of an actual profile i set an endpoint there's a nice interface in the search request",
    "start": "2160480",
    "end": "2167359"
  },
  {
    "text": "class for java that lets me set facets and filters and all of the other stuff",
    "start": "2167359",
    "end": "2173119"
  },
  {
    "text": "through individual methods so i can build up a query fairly easily i set my query and i can just send it",
    "start": "2173119",
    "end": "2179040"
  },
  {
    "text": "off with the search this is useful the most",
    "start": "2179040",
    "end": "2184320"
  },
  {
    "text": "useful part about the sdk is it will do all of the signing for you so now with the iam integration you you",
    "start": "2184320",
    "end": "2191280"
  },
  {
    "text": "should send signed requests the sdk can can help with all of that do the",
    "start": "2191280",
    "end": "2196720"
  },
  {
    "text": "signing for you and again you have the cli available cloud search",
    "start": "2196720",
    "end": "2203040"
  },
  {
    "text": "domain client you can just send queries to it",
    "start": "2203040",
    "end": "2208160"
  },
  {
    "text": "okay switching gears a little bit i wanted to talk about some of the common questions that come up around architecting and some of the data",
    "start": "2208720",
    "end": "2217119"
  },
  {
    "text": "and operational kind of architectures that people ask about and one is well should i cache should i",
    "start": "2217119",
    "end": "2223920"
  },
  {
    "text": "put a cache in front of my search engine and this is very much like with a database with a database you can you can",
    "start": "2223920",
    "end": "2230560"
  },
  {
    "text": "employ a cache to increase the throughput and decrease the load on your database server",
    "start": "2230560",
    "end": "2236480"
  },
  {
    "text": "same thing is true with search the pattern here is what you do is you take the query full text of the",
    "start": "2236480",
    "end": "2242160"
  },
  {
    "text": "query use it as a key give it a time to live that uh makes sense for your application",
    "start": "2242160",
    "end": "2247680"
  },
  {
    "text": "in the in the presence of how often you update things and then when a search request comes in you hit",
    "start": "2247680",
    "end": "2253520"
  },
  {
    "text": "the cache first with that query if you got the response send it back out if not send it to the",
    "start": "2253520",
    "end": "2260079"
  },
  {
    "text": "search engine and then back out to the user and then cache it off",
    "start": "2260079",
    "end": "2265200"
  },
  {
    "text": "so again you can decrease the load on your search domain and that becomes important if you're",
    "start": "2265200",
    "end": "2271040"
  },
  {
    "text": "handling a large volume of queries uh you'll see a much lower load on your search domain and",
    "start": "2271040",
    "end": "2276640"
  },
  {
    "text": "potentially a lower cost because of that you'll you'll miss some you'll be able to avoid some replication",
    "start": "2276640",
    "end": "2284160"
  },
  {
    "text": "area and this one comes up many times in many different ways and fundamentally the question is well i",
    "start": "2284160",
    "end": "2291119"
  },
  {
    "text": "have this heterogeneous data set so i'm a sas provider i have",
    "start": "2291119",
    "end": "2296400"
  },
  {
    "text": "end customers i am doing tweets and i have n languages i am running an e-commerce",
    "start": "2296400",
    "end": "2303520"
  },
  {
    "text": "site and i have books movies music cds etc so how do i take how do i handle all of",
    "start": "2303520",
    "end": "2310560"
  },
  {
    "text": "this heterogeneous data what do i do with it there's two answers and the first answer is a collocation",
    "start": "2310560",
    "end": "2316800"
  },
  {
    "text": "so what you can do is you can take all of those documents all of them and put them into one domain",
    "start": "2316800",
    "end": "2323520"
  },
  {
    "text": "you use a single field on your documents with some kind of identifier if it's a sas provider and i have a",
    "start": "2323520",
    "end": "2329200"
  },
  {
    "text": "customer id i can use my customer id on each of the documents for that customer and then send a filter",
    "start": "2329200",
    "end": "2335680"
  },
  {
    "text": "with each query i add a filter query with the customer id and that restricts the matches for that",
    "start": "2335680",
    "end": "2341920"
  },
  {
    "text": "query to specifically that customer the other solution for this is to employ",
    "start": "2341920",
    "end": "2348480"
  },
  {
    "text": "a multi-domain solution so i can take each of my customers and put them on a separate search domain i then use the",
    "start": "2348480",
    "end": "2356400"
  },
  {
    "text": "different endpoints to route my queries based on my customer id",
    "start": "2356400",
    "end": "2361920"
  },
  {
    "text": "or document type or language or etc but how do you really think about what's",
    "start": "2361920",
    "end": "2367520"
  },
  {
    "text": "the what's the way to choose between them and the the big points the major bullets are you know if",
    "start": "2367520",
    "end": "2374800"
  },
  {
    "text": "you have a high number of tenants say a million then spinning up a million",
    "start": "2374800",
    "end": "2380960"
  },
  {
    "text": "search domains is not really going to be cost effective so if it's a high number of tenants",
    "start": "2380960",
    "end": "2386160"
  },
  {
    "text": "you'd definitely think about a single domain solution you have a large variation in how those",
    "start": "2386160",
    "end": "2392960"
  },
  {
    "text": "tenants perform so if i have a hundred customers but one customer sends a thousand queries per",
    "start": "2392960",
    "end": "2399200"
  },
  {
    "text": "second and you know 50 customers send one or fewer queries per second",
    "start": "2399200",
    "end": "2404480"
  },
  {
    "text": "so i have variation there then i would tend to think of splitting them out this also comes up in terms of schema if",
    "start": "2404480",
    "end": "2411119"
  },
  {
    "text": "i have uh my customers have very different schemas or my books movies cds etc very different",
    "start": "2411119",
    "end": "2417280"
  },
  {
    "text": "schemas i would tend to split them out especially if those schemas are changing",
    "start": "2417280",
    "end": "2422560"
  },
  {
    "text": "at a high rate every time you do a schema change you have to rebuild your document if everything is in the same domain then",
    "start": "2422560",
    "end": "2429599"
  },
  {
    "text": "you're paying the cost of rebuilding everybody's data when anybody's schema changes",
    "start": "2429599",
    "end": "2435359"
  },
  {
    "text": "so you really want to in that case you want to say okay pull those guys out because they're going to generate a lot",
    "start": "2435359",
    "end": "2440560"
  },
  {
    "text": "of cost for me where we usually end up is some kind of hybrid where you say okay here's my 100",
    "start": "2440560",
    "end": "2447760"
  },
  {
    "text": "smallest customers i'm going to put them in one domain here's my 20 big customers they're each going to go in their own",
    "start": "2447760",
    "end": "2454000"
  },
  {
    "text": "domain and you manage it like that",
    "start": "2454000",
    "end": "2458079"
  },
  {
    "text": "so i wanted to talk a little bit about relevance the you know mining user behavior is an",
    "start": "2461760",
    "end": "2468400"
  },
  {
    "text": "entire multiple phd's worth of information that you can dig into but there are some simple things that",
    "start": "2468400",
    "end": "2474640"
  },
  {
    "text": "you can do to improve your results the basic pattern looks like i have",
    "start": "2474640",
    "end": "2480880"
  },
  {
    "text": "somebody who's interacting with my website they're sending queries they're clicking on things they're buying things",
    "start": "2480880",
    "end": "2486800"
  },
  {
    "text": "so what i want to do is i want to track all of that interaction right ultimately what is the search",
    "start": "2486800",
    "end": "2493040"
  },
  {
    "text": "query what are the results for that query did the user click on something did the user buy something at a",
    "start": "2493040",
    "end": "2498800"
  },
  {
    "text": "bare bones level you can push all of that into redshift or another data store",
    "start": "2498800",
    "end": "2504319"
  },
  {
    "text": "in a sort of full-blown way a full-blown use case you would then use emr to crunch all that data up and",
    "start": "2504319",
    "end": "2512000"
  },
  {
    "text": "push it back into the application database and create it on your documents as additional scores and measures that",
    "start": "2512000",
    "end": "2518000"
  },
  {
    "text": "you use to change the relevance some of the things again that you can do that are a little",
    "start": "2518000",
    "end": "2524640"
  },
  {
    "text": "bit simpler you can do document boosting if you're just tracking even without that big",
    "start": "2524640",
    "end": "2530480"
  },
  {
    "text": "architecture if you're just tracking which documents get clicked on and you push that back into the document",
    "start": "2530480",
    "end": "2536000"
  },
  {
    "text": "itself as a numeric field you can then apply that that field in a rank expression",
    "start": "2536000",
    "end": "2542000"
  },
  {
    "text": "to boost up the value of that document always bearing in mind that you don't",
    "start": "2542000",
    "end": "2547040"
  },
  {
    "text": "want to have a self-reinforcing you want to keep the thing tamped down a little bit so it doesn't blow up",
    "start": "2547040",
    "end": "2554720"
  },
  {
    "text": "you can also augment documents if you happen to be tracking queries and which documents got clicked",
    "start": "2554720",
    "end": "2560240"
  },
  {
    "text": "for those queries you can add the query words to the document in a field",
    "start": "2560240",
    "end": "2565359"
  },
  {
    "text": "that's a keywords field or a query field and you can use that for an additional source of matching",
    "start": "2565359",
    "end": "2571200"
  },
  {
    "text": "again you want to use field weighting to make sure that that has a lower score",
    "start": "2571200",
    "end": "2576640"
  },
  {
    "text": "than the main match fields but it does provide additional evidence that people might be interested in that document",
    "start": "2576640",
    "end": "2583520"
  },
  {
    "text": "another thing you can do is you can use the queries as a source of information about",
    "start": "2583520",
    "end": "2589839"
  },
  {
    "text": "synonyms if i find that these query words happen together often then or that they're",
    "start": "2589839",
    "end": "2598079"
  },
  {
    "text": "corresponding in user clicks so users searched for this and clicked on this the user also",
    "start": "2598079",
    "end": "2603680"
  },
  {
    "text": "searched for that other thing and clicked on the same thing there's evidence there that those two queries might have some synonymous",
    "start": "2603680",
    "end": "2610560"
  },
  {
    "text": "information in them so that can be a good source where do i find synonyms",
    "start": "2610560",
    "end": "2616720"
  },
  {
    "text": "so there was a ton of information that talk as i said it's been really a huge",
    "start": "2617839",
    "end": "2622880"
  },
  {
    "text": "year and you know just just some of the the points that i'd like you to take away number one",
    "start": "2622880",
    "end": "2628800"
  },
  {
    "text": "migrate to the 2013 api all of these features are 2013 api only",
    "start": "2628800",
    "end": "2634160"
  },
  {
    "text": "if you're using 2011 definitely worth it to migrate use maximal batches",
    "start": "2634160",
    "end": "2640400"
  },
  {
    "text": "you will do much better for data load in and",
    "start": "2640400",
    "end": "2647440"
  },
  {
    "text": "query spikes think about manual scaling you now have some good numbers to go look at to figure out how big do you",
    "start": "2647440",
    "end": "2653280"
  },
  {
    "text": "need to kill we have a number of different solar features i've really scratched the",
    "start": "2653280",
    "end": "2659280"
  },
  {
    "text": "surface only of our query interface so go have a look at the documentation there's a ton of different stuff you can do with queries",
    "start": "2659280",
    "end": "2666560"
  },
  {
    "text": "and then thinking about architecting again the one that comes up most often multi-tenant domains we now have a nice way or at least some",
    "start": "2666560",
    "end": "2673280"
  },
  {
    "text": "framework to think about how to do that for your use cases",
    "start": "2673280",
    "end": "2678400"
  },
  {
    "text": "so that's it for me i encourage you to do your feedback",
    "start": "2678480",
    "end": "2684800"
  },
  {
    "text": "the person who gets the most feedback can win a pinto so i'm really hoping for that and also we've",
    "start": "2684800",
    "end": "2691839"
  },
  {
    "text": "released the hands-on lab for cloud search that walks you through the total basics of getting set up and",
    "start": "2691839",
    "end": "2697920"
  },
  {
    "text": "running some queries it's actually a pretty nice lab i encourage you to go take that one it's",
    "start": "2697920",
    "end": "2703520"
  },
  {
    "text": "a nice one so thank you very much for your attention and your attendance i really appreciate it",
    "start": "2703520",
    "end": "2710640"
  }
]