[
  {
    "start": "0",
    "end": "18000"
  },
  {
    "text": "In this video, you’ll see how to create a \ncustom dashboard and alerts for AWS",
    "start": "0",
    "end": "4028"
  },
  {
    "text": "Elastic Disaster Recovery (AWS DRS).",
    "start": "4028",
    "end": "7161"
  },
  {
    "text": "With this solution, you can create an \nAmazon CloudWatch dashboard to",
    "start": "7749",
    "end": "11156"
  },
  {
    "text": "monitor the health of your DRS environment, \nand set up email alerts for your DRS resources.",
    "start": "11156",
    "end": "16000"
  },
  {
    "text": "To get started, let’s navigate to CloudWatch \nand start creating a custom dashboard.",
    "start": "17958",
    "end": "21890"
  },
  {
    "start": "18000",
    "end": "205000"
  },
  {
    "text": "For the purposes of this video, we already \nhave some replicated DRS servers we can use.",
    "start": "24696",
    "end": "29175"
  },
  {
    "text": "Let’s give it the name of \n DRS-Health-Dashboard.",
    "start": "30097",
    "end": "32583"
  },
  {
    "text": "Our CloudWatch custom dashboard \nwas created successfully.",
    "start": "35673",
    "end": "38450"
  },
  {
    "text": "Now let’s add some widgets to it.",
    "start": "38450",
    "end": "40000"
  },
  {
    "text": "The Line widget lets us compare metrics over time.",
    "start": "40911",
    "end": "43314"
  },
  {
    "text": "We’ll select the Metrics data source, \nand then configure the widget for DRS.",
    "start": "44236",
    "end": "48015"
  },
  {
    "text": "We’ll configure the metrics by source server.",
    "start": "50592",
    "end": "52767"
  },
  {
    "text": "These are all the source \nservers DRS is installed on.",
    "start": "55102",
    "end": "57747"
  },
  {
    "text": "Let’s search for and select LagDuration.",
    "start": "58062",
    "end": "60397"
  },
  {
    "text": "This metric measures the time in \nseconds since the server was last in",
    "start": "61403",
    "end": "64430"
  },
  {
    "text": "Continuous Data Protection (CDP) mode.",
    "start": "64430",
    "end": "67062"
  },
  {
    "text": "We’ll include all the source server \nresults when creating the widget.",
    "start": "67952",
    "end": "70753"
  },
  {
    "text": "Let’s add another widget.",
    "start": "72387",
    "end": "73497"
  },
  {
    "text": "Let’s search for and select Backlog.",
    "start": "84320",
    "end": "86385"
  },
  {
    "text": "This metric measures the amount \nof data yet to be synced, in bytes.",
    "start": "86866",
    "end": "90082"
  },
  {
    "text": "Again, we'll include all source server \nresults when creating the widget.",
    "start": "90982",
    "end": "94131"
  },
  {
    "text": "Let’s add a third widget.",
    "start": "96487",
    "end": "97596"
  },
  {
    "text": "This time, we’ll choose EC2 metrics.",
    "start": "102750",
    "end": "105069"
  },
  {
    "text": "Let’s select Per-Instance Metrics.",
    "start": "107383",
    "end": "109222"
  },
  {
    "text": "We’ll select NetworkIn metrics.",
    "start": "111956",
    "end": "113749"
  },
  {
    "text": "This is a useful metric to determine \nif the incoming bytes are too high",
    "start": "114199",
    "end": "117325"
  },
  {
    "text": "for your replication server.",
    "start": "117325",
    "end": "118620"
  },
  {
    "text": "In that case, a server instance size \nupgrade would be recommended.",
    "start": "119365",
    "end": "122545"
  },
  {
    "text": "We’ll sort by instance name and \nselect our DRS replication servers.",
    "start": "123540",
    "end": "126913"
  },
  {
    "text": "Next, let’s add a widget for CPU utilization.",
    "start": "131751",
    "end": "134493"
  },
  {
    "text": "Again, we’ll select EC2 \nand Per-Instance Metrics.",
    "start": "139860",
    "end": "142964"
  },
  {
    "text": "Let’s search for and select CPUUtilization.",
    "start": "144860",
    "end": "147552"
  },
  {
    "text": "We’ll again sort by instance name \nand select our DRS replication servers.",
    "start": "151217",
    "end": "155136"
  },
  {
    "text": "Let’s add one more widget that will \nshow the amount of available I/O",
    "start": "159524",
    "end": "162408"
  },
  {
    "text": "for our replication servers.",
    "start": "162408",
    "end": "163917"
  },
  {
    "text": "Again, we’ll select EC2 \nand Per-Instance Metrics.",
    "start": "165698",
    "end": "168689"
  },
  {
    "text": "We’ll search for and add EBSIO-Balance%.",
    "start": "172000",
    "end": "175101"
  },
  {
    "text": "A low EBSIO-Balance could signify \na replication server disk type is too",
    "start": "175698",
    "end": "179515"
  },
  {
    "text": "slow and needs an upgrade.",
    "start": "179516",
    "end": "180901"
  },
  {
    "text": "We’ll sort by instance name and \nselect our DRS replication servers.",
    "start": "181875",
    "end": "185249"
  },
  {
    "text": "We’ve now created our custom \nCloudWatch dashboard.",
    "start": "189993",
    "end": "192471"
  },
  {
    "text": "We can filter the data using the \nsettings at the top of the page.",
    "start": "192880",
    "end": "195609"
  },
  {
    "text": "We can also resize the tiles.",
    "start": "196000",
    "end": "197597"
  },
  {
    "text": "Let’s save what we’ve done so far.",
    "start": "198466",
    "end": "200044"
  },
  {
    "text": "Next, let’s navigate to the Amazon \nSimple Notification Service (SNS) page",
    "start": "200975",
    "end": "205294"
  },
  {
    "start": "205000",
    "end": "257000"
  },
  {
    "text": "and create a topic for \nDRS replication monitoring.",
    "start": "205294",
    "end": "208251"
  },
  {
    "text": "Let’s name the topic \nDRS-Replication-Monitoring.",
    "start": "209256",
    "end": "212104"
  },
  {
    "text": "We’ll use the Standard option in \norder to receive e-mail notifications.",
    "start": "214780",
    "end": "218102"
  },
  {
    "text": "Let’s keep the other default settings \nbut add a tag, which is optional.",
    "start": "219014",
    "end": "222141"
  },
  {
    "text": "We’ll give it a value of DRS.",
    "start": "222623",
    "end": "224403"
  },
  {
    "text": "Let’s create the topic.",
    "start": "227649",
    "end": "228795"
  },
  {
    "text": "Now we’ll create a topic subscription.",
    "start": "232136",
    "end": "233869"
  },
  {
    "text": "Let’s choose the email protocol \nand add a test email address.",
    "start": "234518",
    "end": "237455"
  },
  {
    "text": "Now we can create our subscription.",
    "start": "242630",
    "end": "244216"
  },
  {
    "text": "An email will be sent to our test email \naddress to confirm our subscription.",
    "start": "247180",
    "end": "250385"
  },
  {
    "text": "Once the subscription has been confirmed \nvia email, the status will update to “Confirmed.”",
    "start": "250762",
    "end": "255032"
  },
  {
    "text": "Next, let’s link our SNS topic to an \nevent through Amazon EventBridge.",
    "start": "256000",
    "end": "259702"
  },
  {
    "start": "257000",
    "end": "362000"
  },
  {
    "text": "We’ll create a new rule.",
    "start": "261765",
    "end": "262791"
  },
  {
    "text": "Let’s give it the name of DRS-replication-\nmonitoring and build an event pattern.",
    "start": "264341",
    "end": "268120"
  },
  {
    "text": "Our event pattern will default to AWS events.",
    "start": "270162",
    "end": "272787"
  },
  {
    "text": "Let’s skip the sample event and \ngo directly to the event pattern.",
    "start": "273666",
    "end": "276525"
  },
  {
    "text": "We’ll leave AWS services \nselected for the event source.",
    "start": "277468",
    "end": "280578"
  },
  {
    "text": "Next, we’ll select Elastic Disaster \nRecovery Service as the AWS service to use.",
    "start": "282391",
    "end": "286923"
  },
  {
    "text": "For the event type, we’ll select DRS Source \nServer Data Replication Stalled Change.",
    "start": "290429",
    "end": "295159"
  },
  {
    "text": "Next, we’ll select a target type of SNS \nTopic and specify the topic we just created.",
    "start": "298522",
    "end": "303397"
  },
  {
    "text": "We’ll skip the configure tags \nsection and proceed to review",
    "start": "310602",
    "end": "313763"
  },
  {
    "text": "the rule we have been working on.",
    "start": "313764",
    "end": "315194"
  },
  {
    "text": "Let’s create the rule.",
    "start": "316094",
    "end": "317228"
  },
  {
    "text": "This EventBridge rule will now invoke \nan SNS topic email when a DRS",
    "start": "322412",
    "end": "326449"
  },
  {
    "text": "replication server is in a stalled state.",
    "start": "326450",
    "end": "328717"
  },
  {
    "text": "Finally, let’s return to the CloudWatch Elastic \nDisaster Recovery dashboard we created.",
    "start": "331932",
    "end": "336395"
  },
  {
    "text": "We’re receiving DRS data through our \ncustom dashboard, ensuring we are up",
    "start": "338217",
    "end": "341625"
  },
  {
    "text": "to date with the health of our environment and \ncan make proactive adjustments as needed.",
    "start": "341625",
    "end": "345209"
  },
  {
    "text": "You’ve just seen how to create a \ncustom dashboard and alerts for",
    "start": "347765",
    "end": "350319"
  },
  {
    "text": "AWS Elastic Disaster Recovery.",
    "start": "350319",
    "end": "352629"
  },
  {
    "text": "You can learn more about this topic in \nthe description and links for this video.",
    "start": "353592",
    "end": "356719"
  },
  {
    "text": "Thanks for watching. Now it's your turn to try.",
    "start": "356981",
    "end": "359056"
  }
]