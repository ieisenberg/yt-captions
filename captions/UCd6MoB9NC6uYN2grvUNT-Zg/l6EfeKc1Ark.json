[
  {
    "start": "0",
    "end": "17000"
  },
  {
    "text": "hi everyone my name is Leo janovski I'm a principal Solutions architect at Amazon web services and today we're",
    "start": "4240",
    "end": "10880"
  },
  {
    "text": "going to talk about building serverless chatbots so thank you for your time and thank you for",
    "start": "10880",
    "end": "16840"
  },
  {
    "text": "attending so before I start uh my talk uh I just wanted to let you know that there's going to be a serverless chatbot",
    "start": "16840",
    "end": "23960"
  },
  {
    "start": "17000",
    "end": "61000"
  },
  {
    "text": "competition uh submissions are due by September 29th and uh basically the competition involves creat a bot for",
    "start": "23960",
    "end": "30800"
  },
  {
    "text": "slack that runs on AWS Lambda and Amazon API Gateway uh this is sponsored by",
    "start": "30800",
    "end": "37600"
  },
  {
    "text": "slack and AWS and uh winning uh the winners will receive uh free tickets to",
    "start": "37600",
    "end": "44280"
  },
  {
    "text": "AWS reinvent and more as well as uh mentions in the Serv keynote during",
    "start": "44280",
    "end": "49760"
  },
  {
    "text": "reent so get your submissions in by uh September 29th and go to aw chatbot",
    "start": "49760",
    "end": "56160"
  },
  {
    "text": "deos.com for more details and uh how to get started",
    "start": "56160",
    "end": "61920"
  },
  {
    "start": "61000",
    "end": "90000"
  },
  {
    "text": "so what's the agenda for today we're going to talk about what is chat Ops why is chatops useful uh we're going to be",
    "start": "62480",
    "end": "69119"
  },
  {
    "text": "talking about what are chat Bots uh so uh and how do they play into chat Ops",
    "start": "69119",
    "end": "75000"
  },
  {
    "text": "and what are some examples of chatbots we're going to also be talking about what technologies uh you can use to build chat Bots and how you can build",
    "start": "75000",
    "end": "82680"
  },
  {
    "text": "and integrate chat Bots with slack and what are some risks that you should uh watch out for when building these chat",
    "start": "82680",
    "end": "88759"
  },
  {
    "text": "Bots so first let's talk about what is chat Ops chat Ops is basically an approach to",
    "start": "88759",
    "end": "96000"
  },
  {
    "start": "90000",
    "end": "114000"
  },
  {
    "text": "communication that allows teams to collaborate and manage many aspects of their infrastructure code and data from",
    "start": "96000",
    "end": "101240"
  },
  {
    "text": "the comfort and safety of a chat room uh for the purpose of this talk we're going to assume that chat room is slack uh",
    "start": "101240",
    "end": "107719"
  },
  {
    "text": "however you can use manyu Solutions IRC uh hip chat all kinds of things out there uh for",
    "start": "107719",
    "end": "114000"
  },
  {
    "start": "114000",
    "end": "218000"
  },
  {
    "text": "this so why is chat up something that you should care about uh the first thing",
    "start": "114000",
    "end": "119320"
  },
  {
    "text": "about it is that chat Ops provides you visibility into operations and it provides that visibility to anybody who",
    "start": "119320",
    "end": "125280"
  },
  {
    "text": "has access to your chat so if for example you have a chat room for operations or devops everybody that's in",
    "start": "125280",
    "end": "132680"
  },
  {
    "text": "there will be able to see uh what's going on and whatever kind of Integrations you have built into it chat",
    "start": "132680",
    "end": "138800"
  },
  {
    "text": "Solutions such as Slack are highly extensible and have Integrations with a lot of services both AWS and third party",
    "start": "138800",
    "end": "145760"
  },
  {
    "text": "so services such as Lambda or Pedro Duty jir New Relic and GitHub uh in general",
    "start": "145760",
    "end": "152640"
  },
  {
    "text": "also the newer chat Services uh like slack and hipchat they're better and easier to use than IRC um IRC has been",
    "start": "152640",
    "end": "160720"
  },
  {
    "text": "traditionally you know widely adopted by uh operations teams and developers",
    "start": "160720",
    "end": "166280"
  },
  {
    "text": "however if you try to get somebody that's not technical uh to join RC it's going to be a challenge to say the least whereas uh Solutions such as Slack are",
    "start": "166280",
    "end": "173319"
  },
  {
    "text": "very user friendly and uh anybody will feel uh at ease using them another",
    "start": "173319",
    "end": "178959"
  },
  {
    "text": "Advantage is a lot of the tools that you're going to expose through your chat room a lot of the Integrations uh they're going to generally uh be",
    "start": "178959",
    "end": "186080"
  },
  {
    "text": "available uh directly on your user's mobile devices on whatever uh computer",
    "start": "186080",
    "end": "191720"
  },
  {
    "text": "they have or tablets and there's going to be no need for a VPN so it makes uh access to the information that your chat",
    "start": "191720",
    "end": "197920"
  },
  {
    "text": "Ops is going to provide uh a lot easier to obtain um and as I already mentioned uh it makes operations really easy for",
    "start": "197920",
    "end": "204280"
  },
  {
    "text": "mobile devices a lot of these Solutions such as slack have very rich mobile clients that um are just as functional",
    "start": "204280",
    "end": "211000"
  },
  {
    "text": "as the desktop clients and are very easy to use so you can access uh your whatever you have set up for chat Ops uh",
    "start": "211000",
    "end": "217519"
  },
  {
    "text": "remotely very easily additionally uh Solutions such as slack provide built-in",
    "start": "217519",
    "end": "223040"
  },
  {
    "start": "218000",
    "end": "298000"
  },
  {
    "text": "archiving so you have an archive of what commands were on what notifications were fired that sort of thing uh going back",
    "start": "223040",
    "end": "229000"
  },
  {
    "text": "over a long period of time uh they also make dissemination of things like Snap uh",
    "start": "229000",
    "end": "234720"
  },
  {
    "text": "screenshots attachments of files um links to uh specific web pages or status",
    "start": "234720",
    "end": "241760"
  },
  {
    "text": "notifications uh really easy to disate so for example if you paste a link to a certain tweet let's say from a service",
    "start": "241760",
    "end": "248439"
  },
  {
    "text": "providers status page um slack will expand that tweet so you don't have to click on it so that kind of thing just",
    "start": "248439",
    "end": "255000"
  },
  {
    "text": "makes dissemination of information a lot easier and lastly but very importantly um Solutions such as slack and chat Ops",
    "start": "255000",
    "end": "262280"
  },
  {
    "text": "in general Mak uh incident response a lot easier to handle especially across multiple teams so for example uh let's",
    "start": "262280",
    "end": "269720"
  },
  {
    "text": "let's say you know you're building a product um you have mostly your own Developers for your product but you also",
    "start": "269720",
    "end": "275160"
  },
  {
    "text": "depend on uh you know some sort of thirdparty solution for your product uh",
    "start": "275160",
    "end": "280199"
  },
  {
    "text": "there's some kind of service issue and you now have to handle this incident well you've got your developers sitting in your stock room you can also invite",
    "start": "280199",
    "end": "287000"
  },
  {
    "text": "uh you know the vendor whever whatever the other stakeholders are uh and give them uh easy visibility uh into the",
    "start": "287000",
    "end": "294400"
  },
  {
    "text": "incident response and into resolving your incident so what are chat bots so",
    "start": "294400",
    "end": "300520"
  },
  {
    "start": "298000",
    "end": "321000"
  },
  {
    "text": "traditionally chat Bots are a computer program that simulate conversation with human users especially over the internet",
    "start": "300520",
    "end": "306960"
  },
  {
    "text": "in the context of chat Ops such Bots are specifically made to allow you to improve how you handle devops uh making",
    "start": "306960",
    "end": "314759"
  },
  {
    "text": "that process more efficient visible and simple through various different types of Integrations which we'll talk about",
    "start": "314759",
    "end": "320199"
  },
  {
    "text": "here so let's talk through some examples uh first of all is monitoring many",
    "start": "320199",
    "end": "326240"
  },
  {
    "text": "Monitoring Solutions such as data dog dog uh have built-in slack integration",
    "start": "326240",
    "end": "331639"
  },
  {
    "text": "so for example if you have data dog uh you've got the agents running on all of your instances and they give you",
    "start": "331639",
    "end": "336960"
  },
  {
    "text": "monitoring information and so you can fire off automatic alerts so for example if your latency spikes on uh you know",
    "start": "336960",
    "end": "343240"
  },
  {
    "text": "one of your apps or CPU s spikes or memory uses sprakes that can trigger an automatic notification in your chat room",
    "start": "343240",
    "end": "350120"
  },
  {
    "text": "and you can take action immediately uh also pager duty is another example so pager duty is a uh",
    "start": "350120",
    "end": "356960"
  },
  {
    "start": "351000",
    "end": "384000"
  },
  {
    "text": "application which uh allows or it's a service that allows you to handle how your employees get paged for example uh",
    "start": "356960",
    "end": "364039"
  },
  {
    "text": "you can set up your on call rotation and patri Duty you can set up who gets called who gets texted who gets emailed",
    "start": "364039",
    "end": "370360"
  },
  {
    "text": "what the escalation order is and so when an incident is triggered in pedri Duty you can have it post a notification to",
    "start": "370360",
    "end": "377400"
  },
  {
    "text": "slack so you can see who this incident has been assigned to what its status is",
    "start": "377400",
    "end": "382560"
  },
  {
    "text": "uh so on and so forth uh some other Integrations that you can do are uh providers like GitHub",
    "start": "382560",
    "end": "389720"
  },
  {
    "start": "384000",
    "end": "436000"
  },
  {
    "text": "so GitHub has automatic integration or built-in integration with slack so you can for example configure um your git",
    "start": "389720",
    "end": "397319"
  },
  {
    "text": "repos to automatically post notifications when there's for example a new commit to a certain Branch another",
    "start": "397319",
    "end": "403280"
  },
  {
    "text": "example is uh something called hubot so hubot uh is also written by GitHub uh it",
    "start": "403280",
    "end": "409639"
  },
  {
    "text": "is a chatbot it runs on an ec2 instance um and it has a bunch of different",
    "start": "409639",
    "end": "415120"
  },
  {
    "text": "plugins so in the screenshot here I've installed a plugin to talk to one of my RDS systems",
    "start": "415120",
    "end": "420199"
  },
  {
    "text": "so I can profile a certain query and the output of that uh query will show up uh",
    "start": "420199",
    "end": "426720"
  },
  {
    "text": "in my slack so obviously there's risks involved there too from running live SQL queries from your chat room and we'll",
    "start": "426720",
    "end": "432400"
  },
  {
    "text": "discuss how to mitigate those kind of risks in a little",
    "start": "432400",
    "end": "437400"
  },
  {
    "start": "436000",
    "end": "453000"
  },
  {
    "text": "bit also you can integrate with your cicd Solutions so for example um in",
    "start": "437479",
    "end": "443199"
  },
  {
    "text": "Jenkins uh you can set up a certain web hook uh that web hook will trigger your",
    "start": "443199",
    "end": "448639"
  },
  {
    "text": "Jenkins job and you cont trigger that web hook directly from your",
    "start": "448639",
    "end": "453440"
  },
  {
    "start": "453000",
    "end": "484000"
  },
  {
    "text": "slack another example is Lambda and cloudwatch events integration so cloudwatch events is a service that",
    "start": "454360",
    "end": "460319"
  },
  {
    "text": "gives you immediate notifications on certain types of events for example instance reboots uh or shutdowns um and",
    "start": "460319",
    "end": "467680"
  },
  {
    "text": "so you can configure a Lambda function which triggers off of your cloudwatch event and post a notification in your",
    "start": "467680",
    "end": "474400"
  },
  {
    "text": "slack channel so you can see if someone's rebooting instances or if some certain types of actions are going on in",
    "start": "474400",
    "end": "479759"
  },
  {
    "text": "your AWS account some other examples that uh",
    "start": "479759",
    "end": "486520"
  },
  {
    "start": "484000",
    "end": "570000"
  },
  {
    "text": "we're going to talk about are yobot uh so yobot uh connects to your AWS account",
    "start": "486520",
    "end": "492120"
  },
  {
    "text": "uh downloads all the metadata associated with your AWS account and allows you to ear SQL quaries in your slack Channel",
    "start": "492120",
    "end": "498360"
  },
  {
    "text": "against that AWS account there's also burner app uh so burner allows you to",
    "start": "498360",
    "end": "503919"
  },
  {
    "text": "integrate uh two-way uh SMS and voicemail to slack so somebody can call",
    "start": "503919",
    "end": "509639"
  },
  {
    "text": "and leave a message to your slack room or vice versa uh there's also something called statuspage.io so you can combine",
    "start": "509639",
    "end": "516959"
  },
  {
    "text": "your private status pages and public status feeds uh to get a full picture of what's going on with all the dependencies for your service and",
    "start": "516959",
    "end": "524159"
  },
  {
    "text": "there's something called mean which allows you to schedule meetings um through uh through your slack Channel",
    "start": "524159",
    "end": "530920"
  },
  {
    "text": "some other examples that I've Just Seen uh some of my customers do are uh for example I have a customer who uh they",
    "start": "530920",
    "end": "538160"
  },
  {
    "text": "vote what to order for lunch uh through their slack channel so they have a bot that runs in Lambda uh it",
    "start": "538160",
    "end": "544240"
  },
  {
    "text": "knows where the employees that are currently in the certain slack channel are located because it's a distributed",
    "start": "544240",
    "end": "549360"
  },
  {
    "text": "team and it knows which lunch places are open and it gives you four choices for lunch and everybody votes and then",
    "start": "549360",
    "end": "556040"
  },
  {
    "text": "everybody in their specific location uh it it basically figures out who wants what type of food the most and lets them",
    "start": "556040",
    "end": "561839"
  },
  {
    "text": "know that and then you can also actually order from the chat box it's another really cool uh fun example of something",
    "start": "561839",
    "end": "568240"
  },
  {
    "text": "you can do in a chat room so what technologies can I use to easily build chat Bots well ews Lambda and API",
    "start": "568240",
    "end": "577440"
  },
  {
    "start": "574000",
    "end": "688000"
  },
  {
    "text": "Gateway are well suited for such a task so let's talk about these two services for a little bit so what is Adas Lambda",
    "start": "577440",
    "end": "584200"
  },
  {
    "text": "Adas Lambda is a server a service for serverless computing uh it allows you to run code without servers and only to pay",
    "start": "584200",
    "end": "591880"
  },
  {
    "text": "for the compute time that you consume uh you don't have to worry about provisioning any of the resources or",
    "start": "591880",
    "end": "597640"
  },
  {
    "text": "servers you literally just put your code into it uh and Trigger that code um your code or Lambda functions can be",
    "start": "597640",
    "end": "604079"
  },
  {
    "text": "triggered by various events or called from epis as an example uh it can be",
    "start": "604079",
    "end": "609279"
  },
  {
    "text": "triggered by a put S3 bucket so uh in a non-ch chatops uh example you can have",
    "start": "609279",
    "end": "615160"
  },
  {
    "text": "uh images in an S3 bucket uh as soon as a new image is dropped you can go off a Lambda function which uh will resize",
    "start": "615160",
    "end": "622680"
  },
  {
    "text": "that image and create an thumbnail out of it automatically you can also trigger it off of updates to Dynamo DB table so",
    "start": "622680",
    "end": "629320"
  },
  {
    "text": "so you'll get streams of updates off your Dynamo DB table and that can kick off Lambda functions to do something to",
    "start": "629320",
    "end": "634920"
  },
  {
    "text": "the data that's now been added to your Dynamo DB table you can also call to an",
    "start": "634920",
    "end": "640120"
  },
  {
    "text": "a AWS or Amazon API Gateway endpoint and I'll show you how to actually do this uh",
    "start": "640120",
    "end": "645920"
  },
  {
    "text": "in a little bit and you can also have a mobile backend mobile app backend called",
    "start": "645920",
    "end": "651040"
  },
  {
    "text": "a Lambda function and this is just one of the examples you can do a bunch more",
    "start": "651040",
    "end": "656360"
  },
  {
    "text": "things such as uh write custom skills for Alexa uh and that also works with",
    "start": "656360",
    "end": "663880"
  },
  {
    "text": "Lambda and API Gateway um so ultimately Lambda makes it very easy for you to",
    "start": "663880",
    "end": "669279"
  },
  {
    "text": "perform realtime data processing to build scalable backend services and to glue and choreograph systems so if you",
    "start": "669279",
    "end": "675920"
  },
  {
    "text": "just need a piece of code to run somewhere in between for example your continuous integration continu deployment process uh you can instead of",
    "start": "675920",
    "end": "682440"
  },
  {
    "text": "spinning up a whole instance to do that you can you can just uh use Lambda for that",
    "start": "682440",
    "end": "690320"
  },
  {
    "start": "688000",
    "end": "727000"
  },
  {
    "text": "let's talk about some of the benefits of adabas Lambda first of all as I mentioned earlier there are no servers to manage uh so you just put your code",
    "start": "691240",
    "end": "698959"
  },
  {
    "text": "in and run that code however much you need to no worry about provisioning uh it's continuous scaling so you can",
    "start": "698959",
    "end": "705279"
  },
  {
    "text": "execute your function uh at high levels of concurrency and many times over and not have to worry about how that works",
    "start": "705279",
    "end": "711480"
  },
  {
    "text": "in the background and you're never paying for idle servers so you end up paying for your execution time uh so",
    "start": "711480",
    "end": "719959"
  },
  {
    "text": "instead of having instances sitting there that you're not using or servers sitting there that you're not using you're only paying for what you actually",
    "start": "719959",
    "end": "727560"
  },
  {
    "start": "727000",
    "end": "761000"
  },
  {
    "text": "use uh and let's dive a little bit deeper on the paper request model so you",
    "start": "727560",
    "end": "733839"
  },
  {
    "text": "you buy compute time in 100 millisecond increments for 21 micr cents a request",
    "start": "733839",
    "end": "740880"
  },
  {
    "text": "charge of 20 micr cents and there are no hourly daily or monthly minimums and no",
    "start": "740880",
    "end": "746040"
  },
  {
    "text": "per device fees so you're never paying for idle but there's a free tier of 1 million requests and",
    "start": "746040",
    "end": "752800"
  },
  {
    "text": "400,000 uh gabt of compute every month for every customer so just from the free",
    "start": "752800",
    "end": "758279"
  },
  {
    "text": "tier you can get very far with Lambda so let's talk about how you",
    "start": "758279",
    "end": "763320"
  },
  {
    "start": "761000",
    "end": "851000"
  },
  {
    "text": "actually use Lambda uh Lambda allows you to bring your own code uh and it currently supports node.js Java and",
    "start": "763320",
    "end": "769880"
  },
  {
    "text": "python uh and also allows you to bring your own libraries even native ones so",
    "start": "769880",
    "end": "775959"
  },
  {
    "text": "uh you have uh two different options for how to write the code uh there's an inline editor on the web console uh but",
    "start": "775959",
    "end": "782320"
  },
  {
    "text": "also if you're bringing your own libraries you can uh write your code on your computer uh zip it up into a zip",
    "start": "782320",
    "end": "787959"
  },
  {
    "text": "file and uh upload it to the Lambda service with all of its dependencies uh",
    "start": "787959",
    "end": "793120"
  },
  {
    "text": "it's a really simple resource model so you can select uh a power rating from 128 megabytes to 1.5 gbt the CPU and",
    "start": "793120",
    "end": "801680"
  },
  {
    "text": "network is allocated proportionally and reports actual usage also it can be used flexibly so",
    "start": "801680",
    "end": "807639"
  },
  {
    "text": "you can call or send events to it uh it's integrated with a bunch of other AD services and you can build whole",
    "start": "807639",
    "end": "813639"
  },
  {
    "text": "serverless ecosystems and there's a lot of Frameworks uh out there such as serverless uh that allow you to do that",
    "start": "813639",
    "end": "820600"
  },
  {
    "text": "also there's flexible authorization and security so you can securely Grant access to resources including vpcs and",
    "start": "820600",
    "end": "827120"
  },
  {
    "text": "you find a grain control over who can call your functions so for example uh your Lambda functions run in IM roles",
    "start": "827120",
    "end": "834040"
  },
  {
    "text": "those IM roles are attached to IM policies which give your L the functions access to very specific resources in",
    "start": "834040",
    "end": "839959"
  },
  {
    "text": "your AWS account and you can tailor those IM roles to only allow uh least",
    "start": "839959",
    "end": "845120"
  },
  {
    "text": "privilege access so your Lambda functions don't have any more privileges than they need to to perform their",
    "start": "845120",
    "end": "852120"
  },
  {
    "start": "851000",
    "end": "930000"
  },
  {
    "text": "job let's talk about the programming model so the there's an AWS SDK built in",
    "start": "854120",
    "end": "860240"
  },
  {
    "text": "uh in Python and OJs so you can just use that right away in your code uh there's an eclipse plugin for Java that you can",
    "start": "860240",
    "end": "866399"
  },
  {
    "text": "use and Lambda is the web server itself so uses processes threads uh you have access to the temp directory and it uses",
    "start": "866399",
    "end": "873399"
  },
  {
    "text": "sockets normally uh Lambda is also stateless so if you want to persist data uh you're going to want to use something",
    "start": "873399",
    "end": "879639"
  },
  {
    "text": "like Amazon Dynamic DB S3 or elastic has and there's no",
    "start": "879639",
    "end": "886920"
  },
  {
    "text": "Affinity to the infrastructure so so it can't log into the box for example uh there's various different uh ways to",
    "start": "886920",
    "end": "893079"
  },
  {
    "text": "author land functions as I mentioned earlier you can use the console you see as with get editor you can package up",
    "start": "893079",
    "end": "899240"
  },
  {
    "text": "your code to zip file and upload it to Lambda or to S3 and there's also plugins for eclipse and visual studio uh which",
    "start": "899240",
    "end": "906600"
  },
  {
    "text": "allow you to write Lambda functions as well as command line tools uh that allow you to execute those functions uh and",
    "start": "906600",
    "end": "912880"
  },
  {
    "text": "there's also built-in logging and monitoring so you get built-in metrics for things like requests errors latency",
    "start": "912880",
    "end": "918040"
  },
  {
    "text": "and throttles uh and it's got built-in integration with Amazon cloudwatch logs so if your L the function is failing you",
    "start": "918040",
    "end": "924279"
  },
  {
    "text": "can look in cloudwatch logs and see exactly what the error message is and light it's failing and",
    "start": "924279",
    "end": "931160"
  },
  {
    "start": "930000",
    "end": "985000"
  },
  {
    "text": "debug now let's talk about Amazon API Gateway so API Gateway allows you to",
    "start": "931160",
    "end": "936399"
  },
  {
    "text": "manage your apis in a serverless manner so API Gateway is integrated with",
    "start": "936399",
    "end": "942319"
  },
  {
    "text": "cloudfront and uh Cloud watch and it's got a cache built into it and basically what you can do is you define uh",
    "start": "942319",
    "end": "948759"
  },
  {
    "text": "different methods in your uh or different calls in your API and those calls can then go to either a Lambda",
    "start": "948759",
    "end": "955920"
  },
  {
    "text": "functions or endpoints on ec2 or any other publicly accessible endpoint so if",
    "start": "955920",
    "end": "961519"
  },
  {
    "text": "you've got uh code running on an instance uh that and that instance is behind the load balancer such as elb you",
    "start": "961519",
    "end": "969199"
  },
  {
    "text": "can call that if you've got code running on your on premise uh server uh or data",
    "start": "969199",
    "end": "975680"
  },
  {
    "text": "center uh as long as that is on a public IP address and publicly accessible you can call that or you can just trigger",
    "start": "975680",
    "end": "981680"
  },
  {
    "text": "Lambda functions uh whenever you need to so it's very flexible um so just some of",
    "start": "981680",
    "end": "986920"
  },
  {
    "start": "985000",
    "end": "1010000"
  },
  {
    "text": "the benefits of Amazon API Gateway art allows you to create a unified API front",
    "start": "986920",
    "end": "992759"
  },
  {
    "text": "end for multiple micro services in the back end it's got a built-in dos protection and throttling for your",
    "start": "992759",
    "end": "998440"
  },
  {
    "text": "backend systems due to its integration with Cloud front and allows you to authenticate and authorize requests so",
    "start": "998440",
    "end": "1004319"
  },
  {
    "text": "you can manage your API keys for your API through API Gateway as",
    "start": "1004319",
    "end": "1010519"
  },
  {
    "start": "1010000",
    "end": "1064000"
  },
  {
    "text": "well so now let's talk about some slack specific Integrations uh with uh with",
    "start": "1010519",
    "end": "1018079"
  },
  {
    "text": "chatops so first of all there are several integrated apps uh with slack so",
    "start": "1018079",
    "end": "1024360"
  },
  {
    "text": "such a these examples of such are GitHub so for example you can just automatically configure GitHub to",
    "start": "1024360",
    "end": "1029760"
  },
  {
    "text": "connect to your slack and to post not activity notifications on whichever uh",
    "start": "1029760",
    "end": "1035199"
  },
  {
    "text": "get repo you want and whichever branch is that g repo you want uh you can also integrate with our assess feeds so a",
    "start": "1035199",
    "end": "1041079"
  },
  {
    "text": "really useful thing I find to do is to subscribe for example to the AWS RSS",
    "start": "1041079",
    "end": "1046678"
  },
  {
    "text": "feed so we've got RSS feeds for what's new blog for example or for our status Pages uh so you can find out whenever we",
    "start": "1046679",
    "end": "1054360"
  },
  {
    "text": "release new features which is very often uh by having it monitor the RSS feed for",
    "start": "1054360",
    "end": "1060320"
  },
  {
    "text": "or what's new blog and post the updates to your slack Channel there's also uh various",
    "start": "1060320",
    "end": "1067799"
  },
  {
    "start": "1064000",
    "end": "1099000"
  },
  {
    "text": "different other kinds of custom Integrations so the first principle that you need to know about is an incoming",
    "start": "1067799",
    "end": "1073679"
  },
  {
    "text": "web hook so an incoming web Hook is a simple way to post messages from external sources in into slack they make",
    "start": "1073679",
    "end": "1080200"
  },
  {
    "text": "use of normal HTTP requests with a Json payload which includes the message and a few other optional details described",
    "start": "1080200",
    "end": "1086600"
  },
  {
    "text": "later so for example I can set up a web hook to post to a specific Channel and I'm going to get a URL for that web hook",
    "start": "1086600",
    "end": "1092720"
  },
  {
    "text": "and then I can write a Lambda function uh to use that web hook URL to post specific messages into this",
    "start": "1092720",
    "end": "1099440"
  },
  {
    "start": "1099000",
    "end": "1142000"
  },
  {
    "text": "chat there's also outgoing web hooks so outgoing web hooks do the opposite so",
    "start": "1099440",
    "end": "1104799"
  },
  {
    "text": "outgoing web hooks allow me to actually type a message in my slack Channel and that message will trigger uh code that's",
    "start": "1104799",
    "end": "1111880"
  },
  {
    "text": "running elsewhere so for example um I can have a a web hook that listens for",
    "start": "1111880",
    "end": "1118640"
  },
  {
    "text": "uh say leot and it's going to post to a specific URL that URL in this example is",
    "start": "1118640",
    "end": "1123760"
  },
  {
    "text": "an Amazon uh API Gateway and the API Gateway is going to reply and it's going",
    "start": "1123760",
    "end": "1129640"
  },
  {
    "text": "to reply with with a message back and post to add into my select Chann so incoming web hooks are things that you",
    "start": "1129640",
    "end": "1136280"
  },
  {
    "text": "post into your slack and outgoing web hooks are things from your slack you trigger some external",
    "start": "1136280",
    "end": "1142600"
  },
  {
    "start": "1142000",
    "end": "1166000"
  },
  {
    "text": "resource there's also slash commands so slash commands allow you to listen to a custom triggers in chat in chat me",
    "start": "1142600",
    "end": "1149559"
  },
  {
    "text": "messages across all slack channels um so for example you can type in uh we're in",
    "start": "1149559",
    "end": "1155840"
  },
  {
    "text": "a slash command like in IRC so you can configure a SL command to also post to some specific uh uh URL such as an API",
    "start": "1155840",
    "end": "1163039"
  },
  {
    "text": "Gateway with a Lambda function behind it so before I get into a live demo uh",
    "start": "1163039",
    "end": "1170760"
  },
  {
    "start": "1166000",
    "end": "1303000"
  },
  {
    "text": "let's just talk about some risks here so depending on how powerful your chat Bots are going to be uh they could",
    "start": "1170760",
    "end": "1177520"
  },
  {
    "text": "potentially do some um really privileged things so you want to be careful about",
    "start": "1177520",
    "end": "1183200"
  },
  {
    "text": "who you allow into your chat room so an authorized access to your chat means bad things can happen to your AWS account",
    "start": "1183200",
    "end": "1188799"
  },
  {
    "text": "specifically so you really want to lock down your chat rooms where you can do uh",
    "start": "1188799",
    "end": "1194000"
  },
  {
    "text": "write actions basically so if you have a chat room where it just posts notifications or you can find out you",
    "start": "1194000",
    "end": "1199080"
  },
  {
    "text": "know like the status of your instances or some Cloud watch metric or something like that like that's important but",
    "start": "1199080",
    "end": "1204480"
  },
  {
    "text": "that's read only information uh whereas if you have a chat Ops or or if you have a chat bot that can reboot instances or",
    "start": "1204480",
    "end": "1212559"
  },
  {
    "text": "do something to running resources you really want to be super careful with that you want to audit who's in your slack Channel a really big part of that",
    "start": "1212559",
    "end": "1220880"
  },
  {
    "text": "uh security there is enabling two Factor authentication so slack supports uh two-factor authentication uh through",
    "start": "1220880",
    "end": "1227720"
  },
  {
    "text": "things like the authenticator app on your on your phone so make sure that you",
    "start": "1227720",
    "end": "1232919"
  },
  {
    "text": "have mandatory two Factor authentication that way if one of the users to your slack has their password compromised uh",
    "start": "1232919",
    "end": "1239799"
  },
  {
    "text": "they still have that two- Factor uh authentication protecting their login and thus protecting your chat rooms with",
    "start": "1239799",
    "end": "1245679"
  },
  {
    "text": "your bots in it you also want to make sure you scale your IM policies appropriately so your uh as I mentioned",
    "start": "1245679",
    "end": "1253559"
  },
  {
    "text": "earlier your Lambda functions uh that run your chat op or",
    "start": "1253559",
    "end": "1259240"
  },
  {
    "text": "Chad Bots uh they are only going to have permissions to do things that the I am",
    "start": "1259240",
    "end": "1265840"
  },
  {
    "text": "policiy is that they're attached to allow them to do so make sure that you're not giving admin privilege to",
    "start": "1265840",
    "end": "1271279"
  },
  {
    "text": "your or basically an admin access or too broad of an access to your uh Lambda",
    "start": "1271279",
    "end": "1277880"
  },
  {
    "text": "functions uh and don't go overboard so it's easy you know I've seen once you start building these Bots",
    "start": "1277880",
    "end": "1285279"
  },
  {
    "text": "uh you can integrate a bot for every kind of notification and then just spams your channel and then you just",
    "start": "1285279",
    "end": "1290799"
  },
  {
    "text": "instinctively start ignoring things and that's actually less useful so you want to actually think about what do I actually need to be aware of what kind",
    "start": "1290799",
    "end": "1298279"
  },
  {
    "text": "of monitoring do I need kind of actions I need to be able to do in my chat room and only set up Integrations for",
    "start": "1298279",
    "end": "1304120"
  },
  {
    "start": "1303000",
    "end": "1318000"
  },
  {
    "text": "that so I'm going to switch over here let's uh just uh do a live demo of some",
    "start": "1304120",
    "end": "1309159"
  },
  {
    "text": "of these uh Integrations all right so I'm just going to share my screen here",
    "start": "1309159",
    "end": "1316840"
  },
  {
    "start": "1318000",
    "end": "1363000"
  },
  {
    "text": "okay so here's my uh slack channel uh so I'm going to show you several different",
    "start": "1318880",
    "end": "1325320"
  },
  {
    "text": "kinds of Integrations here so first of all let's look at yobot so yobot is a",
    "start": "1325320",
    "end": "1330520"
  },
  {
    "text": "thirdparty u fully managed service you just connect it to your slack Channel and you connect it to your AWS account",
    "start": "1330520",
    "end": "1336240"
  },
  {
    "text": "so you give it read only access to your AWS account and you can do SQL queries like this so for example I can tell you",
    "start": "1336240",
    "end": "1342600"
  },
  {
    "text": "aot uh select public IP address from ec2 instances where tags. name equals batli",
    "start": "1342600",
    "end": "1349559"
  },
  {
    "text": "so uh what I can do is basically this is going to select the elastic or actually",
    "start": "1349559",
    "end": "1355799"
  },
  {
    "text": "public I in this case from any instances which are named bth which is one of my",
    "start": "1355799",
    "end": "1360919"
  },
  {
    "text": "instances soit enter here and it's going to return",
    "start": "1360919",
    "end": "1366279"
  },
  {
    "start": "1363000",
    "end": "1851000"
  },
  {
    "text": "that that specific public IP address I can also do a much more broad query so I can do select star from ec2 instances",
    "start": "1366279",
    "end": "1373880"
  },
  {
    "text": "and that's going to literally give me all the information about all of my E2 instances running my",
    "start": "1373880",
    "end": "1380720"
  },
  {
    "text": "account so that might actually take a little while while that's going can show you the output from last time I ran this",
    "start": "1383400",
    "end": "1389279"
  },
  {
    "text": "so it gives you information such as this so it will give you your AWS account ID and your mappings and your instance ID",
    "start": "1389279",
    "end": "1396159"
  },
  {
    "text": "and all that information here so also Let's uh take a look at some other",
    "start": "1396159",
    "end": "1401640"
  },
  {
    "text": "Integrations that I have here so here is my uh slack and as I",
    "start": "1401640",
    "end": "1408039"
  },
  {
    "text": "mentioned earlier there's some built-in Integrations so here's a built-in one for GitHub so basically I have three OS",
    "start": "1408039",
    "end": "1414320"
  },
  {
    "text": "which I'm monitoring uh they are monitoring uh authenticated is my",
    "start": "1414320",
    "end": "1420000"
  },
  {
    "text": "username in GitHub it's monitoring three different repositories that I have uh it's going to monitor different events",
    "start": "1420000",
    "end": "1426480"
  },
  {
    "text": "in those uh in those repositories and it's going to post to the Skynet Channel",
    "start": "1426480",
    "end": "1431559"
  },
  {
    "text": "which is uh my channel over here on slack this is yobot as I mentioned here",
    "start": "1431559",
    "end": "1438720"
  },
  {
    "text": "I'm giving authorization to yobot to post in the same Skynet Channel and",
    "start": "1438720",
    "end": "1444279"
  },
  {
    "text": "here's an integration with RSS so for example I as I said I am monitoring various RSS feeds that we have and",
    "start": "1444279",
    "end": "1451240"
  },
  {
    "text": "posting any updates to them uh in into my slack channel",
    "start": "1451240",
    "end": "1457880"
  },
  {
    "text": "here then there's custom Integrations so as I mentioned uh you can have internal",
    "start": "1457919",
    "end": "1463000"
  },
  {
    "text": "web hooks so here or incoming web hooks here's an example of one so this is a",
    "start": "1463000",
    "end": "1468799"
  },
  {
    "text": "web Hoke URL uh it's going to post to that Skynet chat room uh and it's going to post as this username so let me show",
    "start": "1468799",
    "end": "1475240"
  },
  {
    "text": "you how this one works so here I've got uh cloudwatch so and I'm looking at",
    "start": "1475240",
    "end": "1481120"
  },
  {
    "text": "cloudwatch rules so I've got a rule here called notify slack so in my rule I'm basically monitoring for any kind of",
    "start": "1481120",
    "end": "1487000"
  },
  {
    "text": "instance State change notifications uh in my slack so if I for example terminate an instance uh it's going to",
    "start": "1487000",
    "end": "1493120"
  },
  {
    "text": "basically kick off this Lambda function right here uh this Lambda function is conf figured as",
    "start": "1493120",
    "end": "1500880"
  },
  {
    "text": "follows so it it posts to the web hook URL which is what I set up before uh I",
    "start": "1501679",
    "end": "1508000"
  },
  {
    "text": "want it to be super safe here so I'm actually encrypting my web hook URL with KMS uh and posting it to Skynet uh and",
    "start": "1508000",
    "end": "1514399"
  },
  {
    "text": "it's basically just parsing that right here and that's the this is the code for that in node so let's see how this",
    "start": "1514399",
    "end": "1519919"
  },
  {
    "text": "actually works so I'm going to go to my ec2 uh",
    "start": "1519919",
    "end": "1525360"
  },
  {
    "text": "here I'm going to terminate one of my instances so I'm just going to pick a random",
    "start": "1525360",
    "end": "1532039"
  },
  {
    "text": "instance about this one and I'm just going to terminate",
    "start": "1532039",
    "end": "1537200"
  },
  {
    "text": "it so see I already have a star here so I just got a notification that was pretty quick wasn't it um so basically",
    "start": "1543120",
    "end": "1549960"
  },
  {
    "text": "it's telling me that that specific instance and tells me what type of instance it is and what the name tag for",
    "start": "1549960",
    "end": "1555000"
  },
  {
    "text": "it was is shutting down and that instance that I shut down was in an auto scaling group uh and so it's going to",
    "start": "1555000",
    "end": "1561600"
  },
  {
    "text": "then turn on a new instance and it's going to trigger uh code deployment using Code Deploy on that and it's going",
    "start": "1561600",
    "end": "1566919"
  },
  {
    "text": "to actually eventually trigger one of these notifications so this another one that I have uh so basically I've got um",
    "start": "1566919",
    "end": "1573600"
  },
  {
    "text": "my uh code deploy configure to post an SNS topic uh which is the simple",
    "start": "1573600",
    "end": "1578799"
  },
  {
    "text": "notification service and I've got a Lambda function that says subscriber of the SNS topic and it posts notifications",
    "start": "1578799",
    "end": "1584880"
  },
  {
    "text": "as to the status of any deployment so I can see if my code deployments have exceeded or failed so here we we see",
    "start": "1584880",
    "end": "1591679"
  },
  {
    "text": "that my instance was shutting down and now it's been terminated now another thing I want to",
    "start": "1591679",
    "end": "1598520"
  },
  {
    "text": "show you is hubot so uh as I mentioned earlier hubot uh is uh a bot which uh runs on an ec2",
    "start": "1598520",
    "end": "1607120"
  },
  {
    "text": "instance so I'm running it on instance here uh it is connected to my slack and it's got a bunch of custom Integrations",
    "start": "1607120",
    "end": "1613559"
  },
  {
    "text": "they're all written in coffee script um so I can do various things through there so so uh I'm actually not sure if the",
    "start": "1613559",
    "end": "1620679"
  },
  {
    "text": "ot's connected but if it was I could type messages to it such as uh you know tell it to connect to my mySQL database",
    "start": "1620679",
    "end": "1627480"
  },
  {
    "text": "as I showed in the screenshot but again this is the difference here is this is something that's run on an ec2 instance",
    "start": "1627480",
    "end": "1634000"
  },
  {
    "text": "uh and not through a Lambda",
    "start": "1634000",
    "end": "1637360"
  },
  {
    "text": "function so let's do another uh let's test my GitHub integration here so I'm actually going to test this is my demo",
    "start": "1639120",
    "end": "1645279"
  },
  {
    "text": "WordPress uh so I'm just going to edit my readme file and commit it and we'll see uh a notification from that as well",
    "start": "1645279",
    "end": "1652919"
  },
  {
    "text": "so I'm just going to add some exclamation marks",
    "start": "1652919",
    "end": "1657640"
  },
  {
    "text": "here leave a change a commit change node all right so that's now",
    "start": "1661480",
    "end": "1669360"
  },
  {
    "text": "done and I actually now have two notifications here um that I've updated",
    "start": "1669360",
    "end": "1674519"
  },
  {
    "text": "my GitHub repository",
    "start": "1674519",
    "end": "1678080"
  },
  {
    "text": "so uh let's also take a look at some other Lambda functions that I have here um",
    "start": "1682000",
    "end": "1688679"
  },
  {
    "text": "so I have something called leot so leot is basically a bot that one of my co-workers wrote and it's listening to",
    "start": "1689799",
    "end": "1696720"
  },
  {
    "text": "this trigger called Le obot uh or keyword called leot and what it does is",
    "start": "1696720",
    "end": "1702000"
  },
  {
    "text": "it pretends to be me so I live in Washington DC I'm always in the DC airport and I see random uh politicians",
    "start": "1702000",
    "end": "1708559"
  },
  {
    "text": "in the airport uh and I was text my coworker that hey I just saw somebody so he decided to write a bot that would",
    "start": "1708559",
    "end": "1715600"
  },
  {
    "text": "imitate uh that would imitate my texts to him and uh he wrote it in Dynamo DB",
    "start": "1715600",
    "end": "1721399"
  },
  {
    "text": "and Lambda so if I typ in leot it's going to type in a",
    "start": "1721399",
    "end": "1727360"
  },
  {
    "text": "reply see and it just says I just saw Mark helper in in a Stop and Shop in Bethesda so let's see how this actually",
    "start": "1727480",
    "end": "1733919"
  },
  {
    "text": "works uh so here is the Dynamo DB table so it's",
    "start": "1733919",
    "end": "1739720"
  },
  {
    "text": "basically just has a list of different locations DC places airport codes names",
    "start": "1739720",
    "end": "1748399"
  },
  {
    "text": "of people I saw and it piece and this Lambda function just pieces this all",
    "start": "1748399",
    "end": "1755240"
  },
  {
    "text": "together and is triggered uh by API",
    "start": "1757640",
    "end": "1763480"
  },
  {
    "text": "Gateway so it's listening on this URL it triggers the Lambda function I just",
    "start": "1764440",
    "end": "1769679"
  },
  {
    "text": "showed you and then it replies back uh into slack so basically whenever I type",
    "start": "1769679",
    "end": "1776559"
  },
  {
    "text": "in Leo bot on my slack Channel it fires off a call to the CPI Gateway which fires off this function which uses",
    "start": "1776559",
    "end": "1782679"
  },
  {
    "text": "Dynamo DB and returns or reply as you can see it's pretty quick and the nice thing about it is besides being pretty",
    "start": "1782679",
    "end": "1788480"
  },
  {
    "text": "quick it's serverless so running this bot uh is free or almost free uh it",
    "start": "1788480",
    "end": "1793880"
  },
  {
    "text": "doesn't require any instances or any server resources to be on even the database is Dynamo DB so that's a fully",
    "start": "1793880",
    "end": "1798960"
  },
  {
    "text": "managed service that's not something that you really need to manage at",
    "start": "1798960",
    "end": "1805200"
  },
  {
    "text": "all just other functions here function function when I type in SL",
    "start": "1805720",
    "end": "1813000"
  },
  {
    "text": "command so type in slash slack test it's going to basically spit whatever I typed",
    "start": "1813000",
    "end": "1818240"
  },
  {
    "text": "the input back to me so it says the username invoke slack test with the",
    "start": "1818240",
    "end": "1823799"
  },
  {
    "text": "following text pie back",
    "start": "1823799",
    "end": "1829158"
  },
  {
    "text": "all right so uh those are some of the examples of uh what you do with uh slack",
    "start": "1832159",
    "end": "1838799"
  },
  {
    "text": "and chat Ops and chatot so I think there we go another this is",
    "start": "1838799",
    "end": "1846760"
  },
  {
    "text": "my so I think now we're ready for the uh",
    "start": "1846760",
    "end": "1852000"
  },
  {
    "start": "1851000",
    "end": "2184000"
  },
  {
    "text": "Q&A and thanks Leo thanks for the great presentation there we do appreciate you taking the time uh through all that with",
    "start": "1852360",
    "end": "1858760"
  },
  {
    "text": "us we'll go into our Q&A session now you'll notice that our Q&A is at the top of the screen so feel free to put in",
    "start": "1858760",
    "end": "1864799"
  },
  {
    "text": "your questions as we go through we do have some polls on the leand side of the screen so feel free to fill that out we",
    "start": "1864799",
    "end": "1871840"
  },
  {
    "text": "do appreciate your feedback we do have some more information on your slide right there about the AWS serverless",
    "start": "1871840",
    "end": "1877720"
  },
  {
    "text": "chatbot competition there we'll leave that up for you and we'll start our Q&A so please enter your questions in there",
    "start": "1877720",
    "end": "1884519"
  },
  {
    "text": "I would also like to thank Brian Lon Andrew be and and this sing for helping",
    "start": "1884519",
    "end": "1889639"
  },
  {
    "text": "us through the Q&A throughout our session today so let's start our",
    "start": "1889639",
    "end": "1895158"
  },
  {
    "text": "Q&A okay so here's a question um hi will you",
    "start": "1899080",
    "end": "1905279"
  },
  {
    "text": "be demoing how to build a Chad bot from scratch uh so in this webinar uh we are not demoing how to build a Chad bot from",
    "start": "1905279",
    "end": "1912039"
  },
  {
    "text": "scratch uh however using all the uh services that we showed so uh API",
    "start": "1912039",
    "end": "1918559"
  },
  {
    "text": "Gateway Lambda you can certainly do so and there's some really good good examples out there online uh we also",
    "start": "1918559",
    "end": "1924760"
  },
  {
    "text": "released uh a bunch of blueprints for slack specifically that allow you to uh",
    "start": "1924760",
    "end": "1930080"
  },
  {
    "text": "easily start building Chad Bots with",
    "start": "1930080",
    "end": "1934240"
  },
  {
    "text": "slack can I integrate uh Twitter codes with chatbot so uh slack specifically",
    "start": "1935919",
    "end": "1944720"
  },
  {
    "text": "has Twitter integration so if you just paste a tweet in it will expand that",
    "start": "1944720",
    "end": "1950039"
  },
  {
    "text": "site uh additionally uh with Lambda you can also call basically any other",
    "start": "1950039",
    "end": "1955760"
  },
  {
    "text": "publicly accessible uh API so uh for example you can talk to the Twitter API",
    "start": "1955760",
    "end": "1962519"
  },
  {
    "text": "and build a Chad bot around that is there a time limit for requests",
    "start": "1962519",
    "end": "1969279"
  },
  {
    "text": "that's a really good question uh so for Lambda uh there's a uh timeout of uh 300",
    "start": "1969279",
    "end": "1975919"
  },
  {
    "text": "seconds uh for each uh Lambda function",
    "start": "1975919",
    "end": "1980720"
  },
  {
    "text": "execution can you explain a bit how sessions work with Lambda and uh Dynamo",
    "start": "1983120",
    "end": "1988159"
  },
  {
    "text": "DB like how can I tell a conversation is happening between team a uh and Team B",
    "start": "1988159",
    "end": "1994919"
  },
  {
    "text": "uh so basically uh what you would use Dynamo DB for uh with a Chad bot is your",
    "start": "1994919",
    "end": "2000639"
  },
  {
    "text": "session State uh so for example as as we just mentioned uh there's an execution",
    "start": "2000639",
    "end": "2005799"
  },
  {
    "text": "uh timeout of 300 seconds and Lambda so if you need to store something beyond",
    "start": "2005799",
    "end": "2011159"
  },
  {
    "text": "that specific execution of a Lambda function you would use our apis uh to",
    "start": "2011159",
    "end": "2016399"
  },
  {
    "text": "talk and store that information in Dynamo DD and you can then recall that",
    "start": "2016399",
    "end": "2021519"
  },
  {
    "text": "information at the next execution of your Lambda",
    "start": "2021519",
    "end": "2026760"
  },
  {
    "text": "function what is the security with the web hooks is it just an open end point or can this be an narrow uh so for",
    "start": "2028720",
    "end": "2036200"
  },
  {
    "text": "incoming web hooks uh it is basically just an endpoint so it's a unique endpoint so you have to protect uh the",
    "start": "2036200",
    "end": "2042760"
  },
  {
    "text": "URL of that endpoint uh in slack specifically uh with outgoing web hooks",
    "start": "2042760",
    "end": "2048358"
  },
  {
    "text": "let's say you're triggering API Gateway so API Gateway does have uh authorization and authentication built",
    "start": "2048359",
    "end": "2054800"
  },
  {
    "text": "into it so you can uh for example provision specific API keys and control",
    "start": "2054800",
    "end": "2060398"
  },
  {
    "text": "what kind of uh usage plan that API key has uh so you have a lot more flexibility when you're using API",
    "start": "2060399",
    "end": "2066878"
  },
  {
    "text": "Gateway is there integration for storing the tokens and secrets in KMS versus having",
    "start": "2066879",
    "end": "2074240"
  },
  {
    "text": "it in the Lambda function uh so that's a great question so actually in one of my uh functions I'm storing the token in",
    "start": "2074240",
    "end": "2080800"
  },
  {
    "text": "KMS uh so you KMS has U an API so you",
    "start": "2080800",
    "end": "2086118"
  },
  {
    "text": "can in your Lambda function whether you're using node.js uh or Java or Dynamo you can use that specific",
    "start": "2086119",
    "end": "2091960"
  },
  {
    "text": "languages AWS API to talk to ks and to store uh your secret",
    "start": "2091960",
    "end": "2098560"
  },
  {
    "text": "uh in CS so yes you can definitely do that and that is a great use case as",
    "start": "2098560",
    "end": "2105440"
  },
  {
    "text": "well is all the code you showed today available for us to reuse freely like the triggers and uh slack integration so",
    "start": "2106280",
    "end": "2113680"
  },
  {
    "text": "yeah actually all of the code I showed for you today um actually mostly found",
    "start": "2113680",
    "end": "2118920"
  },
  {
    "text": "on GitHub and gist so it's already been open sourced uh by others out there so it's definitely uh available today and",
    "start": "2118920",
    "end": "2125920"
  },
  {
    "text": "something you can use",
    "start": "2125920",
    "end": "2129480"
  },
  {
    "text": "all right I think that covers uh all of the",
    "start": "2131280",
    "end": "2136599"
  },
  {
    "text": "questions all right well thank you Leo and I'd like to extend a special thank you for your presentation today thanks",
    "start": "2137640",
    "end": "2143720"
  },
  {
    "text": "for the great content Leo and I'd also like to thank Brian Andrew and vishall for the answering all the questions in",
    "start": "2143720",
    "end": "2149359"
  },
  {
    "text": "our Q&A panel as they were coming in through our session if you have any comments on our previous and upcoming",
    "start": "2149359",
    "end": "2155000"
  },
  {
    "text": "webinars or suggestions on the topics you wish to see with AWS to cover in the",
    "start": "2155000",
    "end": "2160839"
  },
  {
    "text": "future webinars please feel free to email us to the AWS webcast",
    "start": "2160839",
    "end": "2167520"
  },
  {
    "text": "amazon.com your feedback will help us improve our webinar programming so thanks to our audience today for joining",
    "start": "2167520",
    "end": "2173800"
  },
  {
    "text": "in today thanks for joining as you leave you'll see a link open up for you and I'm also going to push you another link",
    "start": "2173800",
    "end": "2179680"
  },
  {
    "text": "for you there thanks for your feedback on our session today everyone you can disconnect at this point have a great",
    "start": "2179680",
    "end": "2185359"
  },
  {
    "text": "day",
    "start": "2185359",
    "end": "2188359"
  }
]