[
  {
    "text": "(gentle music)",
    "start": "500",
    "end": "3167"
  },
  {
    "text": "- [Narrator] Welcome to this\nvideo where we will show",
    "start": "4350",
    "end": "6120"
  },
  {
    "text": "how you can use the\nscheduled query feature",
    "start": "6120",
    "end": "8010"
  },
  {
    "text": "in Amazon Timestream.",
    "start": "8010",
    "end": "9870"
  },
  {
    "text": "Scheduled queries is a\nfully managed, serverless,",
    "start": "9870",
    "end": "12900"
  },
  {
    "text": "and scalable solution for\npre-processing of time series data",
    "start": "12900",
    "end": "16049"
  },
  {
    "text": "such as calculating aggregates,\nrollups, and several others.",
    "start": "16050",
    "end": "20130"
  },
  {
    "text": "Once configured, Timestream periodically",
    "start": "20130",
    "end": "22410"
  },
  {
    "text": "and automatically runs scheduled queries",
    "start": "22410",
    "end": "24300"
  },
  {
    "text": "and reliably writes the results",
    "start": "24300",
    "end": "25769"
  },
  {
    "text": "into a separate configurable table.",
    "start": "25770",
    "end": "28080"
  },
  {
    "text": "Scheduled queries make real-time\nanalytics more performant",
    "start": "28080",
    "end": "30900"
  },
  {
    "text": "and cost effective because you\ncan query the separate table",
    "start": "30900",
    "end": "33480"
  },
  {
    "text": "with aggregated data instead\nof large source tables.",
    "start": "33480",
    "end": "36840"
  },
  {
    "text": "In this video, we will\nsee how to calculate",
    "start": "36840",
    "end": "38970"
  },
  {
    "text": "product sales count for\nevery day in a month.",
    "start": "38970",
    "end": "41223"
  },
  {
    "text": "For this, we created\nthe clickstream database",
    "start": "42600",
    "end": "44969"
  },
  {
    "text": "with the shopping table, which\nincludes retail sales data.",
    "start": "44970",
    "end": "48600"
  },
  {
    "text": "We also created the aggregate table",
    "start": "48600",
    "end": "50340"
  },
  {
    "text": "to write the results\nof the scheduled query.",
    "start": "50340",
    "end": "52540"
  },
  {
    "text": "Now we create a scheduled query",
    "start": "56700",
    "end": "58920"
  },
  {
    "text": "which calculates the quantity\nfor each product sold",
    "start": "58920",
    "end": "61289"
  },
  {
    "text": "in the retail store for every day.",
    "start": "61290",
    "end": "63063"
  },
  {
    "text": "If you're already familiar",
    "start": "63900",
    "end": "65129"
  },
  {
    "text": "with scheduled queries in Timestream,",
    "start": "65130",
    "end": "67110"
  },
  {
    "text": "you can notice the user interface\nupgrades for this feature.",
    "start": "67110",
    "end": "70800"
  },
  {
    "text": "Timestream writes the results\nof this scheduled query",
    "start": "70800",
    "end": "73100"
  },
  {
    "text": "in the destination table.",
    "start": "73100",
    "end": "74850"
  },
  {
    "text": "You can create a new table\nor use an existing table.",
    "start": "74850",
    "end": "77643"
  },
  {
    "text": "Each scheduled query must\ninclude a measure name column.",
    "start": "81900",
    "end": "85050"
  },
  {
    "text": "In this query statement,",
    "start": "85050",
    "end": "86370"
  },
  {
    "text": "the channel column is marked\nas a measure name column.",
    "start": "86370",
    "end": "89070"
  },
  {
    "text": "Now validate the syntax\nof your scheduled query",
    "start": "90330",
    "end": "93120"
  },
  {
    "text": "to make sure that it works\nfine with your dataset.",
    "start": "93120",
    "end": "95790"
  },
  {
    "text": "Then you create the data model\nfor your destination table.",
    "start": "95790",
    "end": "99360"
  },
  {
    "text": "Timestream can automatically\nload column names",
    "start": "99360",
    "end": "101670"
  },
  {
    "text": "and data types from your scheduled query.",
    "start": "101670",
    "end": "104130"
  },
  {
    "text": "You can see that our data model",
    "start": "104130",
    "end": "105600"
  },
  {
    "text": "includes the required measure name column.",
    "start": "105600",
    "end": "107700"
  },
  {
    "text": "To configure the run schedule,",
    "start": "109800",
    "end": "111390"
  },
  {
    "text": "you can use a fixed frequency\nor a cron expression.",
    "start": "111390",
    "end": "113943"
  },
  {
    "text": "After this, you set up the notifications.",
    "start": "118530",
    "end": "121440"
  },
  {
    "text": "Choose the S3 bucket\nto store your error log",
    "start": "121440",
    "end": "124180"
  },
  {
    "text": "and configure such security settings",
    "start": "130110",
    "end": "132030"
  },
  {
    "text": "as an encryption key and IAM role.",
    "start": "132030",
    "end": "133833"
  },
  {
    "text": "Timestream creates the scheduled query",
    "start": "139860",
    "end": "141810"
  },
  {
    "text": "and sets the status to enabled.",
    "start": "141810",
    "end": "143760"
  },
  {
    "text": "From now, Timestream will run\nthis query every five minutes.",
    "start": "143760",
    "end": "147183"
  },
  {
    "text": "After some time,",
    "start": "148290",
    "end": "149430"
  },
  {
    "text": "you can view the summary of\nlast runs and the run schedule.",
    "start": "149430",
    "end": "152579"
  },
  {
    "text": "When needed, you can run the\nscheduled query manually.",
    "start": "152580",
    "end": "155403"
  },
  {
    "text": "To see the quantity of a certain product,",
    "start": "165480",
    "end": "167430"
  },
  {
    "text": "we can query our base shopping table",
    "start": "167430",
    "end": "169260"
  },
  {
    "text": "that contains the raw data",
    "start": "169260",
    "end": "170489"
  },
  {
    "text": "or the table that\nincludes aggregated data.",
    "start": "170490",
    "end": "172713"
  },
  {
    "text": "The query on the table with raw data",
    "start": "181800",
    "end": "183600"
  },
  {
    "text": "displays the result in four seconds",
    "start": "183600",
    "end": "185370"
  },
  {
    "text": "and scans over seven megabytes of data.",
    "start": "185370",
    "end": "187532"
  },
  {
    "text": "Now we run the next query\nto get the same results",
    "start": "189990",
    "end": "192750"
  },
  {
    "text": "from the aggregate table.",
    "start": "192750",
    "end": "194000"
  },
  {
    "text": "This time, Timestream displays the result",
    "start": "201720",
    "end": "204180"
  },
  {
    "text": "in less than a second, which\nis more than six times faster.",
    "start": "204180",
    "end": "207569"
  },
  {
    "text": "Also, Timestream scans\n17 kilobytes of data",
    "start": "207570",
    "end": "210720"
  },
  {
    "text": "instead of seven megabytes that\nthe previous query scanned.",
    "start": "210720",
    "end": "214260"
  },
  {
    "text": "According to our tests, the\ncost of using a derived table",
    "start": "214260",
    "end": "217290"
  },
  {
    "text": "for analytic queries\nis up to 10 times less",
    "start": "217290",
    "end": "219569"
  },
  {
    "text": "than the cost of querying\nthe table with raw data.",
    "start": "219570",
    "end": "222300"
  },
  {
    "text": "This difference becomes\neven more significant",
    "start": "222300",
    "end": "224430"
  },
  {
    "text": "when you maintain multiple\nreal-time analytic dashboards,",
    "start": "224430",
    "end": "227340"
  },
  {
    "text": "reports, and visualizations\nfor months or years.",
    "start": "227340",
    "end": "230313"
  },
  {
    "text": "This completes the overview\nof the scheduled query feature",
    "start": "232230",
    "end": "234900"
  },
  {
    "text": "in Amazon Timestream.",
    "start": "234900",
    "end": "236879"
  },
  {
    "text": "Now you can use this\nfully managed, serverless,",
    "start": "236880",
    "end": "239970"
  },
  {
    "text": "and scalable solution to\nanalyze your time series data",
    "start": "239970",
    "end": "242640"
  },
  {
    "text": "and get faster insights from it.",
    "start": "242640",
    "end": "244240"
  },
  {
    "text": "Thank you for watching this video.",
    "start": "245820",
    "end": "247520"
  }
]