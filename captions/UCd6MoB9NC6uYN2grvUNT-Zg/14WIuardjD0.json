[
  {
    "start": "0",
    "end": "138000"
  },
  {
    "text": "[Music] hi everyone i'm francesco penta and i'm",
    "start": "370",
    "end": "6560"
  },
  {
    "text": "a principal cal support engineer here at ws and i'm based out of dublin ireland welcome to aws supports you where we",
    "start": "6560",
    "end": "12719"
  },
  {
    "text": "share best practices and troubleshooting tips from adobe support joining me today is seth and johnny from aws support can",
    "start": "12719",
    "end": "19439"
  },
  {
    "text": "you give us a quick introduction seth and johnny yeah sure francesca thank you my name is seth elliott i am the",
    "start": "19439",
    "end": "25199"
  },
  {
    "text": "principal uh reliability solutions architect with aws well architected been in that role for about three years here",
    "start": "25199",
    "end": "31279"
  },
  {
    "text": "at aws working globally with customers all over the world on the reliability and resiliency challenges and before",
    "start": "31279",
    "end": "37840"
  },
  {
    "text": "that i've spent about seven years in various roles uh principal engineering roles sa roles with amazon.com most",
    "start": "37840",
    "end": "44320"
  },
  {
    "text": "recently as an aws solutions architect with amazon.com working with their engineers all over the world on how they",
    "start": "44320",
    "end": "51039"
  },
  {
    "text": "use aws to deliver the amazon.com experience to you hi i'm johnny hanley i have been working",
    "start": "51039",
    "end": "58239"
  },
  {
    "text": "at aws for a little over six years i'm currently a solutions architect on the",
    "start": "58239",
    "end": "63359"
  },
  {
    "text": "well architected team but i've had other roles as well tams and and solutions architects roles",
    "start": "63359",
    "end": "69760"
  },
  {
    "text": "i've been working with many different customers of all sizes in all verticals and super excited to talk reliability",
    "start": "69760",
    "end": "76560"
  },
  {
    "text": "with you today thank you seth and johnny so today we will be talking about the signing for",
    "start": "76560",
    "end": "81840"
  },
  {
    "text": "reliability with the dws well architected framework but before we get into the details a quick note to the",
    "start": "81840",
    "end": "87439"
  },
  {
    "text": "attendees online feel free to use the chat window on the right hand side on your screen to let us know where you're joining us from today",
    "start": "87439",
    "end": "93840"
  },
  {
    "text": "and share your thoughts and questions throughout the episode we look forward to hearing from you with that said john can you walk us",
    "start": "93840",
    "end": "100720"
  },
  {
    "text": "through what we're going to be talking about today absolutely so here's our agenda for today we're going to start off talking a",
    "start": "100720",
    "end": "107600"
  },
  {
    "text": "little bit about well architected and then specifically we're going to talk about reliability today we're going to",
    "start": "107600",
    "end": "112960"
  },
  {
    "text": "dive into best practices we're going to do a cool chaos engineering demo and then we're going to circle back and talk",
    "start": "112960",
    "end": "118719"
  },
  {
    "text": "about key takeaways and helpful resources and as always we're going to answer your questions anytime throughout",
    "start": "118719",
    "end": "124719"
  },
  {
    "text": "the presentation so like francesco said if you have questions please put them into the chat",
    "start": "124719",
    "end": "130160"
  },
  {
    "text": "we will try to pause from time to time to circle back and make sure we're answering all your questions",
    "start": "130160",
    "end": "135680"
  },
  {
    "text": "and now let's go ahead and get started this is our cto werner vogels and he has",
    "start": "135680",
    "end": "142400"
  },
  {
    "start": "138000",
    "end": "643000"
  },
  {
    "text": "a quote that says we needed to build systems that embrace failure as a natural occurrence",
    "start": "142400",
    "end": "148239"
  },
  {
    "text": "so what does that mean what he's talking about here is that he always likes to say that everything",
    "start": "148239",
    "end": "154879"
  },
  {
    "text": "fails all the time but you can't have your workload fail all the time so what we need to do is we",
    "start": "154879",
    "end": "160319"
  },
  {
    "text": "need to architect around component failures to provide resiliency and we're going to talk a lot more into how to do",
    "start": "160319",
    "end": "166560"
  },
  {
    "text": "that throughout today's session so let's move forward and chat about it",
    "start": "166560",
    "end": "173040"
  },
  {
    "text": "so we talked about what is well architected we said we'd talk about it well architected as a framework that aws",
    "start": "173040",
    "end": "178959"
  },
  {
    "text": "has put together based on best practices and their experience from all the",
    "start": "178959",
    "end": "184239"
  },
  {
    "text": "customers over the years and so we've learned what are the best practices in the cloud",
    "start": "184239",
    "end": "190480"
  },
  {
    "text": "we want to take that learning and we want to be able to measure your architecture against that learning",
    "start": "190480",
    "end": "196720"
  },
  {
    "text": "so we go through and we're going to show you some examples of the well architected tool and other ways to to",
    "start": "196720",
    "end": "202959"
  },
  {
    "text": "try to compare your architectural workloads against the best practices",
    "start": "202959",
    "end": "208799"
  },
  {
    "text": "and try to find out what things you're doing really well and then areas that you could improve",
    "start": "208799",
    "end": "214879"
  },
  {
    "text": "and then the next step is to take that improvement and to go ahead and",
    "start": "214879",
    "end": "220159"
  },
  {
    "text": "take make that improvement go ahead and work through it in your architecture so the well",
    "start": "220159",
    "end": "225920"
  },
  {
    "text": "architecture framework is actually a it's a flywheel it's a continuous improvement so that takes us into the pillars of aws",
    "start": "225920",
    "end": "232799"
  },
  {
    "text": "while architected and so there's six pillars operational excellence security",
    "start": "232799",
    "end": "238879"
  },
  {
    "text": "reliability performance efficiency cost optimization and the new pillar that's",
    "start": "238879",
    "end": "244480"
  },
  {
    "text": "been added is sustainability today we're going to focus on reliability",
    "start": "244480",
    "end": "251439"
  },
  {
    "text": "so let's go ahead and dive into that this is a picture of the well architected tool the well architected",
    "start": "251439",
    "end": "257040"
  },
  {
    "text": "tool is in the console for everyone to use it's a free tool and available to all so what we've",
    "start": "257040",
    "end": "263759"
  },
  {
    "text": "basically done is we've taken the framework and we've broken it down into a subset of questions so you can walk through",
    "start": "263759",
    "end": "270240"
  },
  {
    "text": "it's kind of a guided exercise that helps you walk through and discover",
    "start": "270240",
    "end": "275360"
  },
  {
    "text": "all the different things you're doing well and all the things that you have areas for improvement based on the best",
    "start": "275360",
    "end": "281040"
  },
  {
    "text": "practices of the well architecture framework so in this example here you can see we have a couple of questions in",
    "start": "281040",
    "end": "286800"
  },
  {
    "text": "the reliability pillar you see there's some check boxes there those are associated with best practices so as you",
    "start": "286800",
    "end": "293759"
  },
  {
    "text": "go through you answer the question and then conversationally with your team and essays or other aws or partners you'll",
    "start": "293759",
    "end": "301600"
  },
  {
    "text": "have a discussion about how your workload is architected and then whether or not specifically each of the best",
    "start": "301600",
    "end": "308080"
  },
  {
    "text": "practices is currently in place and if it is you'll check the box and if",
    "start": "308080",
    "end": "313199"
  },
  {
    "text": "if it is not you'll go ahead and leave the box unchecked what will happen is you'll be able to then run reports and get a lot of data",
    "start": "313199",
    "end": "321199"
  },
  {
    "text": "about the different best practices that are in place and areas that you could improve",
    "start": "321199",
    "end": "326720"
  },
  {
    "text": "so let's move forward and dive a little bit deeper into some of these other areas on the next slide",
    "start": "326720",
    "end": "332880"
  },
  {
    "text": "so what we're trying to do here is we're trying to talk about reliability and resiliency now these seem very similar",
    "start": "333600",
    "end": "339680"
  },
  {
    "text": "and they are very intertwined as you'll see but they're subtly different reliability is the ability of a workload",
    "start": "339680",
    "end": "346080"
  },
  {
    "text": "to perform its required function correctly and consistency so we want to perform as expected all",
    "start": "346080",
    "end": "353280"
  },
  {
    "text": "the time and resiliency is the ability of a workload to recover from infrastructure or service disruptions so what we were",
    "start": "353280",
    "end": "360400"
  },
  {
    "text": "talking about before resiliency needs to be built in so that your workload can be reliable so",
    "start": "360400",
    "end": "366800"
  },
  {
    "text": "whenever there's a component failure that you're dependent on you automatically can recover",
    "start": "366800",
    "end": "372880"
  },
  {
    "text": "and contain continue to maintain your reliability and we're going to talk more about ways",
    "start": "372880",
    "end": "378400"
  },
  {
    "text": "to do that as we go further through today's session",
    "start": "378400",
    "end": "383600"
  },
  {
    "text": "as we go forward on the next slide we're going to talk some more",
    "start": "384319",
    "end": "389520"
  },
  {
    "text": "about the best practices so i'm going to hand this off well first i'm going to pause and see if we have any questions i'm going to ask francesco if there's",
    "start": "389600",
    "end": "395520"
  },
  {
    "text": "any questions that we should be answering um hi uh no question at the moment but i",
    "start": "395520",
    "end": "400639"
  },
  {
    "text": "have a couple of questions for you okay so the first one that i hear a lot from customers it's always what's the",
    "start": "400639",
    "end": "407199"
  },
  {
    "text": "difference between the well-protected framework and the well-architected tool aren't then the same thing",
    "start": "407199",
    "end": "413759"
  },
  {
    "text": "awesome question so the well architecture framework is the conceptual framework not to use the same word again",
    "start": "413759",
    "end": "420639"
  },
  {
    "text": "of all the best practices and so what we've done is we've started with some design principles we start with the five pillars or the six now that we talked",
    "start": "420639",
    "end": "427440"
  },
  {
    "text": "about and then we break those down into design principles and then based on those design principles there's sets of",
    "start": "427440",
    "end": "433039"
  },
  {
    "text": "questions that we have that help us to determine whether or not a workload is",
    "start": "433039",
    "end": "438880"
  },
  {
    "text": "utilizing the best practices the tool is a specific way to go through it's that survey that",
    "start": "438880",
    "end": "445840"
  },
  {
    "text": "we that conversation that we have to figure out those questions whether or not we're doing those best practices i",
    "start": "445840",
    "end": "452319"
  },
  {
    "text": "like to think of the framework as a as kind of a philosophical",
    "start": "452319",
    "end": "457360"
  },
  {
    "text": "perspective we want to make sure that we're thinking about this throughout our organization we're thinking of it",
    "start": "457360",
    "end": "463280"
  },
  {
    "text": "holistically as a life cycle of improvement right and then the tool is",
    "start": "463280",
    "end": "468879"
  },
  {
    "text": "just a way to go ahead and fulfill that flush those risks out to the surface",
    "start": "468879",
    "end": "474879"
  },
  {
    "text": "continuously improve and we continue that flywheel at amazon we'd love to talk about our flight awards perfect",
    "start": "474879",
    "end": "481280"
  },
  {
    "text": "thank you john actually um so yeah i mean what johnny said everything's true and that's",
    "start": "481280",
    "end": "486800"
  },
  {
    "text": "awesome answer uh the tool is out there yeah you could use it you could review your workloads against the best",
    "start": "486800",
    "end": "491919"
  },
  {
    "text": "practices but the framework itself is more than just those questions and best practices there's a white paper for",
    "start": "491919",
    "end": "497680"
  },
  {
    "text": "every pillar so you can read about the best practices in the white paper and it goes in much more detail than it does in",
    "start": "497680",
    "end": "503440"
  },
  {
    "text": "the tool because in the tool you're doing a review there's not a space for a lot of text and diagrams so and even if",
    "start": "503440",
    "end": "508720"
  },
  {
    "text": "you're not like a person that wants to sit down and read a 80 page white paper the white paper is an html form so you",
    "start": "508720",
    "end": "513760"
  },
  {
    "text": "could literally pop it up and deep link to whatever is important to you and just review that section but in addition to",
    "start": "513760",
    "end": "519279"
  },
  {
    "text": "the white paper there's also labs while our protective labs and and later when we do our demo it's gonna be a demo of one of those labs we could learn about",
    "start": "519279",
    "end": "525600"
  },
  {
    "text": "these best practices by really hands being hands-on perfect and thank you very much and the",
    "start": "525600",
    "end": "530880"
  },
  {
    "text": "robert tables was mentioning that it's all the things that you don't didn't know that you had to do or not to do so",
    "start": "530880",
    "end": "536959"
  },
  {
    "text": "it's a great guide that you can have in understanding more about workload and what you should do to make it reliable",
    "start": "536959",
    "end": "543760"
  },
  {
    "text": "the other question i wanted to ask before we move to the next section is something that i get from",
    "start": "543760",
    "end": "549920"
  },
  {
    "text": "customers quite a bit as well um so is the well architected framework um",
    "start": "549920",
    "end": "556160"
  },
  {
    "text": "just for new workloads or can i use it with existing workloads or applications so the wall architecture framework is",
    "start": "556160",
    "end": "562560"
  },
  {
    "text": "designed to be able to meet you where you are in an ideal world we would go ahead and and we would want to get as",
    "start": "562560",
    "end": "569120"
  },
  {
    "text": "early in the development cycle as possible so even when you're just conceiving your workloads you want to start thinking about the best practices",
    "start": "569120",
    "end": "576080"
  },
  {
    "text": "you want to try to design with all of this in mind and it's a lot easier to do that much like when you're building a",
    "start": "576080",
    "end": "581680"
  },
  {
    "text": "house you want to lay the foundation and put all the things into place when it's easiest when you're doing that with best",
    "start": "581680",
    "end": "587920"
  },
  {
    "text": "practices it's the same thing for building the architecture of a workload now having said that",
    "start": "587920",
    "end": "593279"
  },
  {
    "text": "anytime you're thinking about best practices is the right time to think about best practices so if you are",
    "start": "593279",
    "end": "598959"
  },
  {
    "text": "already in production then it's it's better than not doing it so i would say",
    "start": "598959",
    "end": "604160"
  },
  {
    "text": "wherever you are in the life cycle of your workload please take the time to consider the",
    "start": "604160",
    "end": "609200"
  },
  {
    "text": "best practices and learn from the the people that have come before you",
    "start": "609200",
    "end": "614320"
  },
  {
    "text": "but you will get the most impact out of it the earlier in this life cycle that you can bring the best",
    "start": "614320",
    "end": "620000"
  },
  {
    "text": "practices into play perfect thank you very much",
    "start": "620000",
    "end": "625440"
  },
  {
    "text": "johnny am i taking over from here you are it's time for you awesome demo this is like a well-oiled",
    "start": "626399",
    "end": "632160"
  },
  {
    "text": "machine well demos at the end wait we're clipping that's keeping them keeping them in their seats and keeping",
    "start": "632160",
    "end": "637279"
  },
  {
    "text": "them here throughout the whole thing so we could share with them uh hi folks welcome back um so anyway i want to dive into some of",
    "start": "637279",
    "end": "644320"
  },
  {
    "start": "643000",
    "end": "2441000"
  },
  {
    "text": "those best practices and johnny's going to share some with you too uh so the way we do uh best practices in well",
    "start": "644320",
    "end": "650640"
  },
  {
    "text": "architected is we divide them into these areas and there's four areas that we're going to talk to you about today in the",
    "start": "650640",
    "end": "656160"
  },
  {
    "text": "reliability best practices the first area which is foundations and then within those areas we define the best",
    "start": "656160",
    "end": "661920"
  },
  {
    "text": "divide the best practices into questions you saw when johnny shared with you that screenshot of the well architected tool it showed in the form of questions so uh",
    "start": "661920",
    "end": "669120"
  },
  {
    "text": "the question answer format is really great for reviews but it's also how we tend to organize so the question is",
    "start": "669120",
    "end": "675519"
  },
  {
    "text": "sort of a sub-topic and then the answers to that question or checkbox is yes or no are you doing these best practices",
    "start": "675519",
    "end": "682240"
  },
  {
    "text": "are you not doing them so under foundations there are two questions the first one is around service quotas and limits now you might not have heard the",
    "start": "682240",
    "end": "688480"
  },
  {
    "text": "phrase quotas before basically it's kind of another way to say limits it focuses more on what is the limit that's set in your aws",
    "start": "688480",
    "end": "695760"
  },
  {
    "text": "account or what's the limit set in your in your in your workload alright so it's quotas are more about something that you",
    "start": "695760",
    "end": "702079"
  },
  {
    "text": "know is set and is either changeable or not changeable but it's a it's a fixed amount that you know about versus like",
    "start": "702079",
    "end": "708399"
  },
  {
    "text": "we still talk about limits but limits might still be more about like things you that are not explicitly set but are",
    "start": "708399",
    "end": "714399"
  },
  {
    "text": "implicitly set like the speed of light like if you're talking about latency between different uh endpoints or or",
    "start": "714399",
    "end": "720639"
  },
  {
    "text": "even just uh constraints in your network infrastructure so there are quotas and there are limits and around the best",
    "start": "720639",
    "end": "726000"
  },
  {
    "text": "practices around there is a know what they are uh if you don't know your quotas you don't know that you're going",
    "start": "726000",
    "end": "731600"
  },
  {
    "text": "to accidentally hit them when you're operating in production and have some sort of outage or non-availability event and then raise those quotas where",
    "start": "731600",
    "end": "737680"
  },
  {
    "text": "necessary it kind of goes with the knowing your quotas but either ahead of time or dynamically have a way to",
    "start": "737680",
    "end": "743519"
  },
  {
    "text": "understand what your quotas are and when you're going to need to raise them and when you need to lower them again now the reason they exist is as a protection",
    "start": "743519",
    "end": "748880"
  },
  {
    "text": "mechanism right because the cloud is elastic right you could like with the right inputs expand out to to use you",
    "start": "748880",
    "end": "755120"
  },
  {
    "text": "know many many resources so you have those quotas in place to protect yourself when you don't want to use all those",
    "start": "755120",
    "end": "760160"
  },
  {
    "text": "resources but you also want the quotas out of the way when you need those resources and then the hard limits i talked about speed of light networking",
    "start": "760160",
    "end": "766480"
  },
  {
    "text": "infrastructure things like that understand where you need to work around those okay the question two rel two is around",
    "start": "766480",
    "end": "772720"
  },
  {
    "text": "network topology uh and i forgot to mention foundations refers to the reason they're called foundations because they",
    "start": "772720",
    "end": "778240"
  },
  {
    "text": "don't apply just to one workload but might apply to many workloads so well architecture is generally focused on a workload but the foundational stuff this",
    "start": "778240",
    "end": "784639"
  },
  {
    "text": "stuff in there that's in your account in your uh in your in your uh on in and in",
    "start": "784639",
    "end": "790000"
  },
  {
    "text": "the cloud essentially in how your cloud's configured that might affect multiple workloads so network topology",
    "start": "790000",
    "end": "795120"
  },
  {
    "text": "is another one of those things right we want to make sure you're using highly available endpoints to onboard customers",
    "start": "795120",
    "end": "800720"
  },
  {
    "text": "or other services onto your system so whether you're using something like an elastic load balance or an api gateway",
    "start": "800720",
    "end": "806720"
  },
  {
    "text": "or using route53 which is not technically endpoint but it defines your endpoints because it's a dns system so",
    "start": "806720",
    "end": "812560"
  },
  {
    "text": "it defines your domain names so you want to use these highly available systems to define your endpoints you want to have redundancy for high reliability so if",
    "start": "812560",
    "end": "819839"
  },
  {
    "text": "you're connecting between things have more than one connection a good example of that is if you need to collect",
    "start": "819839",
    "end": "825279"
  },
  {
    "text": "on-premises you could use a direct connect it's called a direct connect that's the aws service and we want you",
    "start": "825279",
    "end": "831440"
  },
  {
    "text": "to have at least two of those if you have only one of those you're running some risk there and then the size and layout of your network you have enough",
    "start": "831440",
    "end": "837519"
  },
  {
    "text": "ip addresses do you have enough capacity etc so for each of these we're going to show a slide with each of the questions",
    "start": "837519",
    "end": "843279"
  },
  {
    "text": "and just sort of dive into a couple of the best practices in this case i'm going to talk about quotas now this is the quotas dashboard",
    "start": "843279",
    "end": "850160"
  },
  {
    "text": "within the aws console so even the quotas dashboard is sort of this one pane of glass we can see what your quotas are remember quotas are these",
    "start": "850160",
    "end": "856720"
  },
  {
    "text": "preset limits around many different aws services you might be running you see athena dynamodb elastic block store many",
    "start": "856720",
    "end": "863519"
  },
  {
    "text": "many more that are not shown on the screen i'm going to double click on lambda there's a lot of people lambda is our serverless running code without",
    "start": "863519",
    "end": "870240"
  },
  {
    "text": "servers our serverless functionality and you can see here that concurrent executions is set to a thousand but",
    "start": "870240",
    "end": "875680"
  },
  {
    "text": "there's a little uh you know a little checkbox next to it i could raise that so concurrent executions is how many",
    "start": "875680",
    "end": "881279"
  },
  {
    "text": "lambdas i get running at a given time you know if i have a thousand requests come in before any of them complete it's",
    "start": "881279",
    "end": "887839"
  },
  {
    "text": "gonna spin up a thousand lambdas that's my maximum but i could raise that but there are things i can't raise like the",
    "start": "887839",
    "end": "893600"
  },
  {
    "text": "um like the payload uh the payload is gonna be 256 kilobytes for asynchronous lambda",
    "start": "893600",
    "end": "899279"
  },
  {
    "text": "i think it's six megabytes for synchronous lambda that's something that they're not we're not going to let you change so you have to just be aware of",
    "start": "899279",
    "end": "904720"
  },
  {
    "text": "it and uh networking so this is transit gateway uh we had transit gate was",
    "start": "904720",
    "end": "911519"
  },
  {
    "text": "introduced a couple years ago prior to that we did have something we still have something called vpc pairings we want to connect two vpcs on the same network",
    "start": "911519",
    "end": "918560"
  },
  {
    "text": "sharing the same ip address range you could do that with vpc peering and that works great for connecting two vpcs it",
    "start": "918560",
    "end": "924800"
  },
  {
    "text": "might even be okay for connecting three vpcs but when you get to like 10 vpcs you'd create this many to many mesh",
    "start": "924800",
    "end": "930560"
  },
  {
    "text": "that'd be very hard to maintain so transit gateway provides a central hub where you can connect all those vps vpcs",
    "start": "930560",
    "end": "936560"
  },
  {
    "text": "to a single transit gateway it also lets you connect to direct connect which again goes to on-premises or vpns which",
    "start": "936560",
    "end": "942000"
  },
  {
    "text": "can go to on-premises or other other uh clouds so you have lots of different options there using a transit gateway",
    "start": "942000",
    "end": "948079"
  },
  {
    "text": "gives you this nice neat uh network topology all right and with that um that",
    "start": "948079",
    "end": "954079"
  },
  {
    "text": "concludes the foundations area any are there any questions on the foundations where we go into the other best practices",
    "start": "954079",
    "end": "960160"
  },
  {
    "text": "um thank you seth and uh no no questions at the moment but i do still have a question for you here um",
    "start": "960160",
    "end": "966959"
  },
  {
    "text": "transgender and vpc peering is another argument that comes quite a lot with customers and",
    "start": "966959",
    "end": "972720"
  },
  {
    "text": "should we always use transit gateway or are there use cases where vpc peering would be okay to use i think if you're",
    "start": "972720",
    "end": "978800"
  },
  {
    "text": "connecting two vpcs vpc peering is an obvious good choice transit gateway and you don't need to connect to you know",
    "start": "978800",
    "end": "984560"
  },
  {
    "text": "direct connect or vpn then vpc peering is going to be a great option the question is when you get past two when",
    "start": "984560",
    "end": "989759"
  },
  {
    "text": "you get to three four five where is that crossover and i can't answer that specifically what i",
    "start": "989759",
    "end": "995759"
  },
  {
    "text": "can say is uh there'll become a point where uh managing that many vpc pairings might be difficult why wouldn't you just",
    "start": "995759",
    "end": "1002560"
  },
  {
    "text": "go to transit gateway right away well a couple reasons transit gateway does have a cost um associated with it while vpc",
    "start": "1002560",
    "end": "1008399"
  },
  {
    "text": "peering is free so you have to decide when it's worth it to be paying for that functionality um",
    "start": "1008399",
    "end": "1014880"
  },
  {
    "text": "and as i said uh you'll be able to connect to things like direct connects or vpns uh that's transit gateway is",
    "start": "1014880",
    "end": "1020800"
  },
  {
    "text": "gonna be your solution there so there's gonna be a crossover point you know somewhere between you know three and ten",
    "start": "1020800",
    "end": "1026720"
  },
  {
    "text": "there's gonna be a crossover point where you wanna consider transit gateway instead of just going with vpc pairing",
    "start": "1026720",
    "end": "1031839"
  },
  {
    "text": "and thank you seth and it definitely um depends on your architecture and what you're building and what your needs and",
    "start": "1031839",
    "end": "1038240"
  },
  {
    "text": "especially thinking about how you're going to grow uh when using those services one thing with vpc peering is",
    "start": "1038240",
    "end": "1043760"
  },
  {
    "text": "that you cannot do transitive traffic in between different vpcs which is something that transit gateway will",
    "start": "1043760",
    "end": "1049440"
  },
  {
    "text": "allow you to do so yeah and the complexity that seth was mentioning when you have multiple vpcs that need to talk",
    "start": "1049440",
    "end": "1055919"
  },
  {
    "text": "with each other you need to carefully plan everything and it becomes really really hard once you cross a certain",
    "start": "1055919",
    "end": "1061440"
  },
  {
    "text": "number yeah it's not transitive so that's what i meant to say i want to become many to many you can imagine taking a bunch of dpcs on the screen and",
    "start": "1061440",
    "end": "1067039"
  },
  {
    "text": "connecting each one to each other one and it becomes that many to many mesh which is complicated i guess the other",
    "start": "1067039",
    "end": "1072160"
  },
  {
    "text": "thing is transit gateway does introduce an extra hop it's going to be pretty low latency but if you're really really concerned about you know latency at the",
    "start": "1072160",
    "end": "1078799"
  },
  {
    "text": "nth degree then that extra hop might be something to consider also exactly and you might want also to",
    "start": "1078799",
    "end": "1084080"
  },
  {
    "text": "architect your workload to be same as e for those latency sensitive workloads it becomes it really depends on on the",
    "start": "1084080",
    "end": "1091200"
  },
  {
    "text": "architecture of your application what are your requirements i posted a link to a white paper that",
    "start": "1091200",
    "end": "1097600"
  },
  {
    "text": "discussed the building scalable networks with transient gateway versus vpc peering if",
    "start": "1097600",
    "end": "1102640"
  },
  {
    "text": "you're interested in looking a bit more but again thank you very much for your answer set and back to you all right the",
    "start": "1102640",
    "end": "1108320"
  },
  {
    "text": "next section we're going to talk about is work loader architecture so now this is workload specific and when we say workload architecture we mean",
    "start": "1108320",
    "end": "1115520"
  },
  {
    "text": "usually the software focused architecture there's some infrastructure pieces here too but focusing on those",
    "start": "1115520",
    "end": "1120799"
  },
  {
    "text": "software best practices that are going to keep your workload resilient so uh rel three is really about choosing what",
    "start": "1120799",
    "end": "1127679"
  },
  {
    "text": "is actually gonna be the structure of your of your workload of your distributed system uh anything from you",
    "start": "1127679",
    "end": "1133440"
  },
  {
    "text": "you can create anything from from these monoliths to service-oriented architecture to microservices you know finding the right",
    "start": "1133440",
    "end": "1140320"
  },
  {
    "text": "balance and how you map up the individual services to various business domains is going to be your first step",
    "start": "1140320",
    "end": "1146160"
  },
  {
    "text": "uh rel four is about nrl5 about preventing and mitigating failures respectively different kinds of",
    "start": "1146160",
    "end": "1151760"
  },
  {
    "text": "practices you could do in your software uh preventing failures we include things like loosely coupled dependencies",
    "start": "1151760",
    "end": "1156960"
  },
  {
    "text": "instead of just having your client call directly into an ec2 instance go through an elastic load balancer or consider",
    "start": "1156960",
    "end": "1163280"
  },
  {
    "text": "using sqs or queuing service to actually queue up requests and have a fleet of ec2 instances or ecs tasks or or you",
    "start": "1163280",
    "end": "1172240"
  },
  {
    "text": "know or eks pods to pick up those requests and that creates a loose coupling where a request is not is",
    "start": "1172240",
    "end": "1177679"
  },
  {
    "text": "picked up and something fails and something else can pick it up you don't you don't have that hard dependency there item potency means every request",
    "start": "1177679",
    "end": "1184240"
  },
  {
    "text": "uh if you remote issue the same request multiple times it has the same result it doesn't actually accumulate which is",
    "start": "1184240",
    "end": "1190000"
  },
  {
    "text": "really great if you're operating an environment where you might have some unreliable requests where you might get",
    "start": "1190000",
    "end": "1195679"
  },
  {
    "text": "them more than once and you just want to just do it the one time um mitigating failures graceful degradation is a lot",
    "start": "1195679",
    "end": "1202400"
  },
  {
    "text": "that's about um if you're there's a couple of things actually if you have a dependency that your service calls and",
    "start": "1202400",
    "end": "1208000"
  },
  {
    "text": "that dependency becomes unreliable how do you react i mean one way to react is say i called this dependency it gave me",
    "start": "1208000",
    "end": "1213200"
  },
  {
    "text": "an error so i'm going to pass an error back up the line that's not great for reliability what we'd like you to do is",
    "start": "1213200",
    "end": "1218640"
  },
  {
    "text": "be intelligent about it recognize that error and and say can i do something different can i serve a static response",
    "start": "1218640",
    "end": "1223840"
  },
  {
    "text": "can i serve some sort of cash response uh grace whatever national comes into play if you're experiencing high load",
    "start": "1223840",
    "end": "1229840"
  },
  {
    "text": "and things are starting to get overloaded uh like i know that some websites will start to like uh restrict",
    "start": "1229840",
    "end": "1235120"
  },
  {
    "text": "traffic from certain sources like no more robots and instead only accept traffic from actual users",
    "start": "1235120",
    "end": "1241039"
  },
  {
    "text": "um throttle and throttling failing fast limiting retries so you know that's again also about how do you when",
    "start": "1241039",
    "end": "1246720"
  },
  {
    "text": "failures are about to happen or in the in the process of happening where things are overloaded how does your software",
    "start": "1246720",
    "end": "1251919"
  },
  {
    "text": "react you know being able to throttle requests and send back actual uh messaging what is it uh which code is",
    "start": "1251919",
    "end": "1257840"
  },
  {
    "text": "that 427 whatever that too many requests or um sending back intelligent requests instead of falling over uh is going to",
    "start": "1257840",
    "end": "1263919"
  },
  {
    "text": "be very important so diving into this a little i mentioned monoliths to soa to microservices so monoliths are the kind",
    "start": "1263919",
    "end": "1272000"
  },
  {
    "text": "of old school i mean there are people out there i'm sure they still have monolithic architectures but they're kind of the old school one giant binary",
    "start": "1272000",
    "end": "1278240"
  },
  {
    "text": "contains all the business logic and that becomes kind of unwieldy after a while right you might have multiple teams owning different business logic all",
    "start": "1278240",
    "end": "1284480"
  },
  {
    "text": "having to check in to the same not only saying code base with same literal binary that's compiled together",
    "start": "1284480",
    "end": "1290080"
  },
  {
    "text": "and has to be deployed together it limits agility so folks have moved to service oriented architectures where",
    "start": "1290080",
    "end": "1295679"
  },
  {
    "text": "each application is part of distributed uh workload each has its own service talking to each other and then",
    "start": "1295679",
    "end": "1301600"
  },
  {
    "text": "microservices are where you take that to a next level so each function has its own service you might have the crud",
    "start": "1301600",
    "end": "1306880"
  },
  {
    "text": "operations for a certain record handled by a microservices and they're not exclusive soa and microservices are not",
    "start": "1306880",
    "end": "1312400"
  },
  {
    "text": "exclusive it's not either or choice right so each of those little squares under service architecture can consist",
    "start": "1312400",
    "end": "1317840"
  },
  {
    "text": "of multiple microservices itself and so it's something to consider when you're putting together your service",
    "start": "1317840",
    "end": "1323440"
  },
  {
    "text": "and then why are microservices or just even soa why are smaller services better well",
    "start": "1323440",
    "end": "1328880"
  },
  {
    "text": "number one is you could deploy them independently which again gives you greater agility i could deploy my service lines not changing my interface",
    "start": "1328880",
    "end": "1335200"
  },
  {
    "text": "in a breaking way without having to deploy everybody else's services and be and be assured that's still going to work i can also scale my services",
    "start": "1335200",
    "end": "1342240"
  },
  {
    "text": "differently i could scale some services up and other services down if you're using either reserved instances or",
    "start": "1342240",
    "end": "1349679"
  },
  {
    "text": "savings plans in aws and you have what's called an aws organization which is multiple accounts being managed you can",
    "start": "1349679",
    "end": "1355440"
  },
  {
    "text": "actually share those across multiple accounts and across multiple services so that uh you can maintain the the cost",
    "start": "1355440",
    "end": "1362240"
  },
  {
    "text": "savings of a savings plan uh or reserved instances while then not wasting any of your instances right one one service",
    "start": "1362240",
    "end": "1368640"
  },
  {
    "text": "gives them up another service it takes those takes those off your hands all right so yeah any questions on the",
    "start": "1368640",
    "end": "1375679"
  },
  {
    "text": "on the uh workload architecture section uh no no question from the audience",
    "start": "1375679",
    "end": "1381520"
  },
  {
    "text": "right now uh seth um one question i do have for you though is about you",
    "start": "1381520",
    "end": "1387039"
  },
  {
    "text": "mentioned graceful degradation and now that will work uh can you expand a bit on the concept please yeah so graceful",
    "start": "1387039",
    "end": "1393039"
  },
  {
    "text": "degradation is about how do i actually present an experience to my user that's still acceptable or",
    "start": "1393039",
    "end": "1399039"
  },
  {
    "text": "even good without rather than just simply failing to operate so the most famous example is",
    "start": "1399039",
    "end": "1405600"
  },
  {
    "text": "personalization right amazon.com is personalization netflix is personalization all these sites have personalization to show you things you",
    "start": "1405600",
    "end": "1412240"
  },
  {
    "text": "think you'd like but if the personalization service doesn't work do you want to fail and like just show a",
    "start": "1412240",
    "end": "1417440"
  },
  {
    "text": "blank page no you could actually show a static page or a page that you know is pers is uh things that are popular in",
    "start": "1417440",
    "end": "1424240"
  },
  {
    "text": "that area um another example is let's take the amazon.com detail page",
    "start": "1424240",
    "end": "1430000"
  },
  {
    "text": "that's the page you go to buy stuff right on that page there's a lot of stuff there's an image there's a title there's",
    "start": "1430000",
    "end": "1435279"
  },
  {
    "text": "a description there's a price there's ratings and there's reviews there's ratings all kinds of things but the way",
    "start": "1435279",
    "end": "1440960"
  },
  {
    "text": "that's architected that is that any of those things fails let's say the rating system for some reason is failing and",
    "start": "1440960",
    "end": "1447120"
  },
  {
    "text": "doesn't show you ratings it can still show you the title and the price and the description so you could still make a",
    "start": "1447120",
    "end": "1452320"
  },
  {
    "text": "purchasing decision if you want and there's like a lot of things on this page that are important to certain people but only at certain times that",
    "start": "1452320",
    "end": "1458159"
  },
  {
    "text": "you might not even miss if they're not there so that's the ability to gracefully degrade the experience it's a not a full experience but still",
    "start": "1458159",
    "end": "1463840"
  },
  {
    "text": "preventing presenting experience where customers can actually shop and do their thing perfect thank you seth and yeah it's a",
    "start": "1463840",
    "end": "1470559"
  },
  {
    "text": "one thing that you can do when you have independent systems or at least all micro services that can fail",
    "start": "1470559",
    "end": "1475919"
  },
  {
    "text": "um i've linked a link to a recent solution that we released which is the aws virtual waiting room that takes on",
    "start": "1475919",
    "end": "1482080"
  },
  {
    "text": "the concept to next level so basically the virtual waiting room is something that you can use to buffer incoming",
    "start": "1482080",
    "end": "1487840"
  },
  {
    "text": "requests to your website and basically put people in a queue to avoid overloading the website when you have",
    "start": "1487840",
    "end": "1492960"
  },
  {
    "text": "high burst of traffic which basically extending the concept to something rather than gracefully degrading a",
    "start": "1492960",
    "end": "1499520"
  },
  {
    "text": "system you're trying to put users in a queue as they're waiting the resources in your system to free up which again",
    "start": "1499520",
    "end": "1505679"
  },
  {
    "text": "expanding on this um concept um it's a full solution that you can use and i'll",
    "start": "1505679",
    "end": "1511600"
  },
  {
    "text": "post a link there if you want to have a look and then look at how it works and you can look at the how it was",
    "start": "1511600",
    "end": "1517279"
  },
  {
    "text": "implemented and now to implement that in your systems as well yeah absolutely yeah yeah i mean like it it's a form of",
    "start": "1517279",
    "end": "1524080"
  },
  {
    "text": "graceful integration that i as a user don't want to be in a waiting room i'd rather be buying my my ticket or my thing now but you've given me this",
    "start": "1524080",
    "end": "1531200"
  },
  {
    "text": "experience where i'm in a waiting room and i'm well informed and i understand that i eventually have my my ability to",
    "start": "1531200",
    "end": "1536480"
  },
  {
    "text": "buy my buy my stuff so it's a great example all right so let's go into the third",
    "start": "1536480",
    "end": "1543520"
  },
  {
    "text": "area so we've covered foundations and workload architecture let's talk about change management so change management",
    "start": "1543520",
    "end": "1548640"
  },
  {
    "text": "also has three questions each with their own best practices the one first one is to monitor your workload resources because you can't manage what you can't",
    "start": "1548640",
    "end": "1555039"
  },
  {
    "text": "see make sure the monitoring in place understand when you're approaching limits of your capacity to handle",
    "start": "1555039",
    "end": "1560480"
  },
  {
    "text": "traffic when are you actually seeing danger signs where things are going to fail do you have synthetic uh probes in",
    "start": "1560480",
    "end": "1566960"
  },
  {
    "text": "place maybe using cloudwatch synthetics as what we call canary running certain running through certain apis looking for",
    "start": "1566960",
    "end": "1572080"
  },
  {
    "text": "responses and if it sees a certain error right there it's giving you a signal that there might you need to take action",
    "start": "1572080",
    "end": "1578320"
  },
  {
    "text": "to proactively address an issue that might cause a reliability outage um roll",
    "start": "1578320",
    "end": "1584159"
  },
  {
    "text": "seven adapt to changes in demand this is the ability this is elasticity of the cloud right this is this is the great",
    "start": "1584159",
    "end": "1589360"
  },
  {
    "text": "thing about the cloud you can scale out when you need it scale back when you don't need it uh and use that and do",
    "start": "1589360",
    "end": "1594720"
  },
  {
    "text": "that in an automated fashion and relate is about implementing change uh specifically around deployments you know",
    "start": "1594720",
    "end": "1600159"
  },
  {
    "text": "deployment of code deployment configuration deployment of infrastructure deployment is probably the most dangerous time for your",
    "start": "1600159",
    "end": "1606159"
  },
  {
    "text": "workload right that's when things are changing and you want to actually ensure ensure that you're not going to have any",
    "start": "1606159",
    "end": "1611279"
  },
  {
    "text": "kind of negative consequence to that you need to be able to change things that's that's agility right you want to be continuously building continuously",
    "start": "1611279",
    "end": "1617039"
  },
  {
    "text": "deploying and so there's ways to mitigate those negative impacts talking about auto scaling first uh so",
    "start": "1617039",
    "end": "1623200"
  },
  {
    "text": "you know you could define auto scaling group uh where you actually have a minimum size a maximum size a desired",
    "start": "1623200",
    "end": "1629039"
  },
  {
    "text": "capacity and then you can set certain uh metrics to look at you know cpu or or network and and based on those scale up",
    "start": "1629039",
    "end": "1636880"
  },
  {
    "text": "or scale down there's a few different kind of scaling policies you can implement there's one that's sort of like a thermostat where you try to maintain a metric like cpu at a certain",
    "start": "1636880",
    "end": "1643840"
  },
  {
    "text": "value and you'll scale up and scale down to achieve it there's another one where you're just scaling up based on how far your alarm goes above and scaling back",
    "start": "1643840",
    "end": "1650960"
  },
  {
    "text": "based on how far your alarm goes below and it's not just about scaling ec2 instances you could scale ecs tasks you",
    "start": "1650960",
    "end": "1656799"
  },
  {
    "text": "could scale dynamo db throughput you could scale replicas on your database if you're using amazon aurora so auto scaling",
    "start": "1656799",
    "end": "1663200"
  },
  {
    "text": "comes into play in a lot of places even even it's not called auto scaling but lambda essentially does auto scaling like i",
    "start": "1663200",
    "end": "1669200"
  },
  {
    "text": "talked about before the more requests you get that need to be served it'll scale up the number of lambda instances",
    "start": "1669200",
    "end": "1674320"
  },
  {
    "text": "out there up to your concurrency limits so auto scaling is very powerful and then",
    "start": "1674320",
    "end": "1680399"
  },
  {
    "text": "change change dangerous uh uh time for your service and deployment is a time of change so this is showing you a good a",
    "start": "1680399",
    "end": "1687520"
  },
  {
    "text": "set of several good best practices around your deployment number one is uh developers are constantly making small",
    "start": "1687520",
    "end": "1693600"
  },
  {
    "text": "changes not huge large earth-shattering check-ins and those changes are constantly being integrated and tested",
    "start": "1693600",
    "end": "1699679"
  },
  {
    "text": "into your code base not necessarily being deployed to production but constantly being integrated and built",
    "start": "1699679",
    "end": "1704880"
  },
  {
    "text": "now that's the green area so on the orange area on the right this is where we talk about a pre-production stage",
    "start": "1704880",
    "end": "1709919"
  },
  {
    "text": "called midstage here and a production stage so this is where you're now actually flipping the script uh being fast is",
    "start": "1709919",
    "end": "1716320"
  },
  {
    "text": "important but quality is more important so you're going to have what's called a set of pessimistic rules and tests that",
    "start": "1716320",
    "end": "1722399"
  },
  {
    "text": "means that any failure of any of those tests will cause a rollback to the previous",
    "start": "1722399",
    "end": "1727679"
  },
  {
    "text": "stage so it's not going to go out the door and you can see on the right where it lists multiple fleets if you're in",
    "start": "1727679",
    "end": "1732720"
  },
  {
    "text": "multiple regions this is actually taken from amazon.com your multiple regions then you're not",
    "start": "1732720",
    "end": "1738240"
  },
  {
    "text": "going to roll them all out to the same fleet at once you're going to roll it out to a fleet at a time but even then you're not going to roll it out to the",
    "start": "1738240",
    "end": "1743840"
  },
  {
    "text": "entire fleet you're going to roll it out first to what's called a one box so one box can be literally a single server but",
    "start": "1743840",
    "end": "1749200"
  },
  {
    "text": "what it means is a a small subset of your of your deployment",
    "start": "1749200",
    "end": "1754399"
  },
  {
    "text": "uh footprint you deploy the new code to that and you monitor it very critically you have a lot of monitors on there a",
    "start": "1754399",
    "end": "1760320"
  },
  {
    "text": "lot of alarms on there and if anything uh goes awry if there's any alarms there you immediately roll it back this is a way",
    "start": "1760320",
    "end": "1766399"
  },
  {
    "text": "to get exposed to real production traffic at production scale with production diversity while mitigating",
    "start": "1766399",
    "end": "1772559"
  },
  {
    "text": "your risk so this is a couple of different best practices around around deployment",
    "start": "1772559",
    "end": "1777600"
  },
  {
    "text": "any questions and that that's what we're going to talk about change management for the fourth area failure management i'm going to hand it over to johnny but",
    "start": "1777600",
    "end": "1783600"
  },
  {
    "text": "any questions hey seth yes we have two questions uh the first one is from jibjab06 um he's",
    "start": "1783600",
    "end": "1791120"
  },
  {
    "text": "asking is auto scaling always reactive in the example scaling up when it sees higher load thank you for cheap job yeah",
    "start": "1791120",
    "end": "1798240"
  },
  {
    "text": "so that's a good point i talked about reactive autoscaling i said you see cpu or you see network load and you scale up",
    "start": "1798240",
    "end": "1804240"
  },
  {
    "text": "to accommodate not always no there is a time based auto scaling so if you know that you actually you know during the",
    "start": "1804240",
    "end": "1810640"
  },
  {
    "text": "day you see more traffic and during the night you see less traffic you can set a schedule to scale up during the day and",
    "start": "1810640",
    "end": "1815760"
  },
  {
    "text": "scale back during the night you can adjust that schedule however you want aws also has something called predictive auto scaling this is making use of",
    "start": "1815760",
    "end": "1822000"
  },
  {
    "text": "machine learning it again is based on a metric but it's going to immediately start learning based on that metric to",
    "start": "1822000",
    "end": "1827760"
  },
  {
    "text": "see to anticipate in advance instead of waiting for that metric to spike it's going to",
    "start": "1827760",
    "end": "1832799"
  },
  {
    "text": "it's going to auto scale you out or in based on what it thinks that metric is going to do based on what it's done before so that's another way to take",
    "start": "1832799",
    "end": "1839440"
  },
  {
    "text": "advantage of our skill without being completely reactive perfect thank you seth we also have another question from code",
    "start": "1839440",
    "end": "1845440"
  },
  {
    "text": "with sean um is there is there any way to take existing resources and dump them to cloud",
    "start": "1845440",
    "end": "1850559"
  },
  {
    "text": "formation oh okay yeah so not ex yes and no uh they did add a functionality and johnny",
    "start": "1850559",
    "end": "1856960"
  },
  {
    "text": "people are going to jump in on this if you want where you can actually create cloud formation templates from existing resources but you actually have to",
    "start": "1856960",
    "end": "1863200"
  },
  {
    "text": "you can me it's a way to manage existing resources with cloudformation you still actually have to put the uh the the",
    "start": "1863200",
    "end": "1869360"
  },
  {
    "text": "resources into a template and then say okay here's my template match it to this thing i already have in production and",
    "start": "1869360",
    "end": "1875440"
  },
  {
    "text": "now you're managing it but as for taking it from production and creating a new template i don't think so",
    "start": "1875440",
    "end": "1881200"
  },
  {
    "text": "uh well you also have uh there's a cloud format that can be used uh yeah don't talk",
    "start": "1881200",
    "end": "1887120"
  },
  {
    "text": "about platformer i i i don't think it's an officially supported tool anymore it's not not really officially supported they also",
    "start": "1887120",
    "end": "1893679"
  },
  {
    "text": "seem to work very well i wouldn't you know even look at it they're probably third-party tools yeah the third party",
    "start": "1893679",
    "end": "1899120"
  },
  {
    "text": "tools that will do that as well um so uh we have another question from robert tables uh nice bobby tables",
    "start": "1899120",
    "end": "1906559"
  },
  {
    "text": "conceptually how does this one box canary and rollback situation work with lambda using version aliases something",
    "start": "1906559",
    "end": "1913039"
  },
  {
    "text": "else yeah yeah i know i know in in the um i know you can do that actually you can do",
    "start": "1913039",
    "end": "1918720"
  },
  {
    "text": "blue-green deployments with lambda you can actually set it to uh deploy new code to a",
    "start": "1918720",
    "end": "1924559"
  },
  {
    "text": "percent of your lambdas out there and then scale up with time there actually are these these scaling policies you can",
    "start": "1924559",
    "end": "1930880"
  },
  {
    "text": "use with lambda to do these kinds of deployments i know the serverless toolkit does it that's what i was trying to think serverless toolkit is a um",
    "start": "1930880",
    "end": "1938159"
  },
  {
    "text": "is a code format a cloudformation-like capability that works with serverless",
    "start": "1938159",
    "end": "1943600"
  },
  {
    "text": "and lambda and it's also compatible with cloudformation i know within the serverless toolkit there are different deployment policies you can use that do",
    "start": "1943600",
    "end": "1949360"
  },
  {
    "text": "that yes",
    "start": "1949360",
    "end": "1951760"
  },
  {
    "text": "perfect that's all from the audience right now thank you very much for the answer set all right awesome all right",
    "start": "1954799",
    "end": "1960320"
  },
  {
    "text": "johnny take it away all right so moving on we're gonna we're gonna talk a little bit more about failure management",
    "start": "1960320",
    "end": "1966960"
  },
  {
    "text": "and essentially here what we want to do is we want to start to think about you know what could go wrong and if",
    "start": "1966960",
    "end": "1972399"
  },
  {
    "text": "something did go wrong how would we ensure that our workload is going to continue",
    "start": "1972399",
    "end": "1977760"
  },
  {
    "text": "to have the resilience that we need for the consistency that we expect and",
    "start": "1977760",
    "end": "1983279"
  },
  {
    "text": "so reliability 9 is talking about backing up your data backing up the data obviously with the expectation that",
    "start": "1983279",
    "end": "1989200"
  },
  {
    "text": "you're going to be able to restore that data in the event of some kind of a event",
    "start": "1989200",
    "end": "1994559"
  },
  {
    "text": "and so the first thing we have to do is we try to identify which data do we have to back up",
    "start": "1994559",
    "end": "1999600"
  },
  {
    "text": "and so we want to start with the workload and we want to work backwards from there what are the business outcomes and if something were to be",
    "start": "1999600",
    "end": "2007600"
  },
  {
    "text": "to an event to happen which individual things can we go without and which individual things do we",
    "start": "2007600",
    "end": "2013679"
  },
  {
    "text": "absolutely need to restore and so we're identifying our data to back it up and then once we've done",
    "start": "2013679",
    "end": "2019200"
  },
  {
    "text": "that we want to go ahead and automate that and we want to secure that backup because it's not enough to just run a backup job but we got to make sure that",
    "start": "2019200",
    "end": "2025840"
  },
  {
    "text": "it's going to be there when we need it so securing who can access it and making sure it doesn't get deleted and then",
    "start": "2025840",
    "end": "2031919"
  },
  {
    "text": "automating it to make sure that it's consistently going to be running and then every time we we need it we can",
    "start": "2031919",
    "end": "2037760"
  },
  {
    "text": "expect it to be there in reliability 10 we're talking about fault isolation",
    "start": "2037760",
    "end": "2043120"
  },
  {
    "text": "and essentially here what we're talking about is if something were to go wrong we want to make sure as we have many",
    "start": "2043120",
    "end": "2048878"
  },
  {
    "text": "many components and we have redundancies built in we want to make sure that that fault is isolated",
    "start": "2048879",
    "end": "2054480"
  },
  {
    "text": "to one subsection that we can we can have a failure and still overcome",
    "start": "2054480",
    "end": "2062079"
  },
  {
    "text": "it right we're talking about building building resiliency and this is one of the ways",
    "start": "2062079",
    "end": "2067520"
  },
  {
    "text": "we do it and we do it using multiple sites we use aws regions availability zones",
    "start": "2067520",
    "end": "2073358"
  },
  {
    "text": "we're going to talk more about those in a few moments we're going to dive into that a lot deeper so hold on that for a",
    "start": "2073359",
    "end": "2079520"
  },
  {
    "text": "second but the whole purpose of that we dive deeper into reliability 11 is to",
    "start": "2079520",
    "end": "2084960"
  },
  {
    "text": "be able to withstand component failures right we want to make sure that no matter what fails on an individual",
    "start": "2084960",
    "end": "2091040"
  },
  {
    "text": "component level that we still have a workload that's functioning and that the customer",
    "start": "2091040",
    "end": "2096638"
  },
  {
    "text": "experience does not get degraded and so with withstanding component failures the things we start to think",
    "start": "2096639",
    "end": "2102640"
  },
  {
    "text": "about are if something were to go wrong how would i recover and then i take that recovery and i",
    "start": "2102640",
    "end": "2108320"
  },
  {
    "text": "build a run book right this is what's going to happen when i recover and then what i ideally do is automate that",
    "start": "2108320",
    "end": "2115520"
  },
  {
    "text": "i want to automate that run book so that whenever that failure happens in a component i automatically recover and i",
    "start": "2115520",
    "end": "2122480"
  },
  {
    "text": "want to couple that with notifications i want to make sure that i'm notifying the proper people",
    "start": "2122480",
    "end": "2128400"
  },
  {
    "text": "that this event has happened and in the ideal scenario as ideal as a failure could be",
    "start": "2128400",
    "end": "2133920"
  },
  {
    "text": "you might be asleep in the middle of the night one component or many components fail",
    "start": "2133920",
    "end": "2140480"
  },
  {
    "text": "you have an automatic recovery you get a notification whether it be to an email or some other notification",
    "start": "2140480",
    "end": "2146880"
  },
  {
    "text": "mechanism you wake up in the morning you look you notice something failed but you also",
    "start": "2146880",
    "end": "2152079"
  },
  {
    "text": "notice that it recovered you have all the information you need to do a deep dive retrospective on what happened",
    "start": "2152079",
    "end": "2158880"
  },
  {
    "text": "try to figure out what went well and then areas that you can improve and so this is this is a really good thing",
    "start": "2158880",
    "end": "2165680"
  },
  {
    "text": "to to try to work for because things will fail so we want to make sure that when individual components fail",
    "start": "2165680",
    "end": "2171280"
  },
  {
    "text": "our architecture allows our workload to still be operational at",
    "start": "2171280",
    "end": "2176560"
  },
  {
    "text": "the expected level so we're going to move on to the next slide and we're going to talk a little bit more like i promised on the aws",
    "start": "2176560",
    "end": "2183680"
  },
  {
    "text": "regions and availability zones so regions are physical locations around the world and there are many many",
    "start": "2183680",
    "end": "2189760"
  },
  {
    "text": "regions and they are continuously being added in aws so you can go and you can you can look",
    "start": "2189760",
    "end": "2195119"
  },
  {
    "text": "that up online and get the the latest version of how many regions there are and where the new ones are being planned",
    "start": "2195119",
    "end": "2201520"
  },
  {
    "text": "and as we dive deeper into that clicking through this slide you'll see",
    "start": "2201520",
    "end": "2206640"
  },
  {
    "text": "we're going to talk about each region is made of manual availability zones",
    "start": "2206640",
    "end": "2212320"
  },
  {
    "text": "so availability zones as we continue to click through we're going to break this down into",
    "start": "2212320",
    "end": "2219040"
  },
  {
    "text": "each az is more discrete data centers right so we have we start at the high level we have",
    "start": "2219040",
    "end": "2225119"
  },
  {
    "text": "a region which is geographical in nature we break that down into azs which are going to be essentially clusters of data",
    "start": "2225119",
    "end": "2232480"
  },
  {
    "text": "centers operating as one and they're going to be in availability zones and our availability zones are",
    "start": "2232480",
    "end": "2239200"
  },
  {
    "text": "designed to do that fault isolation we were talking about so each availability zone",
    "start": "2239200",
    "end": "2245200"
  },
  {
    "text": "is comprised of many data centers each with redundant power redundant networking connectivity these are going",
    "start": "2245200",
    "end": "2251520"
  },
  {
    "text": "to be housed in separate facilities and the availability zones are going to be many miles apart so that they are in",
    "start": "2251520",
    "end": "2259119"
  },
  {
    "text": "different geographical fault areas in in essence if there were to be a flood it",
    "start": "2259119",
    "end": "2265440"
  },
  {
    "text": "would only affect 1az and not multiple if there were going to be an earthquake it would affect one az and not multiple",
    "start": "2265440",
    "end": "2271200"
  },
  {
    "text": "and so the whole point here is to isolate any failure into a subset of components and then architect in the",
    "start": "2271200",
    "end": "2277920"
  },
  {
    "text": "resiliency across those availability zones and other components so that way",
    "start": "2277920",
    "end": "2283119"
  },
  {
    "text": "we can continue to have an operational workload even when our components fail",
    "start": "2283119",
    "end": "2289359"
  },
  {
    "text": "so let's move on to reliability 12 and this is all about testing our reliability right so it's",
    "start": "2289359",
    "end": "2296000"
  },
  {
    "text": "all well and good to have a plan and it's all well and good to figure out exactly what we're going to do if something does fail",
    "start": "2296000",
    "end": "2302320"
  },
  {
    "text": "but we need to test that and the way that we do that is by simulating failure modes",
    "start": "2302320",
    "end": "2307680"
  },
  {
    "text": "we're going to do test scaling performance and processes and the way that all those things are going to happen is when we do a simulated failure",
    "start": "2307680",
    "end": "2316000"
  },
  {
    "text": "as we go through the run book of what we would do in that scenario it's going to test",
    "start": "2316000",
    "end": "2322320"
  },
  {
    "text": "the scaling performance and processes for us and we're going to find out where the hidden gotches might be that we had",
    "start": "2322320",
    "end": "2328400"
  },
  {
    "text": "never even considered because the time to figure out whether or not your recovery processes are going to work",
    "start": "2328400",
    "end": "2334640"
  },
  {
    "text": "is not when you're in the middle of a failure so as a result we have our disaster",
    "start": "2334640",
    "end": "2339839"
  },
  {
    "text": "recovery we have our plans right and the the first thing you have to do with disaster recovery is you have to figure",
    "start": "2339839",
    "end": "2346000"
  },
  {
    "text": "out what the business objectives are so we start again with the business and we we talk about the operational",
    "start": "2346000",
    "end": "2352960"
  },
  {
    "text": "workload and what our objectives should be in the in the instance of a disaster",
    "start": "2352960",
    "end": "2358320"
  },
  {
    "text": "and by that we're talking about a recovery point objection objective and a recovery time objective",
    "start": "2358320",
    "end": "2365119"
  },
  {
    "text": "so what that means is as we have an outage how much time can this workload sustain",
    "start": "2365119",
    "end": "2372880"
  },
  {
    "text": "before it needs to be operational again obviously we'd always love to have zero time but",
    "start": "2372880",
    "end": "2379520"
  },
  {
    "text": "some things can withstand some semblance of outage and still be an acceptable",
    "start": "2379520",
    "end": "2385760"
  },
  {
    "text": "threshold and some things cannot so we want to decide what is that time period that our",
    "start": "2385760",
    "end": "2391920"
  },
  {
    "text": "workload can be down and still be acceptable and then that's the recovery time",
    "start": "2391920",
    "end": "2397119"
  },
  {
    "text": "objective the recovery point objective is if i do have an outage",
    "start": "2397119",
    "end": "2402480"
  },
  {
    "text": "and let's say it happens at noon today how far back",
    "start": "2402480",
    "end": "2407920"
  },
  {
    "text": "can i have data loss before i need to make sure that everything is there in other words",
    "start": "2407920",
    "end": "2414720"
  },
  {
    "text": "if i have an outage and i lose all of my data set for one day is that acceptable",
    "start": "2414720",
    "end": "2420319"
  },
  {
    "text": "in some scenarios it would be because the data hasn't changed that much in some scenarios it absolutely would not",
    "start": "2420319",
    "end": "2425839"
  },
  {
    "text": "be acceptable and so that's our recovery point objective how far back in time can",
    "start": "2425839",
    "end": "2430880"
  },
  {
    "text": "i go and find an acceptable data set so we have a recovery time objective and our recovery point objective so the",
    "start": "2430880",
    "end": "2437359"
  },
  {
    "text": "first thing we do is we have to set those and then we go ahead and plan for those now we're going to move on to chaos",
    "start": "2437359",
    "end": "2442640"
  },
  {
    "start": "2441000",
    "end": "2821000"
  },
  {
    "text": "engineering this is a scientific method for gathering data and the way that it",
    "start": "2442640",
    "end": "2448000"
  },
  {
    "text": "starts is you start with a steady state this is something that you have a high confidence level",
    "start": "2448000",
    "end": "2453599"
  },
  {
    "text": "of your your availability so we want to know this is something that's working we're very confident that",
    "start": "2453599",
    "end": "2459599"
  },
  {
    "text": "it's going to work it's what we call our steady state then we're going to take a hypothesis so",
    "start": "2459599",
    "end": "2464640"
  },
  {
    "text": "we're going to assume something whether that be an outage some kind of failure",
    "start": "2464640",
    "end": "2469760"
  },
  {
    "text": "and that will be what we want to test and then in order to test that we're going to run an experiment this might be",
    "start": "2469760",
    "end": "2475839"
  },
  {
    "text": "a failure injection simulator it might be something else but it's some method for us to experiment on whether or not",
    "start": "2475839",
    "end": "2482880"
  },
  {
    "text": "our hypothesis will happen as planned based on the architectures we've set up",
    "start": "2482880",
    "end": "2488800"
  },
  {
    "text": "and then we're going to see what happens that's the verify state so either everything's going to go as we thought",
    "start": "2488800",
    "end": "2494400"
  },
  {
    "text": "it would and we're going to verify that we have a good process for recovery or we're going to learn that there were",
    "start": "2494400",
    "end": "2499680"
  },
  {
    "text": "some outages that we didn't expect or some unintended consequences and based on that we're going to have areas that",
    "start": "2499680",
    "end": "2505200"
  },
  {
    "text": "we can improve and we're going to go ahead and and work on the implementation of that",
    "start": "2505200",
    "end": "2510720"
  },
  {
    "text": "improvement once we've implemented those improvements what we've done is we've created a new steady state",
    "start": "2510720",
    "end": "2517359"
  },
  {
    "text": "we have a new high confidence level for for our uptime right our availability and then",
    "start": "2517359",
    "end": "2524560"
  },
  {
    "text": "that's our new steady state and then we can go through the process again",
    "start": "2524560",
    "end": "2529920"
  },
  {
    "text": "so the way that we talked about game days right game day is we talked about how do we how do we test our processes",
    "start": "2530720",
    "end": "2536800"
  },
  {
    "text": "and so a game day is how we do it it's a simulated failure or an event to test system resiliency the processes and team",
    "start": "2536800",
    "end": "2543599"
  },
  {
    "text": "responses now this is really important because as we look at this what we're showing on the screen right",
    "start": "2543599",
    "end": "2548720"
  },
  {
    "text": "now is the things you do ahead of time right we do our planning we're coming up with our hypothesis",
    "start": "2548720",
    "end": "2554720"
  },
  {
    "text": "we're talking about running an experiment and then doing some analysis of what we think is going to happen but",
    "start": "2554720",
    "end": "2560480"
  },
  {
    "text": "as we click through this slide we're going to see there's actually a lot more to it because it's not just the technology it's the people and processes",
    "start": "2560480",
    "end": "2568079"
  },
  {
    "text": "as well as the technology so we want to make sure that we're looking cross-discipline who are all the",
    "start": "2568079",
    "end": "2574640"
  },
  {
    "text": "people and teams that might be involved in this workload should something have to have to be done should",
    "start": "2574640",
    "end": "2581920"
  },
  {
    "text": "we have an outage and we need to recover from it and then what are their processes to have that happen",
    "start": "2581920",
    "end": "2587119"
  },
  {
    "text": "for example many times we we look through things we see people go ahead and make a plan that has a communication",
    "start": "2587119",
    "end": "2594000"
  },
  {
    "text": "mechanism where there's a key stakeholder involved that has to make an approval process or make something",
    "start": "2594000",
    "end": "2599760"
  },
  {
    "text": "happen and that looks great when it's daytime and we're walking through it but if we do an actual simulation at night time",
    "start": "2599760",
    "end": "2608000"
  },
  {
    "text": "sometimes you'll find that your processes involve contacting somebody",
    "start": "2608000",
    "end": "2613040"
  },
  {
    "text": "who may or may not be as readily available at night as they were during the day for example a key stakeholder",
    "start": "2613040",
    "end": "2619760"
  },
  {
    "text": "when they go to sleep they might put their phone on silent or they might turn it off altogether so they can get a good",
    "start": "2619760",
    "end": "2625040"
  },
  {
    "text": "night's sleep well that might severely put it put a",
    "start": "2625040",
    "end": "2630880"
  },
  {
    "text": "delay in our process there might be a many hour delay in our recovery process",
    "start": "2630880",
    "end": "2635920"
  },
  {
    "text": "because a key stakeholder is not available those are great things that come out during a simulated failure so",
    "start": "2635920",
    "end": "2640960"
  },
  {
    "text": "that we can rectify those and make sure we're not going to have that problem when there's when there's an actual",
    "start": "2640960",
    "end": "2646800"
  },
  {
    "text": "business impact so talking a little bit more about the strategies we were talking about for",
    "start": "2646800",
    "end": "2653280"
  },
  {
    "text": "disaster recovery right we talked about recovery time objectives recovery point objectives and so how do we work through",
    "start": "2653280",
    "end": "2659760"
  },
  {
    "text": "all of that well this slide starts to to help us to kind of discern where we need to be where the business needs to be and",
    "start": "2659760",
    "end": "2666400"
  },
  {
    "text": "there's two kinds there's an active passive where we have one set that we're using when everything is fine and then",
    "start": "2666400",
    "end": "2673040"
  },
  {
    "text": "there's a passive subset of infrastructure that we're going to fail over to or there's also an active active where",
    "start": "2673040",
    "end": "2679760"
  },
  {
    "text": "you're utilizing both of them all the time so let's dig a little bit into that so backup and restore",
    "start": "2679760",
    "end": "2686000"
  },
  {
    "text": "this starts on the far left of this chart you're going to see we're going to see different objectives or different architectures that we can",
    "start": "2686000",
    "end": "2692480"
  },
  {
    "text": "do and they're going to go from left to right from lowest cost to highest cost",
    "start": "2692480",
    "end": "2697760"
  },
  {
    "text": "but you'll also notice that from left to right they're going to go from the highest",
    "start": "2697760",
    "end": "2703040"
  },
  {
    "text": "highest number of hours or minutes or basically time the highest time for a",
    "start": "2703040",
    "end": "2708319"
  },
  {
    "text": "recovery recovery point objective and a recovery time objective all the way as we increase cost we're",
    "start": "2708319",
    "end": "2715200"
  },
  {
    "text": "going to lower those time thresholds so starting with backup and restore we basically have something we're backing",
    "start": "2715200",
    "end": "2720560"
  },
  {
    "text": "up and whenever there's an outage we're going to begin creating a new",
    "start": "2720560",
    "end": "2725760"
  },
  {
    "text": "a new environment of that through restoring and that's going to take time",
    "start": "2725760",
    "end": "2731359"
  },
  {
    "text": "but it's only running when we need it and so it's the lowest amount of cost moving on to the right side we're going",
    "start": "2731359",
    "end": "2738079"
  },
  {
    "text": "to see a pilot light which is essentially i'm going to lower my time from hours to maybe tens of minutes i'm",
    "start": "2738079",
    "end": "2743839"
  },
  {
    "text": "going to already have my data replicated to my new environment but i'm not going to have the environment spun up so it's",
    "start": "2743839",
    "end": "2749920"
  },
  {
    "text": "not going to cost me as much as it would to have a full copy of my environment and the data's already replicated so i'm",
    "start": "2749920",
    "end": "2755599"
  },
  {
    "text": "starting to save some time and plan but there is more cost associated moving to a warm standby",
    "start": "2755599",
    "end": "2761680"
  },
  {
    "text": "my data is live it's replicated like it was before and i've got some infrastructure that's",
    "start": "2761680",
    "end": "2767680"
  },
  {
    "text": "running so i've got a small subset of my my environment architecture running",
    "start": "2767680",
    "end": "2774240"
  },
  {
    "text": "so we've added some cost because of that but it's not a full scale model so there will be some time that i'll still need",
    "start": "2774240",
    "end": "2780880"
  },
  {
    "text": "to scale that out and so that will increase the that's why we still have some minutes left",
    "start": "2780880",
    "end": "2787440"
  },
  {
    "text": "and then we move to a multi-site active active this is the best case scenario as far as the recovery point objective in",
    "start": "2787440",
    "end": "2793359"
  },
  {
    "text": "the recovery time objective because we're always live and our data is going to be near real time and our recovery time objective because",
    "start": "2793359",
    "end": "2800319"
  },
  {
    "text": "it's already live so the failover it doesn't take any time to happen",
    "start": "2800319",
    "end": "2806000"
  },
  {
    "text": "but there is a lot more cost involved because you have more resources running all the time",
    "start": "2806000",
    "end": "2812800"
  },
  {
    "text": "so now i'm going to hand it back over to seth for the the demo that i promised you like 40 minutes ago he's going to",
    "start": "2812800",
    "end": "2818240"
  },
  {
    "text": "show you some really cool things that you can do and show you how to do it sure yeah regarding chaos engineering",
    "start": "2818240",
    "end": "2824000"
  },
  {
    "start": "2821000",
    "end": "3339000"
  },
  {
    "text": "that's a really uh popular area we love to talk about so we have a demo there if you want to",
    "start": "2824000",
    "end": "2829119"
  },
  {
    "text": "take down that link or snap that qr code there it's based on one of our well protected labs so the demo is going to",
    "start": "2829119",
    "end": "2835359"
  },
  {
    "text": "walk you through a part of that lab so without further ado here it is",
    "start": "2835359",
    "end": "2840640"
  },
  {
    "text": "all right what you see here is we have three ec2 instances one in each availability zone one in a one in b one",
    "start": "2840640",
    "end": "2847119"
  },
  {
    "text": "in c this is our reference architecture and you can see each ec2 instance has its own instance id now our reference",
    "start": "2847119",
    "end": "2853920"
  },
  {
    "text": "architecture is serving a very simple website this picture is being served from the s3 bucket and up here some",
    "start": "2853920",
    "end": "2859119"
  },
  {
    "text": "metadata and i want you to look at where it says availability zone as i refresh that you see it goes from a to c to b to",
    "start": "2859119",
    "end": "2866559"
  },
  {
    "text": "a so each request is going to a different ec2 instance one of the three ec2",
    "start": "2866559",
    "end": "2872400"
  },
  {
    "text": "instances in zone a in zone b or zone c this is again as as expected and as",
    "start": "2872400",
    "end": "2878640"
  },
  {
    "text": "designed so we're going to try a test uh we're going to try an experiment where we're going to",
    "start": "2878640",
    "end": "2883839"
  },
  {
    "text": "fail one of the instances so we'll run fail instance",
    "start": "2883839",
    "end": "2888480"
  },
  {
    "text": "and it's going to tell me it wants a vpc id that's fine we'll give it a vpc id all three ec2 instances are in the same",
    "start": "2890319",
    "end": "2896640"
  },
  {
    "text": "vpc and what's it going to do you can see it says terminating this instance id let's look at the last",
    "start": "2896640",
    "end": "2902640"
  },
  {
    "text": "76f it terminated 76f so we see 76f that's the one in zone a and if i",
    "start": "2902640",
    "end": "2908800"
  },
  {
    "text": "refresh it's now showing 76f in zone a is shutting down this is as expected our we",
    "start": "2908800",
    "end": "2916880"
  },
  {
    "text": "simulated the failure of an ec2 instance by shutting it down that's what our little script did so as we refresh this",
    "start": "2916880",
    "end": "2924720"
  },
  {
    "text": "you'll see it goes from a shutting down state and well let's go check our website actually so our website here",
    "start": "2924720",
    "end": "2930079"
  },
  {
    "text": "we're going to refresh the site and you're going to see it's hitting zone b and c zone b and c that's exactly",
    "start": "2930079",
    "end": "2936800"
  },
  {
    "text": "what we'd expect there's no loss of availability and even though the instance in a has failed it's hitting",
    "start": "2936800",
    "end": "2942720"
  },
  {
    "text": "zone b and c and why is that this here is our elastic load balancer and you can",
    "start": "2942720",
    "end": "2947920"
  },
  {
    "text": "see that it says as registered targets just b and c a has been deregistered because it was",
    "start": "2947920",
    "end": "2954640"
  },
  {
    "text": "deemed unhealthy over here is our auto scaling group our auto scaling group is configured to maintain three instances",
    "start": "2954640",
    "end": "2960640"
  },
  {
    "text": "at all time so it sees that the one in a is terminating so what's it going to do",
    "start": "2960640",
    "end": "2966400"
  },
  {
    "text": "it's going to spin up another instance to replace that instance in zone a so if we go here and refresh",
    "start": "2966400",
    "end": "2973200"
  },
  {
    "text": "you'll see this one's terminated and the auto scaling group as soon as it",
    "start": "2973200",
    "end": "2978480"
  },
  {
    "text": "um there it goes see pending in a zone the one in terminated in a here and",
    "start": "2978480",
    "end": "2984160"
  },
  {
    "text": "there's one pending in a here in the meantime traffic is still being served from b and c let's take a quick look at",
    "start": "2984160",
    "end": "2990319"
  },
  {
    "text": "the code okay so this is our fail instance code this is available on github at the link i gave you and the first",
    "start": "2990319",
    "end": "2996400"
  },
  {
    "text": "part here is just the part you saw where it asked for vpc id and the rest of it's very simple it's using the aws cli the",
    "start": "2996400",
    "end": "3003599"
  },
  {
    "text": "command line interface here it's doing a describe instances given the vpc id i",
    "start": "3003599",
    "end": "3009200"
  },
  {
    "text": "gave it and it's parsing out the first instance return that's non-deterministic so it's sort of random and what that",
    "start": "3009200",
    "end": "3015200"
  },
  {
    "text": "first instance is termed it's due for that first instance that's returned it's doing it ec2 terminate instances so find",
    "start": "3015200",
    "end": "3022480"
  },
  {
    "text": "the first instance that you return to me in the vpc and terminate it and that's exactly what we saw going on here so now",
    "start": "3022480",
    "end": "3030000"
  },
  {
    "text": "this new one is spinning up and it's initializing and it'll take about a minute or so to initialize so what i'm",
    "start": "3030000",
    "end": "3036240"
  },
  {
    "text": "going to do is stop the recording and bring it back after it's initialized in about a minute or so",
    "start": "3036240",
    "end": "3042400"
  },
  {
    "text": "so it's been about one minute since i stopped the recording before and now you can see that new instance that was",
    "start": "3046240",
    "end": "3051599"
  },
  {
    "text": "started in zone a because we killed one in zone a and started a new one in zone a is now running and healthy so if we go",
    "start": "3051599",
    "end": "3057520"
  },
  {
    "text": "here over to the page and again look at the availability zone here and then refresh you can see now it's going to a",
    "start": "3057520",
    "end": "3063599"
  },
  {
    "text": "b and c and so our hypothesis was that steady state would be uh would continue",
    "start": "3063599",
    "end": "3069760"
  },
  {
    "text": "that there would be no availability loss and that it would replace the lost instance so all of these came true so",
    "start": "3069760",
    "end": "3075280"
  },
  {
    "text": "our hypothesis is confirmed for killing an ec2 instance now let's try a slightly",
    "start": "3075280",
    "end": "3080559"
  },
  {
    "text": "more advanced experiment so before we killed an instance so now we're going to fail an entire availability zone so",
    "start": "3080559",
    "end": "3086960"
  },
  {
    "text": "we're going to simulate the failure of an availability zone and you can see it wants a couple of arguments it wants a",
    "start": "3086960",
    "end": "3092960"
  },
  {
    "text": "um it wants a availability zone and it",
    "start": "3092960",
    "end": "3098640"
  },
  {
    "text": "wants that vpc id so we're going to give it both of those and what it's doing here you can see it",
    "start": "3098640",
    "end": "3105040"
  },
  {
    "text": "says acl here that's access control list so what it's doing is setting up an",
    "start": "3105040",
    "end": "3110079"
  },
  {
    "text": "access control list on the subnets in availability zone c that is denying all",
    "start": "3110079",
    "end": "3115520"
  },
  {
    "text": "traffic in and out of the subnet that is how we are simulating failure of the subnet by um shutting off all traffic",
    "start": "3115520",
    "end": "3122559"
  },
  {
    "text": "going in and out of the subnet so now if we come here it's uh zone c that we failed",
    "start": "3122559",
    "end": "3128880"
  },
  {
    "text": "and we refresh it what you'll see is the one in zone c shows as healthy but it's",
    "start": "3128880",
    "end": "3133920"
  },
  {
    "text": "not really healthy and i'll get back to it in a second and our system recognizes that so it's starting up a new instance",
    "start": "3133920",
    "end": "3139520"
  },
  {
    "text": "in zone a it's not going to start it up in zone c because it knows the availability zone c has failed so it's",
    "start": "3139520",
    "end": "3146480"
  },
  {
    "text": "going to start it up in zone a instead to maintain those three instances now why does this show healthy this is where",
    "start": "3146480",
    "end": "3152480"
  },
  {
    "text": "our simulation and reality diverge a little our simulation is using networking to shut off all traffic in",
    "start": "3152480",
    "end": "3158880"
  },
  {
    "text": "and out of that subnet but within that subnet the actual shallow checks that are shown here are actually still",
    "start": "3158880",
    "end": "3165520"
  },
  {
    "text": "operating and say it's healthy our deeper health checks that are actually used by our load balancer and by our auto scaling",
    "start": "3165520",
    "end": "3172559"
  },
  {
    "text": "group these deeper health checks actually call the web app those recognize that it's not healthy and",
    "start": "3172559",
    "end": "3178079"
  },
  {
    "text": "that's why it's starting up a new instance here to maintain three instances so if i come to the website",
    "start": "3178079",
    "end": "3183599"
  },
  {
    "text": "here and refresh it then what do we see we see it's hitting zone a",
    "start": "3183599",
    "end": "3188640"
  },
  {
    "text": "i'm going to refresh it it's hitting zone a and b this is as",
    "start": "3188640",
    "end": "3193680"
  },
  {
    "text": "expected because zone c has been taken out of commission so what's happened is there's no availability loss we killed",
    "start": "3193680",
    "end": "3199839"
  },
  {
    "text": "the entire zone c traffic is being taken by zone a and zone b and that we're spinning up a new",
    "start": "3199839",
    "end": "3206160"
  },
  {
    "text": "instance here so that we maintain three healthy instances again our hypothesis is confirmed",
    "start": "3206160",
    "end": "3213839"
  },
  {
    "text": "all right yeah and and just to show you how we might do that with fis which was launched last year the aws fault",
    "start": "3214480",
    "end": "3219599"
  },
  {
    "text": "injection simulator which was the show last week so if you haven't seen that show go back and watch it we're going to",
    "start": "3219599",
    "end": "3224720"
  },
  {
    "text": "share this other conclusion to the demo okay what you see here is we have three",
    "start": "3224720",
    "end": "3232160"
  },
  {
    "text": "running web servers all three of them are running we go to our application we see it's using availability zone c i'll",
    "start": "3232160",
    "end": "3239200"
  },
  {
    "text": "refresh there's a there's b there's c alright so it's using all a b and c",
    "start": "3239200",
    "end": "3244640"
  },
  {
    "text": "so here we are in fis and this is showing an experiment",
    "start": "3244640",
    "end": "3250160"
  },
  {
    "text": "template so in this template i've told it i want to terminate use the terminate instance action",
    "start": "3250160",
    "end": "3256079"
  },
  {
    "text": "and what i want to target is ec2 instances one of them only one of them",
    "start": "3256079",
    "end": "3262800"
  },
  {
    "text": "with this tag so the cloud formation stack name equals web service for resiliency that is the",
    "start": "3262800",
    "end": "3269920"
  },
  {
    "text": "tag on these instances if i go to these instances here and show you the tags there's that tag right there",
    "start": "3269920",
    "end": "3277040"
  },
  {
    "text": "so i want to get one of those and only if it's running so you notice i have one from a previous experiment that's",
    "start": "3277040",
    "end": "3282880"
  },
  {
    "text": "terminated you know i don't want it to mess around with that i just wanted to hit the ones that running so what i'll",
    "start": "3282880",
    "end": "3288240"
  },
  {
    "text": "do is i go action start and it's saying okay i could add tags the experiment i can say start",
    "start": "3288240",
    "end": "3293599"
  },
  {
    "text": "experiment and now it's chaos testing we want to make sure that you really want to do this so we're going to hit start",
    "start": "3293599",
    "end": "3300799"
  },
  {
    "text": "and it's going to run the experiment now so successfully started the experiment terminate instance pending",
    "start": "3300799",
    "end": "3307440"
  },
  {
    "text": "i can refresh this and now it's completed okay so now if we go back here to the",
    "start": "3307440",
    "end": "3313040"
  },
  {
    "text": "instances and i refresh them see one of them is shutting down the one in usc",
    "start": "3313040",
    "end": "3318480"
  },
  {
    "text": "and if i go back to our app and i go ahead and refresh that it's hitting zone",
    "start": "3318480",
    "end": "3323680"
  },
  {
    "text": "b zone a zone a and zone b okay so that's what we expected and it works very similar to",
    "start": "3323680",
    "end": "3331200"
  },
  {
    "text": "our terminate ec2 instance script but now it's using a the fis service to do that",
    "start": "3331200",
    "end": "3338960"
  },
  {
    "start": "3339000",
    "end": "3441000"
  },
  {
    "text": "all right awesome so just so you know the reason we did the script first is script is a great way to onboard and do",
    "start": "3339200",
    "end": "3344400"
  },
  {
    "text": "chaos testing without fear because you understand exactly what's happening there's it's all transparent and then",
    "start": "3344400",
    "end": "3349520"
  },
  {
    "text": "move to fis because that's the native aws way to do it integrate with aws security and guard rails um so just real",
    "start": "3349520",
    "end": "3356640"
  },
  {
    "text": "quick takeaways here is you get reliability reliability's gonna continuous improvement process you can't",
    "start": "3356640",
    "end": "3361680"
  },
  {
    "text": "just do it just once even though we're writing check boxes and walk take a tool it's not a one and done and you have to",
    "start": "3361680",
    "end": "3367280"
  },
  {
    "text": "test it as johnny said if you don't test it you don't test your reliability plan you don't have a reliability plan",
    "start": "3367280",
    "end": "3372400"
  },
  {
    "text": "prepare for the worst defense in layers understand what your business needs and what kind of uh failures your you can",
    "start": "3372400",
    "end": "3378480"
  },
  {
    "text": "tolerate and can't tolerate and prepare for those and get started with those best practices we mentioned today which",
    "start": "3378480",
    "end": "3384000"
  },
  {
    "text": "you can learn about by looking in the uh well architected reliability pillar um all these links here links to the labs",
    "start": "3384000",
    "end": "3390319"
  },
  {
    "text": "links to fis are going to include in the chat live today or in the details of",
    "start": "3390319",
    "end": "3395359"
  },
  {
    "text": "your watching this vod later let's say on youtube and with that we thank you very much",
    "start": "3395359",
    "end": "3400720"
  },
  {
    "text": "thank you seth and johnny for the awesome content if there are questions that we are not",
    "start": "3400720",
    "end": "3406480"
  },
  {
    "text": "answered today you can post your question on repos.ws and email us any feedback to aws supports you at",
    "start": "3406480",
    "end": "3412960"
  },
  {
    "text": "amazon.com we want to hear from you and tell us what else you would like to see on this show again thank you for your",
    "start": "3412960",
    "end": "3419119"
  },
  {
    "text": "question thank you for joining us at ws support you and the happy cloud computing have a nice day bye",
    "start": "3419119",
    "end": "3425640"
  },
  {
    "text": "[Music]",
    "start": "3425640",
    "end": "3437230"
  },
  {
    "text": "you",
    "start": "3440160",
    "end": "3442240"
  }
]