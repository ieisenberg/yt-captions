[
  {
    "text": "ROB BRIGHAM: Welcome everyone, my\nname's Rob Brigham and this Clare Liguiori. We're from the AWS Developer Tools Group",
    "start": "5400",
    "end": "12200"
  },
  {
    "text": "where we build the tools that developers\ninside of Amazon use as well as a new set of AWS code services",
    "start": "12200",
    "end": "18300"
  },
  {
    "text": "that all of our customers can use. Today, we're going to talk about\nDevOps at Amazon",
    "start": "18300",
    "end": "24000"
  },
  {
    "text": "and give you an inside peek at how\nAmazon develops our web applications and web services.",
    "start": "24000",
    "end": "30200"
  },
  {
    "text": "We're going to divide the talk into two parts. First, I'm going to tell you the\nstory of how Amazon",
    "start": "30200",
    "end": "36000"
  },
  {
    "text": "made its own DevOps transformation and how we became more agile at delivering software. After covering that history, we're\ngoing to come back to the present",
    "start": "36000",
    "end": "43899"
  },
  {
    "text": "and I'll introduce to you three new services, AWS CodeCommit, CodePipeline, and\nCodeDeploy.",
    "start": "43900",
    "end": "50700"
  },
  {
    "text": "After that, Clare's going to come up and give us a great in-depth demonstration of how to use these new code services",
    "start": "50700",
    "end": "56800"
  },
  {
    "text": "to create your own DevOps processes. But before we get started I have\nboth an apology",
    "start": "56800",
    "end": "63600"
  },
  {
    "text": "and a confession to make. So, first I apologize for my voice,\nit's not normally this hoarse.",
    "start": "63600",
    "end": "68800"
  },
  {
    "text": "I promise I went to bed early last\nnight, I did not stay up late, but still, I'm losing it a little bit.",
    "start": "68800",
    "end": "74800"
  },
  {
    "text": "So, I might have to take some breaks and have some water in between the talk. Now for my confession, I used to\nhate the term DevOps.",
    "start": "74800",
    "end": "85000"
  },
  {
    "text": "It just really, really bugged me. And it bugged me because it's fuzzy. People would use it in many different ways",
    "start": "85000",
    "end": "90600"
  },
  {
    "text": "to mean many different things. So, whenever anyone said DevOps,\nother people weren't really sure what they were\ntalking about.",
    "start": "90600",
    "end": "97500"
  },
  {
    "text": "But earlier this year I finally caved\nto the pressure and I started using DevOps in my talks.",
    "start": "97500",
    "end": "103300"
  },
  {
    "text": "It just really is the best term out there that captures this new modern style\nof software development",
    "start": "103300",
    "end": "109100"
  },
  {
    "text": "and delivery. So, since I'm using it in my talk,\nI'm going to have to define it.",
    "start": "109100",
    "end": "115100"
  },
  {
    "text": "And I'm not going to define it directly, but I'm going to relate it to something that we're all very familiar with,\nand that is",
    "start": "115100",
    "end": "120799"
  },
  {
    "text": "the software development lifecycle. So, this is a typical lifecycle for any kind of web application or web service.",
    "start": "120800",
    "end": "126899"
  },
  {
    "text": "On one side you're going to have\nyour customers and then the other side you're going\nto have the developers. Every new feature that you build\nin that application",
    "start": "126900",
    "end": "133900"
  },
  {
    "text": "is going to go through this lifecycle. Developers are going to come up with the idea, they're going to implement that,\nthey're going take the codes",
    "start": "133900",
    "end": "139800"
  },
  {
    "text": "that they write, then they're going\nto build it, test it, put it through the release process\nuntil it finally",
    "start": "139800",
    "end": "145200"
  },
  {
    "text": "gets out into production where your\ncustomers can use it. After your customers get their hands on it then you can start to learn from it.",
    "start": "145200",
    "end": "152099"
  },
  {
    "text": "Your development team can look at the customer usage data of the application, they can get feedback directly from\nthe customers,",
    "start": "152100",
    "end": "159200"
  },
  {
    "text": "and they can start to learn to make\neducated decisions on what they want to do next. So, they might choose to refine that\nfeature to improve it,",
    "start": "159200",
    "end": "166200"
  },
  {
    "text": "or they could chose to build a whole\nnew feature and then this whole loop starts again.",
    "start": "166200",
    "end": "171900"
  },
  {
    "text": "So, there are two important things to note about this development lifecycle. First, is that the speed at which\nyou're able to complete this loop",
    "start": "171900",
    "end": "177900"
  },
  {
    "text": "to build a new feature, get it in\nthe hands of your customers, and have your customers start using\nit and so you can learn from that,",
    "start": "177900",
    "end": "185000"
  },
  {
    "text": "the speed of completing that loop\ndetermines your business agility. The faster you're able to go through it, the more responsive you'll be to customers,",
    "start": "185000",
    "end": "192099"
  },
  {
    "text": "and the quicker you'll be able to innovate. At Amazon, we focus intently on completing this loop",
    "start": "192100",
    "end": "197500"
  },
  {
    "text": "as quickly as we can. The second thing to note is that\nyour developers are",
    "start": "197500",
    "end": "203100"
  },
  {
    "text": "only adding value in the eyes of\nyour customers when they're working over here on\nthe left side, writing new code.",
    "start": "203100",
    "end": "208900"
  },
  {
    "text": "Any time that your developers spend\nin the middle either building the delivery pipeline, or handholding changes through that pipeline,",
    "start": "208900",
    "end": "216099"
  },
  {
    "text": "all of that time is lost in the eyes\nof your customers. Your customers will only see the\nnew features that your developers are writing.",
    "start": "216100",
    "end": "223400"
  },
  {
    "text": "So, what you want to do is maximize\nthe amount of time that your developers are writing\nnew features and minimize the amount of time that\nthey're spending in the middle.",
    "start": "223400",
    "end": "230400"
  },
  {
    "text": "And it's really those two things that make up the heart of DevOps to me. To me, DevOps is any efficiency",
    "start": "230400",
    "end": "236400"
  },
  {
    "text": "that you can drive into this process\nthat helps you move through this loop faster.",
    "start": "236400",
    "end": "241500"
  },
  {
    "text": "And this is why it's so confusing because there are many things you\ncan do here. You can make organizational changes,\ncultural changes,",
    "start": "241500",
    "end": "247900"
  },
  {
    "text": "process changes, tool changes, and\nI think that's okay. To me, any of those improvements\nthat you can do",
    "start": "247900",
    "end": "253600"
  },
  {
    "text": "to move faster through this lifecycle\ncount as DevOps.",
    "start": "253600",
    "end": "259400"
  },
  {
    "text": "So, to make this more concrete, I'm going to tell you the backstory\nof Amazon's own transformation to DevOps.",
    "start": "259400",
    "end": "265800"
  },
  {
    "text": "And like most companies, we did not\nstart out that way. In fact, if you go back to 2001,",
    "start": "265800",
    "end": "272800"
  },
  {
    "text": "the amazon.com retail website was\na large architectural monolith.",
    "start": "272800",
    "end": "278099"
  },
  {
    "text": "Now, don't get me wrong, it was architected\nin multiple tiers and those tiers had many components in them,",
    "start": "278100",
    "end": "283200"
  },
  {
    "text": "but they're all very tightly coupled together where they behaved d like one big monolith. Now, a lot of startups and even projects\ninside of big companies",
    "start": "283200",
    "end": "292300"
  },
  {
    "text": "start out this way. They take a monolith first approach\nbecause it's very quick to get moving quickly, but over time, as that project matures,",
    "start": "292300",
    "end": "299400"
  },
  {
    "text": "as you add more developers on it,\nas it grows and the codebase gets more large and the architecture gets more complex,",
    "start": "299400",
    "end": "306400"
  },
  {
    "text": "that monolith is going to add overhead\ninto your process and that software development lifecycle\nis going to begin to slow down.",
    "start": "306400",
    "end": "313300"
  },
  {
    "text": "So, to depict how this was affecting Amazon, I've re-renderd the software development lifecycle",
    "start": "313300",
    "end": "319800"
  },
  {
    "text": "for a monolithic application. So, what we had was a very large\nnumber of developers",
    "start": "319800",
    "end": "325200"
  },
  {
    "text": "working on this one big monolithic website, many more than what we have up on\nthis slide.",
    "start": "325200",
    "end": "331199"
  },
  {
    "text": "And even though each one of these developers is only working on a very small piece\nof that application,",
    "start": "331200",
    "end": "336300"
  },
  {
    "text": "they still need to bite off the overhead of coordinating their changes with\neveryone else in the project.",
    "start": "336300",
    "end": "341900"
  },
  {
    "text": "If they're adding a new feature or\nmaking a bug fix, they need to make sure that change\nis not going to break someone else on that project.",
    "start": "341900",
    "end": "348900"
  },
  {
    "text": "If they want to upgrade a shared library to take advantage of a new feature, they need to convince everyone else\non that project",
    "start": "348900",
    "end": "354400"
  },
  {
    "text": "to upgrade to the new shared library\nat the same time. And if they want to make a quick fix",
    "start": "354400",
    "end": "360400"
  },
  {
    "text": "to push out to their customers quickly, they can't just do it on their own schedule, they're going to need to coordinate\nthat with all the other developers",
    "start": "360400",
    "end": "366900"
  },
  {
    "text": "who have in-process changes at the same time. And this leads to the effect of something\nlike a merge Friday,",
    "start": "366900",
    "end": "372400"
  },
  {
    "text": "or maybe even a merge week, where\nall the developers take their in-process changes, merge\nthem together into one version,",
    "start": "372400",
    "end": "378500"
  },
  {
    "text": "resolve all their conflicts, and\nfinally create a master version that's ready to move out into production.",
    "start": "378500",
    "end": "384199"
  },
  {
    "text": "And even when you have that big,\nlarge new version, it still adds a lot of overhead on\nthis delivery pipeline.",
    "start": "384200",
    "end": "390400"
  },
  {
    "text": "That whole new codebase needs to\nbe rebuilt, all of the test cases need to be rerun to make sure that there's no regressions.",
    "start": "390400",
    "end": "397300"
  },
  {
    "text": "and then you need to take that entire\napplication and deploy it all to your full production fleet.",
    "start": "397300",
    "end": "402700"
  },
  {
    "text": "At Amazon in the early 2000s, we\nhad a single engineering group whose sole job it was to take these\nnew versions of the application",
    "start": "402700",
    "end": "410300"
  },
  {
    "text": "and manually push it across our production\nenvironment. So, this was adding a lot of overhead\nnot only to our delivery process,",
    "start": "410300",
    "end": "417700"
  },
  {
    "text": "it was frustrating our developers,\nand most importantly it was slowing down our software\ndevelopment lifecycle,",
    "start": "417700",
    "end": "424200"
  },
  {
    "text": "it was slowing down our ability to innovate. So, we made some changes and we made\na couple big ones.",
    "start": "424200",
    "end": "431300"
  },
  {
    "text": "The first was architectural. We went through that monolithic application and we teased it apart into a Service-Oriented\nArchitecture.",
    "start": "431300",
    "end": "440099"
  },
  {
    "text": "We went through the code and we pulled\nout functional units that served a single purpose, and\nwe wrapped those",
    "start": "440100",
    "end": "445699"
  },
  {
    "text": "with a web service interface. So, some of these single-purpose\nservices that we pulled out, some examples are one, whose sole job is was",
    "start": "445700",
    "end": "453300"
  },
  {
    "text": "to render the buy button correctly\non the product detail pages, we also had a single-purpose service\nwhose sole job it was",
    "start": "453300",
    "end": "460200"
  },
  {
    "text": "to calculate the tax correctly on\nthe checkout process. So, when we created these single-purpose services",
    "start": "460200",
    "end": "466900"
  },
  {
    "text": "and pulled them out individually, we also had a rule that they could\nonly talk to each other through their web service APIs.",
    "start": "466900",
    "end": "473200"
  },
  {
    "text": "There was no backend shared data\naccess allowed. What this enable us is to create\na very highly",
    "start": "473200",
    "end": "478500"
  },
  {
    "text": "decoupled architecture where these services could iterate independently from each other without any coordination between\nthose services",
    "start": "478500",
    "end": "486700"
  },
  {
    "text": "as long as they adhered to that standard\nweb service interface. To give you an idea of what this\narchitecture looked like,",
    "start": "486700",
    "end": "493700"
  },
  {
    "text": "I've included this graphic. And what this represents is the amazon.com\nretail website circa 2009, and all of these individual services",
    "start": "493700",
    "end": "502100"
  },
  {
    "text": "that made up that experience. So, back then when we made this architectural shift",
    "start": "502100",
    "end": "507900"
  },
  {
    "text": "we didn't have this term, but today we call this a microservices\narchitecture.",
    "start": "507900",
    "end": "514099"
  },
  {
    "text": "In addition to that architectural change we also made an organizational change. So, before, we had one central hierarchical\nproduct development team.",
    "start": "514100",
    "end": "522599"
  },
  {
    "text": "We ended up teasing that apart as well and we broke it down into small,\nwhat we call, two-pizza teams.",
    "start": "522600",
    "end": "529300"
  },
  {
    "text": "And the idea behind that name is\nthat we wanted the teams to be small enough so you could feed\nthem with just two pizzas.",
    "start": "529300",
    "end": "534800"
  },
  {
    "text": "Now, full disclaimer here, we're\nreally targeting around six to eight developers per team, so depending on how hungry your teammates are",
    "start": "534800",
    "end": "541399"
  },
  {
    "text": "your mileage may very on that name. So, each of these two-pizza teams\nwas give full ownership",
    "start": "541400",
    "end": "547600"
  },
  {
    "text": "of one or maybe a few of these microservices, and when I say full ownership I mean\neverything.",
    "start": "547600",
    "end": "553400"
  },
  {
    "text": "They owned talking with their customers, whether they be internal or external, they owned defining their feature roadmap,",
    "start": "553400",
    "end": "558800"
  },
  {
    "text": "designing their features, implementing them, writing the test for them, deploying\nthose services into production,",
    "start": "558800",
    "end": "564600"
  },
  {
    "text": "and also operating those services. So, if anything went wrong anywhere\nin that full lifecycle,",
    "start": "564600",
    "end": "571500"
  },
  {
    "text": "they were the ones accountable for fixing it. If they chose to skimp on their testing and were unknowingly releasing bad\nchanges into production,",
    "start": "571500",
    "end": "580000"
  },
  {
    "text": "they were breaking in the middle\nof the night, it was those same engineers that were paged and had to wake up to fix it.",
    "start": "580000",
    "end": "586000"
  },
  {
    "text": "So, what that did is that it properly\naligned incentives so the engineering team was fully motivated to make the entire end to end lifecycle\noperated efficiently.",
    "start": "586000",
    "end": "596100"
  },
  {
    "text": "So, again, we didn't have this term back then, but today we'd call this a DevOps\norganization because we took those responsibilities\nof development, and test,",
    "start": "596100",
    "end": "604000"
  },
  {
    "text": "and operations, and merged those\nall onto a single engineering team.",
    "start": "604000",
    "end": "610600"
  },
  {
    "text": "So, after we made these two changes, the architectural and organizational change, we dramatically improved the front\nend of that development lifecycle.",
    "start": "610600",
    "end": "618600"
  },
  {
    "text": "These small two-pizza teams were\nable to quickly make decisions, quickly crank out new features for\ntheir microservice,",
    "start": "618600",
    "end": "624100"
  },
  {
    "text": "but when they went to deploy that\nto their customers we had a problem.",
    "start": "624100",
    "end": "629899"
  },
  {
    "text": "That old model where we had that\ncentral engineering group that manually deployed the entire\napplication out",
    "start": "629900",
    "end": "635600"
  },
  {
    "text": "to the production fleet, just would\nnot fit this model where we had thousands of these microservices all wanting to deploy on their own schedule.",
    "start": "635600",
    "end": "643600"
  },
  {
    "text": "So, we had a tools gap. And to fix that, we started a new\ntools group that built a new breed of developer tools.",
    "start": "643600",
    "end": "651300"
  },
  {
    "text": "These tools had some unique characteristics. The first is that they had to be\nself-service. There's just no way one tools group",
    "start": "651300",
    "end": "657900"
  },
  {
    "text": "would be able to onboard thousands\nof these different two-pizza teams if it involved any handholding.",
    "start": "657900",
    "end": "664600"
  },
  {
    "text": "So, what they did is they created\na web portal where these teams could come learn\nabout these new developer tool services, they\ncould figure out how to get started,",
    "start": "664600",
    "end": "672600"
  },
  {
    "text": "and they could also provision whatever\nresources they needed to start using it. So, you can say this is very AWS-like\neven before AWS had started.",
    "start": "672600",
    "end": "682100"
  },
  {
    "text": "Second, these tools had to be technology-agnostic. We had given these two-pizza teams\nfull autonomy",
    "start": "682100",
    "end": "687500"
  },
  {
    "text": "to make whatever decision they wanted and they took full advantage of that. They chose different operating systems,\ndifferent programing languages,",
    "start": "687500",
    "end": "694900"
  },
  {
    "text": "architectures app frameworks to implement\ntheir services. So, the tools were going to have\nto be adaptable enough so",
    "start": "694900",
    "end": "700199"
  },
  {
    "text": "that they could work with all of\nthese different technologies. Third, we wanted these tools to encourage\nbest practices.",
    "start": "700200",
    "end": "707400"
  },
  {
    "text": "Even though we split that central\nproduct development team up into all of these autonomous two-pizza teams,",
    "start": "707400",
    "end": "713400"
  },
  {
    "text": "we still wanted them to share their learnings. And we found the most effective way\nof doing that is",
    "start": "713400",
    "end": "719400"
  },
  {
    "text": "that if a team learned a best practice, we would take that an bake it into\nthe toolset and that made it very easy for other teams",
    "start": "719400",
    "end": "726400"
  },
  {
    "text": "to both discover this new best practice as well as to adopt it themselves.",
    "start": "726400",
    "end": "731900"
  },
  {
    "text": "And finally, you can say we drank\nthe microservices Kool-Aid, and just as we were teasing apart\nthe website architecture,",
    "start": "731900",
    "end": "739400"
  },
  {
    "text": "we didn’t want to deliver an end\nto end tool chain that was very tightly coupled together, we wanted to deliver it as these\nfunctional building block units",
    "start": "739400",
    "end": "747100"
  },
  {
    "text": "that the teams could pick the pieces\nthat worked best for them and then tie them together in the\nway they wanted.",
    "start": "747100",
    "end": "756100"
  },
  {
    "text": "So, I want to talk about a couple of these building block tool services that\nwe use internally at Amazon.",
    "start": "756100",
    "end": "761500"
  },
  {
    "text": "The first is Apollo, which is our\ndeployment engine. Its job is essentially to get bits\nonto a box.",
    "start": "761500",
    "end": "767400"
  },
  {
    "text": "We've been using Apollo to deploy\nthe retail website for over a dozen years now, and we also use it to deploy our\nAmazon Web Services.",
    "start": "767400",
    "end": "775000"
  },
  {
    "text": "And over that time we've learned a lot about how to do deployments well. And we've taken those learnings and\nwe've baked them back into the tool.",
    "start": "775000",
    "end": "783700"
  },
  {
    "text": "One of those features is the ability\nto deploy without any downtime. So, as you can imagine, we're not\nallowed to take down",
    "start": "783700",
    "end": "790200"
  },
  {
    "text": "the retail website any time we want\nto push a code change, so we came up a feature called rolling updates.",
    "start": "790200",
    "end": "795600"
  },
  {
    "text": "And what Apollo will do is when it's updating a fleet of application servers, it's\nonly going to",
    "start": "795600",
    "end": "801500"
  },
  {
    "text": "update a small fraction of those at a time and then incrementally work its way\nacross the fleet until it brings the whole fleet of servers",
    "start": "801500",
    "end": "808100"
  },
  {
    "text": "up to the new version of the application. Another feature that we added was\nhealth tracking,",
    "start": "808100",
    "end": "814200"
  },
  {
    "text": "and that's because it happens rarely, but occasionally a bad code change\ncan make its way through testing",
    "start": "814200",
    "end": "820600"
  },
  {
    "text": "and roll out into production. And what we want to make sure is\nthat that bad code change is not going to take down the entire fleet.",
    "start": "820600",
    "end": "827900"
  },
  {
    "text": "So, as Apollo is doing this rolling update, if it detects errors or failures\non the services that it deployed to,",
    "start": "827900",
    "end": "834600"
  },
  {
    "text": "it will automatically cut off that deployment and stop it from progressing further. And since Apollo versions these deployments,",
    "start": "834600",
    "end": "841700"
  },
  {
    "text": "it makes it real easy for a developer\nto roll back to a past known good version of that\napplication.",
    "start": "841700",
    "end": "849000"
  },
  {
    "text": "Next service I want to talk about\nis Pipelines, which is our internal continuous\ndelivery engine. So, even after we built Apollo and\nhad automated deployments",
    "start": "849000",
    "end": "858200"
  },
  {
    "text": "we still noticed that it took a long\ntime for a code change to go from a developer check in",
    "start": "858200",
    "end": "864000"
  },
  {
    "text": "to be running in production where\ncustomers could use it. So, being a data driven company we\ndid a study on that",
    "start": "864000",
    "end": "870800"
  },
  {
    "text": "and we measured the amount of time\nit took a code change to make its way through that deployment lifecycle across a number of teams.",
    "start": "870800",
    "end": "878700"
  },
  {
    "text": "When we added up that data and looked\nat the results and saw the average time it took,\nwe were frankly embarrassed.",
    "start": "878700",
    "end": "884900"
  },
  {
    "text": "It was on the order of weeks. So, we dug into that data and we\nlooked exactly for detailed breakdowns",
    "start": "884900",
    "end": "890800"
  },
  {
    "text": "how long it was taking at the different steps. And what we saw, it wasn't so much\nthe duration of any one of those actions, it wasn't\nthe duration of a build,",
    "start": "890800",
    "end": "898400"
  },
  {
    "text": "or the duration of a test run, or\nthe duration of a deployment, it was all of this dead time in between.",
    "start": "898400",
    "end": "904700"
  },
  {
    "text": "We had a bunch of inefficient manual handoffs where after one task was run, a person\nwould take that",
    "start": "904700",
    "end": "912399"
  },
  {
    "text": "and then notify another person that\nthe next job is ready to run. And that usually happened in the\nform of an e-mail,",
    "start": "912400",
    "end": "917800"
  },
  {
    "text": "it could be cutting a ticket, but\nthese requests were sitting in these queues and\nsitting idle for a very long time.",
    "start": "917800",
    "end": "924700"
  },
  {
    "text": "And for a company like Amazon that\nprides itself on efficiency, for a company that uses robots inside\nof our fulfillment centers",
    "start": "924700",
    "end": "931899"
  },
  {
    "text": "to move around physical goods, a\ncompany that wants to deploy packages to your doorstep\nusing drones,",
    "start": "931900",
    "end": "938500"
  },
  {
    "text": "you could imagine how crazy it was\nthat we're using humans to pass around these virtual bits\nin our software delivery process.",
    "start": "938500",
    "end": "945399"
  },
  {
    "text": "So, we had to fix that, and we did\nthat using Pipelines. Pipelines allowed these teams to\nmodel out their complete",
    "start": "945400",
    "end": "951500"
  },
  {
    "text": "and end release process. They could specify how they wanted\ntheir source code changes to be automatically built and unit tested,",
    "start": "951500",
    "end": "958399"
  },
  {
    "text": "how they wanted those to then be\ndeployed to their test environments, what tests they wanted to run on\nthose in those environments,",
    "start": "958400",
    "end": "965000"
  },
  {
    "text": "and then how they wanted those changes to move out into a production deployment. After they modeled out that release process,",
    "start": "965000",
    "end": "971400"
  },
  {
    "text": "Pipelines would automatically handle\nall those code changes and marshal all those code changes\nthrough the release process for them.",
    "start": "971400",
    "end": "978200"
  },
  {
    "text": "So, it automatically trigger off\nthe builds, automatically checked the results,\nand automatically move it off to the next step for the development teams.",
    "start": "978200",
    "end": "989700"
  },
  {
    "text": "So, when we implemented Pipelines\nand it began to be adopted internally, we saw dramatic improvement in the\nspeed of these software releases.",
    "start": "989700",
    "end": "997399"
  },
  {
    "text": "But we also saw another improvement\nthat we didn't expect. We saw that the teams that had fully\nautomated Pipelines",
    "start": "997400",
    "end": "1003400"
  },
  {
    "text": "had actually more reliable releases than those that had manual tests or manual steps involved.",
    "start": "1003400",
    "end": "1010500"
  },
  {
    "text": "And that was a little unintuitive at first. We thought that if you put a human\nwho can make intelligent decisions",
    "start": "1010500",
    "end": "1016800"
  },
  {
    "text": "and an extra scrutiny on your release, that might help make a release more reliable, but what we saw was the opposite.",
    "start": "1016800",
    "end": "1023800"
  },
  {
    "text": "What we saw is that the teams that\nfully dedicated themselves to making sure every validation step\nthat they wanted",
    "start": "1023800",
    "end": "1029800"
  },
  {
    "text": "was baked into an automated test, we saw that those teams had more\nreliable releases that required less roll backs and\nhad less deployment errors.",
    "start": "1029800",
    "end": "1039000"
  },
  {
    "text": "So, with these two advantages of\nhaving faster and more reliable releases, it's\nbeen incredibly successful inside of Amazon and is used pervasively\nacross the different teams.",
    "start": "1039000",
    "end": "1049800"
  },
  {
    "text": "Now, after adding these two tools\nfor automated deployments and continuous deliver, we fully\nunblocked these two-pizza teams",
    "start": "1049800",
    "end": "1055600"
  },
  {
    "text": "from operating independently. So, now these teams can decide what\nfeatures they want to work on,",
    "start": "1055600",
    "end": "1061500"
  },
  {
    "text": "implement those features on their\nown schedule and now they're completely unblocked\nto push those changes to their customers through their\nown delivery Pipeline.",
    "start": "1061500",
    "end": "1069600"
  },
  {
    "text": "When customers ask me how it is that\nAmazon is able to move so fast, this is the answer I give them,",
    "start": "1069600",
    "end": "1076799"
  },
  {
    "text": "even though from the outside it might\nlook like Amazon is a large organization that might\nhave some internal overhead,",
    "start": "1076800",
    "end": "1082700"
  },
  {
    "text": "on the inside we're really structured like a bunch of small startup teams that\nare all operating and organized",
    "start": "1082700",
    "end": "1089100"
  },
  {
    "text": "very efficiently and moving as fast\nas they can.",
    "start": "1089100",
    "end": "1094299"
  },
  {
    "text": "So, there are a lot of different\nways that we can measure success here. One of the ways is - that we've talked\nabout publicly -",
    "start": "1094300",
    "end": "1100700"
  },
  {
    "text": "is how many deployments we do each year. So, when you have thousands of these\ntwo-pizza teams",
    "start": "1100700",
    "end": "1106300"
  },
  {
    "text": "that are working on these small microservices, practicing continuous deliver across\nmultiple Dev, test,",
    "start": "1106300",
    "end": "1112600"
  },
  {
    "text": "and production environments, that\nmultiples out to an insane number of deployments.",
    "start": "1112600",
    "end": "1117800"
  },
  {
    "text": "So, last year in 2014, just during\na 12 month period, we did over 50 million deployments.",
    "start": "1117800",
    "end": "1123500"
  },
  {
    "text": "That averages out to be a deployment\nand a half every second. So, that's an incredible number,\nand it just shows you how quickly",
    "start": "1123500",
    "end": "1129799"
  },
  {
    "text": "that Amazon is turning the crank\non that software development lifecycle.",
    "start": "1129800",
    "end": "1135300"
  },
  {
    "text": "Now, when we tell customers this story, typically the next question they\nas is how can they do it themselves.",
    "start": "1135300",
    "end": "1142000"
  },
  {
    "text": "And I'm not going to over simplify\nthings here because it is a very complex answer.",
    "start": "1142000",
    "end": "1147500"
  },
  {
    "text": "A company needs to look at cultural\nchanges, organizational changes, process changes, and there's not\none right answer for every company.",
    "start": "1147500",
    "end": "1155600"
  },
  {
    "text": "Everyone's going to choose and have\ntheir own twist on their solution that will adapt their particular\nneeds and environment.",
    "start": "1155600",
    "end": "1162700"
  },
  {
    "text": "But there is one common building block that every DevOps transformation\nneeds, and that is",
    "start": "1162700",
    "end": "1168300"
  },
  {
    "text": "to have an efficient and reliable\ncontinuous delivery pipeline. And that's what I want to talk about\nfor the rest of this talk.",
    "start": "1168300",
    "end": "1177200"
  },
  {
    "text": "So, what does it take to set up a\ncontinuous delivery pipeline? Well, there's a few requirements for it. The first is the most important,\nand that is",
    "start": "1177200",
    "end": "1184500"
  },
  {
    "text": "that you absolutely need to have\nfully automated deployments. That's going to be because you're\ngoing to deploy a lot.",
    "start": "1184500",
    "end": "1191799"
  },
  {
    "text": "Every release that you have to customers, you're going to have to deploy multiple times to your testing environment when\nyou're debugging it",
    "start": "1191800",
    "end": "1198700"
  },
  {
    "text": "and iterating, then you're going\nto need to deploy it to your staging environment to run tests",
    "start": "1198700",
    "end": "1204100"
  },
  {
    "text": "to make sure there's no regressions, then you're going to deploy it to production where your customers can finally use it. If there are any manual steps in\nthis process,",
    "start": "1204100",
    "end": "1211500"
  },
  {
    "text": "it's not only going to slow you down,\nbut it's going to incent you to deploy and release less often.",
    "start": "1211500",
    "end": "1217900"
  },
  {
    "text": "So, after you set up automated deployments, the next thing you're going to do\nis try to tie together and automate your software release process.",
    "start": "1217900",
    "end": "1225500"
  },
  {
    "text": "You want your source code changes\nto automatically be built, automatically be deployed to your\ntest environments,",
    "start": "1225500",
    "end": "1232299"
  },
  {
    "text": "automatically trigger off all of\nyour test runs, and finally move into a production\nemployment.",
    "start": "1232300",
    "end": "1238400"
  },
  {
    "text": "Now, it's going to be okay if you\nhave some manual steps here. Almost all customers, when they're\nstarting off, are going to have manual steps, but over time,",
    "start": "1238400",
    "end": "1245600"
  },
  {
    "text": "as you mature here, you're going\nto want to take any manual actions, and manual validations that you have,\nand try to convert those",
    "start": "1245600",
    "end": "1252600"
  },
  {
    "text": "into automated steps as much as you can. So, we have a few tools and services\nthat can help you out here.",
    "start": "1252600",
    "end": "1260100"
  },
  {
    "text": "We have CodeDeploy, which you can\nuse for automated deployments, CodePipeline that you can use for\nend to end release automation,",
    "start": "1260100",
    "end": "1267200"
  },
  {
    "text": "and then if you want to move your\nsource code to the cloud so that you have your entire pipeline,\neverything from source,",
    "start": "1267200",
    "end": "1274500"
  },
  {
    "text": "to build, to your test stages, to\nproduction, if you want your entire pipeline\nhosted in AWS, you can use CodeCommit to store your\nsource code also.",
    "start": "1274500",
    "end": "1283600"
  },
  {
    "text": "So, what I'm going to do now is give\nyou a very quick introduction to these three services,",
    "start": "1283600",
    "end": "1289000"
  },
  {
    "text": "and I want to do that very quickly\nbecause I want to save time for Clare to come up here and give\nyou nice, in-depth tour",
    "start": "1289000",
    "end": "1294299"
  },
  {
    "text": "of what it's like to use these through\na demonstration. So, the first service I'm going to\ntalk about is CodeDeploy.",
    "start": "1294300",
    "end": "1302500"
  },
  {
    "text": "And CodeDeploy works just like Apollo.",
    "start": "1302500",
    "end": "1307600"
  },
  {
    "text": "It's going - you're going to specify\nwhat version of your application you want to deploy\nto what target group of servers,",
    "start": "1307600",
    "end": "1314400"
  },
  {
    "text": "and it's going to handle that roll\nout for you. It has the same features of Apollo\nwith rolling updates",
    "start": "1314400",
    "end": "1319900"
  },
  {
    "text": "so that you can deploy without downtime, it's going to allow you to do health tracking to cut of bad deployments before\nit takes down your entire application.",
    "start": "1319900",
    "end": "1330799"
  },
  {
    "text": "And when we launched CodeDeploy we only supported deploying to Amazon\nEC2 instances,",
    "start": "1330800",
    "end": "1337700"
  },
  {
    "text": "but earlier this year we released\nsupport from on-premises deployments. This allows you to deploy your application now",
    "start": "1337700",
    "end": "1344900"
  },
  {
    "text": "to servers in your own private data center, and it also allows you to deploy\nto VMs in other clouds.",
    "start": "1344900",
    "end": "1350500"
  },
  {
    "text": "This means that you can now use CodeDeploy\nas your central tool to manage all your deployments to\nall your different applications",
    "start": "1350500",
    "end": "1356900"
  },
  {
    "text": "in all of your different environments. The next service I want to talk about\nis CodePipeline,",
    "start": "1356900",
    "end": "1362800"
  },
  {
    "text": "which it was inspired by our internal\nPipeline service. It's going to work in much the same way.",
    "start": "1362800",
    "end": "1368899"
  },
  {
    "text": "You're going to specify how you want\nyour release process to work, how you want to tie your source code\nchanges into your build stage,",
    "start": "1368900",
    "end": "1374900"
  },
  {
    "text": "what test environments you want to deploy to and what tests you want to run in\nthose environments,",
    "start": "1374900",
    "end": "1380100"
  },
  {
    "text": "and ultimately how you want it to\ndeploy into production. This service was designed to be very\nextensible and pluggable",
    "start": "1380100",
    "end": "1385900"
  },
  {
    "text": "so you not only have control of that workflow, you have control over what systems\nyou connect to each step of this process.",
    "start": "1385900",
    "end": "1392800"
  },
  {
    "text": "If you want to use an AWS service\nlike CodeDeploy or Elastic Beanstalk for your deployments\nyou can do that.",
    "start": "1392800",
    "end": "1398300"
  },
  {
    "text": "If you want to use an integrated\npartner tool like GitHub for source control you\ncan do that.",
    "start": "1398300",
    "end": "1403500"
  },
  {
    "text": "And if you have your own servers,\nmaybe on-premise servers that you want to integrate into this process - you might be using Jenkins for build or test -",
    "start": "1403500",
    "end": "1410100"
  },
  {
    "text": "you can hook those in as well. So, after you define your own custom\nrelease process then CodePipeline is going to manage\nall of your code changes for you,",
    "start": "1410100",
    "end": "1418800"
  },
  {
    "text": "so it automatically will trigger each step of your process along the way and\nmake sure that every change goes through the validations that\nyou define.",
    "start": "1418800",
    "end": "1428299"
  },
  {
    "text": "The last service that I want to introduce\nis CodeCommit. CodeCommit is git, git source control\nre-implemented on top of S3 storage.",
    "start": "1428300",
    "end": "1438100"
  },
  {
    "text": "On the front end it works like any other git source control system out there. Use the same git tools, issue the\nsame git commands,",
    "start": "1438100",
    "end": "1445299"
  },
  {
    "text": "so there's nothing new there. But on the backend is where it's\nreally unique. We've implemented git on top of S3\nand DynamoDB.",
    "start": "1445300",
    "end": "1453200"
  },
  {
    "text": "So, this brings us the advantages\nof that cloud scale storage plus a few interesting bnus features.",
    "start": "1453200",
    "end": "1459500"
  },
  {
    "text": "One of those is that CodeCommit will\nautomatically encrypt your repositories using customer\nspecific keys.",
    "start": "1459500",
    "end": "1466700"
  },
  {
    "text": "That means that every customer will have their repository encrypted differently\nwhen it's stored into S3.",
    "start": "1466700",
    "end": "1474200"
  },
  {
    "text": "So, I think I lived up to my promise, I gave you a really quick introduction\nto those three. And now, I'm going to turn things\nover to Clare for the rest of the talk,",
    "start": "1474200",
    "end": "1480600"
  },
  {
    "text": "and she's going to give us a hands\non tour of what it's like to actually use these services to\nset up your own DevOps processes.",
    "start": "1480600",
    "end": "1486600"
  },
  {
    "text": "Thank you. CLARE LIGUIORI: Thanks, Rob.",
    "start": "1486600",
    "end": "1495500"
  },
  {
    "text": "So, I'm Clare Liguiori, I'm an engineer\nin the Code Services, and I want to give you a live demo\nusing a simple app that I've created",
    "start": "1495500",
    "end": "1502000"
  },
  {
    "text": "that gives a little bit of a flavor\nof what Rob was talking about. So, it's got two microservices as\ntwo independent teams -",
    "start": "1502000",
    "end": "1509299"
  },
  {
    "text": "Rob and I are going to be the independent\nteams for this scenario. And it has that microservices architecture.",
    "start": "1509300",
    "end": "1516600"
  },
  {
    "text": "So, for a simple calculator app that\ndoes add and subtract I have a web service that's written in Go",
    "start": "1516600",
    "end": "1523100"
  },
  {
    "text": "that is my calculator API. So, that's what I'm going to be using to add and subtract given inputs.",
    "start": "1523100",
    "end": "1529700"
  },
  {
    "text": "The front end service is going to\nbe a website, very simple HTML website, that's\ngoing to call into that calculator API on the web service.",
    "start": "1529700",
    "end": "1537600"
  },
  {
    "text": "Rob worked on the web service in\nGo and then I worked on the website. I'm also going to give you a little\nbit of a flavor",
    "start": "1537600",
    "end": "1545500"
  },
  {
    "text": "of some of the options that you have for managing your release process on\ntop of CodeDeploy and CodePipeline",
    "start": "1545500",
    "end": "1552100"
  },
  {
    "text": "and some of the features that you\ncan mix and match. So, the scenario that we're going\nto run through is",
    "start": "1552100",
    "end": "1558300"
  },
  {
    "text": "that recently Rob added multiple\nand divide to that web service, and so we're going to go into the website",
    "start": "1558300",
    "end": "1564600"
  },
  {
    "text": "and actually add that as a feature\nfor our customers on the website. But it turns out that Rob has a bug\nin his code,",
    "start": "1564600",
    "end": "1571900"
  },
  {
    "text": "bad Rob. He has a divide by arrow\n- divide by zero error.",
    "start": "1571900",
    "end": "1578400"
  },
  {
    "text": "So, we'll look at what you can do\nto stop those types of bugs from getting out to production.",
    "start": "1578400",
    "end": "1585900"
  },
  {
    "text": "We'll first start with that change\nthe website that I talked about, adding multiply and divide to the website.",
    "start": "1585900",
    "end": "1591200"
  },
  {
    "text": "I'm using GitHub for my source, and\nI'm going to use CodeDeploy to deploy that change into test environment.",
    "start": "1591200",
    "end": "1598400"
  },
  {
    "text": "We'll do a little bit of smoke testing on it and then promote it to production\nwith CodeDeploy as well.",
    "start": "1598400",
    "end": "1605200"
  },
  {
    "text": "For the web service, it's a little\nbit more complicated because it's written in Go, so I\nneed to compile that code in order to get build artifacts that\nI can actually deploy.",
    "start": "1605200",
    "end": "1613899"
  },
  {
    "text": "We're going to use CodePipeline to\nhook that entire process up from the source in GitHub, and to\nbuild to compile that Go code,",
    "start": "1613900",
    "end": "1622100"
  },
  {
    "text": "add some automated tests so we can\ncatch Rob's bugs, and then deploy that with CodeDeploy as well.",
    "start": "1622100",
    "end": "1629200"
  },
  {
    "text": "And then finally, I'm going to show you how you can move those repositories\ninto CodeCommit and start managing that source code\nin the cloud.",
    "start": "1629200",
    "end": "1637300"
  },
  {
    "text": "So, let's first go and make this\nchange for the website, add multiply and divide.",
    "start": "1637300",
    "end": "1643100"
  },
  {
    "text": "This is my very, very simple calculator\napplication. Again, it only has addition and subtraction right now,",
    "start": "1643100",
    "end": "1651700"
  },
  {
    "text": "and then it will call back into that\nweb service to that calculator API to get the\nresult and display that.",
    "start": "1651700",
    "end": "1658400"
  },
  {
    "text": "This is my website running in my\ntest environment, this is my website running in my\nproduction environment,",
    "start": "1658400",
    "end": "1664700"
  },
  {
    "text": "today they're running the same version\nof the application. The production environment is a little\nbit different because I want it to be available\nand reliable,",
    "start": "1664700",
    "end": "1673400"
  },
  {
    "text": "I actually have three EC2 instances running behind Elastic Load Balancer.",
    "start": "1673400",
    "end": "1679500"
  },
  {
    "text": "So, I've created this heads up view\nto show you exactly what version of the application is running on each of the EC2 instances.",
    "start": "1679500",
    "end": "1687100"
  },
  {
    "text": "So, today we have this addition and\nsubtraction running on all three instances.",
    "start": "1687100",
    "end": "1694000"
  },
  {
    "text": "The first step for using CodeDeploy\nfor your release process",
    "start": "1694000",
    "end": "1699600"
  },
  {
    "text": "is going to be packaging up your\napplication for CodeDeploy in order to deploy it onto your instances.",
    "start": "1699600",
    "end": "1706200"
  },
  {
    "text": "So, like I said, I have my calculator\nwebsite source stored in GitHub and I'm using this really package\nit up for CodeDeploy.",
    "start": "1706200",
    "end": "1713700"
  },
  {
    "text": "I have all of my application artifacts, today it's just a simple HTML page, but if it was more complex, had separate\nJava Script files",
    "start": "1713700",
    "end": "1721600"
  },
  {
    "text": "or image assets, those would go into\nthis repository as well.",
    "start": "1721600",
    "end": "1728200"
  },
  {
    "text": "I have a scripts folder, that's going to hold all of my installation and configuration\ntools and scripts",
    "start": "1728200",
    "end": "1733700"
  },
  {
    "text": "that I need to deploy this onto a server. And then the most important part\nfor CodeDeploy",
    "start": "1733700",
    "end": "1739800"
  },
  {
    "text": "is going to be the application specification file. So, that's going to define how CodeDeploy",
    "start": "1739800",
    "end": "1745200"
  },
  {
    "text": "needs to install this on a single machine. So, we call that AppSpec for short.",
    "start": "1745200",
    "end": "1752800"
  },
  {
    "text": "Let me show you a little bit about\nthe AppSpec file and break this down. So, the first section is the files section.",
    "start": "1752800",
    "end": "1759300"
  },
  {
    "text": "That's going to tell CodeDeploy what\nfiles in this bundle of application does it need to copy onto your instance\nand where does it need to go.",
    "start": "1759300",
    "end": "1768399"
  },
  {
    "text": "So, I only have my single index at HTML file and it's going to go into the root\nweb server content directory,",
    "start": "1768400",
    "end": "1776300"
  },
  {
    "text": "but you could add many more for more\ncomplex applications. And then this hook section defines\nwhat does CodeDeploy need to do",
    "start": "1776300",
    "end": "1783800"
  },
  {
    "text": "in each stage of the development lifecycle. So, we're going to stop the application,",
    "start": "1783800",
    "end": "1789300"
  },
  {
    "text": "CodeDeploy is going to bring down\nthe web server, take it out of the load balancer. Before instillation we want to make sure",
    "start": "1789300",
    "end": "1796200"
  },
  {
    "text": "that we have all of the dependencies, in this case just a simple web server package.",
    "start": "1796200",
    "end": "1802200"
  },
  {
    "text": "CodeDeploy is going to start the\nweb server back up after it's copied the files onto\nthat machine,",
    "start": "1802200",
    "end": "1807300"
  },
  {
    "text": "and then finally it's going to validate that everything's working correctly,\nthat we can actually get a good response from the web server.",
    "start": "1807300",
    "end": "1815700"
  },
  {
    "text": "Again, my example is very, very,\nvery simple, but you can grow this to your more\ncomplex applications,",
    "start": "1815700",
    "end": "1823000"
  },
  {
    "text": "more complex scripts and steps. Let me show you a couple of my simple scripts.",
    "start": "1823000",
    "end": "1835600"
  },
  {
    "text": "We're looking now at my dependency scripts. I'm using Yum here just to make sure",
    "start": "1835600",
    "end": "1841100"
  },
  {
    "text": "that a web server package is installed, but you can grow this to any configuration\nmanagement tool",
    "start": "1841100",
    "end": "1847400"
  },
  {
    "text": "that you're using today. You can use Chef, or Puppet, or Ansible, and hook that right into this script.",
    "start": "1847400",
    "end": "1859000"
  },
  {
    "text": "Let's also take a look at my test script. I want to make sure that that web\nserver was actually started property before I add traffic\nback to it,",
    "start": "1859000",
    "end": "1867100"
  },
  {
    "text": "and I want to make sure that it's\nactually serving pages. This is a really simple example, of course,",
    "start": "1867100",
    "end": "1872200"
  },
  {
    "text": "I'm just making sure that we're getting\na successful response code. You could extend this to make sure",
    "start": "1872200",
    "end": "1877500"
  },
  {
    "text": "that you're getting the right content back, that you have actually copied the\nfile that you expect to copy onto that machine.",
    "start": "1877500",
    "end": "1886400"
  },
  {
    "text": "The scripts model work really well\ninside of Amazon because Rob mentioned that it's very\nindependent teams there.",
    "start": "1886400",
    "end": "1894300"
  },
  {
    "text": "As Andy said this morning, they're\ndetermining their own destiny. And so we want to make sure that they can",
    "start": "1894300",
    "end": "1900200"
  },
  {
    "text": "choose the technologies that work\nfor their application. And so in this scripts model it's\nvery flexible and powerful,",
    "start": "1900200",
    "end": "1907800"
  },
  {
    "text": "you can hook into any software that\nyou're using, any programming language, any scripting language,",
    "start": "1907800",
    "end": "1913800"
  },
  {
    "text": "really anything that you need to\nget your application onto the instance and up and running.",
    "start": "1913800",
    "end": "1922299"
  },
  {
    "text": "The next step for deploying with CodeDeploy is going to be choosing the instances\nthat you want to deploy to.",
    "start": "1922300",
    "end": "1929800"
  },
  {
    "text": "So, over here on the left hand side, you're going to see the deployment groups. A deployment group is simply the\ngroup of servers",
    "start": "1929800",
    "end": "1936500"
  },
  {
    "text": "that you want to deploy to. So, that can be defined by an EC2\ninstance tag,",
    "start": "1936500",
    "end": "1942700"
  },
  {
    "text": "a tag for your on-premise servers, or simply the name of an auto scaling group.",
    "start": "1942700",
    "end": "1948800"
  },
  {
    "text": "So, in this example, I'm using two\nauto-scaling groups. I have my test environment with just\na fixed size of one,",
    "start": "1948800",
    "end": "1954500"
  },
  {
    "text": "and then my production environment\nwith a fixed size of three. And then on the right hand side you'll\nsee this list of revisions.",
    "start": "1954500",
    "end": "1962000"
  },
  {
    "text": "What that is, is in order to register\na new revision of my application, you're going to\nzip up all of the files",
    "start": "1962000",
    "end": "1970300"
  },
  {
    "text": "that we just looked at in the repository\nand register that as a newer vision with CodeDeploy.",
    "start": "1970300",
    "end": "1976400"
  },
  {
    "text": "So, you can see I've been playing through a couple different revisions here.",
    "start": "1976400",
    "end": "1981900"
  },
  {
    "text": "So, let's go and try to kick off\na deployment. A deployment can be kicked off through\nthe AWS CodeDeploy console,",
    "start": "1981900",
    "end": "1992600"
  },
  {
    "text": "it can be through the CodeDeploy\nAPI with the AWS CLI,",
    "start": "1992600",
    "end": "1997900"
  },
  {
    "text": "or the SDK, or you can do it through\none of our partner integrations. GitHub just happens to be one of\nour great partner integrations,",
    "start": "1997900",
    "end": "2005100"
  },
  {
    "text": "so we're going to use that. And let me show you what that looks like.",
    "start": "2005100",
    "end": "2015600"
  },
  {
    "text": "So, I'm now looking at the service hooks that I have configured on my repository\nfor my website, and the first one at the top is going\nto be GitHub auto deployment.",
    "start": "2015600",
    "end": "2026600"
  },
  {
    "text": "What that's going to do is configure\nmy repository to trigger a deployment every time\nI make a change to that repository.",
    "start": "2026600",
    "end": "2033000"
  },
  {
    "text": "So, every time I push a new commit\nto the repository it's going to kick off a deployment.",
    "start": "2033000",
    "end": "2039000"
  },
  {
    "text": "And then the CodeDeploy service hook\nis going to define what application do I want to deploy to.",
    "start": "2039000",
    "end": "2045900"
  },
  {
    "text": "So, that's going to be my website\napplication that I've configured within CodeDeploy, and then what group of servers do\nI want to deploy to,",
    "start": "2045900",
    "end": "2053700"
  },
  {
    "text": "what deployment group. So, I probably don't want to automatically\ndeploy into production,",
    "start": "2053700",
    "end": "2058899"
  },
  {
    "text": "that sounds wrong, so I've configured\nit to deploy automatically into test when someone pushes a new commit.",
    "start": "2058900",
    "end": "2067500"
  },
  {
    "text": "So, let's go back to the website, and at this point we're actually\ngoing to enable",
    "start": "2067500",
    "end": "2074899"
  },
  {
    "text": "multiply and divide for our customers\nbecause it's already an - it's a new option in the calculator API.",
    "start": "2074900",
    "end": "2083899"
  },
  {
    "text": "So, we'll do that, and let's announce\nto our customers",
    "start": "2083900",
    "end": "2091099"
  },
  {
    "text": "that we have a new feature for them.",
    "start": "2091100",
    "end": "2097300"
  },
  {
    "text": "And then I'm going to change the\nfont color and the background color just so it's really clear to us which\nversion we're running.",
    "start": "2097300",
    "end": "2107200"
  },
  {
    "text": "And commit those changes. So, now what GitHub is doing,",
    "start": "2107200",
    "end": "2113200"
  },
  {
    "text": "it's taking the updated files in\nmy repository, registering that as a new revision\nin CodeDeploy,",
    "start": "2113200",
    "end": "2120599"
  },
  {
    "text": "and kicking off a deployment. So, we can go back to the CodeDeploy console",
    "start": "2120600",
    "end": "2129100"
  },
  {
    "text": "and it's already registered this\nas a new revision.",
    "start": "2129100",
    "end": "2135600"
  },
  {
    "text": "And we can go into deployments, this is the central dashboard for\nall deployments",
    "start": "2135600",
    "end": "2141200"
  },
  {
    "text": "across all of your applications. You can see all of your deployment activity. I'm going to drill into this deployment\nin progress.",
    "start": "2141200",
    "end": "2147600"
  },
  {
    "text": "This is the deployment that GitHub kicked off for my multiply and divide change,",
    "start": "2147600",
    "end": "2153100"
  },
  {
    "text": "and you can see the instance right here that it's actually deploying to in\nthat auto-scaling group.",
    "start": "2153100",
    "end": "2166200"
  },
  {
    "text": "So, let's give it just a second to\nget started.",
    "start": "2166200",
    "end": "2171800"
  },
  {
    "text": "What I want to show you is I want\nto drill into the individual deployment that goes\nonto that specific instance.",
    "start": "2171800",
    "end": "2178900"
  },
  {
    "text": "You might recognize some of these\nevent names from the AppSpec file that we looked at.",
    "start": "2178900",
    "end": "2184900"
  },
  {
    "text": "So, applications stop, it has already\nbrought down the web server, and it has installed my dependencies,\nmy web server,",
    "start": "2184900",
    "end": "2191800"
  },
  {
    "text": "it's installed those files, copied\nmy index out of HTML to the web server content directory.",
    "start": "2191800",
    "end": "2199100"
  },
  {
    "text": "And so, right now what it's doing\nis starting up the web server and then it will actually call my\ntest script",
    "start": "2199100",
    "end": "2205600"
  },
  {
    "text": "and make sure that it's getting a\n200 successful response.",
    "start": "2205600",
    "end": "2213600"
  },
  {
    "text": "So, everything's succeeded at this point. Let's refresh. Alright.",
    "start": "2213600",
    "end": "2219100"
  },
  {
    "text": "So, we're looking at the test page, and I can actually do some multiplication.",
    "start": "2219100",
    "end": "2224800"
  },
  {
    "text": "Very exciting. I can do divide.",
    "start": "2224800",
    "end": "2230000"
  },
  {
    "text": "So, at this point we've done a little\nbit of smoke testing, and we feel pretty confident in getting\nthis out to production.",
    "start": "2230000",
    "end": "2235600"
  },
  {
    "text": "We want to get it in front of our customers. In order to do that, I'm going to\ngo back to the CodeDeploy console,",
    "start": "2235600",
    "end": "2243100"
  },
  {
    "text": "go to my application, HTML website.",
    "start": "2243100",
    "end": "2250500"
  },
  {
    "text": "So, CodeDeploy makes it really easy to go into the console and manually\ndeploy a revision that you've already deployed somewhere\nelse, in this case test,",
    "start": "2250500",
    "end": "2257599"
  },
  {
    "text": "and then to deploy that to a different\nproduction group, or deployment group, in this case,\nproduction.",
    "start": "2257600",
    "end": "2264300"
  },
  {
    "text": "So, we already know that it's deployed\nto test right now, so let's go and deploy this revision.\nAnd deploy.",
    "start": "2264300",
    "end": "2276100"
  },
  {
    "text": "So, in this release process, this\nis obviously a manual step, someone has to decide at this point that, yes,",
    "start": "2276100",
    "end": "2281500"
  },
  {
    "text": "we've done all the tests that we need to do and go and manually promote that\nto production.",
    "start": "2281500",
    "end": "2287800"
  },
  {
    "text": "So, that deployment is running now out to the three instances that I have.",
    "start": "2287800",
    "end": "2293900"
  },
  {
    "text": "I'm going to let that run for a little bit and I want to go back and talk about\nsome of the features that Rob talked about a little bit",
    "start": "2293900",
    "end": "2300599"
  },
  {
    "text": "and give you a better visual of those. So, Rob talked a little bit about\nhow we do rolling updates with Apollo for the amazon.com website.",
    "start": "2300600",
    "end": "2309200"
  },
  {
    "text": "And CodeDeploy has the same feature so you can actually deploy without downtime. We talked about bringing down the\nweb server,",
    "start": "2309200",
    "end": "2317300"
  },
  {
    "text": "installing all those files, and then\nbringing them back up, we obviously don't want any downtime\nfor our production site. That's probably fine for test where\nwe have that single instance,",
    "start": "2317300",
    "end": "2324900"
  },
  {
    "text": "but we want our customers to always\nbe able to access our website. So, how that's going to work is",
    "start": "2324900",
    "end": "2331200"
  },
  {
    "text": "I mentioned that I have three EC2\ninstances behind a load balancer,  CodeDeploy, what it's doing right\nnow in production,",
    "start": "2331200",
    "end": "2338600"
  },
  {
    "text": "is it's taking a single instance\nout of that load balancer so that at this point all of your\ncustomer traffic",
    "start": "2338600",
    "end": "2344100"
  },
  {
    "text": "is flowing to the two that are still\nbehind the load balancer, still running that version one of\nthe application.",
    "start": "2344100",
    "end": "2350800"
  },
  {
    "text": "So, on that single instance it's\nnow upgrading it to version two.",
    "start": "2350800",
    "end": "2356100"
  },
  {
    "text": "Once it's finished with that, it's\ngoing to put that instance back in the load balancer and roll\nonto the next one,",
    "start": "2356100",
    "end": "2361400"
  },
  {
    "text": "take it out of the load balancer. Now we have our customer traffic\ngoing to sort of 50% V2",
    "start": "2361400",
    "end": "2368099"
  },
  {
    "text": "and 50% V1, but our customers are\nalways able to access that website.",
    "start": "2368100",
    "end": "2375100"
  },
  {
    "text": "It will roll to the next one, and\nfinally everything's back in the load balance, and everything's\non version two.",
    "start": "2375100",
    "end": "2381700"
  },
  {
    "text": "And for this feature, we actually\nhave some sample scripts for you in the AWS Labs Organization on GitHub\nthat you can use",
    "start": "2381700",
    "end": "2391000"
  },
  {
    "text": "in your own application. And I'm using a couple of them.",
    "start": "2391000",
    "end": "2397500"
  },
  {
    "text": "So, deregister from ELB, that's what's\ngoing to take that instance out of the load balancer and then\nregister with ELB,",
    "start": "2397500",
    "end": "2403800"
  },
  {
    "text": "that's going to put it back in the\nload balance and start serving traffic again.",
    "start": "2403800",
    "end": "2409500"
  },
  {
    "text": "The next feature I want to talk about\nis our Auto Scaling integration. I've mentioned a couple times that\nI'm using Auto Scaling",
    "start": "2409500",
    "end": "2415000"
  },
  {
    "text": "for my test and production environments. Auto Scaling is an AWS service to\nhelp you scale up",
    "start": "2415000",
    "end": "2420700"
  },
  {
    "text": "or scale down your fleet of servers. You can scale it all the way down to one just like I'm doing in my test environment,",
    "start": "2420700",
    "end": "2427700"
  },
  {
    "text": "or you can scale it up to thousands\nin your production environment. Obviously, when you're scaling up\nyour environment",
    "start": "2427700",
    "end": "2434200"
  },
  {
    "text": "and adding new instances into your\ndeployment group, you want to make sure that they have\nthe latest application version.",
    "start": "2434200",
    "end": "2440400"
  },
  {
    "text": "You don’t want them to start serving\ncustomer traffic with some old version of the application\nthat you had baked into your army, maybe.",
    "start": "2440400",
    "end": "2448300"
  },
  {
    "text": "So, CodeDeploy is actually able to\nhook into the Auto Scaling lifecycle and catch that instance before it's added.",
    "start": "2448300",
    "end": "2457200"
  },
  {
    "text": "CodeDeploy is going to deploy the\nlatest version of your application that's configured,",
    "start": "2457200",
    "end": "2462599"
  },
  {
    "text": "and then it's going to add it to\nthe load balancer. So, you don't need to worry as you're\nscaling up your fleet that your customers aren't getting\nthe latest version",
    "start": "2462600",
    "end": "2470200"
  },
  {
    "text": "of your application with all its\ngreat features. The final feature that I want to\ntalk about is health tracking.",
    "start": "2470200",
    "end": "2478099"
  },
  {
    "text": "Rob mentioned this a little bit,\nand we want to make sure with CodeDeploy that we're going to catch any deployment problems",
    "start": "2478100",
    "end": "2484200"
  },
  {
    "text": "before they're able to get out to\nthe entire fleet. So, we know that problems happen,\nbugs get out into production,",
    "start": "2484200",
    "end": "2490599"
  },
  {
    "text": "but we want to be protected from\nthat getting out into your entire fleet and having a complete outage of your website",
    "start": "2490600",
    "end": "2497200"
  },
  {
    "text": "if for some reason a bad version gets out. So, what's going to happen is let's say",
    "start": "2497200",
    "end": "2503200"
  },
  {
    "text": "we have a new version of our application, and for some reason that causes the web server not to give successful responses.",
    "start": "2503200",
    "end": "2509400"
  },
  {
    "text": "Maybe we accidently deleted the HTML file and now it's giving 404s. We want to make sure that that definitely\ndoes not get out",
    "start": "2509400",
    "end": "2516600"
  },
  {
    "text": "to the rest of the fleet. So, CodeDeploy, based on that validate\nservice script, whatever test script that you define\nto be success for your application,",
    "start": "2516600",
    "end": "2524700"
  },
  {
    "text": "it's actually going to stop the deployment\nat that point. At that point you have the option\nto either deploy a new fix",
    "start": "2524700",
    "end": "2531700"
  },
  {
    "text": "and do a new revision of your application\nout to your deployment group,",
    "start": "2531700",
    "end": "2536900"
  },
  {
    "text": "or you can chose to roll back to\na good known version of your application where you know\nthat it's going to do a",
    "start": "2536900",
    "end": "2542900"
  },
  {
    "text": "successful response from the web server and put that back in the load balancer.",
    "start": "2542900",
    "end": "2548700"
  },
  {
    "text": "So, I actually have a failure set up. In this case, in CodeDeploy I have\na fleet of nine instances,",
    "start": "2548700",
    "end": "2557700"
  },
  {
    "text": "and I have it configured to make\nsure that I have a minimum",
    "start": "2557700",
    "end": "2564099"
  },
  {
    "text": "of eight out of nine instances that\nare healthy. So, what that means is there's a\nsingle failure, it's going to stop that deployment\nand fail that deployment.",
    "start": "2564100",
    "end": "2573800"
  },
  {
    "text": "So, here I can see the step that did fail. I can drill directly into the logs\nthat actually failed.",
    "start": "2573800",
    "end": "2580799"
  },
  {
    "text": "So, CodeDeploy is going to declare failure if any of your scripts that you define\nin the AppSpec file",
    "start": "2580800",
    "end": "2587600"
  },
  {
    "text": "give an error response. So, in this case it was validate\nservice gave an error response.",
    "start": "2587600",
    "end": "2593000"
  },
  {
    "text": "I don't have to SSH into that instance,\ngrep through all these logs,",
    "start": "2593000",
    "end": "2598200"
  },
  {
    "text": "I can actually see the last little\nbit of that script running directly in the CodeDeploy console so I can figure out what happened there.",
    "start": "2598200",
    "end": "2609000"
  },
  {
    "text": "So, at this point, let's go back\nand check on the production deployment.",
    "start": "2609000",
    "end": "2616900"
  },
  {
    "text": "So, everything looks good, we have\nsuccess across the board. We can go and refresh our production website.",
    "start": "2616900",
    "end": "2624200"
  },
  {
    "text": "We have the new version of the application running, and then we can look at the dashboard\nand see that across the board",
    "start": "2624200",
    "end": "2631300"
  },
  {
    "text": "we now have the new version of the\napplication running.",
    "start": "2631300",
    "end": "2636400"
  },
  {
    "text": "So, now that we've gone through the\nrelease process that I've set up for my website, I want to take you through the release\nprocess for the Go web service,",
    "start": "2636400",
    "end": "2644900"
  },
  {
    "text": "the calculator API. So, as I said before, this is a little\nbit more complicated.",
    "start": "2644900",
    "end": "2650099"
  },
  {
    "text": "I have a build step that I need to\ndo to compile that Go code in order to have artifacts to deploy,",
    "start": "2650100",
    "end": "2656200"
  },
  {
    "text": "and then I also want to add a few\nmore automated tests to make sure that no bugs get out\nto production.",
    "start": "2656200",
    "end": "2664599"
  },
  {
    "text": "So, for the calculator web service\nI have a GitHub repository",
    "start": "2664600",
    "end": "2670300"
  },
  {
    "text": "very similar to the website. It's already packaged for CodeDeploy. We have an AppSpec file",
    "start": "2670300",
    "end": "2676300"
  },
  {
    "text": "and we have scripts files ready to\ninstall this. I just have a single Go language file",
    "start": "2676300",
    "end": "2682700"
  },
  {
    "text": "that's going to define my web service, and then I've already created an\napplication in CodeDeploy",
    "start": "2682700",
    "end": "2689100"
  },
  {
    "text": "for this web service. So, just like on my website, I have\na test environment",
    "start": "2689100",
    "end": "2695099"
  },
  {
    "text": "and a production environment. And you can see some of the revisions\nthat have been flowing through.",
    "start": "2695100",
    "end": "2701600"
  },
  {
    "text": "I mentioned that I need a build step, I don't want my engineers to have\nto build this on their desktops",
    "start": "2701600",
    "end": "2708400"
  },
  {
    "text": "and copy the artifacts somewhere, I want to make this an automated process.",
    "start": "2708400",
    "end": "2714000"
  },
  {
    "text": "I have Jenkins set up on an EC2 instance - this is a very popular build server. And to integrate it with CodePipeline,",
    "start": "2714000",
    "end": "2721000"
  },
  {
    "text": "I have the CodePipeline plugin installed\nin Jenkins. So, what that's going to do is CodePipeline's\ngoing to notify Jenkins",
    "start": "2721000",
    "end": "2729099"
  },
  {
    "text": "where there's new source that's available\nto compile, and then it's going to notify CodePipeline\nwhen the build is done",
    "start": "2729100",
    "end": "2736900"
  },
  {
    "text": "and they are artifacts ready to move\non to the next step of deploy. And then I just have a simple build\nmy Go code.",
    "start": "2736900",
    "end": "2746300"
  },
  {
    "text": "So, now that I have the build step\nand I have the deploy step set up, I want to link all of these together\nin an automated release process.",
    "start": "2746300",
    "end": "2755700"
  },
  {
    "text": "So, let's jump over to CodePipeline\n- that's not CodePipline -",
    "start": "2755700",
    "end": "2764800"
  },
  {
    "text": "there we go. This is a really simple pipeline",
    "start": "2764800",
    "end": "2772600"
  },
  {
    "text": "that I've created with the pipeline\nwizard in the CodePipeline console.",
    "start": "2772600",
    "end": "2778700"
  },
  {
    "text": "You can see I have a source step\nthat's going to pull directly from GitHub. Anytime that there's a new change, CodeDeploy is going to automatically\npull that new change",
    "start": "2778700",
    "end": "2786200"
  },
  {
    "text": "for my repository and move it into\nthe build step. So, in the build stage I have the\nJenkins server configured.",
    "start": "2786200",
    "end": "2794299"
  },
  {
    "text": "What that's going to do is, using\nthe CodePipeline plugin, build my Go code, get my deploy artifacts ready,",
    "start": "2794300",
    "end": "2803200"
  },
  {
    "text": "and then it's going to hand it off\nautomatically to the beta stage, which is where I have my test production\nenvironment",
    "start": "2803200",
    "end": "2808400"
  },
  {
    "text": "set up with CodeDeploy. So, with a developer pushing a single\nchange into my repository,",
    "start": "2808400",
    "end": "2815900"
  },
  {
    "text": "it's going to flow through the entire process right into test deployment.",
    "start": "2815900",
    "end": "2821800"
  },
  {
    "text": "Now, you'll notice that I don't have\nmy production deployment here and I don't have any test, I'm not\nvery comfortable yet",
    "start": "2821800",
    "end": "2827000"
  },
  {
    "text": "deploying directly, automatically,\ninto production because I don't have any automated tests.",
    "start": "2827000",
    "end": "2832299"
  },
  {
    "text": "I don't quite trust Rob to always\ncheck in a working change.",
    "start": "2832300",
    "end": "2840400"
  },
  {
    "text": "So, let's go into the pipeline and\nedit and add some tests.",
    "start": "2840400",
    "end": "2846700"
  },
  {
    "text": "This is the edit view in the CodePipeline console. This is where you can freely edit\nyour entire release process,",
    "start": "2846700",
    "end": "2852700"
  },
  {
    "text": "manage, and model your release process here. You can add new changes and you can\nadd new steps into each stage.",
    "start": "2852700",
    "end": "2859700"
  },
  {
    "text": "So, let's edit the beta stage and\nadd a new action. We're going to add test,",
    "start": "2859700",
    "end": "2868700"
  },
  {
    "text": "and I want to add an API test to make sure that the behavior of each of those APIs for the calculator website is correct.",
    "start": "2868700",
    "end": "2876500"
  },
  {
    "text": "In a test provider dropdown, you can see just a couple of our great partner\nintegrations.",
    "start": "2876500",
    "end": "2882800"
  },
  {
    "text": "It makes it really easy if you're\nusing one of these existing tools for your applications today, to start\nusing it with CodePipeline.",
    "start": "2882800",
    "end": "2893099"
  },
  {
    "text": "So, I'm going to choose Runscope,\nI want to do an API test. I'll click connect. That's going\nto take me right to Runscope",
    "start": "2893100",
    "end": "2899900"
  },
  {
    "text": "where I already have a test set up,\ncreate that integration,",
    "start": "2899900",
    "end": "2905900"
  },
  {
    "text": "and add the action. And that's all that it takes to add\nthis automated API test",
    "start": "2905900",
    "end": "2912500"
  },
  {
    "text": "into my pipeline. Let's also go in and add a load test.",
    "start": "2912500",
    "end": "2918300"
  },
  {
    "text": "I want to make sure that once it\ngets into production any change is going to perform properly\nin the higher load of production.",
    "start": "2918300",
    "end": "2927000"
  },
  {
    "text": "So, let's choose BlazeMeter, add\nthat action - connect.",
    "start": "2927000",
    "end": "2933800"
  },
  {
    "text": "That's going to take me right into\nBlazeMeter. I already have a load test set up\nwith BlazeMeter",
    "start": "2933800",
    "end": "2941600"
  },
  {
    "text": "and we'll add that action. You'll notice that I added these\ntwo actions side by side in this stage.",
    "start": "2941600",
    "end": "2948900"
  },
  {
    "text": "What I like to do is add these side by side because that means they're going\nto run in parallel.",
    "start": "2948900",
    "end": "2954000"
  },
  {
    "text": "So, I love doing tests in parallel, it means that I'm going to catch\nany problems that are happen with the change that's flowing through\nthe pipeline,",
    "start": "2954000",
    "end": "2961100"
  },
  {
    "text": "but I'm going to - for any successful change I'm going to get that out to production faster and into the hands of my customers.",
    "start": "2961100",
    "end": "2968500"
  },
  {
    "text": "So, now that I have a couple of tests,\nI feel pretty confident that that's going to catch any major errors before they get into productions.",
    "start": "2968500",
    "end": "2975500"
  },
  {
    "text": "So, let's add the production stage. And this time we'll add deploy and\nchoose CodeDeploy.",
    "start": "2975500",
    "end": "2987200"
  },
  {
    "text": "I already have that application that\nI showed you for the Go web service, and then\nthis time we'll go",
    "start": "2987200",
    "end": "2992700"
  },
  {
    "text": "for the production deployment group.",
    "start": "2992700",
    "end": "2999000"
  },
  {
    "text": "So, at this point I have modeled\nout my entire release process. I want to show you what it looks like when we're trying to catch some of the errors",
    "start": "2999000",
    "end": "3006200"
  },
  {
    "text": "that Rob has added in. I'm really picking on Rob today.",
    "start": "3006200",
    "end": "3012800"
  },
  {
    "text": "I have a baked web service that has\na failure in it. So, it looks just like the one we\njust created",
    "start": "3012800",
    "end": "3019700"
  },
  {
    "text": "but it has a failure. One of the great things about the\nCodePipeline console is that you can actually link directly\nto that failure",
    "start": "3019700",
    "end": "3027500"
  },
  {
    "text": "and drill in and see what's going on. So, we can scroll down to the failure,",
    "start": "3027500",
    "end": "3034400"
  },
  {
    "text": "and we're not getting the behavior\nwe expected for divide by zero.",
    "start": "3034400",
    "end": "3040500"
  },
  {
    "text": "So, at this point, what you can do is you can link directly into that GitHub repo,",
    "start": "3040500",
    "end": "3046500"
  },
  {
    "text": "direct link there, go in, fix the\nchange, push that through, and then that will go from source to build,",
    "start": "3046500",
    "end": "3053000"
  },
  {
    "text": "we'll get artifacts deployed into test, hopefully it will pass the API test this time, and then get straight into production\nafter that.",
    "start": "3053000",
    "end": "3065500"
  },
  {
    "text": "So, now I've showed you CodeDeploy\nand CodePipeline, I want to show you how we can move\nthese repositories in CodeCommit.",
    "start": "3065500",
    "end": "3078700"
  },
  {
    "text": "Let's add simple calculator website,",
    "start": "3078700",
    "end": "3087099"
  },
  {
    "text": "copy the URL. I have this repository on my desktop already",
    "start": "3087100",
    "end": "3094400"
  },
  {
    "text": "so I'm just going to add that as\na new remote,",
    "start": "3094400",
    "end": "3102200"
  },
  {
    "text": "push everything up.",
    "start": "3102200",
    "end": "3108599"
  },
  {
    "text": "So, now that my repository is now\nmoved into CodeCommit,",
    "start": "3108600",
    "end": "3114600"
  },
  {
    "text": "I can drill into the repository. This is a new feature that we just\nlaunched on Monday, the code browsing in the console,",
    "start": "3114600",
    "end": "3120400"
  },
  {
    "text": "and I can actually see all of my\ncode right in the CodeCommit console.",
    "start": "3120400",
    "end": "3128000"
  },
  {
    "text": "So, to wrap up, I showed you a couple\nof our partner integrations.",
    "start": "3128000",
    "end": "3137200"
  },
  {
    "text": "We looked at GitHub, and Runscope,\nand BlazeMeter. This is our full list of partner\nintegrations.",
    "start": "3137200",
    "end": "3144300"
  },
  {
    "text": "They have some great end to end solutions, and some of them are here today, so you have the opportunity to really see",
    "start": "3144300",
    "end": "3150200"
  },
  {
    "text": "how they could benefit your cloud\ndevelopment. If you go to the AWS DevOps kiosk\nin the AWS booth,",
    "start": "3150200",
    "end": "3158500"
  },
  {
    "text": "you can pick up a partner passport. If you get three partners who are\nhere at reInvent to stamp them,",
    "start": "3158500",
    "end": "3164500"
  },
  {
    "text": "bring that back to the DevOps kiosk, and you'll get a little gift of some\nAWS credits.",
    "start": "3164500",
    "end": "3174700"
  },
  {
    "text": "I also want to give a little bit of a plug for some of the related sessions\nthat are here at reInvent.",
    "start": "3174700",
    "end": "3179800"
  },
  {
    "text": "Right after this talk you can dive\ndeeper into CodeDeploy and learn more about automating your\nsoftware deployments.",
    "start": "3179800",
    "end": "3187900"
  },
  {
    "text": "Like I said, please check us out\nat the DevOps kiosk. You have the great opportunity to see how our partners can benefit you.",
    "start": "3187900",
    "end": "3197100"
  },
  {
    "text": "Rob and I and some of our partners\nare here to answer questions. We'll be taking questions up here\nin the front and out in the hall",
    "start": "3197100",
    "end": "3203200"
  },
  {
    "text": "if you have any questions. And definitely please fill out your\nevaluations. Thank you.",
    "start": "3203200",
    "end": "3213700"
  }
]