[
  {
    "start": "0",
    "end": "52000"
  },
  {
    "text": "In this video, you’ll see how to monitor",
    "start": "0",
    "end": "1868"
  },
  {
    "text": "Amazon Kinesis Data Analytics \nfor Apache Flink applications.",
    "start": "1868",
    "end": "5587"
  },
  {
    "text": "With this solution, you can monitor Flink\n applications in real time using Amazon",
    "start": "6234",
    "end": "10156"
  },
  {
    "text": "CloudWatch metrics and the Apache \nFlink dashboard, identify errors",
    "start": "10156",
    "end": "14156"
  },
  {
    "text": "and exceptions in log streams, and \nproactively troubleshoot application issues.",
    "start": "14156",
    "end": "18485"
  },
  {
    "text": "Amazon Kinesis Data Analytics for \nApache Flink is a managed Apache",
    "start": "19502",
    "end": "23121"
  },
  {
    "text": "Flink solution for building \nstreaming applications.",
    "start": "23121",
    "end": "25550"
  },
  {
    "text": "It supports sub-second latencies \nand auto-scales to meet demand.",
    "start": "26013",
    "end": "29334"
  },
  {
    "text": "You pay only for the resources used.",
    "start": "29667",
    "end": "31565"
  },
  {
    "text": "With Kinesis Data Analytics for Apache \nFlink, you can rapidly create, test, deploy,",
    "start": "32693",
    "end": "37490"
  },
  {
    "text": "and scale streaming data applications.",
    "start": "37490",
    "end": "39397"
  },
  {
    "text": "It drives best practices through \ndesign, defaults, and automations,",
    "start": "39897",
    "end": "43538"
  },
  {
    "text": "and allows developers to focus \nmore on application development.",
    "start": "43539",
    "end": "46906"
  },
  {
    "text": "It also enables monitoring \nof streaming Flink pipelines.",
    "start": "47313",
    "end": "50346"
  },
  {
    "start": "52000",
    "end": "81000"
  },
  {
    "text": "We’ll start in Amazon Kinesis, where we \nalready have some Apache Flink applications.",
    "start": "52455",
    "end": "56487"
  },
  {
    "text": "Let’s look at one.",
    "start": "56487",
    "end": "57510"
  },
  {
    "text": "This application was \ncreated for monitoring lag.",
    "start": "59379",
    "end": "61962"
  },
  {
    "text": "For demo purposes, we’ll use the Amazon \nKinesis Data Generator to send a high",
    "start": "63127",
    "end": "67080"
  },
  {
    "text": "volume of test data to our Flink application.",
    "start": "67080",
    "end": "69454"
  },
  {
    "text": "The Monitoring tab of our application\n displays some Amazon CloudWatch metrics.",
    "start": "72477",
    "end": "76541"
  },
  {
    "text": "We can see more by viewing \nthe CloudWatch dashboard.",
    "start": "76967",
    "end": "79409"
  },
  {
    "text": "Let’s look at how well our application \nis keeping up with throughput.",
    "start": "81832",
    "end": "84689"
  },
  {
    "text": "The millisBehindLatest metric measures\n the time difference between the latest",
    "start": "85762",
    "end": "89302"
  },
  {
    "text": "received data and the latest \nreceived event by the stream.",
    "start": "89302",
    "end": "92107"
  },
  {
    "text": "The metric has been growing in the last\n 15 minutes due to the high volume of",
    "start": "93365",
    "end": "96513"
  },
  {
    "text": "data we sent, indicating that the \napplication could fall behind.",
    "start": "96513",
    "end": "100035"
  },
  {
    "text": "Pay close attention to this metric \n if it exceeds your business latency",
    "start": "100534",
    "end": "103442"
  },
  {
    "text": "requirements or continues to grow.",
    "start": "103443",
    "end": "105268"
  },
  {
    "text": "Next, we’ll look at the containerCPUUtilization \nmetric, which gives us a complete picture of",
    "start": "109652",
    "end": "114340"
  },
  {
    "text": "all processes in terms of CPU exhaustion at \nthe container, and failures resulting from that.",
    "start": "114340",
    "end": "118954"
  },
  {
    "text": "We’ll view the metric for an \napplication called cpu_spiking.",
    "start": "120121",
    "end": "123319"
  },
  {
    "text": "Let’s remove the first metric \nwe viewed from the graph.",
    "start": "126279",
    "end": "128629"
  },
  {
    "text": "The metric now displayed represents \nthe total utilization, on average, across",
    "start": "129776",
    "end": "133826"
  },
  {
    "text": "all the TaskManagers in the \nApache Flink application.",
    "start": "133826",
    "end": "136554"
  },
  {
    "text": "If this metric were spiking or growing, \nwe might have an issue with a slow or",
    "start": "137794",
    "end": "141166"
  },
  {
    "text": "busy operator that is taking up \nresources in the task managers.",
    "start": "141166",
    "end": "144398"
  },
  {
    "text": "Let’s look at another metric called \ncontainerMemoryUtilization.",
    "start": "148893",
    "end": "151982"
  },
  {
    "text": "This metric represents the overall \npercentage of memory utilized by",
    "start": "152648",
    "end": "155760"
  },
  {
    "text": "TaskManager containers in \nthe Flink Application cluster.",
    "start": "155760",
    "end": "158752"
  },
  {
    "text": "This metric’s continued growth would be\n indicative of an application in need of scaling.",
    "start": "159880",
    "end": "163986"
  },
  {
    "text": "Let’s look for another \nmetric called fullRestarts.",
    "start": "172015",
    "end": "174696"
  },
  {
    "text": "We’ll select the full_restarts application,",
    "start": "179894",
    "end": "182205"
  },
  {
    "text": "which was created to demonstrate an \napplication that is restarting continuously.",
    "start": "182205",
    "end": "186000"
  },
  {
    "text": "Temporary increases in the fullRestarts\nmetric can be expected due to patching",
    "start": "187128",
    "end": "191066"
  },
  {
    "text": "or recoverable errors.",
    "start": "191066",
    "end": "192489"
  },
  {
    "text": "A continuous increase, however, is \nindicative of an issue in the application.",
    "start": "193026",
    "end": "196596"
  },
  {
    "text": "If your application is experiencing an \nincrease in fullRestarts, it would be good",
    "start": "197336",
    "end": "201377"
  },
  {
    "text": "to investigate application logs and \nthe Flink Web Dashboard to learn more",
    "start": "201378",
    "end": "204794"
  },
  {
    "text": "about what is causing these restarts.",
    "start": "204794",
    "end": "206527"
  },
  {
    "text": "The lastCheckpointSize and \nlastCheckpointDuration metrics monitor",
    "start": "209062",
    "end": "212855"
  },
  {
    "text": "the data stored in an application state and the \nlength of time for each checkpoint to process.",
    "start": "212855",
    "end": "217597"
  },
  {
    "text": "If checkpoint size and duration \ncontinue to grow, job failures can occur.",
    "start": "218781",
    "end": "222806"
  },
  {
    "text": "Next, let’s look at a metric called \nnumberOfFailedCheckpoints.",
    "start": "223842",
    "end": "227112"
  },
  {
    "start": "231000",
    "end": "313000"
  },
  {
    "text": "We’ll select a previously created \napplication that reads from and",
    "start": "231645",
    "end": "234530"
  },
  {
    "text": "writes to Kinesis Data Streams.",
    "start": "234530",
    "end": "236362"
  },
  {
    "text": "This application has an increasing \nnumber of failed checkpoints.",
    "start": "237361",
    "end": "240349"
  },
  {
    "text": "If this issue is not addressed, further \nissues with the application could ensue.",
    "start": "240720",
    "end": "244319"
  },
  {
    "text": "It is a good idea to investigate \nissues with the application such as",
    "start": "244819",
    "end": "247886"
  },
  {
    "text": "backpressure or application \ncode issues that could lead to this.",
    "start": "247886",
    "end": "250738"
  },
  {
    "text": "Now, that we’ve seen some of the \navailable metrics, let’s see how we",
    "start": "251792",
    "end": "254701"
  },
  {
    "text": "can pull them all together \nin a custom dashboard.",
    "start": "254701",
    "end": "257101"
  },
  {
    "text": "To do that, we can use an AWS \nCloudFormation template.",
    "start": "257841",
    "end": "260737"
  },
  {
    "text": "Let’s create a new stack.",
    "start": "263235",
    "end": "264638"
  },
  {
    "text": "We’ll upload a template file that can be found in\n the resources section of this video’s description.",
    "start": "268043",
    "end": "272168"
  },
  {
    "text": "We’ll give our stack a name.",
    "start": "278273",
    "end": "279640"
  },
  {
    "text": "Next, we’ll specify the name of the \nKinesis application we are monitoring.",
    "start": "283044",
    "end": "286448"
  },
  {
    "text": "We'll also name our dashboard.",
    "start": "287557",
    "end": "289111"
  },
  {
    "text": "Next, we’ll provide the region where the \nKinesis Analytics application is created.",
    "start": "290221",
    "end": "294000"
  },
  {
    "text": "We’re not reading from Kafka, \nso we’ll skip that parameter.",
    "start": "295313",
    "end": "297794"
  },
  {
    "text": "Our application is reading from a \nstream called tumbling-window-stream.",
    "start": "298942",
    "end": "302298"
  },
  {
    "text": "We’ll keep all the default settings \nfor configuring stack options.",
    "start": "304205",
    "end": "307072"
  },
  {
    "text": "Let’s create our stack.",
    "start": "309125",
    "end": "310364"
  },
  {
    "start": "313000",
    "end": "354000"
  },
  {
    "text": "The dashboard has been created.",
    "start": "313990",
    "end": "315561"
  },
  {
    "text": "We can navigate to it from the Outputs tab.",
    "start": "315561",
    "end": "317799"
  },
  {
    "text": "The dashboard has all of the metrics \nthat we referenced earlier in this video,",
    "start": "320223",
    "end": "323607"
  },
  {
    "text": "as well as some other metrics \nsuch as uptime and downtime.",
    "start": "323607",
    "end": "326585"
  },
  {
    "text": "Many of the metrics \ninclude an alarm threshold.",
    "start": "329231",
    "end": "331643"
  },
  {
    "text": "For example, the CPU utilization \nthreshold is set to 80 percent.",
    "start": "332106",
    "end": "335999"
  },
  {
    "text": "If you proactively enable the Autoscaling\n feature on Kinesis Data Analytics for",
    "start": "336683",
    "end": "340489"
  },
  {
    "text": "Apache Flink, your job will \nautomatically scale the number of",
    "start": "340489",
    "end": "343486"
  },
  {
    "text": "KPUs when this threshold is exceeded.",
    "start": "343486",
    "end": "345677"
  },
  {
    "text": "The dashboard also includes metrics\n showing the Flink application progress,",
    "start": "346787",
    "end": "350332"
  },
  {
    "text": "such as incoming and \noutgoing records per second.",
    "start": "350332",
    "end": "352788"
  },
  {
    "text": "Next, let’s go to Amazon Kinesis \nand take a look at how to identify",
    "start": "354823",
    "end": "358094"
  },
  {
    "text": "exceptions in application code.",
    "start": "358094",
    "end": "359751"
  },
  {
    "text": "Let’s select one of our existing applications.",
    "start": "360861",
    "end": "363081"
  },
  {
    "text": "Next, we’ll open the Apache Flink \ndashboard for our application.",
    "start": "364098",
    "end": "367121"
  },
  {
    "text": "The dashboard shows a \nrunning job called Word Count.",
    "start": "368158",
    "end": "370802"
  },
  {
    "text": "This job reads from a Kinesis Data \nStream, does some aggregation,",
    "start": "371117",
    "end": "374373"
  },
  {
    "text": "and then writes to another \nKinesis Data Stream.",
    "start": "374373",
    "end": "376444"
  },
  {
    "text": "Each of the blue boxes in the job \nworkflow represents a set of operators,",
    "start": "377518",
    "end": "381174"
  },
  {
    "text": "which are known as “tasks” in Apache Flink.",
    "start": "381174",
    "end": "383301"
  },
  {
    "text": "A quick check of the Exceptions tab indicates \nthere’s no root exception in our application.",
    "start": "384319",
    "end": "388700"
  },
  {
    "text": "Let’s look at a Flink dashboard \nfor a different application.",
    "start": "389736",
    "end": "392353"
  },
  {
    "text": "This time we see a checkpoint \nexception in our Exceptions tab.",
    "start": "401867",
    "end": "404902"
  },
  {
    "text": "Let’s return to the Word Count job \nfor the first application we viewed.",
    "start": "405956",
    "end": "409082"
  },
  {
    "start": "412000",
    "end": "567000"
  },
  {
    "text": "Here, we have the data flow for our application.",
    "start": "412505",
    "end": "414659"
  },
  {
    "text": "We can interact with the blue boxes.",
    "start": "414659",
    "end": "416527"
  },
  {
    "text": "Let’s select the box in the middle \nof the flow to see its sub tasks.",
    "start": "417415",
    "end": "420504"
  },
  {
    "text": "Subtasks are the parallel units of a task \nthat comprise the distributed application.",
    "start": "421077",
    "end": "425156"
  },
  {
    "text": "If a task has 4 subtasks, that means \n4 threads on the task are performing",
    "start": "425600",
    "end": "429456"
  },
  {
    "text": " the same set of operations.",
    "start": "429456",
    "end": "430973"
  },
  {
    "text": "Sub task 0 has received roughly 87,000 \nrecords and sent more than 240 records,",
    "start": "432000",
    "end": "437408"
  },
  {
    "text": "whereas Sub task 2 hasn’t \nsent or received any records.",
    "start": "437408",
    "end": "440582"
  },
  {
    "text": "This is an example of data skew, \nwhich can lead to longer or shorter",
    "start": "441155",
    "end": "444312"
  },
  {
    "text": "than expected checkpoints \nand a degraded application.",
    "start": "444312",
    "end": "447330"
  },
  {
    "text": "Under the TaskManagers tab we can view \nthe logs of each individual TaskManager.",
    "start": "448496",
    "end": "452621"
  },
  {
    "text": "The Watermarks tab is relevant \nwhen doing EventTime processing.",
    "start": "453749",
    "end": "456736"
  },
  {
    "text": "Under the BackPressure tab, \nwe have the ability to see the",
    "start": "457957",
    "end": "460484"
  },
  {
    "text": "backpressure of the application.",
    "start": "460484",
    "end": "462000"
  },
  {
    "text": "Backpressure occurs when data is ingested \ninto an operator faster than it can be emitted.",
    "start": "463184",
    "end": "467380"
  },
  {
    "text": "Backpressure is induced by the \ndownstream operator, which is",
    "start": "468000",
    "end": "470882"
  },
  {
    "text": "represented by the blue box to the right \nof the one experiencing backpressure.",
    "start": "470882",
    "end": "474392"
  },
  {
    "text": "When troubleshooting backpressure, \nlook for underprovisioned tasks or sinks,",
    "start": "475021",
    "end": "478615"
  },
  {
    "text": "slow operators, or longer checkpoints.",
    "start": "478615",
    "end": "480875"
  },
  {
    "text": "Here, we can see the percentage that \nan operator contributes to the overall",
    "start": "481430",
    "end": "484405"
  },
  {
    "text": "backpressure, as well as \nwhich operators are busy.",
    "start": "484405",
    "end": "486863"
  },
  {
    "text": "Starting in Apache Flink 1.13, we can \nlearn more about backpressure on the",
    "start": "488103",
    "end": "492017"
  },
  {
    "text": "job Overview tab of the \n Flink Web Dashboard.",
    "start": "492017",
    "end": "494503"
  },
  {
    "text": "Occasionally, you'll find no jobs \nrunning on the Apache Flink dashboard.",
    "start": "495000",
    "end": "498220"
  },
  {
    "text": "This means the job never started.",
    "start": "498220",
    "end": "499874"
  },
  {
    "text": "Let’s return to our application in \nAmazon Kinesis to diagnose why",
    "start": "501000",
    "end": "504237"
  },
  {
    "text": "an application wouldn’t start.",
    "start": "504237",
    "end": "505784"
  },
  {
    "text": "We can look at this Logs \ntab to see if there any errors.",
    "start": "507000",
    "end": "509899"
  },
  {
    "text": "The page is empty.",
    "start": "512286",
    "end": "513386"
  },
  {
    "text": "Let’s go to the Configuration tab and \nfind the log group for this application.",
    "start": "513386",
    "end": "517011"
  },
  {
    "text": "We’ll select the Log \ngroup for this application.",
    "start": "518233",
    "end": "520378"
  },
  {
    "text": "Next, we’ll select Log insights.",
    "start": "521488",
    "end": "523540"
  },
  {
    "text": "Let’s find our log so that we can query it.",
    "start": "524540",
    "end": "526657"
  },
  {
    "text": "Here, we’ll search for any throwable \nexception information from the job.",
    "start": "530728",
    "end": "534131"
  },
  {
    "text": "The throwable exceptions \n have started to populate.",
    "start": "541827",
    "end": "544193"
  },
  {
    "text": "We can use this information to find \n out why the application didn't start.",
    "start": "545063",
    "end": "548457"
  },
  {
    "text": "You’ve just seen how to monitor \nAmazon Kinesis Data Analytics",
    "start": "552249",
    "end": "555194"
  },
  {
    "text": "for Apache Flink applications.",
    "start": "555194",
    "end": "557038"
  },
  {
    "text": "You can learn more about this topic in \nthe description and links for this video.",
    "start": "558186",
    "end": "561375"
  },
  {
    "text": "Thanks for watching. Now it is your turn to try.",
    "start": "561505",
    "end": "563586"
  }
]