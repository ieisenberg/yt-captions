[
  {
    "text": "hi everyone you still awake whoo",
    "start": "0",
    "end": "5460"
  },
  {
    "text": "it's the end of a long and exciting day if anyone hasn't noticed by the way it's raining inside the Javits Center so",
    "start": "5460",
    "end": "11269"
  },
  {
    "text": "that's exciting none of the other summits this year had rain inside so",
    "start": "11269",
    "end": "16670"
  },
  {
    "text": "feeling pretty proud of New York for achieving something that all the other summits this year did not hold on whoo",
    "start": "16670",
    "end": "25099"
  },
  {
    "text": "so my name is Abbi this I am a developer evangelist for AWS I've been upstairs in",
    "start": "25099",
    "end": "33120"
  },
  {
    "text": "the twitch booth all day making a special guest appearance today to talk about AWS Fargate so a little bit of",
    "start": "33120",
    "end": "41129"
  },
  {
    "text": "intro so what's a container right so it's an atomic self-contained package of",
    "start": "41129",
    "end": "46890"
  },
  {
    "text": "software that has everything that it needs to run and everything that it needs to run includes its application code its libraries its binaries",
    "start": "46890",
    "end": "53280"
  },
  {
    "text": "everything that it needs so a pretty popular and widely used platform for this is docker so if you've ever been to",
    "start": "53280",
    "end": "60449"
  },
  {
    "text": "one of my talks before you know that there's usually a lot of links in there so as this tradition I have included",
    "start": "60449",
    "end": "66060"
  },
  {
    "text": "some links so when this deck is posted after the summit is over you'll be able to follow along with the links on your",
    "start": "66060",
    "end": "72930"
  },
  {
    "text": "own time so over the last couple of years I think we've seen an ever-increasing amount of these kind of",
    "start": "72930",
    "end": "79409"
  },
  {
    "text": "talks and blogs and tweets Reds and all that good stuff about about containers",
    "start": "79409",
    "end": "85229"
  },
  {
    "text": "we've also been served with us but today we're team containers so why are containers so popular so they're",
    "start": "85229",
    "end": "91710"
  },
  {
    "text": "portable they're lightweight they're standardized they're easy deploy a story",
    "start": "91710",
    "end": "97200"
  },
  {
    "text": "comes along with them I think for a lot of people and that's the whole monolith to microservices story right so containers and micro services feel like",
    "start": "97200",
    "end": "103409"
  },
  {
    "text": "they go hand-in-hand and I'll talk about that in a second and I think what container is really enabled for me so I",
    "start": "103409",
    "end": "108479"
  },
  {
    "text": "was a was a an AWS customer before I came to work here and I actually this is",
    "start": "108479",
    "end": "116070"
  },
  {
    "text": "like my second anniversary of doing anything AWS related so not last year at",
    "start": "116070",
    "end": "121500"
  },
  {
    "text": "the New York summit but the year before I was a customer speaker instead of an AWS speaker so happy to be back in my",
    "start": "121500",
    "end": "127920"
  },
  {
    "text": "hometown summit talking about actually something really similar so I'm once again back talking about monoliths the microscope",
    "start": "127920",
    "end": "134319"
  },
  {
    "text": "but what that what those containers really enabled for me is that so who here has worked in ops before me and you",
    "start": "134319",
    "end": "142599"
  },
  {
    "text": "know that a really common problem right is the whole wall it worked on my machine or it works in production I",
    "start": "142599",
    "end": "148030"
  },
  {
    "text": "don't know what's wrong with staging but you know it works it worked when I did it it worked when I tried it worked and I tested it or it works for me",
    "start": "148030",
    "end": "154270"
  },
  {
    "text": "works locally in containers for me removed a lot of that because they just they kind of work everywhere that I",
    "start": "154270",
    "end": "161019"
  },
  {
    "text": "could take that standardized box and I could move it from my local environment to my staging environment to my test environment to my production environment",
    "start": "161019",
    "end": "167530"
  },
  {
    "text": "there's actually a good quote that's been floating around too that says everyone has a test environment and some",
    "start": "167530",
    "end": "172930"
  },
  {
    "text": "of us are lucky to have a production environment as well and containers I think kind of helped eliminate some of",
    "start": "172930",
    "end": "178840"
  },
  {
    "text": "that because I makes it that much easier to set up these repeatable environments where I can test in the exact same",
    "start": "178840",
    "end": "184090"
  },
  {
    "text": "situation as I could in production so what are micro services so I said that there's this big monolith to micro",
    "start": "184090",
    "end": "190540"
  },
  {
    "text": "services story so there are many definitions of this and I'm not going to do the whole merriam-webster dictionary",
    "start": "190540",
    "end": "195580"
  },
  {
    "text": "thing although they're amazing on Twitter by the way they started the really clapping back at people and I am here for it so this is Adrian Cockroft",
    "start": "195580",
    "end": "203410"
  },
  {
    "text": "and we used to call him the best AWS evangelist that didn't work for AWS if",
    "start": "203410",
    "end": "208480"
  },
  {
    "text": "that joke was ever funny it's no longer funny because he works here now so",
    "start": "208480",
    "end": "214750"
  },
  {
    "text": "Adrian says that it's a service-oriented architecture composed of loosely coupled elements that have bounded context so",
    "start": "214750",
    "end": "220959"
  },
  {
    "text": "what does that mean service-oriented it has a job it has loosely coupled elements so my elements are not tied",
    "start": "220959",
    "end": "228640"
  },
  {
    "text": "together so I don't have to edit one service in order to deploy the service that I'm actually working on and they",
    "start": "228640",
    "end": "234820"
  },
  {
    "text": "have bounded context so for me that means it has a job and it does not do more than the job so if I have a",
    "start": "234820",
    "end": "239980"
  },
  {
    "text": "messaging service and it starts to handle my internal dashboard it's no longer just a messaging service and with",
    "start": "239980",
    "end": "247630"
  },
  {
    "text": "this definition we then break it apart so it's not just getting for my monolith to micro services but it's keeping my",
    "start": "247630",
    "end": "253269"
  },
  {
    "text": "micro services services with bounded context so it's keeping them where they have a defined job they're not tied",
    "start": "253269",
    "end": "260109"
  },
  {
    "text": "anything else so if they communicate with another service they do it via the public API like anyone else and that if",
    "start": "260109",
    "end": "266590"
  },
  {
    "text": "it goes be the scope of what that service was intended to do maybe it's time to be to",
    "start": "266590",
    "end": "271660"
  },
  {
    "text": "services or three services or four services instead of just one so why do they go together",
    "start": "271660",
    "end": "277090"
  },
  {
    "text": "so we talked about this a little bit just a second ago but one job one service for me often equals one",
    "start": "277090",
    "end": "283030"
  },
  {
    "text": "container so maybe I have my messaging service it'll keep the same example that",
    "start": "283030",
    "end": "288570"
  },
  {
    "text": "service runs inside of a container and I can start up more copies of that container if I need my service to",
    "start": "288570",
    "end": "294940"
  },
  {
    "text": "process more requests or more items off queue but my one job one service for one",
    "start": "294940",
    "end": "299980"
  },
  {
    "text": "container and I can move those pieces independently so previously with a monolith if I had to scale something up",
    "start": "299980",
    "end": "306280"
  },
  {
    "text": "or down I had to have a whole new copy of the monolith regardless of whether or my different services all needed to be",
    "start": "306280",
    "end": "312820"
  },
  {
    "text": "scaled up and with microservices that lets me kind of do both right so if my internal dashboard service gets almost",
    "start": "312820",
    "end": "319810"
  },
  {
    "text": "no traffic but my messaging service gets a significant amount of traffic I can scale up only the messaging service",
    "start": "319810",
    "end": "325690"
  },
  {
    "text": "without touching my internal dashboard service but unfortunately if you've been to any of these talks before or if",
    "start": "325690",
    "end": "331990"
  },
  {
    "text": "you've done anything with containers you know that managing one container is pretty easy or easy issue but managing",
    "start": "331990",
    "end": "338620"
  },
  {
    "text": "many containers is much harder so we have something called orchestration tools so orchestration tools are what",
    "start": "338620",
    "end": "344890"
  },
  {
    "text": "help us kind of manage deploy scale all of these container moving pieces so we don't have to do all those that heavy",
    "start": "344890",
    "end": "350650"
  },
  {
    "text": "lifting ourselves and in amazonian term sets how can we do less undifferentiated heavy lifting that's what that means",
    "start": "350650",
    "end": "356710"
  },
  {
    "text": "but how can I get all the advantage of these containers like using every nook and cranny of an instance or scaling up",
    "start": "356710",
    "end": "364450"
  },
  {
    "text": "the pieces independently but how can I do that without having to sit there by hand and kind of move everything on my",
    "start": "364450",
    "end": "369940"
  },
  {
    "text": "own so that's an orchestration tool so here's a couple of them so UCS kubernetes docker swarm mezzos there's",
    "start": "369940",
    "end": "376300"
  },
  {
    "text": "all kinds of orchestration tools out there and ultimately they're all solving a similar problem in slightly different",
    "start": "376300",
    "end": "381490"
  },
  {
    "text": "ways or very different ways depending on on what the tool is right that how can i deploy manage and scale all of these",
    "start": "381490",
    "end": "387490"
  },
  {
    "text": "moving pieces and if you're just looking at AWS because this is an AWS seven there are a few options on on AWS for",
    "start": "387490",
    "end": "395470"
  },
  {
    "text": "this container orchestration so a little bit of recap before we dig into things so Amazon ECS available now it's being",
    "start": "395470",
    "end": "404100"
  },
  {
    "text": "available for quite a while I believe since 2014 that's what I used as a",
    "start": "404100",
    "end": "409590"
  },
  {
    "text": "customer you have Amazon eks so the elastic container service for kubernetes",
    "start": "409590",
    "end": "414900"
  },
  {
    "text": "UCS is just elastic container service and we'll dig into these in a second because the acronyms are confusing then",
    "start": "414900",
    "end": "421650"
  },
  {
    "text": "there's Fargate mode for ECS which is also available now I believe in six different regions and then Fargate mode",
    "start": "421650",
    "end": "428760"
  },
  {
    "text": "for eks so to be announced coming sometime soon ish so what are these all",
    "start": "428760",
    "end": "436830"
  },
  {
    "text": "for so kind of moving from the bottom up so image registry so where can you store",
    "start": "436830",
    "end": "441930"
  },
  {
    "text": "all these different versions of your images its Amazon you see are the management part of that so what I just",
    "start": "441930",
    "end": "447000"
  },
  {
    "text": "kind of talked about the deployment scheduling scaling all that good stuff UCS for eks hosting so where the",
    "start": "447000",
    "end": "455160"
  },
  {
    "text": "containers run for gate or ec2 I think that that's a little bit misleading",
    "start": "455160",
    "end": "460530"
  },
  {
    "text": "right because ultimately one of the dirty secrets I feel like if Internet is it I don't feel like everything just",
    "start": "460530",
    "end": "466500"
  },
  {
    "text": "kind of runs on easy - at some point right so far gate is a layer on top of that and it means that you're not",
    "start": "466500",
    "end": "472620"
  },
  {
    "text": "managing any of those ec2 instances yourself but it is there is still easy",
    "start": "472620",
    "end": "477630"
  },
  {
    "text": "to because every time I say anything someone tweets me and says there are still servers and server lists there are",
    "start": "477630",
    "end": "483780"
  },
  {
    "text": "so you see two instances in Fargate but you're not the one personally responsible for them so there you go and",
    "start": "483780",
    "end": "489710"
  },
  {
    "text": "so what does this look like if you're confused by all of the acronyms so if",
    "start": "489710",
    "end": "494910"
  },
  {
    "text": "you want to run a managed container on AWS your first step is what you want your orchestration tool to be so that's",
    "start": "494910",
    "end": "501690"
  },
  {
    "text": "ECS or eks so that's basically the Amazon version or kubernetes we use the same open-source version of kubernetes",
    "start": "501690",
    "end": "508200"
  },
  {
    "text": "as you can on your lonesome after that you choose your launch type so right now",
    "start": "508200",
    "end": "513900"
  },
  {
    "text": "that's ec2 mode or Fargate mode confusingly enough easy to mode is what",
    "start": "513900",
    "end": "520289"
  },
  {
    "text": "was just regular ECS before Fargate came out so if you've been using ECS from",
    "start": "520290",
    "end": "527100"
  },
  {
    "text": "before Fargate what's now called ec2 mode that's what was traditionally just",
    "start": "527100",
    "end": "533130"
  },
  {
    "text": "ECS now you have another option which is to run it in Fargate mode and what that comes down to is how much control do you",
    "start": "533130",
    "end": "539950"
  },
  {
    "text": "want or need so with Fargate only manage things at the container and task level and at ECS",
    "start": "539950",
    "end": "546579"
  },
  {
    "text": "manage everything down to the ec2 level so it's just it's a balance between how",
    "start": "546579",
    "end": "552010"
  },
  {
    "text": "much control you want or how much control you need but that's the choice for eks right now only an ec2 mode so",
    "start": "552010",
    "end": "559029"
  },
  {
    "text": "it's like the original ECS with Fargate mode so the ec2 lists mode coming some",
    "start": "559029",
    "end": "565750"
  },
  {
    "text": "time other than now so far gate because today is only about Fargate huh Oh",
    "start": "565750",
    "end": "574440"
  },
  {
    "text": "someone was outside and I thought that they were talking to me but they weren't anyway um so far game no instances to",
    "start": "574440",
    "end": "582699"
  },
  {
    "text": "manage everything kind of scales up and down for you so you can define things",
    "start": "582699",
    "end": "588490"
  },
  {
    "text": "the same way that you couldn't ECS with it which is here's one of my service would you scale up or down but there's no like provisioning pools of",
    "start": "588490",
    "end": "595060"
  },
  {
    "text": "infrastructure so with ec2 right in easy to mode so ECS traditionally I realized",
    "start": "595060",
    "end": "600160"
  },
  {
    "text": "that this is confusing also because everything is secretly named UCS with",
    "start": "600160",
    "end": "605230"
  },
  {
    "text": "traditional kind of e CS and you see two mode you have two levels of scaling that you're responsible for the service level",
    "start": "605230",
    "end": "612250"
  },
  {
    "text": "which is the task level so how many copies of each tasks you want running and then the ec2 level so how many",
    "start": "612250",
    "end": "617920"
  },
  {
    "text": "instances belong to my cluster Fargate only do the service level scaling the",
    "start": "617920",
    "end": "624370"
  },
  {
    "text": "same kind of AWS integration as you get with other services so V PC load",
    "start": "624370",
    "end": "629470"
  },
  {
    "text": "balancing I am permissions cloud watch all that good stuff so what are you talking about remember",
    "start": "629470",
    "end": "637510"
  },
  {
    "text": "this right so running one container is easy but managing many containers is harder ECS makes that easier right",
    "start": "637510",
    "end": "646300"
  },
  {
    "text": "so handle some of the scheduling an orchestration we talked at the beginning about why we need to orchestration tools you have a cluster manager you have a",
    "start": "646300",
    "end": "652750"
  },
  {
    "text": "placement engine that's what determines things like I say that I need four copies of the tap this tasks running ECS",
    "start": "652750",
    "end": "659319"
  },
  {
    "text": "will handle that for me if it scales up in response to an event it will handle that for me so ECS makes that easier and",
    "start": "659319",
    "end": "667329"
  },
  {
    "text": "this should be familiar to a lot of you scales you get service integrations things like that at the container level",
    "start": "667329",
    "end": "673149"
  },
  {
    "text": "you can interview with other AWS services but it's not totally hands-off still so far gate it lets you focus on",
    "start": "673149",
    "end": "680529"
  },
  {
    "text": "your application right I mean my favorite way of explaining this is when",
    "start": "680529",
    "end": "685629"
  },
  {
    "text": "someone asks you for a sandwich they aren't asking you to put them in charge of a global sandwich logistics chain",
    "start": "685629",
    "end": "690819"
  },
  {
    "text": "they just want a sandwich so they don't want to know how to slice tomatoes or where do you get turkey from or what",
    "start": "690819",
    "end": "697749"
  },
  {
    "text": "kind of cheese do you want or how do i toast the bread or is mayo really an acceptable alternative to muster it or",
    "start": "697749",
    "end": "704199"
  },
  {
    "text": "Miracle Whip they don't care they just want to eat the sandwich so forget for me it's just a sandwich I don't have to",
    "start": "704199",
    "end": "709480"
  },
  {
    "text": "worry about how it happens or how it's made or how you eat it it's just there so people are using this so producthunt",
    "start": "709480",
    "end": "717129"
  },
  {
    "text": "is a good example so they run their whole website as microservices as a ruby graph QL nodejs front end and they were",
    "start": "717129",
    "end": "725049"
  },
  {
    "text": "looking for a way that they could scale really quickly and then schedule multi container workloads but still have",
    "start": "725049",
    "end": "730389"
  },
  {
    "text": "control over their network layer so they've been all-in on AWS they moved",
    "start": "730389",
    "end": "735459"
  },
  {
    "text": "their whole infrastructure to AWS and Fargate back in January 2018 Fargate",
    "start": "735459",
    "end": "741309"
  },
  {
    "text": "skills quickly with the traffic spikes so it lets them do things like scale up really quickly ever in in relation to an",
    "start": "741309",
    "end": "749410"
  },
  {
    "text": "announcement or a viral campaign and you've used product time before it's",
    "start": "749410",
    "end": "754869"
  },
  {
    "text": "kind of a good example of things going viral right because it's posting new services new apps new things and then",
    "start": "754869",
    "end": "761079"
  },
  {
    "text": "the whole kind of point is that that's how you can discover new contents and",
    "start": "761079",
    "end": "766269"
  },
  {
    "text": "new applications new apps new games new products so it's important to them that",
    "start": "766269",
    "end": "771910"
  },
  {
    "text": "they can scale up really quickly in response to something like a quick traffic spike because they want to be able to handle that prior to that all",
    "start": "771910",
    "end": "778269"
  },
  {
    "text": "the infrastructure was on Heroku for the last four years and they have a lot of inner service communication they didn't",
    "start": "778269",
    "end": "784779"
  },
  {
    "text": "want them so they had a I think a pretty cool use case right were they they had a lot of complicated stuff going on",
    "start": "784779",
    "end": "790749"
  },
  {
    "text": "network wise but they didn't want to manage their own infrastructure they only wanted to control over the park",
    "start": "790749",
    "end": "795759"
  },
  {
    "text": "that was that was important to them so here's a cool architecture diagram",
    "start": "795759",
    "end": "801260"
  },
  {
    "text": "so you can see how it's working right now so it goes through an application load balancer that's what alb stands for",
    "start": "801260",
    "end": "807250"
  },
  {
    "text": "can route through their private subnet so to their back-end web service their front-end web service they have a card",
    "start": "807250",
    "end": "814250"
  },
  {
    "text": "or scraper service then that goes to an internal application load balancer or runs background jobs and sidekick goes",
    "start": "814250",
    "end": "823040"
  },
  {
    "text": "then to their internal servers and then it backs everything with reticent Postgres and this is a quote from from",
    "start": "823040",
    "end": "829519"
  },
  {
    "text": "pirate hunt and they said that they moved to far gate because they need it to be able to scale up really quickly from the baseline run these multi",
    "start": "829519",
    "end": "835639"
  },
  {
    "text": "container workloads but then keep that network control so the same use case that I just explained right which is",
    "start": "835639",
    "end": "840709"
  },
  {
    "text": "that they needed control and they're the ability to customize over the parts that matter to them but they didn't want to",
    "start": "840709",
    "end": "846649"
  },
  {
    "text": "kind of manage all the other ec2 parts so a couple other ones for you Accenture",
    "start": "846649",
    "end": "852079"
  },
  {
    "text": "product hunt smart atronics all kinds of cool stuff so let's get deeper so the",
    "start": "852079",
    "end": "859250"
  },
  {
    "text": "easiest way I think for to think about Fargate is in comparison to e CS and ec2",
    "start": "859250",
    "end": "864680"
  },
  {
    "text": "mode because I think that that's kind of the baseline for which this makes sense",
    "start": "864680",
    "end": "870220"
  },
  {
    "text": "so the way that it were looks if you're on the console and this is probably the",
    "start": "870220",
    "end": "875839"
  },
  {
    "text": "the first time that you can see a big difference right is that you go to us create a new task definition so you go",
    "start": "875839",
    "end": "881570"
  },
  {
    "text": "to get started and your first choice is which launch type you want to run it in so launched I have mode our synonyms in",
    "start": "881570",
    "end": "888560"
  },
  {
    "text": "this particular case so you pick from there and then you get a difference in",
    "start": "888560",
    "end": "893959"
  },
  {
    "text": "how things are controlled between the two of them so how did the piece of ECS map back to traditional workloads so if",
    "start": "893959",
    "end": "900740"
  },
  {
    "text": "you're still in the kind of breaking it down from monolith to microservices stage this is a good place for you to be",
    "start": "900740",
    "end": "907610"
  },
  {
    "text": "at so an instance is an ec2 box so once you've registered it to a cluster you can run and place your tasks there a",
    "start": "907610",
    "end": "914930"
  },
  {
    "text": "service is how you manage and place your tasks so that's what controls I have two",
    "start": "914930",
    "end": "920360"
  },
  {
    "text": "copies of this running and six copies of this running and one copy of that other tasks running and a task is that",
    "start": "920360",
    "end": "926569"
  },
  {
    "text": "container wrapper around a process that's running on the instance so these are all very comparable back to things",
    "start": "926569",
    "end": "932269"
  },
  {
    "text": "that you would run kind of outside ECS right they're all the same familiar pieces just kind of structured",
    "start": "932269",
    "end": "938850"
  },
  {
    "text": "a little bit differently so with ECS you're responsible for all three of these kind of sections so instances and",
    "start": "938850",
    "end": "945570"
  },
  {
    "text": "services and tasks you can figure those through an mi so either through the ECS",
    "start": "945570",
    "end": "951839"
  },
  {
    "text": "optimize one or through easy to user data if you're me services and tasks and",
    "start": "951839",
    "end": "957180"
  },
  {
    "text": "all be configured to the API you can either access that directly or you can go through the CLI tasks go through task",
    "start": "957180",
    "end": "963450"
  },
  {
    "text": "definitions containers go through container definitions so compute works you choose your own instance type you",
    "start": "963450",
    "end": "969960"
  },
  {
    "text": "get any kind of combination of resources that you want you can control that through an auto scaling group launch",
    "start": "969960",
    "end": "975210"
  },
  {
    "text": "configuration like you would for any other set of ec2 instances supports things like Windows GPUs spot instances",
    "start": "975210",
    "end": "982020"
  },
  {
    "text": "are eyes bring whatever instance type you'd like so for gate a lot of",
    "start": "982020",
    "end": "989490"
  },
  {
    "text": "similarities and quite a few differences so same schema so define everything",
    "start": "989490",
    "end": "995160"
  },
  {
    "text": "through a task definition use the same set of API is to launch forget containers easily switch back and forth",
    "start": "995160",
    "end": "1003160"
  },
  {
    "text": "so you can actually run hybrid clusters too because people always ask me which",
    "start": "1003160",
    "end": "1008300"
  },
  {
    "text": "one they're supposed to use and like when should they migrate all the way over or migrate all the way in the other",
    "start": "1008300",
    "end": "1014150"
  },
  {
    "text": "direction and I think that for me what it would probably look like is I'd end up running both so I'd keep things in",
    "start": "1014150",
    "end": "1020120"
  },
  {
    "text": "easy to mode if I needed a level of control over things like easy to user data or I needed to use a spot instance",
    "start": "1020120",
    "end": "1026178"
  },
  {
    "text": "or an RI or I needed to attach GPU and I'd use for gate for things that I",
    "start": "1026179",
    "end": "1031520"
  },
  {
    "text": "didn't need access to those things for so if I could define everything that the task definition and the container",
    "start": "1031520",
    "end": "1037370"
  },
  {
    "text": "definition I'd use far gate and if not I'd use these two two mode but you can run them side-by-side in the same",
    "start": "1037370",
    "end": "1042709"
  },
  {
    "text": "cluster so the same cluster can have both launch types in it that's also how",
    "start": "1042709",
    "end": "1048050"
  },
  {
    "text": "you migrate by the way so I actually had a customer on twitch earlier today I",
    "start": "1048050",
    "end": "1053120"
  },
  {
    "text": "think Harry's and when they switched over from easy to mode to far gate mode",
    "start": "1053120",
    "end": "1059090"
  },
  {
    "text": "they basically made equivalents of all of their services in the Fargate launch type and then different paths and their",
    "start": "1059090",
    "end": "1066380"
  },
  {
    "text": "alb and they just which traffic over because ultimately they're just changing the launch type so",
    "start": "1066380",
    "end": "1072800"
  },
  {
    "text": "that they could make equivalents to all their services just with a different mode you share primitives between",
    "start": "1072800",
    "end": "1078890"
  },
  {
    "text": "Fargate and nice yes or needs to - mode with all kind of the familiar AWS pieces",
    "start": "1078890",
    "end": "1084800"
  },
  {
    "text": "so VPC cloud watch I am so for forgetting you're responsible for only two of these sections so services and",
    "start": "1084800",
    "end": "1091130"
  },
  {
    "text": "tasks instances are not configured by you so that means less work but also a",
    "start": "1091130",
    "end": "1096920"
  },
  {
    "text": "little bit less control so you can't currently use things like GPUs or our eyes or spot instances can't choose your",
    "start": "1096920",
    "end": "1103430"
  },
  {
    "text": "own instance type Fargate just handles placing things for you same way to",
    "start": "1103430",
    "end": "1108950"
  },
  {
    "text": "control it to figure everything though it's still through the same set of VAP of api's so compute works a little bit",
    "start": "1108950",
    "end": "1116330"
  },
  {
    "text": "differently in Fargate - don't you can't choose any combination you can choose from a set of combinations so a sliding",
    "start": "1116330",
    "end": "1124370"
  },
  {
    "text": "scale of CPU to memory so not infinite resources but can get some pretty hefty",
    "start": "1124370",
    "end": "1131300"
  },
  {
    "text": "tasks in there so how do you know what to choose and ultimately and everyone",
    "start": "1131300",
    "end": "1137930"
  },
  {
    "text": "always yells at me for copying copying out the answer here but it depends on what you are doing right so the answer",
    "start": "1137930",
    "end": "1143720"
  },
  {
    "text": "for me it's not the same answer for you or for the person sitting next to you or if the person in the back of the room it's what you want to do so I think for",
    "start": "1143720",
    "end": "1151910"
  },
  {
    "text": "a lot of people what maybe makes sense in a lot of scenarios is that if you're starting out and you're just moving over",
    "start": "1151910",
    "end": "1158300"
  },
  {
    "text": "from monolith to micro-services or if you're just kind of feeling out the whole container thing maybe you start",
    "start": "1158300",
    "end": "1164120"
  },
  {
    "text": "with Fargate and then as you find that you need maybe a little bit more control for a certain task or actually I needed",
    "start": "1164120",
    "end": "1171380"
  },
  {
    "text": "to support this docker option that's not supported in the UI and I need to do that three easy to user data maybe look",
    "start": "1171380",
    "end": "1178130"
  },
  {
    "text": "at running something in ec2 mode and you don't have to switch everything it's not one or the other it's a combination of",
    "start": "1178130",
    "end": "1183320"
  },
  {
    "text": "both for some things that you might need to cost to customize you'll want easy to",
    "start": "1183320",
    "end": "1188630"
  },
  {
    "text": "mode so getting even more specific so we're gonna walk through how you'd build something like a tic-tac-toe game",
    "start": "1188630",
    "end": "1194390"
  },
  {
    "text": "application called score keep and then we're gonna look at all the different pieces that you'd want to configure our",
    "start": "1194390",
    "end": "1199700"
  },
  {
    "text": "application so compute network storage permissions and logging so",
    "start": "1199700",
    "end": "1205690"
  },
  {
    "text": "constructions in Fargate or constructs in Fargate um so first I have to register my caste definition we talked",
    "start": "1205690",
    "end": "1212270"
  },
  {
    "text": "about that earlier that's how kind of I define everything that's what container",
    "start": "1212270",
    "end": "1217400"
  },
  {
    "text": "image that I'm using so the URL that I'll pull it from my CPU and memory requirements I then run a task that's a",
    "start": "1217400",
    "end": "1225650"
  },
  {
    "text": "running copy of my task definition I need to use the forget launch type I'll",
    "start": "1225650",
    "end": "1230840"
  },
  {
    "text": "have to create an elastic load balancer so for Fargate I can only use application load balancers or network load balancers I can't use the ELP",
    "start": "1230840",
    "end": "1239000"
  },
  {
    "text": "classic different reasons for that I think by the way that if you're using",
    "start": "1239000",
    "end": "1244310"
  },
  {
    "text": "micro services and containers any way that you're better served by an alb anyway and that's because it lets you do",
    "start": "1244310",
    "end": "1251620"
  },
  {
    "text": "content path based routing so previously",
    "start": "1251620",
    "end": "1256990"
  },
  {
    "text": "so if you were using an e lb classic with micro services I basically needed",
    "start": "1256990",
    "end": "1262370"
  },
  {
    "text": "to have 1 lb for every service so if I ran a staging service and a production",
    "start": "1262370",
    "end": "1267380"
  },
  {
    "text": "service for 15 different internal services that was a lot of load bouncers",
    "start": "1267380",
    "end": "1273050"
  },
  {
    "text": "and not only is that annoying and there's many pages to scroll through I",
    "start": "1273050",
    "end": "1278120"
  },
  {
    "text": "can never quite find the one I want it's kind of a funky process but and it's it",
    "start": "1278120",
    "end": "1284060"
  },
  {
    "text": "binds you to another resource requirement which is port right so if I have an application that runs in a",
    "start": "1284060",
    "end": "1289880"
  },
  {
    "text": "specific port so we'll pick 8080 one because for some reason that's my favorite port I do not know why I only",
    "start": "1289880",
    "end": "1296600"
  },
  {
    "text": "have one port 8081 on an instance and it is a hard restraint to get any more port 8081 I",
    "start": "1296600",
    "end": "1304190"
  },
  {
    "text": "need to have a whole new instance it has one more of my port 8081 but that to me",
    "start": "1304190",
    "end": "1311150"
  },
  {
    "text": "seems a little antiquated right because if I'm not scaling up with one whole instance like I am from monolith why",
    "start": "1311150",
    "end": "1317960"
  },
  {
    "text": "should I have to scale up just because I want port 8081 and they were like why me what if you roll your own logic to dynamically",
    "start": "1317960",
    "end": "1324530"
  },
  {
    "text": "choose a port and the answer would be that I do not want to do that I want something else to allocate the port for",
    "start": "1324530",
    "end": "1330410"
  },
  {
    "text": "me so I have good news so that's kind of the my favorite maybe",
    "start": "1330410",
    "end": "1335779"
  },
  {
    "text": "under launched future of alb is it lets you do dynamic port allocation which means that I can pass in port 0 I only",
    "start": "1335779",
    "end": "1342320"
  },
  {
    "text": "pass in my container port I pass 0 as the host port and then I use a target group in the alb and that will allocate",
    "start": "1342320",
    "end": "1348889"
  },
  {
    "text": "the port for me which means that my application that was previously bound to 8081 can now be on many different ports which",
    "start": "1348889",
    "end": "1356179"
  },
  {
    "text": "means I am not scaling up ec2 instances just for funsies so that was a digression but that's why",
    "start": "1356179",
    "end": "1365330"
  },
  {
    "text": "I'm Pro application load bouncer so service and you create and maintain and",
    "start": "1365330",
    "end": "1372799"
  },
  {
    "text": "running copies of your tasks in a lot of cases that might mean that I have a minimum number so I always want probably",
    "start": "1372799",
    "end": "1379909"
  },
  {
    "text": "at least 2 because we want high availability kids I have a minimum",
    "start": "1379909",
    "end": "1385100"
  },
  {
    "text": "number or maybe if maybe a minimum number of - I have a desired count of 4 and then I have a maximum count of 26",
    "start": "1385100",
    "end": "1391100"
  },
  {
    "text": "right and what's what controls how I scale up and down is that service level",
    "start": "1391100",
    "end": "1396769"
  },
  {
    "text": "auto scaling rules but the service is what's responsible for saying hey I have two copies running and I was supposed to",
    "start": "1396769",
    "end": "1402230"
  },
  {
    "text": "have four or hey this rule is just triggered I should run two more I can",
    "start": "1402230",
    "end": "1407240"
  },
  {
    "text": "integrate that with the load balancer my unhealthy tasks get replaced automatically on top of that my top",
    "start": "1407240",
    "end": "1414139"
  },
  {
    "text": "level is my cluster that's what defines kind of the boundaries of my infrastructure it gets an IM permission",
    "start": "1414139",
    "end": "1420950"
  },
  {
    "text": "role where you can access it and where it can perform actions on your behalf so a test definition is just a version",
    "start": "1420950",
    "end": "1427100"
  },
  {
    "text": "document it's immutable so when you do different copies different like updates",
    "start": "1427100",
    "end": "1432110"
  },
  {
    "text": "to your tasks so if I change my application code and I push a new image to ECR or docker hub or your own private",
    "start": "1432110",
    "end": "1439159"
  },
  {
    "text": "registry or wherever you're keeping your things I do that by pushing a new",
    "start": "1439159",
    "end": "1444259"
  },
  {
    "text": "revision of the test definition so if you're working with this it looks something like Abby's TAS definition :",
    "start": "1444259",
    "end": "1449960"
  },
  {
    "text": "one Abi's tasks a phoenician : - I give it a family my family would be a beast a",
    "start": "1449960",
    "end": "1455299"
  },
  {
    "text": "Stefan ition within that I get up to ten container definitions containers are all",
    "start": "1455299",
    "end": "1460580"
  },
  {
    "text": "co-located on the same host so if you're into networking that means that they can communicate via the local loopback",
    "start": "1460580",
    "end": "1466429"
  },
  {
    "text": "interface or 127 0.021 or localhost or whatever you're calling it now a container",
    "start": "1466429",
    "end": "1473570"
  },
  {
    "text": "definition has a name and has an image URL and it has all kinds of other things so for ECR for Fargate sorry ECR or",
    "start": "1473570",
    "end": "1481550"
  },
  {
    "text": "public registry repositories hopefully private repository is coming soon for",
    "start": "1481550",
    "end": "1487309"
  },
  {
    "text": "compute resources this is how you end up setting it so we looked at the sliding scale earlier but I have task level",
    "start": "1487309",
    "end": "1493670"
  },
  {
    "text": "resources and I have container level resources the task level means that it's shared between all containers they are",
    "start": "1493670",
    "end": "1499880"
  },
  {
    "text": "required container level resources controls the relative sharing of those",
    "start": "1499880",
    "end": "1505820"
  },
  {
    "text": "resources between containers so that might be something like I reserved 512",
    "start": "1505820",
    "end": "1512000"
  },
  {
    "text": "memory for this particular container but I have no res memory reservation for this other container so task level is",
    "start": "1512000",
    "end": "1519050"
  },
  {
    "text": "required that's the total container level resources are optional and that's how you relatively split that around the",
    "start": "1519050",
    "end": "1525020"
  },
  {
    "text": "containers that are running that's good by the way for things like if you have something that requires very little resources you can set that here and it",
    "start": "1525020",
    "end": "1533270"
  },
  {
    "text": "will let other more resource intensive containers that are part of that same task - ition take more of the resources",
    "start": "1533270",
    "end": "1539809"
  },
  {
    "text": "that you've allocated to that task so pricing you pay for what you provision I",
    "start": "1539809",
    "end": "1545210"
  },
  {
    "text": "you're billed at the task level for CPU and memory per second billing which is the new thing so let's talk about",
    "start": "1545210",
    "end": "1553220"
  },
  {
    "text": "networking because you didn't think that you could get away from any of my talks apparently without talking about networking even though it's 5:45 p.m.",
    "start": "1553220",
    "end": "1560059"
  },
  {
    "text": "and everybody is sleepy I swear it will be painless and if you're watching this",
    "start": "1560059",
    "end": "1565070"
  },
  {
    "text": "video later maybe you'll be also excited to talk about networking so traditional",
    "start": "1565070",
    "end": "1570110"
  },
  {
    "text": "dr networking you get three types you get dr. zero that's the default behavior that's called bridge it means that",
    "start": "1570110",
    "end": "1576290"
  },
  {
    "text": "containers in the same network can communicate via their IP address no automatic to server service discovery",
    "start": "1576290",
    "end": "1581960"
  },
  {
    "text": "you can connect them with - - link none no network interface only the local",
    "start": "1581960",
    "end": "1587330"
  },
  {
    "text": "loopback which I say that I'm going to explain shortly and then I deleted the slide so I'm not going to explain that",
    "start": "1587330",
    "end": "1594230"
  },
  {
    "text": "shortly I guess I'll explain it in just a second and host you can map directly to the",
    "start": "1594230",
    "end": "1600410"
  },
  {
    "text": "host network I have good news and I have bad news so the bad news is that Fargate uses a",
    "start": "1600410",
    "end": "1605520"
  },
  {
    "text": "different networking mode that is option e none of the above",
    "start": "1605520",
    "end": "1610950"
  },
  {
    "text": "we're going to talk about that so when I launched a far gate task it launches",
    "start": "1610950",
    "end": "1616110"
  },
  {
    "text": "into a subnet we create an e and I that's an elastic network interface that Eni is allocated a private IP from your",
    "start": "1616110",
    "end": "1623100"
  },
  {
    "text": "subnet if you're using forget you can optionally assign it a public IP the eni",
    "start": "1623100",
    "end": "1628500"
  },
  {
    "text": "is mapped to that task and your tasks now has just its own private or public",
    "start": "1628500",
    "end": "1633660"
  },
  {
    "text": "IP from your subnet I can then configure everything through security groups what",
    "start": "1633660",
    "end": "1639870"
  },
  {
    "text": "this means and what this allows us to do is that containers on the same host can use a local loopback interface which I",
    "start": "1639870",
    "end": "1646320"
  },
  {
    "text": "didn't explain but now you know that's what lets things communicate so localhost or one dot set 127.0.0.1",
    "start": "1646320",
    "end": "1654980"
  },
  {
    "text": "containers on the same host can always communicate that way but if you've attached the eni directly it means that",
    "start": "1654980",
    "end": "1660810"
  },
  {
    "text": "containers that are not on the same host can now communicate via that eni so via",
    "start": "1660810",
    "end": "1665880"
  },
  {
    "text": "that private IP or public IP chirping birds or crickets um anyway so what that",
    "start": "1665880",
    "end": "1674460"
  },
  {
    "text": "means is that it simplifies your networking a little bit because instead of having to go out for the internet looking up how to speak to your",
    "start": "1674460",
    "end": "1680670"
  },
  {
    "text": "container and then going back down you can just communicate through that e and nine through that private IP so it's",
    "start": "1680670",
    "end": "1686520"
  },
  {
    "text": "called a WSB PC it is the only networking mode that is available for",
    "start": "1686520",
    "end": "1692280"
  },
  {
    "text": "Fargate so when I said earlier that you only needed to change your launch type to work with Fargate I was lying a",
    "start": "1692280",
    "end": "1699660"
  },
  {
    "text": "little bit you also have to change your networking mode see how I realize just snuck that in at 5:30 p.m. just for you",
    "start": "1699660",
    "end": "1707670"
  },
  {
    "text": "yeah so you also had to change your networking mode but it's one of those things where like moving to application",
    "start": "1707670",
    "end": "1713640"
  },
  {
    "text": "load balancer that I think is a good thing it just might take a little bit of work for you to switch over but it is I",
    "start": "1713640",
    "end": "1720210"
  },
  {
    "text": "think a positive thing because ultimately I mean unless you like talking about networking as much as I do",
    "start": "1720210",
    "end": "1726390"
  },
  {
    "text": "I simplifies the process for you quite a bit so it's a it's a good change but it takes a little bit of work so VPC",
    "start": "1726390",
    "end": "1733380"
  },
  {
    "text": "configuration things how to run inside three pcs here's the part in the task definition where it enables",
    "start": "1733380",
    "end": "1739919"
  },
  {
    "text": "that Union I creation it's just passing an AWS CPC is the networking mode again",
    "start": "1739919",
    "end": "1744960"
  },
  {
    "text": "if you're doing far gate containers and if you're creating these to the console you'll have no other option if you're",
    "start": "1744960",
    "end": "1751230"
  },
  {
    "text": "switching over from ec2 mode you'll need to make that change yourself",
    "start": "1751230",
    "end": "1757039"
  },
  {
    "text": "so for load balancing configuration you do that when you create a service you",
    "start": "1757039",
    "end": "1762600"
  },
  {
    "text": "can't change that so once you've registered your service as a load balancer you cannot change the",
    "start": "1762600",
    "end": "1767940"
  },
  {
    "text": "load bouncer or rename it you would have to add a new load bouncer and recreate",
    "start": "1767940",
    "end": "1774419"
  },
  {
    "text": "the service and rewrite a start with a load balancer so you can only do it at create service can't change it here's an",
    "start": "1774419",
    "end": "1782190"
  },
  {
    "text": "example of what this might look like if you want internet-facing so my task is running in a private subnet it has a",
    "start": "1782190",
    "end": "1787259"
  },
  {
    "text": "private IP I have an application load balancer in a public subnet with a public IP I have to availability zones I",
    "start": "1787259",
    "end": "1794730"
  },
  {
    "text": "have an application load balancer security group that allows inbound traffic and then the security group can",
    "start": "1794730",
    "end": "1800070"
  },
  {
    "text": "allow inbound traffic from the alb to my actual tasks so for storage disk storage",
    "start": "1800070",
    "end": "1808460"
  },
  {
    "text": "EBS back to ephemeral storage you have a writable writable that's a hard word to say",
    "start": "1808460",
    "end": "1813690"
  },
  {
    "text": "apparently readable layer storage and volume storage so layer storage so this",
    "start": "1813690",
    "end": "1819480"
  },
  {
    "text": "is one of my other favorite things to talk about so apparently I like to talk about all the cool things which is port",
    "start": "1819480",
    "end": "1825359"
  },
  {
    "text": "allocation and disk space those are my top two so layer storage docker images",
    "start": "1825359",
    "end": "1833369"
  },
  {
    "text": "are composed of layers so that's a stack of read-only layers it's often an operating system or layers that you've",
    "start": "1833369",
    "end": "1839759"
  },
  {
    "text": "built on top of and then you get a relatively thin read/write layer on top of that that's file changes or anything",
    "start": "1839759",
    "end": "1845759"
  },
  {
    "text": "any data that you commit to the running container you get 10 gigabytes of layer storage available per task across all",
    "start": "1845759",
    "end": "1852659"
  },
  {
    "text": "containers that includes image layers writes are not visible between containers so if I write something in",
    "start": "1852659",
    "end": "1859710"
  },
  {
    "text": "one container I can't just see in another ephemeral that means the whole cattle not pets things when the",
    "start": "1859710",
    "end": "1867559"
  },
  {
    "text": "the tasks and container stops goodbye so if you have something that's super",
    "start": "1867559",
    "end": "1874399"
  },
  {
    "text": "important that you want to share perhaps store it somewhere that is not",
    "start": "1874399",
    "end": "1880610"
  },
  {
    "text": "ephemeral so volume storage if you need your rights to be visible so across",
    "start": "1880610",
    "end": "1886429"
  },
  {
    "text": "containers you can do 4 gigabytes of volume of space for tasks you can configure where you mount your volumes",
    "start": "1886429",
    "end": "1892669"
  },
  {
    "text": "and your task definitions amount of different paths also ephemeral so once",
    "start": "1892669",
    "end": "1898039"
  },
  {
    "text": "the task stops the volume is no longer running as well so for I am permissions",
    "start": "1898039",
    "end": "1904009"
  },
  {
    "text": "and you get a couple different types because this is 5:30 p.m. I saved you from multiple slides detailing every",
    "start": "1904009",
    "end": "1912169"
  },
  {
    "text": "level of this so now I just have one slide to rule them all your top level use your cluster permissions so that's who can launch and",
    "start": "1912169",
    "end": "1919039"
  },
  {
    "text": "describe tasks in your cluster next you have application permission so that what can your applications do to access AWS",
    "start": "1919039",
    "end": "1926509"
  },
  {
    "text": "resources and then you have housekeeping permissions which are us permissions and that's what lets us do things in your",
    "start": "1926509",
    "end": "1932539"
  },
  {
    "text": "behalf so things like pull images from ECR or Creon eyes or registrar targets",
    "start": "1932539",
    "end": "1939080"
  },
  {
    "text": "in your in your ELB so for visibility and monitoring cloud watch is really your best option",
    "start": "1939080",
    "end": "1945769"
  },
  {
    "text": "here that's AWS logs driver if you're configuring it through the CLI or through the UI you create a log group",
    "start": "1945769",
    "end": "1952850"
  },
  {
    "text": "and cloud watch you can configure the long drive whether your test definition and then you have to add obviously",
    "start": "1952850",
    "end": "1958429"
  },
  {
    "text": "permissions view the task execution role the task execution rule is what that",
    "start": "1958429",
    "end": "1963619"
  },
  {
    "text": "task can perform on your behalf also here's what it ends up looking like everyone has probably seen this before",
    "start": "1963619",
    "end": "1971590"
  },
  {
    "text": "other visibility tools so cloud watch emits a lot of events and if you're not",
    "start": "1971590",
    "end": "1977059"
  },
  {
    "text": "into cloud watch you can consume those events in whatever format your heart desires so you can bring them other",
    "start": "1977059",
    "end": "1983779"
  },
  {
    "text": "places you can use other monitoring platforms you can use visibility platforms you can use the durability",
    "start": "1983779",
    "end": "1988879"
  },
  {
    "text": "tools the world is your oyster cloud watch is really good I think it at",
    "start": "1988879",
    "end": "1994639"
  },
  {
    "text": "emitting and producing a ton of events and you get those kind of kind of natively so pretty much every aw",
    "start": "1994639",
    "end": "2001510"
  },
  {
    "text": "service will emit events it can be consumed by cloud watch great for triggering alarms and auto-scaling",
    "start": "2001510",
    "end": "2007660"
  },
  {
    "text": "groups and alerts not always the most visually attractive option which is fine",
    "start": "2007660",
    "end": "2014070"
  },
  {
    "text": "so if you want if you have a different graphing tool or if you've written your own custom logic around deployments or",
    "start": "2014070",
    "end": "2020230"
  },
  {
    "text": "alerting you can consume those however you'd like for frog a service and",
    "start": "2020230",
    "end": "2025900"
  },
  {
    "text": "service CPU and memory utilization metrics will be available in cloud watch so what that looks like altogether if I",
    "start": "2025900",
    "end": "2034270"
  },
  {
    "text": "want around my application to end up kind of with three different pieces I have my task definition I have my front",
    "start": "2034270",
    "end": "2040090"
  },
  {
    "text": "end container definition and I have my API container definition if you want to",
    "start": "2040090",
    "end": "2045280"
  },
  {
    "text": "run this yourself it's on AWS labs so there's two well to at least two AWS",
    "start": "2045280",
    "end": "2054580"
  },
  {
    "text": "kind of official ones on github the first one there's just an AWS one and that usually has things like the CLI but",
    "start": "2054580",
    "end": "2061898"
  },
  {
    "text": "there's also AWS labs and there's also one that I believe is called AWS samples",
    "start": "2061899",
    "end": "2067450"
  },
  {
    "text": "and I can't remember if it has a - in the name or not but if you look for it you'll find it so AWS labs has all kinds",
    "start": "2067450",
    "end": "2074710"
  },
  {
    "text": "of good stuff on it sometimes you have to dig for it a little bit but there's tons of demo projects and workshops and",
    "start": "2074710",
    "end": "2080378"
  },
  {
    "text": "walkthroughs and all kinds of cool stuff that you can play with on your own time",
    "start": "2080379",
    "end": "2085388"
  },
  {
    "text": "or you can pull and you can run AWS samples will often have some more generic samples so like cloud formation",
    "start": "2085389",
    "end": "2093340"
  },
  {
    "text": "templates that you could build off of for just like a generic back-end server example so check both of those out if",
    "start": "2093340",
    "end": "2101230"
  },
  {
    "text": "you're looking to obviously build things other than just my very small examples and this so what do we learn about for",
    "start": "2101230",
    "end": "2107680"
  },
  {
    "text": "our game new launch type if you're debating between both of them maybe try starting with Fargate if you think you",
    "start": "2107680",
    "end": "2115330"
  },
  {
    "text": "need access I actually had a really cool customer conversation today where they said that they were happy to be using",
    "start": "2115330",
    "end": "2123520"
  },
  {
    "text": "Friday because it just removed the whole option of people being able to exec into containers and that would force them to",
    "start": "2123520",
    "end": "2130270"
  },
  {
    "text": "do was consume those events in a way that let developers have",
    "start": "2130270",
    "end": "2135400"
  },
  {
    "text": "same kind of tooling but without requiring access to the actual container",
    "start": "2135400",
    "end": "2140980"
  },
  {
    "text": "itself and that's really cool because I think a big problem is I guess for",
    "start": "2140980",
    "end": "2146710"
  },
  {
    "text": "CloudFormation something we'd call it like configuration drift so all those things that happen between me applying",
    "start": "2146710",
    "end": "2152740"
  },
  {
    "text": "the template and then you running it or then maybe I ask the sage somewhere and",
    "start": "2152740",
    "end": "2158650"
  },
  {
    "text": "I just do that one thing or maybe like someone else does it or like maybe I SSH",
    "start": "2158650",
    "end": "2164020"
  },
  {
    "text": "in there and then I pulled something or I deployed a different version and and they said that because they didn't have",
    "start": "2164020",
    "end": "2170140"
  },
  {
    "text": "access to do that anymore that it forced them to always update things in their code and in their configuration and then",
    "start": "2170140",
    "end": "2176500"
  },
  {
    "text": "it kind of removed a whole area that had been causing them problems before so",
    "start": "2176500",
    "end": "2182339"
  },
  {
    "text": "there are some good reasons to require access to this so to use these two to mode obviously also so things like",
    "start": "2182339",
    "end": "2188680"
  },
  {
    "text": "dedicated instances or our eyes or spot instances so ultimately it depends on",
    "start": "2188680",
    "end": "2196029"
  },
  {
    "text": "what your actual use cases oops I'm not gonna read this whole thing out",
    "start": "2196029",
    "end": "2201160"
  },
  {
    "text": "loud but for me I think it really comes down to the level of customization that",
    "start": "2201160",
    "end": "2207039"
  },
  {
    "text": "you're wanting to do I'm always for the best combination of the least amount of work and only customizing the things",
    "start": "2207039",
    "end": "2214029"
  },
  {
    "text": "that I really personally need to do so find the balance that works for you but",
    "start": "2214029",
    "end": "2221170"
  },
  {
    "text": "you don't have to do it all by yourself so I do not expect anyone in here to be going to the going to the console every",
    "start": "2221170",
    "end": "2229480"
  },
  {
    "text": "day and hand crafting Fargate containers that sounds terrible so see allies that",
    "start": "2229480",
    "end": "2236740"
  },
  {
    "text": "I know of for far gaiter ECS generally they're generally they're shared because they're obviously there since their to",
    "start": "2236740",
    "end": "2242230"
  },
  {
    "text": "launch types or two modes for ultimately the same overarching service and their",
    "start": "2242230",
    "end": "2249640"
  },
  {
    "text": "seal often see Eliza support both of them so the official CLI is the same for both Fargate and ECS there's actually",
    "start": "2249640",
    "end": "2256569"
  },
  {
    "text": "two of them so the AWS CLI is the OG it's the original one it's open-source supports pretty much all AWS services so",
    "start": "2256569",
    "end": "2264130"
  },
  {
    "text": "you can use the same CLI for lambda and Kinesis and recognition and you yes and Fargate and everything i",
    "start": "2264130",
    "end": "2272170"
  },
  {
    "text": "included links for it if you're interested in that sort of thing the ECSC Li is also official but it's",
    "start": "2272170",
    "end": "2278200"
  },
  {
    "text": "just for faregates lashes yes biggest differentiator is that it only supports those two and not any other AWS services",
    "start": "2278200",
    "end": "2285250"
  },
  {
    "text": "and then it supports docker compose files so more information on that github",
    "start": "2285250",
    "end": "2290410"
  },
  {
    "text": "page I would say that the strongest factor for the ECSC Li is docker compose",
    "start": "2290410",
    "end": "2296680"
  },
  {
    "text": "so if that's a format that you're really invested in the way that you can support that on AWS is through the ECSC Li there",
    "start": "2296680",
    "end": "2304059"
  },
  {
    "text": "are some good unofficial options so the Fargate CLI is written by one of the AWS solutions architects it's called",
    "start": "2304059",
    "end": "2311230"
  },
  {
    "text": "the Fargate CLI which is awesome naming I like that one because it feels a little bit like the docker CLI so like",
    "start": "2311230",
    "end": "2317859"
  },
  {
    "text": "frog ate tasks run X or like Fargate service run whatever and it feels feels",
    "start": "2317859",
    "end": "2324849"
  },
  {
    "text": "very doc rate to me so I like that so what's next so most importantly I think",
    "start": "2324849",
    "end": "2332140"
  },
  {
    "text": "we want to hear from all of you so what we're thinking about in the future more focus on supporting these tasks is the",
    "start": "2332140",
    "end": "2339760"
  },
  {
    "text": "compute primitives we talked about that at reinvent and then probably again the San Francisco summon and at the London",
    "start": "2339760",
    "end": "2344890"
  },
  {
    "text": "summit but what's been really striking to me over the last couple of years is watching us support containers as kind",
    "start": "2344890",
    "end": "2354280"
  },
  {
    "text": "of a fundamental compute primitive so instead of always having to jump back out to the ec2 level to do things like",
    "start": "2354280",
    "end": "2361150"
  },
  {
    "text": "security groups or permissions or auto scaling rules I can do that at the task",
    "start": "2361150",
    "end": "2366819"
  },
  {
    "text": "level now as well and I think that that's really cool for me right because I shouldn't have to manage things at the",
    "start": "2366819",
    "end": "2374950"
  },
  {
    "text": "ec2 level when all I really want to run are the containers and I like seeing more and more things get supported at",
    "start": "2374950",
    "end": "2381430"
  },
  {
    "text": "the task level so like load balancing and networking it's all at the task level now but most importantly what we",
    "start": "2381430",
    "end": "2387010"
  },
  {
    "text": "build is driven is by feedback from people like all of you so things like",
    "start": "2387010",
    "end": "2392500"
  },
  {
    "text": "joining a user group or a meet-up or coming to a summit or reinvent her hanging out with us on Twitter or twitch",
    "start": "2392500",
    "end": "2398640"
  },
  {
    "text": "that's what drives our roadmap so let me know that your account man but your account manager no let your",
    "start": "2398640",
    "end": "2404650"
  },
  {
    "text": "friendly neighborhood as a know but let us know what you want to see so both from far gate or UCS or eks and that",
    "start": "2404650",
    "end": "2411010"
  },
  {
    "text": "actually goes for anything else on AWS too so if you learn anything from",
    "start": "2411010",
    "end": "2416640"
  },
  {
    "text": "hanging out and talking about networking at 5:00 p.m. tell someone right if you want to see",
    "start": "2416640",
    "end": "2423250"
  },
  {
    "text": "something if you want something to be implemented a certain way let us know because that's how we know what to build that will make the developers that are",
    "start": "2423250",
    "end": "2429850"
  },
  {
    "text": "working with AWS happy how can you get started so I added some links for you",
    "start": "2429850",
    "end": "2435670"
  },
  {
    "text": "all so far gay like a lot of AWS services recently has something called a",
    "start": "2435670",
    "end": "2440920"
  },
  {
    "text": "getting started wizard so if you go to the console it will walk you through the pieces of a far gate task and what the",
    "start": "2440920",
    "end": "2448570"
  },
  {
    "text": "different pieces mean and it will help you set it up there's a couple of blogs in there that's what the wizard looks",
    "start": "2448570",
    "end": "2454990"
  },
  {
    "text": "like by the way it's that big blue bar so if you haven't been to the console recently that's what that bar will do is it will walk you through Fargate there's",
    "start": "2454990",
    "end": "2462910"
  },
  {
    "text": "also something called the awesome ECS project and that's on Nathan pecks github so Nathan is one of the developer",
    "start": "2462910",
    "end": "2469120"
  },
  {
    "text": "advocates for containers here at AWS and he wrote this really cool github repo that's basically just community sourced",
    "start": "2469120",
    "end": "2476610"
  },
  {
    "text": "content on containers at AWS so it's blogs and workshops and demos and cool",
    "start": "2476610",
    "end": "2483370"
  },
  {
    "text": "open-source projects and tooling but it's it's all there if you've written something by the way that's not included",
    "start": "2483370",
    "end": "2488500"
  },
  {
    "text": "there you can open a pull request and he looks at them and you merges them but it's a really nice kind of community",
    "start": "2488500",
    "end": "2494290"
  },
  {
    "text": "backed piece of content or lots of pieces or a repository of content I",
    "start": "2494290",
    "end": "2500140"
  },
  {
    "text": "don't know what word I'm looking for but maybe its repository it's all together in one place and you can look at it so",
    "start": "2500140",
    "end": "2506920"
  },
  {
    "text": "if you're looking to see cuz that's how always I feel like I learned myself was by seeing what other people were doing and chances are if I'm trying to solve a",
    "start": "2506920",
    "end": "2514090"
  },
  {
    "text": "problem someone else has probably already solved it or if they're also struggling with the same thing than I am",
    "start": "2514090",
    "end": "2519790"
  },
  {
    "text": "maybe they'd want to see me writing about it too that's actually how I got my job as I wrote a blog post on how as",
    "start": "2519790",
    "end": "2526810"
  },
  {
    "text": "a customer I moved to ECS so the problems that you're working on are not always unique right there's someone out",
    "start": "2526810",
    "end": "2532630"
  },
  {
    "text": "there that could help you that could write about it so you should also be that person and write about it and go talking to",
    "start": "2532630",
    "end": "2538180"
  },
  {
    "text": "meet up or go talk at a user group or come hang out with me on Twitch there's also a bunch of workshops so here's one",
    "start": "2538180",
    "end": "2545590"
  },
  {
    "text": "by Brent who is if you were at the Fargate talk earlier that was this is the repeat of Brent is another one of",
    "start": "2545590",
    "end": "2553120"
  },
  {
    "text": "the developer out of a kids for containers we have many but he wrote this really cool workshop for Fargate",
    "start": "2553120",
    "end": "2560020"
  },
  {
    "text": "that walks you through I would I think like a more thorough example so it has it back in surveys it has a front end",
    "start": "2560020",
    "end": "2566230"
  },
  {
    "text": "services walks you through all the pieces is actually pretty nice it shows you how service discovery works if you",
    "start": "2566230",
    "end": "2573190"
  },
  {
    "text": "need a little help other than that there's some slack channels because everything now has a slack channel I'm",
    "start": "2573190",
    "end": "2578800"
  },
  {
    "text": "thinking about making my house plant a slack channel so that everyone can join me and discuss my house plant I'll",
    "start": "2578800",
    "end": "2585670"
  },
  {
    "text": "hopefully get a lot of notifications about it it's AWS developer slash calm",
    "start": "2585670",
    "end": "2591790"
  },
  {
    "text": "for my sins the best way to get into that is by messaging me on Twitter and",
    "start": "2591790",
    "end": "2596890"
  },
  {
    "text": "sending me your email address and within seven to ten business days I will probably see your message and I will",
    "start": "2596890",
    "end": "2603460"
  },
  {
    "text": "hopefully add you to the stock channel I try my best",
    "start": "2603460",
    "end": "2608500"
  },
  {
    "text": "terrible slack gatekeeper hopefully we make it public soon there's also a community run one which is probably",
    "start": "2608500",
    "end": "2615940"
  },
  {
    "text": "faster to get into there is a lot of people though in the AWS developers one so possibly worth my terrible turnaround",
    "start": "2615940",
    "end": "2623530"
  },
  {
    "text": "time and there's channels for lots of other things so there's a lot of people hanging out in the service container",
    "start": "2623530",
    "end": "2629020"
  },
  {
    "text": "serverless channel there's a containers channel there's a general channel and there's a bunch of AWS employees and",
    "start": "2629020",
    "end": "2635650"
  },
  {
    "text": "service team members hanging out in there as well so if you're looking if you have a question and you're looking",
    "start": "2635650",
    "end": "2640780"
  },
  {
    "text": "for someone on the service team to answer that is a sneaky way to maybe get an answer from someone on the product",
    "start": "2640780",
    "end": "2646240"
  },
  {
    "text": "teams or from me or from one of the other twelve / advocates or you can reach out to one of us directly so that",
    "start": "2646240",
    "end": "2652060"
  },
  {
    "text": "is my email address and my twitter handle that's also the twitter handles",
    "start": "2652060",
    "end": "2657280"
  },
  {
    "text": "of a bunch of the other days so that's Brent and Nathan who we just saw examples of their work Paul and Rick are",
    "start": "2657280",
    "end": "2664510"
  },
  {
    "text": "both in the UK so if you're looking for someone in the other side of the pond there are lots of easy sm4",
    "start": "2664510",
    "end": "2670070"
  },
  {
    "text": "gay fans and finally just like runner has said in the keynote this morning and",
    "start": "2670070",
    "end": "2675860"
  },
  {
    "text": "at the other summits this year please go build things so everyone is a builder here go build go innovate go",
    "start": "2675860",
    "end": "2683000"
  },
  {
    "text": "iterate go build something cool but I'm gonna add one more thing on top of what Vernor always says and that's go build",
    "start": "2683000",
    "end": "2688070"
  },
  {
    "text": "but also tell us about it so write a blog post write a talk go to a meet-up come and be a customer story here come",
    "start": "2688070",
    "end": "2695510"
  },
  {
    "text": "on Twitch tweet me about it but go build cool things but then tell us about it and then make sure that you tell the",
    "start": "2695510",
    "end": "2701450"
  },
  {
    "text": "community as well because the community is what makes things like open-source and these Amazon services cool is people",
    "start": "2701450",
    "end": "2707840"
  },
  {
    "text": "like you saying what you want to see us build what you built this cool way that you've done this till go build go tell",
    "start": "2707840",
    "end": "2714890"
  },
  {
    "text": "us about it if this is the end of the road for you I hope you enjoyed the New York summit there is I think probably one more",
    "start": "2714890",
    "end": "2722720"
  },
  {
    "text": "breakout session after this today I will be going back upstairs to twitch.tv slash",
    "start": "2722720",
    "end": "2728150"
  },
  {
    "text": "AWS will be will be recapping I think around 6:00 p.m. so come and join us",
    "start": "2728150",
    "end": "2733760"
  },
  {
    "text": "come hang out I hope you enjoyed the summit and if not I hope to see you all at an event very soon thank you for",
    "start": "2733760",
    "end": "2738830"
  },
  {
    "text": "coming [Applause]",
    "start": "2738830",
    "end": "2743420"
  }
]