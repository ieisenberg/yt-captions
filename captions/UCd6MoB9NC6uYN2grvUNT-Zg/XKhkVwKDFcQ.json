[
  {
    "start": "0",
    "end": "13000"
  },
  {
    "text": "in this video you'll see how to improve",
    "start": "640",
    "end": "2399"
  },
  {
    "text": "your application efficiency using amazon",
    "start": "2399",
    "end": "4640"
  },
  {
    "text": "code guru profiler",
    "start": "4640",
    "end": "6640"
  },
  {
    "text": "with this service you can analyze your",
    "start": "6640",
    "end": "8320"
  },
  {
    "text": "application performance visualize",
    "start": "8320",
    "end": "10160"
  },
  {
    "text": "profiling data and identify performance",
    "start": "10160",
    "end": "12400"
  },
  {
    "text": "issues",
    "start": "12400",
    "end": "14240"
  },
  {
    "start": "13000",
    "end": "88000"
  },
  {
    "text": "in this example we'll use code guru",
    "start": "14240",
    "end": "16080"
  },
  {
    "text": "profiler to analyze a sample python",
    "start": "16080",
    "end": "18240"
  },
  {
    "text": "application",
    "start": "18240",
    "end": "19359"
  },
  {
    "text": "to get started navigate from the aws",
    "start": "19359",
    "end": "21600"
  },
  {
    "text": "management console to amazon code guru",
    "start": "21600",
    "end": "25680"
  },
  {
    "text": "next select code guru profiler",
    "start": "25680",
    "end": "30039"
  },
  {
    "text": "first we'll create a profiling group",
    "start": "32160",
    "end": "33920"
  },
  {
    "text": "which is a set of applications that are",
    "start": "33920",
    "end": "35600"
  },
  {
    "text": "profiled together as a single unit",
    "start": "35600",
    "end": "39440"
  },
  {
    "text": "we can designate whether the code will",
    "start": "40559",
    "end": "42160"
  },
  {
    "text": "be run on aws lambda or some other",
    "start": "42160",
    "end": "44239"
  },
  {
    "text": "compute platform",
    "start": "44239",
    "end": "45840"
  },
  {
    "text": "let's retain the default selection and",
    "start": "45840",
    "end": "47600"
  },
  {
    "text": "create the group",
    "start": "47600",
    "end": "50239"
  },
  {
    "text": "next let's set up the codeguru profiler",
    "start": "51120",
    "end": "53440"
  },
  {
    "text": "agent for our python application",
    "start": "53440",
    "end": "56399"
  },
  {
    "text": "first we'll establish which aws identity",
    "start": "56399",
    "end": "58800"
  },
  {
    "text": "and access management or iam users and",
    "start": "58800",
    "end": "61359"
  },
  {
    "text": "roles can submit profiling data to the",
    "start": "61359",
    "end": "63120"
  },
  {
    "text": "profiling group with the agent",
    "start": "63120",
    "end": "66559"
  },
  {
    "text": "the next step is to run the agent",
    "start": "68240",
    "end": "69680"
  },
  {
    "text": "alongside our application to be profiled",
    "start": "69680",
    "end": "72240"
  },
  {
    "text": "we can enable the agent with code or",
    "start": "72240",
    "end": "74080"
  },
  {
    "text": "from the command line",
    "start": "74080",
    "end": "76960"
  },
  {
    "text": "we'll use the first method and import",
    "start": "79920",
    "end": "81759"
  },
  {
    "text": "the code guru profiler agent python",
    "start": "81759",
    "end": "83759"
  },
  {
    "text": "module within our applications code",
    "start": "83759",
    "end": "86320"
  },
  {
    "text": "let's open a cloud shell instance",
    "start": "86320",
    "end": "88880"
  },
  {
    "text": "first we'll use git to clone a",
    "start": "88880",
    "end": "90479"
  },
  {
    "text": "repository containing a sample",
    "start": "90479",
    "end": "92079"
  },
  {
    "text": "application that will run alongside the",
    "start": "92079",
    "end": "93920"
  },
  {
    "text": "agent",
    "start": "93920",
    "end": "95119"
  },
  {
    "text": "let's change our directory to the cloned",
    "start": "95119",
    "end": "96799"
  },
  {
    "text": "repositories local folder",
    "start": "96799",
    "end": "99600"
  },
  {
    "text": "next we'll change our directory to the",
    "start": "99600",
    "end": "101119"
  },
  {
    "text": "sample app folder",
    "start": "101119",
    "end": "103040"
  },
  {
    "text": "now let's create a virtual environment",
    "start": "103040",
    "end": "104799"
  },
  {
    "text": "where we'll install our sample",
    "start": "104799",
    "end": "106079"
  },
  {
    "text": "applications package dependencies as",
    "start": "106079",
    "end": "108079"
  },
  {
    "text": "well as the code guru profiler agent",
    "start": "108079",
    "end": "110000"
  },
  {
    "text": "module",
    "start": "110000",
    "end": "112479"
  },
  {
    "text": "let's activate the virtual environment",
    "start": "113200",
    "end": "114880"
  },
  {
    "text": "we just created",
    "start": "114880",
    "end": "117600"
  },
  {
    "text": "next we'll install the project",
    "start": "118000",
    "end": "119360"
  },
  {
    "text": "dependencies our application needs to",
    "start": "119360",
    "end": "121200"
  },
  {
    "text": "run in the virtual environment",
    "start": "121200",
    "end": "124479"
  },
  {
    "text": "next let's install the codeguru profiler",
    "start": "127200",
    "end": "129599"
  },
  {
    "text": "agent module into the virtual",
    "start": "129599",
    "end": "131039"
  },
  {
    "text": "environment",
    "start": "131039",
    "end": "133599"
  },
  {
    "text": "before we can run our application we",
    "start": "133840",
    "end": "135599"
  },
  {
    "text": "need to set a few environmental",
    "start": "135599",
    "end": "137040"
  },
  {
    "text": "variables",
    "start": "137040",
    "end": "139599"
  },
  {
    "text": "now let's run our application with the",
    "start": "141440",
    "end": "142959"
  },
  {
    "text": "code guru profiler agent",
    "start": "142959",
    "end": "146480"
  },
  {
    "text": "we need to wait for the agent to",
    "start": "146640",
    "end": "147920"
  },
  {
    "text": "generate data for the visualizations",
    "start": "147920",
    "end": "149599"
  },
  {
    "text": "we'll look at later this process can",
    "start": "149599",
    "end": "151440"
  },
  {
    "text": "take one to two hours but we'll speed it",
    "start": "151440",
    "end": "153280"
  },
  {
    "text": "up for the purposes of this example",
    "start": "153280",
    "end": "157319"
  },
  {
    "start": "157000",
    "end": "256000"
  },
  {
    "text": "now that the code guru profiler agent",
    "start": "158000",
    "end": "159920"
  },
  {
    "text": "has generated and sent enough data from",
    "start": "159920",
    "end": "161760"
  },
  {
    "text": "our running sample program to produce",
    "start": "161760",
    "end": "163440"
  },
  {
    "text": "useful visualizations let's drill into",
    "start": "163440",
    "end": "165599"
  },
  {
    "text": "the profiling group",
    "start": "165599",
    "end": "168480"
  },
  {
    "text": "here you can see the profiling group",
    "start": "168879",
    "end": "170400"
  },
  {
    "text": "status as well as the average cpu",
    "start": "170400",
    "end": "172480"
  },
  {
    "text": "utilization",
    "start": "172480",
    "end": "173840"
  },
  {
    "text": "let's visualize the cpu data",
    "start": "173840",
    "end": "177599"
  },
  {
    "text": "this flame graph shows the methods that",
    "start": "177920",
    "end": "179599"
  },
  {
    "text": "compose the running application",
    "start": "179599",
    "end": "181599"
  },
  {
    "text": "hovering over a method highlights all",
    "start": "181599",
    "end": "183280"
  },
  {
    "text": "occurrences of it in the chart and shows",
    "start": "183280",
    "end": "184959"
  },
  {
    "text": "the percentage of total time spent",
    "start": "184959",
    "end": "186480"
  },
  {
    "text": "executing it as well as a breakdown of",
    "start": "186480",
    "end": "188560"
  },
  {
    "text": "how much time the execution thread spent",
    "start": "188560",
    "end": "190560"
  },
  {
    "text": "waiting versus being in a runnable state",
    "start": "190560",
    "end": "193599"
  },
  {
    "text": "let's zoom in on the method by clicking",
    "start": "193599",
    "end": "195200"
  },
  {
    "text": "on it",
    "start": "195200",
    "end": "196879"
  },
  {
    "text": "we can also view cpu usage by hot spots",
    "start": "196879",
    "end": "201360"
  },
  {
    "text": "this view presents a top down stack view",
    "start": "202159",
    "end": "204480"
  },
  {
    "text": "with the most time consuming methods at",
    "start": "204480",
    "end": "206000"
  },
  {
    "text": "the top enabling you to quickly identify",
    "start": "206000",
    "end": "208000"
  },
  {
    "text": "the functions that consume the most time",
    "start": "208000",
    "end": "209599"
  },
  {
    "text": "in a cycle",
    "start": "209599",
    "end": "212480"
  },
  {
    "text": "in addition to cpu data we can also",
    "start": "212480",
    "end": "214640"
  },
  {
    "text": "investigate thread states that might",
    "start": "214640",
    "end": "216000"
  },
  {
    "text": "contribute to latency",
    "start": "216000",
    "end": "219120"
  },
  {
    "text": "this view shows the percentage of time",
    "start": "219360",
    "end": "221040"
  },
  {
    "text": "methods spent in a runnable state versus",
    "start": "221040",
    "end": "222959"
  },
  {
    "text": "a waiting state the methods that have",
    "start": "222959",
    "end": "224879"
  },
  {
    "text": "spent the most time running are at the",
    "start": "224879",
    "end": "226159"
  },
  {
    "text": "top of the chart",
    "start": "226159",
    "end": "227599"
  },
  {
    "text": "again we can see more details about a",
    "start": "227599",
    "end": "229360"
  },
  {
    "text": "method by hovering over it",
    "start": "229360",
    "end": "232560"
  },
  {
    "text": "we can also get an overview of the",
    "start": "237280",
    "end": "238640"
  },
  {
    "text": "latency data to explore the profile by",
    "start": "238640",
    "end": "240799"
  },
  {
    "text": "entry point to code",
    "start": "240799",
    "end": "243200"
  },
  {
    "text": "you've just seen how to improve your",
    "start": "243200",
    "end": "244560"
  },
  {
    "text": "application efficiency using amazon code",
    "start": "244560",
    "end": "246640"
  },
  {
    "text": "guru profiler",
    "start": "246640",
    "end": "248720"
  },
  {
    "text": "you can learn more about this topic in",
    "start": "248720",
    "end": "250239"
  },
  {
    "text": "the description and links for this video",
    "start": "250239",
    "end": "252239"
  },
  {
    "text": "thanks for watching now it's your turn",
    "start": "252239",
    "end": "253680"
  },
  {
    "text": "to try",
    "start": "253680",
    "end": "256840"
  }
]