[
  {
    "text": "I'm Alex and I'm a software engineer with the 8 OS SDK for Ruby team so my",
    "start": "0",
    "end": "6690"
  },
  {
    "text": "team and I we work on open source SDKs and toolkits for java.net Ruby",
    "start": "6690",
    "end": "13080"
  },
  {
    "text": "JavaScript Python PHP Go C++ the aid of",
    "start": "13080",
    "end": "18090"
  },
  {
    "text": "is CLI the windows powershell toolkit and a number of ide toolkits",
    "start": "18090",
    "end": "23189"
  },
  {
    "text": "so we definitely are making efforts to meet you where you are and I've slowed",
    "start": "23189",
    "end": "28260"
  },
  {
    "text": "us today we're gonna be focusing a bit on Ruby but there's also a lot of general knowledge about how you can",
    "start": "28260",
    "end": "33660"
  },
  {
    "text": "apply some DevOps techniques and app development techniques using our tools through applications so that's we're",
    "start": "33660",
    "end": "40170"
  },
  {
    "text": "going to cover today all right so to start off with I just wanted to give a",
    "start": "40170",
    "end": "45329"
  },
  {
    "text": "little bit of a retrospective on what we've been doing in the Ruby team through the course of 2017 so we",
    "start": "45329",
    "end": "53100"
  },
  {
    "text": "released our third major version of the ada s sdk for Ruby version 3 it is code",
    "start": "53100",
    "end": "60059"
  },
  {
    "text": "compatible with version 2 so if you're already using version 2 it should be an easy migration and of course if it's not",
    "start": "60059",
    "end": "66900"
  },
  {
    "text": "treated like a bug and file an issue against us we'd love to hear about it but it provides modular clients so I",
    "start": "66900",
    "end": "74900"
  },
  {
    "text": "don't know if or past a hundred and ten service count I'm sure by the end of this conference we're going to be if",
    "start": "74900",
    "end": "80850"
  },
  {
    "text": "we're not already but it provides modular clients so instead of depending on every service client whether or not",
    "start": "80850",
    "end": "87750"
  },
  {
    "text": "you use it you can pick and choose just the services that you care about to depend on which also lets you version",
    "start": "87750",
    "end": "94290"
  },
  {
    "text": "the different service clients independently which I know a lot of you been asking for it provides statically",
    "start": "94290",
    "end": "101729"
  },
  {
    "text": "generated code so it's going to load faster and when errors do come up the",
    "start": "101729",
    "end": "107340"
  },
  {
    "text": "stack traces are going to be much much easier to follow in Version three and it also provides concurrency",
    "start": "107340",
    "end": "113909"
  },
  {
    "text": "improvements so many of you might know that the Ruby standard library autoload",
    "start": "113909",
    "end": "119310"
  },
  {
    "text": "method is not thread safe and those of you who have been using the Ruby SDK and threaded applications in version 2 have",
    "start": "119310",
    "end": "127020"
  },
  {
    "text": "had to have some workarounds to get around that Version three fixes that we don't use autoload anymore except for at",
    "start": "127020",
    "end": "133050"
  },
  {
    "text": "the very highest service client level everything is eagerly required and because we have",
    "start": "133050",
    "end": "138430"
  },
  {
    "text": "statically generated code you still get good performance at load time version 3",
    "start": "138430",
    "end": "144220"
  },
  {
    "text": "is also supported by the other AWS rubygems that we have available for you so AWS record a library that ties into",
    "start": "144220",
    "end": "153640"
  },
  {
    "text": "dynamo DB which we're gonna be talking about today as well as the aid of is STK",
    "start": "153640",
    "end": "159640"
  },
  {
    "text": "Rails gem and of course if you want updates on what we're doing or if you",
    "start": "159640",
    "end": "164890"
  },
  {
    "text": "want to reach out with feedback you can find me and our team on twitter at AWS",
    "start": "164890",
    "end": "169900"
  },
  {
    "text": "for Ruby or Alex w-would so check us out",
    "start": "169900",
    "end": "176430"
  },
  {
    "text": "alright so let's talk a little bit about what we're gonna be doing today so we're",
    "start": "176430",
    "end": "182230"
  },
  {
    "text": "going to build almost from scratch a Ruby on Rails API that runs on Amazon",
    "start": "182230",
    "end": "188260"
  },
  {
    "text": "DynamoDB rather than a relational database using the AWS record library",
    "start": "188260",
    "end": "194580"
  },
  {
    "text": "we're going to define using AWS CloudFormation the infrastructure we need to run our application as well as a",
    "start": "194580",
    "end": "201400"
  },
  {
    "text": "code pipeline to manage and deploy it of course we're going to walk through some of what you can do with code pipeline",
    "start": "201400",
    "end": "207940"
  },
  {
    "text": "and we're going to talk about our newest Ruby feature which is generated API clients so those of you who use API",
    "start": "207940",
    "end": "214780"
  },
  {
    "text": "gateway you can now generate Ruby SDKs in the style of the Ruby SDK that you",
    "start": "214780",
    "end": "220660"
  },
  {
    "text": "use automatically through API gateway and we're gonna show like starting from",
    "start": "220660",
    "end": "226989"
  },
  {
    "text": "building the service defining its API and then actually getting a client and running it or even bootstrapping a",
    "start": "226989",
    "end": "233680"
  },
  {
    "text": "client to run integration tests inside your pipeline so it's kind of cool and I think it's going to tie it together",
    "start": "233680",
    "end": "238780"
  },
  {
    "text": "really well and all the code you need to check this out is available and github",
    "start": "238780",
    "end": "244329"
  },
  {
    "text": "right now and I'll have the link up again at the end of the talk if you are",
    "start": "244329",
    "end": "249609"
  },
  {
    "text": "kind of rushing to type that out but it's on reinvent 2017 def 207 code and",
    "start": "249609",
    "end": "256510"
  },
  {
    "text": "I've linked it out on Twitter well I'll leave it up again at the end of the talk so you can track it down but the code",
    "start": "256510",
    "end": "263200"
  },
  {
    "text": "that we're running through is all available on github if you want to play around with it",
    "start": "263200",
    "end": "268440"
  },
  {
    "text": "yeah so to talk a little bit to get a little bit more detail about what we're doing so again our rails API the back",
    "start": "268450",
    "end": "277010"
  },
  {
    "text": "end is dynamodb andr fronting it with api gateways so we're kind of going on both sides you what you might know about",
    "start": "277010",
    "end": "283700"
  },
  {
    "text": "api gateway is that you can have different targets for what your",
    "start": "283700",
    "end": "290090"
  },
  {
    "text": "different operations are running against it can run against the lambda function but it can also run against API",
    "start": "290090",
    "end": "295550"
  },
  {
    "text": "endpoints such as a rails application and that's what we're gonna do today",
    "start": "295550",
    "end": "300850"
  },
  {
    "text": "we're gonna use with in AWS code pipeline the ability to run unit tests",
    "start": "300850",
    "end": "306020"
  },
  {
    "text": "within code build as a first sanity check stage of any new deployment and",
    "start": "306020",
    "end": "311090"
  },
  {
    "text": "we're going to talk about how you can use AWS code deploy both with tagged instances for testing or auto scaling",
    "start": "311090",
    "end": "317600"
  },
  {
    "text": "groups in production we're also going to show you through a cloud formation template how you can define your",
    "start": "317600",
    "end": "323480"
  },
  {
    "text": "instance configuration your I am roles to handle credentials within your",
    "start": "323480",
    "end": "329690"
  },
  {
    "text": "application and tagging to tie it in together with all the rest of the infrastructure that we're building so to",
    "start": "329690",
    "end": "339110"
  },
  {
    "text": "start off with we're gonna build an example API and we're gonna do that using AWS record so what is AWS record",
    "start": "339110",
    "end": "347419"
  },
  {
    "text": "quick show of hands who's tried this out so far okay I've got a you got a few hands so I think it's something that's",
    "start": "347419",
    "end": "354800"
  },
  {
    "text": "pretty easy to use so I'd encourage a lot of you to play around with it and see if you find it useful but we're",
    "start": "354800",
    "end": "361340"
  },
  {
    "text": "gonna hopefully show how you can easily integrate it into a rails application today so AWS record is designed from the",
    "start": "361340",
    "end": "368150"
  },
  {
    "text": "ground up around Amazon DynamoDB so a lot of you said when we talked before",
    "start": "368150",
    "end": "373580"
  },
  {
    "text": "the talk started that you use the Ruby SDK for application development so",
    "start": "373580",
    "end": "378680"
  },
  {
    "text": "you're probably familiar with libraries like active record AWS record gives you",
    "start": "378680",
    "end": "384620"
  },
  {
    "text": "a very similar although not exactly the same API interface because of course DynamoDB is a no sequel database some of",
    "start": "384620",
    "end": "393410"
  },
  {
    "text": "the active record concepts around relations don't apply in the same way so",
    "start": "393410",
    "end": "398510"
  },
  {
    "text": "we include them and a DynamoDB itself gives you interesting types that relational",
    "start": "398510",
    "end": "405050"
  },
  {
    "text": "databases don't such as collection types map types even an database record has",
    "start": "405050",
    "end": "411380"
  },
  {
    "text": "built-in support for that of course DynamoDB being a faster the scaled",
    "start": "411380",
    "end": "416690"
  },
  {
    "text": "scalable no sequel database that gives you consistent latency no matter what",
    "start": "416690",
    "end": "422150"
  },
  {
    "text": "scale you're at can be very useful for these types of api's that we're developing where you want to be able to",
    "start": "422150",
    "end": "429230"
  },
  {
    "text": "scale up with your user base and we have basic crud operations so it's definitely",
    "start": "429230",
    "end": "435260"
  },
  {
    "text": "a very useful alternative for a lot of your rails applications either as a wholesale replacement for the databases",
    "start": "435260",
    "end": "441530"
  },
  {
    "text": "you're using now or for some of the use cases that you have such as like user sessions authentication and that kind of",
    "start": "441530",
    "end": "448190"
  },
  {
    "text": "thing and the ATIS record library doesn't force you to choose you can mix and match you can use it exclusively or",
    "start": "448190",
    "end": "455180"
  },
  {
    "text": "you can use it only for testing for example you can find it on rubygems at",
    "start": "455180",
    "end": "461060"
  },
  {
    "text": "AWS record version major version 1 of AWS record depends on version 2 of the",
    "start": "461060",
    "end": "467660"
  },
  {
    "text": "Ruby SDK we also have major version 2 of AWS record which again same code",
    "start": "467660",
    "end": "473120"
  },
  {
    "text": "interface except it depends only on the 8 OS SDK dynamodb gem which is part of",
    "start": "473120",
    "end": "480020"
  },
  {
    "text": "the modular clients that we're offering in version 3 of the SDK for Ruby it also",
    "start": "480020",
    "end": "487220"
  },
  {
    "text": "provides helpers for table configurations so migrations would work a little bit differently in dynamo DB",
    "start": "487220",
    "end": "493490"
  },
  {
    "text": "than it would in a relational database and so we're also going to explore a bit about how you can configure and manage",
    "start": "493490",
    "end": "499550"
  },
  {
    "text": "your tables from within your rails application so to start off with I",
    "start": "499550",
    "end": "505010"
  },
  {
    "text": "wanted to do a quick demo of how AWS record works so just because I don't",
    "start": "505010",
    "end": "513080"
  },
  {
    "text": "trust conference Wi-Fi some of these are going to be recorded demos and some of them are going to do it live this is going to be a coded 1 recorded",
    "start": "513080",
    "end": "520250"
  },
  {
    "text": "one so again very similarly to how you",
    "start": "520250",
    "end": "526520"
  },
  {
    "text": "might use active record you can define your objects we",
    "start": "526520",
    "end": "531950"
  },
  {
    "text": "similar constructors and you know you can see that it's got a lot of the dirty tracking underneath the covers in this",
    "start": "531950",
    "end": "540290"
  },
  {
    "text": "case we have a type that has some time stamps so we can define that and switch",
    "start": "540290",
    "end": "546200"
  },
  {
    "text": "it to UTC because we don't want to have a real big problem with customers across regions and it's easy to update your",
    "start": "546200",
    "end": "555800"
  },
  {
    "text": "item attributes of course if you have things like pry you're gonna get tab completion even though we're dynamically",
    "start": "555800",
    "end": "561560"
  },
  {
    "text": "generating the methods that you can use for getters and setters in your models",
    "start": "561560",
    "end": "567080"
  },
  {
    "text": "and it provides an tie in but you don't have to tie in with active model validation so in this case add a little",
    "start": "567080",
    "end": "574100"
  },
  {
    "text": "intentional failure where I didn't define the object body and it refused to save until I update it you can see the",
    "start": "574100",
    "end": "580190"
  },
  {
    "text": "error message at the bottom like you would have for any active record object you make so once you define a body your",
    "start": "580190",
    "end": "589460"
  },
  {
    "text": "validations can pass and in a similar fashion to how active record works are",
    "start": "589460",
    "end": "595220"
  },
  {
    "text": "able to save your object change and you can also update items so DynamoDB gives",
    "start": "595220",
    "end": "604670"
  },
  {
    "text": "you the ability to do up search so for example if you're using concepts like single table inheritance where you might have the same key set but totally",
    "start": "604670",
    "end": "611750"
  },
  {
    "text": "different attributes in the same table you're not going to be smashing the attributes that this doesn't know about",
    "start": "611750",
    "end": "617570"
  },
  {
    "text": "it's just going to be sticking to updates which is very handy if you don't",
    "start": "617570",
    "end": "622850"
  },
  {
    "text": "want to have a race condition where your items are getting smashed by whichever part of your application touched it last",
    "start": "622850",
    "end": "630490"
  },
  {
    "text": "so provides dirty tracking and we also have slightly more complicated dirty",
    "start": "630880",
    "end": "636380"
  },
  {
    "text": "tracking than active record because Ruby arrays and hashes are obviously mutable",
    "start": "636380",
    "end": "641510"
  },
  {
    "text": "so the dirty tracking of is the object different would simply say nope it's not nothing to change so we actually keep",
    "start": "641510",
    "end": "647960"
  },
  {
    "text": "copy deep copies and check against those to make sure that we're properly tracking changes to mutable types and if",
    "start": "647960",
    "end": "657320"
  },
  {
    "text": "you need better performance you can turn that off in configuration but again as",
    "start": "657320",
    "end": "664400"
  },
  {
    "text": "you can see the API is very similar to what you would find in active record so the hope is",
    "start": "664400",
    "end": "671480"
  },
  {
    "text": "that it's an easy transition if you want to start using this in developing applications without having to learn a",
    "start": "671480",
    "end": "678230"
  },
  {
    "text": "totally new way of managing your applications as a handy thing too if you",
    "start": "678230",
    "end": "683930"
  },
  {
    "text": "use methods like scan and query we give you lazy enumerators that aren't going",
    "start": "683930",
    "end": "689030"
  },
  {
    "text": "to fetch your whole table right away it's only going to grab it one page at a time based on what you're requesting so",
    "start": "689030",
    "end": "696950"
  },
  {
    "text": "that can be a handy way to say you know I want to scan and grab the first twenty items but I don't want to look at my",
    "start": "696950",
    "end": "702860"
  },
  {
    "text": "whole million item table to do it this is going to be smart about what calls it",
    "start": "702860",
    "end": "708890"
  },
  {
    "text": "makes so that's a little bit about AWS",
    "start": "708890",
    "end": "715790"
  },
  {
    "text": "record itself and what I want to talk about now is how we're actually going to",
    "start": "715790",
    "end": "722660"
  },
  {
    "text": "integrate it with our application so we have a rails application right now let's",
    "start": "722660",
    "end": "729110"
  },
  {
    "text": "say very similar to what you would have if you're just generating a default",
    "start": "729110",
    "end": "734150"
  },
  {
    "text": "application so the question then becomes how do I actually get a device record",
    "start": "734150",
    "end": "739370"
  },
  {
    "text": "working so let's walk through it using the open source repo that I linked",
    "start": "739370",
    "end": "745970"
  },
  {
    "text": "before and we'll link at the end of the talk okay so first up simple enough is",
    "start": "745970",
    "end": "753140"
  },
  {
    "text": "to include the gem",
    "start": "753140",
    "end": "756940"
  },
  {
    "text": "and I'll just go ahead and say that while we're doing like the live coding parts if anything is confusing or if you have any questions feel free to raise",
    "start": "760750",
    "end": "767800"
  },
  {
    "text": "your hand and let me know and I'm happy to walk through what we're doing so",
    "start": "767800",
    "end": "773649"
  },
  {
    "text": "simple enough add it to your gem file and then one pattern you can use is rake",
    "start": "773649",
    "end": "781240"
  },
  {
    "text": "tasks to handle your migrations so one thing to remember is if you're adding non key types to your DynamoDB table",
    "start": "781240",
    "end": "787449"
  },
  {
    "text": "there really isn't anything for it to do it's only gonna care about if you're adding key types index types or you're",
    "start": "787449",
    "end": "793600"
  },
  {
    "text": "changing things like capacity so we designed our table configuration and migrations to reflect that so if I were",
    "start": "793600",
    "end": "801430"
  },
  {
    "text": "to take a simple model and talk about how we would do migrations for it we",
    "start": "801430",
    "end": "807220"
  },
  {
    "text": "would implement it like this",
    "start": "807220",
    "end": "810569"
  },
  {
    "text": "so one thing is we can check what environment we're migrating from to have different behavior inside our table",
    "start": "818550",
    "end": "824850"
  },
  {
    "text": "configuration this is definitely a valid option",
    "start": "824850",
    "end": "830000"
  },
  {
    "text": "and we give you a handy DSL to help do that so in production and really for",
    "start": "837930",
    "end": "848580"
  },
  {
    "text": "both we're gonna use the item model class that we're gonna walk through defining later and we need to define our",
    "start": "848580",
    "end": "856320"
  },
  {
    "text": "read and write capacity and then we're",
    "start": "856320",
    "end": "864360"
  },
  {
    "text": "gonna do similar for test and development databases except maybe we'll",
    "start": "864360",
    "end": "870390"
  },
  {
    "text": "have a capacity of one so that we're saving a little bit of money when we don't need to actually scale up for users and then once we've defined that",
    "start": "870390",
    "end": "881180"
  },
  {
    "text": "it's as simple as running a configuration migrate for whatever you defined so the nice thing about it is if",
    "start": "881180",
    "end": "888570"
  },
  {
    "text": "you call the migration method if the remote table already matches it's not gonna do anything if the remote table is",
    "start": "888570",
    "end": "895830"
  },
  {
    "text": "a superset so it defines say global secondary indexes that your model doesn't know about we're using single",
    "start": "895830",
    "end": "902280"
  },
  {
    "text": "table inheritance it's not going to touch it if it's a superset it's gonna say that's fine too we also have a",
    "start": "902280",
    "end": "908160"
  },
  {
    "text": "method for migrating to exactly what you define so if you actually do intentionally want to overwrite any",
    "start": "908160",
    "end": "914670"
  },
  {
    "text": "additional configuration you have the option to do that but by default a migration is just going to make sure",
    "start": "914670",
    "end": "919860"
  },
  {
    "text": "that what's remote is at least a superset of what you defined and that's",
    "start": "919860",
    "end": "926400"
  },
  {
    "text": "all you really have to do to get table configuration working against your database okay so what is the application",
    "start": "926400",
    "end": "938700"
  },
  {
    "text": "we're going to build it's a rails 5 API so we're not going to have views we're just gonna be returning JSON and that's",
    "start": "938700",
    "end": "946170"
  },
  {
    "text": "gonna tie into our SDK development later and to keep it easy to follow so that we",
    "start": "946170",
    "end": "952620"
  },
  {
    "text": "can focus on the aw integrations more than the app itself just 5 crud methods creating an item getting an item that",
    "start": "952620",
    "end": "960480"
  },
  {
    "text": "you've created updating an item deleting an item and listing items with pagination so the the pagination one",
    "start": "960480",
    "end": "969270"
  },
  {
    "text": "gets a little bit more interesting but it's actually pretty easy to do with dynamodb so with",
    "start": "969270",
    "end": "976319"
  },
  {
    "text": "that let's actually code what this is gonna look like",
    "start": "976319",
    "end": "980990"
  },
  {
    "text": "okay so we have a little bit of a shell of a model class right now you'll notice that we're requiring the AWS record",
    "start": "991089",
    "end": "997550"
  },
  {
    "text": "library but other than that we haven't defined a whole lot so again what I'm trying to show is that this is pretty",
    "start": "997550",
    "end": "1003459"
  },
  {
    "text": "easy to do so we just need to include a debase record and then we can also",
    "start": "1003459",
    "end": "1016120"
  },
  {
    "text": "include active model validations so AWS record itself only depends on the AWS",
    "start": "1016120",
    "end": "1021819"
  },
  {
    "text": "SDK in the standard library we're not bringing in a large number of dependencies so if you'd like to use",
    "start": "1021819",
    "end": "1028928"
  },
  {
    "text": "something like active model validations we have hooks that tie in with it but it's purely optional so if for your",
    "start": "1028929",
    "end": "1034750"
  },
  {
    "text": "application that's gonna bring in way too many dependencies or you prefer a different validation library that's",
    "start": "1034750",
    "end": "1040058"
  },
  {
    "text": "totally fine you can use that one difference though and this is similar to",
    "start": "1040059",
    "end": "1046270"
  },
  {
    "text": "data mapping libraries is you actually have to define your types inside your",
    "start": "1046270",
    "end": "1051490"
  },
  {
    "text": "model and this is simply because for any non-key applications we have to give it",
    "start": "1051490",
    "end": "1057669"
  },
  {
    "text": "a hint or any non key attributes you have to give it a hint as to what the types are and what the naming is that",
    "start": "1057669",
    "end": "1063669"
  },
  {
    "text": "we're expecting on the remote end and we have documentation with examples inside",
    "start": "1063669",
    "end": "1070840"
  },
  {
    "text": "the Ruby dev documentation so if you want to try this out there's a lot of examples you can follow",
    "start": "1070840",
    "end": "1078059"
  },
  {
    "text": "and because we have activemodel validations and can I go back to our earlier example we can mark all of these",
    "start": "1091440",
    "end": "1099279"
  },
  {
    "text": "is required",
    "start": "1099279",
    "end": "1101849"
  },
  {
    "text": "okay and then if we're following the principle of trying to keep as much logic as possible out of your",
    "start": "1108040",
    "end": "1114100"
  },
  {
    "text": "controllers and in your models we can provide some helper methods that are going to be useful to the controller",
    "start": "1114100",
    "end": "1119950"
  },
  {
    "text": "methods we're gonna write later so creating an item is relatively simple",
    "start": "1119950",
    "end": "1126240"
  },
  {
    "text": "since we're decorating an ad base record we can just say create a new item right here so we're doing a model level method",
    "start": "1126240",
    "end": "1134980"
  },
  {
    "text": "rather than a class instance level method we don't want users to define",
    "start": "1134980",
    "end": "1142720"
  },
  {
    "text": "their own new UI DS so we'll bring it for them we take the body they provide",
    "start": "1142720",
    "end": "1152460"
  },
  {
    "text": "the current time",
    "start": "1152460",
    "end": "1156029"
  },
  {
    "text": "and we use that same time for both to create an updated date then we that and back for the controller to save so",
    "start": "1160790",
    "end": "1167630"
  },
  {
    "text": "pretty similar to what you'd already be doing with active record and similarly",
    "start": "1167630",
    "end": "1173000"
  },
  {
    "text": "for update items this item is already going to be hydrated with whatever was at the remote end so we just need to",
    "start": "1173000",
    "end": "1179780"
  },
  {
    "text": "take whatever attributes were allowing the user to change maybe updating the",
    "start": "1179780",
    "end": "1187520"
  },
  {
    "text": "updated date itself and then that's it",
    "start": "1187520",
    "end": "1193330"
  },
  {
    "text": "I'm not going to live code the list logic with pagination since it's a",
    "start": "1193330",
    "end": "1198470"
  },
  {
    "text": "little bit more complicated to follow but essentially we can take user-defined",
    "start": "1198470",
    "end": "1204710"
  },
  {
    "text": "limits which is similar to what you'd probably be experiencing if you're using the a device SDK itself with paginate",
    "start": "1204710",
    "end": "1210890"
  },
  {
    "text": "aday pis that we have we can use that lazy scan method and if you're writing a",
    "start": "1210890",
    "end": "1216860"
  },
  {
    "text": "query method you could do much the same with a lazy query enumerator and get",
    "start": "1216860",
    "end": "1221870"
  },
  {
    "text": "things one page at a time return that page of values to the user and give them a key that they can use for making a",
    "start": "1221870",
    "end": "1229880"
  },
  {
    "text": "subsequent call and then that way you're gonna start with dynamodb at that next page so I mean how many of you have",
    "start": "1229880",
    "end": "1236990"
  },
  {
    "text": "written paginate 'add api is using relational databases leave your hand up",
    "start": "1236990",
    "end": "1242420"
  },
  {
    "text": "if it's fun right so hopefully this is a little bit of an easier experience since",
    "start": "1242420",
    "end": "1249200"
  },
  {
    "text": "patination is built into the DynamoDB api it's a lot easier to interface with",
    "start": "1249200",
    "end": "1254350"
  },
  {
    "text": "and just for people watching on video not very many hands data for people finding pagination fun but honestly more",
    "start": "1254350",
    "end": "1260450"
  },
  {
    "text": "power to you if you find it fun I'm jealous alright so that's all we need for a",
    "start": "1260450",
    "end": "1267680"
  },
  {
    "text": "model now let's take a look at an item controller so oh no everything's empty",
    "start": "1267680",
    "end": "1274190"
  },
  {
    "text": "how long is it possibly going to take to fill this all out so again because we've",
    "start": "1274190",
    "end": "1280160"
  },
  {
    "text": "defined things in the model this is gonna be pretty close to what Rails scaffolding would look like in fact if",
    "start": "1280160",
    "end": "1286130"
  },
  {
    "text": "you use database record and you would really like to see built-in scaffolding find me later and tell me how much you",
    "start": "1286130",
    "end": "1291860"
  },
  {
    "text": "want that and see how her prioritizing necks I want to know how many people would be using that",
    "start": "1291860",
    "end": "1298659"
  },
  {
    "text": "alright so we're just defining the input so for list items we'd want to get our",
    "start": "1298840",
    "end": "1306230"
  },
  {
    "text": "next token if the user is providing one",
    "start": "1306230",
    "end": "1313030"
  },
  {
    "text": "and similarly for limits and it wouldn't",
    "start": "1315490",
    "end": "1327530"
  },
  {
    "text": "be a live demo if I'm not typoing some things from time to time and we'll just",
    "start": "1327530",
    "end": "1334070"
  },
  {
    "text": "make sure that that's an integer",
    "start": "1334070",
    "end": "1337179"
  },
  {
    "text": "and because we're not using views because it's a JSON API it's just as simple as JSON rendering the response",
    "start": "1347330",
    "end": "1352790"
  },
  {
    "text": "we're getting back from dynamodb through api gateway so pretty simple to deal",
    "start": "1352790",
    "end": "1359690"
  },
  {
    "text": "with for getting an item this is gonna be mostly magic as set item does all the",
    "start": "1359690",
    "end": "1365120"
  },
  {
    "text": "work but we'll define that later done",
    "start": "1365120",
    "end": "1373400"
  },
  {
    "text": "easy creating an item much similar we're",
    "start": "1373400",
    "end": "1381290"
  },
  {
    "text": "using the helper method that we've already made from the input we're",
    "start": "1381290",
    "end": "1389420"
  },
  {
    "text": "getting from the remote end using the safe parameter validations that rails provides",
    "start": "1389420",
    "end": "1395590"
  },
  {
    "text": "and if we're able to save it then we're gonna render the same thing the hash representation of our item if we're not",
    "start": "1404330",
    "end": "1413299"
  },
  {
    "text": "able to save it we can render an error to the user perhaps using the active",
    "start": "1413299",
    "end": "1421609"
  },
  {
    "text": "model validation errors that we got",
    "start": "1421609",
    "end": "1425200"
  },
  {
    "text": "update item is gonna be really similar so I'm actually gonna copy most of what",
    "start": "1431960",
    "end": "1438890"
  },
  {
    "text": "I've already done here and because we've",
    "start": "1438890",
    "end": "1444920"
  },
  {
    "text": "decorated our record class with update item the controller is doing almost",
    "start": "1444920",
    "end": "1449990"
  },
  {
    "text": "nothing and then destroying it again it's just the built-in active record like methods we can delete",
    "start": "1449990",
    "end": "1457580"
  },
  {
    "text": "the item all right and then set item",
    "start": "1457580",
    "end": "1468140"
  },
  {
    "text": "which is used for all the getters the leaders and updaters we can again just",
    "start": "1468140",
    "end": "1474800"
  },
  {
    "text": "use the find method which is a little bit different than active records in the",
    "start": "1474800",
    "end": "1482660"
  },
  {
    "text": "sense that we're gonna have you name the actual attributes that you're using as keys and also using a little bit of the",
    "start": "1482660",
    "end": "1490880"
  },
  {
    "text": "ruby - magic although you can use this with a ruby one nine six we're accepting an options hash but you probably",
    "start": "1490880",
    "end": "1497000"
  },
  {
    "text": "shouldn't be using Ruby 190 Ches to keep",
    "start": "1497000",
    "end": "1508160"
  },
  {
    "text": "as much backwards compatibility as we can with older versions of Ruby we're not going to make that our call so you",
    "start": "1508160",
    "end": "1514160"
  },
  {
    "text": "can get the item you returned it otherwise we can render a useful error",
    "start": "1514160",
    "end": "1519250"
  },
  {
    "text": "to the user",
    "start": "1519250",
    "end": "1522790"
  },
  {
    "text": "and we can provided some helpers to try to make it more useful for people developing SDKs",
    "start": "1538830",
    "end": "1546799"
  },
  {
    "text": "and that's basically all there is so that's all we have to do to integrate",
    "start": "1555540",
    "end": "1561370"
  },
  {
    "text": "AWS record completely with a new application if it's a simple cred a P I the models are similar and the",
    "start": "1561370",
    "end": "1568270"
  },
  {
    "text": "controllers are almost exactly the same as existing scaffolding other than the fact that we're just tying into the",
    "start": "1568270",
    "end": "1573760"
  },
  {
    "text": "model helpers we made okay so now we",
    "start": "1573760",
    "end": "1581560"
  },
  {
    "text": "have an application the next thing I want to talk about is how can we build an infrastructure around it so there's a",
    "start": "1581560",
    "end": "1590620"
  },
  {
    "text": "lot of ways to do this but today we're going to talk about a Debus cloud formation so for those of you not",
    "start": "1590620",
    "end": "1596230"
  },
  {
    "text": "familiar cloud formation helps you define the ADA base resources that you need for your application so for our API",
    "start": "1596230",
    "end": "1602500"
  },
  {
    "text": "we would need in Amazon ec2 instance since we're gonna be using code",
    "start": "1602500",
    "end": "1607810"
  },
  {
    "text": "pipelines we're gonna make sure that instance is tagged for ADA based code deploy we're going to configure it",
    "start": "1607810",
    "end": "1612880"
  },
  {
    "text": "security groups we're gonna provide identity and access management roles and",
    "start": "1612880",
    "end": "1617980"
  },
  {
    "text": "instance profiles so you'll notice when we defined our database record integrations they don't see anything about credentials there's nothing there",
    "start": "1617980",
    "end": "1625690"
  },
  {
    "text": "because with the default credential provider chain in the SDK if you have an",
    "start": "1625690",
    "end": "1631210"
  },
  {
    "text": "IM role on your instance if you don't defined any other credentials we'll find it pick it up and use it so if you're",
    "start": "1631210",
    "end": "1638140"
  },
  {
    "text": "using ec2 instance roles it's very easy to tie that in to your SDK credentials",
    "start": "1638140",
    "end": "1644850"
  },
  {
    "text": "and of course we're going to make sure that these roles have the ability to let",
    "start": "1644850",
    "end": "1650980"
  },
  {
    "text": "AWS code deploy run on the instance and we're gonna give it permissions to dynamodb otherwise this api is not going",
    "start": "1650980",
    "end": "1657130"
  },
  {
    "text": "to work very well at all we're also going to define our a Tobias code pipeline in different stages one thing",
    "start": "1657130",
    "end": "1664480"
  },
  {
    "text": "that's gonna be nice is we're going to try to tie this all together at the end by auto generating an SDK for our API",
    "start": "1664480",
    "end": "1669610"
  },
  {
    "text": "and running it for integration tests and we're not defining the Amazon DynamoDB",
    "start": "1669610",
    "end": "1675880"
  },
  {
    "text": "table in cloud formation and we're gonna let our rails applications table config",
    "start": "1675880",
    "end": "1681250"
  },
  {
    "text": "do that instead so that all that configuration stays in your code but you could do it either way",
    "start": "1681250",
    "end": "1688230"
  },
  {
    "text": "all right so let's walk through what this template is gonna look like and",
    "start": "1688649",
    "end": "1702399"
  },
  {
    "text": "again since there's a lot here this is going to be available on the github repo itself so you can take a look at it with",
    "start": "1702399",
    "end": "1707919"
  },
  {
    "text": "a bit more time but we're just gonna go through some of the highlights so it's not actually that big you tie in the V",
    "start": "1707919",
    "end": "1716379"
  },
  {
    "text": "PC in subnets you need but we're defining a role we're defining a profile",
    "start": "1716379",
    "end": "1723269"
  },
  {
    "text": "basic security groups in production you probably don't want to give the world as this age but I don't know what port",
    "start": "1723269",
    "end": "1729219"
  },
  {
    "text": "you're going to be running from we're going to define the instance itself for",
    "start": "1729219",
    "end": "1735879"
  },
  {
    "text": "testing a load balancer in production and auto-scaling launch configuration",
    "start": "1735879",
    "end": "1741549"
  },
  {
    "text": "for production auto scaling groups for production and the different artifacts",
    "start": "1741549",
    "end": "1748869"
  },
  {
    "text": "like a code commit repository in s3 bucket assume role policies everything",
    "start": "1748869",
    "end": "1755499"
  },
  {
    "text": "that we need to actually have a functioning code pipeline and you can take this with some small changes and",
    "start": "1755499",
    "end": "1761529"
  },
  {
    "text": "use this for your application as well it's kept as general as possible so",
    "start": "1761529",
    "end": "1767979"
  },
  {
    "text": "including test and deploy steps as well as code build for unit testing test",
    "start": "1767979",
    "end": "1775479"
  },
  {
    "text": "applications and groups so okay that's a lot to follow let's look at a few snippets so the pipeline itself is a bit",
    "start": "1775479",
    "end": "1784450"
  },
  {
    "text": "long but essentially what it does is it just ties into the different stages that you're creating in this case source unit",
    "start": "1784450",
    "end": "1792249"
  },
  {
    "text": "testing test environment like a gamma environment and production so a fairly",
    "start": "1792249",
    "end": "1798519"
  },
  {
    "text": "short pipeline and again in case I'm going a little bit quickly this is all",
    "start": "1798519",
    "end": "1803769"
  },
  {
    "text": "on the repo so you can pick through it at your leisure and if you have any questions about how any of this works",
    "start": "1803769",
    "end": "1809349"
  },
  {
    "text": "feel free to let me know so the question",
    "start": "1809349",
    "end": "1815889"
  },
  {
    "text": "is where you recommend storing the CloudFormation file if you're using it with parameters",
    "start": "1815889",
    "end": "1821549"
  },
  {
    "text": "you can store it in source code you can store it in a bucket it there's a lot of",
    "start": "1821549",
    "end": "1828389"
  },
  {
    "text": "answers to that question it depends a little bit also on how complex your application is like what is going to be",
    "start": "1828389",
    "end": "1834299"
  },
  {
    "text": "covered inside your CloudFormation template I'd be very interested to hear from people in the dev lounge like what",
    "start": "1834299",
    "end": "1840149"
  },
  {
    "text": "you're doing with your cloud formation templates now and how that's painful or working well for you because we'd like",
    "start": "1840149",
    "end": "1846059"
  },
  {
    "text": "to explore that so as far as a role goes",
    "start": "1846059",
    "end": "1851269"
  },
  {
    "text": "it's pretty simple we're using managed policy Arne's in this case which is the quickest way to get running but you can",
    "start": "1851269",
    "end": "1857220"
  },
  {
    "text": "actually define very fine-grained permissions that give you access to only",
    "start": "1857220",
    "end": "1862230"
  },
  {
    "text": "the resources you need if you wish but you can see here that this is actually not that hard to do and it gives you a",
    "start": "1862230",
    "end": "1869100"
  },
  {
    "text": "lot of security because in the end if somehow someone is able to break into your instance like you're leaving ports",
    "start": "1869100",
    "end": "1875580"
  },
  {
    "text": "open you have been securities in an application that comes up they're not going to be able to spin up ec2",
    "start": "1875580",
    "end": "1880889"
  },
  {
    "text": "instances and start Bitcoin mining they don't have the permissions to do it so",
    "start": "1880889",
    "end": "1887179"
  },
  {
    "text": "it helps maintain the best practice of using only the permissions that your application needs to try to have",
    "start": "1887179",
    "end": "1894090"
  },
  {
    "text": "security in-depth and then the ec2",
    "start": "1894090",
    "end": "1900210"
  },
  {
    "text": "instance itself is actually not that complicated for a test instance we just",
    "start": "1900210",
    "end": "1905399"
  },
  {
    "text": "have a single micro instance for testing running in a single subnet and the user",
    "start": "1905399",
    "end": "1913889"
  },
  {
    "text": "data is basically a base64 encoded way of saying please install and run the code deploy agent on my instance so",
    "start": "1913889",
    "end": "1921090"
  },
  {
    "text": "anything that you need to get your instance set up you can put that in the user data and if you want to actually",
    "start": "1921090",
    "end": "1929429"
  },
  {
    "text": "see this running so I've actually created this stack and you can see that",
    "start": "1929429",
    "end": "1935249"
  },
  {
    "text": "it creates a fair number of resources so there's a lot going on that we've made",
    "start": "1935249",
    "end": "1940789"
  },
  {
    "text": "from this cloud formation stack and the nice thing is if you're a developer and you have an application that uses cloud",
    "start": "1940789",
    "end": "1947249"
  },
  {
    "text": "formation you can spin up the actual stack you're going to use and test against it if you're writing new",
    "start": "1947249",
    "end": "1952830"
  },
  {
    "text": "features so it can be very handy something like that in question over here sure so he asked where in the",
    "start": "1952830",
    "end": "1965480"
  },
  {
    "text": "CloudFormation does it do the bundle installation and the answer is it doesn't do it in cloud formation it's",
    "start": "1965480",
    "end": "1971630"
  },
  {
    "text": "gonna do it in our code deploy configuration and we're gonna cover that in the next section but it's a good question all right so in one question",
    "start": "1971630",
    "end": "1985760"
  },
  {
    "text": "that I get fairly often and that I wanted to cover really quick is there's",
    "start": "1985760",
    "end": "1991040"
  },
  {
    "text": "a lot of deployment and management services there's a lot of integration services offered by it or guess which",
    "start": "1991040",
    "end": "1996799"
  },
  {
    "text": "one should I use which one is the right one and there really are no wrong",
    "start": "1996799",
    "end": "2001929"
  },
  {
    "text": "answers I've given a talk similar to this before using opsworks",
    "start": "2001929",
    "end": "2007020"
  },
  {
    "text": "it's built on Ruby that's a great option using AWS code pipeline with code build",
    "start": "2007020",
    "end": "2013480"
  },
  {
    "text": "and code deploy it's also a great option using cloud formation works elastic",
    "start": "2013480",
    "end": "2019330"
  },
  {
    "text": "Beanstalk works ways you can decide if you've made prior infrastructure decisions so if you used docker heavily",
    "start": "2019330",
    "end": "2026160"
  },
  {
    "text": "maybe you want to use ECS for your compute instances if your user of chef that probably answers your question for",
    "start": "2026160",
    "end": "2033220"
  },
  {
    "text": "you as well so this is one way to do it it's not the only way to do it but if",
    "start": "2033220",
    "end": "2038440"
  },
  {
    "text": "you're not sure what to do this is a pretty good place to start all right so",
    "start": "2038440",
    "end": "2044799"
  },
  {
    "text": "let's talk about those code pipeline deployments so for those of you not familiar AWS code pipeline is a",
    "start": "2044799",
    "end": "2051580"
  },
  {
    "text": "continuous delivery service and we're building something pretty similar to",
    "start": "2051580",
    "end": "2056800"
  },
  {
    "text": "this here although we don't have an explicit staging step but it gives you oughta mated workflows so basically as",
    "start": "2056800",
    "end": "2063368"
  },
  {
    "text": "soon as you push your changes up to the right branch it's gonna start running your tests and send it straight to",
    "start": "2063369",
    "end": "2069669"
  },
  {
    "text": "production if it's ready to go because these actions are automated it's less suffer you're not having to think about",
    "start": "2069669",
    "end": "2075908"
  },
  {
    "text": "it every change you deploy is gonna run through the same tests so and we have",
    "start": "2075909",
    "end": "2081908"
  },
  {
    "text": "our bootstrap client test if you have a sufficient integration tests for what you expect users to do and you accident'",
    "start": "2081909",
    "end": "2088658"
  },
  {
    "text": "slip of breaking change in your API well that clients gonna be different your integration test is not going to work",
    "start": "2088659",
    "end": "2094780"
  },
  {
    "text": "and that change is not going to ship so you're gonna protect yourself from making changes like that even if you",
    "start": "2094780",
    "end": "2100599"
  },
  {
    "text": "didn't realize you had made that mistake and because it's going to encourage you to use many small releases this is gonna",
    "start": "2100599",
    "end": "2107680"
  },
  {
    "text": "have a lot less risk I mean I think I've been developing professionally for about",
    "start": "2107680",
    "end": "2113140"
  },
  {
    "text": "seven years and I remember the era of monthly releases and I remember when I",
    "start": "2113140",
    "end": "2118240"
  },
  {
    "text": "switched over to daily releases and boy did my life get easier I'm sure some of",
    "start": "2118240",
    "end": "2123369"
  },
  {
    "text": "you can relate alright so as far as how we're using code pipeline in our own",
    "start": "2123369",
    "end": "2128770"
  },
  {
    "text": "application it's going to give us continuous delivery of our API you can",
    "start": "2128770",
    "end": "2134349"
  },
  {
    "text": "source from code commit or github we're gonna use code commit as our please start deploying this to production",
    "start": "2134349",
    "end": "2139690"
  },
  {
    "text": "signal you can use code deployed update your server instances so we've talked a",
    "start": "2139690",
    "end": "2144760"
  },
  {
    "text": "bit about this and we're gonna dive into the configuration here shortly and because it has custom commands that's",
    "start": "2144760",
    "end": "2152470"
  },
  {
    "text": "where we're gonna run our bundle installs and get our AWS record hooks so",
    "start": "2152470",
    "end": "2158410"
  },
  {
    "text": "let's go through a walk through that so",
    "start": "2158410",
    "end": "2163930"
  },
  {
    "text": "here's our pipeline again starting with code commit running code build tests",
    "start": "2163930",
    "end": "2169119"
  },
  {
    "text": "it's the same thing we defined in cloud formation and we also have our integration test and that's a bit cool",
    "start": "2169119",
    "end": "2174760"
  },
  {
    "text": "and we're gonna get to that at the end but when it comes to the pipeline",
    "start": "2174760",
    "end": "2183549"
  },
  {
    "text": "integrations so if we look at our application there's two files in here",
    "start": "2183549",
    "end": "2188650"
  },
  {
    "text": "that stand out there's a build spec which is what code build is gonna run to do unit tests so that's gonna do a",
    "start": "2188650",
    "end": "2194380"
  },
  {
    "text": "bundle install it's gonna do a record migration and tests and is just gonna run whatever unit tests you've defined",
    "start": "2194380",
    "end": "2200160"
  },
  {
    "text": "that's all that stage does when it comes time to actually run deployments it's",
    "start": "2200160",
    "end": "2206230"
  },
  {
    "text": "gonna use the app spec and that's gonna say take my source file copy everything",
    "start": "2206230",
    "end": "2211329"
  },
  {
    "text": "over to where it needs to go and then run an install dependencies script and",
    "start": "2211329",
    "end": "2217920"
  },
  {
    "text": "that script itself is where we're installing our VM",
    "start": "2217920",
    "end": "2224900"
  },
  {
    "text": "installing the version of Ruby we need running our bundle installs running our",
    "start": "2224900",
    "end": "2230190"
  },
  {
    "text": "record migrations setting the region that we're running in in case you run in multiple regions you can define that",
    "start": "2230190",
    "end": "2236010"
  },
  {
    "text": "through say environment variables and skip this so a few ways get there and then starting up our application so",
    "start": "2236010",
    "end": "2242310"
  },
  {
    "text": "within code deploy it's gonna run an arbitrary script that does whatever we need to do to set up and get running all",
    "start": "2242310",
    "end": "2253500"
  },
  {
    "text": "right so again this is what we built so far we have our CloudFormation template to spin up copies of our entire",
    "start": "2253500",
    "end": "2259410"
  },
  {
    "text": "application from pipeline to app servers we have the pipeline itself and we have",
    "start": "2259410",
    "end": "2265530"
  },
  {
    "text": "a rails API running on DynamoDB and we're going to talk a little bit about the API gateway fronting as well in the",
    "start": "2265530",
    "end": "2271650"
  },
  {
    "text": "next section but we have a working application at this point so now I want",
    "start": "2271650",
    "end": "2277230"
  },
  {
    "text": "to talk a little bit about generated clients but first I want to get a little bit emotional about SDK design so I",
    "start": "2277230",
    "end": "2285480"
  },
  {
    "text": "talked a little bit about our team we support a wide variety of SDKs and tools for over a hundred services and every",
    "start": "2285480",
    "end": "2292650"
  },
  {
    "text": "time I use a number the number is too low the number is always out-of-date we're launching new services and new",
    "start": "2292650",
    "end": "2298170"
  },
  {
    "text": "features on almost a daily basis across a bunch of different languages and toolkits if we were hand coding this",
    "start": "2298170",
    "end": "2305280"
  },
  {
    "text": "that's not sustainable it's not scalable it would be all we ever do I mean I'm",
    "start": "2305280",
    "end": "2310380"
  },
  {
    "text": "you know it's entirely possible that a release has happened right now and I don't even know about it check Twitter",
    "start": "2310380",
    "end": "2315600"
  },
  {
    "text": "and you can tell me but if you're using automated generation not only are gonna",
    "start": "2315600",
    "end": "2321840"
  },
  {
    "text": "have fewer bugs because once you test your generation you know that you're gonna be building your services",
    "start": "2321840",
    "end": "2327960"
  },
  {
    "text": "correctly you're not gonna have transcription mistakes we're oops I typed that parameter wrong everyone's broken now and you can actually scale so",
    "start": "2327960",
    "end": "2336690"
  },
  {
    "text": "if you're supporting over a hundred services and you're hitting feature launches every day in your SDK generation is automated that's going to",
    "start": "2336690",
    "end": "2343230"
  },
  {
    "text": "be way easier to deal with so that's what we've done in the Ruby SDK and the",
    "start": "2343230",
    "end": "2348840"
  },
  {
    "text": "other SDKs and now what we can do is bring that to you",
    "start": "2348840",
    "end": "2354090"
  },
  {
    "text": "so through Amazon API gateway not only can you front your rails API or any other application that you want you",
    "start": "2354090",
    "end": "2362520"
  },
  {
    "text": "actually can generate Ruby SDKs now automatically from the definition of",
    "start": "2362520",
    "end": "2367620"
  },
  {
    "text": "your API so really quickly just wanted to walk through the API gateway integrations that we have so there is a",
    "start": "2367620",
    "end": "2375870"
  },
  {
    "text": "swagger model in the repository but just to give a quick summary for those of you",
    "start": "2375870",
    "end": "2384870"
  },
  {
    "text": "familiar with swagger you can define operations like our create item operation takes an item input that has",
    "start": "2384870",
    "end": "2392970"
  },
  {
    "text": "the parameters we'd accept from a user and it's going to return an item structure and so that's how we're",
    "start": "2392970",
    "end": "2399150"
  },
  {
    "text": "actually gonna have an SDK that gives you actual static types for the API we",
    "start": "2399150",
    "end": "2404280"
  },
  {
    "text": "just defined and you can see an item structure here it's relatively simple to follow it has our four properties it",
    "start": "2404280",
    "end": "2412230"
  },
  {
    "text": "defines the types that they are an API gateways so if you have SDKs and not only Ruby but if you want to make SDKs",
    "start": "2412230",
    "end": "2417960"
  },
  {
    "text": "in Java JavaScript Android iOS you can do that it's all gonna have the same",
    "start": "2417960",
    "end": "2424200"
  },
  {
    "text": "experience and it can be automatically generated and if we go to API gateway",
    "start": "2424200",
    "end": "2432360"
  },
  {
    "text": "you can see now that it's as simple as running a console command or an API command you can get a Ruby SDK on-demand",
    "start": "2432360",
    "end": "2441859"
  },
  {
    "text": "sonya we've talked about that so now you can generate Ruby clients but here's",
    "start": "2444350",
    "end": "2449430"
  },
  {
    "text": "what's a little bit cool I want to get into a little bit of a walk through of",
    "start": "2449430",
    "end": "2455040"
  },
  {
    "text": "what you can do with these clients",
    "start": "2455040",
    "end": "2461480"
  },
  {
    "text": "alright so I've loaded up an SDK client for the API that we just made so if I",
    "start": "2464060",
    "end": "2470660"
  },
  {
    "text": "want to do paginating list items first I",
    "start": "2470660",
    "end": "2475700"
  },
  {
    "text": "should probably require a client cool",
    "start": "2475700",
    "end": "2483670"
  },
  {
    "text": "that's easy to reason about I'm not having to worry about as a customer what",
    "start": "2483670",
    "end": "2488780"
  },
  {
    "text": "is the wire protocol how do i marshal my parameters how do i unmarshal the response",
    "start": "2488780",
    "end": "2494210"
  },
  {
    "text": "it's just code it's just another object I'm interacting with so if I want to",
    "start": "2494210",
    "end": "2501230"
  },
  {
    "text": "create an item I don't know what I'm doing oh look it's gonna tell you what",
    "start": "2501230",
    "end": "2506840"
  },
  {
    "text": "parameters are required so it's going to bring that for you automatically if you",
    "start": "2506840",
    "end": "2512300"
  },
  {
    "text": "define that in your API",
    "start": "2512300",
    "end": "2515380"
  },
  {
    "text": "cool so that works I can take the ID from that response with helpful Auto",
    "start": "2523870",
    "end": "2532520"
  },
  {
    "text": "completion and I can get that item",
    "start": "2532520",
    "end": "2541150"
  },
  {
    "text": "same item I can update it",
    "start": "2546010",
    "end": "2549599"
  },
  {
    "text": "and again because we've modeled this we're telling the user which types of parameters we're going to accept and",
    "start": "2553380",
    "end": "2563970"
  },
  {
    "text": "it's going to give them validations if they make a mistake it doesn't know what",
    "start": "2563970",
    "end": "2570720"
  },
  {
    "text": "that is it's not going to send it over the wire",
    "start": "2570720",
    "end": "2574430"
  },
  {
    "text": "and we can delete that we can also and this is a little bit fun we can build in",
    "start": "2580040",
    "end": "2587610"
  },
  {
    "text": "some pagination to our method here so it's only gonna give me the number that",
    "start": "2587610",
    "end": "2593160"
  },
  {
    "text": "I asked for and then I can start going over pages using the previous responses",
    "start": "2593160",
    "end": "2600590"
  },
  {
    "text": "until there's no items left so the built in pagination is helpful so if user",
    "start": "2605390",
    "end": "2611040"
  },
  {
    "text": "really wants to scan over everything and you're gonna let them do that with the rate limits you provide they can do that",
    "start": "2611040",
    "end": "2616760"
  },
  {
    "text": "or if they only need the first few you're not going to be slamming your database every time they want to list",
    "start": "2616760",
    "end": "2621810"
  },
  {
    "text": "things so that's a little bit about what the client looks like but here's the fun",
    "start": "2621810",
    "end": "2627630"
  },
  {
    "text": "part I have a little integration tests that I wrote it's very simple and it",
    "start": "2627630",
    "end": "2634050"
  },
  {
    "text": "runs in a code build stage against our test environment and what this does is it's going to dynamically generate a new",
    "start": "2634050",
    "end": "2642690"
  },
  {
    "text": "SDK so how is it going to do that well",
    "start": "2642690",
    "end": "2648900"
  },
  {
    "text": "every time it runs it's going to call",
    "start": "2648900",
    "end": "2654120"
  },
  {
    "text": "out to API gateway and say generate me a new SDK and then it's going to put that",
    "start": "2654120",
    "end": "2660720"
  },
  {
    "text": "in a zip file it's going to open it up and it's going to install it and then",
    "start": "2660720",
    "end": "2666510"
  },
  {
    "text": "and you can do something much more sophisticated than this it's going to pretend that it's a user and it's going",
    "start": "2666510",
    "end": "2672000"
  },
  {
    "text": "to start making some of these same calls it's gonna make sure that they don't error out you can add any kind of",
    "start": "2672000",
    "end": "2677160"
  },
  {
    "text": "validation to the response as you want so you can pretend the Erie user which means that if you make a mistake like",
    "start": "2677160",
    "end": "2682980"
  },
  {
    "text": "the server's valid but it's a breaking change and it would break a customer you can find that out before you ever hit",
    "start": "2682980",
    "end": "2688620"
  },
  {
    "text": "production and you can bootstrap every language if you want as well so it gives",
    "start": "2688620",
    "end": "2694200"
  },
  {
    "text": "you a lot of flexibility and you can build this directly in your code",
    "start": "2694200",
    "end": "2699570"
  },
  {
    "text": "pipeline this is a very simple code build configuration all does is just",
    "start": "2699570",
    "end": "2708840"
  },
  {
    "text": "says run that script easy so that's some of the power of what",
    "start": "2708840",
    "end": "2716720"
  },
  {
    "text": "you can do with these auto-generated clients and hopefully that this is",
    "start": "2716720",
    "end": "2722990"
  },
  {
    "text": "something you find useful especially if you're using micro services or a service-oriented architecture and there's a question over here sure so the",
    "start": "2722990",
    "end": "2735800"
  },
  {
    "text": "question is how do you deal with authentication I'm assuming like in these generated clients so there's a few",
    "start": "2735800",
    "end": "2743420"
  },
  {
    "text": "ways you can do it and we give you all of the options API gateway does you can leave it unauthenticated and open you",
    "start": "2743420",
    "end": "2751430"
  },
  {
    "text": "can use custom authenticators so API gateway has support for this and we have a authorization plug-in in the Ruby SDK",
    "start": "2751430",
    "end": "2760160"
  },
  {
    "text": "so you can define what that authorization logic is and tie into it or if your API uses Identity and Access",
    "start": "2760160",
    "end": "2767570"
  },
  {
    "text": "Management permissions they can define that when creating a client the same way you would using the AWS SDK and it'll",
    "start": "2767570",
    "end": "2774680"
  },
  {
    "text": "run those same authentications just like they do it's SDK would so it gives you a few options all right so let's tie it",
    "start": "2774680",
    "end": "2783650"
  },
  {
    "text": "together so what do we actually build today question are here",
    "start": "2783650",
    "end": "2789010"
  },
  {
    "text": "to inject model logic what do you mean",
    "start": "2794960",
    "end": "2799910"
  },
  {
    "text": "so the question is if there's ways to add custom logic into the SDK generation it's not something that we have",
    "start": "2809859",
    "end": "2816140"
  },
  {
    "text": "currently but of course you can download the SDK make any customizations you want",
    "start": "2816140",
    "end": "2821240"
  },
  {
    "text": "before passing it on to customers but come down to the dev lounge I'd be",
    "start": "2821240",
    "end": "2826340"
  },
  {
    "text": "interested to hear about what you're trying to do and we can kind of pass that along yeah so again so what we've",
    "start": "2826340",
    "end": "2831590"
  },
  {
    "text": "built is a rails API using a dubious record we've generated clients",
    "start": "2831590",
    "end": "2838100"
  },
  {
    "text": "automatically from that and we've built an infrastructure around it so hopefully",
    "start": "2838100",
    "end": "2844970"
  },
  {
    "text": "this is something you find useful again I'm gonna leave this code slide up while we do the QA but follow us on Twitter if",
    "start": "2844970",
    "end": "2851330"
  },
  {
    "text": "you want to ask more questions or know more about what we're doing and hope",
    "start": "2851330",
    "end": "2857119"
  },
  {
    "text": "that you find this useful thank you so",
    "start": "2857119",
    "end": "2864890"
  },
  {
    "text": "we do have a microphone over here if people want to line up and ask questions but I'll take some questions from this side as well and just repeat them so",
    "start": "2864890",
    "end": "2870650"
  },
  {
    "text": "maybe a go one in one but question over here",
    "start": "2870650",
    "end": "2875350"
  },
  {
    "text": "sure so the question was about using docker and I think there are examples out there about how you can tie in",
    "start": "2889990",
    "end": "2896390"
  },
  {
    "text": "docker with CloudFormation or you can just use that directly you don't have to do it this way as we talked about before",
    "start": "2896390",
    "end": "2902530"
  },
  {
    "text": "but it's definitely an option and you know one thing - another way to speed it",
    "start": "2902530",
    "end": "2908210"
  },
  {
    "text": "up would be to bake your own image instance instead of using user data this is just one way to do it the ties",
    "start": "2908210",
    "end": "2914210"
  },
  {
    "text": "involve pipelines how long does this take to spin up I think this example is",
    "start": "2914210",
    "end": "2920180"
  },
  {
    "text": "about five minutes on medium instances for any new change although I think it gets much quicker after initial",
    "start": "2920180",
    "end": "2926210"
  },
  {
    "text": "installation because the bundle install on an existing instance is not going to have to start from scratch every time so",
    "start": "2926210",
    "end": "2931220"
  },
  {
    "text": "it goes down to less than a minute but this is also a small application so it depends and question from the mic user",
    "start": "2931220",
    "end": "2940309"
  },
  {
    "text": "so thank you for all to work on that thank you can you give a little background on how you came up with the",
    "start": "2940309",
    "end": "2945680"
  },
  {
    "text": "shapes JSON files that are auto-generated the history behind that cuz it's pretty cool and also any",
    "start": "2945680",
    "end": "2952359"
  },
  {
    "text": "thoughts on a new API interface like graph QL in the future do you know if anything's coming down the road because",
    "start": "2952359",
    "end": "2958640"
  },
  {
    "text": "a lot of the API is for different services are just really convoluted so for the like for API gateway or just for",
    "start": "2958640",
    "end": "2965230"
  },
  {
    "text": "services in general just like all the services have their own api's and all",
    "start": "2965230",
    "end": "2971569"
  },
  {
    "text": "their own ways and then you know you want to get databases but then you have to make seperate calls for tags and sure",
    "start": "2971569",
    "end": "2978260"
  },
  {
    "text": "um I'd love to hear in the dev lounge about like some of these pain points specifically so we can pass them on but",
    "start": "2978260",
    "end": "2984760"
  },
  {
    "text": "as far as like the history of some of the JSON stuff a lot of it was just trying to come up with how we could",
    "start": "2984760",
    "end": "2991940"
  },
  {
    "text": "actually scale to the you know sheer amount of new features that AWS is",
    "start": "2991940",
    "end": "2998180"
  },
  {
    "text": "launching without literally having that be all we do so it also provides",
    "start": "2998180",
    "end": "3003369"
  },
  {
    "text": "uniformity across SDKs all the SDKs are going to do it the same way honestly",
    "start": "3003369",
    "end": "3009970"
  },
  {
    "text": "this is probably a topic that I need to do a whole talk on because there's a lot to it and it's very interesting but yeah",
    "start": "3009970",
    "end": "3015700"
  },
  {
    "text": "thank you for that a question over here",
    "start": "3015700",
    "end": "3019950"
  },
  {
    "text": "sure so the question was if you're already running a large scale like millions of records production",
    "start": "3036800",
    "end": "3042230"
  },
  {
    "text": "application on a relational database like my sequel can you might great and then would you recommend it so as far as",
    "start": "3042230",
    "end": "3048650"
  },
  {
    "text": "can you migrate I would check out the database migration service this is",
    "start": "3048650",
    "end": "3054020"
  },
  {
    "text": "basically what that's built for some of the details are going to depend on like what does your model look like how",
    "start": "3054020",
    "end": "3059780"
  },
  {
    "text": "compatible is that going to be with dynamodb and as far as what I recommend it it depends on usage patterns it",
    "start": "3059780",
    "end": "3065450"
  },
  {
    "text": "depends on your scales so you know what dynamodb offers is definitely going to be consistency in your latency it's",
    "start": "3065450",
    "end": "3073820"
  },
  {
    "text": "going to give you that easy ability if you get to a really high read rate scale there's a lot that DynamoDB does really",
    "start": "3073820",
    "end": "3079490"
  },
  {
    "text": "well it's a hard question to answer in general what I recommend it but definitely at that scale also like reach",
    "start": "3079490",
    "end": "3086060"
  },
  {
    "text": "out to solutions architects you know that we definitely have people who specialize in that exact question cool",
    "start": "3086060",
    "end": "3092720"
  },
  {
    "text": "any other question over here",
    "start": "3092720",
    "end": "3096130"
  },
  {
    "text": "a question was how well does a debase record integrate with I assume other rails gems that provide some advanced",
    "start": "3104859",
    "end": "3111609"
  },
  {
    "text": "functionality I I haven't gotten feedback on that so I would love to if",
    "start": "3111609",
    "end": "3118359"
  },
  {
    "text": "you try that and you run into any problems I would love to hear about it as a feature request or as a bug report",
    "start": "3118359",
    "end": "3124630"
  },
  {
    "text": "is appropriate I know that we do have another gem that I didn't mention in the slide for using DynamoDB for user",
    "start": "3124630",
    "end": "3133720"
  },
  {
    "text": "session authentication that was a project we had in v1 that we actually",
    "start": "3133720",
    "end": "3138759"
  },
  {
    "text": "ported over recently to the newer versions of the SDK based on customer feedback so we've built some of that but",
    "start": "3138759",
    "end": "3144789"
  },
  {
    "text": "I would love to hear about these use cases and you know figure out how we can support them better",
    "start": "3144789",
    "end": "3150420"
  },
  {
    "text": "absolutely question over here sure so",
    "start": "3150420",
    "end": "3166630"
  },
  {
    "text": "the question was can you do the generated clients without API gateways so this feature in particular is tightly",
    "start": "3166630",
    "end": "3173140"
  },
  {
    "text": "integrated with API gateway I'd be interested to hear about what these use cases are for non API gateway generated",
    "start": "3173140",
    "end": "3182019"
  },
  {
    "text": "clients because it's a possible feature request",
    "start": "3182019",
    "end": "3186869"
  },
  {
    "text": "sure yeah if you tie in with API gateway",
    "start": "3192430",
    "end": "3212410"
  },
  {
    "text": "it's easy to do that now for separate from API gateway come find us in the dev",
    "start": "3212410",
    "end": "3218920"
  },
  {
    "text": "lounge I'd be interested to hear more question the microphone yeah do you have any plans to support Ruby on the lambda",
    "start": "3218920",
    "end": "3225609"
  },
  {
    "text": "platform do we have plans to support Ruby on lambda I will definitely take that feature request and pass it along",
    "start": "3225609",
    "end": "3232799"
  },
  {
    "text": "tweet at me about it I'm serious all right any other questions yeah question",
    "start": "3232799",
    "end": "3240430"
  },
  {
    "text": "over here",
    "start": "3240430",
    "end": "3242730"
  },
  {
    "text": "no one else have a question while he's thinking you got the floor so the",
    "start": "3251540",
    "end": "3266700"
  },
  {
    "text": "question was does 80s records support cross regions sharding it can so",
    "start": "3266700",
    "end": "3274440"
  },
  {
    "text": "natively what it's doing is it's saying I have a table in a certain region you",
    "start": "3274440",
    "end": "3279840"
  },
  {
    "text": "can be clever about it I'd be interested to talk with you about like how we might",
    "start": "3279840",
    "end": "3284910"
  },
  {
    "text": "configure it out and if that user experiences smooth it's not something that we've had a lot of feature requests for but so if you have separate tables",
    "start": "3284910",
    "end": "3297450"
  },
  {
    "text": "and like they're defined as separate tables you can make each table have a client a different region and you could",
    "start": "3297450",
    "end": "3304050"
  },
  {
    "text": "have those tables have even the same definition so there's ways to you can do",
    "start": "3304050",
    "end": "3310680"
  },
  {
    "text": "that now if there's questions about like how smooth had experiences that would be",
    "start": "3310680",
    "end": "3315780"
  },
  {
    "text": "an interesting one to explore and talk about how we can do that even better",
    "start": "3315780",
    "end": "3320960"
  },
  {
    "text": "well with the cloud formation piece I mean you can define so a device record can hook in with existing tables you",
    "start": "3322310",
    "end": "3328290"
  },
  {
    "text": "don't have to create your tables through a Tobias record it's a convenience method but so you can define that in",
    "start": "3328290",
    "end": "3334680"
  },
  {
    "text": "cloud formation and just hook into it with AWS record or you can you know",
    "start": "3334680",
    "end": "3340050"
  },
  {
    "text": "generate that with a dubious record the thing to watch out for is they were doing multi region to make sure that you",
    "start": "3340050",
    "end": "3345630"
  },
  {
    "text": "have access to those other regions so that your VP caesar set up the right way but that's a solvable problem",
    "start": "3345630",
    "end": "3352040"
  },
  {
    "text": "cool one last question over here",
    "start": "3352040",
    "end": "3356420"
  },
  {
    "text": "sure so I think to paraphrase your question and let me know if I'm paraphrasing it correctly when is a",
    "start": "3383940",
    "end": "3390640"
  },
  {
    "text": "higher-level query interface coming in a dubious record I would love to hear and reach out to the issues because we've",
    "start": "3390640",
    "end": "3396820"
  },
  {
    "text": "been asking about this I would love to hear like how you're constructing these where clauses now we'd love to get more",
    "start": "3396820",
    "end": "3402340"
  },
  {
    "text": "customer feedback about how you actually want that to look so that we can build the right thing for you so I definitely",
    "start": "3402340",
    "end": "3408670"
  },
  {
    "text": "love to hear a lot about how you're doing that now I will check back with",
    "start": "3408670",
    "end": "3420670"
  },
  {
    "text": "that on Twitter but I believe that we're talking about the dev lounge in the expo hall yes all right and then I think I",
    "start": "3420670",
    "end": "3426700"
  },
  {
    "text": "got to get out of here the clock is showing really low numbers so thanks again everyone for coming in for the great questions thank you",
    "start": "3426700",
    "end": "3433370"
  },
  {
    "text": "[Applause]",
    "start": "3433370",
    "end": "3437320"
  }
]