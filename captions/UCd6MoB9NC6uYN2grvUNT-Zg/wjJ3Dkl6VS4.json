[
  {
    "start": "0",
    "end": "36000"
  },
  {
    "text": "hi welcome to today's live broadcast my",
    "start": "9820",
    "end": "13310"
  },
  {
    "text": "name is Arielle Kelman and i'm here with",
    "start": "13310",
    "end": "14870"
  },
  {
    "text": "amazon CTO dr. Verner Vogel's we're also",
    "start": "14870",
    "end": "17600"
  },
  {
    "text": "joined by Swami Siva brimonidine the",
    "start": "17600",
    "end": "20150"
  },
  {
    "text": "general manager of the new service we're",
    "start": "20150",
    "end": "21740"
  },
  {
    "text": "announcing today and one of our",
    "start": "21740",
    "end": "23240"
  },
  {
    "text": "customers Don McCaskill the CEO smugmug",
    "start": "23240",
    "end": "25939"
  },
  {
    "text": "I want to thank everyone for joining us",
    "start": "25939",
    "end": "27679"
  },
  {
    "text": "we have over 5,500 people registered for",
    "start": "27679",
    "end": "30499"
  },
  {
    "text": "this event today so let's get started",
    "start": "30499",
    "end": "32090"
  },
  {
    "text": "with Verner Verner can you give us a",
    "start": "32090",
    "end": "33920"
  },
  {
    "text": "quick overview of the new service we",
    "start": "33920",
    "end": "35449"
  },
  {
    "text": "launched today ok so today we're",
    "start": "35449",
    "end": "38420"
  },
  {
    "start": "36000",
    "end": "74000"
  },
  {
    "text": "announcing a new database service called",
    "start": "38420",
    "end": "40039"
  },
  {
    "text": "DynamoDB so Amazon dynamodb is fully",
    "start": "40039",
    "end": "43640"
  },
  {
    "text": "managed no sequel database service that",
    "start": "43640",
    "end": "45949"
  },
  {
    "text": "provides extremely fast and predictable",
    "start": "45949",
    "end": "48590"
  },
  {
    "text": "performance with seamless scalability it",
    "start": "48590",
    "end": "51769"
  },
  {
    "text": "enables customers to upload the",
    "start": "51769",
    "end": "53420"
  },
  {
    "text": "administrative burdens of operating and",
    "start": "53420",
    "end": "55399"
  },
  {
    "text": "scaling distributed databases so they",
    "start": "55399",
    "end": "57710"
  },
  {
    "text": "don't have to worry about how we're",
    "start": "57710",
    "end": "58969"
  },
  {
    "text": "provisioning press patching",
    "start": "58969",
    "end": "61190"
  },
  {
    "text": "configuration cluster management things",
    "start": "61190",
    "end": "63679"
  },
  {
    "text": "like that so with DynamoDB we believe we",
    "start": "63679",
    "end": "66799"
  },
  {
    "text": "finally cracked the code on giving",
    "start": "66799",
    "end": "68750"
  },
  {
    "text": "developers or they've always wanted a",
    "start": "68750",
    "end": "70549"
  },
  {
    "text": "seamless scalability and zero",
    "start": "70549",
    "end": "72890"
  },
  {
    "text": "administration verner one of the things",
    "start": "72890",
    "end": "74689"
  },
  {
    "start": "74000",
    "end": "317000"
  },
  {
    "text": "I find really interesting about DynamoDB",
    "start": "74689",
    "end": "77000"
  },
  {
    "text": "is it seems like we've taken a lot of",
    "start": "77000",
    "end": "78649"
  },
  {
    "text": "the lessons we've learned around",
    "start": "78649",
    "end": "80030"
  },
  {
    "text": "operating very high scale databases and",
    "start": "80030",
    "end": "82610"
  },
  {
    "text": "essentially package them up into a new",
    "start": "82610",
    "end": "84649"
  },
  {
    "text": "web service is this a fair way to",
    "start": "84649",
    "end": "86299"
  },
  {
    "text": "characterize it yeah I think so so",
    "start": "86299",
    "end": "88520"
  },
  {
    "text": "managing and skating databases has",
    "start": "88520",
    "end": "90439"
  },
  {
    "text": "always been the Achilles heel of any",
    "start": "90439",
    "end": "92299"
  },
  {
    "text": "large-scale high performance web",
    "start": "92299",
    "end": "94610"
  },
  {
    "text": "application and whether you're skating a",
    "start": "94610",
    "end": "97070"
  },
  {
    "text": "traditional database and there's only",
    "start": "97070",
    "end": "99710"
  },
  {
    "text": "two things that you can do you can",
    "start": "99710",
    "end": "101030"
  },
  {
    "text": "either buy bigger hardware or you need",
    "start": "101030",
    "end": "103670"
  },
  {
    "text": "to split your database over more and",
    "start": "103670",
    "end": "105140"
  },
  {
    "text": "more servers then either scaling up or",
    "start": "105140",
    "end": "107479"
  },
  {
    "text": "scaling out but both approaches are",
    "start": "107479",
    "end": "109850"
  },
  {
    "text": "increasingly expensive and complicated",
    "start": "109850",
    "end": "111770"
  },
  {
    "text": "the cost per transaction increases",
    "start": "111770",
    "end": "114170"
  },
  {
    "text": "expensive exponentially if you add more",
    "start": "114170",
    "end": "117079"
  },
  {
    "text": "transactions plus there's a real",
    "start": "117079",
    "end": "118969"
  },
  {
    "text": "shortage of technical people who have",
    "start": "118969",
    "end": "120829"
  },
  {
    "text": "the specialized skills to do this so one",
    "start": "120829",
    "end": "123200"
  },
  {
    "text": "of the things that we like to do at AWS",
    "start": "123200",
    "end": "126109"
  },
  {
    "text": "is take many of the really nasty complex",
    "start": "126109",
    "end": "129140"
  },
  {
    "text": "technical and operational problems that",
    "start": "129140",
    "end": "131030"
  },
  {
    "text": "we've already solved at amazon and then",
    "start": "131030",
    "end": "133670"
  },
  {
    "text": "built out simple web service",
    "start": "133670",
    "end": "135440"
  },
  {
    "text": "that make these problems go away for",
    "start": "135440",
    "end": "137270"
  },
  {
    "text": "every developer that's basically what",
    "start": "137270",
    "end": "139400"
  },
  {
    "text": "we've done here with dynamo dB at Amazon",
    "start": "139400",
    "end": "141590"
  },
  {
    "text": "we spend more than 10 years tackling the",
    "start": "141590",
    "end": "143780"
  },
  {
    "text": "challenges of extremely high volume web",
    "start": "143780",
    "end": "146030"
  },
  {
    "text": "applications and the large-scale",
    "start": "146030",
    "end": "148510"
  },
  {
    "text": "non-relational databases that on the",
    "start": "148510",
    "end": "150500"
  },
  {
    "text": "Pinda so Amazon dynamodb is the result",
    "start": "150500",
    "end": "153290"
  },
  {
    "text": "of everything we've learned from",
    "start": "153290",
    "end": "154820"
  },
  {
    "text": "building large-scale non-relational",
    "start": "154820",
    "end": "157340"
  },
  {
    "text": "databases for amazon.com and building",
    "start": "157340",
    "end": "159770"
  },
  {
    "text": "highly scalable and reliable cloud",
    "start": "159770",
    "end": "161690"
  },
  {
    "text": "computing services at AWS so dynamo DB",
    "start": "161690",
    "end": "165080"
  },
  {
    "text": "is a fully managed no sequel database",
    "start": "165080",
    "end": "167840"
  },
  {
    "text": "service that provides extremely fast and",
    "start": "167840",
    "end": "170510"
  },
  {
    "text": "predictable performance with seamless",
    "start": "170510",
    "end": "172850"
  },
  {
    "text": "scalability it's designed for",
    "start": "172850",
    "end": "174740"
  },
  {
    "text": "high-volume modern applications that",
    "start": "174740",
    "end": "176690"
  },
  {
    "text": "require consistently low latency and",
    "start": "176690",
    "end": "179600"
  },
  {
    "text": "high throughput at scale well tightly",
    "start": "179600",
    "end": "182780"
  },
  {
    "text": "controlling costs so this type of no",
    "start": "182780",
    "end": "185870"
  },
  {
    "text": "sequel database will become extremely",
    "start": "185870",
    "end": "187580"
  },
  {
    "text": "popular for everything from web",
    "start": "187580",
    "end": "189050"
  },
  {
    "text": "applications to social games mobile apps",
    "start": "189050",
    "end": "191510"
  },
  {
    "text": "and they also play an important role in",
    "start": "191510",
    "end": "194180"
  },
  {
    "text": "big data applications so what's unique",
    "start": "194180",
    "end": "197120"
  },
  {
    "text": "about DynamoDB is that it's a database",
    "start": "197120",
    "end": "200030"
  },
  {
    "text": "that provides seamless scalability but",
    "start": "200030",
    "end": "202580"
  },
  {
    "text": "with zero administration before DynamoDB",
    "start": "202580",
    "end": "205700"
  },
  {
    "text": "these two concepts scaling databases and",
    "start": "205700",
    "end": "208340"
  },
  {
    "text": "the complexity of database",
    "start": "208340",
    "end": "209870"
  },
  {
    "text": "administration have always been linked",
    "start": "209870",
    "end": "212030"
  },
  {
    "text": "together so forcing developers and IT",
    "start": "212030",
    "end": "214400"
  },
  {
    "text": "departments to manage all the Mac",
    "start": "214400",
    "end": "216260"
  },
  {
    "text": "hardware provisioning setup",
    "start": "216260",
    "end": "218360"
  },
  {
    "text": "configuration replication cluster",
    "start": "218360",
    "end": "221239"
  },
  {
    "text": "management things like that so dynamo DB",
    "start": "221239",
    "end": "223880"
  },
  {
    "text": "takes care of all of this for you",
    "start": "223880",
    "end": "225380"
  },
  {
    "text": "scaling your database is as easy as a",
    "start": "225380",
    "end": "228280"
  },
  {
    "text": "developer turning a dial up to a",
    "start": "228280",
    "end": "231530"
  },
  {
    "text": "database capacity and turning it down to",
    "start": "231530",
    "end": "234590"
  },
  {
    "text": "remove the database capacity that's it",
    "start": "234590",
    "end": "236570"
  },
  {
    "text": "you tell the server the number of",
    "start": "236570",
    "end": "238400"
  },
  {
    "text": "requests it needs to handle per second",
    "start": "238400",
    "end": "240230"
  },
  {
    "text": "and it does the rest automatically they",
    "start": "240230",
    "end": "242840"
  },
  {
    "text": "automatically spread your data across",
    "start": "242840",
    "end": "244970"
  },
  {
    "text": "enough hardware to provide consistent",
    "start": "244970",
    "end": "247700"
  },
  {
    "text": "performance and protect against downtime",
    "start": "247700",
    "end": "249350"
  },
  {
    "text": "and before DynamoDB this is all work",
    "start": "249350",
    "end": "252560"
  },
  {
    "text": "developers and operational folks had to",
    "start": "252560",
    "end": "254360"
  },
  {
    "text": "manage themselves and it's not just",
    "start": "254360",
    "end": "256579"
  },
  {
    "text": "highly scalable it's also really fast",
    "start": "256580",
    "end": "260019"
  },
  {
    "text": "dynamo DB leverages AWS massive scale to",
    "start": "260019",
    "end": "263450"
  },
  {
    "text": "automatically spread data across enough",
    "start": "263450",
    "end": "266210"
  },
  {
    "text": "hardware to deliver consistently for",
    "start": "266210",
    "end": "269150"
  },
  {
    "text": "as performance and in other ways in the",
    "start": "269150",
    "end": "270950"
  },
  {
    "text": "services fast it because it will Don",
    "start": "270950",
    "end": "272630"
  },
  {
    "text": "SSDs so solid state drives which ensures",
    "start": "272630",
    "end": "275750"
  },
  {
    "text": "fast access to your data and it means",
    "start": "275750",
    "end": "277910"
  },
  {
    "text": "that customers should expect",
    "start": "277910",
    "end": "279260"
  },
  {
    "text": "single-digit millisecond response time",
    "start": "279260",
    "end": "281480"
  },
  {
    "text": "regardless of the volume of requests or",
    "start": "281480",
    "end": "283970"
  },
  {
    "text": "the size of the database in addition to",
    "start": "283970",
    "end": "287060"
  },
  {
    "text": "being fast dynamodb is of course also",
    "start": "287060",
    "end": "289400"
  },
  {
    "text": "extremely reliable we've automatically",
    "start": "289400",
    "end": "291860"
  },
  {
    "text": "we automatically replicate your data",
    "start": "291860",
    "end": "293510"
  },
  {
    "text": "across multiple AWS availability sounds",
    "start": "293510",
    "end": "296120"
  },
  {
    "text": "to protect your data to provide high",
    "start": "296120",
    "end": "298610"
  },
  {
    "text": "uptime plus DynamoDB uses synchronous",
    "start": "298610",
    "end": "301610"
  },
  {
    "text": "replication to protect your database",
    "start": "301610",
    "end": "303890"
  },
  {
    "text": "from hardware failures in any individual",
    "start": "303890",
    "end": "306050"
  },
  {
    "text": "node so that's really excited about this",
    "start": "306050",
    "end": "309080"
  },
  {
    "text": "play this new service and especially",
    "start": "309080",
    "end": "311150"
  },
  {
    "text": "because it gives fast and predictable",
    "start": "311150",
    "end": "313160"
  },
  {
    "text": "performance to our customers which they",
    "start": "313160",
    "end": "315530"
  },
  {
    "text": "would know you're not able to give",
    "start": "315530",
    "end": "316640"
  },
  {
    "text": "before okay now dynamodb the pricing",
    "start": "316640",
    "end": "319730"
  },
  {
    "start": "317000",
    "end": "522000"
  },
  {
    "text": "model is a little bit different than",
    "start": "319730",
    "end": "320930"
  },
  {
    "text": "than other traditional databases or",
    "start": "320930",
    "end": "322940"
  },
  {
    "text": "non-relational database software how",
    "start": "322940",
    "end": "325430"
  },
  {
    "text": "should customers think about the way",
    "start": "325430",
    "end": "327170"
  },
  {
    "text": "that we've built the pricing model and",
    "start": "327170",
    "end": "328760"
  },
  {
    "text": "how that relates to the cost of running",
    "start": "328760",
    "end": "329960"
  },
  {
    "text": "their apps well so with traditional",
    "start": "329960",
    "end": "332630"
  },
  {
    "text": "databases you spend more money on on",
    "start": "332630",
    "end": "335810"
  },
  {
    "text": "hardware to get more performance out of",
    "start": "335810",
    "end": "337520"
  },
  {
    "text": "your database or to simply maintain the",
    "start": "337520",
    "end": "340250"
  },
  {
    "text": "same performance as the number of people",
    "start": "340250",
    "end": "341780"
  },
  {
    "text": "using your app growth so developers have",
    "start": "341780",
    "end": "344330"
  },
  {
    "text": "to spend a lot of time trying to predict",
    "start": "344330",
    "end": "346550"
  },
  {
    "text": "how much database capacity they need and",
    "start": "346550",
    "end": "349430"
  },
  {
    "text": "how much hardware they need to serve",
    "start": "349430",
    "end": "351530"
  },
  {
    "text": "this capacity blessings adding hardware",
    "start": "351530",
    "end": "354140"
  },
  {
    "text": "it takes time they typically over",
    "start": "354140",
    "end": "355760"
  },
  {
    "text": "provision and serve just a safe peak",
    "start": "355760",
    "end": "358580"
  },
  {
    "text": "capacity which end up wasting a lot of",
    "start": "358580",
    "end": "360770"
  },
  {
    "text": "money and we've seen that in the past at",
    "start": "360770",
    "end": "362660"
  },
  {
    "text": "amazon so with DynamoDB we did something",
    "start": "362660",
    "end": "365660"
  },
  {
    "text": "radically different before that it would",
    "start": "365660",
    "end": "368210"
  },
  {
    "text": "be easier for our customers if we would",
    "start": "368210",
    "end": "370250"
  },
  {
    "text": "build scalability directly into the",
    "start": "370250",
    "end": "372710"
  },
  {
    "text": "pricing model and just charge customers",
    "start": "372710",
    "end": "374840"
  },
  {
    "text": "based on the amount of database capacity",
    "start": "374840",
    "end": "377300"
  },
  {
    "text": "they need while we automatically",
    "start": "377300",
    "end": "379220"
  },
  {
    "text": "allocate enough infrastructure capacity",
    "start": "379220",
    "end": "380900"
  },
  {
    "text": "to deliver consistent performance at the",
    "start": "380900",
    "end": "384230"
  },
  {
    "text": "level of the capacity that the customer",
    "start": "384230",
    "end": "386180"
  },
  {
    "text": "has requested this capacity is what we",
    "start": "386180",
    "end": "388910"
  },
  {
    "text": "call provision throughput it is",
    "start": "388910",
    "end": "391120"
  },
  {
    "text": "completely data at a dynamic so",
    "start": "391120",
    "end": "393800"
  },
  {
    "text": "customers can scale up or down with a",
    "start": "393800",
    "end": "396140"
  },
  {
    "text": "few clicks of a mouse in the console and",
    "start": "396140",
    "end": "397940"
  },
  {
    "text": "we've dynamodb customers no longer need",
    "start": "397940",
    "end": "400910"
  },
  {
    "text": "to raise money on over",
    "start": "400910",
    "end": "402770"
  },
  {
    "text": "inning for peak load as you can simply",
    "start": "402770",
    "end": "404780"
  },
  {
    "text": "dial up the capacity that you require at",
    "start": "404780",
    "end": "407599"
  },
  {
    "text": "the moment that you needed so the",
    "start": "407599",
    "end": "409819"
  },
  {
    "text": "feedback that we've been getting from",
    "start": "409819",
    "end": "410930"
  },
  {
    "text": "customers is that the model is extremely",
    "start": "410930",
    "end": "412940"
  },
  {
    "text": "cost-effective when compared to both",
    "start": "412940",
    "end": "415270"
  },
  {
    "text": "relational and long relational databases",
    "start": "415270",
    "end": "418750"
  },
  {
    "text": "regardless video when this on-premise or",
    "start": "418750",
    "end": "421009"
  },
  {
    "text": "in the cloud and so I've been talking to",
    "start": "421009",
    "end": "423860"
  },
  {
    "text": "to quite a bit of developers and",
    "start": "423860",
    "end": "426349"
  },
  {
    "text": "database architects you know who want to",
    "start": "426349",
    "end": "428419"
  },
  {
    "text": "get started with no sequel and in the",
    "start": "428419",
    "end": "430639"
  },
  {
    "text": "past it's always been too difficult to",
    "start": "430639",
    "end": "433190"
  },
  {
    "text": "just get started with no sequel yet to",
    "start": "433190",
    "end": "435169"
  },
  {
    "text": "install software to Gallic eighth notes",
    "start": "435169",
    "end": "437120"
  },
  {
    "text": "things like that so the good news now is",
    "start": "437120",
    "end": "439580"
  },
  {
    "text": "that customers can get started with",
    "start": "439580",
    "end": "441860"
  },
  {
    "text": "DynamoDB immediately and actually we",
    "start": "441860",
    "end": "444740"
  },
  {
    "text": "give you free tier that we've owned the",
    "start": "444740",
    "end": "447289"
  },
  {
    "text": "bigger bites of storage and 14 million",
    "start": "447289",
    "end": "449449"
  },
  {
    "text": "requests among free of charge thanks for",
    "start": "449449",
    "end": "452720"
  },
  {
    "text": "more question it's very popular today",
    "start": "452720",
    "end": "456080"
  },
  {
    "text": "for customers to run no sequel software",
    "start": "456080",
    "end": "457849"
  },
  {
    "text": "on on AWS how would you help them",
    "start": "457849",
    "end": "460849"
  },
  {
    "text": "understand the differences between",
    "start": "460849",
    "end": "462310"
  },
  {
    "text": "running the sequel software on ec2",
    "start": "462310",
    "end": "464750"
  },
  {
    "text": "versus dynamodb well I think it's the",
    "start": "464750",
    "end": "467030"
  },
  {
    "text": "the traditional trade-off of software",
    "start": "467030",
    "end": "470270"
  },
  {
    "text": "versus the servants you know and so",
    "start": "470270",
    "end": "471940"
  },
  {
    "text": "DynamoDB is very different because it's",
    "start": "471940",
    "end": "474259"
  },
  {
    "text": "not database software it's a database",
    "start": "474259",
    "end": "476930"
  },
  {
    "text": "service that seamlessly scales with 0",
    "start": "476930",
    "end": "479449"
  },
  {
    "text": "administration we handle all of the",
    "start": "479449",
    "end": "481490"
  },
  {
    "text": "management and all of the administration",
    "start": "481490",
    "end": "483860"
  },
  {
    "text": "automatically in fact two aren't any",
    "start": "483860",
    "end": "486400"
  },
  {
    "text": "administration features in the product",
    "start": "486400",
    "end": "488300"
  },
  {
    "text": "we give customers an API to create",
    "start": "488300",
    "end": "490580"
  },
  {
    "text": "tables dialogue capacity dial it down",
    "start": "490580",
    "end": "492620"
  },
  {
    "text": "put data in the service get data out of",
    "start": "492620",
    "end": "494870"
  },
  {
    "text": "the service and that's it we handle all",
    "start": "494870",
    "end": "497750"
  },
  {
    "text": "the muck that's required behind the",
    "start": "497750",
    "end": "499310"
  },
  {
    "text": "scenes to make sure that our customers",
    "start": "499310",
    "end": "500569"
  },
  {
    "text": "databases are consistently fast yeah and",
    "start": "500569",
    "end": "504319"
  },
  {
    "text": "and unsecure of course there because",
    "start": "504319",
    "end": "508490"
  },
  {
    "text": "there's lots of effort in the security",
    "start": "508490",
    "end": "510440"
  },
  {
    "text": "side as well so with database software",
    "start": "510440",
    "end": "512690"
  },
  {
    "text": "whether it's relational and",
    "start": "512690",
    "end": "514039"
  },
  {
    "text": "non-relational almost all of this",
    "start": "514039",
    "end": "516020"
  },
  {
    "text": "administration is manually regardless of",
    "start": "516020",
    "end": "518570"
  },
  {
    "text": "whether the software runs on the server",
    "start": "518570",
    "end": "520459"
  },
  {
    "text": "or your data center in the cloud thanks",
    "start": "520459",
    "end": "523010"
  },
  {
    "text": "burner now like to bring Swami to the",
    "start": "523010",
    "end": "524720"
  },
  {
    "text": "conversation Swami is the GM of our",
    "start": "524720",
    "end": "526760"
  },
  {
    "text": "dynamodb service team and he's led the",
    "start": "526760",
    "end": "529040"
  },
  {
    "text": "engineering effort over the past few",
    "start": "529040",
    "end": "530390"
  },
  {
    "text": "years to build this new database service",
    "start": "530390",
    "end": "531980"
  },
  {
    "text": "thanks for joining us today Swami thank",
    "start": "531980",
    "end": "534089"
  },
  {
    "text": "so so I make you talk a little bit more",
    "start": "534089",
    "end": "536399"
  },
  {
    "text": "about this provision throughput model",
    "start": "536399",
    "end": "539069"
  },
  {
    "text": "and how you decided in this approach and",
    "start": "539069",
    "end": "540899"
  },
  {
    "text": "how you feel it'll be useful to",
    "start": "540899",
    "end": "542129"
  },
  {
    "text": "customers sure I sort of mentioned the",
    "start": "542129",
    "end": "545009"
  },
  {
    "text": "primary goal of DynamoDB is to provide",
    "start": "545009",
    "end": "547410"
  },
  {
    "text": "seamless scale predictable performance",
    "start": "547410",
    "end": "549089"
  },
  {
    "text": "and ultra-low latency so the idea behind",
    "start": "549089",
    "end": "552089"
  },
  {
    "text": "DynamoDB potion throughput model as far",
    "start": "552089",
    "end": "554999"
  },
  {
    "text": "a customer's to tell us how much read",
    "start": "554999",
    "end": "556949"
  },
  {
    "text": "and write throughput capacity they need",
    "start": "556949",
    "end": "558689"
  },
  {
    "text": "based on the requested throughput",
    "start": "558689",
    "end": "561079"
  },
  {
    "text": "DynamoDB determines the number of",
    "start": "561079",
    "end": "563189"
  },
  {
    "text": "partitions needed by the table and",
    "start": "563189",
    "end": "564959"
  },
  {
    "text": "provisions the right amount of resources",
    "start": "564959",
    "end": "567120"
  },
  {
    "text": "to each partition we found this model to",
    "start": "567120",
    "end": "569910"
  },
  {
    "text": "be extremely useful for two reasons",
    "start": "569910",
    "end": "571579"
  },
  {
    "text": "first customers are now in charge of how",
    "start": "571579",
    "end": "574620"
  },
  {
    "text": "much resources they would like to potion",
    "start": "574620",
    "end": "576449"
  },
  {
    "text": "for the database and they can express it",
    "start": "576449",
    "end": "578970"
  },
  {
    "text": "in simple terms such as the number of",
    "start": "578970",
    "end": "580949"
  },
  {
    "text": "read and write requests they will make",
    "start": "580949",
    "end": "583110"
  },
  {
    "text": "to their database every second we",
    "start": "583110",
    "end": "585540"
  },
  {
    "text": "believe this area it's a lot of",
    "start": "585540",
    "end": "586980"
  },
  {
    "text": "complexity from customers who are two",
    "start": "586980",
    "end": "588930"
  },
  {
    "text": "traditionally spend a lot of time",
    "start": "588930",
    "end": "590129"
  },
  {
    "text": "benchmarking their application to see",
    "start": "590129",
    "end": "592199"
  },
  {
    "text": "how big their database cluster should be",
    "start": "592199",
    "end": "594480"
  },
  {
    "text": "to handle the requested throughput the",
    "start": "594480",
    "end": "597180"
  },
  {
    "text": "second reason is that customers are no",
    "start": "597180",
    "end": "599069"
  },
  {
    "text": "longer locked into the capacity they",
    "start": "599069",
    "end": "600929"
  },
  {
    "text": "provision for the PQ's case they can",
    "start": "600929",
    "end": "603029"
  },
  {
    "text": "always scale it down once their",
    "start": "603029",
    "end": "604800"
  },
  {
    "text": "applications peak usage decreases for",
    "start": "604800",
    "end": "607649"
  },
  {
    "text": "instance let's say you're launching an",
    "start": "607649",
    "end": "609089"
  },
  {
    "text": "application tomorrow and you expect it",
    "start": "609089",
    "end": "611100"
  },
  {
    "text": "to be all over the Internet you can dial",
    "start": "611100",
    "end": "613319"
  },
  {
    "text": "up your throughput to handle the load to",
    "start": "613319",
    "end": "615600"
  },
  {
    "text": "hundreds or thousands of requests per",
    "start": "615600",
    "end": "617189"
  },
  {
    "text": "second once your traffic subsides you",
    "start": "617189",
    "end": "619740"
  },
  {
    "text": "can down to your expected usage and you",
    "start": "619740",
    "end": "622889"
  },
  {
    "text": "don't need to keep paying for your peak",
    "start": "622889",
    "end": "624449"
  },
  {
    "text": "traffic okay in in terms of how",
    "start": "624449",
    "end": "627120"
  },
  {
    "text": "developers interact with dynamo dB what",
    "start": "627120",
    "end": "629249"
  },
  {
    "text": "are the interesting features that you've",
    "start": "629249",
    "end": "631649"
  },
  {
    "text": "built into it for no sequel database is",
    "start": "631649",
    "end": "633420"
  },
  {
    "text": "to support strongly consistent database",
    "start": "633420",
    "end": "635220"
  },
  {
    "text": "reads in addition to eventual",
    "start": "635220",
    "end": "637019"
  },
  {
    "text": "consistency why is this important after",
    "start": "637019",
    "end": "640679"
  },
  {
    "text": "years of operating simple DBV I learned",
    "start": "640679",
    "end": "642809"
  },
  {
    "text": "that developers want choice and tons of",
    "start": "642809",
    "end": "645120"
  },
  {
    "text": "consistency models so when we were",
    "start": "645120",
    "end": "647610"
  },
  {
    "text": "building dynamodb be decided that we",
    "start": "647610",
    "end": "649889"
  },
  {
    "text": "would give them both and dynamo dB",
    "start": "649889",
    "end": "652259"
  },
  {
    "text": "developers could choose between",
    "start": "652259",
    "end": "654059"
  },
  {
    "text": "eventually consistent and strongly",
    "start": "654059",
    "end": "655529"
  },
  {
    "text": "consistent reads that means they can",
    "start": "655529",
    "end": "658170"
  },
  {
    "text": "make the trade off between consistency",
    "start": "658170",
    "end": "660509"
  },
  {
    "text": "performance and cost so you can reduce",
    "start": "660509",
    "end": "662819"
  },
  {
    "text": "your read costs by 50% if you choose",
    "start": "662819",
    "end": "664980"
  },
  {
    "text": "eventually consistent reads or",
    "start": "664980",
    "end": "666660"
  },
  {
    "text": "conversely",
    "start": "666660",
    "end": "667830"
  },
  {
    "text": "for the same money you can have twice",
    "start": "667830",
    "end": "669690"
  },
  {
    "text": "the trooper creating we just finished a",
    "start": "669690",
    "end": "672780"
  },
  {
    "text": "a private beta program and want to ask",
    "start": "672780",
    "end": "675180"
  },
  {
    "text": "you a little bit about that we saw some",
    "start": "675180",
    "end": "676770"
  },
  {
    "text": "pretty extensive use both from our AWS",
    "start": "676770",
    "end": "679020"
  },
  {
    "text": "customers and also from some of the",
    "start": "679020",
    "end": "680970"
  },
  {
    "text": "other businesses at amazon.com do you",
    "start": "680970",
    "end": "683160"
  },
  {
    "text": "talk a little bit about what you learned",
    "start": "683160",
    "end": "684390"
  },
  {
    "text": "during that process sure two things come",
    "start": "684390",
    "end": "687450"
  },
  {
    "text": "to my mind now as many of you know",
    "start": "687450",
    "end": "689520"
  },
  {
    "text": "Amazon comes consumer business is one of",
    "start": "689520",
    "end": "692010"
  },
  {
    "text": "our important customers one of the early",
    "start": "692010",
    "end": "694470"
  },
  {
    "text": "adopters of dynamo DB was amazon cloud",
    "start": "694470",
    "end": "696810"
  },
  {
    "text": "drive business which uses DynamoDB to",
    "start": "696810",
    "end": "699540"
  },
  {
    "text": "store the metadata of objects stored in",
    "start": "699540",
    "end": "702090"
  },
  {
    "text": "cloud drive this is the data required to",
    "start": "702090",
    "end": "704340"
  },
  {
    "text": "populate the cloud drive user interface",
    "start": "704340",
    "end": "706290"
  },
  {
    "text": "with the information about the files",
    "start": "706290",
    "end": "708210"
  },
  {
    "text": "you're storing in the cloud the cloud",
    "start": "708210",
    "end": "710160"
  },
  {
    "text": "right team anticipated a large spike in",
    "start": "710160",
    "end": "713220"
  },
  {
    "text": "the database capacity needs this holiday",
    "start": "713220",
    "end": "715200"
  },
  {
    "text": "season in order to handle the rapid",
    "start": "715200",
    "end": "717600"
  },
  {
    "text": "growth while still providing ultra low",
    "start": "717600",
    "end": "720060"
  },
  {
    "text": "latencies they move from a traditional",
    "start": "720060",
    "end": "722520"
  },
  {
    "text": "relational database to Amazon DynamoDB",
    "start": "722520",
    "end": "725100"
  },
  {
    "text": "this was a great win for our team during",
    "start": "725100",
    "end": "727770"
  },
  {
    "text": "the private beta program and we were",
    "start": "727770",
    "end": "729870"
  },
  {
    "text": "excited to run their peak workloads the",
    "start": "729870",
    "end": "732810"
  },
  {
    "text": "other major event that comes to my mind",
    "start": "732810",
    "end": "734760"
  },
  {
    "text": "is that one of our beta customers wanted",
    "start": "734760",
    "end": "737820"
  },
  {
    "text": "to load multiple terabytes of data and",
    "start": "737820",
    "end": "740060"
  },
  {
    "text": "proficient a massive database that can",
    "start": "740060",
    "end": "742740"
  },
  {
    "text": "do 300,000 writes per second so that",
    "start": "742740",
    "end": "745020"
  },
  {
    "text": "they can finish the data load faster",
    "start": "745020",
    "end": "746850"
  },
  {
    "text": "when they started doing a data load at",
    "start": "746850",
    "end": "749370"
  },
  {
    "text": "something like 250 thousand writes per",
    "start": "749370",
    "end": "751320"
  },
  {
    "text": "second for more than three days",
    "start": "751320",
    "end": "753060"
  },
  {
    "text": "continuously a latency stayed flat but",
    "start": "753060",
    "end": "756780"
  },
  {
    "text": "very little spikes and no impact on",
    "start": "756780",
    "end": "759120"
  },
  {
    "text": "other customers using the service at the",
    "start": "759120",
    "end": "761340"
  },
  {
    "text": "same time whatsoever so this was an",
    "start": "761340",
    "end": "763950"
  },
  {
    "text": "exciting time for us as it was a great",
    "start": "763950",
    "end": "766440"
  },
  {
    "text": "testimony excuse me as it was a great",
    "start": "766440",
    "end": "770040"
  },
  {
    "text": "testimony to our protein throughput and",
    "start": "770040",
    "end": "773150"
  },
  {
    "text": "demonstrated the scalability of a",
    "start": "773150",
    "end": "775110"
  },
  {
    "text": "service here we have a chart that shows",
    "start": "775110",
    "end": "779730"
  },
  {
    "text": "the average latency for database",
    "start": "779730",
    "end": "781620"
  },
  {
    "text": "requests we receive from this customer",
    "start": "781620",
    "end": "784470"
  },
  {
    "text": "during their big data load you can see",
    "start": "784470",
    "end": "786900"
  },
  {
    "text": "the results of the provision throughput",
    "start": "786900",
    "end": "788520"
  },
  {
    "text": "model consistent performance regardless",
    "start": "788520",
    "end": "791370"
  },
  {
    "text": "of scale this is really cool consistent",
    "start": "791370",
    "end": "794310"
  },
  {
    "text": "performance while keeping costs low",
    "start": "794310",
    "end": "796130"
  },
  {
    "text": "isn't an accident it's something we",
    "start": "796130",
    "end": "799080"
  },
  {
    "text": "explicitly built into the architecture",
    "start": "799080",
    "end": "801000"
  },
  {
    "text": "of this",
    "start": "801000",
    "end": "801510"
  },
  {
    "text": "this actually another cool thing that",
    "start": "801510",
    "end": "804540"
  },
  {
    "text": "this customer found that that we're in",
    "start": "804540",
    "end": "806400"
  },
  {
    "text": "the past they were usually constrained",
    "start": "806400",
    "end": "808590"
  },
  {
    "text": "by the database now suddenly they found",
    "start": "808590",
    "end": "811110"
  },
  {
    "text": "themselves constrained by the",
    "start": "811110",
    "end": "812190"
  },
  {
    "text": "application yeah and so the application",
    "start": "812190",
    "end": "815640"
  },
  {
    "text": "was not able to make use of the reserve",
    "start": "815640",
    "end": "817770"
  },
  {
    "text": "capacity that they had allocated and",
    "start": "817770",
    "end": "820080"
  },
  {
    "text": "they actually had to rewrite some of the",
    "start": "820080",
    "end": "821940"
  },
  {
    "text": "truth of data loading tools to become",
    "start": "821940",
    "end": "823500"
  },
  {
    "text": "more simpler such that they could",
    "start": "823500",
    "end": "825600"
  },
  {
    "text": "actually push the data through in the in",
    "start": "825600",
    "end": "828000"
  },
  {
    "text": "the report that they want to do and",
    "start": "828000",
    "end": "830610"
  },
  {
    "text": "actually I think that that's a broader",
    "start": "830610",
    "end": "832170"
  },
  {
    "text": "pattern I think it sort of shows the",
    "start": "832170",
    "end": "834480"
  },
  {
    "text": "promise of DynamoDB is becoming a",
    "start": "834480",
    "end": "837420"
  },
  {
    "text": "reality that the database is no longer",
    "start": "837420",
    "end": "839700"
  },
  {
    "text": "the constraining factor we have to scale",
    "start": "839700",
    "end": "842040"
  },
  {
    "text": "your application and that application",
    "start": "842040",
    "end": "844170"
  },
  {
    "text": "architectures actually can become much",
    "start": "844170",
    "end": "846120"
  },
  {
    "text": "simpler and I think which will lead them",
    "start": "846120",
    "end": "848160"
  },
  {
    "text": "to increase performance and high",
    "start": "848160",
    "end": "850230"
  },
  {
    "text": "reliability at a much lower cost for",
    "start": "850230",
    "end": "852810"
  },
  {
    "text": "everyone thanks for an ID like to bring",
    "start": "852810",
    "end": "854850"
  },
  {
    "start": "853000",
    "end": "893000"
  },
  {
    "text": "down into the conversation done",
    "start": "854850",
    "end": "856500"
  },
  {
    "text": "McCaskill CEO and chief geek of smugmug",
    "start": "856500",
    "end": "859620"
  },
  {
    "text": "it's one of the customers who",
    "start": "859620",
    "end": "860910"
  },
  {
    "text": "participated in our private beta program",
    "start": "860910",
    "end": "862500"
  },
  {
    "text": "and smugmug for those of you who are",
    "start": "862500",
    "end": "864600"
  },
  {
    "text": "already using the service is a premium",
    "start": "864600",
    "end": "866400"
  },
  {
    "text": "photo and video sharing service they're",
    "start": "866400",
    "end": "868470"
  },
  {
    "text": "one of the top 200 websites in the",
    "start": "868470",
    "end": "870150"
  },
  {
    "text": "United States and they share billions of",
    "start": "870150",
    "end": "871680"
  },
  {
    "text": "photos and videos so don thanks for",
    "start": "871680",
    "end": "873570"
  },
  {
    "text": "joining us day and flowing up from the",
    "start": "873570",
    "end": "875010"
  },
  {
    "text": "Bay Area my pleasure so one of the",
    "start": "875010",
    "end": "877590"
  },
  {
    "text": "reasons we have you here today is that",
    "start": "877590",
    "end": "878910"
  },
  {
    "text": "you were one of the main motivations for",
    "start": "878910",
    "end": "880560"
  },
  {
    "text": "us building the service two years ago",
    "start": "880560",
    "end": "882270"
  },
  {
    "text": "you give us the advice that we should",
    "start": "882270",
    "end": "883950"
  },
  {
    "text": "take some of our learnings around high",
    "start": "883950",
    "end": "886020"
  },
  {
    "text": "scale in those sequel databases and",
    "start": "886020",
    "end": "887370"
  },
  {
    "text": "build them up into a database service",
    "start": "887370",
    "end": "889050"
  },
  {
    "text": "can you explain a little bit what you",
    "start": "889050",
    "end": "890580"
  },
  {
    "text": "were asking us for and what you wanted",
    "start": "890580",
    "end": "892170"
  },
  {
    "text": "this to build sure yeah you know we we",
    "start": "892170",
    "end": "895530"
  },
  {
    "start": "893000",
    "end": "1009000"
  },
  {
    "text": "have a lot of scalability challenges at",
    "start": "895530",
    "end": "897510"
  },
  {
    "text": "smugmug we have to store billions and",
    "start": "897510",
    "end": "900450"
  },
  {
    "text": "billions of photos and videos and and",
    "start": "900450",
    "end": "903590"
  },
  {
    "text": "handle lots of new uploads and",
    "start": "903590",
    "end": "906270"
  },
  {
    "text": "everything so you've solved quite a few",
    "start": "906270",
    "end": "909030"
  },
  {
    "text": "of our previous scalability challenges",
    "start": "909030",
    "end": "911280"
  },
  {
    "text": "with things like s3 for storing those",
    "start": "911280",
    "end": "913050"
  },
  {
    "text": "photos and videos and an ec2 for compute",
    "start": "913050",
    "end": "915440"
  },
  {
    "text": "but we still had a huge sort of monster",
    "start": "915440",
    "end": "919950"
  },
  {
    "text": "on our back with databases like most web",
    "start": "919950",
    "end": "923430"
  },
  {
    "text": "applications smugmug powered by a",
    "start": "923430",
    "end": "925680"
  },
  {
    "text": "variety of databases behind the scenes",
    "start": "925680",
    "end": "927500"
  },
  {
    "text": "and we've had to invest an awful lot of",
    "start": "927500",
    "end": "931680"
  },
  {
    "text": "time and energy capital expense",
    "start": "931680",
    "end": "934980"
  },
  {
    "text": "into building scaling monitoring and",
    "start": "934980",
    "end": "939620"
  },
  {
    "text": "handling all of the problems around",
    "start": "939620",
    "end": "942350"
  },
  {
    "text": "those databases so we've we've both",
    "start": "942350",
    "end": "946260"
  },
  {
    "text": "scaled up we've bought the biggest",
    "start": "946260",
    "end": "947790"
  },
  {
    "text": "machines we can and scale out we bought",
    "start": "947790",
    "end": "950339"
  },
  {
    "text": "more of those giant machines and and",
    "start": "950339",
    "end": "953730"
  },
  {
    "text": "every time that comes with more",
    "start": "953730",
    "end": "956730"
  },
  {
    "text": "headaches those machines are error-prone",
    "start": "956730",
    "end": "959279"
  },
  {
    "text": "they run software that of course has",
    "start": "959279",
    "end": "961350"
  },
  {
    "text": "bugs and and all of that sort of stuff",
    "start": "961350",
    "end": "963329"
  },
  {
    "text": "so we have we have an awful lot of",
    "start": "963329",
    "end": "967310"
  },
  {
    "text": "effort and expertise at smugmug around",
    "start": "967310",
    "end": "969899"
  },
  {
    "text": "keeping those things online so that our",
    "start": "969899",
    "end": "971550"
  },
  {
    "text": "customers can access their photos and",
    "start": "971550",
    "end": "973320"
  },
  {
    "text": "videos and we have always wanted to not",
    "start": "973320",
    "end": "976769"
  },
  {
    "text": "have to do that anymore so we hoped that",
    "start": "976769",
    "end": "979199"
  },
  {
    "text": "like s3 and AC to that amazon would",
    "start": "979199",
    "end": "982500"
  },
  {
    "text": "provide a service where we didn't have",
    "start": "982500",
    "end": "984930"
  },
  {
    "text": "to have any administration overhead we",
    "start": "984930",
    "end": "987329"
  },
  {
    "text": "didn't have to worry about provisioning",
    "start": "987329",
    "end": "988649"
  },
  {
    "text": "we didn't have to worry about",
    "start": "988649",
    "end": "989550"
  },
  {
    "text": "maintenance and backups and replication",
    "start": "989550",
    "end": "991560"
  },
  {
    "text": "and and all of those sorts of things we",
    "start": "991560",
    "end": "994560"
  },
  {
    "text": "just really want to give you data and",
    "start": "994560",
    "end": "997889"
  },
  {
    "text": "then at some later point in time ask for",
    "start": "997889",
    "end": "1000110"
  },
  {
    "text": "that data back and of course that's what",
    "start": "1000110",
    "end": "1003139"
  },
  {
    "text": "DynamoDB does so we're thrilled great",
    "start": "1003139",
    "end": "1005420"
  },
  {
    "text": "and what do you guys think of it during",
    "start": "1005420",
    "end": "1006769"
  },
  {
    "text": "the the private beta kind of feedback",
    "start": "1006769",
    "end": "1008329"
  },
  {
    "text": "did you get from developers well we we",
    "start": "1008329",
    "end": "1010850"
  },
  {
    "start": "1009000",
    "end": "1156000"
  },
  {
    "text": "absolutely love how simple the the model",
    "start": "1010850",
    "end": "1013519"
  },
  {
    "text": "is and the API we're thrilled with the",
    "start": "1013519",
    "end": "1015290"
  },
  {
    "text": "performance main single-digit",
    "start": "1015290",
    "end": "1016819"
  },
  {
    "text": "millisecond reads and writes as",
    "start": "1016819",
    "end": "1018490"
  },
  {
    "text": "stupendous we love being able to choose",
    "start": "1018490",
    "end": "1021199"
  },
  {
    "text": "on a per request basis whether we want",
    "start": "1021199",
    "end": "1023990"
  },
  {
    "text": "we need it is mission-critical so we",
    "start": "1023990",
    "end": "1026150"
  },
  {
    "text": "need in a consistent read verses",
    "start": "1026150",
    "end": "1028428"
  },
  {
    "text": "something that's sort of transient and",
    "start": "1028429",
    "end": "1030140"
  },
  {
    "text": "we can do with a faster eventually",
    "start": "1030140",
    "end": "1034069"
  },
  {
    "text": "consistent read all that stuff is",
    "start": "1034069",
    "end": "1036260"
  },
  {
    "text": "awesome okay you're telling me last week",
    "start": "1036260",
    "end": "1037938"
  },
  {
    "text": "that you get a lot of questions as",
    "start": "1037939",
    "end": "1039500"
  },
  {
    "text": "you're talking to entrepreneurs and",
    "start": "1039500",
    "end": "1040850"
  },
  {
    "text": "developers who are looking to start",
    "start": "1040850",
    "end": "1041688"
  },
  {
    "text": "companies about database architecture",
    "start": "1041689",
    "end": "1044000"
  },
  {
    "text": "whether they should look at relational",
    "start": "1044000",
    "end": "1045770"
  },
  {
    "text": "or non-relational databases you know how",
    "start": "1045770",
    "end": "1049010"
  },
  {
    "text": "do you think about this when it comes to",
    "start": "1049010",
    "end": "1050480"
  },
  {
    "text": "to architecture and dynamo dB so there",
    "start": "1050480",
    "end": "1053929"
  },
  {
    "text": "are you know there's sort of some",
    "start": "1053929",
    "end": "1055580"
  },
  {
    "text": "religious debate going on in the",
    "start": "1055580",
    "end": "1057049"
  },
  {
    "text": "technical community right now around no",
    "start": "1057049",
    "end": "1058700"
  },
  {
    "text": "sequel versus sequel and and I think",
    "start": "1058700",
    "end": "1062450"
  },
  {
    "text": "there's room for both I'm a big fan of",
    "start": "1062450",
    "end": "1064070"
  },
  {
    "text": "using the right tool for the for the",
    "start": "1064070",
    "end": "1066380"
  },
  {
    "text": "right job so",
    "start": "1066380",
    "end": "1068700"
  },
  {
    "text": "we we use both internally we actually",
    "start": "1068700",
    "end": "1072480"
  },
  {
    "text": "spent a significant amount of time and",
    "start": "1072480",
    "end": "1074550"
  },
  {
    "text": "energy over the years creating our own",
    "start": "1074550",
    "end": "1076650"
  },
  {
    "text": "key value store on top of a traditional",
    "start": "1076650",
    "end": "1080100"
  },
  {
    "text": "relational database mysql so an awful",
    "start": "1080100",
    "end": "1083280"
  },
  {
    "text": "lot of our workload over the years has",
    "start": "1083280",
    "end": "1085350"
  },
  {
    "text": "has changed to be no sequel ironically",
    "start": "1085350",
    "end": "1089280"
  },
  {
    "text": "enough using what we know is a very",
    "start": "1089280",
    "end": "1091770"
  },
  {
    "text": "reliable storage engine in mysql behind",
    "start": "1091770",
    "end": "1096000"
  },
  {
    "text": "the scenes but nonetheless mostly",
    "start": "1096000",
    "end": "1098190"
  },
  {
    "text": "primary key with blobs of data and and",
    "start": "1098190",
    "end": "1101730"
  },
  {
    "text": "that's come with plenty of its own",
    "start": "1101730",
    "end": "1103470"
  },
  {
    "text": "challenges we've had to you know figure",
    "start": "1103470",
    "end": "1106890"
  },
  {
    "text": "out how to make essentially a square peg",
    "start": "1106890",
    "end": "1109920"
  },
  {
    "text": "fit in a round hole and and we're",
    "start": "1109920",
    "end": "1113010"
  },
  {
    "text": "anxious to not have to do that anymore",
    "start": "1113010",
    "end": "1115040"
  },
  {
    "text": "but i think the i don't think there's",
    "start": "1115040",
    "end": "1119880"
  },
  {
    "text": "there's i don't buy into the religious",
    "start": "1119880",
    "end": "1123030"
  },
  {
    "text": "debate i really think there's room for",
    "start": "1123030",
    "end": "1125510"
  },
  {
    "text": "databases like DynamoDB to take an awful",
    "start": "1125510",
    "end": "1129060"
  },
  {
    "text": "lot of our workload off of our plates",
    "start": "1129060",
    "end": "1131070"
  },
  {
    "text": "and let relational databases do what",
    "start": "1131070",
    "end": "1133320"
  },
  {
    "text": "they do well and next i want to ask you",
    "start": "1133320",
    "end": "1135780"
  },
  {
    "text": "about the debate over control versus",
    "start": "1135780",
    "end": "1138330"
  },
  {
    "text": "making things automatic and with",
    "start": "1138330",
    "end": "1139830"
  },
  {
    "text": "DynamoDB being a highly abstracted",
    "start": "1139830",
    "end": "1141630"
  },
  {
    "text": "service one of the things developers or",
    "start": "1141630",
    "end": "1143100"
  },
  {
    "text": "trading office not having as much",
    "start": "1143100",
    "end": "1144750"
  },
  {
    "text": "administrative switches to flip or",
    "start": "1144750",
    "end": "1146400"
  },
  {
    "text": "configurations to manage and their",
    "start": "1146400",
    "end": "1148140"
  },
  {
    "text": "trading and off in exchange for having",
    "start": "1148140",
    "end": "1150210"
  },
  {
    "text": "that stuff go away and making things",
    "start": "1150210",
    "end": "1151530"
  },
  {
    "text": "easier how do you guys look at that and",
    "start": "1151530",
    "end": "1154140"
  },
  {
    "text": "how did your developers think about that",
    "start": "1154140",
    "end": "1155670"
  },
  {
    "text": "that trade-off well you know we we run",
    "start": "1155670",
    "end": "1158610"
  },
  {
    "start": "1156000",
    "end": "1288000"
  },
  {
    "text": "our company in our product from a",
    "start": "1158610",
    "end": "1160860"
  },
  {
    "text": "customer oriented point of view when it",
    "start": "1160860",
    "end": "1164190"
  },
  {
    "text": "comes right down to it our customers",
    "start": "1164190",
    "end": "1165630"
  },
  {
    "text": "don't know or care what the technology",
    "start": "1165630",
    "end": "1167250"
  },
  {
    "text": "is behind smugmug are they want their",
    "start": "1167250",
    "end": "1169830"
  },
  {
    "text": "smugmug sites to be online always fast",
    "start": "1169830",
    "end": "1173820"
  },
  {
    "text": "always they want to be able to shove as",
    "start": "1173820",
    "end": "1175680"
  },
  {
    "text": "many photos and videos through it as",
    "start": "1175680",
    "end": "1177210"
  },
  {
    "text": "possible they want to be able to easily",
    "start": "1177210",
    "end": "1179190"
  },
  {
    "text": "share them with their friends and family",
    "start": "1179190",
    "end": "1181230"
  },
  {
    "text": "and and they want to make sure that",
    "start": "1181230",
    "end": "1183480"
  },
  {
    "text": "their data is safe and secure i'm sure a",
    "start": "1183480",
    "end": "1187500"
  },
  {
    "text": "few of our more technical customers",
    "start": "1187500",
    "end": "1189090"
  },
  {
    "text": "realize that involves databases behind",
    "start": "1189090",
    "end": "1190980"
  },
  {
    "text": "the scenes but the vast majority of them",
    "start": "1190980",
    "end": "1193230"
  },
  {
    "text": "don't know and don't care so for us the",
    "start": "1193230",
    "end": "1196890"
  },
  {
    "text": "the fact that we have to have a",
    "start": "1196890",
    "end": "1198510"
  },
  {
    "text": "significant engineering and operations",
    "start": "1198510",
    "end": "1200540"
  },
  {
    "text": "team",
    "start": "1200540",
    "end": "1201700"
  },
  {
    "text": "round dealing with databases is more of",
    "start": "1201700",
    "end": "1204309"
  },
  {
    "text": "a necessary evil than anything else and",
    "start": "1204309",
    "end": "1206710"
  },
  {
    "text": "so we're pretty thrilled that we get to",
    "start": "1206710",
    "end": "1210639"
  },
  {
    "text": "remove an awful lot of that overhead and",
    "start": "1210639",
    "end": "1213850"
  },
  {
    "text": "spend it focusing on the product and the",
    "start": "1213850",
    "end": "1216580"
  },
  {
    "text": "customer experience and making both of",
    "start": "1216580",
    "end": "1218620"
  },
  {
    "text": "those better rather than merely trying",
    "start": "1218620",
    "end": "1221409"
  },
  {
    "text": "to you know keep up with the load and",
    "start": "1221409",
    "end": "1223269"
  },
  {
    "text": "and with demand and I think it's I think",
    "start": "1223269",
    "end": "1225850"
  },
  {
    "text": "it's maybe even more important when",
    "start": "1225850",
    "end": "1228250"
  },
  {
    "text": "you're starting a new project or a new",
    "start": "1228250",
    "end": "1231100"
  },
  {
    "text": "business or something you might be one",
    "start": "1231100",
    "end": "1232840"
  },
  {
    "text": "or two guys in a dorm room or a garage",
    "start": "1232840",
    "end": "1234639"
  },
  {
    "text": "or something and and having to like find",
    "start": "1234639",
    "end": "1238960"
  },
  {
    "text": "or set up machines and software and all",
    "start": "1238960",
    "end": "1241480"
  },
  {
    "text": "of that sort of stuff just to see if",
    "start": "1241480",
    "end": "1242860"
  },
  {
    "text": "your products proof of concept works or",
    "start": "1242860",
    "end": "1244750"
  },
  {
    "text": "not regardless of scale I think is is",
    "start": "1244750",
    "end": "1248769"
  },
  {
    "text": "very powerful the fact that they can",
    "start": "1248769",
    "end": "1250480"
  },
  {
    "text": "just create a table and start shoving",
    "start": "1250480",
    "end": "1252159"
  },
  {
    "text": "data in it and and then get the data",
    "start": "1252159",
    "end": "1254110"
  },
  {
    "text": "back without having to know anything",
    "start": "1254110",
    "end": "1255730"
  },
  {
    "text": "about any of the software or anything",
    "start": "1255730",
    "end": "1258190"
  },
  {
    "text": "like that is has got to be stupendous",
    "start": "1258190",
    "end": "1259779"
  },
  {
    "text": "and if they're lucky enough to have",
    "start": "1259779",
    "end": "1262029"
  },
  {
    "text": "scalability challenges down the road",
    "start": "1262029",
    "end": "1263740"
  },
  {
    "text": "then they're ready to go great and we've",
    "start": "1263740",
    "end": "1267250"
  },
  {
    "text": "been getting some questions on Twitter",
    "start": "1267250",
    "end": "1269039"
  },
  {
    "text": "throughout the broadcast a little bit",
    "start": "1269039",
    "end": "1270970"
  },
  {
    "text": "earlier this morning and I wanted to",
    "start": "1270970",
    "end": "1272200"
  },
  {
    "text": "throw some questions out to you guys to",
    "start": "1272200",
    "end": "1274169"
  },
  {
    "text": "clarify a few things one of the features",
    "start": "1274169",
    "end": "1277389"
  },
  {
    "text": "that we announced was integration with",
    "start": "1277389",
    "end": "1278980"
  },
  {
    "text": "Amazon Elastic MapReduce or EMR maybe",
    "start": "1278980",
    "end": "1282840"
  },
  {
    "text": "Swami if you want to talk about some of",
    "start": "1282840",
    "end": "1284950"
  },
  {
    "text": "the use cases and how these two",
    "start": "1284950",
    "end": "1286480"
  },
  {
    "text": "technologies fit together sure elastic",
    "start": "1286480",
    "end": "1290260"
  },
  {
    "start": "1288000",
    "end": "1782000"
  },
  {
    "text": "MapReduce is our pay-as-you-go Hadoop",
    "start": "1290260",
    "end": "1293559"
  },
  {
    "text": "framework that we run on top of AWS so",
    "start": "1293559",
    "end": "1296080"
  },
  {
    "text": "DynamoDB going out the door it is",
    "start": "1296080",
    "end": "1299350"
  },
  {
    "text": "integrated with the elastic MapReduce",
    "start": "1299350",
    "end": "1301330"
  },
  {
    "text": "amazon llamaras we call it and using",
    "start": "1301330",
    "end": "1304659"
  },
  {
    "text": "elastic MapReduce you can actually do",
    "start": "1304659",
    "end": "1306730"
  },
  {
    "text": "for instance various things one of the",
    "start": "1306730",
    "end": "1309460"
  },
  {
    "text": "first thing you can do is you can run",
    "start": "1309460",
    "end": "1310779"
  },
  {
    "text": "complex and outtakes queries on top of",
    "start": "1310779",
    "end": "1312820"
  },
  {
    "text": "dynamo dB for instance you can join",
    "start": "1312820",
    "end": "1315340"
  },
  {
    "text": "multiple DynamoDB tables and run like",
    "start": "1315340",
    "end": "1319179"
  },
  {
    "text": "high sequel queries the second thing is",
    "start": "1319179",
    "end": "1322690"
  },
  {
    "text": "you can archive some of your DynamoDB",
    "start": "1322690",
    "end": "1324909"
  },
  {
    "text": "tables to amazon s3 as a backup if you",
    "start": "1324909",
    "end": "1329470"
  },
  {
    "text": "would like it to be and then the third",
    "start": "1329470",
    "end": "1330940"
  },
  {
    "text": "thing is you can actually run high",
    "start": "1330940",
    "end": "1333639"
  },
  {
    "text": "sequel queries joining your day",
    "start": "1333639",
    "end": "1335590"
  },
  {
    "text": "does stolen s3 that actually data stored",
    "start": "1335590",
    "end": "1338140"
  },
  {
    "text": "in DynamoDB to run more complex on our",
    "start": "1338140",
    "end": "1340870"
  },
  {
    "text": "text queries he think this is a big",
    "start": "1340870",
    "end": "1342880"
  },
  {
    "text": "enabler for like big data analysis it's",
    "start": "1342880",
    "end": "1347049"
  },
  {
    "text": "actually also the tool that you can use",
    "start": "1347049",
    "end": "1348549"
  },
  {
    "text": "to ingest dancer too out of all the",
    "start": "1348549",
    "end": "1351640"
  },
  {
    "text": "databases into dynamodb can you see em",
    "start": "1351640",
    "end": "1354549"
  },
  {
    "text": "are two very simply do transformation so",
    "start": "1354549",
    "end": "1356830"
  },
  {
    "text": "then push it into into dynamodb great",
    "start": "1356830",
    "end": "1359590"
  },
  {
    "text": "verner we had some questions on default",
    "start": "1359590",
    "end": "1362080"
  },
  {
    "text": "limits for tables and requests yes i buy",
    "start": "1362080",
    "end": "1364750"
  },
  {
    "text": "that so as with every AWS service we",
    "start": "1364750",
    "end": "1367690"
  },
  {
    "text": "launched with a number of limits around",
    "start": "1367690",
    "end": "1370090"
  },
  {
    "text": "the resources that you can use but as",
    "start": "1370090",
    "end": "1373179"
  },
  {
    "text": "with every other a degree a service you",
    "start": "1373179",
    "end": "1375850"
  },
  {
    "text": "can easily get those limits lifted by",
    "start": "1375850",
    "end": "1378220"
  },
  {
    "text": "just filling out the request form okay",
    "start": "1378220",
    "end": "1380440"
  },
  {
    "text": "great and in terms of the different",
    "start": "1380440",
    "end": "1385179"
  },
  {
    "text": "query models that are support with some",
    "start": "1385179",
    "end": "1387070"
  },
  {
    "text": "people asking about the types of queries",
    "start": "1387070",
    "end": "1388929"
  },
  {
    "text": "and data models that are going to be",
    "start": "1388929",
    "end": "1390460"
  },
  {
    "text": "featured in DynamoDB that people are",
    "start": "1390460",
    "end": "1391809"
  },
  {
    "text": "going to use be a Swami so DynamoDB",
    "start": "1391809",
    "end": "1397510"
  },
  {
    "text": "supports primarily access based on",
    "start": "1397510",
    "end": "1400450"
  },
  {
    "text": "primary key so primary key you can",
    "start": "1400450",
    "end": "1402880"
  },
  {
    "text": "actually of each table you select a",
    "start": "1402880",
    "end": "1405279"
  },
  {
    "text": "primary key and it can be of two forms",
    "start": "1405279",
    "end": "1407890"
  },
  {
    "text": "one is a single attribute primary key",
    "start": "1407890",
    "end": "1409779"
  },
  {
    "text": "value hash on let's say customer ID or",
    "start": "1409779",
    "end": "1412029"
  },
  {
    "text": "something like that the other model what",
    "start": "1412029",
    "end": "1415419"
  },
  {
    "text": "we call us is an a composite key which",
    "start": "1415419",
    "end": "1417520"
  },
  {
    "text": "is a hash range key so what you",
    "start": "1417520",
    "end": "1421179"
  },
  {
    "text": "essentially do is compost two attributes",
    "start": "1421179",
    "end": "1423100"
  },
  {
    "text": "in your table to form your primary key a",
    "start": "1423100",
    "end": "1425649"
  },
  {
    "text": "primary example of an composite key will",
    "start": "1425649",
    "end": "1429279"
  },
  {
    "text": "be like let's say it's a customer order",
    "start": "1429279",
    "end": "1431140"
  },
  {
    "text": "table you hash on customer ID and then",
    "start": "1431140",
    "end": "1433720"
  },
  {
    "text": "range on let's say the order times time",
    "start": "1433720",
    "end": "1435580"
  },
  {
    "text": "so now but this composite key model you",
    "start": "1435580",
    "end": "1439450"
  },
  {
    "text": "can even actually do queries like find",
    "start": "1439450",
    "end": "1441789"
  },
  {
    "text": "all the orders placed by this customer",
    "start": "1441789",
    "end": "1443799"
  },
  {
    "text": "in the past 24 hours it is still letting",
    "start": "1443799",
    "end": "1446140"
  },
  {
    "text": "our primary key base range access and it",
    "start": "1446140",
    "end": "1449620"
  },
  {
    "text": "still gets you actually a lot more query",
    "start": "1449620",
    "end": "1451600"
  },
  {
    "text": "functionality great and then you talk a",
    "start": "1451600",
    "end": "1456669"
  },
  {
    "text": "little bit about backups before how",
    "start": "1456669",
    "end": "1458289"
  },
  {
    "text": "people should trust you people think",
    "start": "1458289",
    "end": "1459610"
  },
  {
    "text": "about backups first of all dynamodb is",
    "start": "1459610",
    "end": "1464919"
  },
  {
    "text": "fault tolerant extremely reliable but it",
    "start": "1464919",
    "end": "1467830"
  },
  {
    "text": "replicates data",
    "start": "1467830",
    "end": "1469280"
  },
  {
    "text": "cross multiple availability zones",
    "start": "1469280",
    "end": "1471190"
  },
  {
    "text": "synchronously so that's it if customers",
    "start": "1471190",
    "end": "1474170"
  },
  {
    "text": "want additional backups earlier I talked",
    "start": "1474170",
    "end": "1477290"
  },
  {
    "text": "about elastic MapReduce they can use the",
    "start": "1477290",
    "end": "1480200"
  },
  {
    "text": "EMR infrastructure to actually run",
    "start": "1480200",
    "end": "1484870"
  },
  {
    "text": "archive eventually the existing dynamodb",
    "start": "1484870",
    "end": "1487790"
  },
  {
    "text": "tables on to s3 so that is one way that",
    "start": "1487790",
    "end": "1490370"
  },
  {
    "text": "customers can take their own backups if",
    "start": "1490370",
    "end": "1493280"
  },
  {
    "text": "they would like and then restoring it as",
    "start": "1493280",
    "end": "1495620"
  },
  {
    "text": "easy as taking that one and actually",
    "start": "1495620",
    "end": "1497450"
  },
  {
    "text": "populate a new table with it great well",
    "start": "1497450",
    "end": "1500330"
  },
  {
    "text": "I think kind of wrapping it up so you",
    "start": "1500330",
    "end": "1502580"
  },
  {
    "text": "want to offer some summary closing",
    "start": "1502580",
    "end": "1505220"
  },
  {
    "text": "comments all right so now so I think",
    "start": "1505220",
    "end": "1507050"
  },
  {
    "text": "we're all very excited I think this is",
    "start": "1507050",
    "end": "1508880"
  },
  {
    "text": "something that we've been working on for",
    "start": "1508880",
    "end": "1510170"
  },
  {
    "text": "for quite a while and I personally I'm",
    "start": "1510170",
    "end": "1512480"
  },
  {
    "text": "really stoked about this by finally",
    "start": "1512480",
    "end": "1515000"
  },
  {
    "text": "giving getting the power of the no",
    "start": "1515000",
    "end": "1517010"
  },
  {
    "text": "sequel in the hands of everyone and I",
    "start": "1517010",
    "end": "1519230"
  },
  {
    "text": "think it has we moved great obstacles",
    "start": "1519230",
    "end": "1521300"
  },
  {
    "text": "because you know this seamless scale",
    "start": "1521300",
    "end": "1523370"
  },
  {
    "text": "with zero administration means that",
    "start": "1523370",
    "end": "1525170"
  },
  {
    "text": "everybody can start using no sequel",
    "start": "1525170",
    "end": "1528260"
  },
  {
    "text": "tomorrow and I think together with the",
    "start": "1528260",
    "end": "1530390"
  },
  {
    "text": "the revolutionary as I make quality the",
    "start": "1530390",
    "end": "1532850"
  },
  {
    "text": "provision throughput model where",
    "start": "1532850",
    "end": "1535130"
  },
  {
    "text": "customers can really dial up the",
    "start": "1535130",
    "end": "1537080"
  },
  {
    "text": "database capacity without having to",
    "start": "1537080",
    "end": "1539840"
  },
  {
    "text": "think about it so you know for example",
    "start": "1539840",
    "end": "1541970"
  },
  {
    "text": "in the past doing capacity planning was",
    "start": "1541970",
    "end": "1545630"
  },
  {
    "text": "hard you know and now with capacity",
    "start": "1545630",
    "end": "1548630"
  },
  {
    "text": "planning because making a mistake was",
    "start": "1548630",
    "end": "1550940"
  },
  {
    "text": "really costly if you bought the wrong",
    "start": "1550940",
    "end": "1552440"
  },
  {
    "text": "heart where you're going to be stuck",
    "start": "1552440",
    "end": "1553640"
  },
  {
    "text": "with this is done had bought the wrong",
    "start": "1553640",
    "end": "1555710"
  },
  {
    "text": "big big box that would be a very costly",
    "start": "1555710",
    "end": "1557630"
  },
  {
    "text": "mistake which way then we went with with",
    "start": "1557630",
    "end": "1561950"
  },
  {
    "text": "the new model actually no capacity",
    "start": "1561950",
    "end": "1563870"
  },
  {
    "text": "planning is still something that you",
    "start": "1563870",
    "end": "1565370"
  },
  {
    "text": "need to do because you need to figure",
    "start": "1565370",
    "end": "1567050"
  },
  {
    "text": "out how much capacity you need but",
    "start": "1567050",
    "end": "1568880"
  },
  {
    "text": "making a mistake doesn't cost you",
    "start": "1568880",
    "end": "1570620"
  },
  {
    "text": "anything it's simply a matter of dialing",
    "start": "1570620",
    "end": "1572930"
  },
  {
    "text": "it up further or dialing it down and so",
    "start": "1572930",
    "end": "1575210"
  },
  {
    "text": "that term that completely removes all",
    "start": "1575210",
    "end": "1577760"
  },
  {
    "text": "the work that developers had to do in",
    "start": "1577760",
    "end": "1580220"
  },
  {
    "text": "very tightly controlling costs around",
    "start": "1580220",
    "end": "1582500"
  },
  {
    "text": "their hardware infrastructure so by",
    "start": "1582500",
    "end": "1584720"
  },
  {
    "text": "providing amazon DynamoDB I think we've",
    "start": "1584720",
    "end": "1587480"
  },
  {
    "text": "lifted a great burden over many",
    "start": "1587480",
    "end": "1589580"
  },
  {
    "text": "developers so shoulders great well thank",
    "start": "1589580",
    "end": "1591860"
  },
  {
    "text": "you Verner thank you swami Thank You Don",
    "start": "1591860",
    "end": "1593570"
  },
  {
    "text": "thank you everyone for joining us today",
    "start": "1593570",
    "end": "1595370"
  },
  {
    "text": "if you'd like some more information",
    "start": "1595370",
    "end": "1596870"
  },
  {
    "text": "about dynamodb advise you to take a look",
    "start": "1596870",
    "end": "1599690"
  },
  {
    "text": "at our website at AWS",
    "start": "1599690",
    "end": "1602490"
  },
  {
    "text": "amazon.com / DynamoDB where you can sign",
    "start": "1602490",
    "end": "1605820"
  },
  {
    "text": "up for our free tier of service and",
    "start": "1605820",
    "end": "1607230"
  },
  {
    "text": "we'll leave you with a short YouTube",
    "start": "1607230",
    "end": "1608760"
  },
  {
    "text": "video that we put together that you can",
    "start": "1608760",
    "end": "1610170"
  },
  {
    "text": "share with friends to give them a quick",
    "start": "1610170",
    "end": "1611429"
  },
  {
    "text": "overview of the new service when you're",
    "start": "1611429",
    "end": "1617100"
  },
  {
    "text": "building an application you want it to",
    "start": "1617100",
    "end": "1619080"
  },
  {
    "text": "run fast and you want it to stay fast as",
    "start": "1619080",
    "end": "1621630"
  },
  {
    "text": "your business grows and more and more",
    "start": "1621630",
    "end": "1623400"
  },
  {
    "text": "people use your app databases have",
    "start": "1623400",
    "end": "1625650"
  },
  {
    "text": "always been one of the biggest",
    "start": "1625650",
    "end": "1626820"
  },
  {
    "text": "challenges and scaling these",
    "start": "1626820",
    "end": "1628350"
  },
  {
    "text": "applications most databases just weren't",
    "start": "1628350",
    "end": "1630750"
  },
  {
    "text": "designed to match the scale and",
    "start": "1630750",
    "end": "1632309"
  },
  {
    "text": "performance needs of modern apps as more",
    "start": "1632309",
    "end": "1634980"
  },
  {
    "text": "and more people use your app and you add",
    "start": "1634980",
    "end": "1636840"
  },
  {
    "text": "more and more web servers the database",
    "start": "1636840",
    "end": "1638790"
  },
  {
    "text": "layer often can't keep up it gets slower",
    "start": "1638790",
    "end": "1641400"
  },
  {
    "text": "and slower and sometimes fails taking",
    "start": "1641400",
    "end": "1643770"
  },
  {
    "text": "your application down with it you can",
    "start": "1643770",
    "end": "1645840"
  },
  {
    "text": "try to get around this problem by",
    "start": "1645840",
    "end": "1647220"
  },
  {
    "text": "building a large cluster of databases",
    "start": "1647220",
    "end": "1648900"
  },
  {
    "text": "this can work for a while but it's hard",
    "start": "1648900",
    "end": "1651270"
  },
  {
    "text": "and expensive and requires a lot of",
    "start": "1651270",
    "end": "1652800"
  },
  {
    "text": "expertise you have to make sure your",
    "start": "1652800",
    "end": "1655380"
  },
  {
    "text": "database keeps running and data isn't",
    "start": "1655380",
    "end": "1657240"
  },
  {
    "text": "lost even if one of your servers goes",
    "start": "1657240",
    "end": "1659190"
  },
  {
    "text": "down or there's a problem with one of",
    "start": "1659190",
    "end": "1660960"
  },
  {
    "text": "your data centers you have to know what",
    "start": "1660960",
    "end": "1662910"
  },
  {
    "text": "to do if your application grows so fast",
    "start": "1662910",
    "end": "1664500"
  },
  {
    "text": "that your cluster is no longer big",
    "start": "1664500",
    "end": "1666360"
  },
  {
    "text": "enough and you have to make sure your",
    "start": "1666360",
    "end": "1668340"
  },
  {
    "text": "databases are running the latest",
    "start": "1668340",
    "end": "1669660"
  },
  {
    "text": "software and be ready to patch or",
    "start": "1669660",
    "end": "1671700"
  },
  {
    "text": "upgrade the software without shutting",
    "start": "1671700",
    "end": "1673440"
  },
  {
    "text": "down your business what if you could",
    "start": "1673440",
    "end": "1675179"
  },
  {
    "text": "replace all this complex software and",
    "start": "1675179",
    "end": "1677429"
  },
  {
    "text": "hardware with a database service",
    "start": "1677429",
    "end": "1679170"
  },
  {
    "text": "designed from the ground up to support",
    "start": "1679170",
    "end": "1681330"
  },
  {
    "text": "the low latency high throughput",
    "start": "1681330",
    "end": "1682800"
  },
  {
    "text": "requirements of today's high scale",
    "start": "1682800",
    "end": "1685050"
  },
  {
    "text": "applications introducing Amazon DynamoDB",
    "start": "1685050",
    "end": "1688980"
  },
  {
    "text": "a high-performance non-relational",
    "start": "1688980",
    "end": "1691380"
  },
  {
    "text": "database service built for the cloud",
    "start": "1691380",
    "end": "1693830"
  },
  {
    "text": "DynamoDB is very easy to use you can",
    "start": "1693830",
    "end": "1697230"
  },
  {
    "text": "forget about all the problems that come",
    "start": "1697230",
    "end": "1698850"
  },
  {
    "text": "with managing your own software and",
    "start": "1698850",
    "end": "1700380"
  },
  {
    "text": "infrastructure that's because DynamoDB",
    "start": "1700380",
    "end": "1702660"
  },
  {
    "text": "isn't database software it's a database",
    "start": "1702660",
    "end": "1705240"
  },
  {
    "text": "service that handles all of this for you",
    "start": "1705240",
    "end": "1707220"
  },
  {
    "text": "you just tell the service how many",
    "start": "1707220",
    "end": "1709290"
  },
  {
    "text": "requests it needs to be able to handle",
    "start": "1709290",
    "end": "1710820"
  },
  {
    "text": "per second and it does the rest",
    "start": "1710820",
    "end": "1712470"
  },
  {
    "text": "automatically",
    "start": "1712470",
    "end": "1713940"
  },
  {
    "text": "then when your application really takes",
    "start": "1713940",
    "end": "1716850"
  },
  {
    "text": "off and your database now needs to be",
    "start": "1716850",
    "end": "1718980"
  },
  {
    "text": "able to handle thousands or even",
    "start": "1718980",
    "end": "1720570"
  },
  {
    "text": "hundreds of thousands of more requests",
    "start": "1720570",
    "end": "1722639"
  },
  {
    "text": "what do you do you just dial in the",
    "start": "1722639",
    "end": "1724799"
  },
  {
    "text": "scale that you want and that's it we",
    "start": "1724799",
    "end": "1726809"
  },
  {
    "text": "automatically spread your data across",
    "start": "1726809",
    "end": "1728639"
  },
  {
    "text": "enough hardware to provide consistent",
    "start": "1728639",
    "end": "1730710"
  },
  {
    "text": "performance and to protect against",
    "start": "1730710",
    "end": "1732600"
  },
  {
    "text": "downtime and Amazon DynamoDB isn't just",
    "start": "1732600",
    "end": "1736230"
  },
  {
    "text": "easy to use it's also really really fast",
    "start": "1736230",
    "end": "1738799"
  },
  {
    "text": "instead of using traditional hard drives",
    "start": "1738799",
    "end": "1741149"
  },
  {
    "text": "your data is stored on solid state",
    "start": "1741149",
    "end": "1742980"
  },
  {
    "text": "drives for fast access to your data in",
    "start": "1742980",
    "end": "1745889"
  },
  {
    "text": "addition to being fast DynamoDB is also",
    "start": "1745889",
    "end": "1748529"
  },
  {
    "text": "extremely reliable we automatically",
    "start": "1748529",
    "end": "1750690"
  },
  {
    "text": "replicate your data across multiple AWS",
    "start": "1750690",
    "end": "1753539"
  },
  {
    "text": "availability zones to protect your data",
    "start": "1753539",
    "end": "1755549"
  },
  {
    "text": "and to provide high uptime Plus DynamoDB",
    "start": "1755549",
    "end": "1758879"
  },
  {
    "text": "is synchronous replication architecture",
    "start": "1758879",
    "end": "1760710"
  },
  {
    "text": "protects your database from hardware",
    "start": "1760710",
    "end": "1762299"
  },
  {
    "text": "failures in any individual node and you",
    "start": "1762299",
    "end": "1765330"
  },
  {
    "text": "can get started with DynamoDB for free",
    "start": "1765330",
    "end": "1767490"
  },
  {
    "text": "so when you're ready to take your",
    "start": "1767490",
    "end": "1768960"
  },
  {
    "text": "database to cloud scale visit our",
    "start": "1768960",
    "end": "1771029"
  },
  {
    "text": "website and sign up for the free tier of",
    "start": "1771029",
    "end": "1772980"
  },
  {
    "text": "service today",
    "start": "1772980",
    "end": "1775518"
  },
  {
    "text": "you",
    "start": "1776610",
    "end": "1778670"
  }
]