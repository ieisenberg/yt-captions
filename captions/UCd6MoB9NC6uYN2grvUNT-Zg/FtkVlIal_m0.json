[
  {
    "start": "0",
    "end": "38000"
  },
  {
    "text": "okay go ahead and get started thanks everybody for coming today my name is",
    "start": "79",
    "end": "6330"
  },
  {
    "text": "Richard I work for a Tobias mobile team I'm joined with a colleague of mine Karthik he's one of our software development engineers and part of the",
    "start": "6330",
    "end": "13860"
  },
  {
    "text": "team that built any service that you're gonna hear about today known as aw saps Inc this is a managed graph QL service",
    "start": "13860",
    "end": "21000"
  },
  {
    "text": "running on top of AWS it has features like real-time data communications as well as offline capabilities and we're",
    "start": "21000",
    "end": "27869"
  },
  {
    "text": "gonna dive into some of these features and focus on that a little bit more in this session there's also sessions this afternoon",
    "start": "27869",
    "end": "33480"
  },
  {
    "text": "that cover a bit more of the infrastructure pieces if you're interested in that sign it as well so before we get into this why are offline",
    "start": "33480",
    "end": "42329"
  },
  {
    "start": "38000",
    "end": "133000"
  },
  {
    "text": "in real-time use cases important right and why did we build these features into a SS app sync well you know this service",
    "start": "42329",
    "end": "49739"
  },
  {
    "text": "actually started from us talking to customers here at reinvent last year in fact and it permeates like we have all",
    "start": "49739",
    "end": "57329"
  },
  {
    "text": "sorts of features in A to B us around authorization authentication targeted messaging analytics and things like that",
    "start": "57329",
    "end": "63000"
  },
  {
    "text": "but data is still really hard right and if you look at some of the real-time use",
    "start": "63000",
    "end": "68700"
  },
  {
    "text": "cases people have news feeds and news apps and chat messages even you've seen some of them in the announcements the",
    "start": "68700",
    "end": "74760"
  },
  {
    "text": "past couple days around AR and VR and everybody would just wants information immediately and this could be because an",
    "start": "74760",
    "end": "79830"
  },
  {
    "text": "event of something that happened on a banking transaction or it could be because of a chat message but at the same time that's when they're connected",
    "start": "79830",
    "end": "86250"
  },
  {
    "text": "and then people go into the subway or they go between buildings where Wi-Fi is change or they're in a geography that",
    "start": "86250",
    "end": "93060"
  },
  {
    "text": "doesn't have great infrastructure right this is still the case for many places today and what's interesting is some of",
    "start": "93060",
    "end": "99210"
  },
  {
    "text": "those same application use cases right like that news app needs to be available when I'm offline I want to read things",
    "start": "99210",
    "end": "105119"
  },
  {
    "text": "on you know I'm on the bus or in the subway or something like that right even chat messages very common use cases I'm",
    "start": "105119",
    "end": "111479"
  },
  {
    "text": "having a conversation with someone but I didn't see it until I you know was in transit and then I want to send a",
    "start": "111479",
    "end": "117000"
  },
  {
    "text": "message so that it's optimistically you know sent off to that other person when it come back online so there's a tight",
    "start": "117000",
    "end": "122640"
  },
  {
    "text": "kind of coupling between these two and these are some interesting things we're going to talk about especially around",
    "start": "122640",
    "end": "128310"
  },
  {
    "text": "conflict resolution today but the first is that we usually want to start off with when we talk about the services",
    "start": "128310",
    "end": "133710"
  },
  {
    "start": "133000",
    "end": "297000"
  },
  {
    "text": "what is graph QL I hesitate to do this but how many people in the room like",
    "start": "133710",
    "end": "139350"
  },
  {
    "text": "feel like they have a good understanding of what graph QL is already ok that's usually to be expected so this is like",
    "start": "139350",
    "end": "146910"
  },
  {
    "text": "one of the most you know hot up incoming technologies especially in the front-end experience or mobile client developers",
    "start": "146910",
    "end": "152760"
  },
  {
    "text": "of how they program today and first and foremost this is an open standard right and you'll notice more and more things",
    "start": "152760",
    "end": "159510"
  },
  {
    "text": "around AWS to the past in a few weeks that we've done in the mobile team especially around really embracing open",
    "start": "159510",
    "end": "165030"
  },
  {
    "text": "standards and technologies from graph QL to some other things that we're using the service such as velocity template languages we just did some releases last",
    "start": "165030",
    "end": "172110"
  },
  {
    "text": "week on a new library for supporting the JavaScript ecosystem especially reacting",
    "start": "172110",
    "end": "179190"
  },
  {
    "text": "react native and but specifically this standard is around data fetching and having a declarative style of defining",
    "start": "179190",
    "end": "185460"
  },
  {
    "text": "what data requirements your applications need at runtime so the first big thing",
    "start": "185460",
    "end": "190680"
  },
  {
    "text": "just to clarify graph QL does not mean graph database this usually comes up quite a bit you can use anything on the",
    "start": "190680",
    "end": "196920"
  },
  {
    "text": "backend you want to you can use relational style databases you can use no sequel databases you can use HTTP",
    "start": "196920",
    "end": "202230"
  },
  {
    "text": "endpoints if you wanted to or in-memory cache is like Redis for example and the idea is instead of using like a",
    "start": "202230",
    "end": "209310"
  },
  {
    "text": "traditional style of a mobile app to where you know I might want to get some blog posts right so what do you usually do if you were building a rest style",
    "start": "209310",
    "end": "215640"
  },
  {
    "text": "back-end I hit a posts endpoint and it returns to me a number of items you know",
    "start": "215640",
    "end": "221280"
  },
  {
    "text": "IDs usually like let's say it's n but let's say it's 10 is our number of n so I get 10 IDs back and then to get info",
    "start": "221280",
    "end": "228870"
  },
  {
    "text": "on those I have to you know either do posts or gets and return that ID as a query parameter so I do that and +1",
    "start": "228870",
    "end": "236010"
  },
  {
    "text": "times and this is one of the things that you know burns battery life burn CPU cycles and things like this but if I",
    "start": "236010",
    "end": "242340"
  },
  {
    "text": "wanted to change this and I just want to get the title right well now I need to create a resource endpoint post by title",
    "start": "242340",
    "end": "248190"
  },
  {
    "text": "I just wanted to get the author I need to do that if I wanted to get creative and do like some sort of parameter starts with X I need to change this and",
    "start": "248190",
    "end": "254520"
  },
  {
    "text": "you can see how the problem compounds itself compounds itself even more when you want to add things like fine-grained",
    "start": "254520",
    "end": "260760"
  },
  {
    "text": "authorization or controls on on some of these endpoints and with graph coats a little bit different right so",
    "start": "260760",
    "end": "266720"
  },
  {
    "text": "instead of the implementation like these other methods of the data requirements",
    "start": "266720",
    "end": "271970"
  },
  {
    "text": "being encoded on your back-end services what happens is the client defines an operation sends it to the endpoint",
    "start": "271970",
    "end": "277750"
  },
  {
    "text": "endpoint parses this operation and turns it into an abstract syntax tree and for",
    "start": "277750",
    "end": "283370"
  },
  {
    "text": "whatever are fields that you requested it runs a function that function is what speaks to your back-end data sources and",
    "start": "283370",
    "end": "289820"
  },
  {
    "text": "gets those specific fields that the client needs and this is all done on demand and we managed this in AWS absent",
    "start": "289820",
    "end": "296810"
  },
  {
    "text": "for you so how does it work then from that architecture well the first thing is you define what's known as your application schema and this is",
    "start": "296810",
    "end": "303410"
  },
  {
    "start": "297000",
    "end": "370000"
  },
  {
    "text": "traditionally done in graph QL known as something known with something known as SDL or schema definition language the",
    "start": "303410",
    "end": "310460"
  },
  {
    "text": "idea is that I specify some user-defined type like in this case it's a to do I give it a unique ID maybe a description",
    "start": "310460",
    "end": "316940"
  },
  {
    "text": "in a priority and then I expose that via one of the top-level graph QL types in",
    "start": "316940",
    "end": "322370"
  },
  {
    "text": "this case you're always required to have at least one query so I've just got get to dues and I return a list of to dues",
    "start": "322370",
    "end": "327590"
  },
  {
    "text": "here I could also have some one of the other two top-level graph QL operations so graph QL mutation which would be",
    "start": "327590",
    "end": "334880"
  },
  {
    "text": "changing some data or I could have a subscription which we'll talk about at the end as well so basically I just",
    "start": "334880",
    "end": "340610"
  },
  {
    "text": "upload this and we you can do this via our schema editor like you'll see in our console or via the CLI and then I from",
    "start": "340610",
    "end": "346700"
  },
  {
    "text": "my client applications I can run some queries so in this case I'm saying get to deuce and I'm just specifying the ID",
    "start": "346700",
    "end": "352160"
  },
  {
    "text": "name and priority notice I didn't specify the other fields on the left because my client didn't need them and so when I do this if I'm authorized the",
    "start": "352160",
    "end": "359660"
  },
  {
    "text": "server will return back those those specific pieces of data to me and I only had to do that in one network roundtrip",
    "start": "359660",
    "end": "365840"
  },
  {
    "text": "and I only got what was required so what are some of the benefits when you have a system like this right well the first is",
    "start": "365840",
    "end": "372260"
  },
  {
    "start": "370000",
    "end": "477000"
  },
  {
    "text": "you can already probably see write my data requirements change over time not only for new apps when I'm prototyping",
    "start": "372260",
    "end": "377450"
  },
  {
    "text": "but for existing apps as well I might decide to add or remove fields dynamically as time goes on and I might",
    "start": "377450",
    "end": "382760"
  },
  {
    "text": "decide to change them across platforms right they could be different for web or for native apps or for hybrid apps it",
    "start": "382760",
    "end": "388400"
  },
  {
    "text": "also has some features like introspection to where you can walk through the schema dynamically if you've never been exposed to a specific",
    "start": "388400",
    "end": "394970"
  },
  {
    "text": "customers API before but from a developer standpoint especially front-end engineer you get this concept known as colocation",
    "start": "394970",
    "end": "402210"
  },
  {
    "text": "of your data requirements with your views right and so what we mean by that is I mentioned you don't have the",
    "start": "402210",
    "end": "407460"
  },
  {
    "text": "implementation encoded in the backend instead now in your client application you've got your view libraries right",
    "start": "407460",
    "end": "413190"
  },
  {
    "text": "maybe that's a react application maybe it's iOS like we're going to show you in a few minutes and that is me the",
    "start": "413190",
    "end": "418560"
  },
  {
    "text": "developer defining how the app is going to look on the screen in my same project I'm able to define the date of",
    "start": "418560",
    "end": "424500"
  },
  {
    "text": "requirements that that view has and change it dynamically as time goes on so this gets you a really rapid iteration",
    "start": "424500",
    "end": "429900"
  },
  {
    "text": "and development cycle you've also got other things like I mentioned before batching solving this n plus 1 problem",
    "start": "429900",
    "end": "436110"
  },
  {
    "text": "with just requesting everything one time over the network the other thing that's really cool right is like you look at",
    "start": "436110",
    "end": "441479"
  },
  {
    "text": "either open source or you know cloud man cloud managed solutions around real-time communications and many times they're",
    "start": "441479",
    "end": "448530"
  },
  {
    "text": "just everything or nothing right you either are all requests response from an HTTP standpoint or you just have like",
    "start": "448530",
    "end": "453810"
  },
  {
    "text": "real-time WebSockets kind of spewing data all over the place with graph QL you're able to give controls over this",
    "start": "453810",
    "end": "459360"
  },
  {
    "text": "right so you can have request response style on queries and mutations do things like pagination even do relations on",
    "start": "459360",
    "end": "466139"
  },
  {
    "text": "data and then the data that needs to be real-time manner you can hook that up to graph QL subscriptions so you can have",
    "start": "466139",
    "end": "472380"
  },
  {
    "text": "like this this detailed control over your CPU and battery life that you've never had before so what we're going to",
    "start": "472380",
    "end": "479010"
  },
  {
    "start": "477000",
    "end": "498000"
  },
  {
    "text": "talk today about is usually as we as we get into the theory of graph QL there's questions around can you do real-time can you do batching can you do",
    "start": "479010",
    "end": "485460"
  },
  {
    "text": "pagination can you do relations without a relational database right all the things on this screen can you do search",
    "start": "485460",
    "end": "491400"
  },
  {
    "text": "can you do offline and the thing that we're releasing today to be a SAP sync is here to answer yes you can do all of",
    "start": "491400",
    "end": "496860"
  },
  {
    "text": "these things so AWS app sync is a managed service for using graph QL on",
    "start": "496860",
    "end": "502770"
  },
  {
    "start": "498000",
    "end": "658000"
  },
  {
    "text": "top of AWS that gives you both real-time capabilities as well as an offline programming model so you connect to",
    "start": "502770",
    "end": "508560"
  },
  {
    "text": "resources in your own AWS account which means that you own and control your own data it's not an opaque data store or",
    "start": "508560",
    "end": "513990"
  },
  {
    "text": "anything like that if you wanted to you could you know manipulate those those data resources as you like even perform",
    "start": "513990",
    "end": "520589"
  },
  {
    "text": "ETL transformations on them and the background back-end and it allows you to start small and graduate as your",
    "start": "520589",
    "end": "525750"
  },
  {
    "text": "business grows you can make your data sources real-time and that's any data",
    "start": "525750",
    "end": "531420"
  },
  {
    "text": "source so primarily at the to start here we support Amazon DynamoDB Amazon Elastic search in AWS lambda by",
    "start": "531420",
    "end": "539160"
  },
  {
    "text": "hooking these up to graph QL subscriptions means that you can even have like a lambda function calling an RDS database and that can be made",
    "start": "539160",
    "end": "545640"
  },
  {
    "text": "real-time in response to mutations we give you some unique controls for the offline scenarios around conflict",
    "start": "545640",
    "end": "551190"
  },
  {
    "text": "resolution not only do we have bass conflict detection rules on what we can",
    "start": "551190",
    "end": "556740"
  },
  {
    "text": "accept and then reject but we allows you to override these and control them you can do conflict resolution in the cloud",
    "start": "556740",
    "end": "561899"
  },
  {
    "text": "through custom strategies where you run this with AWS lambda functions for scenarios like maybe everybody is",
    "start": "561899",
    "end": "567630"
  },
  {
    "text": "writing to some shared collaboration app in a chatroom but only the moderator has rights for their conflicts to win right",
    "start": "567630",
    "end": "573390"
  },
  {
    "text": "and that logic can be in the clouds so that when your strategy changes you don't need to redeploy apps to the App Store anything like that however we do",
    "start": "573390",
    "end": "580260"
  },
  {
    "text": "still give you client-side callbacks and overrides if you want to go to that route finally we spent a lot of time on",
    "start": "580260",
    "end": "586320"
  },
  {
    "text": "enterprise level security features for this so to get started we provide you some API keys just if you default create",
    "start": "586320",
    "end": "592020"
  },
  {
    "text": "a graph QL endpoint but we also allow you to use AWS I am and Amazon Cognito",
    "start": "592020",
    "end": "597570"
  },
  {
    "text": "user pools so you can do a few different things with this is pretty cool so one is you can use regular ion policies with",
    "start": "597570",
    "end": "604320"
  },
  {
    "text": "roles and assign these two graphical L types who can actually invoke them you can use Cognito user pools so that",
    "start": "604320",
    "end": "610140"
  },
  {
    "text": "anybody using a cognate our user pools sending through a JWT token can invoke graphic you all operations you can use",
    "start": "610140",
    "end": "616110"
  },
  {
    "text": "groups incognito user pools so that i can have like my HR group and my engineering group and my admins and",
    "start": "616110",
    "end": "621410"
  },
  {
    "text": "assign you know allow our deny deny permissions on graph QL operations for those specific users you can also do",
    "start": "621410",
    "end": "628829"
  },
  {
    "text": "fine-grained access control inside the graph QL resolver itself so that you can",
    "start": "628829",
    "end": "634170"
  },
  {
    "text": "do ACL checks on who's owning specific pieces of data so the example the",
    "start": "634170",
    "end": "640140"
  },
  {
    "text": "classic example with this is something like I'm creating a CMS or a blog post out I want anybody to be able to read all",
    "start": "640140",
    "end": "646260"
  },
  {
    "text": "blogs or create new blogs but only the people that actually authored a specific post can edit or delete that and you we",
    "start": "646260",
    "end": "653399"
  },
  {
    "text": "can apply runtime checks inside of the graph QL resolvers for you to achieve this capability so how does it work well",
    "start": "653399",
    "end": "659970"
  },
  {
    "start": "658000",
    "end": "724000"
  },
  {
    "text": "as I mentioned you know graph do all operations in general usually start with a schema that you define so",
    "start": "659970",
    "end": "665340"
  },
  {
    "text": "you create a schema based off of the schema definition language it's pretty straightforward type the name of it in",
    "start": "665340",
    "end": "671370"
  },
  {
    "text": "some fields you can submit this via the CLI or use our in console editor which has linting in other things with it",
    "start": "671370",
    "end": "676980"
  },
  {
    "text": "to do some validations for you and then you submit it in just from there you can already do some introspection on your",
    "start": "676980",
    "end": "682350"
  },
  {
    "text": "schema and activities like that from there you can go a couple of different routes you can one bring your own",
    "start": "682350",
    "end": "688260"
  },
  {
    "text": "resources so if you have existing dynamodb tables or elasticsearch or lambda functions you can just wire them up to the managed service the other",
    "start": "688260",
    "end": "694770"
  },
  {
    "text": "thing that's pretty neat is we can provision DynamoDB resources based off of a graph QL schema so many front-end",
    "start": "694770",
    "end": "701370"
  },
  {
    "text": "engineers and client developers you know they want to own their own data but they don't necessarily want to have to worry",
    "start": "701370",
    "end": "706500"
  },
  {
    "text": "about hash keys or distributed partitions on DynamoDB tables and stuff like that what we do is we allow you",
    "start": "706500",
    "end": "712230"
  },
  {
    "text": "just have a graphical schema press the provision resources and it'll show you your queries that correspond to DynamoDB",
    "start": "712230",
    "end": "718020"
  },
  {
    "text": "tables and will automatically create the tables wire up resolvers for you and your going in a matter of minutes so",
    "start": "718020",
    "end": "724800"
  },
  {
    "start": "724000",
    "end": "808000"
  },
  {
    "text": "Before we jump into the demo a couple of things about how some of the client side pieces operate the first is this meets",
    "start": "724800",
    "end": "730740"
  },
  {
    "text": "the graphical spec so you can use you know any of the popular graphical libraries that you'd like out there what",
    "start": "730740",
    "end": "735930"
  },
  {
    "text": "we've also done is integrated with the popular Apollo graph QL client in fact we're publishing as we're doing the",
    "start": "735930",
    "end": "741570"
  },
  {
    "text": "release over the next 24 hours a bunch of plugins for this including some authorization controls and we've",
    "start": "741570",
    "end": "746910"
  },
  {
    "text": "enhanced some things such as the subscription capability on iOS around code gen using our SDKs though it has",
    "start": "746910",
    "end": "753660"
  },
  {
    "text": "some benefit right so one of them is automatic offline support built-in so you just include the SDK give it your",
    "start": "753660",
    "end": "759840"
  },
  {
    "text": "specific authorization scheme such as I am or API key and you automatically",
    "start": "759840",
    "end": "764850"
  },
  {
    "text": "persist your queries offline so we basically back the normalized cache that Apollo has you can then do some",
    "start": "764850",
    "end": "770520"
  },
  {
    "text": "manipulations like if you want to be making data changes when you're offline and updating your UI dynamically that",
    "start": "770520",
    "end": "776490"
  },
  {
    "text": "can happen so this gives you you know nice features around optimistic UI and even conflict resolution that you can",
    "start": "776490",
    "end": "782760"
  },
  {
    "text": "extend in a client-side callback the other thing is that with the SDK specifically one of the major pain",
    "start": "782760",
    "end": "788940"
  },
  {
    "text": "points that we focus to take away is we use a WebSocket connection underneath the covers it's actually an mq GC /",
    "start": "788940",
    "end": "795240"
  },
  {
    "text": "WebSocket connection but you as a developer don't need to worry about that so we handle all the handshake process",
    "start": "795240",
    "end": "800889"
  },
  {
    "text": "everything for you and automatically connect you to the service you just need to include the SDK and all the connection management is done for you so",
    "start": "800889",
    "end": "807429"
  },
  {
    "text": "with that I'm going to hand over to Karthik who's going to take you through a bit of the code and he's also going to",
    "start": "807429",
    "end": "812619"
  },
  {
    "start": "808000",
    "end": "953000"
  },
  {
    "text": "take you for their demo after that thank you Richard so so that's Richard mentioned very one",
    "start": "812619",
    "end": "819669"
  },
  {
    "text": "of the advantages of using our SDK is that you get offline capabilities out of box so what does this offline capability",
    "start": "819669",
    "end": "826239"
  },
  {
    "text": "mean so the first thing that you do is graph Gayle has three different distinct operations queries mutations and",
    "start": "826239",
    "end": "832929"
  },
  {
    "text": "subscriptions so for offline data rendering you probably would use something like a query now if you want",
    "start": "832929",
    "end": "838449"
  },
  {
    "text": "to use a query in it with AWS app sink you would do let's say that you're using a react native app or a react app you",
    "start": "838449",
    "end": "845289"
  },
  {
    "text": "will do something like this you would write code which basically is create a new client at instantiation aw Samson",
    "start": "845289",
    "end": "851919"
  },
  {
    "text": "client specify the URL so when you create a new graph killer API you get a graphical endpoint so it's a specific",
    "start": "851919",
    "end": "858129"
  },
  {
    "text": "endpoint for yard every API has a specific endpoint we are a regional service so you have to pass in the AWS",
    "start": "858129",
    "end": "864669"
  },
  {
    "text": "region and you can pass in the authorization type so you can specify a double yes I am AWS Amazon Camino user",
    "start": "864669",
    "end": "871359"
  },
  {
    "text": "pools or you can also specify API key and along with the type of authorization you can specify what is the Associated",
    "start": "871359",
    "end": "879309"
  },
  {
    "text": "value with it so if you're familiar with AWS amplify it's a library that we released a couple of weeks ago you can",
    "start": "879309",
    "end": "888249"
  },
  {
    "text": "use the AWS amplify library to pass in the auth credentials so that you can do",
    "start": "888249",
    "end": "894129"
  },
  {
    "text": "I am integration and if you're using something like an ADA user pools you can do something like auth dot get user",
    "start": "894129",
    "end": "901299"
  },
  {
    "text": "session and dot get access token and pass in the JWT token so as we should",
    "start": "901299",
    "end": "907509"
  },
  {
    "text": "mention the using the a SS absent client basically just instantiating the client",
    "start": "907509",
    "end": "913959"
  },
  {
    "text": "should give you offline capabilities out of box so now you can use this client to actually use your Apollo provider",
    "start": "913959",
    "end": "921369"
  },
  {
    "text": "higher-order components if you're familiar with Apollo Apollo has a bunch of hechos ease with four react you can",
    "start": "921369",
    "end": "928629"
  },
  {
    "text": "wire up the client and pass in the dehydrated store and that's about it you get",
    "start": "928629",
    "end": "935680"
  },
  {
    "text": "offline data rendering out of box and we're going to talk a little bit about how the data is stored on the device",
    "start": "935680",
    "end": "941530"
  },
  {
    "text": "versus how it's stored on the web and so on but that's automatically it so you",
    "start": "941530",
    "end": "947320"
  },
  {
    "text": "you don't have to spend you don't have to manage the offline storage at all now",
    "start": "947320",
    "end": "953530"
  },
  {
    "start": "953000",
    "end": "1060000"
  },
  {
    "text": "let's talk about the second part which is mutations so let's take a use case here so let's say Jane is creating a new",
    "start": "953530",
    "end": "961390"
  },
  {
    "text": "document so she created a version 1 of the document then she goes offline why",
    "start": "961390",
    "end": "967990"
  },
  {
    "text": "she goes offline she updated a document but at the same time John also used the",
    "start": "967990",
    "end": "973150"
  },
  {
    "text": "version 1 of the document that Jane created and he updated version 2 John is",
    "start": "973150",
    "end": "979030"
  },
  {
    "text": "online and also a version 3 so on the server there's three versions of was",
    "start": "979030",
    "end": "984730"
  },
  {
    "text": "version 3 is the latest version of the document say Jane comes back online and",
    "start": "984730",
    "end": "989820"
  },
  {
    "text": "what happens is that what is expected from our end user is that the whatever",
    "start": "989820",
    "end": "997150"
  },
  {
    "text": "conflicts that arise because of multiple actors in the system updating the document at the same time should be",
    "start": "997150",
    "end": "1002820"
  },
  {
    "text": "resolved automatically and that's the best user experience that you can give to a end user right so so the",
    "start": "1002820",
    "end": "1011070"
  },
  {
    "text": "expectation is that at the end of this process there's a version 4 which contains the edits made by both Jane and",
    "start": "1011070",
    "end": "1016830"
  },
  {
    "text": "John so there are three things that are happening over here sorry two things first is when Jane is editing the",
    "start": "1016830",
    "end": "1023820"
  },
  {
    "text": "document she is basically working on the on the app or your website as though she",
    "start": "1023820",
    "end": "1030660"
  },
  {
    "text": "is working without the notion of what is the network connectivity right now so so",
    "start": "1030660",
    "end": "1037170"
  },
  {
    "text": "that's one so she the app needs to behave according to that right so it needs to ensure that if there are",
    "start": "1037170",
    "end": "1043770"
  },
  {
    "text": "multiple views that are using the same document referencing the same document it needs to be reflected correctly the",
    "start": "1043770",
    "end": "1049980"
  },
  {
    "text": "second part is when she comes back online it needs to automatically manage",
    "start": "1049980",
    "end": "1055350"
  },
  {
    "text": "the conflict resolution so in order to give the best customer experience so",
    "start": "1055350",
    "end": "1060360"
  },
  {
    "start": "1060000",
    "end": "1139000"
  },
  {
    "text": "let's talk about the first part which is the optimistic UI so how can you do this with aw",
    "start": "1060360",
    "end": "1066210"
  },
  {
    "text": "in client so we support so this is the same react application using the Apolo",
    "start": "1066210",
    "end": "1072929"
  },
  {
    "text": "react we support all the four fetch policies so you start by setting something like cache and network fetch",
    "start": "1072929",
    "end": "1078779"
  },
  {
    "text": "policy what this allows the developer to do is always write to cache first and then make a network call we also support",
    "start": "1078779",
    "end": "1086100"
  },
  {
    "text": "all the other fish policies like hash only network only or cache first now the next thing that you do is",
    "start": "1086100",
    "end": "1092760"
  },
  {
    "text": "specify an optimistic response what does optimistic response really mean so optimistic response means that",
    "start": "1092760",
    "end": "1100350"
  },
  {
    "text": "assuming that the rights to server succeeded what is my view gonna look",
    "start": "1100350",
    "end": "1105510"
  },
  {
    "text": "like what is my data are going to look like and using this optimistic response which is like a function call back we're",
    "start": "1105510",
    "end": "1112409"
  },
  {
    "text": "going to make an update call and the update call basically updates the cache so let's say that I have a view called",
    "start": "1112409",
    "end": "1119490"
  },
  {
    "text": "which is using a query called all post query I'm going to update the all post query and with the optimistic response",
    "start": "1119490",
    "end": "1126360"
  },
  {
    "text": "so in this in this scenario what is happening is that wherever the all post",
    "start": "1126360",
    "end": "1132000"
  },
  {
    "text": "query is being used the data in those views could automatically reflected",
    "start": "1132000",
    "end": "1138110"
  },
  {
    "text": "let's talk about the second scenario so in case of when Jane comes back online",
    "start": "1138110",
    "end": "1145399"
  },
  {
    "start": "1139000",
    "end": "1225000"
  },
  {
    "text": "there is a notion of conflict so so the work the version that is there on the",
    "start": "1145399",
    "end": "1151380"
  },
  {
    "text": "service is version 3 and Jane is working on version 2 which is completely different from the version 2 that exists",
    "start": "1151380",
    "end": "1157440"
  },
  {
    "text": "on the service so we give you as in aw sap saying give you three ways of",
    "start": "1157440",
    "end": "1164779"
  },
  {
    "text": "strategizing your conflicts so the first one is server always wins so let's say",
    "start": "1164779",
    "end": "1170130"
  },
  {
    "text": "that Jane submits the document you can specify the strategy to say server will win and reject completely reject Jane's",
    "start": "1170130",
    "end": "1177299"
  },
  {
    "text": "changes that could be a strategy the second strategy is silent reject let's say that the changes that Jane made what",
    "start": "1177299",
    "end": "1185159"
  },
  {
    "text": "already on the system so we make Jane think that she succeeded with the",
    "start": "1185159",
    "end": "1191490"
  },
  {
    "text": "conflict and we just send back an updated version without any actual changes to the document the third part",
    "start": "1191490",
    "end": "1198330"
  },
  {
    "text": "is basically using some as a custom lambda function or a custom logic so let's say I want to actually do",
    "start": "1198330",
    "end": "1204720"
  },
  {
    "text": "complex merge scenarios so what we do is we can in a SS app sync whenever such",
    "start": "1204720",
    "end": "1212150"
  },
  {
    "text": "issue arises you can specify a lambda function and we will pass in the server",
    "start": "1212150",
    "end": "1218280"
  },
  {
    "text": "value and the client value and you can write custom logic to resolve the",
    "start": "1218280",
    "end": "1223440"
  },
  {
    "text": "conflict so how would I go about doing something like this in a SS app sync so",
    "start": "1223440",
    "end": "1229140"
  },
  {
    "start": "1225000",
    "end": "1313000"
  },
  {
    "text": "we start off by creating something called as a mapping template and I'm going to show a demo of a mapping template soon but a mapping template is",
    "start": "1229140",
    "end": "1236010"
  },
  {
    "text": "a way of it's VTL so velocity templating language so it's a way to convert your",
    "start": "1236010",
    "end": "1242790"
  },
  {
    "text": "graphical specification to your underlying data source specification so let's say in this particular case",
    "start": "1242790",
    "end": "1248370"
  },
  {
    "text": "scenario what I'm doing is I'm converting a graphical call to a dynamo DB put item call and I'm also specifying",
    "start": "1248370",
    "end": "1255660"
  },
  {
    "text": "something conditional expressions over here so these expressions are basically boolean values so they return true or",
    "start": "1255660",
    "end": "1262290"
  },
  {
    "text": "false they should return to workforce and based on this expression I can specify strategies so in this case what",
    "start": "1262290",
    "end": "1269700"
  },
  {
    "text": "I'm specifying is a custom strategy and I'm passing a lambda function on so whenever the expression evaluates to",
    "start": "1269700",
    "end": "1275160"
  },
  {
    "text": "false or a conditional check failure is raised and that's basically a DynamoDB",
    "start": "1275160",
    "end": "1282060"
  },
  {
    "text": "conditional check failure and you can and AW ops Inc will call the lambda",
    "start": "1282060",
    "end": "1287220"
  },
  {
    "text": "function and pass in the client values and the server values and you can do custom resolution for this in addition",
    "start": "1287220",
    "end": "1294030"
  },
  {
    "text": "to this we also provide a way of managing conflicts on the client so we",
    "start": "1294030",
    "end": "1300720"
  },
  {
    "text": "give you callbacks on on mutation and we will it's a fallback mechanism so you can",
    "start": "1300720",
    "end": "1307140"
  },
  {
    "text": "also think of it as client always wins kind of a strategy in addition to the T",
    "start": "1307140",
    "end": "1312210"
  },
  {
    "text": "so let's quickly jump to a demo so I",
    "start": "1312210",
    "end": "1320400"
  },
  {
    "start": "1313000",
    "end": "1446000"
  },
  {
    "text": "have an app that I have created um it's called an even shop so this is what my",
    "start": "1320400",
    "end": "1325560"
  },
  {
    "text": "schema looks like so I have a type called events it has ID name where when description comments which is basically",
    "start": "1325560",
    "end": "1332130"
  },
  {
    "text": "a comment connection and it's a paginated list of comments which has like comment ID content and a timestamp",
    "start": "1332130",
    "end": "1339020"
  },
  {
    "text": "now I have three mutations over here the first one has create event",
    "start": "1339020",
    "end": "1344870"
  },
  {
    "text": "let me just increase the font a little bit so the first one is create event so it asked for name when where and",
    "start": "1344870",
    "end": "1352530"
  },
  {
    "text": "description and it returns an event and the second one is delete an event so we're not going to touch on comment on",
    "start": "1352530",
    "end": "1358679"
  },
  {
    "text": "event right now the queries that I'm using is basically get event by a particular ID or list all the events and",
    "start": "1358679",
    "end": "1365880"
  },
  {
    "text": "again this lists all events is a paginated list of events I also have subscriptions set up over here but we're",
    "start": "1365880",
    "end": "1373200"
  },
  {
    "text": "going to touch a little bit more about subscriptions later so I'm going to parking-lot that in addition to this we",
    "start": "1373200",
    "end": "1379770"
  },
  {
    "text": "have each of these data types or fields in a data type week you can attach a",
    "start": "1379770",
    "end": "1385470"
  },
  {
    "text": "resolver function to it so as you can see on my create event I'm actually having a create event table in my it's a",
    "start": "1385470",
    "end": "1393720"
  },
  {
    "text": "dynamodb table that's created in my AWS account and this is my this acts as my",
    "start": "1393720",
    "end": "1399450"
  },
  {
    "text": "data source in addition to this I have two mapping templates a request mapping template and a response mapping template",
    "start": "1399450",
    "end": "1405150"
  },
  {
    "text": "the request mapping template is basically a put item call to our dynamodb table so it has the dynamodb",
    "start": "1405150",
    "end": "1412049"
  },
  {
    "text": "table has a hash key called ID and I'm using utility functions that allow me to generate and a UUID as an auto ID for my",
    "start": "1412049",
    "end": "1419960"
  },
  {
    "text": "service I also have these extra attributes so these are basically the",
    "start": "1419960",
    "end": "1425610"
  },
  {
    "text": "arguments that come in as part of my create event mutation so I have where",
    "start": "1425610",
    "end": "1430890"
  },
  {
    "text": "when description these are all the mandatory fields and then in my response mapping template and all I'm doing is",
    "start": "1430890",
    "end": "1437880"
  },
  {
    "text": "I'm taking the response that I got from dynamo converting into JSON and returning back so this is how my mapping",
    "start": "1437880",
    "end": "1443039"
  },
  {
    "text": "templates look looks like for mutations now how does this look on the client",
    "start": "1443039",
    "end": "1448380"
  },
  {
    "start": "1446000",
    "end": "1743000"
  },
  {
    "text": "side so so I have a react app react native app so I'm using the AWS absent",
    "start": "1448380",
    "end": "1455700"
  },
  {
    "text": "client so in my I'm the first thing that I do is I import the AWS apps in client",
    "start": "1455700",
    "end": "1460919"
  },
  {
    "text": "from the packages I import the rehydrated store the auto type and the Apollo graph",
    "start": "1460919",
    "end": "1466110"
  },
  {
    "text": "QL higher-order components next I have screens all events I have",
    "start": "1466110",
    "end": "1473190"
  },
  {
    "text": "two screens in my app one is lists of all the events and one is adding a new event so I'm going to demo those two",
    "start": "1473190",
    "end": "1479370"
  },
  {
    "text": "functionalities next I have a list of three queries that I'm using in my",
    "start": "1479370",
    "end": "1485490"
  },
  {
    "text": "application so let's go take a look at what those queries looks like so I have lists events so this is basically a",
    "start": "1485490",
    "end": "1491640"
  },
  {
    "text": "graphical query for listing all the events and you can see that it is basically asked for items and comments",
    "start": "1491640",
    "end": "1499350"
  },
  {
    "text": "and items on the comments and it there's also pagination there the next thing is",
    "start": "1499350",
    "end": "1505470"
  },
  {
    "text": "create event which is basically a creative and mutation so this maps to the create event mutation that we saw",
    "start": "1505470",
    "end": "1512280"
  },
  {
    "text": "earlier and as a part of response I am asking for type name and all the ID",
    "start": "1512280",
    "end": "1518490"
  },
  {
    "text": "fields in addition to ID that got created the next one is delete event",
    "start": "1518490",
    "end": "1524100"
  },
  {
    "text": "which is again a mutation which is similar to the create event call so in my application what I'm doing is I'm",
    "start": "1524100",
    "end": "1531840"
  },
  {
    "text": "currently using the API key authorization mechanism to make keeps things keep things simple so I created a",
    "start": "1531840",
    "end": "1538650"
  },
  {
    "text": "new client and called aw saps in client I provided with the graphical endpoint and in AWS region next what I do is I'm",
    "start": "1538650",
    "end": "1546150"
  },
  {
    "text": "creating a composition of different things so I have my all events with data",
    "start": "1546150",
    "end": "1551370"
  },
  {
    "text": "page has a composition of list events and delete event call which is what I'm going to do on that page the next part",
    "start": "1551370",
    "end": "1558300"
  },
  {
    "text": "is add event data which is a higher-order component again it's a composition of just a create event call",
    "start": "1558300",
    "end": "1563460"
  },
  {
    "text": "now you will notice that I have this optimistic response set up over here so this is like I mentioned earlier it's a",
    "start": "1563460",
    "end": "1570600"
  },
  {
    "text": "way to make the client think that there is an update the update already happened and after the optimistic response what",
    "start": "1570600",
    "end": "1577470"
  },
  {
    "text": "I'm doing is I'm triggering a prefetch of list events call but I'm also updating the list events query over here",
    "start": "1577470",
    "end": "1587130"
  },
  {
    "text": "so the update function gets called twice the first time is with an optimistic response and the second time once the",
    "start": "1587130",
    "end": "1592830"
  },
  {
    "text": "data actually gets written on the backend so let's go and see how this demo looks",
    "start": "1592830",
    "end": "1598600"
  },
  {
    "text": "like so I have this app running on my emulator so it's one on Android and one",
    "start": "1598600",
    "end": "1603850"
  },
  {
    "text": "on iOS I I'll go ahead and create this event Las Vegas selecting man more info",
    "start": "1603850",
    "end": "1617280"
  },
  {
    "text": "not so creative so you notice that as soon as the view came back on the left",
    "start": "1617280",
    "end": "1624130"
  },
  {
    "text": "side on my simulator the view automatically got updated I'm not entirely sure at this point if I",
    "start": "1624130",
    "end": "1629860"
  },
  {
    "text": "actually made a network call so let's go ahead and see refresh this page refresh this view over here and see if it's",
    "start": "1629860",
    "end": "1636010"
  },
  {
    "text": "actually written so there you go now I had to manually refresh that but you could easily swap it out with pull",
    "start": "1636010",
    "end": "1642640"
  },
  {
    "text": "to refresh capability or you can also wired up subscription so that you get",
    "start": "1642640",
    "end": "1647950"
  },
  {
    "text": "not changed changes get notified on all the devices that you are writing to so now let's go offline and see what",
    "start": "1647950",
    "end": "1655150"
  },
  {
    "text": "happens so I'm going to go offline and I'm going to create a new date",
    "start": "1655150",
    "end": "1669000"
  },
  {
    "text": "demo so you'll notice that even though I'm offline my view is updated with the",
    "start": "1669580",
    "end": "1676330"
  },
  {
    "text": "late with the latest information right so my iOS app has the latest set",
    "start": "1676330",
    "end": "1682090"
  },
  {
    "text": "of information now let's go back online",
    "start": "1682090",
    "end": "1686789"
  },
  {
    "text": "shirt white sticking so long let me go",
    "start": "1696280",
    "end": "1703130"
  },
  {
    "text": "this one yeah okay so we're back online and let's",
    "start": "1703130",
    "end": "1713000"
  },
  {
    "text": "see if this actually triggered a mutation on its own there you go so I",
    "start": "1713000",
    "end": "1719840"
  },
  {
    "text": "didn't have to do anything on my iOS app it automatically I detected with the",
    "start": "1719840",
    "end": "1724850"
  },
  {
    "text": "network change and it came back up and on my Android when i refresh the page it",
    "start": "1724850",
    "end": "1730640"
  },
  {
    "text": "automatically loaded the offline demo the offline demo event so I'm gonna hand",
    "start": "1730640",
    "end": "1736880"
  },
  {
    "text": "this back to Richard who's going to talk a little bit about how the offline stuff works so that was pretty cool right what",
    "start": "1736880",
    "end": "1750200"
  },
  {
    "start": "1743000",
    "end": "2058000"
  },
  {
    "text": "would have been really cool though is if we had some real-time capabilities right because that was kind of the offline",
    "start": "1750200",
    "end": "1755780"
  },
  {
    "text": "scenario and getting into some conflict resolution and how you can do optimistic you eyes but you know what if I clicked",
    "start": "1755780",
    "end": "1763190"
  },
  {
    "text": "on one of those events and like I wanted to see real-time comments streaming in or something right you can imagine many",
    "start": "1763190",
    "end": "1768320"
  },
  {
    "text": "apps that kind of fit this common pattern right so before we get to that usually people asked like so what are",
    "start": "1768320",
    "end": "1775220"
  },
  {
    "text": "some of the background pieces on how does this stuff work underneath the covers well the first is that offline",
    "start": "1775220",
    "end": "1781640"
  },
  {
    "text": "demo that he did it uses different persistent storage mediums across platforms so this works what we're gonna",
    "start": "1781640",
    "end": "1788900"
  },
  {
    "text": "release as for some of these things as we'll have web that will have local storage and use it in react and angular",
    "start": "1788900",
    "end": "1794690"
  },
  {
    "text": "in different apps we just demoed react native there that actually uses async storage that will write to sequel Lite",
    "start": "1794690",
    "end": "1801170"
  },
  {
    "text": "in the background and then on the native platforms that use the sequel Lite as well couple of things are pretty cool about",
    "start": "1801170",
    "end": "1806480"
  },
  {
    "text": "this one is that it works across all those mediums with the same programming interface so your teams can operate",
    "start": "1806480",
    "end": "1812090"
  },
  {
    "text": "really quickly the other thing that's cool is like for iOS for example you can pre hydrate your storage medium so if",
    "start": "1812090",
    "end": "1820100"
  },
  {
    "text": "you have a lot of content like really big apps with images or even just a lot of data you can put all of that",
    "start": "1820100",
    "end": "1826430"
  },
  {
    "text": "information in your local database essentially loaded up to the App Store and then when people download your app",
    "start": "1826430",
    "end": "1831860"
  },
  {
    "text": "they'll synchronize with your graphic uol endpoint and just get the Delta of the information coming through which is pretty neat the other thing that we we",
    "start": "1831860",
    "end": "1838790"
  },
  {
    "text": "did is we didn't want to just stop it offline only wait so we gave you some controls with reach ability client that you can do on the",
    "start": "1838790",
    "end": "1844370"
  },
  {
    "text": "react native platforms as well as the native platform so you can set this sync to work on Wi-Fi only vs carrier or not",
    "start": "1844370",
    "end": "1850910"
  },
  {
    "text": "so you get really fine-grained controls around the opera's operations kind of going back to our overall story around",
    "start": "1850910",
    "end": "1856880"
  },
  {
    "text": "being really nice to battery being really nice to CPUs and networks additionally another thing that comes up",
    "start": "1856880",
    "end": "1864170"
  },
  {
    "text": "quite common with these scenarios is that's pretty cool on text but you know",
    "start": "1864170",
    "end": "1869960"
  },
  {
    "text": "what if all of his events had like a profile - or like a little event picture next to them or I'm creating an",
    "start": "1869960",
    "end": "1876320"
  },
  {
    "text": "application like if you think of social media applications today right these are basically you know scrolling views of",
    "start": "1876320",
    "end": "1882110"
  },
  {
    "text": "images with metadata associated to them and multiple objects I might also have business applications where I've got",
    "start": "1882110",
    "end": "1887600"
  },
  {
    "text": "projects and I've got images associated with them so we've added capabilities into our SDKs that work with graph QL",
    "start": "1887600",
    "end": "1893929"
  },
  {
    "text": "around attaching what we call complex objects to these graphic QL types so you",
    "start": "1893929",
    "end": "1899870"
  },
  {
    "text": "could create imagine in this example here I've got a type profile the name is a string of a user and maybe they've got",
    "start": "1899870",
    "end": "1905059"
  },
  {
    "text": "a profile pic and then I have a mutation that's uploading a photo that I call whenever somebody does that action in my",
    "start": "1905059",
    "end": "1910790"
  },
  {
    "text": "UI well what you can do is define these two types these specific types with keys and we we basically act whenever we see",
    "start": "1910790",
    "end": "1918410"
  },
  {
    "text": "these specific keys like bucket key and region so that the profile pic will go to this s3 object and you're just",
    "start": "1918410",
    "end": "1924980"
  },
  {
    "text": "basically referencing it in your profile type and then your input object will go to that specific type as an action and",
    "start": "1924980",
    "end": "1931160"
  },
  {
    "text": "the flow is essentially like I press a button upload an image we do the write",
    "start": "1931160",
    "end": "1936620"
  },
  {
    "text": "to the record in you know graph QL which might be in DynamoDB for example we asynchronously fire off the upload to an",
    "start": "1936620",
    "end": "1942470"
  },
  {
    "text": "s3 bucket once that finishes then we hydrate that URL the s3 link throughout",
    "start": "1942470",
    "end": "1947929"
  },
  {
    "text": "the system and then all the listeners get that information so it's not just simple text or floats or integers and",
    "start": "1947929",
    "end": "1953030"
  },
  {
    "text": "things like that with graphical types that you're synchronizing you can actually do complex object types in this system now the last thing we're going to",
    "start": "1953030",
    "end": "1960980"
  },
  {
    "text": "talk about since this is a talk about offline in real time is the real-time capability with graphical subscriptions that we've added so according to the",
    "start": "1960980",
    "end": "1968059"
  },
  {
    "text": "graphical spec this is subscriptions are defined as near real-time data updates",
    "start": "1968059",
    "end": "1974150"
  },
  {
    "text": "are coming down your system and the model that we've implemented is essentially one of the most popular and",
    "start": "1974150",
    "end": "1979900"
  },
  {
    "text": "scalable models in the industry that we focused on was an event based model where subscriptions are triggered in",
    "start": "1979900",
    "end": "1985850"
  },
  {
    "text": "response to mutations on the system right and there's a couple of reasons why we did this specifically one is this",
    "start": "1985850",
    "end": "1992300"
  },
  {
    "text": "is not only for scalability reasons to allow you to really build robust applications but we wanted to meet the",
    "start": "1992300",
    "end": "1998510"
  },
  {
    "text": "majority of customer use cases for their applications like I click on like on a post or you know chat applications like I was mentioning",
    "start": "1998510",
    "end": "2005920"
  },
  {
    "text": "earlier or even I've got events that are you know updating in different apps on cross-platform devices the other thing",
    "start": "2005920",
    "end": "2013000"
  },
  {
    "text": "that's pretty cool about the way that we implemented this is it's not just real-time updates on like dynamodb as a",
    "start": "2013000",
    "end": "2019150"
  },
  {
    "text": "data source of graph QL it's any data source that Apps Sync supports which today is DynamoDB elasticsearch and",
    "start": "2019150",
    "end": "2026230"
  },
  {
    "text": "lambda and the reason for this is is because we're in the call path of your graph key limitations and the way that",
    "start": "2026230",
    "end": "2031840"
  },
  {
    "text": "we've been able to integrate this with schema directives you can essentially mix and match these and point them to",
    "start": "2031840",
    "end": "2037090"
  },
  {
    "text": "things like okay if somebody writes to a DynamoDB table I kick off a subscription if they do operations against",
    "start": "2037090",
    "end": "2043000"
  },
  {
    "text": "elasticsearch I kick it off maybe it's a lambda function that like reads and writes to Aurora for example you can",
    "start": "2043000",
    "end": "2048310"
  },
  {
    "text": "still hook this up to real time communications with AWS app sync so to walk you through how the schema is",
    "start": "2048310",
    "end": "2054398"
  },
  {
    "text": "configured for this and then another real-time demo on a separate app when I hand back over to Karthik thanks again Richard so so as Richard",
    "start": "2054399",
    "end": "2064060"
  },
  {
    "start": "2058000",
    "end": "2290000"
  },
  {
    "text": "mentioned subscriptions in AWS app sync is an event based model so what does",
    "start": "2064060",
    "end": "2069850"
  },
  {
    "text": "that really mean so your subscription events are the data that comes down to",
    "start": "2069850",
    "end": "2075398"
  },
  {
    "text": "your subscription channel is basically triggered off of mutation and there are",
    "start": "2075399",
    "end": "2081790"
  },
  {
    "text": "a couple of things to call out here so here's an example where what we are",
    "start": "2081790",
    "end": "2087070"
  },
  {
    "text": "doing is where we have a subscription type called added post which has a return type of post and we have a type",
    "start": "2087070",
    "end": "2093820"
  },
  {
    "text": "called mutation which has a type which has a return type of inaudible post now",
    "start": "2093820",
    "end": "2098860"
  },
  {
    "text": "notice that the first thing that we require you to do is make sure that the underlying type for both the",
    "start": "2098860",
    "end": "2104980"
  },
  {
    "text": "subscription operation and mutation operation are the same this is to ensure type consistency now what you",
    "start": "2104980",
    "end": "2111779"
  },
  {
    "text": "can do is you can basically add using the aw subscribe directive add a list of",
    "start": "2111779",
    "end": "2118259"
  },
  {
    "text": "mutations so in this case I'm saying for added post I'm saying that the aw the",
    "start": "2118259",
    "end": "2124950"
  },
  {
    "text": "mutation that gets is going to trigger this event is basically at post and now",
    "start": "2124950",
    "end": "2130049"
  },
  {
    "text": "you can actually use end to end combinations so for example I can have n",
    "start": "2130049",
    "end": "2135390"
  },
  {
    "text": "number of mutation triggering a single subscription or I can have a single subscription or I can have like a single",
    "start": "2135390",
    "end": "2142739"
  },
  {
    "text": "mutation triggering multiple subscription so you can design it however you please as long as the return",
    "start": "2142739",
    "end": "2148920"
  },
  {
    "text": "type the underlying return type is the same now when I make the subscription",
    "start": "2148920",
    "end": "2153989"
  },
  {
    "text": "call I'm going to say let's say I'm making a new post subscription call and requesting type name version and title",
    "start": "2153989",
    "end": "2160410"
  },
  {
    "text": "title content and author and URL it's going to trigger the added post and it's",
    "start": "2160410",
    "end": "2168299"
  },
  {
    "text": "going to start opening up an mqtt channel and you start getting new information through that through that",
    "start": "2168299",
    "end": "2175289"
  },
  {
    "text": "topic so how does this work behind the scenes so we have a handshake process",
    "start": "2175289",
    "end": "2182099"
  },
  {
    "text": "it's a three-step process so whenever a subscription is requested from the client what we do is we return",
    "start": "2182099",
    "end": "2187890"
  },
  {
    "text": "back a WebSocket URL connection and a list of topics that you can subscribe to the client then makes an MQTT MQTT",
    "start": "2187890",
    "end": "2195960"
  },
  {
    "text": "connection call with the URL and if the MQTT connection succeeds he can then",
    "start": "2195960",
    "end": "2201900"
  },
  {
    "text": "subscribe to the list of topics that was returned back to him as part of the SUBSCRIBE call this this information is",
    "start": "2201900",
    "end": "2209670"
  },
  {
    "text": "returned to you as part of the extensions in the response for the subscription so we're not messing up",
    "start": "2209670",
    "end": "2215849"
  },
  {
    "text": "your data data responses but this is only if you are using a third-party",
    "start": "2215849",
    "end": "2222569"
  },
  {
    "text": "client if you're using the AWS app sync client that we are ship the SDKs that we ship you don't have to worry about this",
    "start": "2222569",
    "end": "2228569"
  },
  {
    "text": "at all this is automatically managed for you let's talk a little bit about how we",
    "start": "2228569",
    "end": "2236190"
  },
  {
    "text": "can do real-time your eye updates so we did a little bit of optimistic you dates but now let's say that in my",
    "start": "2236190",
    "end": "2243000"
  },
  {
    "text": "previous demo I wanted to actually get the new events as I was creating them I would do this by specifying something",
    "start": "2243000",
    "end": "2251430"
  },
  {
    "text": "called as subscribe to more so if I'm using react or react native again I would specify something called a",
    "start": "2251430",
    "end": "2256620"
  },
  {
    "text": "subscribe to more so a parameter and pass in the new post subscription as a",
    "start": "2256620",
    "end": "2262410"
  },
  {
    "text": "document and as a part of the update query what I'm going to do is I'm going",
    "start": "2262410",
    "end": "2268050"
  },
  {
    "text": "to update the post type with the list of a new post as well as the fill existing",
    "start": "2268050",
    "end": "2274890"
  },
  {
    "text": "previous posts so this tells my all post query which is my local cache that's",
    "start": "2274890",
    "end": "2279990"
  },
  {
    "text": "where how my query is saved so it's going to tell my all post query to update the local cache automatically and",
    "start": "2279990",
    "end": "2286680"
  },
  {
    "text": "the data is now available locally on your device so let's see this in action",
    "start": "2286680",
    "end": "2291810"
  },
  {
    "start": "2290000",
    "end": "2793000"
  },
  {
    "text": "again so I have an app with me so it's",
    "start": "2291810",
    "end": "2299700"
  },
  {
    "text": "in it's a simple app it's a drawing app I have it has a canvas it has a color",
    "start": "2299700",
    "end": "2304830"
  },
  {
    "text": "palette so I can like draw some random stuff so what I'm going to do is I'm",
    "start": "2304830",
    "end": "2312420"
  },
  {
    "text": "going to actually run this on two simultaneous simultaneously on two",
    "start": "2312420",
    "end": "2317580"
  },
  {
    "text": "different simulators and try to replicate the drawing from one on the other so let's see how you would go",
    "start": "2317580",
    "end": "2323190"
  },
  {
    "text": "about doing something like that so I'm going to open my drawing app schema so",
    "start": "2323190",
    "end": "2332700"
  },
  {
    "text": "this is what my schema currently looks like so I have a type called point which is basically an XY coordinate for my",
    "start": "2332700",
    "end": "2338960"
  },
  {
    "text": "point in their canvas I have a color object which is basically an RGB value",
    "start": "2338960",
    "end": "2344670"
  },
  {
    "text": "for the color that I've chosen on my palette and then I have equivalent point",
    "start": "2344670",
    "end": "2351360"
  },
  {
    "text": "input and color input which are graphical input types and then I have a composition of both this which is",
    "start": "2351360",
    "end": "2357000"
  },
  {
    "text": "basically gives me a list of points it has a device ID to uniquely identify which devices created the event or",
    "start": "2357000",
    "end": "2363870"
  },
  {
    "text": "mutation it has an ID to uniquely identify a set of points and we are",
    "start": "2363870",
    "end": "2369000"
  },
  {
    "text": "doing a set of points the reason being that we don't want to make keep calling the network for everything",
    "start": "2369000",
    "end": "2374430"
  },
  {
    "text": "XY coordinate movement it's going to be a lot and then I also have colors which is basically a RGB coordinates as I",
    "start": "2374430",
    "end": "2381450"
  },
  {
    "text": "mentioned earlier now I have a mutation called add points which takes in a device ID an ID the list of point inputs",
    "start": "2381450",
    "end": "2389460"
  },
  {
    "text": "analyst and a color input and it returns back a list of point an honorable type of list of points I also have a",
    "start": "2389460",
    "end": "2397319"
  },
  {
    "text": "subscription called new points which is basically returning a list of points and you'll notice that I have a subscribe",
    "start": "2397319",
    "end": "2403289"
  },
  {
    "text": "directive with mutations pointing to add points which is the name of the field in my type mutations now I have also wired",
    "start": "2403289",
    "end": "2411240"
  },
  {
    "text": "this up to my DynamoDB table so you will notice that in my add points I have this",
    "start": "2411240",
    "end": "2417450"
  },
  {
    "text": "data source called redraw DynamoDB table which is Amazon DynamoDB table on my AWS",
    "start": "2417450",
    "end": "2424049"
  },
  {
    "text": "account I have a request mapping template which basically and my dynamodb",
    "start": "2424049",
    "end": "2429240"
  },
  {
    "text": "table has a device ID as a hash key and ID as a range key and I'm going to use Pam's time stamps as my ID so I can do",
    "start": "2429240",
    "end": "2436020"
  },
  {
    "text": "like salting and things like that I also have I'm storing the list of points as",
    "start": "2436020",
    "end": "2442049"
  },
  {
    "text": "attribute values which is basically a list of map of X&Y coordinates and my color is also a map of RGB values and in",
    "start": "2442049",
    "end": "2450089"
  },
  {
    "text": "again in my response I am returning back a JSON representation of whatever data that I have stored so that's my schema",
    "start": "2450089",
    "end": "2457109"
  },
  {
    "text": "now I have an iOS app so what I've already done is I've already run the",
    "start": "2457109",
    "end": "2463440"
  },
  {
    "text": "Apollo graph QL command-line utility to the code generation utility to generate",
    "start": "2463440",
    "end": "2469890"
  },
  {
    "text": "strongly typed objects so the thing to call out over here is that we have a",
    "start": "2469890",
    "end": "2476010"
  },
  {
    "text": "subscription support as well in addition to all the stuff that Apollo supports so you'll notice that it has created a new",
    "start": "2476010",
    "end": "2483900"
  },
  {
    "text": "point subscription class so I can use this new point subscription class in my",
    "start": "2483900",
    "end": "2489450"
  },
  {
    "text": "app to listen to any changes next what I've done is I have created an app sync",
    "start": "2489450",
    "end": "2496920"
  },
  {
    "text": "config which takes in a URL service region and an API key Earth provider which is basically a protocol that",
    "start": "2496920",
    "end": "2504059"
  },
  {
    "text": "returns my API key so I'm using API keys again in this demo so I'm passing the absent client config",
    "start": "2504059",
    "end": "2510780"
  },
  {
    "text": "to to the absent client and this gives me this I'm gonna use this absent client",
    "start": "2510780",
    "end": "2518780"
  },
  {
    "text": "to in all my controllers view controllers to make calls to my graph QL",
    "start": "2518780",
    "end": "2525660"
  },
  {
    "text": "endpoint so in my application I have a couple of things so I'm using I'm using",
    "start": "2525660",
    "end": "2534000"
  },
  {
    "text": "C core graphics to draw the lines on my canvas so I'm doing two things I'm",
    "start": "2534000",
    "end": "2540390"
  },
  {
    "text": "cashing 50 points at a time so whenever they're more than 50 points I'm gonna save the data and whenever or I'm also",
    "start": "2540390",
    "end": "2547980"
  },
  {
    "text": "going to save the data whenever the touch has ended so whenever I've stopped drawing something I'm going to save",
    "start": "2547980",
    "end": "2553170"
  },
  {
    "text": "those points so I have a save point method so what it's going to do is so",
    "start": "2553170",
    "end": "2558810"
  },
  {
    "text": "I'm gonna cheat a little bit here I have some code let me copy this so so this",
    "start": "2558810",
    "end": "2567270"
  },
  {
    "text": "what does this do so I've created a mutation object which basically is at points mutation which is the strongly",
    "start": "2567270",
    "end": "2573869"
  },
  {
    "text": "typed class that the code generation created and passing in a device ID which",
    "start": "2573869",
    "end": "2579270"
  },
  {
    "text": "is basically a UUID that I'm generating the ID is a time stamp like I mentioned for points because we're dealing with",
    "start": "2579270",
    "end": "2586170"
  },
  {
    "text": "cold graphics which has CG points in iOS we're converting that to a list of point inputs and for color I'm converting the",
    "start": "2586170",
    "end": "2593520"
  },
  {
    "text": "UI color to a color input object and after this I'm basically calling apps in",
    "start": "2593520",
    "end": "2599310"
  },
  {
    "text": "client or perform mutation and passing a mutation object and in the callback I'm",
    "start": "2599310",
    "end": "2604410"
  },
  {
    "text": "getting a result and an error and I'm just printing those now let's how would I do the same thing with subscriptions",
    "start": "2604410",
    "end": "2611130"
  },
  {
    "text": "so in my view did load what I'm going to do is I'm going to as soon as the view",
    "start": "2611130",
    "end": "2616740"
  },
  {
    "text": "loads I'm going to start a subscription channel that keeps listening to any changes in the points and so on so in my",
    "start": "2616740",
    "end": "2623700"
  },
  {
    "text": "subscription method what I'm going to do is again cheat and copy this code",
    "start": "2623700",
    "end": "2630950"
  },
  {
    "text": "so I'm creating a new subscription object which is basically a new point",
    "start": "2632450",
    "end": "2637820"
  },
  {
    "text": "subscription this class that the code generation generated and I'm saying it",
    "start": "2637820",
    "end": "2643970"
  },
  {
    "text": "apps in client dot subscribe to this subscription and I'm passing in a result",
    "start": "2643970",
    "end": "2649790"
  },
  {
    "text": "handler so the result handler is basically a callback to whenever a new event comes in to your client now let's",
    "start": "2649790",
    "end": "2659450"
  },
  {
    "text": "talk about device ID the reason why I use device ID is to ensure that I can filter out the events that were",
    "start": "2659450",
    "end": "2665750"
  },
  {
    "text": "generated from my own device so let's say that because I don't want to be over writing on my own canvas again so what",
    "start": "2665750",
    "end": "2673850"
  },
  {
    "text": "I'm doing is if it is not if the device ID is not my own device I'm going to",
    "start": "2673850",
    "end": "2678920"
  },
  {
    "text": "just start drawing the lines and that's about it it should just work so let's hopefully so let's start this",
    "start": "2678920",
    "end": "2689750"
  },
  {
    "text": "app again and yes so I'm gonna start",
    "start": "2689750",
    "end": "2696440"
  },
  {
    "text": "another simulator speak the sky [Music]",
    "start": "2696440",
    "end": "2702879"
  },
  {
    "text": "takes a while okay",
    "start": "2715580",
    "end": "2719860"
  },
  {
    "text": "all right good so I have two apps running simple - same app running on two",
    "start": "2721130",
    "end": "2726440"
  },
  {
    "text": "different simulators let me start drawing and see what happens so you'll notice that all my",
    "start": "2726440",
    "end": "2739160"
  },
  {
    "text": "changes are starting to flow in and it",
    "start": "2739160",
    "end": "2747830"
  },
  {
    "text": "retains all the color information and basically everything and I can do the",
    "start": "2747830",
    "end": "2759050"
  },
  {
    "text": "same thing on my other device my emoji",
    "start": "2759050",
    "end": "2767120"
  },
  {
    "text": "skills of the repoer but yeah so so you'll see that both the devices are",
    "start": "2767120",
    "end": "2772880"
  },
  {
    "text": "connected why are the subscription topic and now the information is available any",
    "start": "2772880",
    "end": "2777920"
  },
  {
    "text": "near real-time but is almost feel real-time so that's how subscription",
    "start": "2777920",
    "end": "2784220"
  },
  {
    "text": "work on iOS and we also have an equivalent j/s implementation for this I'm going to hand this back to Richard",
    "start": "2784220",
    "end": "2789800"
  },
  {
    "text": "who's going to talk to you through some of the best practices for the service",
    "start": "2789800",
    "end": "2794680"
  },
  {
    "start": "2793000",
    "end": "2948000"
  },
  {
    "text": "great so um you know thanks thanks much for going through these things a couple of things before we before you kind of",
    "start": "2797740",
    "end": "2805250"
  },
  {
    "text": "close up here now these are a lot of like powerful capabilities right that's that's pretty easy now with just simple",
    "start": "2805250",
    "end": "2810830"
  },
  {
    "text": "graph QL statements that you're able to do but you know a couple of things to keep in mind like because we usually get",
    "start": "2810830",
    "end": "2816800"
  },
  {
    "text": "in conversations over the past six months as we were going through our beta phases and so forth was you know all",
    "start": "2816800",
    "end": "2821930"
  },
  {
    "text": "these capabilities like you can really start simple like first of all we showed offline capabilities and then usually",
    "start": "2821930",
    "end": "2828500"
  },
  {
    "text": "the conversation goes into all sorts of complex conflict resolution scenarios and updates for user IDs well the truth",
    "start": "2828500",
    "end": "2834680"
  },
  {
    "text": "is if you want to just give you know some basic offline capabilities you can start small just like start with queries",
    "start": "2834680",
    "end": "2840500"
  },
  {
    "text": "so that data is persisted offline like especially if you are like a read intensive application or a business or",
    "start": "2840500",
    "end": "2845810"
  },
  {
    "text": "something like that that usually satisfies a good percentage of your use cases the other thing too is when you're",
    "start": "2845810",
    "end": "2851330"
  },
  {
    "text": "doing optimistic UI when you're doing patience offline if you've got a really complex user experience whether this is",
    "start": "2851330",
    "end": "2858780"
  },
  {
    "text": "a mobile app or some sort of an iPad app or something else you don't necessarily need to go to the nth degree to make",
    "start": "2858780",
    "end": "2864930"
  },
  {
    "text": "sure every single little screen and widget gets an optimistic response since updated most people just kind of have",
    "start": "2864930",
    "end": "2870630"
  },
  {
    "text": "form inputs things like this basic lists that they want to be updated when they input these things and that they can recognize that their data went through",
    "start": "2870630",
    "end": "2876540"
  },
  {
    "text": "so you can really be prudent about this the other thing is use your subscriptions like you just saw",
    "start": "2876540",
    "end": "2882420"
  },
  {
    "text": "appropriately right the reason that kind of graph QL separates these into a separate operation and the way we built",
    "start": "2882420",
    "end": "2888690"
  },
  {
    "text": "a service in architecture it is you don't need to throw data everywhere for every single little mutation that",
    "start": "2888690",
    "end": "2894420"
  },
  {
    "text": "happens in the system right thing there are certain operations that are appropriate to be large payloads that shopping over queries that you paginate",
    "start": "2894420",
    "end": "2900900"
  },
  {
    "text": "them over time as you're scrolling through different pages and then certain operations that are appropriate to",
    "start": "2900900",
    "end": "2906270"
  },
  {
    "text": "happen in a real-time Channel right so you now have this fine-grained control so the best thing to do is to use it",
    "start": "2906270",
    "end": "2911790"
  },
  {
    "text": "appropriately and be really kind to the battery and CPU of these mobile devices and as appropriate as I mentioned before",
    "start": "2911790",
    "end": "2917640"
  },
  {
    "text": "to like on conflict resolution you can really kind of overdo it and get in a",
    "start": "2917640",
    "end": "2923369"
  },
  {
    "text": "mess especially as you're aggregating data sources in the back end with graph QL types to where you know you might end",
    "start": "2923369",
    "end": "2928530"
  },
  {
    "text": "up with some race conditions so it's best to to use the appropriate control so that you can still reason about your",
    "start": "2928530",
    "end": "2933869"
  },
  {
    "text": "data over time and with that our our landing page with the public preview of",
    "start": "2933869",
    "end": "2939450"
  },
  {
    "text": "sign up will be available later today and you should see the console sometime this evening or tomorrow in your AWS",
    "start": "2939450",
    "end": "2944820"
  },
  {
    "text": "console as well so thank you thank you",
    "start": "2944820",
    "end": "2949250"
  }
]