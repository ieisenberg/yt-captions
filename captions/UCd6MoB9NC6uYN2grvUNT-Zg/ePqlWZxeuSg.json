[
  {
    "text": "I am Alex wood and I'm a software engineer with the Amazon Web Services service applications team so my job",
    "start": "1620",
    "end": "10110"
  },
  {
    "text": "essentially is to build open-source tooling to help make serverless",
    "start": "10110",
    "end": "15389"
  },
  {
    "text": "development easier and easier in my previous lives before I joined this team",
    "start": "15389",
    "end": "20430"
  },
  {
    "text": "in April I was on the 8 OS SDK for Ruby team for a few years and wrote the Ruby",
    "start": "20430",
    "end": "26369"
  },
  {
    "text": "runtime for eight of is lambda and then it just went more and more server lists from there so you can find me on Twitter",
    "start": "26369",
    "end": "33809"
  },
  {
    "text": "and I know some of you have your laptops open some of you ever cell phones out I'm totally cool with it I presume that",
    "start": "33809",
    "end": "40230"
  },
  {
    "text": "everyone's got it out to tweet about all the exciting things they're learning so go forth and the Oz con people would",
    "start": "40230",
    "end": "49079"
  },
  {
    "text": "like me to remind you to rate this talk in the Ã¶zkan website or on the mobile app afterwards please be merciful when",
    "start": "49079",
    "end": "55860"
  },
  {
    "text": "you are considering your rating decision not to factor in my bad jokes too much",
    "start": "55860",
    "end": "61309"
  },
  {
    "text": "and with that let's go ahead and get started so what we are going to build",
    "start": "61309",
    "end": "70259"
  },
  {
    "text": "today is going to start with the classic",
    "start": "70259",
    "end": "75630"
  },
  {
    "text": "15-minute blog example except we're going to use the properties of service",
    "start": "75630",
    "end": "81810"
  },
  {
    "text": "applications to make it highly scalable highly available and fault tolerant and",
    "start": "81810",
    "end": "87950"
  },
  {
    "text": "then we're going to use asynchronous functions and event hooks to add a bit",
    "start": "87950",
    "end": "93810"
  },
  {
    "text": "of asynchronous translation technology what we're starting with here is a blank",
    "start": "93810",
    "end": "99689"
  },
  {
    "text": "folder and we're going to use largely the AWS Sam CLI as well as some Ruby",
    "start": "99689",
    "end": "106139"
  },
  {
    "text": "libraries though almost everything we're doing could apply to languages other than Ruby but I've only got 38 minutes",
    "start": "106139",
    "end": "114060"
  },
  {
    "text": "and Counting so I'm using the language I'm most comfortable with but so what",
    "start": "114060",
    "end": "120779"
  },
  {
    "text": "we're gonna start with is a piece of aw Sam functionality called Sam and knit and so something that I've built and",
    "start": "120779",
    "end": "127559"
  },
  {
    "text": "that I'm hoping to release to you soon is a template that builds a generic",
    "start": "127559",
    "end": "135530"
  },
  {
    "text": "Sinatra application Ruby that runs on server lists and then we're going to",
    "start": "135530",
    "end": "141260"
  },
  {
    "text": "build our application on top of that so this is just going to ask us for a",
    "start": "141260",
    "end": "147209"
  },
  {
    "text": "project name we're going to go with the default runtime s3 bucket so the story",
    "start": "147209",
    "end": "154530"
  },
  {
    "text": "here is we're going to be deploying our code to a bucket something to go ahead",
    "start": "154530",
    "end": "161670"
  },
  {
    "text": "and use one that I've created before the show here region and we're good to go",
    "start": "161670",
    "end": "168319"
  },
  {
    "text": "all right so what we've got here is a beginning serverless application to give",
    "start": "173780",
    "end": "180120"
  },
  {
    "text": "you a whirlwind tour before we start typing we have an AWS service",
    "start": "180120",
    "end": "185640"
  },
  {
    "text": "application model template which defines our Sinatra a2s lambda function it gives",
    "start": "185640",
    "end": "193200"
  },
  {
    "text": "it permissions to a dynamo DB table and wires it up to it using environment variables",
    "start": "193200",
    "end": "198500"
  },
  {
    "text": "it creates an API gateway distribution that essentially forwards all incoming",
    "start": "198500",
    "end": "204239"
  },
  {
    "text": "requests into your lambda function sets",
    "start": "204239",
    "end": "209880"
  },
  {
    "text": "up some permissions that we need has a generic DynamoDB application table",
    "start": "209880",
    "end": "216239"
  },
  {
    "text": "starter which we're going to modify and then provides a number of alarms around",
    "start": "216239",
    "end": "221819"
  },
  {
    "text": "errors p50 latency p99 latency so it's going to help give us some production",
    "start": "221819",
    "end": "227489"
  },
  {
    "text": "visibility after we deploy what we've got in addition we have a simple deploy",
    "start": "227489",
    "end": "234480"
  },
  {
    "text": "script which use the pre-built values from the starter that we did in the",
    "start": "234480",
    "end": "240900"
  },
  {
    "text": "initialization so now I can run this with one command get my website and if",
    "start": "240900",
    "end": "246030"
  },
  {
    "text": "all goes well that website will work and if not then you will have hilarious",
    "start": "246030",
    "end": "251669"
  },
  {
    "text": "things the tweet about please be merciful to finish the tour here we have",
    "start": "251669",
    "end": "258599"
  },
  {
    "text": "a large amount of a we have some code that helps to wire up API gateway events",
    "start": "258599",
    "end": "264960"
  },
  {
    "text": "to a form that Sinatra recognizes and tomorrow the responses the API gateway so what",
    "start": "264960",
    "end": "271480"
  },
  {
    "text": "you'll notice is after this and until we get to the asynchronous function I'm really just writing code that you're all",
    "start": "271480",
    "end": "278380"
  },
  {
    "text": "familiar with if you've developed web applications before so with that we're",
    "start": "278380",
    "end": "285580"
  },
  {
    "text": "going to go ahead and define our dynamodb table so we're gonna call this",
    "start": "285580",
    "end": "296230"
  },
  {
    "text": "the post table in this case because",
    "start": "296230",
    "end": "301930"
  },
  {
    "text": "we're creating a forum so it's going to have posts by the way is the is the font",
    "start": "301930",
    "end": "311530"
  },
  {
    "text": "size good for everyone right now or can I make it a bit bigger good cool all",
    "start": "311530",
    "end": "317770"
  },
  {
    "text": "right so we have a post ID we're gonna give our posts a title we're gonna give",
    "start": "317770",
    "end": "327340"
  },
  {
    "text": "them a body and because we're gonna be doing some translations here we're gonna",
    "start": "327340",
    "end": "335350"
  },
  {
    "text": "keep track of the base language and English translations if we have one",
    "start": "335350",
    "end": "344790"
  },
  {
    "text": "going back to our template we just want to make sure that our app table has the",
    "start": "347970",
    "end": "353260"
  },
  {
    "text": "correct key schema so this attribute is now called post ID instead of the H key",
    "start": "353260",
    "end": "361450"
  },
  {
    "text": "hash key stand in that we have and then",
    "start": "361450",
    "end": "366730"
  },
  {
    "text": "that essentially should have us good to go to start building out a web",
    "start": "366730",
    "end": "373090"
  },
  {
    "text": "application all right so here's our blank server code it's not much but",
    "start": "373090",
    "end": "380730"
  },
  {
    "text": "raise your hand if you've developed web applications in Ruby before possible using Sinatra so this should be",
    "start": "380730",
    "end": "387640"
  },
  {
    "text": "something roughly familiar and what I'd like to do now is we're going to",
    "start": "387640",
    "end": "394110"
  },
  {
    "text": "actually fill in our application logic so we're gonna go ahead and require the",
    "start": "394110",
    "end": "400540"
  },
  {
    "text": "post table that we just to find and what we want to do at the route route is create our forum and all",
    "start": "400540",
    "end": "410159"
  },
  {
    "text": "we got to do here is we're gonna scan up to 20 posts and take that page and set",
    "start": "410159",
    "end": "420689"
  },
  {
    "text": "that to our posts variable and that's actually really all that's gonna have to do we're gonna have a page if you want",
    "start": "420689",
    "end": "428159"
  },
  {
    "text": "to define a new post that fortunately",
    "start": "428159",
    "end": "435000"
  },
  {
    "text": "does not actually have to do very much we have a little bit more logic when we",
    "start": "435000",
    "end": "441629"
  },
  {
    "text": "actually post a new posts so what this",
    "start": "441629",
    "end": "448889"
  },
  {
    "text": "is gonna do here is we're gonna expect that we get a title we're gonna do a",
    "start": "448889",
    "end": "455610"
  },
  {
    "text": "little bit of basic HTML escaping if I",
    "start": "455610",
    "end": "461430"
  },
  {
    "text": "can type I will say the the the typing",
    "start": "461430",
    "end": "467279"
  },
  {
    "text": "position here is not organ ama CLE optimal I'm going to admit so bear with",
    "start": "467279",
    "end": "473190"
  },
  {
    "text": "me but I think we're gonna be able to have something fun here so we're going",
    "start": "473190",
    "end": "483839"
  },
  {
    "text": "to expect the title and body params to show up in a post requests then we're",
    "start": "483839",
    "end": "494279"
  },
  {
    "text": "gonna create a new post where the post",
    "start": "494279",
    "end": "500400"
  },
  {
    "text": "ID is a UUID",
    "start": "500400",
    "end": "507560"
  },
  {
    "text": "you go ahead and move this a little bit down titles title body is body save it",
    "start": "511089",
    "end": "523430"
  },
  {
    "text": "and redirect us back to prod now this is the one bit of interesting logic in here",
    "start": "523430",
    "end": "531230"
  },
  {
    "text": "that is a side effect of the way we're deploying this so we redirect to prod",
    "start": "531230",
    "end": "536899"
  },
  {
    "text": "because API gateway uses stages typically in a production application",
    "start": "536899",
    "end": "542360"
  },
  {
    "text": "you would set a regional endpoint so you have my website my domain comm and then",
    "start": "542360",
    "end": "547579"
  },
  {
    "text": "you wouldn't have to do this but since we have the prefix and the route Sinatra wants us to include the prod so we're",
    "start": "547579",
    "end": "554449"
  },
  {
    "text": "gonna do that here and that's our server code and now I'm hoping the doors are",
    "start": "554449",
    "end": "563570"
  },
  {
    "text": "locked because I'm going to write a little bit of HTML please bear with me this part will not last long and I'm",
    "start": "563570",
    "end": "572570"
  },
  {
    "text": "going to at least start with a little bit of a template here so let's go ahead",
    "start": "572570",
    "end": "583430"
  },
  {
    "text": "and say hello Oz con",
    "start": "583430",
    "end": "591160"
  },
  {
    "text": "and for our forum we're gonna provide a",
    "start": "595670",
    "end": "602060"
  },
  {
    "text": "link if someone wants to make a new posts so you know we're really starting",
    "start": "602060",
    "end": "611570"
  },
  {
    "text": "from a blank folder y'all now we're",
    "start": "611570",
    "end": "619910"
  },
  {
    "text": "going to take our posts and for each",
    "start": "619910",
    "end": "626180"
  },
  {
    "text": "post that we got back from our database query we're gonna go ahead and create a",
    "start": "626180",
    "end": "633230"
  },
  {
    "text": "div Danny in the front row here is",
    "start": "633230",
    "end": "638930"
  },
  {
    "text": "giving a UX related talk later today and he's going to do a much better job of anything user experience related than I",
    "start": "638930",
    "end": "645410"
  },
  {
    "text": "am so I am so sorry so we're gonna make",
    "start": "645410",
    "end": "653630"
  },
  {
    "text": "the header be the title of the posts and",
    "start": "653630",
    "end": "660260"
  },
  {
    "text": "we're going to provide the post body",
    "start": "660260",
    "end": "666220"
  },
  {
    "text": "we're gonna have a little bit of conditional logic in here so if and only",
    "start": "669460",
    "end": "677350"
  },
  {
    "text": "if there's an English translation on the object we're gonna have it be null if it's not needed then we're going to have",
    "start": "677350",
    "end": "685029"
  },
  {
    "text": "one more paragraph in here",
    "start": "685029",
    "end": "688890"
  },
  {
    "text": "where we put in the translation all right I promise we're almost done with",
    "start": "705020",
    "end": "710660"
  },
  {
    "text": "the HTML now we're just gonna make a",
    "start": "710660",
    "end": "717080"
  },
  {
    "text": "quick form what could possibly go wrong",
    "start": "717080",
    "end": "720730"
  },
  {
    "text": "so we're going to find our form method",
    "start": "742089",
    "end": "746589"
  },
  {
    "text": "we're going to give a field for the title",
    "start": "748959",
    "end": "753610"
  },
  {
    "text": "and then we're gonna have the input field there oh good point this is how",
    "start": "772540",
    "end": "784779"
  },
  {
    "text": "you know it's a live demo it's not recorded it's not a recorded screencast I can't walk away and have it keep typing but thank you feel free to yell",
    "start": "784779",
    "end": "792430"
  },
  {
    "text": "out if I'm making a small mistake it's very possible alright we'll go ahead and",
    "start": "792430",
    "end": "805510"
  },
  {
    "text": "have the text for our body I will defend",
    "start": "805510",
    "end": "820660"
  },
  {
    "text": "Emacs to the last okay but that's all",
    "start": "820660",
    "end": "826149"
  },
  {
    "text": "the HTML we have hopefully what could possibly go wrong okay so what we've",
    "start": "826149",
    "end": "833529"
  },
  {
    "text": "built is Sinatra code which is not very service aware some HTML templates and",
    "start": "833529",
    "end": "841240"
  },
  {
    "text": "we're using a dynamo DB database now to briefly cover wide dynamo DB one of the",
    "start": "841240",
    "end": "849519"
  },
  {
    "text": "things I'm talking about in this application is the idea that it can scale to thousands of concurrent users",
    "start": "849519",
    "end": "855040"
  },
  {
    "text": "and dynamo DB is gonna let me do that out of the box only paying for the",
    "start": "855040",
    "end": "860589"
  },
  {
    "text": "actual traffic that I get so that's why I'm going this route dynamo DB is pay",
    "start": "860589",
    "end": "866560"
  },
  {
    "text": "per request lambdas pay for utilization API gateway is pay per request so it's",
    "start": "866560",
    "end": "871690"
  },
  {
    "text": "all based on actual usage 100% utilization up and down the stack all",
    "start": "871690",
    "end": "879100"
  },
  {
    "text": "right so now the exciting part we're gonna deploy it and hopefully",
    "start": "879100",
    "end": "886079"
  },
  {
    "text": "everything's gonna go well so what's going on here is the alias Sam CLI is",
    "start": "886079",
    "end": "893199"
  },
  {
    "text": "using Ruby's bundler to bundle all of the code that I've created vendor it so",
    "start": "893199",
    "end": "901329"
  },
  {
    "text": "all of my dependencies are included with what I upload in database lambda and the conference Wi-Fi is working",
    "start": "901329",
    "end": "908130"
  },
  {
    "text": "it's dangerous times you never know it's packaging it to s3 and now we're deploying our application through cloud",
    "start": "908970",
    "end": "916570"
  },
  {
    "text": "formation so if we see here our stack is",
    "start": "916570",
    "end": "922120"
  },
  {
    "text": "being created so far so good and this",
    "start": "922120",
    "end": "928240"
  },
  {
    "text": "takes about a minute but one thing you'll also notice is when we go to add to it future deployments are only going",
    "start": "928240",
    "end": "934420"
  },
  {
    "text": "to reflect actual changes that we've made so the deployments get faster and faster as we go but what we should have",
    "start": "934420",
    "end": "943510"
  },
  {
    "text": "here is a working web application and notice what we talked about with the live translation is there any logic",
    "start": "943510",
    "end": "952360"
  },
  {
    "text": "other than looking for it in our view to perform translation of any posts that we",
    "start": "952360",
    "end": "958029"
  },
  {
    "text": "made anyway no nothing and we are not gonna touch that code again what we're",
    "start": "958029",
    "end": "966070"
  },
  {
    "text": "building from here is going to be an entirely independent piece of asynchronous logic because what we're",
    "start": "966070",
    "end": "972370"
  },
  {
    "text": "going to use is a feature called DynamoDB streams which is going to every",
    "start": "972370",
    "end": "978160"
  },
  {
    "text": "time the DynamoDB table is updated send out events which another a twist lambda",
    "start": "978160",
    "end": "983920"
  },
  {
    "text": "function is going to subscribe to so the Sinatra application we've built doesn't",
    "start": "983920",
    "end": "990760"
  },
  {
    "text": "know and doesn't have to know how or if we're doing any translation logic so it",
    "start": "990760",
    "end": "997540"
  },
  {
    "text": "also provides a nice microservice e separation of concerns type of design in",
    "start": "997540",
    "end": "1004260"
  },
  {
    "text": "your applications it really helps to reduce the amount of commingling of different pieces of logic that don't",
    "start": "1004260",
    "end": "1010529"
  },
  {
    "text": "necessarily need to exist in the same piece of code alright so the stack",
    "start": "1010529",
    "end": "1017760"
  },
  {
    "text": "deployed but does it work and RUP",
    "start": "1017760",
    "end": "1027390"
  },
  {
    "text": "just before I celebrate too quickly all",
    "start": "1027390",
    "end": "1036308"
  },
  {
    "text": "right we're up so we've got a server list forum running on AWS lambda using",
    "start": "1036309",
    "end": "1043418"
  },
  {
    "text": "Sinatra Ruby using patterns we're all familiar with and this already is going",
    "start": "1043419",
    "end": "1048490"
  },
  {
    "text": "to scale to high traffic but I want to go a little bit further now so we're",
    "start": "1048490",
    "end": "1054400"
  },
  {
    "text": "going to talk about asynchronous functions so coming back here what we",
    "start": "1054400",
    "end": "1064150"
  },
  {
    "text": "want to do is make sure that anytime our database is updated an update event is",
    "start": "1064150",
    "end": "1069580"
  },
  {
    "text": "sent and that there is a function waiting to subscribe to that so now",
    "start": "1069580",
    "end": "1074770"
  },
  {
    "text": "we're gonna get to the next fun part writing Gamal so what I'm going to do",
    "start": "1074770",
    "end": "1082510"
  },
  {
    "text": "here all I have to do here we're gonna define a stream specification on our",
    "start": "1082510",
    "end": "1088299"
  },
  {
    "text": "table and we're gonna say new image now",
    "start": "1088299",
    "end": "1096309"
  },
  {
    "text": "to briefly describe what we mean by that dynamodb also has the option for me to say show me the new version of the table",
    "start": "1096309",
    "end": "1103929"
  },
  {
    "text": "and the version that came before so I can look at changes in this particular application I don't have to care about",
    "start": "1103929",
    "end": "1110260"
  },
  {
    "text": "that so I'm just gonna focus on the smaller event the next thing we're gonna",
    "start": "1110260",
    "end": "1117490"
  },
  {
    "text": "do is make our translator function",
    "start": "1117490",
    "end": "1122460"
  },
  {
    "text": "so using AWS Sam one nice thing is this is actually fairly concise configuration",
    "start": "1129060",
    "end": "1136690"
  },
  {
    "text": "of our resources that we get to do so we're gonna define a code handler just",
    "start": "1136690",
    "end": "1144030"
  },
  {
    "text": "basically to say what file am I looking for and what function am I going to call",
    "start": "1144030",
    "end": "1150419"
  },
  {
    "text": "we're gonna go with the Ruby to 5 runtime because I am incredibly biased I'm not even gonna lie about that about",
    "start": "1150960",
    "end": "1157870"
  },
  {
    "text": "picking a language for this code uri we're gonna tell this to look in the",
    "start": "1157870",
    "end": "1164530"
  },
  {
    "text": "application folder when it's building in deploying memory size let's say 256",
    "start": "1164530",
    "end": "1170800"
  },
  {
    "text": "megabytes it sounds like a good number to me but you can go all the way up to a little bit beyond 3 gigabytes I believe",
    "start": "1170800",
    "end": "1177100"
  },
  {
    "text": "right now and as low as 128 megabytes if you just want to sit memory in your application so it's configurable based",
    "start": "1177100",
    "end": "1183970"
  },
  {
    "text": "on what's going to be most cost-effective and performance effective for you",
    "start": "1183970",
    "end": "1189090"
  },
  {
    "text": "policies I'm going to go ahead and wholesale copy this part because we need",
    "start": "1190380",
    "end": "1197380"
  },
  {
    "text": "to be able to tell this where our table is and I need to not delete things from",
    "start": "1197380",
    "end": "1205240"
  },
  {
    "text": "a yellow file",
    "start": "1205240",
    "end": "1207780"
  },
  {
    "text": "policies environment variables we're gonna need a few more policies in here",
    "start": "1214350",
    "end": "1220080"
  },
  {
    "text": "though because we're gonna be doing a few more services than dynamodb we're",
    "start": "1220080",
    "end": "1229620"
  },
  {
    "text": "gonna be using Amazon comprehend to determine what language a given Post is in and then we're going to create a bit",
    "start": "1229620",
    "end": "1238889"
  },
  {
    "text": "of custom I am logic to say that we also",
    "start": "1238889",
    "end": "1246600"
  },
  {
    "text": "want to be able to call the Translate service and in the name of least",
    "start": "1246600",
    "end": "1261090"
  },
  {
    "text": "permissions oh this is an important security diversion because we're a little bit ahead of schedule one great",
    "start": "1261090",
    "end": "1268740"
  },
  {
    "text": "thing about a debase lambda and a Tobias in general is fine-grained access",
    "start": "1268740",
    "end": "1274590"
  },
  {
    "text": "permissions so what do I mean by that so there's a lot of security around ability",
    "start": "1274590",
    "end": "1282539"
  },
  {
    "text": "to access these lambda servers it's going to run your code there's a lot of virtualization and protection of your",
    "start": "1282539",
    "end": "1288659"
  },
  {
    "text": "execution environment but code vulnerabilities in your own application",
    "start": "1288659",
    "end": "1294269"
  },
  {
    "text": "do happen you might be using a web framework it might have a vulnerability",
    "start": "1294269",
    "end": "1301590"
  },
  {
    "text": "and god forbid you someone can do remote code execution inside your lambda environment by specially crafting an",
    "start": "1301590",
    "end": "1308460"
  },
  {
    "text": "input message what you can do with fine-grained permissions is reduce the blast radius of this so if Sinatra had",
    "start": "1308460",
    "end": "1316980"
  },
  {
    "text": "and I doubt they would but if it were happy it to happen to have a critical input reading vulnerability nobody is",
    "start": "1316980",
    "end": "1325500"
  },
  {
    "text": "going to be able to spin up ec2 instances in mind Bitcoin through my function you are limited to only the",
    "start": "1325500",
    "end": "1332759"
  },
  {
    "text": "resources that you have explicit access to so we give you a lot of tools to help",
    "start": "1332759",
    "end": "1337830"
  },
  {
    "text": "Nick you have the least privilege possible and that's the pattern I'm trying to follow here",
    "start": "1337830",
    "end": "1345230"
  },
  {
    "text": "with that because this doesn't directly ask access any resources I'm gonna put a star here okay and finally we're going",
    "start": "1345680",
    "end": "1357210"
  },
  {
    "text": "to define the event so we have a stream on our post table which is a dynamodb",
    "start": "1357210",
    "end": "1364590"
  },
  {
    "text": "event and it's gonna get our app table",
    "start": "1364590",
    "end": "1373250"
  },
  {
    "text": "stream identifier and for the starting",
    "start": "1373250",
    "end": "1378930"
  },
  {
    "text": "position we're gonna say first-in first-out so it's going to start from the oldest",
    "start": "1378930",
    "end": "1388080"
  },
  {
    "text": "message it hasn't processed yet and work its way forward you could choose for example to say for",
    "start": "1388080",
    "end": "1393470"
  },
  {
    "text": "sorry first in last out you could choose to do first in first out by saying the newest images are where you want to",
    "start": "1393470",
    "end": "1399300"
  },
  {
    "text": "start the processing it depends on what works best for your application so now",
    "start": "1399300",
    "end": "1406560"
  },
  {
    "text": "we are done writing llamo assuming that all this is space correctly which it",
    "start": "1406560",
    "end": "1412140"
  },
  {
    "text": "looks like it is so now we need to create that function that we said is going to be there so I'm gonna find",
    "start": "1412140",
    "end": "1421080"
  },
  {
    "text": "stream dot RB and we're gonna define the translate function now in the Ruby",
    "start": "1421080",
    "end": "1429960"
  },
  {
    "text": "runtime for a Tobias lambda every function expects to receive two keyword arguments a JSON hash which contains the",
    "start": "1429960",
    "end": "1438480"
  },
  {
    "text": "event you're getting from your lambda event source and a context object would context object which you can use to",
    "start": "1438480",
    "end": "1445650"
  },
  {
    "text": "access useful metadata about your execution these are keyword arguments everything",
    "start": "1445650",
    "end": "1451050"
  },
  {
    "text": "inside the event is going to be a string keyword and we'll kind of look into what that means here in a second so using our",
    "start": "1451050",
    "end": "1461670"
  },
  {
    "text": "documentation we can see that there's a fairly sizable event we're going to get here this stream translate function",
    "start": "1461670",
    "end": "1469020"
  },
  {
    "text": "might receive many records so 10 100 and I'll process them all in sequence raised",
    "start": "1469020",
    "end": "1476040"
  },
  {
    "text": "if there's a problem in the event will be rerun other was if I return without error it's going",
    "start": "1476040",
    "end": "1481530"
  },
  {
    "text": "to assume that all the events are processed and we're good to go so we're",
    "start": "1481530",
    "end": "1489030"
  },
  {
    "text": "going to iterate over the records we got",
    "start": "1489030",
    "end": "1493700"
  },
  {
    "text": "actually a little bit of requirements on top here so we need our posts we're",
    "start": "1496370",
    "end": "1505410"
  },
  {
    "text": "gonna get the comprehend SDK and the translate SDK using the ATIS SDK for",
    "start": "1505410",
    "end": "1514830"
  },
  {
    "text": "Ruby v3 one interesting thing you'll",
    "start": "1514830",
    "end": "1520410"
  },
  {
    "text": "notice is I'm not putting any configuration or credentials in here",
    "start": "1520410",
    "end": "1525560"
  },
  {
    "text": "where's the typo comprehend well I mean",
    "start": "1527420",
    "end": "1534570"
  },
  {
    "text": "I think it's gonna be easier to fix that than renaming the service entirely so thank you alright so we're going to say",
    "start": "1534570",
    "end": "1544080"
  },
  {
    "text": "if our record and its new image includes",
    "start": "1544080",
    "end": "1555410"
  },
  {
    "text": "base language then we're going to skip because that means we've already",
    "start": "1555410",
    "end": "1561720"
  },
  {
    "text": "processed it and modified it because the problem is when we modify it it's going to come right back in the stream we're",
    "start": "1561720",
    "end": "1567300"
  },
  {
    "text": "gonna have an infinite loop if we don't break out at this point and then we're",
    "start": "1567300",
    "end": "1572430"
  },
  {
    "text": "gonna find an update operation hash that we're gonna pass into the ADA base",
    "start": "1572430",
    "end": "1577680"
  },
  {
    "text": "record library so we know that the post ID is going to be from the record keys",
    "start": "1577680",
    "end": "1590390"
  },
  {
    "text": "post ID and then that's a string so this is going to expect an S and then the",
    "start": "1591080",
    "end": "1600060"
  },
  {
    "text": "body is going to be in the new image",
    "start": "1600060",
    "end": "1607460"
  },
  {
    "text": "body and that's also a string type and then",
    "start": "1608360",
    "end": "1614070"
  },
  {
    "text": "we're gonna ask comprehend to detect the",
    "start": "1614070",
    "end": "1620070"
  },
  {
    "text": "dominant language so if it's a bit ambiguous what language you wrote in",
    "start": "1620070",
    "end": "1625890"
  },
  {
    "text": "it's gonna take a best guess and from that response say it languages not first",
    "start": "1625890",
    "end": "1639810"
  },
  {
    "text": "dot language code because the first language is shows up in the response is the dominant language we don't need to",
    "start": "1639810",
    "end": "1645870"
  },
  {
    "text": "do complicated parsing on this and then",
    "start": "1645870",
    "end": "1651120"
  },
  {
    "text": "we know whether or not it's in English we're gonna want to set the base language so we do that now all right now",
    "start": "1651120",
    "end": "1660900"
  },
  {
    "text": "if the language is English we're done but if it's not we're gonna do some more",
    "start": "1660900",
    "end": "1666750"
  },
  {
    "text": "logic so we're going to go to translate",
    "start": "1666750",
    "end": "1671600"
  },
  {
    "text": "Texas comes from the body source language code came from comprehend the",
    "start": "1678990",
    "end": "1688020"
  },
  {
    "text": "target language code is en for English and then take the translated text and",
    "start": "1688020",
    "end": "1704330"
  },
  {
    "text": "then we go unless we can post update",
    "start": "1704330",
    "end": "1709850"
  },
  {
    "text": "with our update options we're gonna",
    "start": "1709850",
    "end": "1718200"
  },
  {
    "text": "raise an error so that this runs again and also so that our alarming can actually say hey your stream keeps",
    "start": "1718200",
    "end": "1724110"
  },
  {
    "text": "failing probably should look at that so",
    "start": "1724110",
    "end": "1729140"
  },
  {
    "text": "given that code we're about to deploy again and I made a mistake",
    "start": "1729140",
    "end": "1739220"
  },
  {
    "text": "telling you this is live we're doing this live what happened here invalid Sam document event not defined",
    "start": "1739220",
    "end": "1749010"
  },
  {
    "text": "oh I think I named the event wrong",
    "start": "1749010",
    "end": "1754010"
  },
  {
    "text": "so what I want is events post table stream typos matter try again",
    "start": "1759540",
    "end": "1768440"
  },
  {
    "text": "alright now we're building our Sinatra function again although it hasn't",
    "start": "1768440",
    "end": "1774390"
  },
  {
    "text": "changed so I don't think it's actually going to update that necessarily we're building our translator function getting",
    "start": "1774390",
    "end": "1779760"
  },
  {
    "text": "all the dependencies for that vendor yet and then we're gonna go to the package step where it uploads to lambda and then",
    "start": "1779760",
    "end": "1788100"
  },
  {
    "text": "we are going to deploy and it is going to work the conference Wi-Fi is going to",
    "start": "1788100",
    "end": "1794940"
  },
  {
    "text": "cooperate it's going to cooperate again it's gonna cooperate a30 all right so",
    "start": "1794940",
    "end": "1804450"
  },
  {
    "text": "it's creating a change set so again this isn't going to redeploy everything a lot",
    "start": "1804450",
    "end": "1810150"
  },
  {
    "text": "of resources haven't changed and so hopefully we're gonna get a quicker deployment this time around so the",
    "start": "1810150",
    "end": "1818280"
  },
  {
    "text": "updates starting and assuming that I haven't made any mistakes we're going to",
    "start": "1818280",
    "end": "1823710"
  },
  {
    "text": "be able to see some live translation in anticipation of success I'm going to ask",
    "start": "1823710",
    "end": "1831660"
  },
  {
    "text": "this to start speaking Japanese",
    "start": "1831660",
    "end": "1835370"
  },
  {
    "text": "all right so this will take just a minute here but we should have no idea",
    "start": "1842389",
    "end": "1848429"
  },
  {
    "text": "what that's about I think the dictionary was trying to look up a UUID that would be a very",
    "start": "1848429",
    "end": "1856440"
  },
  {
    "text": "impressive dictionary if it knew what it translated to Oh No",
    "start": "1856440",
    "end": "1861529"
  },
  {
    "text": "syntax errors in policy all right so I'm",
    "start": "1861529",
    "end": "1868889"
  },
  {
    "text": "not going to type the policy in Japanese",
    "start": "1868889",
    "end": "1874129"
  },
  {
    "text": "let's go take a look at this so version good to go",
    "start": "1874279",
    "end": "1881450"
  },
  {
    "text": "statement we're going to allow needed to",
    "start": "1881450",
    "end": "1889619"
  },
  {
    "text": "be resource not resources go ahead and roll that back try again got a little",
    "start": "1889619",
    "end": "1896580"
  },
  {
    "text": "bit of time and again this is live coding we're starting from a blank folder things can happen but an",
    "start": "1896580",
    "end": "1902190"
  },
  {
    "text": "interesting thing that we can note here is we are getting helpful errors in every step of the process so we're able",
    "start": "1902190",
    "end": "1908609"
  },
  {
    "text": "to determine why did this happen and how can we fix it so hopefully now I got",
    "start": "1908609",
    "end": "1916229"
  },
  {
    "text": "there in time it's going to package again we're going to deploy and this time again in anticipation getting ready",
    "start": "1916229",
    "end": "1924749"
  },
  {
    "text": "to type in Japanese which is the part of",
    "start": "1924749",
    "end": "1931409"
  },
  {
    "text": "least worried about about the whole deployment here ok so and again what",
    "start": "1931409",
    "end": "1938580"
  },
  {
    "text": "we're gonna have here another fun property of this is because of a davis lambdas scaling properties this is going",
    "start": "1938580",
    "end": "1944879"
  },
  {
    "text": "to be able to scale up as well so if we had many thousands of users making",
    "start": "1944879",
    "end": "1950039"
  },
  {
    "text": "requests the stream is going to start creating multiple functions it can",
    "start": "1950039",
    "end": "1956039"
  },
  {
    "text": "execute in parallel so this is able to run asynchronous jobs at scale while",
    "start": "1956039",
    "end": "1962519"
  },
  {
    "text": "running your web application at scale another fun part of this is the scale can be independent so if it was a bit",
    "start": "1962519",
    "end": "1969059"
  },
  {
    "text": "less connected to the database we could have our website has traffic shifting in daily patterns",
    "start": "1969059",
    "end": "1975779"
  },
  {
    "text": "and every night we could say I want to process a few million records and then",
    "start": "1975779",
    "end": "1981690"
  },
  {
    "text": "you can do a fan-out pattern and do that and that can also independently scale and it happens as soon as you need the",
    "start": "1981690",
    "end": "1988049"
  },
  {
    "text": "capacity so this is one of the big compelling benefits to me of using",
    "start": "1988049",
    "end": "1993659"
  },
  {
    "text": "service applications with a double am de so that said how'd this go still",
    "start": "1993659",
    "end": "2001399"
  },
  {
    "text": "updating but we're past where we all right in theory we are now good to go",
    "start": "2001399",
    "end": "2008830"
  },
  {
    "text": "so we're gonna post that now it's asynchronous so it's not gonna be there",
    "start": "2018259",
    "end": "2023489"
  },
  {
    "text": "just yet but hopefully if i refresh translated so I wanted to take a minute",
    "start": "2023489",
    "end": "2037229"
  },
  {
    "text": "to kind of recap what we've built talk about where we can go from there and",
    "start": "2037229",
    "end": "2042619"
  },
  {
    "text": "kind of point you in a direction to keep building so there's a few more fun",
    "start": "2042619",
    "end": "2047820"
  },
  {
    "text": "properties of what we built so go ahead and refresh this a couple times so we",
    "start": "2047820",
    "end": "2053309"
  },
  {
    "text": "get some traffic I can go look at a to s lambda see the functions that we've",
    "start": "2053309",
    "end": "2061648"
  },
  {
    "text": "created and we get a lot of monitoring built in so for example we can look at",
    "start": "2061649",
    "end": "2071000"
  },
  {
    "text": "what is the latency of our applications are we getting errors what is the how",
    "start": "2071000",
    "end": "2077398"
  },
  {
    "text": "many invitations are we getting so you know we can see how long it takes to run",
    "start": "2077399",
    "end": "2082440"
  },
  {
    "text": "so the stream looks like it ran in about 115 milliseconds the page is three",
    "start": "2082440",
    "end": "2090210"
  },
  {
    "text": "thirty eight or ten milliseconds depending on the luck of the draw probably the redirect took a slightly longer amount of time but we have",
    "start": "2090210",
    "end": "2098250"
  },
  {
    "text": "insights into all of this and it's built directly into the console here and you",
    "start": "2098250",
    "end": "2107970"
  },
  {
    "text": "can go to look at logs so if things really exploded we would have gotten to dive into the logs but unfortunately",
    "start": "2107970",
    "end": "2114569"
  },
  {
    "text": "that part worked but you'll just have to trust that logs are there yeah so from",
    "start": "2114569",
    "end": "2122880"
  },
  {
    "text": "here there are other features the one I had to cut for time unfortunately it was things like pagination but there are a",
    "start": "2122880",
    "end": "2129690"
  },
  {
    "text": "lot of very interesting properties about DynamoDB and how you can scale a single table across complex applications so",
    "start": "2129690",
    "end": "2137789"
  },
  {
    "text": "there is a great talk from a davis reinvent last year by rick Houlihan called advanced design patterns and",
    "start": "2137789",
    "end": "2142920"
  },
  {
    "text": "DynamoDB AWS record the Ruby library that we wrote for dynamodb plays really",
    "start": "2142920",
    "end": "2148619"
  },
  {
    "text": "well with that and again the fun part about is everything in the stack we designed",
    "start": "2148619",
    "end": "2153839"
  },
  {
    "text": "is a hundred percent utilization so as soon as we leave here and nobody's",
    "start": "2153839",
    "end": "2160380"
  },
  {
    "text": "looking at this page I'm paying nothing for it it is very efficient in utilization it scales extremely well and",
    "start": "2160380",
    "end": "2169099"
  },
  {
    "text": "these are the benefits of service I think it didn't raise rent have you made it to the AWS open day on Tuesday so do",
    "start": "2169099",
    "end": "2176940"
  },
  {
    "text": "you see Simon Ward lease talk I think he explained the the sight of this a lot better than I can but suffice it to say",
    "start": "2176940",
    "end": "2184500"
  },
  {
    "text": "the big takeaway from server list I don't need to have is that it's accessible to you you can write this",
    "start": "2184500",
    "end": "2192450"
  },
  {
    "text": "code there's nothing terribly magical or complicated about it",
    "start": "2192450",
    "end": "2197849"
  },
  {
    "text": "it's a different paradigm and then once you buy into that paradigm you get a lot",
    "start": "2197849",
    "end": "2203880"
  },
  {
    "text": "of properties and can spend a lot more of your time developing above the fold so to speak just focusing on actually",
    "start": "2203880",
    "end": "2210809"
  },
  {
    "text": "delivering value to your customers and spending less time on operations which",
    "start": "2210809",
    "end": "2216059"
  },
  {
    "text": "is the thing that drew me into this and I hope you got to see that today so",
    "start": "2216059",
    "end": "2221400"
  },
  {
    "text": "thank you very much and I'll be around for a while for questions thank you [Applause]",
    "start": "2221400",
    "end": "2226670"
  },
  {
    "text": "[Music] [Applause]",
    "start": "2226670",
    "end": "2231760"
  }
]