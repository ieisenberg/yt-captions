[
  {
    "start": "0",
    "end": "27000"
  },
  {
    "text": "hello everyone welcome we're excited to talk to you about multi region service",
    "start": "30",
    "end": "7259"
  },
  {
    "text": "applications today I am Magnus Berkman and AWS Solutions Architect and I'm here",
    "start": "7259",
    "end": "12630"
  },
  {
    "text": "with hey guys I'm Stefan I'm a specialist Solutions Architect with AWS and I focus on all of our service",
    "start": "12630",
    "end": "19680"
  },
  {
    "text": "offerings so API gateway lamda Cognito staff functions etc thank you right so",
    "start": "19680",
    "end": "27330"
  },
  {
    "start": "27000",
    "end": "27000"
  },
  {
    "text": "in this session we're gonna talk about what you need to consider when you go multi-region with service and we're",
    "start": "27330",
    "end": "34440"
  },
  {
    "text": "gonna do it in the context about real world service application we will be",
    "start": "34440",
    "end": "41309"
  },
  {
    "text": "looking at why would an owner actually want to go multi region where some of the patterns that the owner can use in",
    "start": "41309",
    "end": "48809"
  },
  {
    "text": "the application we are broken down the application into micro services and",
    "start": "48809",
    "end": "54690"
  },
  {
    "text": "we're looking at these micro services one at a time and then we'll finish off with a little bit of developer tools",
    "start": "54690",
    "end": "61260"
  },
  {
    "text": "deployments and monitoring and stuff like that all right so let's first look",
    "start": "61260",
    "end": "67590"
  },
  {
    "text": "at the example application so we have this made-up company we call the Food",
    "start": "67590",
    "end": "74400"
  },
  {
    "text": "for Thought that allows customers to order food and get it delivered so they",
    "start": "74400",
    "end": "80850"
  },
  {
    "text": "obviously need to be able to browse restaurants look at the menu you know",
    "start": "80850",
    "end": "86369"
  },
  {
    "text": "see what they like create an order submit the order and then get the food",
    "start": "86369",
    "end": "91770"
  },
  {
    "text": "delivered so this company is doing great business across both North America and",
    "start": "91770",
    "end": "97530"
  },
  {
    "text": "Europe and they want to have the customer have a great experience know no matter where they're located so low",
    "start": "97530",
    "end": "103890"
  },
  {
    "text": "latency and the application should be able to keep up with demand customers",
    "start": "103890",
    "end": "110700"
  },
  {
    "text": "don't really you know brand them the order food throughout the day but instead they are concentrating in the",
    "start": "110700",
    "end": "115710"
  },
  {
    "text": "demand do mealtimes in whatever time zone they happen to be in so this creates two critical",
    "start": "115710",
    "end": "124110"
  },
  {
    "text": "requirements for them one is that",
    "start": "124110",
    "end": "129048"
  },
  {
    "text": "that they you know they had to be able to handle this highly bearable load throughout the day and also since most",
    "start": "130240",
    "end": "139010"
  },
  {
    "text": "of the ordering is happening during the lunch and the dinner times the application absolutely have to be",
    "start": "139010",
    "end": "144110"
  },
  {
    "text": "available during those times since that's when the bulk of the revenue will happen so this type of use case is you",
    "start": "144110",
    "end": "153050"
  },
  {
    "start": "152000",
    "end": "152000"
  },
  {
    "text": "know there's a great fit for service right especially the the two last things I mentioned if you look at the way box",
    "start": "153050",
    "end": "160760"
  },
  {
    "text": "the kind of a direct match to that right so the ability to scale with demand and",
    "start": "160760",
    "end": "166840"
  },
  {
    "text": "you know that veil ability and the fault tolerance built in automatically I think",
    "start": "166840",
    "end": "172250"
  },
  {
    "text": "was also happy with you know not having to have that overhead for provisioning any servers or manage them and never",
    "start": "172250",
    "end": "179959"
  },
  {
    "text": "have any paper idle so with these great",
    "start": "179959",
    "end": "185180"
  },
  {
    "text": "benefits why would they ever want to go multi-region what would be the reasons to do that so but first of all if if we",
    "start": "185180",
    "end": "194870"
  },
  {
    "text": "have a user in Europe and they would have to go all the way to North America to get to the application there will be",
    "start": "194870",
    "end": "201440"
  },
  {
    "text": "a latency it isn't like no way around it right so we want to be able to place the",
    "start": "201440",
    "end": "207049"
  },
  {
    "text": "application in a region that's close to the customer so they would get that improved latency in performance also",
    "start": "207049",
    "end": "216140"
  },
  {
    "text": "that criticality of having the application available during meal times makes us want to architect application",
    "start": "216140",
    "end": "222890"
  },
  {
    "text": "in a way that have a increased fault tolerance that's that's more that's",
    "start": "222890",
    "end": "228530"
  },
  {
    "text": "possible to do just within one region also if you're dealing with personal",
    "start": "228530",
    "end": "235370"
  },
  {
    "text": "information we also might have to adhere to some strict laws around that as well so some of the information that is",
    "start": "235370",
    "end": "243440"
  },
  {
    "text": "created in a particular country might have to say in that country so those are",
    "start": "243440",
    "end": "248780"
  },
  {
    "text": "some of the the main reason we're looking at here what we would have to go from off the region so notice the fan",
    "start": "248780",
    "end": "254420"
  },
  {
    "text": "will look a little bit more details on the considerations we have to do thank you",
    "start": "254420",
    "end": "260519"
  },
  {
    "text": "so Magnus and I didn't just put together a deck and came here to present it we",
    "start": "260519",
    "end": "266789"
  },
  {
    "text": "actually sat down and designed this application and thought through all the possible use cases and where it was",
    "start": "266789",
    "end": "273810"
  },
  {
    "text": "gonna go wrong and how and it turns out that as you decide to go multi-region",
    "start": "273810",
    "end": "278970"
  },
  {
    "text": "there's a lot of factors to it it's not a decision that the technology team take",
    "start": "278970",
    "end": "285030"
  },
  {
    "text": "on by itself it's likely what's likely to happen and it will have happened to",
    "start": "285030",
    "end": "290610"
  },
  {
    "text": "you I'm sure is that a business user comes along and says this application must be up at all times we need absolute",
    "start": "290610",
    "end": "296789"
  },
  {
    "text": "full tolerance at any time and with that inevitably there will be compromises the",
    "start": "296789",
    "end": "304860"
  },
  {
    "text": "first thing that helps is if your application is actually designed to be",
    "start": "304860",
    "end": "309900"
  },
  {
    "text": "separated into micro-services it's a lot easier to make an individual small micro",
    "start": "309900",
    "end": "316860"
  },
  {
    "text": "service spend multiple regions rather than take a monolith and try to make you",
    "start": "316860",
    "end": "321960"
  },
  {
    "text": "work automatically across the regions our sample application food-for-thought",
    "start": "321960",
    "end": "327990"
  },
  {
    "text": "is divided in three separate micro-services a two and a half really the first one is the catalog service",
    "start": "327990",
    "end": "334680"
  },
  {
    "text": "this is what our end users our customers use to browse the list of restaurants and look at their menu we also have an",
    "start": "334680",
    "end": "342990"
  },
  {
    "text": "administration service to this that we ourselves use to edit restaurants add",
    "start": "342990",
    "end": "348870"
  },
  {
    "text": "new ones change the menu and our partners the restaurant themselves can also go and update their details and",
    "start": "348870",
    "end": "355680"
  },
  {
    "text": "then we have the last service the ordering service which is really the core of our business so as Magnus and I",
    "start": "355680",
    "end": "363090"
  },
  {
    "text": "were going through the design and making the decision of what should be multi-region and how we came up with a",
    "start": "363090",
    "end": "370259"
  },
  {
    "start": "370000",
    "end": "370000"
  },
  {
    "text": "little diagram with a little decision flow for ourselves the first thing that",
    "start": "370259",
    "end": "376440"
  },
  {
    "text": "we ask ourselves is is this service we are talking about core to our business",
    "start": "376440",
    "end": "381500"
  },
  {
    "text": "does it matter and the fact is that regional outages are extremely unlikely",
    "start": "381500",
    "end": "389190"
  },
  {
    "text": "and if they were to happen they are short-lived and sir classic example of this would be",
    "start": "389190",
    "end": "394710"
  },
  {
    "text": "I am food-for-thought I'm running my business I have a bi service the service",
    "start": "394710",
    "end": "400560"
  },
  {
    "text": "that collects order information and customer information and shoves it in the database somewhere so that my",
    "start": "400560",
    "end": "406020"
  },
  {
    "text": "business users can come and analyze the data it's a really nice service but it's",
    "start": "406020",
    "end": "412259"
  },
  {
    "text": "something we can live without for a couple of hours it doesn't matter so that that's our first decision gone after that chart we don't need to go",
    "start": "412259",
    "end": "418650"
  },
  {
    "text": "multi-region for this service and once you move further down in the chart then the question becomes days processing and",
    "start": "418650",
    "end": "426810"
  },
  {
    "text": "how many of you have tried to set up a database with a master master storage",
    "start": "426810",
    "end": "432030"
  },
  {
    "text": "that keeps consistency and you're brave for admitting it that it's extremely",
    "start": "432030",
    "end": "437729"
  },
  {
    "text": "hard and so there's another trade-off we could make there do we need to have this",
    "start": "437729",
    "end": "443550"
  },
  {
    "text": "master master set up or can we have just a master replica in the second region we only care about reading data as we go",
    "start": "443550",
    "end": "451800"
  },
  {
    "text": "through we'll talk about each service individually and we'll tell you that how we've made the decision and how we",
    "start": "451800",
    "end": "456870"
  },
  {
    "text": "designed it the other consideration that might not matter to you but it will",
    "start": "456870",
    "end": "462270"
  },
  {
    "start": "458000",
    "end": "458000"
  },
  {
    "text": "matter to your business user is how much will this cost us in fact this argument is the best one to make the business",
    "start": "462270",
    "end": "468090"
  },
  {
    "text": "users go away as they try to convince you to make it incredibly full tolerant I have some good news here which is",
    "start": "468090",
    "end": "476120"
  },
  {
    "text": "services like API gateway and Landa only charge you for when your code actually runs so your costs are tied to the",
    "start": "476120",
    "end": "484979"
  },
  {
    "text": "amount of business you do and no matter how many regions you run in you have a fixed amount of customers that place a",
    "start": "484979",
    "end": "491130"
  },
  {
    "text": "fixed amount of orders so your cost is gonna be the same even if you're running multiple regions storage slightly",
    "start": "491130",
    "end": "499590"
  },
  {
    "text": "different story it may increase your cost and that's why it's important to have that conversation how and what are",
    "start": "499590",
    "end": "506940"
  },
  {
    "text": "we going to replicate trying to replicate the content of a DynamoDB in real time so that they're writable",
    "start": "506940",
    "end": "512820"
  },
  {
    "text": "everywhere it's going to be a lot more expensive that just being selective and perhaps just cashing somewhere else in",
    "start": "512820",
    "end": "518520"
  },
  {
    "text": "the second region and last consideration is data transfer once again this is tied",
    "start": "518520",
    "end": "524700"
  },
  {
    "text": "just like the service offerings is tied to the amount of business you do it's not gonna change to",
    "start": "524700",
    "end": "531310"
  },
  {
    "text": "the other region but I just want to remind you to go and check the pricing",
    "start": "531310",
    "end": "537220"
  },
  {
    "text": "page because different regions have different egress costs and this will figure in your belt so you want to keep",
    "start": "537220",
    "end": "543160"
  },
  {
    "text": "them in mind another thing that changes as you go multi region is that your application",
    "start": "543160",
    "end": "549700"
  },
  {
    "start": "545000",
    "end": "545000"
  },
  {
    "text": "becomes quite a bit more complex in terms of the code itself and quite a bit",
    "start": "549700",
    "end": "556750"
  },
  {
    "text": "more complex to operate suddenly you're spreading operation across time zones and you're having alarms from different",
    "start": "556750",
    "end": "563680"
  },
  {
    "text": "different regions it's extremely important to make all of these processes",
    "start": "563680",
    "end": "569280"
  },
  {
    "text": "automated or as automated as possible and how are you going to look at the logs when you've lost the region and you",
    "start": "569280",
    "end": "575590"
  },
  {
    "text": "can't go there to figure out what happened all of these are pretty important consideration and finally data",
    "start": "575590",
    "end": "583060"
  },
  {
    "start": "582000",
    "end": "582000"
  },
  {
    "text": "sovereignty seems pretty easy when you think about it sure I'm gonna set up a user pool in the US and one in Germany",
    "start": "583060",
    "end": "589840"
  },
  {
    "text": "and German customers will register in Germany what happens if a German",
    "start": "589840",
    "end": "597460"
  },
  {
    "text": "customer registers from Germany you're right 53 will direct them to the",
    "start": "597460",
    "end": "602560"
  },
  {
    "text": "Frankfurt region they will create their account there but then they travel to the US and they try to update their",
    "start": "602560",
    "end": "608410"
  },
  {
    "text": "account right 53 will naturally send them to the US region where their",
    "start": "608410",
    "end": "614200"
  },
  {
    "text": "account doesn't exist or even if it did you don't want to store PII data for them so there's a lot of edge cases",
    "start": "614200",
    "end": "621340"
  },
  {
    "text": "there that will talk you through keep them in mind as we go and now let's",
    "start": "621340",
    "end": "626460"
  },
  {
    "text": "let's head over to Magnus is gonna talk about the first services yes thank you so let's look at the browsing and",
    "start": "626460",
    "end": "632440"
  },
  {
    "text": "updating catalog use cases and the micro services that goes along with that so do a quick review here of of these",
    "start": "632440",
    "end": "640060"
  },
  {
    "start": "638000",
    "end": "638000"
  },
  {
    "text": "two services right so for the browsing one that will allow them to browse the",
    "start": "640060",
    "end": "645130"
  },
  {
    "text": "restaurants and the menus and that's actually a critical step because that's something that they do is part of",
    "start": "645130",
    "end": "651340"
  },
  {
    "text": "getting the order in that it needs the revenue so this is part of the revenue flow",
    "start": "651340",
    "end": "657269"
  },
  {
    "text": "looking back they catalogue what though that's that's critical people can still",
    "start": "657269",
    "end": "663160"
  },
  {
    "text": "you know browse and make orders and submit orders without having some",
    "start": "663160",
    "end": "668649"
  },
  {
    "text": "late-breaking news and some late-breaking changes to the catalog so",
    "start": "668649",
    "end": "674140"
  },
  {
    "text": "that one we deemed that's critical for the consistency we can have the same",
    "start": "674140",
    "end": "680019"
  },
  {
    "text": "reasoning we find that we eventually read the updates is are not as critical",
    "start": "680019",
    "end": "685269"
  },
  {
    "text": "here and we don't have any dependencies for this so if we go back to the tree",
    "start": "685269",
    "end": "691240"
  },
  {
    "start": "691000",
    "end": "691000"
  },
  {
    "text": "that's the fauna introduced looking at the browsing catalog use case so yes",
    "start": "691240",
    "end": "697810"
  },
  {
    "text": "this is definitely critical so we make the decision here we're gonna put this in two different regions and we will use",
    "start": "697810",
    "end": "706420"
  },
  {
    "text": "the DNS routing to route them to the closest one based on latency this is a",
    "start": "706420",
    "end": "712209"
  },
  {
    "text": "read-only use case so yes there will be some data flowing into this but for this use case this is read-only and how are",
    "start": "712209",
    "end": "720490"
  },
  {
    "text": "we getting those updates so there's kind of two two different paths here one is",
    "start": "720490",
    "end": "726279"
  },
  {
    "text": "the scheduled replication but in this case we think that's a little bit too much latency that's kind of part of the",
    "start": "726279",
    "end": "731740"
  },
  {
    "text": "judgment we mean you need to make here so instead we're going with the near real-time replication eventual",
    "start": "731740",
    "end": "738130"
  },
  {
    "text": "consistency from from a master copy if",
    "start": "738130",
    "end": "744339"
  },
  {
    "text": "we take the same tree and look at the updating catalog use case we stopped much much earlier so here really",
    "start": "744339",
    "end": "751720"
  },
  {
    "start": "745000",
    "end": "745000"
  },
  {
    "text": "stopping already at that first step we can constrain this into one region we",
    "start": "751720",
    "end": "757810"
  },
  {
    "text": "only need to deal with one table that we updated this is a fairly important",
    "start": "757810",
    "end": "762850"
  },
  {
    "text": "realization because now we can start simplifying a lot and we can kind of remove that architectural complexity",
    "start": "762850",
    "end": "769810"
  },
  {
    "text": "that we required like if we set this up and decided this was a critical service",
    "start": "769810",
    "end": "774970"
  },
  {
    "text": "we very likely would need to put some sort of master master replication into place so let's look at the architecture",
    "start": "774970",
    "end": "783550"
  },
  {
    "text": "for the browsing catalog one first so this is fairly straightforward in the in kinda me back that to the",
    "start": "783550",
    "end": "789829"
  },
  {
    "text": "right we have our Amazon DynamoDB tables those are accessed from a business logic",
    "start": "789829",
    "end": "796339"
  },
  {
    "text": "within our a Tobias lambda functions that is exposed through a REST API using",
    "start": "796339",
    "end": "802639"
  },
  {
    "text": "the Amazon API gateway our mobile client is asked is accessing those ApS over the",
    "start": "802639",
    "end": "809720"
  },
  {
    "text": "public Internet and then leveraging Amazon route 53 to do that to do that",
    "start": "809720",
    "end": "815480"
  },
  {
    "text": "routing today to the right region and in",
    "start": "815480",
    "end": "820550"
  },
  {
    "text": "the example be showing here we using us East one and use was to as the two",
    "start": "820550",
    "end": "825709"
  },
  {
    "text": "regions to kind of showcase this so some highlights here so they P I they were",
    "start": "825709",
    "end": "833480"
  },
  {
    "start": "830000",
    "end": "830000"
  },
  {
    "text": "setting up the monthly reading API we setting up is an active active so it's taking traffic at the same time and the",
    "start": "833480",
    "end": "842060"
  },
  {
    "text": "client will connect to the one closest to them so we're deploying the exact",
    "start": "842060",
    "end": "848899"
  },
  {
    "text": "same stack in both regions this is the read only use case but and we you know",
    "start": "848899",
    "end": "858050"
  },
  {
    "text": "we can constrain ourselves to them just read the tables from the from the local region one optional thing here that",
    "start": "858050",
    "end": "864500"
  },
  {
    "text": "might work well in in this particular case is that if our that our catalog is",
    "start": "864500",
    "end": "870019"
  },
  {
    "text": "fairly static we can do some caching on this API as well about putting cloud",
    "start": "870019",
    "end": "875449"
  },
  {
    "text": "funding in front of it so the first thing I want to dig a bit closer into is",
    "start": "875449",
    "end": "881360"
  },
  {
    "start": "881000",
    "end": "881000"
  },
  {
    "text": "the the API the API active active setup so this is something that's not possible",
    "start": "881360",
    "end": "887089"
  },
  {
    "text": "because of a release that Amazon API Gateway did a few weeks ago now where it",
    "start": "887089",
    "end": "895279"
  },
  {
    "text": "introduced a new concept of endpoint types so the edge you know the edge",
    "start": "895279",
    "end": "901370"
  },
  {
    "text": "optimized one is the one that was there before where a cloud front is used to bring the the endpoint close to the",
    "start": "901370",
    "end": "908209"
  },
  {
    "text": "coast close to the customer the new one regional one will instead put that",
    "start": "908209",
    "end": "914029"
  },
  {
    "text": "endpoint into a region itself and one thing that allows this this great for",
    "start": "914029",
    "end": "921439"
  },
  {
    "text": "this is that now we can duplicate we can do duplicate at ApS and duplicate endpoints",
    "start": "921439",
    "end": "927790"
  },
  {
    "text": "and the key thing for this this is applies also to the custom domain names so let's say for for our example here we",
    "start": "927790",
    "end": "934490"
  },
  {
    "text": "put in API dot food-for-thought calm we could have that same hostname and it's",
    "start": "934490",
    "end": "939890"
  },
  {
    "text": "same custom domain name in two different regions so a big change as part of this",
    "start": "939890",
    "end": "946190"
  },
  {
    "text": "is the custom domain names used to be unique on a global level and now they're unique at a regional level so let's look",
    "start": "946190",
    "end": "955850"
  },
  {
    "text": "at a diagram of how this might look like so when we create this API we have this",
    "start": "955850",
    "end": "961850"
  },
  {
    "start": "957000",
    "end": "957000"
  },
  {
    "text": "API and once created we see one in you sees one we see one in us two and these",
    "start": "961850",
    "end": "968630"
  },
  {
    "text": "are the ones that are we created automatically by the API gateway you",
    "start": "968630",
    "end": "974990"
  },
  {
    "text": "can't really customize them that without the main name that's auto-generated for you so in front of that we'll put a",
    "start": "974990",
    "end": "980990"
  },
  {
    "text": "custom domain name that we'll have associated with our API but food-for-thought calm and we'll use that",
    "start": "980990",
    "end": "988460"
  },
  {
    "text": "in combination with Amazon route 53 to start getting this multi region set up",
    "start": "988460",
    "end": "994450"
  },
  {
    "text": "so we will take the custom domain name identifier we'll start creating records",
    "start": "994450",
    "end": "1001630"
  },
  {
    "text": "in amazon route 53 will create alias and cname records one for each region and",
    "start": "1001630",
    "end": "1008230"
  },
  {
    "text": "that now allows us to use all the capabilities of amazon route 53 that",
    "start": "1008230",
    "end": "1013690"
  },
  {
    "text": "were used to when it comes to some of the other services we have so we can do routing based on latency geolocation",
    "start": "1013690",
    "end": "1020260"
  },
  {
    "text": "weighting and all of those ones and we can also do failover so that's the key",
    "start": "1020260",
    "end": "1026890"
  },
  {
    "text": "to make all these active active setup work one thing we still need to do",
    "start": "1026890",
    "end": "1032350"
  },
  {
    "text": "though to really make the failover work is we do need to implement health checks",
    "start": "1032350",
    "end": "1038040"
  },
  {
    "text": "so there's health checks in route 53 we need to provide paths for each endpoint",
    "start": "1038040",
    "end": "1043689"
  },
  {
    "text": "that the health Jackson call to see things are really doing well and we",
    "start": "1043690",
    "end": "1050200"
  },
  {
    "text": "recommend to do the specific paths for the health checks that can be",
    "start": "1050200",
    "end": "1055720"
  },
  {
    "text": "like a deep paying checking for all the components that are required to make this API work and make sure that they",
    "start": "1055720",
    "end": "1063610"
  },
  {
    "text": "all are healthy switching over to the",
    "start": "1063610",
    "end": "1069389"
  },
  {
    "text": "updating catalog architecture this one is very similar in the sense of we have",
    "start": "1069389",
    "end": "1075700"
  },
  {
    "text": "the API gateway 404 for our REST API lamda for business logic and dynamodb",
    "start": "1075700",
    "end": "1082269"
  },
  {
    "text": "for a storage for database and in this",
    "start": "1082269",
    "end": "1087789"
  },
  {
    "text": "case we only have it in one region though and you can see that in USD Swan and that works well for the upbringing",
    "start": "1087789",
    "end": "1096039"
  },
  {
    "text": "part but we do need to get that information to the other regions too because we have those critical browsing",
    "start": "1096039",
    "end": "1101409"
  },
  {
    "text": "catalog the use case as well so we are doing replication and we see that with a",
    "start": "1101409",
    "end": "1107230"
  },
  {
    "text": "with a lambda function there and I'll go into live in more detail the the use of",
    "start": "1107230",
    "end": "1112629"
  },
  {
    "text": "list to region has will be shaded icons as kind of to represent the browsing catalog use case so the architectures",
    "start": "1112629",
    "end": "1121149"
  },
  {
    "start": "1120000",
    "end": "1120000"
  },
  {
    "text": "here the the highlights here for this architecture is that single region API",
    "start": "1121149",
    "end": "1126210"
  },
  {
    "text": "of course we have multiple microservices it does allow for graceful degradation even if that region that has that up in",
    "start": "1126210",
    "end": "1134169"
  },
  {
    "text": "catalog microservice in it goes down we can still start you can still do browsing you know the still did browsing",
    "start": "1134169",
    "end": "1140620"
  },
  {
    "text": "and have that critical revenue and the service is still being up but we do need",
    "start": "1140620",
    "end": "1147879"
  },
  {
    "text": "to make that replication and this is actually a fairly straightforward because we can now do this as a massive",
    "start": "1147879",
    "end": "1154299"
  },
  {
    "text": "replica set up which really would simplify the replication across the",
    "start": "1154299",
    "end": "1159370"
  },
  {
    "text": "regions by having the massive replicas we avoid some of the problems we have with a master master setup we don't have",
    "start": "1159370",
    "end": "1165639"
  },
  {
    "text": "any sort of data conflicts that we have to worry about there won't be a split-brain scenario that we would have",
    "start": "1165639",
    "end": "1171759"
  },
  {
    "text": "to deal with and setting that replication setting that setting up that",
    "start": "1171759",
    "end": "1179139"
  },
  {
    "text": "replication is fairly straightforward as well and we're going to use Amazon DynamoDB streams to do that so the other",
    "start": "1179139",
    "end": "1188529"
  },
  {
    "text": "thing that's great with that with that it'll be slam dies that that's a built in the event source",
    "start": "1188529",
    "end": "1193630"
  },
  {
    "text": "for lambda so when there are changes happening to the done animal to be table",
    "start": "1193630",
    "end": "1199299"
  },
  {
    "text": "all of those who look captured and put into the stream the the lambda function",
    "start": "1199299",
    "end": "1205510"
  },
  {
    "text": "will be invoked all those changes will put into the payload the function can",
    "start": "1205510",
    "end": "1210610"
  },
  {
    "text": "now iterate over those connect to the table in the other region and replay all",
    "start": "1210610",
    "end": "1215950"
  },
  {
    "text": "of those updates right then we have their application working right now",
    "start": "1215950",
    "end": "1222280"
  },
  {
    "text": "Stephan is gonna go and look at the submit order use case thank you yes",
    "start": "1222280",
    "end": "1227919"
  },
  {
    "text": "submit order the requirements are pretty straightforward this is the core to our",
    "start": "1227919",
    "end": "1233020"
  },
  {
    "text": "business your business users will come around and hit you hard on the hand if",
    "start": "1233020",
    "end": "1238210"
  },
  {
    "text": "this goes down because this is a primary revenue stream this is how we make money we cannot afford to go down and we need",
    "start": "1238210",
    "end": "1246910"
  },
  {
    "text": "to be able to accept orders from any one customer in any region at any time it",
    "start": "1246910",
    "end": "1252940"
  },
  {
    "text": "doesn't matter whether one fails or not it needs to be up and so if we go",
    "start": "1252940",
    "end": "1259990"
  },
  {
    "start": "1258000",
    "end": "1258000"
  },
  {
    "text": "through our decision tree you can see that yes we need to go multi region it's key to our business and we need to be",
    "start": "1259990",
    "end": "1267580"
  },
  {
    "text": "able to read and write to all regions at the same time which instinctively makes",
    "start": "1267580",
    "end": "1274059"
  },
  {
    "text": "you think oh I'm gonna get my master master set up going in fact when your",
    "start": "1274059",
    "end": "1279880"
  },
  {
    "text": "business user comes along and says I need you to build this incredible service that never goes down and",
    "start": "1279880",
    "end": "1285870"
  },
  {
    "text": "synchronizes across region and it's just perfect as a developer I get pretty",
    "start": "1285870",
    "end": "1291010"
  },
  {
    "text": "excited it's a nice chunky problem to address and I know I'm gonna go away for",
    "start": "1291010",
    "end": "1296440"
  },
  {
    "text": "a while build this beautiful baby and then when I deploy it and try to actually operate it in production it",
    "start": "1296440",
    "end": "1302530"
  },
  {
    "text": "turns out that it's a bit of a Frankenstein and this is where I go back to my original node which is as you go",
    "start": "1302530",
    "end": "1309850"
  },
  {
    "text": "multi region they would there will be compromises and Magnus and I decided to",
    "start": "1309850",
    "end": "1316960"
  },
  {
    "text": "make a compromise here which is well yes you can create orders in anyone read",
    "start": "1316960",
    "end": "1323850"
  },
  {
    "text": "from that moment that region will become the master for that order and no other",
    "start": "1323850",
    "end": "1329289"
  },
  {
    "text": "region will modify that order other than that one and that is because in the",
    "start": "1329289",
    "end": "1338860"
  },
  {
    "text": "physical universe we occupy speed of light being what it is acid transactions across multiple regions are just not",
    "start": "1338860",
    "end": "1345520"
  },
  {
    "text": "going to be fun there's not gonna be nice to operate so we needed to find a",
    "start": "1345520",
    "end": "1351520"
  },
  {
    "text": "way around this and the other thing that concerned us is given that we cannot",
    "start": "1351520",
    "end": "1357490"
  },
  {
    "text": "have true asset transaction across multiple regions we run the risk of presenting customers and users with",
    "start": "1357490",
    "end": "1365500"
  },
  {
    "text": "inconsistent orders I created in region one that's being replicated in region two but suddenly I try to read it and",
    "start": "1365500",
    "end": "1371230"
  },
  {
    "text": "half the food I ordered is not there so I add it again and then I order it twice and we thought this is gonna turn out to",
    "start": "1371230",
    "end": "1378789"
  },
  {
    "text": "be a worst customer experience than us saying you're tying to that region if",
    "start": "1378789",
    "end": "1383830"
  },
  {
    "text": "you lose that region while you're creating the order then we're just gonna",
    "start": "1383830",
    "end": "1389860"
  },
  {
    "text": "say sorry we're gonna have to start again and this doesn't necessarily mean",
    "start": "1389860",
    "end": "1396850"
  },
  {
    "text": "that it's gonna be a really bad customer experience it just means that we're gonna have to make our back-end pretty",
    "start": "1396850",
    "end": "1403720"
  },
  {
    "text": "smart and our client also smart enough to be able to be able to handle this use case presumably our client will have a",
    "start": "1403720",
    "end": "1410799"
  },
  {
    "text": "state of the order and can just resend it somewhere else",
    "start": "1410799",
    "end": "1415408"
  },
  {
    "text": "as I said eventual consistency is going to be painful but more than anything",
    "start": "1417059",
    "end": "1423220"
  },
  {
    "text": "with this setup where we have a home region for an order and we're just gonna talk to that region we only expose",
    "start": "1423220",
    "end": "1430780"
  },
  {
    "text": "ourselves to one edge case which is where customer has created the order has",
    "start": "1430780",
    "end": "1436480"
  },
  {
    "text": "added all their items to the order and then as they hit submit we accept the",
    "start": "1436480",
    "end": "1441580"
  },
  {
    "text": "request in the region dies it is possible but unlikely and because it is",
    "start": "1441580",
    "end": "1448960"
  },
  {
    "text": "an edge case this is something we are willing to accept and deal with manually will have procedures when the region",
    "start": "1448960",
    "end": "1454090"
  },
  {
    "text": "comes back up to handle the case but otherwise everything else works and",
    "start": "1454090",
    "end": "1459940"
  },
  {
    "text": "more than anything it works simply the code for us for a software is simple the",
    "start": "1459940",
    "end": "1465460"
  },
  {
    "text": "path that the order takes to be created and process is one there are an edge",
    "start": "1465460",
    "end": "1471550"
  },
  {
    "text": "cases where f1 is down but I can pick it up from the other one go somewhere else because that's not gonna be a lot of fun",
    "start": "1471550",
    "end": "1477550"
  },
  {
    "text": "to operate when it actually starts happening so as I said this is we're",
    "start": "1477550",
    "end": "1484090"
  },
  {
    "text": "gonna have to write server-side code and or I shouldn't say server so it's server",
    "start": "1484090",
    "end": "1489250"
  },
  {
    "text": "less so here we're gonna write our back-end and our client together so that",
    "start": "1489250",
    "end": "1495580"
  },
  {
    "text": "they're smart and can connect in concert to create a good experience for the end user so the way we've designed this is",
    "start": "1495580",
    "end": "1503050"
  },
  {
    "text": "that the client will send the first request to that global endpoint that Magnus described that is balanced with",
    "start": "1503050",
    "end": "1510160"
  },
  {
    "text": "route 53 right 53 will decide yes this is your best region low latency and it's",
    "start": "1510160",
    "end": "1515920"
  },
  {
    "text": "up so go there and create the order we'll send the instructions to the",
    "start": "1515920",
    "end": "1521530"
  },
  {
    "text": "back-end and our code will create the order once we've created the order what",
    "start": "1521530",
    "end": "1528940"
  },
  {
    "start": "1526000",
    "end": "1526000"
  },
  {
    "text": "we'll send back is the order information it's going to be an empty order but",
    "start": "1528940",
    "end": "1534580"
  },
  {
    "text": "we're going to generate an order ID for it and the approach we've taken here is to make the order ID a little bit",
    "start": "1534580",
    "end": "1542050"
  },
  {
    "text": "smarter than a plain auto-increment number we're going to generate something similar to an AR n in AWS and it's going",
    "start": "1542050",
    "end": "1550150"
  },
  {
    "text": "to contain more information it's going to contain yes a numerical identifier for the order as well as the home region",
    "start": "1550150",
    "end": "1555550"
  },
  {
    "text": "and the customer ID and that allows our back-end code to make very quick",
    "start": "1555550",
    "end": "1561490"
  },
  {
    "text": "decisions in a stateless fashion without having to go off and query databases somewhere to figure out if I'm the home",
    "start": "1561490",
    "end": "1568480"
  },
  {
    "text": "region or not if I created the order in u.s. west ooh and that's that as the",
    "start": "1568480",
    "end": "1574360"
  },
  {
    "text": "master region and then the client tries to send a request to edit the order to us east one us is one can just look at",
    "start": "1574360",
    "end": "1580960"
  },
  {
    "text": "the ID that's been sent and say can't help you there try again",
    "start": "1580960",
    "end": "1585970"
  },
  {
    "text": "and so that means we have to create three endpoint will have our global API",
    "start": "1585970",
    "end": "1592900"
  },
  {
    "start": "1590000",
    "end": "1590000"
  },
  {
    "text": "endpoint that we can address but we'll also have region specific aliases because once the order is created the",
    "start": "1592900",
    "end": "1600070"
  },
  {
    "text": "client gets back that order ID and says okay I am uswest ooh so I'm gonna go talk straight to the US west to endpoint",
    "start": "1600070",
    "end": "1607870"
  },
  {
    "text": "any time I need to edit the order now do",
    "start": "1607870",
    "end": "1612910"
  },
  {
    "text": "you want to synchronize this data across region so it can be read from other region yes you don't necessarily have to",
    "start": "1612910",
    "end": "1619740"
  },
  {
    "text": "that's more for business intelligence application or in case somebody wants to see their order their order history",
    "start": "1619740",
    "end": "1625360"
  },
  {
    "text": "later and somehow one region is down and",
    "start": "1625360",
    "end": "1630480"
  },
  {
    "text": "there we would use the same technique that Magnus described for the catalog where we use dynamodb streams to just",
    "start": "1630480",
    "end": "1637900"
  },
  {
    "text": "replicate that but no region should touch an order that doesn't belong to that region and so at the end of all",
    "start": "1637900",
    "end": "1645880"
  },
  {
    "text": "this loop the client will just send a request to that master region to say go",
    "start": "1645880",
    "end": "1651400"
  },
  {
    "text": "ahead I'm closing this order go ahead and process it if at some point during",
    "start": "1651400",
    "end": "1656799"
  },
  {
    "text": "this time the u.s. west to region goes down we lose our application there the",
    "start": "1656799",
    "end": "1663760"
  },
  {
    "text": "client still has the state of the cart for that order of the basket and so once",
    "start": "1663760",
    "end": "1669520"
  },
  {
    "text": "it receives that error there's no edge case in our code there's no smart F the",
    "start": "1669520",
    "end": "1674650"
  },
  {
    "text": "client will simply say okay I'm gonna start this flow again send it to the",
    "start": "1674650",
    "end": "1679809"
  },
  {
    "text": "global endpoint say I want to create a new order pick a new master region and continues exactly as it is and for our",
    "start": "1679809",
    "end": "1686350"
  },
  {
    "text": "end user this should be a pretty seamless experience as well if we handle it well so we've made a significant",
    "start": "1686350",
    "end": "1693850"
  },
  {
    "text": "compromise but ultimately our code is simpler it's going to be easier to operate and as far as the end users is",
    "start": "1693850",
    "end": "1700840"
  },
  {
    "text": "concerned there shouldn't be any challenge and we haven't taken this",
    "start": "1700840",
    "end": "1706179"
  },
  {
    "text": "approach just because Magnus and I are lazy and didn't want to deal with the complexity we actually explored quite a",
    "start": "1706179",
    "end": "1712090"
  },
  {
    "text": "few possibilities and I'm gonna talk through some a few of them that we discarded along the way but we decided",
    "start": "1712090",
    "end": "1718510"
  },
  {
    "text": "that this was the best compromise between user experience and our ease of development and operating the",
    "start": "1718510",
    "end": "1725890"
  },
  {
    "text": "service the other thing that I want you to note is in this final slide once we",
    "start": "1725890",
    "end": "1733330"
  },
  {
    "text": "accept the order we have a dependency a third-party payment processing system",
    "start": "1733330",
    "end": "1739060"
  },
  {
    "text": "and as you can see in this slide I have two regions running my application but I",
    "start": "1739060",
    "end": "1745660"
  },
  {
    "text": "have only one payment processing system and I see this a lot you can go to as",
    "start": "1745660",
    "end": "1752170"
  },
  {
    "text": "many region as you like if your third-party dependencies you use a single region and they go down all your",
    "start": "1752170",
    "end": "1760150"
  },
  {
    "text": "work is for naught so as you take dependencies make sure that they're just",
    "start": "1760150",
    "end": "1765370"
  },
  {
    "text": "as redundant as you are in fact if you decide to regionalize a service your",
    "start": "1765370",
    "end": "1770800"
  },
  {
    "text": "dependency should live in that region or in that geographical area so that you",
    "start": "1770800",
    "end": "1776140"
  },
  {
    "text": "can neatly isolate it and saying this is the u.s. east box the u.s. west is",
    "start": "1776140",
    "end": "1782560"
  },
  {
    "text": "somewhere else so the other options we looked at the",
    "start": "1782560",
    "end": "1789370"
  },
  {
    "text": "first one the obvious one that anybody has set up a master master database of",
    "start": "1789370",
    "end": "1794860"
  },
  {
    "text": "tried is pessimistic locking doesn't quite work it doesn't meet our",
    "start": "1794860",
    "end": "1800950"
  },
  {
    "text": "requirements for latency as you add more regions you're gonna have to start locking in multiple regions and all",
    "start": "1800950",
    "end": "1808000"
  },
  {
    "text": "locks have to be successful otherwise you go back to many edge cases that too",
    "start": "1808000",
    "end": "1814120"
  },
  {
    "text": "much latency too many edge cases not worth the effort quorum based algorithms are interesting",
    "start": "1814120",
    "end": "1820080"
  },
  {
    "text": "because we can go to many regions in fact we should have a minimum of three",
    "start": "1820080",
    "end": "1825190"
  },
  {
    "text": "regions for a quorum based algorithm latency doesn't increase as much as",
    "start": "1825190",
    "end": "1831010"
  },
  {
    "text": "pessimistic locking on the right use case but we still end up with a",
    "start": "1831010",
    "end": "1837520"
  },
  {
    "text": "potential inconsistency in the data across regions all in all probably not",
    "start": "1837520",
    "end": "1843820"
  },
  {
    "text": "worth it read quorum is also an interesting one",
    "start": "1843820",
    "end": "1849630"
  },
  {
    "text": "but once again latency because we need to query at least three regions and",
    "start": "1849630",
    "end": "1856250"
  },
  {
    "text": "data not being replicated consistently remains an issue too complex for what we",
    "start": "1856250",
    "end": "1862370"
  },
  {
    "text": "gain from it the last one conflict-free replicated data type is an interesting",
    "start": "1862370",
    "end": "1868730"
  },
  {
    "text": "one you could have for example a vector clock on the order record and in your",
    "start": "1868730",
    "end": "1876820"
  },
  {
    "text": "dynamodb stream lambda function you could have some conflict resolution logic looking at this back to clock a",
    "start": "1876820",
    "end": "1884139"
  },
  {
    "text": "pretty straightforward to do when your data record as a counter of some sort",
    "start": "1884139",
    "end": "1889460"
  },
  {
    "text": "when you start dealing with more complex objects it can get pretty hairy and",
    "start": "1889460",
    "end": "1896860"
  },
  {
    "text": "ultimately if you think about customer experience you really don't want to have a failure and that conflict resolution",
    "start": "1896860",
    "end": "1903649"
  },
  {
    "text": "because I've placed an order with one card and I suddenly found twice the amount of food delivered and twice the",
    "start": "1903649",
    "end": "1911240"
  },
  {
    "text": "cost for my order there's not gonna be very good all in all I'd rather take the pain of losing one region and I gotta",
    "start": "1911240",
    "end": "1918440"
  },
  {
    "text": "start again and the client makes that seamless hopefully that all makes sense",
    "start": "1918440",
    "end": "1927919"
  },
  {
    "start": "1925000",
    "end": "1925000"
  },
  {
    "text": "so to summarize yes it is an active active API in the sense that we can write to any of the regions we're making",
    "start": "1927919",
    "end": "1937460"
  },
  {
    "text": "a compromise to say a master region is the only place where we can update an",
    "start": "1937460",
    "end": "1943519"
  },
  {
    "text": "order and if we lose that need to start again the stack remains the same we",
    "start": "1943519",
    "end": "1951649"
  },
  {
    "text": "deploy the exactly the exact same code to all regions all of our code has a",
    "start": "1951649",
    "end": "1957080"
  },
  {
    "text": "check in it that says oh I'm running in uswest - you send me in order for you for region X I can't handle that",
    "start": "1957080",
    "end": "1964539"
  },
  {
    "text": "and finally if you're interested we do replication using dynamodb streams as I",
    "start": "1964539",
    "end": "1971899"
  },
  {
    "text": "said it's not mandatory for this particular service the other important",
    "start": "1971899",
    "end": "1977870"
  },
  {
    "text": "point is that we made the client smart we all have big dreams of having dumb",
    "start": "1977870",
    "end": "1985460"
  },
  {
    "text": "clients and our API is just just distributes across multiple regions seam",
    "start": "1985460",
    "end": "1991090"
  },
  {
    "text": "when you're talking about complex applications that have a flow in a sort",
    "start": "1991090",
    "end": "1998720"
  },
  {
    "text": "of session a workflow like placing an order created updated and item this",
    "start": "1998720",
    "end": "2004210"
  },
  {
    "text": "becomes very complex your life is gonna be much easier if you make the client a little bit smarter and so this goes as",
    "start": "2004210",
    "end": "2012310"
  },
  {
    "text": "the order service and now I'm gonna let Magnus talk you through monitoring and logging for this application Thanks",
    "start": "2012310",
    "end": "2019300"
  },
  {
    "text": "so I want to touch on some of the operational stuff and one thing that's the panel said earlier was it's really",
    "start": "2019300",
    "end": "2025990"
  },
  {
    "text": "important that we automate as much as we possibly can right so a really important",
    "start": "2025990",
    "end": "2032920"
  },
  {
    "text": "aspect of that is monitoring so the many",
    "start": "2032920",
    "end": "2038380"
  },
  {
    "start": "2034000",
    "end": "2034000"
  },
  {
    "text": "different ways to use it but one way that we did for this is using Amazon Cloud watch to really need a lot of",
    "start": "2038380",
    "end": "2045070"
  },
  {
    "text": "these things together so starting by looking at what we're doing within a",
    "start": "2045070",
    "end": "2050440"
  },
  {
    "text": "region itself we'll leveraging all the metrics coming out of all the difference",
    "start": "2050440",
    "end": "2055740"
  },
  {
    "text": "AWS services that we have so we'll get really granular metrics on",
    "start": "2055740",
    "end": "2061148"
  },
  {
    "text": "how the application are performing within the particular region but we want",
    "start": "2061149",
    "end": "2068950"
  },
  {
    "text": "to add things on top of this so so we will use custom metrics and schedule",
    "start": "2068950",
    "end": "2075429"
  },
  {
    "text": "lambdas to now start querying for metrics across regions and this is",
    "start": "2075429",
    "end": "2080770"
  },
  {
    "text": "really important because when a region goes down we want to be able to have those metrics available so we can",
    "start": "2080770",
    "end": "2087310"
  },
  {
    "text": "actually start alarming on them and start taking actions when that happen",
    "start": "2087310",
    "end": "2093570"
  },
  {
    "text": "one thing to not forget about is as well as it's Amazon root we three have all the health checks and all the metrics",
    "start": "2094050",
    "end": "2101740"
  },
  {
    "text": "are coming out of that will be will be sent to the u.s. East one region and",
    "start": "2101740",
    "end": "2111900"
  },
  {
    "text": "using the cloud watch dashboard functionality it does allow to pull in",
    "start": "2111900",
    "end": "2117550"
  },
  {
    "text": "all the different metrics from all these different regions so you can have one place where you can see the metrics for",
    "start": "2117550",
    "end": "2122920"
  },
  {
    "text": "all the different reach there where you have things deployed I'm",
    "start": "2122920",
    "end": "2128530"
  },
  {
    "text": "gonna summarize that really go with the granular metrics within the region's themselves to see how things are working",
    "start": "2128530",
    "end": "2135430"
  },
  {
    "text": "they're called more coarse-grained across the different regions we have those metrics available",
    "start": "2135430",
    "end": "2142240"
  },
  {
    "text": "don't forget about Amazon drug route 53 global health checks and then that single pane of glass they can get from",
    "start": "2142240",
    "end": "2149860"
  },
  {
    "text": "from the dashboard we all start to think about the logs themselves that provides",
    "start": "2149860",
    "end": "2156220"
  },
  {
    "start": "2154000",
    "end": "2154000"
  },
  {
    "text": "a lot of valuable information so we really recommend to centralize the logs",
    "start": "2156220",
    "end": "2161530"
  },
  {
    "text": "so you have the ability to effectively query them and you can really see how your application is doing as a whole and",
    "start": "2161530",
    "end": "2168460"
  },
  {
    "text": "and you can use that with Lenny troubleshoot so here we're using Amazon",
    "start": "2168460",
    "end": "2177670"
  },
  {
    "text": "Cloud work log functionality to do the centralization aggregation of the logs within each region we can stream all of",
    "start": "2177670",
    "end": "2186910"
  },
  {
    "text": "those log items into a lambda function and it's those items coming to the",
    "start": "2186910",
    "end": "2191980"
  },
  {
    "text": "lambda function now we have the option to decide exactly where to put them and I'm showing two options here on the",
    "start": "2191980",
    "end": "2200080"
  },
  {
    "text": "screen so the first one we're putting all the items into one the Kinesis firehose stream it will batch all of",
    "start": "2200080",
    "end": "2209920"
  },
  {
    "text": "those items together and put them as objects into Amazon s3 that action",
    "start": "2209920",
    "end": "2216250"
  },
  {
    "text": "provides us a ability to directly then query them using as an Amazon Athena to",
    "start": "2216250",
    "end": "2221890"
  },
  {
    "text": "do ad hoc queries another option which is not you know completely sterilized",
    "start": "2221890",
    "end": "2228760"
  },
  {
    "text": "but still kind of popular within the surveillance community is using elk so",
    "start": "2228760",
    "end": "2234150"
  },
  {
    "text": "to do that option you can use Amazon and les exert service you can put all the",
    "start": "2234150",
    "end": "2240550"
  },
  {
    "text": "log items into that cluster and it comes with a Cabana as part of the service so",
    "start": "2240550",
    "end": "2246970"
  },
  {
    "text": "now you can use that to kind of monitor all your logs and then do queries on it",
    "start": "2246970",
    "end": "2253170"
  },
  {
    "text": "the last part I wanted to touch on was the the deployment because we really do",
    "start": "2254260",
    "end": "2260380"
  },
  {
    "text": "want to put this the same thing into every region so one key part is that we",
    "start": "2260380",
    "end": "2269020"
  },
  {
    "text": "really want to you know put this as infrastructures code we really want to define our whole application in in a way",
    "start": "2269020",
    "end": "2275950"
  },
  {
    "text": "that we repeatedly you know can push this into the different regions and the",
    "start": "2275950",
    "end": "2281109"
  },
  {
    "text": "the the thing we've averaged to do this is the service application model right",
    "start": "2281109",
    "end": "2286240"
  },
  {
    "text": "that really allows us to put all of these things as services code and then",
    "start": "2286240",
    "end": "2291940"
  },
  {
    "text": "we want to put this into some sort of C ICD tooling and there's a lot of different options out here here I'm",
    "start": "2291940",
    "end": "2298420"
  },
  {
    "start": "2293000",
    "end": "2293000"
  },
  {
    "text": "showing the the ones you can build with are in developer tools so if you really",
    "start": "2298420",
    "end": "2304990"
  },
  {
    "text": "doing that you can put all the all the code or the artifacts or you Sam Sam",
    "start": "2304990",
    "end": "2311109"
  },
  {
    "text": "templates into code commit then use code build to build your application in",
    "start": "2311109",
    "end": "2320890"
  },
  {
    "text": "combination with Sam and then also use cutable to test it because we need to do",
    "start": "2320890",
    "end": "2326349"
  },
  {
    "text": "all the unit tests or the integration testing and that part of that would be CloudFormation templates and then we can",
    "start": "2326349",
    "end": "2332950"
  },
  {
    "text": "use those along with all the artifacts or the pack of code packages to push",
    "start": "2332950",
    "end": "2339130"
  },
  {
    "text": "that into all the different regions and then finally orchestrate all of that with code pipeline I also wanted to",
    "start": "2339130",
    "end": "2348310"
  },
  {
    "start": "2348000",
    "end": "2348000"
  },
  {
    "text": "quickly kind of show some snippets of how those templates look like the thing",
    "start": "2348310",
    "end": "2353920"
  },
  {
    "text": "they see - left that's an example of a Sam template this one happens to show the Browse catalog",
    "start": "2353920",
    "end": "2361089"
  },
  {
    "text": "API definition highlighted in red the new feature that I talked about about",
    "start": "2361089",
    "end": "2367119"
  },
  {
    "text": "the regional endpoints that's how you would configure those and then we were using that in combination with a",
    "start": "2367119",
    "end": "2373359"
  },
  {
    "text": "CloudFormation template this one is configuring the route 53 records to do",
    "start": "2373359",
    "end": "2378880"
  },
  {
    "text": "that active active set up and I kind of showing them both to show that in",
    "start": "2378880",
    "end": "2385359"
  },
  {
    "text": "combination you can really use in combination of both you can will get the tool feature that you need to define",
    "start": "2385359",
    "end": "2390750"
  },
  {
    "text": "your service application right Stefano",
    "start": "2390750",
    "end": "2396660"
  },
  {
    "text": "thank you yes and summary now I am the last thing standing between yourselves",
    "start": "2396660",
    "end": "2401970"
  },
  {
    "text": "and beer o'clock how many of you have used Sam before or know what Sam is the",
    "start": "2401970",
    "end": "2408599"
  },
  {
    "text": "serverless application model call accident a lot of hands Sam is how we recommend you deploy",
    "start": "2408599",
    "end": "2416010"
  },
  {
    "text": "applications that make use of serverless services not just because we like Sam",
    "start": "2416010",
    "end": "2421559"
  },
  {
    "text": "but because what we want you to think about is that you're deploying a micro service by itself and a Sam template is",
    "start": "2421559",
    "end": "2429089"
  },
  {
    "text": "not just the domain name is not just one line the function it's your entire",
    "start": "2429089",
    "end": "2434819"
  },
  {
    "text": "service it's the API front-end it's all of its lambda functions and it's its dependencies as three buckets DynamoDB",
    "start": "2434819",
    "end": "2441240"
  },
  {
    "text": "tables we want you to declare all of those in one template for the service and that gets stamped out in each region",
    "start": "2441240",
    "end": "2448369"
  },
  {
    "text": "exactly as it is that's a great way to make sure that you have the one stack consistent across regions and across",
    "start": "2448369",
    "end": "2455279"
  },
  {
    "text": "environments better looks exactly the same as prod and we have lots of samples on creating CI CD pipelines for Sam to",
    "start": "2455279",
    "end": "2464519"
  },
  {
    "text": "summarize this presentation though I cannot stress this enough going multi-region is a big decision it's not",
    "start": "2464519",
    "end": "2471990"
  },
  {
    "start": "2465000",
    "end": "2465000"
  },
  {
    "text": "one the technical team takes by itself it's something that you need to check on",
    "start": "2471990",
    "end": "2477839"
  },
  {
    "text": "with the business side and it will have significant impact on how you build",
    "start": "2477839",
    "end": "2483329"
  },
  {
    "text": "applications and how you operate your applications suddenly you're operating",
    "start": "2483329",
    "end": "2488789"
  },
  {
    "text": "across time zones and no I'm sure there isn't one Operator here says yes I want to be the 24/7 on-call for Europe and",
    "start": "2488789",
    "end": "2497279"
  },
  {
    "text": "the US you have to start automating a lot of stuff keep that in mind",
    "start": "2497279",
    "end": "2505789"
  },
  {
    "text": "very often at the same time this can turn into a worse customer experience as",
    "start": "2505880",
    "end": "2512450"
  },
  {
    "text": "you try to build your replication eventual consistency of the data will",
    "start": "2512450",
    "end": "2517650"
  },
  {
    "text": "mean that customers may end up seeing and consistent records so make sure you",
    "start": "2517650",
    "end": "2524070"
  },
  {
    "text": "think through this stuff and like we did adult perhaps that home region trick",
    "start": "2524070",
    "end": "2529430"
  },
  {
    "text": "this way at least I'm sure that our customers are always seeing the same consistent data there's a lot you can do",
    "start": "2529430",
    "end": "2537510"
  },
  {
    "text": "there and there's a lot of architectural patterns so make sure you think through that decision and finally route 53",
    "start": "2537510",
    "end": "2546890"
  },
  {
    "text": "automate your load balancing of the regions with the DNS you want to set",
    "start": "2546890",
    "end": "2553530"
  },
  {
    "text": "your health checks as well as the latency based routing but make sure that",
    "start": "2553530",
    "end": "2560730"
  },
  {
    "text": "you hold you also have a way to address a region directly so that if everything",
    "start": "2560730",
    "end": "2568110"
  },
  {
    "text": "absolutely everything goes wrong you still have that one way in if it won't",
    "start": "2568110",
    "end": "2575130"
  },
  {
    "text": "make sense I'm just gonna close with the next steps we actually published a blog",
    "start": "2575130",
    "end": "2580650"
  },
  {
    "start": "2577000",
    "end": "2577000"
  },
  {
    "text": "post tutorial on setting up our food-for-thought application it's on the AWS compute blog I was going to say it's",
    "start": "2580650",
    "end": "2590010"
  },
  {
    "text": "gonna be the latest blog post there but with all the launches that reinvent it's probably a few pages down the hill so I",
    "start": "2590010",
    "end": "2596250"
  },
  {
    "text": "will definitely give you time to take a picture of this and take a look at the",
    "start": "2596250",
    "end": "2601830"
  },
  {
    "text": "documentation for the regional endpoints in API gateway because that's what",
    "start": "2601830",
    "end": "2607200"
  },
  {
    "text": "that's what gives you control of your DNS record that's what allows you to set up multi-region applications and with",
    "start": "2607200",
    "end": "2616680"
  },
  {
    "text": "that thank you very much for coming to our sessions we'll give you 15 minutes back thank you",
    "start": "2616680",
    "end": "2623869"
  },
  {
    "text": "thank you",
    "start": "2624359",
    "end": "2627568"
  }
]