[
  {
    "start": "0",
    "end": "20000"
  },
  {
    "text": "all right thank you all for coming I hope you had a great to keynote session",
    "start": "0",
    "end": "5490"
  },
  {
    "text": "my name is a trash reader and I'm here to talk about our visibility into service applications built using Fargate",
    "start": "5490",
    "end": "12330"
  },
  {
    "text": "I'm also joined with Carly Cindy from catalytic data science who's going to go",
    "start": "12330",
    "end": "17699"
  },
  {
    "text": "into the catholics use case in a bit okay here's the agenda of my talk I'm",
    "start": "17699",
    "end": "24090"
  },
  {
    "start": "20000",
    "end": "52000"
  },
  {
    "text": "gonna level set this conversation and talk about the sample app and we'll see how and why we need to use Fargate and",
    "start": "24090",
    "end": "31250"
  },
  {
    "text": "then we'll go into why visibility is important for your service applications",
    "start": "31250",
    "end": "36620"
  },
  {
    "text": "and then we'll dive into logging debugging monitoring and look at some",
    "start": "36620",
    "end": "41940"
  },
  {
    "text": "best practices and examples in each of those and then I'll hand it over to carly to talk about their journey of",
    "start": "41940",
    "end": "47940"
  },
  {
    "text": "building their bioinformatic workloads on Fargate okay so I'm gonna introduce",
    "start": "47940",
    "end": "54690"
  },
  {
    "start": "52000",
    "end": "62000"
  },
  {
    "text": "you to ask or keep applications to tic-tac-toe application and I'll use this as reference for the rest of the",
    "start": "54690",
    "end": "60570"
  },
  {
    "text": "talk okay so this is actually an HTTP interface",
    "start": "60570",
    "end": "66030"
  },
  {
    "start": "62000",
    "end": "117000"
  },
  {
    "text": "and it also has a Web API for you to create and manage game sessions and",
    "start": "66030",
    "end": "71850"
  },
  {
    "text": "users so as you can see to your right you first start a session and then you",
    "start": "71850",
    "end": "76860"
  },
  {
    "text": "start your game and then you play it you can share it with someone else and play it together it consists of two",
    "start": "76860",
    "end": "82140"
  },
  {
    "text": "components it has the backend component which is the business logic for your container and it stores all the state in",
    "start": "82140",
    "end": "89130"
  },
  {
    "text": "dynamodb and then you have the front-end component which is the angularjs component and it also has an engine X",
    "start": "89130",
    "end": "96720"
  },
  {
    "text": "proxy for serving all the static web pages enroute and forwarding all the API",
    "start": "96720",
    "end": "102509"
  },
  {
    "text": "paths requests to the backend component cool so we have those running locally",
    "start": "102509",
    "end": "107729"
  },
  {
    "text": "what's our next step I want to run this on the cloud and productionize it great so we're gonna use some something called",
    "start": "107729",
    "end": "114570"
  },
  {
    "text": "server this containers but why so about five years ago containers gained",
    "start": "114570",
    "end": "120630"
  },
  {
    "text": "popularity because of some of the benefits that it offers first all the container images are actually immutable",
    "start": "120630",
    "end": "127320"
  },
  {
    "text": "so whether you run it locally or you run it in the cloud it just behaves the same way that increases",
    "start": "127320",
    "end": "133860"
  },
  {
    "text": "flexibility of your application and then it also helps speed up build and release",
    "start": "133860",
    "end": "140130"
  },
  {
    "text": "cycles it makes your application stack or your fleet super flexible and",
    "start": "140130",
    "end": "146030"
  },
  {
    "text": "efficient great but now server less is catching up why because it takes away",
    "start": "146030",
    "end": "154080"
  },
  {
    "text": "the maintenance and operational burden of you to offer you to run your servers and actually manage them it increases",
    "start": "154080",
    "end": "161820"
  },
  {
    "text": "the speed for development and it offers scalability and elasticity and you end",
    "start": "161820",
    "end": "168450"
  },
  {
    "text": "up paying only what you use so I have to score keep application should I use containers or should I use server less",
    "start": "168450",
    "end": "174440"
  },
  {
    "text": "we have something better which is far gate which is a perfect in inter section",
    "start": "174440",
    "end": "182040"
  },
  {
    "start": "178000",
    "end": "228000"
  },
  {
    "text": "of your containerized application meeting your server lists world so far",
    "start": "182040",
    "end": "188280"
  },
  {
    "text": "gate is a compute engine for those of you don't know it actually enables you to run docker containers without having",
    "start": "188280",
    "end": "194040"
  },
  {
    "text": "to manage your fleet of instances so this helps you get the portability and",
    "start": "194040",
    "end": "200250"
  },
  {
    "text": "flexibility of the containers at the same time getting the zero administration and paper use model of",
    "start": "200250",
    "end": "206640"
  },
  {
    "text": "server less so today Fargate is available as a launch type for Amazon",
    "start": "206640",
    "end": "212280"
  },
  {
    "text": "SES which is a container orchestration service that enables you to run docker containers on a fleet of servers",
    "start": "212280",
    "end": "219959"
  },
  {
    "text": "it offers functionalities like auto scaling service discovery self-healing",
    "start": "219959",
    "end": "226080"
  },
  {
    "text": "and many more so traditionally with ECS you have to bring your own instance that has our ami",
    "start": "226080",
    "end": "234120"
  },
  {
    "start": "228000",
    "end": "254000"
  },
  {
    "text": "and it has darker daemon running it has the easiest agent running and you had to",
    "start": "234120",
    "end": "239549"
  },
  {
    "text": "manage the life cycle of all the software updates that happen on that however with Fargate you don't need to",
    "start": "239549",
    "end": "245459"
  },
  {
    "text": "provision anymore you leave the infrastructure burden to us and you only focus on building applications that",
    "start": "245459",
    "end": "251549"
  },
  {
    "text": "actually give business benefits to your customers so just to rehash forgets all",
    "start": "251549",
    "end": "257280"
  },
  {
    "text": "managed by AWS so you don't have to take care of instances it enables elasticity",
    "start": "257280",
    "end": "263400"
  },
  {
    "text": "so you can configure rules that sort of scale up based on metrics and scale down automatically when you",
    "start": "263400",
    "end": "269129"
  },
  {
    "text": "don't need it so you only pay for what you use and one biggest benefit oops is",
    "start": "269129",
    "end": "274759"
  },
  {
    "text": "that it's deeply integrated with all the AWS ecosystem which customers really like because they are familiar with some",
    "start": "274759",
    "end": "281039"
  },
  {
    "text": "of these services like PPC I am etc okay",
    "start": "281039",
    "end": "286379"
  },
  {
    "start": "285000",
    "end": "305000"
  },
  {
    "text": "so no brainer right now I'm gonna use my store keep application build on Fargate so let's get started I have my front end",
    "start": "286379",
    "end": "294210"
  },
  {
    "text": "and back end I containerize them move them on far gate I add a load balancer to it so that it can route all the",
    "start": "294210",
    "end": "300509"
  },
  {
    "text": "traffic from the Internet to the front end container okay so to complete my",
    "start": "300509",
    "end": "307110"
  },
  {
    "start": "305000",
    "end": "429000"
  },
  {
    "text": "setup I need to think about four core building blocks starts with compute so I need to think about how much CPU and",
    "start": "307110",
    "end": "313949"
  },
  {
    "text": "memory will my container use how is the volume going to be shared between the containers then I'm gonna think about",
    "start": "313949",
    "end": "319319"
  },
  {
    "text": "networking which is how does my application connect to the internet how would my application talk to other",
    "start": "319319",
    "end": "326189"
  },
  {
    "text": "services in my V PC security so how do I restrict my application to have access",
    "start": "326189",
    "end": "332849"
  },
  {
    "text": "to only a few api's or a few you know smaller cyber block so you can do that",
    "start": "332849",
    "end": "339330"
  },
  {
    "text": "without permission security groups lastly and above all is is my",
    "start": "339330",
    "end": "344550"
  },
  {
    "text": "application really drowning is it performing well so we'll dive deep into visibility and see some of the tools",
    "start": "344550",
    "end": "351180"
  },
  {
    "text": "that we have to answer some of these questions but before we do that I want to sort of use this for building blocks",
    "start": "351180",
    "end": "357270"
  },
  {
    "text": "and apply it on ask or keep application so I start with an ECS task definition",
    "start": "357270",
    "end": "362339"
  },
  {
    "text": "here I have two containers back in front-end my docker image is pushed to ECR then I start with compute I specify",
    "start": "362339",
    "end": "369930"
  },
  {
    "text": "the CPU and memory parameters on my tasks and my containers then I have",
    "start": "369930",
    "end": "375990"
  },
  {
    "text": "network mode and Fargate suppose AWS VPC network Lord and we actually",
    "start": "375990",
    "end": "381120"
  },
  {
    "text": "create a lastik network interface and attach it to your task so it can talk to the internet and for us to do that we",
    "start": "381120",
    "end": "387810"
  },
  {
    "text": "actually need task execution role for us to create resources in your account then",
    "start": "387810",
    "end": "394139"
  },
  {
    "text": "we have security which is as I mentioned you can restrict access to a few resources an API and you can do that",
    "start": "394139",
    "end": "399899"
  },
  {
    "text": "with tasks I'm rule and lastly we have la configuration so we'll go into the details of how to set",
    "start": "399899",
    "end": "406500"
  },
  {
    "text": "some of this up in a bit so once you have your task definition you just",
    "start": "406500",
    "end": "412560"
  },
  {
    "text": "register the task definition you create your cluster and you create a service and with this 3-step you have your",
    "start": "412560",
    "end": "418080"
  },
  {
    "text": "application running in the cloud okay but is it really running yeah we need to",
    "start": "418080",
    "end": "423570"
  },
  {
    "text": "have some visibility tools for us to know more about the health of the application so visibility like a site",
    "start": "423570",
    "end": "431880"
  },
  {
    "start": "429000",
    "end": "476000"
  },
  {
    "text": "visibility super critical for us to know if the state of the system and if things",
    "start": "431880",
    "end": "437280"
  },
  {
    "text": "are working having an operationally excellent application helps you provide",
    "start": "437280",
    "end": "444480"
  },
  {
    "text": "a good customer experience to your end-users at the same time you have a balanced workload for your development",
    "start": "444480",
    "end": "450570"
  },
  {
    "text": "team so it's like a win-win situation so today we're going to learn some of the best practices for visibility so that",
    "start": "450570",
    "end": "457650"
  },
  {
    "text": "you have some well builds running systems and all the tools that are available for you to debug so there are",
    "start": "457650",
    "end": "465960"
  },
  {
    "text": "three core visibility aspects it starts with logging then monitoring and then we",
    "start": "465960",
    "end": "472020"
  },
  {
    "text": "have debugging so let's start with logging okay so it is important for you",
    "start": "472020",
    "end": "479490"
  },
  {
    "start": "476000",
    "end": "533000"
  },
  {
    "text": "to know if your containers are failing how are they feeling and why are they feeling so logging helps you provide",
    "start": "479490",
    "end": "485850"
  },
  {
    "text": "additional context to your application so you can do that by adding more state details or any transitions that are",
    "start": "485850",
    "end": "492420"
  },
  {
    "text": "happening and there's a fine line between providing enough context and",
    "start": "492420",
    "end": "498000"
  },
  {
    "text": "providing a lot of context so you don't want it to spam a lot making it really",
    "start": "498000",
    "end": "503160"
  },
  {
    "text": "hard for you to find the right information so my recommendation to you is to have appropriate logging levels",
    "start": "503160",
    "end": "509370"
  },
  {
    "text": "when you can so use info for giving the right amount of information use debug if",
    "start": "509370",
    "end": "514950"
  },
  {
    "text": "you really want to go step by step to like sort of help with better troubleshooting on an edge case in each",
    "start": "514950",
    "end": "521219"
  },
  {
    "text": "situation or if you have errors classify your errors which ones are fatals which one are errors which one are warning so",
    "start": "521220",
    "end": "527400"
  },
  {
    "text": "that you can actually create alarms of those and have different thresholds for each category okay but",
    "start": "527400",
    "end": "534810"
  },
  {
    "start": "533000",
    "end": "627000"
  },
  {
    "text": "we are using a surveillance application are inspecting logs in a service application follows a different model",
    "start": "534810",
    "end": "541319"
  },
  {
    "text": "like you have no longer access to a production box where you can SSH in and grep for log files so what you need to",
    "start": "541319",
    "end": "547889"
  },
  {
    "text": "do is actually push all these logs into external logging driver and with fur",
    "start": "547889",
    "end": "552959"
  },
  {
    "text": "gate we have supports with a Amazon CloudWatch log driver so you can push",
    "start": "552959",
    "end": "558509"
  },
  {
    "text": "your logs out to cloud watch and have a look at it in cloud watch in addition to",
    "start": "558509",
    "end": "564389"
  },
  {
    "text": "application logs you can also trace any API request that your application makes",
    "start": "564389",
    "end": "569430"
  },
  {
    "text": "or any other user makes in your account and you can do that using cloud trail",
    "start": "569430",
    "end": "575040"
  },
  {
    "text": "and super useful for auditing purposes and then when a request does go through",
    "start": "575040",
    "end": "580920"
  },
  {
    "text": "multiple steps you kind of want to trace that request end to end and you can do that distribute your tracing using x-ray",
    "start": "580920",
    "end": "588230"
  },
  {
    "text": "ok so let's go through each of these and see how we can set it up slams on cloud",
    "start": "588230",
    "end": "594689"
  },
  {
    "text": "watch like I mentioned we have AWS logs is the log driver that you would use to actually set it up and then our first",
    "start": "594689",
    "end": "602610"
  },
  {
    "text": "step is to create a log group in cloud watch once you do that you configure",
    "start": "602610",
    "end": "608220"
  },
  {
    "text": "your log driver in your task definition and you're ready to go oh one more thing",
    "start": "608220",
    "end": "614189"
  },
  {
    "text": "remember to add permissions where your task execution rules so that Fargate remember has to push those logs into",
    "start": "614189",
    "end": "621420"
  },
  {
    "text": "your cloud watch console so we need permissions to do that so once all of this is done your vlogs are getting",
    "start": "621420",
    "end": "629579"
  },
  {
    "start": "627000",
    "end": "645000"
  },
  {
    "text": "published and we natively have support to tell your logs inside the ECS console and",
    "start": "629579",
    "end": "635009"
  },
  {
    "text": "that's a screenshot of that where you just go to a task look at the logs tab",
    "start": "635009",
    "end": "640439"
  },
  {
    "text": "and then pick your container and you just see the tale live logs cool so then",
    "start": "640439",
    "end": "647490"
  },
  {
    "start": "645000",
    "end": "692000"
  },
  {
    "text": "we have AWS cloud rail and what that does is any API is that easy that you",
    "start": "647490",
    "end": "654120"
  },
  {
    "text": "use with ECS automatically gets sent to AWS cloud trail so this is super helpful for auditing purposes in this example as",
    "start": "654120",
    "end": "661379"
  },
  {
    "text": "you see I actually made a describe services request and then you see all the metadata around it around the",
    "start": "661379",
    "end": "667529"
  },
  {
    "text": "request payload so you have my header you have the source IP you have the I am user I use",
    "start": "667529",
    "end": "672990"
  },
  {
    "text": "so you can actually troubleshoot to know if this was accidentally made is it a",
    "start": "672990",
    "end": "678029"
  },
  {
    "text": "suspicious activity and you can use this later for troubleshooting I remember you",
    "start": "678029",
    "end": "683610"
  },
  {
    "text": "can also create alarms off of these so you if you're not expecting an API call to be made you will be able to like",
    "start": "683610",
    "end": "689399"
  },
  {
    "text": "trigger alarms and get notified this is something I'm super excited about",
    "start": "689399",
    "end": "695399"
  },
  {
    "start": "692000",
    "end": "764000"
  },
  {
    "text": "distributed tracing because extra integration with ECS was announced recently as recently as last week so",
    "start": "695399",
    "end": "701490"
  },
  {
    "text": "what this enables you to do is actually trace your request all the way down so how do you do that you first create a",
    "start": "701490",
    "end": "707880"
  },
  {
    "text": "docker image with the extra agent and once you do that you add manage policy",
    "start": "707880",
    "end": "713880"
  },
  {
    "text": "to choose tasks I am role so that all the daemon can actually publish the",
    "start": "713880",
    "end": "718920"
  },
  {
    "text": "trace data to x-ray and then you update your task definition and run this demon",
    "start": "718920",
    "end": "724920"
  },
  {
    "text": "as a sidecar container update your task definition call update service and there",
    "start": "724920",
    "end": "730080"
  },
  {
    "text": "you can see visualization on how an application like score keep and how a",
    "start": "730080",
    "end": "736260"
  },
  {
    "text": "request goes through different API calls that we made with dynamodb for example and not just tracing it you actually get",
    "start": "736260",
    "end": "743610"
  },
  {
    "text": "instrumentation as a side-effect now you can see how much time is actually spent in each step of these calls so you can",
    "start": "743610",
    "end": "750240"
  },
  {
    "text": "go around optimizing some of these and reducing the latency overall so this is",
    "start": "750240",
    "end": "756060"
  },
  {
    "text": "super useful okay so we've seen some logging mechanisms our next step is to move on",
    "start": "756060",
    "end": "762450"
  },
  {
    "text": "to monitoring so monitoring is really important to understand the health of",
    "start": "762450",
    "end": "768029"
  },
  {
    "start": "764000",
    "end": "815000"
  },
  {
    "text": "your system now we like to preemptively measure everything emit metrics for everything",
    "start": "768029",
    "end": "774480"
  },
  {
    "text": "so that we have it when we actually need it and I know operationally press excellent perspective metrics allow you",
    "start": "774480",
    "end": "782430"
  },
  {
    "text": "the ability to actually look at what your service is doing in a near real-time fashion and it also helps you",
    "start": "782430",
    "end": "790079"
  },
  {
    "text": "sort of evaluate changes that you're making through deployments is my performance getting worse is it getting",
    "start": "790079",
    "end": "795089"
  },
  {
    "text": "better so it enables you to do roll backs quickly and then it also helps you",
    "start": "795089",
    "end": "800310"
  },
  {
    "text": "sort of 4k asked future growth looking at your current projections and when you do",
    "start": "800310",
    "end": "805440"
  },
  {
    "text": "things like that you can actually preempt any scaling issues and metrics in general is just helpful for you to",
    "start": "805440",
    "end": "811440"
  },
  {
    "text": "troubleshoot and like know when a problem does exist okay so to get the",
    "start": "811440",
    "end": "817740"
  },
  {
    "start": "815000",
    "end": "918000"
  },
  {
    "text": "ball rolling with your application when you have an application some of the key metrics that you need to think about are",
    "start": "817740",
    "end": "822959"
  },
  {
    "text": "like Layton sees your server exceptions your client exceptions CPU and memory to",
    "start": "822959",
    "end": "828690"
  },
  {
    "text": "identify load then you if you have a load balancer which we do in case of score keep then what you do is look at",
    "start": "828690",
    "end": "835500"
  },
  {
    "text": "the request count and the connection count also an indication of how my application is being used do I need to",
    "start": "835500",
    "end": "841920"
  },
  {
    "text": "scale it up do or not and then if you have a dependency it's super important",
    "start": "841920",
    "end": "847110"
  },
  {
    "text": "for you to have metrics and profiling just around that dependency for example if you're using dynamodb in our",
    "start": "847110",
    "end": "853200"
  },
  {
    "text": "application I want to know the latency and throughput of just that particular API call so that if there was an issue I",
    "start": "853200",
    "end": "860430"
  },
  {
    "text": "can just like pinpoint to one small dependency okay so by default",
    "start": "860430",
    "end": "866670"
  },
  {
    "text": "ECS provides CPU utilization and memory utilization out of the box and we have",
    "start": "866670",
    "end": "872399"
  },
  {
    "text": "seen trends of customers consuming these metrics and actually configuring auto",
    "start": "872399",
    "end": "878310"
  },
  {
    "text": "scaling rules so when your CPU utilization spikes up you know your one container is actually doing more than it",
    "start": "878310",
    "end": "884070"
  },
  {
    "text": "actually can so you use that metric to scale up your service and when you think",
    "start": "884070",
    "end": "889860"
  },
  {
    "text": "the loads gone down the traffic's like smaller now then you would scale it down automatically and remember this is all",
    "start": "889860",
    "end": "896220"
  },
  {
    "text": "server less so it happens instantaneously you don't have to wait for your servers to come up and then your containers to get placed in your",
    "start": "896220",
    "end": "902399"
  },
  {
    "text": "servers to go down it it's really elastic and it can cater to your needs immediately that way you only pay for",
    "start": "902399",
    "end": "909209"
  },
  {
    "text": "what you use and in addition to these metrics you can always image your own custom metrics and create cloud watch",
    "start": "909209",
    "end": "915779"
  },
  {
    "text": "metric filter out of those oh this is a screenshot of the CPU and memory",
    "start": "915779",
    "end": "921360"
  },
  {
    "start": "918000",
    "end": "930000"
  },
  {
    "text": "utilization that ECS automatically provides and you can see you like the minimum average and maximum to sort of",
    "start": "921360",
    "end": "926760"
  },
  {
    "text": "get a range of how each container is doing ok so we have our metrics flowing",
    "start": "926760",
    "end": "932940"
  },
  {
    "start": "930000",
    "end": "953000"
  },
  {
    "text": "our next step is to actually create a dash for this so we want our single view of",
    "start": "932940",
    "end": "939300"
  },
  {
    "text": "all these different metrics that we can correlate them in one single page so that it's just easier when you're going",
    "start": "939300",
    "end": "945960"
  },
  {
    "text": "through them in operational meetings for you to identify some failures or some improvements so cloud watch by default",
    "start": "945960",
    "end": "955410"
  },
  {
    "start": "953000",
    "end": "1034000"
  },
  {
    "text": "offers you some default dashboards for all the services that you use so this is",
    "start": "955410",
    "end": "960510"
  },
  {
    "text": "an example of my score keep alb that I use and you can see the request count going up connection con going up so this",
    "start": "960510",
    "end": "967350"
  },
  {
    "text": "is useful for me to like view multiple things and correlate and like just draw",
    "start": "967350",
    "end": "972870"
  },
  {
    "text": "lines and easy for me to identify things but in addition to default dashboard you",
    "start": "972870",
    "end": "979020"
  },
  {
    "text": "can always build your own custom dashboards now you may ask what do I put in my dashboard I think it just depends",
    "start": "979020",
    "end": "985290"
  },
  {
    "text": "on you you decide what goes in it and what doesn't go in it and I think a dashboard is generally catered towards",
    "start": "985290",
    "end": "991440"
  },
  {
    "text": "the audience so for example you are a subject matter expert you build score keep you may use your dashboard as a",
    "start": "991440",
    "end": "998070"
  },
  {
    "text": "runbook so you will probably want to see the last five hours and see how if",
    "start": "998070",
    "end": "1004430"
  },
  {
    "text": "latency spike happened if it correlates to a different dependencies or is it some other problem that's isolated to",
    "start": "1004430",
    "end": "1010430"
  },
  {
    "text": "just one container so you will be able to see more and you probably want to view that's much more shorter at the",
    "start": "1010430",
    "end": "1018050"
  },
  {
    "text": "same time if you were someone who's like looking at trends and forecasting capacity or something else then you need",
    "start": "1018050",
    "end": "1023570"
  },
  {
    "text": "to sort of view your graphs over two weeks and you're looking at request metrics or fulfillment metrics so you",
    "start": "1023570",
    "end": "1030770"
  },
  {
    "text": "need a different dashboard for that we are also partnered with our third-party",
    "start": "1030770",
    "end": "1036650"
  },
  {
    "start": "1034000",
    "end": "1055000"
  },
  {
    "text": "vendors like data dog where if you had a sidecar container with data agent",
    "start": "1036650",
    "end": "1041959"
  },
  {
    "text": "running then it actually like profiles more and emits more metrics and it helps you visualize something more granular as",
    "start": "1041959",
    "end": "1049160"
  },
  {
    "text": "you see over here so it's really helpful and based on your application you can always integrate that data dog okay so",
    "start": "1049160",
    "end": "1056810"
  },
  {
    "start": "1055000",
    "end": "1114000"
  },
  {
    "text": "now we have our pretty dashboards to look at but you still don't want a human to go through each of these dashboards",
    "start": "1056810",
    "end": "1062930"
  },
  {
    "text": "to detect problems what do you do you actually create alarms to trigger if your SLA is",
    "start": "1062930",
    "end": "1069500"
  },
  {
    "text": "reached after a certain threshold so some of the common alarms that or basic",
    "start": "1069500",
    "end": "1075380"
  },
  {
    "text": "alarms that you need to create should answer these questions like can my customer actually access my service or",
    "start": "1075380",
    "end": "1082040"
  },
  {
    "text": "my customer is getting the right response or my customer is getting the response fast enough so these are some",
    "start": "1082040",
    "end": "1089870"
  },
  {
    "text": "common alarms that you create so that you can identify the problem before a customer actually identifies and reaches",
    "start": "1089870",
    "end": "1095750"
  },
  {
    "text": "out to you and you can create these alarms on cloud watch console and when",
    "start": "1095750",
    "end": "1101210"
  },
  {
    "text": "you do use cloud watch you can also take some automated actions out of these alarms so you can either notify your on",
    "start": "1101210",
    "end": "1107270"
  },
  {
    "text": "call and page page them or you can take automated actions like auto-scaling as I mentioned earlier some other monitoring",
    "start": "1107270",
    "end": "1116570"
  },
  {
    "start": "1114000",
    "end": "1187000"
  },
  {
    "text": "tools that are helpful are to notify state changes so tasks and ECS goes",
    "start": "1116570",
    "end": "1122720"
  },
  {
    "text": "through a lifecycle like it goes from pending to run into stop so ECS by",
    "start": "1122720",
    "end": "1128330"
  },
  {
    "text": "default actually Emmet's all these state changes to cloud watch events so it looks something like this this is an",
    "start": "1128330",
    "end": "1134900"
  },
  {
    "text": "example of when my task actually stopped and you can see the stop reason it was because there was a scaled-down activity",
    "start": "1134900",
    "end": "1142070"
  },
  {
    "text": "that happened this is really useful for me to know when state change has happened so I don't have to constantly",
    "start": "1142070",
    "end": "1147320"
  },
  {
    "text": "pull an API to figure it out now when what do I do with this information right",
    "start": "1147320",
    "end": "1152630"
  },
  {
    "text": "so with this cloud watch event you can create a rule that does like multiple action for one I can put it in cloud",
    "start": "1152630",
    "end": "1159500"
  },
  {
    "text": "watch logs or an s3 so that it's there for auditing purposes or for troubleshooting later or some of the",
    "start": "1159500",
    "end": "1166460"
  },
  {
    "text": "things that you can do is actually if you are running unmanaged tasks and if you think oh my tasks actually died then",
    "start": "1166460",
    "end": "1173600"
  },
  {
    "text": "I need a replacement task for it so you can just use lambda to consume this event describe your task and get all",
    "start": "1173600",
    "end": "1180830"
  },
  {
    "text": "that information and run a new task so there's so many automated actions that you can actually take for this super",
    "start": "1180830",
    "end": "1186830"
  },
  {
    "text": "useful and then you have container health checks that we launched earlier in the year where easier with ECS you",
    "start": "1186830",
    "end": "1194090"
  },
  {
    "start": "1187000",
    "end": "1210000"
  },
  {
    "text": "can configure health checks in your task definition so you can tell us the command to run and with constant paying",
    "start": "1194090",
    "end": "1200960"
  },
  {
    "text": "checks and if you're deep ping checks feeling then ECS service scheduler will actually replace this task unhealthy",
    "start": "1200960",
    "end": "1208190"
  },
  {
    "text": "task for you okay so we have all these monitoring tools that are telling us",
    "start": "1208190",
    "end": "1214700"
  },
  {
    "start": "1210000",
    "end": "1228000"
  },
  {
    "text": "that something is going wrong so when an event does occur we need to know how to",
    "start": "1214700",
    "end": "1220549"
  },
  {
    "text": "diagnose it how do we actually root cause it and correct it so that we",
    "start": "1220549",
    "end": "1226070"
  },
  {
    "text": "prevent it from happening again so our debugging tools start with our",
    "start": "1226070",
    "end": "1231380"
  },
  {
    "start": "1228000",
    "end": "1270000"
  },
  {
    "text": "API is and console so if a task stops you need to look at why it stopped and",
    "start": "1231380",
    "end": "1237770"
  },
  {
    "text": "our API is provide information for you like a stopped reason on task or a container level exit codes so that you",
    "start": "1237770",
    "end": "1244700"
  },
  {
    "text": "know which is anticipated which is not like I mentioned the state changes a few",
    "start": "1244700",
    "end": "1250370"
  },
  {
    "text": "slides ago that's something that you can always look at to know why a task stopped but if a task never started you",
    "start": "1250370",
    "end": "1257809"
  },
  {
    "text": "can also look at service events in describe service payload or in the",
    "start": "1257809",
    "end": "1262880"
  },
  {
    "text": "console to know why the my toss didn't start let's look at a few examples",
    "start": "1262880",
    "end": "1270220"
  },
  {
    "start": "1270000",
    "end": "1295000"
  },
  {
    "text": "okay so debugging tasks limit exceeded for this if you're unfamiliar Fargate",
    "start": "1270220",
    "end": "1276740"
  },
  {
    "text": "has a default limit of about 50 concurrent tasks in a region per account",
    "start": "1276740",
    "end": "1282159"
  },
  {
    "text": "so if you ever run into this your adder will look something like this where you",
    "start": "1282159",
    "end": "1287750"
  },
  {
    "text": "see we've reached a limit on the number of tasks you can run concurrently what do you need to do you need to request a",
    "start": "1287750",
    "end": "1294409"
  },
  {
    "text": "limit increase but a couple of tips for you is when you do run into this it's",
    "start": "1294409",
    "end": "1300440"
  },
  {
    "start": "1295000",
    "end": "1349000"
  },
  {
    "text": "probably too late in your application you want it to be scalable immediately",
    "start": "1300440",
    "end": "1305570"
  },
  {
    "text": "so if you are looking at forecasting and like thinking of a big use case that's",
    "start": "1305570",
    "end": "1310580"
  },
  {
    "text": "coming up I suggest you reach out to us earlier so we get the lead time to actually make the request happen the second thing is",
    "start": "1310580",
    "end": "1318409"
  },
  {
    "text": "when you're requesting for fergie task limit increases think about your application as a whole think about all",
    "start": "1318409",
    "end": "1324440"
  },
  {
    "text": "the other pieces where you need to increase your limits so if you're using your bees or al bees I should say then",
    "start": "1324440",
    "end": "1330649"
  },
  {
    "text": "you need to go increase your target group limits if you're using public IPS then let us know about that if you're",
    "start": "1330649",
    "end": "1336380"
  },
  {
    "text": "using your repiy see and subnets make sure your address space allows for enough IP",
    "start": "1336380",
    "end": "1342350"
  },
  {
    "text": "addresses for these tasks to take up so those are some common errors that we see okay let's look at another one debugging",
    "start": "1342350",
    "end": "1350570"
  },
  {
    "start": "1349000",
    "end": "1416000"
  },
  {
    "text": "container pull error maybe some of you have already encountered this so here's",
    "start": "1350570",
    "end": "1356360"
  },
  {
    "text": "my situation I have a service my desired count is 55 but my running count just",
    "start": "1356360",
    "end": "1361940"
  },
  {
    "text": "days are 26 something seems to have gone wrong here okay so I look at my service I look at my top",
    "start": "1361940",
    "end": "1369440"
  },
  {
    "text": "stop tasks and there there there are some tasks tasks that are stopped because it fails to start okay so let's",
    "start": "1369440",
    "end": "1377120"
  },
  {
    "text": "look at one such instance of the task and then you see the container reason and it says it couldn't pull the",
    "start": "1377120",
    "end": "1383629"
  },
  {
    "text": "container then I look at the details of the error and it says that oh there was",
    "start": "1383629",
    "end": "1388820"
  },
  {
    "text": "a time up that happened that instantly makes me think that it's actually a networking error so I take my subnet ID",
    "start": "1388820",
    "end": "1395629"
  },
  {
    "text": "I go to the route table and what do I see I don't have a route to the internet",
    "start": "1395629",
    "end": "1401629"
  },
  {
    "text": "so no wonder my task couldn't pull the image so I add a route to the nat",
    "start": "1401629",
    "end": "1408529"
  },
  {
    "text": "gateway that goes to the Internet gateway and my service was able to start",
    "start": "1408529",
    "end": "1414620"
  },
  {
    "text": "new tasks so we have more situations why your container pole might not succeed",
    "start": "1414620",
    "end": "1420649"
  },
  {
    "start": "1416000",
    "end": "1438000"
  },
  {
    "text": "they could be because of permission issues or you might be using a custom DNS server with some stale records so we",
    "start": "1420649",
    "end": "1427940"
  },
  {
    "text": "have enumerated some common errors that you can always look into our troubleshooting guide for reference and",
    "start": "1427940",
    "end": "1434659"
  },
  {
    "text": "solutions and how to solve them okay in addition to our api's we also",
    "start": "1434659",
    "end": "1441649"
  },
  {
    "start": "1438000",
    "end": "1465000"
  },
  {
    "text": "published our own application logs so if something does go wrong you have a way for you to go to the cloud watch console",
    "start": "1441649",
    "end": "1448190"
  },
  {
    "text": "and look at it in depth you also have tracing mechanism mechanisms that we showed so if you had",
    "start": "1448190",
    "end": "1454639"
  },
  {
    "text": "a request go to x-ray and look at all these paths that your request hit and",
    "start": "1454639",
    "end": "1460159"
  },
  {
    "text": "you can also use cloud trail to know what happened to a task but if you are",
    "start": "1460159",
    "end": "1467179"
  },
  {
    "start": "1465000",
    "end": "1477000"
  },
  {
    "text": "someone who wants something more sophisticated a more lower level like darker level",
    "start": "1467179",
    "end": "1472370"
  },
  {
    "text": "constructs you can use a CSS feature called task metadata API what that does",
    "start": "1472370",
    "end": "1478130"
  },
  {
    "start": "1477000",
    "end": "1504000"
  },
  {
    "text": "is you can actually query for more information by hitting an endpoint that",
    "start": "1478130",
    "end": "1484010"
  },
  {
    "text": "we expose from within the task itself and that provides you more stats about the task it gives you the environment",
    "start": "1484010",
    "end": "1491090"
  },
  {
    "text": "variables that were resolved for it gives you darker labels and this is this information is something our partners",
    "start": "1491090",
    "end": "1497750"
  },
  {
    "text": "like data at all actually used to publish those metrics and the dashboard that we saw a little bit earlier so when",
    "start": "1497750",
    "end": "1504950"
  },
  {
    "start": "1504000",
    "end": "1522000"
  },
  {
    "text": "you do hit that endpoint you will get a metadata response that looks like this where you have to talk or ID you have",
    "start": "1504950",
    "end": "1512870"
  },
  {
    "text": "like more labels you have more granular statuses that are out there so you can",
    "start": "1512870",
    "end": "1519500"
  },
  {
    "text": "use this for you to troubleshoot more okay so let's conclude some of our",
    "start": "1519500",
    "end": "1524840"
  },
  {
    "start": "1522000",
    "end": "1555000"
  },
  {
    "text": "takeaways here are the monitoring alarming logging are super critical for",
    "start": "1524840",
    "end": "1530000"
  },
  {
    "text": "you to measure the health of the system and Fargate is actually a container runtime that enables you to run",
    "start": "1530000",
    "end": "1535640"
  },
  {
    "text": "something server lastly and when we do that we lose control or access to our",
    "start": "1535640",
    "end": "1541070"
  },
  {
    "text": "hosts we still have so many tools within the AWS ecosystem that actually helps us",
    "start": "1541070",
    "end": "1546370"
  },
  {
    "text": "get greater visibility into the containers itself so with that I'd like",
    "start": "1546370",
    "end": "1551660"
  },
  {
    "text": "to hand it over to Carly to talk about catalytics use case",
    "start": "1551660",
    "end": "1556690"
  },
  {
    "start": "1555000",
    "end": "1596000"
  },
  {
    "text": "hello can you hear me alright um I'm Carly Cindy I'm a software developer at",
    "start": "1562710",
    "end": "1569830"
  },
  {
    "text": "catalytic data science also trained as a molecular biologist spent about ten",
    "start": "1569830",
    "end": "1575260"
  },
  {
    "text": "years in the lab from vector construction teams to epigenetics and",
    "start": "1575260",
    "end": "1580410"
  },
  {
    "text": "essentially just collecting and analyzing lots and lots of DNA and RNA for the past several years I've been",
    "start": "1580410",
    "end": "1587740"
  },
  {
    "text": "writing code to make the workflows in these labs a lot more accessible and easier for the researchers who are doing",
    "start": "1587740",
    "end": "1594220"
  },
  {
    "text": "them and this is exactly what we're doing as well at catalytic we make",
    "start": "1594220",
    "end": "1600310"
  },
  {
    "start": "1596000",
    "end": "1657000"
  },
  {
    "text": "software for life science companies and our goal is to make it easier for the researchers at this companies to",
    "start": "1600310",
    "end": "1607080"
  },
  {
    "text": "discover and improve upon therapeutics as well as make advances in other areas",
    "start": "1607080",
    "end": "1612460"
  },
  {
    "text": "such as crop science and agriculture in order to make these advances the",
    "start": "1612460",
    "end": "1617950"
  },
  {
    "text": "researchers need access to a lot of different resources such as scientific literature patents regulatory documents",
    "start": "1617950",
    "end": "1626110"
  },
  {
    "text": "data lots and lots of data they need they generate a lot of in-house data as",
    "start": "1626110",
    "end": "1631360"
  },
  {
    "text": "well as access open access published data and they need tools to analyze this",
    "start": "1631360",
    "end": "1637540"
  },
  {
    "text": "data as well as a way to collaborate with their colleagues on the findings so",
    "start": "1637540",
    "end": "1642850"
  },
  {
    "text": "generally all of these resources are spread out siloed into different",
    "start": "1642850",
    "end": "1647950"
  },
  {
    "text": "software's and they're tough to use at scale so catalytic we've brought them all together in one Rd cloud platform",
    "start": "1647950",
    "end": "1654910"
  },
  {
    "text": "I'm behind one secure web application today I'm going to talk mostly about the",
    "start": "1654910",
    "end": "1659980"
  },
  {
    "text": "data analysis tools that we have they're all docker eyes and all running on",
    "start": "1659980",
    "end": "1666430"
  },
  {
    "text": "demand thanks to Fargate one of the one of analytics I'm going to really dig",
    "start": "1666430",
    "end": "1673000"
  },
  {
    "text": "into here is called magpie and that is short for a multiplexed automated gene",
    "start": "1673000",
    "end": "1678550"
  },
  {
    "text": "editing pipeline I'm going to talk about our implementation of magpie with",
    "start": "1678550",
    "end": "1684220"
  },
  {
    "text": "Fargate from prototype to production also going to give a little bit of",
    "start": "1684220",
    "end": "1689710"
  },
  {
    "start": "1687000",
    "end": "1734000"
  },
  {
    "text": "background on what magpie is doing it's analyzing data that the researchers",
    "start": "1689710",
    "end": "1696040"
  },
  {
    "text": "are generating from performing gene editing experiments so gene editing it's",
    "start": "1696040",
    "end": "1701920"
  },
  {
    "text": "been around for many many years something like 40 years but it's not until recently the past few years that",
    "start": "1701920",
    "end": "1707320"
  },
  {
    "text": "it's become really more site-specific so a little bit more exciting who has heard",
    "start": "1707320",
    "end": "1713230"
  },
  {
    "text": "of CRISPR raise your hand yeah so CRISPR is one of these gene editing systems",
    "start": "1713230",
    "end": "1719650"
  },
  {
    "text": "that site-specific and this is so exciting because most disease is caused",
    "start": "1719650",
    "end": "1725559"
  },
  {
    "text": "by mutations in our genes and most therapeutics only address the symptoms",
    "start": "1725559",
    "end": "1731500"
  },
  {
    "text": "and not this underlying genetic cause so a gene it's just a portion of the DNA it",
    "start": "1731500",
    "end": "1738160"
  },
  {
    "start": "1734000",
    "end": "1764000"
  },
  {
    "text": "can be thought of as a string of varying lengths made up of four characters a T C",
    "start": "1738160",
    "end": "1743740"
  },
  {
    "text": "and G if one or more of these characters gets removed or added in inserted in or",
    "start": "1743740",
    "end": "1750040"
  },
  {
    "text": "swapped out that is a mutation and that can lead to disease or possibly an",
    "start": "1750040",
    "end": "1756040"
  },
  {
    "text": "advantageous trait for that organism here I'm showing a portion of the gene",
    "start": "1756040",
    "end": "1761230"
  },
  {
    "text": "that codes for hemoglobin and you can see in this next string that that a is",
    "start": "1761230",
    "end": "1767980"
  },
  {
    "text": "switched to a T so that's an example of a mutation and this exact nucleotide",
    "start": "1767980",
    "end": "1774370"
  },
  {
    "text": "this exact point mutation this one character changing from an a to a tee if that happens in both alleles that causes",
    "start": "1774370",
    "end": "1781420"
  },
  {
    "text": "sickle cell anemia so wouldn't it be great if we could go in there and change that T back to an A and that's exactly",
    "start": "1781420",
    "end": "1789160"
  },
  {
    "text": "what these gene editing systems are capable of doing so this is what this is",
    "start": "1789160",
    "end": "1796420"
  },
  {
    "text": "just one example of one of the experiments that our researchers are those researchers that use our software",
    "start": "1796420",
    "end": "1801880"
  },
  {
    "text": "do so what they they perform these experiments and then they will generally",
    "start": "1801880",
    "end": "1807550"
  },
  {
    "start": "1805000",
    "end": "1868000"
  },
  {
    "text": "have a result of the repaired ideal result that they're trying to get and then the non repaired or maybe some",
    "start": "1807550",
    "end": "1814900"
  },
  {
    "text": "other off-site cutting or inserting so what they want to do is optimize that",
    "start": "1814900",
    "end": "1822250"
  },
  {
    "text": "here'd results so they can make slight modifications to the gene editing system",
    "start": "1822250",
    "end": "1827710"
  },
  {
    "text": "to the other variables and then when they perform this in cells they have to",
    "start": "1827710",
    "end": "1833200"
  },
  {
    "text": "collect the DNA and then send that off to an NGS lab so NGS that stands for",
    "start": "1833200",
    "end": "1840540"
  },
  {
    "text": "next generation sequencing so they'll send off the these this DNA",
    "start": "1840540",
    "end": "1847360"
  },
  {
    "text": "the lab will sequence that DNA for them and send it back to them in the form of",
    "start": "1847360",
    "end": "1853690"
  },
  {
    "text": "flat files that contain hundreds of thousands to millions of strings so now",
    "start": "1853690",
    "end": "1860440"
  },
  {
    "text": "they need a way to analyze these files to determine which condition gave them the outcome that they were trying to",
    "start": "1860440",
    "end": "1866290"
  },
  {
    "text": "obtain and that's what magpie does it takes an input of a reference and then a",
    "start": "1866290",
    "end": "1871390"
  },
  {
    "start": "1868000",
    "end": "2009000"
  },
  {
    "text": "flat file that has hundreds of thousands to millions of reads it aligns those reads those sequences to the reference",
    "start": "1871390",
    "end": "1879400"
  },
  {
    "text": "and then finds the areas that it differs from the reference there's a lot of other pre-processing that's required for",
    "start": "1879400",
    "end": "1886270"
  },
  {
    "text": "NGS each of these characters has a quality value associated with it so that needs to be quantified the user can",
    "start": "1886270",
    "end": "1892900"
  },
  {
    "text": "input a parameter dynamically to change the threshold of that quality so if that",
    "start": "1892900",
    "end": "1899100"
  },
  {
    "text": "quantification doesn't end up meeting that threshold that string that sequence will be thrown out there's also smaller",
    "start": "1899100",
    "end": "1906070"
  },
  {
    "text": "strings on either side of the sequence that they're interested in that needs to be identified and shrim doff and so",
    "start": "1906070",
    "end": "1913450"
  },
  {
    "text": "there's all after all those pre-processing steps that magpie does then we'll do the alignment and then",
    "start": "1913450",
    "end": "1918610"
  },
  {
    "text": "we'll look for the areas where the the sequences differ from the reference do",
    "start": "1918610",
    "end": "1924040"
  },
  {
    "text": "some quantifications it uses numpy and pandas matplotlib and it creates some",
    "start": "1924040",
    "end": "1929290"
  },
  {
    "text": "really nice visualizations really good insights for the researcher into the performance of these different",
    "start": "1929290",
    "end": "1935020"
  },
  {
    "text": "experimental conditions also has some raw output files as well so this application can take a while our user",
    "start": "1935020",
    "end": "1943720"
  },
  {
    "text": "came to us and said you know - - really we'd really like to speed up this part of our research workflow can you make",
    "start": "1943720",
    "end": "1950590"
  },
  {
    "text": "this faster at the time we were running it on an ec2 instance",
    "start": "1950590",
    "end": "1956110"
  },
  {
    "text": "and so we knew that it was cpu-bound so we bumped up the instance we increased",
    "start": "1956110",
    "end": "1962769"
  },
  {
    "text": "the threading which also increased the memory we were not too worried about that at the time and so we were able to",
    "start": "1962769",
    "end": "1968980"
  },
  {
    "text": "decrease the processing time by half which was great but the customer came",
    "start": "1968980",
    "end": "1976269"
  },
  {
    "text": "back to us and said you know we have 40 of these files that we have to run through this application all",
    "start": "1976269",
    "end": "1982120"
  },
  {
    "text": "representing the different experimental conditions we're trying to compare and figure out which one is the ideal one",
    "start": "1982120",
    "end": "1988149"
  },
  {
    "text": "and we can go back to the lab and this is really we're having to put these through this application one at a time",
    "start": "1988149",
    "end": "1993580"
  },
  {
    "text": "and if magpie takes 20 to 30 minutes you know that's a 20 hour analysis by hand",
    "start": "1993580",
    "end": "2000419"
  },
  {
    "text": "for 40 files and it's we just really need to speed up this part can you please make this even faster so that's",
    "start": "2000419",
    "end": "2007740"
  },
  {
    "text": "when we knew we needed to take a step back and figure out how to run this",
    "start": "2007740",
    "end": "2013409"
  },
  {
    "start": "2009000",
    "end": "2106000"
  },
  {
    "text": "application in parallel we'd already been kind of thinking about this we wanted to go surrealist with some of",
    "start": "2013409",
    "end": "2020519"
  },
  {
    "text": "these analysis tools anyway because they were like I said they were running on these ec2 instances and so that we're",
    "start": "2020519",
    "end": "2027179"
  },
  {
    "text": "kind of paying for it constantly you know we're not just for it to be available and but they could these these",
    "start": "2027179",
    "end": "2032610"
  },
  {
    "text": "tools were all docker eyes they could run from a docker run command with some runtime override parameters and so it",
    "start": "2032610",
    "end": "2039870"
  },
  {
    "text": "just we only really needed it to spin up when we when we passed in those files",
    "start": "2039870",
    "end": "2044880"
  },
  {
    "text": "those parameters and then when it was done it could just go away and we didn't want to continue to pay for it so we",
    "start": "2044880",
    "end": "2050040"
  },
  {
    "text": "thought we could do both of those we could we could only be paying for it while it's being used and offer many or",
    "start": "2050040",
    "end": "2059368"
  },
  {
    "text": "Alfre parallel runs at the same time for our customer so we looked at what AWS had to offer at the time to be able to",
    "start": "2059369",
    "end": "2068190"
  },
  {
    "text": "assist us in this we knew we wanted to use ECS we thought about eks but we're a",
    "start": "2068190",
    "end": "2073800"
  },
  {
    "text": "small team we didn't have a lot of expertise in kubernetes at the time so UCS it was when you think of genomics",
    "start": "2073800",
    "end": "2082378"
  },
  {
    "text": "and life science and AWS a lot of times you'll think a batch so we did consider batch and",
    "start": "2082379",
    "end": "2088310"
  },
  {
    "text": "would have worked really well for some of our use cases but again being a small team we wanted some technology we could",
    "start": "2088310",
    "end": "2094580"
  },
  {
    "text": "learn that we could use throughout the platform and optimize all areas of our platform and not have to maintain",
    "start": "2094580",
    "end": "2100220"
  },
  {
    "text": "different tools in our architecture so we were we were really excited about Fargate so this is how we set up our",
    "start": "2100220",
    "end": "2106990"
  },
  {
    "text": "prototype architecture the files would hit an s3 bucket that would trigger an",
    "start": "2106990",
    "end": "2114470"
  },
  {
    "text": "s3 event that would spin up a lambda so lambda not normally what you think of",
    "start": "2114470",
    "end": "2120470"
  },
  {
    "text": "for a computer a long-running process but all we were using this lambda for was to pass along the task definition",
    "start": "2120470",
    "end": "2127160"
  },
  {
    "text": "that we'll talk about again here in the next couple slides and any override parameters and pass that off to far gate",
    "start": "2127160",
    "end": "2135080"
  },
  {
    "text": "and then far gate would be responsible for provisioning and pulling up the container and any networking and any",
    "start": "2135080",
    "end": "2142750"
  },
  {
    "text": "scaling that we had to that we had to take care of so it could automatically handle all of that all we had to worry",
    "start": "2142750",
    "end": "2149180"
  },
  {
    "text": "about was getting those files to s3 40 files hit s3 40 events would happen 40",
    "start": "2149180",
    "end": "2155690"
  },
  {
    "text": "lambdas would spin up those would all go over to far gate far gate would spin up 40 containers with the appropriate",
    "start": "2155690",
    "end": "2162230"
  },
  {
    "text": "resources so this worked really well once those containers finished they would write any files back to s3 and so",
    "start": "2162230",
    "end": "2169850"
  },
  {
    "text": "we were happy with this prototype we were able to run all of those there run this application and parallel so that",
    "start": "2169850",
    "end": "2175700"
  },
  {
    "text": "can take all those containers are running at the same time so we get those results back to the customer some onion",
    "start": "2175700",
    "end": "2181580"
  },
  {
    "text": "kind of an unintended benefit like is this parallel runs means parallel results so now we can we created this UI",
    "start": "2181580",
    "end": "2189830"
  },
  {
    "text": "for the results that the user could view so once these were finishing we were",
    "start": "2189830",
    "end": "2195680"
  },
  {
    "text": "able to parse out and pull out the important results populate this table and then also had some hyperlink links to dig a little bit deeper but now the",
    "start": "2195680",
    "end": "2202430"
  },
  {
    "text": "researcher doesn't have to leave that like research mindset you know before they were spending days just",
    "start": "2202430",
    "end": "2208430"
  },
  {
    "text": "logistically like taking a file in going and copy and pasting the important results to an excel sheet now they just",
    "start": "2208430",
    "end": "2214400"
  },
  {
    "text": "dropped their files and click go there immediately as they see this results",
    "start": "2214400",
    "end": "2219800"
  },
  {
    "text": "table being populated they're building hypotheses and breaking down other ones and then they're able to within the same",
    "start": "2219800",
    "end": "2225310"
  },
  {
    "text": "day go back to the lab and start making different and better genome editing systems so that was really huge and not",
    "start": "2225310",
    "end": "2232900"
  },
  {
    "text": "to mention the automation like automating the human error of copy and pasting results and all that so we were we were pretty we were really excited",
    "start": "2232900",
    "end": "2239680"
  },
  {
    "text": "about this another also specific to Fargate it's very good for the like user",
    "start": "2239680",
    "end": "2246700"
  },
  {
    "text": "behavior the sporadic application load that we see with our analysis tools so we'll see like lulls of people of usage",
    "start": "2246700",
    "end": "2254650"
  },
  {
    "text": "they people pay basically won't be using the tools then all of a sudden they'll be a big peak and that just hat that's",
    "start": "2254650",
    "end": "2260140"
  },
  {
    "text": "just the nature of their job their spending areas or long time or long",
    "start": "2260140",
    "end": "2266470"
  },
  {
    "text": "amounts of time in other areas of the platform for I'm looking at patents looking at scientific literature then",
    "start": "2266470",
    "end": "2272620"
  },
  {
    "text": "once they hit on that experiment that genome editing system that they want to",
    "start": "2272620",
    "end": "2277900"
  },
  {
    "text": "run at scale then they'll send that off to the NGS lab get those files back that they want to analyze so now instead of",
    "start": "2277900",
    "end": "2284830"
  },
  {
    "text": "paying for that ec2 instance to be up the whole time they're just doing their background research we're only paying for when they're hitting our analytic",
    "start": "2284830",
    "end": "2294610"
  },
  {
    "text": "and per second at that with Fargate also with developer time this was trying to",
    "start": "2294610",
    "end": "2300760"
  },
  {
    "text": "code for that type of sporadic application load would have been a challenge and farg a is able to take",
    "start": "2300760",
    "end": "2306550"
  },
  {
    "text": "care of that for us so that we were able to get that back to the customer and meet this customer requests really",
    "start": "2306550",
    "end": "2311830"
  },
  {
    "text": "quickly and then back to the initial request of can you make this faster they can now run 40 files in the same amount",
    "start": "2311830",
    "end": "2319030"
  },
  {
    "text": "of time it previously took them to run one so that made them very happy lessons",
    "start": "2319030",
    "end": "2325360"
  },
  {
    "start": "2324000",
    "end": "2426000"
  },
  {
    "text": "learned I'm going to talk about the CL is on the next slide definitely want to",
    "start": "2325360",
    "end": "2330910"
  },
  {
    "text": "plan for limited task size and quota so 10 gigs disk space 30 gigs memory we can",
    "start": "2330910",
    "end": "2337600"
  },
  {
    "text": "get pretty close to that those limits with some of our applications so we will",
    "start": "2337600",
    "end": "2343030"
  },
  {
    "text": "process things in memory and we take advantage of streaming to help out with some of that quota so I believe the",
    "start": "2343030",
    "end": "2350740"
  },
  {
    "text": "quota is now at 50 but when we started it was at 20 and all you have to do and that's the number",
    "start": "2350740",
    "end": "2356280"
  },
  {
    "text": "of tasks you're running in Fargate and so all you have to do is request an increase but bear in mind this is per",
    "start": "2356280",
    "end": "2363300"
  },
  {
    "text": "account not per VPC that threw us off a little bit at the beginning so be aware",
    "start": "2363300",
    "end": "2368730"
  },
  {
    "text": "of that reduce your docker image size so far gate doesn't take too long to spin up",
    "start": "2368730",
    "end": "2374250"
  },
  {
    "text": "but it has to pull down the docker image from wherever you're storing it and we",
    "start": "2374250",
    "end": "2380010"
  },
  {
    "text": "store ours on the ECR so if your docker image is large it can take a while to pull down onto that container that far",
    "start": "2380010",
    "end": "2388470"
  },
  {
    "text": "gate is provisioned so definitely take advantage of the different resources out",
    "start": "2388470",
    "end": "2394890"
  },
  {
    "text": "there we love like multistage docker files are awesome and there's lots of minimal base images to start off with so",
    "start": "2394890",
    "end": "2401580"
  },
  {
    "text": "just just try and try and minimize the size there if you can we also wrote a",
    "start": "2401580",
    "end": "2407940"
  },
  {
    "text": "cron job to maybe one of your applications is running sub-optimally and it's a memory hog or there's some",
    "start": "2407940",
    "end": "2414900"
  },
  {
    "text": "bug in it you don't want it to be paying for it just to be like chugging along and Fargate for days so you want to be",
    "start": "2414900",
    "end": "2420300"
  },
  {
    "text": "made aware of that so that you can get in there and then optimize that application so the CL is there's a",
    "start": "2420300",
    "end": "2428790"
  },
  {
    "start": "2426000",
    "end": "2628000"
  },
  {
    "text": "couple official clicc s CLI and AWS CLI there's also a couple unofficial that",
    "start": "2428790",
    "end": "2435090"
  },
  {
    "text": "I've heard good things about I'm gonna talk mostly about the ECS CLI today has",
    "start": "2435090",
    "end": "2440520"
  },
  {
    "text": "a compose feature which is pretty cool you can run and set up tasks with docker",
    "start": "2440520",
    "end": "2446190"
  },
  {
    "text": "compose like commands here is an example on the right is the docker compose yeah",
    "start": "2446190",
    "end": "2451800"
  },
  {
    "text": "mol snip it looks pretty standard for docker compose file not all of these",
    "start": "2451800",
    "end": "2458070"
  },
  {
    "text": "items map to something that for everything that you need to set up a task so you need an additional ECS",
    "start": "2458070",
    "end": "2463740"
  },
  {
    "text": "params EML file and both of these files for us live in the each application for",
    "start": "2463740",
    "end": "2470940"
  },
  {
    "text": "each of our tools each of our micro services and it just we just use this to",
    "start": "2470940",
    "end": "2476790"
  },
  {
    "text": "set up the tasks on whatever cluster we identify you can run from these two",
    "start": "2476790",
    "end": "2484110"
  },
  {
    "text": "files you would just use a different command we use ECS CLI composed create but you can use compose up or",
    "start": "2484110",
    "end": "2490590"
  },
  {
    "text": "compose start and then you would go to the console show a screenshot of that and you'll see your task actually",
    "start": "2490590",
    "end": "2496260"
  },
  {
    "text": "running but in this instance if you use compose create you'll just see that that task definition there but nothing",
    "start": "2496260",
    "end": "2502170"
  },
  {
    "text": "running let's talk about what you need here network mode a WSB PC is required",
    "start": "2502170",
    "end": "2507750"
  },
  {
    "text": "for Fargate your task role air in so any",
    "start": "2507750",
    "end": "2513030"
  },
  {
    "text": "permissioning if you want to restrict or allow with your containers that are going to be in here the execution role",
    "start": "2513030",
    "end": "2519990"
  },
  {
    "text": "so you'll need this for accessing the ECR or if you want to log to a tow us cloud watch task size so this is the",
    "start": "2519990",
    "end": "2529040"
  },
  {
    "text": "limit that you're setting for the tasks the tasks and any containers that is it",
    "start": "2529040",
    "end": "2534210"
  },
  {
    "text": "within that task these two the CPU and memory those are on a sliding scale so",
    "start": "2534210",
    "end": "2540740"
  },
  {
    "text": "just check the docks for which pairing of these limits are appropriate for your",
    "start": "2540740",
    "end": "2546600"
  },
  {
    "text": "application services that's not ECS service that is referencing the services",
    "start": "2546600",
    "end": "2554580"
  },
  {
    "text": "you have defined in your docker compose file you can also get a little bit more granular once you like define your",
    "start": "2554580",
    "end": "2560790"
  },
  {
    "text": "service you can get a little bit more granular granular with those task limits you can if you want to limit one",
    "start": "2560790",
    "end": "2566370"
  },
  {
    "text": "container to I only have one container identified here but you if you have more images that you're gonna be identifying",
    "start": "2566370",
    "end": "2571770"
  },
  {
    "text": "or more services you can get granular with the task and like give more memory",
    "start": "2571770",
    "end": "2577350"
  },
  {
    "text": "to one and less memory to another one so that's pretty cool and then the run parameters so this is the subnets you",
    "start": "2577350",
    "end": "2584250"
  },
  {
    "text": "have you can identify which is really nice because they will if you don't you",
    "start": "2584250",
    "end": "2590100"
  },
  {
    "text": "can have their containers communicate with each other within that VPC and no",
    "start": "2590100",
    "end": "2595560"
  },
  {
    "text": "traffic will leave that EPC if you want and that's so that's really convenient and then over to the docker compose file",
    "start": "2595560",
    "end": "2602420"
  },
  {
    "text": "just a little note there's a little bit of difference between version 2 and version 3 mostly just where it defaults",
    "start": "2602420",
    "end": "2609810"
  },
  {
    "text": "to if you have an item specified in both your ECS params and your docker file generally your ECS params will override",
    "start": "2609810",
    "end": "2616650"
  },
  {
    "text": "will be like take priority if it's defined in both places your image the ports and you want to make",
    "start": "2616650",
    "end": "2624030"
  },
  {
    "text": "sure you have logging or it's not gonna log so you have to have that identified so that's how we create our tasks it's",
    "start": "2624030",
    "end": "2631559"
  },
  {
    "start": "2628000",
    "end": "2711000"
  },
  {
    "text": "just up there it's not running yet as I showed with our architecture we use the lambda a lambda to actually run it and",
    "start": "2631559",
    "end": "2638790"
  },
  {
    "text": "you can see this is all pretty generic environment variables so we can keep this in a target service and that's what",
    "start": "2638790",
    "end": "2646020"
  },
  {
    "text": "we do and we only have one lambda to rule them all so we that's really nice",
    "start": "2646020",
    "end": "2654390"
  },
  {
    "text": "because you don't have to maintain a lot of different code right you can just have this one liam data if you want to",
    "start": "2654390",
    "end": "2662369"
  },
  {
    "text": "make any changes to it that will be experienced throughout all the other",
    "start": "2662369",
    "end": "2667470"
  },
  {
    "text": "analytics so because we do some other like exception handling and stuff around this code when we have most of our",
    "start": "2667470",
    "end": "2674000"
  },
  {
    "text": "lambdas written in Python so we use the photo three ECS client to actually run",
    "start": "2674000",
    "end": "2680339"
  },
  {
    "text": "the task and so you'll need to identify your cluster the task definition that we",
    "start": "2680339",
    "end": "2685920"
  },
  {
    "text": "just talked about so any runtime overrides so a good example would be where that file is or that quality",
    "start": "2685920",
    "end": "2693119"
  },
  {
    "text": "threshold that I talked about so anything you're overriding that are defaulted in that container launch type",
    "start": "2693119",
    "end": "2698849"
  },
  {
    "text": "is Fargate you can actually change this to ec2 and you can like exec onto your container and do some troubleshooting",
    "start": "2698849",
    "end": "2704609"
  },
  {
    "text": "and then change it back to Fargate when you're ready for the benefits of our gate again and then your network",
    "start": "2704609",
    "end": "2709710"
  },
  {
    "text": "configurations so now I'm going to show some screenshots of when you go into your console so this one you can see you",
    "start": "2709710",
    "end": "2718170"
  },
  {
    "start": "2711000",
    "end": "2760000"
  },
  {
    "text": "will see it pending so that's like wow far gate is provisioning and figuring out resources and all of that but that's",
    "start": "2718170",
    "end": "2723510"
  },
  {
    "text": "not too long you'll soon it'll be in the running state and then this you can see",
    "start": "2723510",
    "end": "2729210"
  },
  {
    "text": "there's one running task and that is essentially for us means there's one file that hit that architecture and then",
    "start": "2729210",
    "end": "2736980"
  },
  {
    "text": "you can click on that task and then you can see that the items that you defined in your task definition just confirm",
    "start": "2736980",
    "end": "2743010"
  },
  {
    "text": "that that's what you meant to do and then you can go a little bit deeper down into the actual container and there you",
    "start": "2743010",
    "end": "2748290"
  },
  {
    "text": "can see your overrides you have a link to the cloud watch logs you can actually view the logs directly in the console",
    "start": "2748290",
    "end": "2754110"
  },
  {
    "text": "so that's really nice to get some confirmation everything's running the way that you you meant for it to be",
    "start": "2754110",
    "end": "2759570"
  },
  {
    "text": "running so with our prototype we knew we had some significant limitations and so",
    "start": "2759570",
    "end": "2765420"
  },
  {
    "start": "2760000",
    "end": "2821000"
  },
  {
    "text": "we set some requirements for ourselves for our production version one of the big ones is our lambda was essentially",
    "start": "2765420",
    "end": "2772200"
  },
  {
    "text": "blind it didn't care whether the container finished successfully or",
    "start": "2772200",
    "end": "2777480"
  },
  {
    "text": "whether it hit any infrastructure error it just sent off that task definition then was like I'm done so we needed a",
    "start": "2777480",
    "end": "2783900"
  },
  {
    "text": "way to retry that recalling past processes we definitely needed some",
    "start": "2783900",
    "end": "2789900"
  },
  {
    "text": "persistent data especially as we decided we're gonna make some work flowing some of these applications together and",
    "start": "2789900",
    "end": "2797070"
  },
  {
    "text": "outputs of one application would then be used as the input of the next and have some choices and input from the user so",
    "start": "2797070",
    "end": "2802620"
  },
  {
    "text": "we definitely needed to have a way to have some persistent data that we could have those later applications recalling",
    "start": "2802620",
    "end": "2808590"
  },
  {
    "text": "what happened earlier on in the workflow visibility we need to know why something",
    "start": "2808590",
    "end": "2814650"
  },
  {
    "text": "happened when something happened and how to address that so that was also a consideration that we needed to to",
    "start": "2814650",
    "end": "2820620"
  },
  {
    "text": "figure out so this is what we ended up with with our production version the",
    "start": "2820620",
    "end": "2826350"
  },
  {
    "start": "2821000",
    "end": "2877000"
  },
  {
    "text": "files again would hit s3 we would write some metadata to DynamoDB now we're",
    "start": "2826350",
    "end": "2831750"
  },
  {
    "text": "using step functions step functions was really nice especially as where we wanted to see this growing into and we",
    "start": "2831750",
    "end": "2837840"
  },
  {
    "text": "were essentially using step functions at this point as an Orchestrator for the lambdas the lambdas worked the same way",
    "start": "2837840",
    "end": "2845340"
  },
  {
    "text": "they pass off a task definition and any overrides too far gate and but now if",
    "start": "2845340",
    "end": "2852780"
  },
  {
    "text": "there's a error in Fargate an infrastructure error in forget or lambda we can now retry that with step",
    "start": "2852780",
    "end": "2860310"
  },
  {
    "text": "functions so once that container runs successfully then those files would be",
    "start": "2860310",
    "end": "2867930"
  },
  {
    "text": "the results files would be back to an s3 bucket and then he metadata would be written to Amazon DB dynamodb so this",
    "start": "2867930",
    "end": "2879180"
  },
  {
    "start": "2877000",
    "end": "2946000"
  },
  {
    "text": "worked out really well we've been really really pleased with this architecture the again users and upload some files",
    "start": "2879180",
    "end": "2886420"
  },
  {
    "text": "run through that architecture and then we can provide those results back to them really quickly the next thing that",
    "start": "2886420",
    "end": "2891940"
  },
  {
    "text": "we've been working on is that work flowing these applications together and we've got this is an actual example of",
    "start": "2891940",
    "end": "2898420"
  },
  {
    "text": "one of our workflows where we have five of these Dockery's tools running in",
    "start": "2898420",
    "end": "2906040"
  },
  {
    "text": "parallel and then one final tool that will essentially take all of those results make some visualizations and",
    "start": "2906040",
    "end": "2912970"
  },
  {
    "text": "outputs for the user and we run this at the scale of 400 samples so that means",
    "start": "2912970",
    "end": "2919390"
  },
  {
    "text": "that 400 files essentially are hitting that first tool passing on going through that architecture passing on those task",
    "start": "2919390",
    "end": "2925329"
  },
  {
    "text": "definitions to Fargate faregates spending out 400 containers and and then for that task definition and then for",
    "start": "2925329",
    "end": "2931750"
  },
  {
    "text": "each consecutive tool that we have in the workflow so it just sets it off and",
    "start": "2931750",
    "end": "2938770"
  },
  {
    "text": "step functions can control and which what environment variables get passed on through that that lambdas so that's been",
    "start": "2938770",
    "end": "2946270"
  },
  {
    "start": "2946000",
    "end": "3030000"
  },
  {
    "text": "that's been really really exciting to see that kind of coming together there so let's talk about visibility with the",
    "start": "2946270",
    "end": "2953440"
  },
  {
    "text": "any errors that we see or that we populate the results table with we are",
    "start": "2953440",
    "end": "2960599"
  },
  {
    "text": "generating an endpoint using dynamo DB so we will write the we actually write",
    "start": "2960599",
    "end": "2969520"
  },
  {
    "text": "to dynamo DB inside the container so we can parse any error messages that are",
    "start": "2969520",
    "end": "2974530"
  },
  {
    "text": "specific to the application to DynamoDB and we can capture infrastructure errors",
    "start": "2974530",
    "end": "2979780"
  },
  {
    "text": "as well by essentially assigning that call to the the boat o3 ECS client and",
    "start": "2979780",
    "end": "2987970"
  },
  {
    "text": "then parsing that and then we can can write any errors here and the same for",
    "start": "2987970",
    "end": "2993609"
  },
  {
    "text": "our game so the lambda is then essentially writing some error messages here so we can use this is really really",
    "start": "2993609",
    "end": "3000150"
  },
  {
    "text": "informative in a bunch of ways like there's a great CLI and then we can also get some insight into some of the common",
    "start": "3000150",
    "end": "3007710"
  },
  {
    "text": "errors like user errors that are applications that our users are doing with our applications which is nice",
    "start": "3007710",
    "end": "3013680"
  },
  {
    "text": "because we can for the really common errors we can maybe add some tool or modal to help them kind of avoid",
    "start": "3013680",
    "end": "3021130"
  },
  {
    "text": "those those errors and then obviously catching the infrastructure errors that we need to retry if we're not already",
    "start": "3021130",
    "end": "3027670"
  },
  {
    "text": "catching those and retrying them so the step functions console is really nice",
    "start": "3027670",
    "end": "3035050"
  },
  {
    "start": "3030000",
    "end": "3073000"
  },
  {
    "text": "and granular for monitoring so if we see we have an error and it's in one of these really complex workflows this is a",
    "start": "3035050",
    "end": "3041320"
  },
  {
    "text": "pretty simple state machine from step functions it's essentially like three tools that are that go consecutively but",
    "start": "3041320",
    "end": "3047980"
  },
  {
    "text": "there's lots of like complex state machines you can create with step functions with choices and branching off and it's it's a it's pretty cool tool so",
    "start": "3047980",
    "end": "3056010"
  },
  {
    "text": "but we can with the error we can get we have a unique execution ID that we can",
    "start": "3056010",
    "end": "3062110"
  },
  {
    "text": "then go see the the actual step function the state machine from that execution",
    "start": "3062110",
    "end": "3067240"
  },
  {
    "text": "and we can see where it failed and when I'll talk about why it failed well we",
    "start": "3067240",
    "end": "3072250"
  },
  {
    "text": "have an example of that too and then the e CS console this is a really",
    "start": "3072250",
    "end": "3077790"
  },
  {
    "start": "3073000",
    "end": "3142000"
  },
  {
    "text": "straightforward way to get in there and see if you've created the task and the",
    "start": "3077790",
    "end": "3082990"
  },
  {
    "text": "cluster the way you intended to one thing I want to make clear here is that",
    "start": "3082990",
    "end": "3088450"
  },
  {
    "text": "I've got two clusters I've got demo tasks and these are ephemeral tasks that",
    "start": "3088450",
    "end": "3094000"
  },
  {
    "text": "will just spin up and then spin down and those that's pretty much everything I've talked about today are these ephemeral",
    "start": "3094000",
    "end": "3100420"
  },
  {
    "text": "tasks and so you'll see there's no services defined in this cluster and the other one you've got just demo you have",
    "start": "3100420",
    "end": "3108250"
  },
  {
    "text": "services and those are just those are constantly running and that's like where the lambda is living so one of the",
    "start": "3108250",
    "end": "3115570"
  },
  {
    "text": "things you'll note here is that the ephemeral tasks does not have data associated with them so but with the",
    "start": "3115570",
    "end": "3124450"
  },
  {
    "text": "services you do get some really nice output with the metrics but you can grab",
    "start": "3124450",
    "end": "3131890"
  },
  {
    "text": "task level metrics using data dog but you don't have that through the console",
    "start": "3131890",
    "end": "3138640"
  },
  {
    "text": "just yet with ECS so just keep that in mind so with debugging we do write the error",
    "start": "3138640",
    "end": "3145270"
  },
  {
    "start": "3142000",
    "end": "3156000"
  },
  {
    "text": "message to the Dynamo as well so we can identify at that level",
    "start": "3145270",
    "end": "3151190"
  },
  {
    "text": "if it was application or if it was a generic error message that we need to dig a little bit deeper into and then",
    "start": "3151190",
    "end": "3157640"
  },
  {
    "start": "3156000",
    "end": "3192000"
  },
  {
    "text": "with this step functions console as I showed the same screenshot earlier but",
    "start": "3157640",
    "end": "3163580"
  },
  {
    "text": "just expanded it out a little bit you can actually click on the error and then you can see where we log what the error",
    "start": "3163580",
    "end": "3169370"
  },
  {
    "text": "was so we capture that and log it here and so we can say okay this is capacity is unavailable so we've hit that quota",
    "start": "3169370",
    "end": "3175520"
  },
  {
    "text": "okay we'll set that up and we'll retry that until it's successful so and then",
    "start": "3175520",
    "end": "3181160"
  },
  {
    "text": "also and ask for an increase and then this is an example of an application",
    "start": "3181160",
    "end": "3186200"
  },
  {
    "text": "error we write the AR n so that amazon resource number and then we can go to",
    "start": "3186200",
    "end": "3191510"
  },
  {
    "text": "cloud watch and dig a little bit deeper into those logs and if your container is killed or if it dies for some reason you",
    "start": "3191510",
    "end": "3198440"
  },
  {
    "start": "3192000",
    "end": "3208000"
  },
  {
    "text": "still get partial logs so it's really convenient for that if you can't already tell what's going on with some of the",
    "start": "3198440",
    "end": "3204320"
  },
  {
    "text": "other tools so we're gonna like catalytic we're always trying to make",
    "start": "3204320",
    "end": "3209990"
  },
  {
    "start": "3208000",
    "end": "3248000"
  },
  {
    "text": "our process better and always trying to make it experience better for our users so we think some things that can help with that is maybe making the",
    "start": "3209990",
    "end": "3216830"
  },
  {
    "text": "infrastructure around Fargate a little bit more fire-and-forget so with great limiting and those quotas if we could",
    "start": "3216830",
    "end": "3223370"
  },
  {
    "text": "have some automatic retries that would help with that as well as mounting a larger volume than the 10 gig EBS that",
    "start": "3223370",
    "end": "3230360"
  },
  {
    "text": "is already there would be really nice for some of those applications that",
    "start": "3230360",
    "end": "3235460"
  },
  {
    "text": "require that and then the tasks level metrics in the ACS console so thank you so much for coming to this talk and",
    "start": "3235460",
    "end": "3241190"
  },
  {
    "text": "please go to the app and fill out the survey [Applause]",
    "start": "3241190",
    "end": "3250790"
  }
]