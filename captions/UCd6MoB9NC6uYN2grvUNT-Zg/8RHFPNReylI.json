[
  {
    "start": "0",
    "end": "86000"
  },
  {
    "text": "hi my name is tony gibbs i'm a principal",
    "start": "320",
    "end": "2080"
  },
  {
    "text": "database solution architect uh for",
    "start": "2080",
    "end": "3840"
  },
  {
    "text": "amazon time stream here at",
    "start": "3840",
    "end": "5680"
  },
  {
    "text": "aws uh in this session",
    "start": "5680",
    "end": "8960"
  },
  {
    "text": "we're going to walk through getting",
    "start": "8960",
    "end": "10320"
  },
  {
    "text": "started with amazon timestream",
    "start": "10320",
    "end": "13200"
  },
  {
    "text": "we're going to start out first just by",
    "start": "13200",
    "end": "14920"
  },
  {
    "text": "introducing what time stream is",
    "start": "14920",
    "end": "18080"
  },
  {
    "text": "we're going to go into some",
    "start": "18080",
    "end": "19600"
  },
  {
    "text": "architectural concepts some of the",
    "start": "19600",
    "end": "21279"
  },
  {
    "text": "terminology and such",
    "start": "21279",
    "end": "23119"
  },
  {
    "text": "that we used in time stream that's",
    "start": "23119",
    "end": "24640"
  },
  {
    "text": "unique to it then we're going to cover",
    "start": "24640",
    "end": "26400"
  },
  {
    "text": "how data ingestion is done",
    "start": "26400",
    "end": "28320"
  },
  {
    "text": "move on in the query processing we're",
    "start": "28320",
    "end": "30320"
  },
  {
    "text": "going to talk about some of the",
    "start": "30320",
    "end": "31519"
  },
  {
    "text": "integrations that we",
    "start": "31519",
    "end": "33120"
  },
  {
    "text": "uh support uh at the for the launch of",
    "start": "33120",
    "end": "36160"
  },
  {
    "text": "amazon timestream",
    "start": "36160",
    "end": "37760"
  },
  {
    "text": "and then after that we're gonna go",
    "start": "37760",
    "end": "39600"
  },
  {
    "text": "through just a quick tour of the",
    "start": "39600",
    "end": "41200"
  },
  {
    "text": "console and in that console we're going",
    "start": "41200",
    "end": "43360"
  },
  {
    "text": "to you know create a sample database",
    "start": "43360",
    "end": "45600"
  },
  {
    "text": "uh walk through how you query data and",
    "start": "45600",
    "end": "48160"
  },
  {
    "text": "all that kind of thing",
    "start": "48160",
    "end": "50960"
  },
  {
    "text": "so let's first start out by talking a",
    "start": "51280",
    "end": "53360"
  },
  {
    "text": "little bit about what",
    "start": "53360",
    "end": "54399"
  },
  {
    "text": "time series data is now time series data",
    "start": "54399",
    "end": "57680"
  },
  {
    "text": "it really is about measuring some sort",
    "start": "57680",
    "end": "60480"
  },
  {
    "text": "of value",
    "start": "60480",
    "end": "61680"
  },
  {
    "text": "whether that value is maybe the speed of",
    "start": "61680",
    "end": "63440"
  },
  {
    "text": "a car the price of a stock",
    "start": "63440",
    "end": "66640"
  },
  {
    "text": "the you know maybe the oil pressure",
    "start": "66640",
    "end": "69760"
  },
  {
    "text": "and some sort of machinery and it's",
    "start": "69760",
    "end": "72640"
  },
  {
    "text": "really about",
    "start": "72640",
    "end": "73200"
  },
  {
    "text": "measuring that over some time period and",
    "start": "73200",
    "end": "76320"
  },
  {
    "text": "we might be you know sampling",
    "start": "76320",
    "end": "78159"
  },
  {
    "text": "those measurements on a regular basis",
    "start": "78159",
    "end": "80720"
  },
  {
    "text": "whether it was you know every second or",
    "start": "80720",
    "end": "82640"
  },
  {
    "text": "every minute or",
    "start": "82640",
    "end": "83920"
  },
  {
    "text": "whatever it happened to be",
    "start": "83920",
    "end": "87200"
  },
  {
    "start": "86000",
    "end": "86000"
  },
  {
    "text": "now that means that everything that goes",
    "start": "87200",
    "end": "91040"
  },
  {
    "text": "into",
    "start": "91040",
    "end": "91520"
  },
  {
    "text": "a time series database like amazon time",
    "start": "91520",
    "end": "94240"
  },
  {
    "text": "stream",
    "start": "94240",
    "end": "94960"
  },
  {
    "text": "is going to have an associated timestamp",
    "start": "94960",
    "end": "97520"
  },
  {
    "text": "with it",
    "start": "97520",
    "end": "98320"
  },
  {
    "text": "and it really is about measuring uh yeah",
    "start": "98320",
    "end": "101040"
  },
  {
    "text": "these data points",
    "start": "101040",
    "end": "102560"
  },
  {
    "text": "uh as they vary over uh time so you",
    "start": "102560",
    "end": "105280"
  },
  {
    "text": "pretty much almost always see",
    "start": "105280",
    "end": "107040"
  },
  {
    "text": "like an x axis like this one along the",
    "start": "107040",
    "end": "109600"
  },
  {
    "text": "bottom",
    "start": "109600",
    "end": "110320"
  },
  {
    "text": "with a time stamp that's uh changing",
    "start": "110320",
    "end": "112560"
  },
  {
    "text": "over time",
    "start": "112560",
    "end": "114640"
  },
  {
    "start": "114000",
    "end": "114000"
  },
  {
    "text": "so the typical use cases uh for time",
    "start": "114640",
    "end": "117200"
  },
  {
    "text": "series database the first one is really",
    "start": "117200",
    "end": "119200"
  },
  {
    "text": "iot data a lot of iot use cases",
    "start": "119200",
    "end": "122240"
  },
  {
    "text": "uh use time series databases and that's",
    "start": "122240",
    "end": "124560"
  },
  {
    "text": "you know we might have sensors again",
    "start": "124560",
    "end": "126320"
  },
  {
    "text": "that are collecting",
    "start": "126320",
    "end": "127200"
  },
  {
    "text": "whether it's weather information like",
    "start": "127200",
    "end": "128640"
  },
  {
    "text": "the temperature the humidity",
    "start": "128640",
    "end": "130640"
  },
  {
    "text": "um you know those sorts of things or it",
    "start": "130640",
    "end": "132800"
  },
  {
    "text": "could even be like you know sensors on a",
    "start": "132800",
    "end": "134480"
  },
  {
    "text": "truck that are you know measuring things",
    "start": "134480",
    "end": "135920"
  },
  {
    "text": "like the speed and location and such",
    "start": "135920",
    "end": "138800"
  },
  {
    "text": "then we have devops data this might be",
    "start": "138800",
    "end": "142400"
  },
  {
    "text": "maybe you have a fleet of instances that",
    "start": "142400",
    "end": "144160"
  },
  {
    "text": "are running on aws",
    "start": "144160",
    "end": "145520"
  },
  {
    "text": "for example or maybe uh you know",
    "start": "145520",
    "end": "147840"
  },
  {
    "text": "containers",
    "start": "147840",
    "end": "148640"
  },
  {
    "text": "uh kubernetes or something like that and",
    "start": "148640",
    "end": "151280"
  },
  {
    "text": "you're measuring you know the memory",
    "start": "151280",
    "end": "152879"
  },
  {
    "text": "utilization how much",
    "start": "152879",
    "end": "154400"
  },
  {
    "text": "network data is being transferred you",
    "start": "154400",
    "end": "156160"
  },
  {
    "text": "know your cpu usage",
    "start": "156160",
    "end": "157920"
  },
  {
    "text": "all of those things that could be used",
    "start": "157920",
    "end": "159360"
  },
  {
    "text": "you know maybe just for powering",
    "start": "159360",
    "end": "160720"
  },
  {
    "text": "dashboards and such on",
    "start": "160720",
    "end": "162480"
  },
  {
    "text": "you know the load that are on the",
    "start": "162480",
    "end": "164080"
  },
  {
    "text": "servers and keeping an eye on things and",
    "start": "164080",
    "end": "166000"
  },
  {
    "text": "alerts and things like that",
    "start": "166000",
    "end": "168480"
  },
  {
    "text": "then the last one is app analytics and",
    "start": "168480",
    "end": "170720"
  },
  {
    "text": "this one's kind of a much larger one",
    "start": "170720",
    "end": "172560"
  },
  {
    "text": "because it",
    "start": "172560",
    "end": "173200"
  },
  {
    "text": "encompasses a lot of different use cases",
    "start": "173200",
    "end": "176000"
  },
  {
    "text": "but some of the common ones we've seen",
    "start": "176000",
    "end": "177920"
  },
  {
    "text": "so far from customers are things like",
    "start": "177920",
    "end": "179680"
  },
  {
    "text": "click stream data",
    "start": "179680",
    "end": "181120"
  },
  {
    "text": "maybe measuring like for example like",
    "start": "181120",
    "end": "182879"
  },
  {
    "text": "the time it takes for a page to load",
    "start": "182879",
    "end": "185280"
  },
  {
    "text": "how much time a user spent on a page or",
    "start": "185280",
    "end": "187920"
  },
  {
    "text": "even could be all the way over into like",
    "start": "187920",
    "end": "189680"
  },
  {
    "text": "video analytics where you know you're",
    "start": "189680",
    "end": "191440"
  },
  {
    "text": "measuring",
    "start": "191440",
    "end": "192239"
  },
  {
    "text": "uh you know when a user pauses a video",
    "start": "192239",
    "end": "194800"
  },
  {
    "text": "or when the",
    "start": "194800",
    "end": "195680"
  },
  {
    "text": "resolution changes because of you know a",
    "start": "195680",
    "end": "198720"
  },
  {
    "text": "bit rate",
    "start": "198720",
    "end": "199760"
  },
  {
    "text": "can't keep up or something like that so",
    "start": "199760",
    "end": "202319"
  },
  {
    "text": "those could all be",
    "start": "202319",
    "end": "203120"
  },
  {
    "text": "use cases that might fall under that app",
    "start": "203120",
    "end": "206159"
  },
  {
    "text": "analytics",
    "start": "206159",
    "end": "207760"
  },
  {
    "text": "now traditionally in the past we",
    "start": "207760",
    "end": "210319"
  },
  {
    "start": "209000",
    "end": "209000"
  },
  {
    "text": "probably would have put",
    "start": "210319",
    "end": "211360"
  },
  {
    "text": "this data in a relational database um",
    "start": "211360",
    "end": "214480"
  },
  {
    "text": "but relational databases they're you",
    "start": "214480",
    "end": "216319"
  },
  {
    "text": "know typically vertically scaled",
    "start": "216319",
    "end": "218480"
  },
  {
    "text": "most of them aren't uh able to scale",
    "start": "218480",
    "end": "220640"
  },
  {
    "text": "horizontally",
    "start": "220640",
    "end": "222159"
  },
  {
    "text": "so a lot of relational databases aren't",
    "start": "222159",
    "end": "224080"
  },
  {
    "text": "going to be able to handle this you know",
    "start": "224080",
    "end": "225920"
  },
  {
    "text": "and if they",
    "start": "225920",
    "end": "226720"
  },
  {
    "text": "you do need to scale horizontally you're",
    "start": "226720",
    "end": "229360"
  },
  {
    "text": "going to end up doing things like",
    "start": "229360",
    "end": "231599"
  },
  {
    "text": "you know sharding your data and things",
    "start": "231599",
    "end": "233680"
  },
  {
    "text": "like that and that causes",
    "start": "233680",
    "end": "235599"
  },
  {
    "text": "other types of issues then relational",
    "start": "235599",
    "end": "238319"
  },
  {
    "text": "databases are also typically",
    "start": "238319",
    "end": "240879"
  },
  {
    "text": "you know they have schemas and things",
    "start": "240879",
    "end": "242720"
  },
  {
    "text": "like that that you need to define",
    "start": "242720",
    "end": "244799"
  },
  {
    "text": "uh you know there's ddl that needs to be",
    "start": "244799",
    "end": "247200"
  },
  {
    "text": "issued if you're changing a data type or",
    "start": "247200",
    "end": "249200"
  },
  {
    "text": "if you're adding a new column",
    "start": "249200",
    "end": "251040"
  },
  {
    "text": "and you know just because you've",
    "start": "251040",
    "end": "252560"
  },
  {
    "text": "deployed a new iot sensor for example",
    "start": "252560",
    "end": "255680"
  },
  {
    "text": "then there's also a lot of visualization",
    "start": "255680",
    "end": "257680"
  },
  {
    "text": "tools machine learning",
    "start": "257680",
    "end": "260479"
  },
  {
    "text": "tools and such that are built around",
    "start": "260479",
    "end": "263919"
  },
  {
    "text": "you know getting the data into for",
    "start": "263919",
    "end": "265680"
  },
  {
    "text": "example these",
    "start": "265680",
    "end": "267280"
  },
  {
    "text": "types of newer types of time series",
    "start": "267280",
    "end": "269360"
  },
  {
    "text": "databases",
    "start": "269360",
    "end": "270400"
  },
  {
    "text": "a lot of these don't necessarily support",
    "start": "270400",
    "end": "271919"
  },
  {
    "text": "relational databases as well",
    "start": "271919",
    "end": "275040"
  },
  {
    "text": "then we have we do have some existing",
    "start": "275040",
    "end": "277199"
  },
  {
    "text": "time series solutions",
    "start": "277199",
    "end": "279120"
  },
  {
    "text": "and what we've heard from customers is a",
    "start": "279120",
    "end": "280880"
  },
  {
    "text": "lot of these solutions",
    "start": "280880",
    "end": "282320"
  },
  {
    "text": "are difficult to scale you know or",
    "start": "282320",
    "end": "285520"
  },
  {
    "text": "a lot of work to maintain or they get",
    "start": "285520",
    "end": "288479"
  },
  {
    "text": "expensive because there's",
    "start": "288479",
    "end": "290320"
  },
  {
    "text": "no life cycle management where you know",
    "start": "290320",
    "end": "293360"
  },
  {
    "text": "your",
    "start": "293360",
    "end": "294000"
  },
  {
    "text": "all your data resides in the database",
    "start": "294000",
    "end": "295919"
  },
  {
    "text": "and then you start having to offload",
    "start": "295919",
    "end": "297360"
  },
  {
    "text": "that data and then you end up having",
    "start": "297360",
    "end": "299520"
  },
  {
    "text": "for example to need to have a",
    "start": "299520",
    "end": "302960"
  },
  {
    "text": "different database to query that",
    "start": "302960",
    "end": "304800"
  },
  {
    "text": "historical data",
    "start": "304800",
    "end": "306479"
  },
  {
    "text": "you know maybe for generating reports",
    "start": "306479",
    "end": "308240"
  },
  {
    "text": "and that sort of thing",
    "start": "308240",
    "end": "309680"
  },
  {
    "text": "so these are some of the challenges that",
    "start": "309680",
    "end": "311039"
  },
  {
    "text": "we've heard that customers face when",
    "start": "311039",
    "end": "313520"
  },
  {
    "text": "they're",
    "start": "313520",
    "end": "313919"
  },
  {
    "text": "either using relational databases or",
    "start": "313919",
    "end": "316960"
  },
  {
    "text": "some of the existing time series",
    "start": "316960",
    "end": "318560"
  },
  {
    "text": "solutions",
    "start": "318560",
    "end": "321280"
  },
  {
    "text": "so let's go into what time stream",
    "start": "321280",
    "end": "323600"
  },
  {
    "text": "actually is",
    "start": "323600",
    "end": "324400"
  },
  {
    "text": "so it is a serverless database",
    "start": "324400",
    "end": "327600"
  },
  {
    "text": "it's designed to be easy to use there's",
    "start": "327600",
    "end": "330080"
  },
  {
    "text": "no configurations there are picking",
    "start": "330080",
    "end": "332080"
  },
  {
    "text": "instance types of any sort",
    "start": "332080",
    "end": "334160"
  },
  {
    "text": "so you're not you know configuring a",
    "start": "334160",
    "end": "336080"
  },
  {
    "text": "cluster you're not having to worry about",
    "start": "336080",
    "end": "337840"
  },
  {
    "text": "software patches",
    "start": "337840",
    "end": "339199"
  },
  {
    "text": "all of these sorts of things completely",
    "start": "339199",
    "end": "340960"
  },
  {
    "text": "handled for you then this means that you",
    "start": "340960",
    "end": "343440"
  },
  {
    "text": "pay only for what you're going to",
    "start": "343440",
    "end": "345520"
  },
  {
    "text": "actually ingest",
    "start": "345520",
    "end": "346720"
  },
  {
    "text": "store and query and all three of these",
    "start": "346720",
    "end": "349039"
  },
  {
    "text": "things are separate",
    "start": "349039",
    "end": "350479"
  },
  {
    "text": "in time stream we also have the ability",
    "start": "350479",
    "end": "353280"
  },
  {
    "text": "to",
    "start": "353280",
    "end": "355199"
  },
  {
    "text": "automatically have life cycle policies",
    "start": "355199",
    "end": "358720"
  },
  {
    "text": "uh that move data from different from",
    "start": "358720",
    "end": "361680"
  },
  {
    "text": "one storage tier to another",
    "start": "361680",
    "end": "364160"
  },
  {
    "text": "that can also help reduce costs as well",
    "start": "364160",
    "end": "368880"
  },
  {
    "text": "we also built time stream to be entirely",
    "start": "368880",
    "end": "371600"
  },
  {
    "text": "scalable so there's",
    "start": "371600",
    "end": "372960"
  },
  {
    "text": "no like i mentioned earlier there's no",
    "start": "372960",
    "end": "374800"
  },
  {
    "text": "configuration that needs to be done",
    "start": "374800",
    "end": "377280"
  },
  {
    "text": "as far as you know database indexes or",
    "start": "377280",
    "end": "379440"
  },
  {
    "text": "anything like that",
    "start": "379440",
    "end": "380880"
  },
  {
    "text": "and then behind the scenes the service",
    "start": "380880",
    "end": "383680"
  },
  {
    "text": "scales automatically",
    "start": "383680",
    "end": "385680"
  },
  {
    "text": "as you begin to ingest more data or as",
    "start": "385680",
    "end": "387759"
  },
  {
    "text": "you begin to",
    "start": "387759",
    "end": "388800"
  },
  {
    "text": "query the system with more users for",
    "start": "388800",
    "end": "392240"
  },
  {
    "text": "example or more dashboards and that sort",
    "start": "392240",
    "end": "394080"
  },
  {
    "text": "of thing",
    "start": "394080",
    "end": "395840"
  },
  {
    "text": "we wanted it to also this kind of falls",
    "start": "395840",
    "end": "397840"
  },
  {
    "text": "under our ease of use but really the",
    "start": "397840",
    "end": "399680"
  },
  {
    "text": "point of it being a time series database",
    "start": "399680",
    "end": "401840"
  },
  {
    "text": "is",
    "start": "401840",
    "end": "402400"
  },
  {
    "text": "that we do support standard sql uh we",
    "start": "402400",
    "end": "405120"
  },
  {
    "text": "wanted to support",
    "start": "405120",
    "end": "406240"
  },
  {
    "text": "uh you know we didn't want to support",
    "start": "406240",
    "end": "407919"
  },
  {
    "text": "proprietary query language we wanted to",
    "start": "407919",
    "end": "409680"
  },
  {
    "text": "be something that",
    "start": "409680",
    "end": "411280"
  },
  {
    "text": "customers expected and were able to pick",
    "start": "411280",
    "end": "414319"
  },
  {
    "text": "up and just easily",
    "start": "414319",
    "end": "415599"
  },
  {
    "text": "work with we did add in interpolation",
    "start": "415599",
    "end": "419120"
  },
  {
    "text": "functions and",
    "start": "419120",
    "end": "420319"
  },
  {
    "text": "time series functions and that sort of",
    "start": "420319",
    "end": "422319"
  },
  {
    "text": "thing uh",
    "start": "422319",
    "end": "423360"
  },
  {
    "text": "so that you know those are you know gap",
    "start": "423360",
    "end": "425440"
  },
  {
    "text": "filling and all that",
    "start": "425440",
    "end": "426800"
  },
  {
    "text": "are expected in a time series database",
    "start": "426800",
    "end": "429759"
  },
  {
    "text": "as well",
    "start": "429759",
    "end": "430720"
  },
  {
    "text": "and required obviously being aws",
    "start": "430720",
    "end": "433680"
  },
  {
    "text": "security is number one",
    "start": "433680",
    "end": "435440"
  },
  {
    "text": "so everything in time stream is",
    "start": "435440",
    "end": "437360"
  },
  {
    "text": "encrypted both at rest and in flight",
    "start": "437360",
    "end": "440560"
  },
  {
    "text": "the first thing you do when you create a",
    "start": "440560",
    "end": "442000"
  },
  {
    "text": "database after giving it a name",
    "start": "442000",
    "end": "444720"
  },
  {
    "text": "is assign a kms key to it and then all",
    "start": "444720",
    "end": "448160"
  },
  {
    "text": "data",
    "start": "448160",
    "end": "448720"
  },
  {
    "text": "is encrypted and it's not just by",
    "start": "448720",
    "end": "450639"
  },
  {
    "text": "default it's",
    "start": "450639",
    "end": "451840"
  },
  {
    "text": "that's just the only choice there is",
    "start": "451840",
    "end": "455520"
  },
  {
    "text": "so because timestream is serverless that",
    "start": "456720",
    "end": "458880"
  },
  {
    "text": "means that we do continuous releases to",
    "start": "458880",
    "end": "461039"
  },
  {
    "text": "it there's no",
    "start": "461039",
    "end": "462000"
  },
  {
    "text": "maintenance there's no downtime there's",
    "start": "462000",
    "end": "465599"
  },
  {
    "text": "really just keep an eye on the aws forms",
    "start": "465599",
    "end": "468479"
  },
  {
    "text": "for the latest release information",
    "start": "468479",
    "end": "470720"
  },
  {
    "text": "and we just continuously are rolling out",
    "start": "470720",
    "end": "473360"
  },
  {
    "text": "updates and patches and",
    "start": "473360",
    "end": "475280"
  },
  {
    "text": "fixes there's no operating systems no",
    "start": "475280",
    "end": "477599"
  },
  {
    "text": "nothing to worry about",
    "start": "477599",
    "end": "479360"
  },
  {
    "text": "and that means the time stream is just",
    "start": "479360",
    "end": "480720"
  },
  {
    "text": "continuously getting",
    "start": "480720",
    "end": "483120"
  },
  {
    "text": "better you know it's just continually",
    "start": "483120",
    "end": "484560"
  },
  {
    "text": "improving and those features will just",
    "start": "484560",
    "end": "485840"
  },
  {
    "text": "continue to roll out",
    "start": "485840",
    "end": "487599"
  },
  {
    "text": "over time so let's talk a little bit",
    "start": "487599",
    "end": "490960"
  },
  {
    "start": "489000",
    "end": "489000"
  },
  {
    "text": "about the tables in time stream so as i",
    "start": "490960",
    "end": "493039"
  },
  {
    "text": "mentioned earlier all tables are",
    "start": "493039",
    "end": "494479"
  },
  {
    "text": "encrypted",
    "start": "494479",
    "end": "495360"
  },
  {
    "text": "um every table holds uh some number of",
    "start": "495360",
    "end": "498160"
  },
  {
    "text": "records",
    "start": "498160",
    "end": "499280"
  },
  {
    "text": "and there isn't a data definition like",
    "start": "499280",
    "end": "501520"
  },
  {
    "text": "you know when you create a table in",
    "start": "501520",
    "end": "502960"
  },
  {
    "text": "timestream you're not",
    "start": "502960",
    "end": "504400"
  },
  {
    "text": "you know specifying ddl and specifying",
    "start": "504400",
    "end": "506800"
  },
  {
    "text": "columns up front",
    "start": "506800",
    "end": "508160"
  },
  {
    "text": "instead the columns are added to time",
    "start": "508160",
    "end": "511120"
  },
  {
    "text": "stream as the data is ingested and time",
    "start": "511120",
    "end": "513200"
  },
  {
    "text": "stream will figure out what to",
    "start": "513200",
    "end": "514880"
  },
  {
    "text": "what needs to be added and what doesn't",
    "start": "514880",
    "end": "517599"
  },
  {
    "text": "the only configuration that you actually",
    "start": "517599",
    "end": "519518"
  },
  {
    "text": "do when you create a table",
    "start": "519519",
    "end": "521680"
  },
  {
    "text": "is add the how long you want to retain",
    "start": "521680",
    "end": "524800"
  },
  {
    "text": "the data in the various",
    "start": "524800",
    "end": "526560"
  },
  {
    "text": "storage tiers so we have two storage",
    "start": "526560",
    "end": "529680"
  },
  {
    "start": "528000",
    "end": "528000"
  },
  {
    "text": "tiers in time stream we have an",
    "start": "529680",
    "end": "531120"
  },
  {
    "text": "in-memory tier and a magnetic tier",
    "start": "531120",
    "end": "533440"
  },
  {
    "text": "and the they're they're designed for",
    "start": "533440",
    "end": "536000"
  },
  {
    "text": "slightly different things the in-memory",
    "start": "536000",
    "end": "538240"
  },
  {
    "text": "tier",
    "start": "538240",
    "end": "539680"
  },
  {
    "text": "handles the ingestion of all data it",
    "start": "539680",
    "end": "542240"
  },
  {
    "text": "also handles deduplication of data",
    "start": "542240",
    "end": "545040"
  },
  {
    "text": "so if there were for example the same",
    "start": "545040",
    "end": "548000"
  },
  {
    "text": "data point was sent to time stream twice",
    "start": "548000",
    "end": "550000"
  },
  {
    "text": "a time stream would actually drop the",
    "start": "550000",
    "end": "551440"
  },
  {
    "text": "second data point and it wouldn't",
    "start": "551440",
    "end": "552959"
  },
  {
    "text": "recognize that that was a duplicate",
    "start": "552959",
    "end": "555760"
  },
  {
    "text": "the in-memory tier and the magnetic tier",
    "start": "555760",
    "end": "558240"
  },
  {
    "text": "actually designed",
    "start": "558240",
    "end": "559519"
  },
  {
    "text": "for slightly different use cases we were",
    "start": "559519",
    "end": "561279"
  },
  {
    "text": "talking earlier about",
    "start": "561279",
    "end": "562720"
  },
  {
    "text": "the needing to",
    "start": "562720",
    "end": "565839"
  },
  {
    "text": "separate workloads maybe for analytics",
    "start": "565839",
    "end": "568800"
  },
  {
    "text": "versus the dashboards for example and",
    "start": "568800",
    "end": "570800"
  },
  {
    "text": "sometimes having to use another system",
    "start": "570800",
    "end": "572720"
  },
  {
    "text": "in timestream you don't need to do that",
    "start": "572720",
    "end": "574320"
  },
  {
    "text": "our magnetic tier is actually designed",
    "start": "574320",
    "end": "576880"
  },
  {
    "text": "for high performance you know analytics",
    "start": "576880",
    "end": "579839"
  },
  {
    "text": "queries for maybe running reports and",
    "start": "579839",
    "end": "581680"
  },
  {
    "text": "that sort of thing",
    "start": "581680",
    "end": "582640"
  },
  {
    "text": "whereas our in memory tier it's designed",
    "start": "582640",
    "end": "584720"
  },
  {
    "text": "for that high throughput of ingestion",
    "start": "584720",
    "end": "587040"
  },
  {
    "text": "and it's also designed you know for",
    "start": "587040",
    "end": "590080"
  },
  {
    "text": "narrow queries that are hitting and",
    "start": "590080",
    "end": "592160"
  },
  {
    "text": "needing to extract",
    "start": "592160",
    "end": "593519"
  },
  {
    "text": "slivers of data very quickly or maybe",
    "start": "593519",
    "end": "595600"
  },
  {
    "text": "even pulling data out",
    "start": "595600",
    "end": "596800"
  },
  {
    "text": "and aggregating it and such so maybe",
    "start": "596800",
    "end": "599040"
  },
  {
    "text": "typical queries and there might be you",
    "start": "599040",
    "end": "600640"
  },
  {
    "text": "know over the last one or two hours or",
    "start": "600640",
    "end": "602480"
  },
  {
    "text": "something like that where you're pulling",
    "start": "602480",
    "end": "603680"
  },
  {
    "text": "out all these data points",
    "start": "603680",
    "end": "605279"
  },
  {
    "text": "whereas like i said the magnetic tier",
    "start": "605279",
    "end": "607600"
  },
  {
    "text": "you might have queries that are running",
    "start": "607600",
    "end": "609040"
  },
  {
    "text": "you know month-over-month reports for",
    "start": "609040",
    "end": "610880"
  },
  {
    "text": "example",
    "start": "610880",
    "end": "613360"
  },
  {
    "start": "614000",
    "end": "614000"
  },
  {
    "text": "so the next piece of terminology your",
    "start": "614480",
    "end": "616880"
  },
  {
    "text": "concept to introduce you to are",
    "start": "616880",
    "end": "618240"
  },
  {
    "text": "dimensions",
    "start": "618240",
    "end": "620640"
  },
  {
    "text": "every record in time stream has at least",
    "start": "620640",
    "end": "623440"
  },
  {
    "text": "a single",
    "start": "623440",
    "end": "624720"
  },
  {
    "text": "dimension a table supports up to 128 of",
    "start": "624720",
    "end": "628720"
  },
  {
    "text": "these",
    "start": "628720",
    "end": "629360"
  },
  {
    "text": "unique dimensions and their every",
    "start": "629360",
    "end": "632320"
  },
  {
    "text": "dimension and time stream",
    "start": "632320",
    "end": "633519"
  },
  {
    "text": "is represented as a varchar and they",
    "start": "633519",
    "end": "636880"
  },
  {
    "text": "like i mentioned earlier they're added",
    "start": "636880",
    "end": "638560"
  },
  {
    "text": "dynamically at ingestion time so just to",
    "start": "638560",
    "end": "640880"
  },
  {
    "text": "kind of go",
    "start": "640880",
    "end": "641680"
  },
  {
    "text": "over this particular example we have uh",
    "start": "641680",
    "end": "643920"
  },
  {
    "start": "642000",
    "end": "642000"
  },
  {
    "text": "some records",
    "start": "643920",
    "end": "644800"
  },
  {
    "text": "uh in this case some records for time",
    "start": "644800",
    "end": "647360"
  },
  {
    "text": "stream",
    "start": "647360",
    "end": "647920"
  },
  {
    "text": "in a table here and what you'll see here",
    "start": "647920",
    "end": "650560"
  },
  {
    "text": "looking over the top there is these are",
    "start": "650560",
    "end": "652399"
  },
  {
    "text": "would be the user defined dimensions so",
    "start": "652399",
    "end": "655040"
  },
  {
    "text": "region availability zone vpc and host",
    "start": "655040",
    "end": "657120"
  },
  {
    "text": "name in this particular case",
    "start": "657120",
    "end": "659120"
  },
  {
    "text": "make up what would be that unique set of",
    "start": "659120",
    "end": "662560"
  },
  {
    "text": "dimensions so then we have",
    "start": "662560",
    "end": "666640"
  },
  {
    "start": "665000",
    "end": "665000"
  },
  {
    "text": "measures so every record in time stream",
    "start": "666640",
    "end": "669680"
  },
  {
    "text": "contains",
    "start": "669680",
    "end": "670720"
  },
  {
    "text": "a single record so every single record",
    "start": "670720",
    "end": "673120"
  },
  {
    "text": "there is",
    "start": "673120",
    "end": "673760"
  },
  {
    "text": "one one measurement um for it",
    "start": "673760",
    "end": "677120"
  },
  {
    "text": "um each table supports up to 1024 unique",
    "start": "677120",
    "end": "680800"
  },
  {
    "text": "uh measurements and as i mentioned",
    "start": "680800",
    "end": "682399"
  },
  {
    "text": "earlier these are also dynamically added",
    "start": "682399",
    "end": "684640"
  },
  {
    "text": "in ingestion",
    "start": "684640",
    "end": "686000"
  },
  {
    "text": "they they support all the typical data",
    "start": "686000",
    "end": "688399"
  },
  {
    "text": "types that you're usually going to be",
    "start": "688399",
    "end": "689760"
  },
  {
    "text": "measuring",
    "start": "689760",
    "end": "690560"
  },
  {
    "text": "uh the most two common ones are",
    "start": "690560",
    "end": "692320"
  },
  {
    "text": "obviously usually big ins and",
    "start": "692320",
    "end": "693920"
  },
  {
    "text": "doubles are the commonly measured",
    "start": "693920",
    "end": "697360"
  },
  {
    "text": "data types so looking at the same",
    "start": "697360",
    "end": "700800"
  },
  {
    "start": "700000",
    "end": "700000"
  },
  {
    "text": "table here you notice at the top here i",
    "start": "700800",
    "end": "703360"
  },
  {
    "text": "have the measure name",
    "start": "703360",
    "end": "704480"
  },
  {
    "text": "which is what uniquely uh well it tells",
    "start": "704480",
    "end": "707200"
  },
  {
    "text": "us what we're going to be measuring",
    "start": "707200",
    "end": "709680"
  },
  {
    "text": "and then we have the measurement value",
    "start": "709680",
    "end": "711360"
  },
  {
    "text": "there and what you'll notice is that",
    "start": "711360",
    "end": "713200"
  },
  {
    "text": "colon colon",
    "start": "713200",
    "end": "714959"
  },
  {
    "text": "double and in the other case colon colon",
    "start": "714959",
    "end": "716880"
  },
  {
    "text": "big end and that's the data type",
    "start": "716880",
    "end": "719200"
  },
  {
    "text": "that you've specified when you're",
    "start": "719200",
    "end": "720720"
  },
  {
    "text": "writing that data in and so if for",
    "start": "720720",
    "end": "722880"
  },
  {
    "text": "example you'd never resented",
    "start": "722880",
    "end": "724800"
  },
  {
    "text": "any data with bigint for example you",
    "start": "724800",
    "end": "726959"
  },
  {
    "text": "actually wouldn't see that column",
    "start": "726959",
    "end": "729040"
  },
  {
    "text": "for the for those records at all or even",
    "start": "729040",
    "end": "731519"
  },
  {
    "text": "in the table",
    "start": "731519",
    "end": "732880"
  },
  {
    "text": "so these are all dynamically added at",
    "start": "732880",
    "end": "735519"
  },
  {
    "text": "run time",
    "start": "735519",
    "end": "736720"
  },
  {
    "text": "as well and then obviously you can have",
    "start": "736720",
    "end": "740000"
  },
  {
    "text": "different types of records that have you",
    "start": "740000",
    "end": "742160"
  },
  {
    "text": "know these different",
    "start": "742160",
    "end": "743200"
  },
  {
    "text": "measures which you would see things like",
    "start": "743200",
    "end": "744560"
  },
  {
    "text": "this",
    "start": "744560",
    "end": "746800"
  },
  {
    "start": "747000",
    "end": "747000"
  },
  {
    "text": "so then the next is is what it what time",
    "start": "748720",
    "end": "751120"
  },
  {
    "text": "series are and what time series",
    "start": "751120",
    "end": "752560"
  },
  {
    "text": "obviously is",
    "start": "752560",
    "end": "753200"
  },
  {
    "text": "it's a you know that unique set of um",
    "start": "753200",
    "end": "756839"
  },
  {
    "text": "records uh over the data points and we",
    "start": "756839",
    "end": "759440"
  },
  {
    "text": "were kind of talking about that and this",
    "start": "759440",
    "end": "760800"
  },
  {
    "text": "is what a series is",
    "start": "760800",
    "end": "762720"
  },
  {
    "text": "uh of data points we were talking",
    "start": "762720",
    "end": "764240"
  },
  {
    "text": "earlier what we're actually measuring",
    "start": "764240",
    "end": "765920"
  },
  {
    "text": "and",
    "start": "765920",
    "end": "766240"
  },
  {
    "text": "what that measurement is and how it's",
    "start": "766240",
    "end": "768000"
  },
  {
    "text": "varying over time",
    "start": "768000",
    "end": "769760"
  },
  {
    "text": "um so i think this next point here or",
    "start": "769760",
    "end": "772480"
  },
  {
    "text": "the first point",
    "start": "772480",
    "end": "773360"
  },
  {
    "text": "underneath the blue line there is is",
    "start": "773360",
    "end": "775600"
  },
  {
    "text": "that you know obviously",
    "start": "775600",
    "end": "776880"
  },
  {
    "text": "um every record is going to have one of",
    "start": "776880",
    "end": "779279"
  },
  {
    "text": "these time stamps",
    "start": "779279",
    "end": "780639"
  },
  {
    "text": "at least one dimension and then it's the",
    "start": "780639",
    "end": "782800"
  },
  {
    "text": "associated",
    "start": "782800",
    "end": "784079"
  },
  {
    "text": "measure value pair and then those",
    "start": "784079",
    "end": "786480"
  },
  {
    "text": "records",
    "start": "786480",
    "end": "787920"
  },
  {
    "text": "that have that unique set of dimensions",
    "start": "787920",
    "end": "790560"
  },
  {
    "text": "and measure name",
    "start": "790560",
    "end": "792959"
  },
  {
    "text": "as that those records vary over time for",
    "start": "792959",
    "end": "795040"
  },
  {
    "text": "that measurement",
    "start": "795040",
    "end": "796320"
  },
  {
    "text": "that's what makes up the series or the",
    "start": "796320",
    "end": "799360"
  },
  {
    "text": "time series",
    "start": "799360",
    "end": "800320"
  },
  {
    "text": "then we also do not to be entirely",
    "start": "800320",
    "end": "802639"
  },
  {
    "text": "confused by it but we do also have what",
    "start": "802639",
    "end": "804639"
  },
  {
    "text": "we call a time",
    "start": "804639",
    "end": "805440"
  },
  {
    "text": "series object which is constructed",
    "start": "805440",
    "end": "808800"
  },
  {
    "text": "in time streams so you can feed a series",
    "start": "808800",
    "end": "811360"
  },
  {
    "text": "of data points into the",
    "start": "811360",
    "end": "813200"
  },
  {
    "text": "time series function and it'll generate",
    "start": "813200",
    "end": "815200"
  },
  {
    "text": "this and then that's where you can apply",
    "start": "815200",
    "end": "817279"
  },
  {
    "text": "things like the gap filling functions",
    "start": "817279",
    "end": "819120"
  },
  {
    "text": "and stuff like that like our",
    "start": "819120",
    "end": "820320"
  },
  {
    "text": "last observation carry forward for",
    "start": "820320",
    "end": "822560"
  },
  {
    "text": "example",
    "start": "822560",
    "end": "823440"
  },
  {
    "text": "and if there was a gap for example that",
    "start": "823440",
    "end": "825680"
  },
  {
    "text": "would carry over the previous data point",
    "start": "825680",
    "end": "828000"
  },
  {
    "text": "into that into that gap and fill it in",
    "start": "828000",
    "end": "831839"
  },
  {
    "text": "so that's that you use like a function",
    "start": "831839",
    "end": "833839"
  },
  {
    "text": "like that",
    "start": "833839",
    "end": "834959"
  },
  {
    "text": "to fill in missing data points",
    "start": "834959",
    "end": "838959"
  },
  {
    "text": "so just getting into these series of",
    "start": "838959",
    "end": "841360"
  },
  {
    "start": "839000",
    "end": "839000"
  },
  {
    "text": "data points",
    "start": "841360",
    "end": "842000"
  },
  {
    "text": "here so in this particular example here",
    "start": "842000",
    "end": "845040"
  },
  {
    "text": "you can see that the cpu utilization for",
    "start": "845040",
    "end": "847360"
  },
  {
    "text": "this unique set",
    "start": "847360",
    "end": "848399"
  },
  {
    "text": "of dimensions is varying over",
    "start": "848399",
    "end": "851839"
  },
  {
    "text": "the time stamp there on the left and",
    "start": "851839",
    "end": "853920"
  },
  {
    "text": "then the measurement value",
    "start": "853920",
    "end": "855440"
  },
  {
    "text": "which would be the cpu utilization as it",
    "start": "855440",
    "end": "857519"
  },
  {
    "text": "changes over time",
    "start": "857519",
    "end": "858800"
  },
  {
    "text": "and that's really what the series of",
    "start": "858800",
    "end": "860639"
  },
  {
    "text": "data points would be",
    "start": "860639",
    "end": "863120"
  },
  {
    "start": "863000",
    "end": "863000"
  },
  {
    "text": "some of this is a bit of a summary so",
    "start": "863120",
    "end": "865279"
  },
  {
    "text": "i'm not going to repeat",
    "start": "865279",
    "end": "866399"
  },
  {
    "text": "the exact same things over but a few",
    "start": "866399",
    "end": "868959"
  },
  {
    "text": "characteristics of data and time stream",
    "start": "868959",
    "end": "870880"
  },
  {
    "text": "that are worth calling out",
    "start": "870880",
    "end": "872480"
  },
  {
    "text": "are that you can't delete data and you",
    "start": "872480",
    "end": "875760"
  },
  {
    "text": "can't update data in time stream so all",
    "start": "875760",
    "end": "877760"
  },
  {
    "text": "data",
    "start": "877760",
    "end": "878959"
  },
  {
    "text": "that's sent to time stream is is an",
    "start": "878959",
    "end": "881760"
  },
  {
    "text": "append only",
    "start": "881760",
    "end": "883040"
  },
  {
    "text": "table and the data isn't removed until",
    "start": "883040",
    "end": "886560"
  },
  {
    "text": "it actually hits the end of its",
    "start": "886560",
    "end": "887920"
  },
  {
    "text": "retention window in that tier",
    "start": "887920",
    "end": "890240"
  },
  {
    "text": "so obviously in the in memory tier it",
    "start": "890240",
    "end": "892639"
  },
  {
    "text": "would then move to the magnetic tier",
    "start": "892639",
    "end": "894399"
  },
  {
    "text": "and then when it hits the end of the",
    "start": "894399",
    "end": "895440"
  },
  {
    "text": "window on the magnetic tier that's when",
    "start": "895440",
    "end": "897040"
  },
  {
    "text": "it would be removed from the system",
    "start": "897040",
    "end": "900240"
  },
  {
    "text": "now i mentioned the first writer win",
    "start": "900240",
    "end": "903360"
  },
  {
    "text": "semantics",
    "start": "903360",
    "end": "904160"
  },
  {
    "text": "on the duplicate data so that that's the",
    "start": "904160",
    "end": "907360"
  },
  {
    "text": "semantics that we use is a first writer",
    "start": "907360",
    "end": "909680"
  },
  {
    "text": "wins",
    "start": "909680",
    "end": "910720"
  },
  {
    "text": "if multiple data sets of data points are",
    "start": "910720",
    "end": "914000"
  },
  {
    "text": "sent that are exactly the same set of",
    "start": "914000",
    "end": "915839"
  },
  {
    "text": "dimensions and",
    "start": "915839",
    "end": "917040"
  },
  {
    "text": "time stamp and then that will determine",
    "start": "917040",
    "end": "920000"
  },
  {
    "text": "that",
    "start": "920000",
    "end": "921839"
  },
  {
    "text": "the last thing worth calling out is is",
    "start": "921839",
    "end": "924839"
  },
  {
    "text": "that time stream is designed for",
    "start": "924839",
    "end": "927120"
  },
  {
    "text": "handling high-speed real-time data",
    "start": "927120",
    "end": "929440"
  },
  {
    "text": "so what that means is that you know you",
    "start": "929440",
    "end": "931519"
  },
  {
    "text": "could have you know maybe you have your",
    "start": "931519",
    "end": "933199"
  },
  {
    "text": "whole fleet of",
    "start": "933199",
    "end": "934720"
  },
  {
    "text": "ec2 instances or containers or whatever",
    "start": "934720",
    "end": "937279"
  },
  {
    "text": "it is",
    "start": "937279",
    "end": "937839"
  },
  {
    "text": "that you're doing devops data on each of",
    "start": "937839",
    "end": "940000"
  },
  {
    "text": "them can all be sending data",
    "start": "940000",
    "end": "941600"
  },
  {
    "text": "directly into time stream all in real",
    "start": "941600",
    "end": "943839"
  },
  {
    "text": "time and time stream is capable of",
    "start": "943839",
    "end": "945920"
  },
  {
    "text": "handling that",
    "start": "945920",
    "end": "947680"
  },
  {
    "text": "in certain cases it may still make sense",
    "start": "947680",
    "end": "949839"
  },
  {
    "text": "to you know use something like kinesis",
    "start": "949839",
    "end": "951839"
  },
  {
    "text": "for example to capture that data",
    "start": "951839",
    "end": "954720"
  },
  {
    "text": "especially if you were wanting to do",
    "start": "954720",
    "end": "956720"
  },
  {
    "text": "different types of analysis and maybe",
    "start": "956720",
    "end": "958399"
  },
  {
    "text": "feed that data into a different system",
    "start": "958399",
    "end": "960160"
  },
  {
    "text": "as well like",
    "start": "960160",
    "end": "960880"
  },
  {
    "text": "elasticsearch for example and do other",
    "start": "960880",
    "end": "963519"
  },
  {
    "text": "work",
    "start": "963519",
    "end": "964160"
  },
  {
    "text": "that maybe isn't time stream isn't",
    "start": "964160",
    "end": "966079"
  },
  {
    "text": "designed for",
    "start": "966079",
    "end": "968880"
  },
  {
    "text": "so let's get into how you move data into",
    "start": "968880",
    "end": "971279"
  },
  {
    "text": "time stream",
    "start": "971279",
    "end": "972399"
  },
  {
    "start": "972000",
    "end": "972000"
  },
  {
    "text": "so writing data into time stream is done",
    "start": "972399",
    "end": "975040"
  },
  {
    "text": "through the aws",
    "start": "975040",
    "end": "976000"
  },
  {
    "text": "sdks so we support you know obviously",
    "start": "976000",
    "end": "978160"
  },
  {
    "text": "the common",
    "start": "978160",
    "end": "979279"
  },
  {
    "text": "development languages like java and",
    "start": "979279",
    "end": "980800"
  },
  {
    "text": "python and go and",
    "start": "980800",
    "end": "983040"
  },
  {
    "text": "node.js and such and then obviously",
    "start": "983040",
    "end": "985759"
  },
  {
    "text": "through the aws cli",
    "start": "985759",
    "end": "987680"
  },
  {
    "text": "is obviously another option as well then",
    "start": "987680",
    "end": "990480"
  },
  {
    "text": "we have some adapters and plugins",
    "start": "990480",
    "end": "992720"
  },
  {
    "text": "aws iot core does have native",
    "start": "992720",
    "end": "995279"
  },
  {
    "text": "integration",
    "start": "995279",
    "end": "996240"
  },
  {
    "text": "through the rules engine with timestream",
    "start": "996240",
    "end": "999120"
  },
  {
    "text": "and then we have",
    "start": "999120",
    "end": "1000079"
  },
  {
    "text": "a couple of connectors that we have up",
    "start": "1000079",
    "end": "1001759"
  },
  {
    "text": "on github that we've published uh ones",
    "start": "1001759",
    "end": "1004399"
  },
  {
    "text": "for",
    "start": "1004399",
    "end": "1004880"
  },
  {
    "text": "apache flink for that works with kinesis",
    "start": "1004880",
    "end": "1007600"
  },
  {
    "text": "data analytics",
    "start": "1007600",
    "end": "1008720"
  },
  {
    "text": "and another one is a telegraph connector",
    "start": "1008720",
    "end": "1011279"
  },
  {
    "text": "as we've had",
    "start": "1011279",
    "end": "1012399"
  },
  {
    "text": "you know a good number of customers ask",
    "start": "1012399",
    "end": "1014320"
  },
  {
    "text": "for telegraph support",
    "start": "1014320",
    "end": "1016240"
  },
  {
    "text": "uh to send data directly into timestream",
    "start": "1016240",
    "end": "1019759"
  },
  {
    "text": "just to give an example this this code",
    "start": "1019759",
    "end": "1021839"
  },
  {
    "start": "1020000",
    "end": "1020000"
  },
  {
    "text": "is written in python",
    "start": "1021839",
    "end": "1023360"
  },
  {
    "text": "this is a small snippet of code",
    "start": "1023360",
    "end": "1027520"
  },
  {
    "text": "that's sending you know cpu and memory",
    "start": "1027520",
    "end": "1029839"
  },
  {
    "text": "utilization",
    "start": "1029839",
    "end": "1030798"
  },
  {
    "text": "into timestream i won't get into all the",
    "start": "1030799",
    "end": "1033199"
  },
  {
    "text": "details of like you know what common",
    "start": "1033199",
    "end": "1034720"
  },
  {
    "text": "table attributes are",
    "start": "1034720",
    "end": "1036079"
  },
  {
    "text": "but that would be for a deeper session",
    "start": "1036079",
    "end": "1038640"
  },
  {
    "text": "and what we're talking about optimizing",
    "start": "1038640",
    "end": "1040240"
  },
  {
    "text": "and how you'd maybe",
    "start": "1040240",
    "end": "1041438"
  },
  {
    "text": "uh thread date uh do you know do",
    "start": "1041439",
    "end": "1043678"
  },
  {
    "text": "multi-threaded writing and all",
    "start": "1043679",
    "end": "1045280"
  },
  {
    "text": "that sort of thing but this is just a",
    "start": "1045280",
    "end": "1047520"
  },
  {
    "text": "simple example",
    "start": "1047520",
    "end": "1048640"
  },
  {
    "text": "of how you would send data into",
    "start": "1048640",
    "end": "1051360"
  },
  {
    "text": "timestream",
    "start": "1051360",
    "end": "1052640"
  },
  {
    "text": "and it is fairly simple so in the query",
    "start": "1052640",
    "end": "1056160"
  },
  {
    "text": "side of things",
    "start": "1056160",
    "end": "1058080"
  },
  {
    "start": "1058000",
    "end": "1058000"
  },
  {
    "text": "we mostly support ansi sql 2003",
    "start": "1058080",
    "end": "1061760"
  },
  {
    "text": "for the querying the one piece that's",
    "start": "1061760",
    "end": "1065600"
  },
  {
    "text": "not there is table joins",
    "start": "1065600",
    "end": "1070000"
  },
  {
    "text": "so we do support table joins but only to",
    "start": "1070000",
    "end": "1072960"
  },
  {
    "text": "the same table",
    "start": "1072960",
    "end": "1074480"
  },
  {
    "text": "so you can't join across from one table",
    "start": "1074480",
    "end": "1078080"
  },
  {
    "text": "to another table um so yeah we're we",
    "start": "1078080",
    "end": "1081280"
  },
  {
    "text": "we do only support um you know you could",
    "start": "1081280",
    "end": "1083520"
  },
  {
    "text": "do",
    "start": "1083520",
    "end": "1084480"
  },
  {
    "text": "just to give an example you could do a",
    "start": "1084480",
    "end": "1086160"
  },
  {
    "text": "self table join to the same table",
    "start": "1086160",
    "end": "1088960"
  },
  {
    "text": "um using like a common table expression",
    "start": "1088960",
    "end": "1091600"
  },
  {
    "text": "which is technically behind the scenes",
    "start": "1091600",
    "end": "1093280"
  },
  {
    "text": "generating some",
    "start": "1093280",
    "end": "1094480"
  },
  {
    "text": "uh you know maybe temp data and that",
    "start": "1094480",
    "end": "1096080"
  },
  {
    "text": "sort of thing you can join between",
    "start": "1096080",
    "end": "1098960"
  },
  {
    "text": "um you know things within the single",
    "start": "1098960",
    "end": "1101200"
  },
  {
    "text": "query uh to yourself",
    "start": "1101200",
    "end": "1103039"
  },
  {
    "text": "whether it's uh you know to through a",
    "start": "1103039",
    "end": "1105200"
  },
  {
    "text": "common table expression or some other",
    "start": "1105200",
    "end": "1107360"
  },
  {
    "text": "semantic just a self-join this does mean",
    "start": "1107360",
    "end": "1111039"
  },
  {
    "text": "that",
    "start": "1111039",
    "end": "1111679"
  },
  {
    "text": "because we do support standard sql that",
    "start": "1111679",
    "end": "1114480"
  },
  {
    "text": "you don't need to",
    "start": "1114480",
    "end": "1115600"
  },
  {
    "text": "you know learn any new language it is",
    "start": "1115600",
    "end": "1117840"
  },
  {
    "text": "just standard sql",
    "start": "1117840",
    "end": "1119520"
  },
  {
    "text": "and we do support all the common",
    "start": "1119520",
    "end": "1122640"
  },
  {
    "text": "functions i think that most customers",
    "start": "1122640",
    "end": "1124400"
  },
  {
    "text": "would expect such as",
    "start": "1124400",
    "end": "1125760"
  },
  {
    "text": "you know scalars and aggregates and",
    "start": "1125760",
    "end": "1127280"
  },
  {
    "text": "windowing functions and stuff",
    "start": "1127280",
    "end": "1129039"
  },
  {
    "text": "and obviously the time series and",
    "start": "1129039",
    "end": "1131919"
  },
  {
    "text": "interpolation functions which i talked",
    "start": "1131919",
    "end": "1133600"
  },
  {
    "text": "about",
    "start": "1133600",
    "end": "1134799"
  },
  {
    "text": "a few slides ago that we also have added",
    "start": "1134799",
    "end": "1138400"
  },
  {
    "text": "data is queried it can be queried",
    "start": "1138400",
    "end": "1140240"
  },
  {
    "text": "through the exact same set of",
    "start": "1140240",
    "end": "1141840"
  },
  {
    "text": "sdks for java and python and such",
    "start": "1141840",
    "end": "1146160"
  },
  {
    "text": "or it can also be queried through jdbc",
    "start": "1146160",
    "end": "1148320"
  },
  {
    "text": "we do have a jdbc",
    "start": "1148320",
    "end": "1149520"
  },
  {
    "text": "driver that you know you could if you're",
    "start": "1149520",
    "end": "1152160"
  },
  {
    "text": "writing code in java you could use that",
    "start": "1152160",
    "end": "1154960"
  },
  {
    "text": "instead of the java sdk and that might",
    "start": "1154960",
    "end": "1158160"
  },
  {
    "text": "give you more of a common interface",
    "start": "1158160",
    "end": "1160240"
  },
  {
    "text": "it's going to feel more like a database",
    "start": "1160240",
    "end": "1163280"
  },
  {
    "start": "1163000",
    "end": "1163000"
  },
  {
    "text": "again here's just a quick example of",
    "start": "1163280",
    "end": "1165679"
  },
  {
    "text": "some of the",
    "start": "1165679",
    "end": "1167200"
  },
  {
    "text": "of sql written against time stream and",
    "start": "1167200",
    "end": "1170320"
  },
  {
    "text": "you can see the various breadth of",
    "start": "1170320",
    "end": "1172000"
  },
  {
    "text": "functions like approximate percentiles",
    "start": "1172000",
    "end": "1174080"
  },
  {
    "text": "and averages and round functions and",
    "start": "1174080",
    "end": "1176559"
  },
  {
    "text": "bin functions and all that kind of stuff",
    "start": "1176559",
    "end": "1179120"
  },
  {
    "text": "and again like i said we cover",
    "start": "1179120",
    "end": "1181120"
  },
  {
    "text": "and have support for most of the common",
    "start": "1181120",
    "end": "1184480"
  },
  {
    "text": "uh things that you'd be used to if",
    "start": "1184480",
    "end": "1186160"
  },
  {
    "text": "you're used to a standard relational",
    "start": "1186160",
    "end": "1188240"
  },
  {
    "text": "database that has",
    "start": "1188240",
    "end": "1189520"
  },
  {
    "text": "standard relational sql database i",
    "start": "1189520",
    "end": "1191280"
  },
  {
    "text": "should say",
    "start": "1191280",
    "end": "1193120"
  },
  {
    "text": "so let's go through some of the",
    "start": "1193120",
    "end": "1194480"
  },
  {
    "text": "integrations that we support",
    "start": "1194480",
    "end": "1196320"
  },
  {
    "text": "so we do have the amazon quick site team",
    "start": "1196320",
    "end": "1200000"
  },
  {
    "text": "has built support for timestream so if",
    "start": "1200000",
    "end": "1202320"
  },
  {
    "text": "you're a quick site user",
    "start": "1202320",
    "end": "1204159"
  },
  {
    "text": "you know you'll be able to go and begin",
    "start": "1204159",
    "end": "1206000"
  },
  {
    "text": "running reports inside chickens time",
    "start": "1206000",
    "end": "1207919"
  },
  {
    "text": "stream",
    "start": "1207919",
    "end": "1208559"
  },
  {
    "text": "we also have you know the aws iot core",
    "start": "1208559",
    "end": "1211039"
  },
  {
    "text": "which i mentioned earlier",
    "start": "1211039",
    "end": "1212559"
  },
  {
    "text": "can send data into amazon timestream",
    "start": "1212559",
    "end": "1215679"
  },
  {
    "text": "grafana that is also one that is",
    "start": "1215679",
    "end": "1217600"
  },
  {
    "text": "commonly asked for so we do have",
    "start": "1217600",
    "end": "1220159"
  },
  {
    "text": "or grifana supports uh plugin with the",
    "start": "1220159",
    "end": "1222880"
  },
  {
    "text": "open source edition",
    "start": "1222880",
    "end": "1224720"
  },
  {
    "text": "that works with time stream as well",
    "start": "1224720",
    "end": "1229600"
  },
  {
    "text": "through our jdbc driver you'll find that",
    "start": "1229600",
    "end": "1231919"
  },
  {
    "text": "most of the common",
    "start": "1231919",
    "end": "1233919"
  },
  {
    "text": "sql development tools and such",
    "start": "1233919",
    "end": "1237200"
  },
  {
    "text": "work with time stream and then as i",
    "start": "1237200",
    "end": "1240320"
  },
  {
    "text": "mentioned earlier",
    "start": "1240320",
    "end": "1241360"
  },
  {
    "text": "the various you know connectors and",
    "start": "1241360",
    "end": "1244080"
  },
  {
    "text": "stuff that",
    "start": "1244080",
    "end": "1245039"
  },
  {
    "text": "talked about uh you know we have a those",
    "start": "1245039",
    "end": "1247120"
  },
  {
    "text": "are all up on github",
    "start": "1247120",
    "end": "1248799"
  },
  {
    "text": "and uh yeah that's where you'd go to",
    "start": "1248799",
    "end": "1250880"
  },
  {
    "text": "find those",
    "start": "1250880",
    "end": "1252320"
  },
  {
    "text": "so just to give a quick example of uh",
    "start": "1252320",
    "end": "1254880"
  },
  {
    "start": "1253000",
    "end": "1253000"
  },
  {
    "text": "time stream",
    "start": "1254880",
    "end": "1255600"
  },
  {
    "text": "plus jdbc uh this is just off my",
    "start": "1255600",
    "end": "1257679"
  },
  {
    "text": "development environment",
    "start": "1257679",
    "end": "1259120"
  },
  {
    "text": "uh this screenshot here and you can see",
    "start": "1259120",
    "end": "1260960"
  },
  {
    "text": "you know this is uh",
    "start": "1260960",
    "end": "1262880"
  },
  {
    "text": "me just working on my uh some just a sql",
    "start": "1262880",
    "end": "1266000"
  },
  {
    "text": "query as writing some sample queries and",
    "start": "1266000",
    "end": "1267679"
  },
  {
    "text": "such",
    "start": "1267679",
    "end": "1268320"
  },
  {
    "text": "and uh it's pretty simple and",
    "start": "1268320",
    "end": "1270159"
  },
  {
    "text": "straightforward to hook up these tools",
    "start": "1270159",
    "end": "1272159"
  },
  {
    "text": "uh to work with timestream uh this is",
    "start": "1272159",
    "end": "1275280"
  },
  {
    "start": "1274000",
    "end": "1274000"
  },
  {
    "text": "a screenshot of time streaming grafana",
    "start": "1275280",
    "end": "1278559"
  },
  {
    "text": "working",
    "start": "1278559",
    "end": "1279200"
  },
  {
    "text": "uh this is also some sample data that",
    "start": "1279200",
    "end": "1280960"
  },
  {
    "text": "was sent in over a",
    "start": "1280960",
    "end": "1282320"
  },
  {
    "text": "few several hours and you can see kind",
    "start": "1282320",
    "end": "1284799"
  },
  {
    "text": "of the",
    "start": "1284799",
    "end": "1285760"
  },
  {
    "text": "in this case was actually one of the",
    "start": "1285760",
    "end": "1286960"
  },
  {
    "text": "create time series functions there",
    "start": "1286960",
    "end": "1289679"
  },
  {
    "text": "you know running of this data against uh",
    "start": "1289679",
    "end": "1292960"
  },
  {
    "text": "time stream uh from grafana this is also",
    "start": "1292960",
    "end": "1296720"
  },
  {
    "text": "uh time stream plus grafana this one's",
    "start": "1296720",
    "end": "1298880"
  },
  {
    "text": "not quite the",
    "start": "1298880",
    "end": "1299840"
  },
  {
    "text": "line charts but you know some of the",
    "start": "1299840",
    "end": "1301760"
  },
  {
    "text": "other types of things",
    "start": "1301760",
    "end": "1302880"
  },
  {
    "text": "visualizations that grafana supports and",
    "start": "1302880",
    "end": "1305760"
  },
  {
    "text": "then we have",
    "start": "1305760",
    "end": "1306799"
  },
  {
    "text": "you know time stream running against",
    "start": "1306799",
    "end": "1309679"
  },
  {
    "text": "quicksite as well",
    "start": "1309679",
    "end": "1311360"
  },
  {
    "text": "so what we're going to do is at this",
    "start": "1311360",
    "end": "1313360"
  },
  {
    "text": "point we're going to cut over",
    "start": "1313360",
    "end": "1315600"
  },
  {
    "text": "to the console tour",
    "start": "1315600",
    "end": "1319520"
  },
  {
    "text": "all right now that we're in the amazon",
    "start": "1319520",
    "end": "1321360"
  },
  {
    "text": "timestream console",
    "start": "1321360",
    "end": "1322960"
  },
  {
    "text": "you're going to notice that there's this",
    "start": "1322960",
    "end": "1324960"
  },
  {
    "text": "link over here which takes you over to",
    "start": "1324960",
    "end": "1326559"
  },
  {
    "text": "the pricing",
    "start": "1326559",
    "end": "1327919"
  },
  {
    "text": "expanding this panel here on the left",
    "start": "1327919",
    "end": "1329919"
  },
  {
    "text": "you're going to notice you know things",
    "start": "1329919",
    "end": "1331120"
  },
  {
    "text": "like the database",
    "start": "1331120",
    "end": "1332720"
  },
  {
    "text": "query editor and monitoring such",
    "start": "1332720",
    "end": "1335840"
  },
  {
    "text": "i'm just going to go ahead and click",
    "start": "1335840",
    "end": "1337039"
  },
  {
    "text": "this create database button over here",
    "start": "1337039",
    "end": "1339760"
  },
  {
    "text": "what you're going to notice is you have",
    "start": "1339760",
    "end": "1341200"
  },
  {
    "text": "the sample database",
    "start": "1341200",
    "end": "1343200"
  },
  {
    "text": "standard database as your kind of two",
    "start": "1343200",
    "end": "1345039"
  },
  {
    "text": "options when you come in here",
    "start": "1345039",
    "end": "1346640"
  },
  {
    "text": "i'm just going to click on the standard",
    "start": "1346640",
    "end": "1348000"
  },
  {
    "text": "database for a second here you're going",
    "start": "1348000",
    "end": "1349440"
  },
  {
    "text": "to notice you can you know",
    "start": "1349440",
    "end": "1350799"
  },
  {
    "text": "give this database a name pick a kms key",
    "start": "1350799",
    "end": "1354559"
  },
  {
    "text": "and optionally add tags",
    "start": "1354559",
    "end": "1357760"
  },
  {
    "text": "to this database go back to the sample",
    "start": "1357760",
    "end": "1360720"
  },
  {
    "text": "database here and",
    "start": "1360720",
    "end": "1361760"
  },
  {
    "text": "as i mentioned before you know you add a",
    "start": "1361760",
    "end": "1363600"
  },
  {
    "text": "name to this so i'm just going to you",
    "start": "1363600",
    "end": "1364880"
  },
  {
    "text": "know",
    "start": "1364880",
    "end": "1365679"
  },
  {
    "text": "just add some name and then down below",
    "start": "1365679",
    "end": "1368880"
  },
  {
    "text": "here we have",
    "start": "1368880",
    "end": "1370480"
  },
  {
    "text": "two options for tables so we can you",
    "start": "1370480",
    "end": "1373120"
  },
  {
    "text": "know create an iot table",
    "start": "1373120",
    "end": "1374880"
  },
  {
    "text": "and a devops table i'm going to actually",
    "start": "1374880",
    "end": "1377760"
  },
  {
    "text": "create both of them but",
    "start": "1377760",
    "end": "1379280"
  },
  {
    "text": "make a note that there is some sample",
    "start": "1379280",
    "end": "1381360"
  },
  {
    "text": "data that is loaded in here",
    "start": "1381360",
    "end": "1383520"
  },
  {
    "text": "and then there would be the associated",
    "start": "1383520",
    "end": "1385120"
  },
  {
    "text": "charges for that",
    "start": "1385120",
    "end": "1387280"
  },
  {
    "text": "amount of data so clicking the create",
    "start": "1387280",
    "end": "1390000"
  },
  {
    "text": "database button here",
    "start": "1390000",
    "end": "1391840"
  },
  {
    "text": "you should notice the success banner",
    "start": "1391840",
    "end": "1393679"
  },
  {
    "text": "here at the top and the table",
    "start": "1393679",
    "end": "1395280"
  },
  {
    "text": "database appearing down here so i'm just",
    "start": "1395280",
    "end": "1397840"
  },
  {
    "text": "going to select this database",
    "start": "1397840",
    "end": "1399760"
  },
  {
    "text": "and you're going to have the two tables",
    "start": "1399760",
    "end": "1401440"
  },
  {
    "text": "that belong to it",
    "start": "1401440",
    "end": "1403120"
  },
  {
    "text": "i'm going to click on i'll just go on",
    "start": "1403120",
    "end": "1404799"
  },
  {
    "text": "this devops one here",
    "start": "1404799",
    "end": "1407039"
  },
  {
    "text": "going in the devops table here you're",
    "start": "1407039",
    "end": "1408799"
  },
  {
    "text": "going to notice there's a one day of",
    "start": "1408799",
    "end": "1411440"
  },
  {
    "text": "memory retention and five years here of",
    "start": "1411440",
    "end": "1414880"
  },
  {
    "text": "magnetic retention just to illustrate",
    "start": "1414880",
    "end": "1418480"
  },
  {
    "text": "you know going in here i'm going to just",
    "start": "1418480",
    "end": "1420480"
  },
  {
    "text": "change this to",
    "start": "1420480",
    "end": "1422000"
  },
  {
    "text": "12 hours of in-memory retention and",
    "start": "1422000",
    "end": "1425360"
  },
  {
    "text": "we'll just do",
    "start": "1425360",
    "end": "1426400"
  },
  {
    "text": "you know maybe a year of retention for",
    "start": "1426400",
    "end": "1428720"
  },
  {
    "text": "the magnetic store",
    "start": "1428720",
    "end": "1430799"
  },
  {
    "text": "i'm just going to click save notice",
    "start": "1430799",
    "end": "1432960"
  },
  {
    "text": "there's a warning here because we are",
    "start": "1432960",
    "end": "1434320"
  },
  {
    "text": "reducing",
    "start": "1434320",
    "end": "1435440"
  },
  {
    "text": "the amount of storage which could cause",
    "start": "1435440",
    "end": "1439120"
  },
  {
    "text": "data loss but in this case there won't",
    "start": "1439120",
    "end": "1440960"
  },
  {
    "text": "be any in my case so i'm not too worried",
    "start": "1440960",
    "end": "1442720"
  },
  {
    "text": "about this",
    "start": "1442720",
    "end": "1443760"
  },
  {
    "text": "so click save there and we have our",
    "start": "1443760",
    "end": "1446880"
  },
  {
    "text": "new retention policy set next i'm going",
    "start": "1446880",
    "end": "1449840"
  },
  {
    "text": "to go into the query editor over here",
    "start": "1449840",
    "end": "1452400"
  },
  {
    "text": "and over on the side you can see this is",
    "start": "1452400",
    "end": "1454400"
  },
  {
    "text": "the only database i have in this",
    "start": "1454400",
    "end": "1456000"
  },
  {
    "text": "in here but i can expand these here and",
    "start": "1456000",
    "end": "1458799"
  },
  {
    "text": "you can see the",
    "start": "1458799",
    "end": "1459760"
  },
  {
    "text": "columns that are available",
    "start": "1459760",
    "end": "1462880"
  },
  {
    "text": "within each of these tables for the",
    "start": "1462880",
    "end": "1465120"
  },
  {
    "text": "various records so if i were to",
    "start": "1465120",
    "end": "1467360"
  },
  {
    "text": "maybe just preview the data you're going",
    "start": "1467360",
    "end": "1469440"
  },
  {
    "text": "to see that we're going to get this",
    "start": "1469440",
    "end": "1470880"
  },
  {
    "text": "simple sql here",
    "start": "1470880",
    "end": "1472720"
  },
  {
    "text": "that's just going to query out a 100",
    "start": "1472720",
    "end": "1474640"
  },
  {
    "text": "records out of the table and you can see",
    "start": "1474640",
    "end": "1476480"
  },
  {
    "text": "you know 100 records down here it's a",
    "start": "1476480",
    "end": "1478720"
  },
  {
    "text": "pretty simple query so let's go to some",
    "start": "1478720",
    "end": "1480400"
  },
  {
    "text": "more",
    "start": "1480400",
    "end": "1480799"
  },
  {
    "text": "something a little bit more advanced",
    "start": "1480799",
    "end": "1482720"
  },
  {
    "text": "here so if i click on the sample queries",
    "start": "1482720",
    "end": "1484559"
  },
  {
    "text": "over here",
    "start": "1484559",
    "end": "1486000"
  },
  {
    "text": "you're going to notice that we have",
    "start": "1486000",
    "end": "1489200"
  },
  {
    "text": "you know a handful of them there's",
    "start": "1489200",
    "end": "1490320"
  },
  {
    "text": "actually a couple pages here",
    "start": "1490320",
    "end": "1492320"
  },
  {
    "text": "so maybe i'll pick this one here",
    "start": "1492320",
    "end": "1495520"
  },
  {
    "text": "this is a more interesting query this",
    "start": "1495520",
    "end": "1497840"
  },
  {
    "text": "one is",
    "start": "1497840",
    "end": "1498880"
  },
  {
    "text": "about binning the data and then",
    "start": "1498880",
    "end": "1501679"
  },
  {
    "text": "interpolating in",
    "start": "1501679",
    "end": "1503200"
  },
  {
    "text": "gaps in the data in this particular case",
    "start": "1503200",
    "end": "1506960"
  },
  {
    "text": "you know we're going to create the",
    "start": "1506960",
    "end": "1508159"
  },
  {
    "text": "sequence of records",
    "start": "1508159",
    "end": "1510000"
  },
  {
    "text": "and then we're going to do this",
    "start": "1510000",
    "end": "1510960"
  },
  {
    "text": "interpolate fill function here",
    "start": "1510960",
    "end": "1513679"
  },
  {
    "text": "run that on here you'll notice down here",
    "start": "1513679",
    "end": "1516720"
  },
  {
    "text": "there is this cross joint syntax that's",
    "start": "1516720",
    "end": "1518720"
  },
  {
    "text": "going to cross",
    "start": "1518720",
    "end": "1519279"
  },
  {
    "text": "join these between these series",
    "start": "1519279",
    "end": "1523120"
  },
  {
    "text": "up here so you can see that like i",
    "start": "1523120",
    "end": "1524640"
  },
  {
    "text": "mentioned earlier this is a common table",
    "start": "1524640",
    "end": "1526720"
  },
  {
    "text": "expression here",
    "start": "1526720",
    "end": "1528559"
  },
  {
    "text": "and we're going to select from the",
    "start": "1528559",
    "end": "1530320"
  },
  {
    "text": "interpolated time series here",
    "start": "1530320",
    "end": "1533200"
  },
  {
    "text": "so if i were to run this",
    "start": "1533200",
    "end": "1536320"
  },
  {
    "text": "you'll see we get the output and you can",
    "start": "1536799",
    "end": "1539120"
  },
  {
    "text": "see these",
    "start": "1539120",
    "end": "1539919"
  },
  {
    "text": "interpolated you know",
    "start": "1539919",
    "end": "1543200"
  },
  {
    "text": "values of 10 cpu utilization",
    "start": "1543200",
    "end": "1546720"
  },
  {
    "text": "being filled in into the gaps",
    "start": "1546720",
    "end": "1549919"
  },
  {
    "text": "that we've artificially created when",
    "start": "1549919",
    "end": "1551679"
  },
  {
    "text": "we've created this uh",
    "start": "1551679",
    "end": "1553279"
  },
  {
    "text": "this sequence here so that's really just",
    "start": "1553279",
    "end": "1556320"
  },
  {
    "text": "kind of a",
    "start": "1556320",
    "end": "1557039"
  },
  {
    "text": "simple walk through of the time stream",
    "start": "1557039",
    "end": "1560320"
  },
  {
    "text": "console really the only other area",
    "start": "1560320",
    "end": "1562880"
  },
  {
    "text": "really to check out here would be the",
    "start": "1562880",
    "end": "1564640"
  },
  {
    "text": "account metrics",
    "start": "1564640",
    "end": "1565840"
  },
  {
    "text": "which will give you some sort of idea of",
    "start": "1565840",
    "end": "1568960"
  },
  {
    "text": "your",
    "start": "1568960",
    "end": "1569600"
  },
  {
    "text": "usage of the system and you'll see like",
    "start": "1569600",
    "end": "1572640"
  },
  {
    "text": "things in here like around the ingestion",
    "start": "1572640",
    "end": "1574480"
  },
  {
    "text": "latency",
    "start": "1574480",
    "end": "1575279"
  },
  {
    "text": "and um you know number of",
    "start": "1575279",
    "end": "1578320"
  },
  {
    "text": "requests and such um",
    "start": "1578320",
    "end": "1585840"
  },
  {
    "text": "so yeah that's the walkthrough of the",
    "start": "1586480",
    "end": "1588240"
  },
  {
    "text": "amazon timestream",
    "start": "1588240",
    "end": "1590000"
  },
  {
    "text": "console thank you guys very much and i",
    "start": "1590000",
    "end": "1593039"
  },
  {
    "text": "hope you found this useful",
    "start": "1593039",
    "end": "1599840"
  },
  {
    "text": "you",
    "start": "1600320",
    "end": "1602399"
  }
]