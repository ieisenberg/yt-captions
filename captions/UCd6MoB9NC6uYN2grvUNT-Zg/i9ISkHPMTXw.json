[
  {
    "text": "hi everyone thanks for joining us today",
    "start": "0",
    "end": "2820"
  },
  {
    "text": "my name is Stefan Buckman and I'm a",
    "start": "2820",
    "end": "4470"
  },
  {
    "text": "Solutions Architect with AWS in today's",
    "start": "4470",
    "end": "7379"
  },
  {
    "text": "session we're going to talk about the",
    "start": "7379",
    "end": "8849"
  },
  {
    "text": "blending of AI services through the use",
    "start": "8849",
    "end": "10889"
  },
  {
    "text": "of Amazon Connect our contact center",
    "start": "10889",
    "end": "13049"
  },
  {
    "text": "service and Amazon Lex our natural",
    "start": "13049",
    "end": "15480"
  },
  {
    "text": "language understanding service to create",
    "start": "15480",
    "end": "17279"
  },
  {
    "text": "AI solutions for you and your customers",
    "start": "17279",
    "end": "19770"
  },
  {
    "text": "that can be reused across many channels",
    "start": "19770",
    "end": "22020"
  },
  {
    "text": "of engagement but first before we delve",
    "start": "22020",
    "end": "25289"
  },
  {
    "text": "into the technology let's start off with",
    "start": "25289",
    "end": "27060"
  },
  {
    "text": "a problem at Amazon we believe in",
    "start": "27060",
    "end": "29279"
  },
  {
    "text": "working backwards from the customer many",
    "start": "29279",
    "end": "31619"
  },
  {
    "text": "of today's contact center experiences",
    "start": "31619",
    "end": "33390"
  },
  {
    "text": "are driven by static and unintuitive",
    "start": "33390",
    "end": "35309"
  },
  {
    "text": "automation this leads to customer",
    "start": "35309",
    "end": "37649"
  },
  {
    "text": "engagements that are not personalized",
    "start": "37649",
    "end": "39360"
  },
  {
    "text": "and don't build a context or persona of",
    "start": "39360",
    "end": "41640"
  },
  {
    "text": "our customer that may assist us in",
    "start": "41640",
    "end": "43559"
  },
  {
    "text": "determining what they're looking for",
    "start": "43559",
    "end": "45140"
  },
  {
    "text": "when this automation fails or doesn't",
    "start": "45140",
    "end": "47940"
  },
  {
    "text": "understand the customer information is",
    "start": "47940",
    "end": "49710"
  },
  {
    "text": "often repeated sometimes multiple times",
    "start": "49710",
    "end": "51870"
  },
  {
    "text": "at the end of this you end up with a",
    "start": "51870",
    "end": "54059"
  },
  {
    "text": "customer that's frustrated one that",
    "start": "54059",
    "end": "56430"
  },
  {
    "text": "either hangs up or is transferred to an",
    "start": "56430",
    "end": "58260"
  },
  {
    "text": "agent to triage accordingly let's look",
    "start": "58260",
    "end": "60930"
  },
  {
    "text": "at what this feels like from an agent's",
    "start": "60930",
    "end": "62609"
  },
  {
    "text": "perspective our agent in this case is",
    "start": "62609",
    "end": "65460"
  },
  {
    "text": "answering a call from a customer that",
    "start": "65460",
    "end": "67170"
  },
  {
    "text": "already has a negative viewpoint and is",
    "start": "67170",
    "end": "69119"
  },
  {
    "text": "likely frustrated",
    "start": "69119",
    "end": "70229"
  },
  {
    "text": "moreover the context that might be built",
    "start": "70229",
    "end": "72600"
  },
  {
    "text": "from the automation side is often not",
    "start": "72600",
    "end": "74490"
  },
  {
    "text": "available to the agent this leads to our",
    "start": "74490",
    "end": "76950"
  },
  {
    "text": "customer having to repeat information",
    "start": "76950",
    "end": "78630"
  },
  {
    "text": "all over again",
    "start": "78630",
    "end": "80210"
  },
  {
    "text": "you end up with a frustrated customer",
    "start": "80210",
    "end": "83009"
  },
  {
    "text": "and a frustrated agent ultimately",
    "start": "83009",
    "end": "85439"
  },
  {
    "text": "leading to high attrition rates for your",
    "start": "85439",
    "end": "86970"
  },
  {
    "text": "agents and customers who are either",
    "start": "86970",
    "end": "88619"
  },
  {
    "text": "likely to look for a better customer",
    "start": "88619",
    "end": "90000"
  },
  {
    "text": "service experience now let's imagine if",
    "start": "90000",
    "end": "93180"
  },
  {
    "text": "we could create a more personalized and",
    "start": "93180",
    "end": "95040"
  },
  {
    "text": "consistent experience for our customers",
    "start": "95040",
    "end": "97130"
  },
  {
    "text": "identifying our customer without them",
    "start": "97130",
    "end": "99390"
  },
  {
    "text": "having to provide long account numbers",
    "start": "99390",
    "end": "101250"
  },
  {
    "text": "or information that could be",
    "start": "101250",
    "end": "102840"
  },
  {
    "text": "misinterpreted what if we could",
    "start": "102840",
    "end": "105060"
  },
  {
    "text": "anticipate our customers needs based on",
    "start": "105060",
    "end": "107159"
  },
  {
    "text": "information we already had and use that",
    "start": "107159",
    "end": "110009"
  },
  {
    "text": "information to build the context around",
    "start": "110009",
    "end": "111780"
  },
  {
    "text": "our customer could we optimize our agent",
    "start": "111780",
    "end": "114540"
  },
  {
    "text": "utilization by having our agents focus",
    "start": "114540",
    "end": "116640"
  },
  {
    "text": "on high-value interactions instead of",
    "start": "116640",
    "end": "119219"
  },
  {
    "text": "common tasks that could be better",
    "start": "119219",
    "end": "120719"
  },
  {
    "text": "handled by AI and freeing up our agent",
    "start": "120719",
    "end": "124110"
  },
  {
    "text": "we can increase the contact centers",
    "start": "124110",
    "end": "125759"
  },
  {
    "text": "productivity and most importantly",
    "start": "125759",
    "end": "127649"
  },
  {
    "text": "provide for happier customer experience",
    "start": "127649",
    "end": "129920"
  },
  {
    "text": "at Amazon we strive to be earth's most",
    "start": "129920",
    "end": "132720"
  },
  {
    "text": "customers",
    "start": "132720",
    "end": "133520"
  },
  {
    "text": "company we support millions of customers",
    "start": "133520",
    "end": "135800"
  },
  {
    "text": "in over 32 countries globally we have",
    "start": "135800",
    "end": "138650"
  },
  {
    "text": "over 70,000 customer service associates",
    "start": "138650",
    "end": "141050"
  },
  {
    "text": "of which over 1500 work from home we",
    "start": "141050",
    "end": "144260"
  },
  {
    "text": "needed the right solution to match our",
    "start": "144260",
    "end": "146210"
  },
  {
    "text": "customer commitment as we looked at the",
    "start": "146210",
    "end": "148310"
  },
  {
    "text": "available options in the market we found",
    "start": "148310",
    "end": "150080"
  },
  {
    "text": "they suffered from a number of problems",
    "start": "150080",
    "end": "152140"
  },
  {
    "text": "firstly the tools were cumbersome and",
    "start": "152140",
    "end": "154460"
  },
  {
    "text": "required highly technical and nisha",
    "start": "154460",
    "end": "156440"
  },
  {
    "text": "expertise to implement correctly the",
    "start": "156440",
    "end": "158870"
  },
  {
    "text": "integrations were complex and in many",
    "start": "158870",
    "end": "160970"
  },
  {
    "text": "cases very limited they would have",
    "start": "160970",
    "end": "163160"
  },
  {
    "text": "required multiple components vendors and",
    "start": "163160",
    "end": "165380"
  },
  {
    "text": "in some cases very specific back-end",
    "start": "165380",
    "end": "167360"
  },
  {
    "text": "technologies the systems themselves were",
    "start": "167360",
    "end": "170810"
  },
  {
    "text": "built on proprietary environments",
    "start": "170810",
    "end": "172520"
  },
  {
    "text": "requiring a large professional services",
    "start": "172520",
    "end": "174470"
  },
  {
    "text": "commitment on top of that we needed a",
    "start": "174470",
    "end": "176630"
  },
  {
    "text": "solution that was secure reliable and",
    "start": "176630",
    "end": "179120"
  },
  {
    "text": "could scale as an example on prime day",
    "start": "179120",
    "end": "182180"
  },
  {
    "text": "we needed a solution that could scale to",
    "start": "182180",
    "end": "184550"
  },
  {
    "text": "meet high call volumes on a single day",
    "start": "184550",
    "end": "187130"
  },
  {
    "text": "however it also needed to be able to",
    "start": "187130",
    "end": "189260"
  },
  {
    "text": "scale back down quickly as that demand",
    "start": "189260",
    "end": "191450"
  },
  {
    "text": "reduced finally pricing models were",
    "start": "191450",
    "end": "194180"
  },
  {
    "text": "complex in most cases requiring long",
    "start": "194180",
    "end": "196400"
  },
  {
    "text": "term contracts we knew we needed a",
    "start": "196400",
    "end": "199040"
  },
  {
    "text": "better way for our agents to engage with",
    "start": "199040",
    "end": "201020"
  },
  {
    "text": "our customers Amazon Connect is the",
    "start": "201020",
    "end": "203600"
  },
  {
    "text": "contact center solution we designed and",
    "start": "203600",
    "end": "205459"
  },
  {
    "text": "built to allow Amazon to deliver on an",
    "start": "205459",
    "end": "207800"
  },
  {
    "text": "exceptional customer experience it",
    "start": "207800",
    "end": "210200"
  },
  {
    "text": "includes all the standard functionality",
    "start": "210200",
    "end": "212000"
  },
  {
    "text": "Tech Center Operations teams have come",
    "start": "212000",
    "end": "214459"
  },
  {
    "text": "to expect skills based routing allows",
    "start": "214459",
    "end": "217280"
  },
  {
    "text": "for a mix of AI and agent interactions",
    "start": "217280",
    "end": "219950"
  },
  {
    "text": "to maximize the efficiency of agents",
    "start": "219950",
    "end": "221900"
  },
  {
    "text": "while addressing customer needs without",
    "start": "221900",
    "end": "223910"
  },
  {
    "text": "agent interaction calls are recorded and",
    "start": "223910",
    "end": "226730"
  },
  {
    "text": "stored on Amazon s3 our cloud-based",
    "start": "226730",
    "end": "228980"
  },
  {
    "text": "objects store where they can be analyzed",
    "start": "228980",
    "end": "231560"
  },
  {
    "text": "and processed through other services for",
    "start": "231560",
    "end": "234200"
  },
  {
    "text": "instance you could use Amazon transcribe",
    "start": "234200",
    "end": "236570"
  },
  {
    "text": "to convert calls to text and process",
    "start": "236570",
    "end": "239090"
  },
  {
    "text": "through Amazon comprehend to perform",
    "start": "239090",
    "end": "240980"
  },
  {
    "text": "sentiment analysis all the common",
    "start": "240980",
    "end": "244760"
  },
  {
    "text": "reports also available like service",
    "start": "244760",
    "end": "246740"
  },
  {
    "text": "level and agent performance there are",
    "start": "246740",
    "end": "249170"
  },
  {
    "text": "four main areas I wanted to delve deeper",
    "start": "249170",
    "end": "251360"
  },
  {
    "text": "on firstly Amazon connect is centered",
    "start": "251360",
    "end": "253880"
  },
  {
    "text": "around self-service configuration like",
    "start": "253880",
    "end": "255800"
  },
  {
    "text": "all Amazon services that means that",
    "start": "255800",
    "end": "258350"
  },
  {
    "text": "there are no complex deployment or",
    "start": "258350",
    "end": "260030"
  },
  {
    "text": "hardware integration requirements what",
    "start": "260030",
    "end": "262850"
  },
  {
    "text": "other solutions can take from 6 to 18",
    "start": "262850",
    "end": "264770"
  },
  {
    "text": "months to set up and deploy you could be",
    "start": "264770",
    "end": "266930"
  },
  {
    "text": "ready to",
    "start": "266930",
    "end": "267470"
  },
  {
    "text": "take calls with Amazon connect in",
    "start": "267470",
    "end": "269300"
  },
  {
    "text": "minutes interactions are designed using",
    "start": "269300",
    "end": "272900"
  },
  {
    "text": "the contact flow engine which we'll see",
    "start": "272900",
    "end": "274880"
  },
  {
    "text": "a bit later in the demo the contact flow",
    "start": "274880",
    "end": "277130"
  },
  {
    "text": "engine is dynamic and personal meaning",
    "start": "277130",
    "end": "279320"
  },
  {
    "text": "the service is able to plug into your",
    "start": "279320",
    "end": "280880"
  },
  {
    "text": "existing customer data stores where you",
    "start": "280880",
    "end": "283130"
  },
  {
    "text": "anticipate your customer needs as well",
    "start": "283130",
    "end": "285230"
  },
  {
    "text": "as provide highly personalized services",
    "start": "285230",
    "end": "287480"
  },
  {
    "text": "for your customers to interact with more",
    "start": "287480",
    "end": "290390"
  },
  {
    "text": "than that you can design conversational",
    "start": "290390",
    "end": "292370"
  },
  {
    "text": "interactions that feel natural to your",
    "start": "292370",
    "end": "294170"
  },
  {
    "text": "customers by integrating with Amazon Lex",
    "start": "294170",
    "end": "297040"
  },
  {
    "text": "let's look at an example of this",
    "start": "297040",
    "end": "299120"
  },
  {
    "text": "interaction and how a personal and",
    "start": "299120",
    "end": "301220"
  },
  {
    "text": "natural flow is established with our",
    "start": "301220",
    "end": "303020"
  },
  {
    "text": "customer",
    "start": "303020",
    "end": "305500"
  },
  {
    "text": "hi Nikki wolf I see your flight was",
    "start": "311340",
    "end": "314770"
  },
  {
    "text": "canceled today how can I help you",
    "start": "314770",
    "end": "317550"
  },
  {
    "text": "can you please rebook me for the same",
    "start": "317550",
    "end": "320289"
  },
  {
    "text": "flight tomorrow okay",
    "start": "320289",
    "end": "323050"
  },
  {
    "text": "you are now booked for a 9:00 a.m.",
    "start": "323050",
    "end": "324669"
  },
  {
    "text": "departure tomorrow out of San Francisco",
    "start": "324669",
    "end": "327310"
  },
  {
    "text": "arriving in Seattle at 11:45 a.m. great",
    "start": "327310",
    "end": "331419"
  },
  {
    "text": "thank you",
    "start": "331419",
    "end": "333060"
  },
  {
    "text": "let's explore what was different about",
    "start": "333060",
    "end": "335470"
  },
  {
    "text": "this experience first the session itself",
    "start": "335470",
    "end": "338349"
  },
  {
    "text": "was dynamic by being able to",
    "start": "338349",
    "end": "340509"
  },
  {
    "text": "automatically identify our customer as",
    "start": "340509",
    "end": "342490"
  },
  {
    "text": "they called in we were able to establish",
    "start": "342490",
    "end": "344289"
  },
  {
    "text": "who our customer was right from the",
    "start": "344289",
    "end": "346659"
  },
  {
    "text": "get-go building on that we were able to",
    "start": "346659",
    "end": "349180"
  },
  {
    "text": "build a personalized experience by",
    "start": "349180",
    "end": "351129"
  },
  {
    "text": "interacting with our customer data using",
    "start": "351129",
    "end": "353710"
  },
  {
    "text": "that we had already established why our",
    "start": "353710",
    "end": "355599"
  },
  {
    "text": "customer might be calling and",
    "start": "355599",
    "end": "356889"
  },
  {
    "text": "potentially what query might have been",
    "start": "356889",
    "end": "359139"
  },
  {
    "text": "about in this case a missed flight",
    "start": "359139",
    "end": "361620"
  },
  {
    "text": "finally the flow was entirely natural in",
    "start": "361620",
    "end": "364479"
  },
  {
    "text": "that our customer was able to complete",
    "start": "364479",
    "end": "366250"
  },
  {
    "text": "their goal without leaving the flow or",
    "start": "366250",
    "end": "368110"
  },
  {
    "text": "being transferred to an agent which led",
    "start": "368110",
    "end": "370150"
  },
  {
    "text": "to a better customer experience Amazon",
    "start": "370150",
    "end": "372880"
  },
  {
    "text": "Connect is an open platform that is",
    "start": "372880",
    "end": "375190"
  },
  {
    "text": "simple to integrate with other",
    "start": "375190",
    "end": "376479"
  },
  {
    "text": "enterprise applications as well as other",
    "start": "376479",
    "end": "378550"
  },
  {
    "text": "AWS services we've already touched on a",
    "start": "378550",
    "end": "381219"
  },
  {
    "text": "few like s3 lambda or some of our other",
    "start": "381219",
    "end": "384340"
  },
  {
    "text": "AI services like transcribe or",
    "start": "384340",
    "end": "386440"
  },
  {
    "text": "comprehend you're able to integrate with",
    "start": "386440",
    "end": "389139"
  },
  {
    "text": "your internal customer databases as your",
    "start": "389139",
    "end": "391389"
  },
  {
    "text": "CRM or other enterprise applications",
    "start": "391389",
    "end": "393810"
  },
  {
    "text": "aww lambda gives you the capability to",
    "start": "393810",
    "end": "396370"
  },
  {
    "text": "run code to integrate with virtually any",
    "start": "396370",
    "end": "398469"
  },
  {
    "text": "back-end application and your data is",
    "start": "398469",
    "end": "402009"
  },
  {
    "text": "your data for example call recordings",
    "start": "402009",
    "end": "404800"
  },
  {
    "text": "are stored encrypted in your s3 bucket",
    "start": "404800",
    "end": "407199"
  },
  {
    "text": "where you control access and the data",
    "start": "407199",
    "end": "409870"
  },
  {
    "text": "lifecycle you're able to stream Amazon",
    "start": "409870",
    "end": "412509"
  },
  {
    "text": "connects contact records to the data",
    "start": "412509",
    "end": "414129"
  },
  {
    "text": "warehouse of your choice and analyze as",
    "start": "414129",
    "end": "416860"
  },
  {
    "text": "with the tools that you choose like for",
    "start": "416860",
    "end": "419469"
  },
  {
    "text": "instance Amazon quick site or",
    "start": "419469",
    "end": "420909"
  },
  {
    "text": "potentially tableau finally Amazon",
    "start": "420909",
    "end": "423849"
  },
  {
    "text": "connect is able to tap into the AWS",
    "start": "423849",
    "end": "425919"
  },
  {
    "text": "ecosystem that includes an ecosystem of",
    "start": "425919",
    "end": "429099"
  },
  {
    "text": "over a hundred services as well as an",
    "start": "429099",
    "end": "431319"
  },
  {
    "text": "ecosystem of partners to help build",
    "start": "431319",
    "end": "433240"
  },
  {
    "text": "solutions while we covered Amazon",
    "start": "433240",
    "end": "436029"
  },
  {
    "text": "connect we've only touched on an",
    "start": "436029",
    "end": "437860"
  },
  {
    "text": "integral part of the solution Amazon Lex",
    "start": "437860",
    "end": "440199"
  },
  {
    "text": "so",
    "start": "440199",
    "end": "441139"
  },
  {
    "text": "what is Amazon lakhs Amazon Lex is our",
    "start": "441139",
    "end": "444650"
  },
  {
    "text": "natural language understanding and",
    "start": "444650",
    "end": "446360"
  },
  {
    "text": "speech recognition engine it is derived",
    "start": "446360",
    "end": "448909"
  },
  {
    "text": "from the engine that powers Alexa",
    "start": "448909",
    "end": "451610"
  },
  {
    "text": "running on Amazon's echo devices as well",
    "start": "451610",
    "end": "453830"
  },
  {
    "text": "as many third-party devices with Lex any",
    "start": "453830",
    "end": "457129"
  },
  {
    "text": "application running on the web a mobile",
    "start": "457129",
    "end": "459469"
  },
  {
    "text": "app or a device can send natural",
    "start": "459469",
    "end": "462139"
  },
  {
    "text": "language in the form of either speech or",
    "start": "462139",
    "end": "463909"
  },
  {
    "text": "text to Lex using an API or SDK Lex will",
    "start": "463909",
    "end": "468680"
  },
  {
    "text": "apply natural language understanding and",
    "start": "468680",
    "end": "470659"
  },
  {
    "text": "speech recognition to the incoming",
    "start": "470659",
    "end": "472550"
  },
  {
    "text": "messages to understand the intent of our",
    "start": "472550",
    "end": "474889"
  },
  {
    "text": "customer once Lex understands the intent",
    "start": "474889",
    "end": "477620"
  },
  {
    "text": "Lex is able to trigger a lambda function",
    "start": "477620",
    "end": "479930"
  },
  {
    "text": "to fulfill that intent that response",
    "start": "479930",
    "end": "482389"
  },
  {
    "text": "will then be passed back to the customer",
    "start": "482389",
    "end": "484279"
  },
  {
    "text": "as either text or in the case of our",
    "start": "484279",
    "end": "486229"
  },
  {
    "text": "contact center speech other integration",
    "start": "486229",
    "end": "489379"
  },
  {
    "text": "can also take advantage of a speech",
    "start": "489379",
    "end": "490969"
  },
  {
    "text": "response by using Amazon poly our",
    "start": "490969",
    "end": "492949"
  },
  {
    "text": "text-to-speech service there's an",
    "start": "492949",
    "end": "495919"
  },
  {
    "text": "integrated development console that lets",
    "start": "495919",
    "end": "497750"
  },
  {
    "text": "you visually design your interactions",
    "start": "497750",
    "end": "499639"
  },
  {
    "text": "using a developer friendly interface",
    "start": "499639",
    "end": "502060"
  },
  {
    "text": "establishing sample phrases as well as",
    "start": "502060",
    "end": "504680"
  },
  {
    "text": "other inputs from customers allows you",
    "start": "504680",
    "end": "506930"
  },
  {
    "text": "to build multi-step conversations where",
    "start": "506930",
    "end": "509539"
  },
  {
    "text": "you're able to request additional",
    "start": "509539",
    "end": "510589"
  },
  {
    "text": "information or fulfill the intent you",
    "start": "510589",
    "end": "513469"
  },
  {
    "text": "are then able to build and test these",
    "start": "513469",
    "end": "515089"
  },
  {
    "text": "BOTS",
    "start": "515089",
    "end": "515539"
  },
  {
    "text": "right in the console Amazon Lex",
    "start": "515539",
    "end": "517820"
  },
  {
    "text": "integrates with a number of platforms",
    "start": "517820",
    "end": "519890"
  },
  {
    "text": "you can deploy your bot to Facebook",
    "start": "519890",
    "end": "521690"
  },
  {
    "text": "slack quick or even Twilio for SMS or to",
    "start": "521690",
    "end": "525380"
  },
  {
    "text": "a custom platform or application - we",
    "start": "525380",
    "end": "528019"
  },
  {
    "text": "provide a number of enterprise",
    "start": "528019",
    "end": "529550"
  },
  {
    "text": "connectors - allowing for integration",
    "start": "529550",
    "end": "531829"
  },
  {
    "text": "with Salesforce Microsoft Dynamics",
    "start": "531829",
    "end": "533779"
  },
  {
    "text": "Zendesk as well as other enterprise",
    "start": "533779",
    "end": "536329"
  },
  {
    "text": "systems let's take a moment to look at",
    "start": "536329",
    "end": "538790"
  },
  {
    "text": "the structure of a Lex chat bot then",
    "start": "538790",
    "end": "541399"
  },
  {
    "text": "later we'll look at a Lex chat bot in",
    "start": "541399",
    "end": "543230"
  },
  {
    "text": "the console and how that chat bot",
    "start": "543230",
    "end": "545149"
  },
  {
    "text": "integrates with our contact center the",
    "start": "545149",
    "end": "548149"
  },
  {
    "text": "first thing about needs to do is",
    "start": "548149",
    "end": "549560"
  },
  {
    "text": "understand what our customer or user is",
    "start": "549560",
    "end": "551690"
  },
  {
    "text": "trying to say this information from a",
    "start": "551690",
    "end": "554060"
  },
  {
    "text": "customer is mapped to two components",
    "start": "554060",
    "end": "555730"
  },
  {
    "text": "utterances and intents let's tackle",
    "start": "555730",
    "end": "558890"
  },
  {
    "text": "utterances first utterances our sample",
    "start": "558890",
    "end": "561949"
  },
  {
    "text": "Fraser's our users may say to map to an",
    "start": "561949",
    "end": "564470"
  },
  {
    "text": "intent we use utterances to train the",
    "start": "564470",
    "end": "567649"
  },
  {
    "text": "speech model and identify what intent",
    "start": "567649",
    "end": "569779"
  },
  {
    "text": "the user is trying to invoke you can",
    "start": "569779",
    "end": "571940"
  },
  {
    "text": "think of an intent as a single function",
    "start": "571940",
    "end": "574640"
  },
  {
    "text": "but will usually have many intents in",
    "start": "574640",
    "end": "576890"
  },
  {
    "text": "the case of a hotel booking bot and",
    "start": "576890",
    "end": "579260"
  },
  {
    "text": "utterance may be something like I'd like",
    "start": "579260",
    "end": "581690"
  },
  {
    "text": "to book a hotel or I'd like to book a",
    "start": "581690",
    "end": "583790"
  },
  {
    "text": "room once we know what intent our",
    "start": "583790",
    "end": "586340"
  },
  {
    "text": "customers trying to engage with we then",
    "start": "586340",
    "end": "588590"
  },
  {
    "text": "need to collect additional information",
    "start": "588590",
    "end": "590920"
  },
  {
    "text": "this is where slots come into play slots",
    "start": "590920",
    "end": "594350"
  },
  {
    "text": "are used like variables to provide the",
    "start": "594350",
    "end": "596360"
  },
  {
    "text": "values we need to fulfill the intent in",
    "start": "596360",
    "end": "598580"
  },
  {
    "text": "our example slots will fill maybe what",
    "start": "598580",
    "end": "601940"
  },
  {
    "text": "data customer wants to stay or for how",
    "start": "601940",
    "end": "604250"
  },
  {
    "text": "long as well as possibly what type of",
    "start": "604250",
    "end": "606110"
  },
  {
    "text": "room that they would like we have some",
    "start": "606110",
    "end": "608510"
  },
  {
    "text": "predefined slots that will map to",
    "start": "608510",
    "end": "610040"
  },
  {
    "text": "specific values so that if a customer",
    "start": "610040",
    "end": "612440"
  },
  {
    "text": "says a date like September 9 2018 it",
    "start": "612440",
    "end": "615590"
  },
  {
    "text": "will map back to a standard date format",
    "start": "615590",
    "end": "617630"
  },
  {
    "text": "that can be used during fulfillment once",
    "start": "617630",
    "end": "620600"
  },
  {
    "text": "we have fulfilled all of our required",
    "start": "620600",
    "end": "622490"
  },
  {
    "text": "slots we can then send the intent for",
    "start": "622490",
    "end": "624500"
  },
  {
    "text": "fulfillment this is where lambda",
    "start": "624500",
    "end": "626210"
  },
  {
    "text": "functions take over and decide how to",
    "start": "626210",
    "end": "628190"
  },
  {
    "text": "complete the intent and return the",
    "start": "628190",
    "end": "630080"
  },
  {
    "text": "response let's see what this looks like",
    "start": "630080",
    "end": "633470"
  },
  {
    "text": "when put together in our book Hotel",
    "start": "633470",
    "end": "635750"
  },
  {
    "text": "example our customer starts by stating",
    "start": "635750",
    "end": "638420"
  },
  {
    "text": "book hotel in New York City in this case",
    "start": "638420",
    "end": "641810"
  },
  {
    "text": "we provided the intent as well as one of",
    "start": "641810",
    "end": "643970"
  },
  {
    "text": "the slot values to Lex Lex is able to",
    "start": "643970",
    "end": "647480"
  },
  {
    "text": "determine from this that we're looking",
    "start": "647480",
    "end": "649250"
  },
  {
    "text": "for a hotel booking intent and can",
    "start": "649250",
    "end": "651230"
  },
  {
    "text": "already feel the slot with a value of",
    "start": "651230",
    "end": "653180"
  },
  {
    "text": "New York City at this point Lex will",
    "start": "653180",
    "end": "655700"
  },
  {
    "text": "prompt our customer for two additional",
    "start": "655700",
    "end": "657530"
  },
  {
    "text": "slots the check-in slot as well as the",
    "start": "657530",
    "end": "660020"
  },
  {
    "text": "checkout slot once all three slots are",
    "start": "660020",
    "end": "662750"
  },
  {
    "text": "filled our but will repeat the",
    "start": "662750",
    "end": "664250"
  },
  {
    "text": "information back to us to ask for",
    "start": "664250",
    "end": "665720"
  },
  {
    "text": "confirmation this is an optional step",
    "start": "665720",
    "end": "667880"
  },
  {
    "text": "but useful where confirmation is needed",
    "start": "667880",
    "end": "671060"
  },
  {
    "text": "from here our lambda function books a",
    "start": "671060",
    "end": "673460"
  },
  {
    "text": "hotel for us and returns the response to",
    "start": "673460",
    "end": "675860"
  },
  {
    "text": "our bot depending on where our bot is",
    "start": "675860",
    "end": "678320"
  },
  {
    "text": "rendered we can use a service like",
    "start": "678320",
    "end": "679850"
  },
  {
    "text": "Amazon Poly to speak the return back to",
    "start": "679850",
    "end": "682430"
  },
  {
    "text": "our customer or just return it in text",
    "start": "682430",
    "end": "685000"
  },
  {
    "text": "let's dive deep and jump straight into a",
    "start": "685000",
    "end": "687650"
  },
  {
    "text": "demo",
    "start": "687650",
    "end": "689110"
  },
  {
    "text": "for today's event I created a demo to",
    "start": "689110",
    "end": "691420"
  },
  {
    "text": "showcase both Amazon Connect as well as",
    "start": "691420",
    "end": "693760"
  },
  {
    "text": "Amazon Lex so first let's go over what",
    "start": "693760",
    "end": "696550"
  },
  {
    "text": "problem we're trying to solve",
    "start": "696550",
    "end": "698580"
  },
  {
    "text": "John realizing his lifelong dream to",
    "start": "698580",
    "end": "701590"
  },
  {
    "text": "work with animals has just started a new",
    "start": "701590",
    "end": "703390"
  },
  {
    "text": "business a pet hotel John is running a",
    "start": "703390",
    "end": "706270"
  },
  {
    "text": "small operation and doesn't have time to",
    "start": "706270",
    "end": "708130"
  },
  {
    "text": "answer the phone he'd like to have a",
    "start": "708130",
    "end": "710200"
  },
  {
    "text": "service that handles bookings for him",
    "start": "710200",
    "end": "712000"
  },
  {
    "text": "however he'd like something a bit more",
    "start": "712000",
    "end": "714430"
  },
  {
    "text": "personal than a simple answering service",
    "start": "714430",
    "end": "716580"
  },
  {
    "text": "his requirements were firstly provide a",
    "start": "716580",
    "end": "719560"
  },
  {
    "text": "personalized service to his customers",
    "start": "719560",
    "end": "721320"
  },
  {
    "text": "the solution should identify existing",
    "start": "721320",
    "end": "723820"
  },
  {
    "text": "customers and provide them with a custom",
    "start": "723820",
    "end": "726070"
  },
  {
    "text": "greeting John wants the service to feel",
    "start": "726070",
    "end": "729160"
  },
  {
    "text": "natural within the contact flow we need",
    "start": "729160",
    "end": "731680"
  },
  {
    "text": "to provide the capability to book an",
    "start": "731680",
    "end": "733450"
  },
  {
    "text": "accommodation change an accommodation",
    "start": "733450",
    "end": "735610"
  },
  {
    "text": "and leave feedback finally we should",
    "start": "735610",
    "end": "738280"
  },
  {
    "text": "allow customers that want to speak",
    "start": "738280",
    "end": "740080"
  },
  {
    "text": "directly to John to do so this is our",
    "start": "740080",
    "end": "743230"
  },
  {
    "text": "high-level architecture at the center of",
    "start": "743230",
    "end": "745390"
  },
  {
    "text": "the slide you can see our Amazon Connect",
    "start": "745390",
    "end": "747100"
  },
  {
    "text": "instance everything starts here we'll be",
    "start": "747100",
    "end": "750250"
  },
  {
    "text": "creating a new Amazon Connect instance",
    "start": "750250",
    "end": "752200"
  },
  {
    "text": "and looking at what the contact flow",
    "start": "752200",
    "end": "753940"
  },
  {
    "text": "looks like for our solution from here we",
    "start": "753940",
    "end": "756730"
  },
  {
    "text": "can integrate with Amazon Lex for a",
    "start": "756730",
    "end": "758470"
  },
  {
    "text": "natural language chat bot and then",
    "start": "758470",
    "end": "760300"
  },
  {
    "text": "integrate with lambda as well so let's",
    "start": "760300",
    "end": "762910"
  },
  {
    "text": "start and build our first Amazon Connect",
    "start": "762910",
    "end": "765130"
  },
  {
    "text": "instance when we first see connect we",
    "start": "765130",
    "end": "767620"
  },
  {
    "text": "see a welcome screen we're going to",
    "start": "767620",
    "end": "769570"
  },
  {
    "text": "click get started from here we're given",
    "start": "769570",
    "end": "772510"
  },
  {
    "text": "the option to start configuring our",
    "start": "772510",
    "end": "774010"
  },
  {
    "text": "environment we can choose where to",
    "start": "774010",
    "end": "776350"
  },
  {
    "text": "source our accounts from so in this case",
    "start": "776350",
    "end": "778210"
  },
  {
    "text": "Amazon Connect we could link to Active",
    "start": "778210",
    "end": "780850"
  },
  {
    "text": "Directory or use sam'l or Federation in",
    "start": "780850",
    "end": "784330"
  },
  {
    "text": "this case will house our users directly",
    "start": "784330",
    "end": "786250"
  },
  {
    "text": "in connect we need to give our user",
    "start": "786250",
    "end": "789070"
  },
  {
    "text": "database a name and we'll call it",
    "start": "789070",
    "end": "790900"
  },
  {
    "text": "innovate demo and click Next from here I",
    "start": "790900",
    "end": "794560"
  },
  {
    "text": "can choose to create an administrator",
    "start": "794560",
    "end": "796300"
  },
  {
    "text": "that can be used to manage other users",
    "start": "796300",
    "end": "798130"
  },
  {
    "text": "I'm not going to go ahead and do that",
    "start": "798130",
    "end": "800200"
  },
  {
    "text": "instead I'll select next and skip this",
    "start": "800200",
    "end": "803080"
  },
  {
    "text": "step for telephony options I can choose",
    "start": "803080",
    "end": "805960"
  },
  {
    "text": "whether to allow incoming calls or be",
    "start": "805960",
    "end": "808390"
  },
  {
    "text": "allowed to place outgoing calls or both",
    "start": "808390",
    "end": "810490"
  },
  {
    "text": "I'll accept the default options for now",
    "start": "810490",
    "end": "813010"
  },
  {
    "text": "and then when we get to choose where we",
    "start": "813010",
    "end": "816190"
  },
  {
    "text": "store our data as mentioned before our",
    "start": "816190",
    "end": "818170"
  },
  {
    "text": "data is stored in Amazon s3 we can",
    "start": "818170",
    "end": "820960"
  },
  {
    "text": "customize what bucket",
    "start": "820960",
    "end": "822370"
  },
  {
    "text": "goes to as well as what keys are used",
    "start": "822370",
    "end": "824380"
  },
  {
    "text": "for encryption I'll choose the defaults",
    "start": "824380",
    "end": "826660"
  },
  {
    "text": "here finally we're given an opportunity",
    "start": "826660",
    "end": "828820"
  },
  {
    "text": "to review our selected options and",
    "start": "828820",
    "end": "831190"
  },
  {
    "text": "proceed I'll click create instance to",
    "start": "831190",
    "end": "833950"
  },
  {
    "text": "create our instance now that our",
    "start": "833950",
    "end": "836350"
  },
  {
    "text": "instance is created we can click get",
    "start": "836350",
    "end": "838570"
  },
  {
    "text": "started at this point we are presented",
    "start": "838570",
    "end": "841450"
  },
  {
    "text": "with a welcome screen from here we'll",
    "start": "841450",
    "end": "843550"
  },
  {
    "text": "dive in and click let's go our first",
    "start": "843550",
    "end": "847240"
  },
  {
    "text": "task we need to complete is to select a",
    "start": "847240",
    "end": "849130"
  },
  {
    "text": "phone number for our connect instance",
    "start": "849130",
    "end": "850920"
  },
  {
    "text": "we'll select a country for our number",
    "start": "850920",
    "end": "853210"
  },
  {
    "text": "first for today I'll select a US number",
    "start": "853210",
    "end": "858029"
  },
  {
    "text": "could choose numbers from a number of",
    "start": "859329",
    "end": "861009"
  },
  {
    "text": "countries",
    "start": "861009",
    "end": "863279"
  },
  {
    "text": "we could also choose between a direct",
    "start": "864220",
    "end": "866379"
  },
  {
    "text": "dial number and a toll-free number I'll",
    "start": "866379",
    "end": "868240"
  },
  {
    "text": "accept the number provided and click",
    "start": "868240",
    "end": "870009"
  },
  {
    "text": "Next we could make a call at this point",
    "start": "870009",
    "end": "872709"
  },
  {
    "text": "to test our instance that I'll skip that",
    "start": "872709",
    "end": "875430"
  },
  {
    "text": "we now have our Amazon Connect instance",
    "start": "875430",
    "end": "878319"
  },
  {
    "text": "created",
    "start": "878319",
    "end": "880639"
  },
  {
    "text": "now that we've seen how easy it is to",
    "start": "880639",
    "end": "883009"
  },
  {
    "text": "build an Amazon Connect instance let's",
    "start": "883009",
    "end": "885170"
  },
  {
    "text": "dive into our Aleks chat bot we'll look",
    "start": "885170",
    "end": "887989"
  },
  {
    "text": "at the components that make up the chat",
    "start": "887989",
    "end": "889610"
  },
  {
    "text": "bot as well as where and how we call",
    "start": "889610",
    "end": "892160"
  },
  {
    "text": "lambda to fulfill the chat bots intent",
    "start": "892160",
    "end": "895179"
  },
  {
    "text": "so here we have our pet Hotel chat bot",
    "start": "895179",
    "end": "898040"
  },
  {
    "text": "let's jump in on the left we can see our",
    "start": "898040",
    "end": "901160"
  },
  {
    "text": "intense defining what actions our",
    "start": "901160",
    "end": "903259"
  },
  {
    "text": "customer might take in the middle are",
    "start": "903259",
    "end": "905720"
  },
  {
    "text": "our utterances which will be used to",
    "start": "905720",
    "end": "907610"
  },
  {
    "text": "identify which intense we'd like to",
    "start": "907610",
    "end": "909559"
  },
  {
    "text": "execute finally we can see our slots",
    "start": "909559",
    "end": "912290"
  },
  {
    "text": "used to define what additional",
    "start": "912290",
    "end": "914509"
  },
  {
    "text": "information we need from our customers",
    "start": "914509",
    "end": "916360"
  },
  {
    "text": "we have some intents that we have",
    "start": "916360",
    "end": "918619"
  },
  {
    "text": "already created we have change booking",
    "start": "918619",
    "end": "920779"
  },
  {
    "text": "leave feedback and our transfer agent",
    "start": "920779",
    "end": "923449"
  },
  {
    "text": "intent we also have a couple maintenance",
    "start": "923449",
    "end": "925879"
  },
  {
    "text": "intents for handling standard responses",
    "start": "925879",
    "end": "928239"
  },
  {
    "text": "we're missing our new booking intent",
    "start": "928239",
    "end": "930709"
  },
  {
    "text": "let's go ahead and create it now from",
    "start": "930709",
    "end": "933499"
  },
  {
    "text": "here we need to add the utterances that",
    "start": "933499",
    "end": "935629"
  },
  {
    "text": "we'd like to associate with our new",
    "start": "935629",
    "end": "937040"
  },
  {
    "text": "intent we'll create new booking as well",
    "start": "937040",
    "end": "940160"
  },
  {
    "text": "as one called new reservation we now",
    "start": "940160",
    "end": "942559"
  },
  {
    "text": "need to define some new slots in order",
    "start": "942559",
    "end": "944839"
  },
  {
    "text": "to gather information from our customer",
    "start": "944839",
    "end": "946610"
  },
  {
    "text": "we'll need four slots for this intent",
    "start": "946610",
    "end": "948379"
  },
  {
    "text": "the first slot will be pet to define",
    "start": "948379",
    "end": "950869"
  },
  {
    "text": "what type of pet our customer has we",
    "start": "950869",
    "end": "953480"
  },
  {
    "text": "have many built-in slot types available",
    "start": "953480",
    "end": "955519"
  },
  {
    "text": "to us or we could create a custom one we",
    "start": "955519",
    "end": "958699"
  },
  {
    "text": "do have one four types of animals so",
    "start": "958699",
    "end": "960649"
  },
  {
    "text": "let's select that we then need to",
    "start": "960649",
    "end": "963049"
  },
  {
    "text": "provide the question if the chaplet is",
    "start": "963049",
    "end": "964910"
  },
  {
    "text": "going to ask to fill that slot so let's",
    "start": "964910",
    "end": "967549"
  },
  {
    "text": "ask what type of pet do you have let's",
    "start": "967549",
    "end": "970489"
  },
  {
    "text": "create a few other slots like name for",
    "start": "970489",
    "end": "973189"
  },
  {
    "text": "the name of our customers pet will",
    "start": "973189",
    "end": "975019"
  },
  {
    "text": "select Amazon person as the slot type",
    "start": "975019",
    "end": "979779"
  },
  {
    "text": "and to find the question what is the",
    "start": "980449",
    "end": "982970"
  },
  {
    "text": "name of your pet",
    "start": "982970",
    "end": "983809"
  },
  {
    "text": "we now need a slot called check-in for",
    "start": "983809",
    "end": "986329"
  },
  {
    "text": "the date the pet will be checking in",
    "start": "986329",
    "end": "987799"
  },
  {
    "text": "will select Amazon date slot type",
    "start": "987799",
    "end": "992499"
  },
  {
    "text": "and ask when is your pet arriving",
    "start": "994000",
    "end": "998430"
  },
  {
    "text": "lastly we'll create a checkout slot",
    "start": "998540",
    "end": "1002970"
  },
  {
    "text": "and use Amazon again asking the question",
    "start": "1004030",
    "end": "1007600"
  },
  {
    "text": "when is your pet leaving we're also able",
    "start": "1007600",
    "end": "1010570"
  },
  {
    "text": "to use previous slot values in the",
    "start": "1010570",
    "end": "1012850"
  },
  {
    "text": "questions we're asking in this case",
    "start": "1012850",
    "end": "1014830"
  },
  {
    "text": "let's ask our customer when is your pet",
    "start": "1014830",
    "end": "1017890"
  },
  {
    "text": "dog or cat leaving let's mark all of our",
    "start": "1017890",
    "end": "1021190"
  },
  {
    "text": "slots as required on top of that we can",
    "start": "1021190",
    "end": "1024520"
  },
  {
    "text": "also change the utterances to allow our",
    "start": "1024520",
    "end": "1026560"
  },
  {
    "text": "customer to supply slot value as part of",
    "start": "1026560",
    "end": "1029290"
  },
  {
    "text": "engaging an intent in this case we'll",
    "start": "1029290",
    "end": "1032230"
  },
  {
    "text": "add I'd like to make a booking for my",
    "start": "1032230",
    "end": "1034870"
  },
  {
    "text": "pet and the type of pet the customer has",
    "start": "1034870",
    "end": "1037260"
  },
  {
    "text": "once we have everything we'd like to",
    "start": "1037260",
    "end": "1039760"
  },
  {
    "text": "confirm we have all the details correct",
    "start": "1039760",
    "end": "1041770"
  },
  {
    "text": "before handing off to our lambda",
    "start": "1041770",
    "end": "1043300"
  },
  {
    "text": "function we can create a confirmation",
    "start": "1043300",
    "end": "1046240"
  },
  {
    "text": "prompt which we'll do now we'll ask I",
    "start": "1046240",
    "end": "1048940"
  },
  {
    "text": "have your pet dog arriving on a specific",
    "start": "1048940",
    "end": "1051820"
  },
  {
    "text": "date and leaving on a departure date is",
    "start": "1051820",
    "end": "1054490"
  },
  {
    "text": "this correct if our customer responds no",
    "start": "1054490",
    "end": "1057040"
  },
  {
    "text": "will just confirm that we won't be",
    "start": "1057040",
    "end": "1058780"
  },
  {
    "text": "creating a booking we now want to invoke",
    "start": "1058780",
    "end": "1061450"
  },
  {
    "text": "our lambda function I've got an existing",
    "start": "1061450",
    "end": "1064090"
  },
  {
    "text": "function called pH pet booking which",
    "start": "1064090",
    "end": "1067090"
  },
  {
    "text": "we'll select here",
    "start": "1067090",
    "end": "1069929"
  },
  {
    "text": "and will now save our intent so to",
    "start": "1070020",
    "end": "1073020"
  },
  {
    "text": "review we now have our utterances our",
    "start": "1073020",
    "end": "1076070"
  },
  {
    "text": "slots we have our confirmation and our",
    "start": "1076070",
    "end": "1080550"
  },
  {
    "text": "lambda function will begin calling here",
    "start": "1080550",
    "end": "1084840"
  },
  {
    "text": "is our lambda function for how we create",
    "start": "1084840",
    "end": "1086820"
  },
  {
    "text": "a new booking from here you can see that",
    "start": "1086820",
    "end": "1089430"
  },
  {
    "text": "we're pulling data from both our Lex",
    "start": "1089430",
    "end": "1091050"
  },
  {
    "text": "chat bot as well as the connect",
    "start": "1091050",
    "end": "1092910"
  },
  {
    "text": "environment in this case",
    "start": "1092910",
    "end": "1094620"
  },
  {
    "text": "check-in/check-out and the type of pet",
    "start": "1094620",
    "end": "1097200"
  },
  {
    "text": "and the pet's name is coming from our",
    "start": "1097200",
    "end": "1099000"
  },
  {
    "text": "bot",
    "start": "1099000",
    "end": "1099650"
  },
  {
    "text": "however the customers phone number is",
    "start": "1099650",
    "end": "1102090"
  },
  {
    "text": "passed through from connect to Lex and",
    "start": "1102090",
    "end": "1104610"
  },
  {
    "text": "finally to lambda to provide us with",
    "start": "1104610",
    "end": "1106950"
  },
  {
    "text": "data directly from our customers phone",
    "start": "1106950",
    "end": "1109050"
  },
  {
    "text": "call we're creating the DynamoDB table",
    "start": "1109050",
    "end": "1111780"
  },
  {
    "text": "item and finally returning the response",
    "start": "1111780",
    "end": "1114120"
  },
  {
    "text": "to the Lex chat bot which will be pass",
    "start": "1114120",
    "end": "1116100"
  },
  {
    "text": "back to the connect session now that we",
    "start": "1116100",
    "end": "1119130"
  },
  {
    "text": "have our connect instance a Lex chat bot",
    "start": "1119130",
    "end": "1121620"
  },
  {
    "text": "it's time for us to look at our contact",
    "start": "1121620",
    "end": "1123570"
  },
  {
    "text": "flow and integrate our chat bot we also",
    "start": "1123570",
    "end": "1126060"
  },
  {
    "text": "see how Connect is integrating directly",
    "start": "1126060",
    "end": "1128160"
  },
  {
    "text": "with lambda will be passing lambda our",
    "start": "1128160",
    "end": "1130800"
  },
  {
    "text": "customers phone number in order to query",
    "start": "1130800",
    "end": "1132900"
  },
  {
    "text": "DynamoDB and establish if we're speaking",
    "start": "1132900",
    "end": "1135150"
  },
  {
    "text": "to an existing customer or a new",
    "start": "1135150",
    "end": "1137220"
  },
  {
    "text": "customer let's dive in now let's go",
    "start": "1137220",
    "end": "1140430"
  },
  {
    "text": "ahead and create our contact flow we'll",
    "start": "1140430",
    "end": "1143610"
  },
  {
    "text": "go to the routing section and select",
    "start": "1143610",
    "end": "1145230"
  },
  {
    "text": "contact flow you can see that we have",
    "start": "1145230",
    "end": "1147870"
  },
  {
    "text": "some default handling flows for",
    "start": "1147870",
    "end": "1149490"
  },
  {
    "text": "transferring calls and managing queues",
    "start": "1149490",
    "end": "1151680"
  },
  {
    "text": "as well as some sample flows to",
    "start": "1151680",
    "end": "1153600"
  },
  {
    "text": "demonstrate concepts for now we'll go",
    "start": "1153600",
    "end": "1156120"
  },
  {
    "text": "ahead and create a new flow we now have",
    "start": "1156120",
    "end": "1159000"
  },
  {
    "text": "our design surface in front of us let's",
    "start": "1159000",
    "end": "1161520"
  },
  {
    "text": "give our flow a name we'll call it pet",
    "start": "1161520",
    "end": "1163320"
  },
  {
    "text": "hotel we now have only a start on a",
    "start": "1163320",
    "end": "1166830"
  },
  {
    "text": "design surface the first thing we want",
    "start": "1166830",
    "end": "1169110"
  },
  {
    "text": "to do is select a language and voice for",
    "start": "1169110",
    "end": "1171150"
  },
  {
    "text": "our chat bot let's go ahead and drop a",
    "start": "1171150",
    "end": "1173640"
  },
  {
    "text": "set voice object on the surface and",
    "start": "1173640",
    "end": "1175860"
  },
  {
    "text": "choose a voice as you can see we have",
    "start": "1175860",
    "end": "1178680"
  },
  {
    "text": "many languages and voices to choose from",
    "start": "1178680",
    "end": "1180750"
  },
  {
    "text": "for now we'll just choose a u.s. voice",
    "start": "1180750",
    "end": "1183810"
  },
  {
    "text": "and to link that up all we need to do is",
    "start": "1183810",
    "end": "1186600"
  },
  {
    "text": "drag from start to the sent voice object",
    "start": "1186600",
    "end": "1189770"
  },
  {
    "text": "let's go ahead and save our contact flow",
    "start": "1189770",
    "end": "1192450"
  },
  {
    "text": "and we'll skip ahead to where we have",
    "start": "1192450",
    "end": "1194460"
  },
  {
    "text": "some things on our design surface so we",
    "start": "1194460",
    "end": "1197640"
  },
  {
    "text": "have our start and our voice the next",
    "start": "1197640",
    "end": "1200340"
  },
  {
    "text": "thing we want to do is call a lambda",
    "start": "1200340",
    "end": "1201900"
  },
  {
    "text": "function to query if I'll call our",
    "start": "1201900",
    "end": "1203910"
  },
  {
    "text": "matches any existing customers we'll",
    "start": "1203910",
    "end": "1206700"
  },
  {
    "text": "take a peek at that function when we've",
    "start": "1206700",
    "end": "1208260"
  },
  {
    "text": "built out the rest of our flow if our",
    "start": "1208260",
    "end": "1210870"
  },
  {
    "text": "lambda function returns a customer we'll",
    "start": "1210870",
    "end": "1212700"
  },
  {
    "text": "create a prompt to welcome that person",
    "start": "1212700",
    "end": "1214530"
  },
  {
    "text": "back and confirm their reservation and",
    "start": "1214530",
    "end": "1216630"
  },
  {
    "text": "dates of arrival we'll also provide them",
    "start": "1216630",
    "end": "1219180"
  },
  {
    "text": "with options of what to do next if it's",
    "start": "1219180",
    "end": "1222150"
  },
  {
    "text": "a new customer that we've never seen",
    "start": "1222150",
    "end": "1223320"
  },
  {
    "text": "before will creat them and give them",
    "start": "1223320",
    "end": "1225780"
  },
  {
    "text": "their options after our greetings you",
    "start": "1225780",
    "end": "1228240"
  },
  {
    "text": "can see we have a big gap this is where",
    "start": "1228240",
    "end": "1230670"
  },
  {
    "text": "Alec's chat bot is going to go let's go",
    "start": "1230670",
    "end": "1233310"
  },
  {
    "text": "ahead and create our chat bot",
    "start": "1233310",
    "end": "1234810"
  },
  {
    "text": "we'll choose get customer input and drag",
    "start": "1234810",
    "end": "1237750"
  },
  {
    "text": "that onto the design surface we'll now",
    "start": "1237750",
    "end": "1239400"
  },
  {
    "text": "go ahead and create an empty",
    "start": "1239400",
    "end": "1241080"
  },
  {
    "text": "introduction as our welcome messages",
    "start": "1241080",
    "end": "1242910"
  },
  {
    "text": "already provided options will define the",
    "start": "1242910",
    "end": "1245970"
  },
  {
    "text": "chat bot we'd like to use we choose",
    "start": "1245970",
    "end": "1248340"
  },
  {
    "text": "Amazon Lex to establish this input we'll",
    "start": "1248340",
    "end": "1250680"
  },
  {
    "text": "be integrating with a Lex chat bot we'll",
    "start": "1250680",
    "end": "1253350"
  },
  {
    "text": "type the name of our chat bot pet hotel",
    "start": "1253350",
    "end": "1255480"
  },
  {
    "text": "and select what version of the chat bot",
    "start": "1255480",
    "end": "1257820"
  },
  {
    "text": "we want in this case latest we now want",
    "start": "1257820",
    "end": "1261270"
  },
  {
    "text": "to provide our chat bot with our",
    "start": "1261270",
    "end": "1262530"
  },
  {
    "text": "customers number as we use it in the",
    "start": "1262530",
    "end": "1264480"
  },
  {
    "text": "chat BOTS lambda function and finally we",
    "start": "1264480",
    "end": "1267720"
  },
  {
    "text": "will define our chat BOTS intents our",
    "start": "1267720",
    "end": "1270420"
  },
  {
    "text": "new booking intent our leave feedback",
    "start": "1270420",
    "end": "1272490"
  },
  {
    "text": "intent our transfer agent intent and a",
    "start": "1272490",
    "end": "1275130"
  },
  {
    "text": "few response handling intents that we",
    "start": "1275130",
    "end": "1276990"
  },
  {
    "text": "had we'll save that and you can see our",
    "start": "1276990",
    "end": "1280140"
  },
  {
    "text": "intense have been added to the object",
    "start": "1280140",
    "end": "1281700"
  },
  {
    "text": "this allows us now to decide how we'd",
    "start": "1281700",
    "end": "1284430"
  },
  {
    "text": "like to handle each intent first let's",
    "start": "1284430",
    "end": "1287400"
  },
  {
    "text": "connect our welcome message to the chat",
    "start": "1287400",
    "end": "1289170"
  },
  {
    "text": "bot as the next sequence to take we're",
    "start": "1289170",
    "end": "1292290"
  },
  {
    "text": "now drag our new booking intent to a",
    "start": "1292290",
    "end": "1294540"
  },
  {
    "text": "prompt asking if the customer would like",
    "start": "1294540",
    "end": "1296250"
  },
  {
    "text": "to do anything else",
    "start": "1296250",
    "end": "1297590"
  },
  {
    "text": "Ally feedback will go to a new input",
    "start": "1297590",
    "end": "1300180"
  },
  {
    "text": "asking for ranking our transfer agent",
    "start": "1300180",
    "end": "1303600"
  },
  {
    "text": "will go to a queue that will place our",
    "start": "1303600",
    "end": "1305640"
  },
  {
    "text": "customer on hold waiting for John to",
    "start": "1305640",
    "end": "1307710"
  },
  {
    "text": "pick up will wire up a yes and no",
    "start": "1307710",
    "end": "1310560"
  },
  {
    "text": "responses to give the customer their",
    "start": "1310560",
    "end": "1312630"
  },
  {
    "text": "options or hang up if they answer no",
    "start": "1312630",
    "end": "1316400"
  },
  {
    "text": "finally that's why our up our other",
    "start": "1319830",
    "end": "1321840"
  },
  {
    "text": "responses to loop back on the chat bot",
    "start": "1321840",
    "end": "1324630"
  },
  {
    "text": "after the user has selected a next",
    "start": "1324630",
    "end": "1326730"
  },
  {
    "text": "action or hang up if we don't need to do",
    "start": "1326730",
    "end": "1329460"
  },
  {
    "text": "anything else",
    "start": "1329460",
    "end": "1332000"
  },
  {
    "text": "here's our lambda function this function",
    "start": "1333200",
    "end": "1335820"
  },
  {
    "text": "will use our customers phone number to",
    "start": "1335820",
    "end": "1337830"
  },
  {
    "text": "query our DynamoDB table and return any",
    "start": "1337830",
    "end": "1340440"
  },
  {
    "text": "existing accommodations the customer may",
    "start": "1340440",
    "end": "1342480"
  },
  {
    "text": "have if we find an item we'll treat this",
    "start": "1342480",
    "end": "1345149"
  },
  {
    "text": "as a returning customer if we find none",
    "start": "1345149",
    "end": "1347340"
  },
  {
    "text": "then the custom will follow the new",
    "start": "1347340",
    "end": "1349529"
  },
  {
    "text": "customer pathway now that we've put all",
    "start": "1349529",
    "end": "1352559"
  },
  {
    "text": "the pieces together let's test our",
    "start": "1352559",
    "end": "1354149"
  },
  {
    "text": "solution our first test will be a new",
    "start": "1354149",
    "end": "1356700"
  },
  {
    "text": "customer who's calling to make a",
    "start": "1356700",
    "end": "1358049"
  },
  {
    "text": "reservation for their pet let's see what",
    "start": "1358049",
    "end": "1360330"
  },
  {
    "text": "that looks like",
    "start": "1360330",
    "end": "1362690"
  },
  {
    "text": "welcome to pet hotel how can I help you",
    "start": "1362690",
    "end": "1365730"
  },
  {
    "text": "today",
    "start": "1365730",
    "end": "1366330"
  },
  {
    "text": "say new booking change booking or leave",
    "start": "1366330",
    "end": "1369630"
  },
  {
    "text": "feedback new booking what type of Ted",
    "start": "1369630",
    "end": "1373920"
  },
  {
    "text": "will be staying with us",
    "start": "1373920",
    "end": "1375260"
  },
  {
    "text": "Spyder what's your spiders name max when",
    "start": "1375260",
    "end": "1382530"
  },
  {
    "text": "if your pet spider arriving June 2nd",
    "start": "1382530",
    "end": "1386150"
  },
  {
    "text": "what is your pet spider leaving our",
    "start": "1386150",
    "end": "1388440"
  },
  {
    "text": "hotel June 22nd I have your spider",
    "start": "1388440",
    "end": "1393360"
  },
  {
    "text": "arriving on June 2nd 2018 and staying",
    "start": "1393360",
    "end": "1395850"
  },
  {
    "text": "with us until June 22nd 2018 is this",
    "start": "1395850",
    "end": "1398940"
  },
  {
    "text": "correct",
    "start": "1398940",
    "end": "1399540"
  },
  {
    "text": "yes great your spider is scheduled to",
    "start": "1399540",
    "end": "1404910"
  },
  {
    "text": "check in on June 2nd 2018 and checking",
    "start": "1404910",
    "end": "1407340"
  },
  {
    "text": "out on June 22nd 2018 see max then is",
    "start": "1407340",
    "end": "1411090"
  },
  {
    "text": "there anything else No",
    "start": "1411090",
    "end": "1414770"
  },
  {
    "text": "great that worked we're able to use our",
    "start": "1414770",
    "end": "1418220"
  },
  {
    "text": "natural language flow to create a fluid",
    "start": "1418220",
    "end": "1420260"
  },
  {
    "text": "experience now let's observe how",
    "start": "1420260",
    "end": "1423320"
  },
  {
    "text": "returning customers handled welcome back",
    "start": "1423320",
    "end": "1425779"
  },
  {
    "text": "to pet hotel you have your pet spider",
    "start": "1425779",
    "end": "1428029"
  },
  {
    "text": "checking in on June second 2018 and",
    "start": "1428029",
    "end": "1430399"
  },
  {
    "text": "checking out on June 22nd 2018 what can",
    "start": "1430399",
    "end": "1434029"
  },
  {
    "text": "I do for you say change booking or leave",
    "start": "1434029",
    "end": "1437059"
  },
  {
    "text": "feedback leave feedback please tell me",
    "start": "1437059",
    "end": "1441919"
  },
  {
    "text": "how your pets experience was at our",
    "start": "1441919",
    "end": "1443659"
  },
  {
    "text": "hotel from 1 to 9 1 being bad in 9 being",
    "start": "1443659",
    "end": "1446690"
  },
  {
    "text": "it awesome thanks for the feedback have",
    "start": "1446690",
    "end": "1450950"
  },
  {
    "text": "a great day from this example we can see",
    "start": "1450950",
    "end": "1454399"
  },
  {
    "text": "that we recognized our returning",
    "start": "1454399",
    "end": "1456590"
  },
  {
    "text": "customer and we're able to customize the",
    "start": "1456590",
    "end": "1458779"
  },
  {
    "text": "greeting for that customer we were also",
    "start": "1458779",
    "end": "1460940"
  },
  {
    "text": "able to leave feedback by using DTMF",
    "start": "1460940",
    "end": "1463279"
  },
  {
    "text": "tones instead of a voice response if we",
    "start": "1463279",
    "end": "1466070"
  },
  {
    "text": "wanted to we could have made that a",
    "start": "1466070",
    "end": "1467510"
  },
  {
    "text": "voice response to let's quickly recap",
    "start": "1467510",
    "end": "1469880"
  },
  {
    "text": "what we've learned today",
    "start": "1469880",
    "end": "1471970"
  },
  {
    "text": "Amazon Lex provided us with the building",
    "start": "1471970",
    "end": "1474590"
  },
  {
    "text": "blocks to create a natural language",
    "start": "1474590",
    "end": "1476059"
  },
  {
    "text": "experience we can build our chat once",
    "start": "1476059",
    "end": "1478370"
  },
  {
    "text": "and use it across many channels of",
    "start": "1478370",
    "end": "1480200"
  },
  {
    "text": "engagement today we used our chat bot in",
    "start": "1480200",
    "end": "1483230"
  },
  {
    "text": "Amazon connect our cloud-based contact",
    "start": "1483230",
    "end": "1485059"
  },
  {
    "text": "center service by using connect we were",
    "start": "1485059",
    "end": "1487760"
  },
  {
    "text": "able to create a new contact center in",
    "start": "1487760",
    "end": "1489649"
  },
  {
    "text": "minutes and optimize where our agents",
    "start": "1489649",
    "end": "1491600"
  },
  {
    "text": "are used to drive a great customer",
    "start": "1491600",
    "end": "1494120"
  },
  {
    "text": "experience finally we leveraged other",
    "start": "1494120",
    "end": "1496520"
  },
  {
    "text": "services within the AWS ecosystem like",
    "start": "1496520",
    "end": "1498830"
  },
  {
    "text": "lambda and dynamo DB to further expand",
    "start": "1498830",
    "end": "1501679"
  },
  {
    "text": "on our solution if you'd like to explore",
    "start": "1501679",
    "end": "1505010"
  },
  {
    "text": "some of the services we use today here",
    "start": "1505010",
    "end": "1506960"
  },
  {
    "text": "are a few links that should get you",
    "start": "1506960",
    "end": "1508190"
  },
  {
    "text": "started these links will provide product",
    "start": "1508190",
    "end": "1510649"
  },
  {
    "text": "information as well as tutorials",
    "start": "1510649",
    "end": "1512240"
  },
  {
    "text": "kick-starting your use of our services",
    "start": "1512240",
    "end": "1514220"
  },
  {
    "text": "all these services are available on our",
    "start": "1514220",
    "end": "1516860"
  },
  {
    "text": "free tier I encourage you to experiment",
    "start": "1516860",
    "end": "1518950"
  },
  {
    "text": "to gain more confidence and hands-on",
    "start": "1518950",
    "end": "1521539"
  },
  {
    "text": "experience with AWS access digital",
    "start": "1521539",
    "end": "1524419"
  },
  {
    "text": "training built by AWS experts attend our",
    "start": "1524419",
    "end": "1527419"
  },
  {
    "text": "instructor-led classes by qualified",
    "start": "1527419",
    "end": "1529490"
  },
  {
    "text": "Adobe instructors and learn how to",
    "start": "1529490",
    "end": "1531500"
  },
  {
    "text": "design deploy and operate highly",
    "start": "1531500",
    "end": "1534110"
  },
  {
    "text": "available cost-effective secure",
    "start": "1534110",
    "end": "1536149"
  },
  {
    "text": "applications on AWS validate your",
    "start": "1536149",
    "end": "1539750"
  },
  {
    "text": "technical expertise with AWS by using",
    "start": "1539750",
    "end": "1542090"
  },
  {
    "text": "practice exams to help you prepare for",
    "start": "1542090",
    "end": "1544639"
  },
  {
    "text": "AWS certification AWS has a wide partner",
    "start": "1544639",
    "end": "1548720"
  },
  {
    "text": "to help you focus on your success and",
    "start": "1548720",
    "end": "1550820"
  },
  {
    "text": "take full advantage of the business",
    "start": "1550820",
    "end": "1552440"
  },
  {
    "text": "benefits that AWS has to offer to learn",
    "start": "1552440",
    "end": "1555289"
  },
  {
    "text": "more about how APN partners can help you",
    "start": "1555289",
    "end": "1557840"
  },
  {
    "text": "and find the right APN partner for your",
    "start": "1557840",
    "end": "1560059"
  },
  {
    "text": "needs",
    "start": "1560059",
    "end": "1560450"
  },
  {
    "text": "visit the AWS APN booth at our showcase",
    "start": "1560450",
    "end": "1564250"
  },
  {
    "text": "finally I'd like to thank you for",
    "start": "1564250",
    "end": "1566360"
  },
  {
    "text": "attending today and sticking it out",
    "start": "1566360",
    "end": "1567919"
  },
  {
    "text": "until the end of the session I hope you",
    "start": "1567919",
    "end": "1569600"
  },
  {
    "text": "found it useful",
    "start": "1569600",
    "end": "1571990"
  }
]