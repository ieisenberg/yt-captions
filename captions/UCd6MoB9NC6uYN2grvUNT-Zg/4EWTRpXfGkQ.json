[
  {
    "text": "In this video, you'll see Part 3 of how you can manage\napplication resilience with AWS Resilience Hub.",
    "start": "541",
    "end": "5415"
  },
  {
    "text": "In Part 3 of this three-part demonstration, you’ll see how \nto run fault injection experiments to simulate an outage, ",
    "start": "6127",
    "end": "11716"
  },
  {
    "text": "run a reassessment, and verify that the application \ncan recover when the scenario completes.",
    "start": "11716",
    "end": "16417"
  },
  {
    "text": "We'll begin in the AWS Resilience Hub \nconsole for our Unicorn Store application.",
    "start": "18576",
    "end": "22684"
  },
  {
    "text": "We can see two experiment templates that were\nadded for the purposes of this demonstration.",
    "start": "23267",
    "end": "26870"
  },
  {
    "text": "Before we view them, let's take \nanother look at the operational",
    "start": "27605",
    "end": "30242"
  },
  {
    "text": "recommendations from our recent resiliency assessment.",
    "start": "30242",
    "end": "32753"
  },
  {
    "text": "We'll look at the Fault injection Experiment templates.",
    "start": "33280",
    "end": "35514"
  },
  {
    "text": "In total, seven experiments were recommended.",
    "start": "37264",
    "end": "39227"
  },
  {
    "text": "The two we have chosen are the “Reboot RDS\nInstance Test” and the “Inject CPU Load in EC2 Test.”",
    "start": "39930",
    "end": "45553"
  },
  {
    "text": "Let's return to the application page and run the experiments.",
    "start": "46437",
    "end": "48979"
  },
  {
    "text": "We'll click into the first experiment \ntemplate ID listed to start the experiment.",
    "start": "52719",
    "end": "56361"
  },
  {
    "text": "This experiment is designed to overload \nthe application to see if it sets off an alarm.",
    "start": "57024",
    "end": "60772"
  },
  {
    "text": "We’ll continue without adding tags.",
    "start": "61915",
    "end": "63563"
  },
  {
    "text": "Now we'll confirm and start the experiment.",
    "start": "65304",
    "end": "67105"
  },
  {
    "text": "While that test is running, let's begin the second experiment.",
    "start": "70206",
    "end": "72876"
  },
  {
    "text": "This experiment will test whether we can recover\nthe application if the Amazon Relational Database",
    "start": "77031",
    "end": "81011"
  },
  {
    "text": "Service (Amazon RDS) instance reboots.",
    "start": "81011",
    "end": "83748"
  },
  {
    "text": "Let's start the experiment.",
    "start": "84180",
    "end": "85256"
  },
  {
    "text": "We’ll continue without adding tags.",
    "start": "88061",
    "end": "89700"
  },
  {
    "text": "Now we'll confirm and start the experiment.",
    "start": "91426",
    "end": "93209"
  },
  {
    "text": "Since this experiment involves a database reboot, let's \nopen the Amazon RDS console and see if that’s happening.",
    "start": "96350",
    "end": "101687"
  },
  {
    "text": "We'll navigate to the database instance.",
    "start": "103432",
    "end": "105191"
  },
  {
    "text": "We can see that the database is actively rebooting.",
    "start": "106965",
    "end": "109186"
  },
  {
    "text": "Let’s see if it becomes available again.",
    "start": "109657",
    "end": "111124"
  },
  {
    "text": "If it doesn’t, we'll know our database isn’t fully fault tolerant.",
    "start": "111524",
    "end": "114410"
  },
  {
    "text": "The database is available after the \nreboot, which means it is recoverable.",
    "start": "117183",
    "end": "120324"
  },
  {
    "text": "Next, let's check on our EC2 instance in AWS CloudWatch.",
    "start": "121311",
    "end": "124672"
  },
  {
    "text": "You'll recall, the EC2 instance was \ntested by the other experiment we ran.",
    "start": "128147",
    "end": "131670"
  },
  {
    "text": "The CPU was overloaded to ensure an alarm would catch it.",
    "start": "133908",
    "end": "136572"
  },
  {
    "text": "Here we can see the alarm caught the overload activity.",
    "start": "138410",
    "end": "140734"
  },
  {
    "text": "So, our application was resilient enough to\nwithstand both fault injection experiments.",
    "start": "142500",
    "end": "146488"
  },
  {
    "text": "Let's return to AWS Resilience Hub.",
    "start": "146984",
    "end": "148819"
  },
  {
    "text": "Let's reassess our application.",
    "start": "150577",
    "end": "152038"
  },
  {
    "text": "Our previous Resiliency Score was 39%.",
    "start": "156816",
    "end": "159308"
  },
  {
    "text": "Now that the assessment is complete, let's go to \nour application and see our new Resiliency Score.",
    "start": "162000",
    "end": "166136"
  },
  {
    "text": "The Resiliency Score is now 56% as a result\nof the recommendations we implemented.",
    "start": "168264",
    "end": "172581"
  },
  {
    "text": "Let’s check our compliance status.",
    "start": "172933",
    "end": "174500"
  },
  {
    "text": "We can see our policy was met.",
    "start": "176290",
    "end": "177719"
  },
  {
    "text": "Next, we'll view the report.",
    "start": "178219",
    "end": "179674"
  },
  {
    "text": "Our Recovery Time Objective and Recovery \nPoint Objective targets are also being met.",
    "start": "180378",
    "end": "184378"
  },
  {
    "text": "Let's return to the application's main page in the console.",
    "start": "184993",
    "end": "187417"
  },
  {
    "text": "Finally, let's view the results of \nthe fault injection experiments.",
    "start": "189295",
    "end": "192222"
  },
  {
    "text": "The two experiments we ran were completed\nand successful, and the application is still available.",
    "start": "193334",
    "end": "197542"
  },
  {
    "text": "You've just seen Part 3 of how you can manage\napplication resilience with AWS Resilience Hub.",
    "start": "199956",
    "end": "204344"
  },
  {
    "text": "You can learn more about this topic in \nthe description and links for this video.",
    "start": "205464",
    "end": "208583"
  },
  {
    "text": "Thanks for watching. Now it's your turn to try.",
    "start": "208583",
    "end": "210517"
  }
]