[
  {
    "start": "0",
    "end": "49000"
  },
  {
    "text": "[Music]",
    "start": "610",
    "end": "5930"
  },
  {
    "text": "hi my name is trevor sullivan i'm an AWS",
    "start": "5930",
    "end": "9450"
  },
  {
    "text": "solutions architect welcome to this",
    "start": "9450",
    "end": "11370"
  },
  {
    "text": "video in the dotnet learning series are",
    "start": "11370",
    "end": "14070"
  },
  {
    "text": "you using the python based AWS CLI to",
    "start": "14070",
    "end": "16410"
  },
  {
    "text": "deploy and manage your AWS cloud",
    "start": "16410",
    "end": "18180"
  },
  {
    "text": "resources today have you ever wished",
    "start": "18180",
    "end": "20430"
  },
  {
    "text": "that you could perform these same",
    "start": "20430",
    "end": "21570"
  },
  {
    "text": "automation tasks from an object-oriented",
    "start": "21570",
    "end": "23460"
  },
  {
    "text": "shell instead of a text-based shell like",
    "start": "23460",
    "end": "26039"
  },
  {
    "text": "bash or zsh since 2006 systems",
    "start": "26039",
    "end": "30119"
  },
  {
    "text": "administrators engineers and developers",
    "start": "30119",
    "end": "31920"
  },
  {
    "text": "have enjoyed the rich object-oriented",
    "start": "31920",
    "end": "34410"
  },
  {
    "text": "shell experience with PowerShell on the",
    "start": "34410",
    "end": "36899"
  },
  {
    "text": "Microsoft Windows platform AWS customers",
    "start": "36899",
    "end": "40050"
  },
  {
    "text": "have also enjoyed the benefits of an",
    "start": "40050",
    "end": "41640"
  },
  {
    "text": "object-oriented shell since the",
    "start": "41640",
    "end": "43230"
  },
  {
    "text": "availability of the AWS tools for",
    "start": "43230",
    "end": "45210"
  },
  {
    "text": "PowerShell also simply known as the AWS",
    "start": "45210",
    "end": "47850"
  },
  {
    "text": "PowerShell module however this powerful",
    "start": "47850",
    "end": "50670"
  },
  {
    "start": "49000",
    "end": "127000"
  },
  {
    "text": "shell isn't just limited to Windows",
    "start": "50670",
    "end": "52590"
  },
  {
    "text": "users any longer in January of 2018",
    "start": "52590",
    "end": "55789"
  },
  {
    "text": "Microsoft released the first generally",
    "start": "55789",
    "end": "58079"
  },
  {
    "text": "available version of PowerShell Core",
    "start": "58079",
    "end": "59850"
  },
  {
    "text": "Edition PowerShell core Edition is an",
    "start": "59850",
    "end": "62399"
  },
  {
    "text": "open source and cross-platform edition",
    "start": "62399",
    "end": "64439"
  },
  {
    "text": "of PowerShell that runs on top of the",
    "start": "64439",
    "end": "66869"
  },
  {
    "text": "cross-platform dotnet core framework",
    "start": "66869",
    "end": "69530"
  },
  {
    "text": "since the alpha version of PowerShell",
    "start": "69530",
    "end": "71850"
  },
  {
    "text": "core was first announced back in August",
    "start": "71850",
    "end": "73710"
  },
  {
    "text": "of 2016 the AWS PowerShell module has",
    "start": "73710",
    "end": "76680"
  },
  {
    "text": "had nearly full support for it through",
    "start": "76680",
    "end": "79409"
  },
  {
    "text": "the use of objects PowerShell reduces",
    "start": "79409",
    "end": "81509"
  },
  {
    "text": "the amount of work that's required to",
    "start": "81509",
    "end": "83520"
  },
  {
    "text": "construct complex inputs and parse",
    "start": "83520",
    "end": "85740"
  },
  {
    "text": "command output instead you can spend",
    "start": "85740",
    "end": "88380"
  },
  {
    "text": "more time focusing on your business",
    "start": "88380",
    "end": "89790"
  },
  {
    "text": "logic unlike the traditional bash or zsh",
    "start": "89790",
    "end": "93210"
  },
  {
    "text": "shell environment PowerShell offers",
    "start": "93210",
    "end": "95280"
  },
  {
    "text": "built-in utilities to sort filter and",
    "start": "95280",
    "end": "98220"
  },
  {
    "text": "even group objects together if required",
    "start": "98220",
    "end": "101159"
  },
  {
    "text": "you can even convert objects to and from",
    "start": "101159",
    "end": "103649"
  },
  {
    "text": "different common serialization formats",
    "start": "103649",
    "end": "105899"
  },
  {
    "text": "such as JSON and CSV without any third",
    "start": "105899",
    "end": "108899"
  },
  {
    "text": "party dependencies",
    "start": "108899",
    "end": "110299"
  },
  {
    "text": "even though objects are PowerShell",
    "start": "110299",
    "end": "112470"
  },
  {
    "text": "first-class citizens so to speak you",
    "start": "112470",
    "end": "114450"
  },
  {
    "text": "still have the ability to perform text",
    "start": "114450",
    "end": "116399"
  },
  {
    "text": "parsing through regular expressions now",
    "start": "116399",
    "end": "118920"
  },
  {
    "text": "that we've reviewed some of the",
    "start": "118920",
    "end": "120060"
  },
  {
    "text": "essential features of PowerShell let's",
    "start": "120060",
    "end": "122009"
  },
  {
    "text": "discuss how you can get started with",
    "start": "122009",
    "end": "123509"
  },
  {
    "text": "PowerShell and AWS automation today now",
    "start": "123509",
    "end": "128729"
  },
  {
    "text": "we're going to switch over to our web",
    "start": "128729",
    "end": "129989"
  },
  {
    "text": "browser and take a look at the",
    "start": "129989",
    "end": "131340"
  },
  {
    "text": "powershell project on github",
    "start": "131340",
    "end": "133380"
  },
  {
    "text": "using your web browser of choice head",
    "start": "133380",
    "end": "135270"
  },
  {
    "text": "over to the official powershell core",
    "start": "135270",
    "end": "137100"
  },
  {
    "text": "open source repository on github visit",
    "start": "137100",
    "end": "139710"
  },
  {
    "text": "the releases tab and download the latest",
    "start": "139710",
    "end": "141810"
  },
  {
    "text": "version of the powershell core package",
    "start": "141810",
    "end": "143970"
  },
  {
    "text": "for your operating system you can see",
    "start": "143970",
    "end": "146760"
  },
  {
    "text": "that powershell core supports a variety",
    "start": "146760",
    "end": "148230"
  },
  {
    "text": "of different operating systems including",
    "start": "148230",
    "end": "150180"
  },
  {
    "text": "Linux OS X and Windows after you've",
    "start": "150180",
    "end": "155220"
  },
  {
    "text": "installed PowerShell core you can launch",
    "start": "155220",
    "end": "157140"
  },
  {
    "text": "the shell using the executable named PW",
    "start": "157140",
    "end": "159570"
  },
  {
    "text": "SH instead of powershell exe as on the",
    "start": "159570",
    "end": "162570"
  },
  {
    "text": "Windows platform once you've launched",
    "start": "162570",
    "end": "165090"
  },
  {
    "text": "powershell installing the AWS PowerShell",
    "start": "165090",
    "end": "167490"
  },
  {
    "text": "module is easy",
    "start": "167490",
    "end": "168560"
  },
  {
    "text": "PowerShell has a public-facing NuGet",
    "start": "168560",
    "end": "172380"
  },
  {
    "text": "based module gallery known as the",
    "start": "172380",
    "end": "174420"
  },
  {
    "text": "powershell gallery similar to other",
    "start": "174420",
    "end": "176280"
  },
  {
    "text": "languages for example c-sharp developers",
    "start": "176280",
    "end": "179040"
  },
  {
    "text": "typically use nougat for hosting dotnet",
    "start": "179040",
    "end": "180930"
  },
  {
    "text": "packages where as JavaScript developers",
    "start": "180930",
    "end": "183270"
  },
  {
    "text": "might use the node package manager or",
    "start": "183270",
    "end": "185070"
  },
  {
    "text": "NPM to interact with the powershell",
    "start": "185070",
    "end": "187770"
  },
  {
    "start": "186000",
    "end": "241000"
  },
  {
    "text": "gallery powershell includes a small",
    "start": "187770",
    "end": "189720"
  },
  {
    "text": "module called powershell get this module",
    "start": "189720",
    "end": "192420"
  },
  {
    "text": "exports an array of commands that allows",
    "start": "192420",
    "end": "194190"
  },
  {
    "text": "you to install modules uninstall modules",
    "start": "194190",
    "end": "196800"
  },
  {
    "text": "and publish new modules to install the",
    "start": "196800",
    "end": "199830"
  },
  {
    "text": "AWS PowerShell module simply run this",
    "start": "199830",
    "end": "202110"
  },
  {
    "text": "install module command so we'll type the",
    "start": "202110",
    "end": "205350"
  },
  {
    "text": "install module command specify the name",
    "start": "205350",
    "end": "207930"
  },
  {
    "text": "parameter type the module name which is",
    "start": "207930",
    "end": "210720"
  },
  {
    "text": "AWS powershell dotnet core specify the",
    "start": "210720",
    "end": "213780"
  },
  {
    "text": "scope parameter of current user and that",
    "start": "213780",
    "end": "216090"
  },
  {
    "text": "instructs powershell to install the",
    "start": "216090",
    "end": "218250"
  },
  {
    "text": "module to our current users home",
    "start": "218250",
    "end": "220140"
  },
  {
    "text": "directory instead of the all users",
    "start": "220140",
    "end": "221790"
  },
  {
    "text": "directory that requires sudo permissions",
    "start": "221790",
    "end": "224190"
  },
  {
    "text": "and we'll just hit enter the module",
    "start": "224190",
    "end": "227880"
  },
  {
    "text": "should only take a few moments to",
    "start": "227880",
    "end": "229500"
  },
  {
    "text": "install from the powershell gallery once",
    "start": "229500",
    "end": "231750"
  },
  {
    "text": "it's installed you don't have to",
    "start": "231750",
    "end": "233130"
  },
  {
    "text": "manually import the module using the",
    "start": "233130",
    "end": "234780"
  },
  {
    "text": "import module command thanks to",
    "start": "234780",
    "end": "236640"
  },
  {
    "text": "powershell power shells module",
    "start": "236640",
    "end": "238620"
  },
  {
    "text": "autoloading feature with the AWS",
    "start": "238620",
    "end": "242280"
  },
  {
    "start": "241000",
    "end": "316000"
  },
  {
    "text": "PowerShell module installed it's time to",
    "start": "242280",
    "end": "244410"
  },
  {
    "text": "set up your credentials so that you can",
    "start": "244410",
    "end": "245970"
  },
  {
    "text": "access your AWS accounts resources if",
    "start": "245970",
    "end": "248160"
  },
  {
    "text": "you've already setup your AWS",
    "start": "248160",
    "end": "250170"
  },
  {
    "text": "credentials file manually or have been",
    "start": "250170",
    "end": "252360"
  },
  {
    "text": "using it with the AWS CLI you can most",
    "start": "252360",
    "end": "254670"
  },
  {
    "text": "likely skip this step if you haven't",
    "start": "254670",
    "end": "257430"
  },
  {
    "text": "already created an AWS credentials file",
    "start": "257430",
    "end": "259350"
  },
  {
    "text": "you can set it up using the following",
    "start": "259350",
    "end": "261030"
  },
  {
    "text": "PowerShell command the command name is",
    "start": "261030",
    "end": "264270"
  },
  {
    "text": "set AWS credential and then we'll",
    "start": "264270",
    "end": "266760"
  },
  {
    "text": "specify",
    "start": "266760",
    "end": "267330"
  },
  {
    "text": "a store as which is basically a profile",
    "start": "267330",
    "end": "269819"
  },
  {
    "text": "name that we'll use to reference this",
    "start": "269819",
    "end": "272690"
  },
  {
    "text": "access key ID then we'll specify our",
    "start": "272690",
    "end": "275460"
  },
  {
    "text": "access key and finally our secret key",
    "start": "275460",
    "end": "277979"
  },
  {
    "text": "you can generate these credentials from",
    "start": "277979",
    "end": "280050"
  },
  {
    "text": "the Identity and Access Management",
    "start": "280050",
    "end": "281250"
  },
  {
    "text": "Service inside the AWS management",
    "start": "281250",
    "end": "282990"
  },
  {
    "text": "console like the other SDKs the AWS",
    "start": "282990",
    "end": "286979"
  },
  {
    "text": "PowerShell module will automatically",
    "start": "286979",
    "end": "288659"
  },
  {
    "text": "look for the credentials profile named",
    "start": "288659",
    "end": "290550"
  },
  {
    "text": "defaults in your home directory under",
    "start": "290550",
    "end": "292919"
  },
  {
    "text": "the dot AWS hidden folder with",
    "start": "292919",
    "end": "297449"
  },
  {
    "text": "PowerShell installed along with the AWS",
    "start": "297449",
    "end": "299669"
  },
  {
    "text": "PowerShell module and your credentials",
    "start": "299669",
    "end": "301680"
  },
  {
    "text": "file configured you're now stood ready",
    "start": "301680",
    "end": "303629"
  },
  {
    "text": "to start exploring the PowerShell module",
    "start": "303629",
    "end": "305520"
  },
  {
    "text": "and performing automation tasks against",
    "start": "305520",
    "end": "308099"
  },
  {
    "text": "your AWS cloud resources the AWS",
    "start": "308099",
    "end": "311729"
  },
  {
    "text": "PowerShell module contains a helpful",
    "start": "311729",
    "end": "313349"
  },
  {
    "text": "command called get AWS command let name",
    "start": "313349",
    "end": "315860"
  },
  {
    "text": "this command will search for PowerShell",
    "start": "315860",
    "end": "318270"
  },
  {
    "start": "316000",
    "end": "377000"
  },
  {
    "text": "commands that invoke a specific AWS API",
    "start": "318270",
    "end": "320789"
  },
  {
    "text": "or interact with the AWS service more",
    "start": "320789",
    "end": "323669"
  },
  {
    "text": "generally for example we'll call get AWS",
    "start": "323669",
    "end": "327240"
  },
  {
    "text": "command let name - service lambda and",
    "start": "327240",
    "end": "331860"
  },
  {
    "text": "this will return a list of all the",
    "start": "331860",
    "end": "334080"
  },
  {
    "text": "lambda related PowerShell commands also",
    "start": "334080",
    "end": "337110"
  },
  {
    "text": "we'll call get AWS command let name",
    "start": "337110",
    "end": "339800"
  },
  {
    "text": "match with reg X bucket and this is",
    "start": "339800",
    "end": "343440"
  },
  {
    "text": "going to return any command that matches",
    "start": "343440",
    "end": "345930"
  },
  {
    "text": "the name bucket and then finally if we",
    "start": "345930",
    "end": "348389"
  },
  {
    "text": "want to get a specific PowerShell",
    "start": "348389",
    "end": "350099"
  },
  {
    "text": "command for a specific AWS API such as",
    "start": "350099",
    "end": "353669"
  },
  {
    "text": "put object we can use the API operation",
    "start": "353669",
    "end": "356699"
  },
  {
    "text": "parameter on the get AWS command let",
    "start": "356699",
    "end": "359009"
  },
  {
    "text": "name command if you've already deployed",
    "start": "359009",
    "end": "362400"
  },
  {
    "text": "some AWS lambda functions try calling",
    "start": "362400",
    "end": "364710"
  },
  {
    "text": "this command to obtain a list of them",
    "start": "364710",
    "end": "366360"
  },
  {
    "text": "from your AWS account so we'll type get",
    "start": "366360",
    "end": "369960"
  },
  {
    "text": "LM function list and as you can see I",
    "start": "369960",
    "end": "372479"
  },
  {
    "text": "get back a list of AWS lambda functions",
    "start": "372479",
    "end": "374759"
  },
  {
    "text": "from my AWS account you can also use the",
    "start": "374759",
    "end": "378870"
  },
  {
    "start": "377000",
    "end": "415000"
  },
  {
    "text": "native group object command in",
    "start": "378870",
    "end": "380340"
  },
  {
    "text": "PowerShell to group objects together",
    "start": "380340",
    "end": "381900"
  },
  {
    "text": "based on a common property this makes it",
    "start": "381900",
    "end": "384779"
  },
  {
    "text": "easy to run simple reports against your",
    "start": "384779",
    "end": "386729"
  },
  {
    "text": "AWS resources and get a count back in",
    "start": "386729",
    "end": "389479"
  },
  {
    "text": "the AWS lambda example try grouping them",
    "start": "389479",
    "end": "392400"
  },
  {
    "text": "together based on the configured memory",
    "start": "392400",
    "end": "394050"
  },
  {
    "text": "size or runtime so in this example we're",
    "start": "394050",
    "end": "397320"
  },
  {
    "text": "going to call get LM function list and",
    "start": "397320",
    "end": "399180"
  },
  {
    "text": "pipe that into the group",
    "start": "399180",
    "end": "401129"
  },
  {
    "text": "object command and then specify that we",
    "start": "401129",
    "end": "403619"
  },
  {
    "text": "want to group the objects together based",
    "start": "403619",
    "end": "405629"
  },
  {
    "text": "on the runtime property as you can see I",
    "start": "405629",
    "end": "408449"
  },
  {
    "text": "have lambda functions from Python 3.6",
    "start": "408449",
    "end": "411539"
  },
  {
    "text": "Python 2.7 as well as nodejs",
    "start": "411539",
    "end": "414679"
  },
  {
    "text": "you can also filter an array of objects",
    "start": "414679",
    "end": "417449"
  },
  {
    "start": "415000",
    "end": "491000"
  },
  {
    "text": "down to the objects that you care about",
    "start": "417449",
    "end": "419099"
  },
  {
    "text": "power shells where object command",
    "start": "419099",
    "end": "421349"
  },
  {
    "text": "provides a generic interface to filter",
    "start": "421349",
    "end": "423389"
  },
  {
    "text": "your objects based on certain criteria",
    "start": "423389",
    "end": "425539"
  },
  {
    "text": "for example let's say that we wanted to",
    "start": "425539",
    "end": "428099"
  },
  {
    "text": "find a list of aw s lambda functions",
    "start": "428099",
    "end": "430050"
  },
  {
    "text": "that matches a particular runtime so",
    "start": "430050",
    "end": "432959"
  },
  {
    "text": "we'll call the get LM function list",
    "start": "432959",
    "end": "434369"
  },
  {
    "text": "command again to retrieve a list of our",
    "start": "434369",
    "end": "436379"
  },
  {
    "text": "lambda functions and then we'll pipe it",
    "start": "436379",
    "end": "438419"
  },
  {
    "text": "into this where object command and",
    "start": "438419",
    "end": "440099"
  },
  {
    "text": "specify a filter script containing the",
    "start": "440099",
    "end": "442529"
  },
  {
    "text": "criteria returning either a true or",
    "start": "442529",
    "end": "444569"
  },
  {
    "text": "false value that matches the criteria we",
    "start": "444569",
    "end": "447599"
  },
  {
    "text": "want to filter on as you can see we've",
    "start": "447599",
    "end": "450659"
  },
  {
    "text": "filtered our list of lambda functions",
    "start": "450659",
    "end": "452069"
  },
  {
    "text": "down to only the ones that match the",
    "start": "452069",
    "end": "453539"
  },
  {
    "text": "Python 3.6 runtime if you need to",
    "start": "453539",
    "end": "456629"
  },
  {
    "text": "perform an action against many resources",
    "start": "456629",
    "end": "458610"
  },
  {
    "text": "at once you can use the powershell",
    "start": "458610",
    "end": "460559"
  },
  {
    "text": "pipeline for example let's say that you",
    "start": "460559",
    "end": "462809"
  },
  {
    "text": "wanted to delete all of your AWS lambda",
    "start": "462809",
    "end": "464909"
  },
  {
    "text": "functions that used the old Python 2.7",
    "start": "464909",
    "end": "467069"
  },
  {
    "text": "runtime the following command would",
    "start": "467069",
    "end": "469649"
  },
  {
    "text": "achieve that so we'll call the get LM",
    "start": "469649",
    "end": "474089"
  },
  {
    "text": "function list again with where object",
    "start": "474089",
    "end": "476009"
  },
  {
    "text": "and we're going to change our runtime to",
    "start": "476009",
    "end": "477839"
  },
  {
    "text": "Python 2.7 finally we're going to pipe",
    "start": "477839",
    "end": "480869"
  },
  {
    "text": "those objects into the remove LM",
    "start": "480869",
    "end": "482819"
  },
  {
    "text": "function command and if we hit enter",
    "start": "482819",
    "end": "484829"
  },
  {
    "text": "you'll see that all of those lambda",
    "start": "484829",
    "end": "486719"
  },
  {
    "text": "functions that match our criteria are",
    "start": "486719",
    "end": "488849"
  },
  {
    "text": "going to get to deleted if a command",
    "start": "488849",
    "end": "492749"
  },
  {
    "start": "491000",
    "end": "540000"
  },
  {
    "text": "doesn't exist to perform the operation",
    "start": "492749",
    "end": "495059"
  },
  {
    "text": "you're expecting you can instead pipe",
    "start": "495059",
    "end": "497009"
  },
  {
    "text": "your array of objects into the built in",
    "start": "497009",
    "end": "498719"
  },
  {
    "text": "for each object command in PowerShell",
    "start": "498719",
    "end": "500539"
  },
  {
    "text": "for example you could create a log entry",
    "start": "500539",
    "end": "503309"
  },
  {
    "text": "for an array of objects using this",
    "start": "503309",
    "end": "505229"
  },
  {
    "text": "command so we'll get a list of our",
    "start": "505229",
    "end": "507869"
  },
  {
    "text": "lambda functions once again and then",
    "start": "507869",
    "end": "510419"
  },
  {
    "text": "we'll pipe it into the for each object",
    "start": "510419",
    "end": "512610"
  },
  {
    "text": "command and specify a useful log entry",
    "start": "512610",
    "end": "517620"
  },
  {
    "text": "like the function named X has a y memory",
    "start": "517620",
    "end": "524039"
  },
  {
    "text": "size",
    "start": "524039",
    "end": "526250"
  },
  {
    "text": "and then we'll substitute our function",
    "start": "527420",
    "end": "530329"
  },
  {
    "text": "name and our memory size so that's going",
    "start": "530329",
    "end": "536149"
  },
  {
    "text": "to iterate over each lambda function and",
    "start": "536149",
    "end": "538610"
  },
  {
    "text": "generate a log entry for it before we",
    "start": "538610",
    "end": "541370"
  },
  {
    "start": "540000",
    "end": "574000"
  },
  {
    "text": "wrap up let's look at the JSON",
    "start": "541370",
    "end": "542959"
  },
  {
    "text": "conversion commands in PowerShell you",
    "start": "542959",
    "end": "545000"
  },
  {
    "text": "can use this command to find related",
    "start": "545000",
    "end": "546589"
  },
  {
    "text": "JSON commands in the shell environment",
    "start": "546589",
    "end": "548690"
  },
  {
    "text": "so we'll call it get command with a name",
    "start": "548690",
    "end": "551959"
  },
  {
    "text": "of star JSON star just as wildcards and",
    "start": "551959",
    "end": "554750"
  },
  {
    "text": "as you can see we've got the convert to",
    "start": "554750",
    "end": "557029"
  },
  {
    "text": "and convert from JSON commands that are",
    "start": "557029",
    "end": "559940"
  },
  {
    "text": "built directly into PowerShell if you're",
    "start": "559940",
    "end": "562610"
  },
  {
    "text": "starting to worry that these commands",
    "start": "562610",
    "end": "563930"
  },
  {
    "text": "look too long remember that you get",
    "start": "563930",
    "end": "565699"
  },
  {
    "text": "intellisense also known as tab",
    "start": "565699",
    "end": "567290"
  },
  {
    "text": "completion for both command and",
    "start": "567290",
    "end": "569209"
  },
  {
    "text": "parameter names out of the box make sure",
    "start": "569209",
    "end": "571699"
  },
  {
    "text": "that you use this feature to your",
    "start": "571699",
    "end": "573019"
  },
  {
    "text": "advantage",
    "start": "573019",
    "end": "573850"
  },
  {
    "text": "there are also built-in aliases for many",
    "start": "573850",
    "end": "576680"
  },
  {
    "start": "574000",
    "end": "649000"
  },
  {
    "text": "commands that can aid while typing out",
    "start": "576680",
    "end": "578360"
  },
  {
    "text": "commands interactively for example the",
    "start": "578360",
    "end": "581209"
  },
  {
    "text": "where object command has a default alias",
    "start": "581209",
    "end": "583220"
  },
  {
    "text": "of question mark the for each object",
    "start": "583220",
    "end": "585529"
  },
  {
    "text": "command has a default alias of % one of",
    "start": "585529",
    "end": "589519"
  },
  {
    "text": "the key advantages to powershell is that",
    "start": "589519",
    "end": "591350"
  },
  {
    "text": "the language reads naturally like plain",
    "start": "591350",
    "end": "593180"
  },
  {
    "text": "english although it may be different",
    "start": "593180",
    "end": "595880"
  },
  {
    "text": "from what you're used to with other",
    "start": "595880",
    "end": "596779"
  },
  {
    "text": "languages i think you'll find that this",
    "start": "596779",
    "end": "598279"
  },
  {
    "text": "is useful longer term especially in",
    "start": "598279",
    "end": "600260"
  },
  {
    "text": "shared code repositories this video was",
    "start": "600260",
    "end": "603079"
  },
  {
    "text": "a brief introduction to powershell",
    "start": "603079",
    "end": "604670"
  },
  {
    "text": "that barely even scratches the surface",
    "start": "604670",
    "end": "606440"
  },
  {
    "text": "of its depth as you can see PowerShell",
    "start": "606440",
    "end": "609230"
  },
  {
    "text": "is a powerful shell for both interactive",
    "start": "609230",
    "end": "611329"
  },
  {
    "text": "use as well as creating complex",
    "start": "611329",
    "end": "613100"
  },
  {
    "text": "applications I encourage you to install",
    "start": "613100",
    "end": "615829"
  },
  {
    "text": "PowerShell and spend some time learning",
    "start": "615829",
    "end": "617750"
  },
  {
    "text": "about its unique approach to interactive",
    "start": "617750",
    "end": "619790"
  },
  {
    "text": "command-line usage with its powerful",
    "start": "619790",
    "end": "622070"
  },
  {
    "text": "easy to understand commands data",
    "start": "622070",
    "end": "624500"
  },
  {
    "text": "processing features and cloud",
    "start": "624500",
    "end": "626089"
  },
  {
    "text": "integration with AWS I'm confident that",
    "start": "626089",
    "end": "628670"
  },
  {
    "text": "it will help you be more productive in",
    "start": "628670",
    "end": "630319"
  },
  {
    "text": "your work regardless of what role you",
    "start": "630319",
    "end": "632209"
  },
  {
    "text": "hold in your organization thanks for",
    "start": "632209",
    "end": "634459"
  },
  {
    "text": "watching this video in the dotnet",
    "start": "634459",
    "end": "635569"
  },
  {
    "text": "learning series and look for future",
    "start": "635569",
    "end": "637220"
  },
  {
    "text": "videos on AWS and PowerShell development",
    "start": "637220",
    "end": "641860"
  },
  {
    "text": "[Music]",
    "start": "641910",
    "end": "651389"
  }
]