[
  {
    "start": "0",
    "end": "206000"
  },
  {
    "text": "solutions architect here with the global financial services group within AWS we",
    "start": "10179",
    "end": "16539"
  },
  {
    "text": "help fin surf firms get to the cloud and adopt a cloud and understand the cloud so my role is you know technology",
    "start": "16539",
    "end": "23259"
  },
  {
    "text": "advisor understand the platform how do government might build an AWS so",
    "start": "23259",
    "end": "32168"
  },
  {
    "text": "I talk today is a collection of emerging patterns and practices that are helping",
    "start": "32169",
    "end": "39430"
  },
  {
    "text": "our fin serve customers with building infrastructure in AWS with better",
    "start": "39430",
    "end": "46269"
  },
  {
    "text": "audibility auditability in mind so the",
    "start": "46269",
    "end": "53199"
  },
  {
    "text": "first part of this talk is just a quick review of how to approach compliance in",
    "start": "53199",
    "end": "60070"
  },
  {
    "text": "AWS and what you build in AWS and the second part of the talk is a quick tour",
    "start": "60070",
    "end": "68200"
  },
  {
    "text": "of variety of governance patterns particularly around user access control",
    "start": "68200",
    "end": "74310"
  },
  {
    "text": "which is a big topic in IC governance compliance so compliance means many",
    "start": "74310",
    "end": "81130"
  },
  {
    "text": "things and financial services you know akka mean dodd-frank stress testing it convene you know 50 money laundering and",
    "start": "81130",
    "end": "89170"
  },
  {
    "text": "banking and community you know if you're lending making sure your loan portfolio or ring contribute loans are fair and we",
    "start": "89170",
    "end": "99610"
  },
  {
    "text": "certainly have financial services customers should build those types of systems in AWS and we have partners who",
    "start": "99610",
    "end": "105310"
  },
  {
    "text": "specialize in that side of compliance and regulation this talk is more focused",
    "start": "105310",
    "end": "112120"
  },
  {
    "text": "on the IT governance piece and how can you build system have auditability in mind for better IT",
    "start": "112120",
    "end": "120979"
  },
  {
    "text": "governance compliance so a quick review of compliance in AWS we have of course a",
    "start": "120979",
    "end": "129950"
  },
  {
    "text": "website where you can download and look at the variety of compliance programs",
    "start": "129950",
    "end": "137750"
  },
  {
    "text": "around 90 governance that our platform is aligned to so we provide",
    "start": "137750",
    "end": "144850"
  },
  {
    "text": "documentation and how we aligned our security practices and our internal governance to these frameworks we also",
    "start": "144850",
    "end": "154280"
  },
  {
    "text": "have an internal website that you can reach from inside your AWS account to",
    "start": "154280",
    "end": "160610"
  },
  {
    "text": "download our detailed audit reports from our third-party auditors so that's",
    "start": "160610",
    "end": "165980"
  },
  {
    "text": "helpful for understanding our controls and how we align our practices to these and many other frameworks there's also a",
    "start": "165980",
    "end": "174230"
  },
  {
    "text": "documentation on how to think about the responsibilities between AWS and",
    "start": "174230",
    "end": "180620"
  },
  {
    "text": "yourselves if you need to put a workload in AWS that's say for example PCI compliant so it's part of the artifact",
    "start": "180620",
    "end": "188870"
  },
  {
    "text": "download for PCI package there's an excel sheet that shows you for all the",
    "start": "188870",
    "end": "194360"
  },
  {
    "text": "PCI controls here's the controls that AWS can attest to and here's the controls that you ought to think about",
    "start": "194360",
    "end": "202150"
  },
  {
    "text": "so that gets into our shared responsibility model that applies to",
    "start": "202150",
    "end": "208549"
  },
  {
    "start": "206000",
    "end": "206000"
  },
  {
    "text": "security and compliance so again suppose you're your objectives are to prove sauk",
    "start": "208549",
    "end": "216500"
  },
  {
    "text": "compliance iso PCI HIPAA etc how do you do that need WS is your auditors in",
    "start": "216500",
    "end": "226400"
  },
  {
    "text": "total want to see if all your controls meet these standards for the things you",
    "start": "226400",
    "end": "232100"
  },
  {
    "text": "don't have direct control over like the physical infrastructure that fits the lower-level layers of the cloud you",
    "start": "232100",
    "end": "239629"
  },
  {
    "text": "refer to AWS attestation of those controls for the things you do control",
    "start": "239629",
    "end": "245030"
  },
  {
    "text": "on the cloud your configurations your security groups your firewall rules etc",
    "start": "245030",
    "end": "250750"
  },
  {
    "text": "all the configurations that you control an AWS you also prove to your auditor",
    "start": "250750",
    "end": "256280"
  },
  {
    "text": "that you have those up to the appropriate standards so it's the sum of those things that proves compliance with",
    "start": "256280",
    "end": "263990"
  },
  {
    "text": "these frameworks so we have many customers in AWS who are PCI compliant",
    "start": "263990",
    "end": "269419"
  },
  {
    "text": "for example and this is how they do it so that's what we refer to as the shared",
    "start": "269419",
    "end": "275690"
  },
  {
    "text": "security model so I'm going to share the responsibility model rather so customers",
    "start": "275690",
    "end": "281419"
  },
  {
    "text": "often ask us well where do I start you know where do I begin to put this kind",
    "start": "281419",
    "end": "286430"
  },
  {
    "text": "of program together so with any compliance program it often comes down",
    "start": "286430",
    "end": "293030"
  },
  {
    "text": "to a spreadsheet of the controls we've talked to many customers and asked you",
    "start": "293030",
    "end": "299000"
  },
  {
    "text": "know what are you using for your GRC software your governance risk mappings",
    "start": "299000",
    "end": "304070"
  },
  {
    "text": "what are you using most often the answer we hear is Excel there's other software",
    "start": "304070",
    "end": "309800"
  },
  {
    "text": "out there but often it comes down to a grid of what's the risk where the",
    "start": "309800",
    "end": "315199"
  },
  {
    "text": "requirements and who owns that system because this is the map that helps you",
    "start": "315199",
    "end": "321229"
  },
  {
    "text": "get through the audit the auditors gonna ask what are you doing to control access to customer data so you fill this sheet",
    "start": "321229",
    "end": "328490"
  },
  {
    "text": "in in a way that helps you quickly map to who to talk to you around that set of",
    "start": "328490",
    "end": "334220"
  },
  {
    "text": "controls so for example just filling this in the risk is unauthorized access",
    "start": "334220",
    "end": "339349"
  },
  {
    "text": "the particular requirement is disabling active employee logins and then you have",
    "start": "339349",
    "end": "347419"
  },
  {
    "text": "your control references of which control frameworks actually require that and",
    "start": "347419",
    "end": "352610"
  },
  {
    "text": "what is the requirement so the top three rows would speak to what are you doing",
    "start": "352610",
    "end": "357680"
  },
  {
    "text": "on pram what do you do in your own corporate systems on-prem how do you do this in AWS well it's",
    "start": "357680",
    "end": "364249"
  },
  {
    "text": "basically the same thing you can add more rows or and how do we do it in AWS",
    "start": "364249",
    "end": "369259"
  },
  {
    "text": "where the technical controls there which team do you talk to or which team you",
    "start": "369259",
    "end": "375619"
  },
  {
    "text": "refer your auditor to to go find out more and how that's being controlled and where the evidence is so typically these",
    "start": "375619",
    "end": "382549"
  },
  {
    "text": "spreadsheets are much bigger much longer but this is just a small scale exam so",
    "start": "382549",
    "end": "389659"
  },
  {
    "text": "that's just a quick review of what the compliance journey typically looks like an AWS but designed for compliance is",
    "start": "389659",
    "end": "399049"
  },
  {
    "text": "more about how do you proactively design systems and architect things to help",
    "start": "399049",
    "end": "404749"
  },
  {
    "text": "your IT governance audits go a little smoother so in particular I'm gonna look",
    "start": "404749",
    "end": "412069"
  },
  {
    "text": "at access control it's a big topic within 90 governance it's often hard to",
    "start": "412069",
    "end": "417829"
  },
  {
    "text": "solve at a big scale so I want to show you some design for compliance patterns",
    "start": "417829",
    "end": "423559"
  },
  {
    "text": "like a beautiful production zero trust architecture you know role-based access",
    "start": "423559",
    "end": "430309"
  },
  {
    "text": "for systems change management etc I'm gonna talk about some of the AWS",
    "start": "430309",
    "end": "436069"
  },
  {
    "text": "services that help you address these things in a way that helps you produce",
    "start": "436069",
    "end": "441559"
  },
  {
    "text": "evidence for your auditors pretty quickly and explain your auditors how that's being controlled I'm gonna do it",
    "start": "441559",
    "end": "449899"
  },
  {
    "text": "by way of example of a few example audit findings these are just examples of you",
    "start": "449899",
    "end": "458539"
  },
  {
    "start": "450000",
    "end": "450000"
  },
  {
    "text": "know if you move some workloads into the cloud you start moving in at scale if",
    "start": "458539",
    "end": "464389"
  },
  {
    "text": "you move things in a way that's not designed for compliance you're just moving quickly and then you have a",
    "start": "464389",
    "end": "471319"
  },
  {
    "text": "third-party auditor come in or your internal auditor comes in takes a look at what you did",
    "start": "471319",
    "end": "476899"
  },
  {
    "text": "they might produce some audit findings such as you don't understand your",
    "start": "476899",
    "end": "482659"
  },
  {
    "text": "permissions landscape you have so many things going on or you put too many things in the same environment that your",
    "start": "482659",
    "end": "489409"
  },
  {
    "text": "permissions are confusing it's confusing to the auditor it might even be",
    "start": "489409",
    "end": "494419"
  },
  {
    "text": "confusing to some of the system's owners how can you avoid that secondly",
    "start": "494419",
    "end": "501129"
  },
  {
    "text": "developers have privileged access to production we sometimes hear this with customers who are trying to adopt DevOps",
    "start": "501129",
    "end": "507949"
  },
  {
    "text": "and so DevOps it's often assumed that the developers control operations which",
    "start": "507949",
    "end": "514130"
  },
  {
    "text": "is good practice but how do you do it in a way that your body heard it's gonna be ok with improved er auditor that it's",
    "start": "514130",
    "end": "520818"
  },
  {
    "text": "that's under control and third internal",
    "start": "520819",
    "end": "526429"
  },
  {
    "text": "systems lacking user authentication we sometimes see this where you have",
    "start": "526429",
    "end": "531709"
  },
  {
    "text": "internal api's on Prem that implicitly trust anything that's on the internal",
    "start": "531709",
    "end": "537110"
  },
  {
    "text": "network without any user authentication so when you bring that kind of workload",
    "start": "537110",
    "end": "543170"
  },
  {
    "text": "in AWS we have services that can help you quickly turn that into more",
    "start": "543170",
    "end": "549610"
  },
  {
    "text": "authorization authentication rather than just network controls I'll talk about that ok so taking the",
    "start": "549610",
    "end": "558379"
  },
  {
    "text": "first example permissions management teittleman owners have insufficient",
    "start": "558379",
    "end": "563540"
  },
  {
    "text": "understanding of understanding of permissions resulting in inappropriate",
    "start": "563540",
    "end": "569629"
  },
  {
    "text": "access and complete access reviews in other words a your auditors opinion is",
    "start": "569629",
    "end": "576050"
  },
  {
    "text": "that you know understanding of permissions landscape it maybe it got too complicated we see a few different",
    "start": "576050",
    "end": "581990"
  },
  {
    "text": "causes of this one cause is a proof-of-concept environment became",
    "start": "581990",
    "end": "588500"
  },
  {
    "text": "production in other words you know a development team built out a new capability pretty",
    "start": "588500",
    "end": "594200"
  },
  {
    "text": "launched it and made it go live in the same environment which became production",
    "start": "594200",
    "end": "599920"
  },
  {
    "text": "I'll talk a little about the complexities there and how to avoid it",
    "start": "599920",
    "end": "606430"
  },
  {
    "text": "another cause Deb staging prod or in the same environment so you don't have a clean separation between your Deb",
    "start": "606430",
    "end": "614030"
  },
  {
    "text": "permissions and customer data it's kind of all the same environment how can you",
    "start": "614030",
    "end": "619340"
  },
  {
    "text": "avoid that and overcrowded AWS environments putting too many things in",
    "start": "619340",
    "end": "625610"
  },
  {
    "text": "the same AWS account and I'll talk a little more about that as well so taking",
    "start": "625610",
    "end": "631340"
  },
  {
    "text": "the first situation we example cause Deb",
    "start": "631340",
    "end": "638690"
  },
  {
    "start": "635000",
    "end": "635000"
  },
  {
    "text": "became production so in this situation we sometimes see it where again a POC",
    "start": "638690",
    "end": "645320"
  },
  {
    "text": "was built out environment and their live customers were added and then you know",
    "start": "645320",
    "end": "652070"
  },
  {
    "text": "the POC environment became production so what happened here was the development",
    "start": "652070",
    "end": "657680"
  },
  {
    "text": "environment permissions which were kind of liberal kind of opened what the developers kind of experiment add like",
    "start": "657680",
    "end": "666020"
  },
  {
    "text": "traffic and it became production there was no rebasing of the permissions there were persistent permissions etc sake",
    "start": "666020",
    "end": "673880"
  },
  {
    "text": "avoid this well in AWS we have a service called CloudFormation infrastructure as",
    "start": "673880",
    "end": "680450"
  },
  {
    "text": "code so what we advocate here is you know go ahead and build out your MVP prototype build it out into a production",
    "start": "680450",
    "end": "687140"
  },
  {
    "text": "environment very liberal permissions there's no customer data there and that",
    "start": "687140",
    "end": "693650"
  },
  {
    "text": "when the MVP gets to a mature stage this is working and this is the design we",
    "start": "693650",
    "end": "699140"
  },
  {
    "text": "want you then build a a template of that environment so in AWS we call this",
    "start": "699140",
    "end": "704840"
  },
  {
    "text": "CloudFormation infrastructure as code where basically you can express that whole architecture",
    "start": "704840",
    "end": "710900"
  },
  {
    "text": "as code and bring that template over to a completely different environment",
    "start": "710900",
    "end": "717900"
  },
  {
    "text": "AWS account and launched it from scratch that'll effectively rebase the",
    "start": "717900",
    "end": "723900"
  },
  {
    "text": "permissions and build a clean room version of that architecture again with",
    "start": "723900",
    "end": "729450"
  },
  {
    "text": "just the least privileged permissions so just doing that alone will you know",
    "start": "729450",
    "end": "735810"
  },
  {
    "text": "avoid the situation of carrying over development environment permissions into",
    "start": "735810",
    "end": "741360"
  },
  {
    "text": "another account this also gets into kind of having a multi account strategy I'll",
    "start": "741360",
    "end": "747150"
  },
  {
    "text": "talk a little bit more about that so getting to the point of overcrowding AWS",
    "start": "747150",
    "end": "754440"
  },
  {
    "text": "accounts so in AWS an account is not a single user login it's not one person",
    "start": "754440",
    "end": "761160"
  },
  {
    "text": "let me say AWS account we're talking about a whole container of cloud infrastructure now early in the cloud",
    "start": "761160",
    "end": "769230"
  },
  {
    "text": "journey some you know security and governance teams might assume that it's",
    "start": "769230",
    "end": "775020"
  },
  {
    "text": "easier to have one AWS account and treat it like one data center and then have a",
    "start": "775020",
    "end": "780900"
  },
  {
    "text": "lot of teams work in that one AWS account that can often get really complicated as you can see illustrated",
    "start": "780900",
    "end": "788790"
  },
  {
    "text": "here because you start to have a bunch of random folks random roles random",
    "start": "788790",
    "end": "794040"
  },
  {
    "text": "projects all in the same environment and it becomes really hard to discern whose",
    "start": "794040",
    "end": "800430"
  },
  {
    "text": "permissions are whose who belongs to what who belongs to which project how do you divide up the costs when it comes",
    "start": "800430",
    "end": "807450"
  },
  {
    "text": "time to audit something like this that's where the auditors gonna raise the finding of you don't understand your",
    "start": "807450",
    "end": "813480"
  },
  {
    "text": "permissions landscape because nobody understands this it's a big shared",
    "start": "813480",
    "end": "818580"
  },
  {
    "text": "environment so what we suggest enterprises and certainly Finn serves is",
    "start": "818580",
    "end": "823790"
  },
  {
    "text": "have a multi account strategy so at least have different AWS accounts for",
    "start": "823790",
    "end": "830370"
  },
  {
    "start": "825000",
    "end": "825000"
  },
  {
    "text": "different departments and different teams often the account structure in AWS",
    "start": "830370",
    "end": "835589"
  },
  {
    "text": "will kind of ease humble your org structure that's what typically makes the most sense you also have another",
    "start": "835589",
    "end": "841650"
  },
  {
    "text": "dimension of Deb versus gauging versus prod so that's another",
    "start": "841650",
    "end": "847250"
  },
  {
    "text": "very typical separation and that way you cleanly have customer data in its own",
    "start": "847250",
    "end": "854090"
  },
  {
    "text": "AWS account governed by a team that understands that architecture so you can",
    "start": "854090",
    "end": "860300"
  },
  {
    "text": "sorta think of it the single-family homes where the family that occupies that home understands the architecture",
    "start": "860300",
    "end": "867380"
  },
  {
    "text": "and they understand what's going on in that account now when you go down this path as an",
    "start": "867380",
    "end": "873020"
  },
  {
    "text": "enterprise you're typically gonna end up with hundreds of AWS accounts and sometimes central security team will get",
    "start": "873020",
    "end": "880190"
  },
  {
    "text": "scared of that I think that's too many to manage but it is manageable it does",
    "start": "880190",
    "end": "885680"
  },
  {
    "text": "end up being better for cost and security reconciliations so we also have",
    "start": "885680",
    "end": "892070"
  },
  {
    "text": "pin serve customers like Thompson Reuters who've spoken at reinvent about",
    "start": "892070",
    "end": "898190"
  },
  {
    "text": "their multi account strategy in the kind of architecture they built the health government so that's a really good talk",
    "start": "898190",
    "end": "904940"
  },
  {
    "text": "if you want to go deeper on this topic we also have we're working on a new",
    "start": "904940",
    "end": "913910"
  },
  {
    "text": "service that we announced that reinvent called control tower and this helps you",
    "start": "913910",
    "end": "919420"
  },
  {
    "text": "launch multiple AWS accounts with the guardrails that are appropriate for your organization so we know that a lot of",
    "start": "919420",
    "end": "928400"
  },
  {
    "text": "enterprises spend a lot of energy building that account making machine",
    "start": "928400",
    "end": "933440"
  },
  {
    "text": "every time someone asks for a new account they go spin up the account put the guardrails in enroll it in support",
    "start": "933440",
    "end": "941180"
  },
  {
    "text": "think of the billing so on so on so a control tower is a new service or",
    "start": "941180",
    "end": "946520"
  },
  {
    "text": "building that helps you do all that so that's really great for governance - and",
    "start": "946520",
    "end": "952970"
  },
  {
    "text": "it helps you manage a multi account strategy another common feature of an",
    "start": "952970",
    "end": "960140"
  },
  {
    "start": "959000",
    "end": "959000"
  },
  {
    "text": "enterprise build out in aw yes is having federated access into AWS",
    "start": "960140",
    "end": "966089"
  },
  {
    "text": "so access that ties back to your corporate identities that's really important all the staff all the",
    "start": "966089",
    "end": "973589"
  },
  {
    "text": "associates that are accessing AWS it should be tied to their corporate identity getting back to the requirement",
    "start": "973589",
    "end": "980610"
  },
  {
    "text": "of when somebody leaves the company their permissions have to be cut off everywhere since I do accomplish that",
    "start": "980610",
    "end": "986970"
  },
  {
    "text": "you either Fedder a twith your Active Directory into a ws or you leverage the",
    "start": "986970",
    "end": "992910"
  },
  {
    "text": "AWS SSO service makes it real easy for you to set up centralized federated",
    "start": "992910",
    "end": "998130"
  },
  {
    "text": "access and AWS so that's for human access to AWS we have another kind of",
    "start": "998130",
    "end": "1004610"
  },
  {
    "text": "role based access I'll talk about called service roles and another service of AWS",
    "start": "1004610",
    "end": "1014959"
  },
  {
    "start": "1012000",
    "end": "1012000"
  },
  {
    "text": "that helps you centrally manage permissions and guard rails is AWS organizations so if you haven't used it",
    "start": "1014959",
    "end": "1022820"
  },
  {
    "text": "yet this is a really powerful way to centrally manage permissions and set guardrails this example on the board",
    "start": "1022820",
    "end": "1029928"
  },
  {
    "text": "demonstrates if you have an admin role in every AWS account in order to allow",
    "start": "1029929",
    "end": "1037069"
  },
  {
    "text": "your security team to essentially manage everything and you don't want to allow people to delete that role for example",
    "start": "1037069",
    "end": "1045730"
  },
  {
    "text": "organizations is the kind of service you would use to set those kind of guardrails",
    "start": "1045730",
    "end": "1051760"
  },
  {
    "text": "last week we announced some new features in organizations for those of you who've",
    "start": "1054300",
    "end": "1060150"
  },
  {
    "text": "looked at it before and compared it to I am our I am service Identity and Access",
    "start": "1060150",
    "end": "1067110"
  },
  {
    "text": "Management is where you manage very granular access policies in AWS but it's",
    "start": "1067110",
    "end": "1073320"
  },
  {
    "text": "Prarie AWS account organizations will span your whole fleet of AWS accounts so",
    "start": "1073320",
    "end": "1080670"
  },
  {
    "text": "it gives you one central place to set guardrails we recently announced these new actions at the bottom here that",
    "start": "1080670",
    "end": "1090450"
  },
  {
    "text": "mimic what you can do with IEM policies so organizations policies are now more granular so it gives you even more",
    "start": "1090450",
    "end": "1097740"
  },
  {
    "text": "ability to essentially manage your permissions okay so that was you know",
    "start": "1097740",
    "end": "1106620"
  },
  {
    "start": "1104000",
    "end": "1104000"
  },
  {
    "text": "interesting the first finding of insufficient understanding of permissions I'll go back and summarize",
    "start": "1106620",
    "end": "1112530"
  },
  {
    "text": "those later like what kinds of services will help you but I'll move on to the",
    "start": "1112530",
    "end": "1117780"
  },
  {
    "text": "second finding developers have access to production so let's say the auditor",
    "start": "1117780",
    "end": "1124080"
  },
  {
    "text": "writes it like this developers have been granted access to allows migrating changes to production so the real",
    "start": "1124080",
    "end": "1131429"
  },
  {
    "text": "concern here is not that DevOps goes against any regulatory requirement",
    "start": "1131429",
    "end": "1137730"
  },
  {
    "text": "it doesn't you can still be DevOps how do you do DevOps in a way that speaks to nobody is self permission to",
    "start": "1137730",
    "end": "1145830"
  },
  {
    "text": "make changes to production so some underlying causes humans are deploying",
    "start": "1145830",
    "end": "1153090"
  },
  {
    "text": "changes to production what that speaks to is a lack of automation wherever you have lack of automation you can lose",
    "start": "1153090",
    "end": "1160800"
  },
  {
    "text": "audit ability and you basically have privileged individuals who can make changes to production with",
    "start": "1160800",
    "end": "1167059"
  },
  {
    "text": "approval so you want to use automation and kind of get rid of that situation",
    "start": "1167059",
    "end": "1173679"
  },
  {
    "text": "change approvals are not related to change deployments in other words a lack",
    "start": "1173679",
    "end": "1178820"
  },
  {
    "text": "of a change management system or a lack of documentation as to why production",
    "start": "1178820",
    "end": "1183830"
  },
  {
    "text": "was changed it's one thing that logs that tell you that something changed but",
    "start": "1183830",
    "end": "1189200"
  },
  {
    "text": "if you can't correlate it to why and who approved it then your auditor is not gonna be happy so how do you avoid that",
    "start": "1189200",
    "end": "1197769"
  },
  {
    "text": "and lastly developers demanded production access for fire call escalations in other words break glass",
    "start": "1197769",
    "end": "1204110"
  },
  {
    "text": "again going back to DevOps if you make developers more responsible for operations implicitly they need some",
    "start": "1204110",
    "end": "1212749"
  },
  {
    "text": "sort of break glass procedure to deal with production situations to go in and",
    "start": "1212749",
    "end": "1219019"
  },
  {
    "text": "fix things that are broken live so how can you facilitate that without you know",
    "start": "1219019",
    "end": "1226429"
  },
  {
    "text": "drawing the ire of your auditors so getting back to deploying changes and",
    "start": "1226429",
    "end": "1233320"
  },
  {
    "text": "automation lack of automation the posture we recommend is immutable",
    "start": "1233320",
    "end": "1239210"
  },
  {
    "text": "production the idea of immutable production is basically the posture of",
    "start": "1239210",
    "end": "1245419"
  },
  {
    "text": "no humans allowed in production it's easier said than done but there are ways",
    "start": "1245419",
    "end": "1250789"
  },
  {
    "text": "to accomplish this but once you can tell your auditor we don't allow humans in production and you can prove it it makes",
    "start": "1250789",
    "end": "1258200"
  },
  {
    "text": "your auditing IT governance auditing a whole lot easier so I'll talk about how do you actually do this first of all",
    "start": "1258200",
    "end": "1266779"
  },
  {
    "text": "it's obviously in your CI CD tooling you have to have a lot of automation to you",
    "start": "1266779",
    "end": "1272210"
  },
  {
    "text": "know develop in one environment in other words one AWS account you do your development any other staging",
    "start": "1272210",
    "end": "1278299"
  },
  {
    "text": "environment which is a copy of production and then you have automation that delivers the code into",
    "start": "1278299",
    "end": "1286380"
  },
  {
    "text": "and you do a lot automated monitoring it's typical in financial services that",
    "start": "1286380",
    "end": "1292110"
  },
  {
    "text": "you want to pull production data back into staging to run your tests against a copy of production we have to mask it so",
    "start": "1292110",
    "end": "1300210"
  },
  {
    "text": "it's typical of our fin serve customers to use tools like Dell fix the mass production data and bring it back into",
    "start": "1300210",
    "end": "1307110"
  },
  {
    "text": "lower environments to make sure staging is a high fidelity copy of production",
    "start": "1307110",
    "end": "1313170"
  },
  {
    "text": "but the whole point of this is if you stick to the rule of no humans in",
    "start": "1313170",
    "end": "1318300"
  },
  {
    "text": "production and only teams can change production then it just becomes a challenge of controlling access to the",
    "start": "1318300",
    "end": "1325830"
  },
  {
    "text": "tools who can push the button to deploy but once you got that button that can deploy and no humans involved your audit",
    "start": "1325830",
    "end": "1334020"
  },
  {
    "text": "ability is vastly improved so the second",
    "start": "1334020",
    "end": "1339240"
  },
  {
    "text": "piece of this is the change management and the audibility of changes and who",
    "start": "1339240",
    "end": "1344490"
  },
  {
    "text": "approved it that's really what separation of duties is all about it's not it doesn't mean that you can only",
    "start": "1344490",
    "end": "1351630"
  },
  {
    "text": "deploy in production if your job title doesn't have the word developer in it",
    "start": "1351630",
    "end": "1357030"
  },
  {
    "text": "that's not what it means what it means is separation of duties nobody solve permissioned to change",
    "start": "1357030",
    "end": "1363270"
  },
  {
    "text": "production so in a DevOps way something",
    "start": "1363270",
    "end": "1368340"
  },
  {
    "text": "as simple as a code review that can justify the production change to prove",
    "start": "1368340",
    "end": "1373800"
  },
  {
    "text": "dr auditor that yes production was changed and here's the actual reason it was changed and",
    "start": "1373800",
    "end": "1381180"
  },
  {
    "text": "here's who approved it once you have that audit trail of tying every change",
    "start": "1381180",
    "end": "1386430"
  },
  {
    "text": "back to an approval and back to who approved it now you can prove separation of duties",
    "start": "1386430",
    "end": "1391880"
  },
  {
    "text": "and of course your tool should also produce logs of test results deployment",
    "start": "1391880",
    "end": "1399270"
  },
  {
    "text": "logs etc that you can then tie back to the actual change approval",
    "start": "1399270",
    "end": "1404470"
  },
  {
    "text": "so now you close the loop on who changed it why it changed and who approved it",
    "start": "1404470",
    "end": "1409630"
  },
  {
    "text": "and it was done in a way that no single human in the organization could do that without other people approving and",
    "start": "1409630",
    "end": "1416140"
  },
  {
    "text": "noticing so these slides are doing",
    "start": "1416140",
    "end": "1424240"
  },
  {
    "start": "1420000",
    "end": "1420000"
  },
  {
    "text": "something weird on this display but okay the other thing I mentioned was in a",
    "start": "1424240",
    "end": "1431500"
  },
  {
    "text": "DevOps posture you know you might end up with developers have persistent access to production your auditors not gonna",
    "start": "1431500",
    "end": "1438010"
  },
  {
    "text": "like that how do you address that that has to do with just-in-time access and",
    "start": "1438010",
    "end": "1443770"
  },
  {
    "text": "again using access approval so you have an approval flow even for break glass access Saiki do that in AWS suppose",
    "start": "1443770",
    "end": "1454780"
  },
  {
    "text": "there is a problem in production in an engineer who understands that problem",
    "start": "1454780",
    "end": "1459909"
  },
  {
    "text": "needs to get into production and look around and diagnose how do you approve it",
    "start": "1459909",
    "end": "1464940"
  },
  {
    "text": "typically you can have like an internal access control portal or some sort of ticketing system where that person goes",
    "start": "1464940",
    "end": "1471730"
  },
  {
    "text": "in and asks for temporary production access another human has to review that",
    "start": "1471730",
    "end": "1479470"
  },
  {
    "text": "ticket and approve it again nobody's self permission to do anything you got to have at least two people to approve",
    "start": "1479470",
    "end": "1486580"
  },
  {
    "text": "this once that's been approved and in AWS you have an IM action called",
    "start": "1486580",
    "end": "1492940"
  },
  {
    "text": "you know assume role basically role based access into the production environment now what's cool because AWS is all API",
    "start": "1492940",
    "end": "1500169"
  },
  {
    "text": "driven is you can create that role on the fly and you can name the role according to the access ticket and the",
    "start": "1500169",
    "end": "1508510"
  },
  {
    "text": "reason for that is to close the loop on auditability so the engineer goes in they diagnose",
    "start": "1508510",
    "end": "1516760"
  },
  {
    "text": "they look around that role they assume can also have read-only access so you can prove that",
    "start": "1516760",
    "end": "1522310"
  },
  {
    "text": "couldn't actually change that thing they can only look and the only way to remediate was to perhaps pushing our",
    "start": "1522310",
    "end": "1528250"
  },
  {
    "text": "change to production it depends on what posture you want to take but you could go to that yeah you",
    "start": "1528250",
    "end": "1533980"
  },
  {
    "text": "can do that as well and then finally in AWS we have what's called the cloud",
    "start": "1533980",
    "end": "1539860"
  },
  {
    "text": "trail log which lets you tie everything that that particular iam identity did in",
    "start": "1539860",
    "end": "1547030"
  },
  {
    "text": "that environment goes back to a log so again if you created the role according to the name and the ticket what's gonna",
    "start": "1547030",
    "end": "1553420"
  },
  {
    "text": "end up showing up in the log can be easily be tied back to that access ticket so you can prove dr auditor that",
    "start": "1553420",
    "end": "1560220"
  },
  {
    "text": "the access was temporary it was read-only and everything they did is tied back to the log so that's an",
    "start": "1560220",
    "end": "1568600"
  },
  {
    "text": "example of design for compliance kind of it's one thing to this build systems where you allow people to have access",
    "start": "1568600",
    "end": "1575050"
  },
  {
    "text": "but it's another thing to build it out in such a way that you have audit",
    "start": "1575050",
    "end": "1580180"
  },
  {
    "start": "1577000",
    "end": "1577000"
  },
  {
    "text": "ability in mind another thing when it",
    "start": "1580180",
    "end": "1585520"
  },
  {
    "text": "comes to giving engineers and developers access or even operators access to production is the standard pattern in",
    "start": "1585520",
    "end": "1591760"
  },
  {
    "text": "our industry is jump boxes and SSH bastions and so on oh this has been",
    "start": "1591760",
    "end": "1598390"
  },
  {
    "text": "standard practice for a long time in terms of audibility it's kind of tricky first of all because it's persistent",
    "start": "1598390",
    "end": "1605490"
  },
  {
    "text": "permissions often it's SSH keys which can linger there for a long time",
    "start": "1605490",
    "end": "1610980"
  },
  {
    "text": "secondly you can lose track ability of what that person did after they've left",
    "start": "1610980",
    "end": "1616510"
  },
  {
    "text": "the jump box they jumped into something I would say you kind of lose their audit trail there's ways to fix that but it",
    "start": "1616510",
    "end": "1623560"
  },
  {
    "text": "does require some engineering to kind of close that loop on our platform we have",
    "start": "1623560",
    "end": "1629320"
  },
  {
    "text": "a service called Systems Manager which is an agent-based service service which",
    "start": "1629320",
    "end": "1634990"
  },
  {
    "text": "you can run on virtual machines either in AWS or on kram you choose where to",
    "start": "1634990",
    "end": "1640990"
  },
  {
    "text": "put the sage in what's really cool is that as a feature called sessions manager which basically gives you as",
    "start": "1640990",
    "end": "1647290"
  },
  {
    "text": "sh like access but it's tied back to roles it's based on ephemeral",
    "start": "1647290",
    "end": "1653400"
  },
  {
    "text": "credentials essentially in its auditable everything that that person did all",
    "start": "1653400",
    "end": "1659260"
  },
  {
    "text": "their commands and all their output is saved to a indelible log so you can",
    "start": "1659260",
    "end": "1664690"
  },
  {
    "text": "prove to your auditor that yes they got in they were granted temporary access and here's everything they did and",
    "start": "1664690",
    "end": "1670690"
  },
  {
    "text": "what's nice about the set up is you don't have to worry about allowing SSH",
    "start": "1670690",
    "end": "1676000"
  },
  {
    "text": "ports you don't have to worry about distributing SSH keys etc etc it's all tied back to I am Rawls that's a really",
    "start": "1676000",
    "end": "1682870"
  },
  {
    "text": "cool feature for managing access to systems in AWS in Amazon general we're",
    "start": "1682870",
    "end": "1692380"
  },
  {
    "text": "obsessed with weekly metrics that's kind of how we drive internal programs and",
    "start": "1692380",
    "end": "1697540"
  },
  {
    "text": "initiatives as we basically come up with a owner for that initiative and that",
    "start": "1697540",
    "end": "1705250"
  },
  {
    "text": "owner collects metrics and tries to drive those metrics down to an acceptable SLA so keeping that in mind",
    "start": "1705250",
    "end": "1712090"
  },
  {
    "text": "you may you know if you want to push for a mutable production you can treat any",
    "start": "1712090",
    "end": "1718060"
  },
  {
    "text": "time someone walks into a production system as kind of undesirable situation",
    "start": "1718060",
    "end": "1723460"
  },
  {
    "text": "that you want to drive down to a low acceptable level so through Systems",
    "start": "1723460",
    "end": "1730060"
  },
  {
    "text": "Manager and cloud trail logs etc you can in our cloud watch service you can start",
    "start": "1730060",
    "end": "1736570"
  },
  {
    "text": "to gather metrics on how often people are getting into production and then you",
    "start": "1736570",
    "end": "1742300"
  },
  {
    "text": "can chase down those teams and ask them why and why are you going into production so often and help those teams",
    "start": "1742300",
    "end": "1748480"
  },
  {
    "text": "kind of adopt patterns like immutable production to help tribe drive those metrics down so our platform makes it",
    "start": "1748480",
    "end": "1756640"
  },
  {
    "text": "easy to kind of pull together these metrics and report on that to help you",
    "start": "1756640",
    "end": "1762730"
  },
  {
    "text": "you know drive the right practice also when it comes to you know just-in-time",
    "start": "1762730",
    "end": "1770050"
  },
  {
    "text": "access privileged access management we have partners in the space so cyber-ark octa",
    "start": "1770050",
    "end": "1776380"
  },
  {
    "text": "Centrify beyond trusts and many others they specialized in privileged access",
    "start": "1776380",
    "end": "1782289"
  },
  {
    "text": "management granting just-in-time access management having access on its etc so",
    "start": "1782289",
    "end": "1790590"
  },
  {
    "text": "if you need more help in that space we have some partners who specialize in",
    "start": "1790590",
    "end": "1795669"
  },
  {
    "text": "that so a third example of an audit finding internal systems lacking user",
    "start": "1795669",
    "end": "1803409"
  },
  {
    "text": "authentication so let's look at the actual language it says internal systems",
    "start": "1803409",
    "end": "1810429"
  },
  {
    "text": "lacking access restrictions based on user identity and job role um so",
    "start": "1810429",
    "end": "1815889"
  },
  {
    "text": "underlying causes most commonly it's just relying too heavily on network access controls firewall rules etc to",
    "start": "1815889",
    "end": "1824289"
  },
  {
    "start": "1818000",
    "end": "1818000"
  },
  {
    "text": "establish trust another example is just anything",
    "start": "1824289",
    "end": "1829440"
  },
  {
    "text": "considering anything in your private network to be trusted without any user",
    "start": "1829440",
    "end": "1834549"
  },
  {
    "text": "authentication or authorization which second point lack of young user",
    "start": "1834549",
    "end": "1840190"
  },
  {
    "text": "authentication authorization on internal services we often see this with home",
    "start": "1840190",
    "end": "1846100"
  },
  {
    "text": "brewed homegrown api's where you know it was easier to stand up that API and a",
    "start": "1846100",
    "end": "1852100"
  },
  {
    "text": "trusted internal environment and implementing user access and",
    "start": "1852100",
    "end": "1857200"
  },
  {
    "text": "authentication is a lot of engineering work so it often ends up on the backlog and again over crowded environments just",
    "start": "1857200",
    "end": "1865360"
  },
  {
    "text": "putting again too much stuff into the same environment too many different teams could also cause this situation of",
    "start": "1865360",
    "end": "1874409"
  },
  {
    "text": "things not separated cleanly by user and job role so looking at an example",
    "start": "1874409",
    "end": "1884049"
  },
  {
    "text": "architecture that could you know cause this kind of finding again user access",
    "start": "1884049",
    "end": "1890169"
  },
  {
    "text": "based just on firewall rules here you see that that address range this 60 4:23 address range is pretty wide so",
    "start": "1890169",
    "end": "1898840"
  },
  {
    "text": "that's just trusting any IP in that range you could have an external partner that matches part of it but it's just",
    "start": "1898840",
    "end": "1905140"
  },
  {
    "text": "too wide and there's nothing in the firewall rule set explaining why that was left open and when it comes to zero",
    "start": "1905140",
    "end": "1915910"
  },
  {
    "text": "trust that the RSA security conference about a month ago the buzzword the",
    "start": "1915910",
    "end": "1921460"
  },
  {
    "text": "conference with zero trust and it had to do with limiting lateral movement within",
    "start": "1921460",
    "end": "1926950"
  },
  {
    "text": "your network so once there in your internal network you want to limit their",
    "start": "1926950",
    "end": "1932410"
  },
  {
    "text": "opportunities to move east and west to make lateral movements to other products",
    "start": "1932410",
    "end": "1937420"
  },
  {
    "text": "of your internal network so the zero trust idea is you basically implement",
    "start": "1937420",
    "end": "1943330"
  },
  {
    "text": "authorization authentication just about everywhere you can so in AWS kind of",
    "start": "1943330",
    "end": "1950670"
  },
  {
    "text": "reconsidering that sort of architecture how can you do more of a zero trust kind",
    "start": "1950670",
    "end": "1956410"
  },
  {
    "start": "1951000",
    "end": "1951000"
  },
  {
    "text": "of posture in AWS um taking the same architecture yeah you start with your",
    "start": "1956410",
    "end": "1963250"
  },
  {
    "text": "typical dmz where the external traffic comes in and you can use our services",
    "start": "1963250",
    "end": "1969280"
  },
  {
    "text": "like cloud fine Wow AWS shield to kind of insulate you from the hostilities of",
    "start": "1969280",
    "end": "1974710"
  },
  {
    "text": "the external internet so whether it's DDoS attacks or just injection attacks etc that's kind of your typical we also",
    "start": "1974710",
    "end": "1983650"
  },
  {
    "text": "have a lot of partners in that space as well but those services typically help you you know insulate you from some of",
    "start": "1983650",
    "end": "1991630"
  },
  {
    "text": "the attacks coming off the internet then when it comes to authorization we have a",
    "start": "1991630",
    "end": "1997930"
  },
  {
    "text": "service called API gateway which gives you like a front end to your REST API but makes it really easy to add",
    "start": "1997930",
    "end": "2005210"
  },
  {
    "text": "authentication to your REST API so you can pretty much you know take similar",
    "start": "2005210",
    "end": "2010560"
  },
  {
    "text": "code that you wrote pram for your internal api's and bring it to AWS and method by method you can",
    "start": "2010560",
    "end": "2018700"
  },
  {
    "text": "add role-based authentication to your API so you know an external user request",
    "start": "2018700",
    "end": "2025690"
  },
  {
    "text": "comes in it goes through you know the edge services first and then reaches API",
    "start": "2025690",
    "end": "2030940"
  },
  {
    "text": "gateway API gateway has got its own load balancing and routing built into it then",
    "start": "2030940",
    "end": "2037480"
  },
  {
    "text": "from the air it goes to your internal back-end services you could have made them server lists with lambda functions",
    "start": "2037480",
    "end": "2043270"
  },
  {
    "text": "or you could use DC to instances and no",
    "start": "2043270",
    "end": "2048310"
  },
  {
    "text": "one gets really interesting when it comes to zero trust and role based authentication is even internal servers",
    "start": "2048310",
    "end": "2056860"
  },
  {
    "text": "and functions in AWS can have a role so you can have role based access our DAC",
    "start": "2056860",
    "end": "2064360"
  },
  {
    "text": "role based access control for systems in AWS so you can permission a virtual",
    "start": "2064360",
    "end": "2071350"
  },
  {
    "text": "machine to talk to a database without using static credentials I'll talk a little more about that",
    "start": "2071350",
    "end": "2077050"
  },
  {
    "text": "same thing with your service functions you can permission service functions to take on a role to talk to certain api's",
    "start": "2077050",
    "end": "2084990"
  },
  {
    "text": "using not using static credentials but using role based access so a little",
    "start": "2084990",
    "end": "2093129"
  },
  {
    "text": "further into that avoiding static credentials you know the classic way to permission things in AWS or databases",
    "start": "2093130",
    "end": "2100390"
  },
  {
    "text": "was to use you know secret key and acts Keys increasingly rerelease capabilities",
    "start": "2100390",
    "end": "2107980"
  },
  {
    "text": "to move away from that and stop using static credentials and persistent",
    "start": "2107980",
    "end": "2113020"
  },
  {
    "text": "credentials you want to use system based roles roles for your systems or lambda",
    "start": "2113020",
    "end": "2120190"
  },
  {
    "text": "functions etc to permission role to use the resource rather than using static",
    "start": "2120190",
    "end": "2125710"
  },
  {
    "text": "credentials for those things that still require static credentials like",
    "start": "2125710",
    "end": "2130840"
  },
  {
    "text": "databases we released secrets manager and we also have a lot of thin serve",
    "start": "2130840",
    "end": "2135970"
  },
  {
    "text": "customers who use hashing court-involved so those kinds of solutions help you do",
    "start": "2135970",
    "end": "2143250"
  },
  {
    "text": "basically you know getting secrets on demand to log into something but the",
    "start": "2143250",
    "end": "2149320"
  },
  {
    "text": "access to the secret is controlled by roles",
    "start": "2149320",
    "end": "2153330"
  },
  {
    "start": "2156000",
    "end": "2156000"
  },
  {
    "text": "so static credentials can still exist in your AWS environment but you want to",
    "start": "2158650",
    "end": "2164290"
  },
  {
    "text": "stay on top of it so especially for auditing activity in our I am console",
    "start": "2164290",
    "end": "2171490"
  },
  {
    "text": "access and identity management you can download a credential report which is a",
    "start": "2171490",
    "end": "2178690"
  },
  {
    "text": "spreadsheet that will tell you a number of useful things that will tell you how",
    "start": "2178690",
    "end": "2185890"
  },
  {
    "text": "many static credentials you have when's the last time they were rotated this",
    "start": "2185890",
    "end": "2191020"
  },
  {
    "text": "works for both AWS console access as well as access keys so that's a very",
    "start": "2191020",
    "end": "2197440"
  },
  {
    "text": "important report to stay on top of helps you identify quickly if you have any",
    "start": "2197440",
    "end": "2202690"
  },
  {
    "text": "persistent logins that require rotation also AWS gives you the ability to kind",
    "start": "2202690",
    "end": "2211510"
  },
  {
    "text": "of force rotation of passwords etc so a lot of these options are turned off by",
    "start": "2211510",
    "end": "2217300"
  },
  {
    "text": "default you go in and turn them on to whatever your rotation policy dictates",
    "start": "2217300",
    "end": "2225330"
  },
  {
    "start": "2227000",
    "end": "2227000"
  },
  {
    "text": "okay so a summary of some of the audit findings I mentioned and what helps you",
    "start": "2229410",
    "end": "2235410"
  },
  {
    "text": "address those in sufficient understanding of permissions in AWS we",
    "start": "2235410",
    "end": "2241030"
  },
  {
    "text": "advocate a multi account strategy for large organizations and fin serves so you have different accounts for",
    "start": "2241030",
    "end": "2246400"
  },
  {
    "text": "departments and for dead staging and prod to help you manage your multi",
    "start": "2246400",
    "end": "2252460"
  },
  {
    "text": "account strategy you want to centralize your permissions so you can use AWS SSO you can use AWS organizations for kind",
    "start": "2252460",
    "end": "2261430"
  },
  {
    "text": "of umbrella policies that's being your whole fleet and control tower will help",
    "start": "2261430",
    "end": "2267100"
  },
  {
    "text": "you create AWS accounts with all the standard controls already built in for",
    "start": "2267100",
    "end": "2274840"
  },
  {
    "text": "privileged access to production whether it's developers or operators any human whatsoever try to design things",
    "start": "2274840",
    "end": "2282010"
  },
  {
    "text": "proactively with immutable production in mind so only tools change production and",
    "start": "2282010",
    "end": "2287020"
  },
  {
    "text": "not people is kind of posture to take their try to integrate your change",
    "start": "2287020",
    "end": "2293140"
  },
  {
    "text": "approval tickets with your CI CD to tie them back so any change that goes to",
    "start": "2293140",
    "end": "2298270"
  },
  {
    "text": "production can be tied back to a and approved ticket and look for",
    "start": "2298270",
    "end": "2304540"
  },
  {
    "text": "just-in-time access solutions like our partners that specialize in Pam solutions or not too hard to build your",
    "start": "2304540",
    "end": "2311920"
  },
  {
    "text": "own to basically have a solution for great glass access you are gonna need",
    "start": "2311920",
    "end": "2316930"
  },
  {
    "text": "break glass access but it's all improving that it was approved and it was temporary and as far as you know",
    "start": "2316930",
    "end": "2327880"
  },
  {
    "text": "internal system is lacking user authentication that goes back like zero trust architecture just making sure that",
    "start": "2327880",
    "end": "2335220"
  },
  {
    "text": "you have authentication authors and as many layers as possible try to",
    "start": "2335220",
    "end": "2341950"
  },
  {
    "text": "avoid persistent credentials our API gateway service if you're building REST",
    "start": "2341950",
    "end": "2348010"
  },
  {
    "text": "API is internally API gateway makes it really easy to build those out with authentication our RDS database service",
    "start": "2348010",
    "end": "2358690"
  },
  {
    "text": "also has role-based access to systems and I am authorization we have AWS",
    "start": "2358690",
    "end": "2364990"
  },
  {
    "text": "secrets manager for managing role-based access to credentials there's",
    "start": "2364990",
    "end": "2370359"
  },
  {
    "text": "third-party tools like hash e-court wall and the credential auditing report is",
    "start": "2370359",
    "end": "2376150"
  },
  {
    "text": "really important for just checking your all your AWS accounts to see if there's any persistent you know credentials that",
    "start": "2376150",
    "end": "2384309"
  },
  {
    "text": "need to be rotated that's it simple as",
    "start": "2384309",
    "end": "2390190"
  },
  {
    "text": "that [Applause]",
    "start": "2390190",
    "end": "2397149"
  }
]