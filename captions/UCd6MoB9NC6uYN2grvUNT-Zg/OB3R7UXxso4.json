[
  {
    "text": "[Music]",
    "start": "0",
    "end": "2959"
  },
  {
    "text": "hi today I'd like to tell you about",
    "start": "2959",
    "end": "5400"
  },
  {
    "text": "running seagull server in containers",
    "start": "5400",
    "end": "7410"
  },
  {
    "text": "using kubernetes on AWS okay so in the",
    "start": "7410",
    "end": "12000"
  },
  {
    "text": "previous video I showed you that you can",
    "start": "12000",
    "end": "14219"
  },
  {
    "text": "run sequel server inside a container but",
    "start": "14219",
    "end": "17220"
  },
  {
    "text": "a single container is not enough for",
    "start": "17220",
    "end": "19109"
  },
  {
    "text": "production workload of sequel server",
    "start": "19109",
    "end": "21619"
  },
  {
    "text": "because the container may crash for",
    "start": "21619",
    "end": "24210"
  },
  {
    "text": "various reasons and you may need to have",
    "start": "24210",
    "end": "27630"
  },
  {
    "text": "different containers more than one",
    "start": "27630",
    "end": "29789"
  },
  {
    "text": "container and managing all of those",
    "start": "29789",
    "end": "31410"
  },
  {
    "text": "manually is something that's not really",
    "start": "31410",
    "end": "35250"
  },
  {
    "text": "practical and there are a lot of",
    "start": "35250",
    "end": "36719"
  },
  {
    "text": "problems that you would have to solve",
    "start": "36719",
    "end": "39170"
  },
  {
    "text": "for that reason there's something called",
    "start": "39170",
    "end": "42020"
  },
  {
    "text": "orchestration engine an orchestration",
    "start": "42020",
    "end": "45539"
  },
  {
    "text": "engine basically solves all of the",
    "start": "45539",
    "end": "48239"
  },
  {
    "text": "problems for running containers in any",
    "start": "48239",
    "end": "51600"
  },
  {
    "text": "other kind of distributed system for you",
    "start": "51600",
    "end": "55760"
  },
  {
    "text": "one of those orchestration engines",
    "start": "57440",
    "end": "59730"
  },
  {
    "text": "that's established in the community is",
    "start": "59730",
    "end": "61469"
  },
  {
    "text": "kubernetes to have a basic understanding",
    "start": "61469",
    "end": "64768"
  },
  {
    "text": "of kubernetes it's important to",
    "start": "64769",
    "end": "68159"
  },
  {
    "text": "understand it's a centrally managed",
    "start": "68159",
    "end": "70740"
  },
  {
    "text": "distributed systems Orchestrator for",
    "start": "70740",
    "end": "72900"
  },
  {
    "text": "running containers let's break down that",
    "start": "72900",
    "end": "76799"
  },
  {
    "text": "sentence to better understand what it",
    "start": "76799",
    "end": "78600"
  },
  {
    "text": "means first kubernetes is a distributed",
    "start": "78600",
    "end": "82860"
  },
  {
    "text": "system which means it allows you to run",
    "start": "82860",
    "end": "85259"
  },
  {
    "text": "your applications on a pool of hardware",
    "start": "85259",
    "end": "87509"
  },
  {
    "text": "resources available from several",
    "start": "87509",
    "end": "89850"
  },
  {
    "text": "individual servers and hosts that are",
    "start": "89850",
    "end": "92490"
  },
  {
    "text": "joined into a cluster here you can see",
    "start": "92490",
    "end": "96329"
  },
  {
    "text": "we have a cluster of three hosts node 1",
    "start": "96329",
    "end": "99329"
  },
  {
    "text": "node 2 and node 3 and all of those are",
    "start": "99329",
    "end": "103770"
  },
  {
    "text": "connected to what is called a master",
    "start": "103770",
    "end": "106649"
  },
  {
    "text": "node on top here's the centrally managed",
    "start": "106649",
    "end": "112259"
  },
  {
    "text": "part kubernetes is centrally managed",
    "start": "112259",
    "end": "114869"
  },
  {
    "text": "which means there's a central authority",
    "start": "114869",
    "end": "117119"
  },
  {
    "text": "known as master node which is in charge",
    "start": "117119",
    "end": "120420"
  },
  {
    "text": "of the cluster the master node keeps",
    "start": "120420",
    "end": "122310"
  },
  {
    "text": "track of which hosts or which of the",
    "start": "122310",
    "end": "125189"
  },
  {
    "text": "worker nodes are joined to the cluster",
    "start": "125189",
    "end": "127439"
  },
  {
    "text": "how much resources are used or are",
    "start": "127439",
    "end": "130050"
  },
  {
    "text": "available on each host and on which",
    "start": "130050",
    "end": "133020"
  },
  {
    "text": "hosts",
    "start": "133020",
    "end": "133590"
  },
  {
    "text": "should a container be placed what is the",
    "start": "133590",
    "end": "135930"
  },
  {
    "text": "status of each container either it's",
    "start": "135930",
    "end": "139530"
  },
  {
    "text": "pending running failed or other statuses",
    "start": "139530",
    "end": "142410"
  },
  {
    "text": "and etc although masternode is a central",
    "start": "142410",
    "end": "145860"
  },
  {
    "text": "authority but kubernetes supports having",
    "start": "145860",
    "end": "149129"
  },
  {
    "text": "master nodes redundantly deployed to",
    "start": "149129",
    "end": "151290"
  },
  {
    "text": "enable high availability and avoid",
    "start": "151290",
    "end": "153510"
  },
  {
    "text": "single point of failure on the other",
    "start": "153510",
    "end": "157349"
  },
  {
    "text": "side its it specialized to run and",
    "start": "157349",
    "end": "163410"
  },
  {
    "text": "orchestrate containers meaning it solves",
    "start": "163410",
    "end": "167430"
  },
  {
    "text": "common problems for running containers",
    "start": "167430",
    "end": "169230"
  },
  {
    "text": "at scale and in production such as",
    "start": "169230",
    "end": "171360"
  },
  {
    "text": "resource management monitoring",
    "start": "171360",
    "end": "173340"
  },
  {
    "text": "scheduling and containers state",
    "start": "173340",
    "end": "175140"
  },
  {
    "text": "management logging networking secret",
    "start": "175140",
    "end": "178349"
  },
  {
    "text": "management etc once you have a",
    "start": "178349",
    "end": "181260"
  },
  {
    "text": "kubernetes cluster available it's fairly",
    "start": "181260",
    "end": "183690"
  },
  {
    "text": "straightforward to utilize it and deploy",
    "start": "183690",
    "end": "186090"
  },
  {
    "text": "your workloads on it but deploying and",
    "start": "186090",
    "end": "188730"
  },
  {
    "text": "maintaining a kubernetes cluster itself",
    "start": "188730",
    "end": "190769"
  },
  {
    "text": "could be a new challenge so we want to",
    "start": "190769",
    "end": "196950"
  },
  {
    "text": "solve that challenge and here's the",
    "start": "196950",
    "end": "199920"
  },
  {
    "text": "solution amazon eks or elastic container",
    "start": "199920",
    "end": "204569"
  },
  {
    "text": "service for kubernetes eks gives you",
    "start": "204569",
    "end": "212940"
  },
  {
    "text": "three managed master modes in a cluster",
    "start": "212940",
    "end": "215160"
  },
  {
    "text": "and you can join your worker nodes to",
    "start": "215160",
    "end": "218040"
  },
  {
    "text": "that cluster so all of the complexities",
    "start": "218040",
    "end": "221160"
  },
  {
    "text": "of setting up master nodes are abstract",
    "start": "221160",
    "end": "223620"
  },
  {
    "text": "it away all you need to do is to join",
    "start": "223620",
    "end": "226560"
  },
  {
    "text": "worker nodes to it and configure your",
    "start": "226560",
    "end": "229109"
  },
  {
    "text": "client cubes ETL to connect with the",
    "start": "229109",
    "end": "233040"
  },
  {
    "text": "endpoint of the managed eks cluster",
    "start": "233040",
    "end": "235799"
  },
  {
    "text": "that's provided by AWS now we're going",
    "start": "235799",
    "end": "240180"
  },
  {
    "text": "to deploy sequel server on top of this",
    "start": "240180",
    "end": "242310"
  },
  {
    "text": "managed eks cluster",
    "start": "242310",
    "end": "244100"
  },
  {
    "text": "[Music]",
    "start": "244100",
    "end": "246920"
  },
  {
    "text": "once we have the cluster the next thing",
    "start": "246920",
    "end": "250319"
  },
  {
    "text": "to do is to create the storage classes",
    "start": "250319",
    "end": "252750"
  },
  {
    "text": "in kubernetes storage is decoupled from",
    "start": "252750",
    "end": "257100"
  },
  {
    "text": "the rest of the cluster the storage",
    "start": "257100",
    "end": "264840"
  },
  {
    "text": "solution of kubernetes is designed in a",
    "start": "264840",
    "end": "268320"
  },
  {
    "text": "way to have a different life cycle than",
    "start": "268320",
    "end": "271050"
  },
  {
    "text": "the containers on which those storage",
    "start": "271050",
    "end": "272790"
  },
  {
    "text": "volumes are mounted so there are three",
    "start": "272790",
    "end": "280620"
  },
  {
    "text": "concepts to understand first of all most",
    "start": "280620",
    "end": "283650"
  },
  {
    "text": "of you should already know what EBS",
    "start": "283650",
    "end": "285510"
  },
  {
    "text": "volume is it's a managed service that",
    "start": "285510",
    "end": "289979"
  },
  {
    "text": "gives you a block storage solution and",
    "start": "289979",
    "end": "293510"
  },
  {
    "text": "you can mount it on your instances your",
    "start": "293510",
    "end": "296940"
  },
  {
    "text": "virtual machines and you can utilize it",
    "start": "296940",
    "end": "300180"
  },
  {
    "text": "in your",
    "start": "300180",
    "end": "300750"
  },
  {
    "text": "ec2 instances to utilize these EBS",
    "start": "300750",
    "end": "304320"
  },
  {
    "text": "volumes in kubernetes you have to create",
    "start": "304320",
    "end": "306540"
  },
  {
    "text": "something called a persistent volume the",
    "start": "306540",
    "end": "309389"
  },
  {
    "text": "persistent volume is an object type in",
    "start": "309389",
    "end": "311669"
  },
  {
    "text": "kubernetes that abstracts away all of",
    "start": "311669",
    "end": "314280"
  },
  {
    "text": "the complexities of implementation of",
    "start": "314280",
    "end": "317190"
  },
  {
    "text": "the underlying storage solution so your",
    "start": "317190",
    "end": "320400"
  },
  {
    "text": "containers and your applications would",
    "start": "320400",
    "end": "322950"
  },
  {
    "text": "not care what kind of solution is",
    "start": "322950",
    "end": "324660"
  },
  {
    "text": "providing the storage for example",
    "start": "324660",
    "end": "329640"
  },
  {
    "text": "whether it's EBS volumes IO 1 or GP 2 or",
    "start": "329640",
    "end": "334830"
  },
  {
    "text": "or other types of EBS volumes or if it's",
    "start": "334830",
    "end": "339150"
  },
  {
    "text": "an NFS share or some other type of",
    "start": "339150",
    "end": "342180"
  },
  {
    "text": "storage containers don't care about that",
    "start": "342180",
    "end": "345000"
  },
  {
    "text": "all of that is encapsulated in a",
    "start": "345000",
    "end": "347850"
  },
  {
    "text": "persistent volume once you've created",
    "start": "347850",
    "end": "351090"
  },
  {
    "text": "the persistent volume in kubernetes to",
    "start": "351090",
    "end": "354630"
  },
  {
    "text": "mount it and connect it to your",
    "start": "354630",
    "end": "356580"
  },
  {
    "text": "container you have to create another",
    "start": "356580",
    "end": "358169"
  },
  {
    "text": "object that's called a persistent volume",
    "start": "358169",
    "end": "360990"
  },
  {
    "text": "claim our persistent volume claim is a",
    "start": "360990",
    "end": "363810"
  },
  {
    "text": "request for a persistent volume",
    "start": "363810",
    "end": "366950"
  },
  {
    "text": "[Music]",
    "start": "366950",
    "end": "370990"
  },
  {
    "text": "there is also concept of pod and",
    "start": "373000",
    "end": "375770"
  },
  {
    "text": "kubernetes which could be one or more",
    "start": "375770",
    "end": "377750"
  },
  {
    "text": "containers that always run on the same",
    "start": "377750",
    "end": "381289"
  },
  {
    "text": "host so your pod will have this",
    "start": "381289",
    "end": "385250"
  },
  {
    "text": "persistent volume claim attached to it",
    "start": "385250",
    "end": "387949"
  },
  {
    "text": "which in turn contains a persistent",
    "start": "387949",
    "end": "390349"
  },
  {
    "text": "volume and that facilitates connection",
    "start": "390349",
    "end": "393830"
  },
  {
    "text": "to an underlying storage such as an e BS",
    "start": "393830",
    "end": "396620"
  },
  {
    "text": "volume the third concept is a storage",
    "start": "396620",
    "end": "400490"
  },
  {
    "text": "class so the persistent volume and",
    "start": "400490",
    "end": "404979"
  },
  {
    "text": "persistent volume claim only include",
    "start": "404979",
    "end": "408020"
  },
  {
    "text": "details such as the size of the storage",
    "start": "408020",
    "end": "410439"
  },
  {
    "text": "that has to be provisioned and what mode",
    "start": "410439",
    "end": "416659"
  },
  {
    "text": "should be used to connect with that",
    "start": "416659",
    "end": "418460"
  },
  {
    "text": "storage for example whether it should be",
    "start": "418460",
    "end": "421129"
  },
  {
    "text": "read-only or it should be read and write",
    "start": "421129",
    "end": "425770"
  },
  {
    "text": "but your application might have other",
    "start": "427360",
    "end": "430129"
  },
  {
    "text": "requirements such as the IEEE ops",
    "start": "430129",
    "end": "433849"
  },
  {
    "text": "available in that storage solution or",
    "start": "433849",
    "end": "436250"
  },
  {
    "text": "the throughput available in that storage",
    "start": "436250",
    "end": "438740"
  },
  {
    "text": "solution for that reason we have this",
    "start": "438740",
    "end": "441020"
  },
  {
    "text": "concept of a storage class which",
    "start": "441020",
    "end": "443000"
  },
  {
    "text": "classifies different types of storage",
    "start": "443000",
    "end": "445400"
  },
  {
    "text": "solutions for example EBS GP 2 is the",
    "start": "445400",
    "end": "449060"
  },
  {
    "text": "general-purpose storage solution in AWS",
    "start": "449060",
    "end": "452150"
  },
  {
    "text": "EBS GP 2 is considered one storage class",
    "start": "452150",
    "end": "455690"
  },
  {
    "text": "EBS i/o one provisioned IAP CBS volume",
    "start": "455690",
    "end": "459680"
  },
  {
    "text": "is another storage class and there are",
    "start": "459680",
    "end": "462680"
  },
  {
    "text": "other storage classes such as an NFS",
    "start": "462680",
    "end": "465319"
  },
  {
    "text": "share or port works volumes all of those",
    "start": "465319",
    "end": "469250"
  },
  {
    "text": "are described as storage classes and",
    "start": "469250",
    "end": "471439"
  },
  {
    "text": "introduced to kubernetes so when you",
    "start": "471439",
    "end": "475129"
  },
  {
    "text": "create a persistent volume claim it can",
    "start": "475129",
    "end": "477319"
  },
  {
    "text": "include a property of storage class and",
    "start": "477319",
    "end": "479770"
  },
  {
    "text": "if you specify for example GP 2 then it",
    "start": "479770",
    "end": "484580"
  },
  {
    "text": "will find a persistent volume that's",
    "start": "484580",
    "end": "486889"
  },
  {
    "text": "associated with the GP 2 EBS volume",
    "start": "486889",
    "end": "492370"
  },
  {
    "text": "you can also have a default storage",
    "start": "493760",
    "end": "496500"
  },
  {
    "text": "class so what is a default storage class",
    "start": "496500",
    "end": "499980"
  },
  {
    "text": "and when could it be useful when you",
    "start": "499980",
    "end": "503490"
  },
  {
    "text": "create a persistent volume and you",
    "start": "503490",
    "end": "506340"
  },
  {
    "text": "request for example 8 gigabytes of",
    "start": "506340",
    "end": "508980"
  },
  {
    "text": "storage the persistent volume claim will",
    "start": "508980",
    "end": "511830"
  },
  {
    "text": "try to find a persistent volume that",
    "start": "511830",
    "end": "514349"
  },
  {
    "text": "matches the request in size 8 gigabytes",
    "start": "514349",
    "end": "519030"
  },
  {
    "text": "of storage but if it can't find it it",
    "start": "519030",
    "end": "522330"
  },
  {
    "text": "won't be able to provision that storage",
    "start": "522330",
    "end": "524159"
  },
  {
    "text": "for you however if you already have",
    "start": "524159",
    "end": "529470"
  },
  {
    "text": "defined a default storage class then the",
    "start": "529470",
    "end": "532050"
  },
  {
    "text": "persistent volume claim can use the",
    "start": "532050",
    "end": "534510"
  },
  {
    "text": "default storage class to create a",
    "start": "534510",
    "end": "536460"
  },
  {
    "text": "persistent volume and then provision the",
    "start": "536460",
    "end": "540450"
  },
  {
    "text": "default storage class based on the",
    "start": "540450",
    "end": "542400"
  },
  {
    "text": "requested size there are different",
    "start": "542400",
    "end": "546810"
  },
  {
    "text": "options for storage in kubernetes the",
    "start": "546810",
    "end": "552180"
  },
  {
    "text": "main option can fall under two",
    "start": "552180",
    "end": "554670"
  },
  {
    "text": "categories first of all you can use GP 2",
    "start": "554670",
    "end": "559140"
  },
  {
    "text": "or io 1 both our storage classes that",
    "start": "559140",
    "end": "561810"
  },
  {
    "text": "are available for EBS volumes and the",
    "start": "561810",
    "end": "565200"
  },
  {
    "text": "other option is to use a cluster storage",
    "start": "565200",
    "end": "567720"
  },
  {
    "text": "the difference between these two is that",
    "start": "567720",
    "end": "569910"
  },
  {
    "text": "the GP 2 and io 1 are direct mappings to",
    "start": "569910",
    "end": "573839"
  },
  {
    "text": "EBS volumes and as most of you might",
    "start": "573839",
    "end": "576120"
  },
  {
    "text": "already know EBS volumes are available",
    "start": "576120",
    "end": "578730"
  },
  {
    "text": "in a single availability zone in AWS so",
    "start": "578730",
    "end": "583560"
  },
  {
    "text": "if for any reason your container fails",
    "start": "583560",
    "end": "586110"
  },
  {
    "text": "or the container hosts in that",
    "start": "586110",
    "end": "589770"
  },
  {
    "text": "availability zone fails and your",
    "start": "589770",
    "end": "592680"
  },
  {
    "text": "container needs to fail over to another",
    "start": "592680",
    "end": "595350"
  },
  {
    "text": "availability zone the storage will not",
    "start": "595350",
    "end": "598470"
  },
  {
    "text": "be able to move with it from",
    "start": "598470",
    "end": "600350"
  },
  {
    "text": "availability zone of origin to",
    "start": "600350",
    "end": "603180"
  },
  {
    "text": "destination but if you have a clustered",
    "start": "603180",
    "end": "606450"
  },
  {
    "text": "storage solution it will mirror the",
    "start": "606450",
    "end": "608580"
  },
  {
    "text": "storage the blocks that are written to",
    "start": "608580",
    "end": "611790"
  },
  {
    "text": "the EBS volumes and availability zone",
    "start": "611790",
    "end": "614460"
  },
  {
    "text": "one into the second availability zone or",
    "start": "614460",
    "end": "617730"
  },
  {
    "text": "even third",
    "start": "617730",
    "end": "619310"
  },
  {
    "text": "so this mirroring is called",
    "start": "619310",
    "end": "622499"
  },
  {
    "text": "clustering and you'll have a cluster of",
    "start": "622499",
    "end": "626429"
  },
  {
    "text": "storage available and if there is a",
    "start": "626429",
    "end": "629669"
  },
  {
    "text": "failover you already have the data",
    "start": "629669",
    "end": "631709"
  },
  {
    "text": "replicated and available in the other",
    "start": "631709",
    "end": "634199"
  },
  {
    "text": "availability zone and you can quickly",
    "start": "634199",
    "end": "636029"
  },
  {
    "text": "mount that to your container or pop and",
    "start": "636029",
    "end": "638339"
  },
  {
    "text": "continue your read and write operations",
    "start": "638339",
    "end": "640069"
  },
  {
    "text": "this is essential for a sequel server",
    "start": "640069",
    "end": "642629"
  },
  {
    "text": "especially if you want it to be highly",
    "start": "642629",
    "end": "645509"
  },
  {
    "text": "available in more than one data center",
    "start": "645509",
    "end": "647669"
  },
  {
    "text": "and more than one availability zone but",
    "start": "647669",
    "end": "650759"
  },
  {
    "text": "the downside for it is that you need to",
    "start": "650759",
    "end": "653219"
  },
  {
    "text": "use at least twice the amount of storage",
    "start": "653219",
    "end": "655379"
  },
  {
    "text": "because you're mirroring everything from",
    "start": "655379",
    "end": "657989"
  },
  {
    "text": "first availability zone to the second so",
    "start": "657989",
    "end": "661619"
  },
  {
    "text": "if you're optimizing for price you might",
    "start": "661619",
    "end": "663779"
  },
  {
    "text": "prefer to use GP 2 or i/o 1 which gives",
    "start": "663779",
    "end": "668069"
  },
  {
    "text": "you single AC high availability but if",
    "start": "668069",
    "end": "671939"
  },
  {
    "text": "you want high availability in more than",
    "start": "671939",
    "end": "674369"
  },
  {
    "text": "one data center and more than one a Z",
    "start": "674369",
    "end": "677669"
  },
  {
    "text": "then you can use a clustered storage",
    "start": "677669",
    "end": "680189"
  },
  {
    "text": "class such as port works the other",
    "start": "680189",
    "end": "686129"
  },
  {
    "text": "benefit of using the clustered storage",
    "start": "686129",
    "end": "687869"
  },
  {
    "text": "is higher i'ope sand throughput with a",
    "start": "687869",
    "end": "694139"
  },
  {
    "text": "single EBS volume using GP 2 and i/o one",
    "start": "694139",
    "end": "699569"
  },
  {
    "text": "storage classes you're limited by the",
    "start": "699569",
    "end": "701549"
  },
  {
    "text": "amount of AI ops and throughput that's",
    "start": "701549",
    "end": "704189"
  },
  {
    "text": "available for a single EBS volume which",
    "start": "704189",
    "end": "707039"
  },
  {
    "text": "is not a small number it suffices for",
    "start": "707039",
    "end": "709799"
  },
  {
    "text": "most of the practical purposes but in",
    "start": "709799",
    "end": "712649"
  },
  {
    "text": "any case if you need to go beyond 30 mm",
    "start": "712649",
    "end": "716069"
  },
  {
    "text": "I ops or beyond 500 megabytes per second",
    "start": "716069",
    "end": "718739"
  },
  {
    "text": "throughput then you can use a class 4",
    "start": "718739",
    "end": "722069"
  },
  {
    "text": "storage which will stripe several EBS",
    "start": "722069",
    "end": "724229"
  },
  {
    "text": "volumes and give you the aggregate",
    "start": "724229",
    "end": "726119"
  },
  {
    "text": "throughput and that is limited only by",
    "start": "726119",
    "end": "729089"
  },
  {
    "text": "the eye ops and throughput limit per",
    "start": "729089",
    "end": "731849"
  },
  {
    "text": "each ec2 instance",
    "start": "731849",
    "end": "733420"
  },
  {
    "text": "[Music]",
    "start": "733420",
    "end": "736630"
  },
  {
    "text": "regarding high availability again to",
    "start": "737000",
    "end": "739830"
  },
  {
    "text": "emphasize this is the most important",
    "start": "739830",
    "end": "741750"
  },
  {
    "text": "difference between gp2 and io1",
    "start": "741750",
    "end": "744210"
  },
  {
    "text": "and clustered storage if you have a",
    "start": "744210",
    "end": "747210"
  },
  {
    "text": "container failure both of the solutions",
    "start": "747210",
    "end": "749970"
  },
  {
    "text": "will immediately recover your sequel",
    "start": "749970",
    "end": "751890"
  },
  {
    "text": "server instance if you have a pod",
    "start": "751890",
    "end": "754530"
  },
  {
    "text": "failure again both of them will",
    "start": "754530",
    "end": "757020"
  },
  {
    "text": "immediately recover if you have instance",
    "start": "757020",
    "end": "760230"
  },
  {
    "text": "failure",
    "start": "760230",
    "end": "761720"
  },
  {
    "text": "you could have immediate recovery with",
    "start": "761720",
    "end": "764190"
  },
  {
    "text": "gp2 and i/o one only if there is another",
    "start": "764190",
    "end": "767460"
  },
  {
    "text": "instance available in the same",
    "start": "767460",
    "end": "768780"
  },
  {
    "text": "availability zone with cluster storage",
    "start": "768780",
    "end": "771120"
  },
  {
    "text": "you'll have immediate recovery if you",
    "start": "771120",
    "end": "773100"
  },
  {
    "text": "have another ec2 instance either in the",
    "start": "773100",
    "end": "775770"
  },
  {
    "text": "same availability zone or in the other",
    "start": "775770",
    "end": "778500"
  },
  {
    "text": "availability zone in the same cluster so",
    "start": "778500",
    "end": "784080"
  },
  {
    "text": "that's more inclusive it can also",
    "start": "784080",
    "end": "786030"
  },
  {
    "text": "include instances in other availability",
    "start": "786030",
    "end": "789030"
  },
  {
    "text": "zones in case of hosts failure that is",
    "start": "789030",
    "end": "792240"
  },
  {
    "text": "the host of the ec2 instance same story",
    "start": "792240",
    "end": "795390"
  },
  {
    "text": "again if you have another host on the",
    "start": "795390",
    "end": "798600"
  },
  {
    "text": "same availability zone kubernetes will",
    "start": "798600",
    "end": "802020"
  },
  {
    "text": "restore your container and your sequel",
    "start": "802020",
    "end": "804360"
  },
  {
    "text": "server application will recover",
    "start": "804360",
    "end": "807080"
  },
  {
    "text": "otherwise it will not and it'll stay in",
    "start": "807080",
    "end": "810420"
  },
  {
    "text": "pending state until it's available in",
    "start": "810420",
    "end": "813180"
  },
  {
    "text": "case of cluster storage same story but",
    "start": "813180",
    "end": "815940"
  },
  {
    "text": "not bound by a single daisy it could be",
    "start": "815940",
    "end": "818670"
  },
  {
    "text": "in the other AC as well and finally if",
    "start": "818670",
    "end": "821220"
  },
  {
    "text": "you have a total availability zone",
    "start": "821220",
    "end": "823290"
  },
  {
    "text": "failure definitely if you're using GP 2",
    "start": "823290",
    "end": "827070"
  },
  {
    "text": "or i/o 1 you will not be able to recover",
    "start": "827070",
    "end": "830280"
  },
  {
    "text": "your sequel server instance and",
    "start": "830280",
    "end": "832140"
  },
  {
    "text": "containers until the AZ comes back",
    "start": "832140",
    "end": "836370"
  },
  {
    "text": "online but if you're using clustered",
    "start": "836370",
    "end": "838950"
  },
  {
    "text": "storage again if you have another",
    "start": "838950",
    "end": "841170"
  },
  {
    "text": "instance pending standby and the other",
    "start": "841170",
    "end": "843930"
  },
  {
    "text": "availability zone you'll have an",
    "start": "843930",
    "end": "846510"
  },
  {
    "text": "immediate recovery okay that's all for",
    "start": "846510",
    "end": "850230"
  },
  {
    "text": "sequel server running on kubernetes",
    "start": "850230",
    "end": "851970"
  },
  {
    "text": "that's the theory in the next video I'll",
    "start": "851970",
    "end": "854820"
  },
  {
    "text": "show you how to deploy a sequel server",
    "start": "854820",
    "end": "856920"
  },
  {
    "text": "on kubernetes using AWS eks service",
    "start": "856920",
    "end": "860040"
  },
  {
    "text": "thanks for watching",
    "start": "860040",
    "end": "862100"
  },
  {
    "text": "[Music]",
    "start": "862100",
    "end": "866678"
  }
]