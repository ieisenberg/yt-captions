[
  {
    "text": "Hi, Welcome to 'This is My Architecture',",
    "start": "5400",
    "end": "7971"
  },
  {
    "text": "I'm Dhawal, and I have Erik from Heimdall Data.",
    "start": "7971",
    "end": "10891"
  },
  {
    "text": "Erik, welcome to the show. \nThank you.",
    "start": "10891",
    "end": "13167"
  },
  {
    "text": "So, Erik, tell us about Heimdall Data.",
    "start": "13168",
    "end": "16003"
  },
  {
    "text": "OK, so Heimdall is a small ISV working with Amazon",
    "start": "16003",
    "end": "19850"
  },
  {
    "text": "to provide a proxy. It provides a wide variety of functionality,",
    "start": "19850",
    "end": "24325"
  },
  {
    "text": "targeting at improving the performance and scalability",
    "start": "24325",
    "end": "28222"
  },
  {
    "text": "of data-based access for other Amazon customers.",
    "start": "28222",
    "end": "32092"
  },
  {
    "text": "Great, so let's walk through this architecture.\nOK.",
    "start": "32427",
    "end": "35255"
  },
  {
    "text": "So, whether it's a dedicated server or,\nsay, lambda functions,",
    "start": "35718",
    "end": "39914"
  },
  {
    "text": "all data-based calls connect through to NLB,",
    "start": "39915",
    "end": "44065"
  },
  {
    "text": "as if the NLB were the database.",
    "start": "44065",
    "end": "46989"
  },
  {
    "text": "It then distributes into an auto-scaling group,",
    "start": "47501",
    "end": "50281"
  },
  {
    "text": "which our proxies live in,",
    "start": "50282",
    "end": "52281"
  },
  {
    "text": "establishing the database connections again to the proxy,",
    "start": "52281",
    "end": "57900"
  },
  {
    "text": "and the caching functionality, which we're going to talk about,",
    "start": "57901",
    "end": "61622"
  },
  {
    "text": "lives in the proxy.",
    "start": "61622",
    "end": "63280"
  },
  {
    "text": "When we don't have objects in the proxy cache,",
    "start": "63280",
    "end": "66987"
  },
  {
    "text": "we then pull it from RDS and deliver it back",
    "start": "66987",
    "end": "69939"
  },
  {
    "text": "straight to the customers.",
    "start": "69939",
    "end": "72930"
  },
  {
    "text": "Great, so tell us more about \nif the client has to change any code",
    "start": "72930",
    "end": "77283"
  },
  {
    "text": "or configuration in order to use this solution?",
    "start": "77283",
    "end": "79312"
  },
  {
    "text": "No, we've designed this solution to be completely transparent",
    "start": "79313",
    "end": "82813"
  },
  {
    "text": "to the applications, \nso they don't have to change anything",
    "start": "82813",
    "end": "86158"
  },
  {
    "text": "aside from the endpoint that the applications",
    "start": "86158",
    "end": "89285"
  },
  {
    "text": "are trying to pull data from.",
    "start": "89286",
    "end": "90922"
  },
  {
    "text": "Got it. So, does the cache actually sit",
    "start": "91965",
    "end": "94498"
  },
  {
    "text": "on the proxy only, here?",
    "start": "94499",
    "end": "96205"
  },
  {
    "text": "It actually lives in two different places.",
    "start": "96205",
    "end": "99574"
  },
  {
    "text": "So, we cache on the proxy is basically an L1 cache,",
    "start": "99574",
    "end": "104229"
  },
  {
    "text": "but we also leverage Elasticache \nas an additional",
    "start": "104230",
    "end": "108189"
  },
  {
    "text": "layer of caching.\nAnd that layer of caching",
    "start": "108189",
    "end": "110931"
  },
  {
    "text": "operates across \nmultiple proxy instances",
    "start": "110931",
    "end": "114923"
  },
  {
    "text": "and it provides a synchronized cache layer",
    "start": "114924",
    "end": "117990"
  },
  {
    "text": "that all the proxies can leverage, instead of pulling data",
    "start": "117990",
    "end": "121634"
  },
  {
    "text": "from the database when they don't need to.",
    "start": "121635",
    "end": "123477"
  },
  {
    "text": "Got it. \nSo how does the user configure the cache",
    "start": "123477",
    "end": "126960"
  },
  {
    "text": "configuration, things like invalidation \nor eviction policies,",
    "start": "126960",
    "end": "130366"
  },
  {
    "text": "and things like that?",
    "start": "130366",
    "end": "131997"
  },
  {
    "text": "That's done through a central manager,",
    "start": "131997",
    "end": "134545"
  },
  {
    "text": "which the proxies all connect through.",
    "start": "134546",
    "end": "137316"
  },
  {
    "text": "That proxy could be standalone \nor it could be behind",
    "start": "137316",
    "end": "140653"
  },
  {
    "text": "an NLB itself, \nit really is the customer's choice.",
    "start": "140653",
    "end": "143978"
  },
  {
    "text": "We've designed this to be a split data plane and control plane,",
    "start": "143978",
    "end": "147343"
  },
  {
    "text": "so even if the management server goes offline briefly,",
    "start": "147343",
    "end": "150376"
  },
  {
    "text": "it won't impact the flow of traffic.",
    "start": "150376",
    "end": "152384"
  },
  {
    "text": "Great! \nSo what's next for Heimdall Data?",
    "start": "152994",
    "end": "155256"
  },
  {
    "text": "Oh, we're actually working in order to do",
    "start": "156056",
    "end": "159502"
  },
  {
    "text": "a redirect layer, in order to bypass using a load balancer.",
    "start": "159502",
    "end": "164841"
  },
  {
    "text": "One of the drawbacks \nof using a load balancer is that",
    "start": "164841",
    "end": "167388"
  },
  {
    "text": "it adds an extra hop in the network,",
    "start": "167388",
    "end": "169424"
  },
  {
    "text": "and that adds a small amount of latency.",
    "start": "169424",
    "end": "171551"
  },
  {
    "text": "What we're aiming to do is, allow the clients",
    "start": "171551",
    "end": "174771"
  },
  {
    "text": "to connect directly to the proxy layer.",
    "start": "174772",
    "end": "177950"
  },
  {
    "text": "It will load-balance itself by doing a redirect,",
    "start": "177950",
    "end": "181450"
  },
  {
    "text": "much like an HTTP redirect, to the clients.",
    "start": "181450",
    "end": "184588"
  },
  {
    "text": "But in order to support that \nwe're actually working on providing",
    "start": "184588",
    "end": "188584"
  },
  {
    "text": "protocol enhancements for the proxies,",
    "start": "188585",
    "end": "192348"
  },
  {
    "text": "the data bases we support, Postgres, MySQL",
    "start": "192348",
    "end": "194638"
  },
  {
    "text": "and SQL Server, in order to support that redirect.",
    "start": "194638",
    "end": "198508"
  },
  {
    "text": "But that will be provided into the open source community",
    "start": "198508",
    "end": "201659"
  },
  {
    "text": "when we complete it.",
    "start": "201659",
    "end": "202944"
  },
  {
    "text": "Great! Well, thank you very much, Erik, ",
    "start": "202944",
    "end": "204861"
  },
  {
    "text": "for walking us through this architecture.",
    "start": "204861",
    "end": "206734"
  },
  {
    "text": "And thank you for watching 'This is My Architecture'.",
    "start": "206735",
    "end": "209323"
  }
]