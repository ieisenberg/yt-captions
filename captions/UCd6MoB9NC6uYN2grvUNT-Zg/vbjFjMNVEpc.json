[
  {
    "start": "0",
    "end": "35000"
  },
  {
    "text": "okay good morning everybody how's everybody doing this morning a little groggy",
    "start": "2570",
    "end": "7589"
  },
  {
    "text": "well tired there you go home all right well welcome my name is Quinn Van Diemen",
    "start": "7589",
    "end": "13200"
  },
  {
    "text": "I'm the Business Development Manager here at AWS for our identity and directory services and I'm gonna",
    "start": "13200",
    "end": "19199"
  },
  {
    "text": "hopefully do it like I hope that your brains are gonna operate on a lastin first-out mode here so I'm gonna try to",
    "start": "19199",
    "end": "25920"
  },
  {
    "text": "jam in as much super deep identity information for you to take home and be",
    "start": "25920",
    "end": "31140"
  },
  {
    "text": "able to pop off the top of the stack on Monday morning so what are we here to talk about today I you know so I've had",
    "start": "31140",
    "end": "39540"
  },
  {
    "start": "35000",
    "end": "35000"
  },
  {
    "text": "the nice are the awesome luxury of our opportunity of being able to do an",
    "start": "39540",
    "end": "44550"
  },
  {
    "text": "identity focus talk at reinvent each of the four years but this year I really was excited to make it a 400 level so we",
    "start": "44550",
    "end": "51629"
  },
  {
    "text": "could really really go deep in things I think I'm gonna hopefully I'm gonna show you some patterns that are pretty",
    "start": "51629",
    "end": "57000"
  },
  {
    "text": "advanced and more than just showing you the feature I hope to show you how you can combine these some of these features",
    "start": "57000",
    "end": "62539"
  },
  {
    "text": "sprinkle in a little bit of code and a really hit at something that's it's really really impactful for you I'm also",
    "start": "62539",
    "end": "69150"
  },
  {
    "text": "gonna try to be very prescriptive for you right I think we've we AWS have gotten better at this over the years but rather than",
    "start": "69150",
    "end": "75900"
  },
  {
    "text": "even just going to the level of giving best practice I'm gonna try to to go about a little bit of decision tree kind",
    "start": "75900",
    "end": "83460"
  },
  {
    "text": "of walk through such that we can help you approach common use cases that",
    "start": "83460",
    "end": "88530"
  },
  {
    "text": "you're probably facing in your environment and then walk through some some key break points or key decisions",
    "start": "88530",
    "end": "93900"
  },
  {
    "text": "that are very specific to you as a customer that helps you arrive at a very very tailored solution and last but not",
    "start": "93900",
    "end": "100560"
  },
  {
    "text": "least again being a 400 session we're gonna get we're gonna go way down deep into code right so if you are the type",
    "start": "100560",
    "end": "107579"
  },
  {
    "text": "of identity professional where a little bit of Python a little bit of JSON a little bit yeah Mille is terrifying to",
    "start": "107579",
    "end": "113909"
  },
  {
    "text": "you and will not be offended but now is probably the time the time to leave or the rest of this is going to MIT really",
    "start": "113909",
    "end": "120299"
  },
  {
    "text": "make your head hurt okay so the the kind",
    "start": "120299",
    "end": "125790"
  },
  {
    "start": "123000",
    "end": "123000"
  },
  {
    "text": "of before we dive into the fun meat of things I want to give start with just one disambiguation",
    "start": "125790",
    "end": "131430"
  },
  {
    "text": "and I do this because as I go around and talk to lots of of great customers such",
    "start": "131430",
    "end": "136950"
  },
  {
    "text": "as yourselves I find that this is not always terribly obvious right so what we're here to talk about today",
    "start": "136950",
    "end": "142859"
  },
  {
    "text": "is going to be identity the subject right so that is authentication authorization audit governance etc for",
    "start": "142859",
    "end": "151379"
  },
  {
    "text": "your your cloud workloads right whether that's a ABS platform applications on top the infrastructure in the middle of",
    "start": "151379",
    "end": "157650"
  },
  {
    "text": "the whole nine yards and we'll look at that more deeply in a second that very much includes and certainly the most",
    "start": "157650",
    "end": "164519"
  },
  {
    "text": "foundational component of that is AWS I am the service right that is the the",
    "start": "164519",
    "end": "170040"
  },
  {
    "text": "service that uniquely authenticates and authorizes all of your AWS API calls so",
    "start": "170040",
    "end": "175500"
  },
  {
    "text": "very powerful part but just want to make sure we're setting the aperture at that the larger subject for today okay so in",
    "start": "175500",
    "end": "183569"
  },
  {
    "text": "most of my talks I tend to talk through metaphor talk through analogy right I find it very useful to help make some of",
    "start": "183569",
    "end": "190620"
  },
  {
    "text": "these topics that can be complex at times a little bit more approachable and it just gives us a good mental model to",
    "start": "190620",
    "end": "196349"
  },
  {
    "text": "work through so this year I chose a cake right and hopefully you'll bear with me a little bit as we play it out so the",
    "start": "196349",
    "end": "202530"
  },
  {
    "text": "bottom layer of this identity cake in AWS is again certainly the AWS platform",
    "start": "202530",
    "end": "207659"
  },
  {
    "text": "right this is where we've got to get our cloud builders into AWS to do you know",
    "start": "207659",
    "end": "213659"
  },
  {
    "text": "start ec2 instances create s3 buckets etc right so we got it and that's generally those are operations done in",
    "start": "213659",
    "end": "220109"
  },
  {
    "text": "the management console the CLI API etc the next layer up of the cake is what I",
    "start": "220109",
    "end": "225359"
  },
  {
    "text": "you know I think it's I refer to it as the infrastructure layer right this is where you're connecting to operating",
    "start": "225359",
    "end": "231810"
  },
  {
    "text": "systems you're connecting to database engines right there's some unique nuances of this infrastructure layer",
    "start": "231810",
    "end": "237750"
  },
  {
    "text": "when it's in AWS and that most of our compute components have identities themselves and we'll explore that a bit",
    "start": "237750",
    "end": "243419"
  },
  {
    "text": "right and then finally the layer on top right Wow once we go once the cloud builders",
    "start": "243419",
    "end": "249569"
  },
  {
    "text": "provision that infrastructure we deploy our code the obviously the end of the day that the real purpose of all that is",
    "start": "249569",
    "end": "255720"
  },
  {
    "text": "to run applications and we've got to make sure that we get our users be they",
    "start": "255720",
    "end": "261419"
  },
  {
    "text": "you know our internal users are stammers our partners etc into those applications right and so it this is",
    "start": "261419",
    "end": "268510"
  },
  {
    "text": "really how I'd have you look at identity that the full totality of identity and AWS is these kind of layers for all",
    "start": "268510",
    "end": "276220"
  },
  {
    "text": "those types of abusers now you know",
    "start": "276220",
    "end": "281650"
  },
  {
    "start": "279000",
    "end": "279000"
  },
  {
    "text": "again maybe perhaps I kind of found it a little humorous to think about what folks would think about when I posted",
    "start": "281650",
    "end": "287440"
  },
  {
    "text": "these slides to SlideShare right like what in the world is this crazy person doing putting pictures of cake up there",
    "start": "287440",
    "end": "292750"
  },
  {
    "text": "and an identity talk but I think I think the metaphor is is a very good one right",
    "start": "292750",
    "end": "297900"
  },
  {
    "text": "but it has changed over the last particular 18 months eighteen months ago",
    "start": "297900",
    "end": "303040"
  },
  {
    "text": "I would have said to you that it really was a layered cake the way you approached identity at the bottom was",
    "start": "303040",
    "end": "308380"
  },
  {
    "text": "very was fairly distinct from the way you approached identity in the middle and fairly distinct from the way you",
    "start": "308380",
    "end": "313930"
  },
  {
    "text": "approached identity on the top we gave you tools we gave you services in each of those layers but they were ultimately",
    "start": "313930",
    "end": "319419"
  },
  {
    "text": "fairly independent today I'm hoping I'm gonna show you how these days it's a",
    "start": "319419",
    "end": "325150"
  },
  {
    "text": "little bit more like a tiramisu right there are still some layers in there there's there's still some things you can tease out but the lines are blurring",
    "start": "325150",
    "end": "331870"
  },
  {
    "text": "and I think they're blurring for for the good but it's important that we kind of recognize that all right so now to kind",
    "start": "331870",
    "end": "342190"
  },
  {
    "start": "340000",
    "end": "340000"
  },
  {
    "text": "of you know to help solidify that right let's look at a service like ec2 and",
    "start": "342190",
    "end": "348610"
  },
  {
    "text": "again this is something that I find is very important as you're going about as you're considering how you do identity",
    "start": "348610",
    "end": "354610"
  },
  {
    "text": "in AWS to understand planes of access right if we look at a service like ec2 you've got your control plane how you",
    "start": "354610",
    "end": "361690"
  },
  {
    "text": "start stops at ec2 instance and that is an AWS API authenticated by AWS",
    "start": "361690",
    "end": "367510"
  },
  {
    "text": "credentials typically speaking your connection to that resource right in this case you might use SSH or RDP is",
    "start": "367510",
    "end": "374440"
  },
  {
    "text": "over the data plane you're connecting to that instance over a network connection right and especially again 18 months ago",
    "start": "374440",
    "end": "382210"
  },
  {
    "text": "I would have told you that these were different paths credentials and protocols and you need to be mindful",
    "start": "382210",
    "end": "387310"
  },
  {
    "text": "that we're gonna see you today that there's definitely now kind of an asterisks on that last one that we need to be mindful of it'll be your choice",
    "start": "387310",
    "end": "393640"
  },
  {
    "text": "but some exciting things done that is very distinct from a service",
    "start": "393640",
    "end": "399680"
  },
  {
    "text": "like perhaps DynamoDB right here we've got the control plane how you create a table at the data plane how you put or",
    "start": "399680",
    "end": "406520"
  },
  {
    "text": "get objects out of the table and this in this scenario would you know it's always",
    "start": "406520",
    "end": "411800"
  },
  {
    "text": "been a unified approach both of these mechanisms are AWS api's therefore",
    "start": "411800",
    "end": "416900"
  },
  {
    "text": "authenticate and authorized by AWS I am alright okay so hopefully that was a",
    "start": "416900",
    "end": "424669"
  },
  {
    "text": "just a super-fast grounding and now let's jump into the good stuff right so the first topic I want to go through is",
    "start": "424669",
    "end": "431000"
  },
  {
    "text": "again let's dive now in further into some details on that the bottom layer of our cake how we do identity for the",
    "start": "431000",
    "end": "437860"
  },
  {
    "text": "platform layer and then I almost didn't do this section of my talk because I've",
    "start": "437860",
    "end": "442910"
  },
  {
    "start": "439000",
    "end": "439000"
  },
  {
    "text": "done this particular topic quite a number of times and then summits and in reinvent talks past but I still find",
    "start": "442910",
    "end": "449780"
  },
  {
    "text": "that there's a lot of folks struggling to figure out how to best get a whole bunch of cloud builders strongly",
    "start": "449780",
    "end": "455720"
  },
  {
    "text": "authenticated into a role into the roles across a large fleet of AWS accounts",
    "start": "455720",
    "end": "461030"
  },
  {
    "text": "right this is not a new problem it's been around for a while but there's still generally tends to be some confusion because there's a lot of",
    "start": "461030",
    "end": "467120"
  },
  {
    "text": "Awesome ways to do this right and you know we believe in giving you choice and how you go about this",
    "start": "467120",
    "end": "473150"
  },
  {
    "text": "I'd say quickly your options today are these three in principle you on the Left",
    "start": "473150",
    "end": "479240"
  },
  {
    "text": "you've got an option that's been around since I believe 2014 at reinvent where you can use sam'l identity provider that",
    "start": "479240",
    "end": "486410"
  },
  {
    "text": "you may already have in your environment to bridge through to AWS I am directly",
    "start": "486410",
    "end": "491479"
  },
  {
    "text": "right the middle option there is where we've taken essentially that pattern and",
    "start": "491479",
    "end": "496970"
  },
  {
    "text": "said managing identity providers isn't for everybody that's it's complex it's its identity group that not everybody",
    "start": "496970",
    "end": "502760"
  },
  {
    "text": "wants to deal with so we just passed reinvent it just missed the cut last year we announced a to be ssso which is",
    "start": "502760",
    "end": "509600"
  },
  {
    "text": "essentially the same pattern but where AWS manages the identity provider and because we do set a we also can do some",
    "start": "509600",
    "end": "516200"
  },
  {
    "text": "neat bells and whistles and and taking more of the identity within the platform",
    "start": "516200",
    "end": "521270"
  },
  {
    "text": "off your plate and the last option is where you build a custom broker right and this is probably the original",
    "start": "521270",
    "end": "527860"
  },
  {
    "text": "federated option into AWS where you get the benefit of having it",
    "start": "527860",
    "end": "533300"
  },
  {
    "text": "be whatever you want you could do any complexity of authorization and authentication you need to but the kind",
    "start": "533300",
    "end": "539900"
  },
  {
    "text": "of the challenge here is that you own everything right so let's get prescriptive right how do you",
    "start": "539900",
    "end": "545480"
  },
  {
    "text": "rationalize through which of these three options is best for you now I've had to kind of for the sake of fitting it on a",
    "start": "545480",
    "end": "551150"
  },
  {
    "text": "PowerPoint slide simplify this a bit from the version I kind of walk around with day-to-day but let's say you again",
    "start": "551150",
    "end": "558080"
  },
  {
    "text": "we're spacing that the basic challenge I outlined the first decision point I think you need to make is can you purely",
    "start": "558080",
    "end": "564440"
  },
  {
    "text": "make the authorization decisions who is out loud to access what role purely",
    "start": "564440",
    "end": "570350"
  },
  {
    "text": "based on the notion of groups or attributes generally in a back-end directory if you can't you know you the",
    "start": "570350",
    "end": "576680"
  },
  {
    "text": "option is clear right you've got to go to a custom broker some folks are doing really elaborate stuff about very",
    "start": "576680",
    "end": "582320"
  },
  {
    "text": "contextual information in terms of making these authorization decisions but if you're gonna reach out to all sorts",
    "start": "582320",
    "end": "588920"
  },
  {
    "text": "of those various sources you're gonna be in the custom broker world if you're not",
    "start": "588920",
    "end": "594590"
  },
  {
    "text": "if you can do all those decisions based on that your next break point is do you",
    "start": "594590",
    "end": "599900"
  },
  {
    "text": "already have an existing Samuel infrastructure in your environment if you do that's great just leverage it like this is a pattern",
    "start": "599900",
    "end": "605840"
  },
  {
    "text": "that's been around for a long time it's really well oiled it's really clean and it's it's got a it's it you know you you",
    "start": "605840",
    "end": "612080"
  },
  {
    "text": "really know you're going down a well-trodden path right if you don't you know that the the third kind of break",
    "start": "612080",
    "end": "618620"
  },
  {
    "text": "point that I'd have you come to is how many accounts AWS accounts do you reasonably forecast in your future if",
    "start": "618620",
    "end": "625370"
  },
  {
    "text": "it's under like approximately 20 I would say your best option is go to AWS SSO",
    "start": "625370",
    "end": "630830"
  },
  {
    "text": "right it's one it's basically one button turn on you're up and running now it's important to know 20 is not a limit",
    "start": "630830",
    "end": "637610"
  },
  {
    "text": "that's just you know there that it's I find that to be kind of the scale at which management's of these entities",
    "start": "637610",
    "end": "644660"
  },
  {
    "text": "through AWS SSO kind of visit at its sweet spot now that will certainly change in the future but for right now",
    "start": "644660",
    "end": "650960"
  },
  {
    "text": "if you were in the realm of over 20 ish accounts again not a limit just kind of",
    "start": "650960",
    "end": "655970"
  },
  {
    "text": "quince approximation I'd have you go back to that that very well trodden path of sam'l",
    "start": "655970",
    "end": "662290"
  },
  {
    "text": "right okay so now again I didn't I",
    "start": "662290",
    "end": "667389"
  },
  {
    "text": "wanted to touch on it but I didn't want to dive super deep if this is a topic that you want to explore some more there",
    "start": "667389",
    "end": "673419"
  },
  {
    "text": "the one the QR code that's there on the left is a workshop that we did a couple of years ago that really drives soup to",
    "start": "673419",
    "end": "679929"
  },
  {
    "text": "nuts all the way through the samuel story and obviously there on the right is a WS SSO a way to get started okay so",
    "start": "679929",
    "end": "688629"
  },
  {
    "text": "let's dive into something a little bit newer and a little bit more interesting within the platform layer and that's in",
    "start": "688629",
    "end": "694449"
  },
  {
    "text": "I think boundary policies is probably the official name of the feature but I",
    "start": "694449",
    "end": "699850"
  },
  {
    "text": "think of it in terms of I am delegation the quick backstory here is before July",
    "start": "699850",
    "end": "706089"
  },
  {
    "text": "of this past year there were a number of identity actions in AWS that were there",
    "start": "706089",
    "end": "712299"
  },
  {
    "text": "were very godlike permissions right the ability to create roles attach policies if you promised or if you gave somebody",
    "start": "712299",
    "end": "718899"
  },
  {
    "text": "the ability to do so you couldn't constrain what permissions they were gonna put in those policies right and that wasn't that was just the",
    "start": "718899",
    "end": "725410"
  },
  {
    "text": "mental model of AWS I am but the effect of that is if you wanted to empower your",
    "start": "725410",
    "end": "730539"
  },
  {
    "text": "developers to create roles for their instances or roles for their lambda functions or what have you you generally",
    "start": "730539",
    "end": "737079"
  },
  {
    "text": "had to still keep that as a centralized function which meant friction immense slowness that meant bottlenecks now what",
    "start": "737079",
    "end": "744970"
  },
  {
    "text": "you can do is we released again in July a feature called boundary policies and that essentially allows you to offer",
    "start": "744970",
    "end": "752049"
  },
  {
    "text": "those previously god-like permissions downstream to your developers but it",
    "start": "752049",
    "end": "757149"
  },
  {
    "text": "still allows you the central team to essentially put a bubble around the pecet of possible permissions that they",
    "start": "757149",
    "end": "763899"
  },
  {
    "text": "are allowed to use right now the way it essentially works is and you've seen",
    "start": "763899",
    "end": "770169"
  },
  {
    "text": "this in many cases in the AWS identity space is it's a full intersection logic",
    "start": "770169",
    "end": "776069"
  },
  {
    "text": "you the central team generally provide the boundary policy right what they're",
    "start": "776069",
    "end": "781539"
  },
  {
    "text": "allowed to do they get to sit they you've now delegated them the ability to",
    "start": "781539",
    "end": "786669"
  },
  {
    "text": "create the permission policy but when the API call goes into AWS what's going",
    "start": "786669",
    "end": "791769"
  },
  {
    "text": "to succeed or fail is the exact intersection those two so they can put star star and the right and it you know nothing is",
    "start": "791769",
    "end": "799069"
  },
  {
    "text": "gonna succeed unless it's it's it's allowed by the boundary policy and again",
    "start": "799069",
    "end": "804529"
  },
  {
    "start": "804000",
    "end": "804000"
  },
  {
    "text": "this is a big deal cuz this now we can unleash those developers we can not have",
    "start": "804529",
    "end": "809689"
  },
  {
    "text": "to have all their I am needs for their applications come centrally so let's see how this works right the first step is",
    "start": "809689",
    "end": "816769"
  },
  {
    "text": "to actually create the boundary itself now think about a common point of confusion here is this is not where",
    "start": "816769",
    "end": "823220"
  },
  {
    "text": "you're constraining the developers actions you should not be thinking about this like I should allow them to start",
    "start": "823220",
    "end": "829670"
  },
  {
    "text": "and stop ec2 or create s3 buckets so on and so forth this is about the the",
    "start": "829670",
    "end": "835009"
  },
  {
    "text": "actions that you're going to put in these boundary policies are the actions that you want to constrain in the roles",
    "start": "835009",
    "end": "840800"
  },
  {
    "text": "they create right and so it's gonna be things like s you know puts and guests at s3",
    "start": "840800",
    "end": "846610"
  },
  {
    "text": "DynamoDB and retrieval operations SMS sqs etc so the example here is we're",
    "start": "846610",
    "end": "852889"
  },
  {
    "text": "going to constrain you know this particular the the delegated roles to be able to only do some basic DynamoDB",
    "start": "852889",
    "end": "859579"
  },
  {
    "text": "options operations in the EU central one region the the second step again still",
    "start": "859579",
    "end": "867230"
  },
  {
    "text": "on the administrator side of things is you're going to give permission to that developer again in the in the policies",
    "start": "867230",
    "end": "874369"
  },
  {
    "text": "attached to their normal role the ability to do those again very previously very sensitive operations",
    "start": "874369",
    "end": "880850"
  },
  {
    "text": "create role attached policy and so on and so forth but you're going to add a condition where they're only allowed to",
    "start": "880850",
    "end": "887420"
  },
  {
    "text": "do so if they themselves specify the spandrel policy okay and then the last",
    "start": "887420",
    "end": "894049"
  },
  {
    "text": "step is you you know you've got a after they've created a role they have to be able to use it right and so the third",
    "start": "894049",
    "end": "900559"
  },
  {
    "text": "kind of logical permission that you need to offer out to them is the ability to pass that role to be able to use that",
    "start": "900559",
    "end": "906709"
  },
  {
    "text": "role now it may not be terribly obvious in the the JSON here but you'll see that",
    "start": "906709",
    "end": "912860"
  },
  {
    "text": "I've used paths within my my resource line there right and I think that",
    "start": "912860",
    "end": "918170"
  },
  {
    "text": "padding is probably one of the most undervalued points of authorization within AWS which it's not you know that",
    "start": "918170",
    "end": "925129"
  },
  {
    "text": "ironically it's not supported by the console but if you're building your roles with CloudFormation terraform or why whatever",
    "start": "925129",
    "end": "931830"
  },
  {
    "text": "other automation you might want it's a really awesome way to kind of segment your rolls out into logical spaces and",
    "start": "931830",
    "end": "939410"
  },
  {
    "text": "then the last step is the one on the user side of things right and and",
    "start": "939410",
    "end": "945270"
  },
  {
    "text": "generally they're they there's nothing that needs to change with the exception of they add one extra condition to the",
    "start": "945270",
    "end": "953700"
  },
  {
    "text": "or one extra parameter to the creation of their role where they themselves specify the boundary policy and this to",
    "start": "953700",
    "end": "960060"
  },
  {
    "text": "me is the burial II nice way to this comes off for a circle is because the",
    "start": "960060",
    "end": "965160"
  },
  {
    "text": "developer it's transparent to everyone they understand that they are operating within this boundary and so they're not",
    "start": "965160",
    "end": "970860"
  },
  {
    "text": "going to get confused why their API calls are failing when when they've specified star star you can also do you",
    "start": "970860",
    "end": "979530"
  },
  {
    "text": "permission boundaries are now supported by cloud formation as of two weeks ago so so you know certainly the same thing",
    "start": "979530",
    "end": "986640"
  },
  {
    "text": "I've showed it with the CLI here but same thing as possible through cloud formation okay so that you know that",
    "start": "986640",
    "end": "994650"
  },
  {
    "start": "992000",
    "end": "992000"
  },
  {
    "text": "release really nailed probably the biggest challenge in the space right we now we've unleashed that agility we've",
    "start": "994650",
    "end": "1001910"
  },
  {
    "text": "let those teams run at the speed that which they are able to run without fear",
    "start": "1001910",
    "end": "1007400"
  },
  {
    "text": "that they're gonna blow the guardrails off the off the road right but they're",
    "start": "1007400",
    "end": "1012770"
  },
  {
    "text": "still kind of a second problem that's embedded in this whole space is that writing I am policy language effectively",
    "start": "1012770",
    "end": "1020210"
  },
  {
    "text": "well scoped least privileged all those terms that we know and love is still something of an art right we're working",
    "start": "1020210",
    "end": "1025280"
  },
  {
    "text": "on making it better but it's definitely something of an art and you know generally speaking the developers that",
    "start": "1025280",
    "end": "1032480"
  },
  {
    "text": "we've now cast into this world don't haven't had any experience doing that by and large right and so if we don't make",
    "start": "1032480",
    "end": "1039380"
  },
  {
    "text": "it super easy for them to do the right thing certainly my assertion is we're gonna end up with a lot of policies that",
    "start": "1039380",
    "end": "1044780"
  },
  {
    "text": "they've authored they'll just say star star and I'll let the folks that that did the ion boundary policy take care of",
    "start": "1044780",
    "end": "1050960"
  },
  {
    "text": "all the hard goop right and so what if we could have a world where instead of",
    "start": "1050960",
    "end": "1057350"
  },
  {
    "text": "the developer having to write all this JSON which you can see I obviously struggled even with a simple policy to condense it down",
    "start": "1057350",
    "end": "1063190"
  },
  {
    "text": "to where it would fit on one slide what if they could write something like this right",
    "start": "1063190",
    "end": "1068200"
  },
  {
    "text": "again what we're gonna use here is a combination of an relatively new feature called cloud formation macros right in",
    "start": "1068200",
    "end": "1075369"
  },
  {
    "text": "this case we're gonna do a transformation think of cloud formation macros is a preprocessor on your cloud",
    "start": "1075369",
    "end": "1081549"
  },
  {
    "text": "formation templates they still need to specify some basic elements abouts the",
    "start": "1081549",
    "end": "1086649"
  },
  {
    "text": "role right they still need to get we need to know whether it's for lambda or ec2 or what-have-you but then instead of",
    "start": "1086649",
    "end": "1094179"
  },
  {
    "text": "specifying all the GUP of that policy language what if they could just describe permissions in a way that's",
    "start": "1094179",
    "end": "1100179"
  },
  {
    "text": "very human Orion human centric I want to read to this this bucket or read and",
    "start": "1100179",
    "end": "1105730"
  },
  {
    "text": "write to this DynamoDB table that to me seems like a language the developers could very quickly understand and very",
    "start": "1105730",
    "end": "1112600"
  },
  {
    "text": "quickly operate with so let's see how that might work like so this happen the",
    "start": "1112600",
    "end": "1125470"
  },
  {
    "text": "other day can we flip over to the other screen please why is it locked here yeah",
    "start": "1125470",
    "end": "1133509"
  },
  {
    "text": "I don't have permission I really don't blinking red like you are not gonna",
    "start": "1133509",
    "end": "1139840"
  },
  {
    "text": "switch this screen to save your life now that's not the right one guys can I get",
    "start": "1139840",
    "end": "1148539"
  },
  {
    "text": "the demo computer up on the screen please sorry this is a Friday morning",
    "start": "1148539",
    "end": "1154960"
  },
  {
    "text": "moment I apologize yeah",
    "start": "1154960",
    "end": "1162700"
  },
  {
    "text": "so it's blinking red and totally frozen ah I talked too long computer went to",
    "start": "1162700",
    "end": "1170630"
  },
  {
    "text": "sleep there we go",
    "start": "1170630",
    "end": "1173470"
  },
  {
    "text": "well I'm buddy got any good jokes yeah",
    "start": "1180310",
    "end": "1186290"
  },
  {
    "text": "Bill Gates it right I don't know I could",
    "start": "1186290",
    "end": "1191540"
  },
  {
    "text": "use one it's actually Linux even better",
    "start": "1191540",
    "end": "1199070"
  },
  {
    "text": "Touche yeah and here well well unplug and",
    "start": "1199070",
    "end": "1206490"
  },
  {
    "text": "replug we'll try well that'll be the like display version of Bill Gates yeah",
    "start": "1206490",
    "end": "1216179"
  },
  {
    "text": "there should be alright we got at least got green on the screen now",
    "start": "1216179",
    "end": "1222600"
  },
  {
    "text": "hey alright I don't like to I only took a minute alright and I did not have that",
    "start": "1222600",
    "end": "1229170"
  },
  {
    "text": "minute to burn like literally like though when I did this on Wednesday we went right to the end so okay",
    "start": "1229170",
    "end": "1234809"
  },
  {
    "text": "apologies for little tech confusion there right okay so the first thing I'm going to do to get this started is I'm",
    "start": "1234809",
    "end": "1242220"
  },
  {
    "text": "gonna actually log in using sam'l Federation like I described earlier all",
    "start": "1242220",
    "end": "1249330"
  },
  {
    "text": "right and again if you if this what I'm kind of doing here looks like voodoo",
    "start": "1249330",
    "end": "1254460"
  },
  {
    "text": "grabbing a CLI token over sam'l hit that hit that QR code right so I'm going to",
    "start": "1254460",
    "end": "1260730"
  },
  {
    "text": "go into my bounded developer role and now what just happens is I fetched in an ADA bs credential tied to me through",
    "start": "1260730",
    "end": "1267450"
  },
  {
    "text": "sam'l so now I'm going to I'm always terrible at typing and trying to talk at",
    "start": "1267450",
    "end": "1273390"
  },
  {
    "text": "the same time so I do these little helper scripts right so what I did here is a but to make it so you knew that it",
    "start": "1273390",
    "end": "1279750"
  },
  {
    "text": "wasn't cheating I just kind of echoed out what I what I was doing and I see you see I use my sam'l profile and I did",
    "start": "1279750",
    "end": "1286890"
  },
  {
    "text": "a deployment operation on this this example template right you do have to",
    "start": "1286890",
    "end": "1292530"
  },
  {
    "text": "use the deploys step when you're using these macros rather than like create stack which you might be used to to",
    "start": "1292530",
    "end": "1298559"
  },
  {
    "text": "again get that kind of pre-processing operation going on okay so now while",
    "start": "1298559",
    "end": "1304410"
  },
  {
    "text": "that's while it's baking and we'll show you the the end product in a second right I think what again and I showed a",
    "start": "1304410",
    "end": "1310500"
  },
  {
    "text": "fairly simplistic example in the slides but here's what's kind of building in the background right it's the same it's",
    "start": "1310500",
    "end": "1316200"
  },
  {
    "text": "the same pattern just a little bit more complicated I've got a handful of resources some I've done read-only you",
    "start": "1316200",
    "end": "1321690"
  },
  {
    "text": "know KMS keys some parameters in parameter store so on and so forth what",
    "start": "1321690",
    "end": "1327540"
  },
  {
    "text": "i'd have you observe here is that there is most you know there's there's also this sqs permission right that one's",
    "start": "1327540",
    "end": "1334620"
  },
  {
    "text": "going to apply into the boundary policy that we'll look at in a second so this piece of this little snippet here is 28 lines by",
    "start": "1334620",
    "end": "1342690"
  },
  {
    "text": "contrast what the original file that I kind of started with and I did this one in JSON just to make the contrast",
    "start": "1342690",
    "end": "1349050"
  },
  {
    "text": "particularly painful and obvious right this is to see 258 lines so somewhere on",
    "start": "1349050",
    "end": "1355620"
  },
  {
    "text": "the order of 10x reduction and policy size at the same time at least in my opinion making it radically more simple",
    "start": "1355620",
    "end": "1362970"
  },
  {
    "text": "to understand and in view okay so now let's flip over and we're gonna go into",
    "start": "1362970",
    "end": "1369810"
  },
  {
    "text": "the console again this you see me here sign into my identity provider the same",
    "start": "1369810",
    "end": "1376170"
  },
  {
    "text": "way but this time instead of doing it the CLI I'm doing it into the console I'll choose that same bounded developer",
    "start": "1376170",
    "end": "1383520"
  },
  {
    "text": "and let's drop in right and let's see kind of how this magic this video works",
    "start": "1383520",
    "end": "1389090"
  },
  {
    "text": "so again what a cloud formation macro essentially is is it's sending your template to lambda as a preprocessor",
    "start": "1389090",
    "end": "1398030"
  },
  {
    "text": "okay so if we go into lambda check things out and here we go look so this",
    "start": "1398030",
    "end": "1407670"
  },
  {
    "text": "code and I'll show you the link in a second I've already submitted a pull request into github where this is gonna go into the bucket where we have all our",
    "start": "1407670",
    "end": "1415050"
  },
  {
    "text": "cloud formation macros but it's basically two simple Python files now I've started here you could make this a",
    "start": "1415050",
    "end": "1420120"
  },
  {
    "text": "lot fancier with perhaps where we store this some of these policy templates but",
    "start": "1420120",
    "end": "1425190"
  },
  {
    "text": "the first function is really easy or the first part of code is really easy and let's see if we can make that actually",
    "start": "1425190",
    "end": "1430830"
  },
  {
    "text": "bigger so it's quasi legible all this is really doing is it's receiving the",
    "start": "1430830",
    "end": "1436740"
  },
  {
    "text": "template it's iterating through all of the entities in the template and it's just looking for the ones that are I am",
    "start": "1436740",
    "end": "1443400"
  },
  {
    "text": "roles finds I am role it sends it to the expansion function and the expansion",
    "start": "1443400",
    "end": "1448470"
  },
  {
    "text": "function all it really does is it's going in and it's taking these again",
    "start": "1448470",
    "end": "1454350"
  },
  {
    "text": "what we defined before was an action group read-only readwrite and we can infer the service from the resource that",
    "start": "1454350",
    "end": "1461370"
  },
  {
    "text": "that is attached to it the and then it's essentially stored in this other file are these temp",
    "start": "1461370",
    "end": "1468269"
  },
  {
    "text": "it's for what a good policy for read-only for an s3 bucket might look like right",
    "start": "1468269",
    "end": "1473879"
  },
  {
    "text": "so this is where you the I am author get to do all the good hygiene that the",
    "start": "1473879",
    "end": "1478889"
  },
  {
    "text": "developer probably would have really struggled to do you know I've just I've kind of just taken the some of the",
    "start": "1478889",
    "end": "1484409"
  },
  {
    "text": "default templates or the default policies off you know out of our managed policies but the trick is is that we we",
    "start": "1484409",
    "end": "1491159"
  },
  {
    "text": "just put in these tokens right particularly the one for resource and what ultimately the function does is it",
    "start": "1491159",
    "end": "1497959"
  },
  {
    "text": "applies that one little line with this big snippet substituting in the resource",
    "start": "1497959",
    "end": "1503759"
  },
  {
    "text": "for kind of the token here right and then if we go back and we look at how it",
    "start": "1503759",
    "end": "1510419"
  },
  {
    "text": "turned out in CloudFormation and and",
    "start": "1510419",
    "end": "1515459"
  },
  {
    "text": "that's you know I've taken a crack at this basic problem space a number of times but what this launch of",
    "start": "1515459",
    "end": "1522239"
  },
  {
    "text": "CloudFormation macros really enabled us enabled here in this space is to be able",
    "start": "1522239",
    "end": "1527669"
  },
  {
    "text": "to give the developer an easy tool upfront but have their outcome be ultimately at the end of the day a true",
    "start": "1527669",
    "end": "1533489"
  },
  {
    "text": "raw native CloudFormation template was so there was no there's no abstraction there's no goop in the middle all right",
    "start": "1533489",
    "end": "1539999"
  },
  {
    "text": "so if we look and let's just go and look the one that I baked is already here",
    "start": "1539999",
    "end": "1545009"
  },
  {
    "text": "done and all you'll see notice different you know is they they're it'll give you the option to view the original template",
    "start": "1545009",
    "end": "1551489"
  },
  {
    "text": "right they had kind of my nice little shorthand notation but you'll see afterwards and again here they decided",
    "start": "1551489",
    "end": "1559139"
  },
  {
    "text": "to throw it back at you and JSON just to let you know how painful are all the pain they saved you you see the the",
    "start": "1559139",
    "end": "1565349"
  },
  {
    "text": "glorified exploded version right but it but in my mind this is a really neat way",
    "start": "1565349",
    "end": "1570450"
  },
  {
    "text": "to let again those developers do have good hygiene on their side of the equation all right so let's let's so",
    "start": "1570450",
    "end": "1578879"
  },
  {
    "text": "let's before we look at how then that might be applied how the developer might use that role they've just created let's",
    "start": "1578879",
    "end": "1585599"
  },
  {
    "text": "just quickly kind of inspect the other half of things again what what made this all policy was possible was the boundary",
    "start": "1585599",
    "end": "1592109"
  },
  {
    "text": "of policy okay so if I go in and if you remember in the role I built one of the",
    "start": "1592109",
    "end": "1600059"
  },
  {
    "text": "permissions that I called outward of the you ask permissions right so here is the boundary policy that I put on my myself",
    "start": "1600059",
    "end": "1608610"
  },
  {
    "text": "here it's again got fairly common operations I'm gonna do some stuff with SSM I need to you know decrypt you know",
    "start": "1608610",
    "end": "1615750"
  },
  {
    "text": "the in from the parameters I'm getting out of parameter store so on and so forth and there's there's a number of",
    "start": "1615750",
    "end": "1621330"
  },
  {
    "text": "other things that I've kind of rolled into here that are useful for me as the developer to be able to do but I've",
    "start": "1621330",
    "end": "1627480"
  },
  {
    "text": "decided lis not offered them myself the ability to do any sqs operations all",
    "start": "1627480",
    "end": "1634170"
  },
  {
    "text": "right and then the again after I've got that boundary policy in place I give my super",
    "start": "1634170",
    "end": "1640830"
  },
  {
    "text": "duper powerful privileges but I make sure they do it within the boundary okay",
    "start": "1640830",
    "end": "1646230"
  },
  {
    "text": "so let's see how that plays out so first I'm gonna go to will start a new little",
    "start": "1646230",
    "end": "1652470"
  },
  {
    "text": "window I'm gonna go to the little demo app I created this in flask just just",
    "start": "1652470",
    "end": "1658230"
  },
  {
    "text": "kind of because I like Python and that you know this is generally very you know",
    "start": "1658230",
    "end": "1663750"
  },
  {
    "text": "making demos of things that succeed or fail interesting is hard so bear with me all right but you know the first the",
    "start": "1663750",
    "end": "1671160"
  },
  {
    "text": "first call that this application is doing is one that was inside the boundary right so we went we we went out",
    "start": "1671160",
    "end": "1677520"
  },
  {
    "text": "to DynamoDB and we got our you know three kind of fun flavors of cake back right the one that was outside the",
    "start": "1677520",
    "end": "1684840"
  },
  {
    "text": "boundary right and I'll show you this in a little bit more gory detail was I tried it to push some information to an",
    "start": "1684840",
    "end": "1692640"
  },
  {
    "text": "asked us cue right you saw where I hide the developer very clearly gave tried to",
    "start": "1692640",
    "end": "1697650"
  },
  {
    "text": "give myself the ability to do so through that role but because of that intersection logic with the boundary",
    "start": "1697650",
    "end": "1702960"
  },
  {
    "text": "policy I get to nine and then even if the developer should happen to do kind",
    "start": "1702960",
    "end": "1711000"
  },
  {
    "text": "of the craziest thing going let's go into I am let's go into my roles let's",
    "start": "1711000",
    "end": "1721530"
  },
  {
    "text": "find the front-end role that's gonna underneath that application and let's",
    "start": "1721530",
    "end": "1727890"
  },
  {
    "text": "attach some policies we're gonna go just right to the jugular we're gonna go administrator access okay",
    "start": "1727890",
    "end": "1734600"
  },
  {
    "text": "all right let's now yes so let's list",
    "start": "1734600",
    "end": "1740269"
  },
  {
    "text": "our instances let's grab one of these front-end servers let's SSH to our",
    "start": "1740269",
    "end": "1749600"
  },
  {
    "text": "bastion host alright let's SSH over the",
    "start": "1749600",
    "end": "1756320"
  },
  {
    "text": "front-end server and so now again I've in that last step attached like full",
    "start": "1756320",
    "end": "1762620"
  },
  {
    "text": "admin permissions to the role that this is operating yes and so the first you",
    "start": "1762620",
    "end": "1771110"
  },
  {
    "text": "can type I see I can't type and talk alright so the first kind of test is is the same kind of CLI version of what I",
    "start": "1771110",
    "end": "1778370"
  },
  {
    "text": "already showed right here was that role that I modified just doing an STS gate",
    "start": "1778370",
    "end": "1783440"
  },
  {
    "text": "coloring identity I mean I'm successfully able to push s3 because both of those were within the",
    "start": "1783440",
    "end": "1788929"
  },
  {
    "text": "intersection but that my sqs call gets denied and that was that certainly well",
    "start": "1788929",
    "end": "1794659"
  },
  {
    "text": "and good but the one that everybody was always worried about is again I attached permissions that were inappropriate I",
    "start": "1794659",
    "end": "1801139"
  },
  {
    "text": "drop into the box and I try to execute this highly privileged operation in this case creating a user and I clearly get",
    "start": "1801139",
    "end": "1808070"
  },
  {
    "text": "the nine right so even though full admin permissions were well constrained and everybody's happy all right cool",
    "start": "1808070",
    "end": "1818299"
  },
  {
    "text": "so I mentioned we've already got a pretty good repo of these CloudFormation templates out on github already the one",
    "start": "1818299",
    "end": "1826340"
  },
  {
    "text": "that I just showed you should you want to play around with it and experiment the pull request has already been submitted I don't own getting it merged",
    "start": "1826340",
    "end": "1833330"
  },
  {
    "text": "but you should be able to see it out there I do know the gentleman that owns getting it merged and we're gonna work to get that rolled in as soon as",
    "start": "1833330",
    "end": "1839779"
  },
  {
    "text": "possible and if you can't take the pictures fast enough with the old QR codes all these slides are going to be",
    "start": "1839779",
    "end": "1845450"
  },
  {
    "text": "available on SlideShare you know I don't know the exact number of days but very soon",
    "start": "1845450",
    "end": "1851860"
  },
  {
    "text": "all right so if that was a couple of quick highlights and hits in identity",
    "start": "1851860",
    "end": "1857779"
  },
  {
    "text": "for the platform layer let's now move up to the next layer of our cake let's go up and look at identity in the",
    "start": "1857779",
    "end": "1863929"
  },
  {
    "text": "infrastructure layer as I alluded to a little bit part of this equation is a problem that",
    "start": "1863929",
    "end": "1871130"
  },
  {
    "start": "1865000",
    "end": "1865000"
  },
  {
    "text": "or it not a problem it is a space that you've been operating in for a while how do I properly authenticate and authorize",
    "start": "1871130",
    "end": "1876230"
  },
  {
    "text": "users into operating systems in databases etc so and we're gonna explore",
    "start": "1876230",
    "end": "1881240"
  },
  {
    "text": "how that is is maybe similar maybe the same in AWS and then the other wrinkle is is a little bit of what you just saw",
    "start": "1881240",
    "end": "1887270"
  },
  {
    "text": "me doing right I had the compute components in AWS that you build your",
    "start": "1887270",
    "end": "1892310"
  },
  {
    "text": "applications on generally have identities themselves right so let's look at both of those all right for",
    "start": "1892310",
    "end": "1900470"
  },
  {
    "start": "1900000",
    "end": "1900000"
  },
  {
    "text": "identity for the infrastructure we're again you've got lots of options here",
    "start": "1900470",
    "end": "1905510"
  },
  {
    "text": "and probably what makes sense for you depends on where you are in your journey if you're just getting going and you're",
    "start": "1905510",
    "end": "1912290"
  },
  {
    "text": "migrating a lot of traditional apps to the cloud you probably just want to stick with the traditional approaches",
    "start": "1912290",
    "end": "1917810"
  },
  {
    "text": "that you've been doing and and and probably are very good at in this space right domain joining instances you know",
    "start": "1917810",
    "end": "1924500"
  },
  {
    "text": "or using SSH you know keys in proper key management to connect to these instances is a very",
    "start": "1924500",
    "end": "1931340"
  },
  {
    "text": "valid pattern that is honestly barely different in AWS than it was in any data",
    "start": "1931340",
    "end": "1937820"
  },
  {
    "text": "center you've you've come from now a lot of times especially reinvent we also at the other end of the spectrum we talk",
    "start": "1937820",
    "end": "1943940"
  },
  {
    "text": "about the Utopia of no-ops right we eliminate this problem because nobody ever logs in the infrastructure is",
    "start": "1943940",
    "end": "1950120"
  },
  {
    "text": "immutable all these great wonderful things but at least in my travels I find that that is that is a journey that",
    "start": "1950120",
    "end": "1956720"
  },
  {
    "text": "customers need to get to over time and it I'd also have you think about it not always be a binary decision sometimes",
    "start": "1956720",
    "end": "1963590"
  },
  {
    "text": "the cloud native new digital marketing applications might might really be able",
    "start": "1963590",
    "end": "1969560"
  },
  {
    "text": "to get to know ops fairly quickly the application that we migrated that's been arrested into the data center for the",
    "start": "1969560",
    "end": "1975710"
  },
  {
    "text": "last seven years and nobody has the source code for maybe it takes us a little while to get there right but",
    "start": "1975710",
    "end": "1981710"
  },
  {
    "text": "again I alluded to this tara misu factor what is emerged is a really awesome kind",
    "start": "1981710",
    "end": "1988010"
  },
  {
    "text": "of new option is the notion of I am based off for for infrastructure now I'm",
    "start": "1988010",
    "end": "1996080"
  },
  {
    "text": "ready then kind of blow through the word slide here right I'm just gonna hit a couple of highlights the advantages here is that",
    "start": "1996080",
    "end": "2003220"
  },
  {
    "text": "in it it smells and feels a little bit different for each of the services that it supports but by and large what you're",
    "start": "2003220",
    "end": "2009370"
  },
  {
    "text": "doing is you're taking your I am credentials and you're using those to derive an ephemeral connect credential",
    "start": "2009370",
    "end": "2015910"
  },
  {
    "text": "that you might use to connect to whatever resource status and we're going to see a couple examples in a second it",
    "start": "2015910",
    "end": "2022360"
  },
  {
    "text": "allows you to codify who has access to what for your infrastructure in the same",
    "start": "2022360",
    "end": "2027670"
  },
  {
    "text": "policy right adjacent to who can access what s3 bucket and it really eliminates",
    "start": "2027670",
    "end": "2033580"
  },
  {
    "text": "a lot I mean there's eliminating any form of long term credential",
    "start": "2033580",
    "end": "2038650"
  },
  {
    "text": "particularly ones that are powerful like database root passwords like domain",
    "start": "2038650",
    "end": "2043840"
  },
  {
    "text": "joining credentials for for ec2 you know this these patterns allow a lot of those",
    "start": "2043840",
    "end": "2049149"
  },
  {
    "text": "to be retired which is a major HUP left all right so let's see how this might",
    "start": "2049150",
    "end": "2055540"
  },
  {
    "text": "work all right much better switch over that time all",
    "start": "2055540",
    "end": "2061000"
  },
  {
    "text": "right we're improving okay so in the first demo you saw me do just",
    "start": "2061000",
    "end": "2066100"
  },
  {
    "text": "traditional ike ssh to a bastion host i asked two states then over to the the",
    "start": "2066100",
    "end": "2071290"
  },
  {
    "text": "front-end server that i was interested in very traditional way of doing so right so now instead and let's back out",
    "start": "2071290",
    "end": "2078520"
  },
  {
    "text": "of said instance and let's list the",
    "start": "2078520",
    "end": "2083800"
  },
  {
    "text": "instances again yeah I guess before I show this I'll show one other part of",
    "start": "2083800",
    "end": "2089919"
  },
  {
    "text": "the permissions that I've given myself and what I did here is I gave myself the",
    "start": "2089920",
    "end": "2095200"
  },
  {
    "text": "permission to start session two instances that were tagged as front end",
    "start": "2095200",
    "end": "2101500"
  },
  {
    "text": "servers right and here again this is this is where I'm codifying my authorizations to what I can connect to",
    "start": "2101500",
    "end": "2107080"
  },
  {
    "text": "you can do it per instance you can do it per set of instances you can do it based on tags kind of the world is you know",
    "start": "2107080",
    "end": "2114160"
  },
  {
    "text": "lots of different choices there but then once I've got those authorizations now I grab my instance ID that I want to",
    "start": "2114160",
    "end": "2121450"
  },
  {
    "text": "connect to and with my little helper script again making thank demos of log",
    "start": "2121450",
    "end": "2128320"
  },
  {
    "text": "again too is interesting is sometimes tough but what I just logged in there essentially",
    "start": "2128320",
    "end": "2133450"
  },
  {
    "text": "no SSH key now you know and straight to dancers now those of you that are astute",
    "start": "2133450",
    "end": "2140350"
  },
  {
    "text": "and have been around the Linux 20 Enix world for a while note that I probably I just dropped into a pretty powerful",
    "start": "2140350",
    "end": "2145450"
  },
  {
    "text": "shell on that machine right that's that's the you know that's a root level shell we're gonna get better at this",
    "start": "2145450",
    "end": "2150850"
  },
  {
    "text": "over time give better granularity for you know what users you can drop into and so on and so forth but the real",
    "start": "2150850",
    "end": "2157060"
  },
  {
    "text": "upside the real kind of amazing thing about this to me is that you know port",
    "start": "2157060",
    "end": "2162940"
  },
  {
    "text": "22 is not even open and we talked a lot about in there we talk a lot in the",
    "start": "2162940",
    "end": "2168190"
  },
  {
    "text": "security world about reduction of surface area and things of that nature what this feature allows you to",
    "start": "2168190",
    "end": "2174970"
  },
  {
    "text": "essentially do is turn off SSH and that is a really really powerful thing all",
    "start": "2174970",
    "end": "2181960"
  },
  {
    "text": "right so then just to let's see what that looks like the equivalent feature",
    "start": "2181960",
    "end": "2187150"
  },
  {
    "text": "for a database now the the one for session manager again it is what it's",
    "start": "2187150",
    "end": "2193390"
  },
  {
    "text": "using there is a WebSocket in lieu of an SSH connection for RDS it still is a",
    "start": "2193390",
    "end": "2199930"
  },
  {
    "text": "kind of a traditional database connection so I do actually have to have network path to the machine I mean it",
    "start": "2199930",
    "end": "2206770"
  },
  {
    "text": "you still rely on that bastion host I had a second ago to tunnel the port to",
    "start": "2206770",
    "end": "2212170"
  },
  {
    "text": "my local machine just for good sanity and then I'm gonna connect to my",
    "start": "2212170",
    "end": "2217330"
  },
  {
    "text": "database instance ouch now again logging in not super interesting but when you",
    "start": "2217330",
    "end": "2223630"
  },
  {
    "text": "think about what happened in the background there it really is the way I am authentication for RDS works is you",
    "start": "2223630",
    "end": "2230500"
  },
  {
    "text": "take a you generate there's an API call generate DB auth token what that's doing",
    "start": "2230500",
    "end": "2236170"
  },
  {
    "text": "is it's taking your AWS credentials cig v4 signing with all of the great cryptography and API call and some and",
    "start": "2236170",
    "end": "2244060"
  },
  {
    "text": "submitting that signed API call as what is approaching a thousand character",
    "start": "2244060",
    "end": "2250030"
  },
  {
    "text": "one-time ephemeral password right the only thing I needed to do in RDS was",
    "start": "2250030",
    "end": "2256210"
  },
  {
    "text": "essentially turn it on and then I do need to essentially pre provision a",
    "start": "2256210",
    "end": "2262109"
  },
  {
    "text": "user and allow them to do you know I allow them to do whatever operations I",
    "start": "2262109",
    "end": "2267569"
  },
  {
    "text": "want within the database but yeah and then at the end of the day I use that",
    "start": "2267569",
    "end": "2272640"
  },
  {
    "text": "token RDS takes that and is able to verify the signature you know essentially then then very verifying my",
    "start": "2272640",
    "end": "2279599"
  },
  {
    "text": "password and life is good okay so we got",
    "start": "2279599",
    "end": "2287460"
  },
  {
    "text": "a number of services that support this general pattern today right I showed you the first two red shift also you know",
    "start": "2287460",
    "end": "2294690"
  },
  {
    "text": "supports a variety of these types of mechanisms and and and more to come all",
    "start": "2294690",
    "end": "2300900"
  },
  {
    "text": "right so if now let's flip over and again we did we looked at this a bit already but the base primitive in kind",
    "start": "2300900",
    "end": "2307920"
  },
  {
    "text": "of the notion of identity of the infrastructure is a role right and so just as a super-fast refresher I attach",
    "start": "2307920",
    "end": "2314759"
  },
  {
    "text": "a role to my running operating system my code knows how to go in to the metadata store that's there draw out those",
    "start": "2314759",
    "end": "2320999"
  },
  {
    "text": "credentials and I can seamlessly without ever having to plumb many credentials or",
    "start": "2320999",
    "end": "2326609"
  },
  {
    "text": "rotating credentials I can get those access to those resources AWS behind the scenes without you having",
    "start": "2326609",
    "end": "2332609"
  },
  {
    "text": "to do anything much less take a change window rotates those I believe it's every six hours on your behalf all right",
    "start": "2332609",
    "end": "2339269"
  },
  {
    "text": "then we got similar features for lambda and ACS but while that has been a really",
    "start": "2339269",
    "end": "2344880"
  },
  {
    "start": "2341000",
    "end": "2341000"
  },
  {
    "text": "great tool for you to use in your environment for a number of years for rotating your AWS credentials that's not",
    "start": "2344880",
    "end": "2350999"
  },
  {
    "text": "generally the only type of identity that your application or your infrastructure layer needs but the most salient example",
    "start": "2350999",
    "end": "2358650"
  },
  {
    "text": "is you've probably are connecting to relational databases and so or third party API is right and and historically",
    "start": "2358650",
    "end": "2366089"
  },
  {
    "text": "we've had to have the DBA created credential and they do the double top secret back-alley exchange where they",
    "start": "2366089",
    "end": "2372089"
  },
  {
    "text": "you know hopefully encrypt it but maybe not get it over the developer they've got to do the magic of shoveling it down",
    "start": "2372089",
    "end": "2378150"
  },
  {
    "text": "to the instances and then when it gets there it gloriously sits in a plain text",
    "start": "2378150",
    "end": "2383160"
  },
  {
    "text": "file unencrypted right and nobody ever touches it for the next year because they're scared to death to rotate the",
    "start": "2383160",
    "end": "2388529"
  },
  {
    "text": "thing so how could we do better at the San Francisco summit earlier this year",
    "start": "2388529",
    "end": "2394349"
  },
  {
    "start": "2390000",
    "end": "2390000"
  },
  {
    "text": "we room secrets manager right as a secrets manager starts with that same basic",
    "start": "2394349",
    "end": "2400110"
  },
  {
    "text": "story it starts with originating kind of that your base AWS credentials as you",
    "start": "2400110",
    "end": "2406980"
  },
  {
    "text": "always did before but now what we're gonna do is we're going to take a service and we're gonna load in a",
    "start": "2406980",
    "end": "2413940"
  },
  {
    "text": "credential to the resource we want to connect to in this case RDS in the secrets manager now that might still be",
    "start": "2413940",
    "end": "2420660"
  },
  {
    "text": "a human doing that job or actually just in the last couple weeks we release the",
    "start": "2420660",
    "end": "2425970"
  },
  {
    "text": "features such that you can embed instead of embedding a database password in your cloud formation template you can just",
    "start": "2425970",
    "end": "2432090"
  },
  {
    "text": "specify a path where you want us to store the password the randomly generated password in secrets manager",
    "start": "2432090",
    "end": "2438390"
  },
  {
    "text": "directly then the first call now instead of the first call being to the resource",
    "start": "2438390",
    "end": "2444720"
  },
  {
    "text": "you want to connect first call is secrets manager that returns database credentials and the connections",
    "start": "2444720",
    "end": "2451770"
  },
  {
    "text": "established now that part of the plumbing is interesting it's good right it gives you a lot of strong authorization I ran on those credentials",
    "start": "2451770",
    "end": "2459180"
  },
  {
    "text": "you don't have to take care of wrapping them up and kms and shoving them an s3 and doing all the sorts of the of",
    "start": "2459180",
    "end": "2465990"
  },
  {
    "text": "getting into them down to your code securely but the real magic here is the rotation right and I kind of jokingly",
    "start": "2465990",
    "end": "2472770"
  },
  {
    "text": "said that like no one would touch their database password because they were terrified to rotate it what secrets manager it's it's real",
    "start": "2472770",
    "end": "2479850"
  },
  {
    "text": "special sauce is that we at Amazon have been managing password rotations for",
    "start": "2479850",
    "end": "2485460"
  },
  {
    "text": "databases at scale for a really long time we took all of that intelligence about how to do it so reliably that no",
    "start": "2485460",
    "end": "2493200"
  },
  {
    "text": "one ever thought about it and rolled it into this service and what your you get",
    "start": "2493200",
    "end": "2499230"
  },
  {
    "text": "by the combination is essentially autorotation for all your credentials right that's powerful things so let's",
    "start": "2499230",
    "end": "2506180"
  },
  {
    "text": "let's look alright so in my handy little test",
    "start": "2506180",
    "end": "2515230"
  },
  {
    "text": "application here great one of the things I've got is essentially just the old way",
    "start": "2515230",
    "end": "2521170"
  },
  {
    "text": "in the new way right I'm probably for times sake not going to go ahead and show you under the hood but the old way",
    "start": "2521170",
    "end": "2527290"
  },
  {
    "text": "I have a database comp file right that's got the clear text password and it's real easy to connect the new way",
    "start": "2527290",
    "end": "2533890"
  },
  {
    "text": "essentially I'm using the boilerplate code that secrets manager gives me when I store the password using this if I",
    "start": "2533890",
    "end": "2542380"
  },
  {
    "text": "let's see so I still got my little tunnel up if I go ahead and I do the",
    "start": "2542380",
    "end": "2548560"
  },
  {
    "text": "operation once a year you know that everybody always dreads and I update the",
    "start": "2548560",
    "end": "2556020"
  },
  {
    "text": "old way password right so now the DBA is",
    "start": "2556020",
    "end": "2562060"
  },
  {
    "text": "happy he goes off he's checked out but clearly in the time until I can plumb",
    "start": "2562060",
    "end": "2568930"
  },
  {
    "text": "that prevent that new credential down to my app I've just caused an outage right I've just broken things so how could we",
    "start": "2568930",
    "end": "2575260"
  },
  {
    "text": "do that better with secrets manager all right let's flip over here and I'm gonna",
    "start": "2575260",
    "end": "2580450"
  },
  {
    "text": "use one little handy script to kind of watch the rotation in the background you'll notice here that the user I'm",
    "start": "2580450",
    "end": "2586900"
  },
  {
    "text": "connecting with this app user 1 and if anybody wants to take note of some really crazy stuff in this password so",
    "start": "2586900",
    "end": "2592780"
  },
  {
    "text": "they feel that I'm not duping them that there it is right and then I'm gonna instantly rotate that secret now it's",
    "start": "2592780",
    "end": "2601270"
  },
  {
    "text": "going to take about 10 seconds or so by and large if the Friday demo gods are",
    "start": "2601270",
    "end": "2606460"
  },
  {
    "text": "working with me and what it's doing in the background is a very elaborate state machine such that it's taking a root",
    "start": "2606460",
    "end": "2612280"
  },
  {
    "text": "password you're gonna see it create an identical at equivalent the cloned user",
    "start": "2612280",
    "end": "2617350"
  },
  {
    "text": "so it just flipped over there that has identical database permissions rotated",
    "start": "2617350",
    "end": "2622510"
  },
  {
    "text": "the password started distributing that one out to my application so obviously",
    "start": "2622510",
    "end": "2627820"
  },
  {
    "text": "not without doing anything on the app side it automatically picks that up",
    "start": "2627820",
    "end": "2632950"
  },
  {
    "text": "automatically starts using it and because those two passwords existed for",
    "start": "2632950",
    "end": "2638200"
  },
  {
    "text": "brief moments of time and peril there was literally no outage right all",
    "start": "2638200",
    "end": "2645220"
  },
  {
    "text": "right so now the code that essentially",
    "start": "2645220",
    "end": "2652240"
  },
  {
    "text": "is behind the scenes there if you want to get started one of my colleagues Jeff put together a cool workshop that again",
    "start": "2652240",
    "end": "2657430"
  },
  {
    "text": "is is up on github but I really would encourage you again as you you think",
    "start": "2657430",
    "end": "2662680"
  },
  {
    "text": "about how to drive secrets and end and long term credentials out of your environment explore around secrets",
    "start": "2662680",
    "end": "2669190"
  },
  {
    "text": "managers it's really powerful okay and we're now gonna be up to our third and",
    "start": "2669190",
    "end": "2675970"
  },
  {
    "text": "final layer of the cake right now I want to define like a cool cheeky quote for this but I couldn't and I said but at",
    "start": "2675970",
    "end": "2683230"
  },
  {
    "text": "the end of the day we do all this work in AWS we provision all this infrastructure and use all these awesome",
    "start": "2683230",
    "end": "2688510"
  },
  {
    "text": "services to provide apps out to our business our customers etc right and at",
    "start": "2688510",
    "end": "2695290"
  },
  {
    "text": "least in my travels this is an area where we've it's it there's a lot of",
    "start": "2695290",
    "end": "2700450"
  },
  {
    "text": "amazing things that we can do in this world that really help us move the bar but we haven't probably talked about",
    "start": "2700450",
    "end": "2707020"
  },
  {
    "start": "2705000",
    "end": "2705000"
  },
  {
    "text": "them as much as we need to here again we've got kind of a break point or two different aspects of the topic that I",
    "start": "2707020",
    "end": "2715120"
  },
  {
    "text": "have you look at there's kind of the heat the human DAP Lakai ssin side right how I as the individual I'm logging in",
    "start": "2715120",
    "end": "2721480"
  },
  {
    "text": "and then in this you know kind of micro services service-oriented architecture review of the world",
    "start": "2721480",
    "end": "2727180"
  },
  {
    "text": "what is very very prevalent is the service to service as well right to",
    "start": "2727180",
    "end": "2732220"
  },
  {
    "text": "where there's no human in the loop it's just an API calling another API now for",
    "start": "2732220",
    "end": "2738550"
  },
  {
    "text": "the humans the Swiss Army knife that we give you is Amazon Cognito okay we'll",
    "start": "2738550",
    "end": "2744520"
  },
  {
    "text": "look at kind of an example here in a second but this is this is a service from AWS that started its life is this",
    "start": "2744520",
    "end": "2750220"
  },
  {
    "text": "mobile Sync widget thing that needed the notion of identity to do it syncing job",
    "start": "2750220",
    "end": "2755380"
  },
  {
    "text": "and then very rapidly figured out that that identity piece was was a really cool little widget right it is it's kind",
    "start": "2755380",
    "end": "2763240"
  },
  {
    "text": "of superpower as it serves is this normalizing layer for your apps your developers don't need to know the GUP of",
    "start": "2763240",
    "end": "2769510"
  },
  {
    "text": "sam'l or oo or how to store passwords for an user securely and safely right but",
    "start": "2769510",
    "end": "2776509"
  },
  {
    "text": "regardless of which types of identities you bring in it normalizes all of them so your new developers can operate on a",
    "start": "2776509",
    "end": "2783619"
  },
  {
    "text": "standard set of tokens that they can use to access the the API is you build to",
    "start": "2783619",
    "end": "2788839"
  },
  {
    "text": "support the application or AWS API and it also has really clean integration",
    "start": "2788839",
    "end": "2795140"
  },
  {
    "text": "with some adjacent services right if you want to authenticate your users with cognitive the application and just be",
    "start": "2795140",
    "end": "2801349"
  },
  {
    "text": "able to pass that down as authorization of the API is you build behind API gateway couple check boxes and you're",
    "start": "2801349",
    "end": "2807230"
  },
  {
    "text": "done same thing with alb all right I know the kind of basic flow the way it",
    "start": "2807230",
    "end": "2813049"
  },
  {
    "text": "works is the first step whether that's a web app or mobile app what have you you",
    "start": "2813049",
    "end": "2818960"
  },
  {
    "text": "kind of it used kognito either through the SDK form or just by hitting the raw open ID Connect",
    "start": "2818960",
    "end": "2825920"
  },
  {
    "text": "endpoints you're gonna send an authentication request up to you user pool now the user pool is going to take",
    "start": "2825920",
    "end": "2832910"
  },
  {
    "text": "care of all the ugly identity goop Samuel and open ID Connect and all these wonderful protocols that we know and",
    "start": "2832910",
    "end": "2839150"
  },
  {
    "text": "love rely on all these HTTP redirects and post backs and you know metadata and all this stuff but we're but Cognito is",
    "start": "2839150",
    "end": "2846499"
  },
  {
    "text": "going to abstract that although all the way it's gonna take care of all that and after the user is successfully",
    "start": "2846499",
    "end": "2851989"
  },
  {
    "text": "authenticated and we return an IDP token sam'l assertion Oh IDC ID token what",
    "start": "2851989",
    "end": "2858470"
  },
  {
    "text": "have you back to kognito what it's gonna do is turn around that turn around and again normalize that into a standard set",
    "start": "2858470",
    "end": "2866150"
  },
  {
    "text": "of Cognito what are known as user pool tokens cop tokens and these are just JW",
    "start": "2866150",
    "end": "2871640"
  },
  {
    "text": "TS it's gonna return that back to the application and then if the application",
    "start": "2871640",
    "end": "2878450"
  },
  {
    "text": "needs to access API is again these are your PA api's that you've written to",
    "start": "2878450",
    "end": "2883489"
  },
  {
    "text": "support this app that you might have developed with serverless patterns or or any other tooling in AWS you can simply",
    "start": "2883489",
    "end": "2891680"
  },
  {
    "text": "pass that cup token as the authorization for the user to those to those API now",
    "start": "2891680",
    "end": "2899089"
  },
  {
    "text": "if your application needs to also access AWS services right our API s-- s3",
    "start": "2899089",
    "end": "2906260"
  },
  {
    "text": "DynamoDB etc they're the other half of Cognito in the identity space is known as the identity pool here you can take",
    "start": "2906260",
    "end": "2914270"
  },
  {
    "text": "that user pool token that you already had and flip that around through exchange into the type of credential you",
    "start": "2914270",
    "end": "2920990"
  },
  {
    "text": "need to call an AWS API which is the STS token we return that and then should",
    "start": "2920990",
    "end": "2927500"
  },
  {
    "text": "that same app need to access native AWS services it just simply passes that STS",
    "start": "2927500",
    "end": "2932810"
  },
  {
    "text": "token or technically obviously signs the request right and it's not actually passed okay so if that is a super quick",
    "start": "2932810",
    "end": "2942440"
  },
  {
    "text": "tour and we'll see more on the demo of identity for the apps let's talk a little bit about identity for the",
    "start": "2942440",
    "end": "2948410"
  },
  {
    "text": "machines and again this is where we're up at that application layer but we've got a service it might be a batch job it",
    "start": "2948410",
    "end": "2955670"
  },
  {
    "text": "might be a headless API it might be event-driven computing it can be just about anything historically if we wanted",
    "start": "2955670",
    "end": "2963410"
  },
  {
    "text": "to do that one way or that was a very common way as we would do TLS mutual authentication we'd go through all this",
    "start": "2963410",
    "end": "2970400"
  },
  {
    "text": "laborious pain to fingerprint all these things we'd cut certificates we'd have to plumb the certificates down we'd have",
    "start": "2970400",
    "end": "2976520"
  },
  {
    "text": "to write rules in engine acts or Apache on the other end to say like what what",
    "start": "2976520",
    "end": "2982010"
  },
  {
    "text": "certificates were allowed to call this other API it was very doable and was very powerful but it was a lot of goop",
    "start": "2982010",
    "end": "2988310"
  },
  {
    "text": "and it was a lot of goop that was really hard to get right and a lot of customers that at least the ones I was saying",
    "start": "2988310",
    "end": "2993980"
  },
  {
    "text": "we're often punting on this whole notion of identity in this way and just relying on network controls to tie slate this",
    "start": "2993980",
    "end": "3000670"
  },
  {
    "text": "down so certainly there I think there's been some neat work in the industry as of recent with service meshes and other",
    "start": "3000670",
    "end": "3007840"
  },
  {
    "text": "approaches that are given kind of better ways of doing this but you know this was",
    "start": "3007840",
    "end": "3013180"
  },
  {
    "text": "generally a pretty painful Munt historically now how might you do this",
    "start": "3013180",
    "end": "3018340"
  },
  {
    "start": "3016000",
    "end": "3016000"
  },
  {
    "text": "differently or better in AWS so if you're if you've got api's and on all of",
    "start": "3018340",
    "end": "3023560"
  },
  {
    "text": "your components purely within the AWS world you can use the combination of I",
    "start": "3023560",
    "end": "3029680"
  },
  {
    "text": "am based authentication and API gateway so the story starts like",
    "start": "3029680",
    "end": "3035520"
  },
  {
    "text": "we've seen a couple times throughout the day where we attach a role to our calling service and we give that role",
    "start": "3035520",
    "end": "3042059"
  },
  {
    "text": "permissions to invoke an API on the other end I then just need to configure",
    "start": "3042059",
    "end": "3047280"
  },
  {
    "text": "API gateway for I am authentication a little checkbox and then attach some",
    "start": "3047280",
    "end": "3052890"
  },
  {
    "text": "permissions I can attach permissions either to the principal calling if if",
    "start": "3052890",
    "end": "3058260"
  },
  {
    "text": "everything is within one accounts or I can use a resource based policy and attach permissions to the API if I want",
    "start": "3058260",
    "end": "3065730"
  },
  {
    "text": "to do this across account and then when the service actually wants to call it just sig me for signs using some pretty",
    "start": "3065730",
    "end": "3073650"
  },
  {
    "text": "standard AWS to link and code samples it signs the requests and AWS takes care of",
    "start": "3073650",
    "end": "3079020"
  },
  {
    "text": "all your authentication authorization by the time the call gets to the backend you know who it was but you don't need",
    "start": "3079020",
    "end": "3085470"
  },
  {
    "text": "to do any verification whatsoever right okay the other s and that that's a",
    "start": "3085470",
    "end": "3094410"
  },
  {
    "text": "really powerful option because it takes all that all that you know all of who can call what is codified in I M",
    "start": "3094410",
    "end": "3101579"
  },
  {
    "text": "policies and we take care of all the crew that credential distribution we were already doing that life is life is",
    "start": "3101579",
    "end": "3107940"
  },
  {
    "text": "good right but that does tend to be a solution that's not internet but not",
    "start": "3107940",
    "end": "3113250"
  },
  {
    "text": "everybody can use because it implies that the the API you were that you were calling runs behind AWS API gateway",
    "start": "3113250",
    "end": "3121289"
  },
  {
    "text": "right or Amazon API gateway and in lots of times especially as customers are",
    "start": "3121289",
    "end": "3126539"
  },
  {
    "text": "moving you might be calling api's on Prem you might be calling api's in other places on the broader Internet so on and",
    "start": "3126539",
    "end": "3133230"
  },
  {
    "text": "so forth the other use or the other way to kind of crack this nut right is you",
    "start": "3133230",
    "end": "3138839"
  },
  {
    "text": "use the client credentials flow this is a standard OAuth flow that kognito supports in this case what we're gonna",
    "start": "3138839",
    "end": "3146369"
  },
  {
    "text": "do is we're gonna retrieve a client ID and client secret using another a to BS primitive in this case something like",
    "start": "3146369",
    "end": "3152700"
  },
  {
    "text": "Systems Manager parameter store and we're going to go down to kognito and again it's an open ID connect provider",
    "start": "3152700",
    "end": "3159900"
  },
  {
    "text": "right we're gonna execute the client credentials flow we're gonna get back that",
    "start": "3159900",
    "end": "3164920"
  },
  {
    "text": "touken and we're in a do standard bearer token authorization over to the API then",
    "start": "3164920",
    "end": "3170530"
  },
  {
    "text": "a really nice thing here is this is exactly how we authenticated the humans to those same API as before if you're",
    "start": "3170530",
    "end": "3177730"
  },
  {
    "text": "using API gateway it's a couple clicks if you're not using API gateway it's very straight forward token verification",
    "start": "3177730",
    "end": "3184360"
  },
  {
    "text": "right it's again a very familiar model to developer and the only kind of twist",
    "start": "3184360",
    "end": "3190750"
  },
  {
    "text": "here is essentially that you're gonna need to use the primitives we give you things like Systems Manager to be able",
    "start": "3190750",
    "end": "3196510"
  },
  {
    "text": "to distribute those client ID and client secrets down your apps so the interest",
    "start": "3196510",
    "end": "3203830"
  },
  {
    "text": "of time I'm actually going to combine I did this the other day I'm going to combine that this demo with the last one",
    "start": "3203830",
    "end": "3209610"
  },
  {
    "text": "and so we're gonna skip forward but before I do a couple further you know again a couple further places to dive",
    "start": "3209610",
    "end": "3216400"
  },
  {
    "text": "further in and explore the one there on the left is a very hands-on workshop that some of our solution architects put",
    "start": "3216400",
    "end": "3223060"
  },
  {
    "text": "together that that drives through great uses of kognito in all these various patterns excuse me the first one on the",
    "start": "3223060",
    "end": "3230560"
  },
  {
    "text": "left is a session they did last year 60 minutes just on that the one on the right is that what does that hands-on",
    "start": "3230560",
    "end": "3236560"
  },
  {
    "text": "exercise okay so now at the beginning of the talk I baited you a little bit with that I was",
    "start": "3236560",
    "end": "3243760"
  },
  {
    "text": "going to take some of these concepts joined them together and see how we could create something more powerful out",
    "start": "3243760",
    "end": "3249580"
  },
  {
    "text": "of them individually okay so well I think the you know the ability to do I",
    "start": "3249580",
    "end": "3257530"
  },
  {
    "text": "am based authentication to infrastructure is a really powerful pattern we always want to be mindful to",
    "start": "3257530",
    "end": "3264490"
  },
  {
    "text": "drive persistence out of our environments right like I shouldn't I think it's it's a good goal to strive to",
    "start": "3264490",
    "end": "3270190"
  },
  {
    "text": "such that I should always be authorized to connect to that given ec2 instance",
    "start": "3270190",
    "end": "3275350"
  },
  {
    "text": "but maybe I just want to put just enough of a hiccup in the road to where it's more of a break glass separation and",
    "start": "3275350",
    "end": "3281890"
  },
  {
    "text": "less of something I can do at any point because I'm authorized so let's see how we can combine everything we've done",
    "start": "3281890",
    "end": "3288340"
  },
  {
    "text": "today to achieve something like that",
    "start": "3288340",
    "end": "3292860"
  },
  {
    "text": "computer want us to sleep again here",
    "start": "3293930",
    "end": "3297880"
  },
  {
    "text": "okay okay so the first thing I'm going",
    "start": "3305980",
    "end": "3312380"
  },
  {
    "text": "to do in my application here is I'm going to go ahead and log in under the",
    "start": "3312380",
    "end": "3318410"
  },
  {
    "text": "hood I've integrated kognito with this application and I've chosen to support two different types of identities the",
    "start": "3318410",
    "end": "3325400"
  },
  {
    "text": "one on the right would be a native identity like an identity that exists incognito but I'm gonna connect through",
    "start": "3325400",
    "end": "3331730"
  },
  {
    "text": "here to my sam'l IDP and I'm gonna log",
    "start": "3331730",
    "end": "3338960"
  },
  {
    "text": "in right and this again kognito is doing all the crazy post bacc redirect stuff and lands me back in my application now",
    "start": "3338960",
    "end": "3346250"
  },
  {
    "text": "what the identity provider did in this particular case and we're gonna see if",
    "start": "3346250",
    "end": "3352040"
  },
  {
    "text": "we're gonna grab my ID token here just just to show ya and I'm gonna use this",
    "start": "3352040",
    "end": "3360380"
  },
  {
    "text": "handy little website to explore that a bit the identity provider let's see if",
    "start": "3360380",
    "end": "3368030"
  },
  {
    "text": "we can properly find it provided B with",
    "start": "3368030",
    "end": "3374390"
  },
  {
    "text": "a list of ec2 operator groups right this is information came from the identity",
    "start": "3374390",
    "end": "3380690"
  },
  {
    "text": "provider and I use a pattern here that's similar to the way we typically do some of the access management for AWS I did",
    "start": "3380690",
    "end": "3387530"
  },
  {
    "text": "like ec2 operator underscore account number underscore tag group right and",
    "start": "3387530",
    "end": "3392780"
  },
  {
    "text": "this is the identity provider saying you I quit I'm allowed to manage these types of",
    "start": "3392780",
    "end": "3398720"
  },
  {
    "text": "instances okay so now before I I kind of do so let's switch out the local",
    "start": "3398720",
    "end": "3407450"
  },
  {
    "text": "identity that I've been using to this point on my local machine and let's go",
    "start": "3407450",
    "end": "3413210"
  },
  {
    "text": "in instead of my bounded developer I'm going to choose a read-only user in that",
    "start": "3413210",
    "end": "3418520"
  },
  {
    "text": "same account I'm going to list my instances",
    "start": "3418520",
    "end": "3423800"
  },
  {
    "text": "all right and I'm gonna show you just that I clearly cannot by default using",
    "start": "3423800",
    "end": "3430350"
  },
  {
    "text": "this credential connect to that one that I showed before right so I've taken away the persistent ability for me to connect",
    "start": "3430350",
    "end": "3437730"
  },
  {
    "text": "to that the identity provider said that these were the instances I was allowed",
    "start": "3437730",
    "end": "3443160"
  },
  {
    "text": "to connect to and then and I'll show you",
    "start": "3443160",
    "end": "3448290"
  },
  {
    "text": "kind of the the how this looks architectural II in a second but what I've then as the story goes now",
    "start": "3448290",
    "end": "3455370"
  },
  {
    "text": "something breaks the operator needs to get to that instance they don't have persistent access to they come to the",
    "start": "3455370",
    "end": "3461100"
  },
  {
    "text": "app they login the identity provider says what instances they're allowed to connect to they hit the one they're",
    "start": "3461100",
    "end": "3467670"
  },
  {
    "text": "interested in it gives them a time bound token 15 minute long token the scoped",
    "start": "3467670",
    "end": "3474840"
  },
  {
    "text": "exactly to the instance they want to connect to it gives them easy ways to drop that into their shell and it gives",
    "start": "3474840",
    "end": "3481380"
  },
  {
    "text": "them a nice handy cheat sheet on how to connect so literally with almost no",
    "start": "3481380",
    "end": "3487440"
  },
  {
    "text": "speed bump I took the same notion of authorization right and I move that upstream to the identity provider and",
    "start": "3487440",
    "end": "3494040"
  },
  {
    "text": "gave the user the same way that to achieve the same functional thing connecting that instance but I just put",
    "start": "3494040",
    "end": "3500550"
  },
  {
    "text": "that little bit of friction in and let's let's flip back over and we'll see why that's powerful I am",
    "start": "3500550",
    "end": "3505770"
  },
  {
    "start": "3505000",
    "end": "3505000"
  },
  {
    "text": "so here we are it's go time right I want to connect to my failing machine I go to",
    "start": "3505770",
    "end": "3511290"
  },
  {
    "text": "my break glass portal that is authenticated and authorized by Cognito goes over to the corporate identity",
    "start": "3511290",
    "end": "3517980"
  },
  {
    "text": "provider gets that list of app accounts and tag groups that I was that I'm",
    "start": "3517980",
    "end": "3524220"
  },
  {
    "text": "allowed to manage and it's gonna return that information encoded in that token",
    "start": "3524220",
    "end": "3530910"
  },
  {
    "text": "that I showed you back to that front-end application I then built a what would",
    "start": "3530910",
    "end": "3537420"
  },
  {
    "text": "you do again we kind of talked about it in the beginning of token custom broker I built some notion of a server list",
    "start": "3537420",
    "end": "3543690"
  },
  {
    "text": "custom broker that has two API methis one is list my instances right where I",
    "start": "3543690",
    "end": "3548880"
  },
  {
    "text": "pass that kognito user pool token with the claims I use some s3 API sources",
    "start": "3548880",
    "end": "3554820"
  },
  {
    "text": "excuse me some ec2 api's to understand the instances and I get back that list and then the next one is",
    "start": "3554820",
    "end": "3561269"
  },
  {
    "text": "I say which instance I'm I'm interested in connecting to write and then that really neat thing happens and this is",
    "start": "3561269",
    "end": "3567450"
  },
  {
    "text": "the special sauce is I can send notifications at this point I could implement two-man rule I could implement",
    "start": "3567450",
    "end": "3574289"
  },
  {
    "text": "a cool-down period because I've put just that little bit of hook hiccup in there I can do all sorts of telemetry",
    "start": "3574289",
    "end": "3580469"
  },
  {
    "text": "instrumentation business rules etc but once those all pass through I then obviously just go to STS grab that",
    "start": "3580469",
    "end": "3588089"
  },
  {
    "text": "temporary token again it was uniquely scoped to the instance I wanted to connect to and it was time bound and I",
    "start": "3588089",
    "end": "3594749"
  },
  {
    "text": "returned that back to the user and then they were able to connect just like they would before and now you might be saying",
    "start": "3594749",
    "end": "3603119"
  },
  {
    "text": "well that seems like super complicated that was a hundred and for the back end of that was a hundred and forty lines of",
    "start": "3603119",
    "end": "3608819"
  },
  {
    "text": "code now as a little liberal I I didn't count whitespace and I didn't count my comments and if you haven't played with",
    "start": "3608819",
    "end": "3614700"
  },
  {
    "text": "it before the chalice Python framework is an awesome way to build your first API I highly encourage you to check it",
    "start": "3614700",
    "end": "3620489"
  },
  {
    "text": "out but these are a very approachable things and and I hope to get a blog out for this very recently that'll put the",
    "start": "3620489",
    "end": "3626910"
  },
  {
    "text": "code in your hands more directly so now that to me is the best cake of all right",
    "start": "3626910",
    "end": "3633599"
  },
  {
    "text": "my wife happens to be a first and foremost an awesome engineer but she's",
    "start": "3633599",
    "end": "3638940"
  },
  {
    "text": "awesome and also an awesome cook this is her icebox mocha cake which is a recipe she did grab from the internet I",
    "start": "3638940",
    "end": "3645809"
  },
  {
    "text": "encourage you to look at it too but this is one of those great cakes right all the flavors meld together it's super",
    "start": "3645809",
    "end": "3652170"
  },
  {
    "text": "delicious and if nothing else on your way home check that out but but it is to me that pattern is is",
    "start": "3652170",
    "end": "3658949"
  },
  {
    "text": "really yeah that this yeah I'm gonna it's",
    "start": "3658949",
    "end": "3664229"
  },
  {
    "text": "Friday I'm stumbled over my worries uh so with that thank you I hope you guys had an awesome week I appreciate you coming by",
    "start": "3664229",
    "end": "3671730"
  },
  {
    "text": "yeah",
    "start": "3671730",
    "end": "3673910"
  }
]