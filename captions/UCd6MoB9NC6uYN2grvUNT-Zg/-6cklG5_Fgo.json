[
  {
    "text": "hello my name is Jason do Issa and the AWS solution architect and we're all here for a case study on how mobile",
    "start": "30",
    "end": "6629"
  },
  {
    "text": "device service company assure you on our architected it's application on AWS edge for speed and security that was the",
    "start": "6629",
    "end": "13679"
  },
  {
    "text": "short title you shoulda seen the original one it's longer so I'd like to introduce Jabez Jabez works for sheree",
    "start": "13679",
    "end": "19859"
  },
  {
    "text": "on he's a cloud security architect I've worked with him for a couple years on someone's use case so he's got a lot of",
    "start": "19859",
    "end": "25380"
  },
  {
    "text": "great information to share with us on how they've architected a solution and he'll even give you a demo of how it works and then we'll hang around for Q&A",
    "start": "25380",
    "end": "32369"
  },
  {
    "text": "afterwards Simba has questions we'll be up here towards the front to my right of the stage be happy to answer any",
    "start": "32369",
    "end": "39120"
  },
  {
    "text": "questions about assurance use case or any AWS questions related to it all right Thank You Jabez thanks Jason I",
    "start": "39120",
    "end": "45870"
  },
  {
    "text": "appreciate you joining us for this session let's get started",
    "start": "45870",
    "end": "51239"
  },
  {
    "text": "so Cherie on as some of you may know is in the business of helping technology",
    "start": "51239",
    "end": "56879"
  },
  {
    "text": "that we have become integral part of now technology has become so much part of",
    "start": "56879",
    "end": "61890"
  },
  {
    "text": "our lives that our phones laptops tablets Assyrian is in the business of",
    "start": "61890",
    "end": "67229"
  },
  {
    "text": "helping people make sure that they stay connected they stay online we have over three hundred million customers across",
    "start": "67229",
    "end": "72990"
  },
  {
    "text": "the globe and we ensure that whether it's your cell phones or tablets or",
    "start": "72990",
    "end": "80009"
  },
  {
    "text": "laptops we ensure that you are protected and connected and also we do is by",
    "start": "80009",
    "end": "85830"
  },
  {
    "text": "device protection making sure that your devices in the event of a break or any",
    "start": "85830",
    "end": "91680"
  },
  {
    "text": "issues with the device or tech support in the area of making sure that you get the best and most out of your devices",
    "start": "91680",
    "end": "97950"
  },
  {
    "text": "and also in the area of retail you know where whether it's in your washing machine or things like that we also make",
    "start": "97950",
    "end": "104369"
  },
  {
    "text": "sure that it's covered and today's agenda we're going to be talking about five main topics we're going to be",
    "start": "104369",
    "end": "110970"
  },
  {
    "text": "talking about a layered metal methodology approach and you see in a little bit what that is and some of the",
    "start": "110970",
    "end": "117479"
  },
  {
    "text": "reasons why we went all in AWS edge and the ways that we implemented some of the ways that Amazon allows us to use their",
    "start": "117479",
    "end": "126119"
  },
  {
    "text": "services and also we'll have a quite a little bit of a demo of some of the implementation patterns",
    "start": "126119",
    "end": "133170"
  },
  {
    "text": "then we'll go into the patterns themselves and then some of the do's and don'ts and then as Jason mentioned if",
    "start": "133170",
    "end": "138930"
  },
  {
    "text": "you have any questions afterwards definitely feel free to stop stop by just to get started you know we'll be",
    "start": "138930",
    "end": "145950"
  },
  {
    "text": "covering a lot of these services some of them are CloudFront which would be a majority of our discussions we'll do a",
    "start": "145950",
    "end": "152910"
  },
  {
    "text": "lot of lambda at the edge you know there's a lot of things that we've done with lambda the edge in dealing with how",
    "start": "152910",
    "end": "158610"
  },
  {
    "text": "do we do routing how do we do Bluegreen how do we do a and B testing and in that",
    "start": "158610",
    "end": "164489"
  },
  {
    "text": "sort and also we'll deal with how to deal with hybrid type environments with on-premises dependencies and also doing",
    "start": "164489",
    "end": "173760"
  },
  {
    "text": "some information about API gateway and leveraging route 53 for some of the workloads when we talk about layered",
    "start": "173760",
    "end": "181380"
  },
  {
    "text": "methodology there's three different layers that I would like to cover and when we think about from a network layer",
    "start": "181380",
    "end": "188120"
  },
  {
    "text": "we think about all the different services there amazon offers whether it's your CloudFront router three load",
    "start": "188120",
    "end": "193380"
  },
  {
    "text": "balancers and it mainly deals you know from a deployment perspective a lot of",
    "start": "193380",
    "end": "198390"
  },
  {
    "text": "times people are looking at from a network layer you know they're thinking about how does my traffic get in how",
    "start": "198390",
    "end": "203700"
  },
  {
    "text": "does my traffic get out what are my dependencies when I'm dealing with hybrid environments what are some things",
    "start": "203700",
    "end": "209760"
  },
  {
    "text": "that I need to consider when I'm dealing with whether it's a VPN or Direct Connect and that's our network layer",
    "start": "209760",
    "end": "216209"
  },
  {
    "text": "then you think about the content layer where it's more from a business perspective faster time-to-market how",
    "start": "216209",
    "end": "223140"
  },
  {
    "text": "can I get my products in you know in the market and how can i deploy the content that I need for my customers and also",
    "start": "223140",
    "end": "229530"
  },
  {
    "text": "dealing with things like Bluegreen deployments a and B type deployments and",
    "start": "229530",
    "end": "234780"
  },
  {
    "text": "also how do I do dynamic queries you know how do I manage that and of course the final one which is very important as",
    "start": "234780",
    "end": "241380"
  },
  {
    "text": "a security layer on the security aspects of it we have inherent built-in capabilities like DDoS but also",
    "start": "241380",
    "end": "248069"
  },
  {
    "text": "leveraging waffe and some of the other features end to end encryption dealing",
    "start": "248069",
    "end": "253230"
  },
  {
    "text": "with also regulatory requirements you know with oshri on being global we have a lot of regulatory requirements when we",
    "start": "253230",
    "end": "259380"
  },
  {
    "text": "deal with data and we'll talk a little bit about you know how we helped accomplish some of that",
    "start": "259380",
    "end": "266300"
  },
  {
    "text": "from a network layer and in a lot of this has a lot of details on and I'm going to touch on a few of the points on",
    "start": "266300",
    "end": "272240"
  },
  {
    "text": "these from a network layer some of the things that we leveraged where from an",
    "start": "272240",
    "end": "277610"
  },
  {
    "text": "on-premises perspective using the identity provider that we already had and also from using elastic network",
    "start": "277610",
    "end": "284960"
  },
  {
    "text": "interfaces for services that had dependency on premises so on premises",
    "start": "284960",
    "end": "290870"
  },
  {
    "text": "you know as you know there are a lot of times the firewall rules and things are very tightly coupled with the no static",
    "start": "290870",
    "end": "296870"
  },
  {
    "text": "type rules and whenever you're dealing with cloud applications you have to deal with services that are dynamically",
    "start": "296870",
    "end": "302870"
  },
  {
    "text": "changing and a lot of times it it makes it easier when you have a dependency to attach me and I to the service and be",
    "start": "302870",
    "end": "310220"
  },
  {
    "text": "able to open that firewalls so you don't lose that and also from a a and B versus",
    "start": "310220",
    "end": "316250"
  },
  {
    "text": "blue/green deployments perspective we dealt a lot with from a blue-green is multiple stacks where you are having",
    "start": "316250",
    "end": "322009"
  },
  {
    "text": "multiple origins that you're deploying it to versus a and B on the same stack you're having different versions that",
    "start": "322009",
    "end": "327620"
  },
  {
    "text": "you're deploying your services to and on a canary deployments type scenarios a",
    "start": "327620",
    "end": "333740"
  },
  {
    "text": "lot of times it's good to leave like some traffic that's permanently getting",
    "start": "333740",
    "end": "338750"
  },
  {
    "text": "5% of your traffic and you know servicing the customers ensure there's",
    "start": "338750",
    "end": "344060"
  },
  {
    "text": "no errors when you are you know when you're taking new workloads and on the",
    "start": "344060",
    "end": "350409"
  },
  {
    "text": "content layer there's a lot of importance given to end to end you know",
    "start": "350409",
    "end": "356479"
  },
  {
    "text": "ensuring that there's n2 and TLS on all the content right when the time you enter in to the time you are reaching to",
    "start": "356479",
    "end": "362719"
  },
  {
    "text": "your back-end services ensuring that whether it's your certificates or whether it's reaching to your database",
    "start": "362719",
    "end": "368180"
  },
  {
    "text": "you know you have end-to-end SSL control and also you know we had some challenges",
    "start": "368180",
    "end": "374599"
  },
  {
    "text": "with WordPress when dealing with cloud front where we had to ensure that there some of the headers were being forwarded",
    "start": "374599",
    "end": "381289"
  },
  {
    "text": "so that what press is able to accept that because WordPress has some dependencies on what you know request",
    "start": "381289",
    "end": "387500"
  },
  {
    "text": "the traffic from from an external deployment perspective and in and also",
    "start": "387500",
    "end": "393469"
  },
  {
    "text": "cache invalidation it's important that you know you don't just invalidate cache because it",
    "start": "393469",
    "end": "399449"
  },
  {
    "text": "so you know on a single file level you have to make sure that you invalidate cash on a global like a directory level",
    "start": "399449",
    "end": "405509"
  },
  {
    "text": "so if you have some more short little caches you could have it segregated into its own directory and some more",
    "start": "405509",
    "end": "411330"
  },
  {
    "text": "long-lived caches you could have its own directory that way you're not paying for cost you know because cache can be quite expensive and on the security layer you",
    "start": "411330",
    "end": "420270"
  },
  {
    "text": "know we we followed a multi-layer approach we went with geo restriction for countries so when we had workloads",
    "start": "420270",
    "end": "427289"
  },
  {
    "text": "that are specifically for the US we had a you know we had restriction on the cloud front layer where we have a geo",
    "start": "427289",
    "end": "433800"
  },
  {
    "text": "restriction on the current on the on the country level and also where we could when we are dealing with partners where",
    "start": "433800",
    "end": "440129"
  },
  {
    "text": "we have IP restrictions so when we have a whaff attached to it you could say okay these partners are going to be",
    "start": "440129",
    "end": "445650"
  },
  {
    "text": "using these IPS reaching these endpoints so we had those type of IP restrictions",
    "start": "445650",
    "end": "450899"
  },
  {
    "text": "on the raft level and also we we did some work with sign cookies and we'll",
    "start": "450899",
    "end": "455939"
  },
  {
    "text": "talk a little bit about that in the next slide and also from an IM policy",
    "start": "455939",
    "end": "461039"
  },
  {
    "text": "perspective ensure that you have a least privileged policy for any of the things that you do whether it's your servers",
    "start": "461039",
    "end": "467249"
  },
  {
    "text": "that are reaching you know to a back-end application or whether it's your whether",
    "start": "467249",
    "end": "472860"
  },
  {
    "text": "it's your cloud front that's trying to access the system or access an origin that's there and on the regulatory side",
    "start": "472860",
    "end": "481469"
  },
  {
    "text": "one of the things that we did we deal heavily with PCI and in that sense we",
    "start": "481469",
    "end": "487050"
  },
  {
    "text": "ensured that we lock down an environment and we're in the process of working through that where we have an isolated",
    "start": "487050",
    "end": "492810"
  },
  {
    "text": "account which is only allowed to use PCI approved services and also making sure",
    "start": "492810",
    "end": "498209"
  },
  {
    "text": "that all the logs are centrally managed in a separate account making sure our kms is using customer managed keys and",
    "start": "498209",
    "end": "505139"
  },
  {
    "text": "those kind of restrictions we have specifically and also it helps us to reduce a compliance scope because a lot",
    "start": "505139",
    "end": "510990"
  },
  {
    "text": "of times when you deal with PCI when you start attaching environments to it then your scope increases you know when you",
    "start": "510990",
    "end": "516000"
  },
  {
    "text": "have an environment that's a PCI environment and you know you're attaching to another environment now that becomes into part of the PCI scope",
    "start": "516000",
    "end": "522060"
  },
  {
    "text": "and for for us to isolate the account completely that doesn't have any data",
    "start": "522060",
    "end": "527459"
  },
  {
    "text": "center dependency whether Direct Connect or VPN it allows us to reduce the scope and also be able to produce the",
    "start": "527459",
    "end": "533310"
  },
  {
    "text": "humans and Amazon provides an Amazon already has a lot of compliance documents like your PCI reports or",
    "start": "533310",
    "end": "538950"
  },
  {
    "text": "software reports and a lot of times it's helpful to take that report and give it to our auditors and to our legal team to",
    "start": "538950",
    "end": "544529"
  },
  {
    "text": "help leverage some of those requirements that we have and then on any sensitive",
    "start": "544529",
    "end": "550320"
  },
  {
    "text": "forms like you're taking your critical information or things like that disabling cashing in on those things and",
    "start": "550320",
    "end": "555600"
  },
  {
    "text": "also for anything to do with from a cloud front side making sure that those",
    "start": "555600",
    "end": "561810"
  },
  {
    "text": "who are authorized to access the content when they come through a cloud front they get you know they have signed cookies that restricts them from being",
    "start": "561810",
    "end": "569100"
  },
  {
    "text": "able to access it outside of the approved path now when we started",
    "start": "569100",
    "end": "576089"
  },
  {
    "text": "dealing with you know with Amazon at the from an edge perspective what we had",
    "start": "576089",
    "end": "581970"
  },
  {
    "text": "four core focus areas right so when I mean by Amazon all in AWS edge from",
    "start": "581970",
    "end": "588180"
  },
  {
    "text": "assurance side what would we look for and why did we do that right so the first one was content delivery you know",
    "start": "588180",
    "end": "594630"
  },
  {
    "text": "we had a lot of content that we had that was a you know sourced in-house or in the process of being deployed in",
    "start": "594630",
    "end": "601350"
  },
  {
    "text": "different areas and we wanted to make sure we had a centralized platform from a content delivery perspective which",
    "start": "601350",
    "end": "607140"
  },
  {
    "text": "allowed us to also to make sure that we had good edge caching Amazon now has",
    "start": "607140",
    "end": "612540"
  },
  {
    "text": "over 107 pops which allows us to do edge caching and much better reach across the",
    "start": "612540",
    "end": "617940"
  },
  {
    "text": "globe that was one of our main requirements the second one was endpoint protection right so we have multiple",
    "start": "617940",
    "end": "624990"
  },
  {
    "text": "origins that we have that service some sort of website or some sort of a forum or some sort of some sort of a Content",
    "start": "624990",
    "end": "631770"
  },
  {
    "text": "that's being displayed outside we wanted to make sure that from edge protection perspective they have good coverage you",
    "start": "631770",
    "end": "637560"
  },
  {
    "text": "know whether it's an Origin access identity protection or making sure that there's nobody can get to the edge to",
    "start": "637560",
    "end": "643020"
  },
  {
    "text": "the origin directly they have to go through clout front some of that we want to make sure that we have the endpoint",
    "start": "643020",
    "end": "648780"
  },
  {
    "text": "protection that we have DDoS protection and laughs and some of that areas and also we were looking heavily into",
    "start": "648780",
    "end": "656160"
  },
  {
    "text": "service with lambdas we already had a lot of footprint in two lambdas we had a lot of footprint to other service",
    "start": "656160",
    "end": "662490"
  },
  {
    "text": "architectures in Amazon and just to really be able to take that and expose it to the Internet we wanted",
    "start": "662490",
    "end": "669240"
  },
  {
    "text": "to make sure that we have a good platform where we can take that serverless architecture and the best",
    "start": "669240",
    "end": "674670"
  },
  {
    "text": "practice that we've already done and be able to expose it to the Internet and finally we have wanted to be too",
    "start": "674670",
    "end": "679950"
  },
  {
    "text": "cost-effective right a lot of times when you are dealing with when you're dealing with different services CDN a lot of",
    "start": "679950",
    "end": "686580"
  },
  {
    "text": "times we go into a multi vendor approach you jump from one vendor and then you have some processing being done there",
    "start": "686580",
    "end": "692190"
  },
  {
    "text": "and then you jump to another vendor or you come to the data center and you have your own firewalls and different things",
    "start": "692190",
    "end": "697290"
  },
  {
    "text": "a lot of times you can get pretty expensive you know now you have multi multiple vendors you're dealing with",
    "start": "697290",
    "end": "702570"
  },
  {
    "text": "you're dealing with multiple you know challenges from transferring the data and an inspection and things like that",
    "start": "702570",
    "end": "708630"
  },
  {
    "text": "it becomes pretty expensive at that point so one of the things we want to ensure was we want to be native to",
    "start": "708630",
    "end": "714660"
  },
  {
    "text": "Amazon so that we can be cost effective and also make and we can leverage the services that amazon offers and with",
    "start": "714660",
    "end": "721040"
  },
  {
    "text": "shield advanced we also have building protections so if you have a DDoS attack and there's a huge spike on your",
    "start": "721040",
    "end": "727620"
  },
  {
    "text": "instances and you're scaling up to meet that load you also have that protection where that will be credited to your",
    "start": "727620",
    "end": "734100"
  },
  {
    "text": "account so we had some of those advantages you know with Raph and with in with she'll advanced and you know one",
    "start": "734100",
    "end": "742890"
  },
  {
    "text": "pretty quick we realize you know all in AWS edge it's a team effort right so we have a multi-step process which I'll go",
    "start": "742890",
    "end": "750570"
  },
  {
    "text": "through some of them pretty quick you know this is gonna run through this so we had a you know multi-step process",
    "start": "750570",
    "end": "757620"
  },
  {
    "text": "that we had and it was a team effort between security operations monitoring already in compliance there's just a",
    "start": "757620",
    "end": "764130"
  },
  {
    "text": "host of team right so it's not a okay one team comes and says hey we can do this this is how we want to do it then",
    "start": "764130",
    "end": "770040"
  },
  {
    "text": "kind of throw it over the fence right so we had to do the due diligence to make sure that you know every - everybody's",
    "start": "770040",
    "end": "776040"
  },
  {
    "text": "comfortable where we're going whether it was security whether it was people who are deploying the code whether it's",
    "start": "776040",
    "end": "782100"
  },
  {
    "text": "operations team whether it's the jisub or monitoring team we have to make sure we do that and I want to touch on a few",
    "start": "782100",
    "end": "787560"
  },
  {
    "text": "of them our pre migration strategy consists of what is our time to market you know what is our you know how soon",
    "start": "787560",
    "end": "794010"
  },
  {
    "text": "do we want to deploy it right so if there's a critical application that that needs to be you know that needs to go",
    "start": "794010",
    "end": "800370"
  },
  {
    "text": "and if we're not ready we want to make sure that we take that application give the due diligence to it before we start",
    "start": "800370",
    "end": "805560"
  },
  {
    "text": "using CloudFront and lambda at the edge and other services and other security considerations that we are you know we are to think about and dependencies of",
    "start": "805560",
    "end": "811830"
  },
  {
    "text": "course and cost you know how do we make sure that we're you know we're doing it",
    "start": "811830",
    "end": "817560"
  },
  {
    "text": "as per a being cost effective and then from a deep dive analysis some of the things that which helped us was our",
    "start": "817560",
    "end": "824880"
  },
  {
    "text": "origin requirements you know if we have an origin that's on-premises how do you protect it you know if people have hard-coded their URLs they had bookmark",
    "start": "824880",
    "end": "832140"
  },
  {
    "text": "how do you make sure that you know the the pre historical origins you know or",
    "start": "832140",
    "end": "837330"
  },
  {
    "text": "not you know they're not the people are not getting 404 page not found or things like that right and also our support",
    "start": "837330",
    "end": "843330"
  },
  {
    "text": "impact you know we have a extensive support team we have a G soft team and an escalation point and knock you know",
    "start": "843330",
    "end": "849510"
  },
  {
    "text": "how does it impact the support team when they start moving into Amazon you know now we are talking a lot of them about",
    "start": "849510",
    "end": "854910"
  },
  {
    "text": "server layers you're talking about different types of support models which is a little bit different from on-premises support so how do you manage",
    "start": "854910",
    "end": "861450"
  },
  {
    "text": "that and the and then we when we talk",
    "start": "861450",
    "end": "866520"
  },
  {
    "text": "about roles and responsibilities this is very critical because when we are dealing with you know graph there's a",
    "start": "866520",
    "end": "872610"
  },
  {
    "text": "you know which team does the RAF rules you know we're in the process of working with multiple teams within our Sharia on",
    "start": "872610",
    "end": "877770"
  },
  {
    "text": "making sure you know people have coverage right so who creates of afros and who updates the referrals if there's",
    "start": "877770",
    "end": "883380"
  },
  {
    "text": "a team that's using waffe and then if their application is behaving you know it's not behaving properly then how do",
    "start": "883380",
    "end": "890310"
  },
  {
    "text": "they who they come to you know how do they escalate that and then we also had discussions with the DRT team which is",
    "start": "890310",
    "end": "896610"
  },
  {
    "text": "the amazon's team that you get with shield advanced where they provide you with pcap reports and different things",
    "start": "896610",
    "end": "901980"
  },
  {
    "text": "and if you haven't if you have a DDoS attack and you know those kind of things we have to make sure that okay how do",
    "start": "901980",
    "end": "907770"
  },
  {
    "text": "you escalate to the DRT team if there's a attack on your on your edge and things",
    "start": "907770",
    "end": "912810"
  },
  {
    "text": "like that and the cadence calls that we have on a bite and on a weekly basis with Amazon and then we had external",
    "start": "912810",
    "end": "919560"
  },
  {
    "text": "requirements where it has business priorities license implications if there are things that are in a different",
    "start": "919560",
    "end": "924570"
  },
  {
    "text": "vendor and you are thinking about moving into in a cloud front which one would you take first right so if you have",
    "start": "924570",
    "end": "931079"
  },
  {
    "text": "something coming up in January and start moving that a cloud front then there's a license renewal impact if that",
    "start": "931079",
    "end": "936590"
  },
  {
    "text": "gets delayed then your of course your January deadline is going to get pushed back then which means you have to renew it so those are some other things that",
    "start": "936590",
    "end": "942470"
  },
  {
    "text": "also we looked at and and from an operational perspective you know",
    "start": "942470",
    "end": "948230"
  },
  {
    "text": "creating new laughter also know that there's a training that's involved in that where we have to get you know",
    "start": "948230",
    "end": "953540"
  },
  {
    "text": "people who are doing those bath rules if it's a if it's done differently how do they write the new Averill's when you're",
    "start": "953540",
    "end": "959240"
  },
  {
    "text": "dealing with with Amazon Web and training is pretty critical you know for",
    "start": "959240",
    "end": "965510"
  },
  {
    "text": "any any you know any new deployments where from development to operational",
    "start": "965510",
    "end": "971810"
  },
  {
    "text": "how do you do the handoff when you are you know when you're doing deployments with like blue green or a B how do you",
    "start": "971810",
    "end": "978410"
  },
  {
    "text": "do the training how do you do the pen testing things like that and that was pretty important for us we also created",
    "start": "978410",
    "end": "983960"
  },
  {
    "text": "a documentation we have multiple documentation that we have from when we are leveraging with the architecture",
    "start": "983960",
    "end": "990020"
  },
  {
    "text": "patterns of how people can leverage it if they're using micro services if they're using if they're using other",
    "start": "990020",
    "end": "995300"
  },
  {
    "text": "types of architectures that that can be leveraged with cloud front and the final",
    "start": "995300",
    "end": "1002230"
  },
  {
    "text": "two things are like the migration itself running in parallel doing some suture and I'll talk a little bit about that",
    "start": "1002230",
    "end": "1007690"
  },
  {
    "text": "and you know when we are dealing with implementation patterns and also with the post migration you know the incident",
    "start": "1007690",
    "end": "1013330"
  },
  {
    "text": "responses if there's an attack what happens if there's an escalation what happens if there's a containment that has to happen now how do we do that so",
    "start": "1013330",
    "end": "1022900"
  },
  {
    "text": "this is a typical web architecture implementation and I'm going to walk through some of this and then we'll jump",
    "start": "1022900",
    "end": "1028720"
  },
  {
    "text": "into a demo of different types of you know value that we saw in the way that we did it on the three ones that are",
    "start": "1028720",
    "end": "1034839"
  },
  {
    "text": "mentioned there so you know it's just users coming into CloudFront and on the bottom you have lambda at the",
    "start": "1034840",
    "end": "1041620"
  },
  {
    "text": "edge which is doing a lot of the multipath routing and we're going to go through each of that and the demo we're",
    "start": "1041620",
    "end": "1046900"
  },
  {
    "text": "going to be looking at we have multipath routing a B routing and also the Bluegreen deployments and",
    "start": "1046900",
    "end": "1053940"
  },
  {
    "text": "the and then the s3 bucket and I'll talk a little bit more when we go into each of the scenarios on what each function",
    "start": "1053940",
    "end": "1060100"
  },
  {
    "text": "is and then also the challenge was that you know a lot of",
    "start": "1060100",
    "end": "1065760"
  },
  {
    "text": "times we leveraged for internal services we also leveraged for external services there are some cloud front we leveraged",
    "start": "1065760",
    "end": "1071520"
  },
  {
    "text": "for internal services where we wanted to make sure that internal users are using it and then also for external services",
    "start": "1071520",
    "end": "1077850"
  },
  {
    "text": "where you know if you have a website that one that you wanted for customers you know how do you do that so there's",
    "start": "1077850",
    "end": "1083250"
  },
  {
    "text": "different ways to do it so we'll jump into a demo so one couple of things I",
    "start": "1083250",
    "end": "1089040"
  },
  {
    "text": "want to talk about in this one is the multipath routing use case so one of the",
    "start": "1089040",
    "end": "1094650"
  },
  {
    "text": "things well what we looked at was you know we have dependencies that our traffic is coming into our you know into",
    "start": "1094650",
    "end": "1102030"
  },
  {
    "text": "our data center traditionally then you have some sort of an engine X proxy that has rules that goes between your you",
    "start": "1102030",
    "end": "1110160"
  },
  {
    "text": "know on-premises servers or to a cloud instance or to multiple different locations right some are redirects which",
    "start": "1110160",
    "end": "1117600"
  },
  {
    "text": "are going fully into a new website some are going within the application itself some are those types of you know routing",
    "start": "1117600",
    "end": "1125340"
  },
  {
    "text": "that happens so what we did was we want to abstract that that proxy kind of a",
    "start": "1125340",
    "end": "1130680"
  },
  {
    "text": "rules engine you know externalize it right so if you externalize that now you have a different team that can manage",
    "start": "1130680",
    "end": "1137040"
  },
  {
    "text": "the rules and you don't have to have a lambda deployment every time you are changing the rules right so what we did",
    "start": "1137040",
    "end": "1142710"
  },
  {
    "text": "was we took all the rules and put into an s3 and and when you see the demo",
    "start": "1142710",
    "end": "1149010"
  },
  {
    "text": "it'll you know you'll see a little bit more about that and we had different rules that it follows and then based on",
    "start": "1149010",
    "end": "1154530"
  },
  {
    "text": "that your lambda edge will will act as a reverse proxy so pretty much the rules",
    "start": "1154530",
    "end": "1160170"
  },
  {
    "text": "engine can handle you know whether it's internal whether it's external if is external it'll do your all rewrite and",
    "start": "1160170",
    "end": "1166590"
  },
  {
    "text": "send traffic to that if it's internal it'll just do it within itself let me",
    "start": "1166590",
    "end": "1172620"
  },
  {
    "text": "just switch",
    "start": "1172620",
    "end": "1174950"
  },
  {
    "text": "hi",
    "start": "1182340",
    "end": "1185340"
  },
  {
    "text": "so the so this is just I'm just going to",
    "start": "1189540",
    "end": "1194970"
  },
  {
    "text": "walk through kind of what is set up here on the on the on the multipath routing",
    "start": "1194970",
    "end": "1202020"
  },
  {
    "text": "it's just a you know a simple CloudFront distribution it's got a couple of and it's got a couple of origins you know",
    "start": "1202020",
    "end": "1209130"
  },
  {
    "text": "and then one of them is for you know has an application load balancer which has",
    "start": "1209130",
    "end": "1214460"
  },
  {
    "text": "in a container service it's just a simple vanilla deployment and then the other one has the s3 location and on the",
    "start": "1214460",
    "end": "1222210"
  },
  {
    "text": "s3 side you have multiple different things it's serving let me just pulled",
    "start": "1222210",
    "end": "1230070"
  },
  {
    "text": "it up alright on the s3 side you have",
    "start": "1230070",
    "end": "1238890"
  },
  {
    "text": "you know different locations that is there there's the pages that it's hosting there are index dot HTML and",
    "start": "1238890",
    "end": "1246420"
  },
  {
    "text": "different things and then from the on the cloud front side you also have the",
    "start": "1246420",
    "end": "1252860"
  },
  {
    "text": "you know on the behaviors you also have lamda there's that servicing the main one right and there's two of them and I",
    "start": "1252860",
    "end": "1259290"
  },
  {
    "text": "will talk a little bit about that so you have alarmed at the edge that's also servicing some of the volume and on the",
    "start": "1259290",
    "end": "1265080"
  },
  {
    "text": "and this is the this is you know we have a page called site info JSON what this",
    "start": "1265080",
    "end": "1271470"
  },
  {
    "text": "one is pretty much it's a rules engine right so here you have you know here's a path that when somebody comes in and",
    "start": "1271470",
    "end": "1278670"
  },
  {
    "text": "says I want to reach the route path then it says that okay it's an internal route",
    "start": "1278670",
    "end": "1283800"
  },
  {
    "text": "that's number one and then let me see if I can zoom it a little bit there you go so it's an internal route and then it",
    "start": "1283800",
    "end": "1291690"
  },
  {
    "text": "says that needs to go to index dot HTML right so that's it's just a simple routing or there's a you know another",
    "start": "1291690",
    "end": "1298680"
  },
  {
    "text": "one there's another path that is defined so these are all similar to like a proxy right like in a reverse proxy so this",
    "start": "1298680",
    "end": "1305610"
  },
  {
    "text": "path it says okay this is also internal meaning that it's within the same origin and this needs to go to you know cloud",
    "start": "1305610",
    "end": "1311460"
  },
  {
    "text": "or HTML and then if there's another path which is external and that is controlled",
    "start": "1311460",
    "end": "1317220"
  },
  {
    "text": "by this value with number two which means it's not within the same origin",
    "start": "1317220",
    "end": "1322260"
  },
  {
    "text": "but it's going to go to an external you know URL so now I can take you know whether",
    "start": "1322260",
    "end": "1328679"
  },
  {
    "text": "it's internal routing or I can do a URL rewrite and I don't have to deploy",
    "start": "1328679",
    "end": "1334350"
  },
  {
    "text": "multiple lambdas at this point right now everything is managed by Dan we'll walk through the code as well but I you know",
    "start": "1334350",
    "end": "1340049"
  },
  {
    "text": "I can take this one rules engine and then externalize it the operations team can manage this they all have access to",
    "start": "1340049",
    "end": "1346049"
  },
  {
    "text": "do this they can add new rules they can add new policies you know as new deployments are coming in right and so",
    "start": "1346049",
    "end": "1351720"
  },
  {
    "text": "this is kind of the general you know so",
    "start": "1351720",
    "end": "1356880"
  },
  {
    "text": "these are the different types so you have internal and external so I'm going to just hit some of them and I have some",
    "start": "1356880",
    "end": "1362580"
  },
  {
    "text": "some of them set up here the so when I go to the when I go to the route fault",
    "start": "1362580",
    "end": "1368820"
  },
  {
    "text": "when I go to the root folder it basically at that point it it starts you",
    "start": "1368820",
    "end": "1375570"
  },
  {
    "text": "know it just goes into the it's a sample application right so let me just",
    "start": "1375570",
    "end": "1382820"
  },
  {
    "text": "yeah so it just goes in different when I give that a specific path like we talked about on the top which is the /h path so",
    "start": "1391640",
    "end": "1399170"
  },
  {
    "text": "it goes into the into that reached cloud-hosted page right this is just a simple HTML page that's there and then",
    "start": "1399170",
    "end": "1405230"
  },
  {
    "text": "if you see this this that's really coming from this this section right the cloud arrests AML is actually coming",
    "start": "1405230",
    "end": "1410750"
  },
  {
    "text": "from that section and then it's the same thing with you know when I when I change it to you know when I change it to that",
    "start": "1410750",
    "end": "1420500"
  },
  {
    "text": "you know it's going to go into the maintenance phase right now this one actually it's coming from a different external it's actually rewriting the URL",
    "start": "1420500",
    "end": "1428780"
  },
  {
    "text": "as you can see here and it's being sent to a totally different web site right and and similarly if you see you know",
    "start": "1428780",
    "end": "1437080"
  },
  {
    "text": "some other parts such as like old are HTML it basically will route it based on",
    "start": "1437080",
    "end": "1443960"
  },
  {
    "text": "what the rules are defined there right and this is something like this is",
    "start": "1443960",
    "end": "1450650"
  },
  {
    "text": "actually going to a legacy HTML page so this one byte by by doing this you're",
    "start": "1450650",
    "end": "1456470"
  },
  {
    "text": "really able to abstract away all the different ways that you want lambda to",
    "start": "1456470",
    "end": "1463160"
  },
  {
    "text": "function right it becomes like a reverse proxy so now you can really take this as a separate and everything is controlled",
    "start": "1463160",
    "end": "1468860"
  },
  {
    "text": "by this one file right it's just a silent for a JSON and all of the rules are processed by this and and there's no",
    "start": "1468860",
    "end": "1475429"
  },
  {
    "text": "multiple lambda deployments right and let me just do one more and then we'll",
    "start": "1475429",
    "end": "1484040"
  },
  {
    "text": "jump back into the slide and here if you see the on the alb side it you know once",
    "start": "1484040",
    "end": "1491630"
  },
  {
    "text": "it hits that it goes into the alb into the container and then it you know and at that point it just is all processed",
    "start": "1491630",
    "end": "1496910"
  },
  {
    "text": "within that container right now when we're dealing with with the container there's one other thing that we did was",
    "start": "1496910",
    "end": "1504820"
  },
  {
    "text": "here on on this behavior so the alb",
    "start": "1504820",
    "end": "1511669"
  },
  {
    "text": "itself is actually in this path right so when I said slash lb it's going into that but the web page itself is hosted",
    "start": "1511669",
    "end": "1518600"
  },
  {
    "text": "in the root so instead of being able to look for a directory called slash alb in the root",
    "start": "1518600",
    "end": "1526820"
  },
  {
    "text": "folder we're doing another lambda Thea to actually redirect it to go to the root on the on the container level and",
    "start": "1526820",
    "end": "1533300"
  },
  {
    "text": "I'll show you in the and that when we walk through the code alright so here if",
    "start": "1533300",
    "end": "1545840"
  },
  {
    "text": "you see this it's a little bit small in the in the beginning if you see the in",
    "start": "1545840",
    "end": "1552230"
  },
  {
    "text": "the in the you know what we basically did was on the top layer you'll see that we're making HTTP call and that is",
    "start": "1552230",
    "end": "1560240"
  },
  {
    "text": "basically where your site in for our JSON is coming from right so you know here if you can see this let me see if I",
    "start": "1560240",
    "end": "1567080"
  },
  {
    "text": "can there you go yeah so you know here's here's the initial handler that lambda",
    "start": "1567080",
    "end": "1573020"
  },
  {
    "text": "gets and then it's starting to you know parse the data and then it's making a",
    "start": "1573020",
    "end": "1578570"
  },
  {
    "text": "call you know it gets a set sight value on the you know node so at that point it calls you know it calls this function",
    "start": "1578570",
    "end": "1585470"
  },
  {
    "text": "and it gets the you know the site that JSON file and then it passes it back you",
    "start": "1585470",
    "end": "1592670"
  },
  {
    "text": "know into this you know into this function right at that point here talks about if the picked value is one then",
    "start": "1592670",
    "end": "1600080"
  },
  {
    "text": "it's basically an internal it's a it's an internal loop right you're seeing it here and then if the picked value is two",
    "start": "1600080",
    "end": "1605810"
  },
  {
    "text": "then it's you know it's external loop and then it's going to pass that right so based on once it gets the site in for",
    "start": "1605810",
    "end": "1613130"
  },
  {
    "text": "a JSON and then it processes the request URL and here's you know it's getting the",
    "start": "1613130",
    "end": "1618290"
  },
  {
    "text": "request or URL so basically when when you're hitting the website the request",
    "start": "1618290",
    "end": "1624260"
  },
  {
    "text": "or URI is going to get you know whatever you're going it wanting to go to whether it's a slash or slash index dot slash in",
    "start": "1624260",
    "end": "1632000"
  },
  {
    "text": "a hitch path or the other ones that we saw and at that point it's going to go and check against the you know they're",
    "start": "1632000",
    "end": "1639470"
  },
  {
    "text": "silent for a JSON to say do I have this path that's defined in the side and for",
    "start": "1639470",
    "end": "1645140"
  },
  {
    "text": "a JSON if it is then it's going to say is it internal or external this external is going to do it you all rewrite and",
    "start": "1645140",
    "end": "1650510"
  },
  {
    "text": "it's going to send the traffic if it's internal it's going to continue to press",
    "start": "1650510",
    "end": "1655850"
  },
  {
    "text": "and you know process that traffic as an internal endpoint and then anything else that's not there if it's sent if there's",
    "start": "1655850",
    "end": "1662750"
  },
  {
    "text": "something that's sent then it'll just send it to the other page you know which will be you know page not found or you",
    "start": "1662750",
    "end": "1669200"
  },
  {
    "text": "know the ORS or redirected to the home page you know at that point and you know",
    "start": "1669200",
    "end": "1676250"
  },
  {
    "text": "it's just really just a recap you know what we discussed and then if you see the logs here you know we're here it's",
    "start": "1676250",
    "end": "1682610"
  },
  {
    "text": "basically saying that it's pointing there to the inner slash external path and then at that point it's saying that",
    "start": "1682610",
    "end": "1689390"
  },
  {
    "text": "I'm going to rewrite it and I'm going to send it there you know so uro comes in as /e path and then it basically takes",
    "start": "1689390",
    "end": "1695420"
  },
  {
    "text": "it and then you know sends it into this you know whole new value and sends a 302",
    "start": "1695420",
    "end": "1702820"
  },
  {
    "text": "now this one is the one that we talked about in the alb side on the alb since",
    "start": "1703420",
    "end": "1708590"
  },
  {
    "text": "it's not hosted in a path a specific path within the container with the slash a slash a LP all this one is doing is that once",
    "start": "1708590",
    "end": "1716060"
  },
  {
    "text": "that once the content is sent to the alb behavior at that point lambda edge would",
    "start": "1716060",
    "end": "1722090"
  },
  {
    "text": "take that and then it would basically strip out the first part of it the slash",
    "start": "1722090",
    "end": "1727250"
  },
  {
    "text": "alb and inside of the root directory so now you can basically what he can do is",
    "start": "1727250",
    "end": "1733130"
  },
  {
    "text": "you can take your existing web applications and if you are having a particular path that you wanted to come",
    "start": "1733130",
    "end": "1739310"
  },
  {
    "text": "in the front end and you want to do some manipulation and being able to send it you know to the root directory of the of",
    "start": "1739310",
    "end": "1745910"
  },
  {
    "text": "your origin so this is just a simple script that will just take your you know",
    "start": "1745910",
    "end": "1751070"
  },
  {
    "text": "your long string and then take all all the stuff is just doing a regular expression and stripping that off and",
    "start": "1751070",
    "end": "1756620"
  },
  {
    "text": "then sending it to the origin the second",
    "start": "1756620",
    "end": "1761720"
  },
  {
    "text": "one is the a and B use case this one really is talking about you know the",
    "start": "1761720",
    "end": "1767810"
  },
  {
    "text": "same version or the same origin having multiple versions right so now if you",
    "start": "1767810",
    "end": "1773570"
  },
  {
    "text": "have a deployment where you are deploying a new JPEG file or you're deploying a new you know HTML file for",
    "start": "1773570",
    "end": "1780560"
  },
  {
    "text": "your website and you really want a certain amount of people to hit that version versus the original version that",
    "start": "1780560",
    "end": "1787400"
  },
  {
    "text": "you have right so the some of the things that we saw that is out there or we're in lambda you could",
    "start": "1787400",
    "end": "1793520"
  },
  {
    "text": "give a you know you could make lambda to make a determination based on a math function and then send some traffic to",
    "start": "1793520",
    "end": "1799430"
  },
  {
    "text": "one versus the other one thing what we did was we wanted to abstract that away from lambdas so that again we're not",
    "start": "1799430",
    "end": "1806870"
  },
  {
    "text": "having to deploy multiple times if you're wanting to change the version and make it dynamic so we ended up looking at route 53 right so route 53 has text",
    "start": "1806870",
    "end": "1814280"
  },
  {
    "text": "records so we basically controlled everything using round 53 text records and we have multiple versions deploy to",
    "start": "1814280",
    "end": "1821360"
  },
  {
    "text": "the same origin and the text records will say which version you want to know which you want to show and let me jump",
    "start": "1821360",
    "end": "1828440"
  },
  {
    "text": "into the demo before I go to that alright so you know when we are dealing",
    "start": "1828440",
    "end": "1835070"
  },
  {
    "text": "with a and B routing so the way it's set",
    "start": "1835070",
    "end": "1842000"
  },
  {
    "text": "up here is you know here you have you know s 3 which is hosting that and then",
    "start": "1842000",
    "end": "1848420"
  },
  {
    "text": "the behavior has lambda edge that's you know that's doing all the processing and",
    "start": "1848420",
    "end": "1854950"
  },
  {
    "text": "on the s3 side so here you have a",
    "start": "1854950",
    "end": "1864140"
  },
  {
    "text": "directory which has a and B and it's got a version 1 and version 2 right so basically it's just two files just for",
    "start": "1864140",
    "end": "1870440"
  },
  {
    "text": "the sake of you know for the demo here so there's two files that you know it's got two different versions in the same",
    "start": "1870440",
    "end": "1877070"
  },
  {
    "text": "origin right again we're restricted to the same origin that we are you know focused here and here when we start you",
    "start": "1877070",
    "end": "1885800"
  },
  {
    "text": "know when we start hitting the end point",
    "start": "1885800",
    "end": "1889030"
  },
  {
    "text": "so this one what it does is you know here it's pulling it from the a origin",
    "start": "1898710",
    "end": "1904029"
  },
  {
    "text": "you know and and here what you can see is that you know this actually is coming",
    "start": "1904029",
    "end": "1909190"
  },
  {
    "text": "from that you know from the path but lambda is the one that's making the decision on where to send it right so",
    "start": "1909190",
    "end": "1914799"
  },
  {
    "text": "it's calling route of the three it's trying to find the text record what the text record is and if you look at the",
    "start": "1914799",
    "end": "1919960"
  },
  {
    "text": "text record itself in the round 53 this is this is how it looks like right so",
    "start": "1919960",
    "end": "1926259"
  },
  {
    "text": "you've got two text records that are there one is saying this is the path that I wanted to go I want to go and",
    "start": "1926259",
    "end": "1932320"
  },
  {
    "text": "then the second one is saying is the you know version 2 path and then the B dot B index dot HTML right so now you have",
    "start": "1932320",
    "end": "1938499"
  },
  {
    "text": "text records that are actually servicing which pages to which pages to show now",
    "start": "1938499",
    "end": "1943659"
  },
  {
    "text": "in this example we've obviously hard-coded the index dot HTML as well but in a general scenario you could just",
    "start": "1943659",
    "end": "1950950"
  },
  {
    "text": "take it as a slash and then anything underneath that would be the application itself you know or or if you have a",
    "start": "1950950",
    "end": "1956440"
  },
  {
    "text": "different version that you're deploying it onto the same origin right so that's really the focus on this one so that's where the a and B comes in and and then",
    "start": "1956440",
    "end": "1964480"
  },
  {
    "text": "if we go into you know into this one and say okay I'm gonna make this is zero so",
    "start": "1964480",
    "end": "1978249"
  },
  {
    "text": "right now basically what I've said is that I don't want people to go you know to the version one I want them to go to",
    "start": "1978249",
    "end": "1984190"
  },
  {
    "text": "version two",
    "start": "1984190",
    "end": "1986789"
  },
  {
    "text": "I think it's coming from our cached pages let me see",
    "start": "1999000",
    "end": "2004420"
  },
  {
    "text": "that's great on your demo lesson below the demo let me go back to my let me",
    "start": "2035760",
    "end": "2044370"
  },
  {
    "text": "just check the route 53 make sure it's that's",
    "start": "2044370",
    "end": "2049850"
  },
  {
    "text": "so that's fine I'll just write basically",
    "start": "2058690",
    "end": "2064898"
  },
  {
    "text": "what happens is that the route route three is the one that process it and then you will get a version B let me see",
    "start": "2064899",
    "end": "2070809"
  },
  {
    "text": "if I can these starter",
    "start": "2070809",
    "end": "2077760"
  },
  {
    "text": "yeah there you go so so the version B gets loaded here right so now you can",
    "start": "2084830",
    "end": "2090590"
  },
  {
    "text": "see that the route 53 actually is you know it's not sending any traffic to",
    "start": "2090590",
    "end": "2095929"
  },
  {
    "text": "version a because you know we made it as zero right so anyway you know I had to",
    "start": "2095929",
    "end": "2101660"
  },
  {
    "text": "clear my cache or whatnot so it's it was holding the old page so but now what you can see that some traffic on the",
    "start": "2101660",
    "end": "2107780"
  },
  {
    "text": "internet would be sent to version B based on you know how you're around with reconfigure and the nice thing about",
    "start": "2107780",
    "end": "2113390"
  },
  {
    "text": "this is that now you can really you know control all your traffic routing or or",
    "start": "2113390",
    "end": "2120290"
  },
  {
    "text": "your waiting through route 53 right so now I'm not dependent on deploying lambdas every time I want to change my",
    "start": "2120290",
    "end": "2126350"
  },
  {
    "text": "rate of Records so everything is abstracted away from it again this is all managed through router 3",
    "start": "2126350",
    "end": "2131870"
  },
  {
    "text": "instead of having to do with having to do with you know the actual lambda code itself so just jumping into the code on",
    "start": "2131870",
    "end": "2148280"
  },
  {
    "text": "this one this is pretty much all of the code and this one is you know it's it's the same principle where you're having",
    "start": "2148280",
    "end": "2155180"
  },
  {
    "text": "you know you have the initial handler that's getting the you know that's getting the request or URI and at that",
    "start": "2155180",
    "end": "2161780"
  },
  {
    "text": "point it's calling round 53 function and then the route 53 function gets actually",
    "start": "2161780",
    "end": "2167000"
  },
  {
    "text": "gets the yep so the Alpha T function gets the you know the queries to a B dot",
    "start": "2167000",
    "end": "2175520"
  },
  {
    "text": "logic start link in this example and then it acquires the DNS and gets the text record right so it's got a resolved",
    "start": "2175520",
    "end": "2181310"
  },
  {
    "text": "our text from the DNS you know from the DNS and then once it gets the value it",
    "start": "2181310",
    "end": "2187490"
  },
  {
    "text": "then parses it and then sends the value at zero right so the request in the bottom if you can see the request ID URI",
    "start": "2187490",
    "end": "2193130"
  },
  {
    "text": "is being set to the value that it gets it from router 3 and that way you can",
    "start": "2193130",
    "end": "2198680"
  },
  {
    "text": "you know whatever you pass it or what are we given in the in the DNS as the you know on the record set is what is",
    "start": "2198680",
    "end": "2206090"
  },
  {
    "text": "being passed then the the the other one",
    "start": "2206090",
    "end": "2211460"
  },
  {
    "text": "is about the blue green use case so when we started looking at blue green",
    "start": "2211460",
    "end": "2218540"
  },
  {
    "text": "you know we had teams that were using two different origins right or three different origins so basically what they",
    "start": "2218540",
    "end": "2225140"
  },
  {
    "text": "would do is that they would take one when they're doing deployment they will they'll build an e lb build an entire",
    "start": "2225140",
    "end": "2232579"
  },
  {
    "text": "stack and then slowly start sending traffic to that stack right so when we had when we were discussing that with",
    "start": "2232579",
    "end": "2238670"
  },
  {
    "text": "you know what's CloudFront natively they didn't have a good way of doing blue green with in with the to",
    "start": "2238670",
    "end": "2244730"
  },
  {
    "text": "cloud front there was a little bit of you know we were working with the different teams on that and you know",
    "start": "2244730",
    "end": "2250130"
  },
  {
    "text": "last week they they released the origin viewer type where you could do multiple",
    "start": "2250130",
    "end": "2256520"
  },
  {
    "text": "origins and but this one we're heavily using you know request you know types",
    "start": "2256520",
    "end": "2262250"
  },
  {
    "text": "where when a request comes in that's that's the one that we're using but with",
    "start": "2262250",
    "end": "2268220"
  },
  {
    "text": "the blue grain we wanted to really be able to leverage between multiple origins you know whether it's too big",
    "start": "2268220",
    "end": "2273530"
  },
  {
    "text": "you know 2 lbs that has multiple applications underneath it or it's you",
    "start": "2273530",
    "end": "2279020"
  },
  {
    "text": "know s3 or you know however it is right so so that's where we started looking at the blue-green use case and it's a very",
    "start": "2279020",
    "end": "2285710"
  },
  {
    "text": "similar principle that we did like what you saw in the a/b but it's a little bit",
    "start": "2285710",
    "end": "2290780"
  },
  {
    "text": "of a different set up how the blue-green is done so in the cloud front we have two origins one is the blue origin and",
    "start": "2290780",
    "end": "2297829"
  },
  {
    "text": "the green origin and then the lambda at the edge makes the decision based on again querying around 53 on which origin",
    "start": "2297829",
    "end": "2305000"
  },
  {
    "text": "to send it right based on how much is awaited it will send it to the appropriate origin and this also helps",
    "start": "2305000",
    "end": "2312050"
  },
  {
    "text": "with you know Canary deployment with multiple origins so if you have you know if you have an application and you want",
    "start": "2312050",
    "end": "2318230"
  },
  {
    "text": "to send all 5% of traffic to one origin all the time right you could keep it as that you know so as",
    "start": "2318230",
    "end": "2324470"
  },
  {
    "text": "you have a new deployment as you have a new release you release it to that end point a five-person of your traffic and",
    "start": "2324470",
    "end": "2331010"
  },
  {
    "text": "then everybody gets that right if there's no errors of the 5% then you can start deploying it to the rest of it and",
    "start": "2331010",
    "end": "2337339"
  },
  {
    "text": "that's some sometimes you could do it that way but the main use case for us was making sure that when we have a new",
    "start": "2337339",
    "end": "2343940"
  },
  {
    "text": "stack that comes up we're able to send some traffic to it and then being able to you know completely move all the",
    "start": "2343940",
    "end": "2349880"
  },
  {
    "text": "traffic to this one and then destroy the other stack and and the second use case we'll look",
    "start": "2349880",
    "end": "2355490"
  },
  {
    "text": "at as part of the demo also is using persistence right so persistence is",
    "start": "2355490",
    "end": "2361040"
  },
  {
    "text": "something that now as you're dealing with applications that have some level of cookies or things like that you want",
    "start": "2361040",
    "end": "2367070"
  },
  {
    "text": "to make sure that the user stays on the blue stack or on the green stack making",
    "start": "2367070",
    "end": "2372830"
  },
  {
    "text": "sure that they're not getting thrown around right between multiple stacks if you're already in the middle of a",
    "start": "2372830",
    "end": "2378109"
  },
  {
    "text": "session so let me jump into that in in",
    "start": "2378109",
    "end": "2385609"
  },
  {
    "text": "this set up what we have here is so this",
    "start": "2385609",
    "end": "2391340"
  },
  {
    "text": "one is a blue general blue green so we have three origins the the main one is",
    "start": "2391340",
    "end": "2397040"
  },
  {
    "text": "the middle one the s3 is the one that's going to be the one which does the behavior where it's gonna be routing",
    "start": "2397040",
    "end": "2402650"
  },
  {
    "text": "based on it's gonna have the lambda that's going to be doing the routing and then you have these two other custom",
    "start": "2402650",
    "end": "2407840"
  },
  {
    "text": "origins and they're just a straightforward ELB which has a ec2 instance on the back end and it has each",
    "start": "2407840",
    "end": "2416210"
  },
  {
    "text": "of them have a home directory with the blue or with the green on the home directory and on the behaviors this one",
    "start": "2416210",
    "end": "2424640"
  },
  {
    "text": "is the default one which has two which has the main lambda at the edge which is",
    "start": "2424640",
    "end": "2430550"
  },
  {
    "text": "doing the decision maker and then based on the decision it's going to send it either to the blue or the green stack at",
    "start": "2430550",
    "end": "2437060"
  },
  {
    "text": "this point right so when we look at this and on the route 53 we have the same",
    "start": "2437060",
    "end": "2444530"
  },
  {
    "text": "thing you know so we have the blue green and on the on the weighted routing it's again managed by route 53 and all we're",
    "start": "2444530",
    "end": "2451910"
  },
  {
    "text": "having here is the path where the service is going to you know where the",
    "start": "2451910",
    "end": "2457220"
  },
  {
    "text": "service is hosted right so on the on the load balancer and the ec2 instance blue",
    "start": "2457220",
    "end": "2462500"
  },
  {
    "text": "will have the slash blue as the path it has all the funnels underneath it index.html or anything else for that for",
    "start": "2462500",
    "end": "2468260"
  },
  {
    "text": "that origin and then the same thing with the second one right the second one again it's a it's a text type of it's a",
    "start": "2468260",
    "end": "2474170"
  },
  {
    "text": "text type and also it's the same principle like we saw in the a/b deployment and it's using green and it's",
    "start": "2474170",
    "end": "2479780"
  },
  {
    "text": "which word path you want so now you can have multiple origins you can have three or four origins right so you",
    "start": "2479780",
    "end": "2485600"
  },
  {
    "text": "you know as long as your origins have unique values and you're able to route it you can manage all of that through",
    "start": "2485600",
    "end": "2490730"
  },
  {
    "text": "route 53 and just to go here let me just",
    "start": "2490730",
    "end": "2502750"
  },
  {
    "text": "so here when you see this when I'm going to the main you know index start in HTML so this one",
    "start": "2505000",
    "end": "2512030"
  },
  {
    "text": "actually is going to the you know the blue stack from you know from the backend ec2 instance now the easy two",
    "start": "2512030",
    "end": "2519680"
  },
  {
    "text": "instance basically you know has you know the same type of you know index dot HTML",
    "start": "2519680",
    "end": "2526490"
  },
  {
    "text": "and it has all the same functions as a regular web server but this one basically you know just to call out that this is being routed to that traffic to",
    "start": "2526490",
    "end": "2534020"
  },
  {
    "text": "that server and and we've not really done you know anything on the front end to say it needs to go to blue or needs",
    "start": "2534020",
    "end": "2540500"
  },
  {
    "text": "to go to green right that's bit that decision is being made by the lambda at age and bike by route 53 at that point",
    "start": "2540500",
    "end": "2548120"
  },
  {
    "text": "right and then and here you can see that it's being routed through that path and",
    "start": "2548120",
    "end": "2553430"
  },
  {
    "text": "then you know if you want to switch it to go to the other one we could do the",
    "start": "2553430",
    "end": "2558620"
  },
  {
    "text": "same thing what we did the previous time where you go to your route 53 and then",
    "start": "2558620",
    "end": "2566200"
  },
  {
    "text": "no make this a zero",
    "start": "2566200",
    "end": "2569920"
  },
  {
    "text": "let me just open up",
    "start": "2585180",
    "end": "2588500"
  },
  {
    "text": "let me see if I can get this to work",
    "start": "2602970",
    "end": "2607010"
  },
  {
    "text": "not to mention getting the right service",
    "start": "2624330",
    "end": "2630640"
  },
  {
    "text": "[Music]",
    "start": "2630640",
    "end": "2633890"
  },
  {
    "text": "so if you see this it's jump to the green one so let me just go remove the this one",
    "start": "2646740",
    "end": "2654740"
  },
  {
    "text": "there you go so here you can see that now that Ralph III is not servicing any",
    "start": "2661570",
    "end": "2667270"
  },
  {
    "text": "you know any traffic for the blue endpoint it basically has query route",
    "start": "2667270",
    "end": "2672490"
  },
  {
    "text": "route three and route three has come back and said send all traffic to green you know because our weighted routing we",
    "start": "2672490",
    "end": "2678280"
  },
  {
    "text": "said zero to blue and then 50 to green right so so now you can see that you",
    "start": "2678280",
    "end": "2684400"
  },
  {
    "text": "know the traffic is being routed to the you know the green path right so this is coming from the second load balancer",
    "start": "2684400",
    "end": "2691090"
  },
  {
    "text": "which has its own easy to instance which has its own you know HTML page at that point and on the persistence side you",
    "start": "2691090",
    "end": "2700300"
  },
  {
    "text": "know right but this one basically what it is is once it hits this path once it is to slash green it's going to stay on",
    "start": "2700300",
    "end": "2706150"
  },
  {
    "text": "that as long as your application is all underneath that right so now that you've sent it whether it's you want to call it",
    "start": "2706150",
    "end": "2711220"
  },
  {
    "text": "as you know origin one origin to once you're in that origin it's going to",
    "start": "2711220",
    "end": "2716290"
  },
  {
    "text": "start you know sending it to that path and in which persistence you know it's the same principle",
    "start": "2716290",
    "end": "2722020"
  },
  {
    "text": "but now the it's also looking for a session cookie right and the persistence",
    "start": "2722020",
    "end": "2727930"
  },
  {
    "text": "is you know if you see there are 50 trees it has the same principle where you're having the blue and the green and",
    "start": "2727930",
    "end": "2733900"
  },
  {
    "text": "then all you're doing is the application is setting a cookie at that point and then based on the cookie lammed out the",
    "start": "2733900",
    "end": "2740440"
  },
  {
    "text": "edge is going to if it's good it's going to look for a cookie if it's not there it's going to look for around 53 but if",
    "start": "2740440",
    "end": "2745840"
  },
  {
    "text": "there is a cookie it's going to automatically send it to the right in a location so in this one I'm just going",
    "start": "2745840",
    "end": "2752320"
  },
  {
    "text": "to use you know use postman just to you know keep it simple so here you are",
    "start": "2752320",
    "end": "2758110"
  },
  {
    "text": "saying you know when I hit this you know when I hit this directly without any you",
    "start": "2758110",
    "end": "2764530"
  },
  {
    "text": "know this one with the persistence blue green with persistence URL it goes to a",
    "start": "2764530",
    "end": "2770440"
  },
  {
    "text": "page but when I say okay and I want to use a you know at this point I want to use a cookie and it's going to start you",
    "start": "2770440",
    "end": "2776590"
  },
  {
    "text": "know it's going to the cookie that is there it's persistent is equal to blue and then and the same thing with you",
    "start": "2776590",
    "end": "2782590"
  },
  {
    "text": "know if I want to switch it I want to say you know use this one then it's going to switch persistence based on the",
    "start": "2782590",
    "end": "2788740"
  },
  {
    "text": "persistence cookie it's going to go to that path right now subsequent ones because of that",
    "start": "2788740",
    "end": "2795360"
  },
  {
    "text": "you know you can once the cookie is set you know your application will just process it using that right so now",
    "start": "2795360",
    "end": "2801120"
  },
  {
    "text": "you're able to manage Bluegreen and manage some level of session management or persistence on where you want you",
    "start": "2801120",
    "end": "2808560"
  },
  {
    "text": "know the website to be serviced from and then you can expire your cookie if you want to keep it limited so if you want",
    "start": "2808560",
    "end": "2814680"
  },
  {
    "text": "to say you know I want to make sure that people are getting a new query on the DNS every you know 20 minutes then you",
    "start": "2814680",
    "end": "2822090"
  },
  {
    "text": "can expire it based on that",
    "start": "2822090",
    "end": "2825200"
  },
  {
    "text": "all right on on this one in that it's a very similar concept where we are in",
    "start": "2829190",
    "end": "2837180"
  },
  {
    "text": "here if you see it it's you know it's getting the request and you know if the",
    "start": "2837180",
    "end": "2842400"
  },
  {
    "text": "request huh already has a blue or a green it's going to continue and process it it's not going to do any manipulation",
    "start": "2842400",
    "end": "2848010"
  },
  {
    "text": "but if there's not if it's not there then it would you know you know it'll",
    "start": "2848010",
    "end": "2853200"
  },
  {
    "text": "call route 53 and ask for you know give me the value no which one do I use whether do I use the blue or the green",
    "start": "2853200",
    "end": "2858780"
  },
  {
    "text": "value and then based on that it's going to process it here it's going to add the",
    "start": "2858780",
    "end": "2863790"
  },
  {
    "text": "existing URL with the value which is the one that's passed from around 53 and then whether it's and then it's going to",
    "start": "2863790",
    "end": "2870360"
  },
  {
    "text": "add the extra stuff that it's getting if it's index dot HTML it'll add that if it's routed like that if it is you know",
    "start": "2870360",
    "end": "2877500"
  },
  {
    "text": "some other home page it's going to add that and then any future ones it will skip it because it'll already have the",
    "start": "2877500",
    "end": "2883440"
  },
  {
    "text": "slash blue or the slash green and here's the same thing it's just calling round from three it's requiring DNS it's going",
    "start": "2883440",
    "end": "2889530"
  },
  {
    "text": "to resolve the you know result it's as the text record and then it's going to get that value and the same thing with",
    "start": "2889530",
    "end": "2896370"
  },
  {
    "text": "you know session management all we're adding here is you're adding that one",
    "start": "2896370",
    "end": "2901470"
  },
  {
    "text": "extra step to say you know I'm going to see if there's a persistence cookie that is set if it is set then I'm going to",
    "start": "2901470",
    "end": "2908130"
  },
  {
    "text": "follow that path and say you know follow the blue or the green based on what cookie is found if the cookie is not",
    "start": "2908130",
    "end": "2914160"
  },
  {
    "text": "found then you call round 53 and say hey I don't have a preference on where I need to go which origin I need to go",
    "start": "2914160",
    "end": "2921180"
  },
  {
    "text": "tell me where you want me to go and based on the weighted routing in round 53 it's going to send",
    "start": "2921180",
    "end": "2928570"
  },
  {
    "text": "you to the appropriate endpoint and then in the future once the cookie said it's gonna just take the first loop right",
    "start": "2928570",
    "end": "2934750"
  },
  {
    "text": "it's going to come and say yep I see a cookie and then it's going to send it and I get in here you know some of the",
    "start": "2934750",
    "end": "2940990"
  },
  {
    "text": "things that we've seen where you know you're seeing the the rough tree setting you know in that one we're showing you",
    "start": "2940990",
    "end": "2948160"
  },
  {
    "text": "the weighted routing and then also here you're seeing the CloudWatch logs how",
    "start": "2948160",
    "end": "2953350"
  },
  {
    "text": "it's setting the request at URI on the a and B deployment and they're pretty fast",
    "start": "2953350",
    "end": "2958510"
  },
  {
    "text": "you know as far as it's this one and of course the duration is like one millisecond on 1.02 so there lambda edge is pretty quick and",
    "start": "2958510",
    "end": "2965290"
  },
  {
    "text": "you know determining where it needs to go and there's similar things with you know with cookie like in a blue green",
    "start": "2965290",
    "end": "2971020"
  },
  {
    "text": "we're here saying that you know i've found a persistence cookie and it's going to go to that path where it's",
    "start": "2971020",
    "end": "2977590"
  },
  {
    "text": "finding it and if it's not there it's going to say I'm going to check with Ralph up to three and then once the round three tells me I need to go to",
    "start": "2977590",
    "end": "2983800"
  },
  {
    "text": "green or blue then I'm going to set my path to go to that you know to that location and again you can see the you",
    "start": "2983800",
    "end": "2991270"
  },
  {
    "text": "know the duration is pretty quick and it doesn't really have a lot of lag or anything like that I'm going to briefly",
    "start": "2991270",
    "end": "2997660"
  },
  {
    "text": "talk about some implementation patterns you know when we started dealing with dependency on on premises some of the",
    "start": "2997660",
    "end": "3004440"
  },
  {
    "text": "things that that helps is to move some of that to Amazon a lot of times when",
    "start": "3004440",
    "end": "3009930"
  },
  {
    "text": "people are deploying services to to the cloud you know if you have dependencies",
    "start": "3009930",
    "end": "3016170"
  },
  {
    "text": "that are on-premises you know you have to go through the process of requesting a change and then you know putting the",
    "start": "3016170",
    "end": "3022890"
  },
  {
    "text": "change in and then populating it things like that we moved some of that into you",
    "start": "3022890",
    "end": "3028830"
  },
  {
    "text": "know into Amazon like in this example you see app that example where it has a cname for a round foot three entry so",
    "start": "3028830",
    "end": "3035280"
  },
  {
    "text": "now anyone who's deploying it to Amazon they can directly go there and and deal",
    "start": "3035280",
    "end": "3040440"
  },
  {
    "text": "with the record set that's there for AB data example 53 comm right so this helped us with a lot of the migration so",
    "start": "3040440",
    "end": "3047580"
  },
  {
    "text": "instead of anytime a new stack comes up and somebody has to you know attach that stack to the DNS instead of having to go",
    "start": "3047580",
    "end": "3054840"
  },
  {
    "text": "to the data center and put a ticket in and how to deploy we were able to leverage this methodology where we're",
    "start": "3054840",
    "end": "3061920"
  },
  {
    "text": "able to quickly have people control their own record sets and since the on-premises",
    "start": "3061920",
    "end": "3068290"
  },
  {
    "text": "DNS is you know is basically aliased into the cloud one were able to leverage",
    "start": "3068290",
    "end": "3074320"
  },
  {
    "text": "that know pretty quick and then also from from a hybrid environment",
    "start": "3074320",
    "end": "3080590"
  },
  {
    "text": "perspective it makes it super easy to you know to move that into the DNS and manage the DNS dependency and then the",
    "start": "3080590",
    "end": "3090220"
  },
  {
    "text": "some of the things that you saw earlier were all based on viewer request right so the one that Amazon has released",
    "start": "3090220",
    "end": "3097270"
  },
  {
    "text": "recently is an Origin request so if you're using that type of a request you can do multi origin but we heavily use",
    "start": "3097270",
    "end": "3103359"
  },
  {
    "text": "the view request right so anything that comes in before it hits the cache before it hits the origin we're looking at that",
    "start": "3103359",
    "end": "3109720"
  },
  {
    "text": "traffic trying to see where do you need to send it right so you can have a maintenance page now one of the things",
    "start": "3109720",
    "end": "3115060"
  },
  {
    "text": "that is an advantage of using a maintenance is sometimes we have users who are bookmarking their URLs right so",
    "start": "3115060",
    "end": "3122050"
  },
  {
    "text": "you have somebody who's bookmarking some URL that they are a favorite off and you",
    "start": "3122050",
    "end": "3127450"
  },
  {
    "text": "know with the maintenance what we're able to do is that we're able to leverage lambda to say any URL that's",
    "start": "3127450",
    "end": "3133240"
  },
  {
    "text": "being requested you know basically send it to the root you know so that we'll have a maintenance page so that all the",
    "start": "3133240",
    "end": "3140380"
  },
  {
    "text": "bookmarks don't fail you know it'll still say it's maintenance even though you know even though the path is a different path",
    "start": "3140380",
    "end": "3146380"
  },
  {
    "text": "lambda at the edge is able to manipulate that URL and be able to switch over and then of course the same thing with the",
    "start": "3146380",
    "end": "3152619"
  },
  {
    "text": "blue green and also with the dependencies that we have with on-premises and one of the advantages of",
    "start": "3152619",
    "end": "3159130"
  },
  {
    "text": "the viewer request is also if you have a new release that you're deploying and if",
    "start": "3159130",
    "end": "3164560"
  },
  {
    "text": "you want a QA person to test it you can basically set a header or a set of cookie that says you know new release so",
    "start": "3164560",
    "end": "3172090"
  },
  {
    "text": "that only people who have the header will be hitting that new release right nobody else will be able to hit it so the general Internet is not is never",
    "start": "3172090",
    "end": "3178420"
  },
  {
    "text": "going to hit it so you have a way to test your functionality in production without having anyone else being able to",
    "start": "3178420",
    "end": "3185380"
  },
  {
    "text": "know about it right so you can have like what we did with persistence is blue and persistence is green if you have a",
    "start": "3185380",
    "end": "3190840"
  },
  {
    "text": "separate one that lambda at the edge is able to say okay if when there's a new release if there release equal to you know green or",
    "start": "3190840",
    "end": "3199010"
  },
  {
    "text": "release equal to go for that matter then anyone who has that cookies are the only ones we're gonna hit that origin and no",
    "start": "3199010",
    "end": "3205670"
  },
  {
    "text": "one else will know that it's there right so you can actually do live production testing at that point and and and and",
    "start": "3205670",
    "end": "3213800"
  },
  {
    "text": "this is another one from an implementation pattern on the AP is when we're dealing with internal users where",
    "start": "3213800",
    "end": "3220850"
  },
  {
    "text": "we don't want any external access for an leveraging API gateway this is one of",
    "start": "3220850",
    "end": "3226910"
  },
  {
    "text": "the methods that we that we use just where we have a way to generate the",
    "start": "3226910",
    "end": "3232070"
  },
  {
    "text": "policy where from an API gateway side with the source IP right so all the we",
    "start": "3232070",
    "end": "3238910"
  },
  {
    "text": "have a customer about a requirement that they have to use a custom art which will go to dynamo and pull all the IPS that's",
    "start": "3238910",
    "end": "3246140"
  },
  {
    "text": "part of a cherie on and then anyone who's leveraging that have to come from that IP right they don't come from that",
    "start": "3246140",
    "end": "3251660"
  },
  {
    "text": "IP since api gateway as of now is publicly facing we're able to lock it",
    "start": "3251660",
    "end": "3257180"
  },
  {
    "text": "down where it locks out everybody else who's not using a Shirin IP or not",
    "start": "3257180",
    "end": "3262400"
  },
  {
    "text": "coming from a Shirin IP and any other internal services that are there will use an ADD gateway and that will be",
    "start": "3262400",
    "end": "3268190"
  },
  {
    "text": "white listed and some of the final things about the do's and don'ts the one",
    "start": "3268190",
    "end": "3276110"
  },
  {
    "text": "of the main ones you know that as a you know as a as you are leveraging edge services is make sure you get buy-in",
    "start": "3276110",
    "end": "3282410"
  },
  {
    "text": "from security teams you know because a lot of times you know you may have a great idea and you may say hey this is",
    "start": "3282410",
    "end": "3288500"
  },
  {
    "text": "how I want to do it this is our you know this is a great way to do this you know it's it's you know we can do it quickly we can do time to market different",
    "start": "3288500",
    "end": "3294620"
  },
  {
    "text": "things but it may be a security risk right so you know so that's very critical so make sure you buy get buy-in",
    "start": "3294620",
    "end": "3301130"
  },
  {
    "text": "from security teams make sure that as you are looking at new services on the",
    "start": "3301130",
    "end": "3306140"
  },
  {
    "text": "implications of it right so is there governance you know is there a way to isolate it from the general traffic if",
    "start": "3306140",
    "end": "3312980"
  },
  {
    "text": "it's a sensitive information you know and then the also follow a layer of security model right you know not one",
    "start": "3312980",
    "end": "3319570"
  },
  {
    "text": "service will solve all your security needs right or solve all your problems like in this one we saw how we're",
    "start": "3319570",
    "end": "3325490"
  },
  {
    "text": "leveraging ralph of the tree we're leveraging you know lambda th we're leveraging viewer-request we're leveraging multiple",
    "start": "3325490",
    "end": "3331980"
  },
  {
    "text": "things to solve these use cases so always look for a layered approach and",
    "start": "3331980",
    "end": "3337560"
  },
  {
    "text": "especially in the area of security also look for a layered approach right like loud phone has like geo restriction you",
    "start": "3337560",
    "end": "3343200"
  },
  {
    "text": "know you have laughs where you can do IP restriction you know you have laugh rules that can do you know sequel",
    "start": "3343200",
    "end": "3349680"
  },
  {
    "text": "injection and other types of protection you have DDoS so you have multiple different types and then of course on the application layer you need doing",
    "start": "3349680",
    "end": "3356460"
  },
  {
    "text": "code reviews you know making sure you're using tools that will do you know some level of security checks on your code",
    "start": "3356460",
    "end": "3362070"
  },
  {
    "text": "itself and and also this is something that it's very helpful where you know",
    "start": "3362070",
    "end": "3369330"
  },
  {
    "text": "the compliance reports that Amazon provides the stock to reports the PCI reports and in you know as your legal",
    "start": "3369330",
    "end": "3375840"
  },
  {
    "text": "team or your audit team has requirements for those type of reports make sure that you're leveraging Amazon's",
    "start": "3375840",
    "end": "3381750"
  },
  {
    "text": "compliance reports on top of your controls and of course training you know that's pretty clear it's very critical",
    "start": "3381750",
    "end": "3388080"
  },
  {
    "text": "because a lot of times is if it's a new thing that people are not used to it makes it harder for adoption because",
    "start": "3388080",
    "end": "3393990"
  },
  {
    "text": "people are not comfortable with it and then there's a lot of questions on how do you implement it make sure there's a good you know the confluence or some",
    "start": "3393990",
    "end": "3402600"
  },
  {
    "text": "play a place where you're documenting all your best practices and being able to show people how this works",
    "start": "3402600",
    "end": "3407610"
  },
  {
    "text": "and also for ownership especially with the cloud one of the things that we're",
    "start": "3407610",
    "end": "3413430"
  },
  {
    "text": "going through as a journey is ownership right so in the traditional model you may have you know very siloed team that",
    "start": "3413430",
    "end": "3420660"
  },
  {
    "text": "maintains different stacks or different different areas but in the when the Amazon space a lot of that gets a little",
    "start": "3420660",
    "end": "3427800"
  },
  {
    "text": "bit great right so who manages to have rules you know who manage the deployments who manages the CI CD",
    "start": "3427800",
    "end": "3434010"
  },
  {
    "text": "process right is it the development team is it the operations team you know what's the responsibility of the NOC was it",
    "start": "3434010",
    "end": "3439020"
  },
  {
    "text": "responsibility of the security team at that point or so make sure that you sort that out you solve those problems you",
    "start": "3439020",
    "end": "3444810"
  },
  {
    "text": "know from from a racy perspective some of the don'ts are you know one of the",
    "start": "3444810",
    "end": "3450600"
  },
  {
    "text": "things that can be tricky or multi network multi vendor Network hops you",
    "start": "3450600",
    "end": "3456060"
  },
  {
    "text": "know we talked to briefly about that you know you don't want to have multiple vendors you're jumping",
    "start": "3456060",
    "end": "3461240"
  },
  {
    "text": "you know because now you're going to one vendor then they're gonna you know route it back into your data center and then",
    "start": "3461240",
    "end": "3466430"
  },
  {
    "text": "you're trying to go back into AWS so that can be tricky and and also open",
    "start": "3466430",
    "end": "3471440"
  },
  {
    "text": "security groups you know Amazon has some patterns that they put out on how you can lock down traffic only from cloud",
    "start": "3471440",
    "end": "3478340"
  },
  {
    "text": "front to be able to reach your origin so there's a lot of good practices there where you're making sure that what is",
    "start": "3478340",
    "end": "3483710"
  },
  {
    "text": "allowed to be able to reach to my origin and don't allow open security groups some of the visibility changes with the",
    "start": "3483710",
    "end": "3490670"
  },
  {
    "text": "cloud make sure you set the right expectations right some things are not asked visible as a prior so make sure",
    "start": "3490670",
    "end": "3496100"
  },
  {
    "text": "that you understand that okay this is less visible in the cloud versus on-premises of course lyft and you know",
    "start": "3496100",
    "end": "3503750"
  },
  {
    "text": "shift can be cost prohibitive make sure you are accounting for that and also",
    "start": "3503750",
    "end": "3508880"
  },
  {
    "text": "challenges you'll have with self-signed certificates right so make sure you're not doing self-signed certificates make sure you are you know you're using",
    "start": "3508880",
    "end": "3515869"
  },
  {
    "text": "legitimate certificates there are from trusted authorities just a really quick",
    "start": "3515869",
    "end": "3522380"
  },
  {
    "text": "recap you know some of the you know things that we saw the benefits of doing a layered methodology approach where",
    "start": "3522380",
    "end": "3528770"
  },
  {
    "text": "you're not just focused on solving one thing but you have a multiple different things that you're trying to solve from",
    "start": "3528770",
    "end": "3533840"
  },
  {
    "text": "a network perspective content perspective and also what are some of the strategies and then some of the do's",
    "start": "3533840",
    "end": "3539840"
  },
  {
    "text": "and don'ts right so that's critical so and for that I'd like to thank you for attending the session and thank you",
    "start": "3539840",
    "end": "3547320"
  },
  {
    "text": "[Applause]",
    "start": "3547320",
    "end": "3550149"
  }
]