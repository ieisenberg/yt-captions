[
  {
    "start": "0",
    "end": "27000"
  },
  {
    "text": "hello my name is Ali Simon a Solutions",
    "start": "420",
    "end": "3480"
  },
  {
    "text": "architect here at AWS in this video I'm",
    "start": "3480",
    "end": "6299"
  },
  {
    "text": "going to show you how you can deploy an",
    "start": "6299",
    "end": "8340"
  },
  {
    "text": "asp.net core 6 web application onto AWS",
    "start": "8340",
    "end": "11639"
  },
  {
    "text": "elastic Beanstalk Linux web server",
    "start": "11639",
    "end": "13559"
  },
  {
    "text": "environment we are going to use the AWS",
    "start": "13559",
    "end": "16260"
  },
  {
    "text": "toolkit for visual studio to assist with",
    "start": "16260",
    "end": "18480"
  },
  {
    "text": "this deployment using this tool we will",
    "start": "18480",
    "end": "20880"
  },
  {
    "text": "see how.net developers can use the tool",
    "start": "20880",
    "end": "22859"
  },
  {
    "text": "that is familiar to them namely facial",
    "start": "22859",
    "end": "24660"
  },
  {
    "text": "Studio to Kickstart the deployment",
    "start": "24660",
    "end": "27180"
  },
  {
    "start": "27000",
    "end": "62000"
  },
  {
    "text": "before we jump in let's do a quick",
    "start": "27180",
    "end": "29279"
  },
  {
    "text": "refresher of dot NET",
    "start": "29279",
    "end": "31220"
  },
  {
    "text": "frameworks.net.net Framework is the",
    "start": "31220",
    "end": "33000"
  },
  {
    "text": "windows only software development",
    "start": "33000",
    "end": "34320"
  },
  {
    "text": "framework meaning it runs only on",
    "start": "34320",
    "end": "36300"
  },
  {
    "text": "Windows dotnet is the cross-platform",
    "start": "36300",
    "end": "39000"
  },
  {
    "text": "open source implementation of the",
    "start": "39000",
    "end": "40800"
  },
  {
    "text": "framework for running application on",
    "start": "40800",
    "end": "42600"
  },
  {
    "text": "Windows Linux and Mac OS before.net 5",
    "start": "42600",
    "end": "46079"
  },
  {
    "text": "this cross-platform framework used to be",
    "start": "46079",
    "end": "48480"
  },
  {
    "text": "called.net core",
    "start": "48480",
    "end": "50160"
  },
  {
    "text": "dot NET Framework 4.8 is the latest",
    "start": "50160",
    "end": "52800"
  },
  {
    "text": "version of token framework and it will",
    "start": "52800",
    "end": "55140"
  },
  {
    "text": "only be receiving security and stability",
    "start": "55140",
    "end": "57059"
  },
  {
    "text": "updates while modern.net is where the",
    "start": "57059",
    "end": "59820"
  },
  {
    "text": "new features and Innovations are added",
    "start": "59820",
    "end": "63019"
  },
  {
    "start": "62000",
    "end": "108000"
  },
  {
    "text": "running.net on Linux can also help you",
    "start": "63019",
    "end": "65518"
  },
  {
    "text": "save on costs a portion of ec2 license",
    "start": "65519",
    "end": "68520"
  },
  {
    "text": "included Windows instance calls is",
    "start": "68520",
    "end": "70500"
  },
  {
    "text": "actually Windows 7 license cost",
    "start": "70500",
    "end": "72540"
  },
  {
    "text": "as an example comparison an ec2 M5 large",
    "start": "72540",
    "end": "76080"
  },
  {
    "text": "on-demand Linux instance is 48 cheaper",
    "start": "76080",
    "end": "79320"
  },
  {
    "text": "than the equivalent Windows instance",
    "start": "79320",
    "end": "81200"
  },
  {
    "text": "container services can mean even greater",
    "start": "81200",
    "end": "83700"
  },
  {
    "text": "savings especially for small containers",
    "start": "83700",
    "end": "85439"
  },
  {
    "text": "for example with ECS Target running",
    "start": "85439",
    "end": "88500"
  },
  {
    "text": "forecasts 24 hours a day seven days a",
    "start": "88500",
    "end": "91560"
  },
  {
    "text": "week is 68 cheaper on Linux when",
    "start": "91560",
    "end": "94080"
  },
  {
    "text": "compared to Windows",
    "start": "94080",
    "end": "95640"
  },
  {
    "text": "but we often hear that there are",
    "start": "95640",
    "end": "97380"
  },
  {
    "text": "barriers to adoption of.net on Linux",
    "start": "97380",
    "end": "99600"
  },
  {
    "text": "organizations that operate Windows",
    "start": "99600",
    "end": "101700"
  },
  {
    "text": "workloads have Windows administrators",
    "start": "101700",
    "end": "103680"
  },
  {
    "text": "and developers who might face challenges",
    "start": "103680",
    "end": "105659"
  },
  {
    "text": "deploying configuring and managing Linux",
    "start": "105659",
    "end": "107759"
  },
  {
    "text": "servers so in this video I want to show",
    "start": "107759",
    "end": "110340"
  },
  {
    "start": "108000",
    "end": "164000"
  },
  {
    "text": "you how elastic be installed can help",
    "start": "110340",
    "end": "112020"
  },
  {
    "text": "with elastic beam stock you can quickly",
    "start": "112020",
    "end": "114299"
  },
  {
    "text": "deploy and manage applications in AWS it",
    "start": "114299",
    "end": "117720"
  },
  {
    "text": "reduces management complexity without",
    "start": "117720",
    "end": "119399"
  },
  {
    "text": "restricting choice or control elastic",
    "start": "119399",
    "end": "121860"
  },
  {
    "text": "bean stock automatically handles the",
    "start": "121860",
    "end": "123840"
  },
  {
    "text": "details of capacity provisioning load",
    "start": "123840",
    "end": "126000"
  },
  {
    "text": "balancing scaling and application Health",
    "start": "126000",
    "end": "128280"
  },
  {
    "text": "monitoring to use it you simply create",
    "start": "128280",
    "end": "130619"
  },
  {
    "text": "an application upload an application",
    "start": "130619",
    "end": "132780"
  },
  {
    "text": "version in the form of an application",
    "start": "132780",
    "end": "134580"
  },
  {
    "text": "source code bundle and then provide some",
    "start": "134580",
    "end": "136739"
  },
  {
    "text": "information about the application",
    "start": "136739",
    "end": "138300"
  },
  {
    "text": "elastic Beanstalk automatically then",
    "start": "138300",
    "end": "140640"
  },
  {
    "text": "launches an environment and creates some",
    "start": "140640",
    "end": "142379"
  },
  {
    "text": "configures the AWS resources needed to",
    "start": "142379",
    "end": "144840"
  },
  {
    "text": "run your code such as ec2 instances Auto",
    "start": "144840",
    "end": "147840"
  },
  {
    "text": "scaling group load balancer to name a",
    "start": "147840",
    "end": "150180"
  },
  {
    "text": "few after your environment is launched",
    "start": "150180",
    "end": "152640"
  },
  {
    "text": "you can then manage to your environment",
    "start": "152640",
    "end": "154140"
  },
  {
    "text": "and deploy new application versions",
    "start": "154140",
    "end": "156060"
  },
  {
    "text": "there is no additional chance to use",
    "start": "156060",
    "end": "158099"
  },
  {
    "text": "elastic Beanstalk you pay only for the",
    "start": "158099",
    "end": "160500"
  },
  {
    "text": "actual underlying AWS resources that",
    "start": "160500",
    "end": "162900"
  },
  {
    "text": "your application can choose now let's",
    "start": "162900",
    "end": "165120"
  },
  {
    "start": "164000",
    "end": "190000"
  },
  {
    "text": "see it in action",
    "start": "165120",
    "end": "166560"
  },
  {
    "text": "we will take an existing asp.net MVC web",
    "start": "166560",
    "end": "169440"
  },
  {
    "text": "application running on iOS in Windows",
    "start": "169440",
    "end": "172080"
  },
  {
    "text": "server and deploy it into elasticbeam",
    "start": "172080",
    "end": "174360"
  },
  {
    "text": "stock web server and environment on",
    "start": "174360",
    "end": "175739"
  },
  {
    "text": "Linux this is the target architecture",
    "start": "175739",
    "end": "178260"
  },
  {
    "text": "that we will have in AWS we'll leverage",
    "start": "178260",
    "end": "180780"
  },
  {
    "text": "AWS elastic Beanstalk to deploy the",
    "start": "180780",
    "end": "183660"
  },
  {
    "text": "application onto ec2 Linux instances",
    "start": "183660",
    "end": "185640"
  },
  {
    "text": "within an auto scaling group behind an",
    "start": "185640",
    "end": "188099"
  },
  {
    "text": "application load balancer",
    "start": "188099",
    "end": "190980"
  },
  {
    "start": "190000",
    "end": "373000"
  },
  {
    "text": "okay so we're in a Windows server",
    "start": "190980",
    "end": "193260"
  },
  {
    "text": "here's is on the Windows server and you",
    "start": "193260",
    "end": "195599"
  },
  {
    "text": "can see that we have a website called",
    "start": "195599",
    "end": "196980"
  },
  {
    "text": "catches online windows",
    "start": "196980",
    "end": "198780"
  },
  {
    "text": "open this up",
    "start": "198780",
    "end": "200340"
  },
  {
    "text": "this site resembles an e-commerce web",
    "start": "200340",
    "end": "203040"
  },
  {
    "text": "application",
    "start": "203040",
    "end": "205640"
  },
  {
    "text": "okay so now we're going to take a look",
    "start": "205860",
    "end": "207720"
  },
  {
    "text": "at the source code of this application",
    "start": "207720",
    "end": "209280"
  },
  {
    "text": "and we're now in Visual Studio as you'd",
    "start": "209280",
    "end": "212220"
  },
  {
    "text": "expect this is nasp.net MVC web",
    "start": "212220",
    "end": "214500"
  },
  {
    "text": "application we'll deploy this to elastic",
    "start": "214500",
    "end": "216659"
  },
  {
    "text": "Beanstalk Linux web server environment",
    "start": "216659",
    "end": "219000"
  },
  {
    "text": "now the dot map developer can easily",
    "start": "219000",
    "end": "221159"
  },
  {
    "text": "kick start the deployment right wrong",
    "start": "221159",
    "end": "222720"
  },
  {
    "text": "with increaser Studio by using AWS",
    "start": "222720",
    "end": "224819"
  },
  {
    "text": "toolkit for visual studio with this",
    "start": "224819",
    "end": "226920"
  },
  {
    "text": "toolkit installed we can simply right",
    "start": "226920",
    "end": "228840"
  },
  {
    "text": "click on this project here and choose",
    "start": "228840",
    "end": "231180"
  },
  {
    "text": "publish to AWS",
    "start": "231180",
    "end": "234379"
  },
  {
    "text": "you can choose to publish to existing",
    "start": "234420",
    "end": "236340"
  },
  {
    "text": "Target or in this case I want to show",
    "start": "236340",
    "end": "237900"
  },
  {
    "text": "you the publish to new Target where",
    "start": "237900",
    "end": "239519"
  },
  {
    "text": "you'll be presented with a few options",
    "start": "239519",
    "end": "241280"
  },
  {
    "text": "such as elastic be installed to Linux",
    "start": "241280",
    "end": "243959"
  },
  {
    "text": "elastic be installed or Windows Target",
    "start": "243959",
    "end": "245459"
  },
  {
    "text": "apprana but for these instance we are",
    "start": "245459",
    "end": "247680"
  },
  {
    "text": "going to choose this one which is uh to",
    "start": "247680",
    "end": "249840"
  },
  {
    "text": "deploy to as AWS elastic Beanstalk on",
    "start": "249840",
    "end": "252659"
  },
  {
    "text": "Linux",
    "start": "252659",
    "end": "253560"
  },
  {
    "text": "so choose that click this button I'm",
    "start": "253560",
    "end": "256500"
  },
  {
    "text": "going to say create a new elastic bin",
    "start": "256500",
    "end": "258359"
  },
  {
    "text": "stock application",
    "start": "258359",
    "end": "260900"
  },
  {
    "text": "give the application a name",
    "start": "260900",
    "end": "264000"
  },
  {
    "text": "give the environment a name as well and",
    "start": "264000",
    "end": "266880"
  },
  {
    "text": "for this environment around one single",
    "start": "266880",
    "end": "269280"
  },
  {
    "text": "instance I want this to be load balance",
    "start": "269280",
    "end": "272880"
  },
  {
    "text": "with the options that is selected as",
    "start": "272880",
    "end": "275699"
  },
  {
    "text": "default",
    "start": "275699",
    "end": "276780"
  },
  {
    "text": "now as you can see the toolkit already",
    "start": "276780",
    "end": "278460"
  },
  {
    "text": "selected the right install F4 for me but",
    "start": "278460",
    "end": "280560"
  },
  {
    "text": "you can change this if you like",
    "start": "280560",
    "end": "282660"
  },
  {
    "text": "it also supports elastic install also",
    "start": "282660",
    "end": "284820"
  },
  {
    "text": "support managed platform updates rolling",
    "start": "284820",
    "end": "287400"
  },
  {
    "text": "deployments x-ray tracing",
    "start": "287400",
    "end": "290940"
  },
  {
    "text": "you can select your instance type in",
    "start": "290940",
    "end": "293220"
  },
  {
    "text": "this case I will select t42 Nano it is",
    "start": "293220",
    "end": "297600"
  },
  {
    "text": "demo which is a small business",
    "start": "297600",
    "end": "300180"
  },
  {
    "text": "application local insole",
    "start": "300180",
    "end": "302699"
  },
  {
    "text": "that's the right click now I already",
    "start": "302699",
    "end": "305639"
  },
  {
    "text": "have an existing iron Rod so I'm going",
    "start": "305639",
    "end": "308160"
  },
  {
    "text": "to make use of that",
    "start": "308160",
    "end": "311540"
  },
  {
    "text": "same for service imro",
    "start": "314520",
    "end": "318080"
  },
  {
    "text": "optionally select the key pair",
    "start": "319680",
    "end": "323300"
  },
  {
    "text": "choose a VPC",
    "start": "324060",
    "end": "326400"
  },
  {
    "text": "I've already got a VPC created so make",
    "start": "326400",
    "end": "328800"
  },
  {
    "text": "use of the existing VPC that I've got",
    "start": "328800",
    "end": "332780"
  },
  {
    "text": "choose the instant subnet I'm going to",
    "start": "333300",
    "end": "335220"
  },
  {
    "text": "place my instance in private subnets",
    "start": "335220",
    "end": "338400"
  },
  {
    "text": "which is this one",
    "start": "338400",
    "end": "341220"
  },
  {
    "text": "and this one",
    "start": "341220",
    "end": "344060"
  },
  {
    "text": "choose the security group to apply on",
    "start": "345960",
    "end": "348479"
  },
  {
    "text": "the instance",
    "start": "348479",
    "end": "351080"
  },
  {
    "text": "and that's it",
    "start": "352500",
    "end": "353880"
  },
  {
    "text": "hit this publish button",
    "start": "353880",
    "end": "355860"
  },
  {
    "text": "click yes",
    "start": "355860",
    "end": "357600"
  },
  {
    "text": "and the problem is now underway this",
    "start": "357600",
    "end": "360120"
  },
  {
    "text": "will take a few minutes so we will fast",
    "start": "360120",
    "end": "362940"
  },
  {
    "text": "forward the video",
    "start": "362940",
    "end": "365660"
  },
  {
    "text": "okay the problem is now completed let's",
    "start": "367979",
    "end": "370380"
  },
  {
    "text": "head to AWS console to see what we've",
    "start": "370380",
    "end": "372360"
  },
  {
    "text": "got",
    "start": "372360",
    "end": "373560"
  },
  {
    "start": "373000",
    "end": "437000"
  },
  {
    "text": "so in the AWS console we navigate to",
    "start": "373560",
    "end": "375900"
  },
  {
    "text": "elastic Beanstalk",
    "start": "375900",
    "end": "377520"
  },
  {
    "text": "and we can see our application and",
    "start": "377520",
    "end": "379500"
  },
  {
    "text": "environment we're going to make a few",
    "start": "379500",
    "end": "381000"
  },
  {
    "text": "tweaks to our environment before we test",
    "start": "381000",
    "end": "382620"
  },
  {
    "text": "the application function already go to",
    "start": "382620",
    "end": "384600"
  },
  {
    "text": "environment configuration",
    "start": "384600",
    "end": "386940"
  },
  {
    "text": "and let's go to instance traffic and",
    "start": "386940",
    "end": "389400"
  },
  {
    "text": "scaling panel in here to confirm with",
    "start": "389400",
    "end": "393180"
  },
  {
    "text": "the target State architecture that you",
    "start": "393180",
    "end": "394919"
  },
  {
    "text": "saw earlier we're going to set the",
    "start": "394919",
    "end": "396900"
  },
  {
    "text": "minimum instance to 2 and the maximum",
    "start": "396900",
    "end": "399180"
  },
  {
    "text": "instance to a number of say 8. in here",
    "start": "399180",
    "end": "402660"
  },
  {
    "text": "you can change the scaling options if",
    "start": "402660",
    "end": "404819"
  },
  {
    "text": "you want to I'm just going to leave it",
    "start": "404819",
    "end": "406139"
  },
  {
    "text": "as default for this demo hit continue",
    "start": "406139",
    "end": "409680"
  },
  {
    "text": "and we're going to make another change",
    "start": "409680",
    "end": "411660"
  },
  {
    "text": "under this updates monitoring and",
    "start": "411660",
    "end": "413699"
  },
  {
    "text": "logging section to address one of the",
    "start": "413699",
    "end": "416039"
  },
  {
    "text": "most common questions about after",
    "start": "416039",
    "end": "418319"
  },
  {
    "text": "deploying this application to Linux",
    "start": "418319",
    "end": "421319"
  },
  {
    "text": "how is the log going to work the",
    "start": "421319",
    "end": "423060"
  },
  {
    "text": "application model and for that we will",
    "start": "423060",
    "end": "425160"
  },
  {
    "text": "go to the platform software section",
    "start": "425160",
    "end": "427500"
  },
  {
    "text": "and enable this lock streaming",
    "start": "427500",
    "end": "429120"
  },
  {
    "text": "cloudwatch",
    "start": "429120",
    "end": "431900"
  },
  {
    "text": "hit apply",
    "start": "432660",
    "end": "434340"
  },
  {
    "text": "and the updates to the environment will",
    "start": "434340",
    "end": "436560"
  },
  {
    "text": "start",
    "start": "436560",
    "end": "437340"
  },
  {
    "start": "437000",
    "end": "570000"
  },
  {
    "text": "okay after a few moments we can see that",
    "start": "437340",
    "end": "439380"
  },
  {
    "text": "the environment update is successfully",
    "start": "439380",
    "end": "440819"
  },
  {
    "text": "completed",
    "start": "440819",
    "end": "442020"
  },
  {
    "text": "so we can now try to go to this",
    "start": "442020",
    "end": "444419"
  },
  {
    "text": "link",
    "start": "444419",
    "end": "445680"
  },
  {
    "text": "and sure enough our sites is working",
    "start": "445680",
    "end": "449699"
  },
  {
    "text": "now if we head back to",
    "start": "449699",
    "end": "451680"
  },
  {
    "text": "elastic Beanstalk we can see that the",
    "start": "451680",
    "end": "453479"
  },
  {
    "text": "platform here says.net core running on",
    "start": "453479",
    "end": "455580"
  },
  {
    "text": "Amazon Linux",
    "start": "455580",
    "end": "457080"
  },
  {
    "text": "and just to go to prove the point let's",
    "start": "457080",
    "end": "459660"
  },
  {
    "text": "go to ec2 and check out the instances",
    "start": "459660",
    "end": "461940"
  },
  {
    "text": "that are running",
    "start": "461940",
    "end": "463800"
  },
  {
    "text": "in here we see that there are two",
    "start": "463800",
    "end": "465180"
  },
  {
    "text": "instances named as per the environment",
    "start": "465180",
    "end": "467819"
  },
  {
    "text": "name that we've configured",
    "start": "467819",
    "end": "470220"
  },
  {
    "text": "and they are spread across two different",
    "start": "470220",
    "end": "472259"
  },
  {
    "text": "subnets in two availability service and",
    "start": "472259",
    "end": "475259"
  },
  {
    "text": "if you go through the instance property",
    "start": "475259",
    "end": "476520"
  },
  {
    "text": "and sure enough this is the Linux",
    "start": "476520",
    "end": "479160"
  },
  {
    "text": "instance",
    "start": "479160",
    "end": "481080"
  },
  {
    "text": "now to show high availability let's see",
    "start": "481080",
    "end": "483300"
  },
  {
    "text": "what happens if we try to disseminate",
    "start": "483300",
    "end": "484620"
  },
  {
    "text": "one of these instances",
    "start": "484620",
    "end": "487340"
  },
  {
    "text": "now after this instance is terminated in",
    "start": "490919",
    "end": "493319"
  },
  {
    "text": "a moment you should see that the load",
    "start": "493319",
    "end": "495599"
  },
  {
    "text": "balancer is going to try to spin up",
    "start": "495599",
    "end": "497220"
  },
  {
    "text": "another instance to confirm to the two",
    "start": "497220",
    "end": "498660"
  },
  {
    "text": "instance minimum that we have configured",
    "start": "498660",
    "end": "499979"
  },
  {
    "text": "in the elastic Beanstalk environment",
    "start": "499979",
    "end": "502440"
  },
  {
    "text": "so if you go to our load balancer",
    "start": "502440",
    "end": "505560"
  },
  {
    "text": "we can see that this load balancer",
    "start": "505560",
    "end": "507240"
  },
  {
    "text": "boards traffic to this target group",
    "start": "507240",
    "end": "510479"
  },
  {
    "text": "and in the Target group we now see one",
    "start": "510479",
    "end": "512880"
  },
  {
    "text": "instance",
    "start": "512880",
    "end": "515240"
  },
  {
    "text": "you can see that another instance is",
    "start": "515459",
    "end": "517680"
  },
  {
    "text": "being initialized because we terminated",
    "start": "517680",
    "end": "519360"
  },
  {
    "text": "one instance",
    "start": "519360",
    "end": "522140"
  },
  {
    "text": "as we refresh this view we can now see",
    "start": "523260",
    "end": "525300"
  },
  {
    "text": "that both instances are healthy",
    "start": "525300",
    "end": "527640"
  },
  {
    "text": "and if we go back to elastic bin stock",
    "start": "527640",
    "end": "530519"
  },
  {
    "text": "let's check our application again and",
    "start": "530519",
    "end": "532320"
  },
  {
    "text": "surely not it's still working",
    "start": "532320",
    "end": "534600"
  },
  {
    "text": "now if you go back to the environments",
    "start": "534600",
    "end": "536100"
  },
  {
    "text": "view remember that we configured lock",
    "start": "536100",
    "end": "537420"
  },
  {
    "text": "screen",
    "start": "537420",
    "end": "539660"
  },
  {
    "text": "under the configuration here",
    "start": "540720",
    "end": "544160"
  },
  {
    "text": "if we go to this log group it will take",
    "start": "545940",
    "end": "548040"
  },
  {
    "text": "us to cloudwatch",
    "start": "548040",
    "end": "551180"
  },
  {
    "text": "and in this log group within this lock",
    "start": "552540",
    "end": "556200"
  },
  {
    "text": "you should be able to see all of our",
    "start": "556200",
    "end": "558540"
  },
  {
    "text": "application logs as expected",
    "start": "558540",
    "end": "560760"
  },
  {
    "text": "I encourage you to check out the",
    "start": "560760",
    "end": "562320"
  },
  {
    "text": "documentation and tutorial links in the",
    "start": "562320",
    "end": "564300"
  },
  {
    "text": "video description below thank you for",
    "start": "564300",
    "end": "566040"
  },
  {
    "text": "watching I hope you found this useful",
    "start": "566040",
    "end": "569660"
  }
]