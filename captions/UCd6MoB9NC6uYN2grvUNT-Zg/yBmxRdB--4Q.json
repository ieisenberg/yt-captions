[
  {
    "start": "0",
    "end": "14000"
  },
  {
    "text": "[Music]",
    "start": "0",
    "end": "2750"
  },
  {
    "text": "hi my name is a McMartin",
    "start": "2750",
    "end": "5460"
  },
  {
    "text": "I'm a senior Solutions Architect with a",
    "start": "5460",
    "end": "7020"
  },
  {
    "text": "double esteem and in this video I'm",
    "start": "7020",
    "end": "8940"
  },
  {
    "text": "going to show you how to use Amazon",
    "start": "8940",
    "end": "10650"
  },
  {
    "text": "Translate service through dotnet let's",
    "start": "10650",
    "end": "12509"
  },
  {
    "text": "get started so this is a simple asp.net",
    "start": "12509",
    "end": "16590"
  },
  {
    "start": "14000",
    "end": "55000"
  },
  {
    "text": "core application that is hosted on",
    "start": "16590",
    "end": "18630"
  },
  {
    "text": "elastic Beanstalk",
    "start": "18630",
    "end": "20279"
  },
  {
    "text": "this is blogging website that can",
    "start": "20279",
    "end": "22890"
  },
  {
    "text": "convert english-language text to",
    "start": "22890",
    "end": "24420"
  },
  {
    "text": "spanish-language content so basically",
    "start": "24420",
    "end": "26699"
  },
  {
    "text": "the architecture is that we have an",
    "start": "26699",
    "end": "30359"
  },
  {
    "text": "asp.net website based redundant core",
    "start": "30359",
    "end": "32250"
  },
  {
    "text": "website that's hosted on elastic",
    "start": "32250",
    "end": "33630"
  },
  {
    "text": "Beanstalk which is uploading files of",
    "start": "33630",
    "end": "36750"
  },
  {
    "text": "this content to Amazon s3 a lambda",
    "start": "36750",
    "end": "40050"
  },
  {
    "text": "function picks up based on the event",
    "start": "40050",
    "end": "43350"
  },
  {
    "text": "trigger does happens on s3 and and calls",
    "start": "43350",
    "end": "46050"
  },
  {
    "text": "Amazon translate function to translate",
    "start": "46050",
    "end": "48120"
  },
  {
    "text": "this content to Spanish and writes the",
    "start": "48120",
    "end": "50460"
  },
  {
    "text": "files back into a different folder on",
    "start": "50460",
    "end": "52980"
  },
  {
    "text": "the same s3 bucket",
    "start": "52980",
    "end": "54210"
  },
  {
    "text": "I imagine you having a web site that can",
    "start": "54210",
    "end": "56670"
  },
  {
    "start": "55000",
    "end": "218000"
  },
  {
    "text": "host blog posts and you don't have to",
    "start": "56670",
    "end": "58770"
  },
  {
    "text": "and Spanish or other language users can",
    "start": "58770",
    "end": "60960"
  },
  {
    "text": "obviously see the content in their own",
    "start": "60960",
    "end": "62910"
  },
  {
    "text": "language so you can easily go to the",
    "start": "62910",
    "end": "64948"
  },
  {
    "text": "Spanish language content by adding a",
    "start": "64949",
    "end": "67290"
  },
  {
    "text": "query string lying equal to es and it",
    "start": "67290",
    "end": "72299"
  },
  {
    "text": "shows the Spanish content now what I'm",
    "start": "72299",
    "end": "74400"
  },
  {
    "text": "gonna do is I'm gonna go back to the",
    "start": "74400",
    "end": "75900"
  },
  {
    "text": "home page of the English language a page",
    "start": "75900",
    "end": "79049"
  },
  {
    "text": "and add a new post and see how this",
    "start": "79049",
    "end": "81630"
  },
  {
    "text": "works I have some sample content here",
    "start": "81630",
    "end": "84030"
  },
  {
    "text": "I'm going to copy paste in the content a",
    "start": "84030",
    "end": "87509"
  },
  {
    "text": "text box and a seis all our system and",
    "start": "87509",
    "end": "92090"
  },
  {
    "text": "submit there you go",
    "start": "92090",
    "end": "94409"
  },
  {
    "text": "the post got created successfully if I",
    "start": "94409",
    "end": "96720"
  },
  {
    "text": "go to a home page I can see that the new",
    "start": "96720",
    "end": "99680"
  },
  {
    "text": "content already exists there now let's",
    "start": "99680",
    "end": "102390"
  },
  {
    "text": "go check the Spanish language car",
    "start": "102390",
    "end": "104280"
  },
  {
    "text": "website and see if that exists there you",
    "start": "104280",
    "end": "108060"
  },
  {
    "text": "go so we are on the AWS console and we",
    "start": "108060",
    "end": "111000"
  },
  {
    "text": "are inside the s3 bucket the website",
    "start": "111000",
    "end": "113520"
  },
  {
    "text": "uses to upload the files we have two",
    "start": "113520",
    "end": "115259"
  },
  {
    "text": "folders in it",
    "start": "115259",
    "end": "116009"
  },
  {
    "text": "one is en and es en is for English es s",
    "start": "116009",
    "end": "119070"
  },
  {
    "text": "or Spanish inside en you will see two",
    "start": "119070",
    "end": "121229"
  },
  {
    "text": "files text files these files contain the",
    "start": "121229",
    "end": "123869"
  },
  {
    "text": "actual blog post content itself isn't",
    "start": "123869",
    "end": "126810"
  },
  {
    "text": "and if you go to es there are two files",
    "start": "126810",
    "end": "129690"
  },
  {
    "text": "these files contain the actual blog post",
    "start": "129690",
    "end": "132510"
  },
  {
    "text": "content in Spanish let's go to lambda",
    "start": "132510",
    "end": "134910"
  },
  {
    "text": "and see how lambda function is",
    "start": "134910",
    "end": "137280"
  },
  {
    "text": "configured translate batch is the lambda",
    "start": "137280",
    "end": "139680"
  },
  {
    "text": "function that we use here you can see",
    "start": "139680",
    "end": "142650"
  },
  {
    "text": "that s3 has been already configured to",
    "start": "142650",
    "end": "145190"
  },
  {
    "text": "trigger the lambda function let's see",
    "start": "145190",
    "end": "149190"
  },
  {
    "text": "what the s3 event is configured to the",
    "start": "149190",
    "end": "151500"
  },
  {
    "text": "event type this object created which",
    "start": "151500",
    "end": "153000"
  },
  {
    "text": "basically means anytime any file is",
    "start": "153000",
    "end": "154800"
  },
  {
    "text": "uploaded to a folder with prefix en the",
    "start": "154800",
    "end": "158940"
  },
  {
    "text": "event will be triggered and that event",
    "start": "158940",
    "end": "160800"
  },
  {
    "text": "will will cause the lambda function to",
    "start": "160800",
    "end": "163080"
  },
  {
    "text": "start execution let's go see the",
    "start": "163080",
    "end": "165480"
  },
  {
    "text": "translate batch lambda function here we",
    "start": "165480",
    "end": "167910"
  },
  {
    "text": "are going to see every property just as",
    "start": "167910",
    "end": "170190"
  },
  {
    "text": "it is as default for this demo purpose",
    "start": "170190",
    "end": "172500"
  },
  {
    "text": "we are going to focus on the I am role",
    "start": "172500",
    "end": "175739"
  },
  {
    "text": "that is associated for this function",
    "start": "175739",
    "end": "177540"
  },
  {
    "text": "let's go - I am home page and click on",
    "start": "177540",
    "end": "186440"
  },
  {
    "text": "roles and let's search for lambda exec",
    "start": "186440",
    "end": "192750"
  },
  {
    "text": "and this is the I am role that was",
    "start": "192750",
    "end": "195030"
  },
  {
    "text": "associated to click on that and it shows",
    "start": "195030",
    "end": "197850"
  },
  {
    "text": "the policies there are two policies",
    "start": "197850",
    "end": "199350"
  },
  {
    "text": "associated with it",
    "start": "199350",
    "end": "200700"
  },
  {
    "text": "one is Amazon s3 full access and",
    "start": "200700",
    "end": "202650"
  },
  {
    "text": "translate read only Amazon s3 full",
    "start": "202650",
    "end": "205049"
  },
  {
    "text": "access allows the lambda function to",
    "start": "205049",
    "end": "206760"
  },
  {
    "text": "read and write objects into s3 bucket",
    "start": "206760",
    "end": "208680"
  },
  {
    "text": "and translate read only allows the",
    "start": "208680",
    "end": "210630"
  },
  {
    "text": "lambda function to invoke the Amazon",
    "start": "210630",
    "end": "214260"
  },
  {
    "text": "Translate service to perform translation",
    "start": "214260",
    "end": "216480"
  },
  {
    "text": "from English to Spanish alright so we",
    "start": "216480",
    "end": "219750"
  },
  {
    "start": "218000",
    "end": "367000"
  },
  {
    "text": "are in the lambda project and this",
    "start": "219750",
    "end": "222000"
  },
  {
    "text": "project has to nougat package that I've",
    "start": "222000",
    "end": "224489"
  },
  {
    "text": "added the Amazon s3 library and the",
    "start": "224489",
    "end": "228180"
  },
  {
    "text": "Amazon Translate library these two",
    "start": "228180",
    "end": "230370"
  },
  {
    "text": "packages are used for translating the",
    "start": "230370",
    "end": "233760"
  },
  {
    "text": "content and also uploading files to s3",
    "start": "233760",
    "end": "235560"
  },
  {
    "text": "let's go to function dot CS and see what",
    "start": "235560",
    "end": "237959"
  },
  {
    "text": "it has there's just one function this",
    "start": "237959",
    "end": "240870"
  },
  {
    "text": "one function handler here which takes s3",
    "start": "240870",
    "end": "242970"
  },
  {
    "text": "event object as input and ilambda",
    "start": "242970",
    "end": "244829"
  },
  {
    "text": "context object as another input here we",
    "start": "244829",
    "end": "247799"
  },
  {
    "text": "use Amazon s3 client class to import the",
    "start": "247799",
    "end": "251640"
  },
  {
    "text": "gate object async method by passing in",
    "start": "251640",
    "end": "253829"
  },
  {
    "text": "the request object and the request",
    "start": "253829",
    "end": "255480"
  },
  {
    "text": "object itself has a bucket name and key",
    "start": "255480",
    "end": "258329"
  },
  {
    "text": "the bucket name and key",
    "start": "258330",
    "end": "259769"
  },
  {
    "text": "properties have been populated values",
    "start": "259769",
    "end": "261959"
  },
  {
    "text": "that came through as three event object",
    "start": "261959",
    "end": "264330"
  },
  {
    "text": "that came in as a parameter we convert",
    "start": "264330",
    "end": "266190"
  },
  {
    "text": "that to a memory stream and keep it",
    "start": "266190",
    "end": "267569"
  },
  {
    "text": "ready for the processing we use Amazon s",
    "start": "267569",
    "end": "270030"
  },
  {
    "text": "Amazon Translate client class and do the",
    "start": "270030",
    "end": "272940"
  },
  {
    "text": "translation process here we go through",
    "start": "272940",
    "end": "275430"
  },
  {
    "text": "the list of languages that we need to",
    "start": "275430",
    "end": "277440"
  },
  {
    "text": "convert to in this case we have only in",
    "start": "277440",
    "end": "279870"
  },
  {
    "text": "only Spanish so that this fall loop will",
    "start": "279870",
    "end": "282750"
  },
  {
    "text": "be executed just once in this we invoked",
    "start": "282750",
    "end": "285150"
  },
  {
    "text": "translate text async method and pass in",
    "start": "285150",
    "end": "288569"
  },
  {
    "text": "translate text text request class which",
    "start": "288569",
    "end": "291180"
  },
  {
    "text": "has text source language code and target",
    "start": "291180",
    "end": "294120"
  },
  {
    "text": "language port as parameters the text",
    "start": "294120",
    "end": "296280"
  },
  {
    "text": "contains the actual content that needs",
    "start": "296280",
    "end": "298470"
  },
  {
    "text": "to be translated and here we're saying",
    "start": "298470",
    "end": "300270"
  },
  {
    "text": "this the source language is English the",
    "start": "300270",
    "end": "302069"
  },
  {
    "text": "target language is Spanish then we we",
    "start": "302069",
    "end": "305490"
  },
  {
    "text": "invoke put object async method of the s3",
    "start": "305490",
    "end": "308340"
  },
  {
    "text": "client class and pass in the put object",
    "start": "308340",
    "end": "310710"
  },
  {
    "text": "request object in it so that object",
    "start": "310710",
    "end": "314130"
  },
  {
    "text": "itself has content body bucket name and",
    "start": "314130",
    "end": "316259"
  },
  {
    "text": "key has parameters so the content body",
    "start": "316259",
    "end": "318719"
  },
  {
    "text": "is the content that that was translated",
    "start": "318719",
    "end": "321780"
  },
  {
    "text": "this case it's Spanish the bucket name",
    "start": "321780",
    "end": "323580"
  },
  {
    "text": "will be the bucket name that we",
    "start": "323580",
    "end": "324960"
  },
  {
    "text": "identified from the s3 event parameter",
    "start": "324960",
    "end": "327060"
  },
  {
    "text": "and the key would be es because it easy",
    "start": "327060",
    "end": "331259"
  },
  {
    "text": "to put the es holder so we are replacing",
    "start": "331259",
    "end": "332759"
  },
  {
    "text": "that stream en with the es and this",
    "start": "332759",
    "end": "335370"
  },
  {
    "text": "whole the the larger string that came",
    "start": "335370",
    "end": "337229"
  },
  {
    "text": "from the s3 human parameter and that's",
    "start": "337229",
    "end": "339630"
  },
  {
    "text": "about it",
    "start": "339630",
    "end": "340080"
  },
  {
    "text": "it returns complete and you can easily",
    "start": "340080",
    "end": "342599"
  },
  {
    "text": "deploy this lambda function by going to",
    "start": "342599",
    "end": "345139"
  },
  {
    "text": "solution Explorer right click and",
    "start": "345139",
    "end": "347580"
  },
  {
    "text": "publish to AWS lambda and clicking on",
    "start": "347580",
    "end": "350509"
  },
  {
    "text": "next just following through the visit",
    "start": "350509",
    "end": "352830"
  },
  {
    "text": "and clicking on upload that's it the",
    "start": "352830",
    "end": "355800"
  },
  {
    "text": "project is on its way to deployment",
    "start": "355800",
    "end": "357870"
  },
  {
    "text": "in this video we covered how to use",
    "start": "357870",
    "end": "360509"
  },
  {
    "text": "Amazon translate service through dotnet",
    "start": "360509",
    "end": "362219"
  },
  {
    "text": "hope you found it useful thanks for",
    "start": "362219",
    "end": "364050"
  },
  {
    "text": "watching",
    "start": "364050",
    "end": "364690"
  },
  {
    "text": "[Music]",
    "start": "364690",
    "end": "369279"
  }
]