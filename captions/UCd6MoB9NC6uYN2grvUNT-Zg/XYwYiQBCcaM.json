[
  {
    "start": "0",
    "end": "26000"
  },
  {
    "text": "hello and welcome thank you for attending today's session from mainframe to micro services Vanguard's journey",
    "start": "2210",
    "end": "9679"
  },
  {
    "text": "Vanguard's moved to the cloud my name is Ilya Epstein I'm an enterprise Solutions Architect with AWS",
    "start": "9679",
    "end": "15540"
  },
  {
    "text": "I'm joined by Barry shirred the chief Enterprise Architect from Vanguard I had",
    "start": "15540",
    "end": "21449"
  },
  {
    "text": "the pleasure of working with Vanguard's team for the last two years on their cloud journey many of the customers that",
    "start": "21449",
    "end": "28680"
  },
  {
    "start": "26000",
    "end": "60000"
  },
  {
    "text": "I work with have mainframe systems and those mainframe systems have centralized data stores and monolithic applications",
    "start": "28680",
    "end": "34969"
  },
  {
    "text": "a lot of those customers want to move the mainframes to the cloud so we're going to talk about some of the modernization approaches of how you can",
    "start": "34969",
    "end": "41850"
  },
  {
    "text": "move mainframes to the cloud and how you could what are some of the key considerations then Barry's gonna do a",
    "start": "41850",
    "end": "48180"
  },
  {
    "text": "deep dive into the Vanguard's cloud data architecture and he's gonna talk about the strangulation pattern that they're",
    "start": "48180",
    "end": "53520"
  },
  {
    "text": "leveraging and he's gonna share a lot of the benefits and lessons learned hopefully that you could take back to",
    "start": "53520",
    "end": "58620"
  },
  {
    "text": "your organization's so for most customers a journey to the cloud is also",
    "start": "58620",
    "end": "64680"
  },
  {
    "start": "60000",
    "end": "168000"
  },
  {
    "text": "a journey to micro services although there may not be a precise definition of",
    "start": "64680",
    "end": "69960"
  },
  {
    "text": "what a micro service is there are some very common characteristics so for example my cursor versus typically have",
    "start": "69960",
    "end": "77280"
  },
  {
    "text": "reusable modules that are Bill deployed independent micro services typically",
    "start": "77280",
    "end": "82290"
  },
  {
    "text": "communicate with each other through an API interface they're usually organized around the capabilities of that make of",
    "start": "82290",
    "end": "90360"
  },
  {
    "text": "their micro service or the business versus the specific technology stack so what you often will see instead of",
    "start": "90360",
    "end": "95759"
  },
  {
    "text": "having teams that are UI based or middleware based or database the micro services teams are organized around that",
    "start": "95759",
    "end": "103500"
  },
  {
    "text": "specific micro service so at Amazon for example we call that the two Pizza teams micro services will typically own their",
    "start": "103500",
    "end": "110009"
  },
  {
    "text": "domain logic and they'll have the centralized governance and data stores from a data store perspective a lot of",
    "start": "110009",
    "end": "117000"
  },
  {
    "text": "times the each micro service will leverage the data store of its choice so",
    "start": "117000",
    "end": "122369"
  },
  {
    "text": "if no sequel makes more sense or if a relational database makes more sense for specific micro services you will usually",
    "start": "122369",
    "end": "128670"
  },
  {
    "text": "use the data store that actually makes sense and then you're also going to start seeing a lot of the",
    "start": "128670",
    "end": "133950"
  },
  {
    "text": "centralized data governance right so you Barry's gonna talk about concepts like bounded bounded context and he's gonna",
    "start": "133950",
    "end": "141150"
  },
  {
    "text": "talk about eventual consistencies those are some of the things that you see when customers move to micro services micro",
    "start": "141150",
    "end": "147690"
  },
  {
    "text": "services are almost always deployed in an automated way so this is where you're going to have continuous integration and",
    "start": "147690",
    "end": "153090"
  },
  {
    "text": "hopefully continuous delivery and they have to be designed for failure right so there is definitely a lot more stress",
    "start": "153090",
    "end": "159630"
  },
  {
    "text": "that has to be put into testing your clients because micro services could fail so you need to make sure that your",
    "start": "159630",
    "end": "165180"
  },
  {
    "text": "application and your clients could respond to those failures I think from",
    "start": "165180",
    "end": "170310"
  },
  {
    "start": "168000",
    "end": "200000"
  },
  {
    "text": "it benefits going to micro services I think it's pretty obvious it removes the business logic and data logic from your",
    "start": "170310",
    "end": "176790"
  },
  {
    "text": "applications it helps customers eliminate the technical debt as they move to the cloud and it helps you",
    "start": "176790",
    "end": "183299"
  },
  {
    "text": "eliminate the monolithic bottlenecks right because each micro services team could operate independently could have",
    "start": "183299",
    "end": "190079"
  },
  {
    "text": "their own deployment schedules and there's just not a lot of dependencies across the teams and what customers are",
    "start": "190079",
    "end": "197040"
  },
  {
    "text": "trying to achieve is they're trying to improve the developer velocity so this all sounds great right but how do you get there if you",
    "start": "197040",
    "end": "204060"
  },
  {
    "start": "200000",
    "end": "222000"
  },
  {
    "text": "are running mainframes if you have monolithic applications centralized data stores a single CI CD pipeline maybe two",
    "start": "204060",
    "end": "211079"
  },
  {
    "text": "three releases a year so how do you get to the cloud unfortunately there's still",
    "start": "211079",
    "end": "216450"
  },
  {
    "text": "no announcement around just lifting and shifting a mainframe to the cloud so what are some of the approaches so the",
    "start": "216450",
    "end": "223620"
  },
  {
    "start": "222000",
    "end": "396000"
  },
  {
    "text": "good news is that there are successful patterns out there over the last couple of years we've seen some really great",
    "start": "223620",
    "end": "228959"
  },
  {
    "text": "things from a lot of a lot has to do with our partners and some of our",
    "start": "228959",
    "end": "234090"
  },
  {
    "text": "customers have had great successes in these approaches so for example one approach could be a repost approach what",
    "start": "234090",
    "end": "240090"
  },
  {
    "text": "a riho step roach does is it for the most part maintains your Kobo code nothing changes from that perspective",
    "start": "240090",
    "end": "245870"
  },
  {
    "text": "but what you will do is you will recompile that code on a permanent emulator that you'll run on ec2 so you",
    "start": "245870",
    "end": "253049"
  },
  {
    "text": "are tied to an emulator you will also need some third-party tools to control things like printing and maybe access to",
    "start": "253049",
    "end": "259049"
  },
  {
    "text": "storage but there is a way to Rijos that mainframe and there's some third-party",
    "start": "259049",
    "end": "264800"
  },
  {
    "text": "solutions that do that of course you know some of the challenges with that type of approach that we'll talk",
    "start": "264800",
    "end": "270960"
  },
  {
    "text": "about is that you may not be gaining the full value of the cloud there are also multiple reengineering",
    "start": "270960",
    "end": "276630"
  },
  {
    "text": "options and they're kind of different subcategories in that area right so one approach could be refactoring we have",
    "start": "276630",
    "end": "283050"
  },
  {
    "text": "some partners in the space which are providing tools that will actually actually do automatic code conversion",
    "start": "283050",
    "end": "289500"
  },
  {
    "text": "and they'll try to refactor it so this is not a lift and shift what they're actually doing is they're analyzing the",
    "start": "289500",
    "end": "295620"
  },
  {
    "text": "application model of your mainframe and then they're trying to create a similar application model leveraging AWS native",
    "start": "295620",
    "end": "302280"
  },
  {
    "text": "services so this could give you access to my cursor versus it could give you access to higher-level",
    "start": "302280",
    "end": "307580"
  },
  {
    "text": "AWS managed services and in some cases that code conversion could be done",
    "start": "307580",
    "end": "313110"
  },
  {
    "text": "automatic there are also options of course to manually rewrite your micro services over your functionality into",
    "start": "313110",
    "end": "319830"
  },
  {
    "text": "micro services over time and then there's a whole bunch of different data driven approaches as well so for example",
    "start": "319830",
    "end": "327150"
  },
  {
    "text": "you know migration of the job of batch jobs right so we are you could potentially be streaming data from your",
    "start": "327150",
    "end": "333599"
  },
  {
    "text": "centralized data store or you could be moving files that say your VM files into s3 and then just implement implementing",
    "start": "333599",
    "end": "340530"
  },
  {
    "text": "certain aspects like batch reporting it could also be analytics capabilities",
    "start": "340530",
    "end": "345900"
  },
  {
    "text": "where you're taking that data moving it to the cloud and then performing your analytics in the cloud those are all",
    "start": "345900",
    "end": "351419"
  },
  {
    "text": "aspects of re-engineering Reap lat form could be an option this is really",
    "start": "351419",
    "end": "357000"
  },
  {
    "text": "specifically if you're running your mainframe with Linux I think about 75% of z/os mainframes are actually",
    "start": "357000",
    "end": "364680"
  },
  {
    "text": "leveraging some Linux so if you have linux and java applications on your mainframe you could potentially do some",
    "start": "364680",
    "end": "371190"
  },
  {
    "text": "replant and run that on ec2 and then of course there's repurchase and retire where some",
    "start": "371190",
    "end": "376440"
  },
  {
    "text": "of the functionality will simply be sunset over time either by SAS solutions or new functionality that you develop",
    "start": "376440",
    "end": "383130"
  },
  {
    "text": "for most customers it's a combination of all of these approaches right some",
    "start": "383130",
    "end": "388139"
  },
  {
    "text": "functionality will naturally be retired some of it will be read maybe we host it and some of it could be",
    "start": "388139",
    "end": "394530"
  },
  {
    "text": "reap lat form there are a lot of considerations to think about right",
    "start": "394530",
    "end": "401520"
  },
  {
    "start": "396000",
    "end": "515000"
  },
  {
    "text": "things like risk and impact to your operations but two of the factors that I",
    "start": "401520",
    "end": "407640"
  },
  {
    "text": "also want to call out our cloud business value and the time it takes to do the",
    "start": "407640",
    "end": "412920"
  },
  {
    "text": "migrations right or to do the modernization so if we look for example at a Rijo stop ssin from an operational",
    "start": "412920",
    "end": "419490"
  },
  {
    "text": "perspective it's probably the least amount of risk it's also doesn't require you up your team's to you know retool as",
    "start": "419490",
    "end": "426330"
  },
  {
    "text": "much but when you're doing a repost you really are not taking the full value of the cloud right because you're running",
    "start": "426330",
    "end": "432120"
  },
  {
    "text": "in this emulator environment you're not using micro services you're not using some of the AWS manage services you",
    "start": "432120",
    "end": "440400"
  },
  {
    "text": "really are not getting a lot of value but you could get to the migration pretty fast and sometimes when customers",
    "start": "440400",
    "end": "445500"
  },
  {
    "text": "have things like you know data center closures and they just simply need to get out and move to the cloud they'll",
    "start": "445500",
    "end": "451410"
  },
  {
    "text": "take that approach with refactoring automatic let's say code conversion",
    "start": "451410",
    "end": "456620"
  },
  {
    "text": "you'll definitely be running in need of AWS services so that allows you to then",
    "start": "456620",
    "end": "462000"
  },
  {
    "text": "get more business value from the cloud but of course the timing could be a",
    "start": "462000",
    "end": "467010"
  },
  {
    "text": "little bit more for example then free host and then of course rewriting you know that's where you get the most value",
    "start": "467010",
    "end": "473310"
  },
  {
    "text": "because you're doing things in the most cloud native way possible and you're making new decisions as you rewriting",
    "start": "473310",
    "end": "479190"
  },
  {
    "text": "the code but of course that's a typically a multi-year journey the good",
    "start": "479190",
    "end": "484560"
  },
  {
    "text": "news is we do have professional services team and partner teams that actually have expertise in each one of these",
    "start": "484560",
    "end": "491040"
  },
  {
    "text": "areas so we could definitely help in that space but we also have customer successes in each one of these",
    "start": "491040",
    "end": "496380"
  },
  {
    "text": "approaches for today's session we're primarily going to talk about re-engineering and the focus is going to",
    "start": "496380",
    "end": "502560"
  },
  {
    "text": "be on kind of data driven re-engineering and the approach that the Vanguard team is going to be taking is going to focus",
    "start": "502560",
    "end": "508320"
  },
  {
    "text": "on you know focusing on the data and then potentially rewriting some of the code into micro services so Martin",
    "start": "508320",
    "end": "518219"
  },
  {
    "start": "515000",
    "end": "583000"
  },
  {
    "text": "Fowler I think every tech conference has martin fowler slide he had a great",
    "start": "518219",
    "end": "523469"
  },
  {
    "text": "observation I think he's the first one that coined the term the strangler pattern what he was doing is he he was",
    "start": "523469",
    "end": "529680"
  },
  {
    "text": "in a Australian rainforest and he observed these fig trees that had these vines what happens is a I think a",
    "start": "529680",
    "end": "537390"
  },
  {
    "text": "bird or a bad will put a seed on an upper branches of a tree and it'll start",
    "start": "537390",
    "end": "542820"
  },
  {
    "text": "putting vines all the way down to the soil and over time you have these hundreds and thousands of vines that go all the way down to the soil and",
    "start": "542820",
    "end": "549240"
  },
  {
    "text": "eventually they actually cover up the host tree entirely and then on the soil",
    "start": "549240",
    "end": "555060"
  },
  {
    "text": "level they actually end up competing for the nourishment and then eventually the host tree actually dies and you",
    "start": "555060",
    "end": "561690"
  },
  {
    "text": "basically have this new fig tree with a hollow insight so he basically made an observation to take the same approach",
    "start": "561690",
    "end": "568200"
  },
  {
    "text": "for monolithic to microservices migrations where you're going to develop",
    "start": "568200",
    "end": "573540"
  },
  {
    "text": "a new system around the edges and over time more and more functionality will move to that new system and that",
    "start": "573540",
    "end": "579560"
  },
  {
    "text": "original old system will eventually be strangled so on a high level what does",
    "start": "579560",
    "end": "585720"
  },
  {
    "start": "583000",
    "end": "684000"
  },
  {
    "text": "that mean so if you have your monolithic yet say your mainframe with a centralized data store and a monolithic",
    "start": "585720",
    "end": "592230"
  },
  {
    "text": "application and you have your users accessing your application through a browser over time you'll develop a micro",
    "start": "592230",
    "end": "598890"
  },
  {
    "text": "service that micro services potentially could have its own data store and then you'll put some type of a proxy tier in",
    "start": "598890",
    "end": "604320"
  },
  {
    "text": "front of it or an API tier and you'll redirect users to the new functionality and then of course over time you're",
    "start": "604320",
    "end": "611160"
  },
  {
    "text": "going to build more and more of these services to a point where more of that functionality is using the new",
    "start": "611160",
    "end": "617160"
  },
  {
    "text": "capabilities and then the old system becomes strangled the challenge we see",
    "start": "617160",
    "end": "623310"
  },
  {
    "text": "sometimes is depending on how that's implemented it doesn't actually always leave to strangulation because depending",
    "start": "623310",
    "end": "629220"
  },
  {
    "text": "on how these new micro services are developed you still could have a lot of dependencies either on the actual",
    "start": "629220",
    "end": "634710"
  },
  {
    "text": "monolithic code or potentially even just the monolithic centralized data store so",
    "start": "634710",
    "end": "640470"
  },
  {
    "text": "in practice we are seeing sometimes customers have challenged where that actually is not achieved so the approach",
    "start": "640470",
    "end": "646710"
  },
  {
    "text": "that Barry's going to talk about is the approach of focusing on the data right where you actually figure out a way how",
    "start": "646710",
    "end": "653280"
  },
  {
    "text": "you could get the data to the cloud and where your micro services are actually",
    "start": "653280",
    "end": "658500"
  },
  {
    "text": "leveraging the native data stores in the cloud and all of your rights are you not",
    "start": "658500",
    "end": "665640"
  },
  {
    "text": "doing directly to necessarily rights to the mainframe you're leveraging things like eventual consistency is bound the context and",
    "start": "665640",
    "end": "671440"
  },
  {
    "text": "where you don't have that tight dependencies to the on-prem data store or the monolithic code and that's",
    "start": "671440",
    "end": "678010"
  },
  {
    "text": "approach that bear is going to talk about and with that I want to introduce Barry who's gonna do a deeper dive in the vanguard cloud data architecture",
    "start": "678010",
    "end": "686250"
  },
  {
    "start": "684000",
    "end": "730000"
  },
  {
    "text": "[Applause] Thanks Thank You Ilya so I'm very sure",
    "start": "686960",
    "end": "695320"
  },
  {
    "text": "Keefe Enterprise Architect at Vanguard I work in a team called the cloud",
    "start": "695320",
    "end": "701020"
  },
  {
    "text": "construction team which is part of the CTO office we're gonna be starting off",
    "start": "701020",
    "end": "706240"
  },
  {
    "text": "talking a little bit about our legacy infrastructure what we have at the moment what we're hoping to move from",
    "start": "706240",
    "end": "712570"
  },
  {
    "text": "working to move from then we're going to start talking about some of the various",
    "start": "712570",
    "end": "718120"
  },
  {
    "text": "architectures that we put together to help us move from mainframe to micro services and then finally we talked a",
    "start": "718120",
    "end": "724630"
  },
  {
    "text": "little about lessons learned and things to bear in mind us you make the journey",
    "start": "724630",
    "end": "731670"
  },
  {
    "start": "730000",
    "end": "894000"
  },
  {
    "text": "first just enough about Vanguard to give you some context of the organization so",
    "start": "731670",
    "end": "737650"
  },
  {
    "text": "I like to joke that we're a small investments company we actually have over four trillion dollars worth of assets under management",
    "start": "737650",
    "end": "744340"
  },
  {
    "text": "they should tell you two basic things about the organization firstly we're very conscious of security particularly",
    "start": "744340",
    "end": "751540"
  },
  {
    "text": "fiber security making sure that we're well protected and the second thing is we're very highly regulated so",
    "start": "751540",
    "end": "758310"
  },
  {
    "text": "organizations such as the SEC and FINRA will monitor us make sure that our",
    "start": "758310",
    "end": "763980"
  },
  {
    "text": "computation is both timely and accurate if we don't get things timely and",
    "start": "763980",
    "end": "769300"
  },
  {
    "text": "accurate best case we get irate customer phone calls that we need to spend money",
    "start": "769300",
    "end": "774880"
  },
  {
    "text": "in order to process worst case we get fined by organizations the regular two",
    "start": "774880",
    "end": "780880"
  },
  {
    "text": "regulators and we can sometimes end up on the front page of The Wall Street Journal which is never a good thing if",
    "start": "780880",
    "end": "788530"
  },
  {
    "text": "you're not there for the right reasons we have founded 40 years ago",
    "start": "788530",
    "end": "794700"
  },
  {
    "text": "so basically we've seen every generation of IT from mainframe micro serve",
    "start": "794700",
    "end": "801410"
  },
  {
    "text": "mini-computers client-server service ordering oriented architecture and micro",
    "start": "801410",
    "end": "807949"
  },
  {
    "text": "services now moving on towards cloud don't let my accent fool you",
    "start": "807949",
    "end": "813889"
  },
  {
    "text": "we are us-based just outside of Philadelphia in in Pennsylvania and it",
    "start": "813889",
    "end": "819679"
  },
  {
    "text": "occurred to me a couple of days ago that 40 years ago our founder had the forethought to locate us almost exactly",
    "start": "819679",
    "end": "826999"
  },
  {
    "text": "halfway between Wall Street in New York and the future home of Amazon's Us East",
    "start": "826999",
    "end": "832970"
  },
  {
    "text": "one data centers we have number of different lines of business two of our",
    "start": "832970",
    "end": "839059"
  },
  {
    "text": "largest are the retail line of business which allows individual investors to",
    "start": "839059",
    "end": "844099"
  },
  {
    "text": "open accounts and trade mutual funds with us and an institutional line of",
    "start": "844099",
    "end": "849529"
  },
  {
    "text": "business which obviously works with companies to provide 401ks and for those",
    "start": "849529",
    "end": "855499"
  },
  {
    "text": "of you not from the US that's kind of like a pension tax deferred savings for for use in retirement our institutional",
    "start": "855499",
    "end": "863329"
  },
  {
    "text": "line of business is very focused on non regulatory compliance such as sot - so",
    "start": "863329",
    "end": "868639"
  },
  {
    "text": "something that we can use to prove to our customers that we do things right in the IT space and finally we have no",
    "start": "868639",
    "end": "876319"
  },
  {
    "text": "outside owners so the returns on the investments we make provide better",
    "start": "876319",
    "end": "881539"
  },
  {
    "text": "returns for our customers and since our staff have 401 k's with the company",
    "start": "881539",
    "end": "886939"
  },
  {
    "text": "we're actually incentivized to be as efficient as we possibly can and provide value to our investors so our current IT",
    "start": "886939",
    "end": "896179"
  },
  {
    "start": "894000",
    "end": "985000"
  },
  {
    "text": "environment obviously we have a whole bunch of data centers a huge reserves to handle spikes in capacity and",
    "start": "896179",
    "end": "902209"
  },
  {
    "text": "availability and within those environments or data centers we effectively have three types of",
    "start": "902209",
    "end": "908179"
  },
  {
    "text": "operational system we have the systems that our business uses in order to decide which mutual funds to buy",
    "start": "908179",
    "end": "915639"
  },
  {
    "text": "analytics data those kinds of things a lot of that is cots software we then have our system of record which is our",
    "start": "915639",
    "end": "922369"
  },
  {
    "text": "real old systems that keep track of who owns what within the system and then",
    "start": "922369",
    "end": "927649"
  },
  {
    "text": "we've got our system from engagement which are the tools that we use to interact with our customers",
    "start": "927649",
    "end": "934360"
  },
  {
    "text": "interestingly 20 years ago the system of record in the system of engagement were",
    "start": "934360",
    "end": "939610"
  },
  {
    "text": "the same system right customers would call up and the phone operators would be typing into mainframe consoles in order",
    "start": "939610",
    "end": "946600"
  },
  {
    "text": "to make transactions happen nowadays obviously it's all web interfaces",
    "start": "946600",
    "end": "951930"
  },
  {
    "text": "typically our web interfaces you can see here custom web applications three-tier",
    "start": "951930",
    "end": "958290"
  },
  {
    "text": "large monolithic java applications very complex many of them now have internal",
    "start": "958290",
    "end": "965740"
  },
  {
    "text": "caches non distributed which means that all the sessions are stateless obviously that impacts scalability our largest",
    "start": "965740",
    "end": "974709"
  },
  {
    "text": "lines of business use db2 on the mainframe for their data storage and some of our other lines of business do",
    "start": "974709",
    "end": "981940"
  },
  {
    "text": "use other databases as well our",
    "start": "981940",
    "end": "987160"
  },
  {
    "start": "985000",
    "end": "1075000"
  },
  {
    "text": "mainframe environment really is the crown jewels of Vanguard we're not",
    "start": "987160",
    "end": "993220"
  },
  {
    "text": "running Zeile Enix MVS MVS based we have",
    "start": "993220",
    "end": "999550"
  },
  {
    "text": "a build system for COBOL code and version control system for it as well and then db2 which is the system that",
    "start": "999550",
    "end": "1007140"
  },
  {
    "text": "supports our system of engaging with our customers there are at least three",
    "start": "1007140",
    "end": "1012149"
  },
  {
    "text": "thousand relation tables and six thousand COBOL stored procedures in that system which makes makes a trivial",
    "start": "1012149",
    "end": "1018620"
  },
  {
    "text": "migration very difficult to achieve with enough our record-keeping systems part",
    "start": "1018620",
    "end": "1025140"
  },
  {
    "text": "of our system of record which is all based on VCF files CICS Kix interfaces",
    "start": "1025140",
    "end": "1031410"
  },
  {
    "text": "and COBOL batch processes and those are typically run every night to perform all",
    "start": "1031410",
    "end": "1036540"
  },
  {
    "text": "the necessary calculations in order to provide the data from our system of",
    "start": "1036540",
    "end": "1042329"
  },
  {
    "text": "record into our system of engagement there's a huge number of integration processes that run point-to-point",
    "start": "1042329",
    "end": "1048390"
  },
  {
    "text": "integrations with multiple systems that move data from the record-keeping system into the the database and vice versa and",
    "start": "1048390",
    "end": "1055620"
  },
  {
    "text": "typically that goes through MQ and COBOL batch processes and then finally people",
    "start": "1055620",
    "end": "1062400"
  },
  {
    "text": "interact with our mainframe a small amount through the CICS interfaces slightly more through",
    "start": "1062400",
    "end": "1068430"
  },
  {
    "text": "MQ interfaces but the largest interactions are through the db2 so why",
    "start": "1068430",
    "end": "1076530"
  },
  {
    "start": "1075000",
    "end": "1274000"
  },
  {
    "text": "is it we want to migrate we're not doing one or even two migrations here actually doing three separate migrations the",
    "start": "1076530",
    "end": "1084210"
  },
  {
    "text": "first is the migration to the public cloud so we started to look a private cloud we came to reinvent we realized we",
    "start": "1084210",
    "end": "1093090"
  },
  {
    "text": "can't possibly match Amazon so let's look at using them give us the ability",
    "start": "1093090",
    "end": "1099210"
  },
  {
    "text": "to use infrastructure as code we can spin up environments as many as we need",
    "start": "1099210",
    "end": "1104420"
  },
  {
    "text": "we also get a lot of managed services right why run our own message queuing systems",
    "start": "1104420",
    "end": "1109950"
  },
  {
    "text": "our own databases when Amazon can run it for us right we're a financial company not an IT company and finally if you're",
    "start": "1109950",
    "end": "1119400"
  },
  {
    "text": "using on-premise systems no matter how many you buy there's still limits to the elasticity right and if you buy too many",
    "start": "1119400",
    "end": "1127050"
  },
  {
    "text": "they're sitting around if you don't buy enough you can't cope with the kind of spikes that you might experience and",
    "start": "1127050",
    "end": "1134130"
  },
  {
    "text": "those are the things that go away with public cloud from the main pane moving",
    "start": "1134130",
    "end": "1139140"
  },
  {
    "text": "off the mainframe perspective firstly with any proprietary system if you can't",
    "start": "1139140",
    "end": "1146240"
  },
  {
    "text": "get the same capability in the cloud provider of your choice you're somewhat",
    "start": "1146240",
    "end": "1151530"
  },
  {
    "text": "limited to at best a hybrid model the",
    "start": "1151530",
    "end": "1157710"
  },
  {
    "text": "cost of mainframe basically you're running an expensive vertically scale system as opposed to being able to take",
    "start": "1157710",
    "end": "1163920"
  },
  {
    "text": "advantage of cheaper horizontally scale systems we also have effectively our",
    "start": "1163920",
    "end": "1170520"
  },
  {
    "text": "development staff divided into two parts one part is the COBOL developers that",
    "start": "1170520",
    "end": "1175650"
  },
  {
    "text": "work on the mainframe side the other part is the Java developers that work on the system of engagement we wanted a",
    "start": "1175650",
    "end": "1183570"
  },
  {
    "text": "common programming model so that we didn't have to worry about the skills that are starting to be more difficult",
    "start": "1183570",
    "end": "1190050"
  },
  {
    "text": "to find in the mainframe space and also get the same process from the web tier",
    "start": "1190050",
    "end": "1196800"
  },
  {
    "text": "all the way down to the data accessed here and then finally why do we want to",
    "start": "1196800",
    "end": "1202050"
  },
  {
    "text": "my great from legacy web applications to microservices so no one gets up out of",
    "start": "1202050",
    "end": "1208870"
  },
  {
    "text": "bed in the morning and thinks themselves I'm gonna write an application today and it's gonna be an unmaintainable baller",
    "start": "1208870",
    "end": "1214870"
  },
  {
    "text": "mug but what tends to happen is over time the tears that you put in place get",
    "start": "1214870",
    "end": "1226110"
  },
  {
    "text": "people people take jumps through them when they shouldn't that the tears get blurred so what micro-services gives us",
    "start": "1226110",
    "end": "1234399"
  },
  {
    "text": "is a network boundary that enforces a strict bounded context and all the",
    "start": "1234399",
    "end": "1242139"
  },
  {
    "text": "access needs to go through that network boundary what this means is that we end up with smaller pieces of code it's",
    "start": "1242139",
    "end": "1249010"
  },
  {
    "text": "easier to test them it's easier to deploy them and it also over time once",
    "start": "1249010",
    "end": "1254409"
  },
  {
    "text": "we start taking advantage of those network boundaries it allows our development teams to adopt other",
    "start": "1254409",
    "end": "1261070"
  },
  {
    "text": "mechanisms for implementation in terms of different languages and also different database storage mechanisms so",
    "start": "1261070",
    "end": "1269880"
  },
  {
    "text": "rather than just the pure relational that they tend to work with now before",
    "start": "1269880",
    "end": "1276039"
  },
  {
    "start": "1274000",
    "end": "1360000"
  },
  {
    "text": "we started moving to public cloud we started to implement micro services for",
    "start": "1276039",
    "end": "1281110"
  },
  {
    "text": "use on Prem basically seven step process each step builds on the capabilities of",
    "start": "1281110",
    "end": "1288399"
  },
  {
    "text": "the last so we have the monolithic applications on the far left hand side all the way to next-gen apps or micro",
    "start": "1288399",
    "end": "1295090"
  },
  {
    "text": "services on the far right the first step was start to monitor our code builds",
    "start": "1295090",
    "end": "1303659"
  },
  {
    "text": "instrumentation so that we could produce clean modular code this would enable us to isolate the data layer from the",
    "start": "1303659",
    "end": "1310120"
  },
  {
    "text": "business access oh sorry the business logic once we have that data layer isolated we can start defined bounded",
    "start": "1310120",
    "end": "1318460"
  },
  {
    "text": "contexts start to split things up into services and once we define those",
    "start": "1318460",
    "end": "1323740"
  },
  {
    "text": "bounded contexts the step to cloud in order to enable the step to cloud we",
    "start": "1323740",
    "end": "1329200"
  },
  {
    "text": "really needed to make sure that we were completely stateless within our micro services and that would give us the kind of elasticity that we were looking for",
    "start": "1329200",
    "end": "1336010"
  },
  {
    "text": "the steps aren't purely technical there's some cultural ones here so the move towards being able to be completely",
    "start": "1336010",
    "end": "1343910"
  },
  {
    "text": "agile and take advantage of experimentation was was something that our business was very interested in but",
    "start": "1343910",
    "end": "1352250"
  },
  {
    "text": "moving from a framework that was originally developed for use on an on-prem private cloud environment to a",
    "start": "1352250",
    "end": "1359030"
  },
  {
    "text": "public cloud required some additional thinking so you see secured up there I'm not",
    "start": "1359030",
    "end": "1365150"
  },
  {
    "start": "1360000",
    "end": "1576000"
  },
  {
    "text": "suggesting that we never thought about security until we went to the public cloud but we had to think of it",
    "start": "1365150",
    "end": "1370790"
  },
  {
    "text": "differently because with public cloud we",
    "start": "1370790",
    "end": "1375920"
  },
  {
    "text": "started to experience the situation where members of staff would suddenly see things in newspapers right some",
    "start": "1375920",
    "end": "1382970"
  },
  {
    "text": "company left their s3 bucket exposed all their data was leaked and they end up on",
    "start": "1382970",
    "end": "1389600"
  },
  {
    "text": "in the newspapers we started have to ensure that instead of going through a process where we",
    "start": "1389600",
    "end": "1395720"
  },
  {
    "text": "would validate the security model and then implement the tool we would have to be able to continually be able to answer",
    "start": "1395720",
    "end": "1402920"
  },
  {
    "text": "the question why what do we have in place that would prevent that from happening here so just a slightly",
    "start": "1402920",
    "end": "1410120"
  },
  {
    "text": "different way of looking at security as part of the move to public cloud we wanted to make sure that we were able to",
    "start": "1410120",
    "end": "1417050"
  },
  {
    "text": "take advantage of multiple geographic regions so rather than just a single one",
    "start": "1417050",
    "end": "1423380"
  },
  {
    "text": "and all of our customers from all over the world coming to one place we wanted to be able to move the compute and data",
    "start": "1423380",
    "end": "1429320"
  },
  {
    "text": "out to them make their experiences as as good as possible we also wanted to be",
    "start": "1429320",
    "end": "1437480"
  },
  {
    "text": "autonomous within a single region so if there was an availability problem a",
    "start": "1437480",
    "end": "1442790"
  },
  {
    "text": "disaster problem and networking problem we wanted them as much as possible to still get that really good user",
    "start": "1442790",
    "end": "1449030"
  },
  {
    "text": "experience by accessing resources as close to them as possible and be at a cope with the fact that we may lose",
    "start": "1449030",
    "end": "1456430"
  },
  {
    "text": "connectivity to other regions we wanted low latency from two different",
    "start": "1456430",
    "end": "1462770"
  },
  {
    "text": "perspectives the first perspective would be from the real-time movement of",
    "start": "1462770",
    "end": "1469430"
  },
  {
    "text": "data from customer to us but the second perspective is from the users perception",
    "start": "1469430",
    "end": "1475640"
  },
  {
    "text": "of latency so rather than clicking on a button and seeing the little whirly",
    "start": "1475640",
    "end": "1481070"
  },
  {
    "text": "hourglass from many seconds before something happened even though we might",
    "start": "1481070",
    "end": "1487250"
  },
  {
    "text": "be transferring the data allow them to continue with what they wanted to do as quickly as possible",
    "start": "1487250",
    "end": "1493240"
  },
  {
    "text": "we needed to think about compliance we always think about compliance but now",
    "start": "1493240",
    "end": "1501340"
  },
  {
    "text": "the regulators are going to be walking in and saying we know you're using public cloud it's potentially a",
    "start": "1501340",
    "end": "1508550"
  },
  {
    "text": "different level of of compliance that we need to be able to show a different",
    "start": "1508550",
    "end": "1513590"
  },
  {
    "text": "level of transparency and then finally need to be cost optimized so when you're",
    "start": "1513590",
    "end": "1520040"
  },
  {
    "text": "working with an on-prem environment everything kind of the the costs to the development teams are often completely",
    "start": "1520040",
    "end": "1526490"
  },
  {
    "text": "opaque they have no idea it's a it's a lot more obvious when we're looking at cloud in terms of cost optimization I",
    "start": "1526490",
    "end": "1534260"
  },
  {
    "text": "heard a interesting analogy anybody can build an expensive bridge that doesn't",
    "start": "1534260",
    "end": "1539720"
  },
  {
    "text": "fall down the trick is to build the cheapest possible bridge that doesn't",
    "start": "1539720",
    "end": "1544880"
  },
  {
    "text": "quite fall down right and that's kind of what we're trying to do with cloud what's the bare minimum we can get away",
    "start": "1544880",
    "end": "1550880"
  },
  {
    "text": "with while still providing the customer experience that we want so with all",
    "start": "1550880",
    "end": "1557150"
  },
  {
    "text": "these in mind we spoke to a number of teams within the organization we've got a set of requirements from them we came",
    "start": "1557150",
    "end": "1564860"
  },
  {
    "text": "up with designs we iterated through the designs we spoke to a number of partners and consultants and said this is what",
    "start": "1564860",
    "end": "1570470"
  },
  {
    "text": "we're thinking of doing and we came up with a design that met all the requirements and before you start",
    "start": "1570470",
    "end": "1578930"
  },
  {
    "start": "1576000",
    "end": "1773000"
  },
  {
    "text": "adjusting your glasses it's purposely blurred it did meet the requirements it",
    "start": "1578930",
    "end": "1586730"
  },
  {
    "text": "used a hub-and-spoke model right we adopted a hub-and-spoke model because that way all the updates would happen at",
    "start": "1586730",
    "end": "1593060"
  },
  {
    "text": "central location there was no possibility of conflicts and meant that",
    "start": "1593060",
    "end": "1598130"
  },
  {
    "text": "we could use our existing business logic to validate what was going on",
    "start": "1598130",
    "end": "1603190"
  },
  {
    "text": "we utilize in the cloud for the spokes so where we wanted to move the compute",
    "start": "1603190",
    "end": "1608510"
  },
  {
    "text": "and data as close to the customers as possible that would be at the end of the spokes there was a number of decisions",
    "start": "1608510",
    "end": "1616519"
  },
  {
    "text": "made in the past with respect to the container management system that we",
    "start": "1616519",
    "end": "1621529"
  },
  {
    "text": "incorporated and also in terms of an object store caching layer the object",
    "start": "1621529",
    "end": "1627710"
  },
  {
    "text": "store caching layer was originally too conceived to reduce the number of",
    "start": "1627710",
    "end": "1632720"
  },
  {
    "text": "transactions that we were running on the mainframe in order to deal with the fact",
    "start": "1632720",
    "end": "1639590"
  },
  {
    "text": "that we had the relational model on frame in db2 and the object model out in the cloud there was a fairly sophisticated object",
    "start": "1639590",
    "end": "1646190"
  },
  {
    "text": "relational mapping that worked in two different layers the first if there was a cache miss in the object store and the",
    "start": "1646190",
    "end": "1653210"
  },
  {
    "text": "second when changes were actually happening to db2 outside of this system via batch via our existing monolithic",
    "start": "1653210",
    "end": "1660230"
  },
  {
    "text": "applications taking those changes and replicating those out to the to the",
    "start": "1660230",
    "end": "1665779"
  },
  {
    "text": "object store at that of the spokes because this design required making two",
    "start": "1665779",
    "end": "1672320"
  },
  {
    "text": "writes one to db2 so that our existing systems worked and to the object store",
    "start": "1672320",
    "end": "1678409"
  },
  {
    "text": "at the hub that the hub is the bottom glue box we came up the concept of",
    "start": "1678409",
    "end": "1686179"
  },
  {
    "text": "business events so that we could get something in that was agnostic to the actual data platform being used and then",
    "start": "1686179",
    "end": "1693049"
  },
  {
    "text": "could be translated into a sequel code for talking to db2 and API calls for",
    "start": "1693049",
    "end": "1700429"
  },
  {
    "text": "update in the object store because we wanted to keep the object store and db2 in sync we're using a two-phase commit",
    "start": "1700429",
    "end": "1706519"
  },
  {
    "text": "to achieve that the solution was asynchronous so definitely eventual",
    "start": "1706519",
    "end": "1713480"
  },
  {
    "text": "consistency where when a micro service would make a change if it immediately read the change from the object store it",
    "start": "1713480",
    "end": "1720980"
  },
  {
    "text": "would not see that change we still had a reliance on proprietary hardware and in fact we were actually",
    "start": "1720980",
    "end": "1727460"
  },
  {
    "text": "running more code on the mainframe as part of the process to get away from it and we were leveraging no manage",
    "start": "1727460",
    "end": "1734779"
  },
  {
    "text": "platforms so still doing an awful lot of heavy lifting ourselves as we started to",
    "start": "1734779",
    "end": "1743390"
  },
  {
    "text": "become more familiar with public cloud and looking at moving towards public cloud we started to look at how can we",
    "start": "1743390",
    "end": "1750170"
  },
  {
    "text": "split that hub and move more of the workloads out we came up with this concept of an extended hub so that the",
    "start": "1750170",
    "end": "1758300"
  },
  {
    "text": "hub would be extended between us and our closest region us East one and the",
    "start": "1758300",
    "end": "1763370"
  },
  {
    "text": "spokes would still be located around the world complexity increased so we decided",
    "start": "1763370",
    "end": "1771110"
  },
  {
    "text": "to take another look how could we do things differently we took the list of",
    "start": "1771110",
    "end": "1776809"
  },
  {
    "start": "1773000",
    "end": "1895000"
  },
  {
    "text": "requirements that we originally had and rather than try to build the solution to",
    "start": "1776809",
    "end": "1782270"
  },
  {
    "text": "meet those requirements we said this what is the simplest thing that we can possibly do and what subset of the",
    "start": "1782270",
    "end": "1789920"
  },
  {
    "text": "requirements do we actually meet with that solution we actually came up with nine options this is option one there",
    "start": "1789920",
    "end": "1798800"
  },
  {
    "text": "was actually an option 0 there was just so awful in terms of functionality I'm",
    "start": "1798800",
    "end": "1804140"
  },
  {
    "text": "not even showing it but basically the micro service and batch processes would",
    "start": "1804140",
    "end": "1810350"
  },
  {
    "text": "write to db2 directly db2 being at the very bottom box there a change data",
    "start": "1810350",
    "end": "1818270"
  },
  {
    "text": "capture process if you're not familiar with that it's basically something that reads the database transaction logs and",
    "start": "1818270",
    "end": "1824630"
  },
  {
    "text": "then makes those changes into another database or another system so the CDC",
    "start": "1824630",
    "end": "1830900"
  },
  {
    "text": "would pick those changes up move them to the cloud-based part of the extended hub",
    "start": "1830900",
    "end": "1837880"
  },
  {
    "text": "where they would be written into the two databases those databases that would",
    "start": "1837880",
    "end": "1843260"
  },
  {
    "text": "then be read by the micro-services and since those databases would be local to those micro services the user experience",
    "start": "1843260",
    "end": "1849800"
  },
  {
    "text": "would would be good for read operations which is 90 plus percent of our actual",
    "start": "1849800",
    "end": "1855770"
  },
  {
    "text": "traffic the system is considerably easier because of considerably",
    "start": "1855770",
    "end": "1862370"
  },
  {
    "text": "considerably simpler because there is no nests need for a translation between a",
    "start": "1862370",
    "end": "1868700"
  },
  {
    "text": "relation on an object model with this particular design we're moving from relational to relational",
    "start": "1868700",
    "end": "1873980"
  },
  {
    "text": "the CDC handles it it makes life nice and simple and it's fairly easy when you're working",
    "start": "1873980",
    "end": "1880489"
  },
  {
    "text": "with one RDS database to get easy improvements with scalability by adding",
    "start": "1880489",
    "end": "1886700"
  },
  {
    "text": "read replicas and availability by going multi a-z option 3 implemented more of",
    "start": "1886700",
    "end": "1898700"
  },
  {
    "start": "1895000",
    "end": "2025000"
  },
  {
    "text": "the requirements that we originally had so one of the problems with with option 1 is that if there was a network problem",
    "start": "1898700",
    "end": "1905059"
  },
  {
    "text": "between the micro services and the db2 database on Prem",
    "start": "1905059",
    "end": "1911649"
  },
  {
    "text": "effectively the micro service is waiting until the timeout occurs users who are",
    "start": "1912220",
    "end": "1918919"
  },
  {
    "text": "trying to make an operation involving a write or waiting for the little hourglass to finish with the buffered",
    "start": "1918919",
    "end": "1925429"
  },
  {
    "text": "writes option the micro service rights to a streaming data platform located in",
    "start": "1925429",
    "end": "1930889"
  },
  {
    "text": "the same geographic region that it uses",
    "start": "1930889",
    "end": "1939109"
  },
  {
    "text": "the business event when it actually writes that message and the business event is propagated down to the extended",
    "start": "1939109",
    "end": "1948139"
  },
  {
    "text": "hub which makes the right to the db2 database the years of perceived latency",
    "start": "1948139",
    "end": "1953989"
  },
  {
    "text": "as a result is very low the availability and disaster impact is considerably",
    "start": "1953989",
    "end": "1961220"
  },
  {
    "text": "lower because our users can still make writes to the database and they're",
    "start": "1961220",
    "end": "1966619"
  },
  {
    "text": "stored before they're forwarded and if we have an incredible increase in",
    "start": "1966619",
    "end": "1973029"
  },
  {
    "text": "traffic the part of this solution which can't scale is that they face at the",
    "start": "1973029",
    "end": "1979220"
  },
  {
    "text": "very bottom on the mainframe and we can absorb the spikes using the streaming",
    "start": "1979220",
    "end": "1985399"
  },
  {
    "text": "data platforms a couple of the requirements that we had though were the",
    "start": "1985399",
    "end": "1992269"
  },
  {
    "text": "single integration point what we wanted to give our SI organizations was instead",
    "start": "1992269",
    "end": "1998509"
  },
  {
    "text": "of having the need to write integration across multiple point-to-point solutions they",
    "start": "1998509",
    "end": "2005059"
  },
  {
    "text": "could go to a single place to see what was happening with the system and asynchronous rights were still a fact of",
    "start": "2005059",
    "end": "2012049"
  },
  {
    "text": "life eventual consistency was still a fact of life the idea there was that it",
    "start": "2012049",
    "end": "2017090"
  },
  {
    "text": "will be solved in the application layer talking to the micro Service gonna go",
    "start": "2017090",
    "end": "2023899"
  },
  {
    "text": "into a little more detail about the buffered writes how he achieved it so what we wanted was that because we had",
    "start": "2023899",
    "end": "2029779"
  },
  {
    "text": "this asynchronous system that applications would be aware of where",
    "start": "2029779",
    "end": "2035029"
  },
  {
    "text": "they were when asynchronous writes were happening so the micro service would",
    "start": "2035029",
    "end": "2040339"
  },
  {
    "text": "write to the streaming Data Platform a piece of code there labeled the replicator would take that move it down",
    "start": "2040339",
    "end": "2047419"
  },
  {
    "text": "to on-prem where we picked up bionis dispatcher the dispatcher would then",
    "start": "2047419",
    "end": "2052908"
  },
  {
    "text": "look at the business event and determine which micro service can actually make this update in our db2 database and it",
    "start": "2052909",
    "end": "2060260"
  },
  {
    "text": "would make the appropriate call the reason for the double hop there is that",
    "start": "2060260",
    "end": "2065510"
  },
  {
    "text": "the micro service teams that owned the bounded context could implement the lambda functions and deploy those",
    "start": "2065510",
    "end": "2071960"
  },
  {
    "text": "independently in order to have control over their own data and make the updates",
    "start": "2071960",
    "end": "2077059"
  },
  {
    "text": "in the database that made sense to them in the event of everything working",
    "start": "2077059",
    "end": "2082158"
  },
  {
    "text": "correctly the dispatcher would get back a good return return result it would append",
    "start": "2082159",
    "end": "2087770"
  },
  {
    "text": "some information for the business event that we could use for analytics for example the processing time and it would",
    "start": "2087770",
    "end": "2093470"
  },
  {
    "text": "then push the business event into the done stream and that would be propagated",
    "start": "2093470",
    "end": "2099020"
  },
  {
    "text": "around the network by using the IDS in the to do and the done stream we can",
    "start": "2099020",
    "end": "2105140"
  },
  {
    "text": "then determine the particular operations happened and in the event of an error the message would end up in the error",
    "start": "2105140",
    "end": "2112130"
  },
  {
    "text": "stream so everyone would be aware by looking at the error stream that there was a problem that occurred we developed",
    "start": "2112130",
    "end": "2120529"
  },
  {
    "text": "a micro service that would actually read from those various streams so the",
    "start": "2120529",
    "end": "2126079"
  },
  {
    "text": "bounded context for the Kittyhawk micro service was actually the logged in user",
    "start": "2126079",
    "end": "2131200"
  },
  {
    "text": "so an application which didn't necessarily",
    "start": "2131200",
    "end": "2136900"
  },
  {
    "text": "need to know about an every micro service it needed to deal with could",
    "start": "2136900",
    "end": "2142190"
  },
  {
    "text": "still determine if there were things in flight that might impact its operation",
    "start": "2142190",
    "end": "2148150"
  },
  {
    "text": "and we call that micro service Kittyhawk because it deals with in-flight messages",
    "start": "2148150",
    "end": "2153170"
  },
  {
    "text": "during right operations so continuing",
    "start": "2153170",
    "end": "2160640"
  },
  {
    "text": "along the the various different options that we offered the lines of business we're aware that some of the lines of",
    "start": "2160640",
    "end": "2166940"
  },
  {
    "text": "business were very interested in not sticking with a relational model but instead looking at a no sequel option so",
    "start": "2166940",
    "end": "2174859"
  },
  {
    "text": "we came up with this solution use this no sequel datastore or walk you through",
    "start": "2174859",
    "end": "2182990"
  },
  {
    "text": "basically when a write happens to db2 the CDC tool again picks up the",
    "start": "2182990",
    "end": "2188450"
  },
  {
    "text": "translation transaction moves that into the hub where the CDC tool then takes",
    "start": "2188450",
    "end": "2194300"
  },
  {
    "text": "that transaction data instead of writing it directly to a relational database it puts it again into a streaming data",
    "start": "2194300",
    "end": "2200240"
  },
  {
    "text": "platform the message is then read from the streaming data platform and then",
    "start": "2200240",
    "end": "2206480"
  },
  {
    "text": "based on the contents the tables the rows that that are actually impacted by",
    "start": "2206480",
    "end": "2212150"
  },
  {
    "text": "that change it calls another what we call event writer and then the event",
    "start": "2212150",
    "end": "2217460"
  },
  {
    "text": "writer pushes the message through to the same streaming data platform on the",
    "start": "2217460",
    "end": "2225800"
  },
  {
    "text": "left-hand side that was used by the write process the dispatcher then picks up passes it",
    "start": "2225800",
    "end": "2231980"
  },
  {
    "text": "to the DB writer because of identifiers that the event writers put into the",
    "start": "2231980",
    "end": "2238490"
  },
  {
    "text": "message we can determine that that message came through the CDC process so",
    "start": "2238490",
    "end": "2243800"
  },
  {
    "text": "rather than update db2 we update the no sequel platform we now have our single",
    "start": "2243800",
    "end": "2251690"
  },
  {
    "text": "point of integration because all changes to the system are flowing through the streaming data platform on the left hand",
    "start": "2251690",
    "end": "2257270"
  },
  {
    "text": "side so anyone can write code at that point of time that looks at that",
    "start": "2257270",
    "end": "2262579"
  },
  {
    "text": "streaming data platform and is able to determine all the changes that are happening to the system",
    "start": "2262579",
    "end": "2268660"
  },
  {
    "text": "we have our relational - no sequel mapping happening in the event writers",
    "start": "2268660",
    "end": "2274369"
  },
  {
    "text": "and the DB writers spread across those two components we're able to leverage a no data no sequel datastore we have a",
    "start": "2274369",
    "end": "2283609"
  },
  {
    "text": "slightly higher latency but it's somewhat hidden from the user but we",
    "start": "2283609",
    "end": "2289759"
  },
  {
    "text": "have introduced significant complexity but we've given it to our users as an",
    "start": "2289759",
    "end": "2296449"
  },
  {
    "text": "option right you want option 1 simple - an option 6 more complex and the users",
    "start": "2296449",
    "end": "2304400"
  },
  {
    "text": "were able to look at the requirements that were implemented with each approach and make the decision for themselves",
    "start": "2304400",
    "end": "2309410"
  },
  {
    "text": "rather than take a one-size-fits-all so",
    "start": "2309410",
    "end": "2316670"
  },
  {
    "text": "what did they actually pick lines of business couldn't decide one line of",
    "start": "2316670",
    "end": "2324049"
  },
  {
    "text": "business still wanted to stick with relational the other line of business wanted to move towards DynamoDB it's",
    "start": "2324049",
    "end": "2331910"
  },
  {
    "text": "really interesting being here this week we've seen significant announcements about both right Aurora for Postgres now",
    "start": "2331910",
    "end": "2339890"
  },
  {
    "text": "available server lists for example global tables for Dino DynamoDB now",
    "start": "2339890",
    "end": "2347119"
  },
  {
    "text": "available the solution then gives us both in addition because we are taking",
    "start": "2347119",
    "end": "2357859"
  },
  {
    "text": "the data replicating it from on Prem out into the cloud the analytics part of the",
    "start": "2357859",
    "end": "2365209"
  },
  {
    "text": "organization also said we could we can leverage that if you're pushing the data out through the CDC tool we can siphon",
    "start": "2365209",
    "end": "2371509"
  },
  {
    "text": "it off use that as well for big data analytics so that's been added as well",
    "start": "2371509",
    "end": "2379150"
  },
  {
    "text": "what we have now then is a system where if there's an availability event a micro",
    "start": "2379599",
    "end": "2387739"
  },
  {
    "text": "service that's based out on one of the spokes can still read everything that it needs to from the databases we'll have",
    "start": "2387739",
    "end": "2395779"
  },
  {
    "text": "an idea when we replicate the data out exactly how stale that data is",
    "start": "2395779",
    "end": "2402249"
  },
  {
    "text": "when the user wants to make an update the update is moved into the streaming data platform even if we can't replicate",
    "start": "2402340",
    "end": "2410120"
  },
  {
    "text": "that data down to the hub at least it's there we can let the user off the hook we understand their intent and then all",
    "start": "2410120",
    "end": "2418910"
  },
  {
    "text": "the work still goes on in the hub and we're reducing our on-prem footprint",
    "start": "2418910",
    "end": "2426310"
  },
  {
    "text": "sorry just just to go through the green lines represent the relational process",
    "start": "2432550",
    "end": "2438230"
  },
  {
    "text": "and the purple lines represent the no sequel process that you saw on the last",
    "start": "2438230",
    "end": "2443660"
  },
  {
    "text": "slide so in terms of mainframe strangulation strategy what we've seen",
    "start": "2443660",
    "end": "2452450"
  },
  {
    "text": "here is like the first step we we take the data we move out into the cloud we've provided ourselves with an",
    "start": "2452450",
    "end": "2458750"
  },
  {
    "text": "abstraction layer where the micro services can be built to interact with the data format that makes the most",
    "start": "2458750",
    "end": "2465530"
  },
  {
    "text": "sense for them either relational or no sequel they can't be deployed they don't",
    "start": "2465530",
    "end": "2471740"
  },
  {
    "text": "need to know about all the rest of the process that keeps those data stores up to date we then start to take our",
    "start": "2471740",
    "end": "2480980"
  },
  {
    "text": "monolithic applications so at the moment those monolithic applications are used to making calls to the database getting",
    "start": "2480980",
    "end": "2488450"
  },
  {
    "text": "the data building the HTML code sending effectively the page all ready to be",
    "start": "2488450",
    "end": "2495470"
  },
  {
    "text": "rendered back to the browser we need to take that and remove some of that",
    "start": "2495470",
    "end": "2500990"
  },
  {
    "text": "rendering so that what we actually sent back to the browser now is the",
    "start": "2500990",
    "end": "2506120"
  },
  {
    "text": "instructions that said once you get this page you need to go back to the Micra service grab the data that you need and",
    "start": "2506120",
    "end": "2512960"
  },
  {
    "text": "render the page yourself so basically refactor the monolithic apps make Ajax",
    "start": "2512960",
    "end": "2519650"
  },
  {
    "text": "calls the micro service grab the data and display it as necessary in parallel",
    "start": "2519650",
    "end": "2526610"
  },
  {
    "text": "with that migrate batch processes to the cloud so that the data that is in in the",
    "start": "2526610",
    "end": "2532580"
  },
  {
    "text": "cloud now that we've replicated out there is used the batch process instead of db2 on Prem use for the batch process we're looking",
    "start": "2532580",
    "end": "2541100"
  },
  {
    "text": "at the kinds of batch processes that we have that operate within a single",
    "start": "2541100",
    "end": "2547250"
  },
  {
    "text": "bounded context once we start to move",
    "start": "2547250",
    "end": "2553280"
  },
  {
    "text": "back to process out to the cloud and some of those will require orchestration",
    "start": "2553280",
    "end": "2559610"
  },
  {
    "text": "type services that work across multiple micro-services in order to perform those types of operation but once we're able",
    "start": "2559610",
    "end": "2566030"
  },
  {
    "text": "to move those batch processes out to the cloud and we're at the stage where a particular bounded context is no longer",
    "start": "2566030",
    "end": "2573050"
  },
  {
    "text": "accessed within our own Prem database then we can start to switch the",
    "start": "2573050",
    "end": "2579350"
  },
  {
    "text": "replication so we keep the gold copy of the data in the cloud and we push the data back down to db2 should it be",
    "start": "2579350",
    "end": "2586670"
  },
  {
    "text": "necessary to actually read it there but everything is actually happening in the cloud for the short term we're keeping",
    "start": "2586670",
    "end": "2596150"
  },
  {
    "text": "the mainframe record-keeping systems the the CICS the lease and the COBOL systems",
    "start": "2596150",
    "end": "2602000"
  },
  {
    "text": "treating those as a bounded context so the integration logic that we had that",
    "start": "2602000",
    "end": "2607490"
  },
  {
    "text": "would take the data from db2 move it into V Sam at the beginning of the batch process and then at the end of the batch",
    "start": "2607490",
    "end": "2614180"
  },
  {
    "text": "process would take that data from db2 sorry from V Sam and move it back out to",
    "start": "2614180",
    "end": "2619730"
  },
  {
    "text": "db2 at the end of the batch process would instead at the beginning of the",
    "start": "2619730",
    "end": "2625700"
  },
  {
    "text": "batch process move the data from the cloud into V Sam and then at the end of",
    "start": "2625700",
    "end": "2631670"
  },
  {
    "text": "the process from the V Sam files back out into the cloud and obviously over",
    "start": "2631670",
    "end": "2637220"
  },
  {
    "text": "time chip away at this process move as much as we possibly can out into the",
    "start": "2637220",
    "end": "2642500"
  },
  {
    "text": "cloud and basically strangle what we're doing",
    "start": "2642500",
    "end": "2646930"
  },
  {
    "text": "there's a few different Amazon services that we use in order to accomplish this",
    "start": "2649490",
    "end": "2655690"
  },
  {
    "text": "relational database service basically what we looked for when we were working",
    "start": "2655690",
    "end": "2662750"
  },
  {
    "text": "with any Amazon service is four things first of all top to compliance so many",
    "start": "2662750",
    "end": "2668869"
  },
  {
    "text": "of our applications need to be stocked to compliant our customers are looking for that in the institutional space",
    "start": "2668869",
    "end": "2676960"
  },
  {
    "text": "next thing is data at rest encryption so mandate came down from security that",
    "start": "2676960",
    "end": "2682970"
  },
  {
    "text": "every piece of data that we store in Amazon needs to be encrypted at rest",
    "start": "2682970",
    "end": "2688060"
  },
  {
    "text": "user access management is basically where we are absolutely sure about which",
    "start": "2688060",
    "end": "2695900"
  },
  {
    "text": "users exist within our various data stores and the rights that those users",
    "start": "2695900",
    "end": "2701060"
  },
  {
    "text": "have and the ability that if someone leaves the company we can be absolutely",
    "start": "2701060",
    "end": "2707300"
  },
  {
    "text": "sure that within minutes their rights are removed from those databases and",
    "start": "2707300",
    "end": "2712510"
  },
  {
    "text": "then finally data activity monitoring is the recording of every select insert",
    "start": "2712510",
    "end": "2719869"
  },
  {
    "text": "update and delete that happens on those databases which is absolutely necessary",
    "start": "2719869",
    "end": "2724910"
  },
  {
    "text": "for consistency integrity and also data",
    "start": "2724910",
    "end": "2730099"
  },
  {
    "text": "loss prevention right we can tell exactly when data was read from our database so with RDS we were really",
    "start": "2730099",
    "end": "2737780"
  },
  {
    "text": "lucky that top to compliance came straight out of the box and data at rest encryption has been available for years",
    "start": "2737780",
    "end": "2744130"
  },
  {
    "text": "user access management was more difficult the on-premise systems that we",
    "start": "2744130",
    "end": "2750349"
  },
  {
    "text": "had from accessing databases did not work with the database that we were looking to target in Amazon so we ended",
    "start": "2750349",
    "end": "2757010"
  },
  {
    "text": "up writing a rest interface that would",
    "start": "2757010",
    "end": "2762160"
  },
  {
    "text": "integrate with our on frame IDM system and create and delete the necessary user",
    "start": "2762160",
    "end": "2767960"
  },
  {
    "text": "IDs and roles from the RDS databases it",
    "start": "2767960",
    "end": "2773510"
  },
  {
    "text": "also offered the capability that we can on-demand request a list of all the",
    "start": "2773510",
    "end": "2778730"
  },
  {
    "text": "users and all their roles and all their accesses in a database that we can two auditors in order to prove that we",
    "start": "2778730",
    "end": "2784700"
  },
  {
    "text": "meet in that particular requirement data activity monitoring we use a third party",
    "start": "2784700",
    "end": "2792050"
  },
  {
    "text": "product on Prem the track solver select inserts updates and deletes to db2 it",
    "start": "2792050",
    "end": "2799820"
  },
  {
    "text": "could not be used with RDS because it requires installing an agent on the actual box we're able to get around that",
    "start": "2799820",
    "end": "2806960"
  },
  {
    "text": "particular issue by pulling the RDS logs every so often from RDS moving those",
    "start": "2806960",
    "end": "2813500"
  },
  {
    "text": "into a log consolidation system and monitoring for particular access so we",
    "start": "2813500",
    "end": "2819560"
  },
  {
    "text": "could actually see what was going on there",
    "start": "2819560",
    "end": "2823569"
  },
  {
    "text": "dynamodb again lucky was stopped to compliance there's no data at rest",
    "start": "2826180",
    "end": "2832550"
  },
  {
    "text": "encryption for DynamoDB so we're taking advantage of client-side encryption they're basically encrypting the data",
    "start": "2832550",
    "end": "2839570"
  },
  {
    "text": "before we move it to DynamoDB that certainly imposes some restrictions on",
    "start": "2839570",
    "end": "2845750"
  },
  {
    "text": "what we can use dynamodb for you suddenly lose the ability to filter or",
    "start": "2845750",
    "end": "2850970"
  },
  {
    "text": "query on the data that you've encrypted user access management for DynamoDB was",
    "start": "2850970",
    "end": "2857210"
  },
  {
    "text": "fairly easy to achieve because it's tightly integrated with Amazon's iam",
    "start": "2857210",
    "end": "2862579"
  },
  {
    "text": "Identity and Access Management Service so that was easy to achieve and data",
    "start": "2862579",
    "end": "2869089"
  },
  {
    "text": "activity monitoring was also something that was missing so dynamodb streams",
    "start": "2869089",
    "end": "2875089"
  },
  {
    "text": "gave us the ability to monitor updates deletes and inserts to the data but we",
    "start": "2875089",
    "end": "2884060"
  },
  {
    "text": "couldn't monitor the slits so potentially there's a data loss issue there we solved this by again using",
    "start": "2884060",
    "end": "2892609"
  },
  {
    "text": "client-side encryption even and then taken advantage of the fact that we do",
    "start": "2892609",
    "end": "2899690"
  },
  {
    "text": "get a log of cloud trial access to kms so every time someone actually grabs the",
    "start": "2899690",
    "end": "2906140"
  },
  {
    "text": "key in order to decrypt the data we do have a record of that",
    "start": "2906140",
    "end": "2911050"
  },
  {
    "text": "fraida West lambda two or three weeks",
    "start": "2914550",
    "end": "2919780"
  },
  {
    "text": "ago was it stop to compliance was granted for a SS lambda up to that point",
    "start": "2919780",
    "end": "2926730"
  },
  {
    "text": "we were very careful about our app selection and also a SS engagement",
    "start": "2926730",
    "end": "2933490"
  },
  {
    "text": "constantly talking to the SI Ilya saying when you're gonna be sucked in compliant",
    "start": "2933490",
    "end": "2938740"
  },
  {
    "text": "for lambda dagger at rest encryption is not really an issue user access management again because it's integrated",
    "start": "2938740",
    "end": "2945280"
  },
  {
    "text": "with AWS iam and data activity monitoring not an issue for lambda",
    "start": "2945280",
    "end": "2952559"
  },
  {
    "text": "Amazon Kinesis also part of the solution stop to compliance again was granted a",
    "start": "2953070",
    "end": "2958990"
  },
  {
    "text": "couple of weeks back in exactly the same way up until that point it was being very careful about the applications that",
    "start": "2958990",
    "end": "2964960"
  },
  {
    "text": "were selected and constantly asking a de Bresse is this gonna be available it's",
    "start": "2964960",
    "end": "2970900"
  },
  {
    "text": "really important to us data at rest encryption was announced back in July so we were really happy about that stops us",
    "start": "2970900",
    "end": "2978340"
  },
  {
    "text": "jumping through hoops from the encryption perspective user access management again is provided by AWS I am",
    "start": "2978340",
    "end": "2984160"
  },
  {
    "text": "and data activity monitoring is not available for certain types of data that",
    "start": "2984160",
    "end": "2991330"
  },
  {
    "text": "need it we can use client-side encryption and again we get the kms and cloud trail logs when we decrypt that",
    "start": "2991330",
    "end": "2998500"
  },
  {
    "text": "data so what are the impacts of migration so firstly the unmaintainable",
    "start": "2998500",
    "end": "3006600"
  },
  {
    "start": "3001000",
    "end": "3231000"
  },
  {
    "text": "big ball of mud is gone with the microservices right we can use CD",
    "start": "3006600",
    "end": "3013680"
  },
  {
    "text": "pipelines we can pull the data we use the pull request model to force a peer",
    "start": "3013680",
    "end": "3020040"
  },
  {
    "text": "review so whenever I users are making changes someone else has to approve",
    "start": "3020040",
    "end": "3025050"
  },
  {
    "text": "those changes before the actual code moves from their particular feature",
    "start": "3025050",
    "end": "3031530"
  },
  {
    "text": "branch into into the main branch it gives us some quality controls and as a",
    "start": "3031530",
    "end": "3037140"
  },
  {
    "text": "result we're doing continuous builds of this improving quality and code coverage",
    "start": "3037140",
    "end": "3042510"
  },
  {
    "text": "of tests micro service print cause we have the strictly enforced",
    "start": "3042510",
    "end": "3047790"
  },
  {
    "text": "bounded contexts and the move on the NGA stack to cloud means that we have",
    "start": "3047790",
    "end": "3054330"
  },
  {
    "text": "stateless and therefore much more highly scalable services the negative of the",
    "start": "3054330",
    "end": "3060810"
  },
  {
    "text": "micro-services approach as supposedly on prem is the eventual consistency which we're solving using at the application",
    "start": "3060810",
    "end": "3068730"
  },
  {
    "text": "layer and the the Kittyhawk micro service from a cloud perspective we have",
    "start": "3068730",
    "end": "3074580"
  },
  {
    "text": "our infrastructure as code pipeline so basically we make an extensive use of",
    "start": "3074580",
    "end": "3079920"
  },
  {
    "text": "cloud formation in order to set up these environments that we're using in the",
    "start": "3079920",
    "end": "3085500"
  },
  {
    "text": "same way that our code goes through the peer review pull request process so does",
    "start": "3085500",
    "end": "3090720"
  },
  {
    "text": "our infrastructure we have the same kind of quality gates and rapid feedback when we're standing up infrastructure now",
    "start": "3090720",
    "end": "3099740"
  },
  {
    "text": "making a extensive use of managed services in the public cloud so dynamodb",
    "start": "3099920",
    "end": "3106580"
  },
  {
    "text": "amazon RDS Kinesis lamda there's a lot less heavy lifting for us to do but of",
    "start": "3106580",
    "end": "3115710"
  },
  {
    "text": "course by moving to the cloud model we are now dealing with eventual consistency and latency again solved at",
    "start": "3115710",
    "end": "3122970"
  },
  {
    "text": "the application layer and finally with this approach we've moved and achieved",
    "start": "3122970",
    "end": "3129000"
  },
  {
    "text": "the requirement for a single development model developers are no longer out",
    "start": "3129000",
    "end": "3134190"
  },
  {
    "text": "needing to write COBOL code to run on the mainframe they're now writing lambda functions that can reach through pull",
    "start": "3134190",
    "end": "3140130"
  },
  {
    "text": "the data out of the mainframe the direction we're giving them is try to use frameworks that even make that",
    "start": "3140130",
    "end": "3146100"
  },
  {
    "text": "agnostic so that we can continue to start taking advantage of new technologies right if you're talking to",
    "start": "3146100",
    "end": "3153119"
  },
  {
    "text": "an RDS database today think about what it would take to actually move to no",
    "start": "3153119",
    "end": "3159090"
  },
  {
    "text": "sequel in the future or whatever comes next we've achieved the goal of polyglot",
    "start": "3159090",
    "end": "3166140"
  },
  {
    "text": "in terms of data stores and languages so by having the network interface between",
    "start": "3166140",
    "end": "3171180"
  },
  {
    "text": "the various components of the system we can implement a micro service using",
    "start": "3171180",
    "end": "3176670"
  },
  {
    "text": "almost any language as long as the interface remains the same the caller that the client of that",
    "start": "3176670",
    "end": "3181740"
  },
  {
    "text": "interface doesn't even need to know the language that it's developed in so that's a huge change from the monolithic",
    "start": "3181740",
    "end": "3187590"
  },
  {
    "text": "codebase and also in terms of data stores so we're now able to tell our developers if your particular micro",
    "start": "3187590",
    "end": "3195300"
  },
  {
    "text": "service makes for example extensive use of relationships there may be a graph",
    "start": "3195300",
    "end": "3201840"
  },
  {
    "text": "database is the right thing for you to use rather than relational rather than no sequel it gives us that kind of",
    "start": "3201840",
    "end": "3207330"
  },
  {
    "text": "flexibility and I've got compliance on there as a bullet point in some respects",
    "start": "3207330",
    "end": "3215660"
  },
  {
    "text": "compliance is easier we have the compliance information from Amazon so",
    "start": "3215660",
    "end": "3222030"
  },
  {
    "text": "we're effectively leveraging their compliance rather than having to do everything ourselves but there's",
    "start": "3222030",
    "end": "3227550"
  },
  {
    "text": "certainly an increase in scrutiny so",
    "start": "3227550",
    "end": "3233130"
  },
  {
    "start": "3231000",
    "end": "3449000"
  },
  {
    "text": "lessons learned basically fall into three separate categories from a regulatory perspective when you're",
    "start": "3233130",
    "end": "3239730"
  },
  {
    "text": "working with a large monolithic database it's very easy to see everything within",
    "start": "3239730",
    "end": "3244860"
  },
  {
    "text": "that database has been sensitive PII",
    "start": "3244860",
    "end": "3250160"
  },
  {
    "text": "type data when you're taking that database splitting it up into multiple different bounded contexts moving it",
    "start": "3250160",
    "end": "3257160"
  },
  {
    "text": "around to different micro services it's possible to think of it differently so",
    "start": "3257160",
    "end": "3263640"
  },
  {
    "text": "understanding the different data classifications is really critical being able to treat those different data",
    "start": "3263640",
    "end": "3270000"
  },
  {
    "text": "classifications in different ways for different micro services can save you a lot of time and effort in terms of the",
    "start": "3270000",
    "end": "3276560"
  },
  {
    "text": "possible solutions that you can use we've often found that it's useful to",
    "start": "3276560",
    "end": "3283410"
  },
  {
    "text": "have a back-up plan because the particular technology that you most want",
    "start": "3283410",
    "end": "3288600"
  },
  {
    "text": "to use perhaps isn't released when you would like it to be isn't compliant as",
    "start": "3288600",
    "end": "3295500"
  },
  {
    "text": "you would want it to be so being able to have another option and often we found that self-managed solutions are the",
    "start": "3295500",
    "end": "3302100"
  },
  {
    "text": "answer there so although a particular managed service may not have the capability that we need we can stand up",
    "start": "3302100",
    "end": "3309120"
  },
  {
    "text": "ec2 instances and install our own software to use for the short term in terms of acceptance so I said earlier",
    "start": "3309120",
    "end": "3318039"
  },
  {
    "text": "we're not just doing one migration we're doing three migrations right and people",
    "start": "3318039",
    "end": "3324369"
  },
  {
    "text": "don't like change so working with large groups of people letting them know",
    "start": "3324369",
    "end": "3329710"
  },
  {
    "text": "what's going on making them part of the process definitely very valuable what we",
    "start": "3329710",
    "end": "3335799"
  },
  {
    "text": "found is that work with large teams to",
    "start": "3335799",
    "end": "3341190"
  },
  {
    "text": "publicise will work with smaller teams to gain consensus and understanding and",
    "start": "3341430",
    "end": "3346779"
  },
  {
    "text": "move forward and in terms of cloud specific we found a number of times AWS",
    "start": "3346779",
    "end": "3354099"
  },
  {
    "text": "has released new capabilities sometimes just after we implemented something that provided the same thing",
    "start": "3354099",
    "end": "3360759"
  },
  {
    "text": "but obviously we want to take advantage of the managed capabilities as much as possible it meant summary architecture",
    "start": "3360759",
    "end": "3366900"
  },
  {
    "text": "we've actually coined within the cloud construction team the idea of continuous",
    "start": "3366900",
    "end": "3372759"
  },
  {
    "text": "architecture so we've got continuous integration continuous deployment there's now this continuous architecture",
    "start": "3372759",
    "end": "3378489"
  },
  {
    "text": "expect it to change and then you won't be disappointed and also build a good",
    "start": "3378489",
    "end": "3384130"
  },
  {
    "text": "relationship with the AWS team so that's been invaluable for us we've found that",
    "start": "3384130",
    "end": "3389829"
  },
  {
    "text": "sometimes you go to AWS if you say what's your roadmap for the next three",
    "start": "3389829",
    "end": "3395710"
  },
  {
    "text": "years you'll be met with stony silence they won't give anything away if you go",
    "start": "3395710",
    "end": "3402640"
  },
  {
    "text": "to them and say I have this specific problem I need this can you help me",
    "start": "3402640",
    "end": "3408269"
  },
  {
    "text": "we've heard much better responses from you're not the only person to ask for",
    "start": "3408269",
    "end": "3414039"
  },
  {
    "text": "this we'll put you on the list we'll see what we can do to prioritize it all the way to hey we've just rolled",
    "start": "3414039",
    "end": "3421509"
  },
  {
    "text": "this out as beta tests we'll add you to the beta you can start playing with it right and right away so that's it from",
    "start": "3421509",
    "end": "3432460"
  },
  {
    "text": "me thank you very much for attending Elia and I will be down here to answer",
    "start": "3432460",
    "end": "3438369"
  },
  {
    "text": "any questions and I know all the swag is probably gone but if you could fill out",
    "start": "3438369",
    "end": "3443980"
  },
  {
    "text": "your comment cards that would be greatly appreciated thank you very much [Applause]",
    "start": "3443980",
    "end": "3451559"
  }
]