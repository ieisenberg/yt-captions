[
  {
    "start": "0",
    "end": "59000"
  },
  {
    "text": "good morning welcome to 21st century",
    "start": "9080",
    "end": "15780"
  },
  {
    "text": "modern architecture my name is sean ray and what we're going",
    "start": "15780",
    "end": "20940"
  },
  {
    "text": "to talk it through today is three demos in 30 minutes how to scale Internet",
    "start": "20940",
    "end": "26000"
  },
  {
    "text": "services and to do that we've been talk sitting down for two hours we've been through keynote this is the builders",
    "start": "26000",
    "end": "33210"
  },
  {
    "text": "track how about we build something so we're gonna kick off straightaway with a demo and it's a crowd participation demo",
    "start": "33210",
    "end": "40079"
  },
  {
    "text": "so I'm gonna hand over to my colleague Gabe and he's gonna take you through it thanks Sean hey guys welcome to the",
    "start": "40079",
    "end": "49050"
  },
  {
    "text": "track we got a lot of cool demos today I'm gonna go pretty quick because I want to make sure to save time for the other",
    "start": "49050",
    "end": "54090"
  },
  {
    "text": "demos we're gonna show you but before we get into it I have a question for you why are we always smiling in selfies I",
    "start": "54090",
    "end": "61829"
  },
  {
    "start": "59000",
    "end": "101000"
  },
  {
    "text": "mean the range of human emotions and experience is a lot more varied than just happiness sometimes we're sad",
    "start": "61829",
    "end": "68090"
  },
  {
    "text": "sometimes we're angry sometimes we're confused sometimes were just calm so as",
    "start": "68090",
    "end": "75509"
  },
  {
    "text": "we get into this demo I want to do a little experiment let's pretend I worked for some big photo company and my",
    "start": "75509",
    "end": "82830"
  },
  {
    "text": "company wants to run an online contest where I encourage people to take selfies with a wide variety of emotions and I",
    "start": "82830",
    "end": "89580"
  },
  {
    "text": "want to give out awards to you know the people who give the best selfies showing different emotions not just smiling all",
    "start": "89580",
    "end": "95009"
  },
  {
    "text": "the time and so what if I did make that and what if I publish this online and maybe you know oh crap we made the front",
    "start": "95009",
    "end": "101819"
  },
  {
    "text": "page maybe it's reddit maybe it's hacker news something like that can we handle the load is the online submission system",
    "start": "101819",
    "end": "107700"
  },
  {
    "text": "we've built to take selfies in and rank them and show the results going to be",
    "start": "107700",
    "end": "113039"
  },
  {
    "text": "able to scale to meet that load well I don't work for a large photo company I work for AWS but we can simulate such a",
    "start": "113039",
    "end": "121289"
  },
  {
    "text": "contest here today and so I want to introduce you to the awesome selfie challenge so get your phone's ready",
    "start": "121289",
    "end": "126780"
  },
  {
    "text": "because in a second I'm gonna ask you guys I'll take out your phones scan a QR code or just load a URL take your selfie",
    "start": "126780",
    "end": "133349"
  },
  {
    "text": "of yourselves and then we'll go ahead and see who wins now to encourage you all to participate",
    "start": "133349",
    "end": "138450"
  },
  {
    "text": "the fact that's just fun to take selfies and see yourself on screen I'm going to give $100 an AWS credit to each of the",
    "start": "138450",
    "end": "145860"
  },
  {
    "text": "category winners so here's your phones there's the code remember you might need to zoom in to get that QR code and scan",
    "start": "145860",
    "end": "152400"
  },
  {
    "text": "by your phone or just go ahead and type in the URL there now I know what you're thinking maybe how are we gonna decide",
    "start": "152400",
    "end": "159959"
  },
  {
    "text": "who the winners are right is it gonna be me well that's not very fair I'm subjective I'm just a human so let's",
    "start": "159959",
    "end": "166110"
  },
  {
    "text": "take subjectivity out of it and instead I'm going to use Amazon's recognition it's one of our AI",
    "start": "166110",
    "end": "172560"
  },
  {
    "text": "application level services and one of the features that it can do is it can scan faces and look for emotional",
    "start": "172560",
    "end": "178290"
  },
  {
    "text": "content within them so it'll rank them into different categories like happy or sad or confused or disgusted angry etc",
    "start": "178290",
    "end": "184290"
  },
  {
    "text": "and so we're gonna let recognition decide who's got the best selfie in each category and so if you end up on screen",
    "start": "184290",
    "end": "191910"
  },
  {
    "text": "after this talk is over if you come see me I'll just hang up on the front here for a little bit I'll go ahead and I'll",
    "start": "191910",
    "end": "198150"
  },
  {
    "text": "give you $100 and AWS credit to use for whatever you want so you'll give me your email and I'll follow up with you personally later and give you that code",
    "start": "198150",
    "end": "204680"
  },
  {
    "text": "okay can I just get a show of hands if you were able to upload a selfie successfully I just want to see that",
    "start": "204680",
    "end": "210480"
  },
  {
    "text": "we've got some participation through the 3G and stuff that's good thank you I'm gonna give it just another minute here",
    "start": "210480",
    "end": "216060"
  },
  {
    "text": "I'm just gonna see how we're doing good okay and you know one of the other things I mentioned was that uh you know",
    "start": "216060",
    "end": "224459"
  },
  {
    "text": "recognition is going to scan all the images but it's gonna do more than just that it's going to check to make sure",
    "start": "224459",
    "end": "231989"
  },
  {
    "text": "that the content that people are uploading is actually legit and so I just went through and did a double check",
    "start": "231989",
    "end": "238650"
  },
  {
    "text": "to make sure all the pictures I'm about to put on screen are acceptable for public display they are and so I'm just",
    "start": "238650",
    "end": "245910"
  },
  {
    "text": "in the process of submitting that right now and we should be good to go so hang on a second Sean should be able to",
    "start": "245910",
    "end": "252780"
  },
  {
    "text": "refresh the results page and we've got some winners now it looks good okay so let's go to the results and now we'll go",
    "start": "252780",
    "end": "260430"
  },
  {
    "text": "to the the demo computer here so we can see those faces so congratulations to these people there's your those are the",
    "start": "260430",
    "end": "267720"
  },
  {
    "start": "261000",
    "end": "280000"
  },
  {
    "text": "winners if you see yourself up there please come see me afterwards and we'll go ahead and get you the credit",
    "start": "267720",
    "end": "273080"
  },
  {
    "text": "and thank you for participating so let's move on how did I build this so I'll go back to the slides now thank you how did",
    "start": "273080",
    "end": "279950"
  },
  {
    "text": "I build this well it was actually really easy this is the architecture for it I started with AWS mobile hub which makes",
    "start": "279950",
    "end": "286220"
  },
  {
    "start": "280000",
    "end": "430000"
  },
  {
    "text": "it easy easy to get started building applications for mobile devices in this case this was just a simple web app",
    "start": "286220",
    "end": "291830"
  },
  {
    "text": "powered by react and mobile hub set that up for me it also set up a Cognito user",
    "start": "291830",
    "end": "297590"
  },
  {
    "text": "pool and a cloud foreign distribution backed by s3 and so what happens is when",
    "start": "297590",
    "end": "304040"
  },
  {
    "text": "you load up the app you get a set of temporary credentials delivered to your to your device via kognito and those",
    "start": "304040",
    "end": "311090"
  },
  {
    "text": "credentials give you access to an IM role that will let you upload a file to an s3 bucket when those images get into",
    "start": "311090",
    "end": "318470"
  },
  {
    "text": "the s3 bucket they need to be processed and so a series of lambdas kicked off and they're orchestrated by one of our",
    "start": "318470",
    "end": "324980"
  },
  {
    "text": "services called step functions if you haven't heard of step functions before they just let you coordinate how data",
    "start": "324980",
    "end": "332360"
  },
  {
    "text": "flow can be processed by lambdas so 1 lambda looks and computes the metadata information the width and the height of",
    "start": "332360",
    "end": "338060"
  },
  {
    "text": "the images a different lambda passes it through recognition to say is this image safe for public display does content",
    "start": "338060",
    "end": "345170"
  },
  {
    "text": "moderation another one does the emotional analysis then all that data gets funneled into a type table and",
    "start": "345170",
    "end": "351290"
  },
  {
    "text": "dynamodb now because I've done a lot of web development in my past I've built rest web services for a long time I'm",
    "start": "351290",
    "end": "358580"
  },
  {
    "text": "now a fan of graph QL I think it's really great and so I was excited to be able to use one of our newer services AWS app sync in order to get at that",
    "start": "358580",
    "end": "366260"
  },
  {
    "text": "dynamodb table so if you haven't heard of it app sync is a service that lets you have",
    "start": "366260",
    "end": "371420"
  },
  {
    "text": "a managed graph QL endpoint to access data backed by elastic search or dynamodb or lambda functions it's really",
    "start": "371420",
    "end": "378050"
  },
  {
    "text": "neat so that's the architecture now the one key takeaway from this is you'll notice there's no servers here right",
    "start": "378050",
    "end": "385250"
  },
  {
    "text": "everything here is managed by AWS so I know it'll it can scale to handle the",
    "start": "385250",
    "end": "390620"
  },
  {
    "text": "load I don't need to worry about that that's a theme I think you're gonna hear it a lot today is serverless is you know",
    "start": "390620",
    "end": "395660"
  },
  {
    "text": "how you should be thinking about building apps and server this is more than just lambda right it's anything you don't have to manage that we'll handle",
    "start": "395660",
    "end": "401720"
  },
  {
    "text": "scale and so that's that's it for the the architecture but",
    "start": "401720",
    "end": "407910"
  },
  {
    "text": "one last thing I want to mention about this is you don't take my word for it this is just a simulation today you know FINRA I think you heard at the keynote",
    "start": "407910",
    "end": "414150"
  },
  {
    "text": "this morning processes 500 billion validations of market events in the US",
    "start": "414150",
    "end": "419730"
  },
  {
    "text": "stock market every day using lambda so it's insanely scalable and it can definitely handle your loads so now I",
    "start": "419730",
    "end": "426570"
  },
  {
    "text": "want to move on and I want to talk about want to move on and I want to talk about",
    "start": "426570",
    "end": "431970"
  },
  {
    "start": "430000",
    "end": "461000"
  },
  {
    "text": "internet scale services now as you all know internet scale services should be secure reliable and performant we all",
    "start": "431970",
    "end": "439560"
  },
  {
    "text": "know that but security is about more than just passwords reliability is about more than just redundancy and",
    "start": "439560",
    "end": "445950"
  },
  {
    "text": "performance is about more than just scalability so I'm gonna talk about each",
    "start": "445950",
    "end": "453420"
  },
  {
    "text": "of these three in turn and I'm going to go pretty quick because again I want to save content for the other demos that",
    "start": "453420",
    "end": "459180"
  },
  {
    "text": "are really exciting so first security security is job zero we say that at AWS a lot the first thing and you heard",
    "start": "459180",
    "end": "465930"
  },
  {
    "start": "461000",
    "end": "541000"
  },
  {
    "text": "about this in the keynote this morning as well is he big Buddhist encryption now this is really just a concept describing a",
    "start": "465930",
    "end": "471300"
  },
  {
    "text": "best practice in the industry and you should definitely be encrypting - whether it's terminating SSL endpoints",
    "start": "471300",
    "end": "476610"
  },
  {
    "text": "with API gateway or encrypting your data at rest in s 3 or dynamodb or aurora or",
    "start": "476610",
    "end": "482760"
  },
  {
    "text": "using kms to manage your keys AWS has you covered well you might not know is that AWS is recently FIPS 140-2",
    "start": "482760",
    "end": "490290"
  },
  {
    "text": "certified and that's a new certification for us that means we passed government",
    "start": "490290",
    "end": "495600"
  },
  {
    "text": "grade security standards for cryptographic modules so I know that's going to make a lot of security sensitive customers happy next we've got",
    "start": "495600",
    "end": "502680"
  },
  {
    "text": "a a service called trusted advisor now a trusted advisor you also heard about",
    "start": "502680",
    "end": "508260"
  },
  {
    "text": "this morning in the keynote it's a service that will scan your AWS environment and look for suggestions on",
    "start": "508260",
    "end": "513479"
  },
  {
    "text": "how to improve your security and your and save costs and I'll show you a",
    "start": "513479",
    "end": "518760"
  },
  {
    "text": "screenshot of that in a minute finally we have cloud trail cloud trail is a service that will tell you what",
    "start": "518760",
    "end": "525420"
  },
  {
    "text": "changed in your AWS environment when and who did it and so that's anytime any API calls",
    "start": "525420",
    "end": "530850"
  },
  {
    "text": "happen on your AWS environment it's getting logged in cloud trail and it can ship those logs to an s3 bucket for",
    "start": "530850",
    "end": "536280"
  },
  {
    "text": "additional you know peace of mind that you know you're keeping in a safe place so LG Electronics is one",
    "start": "536280",
    "end": "543089"
  },
  {
    "start": "541000",
    "end": "560000"
  },
  {
    "text": "of our customers they use AWS to enhance the service quality for 40 million LG",
    "start": "543089",
    "end": "548310"
  },
  {
    "text": "Smart TVs around the world and we managed to save 40% of the process as well so of course they're using a lot of",
    "start": "548310",
    "end": "554760"
  },
  {
    "text": "our security features to do that and so not only are they saving money but they're doing it securely as promised",
    "start": "554760",
    "end": "561060"
  },
  {
    "start": "560000",
    "end": "579000"
  },
  {
    "text": "here's a screenshot of what trusted advisor looks like you can see that there's actually a number of different",
    "start": "561060",
    "end": "566149"
  },
  {
    "text": "sections to the dashboard this is the security section and it gives me a list of things I might want to look at in",
    "start": "566149",
    "end": "571649"
  },
  {
    "text": "this particular example it's telling me things like oh I need a password policy on my IM accounts to make sure they have",
    "start": "571649",
    "end": "576750"
  },
  {
    "text": "secure passwords etc moving on reliability right reliability is",
    "start": "576750",
    "end": "582510"
  },
  {
    "start": "579000",
    "end": "678000"
  },
  {
    "text": "important I think it actually starts with knowing that the environments you're provisioning are repeatable right",
    "start": "582510",
    "end": "587690"
  },
  {
    "text": "CloudFormation is our tooling that lets you set up infrastructure as code",
    "start": "587690",
    "end": "592730"
  },
  {
    "text": "CloudFormation is great something along with CloudFormation especially if you know service is Sam that's the service",
    "start": "592730",
    "end": "598980"
  },
  {
    "text": "application module it's an extension for CloudFormation and if you haven't heard that you should look up online gives",
    "start": "598980",
    "end": "605069"
  },
  {
    "text": "it'll make setting up server less confirmation stacks that used to look really verbose and about this many lines",
    "start": "605069",
    "end": "610500"
  },
  {
    "text": "about this many so it's definitely something you should look into something that you didn't really hear a lot of in",
    "start": "610500",
    "end": "617040"
  },
  {
    "text": "this morning's keynote that I think is really exciting it's code star code star is our service that makes it easy to get",
    "start": "617040",
    "end": "624690"
  },
  {
    "text": "started with development best practices whether it's you know setting up a get repository in AWS code commit or",
    "start": "624690",
    "end": "632610"
  },
  {
    "text": "connecting to github code star will set you up with the process of having a CI CD continuous",
    "start": "632610",
    "end": "638670"
  },
  {
    "text": "integration continuous delivery pipeline with fast deployments all managed for you in a few clicks how I start all my",
    "start": "638670",
    "end": "645029"
  },
  {
    "text": "projects and code star and I think it's worth looking at too because it's not a it's important not only to have reliable",
    "start": "645029",
    "end": "651690"
  },
  {
    "text": "infrastructure but also a reliable development and deployment process finally this one is about redundancy we",
    "start": "651690",
    "end": "658139"
  },
  {
    "text": "have a third availability zone recently added to Singapore if you didn't know that it's good to know",
    "start": "658139",
    "end": "663600"
  },
  {
    "text": "it'll let you run quorum services like you know Kafka or Cassandra on your own",
    "start": "663600",
    "end": "668970"
  },
  {
    "text": "of course we also use it for Amazon Aurora or fastest-growing service to make sure your data is well",
    "start": "668970",
    "end": "674579"
  },
  {
    "text": "protected and highly available Singapore Post was one of our customers that",
    "start": "674579",
    "end": "680220"
  },
  {
    "text": "managed to expand into an entirely new region in a single day because they were using CloudFormation",
    "start": "680220",
    "end": "686959"
  },
  {
    "text": "finally here's a screenshot of code star in action this is the dashboard you get after you set up a code start project",
    "start": "686959",
    "end": "692820"
  },
  {
    "start": "687000",
    "end": "707000"
  },
  {
    "text": "out of the box it'll tell you things like what your application activity is looking like recent code commits and",
    "start": "692820",
    "end": "698850"
  },
  {
    "text": "even on the right-hand side you can see there's a build pipeline that was set up automatically for us and it'll tell you the status of after you commit code when",
    "start": "698850",
    "end": "705300"
  },
  {
    "text": "it gets built and how it gets deployed finally performance so dynamodb you I'm",
    "start": "705300",
    "end": "713610"
  },
  {
    "start": "707000",
    "end": "788000"
  },
  {
    "text": "sure you all know about that but if you need to take your DynamoDB queries and take them from milliseconds which is",
    "start": "713610",
    "end": "719279"
  },
  {
    "text": "already very fast down to microseconds DynamoDB accelerator is a caching service you can put in front of DynamoDB",
    "start": "719279",
    "end": "726360"
  },
  {
    "text": "to achieve really fast reads and writes another service is called lambda edge",
    "start": "726360",
    "end": "731750"
  },
  {
    "text": "you can use lambda edge to wrap cloud front requests and responses to do things like intelligently pick better",
    "start": "731750",
    "end": "739040"
  },
  {
    "text": "images to deliver to the clients device based on the device properties or maybe",
    "start": "739040",
    "end": "744810"
  },
  {
    "text": "doing a/b testing and taking that load off your server for figuring out what a B test to run for a customer so you can",
    "start": "744810",
    "end": "751380"
  },
  {
    "text": "read cookies redirect requests write cookies back to the customer so it's",
    "start": "751380",
    "end": "756510"
  },
  {
    "text": "good for a/b tests finally x-ray so if you are building server lists",
    "start": "756510",
    "end": "762510"
  },
  {
    "text": "distributed applications then you're gonna need a way to trace those requests as they go through different services",
    "start": "762510",
    "end": "768779"
  },
  {
    "text": "that build up you know whatever you're powering x-ray is a distributed tracing",
    "start": "768779",
    "end": "773880"
  },
  {
    "text": "application just I'm sorry a distributed application tracing framework that 8vs is built with a few simple API calls",
    "start": "773880",
    "end": "780720"
  },
  {
    "text": "from whatever app service you're building you can send data to x-ray I've got a screen shot of what this looks like in a second Travelex is a company",
    "start": "780720",
    "end": "789300"
  },
  {
    "start": "788000",
    "end": "810000"
  },
  {
    "text": "that uses lamda edge they're our customer of ours also they use lamda edge to make sure appropriate HTTP",
    "start": "789300",
    "end": "794459"
  },
  {
    "text": "headers are in place for all of their API requests I'm sorry for the responses to all their API requests so that way",
    "start": "794459",
    "end": "801089"
  },
  {
    "text": "each developer doesn't have to remember to put a set of important headers on all the responses they push that",
    "start": "801089",
    "end": "807269"
  },
  {
    "text": "responsibility out to the edge and let Lambeau take care of it here's the screenshot of x-ray in action so you can",
    "start": "807269",
    "end": "813630"
  },
  {
    "start": "810000",
    "end": "833000"
  },
  {
    "text": "see this is what a distributed application trace looks like where different time is spent and different subcomponents that manage a particular",
    "start": "813630",
    "end": "820290"
  },
  {
    "text": "request and maybe where certain hot spots are and so x-ray makes it easy to",
    "start": "820290",
    "end": "825720"
  },
  {
    "text": "see that stuff at a glance with a nice dashboard - and now I'm gonna hand it off to Sean who's gonna continue telling",
    "start": "825720",
    "end": "831149"
  },
  {
    "text": "you more about what's driving all this software thanks ed so you know we did",
    "start": "831149",
    "end": "836760"
  },
  {
    "text": "the selfie demo this morning we talked about a lot of different services such as DynamoDB accelerator some of the",
    "start": "836760",
    "end": "843180"
  },
  {
    "text": "services that we've been building at AWS like app sync but really why are we actually building this software why is",
    "start": "843180",
    "end": "848910"
  },
  {
    "text": "open source our community going out and building these different types of software and so if you look at the",
    "start": "848910",
    "end": "856740"
  },
  {
    "start": "854000",
    "end": "932000"
  },
  {
    "text": "journey and the digital access to date it's actually the consumers that is driving what we have to change in",
    "start": "856740",
    "end": "861870"
  },
  {
    "text": "software what we have to change is builders we've started in mainframes with dumb terminals and green screens",
    "start": "861870",
    "end": "867300"
  },
  {
    "text": "and then we've moved into the desktop era without gooeys and these were heavy desktop applications we then moved into",
    "start": "867300",
    "end": "874800"
  },
  {
    "text": "the web and starting building everything in the browser and things like PHP became very popular so server-side",
    "start": "874800",
    "end": "880649"
  },
  {
    "text": "rendering and then finally especially in Southeast Asia into mobile and in a lot",
    "start": "880649",
    "end": "886470"
  },
  {
    "text": "of Southeast Asia countries where we don't have fixed line internet we've gone and adopted mobile much more than",
    "start": "886470",
    "end": "891779"
  },
  {
    "text": "some of the other Western countries there are 400 million middle class Southeast Asians and just about all of",
    "start": "891779",
    "end": "899130"
  },
  {
    "text": "them use their mobile for a daily transaction and so that is driven a huge explosion in data and the different ways",
    "start": "899130",
    "end": "905640"
  },
  {
    "text": "that we have to write systems because if you think about scalability 15 years ago you were doing ERP systems and payroll",
    "start": "905640",
    "end": "913350"
  },
  {
    "text": "systems for big companies and you knew exactly how many employees you had you knew that you had 10,000 employees and",
    "start": "913350",
    "end": "920040"
  },
  {
    "text": "that was the highest scale so you could measure your infrastructure and now when we're doing mobile we don't know how many people are going to use our",
    "start": "920040",
    "end": "925829"
  },
  {
    "text": "infrastructure and so it's variable and so we have to build systems that can handle these kind of peak loads",
    "start": "925829",
    "end": "932810"
  },
  {
    "start": "932000",
    "end": "989000"
  },
  {
    "text": "and if you look at the technology drivers it's not just the consumers that are creating this data we now have",
    "start": "933940",
    "end": "939400"
  },
  {
    "text": "billions of devices coming online through the internet of things from cars to fridges to your watches and they're",
    "start": "939400",
    "end": "946060"
  },
  {
    "text": "not doing one-and-a-half gig a day of data which is actually the average that a human generates on their mobile phone",
    "start": "946060",
    "end": "951760"
  },
  {
    "text": "they're doing petabytes and terabytes if you're talking about things like smart factories the other big change that",
    "start": "951760",
    "end": "958390"
  },
  {
    "text": "we've seen in technology is the compute power so by adding cause by moving into",
    "start": "958390",
    "end": "965440"
  },
  {
    "text": "things like GPUs we have been out of take technology that we invented 30 years ago like machine learning and deep",
    "start": "965440",
    "end": "971140"
  },
  {
    "text": "learning and apply them to problems that we have to these huge data sources and now that we have these massive sways of",
    "start": "971140",
    "end": "977740"
  },
  {
    "text": "data we have to think about the way we store it and the way we query it because it's greater than what a normal",
    "start": "977740",
    "end": "984220"
  },
  {
    "text": "relational database can handle and so we've had to go out and build completely different systems and we've gone from",
    "start": "984220",
    "end": "991750"
  },
  {
    "start": "989000",
    "end": "1055000"
  },
  {
    "text": "having single node servers to having clustered servers for things like",
    "start": "991750",
    "end": "997090"
  },
  {
    "text": "Cassandra to Hadoop from MongoDB to neo4j we've had to build completely",
    "start": "997090",
    "end": "1002190"
  },
  {
    "text": "different storage systems to be able to handle all of this data because the users moving into mobile has mean that",
    "start": "1002190",
    "end": "1008160"
  },
  {
    "text": "we needed to query millions of things per second instead of thousands of things per second we've moved into multi",
    "start": "1008160",
    "end": "1014220"
  },
  {
    "text": "datacenter architectures and the problem with this is the infrastructure you have",
    "start": "1014220",
    "end": "1019980"
  },
  {
    "text": "to build all of this infrastructure and maintain it and understand what happens if you have a multi datacenter Cassandra",
    "start": "1019980",
    "end": "1025949"
  },
  {
    "text": "if you have Hadoop running over thousands of nodes what happens if the master fails how do you actually recover",
    "start": "1025950",
    "end": "1032760"
  },
  {
    "text": "from the job and so now that business wants more access we have data analysts",
    "start": "1032760",
    "end": "1037890"
  },
  {
    "text": "who want to query all this data it's not IT people anymore who want to access it we need to find ways that makes it",
    "start": "1037890",
    "end": "1043620"
  },
  {
    "text": "simple for them where they don't need people to actually write a whole bunch of code to stand up this infrastructure for them or to all the servers and wait",
    "start": "1043620",
    "end": "1050520"
  },
  {
    "text": "twelve weeks and so with that in mind I'm going to show you another demo now",
    "start": "1050520",
    "end": "1056870"
  },
  {
    "start": "1055000",
    "end": "1293000"
  },
  {
    "text": "which is going to try and solve some of these problems",
    "start": "1056870",
    "end": "1061309"
  },
  {
    "text": "okay I'll kick the demo off and then we'll talk through it oh I got who likes",
    "start": "1062710",
    "end": "1090980"
  },
  {
    "text": "Tyson Tyson three good times okay so",
    "start": "1090980",
    "end": "1097250"
  },
  {
    "text": "what we're actually doing here is we are creating a bunch of lambda functions and we are zipping them up and we are",
    "start": "1097250",
    "end": "1102500"
  },
  {
    "text": "uploading them up into North Virginia so one of our regions and we are actually",
    "start": "1102500",
    "end": "1109900"
  },
  {
    "text": "taking about 25 gig worth of data so it's actually data which is taking logs",
    "start": "1109900",
    "end": "1116330"
  },
  {
    "text": "from mobile devices and we are aggregating rad revenue based on these",
    "start": "1116330",
    "end": "1123289"
  },
  {
    "text": "users and which of these IPS actually hit our service and so what you're",
    "start": "1123289",
    "end": "1128539"
  },
  {
    "text": "seeing here and what actually we were doing at the top is the upload so this is actually using the local internet and",
    "start": "1128539",
    "end": "1138020"
  },
  {
    "text": "you'll see here there 20 seconds so 20 point five two down the bottom using no one to time it out so that's actually",
    "start": "1138020",
    "end": "1143960"
  },
  {
    "text": "our upload so this is with all your guys mobiles and the Wi-Fi in here me uploading those lambda functions then",
    "start": "1143960",
    "end": "1150470"
  },
  {
    "text": "what we're doing is we're building mappers so we're going to do MapReduce over this architecture and we're actually going to use lambda to build",
    "start": "1150470",
    "end": "1156850"
  },
  {
    "text": "the matters and the reducers so you'll see here I've got the map output the one",
    "start": "1156850",
    "end": "1162200"
  },
  {
    "text": "is they're using one key and they're actually taking that data that I have the 25 gig that's built into 202 keys",
    "start": "1162200",
    "end": "1168289"
  },
  {
    "text": "and they're actually splitting it out so lambda is processing one each and the number that you see next to it which is",
    "start": "1168289",
    "end": "1174559"
  },
  {
    "text": "the three point two three point four and a couple of smaller files up the top 0.46 this is actually the time that",
    "start": "1174559",
    "end": "1181940"
  },
  {
    "text": "lambda is running so it is taking three seconds to produce each key so we have a twenty second upload but the actual",
    "start": "1181940",
    "end": "1188000"
  },
  {
    "text": "processing time is only three seconds and we see that we have 202 mappers I've actually written the code so that it",
    "start": "1188000",
    "end": "1194179"
  },
  {
    "text": "splits it out so that we can do one lambda per mapper so currently you can do that up to a thousand keys in a",
    "start": "1194179",
    "end": "1199670"
  },
  {
    "text": "normal account and then down the bottom we can have also calculated the cost",
    "start": "1199670",
    "end": "1206150"
  },
  {
    "text": "based on the Northridge inner pricing so we can see the total runtime we can see the actual cost of storing it on s3 the",
    "start": "1206150",
    "end": "1213380"
  },
  {
    "text": "running of lambda so we actually did 864 seconds of lambda and the total cost was",
    "start": "1213380",
    "end": "1220190"
  },
  {
    "text": "22 cents and we processed 154 million rows of data so without the upload the average our",
    "start": "1220190",
    "end": "1226970"
  },
  {
    "text": "lambda time is about 3.2 seconds so you can scale this out we now support 3003",
    "start": "1226970",
    "end": "1233600"
  },
  {
    "text": "thousand concurrent lambdas if you set your limits up correct we support three gig of memory and a runtime of 300",
    "start": "1233600",
    "end": "1241250"
  },
  {
    "text": "seconds so you can do about seven terabytes of data using MapReduce this",
    "start": "1241250",
    "end": "1246530"
  },
  {
    "text": "way if you can write the query to actually query your logs and they're quite static the other thing is if you",
    "start": "1246530",
    "end": "1251990"
  },
  {
    "text": "are running this in production you wouldn't necessarily upload the lambda every time because you wouldn't actually be changing it you just be running it",
    "start": "1251990",
    "end": "1258620"
  },
  {
    "text": "once a day or if you've got a business user who wants to see something ad hoc query I want to query these logs and see",
    "start": "1258620",
    "end": "1264920"
  },
  {
    "text": "what the ad revenue was for this particular day on this particular set of servers or this particular set of",
    "start": "1264920",
    "end": "1270350"
  },
  {
    "text": "customers you could just run this wait 30 seconds and you'll actually have the reduced answer that you could then grab",
    "start": "1270350",
    "end": "1275900"
  },
  {
    "text": "from the results if you're wondering what how they the timing on the side",
    "start": "1275900",
    "end": "1281600"
  },
  {
    "text": "it's a tool called Noman you can go download as it's G&R mrn and you can do",
    "start": "1281600",
    "end": "1287300"
  },
  {
    "text": "the same kind of thing for anything you're running from the command line okay we'll switch back",
    "start": "1287300",
    "end": "1293110"
  },
  {
    "start": "1293000",
    "end": "1366000"
  },
  {
    "text": "so how do we build this so the data I'm actually using is from a big data benchmark you can use it for any of the",
    "start": "1298170",
    "end": "1304960"
  },
  {
    "text": "things you're trying to benchmark they've actually done a series of things over hive over Pig over redshift as well",
    "start": "1304960",
    "end": "1312610"
  },
  {
    "text": "and then I'm using it in our lambda benchmark here so it's a set of big data benchmarks that you can run any of your",
    "start": "1312610",
    "end": "1318220"
  },
  {
    "text": "types of systems over and understand how they perform against all the other big data frameworks out there so it's called",
    "start": "1318220",
    "end": "1325330"
  },
  {
    "text": "ant labs you can go and have a look at it and so we've got the raw benchmark data we are querying it through lamda",
    "start": "1325330",
    "end": "1331210"
  },
  {
    "text": "and we're actually doing a setup function and that setup function is really figuring out how many keys do I",
    "start": "1331210",
    "end": "1337300"
  },
  {
    "text": "have how much memory do I have so that I can split out and what this picture doesn't really slick sure is when we get",
    "start": "1337300",
    "end": "1343120"
  },
  {
    "text": "to the coordinator we're actually spinning up 202 of those lambdas in the reducer and Malthus stage",
    "start": "1343120",
    "end": "1349420"
  },
  {
    "text": "so we have one lambda per key actually crunching this data so the total cost",
    "start": "1349420",
    "end": "1354940"
  },
  {
    "text": "was 18 cents and the total actual run time was about 30 seconds with the upload so we can do this very scalable",
    "start": "1354940",
    "end": "1362260"
  },
  {
    "text": "to test out these type of functions this",
    "start": "1362260",
    "end": "1367300"
  },
  {
    "start": "1366000",
    "end": "1429000"
  },
  {
    "text": "is actually the code I've just extracted some of the code and put it in the slide for you so you can have a look at what we're actually doing we're just really",
    "start": "1367300",
    "end": "1374200"
  },
  {
    "text": "pulling out the keys we have a particular line split so we're looking for the IP addresses we're aggregating",
    "start": "1374200",
    "end": "1380530"
  },
  {
    "text": "based on time variable and then we have the reducer which is actually building",
    "start": "1380530",
    "end": "1385660"
  },
  {
    "text": "the lambda and doing the reduce function and so it's very simple code you can do all of this in less than a couple of",
    "start": "1385660",
    "end": "1391690"
  },
  {
    "text": "hundred lines of code most of the code is actually orchestrated in writing it to the s3 bucket picking it up and",
    "start": "1391690",
    "end": "1396970"
  },
  {
    "text": "understanding that the job is finished Gabe was talking before about step functions so the reason that step",
    "start": "1396970",
    "end": "1403540"
  },
  {
    "text": "functions is not included in this demo and it's not orchestrating our lambdas like you normally would is because as",
    "start": "1403540",
    "end": "1408790"
  },
  {
    "text": "the size of the data changes each day there'll be a variable number of keys and step functions at the moment you",
    "start": "1408790",
    "end": "1416320"
  },
  {
    "text": "must actually explicitly tell it how many channels you want to map and you must actually name them before you start",
    "start": "1416320",
    "end": "1421540"
  },
  {
    "text": "and so we couldn't do that because every time our data changes we'd have to build an entirely new step function and upload",
    "start": "1421540",
    "end": "1427480"
  },
  {
    "text": "it so internet scale services they're secure they're reliable and they're",
    "start": "1427480",
    "end": "1434749"
  },
  {
    "start": "1429000",
    "end": "1442000"
  },
  {
    "text": "performant but you shouldn't take gaiba knows word for it how about we talk to actual customers who are running this in",
    "start": "1434749",
    "end": "1440690"
  },
  {
    "text": "production so with that I would like to introduce dr. Matt Matthew Berryman and",
    "start": "1440690",
    "end": "1446269"
  },
  {
    "start": "1442000",
    "end": "1556000"
  },
  {
    "text": "he's going to talk about petegem cut better pet urban China in in Jakarta",
    "start": "1446269",
    "end": "1452590"
  },
  {
    "text": "thanks Sean so briefly run through Pepin China which is a flood mapping platform",
    "start": "1459909",
    "end": "1466070"
  },
  {
    "text": "operating in Indonesia backed by MIT urban risk lab my company across the",
    "start": "1466070",
    "end": "1472970"
  },
  {
    "text": "cloud funded by US aid so Jakarta has a number of challenges",
    "start": "1472970",
    "end": "1479690"
  },
  {
    "text": "it's sinking very rapidly under the weight of all the tall buildings and grand water extraction there's climate",
    "start": "1479690",
    "end": "1486590"
  },
  {
    "text": "change which leads to more intense rainfall events there's lots of trash",
    "start": "1486590",
    "end": "1492619"
  },
  {
    "text": "that gets thrown into the river and can bog up the look up the gates and pumps",
    "start": "1492619",
    "end": "1498679"
  },
  {
    "text": "and all this leads to major flooding events in Jakarta and we started with",
    "start": "1498679",
    "end": "1506809"
  },
  {
    "text": "the observation that people were already communicating and tweeting and",
    "start": "1506809",
    "end": "1512419"
  },
  {
    "text": "facebooking about these flooding events there are a hundred and fifteen million",
    "start": "1512419",
    "end": "1517429"
  },
  {
    "text": "people using social media in Indonesia and there's a lot of mobile use there",
    "start": "1517429",
    "end": "1522739"
  },
  {
    "text": "and this map here actually shows some data from the 2013-14 monsoon where we",
    "start": "1522739",
    "end": "1530539"
  },
  {
    "text": "just went through all of the public tweets that were there and plotted the flood locations and in particular",
    "start": "1530539",
    "end": "1536629"
  },
  {
    "text": "sections you can even start to make out where there's lots of flooding along some of the waterways and canals there",
    "start": "1536629",
    "end": "1543970"
  },
  {
    "text": "so we decided to tap into this as a source of information and built Parapan",
    "start": "1543970",
    "end": "1552109"
  },
  {
    "text": "China which is a crowd-sourced flood mapping platform it's used by the",
    "start": "1552109",
    "end": "1557840"
  },
  {
    "text": "emergency authorities and they've got their own custome interface for putting in official flat height data so I've now got a",
    "start": "1557840",
    "end": "1565850"
  },
  {
    "text": "little video which demonstrates how flood information is reported into the system and then I'll talk through the",
    "start": "1565850",
    "end": "1572390"
  },
  {
    "start": "1572000",
    "end": "1673000"
  },
  {
    "text": "architecture so we've got a number of",
    "start": "1572390",
    "end": "1578480"
  },
  {
    "text": "bots we've got Twitter telegram in here Facebook Messenger and I click on get",
    "start": "1578480",
    "end": "1585770"
  },
  {
    "text": "started and it gives me back a message inviting me to lap or Kanban gear which",
    "start": "1585770",
    "end": "1591110"
  },
  {
    "text": "means report flood are then click on that and I get back a custom reporting",
    "start": "1591110",
    "end": "1596630"
  },
  {
    "text": "link which then takes me to a mobile friendly website where I can enter in",
    "start": "1596630",
    "end": "1601700"
  },
  {
    "text": "the relevant flood information within some of the apps they don't necessarily",
    "start": "1601700",
    "end": "1607040"
  },
  {
    "text": "have location turned on so those in that case you can actually click and drag to",
    "start": "1607040",
    "end": "1612320"
  },
  {
    "text": "select your location and click on next and then you can click and drag to",
    "start": "1612320",
    "end": "1619010"
  },
  {
    "text": "select the flood height for your area you can upload a photo so this was some",
    "start": "1619010",
    "end": "1629030"
  },
  {
    "text": "flooding in Jakarta type in the",
    "start": "1629030",
    "end": "1634760"
  },
  {
    "text": "description we've come to a review slide",
    "start": "1634760",
    "end": "1642560"
  },
  {
    "text": "we can go back and change any of the information if we want and then when",
    "start": "1642560",
    "end": "1648500"
  },
  {
    "text": "we're ready we swipe to submit and then",
    "start": "1648500",
    "end": "1654080"
  },
  {
    "text": "the bot sends us a link back to our individual flood report on the map and",
    "start": "1654080",
    "end": "1659240"
  },
  {
    "text": "we can share this with our family friends colleagues to let them know where the flooding is and we can view",
    "start": "1659240",
    "end": "1667760"
  },
  {
    "text": "that with other flood reports and the official flood height data in the colored regions there so I now step you",
    "start": "1667760",
    "end": "1676010"
  },
  {
    "start": "1673000",
    "end": "1788000"
  },
  {
    "text": "through the architecture behind this we originally started with a monolithic app we moved to Amazon Elastic Beanstalk for",
    "start": "1676010",
    "end": "1684340"
  },
  {
    "text": "reliability and importantly scalability because we can go from 10 users a day",
    "start": "1684340",
    "end": "1690020"
  },
  {
    "text": "during the dry season up to quarter of a million users a day during",
    "start": "1690020",
    "end": "1695160"
  },
  {
    "text": "funny event and then we put API gateway in front of that which has allowed us to",
    "start": "1695160",
    "end": "1701850"
  },
  {
    "text": "move away and start using in micro-services so using lambda for",
    "start": "1701850",
    "end": "1707270"
  },
  {
    "text": "greatest scalability and also it's more cost effective so users sent that",
    "start": "1707270",
    "end": "1715260"
  },
  {
    "text": "message through that vim goes through to Facebook servers then talks to our API",
    "start": "1715260",
    "end": "1722280"
  },
  {
    "text": "gateway which then talks to a lambda which is providing some of that bot",
    "start": "1722280",
    "end": "1728040"
  },
  {
    "text": "functionality that we've seen that what within bot lambda then talks back",
    "start": "1728040",
    "end": "1734820"
  },
  {
    "text": "through API gateway twelve core server to grab that custom reporting link and",
    "start": "1734820",
    "end": "1741020"
  },
  {
    "text": "then send it back to the end user as we've seen the end user then uses cloud",
    "start": "1741020",
    "end": "1748050"
  },
  {
    "text": "front which provides the static web content as well as the server and then",
    "start": "1748050",
    "end": "1754770"
  },
  {
    "text": "they submit their report and then it comes back through an SNS channel to our",
    "start": "1754770",
    "end": "1761790"
  },
  {
    "text": "bot which then sends that reply and then",
    "start": "1761790",
    "end": "1767430"
  },
  {
    "text": "we can then view it on the map the nice thing about lambda has we've already",
    "start": "1767430",
    "end": "1773310"
  },
  {
    "text": "seen a little bit of is that you can very get some very short pieces of code that do a lot it's very easy to write",
    "start": "1773310",
    "end": "1780780"
  },
  {
    "text": "these lambda functions and you really have okis on the code you don't need to",
    "start": "1780780",
    "end": "1786150"
  },
  {
    "text": "worry about a lot of the deployment aspects and using lambda we've also been",
    "start": "1786150",
    "end": "1792840"
  },
  {
    "text": "trying out Amazon recognition for flood scene recognition to identify where",
    "start": "1792840",
    "end": "1798180"
  },
  {
    "text": "there are cars or people affected by flooding okay so how about - sure",
    "start": "1798180",
    "end": "1807470"
  }
]