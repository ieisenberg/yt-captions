[
  {
    "start": "0",
    "end": "50000"
  },
  {
    "text": "okay so in my name is Eric Johnson I'm a service developer advocate at AWS and I",
    "start": "30",
    "end": "7230"
  },
  {
    "text": "love service we've been ton about service quite a while over the last three weeks or three episodes we've been",
    "start": "7230",
    "end": "13469"
  },
  {
    "text": "talking about security and really monitoring and in you know in in",
    "start": "13469",
    "end": "19529"
  },
  {
    "text": "analytics on it securing the front door and today everybody's how about securing the backdoor of API gateway and really",
    "start": "19529",
    "end": "27180"
  },
  {
    "text": "what that looks like and we know that you know we've taken a lot of effort to lock down the front of our api gateway",
    "start": "27180",
    "end": "32820"
  },
  {
    "text": "but what we want to do is look at the application behind the gateway and see what we can do to kind of help just just",
    "start": "32820",
    "end": "39840"
  },
  {
    "text": "make sure things are locked down so let's uh we're gonna kind of jump into",
    "start": "39840",
    "end": "45960"
  },
  {
    "text": "this and here we go so over the last like I said over the LES all the",
    "start": "45960",
    "end": "52800"
  },
  {
    "start": "50000",
    "end": "127000"
  },
  {
    "text": "episodes we've been building application it's a weather application we start with it being open and then we locked it down",
    "start": "52800",
    "end": "57840"
  },
  {
    "text": "when we left last this is where we ended we had built this secure weather application that had you know we dealt",
    "start": "57840",
    "end": "64320"
  },
  {
    "text": "with cores we dealt with AWS laughs with I am doing policies resource policies",
    "start": "64320",
    "end": "73229"
  },
  {
    "text": "Bob last week last episode you showed us how to do a resource policy that allow an external account to pipe in but the",
    "start": "73229",
    "end": "81330"
  },
  {
    "text": "question really comes down to and we see this a lot is well what about behind the",
    "start": "81330",
    "end": "86759"
  },
  {
    "text": "API gateway how do we how do we make sure that we're secure and we're gonna",
    "start": "86759",
    "end": "92610"
  },
  {
    "text": "talk about a couple of scenarios today that we look at but but there's basically three things that we're gonna",
    "start": "92610",
    "end": "98939"
  },
  {
    "text": "talk about today number one we're talk about leading at a client certificate",
    "start": "98939",
    "end": "104100"
  },
  {
    "text": "verification right and Bob's gonna expand on that a little bit of what that means number two we're gonna talk about",
    "start": "104100",
    "end": "110820"
  },
  {
    "text": "trust but verify and that's that's an interesting statement in that yet look",
    "start": "110820",
    "end": "115950"
  },
  {
    "text": "we trust you but we're gonna verify who you are and the last thing I wanna talk about is throttling and how to use",
    "start": "115950",
    "end": "121649"
  },
  {
    "text": "throttling to protect our back-end services so let's let's jump in here and",
    "start": "121649",
    "end": "127409"
  },
  {
    "start": "127000",
    "end": "153000"
  },
  {
    "text": "I'm gonna be a little talk through on this before before we turn the code over there will be some live code here but I",
    "start": "127409",
    "end": "132540"
  },
  {
    "text": "want to kind of this this idea about what client certificate verification means and what",
    "start": "132540",
    "end": "138090"
  },
  {
    "text": "we're gonna do so so what we're basically do with this is we're saying hey are you my API gateway are you",
    "start": "138090",
    "end": "144000"
  },
  {
    "text": "really the API gateway that I'm expecting to get this from are you the endpoint now one of the common use case",
    "start": "144000",
    "end": "150900"
  },
  {
    "text": "we see this in like in legacy application is if we have a legacy application that's maybe in a corporate",
    "start": "150900",
    "end": "156360"
  },
  {
    "start": "153000",
    "end": "183000"
  },
  {
    "text": "data center we'll talk about a couple of of workflows on this but we see this a lot this is a pattern that I talked to",
    "start": "156360",
    "end": "163500"
  },
  {
    "text": "customers about them on you know how do i how do I start the process of",
    "start": "163500",
    "end": "168569"
  },
  {
    "text": "migrating my service but how do I introduce security to my servers when they're when they're not on AWS when",
    "start": "168569",
    "end": "175170"
  },
  {
    "text": "when maybe we're fronting it for what the native EAP I get over the Em's and I pay a gateway but we want to make sure",
    "start": "175170",
    "end": "181079"
  },
  {
    "text": "that that's secure so what you're able to do is we can go you know I need to be",
    "start": "181079",
    "end": "186360"
  },
  {
    "start": "183000",
    "end": "259000"
  },
  {
    "text": "on the enemy's cloud we can spend up an API gateway and we can have it point to",
    "start": "186360",
    "end": "191459"
  },
  {
    "text": "our traditional server and Bob feel free to jump in in time here even if it's to",
    "start": "191459",
    "end": "196890"
  },
  {
    "text": "say hey you're wrong I'm okay with that no I mean I think perhaps just the the",
    "start": "196890",
    "end": "201930"
  },
  {
    "text": "you know the thing to point out is is that like when we first launched the service sort of the only way to sort of",
    "start": "201930",
    "end": "207660"
  },
  {
    "text": "have that that connection was over the public Internet so there was so there was no mechanism so we would Bret will",
    "start": "207660",
    "end": "214769"
  },
  {
    "text": "wrap to any hpm point that you tell us to but point must be publicly writable",
    "start": "214769",
    "end": "220459"
  },
  {
    "text": "right and so it's so what what that means is if it's public someone else to",
    "start": "220459",
    "end": "225480"
  },
  {
    "text": "be hitting that end point as well right correct yeah so absolutely so that if your if the the point is is that you're",
    "start": "225480",
    "end": "231359"
  },
  {
    "text": "trying to put a facade on top of your your legacy back-end with API gateway to",
    "start": "231359",
    "end": "236519"
  },
  {
    "text": "add additional authentication and authorization as well as throttling on it doesn't do a lot of good if someone",
    "start": "236519",
    "end": "242579"
  },
  {
    "text": "happens to be able to discover your back-end server and be able to get in will get directly exactly exactly know",
    "start": "242579",
    "end": "249239"
  },
  {
    "text": "we have introduced some ways I mean there are some ways to securing that that pipe so to speak in that you can do",
    "start": "249239",
    "end": "255120"
  },
  {
    "text": "it through maybe need of us Direct Connect or even a native ESP p.m. but if",
    "start": "255120",
    "end": "260549"
  },
  {
    "start": "259000",
    "end": "434000"
  },
  {
    "text": "you if you're gonna do these these are even if you're not there's also a way to verify that",
    "start": "260549",
    "end": "266760"
  },
  {
    "text": "that the requests are getting comes from the API gateway that you're expecting or the the entity that you're expecting and",
    "start": "266760",
    "end": "274380"
  },
  {
    "text": "and the way you can do that is with the with the certificate we can you can generate a certificate on the API",
    "start": "274380",
    "end": "281310"
  },
  {
    "text": "gateway and then you can verify the certificate on the server above do you",
    "start": "281310",
    "end": "287370"
  },
  {
    "text": "want to show us an example but kind of kind of walk us through this what this means sure yes so what we're using here is a",
    "start": "287370",
    "end": "295530"
  },
  {
    "text": "technology called mutual TLS authentication so in API gateway we will",
    "start": "295530",
    "end": "302880"
  },
  {
    "text": "create a certificate and a private key pair will hold on to the private key we",
    "start": "302880",
    "end": "308130"
  },
  {
    "text": "give you the certificate materials and then you install the certificate materials on your server and then when",
    "start": "308130",
    "end": "314010"
  },
  {
    "text": "you tell us that that you want to use it we will send any request to that",
    "start": "314010",
    "end": "319230"
  },
  {
    "text": "back-end server with that private key and so then your server is able to validate that the whether or not the the",
    "start": "319230",
    "end": "326280"
  },
  {
    "text": "request which is going to be SSL encrypted is met it has the correct",
    "start": "326280",
    "end": "331350"
  },
  {
    "text": "certificate or the correct encrypted materials in order to encrypt that connection okay so what happens if it",
    "start": "331350",
    "end": "339540"
  },
  {
    "text": "doesn't so I mean that's gonna be up to the the application or the server owner",
    "start": "339540",
    "end": "345780"
  },
  {
    "text": "so traditionally you would just throw that connection on the floor so you would actually you know you would you",
    "start": "345780",
    "end": "351870"
  },
  {
    "text": "would look at it as a so think about it as for like a browser when you're like",
    "start": "351870",
    "end": "356880"
  },
  {
    "text": "verifying a certificate like Chrome or Firefox will display an error message saying that the certificate doesn't",
    "start": "356880",
    "end": "362490"
  },
  {
    "text": "match now obviously the server can ignore that message and process the request or it can just literally say",
    "start": "362490",
    "end": "369780"
  },
  {
    "text": "that like nope I actually really want to make sure that that connection is the one that I said that I was going to use",
    "start": "369780",
    "end": "375120"
  },
  {
    "text": "and is going is using the certificates that I wanted to use and just drop it on the floor okay all right that makes",
    "start": "375120",
    "end": "381630"
  },
  {
    "text": "sense so you have to tell them what's gonna happen with that correct yeah okay but so one of the things we have had the",
    "start": "381630",
    "end": "388320"
  },
  {
    "text": "question asks okay what's the use case here and we're gonna stray a little bit for security bit thought this might be",
    "start": "388320",
    "end": "393930"
  },
  {
    "text": "kind of interesting to bring up well we get that okay why would I point to",
    "start": "393930",
    "end": "399340"
  },
  {
    "text": "you know traditional service on my in my corporate datacenter and obviously there's a lot of different use cases but one of the one of the common ones we see",
    "start": "399340",
    "end": "406120"
  },
  {
    "text": "is look we're trying to migrate to service but we're trying to migrate to modern application development but we're",
    "start": "406120",
    "end": "413170"
  },
  {
    "text": "not sure where to start and so this is a great example of of building in security",
    "start": "413170",
    "end": "419020"
  },
  {
    "text": "in that migration pattern and I'm gonna talk you through a little bit of the pattern that we see here and we say you",
    "start": "419020",
    "end": "424960"
  },
  {
    "text": "know okay what's the use case what are we trying to do and and again this is a",
    "start": "424960",
    "end": "429970"
  },
  {
    "text": "conversation that I have a lot so I wanted to kind of walk through it here real quick and this is the idea of a",
    "start": "429970",
    "end": "435580"
  },
  {
    "start": "434000",
    "end": "517000"
  },
  {
    "text": "strength of pattern or the idea of how do I move a traditional server into AWS",
    "start": "435580",
    "end": "441550"
  },
  {
    "text": "or moved outside the application off traditional server into AWS while keeping it secure so on and so forth and",
    "start": "441550",
    "end": "450130"
  },
  {
    "text": "so one of the things are able to do if you've ever heard of this pant pattern it's pretty common patterns been around for a while called strings of pattern",
    "start": "450130",
    "end": "456070"
  },
  {
    "text": "and what does it look like this is a very simple example but what it would look like is you would have all your",
    "start": "456070",
    "end": "462700"
  },
  {
    "text": "service to your traditional server and but I don't know is your machine muted",
    "start": "462700",
    "end": "468940"
  },
  {
    "text": "we're getting like email notes and stuff so yeah I don't even have my email client okay yeah so sorry for you",
    "start": "468940",
    "end": "476740"
  },
  {
    "text": "listeners but we're getting email somewhere here so but what you'd be able to do is is as you because the beauty of",
    "start": "476740",
    "end": "485860"
  },
  {
    "text": "API gateway is you can route things based on I mean even down to resources",
    "start": "485860",
    "end": "491050"
  },
  {
    "text": "and methods right so I can route based on a post a get a put delete whatever",
    "start": "491050",
    "end": "496810"
  },
  {
    "text": "and I can also route based on a resource like user client tip that so I can have",
    "start": "496810",
    "end": "502240"
  },
  {
    "text": "a user post go to one place and a user get go to another that's how much control you have here and so what you'd",
    "start": "502240",
    "end": "509140"
  },
  {
    "text": "be able to do is let's say you have these three services pointed at your traditional server you could then start",
    "start": "509140",
    "end": "514390"
  },
  {
    "text": "breaking them out on their own so for instance service one you've kind of",
    "start": "514390",
    "end": "519490"
  },
  {
    "text": "pulled that out you've replicated into lambda and then unbeknownst to your users you can have that point at a",
    "start": "519490",
    "end": "525550"
  },
  {
    "text": "lambda inside then you can work on service to where it's no longer points the traditional server it's also going",
    "start": "525550",
    "end": "532120"
  },
  {
    "text": "into here and finally service three okay so then what happens here is this okay so",
    "start": "532120",
    "end": "538330"
  },
  {
    "start": "537000",
    "end": "821000"
  },
  {
    "text": "then what you've got and you'll notice we're not doing any kind of certificate here or anything anymore now we were",
    "start": "538330",
    "end": "544210"
  },
  {
    "text": "able to maintain that security between our our API gateway and our on premise",
    "start": "544210",
    "end": "549640"
  },
  {
    "text": "or somewhere else server but but here",
    "start": "549640",
    "end": "554830"
  },
  {
    "text": "you know we don't we don't need to do that Bob kind of what I was thinking about you know all of lambda we'll talk",
    "start": "554830",
    "end": "561370"
  },
  {
    "text": "about a little bit later on trust but verify but when you look at how an API gateway fires a lambda or invokes a",
    "start": "561370",
    "end": "569770"
  },
  {
    "text": "lambda you know you know I was asking me we were talk about the server word kind of print ins together is there reason",
    "start": "569770",
    "end": "576280"
  },
  {
    "text": "for a lambda to verify the certificate so speak and in in and I don't know if",
    "start": "576280",
    "end": "583300"
  },
  {
    "text": "you want to jump in there but I have some thoughts on this what do you think sure yeah so so for for obviously for",
    "start": "583300",
    "end": "589240"
  },
  {
    "text": "the for the lambda function use case like there's no certificate to verify",
    "start": "589240",
    "end": "594510"
  },
  {
    "text": "because you're not actually getting that information about the actual HTTP connection so you're actually abstracted",
    "start": "594510",
    "end": "601000"
  },
  {
    "text": "away what you get back well you get inside of your lambda function is an event context which happens to describe",
    "start": "601000",
    "end": "607000"
  },
  {
    "text": "the API gateway that invoked the function now that's not to say that you can't do some verification on that to",
    "start": "607000",
    "end": "613990"
  },
  {
    "text": "ensure that it is in fact API gateway the descending that that request and that the the write API gateway and the",
    "start": "613990",
    "end": "620500"
  },
  {
    "text": "right information is coming in as well but for emanating from a certificate standpoint you wouldn't obviously be",
    "start": "620500",
    "end": "626890"
  },
  {
    "text": "doing that because you you wouldn't have that exposure you wouldn't have that that access to that information",
    "start": "626890",
    "end": "632520"
  },
  {
    "text": "yes that's a great that's a great segue into the trust but verify we're going to talk about in a few minutes but when we",
    "start": "632520",
    "end": "639130"
  },
  {
    "text": "go back to this if you think about the way Amazon if you think about the way lambda is invoked",
    "start": "639130",
    "end": "645580"
  },
  {
    "text": "it'll be as lambda so when you invoke a lambda B it you know we talked about",
    "start": "645580",
    "end": "651610"
  },
  {
    "text": "asynchronously or polling or we're synchronously but any service inside of",
    "start": "651610",
    "end": "656950"
  },
  {
    "text": "Amazon invokes a lambda through the lambda API okay privately right I mean",
    "start": "656950",
    "end": "663610"
  },
  {
    "text": "it's hitting it directly and so when a p-- Gateway calls a lambda or invoke",
    "start": "663610",
    "end": "669100"
  },
  {
    "text": "Slamdance doing it through the lambda API and you can wrap that without with",
    "start": "669100",
    "end": "674200"
  },
  {
    "text": "ion Identity and Access Management and say hey only this API gateway has the",
    "start": "674200",
    "end": "679330"
  },
  {
    "text": "right to invoke this lambda so instead of verifying it certificate to say hey",
    "start": "679330",
    "end": "684360"
  },
  {
    "text": "let's make sure it's the right person instead you're saying hey I'm not worried because only this person can",
    "start": "684360",
    "end": "691270"
  },
  {
    "text": "invoke this lambda does that make sense yeah so the one thing to probably call out there is is that that those",
    "start": "691270",
    "end": "697870"
  },
  {
    "text": "permissions are asserted based on the resource policy on gender function and I",
    "start": "697870",
    "end": "704070"
  },
  {
    "text": "believe those will only apply if you're not using the the invoke role for for",
    "start": "704070",
    "end": "711520"
  },
  {
    "text": "for actually invoking the lambda function from EPA gateway so if you",
    "start": "711520",
    "end": "716770"
  },
  {
    "text": "configure the API gateway integration directly from the console the you'll get",
    "start": "716770",
    "end": "723610"
  },
  {
    "text": "a prompt when you configure the lambda function that says you're adding permissions to do the to allow EPA",
    "start": "723610",
    "end": "728800"
  },
  {
    "text": "gateway to invoke the function that's right because API gateway is using its own credentials to actually invoke the",
    "start": "728800",
    "end": "734560"
  },
  {
    "text": "function on your behalf and when we write that policy out we ensure that the policy is written sort of at the least",
    "start": "734560",
    "end": "742180"
  },
  {
    "text": "privileges so literally the the integration the method the the resource is the only thing that's allowed to",
    "start": "742180",
    "end": "748210"
  },
  {
    "text": "invoke that function when we add that permission but if you if you configure a",
    "start": "748210",
    "end": "753670"
  },
  {
    "text": "role for us to assume before we then call the lambda function then I believe those those permissions would not",
    "start": "753670",
    "end": "760750"
  },
  {
    "text": "necessarily apply because or they could apply but you're left up to your own",
    "start": "760750",
    "end": "765970"
  },
  {
    "text": "devices on how you actually configure the resource policy right but if you're but if you're configuring it via the",
    "start": "765970",
    "end": "771370"
  },
  {
    "text": "console or via the tools that we've set up like Sam for instance then the the sort of the lease privileges permission",
    "start": "771370",
    "end": "777520"
  },
  {
    "text": "gets out gets propagated right okay yeah and in for those of you watch if you",
    "start": "777520",
    "end": "784180"
  },
  {
    "text": "haven't figured out Bob brings the brains I bring the pretty so you know it's it's",
    "start": "784180",
    "end": "789430"
  },
  {
    "text": "really and sometimes the funny but yeah Bob I appreciate clarifying on that and and that helps a lot so let's let's take",
    "start": "789430",
    "end": "797200"
  },
  {
    "text": "this one step further when we're looking at this client at this client verification",
    "start": "797200",
    "end": "802750"
  },
  {
    "text": "a lot of times we have people say you know what if I want what if my quote legacy app is on AWS or what if it's a",
    "start": "802750",
    "end": "809440"
  },
  {
    "text": "modern app you don't I mean but we're not running its service we're running server full and as much as I like as I",
    "start": "809440",
    "end": "815620"
  },
  {
    "text": "love service that's also okay you know so let's take a look at that so when",
    "start": "815620",
    "end": "822550"
  },
  {
    "start": "821000",
    "end": "846000"
  },
  {
    "text": "we're talking about this we're gonna use a standard kind of application setup but we're fronting ec2 Amazon ec2 with",
    "start": "822550",
    "end": "828640"
  },
  {
    "text": "Amazon API gateway now it's not quite this simple this is kind of an overview",
    "start": "828640",
    "end": "834820"
  },
  {
    "text": "and I am calling this lazy up but again this doesn't necessarily have to be a legacy app but what in reality when",
    "start": "834820",
    "end": "841720"
  },
  {
    "text": "we're talking security we're building an application like this what it would really look like is something like this",
    "start": "841720",
    "end": "847380"
  },
  {
    "start": "846000",
    "end": "971000"
  },
  {
    "text": "but one other thing is when you're looking at this you know different from I'm not different I mean we're doing",
    "start": "847380",
    "end": "853450"
  },
  {
    "text": "security that's that's our number one thing but it looks a little different than when I'm running lambda because a lot of security is is inherited in when",
    "start": "853450",
    "end": "860680"
  },
  {
    "text": "we build an ec2 farm or instance set up here behind API game where there's a",
    "start": "860680",
    "end": "867280"
  },
  {
    "text": "couple things that we want to do first of all you know it has to be in a V PC that's if you're an ec2 instance you",
    "start": "867280",
    "end": "874270"
  },
  {
    "text": "want them to be PC and you want it in a private subnet and that's just a best practice unless there's absolutely you",
    "start": "874270",
    "end": "881770"
  },
  {
    "text": "know a really good reason to put it in a public subnet you want your in just running a private subnet that helps the",
    "start": "881770",
    "end": "887290"
  },
  {
    "text": "security so and then you see we've got security groups so we've got auto scaling groups and so the idea here is",
    "start": "887290",
    "end": "894130"
  },
  {
    "text": "that as the Amazon gateway is routing data its then load balanced across most",
    "start": "894130",
    "end": "899470"
  },
  {
    "text": "multiple instances multiple availability zones ok and so what you've got here is",
    "start": "899470",
    "end": "905110"
  },
  {
    "text": "an application that's scaling and is in multiple availability zones so it's redundant it's reliable different things",
    "start": "905110",
    "end": "912160"
  },
  {
    "text": "like that so Bob when when we're setting this up correct me if I'm wrong you",
    "start": "912160",
    "end": "918100"
  },
  {
    "text": "can't you can't verify that certicates so create the started Amazon API gateway but I can't verify it at the email be",
    "start": "918100",
    "end": "924670"
  },
  {
    "text": "right that's correct yeah and so adobe is the technology that you would want to",
    "start": "924670",
    "end": "929980"
  },
  {
    "text": "use if you wanted to use the client starts or the the VPC link technology which is how we can sort",
    "start": "929980",
    "end": "936670"
  },
  {
    "text": "of bridge into the customers BTC so the NLB then gets tied to what we call a V",
    "start": "936670",
    "end": "944020"
  },
  {
    "text": "PC link an API gateway and then the traffic gets sent to the individual instances and so the load balancers",
    "start": "944020",
    "end": "950770"
  },
  {
    "text": "themselves and I'll be ELB ELB and application load balancer as well though",
    "start": "950770",
    "end": "956380"
  },
  {
    "text": "none of those technologies have certificate verification built in so the customer is still responsible for sort",
    "start": "956380",
    "end": "963310"
  },
  {
    "text": "of that validation of the certificate on much as they would be for the traditional server okay that makes sense",
    "start": "963310",
    "end": "969190"
  },
  {
    "text": "so what you'd be looking at then is with an NLP is is rather than trying to grab that you would just configure TCP",
    "start": "969190",
    "end": "975520"
  },
  {
    "text": "pass-through that's a load balancer and then at the instance you would verify the cert you don't have to serve a level",
    "start": "975520",
    "end": "982180"
  },
  {
    "text": "in your application or or between the configuration like you would be in your configuration now let me ask you this",
    "start": "982180",
    "end": "988150"
  },
  {
    "text": "we're gonna see some demo code here shortly did you do a demo for every type of",
    "start": "988150",
    "end": "994690"
  },
  {
    "text": "server there is no and we're not we're not going to be doing much in the way of",
    "start": "994690",
    "end": "999940"
  },
  {
    "text": "doing configuration of the servers you know I'll demonstrate some of the technologies here but ultimately like I",
    "start": "999940",
    "end": "1006540"
  },
  {
    "text": "could show I can potentially show an example of a real primitive server like an engine X but ultimately like that",
    "start": "1006540",
    "end": "1013380"
  },
  {
    "text": "it's going to vary depending on the customers configuration the version of",
    "start": "1013380",
    "end": "1019320"
  },
  {
    "text": "nginx they might be running or whatever software they're using as well as their security profile so obviously we've been",
    "start": "1019320",
    "end": "1025260"
  },
  {
    "text": "talking a lot about the certificates here and it does add a certain level of security but there are plenty of",
    "start": "1025260",
    "end": "1031079"
  },
  {
    "text": "customers who have use cases that don't need that level of overhead and that level of security now obviously if",
    "start": "1031080",
    "end": "1038310"
  },
  {
    "text": "you're in a compliance regime most likely you're going to have to be you're going to be forced into that but if",
    "start": "1038310",
    "end": "1043319"
  },
  {
    "text": "you're if if you're running an application that doesn't necessarily have the same level of security",
    "start": "1043320",
    "end": "1048329"
  },
  {
    "text": "compliance concerns you think even consider not even doing TLS at all once you're going through the API gateway to",
    "start": "1048330",
    "end": "1054480"
  },
  {
    "text": "the NLD over the VPC because that isn't that that is a already a protected Channel",
    "start": "1054480",
    "end": "1060289"
  },
  {
    "text": "but obviously you know apply whatever level of security and scrutiny that your",
    "start": "1060289",
    "end": "1066799"
  },
  {
    "text": "compliance regimes and your companies are gonna require you to yeah and that",
    "start": "1066799",
    "end": "1072380"
  },
  {
    "text": "makes sense I think and I agree with you you know it depends on where you are what you think security wise you need",
    "start": "1072380",
    "end": "1079640"
  },
  {
    "text": "but it seems to me this this probably makes most sense or at least if you're",
    "start": "1079640",
    "end": "1084890"
  },
  {
    "text": "fronting a third of the public internet and off-site something if your traffic",
    "start": "1084890",
    "end": "1091429"
  },
  {
    "text": "crosses the public Internet then I would be looking at verification verifying so yeah I know absolutely so that so if",
    "start": "1091429",
    "end": "1098659"
  },
  {
    "text": "you're talking about a public endpoint then absolutely the I would have 100% recommend doing the client certificate",
    "start": "1098659",
    "end": "1103909"
  },
  {
    "text": "stuff but once you sort of enter into the world of sort of an EPC link and and some of the other stuff or you know",
    "start": "1103909",
    "end": "1110270"
  },
  {
    "text": "doing all the the traffic over the DC then you might be you might want to",
    "start": "1110270",
    "end": "1115700"
  },
  {
    "text": "think twice or you know you know again that whatever compliance regime you need to comply with obviously comply with",
    "start": "1115700",
    "end": "1122210"
  },
  {
    "text": "yeah perfect I agree so we're gonna do now and and I didn't want to call out that yeah we didn't we didn't try to",
    "start": "1122210",
    "end": "1128510"
  },
  {
    "text": "give you an example of in genetics Tomcat is a patchy you know all the",
    "start": "1128510",
    "end": "1133909"
  },
  {
    "text": "other things but we're gonna talk to exceptionally and then Bob's can so some things conception about you know what this looks like as I'm climbing some Bob",
    "start": "1133909",
    "end": "1140899"
  },
  {
    "text": "I'm gonna turn it over to you if you're ready sure let's let's go ahead and get started all right show me some code okay",
    "start": "1140899",
    "end": "1151850"
  },
  {
    "start": "1150000",
    "end": "1281000"
  },
  {
    "text": "so first let's just take a look at some of the stuff that we have available inside of inside of the console so we'll",
    "start": "1151850",
    "end": "1159470"
  },
  {
    "text": "talk through some of the things that we mentioned briefly here so first thing is",
    "start": "1159470",
    "end": "1164510"
  },
  {
    "text": "is that our client certificates so this is what I was mentioning but where we were mentioning before that we can",
    "start": "1164510",
    "end": "1170029"
  },
  {
    "text": "generate a client certificate within API gateway and so unfortunately this is not",
    "start": "1170029",
    "end": "1176029"
  },
  {
    "text": "an ACM managed cert it is a cert that is managed inside of API gateway so you",
    "start": "1176029",
    "end": "1182419"
  },
  {
    "text": "create those on demand and then you have this nice little tab here that allows me to copy the information out from the",
    "start": "1182419",
    "end": "1188510"
  },
  {
    "text": "certificate so then if I take that over to my text editor I can very quickly get the certificate materials and then I would",
    "start": "1188510",
    "end": "1195859"
  },
  {
    "text": "install this on my server to then validate any validate any incoming",
    "start": "1195859",
    "end": "1201969"
  },
  {
    "text": "requests once I have the client certificate that's only the half of the",
    "start": "1201969",
    "end": "1207830"
  },
  {
    "text": "configuration I then have to go over to my API and actually configure the API",
    "start": "1207830",
    "end": "1213469"
  },
  {
    "text": "stage to use that certificate so this is the this is a field or a parameter that",
    "start": "1213469",
    "end": "1219440"
  },
  {
    "text": "is set on an individual stage so if I go to my cross stage and I scroll down here",
    "start": "1219440",
    "end": "1224960"
  },
  {
    "text": "I can see that there's this client certificate field here we're just currently set to none and if I wanted to",
    "start": "1224960",
    "end": "1230450"
  },
  {
    "text": "use the client certificate then I would select it now for for this API it's 100%",
    "start": "1230450",
    "end": "1236029"
  },
  {
    "text": "server list so it's gonna its communicating with lambda so it wouldn't actually do anything for this API but if",
    "start": "1236029",
    "end": "1243259"
  },
  {
    "text": "I had an HTTP endpoint that I was using as part of this API then if I clicked this if I selected this and then save",
    "start": "1243259",
    "end": "1250460"
  },
  {
    "text": "the settings that immediately API gateway would start sending requests with that private key that we created in",
    "start": "1250460",
    "end": "1258229"
  },
  {
    "text": "our service to to send those requests so that's the client certificates so then",
    "start": "1258229",
    "end": "1267159"
  },
  {
    "text": "inside of inside of lambda we have again other information that we can look at",
    "start": "1267159",
    "end": "1273529"
  },
  {
    "text": "and trust and verify while we're while we're verifying other things and so we",
    "start": "1273529",
    "end": "1279979"
  },
  {
    "text": "have our weather app here that that Erika had built and sort of damaged talked a little bit about how he built",
    "start": "1279979",
    "end": "1286279"
  },
  {
    "start": "1281000",
    "end": "1351000"
  },
  {
    "text": "through the amplifi console and it's basically the same map as we had from from a previous episode but we have this",
    "start": "1286279",
    "end": "1291979"
  },
  {
    "text": "new little button here which is just a little bit of debugging information so if before I login I click on this button",
    "start": "1291979",
    "end": "1298190"
  },
  {
    "text": "I get some text that is a different API endpoint or a different method am I on",
    "start": "1298190",
    "end": "1305509"
  },
  {
    "text": "my API which is returning back the sort of the authorization bits so there are",
    "start": "1305509",
    "end": "1312049"
  },
  {
    "text": "two fields here the API gave the identity which is going to map to the request context dot identity field in",
    "start": "1312049",
    "end": "1320089"
  },
  {
    "text": "the lambda proxy and so we have a whole bunch of feel here that identify my source IP my user",
    "start": "1320089",
    "end": "1328000"
  },
  {
    "text": "agent and then there not a lot else because I'm not authenticated here I'm not actually I haven't actually",
    "start": "1328000",
    "end": "1333340"
  },
  {
    "text": "authenticated with with the service so I'll go ahead and do a login now and so",
    "start": "1333340",
    "end": "1348730"
  },
  {
    "text": "now I've logged in again and so if I go ahead and click on this information again now you'll notice that none of",
    "start": "1348730",
    "end": "1354370"
  },
  {
    "start": "1351000",
    "end": "1531000"
  },
  {
    "text": "there's not a lot more information than the identities so the source IP is still the same user agent is still the same",
    "start": "1354370",
    "end": "1361120"
  },
  {
    "text": "but none of these other fields are really filled with them filled in with anything so these these fields are",
    "start": "1361120",
    "end": "1367660"
  },
  {
    "text": "really only valuable or really only populated when you're using AWS I am authentication so these are the built-in",
    "start": "1367660",
    "end": "1375340"
  },
  {
    "text": "fields that we will give you when you authenticate a request using signature version 4 on the other hand though this",
    "start": "1375340",
    "end": "1383590"
  },
  {
    "text": "API gateway authorizer which again is the API the request context authorizer",
    "start": "1383590",
    "end": "1390070"
  },
  {
    "text": "subfield of the of the the proxy",
    "start": "1390070",
    "end": "1395350"
  },
  {
    "text": "responds I have a whole bunch more information here and so I can see there's a whole subsection or whole",
    "start": "1395350",
    "end": "1402370"
  },
  {
    "text": "dictionary here called claims and so those are the claims that are actually attached to my Cognito user pool",
    "start": "1402370",
    "end": "1409150"
  },
  {
    "text": "identifier so because we're passing in the identity token to the API I can see",
    "start": "1409150",
    "end": "1414550"
  },
  {
    "text": "all of that information about like my email address the actual user name the",
    "start": "1414550",
    "end": "1420460"
  },
  {
    "text": "user identifier inside of Cognito that applies to my applies to my user as well",
    "start": "1420460",
    "end": "1426610"
  },
  {
    "text": "as the audience field and sort of the",
    "start": "1426610",
    "end": "1431830"
  },
  {
    "text": "issuer so these are fields that you could validate and ensure that there hadn't been a miss configuration with",
    "start": "1431830",
    "end": "1438250"
  },
  {
    "text": "your API so if you're if you're if you're including the information about",
    "start": "1438250",
    "end": "1443440"
  },
  {
    "text": "your Cognito user pool in your application then you know which Cognito user pool europe your user actually",
    "start": "1443440",
    "end": "1449920"
  },
  {
    "text": "authenticated and you can validate that so again so it's the trust but verify so we configured kognito identity or Veneto",
    "start": "1449920",
    "end": "1457890"
  },
  {
    "text": "the user pools as an authorizer on my API but I can still inside of my lambda",
    "start": "1457890",
    "end": "1463870"
  },
  {
    "text": "code assert and make sure that those these values are are provided and correct and so if they are then I can",
    "start": "1463870",
    "end": "1471070"
  },
  {
    "text": "throw an error and I can an appropriately log a response something else that I'll jump in here that I've",
    "start": "1471070",
    "end": "1477580"
  },
  {
    "text": "seen as well when using like sub so sub is a unique",
    "start": "1477580",
    "end": "1482590"
  },
  {
    "text": "identifier the user right mm-hmm okay so when we use sub I've seen people use",
    "start": "1482590",
    "end": "1488020"
  },
  {
    "text": "this for like a hash and dynamodb and then you have a quick way of quickly",
    "start": "1488020",
    "end": "1494890"
  },
  {
    "text": "identifying a user in dynamodb so this is I mean obviously a Thorin and trust",
    "start": "1494890",
    "end": "1502060"
  },
  {
    "text": "but verify but it goes beyond and be able to to kind of keep this data in sync as well with this this yeah",
    "start": "1502060",
    "end": "1509170"
  },
  {
    "text": "absolutely and you obviously with kognito you can actually add additional claims to users so custom claims and any",
    "start": "1509170",
    "end": "1516940"
  },
  {
    "text": "custom claims that you add to the to the user in the that get baked into the identity token will show up here as well",
    "start": "1516940",
    "end": "1523780"
  },
  {
    "text": "they'll be available inside of the API context cool so so that was obviously",
    "start": "1523780",
    "end": "1530130"
  },
  {
    "text": "Cognito and that was obviously the focus of what we were doing for configuring the api and the previous episodes but i",
    "start": "1530130",
    "end": "1537550"
  },
  {
    "start": "1531000",
    "end": "1741000"
  },
  {
    "text": "also have here a couple endpoints that are using at different different authentication mechanisms just so you",
    "start": "1537550",
    "end": "1543250"
  },
  {
    "text": "can see sort of what the results are for that as well so here is an IM authenticated endpoint and so now you",
    "start": "1543250",
    "end": "1550060"
  },
  {
    "text": "can see that this author is a authorize our field is is basically empty but now we actually have some data inside of",
    "start": "1550060",
    "end": "1556630"
  },
  {
    "text": "inside of the the identity context so that's the I the excuse me the county of",
    "start": "1556630",
    "end": "1563770"
  },
  {
    "text": "the caller so that would be useful if you're aligned for cross account access again you know you might set up a policy",
    "start": "1563770",
    "end": "1572350"
  },
  {
    "text": "on your API like we did in the previous episode to allow another allow another",
    "start": "1572350",
    "end": "1578110"
  },
  {
    "text": "account to call in but you still might want to just assert that the only the account actually verified and added are ones",
    "start": "1578110",
    "end": "1585210"
  },
  {
    "text": "that you are allowing in so we can also see the full user arm so I'm using I am",
    "start": "1585210",
    "end": "1592980"
  },
  {
    "text": "user credentials here if you are using role based credentials you would get the the role access aren't here and so then",
    "start": "1592980",
    "end": "1600929"
  },
  {
    "text": "again again we also have our user agent etc so these Cognito these Cognito",
    "start": "1600929",
    "end": "1608970"
  },
  {
    "text": "fields in here may be a little bit misleading so the I mentioned before that any",
    "start": "1608970",
    "end": "1615149"
  },
  {
    "text": "everything in this identity block is only supplied when we're using I am",
    "start": "1615149",
    "end": "1620399"
  },
  {
    "text": "based credentials so good access to secret key session token' so that CV for",
    "start": "1620399",
    "end": "1625740"
  },
  {
    "text": "signature on when you're using user pools and you're using the access token or the identity token there's obviously",
    "start": "1625740",
    "end": "1632549"
  },
  {
    "text": "no signature there so there's no so none of these fields would be populated but if you're using the Cognito federated",
    "start": "1632549",
    "end": "1639450"
  },
  {
    "text": "access where you can supply a role and get credentials based on that role for",
    "start": "1639450",
    "end": "1644549"
  },
  {
    "text": "your user then when you sign the request with those credentials you would get",
    "start": "1644549",
    "end": "1649769"
  },
  {
    "text": "fields populated so you would get your cognate or is a ssin type which would be",
    "start": "1649769",
    "end": "1655590"
  },
  {
    "text": "if you're using straight up just cog you know user pools that would be Cognito IDP potentially you could also use",
    "start": "1655590",
    "end": "1662220"
  },
  {
    "text": "Facebook Google Blog over the Amazon as additional providers or generic OID C",
    "start": "1662220",
    "end": "1667559"
  },
  {
    "text": "provider your actual provider would show up here as well and then the identity ID",
    "start": "1667559",
    "end": "1673590"
  },
  {
    "text": "if you are using explicitly Cognito federated identity than the identity ID",
    "start": "1673590",
    "end": "1678990"
  },
  {
    "text": "and the identity pool ID would show up there as well okay I'm gonna I'm gonna",
    "start": "1678990",
    "end": "1684899"
  },
  {
    "text": "call it time out here for a second so let's let's talk about that farm because I know the first time I heard and I",
    "start": "1684899",
    "end": "1691590"
  },
  {
    "text": "understood what you're saying but a first time I heard all that I was like what so when we talk about authenticating",
    "start": "1691590",
    "end": "1698039"
  },
  {
    "text": "with with Cognito and and and again Bob jump in at any point and even to say",
    "start": "1698039",
    "end": "1703769"
  },
  {
    "text": "well you're wrong but when we talk about authentication cloud knew there's several ways to do it when we go back",
    "start": "1703769",
    "end": "1710130"
  },
  {
    "text": "and Bob I'm gonna take up a screen sharing again if you're alright okay so I want to go back to our",
    "start": "1710130",
    "end": "1717679"
  },
  {
    "text": "hang on a second here kill that back to my deck bare with me",
    "start": "1717870",
    "end": "1726520"
  },
  {
    "text": "guys it's giving me grief either all right so when we go back to our to our",
    "start": "1726520",
    "end": "1733540"
  },
  {
    "text": "architecture that we built and I'm gonna go back to slide number 3 here so we did",
    "start": "1733540",
    "end": "1740530"
  },
  {
    "text": "several these authentications number one we the one we didn't use as a federated ID which is one news time but but we did",
    "start": "1740530",
    "end": "1747670"
  },
  {
    "start": "1741000",
    "end": "2131000"
  },
  {
    "text": "use the use of pools so if you remember when Bob logged in it took him over to like a kognito authentication you logged",
    "start": "1747670",
    "end": "1755860"
  },
  {
    "text": "in and it came back so what user pools provides you with the ability to do is you have username password",
    "start": "1755860",
    "end": "1762760"
  },
  {
    "text": "authentication and then you can also set up user groups okay that can be used to",
    "start": "1762760",
    "end": "1768250"
  },
  {
    "text": "kind of Haiti they have this kind of proud of that kind of thing the second thing you have is an IM authorizer which",
    "start": "1768250",
    "end": "1774280"
  },
  {
    "text": "is the signed authorizer come in depth that's like when we're coming across account right so we're using i am",
    "start": "1774280",
    "end": "1780730"
  },
  {
    "text": "authorizing from the other account and that has a sick v4 signature that had the information in it okay the other",
    "start": "1780730",
    "end": "1788560"
  },
  {
    "text": "thing we were talking about is the federated identity or that you can do",
    "start": "1788560",
    "end": "1794440"
  },
  {
    "text": "through card need on what that is when you go to kognito you have two different kind of pools that it kind of talks",
    "start": "1794440",
    "end": "1799720"
  },
  {
    "text": "about one is user pools means user pools and one is federated pools that was",
    "start": "1799720",
    "end": "1805030"
  },
  {
    "text": "called so it's they're called identity pools i guess i but it but it's that",
    "start": "1805030",
    "end": "1810100"
  },
  {
    "text": "they i'm the products called federal kognito federated identity right there you go thank you and so what it allows",
    "start": "1810100",
    "end": "1816010"
  },
  {
    "text": "you to do is tie together facebook and different you know whatever you know",
    "start": "1816010",
    "end": "1823330"
  },
  {
    "text": "different products are out there open to tell me some of the ones it ties together bob on yes supports i used to",
    "start": "1823330",
    "end": "1831160"
  },
  {
    "text": "work on the product that was before I worked on ad a gateway so it supports Facebook Google log over the Amazon I",
    "start": "1831160",
    "end": "1838590"
  },
  {
    "text": "still I believe it still supports Twitter and open ID any generic open ID",
    "start": "1838590",
    "end": "1844660"
  },
  {
    "text": "connect provider and then can you then tie that to to use a pool ID as well so there's you",
    "start": "1844660",
    "end": "1853300"
  },
  {
    "text": "can yeah so this is where it gets tricky and if you wanna go down the throat that's okay but you don't know it's just",
    "start": "1853300",
    "end": "1858820"
  },
  {
    "text": "it's a it's a it's a little bit of a nuance here so kognito identity pools are a mechanism for sort of federating",
    "start": "1858820",
    "end": "1866470"
  },
  {
    "text": "access into into AWS and but then there is also sit there all are also",
    "start": "1866470",
    "end": "1873250"
  },
  {
    "text": "Federation mechanisms for linking external identities to a user pool",
    "start": "1873250",
    "end": "1878830"
  },
  {
    "text": "identity and there those are those are distinct so that those are that that's",
    "start": "1878830",
    "end": "1883900"
  },
  {
    "text": "something that I'm for better for worse the the COG Nino team decided to split",
    "start": "1883900",
    "end": "1890110"
  },
  {
    "text": "out from there from that so there's the identity pools which you can think about",
    "start": "1890110",
    "end": "1895330"
  },
  {
    "text": "is just strictly federated access into AWS resources and then there's federated",
    "start": "1895330",
    "end": "1900820"
  },
  {
    "text": "or linking an existing user pool user to an external identity and so those are",
    "start": "1900820",
    "end": "1907480"
  },
  {
    "text": "those are two different things that being said cognitive user pools does support Federation into AWS so you",
    "start": "1907480",
    "end": "1914170"
  },
  {
    "text": "can associate a role to your to your kognito user pool and get credentials",
    "start": "1914170",
    "end": "1919900"
  },
  {
    "text": "based on that role which is which is what I was referring to me about before okay great and I just want I don't know",
    "start": "1919900",
    "end": "1926800"
  },
  {
    "text": "if that cleared it up and I'm thinking we might need to do another show on that just to talk about cognate you doing and",
    "start": "1926800",
    "end": "1932110"
  },
  {
    "text": "how that's how that's done but I kind of wanted to explain that because the first time I approached is a little confusing",
    "start": "1932110",
    "end": "1937210"
  },
  {
    "text": "so we want to make sure that you know that we understand what we're talking about in user pools versus federated I",
    "start": "1937210",
    "end": "1943390"
  },
  {
    "text": "you know IDs and all that kind of stuff so hopefully that's that's helped some now the other question I wanted to talk",
    "start": "1943390",
    "end": "1949960"
  },
  {
    "text": "about it is we're talking about trust but verify and I'm gonna show us again",
    "start": "1949960",
    "end": "1956620"
  },
  {
    "text": "go back to screen here and kind of talk about what's going on but I want to talk about where you have the data that we",
    "start": "1956620",
    "end": "1962740"
  },
  {
    "text": "got you talked about different authorizers putting different data into context there's a little there's a",
    "start": "1962740",
    "end": "1968920"
  },
  {
    "text": "little more to that not more but another part of what I'm talking about is magnified you mind if I just show the",
    "start": "1968920",
    "end": "1975730"
  },
  {
    "text": "one last example I had before jumping today is do jump yeah so I'll just Before we jump into",
    "start": "1975730",
    "end": "1981390"
  },
  {
    "text": "some of these details here I just wanted to quickly show the last example which was the custom authorizer and so we",
    "start": "1981390",
    "end": "1988980"
  },
  {
    "text": "talked very briefly about it in the in the previous episode we did but we",
    "start": "1988980",
    "end": "1995100"
  },
  {
    "text": "didn't show any code but I've configured a custom authorizer on which again you know will have no fields in the in the",
    "start": "1995100",
    "end": "2002540"
  },
  {
    "text": "in the identity section because again no signal force signature but the",
    "start": "2002540",
    "end": "2007700"
  },
  {
    "text": "authorization field will have additional fields in it and so you'll notice here some some some interesting context and a",
    "start": "2007700",
    "end": "2016190"
  },
  {
    "text": "custom off value now you might be saying like where are those values coming from they're actually coming from my lambda",
    "start": "2016190",
    "end": "2023000"
  },
  {
    "text": "function that I actually created so you can pass back a it has to be a flat",
    "start": "2023000",
    "end": "2031010"
  },
  {
    "text": "dictionary so no nested values but you can do key value pairs and pass value",
    "start": "2031010",
    "end": "2037220"
  },
  {
    "text": "from your custom authorizer into the context of internal context of API",
    "start": "2037220",
    "end": "2043310"
  },
  {
    "text": "gateway and that's probably a good segue into what Eric is going to talk about with how we how you can pass that",
    "start": "2043310",
    "end": "2049550"
  },
  {
    "text": "information around and how you can make it available yeah I want to comment on and really compliment you on your",
    "start": "2049550",
    "end": "2055370"
  },
  {
    "text": "creativity as well and you're my I've never been very good with memes",
    "start": "2055370",
    "end": "2060800"
  },
  {
    "text": "code like games or anything like that none of that stuff is a so it's my variable names aren't that variable",
    "start": "2060800",
    "end": "2067220"
  },
  {
    "text": "though your developer at heart so you can tell that I'm very creative if you look at our you know weather app and how",
    "start": "2067220",
    "end": "2072800"
  },
  {
    "text": "creative that is so let me let me bring back up our screen so freeze the screen",
    "start": "2072800",
    "end": "2078530"
  },
  {
    "text": "back up again we're back to our weather application and in so so one of the",
    "start": "2078530",
    "end": "2084378"
  },
  {
    "text": "things we're doing is is when we talk about that context data it's getting added at the API gateway right and and",
    "start": "2084379",
    "end": "2091310"
  },
  {
    "text": "it's basically being added several different ways as Bob talked about whether you it's an I am author as that authorizer or it's a it's a user pool or",
    "start": "2091310",
    "end": "2098750"
  },
  {
    "text": "I'm sorry card you know authorizer or a custom authorizer and so that context getting at it but",
    "start": "2098750",
    "end": "2106220"
  },
  {
    "text": "the other thing to look at is when we're doing when we're talking to our lambda are we talking to",
    "start": "2106220",
    "end": "2113440"
  },
  {
    "text": "it via proxy or we talked into it as an integration these are quotes just so you",
    "start": "2113440",
    "end": "2118600"
  },
  {
    "text": "know and so and it's different if you remember we talked about this one went back I think in Episode two but I want",
    "start": "2118600",
    "end": "2125440"
  },
  {
    "text": "to remind you kind of again you can create that context there and we read",
    "start": "2125440",
    "end": "2130720"
  },
  {
    "text": "the context data at the service level but if we look at the different types when we talk about a pot proxy crest",
    "start": "2130720",
    "end": "2136930"
  },
  {
    "start": "2131000",
    "end": "2311000"
  },
  {
    "text": "that start over talk about a proxy request this is just kind of a refresher",
    "start": "2136930",
    "end": "2142150"
  },
  {
    "text": "well the request is made if you get wait does a wrapper and you get automatic",
    "start": "2142150",
    "end": "2147430"
  },
  {
    "text": "context you don't control that context you just here's what you get okay but if you need more control than that and this",
    "start": "2147430",
    "end": "2155710"
  },
  {
    "text": "is an example and I'm looking that might be kind of dark to read this is an example this is not the fool thing this",
    "start": "2155710",
    "end": "2161260"
  },
  {
    "text": "is what fits on a slide but and you saw more of it in our identity return but",
    "start": "2161260",
    "end": "2166660"
  },
  {
    "text": "this is kind of what's added however when you doing the integration and if you remember that's different than a",
    "start": "2166660",
    "end": "2171850"
  },
  {
    "text": "proxy in that you're doing a lot more at the API gateway level you have the power",
    "start": "2171850",
    "end": "2176890"
  },
  {
    "text": "of VTL to change that request so the request comes in you put it API you it",
    "start": "2176890",
    "end": "2183100"
  },
  {
    "text": "doesn't do anything on its own now it's saying it's a hey I'm gonna let you model that request on how you need it so",
    "start": "2183100",
    "end": "2189880"
  },
  {
    "text": "you can build a body you can better context you can build a bob you know if you want to bob object or dictionary you",
    "start": "2189880",
    "end": "2196720"
  },
  {
    "text": "know so whatever you want but you control that at the Ruby T Alan Turing through the templating and then what you",
    "start": "2196720",
    "end": "2203020"
  },
  {
    "text": "get is really your choice so again as you're thinking about the context of how",
    "start": "2203020",
    "end": "2209350"
  },
  {
    "text": "that works it's important to know what we're doing what authorized are am I",
    "start": "2209350",
    "end": "2214870"
  },
  {
    "text": "using so that's obviously he's gonna put where that goes in the context if you use a proxy if you use an integration",
    "start": "2214870",
    "end": "2222100"
  },
  {
    "text": "then most that information is available to you you just have to grab it from the parameters and put your context together",
    "start": "2222100",
    "end": "2228910"
  },
  {
    "text": "so anything you want to throw on that Bob so the only thing probably to note",
    "start": "2228910",
    "end": "2234910"
  },
  {
    "text": "there is is like you know you can start with sort of the there's a if you use the console there is a example of ETL",
    "start": "2234910",
    "end": "2242590"
  },
  {
    "text": "template which sort of emulates a sort of the same functionality as the proxy and that's a great starting point for kind of like",
    "start": "2242590",
    "end": "2248799"
  },
  {
    "text": "pulling out the pieces of everything you need if you're using detail yeah yeah that's one of the first things I do and",
    "start": "2248799",
    "end": "2255519"
  },
  {
    "text": "if I'm building an integration is I take the default and then work down from it trim it out what does it it",
    "start": "2255519",
    "end": "2261189"
  },
  {
    "text": "automatically iterates through everything coming in and breaks it out for you so and if you're if you're you",
    "start": "2261189",
    "end": "2267699"
  },
  {
    "text": "know kind of size conscious and in terms of like the payload size being sent to the integration then obviously you want",
    "start": "2267699",
    "end": "2273759"
  },
  {
    "text": "to pare that down if this is if you're looking at this kind of scratch in your head a little bit I encourage you to go",
    "start": "2273759",
    "end": "2279489"
  },
  {
    "text": "back to episode 2 because we uh norge mal talked we talked through that and we talked through an integration",
    "start": "2279489",
    "end": "2286569"
  },
  {
    "text": "versus a proxy we actually show everything that we're talking about so we have it on video it's on youtubes on",
    "start": "2286569",
    "end": "2292569"
  },
  {
    "text": "twitch go take a look so it's the last thing I think you ready red turbo throttling yeah I think that was the",
    "start": "2292569",
    "end": "2299289"
  },
  {
    "text": "last thing topic one all right so when we're talking about throttling it's well",
    "start": "2299289",
    "end": "2304959"
  },
  {
    "text": "we're not really authorized through throttling and things like that but what we are doing is we're protecting our",
    "start": "2304959",
    "end": "2310029"
  },
  {
    "text": "downstream services with throttling right and so as a refresher just a",
    "start": "2310029",
    "end": "2316059"
  },
  {
    "start": "2311000",
    "end": "2571000"
  },
  {
    "text": "little bit we talked about throttling we talked about this in in episode one on a lot of references today we're talking",
    "start": "2316059",
    "end": "2323380"
  },
  {
    "text": "about you know throttling allows you to break down how many times how how many times you know concurrency can people",
    "start": "2323380",
    "end": "2331659"
  },
  {
    "text": "hit your API right so you're looking at it can be done on a per client per method they can be done in per client",
    "start": "2331659",
    "end": "2337569"
  },
  {
    "text": "separately / / method and per account and so those kind of layer as you build",
    "start": "2337569",
    "end": "2342729"
  },
  {
    "text": "it up and you can create usage plans and hand it out to different different folks so you have a lot of control over how",
    "start": "2342729",
    "end": "2349799"
  },
  {
    "text": "hard your API gateway is going to get pounded and so you can see how this",
    "start": "2349799",
    "end": "2354939"
  },
  {
    "text": "would kind of protect downstream above you you've got some examples I'm showing this yeah well so we can talk a little",
    "start": "2354939",
    "end": "2363549"
  },
  {
    "text": "bit through I don't necessarily have a built example for this but that's fine so the sodium you know the important",
    "start": "2363549",
    "end": "2372429"
  },
  {
    "text": "thing to note there is is that that you can think about that her method throttling so the epic stage level not",
    "start": "2372429",
    "end": "2380120"
  },
  {
    "text": "sort of the sort of blue block box that looks at here in our diagram here as sort of the thing that protects your",
    "start": "2380120",
    "end": "2387290"
  },
  {
    "text": "back end so yeah that we can think about it is like you know we were talking about the strangler pattern earlier if",
    "start": "2387290",
    "end": "2393650"
  },
  {
    "text": "we've got like a certain number of methods or a certain number of resources that are mapped to a legacy back end we",
    "start": "2393650",
    "end": "2400400"
  },
  {
    "text": "can set a perm method throttling rate on that stage to say that like our server",
    "start": "2400400",
    "end": "2407180"
  },
  {
    "text": "has only been rated for you know 1000 RP s let's say it's an old clunky system",
    "start": "2407180",
    "end": "2412970"
  },
  {
    "text": "for whatever reason it just it's not but where's our PS request per second it",
    "start": "2412970",
    "end": "2420260"
  },
  {
    "text": "seems obvious but it's not always obvious so you're very about that yeah so that it's literally only been rated",
    "start": "2420260",
    "end": "2425690"
  },
  {
    "text": "for about a thousand number class per second so we'll set that as the sort of the perm method throttling rate that we",
    "start": "2425690",
    "end": "2432170"
  },
  {
    "text": "will do on on that on that method and again that's that's global for all callers of the AP a-- of that method for",
    "start": "2432170",
    "end": "2439370"
  },
  {
    "text": "that api and that's literally just to kind of protect that that legacy backend now once you do that know obviously",
    "start": "2439370",
    "end": "2446720"
  },
  {
    "text": "you've got a problem where a single color potentially use up all of that",
    "start": "2446720",
    "end": "2452740"
  },
  {
    "text": "ranked that back-end rate but by calling your api over and over again and so",
    "start": "2452740",
    "end": "2459590"
  },
  {
    "text": "that's where your usage plan per client and per per method per client call rates",
    "start": "2459590",
    "end": "2466340"
  },
  {
    "text": "will come into play so you can set a a usage plan rate that will be much lower",
    "start": "2466340",
    "end": "2471530"
  },
  {
    "text": "so that each individual user only gets a very small slice of that per method per",
    "start": "2471530",
    "end": "2477530"
  },
  {
    "text": "method limit and so then you're you're preventing anyone one single customer from overwhelming your your your legacy",
    "start": "2477530",
    "end": "2485420"
  },
  {
    "text": "back-end now obviously you can use that usage plan to also just prevent customers from hammering your api in",
    "start": "2485420",
    "end": "2491180"
  },
  {
    "text": "general anyway and that's really a really good practice so the thing to",
    "start": "2491180",
    "end": "2497030"
  },
  {
    "text": "kind of note there is is that so usage plans are tied to api keys and so",
    "start": "2497030",
    "end": "2504310"
  },
  {
    "text": "currently today there is a hard limit on or a limit on the number of the api keys",
    "start": "2504310",
    "end": "2511250"
  },
  {
    "text": "that you can actually manage so that is still going to get limited based",
    "start": "2511250",
    "end": "2516620"
  },
  {
    "text": "basically on you know an application developer level rather than an",
    "start": "2516620",
    "end": "2522140"
  },
  {
    "text": "individual logged in user level so currently today we don't support limits on sort of like a limit per",
    "start": "2522140",
    "end": "2529510"
  },
  {
    "text": "authenticated user to Cognito as a as a for rails test i'm so you're still going to be setting that limit as sort of an",
    "start": "2529510",
    "end": "2536030"
  },
  {
    "text": "application layer and so there are two ways that you can pass today the api key",
    "start": "2536030",
    "end": "2541750"
  },
  {
    "text": "one is baked into the actual request so as an X where you actually passed that",
    "start": "2541750",
    "end": "2549590"
  },
  {
    "text": "key value through but if you're using but if you're using the custom authorizer we actually allow you to set",
    "start": "2549590",
    "end": "2556100"
  },
  {
    "text": "up the API key source and if I if you want I can switch over to take over and",
    "start": "2556100",
    "end": "2561830"
  },
  {
    "text": "show that at just in the console experience yeah that'd be great yeah so",
    "start": "2561830",
    "end": "2568970"
  },
  {
    "text": "if I switch back over to the API gateway so this is a setting that you would set at the API level you have here this API",
    "start": "2568970",
    "end": "2576440"
  },
  {
    "start": "2571000",
    "end": "2971000"
  },
  {
    "text": "key source and so by default it's header because that was what was long was available when we first launched but you",
    "start": "2576440",
    "end": "2582620"
  },
  {
    "text": "also can you can specify that the authorizer is actually going to supply the API key so that means that your",
    "start": "2582620",
    "end": "2589730"
  },
  {
    "text": "customers don't necessarily need to know about your API keys but you can still",
    "start": "2589730",
    "end": "2596750"
  },
  {
    "text": "assert and associate classes of users or individual users into into a into a",
    "start": "2596750",
    "end": "2605540"
  },
  {
    "text": "bucket or into an API so while you can't necessarily get per caller throttling",
    "start": "2605540",
    "end": "2611990"
  },
  {
    "text": "leads that way it is a good way to sort of segregate some of your users so I mean again if you if you were trying to",
    "start": "2611990",
    "end": "2617180"
  },
  {
    "text": "emulate the model that we have with our weather app where you had a premium class of user and a non premium class of",
    "start": "2617180",
    "end": "2623030"
  },
  {
    "text": "user you get different API keys for those different classes of users and then if you had sort of a talk to your",
    "start": "2623030",
    "end": "2629270"
  },
  {
    "text": "premium user then you might even say that they get their own API key but because of the the limited number of",
    "start": "2629270",
    "end": "2635090"
  },
  {
    "text": "those that be something that you would probably want to have a you know strip cross control associated with that much you do",
    "start": "2635090",
    "end": "2642849"
  },
  {
    "text": "that then you can configure your your usage plans and your API keys to set the",
    "start": "2642849",
    "end": "2650580"
  },
  {
    "text": "to set the control rates for both throttling and in quota so probably a",
    "start": "2650580",
    "end": "2657730"
  },
  {
    "text": "good place to sort of have a quick discussion about sort of how a PA gateway does does throttling so we use",
    "start": "2657730",
    "end": "2665050"
  },
  {
    "text": "much like most most AWS services we use what's called a token bucket algorithm",
    "start": "2665050",
    "end": "2671250"
  },
  {
    "text": "and so the way you describe that is is that you think about your availability",
    "start": "2671250",
    "end": "2676960"
  },
  {
    "text": "of calls as the buckets and then we are literally adding tokens that at the at",
    "start": "2676960",
    "end": "2687520"
  },
  {
    "text": "the at the continuous rate of X number of requests per second so it is not on a",
    "start": "2687520",
    "end": "2693670"
  },
  {
    "text": "second boundary so it's literally a continuous think about it as a spout where it's literally the requests are",
    "start": "2693670",
    "end": "2700990"
  },
  {
    "text": "filling up this bucket over time and then you can reach in as a caller and",
    "start": "2700990",
    "end": "2706240"
  },
  {
    "text": "take a token out of that bucket and then eventually the bucket will fill up and",
    "start": "2706240",
    "end": "2712710"
  },
  {
    "text": "start overflowing and won't receive any more requests and that's what we can call the burst so the first level is the",
    "start": "2712710",
    "end": "2722589"
  },
  {
    "text": "size of the bucket the rate is the rate at which the bucket fills and then you're taking tokens out so if you don't",
    "start": "2722589",
    "end": "2729970"
  },
  {
    "text": "have the ability to take your token out of the bucket because it's completely empty then you'd get a 429 response back",
    "start": "2729970",
    "end": "2735280"
  },
  {
    "text": "and you'll have to try again later after a token has been added to that bucket again and again just I mean you know",
    "start": "2735280",
    "end": "2741910"
  },
  {
    "text": "again real specific or maybe a little bit pedantic it's not on a second boundary so you don't think about the",
    "start": "2741910",
    "end": "2748180"
  },
  {
    "text": "the context of like your default rate is 10,000 requests per second that does not",
    "start": "2748180",
    "end": "2754300"
  },
  {
    "text": "mean that like if you make 10,000 requests you have to wait a second before you start B I'll say yeah that",
    "start": "2754300",
    "end": "2760780"
  },
  {
    "text": "that bucket will refill over the course of that one second and are continuing in April class okay",
    "start": "2760780",
    "end": "2767690"
  },
  {
    "text": "that makes sense so so let me ask you this or let's talk to this in in when",
    "start": "2767690",
    "end": "2773839"
  },
  {
    "text": "we're talking about when we're talking about protecting our down or our",
    "start": "2773839",
    "end": "2782030"
  },
  {
    "text": "downstream right so we'll talk okay so we're gonna throttle but let's let's say you know some some of the the the",
    "start": "2782030",
    "end": "2788260"
  },
  {
    "text": "questions we've gotten and things that we hear this let's let's say we've got a denial-of-service going on right sure so",
    "start": "2788260",
    "end": "2794359"
  },
  {
    "text": "we're just getting hammered so it's so if we're let's say we have a thousand so",
    "start": "2794359",
    "end": "2799880"
  },
  {
    "text": "we're still getting shut down right if now our downstreams being protected but",
    "start": "2799880",
    "end": "2804920"
  },
  {
    "text": "it's being we're getting blocked right now yeah Amazon's got things in place to",
    "start": "2804920",
    "end": "2810380"
  },
  {
    "text": "help protect against that automatic to the list for this scenario one of the things and it is is in this when met how",
    "start": "2810380",
    "end": "2818690"
  },
  {
    "text": "critical are metrics in this and alerts is what I'm driving at so so if you want",
    "start": "2818690",
    "end": "2824960"
  },
  {
    "text": "to jump on that are I can continue either way yeah so so the the things that kind of like note there is is a",
    "start": "2824960",
    "end": "2830510"
  },
  {
    "text": "when we when we were showing the dashboard before so the dashboard that",
    "start": "2830510",
    "end": "2835880"
  },
  {
    "text": "we had set up which I don't think was in this account Ashley but if I if I go to the the built in dashboard that's on",
    "start": "2835880",
    "end": "2843910"
  },
  {
    "text": "that's on the API gateway console I can see sort of the calls here and so",
    "start": "2843910",
    "end": "2849380"
  },
  {
    "text": "anything that get falls into the throttling category would be in this or xx errors so if you're if you're seeing",
    "start": "2849380",
    "end": "2855289"
  },
  {
    "text": "a lot of 4x X errors that means that you're you're getting potentially of 429",
    "start": "2855289",
    "end": "2861140"
  },
  {
    "text": "s our throttle responses and if you wanted to get sort of more specific there than then you would want to",
    "start": "2861140",
    "end": "2866329"
  },
  {
    "text": "configure the access logs to actually see the the call pattern there so if you",
    "start": "2866329",
    "end": "2872630"
  },
  {
    "text": "can quickly set up an insights query to see the throttled throttled ip's or",
    "start": "2872630",
    "end": "2878450"
  },
  {
    "text": "throttled customers that's that are generating the higher number of requests and then then you can either decide to",
    "start": "2878450",
    "end": "2885819"
  },
  {
    "text": "you know take the sort of very aggressive approach if it's like coming from a single IP and setting up a laugh",
    "start": "2885819",
    "end": "2891680"
  },
  {
    "text": "rule to block that IP address at the at the very on ends so like before it even",
    "start": "2891680",
    "end": "2897079"
  },
  {
    "text": "gets into the into the throttle requests like you're just literally shutting that customer off because they're they're affecting",
    "start": "2897079",
    "end": "2903109"
  },
  {
    "text": "you too too aggressively if you're doing something like the API key stuff that I",
    "start": "2903109",
    "end": "2911810"
  },
  {
    "text": "was talking about before you could or doing the custom authorization you can say that like that custom that user is",
    "start": "2911810",
    "end": "2917780"
  },
  {
    "text": "is now no longer you know allowed to call it such a high rate you could change them to a plan that had a much",
    "start": "2917780",
    "end": "2924740"
  },
  {
    "text": "lower rate or or stop allowing them to authenticate altogether so either one of",
    "start": "2924740",
    "end": "2930349"
  },
  {
    "text": "those things would prevent your API from from incurring or in your back-end from",
    "start": "2930349",
    "end": "2935780"
  },
  {
    "text": "incurring those requests and overloading ok the next that's all nerdy drive a DS",
    "start": "2935780",
    "end": "2942380"
  },
  {
    "text": "is you can do this the throttling and help protect that but there's remediation you can take as well we have",
    "start": "2942380",
    "end": "2948410"
  },
  {
    "text": "a question earlier and how do i you know how do i block a flooding and stuff and yes wife is a very viable product for",
    "start": "2948410",
    "end": "2955040"
  },
  {
    "text": "that yeah yeah yeah so well tell you what we're about to wrap up i'm gonna",
    "start": "2955040",
    "end": "2961490"
  },
  {
    "text": "take back over unless you've got something else to show here go for them okay all right so so today obviously we",
    "start": "2961490",
    "end": "2972980"
  },
  {
    "start": "2971000",
    "end": "3173000"
  },
  {
    "text": "were talking about protecting you know the back door shutting the back door last episode we talked about shutting",
    "start": "2972980",
    "end": "2979369"
  },
  {
    "text": "the front door and before that we talked about metrics and alarms and alerts and",
    "start": "2979369",
    "end": "2984380"
  },
  {
    "text": "different things like that if you miss any of these I really encourage you to go back to those we were talking about bobberts this time I'm not doing any",
    "start": "2984380",
    "end": "2990020"
  },
  {
    "text": "insights report what does that mean go back to episodes 2 episode 3 we can he can walk you through that and then we",
    "start": "2990020",
    "end": "2996140"
  },
  {
    "text": "show the code on how to do that so we are going to be taking a little bit of",
    "start": "2996140",
    "end": "3002050"
  },
  {
    "text": "break for the rest of July just because I'm sorry today this is June lick it up my months are all crazy our next episode",
    "start": "3002050",
    "end": "3009130"
  },
  {
    "text": "is going to be look ma no compute one of the questions we've had on a twitch",
    "start": "3009130",
    "end": "3014260"
  },
  {
    "text": "channel was hey can I use you know I want API gateway but I and we're not",
    "start": "3014260",
    "end": "3019660"
  },
  {
    "text": "ready to go service yet well that's okay API gateway like we said earlier confront any public API endpoint or",
    "start": "3019660",
    "end": "3027569"
  },
  {
    "text": "influence inside of AWS and our public you we showed some examples of that and yes",
    "start": "3027569",
    "end": "3033150"
  },
  {
    "text": "even ECS you can put it in front of ECS put it in front far get as well so you",
    "start": "3033150",
    "end": "3038670"
  },
  {
    "text": "can get crazy with containers so but but what we're going to talk about he is in",
    "start": "3038670",
    "end": "3044910"
  },
  {
    "text": "my guess opposed to be Randall hunt he's one of our senior technical evangelist a brilliant guy a lot of fun we're gonna",
    "start": "3044910",
    "end": "3051030"
  },
  {
    "text": "be talking about what does API gateway look like without a lambda behind it so",
    "start": "3051030",
    "end": "3056280"
  },
  {
    "text": "we're kind of getting into this idea of hey doesn't have to be lambda no it doesn't lambda is just one of the many",
    "start": "3056280",
    "end": "3061680"
  },
  {
    "text": "tools that are they can that you can use on with API gateway API gateway with the",
    "start": "3061680",
    "end": "3067080"
  },
  {
    "text": "VTL with the ability to model your date or the ability to to modify your request",
    "start": "3067080",
    "end": "3072660"
  },
  {
    "text": "and your responses you can do things like connect directly with DynamoDB or",
    "start": "3072660",
    "end": "3078210"
  },
  {
    "text": "Amazon s3 or Amazon sqs and so we'll talk about that and how do you how do you do your handling or your error",
    "start": "3078210",
    "end": "3084210"
  },
  {
    "text": "handling at you know at the API gateway levels so a lot of power there I",
    "start": "3084210",
    "end": "3089790"
  },
  {
    "text": "encourage you this is gonna be on July 9th so we're about almost a month away and we'll start up our regular cadence",
    "start": "3089790",
    "end": "3097290"
  },
  {
    "text": "again and thank you for joining us this is Bob and I am a DJ geek and he is two",
    "start": "3097290",
    "end": "3104970"
  },
  {
    "text": "achma I know I don't say that right but we're gonna go with that he doesn't say it right either so I mean come on",
    "start": "3104970",
    "end": "3111240"
  },
  {
    "text": "but guys we appreciate you following or watching us and following us I encourage",
    "start": "3111240",
    "end": "3116280"
  },
  {
    "text": "you to follow us on Twitter we talk about serving us a lot and and and other things again good with a bat so bobby",
    "start": "3116280",
    "end": "3123600"
  },
  {
    "text": "everything you want to say before we go no it's been a pleasure working with Eric on on these episodes and I will",
    "start": "3123600",
    "end": "3131070"
  },
  {
    "text": "also be taking a slightly obviously longer respite but I'll be back for some",
    "start": "3131070",
    "end": "3136500"
  },
  {
    "text": "of the later episodes in the series I try in a couple of a couple of episodes we're doing one called ask the experts",
    "start": "3136500",
    "end": "3143430"
  },
  {
    "text": "and we're all just gonna sit in a room and it's gonna be like stump the chump so Bob will be with us and you know he",
    "start": "3143430",
    "end": "3150690"
  },
  {
    "text": "may be the chump I may be the chump we'll see but we encourage you if you",
    "start": "3150690",
    "end": "3155910"
  },
  {
    "text": "have tough questions man send them to me again you can DM me an easy day geek or",
    "start": "3155910",
    "end": "3161700"
  },
  {
    "text": "my email is Eric DJ at I'm calm with that we are out I hope you",
    "start": "3161700",
    "end": "3167880"
  },
  {
    "text": "have a great week thank you all right thanks",
    "start": "3167880",
    "end": "3173360"
  }
]