[
  {
    "text": "hi there thank you for joining me today",
    "start": "80",
    "end": "1959"
  },
  {
    "text": "on this video demonstration of AWS glob",
    "start": "1959",
    "end": "4720"
  },
  {
    "text": "my name is k Sharon JF I'm a senior",
    "start": "4720",
    "end": "6640"
  },
  {
    "text": "specialist Solutions architect with AWS",
    "start": "6640",
    "end": "9120"
  },
  {
    "text": "and today I'm going to show you how easy",
    "start": "9120",
    "end": "10920"
  },
  {
    "text": "it is to use AWS glue to integrate",
    "start": "10920",
    "end": "13320"
  },
  {
    "text": "Google bqu AWS glue is a serverless data",
    "start": "13320",
    "end": "16960"
  },
  {
    "text": "integration service that makes it easier",
    "start": "16960",
    "end": "18840"
  },
  {
    "text": "to discover prepare move and integrate",
    "start": "18840",
    "end": "21640"
  },
  {
    "text": "data from multiple sources for analytics",
    "start": "21640",
    "end": "24880"
  },
  {
    "text": "machine learning and application",
    "start": "24880",
    "end": "26880"
  },
  {
    "text": "development with AWS glue you can",
    "start": "26880",
    "end": "29560"
  },
  {
    "text": "discover connect to over 70 diverse data",
    "start": "29560",
    "end": "32238"
  },
  {
    "text": "sources manage data in centralized data",
    "start": "32239",
    "end": "34960"
  },
  {
    "text": "catalog and Visually create run and",
    "start": "34960",
    "end": "37680"
  },
  {
    "text": "monitor ETL pipelines to load data into",
    "start": "37680",
    "end": "40719"
  },
  {
    "text": "Data laks or data warehouses for this",
    "start": "40719",
    "end": "43800"
  },
  {
    "text": "demonstration I'm going to use AWS glue",
    "start": "43800",
    "end": "46280"
  },
  {
    "text": "Studio to visually create an EO pipeline",
    "start": "46280",
    "end": "49680"
  },
  {
    "text": "without writing any code now let's have",
    "start": "49680",
    "end": "52440"
  },
  {
    "text": "a look at the solution we're going to",
    "start": "52440",
    "end": "54000"
  },
  {
    "text": "build",
    "start": "54000",
    "end": "54920"
  },
  {
    "text": "today for today's demonstration we're",
    "start": "54920",
    "end": "57640"
  },
  {
    "text": "going to build a simple ETL pipeline",
    "start": "57640",
    "end": "59960"
  },
  {
    "text": "line using AWS glue Studio we're going",
    "start": "59960",
    "end": "62600"
  },
  {
    "text": "to configure AWS glue to securely",
    "start": "62600",
    "end": "64838"
  },
  {
    "text": "connect to our Google bigquery data",
    "start": "64839",
    "end": "66880"
  },
  {
    "text": "warehouse read a public data set and",
    "start": "66880",
    "end": "69880"
  },
  {
    "text": "store the data into Amazon simple",
    "start": "69880",
    "end": "71920"
  },
  {
    "text": "storage service in park format and once",
    "start": "71920",
    "end": "75960"
  },
  {
    "text": "we have our data stored in Amazon S3",
    "start": "75960",
    "end": "78520"
  },
  {
    "text": "we're going to use AWS glue to argument",
    "start": "78520",
    "end": "81400"
  },
  {
    "text": "and aggregate our data and store it back",
    "start": "81400",
    "end": "84000"
  },
  {
    "text": "into Google B query now join me on the",
    "start": "84000",
    "end": "86920"
  },
  {
    "text": "AWS console and let's build the solution",
    "start": "86920",
    "end": "89640"
  },
  {
    "text": "okay here we are on the AWS console",
    "start": "89640",
    "end": "91960"
  },
  {
    "text": "where the first thing I'm going to do is",
    "start": "91960",
    "end": "93680"
  },
  {
    "text": "create a new S3 bucket where we're going",
    "start": "93680",
    "end": "96200"
  },
  {
    "text": "to store all our",
    "start": "96200",
    "end": "99360"
  },
  {
    "text": "data I'm going to leave all options as",
    "start": "100439",
    "end": "103640"
  },
  {
    "text": "default and now that we have our S3",
    "start": "103640",
    "end": "106360"
  },
  {
    "text": "bucket created the second thing I'm",
    "start": "106360",
    "end": "108520"
  },
  {
    "text": "going to do is create our secret in AWS",
    "start": "108520",
    "end": "111759"
  },
  {
    "text": "Secrets manager now following the",
    "start": "111759",
    "end": "114119"
  },
  {
    "text": "documentation of AWS glue you will have",
    "start": "114119",
    "end": "116960"
  },
  {
    "text": "to create a service account in your",
    "start": "116960",
    "end": "118960"
  },
  {
    "text": "Google Cloud platform download the keys",
    "start": "118960",
    "end": "122799"
  },
  {
    "text": "and then you will have to base 64 and",
    "start": "122799",
    "end": "125280"
  },
  {
    "text": "code this keys to do this I will use the",
    "start": "125280",
    "end": "128399"
  },
  {
    "text": "AWS Cloud shell so I already have the",
    "start": "128399",
    "end": "132120"
  },
  {
    "text": "file uploaded in my cloud shell and I'm",
    "start": "132120",
    "end": "135480"
  },
  {
    "text": "going to execute the following command",
    "start": "135480",
    "end": "138120"
  },
  {
    "text": "which will produce a base 64 encoded",
    "start": "138120",
    "end": "141519"
  },
  {
    "text": "string of my",
    "start": "141519",
    "end": "143440"
  },
  {
    "text": "credentials now this is the information",
    "start": "143440",
    "end": "146200"
  },
  {
    "text": "I'm going to copy and store in my",
    "start": "146200",
    "end": "148480"
  },
  {
    "text": "secrets manager under the credential key",
    "start": "148480",
    "end": "152239"
  },
  {
    "text": "I'm going to leave all other options as",
    "start": "152239",
    "end": "154080"
  },
  {
    "text": "default and create our key now that we",
    "start": "154080",
    "end": "157319"
  },
  {
    "text": "have all PR requisites let's go to AWS",
    "start": "157319",
    "end": "160400"
  },
  {
    "text": "glue you can find the AWS glue service",
    "start": "160400",
    "end": "163120"
  },
  {
    "text": "under the analytics portfolio of",
    "start": "163120",
    "end": "165440"
  },
  {
    "text": "services and the first thing we're going",
    "start": "165440",
    "end": "167400"
  },
  {
    "text": "to do in AWS glue is to create our bqu",
    "start": "167400",
    "end": "170840"
  },
  {
    "text": "connection for that we're going to head",
    "start": "170840",
    "end": "172760"
  },
  {
    "text": "to data connections click create",
    "start": "172760",
    "end": "175120"
  },
  {
    "text": "connection give the connection a name",
    "start": "175120",
    "end": "178040"
  },
  {
    "text": "and then select Google bigquery from the",
    "start": "178040",
    "end": "180280"
  },
  {
    "text": "drop down now the only other thing we",
    "start": "180280",
    "end": "182680"
  },
  {
    "text": "need to do is select the newly created",
    "start": "182680",
    "end": "184879"
  },
  {
    "text": "secret which contains the credential for",
    "start": "184879",
    "end": "187120"
  },
  {
    "text": "our Google B query account now let's",
    "start": "187120",
    "end": "190680"
  },
  {
    "text": "head over to the visual ETL with AWS",
    "start": "190680",
    "end": "193560"
  },
  {
    "text": "glue studio and create our visual ETL",
    "start": "193560",
    "end": "197040"
  },
  {
    "text": "pipeline for Source I'm going to choose",
    "start": "197040",
    "end": "200680"
  },
  {
    "text": "Google B",
    "start": "200680",
    "end": "202640"
  },
  {
    "text": "query and on the right side we need to",
    "start": "202640",
    "end": "205519"
  },
  {
    "text": "select our",
    "start": "205519",
    "end": "208360"
  },
  {
    "text": "connection we need to identify a parent",
    "start": "208360",
    "end": "211239"
  },
  {
    "text": "project if you don't have a parent",
    "start": "211239",
    "end": "213439"
  },
  {
    "text": "project use the current project where",
    "start": "213439",
    "end": "215640"
  },
  {
    "text": "your data set sits and for the purpose",
    "start": "215640",
    "end": "218519"
  },
  {
    "text": "of this demonstration I have copied and",
    "start": "218519",
    "end": "220680"
  },
  {
    "text": "stored into my Google big query account",
    "start": "220680",
    "end": "223080"
  },
  {
    "text": "at the public database of earthquakes",
    "start": "223080",
    "end": "226080"
  },
  {
    "text": "during the history now once we select",
    "start": "226080",
    "end": "229519"
  },
  {
    "text": "our data set we want to preview our data",
    "start": "229519",
    "end": "232840"
  },
  {
    "text": "and see our schema few seconds later our",
    "start": "232840",
    "end": "235840"
  },
  {
    "text": "data preview is done and we can see the",
    "start": "235840",
    "end": "238280"
  },
  {
    "text": "schema of our data",
    "start": "238280",
    "end": "240720"
  },
  {
    "text": "next I'm going to select an Amazon S3",
    "start": "240720",
    "end": "243480"
  },
  {
    "text": "Target",
    "start": "243480",
    "end": "245159"
  },
  {
    "text": "note I'm going to select the S3 bucket",
    "start": "245159",
    "end": "248360"
  },
  {
    "text": "that we've created for this demo and",
    "start": "248360",
    "end": "250599"
  },
  {
    "text": "leave all the other options as default",
    "start": "250599",
    "end": "253480"
  },
  {
    "text": "we're going to have par as a default",
    "start": "253480",
    "end": "255799"
  },
  {
    "text": "file format and snappy as a default",
    "start": "255799",
    "end": "258759"
  },
  {
    "text": "compression type and finally before we",
    "start": "258759",
    "end": "262079"
  },
  {
    "text": "can save our job we need to give it a",
    "start": "262079",
    "end": "264080"
  },
  {
    "text": "name I'm going to call it AWS gloy query",
    "start": "264080",
    "end": "267120"
  },
  {
    "text": "demo click save and run our",
    "start": "267120",
    "end": "271919"
  },
  {
    "text": "job and few moments later we can now see",
    "start": "271919",
    "end": "275080"
  },
  {
    "text": "that our glue job has succeeded now",
    "start": "275080",
    "end": "277880"
  },
  {
    "text": "let's navigate to Amazon S3 and see our",
    "start": "277880",
    "end": "282199"
  },
  {
    "text": "data you can see here that we have many",
    "start": "282199",
    "end": "285639"
  },
  {
    "text": "parket files so let's select one and use",
    "start": "285639",
    "end": "288440"
  },
  {
    "text": "Amazon S3 select to query our data we're",
    "start": "288440",
    "end": "292120"
  },
  {
    "text": "going to leave apach Park as a default",
    "start": "292120",
    "end": "294680"
  },
  {
    "text": "input format select Json as an output",
    "start": "294680",
    "end": "297960"
  },
  {
    "text": "and run our query now you can see that",
    "start": "297960",
    "end": "301360"
  },
  {
    "text": "this file contains several records and",
    "start": "301360",
    "end": "303919"
  },
  {
    "text": "the first records indicates an",
    "start": "303919",
    "end": "305720"
  },
  {
    "text": "earthquake that happened in",
    "start": "305720",
    "end": "307840"
  },
  {
    "text": "1751 and it was in the Dominican",
    "start": "307840",
    "end": "311000"
  },
  {
    "text": "Republic now that we have our data in",
    "start": "311000",
    "end": "313440"
  },
  {
    "text": "Amazon S3 let's head back to AWS glue",
    "start": "313440",
    "end": "316479"
  },
  {
    "text": "and create our second job that will",
    "start": "316479",
    "end": "318840"
  },
  {
    "text": "argument the data and write it back into",
    "start": "318840",
    "end": "321919"
  },
  {
    "text": "big",
    "start": "321919",
    "end": "324160"
  },
  {
    "text": "query this time I'm going to select",
    "start": "325520",
    "end": "327880"
  },
  {
    "text": "Amazon S3 as a SCE of our data select",
    "start": "327880",
    "end": "331240"
  },
  {
    "text": "the same est3 bucket I used to write the",
    "start": "331240",
    "end": "333479"
  },
  {
    "text": "data and park as an input format now",
    "start": "333479",
    "end": "337400"
  },
  {
    "text": "let's preview our data so we make sure",
    "start": "337400",
    "end": "340000"
  },
  {
    "text": "that we have our correct data",
    "start": "340000",
    "end": "343000"
  },
  {
    "text": "set now the first thing we need to do is",
    "start": "343000",
    "end": "345919"
  },
  {
    "text": "set the output",
    "start": "345919",
    "end": "348800"
  },
  {
    "text": "schema now let's add an aggregation Noe",
    "start": "348800",
    "end": "353199"
  },
  {
    "text": "and let's aggregate our data by country",
    "start": "353199",
    "end": "355560"
  },
  {
    "text": "so I want to see all",
    "start": "355560",
    "end": "357800"
  },
  {
    "text": "earthquakes by country",
    "start": "357800",
    "end": "360039"
  },
  {
    "text": "so I'm going to select a country as a",
    "start": "360039",
    "end": "362000"
  },
  {
    "text": "group by field I'm going to aggregate",
    "start": "362000",
    "end": "364600"
  },
  {
    "text": "the data by ID and select the count",
    "start": "364600",
    "end": "370039"
  },
  {
    "text": "function now one last thing I want to do",
    "start": "370280",
    "end": "373479"
  },
  {
    "text": "before writing the data is to change the",
    "start": "373479",
    "end": "376160"
  },
  {
    "text": "schema and change the name of the field",
    "start": "376160",
    "end": "379440"
  },
  {
    "text": "I have as",
    "start": "379440",
    "end": "381199"
  },
  {
    "text": "account now let's select Google big",
    "start": "381199",
    "end": "384000"
  },
  {
    "text": "query as a Target node this",
    "start": "384000",
    "end": "387759"
  },
  {
    "text": "time and again we will have to select",
    "start": "387960",
    "end": "390759"
  },
  {
    "text": "our",
    "start": "390759",
    "end": "391680"
  },
  {
    "text": "connection uh the parent project and the",
    "start": "391680",
    "end": "394360"
  },
  {
    "text": "table where we want to store our data",
    "start": "394360",
    "end": "396880"
  },
  {
    "text": "with the Google B querly Target Noe we",
    "start": "396880",
    "end": "399199"
  },
  {
    "text": "support both direct and indirect writing",
    "start": "399199",
    "end": "402680"
  },
  {
    "text": "method for the purpose of this",
    "start": "402680",
    "end": "404360"
  },
  {
    "text": "demonstration I'm going to choose direct",
    "start": "404360",
    "end": "406880"
  },
  {
    "text": "method and finally we need to give this",
    "start": "406880",
    "end": "409759"
  },
  {
    "text": "job a",
    "start": "409759",
    "end": "411199"
  },
  {
    "text": "name save it and let's run our",
    "start": "411199",
    "end": "415120"
  },
  {
    "text": "job a moment later our glue job has",
    "start": "415120",
    "end": "418400"
  },
  {
    "text": "succeeded now the last thing I want to",
    "start": "418400",
    "end": "421000"
  },
  {
    "text": "do is I want to visualize the data we",
    "start": "421000",
    "end": "423479"
  },
  {
    "text": "just written in Google bqu for this I'm",
    "start": "423479",
    "end": "426000"
  },
  {
    "text": "going to switch back to visual I'm going",
    "start": "426000",
    "end": "428360"
  },
  {
    "text": "to select Google B query as a source",
    "start": "428360",
    "end": "430639"
  },
  {
    "text": "node select the same connection and",
    "start": "430639",
    "end": "434080"
  },
  {
    "text": "parent project and this time let's run a",
    "start": "434080",
    "end": "437039"
  },
  {
    "text": "custom query when executing custom",
    "start": "437039",
    "end": "439759"
  },
  {
    "text": "queries there are two additional",
    "start": "439759",
    "end": "441479"
  },
  {
    "text": "parameters we need to provide the first",
    "start": "441479",
    "end": "443960"
  },
  {
    "text": "one is materialization data set and we",
    "start": "443960",
    "end": "447440"
  },
  {
    "text": "need to have views enabled",
    "start": "447440",
    "end": "449919"
  },
  {
    "text": "and let's this time run a custom query",
    "start": "449919",
    "end": "452000"
  },
  {
    "text": "that will provide us with the countries",
    "start": "452000",
    "end": "454400"
  },
  {
    "text": "with most earthquakes let's preview our",
    "start": "454400",
    "end": "457160"
  },
  {
    "text": "data and as you can see according to our",
    "start": "457160",
    "end": "460360"
  },
  {
    "text": "public data set it is China that appears",
    "start": "460360",
    "end": "463160"
  },
  {
    "text": "to have the most",
    "start": "463160",
    "end": "466120"
  },
  {
    "text": "earthquakes thank you for joining this",
    "start": "466520",
    "end": "468400"
  },
  {
    "text": "short demonstration on AWS glue",
    "start": "468400",
    "end": "470240"
  },
  {
    "text": "integration with Google big query to",
    "start": "470240",
    "end": "472400"
  },
  {
    "text": "learn more about AWS glue please visit",
    "start": "472400",
    "end": "474840"
  },
  {
    "text": "aws.amazon.com",
    "start": "474840",
    "end": "477840"
  },
  {
    "text": "glue",
    "start": "478319",
    "end": "481319"
  }
]