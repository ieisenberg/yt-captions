[
  {
    "text": "I want to introduce to you something is",
    "start": "399",
    "end": "2840"
  },
  {
    "text": "very exciting it is AWS Lambda which is",
    "start": "2840",
    "end": "6359"
  },
  {
    "text": "an event driven compute service for",
    "start": "6359",
    "end": "8200"
  },
  {
    "text": "dynamic",
    "start": "8200",
    "end": "10679"
  },
  {
    "text": "applications you can reduce your",
    "start": "13960",
    "end": "16080"
  },
  {
    "text": "development effort by writing no more",
    "start": "16080",
    "end": "19240"
  },
  {
    "text": "glucose you can respond to new and",
    "start": "19240",
    "end": "22080"
  },
  {
    "text": "updated data quickly you can make",
    "start": "22080",
    "end": "24640"
  },
  {
    "text": "extending applications without by",
    "start": "24640",
    "end": "27439"
  },
  {
    "text": "writing new code without actually having",
    "start": "27439",
    "end": "29080"
  },
  {
    "text": "to change the old Cod they can improve",
    "start": "29080",
    "end": "31840"
  },
  {
    "text": "performance through concurrency and you",
    "start": "31840",
    "end": "34719"
  },
  {
    "text": "have to run no servers no instances",
    "start": "34719",
    "end": "37840"
  },
  {
    "text": "nothing you just write a code and it",
    "start": "37840",
    "end": "40320"
  },
  {
    "text": "will run for",
    "start": "40320",
    "end": "42280"
  },
  {
    "text": "you and so the focus here is on events",
    "start": "42280",
    "end": "46280"
  },
  {
    "text": "and so these events may be driven by for",
    "start": "46280",
    "end": "48640"
  },
  {
    "text": "example ads service services that will",
    "start": "48640",
    "end": "52039"
  },
  {
    "text": "trigger these events that could be for",
    "start": "52039",
    "end": "53600"
  },
  {
    "text": "example an uh",
    "start": "53600",
    "end": "56039"
  },
  {
    "text": "uh an S3 upload notification or um and",
    "start": "56039",
    "end": "60680"
  },
  {
    "text": "Dynamo DB stream update but we'll get to",
    "start": "60680",
    "end": "62640"
  },
  {
    "text": "there in a minute and you'll write some",
    "start": "62640",
    "end": "64720"
  },
  {
    "text": "code in this case we were starting off",
    "start": "64720",
    "end": "67680"
  },
  {
    "text": "we'll just provide JavaScript but you",
    "start": "67680",
    "end": "69439"
  },
  {
    "text": "will be able to write other code later",
    "start": "69439",
    "end": "71240"
  },
  {
    "text": "on as well and most importantly as this",
    "start": "71240",
    "end": "76040"
  },
  {
    "text": "will run for you automatically without",
    "start": "76040",
    "end": "79360"
  },
  {
    "text": "any computer infrastructure that you",
    "start": "79360",
    "end": "81079"
  },
  {
    "text": "have to provision for",
    "start": "81079",
    "end": "83439"
  },
  {
    "text": "it this is easy to use low maintenance",
    "start": "83439",
    "end": "87920"
  },
  {
    "text": "you can run codes without managing in",
    "start": "87920",
    "end": "90040"
  },
  {
    "text": "infrastructure let me repeat that you",
    "start": "90040",
    "end": "92560"
  },
  {
    "text": "can wrote write code without having to",
    "start": "92560",
    "end": "95240"
  },
  {
    "text": "manage any",
    "start": "95240",
    "end": "96720"
  },
  {
    "text": "infrastructure the cloud function should",
    "start": "96720",
    "end": "98600"
  },
  {
    "text": "write are in JavaScript and Lambda will",
    "start": "98600",
    "end": "101240"
  },
  {
    "text": "take care of managing skaing monitoring",
    "start": "101240",
    "end": "103720"
  },
  {
    "text": "and logging for you it will respond very",
    "start": "103720",
    "end": "107280"
  },
  {
    "text": "fast to events execution of such a f",
    "start": "107280",
    "end": "110040"
  },
  {
    "text": "function is in milliseconds after that",
    "start": "110040",
    "end": "112840"
  },
  {
    "text": "the event is being triggered each event",
    "start": "112840",
    "end": "115479"
  },
  {
    "text": "is then processed through that status",
    "start": "115479",
    "end": "117719"
  },
  {
    "text": "Cloud function that you've written and",
    "start": "117719",
    "end": "120119"
  },
  {
    "text": "thousands of functions can run in",
    "start": "120119",
    "end": "123399"
  },
  {
    "text": "parallel and this is great because your",
    "start": "123399",
    "end": "125719"
  },
  {
    "text": "code will only run when needed for",
    "start": "125719",
    "end": "128399"
  },
  {
    "text": "example if you have a mobile device that",
    "start": "128399",
    "end": "130679"
  },
  {
    "text": "will send an update uh to S3 that will",
    "start": "130679",
    "end": "134640"
  },
  {
    "text": "now be triggered a cloud function only",
    "start": "134640",
    "end": "136840"
  },
  {
    "text": "then the function will run you won't",
    "start": "136840",
    "end": "139840"
  },
  {
    "text": "have to have this running all the time",
    "start": "139840",
    "end": "142160"
  },
  {
    "text": "there will be very low fee per request",
    "start": "142160",
    "end": "145160"
  },
  {
    "text": "cost effective at high rates low rates",
    "start": "145160",
    "end": "147560"
  },
  {
    "text": "and you know you can run it once a month",
    "start": "147560",
    "end": "149480"
  },
  {
    "text": "or make maybe you can run thousands of",
    "start": "149480",
    "end": "151319"
  },
  {
    "text": "these functions a",
    "start": "151319",
    "end": "153480"
  },
  {
    "text": "second and so these events will come in",
    "start": "153480",
    "end": "156680"
  },
  {
    "text": "many many different shapes and forms",
    "start": "156680",
    "end": "159040"
  },
  {
    "text": "yeah for example S3 event notifications",
    "start": "159040",
    "end": "161640"
  },
  {
    "text": "when objects change or update or being",
    "start": "161640",
    "end": "163920"
  },
  {
    "text": "uh emitted uh it could be Dynamo DB",
    "start": "163920",
    "end": "166640"
  },
  {
    "text": "streams remember this launched a few",
    "start": "166640",
    "end": "168840"
  },
  {
    "text": "days ago where actually you can get",
    "start": "168840",
    "end": "170959"
  },
  {
    "text": "update streams out of all the changes",
    "start": "170959",
    "end": "173360"
  },
  {
    "text": "that happen in Dynamo DB uh Kinesis",
    "start": "173360",
    "end": "176800"
  },
  {
    "text": "events when events are being added to",
    "start": "176800",
    "end": "178760"
  },
  {
    "text": "the Kinesis uh uh uh streams or they can",
    "start": "178760",
    "end": "182319"
  },
  {
    "text": "be custom events just driven by you for",
    "start": "182319",
    "end": "185200"
  },
  {
    "text": "example from your mobile",
    "start": "185200",
    "end": "187599"
  },
  {
    "text": "devices and if you look at the number of",
    "start": "187599",
    "end": "189840"
  },
  {
    "text": "these use cases for example you want to",
    "start": "189840",
    "end": "193000"
  },
  {
    "text": "write server free",
    "start": "193000",
    "end": "196519"
  },
  {
    "text": "backends the example that I just gave",
    "start": "196519",
    "end": "199040"
  },
  {
    "text": "for mobile devices where you just want",
    "start": "199040",
    "end": "201040"
  },
  {
    "text": "to have a backround that can that can",
    "start": "201040",
    "end": "203959"
  },
  {
    "text": "respond to any of the updates that you",
    "start": "203959",
    "end": "207040"
  },
  {
    "text": "sent um it can be data trigger",
    "start": "207040",
    "end": "210799"
  },
  {
    "text": "for example you do is send an image file",
    "start": "210799",
    "end": "213400"
  },
  {
    "text": "into Amazon S3 and you immediately want",
    "start": "213400",
    "end": "216040"
  },
  {
    "text": "to create some thumbnails for it or it",
    "start": "216040",
    "end": "219080"
  },
  {
    "text": "can be the world of the Internet of",
    "start": "219080",
    "end": "221040"
  },
  {
    "text": "Things where your sensor when it should",
    "start": "221040",
    "end": "224599"
  },
  {
    "text": "um there a temperature change will",
    "start": "224599",
    "end": "226760"
  },
  {
    "text": "happen will be able to trigger uh one of",
    "start": "226760",
    "end": "230400"
  },
  {
    "text": "the Lambda functions such that you can",
    "start": "230400",
    "end": "232799"
  },
  {
    "text": "send an SMS message to um to the",
    "start": "232799",
    "end": "237599"
  },
  {
    "text": "owner or it will be streamed processing",
    "start": "237599",
    "end": "240480"
  },
  {
    "text": "where for example updates in Dynamo DB",
    "start": "240480",
    "end": "244079"
  },
  {
    "text": "you will be able to do uh execute",
    "start": "244079",
    "end": "246959"
  },
  {
    "text": "business functions on data changes that",
    "start": "246959",
    "end": "249480"
  },
  {
    "text": "happen um or of course indexing and",
    "start": "249480",
    "end": "252680"
  },
  {
    "text": "synchronization is one of the common",
    "start": "252680",
    "end": "254760"
  },
  {
    "text": "things that customers do on our platform",
    "start": "254760",
    "end": "257239"
  },
  {
    "text": "with S3 so you will upload data into",
    "start": "257239",
    "end": "260199"
  },
  {
    "text": "Amazon",
    "start": "260199",
    "end": "261120"
  },
  {
    "text": "S3 and or and then you will want to run",
    "start": "261120",
    "end": "264040"
  },
  {
    "text": "a function to actually extract the",
    "start": "264040",
    "end": "266240"
  },
  {
    "text": "metadata from that and put that in",
    "start": "266240",
    "end": "268360"
  },
  {
    "text": "Dynamo DB",
    "start": "268360",
    "end": "270520"
  },
  {
    "text": "let's actually go through that last",
    "start": "270520",
    "end": "272960"
  },
  {
    "text": "example that might be a a good one so",
    "start": "272960",
    "end": "276400"
  },
  {
    "text": "you have a mobile device you upload a",
    "start": "276400",
    "end": "278759"
  },
  {
    "text": "photo in your S3 bucket which will",
    "start": "278759",
    "end": "283400"
  },
  {
    "text": "send which will trigger your Lambda",
    "start": "283400",
    "end": "286240"
  },
  {
    "text": "function that you've written who will",
    "start": "286240",
    "end": "288479"
  },
  {
    "text": "then extract The Meta data from that uh",
    "start": "288479",
    "end": "292520"
  },
  {
    "text": "photograph and will put it in a Dynamo",
    "start": "292520",
    "end": "297120"
  },
  {
    "text": "DB and then it will Tri F another",
    "start": "297120",
    "end": "300880"
  },
  {
    "text": "function over all the streams of Dynamo",
    "start": "300880",
    "end": "304240"
  },
  {
    "text": "DB to figure out which of the metadata",
    "start": "304240",
    "end": "307400"
  },
  {
    "text": "functions for example place or location",
    "start": "307400",
    "end": "310080"
  },
  {
    "text": "or user are actually",
    "start": "310080",
    "end": "312800"
  },
  {
    "text": "trending and then you can add another",
    "start": "312800",
    "end": "315360"
  },
  {
    "text": "function to it that actually notifies",
    "start": "315360",
    "end": "318080"
  },
  {
    "text": "the customer if his or her photo is",
    "start": "318080",
    "end": "321560"
  },
  {
    "text": "actually one of the",
    "start": "321560",
    "end": "323440"
  },
  {
    "text": "trending um one of the trending photos",
    "start": "323440",
    "end": "326919"
  },
  {
    "text": "all of this you can write without",
    "start": "326919",
    "end": "329880"
  },
  {
    "text": "running any infrastructure any instances",
    "start": "329880",
    "end": "334240"
  },
  {
    "text": "to do it becomes extremely simple to",
    "start": "334240",
    "end": "337759"
  },
  {
    "text": "build highly reliable highly concurrent",
    "start": "337759",
    "end": "340600"
  },
  {
    "text": "applications this way so if you think",
    "start": "340600",
    "end": "344199"
  },
  {
    "text": "about cost of these service yeah there's",
    "start": "344199",
    "end": "346560"
  },
  {
    "text": "a number of unit costs that come",
    "start": "346560",
    "end": "350880"
  },
  {
    "text": "along so first of all there's the number",
    "start": "350880",
    "end": "354000"
  },
  {
    "text": "of requests and we'll count them per",
    "start": "354000",
    "end": "356680"
  },
  {
    "text": "million then there is execution time",
    "start": "356680",
    "end": "360199"
  },
  {
    "text": "in hundreds of",
    "start": "360199",
    "end": "361800"
  },
  {
    "text": "milliseconds and then there is the",
    "start": "361800",
    "end": "364120"
  },
  {
    "text": "amount of memory that you use in blocks",
    "start": "364120",
    "end": "366560"
  },
  {
    "text": "of",
    "start": "366560",
    "end": "368120"
  },
  {
    "text": "128 and so the pricing of this will be",
    "start": "368120",
    "end": "372199"
  },
  {
    "text": "20 cents per million",
    "start": "372199",
    "end": "374919"
  },
  {
    "text": "request and a lot of zeros and then 21",
    "start": "374919",
    "end": "379560"
  },
  {
    "text": "for every 100 milliseconds at 128",
    "start": "379560",
    "end": "383479"
  },
  {
    "text": "megabytes but more importantly for all",
    "start": "383479",
    "end": "386479"
  },
  {
    "text": "of you that want to try out this service",
    "start": "386479",
    "end": "388919"
  },
  {
    "text": "there is a free fre tier for base free",
    "start": "388919",
    "end": "391479"
  },
  {
    "text": "tier for all customers each month we can",
    "start": "391479",
    "end": "394880"
  },
  {
    "text": "get up to 3.2 million seconds of",
    "start": "394880",
    "end": "398160"
  },
  {
    "text": "execution and 1 million requests I think",
    "start": "398160",
    "end": "401599"
  },
  {
    "text": "this is a great way to get started and",
    "start": "401599",
    "end": "403560"
  },
  {
    "text": "it will totally revolutionize the way",
    "start": "403560",
    "end": "406599"
  },
  {
    "text": "that you will be writing your business",
    "start": "406599",
    "end": "409880"
  },
  {
    "text": "applications it's available today in",
    "start": "409880",
    "end": "412039"
  },
  {
    "text": "preview",
    "start": "412039",
    "end": "413410"
  },
  {
    "text": "[Applause]",
    "start": "413410",
    "end": "421680"
  },
  {
    "text": "available for you today in preview so we",
    "start": "421680",
    "end": "423560"
  },
  {
    "text": "go and sign up and you can get started",
    "start": "423560",
    "end": "428560"
  }
]