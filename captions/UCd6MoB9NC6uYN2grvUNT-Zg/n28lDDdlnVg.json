[
  {
    "start": "0",
    "end": "39000"
  },
  {
    "text": "ten million it's kind of an arbitrary number frankly this presentations been",
    "start": "79",
    "end": "9510"
  },
  {
    "text": "done every year at reinvent and the reason is because it's fundamental to",
    "start": "9510",
    "end": "16039"
  },
  {
    "text": "the cloud and how the cloud operates but I'm not happy with 10 million at all so",
    "start": "16039",
    "end": "22890"
  },
  {
    "text": "we're gonna kind of raise the bar a little bit it's kind of an amazonian principle of ours and so we're gonna go",
    "start": "22890",
    "end": "29010"
  },
  {
    "text": "to 11 million today I hope that's alright",
    "start": "29010",
    "end": "32570"
  },
  {
    "text": "I'm told that these slides are not popular anymore",
    "start": "37489",
    "end": "42860"
  },
  {
    "start": "39000",
    "end": "39000"
  },
  {
    "text": "that biography slides simply aren't done much anymore especially here in the United States but I'm pretty vain and I",
    "start": "42860",
    "end": "49200"
  },
  {
    "text": "like the idea that my picture is gonna be in this deck forever and it will be people get to see my face so that's a",
    "start": "49200",
    "end": "56219"
  },
  {
    "text": "it's kind of a cool thing I'm a Solutions Architect been doing this for about four years now essentially in my",
    "start": "56219",
    "end": "62940"
  },
  {
    "text": "job I help customers architect for availability for security for cost",
    "start": "62940",
    "end": "69960"
  },
  {
    "text": "optimization for performance and of course scalability as well you you have",
    "start": "69960",
    "end": "80850"
  },
  {
    "text": "a product it's a really good product you're selling it on your website and",
    "start": "80850",
    "end": "87750"
  },
  {
    "text": "you may get a thousand visitors to this site every day maybe thousands of",
    "start": "87750",
    "end": "93930"
  },
  {
    "text": "visitors you didn't count on the fact though that your kids favorite youtuber",
    "start": "93930",
    "end": "101119"
  },
  {
    "text": "decided to feature your product in their vlog my daughter's gonna be really happy",
    "start": "101119",
    "end": "107310"
  },
  {
    "text": "I just used that word by the way I'll have to play this back for her letter here that I actually used it in a presentation so what's happened now is",
    "start": "107310",
    "end": "115200"
  },
  {
    "text": "your site needs to scale and unfortunately you didn't account for that well after today you're going to",
    "start": "115200",
    "end": "124110"
  },
  {
    "text": "account for that now I realize that not all of you need that type of instant scalability some of you have a more",
    "start": "124110",
    "end": "130560"
  },
  {
    "text": "linear approach to the way you scale and probably most of you have an approach like that and that's great",
    "start": "130560",
    "end": "136380"
  },
  {
    "text": "you're also going to get a whole lot of value out of this as well because the concepts in here are not necessarily",
    "start": "136380",
    "end": "142230"
  },
  {
    "text": "things that have to be done quickly but things that can also be done over time to prepare you for any sort of scaling",
    "start": "142230",
    "end": "148500"
  },
  {
    "text": "events that you might have I realize that you come from different journeys or different you know some of",
    "start": "148500",
    "end": "156720"
  },
  {
    "text": "you are have been using AWS for years some of you may be just getting started",
    "start": "156720",
    "end": "162150"
  },
  {
    "text": "and this is good for all of you I will tell you though that you know this is a it's a 200 level course or 200 level",
    "start": "162150",
    "end": "168420"
  },
  {
    "text": "session right so it's relatively high level relatively basic we're going to talk about some fundamental services but",
    "start": "168420",
    "end": "174930"
  },
  {
    "text": "if you've been using AWS for six years and know a lot about our services it's",
    "start": "174930",
    "end": "180150"
  },
  {
    "text": "probably not the right session for you so how do you scale certainly is one way",
    "start": "180150",
    "end": "191930"
  },
  {
    "text": "it's scaling your applications a really big topic right there's a lot of opinions on how to do it I'm certainly",
    "start": "191930",
    "end": "197610"
  },
  {
    "text": "going to talk about some of the patterns that we think here are rudimentary for",
    "start": "197610",
    "end": "202740"
  },
  {
    "text": "doing this on AWS but when I want to learn how to do something usually the",
    "start": "202740",
    "end": "208620"
  },
  {
    "text": "first thing I do is I pull up my favorite search engine all right type it in see what comes up so let's do that",
    "start": "208620",
    "end": "214560"
  },
  {
    "text": "let's type in scaling on AWS and we're gonna get over a million different",
    "start": "214560",
    "end": "220320"
  },
  {
    "text": "results I'm suggesting today that although auto scaling is going to be a",
    "start": "220320",
    "end": "227940"
  },
  {
    "text": "destination for us at some point this is not where you want to start auto scaling",
    "start": "227940",
    "end": "236220"
  },
  {
    "text": "sounds great let me just press that easy button I can scale my application it'd be great if it'd work that way",
    "start": "236220",
    "end": "242520"
  },
  {
    "text": "auto scaling is really easy to use and fundamental to scaling we'll get there",
    "start": "242520",
    "end": "247980"
  },
  {
    "text": "later okay so what do we need to do well first of",
    "start": "247980",
    "end": "255150"
  },
  {
    "text": "all let's briefly and I mean very briefly talk about some basics this is probably not the first time you've seen",
    "start": "255150",
    "end": "261209"
  },
  {
    "start": "258000",
    "end": "258000"
  },
  {
    "text": "this slide or the last time you're going to see this slide this week because this is really",
    "start": "261209",
    "end": "266630"
  },
  {
    "text": "important it's important for you to understand that AWS has built out a global infrastructure we currently have",
    "start": "266630",
    "end": "274490"
  },
  {
    "text": "14 regions around the globe 38 availability zones and a commitment to",
    "start": "274490",
    "end": "280510"
  },
  {
    "text": "expand that we've already pre announced another nine availability zones in four regions within the next year and you'll",
    "start": "280510",
    "end": "288140"
  },
  {
    "text": "certainly hear a lot more about that as the week progresses if you look at the",
    "start": "288140",
    "end": "293720"
  },
  {
    "text": "numbers inside of those regions you'll notice that sometimes they have a -",
    "start": "293720",
    "end": "299420"
  },
  {
    "text": "sometimes they have a three that refers to the number of availability zones that",
    "start": "299420",
    "end": "304970"
  },
  {
    "text": "you have available to you to build out highly available in scalable architectures it's not trivial it's",
    "start": "304970",
    "end": "312260"
  },
  {
    "text": "extremely important because these availability zones are individual",
    "start": "312260",
    "end": "317360"
  },
  {
    "text": "physical locations within a region that are architected independently of each",
    "start": "317360",
    "end": "322730"
  },
  {
    "text": "other separate redundant power separate redundant internet cooling all the",
    "start": "322730",
    "end": "328490"
  },
  {
    "text": "things that you would expect in a data center environment or a data center campus but they're separated so that",
    "start": "328490",
    "end": "334820"
  },
  {
    "text": "they can withstand the failure of each other however the one thing they share",
    "start": "334820",
    "end": "340700"
  },
  {
    "text": "is they're connected over a high speed low latency connection you can get single-digit millisecond latency between",
    "start": "340700",
    "end": "347480"
  },
  {
    "text": "the availability zones so that you can architect highly available applications",
    "start": "347480",
    "end": "353050"
  },
  {
    "text": "it used to be that for a highly available application that meant I have",
    "start": "353050",
    "end": "358090"
  },
  {
    "text": "something running in this rack and something running in this rack oh if you were really ingenious maybe you had a",
    "start": "358090",
    "end": "364340"
  },
  {
    "text": "separate cage on the other side of the building but now you have the ability to do that in different physical locations",
    "start": "364340",
    "end": "371780"
  },
  {
    "text": "at virtually no additional cost totally awesome",
    "start": "371780",
    "end": "377800"
  },
  {
    "text": "another global infrastructure map shows our 60 plus points of presence around",
    "start": "380450",
    "end": "386930"
  },
  {
    "text": "the globe where you can use to leverage to services route 53 and cloud front",
    "start": "386930",
    "end": "392840"
  },
  {
    "text": "that enable you to get your content out to your end-users at extremely low",
    "start": "392840",
    "end": "398210"
  },
  {
    "text": "latency and do it globally and do it quickly talk more about cloud front",
    "start": "398210",
    "end": "405740"
  },
  {
    "text": "later these buckets that you see here",
    "start": "405740",
    "end": "410780"
  },
  {
    "text": "it's funny when I started four years ago I think we had something like 13 services now we have services that fit",
    "start": "410780",
    "end": "416150"
  },
  {
    "text": "all these different buckets here and we're not obviously going to talk about them all although they all can certainly",
    "start": "416150",
    "end": "423140"
  },
  {
    "text": "be used in some respect to build out your highly available and scalable web application I do want to focus on one",
    "start": "423140",
    "end": "429680"
  },
  {
    "text": "thing in particular though what I think is probably the most important one that's here in the lower left corner and that solutions architects I have a",
    "start": "429680",
    "end": "436880"
  },
  {
    "text": "special affinity towards this because well that's me once again my vanity",
    "start": "436880",
    "end": "443150"
  },
  {
    "text": "showing showing through here no seriously we we're going to talk about",
    "start": "443150",
    "end": "448310"
  },
  {
    "text": "services that fit into these buckets today again just a subset of the ones that you've seen but are going to be",
    "start": "448310",
    "end": "453500"
  },
  {
    "text": "very important as we try to build out a scalable web application we're not gonna dive into scaling out your Hadoop",
    "start": "453500",
    "end": "460310"
  },
  {
    "text": "cluster um you know we're not gonna we're specifically talking about your data warehouse we're specifically",
    "start": "460310",
    "end": "466610"
  },
  {
    "text": "talking about web applications today so",
    "start": "466610",
    "end": "472100"
  },
  {
    "text": "those availability zones they not only give you the ability to architect highly",
    "start": "472100",
    "end": "477830"
  },
  {
    "text": "available applications they've given us the ability to provide you services in",
    "start": "477830",
    "end": "483830"
  },
  {
    "text": "which to architect highly available applications straight out of the box in",
    "start": "483830",
    "end": "489040"
  },
  {
    "text": "blue here I've listed some of them so what we've done is we have built these",
    "start": "489040",
    "end": "494330"
  },
  {
    "text": "services and features to leverage these multi availability zones so that simply",
    "start": "494330",
    "end": "499400"
  },
  {
    "text": "by using them you achieve high availability if you look at the ones on",
    "start": "499400",
    "end": "505340"
  },
  {
    "text": "the right-hand side there those are services that we're going to talk about that allow you to leverage the concept",
    "start": "505340",
    "end": "512060"
  },
  {
    "text": "of high availability in multiple availability zones with a little bit of",
    "start": "512060",
    "end": "517399"
  },
  {
    "text": "effort on your part all right got to",
    "start": "517399",
    "end": "523999"
  },
  {
    "text": "build a web app starts day one what does day one in your web application really look like well it",
    "start": "523999",
    "end": "531139"
  },
  {
    "text": "looks like one user that's you the application developer and you've",
    "start": "531139",
    "end": "537139"
  },
  {
    "text": "probably built out an architecture that looks something like this pretty basic",
    "start": "537139",
    "end": "544370"
  },
  {
    "text": "got a single Amazon ec2 instance a virtual server in the cloud it's got a",
    "start": "544370",
    "end": "550279"
  },
  {
    "text": "public IP address you've set up an entry in route 53 our managed DNS server or",
    "start": "550279",
    "end": "558439"
  },
  {
    "text": "service I should say leveraging those 60 plus edge locations around the globe and you've got a web service running on your",
    "start": "558439",
    "end": "564769"
  },
  {
    "text": "your instance a database on there as well and this is a fully functioning web stack might actually look familiar to",
    "start": "564769",
    "end": "573829"
  },
  {
    "text": "some of you but at some point we need to",
    "start": "573829",
    "end": "580459"
  },
  {
    "text": "start to scale and one of the easiest things that you can do is get a bigger",
    "start": "580459",
    "end": "585649"
  },
  {
    "text": "box really simple stop an instance choose a different instance type start",
    "start": "585649",
    "end": "592009"
  },
  {
    "text": "it up and now I'm running with completely new compute power memory power storage space and everything it's",
    "start": "592009",
    "end": "598819"
  },
  {
    "text": "great and we have a whole bunch of different instance families and instance",
    "start": "598819",
    "end": "604129"
  },
  {
    "text": "types to choose from to meet whatever demand you have whether it's high CPU high i/o high memory GPU whatever it",
    "start": "604129",
    "end": "611300"
  },
  {
    "text": "might be but you can only get so big when I can",
    "start": "611300",
    "end": "616970"
  },
  {
    "text": "give you a you know 128 cores I can give you two terabytes of RAM that's a pretty",
    "start": "616970",
    "end": "623569"
  },
  {
    "text": "beefy web server but still I can only go so far at some point you're gonna hit an",
    "start": "623569",
    "end": "630170"
  },
  {
    "text": "end point so we need to start to figure out what to do after we employ some of these what we call vertical scaling and",
    "start": "630170",
    "end": "639579"
  },
  {
    "text": "you know this uh this particular architecture of being able to scale vertically this might actually get us to",
    "start": "639579",
    "end": "645550"
  },
  {
    "text": "hundreds maybe even thousands of users on this very simple existing web stack",
    "start": "645550",
    "end": "651060"
  },
  {
    "text": "but I've pointed out some inherent problems here we have a number of single points of failure with the exception of",
    "start": "651060",
    "end": "658509"
  },
  {
    "text": "route 53 that has these 60 edge locations around the globe we've got a number we have a number of things that",
    "start": "658509",
    "end": "663940"
  },
  {
    "text": "we need to take care of here so if we want to go beyond one user I'm gonna",
    "start": "663940",
    "end": "671500"
  },
  {
    "text": "suggest one of the first things you want to do is break out that database from your web tier and many of you are",
    "start": "671500",
    "end": "677110"
  },
  {
    "text": "probably sitting here thinking I probably would have done that from the get-go and that's perfectly fine but",
    "start": "677110",
    "end": "683339"
  },
  {
    "text": "instantly this gives me some scalability because now I can scale my web tier",
    "start": "683339",
    "end": "689829"
  },
  {
    "text": "separately from my data tier they have different requirements they don't need",
    "start": "689829",
    "end": "695199"
  },
  {
    "text": "to scale the same why not separate them out scale them independently from each other so you need to run a database lots",
    "start": "695199",
    "end": "707410"
  },
  {
    "start": "703000",
    "end": "703000"
  },
  {
    "text": "of options on the left there you can stick it on an ec2 instance and manage",
    "start": "707410",
    "end": "712930"
  },
  {
    "text": "it yourself probably like you're doing today if you're running in an on-premise environment we also have fully managed",
    "start": "712930",
    "end": "719709"
  },
  {
    "text": "databases that you can run Amazon RDS our relational database service managed",
    "start": "719709",
    "end": "725980"
  },
  {
    "text": "Postgres maria DB microsoft sequel server oracle amazon aurora DynamoDB are",
    "start": "725980",
    "end": "735120"
  },
  {
    "text": "managed no sequel database an Amazon redshift probably not being used for",
    "start": "735120",
    "end": "741370"
  },
  {
    "text": "your web application but worth mentioning here it's our managed petabyte scale data warehousing platform",
    "start": "741370",
    "end": "749310"
  },
  {
    "start": "749000",
    "end": "749000"
  },
  {
    "text": "let's talk a little bit more about Aurora this is a service that I think we",
    "start": "749310",
    "end": "755949"
  },
  {
    "text": "launched in a year or two ago now it's um it's becoming a very fast-growing",
    "start": "755949",
    "end": "761829"
  },
  {
    "text": "service for us and the reason that it is is because it's a heck of a lot cheaper",
    "start": "761829",
    "end": "767019"
  },
  {
    "text": "than some of those traditional relational databases that you're used to running those commercial databases",
    "start": "767019",
    "end": "773579"
  },
  {
    "text": "it's very performant and and it's got a",
    "start": "773579",
    "end": "778660"
  },
  {
    "text": "lot of features that are really cool as far as scaling is concerned storage scaling automatic storage",
    "start": "778660",
    "end": "784930"
  },
  {
    "text": "scaling gone are the days of having to provision the storage ahead of time pay",
    "start": "784930",
    "end": "790660"
  },
  {
    "text": "for what I use scale automatically up to 64 terabytes 15 read replicas I can have",
    "start": "790660",
    "end": "797140"
  },
  {
    "text": "for my Aurora database taco I'm going to talk about read replicas a little later",
    "start": "797140",
    "end": "802660"
  },
  {
    "text": "how they fit into our scaling model and fully my sequel compatible if you're",
    "start": "802660",
    "end": "808150"
  },
  {
    "text": "running an application that's my sequel 5.6 compatible drop in compatibility",
    "start": "808150",
    "end": "813640"
  },
  {
    "text": "with Aurora I can even create Aurora read replicas from my I mean micro my sequel read replicas from my Aurora",
    "start": "813640",
    "end": "820330"
  },
  {
    "text": "database but we have a decision to make I mentioned we've got relational data",
    "start": "820330",
    "end": "826420"
  },
  {
    "text": "and we've got non-relational data stores how do I choose well so you aren't going",
    "start": "826420",
    "end": "834460"
  },
  {
    "text": "to like this but I'm going to suggest that you start with a relational data store and my evidence for why I think",
    "start": "834460",
    "end": "840640"
  },
  {
    "text": "this is here and it's interesting as the years go by I actually think that this",
    "start": "840640",
    "end": "847410"
  },
  {
    "text": "this list is going to change because I think that no sequel databases are",
    "start": "847410",
    "end": "853060"
  },
  {
    "text": "actually something that might make some more sense to start with especially when",
    "start": "853060",
    "end": "858310"
  },
  {
    "text": "you talk about well-worn technology because you know DynamoDB for example has been around for a long time now but",
    "start": "858310",
    "end": "864960"
  },
  {
    "text": "we still live in an environment where relational if I want to scale a relational database there's so much",
    "start": "864960",
    "end": "870460"
  },
  {
    "text": "information out there there's so many code samples and snippets and videos and information on how to make that happen",
    "start": "870460",
    "end": "877120"
  },
  {
    "text": "clear patterns for scalability the other thing is you're not going to break this",
    "start": "877120",
    "end": "882730"
  },
  {
    "text": "relational data in your first 10 million users it's not going to happen now I do",
    "start": "882730",
    "end": "888910"
  },
  {
    "text": "have a little asterisk in the bottom there and that basically says ok listen if you're doing something incredibly",
    "start": "888910",
    "end": "894370"
  },
  {
    "text": "peculiar or you have a massive amount of data there might be a place for no",
    "start": "894370",
    "end": "899470"
  },
  {
    "text": "sequel in your web app on day one",
    "start": "899470",
    "end": "904590"
  },
  {
    "text": "alright there's three of you out here right now that are saying uh-huh he's said massive I've got a massive amount",
    "start": "904590",
    "end": "910560"
  },
  {
    "text": "ok well for those three edge cases all right there might be a reason for you",
    "start": "910560",
    "end": "915760"
  },
  {
    "text": "use a no sequel datastore out-of-the-box I mean if you've got an incredible amount of data or the workload is really",
    "start": "915760",
    "end": "923680"
  },
  {
    "text": "data intensive we could probably make an argument that you might want to start there but they're still going to be a",
    "start": "923680",
    "end": "928780"
  },
  {
    "text": "place for relational data store in your environment it's not it's not an all-or-nothing thing here you can have",
    "start": "928780",
    "end": "936130"
  },
  {
    "text": "both of them in your environment whatever makes sense for your particular web app here's some additional reasons",
    "start": "936130",
    "end": "943750"
  },
  {
    "text": "why you might need no sequel low latency applications metadata driven sets data",
    "start": "943750",
    "end": "950950"
  },
  {
    "text": "sets you're basically dealing with key value pairs here I mean if you're",
    "start": "950950",
    "end": "955990"
  },
  {
    "text": "managing a leaderboard for example well this might make sense for you so I want",
    "start": "955990",
    "end": "964660"
  },
  {
    "text": "to get to greater than a hundred users I am choosing to use a relational database",
    "start": "964660",
    "end": "969700"
  },
  {
    "text": "service from Amazon and again out of the",
    "start": "969700",
    "end": "975070"
  },
  {
    "text": "box I can check a box that says I want this database to exist in multiple availability zones and I don't have to",
    "start": "975070",
    "end": "982810"
  },
  {
    "text": "manage that I get instant availability right out of the box I can venture a",
    "start": "982810",
    "end": "989920"
  },
  {
    "text": "guess that nobody in here is really differentiated by their ability to manage a database so I don't",
    "start": "989920",
    "end": "997720"
  },
  {
    "text": "differentiate myself either that way I am going to use the relational database service so that Amazon will manage my",
    "start": "997720",
    "end": "1004680"
  },
  {
    "text": "backups will manage my scale it will manage my my availability and that",
    "start": "1004680",
    "end": "1010200"
  },
  {
    "text": "Amazon will manage my patching for me and just the overall management of that database and just give me a database",
    "start": "1010200",
    "end": "1015780"
  },
  {
    "text": "endpoint and I can build my web app",
    "start": "1015780",
    "end": "1020000"
  },
  {
    "text": "you'll notice that in this diagram I'm also showing you now the concept of",
    "start": "1023089",
    "end": "1028350"
  },
  {
    "text": "multiple availability zones I'm distributing my web tier between these",
    "start": "1028350",
    "end": "1034230"
  },
  {
    "text": "two availability zones I'm also putting that slave database that that replicas",
    "start": "1034230",
    "end": "1039329"
  },
  {
    "text": "for high for for high availability in that other availability zone but I've",
    "start": "1039329",
    "end": "1044819"
  },
  {
    "text": "also thrown in an elastic load balancer here this is going to be really important to be I want to make sure that I distribute my",
    "start": "1044820",
    "end": "1050850"
  },
  {
    "text": "load evenly between the the web instances that I've put here more importantly the elastic load balancer is",
    "start": "1050850",
    "end": "1057900"
  },
  {
    "text": "highly available out of the box can you run your own load balancer on",
    "start": "1057900",
    "end": "1064530"
  },
  {
    "text": "ec2 inside of an availability zone absolutely but you have to manage the",
    "start": "1064530",
    "end": "1069860"
  },
  {
    "text": "load balancer at that point and manage the availability and the scalability of it that elastic load balancer right",
    "start": "1069860",
    "end": "1076350"
  },
  {
    "text": "there will scale automatically for you as well the elastic load balancer one of",
    "start": "1076350",
    "end": "1086910"
  },
  {
    "start": "1083000",
    "end": "1083000"
  },
  {
    "text": "my favorite features of it is the health checks that it performs against the underlying instances that are registered",
    "start": "1086910",
    "end": "1092340"
  },
  {
    "text": "with the load balancer if the load balancer determines that an instance is unhealthy it's not gonna send traffic to",
    "start": "1092340",
    "end": "1099000"
  },
  {
    "text": "it it's only gonna send traffic to those that are actually healthy the other feature that's going to really help you",
    "start": "1099000",
    "end": "1106230"
  },
  {
    "text": "with scaling your web app with this elastic load balancer is the ability to offload and terminate your SSL on the",
    "start": "1106230",
    "end": "1113070"
  },
  {
    "text": "load balancer anytime I can remove something from my web tier it's a bonus for me it's going to give me the ability",
    "start": "1113070",
    "end": "1119370"
  },
  {
    "text": "to get much more performance out of that web tier without having to terminate SSL",
    "start": "1119370",
    "end": "1126000"
  },
  {
    "text": "on it so let's pull that off stick it on the load balancer let it handle it especially because it's a managed",
    "start": "1126000",
    "end": "1131640"
  },
  {
    "text": "service and it's going to scale automatically for you we recently",
    "start": "1131640",
    "end": "1140580"
  },
  {
    "start": "1138000",
    "end": "1138000"
  },
  {
    "text": "announced a new member of the elastic load balancer fleet called the",
    "start": "1140580",
    "end": "1147060"
  },
  {
    "text": "application load balancers so now you'll you'll probably hear references to a classic load balancer which refers to",
    "start": "1147060",
    "end": "1153870"
  },
  {
    "text": "the one I just spoke of and now an application load balancer which isn't as a load balancer that operates at layer 7",
    "start": "1153870",
    "end": "1161310"
  },
  {
    "text": "and allows me to do a number of things one of the features that our customers were clamoring for especially was the",
    "start": "1161310",
    "end": "1167040"
  },
  {
    "text": "content based routing and the ability to now send different URIs two different instances in different parts of my web",
    "start": "1167040",
    "end": "1173640"
  },
  {
    "text": "tier which is awesome WebSockets creating those long time connections to my web tier as well",
    "start": "1173640",
    "end": "1181590"
  },
  {
    "text": "so the elastic load balancer the elect the application load balancer this is",
    "start": "1181590",
    "end": "1186850"
  },
  {
    "text": "what's gonna give me the ability now to scale what we call horizontally so I can",
    "start": "1186850",
    "end": "1193660"
  },
  {
    "text": "use load balancing to scale horizontally I can use different instance types to",
    "start": "1193660",
    "end": "1198700"
  },
  {
    "text": "scale vertically which is great and these two pieces together are going to",
    "start": "1198700",
    "end": "1204010"
  },
  {
    "text": "create that package that I'm looking for to help my web tier scale this is also",
    "start": "1204010",
    "end": "1211420"
  },
  {
    "text": "going to get us pretty far I mean we can get to thousands maybe tens of thousands do it use using these tools but I want",
    "start": "1211420",
    "end": "1219940"
  },
  {
    "text": "to get to hundreds of thousands of users so I'm gonna continue to use my load",
    "start": "1219940",
    "end": "1226090"
  },
  {
    "text": "balancer I might add additional instances to the load balancer maybe now I've got eight instances notice how",
    "start": "1226090",
    "end": "1231400"
  },
  {
    "text": "there's split evenly amongst the different availability zones but I'm also adding additional read replicas to",
    "start": "1231400",
    "end": "1238060"
  },
  {
    "text": "my data tier Amazon Arora makes this really easy this is my sequel as well",
    "start": "1238060",
    "end": "1244180"
  },
  {
    "text": "but I'm going to add these read replicas to take away the load off of that master",
    "start": "1244180",
    "end": "1250930"
  },
  {
    "text": "database I don't need my application going to the master for every read let it distribute",
    "start": "1250930",
    "end": "1256930"
  },
  {
    "text": "that to these read replicas to basically lower that load and that impact on my",
    "start": "1256930",
    "end": "1262180"
  },
  {
    "text": "database and allow me to scale this is a scaling the data tier",
    "start": "1262180",
    "end": "1268740"
  },
  {
    "text": "as I scale it's gonna be really important though that I not only consider performance but I also need to",
    "start": "1273389",
    "end": "1279629"
  },
  {
    "text": "consider all the different cost implement implications as well so we",
    "start": "1279629",
    "end": "1285599"
  },
  {
    "text": "want to get a little more performant and a little more efficiency so let's kind of clean this up a little bit we're",
    "start": "1285599",
    "end": "1292169"
  },
  {
    "text": "gonna lighten the load and I talked about lightening the load I mean taking",
    "start": "1292169",
    "end": "1299219"
  },
  {
    "text": "more and more off of my web tear and off of my data tear introducing two services",
    "start": "1299219",
    "end": "1304799"
  },
  {
    "text": "here Amazon CloudFront and Amazon s3 and this is going to give",
    "start": "1304799",
    "end": "1312570"
  },
  {
    "text": "us a ability to take all those static assets and get them off the web tier there's no reason for them to exist",
    "start": "1312570",
    "end": "1319679"
  },
  {
    "text": "there I'm gonna put them in a highly durable object store front them with Amazon Cloud front and get them",
    "start": "1319679",
    "end": "1327209"
  },
  {
    "text": "distributed globally with very low latency",
    "start": "1327209",
    "end": "1332898"
  },
  {
    "text": "this is the same diagram I've kind of simplified it a little bit to take to get rid of some of the arrows but this",
    "start": "1340290",
    "end": "1346690"
  },
  {
    "text": "is what it would look like in a single availability zone fashion but of course I always want to architect for high availability s/3 s/3 was architected for",
    "start": "1346690",
    "end": "1358990"
  },
  {
    "start": "1353000",
    "end": "1353000"
  },
  {
    "text": "11 nines of durability eleven nine Zura bility can anybody even comprehend what",
    "start": "1358990",
    "end": "1365740"
  },
  {
    "text": "that equates to if you're storing ten",
    "start": "1365740",
    "end": "1371950"
  },
  {
    "text": "thousand objects in s3 we're saying that",
    "start": "1371950",
    "end": "1377830"
  },
  {
    "text": "we might lose one in ten million years it's pretty phenomenal it's highly",
    "start": "1377830",
    "end": "1385390"
  },
  {
    "text": "durable awesome for static assets I'm only paying for what I'm using so it's",
    "start": "1385390",
    "end": "1391480"
  },
  {
    "text": "not something that I have to provision ahead of time infinitely scalable and I can encrypt the data there it's a great",
    "start": "1391480",
    "end": "1398200"
  },
  {
    "text": "place to put all of that static content and of course I'm gonna front that with",
    "start": "1398200",
    "end": "1405940"
  },
  {
    "start": "1404000",
    "end": "1404000"
  },
  {
    "text": "cloud front to get that out to my edge locations notice that I sent static",
    "start": "1405940",
    "end": "1415000"
  },
  {
    "text": "content earlier cloud front also is great for dynamic content I can create",
    "start": "1415000",
    "end": "1420280"
  },
  {
    "text": "TTLs as short as zero why would I want to do that why would I want every",
    "start": "1420280",
    "end": "1426160"
  },
  {
    "text": "request coming back to my origin to grab that content because cloud front actually optimizes the connection to the",
    "start": "1426160",
    "end": "1432970"
  },
  {
    "text": "origin and gets that dynamic content out to your end users with that same low",
    "start": "1432970",
    "end": "1438640"
  },
  {
    "text": "latency the graph on top there it's",
    "start": "1438640",
    "end": "1447220"
  },
  {
    "text": "essentially showing you if I'm not using CDN I've got greater response times and",
    "start": "1447220",
    "end": "1454150"
  },
  {
    "text": "greater load on the server but if I use the CDN and and especially getting that",
    "start": "1454150",
    "end": "1460810"
  },
  {
    "text": "content off of to s3 as well I've now decreased my server load",
    "start": "1460810",
    "end": "1466540"
  },
  {
    "text": "tremendously and created a better experience for my customers this is going to enhance my ability",
    "start": "1466540",
    "end": "1473350"
  },
  {
    "text": "to scale let's shift some more load",
    "start": "1473350",
    "end": "1479470"
  },
  {
    "text": "around I'm introducing Amazon ElastiCache and Amazon DynamoDB",
    "start": "1479470",
    "end": "1487350"
  },
  {
    "text": "ElastiCache well it's actually this go with dynamodb first",
    "start": "1487350",
    "end": "1492480"
  },
  {
    "start": "1491000",
    "end": "1491000"
  },
  {
    "text": "dynamodb I'm gonna take my session state data send it off to dynamo DB I'm gonna",
    "start": "1492480",
    "end": "1499450"
  },
  {
    "text": "create a stateless application if I can remove the session state from my web",
    "start": "1499450",
    "end": "1505659"
  },
  {
    "text": "tier it's going to greatly increase my ability to scale while maintaining a positive user experience Amazon DynamoDB",
    "start": "1505659",
    "end": "1513640"
  },
  {
    "text": "is our managed no sequel database you can provision the level of throughput",
    "start": "1513640",
    "end": "1520860"
  },
  {
    "text": "with DynamoDB you actually can provision the reads and the rights separately from",
    "start": "1520860",
    "end": "1527650"
  },
  {
    "text": "each other how cool is that I get to determine how much performance I need to get tell them how much I want and have",
    "start": "1527650",
    "end": "1536080"
  },
  {
    "text": "that performance I'm also getting single-digit millisecond latency low",
    "start": "1536080",
    "end": "1542110"
  },
  {
    "text": "single-digit millisecond latency consistently it's a key value store we",
    "start": "1542110",
    "end": "1548080"
  },
  {
    "text": "also support JSON items up to 400 KB it's a very powerful datastore and also",
    "start": "1548080",
    "end": "1556620"
  },
  {
    "text": "highly available right out of the box Amazon ElastiCache managed memcache D",
    "start": "1556620",
    "end": "1566200"
  },
  {
    "start": "1561000",
    "end": "1561000"
  },
  {
    "text": "and Redis managed that means that you don't have to manage these clusters yourself with",
    "start": "1566200",
    "end": "1572770"
  },
  {
    "text": "Redis we even have highly available architectures leveraging those multi availability zones that you can",
    "start": "1572770",
    "end": "1579070"
  },
  {
    "text": "configure self-healing we manage the",
    "start": "1579070",
    "end": "1585940"
  },
  {
    "text": "clusters so if nodes are not performing",
    "start": "1585940",
    "end": "1591850"
  },
  {
    "text": "we'll replace them for you",
    "start": "1591850",
    "end": "1595470"
  },
  {
    "text": "I want to use this in my web stack to get my high access queries sitting off",
    "start": "1597510",
    "end": "1608130"
  },
  {
    "text": "of my data tier I don't need to keep going back to the data tier for the same",
    "start": "1608130",
    "end": "1613380"
  },
  {
    "text": "queries over and over again I'm gonna store them in this cache better user experience better ability to scale here",
    "start": "1613380",
    "end": "1625470"
  },
  {
    "text": "I'm showing you that cloud front is now gonna go to my elastic load balancer and now start serving that dynamic content",
    "start": "1625470",
    "end": "1632520"
  },
  {
    "text": "as well I'm also gonna send those queries from my data tier into",
    "start": "1632520",
    "end": "1638730"
  },
  {
    "text": "ElastiCache and I'm going to offload my session state data to dynamo DB great",
    "start": "1638730",
    "end": "1652730"
  },
  {
    "text": "our environments a little more lightweight now we can now go back to the beginning of the talk I could talk",
    "start": "1652730",
    "end": "1659850"
  },
  {
    "text": "more about me no I'm kidding we're going to talk about auto-scaling yay hooray for auto-scaling",
    "start": "1659850",
    "end": "1666000"
  },
  {
    "text": "we finally got there so auto-scaling",
    "start": "1666000",
    "end": "1672500"
  },
  {
    "text": "automatic it's Auto that's the best part right you can scale without getting that",
    "start": "1672500",
    "end": "1678210"
  },
  {
    "text": "call at 3:00 in the morning saying that hey you have a bad customer experiencing you need to actually do something about it",
    "start": "1678210",
    "end": "1683600"
  },
  {
    "text": "you define how big you want your environment to get you define what it is",
    "start": "1683600",
    "end": "1690180"
  },
  {
    "text": "that's going to trigger that event you're using cloud watch our monitoring service to determine when you want to",
    "start": "1690180",
    "end": "1697230"
  },
  {
    "text": "scale because we don't know you might want to scale because CPU utilization of",
    "start": "1697230",
    "end": "1704430"
  },
  {
    "text": "your instances have got has gotten to a certain point you might want to scale because queue depth has gotten to a certain point maybe there's something",
    "start": "1704430",
    "end": "1711000"
  },
  {
    "text": "specific in your application that you want to scale on and you want to send a custom metric in the cloud watch and",
    "start": "1711000",
    "end": "1716130"
  },
  {
    "text": "scale upon that you have the ability to do that as well",
    "start": "1716130",
    "end": "1721370"
  },
  {
    "text": "typical weekly traffic to amazon.com peaks and valleys right people are",
    "start": "1726360",
    "end": "1731770"
  },
  {
    "text": "buying during the day people are hopefully sleeping at night if we wanted",
    "start": "1731770",
    "end": "1737980"
  },
  {
    "text": "a provision capacity to meet this demand we probably provision it there right we want to make sure that we always have",
    "start": "1737980",
    "end": "1743050"
  },
  {
    "text": "enough capacity to meet the demands of our customers so we'd provision it there",
    "start": "1743050",
    "end": "1748200"
  },
  {
    "text": "how about this this might look like something that just happened right a",
    "start": "1748200",
    "end": "1754350"
  },
  {
    "text": "couple of really large Peaks there at the far right maybe Black Friday maybe",
    "start": "1754350",
    "end": "1760240"
  },
  {
    "text": "Cyber Monday if we needed to provision for this capacity that would be a lot of",
    "start": "1760240",
    "end": "1769090"
  },
  {
    "text": "waste we don't want to do that wouldn't it be nice if we could always provision",
    "start": "1769090",
    "end": "1775840"
  },
  {
    "text": "the level of capacity that we needed to meet the demands of our customers just-in-time provisioning that's what",
    "start": "1775840",
    "end": "1784720"
  },
  {
    "text": "auto scaling lets you do no more over provisioning of resources so here's our",
    "start": "1784720",
    "end": "1793030"
  },
  {
    "text": "architecture I apologize for all the lines that makes it look a little bit messy but it's important it's basically",
    "start": "1793030",
    "end": "1799630"
  },
  {
    "text": "just showing my web tier hitting the read replicas and hitting the databases and hitting the data cache and whatnot",
    "start": "1799630",
    "end": "1805210"
  },
  {
    "text": "but you'll notice I've now created a white dotted line around my web tier and",
    "start": "1805210",
    "end": "1810400"
  },
  {
    "text": "my different availability zones and that's my auto scaling group in fact",
    "start": "1810400",
    "end": "1817930"
  },
  {
    "text": "right now you'll notice I actually have two auto scaling groups one in each availability zone and frankly I don't",
    "start": "1817930",
    "end": "1823240"
  },
  {
    "text": "like that I want my auto scaling group to span my availability zones I have no reason for",
    "start": "1823240",
    "end": "1829150"
  },
  {
    "text": "adding instances to one availability zone and not another I want to do this in parallel it's great for scalability",
    "start": "1829150",
    "end": "1837700"
  },
  {
    "text": "and great for availability as well so now when my web tier when cloud watch",
    "start": "1837700",
    "end": "1845410"
  },
  {
    "text": "monitors my elastic load balancer and says hmm I'm noticing that the average CPU utilization of Joel's web tier has",
    "start": "1845410",
    "end": "1851830"
  },
  {
    "text": "gotten to 80 percent it's been like that for five minutes I'm going to add additional capacity maybe I'm adding",
    "start": "1851830",
    "end": "1858669"
  },
  {
    "text": "a certain number of instances maybe I'm adding a percentage of instances it's",
    "start": "1858669",
    "end": "1864879"
  },
  {
    "text": "also important that for every scale-up the policy that we have got to have a",
    "start": "1864879",
    "end": "1870639"
  },
  {
    "text": "scale down policy well you don't have to have it we're happy to take all your money but I'm suggesting that to optimize for",
    "start": "1870639",
    "end": "1878109"
  },
  {
    "text": "cost and to always have just the right number of instances to match your demand",
    "start": "1878109",
    "end": "1883899"
  },
  {
    "text": "you want to have a scale down policy as well auto scaling is great love the word",
    "start": "1883899",
    "end": "1893470"
  },
  {
    "text": "Auto anything we can do to increase the automation of our environment is going",
    "start": "1893470",
    "end": "1898929"
  },
  {
    "text": "to be beneficial and auto scaling is just one piece of that we have a number",
    "start": "1898929",
    "end": "1904600"
  },
  {
    "start": "1903000",
    "end": "1903000"
  },
  {
    "text": "of application management solutions that help you automate your environment as well these are some of them here notice",
    "start": "1904600",
    "end": "1912070"
  },
  {
    "text": "the continuum convenience on one end control on the other and you're gonna",
    "start": "1912070",
    "end": "1920619"
  },
  {
    "text": "find that you might need a little bit of each of these potentially it's again not",
    "start": "1920619",
    "end": "1926559"
  },
  {
    "text": "a one-size-fits-all you can leverage all of these if it makes sense for your particular application and architecture",
    "start": "1926559",
    "end": "1933629"
  },
  {
    "text": "Amazon Elastic Beanstalk super simple point the service to my application code",
    "start": "1933629",
    "end": "1939730"
  },
  {
    "text": "define some parameters about how big I want my environment to get an AWS will",
    "start": "1939730",
    "end": "1945399"
  },
  {
    "text": "create the environment that's necessary to run the application for you it's",
    "start": "1945399",
    "end": "1950440"
  },
  {
    "text": "great very easy provisioning tool makes it very easy for deployments and very",
    "start": "1950440",
    "end": "1957340"
  },
  {
    "text": "convenient AWS opsworks I define my",
    "start": "1957340",
    "end": "1962950"
  },
  {
    "text": "application in layers I use chef recipes to manage those layers Amazon provides",
    "start": "1962950",
    "end": "1969249"
  },
  {
    "text": "you with a bunch of chef recipes right out of the box you can build your own custom recipes as well and use those to",
    "start": "1969249",
    "end": "1976330"
  },
  {
    "text": "manage your opsworks environment gives you a little bit more control maybe a little less convenience if you're a an",
    "start": "1976330",
    "end": "1982929"
  },
  {
    "text": "avid user of chef I encourage you to take a look at that cloud formation probably from a automation standpoint",
    "start": "1982929",
    "end": "1990759"
  },
  {
    "text": "probably the most all that you can possibly get is with cloud formation because now I get to",
    "start": "1990759",
    "end": "1996350"
  },
  {
    "text": "create a template I z'd picture of my environment a JSON formatted template where I define all of my resources and",
    "start": "1996350",
    "end": "2003490"
  },
  {
    "text": "my parameters and everything that I want to run my stack so that I can launch my stack with this template and I can",
    "start": "2003490",
    "end": "2010210"
  },
  {
    "text": "reproduce it very easily I can move it to different regions even if I want to",
    "start": "2010210",
    "end": "2015580"
  },
  {
    "text": "update the stack I simply create an update to the stack and tell it to update and I get new resources in my",
    "start": "2015580",
    "end": "2021970"
  },
  {
    "text": "application environment very repeatable but it's be honest it's not easy to",
    "start": "2021970",
    "end": "2027760"
  },
  {
    "text": "learn cloud formation it takes a while it's a little bit of a beast but if you want a lot of control I encourage you to",
    "start": "2027760",
    "end": "2033040"
  },
  {
    "text": "take a look at that as well and then Amazon ec2 right you can run all this on",
    "start": "2033040",
    "end": "2039070"
  },
  {
    "text": "your own you don't need to use any management tools at all but when it comes to any managed service generally",
    "start": "2039070",
    "end": "2045790"
  },
  {
    "text": "speaking we're doing something in response to something that you have asked us for because you're not in the business of managing this stuff you're",
    "start": "2045790",
    "end": "2052540"
  },
  {
    "text": "in the business of selling widgets or developing applications you're not in the business of managing this stuff so",
    "start": "2052540",
    "end": "2058990"
  },
  {
    "text": "anytime you can offload that to a managed service you really ought to take a look at that we also have a whole",
    "start": "2058990",
    "end": "2067840"
  },
  {
    "start": "2065000",
    "end": "2065000"
  },
  {
    "text": "suite of application deployment tools code deploy code commit code pipeline",
    "start": "2067840",
    "end": "2076919"
  },
  {
    "text": "code deploy for example is a great way to deploy your code to a fleet of ec2",
    "start": "2076919",
    "end": "2083080"
  },
  {
    "text": "instances it's cool it's a great deployment mechanism whether or not you're doing rolling updates or",
    "start": "2083080",
    "end": "2088480"
  },
  {
    "text": "Bluegreen deployments you can also point this to an auto scaling group so that",
    "start": "2088480",
    "end": "2094300"
  },
  {
    "text": "you can update your application at the same time and not have to you know update different components at different",
    "start": "2094300",
    "end": "2099880"
  },
  {
    "text": "at different times you can use this with chef you can use it with pop puppet you",
    "start": "2099880",
    "end": "2105220"
  },
  {
    "text": "can use it with ansible whatever your favorite application tools are so we",
    "start": "2105220",
    "end": "2113950"
  },
  {
    "text": "want to get to a point where we can get now over a half a million users and as",
    "start": "2113950",
    "end": "2121090"
  },
  {
    "text": "we start to get this big monitoring and logging although always very",
    "start": "2121090",
    "end": "2126790"
  },
  {
    "text": "certainly becomes even more important at this point because the scale of our application is gonna make it a lot more",
    "start": "2126790",
    "end": "2132700"
  },
  {
    "text": "difficult don't build these tools yourself there's plenty of AWS tools and",
    "start": "2132700",
    "end": "2142240"
  },
  {
    "text": "AWS partners out in the expo hall that will be glad to help you out with all of",
    "start": "2142240",
    "end": "2147400"
  },
  {
    "text": "your monitoring metrics and logging needs and you need to attack this from a",
    "start": "2147400",
    "end": "2156640"
  },
  {
    "text": "lot of different places there's a lot of components that go into monitoring and logging and we've provided you with a",
    "start": "2156640",
    "end": "2162430"
  },
  {
    "text": "lot of that out of the box for example you can leverage eeob logging and VPC flow logging an s3 bucket logging and",
    "start": "2162430",
    "end": "2169480"
  },
  {
    "text": "cloud front logging there's cloud watch logs you can even send your application logs to cloud front logs and and trigger",
    "start": "2169480",
    "end": "2176290"
  },
  {
    "text": "events based on that you know to do something it's it there's a lot of functionality you can get inherently an",
    "start": "2176290",
    "end": "2181540"
  },
  {
    "text": "AWS and then you might want to leverage tools outside of AWS to visualize the",
    "start": "2181540",
    "end": "2187660"
  },
  {
    "text": "logs you know maybe you're comfortable building out your elk stack to do the visualization maybe you want to use one",
    "start": "2187660",
    "end": "2193540"
  },
  {
    "text": "of our partners out in the expo hall but",
    "start": "2193540",
    "end": "2198730"
  },
  {
    "text": "again there's lots of different types of metrics that you want to collect collect them at the hosts collect aggregate",
    "start": "2198730",
    "end": "2205000"
  },
  {
    "text": "metrics right get figure out what all my instances are doing you got to and",
    "start": "2205000",
    "end": "2210460"
  },
  {
    "text": "analyze the logs to figure out you know really what's going on within your",
    "start": "2210460",
    "end": "2215500"
  },
  {
    "text": "application and I think the one that gets overlooked a lot is the one on the bottom right like it's great if",
    "start": "2215500",
    "end": "2221920"
  },
  {
    "text": "everything looks great from the inside I'm logging and monitoring and everything's great low CPU low this",
    "start": "2221920",
    "end": "2228630"
  },
  {
    "text": "applications performing great but you know what my users can't access the app I need to know what that looks like from",
    "start": "2228630",
    "end": "2236110"
  },
  {
    "text": "the outside this this particular screenshot comes from Pingdom where it's",
    "start": "2236110",
    "end": "2241120"
  },
  {
    "text": "basically just trying to figure out what is the applicate what the application looks like from the outside",
    "start": "2241120",
    "end": "2247470"
  },
  {
    "text": "there's still a lot more that we can do SOA what is SOA well I go to my favorite",
    "start": "2250490",
    "end": "2259920"
  },
  {
    "text": "search engine again I'm gonna type in SOA it's gonna return once again a lot of different results I'm gonna suggest",
    "start": "2259920",
    "end": "2267660"
  },
  {
    "text": "this is not where we want to start great show by the way but still not where we want to start but in this particular",
    "start": "2267660",
    "end": "2274440"
  },
  {
    "text": "case this is where we want to start so what is service-oriented architectures",
    "start": "2274440",
    "end": "2280830"
  },
  {
    "text": "well this is our ability to separate the components of our application even",
    "start": "2280830",
    "end": "2286170"
  },
  {
    "text": "further I don't need my web stack doing a bunch of different things I need it doing one",
    "start": "2286170",
    "end": "2292530"
  },
  {
    "text": "thing and doing it well I want to take and distribute the activities that that",
    "start": "2292530",
    "end": "2298410"
  },
  {
    "text": "web and apps here need to do out into different tiers of my application it's",
    "start": "2298410",
    "end": "2303600"
  },
  {
    "text": "gonna give me greater flexibility to scale because these components have different scaling needs here's some",
    "start": "2303600",
    "end": "2315030"
  },
  {
    "text": "examples of how you might be able to do some SOA if you will on AWS using some",
    "start": "2315030",
    "end": "2321270"
  },
  {
    "text": "of our application tools whether it's searching or queueing or emailing or notifying or transcoding queuing for",
    "start": "2321270",
    "end": "2334170"
  },
  {
    "text": "example the easiest way here to pass distributed distributed messages between",
    "start": "2334170",
    "end": "2340890"
  },
  {
    "text": "the different tiers of your application so that you can have different tiers of your application doing different things",
    "start": "2340890",
    "end": "2345960"
  },
  {
    "text": "it doesn't make any sense for me to build out an application tier and have I don't know it taking orders and emailing",
    "start": "2345960",
    "end": "2354290"
  },
  {
    "text": "confirmations to my users and submitting messages to the inventor do inventory",
    "start": "2354290",
    "end": "2359610"
  },
  {
    "text": "tracking I want to want to separate all that into different tiers of my application and scale them independently of each other the queue is gonna allow",
    "start": "2359610",
    "end": "2366270"
  },
  {
    "text": "me to do that right because I can I can take an order have a message put in a queue and then have all the different",
    "start": "2366270",
    "end": "2371880"
  },
  {
    "text": "components of my applications need to act on that order pull the message off the queue and perform an action and then I can scale",
    "start": "2371880",
    "end": "2378540"
  },
  {
    "text": "those tiers independently of each other",
    "start": "2378540",
    "end": "2382160"
  },
  {
    "start": "2383000",
    "end": "2383000"
  },
  {
    "text": "lambda AWS lambda this is a service that we announced a couple years ago I think",
    "start": "2385730",
    "end": "2392310"
  },
  {
    "text": "it went G a maybe last year and I'm very excited to be able to say this because I",
    "start": "2392310",
    "end": "2398430"
  },
  {
    "text": "didn't think I'd get to hop on the bandwagon in my session today but serverless I think that's like the theme",
    "start": "2398430",
    "end": "2404640"
  },
  {
    "text": "of the conference this year server lists architectures if you haven't heard it yet you're gonna hear a lot about it but",
    "start": "2404640",
    "end": "2410010"
  },
  {
    "text": "lambda creating a server list architecture to to allow me to get",
    "start": "2410010",
    "end": "2416160"
  },
  {
    "text": "something take to get something done without having to actually build out at the infrastructure to make it happen and",
    "start": "2416160",
    "end": "2422840"
  },
  {
    "text": "Landa's kind of changed the way that we think about service-oriented",
    "start": "2422840",
    "end": "2428040"
  },
  {
    "text": "architectures it's essentially event-driven computing so now I can have",
    "start": "2428040",
    "end": "2433920"
  },
  {
    "text": "an event that occurs in my last example maybe an order comes in and now lambda can actually execute some code as soon",
    "start": "2433920",
    "end": "2441720"
  },
  {
    "text": "as that order comes in JavaScript Java",
    "start": "2441720",
    "end": "2447859"
  },
  {
    "text": "Python code very very powerful and it's",
    "start": "2447859",
    "end": "2454950"
  },
  {
    "text": "managed what does that mean highly available out-of-the-box loose",
    "start": "2454950",
    "end": "2463140"
  },
  {
    "start": "2461000",
    "end": "2461000"
  },
  {
    "text": "coupling sets you free the more you decouple your architecture the more free",
    "start": "2463140",
    "end": "2469530"
  },
  {
    "text": "you're gonna be design everything as a black box let them scale independently of each other and favor those services",
    "start": "2469530",
    "end": "2479100"
  },
  {
    "text": "that have the built-in redundancy and scalability built in don't build it yourself it's not worth it you're gonna",
    "start": "2479100",
    "end": "2485940"
  },
  {
    "text": "find that this is much more cost effective and performant for you to do it this way alright we're getting",
    "start": "2485940",
    "end": "2496680"
  },
  {
    "text": "somewhere we're getting the point where we can start to think about supporting over a million users and to get there",
    "start": "2496680",
    "end": "2506850"
  },
  {
    "text": "we're gonna you know kind of need a lot of what we've already started right",
    "start": "2506850",
    "end": "2511880"
  },
  {
    "text": "multi availability zone lastic load balancing scale",
    "start": "2511880",
    "end": "2517220"
  },
  {
    "text": "we've moved our caching off our DB we've got the session stayed this is great our",
    "start": "2517220",
    "end": "2524610"
  },
  {
    "text": "architecture probably looks you know something like this now I'm only showing",
    "start": "2524610",
    "end": "2530400"
  },
  {
    "text": "a single availability zone here because of space constraints on the slide but it's important to note that this",
    "start": "2530400",
    "end": "2535470"
  },
  {
    "text": "architecture would absolutely encompass multiple availability zones but notice",
    "start": "2535470",
    "end": "2542610"
  },
  {
    "text": "how I've got like a I I've even separated a new worker tier right with a with a load balancer that's actually",
    "start": "2542610",
    "end": "2549180"
  },
  {
    "text": "operating as an internal load balancer that's not even a public-facing load balancer there in my worker tier I can",
    "start": "2549180",
    "end": "2554670"
  },
  {
    "text": "load balanced intern internal facing tiers of my application that may have a",
    "start": "2554670",
    "end": "2559860"
  },
  {
    "text": "job to do but notice I've thrown in the simple email service lambda queuing",
    "start": "2559860",
    "end": "2566450"
  },
  {
    "text": "dynamodb and of course cloud watch right I want to monitor all this as well so",
    "start": "2566450",
    "end": "2572420"
  },
  {
    "text": "what are our next big steps what do we got to think about to kind of get to the",
    "start": "2573320",
    "end": "2578850"
  },
  {
    "text": "point where we can get to our 10 million users well we want to start to think",
    "start": "2578850",
    "end": "2588780"
  },
  {
    "text": "about some issues that might occur when we start to get over 5 million users the",
    "start": "2588780",
    "end": "2596030"
  },
  {
    "text": "constrains on the database tier I mean we've got a lot we can do with Aurora right we've got the ability to you know",
    "start": "2596030",
    "end": "2602550"
  },
  {
    "text": "create 15 Reid replicas that's that's huge but there's some things that we might want to consider with our",
    "start": "2602550",
    "end": "2609360"
  },
  {
    "text": "relational data we can start thinking about Federation sharding and moving some of that functionality off of our",
    "start": "2609360",
    "end": "2615960"
  },
  {
    "text": "relational data store and into something like dynamo DB Federation splitting up",
    "start": "2615960",
    "end": "2625020"
  },
  {
    "start": "2620000",
    "end": "2620000"
  },
  {
    "text": "your database based on function or purpose you know rather than having a forums table and a user's table and a",
    "start": "2625020",
    "end": "2630030"
  },
  {
    "text": "products table inside of a single database I can separate those into different databases just create a user's",
    "start": "2630030",
    "end": "2635250"
  },
  {
    "text": "database create a products database this is something that we call Federation and",
    "start": "2635250",
    "end": "2641640"
  },
  {
    "text": "and you have the ability to do that to again help lighten the load on your data",
    "start": "2641640",
    "end": "2646860"
  },
  {
    "text": "tier and distribute your your resources out more and give",
    "start": "2646860",
    "end": "2653490"
  },
  {
    "text": "you the ability to scale them independently of each other uh does it require a little bit of application",
    "start": "2653490",
    "end": "2659280"
  },
  {
    "text": "rework potentially yes but the other",
    "start": "2659280",
    "end": "2665040"
  },
  {
    "text": "thing too and it's important to note there it essentially delays sharding or the or going to no sequel which are I",
    "start": "2665040",
    "end": "2671460"
  },
  {
    "text": "would consider to be a little bit more of a disruptive experience let's go into sharding sharding now is and you can you",
    "start": "2671460",
    "end": "2679500"
  },
  {
    "text": "can use sharding again with Federation but if we look at like our user table for example sharding would have me now",
    "start": "2679500",
    "end": "2686510"
  },
  {
    "text": "take my users database and create separate databases for different parts",
    "start": "2686510",
    "end": "2692700"
  },
  {
    "text": "of my users you know maybe a through L and M through Z for example it's a little more difficult to manage require",
    "start": "2692700",
    "end": "2698430"
  },
  {
    "text": "some application tuning on your part but still is a tool that we can employ to",
    "start": "2698430",
    "end": "2703500"
  },
  {
    "text": "lighten the load on our data tier and spread out that load more evenly and",
    "start": "2703500",
    "end": "2709910"
  },
  {
    "text": "then of course starting to think about how much data is actually in my",
    "start": "2709970",
    "end": "2716010"
  },
  {
    "text": "relational data tier that isn't even relational does it make sense to start",
    "start": "2716010",
    "end": "2722070"
  },
  {
    "text": "breaking that out and moving it into a no sequel data tier if you've got things",
    "start": "2722070",
    "end": "2727500"
  },
  {
    "text": "like simple key value stores or leaderboards or lists you know you've",
    "start": "2727500",
    "end": "2732990"
  },
  {
    "text": "got some hot tables maybe then that's a good time to start thinking about taking some of that out of your relational data",
    "start": "2732990",
    "end": "2739560"
  },
  {
    "text": "store and sticking it in an into no sequel why not make it a managed no sequel data store like DynamoDB as well",
    "start": "2739560",
    "end": "2746480"
  },
  {
    "text": "get that availability right out of the box all right very quick review multi AZ",
    "start": "2746480",
    "end": "2758480"
  },
  {
    "text": "self scaling services building in the redundancy at every level seriously",
    "start": "2758480",
    "end": "2765540"
  },
  {
    "text": "start with relational data stores caching anytime you can cache it's a",
    "start": "2765540",
    "end": "2770880"
  },
  {
    "text": "benefit we're going to cache the data tier we're gonna cache on cloud front as well and automation if you're doing",
    "start": "2770880",
    "end": "2778230"
  },
  {
    "text": "anything manually you've got a problem with your scalability mechanism right you do not want to be getting those",
    "start": "2778230",
    "end": "2784550"
  },
  {
    "text": "calls at 3:00 in the morning you want to go to sleep knowing that regardless of how many customers are hitting your site",
    "start": "2784550",
    "end": "2790670"
  },
  {
    "text": "they are going to have a positive experience because you've built in the automation at every level monitoring",
    "start": "2790670",
    "end": "2800260"
  },
  {
    "text": "logging metrics service-oriented architectures don't reinvent the wheel",
    "start": "2800260",
    "end": "2805580"
  },
  {
    "text": "focus on what you're really good at and what differentiates you as a customer or",
    "start": "2805580",
    "end": "2810770"
  },
  {
    "text": "as a consumer building high quality web apps and selling widgets so I think with",
    "start": "2810770",
    "end": "2826700"
  },
  {
    "text": "this we can probably get to 11 million users 10 million users in a ball and",
    "start": "2826700",
    "end": "2831980"
  },
  {
    "text": "beyond really to infinity I think that you know at this point you're like okay",
    "start": "2831980",
    "end": "2838220"
  },
  {
    "start": "2834000",
    "end": "2834000"
  },
  {
    "text": "11 million is great but what if I wanted to go beyond that of course it's a lot of the same stuff I mean you may",
    "start": "2838220",
    "end": "2844010"
  },
  {
    "text": "actually need to start building some custom solutions at that point there's a lot of fine-tuning that you're going to",
    "start": "2844010",
    "end": "2849440"
  },
  {
    "text": "need to do with your application don't go to sleep you know I mentioned that lambda is a relatively new service for",
    "start": "2849440",
    "end": "2855770"
  },
  {
    "text": "AWS and has kind of helped us out in our ability to create service-oriented architectures but you know if you've",
    "start": "2855770",
    "end": "2861800"
  },
  {
    "text": "been sleeping for the last couple years you that might have passed you by and pay attention to you know the latest",
    "start": "2861800",
    "end": "2867560"
  },
  {
    "text": "trends what's going on there's constantly things coming out that are going to help you with creating these",
    "start": "2867560",
    "end": "2873470"
  },
  {
    "text": "service-oriented architectures you know we even at AWS we iterate very fast we",
    "start": "2873470",
    "end": "2880400"
  },
  {
    "text": "you'll notice that even this week we're gonna launch a number of different products and features last week alone we",
    "start": "2880400",
    "end": "2886250"
  },
  {
    "text": "launched over 20 different new services or features just last week alone and and",
    "start": "2886250",
    "end": "2891890"
  },
  {
    "text": "you know so monitored Jeff bars you know AWS blog or AWS though I think we have a",
    "start": "2891890",
    "end": "2896990"
  },
  {
    "text": "what's new blog you know see what's see what's out there because there's always things that are gonna help you out",
    "start": "2896990",
    "end": "2903190"
  },
  {
    "text": "for example ec2 container service I threw that on here you know that's a a",
    "start": "2903290",
    "end": "2908660"
  },
  {
    "text": "managed service that allows you to run your docker containers inside of AWS and has a",
    "start": "2908660",
    "end": "2915150"
  },
  {
    "text": "and offered the ability now to enhance your ability to scale your application by creating a virtualization layer now",
    "start": "2915150",
    "end": "2923010"
  },
  {
    "text": "at the application layer which is totally awesome",
    "start": "2923010",
    "end": "2927860"
  },
  {
    "text": "as I mentioned lots of things to read I",
    "start": "2930290",
    "end": "2935880"
  },
  {
    "text": "didn't put the blog on here I probably should have but you'll notice they all start with AWS than amazon.com lots of",
    "start": "2935880",
    "end": "2943020"
  },
  {
    "text": "places to start the free tier for those of you that haven't yet even dipped your foot in the pool I encourage you to use",
    "start": "2943020",
    "end": "2950400"
  },
  {
    "text": "the free tier and you can do a lot of things without actually incurring a single dime and the forums for support",
    "start": "2950400",
    "end": "2958830"
  },
  {
    "text": "and and information and of course talk to your account manager and your Solutions Architect and my last",
    "start": "2958830",
    "end": "2965850"
  },
  {
    "text": "opportunity to get my picture in there thank you very much",
    "start": "2965850",
    "end": "2973490"
  }
]