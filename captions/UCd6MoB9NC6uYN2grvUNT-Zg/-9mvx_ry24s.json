[
  {
    "start": "0",
    "end": "72000"
  },
  {
    "text": "all right let's do this if you all could",
    "start": "820",
    "end": "3490"
  },
  {
    "text": "please give a big welcome to Raghu",
    "start": "3490",
    "end": "5770"
  },
  {
    "text": "Chandrasekar on thank you I could have",
    "start": "5770",
    "end": "11800"
  },
  {
    "text": "some taller few and if you're going to",
    "start": "11800",
    "end": "13960"
  },
  {
    "text": "be patient with me for the next 15",
    "start": "13960",
    "end": "15370"
  },
  {
    "text": "minutes you're going to be rewarded with",
    "start": "15370",
    "end": "16990"
  },
  {
    "text": "a drawing so so please stay put for the",
    "start": "16990",
    "end": "19390"
  },
  {
    "text": "next 15 minutes thank you appreciate you",
    "start": "19390",
    "end": "21610"
  },
  {
    "text": "all coming and today I'm going to talk",
    "start": "21610",
    "end": "24340"
  },
  {
    "text": "about some of the use cases that we have",
    "start": "24340",
    "end": "26260"
  },
  {
    "text": "implemented with lambda over the years",
    "start": "26260",
    "end": "27960"
  },
  {
    "text": "so how many of you have implemented",
    "start": "27960",
    "end": "30100"
  },
  {
    "text": "lambda into an enterprise already or in",
    "start": "30100",
    "end": "32020"
  },
  {
    "text": "your product take very good thank you",
    "start": "32020",
    "end": "34360"
  },
  {
    "text": "thank you it was Collison has been",
    "start": "34360",
    "end": "37510"
  },
  {
    "text": "working with alw since the beta phase of",
    "start": "37510",
    "end": "39600"
  },
  {
    "text": "lamda and as you all know I mean lamda",
    "start": "39600",
    "end": "43390"
  },
  {
    "text": "is based from serverless computing",
    "start": "43390",
    "end": "45310"
  },
  {
    "text": "paradigm and it it was it's a",
    "start": "45310",
    "end": "47620"
  },
  {
    "text": "developer's delight to use lambda and",
    "start": "47620",
    "end": "50430"
  },
  {
    "text": "since since the advent of service",
    "start": "50430",
    "end": "53320"
  },
  {
    "text": "computing some of the popular use cases",
    "start": "53320",
    "end": "56370"
  },
  {
    "text": "which which were waiting for something",
    "start": "56370",
    "end": "58329"
  },
  {
    "text": "like this I mean lend itself to lambda",
    "start": "58329",
    "end": "59829"
  },
  {
    "text": "so I'm going to talk about it a little",
    "start": "59829",
    "end": "61090"
  },
  {
    "text": "bit and",
    "start": "61090",
    "end": "63720"
  },
  {
    "start": "72000",
    "end": "142000"
  },
  {
    "text": "so what is the alias lambda so I know",
    "start": "73110",
    "end": "75610"
  },
  {
    "text": "some of you already know what it is but",
    "start": "75610",
    "end": "77770"
  },
  {
    "text": "just just wanted to make sure that I",
    "start": "77770",
    "end": "80460"
  },
  {
    "text": "that all of you understand what lambda",
    "start": "80460",
    "end": "82810"
  },
  {
    "text": "is so lambda like it said is based on",
    "start": "82810",
    "end": "85360"
  },
  {
    "text": "several as computing and five key things",
    "start": "85360",
    "end": "89020"
  },
  {
    "text": "one is it runs your code in response to",
    "start": "89020",
    "end": "91420"
  },
  {
    "text": "events events of aw services like s3 I'm",
    "start": "91420",
    "end": "95110"
  },
  {
    "text": "going to talk to talk about that in a",
    "start": "95110",
    "end": "96369"
  },
  {
    "text": "little bit 0 server administration so",
    "start": "96369",
    "end": "98890"
  },
  {
    "text": "you don't have to worry about",
    "start": "98890",
    "end": "100440"
  },
  {
    "text": "provisioning and maintaining your",
    "start": "100440",
    "end": "102340"
  },
  {
    "text": "service ok run your code bill your code",
    "start": "102340",
    "end": "105940"
  },
  {
    "text": "in Python or Java a dotnet c-sharp",
    "start": "105940",
    "end": "108369"
  },
  {
    "text": "upload it to your server you don't have",
    "start": "108369",
    "end": "110440"
  },
  {
    "text": "to worry about the server administration",
    "start": "110440",
    "end": "111700"
  },
  {
    "text": "provisioning built-in high availability",
    "start": "111700",
    "end": "114240"
  },
  {
    "text": "flexible scaling so you don't have to",
    "start": "114240",
    "end": "116710"
  },
  {
    "text": "design or deployment architecture for",
    "start": "116710",
    "end": "119350"
  },
  {
    "text": "high availability and scaling it is",
    "start": "119350",
    "end": "120700"
  },
  {
    "text": "built into lambda ok",
    "start": "120700",
    "end": "121929"
  },
  {
    "text": "so in response to throughput and memory",
    "start": "121929",
    "end": "123819"
  },
  {
    "text": "why it can scale and no idle capacity so",
    "start": "123819",
    "end": "126670"
  },
  {
    "text": "you're going to run your code the",
    "start": "126670",
    "end": "129009"
  },
  {
    "text": "servers are provision and it shut down",
    "start": "129009",
    "end": "130330"
  },
  {
    "text": "ok because lambda is made for short",
    "start": "130330",
    "end": "133739"
  },
  {
    "text": "running tasks ok this is lambda",
    "start": "133739",
    "end": "138360"
  },
  {
    "start": "142000",
    "end": "240000"
  },
  {
    "text": "so common enterprise use cases that were",
    "start": "143450",
    "end": "145550"
  },
  {
    "text": "implemented for a lot of customers I",
    "start": "145550",
    "end": "146960"
  },
  {
    "text": "know lambda has several different use",
    "start": "146960",
    "end": "149690"
  },
  {
    "text": "cases but these six use cases are very",
    "start": "149690",
    "end": "153800"
  },
  {
    "text": "popular with our customers the first use",
    "start": "153800",
    "end": "156830"
  },
  {
    "text": "case that we implemented about a couple",
    "start": "156830",
    "end": "159620"
  },
  {
    "text": "of years back was disaster recovery so",
    "start": "159620",
    "end": "162770"
  },
  {
    "text": "I'm going to talk about a little bit",
    "start": "162770",
    "end": "164120"
  },
  {
    "text": "cloud operations so once you maintaining",
    "start": "164120",
    "end": "167180"
  },
  {
    "text": "your cloud infrastructure like your",
    "start": "167180",
    "end": "169700"
  },
  {
    "text": "backup and restore operations any",
    "start": "169700",
    "end": "172070"
  },
  {
    "text": "changes to your infrastructure how do",
    "start": "172070",
    "end": "174350"
  },
  {
    "text": "you recognize that lambda is lambda",
    "start": "174350",
    "end": "176660"
  },
  {
    "text": "lambda is used for that cognizant runs",
    "start": "176660",
    "end": "179410"
  },
  {
    "text": "thousands of servers iaw service for our",
    "start": "179410",
    "end": "182360"
  },
  {
    "text": "customers we we administer we administer",
    "start": "182360",
    "end": "186380"
  },
  {
    "text": "those servers and these servers are",
    "start": "186380",
    "end": "189380"
  },
  {
    "text": "integrated with a variety ISM tool which",
    "start": "189380",
    "end": "191120"
  },
  {
    "text": "is just ServiceNow and we have a",
    "start": "191120",
    "end": "193310"
  },
  {
    "text": "monitoring and management platform and",
    "start": "193310",
    "end": "194900"
  },
  {
    "text": "we used lambda to detect any changes to",
    "start": "194900",
    "end": "197810"
  },
  {
    "text": "the infrastructure so I'm going to be",
    "start": "197810",
    "end": "198950"
  },
  {
    "text": "talking about that data like classic use",
    "start": "198950",
    "end": "201140"
  },
  {
    "text": "can use case for lambda how many how",
    "start": "201140",
    "end": "203780"
  },
  {
    "text": "many of you have used lambda for Tara",
    "start": "203780",
    "end": "205340"
  },
  {
    "text": "lakes anybody thanks okay see a CD okay",
    "start": "205340",
    "end": "210829"
  },
  {
    "text": "although AWS has a lot of native tools",
    "start": "210829",
    "end": "213620"
  },
  {
    "text": "and you have tools like Jenkins others",
    "start": "213620",
    "end": "215360"
  },
  {
    "text": "but lambda can be used for your",
    "start": "215360",
    "end": "217160"
  },
  {
    "text": "continuous integration deployment I see",
    "start": "217160",
    "end": "218900"
  },
  {
    "text": "that you have used lambda for CAC as",
    "start": "218900",
    "end": "220400"
  },
  {
    "text": "well okay",
    "start": "220400",
    "end": "221110"
  },
  {
    "text": "real-time data processing anybody has",
    "start": "221110",
    "end": "223790"
  },
  {
    "text": "used lambda for that all right right and",
    "start": "223790",
    "end": "227049"
  },
  {
    "text": "microservices again classic use case so",
    "start": "227049",
    "end": "229910"
  },
  {
    "text": "we'll spend some time on these things",
    "start": "229910",
    "end": "230989"
  },
  {
    "text": "and we can make it interactive I mean if",
    "start": "230989",
    "end": "233720"
  },
  {
    "text": "you have any questions or if want to",
    "start": "233720",
    "end": "235220"
  },
  {
    "text": "share with experience we can do that",
    "start": "235220",
    "end": "239110"
  },
  {
    "text": "this has a recovery there are different",
    "start": "240990",
    "end": "244020"
  },
  {
    "text": "different disaster recovery patterns",
    "start": "244020",
    "end": "246030"
  },
  {
    "text": "like pilot laid by pilot light and other",
    "start": "246030",
    "end": "250920"
  },
  {
    "text": "areas patterns and in any distance",
    "start": "250920",
    "end": "253800"
  },
  {
    "text": "disaster recovery scenario you have your",
    "start": "253800",
    "end": "255480"
  },
  {
    "text": "primary site and a secondary site any",
    "start": "255480",
    "end": "257820"
  },
  {
    "text": "changes to your primary site say for",
    "start": "257820",
    "end": "260310"
  },
  {
    "text": "example in apply pilot light scenario",
    "start": "260310",
    "end": "262079"
  },
  {
    "text": "you're going to have a very very minimal",
    "start": "262080",
    "end": "264930"
  },
  {
    "text": "implementation of your primary or your",
    "start": "264930",
    "end": "266640"
  },
  {
    "text": "primary data center architecture and any",
    "start": "266640",
    "end": "270240"
  },
  {
    "text": "changes to your primary data center",
    "start": "270240",
    "end": "272540"
  },
  {
    "text": "configuration right for example if there",
    "start": "272540",
    "end": "274620"
  },
  {
    "text": "is change in code if there is a change",
    "start": "274620",
    "end": "275970"
  },
  {
    "text": "in jar file or you want to do I there is",
    "start": "275970",
    "end": "279780"
  },
  {
    "text": "change in your database tables you want",
    "start": "279780",
    "end": "281460"
  },
  {
    "text": "to do a backup and restore",
    "start": "281460",
    "end": "282720"
  },
  {
    "text": "it's event-driven okay for example I",
    "start": "282720",
    "end": "285510"
  },
  {
    "text": "mean just this is one sample",
    "start": "285510",
    "end": "286920"
  },
  {
    "text": "architecture okay for example you have",
    "start": "286920",
    "end": "289080"
  },
  {
    "text": "your ec2 instances and you configure",
    "start": "289080",
    "end": "291630"
  },
  {
    "text": "with cloud watch okay and then you look",
    "start": "291630",
    "end": "294450"
  },
  {
    "text": "for a you can take a regiment in cloud",
    "start": "294450",
    "end": "298080"
  },
  {
    "text": "watch for looking for a pattern in your",
    "start": "298080",
    "end": "300180"
  },
  {
    "text": "log files for example a new jar file is",
    "start": "300180",
    "end": "302400"
  },
  {
    "text": "available or any code has changed you",
    "start": "302400",
    "end": "305130"
  },
  {
    "text": "would you would persist to a log file",
    "start": "305130",
    "end": "306900"
  },
  {
    "text": "and then cloud watch would trigger an",
    "start": "306900",
    "end": "309120"
  },
  {
    "text": "event and lambda would listen to that",
    "start": "309120",
    "end": "311010"
  },
  {
    "text": "it's lambda like it said so you ain't",
    "start": "311010",
    "end": "312390"
  },
  {
    "text": "even trippin programming and and then",
    "start": "312390",
    "end": "315480"
  },
  {
    "text": "once new code is available on s3 again",
    "start": "315480",
    "end": "318570"
  },
  {
    "text": "I'm after I mean after it is built and",
    "start": "318570",
    "end": "320850"
  },
  {
    "text": "deployed it can be as C or artifactory",
    "start": "320850",
    "end": "323190"
  },
  {
    "text": "and what you would do is you would",
    "start": "323190",
    "end": "325950"
  },
  {
    "text": "persist that I mean you would save that",
    "start": "325950",
    "end": "327590"
  },
  {
    "text": "file after continuous continuous",
    "start": "327590",
    "end": "329670"
  },
  {
    "text": "integration and build onto your s3 an",
    "start": "329670",
    "end": "332400"
  },
  {
    "text": "event is fired and then you can copy",
    "start": "332400",
    "end": "335220"
  },
  {
    "text": "where you can write a lambda function to",
    "start": "335220",
    "end": "337440"
  },
  {
    "text": "copy that into a secondary and then you",
    "start": "337440",
    "end": "339690"
  },
  {
    "text": "can invoke your cloud formation scripts",
    "start": "339690",
    "end": "341720"
  },
  {
    "text": "to Bill the ami and deploy it on",
    "start": "341720",
    "end": "344910"
  },
  {
    "text": "secondary on your secondary data center",
    "start": "344910",
    "end": "346800"
  },
  {
    "text": "same with database as well so in a",
    "start": "346800",
    "end": "349320"
  },
  {
    "text": "nutshell lambda is used to listen to",
    "start": "349320",
    "end": "352440"
  },
  {
    "text": "events of changes in code here in this",
    "start": "352440",
    "end": "355110"
  },
  {
    "text": "case is s3 and any changes in a database",
    "start": "355110",
    "end": "357660"
  },
  {
    "text": "and both are synchronized with your",
    "start": "357660",
    "end": "359700"
  },
  {
    "text": "secondary data center the same is built",
    "start": "359700",
    "end": "363180"
  },
  {
    "text": "on response to events and deployed",
    "start": "363180",
    "end": "364500"
  },
  {
    "text": "through cloud formation so this is",
    "start": "364500",
    "end": "366480"
  },
  {
    "text": "something that very implemented with",
    "start": "366480",
    "end": "367470"
  },
  {
    "text": "many customers so I mean anybody can",
    "start": "367470",
    "end": "371460"
  },
  {
    "text": "relate to this I mean is this a similar",
    "start": "371460",
    "end": "372840"
  },
  {
    "text": "very similar",
    "start": "372840",
    "end": "374050"
  },
  {
    "text": "that you implemented okay sorry",
    "start": "374050",
    "end": "377879"
  },
  {
    "start": "380000",
    "end": "460000"
  },
  {
    "text": "next is Dailey Lake I know V I mean 90",
    "start": "380939",
    "end": "385449"
  },
  {
    "text": "justice presentation we talked about I",
    "start": "385449",
    "end": "387550"
  },
  {
    "text": "mean he talked about data leaks yes",
    "start": "387550",
    "end": "390909"
  },
  {
    "text": "three is a very popular daedalic and",
    "start": "390909",
    "end": "394419"
  },
  {
    "text": "most of our many of our customers are",
    "start": "394419",
    "end": "396719"
  },
  {
    "text": "adopting a double use just for the data",
    "start": "396719",
    "end": "398800"
  },
  {
    "text": "Lake situation and when you copy your",
    "start": "398800",
    "end": "403869"
  },
  {
    "text": "files structured unstructured data to s3",
    "start": "403869",
    "end": "407099"
  },
  {
    "text": "from your on from data sources so what",
    "start": "407099",
    "end": "410679"
  },
  {
    "text": "we typically do is we set up a lambda",
    "start": "410679",
    "end": "412330"
  },
  {
    "text": "function depending upon the file size",
    "start": "412330",
    "end": "414159"
  },
  {
    "text": "and then either using data pipeline or",
    "start": "414159",
    "end": "418529"
  },
  {
    "text": "s3 upload we take it to a staging layer",
    "start": "418529",
    "end": "421659"
  },
  {
    "text": "and then again again we trigger a lambda",
    "start": "421659",
    "end": "423969"
  },
  {
    "text": "function to to bring up EMR clusters to",
    "start": "423969",
    "end": "427179"
  },
  {
    "text": "process the data to to do the",
    "start": "427179",
    "end": "430709"
  },
  {
    "text": "normalization and ETL of that and then",
    "start": "430709",
    "end": "433809"
  },
  {
    "text": "before we persist that into a dynamo DB",
    "start": "433809",
    "end": "435729"
  },
  {
    "text": "or Aurora so very classic use case two",
    "start": "435729",
    "end": "439869"
  },
  {
    "text": "lambda functions in a data lag scenario",
    "start": "439869",
    "end": "441429"
  },
  {
    "text": "detecting the source file that has just",
    "start": "441429",
    "end": "443439"
  },
  {
    "text": "come in and also in working your EMR",
    "start": "443439",
    "end": "445689"
  },
  {
    "text": "clusters or any other ETL job that that",
    "start": "445689",
    "end": "447969"
  },
  {
    "text": "we would want to invoke to process the",
    "start": "447969",
    "end": "450429"
  },
  {
    "text": "data so can you guys relate to that and",
    "start": "450429",
    "end": "453669"
  },
  {
    "text": "I mean I know you you worked on that",
    "start": "453669",
    "end": "455169"
  },
  {
    "text": "okay thanks",
    "start": "455169",
    "end": "457649"
  },
  {
    "start": "460000",
    "end": "609000"
  },
  {
    "text": "the third sample architectural pattern",
    "start": "461539",
    "end": "463490"
  },
  {
    "text": "is microservices microservices as we",
    "start": "463490",
    "end": "467569"
  },
  {
    "text": "depreciate it's a very good",
    "start": "467569",
    "end": "468770"
  },
  {
    "text": "architectural pattern where you would",
    "start": "468770",
    "end": "470900"
  },
  {
    "text": "build a decoupled software architecture",
    "start": "470900",
    "end": "472969"
  },
  {
    "text": "and so I mean some of the services can",
    "start": "472969",
    "end": "477559"
  },
  {
    "text": "be short trading services long running",
    "start": "477559",
    "end": "479599"
  },
  {
    "text": "services you can deploy it onto a",
    "start": "479599",
    "end": "481339"
  },
  {
    "text": "container on easiest but for the short",
    "start": "481339",
    "end": "483439"
  },
  {
    "text": "training services you can use lambda",
    "start": "483439",
    "end": "485169"
  },
  {
    "text": "through an API gateway so the endpoints",
    "start": "485169",
    "end": "488830"
  },
  {
    "text": "there is the REST API endpoints can be",
    "start": "488830",
    "end": "492289"
  },
  {
    "text": "managed to EP a gateway and then API",
    "start": "492289",
    "end": "494779"
  },
  {
    "text": "gateway can invoke those services on",
    "start": "494779",
    "end": "497120"
  },
  {
    "text": "lambda so this we have implemented this",
    "start": "497120",
    "end": "499400"
  },
  {
    "text": "in many of our customers where we would",
    "start": "499400",
    "end": "501589"
  },
  {
    "text": "not do all of the services in a",
    "start": "501589",
    "end": "503479"
  },
  {
    "text": "container base scenario short training",
    "start": "503479",
    "end": "505129"
  },
  {
    "text": "services we do it on lambda so any of",
    "start": "505129",
    "end": "507860"
  },
  {
    "text": "you have implemented micro services",
    "start": "507860",
    "end": "509180"
  },
  {
    "text": "using lambda n AP gateway all right",
    "start": "509180",
    "end": "510889"
  },
  {
    "text": "thanks so these are the three popular",
    "start": "510889",
    "end": "514789"
  },
  {
    "text": "use cases I'm going to talk about cloud",
    "start": "514789",
    "end": "516260"
  },
  {
    "text": "operations in a bit like I mentioned we",
    "start": "516260",
    "end": "518000"
  },
  {
    "text": "run a large fleet of a double service",
    "start": "518000",
    "end": "520190"
  },
  {
    "text": "for our customers typically what happens",
    "start": "520190",
    "end": "521839"
  },
  {
    "text": "is once we onboard a customer on to our",
    "start": "521839",
    "end": "524570"
  },
  {
    "text": "platform",
    "start": "524570",
    "end": "525230"
  },
  {
    "text": "say for example customer EA has 500 easy",
    "start": "525230",
    "end": "528680"
  },
  {
    "text": "to compute instances and we have",
    "start": "528680",
    "end": "530300"
  },
  {
    "text": "on-boarded to cognizant monitoring",
    "start": "530300",
    "end": "531829"
  },
  {
    "text": "platform and also the infrastructure",
    "start": "531829",
    "end": "535069"
  },
  {
    "text": "information is stored in service now and",
    "start": "535069",
    "end": "537190"
  },
  {
    "text": "the when the users add new servers ok we",
    "start": "537190",
    "end": "540800"
  },
  {
    "text": "trigger a lambda event and then any",
    "start": "540800",
    "end": "542690"
  },
  {
    "text": "changes to the infrastructure is",
    "start": "542690",
    "end": "545029"
  },
  {
    "text": "persisted in our configuration",
    "start": "545029",
    "end": "546230"
  },
  {
    "text": "management database so you keep your",
    "start": "546230",
    "end": "547850"
  },
  {
    "text": "configuration management database that",
    "start": "547850",
    "end": "549949"
  },
  {
    "text": "is outside of your AWS environment in",
    "start": "549949",
    "end": "552079"
  },
  {
    "text": "sync with with you with your",
    "start": "552079",
    "end": "555019"
  },
  {
    "text": "infrastructure",
    "start": "555019",
    "end": "555740"
  },
  {
    "text": "similarly backup and restore operations",
    "start": "555740",
    "end": "557839"
  },
  {
    "text": "any changes in DNA base we do a restore",
    "start": "557839",
    "end": "560300"
  },
  {
    "text": "backup we do a backup through lambda so",
    "start": "560300",
    "end": "563589"
  },
  {
    "text": "see lambda is set is at the heart of our",
    "start": "563589",
    "end": "566630"
  },
  {
    "text": "cloud operations so these are the these",
    "start": "566630",
    "end": "570079"
  },
  {
    "text": "are the popular use cases that we have",
    "start": "570079",
    "end": "571430"
  },
  {
    "text": "done and we can make it interactive so",
    "start": "571430",
    "end": "575899"
  },
  {
    "text": "if you have any questions on lambda you",
    "start": "575899",
    "end": "578449"
  },
  {
    "text": "say Sam and I are more than happy to use",
    "start": "578449",
    "end": "581860"
  },
  {
    "text": "so I have any of you used any other are",
    "start": "582279",
    "end": "586610"
  },
  {
    "text": "there any of the use cases that you have",
    "start": "586610",
    "end": "588560"
  },
  {
    "text": "used lambda for apart from this",
    "start": "588560",
    "end": "590709"
  },
  {
    "text": "enterprise",
    "start": "590709",
    "end": "593140"
  },
  {
    "text": "you can build you can build static",
    "start": "593140",
    "end": "596240"
  },
  {
    "text": "websites using lambda and of course I'm",
    "start": "596240",
    "end": "599060"
  },
  {
    "text": "a IOT classic use case for lambda but",
    "start": "599060",
    "end": "602510"
  },
  {
    "text": "these are the popular use cases that we",
    "start": "602510",
    "end": "604100"
  },
  {
    "text": "cover that we continue to push to our",
    "start": "604100",
    "end": "605630"
  },
  {
    "text": "customers",
    "start": "605630",
    "end": "608080"
  }
]