[
  {
    "start": "0",
    "end": "338000"
  },
  {
    "text": "hello everyone and welcome to today's webinar delivering excellence with micro services on AWS my name is karma Puccio",
    "start": "30",
    "end": "7710"
  },
  {
    "text": "and i'm joined here with mike deck of AWS and i'll be your speaker and moderator for today's webinar so we're",
    "start": "7710",
    "end": "13530"
  },
  {
    "text": "just going to cover the agenda quickly and we're going to get right into it brief introduction on myself again my name is Carmen Putin Puccio and",
    "start": "13530",
    "end": "19560"
  },
  {
    "text": "principal solutions architect here within the AWS partner team focusing on containers and working with our",
    "start": "19560",
    "end": "26189"
  },
  {
    "text": "container partners to help move workloads over to AWS and optimize that experience and I'm also joined by Mike",
    "start": "26189",
    "end": "32640"
  },
  {
    "text": "deck who is also a principal solutions architect who works in this urban space in a very similar capacity helping our",
    "start": "32640",
    "end": "38070"
  },
  {
    "text": "customers you know build and adopt serverless technologies what we're going to talk about today is micro services",
    "start": "38070",
    "end": "44010"
  },
  {
    "text": "and we're going to go down the wormhole of essentially explaining what micro services are the comparison between your",
    "start": "44010",
    "end": "49469"
  },
  {
    "text": "traditional monolithic workloads and how they compare to micro services today the benefits around them and then we're",
    "start": "49469",
    "end": "55379"
  },
  {
    "text": "going to get into the best practices on how you're going to adopt those as part of your organization and how you can",
    "start": "55379",
    "end": "60629"
  },
  {
    "text": "essentially pick and choose some of the AWS components and services to help build that that next generation development platform I'm at the end then",
    "start": "60629",
    "end": "67890"
  },
  {
    "text": "we're going to get into the QA like I said earlier so if you have any questions feel free to just type those right into the panel and we'll get to",
    "start": "67890",
    "end": "73439"
  },
  {
    "text": "them at the end so so let's get started so so with that said we'll get into this",
    "start": "73439",
    "end": "80009"
  },
  {
    "text": "quick view of essentially what a micro Services is right so by definition they're they're an architectural and",
    "start": "80009",
    "end": "85890"
  },
  {
    "text": "organizational approach to software development where software is composed of all of these small independent",
    "start": "85890",
    "end": "92250"
  },
  {
    "text": "services that communicate over essentially a well-defined API right and we're going to talk about",
    "start": "92250",
    "end": "97890"
  },
  {
    "text": "the benefits and techniques around building micro services as part of this webinar but at the highest level you",
    "start": "97890",
    "end": "103890"
  },
  {
    "text": "have to remember that micro services are considered to be autonomous right so meaning each component and each service",
    "start": "103890",
    "end": "110759"
  },
  {
    "text": "and a micro services architecture should be deployed develop operated scaled",
    "start": "110759",
    "end": "116280"
  },
  {
    "text": "without essentially affecting all the surrounding and other functioning services that are part of the micro",
    "start": "116280",
    "end": "121740"
  },
  {
    "text": "services mesh so services shouldn't share any code or any implementation with those other services and all the",
    "start": "121740",
    "end": "128220"
  },
  {
    "text": "communication between the micro services themselves should be done over these well-defined API",
    "start": "128220",
    "end": "133920"
  },
  {
    "text": "and they should also be considered specialized meaning each service is designed for a specific set of",
    "start": "133920",
    "end": "139980"
  },
  {
    "text": "capabilities and focuses on solving a particular problem so if development if",
    "start": "139980",
    "end": "145680"
  },
  {
    "text": "your development teams contribute more code to a service over time and this service becomes more and more complex",
    "start": "145680",
    "end": "151260"
  },
  {
    "text": "you can think of it is that you could essentially break that out into smaller services or smaller micro services it's",
    "start": "151260",
    "end": "157620"
  },
  {
    "text": "important to think about when you're building these micro services that not only that there are these independent",
    "start": "157620",
    "end": "162810"
  },
  {
    "text": "services but those same services are also owned by these small self-contained teams and we call those pizza teams we",
    "start": "162810",
    "end": "170490"
  },
  {
    "text": "spoke extensively in our previous webinar creating a modern development culture with AWS",
    "start": "170490",
    "end": "176370"
  },
  {
    "text": "around the concept of pizza teams in your organization so if you want to learn more go check those out they'll be on demand very very shortly we just did",
    "start": "176370",
    "end": "182880"
  },
  {
    "text": "them last week so so with that said I just want to talk about the new normal",
    "start": "182880",
    "end": "188160"
  },
  {
    "text": "right when we talk about micro services we talk about modern application development we're talking about this new",
    "start": "188160",
    "end": "194430"
  },
  {
    "text": "normal meaning more and more companies are increasingly global and the products are becoming digital cloud mobile big data",
    "start": "194430",
    "end": "201840"
  },
  {
    "text": "social technologies they've impacted application development but these digital disruptions are forcing change",
    "start": "201840",
    "end": "207870"
  },
  {
    "text": "at an even faster rate so this new normal means that application leaders must essentially you know insert a",
    "start": "207870",
    "end": "213930"
  },
  {
    "text": "digital DNA into their culture their processes the technologies to transform themselves into these top performing",
    "start": "213930",
    "end": "220650"
  },
  {
    "text": "organizations so they need rapid innovation and micro services architectures essentially make",
    "start": "220650",
    "end": "226410"
  },
  {
    "text": "applications easier to scale faster to develop enabling this innovation and accelerating time the market for your",
    "start": "226410",
    "end": "232830"
  },
  {
    "text": "new for your new features for your customers so we covered this slide in the last",
    "start": "232830",
    "end": "238110"
  },
  {
    "text": "webinar as well and this is our innovation flywheel right so essentially what we're saying is experimentation",
    "start": "238110",
    "end": "244140"
  },
  {
    "text": "leads to innovation it's ok to fail because you can quickly learn from your mistakes but this time around I want to",
    "start": "244140",
    "end": "250350"
  },
  {
    "text": "talk about it in the context of the micro services so traditionally organizations architected you know their",
    "start": "250350",
    "end": "256739"
  },
  {
    "text": "IT environments into these you know large monolithic entries right they built these monolithic applications",
    "start": "256739",
    "end": "262200"
  },
  {
    "text": "inside their data centers and the idea was essentially to make them too big to fail but the problem",
    "start": "262200",
    "end": "267660"
  },
  {
    "text": "is preventing failure is is very very tough right it's almost impossible and if you think about it you know moreover",
    "start": "267660",
    "end": "274020"
  },
  {
    "text": "like the the way that they built these entities they're not really conductive to agility they're not necessarily cost",
    "start": "274020",
    "end": "280350"
  },
  {
    "text": "effective and as a result organizations are starting to look in a different direction and they are leveraging micro",
    "start": "280350",
    "end": "286050"
  },
  {
    "text": "services so the fact that micro services are modular means that if you do them right you gain speed and flexibility",
    "start": "286050",
    "end": "292170"
  },
  {
    "text": "helping solve many of the problems that you created with those late there's legacy monolithic apps so again we're",
    "start": "292170",
    "end": "298020"
  },
  {
    "text": "still talking about innovation and experimentation like the less webinar but the point I want to stress here is",
    "start": "298020",
    "end": "303840"
  },
  {
    "text": "it's easier to make a lot of small changes rather than that one big massive one that came with monolithic",
    "start": "303840",
    "end": "310170"
  },
  {
    "text": "architecture so for micro services you can iterate on each one independently to deliver essentially whatever pace you",
    "start": "310170",
    "end": "317100"
  },
  {
    "text": "choose so you know the thing to remember here is well is failed experiments or are less expensive right you want to",
    "start": "317100",
    "end": "323670"
  },
  {
    "text": "make it as easy as possible for your development teams to essentially take part of this innovation flywheel and and",
    "start": "323670",
    "end": "329340"
  },
  {
    "text": "learn from their mistakes feed into ideas and experiment and you know if you if you do fail that's okay because you",
    "start": "329340",
    "end": "334560"
  },
  {
    "text": "can always try again alright so with that said one of the things that you",
    "start": "334560",
    "end": "340200"
  },
  {
    "start": "338000",
    "end": "338000"
  },
  {
    "text": "know people have a question about I'm gonna pass this over to Mike is is like where should I start which services am I",
    "start": "340200",
    "end": "346020"
  },
  {
    "text": "responsible for and they have questions around the responsibility models so I'm gonna let Mike go into detail around this yeah great thanks Carmen so so yeah",
    "start": "346020",
    "end": "353640"
  },
  {
    "text": "so I think you know speaking within the context of this idea that hey what our real goal here is in adopting micro",
    "start": "353640",
    "end": "360570"
  },
  {
    "text": "services is fundamentally we're trying to figure out how we can move faster and so in order to do that that the two big",
    "start": "360570",
    "end": "367500"
  },
  {
    "text": "key areas to focus on are how do we decrease sort of the activation energy",
    "start": "367500",
    "end": "372810"
  },
  {
    "text": "necessary in order to run an experiment so how do we make it easier to build things and get things up and running",
    "start": "372810",
    "end": "378720"
  },
  {
    "text": "quickly and then also how do we sort of reduce the cost of failure reduce the",
    "start": "378720",
    "end": "383910"
  },
  {
    "text": "cost that it takes to shift and pivot and change direction based on customer",
    "start": "383910",
    "end": "390330"
  },
  {
    "text": "feedback that we get and so the way that we oftentimes think about this in the way that we've worked with customers to",
    "start": "390330",
    "end": "395820"
  },
  {
    "text": "think about what underlying services make sense for them to adopt when they move into this new direction is to look at it",
    "start": "395820",
    "end": "403340"
  },
  {
    "text": "from the perspective of who's responsible for the operational aspects of the infrastructure that you're",
    "start": "403340",
    "end": "409909"
  },
  {
    "text": "running so when you look at this chart you know think about it as a continuum",
    "start": "409909",
    "end": "415340"
  },
  {
    "text": "so at every level every service that AWS offers there's some amount of",
    "start": "415340",
    "end": "421719"
  },
  {
    "text": "operational overhead and security and reliability that's that is incumbent",
    "start": "421719",
    "end": "427729"
  },
  {
    "text": "upon AWS as the cloud provider and then there's another portion that's incumbent upon you as the customer so we refer to",
    "start": "427729",
    "end": "434240"
  },
  {
    "text": "this is the shared responsibility model and and the way that you can think about our services is that there's this",
    "start": "434240",
    "end": "441080"
  },
  {
    "text": "continuum that you can slide down or up depending on how much total control and",
    "start": "441080",
    "end": "446360"
  },
  {
    "text": "responsibility you want to take on for yourself but basically the idea here is",
    "start": "446360",
    "end": "451789"
  },
  {
    "text": "that as you move to the right of this chart as you offload more and more of",
    "start": "451789",
    "end": "457129"
  },
  {
    "text": "that responsibility onto the cloud provider AWS in this case the less that your teams are having to deal with",
    "start": "457129",
    "end": "463819"
  },
  {
    "text": "things like patching operating systems or or managing managing and runtimes and",
    "start": "463819",
    "end": "469879"
  },
  {
    "text": "in dealing with kind of the day-to-day undifferentiated heavy lifting and the more that you can focus on building",
    "start": "469879",
    "end": "476690"
  },
  {
    "text": "differentiated business value and that's really kind of the underlying key of building micro services is getting as",
    "start": "476690",
    "end": "483500"
  },
  {
    "text": "much time and energy focused on building those building what's what's",
    "start": "483500",
    "end": "488839"
  },
  {
    "text": "differentiating about your business instead of managing all of the of the",
    "start": "488839",
    "end": "494349"
  },
  {
    "text": "underlying infrastructure is really kind of key so taking that - it's sort of",
    "start": "494349",
    "end": "499580"
  },
  {
    "text": "logical next step that is where we start to talk about the service services that",
    "start": "499580",
    "end": "507439"
  },
  {
    "text": "that we have within AWS so when we take a look at",
    "start": "507439",
    "end": "514110"
  },
  {
    "text": "this set of services these are the ones that kind of fall at the far right hand",
    "start": "514110",
    "end": "520560"
  },
  {
    "text": "side of that scale and what's important to note here is that there's a wide",
    "start": "520560",
    "end": "525720"
  },
  {
    "text": "variety of services across a number of different domains that you need to be thinking about when you're designing a",
    "start": "525720",
    "end": "533100"
  },
  {
    "text": "micro services architecture so you know oftentimes customers think about you",
    "start": "533100",
    "end": "538350"
  },
  {
    "text": "know just deploying everything that they have on top of VMs running is inside of ec2 and managing all of the different",
    "start": "538350",
    "end": "544920"
  },
  {
    "text": "components of their application but what we see is the customers that are most successful and who are able to move most",
    "start": "544920",
    "end": "550710"
  },
  {
    "text": "quickly are leveraging a wide variety of services across a number of different domains so in addition to compute",
    "start": "550710",
    "end": "557490"
  },
  {
    "text": "services where you're running your own code also using things like managed databases or managed orchestration",
    "start": "557490",
    "end": "563640"
  },
  {
    "text": "layers or API services etc in order to offload more and more of those kind of",
    "start": "563640",
    "end": "569490"
  },
  {
    "text": "standard undifferentiated tasks off of your plate and put them onto ours is",
    "start": "569490",
    "end": "575580"
  },
  {
    "text": "really a helpful strategy to adopt in order to be successful as you're",
    "start": "575580",
    "end": "582300"
  },
  {
    "text": "building and architecting these types of micro services designs so if we if we go",
    "start": "582300",
    "end": "589830"
  },
  {
    "text": "ahead and take a look at just that compute layer to start with I think this is one of the areas where customers are",
    "start": "589830",
    "end": "596580"
  },
  {
    "text": "particularly interested to get some level of guidance around how they get",
    "start": "596580",
    "end": "602790"
  },
  {
    "text": "started when using micro services so",
    "start": "602790",
    "end": "608840"
  },
  {
    "text": "there are a couple of different options and really looking at these services as",
    "start": "608840",
    "end": "615390"
  },
  {
    "text": "the place where you're going to run your code when when you look at it from a",
    "start": "615390",
    "end": "623370"
  },
  {
    "text": "service perspective you can think about it in terms of either a function oriented architecture so AWS lamda",
    "start": "623370",
    "end": "630660"
  },
  {
    "text": "provides a functions as a service you do nothing more than provide your code and",
    "start": "630660",
    "end": "636180"
  },
  {
    "text": "some configuration about the events that you want to trigger that code and then the the platform itself is then",
    "start": "636180",
    "end": "642930"
  },
  {
    "text": "responsible for managing everything else beyond that there are a few limitations on this in terms of",
    "start": "642930",
    "end": "648160"
  },
  {
    "text": "the amount of time that you can spend executing each function can't be longer than 15 minutes and there there are",
    "start": "648160",
    "end": "657550"
  },
  {
    "text": "certain other cases where for instance if you've got existing legacy code that",
    "start": "657550",
    "end": "662560"
  },
  {
    "text": "was written to to be run on top of a VM or a server or expects some other some",
    "start": "662560",
    "end": "672279"
  },
  {
    "text": "underlying aspects of the hardware to be present you may not be able to use a functional model and so in those cases",
    "start": "672279",
    "end": "679689"
  },
  {
    "text": "you can you can use a full-fledged container running on top of any waves Fargate so this basically allows you to",
    "start": "679689",
    "end": "686410"
  },
  {
    "text": "treat containers as first-class citizens within the AWS service ecosystem and",
    "start": "686410",
    "end": "694060"
  },
  {
    "text": "manages all of the underlying infrastructure for you so you no longer have to think about the underlying virtualization layer and you're able to",
    "start": "694060",
    "end": "700720"
  },
  {
    "text": "run containers run your micro services that are based on those technologies without having to deal with any of those",
    "start": "700720",
    "end": "707620"
  },
  {
    "text": "additional operational concerns now in some cases this may may not be a good",
    "start": "707620",
    "end": "713079"
  },
  {
    "text": "fit for the services or infrastructure that you're running there there may be cases when you actually need more",
    "start": "713079",
    "end": "720100"
  },
  {
    "text": "control you want to move further left on that that operational model that we",
    "start": "720100",
    "end": "725410"
  },
  {
    "text": "talked about because you need finer grained control or have other kind of business requirements that are required",
    "start": "725410",
    "end": "731680"
  },
  {
    "text": "there so for that we've got a number of other services that I'll let come and discuss for for running more traditional",
    "start": "731680",
    "end": "737800"
  },
  {
    "start": "737000",
    "end": "737000"
  },
  {
    "text": "kind of containerized yeah yeah awesome so so essentially if you think about it",
    "start": "737800",
    "end": "742959"
  },
  {
    "text": "this way we have we have customers running containers on AWS for that fitting multiple use cases right it's",
    "start": "742959",
    "end": "748720"
  },
  {
    "text": "not just micro services we'll probably talk about this a little bit more as the webinar progresses but you know I came",
    "start": "748720",
    "end": "755829"
  },
  {
    "text": "from the mass migration team one of the things that we saw was essentially customers starting to pick up their",
    "start": "755829",
    "end": "761470"
  },
  {
    "text": "legacy applications and moved into containers to essentially achieve a level of agility that they've never seen",
    "start": "761470",
    "end": "768250"
  },
  {
    "text": "before inside of their own data centers right so it's not just like hey I want",
    "start": "768250",
    "end": "773410"
  },
  {
    "text": "to build micro services using containers there's there's many many more use cases and I think another thing that drill",
    "start": "773410",
    "end": "778839"
  },
  {
    "text": "drill home here and a little bit came out in the prior Lyde is when we see customers taking",
    "start": "778839",
    "end": "784420"
  },
  {
    "text": "advantage of Micra services it's not containers versus server lists it's usually a mix right as customers evolve",
    "start": "784420",
    "end": "790329"
  },
  {
    "text": "and they understand the various different use cases around their application how they can meet the needs",
    "start": "790329",
    "end": "796509"
  },
  {
    "text": "of their business they'll leverage one or the other or usually it's a combination of both right um but when it",
    "start": "796509",
    "end": "802420"
  },
  {
    "text": "comes to building containers on top of AWS we have we have a couple of different services and I just wanted to highlight them really quickly you know",
    "start": "802420",
    "end": "809139"
  },
  {
    "text": "everyone's essentially familiar hopefully familiar with the elastic container service or ECS and it was",
    "start": "809139",
    "end": "814389"
  },
  {
    "text": "announced I think as far back now is 2014 but but what ECS is is it allows",
    "start": "814389",
    "end": "820240"
  },
  {
    "text": "customers to deploy manage and scale their container workloads without having",
    "start": "820240",
    "end": "825939"
  },
  {
    "text": "to install or operate the container management software it's built with deep",
    "start": "825939",
    "end": "831220"
  },
  {
    "text": "integrations around the rest of the AWS platform so including like things like services like load balancing or security",
    "start": "831220",
    "end": "837910"
  },
  {
    "text": "permissions management maybe it's networking or storage monitoring regardless it's built for",
    "start": "837910",
    "end": "843370"
  },
  {
    "text": "high availability and low latency and high throughput and and this allows ECS",
    "start": "843370",
    "end": "848740"
  },
  {
    "text": "to be one of the fastest growing startups and largest enterprises in the world to run tens of millions of",
    "start": "848740",
    "end": "854709"
  },
  {
    "text": "applications worldwide right and then you know it was I think it was in like 2015 we released the the ECR or the",
    "start": "854709",
    "end": "863589"
  },
  {
    "text": "docker image registry called the elastic container registry and our goal here with the ECR was to enable developers to",
    "start": "863589",
    "end": "869829"
  },
  {
    "text": "use the same docker push/pull api's to store their images and we see this product being highly adopted by our",
    "start": "869829",
    "end": "876459"
  },
  {
    "text": "customers both running containers on AWS and really across any environment what we see is the ECR powers them to run an",
    "start": "876459",
    "end": "883569"
  },
  {
    "text": "incredible number of workloads across cloud or on Prem and then I think was in",
    "start": "883569",
    "end": "888850"
  },
  {
    "text": "2017 we announced Fargate which is a compute engine for ECS that allows you to run containers without having to",
    "start": "888850",
    "end": "895509"
  },
  {
    "text": "manage the servers or clusters so if you think about the old VCS that I was model that I was talking about before you're responsible for running your nodes right",
    "start": "895509",
    "end": "902649"
  },
  {
    "text": "well the backplane is managed by us in this case with Fargate you no longer have to provision configure or scale",
    "start": "902649",
    "end": "909459"
  },
  {
    "text": "those clusters to run your containers this this removes that need to choose server types when",
    "start": "909459",
    "end": "915520"
  },
  {
    "text": "you're gonna scale your clusters or thinking about things like cluster packing right Fargate takes that you",
    "start": "915520",
    "end": "921400"
  },
  {
    "text": "know and and removes that need for you to think about that that level of operational responsibilities and you",
    "start": "921400",
    "end": "927880"
  },
  {
    "text": "focus on developing and building your applications instead of managing all of that infrastructure and then finally in",
    "start": "927880",
    "end": "934450"
  },
  {
    "text": "2017 we we announced the Amazon Elastic container service for kubernetes and hopefully you know you've heard",
    "start": "934450",
    "end": "941470"
  },
  {
    "text": "about kubernetes is wildly popular but it's essentially it's it's a managed service that allows you to run",
    "start": "941470",
    "end": "946600"
  },
  {
    "text": "kubernetes on AWS without having to install or operate your own kubernetes clusters and you know what we",
    "start": "946600",
    "end": "953170"
  },
  {
    "text": "consistently heard from customers is that while they like to run kubernetes because it is highly available scalable",
    "start": "953170",
    "end": "959860"
  },
  {
    "text": "and cost-effective that the hard part is the management and the scaling and maintaining kubernetes cluster notes",
    "start": "959860",
    "end": "966160"
  },
  {
    "text": "right it's a tremendous hassle so customers asked us if we couldn't do a form and eks was just that right it's",
    "start": "966160",
    "end": "973000"
  },
  {
    "text": "built from on unmodified upstream kubernetes and it allows you to use existing features plugins tooling that",
    "start": "973000",
    "end": "979540"
  },
  {
    "text": "you may have built for your own clusters and applications running inside of existing kubernetes environments are",
    "start": "979540",
    "end": "985540"
  },
  {
    "text": "fully compatible and you should be able to move them to your amazon eks cluster so you know we have a you know a wide",
    "start": "985540",
    "end": "993000"
  },
  {
    "text": "ecosystem of services now that are enabling you know customers to build",
    "start": "993000",
    "end": "998080"
  },
  {
    "text": "production workloads leveraging containers on AWS so again it's not just micro services there's many many other many many more use cases in that space",
    "start": "998080",
    "end": "1005810"
  },
  {
    "text": "so to go down that level of operational responsibility one step further that Mike was talking about for right you",
    "start": "1005810",
    "end": "1013320"
  },
  {
    "start": "1008000",
    "end": "1008000"
  },
  {
    "text": "there's this there's this spectrum spectrum of shared responsibility and you have your options around compute you",
    "start": "1013320",
    "end": "1022440"
  },
  {
    "text": "know and at the bottom there and at the same time you have the essentially the managed services up top",
    "start": "1022440",
    "end": "1028380"
  },
  {
    "text": "so with ec2 you can build and run things but you manage the integrations the scaling the security config",
    "start": "1028380",
    "end": "1035839"
  },
  {
    "text": "in addition to your code and when you compare that to services like lambda and",
    "start": "1035839",
    "end": "1041459"
  },
  {
    "text": "Fargate you obviously have less to manage because they're obviously managed services but you know while the heavy",
    "start": "1041459",
    "end": "1047100"
  },
  {
    "text": "lifting has been taken on by AWS this means that you need to focus your efforts around thinking about the more",
    "start": "1047100",
    "end": "1053059"
  },
  {
    "text": "important aspects of your application and how can you put automation in place to test and secure and monitor the",
    "start": "1053059",
    "end": "1061010"
  },
  {
    "text": "application throughout the software development like lifecycle so I like to think of it as you are essentially",
    "start": "1061010",
    "end": "1066649"
  },
  {
    "text": "freeing up resources on your teams you're there now there to focus on the",
    "start": "1066649",
    "end": "1071779"
  },
  {
    "text": "more important things one they're leveraging the service where are these services your customers really don't",
    "start": "1071779",
    "end": "1077990"
  },
  {
    "text": "care that you know for instance you're really good at managing a container Orchestrator that they care essentially",
    "start": "1077990",
    "end": "1084980"
  },
  {
    "text": "about their experience right so if you leverage services like lambda or Fargate",
    "start": "1084980",
    "end": "1090380"
  },
  {
    "text": "as part of your micro services implementation you can focus on that customer experience and you can improve the overall quality of your application",
    "start": "1090380",
    "end": "1097429"
  },
  {
    "text": "instead of put instead of putting cycles towards things like provisioning and cluster scaling and patching so we",
    "start": "1097429",
    "end": "1107840"
  },
  {
    "start": "1105000",
    "end": "1105000"
  },
  {
    "text": "wanted to talk a little bit about the the monolith vers micro services and we'll get into you know example of both",
    "start": "1107840",
    "end": "1113809"
  },
  {
    "text": "in further slides but you know we've seen this comparison before customers",
    "start": "1113809",
    "end": "1118850"
  },
  {
    "text": "have been trying to figure out how to migrate off of their monolithic architectures and and they naturally",
    "start": "1118850",
    "end": "1124159"
  },
  {
    "text": "looked at micro services and to my point earlier you know we've also seen people take existing smaller monoliths and move",
    "start": "1124159",
    "end": "1130880"
  },
  {
    "text": "them into containers as a way to get started to potentially D couple that application as they move towards the",
    "start": "1130880",
    "end": "1136789"
  },
  {
    "text": "cloud right but one of the reasons they're there trying to eliminate or they're trying to move is they're trying",
    "start": "1136789",
    "end": "1142669"
  },
  {
    "text": "to they're trying to get rid of this friction that comes with maintaining a monolith throughout that software development lifecycle they typically",
    "start": "1142669",
    "end": "1150080"
  },
  {
    "text": "have developers and they're all pushing changes and if they're lucky they might have a software delivery pipeline but",
    "start": "1150080",
    "end": "1155960"
  },
  {
    "text": "regardless it's probably shared and they still need to go through the process of coordinating all their changes with the",
    "start": "1155960",
    "end": "1162169"
  },
  {
    "text": "other you know team members or other developers and engineers to make sure that their changes don't break somebody else's code right there's there's almost",
    "start": "1162169",
    "end": "1168890"
  },
  {
    "text": "always shared libraries and and if you want to upgrade that shared library to take advantage of the new feature or",
    "start": "1168890",
    "end": "1175460"
  },
  {
    "text": "maybe there's a security issue whatever it may be you now have to kind of like convince or align everyone else at the",
    "start": "1175460",
    "end": "1181909"
  },
  {
    "text": "exact same time which can be difficult and you know when it comes to putting that fix or patch in",
    "start": "1181909",
    "end": "1187280"
  },
  {
    "text": "you essentially have to merge it in with everyone else's code in the model if you have to go through this process of",
    "start": "1187280",
    "end": "1192320"
  },
  {
    "text": "compiling it and resolving conflicts and you got to rebuild it and then you know you have to run all of your tests suites",
    "start": "1192320",
    "end": "1198200"
  },
  {
    "text": "and start this deployment process to get it in the staging in production it's very lengthy right so a very very small",
    "start": "1198200",
    "end": "1203870"
  },
  {
    "text": "change essentially send you through this process which which isn't quicker to market right and it doesn't it doesn't",
    "start": "1203870",
    "end": "1210500"
  },
  {
    "text": "fold into that concept we were talking about earlier and to be honest with you it's it's unacceptable if you think",
    "start": "1210500",
    "end": "1216410"
  },
  {
    "text": "about today's technology landscape that that's available today I personally think it's a leftover artifact of legacy",
    "start": "1216410",
    "end": "1223309"
  },
  {
    "text": "development cultures right so micro services help address this problem because each micro service is deployed",
    "start": "1223309",
    "end": "1230419"
  },
  {
    "text": "separately and because they can interact together they achieve a broader use case",
    "start": "1230419",
    "end": "1236030"
  },
  {
    "text": "meaning they can be organized around business capability they can be scaled independently each micro service that",
    "start": "1236030",
    "end": "1242299"
  },
  {
    "text": "talks to another micro service is done via that published API that I was talking about for earlier and and they",
    "start": "1242299",
    "end": "1248150"
  },
  {
    "text": "need to provide an API themselves on the teams that are working on them are working independently but they're also",
    "start": "1248150",
    "end": "1253970"
  },
  {
    "text": "not just you know building it they're deploying it and they're maintaining write so there's this there's this",
    "start": "1253970",
    "end": "1259429"
  },
  {
    "text": "concept where in this new world the ownership is key and every team has a",
    "start": "1259429",
    "end": "1264919"
  },
  {
    "text": "service owner and those owners are architecting and implementing and supporting and fixing things essentially",
    "start": "1264919",
    "end": "1271610"
  },
  {
    "text": "in that innovation flywheel that we were talking about earlier this was this was",
    "start": "1271610",
    "end": "1276919"
  },
  {
    "text": "something again we covered in detail in the previous webinar where we talked about the organization of the teams and",
    "start": "1276919",
    "end": "1282440"
  },
  {
    "text": "that and that shifting and responsibilities so so with that said I",
    "start": "1282440",
    "end": "1287929"
  },
  {
    "start": "1287000",
    "end": "1287000"
  },
  {
    "text": "want to get into a little bit of an example I'm gonna let Mike drive this where we talk about the the old versus",
    "start": "1287929",
    "end": "1293270"
  },
  {
    "text": "the new essentially yeah great so so yeah so starting off kind of talking",
    "start": "1293270",
    "end": "1298820"
  },
  {
    "text": "about what the traditional monolithic architecture looks like I'm sure that everyone on this calls probably built",
    "start": "1298820",
    "end": "1305960"
  },
  {
    "text": "something that looks kind of similar to this so you typically are going to have a load balancer in front with",
    "start": "1305960",
    "end": "1310970"
  },
  {
    "text": "potentially multiple instances of your application running on the back for high-availability typically it's",
    "start": "1310970",
    "end": "1318590"
  },
  {
    "text": "often difficult to kind of use this to dynamically scale although that does happen a little bit in these types of",
    "start": "1318590",
    "end": "1324170"
  },
  {
    "text": "architectures but but the fundamental idea here is that all of these different sets of functionality are all contained",
    "start": "1324170",
    "end": "1331670"
  },
  {
    "text": "inside of a single process so typically this would be you know like a Java EE",
    "start": "1331670",
    "end": "1337490"
  },
  {
    "text": "type application where you're running a tomcat server and you've got a bunch of different servlets as well as",
    "start": "1337490",
    "end": "1343700"
  },
  {
    "text": "potentially ejbs and all of the other back-end pieces that are all working together inside of that at one single",
    "start": "1343700",
    "end": "1350510"
  },
  {
    "text": "java process and then you may deploy that across multiple servers and load",
    "start": "1350510",
    "end": "1355880"
  },
  {
    "text": "balanced across those as I mentioned but all of the different kind of interactions between these services are",
    "start": "1355880",
    "end": "1361309"
  },
  {
    "text": "happening with direct kind of in-memory function calls made either to interfaces",
    "start": "1361309",
    "end": "1367070"
  },
  {
    "text": "or directly to concrete classes and implementations that happen inside of there and then everyone is talking to",
    "start": "1367070",
    "end": "1372230"
  },
  {
    "text": "the same back-end database and so you know as carmen was kind of referring to",
    "start": "1372230",
    "end": "1378230"
  },
  {
    "text": "previously if you've got multiple teams now that are responsible for different pieces of this architecture so each",
    "start": "1378230",
    "end": "1385010"
  },
  {
    "text": "layer potentially has a different set of developers that are working on it in",
    "start": "1385010",
    "end": "1390320"
  },
  {
    "text": "order to release this in order to make changes to it in order to update the data model or anything like that",
    "start": "1390320",
    "end": "1395960"
  },
  {
    "text": "requires this massive kind of coordination across a number of different teams in order to get that",
    "start": "1395960",
    "end": "1401210"
  },
  {
    "text": "change actually pushed out the door you have issues around you know introducing regressions unintended consequences that",
    "start": "1401210",
    "end": "1408559"
  },
  {
    "text": "happen from changing one part of the the system end up impacting other parts that you didn't expect",
    "start": "1408559",
    "end": "1413840"
  },
  {
    "text": "and so that's oftentimes kind of the the pain point that really drives a lot of this migration in the first place so",
    "start": "1413840",
    "end": "1421299"
  },
  {
    "text": "contrasting that now with a microservices version of the same architecture if we take a look at that",
    "start": "1421299",
    "end": "1427340"
  },
  {
    "start": "1425000",
    "end": "1425000"
  },
  {
    "text": "you'll notice now we've split out each one of those different kind of components that was inside of that",
    "start": "1427340",
    "end": "1432710"
  },
  {
    "text": "monolithic process into its own individual service so there's a few",
    "start": "1432710",
    "end": "1439250"
  },
  {
    "text": "things to note here that that that are important characteristics of this new",
    "start": "1439250",
    "end": "1445010"
  },
  {
    "text": "architecture the first is that as we talked about from national perspective each one of these",
    "start": "1445010",
    "end": "1452030"
  },
  {
    "text": "new boxes is owned by an individual team now you might have a team that owns a few different services themselves but",
    "start": "1452030",
    "end": "1458930"
  },
  {
    "text": "one of the big keys is that you want to make sure that each one of the services that you're operating is 100% owned by a",
    "start": "1458930",
    "end": "1466220"
  },
  {
    "text": "single development team and they have full autonomy and authority to make decisions about how they're building and",
    "start": "1466220",
    "end": "1472760"
  },
  {
    "text": "deploying and managing that service now you may have kind of standards across your organization about certain",
    "start": "1472760",
    "end": "1479720"
  },
  {
    "text": "technology choices or security policies etc that everyone adheres to but overall",
    "start": "1479720",
    "end": "1484820"
  },
  {
    "text": "you want to make sure that the developers that are building each individual service are free to innovate",
    "start": "1484820",
    "end": "1490730"
  },
  {
    "text": "and operate based on what they know is best for their own service and and then",
    "start": "1490730",
    "end": "1496610"
  },
  {
    "text": "what that means is each one of these services needs to expose a standardized",
    "start": "1496610",
    "end": "1501770"
  },
  {
    "text": "API for other services to interact with it so you'll see that there's a separate",
    "start": "1501770",
    "end": "1507950"
  },
  {
    "text": "load balancer in front of each one of these services and the key there is not just that you have some load balancer",
    "start": "1507950",
    "end": "1514700"
  },
  {
    "text": "that accepts requests but that the API being exposed at the front end of those",
    "start": "1514700",
    "end": "1520160"
  },
  {
    "text": "services is is is considered to be a contract and that the teams that are",
    "start": "1520160",
    "end": "1526010"
  },
  {
    "text": "running each of those services maintain that contract across releases so",
    "start": "1526010",
    "end": "1531320"
  },
  {
    "text": "essentially anything that they want to do to change the code of functionality behind the scenes is completely up to",
    "start": "1531320",
    "end": "1536720"
  },
  {
    "text": "them it's up to them to set their own release cycle their own release cadence there shouldn't be significant",
    "start": "1536720",
    "end": "1542540"
  },
  {
    "text": "coordination across all of the different services out there because their goal is",
    "start": "1542540",
    "end": "1547640"
  },
  {
    "text": "to expose a standard API contract and as long as they don't change that API no",
    "start": "1547640",
    "end": "1553820"
  },
  {
    "text": "one else should really should really care and so that ends up being really",
    "start": "1553820",
    "end": "1559010"
  },
  {
    "text": "important to to really put a lot of time and effort into designing those API as well and then once you're actually",
    "start": "1559010",
    "end": "1564860"
  },
  {
    "text": "deployed those and they've gone out into production now you as a service scheme are responsible for maintaining fidelity",
    "start": "1564860",
    "end": "1571340"
  },
  {
    "text": "to that API and not introducing incompatible you know backwards and",
    "start": "1571340",
    "end": "1577130"
  },
  {
    "text": "compatibility into into future updates of the service the last piece that's",
    "start": "1577130",
    "end": "1582900"
  },
  {
    "text": "important to keep in mind here is that you'll notice that each one of these three services on the right side have",
    "start": "1582900",
    "end": "1588930"
  },
  {
    "text": "their own database so we're not sharing data stores anymore across services and this is really really critical in order",
    "start": "1588930",
    "end": "1595770"
  },
  {
    "text": "again to enable those teams that are managing these services to be able to make changes independent of one another",
    "start": "1595770",
    "end": "1602240"
  },
  {
    "text": "so you want to make sure that if the account service team decides they want to make a change to their data model",
    "start": "1602240",
    "end": "1608520"
  },
  {
    "text": "that's not going to impact the cart service or shipping service you want to",
    "start": "1608520",
    "end": "1613980"
  },
  {
    "text": "make sure that those because those changes will often have significant impacts to two other kind of pieces of",
    "start": "1613980",
    "end": "1621600"
  },
  {
    "text": "code and so in order to maintain that isolation you're going to need to ensure that that everyone is using their own",
    "start": "1621600",
    "end": "1628260"
  },
  {
    "text": "kind of data base so so those are kind of the the really sort of critical high-level features I guess from an",
    "start": "1628260",
    "end": "1635310"
  },
  {
    "text": "architectural perspective that you should ensure you're adhering to when you go through and start building a new",
    "start": "1635310",
    "end": "1641550"
  },
  {
    "text": "micro-services architecture so now let's",
    "start": "1641550",
    "end": "1647400"
  },
  {
    "start": "1646000",
    "end": "1646000"
  },
  {
    "text": "tuck it so we've talked a little bit about kind of the comparison between monoliths and micro services but",
    "start": "1647400",
    "end": "1653490"
  },
  {
    "text": "ultimately again keep in mind that the end goal here is really about increasing agility it's about increasing the",
    "start": "1653490",
    "end": "1660630"
  },
  {
    "text": "ability for teams to deliver new new changes and fix problems more quickly",
    "start": "1660630",
    "end": "1665880"
  },
  {
    "text": "than you would be able to previously simplifying deployment making it easier",
    "start": "1665880",
    "end": "1671700"
  },
  {
    "text": "to scale things flexibly so when you have multiple services there may be different sort of scaling demands you",
    "start": "1671700",
    "end": "1678540"
  },
  {
    "text": "may have some services that need to manage lots of individual small requests",
    "start": "1678540",
    "end": "1685020"
  },
  {
    "text": "that take very little processing time to process each one you may have other services that require significantly more",
    "start": "1685020",
    "end": "1691230"
  },
  {
    "text": "compute power maybe ones very memory intensive well ones very i/o intensive and so being able to kind of scale those",
    "start": "1691230",
    "end": "1697440"
  },
  {
    "text": "services independently of one another allows you to do a better job of kind of matching demand and do so at a more cost",
    "start": "1697440",
    "end": "1704730"
  },
  {
    "text": "efficient in a more cost-efficient manner now all of these benefits that we talked about and you know micro services is",
    "start": "1704730",
    "end": "1711060"
  },
  {
    "text": "definitely becoming a big kind of buzzword everyone thinks that this is the",
    "start": "1711060",
    "end": "1716760"
  },
  {
    "text": "is the only way to build modern applications I think it's important to understand that with all of these",
    "start": "1716760",
    "end": "1723030"
  },
  {
    "text": "benefits comes a degree of complexity a degree of added complexity so when we",
    "start": "1723030",
    "end": "1728400"
  },
  {
    "text": "looked at that new model it looks very pretty and simple when you draw it out on the you know on the whiteboard but",
    "start": "1728400",
    "end": "1735300"
  },
  {
    "text": "keep in mind that each new service that you create means that's a new process now that needs to be deployed and",
    "start": "1735300",
    "end": "1741210"
  },
  {
    "text": "managed and monitored your teams now have additional responsibilities thing to think about in terms of how they're",
    "start": "1741210",
    "end": "1747720"
  },
  {
    "text": "they're managing all of those different pieces and so to some degree this is these benefits come with with a certain",
    "start": "1747720",
    "end": "1755730"
  },
  {
    "text": "cost and you need to be aware of that cost that you're undertaking and not necessarily choose to go to a micro",
    "start": "1755730",
    "end": "1762510"
  },
  {
    "text": "services architecture just for the sake of doing the modern thing make sure that you're doing it because you actually",
    "start": "1762510",
    "end": "1768930"
  },
  {
    "text": "have the problems and the pain points that we've talked about previously with monoliths so if you have a monolithic codebase but",
    "start": "1768930",
    "end": "1775800"
  },
  {
    "text": "it's still small enough that you only have a single team working on it and that single team is able to do",
    "start": "1775800",
    "end": "1781410"
  },
  {
    "text": "deployments relatively frequently they can they can do a deployment after every 2 weeks sprint you know you've got all",
    "start": "1781410",
    "end": "1788400"
  },
  {
    "text": "of the the pieces in place in order to make that process automated and fast and agile you you may not need to actually",
    "start": "1788400",
    "end": "1796040"
  },
  {
    "text": "change over and start using a micro services architecture there may be benefits to putting that application",
    "start": "1796040",
    "end": "1802740"
  },
  {
    "text": "into a container so that you can go and deploy it more readily across a number",
    "start": "1802740",
    "end": "1807780"
  },
  {
    "text": "of different device environments standardize the way that it's packaged etc but the architectural concept of",
    "start": "1807780",
    "end": "1814620"
  },
  {
    "text": "breaking all of these pieces of functionality out and adding separate databases putting load balancers in",
    "start": "1814620",
    "end": "1820650"
  },
  {
    "text": "front of all of those creating these these contractual api's it's not always",
    "start": "1820650",
    "end": "1826830"
  },
  {
    "text": "worth the additional complexity in order to get these benefits if you already are",
    "start": "1826830",
    "end": "1832890"
  },
  {
    "text": "seeing these kind of benefits with your current code base so I think there are definitely times when customers jumped",
    "start": "1832890",
    "end": "1838710"
  },
  {
    "text": "the gun a little bit to be honest in trying to adopt micro services for systems that were working just fine",
    "start": "1838710",
    "end": "1844110"
  },
  {
    "text": "previously that being said obviously there are a number of times when certainly the benefits",
    "start": "1844110",
    "end": "1850520"
  },
  {
    "text": "well outweigh the cost and and I think in general moving to that model where",
    "start": "1850520",
    "end": "1856160"
  },
  {
    "text": "you can get a single team owning a single piece of code is really kind of",
    "start": "1856160",
    "end": "1861559"
  },
  {
    "text": "the key there so if you're doing that and it feels like you're still managing a monolith that might be okay again if",
    "start": "1861559",
    "end": "1867050"
  },
  {
    "text": "you're still operating that model because to a certain extent you've already got a micro services",
    "start": "1867050",
    "end": "1872120"
  },
  {
    "text": "organizational unit if you will if you've got a small team owning a single service with with those components so",
    "start": "1872120",
    "end": "1881140"
  },
  {
    "text": "yes so you know looking at this now so assuming that you you have decided we're",
    "start": "1881140",
    "end": "1886730"
  },
  {
    "text": "going to make the jump we're going to move to building you know refactoring this particular system or we're building",
    "start": "1886730",
    "end": "1894230"
  },
  {
    "text": "something from scratch and we want to use a micro services architecture what are the things that we oftentimes see",
    "start": "1894230",
    "end": "1900380"
  },
  {
    "text": "people get tripped up on and and what are the practices and in ways of mitigating those risks that's really",
    "start": "1900380",
    "end": "1906710"
  },
  {
    "text": "what we want to spend the second half of this this talk discussing so a few of",
    "start": "1906710",
    "end": "1911929"
  },
  {
    "text": "the things that that often times come up when we see people starting down this road is you know small changes taking a",
    "start": "1911929",
    "end": "1918500"
  },
  {
    "text": "long time to release so continuing to live in this pain of hey we're trying to we're trying to move more quickly yet we",
    "start": "1918500",
    "end": "1925670"
  },
  {
    "text": "find that it's very difficult for us to get code changes all the way pushed into production right so so talking about",
    "start": "1925670",
    "end": "1932840"
  },
  {
    "text": "releases a lot of times customers can get it out into the dev environment and we're into their test environment pretty",
    "start": "1932840",
    "end": "1938150"
  },
  {
    "text": "quickly but then there's a lot of additional sort of steps that that it might take before things actually get to",
    "start": "1938150",
    "end": "1943880"
  },
  {
    "text": "production which is what we really care about is how fast can you get out production also you know this idea that",
    "start": "1943880",
    "end": "1949850"
  },
  {
    "text": "now you've got a bunch of different services we've got significantly more processes than we used to in order to",
    "start": "1949850",
    "end": "1955400"
  },
  {
    "text": "accomplish the same kind of functional scope so being able to understand kind",
    "start": "1955400",
    "end": "1960830"
  },
  {
    "text": "of where all of our deployments out what are all of these pieces where do they all exist is an important kind of",
    "start": "1960830",
    "end": "1967340"
  },
  {
    "text": "question to be able to answer similarly the the security process integrating their existing apps SEC review process",
    "start": "1967340",
    "end": "1974270"
  },
  {
    "text": "into this new micro services environment can definitely be a challenge and then",
    "start": "1974270",
    "end": "1981230"
  },
  {
    "text": "similarly the the idea of being able to monitor these things and gain visibility",
    "start": "1981230",
    "end": "1986510"
  },
  {
    "text": "into a world where you no longer have a single stack trace when something goes",
    "start": "1986510",
    "end": "1992030"
  },
  {
    "text": "wrong in the monolithic world it's great because you know I get an error log and I can kind of see the entire stack trace",
    "start": "1992030",
    "end": "1997640"
  },
  {
    "text": "through the through the entire system it's all contained in a single process all of my logs are in one place but now",
    "start": "1997640",
    "end": "2003490"
  },
  {
    "text": "in a micro-services world you might have a case where you've got a dozen different processes that all touched",
    "start": "2003490",
    "end": "2008920"
  },
  {
    "text": "this one request before it actually got filled and so tracking down where the problems are can definitely be more",
    "start": "2008920",
    "end": "2015520"
  },
  {
    "text": "complicated and then finally you know ensuring that they've got good fidelity across all of the different environments",
    "start": "2015520",
    "end": "2021820"
  },
  {
    "text": "that they're using so again you're going to be doing a lot more releases there's a lot more processes now that are getting moved through these various",
    "start": "2021820",
    "end": "2028179"
  },
  {
    "text": "environments and ensuring that all of that stuff works consistently across all of those processes is is one of the kind",
    "start": "2028179",
    "end": "2036970"
  },
  {
    "text": "of big keys to being successful and in an area where people sometimes get tripped up so in order to talk about",
    "start": "2036970",
    "end": "2042340"
  },
  {
    "text": "kind of how we can address each of these issues we're gonna walk through a couple",
    "start": "2042340",
    "end": "2047590"
  },
  {
    "text": "of different sort of high-level best practices so unfortunately you know given the amount of time that we have",
    "start": "2047590",
    "end": "2053710"
  },
  {
    "text": "today each one of these topics could probably fill a day-long deep dive",
    "start": "2053710",
    "end": "2058929"
  },
  {
    "text": "workshop so we're really just going to be touching on some sort of high-level concepts that we would encourage you to",
    "start": "2058929",
    "end": "2064120"
  },
  {
    "text": "use as jumping-off points but we did want to talk through a few of the this sort of common best practices that we",
    "start": "2064120",
    "end": "2070419"
  },
  {
    "text": "see for for customers who are getting started with micro services that in order to make sure that they're kind of successful so I handed over to Carmen to",
    "start": "2070419",
    "end": "2077530"
  },
  {
    "text": "to kick us off with our first first practice yeah so so the first thing that you need to think about is is CI CD all",
    "start": "2077530",
    "end": "2085210"
  },
  {
    "text": "right you're not going to succeed unless you get this component in place and you get it in place correctly",
    "start": "2085210",
    "end": "2091388"
  },
  {
    "text": "CI CD for those are unfamiliar with it hopefully you are familiar with it but it's it stands for continuous",
    "start": "2091389",
    "end": "2097390"
  },
  {
    "text": "integration and continuous deployment and to my point for if you're going to modernize your applications you need to",
    "start": "2097390",
    "end": "2103270"
  },
  {
    "text": "bring a CI CD and DevOps practice into your into your application lifecycle so",
    "start": "2103270",
    "end": "2109050"
  },
  {
    "text": "incorporating automation bringing that cultural component of learning how to integrate frequently customers are able",
    "start": "2109050",
    "end": "2116410"
  },
  {
    "text": "to find an there are bugs quicker they improved their overall software quality I mean they reduced the time it takes the",
    "start": "2116410",
    "end": "2122540"
  },
  {
    "text": "baladi and released new software updates I just want to briefly just talk about the the various different you know",
    "start": "2122540",
    "end": "2128930"
  },
  {
    "text": "concepts if you will because to be honest with you I see individuals getting confused even at this level",
    "start": "2128930",
    "end": "2134300"
  },
  {
    "text": "right so so continuous integration what is that so a continuous integration is a",
    "start": "2134300",
    "end": "2139490"
  },
  {
    "text": "development practice where developers are integrating code into a shared code repository or central branch multiple",
    "start": "2139490",
    "end": "2146630"
  },
  {
    "text": "times a day every one of your check-ins is essentially then you know verified via an automated build and a testing",
    "start": "2146630",
    "end": "2152930"
  },
  {
    "text": "process that allows your development team development teams to get this feedback and detect problems very very",
    "start": "2152930",
    "end": "2159020"
  },
  {
    "text": "early in the cycle right and this is a way for them to avoid conflicts in the future continuous delivery is an",
    "start": "2159020",
    "end": "2165530"
  },
  {
    "text": "approach where your development teams are working on these small sprints and/or small chunks or features in each",
    "start": "2165530",
    "end": "2171950"
  },
  {
    "text": "sprint and the goal is ensure that the software can be released at any single time in a deployable state it's",
    "start": "2171950",
    "end": "2178100"
  },
  {
    "text": "essentially expanding on continued that continuous integration model by deploying all the code changes to a",
    "start": "2178100",
    "end": "2184369"
  },
  {
    "text": "testing environment and then from there going to a production environment after your testing and the tests go beyond the",
    "start": "2184369",
    "end": "2191450"
  },
  {
    "text": "unit tests and you typically see in continuous integration things like load testing or integration testing or UI",
    "start": "2191450",
    "end": "2197359"
  },
  {
    "text": "testing and many many more but every code change is built tested and then pushed to a non prod environment for",
    "start": "2197359",
    "end": "2203660"
  },
  {
    "text": "further testing right and along the way there can be all of these multiple parallel stages before production and",
    "start": "2203660",
    "end": "2209210"
  },
  {
    "text": "deployment and once your test is finally passed there's this approval stage before the update to production",
    "start": "2209210",
    "end": "2214750"
  },
  {
    "text": "continuous deployment the last one is essentially the same as what I just mentioned with the continuous delivery",
    "start": "2214750",
    "end": "2219920"
  },
  {
    "text": "but the production changes happen automatically without explicit approval and the emphasis is essentially you need",
    "start": "2219920",
    "end": "2226940"
  },
  {
    "text": "to think about tests even more in your workflow you need to think about what kind of tests you need to run before you",
    "start": "2226940",
    "end": "2232340"
  },
  {
    "text": "cut over your users um so it requires you know that this this this this significant effort on your on your",
    "start": "2232340",
    "end": "2238580"
  },
  {
    "text": "team's part to make sure that before you press that magic button that all services are working essentially you",
    "start": "2238580",
    "end": "2244430"
  },
  {
    "text": "know as as needed for your customers to have a great experience on your platform if you want to look",
    "start": "2244430",
    "end": "2250820"
  },
  {
    "text": "get started again to Mike's point there's so much material out for this you know check out the reinvent videos or some of it just that the landing page",
    "start": "2250820",
    "end": "2258110"
  },
  {
    "text": "is on the AWS site and you can learn about how you can do things with like code commit and code build code deploy",
    "start": "2258110",
    "end": "2263420"
  },
  {
    "text": "code pipeline just to get started you could take advantage of server list solutions like lambda or even leverage",
    "start": "2263420",
    "end": "2269570"
  },
  {
    "text": "see ICD you know with containers as part of your workflows so so definitely go check that out but that's one of the the",
    "start": "2269570",
    "end": "2275630"
  },
  {
    "text": "first pillars the second pillar that we think is super super important that you need to think about is monitoring and",
    "start": "2275630",
    "end": "2281690"
  },
  {
    "text": "and when you get into micro services you know how are you going to monitor these architectures you know because",
    "start": "2281690",
    "end": "2288050"
  },
  {
    "text": "essentially it's not the same as when you are monitoring a monolithic application those to Mike's point they",
    "start": "2288050",
    "end": "2293150"
  },
  {
    "text": "were deployed as a single executable and compared to micro services we now there's all these independent services",
    "start": "2293150",
    "end": "2298550"
  },
  {
    "text": "inside your environment and each service has its own function and the collective group of those micro services make up",
    "start": "2298550",
    "end": "2304790"
  },
  {
    "text": "your application and at each level the service in itself can have a series of dependencies like it as Mike's point",
    "start": "2304790",
    "end": "2311060"
  },
  {
    "text": "before like each one has its own database and each one of those is something that could potentially fail",
    "start": "2311060",
    "end": "2316370"
  },
  {
    "text": "and needs to be considered as part of your overall monitoring strategy so you need to you know ask yourself how can",
    "start": "2316370",
    "end": "2321890"
  },
  {
    "text": "you architect your application that if a dependent component of a micro service fails or those in this degraded state",
    "start": "2321890",
    "end": "2328190"
  },
  {
    "text": "can you detect those problems easily so when thinking about micro services and monitoring a good place to start is",
    "start": "2328190",
    "end": "2334640"
  },
  {
    "text": "metrics right your application metrics could be considered your first tier of things to think about and this is where",
    "start": "2334640",
    "end": "2340220"
  },
  {
    "text": "you gather all the data that's useful for your team to understand the overall health of your system and it's important",
    "start": "2340220",
    "end": "2345500"
  },
  {
    "text": "to think about you know your application logs and how you're going to publish and consume them as you design your micro",
    "start": "2345500",
    "end": "2350900"
  },
  {
    "text": "services if you if you follow a 12 factor application methodology you'll understand that logs should be loosely",
    "start": "2350900",
    "end": "2356900"
  },
  {
    "text": "coupled from the system you never try and write or manage those files the disks because those essentially if it",
    "start": "2356900",
    "end": "2363380"
  },
  {
    "text": "was a container it's a mutable array can go away at any moment it's best practice to omit those logs to a stream so again",
    "start": "2363380",
    "end": "2370460"
  },
  {
    "text": "in like a container you know you're gonna you're gonna log the standardout you're going to log the standard error and you're going to aggregate them",
    "start": "2370460",
    "end": "2376460"
  },
  {
    "text": "someplace else maybe you're using cloud watch to do that for further analysis platform metrics is another tier or",
    "start": "2376460",
    "end": "2383090"
  },
  {
    "text": "events is another and you think of this is your infrastructure maybe you're looking at",
    "start": "2383090",
    "end": "2388280"
  },
  {
    "text": "the underlying cloud platform you're looking at AWS as a whole and all the services you're consuming maybe it's the billing events or network",
    "start": "2388280",
    "end": "2394790"
  },
  {
    "text": "traces inside of your account or maybe it's the API calls that you're seeing inside of cloud trail that's what I like",
    "start": "2394790",
    "end": "2399950"
  },
  {
    "text": "to follow the the platform metrics and events the last one is the system events",
    "start": "2399950",
    "end": "2405230"
  },
  {
    "text": "so if you think about this this is the under the the ability to understand deployments but also a couple other",
    "start": "2405230",
    "end": "2411770"
  },
  {
    "text": "things we'll get into that but being able to correlate a saw for release and log these events back to the behavior of",
    "start": "2411770",
    "end": "2418970"
  },
  {
    "text": "the system right how are essentially maybe operational changes and scaling",
    "start": "2418970",
    "end": "2424550"
  },
  {
    "text": "events and config updates going to be alerted on and gathered and and and if",
    "start": "2424550",
    "end": "2429710"
  },
  {
    "text": "you think about it if you're doing everything you know fiood DevOps or infrastructure is code you know mindset",
    "start": "2429710",
    "end": "2435550"
  },
  {
    "text": "config updates and operational changes should never be done by hand they should be part of the software release process",
    "start": "2435550",
    "end": "2441110"
  },
  {
    "text": "they should be you know essentially you know gathered and tagged appropriately as they flow through your CI CD system",
    "start": "2441110",
    "end": "2447860"
  },
  {
    "text": "and you know we talked about lastly this distributed tracing model and if you",
    "start": "2447860",
    "end": "2453830"
  },
  {
    "text": "think about it in many cases that this micro services you know there's multiple pieces working together to handle the",
    "start": "2453830",
    "end": "2460040"
  },
  {
    "text": "requests so in this complex system where you have tens of microcircuits maybe an error occurs somewhere inside",
    "start": "2460040",
    "end": "2466100"
  },
  {
    "text": "of that chain every one of your systems needs to be logging properly and the log should be consolidated into this central",
    "start": "2466100",
    "end": "2472670"
  },
  {
    "text": "system but it's even still it's hard to find the relevant messages right this is where something like x-ray AWS x-ray",
    "start": "2472670",
    "end": "2478940"
  },
  {
    "text": "could essentially come in and help you out because you'll be able to see and visualize the end and view of your",
    "start": "2478940",
    "end": "2484100"
  },
  {
    "text": "requests as they travel through your application and and you start to get that flow using the correlation IDs in",
    "start": "2484100",
    "end": "2490010"
  },
  {
    "text": "your in your vet chain so to go a little bit deeper because monitoring is super important right we talk to customers",
    "start": "2490010",
    "end": "2496940"
  },
  {
    "start": "2492000",
    "end": "2492000"
  },
  {
    "text": "about the concepts of this centralized log strategy and when you're planning this you need to identify your",
    "start": "2496940",
    "end": "2501950"
  },
  {
    "text": "requirements whether it be compliance or business how are you going to essentially you know do access control",
    "start": "2501950",
    "end": "2508190"
  },
  {
    "text": "what's the aggregation model going to look like what are you going to retain on like how long are you going to retain the logs and you need to find a solution",
    "start": "2508190",
    "end": "2514730"
  },
  {
    "text": "that a gun can support you know all these you cases as you expand into AWS and and you",
    "start": "2514730",
    "end": "2521299"
  },
  {
    "text": "take advantage of more and more services inside the AWS you know that this this slide shows you a couple of things to",
    "start": "2521299",
    "end": "2528079"
  },
  {
    "text": "think about but I want to highlight a couple of more so so logging essentially",
    "start": "2528079",
    "end": "2533390"
  },
  {
    "text": "via all environments like in my opinion that's a no-brainer with that said your application should",
    "start": "2533390",
    "end": "2538579"
  },
  {
    "text": "always be configurable so as you traverse from environment to environment you should be able to set different log",
    "start": "2538579",
    "end": "2543589"
  },
  {
    "text": "levels for deeper troubleshooting when needed um you do need to think about an SLA and automated response times on so",
    "start": "2543589",
    "end": "2550760"
  },
  {
    "text": "that's another thing to think about so think about like synthetic transaction monitoring like I was talking about and and like how do I get started how am I",
    "start": "2550760",
    "end": "2557720"
  },
  {
    "text": "going to actually aggregate those what's going to send those out maybe you can actually start simple and build that",
    "start": "2557720",
    "end": "2562730"
  },
  {
    "text": "with something like lambda like a simple little synthetic transaction monitored it calls some URLs inside of your",
    "start": "2562730",
    "end": "2568099"
  },
  {
    "text": "application and reports back right another one is essentially your log retention requirements how long are you",
    "start": "2568099",
    "end": "2574490"
  },
  {
    "text": "going to keep them meaning like are you going to set lifecycle policies what's essentially the plan to move those off",
    "start": "2574490",
    "end": "2580700"
  },
  {
    "text": "where are they going to go maybe you move those over to something that's cost effective like glacier right and then at",
    "start": "2580700",
    "end": "2586279"
  },
  {
    "text": "the same time to like you know in you want to incorporate the tools and features that help you enforce lifecycle",
    "start": "2586279",
    "end": "2592579"
  },
  {
    "text": "policy so again like maybe you're using Amazon s3 it's cost effective it's it's",
    "start": "2592579",
    "end": "2598250"
  },
  {
    "text": "an easy place to put your logs and it has built-in lifecycle capabilities and",
    "start": "2598250",
    "end": "2603470"
  },
  {
    "text": "at the same time to you know maybe you're using cloud watch logs you know things like like lambda they natively",
    "start": "2603470",
    "end": "2609859"
  },
  {
    "text": "ship their logs out to you know to output into cloud watch logs so it is ECS right so you know using an ECS the",
    "start": "2609859",
    "end": "2617450"
  },
  {
    "text": "AWS logs driver as part of your task definition allows you to take those container logs and put them in a",
    "start": "2617450",
    "end": "2622789"
  },
  {
    "text": "centralized place um so so I think the point I'm trying to make yours when you're thinking about where to storm is",
    "start": "2622789",
    "end": "2627920"
  },
  {
    "text": "it's like before maybe you go down the wormhole building your own custom built solution maybe you're gonna do like your",
    "start": "2627920",
    "end": "2633500"
  },
  {
    "text": "own open source ELQ stack or something like that think about all the things that you need to do in terms of",
    "start": "2633500",
    "end": "2638690"
  },
  {
    "text": "maintaining that and maybe again start with something that's pre-built and try and leverage that as part of your",
    "start": "2638690",
    "end": "2643730"
  },
  {
    "text": "workflow so because in my point earlier customers don't care that you're really good at gathering logs right they care",
    "start": "2643730",
    "end": "2649549"
  },
  {
    "text": "about the user experience so how can you actually make the user experience easier for them while taking",
    "start": "2649549",
    "end": "2654560"
  },
  {
    "text": "away some of the operational ability operational responsibilities that you take on as you build your applications",
    "start": "2654560",
    "end": "2660470"
  },
  {
    "text": "right so maybe you look to some of these managed services as part of your implementation security is is something",
    "start": "2660470",
    "end": "2668000"
  },
  {
    "text": "else that's that's paramount and in any organization you need to think about all of the attack areas of a micro service",
    "start": "2668000",
    "end": "2674060"
  },
  {
    "text": "based architecture and how you're gonna protect and awed it around them again another one that we could spend so much",
    "start": "2674060",
    "end": "2679940"
  },
  {
    "text": "time on here but like the one that I want to you know kind of jump on is security scanning you know you have all",
    "start": "2679940",
    "end": "2685070"
  },
  {
    "text": "these these micro services inside your environment think of how you're going to achieve vulnerability and how you're",
    "start": "2685070",
    "end": "2690770"
  },
  {
    "text": "going to do security scanning within maybe your container or lambda functions perhaps your application is dependent on",
    "start": "2690770",
    "end": "2696320"
  },
  {
    "text": "an external package and maybe you're inheriting from this base container image and then maybe you're rolling your",
    "start": "2696320",
    "end": "2702140"
  },
  {
    "text": "own image in your environment how do you know that the components you're dependent on aren't vulnerable and in",
    "start": "2702140",
    "end": "2708170"
  },
  {
    "text": "the case of runtime monitoring what about the functions and containers that are already running in your environment if a critical security release comes out",
    "start": "2708170",
    "end": "2715670"
  },
  {
    "text": "for a particular package like how are you auditing on it these are things again that you can go super super deep",
    "start": "2715670",
    "end": "2721550"
  },
  {
    "text": "on we could spend a lot of time on but I just want to get your head around essentially how important that is right and and the incidence response is",
    "start": "2721550",
    "end": "2728090"
  },
  {
    "text": "another super key topic here because you know if you think about the flow it's like this you establish control when an",
    "start": "2728090",
    "end": "2734030"
  },
  {
    "text": "incident happens you're trying to determine the impact maybe you're you know you're going through this recovery stage then you get into the the",
    "start": "2734030",
    "end": "2740990"
  },
  {
    "text": "investigative stage where you're trying to figure out the the route calls and you're trying to improve and you have to realize the importance of monitoring and",
    "start": "2740990",
    "end": "2748520"
  },
  {
    "text": "metrics when tied to security and incident response because of the scale you could be operating at in a large",
    "start": "2748520",
    "end": "2754220"
  },
  {
    "text": "microservices implementation to Mike's point where you know it can become hard so you need to think about and you have",
    "start": "2754220",
    "end": "2760070"
  },
  {
    "text": "to realize the importance of having a an incident response plan so your team's know you know how are they doing the",
    "start": "2760070",
    "end": "2766340"
  },
  {
    "text": "right thing or are they doing the right thing and obviously you know having people following procedural steps is a",
    "start": "2766340",
    "end": "2772100"
  },
  {
    "text": "path towards error because you know if they miss a step you know this is why you want to start looking into",
    "start": "2772100",
    "end": "2778280"
  },
  {
    "text": "automating like these mundane tasks as part of this Incident Response process and have potentially you know automate",
    "start": "2778280",
    "end": "2784560"
  },
  {
    "text": "employment or remediation mechanisms to help you know improve your process and",
    "start": "2784560",
    "end": "2790140"
  },
  {
    "text": "then and then finally you know organization should test this process by",
    "start": "2790140",
    "end": "2795480"
  },
  {
    "text": "essentially running Incident Response gamedays or security and simulations you",
    "start": "2795480",
    "end": "2800940"
  },
  {
    "text": "know and if you haven't run those incident response game days they're essentially exercises that allow the security and operational teams or your",
    "start": "2800940",
    "end": "2807570"
  },
  {
    "text": "pizza teams understand you know how the organization would respond if an event occurred inside of your environment so",
    "start": "2807570",
    "end": "2815240"
  },
  {
    "text": "we've talked about this a lot in the last webinar as well I'll just briefly chat on this one",
    "start": "2815240",
    "end": "2820320"
  },
  {
    "text": "but you need to think about security way earlier in the process it's now",
    "start": "2820320",
    "end": "2825750"
  },
  {
    "text": "everyone's job it's part of the planning phase it's it's it's not just your",
    "start": "2825750",
    "end": "2830910"
  },
  {
    "text": "security teams it's it's moving over your developers now have a role in security they need to understand that",
    "start": "2830910",
    "end": "2836850"
  },
  {
    "text": "it's not about building and shipping the application and handing it off to another team to implement security components and controls everyone has the",
    "start": "2836850",
    "end": "2843780"
  },
  {
    "text": "stake and it needs to be factored into all decisions that are made about how an application are built how they're tested",
    "start": "2843780",
    "end": "2850530"
  },
  {
    "text": "and how they're deployed so you know we talked about a lot about shift left in the prior webinar so I would definitely",
    "start": "2850530",
    "end": "2855960"
  },
  {
    "text": "suggest you go check that out because again that's a super important stage as part of you know building the",
    "start": "2855960",
    "end": "2861570"
  },
  {
    "text": "applications in this new world Mike's going to talk about the other two pillars and I'm gonna pass it over to",
    "start": "2861570",
    "end": "2867060"
  },
  {
    "text": "him great fixalot Carmen so the the next",
    "start": "2867060",
    "end": "2873990"
  },
  {
    "text": "next pillar or next practice I think that's important to think about is how you're managing applications and",
    "start": "2873990",
    "end": "2880200"
  },
  {
    "text": "services so typically when you're building cloud native micro services",
    "start": "2880200",
    "end": "2886800"
  },
  {
    "text": "there's going to be a number of different components that are involved in actually deploying one of these so that may take the form of having",
    "start": "2886800",
    "end": "2893970"
  },
  {
    "text": "multiple function multiple lambda functions as well as things like queues and databases or other resources within",
    "start": "2893970",
    "end": "2902550"
  },
  {
    "text": "AWS or maybe this is multiple containers or tasks or services that are running on",
    "start": "2902550",
    "end": "2908520"
  },
  {
    "text": "top of something like ECS so whatever kind of underlying technology you're using you need a way of being able to",
    "start": "2908520",
    "end": "2915630"
  },
  {
    "text": "reason about sort of these services and all of the different components that comprise each individual",
    "start": "2915630",
    "end": "2922640"
  },
  {
    "text": "application as a as a holistic unit so this typically takes the form of either",
    "start": "2922640",
    "end": "2929250"
  },
  {
    "text": "a CloudFormation template or something like a SAM template so Sam stands for the service application model which is",
    "start": "2929250",
    "end": "2935190"
  },
  {
    "text": "an extension to CloudFormation so this allows you to define a single",
    "start": "2935190",
    "end": "2940790"
  },
  {
    "text": "declarative template that defines how your application is built and deployed and then you can use confirmation now to",
    "start": "2940790",
    "end": "2947640"
  },
  {
    "text": "deploy to any environment so to your dev test your product in a single repeatable",
    "start": "2947640",
    "end": "2954080"
  },
  {
    "text": "process if you're using something like kubernetes say you might use something like helm to define all of the different",
    "start": "2954080",
    "end": "2962090"
  },
  {
    "text": "containers and processes there if you're using ECS again something like CloudFormation to define all of your",
    "start": "2962090",
    "end": "2968130"
  },
  {
    "text": "tasks and services in a single place and orchestrate kind of that deployment would be another thing but again just",
    "start": "2968130",
    "end": "2975030"
  },
  {
    "text": "make sure that you're thinking about how are we kind of defining all of these different components and integrating",
    "start": "2975030",
    "end": "2980370"
  },
  {
    "text": "that into a way that we can we can easily coordinate that across all of our different environments so the next",
    "start": "2980370",
    "end": "2988020"
  },
  {
    "text": "practice is about ID ease and developer tools so this is kind of the last one",
    "start": "2988020",
    "end": "2995040"
  },
  {
    "text": "that we're discussing here but I think the key to this is ensuring that you have the tooling in place for your",
    "start": "2995040",
    "end": "3001400"
  },
  {
    "text": "team's to be able to repeatedly validate the functionality of the services you're",
    "start": "3001400",
    "end": "3006980"
  },
  {
    "text": "building locally in your own development environment so that they run the same way that they do in the cloud now the",
    "start": "3006980",
    "end": "3013880"
  },
  {
    "text": "approach that you use for this again is going to depend a little bit on what technologies you're using so if you're",
    "start": "3013880",
    "end": "3020360"
  },
  {
    "text": "going surplus if you're using something like a lambda using Sam or the serverless application model is a great mechanism for this so",
    "start": "3020360",
    "end": "3027470"
  },
  {
    "text": "Sam gives you the ability to invoke things locally in debug functions from",
    "start": "3027470",
    "end": "3032750"
  },
  {
    "text": "your own IDE versus if you're using more of a containerized approach then you're",
    "start": "3032750",
    "end": "3038330"
  },
  {
    "text": "probably going to be running docker on your on your local development environments and debugging things",
    "start": "3038330",
    "end": "3043490"
  },
  {
    "text": "directly there another aspect of this to think about is you know this concept",
    "start": "3043490",
    "end": "3049460"
  },
  {
    "text": "that we call cloud side development so I think very often you know people",
    "start": "3049460",
    "end": "3055220"
  },
  {
    "text": "have have had this mindset for years that I should be able to run my IDE in my development environment without any",
    "start": "3055220",
    "end": "3061010"
  },
  {
    "text": "kind of internet connection right if I know I know if I'm on an airplane and I don't want to pay for Wi-Fi I should",
    "start": "3061010",
    "end": "3066950"
  },
  {
    "text": "still be able to run my entire stack locally on my laptop I think that kind of mindset is starting to break down a",
    "start": "3066950",
    "end": "3075230"
  },
  {
    "text": "little bit as we move to this more kind of distributed micro-services architecture I don't think it's always",
    "start": "3075230",
    "end": "3080540"
  },
  {
    "text": "realistic to think that you're going to be able to set everything up to run on your own laptop and we've got a lot of",
    "start": "3080540",
    "end": "3086870"
  },
  {
    "text": "customers and a lot of teams internal to Amazon that are that that have moved away from this idea and actually",
    "start": "3086870",
    "end": "3093860"
  },
  {
    "text": "consumed real live cloud resources as part of their local development test Suites so if you're using something like",
    "start": "3093860",
    "end": "3099260"
  },
  {
    "text": "dynamo DV tobacco service you don't have to use DynamoDB local as part of your test suite it's okay to actually create",
    "start": "3099260",
    "end": "3106040"
  },
  {
    "text": "a real live DynamoDB table in the developer isolated account and then connect to that as part of the test",
    "start": "3106040",
    "end": "3112190"
  },
  {
    "text": "suite so even the code is running locally in your development environment you're actually connecting to these other resources that are that are kind",
    "start": "3112190",
    "end": "3118880"
  },
  {
    "text": "of remote so to kind of sum up everything that we've talked about we've talked about a number of different sort",
    "start": "3118880",
    "end": "3124100"
  },
  {
    "start": "3121000",
    "end": "3121000"
  },
  {
    "text": "of practices everything from CI CD having these automated pipelines that allow you to very repeatedly deploy your",
    "start": "3124100",
    "end": "3132260"
  },
  {
    "text": "code and get it all the way through to production you know changes in the way that you think about monitoring and",
    "start": "3132260",
    "end": "3138350"
  },
  {
    "text": "observing your codes that you can consolidate this across all of these different services integrating security",
    "start": "3138350",
    "end": "3145100"
  },
  {
    "text": "through the entire lifecycle of your application using services and tools so",
    "start": "3145100",
    "end": "3150170"
  },
  {
    "text": "that you can manage applications holistically and then the last is really making sure that you've got that standardized local development",
    "start": "3150170",
    "end": "3156920"
  },
  {
    "text": "environment that you can use to to repeatedly build and test your application locally and so these steps",
    "start": "3156920",
    "end": "3164360"
  },
  {
    "text": "again just kind of tying this back are really what we see is the foundational components to be able to address the big",
    "start": "3164360",
    "end": "3171290"
  },
  {
    "text": "challenges that we looked at at the beginning so if we take a look at the",
    "start": "3171290",
    "end": "3178180"
  },
  {
    "text": "next slide here about kind of these issues that we looked at initially so small code changes having having",
    "start": "3178180",
    "end": "3185510"
  },
  {
    "text": "difficulty getting there pushed all the way to production you know automating that pipeline with CICE is going to be a critical step and kind",
    "start": "3185510",
    "end": "3193160"
  },
  {
    "text": "of resolving that having issues around kind of manual deployment so again see",
    "start": "3193160",
    "end": "3198500"
  },
  {
    "text": "sed in addition to using these kind of application frameworks or having definitions and deployment mechanisms",
    "start": "3198500",
    "end": "3205130"
  },
  {
    "text": "that wrap around your your entire system is the sort of important key they're",
    "start": "3205130",
    "end": "3211180"
  },
  {
    "text": "integrating your application security review process throughout the entire pipeline and automating as much of that",
    "start": "3211180",
    "end": "3218510"
  },
  {
    "text": "as possible ends up becoming a really critical step and really kind of getting from an organizational perspective",
    "start": "3218510",
    "end": "3224060"
  },
  {
    "text": "getting the security team on board with this idea getting them integrated into that process early",
    "start": "3224060",
    "end": "3230420"
  },
  {
    "text": "the visibility issue and really kind of having a strategic approach to how",
    "start": "3230420",
    "end": "3235820"
  },
  {
    "text": "you're monitoring and observing these different functions are these different services ensuring that they're all",
    "start": "3235820",
    "end": "3241120"
  },
  {
    "text": "contributing data about the operational characteristics about the errors and",
    "start": "3241120",
    "end": "3246800"
  },
  {
    "text": "things like that into a centralized system where you can see everything and get a full view end-to-end and then",
    "start": "3246800",
    "end": "3253040"
  },
  {
    "text": "finally you know again getting back to this idea of having automation and deploying the mechanisms that span",
    "start": "3253040",
    "end": "3258950"
  },
  {
    "text": "across everything from your local environment through to production and standardizing on the way that you're",
    "start": "3258950",
    "end": "3264770"
  },
  {
    "text": "managing that so you can get very consistent kind of results across all of your different yeah cross all of the",
    "start": "3264770",
    "end": "3271280"
  },
  {
    "text": "different environments that you're working in again is something that's important it's something that you should be investing in and thinking about from",
    "start": "3271280",
    "end": "3277880"
  },
  {
    "text": "the very beginning so just as kind of a next step taking a look at sort of where",
    "start": "3277880",
    "end": "3283580"
  },
  {
    "start": "3280000",
    "end": "3280000"
  },
  {
    "text": "do you go kind of next well you know there are a wide variety of services out there available from both AWS as well as",
    "start": "3283580",
    "end": "3291230"
  },
  {
    "text": "all of our partners that can help you address each of these different kind of issues again like we said each one of",
    "start": "3291230",
    "end": "3298250"
  },
  {
    "text": "the different practices that we talked about can be expanded on at lengthen so there's a lot of great content out there",
    "start": "3298250",
    "end": "3304520"
  },
  {
    "text": "that deep dives in each one of these different services as well as each of the different practices we talked about",
    "start": "3304520",
    "end": "3310810"
  },
  {
    "text": "and how you can leverage these kind of different services and different partner tools but I would encourage you to take",
    "start": "3310810",
    "end": "3316820"
  },
  {
    "text": "a look at you know what's available what can you load again to your cloud provider to other service providers so you can focus",
    "start": "3316820",
    "end": "3323440"
  },
  {
    "text": "on just building the the differentiated business functionality that matters to",
    "start": "3323440",
    "end": "3328750"
  },
  {
    "text": "your customers so yeah so the the kind of last note that I wanted to make is",
    "start": "3328750",
    "end": "3335560"
  },
  {
    "text": "you know thinking about this again getting all the way back to to the original point that we made about",
    "start": "3335560",
    "end": "3340740"
  },
  {
    "text": "innovation and experimentation at the end of the day you know the architectural concepts and the technical",
    "start": "3340740",
    "end": "3347980"
  },
  {
    "text": "details about how you actually go about building specific micro-services is great but you always need to make sure",
    "start": "3347980",
    "end": "3354250"
  },
  {
    "text": "that you're focused on how do we innovate faster how do we free developers in order to do those kinds of",
    "start": "3354250",
    "end": "3360010"
  },
  {
    "text": "experiments and fail without fear I think at the end of the day that's really the underlying justification for",
    "start": "3360010",
    "end": "3366730"
  },
  {
    "text": "why we're making these technical shifts and I think it's really important to kind of keep that top of mind as you go",
    "start": "3366730",
    "end": "3372100"
  },
  {
    "text": "through this journey so with that said that's that's all of the content that we have prepared for today we really",
    "start": "3372100",
    "end": "3378250"
  },
  {
    "text": "appreciate your your time and attention today and I will turn it over to Carmen",
    "start": "3378250",
    "end": "3384550"
  },
  {
    "text": "- yeah yeah awesome so just really quick to wrap it up and my apologies to those",
    "start": "3384550",
    "end": "3391240"
  },
  {
    "start": "3386000",
    "end": "3386000"
  },
  {
    "text": "who hung on today because it's we're running a little short on time and we're definitely going to follow up with each one of you individually for your QA",
    "start": "3391240",
    "end": "3397540"
  },
  {
    "text": "we're not going to let those go into the ether but you know you can see this is a very wide topic and it can take quite a",
    "start": "3397540",
    "end": "3404560"
  },
  {
    "text": "bit of time just to even go over it at a high level so thank you for sticking with us but to close it out like I just",
    "start": "3404560",
    "end": "3410440"
  },
  {
    "text": "want to just highlight our partners as well because they play a super important role in helping you as a customer achieve success right so right here we",
    "start": "3410440",
    "end": "3418090"
  },
  {
    "text": "have slalom who essentially is one of our consulting partners and they can help you in this space and realize this",
    "start": "3418090",
    "end": "3424390"
  },
  {
    "text": "this this reduced time the market when building micro services for your applications on top of AWS they're not",
    "start": "3424390",
    "end": "3430840"
  },
  {
    "text": "obviously the only consulting partner out there we have many many more we chose them because again they have",
    "start": "3430840",
    "end": "3436330"
  },
  {
    "text": "multiple competencies in this space but there's many other consulting partners out there that you can find on our",
    "start": "3436330",
    "end": "3441580"
  },
  {
    "text": "consulting partner competency page that also hold these competencies that can help you so if you want to check that",
    "start": "3441580",
    "end": "3446980"
  },
  {
    "text": "out you can learn a little bit more about them and we also have our eyes",
    "start": "3446980",
    "end": "3452180"
  },
  {
    "text": "be partners right at the end of the day the competency program has categories for both and they help their customers",
    "start": "3452180",
    "end": "3457609"
  },
  {
    "text": "migrate build and run application and infrastructure on AWS and the competency",
    "start": "3457609",
    "end": "3462950"
  },
  {
    "text": "is intended to highlight these partners who help you as the customer with their workloads while taking advantage of",
    "start": "3462950",
    "end": "3468530"
  },
  {
    "text": "things like security and architectural best practices um it's it's it's meant to be a clear recommendation for you to",
    "start": "3468530",
    "end": "3475970"
  },
  {
    "text": "essentially pick the partner that helps you achieve success and offer a low-risk",
    "start": "3475970",
    "end": "3481309"
  },
  {
    "text": "path to achieve that success on AWS so the bar is extremely high we only admit partners with a proven track record in",
    "start": "3481309",
    "end": "3487940"
  },
  {
    "text": "essentially enabling customers and have the sufficient skilled personnel to perform multiple significant projects",
    "start": "3487940",
    "end": "3494690"
  },
  {
    "text": "thank you again for for attending today's webinar and staying with us you know we did go a little bit long and I",
    "start": "3494690",
    "end": "3501260"
  },
  {
    "text": "apologize there if you do have any other questions feel free to reach out to us again these webinars will be on demand",
    "start": "3501260",
    "end": "3507859"
  },
  {
    "text": "so thanks again for your time and have a great one",
    "start": "3507859",
    "end": "3512380"
  }
]