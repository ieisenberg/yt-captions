[
  {
    "start": "0",
    "end": "137000"
  },
  {
    "text": "- Hi, my name is Sapta,",
    "start": "630",
    "end": "2460"
  },
  {
    "text": "and I'm a Senior Product Manager at AWS.",
    "start": "2460",
    "end": "4460"
  },
  {
    "text": "Welcome to the demo series",
    "start": "5370",
    "end": "6630"
  },
  {
    "text": "on how to build a weather\nstation using AWS ExpressLink.",
    "start": "6630",
    "end": "10020"
  },
  {
    "text": "For those who are new to ExpressLink,",
    "start": "10020",
    "end": "12330"
  },
  {
    "text": "it is a connectivity\nsoftware that powers a range",
    "start": "12330",
    "end": "15150"
  },
  {
    "text": "of hardware modules developed\nand offered by AWS partners",
    "start": "15150",
    "end": "18720"
  },
  {
    "text": "such as Espressif, Infineon, and u-blox.",
    "start": "18720",
    "end": "21449"
  },
  {
    "text": "These connect-ready modules\ninclude AWS-validated software",
    "start": "21450",
    "end": "25710"
  },
  {
    "text": "which makes it faster and easier\nfor you to securely connect",
    "start": "25710",
    "end": "29849"
  },
  {
    "text": "almost any product to the cloud",
    "start": "29850",
    "end": "31860"
  },
  {
    "text": "in a fraction of time and cost.",
    "start": "31860",
    "end": "33990"
  },
  {
    "text": "Products include medical\ndevices, industry sensors,",
    "start": "33990",
    "end": "36570"
  },
  {
    "text": "and consumer products.",
    "start": "36570",
    "end": "37670"
  },
  {
    "text": "Developers of all skill levels",
    "start": "39390",
    "end": "41340"
  },
  {
    "text": "can quickly and easily\ntransform their products",
    "start": "41340",
    "end": "44460"
  },
  {
    "text": "into IoT devices",
    "start": "44460",
    "end": "45690"
  },
  {
    "text": "without having to merge\nlarge amounts of code",
    "start": "45690",
    "end": "49260"
  },
  {
    "text": "or have a deep understanding",
    "start": "49260",
    "end": "50760"
  },
  {
    "text": "of the underlying implementation.",
    "start": "50760",
    "end": "52350"
  },
  {
    "text": "The connectivity modules",
    "start": "52350",
    "end": "54030"
  },
  {
    "text": "come preprovisioned with\nsecurity credentials,",
    "start": "54030",
    "end": "56850"
  },
  {
    "text": "allowing developers to offload",
    "start": "56850",
    "end": "58890"
  },
  {
    "text": "the complex networking and\ncryptography tasks to the module,",
    "start": "58890",
    "end": "62489"
  },
  {
    "text": "and develop secure IoT products",
    "start": "62490",
    "end": "64290"
  },
  {
    "text": "in weeks rather than months.",
    "start": "64290",
    "end": "66870"
  },
  {
    "text": "Modules that use AWS IoT\nExpressLink are preprogrammed",
    "start": "66870",
    "end": "71220"
  },
  {
    "text": "to seamlessly integrate with\nover 200 AWS IoT services,",
    "start": "71220",
    "end": "76200"
  },
  {
    "text": "including AWS IoT Core.",
    "start": "76200",
    "end": "78719"
  },
  {
    "text": "Please visit our product catalog page",
    "start": "78720",
    "end": "81420"
  },
  {
    "text": "which is in the description link below.",
    "start": "81420",
    "end": "84090"
  },
  {
    "text": "In addition to building\nthe weather station,",
    "start": "84090",
    "end": "86909"
  },
  {
    "text": "we will show you how\nwith a few lines of code,",
    "start": "86910",
    "end": "89550"
  },
  {
    "text": "you can easily connect, send,\nand receive data from AWS.",
    "start": "89550",
    "end": "93720"
  },
  {
    "text": "In the following video\nof this demo series,",
    "start": "93720",
    "end": "96750"
  },
  {
    "text": "you will learn how to\nbuild the weather station",
    "start": "96750",
    "end": "99000"
  },
  {
    "text": "using the required hardware.",
    "start": "99000",
    "end": "101010"
  },
  {
    "text": "In the third video, we will\ndemonstrate the ease of writing",
    "start": "101010",
    "end": "104490"
  },
  {
    "text": "a simple source code with\nfew lines using ExpressLink",
    "start": "104490",
    "end": "108570"
  },
  {
    "text": "to build the weather station.",
    "start": "108570",
    "end": "109860"
  },
  {
    "text": "In the fourth video,",
    "start": "109860",
    "end": "111150"
  },
  {
    "text": "we will go through the steps\nto add an ExpressLink module",
    "start": "111150",
    "end": "115260"
  },
  {
    "text": "to an AWS IoT Console",
    "start": "115260",
    "end": "117660"
  },
  {
    "text": "and show real-time data.",
    "start": "117660",
    "end": "119670"
  },
  {
    "text": "In the fifth video, we will\nstore data on the AWS Timestream",
    "start": "119670",
    "end": "124670"
  },
  {
    "text": "with just one line of SQL code.",
    "start": "124800",
    "end": "127470"
  },
  {
    "text": "And lastly, in the final\nvideo, we will demonstrate",
    "start": "127470",
    "end": "129990"
  },
  {
    "text": "how to visualize data using\nAmazon Managed Grafana.",
    "start": "129990",
    "end": "133350"
  },
  {
    "text": "So without further ado,",
    "start": "133350",
    "end": "134940"
  },
  {
    "text": "let me introduce our technical experts.",
    "start": "134940",
    "end": "137280"
  },
  {
    "start": "137000",
    "end": "156000"
  },
  {
    "text": "- Hi, my name is Dan Gross,",
    "start": "137280",
    "end": "139530"
  },
  {
    "text": "and I am a Senior Developer Advocate",
    "start": "139530",
    "end": "141510"
  },
  {
    "text": "for AWS IoT and FreeRTOS.",
    "start": "141510",
    "end": "143193"
  },
  {
    "text": "In this video series,",
    "start": "144510",
    "end": "145769"
  },
  {
    "text": "we'll be exploring hands-on engineering",
    "start": "145770",
    "end": "148290"
  },
  {
    "text": "and how we use ExpressLink",
    "start": "148290",
    "end": "149939"
  },
  {
    "text": "deploying a weather\nstation into the field.",
    "start": "149940",
    "end": "152820"
  },
  {
    "text": "We'll see some hardware, some\nsoftware, and some cloud.",
    "start": "152820",
    "end": "155970"
  },
  {
    "text": "- Hi, my name is Joe Julicher,",
    "start": "155970",
    "end": "157980"
  },
  {
    "start": "156000",
    "end": "399000"
  },
  {
    "text": "and I'm a Senior Software\nDevelopment Engineer",
    "start": "157980",
    "end": "160140"
  },
  {
    "text": "on ExpressLink at AWS.",
    "start": "160140",
    "end": "162360"
  },
  {
    "text": "I will be working alongside Dan and Sapta",
    "start": "162360",
    "end": "164610"
  },
  {
    "text": "to showcase how quickly and\neasily we've been able to build",
    "start": "164610",
    "end": "167820"
  },
  {
    "text": "the weather station using ExpressLink",
    "start": "167820",
    "end": "169620"
  },
  {
    "text": "and manage the data.",
    "start": "169620",
    "end": "170879"
  },
  {
    "text": "- [Dan] So here we have\nthe weather station sketch",
    "start": "170880",
    "end": "174960"
  },
  {
    "text": "that runs on the Arduino Uno.",
    "start": "174960",
    "end": "177273"
  },
  {
    "text": "You can see in the setup function",
    "start": "178830",
    "end": "181080"
  },
  {
    "text": "that we have a number of commands",
    "start": "181080",
    "end": "185940"
  },
  {
    "text": "that configure the ExpressLink module,",
    "start": "185940",
    "end": "189120"
  },
  {
    "text": "and these are only needed to run once.",
    "start": "189120",
    "end": "192062"
  },
  {
    "text": "Here, you can configure\nthe endpoint, the topic,",
    "start": "193500",
    "end": "197220"
  },
  {
    "text": "the SSID, and the passphrase.",
    "start": "197220",
    "end": "199773"
  },
  {
    "text": "Once those are configured,",
    "start": "201030",
    "end": "202950"
  },
  {
    "text": "you don't need to run those again.",
    "start": "202950",
    "end": "204650"
  },
  {
    "text": "And so we'll comment them out.",
    "start": "206580",
    "end": "209160"
  },
  {
    "text": "Then you can see in the setup command,",
    "start": "209160",
    "end": "211890"
  },
  {
    "text": "we have the AT CONNECT.",
    "start": "211890",
    "end": "215073"
  },
  {
    "text": "Now, when the board starts up,\nthe setup function will run,",
    "start": "216750",
    "end": "221583"
  },
  {
    "text": "and the serial connection",
    "start": "222540",
    "end": "224549"
  },
  {
    "text": "will then connect to the ExpressLink.",
    "start": "224550",
    "end": "228543"
  },
  {
    "text": "Here, we connect by issuing\nthe command AT+CONNECT.",
    "start": "229950",
    "end": "234847"
  },
  {
    "text": "It's that simple.",
    "start": "236880",
    "end": "237993"
  },
  {
    "text": "Now, when we wanna send data,",
    "start": "239280",
    "end": "241563"
  },
  {
    "text": "we go to the sendWeather\nfunction in the Arduino sketch.",
    "start": "242880",
    "end": "247230"
  },
  {
    "text": "And here,",
    "start": "247230",
    "end": "248193"
  },
  {
    "text": "we have AT+CONNECT again",
    "start": "250050",
    "end": "253020"
  },
  {
    "text": "just to make sure that\nwe're still connected,",
    "start": "253020",
    "end": "255240"
  },
  {
    "text": "and then we issue\nAT+SEND1 over the serial.",
    "start": "255240",
    "end": "260239"
  },
  {
    "text": "And there, we send all of\nour weather station data",
    "start": "260280",
    "end": "263820"
  },
  {
    "text": "in JSON format,",
    "start": "263820",
    "end": "265470"
  },
  {
    "text": "and that's all you need to do.",
    "start": "265470",
    "end": "267300"
  },
  {
    "text": "- [Joe] You just heard how simple it is",
    "start": "267300",
    "end": "268949"
  },
  {
    "text": "to set up the software to\ncommunicate within ExpressLink",
    "start": "268950",
    "end": "271890"
  },
  {
    "text": "to make the connections in the cloud.",
    "start": "271890",
    "end": "273930"
  },
  {
    "text": "Very quickly, I wanna show an example",
    "start": "273930",
    "end": "275639"
  },
  {
    "text": "of the connections needed\nfrom the post microcontroller",
    "start": "275640",
    "end": "278850"
  },
  {
    "text": "to an ExpressLink device",
    "start": "278850",
    "end": "280230"
  },
  {
    "text": "to actually show the hardware connections.",
    "start": "280230",
    "end": "283350"
  },
  {
    "text": "So this particular\nschematic you see on screen",
    "start": "283350",
    "end": "286320"
  },
  {
    "text": "is a design I'm doing\nfor a different project",
    "start": "286320",
    "end": "289830"
  },
  {
    "text": "for the Open Hardware Group.",
    "start": "289830",
    "end": "291000"
  },
  {
    "text": "And this one is using a\nESP32-C3-based ExpressLink",
    "start": "291000",
    "end": "296000"
  },
  {
    "text": "from Espressif.",
    "start": "296130",
    "end": "297840"
  },
  {
    "text": "In this design,",
    "start": "297840",
    "end": "298673"
  },
  {
    "text": "you see this is the\nminimum connections needed.",
    "start": "298673",
    "end": "302190"
  },
  {
    "text": "We have just a couple of bypass capacitors",
    "start": "302190",
    "end": "304530"
  },
  {
    "text": "for power filtering.",
    "start": "304530",
    "end": "305970"
  },
  {
    "text": "This design needs to have a\n32-kilohertz crystal oscillator",
    "start": "305970",
    "end": "310020"
  },
  {
    "text": "for time-keeping purposes.",
    "start": "310020",
    "end": "311849"
  },
  {
    "text": "It helps when you're\ndoing the sleep command,",
    "start": "311850",
    "end": "313650"
  },
  {
    "text": "and also it maintains a real-time clock",
    "start": "313650",
    "end": "315600"
  },
  {
    "text": "inside the ExpressLink",
    "start": "315600",
    "end": "317280"
  },
  {
    "text": "for validating certificates\nand other security functions.",
    "start": "317280",
    "end": "321510"
  },
  {
    "text": "And then there's the connections\nto the host processor.",
    "start": "321510",
    "end": "324300"
  },
  {
    "text": "The connections to the\nhost processor at a minimum",
    "start": "324300",
    "end": "326669"
  },
  {
    "text": "are just the receive and\nthe transmit signals.",
    "start": "326670",
    "end": "329460"
  },
  {
    "text": "But for a more advanced application,",
    "start": "329460",
    "end": "331470"
  },
  {
    "text": "you'll also want the event\nfor getting synchronous events",
    "start": "331470",
    "end": "335220"
  },
  {
    "text": "back from the ExpressLink\nlike a connect or disconnect.",
    "start": "335220",
    "end": "338400"
  },
  {
    "text": "You also want WAKE and RESET.",
    "start": "338400",
    "end": "340650"
  },
  {
    "text": "The WAKE is so that you\ncan wake up an ExpressLink",
    "start": "340650",
    "end": "342810"
  },
  {
    "text": "that you have put to sleep.",
    "start": "342810",
    "end": "344160"
  },
  {
    "text": "You might put an ExpressLink\nto sleep to save power.",
    "start": "344160",
    "end": "347040"
  },
  {
    "text": "And then you'll use the RESET signal",
    "start": "347040",
    "end": "348990"
  },
  {
    "text": "if something were to go wrong",
    "start": "348990",
    "end": "350554"
  },
  {
    "text": "and you need to reset the ExpressLink",
    "start": "350554",
    "end": "353099"
  },
  {
    "text": "all the way back to its initial states.",
    "start": "353100",
    "end": "355110"
  },
  {
    "text": "Not the factory reset, this\nwill just be a power-on reset.",
    "start": "355110",
    "end": "358232"
  },
  {
    "text": "So those are all the signals.",
    "start": "360120",
    "end": "361650"
  },
  {
    "text": "Putting that schematic down",
    "start": "361650",
    "end": "363090"
  },
  {
    "text": "next to your existing host processor,",
    "start": "363090",
    "end": "365280"
  },
  {
    "text": "hooking at these five connections",
    "start": "365280",
    "end": "367470"
  },
  {
    "text": "allows your ExpressLink to\nenable an IoT connection to AWS",
    "start": "367470",
    "end": "372470"
  },
  {
    "text": "for any host processor out there.",
    "start": "372540",
    "end": "374580"
  },
  {
    "text": "We've even connected this to\nsomething like the PIC10F200,",
    "start": "374580",
    "end": "378060"
  },
  {
    "text": "which only has six IO\npens and 64 bytes of RAM,",
    "start": "378060",
    "end": "382050"
  },
  {
    "text": "and ExpressLink was able to get",
    "start": "382050",
    "end": "383400"
  },
  {
    "text": "that simplistic application\nall the way to the top.",
    "start": "383400",
    "end": "386054"
  },
  {
    "text": "(upbeat music)",
    "start": "386054",
    "end": "389219"
  },
  {
    "text": "- Thanks, Dan and Joe, for\nintroducing us to AWS ExpressLink",
    "start": "389220",
    "end": "393270"
  },
  {
    "text": "and showing how simple it is to use.",
    "start": "393270",
    "end": "396121"
  },
  {
    "text": "(upbeat music)",
    "start": "396122",
    "end": "398705"
  }
]