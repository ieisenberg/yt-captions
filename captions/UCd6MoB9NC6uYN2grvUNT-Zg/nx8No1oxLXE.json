[
  {
    "start": "0",
    "end": "118000"
  },
  {
    "text": "right we'll get started um thanks for joining us this morning we have a really good",
    "start": "1280",
    "end": "6480"
  },
  {
    "text": "session this morning just like the way as you get on planes to let everyone know this session is",
    "start": "6480",
    "end": "12639"
  },
  {
    "text": "about understanding database options on aws if you if you are here for",
    "start": "12639",
    "end": "18240"
  },
  {
    "text": "database options you are in the right place i have a great honor and pleasure to",
    "start": "18240",
    "end": "25439"
  },
  {
    "text": "join me this morning three really good speakers so hopefully i'll set up the stage for them",
    "start": "25439",
    "end": "31359"
  },
  {
    "text": "and they'll take it from that point onwards let me let's see how does this work",
    "start": "31359",
    "end": "44239"
  },
  {
    "text": "two okay",
    "start": "44239",
    "end": "47038"
  },
  {
    "text": "there you go so today's discussion is about understanding database options in our classic retail mindset we offer",
    "start": "55039",
    "end": "61760"
  },
  {
    "text": "you a lot of choices on aws and we will describe the different choices that are available",
    "start": "61760",
    "end": "67280"
  },
  {
    "text": "to you to make great applications as i was mentioning earlier i have the distinguished honor of being",
    "start": "67280",
    "end": "73200"
  },
  {
    "text": "joined by a couple of really excellent excellent speakers um",
    "start": "73200",
    "end": "78799"
  },
  {
    "text": "kimo rosenbaum from edmodo will join me after my initial introduction he'll be",
    "start": "78799",
    "end": "84799"
  },
  {
    "text": "followed with jay edwards from the obama for america campaign a very interesting use case",
    "start": "84799",
    "end": "90640"
  },
  {
    "text": "and he'll be followed by andy scalit cto of brand verity so great speakers",
    "start": "90640",
    "end": "97520"
  },
  {
    "text": "hopefully i set it up right for them each one of them will speak about a",
    "start": "97520",
    "end": "103280"
  },
  {
    "text": "particular way in which they have taught thought about their application and help to optimize manageability and scale",
    "start": "103280",
    "end": "110079"
  },
  {
    "text": "from an edmodo perspective a great social application for schools and students",
    "start": "110079",
    "end": "116320"
  },
  {
    "text": "talking about application velocity and how do you get to scale in a short amount of time that's obama",
    "start": "116320",
    "end": "122320"
  },
  {
    "start": "118000",
    "end": "118000"
  },
  {
    "text": "for america campaign j will speak to it and looking at the different options",
    "start": "122320",
    "end": "127759"
  },
  {
    "text": "there is always a sort of a pseudo-religious debate on yes sql versus nosql figure out what's",
    "start": "127759",
    "end": "135280"
  },
  {
    "text": "right and which one to use when there will be andy scala from brand verity and we'll take q and a towards the end",
    "start": "135280",
    "end": "142160"
  },
  {
    "text": "there will be handheld microphones i'll be running around with nl microphones if you have questions please save them towards the end of the",
    "start": "142160",
    "end": "148080"
  },
  {
    "text": "presentation we'll talk about it so before we begin to the database",
    "start": "148080",
    "end": "153519"
  },
  {
    "text": "options in detail i have the pressure to sort of recap what was discussed in the keynote if you",
    "start": "153519",
    "end": "159840"
  },
  {
    "text": "all attended the keynote you would have seen today we added one more option to the list of options available",
    "start": "159840",
    "end": "166879"
  },
  {
    "text": "to you we are introducing amazon redshift",
    "start": "166879",
    "end": "172080"
  },
  {
    "text": "redshift is a new database that's made for data warehouse it allows you to go from small number of",
    "start": "172080",
    "end": "179680"
  },
  {
    "text": "terabytes to a petabyte scale data warehouse you can start small and you can grow as",
    "start": "179680",
    "end": "186720"
  },
  {
    "text": "big as you would like just like the way other options that we provide we give you",
    "start": "186720",
    "end": "192800"
  },
  {
    "text": "full automated manageability and deployment and the best part is it's completely",
    "start": "192800",
    "end": "199760"
  },
  {
    "text": "standards based which means all your existing relational tools such as microstrategy jaspersoft",
    "start": "199760",
    "end": "206640"
  },
  {
    "text": "business objects cognos and all of those things they will work just that they will work",
    "start": "206640",
    "end": "212080"
  },
  {
    "text": "a lot better here's a quick high level overview of how it looks like",
    "start": "212080",
    "end": "218879"
  },
  {
    "start": "215000",
    "end": "215000"
  },
  {
    "text": "it's a new database engine that uses massively parallel processing architecture which means",
    "start": "218879",
    "end": "226000"
  },
  {
    "text": "it can use as many resources that you configure it with so if you have a terabyte of data or 10",
    "start": "226000",
    "end": "232159"
  },
  {
    "text": "terabytes of data then you can put it on a single node or a couple of nodes",
    "start": "232159",
    "end": "238000"
  },
  {
    "text": "versus tens of nodes and that will allow us it's to use all the different nodes that",
    "start": "238000",
    "end": "243680"
  },
  {
    "text": "are available you can configure up to 100 nodes to reach a petabyte scale",
    "start": "243680",
    "end": "250159"
  },
  {
    "text": "we have done a couple of neat things on this product we are using columnar storage format",
    "start": "250159",
    "end": "255680"
  },
  {
    "text": "so your queries are processed with nearly 10 times less i o than the traditional data store",
    "start": "255680",
    "end": "262720"
  },
  {
    "text": "we are using advanced compression technologies so the amount of data that's stored on the disk is a lot smaller than actual",
    "start": "262720",
    "end": "270000"
  },
  {
    "text": "leaf node that you might be feeding us we also are using as i described earlier",
    "start": "270000",
    "end": "275840"
  },
  {
    "text": "massively parallel processing which means if there are 10 nodes or 20 nodes or whatever you allow it to have then it",
    "start": "275840",
    "end": "283360"
  },
  {
    "text": "can use all the resources to serve your query with the consolidation taking place",
    "start": "283360",
    "end": "288800"
  },
  {
    "text": "at the leader node level as i said earlier it works with all your",
    "start": "288800",
    "end": "295280"
  },
  {
    "text": "popular engines so if you have business users who are familiar with microstrategy or jaspersoft or business objects",
    "start": "295280",
    "end": "302160"
  },
  {
    "text": "you don't have to change a thing for them behind the scenes you can go from something that's expensive slow and bad",
    "start": "302160",
    "end": "309600"
  },
  {
    "text": "to maintain to a red shift and all of a sudden your users will see much better",
    "start": "309600",
    "end": "315680"
  },
  {
    "text": "performance you will have head room to grow into data in terms of pricing a lot of the details",
    "start": "315680",
    "end": "322560"
  },
  {
    "text": "were disclosed in the keynote i'll just highlight from a from a three-year reserved instance perspective",
    "start": "322560",
    "end": "328960"
  },
  {
    "text": "for a terabyte per year you'll pay just under a thousand dollars that works out",
    "start": "328960",
    "end": "334320"
  },
  {
    "text": "to be about 23 cents per hour if i'm not mistaken 22.8 i think so that's some exciting",
    "start": "334320",
    "end": "341360"
  },
  {
    "text": "news we are adding to the list of options now let's get to um the real task at",
    "start": "341360",
    "end": "347360"
  },
  {
    "start": "345000",
    "end": "345000"
  },
  {
    "text": "hand all of us you know just following the theme of mars curiosity the mission is clear",
    "start": "347360",
    "end": "354400"
  },
  {
    "text": "we have to produce from zero to an app in some number of minutes possibly days",
    "start": "354400",
    "end": "361840"
  },
  {
    "text": "some number of users to millions of users in days possibly in months and perhaps",
    "start": "361840",
    "end": "369120"
  },
  {
    "text": "go from nothing to ipo for those of you in the startup arena in months well that part is totally up",
    "start": "369120",
    "end": "375680"
  },
  {
    "text": "to you the other two aws can help so we can help you with",
    "start": "375680",
    "end": "380720"
  },
  {
    "text": "our tools we can help you with our systems and we can help you with our databases",
    "start": "380720",
    "end": "385759"
  },
  {
    "text": "let's talk a little bit about focusing on your app this is typically the database",
    "start": "385759",
    "end": "391680"
  },
  {
    "text": "architecture that looks like most application architecture looks like this there is a load balancer where you are looking at how to",
    "start": "391680",
    "end": "398080"
  },
  {
    "text": "distribute the incoming load figure out what to block and what not to block it could be possibly a firewall as",
    "start": "398080",
    "end": "404000"
  },
  {
    "text": "well then you have an application here where much of your innovation goes and lastly the database tier",
    "start": "404000",
    "end": "411840"
  },
  {
    "start": "411000",
    "end": "411000"
  },
  {
    "text": "now this tag over time becomes your stack of worries what i",
    "start": "411840",
    "end": "417680"
  },
  {
    "text": "mean by already is you start with security scale and availability at the load balancer level",
    "start": "417680",
    "end": "422720"
  },
  {
    "text": "then you start have to think about innovation scale performance availability and so on so",
    "start": "422720",
    "end": "428720"
  },
  {
    "text": "forth in the application tier and as you move further down your number of issues start to multiply",
    "start": "428720",
    "end": "434479"
  },
  {
    "text": "you look at security innovation scale transactions performance durability availability",
    "start": "434479",
    "end": "440720"
  },
  {
    "text": "our view is that you should really focus on your time on the top two layers and",
    "start": "440720",
    "end": "447919"
  },
  {
    "text": "help offload much of that administrative task over to something that can do it really",
    "start": "447919",
    "end": "453680"
  },
  {
    "text": "well in doing that you have you know continuing the theme of redshift",
    "start": "453680",
    "end": "459840"
  },
  {
    "text": "you have a list of options available to you you can think about sql versus nosql architecture",
    "start": "459840",
    "end": "467440"
  },
  {
    "text": "why would you choose one over the other let's talk a little bit more in detail you could choose to do it yourself for",
    "start": "467440",
    "end": "474560"
  },
  {
    "text": "those of you who have the skill set time and resources available again",
    "start": "474560",
    "end": "480240"
  },
  {
    "text": "it's a very good option depending on your application or for those of you who want to focus a",
    "start": "480240",
    "end": "486160"
  },
  {
    "text": "lot more on your application we provide fully managed services as well",
    "start": "486160",
    "end": "491360"
  },
  {
    "text": "you could choose to go with the low cost option or a high cost option",
    "start": "491360",
    "end": "497039"
  },
  {
    "text": "unfortunately the high cost option is not available on aws so we'll take that off the table",
    "start": "497039",
    "end": "503680"
  },
  {
    "text": "looking at that in detail let's think about what is available if you wanted to do it yourself",
    "start": "504720",
    "end": "511120"
  },
  {
    "text": "plenty of choices you could go with mysql very popular open source stack you could manage it on",
    "start": "511120",
    "end": "517518"
  },
  {
    "text": "your own we give you a variety of instance classes storage options available to you",
    "start": "517519",
    "end": "523760"
  },
  {
    "text": "you could also go with various versions of oracle standard edition enterprise edition and so on so forth",
    "start": "523760",
    "end": "529120"
  },
  {
    "text": "sql server all the different flavors are available you could also look at more emerging things like mariadb",
    "start": "529120",
    "end": "534880"
  },
  {
    "text": "or a more popular postgres so the number of choices available to you when you take things under your control",
    "start": "534880",
    "end": "541360"
  },
  {
    "text": "is pretty high in terms of being available and do-it-yourself model",
    "start": "541360",
    "end": "546959"
  },
  {
    "text": "you could also choose to offload some of those administrative tasks to aws so that we can automatically",
    "start": "546959",
    "end": "554000"
  },
  {
    "text": "apply the patches the upgrades take care of scaling and all of that stuff",
    "start": "554000",
    "end": "559920"
  },
  {
    "text": "that's my sequel oracle and sql server those are three choices that we offer today",
    "start": "559920",
    "end": "567200"
  },
  {
    "text": "in a similar way architecturally once you think about sql is not the right choice for you and",
    "start": "567600",
    "end": "573040"
  },
  {
    "text": "we'll talk a little bit more about why would you choose to go with the nosql option you could go with a number of really",
    "start": "573040",
    "end": "579680"
  },
  {
    "text": "good choices mongodb is available on aws cassandra redis and memcache each one of these",
    "start": "579680",
    "end": "587279"
  },
  {
    "text": "engines gives you a specific flexibility and control and power that you can deploy your applications",
    "start": "587279",
    "end": "593680"
  },
  {
    "text": "really well you could also choose to go with just like the way we talked about",
    "start": "593680",
    "end": "598880"
  },
  {
    "text": "fully managed relational database services you could go with a fully managed nosql service",
    "start": "598880",
    "end": "605519"
  },
  {
    "text": "we offer a dynamodb we'll talk a little bit more about what that gives you elastic cache from a memcached service",
    "start": "605519",
    "end": "611680"
  },
  {
    "text": "perspective simpledb all these choices are available to you today to offload your stack of worries",
    "start": "611680",
    "end": "619120"
  },
  {
    "text": "to aws so which one should you choose let's",
    "start": "619120",
    "end": "624480"
  },
  {
    "start": "621000",
    "end": "621000"
  },
  {
    "text": "think about the kind of questions that i often get asked by customers i often get asked by customers should i",
    "start": "624480",
    "end": "631839"
  },
  {
    "text": "use sql or nosql should i use mysql on ec2 or on rds should i use mongodb cassandra",
    "start": "631839",
    "end": "640240"
  },
  {
    "text": "or dynamodb should i use redis or memcache or elastic cache i take a step back",
    "start": "640240",
    "end": "647680"
  },
  {
    "text": "and i always think about are these the right questions i think the right questions might be",
    "start": "647680",
    "end": "652720"
  },
  {
    "start": "651000",
    "end": "651000"
  },
  {
    "text": "really to focus on your app before you pick the tool let's think a little bit more about",
    "start": "652720",
    "end": "658399"
  },
  {
    "text": "the type of application you're building the time in which you're building the customer you're trying to serve and",
    "start": "658399",
    "end": "664800"
  },
  {
    "text": "the scale that you need to operate so first question might be what are my scale and latency needs how",
    "start": "664800",
    "end": "671200"
  },
  {
    "text": "fast do i need to grow how quickly do i need to serve these requests what are my transactional semantics how",
    "start": "671200",
    "end": "678560"
  },
  {
    "text": "do i need to think about applying transactions and possibly rolling back",
    "start": "678560",
    "end": "683600"
  },
  {
    "text": "is there a complex multi-table kind of query involved or is it simple key value store those",
    "start": "683600",
    "end": "690480"
  },
  {
    "text": "are the kind of questions first you ought to be thinking about consistency plays a huge role",
    "start": "690480",
    "end": "695680"
  },
  {
    "text": "do you want to be able to write a bunch of transactions and be able to read in a consistent way",
    "start": "695680",
    "end": "701440"
  },
  {
    "text": "across transactions that places some restrictions on the list of choices that you have",
    "start": "701440",
    "end": "707680"
  },
  {
    "text": "you should also think about what your read write mix looks like is this a read heavy application is this",
    "start": "707680",
    "end": "713680"
  },
  {
    "text": "a right heavy application what kind of storage do i need is it lots of storage",
    "start": "713680",
    "end": "718720"
  },
  {
    "text": "or is it small amount of storage and how often am i accessing the data from an iops",
    "start": "718720",
    "end": "724480"
  },
  {
    "text": "perspective is my application consists of small number of transactions infrequently",
    "start": "724480",
    "end": "730079"
  },
  {
    "text": "accessed but it's mission critical or large number of transactions frequently",
    "start": "730079",
    "end": "735279"
  },
  {
    "text": "accessed also mission critical with minimal latency those are the kind of questions",
    "start": "735279",
    "end": "741040"
  },
  {
    "text": "that lead you to think about the different choices that are applicable to your applications",
    "start": "741040",
    "end": "746959"
  },
  {
    "text": "here is some factor again i would not portray this to be an exhaustive list",
    "start": "746959",
    "end": "752079"
  },
  {
    "start": "747000",
    "end": "747000"
  },
  {
    "text": "and i'll highlight couple of them i think it's important for you to sort of create your own vectors of",
    "start": "752079",
    "end": "758959"
  },
  {
    "text": "evaluation if you will it's more than it's not sufficient to just think about a particular technology",
    "start": "758959",
    "end": "765440"
  },
  {
    "text": "and figure out how to fit it it's really important for you to think about the list of characteristics that you",
    "start": "765440",
    "end": "770880"
  },
  {
    "text": "want to put in your application for example you might think about the business logic of your application",
    "start": "770880",
    "end": "776480"
  },
  {
    "text": "if it is involved multiple transactions and if it involves normalized tables you might want to go",
    "start": "776480",
    "end": "782240"
  },
  {
    "text": "with a sql approach but if it's a web app with lots of users",
    "start": "782240",
    "end": "787360"
  },
  {
    "text": "and that's scaling really quickly and it's a shopping cart style application or it's a game style application you",
    "start": "787360",
    "end": "794240"
  },
  {
    "text": "might want to think about nosql as an option same is true with scale",
    "start": "794240",
    "end": "800000"
  },
  {
    "text": "do you want to be responsible for managing the scaling aspects do you want to build your own",
    "start": "800000",
    "end": "806480"
  },
  {
    "text": "infrastructure code and scripts and other things to scale the application as your business",
    "start": "806480",
    "end": "811600"
  },
  {
    "text": "grows and many of us are fully capable of doing that and that's fantastic then you can use the sql approach",
    "start": "811600",
    "end": "818079"
  },
  {
    "text": "because sql gives you that power and tooling available to you there are also tools",
    "start": "818079",
    "end": "823680"
  },
  {
    "text": "available on aws where you can offload the scaling to aws",
    "start": "823680",
    "end": "829440"
  },
  {
    "text": "particularly in the case of dynamodb where the scaling is the engine's problem you just tell it how fast you want to scale",
    "start": "829440",
    "end": "836240"
  },
  {
    "text": "how far you want to scale and it takes care of it",
    "start": "836240",
    "end": "841440"
  },
  {
    "text": "availability again is a key criteria if you are an application and you are expecting the availability",
    "start": "841519",
    "end": "848560"
  },
  {
    "text": "constraints to be specific then under the sql architecture",
    "start": "848560",
    "end": "853839"
  },
  {
    "text": "you will have to assume there will be a failover it's not failure but there will be a",
    "start": "853839",
    "end": "859199"
  },
  {
    "text": "failover so you have to architect your application to make sure that you can operate it on multiple nodes",
    "start": "859199",
    "end": "865279"
  },
  {
    "text": "and if you would like to you can take control of it from a failover strategy perspective or you can offload it to",
    "start": "865279",
    "end": "871440"
  },
  {
    "text": "rds so these are architectural choices that we encourage our customers to think",
    "start": "871440",
    "end": "876959"
  },
  {
    "text": "deeply before picking a choice because there are there is no right or wrong answer there's only a list of",
    "start": "876959",
    "end": "884000"
  },
  {
    "text": "acceptable compromises and acceptable optimizations that you do to build your application",
    "start": "884000",
    "end": "891600"
  },
  {
    "text": "it's possible to use both of them so you based on the architecture you do for the front-end high-velocity",
    "start": "892000",
    "end": "897600"
  },
  {
    "text": "transactional application you could use a nosql with more durable business logic complex",
    "start": "897600",
    "end": "903760"
  },
  {
    "text": "transactions backed by sql architecture and we'll talk about that in the use cases factors to consider",
    "start": "903760",
    "end": "912399"
  },
  {
    "text": "again do it yourself other things to think about replication would you",
    "start": "912399",
    "end": "917519"
  },
  {
    "text": "like to be granular app managed or would you like it to be automatic you can think in terms of resources do",
    "start": "917519",
    "end": "924639"
  },
  {
    "text": "you have the skill set available on your team in order for you to make it work or do you want it to be offloaded what",
    "start": "924639",
    "end": "932480"
  },
  {
    "text": "is what are your time to market considerations do you want the application to be built and deployed in a short amount of time",
    "start": "932480",
    "end": "938639"
  },
  {
    "text": "or do you have time to make sure that it works right and it works to your satisfaction those",
    "start": "938639",
    "end": "943680"
  },
  {
    "text": "are the factors that will play a role in making this",
    "start": "943680",
    "end": "948800"
  },
  {
    "text": "here a couple of key things to think about first thing i would highlight is rds for those of you who don't know",
    "start": "948880",
    "end": "955120"
  },
  {
    "text": "this it's amazon managed fully managed sql database service",
    "start": "955120",
    "end": "960639"
  },
  {
    "text": "it gives you a choice of database engines it is simple and it's really push button style",
    "start": "960639",
    "end": "967279"
  },
  {
    "text": "with a single call to the api or a single push button on the console you can actually deploy",
    "start": "967279",
    "end": "973360"
  },
  {
    "text": "databases starting with five gigabyte all the way up to one terabyte with standard storage and provisioned",
    "start": "973360",
    "end": "979440"
  },
  {
    "text": "iop storage and so on so forth you can do that all without any",
    "start": "979440",
    "end": "984639"
  },
  {
    "text": "operational burden it's really driven by the console",
    "start": "984639",
    "end": "989440"
  },
  {
    "start": "989000",
    "end": "989000"
  },
  {
    "text": "what it allows you to do is to focus on the left hand side which is really around optimizing the",
    "start": "989759",
    "end": "995920"
  },
  {
    "text": "schema query performance and things like that and we'll have a couple of customers talk through that",
    "start": "995920",
    "end": "1002079"
  },
  {
    "text": "offload all the different issues related to backup and recovery patching configuration management software",
    "start": "1002079",
    "end": "1007600"
  },
  {
    "text": "upgrades all of that can be offloaded to the engine now it does come with some compromise",
    "start": "1007600",
    "end": "1015279"
  },
  {
    "text": "many of the things that you would normally take care of as a dba are available to you",
    "start": "1015279",
    "end": "1021120"
  },
  {
    "text": "you can manage multiple databases you can have account management you can tune various parameters you can",
    "start": "1021120",
    "end": "1027280"
  },
  {
    "text": "import and export using various connectivity tools but you do give up",
    "start": "1027280",
    "end": "1033120"
  },
  {
    "text": "some control in terms of having access to the box and having super user privileges we have",
    "start": "1033120",
    "end": "1039199"
  },
  {
    "text": "to do that so that we can think about security and make sure your box is well hardened and protected so this is a",
    "start": "1039199",
    "end": "1045918"
  },
  {
    "text": "choice again as a dba i'm comfortable not having super user access i am programmatically",
    "start": "1045919",
    "end": "1052480"
  },
  {
    "text": "creating and deleting databases i can manage it i can go faster then this is the right choice for you",
    "start": "1052480",
    "end": "1058960"
  },
  {
    "text": "if you want that level of control and sophistication you might want to think about doing it yourself",
    "start": "1058960",
    "end": "1064080"
  },
  {
    "text": "on ec2 elastic cache fully compatible memcache compatible",
    "start": "1064080",
    "end": "1070400"
  },
  {
    "text": "managed service again gives you a lot of flexibility power from a deployment perspective",
    "start": "1070400",
    "end": "1076480"
  },
  {
    "text": "and it gives you read scale from making your application go faster",
    "start": "1076480",
    "end": "1083280"
  },
  {
    "text": "dynamodb goes to the other end of the spectrum it's a fully managed nosql service",
    "start": "1083280",
    "end": "1089600"
  },
  {
    "text": "where you can store and retrieve virtually unlimited amount of data practically you",
    "start": "1089600",
    "end": "1094799"
  },
  {
    "text": "can go from a few megabytes all the way to terabyte as you scale",
    "start": "1094799",
    "end": "1100640"
  },
  {
    "text": "the application the engine will scale with you you can scale to millions of i o you can go with 10 iops",
    "start": "1100640",
    "end": "1107120"
  },
  {
    "text": "i o requests are a million i o requests literally by turning the dial you you",
    "start": "1107120",
    "end": "1113280"
  },
  {
    "text": "get consistent predictable performance regardless of scale",
    "start": "1113280",
    "end": "1118320"
  },
  {
    "text": "that's the beauty of this application this engine it gives you single digit millisecond",
    "start": "1118320",
    "end": "1123520"
  },
  {
    "text": "latencies so you can predict what your end user experience is going to be all you have to do is to dial up scaling",
    "start": "1123520",
    "end": "1130799"
  },
  {
    "text": "is the engine's problem not your problem you just have to tell it how far to scale",
    "start": "1130799",
    "end": "1136320"
  },
  {
    "text": "again without any of the operational burden the programming model a lot of the customers ask us often",
    "start": "1136320",
    "end": "1143039"
  },
  {
    "text": "is how quickly can i get to do this and it's relatively simple it fits on a",
    "start": "1143039",
    "end": "1149600"
  },
  {
    "text": "page in the interest of time i'll sort of skip through that more details are available on our detail",
    "start": "1149600",
    "end": "1155679"
  },
  {
    "text": "page so who are really successfully deploying these applications thousands and thousands of customers are",
    "start": "1155679",
    "end": "1162400"
  },
  {
    "start": "1160000",
    "end": "1160000"
  },
  {
    "text": "succeeding with these tools you can do that too there are three highlights here",
    "start": "1162400",
    "end": "1167600"
  },
  {
    "text": "edmodo runs a social app on top of our engine obama for america reached millions of",
    "start": "1167600",
    "end": "1174080"
  },
  {
    "text": "citizens in a short amount of time and brand variety analyzes billions of ads every single",
    "start": "1174080",
    "end": "1180080"
  },
  {
    "text": "day they use all these different tools and i let them speak to it",
    "start": "1180080",
    "end": "1185440"
  },
  {
    "text": "with that let me introduce you to kimo rosenbaum from edmodo",
    "start": "1185440",
    "end": "1193840"
  },
  {
    "text": "hello i'm kimo rosenbaum i'm actually an infrastructure architect at edmodo",
    "start": "1197120",
    "end": "1202480"
  },
  {
    "text": "uh we'll get into it so the educational community is really starting to embrace",
    "start": "1202480",
    "end": "1207679"
  },
  {
    "text": "the internet and its power to connect via traditional content delivery light net like netflix",
    "start": "1207679",
    "end": "1213200"
  },
  {
    "text": "youtube uh you know non-interactive websites and increasingly content interaction",
    "start": "1213200",
    "end": "1218400"
  },
  {
    "text": "like moodle khan academy and social media platforms like edmodo",
    "start": "1218400",
    "end": "1224640"
  },
  {
    "text": "so our mission is to connect all learners with the people and resources they need to reach their full potential",
    "start": "1224640",
    "end": "1230320"
  },
  {
    "text": "so as a as a social platform our goal is to help educators harness the power of social",
    "start": "1230320",
    "end": "1236000"
  },
  {
    "text": "media connect teachers and students you know to customize their classroom",
    "start": "1236000",
    "end": "1242000"
  },
  {
    "text": "using this platform teachers and students can collaborate they can share content like a video",
    "start": "1242000",
    "end": "1247520"
  },
  {
    "text": "related to a really recent lesson or links to other lessons and they can even take online quizzes",
    "start": "1247520",
    "end": "1253679"
  },
  {
    "text": "turn in assignments and there are third-party apps available like interactive textbooks",
    "start": "1253679",
    "end": "1259039"
  },
  {
    "text": "we are you know partnering with places like khan academy and whatnot it's available for various devices like",
    "start": "1259039",
    "end": "1265760"
  },
  {
    "text": "browsers iphones androids and whatnot and it's free for teachers students",
    "start": "1265760",
    "end": "1270880"
  },
  {
    "text": "and parents we have over a hundred thousand schools globally",
    "start": "1270880",
    "end": "1276720"
  },
  {
    "text": "it's been available in many different languages 14 million users i'd say maybe 99",
    "start": "1276720",
    "end": "1284159"
  },
  {
    "text": "percent of those are students we have over a million teachers and we",
    "start": "1284159",
    "end": "1289360"
  },
  {
    "text": "have a lot of parents and then there are also school admin accounts for so they get a dashboard where they can see",
    "start": "1289360",
    "end": "1295679"
  },
  {
    "text": "what their teachers are doing what their students are doing and you know graphs and things like that",
    "start": "1295679",
    "end": "1301519"
  },
  {
    "text": "so in the past year our traffic has doubled um and amazon was really nice because we",
    "start": "1302159",
    "end": "1308480"
  },
  {
    "text": "can scale up and not have to worry about you know hardware and managing that that growth we can just keep adding capacity",
    "start": "1308480",
    "end": "1315120"
  },
  {
    "text": "and manage our app every day a million visits a day it's interesting to note that our",
    "start": "1315120",
    "end": "1322159"
  },
  {
    "text": "traffic flow is during the school day so you know 8 am in the morning until 4 pm in the",
    "start": "1322159",
    "end": "1327440"
  },
  {
    "text": "afternoon our site is at its busiest and that that's really interesting because that means that um",
    "start": "1327440",
    "end": "1333600"
  },
  {
    "text": "students and teachers are using it in their classroom and around their classroom you know they're actually integrating it",
    "start": "1333600",
    "end": "1338640"
  },
  {
    "text": "into their learning the whole learning process it isn't something that's just you know at night time they'll go and do",
    "start": "1338640",
    "end": "1344080"
  },
  {
    "text": "it for a few minutes they're they're using it all day long our busiest time is thursday just before",
    "start": "1344080",
    "end": "1349200"
  },
  {
    "text": "lunch i don't know why so like weekends holiday summer time",
    "start": "1349200",
    "end": "1355039"
  },
  {
    "text": "it's very low traffic uh this is our architecture on aws it's",
    "start": "1355039",
    "end": "1362080"
  },
  {
    "text": "a fairly standard app that you'll see you know we probably see a lot of these diagrams",
    "start": "1362080",
    "end": "1367280"
  },
  {
    "text": "looking just like this in the next couple days we are mostly except for",
    "start": "1367280",
    "end": "1374960"
  },
  {
    "text": "some of our master databases each az we have you know the full stack and it's independent from each other so if one az",
    "start": "1374960",
    "end": "1381039"
  },
  {
    "text": "is having problems our other azs can can pick up pick up the load",
    "start": "1381039",
    "end": "1386159"
  },
  {
    "text": "our web teal web tier we do use auto scaling so in the morning you know just before 8",
    "start": "1386159",
    "end": "1391600"
  },
  {
    "text": "a.m we turn up 100 instances and those are running all day long and it you know six o'clock seven o'clock we",
    "start": "1391600",
    "end": "1397120"
  },
  {
    "text": "start down scaling turning off older instances this helps reduce costs",
    "start": "1397120",
    "end": "1402720"
  },
  {
    "text": "we do have a memcache tier running on ec2 that's split between our data cache and",
    "start": "1402720",
    "end": "1409039"
  },
  {
    "text": "our session cache and we have replicas per az to help reduce latency and for",
    "start": "1409039",
    "end": "1415360"
  },
  {
    "text": "for failover if you know 1az down our entire stack can still operate",
    "start": "1415360",
    "end": "1421760"
  },
  {
    "text": "our app is vertically sharded so what that means is for example we have all of our user data",
    "start": "1422080",
    "end": "1427520"
  },
  {
    "text": "in one master database are comments and posts in another database file uploads in yet another",
    "start": "1427520",
    "end": "1433600"
  },
  {
    "text": "database we have maybe i know seven or eight different sets of of data types each with their own master",
    "start": "1433600",
    "end": "1441360"
  },
  {
    "text": "and their own replicas we also have what we call ad hoc replicas that aren't part of the normal",
    "start": "1441360",
    "end": "1446960"
  },
  {
    "text": "user workflow so these come in handy for like our data science folks our marketing so they can run",
    "start": "1446960",
    "end": "1452159"
  },
  {
    "text": "long queries that may you know use up all the cpu all the ram on that instance without affecting how our website loads",
    "start": "1452159",
    "end": "1460720"
  },
  {
    "text": "and we use other services like amazon cloud watch s3 cloud front elb route 53 vpc",
    "start": "1460720",
    "end": "1468960"
  },
  {
    "text": "mostly all of the services",
    "start": "1468960",
    "end": "1473840"
  },
  {
    "text": "to talk about rds specifically some of the tools that we use so we're mostly we're primary rds",
    "start": "1474080",
    "end": "1480880"
  },
  {
    "text": "mysql so some of the tools we use are the restoring from snapshot you know",
    "start": "1480880",
    "end": "1486640"
  },
  {
    "text": "that's one button you can say restore from snapshot so this is really nice because you can",
    "start": "1486640",
    "end": "1491760"
  },
  {
    "text": "replicate your production environment in dev and in qa so what we do is after a major code push",
    "start": "1491760",
    "end": "1497520"
  },
  {
    "text": "or after a major schema change uh you know let that run free for a few days let users build up data and whatnot",
    "start": "1497520",
    "end": "1504480"
  },
  {
    "text": "then we'll take the snapshot restore it into our qa environment and so now our qa team has",
    "start": "1504480",
    "end": "1509840"
  },
  {
    "text": "you know usage patterns for our recent you know for a recent data set and in dev uh our",
    "start": "1509840",
    "end": "1516000"
  },
  {
    "text": "engineers can play with different schema different queries and in isolation and not worry about",
    "start": "1516000",
    "end": "1521360"
  },
  {
    "text": "messing anything up because if you know if the schema doesn't work out they can just delete that rds instance and restore from a known working",
    "start": "1521360",
    "end": "1528240"
  },
  {
    "text": "working point and with you know with rds we can turn up an",
    "start": "1528240",
    "end": "1533760"
  },
  {
    "text": "rds instance for each developer if we wanted to or if you know they need multiple instances they can turn up multiple",
    "start": "1533760",
    "end": "1539440"
  },
  {
    "text": "instances and do their own cluster replica creation is another one we use a",
    "start": "1539440",
    "end": "1544880"
  },
  {
    "text": "lot you know that's again one button and you have a replica if we know we're going to be seeing",
    "start": "1544880",
    "end": "1550320"
  },
  {
    "text": "increased load like the beginning of the school year or if there's a major like teacher conference or some educational event we",
    "start": "1550320",
    "end": "1556480"
  },
  {
    "text": "can add more replicas to handle like our reads or if marketing or data science needs",
    "start": "1556480",
    "end": "1561919"
  },
  {
    "text": "something else they can we can create another replica and they can do their queries and when",
    "start": "1561919",
    "end": "1567279"
  },
  {
    "text": "they're done we can shut those replicas down parameter tuning is something we do",
    "start": "1567279",
    "end": "1573039"
  },
  {
    "text": "often so with um rds you have an api to change parameters or you can go through the console and",
    "start": "1573039",
    "end": "1578240"
  },
  {
    "text": "change parameters these are things that you'd be you'd have to do you know on the file system with traditional mysql things like",
    "start": "1578240",
    "end": "1586080"
  },
  {
    "text": "how much ram to allocate to the tables uh what size your temp tables can go to maximum number of connections and",
    "start": "1586080",
    "end": "1592159"
  },
  {
    "text": "whatnot we have one parameter group per replica or per function",
    "start": "1592159",
    "end": "1598000"
  },
  {
    "text": "and this is something we're just starting to roll like roll across our fleet",
    "start": "1598000",
    "end": "1603200"
  },
  {
    "text": "and so like for example our ad hoc queries they have very large temp table sizes above what's usually recommended because",
    "start": "1603520",
    "end": "1609440"
  },
  {
    "text": "we don't care if they run out of ram since they're not in the customer the user workflow",
    "start": "1609440",
    "end": "1615120"
  },
  {
    "text": "another feature that's not on the slide is uh that's new is uh promoting a read replica to a master so",
    "start": "1615120",
    "end": "1621440"
  },
  {
    "text": "uh during the last amazon outage this came in very handy because you know this a-z was affected",
    "start": "1621440",
    "end": "1627120"
  },
  {
    "text": "and that had our master in it and i was like well do we wait for the am the az to recover we don't know how long",
    "start": "1627120",
    "end": "1634480"
  },
  {
    "text": "that's going to be or do we you know fail over to another a z so we made a decision push the button",
    "start": "1634480",
    "end": "1639600"
  },
  {
    "text": "that this you know read replica in azb is now master we go and set up our replicas and our",
    "start": "1639600",
    "end": "1645120"
  },
  {
    "text": "site is back up and people can post and share and whatnot",
    "start": "1645120",
    "end": "1650080"
  },
  {
    "text": "metrics collection so amazon is really good at providing",
    "start": "1650159",
    "end": "1655760"
  },
  {
    "text": "the underlying cloud watch so you get things like cpu usage",
    "start": "1655760",
    "end": "1660880"
  },
  {
    "text": "ram number of connections i would recommend also having like a database or an app level stats",
    "start": "1660880",
    "end": "1667520"
  },
  {
    "text": "something like collecti or cacti or monog so you know what kind of queries are happening on your your databases what's",
    "start": "1667520",
    "end": "1674080"
  },
  {
    "text": "in your cache you know how long those queries are taking",
    "start": "1674080",
    "end": "1678960"
  },
  {
    "text": "another tool we use is the procona toolkit for schema management and something we've",
    "start": "1679279",
    "end": "1686320"
  },
  {
    "text": "learned the hard way is if you have a complex query that's something like select star from inner",
    "start": "1686320",
    "end": "1691760"
  },
  {
    "text": "join and join and join outer join outer join our join select star from you know and that needs to be accessible",
    "start": "1691760",
    "end": "1697679"
  },
  {
    "text": "by users rather than having when a user clicks on the web page run that query if you can run it you",
    "start": "1697679",
    "end": "1703440"
  },
  {
    "text": "know from a cron job every couple minutes and normalize it into one table so what the user sees is just select star from",
    "start": "1703440",
    "end": "1710320"
  },
  {
    "text": "this table so and finally it's very important that you know your",
    "start": "1710320",
    "end": "1716799"
  },
  {
    "text": "application and know your data sundar touched on this a bit in rds abstracts and simplifies",
    "start": "1716799",
    "end": "1722480"
  },
  {
    "text": "the underlying infrastructure so you don't have to worry about the hardware or the the os or the mysql patching but you do have to",
    "start": "1722480",
    "end": "1729039"
  },
  {
    "text": "know your app and how your app interacts with your data set and how your users interact with that app",
    "start": "1729039",
    "end": "1736480"
  },
  {
    "text": "so that's something i would say recommend is know your app know your data set and know how rds can help",
    "start": "1736480",
    "end": "1744399"
  },
  {
    "text": "like know how amazon can help you use those things like if you know your app then you can utilize amazon services",
    "start": "1744399",
    "end": "1750559"
  },
  {
    "text": "even more efficiently and that's all i have let's see what the next slide is so next up is jay edwards",
    "start": "1750559",
    "end": "1756880"
  },
  {
    "text": "from obama for america thank you",
    "start": "1756880",
    "end": "1767840"
  },
  {
    "text": "well hello everybody i'm glad you could join us today um i am going to talk about",
    "start": "1770080",
    "end": "1778159"
  },
  {
    "text": "how obama for america used aws and specifically i'm going to focus on rds and some of the problems that it met",
    "start": "1778159",
    "end": "1785600"
  },
  {
    "text": "for us and i'm probably going to talk about dynamodb a little bit because it's pretty amazing me",
    "start": "1785600",
    "end": "1792480"
  },
  {
    "text": "i was the first dedicated dba at twitter which means i went from like one database to hundreds and hundreds of",
    "start": "1792480",
    "end": "1799760"
  },
  {
    "text": "databases uh i was the lead database engineer at ofa which isn't as impressive as it sounds",
    "start": "1799760",
    "end": "1806240"
  },
  {
    "text": "because there were only two of us um some of the",
    "start": "1806240",
    "end": "1813120"
  },
  {
    "start": "1809000",
    "end": "1809000"
  },
  {
    "text": "the problems or if we talk about obama for america you know you've probably been reading",
    "start": "1813120",
    "end": "1818960"
  },
  {
    "text": "some news articles you've seen some stuff on the web we were very technically sophisticated",
    "start": "1818960",
    "end": "1825279"
  },
  {
    "text": "for a political campaign that does not mean that we were what you",
    "start": "1825279",
    "end": "1830399"
  },
  {
    "text": "would consider like silicon valley technically sophisticated right we you know we weren't maintaining",
    "start": "1830399",
    "end": "1836240"
  },
  {
    "text": "our own branches of my sequel we weren't",
    "start": "1836240",
    "end": "1841360"
  },
  {
    "text": "committing code to open source projects the universe of people that we were",
    "start": "1841360",
    "end": "1847600"
  },
  {
    "text": "trying to to reach was not what you would consider web scale right you know",
    "start": "1847600",
    "end": "1853039"
  },
  {
    "text": "let's say there's 220 million people in america that are eligible to vote",
    "start": "1853039",
    "end": "1859600"
  },
  {
    "text": "maybe half of those people are actually registered to vote and maybe we're trying to reach 70",
    "start": "1859600",
    "end": "1865519"
  },
  {
    "text": "million people this is not by any means what you would",
    "start": "1865519",
    "end": "1870640"
  },
  {
    "text": "consider just you know billions of users crushing our website on a regular basis",
    "start": "1870640",
    "end": "1876720"
  },
  {
    "text": "what we did have was what i call hockey stick plus plus growth you can look",
    "start": "1876720",
    "end": "1883840"
  },
  {
    "text": "at what we did as in an 18-month period we started from zero and we built a",
    "start": "1883840",
    "end": "1890840"
  },
  {
    "text": "startup that raised 1.1 billion dollars of which about 690 million of that was",
    "start": "1890840",
    "end": "1898640"
  },
  {
    "text": "online and through mobile applications and then we tore everything down and",
    "start": "1898640",
    "end": "1904080"
  },
  {
    "text": "went home we were also particularly sensitive to",
    "start": "1904080",
    "end": "1909840"
  },
  {
    "text": "downtime now as you can imagine being an early employee of twitter down time i'm like whatever you know",
    "start": "1909840",
    "end": "1918480"
  },
  {
    "text": "the president does not think that way there were times where i'm like you know",
    "start": "1919360",
    "end": "1925600"
  },
  {
    "text": "if i could take two minutes of downtime i could upsize this rds instance",
    "start": "1925600",
    "end": "1931679"
  },
  {
    "text": "and and we would have this vertical scale we would have more ram we would have more cpu and it would be great and they'd be like",
    "start": "1931679",
    "end": "1937279"
  },
  {
    "text": "no you can't do that if you're down for two minutes that means the website's not taking",
    "start": "1937279",
    "end": "1942960"
  },
  {
    "text": "donations for two minutes and that means that that email that we sent and i'm sure some of you got some",
    "start": "1942960",
    "end": "1948480"
  },
  {
    "text": "of those emails you know that's that's tens of thousands of dollars or a hundred thousand dollars",
    "start": "1948480",
    "end": "1953840"
  },
  {
    "text": "of revenue and donations that we won't be able to take so you need to fix your problem a different way",
    "start": "1953840",
    "end": "1962399"
  },
  {
    "text": "you might have seen this graph and unfortunately i don't have a a particularly informative y-axis for",
    "start": "1962399",
    "end": "1968399"
  },
  {
    "text": "you but this graph measures",
    "start": "1968399",
    "end": "1973600"
  },
  {
    "text": "the growth in the number of calls made by what we called call tool so this",
    "start": "1973600",
    "end": "1978960"
  },
  {
    "text": "was you could get on our website you could dial a number and you could you could read a script to somebody",
    "start": "1978960",
    "end": "1984320"
  },
  {
    "text": "about why you should vote and that's not a hockey stick",
    "start": "1984320",
    "end": "1991600"
  },
  {
    "text": "because i've seen hockey sticks was anybody here at the keynote did",
    "start": "1991600",
    "end": "1998399"
  },
  {
    "start": "1995000",
    "end": "1995000"
  },
  {
    "text": "anybody make it to the very end and get to see the ofa architecture slide",
    "start": "1998399",
    "end": "2003760"
  },
  {
    "text": "all right this is about this big right you would need three slides",
    "start": "2003760",
    "end": "2011039"
  },
  {
    "text": "to display the entire architecture diagram",
    "start": "2011039",
    "end": "2016480"
  },
  {
    "text": "this is particularly an application called narwhal which is it's ofa sort of like",
    "start": "2016480",
    "end": "2024559"
  },
  {
    "text": "middleware maybe you could think of it as sort of an enterprise service bus we move data around from here and there",
    "start": "2024559",
    "end": "2031279"
  },
  {
    "text": "we had 200 applications that look about like this you can see we've got some rds read",
    "start": "2031279",
    "end": "2038080"
  },
  {
    "text": "replicas you know we're synchronizing across azs",
    "start": "2038080",
    "end": "2043440"
  },
  {
    "text": "there we go rds read replicas we're using elastic cache we're using dynamodb which by the way if",
    "start": "2045200",
    "end": "2051440"
  },
  {
    "text": "you're doing a hundred thousand writes you you do a hundred thousand writes",
    "start": "2051440",
    "end": "2056720"
  },
  {
    "text": "of 1k items per second you know how amazing that is and i",
    "start": "2056720",
    "end": "2062079"
  },
  {
    "text": "actually would do statistics i'd be like i have to load 300 million records in dynamo today i would crank it up",
    "start": "2062079",
    "end": "2067679"
  },
  {
    "text": "and you'd be like the longest it took to write 25 records was 6 milliseconds",
    "start": "2067679",
    "end": "2075200"
  },
  {
    "text": "so if you have some very right intensive or read intensive workloads dynamo is amazing now what are the",
    "start": "2075200",
    "end": "2082560"
  },
  {
    "start": "2081000",
    "end": "2081000"
  },
  {
    "text": "problems that we had at ofa that you probably have to you're always going to need more",
    "start": "2082560",
    "end": "2088480"
  },
  {
    "text": "databases we had just in production we had over 100 rds instances with",
    "start": "2088480",
    "end": "2095520"
  },
  {
    "text": "24 separate schemas 30 you know supporting different applications",
    "start": "2095520",
    "end": "2101359"
  },
  {
    "text": "everybody here i assume works someplace that has dbas how many of you have enough dbas",
    "start": "2101359",
    "end": "2109119"
  },
  {
    "text": "okay nobody has enough dbas right well some lucky guy over there does but i'm not counting them",
    "start": "2109119",
    "end": "2114480"
  },
  {
    "text": "so we had two people that could spend maybe half of our time doing kind of my",
    "start": "2114480",
    "end": "2120320"
  },
  {
    "text": "sequel administrative stuff so you go back to that 18-month time",
    "start": "2120320",
    "end": "2126079"
  },
  {
    "text": "frame we really had to to optimize for operational efficiency right",
    "start": "2126079",
    "end": "2131359"
  },
  {
    "text": "i couldn't say hey i got to spend three days building some replicas i have got to",
    "start": "2131359",
    "end": "2138960"
  },
  {
    "text": "you know take a snapshot of this database and restore it over there so somebody can run some crazy ad hoc",
    "start": "2139200",
    "end": "2145119"
  },
  {
    "text": "queries it's just we didn't have the time and we didn't have the resources",
    "start": "2145119",
    "end": "2150880"
  },
  {
    "text": "so instead of using my sequel on ac2 we used rds and people have talked about it chemo's",
    "start": "2150880",
    "end": "2158480"
  },
  {
    "text": "talked about it sundar's talked about it it is really like clicking a button you're like oh",
    "start": "2158480",
    "end": "2163760"
  },
  {
    "text": "man i'm getting some more reload i need another replica click the button there you go we've got another replica",
    "start": "2163760",
    "end": "2169520"
  },
  {
    "text": "my hardware now the hardware can take a few minutes but you're like i need to add another 500",
    "start": "2169520",
    "end": "2175920"
  },
  {
    "text": "gigabytes of storage space i need another 10 gigabytes of ram",
    "start": "2175920",
    "end": "2181839"
  },
  {
    "text": "you click a button and you go get your coffin you come back and it's done and it's really hard to overstate",
    "start": "2181839",
    "end": "2190560"
  },
  {
    "text": "how that changes the way you think about things when i worked at twitter a lot of times you'd be like oh we need to increase the",
    "start": "2190560",
    "end": "2197200"
  },
  {
    "text": "number of read replicas and and that was",
    "start": "2197200",
    "end": "2202160"
  },
  {
    "text": "that took some time you couldn't just add three read replicas and and",
    "start": "2202400",
    "end": "2207520"
  },
  {
    "text": "30 minutes later say hey everybody my read replicas are up you can start sending traffic to it",
    "start": "2207520",
    "end": "2214160"
  },
  {
    "text": "point in time restores also click the button uh which if you've ever done a point in",
    "start": "2214160",
    "end": "2220160"
  },
  {
    "text": "time restore with mysql is not something that you're just like i'm going to go do that right now hey we're ready to go i've got you that",
    "start": "2220160",
    "end": "2226320"
  },
  {
    "text": "database the way it looked last week",
    "start": "2226320",
    "end": "2229839"
  },
  {
    "text": "there however are sometimes you should not use rds",
    "start": "2231599",
    "end": "2236240"
  },
  {
    "text": "the first one is you can get much larger ec2 instances",
    "start": "2238400",
    "end": "2243520"
  },
  {
    "text": "than the current largest rds instance so if you think to yourself you know i",
    "start": "2243520",
    "end": "2249599"
  },
  {
    "text": "need 32 cores and 62 gigabytes of ram on my my sequel master",
    "start": "2249599",
    "end": "2256000"
  },
  {
    "text": "you can do that on an ec2 instance i might suggest that you need to go out horizontally if",
    "start": "2256000",
    "end": "2263359"
  },
  {
    "text": "you're in that case but you know maybe you can't do that if you have very sophisticated use cases",
    "start": "2263359",
    "end": "2271200"
  },
  {
    "text": "my favorite is the the frequent topology changes i was a real big fan of that at twitter",
    "start": "2271200",
    "end": "2276400"
  },
  {
    "text": "if you want to do something like master master replication which i don't recommend you do by the way but if you wanted to",
    "start": "2276400",
    "end": "2283359"
  },
  {
    "text": "you couldn't do that on rds if you wanted to",
    "start": "2283359",
    "end": "2288720"
  },
  {
    "text": "for whatever reason you know promote a slave to a master and rehome all of your existing replicas",
    "start": "2289440",
    "end": "2296160"
  },
  {
    "text": "off of it you can't do that with rds and finally if you need to replicate from the east",
    "start": "2296160",
    "end": "2303359"
  },
  {
    "text": "coast to the west coast because you're worried about hurricanes you can't do that but it is on the road",
    "start": "2303359",
    "end": "2309359"
  },
  {
    "text": "map sundar says it will be done very soon or you know sometime and finally you know do your dbas need",
    "start": "2309359",
    "end": "2317200"
  },
  {
    "text": "stuff to do right they're they're spending too much time on the internet they're on reddit too often",
    "start": "2317200",
    "end": "2322720"
  },
  {
    "text": "go ahead use my sequel you know that's give them something to do and i will of course be taking questions",
    "start": "2322720",
    "end": "2329200"
  },
  {
    "text": "after all of this but i would like everybody to give it up for andy",
    "start": "2329200",
    "end": "2341838"
  },
  {
    "text": "andy scala i'm doing the awkward movember mustache section of this session",
    "start": "2342079",
    "end": "2347599"
  },
  {
    "text": "but uh so i in all seriousness i'm cto at brand",
    "start": "2347599",
    "end": "2354320"
  },
  {
    "text": "verity uh a little background on us we find affiliate fraud",
    "start": "2354320",
    "end": "2359520"
  },
  {
    "text": "so it's a needle in a crawling and social media haystack a lot of data coming in and we're",
    "start": "2359520",
    "end": "2364720"
  },
  {
    "start": "2364000",
    "end": "2364000"
  },
  {
    "text": "working on behalf of companies like netflix intuit and zappos to help find them",
    "start": "2364720",
    "end": "2369760"
  },
  {
    "text": "find which of their marketing partners are doing a good job and which of them are defrauding them um",
    "start": "2369760",
    "end": "2377119"
  },
  {
    "text": "so uh we have kind of a modern startup model we've been around almost four years so",
    "start": "2377119",
    "end": "2383440"
  },
  {
    "text": "but we're bootstrapped we deal with big data we have a small team and we have no dedicated operations",
    "start": "2383440",
    "end": "2388960"
  },
  {
    "text": "staff so that changes the way we look at things a little bit we also make the assumption that new products",
    "start": "2388960",
    "end": "2394720"
  },
  {
    "text": "may fail and that's just part of our business model",
    "start": "2394720",
    "end": "2401040"
  },
  {
    "text": "we also look at ops time and dev time as equivalent because we don't have operation staff obviously developers end up dealing with",
    "start": "2401040",
    "end": "2407440"
  },
  {
    "text": "production issues when they come up given this kind of framework we like to",
    "start": "2407440",
    "end": "2414319"
  },
  {
    "text": "work with managed services because when you're developing against managed services you have to consider the",
    "start": "2414319",
    "end": "2420079"
  },
  {
    "text": "constraints that they have they will have constraints but once you've done this you're kind of free to",
    "start": "2420079",
    "end": "2428160"
  },
  {
    "text": "well maybe sit on the beach with a beer who knows because you don't have to do that admin",
    "start": "2428160",
    "end": "2434079"
  },
  {
    "start": "2433000",
    "end": "2433000"
  },
  {
    "text": "so for new products and markets i would say yes sql you can handle",
    "start": "2434079",
    "end": "2439200"
  },
  {
    "text": "things like ceo queries which many of you are probably familiar with like oh can we look at the slice of data from",
    "start": "2439200",
    "end": "2446800"
  },
  {
    "text": "florida from last december when the weather changed and whatnot it's very hard to answer those questions",
    "start": "2446800",
    "end": "2453280"
  },
  {
    "text": "when your query model is constrained but with a relational database you have a lot of flexibility there",
    "start": "2453280",
    "end": "2461599"
  },
  {
    "text": "so do you think you have big data punk well even if you do it might be worthwhile to prototype on",
    "start": "2461920",
    "end": "2467200"
  },
  {
    "text": "rds which is something that we do because we understand that the new products may fail uh we can get",
    "start": "2467200",
    "end": "2472880"
  },
  {
    "text": "along with an rds instance or a set of rds instances for some time to kind of see whether that product's",
    "start": "2472880",
    "end": "2479119"
  },
  {
    "text": "really going anywhere and if if it is then we can invest further into a nosql solution",
    "start": "2479119",
    "end": "2485839"
  },
  {
    "text": "if you're doing that style you can use a mysql on rds as kind of a big table",
    "start": "2485839",
    "end": "2492560"
  },
  {
    "text": "access model where you don't have a fully normalized database you you just work with single table and that can make",
    "start": "2492560",
    "end": "2499359"
  },
  {
    "text": "it easier to port to a nosql data store down the road that said",
    "start": "2499359",
    "end": "2505760"
  },
  {
    "text": "rds instances have grown quite a lot in their i o capabilities we've seen provisioned i o coming out",
    "start": "2505760",
    "end": "2512480"
  },
  {
    "text": "and also ssds have changed that landscape a lot so like for us what we could get away with",
    "start": "2512480",
    "end": "2518079"
  },
  {
    "text": "a few years ago on rds well on my sequel on ec2 on ebs at the time rds wasn't around yet",
    "start": "2518079",
    "end": "2524400"
  },
  {
    "text": "uh has really that landscape has changed and it's given us a lot more capability without having to bust into",
    "start": "2524400",
    "end": "2530400"
  },
  {
    "text": "the nosql toolbox uh other data stores do have that more",
    "start": "2530400",
    "end": "2536240"
  },
  {
    "text": "constrained query model as i mentioned so if you do have big data and you're going to have to go outside of",
    "start": "2536240",
    "end": "2542079"
  },
  {
    "start": "2538000",
    "end": "2538000"
  },
  {
    "text": "rds to solve your problem uh or outside the relational database world",
    "start": "2542079",
    "end": "2549119"
  },
  {
    "text": "you kind of have to think about how to cast your problem what what's your access model",
    "start": "2549119",
    "end": "2554319"
  },
  {
    "text": "so uh the simplest is your key value store right and we know uh your query is a key",
    "start": "2554319",
    "end": "2560960"
  },
  {
    "text": "and and your result is a value if you if you can do that you're in good shape because that's an easy to scale access model",
    "start": "2560960",
    "end": "2569440"
  },
  {
    "text": "beyond that you may need a column store where you are querying on multiple columns",
    "start": "2569440",
    "end": "2576880"
  },
  {
    "text": "specific values like city of seattle vehicles bicycle and then you get the results back for that that's gonna",
    "start": "2576880",
    "end": "2584880"
  },
  {
    "text": "those those data stores are a little bit harder to scale obviously beyond that you could have a full sql data store",
    "start": "2584880",
    "end": "2591440"
  },
  {
    "text": "which gives you even more flexibility but this casting your problem like this is hard",
    "start": "2591440",
    "end": "2597440"
  },
  {
    "text": "before you know the use cases so if you're prototyping a new product or you're working with new customers in",
    "start": "2597440",
    "end": "2603839"
  },
  {
    "text": "a different different type of business it's it's often very hard to figure out exactly",
    "start": "2603839",
    "end": "2609040"
  },
  {
    "text": "what the access model that they're going to need is ahead of time and this limits your mobility as your",
    "start": "2609040",
    "end": "2616000"
  },
  {
    "text": "as you're building new products so as far as aws options that are out there",
    "start": "2616000",
    "end": "2621119"
  },
  {
    "start": "2618000",
    "end": "2618000"
  },
  {
    "text": "obviously we've seen um s3 key value store you're probably all very",
    "start": "2621119",
    "end": "2626800"
  },
  {
    "text": "familiar with that uh it can handle very large objects and has excellent performance considering the the size of",
    "start": "2626800",
    "end": "2634400"
  },
  {
    "text": "objects that that you you can handle with it elastic cache is a great option for",
    "start": "2634400",
    "end": "2640720"
  },
  {
    "text": "smaller data sets if you've used memcached then you've you'd be very comfortable with",
    "start": "2640720",
    "end": "2645880"
  },
  {
    "text": "elasticache uh but your working set has to fit in ram on the size elastic",
    "start": "2645880",
    "end": "2651760"
  },
  {
    "text": "instance that you're using so the data set size is constrained in that way",
    "start": "2651760",
    "end": "2656960"
  },
  {
    "text": "dynamo is is an excellent new option still very fast and allows you to it's sort of",
    "start": "2656960",
    "end": "2662560"
  },
  {
    "text": "a key value store plus plus in that you can just use it as a key value store but you can also use it as a",
    "start": "2662560",
    "end": "2667920"
  },
  {
    "text": "key in combination with a a hash key and range key combination right so if you want to do like posts by",
    "start": "2667920",
    "end": "2675040"
  },
  {
    "text": "a user in a date range you would use a user id as the hash key and the date as the range key and then you would be",
    "start": "2675040",
    "end": "2682319"
  },
  {
    "text": "able to query on both of those um which can be really good for",
    "start": "2682319",
    "end": "2688079"
  },
  {
    "text": "for certain use cases but it's still not a full column store simpledb actually has a",
    "start": "2688079",
    "end": "2695359"
  },
  {
    "text": "great column store api similar to what i described in the",
    "start": "2695359",
    "end": "2700640"
  },
  {
    "text": "previous slide but it tends to have trouble with the set intersection component on larger data",
    "start": "2700640",
    "end": "2707119"
  },
  {
    "text": "sets so we're looking forward to the future options from aws in uh in that column store area",
    "start": "2707119",
    "end": "2715200"
  },
  {
    "text": "obviously rds we've talked a lot about already so an example of a case study in our",
    "start": "2715200",
    "end": "2721440"
  },
  {
    "text": "business is crawl history so we crawl about 8 million",
    "start": "2721440",
    "end": "2727200"
  },
  {
    "text": "pages per day and we don't want we have certain rules about how frequently to crawl them it doesn't make sense to",
    "start": "2727200",
    "end": "2733119"
  },
  {
    "text": "recrawl a page if you've just crawled it in the last hour for example so you've got about 25 million unique",
    "start": "2733119",
    "end": "2739599"
  },
  {
    "text": "urls at any given time in that store fortunately it's a key value model",
    "start": "2739599",
    "end": "2744960"
  },
  {
    "start": "2741000",
    "end": "2741000"
  },
  {
    "text": "because we can use the url as a key and then store the date that we actually did that crawl in the value",
    "start": "2744960",
    "end": "2752160"
  },
  {
    "text": "so we started by solving this problem with cassandra which",
    "start": "2752160",
    "end": "2757280"
  },
  {
    "text": "granted has developed since we worked on it uh worked with it but it's uh as a distributed system",
    "start": "2758160",
    "end": "2765440"
  },
  {
    "text": "you have a lot of maintenance to do to handle the keep make sure the nodes",
    "start": "2765440",
    "end": "2770960"
  },
  {
    "text": "are talking to each other or if you need to scale the system up you need to know how to add the nodes where",
    "start": "2770960",
    "end": "2776720"
  },
  {
    "text": "they fit into the the ring and whatnot so for us it wasn't worth it really to do",
    "start": "2776720",
    "end": "2783920"
  },
  {
    "text": "all that admin work for this use case but we turned out to be punks because",
    "start": "2783920",
    "end": "2789520"
  },
  {
    "text": "we figured out that we could have fit the working set in ram on a large instance so we figured",
    "start": "2789520",
    "end": "2797040"
  },
  {
    "text": "hey let's just throw it in a redis on a large instance and get rid of this distributed system headache",
    "start": "2797040",
    "end": "2803119"
  },
  {
    "text": "later though that store had scaled up to until it didn't fit into ram on an m2.x",
    "start": "2803119",
    "end": "2810480"
  },
  {
    "text": "large and at that point we were looking at scaling vertically to an instance with 30 gigs of ram or something like that it",
    "start": "2810480",
    "end": "2816560"
  },
  {
    "text": "wasn't very appealing fortunately at the same time we participated in the dynamodb beta",
    "start": "2816560",
    "end": "2822319"
  },
  {
    "text": "and were able to migrate the data to dynamodb which totally got rid of our admin uh",
    "start": "2822319",
    "end": "2830400"
  },
  {
    "text": "all you can really all you need to do with dynamodb is set what your provision throughput is um so uh once we had that up and running",
    "start": "2830400",
    "end": "2838880"
  },
  {
    "text": "it was like a whole part of our system that we have to add to admin went away",
    "start": "2838880",
    "end": "2844960"
  },
  {
    "start": "2844000",
    "end": "2844000"
  },
  {
    "text": "another case study i want to share with you is our ad data so we pull about 10 million new ads per",
    "start": "2844960",
    "end": "2850319"
  },
  {
    "text": "day and follow about 7.6 million redirects so we have to store individual records",
    "start": "2850319",
    "end": "2855920"
  },
  {
    "text": "for each of these for our customers purposes so do we store all of this in my sequel",
    "start": "2855920",
    "end": "2862319"
  },
  {
    "text": "we probably could on a big rds now but a few years ago it wasn't",
    "start": "2862319",
    "end": "2867520"
  },
  {
    "text": "sca with ebs it wasn't really possible um on a single instance in any way so",
    "start": "2867520",
    "end": "2875280"
  },
  {
    "text": "in the old days you'd buy a big fire breathing disk array and hook it up you know uh to a big box and uh",
    "start": "2875280",
    "end": "2882800"
  },
  {
    "text": "go that route but this is the cloud and and uh we're we're not working that way anymore so",
    "start": "2882800",
    "end": "2890400"
  },
  {
    "text": "uh what we've done is we've we've taken a hybrid approach to the way we store our data and cinder alluded to this in another slide",
    "start": "2890400",
    "end": "2897280"
  },
  {
    "text": "is and you can get the best of both worlds by really using nosql for some of your data and a relational database for for other",
    "start": "2897280",
    "end": "2903680"
  },
  {
    "text": "parts of your data so for us we take our high volume sorry our high value low volume data",
    "start": "2903680",
    "end": "2910000"
  },
  {
    "text": "like the relationships between websites and merchants and uh the ids that they're using to",
    "start": "2910000",
    "end": "2916640"
  },
  {
    "text": "track them uh and store those things in the relational database and then we we take our repetitive data of you know",
    "start": "2916640",
    "end": "2923520"
  },
  {
    "text": "all of the occurrences of things that we've discovered and store those in a big data store um",
    "start": "2923520",
    "end": "2929040"
  },
  {
    "text": "what we're doing is is based on s3 we take the full day's results and kind of",
    "start": "2929040",
    "end": "2935920"
  },
  {
    "text": "and serialize and compress it in json uh at a natural key",
    "start": "2935920",
    "end": "2942240"
  },
  {
    "text": "and then we filter the columns of that data on retrieval so that's our own custom code it's great",
    "start": "2942240",
    "end": "2948880"
  },
  {
    "text": "in that s3 scales perfectly horizontally and we don't have to worry about that",
    "start": "2948880",
    "end": "2954400"
  },
  {
    "text": "but there are more modern options now i think in terms of big data stores that require less",
    "start": "2954400",
    "end": "2960720"
  },
  {
    "text": "development so in summary i encourage you to spend your time on development rather than",
    "start": "2960720",
    "end": "2966960"
  },
  {
    "start": "2962000",
    "end": "2962000"
  },
  {
    "text": "operations by leveraging managed services rds is a great option for prototyping",
    "start": "2966960",
    "end": "2973520"
  },
  {
    "text": "and for that high value data that you're often going to run into ceo queries on",
    "start": "2973520",
    "end": "2979680"
  },
  {
    "text": "s3 is extremely robust and you can do the trick that we're doing by",
    "start": "2979680",
    "end": "2985359"
  },
  {
    "text": "pre-processing data that goes into s3 and to kind of slice it into a format that's close to what your customer wants to see",
    "start": "2985359",
    "end": "2992319"
  },
  {
    "text": "or post-processing like doing filtering on the output side allows you to use s3 in ways that you",
    "start": "2992319",
    "end": "2998400"
  },
  {
    "text": "know beyond the kind of typical videos or photo storage model and then",
    "start": "2998400",
    "end": "3006079"
  },
  {
    "text": "try dynamodb if you haven't yet it it's it's very powerful option",
    "start": "3006079",
    "end": "3013520"
  },
  {
    "text": "you have to understand the constraints of the key value store access model or key plus range access model",
    "start": "3013520",
    "end": "3019680"
  },
  {
    "text": "but we've found it's been very low cost for us and fast and we're comfortable with the",
    "start": "3019680",
    "end": "3025280"
  },
  {
    "text": "persistence as well um kind of looking forward to the multiple column queries on big data",
    "start": "3025280",
    "end": "3031680"
  },
  {
    "text": "uh having an amazon managed solution for that and i i'm very excited to check out",
    "start": "3031680",
    "end": "3038240"
  },
  {
    "text": "redshift and see where we can fit that into or whether it's a fit for our business",
    "start": "3038240",
    "end": "3044079"
  },
  {
    "text": "model so we're if you have any questions or comments feel free to email me",
    "start": "3044079",
    "end": "3051040"
  },
  {
    "text": "and we'll do a q a now i think briefly with sundar",
    "start": "3051040",
    "end": "3058000"
  },
  {
    "text": "thanks andy for those of you want to ask questions raise your hand i'll bring my microphone over and on the stage we have a microphone as",
    "start": "3063760",
    "end": "3070800"
  },
  {
    "text": "well you guys have any questions okay there's one here",
    "start": "3070800",
    "end": "3078480"
  },
  {
    "text": "just a quick question on the redshift product if we start with uh dynamodb or one of",
    "start": "3080800",
    "end": "3087040"
  },
  {
    "text": "the other products do we have to move that data over into the the redshift data warehouse",
    "start": "3087040",
    "end": "3092800"
  },
  {
    "text": "or uh will that be able to access these dynamo and other products question was",
    "start": "3092800",
    "end": "3099599"
  },
  {
    "text": "about redshift and dynamodb as a data store there is a pre-built integration where the data can be",
    "start": "3099599",
    "end": "3105440"
  },
  {
    "text": "automatically moved from dynamodb over to redshift so the data will have to be in redshift",
    "start": "3105440",
    "end": "3110640"
  },
  {
    "text": "but there is a pre-built integration",
    "start": "3110640",
    "end": "3114160"
  },
  {
    "text": "hopefully i won't trip and fall",
    "start": "3118000",
    "end": "3124079"
  },
  {
    "text": "i was wondering if any of you are running multi-region and how you're dealing with the data consistency across the regions",
    "start": "3124079",
    "end": "3132400"
  },
  {
    "text": "and basically we did a custom synchronization tool",
    "start": "3136839",
    "end": "3142640"
  },
  {
    "text": "uh which is how we we dealt with it i mean there's no you know there's no real replication",
    "start": "3142640",
    "end": "3147680"
  },
  {
    "text": "across regions you just can't do that so at the moment you",
    "start": "3147680",
    "end": "3152720"
  },
  {
    "text": "could use my sequel on ec2 and set up a wan across regions",
    "start": "3152720",
    "end": "3158960"
  },
  {
    "text": "you know like openvpn uh and that would probably be my recommendation now",
    "start": "3158960",
    "end": "3167839"
  },
  {
    "text": "i actually have two questions basically to you actually uh so the multi-region replication with rds",
    "start": "3176000",
    "end": "3182559"
  },
  {
    "text": "is that coming soon like is there a timeline for that uh second one is uh",
    "start": "3182559",
    "end": "3187920"
  },
  {
    "text": "is there any plans to support sharding and some kind of uh horizontal scalability",
    "start": "3187920",
    "end": "3194800"
  },
  {
    "text": "with an rds",
    "start": "3194800",
    "end": "3197520"
  },
  {
    "text": "multi-region replication was one question and then the second one was shorting it's a hard problem as as",
    "start": "3200480",
    "end": "3208559"
  },
  {
    "text": "he described we are working on the infrastructure to get the data replicated i can't give you",
    "start": "3208559",
    "end": "3214319"
  },
  {
    "text": "we typically don't talk about future releases but it's on our roadmap to get it done in a soon enough fashion",
    "start": "3214319",
    "end": "3221920"
  },
  {
    "text": "second one is about sharding again another big problem the issue with sharding is not necessarily just the sharding it's",
    "start": "3221920",
    "end": "3228240"
  },
  {
    "text": "actually the re-sharding when you decide to do the reshotting so we are thinking through that",
    "start": "3228240",
    "end": "3233520"
  },
  {
    "text": "it's also on our roadmap perhaps on a longer time horizon than cross region",
    "start": "3233520",
    "end": "3240480"
  },
  {
    "text": "so do you suggest i mean do you suggest any approach if you have a complex schema",
    "start": "3246960",
    "end": "3252880"
  },
  {
    "text": "complex access like it's not like a key value pair but it's a complex access and complex schema and",
    "start": "3252880",
    "end": "3260640"
  },
  {
    "text": "still there is a need for scalability do you suggest an approach because i i don't think we can use any existing",
    "start": "3260640",
    "end": "3267760"
  },
  {
    "text": "actually i will turn it over to jay since jay you have used the question is really about complex schema",
    "start": "3267760",
    "end": "3273040"
  },
  {
    "text": "or their approaches that you scalability complex schema with",
    "start": "3273040",
    "end": "3278559"
  },
  {
    "text": "scalability as a how do you achieve that okay can you can you actually restate that question again i'm",
    "start": "3278559",
    "end": "3284240"
  },
  {
    "text": "not hearing you very well all the way up here i think the question is if you have a complex schema and you",
    "start": "3284240",
    "end": "3289440"
  },
  {
    "text": "want to achieve scalability what are the techniques and approaches that we would use one of the most common ways that people",
    "start": "3289440",
    "end": "3296880"
  },
  {
    "text": "with very complex schemas end up scaling is",
    "start": "3296880",
    "end": "3302480"
  },
  {
    "text": "really i mean you shard you just you just pull out table sets and and put them on separate databases",
    "start": "3303599",
    "end": "3309440"
  },
  {
    "text": "um the other thing i've seen and i think delicious used to do this kind of pre-yahoo was they would have the same",
    "start": "3309440",
    "end": "3317440"
  },
  {
    "text": "database schema you know like replicated 10 times and they would just index each one differently based on the",
    "start": "3317440",
    "end": "3323760"
  },
  {
    "text": "the query access patterns but",
    "start": "3323760",
    "end": "3328559"
  },
  {
    "text": "if you're doing something like you know what i consider consumer internet facing a complex schema is just going to kill",
    "start": "3331920",
    "end": "3339359"
  },
  {
    "text": "you you know if you're trying to do inner inner outer outer sub select correlated queries to answer questions",
    "start": "3339359",
    "end": "3347839"
  },
  {
    "text": "from people coming in on the web it's you're just not gonna be able to do it you know it'll work for a little",
    "start": "3347839",
    "end": "3352880"
  },
  {
    "text": "while and then you're gonna spend all your time like trying to denormalize and and",
    "start": "3352880",
    "end": "3358000"
  },
  {
    "text": "and just make simple queries i think you know kind of pre-populating tables with queries that you expect people will do",
    "start": "3358000",
    "end": "3363839"
  },
  {
    "text": "and techniques like that so what do you suggest about directly",
    "start": "3363839",
    "end": "3370160"
  },
  {
    "text": "look up that if you have sharded your system based on user ids would you recommend using",
    "start": "3370160",
    "end": "3377599"
  },
  {
    "text": "directory lookups to locate the user and going after that or would you suggest",
    "start": "3377599",
    "end": "3383440"
  },
  {
    "text": "fixing the ids to not changing the users across charts",
    "start": "3383440",
    "end": "3390319"
  },
  {
    "text": "a lot of that really depends on your application right where so the question is if you have a sharded",
    "start": "3390319",
    "end": "3397520"
  },
  {
    "text": "schema and you have user ids is it best to kind of shard on user ids",
    "start": "3397520",
    "end": "3405520"
  },
  {
    "text": "is it best to attach user ids in some other fashion uh and that really depends",
    "start": "3405520",
    "end": "3411200"
  },
  {
    "text": "on you know like everything else that depends on your application right where do your queries generate hot spots",
    "start": "3411200",
    "end": "3418160"
  },
  {
    "text": "and you know if you have at twitter we use sequential integers",
    "start": "3418160",
    "end": "3423520"
  },
  {
    "text": "for uh user ids for a long time and that meant that you know",
    "start": "3423520",
    "end": "3430799"
  },
  {
    "text": "unless we did some hashing at the application layer to to distribute those out you know there were always",
    "start": "3430799",
    "end": "3439359"
  },
  {
    "text": "you know user id based hotspots um it was the same thing when we did you know sequential ids for statuses for tweets until we",
    "start": "3439359",
    "end": "3446799"
  },
  {
    "text": "started using you know a unique identifier that just hashed better so it can work to just divide everything",
    "start": "3446799",
    "end": "3454880"
  },
  {
    "text": "up by user id it just kind of depends which isn't very helpful",
    "start": "3454880",
    "end": "3461280"
  },
  {
    "text": "uh question for andy um just curious what uh real world read write performance",
    "start": "3461280",
    "end": "3467760"
  },
  {
    "text": "differences you guys saw between dynamo and cassandra between dynamo and cassandra um",
    "start": "3467760",
    "end": "3476240"
  },
  {
    "text": "you know the transition we had we had a redis implementation in between uh so we never did a head-to-head",
    "start": "3476319",
    "end": "3482400"
  },
  {
    "text": "between cassandra and dynamo but um",
    "start": "3482400",
    "end": "3488880"
  },
  {
    "text": "if you're willing to pay the price for the higher uh provision throughput on dynamo",
    "start": "3488880",
    "end": "3495040"
  },
  {
    "text": "uh it would be hard there there would be a point where it would be hard for cassandra to keep up uh if that makes sense because you",
    "start": "3495040",
    "end": "3502319"
  },
  {
    "text": "can you can scale up the provision throughput on dynamo",
    "start": "3502319",
    "end": "3507760"
  },
  {
    "text": "to very high levels and i'm not sure exactly what magic they're doing in the back and to make that all work um but",
    "start": "3507760",
    "end": "3517599"
  },
  {
    "text": "i think the scalability is stronger there",
    "start": "3517599",
    "end": "3521200"
  },
  {
    "text": "edgar these questions for you um i'm just wondering if i use dynamo db and usb pc can i use dynamodb",
    "start": "3524160",
    "end": "3532400"
  },
  {
    "text": "within the vpc environment",
    "start": "3532400",
    "end": "3535920"
  },
  {
    "text": "question is can i use dynamodb within a vpc environment",
    "start": "3538799",
    "end": "3544640"
  },
  {
    "text": "i i should know the answer but i don't i'll find it out for you i uh a particular detail escapes my mind",
    "start": "3544640",
    "end": "3552160"
  },
  {
    "text": "right now so i'll get that back to you there is another question",
    "start": "3552160",
    "end": "3558640"
  },
  {
    "text": "yeah question uh for sorry for chemo on your slide it showed that you had your master",
    "start": "3558640",
    "end": "3565119"
  },
  {
    "text": "databases it looked like they were ec2 instances where your read replicas were rds and i was wondering why you made",
    "start": "3565119",
    "end": "3571119"
  },
  {
    "text": "that decision i know that there are rds instances uh probably the slide just didn't come out right but",
    "start": "3571119",
    "end": "3577359"
  },
  {
    "text": "we're all my sequel for us is all on rds okay thanks",
    "start": "3577359",
    "end": "3583119"
  },
  {
    "text": "okay one in the front let me see",
    "start": "3584960",
    "end": "3589440"
  },
  {
    "text": "is uh postgres on the road map in for rds and or do you recommend for or against",
    "start": "3593599",
    "end": "3599839"
  },
  {
    "text": "using ebs for that um we always evaluate these different",
    "start": "3599839",
    "end": "3606079"
  },
  {
    "text": "engine choices really a lot of is driven by customer demand we have been hearing consistently",
    "start": "3606079",
    "end": "3611520"
  },
  {
    "text": "higher volume of demand so it is something that we are actively looking at it unfortunately we don't comment about the",
    "start": "3611520",
    "end": "3617839"
  },
  {
    "text": "timing of it but our goal is to satisfy that user base um you know in a",
    "start": "3617839",
    "end": "3623280"
  },
  {
    "text": "shortest amount possible so i know i'm not giving the perfect answer but that's the pr approved answers",
    "start": "3623280",
    "end": "3630240"
  },
  {
    "text": "well it's actually a design choice there are two storage choices on ec2 one is direct attached where you",
    "start": "3631520",
    "end": "3638559"
  },
  {
    "text": "are taking care of all the different backup and restore mechanisms using the local",
    "start": "3638559",
    "end": "3643760"
  },
  {
    "text": "disk but you also have to recognize that upon reboot of the instance the storage",
    "start": "3643760",
    "end": "3648960"
  },
  {
    "text": "is ephemeral in nature then the network attached storage which is what ebs is",
    "start": "3648960",
    "end": "3654240"
  },
  {
    "text": "and it gives you the ability to detach the instance and reattach the volume and have recoverability in a different",
    "start": "3654240",
    "end": "3660319"
  },
  {
    "text": "model than a direct attach that's a design choice really up to the individual application",
    "start": "3660319",
    "end": "3665839"
  },
  {
    "text": "some are doing very well with direct attach some are doing very well with network attached ebs is",
    "start": "3665839",
    "end": "3673680"
  },
  {
    "text": "doing well and it's getting better they're doing working on some really good reliability and durability other",
    "start": "3673680",
    "end": "3679200"
  },
  {
    "text": "techniques and scalability techniques so i wouldn't be surprised a year from now we think about ebs in a very",
    "start": "3679200",
    "end": "3685680"
  },
  {
    "text": "different way than we may have thought about",
    "start": "3685680",
    "end": "3689760"
  },
  {
    "text": "the question to the speaker in the obama campaign you said that dynamodb was an amazing product",
    "start": "3694559",
    "end": "3700559"
  },
  {
    "text": "what makes it so compelling so the the really amazing thing",
    "start": "3700559",
    "end": "3708000"
  },
  {
    "text": "andy talked about is the operational overhead of maintaining your own distributed key value store",
    "start": "3708000",
    "end": "3714880"
  },
  {
    "text": "is non-trivial it is difficult it's you know whether it's a hadoop",
    "start": "3714880",
    "end": "3720720"
  },
  {
    "text": "cluster or a cassandra cluster that's a lot of work and that's a lot of monitoring and",
    "start": "3720720",
    "end": "3726880"
  },
  {
    "text": "you know you have to understand it same thing with redis i mean you have to understand what that cluster physically looks like",
    "start": "3726880",
    "end": "3733280"
  },
  {
    "text": "and how the data is on it to use it efficiently i don't know what db you're like click more rights",
    "start": "3733280",
    "end": "3739599"
  },
  {
    "text": "you wait for it to scale up and you do more rights um i will say that you have to monitor your",
    "start": "3739599",
    "end": "3746480"
  },
  {
    "text": "close your costs closely right you pay for what you have provisioned",
    "start": "3746480",
    "end": "3751760"
  },
  {
    "text": "not for what you use so that i did that every day i would like",
    "start": "3751760",
    "end": "3756799"
  },
  {
    "text": "here's my 80 dynamo db tables what has been the peak over the last 24 hours let me scale that",
    "start": "3756799",
    "end": "3764079"
  },
  {
    "text": "down let me scale that up but it's it's it's really",
    "start": "3764079",
    "end": "3770880"
  },
  {
    "text": "you just the operational ease is is amazing",
    "start": "3770880",
    "end": "3776319"
  },
  {
    "text": "so in addition i think we're working on some scripting too to do that because we can you can uh there are good",
    "start": "3776799",
    "end": "3783280"
  },
  {
    "text": "metrics coming out of dynamodb that can publish to cloud watch so you can see what your utilization is",
    "start": "3783280",
    "end": "3790000"
  },
  {
    "text": "and so we're doing now we're doing the same thing hey check my utilization maybe scale it up or down",
    "start": "3790000",
    "end": "3796000"
  },
  {
    "text": "but it's certainly possible to to do that in an automated way which takes your admin of your key value",
    "start": "3796000",
    "end": "3802559"
  },
  {
    "text": "store basically to zero hi my question is about rds mysql",
    "start": "3802559",
    "end": "3809680"
  },
  {
    "text": "monitoring um so i'm curious you mentioned like monog and some other tools um are you depending to",
    "start": "3809680",
    "end": "3814880"
  },
  {
    "text": "identify like specifically query hotspots um like the general query log in the slow query log or you",
    "start": "3814880",
    "end": "3820960"
  },
  {
    "text": "using like a proxy and packet sniffing or like how are you solving that problem so we use collecti and money to",
    "start": "3820960",
    "end": "3828480"
  },
  {
    "text": "do like types of queries like number of selects per second number of inserts per second number of updates and whatnot and",
    "start": "3828480",
    "end": "3834000"
  },
  {
    "text": "see how our query cache is going like what's in the cache what's being evicted and so we look at the graphs and we have",
    "start": "3834000",
    "end": "3839599"
  },
  {
    "text": "monitoring for if our you know our read latency or select",
    "start": "3839599",
    "end": "3845119"
  },
  {
    "text": "latency or rather our you know slow query logging is showing many queries above some number of",
    "start": "3845119",
    "end": "3851839"
  },
  {
    "text": "seconds we'll we'll get alerts off of that and so with rds cloudwatch we see like",
    "start": "3851839",
    "end": "3857760"
  },
  {
    "text": "the underlying and then we we do need that other layer on top to get those kinds of stats and hooked into nagios and whatnot",
    "start": "3857760",
    "end": "3866079"
  },
  {
    "text": "answer question",
    "start": "3866079",
    "end": "3868960"
  },
  {
    "text": "in dynamodb there is a size limitation so i cannot store more than 16 kilobytes",
    "start": "3875839",
    "end": "3882480"
  },
  {
    "text": "so how can i overcome that and also there's not really good query mechanism",
    "start": "3882480",
    "end": "3889520"
  },
  {
    "text": "for dynamodb so what kind of other solution can i use",
    "start": "3889520",
    "end": "3896079"
  },
  {
    "text": "so uh with dynamodb i mean that the query mechanism is fixed it's either",
    "start": "3896079",
    "end": "3902400"
  },
  {
    "text": "a key value store or the key key plus range key value store so really you have to cast",
    "start": "3902400",
    "end": "3910079"
  },
  {
    "text": "your problem in a way that that fits that query model",
    "start": "3910079",
    "end": "3916319"
  },
  {
    "text": "there at this point at least there isn't well okay i guess you could post process the",
    "start": "3916319",
    "end": "3922160"
  },
  {
    "text": "data coming out of dynamodb and do some some other filtering but",
    "start": "3922160",
    "end": "3928160"
  },
  {
    "text": "you're likely not not to get great performance out of that so",
    "start": "3928160",
    "end": "3937838"
  },
  {
    "text": "yeah so that that's a good solution um but in terms of oh do you want to handle",
    "start": "3939359",
    "end": "3945359"
  },
  {
    "text": "the other piece or uh yeah data size right so dynamo has a",
    "start": "3945359",
    "end": "3952400"
  },
  {
    "text": "limit i believe it's 64 kb per row that also encounters uh counts the",
    "start": "3952400",
    "end": "3959039"
  },
  {
    "text": "column names right because it basically it returns a json blob to you and",
    "start": "3959039",
    "end": "3966319"
  },
  {
    "text": "the only way you could get around that is to do the same thing you're doing with with you know couch base and dynamo is",
    "start": "3966960",
    "end": "3973920"
  },
  {
    "text": "it would be like looking up blobs in a regular mysql database you you get some url that",
    "start": "3973920",
    "end": "3979920"
  },
  {
    "text": "points you to where the data really lives so you have the key value store and the value is",
    "start": "3979920",
    "end": "3986400"
  },
  {
    "text": "look up this path in s3 and and yeah which is what a lot of people do",
    "start": "3986400",
    "end": "3993839"
  },
  {
    "text": "s3 is definitely not as fast as s3 but i mean you can't there's no data store",
    "start": "4005039",
    "end": "4010559"
  },
  {
    "text": "where you can say hey i want to store 10 megabyte items and have them come back to me in a millisecond right you",
    "start": "4010559",
    "end": "4015839"
  },
  {
    "text": "just can't so i mean that's the trade-off you have to make with your application you can say all right",
    "start": "4015839",
    "end": "4020880"
  },
  {
    "text": "we're going to have a boundary of 64k and that's the data size or you can say we'll use",
    "start": "4020880",
    "end": "4026640"
  },
  {
    "text": "some other system that can store larger objects and just deal with the latency hit for",
    "start": "4026640",
    "end": "4032319"
  },
  {
    "text": "that you know maybe do some kind of caching there are just a lot of ways around it but i mean you you have to adapt",
    "start": "4032319",
    "end": "4038960"
  },
  {
    "text": "your application to the technologies that exist right it doesn't it doesn't work the other way",
    "start": "4038960",
    "end": "4044319"
  },
  {
    "text": "it's going to depend you know well sorry uh just briefly a solution",
    "start": "4044319",
    "end": "4050880"
  },
  {
    "text": "that we use to that problem is we have like if we have users doing reporting we say maybe there's 10 columns that",
    "start": "4050880",
    "end": "4057119"
  },
  {
    "text": "they care about that have relatively short data we fit that into the dynamodb record and then there will be further",
    "start": "4057119",
    "end": "4063200"
  },
  {
    "text": "details that get stored out into s3 and so the way we handle that is is they either need to drill down",
    "start": "4063200",
    "end": "4069039"
  },
  {
    "text": "to a detail page that actually does pull the detail for that specific record from s3",
    "start": "4069039",
    "end": "4074240"
  },
  {
    "text": "or we'll do some ajax and you know kind of populate the details on",
    "start": "4074240",
    "end": "4079680"
  },
  {
    "text": "that page which i'm not saying is the best solution but it's a way to kind of balance the two latencies and still get",
    "start": "4079680",
    "end": "4085920"
  },
  {
    "text": "good performance for the user well thank you so much we'll be around",
    "start": "4085920",
    "end": "4091039"
  },
  {
    "text": "here so i wanted to thank you everyone for attending thank you",
    "start": "4091039",
    "end": "4100080"
  }
]