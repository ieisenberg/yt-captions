[
  {
    "text": "[Music]",
    "start": "410",
    "end": "11840"
  },
  {
    "text": "hello",
    "start": "11840",
    "end": "12719"
  },
  {
    "text": "my name is danish from the aws office in",
    "start": "12719",
    "end": "15120"
  },
  {
    "text": "bangalore",
    "start": "15120",
    "end": "16160"
  },
  {
    "text": "today i'm going to show you how you can",
    "start": "16160",
    "end": "18320"
  },
  {
    "text": "fix your aws",
    "start": "18320",
    "end": "19600"
  },
  {
    "text": "code pipeline when it runs twice let's",
    "start": "19600",
    "end": "22160"
  },
  {
    "text": "get started",
    "start": "22160",
    "end": "23439"
  },
  {
    "text": "first it's important to identify the",
    "start": "23439",
    "end": "25439"
  },
  {
    "text": "reason why the pipeline is being",
    "start": "25439",
    "end": "27359"
  },
  {
    "text": "triggered twice",
    "start": "27359",
    "end": "28480"
  },
  {
    "text": "we can do so by opening our code",
    "start": "28480",
    "end": "30560"
  },
  {
    "text": "pipeline console",
    "start": "30560",
    "end": "31679"
  },
  {
    "text": "and then navigating to the pipeline that",
    "start": "31679",
    "end": "33680"
  },
  {
    "text": "gets triggered twice",
    "start": "33680",
    "end": "36640"
  },
  {
    "text": "we will view the pipeline execution",
    "start": "39200",
    "end": "40960"
  },
  {
    "text": "history by going to the history section",
    "start": "40960",
    "end": "43200"
  },
  {
    "text": "of the pipeline",
    "start": "43200",
    "end": "45840"
  },
  {
    "text": "in the trigger column check to see if",
    "start": "47039",
    "end": "49120"
  },
  {
    "text": "there are any duplicate amazon",
    "start": "49120",
    "end": "51039"
  },
  {
    "text": "cloudwatch events rule triggered",
    "start": "51039",
    "end": "53120"
  },
  {
    "text": "or polling trigger launches of the",
    "start": "53120",
    "end": "56840"
  },
  {
    "text": "pipeline",
    "start": "56840",
    "end": "58239"
  },
  {
    "text": "if there are duplicate cloudwatch event",
    "start": "58239",
    "end": "60399"
  },
  {
    "text": "rule triggered",
    "start": "60399",
    "end": "61359"
  },
  {
    "text": "launches you must delete or disable the",
    "start": "61359",
    "end": "63840"
  },
  {
    "text": "duplicate rule",
    "start": "63840",
    "end": "65600"
  },
  {
    "text": "to do this we can open the duplicate",
    "start": "65600",
    "end": "68000"
  },
  {
    "text": "event rule",
    "start": "68000",
    "end": "68880"
  },
  {
    "text": "directly by choosing it",
    "start": "68880",
    "end": "73840"
  },
  {
    "text": "and then delete the redundant rule",
    "start": "74159",
    "end": "87840"
  },
  {
    "text": "or if there are pollen trigger launches",
    "start": "91119",
    "end": "93840"
  },
  {
    "text": "of the pipeline",
    "start": "93840",
    "end": "94880"
  },
  {
    "text": "we must fix the pipeline by modifying",
    "start": "94880",
    "end": "96960"
  },
  {
    "text": "its definition",
    "start": "96960",
    "end": "98799"
  },
  {
    "text": "please note that it's important to",
    "start": "98799",
    "end": "100960"
  },
  {
    "text": "understand that the steps to fix the",
    "start": "100960",
    "end": "102960"
  },
  {
    "text": "pipeline depend on its mode of creation",
    "start": "102960",
    "end": "106000"
  },
  {
    "text": "that is if you created pipeline using",
    "start": "106000",
    "end": "108560"
  },
  {
    "text": "aws cloud formation",
    "start": "108560",
    "end": "110640"
  },
  {
    "text": "then you must update it with an update",
    "start": "110640",
    "end": "112960"
  },
  {
    "text": "operation",
    "start": "112960",
    "end": "113680"
  },
  {
    "text": "on the cloudformation stack if you",
    "start": "113680",
    "end": "116479"
  },
  {
    "text": "created the pipeline",
    "start": "116479",
    "end": "117759"
  },
  {
    "text": "from the api aws command line interface",
    "start": "117759",
    "end": "121680"
  },
  {
    "text": "or the console you can use the aws",
    "start": "121680",
    "end": "125040"
  },
  {
    "text": "cli to fix it we'll discuss",
    "start": "125040",
    "end": "128239"
  },
  {
    "text": "both approaches here let's first talk",
    "start": "128239",
    "end": "131120"
  },
  {
    "text": "about the steps required to fix a",
    "start": "131120",
    "end": "132800"
  },
  {
    "text": "pipeline",
    "start": "132800",
    "end": "133599"
  },
  {
    "text": "that was created with cloud formation we",
    "start": "133599",
    "end": "136800"
  },
  {
    "text": "log into the aws management console",
    "start": "136800",
    "end": "139520"
  },
  {
    "text": "navigate to the cloudformation console",
    "start": "139520",
    "end": "141760"
  },
  {
    "text": "and then open the stack that created the",
    "start": "141760",
    "end": "143760"
  },
  {
    "text": "pipeline",
    "start": "143760",
    "end": "146239"
  },
  {
    "text": "we'll update this stack with a modified",
    "start": "151840",
    "end": "153840"
  },
  {
    "text": "pipeline definition",
    "start": "153840",
    "end": "157840"
  },
  {
    "text": "we must explicitly set the pole for",
    "start": "169040",
    "end": "171360"
  },
  {
    "text": "source changes property field",
    "start": "171360",
    "end": "173200"
  },
  {
    "text": "to false because it's implicitly set to",
    "start": "173200",
    "end": "176160"
  },
  {
    "text": "its default value of",
    "start": "176160",
    "end": "177440"
  },
  {
    "text": "true when the pipeline was created with",
    "start": "177440",
    "end": "179680"
  },
  {
    "text": "cloud formation",
    "start": "179680",
    "end": "185760"
  },
  {
    "text": "we can now proceed with the stack update",
    "start": "185760",
    "end": "189840"
  },
  {
    "text": "operation",
    "start": "196840",
    "end": "199840"
  },
  {
    "text": "next let's talk about the steps required",
    "start": "219599",
    "end": "222080"
  },
  {
    "text": "to fix the pipeline",
    "start": "222080",
    "end": "223280"
  },
  {
    "text": "when it was created by api cli",
    "start": "223280",
    "end": "226400"
  },
  {
    "text": "or the console open the terminal or",
    "start": "226400",
    "end": "229680"
  },
  {
    "text": "command prompt",
    "start": "229680",
    "end": "232560"
  },
  {
    "text": "let's retrieve and then copy the current",
    "start": "233120",
    "end": "235120"
  },
  {
    "text": "pipeline definition",
    "start": "235120",
    "end": "236560"
  },
  {
    "text": "to a file named pipeline.json by running",
    "start": "236560",
    "end": "240319"
  },
  {
    "text": "the get pipeline cli command",
    "start": "240319",
    "end": "242319"
  },
  {
    "text": "as follows",
    "start": "242319",
    "end": "244959"
  },
  {
    "text": "open the pipeline.json file in a text",
    "start": "247360",
    "end": "249920"
  },
  {
    "text": "editor",
    "start": "249920",
    "end": "250720"
  },
  {
    "text": "and add the poll for source changes",
    "start": "250720",
    "end": "252640"
  },
  {
    "text": "parameter to the configuration",
    "start": "252640",
    "end": "254400"
  },
  {
    "text": "section set the parameter to false",
    "start": "254400",
    "end": "259280"
  },
  {
    "text": "before we save the file we'll remove the",
    "start": "262800",
    "end": "265360"
  },
  {
    "text": "metadata section",
    "start": "265360",
    "end": "267280"
  },
  {
    "text": "doing this makes the pipeline.json file",
    "start": "267280",
    "end": "270080"
  },
  {
    "text": "usable with the update pipeline command",
    "start": "270080",
    "end": "274240"
  },
  {
    "text": "we can now save the file",
    "start": "277120",
    "end": "282000"
  },
  {
    "text": "to apply these changes to the pipeline",
    "start": "282000",
    "end": "284240"
  },
  {
    "text": "we will run the update pipeline command",
    "start": "284240",
    "end": "286320"
  },
  {
    "text": "as follows",
    "start": "286320",
    "end": "288960"
  },
  {
    "text": "as you can see we are passing the",
    "start": "291919",
    "end": "293919"
  },
  {
    "text": "pipeline.json file",
    "start": "293919",
    "end": "295440"
  },
  {
    "text": "as an input to this command",
    "start": "295440",
    "end": "299040"
  },
  {
    "text": "the pipeline will now be triggered just",
    "start": "304080",
    "end": "306400"
  },
  {
    "text": "once for each source change detected",
    "start": "306400",
    "end": "311199"
  },
  {
    "text": "thanks for watching and happy cloud",
    "start": "311199",
    "end": "313120"
  },
  {
    "text": "computing from all of us here at",
    "start": "313120",
    "end": "316590"
  },
  {
    "text": "[Music]",
    "start": "316590",
    "end": "320440"
  },
  {
    "text": "aws",
    "start": "320440",
    "end": "323440"
  }
]