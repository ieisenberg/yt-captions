[
  {
    "start": "0",
    "end": "26000"
  },
  {
    "text": "hello and welcome to this five minute",
    "start": "399",
    "end": "2399"
  },
  {
    "text": "overview of well architected for",
    "start": "2399",
    "end": "3760"
  },
  {
    "text": "smartphones",
    "start": "3760",
    "end": "4720"
  },
  {
    "text": "my name is raj and i'm a senior",
    "start": "4720",
    "end": "6000"
  },
  {
    "text": "solutions architect here at aws",
    "start": "6000",
    "end": "8559"
  },
  {
    "text": "together with you i will dive into",
    "start": "8559",
    "end": "10080"
  },
  {
    "text": "reliability pillar explain why it is",
    "start": "10080",
    "end": "11920"
  },
  {
    "text": "important",
    "start": "11920",
    "end": "12719"
  },
  {
    "text": "and what's the main principles behind",
    "start": "12719",
    "end": "14160"
  },
  {
    "text": "him so let's get started",
    "start": "14160",
    "end": "16240"
  },
  {
    "text": "as a reminder reliability is one of the",
    "start": "16240",
    "end": "18080"
  },
  {
    "text": "five pillars of the well architected",
    "start": "18080",
    "end": "19600"
  },
  {
    "text": "framework",
    "start": "19600",
    "end": "20560"
  },
  {
    "text": "make sure to check out the other videos",
    "start": "20560",
    "end": "22080"
  },
  {
    "text": "too as all of them together complete",
    "start": "22080",
    "end": "23600"
  },
  {
    "text": "your well architected review",
    "start": "23600",
    "end": "26160"
  },
  {
    "start": "26000",
    "end": "69000"
  },
  {
    "text": "reliability pillar is all about building",
    "start": "26160",
    "end": "28240"
  },
  {
    "text": "systems that embrace failure as a",
    "start": "28240",
    "end": "29760"
  },
  {
    "text": "natural occurrence",
    "start": "29760",
    "end": "30960"
  },
  {
    "text": "as a startup you are probably thinking",
    "start": "30960",
    "end": "32640"
  },
  {
    "text": "one of the following",
    "start": "32640",
    "end": "34000"
  },
  {
    "text": "my customers are using my services but",
    "start": "34000",
    "end": "36160"
  },
  {
    "text": "want them to be available and functional",
    "start": "36160",
    "end": "37680"
  },
  {
    "text": "when they want them to be",
    "start": "37680",
    "end": "39200"
  },
  {
    "text": "if i'm not available i could lose both",
    "start": "39200",
    "end": "40960"
  },
  {
    "text": "brand loyalty and business opportunity",
    "start": "40960",
    "end": "43520"
  },
  {
    "text": "i also need to be able to deploy new",
    "start": "43520",
    "end": "45200"
  },
  {
    "text": "features with no impact on my customers",
    "start": "45200",
    "end": "47920"
  },
  {
    "text": "through many years of running systems",
    "start": "47920",
    "end": "49520"
  },
  {
    "text": "for different types of customers and",
    "start": "49520",
    "end": "50879"
  },
  {
    "text": "lessons learnt from running our own",
    "start": "50879",
    "end": "52160"
  },
  {
    "text": "distributed systems",
    "start": "52160",
    "end": "53440"
  },
  {
    "text": "aws can help you address some of these",
    "start": "53440",
    "end": "55360"
  },
  {
    "text": "questions",
    "start": "55360",
    "end": "57120"
  },
  {
    "text": "let's start with the five design",
    "start": "57120",
    "end": "58399"
  },
  {
    "text": "principles behind this pillar which are",
    "start": "58399",
    "end": "60000"
  },
  {
    "text": "listed here",
    "start": "60000",
    "end": "61199"
  },
  {
    "text": "we'll explore each one by also providing",
    "start": "61199",
    "end": "63520"
  },
  {
    "text": "examples of how to implement them in",
    "start": "63520",
    "end": "65040"
  },
  {
    "text": "your startup environment",
    "start": "65040",
    "end": "67439"
  },
  {
    "text": "let's start with our first principle so",
    "start": "67439",
    "end": "70479"
  },
  {
    "start": "69000",
    "end": "128000"
  },
  {
    "text": "why is a startup should you consider",
    "start": "70479",
    "end": "72320"
  },
  {
    "text": "automation",
    "start": "72320",
    "end": "73439"
  },
  {
    "text": "consider this if you have to pay someone",
    "start": "73439",
    "end": "75439"
  },
  {
    "text": "wake them up get them to read what has",
    "start": "75439",
    "end": "77040"
  },
  {
    "text": "happened then start remediating",
    "start": "77040",
    "end": "78720"
  },
  {
    "text": "you lose valuable minutes manual",
    "start": "78720",
    "end": "81040"
  },
  {
    "text": "recovery will take much longer so adopt",
    "start": "81040",
    "end": "82720"
  },
  {
    "text": "as much automation into your stack as",
    "start": "82720",
    "end": "84320"
  },
  {
    "text": "possible",
    "start": "84320",
    "end": "85439"
  },
  {
    "text": "by monitoring a workload for key",
    "start": "85439",
    "end": "86799"
  },
  {
    "text": "performance indicators that are a",
    "start": "86799",
    "end": "88320"
  },
  {
    "text": "measure of business value you can",
    "start": "88320",
    "end": "89759"
  },
  {
    "text": "trigger automation when a threshold is",
    "start": "89759",
    "end": "91439"
  },
  {
    "text": "breached",
    "start": "91439",
    "end": "92400"
  },
  {
    "text": "this allows for automatic notification",
    "start": "92400",
    "end": "94159"
  },
  {
    "text": "and tracking of failures",
    "start": "94159",
    "end": "95439"
  },
  {
    "text": "and for automated recovery processes",
    "start": "95439",
    "end": "97200"
  },
  {
    "text": "that work around or repair the failure",
    "start": "97200",
    "end": "99759"
  },
  {
    "text": "aws head aws has features that can help",
    "start": "99759",
    "end": "102159"
  },
  {
    "text": "you achieve this",
    "start": "102159",
    "end": "103439"
  },
  {
    "text": "for example we have services that help",
    "start": "103439",
    "end": "105280"
  },
  {
    "text": "you automate recovery like our manual",
    "start": "105280",
    "end": "106880"
  },
  {
    "text": "sql database rds",
    "start": "106880",
    "end": "108320"
  },
  {
    "text": "that can fail over to a different az on",
    "start": "108320",
    "end": "110560"
  },
  {
    "text": "failure or a global dns service with 53",
    "start": "110560",
    "end": "113200"
  },
  {
    "text": "which can re-traffic to different",
    "start": "113200",
    "end": "114560"
  },
  {
    "text": "regions",
    "start": "114560",
    "end": "115040"
  },
  {
    "text": "a particular region becomes unavailable",
    "start": "115040",
    "end": "117439"
  },
  {
    "text": "our compute services let you handle",
    "start": "117439",
    "end": "119119"
  },
  {
    "text": "recovery by using auto scaling",
    "start": "119119",
    "end": "121200"
  },
  {
    "text": "and our distributed object storage",
    "start": "121200",
    "end": "122640"
  },
  {
    "text": "service s3 is going to be highly",
    "start": "122640",
    "end": "124000"
  },
  {
    "text": "resilient to failure",
    "start": "124000",
    "end": "126320"
  },
  {
    "text": "let's move on to the second principle in",
    "start": "126320",
    "end": "129280"
  },
  {
    "start": "128000",
    "end": "168000"
  },
  {
    "text": "the cloud you can test how your workload",
    "start": "129280",
    "end": "131120"
  },
  {
    "text": "fails and you can validate your recovery",
    "start": "131120",
    "end": "132720"
  },
  {
    "text": "procedures",
    "start": "132720",
    "end": "133680"
  },
  {
    "text": "you can use automation to simulate",
    "start": "133680",
    "end": "135280"
  },
  {
    "text": "different failures or to recreate",
    "start": "135280",
    "end": "136640"
  },
  {
    "text": "scenarios that led to pathways",
    "start": "136640",
    "end": "139200"
  },
  {
    "text": "this approach exposes failure pathways",
    "start": "139200",
    "end": "141120"
  },
  {
    "text": "that you can test and fix",
    "start": "141120",
    "end": "142959"
  },
  {
    "text": "before a real failure scenario occurs",
    "start": "142959",
    "end": "145760"
  },
  {
    "text": "you can use tools like chaos monkey",
    "start": "145760",
    "end": "147520"
  },
  {
    "text": "or a new service aws fault injection",
    "start": "147520",
    "end": "150000"
  },
  {
    "text": "simulator which is a fully managed",
    "start": "150000",
    "end": "151440"
  },
  {
    "text": "service for running fault injection",
    "start": "151440",
    "end": "152959"
  },
  {
    "text": "experiments",
    "start": "152959",
    "end": "153920"
  },
  {
    "text": "it simplifies the process of setting up",
    "start": "153920",
    "end": "156080"
  },
  {
    "text": "and then running these experiments",
    "start": "156080",
    "end": "157280"
  },
  {
    "text": "across a range of aws services",
    "start": "157280",
    "end": "159440"
  },
  {
    "text": "allowing to build confidence in your",
    "start": "159440",
    "end": "161040"
  },
  {
    "text": "application behavior",
    "start": "161040",
    "end": "163280"
  },
  {
    "text": "moving on to our third principle we all",
    "start": "163280",
    "end": "165200"
  },
  {
    "text": "talk about reliability by horizontal",
    "start": "165200",
    "end": "166959"
  },
  {
    "text": "scale",
    "start": "166959",
    "end": "168480"
  },
  {
    "start": "168000",
    "end": "195000"
  },
  {
    "text": "but first let's give a brief overview of",
    "start": "168480",
    "end": "169920"
  },
  {
    "text": "the aws cloud infrastructure",
    "start": "169920",
    "end": "172400"
  },
  {
    "text": "each awls region has multiple",
    "start": "172400",
    "end": "174160"
  },
  {
    "text": "availability zones and each zone has",
    "start": "174160",
    "end": "176000"
  },
  {
    "text": "multiple physically separated data",
    "start": "176000",
    "end": "177680"
  },
  {
    "text": "sensors",
    "start": "177680",
    "end": "178480"
  },
  {
    "text": "each region also has two independent",
    "start": "178480",
    "end": "180159"
  },
  {
    "text": "fully redundant transit centers",
    "start": "180159",
    "end": "182000"
  },
  {
    "text": "that allow traffic to across the aws",
    "start": "182000",
    "end": "184000"
  },
  {
    "text": "network enabling regions to connect to",
    "start": "184000",
    "end": "186159"
  },
  {
    "text": "the global network",
    "start": "186159",
    "end": "187599"
  },
  {
    "text": "this setup gives us a global",
    "start": "187599",
    "end": "189040"
  },
  {
    "text": "infrastructure with regions that are",
    "start": "189040",
    "end": "190400"
  },
  {
    "text": "highly available and scalable",
    "start": "190400",
    "end": "191920"
  },
  {
    "text": "and tolerant to failure",
    "start": "191920",
    "end": "195040"
  },
  {
    "text": "you can use az to replace one large",
    "start": "195519",
    "end": "197519"
  },
  {
    "text": "resource with multiple smaller resources",
    "start": "197519",
    "end": "199519"
  },
  {
    "text": "to reduce the impact of a single failure",
    "start": "199519",
    "end": "202080"
  },
  {
    "text": "this will allow you to distribute",
    "start": "202080",
    "end": "203280"
  },
  {
    "text": "requests across these resources to",
    "start": "203280",
    "end": "204959"
  },
  {
    "text": "ensure that they don't share a common",
    "start": "204959",
    "end": "206400"
  },
  {
    "text": "point of failure",
    "start": "206400",
    "end": "207360"
  },
  {
    "text": "and thereby achieving four lines of",
    "start": "207360",
    "end": "208879"
  },
  {
    "text": "availability",
    "start": "208879",
    "end": "210959"
  },
  {
    "text": "putting all this together you can see",
    "start": "210959",
    "end": "212560"
  },
  {
    "text": "how you can use aws to scale",
    "start": "212560",
    "end": "214080"
  },
  {
    "text": "horizontally",
    "start": "214080",
    "end": "215599"
  },
  {
    "text": "an elastic load balancer is redundant in",
    "start": "215599",
    "end": "217840"
  },
  {
    "text": "all azs",
    "start": "217840",
    "end": "219360"
  },
  {
    "text": "if an ec2 in an av fails traffic goes to",
    "start": "219360",
    "end": "222319"
  },
  {
    "text": "other ac",
    "start": "222319",
    "end": "223200"
  },
  {
    "text": "and a new ec2 is replaced in working ap",
    "start": "223200",
    "end": "225680"
  },
  {
    "text": "using auto scaling we talked about",
    "start": "225680",
    "end": "227360"
  },
  {
    "text": "earlier",
    "start": "227360",
    "end": "228959"
  },
  {
    "text": "if the primary instance of a database",
    "start": "228959",
    "end": "230720"
  },
  {
    "text": "fails the standby is promoted to primary",
    "start": "230720",
    "end": "233040"
  },
  {
    "text": "if you use rds you simply tell it to be",
    "start": "233040",
    "end": "234879"
  },
  {
    "text": "multi-az",
    "start": "234879",
    "end": "236959"
  },
  {
    "text": "these services automatically replicate",
    "start": "236959",
    "end": "238720"
  },
  {
    "text": "data and compute across",
    "start": "238720",
    "end": "240000"
  },
  {
    "text": "multiple azs providing built-in high",
    "start": "240000",
    "end": "241840"
  },
  {
    "text": "availability and data durability",
    "start": "241840",
    "end": "244080"
  },
  {
    "text": "for s3 you can redundantly store your",
    "start": "244080",
    "end": "245840"
  },
  {
    "text": "objects on multiple devices across a",
    "start": "245840",
    "end": "247519"
  },
  {
    "text": "minimum of three av",
    "start": "247519",
    "end": "249360"
  },
  {
    "text": "for dynamodb all your data is stored in",
    "start": "249360",
    "end": "251599"
  },
  {
    "text": "solid state disks and is automatically",
    "start": "251599",
    "end": "253360"
  },
  {
    "text": "replicated across multiple avs",
    "start": "253360",
    "end": "256320"
  },
  {
    "text": "we now move on to the fourth principle",
    "start": "256320",
    "end": "259440"
  },
  {
    "start": "258000",
    "end": "296000"
  },
  {
    "text": "a common cause of failure in workloads",
    "start": "259440",
    "end": "261120"
  },
  {
    "text": "is resource saturation which is when the",
    "start": "261120",
    "end": "262960"
  },
  {
    "text": "demands placed on the workload",
    "start": "262960",
    "end": "264560"
  },
  {
    "text": "exceed its capacity in aws you can",
    "start": "264560",
    "end": "267280"
  },
  {
    "text": "monitor demand and work for utilization",
    "start": "267280",
    "end": "269520"
  },
  {
    "text": "and automate the addition or removal of",
    "start": "269520",
    "end": "271280"
  },
  {
    "text": "resources to maintain the optimal level",
    "start": "271280",
    "end": "273360"
  },
  {
    "text": "to satisfy this demand without over or",
    "start": "273360",
    "end": "275520"
  },
  {
    "text": "under provisioning",
    "start": "275520",
    "end": "276880"
  },
  {
    "text": "you can also provision capacity",
    "start": "276880",
    "end": "278400"
  },
  {
    "text": "automatically based on demand by",
    "start": "278400",
    "end": "280240"
  },
  {
    "text": "identifying the right metric",
    "start": "280240",
    "end": "282000"
  },
  {
    "text": "or kpis at it it's related to this",
    "start": "282000",
    "end": "284639"
  },
  {
    "text": "strategy can be applied to a number of",
    "start": "284639",
    "end": "286479"
  },
  {
    "text": "areas like cpu",
    "start": "286479",
    "end": "287919"
  },
  {
    "text": "or memory and ec2 but can also be",
    "start": "287919",
    "end": "290240"
  },
  {
    "text": "applied to container tasks or even",
    "start": "290240",
    "end": "291919"
  },
  {
    "text": "database reboot",
    "start": "291919",
    "end": "294400"
  },
  {
    "text": "let's close with our final principle",
    "start": "294400",
    "end": "297199"
  },
  {
    "start": "296000",
    "end": "345000"
  },
  {
    "text": "adopting a practice of maintaining",
    "start": "297199",
    "end": "299040"
  },
  {
    "text": "infrastructure definition in code often",
    "start": "299040",
    "end": "301199"
  },
  {
    "text": "called infrastructure's code",
    "start": "301199",
    "end": "302720"
  },
  {
    "text": "allows automated change control this",
    "start": "302720",
    "end": "305280"
  },
  {
    "text": "will reduce the risk of manual error",
    "start": "305280",
    "end": "307039"
  },
  {
    "text": "increase",
    "start": "307039",
    "end": "307520"
  },
  {
    "text": "development velocity and ensure tracking",
    "start": "307520",
    "end": "310000"
  },
  {
    "text": "changes",
    "start": "310000",
    "end": "311120"
  },
  {
    "text": "as a startup you can use ic third-party",
    "start": "311120",
    "end": "313120"
  },
  {
    "text": "tools to achieve this",
    "start": "313120",
    "end": "314320"
  },
  {
    "text": "or you can use aws cloud formation that",
    "start": "314320",
    "end": "316080"
  },
  {
    "text": "lets you automate and manage resources",
    "start": "316080",
    "end": "317759"
  },
  {
    "text": "in aws",
    "start": "317759",
    "end": "318800"
  },
  {
    "text": "and give you a strong reliability",
    "start": "318800",
    "end": "320320"
  },
  {
    "text": "position as your startup scales and",
    "start": "320320",
    "end": "322840"
  },
  {
    "text": "grows",
    "start": "322840",
    "end": "324080"
  },
  {
    "text": "thank you for watching this episode of",
    "start": "324080",
    "end": "325919"
  },
  {
    "text": "reliability pillar",
    "start": "325919",
    "end": "327199"
  },
  {
    "text": "keep watching this series as we dive",
    "start": "327199",
    "end": "328800"
  },
  {
    "text": "into each of the other pillars",
    "start": "328800",
    "end": "330720"
  },
  {
    "text": "next step you can start evaluating your",
    "start": "330720",
    "end": "332479"
  },
  {
    "text": "workflows by using the self-service well",
    "start": "332479",
    "end": "334400"
  },
  {
    "text": "architected tool",
    "start": "334400",
    "end": "335360"
  },
  {
    "text": "in your console you",
    "start": "335360",
    "end": "346960"
  }
]