[
  {
    "start": "0",
    "end": "64000"
  },
  {
    "text": "[Music] all right good afternoon welcome to using a degree lambda as a security team I'm Brittany Doncaster I'm a Solutions",
    "start": "80",
    "end": "6839"
  },
  {
    "text": "Architect at AWS with me today we have Sydney Sweeney she's a cloud engineer from Dow Jones and we also have Andrew",
    "start": "6839",
    "end": "13019"
  },
  {
    "text": "Baird principal Solutions Architect at either of us as well so here's our",
    "start": "13019",
    "end": "19230"
  },
  {
    "text": "roadmap for today this is our agenda but really what we want you to get out of today what we want you to take home with",
    "start": "19230",
    "end": "24570"
  },
  {
    "text": "you is we want you to take away from here when you have a problem when you",
    "start": "24570",
    "end": "29640"
  },
  {
    "text": "have a security control that you need to enforce or verify when you have something as a security team that you",
    "start": "29640",
    "end": "35130"
  },
  {
    "text": "need to accomplish we want you to understand how lambda can plug into that solution where you can utilize it and",
    "start": "35130",
    "end": "42059"
  },
  {
    "text": "and what services it integrates with easily from a security team perspective",
    "start": "42059",
    "end": "47390"
  },
  {
    "text": "so if you've been to an a degress security presentation before you've probably heard us talk about get the",
    "start": "47390",
    "end": "53309"
  },
  {
    "text": "humans away from the data the further away your humans are from the data the better because you make your processes",
    "start": "53309",
    "end": "59370"
  },
  {
    "text": "more automated more repeatable etc but traditional security engineering is a",
    "start": "59370",
    "end": "64860"
  },
  {
    "start": "64000",
    "end": "64000"
  },
  {
    "text": "very manual process it's a lot of spreadsheets it's a lot of policy documents it's not a lot of automation",
    "start": "64860",
    "end": "71549"
  },
  {
    "text": "and so when you have very manual processes in order to enforce your security and verify your security it",
    "start": "71549",
    "end": "78930"
  },
  {
    "text": "really makes it almost impossible in order to have your humans away from your data because they have to be in there",
    "start": "78930",
    "end": "85290"
  },
  {
    "text": "touching your production systems in order to verify the controls you put in place so that's why we as an",
    "start": "85290",
    "end": "92970"
  },
  {
    "text": "organization you'll hear us at eight of us talk a lot about moving toward an",
    "start": "92970",
    "end": "98040"
  },
  {
    "text": "automated security posture so moving towards putting your controls and your policies into code instead of into",
    "start": "98040",
    "end": "104759"
  },
  {
    "text": "spreadsheets and policy documents but as you start to create these different code",
    "start": "104759",
    "end": "110159"
  },
  {
    "text": "base lines what you don't want to do is you don't want to have an added",
    "start": "110159",
    "end": "116159"
  },
  {
    "text": "complexity to your operations right you don't want to just add to your problem of more things that you as a security",
    "start": "116159",
    "end": "123030"
  },
  {
    "text": "organization have to worry about operating or worry about securing the",
    "start": "123030",
    "end": "129090"
  },
  {
    "text": "underlying infrastructure that it's running on and so you don't want to kind of multiply the",
    "start": "129090",
    "end": "134280"
  },
  {
    "text": "additional infrastructure that you have to worry about so the answer to this is",
    "start": "134280",
    "end": "141180"
  },
  {
    "text": "a degress lambda a degress lambda if you're not familiar with it is our server list compute service so for a",
    "start": "141180",
    "end": "147450"
  },
  {
    "text": "degree lambda you don't have to manage any infrastructure you bring your code you tell us the triggering event that",
    "start": "147450",
    "end": "153930"
  },
  {
    "text": "you want to have that code when you want to have that code executed and we will execute it for you it's very cost",
    "start": "153930",
    "end": "160980"
  },
  {
    "text": "efficient you pay only for exactly the amount of time that your function is running and again you can bring your own",
    "start": "160980",
    "end": "168090"
  },
  {
    "text": "code in many different languages that we support so we support node Python Java C",
    "start": "168090",
    "end": "173430"
  },
  {
    "text": "sharp and we also support go which didn't make it into the slide but as I",
    "start": "173430",
    "end": "178739"
  },
  {
    "text": "stated before you can actually setup the triggering event for your lambda function and we'll talk about different",
    "start": "178739",
    "end": "184769"
  },
  {
    "text": "triggering events that will be important to use a security team so the first one",
    "start": "184769",
    "end": "191010"
  },
  {
    "text": "we want to look at the first kind of pattern we want to look at here is event-driven and Amazon Cloud Watch if",
    "start": "191010",
    "end": "198239"
  },
  {
    "text": "you've been on AWS for a while you're familiar with Amazon Cloud watch as where you get your metrics about your a",
    "start": "198239",
    "end": "204630"
  },
  {
    "text": "device resources from so where you see CPU utilization on your ec2 instances",
    "start": "204630",
    "end": "209820"
  },
  {
    "text": "things like that right but as it's evolved over the course of the last few years it's added a lot of features and",
    "start": "209820",
    "end": "216660"
  },
  {
    "text": "functionality that as a security team you can really take advantage of so to",
    "start": "216660",
    "end": "222150"
  },
  {
    "text": "dive into some of those components we're going to look at the different features of cloud watch that you want to be",
    "start": "222150",
    "end": "229350"
  },
  {
    "text": "familiar with so as I mentioned before cloud watch has the ability to aggregate",
    "start": "229350",
    "end": "235140"
  },
  {
    "text": "a bunch of different metrics across your a degress resources or it could be",
    "start": "235140",
    "end": "240320"
  },
  {
    "text": "applications you have running on in AWS or it also could be applications you have running on premise so you can put",
    "start": "240320",
    "end": "245700"
  },
  {
    "text": "cloud watch agents running on your instances or your on-premise hosts and you can aggregate and collect all of the",
    "start": "245700",
    "end": "251670"
  },
  {
    "text": "metrics from your infrastructure and resources and send them into cloud watch you can do basic math on them once you",
    "start": "251670",
    "end": "258120"
  },
  {
    "text": "have those metrics in cloud watch and then you can set up thresholds and when you have thresholds set up you can set",
    "start": "258120",
    "end": "264720"
  },
  {
    "text": "up alarms based on those thresholds so additionally this is how you would do auto-scaling you would set up maybe you",
    "start": "264720",
    "end": "271560"
  },
  {
    "text": "wanted to auto scale on CPU for instance and so you would set up a metric when my aggregate CPU gets above 60% I want to",
    "start": "271560",
    "end": "279390"
  },
  {
    "text": "set an alarm and that alarms action is going to be to scale out and add another server one of the other actions that you",
    "start": "279390",
    "end": "289260"
  },
  {
    "text": "can do besides auto scaling based on cloud watch alarms is that you can send a notification to an SNS topping an SNS",
    "start": "289260",
    "end": "296460"
  },
  {
    "text": "topic is one of the triggering mechanisms for a dubious lambda so we'll get into different use cases for each of",
    "start": "296460",
    "end": "303780"
  },
  {
    "text": "these integrations but I just kind of want to point out the different components of cloud watch so again first",
    "start": "303780",
    "end": "308880"
  },
  {
    "text": "we have cloud watch alarms based on metrics coming in that can send notifications to SNS and then trigger a",
    "start": "308880",
    "end": "315420"
  },
  {
    "text": "lambda function you can also integrate with other third-party tools that you as",
    "start": "315420",
    "end": "320610"
  },
  {
    "text": "a security team are already probably used to using second we have cloud watch",
    "start": "320610",
    "end": "326280"
  },
  {
    "text": "events and cloud watch events come in two different flavors so the first flavor is time-based cloud watch events",
    "start": "326280",
    "end": "333000"
  },
  {
    "text": "and these are really these are they work on a schedule right so these you can",
    "start": "333000",
    "end": "338220"
  },
  {
    "text": "think of them as a cron job right you set up a schedule that you want them to execute on and then when when the event",
    "start": "338220",
    "end": "345390"
  },
  {
    "text": "fires then you can set up the action that you want it to take one of those actions that it can take is it can it",
    "start": "345390",
    "end": "351990"
  },
  {
    "text": "can call an 802 s lambda function the other type of cloud watch event is event",
    "start": "351990",
    "end": "358320"
  },
  {
    "text": "based and this is a really powerful feature and we're going to talk a lot more about how you can use cloud watch",
    "start": "358320",
    "end": "363390"
  },
  {
    "text": "events and the event based cloud watch events and as a security team but really",
    "start": "363390",
    "end": "368400"
  },
  {
    "text": "this is close to real-time events of what is happening within your ad abus",
    "start": "368400",
    "end": "374730"
  },
  {
    "text": "account from an API actions perspective",
    "start": "374730",
    "end": "380030"
  },
  {
    "text": "all right and the third piece that you want to be familiar with from cloud",
    "start": "380570",
    "end": "385980"
  },
  {
    "text": "watch is what we call cloud watch logs and this gives you the ability to actually aggregate all of your log",
    "start": "385980",
    "end": "391530"
  },
  {
    "text": "information your log data and you can put filters on that log data and then",
    "start": "391530",
    "end": "397800"
  },
  {
    "text": "from those filters you can then create subscriptions those different eight of us Claude watch logs and those subscriptions can then be",
    "start": "397800",
    "end": "406300"
  },
  {
    "text": "streamed to different end points and one of those end points again is either breast lambda you can also stream it to Kinesis or elasticsearch but today we're",
    "start": "406300",
    "end": "413680"
  },
  {
    "text": "going to be interested in a degress lambda so to recap here the three different ways that you can integrate cloud watch",
    "start": "413680",
    "end": "420370"
  },
  {
    "text": "with lambda that are going to be important to you as a security team are through cloud watch alarms through cloud",
    "start": "420370",
    "end": "426550"
  },
  {
    "text": "watch events and through the through the cloud watch logs so the first one that",
    "start": "426550",
    "end": "434320"
  },
  {
    "text": "we're going to look at is cloud watch logs eight of us cloud trail if you're not familiar with it is basically an",
    "start": "434320",
    "end": "440020"
  },
  {
    "text": "audit log of everything that's happening within your within your a two-dose account so any API call that is made",
    "start": "440020",
    "end": "446380"
  },
  {
    "text": "within your 80 of us account it creates a cloud trail record a log within the",
    "start": "446380",
    "end": "453759"
  },
  {
    "text": "cloud trail log increase it what do they it creates a record within the cloud trial log that you can then have",
    "start": "453759",
    "end": "461320"
  },
  {
    "text": "streamed into Amazon Cloud watch logs and then from there you can execute a lambda function so again you can with",
    "start": "461320",
    "end": "468070"
  },
  {
    "text": "this you can actually create filters on these logs so maybe you don't want to",
    "start": "468070",
    "end": "473530"
  },
  {
    "text": "send all of the API data maybe you only want to look at API calls that are being",
    "start": "473530",
    "end": "478750"
  },
  {
    "text": "made by the principal the root user right and you want to set up some kind of alarms maybe you want to integrate",
    "start": "478750",
    "end": "485650"
  },
  {
    "text": "with your existing tools etc the second log source that you want to be familiar",
    "start": "485650",
    "end": "493300"
  },
  {
    "text": "with as a security team is VPC flow log so VPC flow logs you can think of as",
    "start": "493300",
    "end": "498490"
  },
  {
    "text": "your net flow logs these have source and destination IP they have the the ports that the data is",
    "start": "498490",
    "end": "505960"
  },
  {
    "text": "going to the the bakit the the packets and the bytes or the back it's whatever",
    "start": "505960",
    "end": "514680"
  },
  {
    "text": "the packets and the bytes and then it also has the most important part of it",
    "start": "514680",
    "end": "521229"
  },
  {
    "text": "is it has the accept or reject information so based on your security",
    "start": "521229",
    "end": "526779"
  },
  {
    "text": "group rules based on your knackles that you have set up for your VPC was the traffic accepted or rejected into that",
    "start": "526779",
    "end": "533170"
  },
  {
    "text": "elastic network in err face so what does this look like when",
    "start": "533170",
    "end": "538960"
  },
  {
    "text": "you have your over on the left-hand side you can see we have a cloud watch log group and you can choose that log group",
    "start": "538960",
    "end": "545830"
  },
  {
    "text": "and you can choose to stream it to either breast lambda at that point you're creating a subscription to AWS",
    "start": "545830",
    "end": "551290"
  },
  {
    "text": "lambda and you can specify you can see the subscription filter patter so you",
    "start": "551290",
    "end": "556750"
  },
  {
    "text": "can filter things out so that's where you could filter out in your cloud trail logs things like the principal is a",
    "start": "556750",
    "end": "562089"
  },
  {
    "text": "route or you could also send all of this data for instance with VPC flow logs you",
    "start": "562089",
    "end": "568150"
  },
  {
    "text": "could send all that data to a DMS lambda and you could you could actually decorate some of that log data before",
    "start": "568150",
    "end": "574839"
  },
  {
    "text": "sending it on to your existing security tools so the e ni is the piece that",
    "start": "574839",
    "end": "580600"
  },
  {
    "text": "comes through the elastic network interface ID is the the piece that come piece of information that comes through",
    "start": "580600",
    "end": "586720"
  },
  {
    "text": "in a VPC flow log record but it doesn't tell you what instance is associated to so you could take that lambda function",
    "start": "586720",
    "end": "593529"
  },
  {
    "text": "you can actually do some decorating of that log in order to have some additional context before it's sent out",
    "start": "593529",
    "end": "599980"
  },
  {
    "text": "to your existing security tools so that the person who's actually going to respond to the event that you're",
    "start": "599980",
    "end": "605589"
  },
  {
    "text": "creating can have a lot of additional information about where they need to go and what instance has been affected etc",
    "start": "605589",
    "end": "614550"
  },
  {
    "text": "okay so the second piece we're going to look at is the metrics so I mentioned already that all of your AWS resources",
    "start": "614550",
    "end": "620920"
  },
  {
    "start": "615000",
    "end": "615000"
  },
  {
    "text": "can send in or some of them automatically send in metrics out of the",
    "start": "620920",
    "end": "627640"
  },
  {
    "text": "box right ec2 will send in CPU etc and a turbo swath is one of those services",
    "start": "627640",
    "end": "634180"
  },
  {
    "text": "that also sends in cloud watch metrics out of the box so as you create a nativist laugh rule and then create a",
    "start": "634180",
    "end": "640420"
  },
  {
    "text": "web ACL out of that rule it automatically creates a cloud watch metric for you and so from that metric",
    "start": "640420",
    "end": "648670"
  },
  {
    "text": "you can then again you can create thresholds and then from those thresholds you can create alarms so this",
    "start": "648670",
    "end": "654670"
  },
  {
    "text": "is kind of cool because let's well we'll walk through an example a little bit but every cloud watch or every eight of us",
    "start": "654670",
    "end": "661240"
  },
  {
    "text": "laugh rule that you have gets then sent into a place where not only is it you're",
    "start": "661240",
    "end": "667600"
  },
  {
    "text": "able to graph and see all the different traffic that's coming into your wrath you can see all",
    "start": "667600",
    "end": "673930"
  },
  {
    "text": "the blocked requests you can see all the allowed requests based on individual rules or based on the aggregate rules",
    "start": "673930",
    "end": "679480"
  },
  {
    "text": "that you have set up for that particular end point but then you can also take actions on it so we'll talk about some",
    "start": "679480",
    "end": "685360"
  },
  {
    "text": "of the use cases for that in a second and the other service that you would want to be familiar with is a - a shield",
    "start": "685360",
    "end": "691180"
  },
  {
    "text": "advanced so shield advanced is our this is our managed DDoS protection service",
    "start": "691180",
    "end": "697120"
  },
  {
    "text": "and basically it gives you a binary cloud Watch metric that says are you",
    "start": "697120",
    "end": "703540"
  },
  {
    "text": "having you know are you under attack from DDoS right now or are you not and you can obviously see the importance of",
    "start": "703540",
    "end": "710170"
  },
  {
    "text": "what you might want to do with that information you would probably want to alert someone so if we look at the eight",
    "start": "710170",
    "end": "717940"
  },
  {
    "text": "of us laughs use case here I have set up a I have set up laughs a few different",
    "start": "717940",
    "end": "725290"
  },
  {
    "text": "laughs rules and I've combined them into a ACL that is supplied to my API gateway endpoint and so you can see I have a",
    "start": "725290",
    "end": "731800"
  },
  {
    "text": "large large body match rule so it's looking for a request body that's too",
    "start": "731800",
    "end": "737800"
  },
  {
    "text": "large for my endpoint and then I also have a sequel injection rule so if we",
    "start": "737800",
    "end": "743290"
  },
  {
    "text": "take the sequel injection rule for instance I can you can see in the bottom right there is a little alarm bells you",
    "start": "743290",
    "end": "749980"
  },
  {
    "text": "can click on that you can create an alarm based on the sequel injection rule and",
    "start": "749980",
    "end": "755730"
  },
  {
    "text": "so here you can see I'm creating alarm and calling a sequel injection alarm and",
    "start": "755730",
    "end": "760750"
  },
  {
    "text": "I'm setting my threshold to be greater than or equal to five so if I get more",
    "start": "760750",
    "end": "766810"
  },
  {
    "text": "than or equal to five sequel injection attempts within the period of time then",
    "start": "766810",
    "end": "772210"
  },
  {
    "text": "I want it to send a notification to this SMS topic and it creates my alarm it",
    "start": "772210",
    "end": "778680"
  },
  {
    "text": "sets it up and it's not in an alarm state so it's you can see the little green box around the metric on the right",
    "start": "778680",
    "end": "785760"
  },
  {
    "text": "and then I create a nativist lambda function to actually subscribe to that",
    "start": "785760",
    "end": "791800"
  },
  {
    "text": "SNS topic and then in this case it's not really doing anything it's just really",
    "start": "791800",
    "end": "797170"
  },
  {
    "text": "printing out the notification so that we can see what that looks like but there's a lot of different",
    "start": "797170",
    "end": "802180"
  },
  {
    "text": "really cool things you could do with this so when I actually send in a bunch of sequel injection requests into my API",
    "start": "802180",
    "end": "810490"
  },
  {
    "text": "gateway then it goes into alarm mode and then you'll see these are actually the logs that are printed out by my by my",
    "start": "810490",
    "end": "817210"
  },
  {
    "text": "native OS lambda function and so it's giving you a lot of really cool information here but the important part",
    "start": "817210",
    "end": "824110"
  },
  {
    "text": "to note again here in this example all I did was print this out but you could also go and take some automated",
    "start": "824110",
    "end": "830200"
  },
  {
    "text": "remediation actions you could go and obviously integrate into your existing tools like page or duty to have somebody",
    "start": "830200",
    "end": "837910"
  },
  {
    "text": "come and look you could do some some more interesting things too like maybe",
    "start": "837910",
    "end": "843520"
  },
  {
    "text": "if it's X number of order of magnitude over your normal threshold right so",
    "start": "843520",
    "end": "848980"
  },
  {
    "text": "somebody's really trying to knock at that door and knock down your defenses and get in maybe you want somebody to",
    "start": "848980",
    "end": "854560"
  },
  {
    "text": "come and just check on the exterior boundary of your security defenses and make sure that everything looks good and",
    "start": "854560",
    "end": "860230"
  },
  {
    "text": "so you can kind of have that kind of smart alerting within your a table slammed a",
    "start": "860230",
    "end": "865390"
  },
  {
    "text": "function that you know you're being protected by the laughs but if you start to see a really big spike in attacks maybe you want somebody they could just",
    "start": "865390",
    "end": "871959"
  },
  {
    "text": "go and check it out so again there's a lot of different use cases for this you",
    "start": "871959",
    "end": "877510"
  },
  {
    "text": "could use it for alerting remediation and integrating with your third-party tools that you already have okay and the",
    "start": "877510",
    "end": "885250"
  },
  {
    "text": "last piece we have event-driven events little redundant yes and with these we",
    "start": "885250",
    "end": "893320"
  },
  {
    "text": "have a few different security services within AWS that actually emit cloud",
    "start": "893320",
    "end": "898720"
  },
  {
    "text": "watch events and they emit them as findings and if any of you were in the",
    "start": "898720",
    "end": "904120"
  },
  {
    "text": "keynote today or watching it I'll talk a little bit at the end here about how this all comes together now that we have",
    "start": "904120",
    "end": "910779"
  },
  {
    "text": "eight of us security hub as well but we have a tour bus may see or Amazon may see which is our service for securing",
    "start": "910779",
    "end": "919480"
  },
  {
    "text": "and protecting your your assets within Amazon s3 so what it does is it combines",
    "start": "919480",
    "end": "926459"
  },
  {
    "text": "natural language processing with user behavior analytics and so it understands",
    "start": "926459",
    "end": "932800"
  },
  {
    "text": "what kind of data you're storing in s3 and then how that data is being accessed and it combines that information in",
    "start": "932800",
    "end": "938860"
  },
  {
    "text": "order to really know is your most critical data being accessed in an anomalous way and so it can provide",
    "start": "938860",
    "end": "947140"
  },
  {
    "text": "context to the alerts that it's giving you based on that if your PII data is now being accessed anomalously then it",
    "start": "947140",
    "end": "955390"
  },
  {
    "text": "can create a high priority alert versus maybe you just have some configuration data that that's had some anomalous",
    "start": "955390",
    "end": "962980"
  },
  {
    "text": "behavior and then second we have Amazon guard duty so Amazon guard duty is",
    "start": "962980",
    "end": "968910"
  },
  {
    "text": "that's an amazing service if you don't have it turned on in all of your accounts you definitely should and it",
    "start": "968910",
    "end": "974709"
  },
  {
    "text": "combines VPC flow logs cloud trail logs and dns resolution logs in order to",
    "start": "974709",
    "end": "982500"
  },
  {
    "text": "create well it sends those into machine learning models in order to understand",
    "start": "982500",
    "end": "987910"
  },
  {
    "text": "what anomalous behavior and patterns are looking like for your account so it",
    "start": "987910",
    "end": "992920"
  },
  {
    "text": "learns for about 30 days or so and then it starts to alert based on any anomalous behavior but it also can",
    "start": "992920",
    "end": "1000209"
  },
  {
    "text": "protect you from other things like Bitcoin mining remote access Trojans etc it has the ability to detect those types",
    "start": "1000209",
    "end": "1007470"
  },
  {
    "text": "of things within your account and it will send you findings based on those and then finally cloud trail we already",
    "start": "1007470",
    "end": "1016140"
  },
  {
    "text": "talked about cloud trail logs but actually cloud trail API activity most",
    "start": "1016140",
    "end": "1021270"
  },
  {
    "text": "of the cloud trail records can actually be sent in an event-driven manner to",
    "start": "1021270",
    "end": "1027089"
  },
  {
    "text": "cloud watch events the only ones you're not going to to get events for are kind",
    "start": "1027089",
    "end": "1032428"
  },
  {
    "text": "of the describe and lists kind of api's but any any API is that change or modify",
    "start": "1032429",
    "end": "1040380"
  },
  {
    "text": "your resources will come in as a cloud watch event and then what you can do is",
    "start": "1040380",
    "end": "1045420"
  },
  {
    "text": "you can actually capture that event so here we're capturing a guard duty finding but you can also capture",
    "start": "1045420",
    "end": "1052400"
  },
  {
    "text": "somebody deleting an EBS volume in a production account for instance you",
    "start": "1052400",
    "end": "1057780"
  },
  {
    "text": "could capture somebody terminating an ec2 instance in a production account you",
    "start": "1057780",
    "end": "1062910"
  },
  {
    "text": "can capture deleting an s3 bucket policy right so somebody's trying to go in and",
    "start": "1062910",
    "end": "1067919"
  },
  {
    "text": "change the bucket policy that you have for your s/3 s/3 pockets and one of the really cool things now",
    "start": "1067919",
    "end": "1075510"
  },
  {
    "text": "with a degress security hub is that now you don't have to you know guard duty",
    "start": "1075510",
    "end": "1080910"
  },
  {
    "text": "findings a little bit different from a Maisie finding and the really cool thing",
    "start": "1080910",
    "end": "1087240"
  },
  {
    "text": "now about a diverse security hub is it's all going to have one common one common",
    "start": "1087240",
    "end": "1094320"
  },
  {
    "text": "pattern or format for for these findings that you can that you can deal with so you only having to deal with one common",
    "start": "1094320",
    "end": "1100800"
  },
  {
    "text": "format and in order to figure out what to do with all the different findings",
    "start": "1100800",
    "end": "1106559"
  },
  {
    "text": "that are you're getting from your a data security services and they will come in ask cloud watch events as well so you'll",
    "start": "1106559",
    "end": "1112320"
  },
  {
    "text": "be able to you'll be able to create rules cod watch event rules to capture",
    "start": "1112320",
    "end": "1118320"
  },
  {
    "text": "your r8 aggress security hub findings and then take actions on them so again you can integrate those with your",
    "start": "1118320",
    "end": "1124140"
  },
  {
    "text": "third-party tools you can do automated remediation forensics countermeasures",
    "start": "1124140",
    "end": "1129179"
  },
  {
    "text": "and you can also do security automation one of the really cool tools for",
    "start": "1129179",
    "end": "1135929"
  },
  {
    "text": "security automation that again as a security team you should have in your",
    "start": "1135929",
    "end": "1140940"
  },
  {
    "text": "back pocket is actually a service we have called Atos step functions so as",
    "start": "1140940",
    "end": "1146490"
  },
  {
    "text": "you're using lambda it's really meant to be these small micro services that do one thing they can be reused etc and ADA",
    "start": "1146490",
    "end": "1154140"
  },
  {
    "text": "dressed up functions actually allows you to coordinate and orchestrate the calling of multiple ADA dress lambda",
    "start": "1154140",
    "end": "1160080"
  },
  {
    "text": "functions so let's say let's take a very simple example here of you want to do",
    "start": "1160080",
    "end": "1167040"
  },
  {
    "text": "some automated remediation but then you also want to send out a notification to someone in your security team that you",
    "start": "1167040",
    "end": "1173850"
  },
  {
    "text": "did this automated remediation and then and you know this action was taken and so you could actually do those two",
    "start": "1173850",
    "end": "1181710"
  },
  {
    "text": "things in parallel you could do them in sequence there's a lot of different options within a degree of step",
    "start": "1181710",
    "end": "1187140"
  },
  {
    "text": "functions it's very easy to use it's a very simple JSON format and so you basically would say call this lambda",
    "start": "1187140",
    "end": "1193290"
  },
  {
    "text": "function and if you wanted to do in parallel it can do it in parallel again or you can say wait until I've actually",
    "start": "1193290",
    "end": "1199230"
  },
  {
    "text": "Auto remediated and then after that go and send a notification and integrate with",
    "start": "1199230",
    "end": "1205260"
  },
  {
    "text": "my third-party existing tools and again",
    "start": "1205260",
    "end": "1210960"
  },
  {
    "text": "in the flavor of keeping hands off production instances another really cool",
    "start": "1210960",
    "end": "1218190"
  },
  {
    "text": "tool to use with with lambda is what we call Systems Manager and the feature of",
    "start": "1218190",
    "end": "1225330"
  },
  {
    "text": "that is run command so run command actually gives you the ability to run a script on an ec2 instance without having",
    "start": "1225330",
    "end": "1231000"
  },
  {
    "text": "to SSH into it so this is really cool because you could have a set of kind of",
    "start": "1231000",
    "end": "1236040"
  },
  {
    "text": "blessed scripts from your security team that are okay to run on those ec2 instances and then you can use lambda to",
    "start": "1236040",
    "end": "1243450"
  },
  {
    "text": "actually call run command execute that and then using step functions again that will help you coordinate those lambda",
    "start": "1243450",
    "end": "1249660"
  },
  {
    "text": "functions you can actually then go into a loop in order to wait for that command to finish and then check on the output",
    "start": "1249660",
    "end": "1255840"
  },
  {
    "text": "and then take actions based on the output of that command all right so to",
    "start": "1255840",
    "end": "1263730"
  },
  {
    "start": "1262000",
    "end": "1262000"
  },
  {
    "text": "kind of wrap up this event-driven section there's a lot of different data sources that come in and a lot of",
    "start": "1263730",
    "end": "1268890"
  },
  {
    "text": "different ways that you can utilize them but the thing I want you to take away from this section is that cloud watch",
    "start": "1268890",
    "end": "1275250"
  },
  {
    "text": "has a lot of features that you can integrate lambda with and there's a lot of different things because lambda",
    "start": "1275250",
    "end": "1280320"
  },
  {
    "text": "is just code and so really the sky's the limit with a diverse lambda and you can",
    "start": "1280320",
    "end": "1285480"
  },
  {
    "text": "do many different things like detection alerting remediation countermeasures forensics or security automation and in",
    "start": "1285480",
    "end": "1292710"
  },
  {
    "text": "the vein of security automation we have today with us Sidney Sweeney who's going to from Dow Jones who's going to talk",
    "start": "1292710",
    "end": "1298620"
  },
  {
    "text": "about how they're using lambda to do security automation",
    "start": "1298620",
    "end": "1303750"
  },
  {
    "text": "[Applause]",
    "start": "1303750",
    "end": "1310110"
  },
  {
    "text": "thank you for the introduction Brittany a lot of that about cloud watch and lambda will be super important for what",
    "start": "1310110",
    "end": "1316390"
  },
  {
    "text": "I'm going to take us through today but I'd first like to start my section by talking about a video game that I've",
    "start": "1316390",
    "end": "1322720"
  },
  {
    "text": "been playing a lot of in the last week but I can't remember the name right now so I hope you guys can help me I think",
    "start": "1322720",
    "end": "1328450"
  },
  {
    "text": "it rhymes with fall of duty if anyone's heard of that this game has a zombie",
    "start": "1328450",
    "end": "1335590"
  },
  {
    "text": "mode which is really fun it starts off pretty easy your zombies are coming a few at a time you're",
    "start": "1335590",
    "end": "1342130"
  },
  {
    "text": "figuring out your map you have doors and windows where the zombies can come in and attack you and it gradually",
    "start": "1342130",
    "end": "1349090"
  },
  {
    "text": "increases until suddenly a zombie is crawling up out of the floor falling",
    "start": "1349090",
    "end": "1355810"
  },
  {
    "text": "from the ceiling or just sneaking up behind you and biting your arm off now I reminded I was reminded a lot of a",
    "start": "1355810",
    "end": "1363130"
  },
  {
    "text": "security problem when you think about a security team trying to make sure their cloud environment is safe or their",
    "start": "1363130",
    "end": "1369970"
  },
  {
    "text": "application is safe they'll go through a really similar process by making sure that all of their doors and windows are",
    "start": "1369970",
    "end": "1375790"
  },
  {
    "text": "secure from attacks building up their defenses along the way by buying better guns and defenses for killing their",
    "start": "1375790",
    "end": "1381880"
  },
  {
    "text": "zombies so today I'll take you through how we automated the way we deploy our zombie defenses at Joe Jones",
    "start": "1381880",
    "end": "1390000"
  },
  {
    "text": "so imagine playing zombies but on hundreds of maps at the same time so Dow",
    "start": "1390660",
    "end": "1398320"
  },
  {
    "text": "Jones is a part of News Corp which is a global media company that comprises of business leaders and industries",
    "start": "1398320",
    "end": "1404380"
  },
  {
    "text": "including book publishing digital real estate services sorry paid TV",
    "start": "1404380",
    "end": "1410800"
  },
  {
    "text": "distribution sports programming and news and information services which you may",
    "start": "1410800",
    "end": "1415810"
  },
  {
    "text": "recognize from some of the logos behind me like Wall Street Journal and Barron's Dow Jones is a tech leader in the news",
    "start": "1415810",
    "end": "1422470"
  },
  {
    "text": "corp family and being so we scaled our automation project across the news court business units redwood is the tool that",
    "start": "1422470",
    "end": "1431770"
  },
  {
    "text": "we've built to be able to scale our environment this tool deploys our baseline security defenses across our aw",
    "start": "1431770",
    "end": "1440440"
  },
  {
    "text": "cloud environment we needed something that could be centrally managed have a small footprint have minimal maintenance",
    "start": "1440440",
    "end": "1447340"
  },
  {
    "text": "requirements but most importantly would be able to grow with our environment as it grows too so this is what the Redwood",
    "start": "1447340",
    "end": "1458770"
  },
  {
    "text": "architecture looks like in AWS services the main compute is hosted on code build which is actually a container that runs",
    "start": "1458770",
    "end": "1465820"
  },
  {
    "text": "a Python process that executes terraform to create the resources across all of our accounts we use supporting",
    "start": "1465820",
    "end": "1472330"
  },
  {
    "text": "infrastructure and DynamoDB to track all of our deployments and log them and we store all of the resource configurations",
    "start": "1472330",
    "end": "1479170"
  },
  {
    "text": "in essential s3 bucket so that every resource that's part of this scope of this project has its state somewhere",
    "start": "1479170",
    "end": "1485770"
  },
  {
    "text": "that we can always check on it we also store central Cloud trail logs which is",
    "start": "1485770",
    "end": "1490930"
  },
  {
    "text": "one of the controls that redwood delivers to our accounts other controls include cloud health integration for",
    "start": "1490930",
    "end": "1499000"
  },
  {
    "text": "billing optimization and visibility redwood also enables guard duty and all",
    "start": "1499000",
    "end": "1504010"
  },
  {
    "text": "the accounts in our organization redwood also deploys cloud watch enforcement architecture to",
    "start": "1504010",
    "end": "1510310"
  },
  {
    "text": "be able to detect configuration drift in our resources and reacts to them and an octa integration to federate all of our",
    "start": "1510310",
    "end": "1517480"
  },
  {
    "text": "AWS accounts with SSO lambda plays a",
    "start": "1517480",
    "end": "1523000"
  },
  {
    "text": "huge role in making redwood more powerful by making it dynamic lambda",
    "start": "1523000",
    "end": "1528070"
  },
  {
    "text": "gives us alternative trigger sources to be able to target our deployments to the accounts in our organization the first example being to update in",
    "start": "1528070",
    "end": "1535120"
  },
  {
    "text": "patch we can use lambda to isolate our process of talking to the organization's API to gather a full inventory of how",
    "start": "1535120",
    "end": "1542140"
  },
  {
    "text": "many accounts are in our organization at a given point in time and coordinate parallel resource deployments to all of",
    "start": "1542140",
    "end": "1547540"
  },
  {
    "text": "them we can also use lambda for a reactive enforcement infrastructure in",
    "start": "1547540",
    "end": "1553450"
  },
  {
    "text": "the same way that Brittany presented you can hook it up to a cloud watch rule and have it triggered on a certain kind of",
    "start": "1553450",
    "end": "1560200"
  },
  {
    "text": "event and a good application of that for us is when we create a new account in",
    "start": "1560200",
    "end": "1565480"
  },
  {
    "text": "our organization we can automatically deploy security controls that account as it comes up",
    "start": "1565480",
    "end": "1572230"
  },
  {
    "text": "this is the first example when we use lambda to update and patch when we",
    "start": "1572230",
    "end": "1577640"
  },
  {
    "text": "isolate that process and no lambda can talk to the organization's API which actually sits in the master account of",
    "start": "1577640",
    "end": "1583460"
  },
  {
    "text": "our organization and can describe all of the account IDs our lambda can extract the account ideas from that response and",
    "start": "1583460",
    "end": "1589910"
  },
  {
    "text": "kick off simultaneous deployment processes in our code build as part of",
    "start": "1589910",
    "end": "1595010"
  },
  {
    "text": "our Redwood system in our central cloud services account where the system is hosted and you can see the arrow again",
    "start": "1595010",
    "end": "1601010"
  },
  {
    "text": "of how the flow works to create the resources of the child account that represent our security controls and this",
    "start": "1601010",
    "end": "1611750"
  },
  {
    "text": "is the generic mechanism for the reactive enforcement where the cloud watch rule will detect the kind of event",
    "start": "1611750",
    "end": "1617390"
  },
  {
    "text": "that we should respond to the lambda can extract the account ID from that event and can target the deployment at that",
    "start": "1617390",
    "end": "1623810"
  },
  {
    "text": "relevant account this is what that looks",
    "start": "1623810",
    "end": "1629660"
  },
  {
    "text": "like in the context of a new account so when a new account is created with the organization service that service will",
    "start": "1629660",
    "end": "1636680"
  },
  {
    "text": "generate a cloud trail event that says the Cal creation process successfully completed and you'll have a cloud watch",
    "start": "1636680",
    "end": "1643340"
  },
  {
    "text": "rule that can detect that that happened and trigger a lambda to validate all of your data is safe and good like you'll",
    "start": "1643340",
    "end": "1651980"
  },
  {
    "text": "want to check that the account creation process was complete the account ID is valid and then you can kick off the",
    "start": "1651980",
    "end": "1658100"
  },
  {
    "text": "deployment in the other account this is what the whole infrastructure looks like",
    "start": "1658100",
    "end": "1664010"
  },
  {
    "text": "on a single slide you have supporting infrastructure in your master account where the actual organization API",
    "start": "1664010",
    "end": "1671510"
  },
  {
    "text": "creates the new account and then you'll kick off your process in your central account and send the controls to the new",
    "start": "1671510",
    "end": "1677420"
  },
  {
    "text": "account that just got created and actually have a video showing a demo of",
    "start": "1677420",
    "end": "1683270"
  },
  {
    "text": "the end-to-end process of creating an account and seeing the new controls existing in it right away",
    "start": "1683270",
    "end": "1690550"
  },
  {
    "text": "so you have to enter a name for the account in an email and I'm also going to create an access role to show how the",
    "start": "1692750",
    "end": "1701480"
  },
  {
    "text": "master payer can access the new account as it gets created we give it a particular name which we'll come back to",
    "start": "1701480",
    "end": "1707510"
  },
  {
    "text": "later I'll take us to the cloud watch",
    "start": "1707510",
    "end": "1714169"
  },
  {
    "text": "rule that detects the event",
    "start": "1714169",
    "end": "1717820"
  },
  {
    "text": "this is what the sample event looks like you should make sure that it's a service event from organizations itself and that",
    "start": "1723960",
    "end": "1732540"
  },
  {
    "text": "you have a success message to show that the account didn't fail upon creation",
    "start": "1732540",
    "end": "1740659"
  },
  {
    "text": "the lamda that gets triggered at the end of this rule will validate that the",
    "start": "1743870",
    "end": "1749250"
  },
  {
    "text": "account creation was successful and will also extract the account ID and take",
    "start": "1749250",
    "end": "1754650"
  },
  {
    "text": "care of other logistics like adding the new account ID to the central cloud trail bucket so that the global trail",
    "start": "1754650",
    "end": "1760380"
  },
  {
    "text": "can put to it while also kicking off a",
    "start": "1760380",
    "end": "1765780"
  },
  {
    "text": "deployment process in our central cloud services account",
    "start": "1765780",
    "end": "1770659"
  },
  {
    "text": "have you ever recorded yourself using a trackpad it kind of looks like you don't know how to use a mouse once you",
    "start": "1776380",
    "end": "1781520"
  },
  {
    "text": "actually see it so when you have a cloud",
    "start": "1781520",
    "end": "1788510"
  },
  {
    "text": "watch rule that's detecting an event you can actually see on a graph how often it's invoked so when i refresh the page",
    "start": "1788510",
    "end": "1797150"
  },
  {
    "text": "our new account event shows up as that blue dot I'm actually no navigating to",
    "start": "1797150",
    "end": "1807200"
  },
  {
    "text": "our central cloud services account so we can look at the log for the process that created the new resources this is code",
    "start": "1807200",
    "end": "1817370"
  },
  {
    "text": "built and you can see that there were two successful code build executions in the last few minutes and at the bottom",
    "start": "1817370",
    "end": "1824750"
  },
  {
    "text": "the terraform logs has nine resources were added we'll go now and validate that these are the resources that",
    "start": "1824750",
    "end": "1830330"
  },
  {
    "text": "represent our security controls",
    "start": "1830330",
    "end": "1833740"
  },
  {
    "text": "starting with our I am resources we created a cloud health role to allow for",
    "start": "1841160",
    "end": "1846990"
  },
  {
    "text": "that integration to the account we can see that the policy was successfully created and the sufficient permissions",
    "start": "1846990",
    "end": "1852510"
  },
  {
    "text": "were granted to the cloud health platform this is our I am IDP type resource to allow oxygen to a sam'l",
    "start": "1852510",
    "end": "1860100"
  },
  {
    "text": "handshake into the account we'll check",
    "start": "1860100",
    "end": "1867420"
  },
  {
    "text": "that our global cloud show got created and see that it's forwarding into our central bucket and finally we can see",
    "start": "1867420",
    "end": "1878700"
  },
  {
    "text": "that guard duty was also turned on and it's in the free trial because it was just enabled like a second ago",
    "start": "1878700",
    "end": "1886160"
  },
  {
    "text": "so it took four of us engineers part-time to kill our zombies over",
    "start": "1890910",
    "end": "1897470"
  },
  {
    "text": "hundreds of AWS accounts and I've actually provided a link for you to be",
    "start": "1897470",
    "end": "1903030"
  },
  {
    "text": "able to get started too if you're interested there's an AWS blog that has some of the same principles as what we",
    "start": "1903030",
    "end": "1909120"
  },
  {
    "text": "followed in this project for being totally serverless and micro service-oriented so that you can try it",
    "start": "1909120",
    "end": "1914520"
  },
  {
    "text": "too and now I'll introduce Andrew who",
    "start": "1914520",
    "end": "1919740"
  },
  {
    "text": "will talk about using lambda in an enterprise setting all right thank you",
    "start": "1919740",
    "end": "1930150"
  },
  {
    "text": "very much Sydney hey everybody my name is Andrew Baird I'm a principal Solutions Architect for AWS out of our",
    "start": "1930150",
    "end": "1936450"
  },
  {
    "text": "Atlanta Georgia office I work with Brittney down in Atlanta and I'm here to talk about some specific patterns that",
    "start": "1936450",
    "end": "1942480"
  },
  {
    "text": "are good things to keep in mind when determining how you're going to utilize",
    "start": "1942480",
    "end": "1947490"
  },
  {
    "text": "lambda within your security organization across all the different accounts that likely make up your you know your",
    "start": "1947490",
    "end": "1953100"
  },
  {
    "text": "enterprise wide usage of AWS I mean and Sydney and the Dow Jones team have you",
    "start": "1953100",
    "end": "1958590"
  },
  {
    "text": "know a really mature platform that there's a lot of great things like you saw and I'm gonna kind of boil down you",
    "start": "1958590",
    "end": "1965130"
  },
  {
    "text": "know and distill what some of those patterns from with the ways lambda fits into those strategies and so you can get an idea of where your organization can",
    "start": "1965130",
    "end": "1971910"
  },
  {
    "text": "start on its own path towards something like redwood maybe someday so the first pattern that I'm going to talk about I'm",
    "start": "1971910",
    "end": "1978060"
  },
  {
    "text": "going to call it extend and what I'm referring to here is the ability for a lambda function that's running within",
    "start": "1978060",
    "end": "1984390"
  },
  {
    "text": "your security organizations AWS account to extend into all of the other AWS",
    "start": "1984390",
    "end": "1990300"
  },
  {
    "text": "accounts that run as part of your enterprise and take actions of some kind that can be to to gather you know",
    "start": "1990300",
    "end": "1997020"
  },
  {
    "text": "insights and describe instances and make sure they're configured the way you expect it can be to take remediating",
    "start": "1997020",
    "end": "2002060"
  },
  {
    "text": "actions as all sorts of things but the idea is that you have code that you've written that code runs within an account",
    "start": "2002060",
    "end": "2008570"
  },
  {
    "text": "that you own and that code is an extension of your policy in your security team into all of the other AWS",
    "start": "2008570",
    "end": "2014330"
  },
  {
    "text": "accounts that are running inside of inside of your enterprise I'm the the best example I think of showing this in",
    "start": "2014330",
    "end": "2021470"
  },
  {
    "text": "action is mirrors what Bernie's talked about already and that's two clutch events and I'm gonna highlight a specific feature that",
    "start": "2021470",
    "end": "2027470"
  },
  {
    "start": "2025000",
    "end": "2025000"
  },
  {
    "text": "cloud watch events has that we haven't talked about yet that's relevant to multi account organizations that's called a cloud watch events bus so cloud",
    "start": "2027470",
    "end": "2034670"
  },
  {
    "text": "watch events for each of your accounts comes with a default bus for each of",
    "start": "2034670",
    "end": "2040190"
  },
  {
    "text": "those accounts that's able to accept events that are occurring from other AWS services or also from events that are",
    "start": "2040190",
    "end": "2047450"
  },
  {
    "text": "occurring across other AWS accounts that you've given permission to so you're able to whitelist the accounts that are",
    "start": "2047450",
    "end": "2054408"
  },
  {
    "text": "part of your organization maybe you're white listing them through similar automation like Sydney and the Dow Jones team have set up through Redwood but",
    "start": "2054409",
    "end": "2061250"
  },
  {
    "text": "every time it counts created you'd add that account to your events bus whitelist and then all of the events that you create in those accounts they",
    "start": "2061250",
    "end": "2067490"
  },
  {
    "text": "can be delivered as their target to an events bus that's sitting inside your security organizations account and now",
    "start": "2067490",
    "end": "2073399"
  },
  {
    "text": "you've got clout events that are occurring throughout the entire organization's account structure but they're being delivered as events into",
    "start": "2073400",
    "end": "2079370"
  },
  {
    "text": "an account that you own and you manage and you can create your own triggering rules off of those events so the way the",
    "start": "2079370",
    "end": "2084889"
  },
  {
    "text": "architecture kind of looks is like this all those events that you'll provision into all those other accounts that you",
    "start": "2084890",
    "end": "2091398"
  },
  {
    "text": "care about as those events are you know firing and you know the activities that you've filtered on are being detected",
    "start": "2091399",
    "end": "2097520"
  },
  {
    "text": "they're gonna be delivered to that central cloud watch events bus where you set up your own targets potentially",
    "start": "2097520",
    "end": "2103490"
  },
  {
    "text": "pointed at a lambda function and that lambda function is able to again be an extension of your security team back",
    "start": "2103490",
    "end": "2109670"
  },
  {
    "text": "into those accounts where the events are occurring and so those events could be - you know remediate the actions that have",
    "start": "2109670",
    "end": "2115280"
  },
  {
    "text": "occurred that you think should not have taken place it can be to gather more forensics or details configuration",
    "start": "2115280",
    "end": "2121400"
  },
  {
    "text": "details about the events that have occurred and at the same time that lambda function can take other actions",
    "start": "2121400",
    "end": "2126860"
  },
  {
    "text": "aside from what's happening in those accounts it can integrate with your existing security tools that can notify",
    "start": "2126860",
    "end": "2132050"
  },
  {
    "text": "people if they need to be notified things like that so this is the extend pattern the second pattern I'm going to",
    "start": "2132050",
    "end": "2138770"
  },
  {
    "text": "talk about is centralized so each of the models I'm talking about kind of operate",
    "start": "2138770",
    "end": "2144080"
  },
  {
    "text": "on the under the assumption that your security team is operating its own AWS account and that you prefer to have all",
    "start": "2144080",
    "end": "2149750"
  },
  {
    "text": "of your you know security policies and all the code that you're writing and all of your operational activities as a",
    "start": "2149750",
    "end": "2154970"
  },
  {
    "text": "secured team is going to be centralized within a single or set of AWS accounts that are separate",
    "start": "2154970",
    "end": "2160980"
  },
  {
    "text": "from where your actual business applications are deployed and your developers you know to perform there at",
    "start": "2160980",
    "end": "2166830"
  },
  {
    "text": "their duties for your organization but the same kind of mindset could still apply if you're you know more single",
    "start": "2166830",
    "end": "2172230"
  },
  {
    "text": "account oriented so the pattern of centralized is to take all of the various forms of telemetry that AWS is",
    "start": "2172230",
    "end": "2179250"
  },
  {
    "text": "generating across all of your accounts and make sure that telemetry is being",
    "start": "2179250",
    "end": "2184400"
  },
  {
    "text": "retrieved and stored in a way and in a place at your security organization is",
    "start": "2184400",
    "end": "2189570"
  },
  {
    "text": "able to have visibility into whether it's to you know to have that visibility",
    "start": "2189570",
    "end": "2194850"
  },
  {
    "text": "or to make sure that all the telemetry is going to be unmodified and it's going to be secured and you've got access",
    "start": "2194850",
    "end": "2201000"
  },
  {
    "text": "controls around it so that all of the accounts that are generating that telemetry and those developers and",
    "start": "2201000",
    "end": "2206250"
  },
  {
    "text": "application teams that are free to you know continue behaving the way that they need to and having access that they need",
    "start": "2206250",
    "end": "2211980"
  },
  {
    "text": "to for the resources that live within their accounts that the telemetry you care about as a security team is still",
    "start": "2211980",
    "end": "2218190"
  },
  {
    "text": "being delivered to a place that your application teams don't have access to and that your security team manages the",
    "start": "2218190",
    "end": "2224940"
  },
  {
    "text": "way the lambda can play a role in this type of pattern is either one to help you know coordinate and configure those",
    "start": "2224940",
    "end": "2230250"
  },
  {
    "text": "telemetry sources that you care about being enabled in those accounts or it can act as a a processing engine for the",
    "start": "2230250",
    "end": "2237240"
  },
  {
    "text": "telemetry that's created so as the new forms of telemetry are created whether it be through cloud watch logs or files",
    "start": "2237240",
    "end": "2244140"
  },
  {
    "text": "being delivered in s3 buckets those things can also act as event sources to lambda functions that are running inside",
    "start": "2244140",
    "end": "2250320"
  },
  {
    "text": "of your security account and you know you can review and take action depending",
    "start": "2250320",
    "end": "2255600"
  },
  {
    "text": "on all the details that are inside of those events that are that are being delivered a great example of this in a",
    "start": "2255600",
    "end": "2262830"
  },
  {
    "text": "multi account organization of this centralize mindset is AWS config which we haven't talked about yet for those",
    "start": "2262830",
    "end": "2268980"
  },
  {
    "start": "2268000",
    "end": "2268000"
  },
  {
    "text": "that aren't familiar AWS config is all about being able to track the configuration changes for the resources",
    "start": "2268980",
    "end": "2275280"
  },
  {
    "text": "across your AWS accounts and determine if those configuration changes that are occurring over time are considered",
    "start": "2275280",
    "end": "2281880"
  },
  {
    "text": "compliant or not with whatever your compliance rules are and the way that compliance is determined is by",
    "start": "2281880",
    "end": "2288030"
  },
  {
    "text": "evaluating those changes against what are called config rules and Figg rules can come in one of two flavors I'm either they can be a managed",
    "start": "2288030",
    "end": "2294809"
  },
  {
    "text": "rule where you can set some basic configuration information and we've written a rule that will evaluate the",
    "start": "2294809",
    "end": "2299940"
  },
  {
    "text": "change against your configuration and determine if a change is compliant or not so an example would be we have a",
    "start": "2299940",
    "end": "2306450"
  },
  {
    "text": "managed rule to make sure that no security group has SSH access open to the internet you enable that rule if a",
    "start": "2306450",
    "end": "2312690"
  },
  {
    "text": "security group changes where that's you know observed we will mark the security group as not compliant with that rule",
    "start": "2312690",
    "end": "2318089"
  },
  {
    "text": "that you've configured but the second flavor of config rules is a custom configural which is a lambda function",
    "start": "2318089",
    "end": "2324089"
  },
  {
    "text": "that you've written and as those changes occur in your environment the details and the configuration items that",
    "start": "2324089",
    "end": "2329490"
  },
  {
    "text": "represent you know the resources will be delivered to the code that you've written and the code that you write will be able to evaluate that change and",
    "start": "2329490",
    "end": "2336029"
  },
  {
    "text": "determine you know your policy against the change that's occurred and and determine if it's compliant or not and",
    "start": "2336029",
    "end": "2342299"
  },
  {
    "text": "the way that can kind of fit in a multi account strategy is there's there's two great features one of which is only",
    "start": "2342299",
    "end": "2347880"
  },
  {
    "start": "2343000",
    "end": "2343000"
  },
  {
    "text": "about a week old the first is called an AWS config aggregator and what this gives you the ability to do is to",
    "start": "2347880",
    "end": "2354000"
  },
  {
    "text": "provision all of those config rules within your security or security account within your organization and enable the",
    "start": "2354000",
    "end": "2362460"
  },
  {
    "text": "delivery of the config changes from your application accounts to the config rule",
    "start": "2362460",
    "end": "2367769"
  },
  {
    "text": "lambda functions running in your account and as you declare resources across those accounts as either compliant or",
    "start": "2367769",
    "end": "2373200"
  },
  {
    "text": "not compliant a config aggregator gives you a centralized view of all of the",
    "start": "2373200",
    "end": "2378390"
  },
  {
    "text": "different compliance statuses across all the different accounts within your organization so you get a single pane of",
    "start": "2378390",
    "end": "2383549"
  },
  {
    "text": "glass that gives you you know visibility into all the different compliance state of all the resources that you've written",
    "start": "2383549",
    "end": "2389759"
  },
  {
    "text": "configure rules for the second way that AWS config plays really well at the multi account strategy that's that's",
    "start": "2389759",
    "end": "2396480"
  },
  {
    "text": "very new is rather than just having those compliance States be visible in a single pane of glass within one AWS",
    "start": "2396480",
    "end": "2402630"
  },
  {
    "text": "account you can actually now have all of the configuration items that are called the the image that describes all the",
    "start": "2402630",
    "end": "2408569"
  },
  {
    "text": "resources within an account over some schedule you're going to have that entire JSON object be delivered to a",
    "start": "2408569",
    "end": "2415259"
  },
  {
    "text": "separate AWS account which is likely your security account and all the changes themselves will be directly",
    "start": "2415259",
    "end": "2420539"
  },
  {
    "text": "delivered to to an s3 bucket or an SNS topic and running within your security",
    "start": "2420539",
    "end": "2425870"
  },
  {
    "text": "organization then and you can take actions or write lambda functions against those things okay so a lot of",
    "start": "2425870",
    "end": "2432320"
  },
  {
    "text": "great options for lambda to fit in a lot of a lot of patterns you know two basic",
    "start": "2432320",
    "end": "2437420"
  },
  {
    "text": "patterns but a ton of possibility for the ways our services play into those patterns and you might be thinking okay",
    "start": "2437420",
    "end": "2442490"
  },
  {
    "text": "I get the idea that we're gonna write code it's gonna run as functions I've got a lot of accounts where things are going to be triggered and firing but how",
    "start": "2442490",
    "end": "2448970"
  },
  {
    "text": "do I manage that there's a lot of complexity for my team and there's a lot of accounts potentially that already exist within our organization where do I",
    "start": "2448970",
    "end": "2455690"
  },
  {
    "text": "start provisioning the things and I care about into those accounts in a way that's manageable and doesn't introduce",
    "start": "2455690",
    "end": "2461900"
  },
  {
    "text": "a lot of you know heavy lifting and manual work and Sydney in the Dow Jones team have really successfully",
    "start": "2461900",
    "end": "2468020"
  },
  {
    "text": "implemented this with Redwood through a really you know cool use of our code build service but another native",
    "start": "2468020",
    "end": "2474110"
  },
  {
    "text": "functionality we have on AWS that's our native infrastructure as code service is",
    "start": "2474110",
    "end": "2479150"
  },
  {
    "text": "called cloud formation if you're not familiar with cloud formation it gives you the ability to describe infrastructure resources and your",
    "start": "2479150",
    "end": "2485180"
  },
  {
    "text": "environment details as code and either JSON or UML provide that description that template to an API and have all the",
    "start": "2485180",
    "end": "2493010"
  },
  {
    "text": "resources you've defined be programmatically provisioned into into the account you've targeted there's a",
    "start": "2493010",
    "end": "2498020"
  },
  {
    "text": "functionality within cloud formation that I think is crucial to understand as a security organization if you're",
    "start": "2498020",
    "end": "2503810"
  },
  {
    "text": "adopting cloud formation and that's called stack sets and what stack sets gives you the ability to do is to take a",
    "start": "2503810",
    "end": "2509870"
  },
  {
    "text": "single template that you've defined and that describes all those resources you care about so potentially things like",
    "start": "2509870",
    "end": "2515240"
  },
  {
    "text": "you know cloud watch event rules you know enabling cloud trail and I'm going to show you examples of these in a",
    "start": "2515240",
    "end": "2520520"
  },
  {
    "text": "second and a demo but to find that single template you care about the defines you know the controls and",
    "start": "2520520",
    "end": "2525650"
  },
  {
    "text": "policies you want to apply through code and resources and target their provisioning into a number of different",
    "start": "2525650",
    "end": "2532370"
  },
  {
    "text": "AWS accounts across different AWS regions so from a single a single",
    "start": "2532370",
    "end": "2537470"
  },
  {
    "text": "console a single set of ap is to take that template and provision the stack",
    "start": "2537470",
    "end": "2542600"
  },
  {
    "text": "that you've defined into a set of AWS accounts where your applications are",
    "start": "2542600",
    "end": "2547790"
  },
  {
    "text": "running across regions so that you have a single place to interface with programmatically and have all the things",
    "start": "2547790",
    "end": "2554000"
  },
  {
    "text": "that you've written be provisioned across the entire organization and it has native integration with AWS organizations as well each time you take",
    "start": "2554000",
    "end": "2560390"
  },
  {
    "text": "an action with CloudFormation stack sets when you're determining which accounts this this template should be applied to",
    "start": "2560390",
    "end": "2567410"
  },
  {
    "text": "you can simply provide an organizational unit ID as part of our organization's service in every account that's part of",
    "start": "2567410",
    "end": "2573860"
  },
  {
    "text": "that o you will have the template change be applied to it so the stack will be created the stack will be updated those",
    "start": "2573860",
    "end": "2580340"
  },
  {
    "text": "kind of things so it's got this native integration with organizations that you",
    "start": "2580340",
    "end": "2585410"
  },
  {
    "text": "might already be using and organizing your accounts through through AWS orgs and stack sets plays really nicely with",
    "start": "2585410",
    "end": "2591200"
  },
  {
    "text": "it already so I'm gonna pause there and do a brief demo of a couple different ways these patterns can be applied in an",
    "start": "2591200",
    "end": "2598550"
  },
  {
    "text": "actual a double just account and show you some code so I'm gonna pop out here and what I have here and this is as",
    "start": "2598550",
    "end": "2605660"
  },
  {
    "text": "large as I think I really need to make it this is a full cloud formation template and this is a template and if you're quick you could probably type",
    "start": "2605660",
    "end": "2611750"
  },
  {
    "text": "this template down in your own keyboard while I've got it around here and if you're watching on YouTube you can just pause now and take a look at the code",
    "start": "2611750",
    "end": "2618050"
  },
  {
    "text": "and and we're back okay and this is just enabling cloud trail it's going to enable cloud trail it's gonna make sure",
    "start": "2618050",
    "end": "2624320"
  },
  {
    "text": "that all the global resources are tracked like I am you want cloud trail enabled and all AWS regions very simple",
    "start": "2624320",
    "end": "2631100"
  },
  {
    "text": "template that when applied will enable cloud trail across all of your regions for an account so this is great for that",
    "start": "2631100",
    "end": "2639200"
  },
  {
    "text": "gather that gather are centralized pattern where I've listed a single s3",
    "start": "2639200",
    "end": "2644390"
  },
  {
    "text": "bucket name that's living inside a central security account I've got created as part of organizations and every time this template runs this cloud",
    "start": "2644390",
    "end": "2651020"
  },
  {
    "text": "trail and all of its log files will be delivered to this one s3 bucket that I've created that sits in my security",
    "start": "2651020",
    "end": "2656990"
  },
  {
    "text": "account so a centralized example a second cloud formation template I have",
    "start": "2656990",
    "end": "2662090"
  },
  {
    "text": "here is more of the extend model where I've created a cloud watch event rule that I would like to be provisioned in",
    "start": "2662090",
    "end": "2667700"
  },
  {
    "text": "my application accounts anytime a ec2 instance is pending so someone's just",
    "start": "2667700",
    "end": "2672920"
  },
  {
    "text": "launched an ec2 instance it hasn't started yet it's in pending state and I'd like this rule to be triggered every",
    "start": "2672920",
    "end": "2678560"
  },
  {
    "text": "time that occurs the two other resources just two that are also being provisioned",
    "start": "2678560",
    "end": "2684410"
  },
  {
    "text": "at the same time are pretty critical in an interesting part of what you're provisioning into other AWS accounts as",
    "start": "2684410",
    "end": "2690350"
  },
  {
    "text": "a central security account and these are I am roles and I am role in an I am policy that's going to grant",
    "start": "2690350",
    "end": "2696339"
  },
  {
    "text": "my security account the ability to assume a role into this account where it's been provisioned so you can see",
    "start": "2696339",
    "end": "2702970"
  },
  {
    "text": "I've got a trust policy set up and you would probably not hard code things in here you might you know add this as a",
    "start": "2702970",
    "end": "2708579"
  },
  {
    "text": "parameter and parameterize it but for the sake of the demo I just have my account ID hard-coded in here and this",
    "start": "2708579",
    "end": "2713680"
  },
  {
    "text": "is going to create a role in every account it's provisioned into that gives my account the ability to assume a role into it and take actions and the policy",
    "start": "2713680",
    "end": "2721030"
  },
  {
    "text": "that I have is the ability to interact with the ec2 service and to call describe instances to gather detail",
    "start": "2721030",
    "end": "2727839"
  },
  {
    "text": "about the instance that was just created and if I would like to to terminate that instance so I now have a clutch event",
    "start": "2727839",
    "end": "2735099"
  },
  {
    "text": "that will detect every time an instance has started and I have the I am resources required to let my account assume a role into this account and you",
    "start": "2735099",
    "end": "2742780"
  },
  {
    "text": "know SWAT things down as required as my policy dictates so pretty pretty small",
    "start": "2742780",
    "end": "2748540"
  },
  {
    "text": "amounts of of you know yam will code here that is going to enable both of",
    "start": "2748540",
    "end": "2753790"
  },
  {
    "text": "those types of patterns and you know pretty interesting ways so I'm going to pop over to the AWS console here and",
    "start": "2753790",
    "end": "2759430"
  },
  {
    "text": "kind of show you in action first I'll kind of show you the cloud formation stack sets console to give you",
    "start": "2759430",
    "end": "2765760"
  },
  {
    "text": "an idea of how you know neatly this is laid out so I have these two stacks I've already pre provisioned them for the",
    "start": "2765760",
    "end": "2770950"
  },
  {
    "text": "demo into all of the accounts as part of my organization we can take a look at the pending ec2 instance cloud watch",
    "start": "2770950",
    "end": "2777549"
  },
  {
    "text": "event rule and it gives me an immediate view of the times that's been deployed and all of the accounts that the stack",
    "start": "2777549",
    "end": "2784150"
  },
  {
    "text": "has been applied to and what their state is against the current version of the template so will tell me that all of the",
    "start": "2784150",
    "end": "2790030"
  },
  {
    "text": "accounts of my org that this templates been pushed to they've got the current version of the template if I add an",
    "start": "2790030",
    "end": "2795640"
  },
  {
    "text": "additional AWS account to this stack set that I haven't pushed the most updated",
    "start": "2795640",
    "end": "2801460"
  },
  {
    "text": "version of the template to it'll tell me it's outdated here on the screen but all my accounts are current right now so",
    "start": "2801460",
    "end": "2808690"
  },
  {
    "text": "based on this - there's two things I've implemented I'll show the lambda coder in a second that's taking actions I've got the ability to go in from my central",
    "start": "2808690",
    "end": "2818170"
  },
  {
    "text": "security account I'm going to federate the separate role just for the demo into an application account and I'm going to",
    "start": "2818170",
    "end": "2823450"
  },
  {
    "text": "launch an ec2 instance so the ec2 since am i or the image ID that i as a",
    "start": "2823450",
    "end": "2829360"
  },
  {
    "text": "security team have whitelisted is i want my team to only use Amazon Linux - I care about you know long-term support I",
    "start": "2829360",
    "end": "2835510"
  },
  {
    "text": "want to make sure that's enabled I've got you know bootstrapping capabilities built in for Linux - and if somebody",
    "start": "2835510",
    "end": "2841060"
  },
  {
    "text": "launches any other AMI I want that instance to be terminated so I as an application team maybe I'm unaware of",
    "start": "2841060",
    "end": "2846550"
  },
  {
    "text": "this maybe not I've decided that there's a different ami that I prefer and I don't",
    "start": "2846550",
    "end": "2851620"
  },
  {
    "text": "care what the security team thinks about it so I'm just going to go ahead and launch it so we're gonna pick a separate",
    "start": "2851620",
    "end": "2859470"
  },
  {
    "text": "ami we're gonna proceed without a key pair just for the sake of the demo I'm gonna launch the instance if I take a",
    "start": "2859470",
    "end": "2865900"
  },
  {
    "text": "look in my ec2 console now just because it took me a couple seconds to click on",
    "start": "2865900",
    "end": "2871360"
  },
  {
    "text": "view instance as you can see it's already shutting down it was impending state for maybe a couple seconds before that cloud watch",
    "start": "2871360",
    "end": "2877420"
  },
  {
    "text": "event rule was triggered notified my security account that has role-based access into this account and a lambda",
    "start": "2877420",
    "end": "2884140"
  },
  {
    "text": "function I wrote took action to terminate the instance so very immediate this is a piece of infrastructure that",
    "start": "2884140",
    "end": "2889300"
  },
  {
    "text": "wasn't even allowed to stand up before the security team took action against it so I'll jump back into my admin account",
    "start": "2889300",
    "end": "2897580"
  },
  {
    "text": "and give you a brief look at kind of how the lambda function code is written let me refresh here so I've got two separate",
    "start": "2897580",
    "end": "2906640"
  },
  {
    "text": "lambda functions there's this function is what's relevant to the conversation",
    "start": "2906640",
    "end": "2911710"
  },
  {
    "text": "right now the to inspect ec2 changes within my accounts I'll blow up the code",
    "start": "2911710",
    "end": "2917140"
  },
  {
    "text": "here and not a lot of code just take away the whitespace maybe 30 lines of",
    "start": "2917140",
    "end": "2922180"
  },
  {
    "text": "Python code and I'll briefly describe what's happening here so as events are occurring that matched that rule I have",
    "start": "2922180",
    "end": "2929140"
  },
  {
    "text": "a hard coded you wouldn't hard code this in the real world but I have a hard coded ami ID you probably store this as you know dynamic configuration within s3",
    "start": "2929140",
    "end": "2936280"
  },
  {
    "text": "or dynamodb this is the ami whitelist for our purposes it's a it's a simple list with a hard-coded string the first",
    "start": "2936280",
    "end": "2943270"
  },
  {
    "text": "thing that our codes going to do it's going to extract the instance ID as part of that event Clow watch gives me that instance ID as",
    "start": "2943270",
    "end": "2949690"
  },
  {
    "text": "part of the event I'm going to extract it and then I'm going to use the STS service to call the security token",
    "start": "2949690",
    "end": "2956650"
  },
  {
    "text": "service to call its API assume role and I'm going to call assume role with again another hard-coded parameter you",
    "start": "2956650",
    "end": "2962200"
  },
  {
    "text": "probably wouldn't hard code in your code but that's going to assume the role I created as part of that cloud formation",
    "start": "2962200",
    "end": "2967480"
  },
  {
    "text": "stack so now my lambda functions assuming the role that was pre created alongside the event that triggered this",
    "start": "2967480",
    "end": "2973000"
  },
  {
    "text": "function and I'll immediately from its response grab AWS credentials I've now got temporary AWS credentials for that",
    "start": "2973000",
    "end": "2979059"
  },
  {
    "text": "role and I'll call the I'll create an ec2 client using those credentials here",
    "start": "2979059",
    "end": "2984700"
  },
  {
    "text": "and once I've got an ec2 client created I'm gonna call describe instances and",
    "start": "2984700",
    "end": "2990069"
  },
  {
    "text": "gather all of the details about the instance that was just created I'm gonna have a little if statement here if the",
    "start": "2990069",
    "end": "2996069"
  },
  {
    "text": "instance is part of my ami whitelist and that's the image idea it used I don't need to do anything everybody's following the rules but if if they",
    "start": "2996069",
    "end": "3003059"
  },
  {
    "text": "launch something I've said that they can't launch I'm gonna take action immediately my code is going to extend my policy programmatically terminate",
    "start": "3003059",
    "end": "3010530"
  },
  {
    "text": "with prejudice that ec2 instance that doesn't follow our policy so you see here I call that same easy to client",
    "start": "3010530",
    "end": "3017130"
  },
  {
    "text": "using my temporary credentials and I'm gonna terminate the instance and it was shut down before before it could even",
    "start": "3017130",
    "end": "3022380"
  },
  {
    "text": "stand up so a great example of that you know extend pattern of extending your",
    "start": "3022380",
    "end": "3028470"
  },
  {
    "text": "policy through code into your AWS accounts now the second piece I'm going to show is the more centralized model",
    "start": "3028470",
    "end": "3038089"
  },
  {
    "text": "let's go back here that's good like this",
    "start": "3038089",
    "end": "3043730"
  },
  {
    "text": "so I have a second lambda function that's going to take all the cloud trial logs that are delivered to my s3 bucket",
    "start": "3043730",
    "end": "3049500"
  },
  {
    "text": "centrally but I want to operationalize them a little more and there's cross account delivery of cloud trial logs to s3 buckets but I but I want to take the",
    "start": "3049500",
    "end": "3057119"
  },
  {
    "text": "logs that are delivered to s3 and put them somewhere more useful to me as an as an operation security team so I've",
    "start": "3057119",
    "end": "3063690"
  },
  {
    "text": "written a small lambda function to be triggered every time a a new object lands in that s3 bucket as part of the",
    "start": "3063690",
    "end": "3070140"
  },
  {
    "text": "Cloud trail trail and what this code is gonna do is it's going to evaluate the",
    "start": "3070140",
    "end": "3077250"
  },
  {
    "text": "specific object that's landed in the s3 bucket so there's a new file that's landed in the bucket I'm going to gather",
    "start": "3077250",
    "end": "3083460"
  },
  {
    "text": "metadata about you know what's the bucket name what's the object key I'm going to call get object to download the",
    "start": "3083460",
    "end": "3090270"
  },
  {
    "text": "object locally I'm going to do some you know decompression and encoding thing that are just you know relevant to the",
    "start": "3090270",
    "end": "3096060"
  },
  {
    "text": "way the files are created by cloud trail and then I'm immediately going to interface with our Kinesis firehose",
    "start": "3096060",
    "end": "3102360"
  },
  {
    "text": "service and I'm gonna take the data I've extracted from the s3 bucket and I'm gonna use this little lightweight lambda",
    "start": "3102360",
    "end": "3107730"
  },
  {
    "text": "function to flip that same file over to our Kinesis firehose service which is a real-time data ingestion service and the",
    "start": "3107730",
    "end": "3114900"
  },
  {
    "text": "destinations for Kinesis firehose can either be another s3 bucket which wouldn't be too useful for me right now",
    "start": "3114900",
    "end": "3121170"
  },
  {
    "text": "but for a lot of cases it's very useful or you can also add the destination be a redshift cluster for a data warehouse",
    "start": "3121170",
    "end": "3126600"
  },
  {
    "text": "and elasticsearch cluster or Splunk and those are all native integrations from",
    "start": "3126600",
    "end": "3132210"
  },
  {
    "text": "Kinesis firehose from from my Kinesis firehose I deliver all of my cloud trail log information to elasticsearch and AWS",
    "start": "3132210",
    "end": "3141060"
  },
  {
    "text": "elastic search has cabana built in and I've got a Cabana dashboard here that",
    "start": "3141060",
    "end": "3147390"
  },
  {
    "text": "I've you know federated into and I can login and I immediately have all of my cloud trail data that's been delivered",
    "start": "3147390",
    "end": "3153570"
  },
  {
    "text": "to s3 through that you know cloud formation stack set my small lambda functions taking those files flipping",
    "start": "3153570",
    "end": "3160050"
  },
  {
    "text": "them to Kinesis firehose and now I have a near real-time visit near real-time",
    "start": "3160050",
    "end": "3165360"
  },
  {
    "text": "visibility into that cloud for information in a very like operationally savvy service like Cabana on top of on",
    "start": "3165360",
    "end": "3172680"
  },
  {
    "text": "top of elasticsearch so you can see examples here where if I pull out the",
    "start": "3172680",
    "end": "3180590"
  },
  {
    "text": "pull out the amount of data that I'm looking at that in the last 24 hours I've had one terminated instance",
    "start": "3180590",
    "end": "3186240"
  },
  {
    "text": "occurrence occur and then you can take advantage of all the Cabana features not a Cabana session necessarily but it's a",
    "start": "3186240",
    "end": "3192180"
  },
  {
    "text": "great tool with a lot of operational log visibility and searching in the next thing but 30 lines of lambda code and",
    "start": "3192180",
    "end": "3198390"
  },
  {
    "text": "some cloud formation you know 10 lines of confirmation I have all my cloud rolled data in a central security",
    "start": "3198390",
    "end": "3203520"
  },
  {
    "text": "account sitting in a very searchable index service like this so that's that the centralized pattern so lambda",
    "start": "3203520",
    "end": "3209610"
  },
  {
    "text": "provides you with that very flexible compute service where the business logic",
    "start": "3209610",
    "end": "3215190"
  },
  {
    "text": "that you want to apply as a security team and business logic in terms of policy and enforcement and remediation",
    "start": "3215190",
    "end": "3220650"
  },
  {
    "text": "and those things can sit very neatly between all of these services we provide that creates ulema tree or provide",
    "start": "3220650",
    "end": "3226800"
  },
  {
    "text": "events and they take action for your security team so with that I'm gonna jump back into the demo and aside from those two patterns I",
    "start": "3226800",
    "end": "3235650"
  },
  {
    "text": "want to highlight one more pattern I'm gonna call it pattern zero and many people probably have heard of the you know design principle of KISS I'm gonna",
    "start": "3235650",
    "end": "3242970"
  },
  {
    "text": "replace simple with so our service-oriented architectures because they've been a foundational pattern for",
    "start": "3242970",
    "end": "3249050"
  },
  {
    "text": "software architectures for years now and lambda plays really well within those designs too so you can wrap a Amazon API",
    "start": "3249050",
    "end": "3256320"
  },
  {
    "start": "3254000",
    "end": "3254000"
  },
  {
    "text": "gateway REST API endpoint around a lambda function and now you've written an HTTP micro service where the code",
    "start": "3256320",
    "end": "3262770"
  },
  {
    "text": "that you've written is sitting behind an API that's being managed in a serverless way and you as a security team can do",
    "start": "3262770",
    "end": "3268080"
  },
  {
    "text": "all sorts of things now that you've got security code sitting behind an API you can build custom security dashboards or",
    "start": "3268080",
    "end": "3274830"
  },
  {
    "text": "web applications that do interesting things that you'd like visibility into there's all sorts of chat bot type",
    "start": "3274830",
    "end": "3280740"
  },
  {
    "text": "platforms and services that have the concept of web hooks that can reach out to each PAP eyes and those web hooks can",
    "start": "3280740",
    "end": "3287310"
  },
  {
    "text": "be processed by a lambda function that you've written so imagine typing a slack command or having a github commit you",
    "start": "3287310",
    "end": "3294390"
  },
  {
    "text": "know through a web hook trigger an API call to code that you've written that's going to evaluate you know whatever that",
    "start": "3294390",
    "end": "3300210"
  },
  {
    "text": "chat command is that you've run in slack or you know evaluate the the commit that's just occurred in github or",
    "start": "3300210",
    "end": "3305940"
  },
  {
    "text": "something like that and the third thing is just general integration there's a lot of third-party tools you may be already using and maybe they even",
    "start": "3305940",
    "end": "3311670"
  },
  {
    "text": "predate lambda as a service but they have the notion of api's and they can integrate with things through HTTP and",
    "start": "3311670",
    "end": "3317340"
  },
  {
    "text": "using api gateway as a front door for lambda functions gives you the ability to build any amounts of software that",
    "start": "3317340",
    "end": "3324660"
  },
  {
    "text": "you'd like and to do the things you like and have your existing tools through their API capabilities integrate with",
    "start": "3324660",
    "end": "3330900"
  },
  {
    "text": "with logic that you've written as part of your lambda functions so this is pattern zero if there's going to be a",
    "start": "3330900",
    "end": "3336810"
  },
  {
    "text": "lot of ways where you can think service-oriented and lambda is a great fit to run you know lean code minimal",
    "start": "3336810",
    "end": "3343140"
  },
  {
    "text": "operations as a security team and have those service-oriented integrations the last thing I'm going to conclude with is",
    "start": "3343140",
    "end": "3349470"
  },
  {
    "text": "just some things and thoughts to caution you about if you're a team that's thinking about adopting lambda as a",
    "start": "3349470",
    "end": "3355170"
  },
  {
    "text": "security team for the first time these are some cautionary examples on",
    "start": "3355170",
    "end": "3360480"
  },
  {
    "start": "3359000",
    "end": "3359000"
  },
  {
    "text": "semantics things for you to be aware of so the first one is be aware of alarm fatigue there's a lot of events that can be",
    "start": "3360480",
    "end": "3367320"
  },
  {
    "text": "triggering at in an AWS account be very specific about which events you care about and what's gonna happen when those",
    "start": "3367320",
    "end": "3373140"
  },
  {
    "text": "events occur you don't want to write a lambda function that's gonna be you know triggered every time a sync every time a",
    "start": "3373140",
    "end": "3378660"
  },
  {
    "text": "security group changes and have that action be like to deliver an email into an inbox somewhere that you've got an",
    "start": "3378660",
    "end": "3384360"
  },
  {
    "text": "email about a security group changing there's just gonna be a boy who cried wolf situation no one's gonna look at",
    "start": "3384360",
    "end": "3389670"
  },
  {
    "text": "those things so be very intentional about what rules you care about second is as similar be aware that as you write",
    "start": "3389670",
    "end": "3397050"
  },
  {
    "text": "the code that's gonna you know deliver alarm alerts or take remediating action notify things that there's a next step",
    "start": "3397050",
    "end": "3404760"
  },
  {
    "text": "if one's required that there's gonna be accountability or action that needs to be taken either by your team or by",
    "start": "3404760",
    "end": "3410910"
  },
  {
    "text": "application teams don't don't just write you know security code within lambda functions that you know spends time",
    "start": "3410910",
    "end": "3416940"
  },
  {
    "text": "evaluating the lack of security within your environment so that you guys are you know covered from a standpoint if",
    "start": "3416940",
    "end": "3423270"
  },
  {
    "text": "something occurs there's got to be action actionable you know steps that you've defined if you have any findings",
    "start": "3423270",
    "end": "3429090"
  },
  {
    "text": "that your lambda functions detect don't think too exhaustive about the way you're going to build out your platform",
    "start": "3429090",
    "end": "3435480"
  },
  {
    "text": "redwood is a very impressive piece of architecture that Dow Jones is built but",
    "start": "3435480",
    "end": "3440940"
  },
  {
    "text": "lambdas a very it enables a lot of iterative thinking you can start really really small don't try and build",
    "start": "3440940",
    "end": "3446640"
  },
  {
    "text": "something like redwood as your first foray into server lists think about a lambda function that's small and useful",
    "start": "3446640",
    "end": "3451950"
  },
  {
    "text": "and learn about you know your your capabilities for you know running the service and get familiar with it and",
    "start": "3451950",
    "end": "3457170"
  },
  {
    "text": "think small and start iterative the next I will highlight is the idea of",
    "start": "3457170",
    "end": "3462600"
  },
  {
    "text": "preferring tools over purpose so you as a security org have the purpose of keeping your organization safe keeping",
    "start": "3462600",
    "end": "3468450"
  },
  {
    "text": "your data and your customers data I'm secure and safe and oftentimes the security apparatus that you're working",
    "start": "3468450",
    "end": "3474720"
  },
  {
    "text": "with today may not be an exact fit for the things you'd like to do with lambda and we want to caution you about having",
    "start": "3474720",
    "end": "3481620"
  },
  {
    "text": "a preference to make sure all the the actions you want to take and the security that you'd like to provide",
    "start": "3481620",
    "end": "3486750"
  },
  {
    "text": "within the account has to play with the tools you're already using um if if the real purpose for your team is to raise",
    "start": "3486750",
    "end": "3493110"
  },
  {
    "text": "the bar for security and make sure the account infrastructure safe and there's something about your existing toolset that's preventing you",
    "start": "3493110",
    "end": "3498480"
  },
  {
    "text": "from being flexible and agile and using things like programmatic approaches in lambda think about ways you can you can",
    "start": "3498480",
    "end": "3505260"
  },
  {
    "text": "you know have both at once that you can still enable use of serverless and lambda even though you know your",
    "start": "3505260",
    "end": "3512370"
  },
  {
    "text": "existing tools might not play well with events that may be occurring you know by the hundreds every minute or you know",
    "start": "3512370",
    "end": "3518580"
  },
  {
    "text": "the scale with which data is created may exceed the data you're able to ingest in and another tool think creatively about",
    "start": "3518580",
    "end": "3524730"
  },
  {
    "text": "other architectures and how to how to work around those things and the final one and probably the most important for secure organizations if you don't have",
    "start": "3524730",
    "end": "3531360"
  },
  {
    "text": "development resources within the security organization already that is",
    "start": "3531360",
    "end": "3536490"
  },
  {
    "text": "the number one thing I'm going to recommend you start looking into it is it is a total anti-pattern in my view to",
    "start": "3536490",
    "end": "3542880"
  },
  {
    "text": "have code that exists within an account that you're responsible for as a security team that your team isn't",
    "start": "3542880",
    "end": "3548790"
  },
  {
    "text": "responsible for that the code wasn't written by somebody on your team if there's a need to maintain it that you depend on somebody else's priorities and",
    "start": "3548790",
    "end": "3555360"
  },
  {
    "text": "and you know resources for so it's absolutely critical if you want to you know start a foray into automated",
    "start": "3555360",
    "end": "3562380"
  },
  {
    "text": "security and building out your own programmatic actions to have the responsibility for creating that code and maintaining that code live within",
    "start": "3562380",
    "end": "3569130"
  },
  {
    "text": "the security org so that you know your priorities are your own and when there's a need to take action or write new code",
    "start": "3569130",
    "end": "3574530"
  },
  {
    "text": "or maintain it that you don't have a dependency on anybody else all right and with that I'm gonna conclude just just a",
    "start": "3574530",
    "end": "3582120"
  },
  {
    "text": "reminder of all the benefits that you know embracing lambda is gonna bring to your security team so you're gonna be",
    "start": "3582120",
    "end": "3587340"
  },
  {
    "text": "able to embrace automation you're gonna be event-driven rather than policy a manual process driven it's gonna let you",
    "start": "3587340",
    "end": "3593400"
  },
  {
    "text": "scale with without introducing immense complexity across potentially hundreds or thousands of AWS accounts when you",
    "start": "3593400",
    "end": "3599100"
  },
  {
    "text": "start thinking about infrastructures code and being programmatic with lambda we know that security teams often run",
    "start": "3599100",
    "end": "3604320"
  },
  {
    "text": "very very lean resourcing is tight and lambda is the best model we think to minimize operations while introducing",
    "start": "3604320",
    "end": "3611130"
  },
  {
    "text": "you know the custom application code that you like to in the environment you're not going to take on a big burden of patching and operational maintenance",
    "start": "3611130",
    "end": "3617310"
  },
  {
    "text": "and things like that when you embrace lambda it's gonna reduce cost let your remain flexible and finally once you",
    "start": "3617310",
    "end": "3623730"
  },
  {
    "text": "have lambda functions that act as a security extension of your team hopefully secure",
    "start": "3623730",
    "end": "3629190"
  },
  {
    "text": "team members will be able to not just get some good sleep at night but you can take some vacations too and we've got our security team riding the SS threat",
    "start": "3629190",
    "end": "3636089"
  },
  {
    "text": "vector they're CISOs yacht on vacation because lambda is watching the environment while everybody is on",
    "start": "3636089",
    "end": "3641460"
  },
  {
    "text": "vacation now so thank you very much everybody please do remember to fill out",
    "start": "3641460",
    "end": "3647099"
  },
  {
    "text": "your surveys thank you for attending hope everybody's enjoying their week and enjoy the rest of your sessions today",
    "start": "3647099",
    "end": "3655369"
  }
]