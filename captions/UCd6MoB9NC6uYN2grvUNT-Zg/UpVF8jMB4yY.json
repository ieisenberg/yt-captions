[
  {
    "text": "- Hi, I'm Nicole from AWS.",
    "start": "180",
    "end": "2310"
  },
  {
    "text": "- Hi, I'm Brandon O'Daniel from Xylem,",
    "start": "2310",
    "end": "4290"
  },
  {
    "text": "and this is my architecture.",
    "start": "4290",
    "end": "5699"
  },
  {
    "text": "(upbeat music)",
    "start": "5699",
    "end": "8282"
  },
  {
    "text": "- Welcome Brandon, so I am a huge gardener",
    "start": "17850",
    "end": "20400"
  },
  {
    "text": "that enjoys using IOT devices",
    "start": "20400",
    "end": "22050"
  },
  {
    "text": "to collect metrics about my\nactual garden's performance.",
    "start": "22050",
    "end": "24570"
  },
  {
    "text": "I'm really curious about\nthis serverless event-driven",
    "start": "24570",
    "end": "27689"
  },
  {
    "text": "IOT collection solution that you've built.",
    "start": "27690",
    "end": "29970"
  },
  {
    "text": "So how did we get here?",
    "start": "29970",
    "end": "31710"
  },
  {
    "text": "- Yes. This solution\nwas designed for Xylem,",
    "start": "31710",
    "end": "33719"
  },
  {
    "text": "which is a worldwide water\ncompany, specifically",
    "start": "33720",
    "end": "36420"
  },
  {
    "text": "for the census brand of\nXylem, which does a lot",
    "start": "36420",
    "end": "39370"
  },
  {
    "text": "of smart metering and\nelectric water and gas",
    "start": "40218",
    "end": "41910"
  },
  {
    "text": "distribution networks.",
    "start": "41910",
    "end": "43350"
  },
  {
    "text": "So the solution we designed\nis called the Xylem",
    "start": "43350",
    "end": "46719"
  },
  {
    "text": "Data Lake, formerly known as\nthe Census Utility Data Lake.",
    "start": "47880",
    "end": "52880"
  },
  {
    "text": "And specifically in this\nsolution we have data stores",
    "start": "53220",
    "end": "56820"
  },
  {
    "text": "that send files from various IT systems",
    "start": "56820",
    "end": "61820"
  },
  {
    "text": "up into our Amazon S3 data storage,",
    "start": "62430",
    "end": "65250"
  },
  {
    "text": "where there are S3 events\nthat trigger Lambdas,",
    "start": "65250",
    "end": "69690"
  },
  {
    "text": "which loads data into Amazon\nRedshift clusters for us.",
    "start": "69690",
    "end": "74550"
  },
  {
    "text": "Additionally, we have\nsituations where some of our",
    "start": "74550",
    "end": "78177"
  },
  {
    "text": "data producing applications goes through",
    "start": "78177",
    "end": "81450"
  },
  {
    "text": "and publishes REST APIs, which\nare called via AWS Lambdas",
    "start": "81450",
    "end": "85530"
  },
  {
    "text": "to pull data and then\ninsert into Amazon Redshift.",
    "start": "85530",
    "end": "90030"
  },
  {
    "text": "And when I say Amazon Redshift here,",
    "start": "90030",
    "end": "91680"
  },
  {
    "text": "is actually about 11 different\nAmazon Redshift clusters",
    "start": "91680",
    "end": "94620"
  },
  {
    "text": "spread off across three\ndifferent geographies worldwide.",
    "start": "94620",
    "end": "97890"
  },
  {
    "text": "- Okay. So you're using\na combination of push",
    "start": "97890",
    "end": "100200"
  },
  {
    "text": "and pull to collect\nthat data into Redshift.",
    "start": "100200",
    "end": "102840"
  },
  {
    "text": "Well, could you tell us\nabout your considerations,",
    "start": "102840",
    "end": "105600"
  },
  {
    "text": "why Redshift in the solution?",
    "start": "105600",
    "end": "107670"
  },
  {
    "text": "- The reason why we picked Redshift was",
    "start": "107670",
    "end": "109320"
  },
  {
    "text": "because we needed a colorer data store",
    "start": "109320",
    "end": "111150"
  },
  {
    "text": "that was very performant.",
    "start": "111150",
    "end": "112920"
  },
  {
    "text": "And also, too, we needed\nthe ability through",
    "start": "112920",
    "end": "115619"
  },
  {
    "text": "to data governance\nrequirements from our customers",
    "start": "115620",
    "end": "119130"
  },
  {
    "text": "to physically separate our customer's data",
    "start": "119130",
    "end": "121799"
  },
  {
    "text": "from each other customer.",
    "start": "121800",
    "end": "123870"
  },
  {
    "text": "So that led us away from\nsolutions such as using Athena",
    "start": "123870",
    "end": "127680"
  },
  {
    "text": "with, you know, parquet storage on S3,",
    "start": "127680",
    "end": "131039"
  },
  {
    "text": "which we use in other places\nin our internal data lakes.",
    "start": "131040",
    "end": "134879"
  },
  {
    "text": "But in terms of customer\nfacing, we needed Redshift.",
    "start": "134880",
    "end": "137940"
  },
  {
    "text": "Also too, we wanted to take advantage",
    "start": "137940",
    "end": "139470"
  },
  {
    "text": "of the reserved instance\npricing of Redshift,",
    "start": "139470",
    "end": "141900"
  },
  {
    "text": "which saved us a significant amount",
    "start": "141900",
    "end": "143340"
  },
  {
    "text": "of money which we could\npass along to our customers.",
    "start": "143340",
    "end": "145319"
  },
  {
    "text": "- Now I'm curious then,",
    "start": "145320",
    "end": "146940"
  },
  {
    "text": "I do see that we're using our\nEvent Bridge service here.",
    "start": "146940",
    "end": "149940"
  },
  {
    "text": "So how are you actually\njust leveraging this",
    "start": "149940",
    "end": "152910"
  },
  {
    "text": "and your solution for moving data around?",
    "start": "152910",
    "end": "155340"
  },
  {
    "text": "- Yeah, it was wonderful.\nSo about the time we were",
    "start": "155340",
    "end": "157560"
  },
  {
    "text": "designing a batch process",
    "start": "157560",
    "end": "159101"
  },
  {
    "text": "or a batch scheduler,",
    "start": "159101",
    "end": "160760"
  },
  {
    "text": "Amazon event Bridge Scheduler was released",
    "start": "160760",
    "end": "163319"
  },
  {
    "text": "and we said, this is great,\nwhy don't we go through",
    "start": "163320",
    "end": "165270"
  },
  {
    "text": "and try to use this because\nwe love serverless on our team",
    "start": "165270",
    "end": "168210"
  },
  {
    "text": "because serverless decreases\nthe total cost of labor",
    "start": "168210",
    "end": "171750"
  },
  {
    "text": "and amount of maintenance\nthat we need to do",
    "start": "171750",
    "end": "173880"
  },
  {
    "text": "as a development team.",
    "start": "173880",
    "end": "175230"
  },
  {
    "text": "We use Amazon Event Bridge\nscheduler to write batch jobs",
    "start": "175230",
    "end": "178170"
  },
  {
    "text": "to pull data from Amazon\nRedshift instances.",
    "start": "178170",
    "end": "181680"
  },
  {
    "text": "And then those batch jobs\ncan either send reports,",
    "start": "181680",
    "end": "185400"
  },
  {
    "text": "they can send data files\nout through Amazon,",
    "start": "185400",
    "end": "188099"
  },
  {
    "text": "simple email service or SES.",
    "start": "188100",
    "end": "190440"
  },
  {
    "text": "We can go through and\npublish data stores over",
    "start": "190440",
    "end": "193500"
  },
  {
    "text": "to our AWS transfer SFTP\ninstance within our company.",
    "start": "193500",
    "end": "197430"
  },
  {
    "text": "And there's also places where\ncustomers can pull data.",
    "start": "197430",
    "end": "200760"
  },
  {
    "text": "So for instance, we have a Angular,",
    "start": "200760",
    "end": "203493"
  },
  {
    "text": "Angular Web Application,",
    "start": "205641",
    "end": "207873"
  },
  {
    "text": "that's hosted on CloudFront\nwhere it makes calls",
    "start": "209880",
    "end": "213720"
  },
  {
    "text": "over to Lambda in order to\npull data up into Redshift",
    "start": "213720",
    "end": "216900"
  },
  {
    "text": "so customers can go through\nand generate their own reports.",
    "start": "216900",
    "end": "219599"
  },
  {
    "text": "- Okay, so I'm hearing a\nshift towards making sure",
    "start": "219600",
    "end": "221490"
  },
  {
    "text": "that you have managed\nor serverless services",
    "start": "221490",
    "end": "223530"
  },
  {
    "text": "so you don't have to do the\nundifferentiated lifting",
    "start": "223530",
    "end": "225569"
  },
  {
    "text": "of managing that piece.",
    "start": "225570",
    "end": "227910"
  },
  {
    "text": "And I'm also hearing\nthat you have another way",
    "start": "227910",
    "end": "230280"
  },
  {
    "text": "to actually allow your\nconsumers to consume this data.",
    "start": "230280",
    "end": "233280"
  },
  {
    "text": "How do you apply security\nto this solution?",
    "start": "233280",
    "end": "235920"
  },
  {
    "text": "- So our customers, what\nthey do is they come in",
    "start": "235920",
    "end": "238500"
  },
  {
    "text": "through Amazon CloudFront,",
    "start": "238500",
    "end": "240419"
  },
  {
    "text": "through our Angular web application,",
    "start": "240419",
    "end": "243540"
  },
  {
    "text": "and from there they're authenticated",
    "start": "243540",
    "end": "245400"
  },
  {
    "text": "via a key cloak instance.",
    "start": "245400",
    "end": "246900"
  },
  {
    "text": "All of our Angular web is put",
    "start": "246900",
    "end": "249659"
  },
  {
    "text": "through a web application firewall",
    "start": "249660",
    "end": "252210"
  },
  {
    "text": "and we use API gateway secured",
    "start": "252210",
    "end": "254400"
  },
  {
    "text": "through web application firewall in order",
    "start": "254400",
    "end": "256229"
  },
  {
    "text": "to be a wrapper around the Lambdas.",
    "start": "256230",
    "end": "258989"
  },
  {
    "text": "We also use such things\nas like SSH key sharing",
    "start": "258990",
    "end": "263459"
  },
  {
    "text": "and CyberArk and that sort of thing,",
    "start": "263459",
    "end": "266850"
  },
  {
    "text": "in order to provide customers",
    "start": "266850",
    "end": "268680"
  },
  {
    "text": "secure access over into like\nthe SFTP side of things.",
    "start": "268680",
    "end": "273449"
  },
  {
    "text": "- Okay, very good.",
    "start": "273450",
    "end": "274680"
  },
  {
    "text": "Well, thank you so much",
    "start": "274680",
    "end": "276000"
  },
  {
    "text": "for sharing your architecture with us.",
    "start": "276000",
    "end": "277837"
  },
  {
    "text": "(soft music)",
    "start": "277837",
    "end": "280254"
  }
]