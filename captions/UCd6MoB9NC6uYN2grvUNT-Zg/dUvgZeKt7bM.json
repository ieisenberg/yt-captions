[
  {
    "text": "hello and welcome to today's recording",
    "start": "5720",
    "end": "8000"
  },
  {
    "text": "in this recording I'm going to talk",
    "start": "8000",
    "end": "9480"
  },
  {
    "text": "about the new tool that you could use to",
    "start": "9480",
    "end": "11799"
  },
  {
    "text": "estimate the cost of elastic cach servus",
    "start": "11799",
    "end": "15240"
  },
  {
    "text": "based on a workload that is already",
    "start": "15240",
    "end": "16920"
  },
  {
    "text": "running on elastic cache provision",
    "start": "16920",
    "end": "19560"
  },
  {
    "text": "service my name is Steven hunt and I'm a",
    "start": "19560",
    "end": "22359"
  },
  {
    "text": "Senior Solutions architect with",
    "start": "22359",
    "end": "25119"
  },
  {
    "text": "AWS first I'm going to review the",
    "start": "25119",
    "end": "27519"
  },
  {
    "text": "pricing model for the provision elastic",
    "start": "27519",
    "end": "29439"
  },
  {
    "text": "cache then I'm going to have a review of",
    "start": "29439",
    "end": "30800"
  },
  {
    "text": "elastic cach serverless pricing model",
    "start": "30800",
    "end": "33719"
  },
  {
    "text": "then I'm going to compare the serverless",
    "start": "33719",
    "end": "36040"
  },
  {
    "text": "versus provisioned pricing model from a",
    "start": "36040",
    "end": "38960"
  },
  {
    "text": "capacity perspective capacity planning",
    "start": "38960",
    "end": "41280"
  },
  {
    "text": "which capacity of course translates into",
    "start": "41280",
    "end": "43239"
  },
  {
    "text": "cost then I'm going to review the cost",
    "start": "43239",
    "end": "45520"
  },
  {
    "text": "estimator tool what it does how it works",
    "start": "45520",
    "end": "48199"
  },
  {
    "text": "and then a quick demo of",
    "start": "48199",
    "end": "50480"
  },
  {
    "text": "it so let's review the pricing model of",
    "start": "50480",
    "end": "53160"
  },
  {
    "text": "elastic cache instance based elastic Cas",
    "start": "53160",
    "end": "55760"
  },
  {
    "text": "instance based is what you call a payper",
    "start": "55760",
    "end": "57680"
  },
  {
    "text": "hour",
    "start": "57680",
    "end": "58719"
  },
  {
    "text": "pricing B basically you select an",
    "start": "58719",
    "end": "61079"
  },
  {
    "text": "instance type and you pay a flat fee per",
    "start": "61079",
    "end": "63640"
  },
  {
    "text": "hour usage of course this depends on how",
    "start": "63640",
    "end": "66360"
  },
  {
    "text": "many instances you select and the size",
    "start": "66360",
    "end": "68400"
  },
  {
    "text": "of the instance and the capacity of it",
    "start": "68400",
    "end": "70360"
  },
  {
    "text": "the bigger the instance the more",
    "start": "70360",
    "end": "71880"
  },
  {
    "text": "capacity it has the cost is going to go",
    "start": "71880",
    "end": "73960"
  },
  {
    "text": "up you do have an option to use a free",
    "start": "73960",
    "end": "77040"
  },
  {
    "text": "tier a T2",
    "start": "77040",
    "end": "78759"
  },
  {
    "text": "micro but regardless of the instance",
    "start": "78759",
    "end": "81119"
  },
  {
    "text": "type and regardless of the usage the",
    "start": "81119",
    "end": "82520"
  },
  {
    "text": "price is a flat fee once you selected",
    "start": "82520",
    "end": "84759"
  },
  {
    "text": "instance that's your fee you could",
    "start": "84759",
    "end": "87280"
  },
  {
    "text": "reduce this cost if you select the",
    "start": "87280",
    "end": "89159"
  },
  {
    "text": "reserved instance",
    "start": "89159",
    "end": "91280"
  },
  {
    "text": "which is basically a long-term",
    "start": "91280",
    "end": "92880"
  },
  {
    "text": "commitment when you commit a one or",
    "start": "92880",
    "end": "94320"
  },
  {
    "text": "threeyear commitment to use the service",
    "start": "94320",
    "end": "96720"
  },
  {
    "text": "and then we're going to pass down some",
    "start": "96720",
    "end": "98040"
  },
  {
    "text": "of the savings to you there's no",
    "start": "98040",
    "end": "100680"
  },
  {
    "text": "additional fee just the hourly fee you",
    "start": "100680",
    "end": "103159"
  },
  {
    "text": "might incur additional networking fee",
    "start": "103159",
    "end": "105960"
  },
  {
    "text": "from your application side that depends",
    "start": "105960",
    "end": "108920"
  },
  {
    "text": "on which availability Zone your",
    "start": "108920",
    "end": "110479"
  },
  {
    "text": "application is located in relation to",
    "start": "110479",
    "end": "112479"
  },
  {
    "text": "where elastic cach is running so this is",
    "start": "112479",
    "end": "114560"
  },
  {
    "text": "called cross a",
    "start": "114560",
    "end": "117200"
  },
  {
    "text": "charge let's see the pricing of elastic",
    "start": "117200",
    "end": "119600"
  },
  {
    "text": "cas servoless elastic cash servoless on",
    "start": "119600",
    "end": "121759"
  },
  {
    "text": "the other hand is something called a",
    "start": "121759",
    "end": "123039"
  },
  {
    "text": "paper use pricing what this means that",
    "start": "123039",
    "end": "126799"
  },
  {
    "text": "depending on how much of the service you",
    "start": "126799",
    "end": "128599"
  },
  {
    "text": "use that is you're going to pay for it",
    "start": "128599",
    "end": "131200"
  },
  {
    "text": "so it does not have a flat fee and it's",
    "start": "131200",
    "end": "133800"
  },
  {
    "text": "broken into two Dimensions if you pay if",
    "start": "133800",
    "end": "136400"
  },
  {
    "text": "you will first you pay for the storage I",
    "start": "136400",
    "end": "139720"
  },
  {
    "text": "the amount of data that you store in",
    "start": "139720",
    "end": "141680"
  },
  {
    "text": "elastic cach by the way this data is in",
    "start": "141680",
    "end": "144040"
  },
  {
    "text": "memory in elastic cash at all times and",
    "start": "144040",
    "end": "148040"
  },
  {
    "text": "the price is 0.120 $5 per gigabyte hours",
    "start": "148040",
    "end": "151760"
  },
  {
    "text": "for the first gigabyte it's prorated",
    "start": "151760",
    "end": "153959"
  },
  {
    "text": "after that the second dimension is how",
    "start": "153959",
    "end": "156680"
  },
  {
    "text": "much work you do we call this elastic",
    "start": "156680",
    "end": "158720"
  },
  {
    "text": "cache processing units or ecpu units and",
    "start": "158720",
    "end": "163319"
  },
  {
    "text": "the way it works it's every 1 kilobyte",
    "start": "163319",
    "end": "166040"
  },
  {
    "text": "of data rounded up to the first",
    "start": "166040",
    "end": "168720"
  },
  {
    "text": "kilobyte is considered an",
    "start": "168720",
    "end": "171319"
  },
  {
    "text": "acpu so if you send one kilobyte receive",
    "start": "171319",
    "end": "174000"
  },
  {
    "text": "1 kilobyte or you execute the luos",
    "start": "174000",
    "end": "175800"
  },
  {
    "text": "script on the server where you interact",
    "start": "175800",
    "end": "178400"
  },
  {
    "text": "1 kilobyte of data that that is one",
    "start": "178400",
    "end": "180440"
  },
  {
    "text": "processing unit and the pricing is",
    "start": "180440",
    "end": "184360"
  },
  {
    "text": "0.034 per 1 million",
    "start": "184360",
    "end": "186920"
  },
  {
    "text": "acpu so if you put this in a different",
    "start": "186920",
    "end": "189480"
  },
  {
    "text": "perspective one gigabyte of storage",
    "start": "189480",
    "end": "192000"
  },
  {
    "text": "would cost you about $90 a month and",
    "start": "192000",
    "end": "195000"
  },
  {
    "text": "10,000 ecus of 1 kilobyte each 10,000",
    "start": "195000",
    "end": "199239"
  },
  {
    "text": "ecus a second per every minute of every",
    "start": "199239",
    "end": "201560"
  },
  {
    "text": "hour that will add up to another $90 a",
    "start": "201560",
    "end": "204440"
  },
  {
    "text": "month so that's would be your total cost",
    "start": "204440",
    "end": "207239"
  },
  {
    "text": "and of course if you do less work it's",
    "start": "207239",
    "end": "208920"
  },
  {
    "text": "going to cost you less and if you do",
    "start": "208920",
    "end": "210519"
  },
  {
    "text": "more work it's going to cost you more",
    "start": "210519",
    "end": "212000"
  },
  {
    "text": "the storage price is calculated as a",
    "start": "212000",
    "end": "213920"
  },
  {
    "text": "total storage regardless of how many",
    "start": "213920",
    "end": "216040"
  },
  {
    "text": "shorts or how many hosts are being used",
    "start": "216040",
    "end": "219040"
  },
  {
    "text": "in fact it's completely transparent to",
    "start": "219040",
    "end": "220720"
  },
  {
    "text": "the",
    "start": "220720",
    "end": "221439"
  },
  {
    "text": "user so let's compare the two Services",
    "start": "221439",
    "end": "224280"
  },
  {
    "text": "provision versus serus from a capacity",
    "start": "224280",
    "end": "227200"
  },
  {
    "text": "perspective and capacity always",
    "start": "227200",
    "end": "228840"
  },
  {
    "text": "translates into",
    "start": "228840",
    "end": "230680"
  },
  {
    "text": "cost now what you see here is the impact",
    "start": "230680",
    "end": "233959"
  },
  {
    "text": "of provisioning um if your workload is a",
    "start": "233959",
    "end": "237159"
  },
  {
    "text": "steady workload that it always works",
    "start": "237159",
    "end": "239400"
  },
  {
    "text": "around the same parameters there are no",
    "start": "239400",
    "end": "241319"
  },
  {
    "text": "spikes in the workload then you could",
    "start": "241319",
    "end": "243599"
  },
  {
    "text": "pick the very appropriate instance type",
    "start": "243599",
    "end": "246159"
  },
  {
    "text": "and be always fully set to the right",
    "start": "246159",
    "end": "249879"
  },
  {
    "text": "pricing model to the right capacity",
    "start": "249879",
    "end": "252720"
  },
  {
    "text": "however if your workload is not 100%",
    "start": "252720",
    "end": "254920"
  },
  {
    "text": "predictable and it's not a steady",
    "start": "254920",
    "end": "256479"
  },
  {
    "text": "workload it has something called spikes",
    "start": "256479",
    "end": "258479"
  },
  {
    "text": "in it a spiky workload like the example",
    "start": "258479",
    "end": "261040"
  },
  {
    "text": "here it is quite possible that the",
    "start": "261040",
    "end": "264160"
  },
  {
    "text": "allocated capacity I'm talking about",
    "start": "264160",
    "end": "266080"
  },
  {
    "text": "instance based that the allocated",
    "start": "266080",
    "end": "267479"
  },
  {
    "text": "capacity is over provisioned so in this",
    "start": "267479",
    "end": "270320"
  },
  {
    "text": "case as you can see the blue line is the",
    "start": "270320",
    "end": "272039"
  },
  {
    "text": "provision capacity for most of the time",
    "start": "272039",
    "end": "274080"
  },
  {
    "text": "it's",
    "start": "274080",
    "end": "275039"
  },
  {
    "text": "over-provisioned that means it's",
    "start": "275039",
    "end": "277039"
  },
  {
    "text": "basically you paying for capacity that",
    "start": "277039",
    "end": "279080"
  },
  {
    "text": "you're not really using on the other",
    "start": "279080",
    "end": "281479"
  },
  {
    "text": "hand there are occasions when there are",
    "start": "281479",
    "end": "283680"
  },
  {
    "text": "spikes in the workload and there is not",
    "start": "283680",
    "end": "286080"
  },
  {
    "text": "enough capacity in that case the",
    "start": "286080",
    "end": "287759"
  },
  {
    "text": "workload is going to suffer because",
    "start": "287759",
    "end": "289520"
  },
  {
    "text": "there's not enough capacity to meet the",
    "start": "289520",
    "end": "293160"
  },
  {
    "text": "demand that's why capacity planning is",
    "start": "293160",
    "end": "296199"
  },
  {
    "text": "not necessarily easy you must have",
    "start": "296199",
    "end": "298639"
  },
  {
    "text": "elaborate monitoring in place you have",
    "start": "298639",
    "end": "301039"
  },
  {
    "text": "to adjust the thresholds not just to",
    "start": "301039",
    "end": "302840"
  },
  {
    "text": "have the capacity planning in place and",
    "start": "302840",
    "end": "304800"
  },
  {
    "text": "monitor it but you have to have the",
    "start": "304800",
    "end": "306919"
  },
  {
    "text": "right thresholds for your workload as it",
    "start": "306919",
    "end": "308919"
  },
  {
    "text": "changes of course all this depends that",
    "start": "308919",
    "end": "311320"
  },
  {
    "text": "you've selected the correct instance",
    "start": "311320",
    "end": "313520"
  },
  {
    "text": "instance type now elastic cach provision",
    "start": "313520",
    "end": "316199"
  },
  {
    "text": "does support Autos scaling for a couple",
    "start": "316199",
    "end": "318199"
  },
  {
    "text": "of instance types but you have to set up",
    "start": "318199",
    "end": "320680"
  },
  {
    "text": "the monitoring and you have to set up",
    "start": "320680",
    "end": "322120"
  },
  {
    "text": "the thresholds for them especially",
    "start": "322120",
    "end": "324600"
  },
  {
    "text": "beyond the basic CPU and the memory",
    "start": "324600",
    "end": "327120"
  },
  {
    "text": "utilizations you have to set it up and",
    "start": "327120",
    "end": "329319"
  },
  {
    "text": "the scaling may not be as fast as you",
    "start": "329319",
    "end": "331720"
  },
  {
    "text": "might think Hardware has to be acquired",
    "start": "331720",
    "end": "334479"
  },
  {
    "text": "configured and added to the",
    "start": "334479",
    "end": "337240"
  },
  {
    "text": "cluster on the other hand elastic cash",
    "start": "337240",
    "end": "339759"
  },
  {
    "text": "serverless you basically have no",
    "start": "339759",
    "end": "341800"
  },
  {
    "text": "capacity you're not committing to any",
    "start": "341800",
    "end": "343280"
  },
  {
    "text": "capacity you just paper usage so of",
    "start": "343280",
    "end": "347240"
  },
  {
    "text": "course you have nothing to monitor",
    "start": "347240",
    "end": "348639"
  },
  {
    "text": "because we monitor the workload for you",
    "start": "348639",
    "end": "351360"
  },
  {
    "text": "and uh as you need more capacity we're",
    "start": "351360",
    "end": "353520"
  },
  {
    "text": "going to add",
    "start": "353520",
    "end": "355160"
  },
  {
    "text": "that as as far as far as uh uh",
    "start": "355160",
    "end": "358759"
  },
  {
    "text": "monitoring we Au monitor the networking",
    "start": "358759",
    "end": "361240"
  },
  {
    "text": "as well so not just CPU and memory",
    "start": "361240",
    "end": "364000"
  },
  {
    "text": "consumption but networking as well it's",
    "start": "364000",
    "end": "366520"
  },
  {
    "text": "often possible that your workload just",
    "start": "366520",
    "end": "368520"
  },
  {
    "text": "requires more Network bandwidth not",
    "start": "368520",
    "end": "371240"
  },
  {
    "text": "necessarily that it requires more",
    "start": "371240",
    "end": "372680"
  },
  {
    "text": "storage or CPU also the scaling is much",
    "start": "372680",
    "end": "375960"
  },
  {
    "text": "faster in elastic a culus because it",
    "start": "375960",
    "end": "378720"
  },
  {
    "text": "uses a different architecture different",
    "start": "378720",
    "end": "381400"
  },
  {
    "text": "environment that is implemented to to",
    "start": "381400",
    "end": "383800"
  },
  {
    "text": "run it for you that can scale much",
    "start": "383800",
    "end": "387639"
  },
  {
    "text": "faster so let's just look at the cost",
    "start": "387639",
    "end": "391759"
  },
  {
    "text": "estimator the cost estimator is nothing",
    "start": "391759",
    "end": "394120"
  },
  {
    "text": "else but the script that you run against",
    "start": "394120",
    "end": "396039"
  },
  {
    "text": "your existing workload you download a",
    "start": "396039",
    "end": "398400"
  },
  {
    "text": "python script from GitHub and you run it",
    "start": "398400",
    "end": "400479"
  },
  {
    "text": "on an ec2 the ec2 obviously needs",
    "start": "400479",
    "end": "403840"
  },
  {
    "text": "connectivity but not necessarily to your",
    "start": "403840",
    "end": "406000"
  },
  {
    "text": "cluster it all just going to",
    "start": "406000",
    "end": "407840"
  },
  {
    "text": "retrieve metadata description of your",
    "start": "407840",
    "end": "410280"
  },
  {
    "text": "cluster and cloudwatch metrics so that's",
    "start": "410280",
    "end": "412160"
  },
  {
    "text": "all what it needs access to it's not",
    "start": "412160",
    "end": "413680"
  },
  {
    "text": "accessing your database or the data in",
    "start": "413680",
    "end": "416280"
  },
  {
    "text": "it whatsoever and once it's executed it",
    "start": "416280",
    "end": "419599"
  },
  {
    "text": "it conveniently displays the information",
    "start": "419599",
    "end": "421560"
  },
  {
    "text": "for you on the screen and it stores it",
    "start": "421560",
    "end": "423560"
  },
  {
    "text": "in a file in a CSV format so that you",
    "start": "423560",
    "end": "426520"
  },
  {
    "text": "could use that for later analysis if you",
    "start": "426520",
    "end": "429000"
  },
  {
    "text": "wish here's a screen capture of a",
    "start": "429000",
    "end": "431280"
  },
  {
    "text": "typical output well maybe not typical",
    "start": "431280",
    "end": "433280"
  },
  {
    "text": "because this cluster hasn't done",
    "start": "433280",
    "end": "434680"
  },
  {
    "text": "anything but this is for a purpose I",
    "start": "434680",
    "end": "436599"
  },
  {
    "text": "just want to go over what it does so at",
    "start": "436599",
    "end": "439479"
  },
  {
    "text": "the top in the in the yellow rectangle",
    "start": "439479",
    "end": "442199"
  },
  {
    "text": "There's a summary where it's going to",
    "start": "442199",
    "end": "444000"
  },
  {
    "text": "tell you what in which region the",
    "start": "444000",
    "end": "445560"
  },
  {
    "text": "cluster was located that it ran on what",
    "start": "445560",
    "end": "448520"
  },
  {
    "text": "was the name of the cluster the start",
    "start": "448520",
    "end": "450120"
  },
  {
    "text": "and end",
    "start": "450120",
    "end": "451360"
  },
  {
    "text": "times the primary node and the read",
    "start": "451360",
    "end": "453840"
  },
  {
    "text": "replica that it used to extract data",
    "start": "453840",
    "end": "455879"
  },
  {
    "text": "from and the general topology of the",
    "start": "455879",
    "end": "458240"
  },
  {
    "text": "cluster as in how many nodes are in it",
    "start": "458240",
    "end": "459960"
  },
  {
    "text": "how many primary nodes and how many read",
    "start": "459960",
    "end": "462080"
  },
  {
    "text": "replicas now you have to keep in mind",
    "start": "462080",
    "end": "464879"
  },
  {
    "text": "that this tool is going to examine one",
    "start": "464879",
    "end": "467080"
  },
  {
    "text": "primary node and one read replica so",
    "start": "467080",
    "end": "469840"
  },
  {
    "text": "there's an assumption made here that",
    "start": "469840",
    "end": "471360"
  },
  {
    "text": "your data is distributed evenly and the",
    "start": "471360",
    "end": "474159"
  },
  {
    "text": "workload is also distributed evenly now",
    "start": "474159",
    "end": "477039"
  },
  {
    "text": "if your workload is not distributed",
    "start": "477039",
    "end": "478639"
  },
  {
    "text": "evenly",
    "start": "478639",
    "end": "480039"
  },
  {
    "text": "or the data is not distributed evenly",
    "start": "480039",
    "end": "482440"
  },
  {
    "text": "this assumption is not going to be",
    "start": "482440",
    "end": "484039"
  },
  {
    "text": "accurate and the reason for that is that",
    "start": "484039",
    "end": "486479"
  },
  {
    "text": "it's not feasible to examine each every",
    "start": "486479",
    "end": "488960"
  },
  {
    "text": "one of the nodes to calculate the",
    "start": "488960",
    "end": "490960"
  },
  {
    "text": "consumption storage consumption and ecpu",
    "start": "490960",
    "end": "493720"
  },
  {
    "text": "consumption on each one of them so it's",
    "start": "493720",
    "end": "495720"
  },
  {
    "text": "just one primary node and one read",
    "start": "495720",
    "end": "497280"
  },
  {
    "text": "replica to extrapolate the work the",
    "start": "497280",
    "end": "499720"
  },
  {
    "text": "First Column is going to be the total",
    "start": "499720",
    "end": "501319"
  },
  {
    "text": "size this is calculated based on how",
    "start": "501319",
    "end": "503560"
  },
  {
    "text": "many primary nodes are there and then uh",
    "start": "503560",
    "end": "506720"
  },
  {
    "text": "the eval evaluate ecpu this is how many",
    "start": "506720",
    "end": "510240"
  },
  {
    "text": "uh ecus were used to run Lua scripts on",
    "start": "510240",
    "end": "512680"
  },
  {
    "text": "the server the primary in ecpu is",
    "start": "512680",
    "end": "515760"
  },
  {
    "text": "calculated how much data is going into",
    "start": "515760",
    "end": "517640"
  },
  {
    "text": "the cluster because data can only go in",
    "start": "517640",
    "end": "519919"
  },
  {
    "text": "via the primary",
    "start": "519919",
    "end": "521479"
  },
  {
    "text": "nodes and the primary node out and the",
    "start": "521479",
    "end": "524560"
  },
  {
    "text": "read replica out is how much data is",
    "start": "524560",
    "end": "526360"
  },
  {
    "text": "coming out of the cluster and the last",
    "start": "526360",
    "end": "529000"
  },
  {
    "text": "three columns is just the summary",
    "start": "529000",
    "end": "530560"
  },
  {
    "text": "summary of the storage cost the summary",
    "start": "530560",
    "end": "533240"
  },
  {
    "text": "of the ecpu cost and the total cost per",
    "start": "533240",
    "end": "535720"
  },
  {
    "text": "hour the result is broken down hour per",
    "start": "535720",
    "end": "538519"
  },
  {
    "text": "hour for one",
    "start": "538519",
    "end": "541160"
  },
  {
    "text": "day now let me see if I could run the",
    "start": "541160",
    "end": "543480"
  },
  {
    "text": "demo for",
    "start": "543480",
    "end": "546000"
  },
  {
    "text": "you there's a help option if you execute",
    "start": "548279",
    "end": "551200"
  },
  {
    "text": "a",
    "start": "551200",
    "end": "552000"
  },
  {
    "text": "script the you will see that you have to",
    "start": "552000",
    "end": "554600"
  },
  {
    "text": "enter the region name the cluster name",
    "start": "554600",
    "end": "556720"
  },
  {
    "text": "and a day range by default is one day so",
    "start": "556720",
    "end": "559600"
  },
  {
    "text": "it's going to pick information from",
    "start": "559600",
    "end": "561320"
  },
  {
    "text": "cloudwatch metrix for the past 24 hours",
    "start": "561320",
    "end": "564160"
  },
  {
    "text": "and the last one is the output file name",
    "start": "564160",
    "end": "565839"
  },
  {
    "text": "it's optional if you don't provide one",
    "start": "565839",
    "end": "567800"
  },
  {
    "text": "one will be generated for you and it's",
    "start": "567800",
    "end": "569640"
  },
  {
    "text": "called cost estimate with the cluster",
    "start": "569640",
    "end": "572160"
  },
  {
    "text": "name in it and the date in it in a CSV",
    "start": "572160",
    "end": "575480"
  },
  {
    "text": "format let me clear the screen and run",
    "start": "575480",
    "end": "577880"
  },
  {
    "text": "it I have a test cluster here that I",
    "start": "577880",
    "end": "579720"
  },
  {
    "text": "created some workload on it so the",
    "start": "579720",
    "end": "582839"
  },
  {
    "text": "output the initial output is the",
    "start": "582839",
    "end": "584240"
  },
  {
    "text": "familiar familiar output with the",
    "start": "584240",
    "end": "586200"
  },
  {
    "text": "cluster name times and you can see that",
    "start": "586200",
    "end": "589000"
  },
  {
    "text": "I just generated some workload in the",
    "start": "589000",
    "end": "591320"
  },
  {
    "text": "last hour and you will see that there",
    "start": "591320",
    "end": "593959"
  },
  {
    "text": "was about 1.4 million reads from the",
    "start": "593959",
    "end": "597000"
  },
  {
    "text": "primary node and 1.4 million read",
    "start": "597000",
    "end": "600000"
  },
  {
    "text": "from the the read",
    "start": "600000",
    "end": "602640"
  },
  {
    "text": "replica and there were about close to",
    "start": "602640",
    "end": "605399"
  },
  {
    "text": "300,000",
    "start": "605399",
    "end": "607240"
  },
  {
    "text": "rights when you add this up this comes",
    "start": "607240",
    "end": "609680"
  },
  {
    "text": "out to about",
    "start": "609680",
    "end": "611920"
  },
  {
    "text": "0.106 and this is added up to the",
    "start": "611920",
    "end": "614240"
  },
  {
    "text": "storage cost actually I executed about 3",
    "start": "614240",
    "end": "617360"
  },
  {
    "text": "million requests on this cluster with",
    "start": "617360",
    "end": "620000"
  },
  {
    "text": "about 10% of that 300,000 V rights and",
    "start": "620000",
    "end": "623160"
  },
  {
    "text": "90% reads so this is a correct",
    "start": "623160",
    "end": "626120"
  },
  {
    "text": "estimation even though it was just",
    "start": "626120",
    "end": "627680"
  },
  {
    "text": "executed uh across across all the nodes",
    "start": "627680",
    "end": "630279"
  },
  {
    "text": "we just estimated calculation was",
    "start": "630279",
    "end": "632880"
  },
  {
    "text": "estimated based on one primary node and",
    "start": "632880",
    "end": "634800"
  },
  {
    "text": "one read",
    "start": "634800",
    "end": "637639"
  },
  {
    "text": "replica now with this uh that the demo",
    "start": "638680",
    "end": "641480"
  },
  {
    "text": "has completed I'm going to go back to my",
    "start": "641480",
    "end": "645240"
  },
  {
    "text": "presentation and uh here is the access",
    "start": "645240",
    "end": "647839"
  },
  {
    "text": "to the code if you like to download the",
    "start": "647839",
    "end": "650160"
  },
  {
    "text": "code from GitHub there's the QR code or",
    "start": "650160",
    "end": "653079"
  },
  {
    "text": "you can enter the location from the link",
    "start": "653079",
    "end": "656480"
  },
  {
    "text": "below if you'd like to learn more about",
    "start": "656480",
    "end": "659040"
  },
  {
    "text": "this tool or any other tools you're",
    "start": "659040",
    "end": "660680"
  },
  {
    "text": "welcome to contact me or contact my team",
    "start": "660680",
    "end": "663440"
  },
  {
    "text": "at the email provided here thank you",
    "start": "663440",
    "end": "668680"
  }
]