[
  {
    "text": "hello everyone my name is Arun and I'm a",
    "start": "320",
    "end": "2760"
  },
  {
    "text": "Big Data Solutions architect here at AWS",
    "start": "2760",
    "end": "5759"
  },
  {
    "text": "in this video I'm going to walk you",
    "start": "5759",
    "end": "7319"
  },
  {
    "text": "through some of the Advanced Techniques",
    "start": "7319",
    "end": "8920"
  },
  {
    "text": "for monitoring AWS glue jobs we will",
    "start": "8920",
    "end": "11960"
  },
  {
    "text": "cover monitoring glue jobs using spark",
    "start": "11960",
    "end": "13880"
  },
  {
    "text": "UI cloudwatch logs and metrics before we",
    "start": "13880",
    "end": "17800"
  },
  {
    "text": "dive into the demo let me start by",
    "start": "17800",
    "end": "19359"
  },
  {
    "text": "defining the spark UI spark UI is a web-",
    "start": "19359",
    "end": "22680"
  },
  {
    "text": "based interface for monitoring and",
    "start": "22680",
    "end": "24599"
  },
  {
    "text": "debugging spark applications it provides",
    "start": "24599",
    "end": "27519"
  },
  {
    "text": "insights into job run resource utiliz",
    "start": "27519",
    "end": "30119"
  },
  {
    "text": "ation and",
    "start": "30119",
    "end": "32160"
  },
  {
    "text": "performance for those of you not",
    "start": "32160",
    "end": "34040"
  },
  {
    "text": "familiar with the spark UI let us take a",
    "start": "34040",
    "end": "36000"
  },
  {
    "text": "quick",
    "start": "36000",
    "end": "36960"
  },
  {
    "text": "look the main page focus on",
    "start": "36960",
    "end": "40079"
  },
  {
    "text": "jobs your individual spark application",
    "start": "40079",
    "end": "43000"
  },
  {
    "text": "may be broken down into one or more",
    "start": "43000",
    "end": "45360"
  },
  {
    "text": "spark jobs and you can see a high level",
    "start": "45360",
    "end": "47680"
  },
  {
    "text": "view of all the running and finished",
    "start": "47680",
    "end": "49440"
  },
  {
    "text": "jobs here you'll see the ID the name",
    "start": "49440",
    "end": "53239"
  },
  {
    "text": "submit time duration",
    "start": "53239",
    "end": "55719"
  },
  {
    "text": "Etc the stage tab here visualizes the",
    "start": "55719",
    "end": "58719"
  },
  {
    "text": "job's execution plan",
    "start": "58719",
    "end": "60760"
  },
  {
    "text": "it provides more granular details on the",
    "start": "60760",
    "end": "62680"
  },
  {
    "text": "number of stages for your job for each",
    "start": "62680",
    "end": "65320"
  },
  {
    "text": "stage you can see the task the",
    "start": "65320",
    "end": "67280"
  },
  {
    "text": "parallelism the shuffle",
    "start": "67280",
    "end": "69400"
  },
  {
    "text": "Etc you can also explore the dag dag or",
    "start": "69400",
    "end": "73400"
  },
  {
    "text": "directed a cyclic graph help you",
    "start": "73400",
    "end": "75240"
  },
  {
    "text": "visualize the dependencies and flow of",
    "start": "75240",
    "end": "77640"
  },
  {
    "text": "task within each",
    "start": "77640",
    "end": "79920"
  },
  {
    "text": "stage let us transition to a practical",
    "start": "79920",
    "end": "82640"
  },
  {
    "text": "example that shows how debugging and",
    "start": "82640",
    "end": "85320"
  },
  {
    "text": "performance tuning work handin hand for",
    "start": "85320",
    "end": "87320"
  },
  {
    "text": "glue jobs for that I have two simulated",
    "start": "87320",
    "end": "90439"
  },
  {
    "text": "data set customers and sales both of",
    "start": "90439",
    "end": "93640"
  },
  {
    "text": "these data set are in par format the",
    "start": "93640",
    "end": "96159"
  },
  {
    "text": "customer data set contains about 2",
    "start": "96159",
    "end": "97799"
  },
  {
    "text": "million records and the sales data set",
    "start": "97799",
    "end": "99680"
  },
  {
    "text": "contains approximately 300 million",
    "start": "99680",
    "end": "101759"
  },
  {
    "text": "records we will join these data set and",
    "start": "101759",
    "end": "104360"
  },
  {
    "text": "write the results back to",
    "start": "104360",
    "end": "106320"
  },
  {
    "text": "S3 here is a sneak peek into the code it",
    "start": "106320",
    "end": "110000"
  },
  {
    "text": "is very straightforward we read the two",
    "start": "110000",
    "end": "112200"
  },
  {
    "text": "data sets join them based on a key and",
    "start": "112200",
    "end": "114920"
  },
  {
    "text": "write the results back to the Target",
    "start": "114920",
    "end": "116920"
  },
  {
    "text": "let's now execute the job it would take",
    "start": "116920",
    "end": "119119"
  },
  {
    "text": "about 4 minutes for it to run while it",
    "start": "119119",
    "end": "122320"
  },
  {
    "text": "runs let me quickly walk you through the",
    "start": "122320",
    "end": "124320"
  },
  {
    "text": "job",
    "start": "124320",
    "end": "125439"
  },
  {
    "text": "configurations you can see that this is",
    "start": "125439",
    "end": "127520"
  },
  {
    "text": "a p spark job with 10 workers on glue",
    "start": "127520",
    "end": "130280"
  },
  {
    "text": "4.0 glue version 3.0 and above supports",
    "start": "130280",
    "end": "133720"
  },
  {
    "text": "the built-in serverless spark UI you can",
    "start": "133720",
    "end": "136360"
  },
  {
    "text": "see that the spark UI logs are return to",
    "start": "136360",
    "end": "138519"
  },
  {
    "text": "an S3 location of your choice and here",
    "start": "138519",
    "end": "140599"
  },
  {
    "text": "is the configuration to enable the same",
    "start": "140599",
    "end": "143160"
  },
  {
    "text": "if you move on to the runs stab and then",
    "start": "143160",
    "end": "145120"
  },
  {
    "text": "to the spark UI tab you can access the",
    "start": "145120",
    "end": "147720"
  },
  {
    "text": "spark UI for a particular job run",
    "start": "147720",
    "end": "150360"
  },
  {
    "text": "since our job is still running I'll show",
    "start": "150360",
    "end": "152519"
  },
  {
    "text": "you an alternate route to get to the",
    "start": "152519",
    "end": "154440"
  },
  {
    "text": "same UI for that click on the job run",
    "start": "154440",
    "end": "157879"
  },
  {
    "text": "monitoring link here on the left side",
    "start": "157879",
    "end": "160680"
  },
  {
    "text": "menu navigate to your job and access the",
    "start": "160680",
    "end": "163680"
  },
  {
    "text": "Run details next scroll down to the",
    "start": "163680",
    "end": "166440"
  },
  {
    "text": "bottom of the page where you can find",
    "start": "166440",
    "end": "168000"
  },
  {
    "text": "the spark UI for that",
    "start": "168000",
    "end": "170360"
  },
  {
    "text": "run let's now head back to our",
    "start": "170360",
    "end": "173519"
  },
  {
    "text": "job we see that our job has completed in",
    "start": "173519",
    "end": "176400"
  },
  {
    "text": "slightly over 4 minutes which isn't bad",
    "start": "176400",
    "end": "178519"
  },
  {
    "text": "at all let's look at the rqi you can see",
    "start": "178519",
    "end": "181920"
  },
  {
    "text": "there are different tabs here",
    "start": "181920",
    "end": "183480"
  },
  {
    "text": "corresponding to jobs stages executor",
    "start": "183480",
    "end": "187519"
  },
  {
    "text": "Etc let's explore the",
    "start": "187519",
    "end": "190200"
  },
  {
    "text": "stages you can see that the application",
    "start": "190200",
    "end": "192440"
  },
  {
    "text": "consisted of five stages each one",
    "start": "192440",
    "end": "194599"
  },
  {
    "text": "corresponding to different phases of our",
    "start": "194599",
    "end": "196680"
  },
  {
    "text": "job you can also see that the internal",
    "start": "196680",
    "end": "199200"
  },
  {
    "text": "Optimizer has decided to skip two stages",
    "start": "199200",
    "end": "201840"
  },
  {
    "text": "which is also good coming back to the",
    "start": "201840",
    "end": "203640"
  },
  {
    "text": "completed stages we can see that these",
    "start": "203640",
    "end": "206120"
  },
  {
    "text": "two stages are possibly reading the park",
    "start": "206120",
    "end": "208319"
  },
  {
    "text": "metadata",
    "start": "208319",
    "end": "210159"
  },
  {
    "text": "there aren't any inputs or",
    "start": "210159",
    "end": "212319"
  },
  {
    "text": "Shuffle going to the next stage you can",
    "start": "212319",
    "end": "215040"
  },
  {
    "text": "see multiple tasks telling us that these",
    "start": "215040",
    "end": "217560"
  },
  {
    "text": "has been processed in a distributed",
    "start": "217560",
    "end": "219760"
  },
  {
    "text": "manner what is important here is to",
    "start": "219760",
    "end": "222120"
  },
  {
    "text": "notice that there's quite a lot of",
    "start": "222120",
    "end": "223760"
  },
  {
    "text": "shuffling that is involved you can see",
    "start": "223760",
    "end": "226120"
  },
  {
    "text": "close to 23 GB of data shuffled across",
    "start": "226120",
    "end": "228799"
  },
  {
    "text": "the network let's quickly look at the",
    "start": "228799",
    "end": "231840"
  },
  {
    "text": "tag the parking file is red to perform",
    "start": "231840",
    "end": "235239"
  },
  {
    "text": "the join the data is shuffled across the",
    "start": "235239",
    "end": "237680"
  },
  {
    "text": "network so that each executor can obtain",
    "start": "237680",
    "end": "240319"
  },
  {
    "text": "the data it",
    "start": "240319",
    "end": "241519"
  },
  {
    "text": "needs the exchange operator here in the",
    "start": "241519",
    "end": "244120"
  },
  {
    "text": "dag signifies the shuffling of data",
    "start": "244120",
    "end": "246680"
  },
  {
    "text": "between",
    "start": "246680",
    "end": "247760"
  },
  {
    "text": "executors the other stage is going to be",
    "start": "247760",
    "end": "251560"
  },
  {
    "text": "identical you can see the exchange here",
    "start": "251560",
    "end": "253799"
  },
  {
    "text": "in the",
    "start": "253799",
    "end": "255680"
  },
  {
    "text": "tag moving on to the last stage you can",
    "start": "255680",
    "end": "259280"
  },
  {
    "text": "see from the dag that the shuffle data",
    "start": "259280",
    "end": "261519"
  },
  {
    "text": "is read and the remainder of the job is",
    "start": "261519",
    "end": "263520"
  },
  {
    "text": "executed using the spark UI so far we",
    "start": "263520",
    "end": "266960"
  },
  {
    "text": "have been able to trace how the job",
    "start": "266960",
    "end": "268960"
  },
  {
    "text": "executed an improvement to this job",
    "start": "268960",
    "end": "271800"
  },
  {
    "text": "would be to minimize",
    "start": "271800",
    "end": "274120"
  },
  {
    "text": "Shuffle as you can see here in this",
    "start": "274120",
    "end": "277080"
  },
  {
    "text": "stage the input is 150 Meg which is",
    "start": "277080",
    "end": "279479"
  },
  {
    "text": "relatively small this should fit into",
    "start": "279479",
    "end": "281919"
  },
  {
    "text": "the executor memory and we could perform",
    "start": "281919",
    "end": "283919"
  },
  {
    "text": "a broadcast join that avoids",
    "start": "283919",
    "end": "286919"
  },
  {
    "text": "shuffle for broadcast join let us set",
    "start": "286919",
    "end": "289759"
  },
  {
    "text": "the auto broadcast join threshold to Old",
    "start": "289759",
    "end": "292080"
  },
  {
    "text": "150 Meg let's say 256 Meg the default",
    "start": "292080",
    "end": "295880"
  },
  {
    "text": "threshold as you may already know is 10",
    "start": "295880",
    "end": "298000"
  },
  {
    "text": "MV",
    "start": "298000",
    "end": "300039"
  },
  {
    "text": "setting this parameter will now instruct",
    "start": "300039",
    "end": "302560"
  },
  {
    "text": "SP to broadcast inputs lesser than or",
    "start": "302560",
    "end": "305199"
  },
  {
    "text": "equal to 256 Meg let's rerun our job",
    "start": "305199",
    "end": "308639"
  },
  {
    "text": "with the small",
    "start": "308639",
    "end": "311160"
  },
  {
    "text": "change now that our job has completed",
    "start": "311160",
    "end": "314360"
  },
  {
    "text": "first thing to note is that this job ran",
    "start": "314360",
    "end": "316440"
  },
  {
    "text": "in under 4 minutes which is a good sign",
    "start": "316440",
    "end": "319479"
  },
  {
    "text": "let's look at the stages this time you",
    "start": "319479",
    "end": "322400"
  },
  {
    "text": "can see that there are only four stages",
    "start": "322400",
    "end": "324960"
  },
  {
    "text": "the first two are identical dealing with",
    "start": "324960",
    "end": "327360"
  },
  {
    "text": "our input par metadata",
    "start": "327360",
    "end": "329919"
  },
  {
    "text": "the next stage with 36 task deal with",
    "start": "329919",
    "end": "332560"
  },
  {
    "text": "the smaller input file and the broadcast",
    "start": "332560",
    "end": "335639"
  },
  {
    "text": "exchange signals that the file is readed",
    "start": "335639",
    "end": "338440"
  },
  {
    "text": "and broadcasted to the",
    "start": "338440",
    "end": "340160"
  },
  {
    "text": "executors you can see that none of the",
    "start": "340160",
    "end": "342199"
  },
  {
    "text": "stage has any Shuffle rates let's open",
    "start": "342199",
    "end": "345000"
  },
  {
    "text": "the last stage here we read the data",
    "start": "345000",
    "end": "348080"
  },
  {
    "text": "from the larger Park file and continue",
    "start": "348080",
    "end": "350199"
  },
  {
    "text": "with the remainder of the job there is",
    "start": "350199",
    "end": "352479"
  },
  {
    "text": "no exchange operator nor any data",
    "start": "352479",
    "end": "354680"
  },
  {
    "text": "Shuffle",
    "start": "354680",
    "end": "355919"
  },
  {
    "text": "involved this example demonstrated a",
    "start": "355919",
    "end": "358560"
  },
  {
    "text": "basic workflow for using The Spar UI to",
    "start": "358560",
    "end": "361560"
  },
  {
    "text": "optimize glue ETL jobs the key takeaways",
    "start": "361560",
    "end": "365160"
  },
  {
    "text": "are spark UI allows inspecting low level",
    "start": "365160",
    "end": "368720"
  },
  {
    "text": "details of job execution to identify and",
    "start": "368720",
    "end": "371479"
  },
  {
    "text": "troubleshoot",
    "start": "371479",
    "end": "373080"
  },
  {
    "text": "issues with glue serverless SP Qi the UI",
    "start": "373080",
    "end": "376759"
  },
  {
    "text": "is automatically provisioned without",
    "start": "376759",
    "end": "378919"
  },
  {
    "text": "needing any manual",
    "start": "378919",
    "end": "380560"
  },
  {
    "text": "setup you can now Implement your own use",
    "start": "380560",
    "end": "383479"
  },
  {
    "text": "cases leveraging the spark UI to Monitor",
    "start": "383479",
    "end": "385919"
  },
  {
    "text": "and tune glue ETL jobs for",
    "start": "385919",
    "end": "388560"
  },
  {
    "text": "performance let's now switch gears and",
    "start": "388560",
    "end": "391039"
  },
  {
    "text": "move on to another topic logging in AWS",
    "start": "391039",
    "end": "394520"
  },
  {
    "text": "glue anytime you run a glue job you can",
    "start": "394520",
    "end": "397840"
  },
  {
    "text": "access the running logs on the",
    "start": "397840",
    "end": "399400"
  },
  {
    "text": "continuous logs tab as shown here it",
    "start": "399400",
    "end": "402639"
  },
  {
    "text": "shows both the spark driver logs and",
    "start": "402639",
    "end": "404720"
  },
  {
    "text": "your application logs from the",
    "start": "404720",
    "end": "406759"
  },
  {
    "text": "code this Flank In the Advanced Property",
    "start": "406759",
    "end": "409560"
  },
  {
    "text": "section of our job controls whether or",
    "start": "409560",
    "end": "412160"
  },
  {
    "text": "not the continuous logging is enabled",
    "start": "412160",
    "end": "414319"
  },
  {
    "text": "just be mindful of the fact that if you",
    "start": "414319",
    "end": "415960"
  },
  {
    "text": "enable continuous logging the logs are",
    "start": "415960",
    "end": "418360"
  },
  {
    "text": "available in Cloud one only after the",
    "start": "418360",
    "end": "420720"
  },
  {
    "text": "job",
    "start": "420720",
    "end": "421680"
  },
  {
    "text": "completes the Run details tab contains",
    "start": "421680",
    "end": "424720"
  },
  {
    "text": "links to different log types all logs",
    "start": "424720",
    "end": "427680"
  },
  {
    "text": "output logs and error logs all logs is a",
    "start": "427680",
    "end": "430800"
  },
  {
    "text": "Consolidated view of both output and",
    "start": "430800",
    "end": "432919"
  },
  {
    "text": "error logs output logs are standard",
    "start": "432919",
    "end": "436120"
  },
  {
    "text": "output log printed during the job",
    "start": "436120",
    "end": "438319"
  },
  {
    "text": "execution and error logs are errors and",
    "start": "438319",
    "end": "441319"
  },
  {
    "text": "stack traces that helps debug job",
    "start": "441319",
    "end": "445240"
  },
  {
    "text": "failures when debugging a failed job",
    "start": "445240",
    "end": "448479"
  },
  {
    "text": "first navigate to the error logs",
    "start": "448479",
    "end": "450840"
  },
  {
    "text": "view this shows cloudwatch log streams",
    "start": "450840",
    "end": "454240"
  },
  {
    "text": "for the job run including individual",
    "start": "454240",
    "end": "456479"
  },
  {
    "text": "executor streams and the driver",
    "start": "456479",
    "end": "459400"
  },
  {
    "text": "stream the individual executor stream",
    "start": "459400",
    "end": "462039"
  },
  {
    "text": "can be inspected for a specific executor",
    "start": "462039",
    "end": "465039"
  },
  {
    "text": "issue but the driver lock gives us a",
    "start": "465039",
    "end": "468080"
  },
  {
    "text": "full picture of the job",
    "start": "468080",
    "end": "471240"
  },
  {
    "text": "execution once we open the driver lock",
    "start": "471240",
    "end": "474560"
  },
  {
    "text": "stream we see a lot of informational",
    "start": "474560",
    "end": "477520"
  },
  {
    "text": "messages let's skip through all of these",
    "start": "477520",
    "end": "479919"
  },
  {
    "text": "and scroll down to the actual error",
    "start": "479919",
    "end": "482080"
  },
  {
    "text": "message we see for this job run our job",
    "start": "482080",
    "end": "485159"
  },
  {
    "text": "failed because of a missing",
    "start": "485159",
    "end": "487319"
  },
  {
    "text": "Library we can stop our troubleshooting",
    "start": "487319",
    "end": "489759"
  },
  {
    "text": "right here get back to our code or",
    "start": "489759",
    "end": "492520"
  },
  {
    "text": "configs and fix it before relaunching",
    "start": "492520",
    "end": "494960"
  },
  {
    "text": "the job now that you have familiarized",
    "start": "494960",
    "end": "497360"
  },
  {
    "text": "yourself with how to navigate the glue",
    "start": "497360",
    "end": "498879"
  },
  {
    "text": "job logs let us move on to the next",
    "start": "498879",
    "end": "501280"
  },
  {
    "text": "topic",
    "start": "501280",
    "end": "503120"
  },
  {
    "text": "metrics clue jobs send metrics to",
    "start": "503120",
    "end": "506639"
  },
  {
    "text": "cloudwatch to be able to send and",
    "start": "506639",
    "end": "508840"
  },
  {
    "text": "visualize those metrics ensure that",
    "start": "508840",
    "end": "511360"
  },
  {
    "text": "these flags are turned",
    "start": "511360",
    "end": "513399"
  },
  {
    "text": "on metrics can be seen right here on the",
    "start": "513399",
    "end": "516320"
  },
  {
    "text": "metric tab or you can log in to Cloud",
    "start": "516320",
    "end": "518640"
  },
  {
    "text": "watch",
    "start": "518640",
    "end": "520839"
  },
  {
    "text": "console when you log into the cloudwatch",
    "start": "526279",
    "end": "528519"
  },
  {
    "text": "console you can see see that there are",
    "start": "528519",
    "end": "530800"
  },
  {
    "text": "job metrics which provides high level",
    "start": "530800",
    "end": "533040"
  },
  {
    "text": "insights into job performance and",
    "start": "533040",
    "end": "534480"
  },
  {
    "text": "resource utilization and there are also",
    "start": "534480",
    "end": "537000"
  },
  {
    "text": "more granular operational metrics that",
    "start": "537000",
    "end": "539680"
  },
  {
    "text": "helps you identify performance issues",
    "start": "539680",
    "end": "541600"
  },
  {
    "text": "bottlenecks data skewes and other",
    "start": "541600",
    "end": "544000"
  },
  {
    "text": "optimization",
    "start": "544000",
    "end": "546040"
  },
  {
    "text": "opportunities for example if we filter",
    "start": "546040",
    "end": "548240"
  },
  {
    "text": "the job metrics by a specific job ID we",
    "start": "548240",
    "end": "551200"
  },
  {
    "text": "can see metrics such as driver Heap",
    "start": "551200",
    "end": "553120"
  },
  {
    "text": "execut a heap file system read wres",
    "start": "553120",
    "end": "556480"
  },
  {
    "text": "Etc remember our previous job which we",
    "start": "556480",
    "end": "559000"
  },
  {
    "text": "optimized using broadcast join this is",
    "start": "559000",
    "end": "561680"
  },
  {
    "text": "the corresponding memory utilization",
    "start": "561680",
    "end": "563240"
  },
  {
    "text": "metrics of the two runs and you can",
    "start": "563240",
    "end": "565279"
  },
  {
    "text": "clearly Spot the Difference",
    "start": "565279",
    "end": "569040"
  },
  {
    "text": "with that we come to the end of this",
    "start": "573920",
    "end": "575880"
  },
  {
    "text": "demo by leveraging spark UI Cloud watch",
    "start": "575880",
    "end": "579600"
  },
  {
    "text": "logs and metrics you can gain visibility",
    "start": "579600",
    "end": "582560"
  },
  {
    "text": "into job execution diagnose errors and",
    "start": "582560",
    "end": "586160"
  },
  {
    "text": "optimize performance I believe glue jobs",
    "start": "586160",
    "end": "589399"
  },
  {
    "text": "are no longer blackboxes for you and",
    "start": "589399",
    "end": "591800"
  },
  {
    "text": "this demo enables you to create high",
    "start": "591800",
    "end": "593519"
  },
  {
    "text": "quality data integration jobs using glue",
    "start": "593519",
    "end": "596519"
  },
  {
    "text": "thank you",
    "start": "596519",
    "end": "599720"
  }
]