[
  {
    "start": "0",
    "end": "175000"
  },
  {
    "text": "let me give you a little story here it was about three years ago when I joined the team the team size was half of what",
    "start": "1220",
    "end": "8880"
  },
  {
    "text": "it is today with less than 30 people our game was still in the early development",
    "start": "8880",
    "end": "14610"
  },
  {
    "text": "stage trying out new things and explore",
    "start": "14610",
    "end": "19619"
  },
  {
    "text": "all the possibilities out there was a lot of fun one day my boss came along",
    "start": "19619",
    "end": "24660"
  },
  {
    "text": "and hey we want to make this realistic in-game ecosystem would you like to take",
    "start": "24660",
    "end": "31380"
  },
  {
    "text": "charge on that and what do you mean by realistic ecosystem in game ecosystem",
    "start": "31380",
    "end": "36809"
  },
  {
    "text": "well we have this spectacular in-game view but what we wanted was a lot more",
    "start": "36809",
    "end": "42329"
  },
  {
    "text": "than just looking good when we plant trees and other vegetation in our game",
    "start": "42329",
    "end": "48210"
  },
  {
    "text": "we don't really do it manually nor a randomly we have this very sophisticated",
    "start": "48210",
    "end": "55100"
  },
  {
    "text": "algorithm to determine the location and the type of plants that we were going to",
    "start": "55100",
    "end": "60120"
  },
  {
    "text": "place the algorithm considers the type of soil the temperature of the humidity",
    "start": "60120",
    "end": "67530"
  },
  {
    "text": "and other other surrounding conditions and we don't really want to put place",
    "start": "67530",
    "end": "72960"
  },
  {
    "text": "banana trees in a snow land or anything like that right it sounds of all pretty",
    "start": "72960",
    "end": "79409"
  },
  {
    "text": "cool but looking back I should have been more cautious when I was you know taking",
    "start": "79409",
    "end": "84450"
  },
  {
    "text": "charge on this task I think I was bit I was bit too brave I think you can be",
    "start": "84450",
    "end": "90600"
  },
  {
    "text": "brave when you don't understand when you don't any when you don't know anything about something for example if you don't",
    "start": "90600",
    "end": "97560"
  },
  {
    "text": "understand what it takes to do card counting and blackjack you could be like Oh reinventing Las Vegas that's great",
    "start": "97560",
    "end": "103439"
  },
  {
    "text": "I'm gonna go play blackjack make a lot of money and then I'm gonna buy a Lamborghini on the way back home you",
    "start": "103439",
    "end": "109320"
  },
  {
    "text": "know you know that that kind of bravery and I was I was kind of like that it",
    "start": "109320",
    "end": "115200"
  },
  {
    "text": "wasn't my first time working in the game industry and I was much less experienced",
    "start": "115200",
    "end": "121530"
  },
  {
    "text": "a software engineer at the time so I didn't really understand what it takes to make a production quality game",
    "start": "121530",
    "end": "129179"
  },
  {
    "text": "service so I was like okay it sounds sounds like a cool thing to work on",
    "start": "129179",
    "end": "135090"
  },
  {
    "text": "without really thinking about what kind of challenges and difficulties it in it entails at the beginning I only thought",
    "start": "135090",
    "end": "142770"
  },
  {
    "text": "about the algorithm itself not the entire service architecture taking",
    "start": "142770",
    "end": "148590"
  },
  {
    "text": "charge on this test pushed me to contemplate far beyond the scope of the challenges of writing a single",
    "start": "148590",
    "end": "154980"
  },
  {
    "text": "standalone program that runs fast and correctly I had to think about the",
    "start": "154980",
    "end": "161730"
  },
  {
    "text": "scalability and the reliability of the whole system it wasn't easy for me but",
    "start": "161730",
    "end": "168270"
  },
  {
    "text": "I'm pretty sure it would have been much more difficult without the help of Amazon Web Services hello and welcome to",
    "start": "168270",
    "end": "176300"
  },
  {
    "start": "175000",
    "end": "175000"
  },
  {
    "text": "automating mother nature session my name is Suman and today I'm gonna talk about",
    "start": "176300",
    "end": "181700"
  },
  {
    "text": "how the rain goes in game ecosystem works and how I built the infrastructure",
    "start": "181700",
    "end": "187080"
  },
  {
    "text": "structure with Amazon Web Services to automatically maintain them so before",
    "start": "187080",
    "end": "194280"
  },
  {
    "text": "getting started let me give you a brief self-introduction I'm a software",
    "start": "194280",
    "end": "199410"
  },
  {
    "text": "engineer at Nixon and nexon is a multi niche multinational game company",
    "start": "199410",
    "end": "205769"
  },
  {
    "text": "headquartered in South Korea we specialize in online games for PC and",
    "start": "205769",
    "end": "211290"
  },
  {
    "text": "mobile and we service over more than 100 game titles in over 190 countries some",
    "start": "211290",
    "end": "221070"
  },
  {
    "text": "of the internationally famous titles include maplestory the calm bear arms sudden attack and more",
    "start": "221070",
    "end": "228350"
  },
  {
    "text": "well Nexen is an interesting company in a sense that it's like a federation of individual game studios each studio is",
    "start": "228350",
    "end": "235590"
  },
  {
    "text": "responsible for one game title and it's size ranges from a few people to a few",
    "start": "235590",
    "end": "241890"
  },
  {
    "text": "hundred people and each studio is unique in some way its each other has a unique",
    "start": "241890",
    "end": "248430"
  },
  {
    "text": "culture and unique environment we even have a different one launch time and office hours and things like that so",
    "start": "248430",
    "end": "255450"
  },
  {
    "text": "even though I'm working for a relatively large company it kind of feels like I'm working for a for a startup",
    "start": "255450",
    "end": "260479"
  },
  {
    "text": "the only minor difference is that we have unlimited amount of cash to spend on it",
    "start": "260479",
    "end": "267770"
  },
  {
    "text": "so we have been I'm sorry was it let me",
    "start": "267910",
    "end": "274400"
  },
  {
    "text": "talk about it later we have been working on this game called Durango for many years it's scheduled to",
    "start": "274400",
    "end": "282229"
  },
  {
    "text": "be released next year I think it'd be better to show you a short video instead",
    "start": "282229",
    "end": "287690"
  },
  {
    "text": "of me verbally talk you know explaining what the game is about when I was a kid",
    "start": "287690",
    "end": "297169"
  },
  {
    "text": "I always dreamed of seeing dinosaurs",
    "start": "297169",
    "end": "302169"
  },
  {
    "text": "even just a little one guess I should have dreamed bigger",
    "start": "302289",
    "end": "308830"
  },
  {
    "text": "[Music]",
    "start": "324270",
    "end": "327399"
  },
  {
    "text": "[Music]",
    "start": "332460",
    "end": "352690"
  },
  {
    "text": "[Music]",
    "start": "357650",
    "end": "381629"
  },
  {
    "text": "[Music] [Applause]",
    "start": "386880",
    "end": "392100"
  },
  {
    "text": "[Music] welcome pioneers to Durango",
    "start": "399610",
    "end": "406470"
  },
  {
    "text": "[Music] all right so Durango is an open-world",
    "start": "406470",
    "end": "415390"
  },
  {
    "text": "MMORPG in the world of dinosaurs since this is an AWS conference not a game",
    "start": "415390",
    "end": "420820"
  },
  {
    "text": "conference I'll try to be focused on AWS topics as much as possible and there are",
    "start": "420820",
    "end": "426850"
  },
  {
    "text": "a few Durango specific concepts and knowledge but I will explain them as we go so this was one of the most important",
    "start": "426850",
    "end": "436210"
  },
  {
    "text": "important goals in our mind we wanted to make our in-game ecosystem as realistic",
    "start": "436210",
    "end": "442180"
  },
  {
    "text": "as possible so what do you mean by realistic well just like the real world",
    "start": "442180",
    "end": "448420"
  },
  {
    "start": "444000",
    "end": "444000"
  },
  {
    "text": "the forest will be destroyed by people due to logging cultivation and building",
    "start": "448420",
    "end": "454570"
  },
  {
    "text": "something and other activities but if you leave a certain area untouched for",
    "start": "454570",
    "end": "459700"
  },
  {
    "text": "long enough the mother nature will do its magic to slowly replenish don't",
    "start": "459700",
    "end": "464800"
  },
  {
    "text": "destroy the forest if we've asked for the process it'll look like this so we",
    "start": "464800",
    "end": "471640"
  },
  {
    "text": "initially have an empty land here but it'll be replenished by small species",
    "start": "471640",
    "end": "477010"
  },
  {
    "text": "like like weed followed by shrubs and other mid-size species and then finally",
    "start": "477010",
    "end": "485890"
  },
  {
    "text": "big trees this all sounds great but we have no idea on how to do this at",
    "start": "485890",
    "end": "492310"
  },
  {
    "text": "the beginning so one day one of our game designers went to a local library to",
    "start": "492310",
    "end": "497320"
  },
  {
    "text": "check out a bunch of books to study ecology after a couple of weeks he came",
    "start": "497320",
    "end": "503560"
  },
  {
    "start": "502000",
    "end": "502000"
  },
  {
    "text": "up with a with a series of rules to plant trees and other vegetation in fact",
    "start": "503560",
    "end": "508930"
  },
  {
    "text": "his field of study in his graduate school career was a geology and paint",
    "start": "508930",
    "end": "515700"
  },
  {
    "text": "paleontology the study of fossil so I",
    "start": "515700",
    "end": "520719"
  },
  {
    "text": "don't think I could come up with these rules by just simply reading those books it was a unique erskyll based on the",
    "start": "520720",
    "end": "528760"
  },
  {
    "start": "527000",
    "end": "527000"
  },
  {
    "text": "rules he came up with we developed a program called ecosystem simulator to",
    "start": "528760",
    "end": "534040"
  },
  {
    "text": "determine what kind of plants we should put in a certain place we're gonna call",
    "start": "534040",
    "end": "539440"
  },
  {
    "text": "the eco similar eco system simulator as a go simulator for for gravity in this talk so why don't we plant trees",
    "start": "539440",
    "end": "547880"
  },
  {
    "text": "manually well that's because of the sheer scale of the game world we have",
    "start": "547880",
    "end": "553040"
  },
  {
    "text": "over 10,000 islands and there are over 2 billion potential spots where you can",
    "start": "553040",
    "end": "559279"
  },
  {
    "text": "place something and that's not all the islands are being created as more more",
    "start": "559279",
    "end": "566329"
  },
  {
    "text": "players during our game so it's not really an attainable goal to do decent",
    "start": "566329",
    "end": "572300"
  },
  {
    "text": "manually ok now we understand why it is not a good idea to hand the craft our",
    "start": "572300",
    "end": "579649"
  },
  {
    "start": "574000",
    "end": "574000"
  },
  {
    "text": "game world well why do we need a separate program for this why couldn't",
    "start": "579649",
    "end": "585649"
  },
  {
    "text": "we just let the game server handle this well the eCos eco simulator performance",
    "start": "585649",
    "end": "591740"
  },
  {
    "text": "up performs a lot of matrix operations and other calculations so much that it",
    "start": "591740",
    "end": "596870"
  },
  {
    "text": "cannot be handled by a single computer so we had to employ multiple compute",
    "start": "596870",
    "end": "604009"
  },
  {
    "text": "nodes on the top of that we wanted to make the Eco simulator scale independently from the rest of the game",
    "start": "604009",
    "end": "610579"
  },
  {
    "text": "server and this is how the simulator works in with the game server the game",
    "start": "610579",
    "end": "618439"
  },
  {
    "text": "server generates the current cards in state and given the Garden State the simulator plans all the trees and other",
    "start": "618439",
    "end": "626329"
  },
  {
    "text": "things to determine the next garden state then the game server applies to that garden state back to the database",
    "start": "626329",
    "end": "634209"
  },
  {
    "text": "our Garden State is to just document in the database describing which plant is",
    "start": "634209",
    "end": "639709"
  },
  {
    "start": "635000",
    "end": "635000"
  },
  {
    "text": "on which tile and a tile is a single cell described in the screenshot a tile",
    "start": "639709",
    "end": "646399"
  },
  {
    "text": "is a basic unit for object placement and this is an overview of the architecture",
    "start": "646399",
    "end": "653360"
  },
  {
    "start": "650000",
    "end": "650000"
  },
  {
    "text": "we have settled on this may not be obvious at the first glance but I will",
    "start": "653360",
    "end": "659000"
  },
  {
    "text": "dive into each component and explain what kind of technical problems we faced and how we came up with a plausible",
    "start": "659000",
    "end": "665779"
  },
  {
    "text": "solutions in our production environment we're gonna have multiple machines",
    "start": "665779",
    "end": "672680"
  },
  {
    "start": "668000",
    "end": "668000"
  },
  {
    "text": "running the simulator in parallel that means whenever we deploy our code",
    "start": "672680",
    "end": "678100"
  },
  {
    "text": "to a new machine we wanted to we want it to work every single time but sometimes",
    "start": "678100",
    "end": "684310"
  },
  {
    "text": "to solve software deployment can be tricky as it's not always straightforward to provide the identical",
    "start": "684310",
    "end": "691689"
  },
  {
    "text": "runtime environment for all deployments in essence we need a solid base system",
    "start": "691689",
    "end": "699699"
  },
  {
    "start": "696000",
    "end": "696000"
  },
  {
    "text": "that every eco simulator deployment can rely on and our solution was Tucker it",
    "start": "699699",
    "end": "707319"
  },
  {
    "start": "705000",
    "end": "705000"
  },
  {
    "text": "provides an item on isolated in runtime environment for your code you can you",
    "start": "707319",
    "end": "713680"
  },
  {
    "text": "can package your package things like libraries and frameworks that your code needs as a single and self",
    "start": "713680",
    "end": "720209"
  },
  {
    "text": "self-sufficient container AWS provides a",
    "start": "720209",
    "end": "725290"
  },
  {
    "text": "highly scaleable high-performance container management service called ecs",
    "start": "725290",
    "end": "731939"
  },
  {
    "text": "it does all the heavy lifting for you so you don't have to concern yourself with a container deployment and cluster",
    "start": "731939",
    "end": "739420"
  },
  {
    "text": "configuration and other complicated stuff although it's a fully managed to service you still have to provision the",
    "start": "739420",
    "end": "746439"
  },
  {
    "text": "underlying compute resources like easy to suppose we've got our easiest cluster",
    "start": "746439",
    "end": "754600"
  },
  {
    "text": "ready and we're gonna pull a darker image from the repository to run it on",
    "start": "754600",
    "end": "759879"
  },
  {
    "text": "ECS ECR is a fully managed to talk her",
    "start": "759879",
    "end": "765370"
  },
  {
    "text": "container registry like a docker hub well there's actually a behind the",
    "start": "765370",
    "end": "771809"
  },
  {
    "start": "769000",
    "end": "769000"
  },
  {
    "text": "behind-the-scenes story that I tell I I like to share with you I initially",
    "start": "771809",
    "end": "777610"
  },
  {
    "text": "thought the ECR must be in the same region as the easiest but that was not",
    "start": "777610",
    "end": "782860"
  },
  {
    "text": "true anyway that's what I thought and our game servers are mostly in Tokyo",
    "start": "782860",
    "end": "788410"
  },
  {
    "text": "region whereas the East easiest cluster was set up in Virginia because at the",
    "start": "788410",
    "end": "795339"
  },
  {
    "text": "time we started working on this project the ECR was only available in Virginia",
    "start": "795339",
    "end": "800910"
  },
  {
    "text": "coincidentally the ec2 pricing in Virginia was about 20 22 percent lower",
    "start": "800910",
    "end": "806410"
  },
  {
    "text": "than that of of Tokyo on average given our monthly",
    "start": "806410",
    "end": "812170"
  },
  {
    "start": "811000",
    "end": "811000"
  },
  {
    "text": "usage and the type of instances we use this this is how much we would have",
    "start": "812170",
    "end": "818470"
  },
  {
    "text": "saved that's about 20% or $1,800 of cost reduction well that may not sound so",
    "start": "818470",
    "end": "826150"
  },
  {
    "text": "significant in terms of dollar amount but remember this was only for beta",
    "start": "826150",
    "end": "831880"
  },
  {
    "text": "testing in a larger scale that 20% saving would translate into a much more",
    "start": "831880",
    "end": "838540"
  },
  {
    "text": "satisfactory result in addition we took this cost-saving measure even further",
    "start": "838540",
    "end": "845560"
  },
  {
    "text": "we employ spot instances rather than on-demand instances you know for our ECS",
    "start": "845560",
    "end": "851140"
  },
  {
    "text": "cluster we're going to talk about it at the end of this talk however if you",
    "start": "851140",
    "end": "858310"
  },
  {
    "start": "856000",
    "end": "856000"
  },
  {
    "text": "think about it carefully the inter-regional data transfer can be quite expensive so if you have money to",
    "start": "858310",
    "end": "865510"
  },
  {
    "text": "transfer one petabyte you can probably buy two BMWs so even if you could save",
    "start": "865510",
    "end": "871060"
  },
  {
    "text": "some money by offloading your computation to a different region if you transfer a large quantity of data to get",
    "start": "871060",
    "end": "878740"
  },
  {
    "text": "the result back you may end up spending even more money on the data transfer",
    "start": "878740",
    "end": "884290"
  },
  {
    "text": "charges than what you have saved on in computation so you want to be careful",
    "start": "884290",
    "end": "889480"
  },
  {
    "text": "about this it's estimated that we transferred about three and a half",
    "start": "889480",
    "end": "896260"
  },
  {
    "start": "892000",
    "end": "892000"
  },
  {
    "text": "terabytes between those two regions in September for beta testing and that",
    "start": "896260",
    "end": "901780"
  },
  {
    "text": "translates into no more than $200 in data transfer charges but and so it was",
    "start": "901780",
    "end": "907540"
  },
  {
    "text": "only estimation so I decided to take whole bit I decided to look into a bit",
    "start": "907540",
    "end": "913270"
  },
  {
    "text": "closer in the AWS building console the data transfer charge for the Virginia",
    "start": "913270",
    "end": "920260"
  },
  {
    "text": "region was less than $10 well I'm sorry although it was about $11 and I think",
    "start": "920260",
    "end": "927220"
  },
  {
    "text": "that's how much I spent at McDonald last night at the airport looking go so far",
    "start": "927220",
    "end": "934420"
  },
  {
    "text": "and but then I found something unexpected it turned out that we",
    "start": "934420",
    "end": "940870"
  },
  {
    "start": "936000",
    "end": "936000"
  },
  {
    "text": "transferred over 111 terabytes which is 32 times more than what we anticipated",
    "start": "940870",
    "end": "950790"
  },
  {
    "text": "well it may not seem so much still but remember this is only for a beta testing",
    "start": "950790",
    "end": "957910"
  },
  {
    "text": "and you know this damages could be even worse if if the service was officially",
    "start": "957910",
    "end": "964000"
  },
  {
    "text": "launched my boss still doesn't know about this and but he's gonna find out",
    "start": "964000",
    "end": "970930"
  },
  {
    "text": "because they easily been watching this online but that's okay I'm gonna be on my personal vacation after this",
    "start": "970930",
    "end": "976330"
  },
  {
    "text": "conference for two weeks so by the time I get back to work",
    "start": "976330",
    "end": "981340"
  },
  {
    "text": "ether is gonna be forget about it or my desk will be gone a few months ago one",
    "start": "981340",
    "end": "989800"
  },
  {
    "text": "of our DevOps engineers decide to move our ECR to tokyo for easier management",
    "start": "989800",
    "end": "995520"
  },
  {
    "text": "as he was organizing our ADA obvious resources with the terraform so I",
    "start": "995520",
    "end": "1003510"
  },
  {
    "text": "suspected that transferring docker image from the ECR to ECS was incurring this",
    "start": "1003510",
    "end": "1010110"
  },
  {
    "text": "insanity then I thought about it again and came to a conclusion that we would",
    "start": "1010110",
    "end": "1016380"
  },
  {
    "text": "have has transferred the docker image over a hundred thousand times even in",
    "start": "1016380",
    "end": "1023310"
  },
  {
    "text": "for you even if you're running multiple ECS agents that's unrealistic so I kept",
    "start": "1023310",
    "end": "1030030"
  },
  {
    "text": "searching for the real reason and the real problem was that we're serving our",
    "start": "1030030",
    "end": "1036360"
  },
  {
    "text": "game terrain files from in in s3 in Tokyo the Eco simulator was pulling",
    "start": "1036360",
    "end": "1043319"
  },
  {
    "text": "files over three terabytes per day on average given the number of players",
    "start": "1043320",
    "end": "1049410"
  },
  {
    "text": "participating in the beta program that was a bit too much to solve this problem",
    "start": "1049410",
    "end": "1057750"
  },
  {
    "text": "we could either remove the easiest cluster to Tokyo or have an exact copy",
    "start": "1057750",
    "end": "1063390"
  },
  {
    "text": "of the s3 bucket in Virginia we decided to go to go with the latter so instead",
    "start": "1063390",
    "end": "1072030"
  },
  {
    "text": "of serving terrain files from top we may set up a replica in Virginia and",
    "start": "1072030",
    "end": "1078659"
  },
  {
    "text": "pull terrain falls from there this way we only transfer date of data we only",
    "start": "1078659",
    "end": "1085470"
  },
  {
    "text": "transfer data between these two regions on once and then containers on the",
    "start": "1085470",
    "end": "1091019"
  },
  {
    "text": "easiest cluster pull files from the replica in Virginia which is a free",
    "start": "1091019",
    "end": "1096419"
  },
  {
    "text": "overcharge okay let's go back to our engineering problem instead of worrying",
    "start": "1096419",
    "end": "1103529"
  },
  {
    "text": "about the cost too much well we have we have only ESS cluster ready but the",
    "start": "1103529",
    "end": "1110759"
  },
  {
    "text": "tests don't run by themselves so something has to trigger them our game",
    "start": "1110759",
    "end": "1118049"
  },
  {
    "text": "has this philosophy no audience no plain meaning if there is no observer then we",
    "start": "1118049",
    "end": "1124830"
  },
  {
    "text": "don't do anything for example we've got this state machine based animal AI that",
    "start": "1124830",
    "end": "1131419"
  },
  {
    "text": "regulates animals behaviors but they don't do anything unless someone is",
    "start": "1131419",
    "end": "1136499"
  },
  {
    "text": "looking at them that way we don't waste our precious CPU CPU power the same",
    "start": "1136499",
    "end": "1144029"
  },
  {
    "text": "story goes with our eco simulator if known is we entering around in our in a",
    "start": "1144029",
    "end": "1149399"
  },
  {
    "text": "particular area of an island then the simulator doesn't run on that particular area well that's because we have a large",
    "start": "1149399",
    "end": "1157889"
  },
  {
    "start": "1156000",
    "end": "1156000"
  },
  {
    "text": "number of islands and the simulator has simulator has to cover an extensive area",
    "start": "1157889",
    "end": "1163549"
  },
  {
    "text": "there is no way that the simulator runs on everywhere because it'll just take",
    "start": "1163549",
    "end": "1168720"
  },
  {
    "text": "too long so we run this simulator based",
    "start": "1168720",
    "end": "1174239"
  },
  {
    "start": "1171000",
    "end": "1171000"
  },
  {
    "text": "on the player activities whenever a player steps into a small area called",
    "start": "1174239",
    "end": "1180720"
  },
  {
    "text": "chunk it'll trigger the eco simulator to run on that particular chunk well but if",
    "start": "1180720",
    "end": "1193409"
  },
  {
    "text": "we do that every time someone steps in a steps into a new chunk it will call the simulator too many times so we do a",
    "start": "1193409",
    "end": "1201149"
  },
  {
    "text": "random sampling here to control the rate in which we send the replenish a request to the ECS",
    "start": "1201149",
    "end": "1208190"
  },
  {
    "text": "so what I mean by a chunk is just a pack of our 16 by 16 tiles a chunk is a basic",
    "start": "1208190",
    "end": "1216090"
  },
  {
    "text": "unit for a workload for example our game server load terrain data by chunk and",
    "start": "1216090",
    "end": "1222110"
  },
  {
    "text": "the eco simulator does its job in a chunk basis so by dividing up a large",
    "start": "1222110",
    "end": "1229830"
  },
  {
    "text": "island into a small chunks like this we can process any task in parallel and",
    "start": "1229830",
    "end": "1237200"
  },
  {
    "text": "most importantly we can you can finish the task in a fixed amount of time as",
    "start": "1237200",
    "end": "1242820"
  },
  {
    "text": "long as we provide enough computing power and the tasks don't depend on each",
    "start": "1242820",
    "end": "1248340"
  },
  {
    "text": "other since we run the simulator on each",
    "start": "1248340",
    "end": "1254010"
  },
  {
    "start": "1251000",
    "end": "1251000"
  },
  {
    "text": "yes making a replenish request essentially means running on easiest task which is pretty simple you know in",
    "start": "1254010",
    "end": "1261810"
  },
  {
    "text": "almost all popular languages there's an AWS API bindings that you can use now",
    "start": "1261810",
    "end": "1270300"
  },
  {
    "text": "the game server can invoke on easiest tasks but we've got a potential problem here player activity is something we can",
    "start": "1270300",
    "end": "1278460"
  },
  {
    "text": "hardly predict accurately sometimes a lot of players move around and destroy",
    "start": "1278460",
    "end": "1284010"
  },
  {
    "text": "the forest and other times not many players around so we have provisioned a",
    "start": "1284010",
    "end": "1291390"
  },
  {
    "text": "certain number of easiest agents which determines the compute capacity and when",
    "start": "1291390",
    "end": "1298260"
  },
  {
    "text": "we go over the limit then we're gonna have some I mean you won't be able to",
    "start": "1298260",
    "end": "1303330"
  },
  {
    "text": "run any additional tasks which means we're gonna have some missing tasks then",
    "start": "1303330",
    "end": "1309330"
  },
  {
    "text": "that translates into Unruh plane replenished empty spots in our game land",
    "start": "1309330",
    "end": "1317059"
  },
  {
    "text": "so this is what happens when we fail to replenish our lands players will",
    "start": "1317480",
    "end": "1324300"
  },
  {
    "text": "complain about resource shortage to alleviate this problem we brought the",
    "start": "1324300",
    "end": "1331170"
  },
  {
    "start": "1328000",
    "end": "1328000"
  },
  {
    "text": "sqs into the picture as two actor act to act as a buffer between the producer and",
    "start": "1331170",
    "end": "1336840"
  },
  {
    "text": "the consumer here the producer is a game server and the consumer is the easiest cluster",
    "start": "1336840",
    "end": "1344899"
  },
  {
    "text": "so instead of having the game server directly call I mean directly invoking easiest task it",
    "start": "1344899",
    "end": "1353370"
  },
  {
    "text": "inserts a request message in the queue and a lambda function processes it later",
    "start": "1353370",
    "end": "1359760"
  },
  {
    "text": "on we need a lambda because sqs cannot invoke on easiest tasks by itself so",
    "start": "1359760",
    "end": "1367230"
  },
  {
    "start": "1367000",
    "end": "1367000"
  },
  {
    "text": "what is ask us and how does it help us well ask us is a fully managed messaging",
    "start": "1367230",
    "end": "1372240"
  },
  {
    "text": "queue service for reliable reliable communication between distributed",
    "start": "1372240",
    "end": "1378029"
  },
  {
    "text": "software components and micro services it makes it simple to decouple",
    "start": "1378029",
    "end": "1384140"
  },
  {
    "text": "application components allowing us to build fault tolerant and scalable",
    "start": "1384140",
    "end": "1389370"
  },
  {
    "text": "systems one thing I find interesting is that it supports optional server-side",
    "start": "1389370",
    "end": "1395850"
  },
  {
    "text": "the encryption I mean in in our case it's not our best interest to conceal",
    "start": "1395850",
    "end": "1403409"
  },
  {
    "text": "where we plant trees so we didn't put too much effort into this but how",
    "start": "1403409",
    "end": "1408480"
  },
  {
    "text": "imagine it can be useful in finance and healthcare industries where you want to deal with confidential data oh there are",
    "start": "1408480",
    "end": "1417990"
  },
  {
    "start": "1417000",
    "end": "1417000"
  },
  {
    "text": "two types of cues in SPS the standard Q and the FIFO queue and delivering",
    "start": "1417990",
    "end": "1423149"
  },
  {
    "text": "messages exactly once and inorder are two major challenges in any distributed",
    "start": "1423149",
    "end": "1428760"
  },
  {
    "text": "system and SQS reflects these characteristics really well you can",
    "start": "1428760",
    "end": "1435659"
  },
  {
    "text": "choose one of these two types of queues depending on your needs if you need to guarantee exactly ones and in order",
    "start": "1435659",
    "end": "1443580"
  },
  {
    "text": "delivery at the cost of limited throughput then the FIFO queue is a good option for you in our case the exactly",
    "start": "1443580",
    "end": "1453299"
  },
  {
    "text": "one semantics is a relatively relatively less of concern and the trooper was a",
    "start": "1453299",
    "end": "1459750"
  },
  {
    "text": "lot more important so we decided to go with a standard queue to make a side",
    "start": "1459750",
    "end": "1465929"
  },
  {
    "text": "note those problems can be seen as a mathematical problem rather than a software engineering problem",
    "start": "1465929",
    "end": "1472230"
  },
  {
    "text": "so if your operations are communicative then out of order messages in sqs one",
    "start": "1472230",
    "end": "1478799"
  },
  {
    "text": "affect the final outcome likewise if your operations are item",
    "start": "1478799",
    "end": "1484500"
  },
  {
    "text": "potent the duplicated messages won't cause any damage the replenish",
    "start": "1484500",
    "end": "1492389"
  },
  {
    "text": "operations are executed in a chunk basis so in order so the order in which they",
    "start": "1492389",
    "end": "1499320"
  },
  {
    "text": "are carried out doesn't really matter and the replenish algorithm is designed",
    "start": "1499320",
    "end": "1507090"
  },
  {
    "start": "1503000",
    "end": "1503000"
  },
  {
    "text": "in a way that the marginal difference after each iteration asymptotically approaches to zero it sounds like a fair",
    "start": "1507090",
    "end": "1516210"
  },
  {
    "text": "words but this well this isn't exactly a pure idempotent function in a mathematical sense but in practice",
    "start": "1516210",
    "end": "1523549"
  },
  {
    "text": "executing the replenished operations twice instead of once produces an",
    "start": "1523549",
    "end": "1530730"
  },
  {
    "text": "acceptable outcome it looks good enough and in sqs the message of duplication is",
    "start": "1530730",
    "end": "1537929"
  },
  {
    "text": "an exceptional case not an average case so we decide to not to worry about it",
    "start": "1537929",
    "end": "1543450"
  },
  {
    "text": "too much so the standard Q was a more reasonable option for us by introducing the sqs in",
    "start": "1543450",
    "end": "1553169"
  },
  {
    "text": "between the game server and the ESS cluster we solve the problem of the",
    "start": "1553169",
    "end": "1558600"
  },
  {
    "text": "producer and consumer a speedy mismatch the overflowing messages can stay in the",
    "start": "1558600",
    "end": "1565860"
  },
  {
    "text": "queue until the easiest cat catches up no more empty spots in the game world and this is great well what are we do",
    "start": "1565860",
    "end": "1574980"
  },
  {
    "text": "with the lambda how do we trigger it to run on easiest tasks well lambda is a server list compute",
    "start": "1574980",
    "end": "1582120"
  },
  {
    "text": "service that runs your code without provisioning underlying compute resources like easy two and a lambda can",
    "start": "1582120",
    "end": "1591179"
  },
  {
    "text": "be invoked by can be either directly invoked through an API call or by an",
    "start": "1591179",
    "end": "1598470"
  },
  {
    "text": "event source and here's a full list of the lambda event sources but",
    "start": "1598470",
    "end": "1604169"
  },
  {
    "start": "1601000",
    "end": "1601000"
  },
  {
    "text": "unfortunately the sqs is not listed here which means we cannot trigger a lambda by simply",
    "start": "1604169",
    "end": "1610710"
  },
  {
    "text": "sending a message to a queue then how do",
    "start": "1610710",
    "end": "1615960"
  },
  {
    "text": "you trigger lambda when a message is queued or there are two potential solutions I could think of think of",
    "start": "1615960",
    "end": "1622789"
  },
  {
    "text": "solution one have a cloud watch cron task that runs every minute and have a",
    "start": "1622789",
    "end": "1629039"
  },
  {
    "start": "1623000",
    "end": "1623000"
  },
  {
    "text": "lambda the holes messages from the the SQS this may not be the most elegant way",
    "start": "1629039",
    "end": "1635760"
  },
  {
    "text": "but it works solution to heaven have a cloud watch alarm on approximate number",
    "start": "1635760",
    "end": "1643289"
  },
  {
    "text": "of messages visible property so if there is any visible message in the queue",
    "start": "1643289",
    "end": "1649110"
  },
  {
    "text": "it'll publish on SNS topic that triggers a lambda the SNS or simple notification",
    "start": "1649110",
    "end": "1657149"
  },
  {
    "start": "1654000",
    "end": "1654000"
  },
  {
    "text": "and service is a fully managed to pops up messaging and notifications of service in our solution to the cloud",
    "start": "1657149",
    "end": "1666120"
  },
  {
    "text": "watch publishes a messaging to a certain channel where the lambda is subscribed",
    "start": "1666120",
    "end": "1671460"
  },
  {
    "text": "to when we invoke on easiest tasks we",
    "start": "1671460",
    "end": "1677190"
  },
  {
    "start": "1674000",
    "end": "1674000"
  },
  {
    "text": "need to pass some metadata the metadata is a collection of the game specific",
    "start": "1677190",
    "end": "1684539"
  },
  {
    "text": "information such as properties of natural objects the point of interest and terrain space terrain specifications",
    "start": "1684539",
    "end": "1691830"
  },
  {
    "text": "and things like that also we also need",
    "start": "1691830",
    "end": "1697080"
  },
  {
    "text": "to pass the garden state describing where the plants are located when we try",
    "start": "1697080",
    "end": "1705870"
  },
  {
    "text": "to pass those to sqs things don't really work out because the maximum message",
    "start": "1705870",
    "end": "1712320"
  },
  {
    "text": "size and SQS is 256 kilobytes and sometimes the total size of the metadata",
    "start": "1712320",
    "end": "1719490"
  },
  {
    "text": "and the gardens garden state exceeds this limit our solution was to use s3 as",
    "start": "1719490",
    "end": "1727860"
  },
  {
    "text": "a temporary storage replenish requests go into the queue but all the parameters",
    "start": "1727860",
    "end": "1733350"
  },
  {
    "text": "like the Garden State and the metadata go into the s3 bucket after this we found on others",
    "start": "1733350",
    "end": "1742769"
  },
  {
    "text": "another problem we didn't have any mechanism to delete this unused old",
    "start": "1742769",
    "end": "1749220"
  },
  {
    "text": "objects from s3 the storage is pretty cheap but we cannot go on like this",
    "start": "1749220",
    "end": "1754320"
  },
  {
    "text": "forever well there's an easy solution for this which is called s3 lifecycle",
    "start": "1754320",
    "end": "1761190"
  },
  {
    "start": "1757000",
    "end": "1757000"
  },
  {
    "text": "management it moves or deletes objects based on the rules you defined since",
    "start": "1761190",
    "end": "1770580"
  },
  {
    "text": "we're using s3 as a temporary storage we setup our bucket to delete any object",
    "start": "1770580",
    "end": "1777179"
  },
  {
    "text": "that is older than a day after setting",
    "start": "1777179",
    "end": "1782429"
  },
  {
    "text": "up the objective expert exploration policy we have seen a definite improvement in our storage usage",
    "start": "1782429",
    "end": "1789179"
  },
  {
    "text": "dropping from one point 8 terabytes to 200 gigabytes all saving that much space",
    "start": "1789179",
    "end": "1796200"
  },
  {
    "text": "may not be significant in terms of dollars but the important factor here is",
    "start": "1796200",
    "end": "1802559"
  },
  {
    "text": "that we changed a linear growth into the into a flatline another optimization we",
    "start": "1802559",
    "end": "1811169"
  },
  {
    "start": "1809000",
    "end": "1809000"
  },
  {
    "text": "could do with with s3 is to move infrequently access to objects like like",
    "start": "1811169",
    "end": "1817860"
  },
  {
    "text": "terrain files or old log files to a lower storage class such as s3",
    "start": "1817860",
    "end": "1824269"
  },
  {
    "text": "infrequent access or glacier ok well it",
    "start": "1824269",
    "end": "1830789"
  },
  {
    "text": "seems like we have taken care of all the issues to run the Eco simulator on our ECS cluster now let's talk about how to",
    "start": "1830789",
    "end": "1839970"
  },
  {
    "text": "get the results back from the simulator",
    "start": "1839970",
    "end": "1844309"
  },
  {
    "text": "once the simulator completes its assignment it'll have a final garden",
    "start": "1847410",
    "end": "1852670"
  },
  {
    "text": "state to be applied to back to the game server well we need some some kind of",
    "start": "1852670",
    "end": "1858550"
  },
  {
    "text": "callback mechanism to get the result effect initially we had on HTTP and the",
    "start": "1858550",
    "end": "1863800"
  },
  {
    "text": "point on the game server so the simulator can upload result by making on",
    "start": "1863800",
    "end": "1870610"
  },
  {
    "text": "HTTP POST the request well one of the",
    "start": "1870610",
    "end": "1875620"
  },
  {
    "text": "hurdle hurdles was that our game servers and the ECS cluster were in different",
    "start": "1875620",
    "end": "1880990"
  },
  {
    "text": "regions thus belonging in to belong to different VP C's so we had to set up a virtual",
    "start": "1880990",
    "end": "1888880"
  },
  {
    "text": "private network to let them communicate because we didn't want to publicly",
    "start": "1888880",
    "end": "1894310"
  },
  {
    "text": "expose on HTTP and the point on the game server as far as the functionality is",
    "start": "1894310",
    "end": "1903010"
  },
  {
    "text": "concerned it works fine but it imposed a",
    "start": "1903010",
    "end": "1908560"
  },
  {
    "text": "great challenge for us having on HTTP endpoint makes it difficult to set up",
    "start": "1908560",
    "end": "1914290"
  },
  {
    "text": "our development and testing environment environments especially for those non-technical people our game server",
    "start": "1914290",
    "end": "1923200"
  },
  {
    "text": "runs on Linux whereas the most of our team members use Windows so if you want",
    "start": "1923200",
    "end": "1928840"
  },
  {
    "text": "to run the game server locally you're gonna have to have a virtual machine set up on your on your host machine then set",
    "start": "1928840",
    "end": "1937030"
  },
  {
    "text": "up a series of porting rules and we're",
    "start": "1937030",
    "end": "1942460"
  },
  {
    "text": "gonna have to submit a request to the IT department to open up a port and to do",
    "start": "1942460",
    "end": "1947590"
  },
  {
    "text": "that you're gonna have to get an approval from your manager it's just a lot of hassle and another issue here is",
    "start": "1947590",
    "end": "1956200"
  },
  {
    "start": "1954000",
    "end": "1954000"
  },
  {
    "text": "that we have a potential single point of failure we had to build our own ec2",
    "start": "1956200",
    "end": "1961870"
  },
  {
    "text": "instance with open Swan installed on in order to set up our VPN well there could",
    "start": "1961870",
    "end": "1967900"
  },
  {
    "text": "be potentially be on s POF once that instance goes down then the destroy the",
    "start": "1967900",
    "end": "1977830"
  },
  {
    "text": "forest will no longer be replenished and that means angry players and for me",
    "start": "1977830",
    "end": "1983250"
  },
  {
    "text": "that's working overtime to fix this so",
    "start": "1983250",
    "end": "1989340"
  },
  {
    "start": "1988000",
    "end": "1988000"
  },
  {
    "text": "this is the ultra or alternative that we came up with we send those parameters",
    "start": "1989340",
    "end": "1995880"
  },
  {
    "text": "through sqs and s3 when we make a request so why don't we send the result",
    "start": "1995880",
    "end": "2000950"
  },
  {
    "text": "back through them as well so instead of having the Eco simulator directly call",
    "start": "2000950",
    "end": "2006530"
  },
  {
    "text": "on HTTP endpoint on the game server we made the game server periodically pull",
    "start": "2006530",
    "end": "2013310"
  },
  {
    "text": "messages from sqs that contained the metadata and the key to the gardens",
    "start": "2013310",
    "end": "2019580"
  },
  {
    "text": "guardian state stored in s3 see the the",
    "start": "2019580",
    "end": "2026600"
  },
  {
    "text": "SPS completely eliminated the need for direct communication between the game",
    "start": "2026600",
    "end": "2031640"
  },
  {
    "text": "server and the easiest cluster in other words we don't we don't need a VPN and",
    "start": "2031640",
    "end": "2037880"
  },
  {
    "text": "and the external HTTP endpoint anymore so by introducing reliable communication",
    "start": "2037880",
    "end": "2044210"
  },
  {
    "text": "like sqs between the between application components which component can operate",
    "start": "2044210",
    "end": "2052540"
  },
  {
    "text": "scale and fail independently from each other not to mention that we also",
    "start": "2052540",
    "end": "2058370"
  },
  {
    "text": "eliminated potential SPF then we noticed",
    "start": "2058370",
    "end": "2065120"
  },
  {
    "text": "a there's a inconsistency in the request and the response path path here so we",
    "start": "2065120",
    "end": "2073879"
  },
  {
    "text": "decided to get rid of lambda and let the game server handle the requests as well",
    "start": "2073880",
    "end": "2079540"
  },
  {
    "text": "less components less chance of failure",
    "start": "2079540",
    "end": "2084490"
  },
  {
    "text": "okay let's switch gears and move on to different topic",
    "start": "2084790",
    "end": "2090460"
  },
  {
    "text": "imagine how the world was like when Amazon was just a forest there's no AWS",
    "start": "2093500",
    "end": "2099870"
  },
  {
    "text": "no concept of cloud computing you would probably have to rent servers from a",
    "start": "2099870",
    "end": "2105620"
  },
  {
    "text": "hosting provider or have your own on-premise servers either way you're",
    "start": "2105620",
    "end": "2113880"
  },
  {
    "text": "gonna have to have some idea on how much resource you need it's not impossible",
    "start": "2113880",
    "end": "2120240"
  },
  {
    "text": "but it's not easy to scale in and out according to your needs then the aid of",
    "start": "2120240",
    "end": "2129270"
  },
  {
    "start": "2128000",
    "end": "2128000"
  },
  {
    "text": "is a Tobias came along and the ec2 made it so much easier to cope with you're",
    "start": "2129270",
    "end": "2135570"
  },
  {
    "text": "constantly changing demands for computing resources it's a better matter",
    "start": "2135570",
    "end": "2140640"
  },
  {
    "text": "of clicking of your buttons or calling an API to turn on and off instances",
    "start": "2140640",
    "end": "2146480"
  },
  {
    "text": "however even with this tremendous convenience you still have to know how",
    "start": "2146480",
    "end": "2154350"
  },
  {
    "text": "much resource you need wouldn't it be great if if some magic happens and easy",
    "start": "2154350",
    "end": "2161610"
  },
  {
    "text": "two instances are launched when you need more that's where the auto scaling comes",
    "start": "2161610",
    "end": "2167430"
  },
  {
    "start": "2166000",
    "end": "2166000"
  },
  {
    "text": "into play auto scaling lets you build systems that respond to changes in",
    "start": "2167430",
    "end": "2172650"
  },
  {
    "text": "demand it launches or terminates eight obvious resources based on the rules you",
    "start": "2172650",
    "end": "2177780"
  },
  {
    "text": "defined in our case we set up some rules so that it launches more ec2 instances",
    "start": "2177780",
    "end": "2184290"
  },
  {
    "text": "when the overall CPU utilization exceeds 80 percent for 60 seconds and it",
    "start": "2184290",
    "end": "2190440"
  },
  {
    "text": "terminates some instances were when the CPU utilization falls below 50 percent is four or five minutes well we didn't",
    "start": "2190440",
    "end": "2197490"
  },
  {
    "text": "really come up with any mathematical model to determine those parameters we",
    "start": "2197490",
    "end": "2203550"
  },
  {
    "text": "just say heuristic aliy came up with these values that's something we're hoping to improve later on as a result",
    "start": "2203550",
    "end": "2211700"
  },
  {
    "text": "we were able to maximize the utility of our ec2 agents if the CPU usage is is",
    "start": "2211700",
    "end": "2219780"
  },
  {
    "text": "almost always almost to full that means you don't have much room to deal with the spikes in demands and the",
    "start": "2219780",
    "end": "2228680"
  },
  {
    "text": "CPU usage is too low that means you're wasting your money so we really want to",
    "start": "2228680",
    "end": "2234770"
  },
  {
    "text": "stay in this sweet spot so to speak notice that the number of easy to agents",
    "start": "2234770",
    "end": "2241070"
  },
  {
    "text": "is keeps changing as depicted in the Green Line this not only provides a",
    "start": "2241070",
    "end": "2248660"
  },
  {
    "text": "better user experience but it also save us cost so we decide to take the cost",
    "start": "2248660",
    "end": "2257000"
  },
  {
    "text": "reduction even further remember I mentioned about spot instances in",
    "start": "2257000",
    "end": "2263080"
  },
  {
    "text": "earlier Oh one thing I find amusing is that at the beginning of this talk I",
    "start": "2263080",
    "end": "2270589"
  },
  {
    "text": "said we have a lot of money to spend on AWS but I always end up talking about",
    "start": "2270589",
    "end": "2276080"
  },
  {
    "text": "how to save money no matter what I do here well just to give you an excuse I was a grad student until about four",
    "start": "2276080",
    "end": "2283280"
  },
  {
    "text": "years ago and I have many years of working in an early stage startup so",
    "start": "2283280",
    "end": "2288740"
  },
  {
    "text": "saving cost is crucial for survival and that's built into my DNA anyway those",
    "start": "2288740",
    "end": "2297859"
  },
  {
    "text": "spot instances are spare easy two instances that you can bid on you can set the maximum bid on a particular",
    "start": "2297859",
    "end": "2304160"
  },
  {
    "text": "instance type it's a great way to save",
    "start": "2304160",
    "end": "2309470"
  },
  {
    "start": "2307000",
    "end": "2307000"
  },
  {
    "text": "cost for tasks that are time flexible and tolerant to in interruptions if your",
    "start": "2309470",
    "end": "2316280"
  },
  {
    "text": "tasks only gets terminated due to spot instance price change your software",
    "start": "2316280",
    "end": "2322130"
  },
  {
    "text": "architecture should be able to handle that by retrying the task when the instance comes back online it may not be",
    "start": "2322130",
    "end": "2330650"
  },
  {
    "text": "suitable for all systems however and I wouldn't use it for mission critical systems in fact we use a combination of",
    "start": "2330650",
    "end": "2338540"
  },
  {
    "text": "on-demand and spot instances for our easiest clustering because bidding high",
    "start": "2338540",
    "end": "2344180"
  },
  {
    "text": "enough cannot guarantee that term instances are never terminated and we",
    "start": "2344180",
    "end": "2350660"
  },
  {
    "text": "would like to have have some steady base on the line for our four",
    "start": "2350660",
    "end": "2355820"
  },
  {
    "text": "under all circumstances this is how much",
    "start": "2355820",
    "end": "2361340"
  },
  {
    "text": "we saved by employing spud instances when compared to on demand instances",
    "start": "2361340",
    "end": "2366610"
  },
  {
    "text": "that's about 78% of saving again you know in in a larger scale we would have",
    "start": "2366610",
    "end": "2374060"
  },
  {
    "text": "seen much more satisfactory result in terms of a dollar amount and reserved",
    "start": "2374060",
    "end": "2381500"
  },
  {
    "start": "2380000",
    "end": "2380000"
  },
  {
    "text": "instance is on a reserve the instances are another good way to save cost by",
    "start": "2381500",
    "end": "2388490"
  },
  {
    "text": "locking yourself into a either one-year or three-year contract you get a",
    "start": "2388490",
    "end": "2395120"
  },
  {
    "text": "discount to the rate up to sixty percent compared compared to on-demand instances",
    "start": "2395120",
    "end": "2400390"
  },
  {
    "text": "and remember I mentioned about we have up we want to have a baseline EC as",
    "start": "2400390",
    "end": "2405680"
  },
  {
    "text": "agents that's where we could use some reserved instances because we know we're",
    "start": "2405680",
    "end": "2413330"
  },
  {
    "text": "gonna have some we're gonna have certain number of machines running for a very long time I think I try to push too much",
    "start": "2413330",
    "end": "2424040"
  },
  {
    "text": "information to you guys in a such a short time and so let's go let's briefly",
    "start": "2424040",
    "end": "2429230"
  },
  {
    "text": "go over what I have talked about so far",
    "start": "2429230",
    "end": "2433119"
  },
  {
    "start": "2434000",
    "end": "2434000"
  },
  {
    "text": "the easiest makes our job much easier by providing a fully managed to service for",
    "start": "2436700",
    "end": "2443070"
  },
  {
    "text": "container deployment and scheduling and monitoring it also handles cluster",
    "start": "2443070",
    "end": "2449160"
  },
  {
    "text": "configuration and management and other complicated stuff allowing us to focus",
    "start": "2449160",
    "end": "2454470"
  },
  {
    "text": "on our business logic and you can set up the auto scaling for your easiest",
    "start": "2454470",
    "end": "2460410"
  },
  {
    "text": "cluster so that it regulates the number of instances according to your rules the",
    "start": "2460410",
    "end": "2466950"
  },
  {
    "text": "one minor inconvenience in my opinion is that we still have to provision",
    "start": "2466950",
    "end": "2473510"
  },
  {
    "text": "underlying computer resources for ECS one thing I was really hoping for was a",
    "start": "2473510",
    "end": "2479730"
  },
  {
    "text": "system where I can go and launch docker containers without worrying about",
    "start": "2479730",
    "end": "2485640"
  },
  {
    "text": "underlying computer resources and get built by CPU and memory usage just like",
    "start": "2485640",
    "end": "2491160"
  },
  {
    "text": "lambda I'm pretty sure there's a reason for this perhaps it's a security concern",
    "start": "2491160",
    "end": "2497250"
  },
  {
    "text": "maybe you could do jailbreaking with the docker or something like that well I don't know what the real real",
    "start": "2497250",
    "end": "2503220"
  },
  {
    "text": "story is maybe I will maybe I will be able to find out what the reason is in",
    "start": "2503220",
    "end": "2509040"
  },
  {
    "text": "this conference by talking to a Tobias people and we discussed that the sqs can",
    "start": "2509040",
    "end": "2518160"
  },
  {
    "text": "act as a buffer between the producer and the consumer decoupling application",
    "start": "2518160",
    "end": "2523500"
  },
  {
    "text": "components making them fault tolerant and highly scalable the SQS can be",
    "start": "2523500",
    "end": "2530400"
  },
  {
    "text": "extremely useful when you have when you have application components in different V pcs it allows your application",
    "start": "2530400",
    "end": "2537840"
  },
  {
    "text": "components communicate without establishing direct communications we",
    "start": "2537840",
    "end": "2545130"
  },
  {
    "text": "learned that there are two types of queues and if exact semantics is",
    "start": "2545130",
    "end": "2550140"
  },
  {
    "text": "important go with a FIFO queue otherwise go go with the standard queue but if you",
    "start": "2550140",
    "end": "2557040"
  },
  {
    "text": "could make your operations communicative and idempotent you you will eventually",
    "start": "2557040",
    "end": "2564390"
  },
  {
    "text": "converge it to a correct result even if your messages are messages are out",
    "start": "2564390",
    "end": "2570200"
  },
  {
    "text": "order or duplicated and s3 is a is a",
    "start": "2570200",
    "end": "2576950"
  },
  {
    "text": "good good place to store relatively large objects that cannot be stored in SQS and objects lifecycle rules that can",
    "start": "2576950",
    "end": "2587150"
  },
  {
    "text": "be set up so I'm sorry okay you can you can set the object lifecycle rules so",
    "start": "2587150",
    "end": "2594079"
  },
  {
    "text": "that in frequently accessed objects are moved into a different class storage or",
    "start": "2594079",
    "end": "2600410"
  },
  {
    "text": "even delete it I mean we also learned that it's important to keep the object",
    "start": "2600410",
    "end": "2605839"
  },
  {
    "text": "within the same region as compute resources for a minimal latency and to",
    "start": "2605839",
    "end": "2611570"
  },
  {
    "text": "prevent inter-regional data transfer charges and lambda allows you to focus",
    "start": "2611570",
    "end": "2618500"
  },
  {
    "text": "on your code nothing else it's a true liberation especially if you have a",
    "start": "2618500",
    "end": "2623780"
  },
  {
    "text": "small engineering team and and if you don't want to dive into the world of a",
    "start": "2623780",
    "end": "2630349"
  },
  {
    "text": "Tobias in order to create this architectural masterpiece and even if",
    "start": "2630349",
    "end": "2635810"
  },
  {
    "text": "you have a big engineering team lambda can be still useful we actually use a lambda actively in other parts of in our",
    "start": "2635810",
    "end": "2643310"
  },
  {
    "text": "of our game server like processing log files and things like that it's kind of",
    "start": "2643310",
    "end": "2649819"
  },
  {
    "text": "unfortunate to drop lambda for this particular project but we had a good",
    "start": "2649819",
    "end": "2655490"
  },
  {
    "text": "reason for that we chose to do that in order to make things a bit more consistent without with within our",
    "start": "2655490",
    "end": "2662030"
  },
  {
    "text": "architecture we also looked at few",
    "start": "2662030",
    "end": "2667400"
  },
  {
    "start": "2665000",
    "end": "2665000"
  },
  {
    "text": "measures to reduce down the cost like auto scaling and spot instances and",
    "start": "2667400",
    "end": "2672410"
  },
  {
    "text": "reserve the instances and always",
    "start": "2672410",
    "end": "2677960"
  },
  {
    "text": "remember that the network is the most precious resource that you want to conserve even at the cost of using other",
    "start": "2677960",
    "end": "2684349"
  },
  {
    "text": "types of resources like a compute or storage it's the best case scenario if",
    "start": "2684349",
    "end": "2690380"
  },
  {
    "text": "you could do everything within the same region as it's free to transfer data",
    "start": "2690380",
    "end": "2695930"
  },
  {
    "text": "within the region but if you have to transfer data between different regions",
    "start": "2695930",
    "end": "2701200"
  },
  {
    "text": "or maybe you want to in khloe's some kind of compression when transferring data that's like using",
    "start": "2701200",
    "end": "2708690"
  },
  {
    "text": "compute resources to save network or maybe you want to replicate the entire",
    "start": "2708690",
    "end": "2715510"
  },
  {
    "text": "s3 bucket on its region that you're going to pull the data from and that's right that's like a using storage to",
    "start": "2715510",
    "end": "2722170"
  },
  {
    "text": "save it save Network okay that's all I",
    "start": "2722170",
    "end": "2728290"
  },
  {
    "text": "for today and thanks for joining this session and I hope to see you all next",
    "start": "2728290",
    "end": "2733540"
  },
  {
    "text": "year and enjoy the rest of conference thank you very much [Applause]",
    "start": "2733540",
    "end": "2746050"
  }
]