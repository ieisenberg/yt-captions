[
  {
    "start": "0",
    "end": "31000"
  },
  {
    "text": "hello thanks for coming out and joining us today I'm David Richardson I lead our",
    "start": "30",
    "end": "5850"
  },
  {
    "text": "collection of our service offerings and like my colleagues Deepak and Ken I've",
    "start": "5850",
    "end": "11130"
  },
  {
    "text": "been lucky to be a member of the ADA bs team for quite a while now so we were talking about this and we thought we",
    "start": "11130",
    "end": "17220"
  },
  {
    "text": "would try something new today we thought we would share a little bit of our experiences at Amazon and about how we",
    "start": "17220",
    "end": "23340"
  },
  {
    "text": "think Amazon goes about building software so give us feedback after it's over let us know if this was something",
    "start": "23340",
    "end": "29460"
  },
  {
    "text": "that was helpful I joined the company in January 2006 in the infrastructure and",
    "start": "29460",
    "end": "36270"
  },
  {
    "start": "31000",
    "end": "77000"
  },
  {
    "text": "networking group that was a little bit before AWS launched and I've always been a software person so once I joined the",
    "start": "36270",
    "end": "42930"
  },
  {
    "text": "company I started looking around and trying to get a sense of how Amazon went about building software and what I",
    "start": "42930",
    "end": "49950"
  },
  {
    "text": "quickly noticed was the company had a very different approach from many other companies and it was clearly a conscious",
    "start": "49950",
    "end": "56969"
  },
  {
    "text": "decision because it really touched many many parts of the business and it was",
    "start": "56969",
    "end": "62760"
  },
  {
    "text": "obvious that the goal of this way of building software was to drive innovation in particular a type of",
    "start": "62760",
    "end": "70020"
  },
  {
    "text": "innovation that lets you do lots and lots of little experiments across a very broad part of the business now it hadn't",
    "start": "70020",
    "end": "78509"
  },
  {
    "start": "77000",
    "end": "194000"
  },
  {
    "text": "always been that way in the early days of the company as I started to get to",
    "start": "78509",
    "end": "83939"
  },
  {
    "text": "know some of the older software engineers there had been one giant C++ hairball that was called obidos and one",
    "start": "83939",
    "end": "91710"
  },
  {
    "text": "giant database relational database called ACB amazon.com books and as you",
    "start": "91710",
    "end": "98549"
  },
  {
    "text": "can imagine that was definitely not an agile architecture it meant that you",
    "start": "98549",
    "end": "103770"
  },
  {
    "text": "know and by the time I joined there were many many products beyond just books if you wanted to add a new type of product",
    "start": "103770",
    "end": "110189"
  },
  {
    "text": "say digital goods or a new physical product like CDs or housewares",
    "start": "110189",
    "end": "115409"
  },
  {
    "text": "you had to edit the same stuff that was also supporting the existing well-established",
    "start": "115409",
    "end": "120990"
  },
  {
    "text": "bookstore and so that was a high risk environment something that making changes to really how could could risk",
    "start": "120990",
    "end": "129060"
  },
  {
    "text": "the business and that's not great for driving innovation so sometime in the early 2000s the",
    "start": "129060",
    "end": "135230"
  },
  {
    "text": "company started moving to what today we would call Micro Services back then it was called service-oriented architecture",
    "start": "135230",
    "end": "142570"
  },
  {
    "text": "now you may have heard that Amazon's kind of a writing oriented culture unfortunately it turns out not a lot was",
    "start": "142570",
    "end": "149450"
  },
  {
    "text": "written down about that style of software so I was really excited later that year I think it was in June 2006",
    "start": "149450",
    "end": "156470"
  },
  {
    "text": "the Association for Computing Machinery ACM published an interview with Verner",
    "start": "156470",
    "end": "161600"
  },
  {
    "text": "Vogel's about Amazon's approach to building software so that's how I started to learn about Amazon's approach",
    "start": "161600",
    "end": "168380"
  },
  {
    "text": "and and you could tell that it was not just a technology approach it was a way",
    "start": "168380",
    "end": "175580"
  },
  {
    "text": "to be able to combine you know technology architectural decisions but",
    "start": "175580",
    "end": "181640"
  },
  {
    "text": "also organization design patterns and an infrastructure that could support",
    "start": "181640",
    "end": "187550"
  },
  {
    "text": "building in that way but most importantly with a with a culture with with a leadership approach and so you",
    "start": "187550",
    "end": "196430"
  },
  {
    "start": "194000",
    "end": "221000"
  },
  {
    "text": "know the company started moving to that in the 2000s and it started to take an",
    "start": "196430",
    "end": "203750"
  },
  {
    "text": "approach where we would break down components of the architecture into very small services where the idea is a micro",
    "start": "203750",
    "end": "211190"
  },
  {
    "text": "service would just be responsible for one thing because that could let you kind of move more rapidly because you",
    "start": "211190",
    "end": "217910"
  },
  {
    "text": "could better understand the changes you were making and this was also related to",
    "start": "217910",
    "end": "223250"
  },
  {
    "start": "221000",
    "end": "305000"
  },
  {
    "text": "a way to organize teams to build teams and we call that to pizza teams where",
    "start": "223250",
    "end": "229220"
  },
  {
    "text": "the idea is you can give a team a Charter ask them to own a problem where",
    "start": "229220",
    "end": "234320"
  },
  {
    "text": "the teams no bigger than you know about two pizzas to feed them and these teams",
    "start": "234320",
    "end": "240110"
  },
  {
    "text": "have some strong properties the first is ownership and and I'm in Midwesterners I",
    "start": "240110",
    "end": "246950"
  },
  {
    "text": "really like this that's one of my favorite leadership principles because I think you just got to be responsible for",
    "start": "246950",
    "end": "252080"
  },
  {
    "text": "stuff and so the idea was let's have teams be able to make decisions but then",
    "start": "252080",
    "end": "258200"
  },
  {
    "text": "also be responsible for the results of those decisions to be accountable these",
    "start": "258200",
    "end": "263870"
  },
  {
    "text": "days I think a lot of people would call DevOps where you know an engineering",
    "start": "263870",
    "end": "268890"
  },
  {
    "text": "team is responsible for designing for developing and for operating services I just call it ownership and so that was a",
    "start": "268890",
    "end": "276390"
  },
  {
    "text": "key aspect of these two pizza teams where the idea was you could drive focused innovation you could have an",
    "start": "276390",
    "end": "283830"
  },
  {
    "text": "idea you could spin up a team ask them to go experiment and to figure out you",
    "start": "283830",
    "end": "289380"
  },
  {
    "text": "know is does this idea have some legs are we gonna get some good results out of it can we make some improvements on behalf",
    "start": "289380",
    "end": "295050"
  },
  {
    "text": "of customers and so they could go and build the micro service that that would",
    "start": "295050",
    "end": "300270"
  },
  {
    "text": "drive that and have the set of technical infrastructure to support it so I think",
    "start": "300270",
    "end": "307980"
  },
  {
    "text": "that this type of micro services approach is a natural fit for modern micro services that are built in a",
    "start": "307980",
    "end": "314700"
  },
  {
    "text": "serverless way our goal with Cerberus is to really radically reduce the amount of",
    "start": "314700",
    "end": "320190"
  },
  {
    "text": "infrastructure you have to manage so you can really just focus on business logic without having to worry about how to",
    "start": "320190",
    "end": "327419"
  },
  {
    "text": "compose a lot of these pieces together so we're gonna talk today about some common elements of these I'm going to",
    "start": "327419",
    "end": "334320"
  },
  {
    "text": "talk about some architecture patterns that we see work well for these types of micro services and the infrastructure",
    "start": "334320",
    "end": "340800"
  },
  {
    "text": "that supports it Deepak is going to talk about the operational model of running",
    "start": "340800",
    "end": "345900"
  },
  {
    "text": "these sorts of systems and Ken is going to talk about how you actually build and deliver the software that makes these up",
    "start": "345900",
    "end": "351900"
  },
  {
    "text": "now as I go through these these architecture patterns please keep in",
    "start": "351900",
    "end": "358229"
  },
  {
    "text": "mind the the infrastructure the software services that are there to support it",
    "start": "358229",
    "end": "363930"
  },
  {
    "text": "because the idea is if you build in this way the services from AWS are made to",
    "start": "363930",
    "end": "370169"
  },
  {
    "text": "work well together in those patterns and should reduce the amount of non business logic that you have to work on now I",
    "start": "370169",
    "end": "380070"
  },
  {
    "start": "378000",
    "end": "480000"
  },
  {
    "text": "think innovation requires change and the easiest kind of innovation to drive is lots of incremental change lots of",
    "start": "380070",
    "end": "387090"
  },
  {
    "text": "experiments that's much easier to do than to wait until you make one huge change because you can just get more",
    "start": "387090",
    "end": "394620"
  },
  {
    "text": "more iterations you can learn faster by doing more of those and that's where a microservices",
    "start": "394620",
    "end": "400910"
  },
  {
    "text": "approach plays well so you can iterate on each of those microservices at whatever pace of",
    "start": "400910",
    "end": "406670"
  },
  {
    "text": "innovation you want to drive and you can have teams that also can can be staffed",
    "start": "406670",
    "end": "412940"
  },
  {
    "text": "appropriately for the work that you want to do now those of you with a software",
    "start": "412940",
    "end": "418220"
  },
  {
    "text": "engineering background may be thinking this this sounds a lot like Conway's law and Conway's law is an idea where you're",
    "start": "418220",
    "end": "424940"
  },
  {
    "text": "your org design and your technical architecture wind up looking a lot like each other and that's because really",
    "start": "424940",
    "end": "431300"
  },
  {
    "text": "they're both about communication if you think about what a team what an organization has to do to make a",
    "start": "431300",
    "end": "437660"
  },
  {
    "text": "decision well they have to communicate with each other and the larger the the team is the larger the organization is",
    "start": "437660",
    "end": "444290"
  },
  {
    "text": "the harder it is to make a decision you know there's just a lot of communication that has to happen and similarly one of",
    "start": "444290",
    "end": "451250"
  },
  {
    "text": "the key aspects of a technical architecture is how you compose systems together you know how you can reduce the",
    "start": "451250",
    "end": "458120"
  },
  {
    "text": "amount of knowledge an engineer has to have to make one decision so I think a",
    "start": "458120",
    "end": "463250"
  },
  {
    "text": "micro-services approach is really Conway's law it's really how can you have an organization that can make",
    "start": "463250",
    "end": "470570"
  },
  {
    "text": "decisions very rapidly and have a technical infrastructure and a set of",
    "start": "470570",
    "end": "476030"
  },
  {
    "text": "you know technical design patterns that can support that so there are lots of",
    "start": "476030",
    "end": "482780"
  },
  {
    "start": "480000",
    "end": "493000"
  },
  {
    "text": "different ways to build micro services and we think there are kind of three key patterns that that work well especially",
    "start": "482780",
    "end": "489110"
  },
  {
    "text": "in a service way and so I'm going to talk about those the first really are",
    "start": "489110",
    "end": "495500"
  },
  {
    "start": "493000",
    "end": "542000"
  },
  {
    "text": "kind of API driven request response applications and I think of api's as the",
    "start": "495500",
    "end": "502130"
  },
  {
    "text": "front door to micro services actually inside of AWS when we talk about to pizza teams we often talk about a",
    "start": "502130",
    "end": "509090"
  },
  {
    "text": "hardened API as a requirement of a team so we even think about api's at a team",
    "start": "509090",
    "end": "514729"
  },
  {
    "text": "level and that goes to that organizing practice of the API is the promise they",
    "start": "514729",
    "end": "521270"
  },
  {
    "text": "make to their colleagues in the rest of the company and that shouldn't change very often but behind the scenes we want",
    "start": "521270",
    "end": "528110"
  },
  {
    "text": "them to be able to innovate as rapidly as possible to be able to changed the implementation in whatever",
    "start": "528110",
    "end": "535010"
  },
  {
    "text": "way makes sense for the business and so that API that front door to the micro service lets them do that",
    "start": "535010",
    "end": "542740"
  },
  {
    "start": "542000",
    "end": "671000"
  },
  {
    "text": "now we've built a lot of micro services as part of building out AWS and so we've",
    "start": "542740",
    "end": "548750"
  },
  {
    "text": "seen that there are some very common patterns that show up you know truly just in the management of these AP is",
    "start": "548750",
    "end": "555470"
  },
  {
    "text": "not necessarily in the API itself but in how you go about building and operating and managing api's and we've tried to",
    "start": "555470",
    "end": "562880"
  },
  {
    "text": "provide those capabilities for developers in API gateway where the idea",
    "start": "562880",
    "end": "568520"
  },
  {
    "text": "is you know we can take those lessons learned and instead of every new micro service having to re-implement a",
    "start": "568520",
    "end": "574490"
  },
  {
    "text": "well-mannered API API gateway can provide a lot of those capabilities so",
    "start": "574490",
    "end": "579920"
  },
  {
    "text": "it often starts with authentication so that you can control which customers or other micro services can use the API an",
    "start": "579920",
    "end": "587330"
  },
  {
    "text": "API gateway is well integrated with kognito and with Identity and Access Management there's also usually an",
    "start": "587330",
    "end": "594110"
  },
  {
    "text": "aspect of resource control and so API gateway provides throttling there's always some some insight some",
    "start": "594110",
    "end": "601370"
  },
  {
    "text": "measurement and monitoring you have to do with your API and so API gateway has",
    "start": "601370",
    "end": "606589"
  },
  {
    "text": "built-in support for x-ray and cloud watch and cloud trail so that you can manage and monitor your API but",
    "start": "606589",
    "end": "614839"
  },
  {
    "text": "oftentimes the API doesn't live in isolation it lives in a network and so",
    "start": "614839",
    "end": "620089"
  },
  {
    "text": "you also have to have some controls about call it network reach ability what",
    "start": "620089",
    "end": "625370"
  },
  {
    "text": "network environment can your clients be in what network environment are your backends in and so API gateway has kind",
    "start": "625370",
    "end": "632600"
  },
  {
    "text": "of a full matrix of that the front end the the front door to those api's can be out on the public internet it can be",
    "start": "632600",
    "end": "640070"
  },
  {
    "text": "regional it can be in a VP C similarly the backend can be public backends can",
    "start": "640070",
    "end": "647150"
  },
  {
    "text": "be in a VP C and you can even have different VP C's between the client side and the back side and it turns out you",
    "start": "647150",
    "end": "655670"
  },
  {
    "text": "can also use Direct Connect and our VPN offerings so the backend might not even",
    "start": "655670",
    "end": "661430"
  },
  {
    "text": "be in the cloud it could be on-premise and reached through through those networking",
    "start": "661430",
    "end": "666820"
  },
  {
    "text": "offerings but still managed and appear inside the cloud now if you went to",
    "start": "666820",
    "end": "673900"
  },
  {
    "start": "671000",
    "end": "729000"
  },
  {
    "text": "Vernors keynote earlier today you probably heard that we're launching WebSockets later in December and I'm",
    "start": "673900",
    "end": "680350"
  },
  {
    "text": "really curious to see how customers are going to use this if you think about that matrix of network reach ability",
    "start": "680350",
    "end": "685600"
  },
  {
    "text": "we're kind of doing the same with with statefulness you know with WebSockets you have these",
    "start": "685600",
    "end": "691540"
  },
  {
    "text": "long-lived stateful connections and yet with API gateway you can implement those",
    "start": "691540",
    "end": "697690"
  },
  {
    "text": "in a short-lived service fashion so you can have you know WebSockets that live",
    "start": "697690",
    "end": "702910"
  },
  {
    "text": "for minutes hours days and yet use something like lambda to just quickly",
    "start": "702910",
    "end": "708340"
  },
  {
    "text": "fire up compute that will respond to the actual requests across WebSockets so",
    "start": "708340",
    "end": "714430"
  },
  {
    "text": "we're really looking forward to see how people can expand the capabilities they",
    "start": "714430",
    "end": "720010"
  },
  {
    "text": "have in traditional request reply micro services now to long-lived stateful WebSockets but still keep building in a",
    "start": "720010",
    "end": "727540"
  },
  {
    "text": "serverless way now if you really get into building micro services with lots",
    "start": "727540",
    "end": "734320"
  },
  {
    "start": "729000",
    "end": "817000"
  },
  {
    "text": "of api's you may find that it's not enough to manage each API individually",
    "start": "734320",
    "end": "739620"
  },
  {
    "text": "that paper that I mentioned I enjoyed reading back in 2006 from Vernor about how Amazon went about building software",
    "start": "739620",
    "end": "746530"
  },
  {
    "text": "he pointed out that even back then if you visited an amazon.com webpage behind",
    "start": "746530",
    "end": "752680"
  },
  {
    "text": "the scenes hundreds of micro services were actually firing off to build that single page and so these environments",
    "start": "752680",
    "end": "759490"
  },
  {
    "text": "can get quite large and so we've now launched app mesh as a way to be able to",
    "start": "759490",
    "end": "765010"
  },
  {
    "text": "discover and communicate with the various api's that and micro services",
    "start": "765010",
    "end": "771010"
  },
  {
    "text": "that might make up your application so again in this same pattern of we want",
    "start": "771010",
    "end": "776170"
  },
  {
    "text": "infrastructure support that makes it easy for your developers to use simple DNS names SDKs or api's to discover and",
    "start": "776170",
    "end": "785020"
  },
  {
    "text": "connect to the api's that make up your micro service and related to that we",
    "start": "785020",
    "end": "792100"
  },
  {
    "text": "know that sometimes you have to manage network communication faults or software updates and things like that so we've",
    "start": "792100",
    "end": "798640"
  },
  {
    "text": "also launched AWS at mesh so that you can again have a managed infrastructure that we provide",
    "start": "798640",
    "end": "804820"
  },
  {
    "text": "for you that you can use to deal with these network conditions and it can be used across multiple clusters across",
    "start": "804820",
    "end": "812050"
  },
  {
    "text": "multiple orchestration systems and even across multiple V pcs so that that's",
    "start": "812050",
    "end": "818920"
  },
  {
    "start": "817000",
    "end": "860000"
  },
  {
    "text": "kind of you know design pattern number one request reply driven micro services",
    "start": "818920",
    "end": "824829"
  },
  {
    "text": "the the second common pattern is aventure than architectures and in a way",
    "start": "824829",
    "end": "830350"
  },
  {
    "text": "this is kind of a Back to the Future design pattern you know back in the 1980s many enterprises started moving to",
    "start": "830350",
    "end": "837430"
  },
  {
    "text": "message oriented middleware or enterprise integration patterns really for the same reasons that they're super",
    "start": "837430",
    "end": "843759"
  },
  {
    "text": "valuable today in in modern service architectures cuz they have this great decoupling capability they make it",
    "start": "843759",
    "end": "851079"
  },
  {
    "text": "really easy for you to have lots of different systems that all interact in",
    "start": "851079",
    "end": "856540"
  },
  {
    "text": "kind of a reactive way with each other via events and so we have a set of",
    "start": "856540",
    "end": "861790"
  },
  {
    "start": "860000",
    "end": "909000"
  },
  {
    "text": "infrastructure that we provide to help you build in this way we have our cloud native queuing and notification service",
    "start": "861790",
    "end": "869470"
  },
  {
    "text": "that have massive scalability deep integration with the rest of AWS and very tight integration with lambda in",
    "start": "869470",
    "end": "876639"
  },
  {
    "text": "particular to make it easy to build kind of a combination of events and compute",
    "start": "876639",
    "end": "881920"
  },
  {
    "text": "that react to each other and it turns out I don't know how many people know this but every time you use an AWS",
    "start": "881920",
    "end": "888430"
  },
  {
    "text": "service you can also generate an event in our service called cloud watch events so these combined make it easy for you",
    "start": "888430",
    "end": "895660"
  },
  {
    "text": "to build loosely coupled systems where you can have some action that triggers",
    "start": "895660",
    "end": "901029"
  },
  {
    "text": "an event that you know has some compute that may trigger some more events and so on so makes it very easy to evolve an",
    "start": "901029",
    "end": "908110"
  },
  {
    "text": "architecture the third major design",
    "start": "908110",
    "end": "913269"
  },
  {
    "start": "909000",
    "end": "957000"
  },
  {
    "text": "pattern we see people using our data stream oriented ones and and you know",
    "start": "913269",
    "end": "918880"
  },
  {
    "text": "these can be what people will call an event sourcing pattern it can be a data flow pattern but basically where instead",
    "start": "918880",
    "end": "925540"
  },
  {
    "text": "of events and messages the key connective tissue through your application our data streams",
    "start": "925540",
    "end": "932000"
  },
  {
    "text": "and here we provide support through dynamodb streams which is a really neat way to be able to as you drive changes",
    "start": "932000",
    "end": "940069"
  },
  {
    "text": "in your DynamoDB tables you know you can have a stream that can then drive computational activities or other things",
    "start": "940069",
    "end": "947689"
  },
  {
    "text": "as part of your architecture or you can use Kinesis in a same sort of way you",
    "start": "947689",
    "end": "952790"
  },
  {
    "text": "know more generically however you want to start those data streams and in that",
    "start": "952790",
    "end": "958009"
  },
  {
    "start": "957000",
    "end": "981000"
  },
  {
    "text": "same spirit of we want to make it easy to use these systems together right",
    "start": "958009",
    "end": "963589"
  },
  {
    "text": "before reinvent we launched enhanced integration between lambda and Kinesis",
    "start": "963589",
    "end": "968870"
  },
  {
    "text": "data streams which really is just to make it even easier for these to scale up and down with the needs of your",
    "start": "968870",
    "end": "974689"
  },
  {
    "text": "business without you needing to do any of the work and to make it you know more performant now one thing that you've",
    "start": "974689",
    "end": "984199"
  },
  {
    "start": "981000",
    "end": "1023000"
  },
  {
    "text": "probably seen across all three of these these design patterns is it's a lot of systems working together I think that is",
    "start": "984199",
    "end": "990920"
  },
  {
    "text": "a big change from more traditional monolithic architectures where you're",
    "start": "990920",
    "end": "996230"
  },
  {
    "text": "now going to find you have a mixture of an event or a data stream or an API and some compute and usually some",
    "start": "996230",
    "end": "1002920"
  },
  {
    "text": "persistence storage together and so another family of tools that we provide is is something to make it easier to",
    "start": "1002920",
    "end": "1010779"
  },
  {
    "text": "manage that coordination together so we have a service we call step functions and its sole purpose is to make it easy",
    "start": "1010779",
    "end": "1017649"
  },
  {
    "text": "for your components to work with each other to manage the workflow through those and so earlier today we enhanced",
    "start": "1017649",
    "end": "1026048"
  },
  {
    "start": "1023000",
    "end": "1068000"
  },
  {
    "text": "that with integrations to many more AWS services and you know this is something",
    "start": "1026049",
    "end": "1032048"
  },
  {
    "text": "that you could have done before even with step functions you could have written a little bit of code that would",
    "start": "1032049",
    "end": "1038829"
  },
  {
    "text": "be responsible for starting a job checking to see if that job was done maybe retrying it and then eventually",
    "start": "1038829",
    "end": "1045280"
  },
  {
    "text": "moving on but now with these enhanced integrations you can just basically say",
    "start": "1045280",
    "end": "1051159"
  },
  {
    "text": "two step functions what you want the workflow to be and it will manage all of that so the idea is let's keep",
    "start": "1051159",
    "end": "1057429"
  },
  {
    "text": "simplifying the ability to build these API driven or event-driven or dataflow",
    "start": "1057429",
    "end": "1062770"
  },
  {
    "text": "driven applications without needing to focus on on the infrastructure one of my favorite",
    "start": "1062770",
    "end": "1070360"
  },
  {
    "text": "sayings from the early days of the web was small pieces loosely joined and this",
    "start": "1070360",
    "end": "1076600"
  },
  {
    "text": "this was an attempt to you know try to define some of what made the web so magical so able to grow so rapidly and",
    "start": "1076600",
    "end": "1084070"
  },
  {
    "text": "with such diversity and I think it applies very well to these sorts of innovative fast-moving architectures",
    "start": "1084070",
    "end": "1091360"
  },
  {
    "text": "that if you can take this same kind of approach to innovation where you can do lots of incremental innovation lots of",
    "start": "1091360",
    "end": "1099060"
  },
  {
    "text": "experiments via a more loosely coupled system rather than a big tight",
    "start": "1099060",
    "end": "1104410"
  },
  {
    "text": "monolithic system you're just going to be able to innovate and experiment faster and so small architect you know",
    "start": "1104410",
    "end": "1112360"
  },
  {
    "text": "architectures of small components that are loosely joined through things like api's or events or or data flows are",
    "start": "1112360",
    "end": "1120190"
  },
  {
    "text": "going to make it easier to grow like the web compared to large monolithic",
    "start": "1120190",
    "end": "1125590"
  },
  {
    "text": "applications and the big teams that's required to own and drive those so",
    "start": "1125590",
    "end": "1130810"
  },
  {
    "text": "that's a little bit about three architectural patterns that we that we believe you know can help drive innovation and now Deepak is going to",
    "start": "1130810",
    "end": "1137410"
  },
  {
    "text": "talk with you about how how to operate these sorts of systems Thanks",
    "start": "1137410",
    "end": "1147200"
  },
  {
    "text": "and thank you everybody for being here I know it's Thursday after a few pub crawls lots of keynotes there's still",
    "start": "1147200",
    "end": "1153860"
  },
  {
    "text": "one more day to go so David talked a lot about how architectural patterns are",
    "start": "1153860",
    "end": "1160460"
  },
  {
    "text": "changing as we deploy micro services and more loosely coupled architectures in McCallum one of the lessons we've",
    "start": "1160460",
    "end": "1165830"
  },
  {
    "text": "learned at Amazon and perhaps even more so with through our customers as David opted these practices and I started",
    "start": "1165830",
    "end": "1172250"
  },
  {
    "text": "deploying them into AWS is how do we operate our infrastructure how do we operate help help them operate their",
    "start": "1172250",
    "end": "1179330"
  },
  {
    "text": "services with these patterns and I'm going to try and go through some of those lessons and some of the learnings",
    "start": "1179330",
    "end": "1185540"
  },
  {
    "text": "over the last decade or two of running infrastructure as loosely you know loosely coupled services not just in AWS",
    "start": "1185540",
    "end": "1193130"
  },
  {
    "text": "but in general so one of the first questions you see in fact every time",
    "start": "1193130",
    "end": "1198500"
  },
  {
    "start": "1194000",
    "end": "1252000"
  },
  {
    "text": "micro services are discussed in a place like haka news I'm pretty much the top post on that thread will be micro",
    "start": "1198500",
    "end": "1205280"
  },
  {
    "text": "services are too complicated there's so many things to manage in a sense they're true but it also has to do with how you",
    "start": "1205280",
    "end": "1211640"
  },
  {
    "text": "think about the organization and how you operate your services if you have lots of small teams where each team has",
    "start": "1211640",
    "end": "1217340"
  },
  {
    "text": "discrete and distinct ownership of a small piece of that puzzle they can operate that they can build it they can",
    "start": "1217340",
    "end": "1223220"
  },
  {
    "text": "run it and that's the part that they are responsible for but what you also need as you do that it's starting to build",
    "start": "1223220",
    "end": "1229870"
  },
  {
    "text": "monitoring tools observability system management tools that help you get and Corral the greater sense of the world",
    "start": "1229870",
    "end": "1236540"
  },
  {
    "text": "and a lot of what we've learned over the last few years and what you've seen us launch and add is how do we live in a",
    "start": "1236540",
    "end": "1243110"
  },
  {
    "text": "world where people are moving much faster where there are lots more teams and there's lots more systems lots more",
    "start": "1243110",
    "end": "1248390"
  },
  {
    "text": "small services as part of a larger system one thing that's evolved quite a",
    "start": "1248390",
    "end": "1254330"
  },
  {
    "start": "1252000",
    "end": "1406000"
  },
  {
    "text": "bit over the last few years is how we think about shared responsibility if you've been at reinvent before if you've",
    "start": "1254330",
    "end": "1261830"
  },
  {
    "text": "been anywhere near AWS people you've heard us talk about shared responsibility and the shared responsibility model what it really",
    "start": "1261830",
    "end": "1268790"
  },
  {
    "text": "means is if you could draw a simple box there's a line somewhere in that box that says the part above that line is",
    "start": "1268790",
    "end": "1275690"
  },
  {
    "text": "the customers responsibility and the part below that line is aw asses responsibility the question",
    "start": "1275690",
    "end": "1281960"
  },
  {
    "text": "then becomes where is this line drawn we give you lots of ways to draw that line let's talk about databases you could run",
    "start": "1281960",
    "end": "1289880"
  },
  {
    "text": "your own database on ec2 in fact a lot of customers do so if you do that you",
    "start": "1289880",
    "end": "1295220"
  },
  {
    "text": "are responsible for running that database you're responsible for patching that operating system you're responsible for figuring out upgrades how do you",
    "start": "1295220",
    "end": "1301790"
  },
  {
    "text": "make it available how do you scale it we give you tools like auto scaling that help you do that they'll give you backup",
    "start": "1301790",
    "end": "1308360"
  },
  {
    "text": "tools they give you three availability zones in many men in most of our regions but the responsibility and",
    "start": "1308360",
    "end": "1313880"
  },
  {
    "text": "decision-making is still yours you can get one step further you could use something like RDS RDS takes care of the",
    "start": "1313880",
    "end": "1321140"
  },
  {
    "text": "database management part of it but you're still running your application yourself there are still some reasoning around how that database runs you have",
    "start": "1321140",
    "end": "1327559"
  },
  {
    "text": "to choose whether you want to run high multi AC RDS or single ac RDS do the",
    "start": "1327559",
    "end": "1333230"
  },
  {
    "text": "decisions you need to make or you could go all the way over to this side but you're running something like Aurora",
    "start": "1333230",
    "end": "1339260"
  },
  {
    "text": "where it's my sequel or Postgres compliant but the storage infrastructure the availability of the storage",
    "start": "1339260",
    "end": "1344660"
  },
  {
    "text": "infrastructure you don't have to think about okay do I now need to run a multi AZ database it's built-in for you or you",
    "start": "1344660",
    "end": "1351890"
  },
  {
    "text": "could go the extreme sense and run something like dynamo DB where you have to make a decision on whether you want",
    "start": "1351890",
    "end": "1357140"
  },
  {
    "text": "to move from a relational system to a key value store and especially some of the features at the announcement dynamo",
    "start": "1357140",
    "end": "1363170"
  },
  {
    "text": "DB at this reinvent the operability of that system that line of responsibility",
    "start": "1363170",
    "end": "1368840"
  },
  {
    "text": "has gone to a place where you are responsible for less and less in AWS responsible for more and more our goal",
    "start": "1368840",
    "end": "1375380"
  },
  {
    "text": "in the end is to give you those choices but continue to deliver features and capabilities where the responsibility",
    "start": "1375380",
    "end": "1381800"
  },
  {
    "text": "part of that box heads more and more into the AWS side so that all of you can focus more on building the business",
    "start": "1381800",
    "end": "1389059"
  },
  {
    "text": "logic and the business value for your companies there are you know you I've heard people say people I know that you",
    "start": "1389059",
    "end": "1395059"
  },
  {
    "text": "know anytime that in a company that they're spending time crawling infrastructure and building scaffolding it's time that they're not generating",
    "start": "1395059",
    "end": "1400460"
  },
  {
    "text": "value for the company and our goal is to try and help you make that less and less",
    "start": "1400460",
    "end": "1406240"
  },
  {
    "text": "there's been one interesting trends many many many years ago there was a service",
    "start": "1406720",
    "end": "1412100"
  },
  {
    "text": "that was launched called ec2 what is he to did and one of the big changes that it introduced was it took",
    "start": "1412100",
    "end": "1417769"
  },
  {
    "text": "the concept of a server and put an API around it you could certainly start it up when you wanted shut it down when you",
    "start": "1417769",
    "end": "1424999"
  },
  {
    "text": "wanted it to use analogy which as someone from India has always been weird",
    "start": "1424999",
    "end": "1430070"
  },
  {
    "text": "you took your service from being pets to being cattle you don't like killing cattle in India just don't give the",
    "start": "1430070",
    "end": "1436369"
  },
  {
    "text": "knowledge it is anyway but I'll use it because I'm here CS ever been used to be a pet you",
    "start": "1436369",
    "end": "1442309"
  },
  {
    "text": "nurture it you've watered it at night you may have made offerings to it especially with other really expensive big iron server but now you could shut",
    "start": "1442309",
    "end": "1449659"
  },
  {
    "text": "it down when you wanted in fact when ec2 got launched before I was at Amazon one of the first things I did was launch",
    "start": "1449659",
    "end": "1455269"
  },
  {
    "text": "about 20 instances which is exactly the instance limited ec2 gave gives you by default and shut it down about four",
    "start": "1455269",
    "end": "1461239"
  },
  {
    "text": "hours later was awesome but something happened we built infrastructure around",
    "start": "1461239",
    "end": "1468739"
  },
  {
    "text": "this to make it easier to operate all of the infrastructure you added things like auto scaling where suddenly adding the",
    "start": "1468739",
    "end": "1474259"
  },
  {
    "text": "second server became very easy to your server was still I was still careful there you know when you've had no work",
    "start": "1474259",
    "end": "1480590"
  },
  {
    "text": "to do it went away then people started running more sophisticated applications on those on those servers you started",
    "start": "1480590",
    "end": "1486830"
  },
  {
    "text": "adding systems like zookeeper or a state management system because now what you wanted to do was I have this pool of",
    "start": "1486830",
    "end": "1493009"
  },
  {
    "text": "resources I want my jobs to land somewhere in that pool of resources but you needed something to manage the pool of",
    "start": "1493009",
    "end": "1498950"
  },
  {
    "text": "resources and have control over it along the way containers came up container orchestration is awesome I spend all day",
    "start": "1498950",
    "end": "1505460"
  },
  {
    "text": "thinking about it but they also made the cluster a thing the cluster suddenly",
    "start": "1505460",
    "end": "1511580"
  },
  {
    "text": "became your pet if you look at how most container orchestration systems work every cluster has a data store every",
    "start": "1511580",
    "end": "1518149"
  },
  {
    "text": "cluster has a leader node which you know how to think about should this node be running in three AZ's how should i",
    "start": "1518149",
    "end": "1523820"
  },
  {
    "text": "manage my datastore should I back it up how do I back it up what happens if one on AC goes down and there's a write",
    "start": "1523820",
    "end": "1529549"
  },
  {
    "text": "going on at that time those are things that over time cloud providers like us",
    "start": "1529549",
    "end": "1534649"
  },
  {
    "text": "provide managed services like eks that take care of that part for you but you still have to reason about the instances",
    "start": "1534649",
    "end": "1540710"
  },
  {
    "text": "you are selecting what applications run in which cluster where they should multi-tenant it at all what's the",
    "start": "1540710",
    "end": "1545840"
  },
  {
    "text": "operational model it's almost like now people are praying to the cluster giving it food giving it",
    "start": "1545840",
    "end": "1551380"
  },
  {
    "text": "what I'm nurturing it it's fine it works really well but I think it breaks some",
    "start": "1551380",
    "end": "1556900"
  },
  {
    "text": "of the operational winds that we got when we went from servers getting api's and the question is how can we get away",
    "start": "1556900",
    "end": "1563260"
  },
  {
    "text": "from the cluster becoming something that comes in the way you've already heard David talk about servers and that is one",
    "start": "1563260",
    "end": "1569500"
  },
  {
    "start": "1566000",
    "end": "1606000"
  },
  {
    "text": "of the big big things that we've learned is especially even within Amazon is the",
    "start": "1569500",
    "end": "1574930"
  },
  {
    "text": "less infrastructure your provision the less infrastructure you have to reason about the more scaling decisions are",
    "start": "1574930",
    "end": "1581230"
  },
  {
    "text": "made on your behalf the better it is but server lists you also pay for value you're paying for",
    "start": "1581230",
    "end": "1587170"
  },
  {
    "text": "some unit of consumption whether it's a function whether it's a task in the case of dynamodb but the data in",
    "start": "1587170",
    "end": "1593020"
  },
  {
    "text": "your table the more automated it gets in the less you reason about the capacity part of it it's awesome and then availability and security",
    "start": "1593020",
    "end": "1599560"
  },
  {
    "text": "should be part of that system those are not things that you bolt on or have to think about you should just get them by",
    "start": "1599560",
    "end": "1605530"
  },
  {
    "text": "default so add AWS and quite honestly you're missing a bunch of things on this",
    "start": "1605530",
    "end": "1611650"
  },
  {
    "start": "1606000",
    "end": "1621000"
  },
  {
    "text": "it spans many many different categories of services everything from integration",
    "start": "1611650",
    "end": "1616810"
  },
  {
    "text": "from data stores to compute I'm going to talk about compute today so on the",
    "start": "1616810",
    "end": "1622360"
  },
  {
    "start": "1621000",
    "end": "1732000"
  },
  {
    "text": "compute side we have two server lists or offerings the first one you were a little bit about that is lambda for the",
    "start": "1622360",
    "end": "1628210"
  },
  {
    "text": "one person in this room who may not know what lambda is you define a unit of code",
    "start": "1628210",
    "end": "1633670"
  },
  {
    "text": "as a function you give it a trigger when the trigger hits something happens as someone who has built services on top of",
    "start": "1633670",
    "end": "1640390"
  },
  {
    "text": "lambda the fact that you can add some new piece of logic you have a new routing service that you want to add or",
    "start": "1640390",
    "end": "1646900"
  },
  {
    "text": "there's an API that you want to add that takes care of a certain action the fact that you can quickly do it in a lambda",
    "start": "1646900",
    "end": "1652150"
  },
  {
    "text": "function deploy it define the trigger that's going to make it active and get it running without having to worry about",
    "start": "1652150",
    "end": "1657730"
  },
  {
    "text": "provisioning without having to worry about what the operational model should be it's pretty liberating and you've",
    "start": "1657730",
    "end": "1664360"
  },
  {
    "text": "seen all the capabilities that have been added to lambda both by AWS and our customer base over the last several",
    "start": "1664360",
    "end": "1670630"
  },
  {
    "text": "years four years since it got announced there are another class of applications",
    "start": "1670630",
    "end": "1675640"
  },
  {
    "text": "where you may want to have a little more control and say over how networks architected services communicate with each other",
    "start": "1675640",
    "end": "1681280"
  },
  {
    "text": "what your packaging should look like in their unit of unit of work goes from",
    "start": "1681280",
    "end": "1687130"
  },
  {
    "text": "being a piece of code to potentially being a set of container images that you've defined and stored in a registry",
    "start": "1687130",
    "end": "1692230"
  },
  {
    "text": "you can define some networking but you don't want to think about how you take",
    "start": "1692230",
    "end": "1697600"
  },
  {
    "text": "that containerized bundle and figure out where and some cluster you're going to launch it and start thinking about what",
    "start": "1697600",
    "end": "1703420"
  },
  {
    "text": "the cluster should look like in an ideal world you should be able to define that and just deploy it and that's what what",
    "start": "1703420",
    "end": "1710530"
  },
  {
    "text": "what AWS Fargate is and it's typically used for long-running services but also",
    "start": "1710530",
    "end": "1715570"
  },
  {
    "text": "for cron jobs it helps you bring existing code over you don't need to completely rethink your architecture and",
    "start": "1715570",
    "end": "1720790"
  },
  {
    "text": "program model but the big part is it takes that pet which was a cluster it",
    "start": "1720790",
    "end": "1726280"
  },
  {
    "text": "doesn't make it cattle it actually just makes it disappear or other than just being an object in on your dashboard and",
    "start": "1726280",
    "end": "1733050"
  },
  {
    "text": "essentially what you now have is a complete it is a recap of what I talked about with the databases but in the",
    "start": "1733050",
    "end": "1738940"
  },
  {
    "text": "compute space you have a spectrum of where that line of shared responsibility comes you can start off with ec2 where",
    "start": "1738940",
    "end": "1746710"
  },
  {
    "text": "you get to build what you want to build you even get bare metal ec2 instances now if we wanted to slap on a hypervisor",
    "start": "1746710",
    "end": "1752290"
  },
  {
    "text": "you could do that all the way up to lambda where all your reasoning about is if is your application code and I think",
    "start": "1752290",
    "end": "1758680"
  },
  {
    "text": "as our customers have found as many of you have found that's become very empowering",
    "start": "1758680",
    "end": "1763720"
  },
  {
    "text": "now cool we've taken a lot of the operational responsibilities of running infrastructure away but what happens",
    "start": "1763720",
    "end": "1770740"
  },
  {
    "text": "next you still have to develop code that becomes an interesting roadblock so one of the areas we focused over the last",
    "start": "1770740",
    "end": "1776590"
  },
  {
    "text": "few years is to make development much much much easier for lambda lambda today is serving trillions of requests every",
    "start": "1776590",
    "end": "1782560"
  },
  {
    "text": "month for you know hundreds of thousands of active developers so as more and more",
    "start": "1782560",
    "end": "1788050"
  },
  {
    "text": "people adopted you go from the early adopters they were happy tinkering around figuring out what to do to more people who just want to get things done",
    "start": "1788050",
    "end": "1794170"
  },
  {
    "text": "and you want to reduce the barrier for them so some of the new things that",
    "start": "1794170",
    "end": "1799720"
  },
  {
    "text": "we've done and I'll talk about this one today and you if you were in Verna's keynote you heard us talk about it is lambda layers now functions can share",
    "start": "1799720",
    "end": "1807970"
  },
  {
    "start": "1801000",
    "end": "1843000"
  },
  {
    "text": "code you can reference the piece of code another function you don't have to write something new completely it's all in",
    "start": "1807970",
    "end": "1813799"
  },
  {
    "text": "some way that's similar to how layers in a container image are stored and you can reference them and build on top of it",
    "start": "1813799",
    "end": "1819169"
  },
  {
    "text": "it's a promote separation of responsibilities if there's a core library and it's kind of that model that",
    "start": "1819169",
    "end": "1824899"
  },
  {
    "text": "somebody needs to own one person can focus on that and then developers can then focus on the application logic once",
    "start": "1824899",
    "end": "1831590"
  },
  {
    "text": "again your goal is to make it easier to develop to deliver business value and it",
    "start": "1831590",
    "end": "1837739"
  },
  {
    "text": "has built-in support for sharing with the entire ecosystem so again those are things that come by default and not things that you have to reason through",
    "start": "1837739",
    "end": "1845080"
  },
  {
    "start": "1843000",
    "end": "1903000"
  },
  {
    "text": "the other area where we have tried to make it easier for people to use lambda",
    "start": "1845080",
    "end": "1850879"
  },
  {
    "text": "in high school systems and building really complex applications is custom runtimes who here is happy that we",
    "start": "1850879",
    "end": "1857029"
  },
  {
    "text": "support Ruby now enough people thank you but the way we did it was not adding",
    "start": "1857029",
    "end": "1864019"
  },
  {
    "text": "Ruby support or adding Russ support is to create a custom runtime environment",
    "start": "1864019",
    "end": "1869119"
  },
  {
    "text": "the the adding Ruby support was just a manifestation of the runtime work that we did but it also allows you to bring",
    "start": "1869119",
    "end": "1875269"
  },
  {
    "text": "things like Erlang which partners can develop other people can develop so you essentially now get run arbitrary code",
    "start": "1875269",
    "end": "1881059"
  },
  {
    "text": "on lambda and these custom runtimes are distributed as layers so the layer and runtime parts work in harmony together",
    "start": "1881059",
    "end": "1888580"
  },
  {
    "text": "so one of the beauties of lambda is that it completely allows you to focus on",
    "start": "1888580",
    "end": "1894019"
  },
  {
    "text": "tome but you do have to think about what the architecture would look like it is a different way of programming environment",
    "start": "1894019",
    "end": "1899210"
  },
  {
    "text": "but it takes a big operational responsibility and makes it ours with",
    "start": "1899210",
    "end": "1904220"
  },
  {
    "start": "1903000",
    "end": "1968000"
  },
  {
    "text": "Fargate one of the fun parts is you can't bring your existing codes you may have been running an application in a container Orchestrator you can keep do",
    "start": "1904220",
    "end": "1910820"
  },
  {
    "text": "it you can just take those images and bring them in you can reason about networks very much the way you have been",
    "start": "1910820",
    "end": "1916549"
  },
  {
    "text": "used to except some of the complexity of managing how you work within the network",
    "start": "1916549",
    "end": "1921889"
  },
  {
    "text": "gets taken away and what did what we've tried to do over the last few years is",
    "start": "1921889",
    "end": "1927759"
  },
  {
    "text": "make containers a core primitive much the way people think about VMs that means adding VPC as a native networking",
    "start": "1927759",
    "end": "1935960"
  },
  {
    "text": "infrastructure for containers if you get an elastic network interface you get flow logs you get all the benefits that a VPC would give you metering at the",
    "start": "1935960",
    "end": "1943970"
  },
  {
    "text": "container level when you're running a container orchestration system you're still paying for the ec2 side of it and and even though",
    "start": "1943970",
    "end": "1950419"
  },
  {
    "text": "we have added cost allocation but you're not metering at the container level with Fargate that's where you think about it",
    "start": "1950419",
    "end": "1955850"
  },
  {
    "text": "and that's how you get built and then you build in things like service discovery you build in things like I'll",
    "start": "1955850",
    "end": "1961250"
  },
  {
    "text": "talk about service machine a bit those all get become part of this ecosystem that this containerized bundle lives in",
    "start": "1961250",
    "end": "1968169"
  },
  {
    "start": "1968000",
    "end": "2013000"
  },
  {
    "text": "there's a few other things that we've launched in case you haven't noticed we launched secrets management very",
    "start": "1968169",
    "end": "1974240"
  },
  {
    "text": "recently be actually planning to do a second Rev of secret management support we once supported SSM we do will support",
    "start": "1974240",
    "end": "1980840"
  },
  {
    "text": "secrets manager we have dougie in cost allocation for those who want to do",
    "start": "1980840",
    "end": "1986029"
  },
  {
    "text": "chargebacks is work in a company there's a bunch of other features across the entire container ecosystem that we've",
    "start": "1986029",
    "end": "1992779"
  },
  {
    "text": "added I think the big one for me is the deployment part of it and integration",
    "start": "1992779",
    "end": "1998059"
  },
  {
    "text": "into the cdk for those of you don't know what the cdk is Ken's going to talk a lot more about it but really what we are",
    "start": "1998059",
    "end": "2005230"
  },
  {
    "text": "working towards is making that operational model much more developer centric than having to pour all infrastructure and think about it in",
    "start": "2005230",
    "end": "2011500"
  },
  {
    "text": "boilerplate sub Jason or or Yama so you",
    "start": "2011500",
    "end": "2017289"
  },
  {
    "text": "know we've talked about a bunch of features that we are planning to launch I already talked about secrets management are we going to put private",
    "start": "2017289",
    "end": "2023740"
  },
  {
    "text": "link in everything the goal again is make the container a fundamental building block that you can then build on but because it's integrated with",
    "start": "2023740",
    "end": "2030659"
  },
  {
    "text": "orchestration the overall shared responsibility line still stays mostly",
    "start": "2030659",
    "end": "2035950"
  },
  {
    "text": "in our hands so one of the challenges",
    "start": "2035950",
    "end": "2042309"
  },
  {
    "start": "2040000",
    "end": "2070000"
  },
  {
    "text": "going back to the one of the questions you asked is okay there's hundreds of services running we have customers who are running",
    "start": "2042309",
    "end": "2048099"
  },
  {
    "text": "hundreds of services on Fargate customers like tadhana who run many are many many other services with foggy how",
    "start": "2048099",
    "end": "2053470"
  },
  {
    "text": "do you monitor them how do you get control over them how do you decide which service can talk to what in which",
    "start": "2053470",
    "end": "2058720"
  },
  {
    "text": "service can access what how do I make my deployments safer when there's this big system sure I've done everything to make",
    "start": "2058720",
    "end": "2064810"
  },
  {
    "text": "sure my service deploys safely but there could be some impact somewhere else how do I make sure that that's safe",
    "start": "2064810",
    "end": "2071520"
  },
  {
    "start": "2070000",
    "end": "2105000"
  },
  {
    "text": "historically the way we did it was when you had fewer services that you built a client library or some kind of code in",
    "start": "2071520",
    "end": "2078820"
  },
  {
    "text": "the application your that library took care of figuring out what you allowed to talk to your code",
    "start": "2078820",
    "end": "2085510"
  },
  {
    "text": "had to understand that library but it also meant well you pretty much had to stick to a single language across the",
    "start": "2085510",
    "end": "2090580"
  },
  {
    "text": "entire infrastructure that's fine when you have a few services that find when you have a few teams but when you have a",
    "start": "2090580",
    "end": "2097000"
  },
  {
    "text": "large system we allowing people to experiment allowing them to run allowing them to write in whatever language they",
    "start": "2097000",
    "end": "2102850"
  },
  {
    "text": "want to do that become the challenge so one of the things that became happened",
    "start": "2102850",
    "end": "2108310"
  },
  {
    "start": "2105000",
    "end": "2150000"
  },
  {
    "text": "in recent times was decoupling of this operation logic and operational logic and SDKs the way it's implemented is you",
    "start": "2108310",
    "end": "2118180"
  },
  {
    "text": "put a client-side proxy next year code typically as a sidecar in container land as a sidecar container and then your",
    "start": "2118180",
    "end": "2125710"
  },
  {
    "text": "application your little service just talks to that proxy and that proxy is responsible communicating with",
    "start": "2125710",
    "end": "2131080"
  },
  {
    "text": "everything else in your infrastructure again decoupling makes life easy in this",
    "start": "2131080",
    "end": "2136330"
  },
  {
    "text": "world this proxy also gives you visibility because it's collecting metrics and with proxies like Envoy",
    "start": "2136330",
    "end": "2142180"
  },
  {
    "text": "around you've built in a lot of capabilities to give you that keep that to give you the control and visibility",
    "start": "2142180",
    "end": "2147220"
  },
  {
    "text": "into your entire infrastructure there's still one challenge how do you manage the hundreds of proxies you're now",
    "start": "2147220",
    "end": "2152380"
  },
  {
    "start": "2150000",
    "end": "2252000"
  },
  {
    "text": "running how do you decide how they get configured over time and how do you collect data from them so for us there's",
    "start": "2152380",
    "end": "2158860"
  },
  {
    "text": "many systems out there over the last year or two more and more people have built control planes to manage this mesh",
    "start": "2158860",
    "end": "2164290"
  },
  {
    "text": "of proxies for us it's at mesh which was launched yesterday and in preview and a",
    "start": "2164290",
    "end": "2169900"
  },
  {
    "text": "debris SAP mesh is essentially a control plane for Envoy we're on was the data plane it allows you to define traffic",
    "start": "2169900",
    "end": "2175990"
  },
  {
    "text": "rules it allows you to figure out how your traffic's being shaped over time you'll add end-to-end authentication and",
    "start": "2175990",
    "end": "2181330"
  },
  {
    "text": "the ability to even configure things like Al B's and API gateways but in the",
    "start": "2181330",
    "end": "2186550"
  },
  {
    "text": "end it's a service mesh for all your infrastructure on AWS whether it's running in a container whether it's running on ec2 whether it's running on",
    "start": "2186550",
    "end": "2193870"
  },
  {
    "text": "lambda and being fronted by a load balancer or an ATI gateway so but one of",
    "start": "2193870",
    "end": "2199510"
  },
  {
    "text": "the things that we thought about as we did this was the typical model of developing and delivering this was in a",
    "start": "2199510",
    "end": "2205150"
  },
  {
    "text": "cluster but when in infrastructure spans many many services having a cluster",
    "start": "2205150",
    "end": "2210280"
  },
  {
    "text": "bootstrapping again makes you think about how do you run this mesh management within the concept",
    "start": "2210280",
    "end": "2215980"
  },
  {
    "text": "context of a cluster how do you control it how do you scale it so over time but if and this is something that one I",
    "start": "2215980",
    "end": "2222070"
  },
  {
    "text": "talked about a lot today is just pull it back enabled a centralized control plane that can reason upon reason about",
    "start": "2222070",
    "end": "2228070"
  },
  {
    "text": "everything that happens we focus on managing the availability of that system we focus on taking control of how we",
    "start": "2228070",
    "end": "2234820"
  },
  {
    "text": "secure it how we evolve it what kind of features it supports so hopefully many",
    "start": "2234820",
    "end": "2240250"
  },
  {
    "text": "of you is going to start using it playing with the preview it's up on github and allow you to Corral and get",
    "start": "2240250",
    "end": "2246490"
  },
  {
    "text": "visibility into all this all these little services that you have running around all your applications the other",
    "start": "2246490",
    "end": "2253150"
  },
  {
    "start": "2252000",
    "end": "2324000"
  },
  {
    "text": "critical part about is security we want to get fast we want to be efficient but",
    "start": "2253150",
    "end": "2259270"
  },
  {
    "text": "we do not want to compromise isolation so perhaps my you know it's it's something that most customers will never",
    "start": "2259270",
    "end": "2266260"
  },
  {
    "text": "see but in many ways it's one of the favorite announcements that I've had at this Raymond is firecracker for those of",
    "start": "2266260",
    "end": "2272020"
  },
  {
    "text": "you who didn't see the announcement firecracker is a little virtual machine monitor the goal of firecracker is very",
    "start": "2272020",
    "end": "2279190"
  },
  {
    "text": "simple how do I run lots and lots of little containers and little functions securely without compromising on how can",
    "start": "2279190",
    "end": "2286990"
  },
  {
    "text": "you run them fast and efficiently without compromising on security and what it allows us to do is scale lambda",
    "start": "2286990",
    "end": "2292540"
  },
  {
    "text": "and Fargate and give you the kind of performance that you want again the in the shared responsibility model you'll",
    "start": "2292540",
    "end": "2299110"
  },
  {
    "text": "see us do more and more of these things to make sure that you can be comfortable there as you adopt these new paradigms everything is working really well so",
    "start": "2299110",
    "end": "2306520"
  },
  {
    "text": "with that comes the next stage you've figured out the architecture you figure out an operational model but now you're",
    "start": "2306520",
    "end": "2313030"
  },
  {
    "text": "actually have to build the code so to talk about automating all the things connects now",
    "start": "2313030",
    "end": "2319080"
  },
  {
    "text": "all right so David walked us through some of the architectural patterns that",
    "start": "2324760",
    "end": "2329840"
  },
  {
    "text": "we see in modern application development Deepak took us through some of the operational",
    "start": "2329840",
    "end": "2335030"
  },
  {
    "text": "models I'm going to walk us through how we actually develop and build software for for this new micro-services server",
    "start": "2335030",
    "end": "2341420"
  },
  {
    "text": "list world I'm gonna try to answer the question of now that you have this new distributed architecture of all these",
    "start": "2341420",
    "end": "2347300"
  },
  {
    "start": "2342000",
    "end": "2355000"
  },
  {
    "text": "different pieces of functions and micro services and managed services how do you actually develop and deploy that to",
    "start": "2347300",
    "end": "2354170"
  },
  {
    "text": "production for questions I often hear from customers I'm going to walk through",
    "start": "2354170",
    "end": "2359330"
  },
  {
    "start": "2355000",
    "end": "2416000"
  },
  {
    "text": "each of these four questions first is what's the deployment process look like how do you release software in this new",
    "start": "2359330",
    "end": "2366410"
  },
  {
    "text": "world and how does Amazon do this I managed the process internal to Amazon for how we deploy software so I'm going",
    "start": "2366410",
    "end": "2372710"
  },
  {
    "text": "to share some secrets about how we do this a second how do you now monitor in",
    "start": "2372710",
    "end": "2378170"
  },
  {
    "text": "isolate problems in your architecture how do you do bugs at a system level if",
    "start": "2378170",
    "end": "2384080"
  },
  {
    "text": "there are problems in terms of latency or performance in some component of your architecture how do you find that but",
    "start": "2384080",
    "end": "2391490"
  },
  {
    "text": "the third question I'm gonna answer is not just at a systems level but at a code level how do you edit in debug code",
    "start": "2391490",
    "end": "2397460"
  },
  {
    "text": "in this new serverless world do the same tools work are there new tools what's the edit compile test loop look",
    "start": "2397460",
    "end": "2404300"
  },
  {
    "text": "like and then finally I'm going to talk about how you provision resources and how do you how you model your",
    "start": "2404300",
    "end": "2409820"
  },
  {
    "text": "application and how do you make sure that you're following the best practices as you model your application for this",
    "start": "2409820",
    "end": "2415100"
  },
  {
    "text": "new world all right let's start with the release process David spent some time",
    "start": "2415100",
    "end": "2420920"
  },
  {
    "start": "2416000",
    "end": "2514000"
  },
  {
    "text": "talking about monolithic architectures and in monolithic organizational structures this is what the process",
    "start": "2420920",
    "end": "2428060"
  },
  {
    "text": "looked like at Amazon 15 20 years ago we basically had a bunch of developers a",
    "start": "2428060",
    "end": "2433600"
  },
  {
    "text": "bunch of developers working on a monolithic architecture and then they would throw it over the fence to a",
    "start": "2433600",
    "end": "2439610"
  },
  {
    "text": "manual QA team a bunch of release engineers and they would Shepherd that out to production and hand it off to",
    "start": "2439610",
    "end": "2445430"
  },
  {
    "text": "operations it was a very cumbersome process it was at most we could do one",
    "start": "2445430",
    "end": "2451130"
  },
  {
    "text": "deployment a week because it was very expensive to keyway the entire thing to push this out to",
    "start": "2451130",
    "end": "2456259"
  },
  {
    "text": "production it was very inefficient and things started to get better as we decompose for agility things started to get better",
    "start": "2456259",
    "end": "2462650"
  },
  {
    "text": "as we broke apart the monolithic organizational structure and started organizing into two pits of teams got a",
    "start": "2462650",
    "end": "2468769"
  },
  {
    "text": "little bit better things got a little bit better when we decompose the monolithic architecture into there we go",
    "start": "2468769",
    "end": "2479930"
  },
  {
    "text": "into a bunch of micro services but we still have this problem how do you",
    "start": "2479930",
    "end": "2485720"
  },
  {
    "text": "actually release software now that you have all these two pits of teams owning their own primitive services how do you",
    "start": "2485720",
    "end": "2492769"
  },
  {
    "text": "actually push this out to production how do you manage that release process we couldn't have thousands of teams trying to do this with a centralized release",
    "start": "2492769",
    "end": "2499220"
  },
  {
    "text": "train model so what we realized we needed to do is we needed to give these development teams their own tools so",
    "start": "2499220",
    "end": "2506660"
  },
  {
    "text": "that they could release their own software so that they could own their own release process and they could Shepherd these releases out to",
    "start": "2506660",
    "end": "2512720"
  },
  {
    "text": "production themselves and this is essentially how my team was born at Amazon over 15 years ago this is the",
    "start": "2512720",
    "end": "2519440"
  },
  {
    "text": "Builder tools team at Amazon and he likes to refer to builders at Amazon this was the Builder tools team and we",
    "start": "2519440",
    "end": "2526700"
  },
  {
    "text": "were established to give developers builders tools that would allow them to manage their own release process at",
    "start": "2526700",
    "end": "2535009"
  },
  {
    "text": "first we were doing a couple of things we tried to automate the builds see I was very popular at the time so you know",
    "start": "2535009",
    "end": "2541130"
  },
  {
    "text": "trying to automate builds connecting up the build system with the source control system at the other end of the spectrum",
    "start": "2541130",
    "end": "2546559"
  },
  {
    "text": "we were trying to also give developers their own deployment tools so that they could deploy to production without",
    "start": "2546559",
    "end": "2551749"
  },
  {
    "text": "impact to customers so that was great but we realized we still had a bunch of",
    "start": "2551749",
    "end": "2556759"
  },
  {
    "text": "stuff in between we sawed a bunch of manual processes that we would take these build artifacts move them across",
    "start": "2556759",
    "end": "2562849"
  },
  {
    "text": "the different pre-production environments do a bunch of manual testing the deployment process was also",
    "start": "2562849",
    "end": "2568460"
  },
  {
    "text": "fairly complicated in manual even though we had these deployment tools because you had to deploy across different AZ's",
    "start": "2568460",
    "end": "2573559"
  },
  {
    "text": "and different regions and all of this was manual so in traditional Amazon",
    "start": "2573559",
    "end": "2578630"
  },
  {
    "text": "fashion we looked at this and said that's the production line that needs to be automated so we set out to automate",
    "start": "2578630",
    "end": "2584059"
  },
  {
    "text": "the entire process end to end from source code check in to the final deployment and we started building a",
    "start": "2584059",
    "end": "2589850"
  },
  {
    "text": "tool called pipelines internally this is over a decade ago and pipelines was this this tool that allowed us to go from",
    "start": "2589850",
    "end": "2596300"
  },
  {
    "text": "source code check in to having everything deploy to production completely automated a person when",
    "start": "2596300",
    "end": "2601610"
  },
  {
    "text": "wouldn't touch it or inspect anything anywhere in the pipeline and this is how",
    "start": "2601610",
    "end": "2606619"
  },
  {
    "text": "we started getting into continuous deployment at Amazon now at first people",
    "start": "2606619",
    "end": "2611720"
  },
  {
    "text": "were a little bit nervous it was kind of crazy that you would have this this this system that would deploy to production and no one would check anything no one",
    "start": "2611720",
    "end": "2618980"
  },
  {
    "text": "would test anything it would just flow out to production but when we started to realize is that anything that a person",
    "start": "2618980",
    "end": "2625280"
  },
  {
    "text": "could do anything that a person could check or manually manually inspect or manually test anything they could do",
    "start": "2625280",
    "end": "2631580"
  },
  {
    "text": "could be put into automation and if we did that we could do the same automation in the same testing every single time no",
    "start": "2631580",
    "end": "2638660"
  },
  {
    "text": "matter how small the change was and that anything that someone could manually verify should be put into a script or",
    "start": "2638660",
    "end": "2644600"
  },
  {
    "text": "into an automated test so we started building up a bunch of you know tests integration tests a bunch of API smoke",
    "start": "2644600",
    "end": "2651350"
  },
  {
    "text": "tests every team started having their battery of tests that would run against their pipelines every single time then",
    "start": "2651350",
    "end": "2657920"
  },
  {
    "text": "we started getting into more sophisticated types of testing already doing automated load testing started doing synthetic monitoring not only",
    "start": "2657920",
    "end": "2664640"
  },
  {
    "text": "against production but synthetic monterrey against pre-production I started doing security scans along the",
    "start": "2664640",
    "end": "2670910"
  },
  {
    "text": "way we started to realize that there are actually good patterns and good practices for how to set up a pipeline",
    "start": "2670910",
    "end": "2676040"
  },
  {
    "text": "and we wanted to make sure that the developers were following the best practices so we did a couple things the",
    "start": "2676040",
    "end": "2682010"
  },
  {
    "text": "first thing is we set up templates for how to set up a pipeline gave the developers at Amazon templates for what",
    "start": "2682010",
    "end": "2688490"
  },
  {
    "text": "a best practice pipeline should look like that you know that define only the contents of that pipeline but also the",
    "start": "2688490",
    "end": "2694280"
  },
  {
    "text": "shape of it and the structure it should have it should have connections to monitoring so that you can set up an",
    "start": "2694280",
    "end": "2700490"
  },
  {
    "text": "automatic rollback you should you know develop you should follow it out to different regions in a progressive way",
    "start": "2700490",
    "end": "2706490"
  },
  {
    "text": "fan out slowly all these things were defined in these pipelines in the pipeline templates the second thing that",
    "start": "2706490",
    "end": "2713390"
  },
  {
    "text": "happened in which was pretty impactful for Amazon is that we realized that we could actually inspect these pipelines",
    "start": "2713390",
    "end": "2719300"
  },
  {
    "text": "and if we could inspect the pipelines we could determine whether or not they were following the best practices we could we",
    "start": "2719300",
    "end": "2725630"
  },
  {
    "text": "could define best practices as a policy and run that policy against these",
    "start": "2725630",
    "end": "2731030"
  },
  {
    "text": "pipelines and if the pipelines weren't following seat following the policy for that business we could block the",
    "start": "2731030",
    "end": "2736820"
  },
  {
    "text": "pipeline we could stop the deployment and this was a revelation for us that we could use this this type of technology",
    "start": "2736820",
    "end": "2743030"
  },
  {
    "text": "to ensure that Amazon developers were all following the best practices for their particular business that we could",
    "start": "2743030",
    "end": "2749120"
  },
  {
    "text": "achieve governance and compliance for all these two Pizza teams they were all had a sense of agency we could control",
    "start": "2749120",
    "end": "2754940"
  },
  {
    "text": "that and make sure they're following best practices through standardized tools so whenever I talk about this for",
    "start": "2754940",
    "end": "2764300"
  },
  {
    "start": "2760000",
    "end": "2800000"
  },
  {
    "text": "to customers they always invariably ask me how can we do the same thing does Amazon have any tools that we can use",
    "start": "2764300",
    "end": "2770210"
  },
  {
    "text": "that allow us to you know achieve the same types of processes that Amazon",
    "start": "2770210",
    "end": "2775460"
  },
  {
    "text": "follows and the good news is that a couple years ago we started externalizing many of these tools as the",
    "start": "2775460",
    "end": "2782060"
  },
  {
    "text": "a dubious developer tools we have code code commit which is private gate repositories fully encrypted we have",
    "start": "2782060",
    "end": "2789320"
  },
  {
    "text": "code build for building and testing your software we have AWS code deploy to do",
    "start": "2789320",
    "end": "2795170"
  },
  {
    "text": "the deployment and we have a two BS code pipeline to manage the entire release process when we first launched these we",
    "start": "2795170",
    "end": "2803540"
  },
  {
    "text": "were mostly focused on ec2 instances and instance based workloads and customers",
    "start": "2803540",
    "end": "2808730"
  },
  {
    "text": "started asking us how about ECS and Fargate and lambda our internal",
    "start": "2808730",
    "end": "2814070"
  },
  {
    "text": "customers started asking is the same thing because they wanted to use the same tools regardless of what compute",
    "start": "2814070",
    "end": "2819500"
  },
  {
    "text": "environment they were deploying to which made a lot of sense you know whether you're deploying to an instance or a",
    "start": "2819500",
    "end": "2825410"
  },
  {
    "text": "function or a container you shouldn't have to change your tools so we started building capabilities that would have",
    "start": "2825410",
    "end": "2832100"
  },
  {
    "text": "now enable us to use the same tools to deploy to ECS and Fargate and lambda",
    "start": "2832100",
    "end": "2837940"
  },
  {
    "text": "this year i'm happy to announce that we have added support for ECR as a source action in Ko pipeline and we've added",
    "start": "2837940",
    "end": "2844970"
  },
  {
    "text": "support for Bluegreen deployment to Fargate and ECS with Co deploy so that you can use you can use traffic shifting",
    "start": "2844970",
    "end": "2850580"
  },
  {
    "text": "or blue-green style deployments with container based services at AWS we're gonna continue to do a bunch of",
    "start": "2850580",
    "end": "2857690"
  },
  {
    "text": "cool things in this area especially focused on server lists and containers so there's a lot more to come one one",
    "start": "2857690",
    "end": "2864380"
  },
  {
    "text": "feature that I thought was super cool that launched earlier in this year that I'll call out was that we added support",
    "start": "2864380",
    "end": "2869960"
  },
  {
    "text": "for config rules for code pipeline and why this is cool is that it means that",
    "start": "2869960",
    "end": "2875690"
  },
  {
    "text": "you can set up a policy in config rules a tamiya´s config that governs the",
    "start": "2875690",
    "end": "2881060"
  },
  {
    "text": "structure and contents of your pipeline which means that you can achieve some of the same compliance and governance that",
    "start": "2881060",
    "end": "2886250"
  },
  {
    "text": "amazon does you can define policies for pipelines that allow you to control the shape and in contents of a pipeline the",
    "start": "2886250",
    "end": "2897620"
  },
  {
    "text": "second question I said I would answer is now that you have this distributed architecture of all these containers and",
    "start": "2897620",
    "end": "2903920"
  },
  {
    "text": "functions and managed services how do you isolate and discover problems in",
    "start": "2903920",
    "end": "2909050"
  },
  {
    "text": "that architecture if you know maybe you have some errors being thrown or some",
    "start": "2909050",
    "end": "2915080"
  },
  {
    "text": "performance issues how do you figure out where in that distributed architecture the problem is at Amazon we've been",
    "start": "2915080",
    "end": "2920900"
  },
  {
    "text": "using distributed tracing technologies to solve this problem internally with distributed tracing you can follow the",
    "start": "2920900",
    "end": "2926960"
  },
  {
    "text": "entire request path all the way down into the you know different layers of your application the different components to the data tier and back up",
    "start": "2926960",
    "end": "2933650"
  },
  {
    "text": "and you can figure out where the problems are a couple years ago we",
    "start": "2933650",
    "end": "2939170"
  },
  {
    "start": "2937000",
    "end": "3004000"
  },
  {
    "text": "launched x-ray as the external ization of some of the tools that we've been using inside of Amazon and what x-ray",
    "start": "2939170",
    "end": "2945200"
  },
  {
    "text": "does is it allows you to analyze and debug issues quickly end-to-end through the entire call path of your application",
    "start": "2945200",
    "end": "2952280"
  },
  {
    "text": "through IV every single component of your distributed architecture there's a couple of new features I'm gonna call",
    "start": "2952280",
    "end": "2958400"
  },
  {
    "text": "out that I think are super cool one is we launched x-ray root causes yesterday and what this allows you to do is do",
    "start": "2958400",
    "end": "2966320"
  },
  {
    "text": "custom alarms based on filter expressions in x-ray that you can use to",
    "start": "2966320",
    "end": "2971450"
  },
  {
    "text": "identify an alarm on whatever whatever custom thing you want to alarm on for",
    "start": "2971450",
    "end": "2976640"
  },
  {
    "text": "your distributed application you can use filter expressions to create these very granular types of monitoring the the",
    "start": "2976640",
    "end": "2984440"
  },
  {
    "text": "third the four the other thing that we support for a couple of weeks ago is API",
    "start": "2984440",
    "end": "2989640"
  },
  {
    "text": "gateway we're starting to add support for a number of new services in AWS but support for API gateway was super",
    "start": "2989640",
    "end": "2995730"
  },
  {
    "text": "important so that we could support server lists so we now support lambda and API gateway and if you use the API",
    "start": "2995730",
    "end": "3001160"
  },
  {
    "text": "gateway you get x-ray by default alright",
    "start": "3001160",
    "end": "3006770"
  },
  {
    "start": "3004000",
    "end": "3023000"
  },
  {
    "text": "so that's how you monitor and debug things at a system level how about at a code level huh what's the edit compile",
    "start": "3006770",
    "end": "3012410"
  },
  {
    "text": "test loop look like for for editing and debugging code last year at reinvent we",
    "start": "3012410",
    "end": "3026210"
  },
  {
    "start": "3023000",
    "end": "3100000"
  },
  {
    "text": "announced AWS cloud 9 and cloud 9 is a cloud-based browser-based",
    "start": "3026210",
    "end": "3031430"
  },
  {
    "text": "IDE that allows you to develop completely in the cloud it supports serverless really well so if you're",
    "start": "3031430",
    "end": "3036680"
  },
  {
    "text": "building a server this application I highly recommend using cloud 9 you can do debugging through cloud 9 you can",
    "start": "3036680",
    "end": "3042050"
  },
  {
    "text": "manage a server list application there's a lot of great things to be coming out soon for cloud 9 so so stay tuned",
    "start": "3042050",
    "end": "3049520"
  },
  {
    "text": "but this morning inverters keynote we also announced support for three new ADA Beals toolkits and the reason is because",
    "start": "3049520",
    "end": "3056390"
  },
  {
    "text": "we want to meet developers where they are we've heard from developers that you know IDs are these are very personal",
    "start": "3056390",
    "end": "3062119"
  },
  {
    "text": "thing and and everyone has their favorite IDE so we want to make sure that we're meeting you where you are so if you're a developer of IntelliJ vs",
    "start": "3062119",
    "end": "3069680"
  },
  {
    "text": "code or pycharm we now have tool kits that allow you to do serverless app development using these IDs these",
    "start": "3069680",
    "end": "3077119"
  },
  {
    "text": "are being developed completely and open source so you can go to github give us feedback contribute code if you want to",
    "start": "3077119",
    "end": "3083500"
  },
  {
    "text": "and give us give us some ideas of what you'd like to see next initially we're focused a lot on the",
    "start": "3083500",
    "end": "3089180"
  },
  {
    "text": "server list experience but we're gonna be adding support for other use cases as well the pipe charm there we go",
    "start": "3089180",
    "end": "3101600"
  },
  {
    "start": "3100000",
    "end": "3119000"
  },
  {
    "text": "the pycharm plugin allows you to create a lambda or serverless application a new",
    "start": "3101600",
    "end": "3108830"
  },
  {
    "text": "project it allows you to local step through debugging in your IDE and deploy your application straight from from",
    "start": "3108830",
    "end": "3115640"
  },
  {
    "text": "straight from PyCharm which is one of the jet brain projects super cool so check it out and give us back the fourth and final question I",
    "start": "3115640",
    "end": "3124609"
  },
  {
    "start": "3119000",
    "end": "3216000"
  },
  {
    "text": "wanted to answer for you is how do you model your application how do you",
    "start": "3124609",
    "end": "3129799"
  },
  {
    "text": "provision the resources you have a lot of you know different pieces now when things were all in one server one ec2",
    "start": "3129799",
    "end": "3136849"
  },
  {
    "text": "instance you might have provisioned that using a web GUI or a CLI but as you have",
    "start": "3136849",
    "end": "3142519"
  },
  {
    "text": "more and more pieces to your distributed application things get a little bit more complicated so you need a new way to do",
    "start": "3142519",
    "end": "3148460"
  },
  {
    "text": "this and that's where infrastructure as code comes in there's a ton of reasons to do infrastructure as code not only",
    "start": "3148460",
    "end": "3154369"
  },
  {
    "text": "does it help you define the desired state for your application and it's something that you can reason about in",
    "start": "3154369",
    "end": "3159410"
  },
  {
    "text": "code but it's also something that you can revision control that you can inspect and look at your architecture in",
    "start": "3159410",
    "end": "3166549"
  },
  {
    "text": "time it's something you can code review there's a ton of reasons to do it but one of the pieces of feedback that we",
    "start": "3166549",
    "end": "3172309"
  },
  {
    "text": "always get from developers is that it's still a little bit hard it's still a very low level you're dealing with lots",
    "start": "3172309",
    "end": "3178730"
  },
  {
    "text": "of JSON or ML code that tends to be fairly low-level and map to service api's one-to-one so it exposes all the",
    "start": "3178730",
    "end": "3186319"
  },
  {
    "text": "configuration options a good example is if you're trying to set up a VPC there",
    "start": "3186319",
    "end": "3191359"
  },
  {
    "text": "are so many configuration options for a V PC that you end up with thousands of lines of JSON code just to set up a VPC",
    "start": "3191359",
    "end": "3197569"
  },
  {
    "text": "using cloud formation or terraform so what developers want is they want a more abstracted more opinion opinion ated way",
    "start": "3197569",
    "end": "3205009"
  },
  {
    "text": "to set up a to view us in infrastructure as code and preferably to be able to do",
    "start": "3205009",
    "end": "3210440"
  },
  {
    "text": "it in whatever languages they want and not just in HCl or Yale or JSON so we've",
    "start": "3210440",
    "end": "3217730"
  },
  {
    "start": "3216000",
    "end": "3323000"
  },
  {
    "text": "been working on a new project called the AWS cloud development kit or cdk and",
    "start": "3217730",
    "end": "3223220"
  },
  {
    "text": "what the cdk does there's two things I want you to remember the first thing is that it provides language bindings for",
    "start": "3223220",
    "end": "3230900"
  },
  {
    "text": "cloud formation so that you can authorize formation templates in imperative languages so you can alter",
    "start": "3230900",
    "end": "3236180"
  },
  {
    "text": "cloud formation in Java or typescript or c-sharp or Python and then it compiles",
    "start": "3236180",
    "end": "3241970"
  },
  {
    "text": "down to cloud formation so it allows you to do whatever you want to do in whatever imperative language you want we",
    "start": "3241970",
    "end": "3248269"
  },
  {
    "text": "have more languages coming but you can take advantage of inheritance and in loops and if statements and all the",
    "start": "3248269",
    "end": "3254040"
  },
  {
    "text": "that you would normally do in a regular imperative language the second thing I want you to know about is that it has a",
    "start": "3254040",
    "end": "3260850"
  },
  {
    "text": "higher level set of components we you know not just the low language not just",
    "start": "3260850",
    "end": "3265920"
  },
  {
    "text": "the low level bindings but also a bunch of higher level components that we call constructs and what these constructs do",
    "start": "3265920",
    "end": "3272040"
  },
  {
    "text": "is they provide opinionated patterns for how to implement things sometimes this",
    "start": "3272040",
    "end": "3277710"
  },
  {
    "text": "might be a single service implementation like the V PC so rather than the thousands of lines of cloud of",
    "start": "3277710",
    "end": "3284550"
  },
  {
    "text": "CloudFormation JSON or HCl and terraform you'd simply have a few snippets of code",
    "start": "3284550",
    "end": "3289580"
  },
  {
    "text": "in typescript or Java for how to implement a V PC in the best practice in",
    "start": "3289580",
    "end": "3294930"
  },
  {
    "text": "in the most common way you can still you know configure it however you want but it gives you a default best practice way",
    "start": "3294930",
    "end": "3300750"
  },
  {
    "text": "to do it or we would have constructs for implementing common patterns across",
    "start": "3300750",
    "end": "3305940"
  },
  {
    "text": "services maybe you want to implement a pub/sub pattern using sqs and SSNs we",
    "start": "3305940",
    "end": "3313080"
  },
  {
    "text": "have a construct that does that so super cool stuff that I'm excited about it's",
    "start": "3313080",
    "end": "3318210"
  },
  {
    "text": "being developed in open source as well check it out on github related to this",
    "start": "3318210",
    "end": "3324960"
  },
  {
    "start": "3323000",
    "end": "3373000"
  },
  {
    "text": "is Sam the ato server list model which is a sister project that allows you to do some of the same things it's",
    "start": "3324960",
    "end": "3330870"
  },
  {
    "text": "higher-level opinionated ways to implement infrastructure as code but in",
    "start": "3330870",
    "end": "3336300"
  },
  {
    "text": "a declarative format so if you if you like using a declarative format Sam is a",
    "start": "3336300",
    "end": "3341580"
  },
  {
    "text": "perfect solution for that allows you to have opinionated ways to model your application and as Deepak mentioned we",
    "start": "3341580",
    "end": "3348720"
  },
  {
    "text": "now have container constructs for the cdk as well and this is super cool because it allows you to have",
    "start": "3348720",
    "end": "3354720"
  },
  {
    "text": "opinionated ways to model a container based application using for gate or ECS",
    "start": "3354720",
    "end": "3360030"
  },
  {
    "text": "and it not only generates all the CloudFormation that you need it generates the i.m policies and all the",
    "start": "3360030",
    "end": "3365670"
  },
  {
    "text": "other configuration files you need for docker and for builds and everything else all of it is managed by these constructs all right and with that we've",
    "start": "3365670",
    "end": "3375240"
  },
  {
    "start": "3373000",
    "end": "3420000"
  },
  {
    "text": "come to the conclusion I want to finish by saying that here at AWS we are",
    "start": "3375240",
    "end": "3380640"
  },
  {
    "text": "building a platform a cloud the best supports for modern application needs and we're innovating across the entire",
    "start": "3380640",
    "end": "3386730"
  },
  {
    "text": "stack from the hypervisor layer to the application construction layer and everything in between I want to thank",
    "start": "3386730",
    "end": "3393330"
  },
  {
    "text": "you for coming we are at the top of the hour so we're not gonna have time for questions here but David Deepak and I",
    "start": "3393330",
    "end": "3400830"
  },
  {
    "text": "will stick around in the lobby afterwards for 15-20 minutes if you have questions please come up to us and we're",
    "start": "3400830",
    "end": "3407160"
  },
  {
    "text": "happy to answer anything you also can give us feedback using the mobile app",
    "start": "3407160",
    "end": "3412470"
  },
  {
    "text": "please take time to give us some some feedback thank you for coming and enjoy the rest of the day",
    "start": "3412470",
    "end": "3418040"
  },
  {
    "text": "[Applause]",
    "start": "3418040",
    "end": "3422090"
  }
]