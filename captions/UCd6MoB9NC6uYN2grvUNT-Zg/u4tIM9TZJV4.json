[
  {
    "start": "0",
    "end": "43000"
  },
  {
    "text": "[Music]",
    "start": "450",
    "end": "8770"
  },
  {
    "text": "hello I'm Gotham a cloud support",
    "start": "8770",
    "end": "11630"
  },
  {
    "text": "engineer here at AWS office in Virginia",
    "start": "11630",
    "end": "14200"
  },
  {
    "text": "sometimes customers ask me how they can",
    "start": "14200",
    "end": "17180"
  },
  {
    "text": "maximize performance on the amazon EFS",
    "start": "17180",
    "end": "19490"
  },
  {
    "text": "file system",
    "start": "19490",
    "end": "20270"
  },
  {
    "text": "I tell them Amazonia Fest is designed to",
    "start": "20270",
    "end": "23630"
  },
  {
    "text": "provide massively parallel shade access",
    "start": "23630",
    "end": "25760"
  },
  {
    "text": "to thousands of Amazon ec2 instances",
    "start": "25760",
    "end": "27710"
  },
  {
    "text": "enabling applications to achieve high",
    "start": "27710",
    "end": "30260"
  },
  {
    "text": "levels of aggregate throughput and I",
    "start": "30260",
    "end": "32840"
  },
  {
    "text": "offs that scale as the file system grows",
    "start": "32840",
    "end": "35030"
  },
  {
    "text": "with consistent low latencies so to",
    "start": "35030",
    "end": "37879"
  },
  {
    "text": "maximize performance will use that",
    "start": "37879",
    "end": "40010"
  },
  {
    "text": "parallel feature let's get started to",
    "start": "40010",
    "end": "43670"
  },
  {
    "start": "43000",
    "end": "68000"
  },
  {
    "text": "optimize copy and delete operations on",
    "start": "43670",
    "end": "46100"
  },
  {
    "text": "EFS file systems you can use the GNU",
    "start": "46100",
    "end": "49519"
  },
  {
    "text": "parallel shell tool for executing jobs",
    "start": "49519",
    "end": "51650"
  },
  {
    "text": "in parallel by doing this you can",
    "start": "51650",
    "end": "54110"
  },
  {
    "text": "complete these tasks faster than using",
    "start": "54110",
    "end": "56210"
  },
  {
    "text": "the typical serial method this example",
    "start": "56210",
    "end": "59390"
  },
  {
    "text": "compares a single threaded file copy to",
    "start": "59390",
    "end": "62030"
  },
  {
    "text": "a multi-threaded file copy using the",
    "start": "62030",
    "end": "63979"
  },
  {
    "text": "following ec2 instance and file system",
    "start": "63979",
    "end": "66500"
  },
  {
    "text": "structure 82 micro ec2 instance running",
    "start": "66500",
    "end": "70219"
  },
  {
    "start": "68000",
    "end": "93000"
  },
  {
    "text": "Amazon Linux 1 with a 3 TB GP 2 EBS",
    "start": "70219",
    "end": "73520"
  },
  {
    "text": "volume attached the volume has thousand",
    "start": "73520",
    "end": "76219"
  },
  {
    "text": "files totalling 1gb an empty amazon EFS",
    "start": "76219",
    "end": "79460"
  },
  {
    "text": "filesystem which is mounted to the ec2",
    "start": "79460",
    "end": "82009"
  },
  {
    "text": "instance using the network file system",
    "start": "82009",
    "end": "83750"
  },
  {
    "text": "version 4.1 the three TB EBS volume is",
    "start": "83750",
    "end": "87950"
  },
  {
    "text": "mounted as EBS GP 2 and EFS file system",
    "start": "87950",
    "end": "91549"
  },
  {
    "text": "is mounted as EFS GP single threaded",
    "start": "91549",
    "end": "94490"
  },
  {
    "start": "93000",
    "end": "181000"
  },
  {
    "text": "file copy use SSH to login to the ec2",
    "start": "94490",
    "end": "97939"
  },
  {
    "text": "instance and run sudo su 2 login as root",
    "start": "97939",
    "end": "101140"
  },
  {
    "text": "on screen you can see two sessions of",
    "start": "101140",
    "end": "104359"
  },
  {
    "text": "the same server the one on the left side",
    "start": "104359",
    "end": "107240"
  },
  {
    "text": "is used for monitoring the network",
    "start": "107240",
    "end": "109009"
  },
  {
    "text": "performance while the session on the",
    "start": "109009",
    "end": "110960"
  },
  {
    "text": "right side is where we will be running",
    "start": "110960",
    "end": "112670"
  },
  {
    "text": "commands here is the output of DF -",
    "start": "112670",
    "end": "115840"
  },
  {
    "text": "h-e-bs GP 2 is the EBS volume with",
    "start": "115840",
    "end": "119420"
  },
  {
    "text": "thousand files of 1 MB each and EFS GP",
    "start": "119420",
    "end": "122990"
  },
  {
    "text": "is the EFS mount enable the extra",
    "start": "122990",
    "end": "126020"
  },
  {
    "text": "packages for Enterprise Linux EPE L",
    "start": "126020",
    "end": "128960"
  },
  {
    "text": "repository and install and load a Linux",
    "start": "128960",
    "end": "131780"
  },
  {
    "text": "utility that shows inbound and outbound",
    "start": "131780",
    "end": "133760"
  },
  {
    "text": "network throughput in real time",
    "start": "133760",
    "end": "137409"
  },
  {
    "text": "now recursively copy all the files and",
    "start": "142280",
    "end": "145590"
  },
  {
    "text": "directories from EBS to EFS copy folder",
    "start": "145590",
    "end": "148590"
  },
  {
    "text": "using the Linux CP utility run and load",
    "start": "148590",
    "end": "156630"
  },
  {
    "text": "to monitor the network throughput in M",
    "start": "156630",
    "end": "158760"
  },
  {
    "text": "base",
    "start": "158760",
    "end": "160939"
  },
  {
    "text": "in this example the unload command shows",
    "start": "167390",
    "end": "170060"
  },
  {
    "text": "that single-threaded CP command is",
    "start": "170060",
    "end": "172100"
  },
  {
    "text": "transferring data at around 11 mb/s and",
    "start": "172100",
    "end": "174530"
  },
  {
    "text": "it took around one minute 29 seconds to",
    "start": "174530",
    "end": "178040"
  },
  {
    "text": "copy thousand files totalling 1 GB of",
    "start": "178040",
    "end": "180350"
  },
  {
    "text": "data multi-threaded file copy we will",
    "start": "180350",
    "end": "184010"
  },
  {
    "start": "181000",
    "end": "260000"
  },
  {
    "text": "now use how multi-threaded file copy",
    "start": "184010",
    "end": "186050"
  },
  {
    "text": "performs when she a new parallel utility",
    "start": "186050",
    "end": "188330"
  },
  {
    "text": "is used G ano parallel is a",
    "start": "188330",
    "end": "190940"
  },
  {
    "text": "multi-threaded parallel utility to",
    "start": "190940",
    "end": "193220"
  },
  {
    "text": "install this run the following command",
    "start": "193220",
    "end": "197140"
  },
  {
    "text": "note that the parallel utility is",
    "start": "198070",
    "end": "201050"
  },
  {
    "text": "usually installed in user local bin so",
    "start": "201050",
    "end": "203660"
  },
  {
    "text": "before running the command make sure",
    "start": "203660",
    "end": "205850"
  },
  {
    "text": "that environment variable path is",
    "start": "205850",
    "end": "207770"
  },
  {
    "text": "changed using the following command now",
    "start": "207770",
    "end": "214520"
  },
  {
    "text": "copy the files to EFS parallel directory",
    "start": "214520",
    "end": "217910"
  },
  {
    "text": "by running GNU parallel and CP utility",
    "start": "217910",
    "end": "220820"
  },
  {
    "text": "please make sure that you are in source",
    "start": "220820",
    "end": "223490"
  },
  {
    "text": "directory while running the following",
    "start": "223490",
    "end": "225140"
  },
  {
    "text": "command",
    "start": "225140",
    "end": "227470"
  },
  {
    "text": "monitor the network throughput using n",
    "start": "233819",
    "end": "236439"
  },
  {
    "text": "load utility in this example the N load",
    "start": "236439",
    "end": "241209"
  },
  {
    "text": "command shows that the multi-threaded CP",
    "start": "241209",
    "end": "243579"
  },
  {
    "text": "command is transferring data at around",
    "start": "243579",
    "end": "245790"
  },
  {
    "text": "40 to 50 mb/s and it takes 22 seconds to",
    "start": "245790",
    "end": "250239"
  },
  {
    "text": "copy thousand files or 1 GB of data",
    "start": "250239",
    "end": "254250"
  },
  {
    "start": "260000",
    "end": "328000"
  },
  {
    "text": "additionally to GNU parallel there are",
    "start": "260400",
    "end": "263199"
  },
  {
    "text": "other parallel tools that can be used",
    "start": "263199",
    "end": "265120"
  },
  {
    "text": "with EFS as FP sync the FP sync tool",
    "start": "265120",
    "end": "269889"
  },
  {
    "text": "synchronizes directories in parallel it",
    "start": "269889",
    "end": "272830"
  },
  {
    "text": "can execute several arcing processes",
    "start": "272830",
    "end": "274990"
  },
  {
    "text": "locally or launch arcing transfers on",
    "start": "274990",
    "end": "277150"
  },
  {
    "text": "several nodes through SSH for example",
    "start": "277150",
    "end": "280900"
  },
  {
    "text": "this MSR sync multi-stream a sync is a",
    "start": "280900",
    "end": "286539"
  },
  {
    "text": "Python wrapper around our sync it only",
    "start": "286539",
    "end": "289360"
  },
  {
    "text": "depends on python version 2.6 and a sync",
    "start": "289360",
    "end": "292240"
  },
  {
    "text": "it will split the transfer in multiple",
    "start": "292240",
    "end": "295030"
  },
  {
    "text": "buckets while the source is scanned and",
    "start": "295030",
    "end": "296919"
  },
  {
    "text": "will hopefully help maximizing the usage",
    "start": "296919",
    "end": "299770"
  },
  {
    "text": "of available bandwidth by running a",
    "start": "299770",
    "end": "301630"
  },
  {
    "text": "configurable number of arcing processes",
    "start": "301630",
    "end": "303610"
  },
  {
    "text": "in parallel the main limitation is it",
    "start": "303610",
    "end": "306550"
  },
  {
    "text": "does not handle remote source our target",
    "start": "306550",
    "end": "308770"
  },
  {
    "text": "source",
    "start": "308770",
    "end": "309220"
  },
  {
    "text": "they must be locally accessible you can",
    "start": "309220",
    "end": "312280"
  },
  {
    "text": "install MSR sync by using the commands",
    "start": "312280",
    "end": "314710"
  },
  {
    "text": "shown on-screen thanks for watching and",
    "start": "314710",
    "end": "318880"
  },
  {
    "text": "happy cloud computing from all of us",
    "start": "318880",
    "end": "320680"
  },
  {
    "text": "here at AWS",
    "start": "320680",
    "end": "323330"
  },
  {
    "text": "you",
    "start": "323330",
    "end": "325388"
  }
]