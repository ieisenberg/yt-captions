[
  {
    "start": "0",
    "end": "33000"
  },
  {
    "text": "- [Evence] Hi, I'm Evence,",
    "start": "780",
    "end": "2490"
  },
  {
    "text": "a solution architect\nat Amazon Web Services.",
    "start": "2490",
    "end": "6150"
  },
  {
    "text": "This video is going to be the first",
    "start": "6150",
    "end": "7920"
  },
  {
    "text": "in a Policy Development series",
    "start": "7920",
    "end": "9960"
  },
  {
    "text": "for Amazon Verified Permissions.",
    "start": "9960",
    "end": "13140"
  },
  {
    "text": "I'm going to introduce",
    "start": "13140",
    "end": "14430"
  },
  {
    "text": "how to use Amazon Verified Permissions,",
    "start": "14430",
    "end": "17340"
  },
  {
    "text": "along with your preferred\nidentity provider",
    "start": "17340",
    "end": "20400"
  },
  {
    "text": "to manage fine-grained authorization",
    "start": "20400",
    "end": "23670"
  },
  {
    "text": "in the applications that you build.",
    "start": "23670",
    "end": "26520"
  },
  {
    "text": "By the end of this series,",
    "start": "26520",
    "end": "28320"
  },
  {
    "text": "you will learn how to structure policies",
    "start": "28320",
    "end": "31529"
  },
  {
    "text": "on new applications.",
    "start": "31530",
    "end": "33123"
  },
  {
    "start": "33000",
    "end": "86000"
  },
  {
    "text": "The goal of this Primer series",
    "start": "34770",
    "end": "36630"
  },
  {
    "text": "is to help you start writing policies",
    "start": "36630",
    "end": "39870"
  },
  {
    "text": "with Amazon Verified Permissions.",
    "start": "39870",
    "end": "42930"
  },
  {
    "text": "First, we will give you an introduction",
    "start": "42930",
    "end": "45990"
  },
  {
    "text": "to Amazon Verified Permissions;",
    "start": "45990",
    "end": "48660"
  },
  {
    "text": "we will take a look at an\nend-to-end architecture flow;",
    "start": "48660",
    "end": "52650"
  },
  {
    "text": "discuss Cedar language,",
    "start": "52650",
    "end": "54540"
  },
  {
    "text": "an open-source language",
    "start": "54540",
    "end": "56370"
  },
  {
    "text": "used to write permissions in\nAmazon Verified Permissions;",
    "start": "56370",
    "end": "61020"
  },
  {
    "text": "we will then spend some time",
    "start": "61020",
    "end": "62700"
  },
  {
    "text": "introducing a sample application;",
    "start": "62700",
    "end": "65640"
  },
  {
    "text": "and we will start to\ncreate a permissions model",
    "start": "65640",
    "end": "69630"
  },
  {
    "text": "for that application.",
    "start": "69630",
    "end": "71700"
  },
  {
    "text": "Finally, we will summarize\nwhat we have learned",
    "start": "71700",
    "end": "76020"
  },
  {
    "text": "and provide a link to the\nnext video in the series",
    "start": "76020",
    "end": "80009"
  },
  {
    "text": "where we will take this permissions model",
    "start": "80010",
    "end": "83250"
  },
  {
    "text": "and create a schema.",
    "start": "83250",
    "end": "84783"
  },
  {
    "start": "86000",
    "end": "219000"
  },
  {
    "text": "Amazon Verified Permissions",
    "start": "87870",
    "end": "89340"
  },
  {
    "text": "provides fine-grained\nauthorization as a service.",
    "start": "89340",
    "end": "93840"
  },
  {
    "text": "It provides a policy administration point",
    "start": "93840",
    "end": "97049"
  },
  {
    "text": "to build and test policies",
    "start": "97050",
    "end": "99510"
  },
  {
    "text": "and a policy decision point",
    "start": "99510",
    "end": "101880"
  },
  {
    "text": "to provide runtime authorization decisions",
    "start": "101880",
    "end": "105960"
  },
  {
    "text": "to the applications that you build.",
    "start": "105960",
    "end": "108183"
  },
  {
    "text": "Let's take a look at this\nend-to-end architecture flow",
    "start": "109680",
    "end": "113820"
  },
  {
    "text": "to understand how Verified\nPermissions operates at runtime.",
    "start": "113820",
    "end": "118773"
  },
  {
    "text": "In this diagram,",
    "start": "119880",
    "end": "121409"
  },
  {
    "text": "we deployed an application\nusing Amazon Cognito",
    "start": "121410",
    "end": "125520"
  },
  {
    "text": "as the identity provider.",
    "start": "125520",
    "end": "127802"
  },
  {
    "text": "A user logs in whether\nlocally of via federation.",
    "start": "129270",
    "end": "133440"
  },
  {
    "text": "Cognito generates a custom\nID and access tokens.",
    "start": "133440",
    "end": "138240"
  },
  {
    "text": "With these tokens,",
    "start": "138240",
    "end": "139410"
  },
  {
    "text": "the user can request\napplication endpoints.",
    "start": "139410",
    "end": "142953"
  },
  {
    "text": "The browser sends the\ntokens to the API Gateway.",
    "start": "144330",
    "end": "148203"
  },
  {
    "text": "API Gateway here serves as\nthe policy enforcement point.",
    "start": "149190",
    "end": "154190"
  },
  {
    "text": "It stopped the request",
    "start": "154890",
    "end": "156780"
  },
  {
    "text": "and executes a custom Lambda authorizer.",
    "start": "156780",
    "end": "160323"
  },
  {
    "text": "The authorizer performs\nthe isAuthorized call",
    "start": "161430",
    "end": "165480"
  },
  {
    "text": "to verify permissions\nfor a policy decision.",
    "start": "165480",
    "end": "169323"
  },
  {
    "text": "Amazon Verified Permissions responds",
    "start": "170610",
    "end": "173460"
  },
  {
    "text": "with an allow or deny decision.",
    "start": "173460",
    "end": "176820"
  },
  {
    "text": "In this instance, the decision was allowed",
    "start": "176820",
    "end": "180510"
  },
  {
    "text": "so the request proceeds\nto the backend API.",
    "start": "180510",
    "end": "184202"
  },
  {
    "text": "There are many variations\nto this architecture",
    "start": "185370",
    "end": "188640"
  },
  {
    "text": "to meet different application requirement,",
    "start": "188640",
    "end": "191190"
  },
  {
    "text": "such as integrating isAuthorized calls",
    "start": "191190",
    "end": "194970"
  },
  {
    "text": "into the application itself",
    "start": "194970",
    "end": "197640"
  },
  {
    "text": "or running an authorization\ncontainer sidecar.",
    "start": "197640",
    "end": "201423"
  },
  {
    "text": "Amazon Verified Permissions\nuses the Cedar language",
    "start": "202650",
    "end": "206790"
  },
  {
    "text": "to manage fine-grained permissions",
    "start": "206790",
    "end": "209730"
  },
  {
    "text": "in your custom applications.",
    "start": "209730",
    "end": "212489"
  },
  {
    "text": "Next, let's talk about\nhow policies are written",
    "start": "212490",
    "end": "216660"
  },
  {
    "text": "in Cedar language.",
    "start": "216660",
    "end": "218073"
  },
  {
    "start": "219000",
    "end": "377000"
  },
  {
    "text": "Cedar language is an\nopen-source policy language.",
    "start": "221370",
    "end": "225030"
  },
  {
    "text": "It has an ergonomic syntax,",
    "start": "225030",
    "end": "227040"
  },
  {
    "text": "which means it is\nhuman-readable and easy to use.",
    "start": "227040",
    "end": "231066"
  },
  {
    "text": "AWS did the heavy lifting",
    "start": "231066",
    "end": "233040"
  },
  {
    "text": "to create a fast and\nsafe evaluation engine.",
    "start": "233040",
    "end": "237450"
  },
  {
    "text": "It supports automated reasoning,",
    "start": "237450",
    "end": "240150"
  },
  {
    "text": "which means you can test\nwith limited variables",
    "start": "240150",
    "end": "243090"
  },
  {
    "text": "to determine if a policy\ndoes what is supposed to do.",
    "start": "243090",
    "end": "247263"
  },
  {
    "text": "This is what the Cedar policies look like.",
    "start": "249180",
    "end": "252299"
  },
  {
    "text": "It consists of three parts:",
    "start": "252300",
    "end": "254550"
  },
  {
    "text": "an effect, a scope, and an\noptional set of conditions.",
    "start": "254550",
    "end": "259549"
  },
  {
    "text": "We will get more into this",
    "start": "259830",
    "end": "261239"
  },
  {
    "text": "when we start writing Cedar\npolicies in upcoming demos.",
    "start": "261240",
    "end": "265413"
  },
  {
    "text": "To represent this data,",
    "start": "267210",
    "end": "269160"
  },
  {
    "text": "Cedar provides four variables",
    "start": "269160",
    "end": "271830"
  },
  {
    "text": "that are built into the language.",
    "start": "271830",
    "end": "274620"
  },
  {
    "text": "These variables are principal, action,",
    "start": "274620",
    "end": "278970"
  },
  {
    "text": "resource, and context.",
    "start": "278970",
    "end": "281520"
  },
  {
    "text": "At least one of these\nvariables can be seen",
    "start": "281520",
    "end": "284069"
  },
  {
    "text": "in every line of the sample\npolicy of the previous slide.",
    "start": "284070",
    "end": "288783"
  },
  {
    "text": "While the content of these variables",
    "start": "289710",
    "end": "291780"
  },
  {
    "text": "will differ between applications,",
    "start": "291780",
    "end": "294210"
  },
  {
    "text": "the variables themselves\nexist in all Cedar policies.",
    "start": "294210",
    "end": "298710"
  },
  {
    "text": "They represent the bedrock, so to speak,",
    "start": "298710",
    "end": "301590"
  },
  {
    "text": "upon which rules are expressed.",
    "start": "301590",
    "end": "304383"
  },
  {
    "text": "Each variable encapsulate\na collection of data",
    "start": "306810",
    "end": "310139"
  },
  {
    "text": "containing a type, ID,\nand optional attributes.",
    "start": "310140",
    "end": "315140"
  },
  {
    "text": "This can be visualized as four\nrecords, as in this example,",
    "start": "315660",
    "end": "320340"
  },
  {
    "text": "for a file sharing application.",
    "start": "320340",
    "end": "322682"
  },
  {
    "text": "The principal entity contains information",
    "start": "323610",
    "end": "327000"
  },
  {
    "text": "about the user who authenticated",
    "start": "327000",
    "end": "329550"
  },
  {
    "text": "and is performing the action.",
    "start": "329550",
    "end": "332280"
  },
  {
    "text": "Depending on the type of application,",
    "start": "332280",
    "end": "334830"
  },
  {
    "text": "this could be a human actor,\nlike a customer or employee,",
    "start": "334830",
    "end": "339509"
  },
  {
    "text": "or it could be a software principal.",
    "start": "339510",
    "end": "342033"
  },
  {
    "text": "The action contains information",
    "start": "343020",
    "end": "345780"
  },
  {
    "text": "about what the principal\nis trying to accomplish.",
    "start": "345780",
    "end": "350250"
  },
  {
    "text": "The resource entity contains information",
    "start": "350250",
    "end": "353370"
  },
  {
    "text": "about the resource being acted upon.",
    "start": "353370",
    "end": "356100"
  },
  {
    "text": "For example, if the action is view file,",
    "start": "356100",
    "end": "359940"
  },
  {
    "text": "the resource is likely\nto be a particular file.",
    "start": "359940",
    "end": "363483"
  },
  {
    "text": "The context, on the other hand,",
    "start": "364710",
    "end": "366419"
  },
  {
    "text": "represents information that is unique",
    "start": "366420",
    "end": "369480"
  },
  {
    "text": "to a particular access request.",
    "start": "369480",
    "end": "372420"
  },
  {
    "text": "Next, let's introduce\nthe custom application.",
    "start": "372420",
    "end": "376443"
  },
  {
    "start": "377000",
    "end": "482000"
  },
  {
    "text": "So when we go into customer meetings",
    "start": "377970",
    "end": "380160"
  },
  {
    "text": "to help customers write policies,",
    "start": "380160",
    "end": "383220"
  },
  {
    "text": "one question that come up is:",
    "start": "383220",
    "end": "385590"
  },
  {
    "text": "Well, how do we get started?",
    "start": "385590",
    "end": "388260"
  },
  {
    "text": "And it all starts with the application.",
    "start": "388260",
    "end": "391350"
  },
  {
    "text": "We need to know what that\napplication model is.",
    "start": "391350",
    "end": "394530"
  },
  {
    "text": "What are the actions?",
    "start": "394530",
    "end": "396150"
  },
  {
    "text": "Who are the principals of\nthe actors taking actions",
    "start": "396150",
    "end": "399419"
  },
  {
    "text": "on the application?",
    "start": "399420",
    "end": "401220"
  },
  {
    "text": "What are those components?",
    "start": "401220",
    "end": "403560"
  },
  {
    "text": "For that, let's take a look\nat a sample application",
    "start": "403560",
    "end": "407040"
  },
  {
    "text": "where we are going to identify two APIs",
    "start": "407040",
    "end": "410610"
  },
  {
    "text": "with different access",
    "start": "410610",
    "end": "412379"
  },
  {
    "text": "and start to pull this into a schema.",
    "start": "412380",
    "end": "415263"
  },
  {
    "text": "We want to build a portal\nfor a veterinary clinic.",
    "start": "417750",
    "end": "421893"
  },
  {
    "text": "This portal allows pet owners\nto register their pets,",
    "start": "423120",
    "end": "428010"
  },
  {
    "text": "to create appointment with vets,",
    "start": "428010",
    "end": "431130"
  },
  {
    "text": "and provide them with the ability",
    "start": "431130",
    "end": "433770"
  },
  {
    "text": "to read their pets' medical\nrecords and test results.",
    "start": "433770",
    "end": "438003"
  },
  {
    "text": "This portal is not just for pet owners.",
    "start": "439230",
    "end": "442620"
  },
  {
    "text": "Vets are also able to\nlog into this portal.",
    "start": "442620",
    "end": "447620"
  },
  {
    "text": "Vets can read the details about the pets",
    "start": "448440",
    "end": "451740"
  },
  {
    "text": "and also update the medical records",
    "start": "451740",
    "end": "454479"
  },
  {
    "text": "and any test result that were conducted.",
    "start": "455370",
    "end": "457983"
  },
  {
    "text": "As you must have realized,",
    "start": "459270",
    "end": "461099"
  },
  {
    "text": "there are multiple levels of authorization",
    "start": "461100",
    "end": "464010"
  },
  {
    "text": "needed in this case,",
    "start": "464010",
    "end": "466200"
  },
  {
    "text": "but creating authorization becomes simpler",
    "start": "466200",
    "end": "469560"
  },
  {
    "text": "when we follow a framework for designing",
    "start": "469560",
    "end": "472530"
  },
  {
    "text": "and implementing authorization\nin our application.",
    "start": "472530",
    "end": "476313"
  },
  {
    "text": "So let's take a look at the\nauthorization framework.",
    "start": "477390",
    "end": "480873"
  },
  {
    "start": "482000",
    "end": "532000"
  },
  {
    "text": "This is the Amazon Verified Permissions",
    "start": "483240",
    "end": "485160"
  },
  {
    "text": "recommended framework",
    "start": "485160",
    "end": "486360"
  },
  {
    "text": "to build authorization for applications.",
    "start": "486360",
    "end": "489783"
  },
  {
    "text": "The authorization model is a narrative",
    "start": "490710",
    "end": "493620"
  },
  {
    "text": "that describes the permissions\nwithin the application.",
    "start": "493620",
    "end": "497313"
  },
  {
    "text": "It is typically built",
    "start": "498180",
    "end": "499560"
  },
  {
    "text": "in conjunction with the business\nowner of the application.",
    "start": "499560",
    "end": "503763"
  },
  {
    "text": "It involves four steps.",
    "start": "504930",
    "end": "507063"
  },
  {
    "text": "Define the permissions\nmodel for the application,",
    "start": "508290",
    "end": "511743"
  },
  {
    "text": "define the schema and policies,\ncreate the technical design,",
    "start": "512790",
    "end": "517789"
  },
  {
    "text": "and build and test the application.",
    "start": "519390",
    "end": "522423"
  },
  {
    "text": "In this video, we will be\ndiscussing the first step,",
    "start": "524130",
    "end": "528240"
  },
  {
    "text": "define the permissions model.",
    "start": "528240",
    "end": "529983"
  },
  {
    "start": "532000",
    "end": "662000"
  },
  {
    "text": "Let's decide on the permissions model",
    "start": "533190",
    "end": "535080"
  },
  {
    "text": "for our Vet application portal.",
    "start": "535080",
    "end": "537183"
  },
  {
    "text": "Note that permissions model",
    "start": "538260",
    "end": "539970"
  },
  {
    "text": "are defined in terms of\nprincipals, resources, and actions.",
    "start": "539970",
    "end": "544970"
  },
  {
    "text": "Just as we saw in the\nCedar language format,",
    "start": "546930",
    "end": "549423"
  },
  {
    "text": "they define the actions\nthat each principal",
    "start": "550380",
    "end": "553350"
  },
  {
    "text": "is allowed to perform on resources.",
    "start": "553350",
    "end": "555933"
  },
  {
    "text": "Let's cover principals on this slide.",
    "start": "556920",
    "end": "559053"
  },
  {
    "text": "Your application's user database",
    "start": "560310",
    "end": "562620"
  },
  {
    "text": "can be maintained in any\nidentity-provided database store",
    "start": "562620",
    "end": "566370"
  },
  {
    "text": "of your choice.",
    "start": "566370",
    "end": "568110"
  },
  {
    "text": "For the Vet app,",
    "start": "568110",
    "end": "569610"
  },
  {
    "text": "we use Amazon Cognito\nas the identity provider",
    "start": "569610",
    "end": "573610"
  },
  {
    "text": "In the Cognito user database,",
    "start": "574920",
    "end": "577380"
  },
  {
    "text": "we maintain data about\npet owners and vets.",
    "start": "577380",
    "end": "581223"
  },
  {
    "text": "So who are the principals?",
    "start": "582870",
    "end": "585720"
  },
  {
    "text": "Well, the principals are\nindividuals like Dylan,",
    "start": "585720",
    "end": "590720"
  },
  {
    "text": "who is a pet owner,",
    "start": "591180",
    "end": "592920"
  },
  {
    "text": "or Rashmi, who is a vet.",
    "start": "592920",
    "end": "595532"
  },
  {
    "text": "We want to write policies\nabout Dylan as a pet owner.",
    "start": "596550",
    "end": "600333"
  },
  {
    "text": "And as a pet owner,",
    "start": "601200",
    "end": "602700"
  },
  {
    "text": "Dylan should be able to view\nrecords for only his pet.",
    "start": "602700",
    "end": "607413"
  },
  {
    "text": "We also want to write\npolicies for Rashmi as a vet.",
    "start": "608700",
    "end": "613323"
  },
  {
    "text": "Now, you might be wondering",
    "start": "615330",
    "end": "617370"
  },
  {
    "text": "how Amazon Verified Permissions\nwill get this user data.",
    "start": "617370",
    "end": "621843"
  },
  {
    "text": "Identity data is typically\npackaged in the ID",
    "start": "623160",
    "end": "626910"
  },
  {
    "text": "and access tokens that\nis provided at run time.",
    "start": "626910",
    "end": "630693"
  },
  {
    "text": "In a subsequent video,",
    "start": "631830",
    "end": "634050"
  },
  {
    "text": "we will be able to write a Cedar policy",
    "start": "634050",
    "end": "636480"
  },
  {
    "text": "that says a pet owner can\nview records in the database",
    "start": "636480",
    "end": "641480"
  },
  {
    "text": "for a pet that they own.",
    "start": "641760",
    "end": "643863"
  },
  {
    "text": "This is a simple policy statement",
    "start": "645000",
    "end": "647490"
  },
  {
    "text": "that covers a large number of use cases.",
    "start": "647490",
    "end": "650852"
  },
  {
    "text": "We will also be able\nto test these policies",
    "start": "651930",
    "end": "654690"
  },
  {
    "text": "using the test bench included",
    "start": "654690",
    "end": "657120"
  },
  {
    "text": "in Amazon Verified Permissions console.",
    "start": "657120",
    "end": "660003"
  },
  {
    "start": "662000",
    "end": "747000"
  },
  {
    "text": "Next, let's cover the resources.",
    "start": "663870",
    "end": "666873"
  },
  {
    "text": "In the Vet application database,",
    "start": "667950",
    "end": "670560"
  },
  {
    "text": "we maintain the Pet Details table",
    "start": "670560",
    "end": "673920"
  },
  {
    "text": "and the Pet Medical Records table.",
    "start": "673920",
    "end": "676863"
  },
  {
    "text": "In the Pet Details table,",
    "start": "677790",
    "end": "680130"
  },
  {
    "text": "we have data that\noriginates from the owner,",
    "start": "680130",
    "end": "683160"
  },
  {
    "text": "such as the pet name",
    "start": "683160",
    "end": "685170"
  },
  {
    "text": "and how a pet is linked to an owner.",
    "start": "685170",
    "end": "688083"
  },
  {
    "text": "In the Pet Medical Records table,",
    "start": "689280",
    "end": "691920"
  },
  {
    "text": "we have data that\noriginates from the clinic,",
    "start": "691920",
    "end": "695370"
  },
  {
    "text": "such as test results.",
    "start": "695370",
    "end": "697563"
  },
  {
    "text": "Just looking at those tables,",
    "start": "698760",
    "end": "701250"
  },
  {
    "text": "you start to see some\nauthorization relationships.",
    "start": "701250",
    "end": "704850"
  },
  {
    "text": "For example, a pet owner",
    "start": "704850",
    "end": "707519"
  },
  {
    "text": "will want to read their\npet's medical test results,",
    "start": "707520",
    "end": "711480"
  },
  {
    "text": "and they may also need write\naccess to this database",
    "start": "711480",
    "end": "715680"
  },
  {
    "text": "to update their email\naddress, for instance.",
    "start": "715680",
    "end": "718803"
  },
  {
    "text": "But at the same time,",
    "start": "719640",
    "end": "721380"
  },
  {
    "text": "we don't want pet owners\nto change test results.",
    "start": "721380",
    "end": "725733"
  },
  {
    "text": "We want to provide fine-grained\nauthorization to this data.",
    "start": "726660",
    "end": "730532"
  },
  {
    "text": "So what are the resources\nin this scenario?",
    "start": "732030",
    "end": "736020"
  },
  {
    "text": "Well, the resources are\nthe Pet Medical Records",
    "start": "736020",
    "end": "741020"
  },
  {
    "text": "and the Pet Details.",
    "start": "742410",
    "end": "744483"
  },
  {
    "text": "On the previous slides,",
    "start": "749880",
    "end": "751350"
  },
  {
    "text": "we were introduced to the\nprincipals and resources.",
    "start": "751350",
    "end": "755493"
  },
  {
    "text": "Actions define what a\nprincipal is allowed to do",
    "start": "756720",
    "end": "761220"
  },
  {
    "text": "on the resources.",
    "start": "761220",
    "end": "763439"
  },
  {
    "text": "We talked about access to specific roles",
    "start": "763440",
    "end": "766260"
  },
  {
    "text": "or fields in a database,",
    "start": "766260",
    "end": "768570"
  },
  {
    "text": "but practically,",
    "start": "768570",
    "end": "769710"
  },
  {
    "text": "this access is enabled via APIs",
    "start": "769710",
    "end": "773670"
  },
  {
    "text": "that provide access to the data.",
    "start": "773670",
    "end": "776433"
  },
  {
    "text": "Here, we can define the different actions",
    "start": "777660",
    "end": "780779"
  },
  {
    "text": "that are available on the data.",
    "start": "780780",
    "end": "783033"
  },
  {
    "text": "So what are the actions\nour users can perform",
    "start": "784380",
    "end": "787350"
  },
  {
    "text": "when they log into the app?",
    "start": "787350",
    "end": "789212"
  },
  {
    "text": "Well, when a user logs into the Vet app,",
    "start": "790260",
    "end": "794490"
  },
  {
    "text": "if they belong to the pet owner group,",
    "start": "794490",
    "end": "797279"
  },
  {
    "text": "they can either register a pet",
    "start": "797280",
    "end": "800670"
  },
  {
    "text": "or read their pet medical records.",
    "start": "800670",
    "end": "804389"
  },
  {
    "text": "If they belong to the vet group,",
    "start": "804390",
    "end": "806760"
  },
  {
    "text": "they can read or update\npet medical records.",
    "start": "806760",
    "end": "811760"
  },
  {
    "start": "815000",
    "end": "850000"
  },
  {
    "text": "In this video, we introduced\nthe Vet application.",
    "start": "816000",
    "end": "819870"
  },
  {
    "text": "We define the actions that each principal",
    "start": "819870",
    "end": "822839"
  },
  {
    "text": "is allowed to perform on our resources.",
    "start": "822840",
    "end": "826860"
  },
  {
    "text": "In the next videos, we will\nlearn how to define the schema",
    "start": "826860",
    "end": "831860"
  },
  {
    "text": "and how to write policies.",
    "start": "832110",
    "end": "834333"
  },
  {
    "text": "To learn more about Amazon\nVerified Permissions and schema,",
    "start": "836460",
    "end": "840540"
  },
  {
    "text": "please scan the QR code on the screen.",
    "start": "840540",
    "end": "843423"
  },
  {
    "text": "Thank you.",
    "start": "845250",
    "end": "846083"
  }
]