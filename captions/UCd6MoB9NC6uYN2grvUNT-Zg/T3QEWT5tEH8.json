[
  {
    "start": "0",
    "end": "29000"
  },
  {
    "text": "By the end of this training",
    "start": "6202",
    "end": "7308"
  },
  {
    "text": "you will be able to script\nand automate AWS services",
    "start": "7426",
    "end": "10979"
  },
  {
    "text": "using AWS Tools for\nWindows PowerShell.",
    "start": "11220",
    "end": "14381"
  },
  {
    "text": "Write your own self-healing\nPowerShell scripts.",
    "start": "14907",
    "end": "18029"
  },
  {
    "text": "After this brief video,\nplease take the hands-on lab",
    "start": "18644",
    "end": "21247"
  },
  {
    "text": "at https://run.qwiklabs.com",
    "start": "21350",
    "end": "28047"
  },
  {
    "start": "29000",
    "end": "62000"
  },
  {
    "text": "Hi Jen.",
    "start": "29754",
    "end": "30619"
  },
  {
    "text": "I've recently moved a few\nWindows based applications to AWS,",
    "start": "30676",
    "end": "34260"
  },
  {
    "text": "and I was wondering\nwhether I could script",
    "start": "34772",
    "end": "36392"
  },
  {
    "text": "some of my deployment and\nmaintenance tasks using PowerShell.",
    "start": "36472",
    "end": "40003"
  },
  {
    "text": "Hi John, I'm glad you asked.",
    "start": "41428",
    "end": "43103"
  },
  {
    "text": "Yes, AWS provides just\nwhat you need",
    "start": "43220",
    "end": "45590"
  },
  {
    "text": "with the AWS Tools\nfor Windows PowerShell.",
    "start": "45615",
    "end": "48590"
  },
  {
    "text": "You can automate many AWS services\nthrough your PowerShell scripts.",
    "start": "48852",
    "end": "52875"
  },
  {
    "text": "This becomes very handy\nfor Windows administrators,",
    "start": "53204",
    "end": "55624"
  },
  {
    "text": "because they can manage\ntheir AWS resources",
    "start": "55723",
    "end": "58369"
  },
  {
    "text": "with the same Windows PowerShell\ntools they're used to.",
    "start": "58580",
    "end": "61670"
  },
  {
    "start": "62000",
    "end": "126000"
  },
  {
    "text": "Fantastic.\nSo what can I do with these tools?",
    "start": "63003",
    "end": "66206"
  },
  {
    "text": "In short, you can deploy,\nmanage and scale",
    "start": "67284",
    "end": "69829"
  },
  {
    "text": "most of the AWS services\nyou use through PowerShell.",
    "start": "69885",
    "end": "72734"
  },
  {
    "text": "AWS Tools for Windows PowerShell",
    "start": "73172",
    "end": "75257"
  },
  {
    "text": "supports over two dozen\nAWS services,",
    "start": "75283",
    "end": "78034"
  },
  {
    "text": "including most of the common\nones we use everyday",
    "start": "78292",
    "end": "80583"
  },
  {
    "text": "such as Amazon EC2,",
    "start": "80647",
    "end": "82645"
  },
  {
    "text": "RDS, S3, Elastic Load balancing,\nand AWS CloudFormation.",
    "start": "82834",
    "end": "88101"
  },
  {
    "text": "In addition, AWS Tools\nalso supports the CloudWatch",
    "start": "88690",
    "end": "91658"
  },
  {
    "text": "and Amazon SNS services.",
    "start": "91683",
    "end": "93730"
  },
  {
    "text": "This means you can write your own\nself-healing PowerShell script",
    "start": "94164",
    "end": "97003"
  },
  {
    "text": "if any service or application fails",
    "start": "97028",
    "end": "99207"
  },
  {
    "text": "and an action should be\ntaken automatically.",
    "start": "99402",
    "end": "101631"
  },
  {
    "text": "Let me give you an example.",
    "start": "101998",
    "end": "103450"
  },
  {
    "text": "A PowerShell script captures\nan SNS notification",
    "start": "103550",
    "end": "106434"
  },
  {
    "text": "when the backup operation\nof a database fails",
    "start": "106459",
    "end": "109099"
  },
  {
    "text": "due to low storage space.",
    "start": "109268",
    "end": "110964"
  },
  {
    "text": "And, further, it automatically\nincreases the storage size",
    "start": "111166",
    "end": "114281"
  },
  {
    "text": "in the Amazon EC2 instance\nrunning the database",
    "start": "114306",
    "end": "117269"
  },
  {
    "text": "and runs the backup\noperations again.",
    "start": "117460",
    "end": "119507"
  },
  {
    "text": "Finally, it also emails\nthe administrators about the issue",
    "start": "120003",
    "end": "123156"
  },
  {
    "text": "and the resolution\nsteps that were taken.",
    "start": "123232",
    "end": "125287"
  },
  {
    "start": "126000",
    "end": "208000"
  },
  {
    "text": "That sounds fascinating.",
    "start": "126513",
    "end": "127997"
  },
  {
    "text": "But how is security\nand access control",
    "start": "128092",
    "end": "130457"
  },
  {
    "text": "managed for these scripts?",
    "start": "130483",
    "end": "132473"
  },
  {
    "text": "That's a good question, John.",
    "start": "133260",
    "end": "134624"
  },
  {
    "text": "I know the first concern most of us\nhave about such scripts is",
    "start": "134719",
    "end": "137846"
  },
  {
    "text": "how are they going\nto access the AWS services",
    "start": "137894",
    "end": "140293"
  },
  {
    "text": "with the right access credentials?",
    "start": "140318",
    "end": "142247"
  },
  {
    "text": "And how can someone\nmanage the access rights",
    "start": "142548",
    "end": "144697"
  },
  {
    "text": "so that these scripts are not\nmisused or used without authority?",
    "start": "144737",
    "end": "148244"
  },
  {
    "text": "All cmdlets in the PowerShell tools\ncan work with AccessKey,",
    "start": "148692",
    "end": "152271"
  },
  {
    "text": "SecureKey, and Token parameters.",
    "start": "152357",
    "end": "154958"
  },
  {
    "text": "The Token parameter is only used\nwhen the AccessKey and SecureKey",
    "start": "155348",
    "end": "158882"
  },
  {
    "text": "are temporary credentials obtained\nfrom the AWS Security Token Service.",
    "start": "158907",
    "end": "163489"
  },
  {
    "text": "These parameters allow you\nto specify credentials",
    "start": "164039",
    "end": "166635"
  },
  {
    "text": "for AWS Identity and Access\nManagement user accounts",
    "start": "166660",
    "end": "169995"
  },
  {
    "text": "that you have created.",
    "start": "170020",
    "end": "171380"
  },
  {
    "text": "The credentials can\nbe given restricted access",
    "start": "171732",
    "end": "174034"
  },
  {
    "text": "to AWS resources and services.",
    "start": "174074",
    "end": "176653"
  },
  {
    "text": "Using these parameters to pass\nyour root account credentials",
    "start": "177960",
    "end": "180831"
  },
  {
    "text": "to PowerShell cmdlets\nis less secure and not recommended.",
    "start": "180856",
    "end": "185044"
  },
  {
    "text": "That's why Amazon\nstrongly recommends",
    "start": "185556",
    "end": "187515"
  },
  {
    "text": "that you use\nIAM user accounts instead.",
    "start": "187540",
    "end": "190163"
  },
  {
    "text": "With IAM user accounts,",
    "start": "190676",
    "end": "192456"
  },
  {
    "text": "you can provide specific rights\nto specific users,",
    "start": "192468",
    "end": "195379"
  },
  {
    "text": "limiting them to perform\nonly certain tasks.",
    "start": "195643",
    "end": "198150"
  },
  {
    "text": "And now we can also integrate IAM\nwith Windows ADFS through SAML.",
    "start": "198409",
    "end": "203466"
  },
  {
    "text": "This makes user and access\nmanagement seamless",
    "start": "203811",
    "end": "206215"
  },
  {
    "text": "in a Windows environment.",
    "start": "206240",
    "end": "207802"
  },
  {
    "start": "208000",
    "end": "237000"
  },
  {
    "text": "Who do you think should use this?",
    "start": "208848",
    "end": "210975"
  },
  {
    "text": "Anyone who manages\na Windows Server on AWS",
    "start": "212340",
    "end": "215157"
  },
  {
    "text": "should consider using\nthese cmdlets.",
    "start": "215206",
    "end": "217381"
  },
  {
    "text": "This not only helps you\nmanage certain regular tasks",
    "start": "217665",
    "end": "220271"
  },
  {
    "text": "by firing simple\ncommands or scripts,",
    "start": "220313",
    "end": "222489"
  },
  {
    "text": "but it also helps you automate\nmost of your maintenance operations",
    "start": "222676",
    "end": "225524"
  },
  {
    "text": "through scheduled\nPowerShell scripts.",
    "start": "225549",
    "end": "227597"
  },
  {
    "text": "That was a lot of useful info Jen.",
    "start": "228820",
    "end": "230612"
  },
  {
    "text": "I'm going to download",
    "start": "230834",
    "end": "232080"
  },
  {
    "text": "the AWS Tools for Windows\nPowerShell right away",
    "start": "232159",
    "end": "234535"
  },
  {
    "text": "and give it a try.",
    "start": "234560",
    "end": "235903"
  },
  {
    "start": "237000",
    "end": "282000"
  },
  {
    "text": "The hands-on lab on \"AWS Tools for\nWindows PowerShell: Getting Started\"",
    "start": "237381",
    "end": "242426"
  },
  {
    "text": "will enable you to set up a Windows\nServer instance on Amazon EC2",
    "start": "242644",
    "end": "246996"
  },
  {
    "text": "and install AWS Tools\nfor Windows PowerShell.",
    "start": "247252",
    "end": "250633"
  },
  {
    "text": "Set up an AccessKey-based\nauthentication.",
    "start": "251164",
    "end": "254200"
  },
  {
    "text": "Create, modify, and delete\na new Amazon EC2 instance",
    "start": "254420",
    "end": "258413"
  },
  {
    "text": "using the cmdlets\nrunning in PowerShell ISE.",
    "start": "258515",
    "end": "262049"
  },
  {
    "text": "Set up token-based authentication.",
    "start": "262867",
    "end": "265491"
  },
  {
    "text": "Handle events in PowerShell",
    "start": "265939",
    "end": "267733"
  },
  {
    "text": "and send notifications\nusing Amazon SNS.",
    "start": "267865",
    "end": "271910"
  },
  {
    "text": "Please complete the hands-on lab\nfor this video",
    "start": "272952",
    "end": "275302"
  },
  {
    "text": "at https://run.qwiklabs.com",
    "start": "275374",
    "end": "281412"
  }
]