[
  {
    "text": "we have a packed agenda today so with no further Ado I'd like to Welcome Matt Wood technology evangelist for AWS on",
    "start": "240",
    "end": "6919"
  },
  {
    "text": "stage thank you thanks guys so hello everybody my",
    "start": "6919",
    "end": "13839"
  },
  {
    "text": "name is Matt Wood I am the technology evangelist for Amazon web services I cover the whole of Europe the Middle East and Africa and it's my job to",
    "start": "13839",
    "end": "20160"
  },
  {
    "text": "answer any questions uh that customers have about cloud computing in general uh talk to smart people such as yourselves",
    "start": "20160",
    "end": "25960"
  },
  {
    "text": "about their usage of AWS and it's my privilege today to be here with you to talk to you about some of the new things",
    "start": "25960",
    "end": "32200"
  },
  {
    "text": "new features new services that we've been rolling out so as CLA says this always gets left to the end uh so we",
    "start": "32200",
    "end": "37320"
  },
  {
    "text": "really want to thank you uh for being here you're all busy people uh so really want to thank you it's a privilege really to be able to be here with you",
    "start": "37320",
    "end": "43559"
  },
  {
    "text": "today to talk about uh what we're doing at Amazon in the cloud computing space uh so we're going to talk a little bit",
    "start": "43559",
    "end": "49280"
  },
  {
    "text": "about what's new uh with AWS uh we roll features out uh really quickly if you hadn't noticed uh so I checked back on",
    "start": "49280",
    "end": "55520"
  },
  {
    "text": "our blog and our newsletters that I'm sure you all uh you all receive uh if some of you may even be receiving them",
    "start": "55520",
    "end": "60879"
  },
  {
    "text": "at this moment because they're going out of the moment and we're rolling out about eight major updates on new Services each and every month and so the",
    "start": "60879",
    "end": "67560"
  },
  {
    "text": "feedback that we've received uh from our customers is that it can be kind of taxing to keep up with our rate of",
    "start": "67560",
    "end": "73720"
  },
  {
    "text": "innovation and so rather than slow that rate down what we're going to do is try and be a bit more communicative uh with",
    "start": "73720",
    "end": "78960"
  },
  {
    "text": "events like this as to what these new features are what these new services are and how they fit into your usage of the",
    "start": "78960",
    "end": "84320"
  },
  {
    "text": "AWS Cloud platform um so um one thing I'm particularly wanted to call out because I think it talks to the part of",
    "start": "84320",
    "end": "90200"
  },
  {
    "text": "what we're trying to do at Amazon uh is our price drops uh so with the Amazon Cloud we've dropped prices uh 17 times",
    "start": "90200",
    "end": "97200"
  },
  {
    "text": "uh since we got started about five years ago without any real competitive need to do so and all of you benefit from those",
    "start": "97200",
    "end": "102799"
  },
  {
    "text": "price drops each and every time and the way that we achieve those price drops is basically through better efficiency",
    "start": "102799",
    "end": "108240"
  },
  {
    "text": "better economies of scale so as our business starts to grow grow and grow and grow uh we can uh operate our",
    "start": "108240",
    "end": "114600"
  },
  {
    "text": "infrastructure in a much more costeffective way and it's our commitment to be able to pass those savings uh back on to you our customers",
    "start": "114600",
    "end": "121000"
  },
  {
    "text": "and a really good example of that is with S3 so this is the uh graph showing the growth of S3 we launched S3 the",
    "start": "121000",
    "end": "128160"
  },
  {
    "text": "simple storage service back in Q4 2006 and here you can see the numbers and how they're changing all the way up to Q4",
    "start": "128160",
    "end": "134319"
  },
  {
    "text": "2011 and we're currently at 762 billion objects uh in Amazon S3 and we're",
    "start": "134319",
    "end": "139640"
  },
  {
    "text": "dealing and serving those at a rate of around 500,000 Peak transactions per second so as we start to achieve more of",
    "start": "139640",
    "end": "146360"
  },
  {
    "text": "these economies of scale we're going to be passing the savings back to you and we did that recently with a a price drop",
    "start": "146360",
    "end": "152239"
  },
  {
    "text": "for all the S3 prices we're also committed to rolling out new geographies and rolling out uh data centers into new",
    "start": "152239",
    "end": "159319"
  },
  {
    "text": "regions uh this is what our Global infrastructure map looks like at the moment uh is continually changing it seems like every time we do one of these",
    "start": "159319",
    "end": "165159"
  },
  {
    "text": "talks I have to update my slides um so now we have uh three different regions",
    "start": "165159",
    "end": "171000"
  },
  {
    "text": "uh regions are what you can think of them as basically mini clouds that contain a collection of availability zones into which you can store your data",
    "start": "171000",
    "end": "177400"
  },
  {
    "text": "and run your applications so we've got three of those regions now on the on the west coast of the US US East over on the",
    "start": "177400",
    "end": "184200"
  },
  {
    "text": "on the East Coast we moved into South South America in down in sou Paulo we've got our data centers in Europe in Dublin",
    "start": "184200",
    "end": "190680"
  },
  {
    "text": "we're also in Singapore and Tokyo as well and we're committed to rolling out more of these so if you want a particular region to be opened let us",
    "start": "190680",
    "end": "197000"
  },
  {
    "text": "know and we're also rolling out more and more Edge locations uh for cloudfront our content delivery Network so we",
    "start": "197000",
    "end": "202959"
  },
  {
    "text": "really recently rolled out new pop locations points of presence uh in Osaka Sweden uh and more across uh uh the East",
    "start": "202959",
    "end": "210680"
  },
  {
    "text": "Middle and west coast of America so we're committed to carry on doing this and uh we hope you guys like using these",
    "start": "210680",
    "end": "217319"
  },
  {
    "text": "surfaces so in addition to these new regions uh we rolled out a ton of other things that I'm not going to have talk",
    "start": "217319",
    "end": "222959"
  },
  {
    "text": "time to talk about today uh if you want to learn a bit more about these all the details are on our website and uh if you",
    "start": "222959",
    "end": "228480"
  },
  {
    "text": "are looking for the sort of canonical source of where we announce these updates uh you can always check the monthly newsletter or our blog at",
    "start": "228480",
    "end": "236439"
  },
  {
    "text": "aws.com every time we roll out a new feature typically at midnight um that's where we post them as soon as the",
    "start": "236439",
    "end": "243040"
  },
  {
    "text": "services are available uh so we've done S3 object exploration where you can schedule deletion of S3 objects useful",
    "start": "243040",
    "end": "248760"
  },
  {
    "text": "for log rotation we're going to we announced windows on the free tier so you can run Windows free on ec2 we're",
    "start": "248760",
    "end": "254480"
  },
  {
    "text": "going to talk a little bit about VPC everywhere uh we launched ec2 instance status where you can poll and check the",
    "start": "254480",
    "end": "260440"
  },
  {
    "text": "status of your of your running instances and the infrastructure underneath them and just as I was coming up on stage I",
    "start": "260440",
    "end": "266440"
  },
  {
    "text": "had to add elasticache uh which we've added now and is available in Us West 2 and in our South America region so these",
    "start": "266440",
    "end": "272440"
  },
  {
    "text": "things move very very quickly and we're not going to have a lot of time to talk about these but uh things are moving moving quickly so this is what we are",
    "start": "272440",
    "end": "278759"
  },
  {
    "text": "going to talk about um I'm going to start off by introducing Dynamo DB our nosql database service going to move on",
    "start": "278759",
    "end": "285440"
  },
  {
    "text": "and talk a little bit about analytics in the cloud then we're going to have a coffee break um we're going to talk about Cloud economics we're going to",
    "start": "285440",
    "end": "291840"
  },
  {
    "text": "talk about uh integrating your Enterprise it applications and infrastructure with AWS um and just",
    "start": "291840",
    "end": "299280"
  },
  {
    "text": "again to show how quickly these things move um we did have to rearrange our schedule somewhat so some of you may",
    "start": "299280",
    "end": "304840"
  },
  {
    "text": "have seen this original schedule on the website when you signed up uh but just last night uh we announced a new service",
    "start": "304840",
    "end": "309880"
  },
  {
    "text": "called Amazon simple workflow and so I'm going to rejig the schedule a little bit to try and give you a bit of insight",
    "start": "309880",
    "end": "314960"
  },
  {
    "text": "around Amazon's simple workflow uh it's been well received so far uh we've got a lot of good feedback about it so I want",
    "start": "314960",
    "end": "320800"
  },
  {
    "text": "to give you an opportunity to learn a little bit more about it here so we're going to talk about Dynamo DB some analytics work that we're doing uh",
    "start": "320800",
    "end": "326600"
  },
  {
    "text": "simple workflow and then we'll have a break for coffee and uh we'll carry on after that so as I'm sure many of you",
    "start": "326600",
    "end": "332880"
  },
  {
    "text": "know the Amazon platform is made up of a collection of tools of building blocks",
    "start": "332880",
    "end": "338080"
  },
  {
    "text": "infrastructure building blocks that you can arrange in any way that you like so we have storage services like S3 and EBS",
    "start": "338080",
    "end": "344120"
  },
  {
    "text": "we have compute Services uh ec2 uh we offer a range of databases and a collection of ancillary tools and uh",
    "start": "344120",
    "end": "350840"
  },
  {
    "text": "premium support offerings to help you tie all of these bits and pieces together now we've been innovating on your behalf across all of these uh but",
    "start": "350840",
    "end": "357560"
  },
  {
    "text": "just to get started I want to talk about database uh so let's get started there so when I",
    "start": "357560",
    "end": "362880"
  },
  {
    "text": "think about databases I really think of databases in two separate groups uh traditional what you might consider",
    "start": "362880",
    "end": "368400"
  },
  {
    "text": "traditional relational databases uh that support uh query languages and a sort of newer breed of what are people are",
    "start": "368400",
    "end": "374560"
  },
  {
    "text": "terming no esql databases uh internally we call them yes SQL and no SQL so",
    "start": "374560",
    "end": "380720"
  },
  {
    "text": "relational databases is just what I wanted to touch on to start with um so of course you're probably all familiar",
    "start": "380720",
    "end": "385840"
  },
  {
    "text": "that you can actually run any database that you like on Amazon ec2 and we have customers that are running their own MySQL clusters they're running IBM db2",
    "start": "385840",
    "end": "393199"
  },
  {
    "text": "they're running Oracle and all the rest of it which is certified for production use on AWS now uh post gr and any other",
    "start": "393199",
    "end": "398919"
  },
  {
    "text": "number of relational databases that you that you could imagine um but there's quite a lot of pain and effort that goes",
    "start": "398919",
    "end": "405199"
  },
  {
    "text": "into managing and running these services and so about a year and a half ago uh two years ago we launched the relational",
    "start": "405199",
    "end": "411199"
  },
  {
    "text": "database service RDS and this tried to take away some of the undifferentiated work of running relational databases in",
    "start": "411199",
    "end": "417599"
  },
  {
    "text": "the cloud this is a managed MySQL and Oracle database Service uh in the same way that you provision compute",
    "start": "417599",
    "end": "423800"
  },
  {
    "text": "infrastructure with RDS you provision database infrastructure and you do that with mySQL and also with Oracle so it's",
    "start": "423800",
    "end": "431440"
  },
  {
    "text": "pretty simple to use and it has some really nice features again designed to try and remove some of the common pain",
    "start": "431440",
    "end": "436879"
  },
  {
    "text": "points of running databases in the cloud uh so we have scalable uh storage under the hood uh you can run uh storage on",
    "start": "436879",
    "end": "443639"
  },
  {
    "text": "EBS beneath that we have very rapid provisioning so you can spin up test databases you can spin up production",
    "start": "443639",
    "end": "448960"
  },
  {
    "text": "datab you can copy those into integration uh environments and all those sort of things we have high availability options so with a single",
    "start": "448960",
    "end": "455680"
  },
  {
    "text": "API call or a single click uh you can actually turn on high availability features in MySQL which means that you",
    "start": "455680",
    "end": "461240"
  },
  {
    "text": "have a master and a slave running across availability zones that's super useful again something you can set up just on",
    "start": "461240",
    "end": "466680"
  },
  {
    "text": "uh ec2 but which is timec consuming to manage and and set up on all the rest of it so high availability options with a",
    "start": "466680",
    "end": "472440"
  },
  {
    "text": "single click and we have scalable compute so you can vertically scale your database depending on your requirements",
    "start": "472440",
    "end": "478080"
  },
  {
    "text": "you can move to higher instances sizes when you have additional capacity needs and scale them back down because you're only paying for what you use there's a",
    "start": "478080",
    "end": "484800"
  },
  {
    "text": "cost saving associated with that when you scale back down uh we also announced a lastic cache uh this is an inmemory",
    "start": "484800",
    "end": "490960"
  },
  {
    "text": "mcash D compliant uh caching Service uh it basically forms collections of caching clusters uh you can spin this up",
    "start": "490960",
    "end": "497919"
  },
  {
    "text": "and put it in front of your relational database or any database that you're running uh to speed up uh queries reduce",
    "start": "497919",
    "end": "503879"
  },
  {
    "text": "the overhead of running those queries on your database so elasticache now available across all of our regions I",
    "start": "503879",
    "end": "510560"
  },
  {
    "text": "believe and a really good service to get your head around if you will need additional performance particularly for read heavy",
    "start": "510560",
    "end": "515959"
  },
  {
    "text": "applications um and when we think about high performance databases uh I really think of them in in terms of these three",
    "start": "515959",
    "end": "521599"
  },
  {
    "text": "different characteristics so as you try to increase the performance of your database your relational database you",
    "start": "521599",
    "end": "527000"
  },
  {
    "text": "try and increase the throughput and we have some services to help you to do that uh so we have push button scaling",
    "start": "527000",
    "end": "533120"
  },
  {
    "text": "allowing you to scale up the compute uh to allow additional throughput through your database larger queries and higher",
    "start": "533120",
    "end": "538880"
  },
  {
    "text": "number of of queries we also have read replicas which allow you to set up a collection of readon slaves uh you can",
    "start": "538880",
    "end": "545240"
  },
  {
    "text": "then point your reporting or any read activity to your slaves take that pressure off your master database and",
    "start": "545240",
    "end": "550600"
  },
  {
    "text": "there's an asynchronous feed uh with a replication lag obviously uh back into the read replicas the lag is usually",
    "start": "550600",
    "end": "557360"
  },
  {
    "text": "very very small and you can monitor that using our cloudwatch monitoring service and of course you can put elastic cach or a caching layer in front of those",
    "start": "557360",
    "end": "563760"
  },
  {
    "text": "databases to try and increase throughput further we're try to increase availability and for that we have this",
    "start": "563760",
    "end": "569200"
  },
  {
    "text": "multi-az setting uh so you can turn that on with your relational databases and you also try and reduce latency and so",
    "start": "569200",
    "end": "575000"
  },
  {
    "text": "again you can put a caching layer in front of your database you get much lower latency in memory AC access to",
    "start": "575000",
    "end": "580240"
  },
  {
    "text": "your data rather than having to go back to disk and go back to your database layer but there is a problem with",
    "start": "580240",
    "end": "585480"
  },
  {
    "text": "relational databases and that is that performance typically decreases as the data set that you're working with and",
    "start": "585480",
    "end": "590760"
  },
  {
    "text": "the scale that you're working uh increases so the goal of databases when you're writing an application on top of",
    "start": "590760",
    "end": "596959"
  },
  {
    "text": "them is really to offer predictable consistent performance that's the goal the blue dotted line here on the graph",
    "start": "596959",
    "end": "603079"
  },
  {
    "text": "we have scale along the bottom and we have performance up the side some measure of performance so you want this",
    "start": "603079",
    "end": "608240"
  },
  {
    "text": "performance to be predictable and consistent uh for your application so you know how long queries are going to take and you don't want that to decrease",
    "start": "608240",
    "end": "615160"
  },
  {
    "text": "over time the problem with relational databases is that it's exactly what happens as scale starts to increase as",
    "start": "615160",
    "end": "620800"
  },
  {
    "text": "you start adding more Masters more slaves more overhead uh as you start to work with bigger data sets queries",
    "start": "620800",
    "end": "626200"
  },
  {
    "text": "degrade query query performance degrades really really quickly and that continues to dip down as you go on as scale starts",
    "start": "626200",
    "end": "633240"
  },
  {
    "text": "to increase and so really as you can see by this big red box this problem gets worse and worse and worse as scale",
    "start": "633240",
    "end": "639279"
  },
  {
    "text": "increases so the more successful your business the more successful your application the worse your performance is going to be it degrades with scale um",
    "start": "639279",
    "end": "647560"
  },
  {
    "text": "but that red box masks a whole world of pain basically there's a lot more problems in there than just degraded performance uh because customers then",
    "start": "647560",
    "end": "654399"
  },
  {
    "text": "have to try and solve that performance degradation so you maintain that that goal of consistent predictable",
    "start": "654399",
    "end": "660440"
  },
  {
    "text": "performance so customer activity had turned to things like data sharding uh so putting uh half of your customers on",
    "start": "660440",
    "end": "666440"
  },
  {
    "text": "one database service half your customers on the other sharding by surname or account name number and all that sort of",
    "start": "666440",
    "end": "671639"
  },
  {
    "text": "thing uh working with caching layers and managing those uh if you're not working in the cloud of course you have to actually go out and physically provision",
    "start": "671639",
    "end": "678240"
  },
  {
    "text": "this new infrastructure in your data center there's still unbelievably some people that work like that um so provisioning can take a long time uh",
    "start": "678240",
    "end": "684959"
  },
  {
    "text": "some Enterprise customers are used to three six month weits uh between uh signing off that payment order and",
    "start": "684959",
    "end": "690240"
  },
  {
    "text": "actually getting the bare metal ready to use in their data centers so provisioning can be a really big problem",
    "start": "690240",
    "end": "695760"
  },
  {
    "text": "plus you've got the whole management of the over management overhead of the of the cluster and any fault management that might happen so everything fails",
    "start": "695760",
    "end": "702800"
  },
  {
    "text": "all the time and that's typically true of computer systems and so fault management it should be a big part of",
    "start": "702800",
    "end": "708279"
  },
  {
    "text": "managing these uh these database Services pretty much at any scale so there's a lot of undifferentiated heavy",
    "start": "708279",
    "end": "714360"
  },
  {
    "text": "lifting all of these things that I just talked about data sharding managing uh infrastructure ructure um uh working",
    "start": "714360",
    "end": "721160"
  },
  {
    "text": "with provisioning this doesn't add any Direct Value to your business or to your customers and so we consider this",
    "start": "721160",
    "end": "726560"
  },
  {
    "text": "undifferentiated it's just the cost of doing business it's stuff you have to do to get done what you're trying to do in",
    "start": "726560",
    "end": "731680"
  },
  {
    "text": "the first place get your project to Market iterate more quickly uh and at Amazon when we see this undifferentiated",
    "start": "731680",
    "end": "737639"
  },
  {
    "text": "heavy lifting causing pain for our customers we like to try and innovate and produce new Services which solve",
    "start": "737639",
    "end": "743199"
  },
  {
    "text": "these spe specific problems and so we did that uh we launched this new service Dynamo DB a couple of months ago now",
    "start": "743199",
    "end": "750240"
  },
  {
    "text": "it's been relatively well received and Dynamo DB is a fully managed nosql database Service uh so this is something",
    "start": "750240",
    "end": "757880"
  },
  {
    "text": "that you can just switch on as and when you need it it's a nosql database service and it tries to address some of",
    "start": "757880",
    "end": "763360"
  },
  {
    "text": "these common pain points of dealing with uh data sets so it offers extremely fast",
    "start": "763360",
    "end": "770079"
  },
  {
    "text": "performance it's backed on ssds uh to make sure that that uh that is uh true",
    "start": "770079",
    "end": "775560"
  },
  {
    "text": "and it's more importantly offers consistently fast performance so irrespective of the size of your usage",
    "start": "775560",
    "end": "781720"
  },
  {
    "text": "irrespective of your size of your data sets uh Dynamo DB will scale to offer consistently fast performance and it",
    "start": "781720",
    "end": "788040"
  },
  {
    "text": "offers seamless scalability this means that it will scale up and scale down it'll manage your data uh",
    "start": "788040",
    "end": "793600"
  },
  {
    "text": "re-provisioning under the hood for you all you've got to do is worry about putting the data in and then getting the data out when you need it seamless",
    "start": "793600",
    "end": "800000"
  },
  {
    "text": "scalability as you need additional scale we'll talk about how that works in a minute so some of the highlights uh we",
    "start": "800000",
    "end": "806199"
  },
  {
    "text": "deal with very very low latency so you can single digit millisecond latencies on",
    "start": "806199",
    "end": "811680"
  },
  {
    "text": "Dynamo DB so that's less than 5 milliseconds for a read and less than 10 milliseconds for writs uh and all of",
    "start": "811680",
    "end": "818240"
  },
  {
    "text": "this as I said is backed on ssds that's how we get it to be uh so fast and this is uh uh very very important if you're",
    "start": "818240",
    "end": "824800"
  },
  {
    "text": "dealing with high throughput services so anything to do with social gaming anything to do with analytics anything",
    "start": "824800",
    "end": "830040"
  },
  {
    "text": "where you have a lot of the velocity of data is high and growing so single",
    "start": "830040",
    "end": "835120"
  },
  {
    "text": "digigit millisecond latencies and here you can see some uh some internal figures of the read latencies so the",
    "start": "835120",
    "end": "841040"
  },
  {
    "text": "blue line is the average uh we've got P99 and P 99.9 performance figures and",
    "start": "841040",
    "end": "846399"
  },
  {
    "text": "this is milliseconds up the side so you can see just how consistent that is as uh as reads go on we're also dealing",
    "start": "846399",
    "end": "853240"
  },
  {
    "text": "here with massive scale so there are no table siiz limits uh with Dynamo DB and",
    "start": "853240",
    "end": "858480"
  },
  {
    "text": "you have unlimited storage under the hood uh so you can scale up as much as you need to uh without having to worry",
    "start": "858480",
    "end": "864240"
  },
  {
    "text": "about provisioning the database underneath without having to worry about that consistency of performance degrading as your database",
    "start": "864240",
    "end": "870440"
  },
  {
    "text": "grows as I say seamless scale so we do the live repartitioning of your data under the hood you don't have to worry",
    "start": "870440",
    "end": "876880"
  },
  {
    "text": "about um maintaining in um um instances or provisioning instances or managing them when they fail and all those sort",
    "start": "876880",
    "end": "882920"
  },
  {
    "text": "of things Dynamo DB handles all of that for you uh you just work on your data model and on your application and then",
    "start": "882920",
    "end": "888560"
  },
  {
    "text": "think about the throughput that your application is going to need so the goal here is to really create uh zero Administration uh database service where",
    "start": "888560",
    "end": "896000"
  },
  {
    "text": "you can just uh start and get using start using it straight away and again",
    "start": "896000",
    "end": "901079"
  },
  {
    "text": "we're aiming for uh predictable performance and we do that through something called provision throughput and I'll talk a little bit about exactly",
    "start": "901079",
    "end": "906839"
  },
  {
    "text": "what that means in a second um just because it's fast doesn't necessarily mean that it's all in memory so Dynamo",
    "start": "906839",
    "end": "914480"
  },
  {
    "text": "DB has durable and available data data storage it's consistent and it has Dison",
    "start": "914480",
    "end": "920519"
  },
  {
    "text": "rights so you get the acknowledgements when a right has been has succeeded only when that has been written to a physical",
    "start": "920519",
    "end": "926440"
  },
  {
    "text": "dis and when that has been copied across multiple data centers and again zero Administration I can't stress this",
    "start": "926440",
    "end": "932880"
  },
  {
    "text": "enough managing databases at any sort of scale managing Masters and slaves and instances can be very very timec",
    "start": "932880",
    "end": "938319"
  },
  {
    "text": "consuming and it takes Your Eye Off the Ball it takes your attention away from working on your project and growing out",
    "start": "938319",
    "end": "944199"
  },
  {
    "text": "your businesses so zero Administration on Dynamo DB so I mentioned their provision throughput uh this is the tool that we",
    "start": "944199",
    "end": "950880"
  },
  {
    "text": "use to get this predictable uh performance uh so let's dig into this in a bit more depth what is provision",
    "start": "950880",
    "end": "956639"
  },
  {
    "text": "throughput so provision through put allows you to reserve the required iops levels that you need for your",
    "start": "956639",
    "end": "962720"
  },
  {
    "text": "application so you can do this per table uh that's what we call a collection of of items in Dynamo DB you can set this",
    "start": "962720",
    "end": "970079"
  },
  {
    "text": "uh when you create that table and you can also scale it dynamically via the API or again through the uh through the",
    "start": "970079",
    "end": "976319"
  },
  {
    "text": "command uh through the um web Management console and scale that up and down so you have a reserved level of iops that",
    "start": "976319",
    "end": "982319"
  },
  {
    "text": "your application needs and that's how we deliver that consistent level of uh of performance uh this is the sort of Json",
    "start": "982319",
    "end": "988920"
  },
  {
    "text": "query that you might make this is part of the API so when you first provision your new table uh you do just give the",
    "start": "988920",
    "end": "994600"
  },
  {
    "text": "provision throughput so you tell the number of reads per second that you want to make and the number of Rights per second that you want to make against",
    "start": "994600",
    "end": "999880"
  },
  {
    "text": "that database Dynam DB will go off provision all the infrastructure necessary to give you that um that predictable provision throughput uh",
    "start": "999880",
    "end": "1006759"
  },
  {
    "text": "going forwards and you can adjust these using the API whenever you need to and you can scale at any time so one",
    "start": "1006759",
    "end": "1013440"
  },
  {
    "text": "of the goals of Dynamo DB was that there would be no downtime during scaling so on uh relational databases typically",
    "start": "1013440",
    "end": "1020480"
  },
  {
    "text": "when you need to scale up add more storage or add more capacity you need to freeze that database you need to go into a maintenance mode in order to be able",
    "start": "1020480",
    "end": "1026839"
  },
  {
    "text": "to scale the infrastructure beneath it uh that's not true with Dynamo DB uh you can scale with uh without any downtime",
    "start": "1026839",
    "end": "1032678"
  },
  {
    "text": "you just make the API call change the requirement of your iops and Dynamo DB will make sure that the uh the changes",
    "start": "1032679",
    "end": "1038798"
  },
  {
    "text": "are made under the hood but the database remains available so you can scale without downtime and uh you basically",
    "start": "1038799",
    "end": "1045079"
  },
  {
    "text": "pay for throughput this is how you're actually going to pay for it so you pay for those reserved iops um so the",
    "start": "1045079",
    "end": "1052320"
  },
  {
    "text": "pricing breaks down a little bit like this so per 1 kilobyte item uh you pay",
    "start": "1052320",
    "end": "1057640"
  },
  {
    "text": "uh 1 cent per hour for every 10 rights per second got it 10 one cents per hour",
    "start": "1057640",
    "end": "1064200"
  },
  {
    "text": "for every 10 rights per second and one cent per hour for every 50 strongly consistent reads per second and these",
    "start": "1064200",
    "end": "1070559"
  },
  {
    "text": "basically evaluate to what we call read and right units so if you're in the console and you see reference to read or write units uh this is what we what we",
    "start": "1070559",
    "end": "1077440"
  },
  {
    "text": "talk about 10 rights per second is one right unit 5050 strongly consistent reads per second is one read unit you",
    "start": "1077440",
    "end": "1084320"
  },
  {
    "text": "can get double uh the amount of reads per second for the same price if you're happy with eventual consistency so if",
    "start": "1084320",
    "end": "1090520"
  },
  {
    "text": "you don't need strongly consistent reads uh you can opt for that in the API and get twice as many consistent reads for",
    "start": "1090520",
    "end": "1096240"
  },
  {
    "text": "your penny as you do with consistent reads sorry inconsistent reads as you do for consistent reads so that's all per 1",
    "start": "1096240",
    "end": "1102880"
  },
  {
    "text": "kiloby so to work out your pricing you basically multiply the rights per second times the size of your item that's the",
    "start": "1102880",
    "end": "1110000"
  },
  {
    "text": "attributes in that you're going to store in Dynamo DB and that's the the price you're going to pay per 10 rights per",
    "start": "1110000",
    "end": "1115080"
  },
  {
    "text": "second and it roughly works out to this so per again one kilobyte item it's around 28 cents per million rights and",
    "start": "1115080",
    "end": "1122200"
  },
  {
    "text": "around uh 5.6 cents per million uh strongly consistent reads so it's a very",
    "start": "1122200",
    "end": "1128000"
  },
  {
    "text": "costeffective solution and ultimately in addition to that you pay for storage under the hood",
    "start": "1128000",
    "end": "1133480"
  },
  {
    "text": "so you're going to pay a dollar per gigabyte per month of index storage so that's how the payment breaks down",
    "start": "1133480",
    "end": "1139000"
  },
  {
    "text": "this is what the data model looks like uh it's a table as you might expect uh it's called a table in Dynamo DB parand",
    "start": "1139000",
    "end": "1146080"
  },
  {
    "text": "and inside those table the cells if you like uh we refer to those as items uh so here we have an item which is a",
    "start": "1146080",
    "end": "1152440"
  },
  {
    "text": "collection of key value pairs basically um we have an image ID at the top that",
    "start": "1152440",
    "end": "1157559"
  },
  {
    "text": "might be a primary key we can have a date a title which is a flower and each of these can have uh have a particular",
    "start": "1157559",
    "end": "1164280"
  },
  {
    "text": "type so we can support numbers and strings and collections of numbers and collections of strings as you see with",
    "start": "1164280",
    "end": "1169520"
  },
  {
    "text": "tags at the bottom here so we tagged this with a collection of strings and I can fill those uh those items these",
    "start": "1169520",
    "end": "1175679"
  },
  {
    "text": "collections buckets of key value pairs up in my database and create as many of those as I like because I have unlimited",
    "start": "1175679",
    "end": "1181600"
  },
  {
    "text": "storage under the hood you access these uh through the primary key uh so you elect a primary",
    "start": "1181600",
    "end": "1188480"
  },
  {
    "text": "key when you create your table um so you just go back and you can uh request by ID for example uh but we also support",
    "start": "1188480",
    "end": "1195280"
  },
  {
    "text": "composite key queries uh so this is useful if you want to have uh a primary key and a secondary key which may be a",
    "start": "1195280",
    "end": "1201960"
  },
  {
    "text": "range so for example you could ask Dynamo DB give me all of the orders uh for this customer within this date range",
    "start": "1201960",
    "end": "1208600"
  },
  {
    "text": "so you can do ranged queries against composite keys with Dynamo DB this is what it looks like in the console uh",
    "start": "1208600",
    "end": "1214600"
  },
  {
    "text": "it's pretty straightforward uh so the table name you give it the primary key uh you say whether you want it hashed",
    "start": "1214600",
    "end": "1219799"
  },
  {
    "text": "which is a single primary key or hashed with a range which is the composite primary keys that I described and you",
    "start": "1219799",
    "end": "1225000"
  },
  {
    "text": "can give it the attribute name whether it's a string or a number um and that's it pretty much you click continue you",
    "start": "1225000",
    "end": "1230919"
  },
  {
    "text": "provision the throughput capacity that you need going forwards so your read capacity units your right capacity units",
    "start": "1230919",
    "end": "1237120"
  },
  {
    "text": "and we've also got a little calculator there so if you check the check box It'll ask you how big your units are and all the rest of it try and guide you",
    "start": "1237120",
    "end": "1243200"
  },
  {
    "text": "through to give you an estimate of the amount of iops and the price you're going to pay for the capacity uh in addition to that we have",
    "start": "1243200",
    "end": "1250120"
  },
  {
    "text": "uh Dynamo DB hooked into cloudwatch our metric service and we also by default allow you to create a basic alarm uh so",
    "start": "1250120",
    "end": "1257760"
  },
  {
    "text": "this will send uh an SNS notification a simple notification service notification",
    "start": "1257760",
    "end": "1262840"
  },
  {
    "text": "uh when your table's request rate exceeds a certain percentage of your provision throughput uh so here you can",
    "start": "1262840",
    "end": "1269520"
  },
  {
    "text": "it will tell you this will be triggered when read capacity is consumed over 800 iops right capacity uh units are",
    "start": "1269520",
    "end": "1276840"
  },
  {
    "text": "consumed above 400 uh right capacity units and you can enter an email address there and it will send you an email when",
    "start": "1276840",
    "end": "1283480"
  },
  {
    "text": "you're starting to uh starting to reach the limits of your provisioned iops and you can make a decision about whether to",
    "start": "1283480",
    "end": "1289240"
  },
  {
    "text": "scale that up when you want to uh it's a really simple API so it's really simple",
    "start": "1289240",
    "end": "1294799"
  },
  {
    "text": "to integrate this into your application this is one of the things I think is most interesting about Dynamo DB there's only 12 API calls in the whole",
    "start": "1294799",
    "end": "1300760"
  },
  {
    "text": "documentation so you can read through it uh really really quickly and uh without any trouble and you can start using it",
    "start": "1300760",
    "end": "1306760"
  },
  {
    "text": "straight away we also have Atomic increment and decrement on number attributes so you can do that across the",
    "start": "1306760",
    "end": "1311960"
  },
  {
    "text": "whole table and if you do want to trigger automatic scaling so by default we'll",
    "start": "1311960",
    "end": "1317039"
  },
  {
    "text": "send you that email uh but really it's just a simple notification Service uh alert so if you do want to trigger",
    "start": "1317039",
    "end": "1322679"
  },
  {
    "text": "automatic scaling you can just subscribe to that SNS topic and you'll get that programmatic notification as you're",
    "start": "1322679",
    "end": "1328520"
  },
  {
    "text": "starting to reach the limits so we'll do the email address for you automatically but you can also subscribe uh pretty",
    "start": "1328520",
    "end": "1333799"
  },
  {
    "text": "much anything else so text message alerts or programmatic endpoints that will get pinged uh when you start to",
    "start": "1333799",
    "end": "1339480"
  },
  {
    "text": "reach the limits of the the uh requested iops that you have in place and uh you could for example uh write the following",
    "start": "1339480",
    "end": "1346320"
  },
  {
    "text": "script uh so here's a really really simple script uh it's in PHP my apologies to my Ruby Brethren uh but",
    "start": "1346320",
    "end": "1352640"
  },
  {
    "text": "right at the top here what we're going to do is we're going to get the uh the resource so we're just going to call the Dynamo DB table and this is code which",
    "start": "1352640",
    "end": "1359200"
  },
  {
    "text": "is going to be triggered when we start to reach let's say 80% of our provision throughput uh we'll get from the API uh",
    "start": "1359200",
    "end": "1365880"
  },
  {
    "text": "the provision throughput in terms of read capacity and write capacity and then we'll just double it and we'll issue that back and commit it back to",
    "start": "1365880",
    "end": "1372039"
  },
  {
    "text": "the table uh give the update table command one of the other API calls give it the table name and the new provision",
    "start": "1372039",
    "end": "1378600"
  },
  {
    "text": "throughput there and Dynamo DB will go off and increase the throughput for us and we could have something similarly to",
    "start": "1378600",
    "end": "1384159"
  },
  {
    "text": "scale down when we start to reach another operational threshold and our capacity uh needs start to",
    "start": "1384159",
    "end": "1391039"
  },
  {
    "text": "decrease so there's uh strong consistency in Dynamo DB uh so wres are always consistent uh reads are",
    "start": "1391039",
    "end": "1397960"
  },
  {
    "text": "consistent or eventually consistent they're eventually consistent by default but you can choose when you make the request whether you want to make",
    "start": "1397960",
    "end": "1403880"
  },
  {
    "text": "consistent reads or eventually consistent reads and eventually consistent reads are much cheaper to do at the infrastructure level so that's",
    "start": "1403880",
    "end": "1409440"
  },
  {
    "text": "why you get more of them uh per per read unit and very high levels of data durability uh so rights occur to disk",
    "start": "1409440",
    "end": "1417720"
  },
  {
    "text": "not to memory so you don't have to worry about individual instances failing and those rights not being committed back to disk where they're easily retrievable",
    "start": "1417720",
    "end": "1424480"
  },
  {
    "text": "and rights to acknowledge once they have been made in two physical data centers so we've got high levels of durability",
    "start": "1424480",
    "end": "1429559"
  },
  {
    "text": "for your data under the hood as well this is a sort of thing which is very challenging to set up on your own running it on",
    "start": "1429559",
    "end": "1435600"
  },
  {
    "text": "et2 as I said earlier we have high levels of availability so we have region specific uh tables this is not a",
    "start": "1435600",
    "end": "1443000"
  },
  {
    "text": "specific so you don't have to worry about availability zones but we continuously replicate your data across availability zones without you having to",
    "start": "1443000",
    "end": "1449360"
  },
  {
    "text": "do anything so you get high levels of availability with Dynamo DB as well there are a few considerations you need",
    "start": "1449360",
    "end": "1455000"
  },
  {
    "text": "to make uh when working with Dynamo DB uh so uh you can only query Dynamo DB tables uh by uh by their index their",
    "start": "1455000",
    "end": "1462440"
  },
  {
    "text": "primary key or by their ranged composite key and so you can't make uh generalized queries statements against the data now",
    "start": "1462440",
    "end": "1469559"
  },
  {
    "text": "this is a really good fit for a whole world of applications uh but you do need to think about whether that's a good fit for your application and where it would",
    "start": "1469559",
    "end": "1475279"
  },
  {
    "text": "fit in uh the throughput is provisioned in 1K operations as I said earlier so uh",
    "start": "1475279",
    "end": "1480360"
  },
  {
    "text": "you have to think about the size of your objects size of your items that you're going to be storing and the maximum item",
    "start": "1480360",
    "end": "1486039"
  },
  {
    "text": "size is 64k so you can't store items larger than 64k in Dynamo DB if you do you have to split up the attributes",
    "start": "1486039",
    "end": "1492159"
  },
  {
    "text": "across multiple items and you have to back up and restore using U Amazon elastic map I'll",
    "start": "1492159",
    "end": "1498320"
  },
  {
    "text": "talk a bit more about that later on but that's a consideration as well so uh that's Dynamo DB uh that's",
    "start": "1498320",
    "end": "1505480"
  },
  {
    "text": "our nosql database offering uh but I'm sure some of you are thinking M you told",
    "start": "1505480",
    "end": "1510960"
  },
  {
    "text": "us earlier about another nosql database Amazon offers um called Simple DB uh simple DB has uh some similar design",
    "start": "1510960",
    "end": "1518520"
  },
  {
    "text": "goals as Dynam DB it opts for zero maintenance uh it's a nosql key Value",
    "start": "1518520",
    "end": "1523960"
  },
  {
    "text": "Store um but it has a few limitations um so it has a fixed limit so you can only",
    "start": "1523960",
    "end": "1530720"
  },
  {
    "text": "have a 10 GB data set under a single simple DV domain and you can only store",
    "start": "1530720",
    "end": "1536200"
  },
  {
    "text": "a billion attributes per table and there's no native data sharding in simple DB now if you don't need that",
    "start": "1536200",
    "end": "1542679"
  },
  {
    "text": "simple DB might be a good fit uh one of the advantages of simple DB is it has much more flexible queries than Dynamo",
    "start": "1542679",
    "end": "1548679"
  },
  {
    "text": "DB uh so you can do SQL like queries against all of the attributes in your table it will index all of the",
    "start": "1548679",
    "end": "1554640"
  },
  {
    "text": "attributes that means that performance can degrade as the data sets gets larger but if you have a smaller manageable",
    "start": "1554640",
    "end": "1560399"
  },
  {
    "text": "data set a simple DB is still a pretty good option if you need flexible querying of that data uh so it's really",
    "start": "1560399",
    "end": "1566880"
  },
  {
    "text": "up to you uh to choose uh the right tool for the job uh you can work with simple DB it's not deprecated or anything like",
    "start": "1566880",
    "end": "1573399"
  },
  {
    "text": "that Dynamo DB fits a slightly different use case and uh is is a great fit",
    "start": "1573399",
    "end": "1578760"
  },
  {
    "text": "particularly at at larger scale we also have a Dynamo DB free tier uh so uh",
    "start": "1578760",
    "end": "1584000"
  },
  {
    "text": "we'll provide five wres per second and 10 consistent reads per second will'll give you 100 Mega storage uh so you can",
    "start": "1584000",
    "end": "1589840"
  },
  {
    "text": "start playing around with some of this stuff more or less straight away and if your application fits nicely under these",
    "start": "1589840",
    "end": "1595440"
  },
  {
    "text": "free tier uh uh Provisions uh then you can use Dynamo DB uh for free and you only pay when you start to exceed these",
    "start": "1595440",
    "end": "1601720"
  },
  {
    "text": "limits or you want to have higher throughput or more storage and with that I'd like to open",
    "start": "1601720",
    "end": "1607320"
  },
  {
    "text": "it up to any questions anybody might have uh yes sir the back we have a",
    "start": "1607320",
    "end": "1612399"
  },
  {
    "text": "roving mic CLA",
    "start": "1612399",
    "end": "1619600"
  },
  {
    "text": "the gentleman on the end put your hand up sir thank you thanks very much I had a couple of",
    "start": "1622960",
    "end": "1629440"
  },
  {
    "text": "questions the first one was you asked us to set the iops to a perceived uh performance read and WR speed um but",
    "start": "1629440",
    "end": "1636799"
  },
  {
    "text": "it's actually charged on the actual rights or the consistent reads why are we not setting iops to a million reads a",
    "start": "1636799",
    "end": "1642440"
  },
  {
    "text": "second on every single project we do no you're charged per provision throughput so provision model not what you're",
    "start": "1642440",
    "end": "1648640"
  },
  {
    "text": "actually using and that's how you get this performance this this persistent performance I see that makes sense and",
    "start": "1648640",
    "end": "1654799"
  },
  {
    "text": "the last one was um I've got a customer in mind that could use dob uh quite well",
    "start": "1654799",
    "end": "1661159"
  },
  {
    "text": "the problem is they're they're a bit anal about single point of failure they are worried about Amazon going down as a",
    "start": "1661159",
    "end": "1666799"
  },
  {
    "text": "hole and how do we have tools to be able to replicate Amazon to another service",
    "start": "1666799",
    "end": "1672640"
  },
  {
    "text": "there I say rack space in this room without being kicked out so um we we give you tools to extract the data right",
    "start": "1672640",
    "end": "1679840"
  },
  {
    "text": "uh so uh Dynamo DB has a lot of uh of um uh Provisions in place to make sure that",
    "start": "1679840",
    "end": "1686200"
  },
  {
    "text": "there aren't single points of failure is that through the API or uh it's done under the hood right so we are cons",
    "start": "1686200",
    "end": "1693039"
  },
  {
    "text": "we're always mirroring data across availability zones in the same region for example we're making sure that",
    "start": "1693039",
    "end": "1698120"
  },
  {
    "text": "rights are made to dis before we acknowledge them and all these sort of things uh but if at any point uh you want to uh take your data out uh you can",
    "start": "1698120",
    "end": "1705200"
  },
  {
    "text": "just extract that it's just an API away basically so you can extract that we also have tight integration as I'll talk",
    "start": "1705200",
    "end": "1711399"
  },
  {
    "text": "about in a minute with uh with elastic map produ so even if you've got very very large data sets in Dynamo DB uh you",
    "start": "1711399",
    "end": "1717600"
  },
  {
    "text": "can spool those out using elastic map produce write them to a file and then you can do whatever you want with them",
    "start": "1717600",
    "end": "1722760"
  },
  {
    "text": "and there's some really good use cases F such as back up and restore changing different uh moving data from one environment to another from testing to",
    "start": "1722760",
    "end": "1729519"
  },
  {
    "text": "to QA for example and all these sort of things or running analytics on it which uh which I'll talk about in a minute is that clustering only us only or is that",
    "start": "1729519",
    "end": "1736000"
  },
  {
    "text": "to the the Irish uh the Irish um centers as well uh EMR is available uh in uh in",
    "start": "1736000",
    "end": "1743240"
  },
  {
    "text": "across regions yeah perfect thanks you're welcome yes there are the",
    "start": "1743240",
    "end": "1749799"
  },
  {
    "text": "fronts thanks Aaron sorry one second wait for the microphone",
    "start": "1749799",
    "end": "1757000"
  },
  {
    "text": "thanks uh one of the questions uh is about the attributes that you mentioned only the primary keys index do you have",
    "start": "1758000",
    "end": "1764559"
  },
  {
    "text": "anything in the pipeline that's coming up so you you going going to allow us to",
    "start": "1764559",
    "end": "1769799"
  },
  {
    "text": "uh index other attributes in the future or not so I think that is great feedback and that's feedback we've heard from a",
    "start": "1769799",
    "end": "1775279"
  },
  {
    "text": "number of other customers so nothing to announce today uh but I I think that's that's something a lot of people would want",
    "start": "1775279",
    "end": "1782519"
  },
  {
    "text": "okay any more awesome yeah go right here sir all",
    "start": "1783279",
    "end": "1791000"
  },
  {
    "text": "thanks for the the presentation can you is it possible to set a budget in advance so that you know to avoid a",
    "start": "1791000",
    "end": "1797880"
  },
  {
    "text": "runaway query consuming you know huge resources so with uh Dynamo DB because",
    "start": "1797880",
    "end": "1802919"
  },
  {
    "text": "you're provisioning the throughput that's effectively the price you're always going to pay so Dynamo DB doesn't scale you're paying for provision",
    "start": "1802919",
    "end": "1809720"
  },
  {
    "text": "throughput whether you use it or not basically and so once you set that throughput once you reserve that that",
    "start": "1809720",
    "end": "1815279"
  },
  {
    "text": "level of IO uh that's the level that you're going to pay so Dynamo DB isn't going to scale on its own to provide",
    "start": "1815279",
    "end": "1820960"
  },
  {
    "text": "more iops which is how you pay for it so the only thing is that you you're also paying for storage under the hood but",
    "start": "1820960",
    "end": "1827320"
  },
  {
    "text": "terms of iops you provision that and it's set and it's up to you as the customer as the user uh to increase or",
    "start": "1827320",
    "end": "1833000"
  },
  {
    "text": "decrease that as as necessary and that's why we have these programmatic hooks which will call out by email so you can",
    "start": "1833000",
    "end": "1839120"
  },
  {
    "text": "just go in and change it by hand or we'll make a programmatic call to a web service somewhere that you operate and",
    "start": "1839120",
    "end": "1844240"
  },
  {
    "text": "then you can make uh um business decisions based on that information you can decide whether at this point I want",
    "start": "1844240",
    "end": "1849600"
  },
  {
    "text": "to increase my iops because I'm seeing increased capacity or whether I'm perfectly happy to allow some of those",
    "start": "1849600",
    "end": "1854720"
  },
  {
    "text": "to be uh pushed back to the to the applic you're welcome yes sir oh sorry there's",
    "start": "1854720",
    "end": "1861600"
  },
  {
    "text": "one at the back sorry Hi um does Dynamo DB support any",
    "start": "1861600",
    "end": "1867519"
  },
  {
    "text": "geospatial queries like mongod DB or postr for locational stuff um I guess",
    "start": "1867519",
    "end": "1872760"
  },
  {
    "text": "you could do it with arranged query against the composite key but not natively at this point not natively okay",
    "start": "1872760",
    "end": "1877799"
  },
  {
    "text": "I have one more sorry sure um how about Forex searches so at the moment we",
    "start": "1877799",
    "end": "1882919"
  },
  {
    "text": "collect logs from a couple of thousand servers and we use elastic search and um",
    "start": "1882919",
    "end": "1888080"
  },
  {
    "text": "is Dynamo DB a candidate for replacement because I like the flexible storage side of it sure uh so again not at this time",
    "start": "1888080",
    "end": "1894960"
  },
  {
    "text": "so nothing to announce at the moment uh the the query model is limited uh to ensure that we can give this provisioned",
    "start": "1894960",
    "end": "1902000"
  },
  {
    "text": "continuous uh predictable performance but again that's great feedback and something we can take uh take back to",
    "start": "1902000",
    "end": "1907120"
  },
  {
    "text": "our teams in",
    "start": "1907120",
    "end": "1909559"
  },
  {
    "text": "Seattle how long are you provisioning the input and output for I mean if you wanted to scale up and down if I kind of",
    "start": "1912919",
    "end": "1920080"
  },
  {
    "text": "scale up for an hour can I then scale down after an hour or is it so that's a really good point so so you pay for it",
    "start": "1920080",
    "end": "1926279"
  },
  {
    "text": "per hour I believe uh and um that sort of the sort of following question from",
    "start": "1926279",
    "end": "1931480"
  },
  {
    "text": "that is how quickly does it scale up and down under the hood right so uh this is actually a really important design consideration uh so Dynamo DB will scale",
    "start": "1931480",
    "end": "1938320"
  },
  {
    "text": "down quite quickly uh so as soon as you issue that API call we're sort of typically talking in the the minutes",
    "start": "1938320",
    "end": "1943720"
  },
  {
    "text": "time frame for Dynamo DB to start de-provisioning that throughput but it can take slightly longer to provision",
    "start": "1943720",
    "end": "1948799"
  },
  {
    "text": "the uh an increase in iops particularly if it's a very very big jump so we have customers running you know hundreds of thousands of iops on Damo DB um so it",
    "start": "1948799",
    "end": "1956720"
  },
  {
    "text": "can take some time to scale that up under the hood so our recommendation is that uh if you know that there's going",
    "start": "1956720",
    "end": "1962080"
  },
  {
    "text": "to be a storm a storm coming basically uh that you provision early to make sure that you have that all that provision",
    "start": "1962080",
    "end": "1968080"
  },
  {
    "text": "throughput in place uh before before you need it so for a classic example is supporting a TV show or a mobile",
    "start": "1968080",
    "end": "1974120"
  },
  {
    "text": "application which supports a TV show when you know the TV show is coming on Don't Leave It to the last moment to start to provision the iops that you're",
    "start": "1974120",
    "end": "1979960"
  },
  {
    "text": "going to need scale up a little bit in advance so that you can have the provision throughput ready when you",
    "start": "1979960",
    "end": "1985360"
  },
  {
    "text": "actually need it anym for anym oh we have one at the",
    "start": "1985360",
    "end": "1993240"
  },
  {
    "text": "front is it easy to uh measure your application to understanding exactly how",
    "start": "2002360",
    "end": "2007559"
  },
  {
    "text": "it is performing over the course of a month so you can begin to understand how reacts to events and how much absolutely",
    "start": "2007559",
    "end": "2013519"
  },
  {
    "text": "really good question uh so we publish uh a whole range of metrics including write and read iio uh into the cloudwatch um",
    "start": "2013519",
    "end": "2021480"
  },
  {
    "text": "Monitoring Service uh so you can draw the graphs around how that's performing over time uh you can look at your read",
    "start": "2021480",
    "end": "2026919"
  },
  {
    "text": "and write latencies and graph those out over time uh and of course you can pull that in through the API so you can build",
    "start": "2026919",
    "end": "2032919"
  },
  {
    "text": "out a custom dashboard if you want to as well and run pretty basic but some quite powerful reporting on top of those on",
    "start": "2032919",
    "end": "2038519"
  },
  {
    "text": "top of those metrics so all of those are exposed by default by Dynamo DB awesome we have one more at the back",
    "start": "2038519",
    "end": "2046639"
  },
  {
    "text": "Mr Gavin thank you yes sir hi I just wondering H when",
    "start": "2046639",
    "end": "2054200"
  },
  {
    "text": "you're when you're actually setting it up then do you have to say what availability Zone that you want to use so let's say if most of your systems",
    "start": "2054200",
    "end": "2059560"
  },
  {
    "text": "were in one or is it just where where will it hit yeah so you specify it per region uh so you don't have to worry",
    "start": "2059560",
    "end": "2065720"
  },
  {
    "text": "about availability zones Dynam DB handles all of that under the hood for you but you just get to pick the region so if you're running most of your",
    "start": "2065720",
    "end": "2071638"
  },
  {
    "text": "infrastructure so the rest of your web tiers for example in uh EU West then you can provision Dynamo DB there and then",
    "start": "2071639",
    "end": "2078800"
  },
  {
    "text": "within EU West you have a b and c if most of your infrastructures in A and B",
    "start": "2078800",
    "end": "2084000"
  },
  {
    "text": "will will this hit there or so we have super low latency between availability",
    "start": "2084000",
    "end": "2089358"
  },
  {
    "text": "zones so you shouldn't have to worry about that all",
    "start": "2089359",
    "end": "2095878"
  },
  {
    "text": "right okay good thanks good discussion um so",
    "start": "2095879",
    "end": "2100920"
  },
  {
    "text": "I'm going to press on now there'll be more time for Q&A when we break for coffee if you want to talk about anything else to do with Dynamo DB I",
    "start": "2100920",
    "end": "2106359"
  },
  {
    "text": "just hit anybody up with a Amazon web services t-shirt on um so I'm going to change gears a little bit but not uh not",
    "start": "2106359",
    "end": "2113400"
  },
  {
    "text": "totally uh I'm going to move from talking about databases to thinking a little bit about compute uh so I'm sure",
    "start": "2113400",
    "end": "2118760"
  },
  {
    "text": "all of you are familiar with the Amazon elastic compute Cloud um so what I was going to talk about a little bit was how",
    "start": "2118760",
    "end": "2124400"
  },
  {
    "text": "you can use that as a platform for Analytics this ties nicely into some of the work that we've been doing around",
    "start": "2124400",
    "end": "2129640"
  },
  {
    "text": "making it easy to collect up data using Dynamo DB using the relational database service and all the rest of it so let's",
    "start": "2129640",
    "end": "2136040"
  },
  {
    "text": "talk about data one of my favorite subjects um so um data is super valuable",
    "start": "2136040",
    "end": "2141599"
  },
  {
    "text": "right the majority of businesses are built out on the data that the uh that they create the data that their",
    "start": "2141599",
    "end": "2147320"
  },
  {
    "text": "customers enter into it and all the rest of it we know this very well at Amazon um data is also very very plentiful and",
    "start": "2147320",
    "end": "2153480"
  },
  {
    "text": "becoming more plentiful so whether you're dealing with mobile applications whether you're dealing with social games whether you're dealing with a typical",
    "start": "2153480",
    "end": "2159839"
  },
  {
    "text": "web application there's a lot of data involved in that application running uh logging that application auditing that",
    "start": "2159839",
    "end": "2166040"
  },
  {
    "text": "application going forwards uh but data is also super complex and becoming more complex and it changes all the time so",
    "start": "2166040",
    "end": "2172680"
  },
  {
    "text": "the data that you're working with is typically in flux Um this can make it very very challenging particularly when",
    "start": "2172680",
    "end": "2178560"
  },
  {
    "text": "data is fast moving uh to manage and capture and work with this data pretty much at any scale uh so we might hear a",
    "start": "2178560",
    "end": "2185040"
  },
  {
    "text": "lot about Big Data uh the these days but really I think uh data becomes difficult",
    "start": "2185040",
    "end": "2190160"
  },
  {
    "text": "to manage when it starts to exceed your experience in managing it and so that's sort of my definition of big data and it",
    "start": "2190160",
    "end": "2195760"
  },
  {
    "text": "become very challenging to capture and manage data and actually try and derive some value from it so we end up with in",
    "start": "2195760",
    "end": "2202880"
  },
  {
    "text": "a situation where we have lots of data where we have lots of uses for that data there's lots of questions that we might",
    "start": "2202880",
    "end": "2208119"
  },
  {
    "text": "want to ask of the data that we're collecting whether that's uses or security logs or identity and access",
    "start": "2208119",
    "end": "2214200"
  },
  {
    "text": "management or we have a lot of users typically internally they want to ask questions of that data so they have a",
    "start": "2214200",
    "end": "2219720"
  },
  {
    "text": "lot of questions that they want to ask and they making that data available in a form that they can ask those questions",
    "start": "2219720",
    "end": "2225160"
  },
  {
    "text": "can be challenging and we typically want it available in lots of locations so it can be challenging to move large data",
    "start": "2225160",
    "end": "2230960"
  },
  {
    "text": "sets uh terabyte paby data sets even down the hall to somebody else that you want to talk to let alone moving them",
    "start": "2230960",
    "end": "2237319"
  },
  {
    "text": "throughout a larger organization and allowing all of these sort of uh use cases and all of your users all of your",
    "start": "2237319",
    "end": "2242720"
  },
  {
    "text": "collaborators access to that data and of course the last one you want to do it for as low a cost as possible and",
    "start": "2242720",
    "end": "2248440"
  },
  {
    "text": "working with very large data sets in fact data sets of any kind can be costly when you need to work with redundancy",
    "start": "2248440",
    "end": "2253920"
  },
  {
    "text": "and that's why we offer that sort of level of durability with Amazon S3 and all of these things basically act as a",
    "start": "2253920",
    "end": "2259280"
  },
  {
    "text": "force multiplier in complexity in managing this data uh so it's a force multiplier of the amount of data the",
    "start": "2259280",
    "end": "2264720"
  },
  {
    "text": "velocity it's moving at the complexity of the data the usage and the uses of the data and the locations in which that",
    "start": "2264720",
    "end": "2270280"
  },
  {
    "text": "data needs to be accessed so the biggest problem is how do you answer how do you",
    "start": "2270280",
    "end": "2275960"
  },
  {
    "text": "rationalize all of these different problems in working with these data sets to try and derive some of the additional value that you can out of these data",
    "start": "2275960",
    "end": "2282480"
  },
  {
    "text": "sets so we typically see customers in these sort of areas so people working with Social graphs mining social graphs",
    "start": "2282480",
    "end": "2289359"
  },
  {
    "text": "and social networks uh people looking at click through advertising uh rates and click through advertising Trends uh",
    "start": "2289359",
    "end": "2296160"
  },
  {
    "text": "people just collecting out log files there's a huge amount of information in log files um audit Trails for",
    "start": "2296160",
    "end": "2302319"
  },
  {
    "text": "applications I mentioned transcoding of media the logs and tracking the per perance of that and customer usage so",
    "start": "2302319",
    "end": "2308640"
  },
  {
    "text": "how people are actually working with your application and typically particularly with traditionally provisioned infrastructure and as we're",
    "start": "2308640",
    "end": "2314560"
  },
  {
    "text": "coming out of that era uh we've been very limited we've been very constrained in how we can work with this data we",
    "start": "2314560",
    "end": "2321000"
  },
  {
    "text": "haven't had the storage we haven't had the tools to be able to really ask questions of this data and it's value which effectively we've just been",
    "start": "2321000",
    "end": "2326720"
  },
  {
    "text": "leaving on the table uh so one of the things I love about the cloud is that it allows us to remove constraints it allows us to start working with this",
    "start": "2326720",
    "end": "2333160"
  },
  {
    "text": "data asking questions of it to drive new uh business opportunities to drive new business processes and uh a lot of what",
    "start": "2333160",
    "end": "2339319"
  },
  {
    "text": "we do at Amazon is to try and remove these constraints to allow customers to derive the value that's locked away in",
    "start": "2339319",
    "end": "2344599"
  },
  {
    "text": "these datas data sets um so when I think about analytics that is the process of asking questions of these data sets I",
    "start": "2344599",
    "end": "2351359"
  },
  {
    "text": "think of it really in two types uh one is data intensive uh applications that is scale out applications uh some people",
    "start": "2351359",
    "end": "2357960"
  },
  {
    "text": "refer to this as embarrassingly parallel problems you just have a large number of input files so you have a large number",
    "start": "2357960",
    "end": "2363319"
  },
  {
    "text": "of log files and you just need to keep crunching them as much as possible now in a traditionally provisioned",
    "start": "2363319",
    "end": "2368640"
  },
  {
    "text": "infrastructure you're always going to be limited by your your static upper level on how much of how much of that value",
    "start": "2368640",
    "end": "2374440"
  },
  {
    "text": "you can gain from these large large data sets there's also a tightly coupled uh set of problems which I'll talk more",
    "start": "2374440",
    "end": "2380280"
  },
  {
    "text": "about in a minute so let's focus on data intensive scaleout applications to start with um so Hadoop is an open-source Tool",
    "start": "2380280",
    "end": "2388680"
  },
  {
    "text": "uh which a lot of people are starting to use to ask questions of these large scale data sets who here is familiar or",
    "start": "2388680",
    "end": "2394200"
  },
  {
    "text": "has heard of Hadoop oh cool about half you every time I ask that question I get more hands",
    "start": "2394200",
    "end": "2399280"
  },
  {
    "text": "that's good uh so Hadoop is an open source implementation for those of you who don't know of the map produce",
    "start": "2399280",
    "end": "2404760"
  },
  {
    "text": "framework map produce is a very nice framework for dealing with uh distributed computing problems uh",
    "start": "2404760",
    "end": "2411640"
  },
  {
    "text": "particularly with large scale data sets so a large number of log files if you want to search and index a large amount",
    "start": "2411640",
    "end": "2417480"
  },
  {
    "text": "of of of corpor of data and hup is becoming very very popular in in working with these large data sets so about a",
    "start": "2417480",
    "end": "2425040"
  },
  {
    "text": "year and a half ago we announced elastic map ruce uh this is a managed to dup service so in the same way as the",
    "start": "2425040",
    "end": "2431440"
  },
  {
    "text": "relational database service offers some common patterns uh for working with relational databases and tries to make",
    "start": "2431440",
    "end": "2437359"
  },
  {
    "text": "that as easy as possible so elastic map produce is managed to dup it tries to take away the craft of the mck of",
    "start": "2437359",
    "end": "2443520"
  },
  {
    "text": "dealing with distributed computation so that you can focus back on asking questions of your data rather than",
    "start": "2443520",
    "end": "2449240"
  },
  {
    "text": "worrying about how to distribute those out over a large grid and rather than worrying about how to store that data under the hood so again with Hadoop what",
    "start": "2449240",
    "end": "2456520"
  },
  {
    "text": "we saw and you'll see this theme again and again at Amazon what we saw with Hadoop was there was a huge amount of heavy lifting undifferentiated work",
    "start": "2456520",
    "end": "2463480"
  },
  {
    "text": "associated in building out Hadoop clusters and in actually writing map produce uh um uh programs which could",
    "start": "2463480",
    "end": "2469800"
  },
  {
    "text": "take advantage of this data that could ask questions of this data derive some business value from this data and where we see undifferentiated heavy lifting",
    "start": "2469800",
    "end": "2476599"
  },
  {
    "text": "that's where we try and go after it and try and reduce that overhead as much as possible for our customers so Hadoop an elastic map",
    "start": "2476599",
    "end": "2483520"
  },
  {
    "text": "produce Works a little bit like this uh so you take your input data uh and you place it into S3 uh actually as you'll",
    "start": "2483520",
    "end": "2490079"
  },
  {
    "text": "see in a minute you can now also integrate directly with your data into Dynamo DB I'll give you some specific examples in a minute of how to do that",
    "start": "2490079",
    "end": "2496720"
  },
  {
    "text": "so you place your input data into S3 and the majority of applications are already logging into S3 and if you're running on",
    "start": "2496720",
    "end": "2502640"
  },
  {
    "text": "ec2 it's actually really easy to get your data direct into S3 so you can start processing it uh with uh with",
    "start": "2502640",
    "end": "2508880"
  },
  {
    "text": "elastic map ruce um if you have a static data set which you might have on your laptop or on that 10 terab disc that",
    "start": "2508880",
    "end": "2515520"
  },
  {
    "text": "sits next to your lap toop I'll talk about how you can get that up into S3 in a minute then you take your code uh",
    "start": "2515520",
    "end": "2521480"
  },
  {
    "text": "Hadoop runs Java code natively but you can write in any language that you want with elastic map produce using a",
    "start": "2521480",
    "end": "2527280"
  },
  {
    "text": "streaming interface so anything that reads from standard in you can just place that code up onto S3 uh give it to",
    "start": "2527280",
    "end": "2533520"
  },
  {
    "text": "the elastic map ruce service and elastic map produce basically takes care of all the rest so again this is something that you can just run on ec2 that we try to",
    "start": "2533520",
    "end": "2540480"
  },
  {
    "text": "make as easy as possible uh to use without reducing the flexibility of the model so elastic map produce will go",
    "start": "2540480",
    "end": "2546720"
  },
  {
    "text": "ahead and provision a name node this is the orchestration node if you like on ec2 this will coordinate the rest of the",
    "start": "2546720",
    "end": "2552599"
  },
  {
    "text": "distributed task uh it will spin up a fully elastic cluster and underneath that run the Hadoop distributed file",
    "start": "2552599",
    "end": "2558880"
  },
  {
    "text": "system so that your data is uh is partitioned across the cluster each of the cluster has access to it and you can",
    "start": "2558880",
    "end": "2564720"
  },
  {
    "text": "start to run your queries and your business intelligent logic directly against that hdfs uh cluster so you can",
    "start": "2564720",
    "end": "2570400"
  },
  {
    "text": "run this very much as a data warehouse in addition to just doing batch processing uh this is a great fit for data warehousing and you can write those",
    "start": "2570400",
    "end": "2576960"
  },
  {
    "text": "using things like jdbc or query languages such as Pig and Hive which are much more SQL",
    "start": "2576960",
    "end": "2583800"
  },
  {
    "text": "like after that uh Hadoop will run uh in the elastic map Produce job flow and",
    "start": "2583800",
    "end": "2589240"
  },
  {
    "text": "it'll put the data back into S3 if there is an output or it'll just stay running uh once if you're setting up a data",
    "start": "2589240",
    "end": "2595079"
  },
  {
    "text": "warehouse and when it's finished it'll just shut down all the infrastructure so as soon as it's processed all your input files it'll take those from S3 where",
    "start": "2595079",
    "end": "2601640"
  },
  {
    "text": "your input is and put them in the specified bucket as an output and some people also use Simple DB for",
    "start": "2601640",
    "end": "2607280"
  },
  {
    "text": "orchestration there as well uh this is what it looks like in the console if you're not familiar with it I'm sure you've all seen the elastic map produce",
    "start": "2607280",
    "end": "2613400"
  },
  {
    "text": "tab up in our um increasingly busy console uh if you click on it uh this is what you'll see and uh I encourage you",
    "start": "2613400",
    "end": "2620319"
  },
  {
    "text": "uh to hand in your evaluation forms we'll give you $25 a credit and this is a great way of uh of of spending that",
    "start": "2620319",
    "end": "2626319"
  },
  {
    "text": "credit to try and start evaluating elastic map produce uh so we have a couple of demo job flows that you can uh",
    "start": "2626319",
    "end": "2631880"
  },
  {
    "text": "start to use just to see how they work you just click the create new job flow button there",
    "start": "2631880",
    "end": "2637040"
  },
  {
    "text": "and you create a new job flow that's what we call them in EMR uh you can run your own application uh that will ask",
    "start": "2637040",
    "end": "2642720"
  },
  {
    "text": "you for the location of your code the location of your jar or your closure code uh in S3 or you can run a sample",
    "start": "2642720",
    "end": "2649680"
  },
  {
    "text": "application I'm just going to run a word count application here it's a python script uh we have the source code for",
    "start": "2649680",
    "end": "2655440"
  },
  {
    "text": "that available on our website if you want to see how it works but basically just reads from standard in uh from a large collection of files and I'm going",
    "start": "2655440",
    "end": "2661559"
  },
  {
    "text": "to do a word count against a subset of uh articles in Wikipedia click continue",
    "start": "2661559",
    "end": "2666599"
  },
  {
    "text": "uh you can specify as I say the input location so this is where the input files are for the Wikipedia Corpus that we're going to look at we're going to",
    "start": "2666599",
    "end": "2672400"
  },
  {
    "text": "look at the output location uh so that's a S3 bucket that I've created uh elastic map reduce will put the data in there",
    "start": "2672400",
    "end": "2678440"
  },
  {
    "text": "when it's finished we have a mapper and a reducer these are for the uh for the map produce task this is how Hadoop",
    "start": "2678440",
    "end": "2684839"
  },
  {
    "text": "distributes out work um click continue and we can specify the number of instances that we initially want to run",
    "start": "2684839",
    "end": "2691480"
  },
  {
    "text": "on the elastic map produce cluster we can select the type of instances uh that we want so if you have a beefier job",
    "start": "2691480",
    "end": "2696839"
  },
  {
    "text": "that requires more memory or CPU you can just specify those there or you can run on a large number of M1 Smalls you can",
    "start": "2696839",
    "end": "2703000"
  },
  {
    "text": "specify your keypass you can log into this uh if you wish uh using a keypad it's just running on ec2 under the hood",
    "start": "2703000",
    "end": "2708520"
  },
  {
    "text": "and then we have some Advanced debugging options here where we can collect up some of the Hadoop logs for you put them in the right place so you can start to",
    "start": "2708520",
    "end": "2714160"
  },
  {
    "text": "debug if there's any problems after that you can configure what we call bootstrap actions these are Hadoop specific uh",
    "start": "2714160",
    "end": "2720440"
  },
  {
    "text": "bootstrap tasks so you can uh give basically Hadoop input parameters as well and after that you can review",
    "start": "2720440",
    "end": "2726640"
  },
  {
    "text": "everything that you've done so we have a job flow name the type all the input parameters that we specified click",
    "start": "2726640",
    "end": "2732319"
  },
  {
    "text": "create job flow and off elastic map produ will go starting to spin up your analytics platform basically that's all",
    "start": "2732319",
    "end": "2738000"
  },
  {
    "text": "you have to do so you can see here we've removed or having to worry about instance failure instance provisioning",
    "start": "2738000",
    "end": "2743559"
  },
  {
    "text": "having to worry about Job flow or anything like that all you have to do is write the code and provide it to elastic",
    "start": "2743559",
    "end": "2748880"
  },
  {
    "text": "map so you get to focus back in on the questions that you want to ask rather than worrying about how to manage the",
    "start": "2748880",
    "end": "2754119"
  },
  {
    "text": "data and how to store the data and and then distribute that out so you actually uh can can run these distributed tasks",
    "start": "2754119",
    "end": "2760359"
  },
  {
    "text": "so along the bottom here you can see we've got a job flow running uh it's uh it's going to be setting it up to start with so we've got the description tab",
    "start": "2760359",
    "end": "2766720"
  },
  {
    "text": "which basically just Echoes your your input parameters uh you can see the number of steps uh that are going to be taken by Hadoop uh so this is going to",
    "start": "2766720",
    "end": "2773839"
  },
  {
    "text": "be starting the streaming job you can see that it's in a pending state to start with and again echoing back the jar file that we're going to be using uh",
    "start": "2773839",
    "end": "2780440"
  },
  {
    "text": "for for Hadoop and the arguments that we specified some bootstrap actions so we're going to configure dup with those",
    "start": "2780440",
    "end": "2786680"
  },
  {
    "text": "and the instance groups so here's the master node that I talked about this is the name node that's going to do the coordination tasks for us and then the",
    "start": "2786680",
    "end": "2793640"
  },
  {
    "text": "nine nodes that we're going to spin up which are actually going to be our workers they're actually going to set about trying to answer these questions",
    "start": "2793640",
    "end": "2799240"
  },
  {
    "text": "for us so uh that will basically start running uh it will move the status to completed when it's finished and after",
    "start": "2799240",
    "end": "2805720"
  },
  {
    "text": "that you can go off and you can see in the instance group uh that they're in a a state of ended and that means that",
    "start": "2805720",
    "end": "2810839"
  },
  {
    "text": "they've all been terminated basically so elastic map produse has even terminated the the the architect",
    "start": "2810839",
    "end": "2816400"
  },
  {
    "text": "so you no longer pay for it when you no longer use it and the jobs have been run after that you can just jump to S3 jump",
    "start": "2816400",
    "end": "2822280"
  },
  {
    "text": "to the bucket that you and the folder inside that bucket that specified the data and you can see there the different",
    "start": "2822280",
    "end": "2827720"
  },
  {
    "text": "parts of the data set that have been uh that have been counted and you can pull them up in your favorite text editor and move that on for postprocessing or get",
    "start": "2827720",
    "end": "2834200"
  },
  {
    "text": "the answers out that you want so that's a very very simple example uh but the amount of work that even that simple",
    "start": "2834200",
    "end": "2839359"
  },
  {
    "text": "example would take uh using just Hadoop on a traditionally provision infrastructure uh can be challenging and",
    "start": "2839359",
    "end": "2845839"
  },
  {
    "text": "in most cases prohibitive cost prohibitive in provisioning the infrastructure and in taking the time to learn how learn how to run it we have a",
    "start": "2845839",
    "end": "2852880"
  },
  {
    "text": "couple of nice additional tools that we've added to elastic map produce recently uh the first is a nice distributed file copy Tool uh so you can",
    "start": "2852880",
    "end": "2859920"
  },
  {
    "text": "make sure that your data is moving as efficiently as possible in a distributed manner to back to S3 but under the hood it's all just",
    "start": "2859920",
    "end": "2866520"
  },
  {
    "text": "Hadoop so once you're are up and running you can go off learn about Hadoop take all of your existing Hadoop skills and",
    "start": "2866520",
    "end": "2872960"
  },
  {
    "text": "start asking questions of some of this data and like I said say if you are familiar with Hive and pig cascading and",
    "start": "2872960",
    "end": "2878960"
  },
  {
    "text": "the streaming interface they're all available to you as well natively on elastic map produce it's apid driven uh",
    "start": "2878960",
    "end": "2885599"
  },
  {
    "text": "so it's really easy to integrate into the rest of your workflows we'll talk a little bit more about workflows in a minute um we have customers that will",
    "start": "2885599",
    "end": "2891839"
  },
  {
    "text": "spin up many hundreds of uh elastic map produced jobs and many hundreds of elastic map produced clusters each and",
    "start": "2891839",
    "end": "2897520"
  },
  {
    "text": "every day to ask uh uh questions of the current running state of their business",
    "start": "2897520",
    "end": "2902720"
  },
  {
    "text": "so they want to know what is the pulse of the business what is the number of users how many checkouts am I getting",
    "start": "2902720",
    "end": "2907800"
  },
  {
    "text": "how many fail checkouts am I getting what trends am I seeing across the different parts of my of my infrastructure and the different parts",
    "start": "2907800",
    "end": "2913880"
  },
  {
    "text": "of my business and elas M produce allows you to do that and integrate that again into existing dashboard and ask",
    "start": "2913880",
    "end": "2919599"
  },
  {
    "text": "questions and automate it through an API so a few a few notes uh a few words",
    "start": "2919599",
    "end": "2925280"
  },
  {
    "text": "on data movement uh so elas produces a fantastic Service uh it works very very",
    "start": "2925280",
    "end": "2930720"
  },
  {
    "text": "well if your data is already in S3 but as I say there are some cases where uh you may be coming from a legacy provider",
    "start": "2930720",
    "end": "2937160"
  },
  {
    "text": "you may have a data set which is housed in house for some reason so how do you get that data up into S3 in the first",
    "start": "2937160",
    "end": "2943880"
  },
  {
    "text": "place uh so a while back we uh introduced import export uh this is a service which allows you to basically",
    "start": "2943880",
    "end": "2949839"
  },
  {
    "text": "ship us a hard disk uh so if you do have data on a hard disk we'll accept hard dis up to I think 12 terabytes at the",
    "start": "2949839",
    "end": "2956000"
  },
  {
    "text": "moment maybe even larger uh and you can just ship those to us tell us the location that you want the data in and",
    "start": "2956000",
    "end": "2961680"
  },
  {
    "text": "we'll put it into that location for you in S3 and then we're pretty good at shipping things around the world so we'll send the disc back to you at the",
    "start": "2961680",
    "end": "2966720"
  },
  {
    "text": "end of it and this is also really useful if you want to take your data out of S3 uh so if you just send us an empty hard",
    "start": "2966720",
    "end": "2971920"
  },
  {
    "text": "disk tell us the data that you want removed we'll load it onto the hard disk for you and ship the hard disk back for you so uh if you want uh offsite backup",
    "start": "2971920",
    "end": "2978880"
  },
  {
    "text": "if you want additional redundancy if you want to stop using S3 uh then you can just take your data back we want to make it as easy uh to to do that as possible",
    "start": "2978880",
    "end": "2987000"
  },
  {
    "text": "we also have large object support So S3 now supports objects up to five terabytes in size uh and we have",
    "start": "2987000",
    "end": "2992400"
  },
  {
    "text": "multi-part upload so if you do have sufficient capacity locally you can actually upload your large files in parallel so you don't have to start the",
    "start": "2992400",
    "end": "2998599"
  },
  {
    "text": "beginning and work at the end you can start a number of points in your file upload them all into S3 S3 will bundle",
    "start": "2998599",
    "end": "3004400"
  },
  {
    "text": "them back together as an object once they're up there so you can maximize the uh the throughput of your local",
    "start": "3004400",
    "end": "3009480"
  },
  {
    "text": "connection to get the data up there and what we see commonly is that whilst the initial data upload uh may be taxing if",
    "start": "3009480",
    "end": "3015280"
  },
  {
    "text": "you're working with terabyte or petabyte data sets uh it can take a couple of days couple of weeks to get it up there",
    "start": "3015280",
    "end": "3020760"
  },
  {
    "text": "but often the Delta the running Delta of that data can be quite small so it's actually relatively trivial once you've",
    "start": "3020760",
    "end": "3027119"
  },
  {
    "text": "gone over the initial hump and that's why we make these services available so you can get that up there as quickly as possible and we'll talk a little bit",
    "start": "3027119",
    "end": "3032799"
  },
  {
    "text": "later on about how you can further integrate Enterprise applications using things like Direct Connect uh to really",
    "start": "3032799",
    "end": "3038720"
  },
  {
    "text": "maximize the throughput uh get a very low latency access and reduce your bandwidth costs of getting data up into",
    "start": "3038720",
    "end": "3044559"
  },
  {
    "text": "AWS so that you can run these sort of uh business questions business analytics um data warehouses up with elastic map",
    "start": "3044559",
    "end": "3051280"
  },
  {
    "text": "produ we also have a number of uh features which we've uh launched recently around scale control uh this",
    "start": "3051280",
    "end": "3057400"
  },
  {
    "text": "basically allows you to resize running job flows something that's very difficult to do natively on Hadoop but",
    "start": "3057400",
    "end": "3063119"
  },
  {
    "text": "which we now support natively on elastic map produce uh so this allows you to make some decisions around how important",
    "start": "3063119",
    "end": "3069680"
  },
  {
    "text": "it is to have the results and important is to have the answers to your questions uh in the time which is suitable for you",
    "start": "3069680",
    "end": "3075599"
  },
  {
    "text": "so you may have a cluster which is running uh and it's going to take 14 hours to compute your data right so you've got a reasonable siiz data set",
    "start": "3075599",
    "end": "3082040"
  },
  {
    "text": "you're running a reasonably complex query or set of queries against that it take 14 hours to compute the answer uh",
    "start": "3082040",
    "end": "3087640"
  },
  {
    "text": "if you decide that you suddenly want it more quickly it's suddenly there's a business reason to have it uh uh have",
    "start": "3087640",
    "end": "3092880"
  },
  {
    "text": "that speeded up where you can just increase the amount of instances that are available to you so you can decrease",
    "start": "3092880",
    "end": "3098119"
  },
  {
    "text": "that in half just by throwing more metal at the problem because the dupe is distributed it'll add more clusters",
    "start": "3098119",
    "end": "3103520"
  },
  {
    "text": "distribute out the data distribute out the work across those pretty quickly uh and you can go beyond that so if you",
    "start": "3103520",
    "end": "3108799"
  },
  {
    "text": "really really need it like yesterday you can spin up as many instances as you want Hadoop will scale nicely to around",
    "start": "3108799",
    "end": "3114240"
  },
  {
    "text": "a thousand different uh in instances so you can get that time down uh as much as you want and you get to make the",
    "start": "3114240",
    "end": "3119480"
  },
  {
    "text": "decision about what the cost benefit is for you so you get to balance cost and performance because of this pay as you",
    "start": "3119480",
    "end": "3125000"
  },
  {
    "text": "go model that we have you can also resize based on usage patterns uh so for",
    "start": "3125000",
    "end": "3130799"
  },
  {
    "text": "example if you have a data warehouse you may have a steady state uh this is just as you would scale up and down a web",
    "start": "3130799",
    "end": "3136799"
  },
  {
    "text": "application architecture you can do exactly the same thing uh with your analytics so you may have a steady state",
    "start": "3136799",
    "end": "3142440"
  },
  {
    "text": "which is running most of the time this will handle all of your repeat jobs all of your Chron jobs all of your analytics",
    "start": "3142440",
    "end": "3147559"
  },
  {
    "text": "which may run throughout the day um but then you may have some additional batch procing processing that you need to do",
    "start": "3147559",
    "end": "3153359"
  },
  {
    "text": "some additional on demand reports that people are running within your organization you can start to scale up",
    "start": "3153359",
    "end": "3159000"
  },
  {
    "text": "uh that batch processing scale up your data center as and when you need to so just like you can scale up a web",
    "start": "3159000",
    "end": "3164040"
  },
  {
    "text": "architecture you can also scale up your analytics and this is very very difficult and typically cost prohibitive",
    "start": "3164040",
    "end": "3169480"
  },
  {
    "text": "to do when you're not running in the cloud and also we sport the spot Market uh so Glenn is going to talk a little",
    "start": "3169480",
    "end": "3175680"
  },
  {
    "text": "bit about the spot market after we've had some coffee uh but the spot Market allows you to have very very lowcost",
    "start": "3175680",
    "end": "3182079"
  },
  {
    "text": "compute and it allows you to choose the price of your that compute and it's basically perfectly made uh for batch",
    "start": "3182079",
    "end": "3187920"
  },
  {
    "text": "processing allows you to get very very low cost uh uh large amounts of data uh",
    "start": "3187920",
    "end": "3193200"
  },
  {
    "text": "compute sorry we have a customer for example that recently ran a 30,000 core job on the spot Market using exclusively",
    "start": "3193200",
    "end": "3200400"
  },
  {
    "text": "spot and for that we charge them just $1,200 an hour so it's a very very cost effective way of getting a lot large amount of compute and it's integrated",
    "start": "3200400",
    "end": "3207480"
  },
  {
    "text": "with Dynamo DB so once you've collected the data which is moving at a fast velocity which is growing in volume and",
    "start": "3207480",
    "end": "3213240"
  },
  {
    "text": "growing in complexity and you can handle that using the key attribute patterns found within Dynam DB you can then",
    "start": "3213240",
    "end": "3218880"
  },
  {
    "text": "integrate that back into your analytics uh so we make it really easy to call out to Dynamo DB uh from um from elastic M",
    "start": "3218880",
    "end": "3226440"
  },
  {
    "text": "produce and you can also back up and restore uh directly using elastic map eduse and that scales very nicely depend",
    "start": "3226440",
    "end": "3232680"
  },
  {
    "text": "independent of the data that you have underneath uh Dynamo DB you can also run Hive query language queries against your",
    "start": "3232680",
    "end": "3239720"
  },
  {
    "text": "data uh so I said earlier that we don't we only index on the primary key and the composite key in Dynamo DB that's true",
    "start": "3239720",
    "end": "3246599"
  },
  {
    "text": "uh but you can run more complicated SQL like queries using Hive using elastic map ruce so this is what a uh a hive",
    "start": "3246599",
    "end": "3254359"
  },
  {
    "text": "query looks like this is querying live data in Dynamo DB uh if you're used to using SQL or if you're a hive expert",
    "start": "3254359",
    "end": "3260880"
  },
  {
    "text": "then this is obviously going to look familiar to you so you basically create what's called an external table and then you query that table as you would uh",
    "start": "3260880",
    "end": "3267319"
  },
  {
    "text": "some sort of relational store and you can do that again irrespective of the data size inside Dynamo DB because",
    "start": "3267319",
    "end": "3273160"
  },
  {
    "text": "elastic map produces integrated for low latency access so live data in Dynamo DB accessed what's that in just a couple of",
    "start": "3273160",
    "end": "3279079"
  },
  {
    "text": "lines basically you can also query Dynamo DB uh directly like that and then",
    "start": "3279079",
    "end": "3284880"
  },
  {
    "text": "you can query archive data in S3 so this is another common pattern of working with Dynamo DB uh some customers don't",
    "start": "3284880",
    "end": "3291640"
  },
  {
    "text": "need a full large data set under Dynamo DB and so they'll uh they'll they'll take out that data put it into Cold",
    "start": "3291640",
    "end": "3298400"
  },
  {
    "text": "Storage on S3 but that doesn't mean you lose the ability to run analytics against it it's cheaper to store it in",
    "start": "3298400",
    "end": "3304119"
  },
  {
    "text": "S3 so you can take it out of Dynamo DB stick it into S3 uh but then you can create the same external tables against",
    "start": "3304119",
    "end": "3310200"
  },
  {
    "text": "that data in S3 as you can the live data in Dynamo DB so you create the external table like that and then you can query",
    "start": "3310200",
    "end": "3316960"
  },
  {
    "text": "that uh that that older data that you don't need live in your data set you can push it off lower cost but still make",
    "start": "3316960",
    "end": "3323359"
  },
  {
    "text": "take advantage of it from an analytics point of view and that's the hive query to run that uh to run a query against",
    "start": "3323359",
    "end": "3328920"
  },
  {
    "text": "data which has been archived out of Dynam DB you can also export to S3 so you remember I said that you could uh",
    "start": "3328920",
    "end": "3335160"
  },
  {
    "text": "manage your backups and your restores uh this is how you export from Dynamo DB uh into uh into uh S3 using the hive query",
    "start": "3335160",
    "end": "3343200"
  },
  {
    "text": "language uh through elastic map reduce these slides will be available afterwards so you don't have to write all of that down and get all the",
    "start": "3343200",
    "end": "3348480"
  },
  {
    "text": "parentheses in the right place um so I think that they're really a perfect match elastic map produc and Dynamo DB",
    "start": "3348480",
    "end": "3354079"
  },
  {
    "text": "open up a whole world world of questions that you can ask of this data which are typically prohibitive to do when you",
    "start": "3354079",
    "end": "3359880"
  },
  {
    "text": "don't have these these higher level services available to you so the last thing I want to talk about uh around",
    "start": "3359880",
    "end": "3365240"
  },
  {
    "text": "analytics is uh is tightly coupled uh uh workflows uh some of the work we've been doing there some of the new Services we",
    "start": "3365240",
    "end": "3371480"
  },
  {
    "text": "be rolled out there um so this typically involves parallel computation rather than just distributed computation uh",
    "start": "3371480",
    "end": "3378119"
  },
  {
    "text": "computation which takes place over many many cores uh and which requires higher network uh capacity uh because all of",
    "start": "3378119",
    "end": "3385599"
  },
  {
    "text": "those Calles are talking to all of the ones all the other ones at the same time so this is very common in Financial Risk",
    "start": "3385599",
    "end": "3391079"
  },
  {
    "text": "analysis very common in drug Discovery uh it's increasingly common uh people trying to drive even more value out of",
    "start": "3391079",
    "end": "3397280"
  },
  {
    "text": "how people are playing their games how people are interacting with social media looking for Trends within those social",
    "start": "3397280",
    "end": "3402440"
  },
  {
    "text": "media uh manufacturing and design getting fast uh uh throughput fast answers to how your manufacturing",
    "start": "3402440",
    "end": "3409119"
  },
  {
    "text": "process is going on designing faster and more efficient jet engines that sort of thing a lot of work being done on",
    "start": "3409119",
    "end": "3414280"
  },
  {
    "text": "genomics and of course on transcoding and transcoding and rendering of content as well so uh about a year ago we",
    "start": "3414280",
    "end": "3420559"
  },
  {
    "text": "released CC1 uh this is our cluster compute instances these are the high at the time they were the the the fastest",
    "start": "3420559",
    "end": "3427559"
  },
  {
    "text": "uh most expensive instance that you could provision on ec2 they were uh duel quadcore Intel and the Halen processors",
    "start": "3427559",
    "end": "3434799"
  },
  {
    "text": "very very fast and we thrw in some gpus on those as well Animoto are taking advantage of those gpus to do much more",
    "start": "3434799",
    "end": "3441559"
  },
  {
    "text": "High depth rendering of the videos that they create for example and uh about last November we announced",
    "start": "3441559",
    "end": "3447319"
  },
  {
    "text": "the second generation taking everything that we we learn running CC1 and turning that into the second generation so these",
    "start": "3447319",
    "end": "3454079"
  },
  {
    "text": "have some really really nice features uh in the second generation of our cluster compute instances these are offer 16",
    "start": "3454079",
    "end": "3460480"
  },
  {
    "text": "Intel Zeon cores per piece uh they offer uh some placement groups that means that if you specify what we call a placement",
    "start": "3460480",
    "end": "3467599"
  },
  {
    "text": "group we'll make sure that these instances are provisioned in uh the same racks as much as possible so you get low",
    "start": "3467599",
    "end": "3473079"
  },
  {
    "text": "latency access between the instances and they run on a full non-blocking fully bisectional 10 gig Network so this is a",
    "start": "3473079",
    "end": "3479599"
  },
  {
    "text": "very fast Network which all nodes have access to at 10 gig uh at the same time",
    "start": "3479599",
    "end": "3484760"
  },
  {
    "text": "so this is very very fast uh very very performant um and just to as a point of",
    "start": "3484760",
    "end": "3490760"
  },
  {
    "text": "comparison really uh before we announc this we announced this on a uh a Saturday or Sunday I think and on the",
    "start": "3490760",
    "end": "3497000"
  },
  {
    "text": "Thursday we ran a large scale Benchmark uh this isn't the whole of ec2 this is a subset of our Fleet of our cc2 instances",
    "start": "3497000",
    "end": "3504160"
  },
  {
    "text": "uh we Benchmark them see how they well they performed and then we submitted that Benchmark to uh the top 500 list",
    "start": "3504160",
    "end": "3510680"
  },
  {
    "text": "this is a uh list which is published twice a year of the top performing supercomputers in the world and just on",
    "start": "3510680",
    "end": "3516039"
  },
  {
    "text": "an elastic Network on something that you could provision tomorrow uh we came in at 240 Tera flops and that's makes it",
    "start": "3516039",
    "end": "3521720"
  },
  {
    "text": "the 40 42nd fastest supercomputer in the whole entire world this is an OnDemand resource that anybody can take advantage",
    "start": "3521720",
    "end": "3528079"
  },
  {
    "text": "of and actually this is the fastest ethernet supercomputer all the rest run on infin band the fastest ethernet",
    "start": "3528079",
    "end": "3533960"
  },
  {
    "text": "computer provision visioned on demand if you want to take advantage of this I can definitely recommend uh a",
    "start": "3533960",
    "end": "3539200"
  },
  {
    "text": "tool called star cluster uh this makes managing uh distributed tasks in a in a parallel environment uh much much easier",
    "start": "3539200",
    "end": "3545720"
  },
  {
    "text": "it's available at this web address and if you want to get started even more quickly we have a cloud formation template uh which will provision a full",
    "start": "3545720",
    "end": "3552559"
  },
  {
    "text": "64 core uh cluster for you with a single click uh so you can find that on our high performance Computing web pages",
    "start": "3552559",
    "end": "3558680"
  },
  {
    "text": "aws.amazon.com HPC and with that I'm happy to answer any questions you might have around",
    "start": "3558680",
    "end": "3565680"
  },
  {
    "text": "analytics yes sir if you can just wait for the microphone thank",
    "start": "3565680",
    "end": "3571038"
  },
  {
    "text": "you uh when Dynamo DB is integrated uh with elastic map radius and you're doing",
    "start": "3573920",
    "end": "3579640"
  },
  {
    "text": "a high h hql on it uh let's you said there is if you can't uh like if you're",
    "start": "3579640",
    "end": "3586839"
  },
  {
    "text": "not searching on a primary key let's like doing an SQL on another attribute and Dynamo what does it do underneath",
    "start": "3586839",
    "end": "3593240"
  },
  {
    "text": "does it do a scan query or what what how does it work yeah so it uses Hive to create what's called an external table",
    "start": "3593240",
    "end": "3598799"
  },
  {
    "text": "and then searches that external table basically and all that runs on the elastic map produce infrastructure in a distributed fashion so it does get the",
    "start": "3598799",
    "end": "3605280"
  },
  {
    "text": "whole data uh Full Table scan dumps everything into Hadoop and then so just",
    "start": "3605280",
    "end": "3611160"
  },
  {
    "text": "that that's right yeah right okay as far as I know I think that's right",
    "start": "3611160",
    "end": "3615920"
  },
  {
    "text": "okay uh I think we have some over here thank",
    "start": "3616240",
    "end": "3621480"
  },
  {
    "text": "you um how about security I'm kind of used to using firewalls and SSL",
    "start": "3623400",
    "end": "3629559"
  },
  {
    "text": "certificates how does that work on the cloud uh very good question so the question was around security uh so I",
    "start": "3629559",
    "end": "3635960"
  },
  {
    "text": "will cover Security in a much more a lot more detail after the coffee break uh including how you can run elastic mapid",
    "start": "3635960",
    "end": "3642200"
  },
  {
    "text": "juice inside the virtual private Cloud where you have full control over all of the network access and all the firewalls and all the identity policies so the",
    "start": "3642200",
    "end": "3649599"
  },
  {
    "text": "answer is yes yes sir",
    "start": "3649599",
    "end": "3656520"
  },
  {
    "text": "uh I was just wondering uh how much there 240 terlop uh uh instance of run",
    "start": "3660799",
    "end": "3666440"
  },
  {
    "text": "per hour um free tier right yeah no that is not",
    "start": "3666440",
    "end": "3672160"
  },
  {
    "text": "covered by the free tier we should just get that right out there honestly I'm not sure uh because I'm not sure how",
    "start": "3672160",
    "end": "3677720"
  },
  {
    "text": "many instances it ran across so there's around 17,000 cores that it was running on um so uh you can do math but of",
    "start": "3677720",
    "end": "3685000"
  },
  {
    "text": "course cc2 is also available on the spot Market uh so you get to choose the price that you pay for cc2 if you don't mind",
    "start": "3685000",
    "end": "3690880"
  },
  {
    "text": "when your computation runs yeah you can run it through the",
    "start": "3690880",
    "end": "3695960"
  },
  {
    "text": "monthly calculator if you really want to Glenn will be talking more about that later on all right any more yes",
    "start": "3695960",
    "end": "3705280"
  },
  {
    "text": "sir there's a race on privileged thank you Emma I was just wondering about the",
    "start": "3710240",
    "end": "3717440"
  },
  {
    "text": "nuts and bolts um you said it's easy to get data from ec2 to S3 um but how would",
    "start": "3717440",
    "end": "3723880"
  },
  {
    "text": "I get my logs from Apache from log 4J Etc into S3 am I going to have to roll",
    "start": "3723880",
    "end": "3730000"
  },
  {
    "text": "my own solution or are there Solutions out there uh that's actually a really good question that's something we we have been talking to customers about so",
    "start": "3730000",
    "end": "3737200"
  },
  {
    "text": "uh the answer is kind of application dependent uh so there are a number of log rotators uh that you can use uh so",
    "start": "3737200",
    "end": "3744119"
  },
  {
    "text": "once you rotate your logs on your instances that's the point at which you take the old logs and throw them onto S3",
    "start": "3744119",
    "end": "3749240"
  },
  {
    "text": "then you delete them from the instance once you know that they're up onto S3 you reduce the running costs of the",
    "start": "3749240",
    "end": "3754359"
  },
  {
    "text": "storage on the instance for a start but also you put them under highly durable storage on S3 where you can then start to excuse me and start to ask questions",
    "start": "3754359",
    "end": "3761760"
  },
  {
    "text": "of those of those logs so there are a couple of best practices and um the best thing to do would be to talk about your",
    "start": "3761760",
    "end": "3767359"
  },
  {
    "text": "architecture with one of our remarkable solution Architects that are here with us today but there are there are a",
    "start": "3767359",
    "end": "3773039"
  },
  {
    "text": "couple of native things depending on the language that you're you're working in and there are a couple of best practices around how you do it uh so talk to",
    "start": "3773039",
    "end": "3778799"
  },
  {
    "text": "solution architect or myself and we can run through it in in a bit more detail but it's actually relatively straightforward and don't forget ec2 and",
    "start": "3778799",
    "end": "3784440"
  },
  {
    "text": "S3 are physically collocated so you get low latency access for those logs when they move between the",
    "start": "3784440",
    "end": "3791760"
  },
  {
    "text": "two okay all right any more questions about analytics you can find me in the in the",
    "start": "3792079",
    "end": "3797839"
  },
  {
    "text": "coffee break let's talk about Amazon simple workflow uh so we launched this service",
    "start": "3797839",
    "end": "3803440"
  },
  {
    "text": "yesterday um um it has been received pretty well we got a ton of traffic on our blog uh so uh I'm very happy uh that",
    "start": "3803440",
    "end": "3810960"
  },
  {
    "text": "we managed to uh stay up late working on these slides to try and describe to you in a bit more detail what simple Amazon",
    "start": "3810960",
    "end": "3817319"
  },
  {
    "text": "simple workflow is uh we call it swf uh how you can use it and where it fits into the broader uh Amazon platform uh",
    "start": "3817319",
    "end": "3824839"
  },
  {
    "text": "so simple workflow Amazon simple workflow is designed to build process and manage workflows as the name",
    "start": "3824839",
    "end": "3831640"
  },
  {
    "text": "suggests uh so I guess the question is what is a work workflow what do we see as a workflow a workflow is basically uh",
    "start": "3831640",
    "end": "3838359"
  },
  {
    "text": "any kind of process uh any kind of effectively application so this may be a",
    "start": "3838359",
    "end": "3843799"
  },
  {
    "text": "business process uh this may be an analysis pipeline this may be a transcoding pipeline it may be just that",
    "start": "3843799",
    "end": "3849599"
  },
  {
    "text": "you want to manage or provision infrastructure in a particular order uh but it basically uh represents uh a flow",
    "start": "3849599",
    "end": "3857359"
  },
  {
    "text": "of tasks which have to take place in a specific order uh and which have to be orchestrated in some way so workflows",
    "start": "3857359",
    "end": "3863520"
  },
  {
    "text": "are really about or frustrating tasks and the data that needs to move between them but ultimately the majority of",
    "start": "3863520",
    "end": "3868720"
  },
  {
    "text": "applications encapsulate some kind of workflow or typically a collection of many many workflows so a typical",
    "start": "3868720",
    "end": "3875079"
  },
  {
    "text": "workflow might look something like this uh so a new customer might sign up for your application uh a new employee might",
    "start": "3875079",
    "end": "3881319"
  },
  {
    "text": "join your organization and there's a a process of steps that you need to take",
    "start": "3881319",
    "end": "3886400"
  },
  {
    "text": "place in a particular order in order to register them fully with either your service or your employment or whatever",
    "start": "3886400",
    "end": "3893000"
  },
  {
    "text": "so you may want to register their address you might want to register their billing details if they're going to actually be paying for stuff you might",
    "start": "3893000",
    "end": "3899000"
  },
  {
    "text": "want to validate those billing details so go off to the bank and check that they've been uh correctly entered uh you",
    "start": "3899000",
    "end": "3904480"
  },
  {
    "text": "might want to go off and uh create their account in a local database or a remote database or a service or elap or",
    "start": "3904480",
    "end": "3910400"
  },
  {
    "text": "something like that and you can imagine this line stretching on for for a long way so uh there's a lot of uh different",
    "start": "3910400",
    "end": "3916640"
  },
  {
    "text": "States involved in even the most simple task of registering a new customer for example the typical way of dealing with",
    "start": "3916640",
    "end": "3923079"
  },
  {
    "text": "this in uh in infrastructure is to start to decouple some of these services so",
    "start": "3923079",
    "end": "3928240"
  },
  {
    "text": "rather than thinking about just registering an address procedurally start to decouple it into its own Individual Services uh these Services",
    "start": "3928240",
    "end": "3935279"
  },
  {
    "text": "may be asynchronous so you can imagine validating billing details uh may take more time you have to go off to the bank",
    "start": "3935279",
    "end": "3941359"
  },
  {
    "text": "it may even be a manual process in some organizations so that's highly asynchronous you no idea how long it's",
    "start": "3941359",
    "end": "3946520"
  },
  {
    "text": "going to take for that response to come back uh but you probably got better control over how you create that account internally in your ldap server in your",
    "start": "3946520",
    "end": "3953079"
  },
  {
    "text": "database so there's a mixture of asynchronous and uh and synchronous tasks which mix together to form very",
    "start": "3953079",
    "end": "3959440"
  },
  {
    "text": "very complex workflows now in a distributed environment in an elastic environment this is typically orchestrated with cues so you move from",
    "start": "3959440",
    "end": "3966359"
  },
  {
    "text": "one state to another by in queing tasks uh between the different states so once you've registered address that's the",
    "start": "3966359",
    "end": "3972680"
  },
  {
    "text": "first thing you kick off in an address registration service then you register that the next phase has to take place",
    "start": "3972680",
    "end": "3977839"
  },
  {
    "text": "you register that takes place in q1 uh then the billing registration happens once that's finished uh you orchestrate",
    "start": "3977839",
    "end": "3983760"
  },
  {
    "text": "with the billing validation by using a second queue and queuing the task that needs to take place Distributing it out",
    "start": "3983760",
    "end": "3989279"
  },
  {
    "text": "over the billing validation service or the person needs to do the task or somebody looking something up on Mech",
    "start": "3989279",
    "end": "3994359"
  },
  {
    "text": "Turk uh then you go through and orchestrate that with a a third Quee um and it can get pretty complicated pretty",
    "start": "3994359",
    "end": "4000920"
  },
  {
    "text": "quickly uh cues are a good fit for relatively short workflows but once you start building up application Level",
    "start": "4000920",
    "end": "4006799"
  },
  {
    "text": "workflows they can quickly become unwieldy uh so you have to startop worrying about the ordering of these",
    "start": "4006799",
    "end": "4012000"
  },
  {
    "text": "tasks and the dependencies between them you obviously you need the billing information before you can validate that billing information uh you need to be",
    "start": "4012000",
    "end": "4018240"
  },
  {
    "text": "able to worry about duplication or duplication of those messages uh so some messages may be expensive to perform so",
    "start": "4018240",
    "end": "4024599"
  },
  {
    "text": "actually looking up the billing information May incur a cost it may take somebody's time to go and fill out the",
    "start": "4024599",
    "end": "4029960"
  },
  {
    "text": "paperwork to get them registered uh with your legal department for example so duplication of messages uh is something",
    "start": "4029960",
    "end": "4035319"
  },
  {
    "text": "which is very difficult to check for very difficult to to manage you also need to record all of the metadata so",
    "start": "4035319",
    "end": "4041680"
  },
  {
    "text": "that you know when something has been completed this talks to uh the orchestration this talks to the ordering",
    "start": "4041680",
    "end": "4047160"
  },
  {
    "text": "but it also talks to the history of the data you might want to go back and do an audit across this workflow to see what",
    "start": "4047160",
    "end": "4052960"
  },
  {
    "text": "happened at what time and to investigate if there are any improvements that can be made um so that was just with a",
    "start": "4052960",
    "end": "4059240"
  },
  {
    "text": "simple more or less linear serial workflow um this I drew as many lines until I got bored but you can imagine",
    "start": "4059240",
    "end": "4066119"
  },
  {
    "text": "just how complicated some workflows can be so you can have multiple workflows they can integrate at various different points they can have forks and tasks and",
    "start": "4066119",
    "end": "4073039"
  },
  {
    "text": "all and different tasks and all the rest of it and these tasks need to be done at different scales at different times synchronously or asynchronously so uh",
    "start": "4073039",
    "end": "4080839"
  },
  {
    "text": "this is obviously uh as you probably guessed where we see a lot of undifferentiated heavy lifting this is a",
    "start": "4080839",
    "end": "4086119"
  },
  {
    "text": "lot of work that our customers are putting in building out uh in a number of different ways whether it's just",
    "start": "4086119",
    "end": "4091599"
  },
  {
    "text": "procedurally en code or in large formal workflow systems with things like TNA uh",
    "start": "4091599",
    "end": "4096679"
  },
  {
    "text": "undifferentiated work right this is work that you're spending just orchestrating all this stuff recording the provence",
    "start": "4096679",
    "end": "4102080"
  },
  {
    "text": "recording the history making sure that stored and it's undifferentiated work you want to be focusing on uh making",
    "start": "4102080",
    "end": "4107798"
  },
  {
    "text": "those business processes as efficient as possible making sure that they're meeting the requirements of your",
    "start": "4107799",
    "end": "4112920"
  },
  {
    "text": "business going forwards so undifferentiated heavy work this is where we feel we can add value and so",
    "start": "4112920",
    "end": "4118040"
  },
  {
    "text": "that's where swf comes in so s swf uh is designed for the cloud first and foremost uh it is built and designed to",
    "start": "4118040",
    "end": "4125560"
  },
  {
    "text": "build a scalable and resilient application so scalable and resilient uh workflows uh it can model complex",
    "start": "4125560",
    "end": "4133120"
  },
  {
    "text": "business processes arbitrarily complex business processes actually uh but at the same time we hope that we've built",
    "start": "4133120",
    "end": "4138600"
  },
  {
    "text": "it to be easy to use and we hope that we've maintained the flexibility that the Amazon platform is well known for so",
    "start": "4138600",
    "end": "4145600"
  },
  {
    "text": "really what swf is all about is Task orchestration so orchestrating a series",
    "start": "4145600",
    "end": "4150960"
  },
  {
    "text": "of tasks which from one end to the other fulfill a business process uh it's a",
    "start": "4150960",
    "end": "4156120"
  },
  {
    "text": "managed and based on your application logic uh so it will manage the task execution it will manage the",
    "start": "4156120",
    "end": "4162000"
  },
  {
    "text": "dependencies between those tasks it'll make sure that they're scheduled in a sensible way along with the application",
    "start": "4162000",
    "end": "4167838"
  },
  {
    "text": "logic that you specify and it'll also handle all of the concurrency around that for you as well and ultimately",
    "start": "4167839",
    "end": "4173400"
  },
  {
    "text": "again just like Dynamo DB uh this is built to be zero Administration so there's no Hardware or software to",
    "start": "4173400",
    "end": "4179080"
  },
  {
    "text": "administer for the orchestration piece you just have to work with simple workflow service and uh it will go off",
    "start": "4179080",
    "end": "4184758"
  },
  {
    "text": "and provision the hardware it will take care of the software handling uh all you got to do is worry on the B worry about",
    "start": "4184759",
    "end": "4189960"
  },
  {
    "text": "the business rules uh simple workflow will take care of all the rest of it so",
    "start": "4189960",
    "end": "4195440"
  },
  {
    "text": "there's a a new vocabulary uh for for for simple workflow I thought I'd Define a few terms here um so the sort of top",
    "start": "4195440",
    "end": "4202679"
  },
  {
    "text": "level of the nen cature is a domain a domain is basically a collection of workflows you can group multiple related",
    "start": "4202679",
    "end": "4208800"
  },
  {
    "text": "workflows together in what we're calling a domain a workflow you can think of as a collection of tasks the tasks are the",
    "start": "4208800",
    "end": "4214880"
  },
  {
    "text": "thing to be orchestrated and they are built out into what we call a workflow uh an action is the task or the workflow",
    "start": "4214880",
    "end": "4222199"
  },
  {
    "text": "step that must be completed the state change that must be completed uh the activity workers are the things that are",
    "start": "4222199",
    "end": "4228080"
  },
  {
    "text": "actually going to implement the actions these are the things that do the work uh to actually fulfill the action to build",
    "start": "4228080",
    "end": "4233280"
  },
  {
    "text": "out the workflow and we also have something that we call the decider and this is the thing this is the business logic which coordinates uh all of the",
    "start": "4233280",
    "end": "4240560"
  },
  {
    "text": "rest of the actions so this is the piece which is actually going to drive and make the decisions about which piece to do which what to do next and in what",
    "start": "4240560",
    "end": "4246840"
  },
  {
    "text": "order all that sort of thing so Amazon swf sort of sits here in the middle of the slide it's going to handle uh the M",
    "start": "4246840",
    "end": "4254199"
  },
  {
    "text": "it's going to handle and maintain the distributed application State on your behalf it'll track workflow executions",
    "start": "4254199",
    "end": "4260320"
  },
  {
    "text": "for you so you don't lose that Provence and that metadata it'll ensure consistency of execution history it will",
    "start": "4260320",
    "end": "4266440"
  },
  {
    "text": "provide visibility into those executions again not something that you get with ad hoc Solutions and quite a lot of work to",
    "start": "4266440",
    "end": "4272080"
  },
  {
    "text": "build that up uh it'll hold and dispatch tasks depending on your application logic and it'll provide control over",
    "start": "4272080",
    "end": "4278440"
  },
  {
    "text": "that task distribution whilst retaining the execution history on your behalf so",
    "start": "4278440",
    "end": "4283640"
  },
  {
    "text": "so a lot of this is were is built around orchestration a lot of it is were around uh just managing the metadata and",
    "start": "4283640",
    "end": "4290040"
  },
  {
    "text": "managing the audit trail of running it but this is what it actually looks like so swf sits up there on the AWS Cloud",
    "start": "4290040",
    "end": "4297400"
  },
  {
    "text": "you can have a number of workers for a particular activity uh they can run on the AWS Cloud too they might be",
    "start": "4297400",
    "end": "4302679"
  },
  {
    "text": "implemented as a Mechanical Turk task if you want someone to go off and transcribe some data they could just be",
    "start": "4302679",
    "end": "4308960"
  },
  {
    "text": "sitting on ec2 instances uh you receive tasks and process them on ec2",
    "start": "4308960",
    "end": "4314199"
  },
  {
    "text": "uh you can also uh basically push those tasks out to any other number of devices uh so you may want to make a phone call",
    "start": "4314199",
    "end": "4320679"
  },
  {
    "text": "through something like the telio API collect up some more data make some checks and balances against mobile data",
    "start": "4320679",
    "end": "4326120"
  },
  {
    "text": "so you can have workers on activity too these can be real humans but you can also run it against your on- premise infrastructure as well so if you have a",
    "start": "4326120",
    "end": "4332639"
  },
  {
    "text": "number of business logic services that are running on premise as long as they can see the HTTP npoint of the simple",
    "start": "4332639",
    "end": "4338400"
  },
  {
    "text": "workflow Service uh they can run on premise as well so you can start to lash together uh people the cloud and on-",
    "start": "4338400",
    "end": "4344480"
  },
  {
    "text": "premise uh Solutions uh into a larger orchestration piece and the decider sits",
    "start": "4344480",
    "end": "4349960"
  },
  {
    "text": "on top here the deci is the thing which is going to poll effectively the simple workflow service check the running state",
    "start": "4349960",
    "end": "4355920"
  },
  {
    "text": "of the application and make decisions about what should happen next and all that happens is your workers poll the",
    "start": "4355920",
    "end": "4361440"
  },
  {
    "text": "service so they get the activity tasks for them to complete they just ask a simple workflow saying I am a worker for",
    "start": "4361440",
    "end": "4368120"
  },
  {
    "text": "this particular activity what jobs do I have to do next that's all they have to do very very straightforward and you can",
    "start": "4368120",
    "end": "4373440"
  },
  {
    "text": "can write those deciders WR sorry write those workers in any language that you want same with mobile same with on",
    "start": "4373440",
    "end": "4379400"
  },
  {
    "text": "premise the decider then will Poll for decision tasks uh so it will check the",
    "start": "4379400",
    "end": "4385040"
  },
  {
    "text": "running state of the application and say right what decision tasks do I have to make it will poll that all you have to",
    "start": "4385040",
    "end": "4390360"
  },
  {
    "text": "do is be able to see uh the swf endpoint Poll for it and it will collect up all the state of the running application in",
    "start": "4390360",
    "end": "4396199"
  },
  {
    "text": "order to be able to make the decision and sort of uh navigate those decision trees so that's where your business",
    "start": "4396199",
    "end": "4401400"
  },
  {
    "text": "logic sits again that can be run in uh in any uh on premise or in the cloud",
    "start": "4401400",
    "end": "4406639"
  },
  {
    "text": "that can be run in any language that you want so it's a nice flexible way and it will just return decisions about what to do next what needs to be en queued what",
    "start": "4406639",
    "end": "4413639"
  },
  {
    "text": "is the state of the workflow going forwards so what this ends up with is a very clean separation so you end up with",
    "start": "4413639",
    "end": "4419679"
  },
  {
    "text": "a decoupled uh task logic from application flow all your workers have to worry about is implementing the work",
    "start": "4419679",
    "end": "4425920"
  },
  {
    "text": "that they have to do uh whilst the decider has to implement the logic and the flow of the application so it's",
    "start": "4425920",
    "end": "4431679"
  },
  {
    "text": "nicely encapsulated in these different different ways makes it much easier to scale out makes it much easier to fail",
    "start": "4431679",
    "end": "4437199"
  },
  {
    "text": "over and it makes it much easier to develop and much easier to write uh we also have um some scal so you can scale",
    "start": "4437199",
    "end": "4444120"
  },
  {
    "text": "your workers and deciders because they're stateless they don't need to know the full running state so if one of them fails you can checkpoint that and",
    "start": "4444120",
    "end": "4450520"
  },
  {
    "text": "pick it up where it where it K where it left off uh you can scale them out using autoscaling in the same way as you would",
    "start": "4450520",
    "end": "4455600"
  },
  {
    "text": "any other ec2 and we have support for what we are calling signals and errors so signal is basically a a um outof",
    "start": "4455600",
    "end": "4463920"
  },
  {
    "text": "bound signal uh that you can place into the audit history uh that will tell it the that will be issued by a decider or",
    "start": "4463920",
    "end": "4470679"
  },
  {
    "text": "one of the workers to say hey I did this and you can enter that into the state of the application we also have configurable timeouts uh so something",
    "start": "4470679",
    "end": "4477480"
  },
  {
    "text": "fails along the way you can decide how to handle that again in your application logic you might TR want to just retry",
    "start": "4477480",
    "end": "4483520"
  },
  {
    "text": "you might want to do an exponential back off that sort of thing and we have markers in place so that you can checkpoint where applications or where a",
    "start": "4483520",
    "end": "4489560"
  },
  {
    "text": "running task got to before it failed for example this is what it looks like on the website uh this is the default page",
    "start": "4489560",
    "end": "4496280"
  },
  {
    "text": "uh we're getting better at building these things out I think um you can launch a a sample walk through and again",
    "start": "4496280",
    "end": "4501600"
  },
  {
    "text": "I highly recommend you spend some of your 25 bucks uh on the sample walk through that will spin up a collection",
    "start": "4501600",
    "end": "4507280"
  },
  {
    "text": "of uh workflow tasks a workflow sorry and a a collection of decider and uh uh",
    "start": "4507280",
    "end": "4512960"
  },
  {
    "text": "activity tasks and show you how they all fit together or you can just go ahead and start creating your own domain uh",
    "start": "4512960",
    "end": "4518320"
  },
  {
    "text": "you just have to give it uh the name of what you want to do and the retention period for the history and in the number",
    "start": "4518320",
    "end": "4523840"
  },
  {
    "text": "of days you give it a friendly description as well and after that you unlock the wonders of the simple",
    "start": "4523840",
    "end": "4529040"
  },
  {
    "text": "workflow dashboard here you can basically track all of the execution states of all of your running activities",
    "start": "4529040",
    "end": "4534719"
  },
  {
    "text": "uh workers and deciders um up there in the top right will appear your um your",
    "start": "4534719",
    "end": "4539920"
  },
  {
    "text": "cloudwatch metrics we're collecting metrics along all of this for you as well and you can see the backlog of what's running what is pending and all",
    "start": "4539920",
    "end": "4546360"
  },
  {
    "text": "the rest of it so you get a good overview of the running state of your workflows when you want to create a new",
    "start": "4546360",
    "end": "4551639"
  },
  {
    "text": "workflow uh you just create a workfl flow like this you give it a name you can we have versions of workflows again",
    "start": "4551639",
    "end": "4556719"
  },
  {
    "text": "tracking that Provence tracking that history uh you can give it a default task list uh and you can set the",
    "start": "4556719",
    "end": "4562199"
  },
  {
    "text": "timeouts uh so you can track the failures so the workflow timeout is the default execution of the entire workflow",
    "start": "4562199",
    "end": "4568159"
  },
  {
    "text": "and then you can have individual task timeouts as and handle those as well then you can register an activity uh",
    "start": "4568159",
    "end": "4573480"
  },
  {
    "text": "this is a point in the workflow and again you can spec specify the timeout you can specify what we're calling a",
    "start": "4573480",
    "end": "4579760"
  },
  {
    "text": "task list which is a collection of these tasks uh the orchestration you might think of it as a q name and the name and",
    "start": "4579760",
    "end": "4585560"
  },
  {
    "text": "the version as well after that you can query what you're doing and you can just run new workflows uh once they're up and",
    "start": "4585560",
    "end": "4591159"
  },
  {
    "text": "running and they will go off and distribute those tasks over out over your infrastructure all of this again",
    "start": "4591159",
    "end": "4597000"
  },
  {
    "text": "delivered in a pay youo model as you might expect and here is the pricing uh",
    "start": "4597000",
    "end": "4602239"
  },
  {
    "text": "so that is one 100th of a cent per worklow and you'll pay",
    "start": "4602239",
    "end": "4609560"
  },
  {
    "text": ".5 cents uh per day for any workflow that is running over 24 hours uh it's",
    "start": "4609560",
    "end": "4615639"
  },
  {
    "text": "that number of zeros and 25 per task so I think that's a quarter of a thousandth of a cent per task signal or marker and",
    "start": "4615639",
    "end": "4622159"
  },
  {
    "text": "you'll pay 10 cents per gigabyte for the first gigabyte of inbound traffic uh the first gigabyte out is free and then it's",
    "start": "4622159",
    "end": "4628880"
  },
  {
    "text": "normal AWS usage prices after that so that's what you're going to pay for running these things we also have a free",
    "start": "4628880",
    "end": "4634920"
  },
  {
    "text": "tier to help you get started with this as well so we'll give you 1,000 workflow executions 10,000 tasks timers signals",
    "start": "4634920",
    "end": "4641040"
  },
  {
    "text": "and markers and 30,000 workflow execution days in order to be able to run it so you can start building out",
    "start": "4641040",
    "end": "4646480"
  },
  {
    "text": "actually reasonably complex business processes using simple workflow and keep them under the free tier uh in addition",
    "start": "4646480",
    "end": "4652920"
  },
  {
    "text": "to that to help you take advantage of this we have something which we're calling the flow framework uh this is a Java abstraction of the simple workflow",
    "start": "4652920",
    "end": "4659440"
  },
  {
    "text": "service so it lets you deal with activities and workers and deciders in a much more native Java friendly way uh",
    "start": "4659440",
    "end": "4665920"
  },
  {
    "text": "and I thought you might like to hear about a use case uh this is one of my all-time favorite AWS use cases uh this",
    "start": "4665920",
    "end": "4671560"
  },
  {
    "text": "is by our our friends at the NASA jet propulsion laboratory NASA JPL um and it",
    "start": "4671560",
    "end": "4676920"
  },
  {
    "text": "concerns this little guy so this is one of their Mars rovers um this I forget the name of this one but the important",
    "start": "4676920",
    "end": "4683400"
  },
  {
    "text": "part is up here uh this is a stereo camera uh which sits on top of the Mars rover the robotics of the Mars rover are",
    "start": "4683400",
    "end": "4690400"
  },
  {
    "text": "kind of complicated uh but it's this stereo camera which basically drives the robots movements uh when it's on Mars",
    "start": "4690400",
    "end": "4697239"
  },
  {
    "text": "this is all done on Mars right so what happens is the little Mars Rover uh moves to where it wants to go it'll Park",
    "start": "4697239",
    "end": "4704199"
  },
  {
    "text": "up and it'll take an image with both the left eye and the right eye of its stereo",
    "start": "4704199",
    "end": "4709320"
  },
  {
    "text": "camera after that it's a workflow and NASA are running this exact workflow live on simple workflow at the moment so",
    "start": "4709320",
    "end": "4715760"
  },
  {
    "text": "they take the left image they warp it to the terrain they take the Right image they warp it to the domain there's a",
    "start": "4715760",
    "end": "4720920"
  },
  {
    "text": "dependency here because both the left and the right images have to have been received from Mars to AWS they have to",
    "start": "4720920",
    "end": "4727159"
  },
  {
    "text": "be warped to the terrain and then they can be matched so they do a stereo match against the two images they use that",
    "start": "4727159",
    "end": "4732679"
  },
  {
    "text": "match to build out a 3D map and then they tile that across the entire terrain and this is pretty much what it looks",
    "start": "4732679",
    "end": "4738679"
  },
  {
    "text": "like so this is a 2 gigapixel image that NASA creates using these stereo images",
    "start": "4738679",
    "end": "4744280"
  },
  {
    "text": "it pans across you can see the little tracks of the robot there coming across the screen like that and uh the uh the",
    "start": "4744280",
    "end": "4749600"
  },
  {
    "text": "Tactical Team back at Nasa uh using this workflow execute the next workflow along",
    "start": "4749600",
    "end": "4755000"
  },
  {
    "text": "which is where they basically uh decide where they want the Mars rover to move to next uh it will compute the exact",
    "start": "4755000",
    "end": "4760880"
  },
  {
    "text": "movement uh so they can move around Rock and they know the exact distance and the altitude that the robot's going to move",
    "start": "4760880",
    "end": "4766520"
  },
  {
    "text": "through because they've done all of the analytics on top of the images that have been received and all of that is done through the simple workflow Service uh",
    "start": "4766520",
    "end": "4773159"
  },
  {
    "text": "so that is a um a robot moving on Mars all powered by swf I think that's",
    "start": "4773159",
    "end": "4779239"
  },
  {
    "text": "fantastic uh and on that I can open it up for any",
    "start": "4779239",
    "end": "4784320"
  },
  {
    "text": "Q&A any questions on simple workflow there's one at the back yes sir oh",
    "start": "4784960",
    "end": "4790080"
  },
  {
    "text": "there's one over here sorry yes sir hi yeah um I'm interested to see that",
    "start": "4790080",
    "end": "4795880"
  },
  {
    "text": "obviously there's quite a lot of potential for kind of business logic going into this kind of workflow thing and if we doing that in kind of",
    "start": "4795880",
    "end": "4801880"
  },
  {
    "text": "traditional environment we'd be being good software developers and writing lots of functional tests business div",
    "start": "4801880",
    "end": "4808159"
  },
  {
    "text": "development approach first that kind of thing to prove that our logic was",
    "start": "4808159",
    "end": "4813239"
  },
  {
    "text": "correct what kind of support is there existing or planned for kind of allowing",
    "start": "4813239",
    "end": "4818719"
  },
  {
    "text": "tests and proving the correctness of the of the logic yes so really good question so um the answer is really that you can",
    "start": "4818719",
    "end": "4826199"
  },
  {
    "text": "you can run these on any number of data sets right so each workflow could take an input for example and whilst you",
    "start": "4826199",
    "end": "4832760"
  },
  {
    "text": "might want to run that input against production code uh or production data or in a production environment uh those",
    "start": "4832760",
    "end": "4839040"
  },
  {
    "text": "input parameters might specify a test environment in which you know the outcome of the workflow right so all you",
    "start": "4839040",
    "end": "4845120"
  },
  {
    "text": "have to do is run the workflow against your test data set just as you would in any other integration or or or QA test",
    "start": "4845120",
    "end": "4851080"
  },
  {
    "text": "and make sure that the result you get at the other end is what you expect uh so testing is sort of built in and of",
    "start": "4851080",
    "end": "4856960"
  },
  {
    "text": "course you can automate this so every time you make a check into your code you update your decider you update any of your your business processes around that",
    "start": "4856960",
    "end": "4863639"
  },
  {
    "text": "you can automatically kick off through the API the run of the test workflow to make sure that your it's just another",
    "start": "4863639",
    "end": "4869520"
  },
  {
    "text": "integration test on your continuous integration pool any more yes",
    "start": "4869520",
    "end": "4878039"
  },
  {
    "text": "sir an EXT ition to that sort of question really which is um you're moving more and more into the platform",
    "start": "4881280",
    "end": "4887320"
  },
  {
    "text": "as a service kind of environment um and the thing that uh you don't have that",
    "start": "4887320",
    "end": "4892480"
  },
  {
    "text": "say an Azure or an app engine may have is a on premise on my laptop kind of",
    "start": "4892480",
    "end": "4898199"
  },
  {
    "text": "runtime environment that allows me to simulate it so I think in in continuation of that question being able",
    "start": "4898199",
    "end": "4903360"
  },
  {
    "text": "to sort of Step through and debug and kind of do unit testing locally before",
    "start": "4903360",
    "end": "4908639"
  },
  {
    "text": "deploying into a kind of a full environment um that's the sort of thing that kind of not there and I'm not sure",
    "start": "4908639",
    "end": "4914199"
  },
  {
    "text": "if that's kind of what he was driving at too sure so I I take your point we're actually seeing uh we're actually seeing",
    "start": "4914199",
    "end": "4920000"
  },
  {
    "text": "customers moving the opposite direction we're seeing customers move much more of their Devon test environments up onto",
    "start": "4920000",
    "end": "4925120"
  },
  {
    "text": "AWS just because it's a more flexible way of encapsulating the different environments that they're working with but I absolutely take your",
    "start": "4925120",
    "end": "4932600"
  },
  {
    "text": "point any more yes",
    "start": "4932600",
    "end": "4937760"
  },
  {
    "text": "sir uh how the workflow management is uh",
    "start": "4941560",
    "end": "4947360"
  },
  {
    "text": "cope with the",
    "start": "4947360",
    "end": "4950280"
  }
]