[
  {
    "text": "all right good afternoon let's try it",
    "start": "50",
    "end": "5069"
  },
  {
    "text": "again good afternoon thank you so much well welcome to reinvent my name is Arun",
    "start": "5069",
    "end": "10620"
  },
  {
    "text": "Gupta I'm a principal open source technologist at Amazon and with me today",
    "start": "10620",
    "end": "15750"
  },
  {
    "text": "I have Rafael a Appel a software engineer at Sandow all right let's talk about it so today we going to be talking",
    "start": "15750",
    "end": "20970"
  },
  {
    "text": "about mastering kubernetes on AWS so as I said I am a principal open source",
    "start": "20970",
    "end": "26939"
  },
  {
    "text": "technologist at Amazon I'm part of the open source team I'm also the board rep for AWS on cloud",
    "start": "26939",
    "end": "34020"
  },
  {
    "text": "native computing foundation I'm responsible for the strategy for CN CF within AWS I'm a Fellows of SSF software engineers",
    "start": "34020",
    "end": "41219"
  },
  {
    "text": "Zalando mostly working on containers and container orchestration I love go I hope",
    "start": "41219",
    "end": "47129"
  },
  {
    "text": "you do yeah meet aliens full of wine and honey all",
    "start": "47129",
    "end": "52440"
  },
  {
    "text": "right a Lima one or two so today you know this is not intended to be a",
    "start": "52440",
    "end": "57510"
  },
  {
    "text": "kubernetes 101 session what we have what we are doing is we are talking about four different aspects of kubernetes",
    "start": "57510",
    "end": "63510"
  },
  {
    "text": "essentially and then talking about how you could be successful really mastered those topics in context of kubernetes on",
    "start": "63510",
    "end": "70110"
  },
  {
    "text": "AWS so the topics that we are talking about is how do you set up a cluster on AWS we'll talk about you know how do you",
    "start": "70110",
    "end": "77040"
  },
  {
    "text": "do CI CD of your applications what are the offerings opinions practices around that then we'll talk about Identity and",
    "start": "77040",
    "end": "84390"
  },
  {
    "text": "Access Management how do you make sure that your I am investment into AWS can be repurposed within context of",
    "start": "84390",
    "end": "91259"
  },
  {
    "text": "kubernetes and then last but not the least how do you get visibility in the cluster and on what does really",
    "start": "91259",
    "end": "97770"
  },
  {
    "text": "visibility me and the way we are intending to do is I'll talk about it what is it that we are seeing among our",
    "start": "97770",
    "end": "103590"
  },
  {
    "text": "customers the practices and then Raphael I will go about you know what practices are good but here is an opinion on how",
    "start": "103590",
    "end": "111060"
  },
  {
    "text": "we are running it in production today all right so let's get started on that so let's talk about kubernetes cluster",
    "start": "111060",
    "end": "117600"
  },
  {
    "text": "set up choices what am I to us just today well if you look at it in terms of",
    "start": "117600",
    "end": "123630"
  },
  {
    "text": "kubernetes cluster itself now what do you mean you know you need to install a cluster upgrade a cluster delete a cluster you know deploy applications",
    "start": "123630",
    "end": "130590"
  },
  {
    "text": "over there lots of ways by which you can do that today in terms of development of",
    "start": "130590",
    "end": "135810"
  },
  {
    "text": "course you are looking at mini cube so mini cube is a literally CLI that you download on your machine it leverages",
    "start": "135810",
    "end": "141989"
  },
  {
    "text": "hypervisor framework or VirtualBox whatever is there on your book and then it creates a VM so it's a single cluster",
    "start": "141989",
    "end": "148140"
  },
  {
    "text": "single node cluster of kubernetes that is on your machine very easy and all very easy for me to operate you know in",
    "start": "148140",
    "end": "154170"
  },
  {
    "text": "a flight mode for example because I don't have to really worry about it provided I have all the right images",
    "start": "154170",
    "end": "159209"
  },
  {
    "text": "downloaded if you're looking for an option from the community side of it cool now mini cube is good but a single",
    "start": "159209",
    "end": "165450"
  },
  {
    "text": "node I want to create a multi master and a multi worker cluster on Amazon cops is a beautiful option I love it but there",
    "start": "165450",
    "end": "172800"
  },
  {
    "text": "are you know 18 different ways by which you can run kubernetes on AWS and so we maintain a list on this domain",
    "start": "172800",
    "end": "179250"
  },
  {
    "text": "kubernetes - AWS dot io we talked about different options over there one of our",
    "start": "179250",
    "end": "184409"
  },
  {
    "text": "favorites is cops and we'll talk about that a little bit later as well now of course if you are doing production this",
    "start": "184409",
    "end": "190830"
  },
  {
    "text": "is a brand new release that Andy Jesse talked about in his keynote this morning if you're looking to do it in a highly",
    "start": "190830",
    "end": "196530"
  },
  {
    "text": "available secure reliable manner that Amazon is used to then we have elastic",
    "start": "196530",
    "end": "202050"
  },
  {
    "text": "container service for kubernetes we'll talk about a little bit of details about it now if you wanna learn more about it",
    "start": "202050",
    "end": "207690"
  },
  {
    "text": "then pinion 7 is where my colleague brandon is talking about this service right now well I wanted to be in their",
    "start": "207690",
    "end": "213510"
  },
  {
    "text": "session myself anyway there are other options as well core OS Red Hat open ship the star really indicates is Red",
    "start": "213510",
    "end": "220319"
  },
  {
    "text": "Hat has built a lot of tooling you know open yet did way on top of kubernetes platform over there and then of course",
    "start": "220319",
    "end": "225450"
  },
  {
    "text": "there is cloud formation terraform whole different ways by which you can create a cabinet is cluster it really",
    "start": "225450",
    "end": "231180"
  },
  {
    "text": "depends upon what you need is but there's a wide variety of choices on how can you set up a kubernetes cluster on",
    "start": "231180",
    "end": "236310"
  },
  {
    "text": "AWS now let's talk about it well of course",
    "start": "236310",
    "end": "241319"
  },
  {
    "text": "we have partners as well so darker mesosphere hep tio these are very good partners doctor particularly has talked",
    "start": "241319",
    "end": "247200"
  },
  {
    "text": "about how they're gonna have to binary support baked into the doc or desktop itself now let's talk about cops a",
    "start": "247200",
    "end": "252840"
  },
  {
    "text": "little bit well what is cops cops is essentially a tool that is created by cig AWS there are two lead authors of it",
    "start": "252840",
    "end": "258750"
  },
  {
    "text": "does the press love and just in Santa Barbara we work with them very closely these are the who essentially created the tool cops",
    "start": "258750",
    "end": "264290"
  },
  {
    "text": "and Krishna was involved as well now see kws is where this is being discussed there's a slack channel for it and there",
    "start": "264290",
    "end": "271190"
  },
  {
    "text": "is a office hours that happens every other Friday so it's truly community supported there is no really company",
    "start": "271190",
    "end": "276890"
  },
  {
    "text": "behind it there is no production support that if you run it on your own there are all the tools available in terms of",
    "start": "276890",
    "end": "282320"
  },
  {
    "text": "upgrading and all those things but you're on your own or rely upon office hours it can also generate your cloud",
    "start": "282320",
    "end": "288560"
  },
  {
    "text": "formation or terraform scripts so that could be a good starting point from you and then you start with those scripts",
    "start": "288560",
    "end": "293570"
  },
  {
    "text": "and then create your cluster from there on of course the project is living on github.com / kubernetes / cops and here",
    "start": "293570",
    "end": "301460"
  },
  {
    "text": "is the command which kind of gets you created with cops essentially what you can do is you can specify how many",
    "start": "301460",
    "end": "306740"
  },
  {
    "text": "masters I want what is my master instance type how many workers I want what are my worker instance types you",
    "start": "306740",
    "end": "313880"
  },
  {
    "text": "know what kind of networking do I want do I want to drive on Cube net or I want calico or I want weave or I want some",
    "start": "313880",
    "end": "319760"
  },
  {
    "text": "other networking over there and then of course you can start specifying the if you want to etch a cluster",
    "start": "319760",
    "end": "325550"
  },
  {
    "text": "what are your availability zones so by simply giving these tabs cops automatically create a cluster for you",
    "start": "325550",
    "end": "332120"
  },
  {
    "text": "across multiple availability zones in a region let's talk a little bit about",
    "start": "332120",
    "end": "337610"
  },
  {
    "text": "elastic container service for kubernetes a brand new service little give me goosebumps to talk about it this is the",
    "start": "337610",
    "end": "342740"
  },
  {
    "text": "first thing I'm talking about it publicly so and this is very exciting for me personally essentially what it",
    "start": "342740",
    "end": "348320"
  },
  {
    "text": "gives you is a managed kubernetes control plane you know setting up a kubernetes cluster is hard it's not for",
    "start": "348320",
    "end": "355310"
  },
  {
    "text": "the faint of the heart managing EDD is not for the faint of the heart you know I'm running up a cluster what size is going to be what the",
    "start": "355310",
    "end": "361610"
  },
  {
    "text": "instance type is going to be what if my master failed it's not easy so that's exactly what you know that's the hard",
    "start": "361610",
    "end": "367220"
  },
  {
    "text": "problem that's what we like to solve that's what essentially eks gives you or elastic container service for cubanelles",
    "start": "367220",
    "end": "373390"
  },
  {
    "text": "the worker nodes you bring very much like an ICS fashion so you bring your worker nodes and you say here are my",
    "start": "373390",
    "end": "379820"
  },
  {
    "text": "worker nodes now connect them to my master and in terms of master essentially we are giving you a highly",
    "start": "379820",
    "end": "385580"
  },
  {
    "text": "available master at CD nodes you give a URI from your perspective we take care",
    "start": "385580",
    "end": "390710"
  },
  {
    "text": "of updating patching scaling maintaining those masters and then you bring your worker nodes and",
    "start": "390710",
    "end": "396020"
  },
  {
    "text": "connect to the master and you're good to go what are some of the core tenets of eks",
    "start": "396020",
    "end": "401540"
  },
  {
    "text": "particularly well just like in a very classical Amazon way we want to make sure we give you reliability visibility scalability high",
    "start": "401540",
    "end": "409010"
  },
  {
    "text": "availability all those ility is that we are used to from Amazon we want to give you those capabilities as part of ich s",
    "start": "409010",
    "end": "417760"
  },
  {
    "text": "most important for us is provide a 100% upstream experience there is no forking",
    "start": "417760",
    "end": "423380"
  },
  {
    "text": "of kubernetes that's going to happen here what we are looking for is you are downloading kubernetes you are setting",
    "start": "423380",
    "end": "428540"
  },
  {
    "text": "up Kuban it is cluster you're running on mini cube essentially setting up a context we want you to be able to say",
    "start": "428540",
    "end": "434330"
  },
  {
    "text": "use mini cube context or eks context and just deploy my application over there so",
    "start": "434330",
    "end": "440870"
  },
  {
    "text": "we want to make sure that anything that we do on the kubernetes side of it because control plane is of course ours but anything on the developer experience",
    "start": "440870",
    "end": "447950"
  },
  {
    "text": "and now we want to make sure that is done in a very open source way you're not required or forced to use any of the",
    "start": "447950",
    "end": "454820"
  },
  {
    "text": "existing AWS services but we will take care of the undifferentiated heavy lifting for you so for example if you",
    "start": "454820",
    "end": "460520"
  },
  {
    "text": "want to run a LB ingress controller we will give you a provision for that you want to run and all Calico as a",
    "start": "460520",
    "end": "465650"
  },
  {
    "text": "networking policy so we're going to give you a provision for that so anything on those lines will take care of the integration with cloud watch cloud",
    "start": "465650",
    "end": "472010"
  },
  {
    "text": "trails all of those will be offered to you and last but not the least which is",
    "start": "472010",
    "end": "477170"
  },
  {
    "text": "again I'm very excited about is we will be very actively contributing to the upstream project going forward and there",
    "start": "477170",
    "end": "482690"
  },
  {
    "text": "are several partners that means working with particularly help your labs once again it's a very good partner and I'll talk about them a little bit later as",
    "start": "482690",
    "end": "488690"
  },
  {
    "text": "well so how does my API look like today well I mean of course you can create your eks cluster either using AWS",
    "start": "488690",
    "end": "496850"
  },
  {
    "text": "console or using CLI so in this case for example all I'm saying is AWS eks create",
    "start": "496850",
    "end": "502400"
  },
  {
    "text": "my cluster give me a cluster name what is my master version you know by default you know when we go GA first half of",
    "start": "502400",
    "end": "508850"
  },
  {
    "text": "2018 whatever the latest upstream version is is that's going to be supported and we're gonna support previous two versions as well and then I",
    "start": "508850",
    "end": "515479"
  },
  {
    "text": "give it a role on my role on is actually my I am name so which is the right and integration that we are building into",
    "start": "515480",
    "end": "521530"
  },
  {
    "text": "cube cuttle itself now and this is something we are working with heavier labs on so that's well sort of my",
    "start": "521530",
    "end": "527630"
  },
  {
    "text": "architecture but typically if you think about it when you create your kubernetes architecture you're looking at master at",
    "start": "527630",
    "end": "534620"
  },
  {
    "text": "CD and worker nodes you know this is all spread up on the top and on the bottom everything is your responsibility we",
    "start": "534620",
    "end": "541610"
  },
  {
    "text": "simplify that we give you a API server we give you a URI that is a highly",
    "start": "541610",
    "end": "547550"
  },
  {
    "text": "available URI for you you bring your worker nodes you spread them across different availability zones",
    "start": "547550",
    "end": "552980"
  },
  {
    "text": "and you connect that to the API server and ready to roll and the most beautiful",
    "start": "552980",
    "end": "558290"
  },
  {
    "text": "part as I said earlier is where you take your existing cube color and you deploy",
    "start": "558290",
    "end": "563600"
  },
  {
    "text": "using that exactly with the experience that you are used to there is no forking again I want to highlight that it's all",
    "start": "563600",
    "end": "570380"
  },
  {
    "text": "done out in the open source thank you our own all right so as I said this will",
    "start": "570380",
    "end": "578180"
  },
  {
    "text": "be the opinionated part of the talk where I'm going to show you how we've been doing communities on AWS at solando",
    "start": "578180",
    "end": "584350"
  },
  {
    "text": "since more than a year now in production of course but before going into the cluster setup let's talk a little bit",
    "start": "584350",
    "end": "591050"
  },
  {
    "text": "what is going on do solando is the leading European fashion platform so if you're not from Europe from you yes so",
    "start": "591050",
    "end": "597470"
  },
  {
    "text": "from all over the world boy I never heard of this but to let you understand the scale those are our numbers so we",
    "start": "597470",
    "end": "603860"
  },
  {
    "text": "operate in 15 markets in Europe with six of million centres 22 million active customers and some other numbers like",
    "start": "603860",
    "end": "611900"
  },
  {
    "text": "3.6 billion net sales last year and most importantly we have 14,000 employees",
    "start": "611900",
    "end": "617920"
  },
  {
    "text": "which of them like 1,100 are actually engineers work in tech and they have",
    "start": "617920",
    "end": "625090"
  },
  {
    "text": "experienced since 9 years are using AWS originally we were using an on-premise",
    "start": "625090",
    "end": "631880"
  },
  {
    "text": "setup so we have our own bare metal del centers we have some clearly some limited capacity to grow to scale our",
    "start": "631880",
    "end": "639110"
  },
  {
    "text": "applications and this was a problem while our organization were growing we went through a pretty major growth in",
    "start": "639110",
    "end": "645920"
  },
  {
    "text": "the last year's and was still growing pretty fast so we needed more capacity more overall our deployment strategy was",
    "start": "645920",
    "end": "652130"
  },
  {
    "text": "based on some custom tooling that we develop internally which also met man people need to learn those tool to use",
    "start": "652130",
    "end": "658540"
  },
  {
    "text": "we then migrated to without an immigration in it to AWS in early 2015 and the approach we took is essentially",
    "start": "658540",
    "end": "667269"
  },
  {
    "text": "to go with a single docker container running on a ec2 instance this meant",
    "start": "667269",
    "end": "673899"
  },
  {
    "text": "that the developer needed to understand what I mean see two instances which is actually not so hard but they had to",
    "start": "673899",
    "end": "679870"
  },
  {
    "text": "pick the right ec2 instance for the type of workload which is clearly complicated",
    "start": "679870",
    "end": "685959"
  },
  {
    "text": "for all those developers our setup was heavily based on crop formation which we used to deploy we then decided to",
    "start": "685959",
    "end": "692410"
  },
  {
    "text": "simplify this to achieve higher density introducing kubernetes on AWS which we found like a very great",
    "start": "692410",
    "end": "699819"
  },
  {
    "text": "tool before because of first of all is api and being open source so our setup",
    "start": "699819",
    "end": "707139"
  },
  {
    "text": "is based on multiple objects account and we have essentially we provision one",
    "start": "707139",
    "end": "712480"
  },
  {
    "text": "single kubernetes cluster per a lobbyist account and we currently run 50",
    "start": "712480",
    "end": "718329"
  },
  {
    "text": "kubernetes clusters so quite a huge number those clusters are relatively small in the sense that so and we took",
    "start": "718329",
    "end": "725949"
  },
  {
    "text": "this decision because we wanted to first of all limit the impact of possible problems or outages only to the single",
    "start": "725949",
    "end": "732189"
  },
  {
    "text": "cluster that would be affected this makes sure that not the entire company can be affected by possible customer",
    "start": "732189",
    "end": "738309"
  },
  {
    "text": "outages which clearly is helpful when you get started with such tool another",
    "start": "738309",
    "end": "743709"
  },
  {
    "text": "important point is that the community source code when we started more than a year ago as I said used to be not really",
    "start": "743709",
    "end": "750129"
  },
  {
    "text": "optimized to deal with it obvious rate limiting and this was particularly true when mounting EBS volumes our setup is",
    "start": "750129",
    "end": "759069"
  },
  {
    "text": "based on cloud formation the decision was actually pretty easy for us because as I said we were using cloud formation",
    "start": "759069",
    "end": "765309"
  },
  {
    "text": "since quite some time so we had existing experience in tooling to the old confirmation so for us was just a",
    "start": "765309",
    "end": "771639"
  },
  {
    "text": "first-class citizen as a base set up we use container Linux as operating system",
    "start": "771639",
    "end": "777850"
  },
  {
    "text": "we use the standard ami that you find on AWS we don't do any a my customization which frees us from some operational",
    "start": "777850",
    "end": "785589"
  },
  {
    "text": "efforts another decision that we talk is to use as overlay Network and we decided to do",
    "start": "785589",
    "end": "792680"
  },
  {
    "text": "that to support clusters that are bigger than 50 nodes and this was due to a",
    "start": "792680",
    "end": "797930"
  },
  {
    "text": "limit to the entry to the entry in the routing table in AWS and as I said we",
    "start": "797930",
    "end": "804110"
  },
  {
    "text": "had small clusters but we wanted to keep this option open to have a bigger cluster which sometimes we actually used",
    "start": "804110",
    "end": "810880"
  },
  {
    "text": "the approach that we embraced the one of the immutable infrastructure we don't do updates and reboots of nodes instead",
    "start": "810880",
    "end": "818240"
  },
  {
    "text": "whenever we have a configuration change which is actually quite often we do a replacement unknown one by one in a",
    "start": "818240",
    "end": "825290"
  },
  {
    "text": "rolling fashion so our cluster setup looks like that so we have a master",
    "start": "825290",
    "end": "831140"
  },
  {
    "text": "dough scaling group for them a new scaling group for the master nodes that is spanning three availability zone and",
    "start": "831140",
    "end": "836620"
  },
  {
    "text": "another auto scaling group for the workers which is also spanning tree availability zone so these are food EHA",
    "start": "836620",
    "end": "842090"
  },
  {
    "text": "set up those available is on our in the European region so Frankfurt we deploy",
    "start": "842090",
    "end": "849890"
  },
  {
    "text": "it CD outside of the kubernetes cluster with conformation as well with a 5 node",
    "start": "849890",
    "end": "855260"
  },
  {
    "text": "cluster this the master has I said this full eh-eh so in front of them you'll",
    "start": "855260",
    "end": "860690"
  },
  {
    "text": "find a classic load balancer that is used both for interaction for the user for example via cube CDL and for the",
    "start": "860690",
    "end": "869090"
  },
  {
    "text": "communication from the worker to the Masters as I said operations this is",
    "start": "869090",
    "end": "874430"
  },
  {
    "text": "very important for us so we have 50 clusters so what see if there are any ops here you know that you probably",
    "start": "874430",
    "end": "880580"
  },
  {
    "text": "don't want to do manual upgrades of those clusters first of all because this is very very error-prone you could break",
    "start": "880580",
    "end": "886310"
  },
  {
    "text": "anything at any time and because it's time consuming so we developed two components the idea here is very simple",
    "start": "886310",
    "end": "893300"
  },
  {
    "text": "and I want to explain it to you one components this is cluster registry this is just a metadata service just it",
    "start": "893300",
    "end": "898670"
  },
  {
    "text": "was a REST API and it stores this data in an RDS database and this contains information regarding each of those",
    "start": "898670",
    "end": "904040"
  },
  {
    "text": "clusters so what is this lifecycle are they requested where they created and all these kind of things and it",
    "start": "904040",
    "end": "910280"
  },
  {
    "text": "points you as a reference to a git repo which is actually on CARICOM and you can find it on our organization which is",
    "start": "910280",
    "end": "916580"
  },
  {
    "text": "actually contains all the configuration for this cluster so this we made available open source such that people can watch it",
    "start": "916580",
    "end": "922410"
  },
  {
    "text": "and providers feedback or you know learn from what we learned after modern year in production and then we have this",
    "start": "922410",
    "end": "928769"
  },
  {
    "text": "component crosstab cycle manager and this is a very simple go code that",
    "start": "928769",
    "end": "934019"
  },
  {
    "text": "actually watches this configuration so this metadata regarding clusters and it watches the skit repo and whenever there",
    "start": "934019",
    "end": "940230"
  },
  {
    "text": "is a change it will just make sure that this change is applied to the cluster such that and this actually means that",
    "start": "940230",
    "end": "946170"
  },
  {
    "text": "it would be a cloud formation stack to update as I said we use confirmation and then there will be some additional",
    "start": "946170",
    "end": "952170"
  },
  {
    "text": "components that come there are completing our set up for example cube - I am that will show later they're",
    "start": "952170",
    "end": "958649"
  },
  {
    "text": "actually are applied that's Cuban it is manifest alright this was it so let's talk about CD alright very cool so those",
    "start": "958649",
    "end": "967259"
  },
  {
    "text": "are the way you know some of the choices the way we have look at it how you create your kubernetes cluster let's talk about what does it take to build a",
    "start": "967259",
    "end": "974009"
  },
  {
    "text": "deployment pipeline essentially we're talking about good push to prod essentially of my applications now",
    "start": "974009",
    "end": "979730"
  },
  {
    "text": "Jenkins you know that's sort of one of the biggest solutions that developers and customers are using today to create",
    "start": "979730",
    "end": "985439"
  },
  {
    "text": "CI CD pipeline so we'll talk about you know how do we see our customer base using Jenkins for doing deployment",
    "start": "985439",
    "end": "992279"
  },
  {
    "text": "pipelines with Jenkins at AWS we have of course the code star suite and we have",
    "start": "992279",
    "end": "998430"
  },
  {
    "text": "code pipeline code commit code bill and I'll show you an example and a reference architecture that we are building on how",
    "start": "998430",
    "end": "1004550"
  },
  {
    "text": "you can use that set of tools to deploy your application from in development to",
    "start": "1004550",
    "end": "1009740"
  },
  {
    "text": "production and then of course AWS relies upon its partners pretty heavily so we",
    "start": "1009740",
    "end": "1015649"
  },
  {
    "text": "have a lot of partners even in this space for example get labs shippable circle CI or code shape you know who we",
    "start": "1015649",
    "end": "1021709"
  },
  {
    "text": "work with who offer tools on how can they deploy you know their application to production you know in on AWS",
    "start": "1021709",
    "end": "1028850"
  },
  {
    "text": "essentially their bottom line is kubernetes where the Kuban wherever the kubernetes is running it doesn't matter but it works and could AWS - so when you",
    "start": "1028850",
    "end": "1037819"
  },
  {
    "text": "start with jenkins you know essentially what you have is a jenkins file you know in the jenkins file what you could do is",
    "start": "1037819",
    "end": "1043069"
  },
  {
    "text": "you can very easily set up a pipeline and in the jenkins file essentially what you're specifying is a yeah no syntax",
    "start": "1043069",
    "end": "1048830"
  },
  {
    "text": "over here and all I'm doing is I'm defining different stages here ok so let me walk you through those stages to the",
    "start": "1048830",
    "end": "1055550"
  },
  {
    "text": "essentially is a checkout stage that every time I do a good push well of course you have configured your github",
    "start": "1055550",
    "end": "1061940"
  },
  {
    "text": "hook and all those things but every time I do a git push what is gonna do well it's gonna check out my workspace once",
    "start": "1061940",
    "end": "1070100"
  },
  {
    "text": "it checks out my workspace that I'm saying okay in that workspace I have a docker file using that docker file",
    "start": "1070100",
    "end": "1077000"
  },
  {
    "text": "essentially build my image so that's my second stage I build my image then my",
    "start": "1077000",
    "end": "1082790"
  },
  {
    "text": "third stage is okay I build the image now now push that image to whatever your",
    "start": "1082790",
    "end": "1088130"
  },
  {
    "text": "favorite hobby's docker hub ECR whatever the registry is wherever your registry",
    "start": "1088130",
    "end": "1093650"
  },
  {
    "text": "is configured in this case we're actually pushing to Amazon ec2 container registry and then of course last but not",
    "start": "1093650",
    "end": "1100280"
  },
  {
    "text": "the least stage is of course to roll out your application and for that essentially what you're using is a",
    "start": "1100280",
    "end": "1105410"
  },
  {
    "text": "deployment or llamó and you're using a very native kubernetes as a concept over there to roll out your application okay",
    "start": "1105410",
    "end": "1111980"
  },
  {
    "text": "so I mean essentially what we're saying is kubernetes describe the deployment you're just setting the image name everything about the image the",
    "start": "1111980",
    "end": "1118850"
  },
  {
    "text": "deployment stays the same the number of replicas you just rely upon native kubernetes constructs over there and",
    "start": "1118850",
    "end": "1124420"
  },
  {
    "text": "once you have that update application up and working then essentially your pipeline looks like this on a Jenkins",
    "start": "1124420",
    "end": "1131150"
  },
  {
    "text": "dashboard so you can literally see from red to green and how the stages are progressing and this is something that",
    "start": "1131150",
    "end": "1136820"
  },
  {
    "text": "we will be adding to the kubernetes on AWS workshop which I'll talk about a little bit later as well",
    "start": "1136820",
    "end": "1143020"
  },
  {
    "text": "now that's one way we see our customers using it the way that we recommend to",
    "start": "1143020",
    "end": "1148520"
  },
  {
    "text": "our customers also is of course using AWS code star suite and essentially the way it works out is and our developer",
    "start": "1148520",
    "end": "1154820"
  },
  {
    "text": "they push a code change to github repo you know to whatever a good repo essentially and with AWS code star suite",
    "start": "1154820",
    "end": "1162650"
  },
  {
    "text": "you can configure github to be one of the backend repos port pipeline essentially in that case it's looking",
    "start": "1162650",
    "end": "1168320"
  },
  {
    "text": "for any changes to the git repo once it happens it says ok a code commit has happened I got the change I got the",
    "start": "1168320",
    "end": "1174980"
  },
  {
    "text": "change notification once you get the turn it notification you automatically invoke code build code build is what's",
    "start": "1174980",
    "end": "1181970"
  },
  {
    "text": "going to build your docker image is going to push it to the Amazon Elastic",
    "start": "1181970",
    "end": "1187040"
  },
  {
    "text": "container registry you know thermite step three and then it calls the lambda function and the lambda",
    "start": "1187040",
    "end": "1193350"
  },
  {
    "text": "function essentially is basically a Python function which uses kubernetes Python SDK to trigger my deployment it",
    "start": "1193350",
    "end": "1200070"
  },
  {
    "text": "says all right I got the change here and then I'm going to trigger the deployment to kubernetes so your cube kurtal for",
    "start": "1200070",
    "end": "1206309"
  },
  {
    "text": "example the credentials for cube curdle are stored using AWS parameter store and the credentials are encrypted on rest",
    "start": "1206309",
    "end": "1213809"
  },
  {
    "text": "using kms so very secure credentials so you have preferred deployment to",
    "start": "1213809",
    "end": "1219870"
  },
  {
    "text": "kubernetes and then of course that pulls the image from your ec2 container registry so",
    "start": "1219870",
    "end": "1224880"
  },
  {
    "text": "that's again one of the reference architecture document that we are working on and will soon be added to the",
    "start": "1224880",
    "end": "1230070"
  },
  {
    "text": "workshop that again I'll talk about a little bit later all right thank your",
    "start": "1230070",
    "end": "1235440"
  },
  {
    "text": "room so when talking about CIC at CERN and all we have to talk a little bit of",
    "start": "1235440",
    "end": "1243270"
  },
  {
    "text": "how we got into the topic of CI CD with communities so we started from a situation where we had already something",
    "start": "1243270",
    "end": "1249720"
  },
  {
    "text": "like around 200 engineering teams and in our previous AWS approach those teams",
    "start": "1249720",
    "end": "1255090"
  },
  {
    "text": "were entirely entirely responsible for their CI CD set up this means they had",
    "start": "1255090",
    "end": "1260340"
  },
  {
    "text": "some basic tool and some internal teams they provided Jenkins as a service",
    "start": "1260340",
    "end": "1265440"
  },
  {
    "text": "internally so to say but the teams were responsible to choose the tool they wanted and to set it up to have their",
    "start": "1265440",
    "end": "1271950"
  },
  {
    "text": "own pipelines for production deployments this was this mean this meant in the end",
    "start": "1271950",
    "end": "1278040"
  },
  {
    "text": "we had several systems that we used to deploy to production and we had this bigger topic of compliance in which we",
    "start": "1278040",
    "end": "1284580"
  },
  {
    "text": "have some compliance rule that of course as a publicly listed company we have to respect and the fact that those",
    "start": "1284580",
    "end": "1292500"
  },
  {
    "text": "deployments I have to follow those rules was entirely left to the teams as you can understand this meant that the teams",
    "start": "1292500",
    "end": "1299760"
  },
  {
    "text": "could break those rules and they would get a violation and they would have to solve it when introducing kubernetes we",
    "start": "1299760",
    "end": "1306540"
  },
  {
    "text": "took a chance to actually fix this at the organizational level by making sure that the employment to production",
    "start": "1306540",
    "end": "1313440"
  },
  {
    "text": "systems were only possible VRC SED pipelines this means like you",
    "start": "1313440",
    "end": "1318480"
  },
  {
    "text": "know if you try to burn it is if you know kubernetes I'm pretty sure you did you probably know cue CDL or cube carro",
    "start": "1318480",
    "end": "1325120"
  },
  {
    "text": "as you wish to call it it's nice to interact with the cluster but you don't want to use this probably on your",
    "start": "1325120",
    "end": "1331510"
  },
  {
    "text": "production systems we did that so to enforce product GI CD best practices and",
    "start": "1331510",
    "end": "1336670"
  },
  {
    "text": "to exactly to have this idea of ends of operations so we don't want developers",
    "start": "1336670",
    "end": "1342100"
  },
  {
    "text": "or teams to just continuously interact with production system but just go through a consolidated CI CD process",
    "start": "1342100",
    "end": "1348520"
  },
  {
    "text": "this also allows us to have this compliance by design idea in which hold the compliance check that we need for",
    "start": "1348520",
    "end": "1354490"
  },
  {
    "text": "example we have an internal docket registry that we use to to have to austere images is the only one that has",
    "start": "1354490",
    "end": "1361510"
  },
  {
    "text": "to be used we can check that at the deployment time so at the first",
    "start": "1361510",
    "end": "1367960"
  },
  {
    "text": "iteration we started with Jenkins so that's the obvious one and the one we were already using and we were familiar",
    "start": "1367960",
    "end": "1373059"
  },
  {
    "text": "with it and the challenge that we had or the team that were working actually on this topic had was really to map Jenkins",
    "start": "1373059",
    "end": "1378940"
  },
  {
    "text": "to our organizational requirements one of them for example this is not a complete list but one of them is",
    "start": "1378940",
    "end": "1384040"
  },
  {
    "text": "traceability so given a production deployment what was the code comment that this that originated this",
    "start": "1384040",
    "end": "1391390"
  },
  {
    "text": "deployment and security how to build like really secure images with isolated",
    "start": "1391390",
    "end": "1397120"
  },
  {
    "text": "BMS or containers and so on and so forth so the decision that we took is to really have one Jenkins per kubernetes",
    "start": "1397120",
    "end": "1403870"
  },
  {
    "text": "cluster as I said we had like 50 of them and we went to this approach which looks like kind of radical but it was actually",
    "start": "1403870",
    "end": "1410110"
  },
  {
    "text": "the simplest thing to go with a really multi-tenancy so to really have the people that have to access this cluster",
    "start": "1410110",
    "end": "1415150"
  },
  {
    "text": "orally access this cluster it was very easy to get started but it didn't really",
    "start": "1415150",
    "end": "1421330"
  },
  {
    "text": "work it didn't really work for a number of reason one of them that we found out Jenkins was or at least the way we said",
    "start": "1421330",
    "end": "1427660"
  },
  {
    "text": "of junkies was not entirely cloud native we had issues like a threading keeping upgrading plugins and credential",
    "start": "1427660",
    "end": "1435370"
  },
  {
    "text": "distribution for example how do we properly distribute those credential to push to our internal docket registry and",
    "start": "1435370",
    "end": "1441040"
  },
  {
    "text": "so on moreover we set it up using a single",
    "start": "1441040",
    "end": "1446260"
  },
  {
    "text": "replica a stateful set which meant that whenever we do this thing that I told you like rolling updates of node",
    "start": "1446260",
    "end": "1453690"
  },
  {
    "text": "this meant downtime of this of this Jenkins instance which you know as a learning right there is no in the this",
    "start": "1453690",
    "end": "1460410"
  },
  {
    "text": "cloud native word there is no such thing as a single replica deployment for statehood set so as the second iteration",
    "start": "1460410",
    "end": "1467730"
  },
  {
    "text": "we started trying a bunch of those tools we tried cosas de spinnaker and this was more than a year ago again and this tool",
    "start": "1467730",
    "end": "1474180"
  },
  {
    "text": "was just not ready for us so what we did is essentially we started building our",
    "start": "1474180",
    "end": "1479370"
  },
  {
    "text": "own solution for building and deploying and this allowed us now to have a much",
    "start": "1479370",
    "end": "1484530"
  },
  {
    "text": "faster build time compared to our previous setup in which we have this master Jenkins master slave approach",
    "start": "1484530",
    "end": "1489660"
  },
  {
    "text": "with Jenkins and we built this the idea of deployment to kubernetes out of the",
    "start": "1489660",
    "end": "1495180"
  },
  {
    "text": "box with it so what I really want to tell you apart from the tool here is really the idea of how our the point",
    "start": "1495180",
    "end": "1502500"
  },
  {
    "text": "model looks like so engineer engineers really put we exposed the entire API of communities",
    "start": "1502500",
    "end": "1509700"
  },
  {
    "text": "right so they will use directly those kubernetes um also deployment llamo ingress services whatever whatever they",
    "start": "1509700",
    "end": "1516720"
  },
  {
    "text": "need to use and we have a git repository in which they put this llamo so this git",
    "start": "1516720",
    "end": "1521910"
  },
  {
    "text": "repository could be the same repository which where the code lives or it could be an entirely different repository but",
    "start": "1521910",
    "end": "1528450"
  },
  {
    "text": "this doesn't really matter there is a deliberate llamo which is just a configuration file that contains like steps for example deploy staging first",
    "start": "1528450",
    "end": "1534780"
  },
  {
    "text": "and to production later just to make sure everything works of course and the",
    "start": "1534780",
    "end": "1540180"
  },
  {
    "text": "important part here is that every single thing we deploy is version in a git repo let's back it up it's logged and it's",
    "start": "1540180",
    "end": "1547680"
  },
  {
    "text": "approved by two engineers so those things can be deployed only when they're merged to master and too much to master",
    "start": "1547680",
    "end": "1553440"
  },
  {
    "text": "you need approval of another engineers and this allows us to solve this problems of for example compliance all",
    "start": "1553440",
    "end": "1560010"
  },
  {
    "text": "right I am we have talked about two",
    "start": "1560010",
    "end": "1565740"
  },
  {
    "text": "aspects so far one is sort of setup how do you set up the cluster itself then we talked about how do you set up a CI CDI",
    "start": "1565740",
    "end": "1571890"
  },
  {
    "text": "the third aspect that we want to talk about is I am integration now what is identity and access management it's a",
    "start": "1571890",
    "end": "1577950"
  },
  {
    "text": "single entry point by which you can control access to your resources what can be done who can do it and things",
    "start": "1577950",
    "end": "1583650"
  },
  {
    "text": "like that you know when your AWS environment now it and really enable the secure access and",
    "start": "1583650",
    "end": "1588900"
  },
  {
    "text": "that's how you log in to your AWS account to your CLI to your console all of that okay now when you create a",
    "start": "1588900",
    "end": "1596430"
  },
  {
    "text": "kubernetes cluster using cops for example today it has two set of roles",
    "start": "1596430",
    "end": "1601740"
  },
  {
    "text": "one is an I am role that is for the master nodes and another I am role that",
    "start": "1601740",
    "end": "1607650"
  },
  {
    "text": "is for the worker nodes and you can see the permissions that are granted to them are a little bit different because master needs a little bit more",
    "start": "1607650",
    "end": "1613950"
  },
  {
    "text": "capability because for example when you are creating a cluster using cops your",
    "start": "1613950",
    "end": "1619830"
  },
  {
    "text": "state is stored in the s3 bucket so the master needs the ability to write to the",
    "start": "1619830",
    "end": "1625140"
  },
  {
    "text": "s3 bucket but the worker for example would need only to read that from the bucket so the permissions are a bit",
    "start": "1625140",
    "end": "1631020"
  },
  {
    "text": "different in terms of master and worker okay now that's the I am role over there",
    "start": "1631020",
    "end": "1637050"
  },
  {
    "text": "but what we need you know we need a first class integration for I am in kubernetes itself and what that means is",
    "start": "1637050",
    "end": "1643320"
  },
  {
    "text": "when I'm doing cube cuddle do I have the ability to use I am there I don't today",
    "start": "1643320",
    "end": "1650000"
  },
  {
    "text": "when I'm running my pod can the pod assume an identity there are solutions",
    "start": "1650000",
    "end": "1655650"
  },
  {
    "text": "around it but they have like pros and cons so let's talk about them a little bit as I said hefty olabs is one of our",
    "start": "1655650",
    "end": "1662910"
  },
  {
    "text": "very good partners you know we have been working with them they have this project called as Authenticator essentially",
    "start": "1662910",
    "end": "1668160"
  },
  {
    "text": "Authenticator what gives you is the ability to do authentication using I am using cube card so let's take a look at",
    "start": "1668160",
    "end": "1675300"
  },
  {
    "text": "this how this project works so think about this you know you have cube kernel which is your CLI you have the",
    "start": "1675300",
    "end": "1681030"
  },
  {
    "text": "kubernetes cluster in the middle and then you know which is sitting on AWS of course and then you have your auth service AWS or service which is sitting",
    "start": "1681030",
    "end": "1687870"
  },
  {
    "text": "in AWS environment so now from your cube cuddle essentially what you're doing is",
    "start": "1687870",
    "end": "1693840"
  },
  {
    "text": "I want to be able to pass an identity typically what happens is if you're cops",
    "start": "1693840",
    "end": "1700110"
  },
  {
    "text": "cluster is sitting on the runtime let's say if you have assigned a runtime identity or I am to a pod",
    "start": "1700110",
    "end": "1706050"
  },
  {
    "text": "but when queue coder is talking is using a different set of credentials so those two are disconnected so this effort is",
    "start": "1706050",
    "end": "1713490"
  },
  {
    "text": "essentially to ensure that I can pass my I am credentials from cube cut' alerts",
    "start": "1713490",
    "end": "1718500"
  },
  {
    "text": "using a CLI option and remember when we were creating the AWS eks create cluster",
    "start": "1718500",
    "end": "1723510"
  },
  {
    "text": "we were specifying the role or that's what this I am identity is so essentially from cube cutter itself I",
    "start": "1723510",
    "end": "1730170"
  },
  {
    "text": "can pass my AWS identity the cube cuddle cluster or the kubernetes cluster",
    "start": "1730170",
    "end": "1735840"
  },
  {
    "text": "sitting on AWS will talk to my AWS or service using that I am role it will",
    "start": "1735840",
    "end": "1741210"
  },
  {
    "text": "tell me you know authentication and authorization what kind of policies are attached to that role it will figure out",
    "start": "1741210",
    "end": "1746850"
  },
  {
    "text": "what needs to be done then within kubernetes itself you can set up our back that ok i got what i am role is",
    "start": "1746850",
    "end": "1754620"
  },
  {
    "text": "capable off then attach that I am role using our back in kubernetes ourselves what can you do in kubernetes so you",
    "start": "1754620",
    "end": "1762150"
  },
  {
    "text": "have passed the I am role goes to the cluster it goes to the auth service comes back to kubernetes cluster then",
    "start": "1762150",
    "end": "1768960"
  },
  {
    "text": "does the are back authorization so authentication happens with the AWS auth service authorization happens using our",
    "start": "1768960",
    "end": "1776190"
  },
  {
    "text": "back and then accordingly your action is allowed or not allowed so it's a really",
    "start": "1776190",
    "end": "1781530"
  },
  {
    "text": "nice combination essentially this is this is going to be a plugin to cube cuddle where and how and it's done in",
    "start": "1781530",
    "end": "1787380"
  },
  {
    "text": "open source but where and how it gets integrated upstream is a discussion that we are having today now we looked at I",
    "start": "1787380",
    "end": "1796710"
  },
  {
    "text": "am role for cue cuddle let's talk a little bit about I am role at runtime now as I said this I am role for master",
    "start": "1796710",
    "end": "1805260"
  },
  {
    "text": "and I am role for worker ok but that's one I am role for all my worker nodes what I want is the ability where my each",
    "start": "1805260",
    "end": "1812610"
  },
  {
    "text": "part could assume and I am raw essentially that's a capability and a feature that I want and the way it works",
    "start": "1812610",
    "end": "1818850"
  },
  {
    "text": "today is if you spin up a part the part really talks to the ec2 metadata service",
    "start": "1818850",
    "end": "1823920"
  },
  {
    "text": "figuring out okay this is what I'm requested to do can I do this and it does it accordingly all right now let's",
    "start": "1823920",
    "end": "1830430"
  },
  {
    "text": "take a look at it what are the possible solutions for that so a plugin that we have seen extremely popular within our",
    "start": "1830430",
    "end": "1835620"
  },
  {
    "text": "customers and developers also is cube - i am for example well let's see how this works now of course you have your worker",
    "start": "1835620",
    "end": "1842940"
  },
  {
    "text": "nodes you got two pods and a pod and then you have your easy to metadata API so what happens is the cube - I am is a",
    "start": "1842940",
    "end": "1850800"
  },
  {
    "text": "plugin that gets install as a daemon set once you have that demon set essentially now your pod",
    "start": "1850800",
    "end": "1857059"
  },
  {
    "text": "and in addition you also have a secure token service essentially okay that's sitting in the AWS environment so the",
    "start": "1857059",
    "end": "1862669"
  },
  {
    "text": "secure token service is a web service that enables you to request temporarily time-limited privileged credentials and",
    "start": "1862669",
    "end": "1870500"
  },
  {
    "text": "then that can be used for your part essentially so now when you make a request from pod now instead of going",
    "start": "1870500",
    "end": "1878059"
  },
  {
    "text": "directly to the ec2 metadata API it gets intercepted by the demon shell the demon",
    "start": "1878059",
    "end": "1883549"
  },
  {
    "text": "said now then talks to my secure token service it retrieves those temporary credentials it gives those credentials",
    "start": "1883549",
    "end": "1890720"
  },
  {
    "text": "and using those credentials actually then it talks to my easy to metadata service and then accordingly it the",
    "start": "1890720",
    "end": "1897080"
  },
  {
    "text": "permissions because the opinion depending upon the roles and the policies that are attached the part can",
    "start": "1897080",
    "end": "1902779"
  },
  {
    "text": "do the thing and not be the service okay so that's sort of the whole idea about cube - I am now that's sort of how the",
    "start": "1902779",
    "end": "1908270"
  },
  {
    "text": "backend works for cube - I am but what does it mean really you know how does my",
    "start": "1908270",
    "end": "1913460"
  },
  {
    "text": "app definition change because end of the day when I'm building my application I need to somehow still specify oh this is",
    "start": "1913460",
    "end": "1919789"
  },
  {
    "text": "the pod role or this is the I am role that the part should take so what happens is essentially in my deployment",
    "start": "1919789",
    "end": "1926899"
  },
  {
    "text": "what I'm showing you here is a deployment and the deployment I am saying and I'm adding an annotation and",
    "start": "1926899",
    "end": "1932600"
  },
  {
    "text": "in this annotation all I'm saying is here is my I am role so my app - role is",
    "start": "1932600",
    "end": "1938750"
  },
  {
    "text": "essentially an I am role that has been created so you give a full or and for the role over here and you attach that",
    "start": "1938750",
    "end": "1944600"
  },
  {
    "text": "to the part itself now there are issues around this because essentially if",
    "start": "1944600",
    "end": "1950330"
  },
  {
    "text": "you're running cube - I am unique because when your pod is running in a",
    "start": "1950330",
    "end": "1955549"
  },
  {
    "text": "particular I am your worker nodes should have the assumed role cap capability the worker node should be able to assume any",
    "start": "1955549",
    "end": "1962000"
  },
  {
    "text": "role essentially and that's the potential hazard so we have seen in a coop - I am working but again that's not",
    "start": "1962000",
    "end": "1967669"
  },
  {
    "text": "something that we recommend from our sides what are my other options if I",
    "start": "1967669",
    "end": "1972919"
  },
  {
    "text": "want to do I am role for a pod at runtime so how she caught vault well hajeck or volt is a tool for managing",
    "start": "1972919",
    "end": "1979549"
  },
  {
    "text": "secrets you know it secured stores your tightly control access to tokens",
    "start": "1979549",
    "end": "1985760"
  },
  {
    "text": "generates temporary I am credentials for you and all those things so now essentially what you could do is you",
    "start": "1985760",
    "end": "1991700"
  },
  {
    "text": "could set up a khat volt either now on ec2 or wherever your world server is",
    "start": "1991700",
    "end": "1998210"
  },
  {
    "text": "running so what happens is now when you make a request you know in your app itself and again there are designs",
    "start": "1998210",
    "end": "2005200"
  },
  {
    "text": "design patterns for this in our workshop that I'll talk about a little bit later is you can set it up as a sidecar",
    "start": "2005200",
    "end": "2010690"
  },
  {
    "text": "container so let's say you have an application that needs the temporary credentials you set up a temp sidecar",
    "start": "2010690",
    "end": "2016390"
  },
  {
    "text": "container that sidecar container goes and talks to the vault server generates your temporary I am credentials those",
    "start": "2016390",
    "end": "2023320"
  },
  {
    "text": "are the IAM credentials then you can be utilized by your container in the pot again these are sidecar containers and",
    "start": "2023320",
    "end": "2029740"
  },
  {
    "text": "then that's why I am credential used by the container to do the real execution and based upon the roles and the policy",
    "start": "2029740",
    "end": "2036610"
  },
  {
    "text": "is attached to the pod you are allowed to do the cast or not allowed to do the task something again that we are super",
    "start": "2036610",
    "end": "2045220"
  },
  {
    "text": "excited about is you know again this is something out in the future is spiffy so our secured production identity",
    "start": "2045220",
    "end": "2051190"
  },
  {
    "text": "framework for everyone now this is a framework that is you know under active",
    "start": "2051190",
    "end": "2056530"
  },
  {
    "text": "development and in a very very early stages of development itself as I think it's about point to version but let me",
    "start": "2056530",
    "end": "2061628"
  },
  {
    "text": "tell you what spiffy gives you well three things from a cloud provider perspective it gives you a standard for",
    "start": "2061629",
    "end": "2067600"
  },
  {
    "text": "pod and container identity now because it eases the burden of passing secrets like you know I I am credentials you",
    "start": "2067600",
    "end": "2073960"
  },
  {
    "text": "know I don't have to worry about how this is going to be done across clouds so we are we're very very excited in",
    "start": "2073960",
    "end": "2079090"
  },
  {
    "text": "that sense I mean even those PP is looking for to be cloud agnostic but from a cloud vendor perspective we like",
    "start": "2079090",
    "end": "2084820"
  },
  {
    "text": "that aspect and we are working with and again this is something that help your labs is very actively involved with so",
    "start": "2084820",
    "end": "2090370"
  },
  {
    "text": "we have been we are excited about it spiffy as a matter of fact has been proposed as a CN CF project or cloud",
    "start": "2090370",
    "end": "2096190"
  },
  {
    "text": "native computing foundation and we are in the favor of that project because essentially we are excited for the",
    "start": "2096190",
    "end": "2103090"
  },
  {
    "text": "potential of spiffy because you know it could work on not just any container",
    "start": "2103090",
    "end": "2109150"
  },
  {
    "text": "runtime you know whether is darker whether it is cree whether it is cree container d you pick your favorite",
    "start": "2109150",
    "end": "2114460"
  },
  {
    "text": "runtime it will work for that and then last but not the least you know it can enhance the capability across",
    "start": "2114460",
    "end": "2120610"
  },
  {
    "text": "different projects so think about you know sto and other service measures who",
    "start": "2120610",
    "end": "2125860"
  },
  {
    "text": "don't have to worry about how the credentials are gonna be passed across different services we're out in the",
    "start": "2125860",
    "end": "2131110"
  },
  {
    "text": "future spiffy could become the mechanism by which you are actually passing credentials across these different",
    "start": "2131110",
    "end": "2136330"
  },
  {
    "text": "services thank you Ron all right so when talking about I am and",
    "start": "2136330",
    "end": "2143860"
  },
  {
    "text": "solando we have to actually talk about to iron systems so the first is the AWS",
    "start": "2143860",
    "end": "2150010"
  },
  {
    "text": "iron and the second is an internal I am systems that we use that I will call for",
    "start": "2150010",
    "end": "2156040"
  },
  {
    "text": "the rest of this presentation platform I am I get a little bit more into that so",
    "start": "2156040",
    "end": "2161740"
  },
  {
    "text": "for a double yes I am we use cube - I am in a very similar set up to what Arun",
    "start": "2161740",
    "end": "2167260"
  },
  {
    "text": "already showed so we deployed in on set which means we have one pot for every node that we use and we use it for doing",
    "start": "2167260",
    "end": "2174370"
  },
  {
    "text": "this assignment of I am roles who - pod - workloads so this we use with this",
    "start": "2174370",
    "end": "2179950"
  },
  {
    "text": "annotation has showed but what I wanted here to tell you is like why this is",
    "start": "2179950",
    "end": "2185560"
  },
  {
    "text": "working with us so it's not really so the house was already shown I want to tell you why this make sense and and to",
    "start": "2185560",
    "end": "2192550"
  },
  {
    "text": "do that I want you to remember at this previous slide that I showed you which I",
    "start": "2192550",
    "end": "2198070"
  },
  {
    "text": "told you that every single modification of those deployments has to be version in a keep repo and has to be approved by",
    "start": "2198070",
    "end": "2204220"
  },
  {
    "text": "someone and the trick here is really that we log everything and we trust two engineers to actually decide which role",
    "start": "2204220",
    "end": "2212770"
  },
  {
    "text": "works for them and this is the whole idea of 4-eyes principle so there is like always four eyes behind the",
    "start": "2212770",
    "end": "2218200"
  },
  {
    "text": "deployment and in this way we trust them to actually take this the right I am",
    "start": "2218200",
    "end": "2223300"
  },
  {
    "text": "role that's the second nine system so we",
    "start": "2223300",
    "end": "2228670"
  },
  {
    "text": "currently run a micro service infrastructure so we have hundreds of those service if not thousands I have no",
    "start": "2228670",
    "end": "2234790"
  },
  {
    "text": "idea anymore and those those services are talking to each other providing or",
    "start": "2234790",
    "end": "2240010"
  },
  {
    "text": "tokens so every one of those service is actually protected we are all this means",
    "start": "2240010",
    "end": "2245860"
  },
  {
    "text": "that we have some tokens for services for service to service for communication and",
    "start": "2245860",
    "end": "2252020"
  },
  {
    "text": "for employees as well so one question so the system was already in place as",
    "start": "2252020",
    "end": "2257240"
  },
  {
    "text": "nothing really to do with kubernetes but of course we have to integrate this for example employees get tokens that they can use",
    "start": "2257240",
    "end": "2263600"
  },
  {
    "text": "to talk with this API so how do we make sure that we can use exactly the same existing infrastructure to talk with the",
    "start": "2263600",
    "end": "2270020"
  },
  {
    "text": "API server of communities and cube CTL is a native integration for that you just need to have those tokens and",
    "start": "2270020",
    "end": "2276790"
  },
  {
    "text": "whenever you talk with the API server even using cube CTL you provide this",
    "start": "2276790",
    "end": "2282020"
  },
  {
    "text": "token in the request you can enable some way of verifying those tokens what we",
    "start": "2282020",
    "end": "2287120"
  },
  {
    "text": "use is this flag for the API server which is the web book this means every time you make a request against the API",
    "start": "2287120",
    "end": "2293180"
  },
  {
    "text": "server the API server will forward this an additional request to our book this",
    "start": "2293180",
    "end": "2298910"
  },
  {
    "text": "is really an application that you can write which has a REST API we'll get a specific type of request and this and",
    "start": "2298910",
    "end": "2306650"
  },
  {
    "text": "this web book will do will verify this token and would say okay then okay out an authentication time right you're",
    "start": "2306650",
    "end": "2313520"
  },
  {
    "text": "authenticated then there is another flag for web box also for authorization and we use this as well where we can really",
    "start": "2313520",
    "end": "2320630"
  },
  {
    "text": "realize is this user authorized to actually get access to this cluster or",
    "start": "2320630",
    "end": "2326060"
  },
  {
    "text": "not so this is a very powerful native kubernetes extension point that is very",
    "start": "2326060",
    "end": "2331580"
  },
  {
    "text": "helpful in case you try to get kubernetes running inside your organization and you want integrate with",
    "start": "2331580",
    "end": "2337280"
  },
  {
    "text": "an existing I am system then what I have here is that we are slowly transitioning",
    "start": "2337280",
    "end": "2344090"
  },
  {
    "text": "to our buck which is actually much more flexible in terms of how you can customize the roles for the cluster and",
    "start": "2344090",
    "end": "2351380"
  },
  {
    "text": "the slowly year is really because those web book system really work well for us and it's serving well since more than a",
    "start": "2351380",
    "end": "2358550"
  },
  {
    "text": "year now so I talked about those micro",
    "start": "2358550",
    "end": "2364490"
  },
  {
    "text": "services right I say they have to talk with each other providing those tokens and we really want to make the",
    "start": "2364490",
    "end": "2370970"
  },
  {
    "text": "transition to it to kubernetes from it the existing AWS set up really really",
    "start": "2370970",
    "end": "2376490"
  },
  {
    "text": "easy for developers so we don't want them to of course go through a lot of efforts to actually change the way their",
    "start": "2376490",
    "end": "2383830"
  },
  {
    "text": "application work to only get tokens this should actually work out of the box they already have that and what we did is",
    "start": "2383830",
    "end": "2388960"
  },
  {
    "text": "actually create a small service which called credential provider and a custom resource definition so if you're",
    "start": "2388960",
    "end": "2394720"
  },
  {
    "text": "familiar with a customer so the resource definition this is really like we really give it to our users to just say okay I",
    "start": "2394720",
    "end": "2401800"
  },
  {
    "text": "want to have a token for my application and the talking should have some particular scopes right whenever they",
    "start": "2401800",
    "end": "2408070"
  },
  {
    "text": "submit that to the API server there is a small service the credential provider that reads this custom resource",
    "start": "2408070",
    "end": "2413770"
  },
  {
    "text": "definition talks to the internal I am infrastructure and it then writes back to the API server acuminate a secret so",
    "start": "2413770",
    "end": "2421690"
  },
  {
    "text": "this means application can just mount secret like you probably all wasted in kubernetes so this is this means that",
    "start": "2421690",
    "end": "2428680"
  },
  {
    "text": "this all I am infrastructure is integrated in a very native and declarative way into into the into",
    "start": "2428680",
    "end": "2436240"
  },
  {
    "text": "communities visibility that's a great",
    "start": "2436240",
    "end": "2441670"
  },
  {
    "text": "topic all right let's take a look at it so no I mean cluster is all good and done you know I mean everything is happy",
    "start": "2441670",
    "end": "2448180"
  },
  {
    "text": "you know when things are looking good but when things are not looking good you need a little bit more visibility in",
    "start": "2448180",
    "end": "2453640"
  },
  {
    "text": "your cluster so let's talk about different aspects of visibility so the way we look at it is you know in a",
    "start": "2453640",
    "end": "2459400"
  },
  {
    "text": "cluster well I mean first of all look at the cluster itself you have a cluster cluster consists of multiple nodes on",
    "start": "2459400",
    "end": "2467260"
  },
  {
    "text": "those nodes you have containers running weather running as power or deployment or replicas said plus the containers",
    "start": "2467260",
    "end": "2473110"
  },
  {
    "text": "running and then you have application so there is visibility at each of the level end of the day if anything goes wrong in",
    "start": "2473110",
    "end": "2480220"
  },
  {
    "text": "your application you should you want to have the ability to dig in from your application to container to cluster to",
    "start": "2480220",
    "end": "2486520"
  },
  {
    "text": "actual node and figure out figuring out what's really happening so that's one aspect and then on the top what we are",
    "start": "2486520",
    "end": "2493120"
  },
  {
    "text": "looking at is what am i different ways of visibility essentially so I could have logs like application logs or my",
    "start": "2493120",
    "end": "2499960"
  },
  {
    "text": "system D logs or my container logs or my darker logs I could have metrics and now",
    "start": "2499960",
    "end": "2505540"
  },
  {
    "text": "my health metrics and how my container is doing how much CPU is being utilized I could have events node going down",
    "start": "2505540",
    "end": "2512690"
  },
  {
    "text": "coming up replicas start scaling up and down I won't have those events I'm gonna have alerts",
    "start": "2512690",
    "end": "2517760"
  },
  {
    "text": "I would rather somebody do the task for me if something is happening so for example horizontal part auto scaling so",
    "start": "2517760",
    "end": "2524270"
  },
  {
    "text": "if my cluster needs to scale based upon HP a or if a cluster needs to scale",
    "start": "2524270",
    "end": "2529339"
  },
  {
    "text": "based upon my cloud watch alerts I want that action to happen and then last but not the least is now across my",
    "start": "2529339",
    "end": "2536780"
  },
  {
    "text": "micro-services if I want you know some tracing to be done how does that happen you know my containers could be written",
    "start": "2536780",
    "end": "2542480"
  },
  {
    "text": "in multiple languages they could be hosted on multiple nodes so how do I get application tracing so the point being",
    "start": "2542480",
    "end": "2548569"
  },
  {
    "text": "you know you have five different aspects of visibility and four different sources",
    "start": "2548569",
    "end": "2554359"
  },
  {
    "text": "of visibility and all of them should really come from all of them to provide a little bit more holistic picture so",
    "start": "2554359",
    "end": "2561079"
  },
  {
    "text": "let's take a look at some of the options that we see our customers are using today if you take a look at logs the",
    "start": "2561079",
    "end": "2568099"
  },
  {
    "text": "first and the most obvious way by which you get the logs is using cue catalogs and which essentially you know goes gets",
    "start": "2568099",
    "end": "2574970"
  },
  {
    "text": "the logs from the container and one gives you the logs back essentially container writes it to the system D you",
    "start": "2574970",
    "end": "2580849"
  },
  {
    "text": "know and then it picks it up from the system D and spits out as using cube catalogs it's very convenient way for",
    "start": "2580849",
    "end": "2586250"
  },
  {
    "text": "you to get the logs of what how what's happening and that that works for containers you know you say Q catalogs",
    "start": "2586250",
    "end": "2592460"
  },
  {
    "text": "you provide the resource name and it brings you the logs from that resource now the other thing that your other",
    "start": "2592460",
    "end": "2599060"
  },
  {
    "text": "stack so to say there are lots of ways people use it but the other stack that we have seen our customers using is the",
    "start": "2599060",
    "end": "2605060"
  },
  {
    "text": "F stack which is essentially a combination of elasticsearch flow and D and Cabana okay so let's take a look at",
    "start": "2605060",
    "end": "2612290"
  },
  {
    "text": "it what happens well first of all elasticsearch is what is used for indexing your data and your flow and D",
    "start": "2612290",
    "end": "2618349"
  },
  {
    "text": "is essentially where your data is told and Cabana is a visualizer now you can plug and play you know whatever works in",
    "start": "2618349",
    "end": "2625040"
  },
  {
    "text": "your environment but this is the stack that we have seen a bit common and fabula all right so let's take a look at",
    "start": "2625040",
    "end": "2631490"
  },
  {
    "text": "it now here I have my inner region across to availability zones I have two",
    "start": "2631490",
    "end": "2638510"
  },
  {
    "text": "masters across you know a set up an auto scaling group and then on the right side what I'm showing you is my four worker",
    "start": "2638510",
    "end": "2644270"
  },
  {
    "text": "nodes again spread across two availability zones so that's one of my cluster set up here okay now if I were",
    "start": "2644270",
    "end": "2650430"
  },
  {
    "text": "to run my F stack here what I'll do is I will run flu and be demon set over here",
    "start": "2650430",
    "end": "2657420"
  },
  {
    "text": "okay that's running on each of the notes because essentially I want to get all that log back into my elastic starch I",
    "start": "2657420",
    "end": "2664140"
  },
  {
    "text": "know or my log store okay now I could",
    "start": "2664140",
    "end": "2670170"
  },
  {
    "text": "configure flu and D to push all that log to my Amazon CloudWatch logs and now",
    "start": "2670170",
    "end": "2676950"
  },
  {
    "text": "Amazon CloudWatch logs can be automatically configured to push that data to Amazon Elastic servicers now",
    "start": "2676950",
    "end": "2683970"
  },
  {
    "text": "elastic search service now you could go directly from flu and D to elastic",
    "start": "2683970",
    "end": "2690360"
  },
  {
    "text": "search now that's an option but the fact that you have cloud watch in between and if you are building a no other alerts",
    "start": "2690360",
    "end": "2697230"
  },
  {
    "text": "and events on top of it it becomes very useful and also from cloud watch you",
    "start": "2697230",
    "end": "2702450"
  },
  {
    "text": "know there is an automatic subscription where you can say oh no what automatically keep pumping data to elastic search for me and last but not",
    "start": "2702450",
    "end": "2709320"
  },
  {
    "text": "the least what you do is you build a keep on a dashboard on top of that so that's sort of the stat that we are using lot of our customers using and",
    "start": "2709320",
    "end": "2715830"
  },
  {
    "text": "this essentially what gives them the ability a full visualizing aspect of how the logs are flowing across different",
    "start": "2715830",
    "end": "2722400"
  },
  {
    "text": "aspects of your system let's take a look at matrix now if I look at matrix you",
    "start": "2722400",
    "end": "2728430"
  },
  {
    "text": "know there is a node matrix now for node matrix we have tools like node exporter that constantly spits out you know just",
    "start": "2728430",
    "end": "2734820"
  },
  {
    "text": "health of the node you know how much memory how much CPU all those things okay now I need pod",
    "start": "2734820",
    "end": "2741570"
  },
  {
    "text": "slash container metrics as well there are tools for that there is C advisor for example container advisor which is",
    "start": "2741570",
    "end": "2747630"
  },
  {
    "text": "an open source project which kind of gives you metrics specific to the pod or a container or cube state matrix which",
    "start": "2747630",
    "end": "2753120"
  },
  {
    "text": "is baked into kubernetes itself you need to enable it last but not the least essentially you are building your",
    "start": "2753120",
    "end": "2758940"
  },
  {
    "text": "application but when you are building your application you could spit out your metrics on a slash matrix endpoint and",
    "start": "2758940",
    "end": "2765000"
  },
  {
    "text": "we have example in the workshop which basically is using a Prometheus client and spitting it out in a slash matrix so",
    "start": "2765000",
    "end": "2771870"
  },
  {
    "text": "that it can be scraped by a Prometheus endpoint or if you're building a java application then you can use jmx to",
    "start": "2771870",
    "end": "2778590"
  },
  {
    "text": "start spitting out your jmx into slash metrics so you're really looking at the way on how your application is built and how you can",
    "start": "2778590",
    "end": "2785309"
  },
  {
    "text": "expose the metrics from your application that is now consumable by standard tools that understands kubernetes all right so",
    "start": "2785309",
    "end": "2793980"
  },
  {
    "text": "you have your metrics coming from that then on top of that essentially what you need is a cluster wide aggregator but",
    "start": "2793980",
    "end": "2799589"
  },
  {
    "text": "that's exactly where Prometheus comes in Prometheus can talk take all of these tools on the bottom row as a source and",
    "start": "2799589",
    "end": "2805800"
  },
  {
    "text": "then give you a class provide education keep stories another way by which you can do plus provide application all",
    "start": "2805800",
    "end": "2811349"
  },
  {
    "text": "right that's good now Prometheus has is that is a time series database but often we have seen",
    "start": "2811349",
    "end": "2818150"
  },
  {
    "text": "Prometheus being back ended by a day tomorrow either in flux VB or graphite",
    "start": "2818150",
    "end": "2823559"
  },
  {
    "text": "because it provides a lot more way by which you can it provides a lot richer model in which the data can be stored on",
    "start": "2823559",
    "end": "2831800"
  },
  {
    "text": "top of that you want to build some alerting capability because you know essentially all the data is good but if",
    "start": "2831800",
    "end": "2838380"
  },
  {
    "text": "somebody has to manually monitor it watch it all the time I'm spending a lot of human cycles in that our honourable",
    "start": "2838380",
    "end": "2843930"
  },
  {
    "text": "the alerting capability and there's where we see alert manager and capacitor and people have built their custom",
    "start": "2843930",
    "end": "2848970"
  },
  {
    "text": "solutions as well because cloud watch is involved were there on top of cloud watch you know you can build your custom",
    "start": "2848970",
    "end": "2854250"
  },
  {
    "text": "solution okay if this alert happens automatically scaled my cluster or alert me and the way you want to do this and",
    "start": "2854250",
    "end": "2860210"
  },
  {
    "text": "last but not the least essentially what you need is a visualizer over there now kubernetes by itself has a kubernetes",
    "start": "2860210",
    "end": "2867180"
  },
  {
    "text": "dashboard that can be enabled as a plug-in or now you can use Griffon kibana whatever comes to your fancy",
    "start": "2867180",
    "end": "2873270"
  },
  {
    "text": "whatever works in your organization use that as a visualizer tool so this is essentially what we see as sort of the",
    "start": "2873270",
    "end": "2879359"
  },
  {
    "text": "big picture of how metrics could be given now there is no one solution fit",
    "start": "2879359",
    "end": "2884670"
  },
  {
    "text": "all here see what works for your organization what tools are you comfortable with what your customers are",
    "start": "2884670",
    "end": "2890309"
  },
  {
    "text": "used to and adapt that scenario let's",
    "start": "2890309",
    "end": "2896099"
  },
  {
    "text": "talk a little bit about application tracing now as we talked about you know in a typically when you start using",
    "start": "2896099",
    "end": "2901260"
  },
  {
    "text": "micro services the thought of containers comes to you naturally now it's not a requirement for micro services but if",
    "start": "2901260",
    "end": "2907589"
  },
  {
    "text": "you are going on a route or if you are using containers then likely your applications are written in different",
    "start": "2907589",
    "end": "2913260"
  },
  {
    "text": "language our packages differently but container is sort of your endpoint now if your applications are distributed across",
    "start": "2913260",
    "end": "2919260"
  },
  {
    "text": "multiple nodes how do you know my applicant my container on node one is",
    "start": "2919260",
    "end": "2924300"
  },
  {
    "text": "talking to container on node three is talking to container for on node five that sort of application tracing this so",
    "start": "2924300",
    "end": "2931170"
  },
  {
    "text": "there are tools available from Amazon you know AWS extra in this case which helps you to analyze and debug",
    "start": "2931170",
    "end": "2938130"
  },
  {
    "text": "production distributed applications and you know it particularly is targeted",
    "start": "2938130",
    "end": "2943170"
  },
  {
    "text": "towards those micro services application and what it does it it kind of helps you target the application it generates a",
    "start": "2943170",
    "end": "2949530"
  },
  {
    "text": "nice graph for you kind of giving you an idea of what your potential bottlenecks are and I'll show you a quick diagram on",
    "start": "2949530",
    "end": "2954750"
  },
  {
    "text": "how the graph looks like but essentially you can trace end to end as your request",
    "start": "2954750",
    "end": "2959940"
  },
  {
    "text": "is traveling through the application looking at all the touch points where it might have gone and kind of showing you",
    "start": "2959940",
    "end": "2966690"
  },
  {
    "text": "an overview of your application so if you if like this is one of the examples that is available so what you could do",
    "start": "2966690",
    "end": "2973050"
  },
  {
    "text": "is you can actually build a x-ray even though it's a service but you can build",
    "start": "2973050",
    "end": "2978150"
  },
  {
    "text": "a darker image you can push that darker image into your ec2 container registry or elastic container registry and then",
    "start": "2978150",
    "end": "2985410"
  },
  {
    "text": "install x-ray as a daemon set on each of your node the worker node essentially",
    "start": "2985410",
    "end": "2990750"
  },
  {
    "text": "because that's where your containers are deployed and then if you were to run a micro services application in this case",
    "start": "2990750",
    "end": "2996119"
  },
  {
    "text": "well we have a web application which is right in the middle the client makes a",
    "start": "2996119",
    "end": "3001460"
  },
  {
    "text": "request it talks to a name service on the top and I've greet a service on the bottom and then it shows ok these are",
    "start": "3001460",
    "end": "3007339"
  },
  {
    "text": "the three services that are essentially building my application and it generates a chart now I get the part it shows AWS",
    "start": "3007339",
    "end": "3013549"
  },
  {
    "text": ": ECS but that is just a visualizing aspect that's going to change when we have a better integration with",
    "start": "3013549",
    "end": "3018950"
  },
  {
    "text": "kubernetes itself but this is a communities application Thank You room",
    "start": "3018950",
    "end": "3025390"
  },
  {
    "text": "all right so we've seen so I don't mentioned already several aspects of",
    "start": "3025390",
    "end": "3030940"
  },
  {
    "text": "visibility for clusters right and so I'm not gonna really want to tell you what",
    "start": "3030940",
    "end": "3037640"
  },
  {
    "text": "actually works for us so the way we are actually doing that so of course you can when talking about logging do cube CDA",
    "start": "3037640",
    "end": "3046010"
  },
  {
    "text": "logs to get you Lots but what we really use for our application is really a centralized",
    "start": "3046010",
    "end": "3051140"
  },
  {
    "text": "login solution so we use scalar is a centralized login solution where we ship all our logs to so every of those",
    "start": "3051140",
    "end": "3058930"
  },
  {
    "text": "kubernetes cluster have as well an account on this platform and we run the",
    "start": "3058930",
    "end": "3065060"
  },
  {
    "text": "N a daemon set similar to what Arun said above who Andy we run a demon set runs",
    "start": "3065060",
    "end": "3070520"
  },
  {
    "text": "on every node and this just shifts the logs to this platform so a user can just log in there and see all of all the",
    "start": "3070520",
    "end": "3078020"
  },
  {
    "text": "information regarding the logs this means again transition into kubernetes is extremely easy for developers because",
    "start": "3078020",
    "end": "3085700"
  },
  {
    "text": "they can just let their application log to standard output standard error and this already works out of the box we're",
    "start": "3085700",
    "end": "3093020"
  },
  {
    "text": "talking about monitoring so here we really took the decision to keep what we already had so we had said mom it's not",
    "start": "3093020",
    "end": "3101210"
  },
  {
    "text": "seaman which is a monitoring and alerting solution we had which is",
    "start": "3101210",
    "end": "3107390"
  },
  {
    "text": "actually open sources on CARICOM you can go check it out this is what we've been using since many years now so we",
    "start": "3107390",
    "end": "3113240"
  },
  {
    "text": "developed and internally we've been using it so we have plenty of people are actually used to it and the best thing",
    "start": "3113240",
    "end": "3118490"
  },
  {
    "text": "you can do is not change those tools when everybody knows how to use it right you probably not as well how we",
    "start": "3118490",
    "end": "3125690"
  },
  {
    "text": "integrate the kubernetes with this tool it's really by for example using",
    "start": "3125690",
    "end": "3130970"
  },
  {
    "text": "Prometheus not exporter so our own already mentioned this we deployed as a daemon set as well to get all those",
    "start": "3130970",
    "end": "3137030"
  },
  {
    "text": "metrics regarding nodes into this platform and in the same way we use hipster to collect spot metrics which",
    "start": "3137030",
    "end": "3143210"
  },
  {
    "text": "are also easily available in this platform all right so as I said ok this",
    "start": "3143210",
    "end": "3148850"
  },
  {
    "text": "is really like how we do it or why we really kept this platform that you already had but of course till now we",
    "start": "3148850",
    "end": "3157820"
  },
  {
    "text": "said like ok deployment or I am CI CD all these nice things but really we need",
    "start": "3157820",
    "end": "3164090"
  },
  {
    "text": "to make life easy for our developers to actually monitor the application because this is where all the fun starts when",
    "start": "3164090",
    "end": "3170060"
  },
  {
    "text": "you put things in production right and what we do what we did is essentially really develop",
    "start": "3170060",
    "end": "3175579"
  },
  {
    "text": "bring some be default checks and alerts for this platform for the deployed application that our engineers could",
    "start": "3175579",
    "end": "3180739"
  },
  {
    "text": "just copy and reuse in such a way this is extremely extremely easy for them to",
    "start": "3180739",
    "end": "3185839"
  },
  {
    "text": "just get started with monitoring their application from the very first day they go to production additionally to that",
    "start": "3185839",
    "end": "3192650"
  },
  {
    "text": "we're using an ingress controller for all the traffic incoming into the cluster and we make some we have some",
    "start": "3192650",
    "end": "3199489"
  },
  {
    "text": "default metrics in this ingress controller for example this is useful to monitor latency for services error rate",
    "start": "3199489",
    "end": "3205549"
  },
  {
    "text": "and this we integrate really nicely in a tool that allows us to create service level reports to just make sure that",
    "start": "3205549",
    "end": "3211849"
  },
  {
    "text": "everyone knows how our service is performing in case someone wants to build on top of the service all right so",
    "start": "3211849",
    "end": "3218779"
  },
  {
    "text": "all of this is useless if you don't visualize it right so you know you need",
    "start": "3218779",
    "end": "3224779"
  },
  {
    "text": "to have a way to see this information in a very easy way and this is actually in",
    "start": "3224779",
    "end": "3231469"
  },
  {
    "text": "this in this slide you can see a dashboard that we actually use to monitor our clusters so this is really",
    "start": "3231469",
    "end": "3236779"
  },
  {
    "text": "for all traders this is really for the job I do which is really to see for example here you see in the top left",
    "start": "3236779",
    "end": "3243619"
  },
  {
    "text": "corner you see the latency for the API server we monitored that because this is",
    "start": "3243619",
    "end": "3248809"
  },
  {
    "text": "a very important metrics actually in communities where you see like how your API server is performing if the API",
    "start": "3248809",
    "end": "3253940"
  },
  {
    "text": "service super slows means the whole story doesn't work anymore the whole deployment story this is very important",
    "start": "3253940",
    "end": "3259400"
  },
  {
    "text": "other things we monitor is for example how many parts do we have running in the system there's also important to see how",
    "start": "3259400",
    "end": "3265459"
  },
  {
    "text": "our users are using and things like that number of deployments mostly for statistics and other important metrics",
    "start": "3265459",
    "end": "3272650"
  },
  {
    "text": "aggregated of course this is only for ops we have of course other dashboards",
    "start": "3272650",
    "end": "3278449"
  },
  {
    "text": "for actually the people are actually using the cluster to deploy their applications so we have a default",
    "start": "3278449",
    "end": "3283699"
  },
  {
    "text": "dashboard for example looks mostly like that we have other ones they can just copy it and reuse it this shows you",
    "start": "3283699",
    "end": "3289819"
  },
  {
    "text": "number of pods memory usage CPU usage latency p99 those kind of things all",
    "start": "3289819",
    "end": "3298670"
  },
  {
    "text": "right so it was a great ride so we talked about those four topics but of",
    "start": "3298670",
    "end": "3305749"
  },
  {
    "text": "course this is not everything there are more factors to consider for example there are many learnings",
    "start": "3305749",
    "end": "3311480"
  },
  {
    "text": "after years in production that you if you tried communities you will also learn but for example you have to keep",
    "start": "3311480",
    "end": "3317540"
  },
  {
    "text": "into account some things for example you definitely want to configure some say in default for your cluster for this I mean",
    "start": "3317540",
    "end": "3324110"
  },
  {
    "text": "like limit range which allows you to specify some default requesting limits in terms of memory CPU for the",
    "start": "3324110",
    "end": "3330680"
  },
  {
    "text": "application that don't specify them very useful you could set resource you can",
    "start": "3330680",
    "end": "3336830"
  },
  {
    "text": "set quota for example to limit the number of parts that can run in a single namespace such that you don't have a",
    "start": "3336830",
    "end": "3342200"
  },
  {
    "text": "single developer say I want 10,000 of this might be too much for that particular cluster and in general you",
    "start": "3342200",
    "end": "3348530"
  },
  {
    "text": "want to really know and understand the limits of your cluster there are definitely some limits like memory",
    "start": "3348530",
    "end": "3354920"
  },
  {
    "text": "limits for the API server for the controller you're running on some easy to see instance then they don't have",
    "start": "3354920",
    "end": "3360050"
  },
  {
    "text": "infinite memory in this case you really managing the system so you want to understand that and last but not least",
    "start": "3360050",
    "end": "3365960"
  },
  {
    "text": "you really want to if you're building such a system for developers or even for",
    "start": "3365960",
    "end": "3370970"
  },
  {
    "text": "yourself you really want to simplify the user experience so Cornelius is a great API it's a great API to build on top of",
    "start": "3370970",
    "end": "3377840"
  },
  {
    "text": "it but if you have like teams that to deploy with the system they really want",
    "start": "3377840",
    "end": "3383660"
  },
  {
    "text": "to be have an easy experience and you can do that by using ingress for example",
    "start": "3383660",
    "end": "3388700"
  },
  {
    "text": "for traffic for incoming traffic this is really a great obstructions or pools like external DNS which is actually in",
    "start": "3388700",
    "end": "3395060"
  },
  {
    "text": "compared to communities inkubator project we developed that gives nice DNS names out of the box automatically for",
    "start": "3395060",
    "end": "3401840"
  },
  {
    "text": "your application all right so if I take a couple of minutes now this is where a",
    "start": "3401840",
    "end": "3408260"
  },
  {
    "text": "lot of our last few months have gone essentially we have built a brand-new workshop this is all done completely out",
    "start": "3408260",
    "end": "3414110"
  },
  {
    "text": "in the open source so what I'm gonna do is I'm going to get out the slide mode here and I am gonna be brave to open a",
    "start": "3414110",
    "end": "3420740"
  },
  {
    "text": "browser here calcia tower not get up",
    "start": "3420740",
    "end": "3426560"
  },
  {
    "text": "calm and I'm gonna go to AWS - samples okay and all I want here is I want to",
    "start": "3426560",
    "end": "3434450"
  },
  {
    "text": "show me the kubernetes repo this is the only kubernetes repo in AWS samples today so if you look at this here",
    "start": "3434450",
    "end": "3441250"
  },
  {
    "text": "this repo is has lots of details about how do",
    "start": "3441250",
    "end": "3446510"
  },
  {
    "text": "you deploy kubernetes on AWS today I see about 396 stars",
    "start": "3446510",
    "end": "3451880"
  },
  {
    "text": "my personal goal is to get it 2,000 hopefully by under the conference or at least by cube Khan next week so with 500",
    "start": "3451880",
    "end": "3458000"
  },
  {
    "text": "of you in the room I don't see a reason why that can happen well first of all this workshop is completely open-source",
    "start": "3458000",
    "end": "3464230"
  },
  {
    "text": "the way we want to interact you know Amazon and at Amazon we want to interact with you guys by filing issues we would",
    "start": "3464230",
    "end": "3471080"
  },
  {
    "text": "love to see you file issues that don't tell us you know how would you do this with kubernetes on AWS or send us pull",
    "start": "3471080",
    "end": "3478550"
  },
  {
    "text": "requests every single typo matters every single typo that you can send a pull",
    "start": "3478550",
    "end": "3484460"
  },
  {
    "text": "request for every grammatical mistake English is not my first language every grammatical mistake that you can",
    "start": "3484460",
    "end": "3489920"
  },
  {
    "text": "send a pull request for matters because that much it improves the value of the repo well let's get to the content part",
    "start": "3489920",
    "end": "3496760"
  },
  {
    "text": "of it in the content itself you would think about it we got sections you know if you are if your team is trying to get started with",
    "start": "3496760",
    "end": "3503810"
  },
  {
    "text": "kubernetes on AWS I mean some people talk about kubernetes you know it's a hard thing to learn it's a hard way I",
    "start": "3503810",
    "end": "3509000"
  },
  {
    "text": "think that's just you know making it extremely complex I truly believe kubernetes is lot easier",
    "start": "3509000",
    "end": "3514220"
  },
  {
    "text": "to learn if you focus on the technology as opposed to get mired down in the details of you know what your cloud is",
    "start": "3514220",
    "end": "3520040"
  },
  {
    "text": "really doing so this workshop is focuses exclusively on the technology aspect of it so if you're trying to get started",
    "start": "3520040",
    "end": "3526310"
  },
  {
    "text": "with kubernetes we say prerequisites we use cops today you know and the due course of time we will add eks over here",
    "start": "3526310",
    "end": "3532790"
  },
  {
    "text": "that's pretty much the only chapter that we are looking at where we're going to talk about how do you install the cluster but once the cluster is up and",
    "start": "3532790",
    "end": "3539690"
  },
  {
    "text": "running then we talk about kubernetes developer concepts so it talks about if I can increase the font here so we talk",
    "start": "3539690",
    "end": "3547100"
  },
  {
    "text": "about what is a part what is the deployment what is the service what is the daemon set how do you create it we got code samples and code samples to the",
    "start": "3547100",
    "end": "3554360"
  },
  {
    "text": "extent where you can just copy paste that fragment drop it into your repo and say I'm ready to roll with it",
    "start": "3554360",
    "end": "3560000"
  },
  {
    "text": "now that is only for beginners essentially but the way we look at it is if you are looking at how do you do",
    "start": "3560000",
    "end": "3566180"
  },
  {
    "text": "configuration management you know how do I where do I store my secrets the things we talked about are on Hasek or if you",
    "start": "3566180",
    "end": "3571670"
  },
  {
    "text": "were excited by the dashboards the graph on our dashboards that Rafaela showed those dashboards you can create using",
    "start": "3571670",
    "end": "3578559"
  },
  {
    "text": "this workshop so if I go down here for example it talks about monitoring within a kubernetes cluster it talks about",
    "start": "3578559",
    "end": "3584890"
  },
  {
    "text": "application auto scaling it talks about application tracing we talked about AWS x-ray it exactly tells you how can you",
    "start": "3584890",
    "end": "3592299"
  },
  {
    "text": "create your own demon set for x-ray deploy it in your worker and get rolling with it you wanna use poor DNS for",
    "start": "3592299",
    "end": "3600339"
  },
  {
    "text": "service discovery so we can we allow you to do that you wanna set up a lbn rest controller I think that's where one of",
    "start": "3600339",
    "end": "3605440"
  },
  {
    "text": "the contributions came from Rafael esteem as well you know there are lots of ways by which you can do ingress",
    "start": "3605440",
    "end": "3610450"
  },
  {
    "text": "controller so all those mechanisms and I like this to be no fluff just stuff essentially so it's very very hands-on",
    "start": "3610450",
    "end": "3617230"
  },
  {
    "text": "driven pick any chapter here so if you say managing queue I am Rose with kubernetes so it just talks about a",
    "start": "3617230",
    "end": "3622329"
  },
  {
    "text": "little bit what the concept is then you can say alright I'm gonna copy this file and I'm gonna drag this here and I'm",
    "start": "3622329",
    "end": "3627549"
  },
  {
    "text": "gonna get started with this so once again we would love for you we would love to get feedback from you guys",
    "start": "3627549",
    "end": "3632859"
  },
  {
    "text": "file issues send pull requires a good friend share this workshop with your",
    "start": "3632859",
    "end": "3638349"
  },
  {
    "text": "colleagues actually as well so thank you very much I think we're pretty much out of time but we're going to be hanging out in the hallway if you have any",
    "start": "3638349",
    "end": "3643750"
  },
  {
    "text": "questions",
    "start": "3643750",
    "end": "3646079"
  }
]