[
  {
    "text": "all right welcome everybody thanks for joining us today hope you've been having a good week here",
    "start": "1050",
    "end": "6870"
  },
  {
    "text": "is a quick introduction my name is Krishna and I work in AWS Seattle I manage engineering teams in a doubly us",
    "start": "6870",
    "end": "14400"
  },
  {
    "text": "lambda pride lambda I was leading simple DB and DynamoDB storage and prior to",
    "start": "14400",
    "end": "20430"
  },
  {
    "text": "joining AWS I was the co-founder of a company called live mocha and I'm thrilled to have Yvonne join me here",
    "start": "20430",
    "end": "26490"
  },
  {
    "text": "today she is a Software Architect at financial engines who are a big customer of us and we're going to be talking about",
    "start": "26490",
    "end": "32390"
  },
  {
    "text": "troubleshooting and monitoring service application so we'll look at a",
    "start": "32390",
    "end": "37640"
  },
  {
    "text": "application we'll look at what it takes to build one and troubleshoot and monitor it and Yvonne is going to walk",
    "start": "37640",
    "end": "43200"
  },
  {
    "text": "through some of the use cases from their company ok I thought it'd be useful for",
    "start": "43200",
    "end": "51570"
  },
  {
    "text": "us to take a real-world application and follow the story of that application and",
    "start": "51570",
    "end": "56670"
  },
  {
    "text": "see how they build it and how they would maintain it and troubleshoot different issues and the application for us today is Molly Moo",
    "start": "56670",
    "end": "61949"
  },
  {
    "text": "it's a startup but that's going to deliver lactose free milk to celebrities the founders evaluate the idea think",
    "start": "61949",
    "end": "67530"
  },
  {
    "text": "there's a huge opportunity and decide to build a company around that and they think it's going to have a couple of key",
    "start": "67530",
    "end": "73740"
  },
  {
    "text": "components it's going to do a it's going to be some key AI components to match if",
    "start": "73740",
    "end": "79920"
  },
  {
    "text": "you're a celebrity of course all the investors told them you have to have something with AI to get funded these",
    "start": "79920",
    "end": "85049"
  },
  {
    "text": "days and and they also think that the application will need to scale pretty quickly especially during emergencies if",
    "start": "85049",
    "end": "91650"
  },
  {
    "text": "there is a huge spike in order volume and having come to reinvent they get",
    "start": "91650",
    "end": "97079"
  },
  {
    "text": "super excited about AWS and like there's a few about serverless and decide to build their application with AWS and",
    "start": "97079",
    "end": "102509"
  },
  {
    "text": "serverless serverless so as all of you know serverless computing is about",
    "start": "102509",
    "end": "108659"
  },
  {
    "text": "building your application without having to think about servers and as all of you know that our servers running behind the",
    "start": "108659",
    "end": "113729"
  },
  {
    "text": "behind the scenes and why does this matter right when you think about computing over the last decade we've",
    "start": "113729",
    "end": "121200"
  },
  {
    "text": "moved from having physical machines and data centers with lead times and weeks to the cloud where you're now able to",
    "start": "121200",
    "end": "127140"
  },
  {
    "text": "programmatically to a high level to a higher level of abstraction with api's you're able to provision and",
    "start": "127140",
    "end": "133580"
  },
  {
    "text": "deploy large fleets however you're still having to think about the servers that",
    "start": "133580",
    "end": "139830"
  },
  {
    "text": "you're using you're having to think about the scale you're thinking about your peak to average ratios you're thinking about what it takes to maintain",
    "start": "139830",
    "end": "146280"
  },
  {
    "text": "those machines and you're paying for idle time right and so our customers a lot of us a lot of our customers asked",
    "start": "146280",
    "end": "153120"
  },
  {
    "text": "us to make things simpler for them they wanted to be able to run code without having to think about scale without",
    "start": "153120",
    "end": "159150"
  },
  {
    "text": "having to think about provisioning or placement of that and they didn't want to pay for any idle time and many of",
    "start": "159150",
    "end": "164760"
  },
  {
    "text": "them were building a lot of code to talk to other AWS services and they wanted something that would be more simpler for them to use that led us on this server",
    "start": "164760",
    "end": "171270"
  },
  {
    "text": "list journey and a couple of years ago 2015 we launched AWS lambda and lambda",
    "start": "171270",
    "end": "176700"
  },
  {
    "text": "lets you lambda is a compute service that lets you run your function without having to think about where it's running",
    "start": "176700",
    "end": "182250"
  },
  {
    "text": "and thinking about scale we do the scaling for you automatically you don't have to manage any of the servers you're",
    "start": "182250",
    "end": "188310"
  },
  {
    "text": "paying only for the compute that you consume and it's on a per request basis and we automatically scale for you on",
    "start": "188310",
    "end": "194820"
  },
  {
    "text": "the back end and we also bill you at a sub-second metering so you don't pay for",
    "start": "194820",
    "end": "199890"
  },
  {
    "text": "any idle time and you can use lambda in a lot of different ways one of the ways that a lot of customers use it is in",
    "start": "199890",
    "end": "206700"
  },
  {
    "text": "event-driven computing in event driven computing there are three big components the first is the event source which",
    "start": "206700",
    "end": "214500"
  },
  {
    "text": "which trigger which which generates event so for example this could be an s3 bucket you could be you could have a",
    "start": "214500",
    "end": "222300"
  },
  {
    "text": "file in it and you would you would have some code that is reacting to that to",
    "start": "222300",
    "end": "227370"
  },
  {
    "text": "that event and so lambda is a great big model for that because you can now hook that lambda function to be triggered",
    "start": "227370",
    "end": "233670"
  },
  {
    "text": "when that happens in s3 and you can write lambda function in a lot of different languages and the lambda",
    "start": "233670",
    "end": "239100"
  },
  {
    "text": "function can then in turn turn around and talk to other aw services right so this is great so it lets you build your",
    "start": "239100",
    "end": "245190"
  },
  {
    "text": "application in a largely go from a monolithic application to a decoupled set of micro services and a lot of our",
    "start": "245190",
    "end": "251970"
  },
  {
    "text": "customers and Amazon internally we are moving we moved to a micro service architecture so that's great so let's go",
    "start": "251970",
    "end": "260400"
  },
  {
    "text": "back to Molly move and see how they would build their application so in this case they've decided to use lambda and a couple of other service components so",
    "start": "260400",
    "end": "266580"
  },
  {
    "text": "they must be storing the state in DynamoDB they used lambda and then they're using a new Amazon AI service called",
    "start": "266580",
    "end": "272310"
  },
  {
    "text": "recognition that lets you match celebrities and then store state in dynamo so this is their architecture",
    "start": "272310",
    "end": "278490"
  },
  {
    "text": "let's look at how they would be able to build and maintain this application right so with this and this is great so",
    "start": "278490",
    "end": "285240"
  },
  {
    "text": "we went from a concept to an application and you didn't have to think about scale and they were able to build a architecture pretty quickly this new",
    "start": "285240",
    "end": "292770"
  },
  {
    "text": "model does bring some new challenges unlike your hosted model you don't have",
    "start": "292770",
    "end": "297870"
  },
  {
    "text": "the ability to have agents on these in lambda for example you can't have your own agents that are doing monitoring",
    "start": "297870",
    "end": "303660"
  },
  {
    "text": "these resources only exist during the time of the execution of the function collecting logs across lots of different",
    "start": "303660",
    "end": "309690"
  },
  {
    "text": "services and aggregating them in real time without any performance impact can be challenging and when you have a lot",
    "start": "309690",
    "end": "314820"
  },
  {
    "text": "of micro services you it becomes challenging to correlate across all of these services and so when your application goes from something simple",
    "start": "314820",
    "end": "321210"
  },
  {
    "text": "like this to something more complicated it becomes more challenging for you to have to monitor and troubleshoot issues",
    "start": "321210",
    "end": "327420"
  },
  {
    "text": "in your application so but in today's talk we're gonna focus mostly on what",
    "start": "327420",
    "end": "334200"
  },
  {
    "text": "what you would do to troubleshoot and monitor in production but just as a general call-out you know there are a lot of things that you can do locally",
    "start": "334200",
    "end": "340080"
  },
  {
    "text": "and before you deploy so you can test your functions locally we have Sam local that lets you attach a debugger and lets",
    "start": "340080",
    "end": "346020"
  },
  {
    "text": "you debug your code before you deployed and with the cloud 9 announcement that you saw today you can also have it you can do debugging before you deploy them",
    "start": "346020",
    "end": "353100"
  },
  {
    "text": "with code deploy and with the blue/green deployments that we just announced you can do a lot of things before you actually deploy the code in industry and",
    "start": "353100",
    "end": "360210"
  },
  {
    "text": "there are sessions for that and I would recommend highly checking out those those talks today we are going to focus mostly on troubleshooting and monitoring",
    "start": "360210",
    "end": "366630"
  },
  {
    "text": "in production once you have your application deployed so going back to the to the sample application right so",
    "start": "366630",
    "end": "373620"
  },
  {
    "text": "when you build an application like this and even for many of the services internally in AWS one of the things that we want to do is you want to create",
    "start": "373620",
    "end": "380130"
  },
  {
    "text": "metrics and dashboards and alarms right when you you want to be alarmed and you want it when things go wrong but you",
    "start": "380130",
    "end": "385800"
  },
  {
    "text": "want to be paged you want to have alarms you want to have metrics and when something like that happens we get paged",
    "start": "385800",
    "end": "391230"
  },
  {
    "text": "and then you go in and look at a dashboard and then on the dashboard you see at different metrics you are able to drill down and then you can then go look",
    "start": "391230",
    "end": "398130"
  },
  {
    "text": "at certain set of logs it'll be nice to have the same thing in a service world right and then",
    "start": "398130",
    "end": "403470"
  },
  {
    "text": "you should be able to pinpoint different services and then which are having failures and then be able to troubleshoot your issue so let's see if",
    "start": "403470",
    "end": "409530"
  },
  {
    "text": "we can do that in this for this application in the service world so let's take a look at lambda but if all",
    "start": "409530",
    "end": "417030"
  },
  {
    "text": "lambda has integration with cloud watch logs right so anything that you have the ability to log to cloud watch and by",
    "start": "417030",
    "end": "424290"
  },
  {
    "text": "default we log the start and times and then you have a log entry for you know",
    "start": "424290",
    "end": "429480"
  },
  {
    "text": "the report as well we tells you what the duration is how much memory you took these logs are automatically got sent to",
    "start": "429480",
    "end": "435150"
  },
  {
    "text": "cloud watch you can also add additional logs to it you can you by using the equivalent of console dot log for",
    "start": "435150",
    "end": "440940"
  },
  {
    "text": "example nodejs you can add additional logs the nice thing about this is the agent is running outside your code and",
    "start": "440940",
    "end": "446640"
  },
  {
    "text": "therefore there is no latency impact to your application unlike other systems where you have to log it directly and",
    "start": "446640",
    "end": "452040"
  },
  {
    "text": "then these these get bashed and sent to cloud route logs and they are available for you in real time to see going on the",
    "start": "452040",
    "end": "458040"
  },
  {
    "text": "metrics part lambda natively integrates with cloud wash metrics so we collect a",
    "start": "458040",
    "end": "463980"
  },
  {
    "text": "default set of metrics for you and those are available for you to see both in the console as well as in the cloud watch metrics and by default we had we were",
    "start": "463980",
    "end": "471330"
  },
  {
    "text": "tracking six metrics for you including invocations durations and today we've added a new metric which is the pour",
    "start": "471330",
    "end": "477420"
  },
  {
    "text": "function concurrency so now we have the ability for you to be able to limit the concurrency or set concurrency limits",
    "start": "477420",
    "end": "483900"
  },
  {
    "text": "for different functions in your account and then have metrics on those and you can even alarm and something gets close",
    "start": "483900",
    "end": "489360"
  },
  {
    "text": "to its concurrency and then you can then once you have these metrics in cloud watch you can then create dashboards and",
    "start": "489360",
    "end": "495750"
  },
  {
    "text": "alarms and then you can have this notify you if there is an issue right and then you can always add more metrics by adding a through your code you can put",
    "start": "495750",
    "end": "503010"
  },
  {
    "text": "you can put directly to cloud watch right what if you want more than just that right these are the default set of metrics that you can create dashboards",
    "start": "503010",
    "end": "509040"
  },
  {
    "text": "and alarms what if you want more a simple way to do that is by emitting logs in a certain format so you could",
    "start": "509040",
    "end": "515340"
  },
  {
    "text": "emit it in a format and then cloud watch allows you to do create metrics based on filters so for example if you want to",
    "start": "515340",
    "end": "521610"
  },
  {
    "text": "track for example coal starts for your application then you can have that be logged and I'll show you how you do that",
    "start": "521610",
    "end": "527250"
  },
  {
    "text": "in a little bit you can log that and then you can you can then have a filter",
    "start": "527250",
    "end": "532800"
  },
  {
    "text": "in cloud wash that then lets you you create a metric around it and then create a dashboard for that right and",
    "start": "532800",
    "end": "538980"
  },
  {
    "text": "then in addition to that you can always use third-party tools there are a bunch of them that you can use to do better",
    "start": "538980",
    "end": "544380"
  },
  {
    "text": "log aggregation and visualization for example in this case with our pipe you can wrap your code with some functions",
    "start": "544380",
    "end": "550050"
  },
  {
    "text": "and then they have you know using the token that they give you you can go and visualize this on their dashboard right",
    "start": "550050",
    "end": "556190"
  },
  {
    "text": "okay so let's look at how let's so I'm",
    "start": "556190",
    "end": "563040"
  },
  {
    "text": "going to jump to the application now and try to show you how it's done so let's",
    "start": "563040",
    "end": "569190"
  },
  {
    "text": "look at Molly mu and see how they've done this in in practice so this is the I'm going to the they have set of",
    "start": "569190",
    "end": "575010"
  },
  {
    "text": "functions that we define the key function is the one that recognizes that you're a celebrity with the new console",
    "start": "575010",
    "end": "581340"
  },
  {
    "text": "now with lambda console update that you will see you can see that you can attach different triggers all of that there's a",
    "start": "581340",
    "end": "586380"
  },
  {
    "text": "function designer in the console that you can use and then there is a new ID",
    "start": "586380",
    "end": "591810"
  },
  {
    "text": "within the console both you can use it in within this and then you can also use it in a full-screen mode that you can",
    "start": "591810",
    "end": "597420"
  },
  {
    "text": "use to edit your functions so just going back to that example you can you can",
    "start": "597420",
    "end": "603510"
  },
  {
    "text": "track you can add different logs for example in this case I wanted to log something for cold start so I can add a",
    "start": "603510",
    "end": "608670"
  },
  {
    "text": "log line when I see a cold start and have that go to cohorts and then I'll show you how to do a metric around that",
    "start": "608670",
    "end": "615200"
  },
  {
    "text": "the other thing that you can do from the console is once you have the function you could be provided the default set of",
    "start": "615200",
    "end": "620910"
  },
  {
    "text": "metrics you can then for Molly move here and then you can go in the cloud watch and view those metrics as well so let's",
    "start": "620910",
    "end": "626190"
  },
  {
    "text": "go into cloud watch and for every function you you have a different law group and the logs are aggregated for",
    "start": "626190",
    "end": "631980"
  },
  {
    "text": "that log group so this is the one for the Molly mu celebrity one that I will show you and then you'll see all the log entries for that function and you can",
    "start": "631980",
    "end": "640260"
  },
  {
    "text": "click on any of these log entries you can see the different logs that are automatically being done these these have a additional set of logs that I've",
    "start": "640260",
    "end": "645930"
  },
  {
    "text": "lured by default you can also see there's there's the end and the report and you can do a bunch of different things with with that as well so let's",
    "start": "645930",
    "end": "654270"
  },
  {
    "text": "look at the metrics so again we do track number of metrics and you can for your function for example in vacations",
    "start": "654270",
    "end": "660390"
  },
  {
    "text": "durations and you can look at that add those to your dashboard if you want right and then let's see how you would",
    "start": "660390",
    "end": "665940"
  },
  {
    "text": "create a custom metric right if you want to do that let's go back to your functions",
    "start": "665940",
    "end": "672110"
  },
  {
    "text": "okay so if you go back to your logs you can see the different functions you can",
    "start": "672110",
    "end": "678060"
  },
  {
    "text": "create a new filter for your log when you click this you can you can add a new I'm here I'm created a new filter for",
    "start": "678060",
    "end": "683190"
  },
  {
    "text": "the log for the cold start so when you added a log line for cold starts and that's getting emitted so based on that",
    "start": "683190",
    "end": "689100"
  },
  {
    "text": "I can create a filter expression and then I can create a metric around that so I can create this in this case I've",
    "start": "689100",
    "end": "695430"
  },
  {
    "text": "created a filter expression for that and then what I do is say and then create a graph for that and then I can add that",
    "start": "695430",
    "end": "701310"
  },
  {
    "text": "to the to them to my dashboard so let's look at how the dashboard looks like so I've created a dashboard for my",
    "start": "701310",
    "end": "707880"
  },
  {
    "text": "application now so I'm tracking a bunch of different metrics so the metric that I just added with that logline cold start I've added it to the dashboard and",
    "start": "707880",
    "end": "714510"
  },
  {
    "text": "now you can see that I've also created an alarm so you can track how many cool starts have added I can allow myself if",
    "start": "714510",
    "end": "721080"
  },
  {
    "text": "I sum thing happens by default I've also added some of these other invocations and availability metrics to my dashboard",
    "start": "721080",
    "end": "726810"
  },
  {
    "text": "here so this is things that you can easily do automatically okay so let's go",
    "start": "726810",
    "end": "733950"
  },
  {
    "text": "back to the location so this is great so",
    "start": "733950",
    "end": "738990"
  },
  {
    "text": "they've got a basic set of metrics going they have a dashboard they're able to get alarmed they get paged if there are",
    "start": "738990",
    "end": "746430"
  },
  {
    "text": "issues and they can go in and look at different things that are happening oh so so they now get paged about a",
    "start": "746430",
    "end": "753380"
  },
  {
    "text": "customer issue looks like this customers not getting their deliveries and so one",
    "start": "753380",
    "end": "760290"
  },
  {
    "text": "of the challenges with the cloud wash logs was that your logs were getting aggregated by function group right so by a log group and so it's it might be",
    "start": "760290",
    "end": "766950"
  },
  {
    "text": "challenging to search across all of those log groups and in order to especially to troubleshoot some of these",
    "start": "766950",
    "end": "772830"
  },
  {
    "text": "customers shoes you want to be able to search across all of these logs you want to be able to even better if you have",
    "start": "772830",
    "end": "778170"
  },
  {
    "text": "something to be able to search for customer if you can create poor customer metrics that would be easy to solve some",
    "start": "778170",
    "end": "783750"
  },
  {
    "text": "of these issues and luckily it's not hard to do that with what we have so",
    "start": "783750",
    "end": "789150"
  },
  {
    "text": "what you can do with lambda is by default your logs are going to cloud wash logs and so you can omit these logs",
    "start": "789150",
    "end": "794790"
  },
  {
    "text": "in a certain format and you can have a custom format for those logs and once it goes to cloud wash logs you can have",
    "start": "794790",
    "end": "801270"
  },
  {
    "text": "lambda trigger that basically listen that gets triggered when these logs appear and you can have a filter that for example this lambda function could",
    "start": "801270",
    "end": "808380"
  },
  {
    "text": "get triggered only if there is an error right and so you can have that lambda function look for the get triggered by",
    "start": "808380",
    "end": "813390"
  },
  {
    "text": "that error and then it can parse that log and then it can do one of two things it can send that to another service for",
    "start": "813390",
    "end": "819150"
  },
  {
    "text": "example elasticsearch or it could also emit another metric back to cloud watch metrics again and so by sending this to",
    "start": "819150",
    "end": "826350"
  },
  {
    "text": "elasticsearch you have an option to go visualize and search across elasticsearch so in this case for molly",
    "start": "826350",
    "end": "833010"
  },
  {
    "text": "mu here's what we've done we've basically have a have a sample function so i wrap for anytime we have an error",
    "start": "833010",
    "end": "838770"
  },
  {
    "text": "in the in the application instead of directly doing a consult or log I have a wrapper function that's basically log in",
    "start": "838770",
    "end": "845640"
  },
  {
    "text": "the error and it has a certain format and this is the format I've used essentially that's going to create the log line in cloud watch with this log",
    "start": "845640",
    "end": "852180"
  },
  {
    "text": "entry and then the the function that is getting triggered is going to get triggered only if there is an error in the filter expression and then what",
    "start": "852180",
    "end": "858630"
  },
  {
    "text": "happens is that function then publishes this log to elasticsearch and then we can search an elastic search with different plugins so I'm going to show",
    "start": "858630",
    "end": "864600"
  },
  {
    "text": "you how you do that again so let's go",
    "start": "864600",
    "end": "873540"
  },
  {
    "text": "back to so I've I've logged the line so as you can see I have a log line and anytime I have an error I essentially go",
    "start": "873540",
    "end": "880350"
  },
  {
    "text": "and log log the errors there and then we have a a function that is basically",
    "start": "880350",
    "end": "886350"
  },
  {
    "text": "getting triggered by the error so where so you you have this function log processor that has the that is basically",
    "start": "886350",
    "end": "892800"
  },
  {
    "text": "a trigger for this event and so you can see that that CloudWatch log is triggering this this this function and",
    "start": "892800",
    "end": "899120"
  },
  {
    "text": "then let's look at the function quickly",
    "start": "899120",
    "end": "903260"
  },
  {
    "text": "so the function is pretty straightforward it's looking at the log line it basically parts this is out into its fields at that point in this case",
    "start": "904850",
    "end": "911940"
  },
  {
    "text": "it's basically publishing this to elasticsearch and you could choose to do this to another service you can also",
    "start": "911940",
    "end": "917120"
  },
  {
    "text": "publish another metric as I was saying so this case is publishing to elasticsearch and let's now go back to",
    "start": "917120",
    "end": "922470"
  },
  {
    "text": "elastic search and see if we can figure out what the issue is right I'm going to go back to elastic search I'm going to",
    "start": "922470",
    "end": "928680"
  },
  {
    "text": "search with a customer see if I can figure out what's going on",
    "start": "928680",
    "end": "934339"
  },
  {
    "text": "okay so that's the log entries so it looks like there's something wrong with",
    "start": "934550",
    "end": "940320"
  },
  {
    "text": "the image and it's not being recognized as a celebrity so let's look at the image so let's look at the image maybe",
    "start": "940320",
    "end": "947850"
  },
  {
    "text": "there's something wrong with that ah okay this is a fairly old picture of him",
    "start": "947850",
    "end": "954180"
  },
  {
    "text": "so I'm guessing it's not getting recognized as a celebrity so let's go back to the function I'm going to try to",
    "start": "954180",
    "end": "959820"
  },
  {
    "text": "see if I can fix this on the fly I'm going to force it not to use his for",
    "start": "959820",
    "end": "965160"
  },
  {
    "text": "city use a later image not the older image so let me use the latest image",
    "start": "965160",
    "end": "970650"
  },
  {
    "text": "here I'll save this so one of the nice things about the console now is that you have this full-screen mode that's",
    "start": "970650",
    "end": "976410"
  },
  {
    "text": "helpful in terms of doing quick edits and saves and iterate around that",
    "start": "976410",
    "end": "982010"
  },
  {
    "text": "so let's and again here for the log error what I've done here is use a",
    "start": "982010",
    "end": "987870"
  },
  {
    "text": "format you can have different formats and then use different functions there so let's go back to this and see if this works now oh great so now it's able to",
    "start": "987870",
    "end": "1001010"
  },
  {
    "text": "detect that it's working it's able to detect the image it's using a different image and it's able to",
    "start": "1001010",
    "end": "1006950"
  },
  {
    "text": "detect that he's a celebrity at this point okay okay great",
    "start": "1006950",
    "end": "1014540"
  },
  {
    "text": "so we've resolved that issue okay great so if the customer is happy you've resolved the issue and the company is",
    "start": "1014540",
    "end": "1020839"
  },
  {
    "text": "doing pretty well and after the endorsement they end up raising more money and then it's the traffic",
    "start": "1020839",
    "end": "1026959"
  },
  {
    "text": "continues to grow significantly so when you have a smaller so let's look at so",
    "start": "1026959",
    "end": "1032688"
  },
  {
    "text": "we've done a lot with logging and just metrics right we've been able to troubleshoot issues and you can do a bunch of startings with logging but as",
    "start": "1032689",
    "end": "1038630"
  },
  {
    "text": "your application starts to get more complicated it gets harder and harder to do these things with just logging right",
    "start": "1038630",
    "end": "1044000"
  },
  {
    "text": "so when your application looks like this where you have where you have API gateway and a function and dinamo you can end up you can add more logs and you",
    "start": "1044000",
    "end": "1050750"
  },
  {
    "text": "can basically correlate the logs that you have from API gateway and dynamodb and by timestamp you could do some",
    "start": "1050750",
    "end": "1056179"
  },
  {
    "text": "matching and then troubleshoot your issues you can also add a lot more logging information around the calls to dynamodb but as your application starts",
    "start": "1056179",
    "end": "1063230"
  },
  {
    "text": "to get more complicated it becomes harder to do this so when when it becomes like this it gets more",
    "start": "1063230",
    "end": "1068450"
  },
  {
    "text": "challenging now to correlate across all of these services you have to do a lot more logging it gets harder to do it across time stamps across all of these",
    "start": "1068450",
    "end": "1074570"
  },
  {
    "text": "applications and they really try and the real challenging thing is that as these applications grow bigger you can have a",
    "start": "1074570",
    "end": "1081590"
  },
  {
    "text": "service that is you know five five hops downstream that fails and then it gets harder to figure out which services going wrong and how do you troubleshoot",
    "start": "1081590",
    "end": "1087890"
  },
  {
    "text": "that right and you have to be able to correlate across all of these different services and that's not easy to do with",
    "start": "1087890",
    "end": "1093980"
  },
  {
    "text": "just logs right and what you really want is something like this you want to be able to look at your application in a in",
    "start": "1093980",
    "end": "1101390"
  },
  {
    "text": "a in what we would call like a call graph or a service graph and be able to track that how the how the requests are",
    "start": "1101390",
    "end": "1107090"
  },
  {
    "text": "going through your application you want to be able to start from your application look at the different components and the different nodes in your system and be able to and know if",
    "start": "1107090",
    "end": "1114590"
  },
  {
    "text": "something is going wrong and in this case if one of the nodes has an issue then be able to it should flag it for",
    "start": "1114590",
    "end": "1119720"
  },
  {
    "text": "you and luckily for us you know it's it's we have that we have a service in",
    "start": "1119720",
    "end": "1125390"
  },
  {
    "text": "AWS x-ray which is launched earlier an x-ray basically tracks traces through",
    "start": "1125390",
    "end": "1133760"
  },
  {
    "text": "your entire system so they collect data as it goes from the different components so as it goes from service to service",
    "start": "1133760",
    "end": "1140660"
  },
  {
    "text": "you're collecting data which is then aggregated into a trace and those traces are basically for your service call and x-ray does all the work of combining",
    "start": "1140660",
    "end": "1148100"
  },
  {
    "text": "that to present that for you in a in a visual format right yeah and this allows",
    "start": "1148100",
    "end": "1153110"
  },
  {
    "text": "you to pinpoint applications in your application much much more easily so you can so you can identify performance",
    "start": "1153110",
    "end": "1159950"
  },
  {
    "text": "bottlenecks you can identify issues and you can pinpoint and and troubleshoot those and with lambda x-rays natively",
    "start": "1159950",
    "end": "1168440"
  },
  {
    "text": "integrated so we have an x-ray agent that's already running that's collecting logs and in your lambda function you can",
    "start": "1168440",
    "end": "1174860"
  },
  {
    "text": "turn that on by turning tracing on turning it on and then that automatically tracks the trace for your",
    "start": "1174860",
    "end": "1181010"
  },
  {
    "text": "lamda application and so it starts to collect metadata and as well as two calls to the other services are also",
    "start": "1181010",
    "end": "1186890"
  },
  {
    "text": "getting logged and this happens in in real time there's very little latency is there's no impact to your application",
    "start": "1186890",
    "end": "1192350"
  },
  {
    "text": "and these this data is getting law of you can usually see the traces in a few seconds immediately and this enables you",
    "start": "1192350",
    "end": "1198170"
  },
  {
    "text": "to get started doing what I was just showing the service craft without having to do a lot of plumbing in your application you just have to",
    "start": "1198170",
    "end": "1203270"
  },
  {
    "text": "check a box saying I want tracing on and your lambda or your several application now has tracing enable through the",
    "start": "1203270",
    "end": "1209270"
  },
  {
    "text": "application and this is how the raw data looks like x-ray as I said the x-ray is",
    "start": "1209270",
    "end": "1214910"
  },
  {
    "text": "a tracing the request through and collecting data as you go from service to service and each of the service is",
    "start": "1214910",
    "end": "1219950"
  },
  {
    "text": "called a segment this data here that it collects this there's there's a piece of",
    "start": "1219950",
    "end": "1226100"
  },
  {
    "text": "data that identifies your segment it tracks the time that is spending in that segment it tracks the outcome of that",
    "start": "1226100",
    "end": "1232880"
  },
  {
    "text": "segment if there's an error then it tracks there and if this success it tracks everything everything is",
    "start": "1232880",
    "end": "1239060"
  },
  {
    "text": "correlated with the trace ID and that's how they're all correlated and then it also tracks other components like the",
    "start": "1239060",
    "end": "1244310"
  },
  {
    "text": "origin and the of your trace right and the resources that are used and what an",
    "start": "1244310",
    "end": "1250790"
  },
  {
    "text": "x-ray does for you then is with that raw data it provides you that data in a visual format by default it shows you in",
    "start": "1250790",
    "end": "1256550"
  },
  {
    "text": "your service map and you go to your function and you look at the service map you're gonna have three nodes the main",
    "start": "1256550",
    "end": "1262040"
  },
  {
    "text": "application will have a node and that you can look at that node and then it has the time that is being spent to the lambda function and then a node for any",
    "start": "1262040",
    "end": "1268880"
  },
  {
    "text": "downstream call so it's basically visually showing you the data and it allows you to drill down so you can look",
    "start": "1268880",
    "end": "1274220"
  },
  {
    "text": "at any of these nodes and you are able to drill down and when you drill down into one of these nodes your first of",
    "start": "1274220",
    "end": "1281030"
  },
  {
    "text": "all you can see the service graph and there are different colors there's of so in this case some of these nodes have an",
    "start": "1281030",
    "end": "1286310"
  },
  {
    "text": "orange color they're indicating there were errors for that in some cases you can click on any of these nodes for",
    "start": "1286310",
    "end": "1292430"
  },
  {
    "text": "example here you can click on the recognition node and you can you can then click on the errors and that lets",
    "start": "1292430",
    "end": "1299060"
  },
  {
    "text": "you filter all the traces that have error so this is this is really cool so you can start from a service map you",
    "start": "1299060",
    "end": "1304310"
  },
  {
    "text": "look at your service map for your application and you have the service map and let's say there are two percent of them are errors you can click on the",
    "start": "1304310",
    "end": "1310580"
  },
  {
    "text": "errors and then when you click on the errors it'll show you the traces for that for those errors and so now you can",
    "start": "1310580",
    "end": "1316730"
  },
  {
    "text": "go into each of those traces you can now start to understand the performance and the errors for those traces so in this case let's say you went into one of",
    "start": "1316730",
    "end": "1323630"
  },
  {
    "text": "those nodes you clicked on the trace you clicked on the errors you click on the trace you can then go to the trace",
    "start": "1323630",
    "end": "1328850"
  },
  {
    "text": "you'll see a list of traces once you click on that trace you can then go into the perform",
    "start": "1328850",
    "end": "1334520"
  },
  {
    "text": "characteristic of the trace it shows you that data visually it organized it by sub segments you can go into each of",
    "start": "1334520",
    "end": "1340280"
  },
  {
    "text": "these sub segments into these segments look at the time being spent on any of these and if there are errors it'll show",
    "start": "1340280",
    "end": "1345590"
  },
  {
    "text": "you that there is an error in one of those and you can click on any of these you can see the errors there as well all",
    "start": "1345590",
    "end": "1351050"
  },
  {
    "text": "right so it's just great so here's some of the concepts in x-ray right so I talked about the trace the NEX ray that",
    "start": "1351050",
    "end": "1356990"
  },
  {
    "text": "you can that you can basically use to aggregate all these segments with each",
    "start": "1356990",
    "end": "1362690"
  },
  {
    "text": "each part of your each part each service is aggregated into a segment and that's",
    "start": "1362690",
    "end": "1367970"
  },
  {
    "text": "happening for you by default and but in addition you can create sub segments in your in your trace and so you can do",
    "start": "1367970",
    "end": "1374180"
  },
  {
    "text": "that by adding its when you add a sub segment you're creating a sub section in your trace and you can track different characteristics around that sub segment",
    "start": "1374180",
    "end": "1380720"
  },
  {
    "text": "right you can also add other things like annotations and metadata to that trace and the reason you'd add an annotation",
    "start": "1380720",
    "end": "1386780"
  },
  {
    "text": "is that you can then go back to your trace and you can search for those with an annotation as I'll show you you can search for annotations that have that",
    "start": "1386780",
    "end": "1392900"
  },
  {
    "text": "and then you can then it helps you debug requests that have that annotation you can also add other metadata that you",
    "start": "1392900",
    "end": "1398240"
  },
  {
    "text": "want to be available and as I showed you it shows your errors as well and so it",
    "start": "1398240",
    "end": "1403340"
  },
  {
    "text": "actually provides you a set of API that you can then use to filter this data you",
    "start": "1403340",
    "end": "1408680"
  },
  {
    "text": "can use that to to aggregate this data you can also use add additional sub",
    "start": "1408680",
    "end": "1415580"
  },
  {
    "text": "segments you can add additional annotations in addition what you can also do is you can you can use the API",
    "start": "1415580",
    "end": "1421310"
  },
  {
    "text": "to put more data in so you can add trace segments you canyou can get those straight segments out and then you can",
    "start": "1421310",
    "end": "1427580"
  },
  {
    "text": "do a bunch of different things with it for example you can take the draw data out into another application that can analyze this for you you don't you can",
    "start": "1427580",
    "end": "1433640"
  },
  {
    "text": "take it into another application that lets you visualize it differently you can you can trace it differently and",
    "start": "1433640",
    "end": "1439880"
  },
  {
    "text": "then run different kinds of search there so in this case you you would use the",
    "start": "1439880",
    "end": "1445040"
  },
  {
    "text": "default D SDK and then what you can do in this case what I've done here is basically I'm tracking it I've added a",
    "start": "1445040",
    "end": "1451400"
  },
  {
    "text": "sub segment here to track as I start going through my function once you had a sub segment it creates a section for you",
    "start": "1451400",
    "end": "1457460"
  },
  {
    "text": "and then you can start to add different things like annotations to that to that trace and when you add a sub segment",
    "start": "1457460",
    "end": "1463700"
  },
  {
    "text": "what x-ray then does is it basically creates sub segments for you so in this case you'll see when I've created different",
    "start": "1463700",
    "end": "1470000"
  },
  {
    "text": "sub segments or for my calls for dynamo it's creating sub segments that then I can then look at each of these and say",
    "start": "1470000",
    "end": "1475130"
  },
  {
    "text": "what the issues are and I look at the time that is being spent in each of these sub segments and I can drill down",
    "start": "1475130",
    "end": "1480230"
  },
  {
    "text": "into any one of those and look at performance issues right so let's look",
    "start": "1480230",
    "end": "1486019"
  },
  {
    "text": "at the other case so you could also in the previous case when we had the issue with the with with the celebrity image",
    "start": "1486019",
    "end": "1491299"
  },
  {
    "text": "detection and we used elastic search to do that you can also do that with x-ray so for example when I had an error with",
    "start": "1491299",
    "end": "1498200"
  },
  {
    "text": "the recognizing the celebrity I could have added a annotation in my sub segment so I could say this was my error and then what you can I what that does",
    "start": "1498200",
    "end": "1505490"
  },
  {
    "text": "is it logs that data to x-ray you'll see that in the raw data you can then go into x-ray in the x-ray console and then",
    "start": "1505490",
    "end": "1512389"
  },
  {
    "text": "you should be able to search those annotations so in this case when I had the previous error I could have searched because I was adding an annotation that",
    "start": "1512389",
    "end": "1518059"
  },
  {
    "text": "said error I can do annotation dot error and then search for the string that I just added and it'll show me all the",
    "start": "1518059",
    "end": "1523639"
  },
  {
    "text": "traces that have that error and so that's pretty cool so as you as you go through a function you can add different types of annotations and then you can",
    "start": "1523639",
    "end": "1529909"
  },
  {
    "text": "search for those and then you can go into any trace that has those annotations allowing you to drill down into those annotations so in this case",
    "start": "1529909",
    "end": "1535669"
  },
  {
    "text": "these are all the traces for when we had this error with recognizing that",
    "start": "1535669",
    "end": "1540679"
  },
  {
    "text": "celebrity and so then I can click on one of those traces I can go look into the raw data and I can skim through it and",
    "start": "1540679",
    "end": "1546529"
  },
  {
    "text": "see where and if I've added more annotations or I have more data that is being logged and I can look and see why that's an issue and in this case it",
    "start": "1546529",
    "end": "1552139"
  },
  {
    "text": "looks like it was not being recognized as a celebrity so this is another way that you can go look at it and this is",
    "start": "1552139",
    "end": "1557769"
  },
  {
    "text": "you know what is interesting about this is that if you can add annotations and other things that you can do with x-ray then you can drill down into those error",
    "start": "1557769",
    "end": "1564440"
  },
  {
    "text": "conditions and then start to drill down from there and then do this which is having it into another system right okay",
    "start": "1564440",
    "end": "1572570"
  },
  {
    "text": "great so so we've done have gone through a bunch of concepts x-ray let's see how we can tie that all together as the",
    "start": "1572570",
    "end": "1579830"
  },
  {
    "text": "application is continuing to grow with Molly move large the users start complaining about performance issues and",
    "start": "1579830",
    "end": "1585700"
  },
  {
    "text": "as the traffic is drawn their performance is getting slower let's see if you can use x-ray to debug this right",
    "start": "1585700",
    "end": "1592658"
  },
  {
    "text": "okay so I'm going to go back to my",
    "start": "1596890",
    "end": "1602990"
  },
  {
    "text": "application so the first thing you want to do when you have something like that is go to your dashboard right so let's",
    "start": "1602990",
    "end": "1608780"
  },
  {
    "text": "let's let's use the dashboard that we created earlier to see if there's something that it signals right so I'm",
    "start": "1608780",
    "end": "1614150"
  },
  {
    "text": "going to look at the cold start doesn't look like there's any issue there this doesn't look like there's any issue with",
    "start": "1614150",
    "end": "1619549"
  },
  {
    "text": "invocations the only thing there doesn't look like any availability issues that are not any different errors the only",
    "start": "1619549",
    "end": "1626870"
  },
  {
    "text": "difference that I can see is the the number of concurrent ex executions is increased and the function duration",
    "start": "1626870",
    "end": "1632360"
  },
  {
    "text": "seems to have to have increased but at this point it's not clear what the issue is and so now let's see if we can use",
    "start": "1632360",
    "end": "1638570"
  },
  {
    "text": "x-ray to figure out what's going on right so let's go to the x-ray service map for this function so as I was saying",
    "start": "1638570",
    "end": "1645620"
  },
  {
    "text": "you can go back and create a service map",
    "start": "1645620",
    "end": "1649120"
  },
  {
    "text": "for the last two hours so you can go create a service map for your",
    "start": "1653080",
    "end": "1659650"
  },
  {
    "text": "application it's going to go through those traces it's going to create a service map for you you can look at any of these service",
    "start": "1659650",
    "end": "1666830"
  },
  {
    "text": "map like I said if you click on one of them you can see the different distributions you can click and filter",
    "start": "1666830",
    "end": "1672650"
  },
  {
    "text": "based on the errors so let's look at the service map in this case I have a domain",
    "start": "1672650",
    "end": "1679190"
  },
  {
    "text": "function that is being called that calls a the Molly mu celebrity Lander function",
    "start": "1679190",
    "end": "1684679"
  },
  {
    "text": "and that's turning around and calling the recognition function and the bulk of the time the function is taking about",
    "start": "1684679",
    "end": "1691240"
  },
  {
    "text": "about a second and the bulk of the time is being spent in the recognition function right so let's click through",
    "start": "1691240",
    "end": "1697490"
  },
  {
    "text": "find a recent trace go back in and find a recent trace let me do this for last",
    "start": "1697490",
    "end": "1704830"
  },
  {
    "text": "now let's click on one of them see where the time is being spent so that's the",
    "start": "1709249",
    "end": "1714299"
  },
  {
    "text": "nice a so in x-ray when you find a trace it gives you a visual representation there is raw data here that you can go",
    "start": "1714299",
    "end": "1719820"
  },
  {
    "text": "look at if you want more data you can look at your timeline here and let's",
    "start": "1719820",
    "end": "1725249"
  },
  {
    "text": "drill down into the timeline for this application so we have the main application here and then there is a",
    "start": "1725249",
    "end": "1732139"
  },
  {
    "text": "there's data here that is tracking the amount of time that is taking the the first call that makes is to get the",
    "start": "1732139",
    "end": "1738119"
  },
  {
    "text": "status of the application from the cache that I have in this case it's a dynamo DB entry it's returning from my cache",
    "start": "1738119",
    "end": "1744149"
  },
  {
    "text": "and then it's going to recognition to determine if it's a celebrity or not so",
    "start": "1744149",
    "end": "1753179"
  },
  {
    "text": "let's look at another trace to see if there's anything different there okay so",
    "start": "1753179",
    "end": "1761279"
  },
  {
    "text": "let's go back to our application try to run a test and see where the time is being spent right so I'm going to pick a",
    "start": "1761279",
    "end": "1767519"
  },
  {
    "text": "different event so we're lamda with the new console you have you have the ability to configure and test your events right here so I'm going to pick",
    "start": "1767519",
    "end": "1773220"
  },
  {
    "text": "an event and then try to test it this should you now generate a new x-ray",
    "start": "1773220",
    "end": "1779609"
  },
  {
    "text": "trace that I can go look at so let's go back to so this is one that's taken over",
    "start": "1779609",
    "end": "1785970"
  },
  {
    "text": "a second let's go try to find a recent trace it's always risky when you do this",
    "start": "1785970",
    "end": "1795539"
  },
  {
    "text": "real-time but as you can see the trace shows up in a few seconds there you can now let's see if you can figure out",
    "start": "1795539",
    "end": "1801239"
  },
  {
    "text": "what's going on there so you see the it's it's trying to make a call father",
    "start": "1801239",
    "end": "1806970"
  },
  {
    "text": "image it's looked up in its cache it's it's then makes a call to recognition and then it's tries to put it into the",
    "start": "1806970",
    "end": "1812489"
  },
  {
    "text": "cache the put cache call is this is a sub-segment that I've added for put cache and showing up and it's barely",
    "start": "1812489",
    "end": "1818099"
  },
  {
    "text": "taking any time to do the to put it in the cache and it's going to recognition so the issue I think is and bulk of the",
    "start": "1818099",
    "end": "1824220"
  },
  {
    "text": "time is being spent on recognition and clearly we want to be able to cache that data and so here we've added the ability",
    "start": "1824220",
    "end": "1829729"
  },
  {
    "text": "to a cache but it looks like a the ad call was really quick and then the get",
    "start": "1829729",
    "end": "1835499"
  },
  {
    "text": "call seems to be failing or at least not finding it in the cache and it's going to recognition all the time",
    "start": "1835499",
    "end": "1842028"
  },
  {
    "text": "let's see if that's the issue let's go back to my code so as I was saying we",
    "start": "1842330",
    "end": "1850649"
  },
  {
    "text": "first look at the data in the cache if you don't find it in the cache we're going to go into recognition make the call there and then if we find it we",
    "start": "1850649",
    "end": "1858179"
  },
  {
    "text": "should be adding it to the cache and we have a annotation which basically adds it to the cache that you saw and it looks like we are not putting it into",
    "start": "1858179",
    "end": "1864390"
  },
  {
    "text": "the cache at this point we would turn it off for some reason and then forgot to turn it back on so we're not putting any data into the cache and if you look at",
    "start": "1864390",
    "end": "1871110"
  },
  {
    "text": "my cache which is basically DynamoDB I'm not finding anything in the cache and as a result it's the get call is not",
    "start": "1871110",
    "end": "1878640"
  },
  {
    "text": "returning anything it's going to recognition so let's see if we can fix that so I'm going to turn this back on",
    "start": "1878640",
    "end": "1885710"
  },
  {
    "text": "I'm gonna save this so nice thing about this is that when we with the lambda",
    "start": "1885710",
    "end": "1892080"
  },
  {
    "text": "console is that you can save you can do the test and we also have the ability for you to see the results within the console so if this is a new addition to",
    "start": "1892080",
    "end": "1898200"
  },
  {
    "text": "this we have the new cloud9 ID that has been integrated as you saw we have multiple ways to use it there is this is",
    "start": "1898200",
    "end": "1904409"
  },
  {
    "text": "in the full-screen mode it's built so that you can iterate and test pretty rapidly so this case I've added I've",
    "start": "1904409",
    "end": "1910200"
  },
  {
    "text": "added it to the cache let me test this again with the same test event so in",
    "start": "1910200",
    "end": "1916200"
  },
  {
    "text": "this case it should take time because it's not in the cache but at the end of this call hopefully it should have added to the cache let's see if that did it",
    "start": "1916200",
    "end": "1922559"
  },
  {
    "text": "did take the same amount of time I'm going to go back to x-ray we go back to the trace",
    "start": "1922559",
    "end": "1929539"
  },
  {
    "text": "oh maybe it's not with the annotation okay okay so just taking a second still",
    "start": "1938350",
    "end": "1946539"
  },
  {
    "text": "so let's see if you read on this it should have added it to the cache okay",
    "start": "1946539",
    "end": "1953590"
  },
  {
    "text": "great so now it looks like it's founded in the cache let's see if you can pull this up with x-ray I'm going to remove the",
    "start": "1953590",
    "end": "1964389"
  },
  {
    "text": "annotation there are the traces that have shown up that's in real time so",
    "start": "1964389",
    "end": "1971019"
  },
  {
    "text": "let's look at the most recent trace and as you can see the previous trace was taking us two seconds and now we've",
    "start": "1971019",
    "end": "1976509"
  },
  {
    "text": "reduced that to in the hundreds of milliseconds so using this now you can see that the get cache is succeeded and",
    "start": "1976509",
    "end": "1981850"
  },
  {
    "text": "the entire call went through far more rapidly right so we've been able to put in the cache and then we were able to",
    "start": "1981850",
    "end": "1988120"
  },
  {
    "text": "get this and then it doesn't make a call to recognition at this point so that's great so we were able to use x-ray to be",
    "start": "1988120",
    "end": "1993940"
  },
  {
    "text": "able to debug this on the fly and fix it here and you can see this in the",
    "start": "1993940",
    "end": "2000059"
  },
  {
    "text": "execution results as well we are adding it to the cache and you can see the time has been reduced okay okay great so we",
    "start": "2000059",
    "end": "2011009"
  },
  {
    "text": "fix that issue and then you know and the company is doing pretty well at this point if you fix most of the issues and",
    "start": "2011009",
    "end": "2017309"
  },
  {
    "text": "they decide to go public so this point I want to introduce Yvonne who's going to talk about how they use x-ray and other",
    "start": "2017309",
    "end": "2024389"
  },
  {
    "text": "other monitoring tools in financial engines and walk us through some use cases",
    "start": "2024389",
    "end": "2029600"
  },
  {
    "text": "hello everyone and good afternoon my name is Yvonne Roberts I work for financial engines as a software",
    "start": "2036580",
    "end": "2042769"
  },
  {
    "text": "architect so with roots in Silicon Valley financial engines is a nation's largest independent investment advisor",
    "start": "2042769",
    "end": "2049940"
  },
  {
    "text": "and we believe that all Americans not just the wealthy deserve high-quality unbiased financial help today we offer",
    "start": "2049940",
    "end": "2057408"
  },
  {
    "text": "financial help to over 9 million people across more than 700 companies so to",
    "start": "2057409",
    "end": "2064368"
  },
  {
    "text": "support those 9 million people a few years back we decided to step back and change our strategic approach to how we",
    "start": "2064369",
    "end": "2071599"
  },
  {
    "text": "wanted to grow our tech infrastructure and move to the cloud we had a monolithic codebase on-premise and as",
    "start": "2071599",
    "end": "2078858"
  },
  {
    "text": "you know that gets a little hard to manage and to scale out and this move would allow us to scale more efficiently",
    "start": "2078859",
    "end": "2085339"
  },
  {
    "text": "cost effective and such so we had one team their goal was to focus on a lift",
    "start": "2085339",
    "end": "2090679"
  },
  {
    "text": "and shift approach and taking our tiers and moving them one by one onto the cloud and then we had the rest of our",
    "start": "2090679",
    "end": "2096800"
  },
  {
    "text": "team that was working on taking little pieces away from that monolithic",
    "start": "2096800",
    "end": "2101990"
  },
  {
    "text": "codebase and creating micro services specifically with a service architecture and we have a very high bar on using non",
    "start": "2101990",
    "end": "2109460"
  },
  {
    "text": "managed services today we have about 15 micro services in the cloud with some of",
    "start": "2109460",
    "end": "2115609"
  },
  {
    "text": "our core engines apps getting for example 300 million invocations in a",
    "start": "2115609",
    "end": "2121160"
  },
  {
    "text": "given month so when we started this journey we said ok what do we need to do",
    "start": "2121160",
    "end": "2126500"
  },
  {
    "text": "what do we need to measure and determine as we made it to say that this is it successful so we had to measure",
    "start": "2126500",
    "end": "2134390"
  },
  {
    "text": "performance improvements to compare you know lamda services against our you know beefy racks and make sure ok this was a",
    "start": "2134390",
    "end": "2140480"
  },
  {
    "text": "good decision we're doing the right thing we had to do ongoing measurement of performance so that when Engineer X",
    "start": "2140480",
    "end": "2147589"
  },
  {
    "text": "made change LMNOP that he wasn't affecting performance or degrading",
    "start": "2147589",
    "end": "2152750"
  },
  {
    "text": "performance and we also needed to be able to identify and resolve issues as soon as they came up so how did we do",
    "start": "2152750",
    "end": "2160970"
  },
  {
    "text": "this we first started very basic we took our code we instrumented it and had calculations on how some of our key",
    "start": "2160970",
    "end": "2168830"
  },
  {
    "text": "how long they took we would add it to the end of the log we also created stress test applications that would take",
    "start": "2168830",
    "end": "2177040"
  },
  {
    "text": "in vacations let's say from production and run that against our applications in",
    "start": "2177040",
    "end": "2183200"
  },
  {
    "text": "dev and then take that log that we had written to and make calculations and",
    "start": "2183200",
    "end": "2189470"
  },
  {
    "text": "statistics and say okay this is how it's performing this is how you know function XYZ is performing and compare that to",
    "start": "2189470",
    "end": "2197030"
  },
  {
    "text": "production on our beefy servers for example we also have cloud watch and",
    "start": "2197030",
    "end": "2202730"
  },
  {
    "text": "slunk dashboards and I have alerts so if anything spikes to high performances",
    "start": "2202730",
    "end": "2207950"
  },
  {
    "text": "starting to take a hit we know that right away but that that still didn't",
    "start": "2207950",
    "end": "2213260"
  },
  {
    "text": "give us the big picture that still didn't tell us the customers journey for example through our micro service we",
    "start": "2213260",
    "end": "2221180"
  },
  {
    "text": "knew you know lambda took about this amount of time but we couldn't say you know this amount of time is spent on",
    "start": "2221180",
    "end": "2226550"
  },
  {
    "text": "DynamoDB this amount of time is spent on s3 and so what we did was we this past",
    "start": "2226550",
    "end": "2232100"
  },
  {
    "text": "summer when AWS release x-ray for lambda we decided to give it a spin and see how",
    "start": "2232100",
    "end": "2239090"
  },
  {
    "text": "that worked out and it was actually pretty good we got pretty quick winds almost immediately to implement it it",
    "start": "2239090",
    "end": "2245360"
  },
  {
    "text": "didn't take more than you know 20 minutes tops and we were able to push that and project production and right",
    "start": "2245360",
    "end": "2251960"
  },
  {
    "text": "away C sub segments and segments and get performance numbers it was a sampling of",
    "start": "2251960",
    "end": "2259730"
  },
  {
    "text": "traffic obviously not all of our traffic but it was good percentages you've got transactions per minute average latency",
    "start": "2259730",
    "end": "2265730"
  },
  {
    "text": "and a distribution and we were able to with that be able to see okay this part",
    "start": "2265730",
    "end": "2271790"
  },
  {
    "text": "of our code is not performing well we need to you know either add caching or we need to do some lambda fan-out or",
    "start": "2271790",
    "end": "2279410"
  },
  {
    "text": "even change throughput for example on DynamoDB and we were able to get better",
    "start": "2279410",
    "end": "2285260"
  },
  {
    "text": "numbers for example on different invocations so we're a FinTech company",
    "start": "2285260",
    "end": "2290810"
  },
  {
    "text": "of course and every person we give advice to every person no matter what",
    "start": "2290810",
    "end": "2296150"
  },
  {
    "text": "type of their account is but a person with one account versus a person with 20 accounts the performance on ours",
    "start": "2296150",
    "end": "2302540"
  },
  {
    "text": "Monte Carlo simulations for example can be drastically different and also some",
    "start": "2302540",
    "end": "2307730"
  },
  {
    "text": "companies may offer stock options other companies may offer pensions and that would also change how that simulation",
    "start": "2307730",
    "end": "2314570"
  },
  {
    "text": "would work and with annotations we were able to see okay specifically for company Acme",
    "start": "2314570",
    "end": "2321430"
  },
  {
    "text": "performance is actually suffering because they have this different type of an account and we were then able to",
    "start": "2321430",
    "end": "2327740"
  },
  {
    "text": "drill in and fix those type of issues as we went through this journey there was a",
    "start": "2327740",
    "end": "2332960"
  },
  {
    "text": "couple things that we saw little nuances or whatever you would like to call it",
    "start": "2332960",
    "end": "2339650"
  },
  {
    "text": "that we addressed so for example it's a sampling rate and if you have errors",
    "start": "2339650",
    "end": "2345560"
  },
  {
    "text": "your errors aren't going to necessarily show up in x-ray so to increase the probability of it showing up in x-ray",
    "start": "2345560",
    "end": "2351590"
  },
  {
    "text": "they have an API called for sampling of current segments also in AWS lambda you",
    "start": "2351590",
    "end": "2357320"
  },
  {
    "text": "cannot get the root segment and add annotations and metadata to it you have",
    "start": "2357320",
    "end": "2363200"
  },
  {
    "text": "to create a root sub segment and then add annotations and metadata to that",
    "start": "2363200",
    "end": "2368270"
  },
  {
    "text": "also some services for example DynamoDB is now going to issue its own sub",
    "start": "2368270",
    "end": "2374030"
  },
  {
    "text": "segment or own segment for you instead what the sdk does for you is create an",
    "start": "2374030",
    "end": "2383210"
  },
  {
    "text": "inferred segment so you won't necessarily be able to see the latency the network latency from your lambda 2",
    "start": "2383210",
    "end": "2389480"
  },
  {
    "text": "that DynamoDB but for example s3 will issue its own segment so you'll be able to get a better idea of how much time is",
    "start": "2389480",
    "end": "2396920"
  },
  {
    "text": "spent where so very quickly I'm just going to go through one of my little",
    "start": "2396920",
    "end": "2402890"
  },
  {
    "text": "dummy apps and go through some of the things that I just talked about and some of the gotchas that we found",
    "start": "2402890",
    "end": "2410440"
  },
  {
    "text": "yep all right there we go",
    "start": "2421050",
    "end": "2429540"
  },
  {
    "text": "okay so like I said 10-15 minutes tops you can get something going so first",
    "start": "2429540",
    "end": "2436810"
  },
  {
    "text": "things first you have to go to your CloudFormation that was also released in the summer that you could have flipped that with CloudFormation",
    "start": "2436810",
    "end": "2443170"
  },
  {
    "text": "and you have to do a couple things you have to give rights to your lambda to be",
    "start": "2443170",
    "end": "2450130"
  },
  {
    "text": "able to put to x-ray and here I'm using manage policies obviously you shouldn't",
    "start": "2450130",
    "end": "2456099"
  },
  {
    "text": "do that you really should have you know you're put X Y Z LMNOP but for this demo",
    "start": "2456099",
    "end": "2463030"
  },
  {
    "text": "we're going to use the manage policies you also need to then just as simple as",
    "start": "2463030",
    "end": "2469270"
  },
  {
    "text": "going to your function and adding tracing config and setting the mode to active the difference between active and",
    "start": "2469270",
    "end": "2476380"
  },
  {
    "text": "passive the default is passive I didn't mention that is basically if another lambda calls your lambda and it's",
    "start": "2476380",
    "end": "2482290"
  },
  {
    "text": "passive then it's going to send a segment for every all the work that it did but if it's passive and you call",
    "start": "2482290",
    "end": "2489700"
  },
  {
    "text": "that lambda directly it's not going to send us a segment if it's active then",
    "start": "2489700",
    "end": "2495400"
  },
  {
    "text": "any time whether you call it directly or another lambda calls it directly it will send a segment up to x-ray another",
    "start": "2495400",
    "end": "2503890"
  },
  {
    "text": "nuance that it's important to note is that I am is a global service and if you",
    "start": "2503890",
    "end": "2511030"
  },
  {
    "text": "have an existing stack right and you go and you add this policy for x-ray write",
    "start": "2511030",
    "end": "2518140"
  },
  {
    "text": "only access for example it's not going to update immediately it's not going to replicate to all the different regions",
    "start": "2518140",
    "end": "2524349"
  },
  {
    "text": "immediately and when CloudFormation goes and updates your lambda and says tracing",
    "start": "2524349",
    "end": "2530050"
  },
  {
    "text": "config is on now it's going to go check for that policy and not find it nine",
    "start": "2530050",
    "end": "2535300"
  },
  {
    "text": "times out of ten so as silly as it may sound all you really have to do is",
    "start": "2535300",
    "end": "2540910"
  },
  {
    "text": "rename your policy and what will happen is instead of updating an existing role",
    "start": "2540910",
    "end": "2546160"
  },
  {
    "text": "it will create a new role and that will return when it has been replicated to all the regions and then therefore",
    "start": "2546160",
    "end": "2554339"
  },
  {
    "text": "when you go and update your lambda with tracing config on it finds the policy",
    "start": "2554339",
    "end": "2559529"
  },
  {
    "text": "updated quite a few of our team spent a lot of time on this so hopefully I can",
    "start": "2559529",
    "end": "2564839"
  },
  {
    "text": "spend save you a few moments of stress all right so then the night very next",
    "start": "2564839",
    "end": "2571920"
  },
  {
    "text": "thing you do is adding the x-ray recorder the court AWS SDK and the SDK",
    "start": "2571920",
    "end": "2579479"
  },
  {
    "text": "instrument er and theoretically you can step away and say you're done and you're",
    "start": "2579479",
    "end": "2584489"
  },
  {
    "text": "gonna get data at this point your lambda itself will send a segment a nice town",
    "start": "2584489",
    "end": "2590880"
  },
  {
    "text": "stream resources will send a segment and you'll have information and that's great",
    "start": "2590880",
    "end": "2596249"
  },
  {
    "text": "but there's so much more you can do so you can like we mentioned earlier you",
    "start": "2596249",
    "end": "2601440"
  },
  {
    "text": "can create custom sub sub segments and for example like I said we have let's",
    "start": "2601440",
    "end": "2606630"
  },
  {
    "text": "say a Monte Carlo simulation and just before that simulation we can create a new segment and a sub segment sorry and",
    "start": "2606630",
    "end": "2614969"
  },
  {
    "text": "and get that information so my dummy app is image resize so what I did was on my",
    "start": "2614969",
    "end": "2622469"
  },
  {
    "text": "very important workload I created this sub segment called resize",
    "start": "2622469",
    "end": "2628499"
  },
  {
    "text": "image and then if there's an exception thrown I add it to the sub segment and then once we're done we end this segment",
    "start": "2628499",
    "end": "2635699"
  },
  {
    "text": "sub segment the other thing I mentioned before about the dummy root sub segment",
    "start": "2635699",
    "end": "2641789"
  },
  {
    "text": "so as soon as I start my service I create a root sub segment I add any",
    "start": "2641789",
    "end": "2647489"
  },
  {
    "text": "metadata or annotation that I would like to then turn around and search on and",
    "start": "2647489",
    "end": "2653749"
  },
  {
    "text": "that's pretty much it in terms of code there really isn't too much work to do there and so then we come and we look at",
    "start": "2653749",
    "end": "2662160"
  },
  {
    "text": "our dashboard and like you saw earlier you can see the color distinguish when it's yellow that means there's an error",
    "start": "2662160",
    "end": "2668309"
  },
  {
    "text": "when it's green that means everything's fine and dandy and you can kind of see what the average transaction for Mendez",
    "start": "2668309",
    "end": "2674789"
  },
  {
    "text": "is what your latency and such is so for example let's see we have an error here",
    "start": "2674789",
    "end": "2681479"
  },
  {
    "text": "so I can click on this checkbox and I can say view traces and go to those errors",
    "start": "2681479",
    "end": "2686609"
  },
  {
    "text": "and because I'm afraid that I might have been logged out I'm just gonna tab over here and you can see it there so we see",
    "start": "2686609",
    "end": "2693599"
  },
  {
    "text": "here right away we have a exclamation point we have this red one and that is",
    "start": "2693599",
    "end": "2699660"
  },
  {
    "text": "our root cause so when it went to validate our image we see this sub segment here it said okay what is the",
    "start": "2699660",
    "end": "2707549"
  },
  {
    "text": "problem we can click on it and right away see a full stack trace of what exactly happened we can also add in that",
    "start": "2707549",
    "end": "2715739"
  },
  {
    "text": "catch block that you saw earlier I could have then added more metadata like what",
    "start": "2715739",
    "end": "2720900"
  },
  {
    "text": "my payload request was so that I can turn around and then replay that same thing and and see okay well the issue",
    "start": "2720900",
    "end": "2730109"
  },
  {
    "text": "here was it skipping an on image I uploaded a CSV file instead of an image",
    "start": "2730109",
    "end": "2737239"
  },
  {
    "text": "the other thing you can see is like for example this dummy app that I have here",
    "start": "2737989",
    "end": "2743670"
  },
  {
    "text": "is an event an s3 event you upload an image it does something and so on and",
    "start": "2743670",
    "end": "2748799"
  },
  {
    "text": "you can see that this also ended an error and it tried one time it tried to",
    "start": "2748799",
    "end": "2754079"
  },
  {
    "text": "solve it it did another time it tried to solve it a third time and it still couldn't solve it and it gave up and I",
    "start": "2754079",
    "end": "2760829"
  },
  {
    "text": "can see all three attempts and again click on that exclamation point and see what's the issue and so the error I got",
    "start": "2760829",
    "end": "2768329"
  },
  {
    "text": "is unable to infer image type so that is",
    "start": "2768329",
    "end": "2773420"
  },
  {
    "text": "that error handling and then the last thing is okay a successful use case and",
    "start": "2773420",
    "end": "2780059"
  },
  {
    "text": "so we can see here that and this one this was a cold start up time you can see initialization here it took 138",
    "start": "2780059",
    "end": "2788519"
  },
  {
    "text": "milliseconds not too bad my whole resize took 2.6 seconds kind of",
    "start": "2788519",
    "end": "2793650"
  },
  {
    "text": "slow I'm sure there's a lot I can do to improve that you can see validate image no time no big deal s3 it took 1.2",
    "start": "2793650",
    "end": "2801660"
  },
  {
    "text": "seconds that's quite a bit maybe I can you know change regions and and that sort of thing to see if that changes",
    "start": "2801660",
    "end": "2808140"
  },
  {
    "text": "then the resize itself took almost a second and so on we can click on my uber",
    "start": "2808140",
    "end": "2815539"
  },
  {
    "text": "my root sub segment and we can see some of the annotation being a FinTech company this image",
    "start": "2815539",
    "end": "2823260"
  },
  {
    "text": "processing server includes your bank and your employer so we have banker Acme",
    "start": "2823260",
    "end": "2828450"
  },
  {
    "text": "bank and employer Acme company and we can also search on that so for example I",
    "start": "2828450",
    "end": "2836550"
  },
  {
    "text": "can say go view traces and I can go and say ok show me all the bankers and",
    "start": "2836550",
    "end": "2842790"
  },
  {
    "text": "because I only did one bank we have only one result but theoretically you could see how you would have a wide set and",
    "start": "2842790",
    "end": "2851040"
  },
  {
    "text": "then you can search on that and say well you know what for Acme Bank it took 1.6 seconds but what employers are under",
    "start": "2851040",
    "end": "2857910"
  },
  {
    "text": "this banker and then we can see ok well Acme bank has acne company under it and",
    "start": "2857910",
    "end": "2863460"
  },
  {
    "text": "you could see how like what we did in production is different companies would have different response times depending",
    "start": "2863460",
    "end": "2869460"
  },
  {
    "text": "on the type of accounts that they had so that's that's pretty the bulk of what I",
    "start": "2869460",
    "end": "2876300"
  },
  {
    "text": "wanted to show you it really was pretty straightforward and easy to implement",
    "start": "2876300",
    "end": "2882300"
  },
  {
    "text": "this and gather information and be able to act on that data for us very little",
    "start": "2882300",
    "end": "2889710"
  },
  {
    "text": "effort like I mentioned latency across different resources downstream resources and then be able to slice and dice your",
    "start": "2889710",
    "end": "2895800"
  },
  {
    "text": "reports with annotations thank you much for your time [Applause]",
    "start": "2895800",
    "end": "2902959"
  },
  {
    "text": "cool thanks you want so it's great to hear customers when they talk about how they use our tools and AWS this is great",
    "start": "2907289",
    "end": "2915069"
  },
  {
    "text": "to see quick okay to is a quick recap right so we talked about a lot of things",
    "start": "2915069",
    "end": "2921159"
  },
  {
    "text": "today I think that key takeaways for you is this and we have when you build a server let's app you have a lot of tools",
    "start": "2921159",
    "end": "2927279"
  },
  {
    "text": "that are built in that by natively are built in and integrate with lambda and serverless services that you can use to",
    "start": "2927279",
    "end": "2933899"
  },
  {
    "text": "do logging and monitoring you can add metrics you can do alarming on those and you have with cloud watch metrics and",
    "start": "2933899",
    "end": "2940839"
  },
  {
    "text": "elasticsearch and other third party tools you have the ability to easily extend those so if you run into any",
    "start": "2940839",
    "end": "2946599"
  },
  {
    "text": "debugging situations you can always add these things and there you can aggregate things and as we showed earlier and then",
    "start": "2946599",
    "end": "2952390"
  },
  {
    "text": "x-rays is a powerful tool that lets you visualize pinpoint and troubleshoot issues it lets you filter you can search",
    "start": "2952390",
    "end": "2958539"
  },
  {
    "text": "and then troubleshoot and fix issues as you once said it doesn't take a lot to get it integrate into your app and then",
    "start": "2958539",
    "end": "2964239"
  },
  {
    "text": "to be able to troubleshoot and fix issues as well alright thanks for your time here I hope you enjoy the rest of",
    "start": "2964239",
    "end": "2970089"
  },
  {
    "text": "your time here at even went thank you",
    "start": "2970089",
    "end": "2973919"
  }
]