[
  {
    "start": "0",
    "end": "16000"
  },
  {
    "text": "Welcome to, \n'This is My Architecture.'",
    "start": "6319",
    "end": "7974"
  },
  {
    "text": "My name is Ran, and joining me today,\nis Ariel from Sisense.",
    "start": "7974",
    "end": "11075"
  },
  {
    "text": "- Hi Ariel. \n- Hi Ran.",
    "start": "11075",
    "end": "12559"
  },
  {
    "text": "Ah, before we dive into this, \ntell us a bit about Sisense.",
    "start": "12560",
    "end": "15705"
  },
  {
    "text": "Sisense is a BI company... allowing you\nto see the data that you have.",
    "start": "15932",
    "end": "21584"
  },
  {
    "start": "16000",
    "end": "47000"
  },
  {
    "text": "Ah... that is coming from different sources.",
    "start": "22130",
    "end": "24283"
  },
  {
    "text": "Understanding the data,\nmodelizing the data,",
    "start": "24974",
    "end": "28391"
  },
  {
    "text": "and getting insights from that data,\nwhile maintaining the overall architecture.",
    "start": "28391",
    "end": "34979"
  },
  {
    "text": "OK. So, you have BI analysts \ngoing and using that dashboard,",
    "start": "35246",
    "end": "39072"
  },
  {
    "text": "having all kinds of different data in it.",
    "start": "39072",
    "end": "40961"
  },
  {
    "text": "Um... they need to configure those \ndifferent data sources, in order to see them.",
    "start": "41139",
    "end": "44778"
  },
  {
    "text": "How does that work behind the scenes?",
    "start": "44778",
    "end": "46252"
  },
  {
    "start": "47000",
    "end": "98000"
  },
  {
    "text": "So, you have the users,\nthat are seeing that information.",
    "start": "47161",
    "end": "53846"
  },
  {
    "text": "OK? Different type of graph.",
    "start": "54183",
    "end": "56555"
  },
  {
    "text": "But, a lot of data comes from \ndifferent types of sources.",
    "start": "56973",
    "end": "60323"
  },
  {
    "text": "OK? Whether those sources \nare in the customer side,",
    "start": "60812",
    "end": "64928"
  },
  {
    "text": "or web sources or different locations.",
    "start": "64928",
    "end": "68656"
  },
  {
    "text": "So, that can be, just a regular database,\ninside the organization,",
    "start": "68931",
    "end": "73010"
  },
  {
    "text": "that you want to get in,\ninside your Kubernetes clusters.",
    "start": "73010",
    "end": "77236"
  },
  {
    "text": "Or that can be a Redshift \nthat's running in the same VPC,",
    "start": "77458",
    "end": "81017"
  },
  {
    "text": "that you want to get in, that information.",
    "start": "81346",
    "end": "84148"
  },
  {
    "text": "You have the S3 buckets, \nthat you want to expose by Athena.",
    "start": "84605",
    "end": "88220"
  },
  {
    "text": "And, you want to expose that,\ncoming also, into your overall data.",
    "start": "88600",
    "end": "93544"
  },
  {
    "text": "So, you want to digest that data, OK?\nTo manipulate that data.",
    "start": "93784",
    "end": "98872"
  },
  {
    "start": "98000",
    "end": "145000"
  },
  {
    "text": "Understanding, that sometimes, \nit's a spelling mistake on the data.",
    "start": "98881",
    "end": "103894"
  },
  {
    "text": "You want to say that, \nthe Redshift column, EKS,",
    "start": "104158",
    "end": "107599"
  },
  {
    "text": "is the same as column EKS over here.",
    "start": "107599",
    "end": "111216"
  },
  {
    "text": "OK? They're coming from different sources.",
    "start": "111531",
    "end": "113869"
  },
  {
    "text": "So, you want to mesh all the data together,",
    "start": "114091",
    "end": "116367"
  },
  {
    "text": "and, allowing the user, at the end of the day,",
    "start": "116788",
    "end": "120523"
  },
  {
    "text": "getting the graph that this comes from--\nthis graph comes from here, here and here.",
    "start": "121050",
    "end": "126871"
  },
  {
    "text": "Doing that, you need the Sisense, \nall the ETL processes,",
    "start": "127896",
    "end": "131584"
  },
  {
    "text": "that digest the data and \nkeep it in a shell-storage solution.",
    "start": "132000",
    "end": "136203"
  },
  {
    "text": "OK. So, as a shell-storage solution,\nyou're using FSx for Lustre?",
    "start": "136449",
    "end": "141064"
  },
  {
    "text": "Ah, tell us a little bit about \nwhy you chose FSx for Lustre?",
    "start": "141064",
    "end": "143711"
  },
  {
    "text": "As you see, that we have \na lot of ingest comes in.",
    "start": "144206",
    "end": "147823"
  },
  {
    "start": "145000",
    "end": "172000"
  },
  {
    "text": "OK? A lot of manipulation comes in.",
    "start": "148063",
    "end": "150094"
  },
  {
    "text": "A lot of that  data needs to be kept...\n... in a very fast way.",
    "start": "150608",
    "end": "155542"
  },
  {
    "text": "A lot of our customers grab the data,\nsometimes in every hour,",
    "start": "155542",
    "end": "159537"
  },
  {
    "text": "sometimes every five minutes,\nand digest all the data.",
    "start": "159537",
    "end": "163532"
  },
  {
    "text": "And we need a highly available solution,",
    "start": "163532",
    "end": "165706"
  },
  {
    "text": "that can be very, very fast\n in responsiveness for keeping the data.",
    "start": "165706",
    "end": "172191"
  },
  {
    "text": "Another process, that gets\nthe data from the shell storage,",
    "start": "172830",
    "end": "176720"
  },
  {
    "text": "and be able \nto answer the different clients,",
    "start": "176720",
    "end": "180990"
  },
  {
    "text": "on complex queries that happens\nin a millisecond way.",
    "start": "181219",
    "end": "186161"
  },
  {
    "text": "The way that we do that, is,\nwe form that query service,",
    "start": "186542",
    "end": "191700"
  },
  {
    "text": "comes into the \ndifferent shell storage area,",
    "start": "192154",
    "end": "195888"
  },
  {
    "text": "memory-marked files, \nwe manipulate the data,",
    "start": "196548",
    "end": "200070"
  },
  {
    "text": "and get the responses \nto the different type of clients.",
    "start": "200533",
    "end": "205556"
  },
  {
    "text": "OK. So you can ingest the data at the backend,\neither to a FSx for Lustre file system,",
    "start": "205556",
    "end": "210443"
  },
  {
    "text": "or to Redshift? \nHow do you decide what to use and when?",
    "start": "210443",
    "end": "213301"
  },
  {
    "text": "So, even if the data is kind of a hot data,",
    "start": "213882",
    "end": "218401"
  },
  {
    "text": "that you need a lot of responses,\nvery frequent, in a milliseconds way.",
    "start": "218401",
    "end": "222430"
  },
  {
    "text": "We use our ElastiCube logic,\nthat is In-Memory Database Column Store.",
    "start": "222663",
    "end": "228512"
  },
  {
    "text": "OK? That mount directly from FSx for Lustre.",
    "start": "228860",
    "end": "232247"
  },
  {
    "text": "If the data is more as a warm data,\nmassive number, size of data,",
    "start": "232617",
    "end": "238059"
  },
  {
    "text": "terabyte of data, we use the Redshift  \nas the warehouse database.",
    "start": "238059",
    "end": "243521"
  },
  {
    "text": "And, we can query directly to the Redshift.",
    "start": "244032",
    "end": "247056"
  },
  {
    "text": "OK. So these workers are running \ninside containers on EKS clusters?",
    "start": "247644",
    "end": "251966"
  },
  {
    "text": "So, why did you choose \ncontainers in EKS for this workload?",
    "start": "251966",
    "end": "254611"
  },
  {
    "start": "255000",
    "end": "322000"
  },
  {
    "text": "We get a lot of automatic high availability,\n scale, resiliency, load balancing,",
    "start": "255814",
    "end": "261986"
  },
  {
    "text": "coming from the Kubernetes clusters.",
    "start": "261986",
    "end": "264029"
  },
  {
    "text": "Every workload that we do, \ncan be, sometimes small, can be huge,",
    "start": "264445",
    "end": "268417"
  },
  {
    "text": "and take a lot of resources.",
    "start": "268417",
    "end": "269839"
  },
  {
    "text": "Sometimes a lot of operations \nhappen in parallel for the ingest,",
    "start": "269839",
    "end": "273996"
  },
  {
    "text": "and also for the query, \neach one has its own timing,",
    "start": "273997",
    "end": "277516"
  },
  {
    "text": "and its own workload. OK?",
    "start": "277698",
    "end": "279698"
  },
  {
    "text": "During the day, comparing doing at night,\nso we do all kinds of manipulation.",
    "start": "279698",
    "end": "283281"
  },
  {
    "text": "In order to do that, \nin a very dynamically scalable solution,",
    "start": "283281",
    "end": "287065"
  },
  {
    "text": "we utilize Kubernetes, \nthe auto-scalers of the parts,",
    "start": "287315",
    "end": "290409"
  },
  {
    "text": "auto-scalers of the nodes, \neverything is automatically scaled.",
    "start": "290409",
    "end": "294376"
  },
  {
    "text": "Kubernetes sees the workload \nand can inject additional compute as needed.",
    "start": "294649",
    "end": "300656"
  },
  {
    "text": "The kind of-- be able \nto talk about big-data analytics,",
    "start": "301193",
    "end": "304662"
  },
  {
    "text": "while having automatically scaling, \nthat, we're gaining from the FSx for Lustre,",
    "start": "304956",
    "end": "310524"
  },
  {
    "text": "because we automatic-- very fast\nmount from the FSx for Lustre,",
    "start": "310524",
    "end": "314964"
  },
  {
    "text": "and can serve the data faster.",
    "start": "314964",
    "end": "316443"
  },
  {
    "text": "Great, so in this case,\nwhy did you choose FSx for Lustre,",
    "start": "316733",
    "end": "319855"
  },
  {
    "text": "and not some other type of file system?",
    "start": "319855",
    "end": "321988"
  },
  {
    "start": "322000",
    "end": "371000"
  },
  {
    "text": "The additional capability for the FSx--\nso first, FSx for Lustre,",
    "start": "323172",
    "end": "328727"
  },
  {
    "text": "is very, very fast responses,\nlow latencies, a lot of throughputs.",
    "start": "329208",
    "end": "335066"
  },
  {
    "text": "But, it also has capability to keep \nthe data in the S3 bucket.",
    "start": "335182",
    "end": "339985"
  },
  {
    "text": "So if you need a resiliency \nto bring up different systems,",
    "start": "339985",
    "end": "342727"
  },
  {
    "text": "you can just bring \nthe system from that bucket.",
    "start": "342727",
    "end": "346007"
  },
  {
    "text": "and you can back up the buckets,\nand you can replicate that.",
    "start": "346375",
    "end": "349313"
  },
  {
    "text": "So, it's a very--\nalso efficient for disaster recovery.",
    "start": "349313",
    "end": "353013"
  },
  {
    "text": "Great. Sounds good!",
    "start": "353352",
    "end": "354339"
  },
  {
    "text": "So, it sounds like you built \na really resilient, fault tolerant",
    "start": "354339",
    "end": "357382"
  },
  {
    "text": "also highly performative \nauto-scaling system.",
    "start": "357382",
    "end": "360324"
  },
  {
    "text": "Thank you very much for sharing.",
    "start": "360325",
    "end": "361617"
  },
  {
    "text": "Thank you Ran.",
    "start": "361617",
    "end": "362088"
  },
  {
    "text": "And, thank you for watching,\n'This is My Architecture.'",
    "start": "362437",
    "end": "364697"
  }
]