[
  {
    "text": "In this video, you’ll see how to \naccelerate modernization using",
    "start": "0",
    "end": "2892"
  },
  {
    "text": "AWS Proton and Refactor Spaces.",
    "start": "2892",
    "end": "5338"
  },
  {
    "text": "With this solution, you can simplify the \ncreation of refactoring environments,",
    "start": "5756",
    "end": "9239"
  },
  {
    "text": "helping teams create a scalable \nplatform that provides self-service",
    "start": "9239",
    "end": "12184"
  },
  {
    "text": "capabilities to developers.",
    "start": "12184",
    "end": "13808"
  },
  {
    "text": "To get started, let’s navigate to AWS \nMigration Hub and open Refactor Spaces.",
    "start": "15988",
    "end": "20387"
  },
  {
    "text": "Refactor Spaces is the starting \npoint for incremental application",
    "start": "25133",
    "end": "28081"
  },
  {
    "text": "refactoring to microservices in AWS.",
    "start": "28081",
    "end": "30633"
  },
  {
    "text": "Let’s create an environment.",
    "start": "31243",
    "end": "32557"
  },
  {
    "text": "A refactor environment is a container \nfor all the services and proxies that",
    "start": "33440",
    "end": "36690"
  },
  {
    "text": "will be created for an application.",
    "start": "36690",
    "end": "38245"
  },
  {
    "text": "Let’s give this environment a name.",
    "start": "40073",
    "end": "41452"
  },
  {
    "text": "Next, we’ll create an application, which\n we'll use to manage our existing application,",
    "start": "45396",
    "end": "49089"
  },
  {
    "text": "add new services, and incrementally \nroute traffic to the new services.",
    "start": "49089",
    "end": "52637"
  },
  {
    "text": "Let’s name our application “unistore.”",
    "start": "54785",
    "end": "56583"
  },
  {
    "text": "Next, we’ll select the \napplication’s proxy VPC.",
    "start": "58107",
    "end": "60847"
  },
  {
    "text": "The proxy lets the front-end application use \na single endpoint to contact multiple services.",
    "start": "61328",
    "end": "65725"
  },
  {
    "text": "If an application is made up of multiple \nAWS accounts, we can share the",
    "start": "67858",
    "end": "71230"
  },
  {
    "text": "refractor environment and its \napplication with other AWS principals.",
    "start": "71230",
    "end": "74699"
  },
  {
    "text": "We’re going to create everything\n in a single account, so let’s move",
    "start": "75212",
    "end": "77699"
  },
  {
    "text": "on and create the environment.",
    "start": "77699",
    "end": "79084"
  },
  {
    "text": "Now that our environment has been\n created, let’s create a new service.",
    "start": "88432",
    "end": "91396"
  },
  {
    "text": "We’ll select the environment \nand application we just created.",
    "start": "93000",
    "end": "95581"
  },
  {
    "text": "Let’s name this service “legacy.”",
    "start": "103053",
    "end": "104892"
  },
  {
    "text": "Next, we’ll select the VPC where the service \nresides, and then specify the endpoint.",
    "start": "108371",
    "end": "112407"
  },
  {
    "text": "We’ll also specify the \noptional health check endpoint.",
    "start": "117281",
    "end": "119784"
  },
  {
    "text": "Next, we’ll set this service as the default route \nfor the application and create the service.",
    "start": "123184",
    "end": "127332"
  },
  {
    "text": "The service and route have been successfully \nsubmitted and are being provisioned.",
    "start": "129865",
    "end": "132925"
  },
  {
    "text": "As shown in this diagram, Refactor \nSpaces will provision the infrastructure",
    "start": "135458",
    "end": "139000"
  },
  {
    "text": "with our Amazon API Gateway, Network \nLoad Balancer, and AWS Transit Gateway,",
    "start": "139001",
    "end": "143508"
  },
  {
    "text": "and all traffic will be \nrouted to our application.",
    "start": "143508",
    "end": "146009"
  },
  {
    "text": "Now let’s navigate to AWS \nProton to create a microservice.",
    "start": "149024",
    "end": "152282"
  },
  {
    "text": "AWS Proton is a fully managed delivery \nservice for deploying container and",
    "start": "154046",
    "end": "157959"
  },
  {
    "text": "serverless applications \nefficiently and consistently.",
    "start": "157959",
    "end": "160608"
  },
  {
    "text": "First, let’s create an environment template.",
    "start": "161249",
    "end": "163189"
  },
  {
    "text": "In this case, we’ll create a template \nfor provisioning new environments.",
    "start": "166236",
    "end": "169157"
  },
  {
    "text": "Let’s enter a name and display \nname, and then create the template.",
    "start": "170039",
    "end": "172802"
  },
  {
    "text": "Now that we’ve created the environment\ntemplate, let’s publish it so that it’s",
    "start": "180306",
    "end": "183236"
  },
  {
    "text": "visible to our developer teams.",
    "start": "183236",
    "end": "184875"
  },
  {
    "text": "The tooltip at the top of the screen gives \n us the option to create a service template.",
    "start": "186913",
    "end": "190532"
  },
  {
    "text": "Let’s do that now.",
    "start": "190533",
    "end": "191623"
  },
  {
    "text": "In this case, we’ll use a sample \ntemplate bundle as our source.",
    "start": "195936",
    "end": "198617"
  },
  {
    "text": "Next, we’ll provide a name and \ndisplay name for the template.",
    "start": "201631",
    "end": "204257"
  },
  {
    "text": "Let’s choose the environment \ntemplate that we created earlier",
    "start": "208378",
    "end": "210596"
  },
  {
    "text": "and create the service template.",
    "start": "210596",
    "end": "212062"
  },
  {
    "text": "Now let’s see how to create a Proton \nenvironment using our environment template.",
    "start": "218853",
    "end": "222252"
  },
  {
    "text": "We can choose AWS-managed \nprovisioning or self-managed provisioning.",
    "start": "228732",
    "end": "232200"
  },
  {
    "text": "In this case, we’ll choose the first option.",
    "start": "232873",
    "end": "234513"
  },
  {
    "text": "For simplicity, we’ll use \nthe same AWS account.",
    "start": "234945",
    "end": "237465"
  },
  {
    "text": "Let’s name the environment.",
    "start": "241137",
    "end": "242295"
  },
  {
    "text": "Next, we’ll choose an existing \nservice role in our account.",
    "start": "246816",
    "end": "249433"
  },
  {
    "text": "We can configure custom settings.",
    "start": "255110",
    "end": "256868"
  },
  {
    "text": "In this case, we’ll leave the default values.",
    "start": "256869",
    "end": "258971"
  },
  {
    "text": "Now let’s create the environment.",
    "start": "262404",
    "end": "263814"
  },
  {
    "text": "The deployment has succeeded.",
    "start": "266828",
    "end": "268031"
  },
  {
    "text": "Now let’s create a service.",
    "start": "268207",
    "end": "269474"
  },
  {
    "text": "We’ll use the service \ntemplate we created earlier.",
    "start": "274647",
    "end": "276718"
  },
  {
    "text": "Let’s name the service.",
    "start": "279000",
    "end": "280053"
  },
  {
    "text": "Next, let’s choose a repository connection.",
    "start": "283067",
    "end": "285233"
  },
  {
    "text": "For demonstration purposes, \nwe’ll select a CodeStar connection",
    "start": "286180",
    "end": "288951"
  },
  {
    "text": "that has already been created.",
    "start": "288951",
    "end": "290224"
  },
  {
    "text": "Next, we’ll choose a repository and a branch.",
    "start": "291171",
    "end": "293447"
  },
  {
    "text": "Next, let’s provide a name and \nenvironment for the new service instance.",
    "start": "302924",
    "end": "306268"
  },
  {
    "text": "We can add up to nine instances.",
    "start": "311864",
    "end": "313559"
  },
  {
    "text": "This diagram shows how AWS \nProton deploys the service.",
    "start": "318706",
    "end": "322001"
  },
  {
    "text": "Let’s deploy it now.",
    "start": "322418",
    "end": "323460"
  },
  {
    "text": "The service is now active and the \npipeline has been provisioned.",
    "start": "325416",
    "end": "328115"
  },
  {
    "text": "The pipeline run is in progress.",
    "start": "328404",
    "end": "330070"
  },
  {
    "text": "We can also see that the service instance\nhas a deployment status of Succeeded.",
    "start": "330969",
    "end": "334492"
  },
  {
    "text": "Let’s navigate to the service instance.",
    "start": "335069",
    "end": "336785"
  },
  {
    "text": "We’ll copy the service endpoint so \nwe can use it to point this service",
    "start": "346148",
    "end": "348913"
  },
  {
    "text": "to a microservice in Refactor Spaces.",
    "start": "348913",
    "end": "351000"
  },
  {
    "text": "Now let’s navigate to Refactor \nSpaces to create a service.",
    "start": "353421",
    "end": "356166"
  },
  {
    "text": "We’ll select the environment and \napplication we created earlier.",
    "start": "364327",
    "end": "367029"
  },
  {
    "text": "Next, we’ll name the service.",
    "start": "374244",
    "end": "375666"
  },
  {
    "text": "Let’s select the new VPC we created and paste \nin the service endpoint we copied earlier.",
    "start": "379643",
    "end": "383800"
  },
  {
    "text": "Next, we’ll enter a source path to the route.",
    "start": "387888",
    "end": "390000"
  },
  {
    "text": "We can choose to include all child paths.",
    "start": "392822",
    "end": "394824"
  },
  {
    "text": "In this case, we’ll just start with GET.",
    "start": "395787",
    "end": "397811"
  },
  {
    "text": "Now let’s create the service.",
    "start": "403865",
    "end": "405328"
  },
  {
    "text": "Our service has been created.",
    "start": "406979",
    "end": "408460"
  },
  {
    "text": "Once the route finishes provisioning, we \ncan use it to send traffic to the service.",
    "start": "408717",
    "end": "412324"
  },
  {
    "text": "You’ve just seen how to accelerate \nmodernization using AWS Proton",
    "start": "415082",
    "end": "418213"
  },
  {
    "text": "and Refactor Spaces.",
    "start": "418213",
    "end": "419613"
  },
  {
    "text": "You can learn more about this topic in \nthe description and links for this video.",
    "start": "420575",
    "end": "423572"
  },
  {
    "text": "Thanks for watching. Now it’s your turn to try.",
    "start": "423796",
    "end": "425785"
  }
]