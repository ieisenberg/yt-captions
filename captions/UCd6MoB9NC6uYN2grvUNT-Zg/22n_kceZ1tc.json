[
  {
    "start": "0",
    "end": "90000"
  },
  {
    "text": "[Music] hello i'm rob hicarita and i'm an",
    "start": "90",
    "end": "7200"
  },
  {
    "text": "enterprise support lead at aws and i'm based out of austin texas welcome to aws supports you where we share best",
    "start": "7200",
    "end": "13920"
  },
  {
    "text": "practices and troubleshooting tips from aws support and joining me today is tanya pahuja and shayton suri from aws",
    "start": "13920",
    "end": "20880"
  },
  {
    "text": "support can you give us a quick introduction tanya and then shayden thanks rob hi everybody this is tanya",
    "start": "20880",
    "end": "28080"
  },
  {
    "text": "pahucha i'm a technical account manager here at aws based out of delhi india",
    "start": "28080",
    "end": "33600"
  },
  {
    "text": "i'm really excited to be a part of this show today where we are going to discuss on amazon dms and manage databases thank",
    "start": "33600",
    "end": "40320"
  },
  {
    "text": "you hi everyone this is chetan so i am one of the senior technical account managers",
    "start": "40320",
    "end": "46239"
  },
  {
    "text": "based out of singapore and part of the enterprise support team and uh excited to be here you know between all of you",
    "start": "46239",
    "end": "52640"
  },
  {
    "text": "yeah thanks kanye and thanks jay especially thanks for joining us from across the globe today so today we'll be talking",
    "start": "52640",
    "end": "59120"
  },
  {
    "text": "about using aws database migration service to migrate your databases to amazon aurora we'll specifically be",
    "start": "59120",
    "end": "65518"
  },
  {
    "text": "focusing on some of the use cases for migrating to aws managed databases leveraging the database migration",
    "start": "65519",
    "end": "71200"
  },
  {
    "text": "service before we get into the details of the show today a quick note to the attendees online please feel free to use the chat",
    "start": "71200",
    "end": "78000"
  },
  {
    "text": "window on the right hand side of your screen to ask your questions and share your thoughts throughout the episode we",
    "start": "78000",
    "end": "83280"
  },
  {
    "text": "really look forward forward to hearing from you today and interacting with you so uh tanya can you uh walk us through",
    "start": "83280",
    "end": "88479"
  },
  {
    "text": "we're going to be talking about today sure so everyone we are going to discuss on",
    "start": "88479",
    "end": "95840"
  },
  {
    "start": "90000",
    "end": "130000"
  },
  {
    "text": "the advantages and benefits of moving to manage databases we would also talk",
    "start": "95840",
    "end": "100880"
  },
  {
    "text": "about aws migration tooling and then we would discuss around what is the dms",
    "start": "100880",
    "end": "106399"
  },
  {
    "text": "process and what are some of the supported source and targets we would also dig deeper into different",
    "start": "106399",
    "end": "112320"
  },
  {
    "text": "use cases of moving to manage databases and then we would talk little more about",
    "start": "112320",
    "end": "117840"
  },
  {
    "text": "what is amazon aurora and then at the end we will do a quick walkthrough of migrating the self-managed databases",
    "start": "117840",
    "end": "125200"
  },
  {
    "text": "running on ec2 or on on-prem to amazon aurora",
    "start": "125200",
    "end": "130479"
  },
  {
    "start": "130000",
    "end": "250000"
  },
  {
    "text": "so here in this slide uh self-managing uh databases could be quite uh you know",
    "start": "132480",
    "end": "138400"
  },
  {
    "text": "time complexing tedious and expensive so for many companies database management",
    "start": "138400",
    "end": "144000"
  },
  {
    "text": "is undifferentiated heavy lifting your data is one of the most valuable",
    "start": "144000",
    "end": "149360"
  },
  {
    "text": "assets your company owns but the management of your database is not where you provide value",
    "start": "149360",
    "end": "155599"
  },
  {
    "text": "so for customers running legacy databases and analytics infrastructure on-premise or all self-managed on ec2",
    "start": "155599",
    "end": "164560"
  },
  {
    "text": "provisioning operating scaling and managing databases data lakes search",
    "start": "164560",
    "end": "170800"
  },
  {
    "text": "streaming services could be tedious time consuming and expensive",
    "start": "170800",
    "end": "176000"
  },
  {
    "text": "customer at times do mention uh you know they worry about operational efficiency",
    "start": "176000",
    "end": "181599"
  },
  {
    "text": "such as hardware and software installations or configurations patchings backups",
    "start": "181599",
    "end": "188400"
  },
  {
    "text": "even about performance and availability issues so the scalability issues are also very",
    "start": "188400",
    "end": "194319"
  },
  {
    "text": "common such as you know capacity planning and scaling of clusters for compute and storage",
    "start": "194319",
    "end": "200480"
  },
  {
    "text": "as well as security which is job zero and the compliance issues can also be",
    "start": "200480",
    "end": "205599"
  },
  {
    "text": "faced while running the databases on you know ec2 self-managed or on-prem",
    "start": "205599",
    "end": "211680"
  },
  {
    "text": "so customers uh want to spend their time innovating and building new applications",
    "start": "211680",
    "end": "217200"
  },
  {
    "text": "and not managing the infrastructure and thus the aws managed databases",
    "start": "217200",
    "end": "222640"
  },
  {
    "text": "handle all the fundamental operations you get patching and minor upgrades",
    "start": "222640",
    "end": "228400"
  },
  {
    "text": "without downtime and the automated backups failover high availability durability and also support",
    "start": "228400",
    "end": "235760"
  },
  {
    "text": "via aws support you can always reach out for any issues that you face and thus we really want to allow your",
    "start": "235760",
    "end": "242640"
  },
  {
    "text": "developers or your teams to you know focus on the features that matters for your business",
    "start": "242640",
    "end": "249200"
  },
  {
    "start": "250000",
    "end": "425000"
  },
  {
    "text": "now here uh moving to fully managed databases so the most straightforward",
    "start": "251680",
    "end": "257280"
  },
  {
    "text": "and simple solution for many customers who are struggling to maintain their own relational databases",
    "start": "257280",
    "end": "263520"
  },
  {
    "text": "is a move to manage database service the first factor to consider when",
    "start": "263520",
    "end": "268560"
  },
  {
    "text": "choosing a managed database is the database type so in this slide we are going to discuss what are the different",
    "start": "268560",
    "end": "274880"
  },
  {
    "text": "options that you have while you decide to move from self-managed or on-prem databases to manage databases on aws",
    "start": "274880",
    "end": "282880"
  },
  {
    "text": "and let me tell you in most the cases these customers can migrate the workloads and applications to manage",
    "start": "282880",
    "end": "289040"
  },
  {
    "text": "service without needing to re-architect the applications and thus your teams can",
    "start": "289040",
    "end": "294720"
  },
  {
    "text": "continue to leverage these same db skills so if you're using a relational database",
    "start": "294720",
    "end": "300000"
  },
  {
    "text": "as you can see here on the left hand side of the slide amazon rds supports different relational",
    "start": "300000",
    "end": "305840"
  },
  {
    "text": "database engines so this could be open source options such as mysql and postgresql",
    "start": "305840",
    "end": "314400"
  },
  {
    "text": "or the commercial options such as microsoft sql server or the oracle",
    "start": "314400",
    "end": "319440"
  },
  {
    "text": "database then if you're using a non-relational database you want to go ahead with those",
    "start": "319440",
    "end": "325120"
  },
  {
    "text": "then aws offers multiple options there as well like amazon documentdb is a",
    "start": "325120",
    "end": "330639"
  },
  {
    "text": "fully managed mongodb compatible document database we also have options if amazon elastic",
    "start": "330639",
    "end": "338080"
  },
  {
    "text": "cache that provides supports for both redis and memcache databases",
    "start": "338080",
    "end": "343360"
  },
  {
    "text": "so with this variety of database types available you can find the right managed",
    "start": "343360",
    "end": "348560"
  },
  {
    "text": "database for you on aws so i'll take a pause here just to check",
    "start": "348560",
    "end": "354560"
  },
  {
    "text": "with rob rob do we have any questions here from the audience before i hand it over to chetan",
    "start": "354560",
    "end": "361120"
  },
  {
    "text": "hi tanya yes we do have one question from the audience so far today here from aws and nishka",
    "start": "361360",
    "end": "368560"
  },
  {
    "text": "what do you mean when you say manage services in aws what's different between serverless and managed or fully managed",
    "start": "368560",
    "end": "375440"
  },
  {
    "text": "services be able to provide some info on that sure so when we say manage database",
    "start": "375440",
    "end": "381280"
  },
  {
    "text": "service uh managed services means you don't have to care about provisioning or",
    "start": "381280",
    "end": "386560"
  },
  {
    "text": "you know the downgrades upgrade versions of your services it is something which is managed by aws in whole you just have",
    "start": "386560",
    "end": "394080"
  },
  {
    "text": "to start using it and aws will take care of all these provisioning scaling compute capacities etc and for more",
    "start": "394080",
    "end": "401600"
  },
  {
    "text": "information we can also share the links about aws managed databases and other managed services that we have that can",
    "start": "401600",
    "end": "408080"
  },
  {
    "text": "provide you more idea around what a managed services does",
    "start": "408080",
    "end": "413120"
  },
  {
    "text": "great thanks honey back to you great so i will hand it over to chetan",
    "start": "415759",
    "end": "421919"
  },
  {
    "text": "here to talk about the next topic which is on the migration tooling",
    "start": "421919",
    "end": "427120"
  },
  {
    "start": "425000",
    "end": "572000"
  },
  {
    "text": "okay thanks sanya so uh in this section we'll talk about uh the two key uh you",
    "start": "427120",
    "end": "433120"
  },
  {
    "text": "know toolings that we use for database migration one is the schema conversion tool",
    "start": "433120",
    "end": "438479"
  },
  {
    "text": "uh the other one is the database migration service so uh suppose if you are trying to move",
    "start": "438479",
    "end": "443840"
  },
  {
    "text": "your databases from different db engines right so suppose you're trying to move from oracle to amazon aurora maybe",
    "start": "443840",
    "end": "451120"
  },
  {
    "text": "amazon or repository sql and uh you know and you want to move your existing schema from oracle to amazon error right",
    "start": "451120",
    "end": "457840"
  },
  {
    "text": "so something which is compatible with the target one so uh so basically the sct which is",
    "start": "457840",
    "end": "462880"
  },
  {
    "text": "schema conversion tool helps you to convert the existing db schema from one db engine to the another",
    "start": "462880",
    "end": "470080"
  },
  {
    "text": "now uh you know it actually provides you interface to convert the source db schema to one that is more compatible to",
    "start": "470080",
    "end": "476400"
  },
  {
    "text": "the uh target tv right and once you convert this uh you know db schema uh it's not that you only use it",
    "start": "476400",
    "end": "483440"
  },
  {
    "text": "with some of the managed services managed database services like rds but you can also use this uh converted",
    "start": "483440",
    "end": "489440"
  },
  {
    "text": "schema on a database that's running on top of an ec2 instance uh the next one is the database",
    "start": "489440",
    "end": "494879"
  },
  {
    "text": "migration service so this is a service to migrate the data into aws cloud or",
    "start": "494879",
    "end": "500639"
  },
  {
    "text": "between a combination of on-prem and the cloud setups so this makes the whole uh migration",
    "start": "500639",
    "end": "506319"
  },
  {
    "text": "easy uh for relation databases for data warehouses and even for the nosql databases as well",
    "start": "506319",
    "end": "512479"
  },
  {
    "text": "uh one of the key features in dms is the full load or the cdc so suppose you have a database and you want to exact uh same",
    "start": "512479",
    "end": "520080"
  },
  {
    "text": "you know uh you know same state of that database in your target you can use the full load as you know as an initial full",
    "start": "520080",
    "end": "526720"
  },
  {
    "text": "load and then uh if you want to keep your source and uh target into sync then you can use the cdc option as well which",
    "start": "526720",
    "end": "533519"
  },
  {
    "text": "is you know change data capture so to so so just to give you a high level overview how this database",
    "start": "533519",
    "end": "539279"
  },
  {
    "text": "migration will look like uh you have a replication instance within dms so this replication instance is connected to a",
    "start": "539279",
    "end": "545839"
  },
  {
    "text": "source and this also connected to a target and then you create uh you know migration tasks uh in dms to migrate the",
    "start": "545839",
    "end": "552959"
  },
  {
    "text": "actual data from source to the target using the replication instance and how both of them are related so if",
    "start": "552959",
    "end": "558640"
  },
  {
    "text": "you again if you're using the two database engines which are actually different you can use schema conversion",
    "start": "558640",
    "end": "564640"
  },
  {
    "text": "tool to convert your schema first and then you can use dms to migrate the tv itself",
    "start": "564640",
    "end": "572000"
  },
  {
    "start": "572000",
    "end": "885000"
  },
  {
    "text": "okay let's talk about some of the key features of dms so uh you know dms so basically security is always a",
    "start": "572800",
    "end": "580160"
  },
  {
    "text": "priority in aws so we provide you mechanisms we provide you you know options like im policies uh so that you",
    "start": "580160",
    "end": "587279"
  },
  {
    "text": "can assign permissions to your aws dms resources so what it means is that you can have",
    "start": "587279",
    "end": "593040"
  },
  {
    "text": "im2 you know create control that who creates who describes or who modify or",
    "start": "593040",
    "end": "599360"
  },
  {
    "text": "who deletes the database instances and dms uses ssl which is secure socket",
    "start": "599360",
    "end": "604959"
  },
  {
    "text": "layer uh to connect to your endpoint connections to ensure that you know whatever data is flowing from your",
    "start": "604959",
    "end": "610240"
  },
  {
    "text": "source to your target why the replication instance is actually encrypted and then you can associate the security",
    "start": "610240",
    "end": "616560"
  },
  {
    "text": "groups as well uh you know with the replication instance which provides you a secure communication uh you know from",
    "start": "616560",
    "end": "623600"
  },
  {
    "text": "the replication instance to the source and the target endpoints uh one of the other features is",
    "start": "623600",
    "end": "629279"
  },
  {
    "text": "assessments right so basically you can run pre-migration assessments so these assumptions so you can you know identify",
    "start": "629279",
    "end": "636240"
  },
  {
    "text": "problems uh that might occur uh when the actual migration task will run",
    "start": "636240",
    "end": "641279"
  },
  {
    "text": "so uh you can check the migration task before the launch itself and it alerts you uh for any potential issues maybe",
    "start": "641279",
    "end": "648560"
  },
  {
    "text": "some unsupported data types right and it actually you know prevents any",
    "start": "648560",
    "end": "653839"
  },
  {
    "text": "runtime migration failures when the actual migration is happening the next feature is validate right so",
    "start": "653839",
    "end": "660480"
  },
  {
    "text": "basically you can have the the data validation so once your migration is completed you can validate",
    "start": "660480",
    "end": "667680"
  },
  {
    "text": "if the data is migrated properly or not so it compares the row and source with",
    "start": "667680",
    "end": "673760"
  },
  {
    "text": "the corresponding row in the target and then verifies that whether the the",
    "start": "673760",
    "end": "678800"
  },
  {
    "text": "whether the data is uh actually migrated properly or not and it reports if there",
    "start": "678800",
    "end": "684000"
  },
  {
    "text": "is any mismatch found now this validates this validation feature is actually available for both",
    "start": "684000",
    "end": "689760"
  },
  {
    "text": "that is full load as well as cdc uh that is the change data capture and it also works across the homogeneous and the",
    "start": "689760",
    "end": "695760"
  },
  {
    "text": "heterogeneous migrations so we'll cover in the next section what other homogeneous and heterogeneous migrations are",
    "start": "695760",
    "end": "701600"
  },
  {
    "text": "uh now one of the one of the very important features is monitoring right so you want to always look that you know what's this",
    "start": "701600",
    "end": "707920"
  },
  {
    "text": "what what's the status of your task how the migration is actually going on so aws provides you tools it provides you",
    "start": "707920",
    "end": "714720"
  },
  {
    "text": "mechanisms to monitor dms tasks and resources so dms events and notifications you can",
    "start": "714720",
    "end": "721360"
  },
  {
    "text": "create uh you know sms notifications on top of this and you and and whenever you know",
    "start": "721360",
    "end": "726800"
  },
  {
    "text": "like whenever creation or deletion of a replication instance happen you can be notified with the help of sms",
    "start": "726800",
    "end": "732720"
  },
  {
    "text": "notifications uh you know and you would also like to have a notification whenever task has",
    "start": "732720",
    "end": "738959"
  },
  {
    "text": "changes right so basically if your task is in created states or whether it's in a running state or whether it's in a",
    "start": "738959",
    "end": "744240"
  },
  {
    "text": "stop state you can be notified with the help of notifications uh whenever the",
    "start": "744240",
    "end": "749760"
  },
  {
    "text": "task status changes it also has an integration with amazon cloud watch what it means is that you",
    "start": "749760",
    "end": "755200"
  },
  {
    "text": "know you can have notifications when the state is changed over uh over a",
    "start": "755200",
    "end": "760800"
  },
  {
    "text": "specified period of time right then you can be notified for those things as well",
    "start": "760800",
    "end": "766399"
  },
  {
    "text": "now customers are always looking for uh some low cost mechanisms to migrate databases right and dms fits in the use",
    "start": "766399",
    "end": "773519"
  },
  {
    "text": "case uh perfectly so basically dms provides you uh you know options to run on on-demand instances and you just pay",
    "start": "773519",
    "end": "781200"
  },
  {
    "text": "by the r right so which means that there are no long-term commitments and it provides you low cost mechanisms to",
    "start": "781200",
    "end": "786800"
  },
  {
    "text": "migrate your existing databases so there are no complexities of planning purchasing or you know maintaining the",
    "start": "786800",
    "end": "793360"
  },
  {
    "text": "hardwares and it actually makes the whole entire process quick and inexpensive for you",
    "start": "793360",
    "end": "800639"
  },
  {
    "text": "again one of the very important features is snowball integration so you know so you can use aws dms",
    "start": "800639",
    "end": "807920"
  },
  {
    "text": "to with snowball edge to migrate the databases more quickly so some of the",
    "start": "807920",
    "end": "813680"
  },
  {
    "text": "use cases where customers use uh snowball integration could be you know when you have a database which is very",
    "start": "813680",
    "end": "819440"
  },
  {
    "text": "large in size so it could be maybe over five terabytes and when you have many databases to",
    "start": "819440",
    "end": "825440"
  },
  {
    "text": "migrate at once or maybe the network that you have on your own print side it's not as uh it is actually very slow",
    "start": "825440",
    "end": "833440"
  },
  {
    "text": "network right so so so dmx dms uh you know integration with snowball edge fits",
    "start": "833440",
    "end": "839360"
  },
  {
    "text": "into this use case to migrate the large databases also",
    "start": "839360",
    "end": "844480"
  },
  {
    "text": "now uh before i move on to the next slide uh rob just wanted to check do we have any questions at this point of time",
    "start": "844480",
    "end": "852320"
  },
  {
    "text": "hey yeah thank you for uh asking so we do have a question from tomi242 welcome back to the show um does",
    "start": "852639",
    "end": "860560"
  },
  {
    "text": "sct also transfer data uh yes so sct can also transfer data so",
    "start": "860560",
    "end": "867040"
  },
  {
    "text": "basically the use case can be you know if you have a large database houses you can use a city whereas uh",
    "start": "867040",
    "end": "873120"
  },
  {
    "text": "dmso is more suitable for uh you know the databases which are under uh 10 terabytes of storage yeah",
    "start": "873120",
    "end": "880480"
  },
  {
    "text": "great thanks appreciate that back over here okay uh now let's look at uh the",
    "start": "880480",
    "end": "887680"
  },
  {
    "start": "885000",
    "end": "1020000"
  },
  {
    "text": "differences between the homogeneous and the heterogeneous migrations so what so so the option that you see on the top is",
    "start": "887680",
    "end": "893120"
  },
  {
    "text": "where uh you know uh you know i'm actually trying to move from oracle to oracle database so the article on the",
    "start": "893120",
    "end": "899519"
  },
  {
    "text": "left can be running you know on on my on-prem database and the one on the right could be on aws",
    "start": "899519",
    "end": "906000"
  },
  {
    "text": "so the database engine uh in this use case you know remains the same so which means",
    "start": "906000",
    "end": "911760"
  },
  {
    "text": "this is one of the homogeneous use cases right so where the two databases which have the same engine is called as the",
    "start": "911760",
    "end": "917600"
  },
  {
    "text": "homogeneous migrations whereas if you look at the second use case where i'm trying to move my uh sql server to",
    "start": "917600",
    "end": "924160"
  },
  {
    "text": "amazon aurora so this is one of the heterogeneous use case so dms supports",
    "start": "924160",
    "end": "929199"
  },
  {
    "text": "both which means it supports if you have the two databases with the same engines or if you have the two different",
    "start": "929199",
    "end": "934800"
  },
  {
    "text": "database engines uh for the migration as source and the target now uh there are certain conditions that",
    "start": "934800",
    "end": "941680"
  },
  {
    "text": "uh apply and which are very important to remember is that when you use aws dms either the source",
    "start": "941680",
    "end": "948240"
  },
  {
    "text": "or target must be an aws service for example uh you can use aws dms to",
    "start": "948240",
    "end": "954880"
  },
  {
    "text": "migrate to aws from an on-premise setup or you can uh",
    "start": "954880",
    "end": "960079"
  },
  {
    "text": "or probably you can you know move to an on-premise setup from aws",
    "start": "960079",
    "end": "965440"
  },
  {
    "text": "especially for the second use case again you can use the schema conversion tool so basically if you have a homogeneous",
    "start": "965440",
    "end": "970560"
  },
  {
    "text": "migration use case you can use engine's native tools to export and import the",
    "start": "970560",
    "end": "975600"
  },
  {
    "text": "schema and whereas if you have the heterogeneous use cases you can use schema conversion tool to convert the",
    "start": "975600",
    "end": "982160"
  },
  {
    "text": "schema itself now if you look at the last use case which is you know",
    "start": "982160",
    "end": "987199"
  },
  {
    "text": "customers will try to move their databases to amazon s3 amazon s3 is the object storage in aws",
    "start": "987199",
    "end": "994160"
  },
  {
    "text": "uh you know you can even migrate your databases to s3 as well so when you use s3 both cdc and the full load are",
    "start": "994160",
    "end": "1001600"
  },
  {
    "text": "supported and the data is written in the default format which is",
    "start": "1001600",
    "end": "1006800"
  },
  {
    "text": "csv but for more compact storage use cases or maybe for more uh faster uh query",
    "start": "1006800",
    "end": "1013040"
  },
  {
    "text": "options you can use uh you know uh apache park as also one of the formats to store data on s3",
    "start": "1013040",
    "end": "1021120"
  },
  {
    "start": "1020000",
    "end": "1272000"
  },
  {
    "text": "okay so let's look at this how a typical data migration looks like uh with the help of dms right so if you see that i",
    "start": "1022160",
    "end": "1028558"
  },
  {
    "text": "have application users which are connected to uh my on-premise data center and there's a database running",
    "start": "1028559",
    "end": "1034480"
  },
  {
    "text": "there and now this on-premise data center is connected to my aws uh region",
    "start": "1034480",
    "end": "1039600"
  },
  {
    "text": "in to my plus account using uh one of the you know one of the vpn tunnels",
    "start": "1039600",
    "end": "1045120"
  },
  {
    "text": "and i have a target database in my aws environment where i finally want my",
    "start": "1045120",
    "end": "1050799"
  },
  {
    "text": "application users to move to right so the first thing that i do is that i start a replication instance",
    "start": "1050799",
    "end": "1057120"
  },
  {
    "text": "so replication instance connects to the source database uh reads the source data and loads the",
    "start": "1057120",
    "end": "1063760"
  },
  {
    "text": "data into the target data store now you can also use the multi-easy options for replication instance so by",
    "start": "1063760",
    "end": "1070640"
  },
  {
    "text": "using a replication instance you can get the high availability and the failover support with multi-ac deployment when",
    "start": "1070640",
    "end": "1077600"
  },
  {
    "text": "you choose the multi-easy options to set up within the replication instance itself now if you're familiar with services",
    "start": "1077600",
    "end": "1084080"
  },
  {
    "text": "like uh you know ec2 rds you know when you spin up a new instance you select the instance type right same",
    "start": "1084080",
    "end": "1090400"
  },
  {
    "text": "happens with with dms as well so you can choose from the variety of you know different",
    "start": "1090400",
    "end": "1095679"
  },
  {
    "text": "instance types for example d3 so which are more general purpose instance type you can also use c5s which deliver cost",
    "start": "1095679",
    "end": "1103280"
  },
  {
    "text": "effective and high performance at a low price or you can use r5s so r5s are the next-gen memory",
    "start": "1103280",
    "end": "1109760"
  },
  {
    "text": "optimized instance types that you can use for these use cases the next thing that you do is that you",
    "start": "1109760",
    "end": "1115440"
  },
  {
    "text": "connect to a source and the target so basically you create the sources and the target endpoints and you connect to them",
    "start": "1115440",
    "end": "1121200"
  },
  {
    "text": "using your replication instance so you can create the source and the target endpoints uh while creating the",
    "start": "1121200",
    "end": "1127200"
  },
  {
    "text": "replication instance or you can create them when the replication is created",
    "start": "1127200",
    "end": "1132400"
  },
  {
    "text": "uh and then uh the you know the source and the target can be amazon ec2",
    "start": "1132400",
    "end": "1137520"
  },
  {
    "text": "instance it can be a amazon rds db instance or it can be one of your on",
    "start": "1137520",
    "end": "1142559"
  },
  {
    "text": "premise database as well again one point like one thing to remember is that the like one of the",
    "start": "1142559",
    "end": "1147840"
  },
  {
    "text": "endpoints should be an aws service means that you can't use uh aws dms to",
    "start": "1147840",
    "end": "1154160"
  },
  {
    "text": "move from uh uh to move from an on-premise database to another on-premise database",
    "start": "1154160",
    "end": "1159520"
  },
  {
    "text": "now when you create these endpoints you provide certain options like you provide the endpoint type whether that's the source or the target you provide what's",
    "start": "1159520",
    "end": "1166720"
  },
  {
    "text": "the db engine uh you provide the database name you provide the username and the password as well so basically this credentials",
    "start": "1166720",
    "end": "1172880"
  },
  {
    "text": "should have permissions to allow the database migrations from the source from the source and the target to",
    "start": "1172880",
    "end": "1179120"
  },
  {
    "text": "the target db as well now you can also optionally test the you know endpoint connections whether your",
    "start": "1179120",
    "end": "1184960"
  },
  {
    "text": "replication instance is able to connect to the source and the target or not you can do that",
    "start": "1184960",
    "end": "1190960"
  },
  {
    "text": "uh as a next step what you do is that you create tasks so basically uh you know aws dms task is where all the work",
    "start": "1190960",
    "end": "1198640"
  },
  {
    "text": "actually happens so you specify what tables views and",
    "start": "1198640",
    "end": "1203760"
  },
  {
    "text": "schemas to use for your migration so before you create a task make sure",
    "start": "1203760",
    "end": "1209760"
  },
  {
    "text": "that you you know create a source endpoint target endpoint under the application instance itself",
    "start": "1209760",
    "end": "1215760"
  },
  {
    "text": "and then you run the task and let the migration happen from your source to the arcade endpoint",
    "start": "1215760",
    "end": "1222000"
  },
  {
    "text": "uh so uh like once the migration completes you can always run data",
    "start": "1222240",
    "end": "1227600"
  },
  {
    "text": "validation so validation compares you know uh like like whether your source and the target",
    "start": "1227600",
    "end": "1233440"
  },
  {
    "text": "are in sync or not and and you can also use data validation for the incremental changes as well",
    "start": "1233440",
    "end": "1240799"
  },
  {
    "text": "and uh cdc one of the options that again you can use so if you want to keep your source and the target in sync you can",
    "start": "1240799",
    "end": "1246400"
  },
  {
    "text": "use change data capture as an option here and finally when i think it's the right time i can",
    "start": "1246400",
    "end": "1253200"
  },
  {
    "text": "move my use application users to my new database which is in aws environment",
    "start": "1253200",
    "end": "1258880"
  },
  {
    "text": "so i just switch my applications to the new db and move my connections to the",
    "start": "1258880",
    "end": "1264080"
  },
  {
    "text": "new target database so this is how typically a database migration end up just with help with the help of dms",
    "start": "1264080",
    "end": "1270159"
  },
  {
    "text": "looks like okay let's look at some of these uh you",
    "start": "1270159",
    "end": "1275200"
  },
  {
    "start": "1272000",
    "end": "1345000"
  },
  {
    "text": "know supported source and the targets so these are some of the uh you know popular source and targets that aws dms",
    "start": "1275200",
    "end": "1281520"
  },
  {
    "text": "supports so dms and uh sct that's a schema conversion tool uh supports a range of",
    "start": "1281520",
    "end": "1288640"
  },
  {
    "text": "uh relational nosql analytics and data warehouse source and the targets",
    "start": "1288640",
    "end": "1294240"
  },
  {
    "text": "so it can use uh many of the popular db engines at source such as possible sql",
    "start": "1294240",
    "end": "1300159"
  },
  {
    "text": "mysql sql server azure sql and even s3 right",
    "start": "1300159",
    "end": "1306080"
  },
  {
    "text": "uh so the database source can be a self-managed engine running on top of an ec2 instance it can be an on-premise",
    "start": "1306080",
    "end": "1313280"
  },
  {
    "text": "database it can be a rds instance or it i mean it can be a data that's on top of s3 bucket",
    "start": "1313280",
    "end": "1319840"
  },
  {
    "text": "and as a source uh you know the targets all for for targets as well dms supports",
    "start": "1319840",
    "end": "1325520"
  },
  {
    "text": "popular databases as targets and the targets can be again amazonic instances",
    "start": "1325520",
    "end": "1330559"
  },
  {
    "text": "or rds or you have on-premise setups and we are constantly adding new database engines uh to the support as",
    "start": "1330559",
    "end": "1337039"
  },
  {
    "text": "well now uh before we move on to the next section uh rob do we have any questions",
    "start": "1337039",
    "end": "1342240"
  },
  {
    "text": "from the audience at this point of time hey thanks shane yes we do have a couple",
    "start": "1342240",
    "end": "1347520"
  },
  {
    "start": "1345000",
    "end": "1400000"
  },
  {
    "text": "questions that came in i'm just going to go with one right now and i'll probably follow up some more here a second uh really they wanted to know as far as",
    "start": "1347520",
    "end": "1354720"
  },
  {
    "text": "the migrating dbs uh is it possible to do from other cloud service providers like azure and gs and gcp to aws and",
    "start": "1354720",
    "end": "1362159"
  },
  {
    "text": "does it require any third-party tools i can take that one",
    "start": "1362159",
    "end": "1367280"
  },
  {
    "text": "okay okay uh yeah so you can migrate uh from",
    "start": "1367280",
    "end": "1373120"
  },
  {
    "text": "the other cloud providers to aws uh but not directly with dms uh that involves",
    "start": "1373120",
    "end": "1379280"
  },
  {
    "text": "apparently some proxy or we can make use of other aws services so by using any",
    "start": "1379280",
    "end": "1384799"
  },
  {
    "text": "proxy you can definitely uh try to migrate from other cloud providers to aws",
    "start": "1384799",
    "end": "1391919"
  },
  {
    "text": "all right thanks i appreciate the answer i'm back over there thanks okay thank you",
    "start": "1393520",
    "end": "1400240"
  },
  {
    "start": "1400000",
    "end": "1572000"
  },
  {
    "text": "okay so uh in the next section uh tanya will help us to understand some of the use cases uh where dms can be used uh",
    "start": "1400240",
    "end": "1407039"
  },
  {
    "text": "over to you tanya thank you thank you jason uh so in this slide uh we are going to",
    "start": "1407039",
    "end": "1412720"
  },
  {
    "text": "discuss the different use cases where dms and sct which chaitan spoke about in",
    "start": "1412720",
    "end": "1418159"
  },
  {
    "text": "the earlier slides uh what do they support and what sort of things that we can do with aws tms and aws sct",
    "start": "1418159",
    "end": "1425919"
  },
  {
    "text": "so basically uh dms and sct they work in conjunction to both migrate your",
    "start": "1425919",
    "end": "1431520"
  },
  {
    "text": "databases and then support the ongoing replications for a variety of use cases",
    "start": "1431520",
    "end": "1437039"
  },
  {
    "text": "such as you know whether it's populating the data marts or synchronizing your systems etc so sct can copy the database",
    "start": "1437039",
    "end": "1445520"
  },
  {
    "text": "schemas for homogeneous migrations and then convert them for heterogeneous uh",
    "start": "1445520",
    "end": "1451440"
  },
  {
    "text": "migrations and these schemas can be between databases so for example if you have oracle to the postgres sql or",
    "start": "1451440",
    "end": "1459440"
  },
  {
    "text": "between the data warehouses like amazon rich shift to netizer etc so once a",
    "start": "1459440",
    "end": "1465120"
  },
  {
    "text": "schema has been created on your empty target depending upon the volume of data",
    "start": "1465120",
    "end": "1471679"
  },
  {
    "text": "and or the supported engines either dms or sct is then used to move the data so",
    "start": "1471679",
    "end": "1478240"
  },
  {
    "text": "dms traditionally used to move these smaller relational databases which shaitan also discussed in some earlier",
    "start": "1478240",
    "end": "1484080"
  },
  {
    "text": "slides and sct is primarily used to migrate the large data warehouse workloads",
    "start": "1484080",
    "end": "1491279"
  },
  {
    "text": "so dma supports the ongoing replication to keep the target in sync with the source",
    "start": "1491279",
    "end": "1496720"
  },
  {
    "text": "while sat doesn't supports that so you can use aws sct replication agent",
    "start": "1496720",
    "end": "1502159"
  },
  {
    "text": "if you are looking to migrate the bigger data workloads and the replication agent",
    "start": "1502159",
    "end": "1508000"
  },
  {
    "text": "is there which works in conjunction with both dms and sct and then few of the use cases which is pension in the slide like",
    "start": "1508000",
    "end": "1514720"
  },
  {
    "text": "for example if you're trying to migrate the business critical applications or you know you're",
    "start": "1514720",
    "end": "1520080"
  },
  {
    "text": "consolidating shards into amazon aurora or uh you're converting the embedded sql",
    "start": "1520080",
    "end": "1525440"
  },
  {
    "text": "codes in an application so you can migrate from nosql to your sql from sql to nosql etc",
    "start": "1525440",
    "end": "1532159"
  },
  {
    "text": "and then you can also migrate the data aware house data to amazon redshift",
    "start": "1532159",
    "end": "1537200"
  },
  {
    "text": "using the dms and sct and it also supports replicate where you know you can create cross region bleed",
    "start": "1537200",
    "end": "1543039"
  },
  {
    "text": "replicas and run your analytics in the cloud and then just hydrate your data lakes so",
    "start": "1543039",
    "end": "1548400"
  },
  {
    "text": "these are replication tasks can just be set up in minutes instead of you know taking hours or days and then aws",
    "start": "1548400",
    "end": "1556400"
  },
  {
    "text": "database migration services also monitors for the replication tasks that we discussed",
    "start": "1556400",
    "end": "1561600"
  },
  {
    "text": "so this is few of the use cases where you know you can use both aws dms and sct",
    "start": "1561600",
    "end": "1569559"
  },
  {
    "start": "1572000",
    "end": "1727000"
  },
  {
    "text": "in the next slide uh we are going to discuss here uh moving to manage relational databases right",
    "start": "1572720",
    "end": "1579520"
  },
  {
    "text": "managing a database is a sensitive uh you know task with the risk of",
    "start": "1579520",
    "end": "1584640"
  },
  {
    "text": "catastrophic uh downside as well so the failure of your primary instance can",
    "start": "1584640",
    "end": "1590400"
  },
  {
    "text": "mean downtime for your application that means business impacts but uh by moving to manage databases we",
    "start": "1590400",
    "end": "1597360"
  },
  {
    "text": "actually uh you know provide all that facilities and provisioning where the",
    "start": "1597360",
    "end": "1602559"
  },
  {
    "text": "database operations are managed by aws then leaving your team to focus on",
    "start": "1602559",
    "end": "1607919"
  },
  {
    "text": "innovations and the amazon rds databases you know handles the instance failovers",
    "start": "1607919",
    "end": "1613919"
  },
  {
    "text": "or data backups and software updates and thus uh you know it is an advantage",
    "start": "1613919",
    "end": "1619279"
  },
  {
    "text": "to move to managed relational databases and then you can just enjoy the efficiencies of the aws cloud for a fast",
    "start": "1619279",
    "end": "1628000"
  },
  {
    "text": "and reliable database option now here uh you know what are the benefits uh while moving to managed",
    "start": "1628000",
    "end": "1636159"
  },
  {
    "text": "relational databases so that includes the ability to provision new on-prem",
    "start": "1636159",
    "end": "1641360"
  },
  {
    "text": "databases in minutes this was one of the questions from our audience right you can just make the backups and also have",
    "start": "1641360",
    "end": "1648080"
  },
  {
    "text": "the restore to a point in time so these are few of the benefits of moving to manage databases and",
    "start": "1648080",
    "end": "1654960"
  },
  {
    "text": "you get automated management of your on-premise you know databases without having to provision or manage the database engine",
    "start": "1654960",
    "end": "1662640"
  },
  {
    "text": "and aws also has the experience of managing the large number of databases and then you know you can also automate",
    "start": "1662640",
    "end": "1668559"
  },
  {
    "text": "the database backups to comply with regulations and ensure that your data is",
    "start": "1668559",
    "end": "1673760"
  },
  {
    "text": "safe in the event of any emergency uh i would definitely uh like to share",
    "start": "1673760",
    "end": "1679520"
  },
  {
    "text": "this there was a recent study which was done by aws where you know we considered customers who used amazon relational",
    "start": "1679520",
    "end": "1686640"
  },
  {
    "text": "databases which is a fully managed service from aws and the study found",
    "start": "1686640",
    "end": "1691760"
  },
  {
    "text": "that the customers had 39 percent lower database operation cost and also a very high percentage return",
    "start": "1691760",
    "end": "1699279"
  },
  {
    "text": "on investment over a couple of years so these customers work with aws and you",
    "start": "1699279",
    "end": "1705760"
  },
  {
    "text": "know they were really benefited from the benefits of moving to manage databases and that's the reason uh if you're",
    "start": "1705760",
    "end": "1712559"
  },
  {
    "text": "looking on to move to manage databases you need to consider what really differentiates",
    "start": "1712559",
    "end": "1717760"
  },
  {
    "text": "your company and you know relentlessly focusing on the innovations on these key differences",
    "start": "1717760",
    "end": "1725320"
  },
  {
    "start": "1727000",
    "end": "1893000"
  },
  {
    "text": "in this slide we are going to focus more on amazon aurora which is a mysql",
    "start": "1729039",
    "end": "1735840"
  },
  {
    "text": "postgres compatible relational database built for the cloud that combines the",
    "start": "1735840",
    "end": "1740960"
  },
  {
    "text": "performance and availability of the traditional enterprise databases with the simplicity and cost effectiveness of",
    "start": "1740960",
    "end": "1748159"
  },
  {
    "text": "open source databases so amazon aurora uh provides many",
    "start": "1748159",
    "end": "1753360"
  },
  {
    "text": "benefits and it's a distributed fault tolerant self-healing system that automatically",
    "start": "1753360",
    "end": "1759760"
  },
  {
    "text": "scales up and it also delivers high performance and availability and we are going to also discuss three",
    "start": "1759760",
    "end": "1765919"
  },
  {
    "text": "of the advantages as you can see here on the slide uh it provides you know performance and",
    "start": "1765919",
    "end": "1772080"
  },
  {
    "text": "availability and scalability so that you can easily scale your databases up and down from smaller to larger",
    "start": "1772080",
    "end": "1778799"
  },
  {
    "text": "instances types as you need you know or you can also use um aurora",
    "start": "1778799",
    "end": "1784559"
  },
  {
    "text": "serverless handling uh scaling automatically for you and then second uh availability and",
    "start": "1784559",
    "end": "1791600"
  },
  {
    "text": "durability so amazon aurora transparently recovers from the physical uh storage failures",
    "start": "1791600",
    "end": "1798240"
  },
  {
    "text": "and the instance failovers typically takes you know less than few seconds and you can also backtrack within",
    "start": "1798240",
    "end": "1804799"
  },
  {
    "text": "seconds to previous point in time to recover from user errors",
    "start": "1804799",
    "end": "1810240"
  },
  {
    "text": "uh security is another advantage which is which is a job zero and aurora",
    "start": "1810240",
    "end": "1816880"
  },
  {
    "text": "provides multiple levels of security for your databases so these include network isolations for example",
    "start": "1816880",
    "end": "1824320"
  },
  {
    "text": "if you want to use amazon vpc encryption amazon dpc or you want to use encryptions at rest",
    "start": "1824320",
    "end": "1830799"
  },
  {
    "text": "or you know you want to control via kms or you know you want to encrypt the data and transit using ssl so all these",
    "start": "1830799",
    "end": "1838480"
  },
  {
    "text": "features are provided by amazon aurora and then last uh but not the least it is",
    "start": "1838480",
    "end": "1845360"
  },
  {
    "text": "a fully banned service that we already discussed and uh you know all the administration tasks like database setup",
    "start": "1845360",
    "end": "1852480"
  },
  {
    "text": "patchings to backup is taken care by amazon aurora",
    "start": "1852480",
    "end": "1858720"
  },
  {
    "text": "so before we move on to the demo where we'll discuss how to migrate to amazon aurora i'll ask",
    "start": "1859840",
    "end": "1866960"
  },
  {
    "text": "i would like to ask rob if we have any questions on the audience hi yes we do have a question from dan",
    "start": "1866960",
    "end": "1874399"
  },
  {
    "text": "jacob111 does dms affect the resources consumption on my source and target",
    "start": "1874399",
    "end": "1880159"
  },
  {
    "text": "databases uh yes uh okay so i i can take that one",
    "start": "1880159",
    "end": "1885279"
  },
  {
    "text": "so yes uh so so basically there are multiple factors to that right so let me uh show you this uh specific slide that",
    "start": "1885279",
    "end": "1892799"
  },
  {
    "text": "i covered see uh so basically there uh you know there there could be multiple data based",
    "start": "1892799",
    "end": "1899120"
  },
  {
    "text": "uh engines that uh you know i mean so so i mean it depends on what database engine that you're that you're trying to",
    "start": "1899120",
    "end": "1905600"
  },
  {
    "text": "use it depends on what is your instance type that you're trying to use right so basically we have observed that yes aws",
    "start": "1905600",
    "end": "1912799"
  },
  {
    "text": "dms uses some resources on the source and the target databases so for example uh during a full load",
    "start": "1912799",
    "end": "1919440"
  },
  {
    "text": "task you know dms performs a full table scan of the source table for each table process in",
    "start": "1919440",
    "end": "1925840"
  },
  {
    "text": "parallel so a couple of suggestions on this particular point that you know you",
    "start": "1925840",
    "end": "1931440"
  },
  {
    "text": "reduce the number of tasks or the tables for each task of your migration during",
    "start": "1931440",
    "end": "1936720"
  },
  {
    "text": "the you know dms migration itself uh you can turn off the unnecessary triggers there in your source databases",
    "start": "1936720",
    "end": "1944000"
  },
  {
    "text": "uh you can you can you can actually turn off the secondary indexes during the initial load and then probably turn them on",
    "start": "1944000",
    "end": "1950880"
  },
  {
    "text": "during the series itself and especially for the rds databases you may turn off the backups and the",
    "start": "1950880",
    "end": "1955919"
  },
  {
    "text": "multi-easy option and for non-rds or non-rds databases you may turn off any",
    "start": "1955919",
    "end": "1961279"
  },
  {
    "text": "logging on the target uh until the cutover happens so these are a couple of best practices if you uh you know use then you can",
    "start": "1961279",
    "end": "1968159"
  },
  {
    "text": "definitely you know control the uh the the resource consumption on your uh you",
    "start": "1968159",
    "end": "1973200"
  },
  {
    "text": "know target and the source uh databases yeah great thank you appreciate that back",
    "start": "1973200",
    "end": "1978799"
  },
  {
    "text": "over deal",
    "start": "1978799",
    "end": "1981960"
  },
  {
    "start": "1981000",
    "end": "2421000"
  },
  {
    "text": "um what kind of hear on you",
    "start": "2014320",
    "end": "2019840"
  },
  {
    "text": "yeah i would pick up this particular database here and [Music]",
    "start": "2020799",
    "end": "2026159"
  },
  {
    "text": "show tables so these are the set of tables that i have with me",
    "start": "2026159",
    "end": "2032559"
  },
  {
    "text": "now i'm going to go over this dms console where i have this aurora endpoint ready with me",
    "start": "2032559",
    "end": "2039919"
  },
  {
    "text": "i'm trying to connect to the aurora endpoint here with my test user",
    "start": "2041200",
    "end": "2049359"
  },
  {
    "text": "and just going to show you the databases here so we're going to type show databases",
    "start": "2052720",
    "end": "2059760"
  },
  {
    "text": "and we are checking the databases that we have here on the target so these are the set of databases that we have on the",
    "start": "2059760",
    "end": "2065679"
  },
  {
    "text": "target now on the dms migration task",
    "start": "2065679",
    "end": "2074800"
  },
  {
    "text": "i'm going to create a migration task give a task identifier",
    "start": "2074800",
    "end": "2079839"
  },
  {
    "text": "i'm giving it a demo on-prem to aurora i already have a replication instance",
    "start": "2079839",
    "end": "2086000"
  },
  {
    "text": "ready so i'll choose that source is my running on ec2 and the",
    "start": "2086000",
    "end": "2091280"
  },
  {
    "text": "destination is aurora i'll let all other settings be as is and then",
    "start": "2091280",
    "end": "2097760"
  },
  {
    "text": "i'll add a new selection rule basically to select the schema",
    "start": "2097760",
    "end": "2103280"
  },
  {
    "text": "during that would be used during the migration so i would be using the employees",
    "start": "2103280",
    "end": "2110160"
  },
  {
    "text": "and in the migration task startup configuration i'm using manually later so i would start my task later",
    "start": "2110960",
    "end": "2118480"
  },
  {
    "text": "now here you see that status is creating and we're just going to refresh it and it's",
    "start": "2118480",
    "end": "2123920"
  },
  {
    "text": "changed to ready so this task would be used now so you can",
    "start": "2123920",
    "end": "2129280"
  },
  {
    "text": "check box this and go to actions and then start your task and this would",
    "start": "2129280",
    "end": "2134880"
  },
  {
    "text": "start replicating from your source to target so source which is running on",
    "start": "2134880",
    "end": "2140640"
  },
  {
    "text": "ec2 and going to migrate the tables and databases to",
    "start": "2140640",
    "end": "2146640"
  },
  {
    "text": "aurora which is your target so here in the overview details you see progress which is still zero percent",
    "start": "2146640",
    "end": "2154720"
  },
  {
    "text": "and now we can also check on the table statistics so it also provides the",
    "start": "2154720",
    "end": "2160320"
  },
  {
    "text": "different statistics and schema and tables",
    "start": "2160320",
    "end": "2165200"
  },
  {
    "text": "and it is still [Music] okay we see it is turned up to",
    "start": "2165520",
    "end": "2170720"
  },
  {
    "text": "two person now i've come back to my aurora instance and i'm going to check the databases that i",
    "start": "2170720",
    "end": "2177119"
  },
  {
    "text": "have and i see employees here i'm going to use this particular",
    "start": "2177119",
    "end": "2183680"
  },
  {
    "text": "database by typing the command use employees",
    "start": "2183680",
    "end": "2188079"
  },
  {
    "text": "and now going to check on the different tables that we have here show tables",
    "start": "2188800",
    "end": "2195119"
  },
  {
    "text": "so these are different tables that we have inside the database employees",
    "start": "2195119",
    "end": "2202160"
  },
  {
    "text": "and i'm going to check on the progress so this is three percent",
    "start": "2202240",
    "end": "2207440"
  },
  {
    "text": "it's just going to take some time while it tries to replicate all the tables fully",
    "start": "2207440",
    "end": "2213359"
  },
  {
    "text": "and i think as we can see here these are the set of tables that you see in the table statistics",
    "start": "2213359",
    "end": "2219280"
  },
  {
    "text": "and for the table tem under employees we see",
    "start": "2219280",
    "end": "2224960"
  },
  {
    "text": "these are the full load rows these are the rows that has been migrated during the full load",
    "start": "2224960",
    "end": "2232078"
  },
  {
    "text": "so we can check on the status here just to you know if you want to continuously monitor",
    "start": "2233280",
    "end": "2238880"
  },
  {
    "text": "you can check on the table statistics just to see you know uh what's the progress on the replication",
    "start": "2238880",
    "end": "2246640"
  },
  {
    "text": "so i've come back here on my uh self-managed db running on ec2 i'm just",
    "start": "2246720",
    "end": "2252560"
  },
  {
    "text": "going to check what are the count of different rows that i have",
    "start": "2252560",
    "end": "2258000"
  },
  {
    "text": "uh in my table temp so select count star from temp",
    "start": "2258000",
    "end": "2265200"
  },
  {
    "text": "and just going to look up so here are i have",
    "start": "2265200",
    "end": "2270960"
  },
  {
    "text": "around close to 198 millions rows and if i see the progress which is",
    "start": "2270960",
    "end": "2277119"
  },
  {
    "text": "increased and under the full load rows as well i can see",
    "start": "2277119",
    "end": "2283359"
  },
  {
    "text": "the number of rows has increased but it has still not reached to",
    "start": "2283359",
    "end": "2288480"
  },
  {
    "text": "uh you know i have close to 198 so it's still going to take some time",
    "start": "2288480",
    "end": "2294559"
  },
  {
    "text": "okay i see it's coming up to 62 percent and",
    "start": "2295599",
    "end": "2302640"
  },
  {
    "text": "97 percent and this is done 100 complete so we can just go on to the table statistics and i see close to 198 the",
    "start": "2303119",
    "end": "2310640"
  },
  {
    "text": "rows that i have on my source has been replicated and migrated to the target",
    "start": "2310640",
    "end": "2318000"
  },
  {
    "text": "so i can just go back to my target instance and just see the rows that i have in this database",
    "start": "2318000",
    "end": "2327400"
  },
  {
    "text": "so select count star from 10 on the target and i see it actually",
    "start": "2327920",
    "end": "2333520"
  },
  {
    "text": "matches to my source that means you can also validate from here that the",
    "start": "2333520",
    "end": "2339040"
  },
  {
    "text": "migration has been completed so this was a quick demo just to show you how you can migrate from",
    "start": "2339040",
    "end": "2345280"
  },
  {
    "text": "your self-managed databases running on ec2 to amazon aurora",
    "start": "2345280",
    "end": "2350800"
  },
  {
    "text": "so that's that's a small walkthrough and that's all for today i'll take a pause",
    "start": "2350800",
    "end": "2356000"
  },
  {
    "text": "and we'll check with rob if we have any questions from the audience",
    "start": "2356000",
    "end": "2361680"
  },
  {
    "text": "thanks honey uh we don't have any questions from the audience right now so thank you um but everyone today we",
    "start": "2361839",
    "end": "2367280"
  },
  {
    "text": "looked at the broadest selection of purpose-built databases for all your application needs and how you can leverage aws database migration services",
    "start": "2367280",
    "end": "2374480"
  },
  {
    "text": "to migrate data to and from the most widely used commercial and open source databases",
    "start": "2374480",
    "end": "2379760"
  },
  {
    "text": "overall thank you to our moderators for posting the registration page for upcoming",
    "start": "2379760",
    "end": "2385280"
  },
  {
    "text": "episodes aws supports you that splashthat.com please bookmark this page",
    "start": "2385280",
    "end": "2390480"
  },
  {
    "text": "and we hope you'll join us next time for our next show if there are any questions that were not answered today you can post your",
    "start": "2390480",
    "end": "2396560"
  },
  {
    "text": "questions on forums.aws.amazon.com please also feel free to email us any",
    "start": "2396560",
    "end": "2402720"
  },
  {
    "text": "feedback to aws supports you at amazon.com we want to hear from you we want you to let us know what you'd like",
    "start": "2402720",
    "end": "2409440"
  },
  {
    "text": "to see on the show thanks shane and thanks tanya today and thanks everyone for joining us",
    "start": "2409440",
    "end": "2414800"
  },
  {
    "text": "at aws supports you happy cloud computing happy star computing everyone thank you",
    "start": "2414800",
    "end": "2423240"
  }
]