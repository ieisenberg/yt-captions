[
  {
    "text": "good morning how is everyone now awake had coffee now little break and some",
    "start": "30",
    "end": "6330"
  },
  {
    "text": "biscuits cool and my name is Paul Maddox I'm here today to talk about service and",
    "start": "6330",
    "end": "11700"
  },
  {
    "text": "we're gonna we're gonna dive deep today on some of the best practices around development with Cerberus so as a bit of",
    "start": "11700",
    "end": "19410"
  },
  {
    "text": "background my name is Paul Maddox I'm a Solutions Architect at AWS I have quite an interesting job I work with I might",
    "start": "19410",
    "end": "26670"
  },
  {
    "text": "be a bit biased there but I I work with companies of all different sizes right from startups to enterprises with the",
    "start": "26670",
    "end": "32610"
  },
  {
    "text": "goal of helping them do better development on AWS so my background is",
    "start": "32610",
    "end": "39710"
  },
  {
    "text": "before AWS it was a world of tin of metal in datacenters software development systems architecture for 15",
    "start": "39710",
    "end": "46829"
  },
  {
    "text": "16 years I hold all a seven AWS certifications who here in the room is",
    "start": "46829",
    "end": "52739"
  },
  {
    "text": "certified well done everyone yeah good job",
    "start": "52739",
    "end": "57989"
  },
  {
    "text": "my background is has a lot of development in it so I these days many",
    "start": "57989",
    "end": "63300"
  },
  {
    "text": "work with go Java some C and some node as well in there as well so I want to",
    "start": "63300",
    "end": "69450"
  },
  {
    "text": "talk today a bit about service development in general how many people have played with service quite a few",
    "start": "69450",
    "end": "76710"
  },
  {
    "text": "okay how many people really feel like they've got the development process locked down okay quite a few less people",
    "start": "76710",
    "end": "85470"
  },
  {
    "text": "there hopefully by the end of today's session that's gonna change and you're gonna feel a lot more comfortable",
    "start": "85470",
    "end": "90900"
  },
  {
    "text": "deploying faster in a very safe way on AWS so we're going to talk through how",
    "start": "90900",
    "end": "96570"
  },
  {
    "text": "to build a service API and back-end it is just one of the use cases for service",
    "start": "96570",
    "end": "102119"
  },
  {
    "text": "but it actually fulfills the purpose of this session quite nicely we're gonna talk through the options around",
    "start": "102119",
    "end": "107759"
  },
  {
    "text": "development frameworks so there's a lot of different service frameworks out there what are some of the pros and cons",
    "start": "107759",
    "end": "113399"
  },
  {
    "text": "how do you tie them together which should you use etc we're going to talk about the AWS service application model",
    "start": "113399",
    "end": "119820"
  },
  {
    "text": "AWS San and how you can deploy and set up see ICD and automation of tests etc",
    "start": "119820",
    "end": "127020"
  },
  {
    "text": "with Sam and services like AWS code build and code pipeline",
    "start": "127020",
    "end": "132480"
  },
  {
    "text": "I'm going to show you some tricks for running your Cerberus projects locally on your machine using docker so running",
    "start": "132480",
    "end": "139319"
  },
  {
    "text": "lambda or an API gateway all locally so you can get a really nice fast local development experience including testing",
    "start": "139319",
    "end": "146190"
  },
  {
    "text": "and debugging and other stuff which is an area that I know a lot of server lists people find challenging so we'll",
    "start": "146190",
    "end": "152340"
  },
  {
    "text": "show that and we'll do some demos and we'll build some stuff today and we're going to talk about another hot topic",
    "start": "152340",
    "end": "157799"
  },
  {
    "text": "around Cerberus which is security how best should you secure your Cerberus apps if you're building an API what are",
    "start": "157799",
    "end": "164099"
  },
  {
    "text": "your options available for authentication authorization for example maybe you've heard of kognito maybe",
    "start": "164099",
    "end": "170519"
  },
  {
    "text": "you're using kognito are you following the best practices we're going to dive into that a bit today and then we could",
    "start": "170519",
    "end": "177510"
  },
  {
    "text": "have Q&A so when I started NIT I mentioned I worked in a world of tin and metal and when I wanted to start a new",
    "start": "177510",
    "end": "184410"
  },
  {
    "text": "project or something the cost the course was quite high right in terms of capex we had to go and procure new equipment",
    "start": "184410",
    "end": "190670"
  },
  {
    "text": "we had right-size it we had to work with our marketing teams except to try and work out how much hardware do we need",
    "start": "190670",
    "end": "197069"
  },
  {
    "text": "now how much do we buy what if we get it wrong either we're wildly successful and we need to rapidly buy more to keep up",
    "start": "197069",
    "end": "204060"
  },
  {
    "text": "or the project fails and we've just wasted maybe a couple of years you know a load of capex investment and either",
    "start": "204060",
    "end": "210690"
  },
  {
    "text": "way it's quite a painful process so coming to AWS a couple of years ago and when I first started playing with server",
    "start": "210690",
    "end": "217079"
  },
  {
    "text": "lists it really hit home with me there's sort of wow a moment you know all this this struggle that I've had for the last",
    "start": "217079",
    "end": "222180"
  },
  {
    "text": "15 years of my IT career is it's just gone so in a service world there are no",
    "start": "222180",
    "end": "228450"
  },
  {
    "text": "servers to provision or manage for the customer right so as a developer you're",
    "start": "228450",
    "end": "233790"
  },
  {
    "text": "able to focus on your application and what differentiate differentiates your business in the market rather than the",
    "start": "233790",
    "end": "240450"
  },
  {
    "text": "undef' rayshard heavy liftings such as you know data centers Colo power heating etcetera and all that kind of stuff in a",
    "start": "240450",
    "end": "247919"
  },
  {
    "text": "server list world your application should scale with usage so you shouldn't need to spend hours and weeks and days",
    "start": "247919",
    "end": "254010"
  },
  {
    "text": "and loads of meetings trying to work out how much load you're going to have when you first launch right you want to be",
    "start": "254010",
    "end": "259320"
  },
  {
    "text": "able to upload your functions to a service that scales automatically on your behalf and key here is reducing",
    "start": "259320",
    "end": "265469"
  },
  {
    "text": "that cost of failure in an organization if you're paying a lot of capex upfront buying Hardware fitting in date sensors etc",
    "start": "265469",
    "end": "272180"
  },
  {
    "text": "then the cost for a project failing is quite high maybe you can repurpose it",
    "start": "272180",
    "end": "278340"
  },
  {
    "text": "maybe you've still got time before the hardware refresh but in a service world where you never pay for idle there's a",
    "start": "278340",
    "end": "284250"
  },
  {
    "text": "really powerful thing and it allows people to experiment and that's such a key thing in a company to keep a company",
    "start": "284250",
    "end": "289410"
  },
  {
    "text": "innovating in service world you get things like availability and fault tolerance built-in now you can do this",
    "start": "289410",
    "end": "296460"
  },
  {
    "text": "on ec2 and other areas of the AWS platform but it requires some planning and thought and know-how and knowledge",
    "start": "296460",
    "end": "302130"
  },
  {
    "text": "and you know maybe you'll get it wrong who knows with surplus all of this is taken care of for you",
    "start": "302130",
    "end": "309290"
  },
  {
    "text": "it also allows a new way of thinking about architectures so gone are the days",
    "start": "309290",
    "end": "315480"
  },
  {
    "text": "of batch processing and more moving towards event based architectures if you imagine a concrete example",
    "start": "315480",
    "end": "322130"
  },
  {
    "text": "whereby a let's say a power company wants you to take a photo of your meter",
    "start": "322130",
    "end": "327210"
  },
  {
    "text": "every every six months or whatever to do the reading on your meter in traditional",
    "start": "327210",
    "end": "333240"
  },
  {
    "text": "architectures that would normally all get uploaded maybe somewhere FTP SFTP somewhere and then there'd be like a",
    "start": "333240",
    "end": "339540"
  },
  {
    "text": "nightly churn and batch process where it churns through like all these thousands of images and OCR's them and maybe the",
    "start": "339540",
    "end": "346920"
  },
  {
    "text": "customers image was too blurry but by then it's 12 hours later or 24 hours later and the customers given given up",
    "start": "346920",
    "end": "353460"
  },
  {
    "text": "all right they're not going to go back and do another meter reading and try and get that less blurry picture but with",
    "start": "353460",
    "end": "358800"
  },
  {
    "text": "things like serverless you're only moved to event based architectures so rather than that batch type process you can move to a world",
    "start": "358800",
    "end": "364950"
  },
  {
    "text": "where whenever a photo is uploaded a lambda function gets triggered and then you can feed back to the customer faster",
    "start": "364950",
    "end": "372240"
  },
  {
    "text": "and keep them engaged longer so it's a really powerful but it it's it allows you to create new types of architectures",
    "start": "372240",
    "end": "379400"
  },
  {
    "text": "so in AWS you can trigger a lambda function off a load of different event sources one of them is a HTTP request",
    "start": "379400",
    "end": "386040"
  },
  {
    "text": "coming in it could be something getting uploaded to s3 it could be a row changing in a dynamo DB table and then",
    "start": "386040",
    "end": "393990"
  },
  {
    "text": "you can run your logic in lambda and from your lambda function you can you can do whatever you can do in your",
    "start": "393990",
    "end": "399660"
  },
  {
    "text": "or code right you can use AWS SDKs you can contact their parties and you can put your business logic in there so",
    "start": "399660",
    "end": "407720"
  },
  {
    "text": "that's kind of the high level slides on server that's a bit of baseline knowledge for everyone for those that haven't played the service before",
    "start": "407720",
    "end": "414090"
  },
  {
    "text": "apologies for people who have that may have been a bit a bit basic we're gonna dive in now and talk about how to build",
    "start": "414090",
    "end": "420450"
  },
  {
    "text": "an API with serverless so if you've been researching serverless",
    "start": "420450",
    "end": "425490"
  },
  {
    "text": "or using server list for a while you'll know that there's quite a few different frameworks available for you use the",
    "start": "425490",
    "end": "432180"
  },
  {
    "text": "solver rather that they solve a challenge in the server list world right",
    "start": "432180",
    "end": "437220"
  },
  {
    "text": "whereby you're decomposing your application away from this monolithic type of architecture into lots and lots",
    "start": "437220",
    "end": "443160"
  },
  {
    "text": "of micro services and maybe down to the function level with service and then you've got all these functions",
    "start": "443160",
    "end": "448740"
  },
  {
    "text": "everywhere and you need to tie them all together into an application and maybe put different event sources like HTTP",
    "start": "448740",
    "end": "455280"
  },
  {
    "text": "endpoints in front of them etcetera and then you've got to take that blob of functions and you know all the the API",
    "start": "455280",
    "end": "462960"
  },
  {
    "text": "definitions and such and deploy them as a single entity so it's what I love these frameworks do and you have for",
    "start": "462960",
    "end": "470460"
  },
  {
    "text": "example service really common one in the market Sparta zappa for Python there's",
    "start": "470460",
    "end": "477720"
  },
  {
    "text": "one that we bought out chalice for Python we're gonna show that a bit more in a minute Claudia j/s is an",
    "start": "477720",
    "end": "484620"
  },
  {
    "text": "interesting one it's it's predominantly for node based applications if you're writing your functions in node allows",
    "start": "484620",
    "end": "490050"
  },
  {
    "text": "you to build your node apps much like you normally would in an express kind of format whereby you can mount your API",
    "start": "490050",
    "end": "495960"
  },
  {
    "text": "endpoints and say okay /hello do this there's a nice simple easy way to get",
    "start": "495960",
    "end": "501570"
  },
  {
    "text": "started and chalice is an option I mentioned a minute ago that AWS have",
    "start": "501570",
    "end": "507450"
  },
  {
    "text": "bought out so this is focused around Python developers and if you've ever used flask in Python it's super similar",
    "start": "507450",
    "end": "513960"
  },
  {
    "text": "so it works with annotations and you annotate your methods to describe the HTTP endpoint the function should be",
    "start": "513960",
    "end": "520740"
  },
  {
    "text": "mounted at so in this case we've got a really simple app that's just got a route on slash and it's just returning",
    "start": "520740",
    "end": "526920"
  },
  {
    "text": "hello world so very very quick way to get started and you can write up all your lambda function",
    "start": "526920",
    "end": "532980"
  },
  {
    "text": "Madame HTTP em points and then chalice is gonna take care of the deployment for you and it's gonna create that API",
    "start": "532980",
    "end": "539459"
  },
  {
    "text": "gateway and map it all together if we dive in a bit deeper can you see this at",
    "start": "539459",
    "end": "546870"
  },
  {
    "text": "the back I can't can't make any bigger apologies if you can't so this is a more",
    "start": "546870",
    "end": "553430"
  },
  {
    "text": "detailed example of a chalice app and you can see here we've got app roots so mounting different functions at",
    "start": "553430",
    "end": "559889"
  },
  {
    "text": "different HTTP restful endpoints it also does things like error handling so it",
    "start": "559889",
    "end": "565980"
  },
  {
    "text": "provides a really nice way for you to feedback errors straight back from your lambda functions through API gateway",
    "start": "565980",
    "end": "572600"
  },
  {
    "text": "does things like support different HTTP methods so if you're building out a restful api you probably want to use you",
    "start": "572600",
    "end": "578160"
  },
  {
    "text": "know put patch post delete etc so you can attach them easily to functions I",
    "start": "578160",
    "end": "584000"
  },
  {
    "text": "should have said the beginning if anyone has any questions please put your hand up interrupt me and feel free so in",
    "start": "584000",
    "end": "593040"
  },
  {
    "text": "amongst all this there's also AWS Sam has anyone played with Sam anyone use Sam a few people who's heard of Sam okay",
    "start": "593040",
    "end": "602060"
  },
  {
    "text": "quite a few more okay so Sam is a deployment framework for service",
    "start": "602060",
    "end": "607649"
  },
  {
    "text": "applications and a lot of these frameworks that I mentioned on the previous slide have the ability to",
    "start": "607649",
    "end": "613709"
  },
  {
    "text": "deploy so chalice for example you can run chalice deploy and it's going to deploy your your code up into AWS but",
    "start": "613709",
    "end": "622139"
  },
  {
    "text": "actually in a CI CD world in like an enterprise development world you probably want something that's gonna",
    "start": "622139",
    "end": "627329"
  },
  {
    "text": "build you know a single build at the beginning of your pipeline and then progress that through different",
    "start": "627329",
    "end": "632370"
  },
  {
    "text": "environments and maybe integrates well with things like AWS code pipeline or Jenkins or other tooling that you may",
    "start": "632370",
    "end": "638760"
  },
  {
    "text": "use and this is where Sam comes in so Sam was built with a lot of learnings",
    "start": "638760",
    "end": "643920"
  },
  {
    "text": "that we took from running cloud formation for a long time and having our cloud formation service and actually",
    "start": "643920",
    "end": "649319"
  },
  {
    "text": "it's it's based heavily on cloud formation it uses cloud formation under the hood and it allows you to describe",
    "start": "649319",
    "end": "654870"
  },
  {
    "text": "your service application in a really simplified version of a cloud formation",
    "start": "654870",
    "end": "659910"
  },
  {
    "text": "template so typically if you were to use cloud formation to deploy a service app you'd have all your lambda function",
    "start": "659910",
    "end": "666690"
  },
  {
    "text": "your template would probably be about that high and it's pretty painful and Sam is a transform that sits on top of",
    "start": "666690",
    "end": "673170"
  },
  {
    "text": "cloud formation and basically allows you to describe a whole server the SAP in a few lines it's an open source",
    "start": "673170",
    "end": "680160"
  },
  {
    "text": "specification so I'll show you in a bit but the whole specification is on github you can go and look at it the whole API",
    "start": "680160",
    "end": "686280"
  },
  {
    "text": "reference etc we accept you know comments issues pull requests and it's",
    "start": "686280",
    "end": "691560"
  },
  {
    "text": "very much a community driven project there so a Sam template this is an",
    "start": "691560",
    "end": "698100"
  },
  {
    "text": "example of a Sam template so in this in this case it's yup could be Jason most people tend to use Yammer because",
    "start": "698100",
    "end": "704130"
  },
  {
    "text": "it's a bit more concise so in this case we've got a AWS service function here",
    "start": "704130",
    "end": "710670"
  },
  {
    "text": "and we're setting some properties so things like the handler okay so the file names index CAS and we're gonna call the",
    "start": "710670",
    "end": "718110"
  },
  {
    "text": "method get HTML its own ojs 4.3 and what",
    "start": "718110",
    "end": "723900"
  },
  {
    "text": "permissions do we want our lambda function to have in this case we're just passing in one of the managed AWS",
    "start": "723900",
    "end": "729210"
  },
  {
    "text": "policies the grants access to DynamoDB you can actually specify your own custom iam policies there as well",
    "start": "729210",
    "end": "736100"
  },
  {
    "text": "this next section the event section is the bit I find the most interesting this",
    "start": "736100",
    "end": "741990"
  },
  {
    "text": "this allows you to specify what triggers your lambda function in this case we",
    "start": "741990",
    "end": "747360"
  },
  {
    "text": "specified an event called get HTML that's just an arbitrary name there and it's of type API we're going to mount",
    "start": "747360",
    "end": "754650"
  },
  {
    "text": "our lambda function on this pass and we want it to respond to any HTTP method so",
    "start": "754650",
    "end": "760770"
  },
  {
    "text": "just through these lines of code behind the scenes Sam is going to deploy for you a whole API gateway connect to up to",
    "start": "760770",
    "end": "766710"
  },
  {
    "text": "your lambda functions and you can specify lots and lots of lambda functions in here and have your whole application defined in a SAM template at",
    "start": "766710",
    "end": "775680"
  },
  {
    "text": "the bottom there we're deploying a dynamo DB table just two lines there at the bottom will deploy a table and that",
    "start": "775680",
    "end": "781800"
  },
  {
    "text": "can be available in your lambda function then one of the cool things about Sam is actually you can just take any cloud",
    "start": "781800",
    "end": "787980"
  },
  {
    "text": "formation resource and put it in a Sam template so you can use the simplified version for stuff like functions and",
    "start": "787980",
    "end": "794580"
  },
  {
    "text": "dynamo tables and API gateway for example but actually any cloud formation",
    "start": "794580",
    "end": "800529"
  },
  {
    "text": "you may have all find online you can put in there so things like maybe you want a radius cash or something you know you",
    "start": "800529",
    "end": "805899"
  },
  {
    "text": "can it's flexible in that way so ultimately we're taking a concise",
    "start": "805899",
    "end": "811749"
  },
  {
    "text": "template and the output could be as complicated as you want you know in terms of your architecture it's designed",
    "start": "811749",
    "end": "817959"
  },
  {
    "text": "to be super flexible Telus framework I showed you a minute ago the Python",
    "start": "817959",
    "end": "823240"
  },
  {
    "text": "framework actually can create a Sam template for you so if you use the Challis framework and",
    "start": "823240",
    "end": "828579"
  },
  {
    "text": "create a new project and then just say package Tellis package and give it a directory in this case just a directory",
    "start": "828579",
    "end": "834910"
  },
  {
    "text": "called out it's gonna create for your deployment zip so all of your functions all of your code any dependencies that",
    "start": "834910",
    "end": "841990"
  },
  {
    "text": "you may have third-party modules they're all gonna be packaged up in that zip and then you get a Sam template alongside it",
    "start": "841990",
    "end": "847629"
  },
  {
    "text": "ready to deploy into AWS we also have",
    "start": "847629",
    "end": "852879"
  },
  {
    "text": "something called Sam local it's works really well with Sam and it allows you to run your whole serverless project",
    "start": "852879",
    "end": "859509"
  },
  {
    "text": "locally on your machine so it works with docker under the hood I'll show you a",
    "start": "859509",
    "end": "865480"
  },
  {
    "text": "bit more detail in a minute but it'll it essentially spawns your lambda function on your local machine using docker and",
    "start": "865480",
    "end": "871839"
  },
  {
    "text": "why is it all up you get things like the log files out straight away so rather than having to go and check the cloud",
    "start": "871839",
    "end": "877269"
  },
  {
    "text": "watch logs to find out what went wrong in your lambda function it actually just shows it straight in the console it",
    "start": "877269",
    "end": "883540"
  },
  {
    "text": "actually mimics or mocks API gateway as well so if you've got a whole load of lambda functions all mounted to http",
    "start": "883540",
    "end": "889300"
  },
  {
    "text": "endpoints this will spin up a local HTTP daemon on your machine as part of Sam",
    "start": "889300",
    "end": "894339"
  },
  {
    "text": "local and it will wire up all your lambda functions and when you hit them in the browser it's gonna go and run them locally on your machine using",
    "start": "894339",
    "end": "901029"
  },
  {
    "text": "docker a really cool way of locally developing it also supports debugging as",
    "start": "901029",
    "end": "906040"
  },
  {
    "text": "well so you can actually set breakpoints so for Python Java or nodejs",
    "start": "906040",
    "end": "911980"
  },
  {
    "text": "you set breakpoints in your code like much like you would in traditional software development you don't have to",
    "start": "911980",
    "end": "918069"
  },
  {
    "text": "do the whole kind of print here print here a print here everywhere through your code to try and work out where your",
    "start": "918069",
    "end": "923439"
  },
  {
    "text": "problems are in your in your in your code so at this point I'm going to show",
    "start": "923439",
    "end": "930100"
  },
  {
    "text": "you a demo of this seenu's how much going to show you the easiest way I think to start a service project today",
    "start": "930100",
    "end": "936900"
  },
  {
    "text": "so we're gonna load up the AWS console here and actually create a service",
    "start": "936900",
    "end": "950040"
  },
  {
    "text": "project and we're gonna build an API from scratch and we're gonna build a full C ICD pipeline around it right so",
    "start": "950040",
    "end": "956580"
  },
  {
    "text": "source repo pipeline deployment production stage etc has anyone used",
    "start": "956580",
    "end": "962130"
  },
  {
    "text": "code star okay not enough people code star is a really cool service we bought",
    "start": "962130",
    "end": "968760"
  },
  {
    "text": "it out last year and we load it up here how's the size at the back you see you",
    "start": "968760",
    "end": "974880"
  },
  {
    "text": "sit down it's good okay so code store allows you to create new",
    "start": "974880",
    "end": "980310"
  },
  {
    "text": "software projects on AWS and it automatically instills all the best practices around CI CD etc when you",
    "start": "980310",
    "end": "987030"
  },
  {
    "text": "first go into it you get a screen that says hey what's your technology stack so in this case I get a load of choices on",
    "start": "987030",
    "end": "993360"
  },
  {
    "text": "what type of app am I gonna write so is it an Alexa skill or a web service or something umm what programming language",
    "start": "993360",
    "end": "1000410"
  },
  {
    "text": "do I want to use and then what's my deployment technology at the bottom there if you can see it so Beanstalk ec2",
    "start": "1000410",
    "end": "1006950"
  },
  {
    "text": "lambda in this case I'm gonna pick a web service ridden in nodejs and deployed to lambda so you can see",
    "start": "1006950",
    "end": "1014840"
  },
  {
    "text": "this is gonna create me an example Express app and I give it a project name",
    "start": "1014840",
    "end": "1021400"
  },
  {
    "text": "my loft and demo and then when I click create project it's gonna do a few",
    "start": "1021400",
    "end": "1027410"
  },
  {
    "text": "things for me it's gonna create me a source repo a git repo in AWS Co commit",
    "start": "1027410",
    "end": "1032688"
  },
  {
    "text": "it's gonna create me a build environment using code build that's gonna build my Sam environment build my you know maybe",
    "start": "1032689",
    "end": "1039410"
  },
  {
    "text": "if I'm using Java or something I can use that to build and create the bundle then",
    "start": "1039410",
    "end": "1044688"
  },
  {
    "text": "it's gonna set up deployment automatically with AWS Sam and cloud formation and monitoring and it's gonna",
    "start": "1044689",
    "end": "1050240"
  },
  {
    "text": "wrap it all in a code pipeline for me so if I just kick this off this takes about",
    "start": "1050240",
    "end": "1056810"
  },
  {
    "text": "two minutes to create an and you get some prompts on how to integrate with",
    "start": "1056810",
    "end": "1062150"
  },
  {
    "text": "your local tooling like if you happen to be using visual studio or eclipse there's some guides there to help you get it set",
    "start": "1062150",
    "end": "1067920"
  },
  {
    "text": "up I don't happen to use either of those ultimately what you're going to be interacting with here is a git repo you",
    "start": "1067920",
    "end": "1074550"
  },
  {
    "text": "check out your code you make some changes you push your code back the service here and code pipeline is going",
    "start": "1074550",
    "end": "1080880"
  },
  {
    "text": "to take your code build it and deploy it for you every time you commit so command-line tools for example will show",
    "start": "1080880",
    "end": "1087780"
  },
  {
    "text": "you how to get connected to the git repo and I'm just going to get ready to check that out when that's created",
    "start": "1087780",
    "end": "1095360"
  },
  {
    "text": "[Applause]",
    "start": "1096820",
    "end": "1100059"
  },
  {
    "text": "okay I did time this before it took about one minute ten okay look now there",
    "start": "1105330",
    "end": "1117539"
  },
  {
    "text": "we go cool so this has created me my git repo",
    "start": "1117539",
    "end": "1124350"
  },
  {
    "text": "and I can just get climb that",
    "start": "1124350",
    "end": "1128749"
  },
  {
    "text": "and make that a bit bigger Foy okay so love demo have a look what is created",
    "start": "1134320",
    "end": "1142990"
  },
  {
    "text": "for me so within my source repo I've got a template got llamo this is my Sam",
    "start": "1142990",
    "end": "1149020"
  },
  {
    "text": "template that is written for me it's gonna be quite a simple one to start off with but we can iterate on this and build on it I've got my index J s that's",
    "start": "1149020",
    "end": "1156100"
  },
  {
    "text": "a file that is created for me with a lambda function in it it's open this up",
    "start": "1156100",
    "end": "1161170"
  },
  {
    "text": "in an idea and take a look",
    "start": "1161170",
    "end": "1164370"
  },
  {
    "text": "so our Sam template that it's created just hide that it's pretty simple to",
    "start": "1170140",
    "end": "1178100"
  },
  {
    "text": "start off with we've got a lambda function in here called hello world he's running with no js' and it's been given",
    "start": "1178100",
    "end": "1185450"
  },
  {
    "text": "a default role so Sam's gonna set up a load of permissions for us and we can go in and modify those if we want our",
    "start": "1185450",
    "end": "1190460"
  },
  {
    "text": "lambda function to be able to do more in the future and it's set up a couple of API events for us so a post and a get request if we",
    "start": "1190460",
    "end": "1199520"
  },
  {
    "text": "look in the actual lambda function itself this isn't the one I wanted to",
    "start": "1199520",
    "end": "1206450"
  },
  {
    "text": "create [Applause]",
    "start": "1206450",
    "end": "1211909"
  },
  {
    "text": "so I think I selected the wrong project in code Starling so the lambda function",
    "start": "1213590",
    "end": "1221050"
  },
  {
    "text": "index J s looks like this when you first",
    "start": "1221050",
    "end": "1226520"
  },
  {
    "text": "open it remove some of that okay that's",
    "start": "1226520",
    "end": "1235430"
  },
  {
    "text": "what it looks like when you first check out your new project so what it's doing here is it's opening up a file from the",
    "start": "1235430",
    "end": "1240500"
  },
  {
    "text": "file system the index dot HTML and it's just playing it back out it's giving it a HTTP stays code and for the body it's",
    "start": "1240500",
    "end": "1247340"
  },
  {
    "text": "just going to put the file content so in terms of normal development I could go",
    "start": "1247340",
    "end": "1252980"
  },
  {
    "text": "and make changes to this commit it back into version control and code starts going to go and deploy it for me I'm",
    "start": "1252980",
    "end": "1259340"
  },
  {
    "text": "going to show you my local development stuff that I was talking about the Sam local stuff here so in github we've got",
    "start": "1259340",
    "end": "1267260"
  },
  {
    "text": "Sam local you just search Google for Sam local or the repos there and this this",
    "start": "1267260",
    "end": "1274910"
  },
  {
    "text": "is the same local binary it's always a CLI based tool the only dependency you need before you install it is docker so",
    "start": "1274910",
    "end": "1282380"
  },
  {
    "text": "you install dr. on your local machine you don't need any containers or anything you don't need to pull any special images Sam locals gonna do that",
    "start": "1282380",
    "end": "1288410"
  },
  {
    "text": "for you and you can install this CLI tool just with NPM install - g for",
    "start": "1288410",
    "end": "1294710"
  },
  {
    "text": "global AWS and local on your machine so really simple installation Windows Linux Mac and what this allows me to do if I",
    "start": "1294710",
    "end": "1302990"
  },
  {
    "text": "go back to my IDE and just open up a terminal here run Sam local start API this is gonna go",
    "start": "1302990",
    "end": "1310940"
  },
  {
    "text": "away it's gonna fetch that docker container for me the first time for the nodejs runtime and then it's gonna mount",
    "start": "1310940",
    "end": "1317450"
  },
  {
    "text": "my lambda functions as described in my Sam template on a local HTTP server so I",
    "start": "1317450",
    "end": "1323420"
  },
  {
    "text": "can now go and click on this link open it up in a browser and we've got off first over this application here right",
    "start": "1323420",
    "end": "1330080"
  },
  {
    "text": "all running on my local machine and actually if I wanted to maybe add some",
    "start": "1330080",
    "end": "1335720"
  },
  {
    "text": "logging in here so console dot log here okay and then just hit that back in the",
    "start": "1335720",
    "end": "1343160"
  },
  {
    "text": "browser again I can see back in way terminal here actually the logs of the",
    "start": "1343160",
    "end": "1349580"
  },
  {
    "text": "lambda runtime so I can see my debug log there where I said here and I can see things like how much memory used and how",
    "start": "1349580",
    "end": "1356270"
  },
  {
    "text": "long it took to execute so really really nice for that quick local development iterative cycle let me show you",
    "start": "1356270",
    "end": "1363860"
  },
  {
    "text": "something else you can do as well so I mentioned debugging and how to actually put breakpoints in your code and do",
    "start": "1363860",
    "end": "1370100"
  },
  {
    "text": "local debugging if I go back to the Sam local page there's a section in here",
    "start": "1370100",
    "end": "1375470"
  },
  {
    "text": "that shows exactly how to set up debugging so I'm not going to dwell on it too much here but in my idea in",
    "start": "1375470",
    "end": "1381770"
  },
  {
    "text": "Visual Studio code there's a small section you can copy and put it in as a launch configuration and it's just going",
    "start": "1381770",
    "end": "1388100"
  },
  {
    "text": "to attach to a local debugger so if I go into the debugger here and hit play I've",
    "start": "1388100",
    "end": "1398570"
  },
  {
    "text": "already pasted that in there so what I need to do is actually start Sam local with a debug flag to tell it",
    "start": "1398570",
    "end": "1405560"
  },
  {
    "text": "what port to listen on so there's - - debug port and you specify a debug port",
    "start": "1405560",
    "end": "1411380"
  },
  {
    "text": "and then it's gonna start listening okay",
    "start": "1411380",
    "end": "1420010"
  },
  {
    "text": "so if I run that it's gonna run exactly the same come on it's going to mount all my HTTP functions and but this time with",
    "start": "1420010",
    "end": "1426920"
  },
  {
    "text": "the debugger so when I first hit my lambda function in the browser it's gonna stop execution of my lambda",
    "start": "1426920",
    "end": "1432260"
  },
  {
    "text": "function right within that container it's gonna halt the execution and then I can go and attach my debugger and walk",
    "start": "1432260",
    "end": "1438260"
  },
  {
    "text": "through the code and step through and place breakpoints for example so I've got my function there running I hit it",
    "start": "1438260",
    "end": "1445970"
  },
  {
    "text": "in the browser and just hit refresh and you'll see this just stays loading indefinitely right that's because the",
    "start": "1445970",
    "end": "1451460"
  },
  {
    "text": "execution of my lambda function has been halted so if I was to go back in now and say attach to some local okay I've now",
    "start": "1451460",
    "end": "1460490"
  },
  {
    "text": "got a breakpoint that's hit close my terminal make it a bit easier to see so",
    "start": "1460490",
    "end": "1466280"
  },
  {
    "text": "my function ran there I didn't put a breakpoint in let's put a breakpoint here and let's just hit that again",
    "start": "1466280",
    "end": "1476139"
  },
  {
    "text": "reattach my debugger okay so now I've got my break point and this break points",
    "start": "1476620",
    "end": "1482230"
  },
  {
    "text": "just been hit and in within my IDE I can actually go and diagnose this problem and now hover over and see what contents",
    "start": "1482230",
    "end": "1488590"
  },
  {
    "text": "is for example okay I can see that's some big you know arbitrary array of",
    "start": "1488590",
    "end": "1493929"
  },
  {
    "text": "binary data in this case because it's just read from the file but this is really cool this allows you to debug and",
    "start": "1493929",
    "end": "1499480"
  },
  {
    "text": "diagnose your issues within your lambda function just as you would in a traditional development environment",
    "start": "1499480",
    "end": "1504809"
  },
  {
    "text": "what's interesting here is this isn't just with this idea I'm using this uses",
    "start": "1504809",
    "end": "1511090"
  },
  {
    "text": "standard nodejs debugging or Python or Java debugging processes so any tooling that you might have to do debugging",
    "start": "1511090",
    "end": "1517120"
  },
  {
    "text": "today with those should work straight away with this additionally the other",
    "start": "1517120",
    "end": "1522279"
  },
  {
    "text": "bit of code store what it's created for me hopefully now so code start when when",
    "start": "1522279",
    "end": "1529179"
  },
  {
    "text": "I created my project it created a code pipeline for me and you can see this on the right hand side here it's automatically being set up so",
    "start": "1529179",
    "end": "1536320"
  },
  {
    "text": "that whenever a source commits happens it's gonna go and build my project in its kind of deploy it automatically and",
    "start": "1536320",
    "end": "1541510"
  },
  {
    "text": "you can go and check on status and progress in here and dive a bit deeper it's gonna set things up like automatic",
    "start": "1541510",
    "end": "1547600"
  },
  {
    "text": "monitoring so with service you get a load of monitoring baked in in cloud watch this creates a nice little",
    "start": "1547600",
    "end": "1552610"
  },
  {
    "text": "dashboard for you you can also really easily add team members into this so it",
    "start": "1552610",
    "end": "1557770"
  },
  {
    "text": "really quickly gets them up and started so this is code star highly recommend",
    "start": "1557770",
    "end": "1563980"
  },
  {
    "text": "you ever play with it it's a really easy way of starting a service project so",
    "start": "1563980",
    "end": "1570730"
  },
  {
    "text": "let's have a look at what we just deployed so our our Sam template had a",
    "start": "1570730",
    "end": "1576340"
  },
  {
    "text": "lambda function me I had API gateway in front of it and it could potentially be talking to other AWS services like",
    "start": "1576340",
    "end": "1582940"
  },
  {
    "text": "dynamo or any any other AWS services or third-party services from the lambda code just to really quickly go through",
    "start": "1582940",
    "end": "1590799"
  },
  {
    "text": "some of the benefits of these different key components here API gateway is a really really nice way of fronting",
    "start": "1590799",
    "end": "1597669"
  },
  {
    "text": "something and that something could be a lambda function it could be an existing monolithic application maybe that you",
    "start": "1597669",
    "end": "1602770"
  },
  {
    "text": "have with an API to it's really good for you breaking out the monolith if you've",
    "start": "1602770",
    "end": "1607960"
  },
  {
    "text": "got this big monolithic application and you just want to spread out say slash products to a new micro service really easily done with",
    "start": "1607960",
    "end": "1614110"
  },
  {
    "text": "API gateway it includes things like DDoS mitigation and protection automatically",
    "start": "1614110",
    "end": "1619330"
  },
  {
    "text": "right so under the hood it's using cloud front you get all the DDoS mitigation benefits of cloud front in front of your",
    "start": "1619330",
    "end": "1625630"
  },
  {
    "text": "API automatically you can do things like authentication and authorization I'm not",
    "start": "1625630",
    "end": "1630970"
  },
  {
    "text": "going to cover those here because we've got some slides on that coming up it also allows you to really easily set up throttles metering logging metrics",
    "start": "1630970",
    "end": "1638500"
  },
  {
    "text": "graphing on your API endpoints so you can really easily set up a monetization",
    "start": "1638500",
    "end": "1643900"
  },
  {
    "text": "model for your API if you want we create usage plans for your consumers like if they you know maybe one person gets a",
    "start": "1643900",
    "end": "1650680"
  },
  {
    "text": "gold membership to your API and they can do 100 requests a second or a million a month or whatever lambda you saw us",
    "start": "1650680",
    "end": "1659530"
  },
  {
    "text": "using lambda a minute ago but upload your functions we run in that scale for you and supports a couple of languages",
    "start": "1659530",
    "end": "1665620"
  },
  {
    "text": "you've got no js' Java Python c-sharp you can also bring your own libraries so",
    "start": "1665620",
    "end": "1672220"
  },
  {
    "text": "it works pretty transparently with Sam as well but if you're using third-party libraries in nodejs or Python for",
    "start": "1672220",
    "end": "1678640"
  },
  {
    "text": "example then you can bring those in and install them just as you normally would with em Pierre Moss you know people",
    "start": "1678640",
    "end": "1684400"
  },
  {
    "text": "whatever you use and Sam's going to bundle them up and deploy them for you so just because you're using lambda it",
    "start": "1684400",
    "end": "1690160"
  },
  {
    "text": "doesn't mean you have to give up all your dependencies etc and libraries lambda supports either synchronous or",
    "start": "1690160",
    "end": "1697360"
  },
  {
    "text": "asynchronous invocation so synchronous would be for example an API call HTTP",
    "start": "1697360",
    "end": "1702700"
  },
  {
    "text": "requests coming in waiting for a response and the lambda function and coming back out again that synchronous flow but it also supports asynchronous",
    "start": "1702700",
    "end": "1709660"
  },
  {
    "text": "models things like uploading to an s3 bucket triggers a lambda function that could do something in an asynchronous",
    "start": "1709660",
    "end": "1715240"
  },
  {
    "text": "manner up here you have a very simple resource model with AWS lambda so when",
    "start": "1715240",
    "end": "1723940"
  },
  {
    "text": "you're considering your lambda function there's there's a setting for power basically we call it memory and you can",
    "start": "1723940",
    "end": "1730150"
  },
  {
    "text": "choose between 128 to 1.5 gig actually a really good tip here is behind the",
    "start": "1730150",
    "end": "1735370"
  },
  {
    "text": "scenes this also controls how much CPU and network your functions gonna get as well so if you know your functions gonna",
    "start": "1735370",
    "end": "1741760"
  },
  {
    "text": "be quite network heavy or quite memory or quite CPU heavy give it more memory it will get more it will get more of all",
    "start": "1741760",
    "end": "1748480"
  },
  {
    "text": "of those proportionally in terms of",
    "start": "1748480",
    "end": "1753610"
  },
  {
    "text": "authoring functions you get WYSIWYG editor within the lambda console a lot of you probably started with that in",
    "start": "1753610",
    "end": "1759340"
  },
  {
    "text": "first experimentations with with lambda but it also supports all this third-party tooling and the stuff I've",
    "start": "1759340",
    "end": "1765100"
  },
  {
    "text": "shown you hopefully it should be a really normal programming model for you",
    "start": "1765100",
    "end": "1770830"
  },
  {
    "text": "so you're free to use processes and threads as you normally would in your code actually you get access to slash",
    "start": "1770830",
    "end": "1777730"
  },
  {
    "text": "temp as well on the machine so behind the scenes this is just the Linux machine behind the scenes so if you want",
    "start": "1777730",
    "end": "1784330"
  },
  {
    "text": "to bring your own compiled binaries for example like C++ binaries or something that you want to execute from within",
    "start": "1784330",
    "end": "1790150"
  },
  {
    "text": "your lambda function you can do that as well just upload them in your package right and then call them out shell out",
    "start": "1790150",
    "end": "1795670"
  },
  {
    "text": "to them from your lambda function and you'll find that if it's been built for Amazon Linux it will be able to run",
    "start": "1795670",
    "end": "1801040"
  },
  {
    "text": "within lambda as well so really cool tip there you're getting all the monitoring and logging with cloud watch and cloud",
    "start": "1801040",
    "end": "1807610"
  },
  {
    "text": "watch logs built-in like centralized logging ultimately you should be designing your lambda functions to be",
    "start": "1807610",
    "end": "1813880"
  },
  {
    "text": "stateless lambda functions carry no guarantees about where they're gonna run which which machine etcetera they're",
    "start": "1813880",
    "end": "1819700"
  },
  {
    "text": "going to run on they should be completely stateless use things like radius or dynamodb or something if you",
    "start": "1819700",
    "end": "1825940"
  },
  {
    "text": "need persistent store or s3 for example but don't don't use the local file",
    "start": "1825940",
    "end": "1831520"
  },
  {
    "text": "system for persistent storage basically or memory there so we talked quite a bit",
    "start": "1831520",
    "end": "1838660"
  },
  {
    "text": "about deploying lambda and actually setting up and CI CD etc and development",
    "start": "1838660",
    "end": "1844600"
  },
  {
    "text": "frameworks one thing I wanted to cover as well is something that comes up quite often when we talk about lambda development and specifically with api's",
    "start": "1844600",
    "end": "1850960"
  },
  {
    "text": "is how do I secure my API we're we were saying at AWS that security is job zero",
    "start": "1850960",
    "end": "1856660"
  },
  {
    "text": "right it's it's right up there so I'm going to talk you through some of the best practices for security when it",
    "start": "1856660",
    "end": "1862510"
  },
  {
    "text": "comes to Cerberus api's if we look back at our graph that we had a minute ago we",
    "start": "1862510",
    "end": "1868750"
  },
  {
    "text": "had our mobile web bar we had internet API gateway there's a lot of different places in this that you can secure the",
    "start": "1868750",
    "end": "1875290"
  },
  {
    "text": "flow of traffic so on the left-hand side between the client and to the Internet right you've",
    "start": "1875290",
    "end": "1882440"
  },
  {
    "text": "got HTTP TLS from your client so you can have encryption in transit at that gap",
    "start": "1882440",
    "end": "1888080"
  },
  {
    "text": "there between the internet and API gateway there you can put in place really flexible authentication",
    "start": "1888080",
    "end": "1893480"
  },
  {
    "text": "authorization rate limiting rattling DDoS mitigation etc with API gateway",
    "start": "1893480",
    "end": "1898730"
  },
  {
    "text": "these are some of the features of the API gateway product between API gateway",
    "start": "1898730",
    "end": "1904340"
  },
  {
    "text": "and lambda there's a policy that says hey for my lambda function this API",
    "start": "1904340",
    "end": "1910039"
  },
  {
    "text": "gateway is allowed to talk to it and invoke it and normally this policy set up automatically for you like Sam's",
    "start": "1910039",
    "end": "1915799"
  },
  {
    "text": "gonna set this up automatically but just know that it exists right you may want to go in there and tweak that at some",
    "start": "1915799",
    "end": "1921860"
  },
  {
    "text": "point in the future between your lambda function and other AWS services you've",
    "start": "1921860",
    "end": "1927620"
  },
  {
    "text": "got I am so when you create a lambda function you can assign it an iam role and that way you can give it really",
    "start": "1927620",
    "end": "1934340"
  },
  {
    "text": "fine-grained permissions to say hey my lambda function I want it to be able to access s3 but only these buckets and",
    "start": "1934340",
    "end": "1941149"
  },
  {
    "text": "only only put items not get for example maybe I want dynamodb but only on this",
    "start": "1941149",
    "end": "1946549"
  },
  {
    "text": "row in the table it can be really granular at that point as well I don't just leave that as a wide-open admin",
    "start": "1946549",
    "end": "1952220"
  },
  {
    "text": "policy in your lambda function can do anything I've seen it then do it yes",
    "start": "1952220",
    "end": "1959980"
  },
  {
    "text": "yes yes no no no it's not it's not",
    "start": "1964150",
    "end": "1975830"
  },
  {
    "text": "playing tape so we when you configure a trigger basically on API gateway says from the",
    "start": "1975830",
    "end": "1983150"
  },
  {
    "text": "Internet to API gateway agent from from cloud front so cloud front would yeah",
    "start": "1983150",
    "end": "1988820"
  },
  {
    "text": "yep so that's that's managed for you right with that integration that's that's",
    "start": "1988820",
    "end": "1995150"
  },
  {
    "text": "taken care of on the AWS bit of the shared responsibility model okay cool so",
    "start": "1995150",
    "end": "2002680"
  },
  {
    "text": "some of the mechanisms for adding authentication authorization to your API",
    "start": "2002680",
    "end": "2008070"
  },
  {
    "text": "so I am permissions we mentioned using iam policies and permissions to grant",
    "start": "2008070",
    "end": "2013210"
  },
  {
    "text": "access you also have things like custom authorizes and user pools which you can",
    "start": "2013210",
    "end": "2018610"
  },
  {
    "text": "use together to create a really really good authentication story for your api's",
    "start": "2018610",
    "end": "2024600"
  },
  {
    "text": "so if you haven't seen kognito user pools before this is a managed identity provider right so back when i run a few",
    "start": "2024600",
    "end": "2033130"
  },
  {
    "text": "startups in my life and normally one of the first development tasks was create that table in the database where the",
    "start": "2033130",
    "end": "2038140"
  },
  {
    "text": "users are going to live right and look up on you know how can use how best to secure passwords in whatever year it is",
    "start": "2038140",
    "end": "2045100"
  },
  {
    "text": "now right this is a lot of risk for a start-up to take on or any company to take on Cognito user forces and managed",
    "start": "2045100",
    "end": "2052030"
  },
  {
    "text": "offering managed by AWS in this space to basically store and authenticate and",
    "start": "2052030",
    "end": "2057100"
  },
  {
    "text": "identify all of your users so it's very",
    "start": "2057100",
    "end": "2062169"
  },
  {
    "text": "low cost it as a free tier of 50,000 monthly active users so your identity pool could have hundreds of thousands",
    "start": "2062170",
    "end": "2068889"
  },
  {
    "text": "millions of users in it but actually it's build based on monthly active users and if your monthly active users is less",
    "start": "2068890",
    "end": "2075340"
  },
  {
    "text": "than 50,000 it's completely free it's within the free tier and then the billion grows from them so it's a really",
    "start": "2075340",
    "end": "2082600"
  },
  {
    "text": "easy way to get them started with a user direct to an identity provider in the AWS platform and it's got some really",
    "start": "2082600",
    "end": "2088300"
  },
  {
    "text": "cool security features built in as well so one of the things that can do is host your UI for you for sign up and sign in",
    "start": "2088300",
    "end": "2095679"
  },
  {
    "text": "some companies may want that when you first get started provides a really easy integration experience just use our UI",
    "start": "2095679",
    "end": "2101109"
  },
  {
    "text": "you can customize it a bit sometimes you may want to use your own UI so you can",
    "start": "2101109",
    "end": "2106480"
  },
  {
    "text": "do that too it's got an API you can interact with it by the API ultimately it's gonna be storing the use of profile",
    "start": "2106480",
    "end": "2112480"
  },
  {
    "text": "data but it's going to do some quite cool things around things like forgotten passwords right so you shouldn't have to",
    "start": "2112480",
    "end": "2119440"
  },
  {
    "text": "code The Forgotten password routine Camino user pools will do that for you when a user hits that link for forgotten",
    "start": "2119440",
    "end": "2124630"
  },
  {
    "text": "passwords we're gonna send them an email we're gonna send them a code and generate that code and help them take",
    "start": "2124630",
    "end": "2129670"
  },
  {
    "text": "them through the process of clicking the code and setting a new password and all that kind of stuff and similar for",
    "start": "2129670",
    "end": "2135220"
  },
  {
    "text": "multi-factor authentication one of the options you can just turn on with the toggle on your user pool is multi-factor",
    "start": "2135220",
    "end": "2141009"
  },
  {
    "text": "authentication when you turn this on it can be either on optional or off and this will allow your users to if it's",
    "start": "2141009",
    "end": "2148809"
  },
  {
    "text": "set to optional turn on MFA what does that mean when they log in from a brand-new device then we're gonna send",
    "start": "2148809",
    "end": "2155529"
  },
  {
    "text": "them a text message with a code a one-time password and then in your UI or our UI for login there'll be a text box",
    "start": "2155529",
    "end": "2161859"
  },
  {
    "text": "that says enter that code so it's kind of MFA modified for authentication dance we're going to take care of that for you",
    "start": "2161859",
    "end": "2167589"
  },
  {
    "text": "we're going to send that text message we're going to validate it for you the end result is a set of tokens right so",
    "start": "2167589",
    "end": "2174390"
  },
  {
    "text": "cognitive user pools as an identity provider generates tokens open ID",
    "start": "2174390",
    "end": "2179499"
  },
  {
    "text": "connect tokens with all of the users attributes like first name surname etc in there and then you can use those to",
    "start": "2179499",
    "end": "2186190"
  },
  {
    "text": "authenticate your api's and I'll show you in a bit more detail how we set up and do that so within API gateway within the console",
    "start": "2186190",
    "end": "2195220"
  },
  {
    "text": "here I'm showing the console just because it's visual but you can do it by CLI is SDKs CloudFormation etc so you",
    "start": "2195220",
    "end": "2202630"
  },
  {
    "text": "have an option on your API to create an authorizer this will decide who's allowed into your API on what they can",
    "start": "2202630",
    "end": "2208989"
  },
  {
    "text": "access so a really easy option here is just to select the Cognito user pool",
    "start": "2208989",
    "end": "2214089"
  },
  {
    "text": "authorizer and then just specify your user pool so just pick up from a drop-down what this is going to do is",
    "start": "2214089",
    "end": "2220749"
  },
  {
    "text": "make sure that only people who pass in a token in that authorization header in",
    "start": "2220749",
    "end": "2225789"
  },
  {
    "text": "this case only people that pass in a token there's been issued by that particular",
    "start": "2225789",
    "end": "2230890"
  },
  {
    "text": "kognito user pool we'll be able to access your API everyone else gonna get 403 not allowed in go away so this is a",
    "start": "2230890",
    "end": "2238930"
  },
  {
    "text": "really easy way to you know put that front door in front of your API but there is a bit of a limitation here its",
    "start": "2238930",
    "end": "2244750"
  },
  {
    "text": "supports authentication but this person is a user from my user pool but it doesn't allow you to do authorization",
    "start": "2244750",
    "end": "2251140"
  },
  {
    "text": "you can't say okay this user connects has these bits of the API but maybe this user is an admin user and they can",
    "start": "2251140",
    "end": "2257170"
  },
  {
    "text": "access a bit more of the API so there's kind of a trade-off here between really simple to set up but a bit limited in",
    "start": "2257170",
    "end": "2263500"
  },
  {
    "text": "terms of authorization if you need more flexible authorization there's something",
    "start": "2263500",
    "end": "2270550"
  },
  {
    "text": "called a custom authorizer an api gateway and this sits if you look back to our original diagram here this is",
    "start": "2270550",
    "end": "2277510"
  },
  {
    "text": "here and this this is api gateway when a request comes in it was fire off a",
    "start": "2277510",
    "end": "2284230"
  },
  {
    "text": "request to the custom authorize a function the custom authorizer takes an input right it takes the HTTP request",
    "start": "2284230",
    "end": "2291190"
  },
  {
    "text": "and details around it things like that head of the authorization header where you might have a token or maybe some",
    "start": "2291190",
    "end": "2296680"
  },
  {
    "text": "other headers that you use today for your own authentication and this lambda function is job the logic it needs to do",
    "start": "2296680",
    "end": "2304270"
  },
  {
    "text": "is to decide it's this person who they say they are right so we cook media user pools it can go away to cook needy user",
    "start": "2304270",
    "end": "2310630"
  },
  {
    "text": "pools and validate that the tokens valid or something if you're using it for your own authentication systems you know",
    "start": "2310630",
    "end": "2317350"
  },
  {
    "text": "maybe connecting it to your own existing IDPs or backends then you need to make sure it can authenticate the person and",
    "start": "2317350",
    "end": "2323770"
  },
  {
    "text": "know who they are the response from this lambda function needs to be a policy looks at a lot like an IM policy that",
    "start": "2323770",
    "end": "2330970"
  },
  {
    "text": "says okay this user can access these specific API endpoints so maybe they can",
    "start": "2330970",
    "end": "2336310"
  },
  {
    "text": "access a get request on their user profile but deny them access to an admin",
    "start": "2336310",
    "end": "2341860"
  },
  {
    "text": "page or something just as an example here so because this lambda function the custom authorizer is something that you",
    "start": "2341860",
    "end": "2347950"
  },
  {
    "text": "write yes",
    "start": "2347950",
    "end": "2351329"
  },
  {
    "text": "good question good question so the question for those on Twitch and those who didn't hear it",
    "start": "2353550",
    "end": "2359290"
  },
  {
    "text": "is it possible for that customer authorize a function to get throttled yes yes it is and you don't want to put",
    "start": "2359290",
    "end": "2367090"
  },
  {
    "text": "a lambda function that you know may have a cold start with something or may get spotted in the critical path of every",
    "start": "2367090",
    "end": "2373300"
  },
  {
    "text": "single API call so Cognito doesn't do that API gateway doesn't do that what it will do is for",
    "start": "2373300",
    "end": "2378820"
  },
  {
    "text": "the particular requests coming into the function so imagine you got a token in the HTTP header the authorization header",
    "start": "2378820",
    "end": "2385180"
  },
  {
    "text": "and it's got a token in it it will cache the response of that custom authorizing function for that token so that's why",
    "start": "2385180",
    "end": "2392710"
  },
  {
    "text": "it's important to say everything that users allowed to access in the response policy that's generated by the custom",
    "start": "2392710",
    "end": "2398950"
  },
  {
    "text": "authorizing function so that is cash by default is five minutes but you can tweak that cash value as well yes so the",
    "start": "2398950",
    "end": "2411130"
  },
  {
    "text": "question is are you charged for the custom authorizer yes you are yeah this is just a standard lambda function in",
    "start": "2411130",
    "end": "2416800"
  },
  {
    "text": "your account you create it in the same way you create any other lambda function it's just that you tell api gateway use",
    "start": "2416800",
    "end": "2422620"
  },
  {
    "text": "this function for my authorizer if you go into the lambda console you know when",
    "start": "2422620",
    "end": "2428980"
  },
  {
    "text": "you see all the lambda blueprints all the potential functions that are being pre-written there's a custom authorizer",
    "start": "2428980",
    "end": "2434380"
  },
  {
    "text": "in there so you can go and look at an example and see what the code looks like",
    "start": "2434380",
    "end": "2439770"
  },
  {
    "text": "so time back to chalice I showed you chalice earlier and how we could build an API with chalice it turns out",
    "start": "2440400",
    "end": "2447160"
  },
  {
    "text": "integrating this user pool authentication authorization into your application is really easy with chalice",
    "start": "2447160",
    "end": "2453220"
  },
  {
    "text": "so in chalice I can initiate a new authorizer objects and create a new",
    "start": "2453220",
    "end": "2458320"
  },
  {
    "text": "column it up Musa pool authorize so that we've imported here I provided the details of my Cognito user pool just the",
    "start": "2458320",
    "end": "2464410"
  },
  {
    "text": "art of it and then from then on I can do things like authorizer equals that",
    "start": "2464410",
    "end": "2470410"
  },
  {
    "text": "authorizer up there and I can pick and choose which of my API methods I want to Front with that authorizer so I can be",
    "start": "2470410",
    "end": "2476830"
  },
  {
    "text": "selective here and just with a couple of lines of code stick that full authentication authorization in front of",
    "start": "2476830",
    "end": "2482500"
  },
  {
    "text": "my API so that's the end of my talk hopefully",
    "start": "2482500",
    "end": "2489120"
  },
  {
    "text": "from this talk you have a good idea of the best practices around building and",
    "start": "2489120",
    "end": "2494970"
  },
  {
    "text": "developing and testing lambda and serverless projects using things like Sam code start to generate your code",
    "start": "2494970",
    "end": "2502290"
  },
  {
    "text": "pipeline for you Sam you can actually integrate with your own hauling right if you don't want to use any of that you",
    "start": "2502290",
    "end": "2507660"
  },
  {
    "text": "can integrate it with Jenkins etc or whatever you're using as long as it supports initiating CLI commands so we",
    "start": "2507660",
    "end": "2516270"
  },
  {
    "text": "talked about how service you know you have no management of servers you're only paying for what you're using with",
    "start": "2516270",
    "end": "2521340"
  },
  {
    "text": "the power to instantly scale up right I've shown you the tooling that you can use to actually create your first service project within minutes and get",
    "start": "2521340",
    "end": "2530190"
  },
  {
    "text": "all that sort of baked in security and high availability there's a couple of useful resources I wanted to call out",
    "start": "2530190",
    "end": "2535980"
  },
  {
    "text": "here the first is our service portal so on the AWS website we have a whole section",
    "start": "2535980",
    "end": "2543060"
  },
  {
    "text": "dedicated was created quite recently dedicated towards service development resources helping you get started a load",
    "start": "2543060",
    "end": "2549450"
  },
  {
    "text": "different tutorials reference architectures partners that you can get in contact with to help with your projects if you want and we also have a",
    "start": "2549450",
    "end": "2557070"
  },
  {
    "text": "section as well that's dedicated to more the developer tooling side of it so see ICD and Sam and those frameworks so the",
    "start": "2557070",
    "end": "2565350"
  },
  {
    "text": "slides are gonna be shared anyway afterwards but you're free to take a picture one thing I don't think I saw",
    "start": "2565350",
    "end": "2572430"
  },
  {
    "text": "the slide come up on this this did I skip past this slide I shouldn't have",
    "start": "2572430",
    "end": "2578040"
  },
  {
    "text": "this is really cool there's $50 in AWS credits available if you use code stock",
    "start": "2578040",
    "end": "2583980"
  },
  {
    "text": "spin up that exact same on example that I just did right and click the tweet'",
    "start": "2583980",
    "end": "2588990"
  },
  {
    "text": "link is that that icon there that's gonna create a tweet for you that says I've just created my first service",
    "start": "2588990",
    "end": "2595290"
  },
  {
    "text": "application and then just pop that in a form and you get $50 free are your birth credits just for playing around in",
    "start": "2595290",
    "end": "2601590"
  },
  {
    "text": "experimenting because hey experimentation is good right okay",
    "start": "2601590",
    "end": "2607530"
  },
  {
    "text": "that's everything for me it's a really QA it looks like there may be some on",
    "start": "2607530",
    "end": "2614160"
  },
  {
    "text": "twitch but before I do that is there any cute in the room I'm gonna go back there cuz",
    "start": "2614160",
    "end": "2619580"
  },
  {
    "text": "I saw you first No",
    "start": "2619580",
    "end": "2626180"
  },
  {
    "text": "so in front of your API one one of the yeah yeah I was just gonna so the",
    "start": "2626180",
    "end": "2633080"
  },
  {
    "text": "question was is it possible to front your API with I am authentication and the customer authorizer",
    "start": "2633080",
    "end": "2638780"
  },
  {
    "text": "so those are two options that you have available to you unfortunately it's not but I'm happy to take that back as a",
    "start": "2638780",
    "end": "2643940"
  },
  {
    "text": "feature request to the team yes sir",
    "start": "2643940",
    "end": "2650380"
  },
  {
    "text": "yep so the question was any tips on how to isolate and run service projects in",
    "start": "2654340",
    "end": "2661730"
  },
  {
    "text": "multiple different environments prod UAT staging etc and this is where Sam",
    "start": "2661730",
    "end": "2667130"
  },
  {
    "text": "becomes really powerful because Sam is just cloud formation you're able to just inject it into different AWS accounts",
    "start": "2667130",
    "end": "2673730"
  },
  {
    "text": "and run and deploy that same Sam package into multiple accounts if you're separating by accounts or you know you",
    "start": "2673730",
    "end": "2682310"
  },
  {
    "text": "can deploy multiple times into the same AWS account and just give it a different stack name in cloud formation so it has",
    "start": "2682310",
    "end": "2689660"
  },
  {
    "text": "built-in ability to isolate by cloud formation basically yes sir",
    "start": "2689660",
    "end": "2697390"
  },
  {
    "text": "yep",
    "start": "2703820",
    "end": "2706600"
  },
  {
    "text": "yep so the question was does Sam tie me to a single repo am i able to at a later",
    "start": "2709360",
    "end": "2716450"
  },
  {
    "text": "date split out my service my lambda function my Sam project into multiple repos absolutely right you can just take",
    "start": "2716450",
    "end": "2723110"
  },
  {
    "text": "your functions out of that template and move them to another template really easily and they can be across multiple repos there you would just deploy them",
    "start": "2723110",
    "end": "2729980"
  },
  {
    "text": "as two different cloud formation stacks",
    "start": "2729980",
    "end": "2733420"
  },
  {
    "text": "that's a good question I haven't had that before and so the question was when I deploy a Sam template Sam is a",
    "start": "2747410",
    "end": "2753440"
  },
  {
    "text": "transform on cloud formation it's a simplified way of describing cloud formation when I've deployed one if I look in the cloud formation console you",
    "start": "2753440",
    "end": "2760250"
  },
  {
    "text": "see the big template that it's been expanded out to the full cloud formation template is there a way of getting back",
    "start": "2760250",
    "end": "2765710"
  },
  {
    "text": "the old template I mean you should have it in version control right that should",
    "start": "2765710",
    "end": "2770720"
  },
  {
    "text": "be the artifact that you're working with every day I'm not sure I'd have to check on that come find me afterwards and",
    "start": "2770720",
    "end": "2776480"
  },
  {
    "text": "whatever play and see what we can do the",
    "start": "2776480",
    "end": "2781819"
  },
  {
    "text": "link is not working ok damn it",
    "start": "2781819",
    "end": "2787270"
  },
  {
    "text": "ok I'm not gonna be able to do much about that if you are interested come",
    "start": "2787270",
    "end": "2793130"
  },
  {
    "text": "find me and I'll try and help everyone afterwards let's do some one this side the room because we've been mainly focused on that side so far",
    "start": "2793130",
    "end": "2800920"
  },
  {
    "text": "so the question I missed the beginning of question was it with Sam how do you do in code star so code star you can",
    "start": "2807320",
    "end": "2815780"
  },
  {
    "text": "take that pipeline that gets created the one that was on the right hand side by default when you deploy a code star",
    "start": "2815780",
    "end": "2821630"
  },
  {
    "text": "project it's just going to create a protein vironment just one environment for you basically you can extend that",
    "start": "2821630",
    "end": "2827510"
  },
  {
    "text": "code pipeline you can actually have it deploy multiple environments as well there so just go into the AWS code",
    "start": "2827510",
    "end": "2833510"
  },
  {
    "text": "pipeline console find the pipeline it's created and actually just add a new stage in their new environment in there",
    "start": "2833510",
    "end": "2840940"
  },
  {
    "text": "so normally you would the Sam artifact that you create your Sam package that",
    "start": "2841720",
    "end": "2847250"
  },
  {
    "text": "you build is a single artifact that you would deploy to multiple environments so the environment handling isn't baked",
    "start": "2847250",
    "end": "2852920"
  },
  {
    "text": "into Sam it's actually deliberately separate so the pipeline is what defines",
    "start": "2852920",
    "end": "2858140"
  },
  {
    "text": "multiple environments and allows you to deploy to multiple environments yeah",
    "start": "2858140",
    "end": "2865430"
  },
  {
    "text": "yeah the the pipe the code pipeline you can actually export or import as a",
    "start": "2865430",
    "end": "2870620"
  },
  {
    "text": "template adjacent template so your whole CI CD pipeline you can stick it in version control and we'd recommend that",
    "start": "2870620",
    "end": "2876200"
  },
  {
    "text": "right so you get some versioning around that okay but at least that means I",
    "start": "2876200",
    "end": "2884930"
  },
  {
    "text": "won't have a deluge of people coming up to me off to isn't there's my $50 yes at",
    "start": "2884930",
    "end": "2890240"
  },
  {
    "text": "the back server-to-server there are no",
    "start": "2890240",
    "end": "2898490"
  },
  {
    "text": "servers yeah so to Micra services and",
    "start": "2898490",
    "end": "2903740"
  },
  {
    "text": "how do you get them to talk to each other this is where the I am authentication really comes in place so I show custom authorizers here but",
    "start": "2903740",
    "end": "2910790"
  },
  {
    "text": "actually the other option on API gateway is I am authentication and this is really powerful for microcircuits to",
    "start": "2910790",
    "end": "2916610"
  },
  {
    "text": "micro service communication because you can use an I am policy on one-on-one lambda function and that I am policy can",
    "start": "2916610",
    "end": "2924230"
  },
  {
    "text": "describe what it can access so that's a good use case for using I am authentication on our API and they do",
    "start": "2924230",
    "end": "2930470"
  },
  {
    "text": "one more and then answer a few on twitch so you can it does both it does both so",
    "start": "2930470",
    "end": "2940829"
  },
  {
    "text": "you can say who can access so this lambda function in that case you know Micra service to microsomes so you say",
    "start": "2940829",
    "end": "2946290"
  },
  {
    "text": "this lambda function can access it but it can only access these bits and that's the authorization bit so using the",
    "start": "2946290",
    "end": "2952530"
  },
  {
    "text": "policy the I M policy you can describe what it can access so we have a question",
    "start": "2952530",
    "end": "2960150"
  },
  {
    "text": "here is it possible to integrate API gateway Cognito I am roles to provide authorization for",
    "start": "2960150",
    "end": "2966690"
  },
  {
    "text": "your application can use I am roles to find permission levels in your application so I think we kind of covered this you",
    "start": "2966690",
    "end": "2973710"
  },
  {
    "text": "either do a custom authorizer or you do I am or thent ocation on your API and I",
    "start": "2973710",
    "end": "2982710"
  },
  {
    "text": "think that's it do we have any others on twitch that's it okay I'm gonna be around for a couple of hours probably",
    "start": "2982710",
    "end": "2988500"
  },
  {
    "text": "just come find me if you have other questions more than happy to talk through your projects thank you very much",
    "start": "2988500",
    "end": "2995270"
  }
]