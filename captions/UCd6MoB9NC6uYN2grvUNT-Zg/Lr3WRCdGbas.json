[
  {
    "start": "0",
    "end": "396000"
  },
  {
    "text": "have you guys run into this before so Postgres okay so do you know what a null value is first of all so the idea behind",
    "start": "30",
    "end": "6690"
  },
  {
    "text": "a null is like if you're thinking about strings so I have some characters I'm",
    "start": "6690",
    "end": "11790"
  },
  {
    "text": "going to store you know maybe it has the name Jeremy maybe it has the name Divya",
    "start": "11790",
    "end": "17250"
  },
  {
    "text": "in there or it could just be an empty string right if there's no name",
    "start": "17250",
    "end": "24380"
  },
  {
    "text": "the empty string and the null are very very different in a null value so and I think that the",
    "start": "24380",
    "end": "33390"
  },
  {
    "text": "important thing to think about is that so the sequel language was designed by a",
    "start": "33390",
    "end": "38790"
  },
  {
    "text": "mathematician and there's a lot of sort of theory behind the sequel language there's two different ways to think",
    "start": "38790",
    "end": "45960"
  },
  {
    "text": "about a null value one way to think about a null is sort of probably the",
    "start": "45960",
    "end": "51300"
  },
  {
    "text": "programmer way of thinking about it if you have like a programming background as it just means that there's not a value it's like not there right that's",
    "start": "51300",
    "end": "59879"
  },
  {
    "text": "that's kind of what a null usually is like in C for example if something is null and C that means it's it's not",
    "start": "59879",
    "end": "66659"
  },
  {
    "text": "there that is not a null value and in sequel sequel has a different definition",
    "start": "66659",
    "end": "72890"
  },
  {
    "text": "what null value means and sequel is it it means I don't know what it is and",
    "start": "72890",
    "end": "78479"
  },
  {
    "text": "that's a very important distinction it",
    "start": "78479",
    "end": "83580"
  },
  {
    "text": "particularly comes in let's see what kind of slides we have here when when you sort of look at three-valued logic",
    "start": "83580",
    "end": "90799"
  },
  {
    "text": "so if let's just think about like a",
    "start": "90799",
    "end": "95820"
  },
  {
    "text": "boolean variable this is something I could probably whiteboard I'm not going to if you think out about a boolean",
    "start": "95820",
    "end": "101369"
  },
  {
    "text": "variable and let's say that I I'm doing just a simple boolean operation where I",
    "start": "101369",
    "end": "108090"
  },
  {
    "text": "say x and y and that's what I'm doing okay well if X is true and Y is true",
    "start": "108090",
    "end": "115470"
  },
  {
    "text": "then what is x and y it's true right if X is true and Y is false what does X and",
    "start": "115470",
    "end": "122790"
  },
  {
    "text": "y be false because they're not both true what if X is true and Y is null",
    "start": "122790",
    "end": "132120"
  },
  {
    "text": "but null just means there's no value well then then it would be true because I just don't have",
    "start": "132120",
    "end": "139200"
  },
  {
    "text": "anything over here so everything that I have is true and I'm doing it and right",
    "start": "139200",
    "end": "144480"
  },
  {
    "text": "what if it's saying unknown okay if it's",
    "start": "144480",
    "end": "149910"
  },
  {
    "text": "I don't know then what is X and y well actually don't know is the answer",
    "start": "149910",
    "end": "156180"
  },
  {
    "text": "because it depends on what Y is and if I don't know why as I don't know what the answer is",
    "start": "156180",
    "end": "161310"
  },
  {
    "text": "so that means X and so if you're working with a definition that it's I don't know",
    "start": "161310",
    "end": "167310"
  },
  {
    "text": "then the answer has to be I don't know so x and y so in sequel if you have a",
    "start": "167310",
    "end": "172650"
  },
  {
    "text": "null value inside of a an and operation then the answer is going to be null",
    "start": "172650",
    "end": "178760"
  },
  {
    "text": "that's that's the sort of logical way to think about a null value in sequel okay",
    "start": "178760",
    "end": "183920"
  },
  {
    "text": "now that's how it is that's how you're",
    "start": "183920",
    "end": "189030"
  },
  {
    "text": "supposed to think about it that's sort of like the formal idea of what a null value is it's an unknown the way it's",
    "start": "189030",
    "end": "195510"
  },
  {
    "text": "actually implemented unfortunately is different between Postgres and oracle",
    "start": "195510",
    "end": "201740"
  },
  {
    "text": "most often seen with string concatenation i actually didn't know that that's useful to know so we're",
    "start": "202550",
    "end": "208950"
  },
  {
    "text": "gonna set up a short example here to illustrate this where we have a table with the first name middle name and last",
    "start": "208950",
    "end": "214890"
  },
  {
    "text": "name and we're just going to concatenate those three columns input spaces so this is basically a sequel saying give me the",
    "start": "214890",
    "end": "221070"
  },
  {
    "text": "full name of somebody alright so here is what happens when we run that sequel in",
    "start": "221070",
    "end": "228290"
  },
  {
    "text": "Oracle ok and notice what's going on here how many people have a middle name",
    "start": "228290",
    "end": "234800"
  },
  {
    "text": "just the bottom guy right william henry harrison he has a middle name everybody else just has a first name and a last",
    "start": "234800",
    "end": "241320"
  },
  {
    "text": "name nice they're presidents of American",
    "start": "241320",
    "end": "247740"
  },
  {
    "text": "presidents excuse me all right so we have 10 rows and Oracle now what happens if we run exactly the same query and",
    "start": "247740",
    "end": "255840"
  },
  {
    "text": "Postgres all right I'll give you just a moment to guess",
    "start": "255840",
    "end": "261090"
  },
  {
    "text": "what you think it's gonna be before I show you you have a guess in your head",
    "start": "261090",
    "end": "266220"
  },
  {
    "text": "what do you think post gonna do all right that's what you see in Postgres Oh two of them have middle names yeah",
    "start": "266220",
    "end": "273490"
  },
  {
    "text": "you got nothing so Postgres is actually and this is where and I've seen this in other areas",
    "start": "273490",
    "end": "279280"
  },
  {
    "text": "too Postgres is doing the thing which is correct technically according to the",
    "start": "279280",
    "end": "284500"
  },
  {
    "text": "sequel standard Oracle if you didn't know this does not do everything",
    "start": "284500",
    "end": "291550"
  },
  {
    "text": "correctly they're very pragmatic though they've kind of done in many cases done what people wanted them to do instead of",
    "start": "291550",
    "end": "298750"
  },
  {
    "text": "doing what like the mathematicians say they should do and this is an example where that has happened so in practice",
    "start": "298750",
    "end": "306040"
  },
  {
    "text": "like when you're writing applications and you're concatenated a string this is a super common thing for a programmer to",
    "start": "306040",
    "end": "311080"
  },
  {
    "text": "do and you know what he really wanted was this right so Oracle is like fine I'll give him this Postgres says no you",
    "start": "311080",
    "end": "319630"
  },
  {
    "text": "asked for that and I gave you that you know I I'm I'm just doing what's",
    "start": "319630",
    "end": "325060"
  },
  {
    "text": "mathematically and algorithmically correct and you should design around it",
    "start": "325060",
    "end": "331410"
  },
  {
    "text": "so if you want to have that in Postgres what you actually need to do is you use",
    "start": "331410",
    "end": "336700"
  },
  {
    "text": "a function called coalesce so what coalesce will do is in this example",
    "start": "336700",
    "end": "342490"
  },
  {
    "text": "there's two parameters but coalesce will actually take as many parameters as you want to give it you just make a list",
    "start": "342490",
    "end": "347590"
  },
  {
    "text": "with commas and just the first one that's not a null is the one that comes back so does it make sense you could put",
    "start": "347590",
    "end": "355120"
  },
  {
    "text": "like six variables in there if the first for our nulls then the fifth one will come back and that's the coalesce",
    "start": "355120",
    "end": "361450"
  },
  {
    "text": "function very important function notice so here we just wrapped the first middle and last name and coalesce in Postgres",
    "start": "361450",
    "end": "366910"
  },
  {
    "text": "and now in Postgres we have the same answer that we wanted for our",
    "start": "366910",
    "end": "371950"
  },
  {
    "text": "application datatypes in just a second",
    "start": "371950",
    "end": "380050"
  },
  {
    "text": "here [Applause]",
    "start": "380050",
    "end": "386509"
  },
  {
    "text": "you can edit that out so data types",
    "start": "389450",
    "end": "397550"
  },
  {
    "start": "396000",
    "end": "610000"
  },
  {
    "text": "Oracle has a few main data types that are typically used and then it has a",
    "start": "397550",
    "end": "404880"
  },
  {
    "text": "couple of large object types that's right that's now we're gonna get into dealing with some of that and this next",
    "start": "404880",
    "end": "411720"
  },
  {
    "text": "slide is great okay so here's the oracle data types the ones that like you almost",
    "start": "411720",
    "end": "416880"
  },
  {
    "text": "like I said your string your date your number your key ones and then for large objects these what does Postgres have",
    "start": "416880",
    "end": "424250"
  },
  {
    "text": "this is what Postgres has all the data types right so a post kress",
    "start": "424250",
    "end": "430740"
  },
  {
    "text": "it comes with 64 base types and you can extend it and add even more now",
    "start": "430740",
    "end": "437970"
  },
  {
    "text": "President technically Oracle does have a few more than this I mean you know this is sort of a fun slide that we put",
    "start": "437970",
    "end": "443190"
  },
  {
    "text": "together Oracle does have a few more but in practice that is well there's a",
    "start": "443190",
    "end": "448710"
  },
  {
    "text": "couple really key differences which which I think we're going to get into the point of that first slide is though",
    "start": "448710",
    "end": "455010"
  },
  {
    "text": "just you know it's just kind of check your assumptions around data types they are very different and they behave very",
    "start": "455010",
    "end": "461700"
  },
  {
    "text": "differently clubs are so clubs are one",
    "start": "461700",
    "end": "469320"
  },
  {
    "text": "of those big areas so in Oracle if you want to deal with a very large amount of",
    "start": "469320",
    "end": "474360"
  },
  {
    "text": "data in a column you have to use this thing called a Club which stands for so",
    "start": "474360",
    "end": "479910"
  },
  {
    "text": "the lob stands for large object and then in Oracle there's two different kinds here there's the C lab which is",
    "start": "479910",
    "end": "487860"
  },
  {
    "text": "character large objects and then there's a binary large object so blobs and what",
    "start": "487860",
    "end": "493200"
  },
  {
    "text": "we say the lingo that we use is club and blob is how people say it that's in the",
    "start": "493200",
    "end": "499950"
  },
  {
    "text": "Oracle and the way that those work in Oracle is that when you have a column",
    "start": "499950",
    "end": "505620"
  },
  {
    "text": "which is the data type club you actually have to use like these you have to",
    "start": "505620",
    "end": "510690"
  },
  {
    "text": "almost always to do anything meaningful with it you have to wrap it in a function and like use these fun",
    "start": "510690",
    "end": "516240"
  },
  {
    "text": "actions to do it it's it's actually kind of cumbersome it's kind of a pain in Postgres it's completely different and",
    "start": "516240",
    "end": "523649"
  },
  {
    "text": "way easier because we demonstrated this yesterday we looked at the text stated haven't we looked at toast right and how",
    "start": "523649",
    "end": "530010"
  },
  {
    "text": "it can move things out so in Postgres the text and varchar' actually handle",
    "start": "530010",
    "end": "538709"
  },
  {
    "text": "the huge column so yeah you have a Mac in Oracle the maximum possible length of",
    "start": "538709",
    "end": "544200"
  },
  {
    "text": "of our chars around 4,000 characters and in Postgres this is awesome like you can",
    "start": "544200",
    "end": "550680"
  },
  {
    "text": "hear they've created a bar char with a maximum length of 10 Meg which you can't do in Oracle you just you cannot put 10",
    "start": "550680",
    "end": "557820"
  },
  {
    "text": "megabytes in a varchar' column so that this is actually a huge thing if you see",
    "start": "557820",
    "end": "563040"
  },
  {
    "text": "people struggling here they might be coming from a different database and they just might not even know that they",
    "start": "563040",
    "end": "569160"
  },
  {
    "text": "can store so much data in a varchar' column that's super common all right",
    "start": "569160",
    "end": "574890"
  },
  {
    "text": "this is demoing that functionality all right now we get into numeric numeric is",
    "start": "574890",
    "end": "581160"
  },
  {
    "text": "the other the next one and this is actually hugely did we talk about this earlier this week I think I might have mentioned it okay",
    "start": "581160",
    "end": "586290"
  },
  {
    "text": "so I'll kind of skip over some of those analyzing all right this gets into",
    "start": "586290",
    "end": "592370"
  },
  {
    "text": "migration sort of the process are doing migrations I'm gonna just skip over some",
    "start": "592370",
    "end": "601770"
  },
  {
    "text": "of this for you guys since it won't be super relevant for what you're doing so",
    "start": "601770",
    "end": "611100"
  },
  {
    "start": "610000",
    "end": "833000"
  },
  {
    "text": "candidates so there are third-party applications or things that you can't really control you're probably not going",
    "start": "611100",
    "end": "617970"
  },
  {
    "text": "to do a lot with those if there is a good point here though I think with all",
    "start": "617970",
    "end": "624089"
  },
  {
    "text": "of this homegrown applications you have older applications that migrating to",
    "start": "624089",
    "end": "631649"
  },
  {
    "text": "Postgres is is really about migrating applications not migrating databases that's really what it is and it's I",
    "start": "631649",
    "end": "639200"
  },
  {
    "text": "spent a lot of my time sort of at the database tier of the stock and it's a",
    "start": "639200",
    "end": "645310"
  },
  {
    "text": "and maybe you guys will too if if you end up sort of in a similar situation to me it's it's it's a good thing to sort",
    "start": "645310",
    "end": "652090"
  },
  {
    "text": "of be respectful and kind of just recognize that people are spending a little bit of time with us on the",
    "start": "652090",
    "end": "657160"
  },
  {
    "text": "database but they're spending a lot of time not with us just in their applications you know like we as a",
    "start": "657160",
    "end": "663400"
  },
  {
    "text": "database the database is really important I mean like because we're you know you're the custom it's the",
    "start": "663400",
    "end": "668980"
  },
  {
    "text": "custodian of the data it's what keeps the data safe you know there's a interesting parallel here if you keep",
    "start": "668980",
    "end": "675370"
  },
  {
    "text": "track of like containers and kubernetes and kind of the our whole industry is kind of going through this shift right",
    "start": "675370",
    "end": "680440"
  },
  {
    "text": "now toward containerization and container management and there's that's really cool but it's it's interesting",
    "start": "680440",
    "end": "686980"
  },
  {
    "text": "how there's still kind of a split between like the applications here and the data it's here and like at the",
    "start": "686980",
    "end": "692890"
  },
  {
    "text": "application tier like when you look at just the whole value proposition of",
    "start": "692890",
    "end": "698250"
  },
  {
    "text": "containerization like what makes it amazing is that people can just like throw them away and provision new ones",
    "start": "698250",
    "end": "703300"
  },
  {
    "text": "kind of like what ec2 started back in the day with AWS what made AWS what it",
    "start": "703300",
    "end": "708580"
  },
  {
    "text": "is but that kind of fundamental thing like that's that's very different right",
    "start": "708580",
    "end": "714610"
  },
  {
    "text": "you know the whole like premise of a database is that like sort of the opposite of that",
    "start": "714610",
    "end": "720430"
  },
  {
    "text": "you know whereas with applications like it's it's world change I'll just throw it away",
    "start": "720430",
    "end": "725530"
  },
  {
    "text": "like that's awesome like you don't just throw away your database right now that's like we're actually like it is",
    "start": "725530",
    "end": "732250"
  },
  {
    "text": "actually a real sort of it's an interesting juxtaposition they're they're they're really opposites of each",
    "start": "732250",
    "end": "738010"
  },
  {
    "text": "other you know and then in the database world is not a we're actually trying everything we can to do the exact",
    "start": "738010",
    "end": "744280"
  },
  {
    "text": "opposite of the thing that which we want to do in the application layer so it's",
    "start": "744280",
    "end": "752320"
  },
  {
    "text": "good to be just sort of understand that kind of the two worlds that we need each other and we need to work together and",
    "start": "752320",
    "end": "759490"
  },
  {
    "text": "really kind of we're one world in a way but it's these two different layers of the stack and and when people are",
    "start": "759490",
    "end": "765670"
  },
  {
    "text": "migrating it's the top layer is where all the time and the energy is sometimes",
    "start": "765670",
    "end": "771820"
  },
  {
    "text": "even migrating is not even about migrating and application sometimes migrating to Postgres is",
    "start": "771820",
    "end": "778750"
  },
  {
    "text": "about changing your business processes which is a layer even above that you know your business processes so you can",
    "start": "778750",
    "end": "784480"
  },
  {
    "text": "just switch to an entirely different application that actually works with Postgres or a different application which is just makes more sense for your",
    "start": "784480",
    "end": "791290"
  },
  {
    "text": "business and maybe it just happens to use Postgres in the backend along with two other databases because maybe the",
    "start": "791290",
    "end": "797230"
  },
  {
    "text": "old application you're using only used one really expensive you know stack",
    "start": "797230",
    "end": "802300"
  },
  {
    "text": "could have been just locked and even to hardware level you know there's some applications that are locked into just",
    "start": "802300",
    "end": "808000"
  },
  {
    "text": "like you buy this rack that comes off the back of a truck into your data center and that that rack is you're you",
    "start": "808000",
    "end": "814570"
  },
  {
    "text": "know it runs all your HR and your ERP stuff and that's just you know that's really expensive and it will but on the",
    "start": "814570",
    "end": "821380"
  },
  {
    "text": "other hand if you're like a billion dollar company maybe that's you know a good price for you it does what you need",
    "start": "821380",
    "end": "826570"
  },
  {
    "text": "for a better price than any alternative but these things change over time can't",
    "start": "826570",
    "end": "833920"
  },
  {
    "start": "833000",
    "end": "872000"
  },
  {
    "text": "other candidates large data I don't know",
    "start": "833920",
    "end": "840040"
  },
  {
    "text": "these I honestly feel like data movement can become a factor in the migration I don't think that's really a big one I've",
    "start": "840040",
    "end": "847470"
  },
  {
    "text": "there are really large I mean like even when you're talking about terabytes a scale databases I still kind of feel",
    "start": "847470",
    "end": "852940"
  },
  {
    "text": "like we can probably figure those challenges out I hope you guys get to work on some really big migrations",
    "start": "852940",
    "end": "858730"
  },
  {
    "text": "someday because they're fun solvable problems right and like as the level of",
    "start": "858730",
    "end": "864280"
  },
  {
    "text": "complexity of like solving this problem is nothing compared to the level of complexity that we deal with that the",
    "start": "864280",
    "end": "870100"
  },
  {
    "text": "application tear down time window this",
    "start": "870100",
    "end": "875589"
  },
  {
    "text": "is not now we're getting to the easy problems to solve in my opinion how logical replication a great solution for that this gets a little bit more tricky",
    "start": "875589",
    "end": "883120"
  },
  {
    "text": "this comes back into another fort of important thing to think about is features where if you have an",
    "start": "883120",
    "end": "890260"
  },
  {
    "text": "application that's leveraging certain things this will go to two differences and these are some good examples very",
    "start": "890260",
    "end": "896260"
  },
  {
    "text": "specific areas like spatial and XML or flashback for goodness sakes flashback",
    "start": "896260",
    "end": "901330"
  },
  {
    "text": "query is a capability of Oracle to run a query and like your query can go back in",
    "start": "901330",
    "end": "908080"
  },
  {
    "text": "time and run as of a time in the past so for example in Postgres if you could say",
    "start": "908080",
    "end": "915280"
  },
  {
    "text": "you know what I just connected right now make a new connection but I want you to like run this query and like just make",
    "start": "915280",
    "end": "922450"
  },
  {
    "text": "the query run as though it were running five minutes ago and in Postgres actually if like if you blocked a vacuum",
    "start": "922450",
    "end": "929080"
  },
  {
    "text": "that would work right it could read the old rows but we don't that's not a not a",
    "start": "929080",
    "end": "935650"
  },
  {
    "text": "good solution there are by the way if you needed a similar capability to flashback there are a number I I know",
    "start": "935650",
    "end": "942250"
  },
  {
    "text": "there's something like called shadow tables you can do there are a number of",
    "start": "942250",
    "end": "947590"
  },
  {
    "text": "like auditing solutions that people have built because that's often this is tied to auditing types of things or you know",
    "start": "947590",
    "end": "954250"
  },
  {
    "text": "like if you have heavy like regulatory requirements to keep every version of days you know every time a change is",
    "start": "954250",
    "end": "959860"
  },
  {
    "text": "made I need to keep all the versions so the auditors when they come in they can see the the way the data looked a month",
    "start": "959860",
    "end": "965350"
  },
  {
    "text": "ago and they can see it now and just verify things so that's often compliance driven and there are solutions for",
    "start": "965350",
    "end": "972010"
  },
  {
    "text": "Postgres out there and there's some good talks terms and Postgres conferences about that if you ever looking for that",
    "start": "972010",
    "end": "978480"
  },
  {
    "start": "978000",
    "end": "1189000"
  },
  {
    "text": "the data access pattern this is a when you characterize you know this actually",
    "start": "978480",
    "end": "985450"
  },
  {
    "text": "what this really kind of reminds me of is that we've talked about awr reports a couple of times the very top section of",
    "start": "985450",
    "end": "993220"
  },
  {
    "text": "an awar report well there's the top top section just like identifies your system the section right underneath that",
    "start": "993220",
    "end": "1000680"
  },
  {
    "text": "characterizes the workload with a few really simple just metrics like the",
    "start": "1000680",
    "end": "1005880"
  },
  {
    "text": "commit rate how much redo are you generating or how much how much archive logs how what's the rate of the call",
    "start": "1005880",
    "end": "1013020"
  },
  {
    "text": "rate so like how many queries per second are you getting that kind of things and it's it's a really useful thing to be",
    "start": "1013020",
    "end": "1019740"
  },
  {
    "text": "able to just characterize a system and kind of just be able to say give a general description of what a workload",
    "start": "1019740",
    "end": "1025980"
  },
  {
    "text": "is like this is this fits right into that so and it's it's kind of like just",
    "start": "1025980",
    "end": "1032610"
  },
  {
    "text": "when you get on the phone with somebody and your your time your trying to help them with their system one of the first",
    "start": "1032610",
    "end": "1037980"
  },
  {
    "text": "just really helped first thing you want to just just is describe your system to me tell me about what is this database",
    "start": "1037980",
    "end": "1043949"
  },
  {
    "text": "do and these are this is some great vocabulary for that right here you know do you have",
    "start": "1043950",
    "end": "1050720"
  },
  {
    "text": "batch jobs that run you know large batch jobs you have reports that run once a",
    "start": "1050720",
    "end": "1056340"
  },
  {
    "text": "day or once a week or do you have certain you know there's always gonna be a cycle you you know there's going to be",
    "start": "1056340",
    "end": "1062220"
  },
  {
    "text": "multiple but there's gonna be a daily cycle always in any system of just if you were to sort of step back kind of",
    "start": "1062220",
    "end": "1068820"
  },
  {
    "text": "like our performance lab like when you look to the performance lab you could see a cycle of it would get kind of busy",
    "start": "1068820",
    "end": "1074580"
  },
  {
    "text": "a win period and it would get idle at another period and that's very reflective of how real-world systems",
    "start": "1074580",
    "end": "1080850"
  },
  {
    "text": "look real-world systems have these different cycles that maybe they're",
    "start": "1080850",
    "end": "1086460"
  },
  {
    "text": "there's sort of certain periods where maintenance operations run a backup might run at a certain time every day in",
    "start": "1086460",
    "end": "1092360"
  },
  {
    "text": "RDS you have your backup window which you can configure you have a maintenance window that you can configure and then",
    "start": "1092360",
    "end": "1099390"
  },
  {
    "text": "these other things characterize the workload is it mostly like read with just a couple of writes is it is it is",
    "start": "1099390",
    "end": "1107370"
  },
  {
    "text": "it append-only meaning that you never modify a row that's in there but you only add new data a lot of like financial places work",
    "start": "1107370",
    "end": "1115740"
  },
  {
    "text": "that way again for compliance reasons that I would never change or I need once a record goes in there it has to be",
    "start": "1115740",
    "end": "1121770"
  },
  {
    "text": "there forever it cannot be removed so that's that could be an append-only",
    "start": "1121770",
    "end": "1126809"
  },
  {
    "text": "system update intensive meaning that like if you I just look at the number of",
    "start": "1126809",
    "end": "1133440"
  },
  {
    "text": "records on the table it doesn't change very much overtime is usually just updates to it and then you have this",
    "start": "1133440",
    "end": "1138840"
  },
  {
    "text": "idea of insert and purge where that that sounds like a cue right like you can",
    "start": "1138840",
    "end": "1145110"
  },
  {
    "text": "have a cue where where it's first-in first-out where you're just you're inserting new records and then as they get processed you're pulling the old",
    "start": "1145110",
    "end": "1151350"
  },
  {
    "text": "ones out the back that's another really common pattern or design pattern or workload that you can see in a database",
    "start": "1151350",
    "end": "1156809"
  },
  {
    "text": "those in particular that pattern is one to look out for and Postgres the insert",
    "start": "1156809",
    "end": "1162660"
  },
  {
    "text": "and purge there are some definite if somebody's doing that hop on the web",
    "start": "1162660",
    "end": "1167850"
  },
  {
    "text": "there are some definite best practices and I want to say that just a lot of",
    "start": "1167850",
    "end": "1174540"
  },
  {
    "text": "people have chosen poor approaches to that and Postgres so that's one where there's probably",
    "start": "1174540",
    "end": "1180809"
  },
  {
    "text": "opportunities for improving performance by learning a little bit about the best practices and bringing them back to your",
    "start": "1180809",
    "end": "1186809"
  },
  {
    "text": "system the language matters a lot now",
    "start": "1186809",
    "end": "1192210"
  },
  {
    "start": "1189000",
    "end": "1371000"
  },
  {
    "text": "this is coming talking largely about the upper half but then you've got language in the database as well now you need to",
    "start": "1192210",
    "end": "1197490"
  },
  {
    "text": "factor in Oh our ms deserve a special call-out an ORM is an object relational",
    "start": "1197490",
    "end": "1206120"
  },
  {
    "text": "mapper alright if you're not familiar with those either object relational or",
    "start": "1206120",
    "end": "1214040"
  },
  {
    "text": "an object relation I'm not sure which but it the ORM what an ORM is is it's a",
    "start": "1214040",
    "end": "1220380"
  },
  {
    "text": "it's a it's it's either very useful or very evil depending on your perspective",
    "start": "1220380",
    "end": "1226080"
  },
  {
    "text": "but it's what it does is if you're a programmer in an object-oriented",
    "start": "1226080",
    "end": "1231150"
  },
  {
    "text": "programming language like Java or C sharp what an ORM does for you is that",
    "start": "1231150",
    "end": "1240450"
  },
  {
    "text": "it you start writing code you never write any sequel instead of writing",
    "start": "1240450",
    "end": "1245820"
  },
  {
    "text": "sequel your your data that you want to deal with it just shows up like an",
    "start": "1245820",
    "end": "1250890"
  },
  {
    "text": "object and you would just say like create a new employee object and that",
    "start": "1250890",
    "end": "1256679"
  },
  {
    "text": "when you create that new employee object all of the the sort of programming framework handles sort of oh that person",
    "start": "1256679",
    "end": "1264840"
  },
  {
    "text": "is trying to create an employee object so I will go insert a record into a table right and then if you say like now",
    "start": "1264840",
    "end": "1271770"
  },
  {
    "text": "from that employee object give me the department that that employee is a part of and you would do",
    "start": "1271770",
    "end": "1277350"
  },
  {
    "text": "that using just a normal programming language of saying like employee dot Department you know equals 51 or",
    "start": "1277350",
    "end": "1284790"
  },
  {
    "text": "something like that and then the framework excuse me the framework sees what you're doing and the framework",
    "start": "1284790",
    "end": "1292500"
  },
  {
    "text": "figures out oh I need to translate that into a join on this record over and then",
    "start": "1292500",
    "end": "1297929"
  },
  {
    "text": "pull this record over here it's a very convenient in a sense from a programming",
    "start": "1297929",
    "end": "1303179"
  },
  {
    "text": "perspective mostly convenient and that you as a programmer don't need to really deal with the database and it can be",
    "start": "1303179",
    "end": "1311340"
  },
  {
    "text": "sometimes useful just like being able to just get some code out really quickly and and to be able to",
    "start": "1311340",
    "end": "1318309"
  },
  {
    "text": "like have some code that or if you need if you want to have code that's like can be just maintained without any database",
    "start": "1318309",
    "end": "1324970"
  },
  {
    "text": "expertise or any database knowledge ORM x' though because what happens then is",
    "start": "1324970",
    "end": "1331510"
  },
  {
    "text": "like nobody knows anything about the database nobodies usually not writing any database code so the it's all",
    "start": "1331510",
    "end": "1338230"
  },
  {
    "text": "computer generated sequel what could go wrong right a lot of things are not",
    "start": "1338230",
    "end": "1345220"
  },
  {
    "text": "optimal so or um's are just kind of a notorious for generating sequel",
    "start": "1345220",
    "end": "1350529"
  },
  {
    "text": "statements that just are not great sequel statements like one example was the one that we talked about in the hot",
    "start": "1350529",
    "end": "1356260"
  },
  {
    "text": "update thing where the ORM because it's all computer generated sequel was updating every single column even if the",
    "start": "1356260",
    "end": "1363520"
  },
  {
    "text": "value never changed when it's in an update statement luckily Postgres is smart enough to recognize that as we saw",
    "start": "1363520",
    "end": "1371789"
  },
  {
    "text": "so that's how our aims yeah what you end",
    "start": "1372299",
    "end": "1377740"
  },
  {
    "text": "up having to do at the end is you're gonna have to scan over and kind of try to assess the whole situation there are",
    "start": "1377740",
    "end": "1383289"
  },
  {
    "text": "a couple of interesting tools for this I mentioned SCT there's also one called aura to PG that's another just open",
    "start": "1383289",
    "end": "1390039"
  },
  {
    "text": "source tool that you can use that'll scan an Oracle schema and create sort of an assessment of whether they can",
    "start": "1390039",
    "end": "1397299"
  },
  {
    "text": "migrate over easily or not all right",
    "start": "1397299",
    "end": "1403380"
  },
  {
    "start": "1400000",
    "end": "1535000"
  },
  {
    "text": "so we've got a section on testing and I'm just gonna flip through these slides",
    "start": "1406220",
    "end": "1412350"
  },
  {
    "text": "really quick and you guys just watch if you see anything that you want me to pause on let me know but this is kind of",
    "start": "1412350",
    "end": "1418140"
  },
  {
    "text": "application side stuff talking about unit testing here there is a test",
    "start": "1418140",
    "end": "1424830"
  },
  {
    "text": "framework this does the sort of remind me in Postgres there's something called",
    "start": "1424830",
    "end": "1430440"
  },
  {
    "text": "PG tap T AP which is a testing framework for like automating tests on Postgres we",
    "start": "1430440",
    "end": "1437279"
  },
  {
    "text": "just added that to RDS Postgres so that that might be something that you could",
    "start": "1437279",
    "end": "1442620"
  },
  {
    "text": "check out sometime read up on a little bit PG tap PG tap t AP so PG tap org",
    "start": "1442620",
    "end": "1455120"
  },
  {
    "text": "right here so it so suite of functions",
    "start": "1455120",
    "end": "1460529"
  },
  {
    "text": "that make it easy to write tap emitting unit test oh oh the tap is actually and",
    "start": "1460529",
    "end": "1466110"
  },
  {
    "text": "tap is actually a is actually like a and just more of like an industry thing for",
    "start": "1466110",
    "end": "1471929"
  },
  {
    "text": "testing so yeah this is now this is pretty cool",
    "start": "1471929",
    "end": "1478110"
  },
  {
    "text": "and this is now supported on RDS Postgres as well so that's tap and then",
    "start": "1478110",
    "end": "1486299"
  },
  {
    "text": "if i keep going here but yeah where you got some stuff on unit testing this is",
    "start": "1486299",
    "end": "1493740"
  },
  {
    "text": "kind of about how to write tests but i'm gonna skip over some of this data validation determining the amounts of",
    "start": "1493740",
    "end": "1500100"
  },
  {
    "text": "validation required there's anything here that you want to pause on let me",
    "start": "1500100",
    "end": "1505440"
  },
  {
    "text": "know",
    "start": "1505440",
    "end": "1507620"
  },
  {
    "text": "to be entirely sure all that it is migrant accurately checksums should be calculated for rows and columns yes",
    "start": "1512980",
    "end": "1519480"
  },
  {
    "text": "and there's tools available for that all right that believe it or not as the end",
    "start": "1519480",
    "end": "1525340"
  },
  {
    "text": "of the slides that we pulled in for the migration related stuff and that's just",
    "start": "1525340",
    "end": "1531250"
  },
  {
    "text": "about right exactly on time for what we're aiming for what questions so this",
    "start": "1531250",
    "end": "1539950"
  },
  {
    "start": "1535000",
    "end": "1757000"
  },
  {
    "text": "is the end of the content we have we don't have a three o'clock session this afternoon planned at least you could",
    "start": "1539950",
    "end": "1545559"
  },
  {
    "text": "always see if Scott wants to hang out on chime for a while he might he might go for it but do you have any any questions",
    "start": "1545559",
    "end": "1555100"
  },
  {
    "text": "from this or any other topics you want to hit on before we wrap up the wall",
    "start": "1555100",
    "end": "1571480"
  },
  {
    "text": "center is smart enough to attack them and send it yeah the publish and then",
    "start": "1571480",
    "end": "1580659"
  },
  {
    "text": "yeah and then I talked about the publish and subscribe and I'm just repeating so it gets picked up the publishers have",
    "start": "1580659",
    "end": "1587830"
  },
  {
    "text": "subscribed specifically do I mean is it",
    "start": "1587830",
    "end": "1593740"
  },
  {
    "text": "like would you like to see an example of what that looks like in Postgres like just pull it up in a database and create",
    "start": "1593740",
    "end": "1598929"
  },
  {
    "text": "one or was there a specific question about what pub/sub means how is the",
    "start": "1598929",
    "end": "1621100"
  },
  {
    "text": "pubsub different from sort of the wall sundar yes okay that makes sense let me pull up that slide let's go back just",
    "start": "1621100",
    "end": "1631450"
  },
  {
    "text": "because it has these two slides here so that one in this one yes so these are",
    "start": "1631450",
    "end": "1638830"
  },
  {
    "text": "okay I see what you're saying you're kind of asking how the publication is subscription where that overlaps with",
    "start": "1638830",
    "end": "1645820"
  },
  {
    "text": "this wall Center process so yes okay so this wall centerpiece and",
    "start": "1645820",
    "end": "1652120"
  },
  {
    "text": "I've drawn three transactions that are happening in the wall centers keeping track that's all sort of implementation",
    "start": "1652120",
    "end": "1658510"
  },
  {
    "text": "that's a layer down from so this is logical decoding which is a completely",
    "start": "1658510",
    "end": "1666550"
  },
  {
    "text": "different layer from this which is publication of subscription so they're",
    "start": "1666550",
    "end": "1673210"
  },
  {
    "text": "not I think the important thing here is that the wall sender like when you do a",
    "start": "1673210",
    "end": "1681820"
  },
  {
    "text": "sort of a create publication and create subscription you're not that has nothing",
    "start": "1681820",
    "end": "1687940"
  },
  {
    "text": "to do with transactions in any of this okay so I think that the best way to",
    "start": "1687940",
    "end": "1694810"
  },
  {
    "text": "illustrate this is actually just show you what create publication create subscription are or sort of what they",
    "start": "1694810",
    "end": "1700540"
  },
  {
    "text": "look like let's you know for starting out with that let's just go pull up the",
    "start": "1700540",
    "end": "1707620"
  },
  {
    "text": "dock page for that for create",
    "start": "1707620",
    "end": "1713950"
  },
  {
    "text": "publication when you create a publication you your publishing a table",
    "start": "1713950",
    "end": "1719740"
  },
  {
    "text": "is what you published and that's really all you publish so the you have two",
    "start": "1719740",
    "end": "1724870"
  },
  {
    "text": "choices I just realized this is not on the",
    "start": "1724870",
    "end": "1730930"
  },
  {
    "text": "projection screen it's on my laptop screen okay so bring this over you have",
    "start": "1730930",
    "end": "1738820"
  },
  {
    "text": "two choices when you create a publication you either can specify a table or you say for all tables and",
    "start": "1738820",
    "end": "1744670"
  },
  {
    "text": "that's it and the main difference you can give a list of tables but if you say for all tables it'll pick up new tables",
    "start": "1744670",
    "end": "1751330"
  },
  {
    "text": "as well so when you create a new table that'll just get picked right up in the subscription see so you're not creating",
    "start": "1751330",
    "end": "1759730"
  },
  {
    "start": "1757000",
    "end": "2177000"
  },
  {
    "text": "so this you create a publication and a subscription for a table so you you know",
    "start": "1759730",
    "end": "1766330"
  },
  {
    "text": "my test table I want to publish this table and then over here on another database I'll subscribe well okay let's",
    "start": "1766330",
    "end": "1774430"
  },
  {
    "text": "I almost think it's I'll do it in a text pack in a text pad",
    "start": "1774430",
    "end": "1781210"
  },
  {
    "text": "it's what I'll do so what I have where's my mouse bring it",
    "start": "1781210",
    "end": "1788840"
  },
  {
    "text": "over here okay all right so what I'm gonna do is I",
    "start": "1788840",
    "end": "1794380"
  },
  {
    "text": "can create so I'll have a I'll publish",
    "start": "1794380",
    "end": "1801860"
  },
  {
    "text": "something called Jeremy - no we'll call",
    "start": "1801860",
    "end": "1810770"
  },
  {
    "text": "this PG masters all right the PG masters",
    "start": "1810770",
    "end": "1817570"
  },
  {
    "text": "so well are actually let me even do this a little bit different will have PG",
    "start": "1817570",
    "end": "1822590"
  },
  {
    "text": "masters publication alright inside of the PG masters publication we've got the",
    "start": "1822590",
    "end": "1832630"
  },
  {
    "text": "Dublin table first name last name okay",
    "start": "1833049",
    "end": "1840370"
  },
  {
    "text": "and then we've got the Cape Town table",
    "start": "1840370",
    "end": "1846850"
  },
  {
    "text": "first name last name columns right",
    "start": "1846850",
    "end": "1854049"
  },
  {
    "text": "Seattle table okay so that's my",
    "start": "1854049",
    "end": "1860510"
  },
  {
    "text": "publication and then what I do is down here in my so and then I have my I have",
    "start": "1860510",
    "end": "1870950"
  },
  {
    "text": "a database called prod right so now down",
    "start": "1870950",
    "end": "1879799"
  },
  {
    "text": "here I'm gonna make a second database called reporting database right so this",
    "start": "1879799",
    "end": "1885350"
  },
  {
    "text": "guy's where I can run some reports and then I say over here subscribe to PG",
    "start": "1885350",
    "end": "1894350"
  },
  {
    "text": "masters I want all the PG masters okay and then I'll say subscribe to PG",
    "start": "1894350",
    "end": "1901700"
  },
  {
    "text": "masters all tables oh sorry not all tables you just give a subscription",
    "start": "1901700",
    "end": "1906980"
  },
  {
    "text": "that's all okay now what happens when I do that I say that is that now under the covers first Postgres",
    "start": "1906980",
    "end": "1916620"
  },
  {
    "text": "is going to in the reporting database it creates three tables right Dublin",
    "start": "1916620",
    "end": "1927980"
  },
  {
    "text": "Cape Town Seattle tables then now okay",
    "start": "1927980",
    "end": "1934620"
  },
  {
    "text": "here now I log back into my prod one database okay and I insert into Dublin",
    "start": "1934620",
    "end": "1942440"
  },
  {
    "text": "well at first Seattle insert it into my Seattle table values and we'll say",
    "start": "1942440",
    "end": "1953540"
  },
  {
    "text": "Jeremy s right so I put that into the Seattle table all right",
    "start": "1953540",
    "end": "1959010"
  },
  {
    "text": "and then I commit at this exact moment",
    "start": "1959010",
    "end": "1966210"
  },
  {
    "text": "that I say commit Postgres now in the",
    "start": "1966210",
    "end": "1971430"
  },
  {
    "text": "reporting database it does insert so in",
    "start": "1971430",
    "end": "1980640"
  },
  {
    "text": "the reporting database it's going to do insert Jeremy commit that's what it's",
    "start": "1980640",
    "end": "1987990"
  },
  {
    "text": "going to do okay now in prod one and",
    "start": "1987990",
    "end": "1996990"
  },
  {
    "text": "that was there now we're in fraud one and we do insert into Dublin values see",
    "start": "1996990",
    "end": "2012590"
  },
  {
    "text": "Divya what letter does your last name start with starts with an S it's a great",
    "start": "2012590",
    "end": "2020150"
  },
  {
    "text": "letter to start your last name with and of course we also insert using the Postgres syntax which is awesome",
    "start": "2020150",
    "end": "2028990"
  },
  {
    "text": "Mohammed right Mohammed n right so",
    "start": "2029950",
    "end": "2036350"
  },
  {
    "text": "Mohammed and I don't there's like six ways to spell Mohammed you're just gonna have to live with the A's today so",
    "start": "2036350",
    "end": "2044650"
  },
  {
    "text": "yeah all right so I'm sure that that's that's not the right one I apologize but",
    "start": "2045470",
    "end": "2053240"
  },
  {
    "text": "I know it's right for somebody so let's see so let's see so we do that actually",
    "start": "2053240",
    "end": "2060319"
  },
  {
    "text": "no and I actually don't want to do that yet hold on actually I'm just gonna do Divya",
    "start": "2060319",
    "end": "2066440"
  },
  {
    "text": "right now not because you don't know about Postgres moment so we do it Divya",
    "start": "2066440",
    "end": "2073460"
  },
  {
    "text": "what happens now here's the question did",
    "start": "2073460",
    "end": "2079010"
  },
  {
    "text": "that record get inserted into the reporting database yet well because what",
    "start": "2079010",
    "end": "2084050"
  },
  {
    "text": "if what if Divya then fails the exam well so now I have to rollback right I",
    "start": "2084050",
    "end": "2090878"
  },
  {
    "text": "mean but Divya is not gonna fail so we won't do that she's gonna pass with flying colors but the important thing is",
    "start": "2090879",
    "end": "2098480"
  },
  {
    "text": "like we don't know yet at this point in time whether that's going to commit a rollback so we do not yet put it and this is very",
    "start": "2098480",
    "end": "2106040"
  },
  {
    "text": "very different from physical replication if this was a physical standby then",
    "start": "2106040",
    "end": "2111290"
  },
  {
    "text": "Divya her record would be stored on the disk on the physical standby right away",
    "start": "2111290",
    "end": "2118900"
  },
  {
    "text": "okay and it wouldn't be marked committed but it would be put on the disk in logical",
    "start": "2118900",
    "end": "2125630"
  },
  {
    "text": "replication nothing is sent to that logical replica at all yet okay so with",
    "start": "2125630",
    "end": "2133040"
  },
  {
    "text": "logical nothing happens so next I do insert into Dublin values and we put",
    "start": "2133040",
    "end": "2140990"
  },
  {
    "text": "Mohamad in there and then I do a commit and it's this is the points in the",
    "start": "2140990",
    "end": "2146810"
  },
  {
    "text": "moments in time right here where now and this goes back to like what I was",
    "start": "2146810",
    "end": "2152810"
  },
  {
    "text": "describing so like you were asking what's the difference between these two things well the wall sender and the wall worker",
    "start": "2152810",
    "end": "2159950"
  },
  {
    "text": "like those are that's kind of how it works the create public ation in create subscription is at a table level that's",
    "start": "2159950",
    "end": "2166550"
  },
  {
    "text": "kind of what we saw here and even more than that like a a publication includes",
    "start": "2166550",
    "end": "2172160"
  },
  {
    "text": "can include multiple tables not just one can have more than one this is sort of the mechanism of how it",
    "start": "2172160",
    "end": "2179660"
  },
  {
    "start": "2177000",
    "end": "2324000"
  },
  {
    "text": "works under the covers so this is where it's that wall sender process actually",
    "start": "2179660",
    "end": "2184750"
  },
  {
    "text": "what's happening is that insert those inserts that we did are these little squares each of those inserts is stored",
    "start": "2184750",
    "end": "2190910"
  },
  {
    "text": "in memory in a buffer for your transaction there's a value I don't know",
    "start": "2190910",
    "end": "2199880"
  },
  {
    "text": "what it is it might be like 4k or 8k it's in a different presentation I have there's just a certain amount of memory",
    "start": "2199880",
    "end": "2205520"
  },
  {
    "text": "once it gets to that amount as an individual transaction gets to a certain amount of memory then what happens as a",
    "start": "2205520",
    "end": "2210770"
  },
  {
    "text": "wall sender spills the transaction to disk instead of keeping it in memory that way it doesn't blow out the memory",
    "start": "2210770",
    "end": "2216400"
  },
  {
    "text": "so at the moment we do the commit in the reporting database now is where we do",
    "start": "2216400",
    "end": "2223910"
  },
  {
    "text": "the insert Divya insert Mohammed with",
    "start": "2223910",
    "end": "2231440"
  },
  {
    "text": "two M's and two A's and then we commit",
    "start": "2231440",
    "end": "2238300"
  },
  {
    "text": "so that's the workflow and that's does that kind of help a little bit of logically showing how it works the so",
    "start": "2239710",
    "end": "2247370"
  },
  {
    "text": "yeah we have the three tables and both tables were included in just a single publication and then over here all we",
    "start": "2247370",
    "end": "2254600"
  },
  {
    "text": "did was subscribe to and we give the publication you cannot so you can't pick your tables when you subscribe",
    "start": "2254600",
    "end": "2261260"
  },
  {
    "text": "when you subscribe you're just gonna pick your publication and then you'll get so if you want you in or the the",
    "start": "2261260",
    "end": "2267680"
  },
  {
    "text": "place you control tables is when you setup the publication's in the first place that's where if you want if you",
    "start": "2267680",
    "end": "2274070"
  },
  {
    "text": "want a way to just do the Seattle table or just do the Dublin table then you",
    "start": "2274070",
    "end": "2279440"
  },
  {
    "text": "would have then you would just make separate publications for each one of those another sort of quirk of how this",
    "start": "2279440",
    "end": "2284990"
  },
  {
    "text": "is implemented in Postgres is that each subscription let me wait let me think",
    "start": "2284990",
    "end": "2290930"
  },
  {
    "text": "about this each publication yes that's exactly where I was going",
    "start": "2290930",
    "end": "2296120"
  },
  {
    "text": "man you're already like 10 steps ahead of us yeah each publication creates its own publication slot I have to repeat it",
    "start": "2296120",
    "end": "2302360"
  },
  {
    "text": "though so yes you're going to be adding slots for each one of these",
    "start": "2302360",
    "end": "2310360"
  },
  {
    "text": "correct no D well it will it caught the create table actually I know I think",
    "start": "2311660",
    "end": "2321240"
  },
  {
    "text": "you're right I actually so the thing is when you do",
    "start": "2321240",
    "end": "2326730"
  },
  {
    "start": "2324000",
    "end": "2533000"
  },
  {
    "text": "create all table I think you're right though that it does not do D do this doesn't now this is where P geological",
    "start": "2326730",
    "end": "2332940"
  },
  {
    "text": "is different P geological will capture the DD LS and actually create the tables on the far side for you this will like",
    "start": "2332940",
    "end": "2339299"
  },
  {
    "text": "include I suspect what's gonna happen is if you create a new table and you've",
    "start": "2339299",
    "end": "2344730"
  },
  {
    "text": "used all tables then I think what's gonna happen although we should just test this later it'll I think it'll just",
    "start": "2344730",
    "end": "2351660"
  },
  {
    "text": "stop applying this is although this is another kind of like weakness with the",
    "start": "2351660",
    "end": "2357569"
  },
  {
    "text": "native Postgres replication in version 10 and I didn't I I need to read the 11",
    "start": "2357569",
    "end": "2362910"
  },
  {
    "text": "release notes and see whether they've addressed it there or not I don't know but in version 10 for sure when",
    "start": "2362910",
    "end": "2369180"
  },
  {
    "text": "replication gets stuck like it can't do it apply so that's actually not hard to do it's there's about it there's about",
    "start": "2369180",
    "end": "2376049"
  },
  {
    "text": "like a hundred different ways you can get it to our application gets stuck like if there is a conflict if if it",
    "start": "2376049",
    "end": "2382020"
  },
  {
    "text": "can't find a wrote supposed to update if it can't insert the row in the first place you change the indexes change the",
    "start": "2382020",
    "end": "2387809"
  },
  {
    "text": "data types you can do a lot of interesting stuff the flexibility is really useful like for example you could",
    "start": "2387809",
    "end": "2394500"
  },
  {
    "text": "you could use this to shoot you can even make a publication a subscription where",
    "start": "2394500",
    "end": "2400140"
  },
  {
    "text": "it's on the same database there's no reason you couldn't you could actually put the subscription in the same",
    "start": "2400140",
    "end": "2405839"
  },
  {
    "text": "database that subscribe in attaining have to match so you probably can't do that if you couldn't remap the table",
    "start": "2405839",
    "end": "2412920"
  },
  {
    "text": "names and you could but you can do this across databases and you can use you can use this to change to do changes to the",
    "start": "2412920",
    "end": "2419970"
  },
  {
    "text": "table I think the table names and the column names have to match if I recall correctly but you can but but the data",
    "start": "2419970",
    "end": "2426809"
  },
  {
    "text": "types don't so you could change a data type and there are some other ways you",
    "start": "2426809",
    "end": "2432119"
  },
  {
    "text": "can make changes to the schema within reason but if you change it and then it",
    "start": "2432119",
    "end": "2438450"
  },
  {
    "text": "can't apply a record it just gets stuck and then then now you have the replicate slot that you have to you have a problem",
    "start": "2438450",
    "end": "2445710"
  },
  {
    "text": "with so you might end up having to drop it at some point to free up the space",
    "start": "2445710",
    "end": "2450860"
  },
  {
    "text": "yeah",
    "start": "2452510",
    "end": "2455510"
  },
  {
    "text": "Aurora so we just released logical",
    "start": "2460100",
    "end": "2465150"
  },
  {
    "text": "replication on Aurora up on logical replication the initial release did not include P geological so P geological",
    "start": "2465150",
    "end": "2472410"
  },
  {
    "text": "that that was like we just released that and P geological should I think they're",
    "start": "2472410",
    "end": "2478620"
  },
  {
    "text": "targeting there I'm pretty sure they're still targeting to have that out this year but I don't remember the PM's check",
    "start": "2478620",
    "end": "2485070"
  },
  {
    "text": "with the PM's for the day yes the native point this this is what we support for",
    "start": "2485070",
    "end": "2492450"
  },
  {
    "text": "yeah well and more importantly than this we also support all the decoding plugins",
    "start": "2492450",
    "end": "2497990"
  },
  {
    "text": "the other resis are not not all of them because we don't support the p geological one it has its own plugin but",
    "start": "2497990",
    "end": "2504450"
  },
  {
    "text": "we support the one that DMS needs so DMS works that that's I mean that's what a",
    "start": "2504450",
    "end": "2510780"
  },
  {
    "text": "lot of people are using it they're just you know plugging DMS in and that's what a lot of people were looking for all",
    "start": "2510780",
    "end": "2519870"
  },
  {
    "text": "right tell you what that since that was from yesterday let's hold off on that for a moment we're there any just I just",
    "start": "2519870",
    "end": "2525330"
  },
  {
    "text": "want to close this off anything else on today's stuff cool all right great thanks",
    "start": "2525330",
    "end": "2532460"
  }
]