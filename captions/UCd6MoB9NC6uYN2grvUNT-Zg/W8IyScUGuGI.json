[
  {
    "start": "0",
    "end": "24000"
  },
  {
    "text": "let's get started then hi everyone my name is Kyle Knapp and I'm a software",
    "start": "89",
    "end": "5250"
  },
  {
    "text": "developer at Amazon Web Services where I primarily focus on developing Python base client-side tooling so projects I",
    "start": "5250",
    "end": "12360"
  },
  {
    "text": "work on include the ATS see why they Davis SDK for Python ad bus chalice and",
    "start": "12360",
    "end": "17760"
  },
  {
    "text": "a few other projects so now that I've introduced myself let's get started",
    "start": "17760",
    "end": "23689"
  },
  {
    "text": "the interest command-line interface it's a unified cui for managing your alias",
    "start": "23689",
    "end": "29189"
  },
  {
    "text": "resources in interacting with the various different Atos api's the ABC light was first launched in 2013 and",
    "start": "29189",
    "end": "35760"
  },
  {
    "text": "year after year we've been adding new features to the CLI so if you're a current user of the ABS CLI but haven't",
    "start": "35760",
    "end": "42510"
  },
  {
    "text": "been keeping up of all the new features we've been adding this is the talk for you as today I'm going to be going over",
    "start": "42510",
    "end": "48059"
  },
  {
    "text": "some of the big features that we've launched in 2017 and by the hope of by the end of the talk hopefully you have a",
    "start": "48059",
    "end": "54780"
  },
  {
    "text": "good set of features to come back with to improve your workflow for this year and the next if you're brand new to",
    "start": "54780",
    "end": "60899"
  },
  {
    "text": "using the ABC ally don't worry you'll still get a lot out of the features I'm going to show but I'm not going to go",
    "start": "60899",
    "end": "66570"
  },
  {
    "text": "over a lot of the core concepts so the core use cases for using the 82 see alive there's a session next tomorrow",
    "start": "66570",
    "end": "73320"
  },
  {
    "text": "it's called introduction to latex you'll I fix the it's called def 323 so if you",
    "start": "73320",
    "end": "80070"
  },
  {
    "text": "want to learn more about that I recommend going to that tomorrow alright",
    "start": "80070",
    "end": "86820"
  },
  {
    "start": "86000",
    "end": "146000"
  },
  {
    "text": "let's get into the areas of improvements that we made with the ADA bit CY and 2017 the first area improvement we've",
    "start": "86820",
    "end": "93780"
  },
  {
    "text": "made is related to debugging so we've made it a lot easier to understand",
    "start": "93780",
    "end": "98790"
  },
  {
    "text": "what's this Eli's doing under the hood and being able to go back in history and do some post-mortem debugging on your",
    "start": "98790",
    "end": "105149"
  },
  {
    "text": "CLI commands we've made improvements in terms of providing credentials so",
    "start": "105149",
    "end": "110640"
  },
  {
    "text": "there's multiple different ways you can provide credentials Eli we've expanded this by allowing you to do custom credential providers and also expanded",
    "start": "110640",
    "end": "117899"
  },
  {
    "text": "the ways to get assume roles and finally we've made some improvements to the Amazon s3 commands specifically related",
    "start": "117899",
    "end": "125549"
  },
  {
    "text": "to configuration and I'll talk about that last so let's go ahead and talk",
    "start": "125549",
    "end": "131580"
  },
  {
    "text": "about debugging so like I said before we improve the interface and the ability to",
    "start": "131580",
    "end": "136599"
  },
  {
    "text": "go back in to bug your CLI commands but let's actually drive the motivation of why we care about this there you go okay",
    "start": "136599",
    "end": "147940"
  },
  {
    "start": "146000",
    "end": "385000"
  },
  {
    "text": "so if you've ever used to live before one thing you may notice it's like a black box or you input a command to see",
    "start": "147940",
    "end": "153940"
  },
  {
    "text": "like runs you get a output back and for the most part you don't actually know what is happening underneath the hood",
    "start": "153940",
    "end": "159549"
  },
  {
    "text": "and for the most part you don't need to worry about it because as long as you're getting the output you expected it's a",
    "start": "159549",
    "end": "165340"
  },
  {
    "text": "nice little abstraction to get away to hide away all the specifics of making",
    "start": "165340",
    "end": "170379"
  },
  {
    "text": "API requests allow you to focus on both inputs and outputs in the case though where you don't get an output you",
    "start": "170379",
    "end": "177129"
  },
  {
    "text": "expected or you get an error you didn't expect it would be nice to go ahead and look under the hood of ABC lie to get a",
    "start": "177129",
    "end": "184900"
  },
  {
    "text": "little more context what may be going on so if we were to actually go out and do",
    "start": "184900",
    "end": "190420"
  },
  {
    "text": "this and kind of outline what specific information would care about you would",
    "start": "190420",
    "end": "195609"
  },
  {
    "text": "see a picture like this where you have the ATM stly it's a wrapper around a lower level library called boto core and",
    "start": "195609",
    "end": "202319"
  },
  {
    "text": "boba core is written Python and it powers the ABS SDK for Python also known as boater 3 as well so a two-bit CLI so",
    "start": "202319",
    "end": "209560"
  },
  {
    "text": "if we were to go over and trace a the command lifecycle we're in a command",
    "start": "209560",
    "end": "214900"
  },
  {
    "text": "execute you would see something like this so the very first thing what happens when the CLI gets invoked it",
    "start": "214900",
    "end": "220930"
  },
  {
    "text": "parses the arguments out so this event is important especially if you're using",
    "start": "220930",
    "end": "226540"
  },
  {
    "text": "bash sometimes bash parses it differently and you actually see the actual arguments that get passed in and",
    "start": "226540",
    "end": "233230"
  },
  {
    "text": "then once the arguments get passed in the next thing that would happen is the seal I will call boto core so if you",
    "start": "233230",
    "end": "240910"
  },
  {
    "text": "look at the Python code down below you can see how the commands match up with the boudic or client calls so you see",
    "start": "240910",
    "end": "248290"
  },
  {
    "text": "the s3 API and then you see also an s3 client and then the less buckets command matches up with the list buckets method",
    "start": "248290",
    "end": "254799"
  },
  {
    "text": "of the boat'll core client and the boat this method calls really gonna do all the heavy lifting for us in making the API request to continue on the boat",
    "start": "254799",
    "end": "263770"
  },
  {
    "text": "accord we'll take these parameters in using models internal to boat of course utilize it down to the HTTP request and",
    "start": "263770",
    "end": "269140"
  },
  {
    "text": "if you're following the command lifecycle some information that we find useful include the the endpoint URL they",
    "start": "269140",
    "end": "276550"
  },
  {
    "text": "should be method the headers the request body and then to continue on once they",
    "start": "276550",
    "end": "282340"
  },
  {
    "text": "should be request to send some sent back you'll get some information such as the in HTTP response such as status code so",
    "start": "282340",
    "end": "288460"
  },
  {
    "text": "if it's successful or not you get some headers so you can identify what the request is if you're using going through support and you'd also get what came",
    "start": "288460",
    "end": "295900"
  },
  {
    "text": "over back over the wire through the HT response body afterwards what happens is",
    "start": "295900",
    "end": "302770"
  },
  {
    "text": "boto Cori use the same models they use the serialize the request to actually parse the response as well and you",
    "start": "302770",
    "end": "309010"
  },
  {
    "text": "notice at the bottom that this is JSON this got parsed from the previous XML body that came over the wire and with a",
    "start": "309010",
    "end": "316060"
  },
  {
    "text": "sweet parse response that returns it back to the CLI the CLI will then determine if it was successful or not in",
    "start": "316060",
    "end": "321640"
  },
  {
    "text": "this case we were and exited with a return code of zero and print out the actual output from the parse response so",
    "start": "321640",
    "end": "329410"
  },
  {
    "text": "this this interface or this just this display is very convenient if you wanted",
    "start": "329410",
    "end": "335290"
  },
  {
    "text": "to get that contextual overview of what a CLI command is doing but if you remember when I first started you don't",
    "start": "335290",
    "end": "340810"
  },
  {
    "text": "really have that prior to this year the CLI was is essentially a black box and",
    "start": "340810",
    "end": "346720"
  },
  {
    "text": "really the only option it in order to go ahead and open the black box was to use the - debug flag and with the - debug",
    "start": "346720",
    "end": "354730"
  },
  {
    "text": "flag what it gives you is it gives you a bunch of logs related to specific events",
    "start": "354730",
    "end": "360310"
  },
  {
    "text": "it encompasses all these events I have displayed here in the diagram but there's a lot of specific events that",
    "start": "360310",
    "end": "365320"
  },
  {
    "text": "only developers of the Cy like myself are concerned about because we are know the ins and outs of the CLI so having a",
    "start": "365320",
    "end": "371890"
  },
  {
    "text": "nice overview like this would be that would be ideal so to get into a demo",
    "start": "371890",
    "end": "377860"
  },
  {
    "text": "let's go ahead and talk about this feature",
    "start": "377860",
    "end": "382530"
  },
  {
    "start": "385000",
    "end": "575000"
  },
  {
    "text": "cool can everyone see that cool so for this demo what I'm gonna do is I'm gonna",
    "start": "385129",
    "end": "391459"
  },
  {
    "text": "use an Avis service the specific service is a Tabasco commit a dress code commit is a fully managed tour central service",
    "start": "391459",
    "end": "397819"
  },
  {
    "text": "for hosting secure and highly scalable git repositories and in my workspace I",
    "start": "397819",
    "end": "403909"
  },
  {
    "text": "have my repo or you clone down if I look inside of my repo there's just a readme",
    "start": "403909",
    "end": "409399"
  },
  {
    "text": "so it's pretty bare bones and ideally we want to add a little bit more to it so specifically what I'm adding is a",
    "start": "409399",
    "end": "416089"
  },
  {
    "text": "license so I have a license branch checked out here and if I do a good dip of this recent commit you'll see in the",
    "start": "416089",
    "end": "422929"
  },
  {
    "text": "license this is Apache too and now let's say we were coding with our fellow",
    "start": "422929",
    "end": "429110"
  },
  {
    "text": "developer we're on a development team so we can't merge this directly into master right now we have to get it through code review a dress code commit launched",
    "start": "429110",
    "end": "436069"
  },
  {
    "text": "recently the ability to send pull requests so we're gonna use the ada Bastille lights you create a poor quest",
    "start": "436069",
    "end": "441379"
  },
  {
    "text": "and show how we can debug through this through the new feature of the CLI so",
    "start": "441379",
    "end": "447829"
  },
  {
    "text": "I'm before starting I'm gonna go ahead and push up this branch to my remote",
    "start": "447829",
    "end": "455828"
  },
  {
    "text": "alright so now that it's all pushed up let's go ahead and run the ABS code",
    "start": "458860",
    "end": "464839"
  },
  {
    "text": "commit create port quest command so in order to do that we're gonna type in",
    "start": "464839",
    "end": "472159"
  },
  {
    "text": "create pull requests give it a title call it adding a license and then we're",
    "start": "472159",
    "end": "482059"
  },
  {
    "text": "gonna give a targets so in a target we the specify repository name the name of our repository is repo name or my repo",
    "start": "482059",
    "end": "492610"
  },
  {
    "text": "we have to get a bit of source reference so this is the branch we're trying to",
    "start": "492939",
    "end": "498169"
  },
  {
    "text": "merge the source branch is license and",
    "start": "498169",
    "end": "504319"
  },
  {
    "text": "we have to give it a destination reference so this is just going to be master because we want to merge it into",
    "start": "504319",
    "end": "509990"
  },
  {
    "text": "master and from there one more thing we want to add is",
    "start": "509990",
    "end": "515779"
  },
  {
    "text": "a description so you usually want to give a little bit context of why you want this code to get merged so we're",
    "start": "515779",
    "end": "522349"
  },
  {
    "text": "going to go ahead and run a trip description and I really don't want to get so for the spork present really",
    "start": "522349",
    "end": "527360"
  },
  {
    "text": "don't to get into how patchy too works so instead what I'm gonna do is go ahead and copy the Wikipedia link force if",
    "start": "527360",
    "end": "533300"
  },
  {
    "text": "they're interested in learning more about patchy too and use it as the description so before I run this command",
    "start": "533300",
    "end": "539779"
  },
  {
    "text": "one thing I want to point out is I'm about to use a feature of the CLI where allows you to pull the content from a",
    "start": "539779",
    "end": "545569"
  },
  {
    "text": "remote URL so whenever you provide the value prefixed with the HTTP and just",
    "start": "545569",
    "end": "551420"
  },
  {
    "text": "that it will pull the contents from it so if I didn't realize before I mean I",
    "start": "551420",
    "end": "556579"
  },
  {
    "text": "ran this command I'd get an error like this oops I misspelled something real",
    "start": "556579",
    "end": "564019"
  },
  {
    "text": "quick let me fix that real quick sorry",
    "start": "564019",
    "end": "567970"
  },
  {
    "text": "cool so I get an exception back saying that my description was over 10 kilobytes",
    "start": "574360",
    "end": "580490"
  },
  {
    "start": "575000",
    "end": "921000"
  },
  {
    "text": "that's that might be a little confusing for a first so mainly because I know",
    "start": "580490",
    "end": "585860"
  },
  {
    "text": "that the description I fried it was not that large unless I realized that I was using that feature of the CLI so I'm",
    "start": "585860",
    "end": "592850"
  },
  {
    "text": "gonna take the the previous series approach to actually debugging this if I didn't have if I wanted more context and",
    "start": "592850",
    "end": "598520"
  },
  {
    "text": "use - debug and when I use - debug you know go ahead and pipe it into less",
    "start": "598520",
    "end": "605720"
  },
  {
    "text": "a pager so I can kind of I can see what the logs look like and you can see here there's a bunch of different information",
    "start": "605720",
    "end": "610940"
  },
  {
    "text": "about specific events that the CLI ran and from these logs you could figure out",
    "start": "610940",
    "end": "615950"
  },
  {
    "text": "what went wrong what I want to do now is actually use the new way to go ahead and",
    "start": "615950",
    "end": "623060"
  },
  {
    "text": "debug these and it's called Amos history commands so if I open up a bus history",
    "start": "623060",
    "end": "628750"
  },
  {
    "text": "it's a service command under the database name space so the idea of history is you can actually record the",
    "start": "628750",
    "end": "635750"
  },
  {
    "text": "commands do you frame it in the ran in the past and be able to do queries on them so you can see the specific events and see what commands you've ran and in",
    "start": "635750",
    "end": "643490"
  },
  {
    "text": "order to know in order to enable history what you have to do is run configure set CLA history to enabled so that sets it",
    "start": "643490",
    "end": "650570"
  },
  {
    "text": "in your config file so I'm gonna go ahead and do that and now I can rerun this command again now that history is",
    "start": "650570",
    "end": "658250"
  },
  {
    "text": "enable oh it will record it and oak record that exception as well so now one",
    "start": "658250",
    "end": "664640"
  },
  {
    "text": "thing you may have noticed might want to help their sub commands I'm gonna use the database history show command and",
    "start": "664640",
    "end": "673730"
  },
  {
    "text": "the ABS history show command essentially gives us that diagram that I showed before where has all the key events that",
    "start": "673730",
    "end": "680089"
  },
  {
    "text": "were interested in I'm not gonna get into the specifics of values yet I just kind of want to give a walk through what",
    "start": "680089",
    "end": "685280"
  },
  {
    "text": "exactly gives you so you can see the events of the arguments parsed you can see the API call maids a boat oak or and",
    "start": "685280",
    "end": "691700"
  },
  {
    "text": "if you keep on going you can go to the HTTP request I got sent over so you see",
    "start": "691700",
    "end": "698270"
  },
  {
    "text": "the URL it got sent the post Elva headers and you can keep going and see stuff like the response received and",
    "start": "698270",
    "end": "705170"
  },
  {
    "text": "the respond that got parched and finally you'll be able to get the return code so that's a nice little overview of exactly what the",
    "start": "705170",
    "end": "711330"
  },
  {
    "text": "CLI is doing when executing that command it gives you a lot of context about it so from there what I want to do is",
    "start": "711330",
    "end": "717660"
  },
  {
    "text": "actually figure out what went wrong right so looking back at the HTTP response coming back we'll see that",
    "start": "717660",
    "end": "724500"
  },
  {
    "text": "we've got the 400 status code being a bad request that indicates to me it must have been something I sent over the wire",
    "start": "724500",
    "end": "730430"
  },
  {
    "text": "hence the error description so I'm gonna go back to the top and look at the parameters a sense over and you can see",
    "start": "730430",
    "end": "737010"
  },
  {
    "text": "by some the description there is that this is exact value expected but now when he gets to the boudic or call the",
    "start": "737010",
    "end": "742920"
  },
  {
    "text": "parameters and match up what the description was with what the value of the description you're passing in you see a giant blob of HTML and",
    "start": "742920",
    "end": "749670"
  },
  {
    "text": "specifically it looks like the contents of the Pachi license for Wikipedia and at that point you realize it's pulling",
    "start": "749670",
    "end": "755880"
  },
  {
    "text": "the its you're using the feature of the CLI and it's pulling the contents down and hence while you're getting that",
    "start": "755880",
    "end": "760920"
  },
  {
    "text": "exception coming back so let's go ahead and actually fix this and in order to",
    "start": "760920",
    "end": "766050"
  },
  {
    "text": "fix it we're going to not make the value just a single URL we can just go ahead and put a little more words into it so",
    "start": "766050",
    "end": "774440"
  },
  {
    "text": "when I run this command now I get a response back and I can also use",
    "start": "774440",
    "end": "779850"
  },
  {
    "text": "a bus history show to show that it was a successful request so you can see the",
    "start": "779850",
    "end": "786720"
  },
  {
    "text": "CLI command answer here this is the description we added and you can see now it got see it got passed on to boto core",
    "start": "786720",
    "end": "793200"
  },
  {
    "text": "correctly and you can go up farther down and see specifics about the request again you can see that it got it got",
    "start": "793200",
    "end": "800430"
  },
  {
    "text": "sterilized into the body of the of the request and also that we got a 200 response back and all the relative",
    "start": "800430",
    "end": "806940"
  },
  {
    "text": "information that we got from the parse response so you can see some of the information that you saw when I first",
    "start": "806940",
    "end": "813390"
  },
  {
    "text": "ran the command and of course the exit of zero because there's access cool so",
    "start": "813390",
    "end": "818970"
  },
  {
    "text": "that was the first demo the two things I hope you got out of this was the CLI",
    "start": "818970",
    "end": "824280"
  },
  {
    "text": "history enabled mode that makes it really convenient so you don't have to provide - debug for every single command",
    "start": "824280",
    "end": "829740"
  },
  {
    "text": "you type it in a once for the config file and from then on Acushla record of your history and along top of that the a",
    "start": "829740",
    "end": "836610"
  },
  {
    "text": "device history show is a nice detailed overview of what specifically your CLI command",
    "start": "836610",
    "end": "841840"
  },
  {
    "text": "did when it ran so from there you can easily more easily debug exactly what",
    "start": "841840",
    "end": "847240"
  },
  {
    "text": "happened so now let's talk about that second command when I talk about ABS history show let's talk about ABS",
    "start": "847240",
    "end": "853030"
  },
  {
    "text": "history list in order to show this committee I would show off this can't I have this new directory right here and",
    "start": "853030",
    "end": "859600"
  },
  {
    "text": "this best script called clone don't worry if you don't know too much about",
    "start": "859600",
    "end": "865060"
  },
  {
    "text": "bash I'm going to walk through this with you but essentially what the scripts going to be doing is it will call a bo",
    "start": "865060",
    "end": "871570"
  },
  {
    "text": "scope command list repositories to get on repositories and a for loop it will take the repo name and call this clone",
    "start": "871570",
    "end": "878080"
  },
  {
    "text": "function up top here and in this clone function it will take the repo name and called git repository query the clone",
    "start": "878080",
    "end": "884500"
  },
  {
    "text": "URL SSH to go ahead and get clone it so if I was to go ahead and run this now",
    "start": "884500",
    "end": "892020"
  },
  {
    "text": "you should start saying that the repositories are getting cloned down so",
    "start": "892170",
    "end": "901270"
  },
  {
    "text": "it looks like it claimed one repository and it's gonna clone my second one I have available and now when I list it",
    "start": "901270",
    "end": "907330"
  },
  {
    "text": "all out you can see the two directories that got created so now what I'm going to do is use a base history list to",
    "start": "907330",
    "end": "913090"
  },
  {
    "text": "prove what I just walked through was correct in terms of explain how the bash script worked so here is the output for",
    "start": "913090",
    "end": "923890"
  },
  {
    "text": "a base history list each row is a specific command that you ran and the",
    "start": "923890",
    "end": "929170"
  },
  {
    "text": "far left column is a command ID associated to each command so another",
    "start": "929170",
    "end": "934690"
  },
  {
    "text": "feature of a debase histories show is that if you add the command ID after the show command you can get the the events",
    "start": "934690",
    "end": "941470"
  },
  {
    "text": "for that specific command you ran on the next column you'll see the date the time",
    "start": "941470",
    "end": "946930"
  },
  {
    "text": "the the day time that of the command got ran the command specifically got ran and also the RC as well so we're both",
    "start": "946930",
    "end": "953620"
  },
  {
    "text": "successful and all the git repository commands I ran so looking into the actual script this we can actually see",
    "start": "953620",
    "end": "961150"
  },
  {
    "text": "what commands got called so we see how the list repository stuff called and then subsequently to git repository",
    "start": "961150",
    "end": "966790"
  },
  {
    "text": "Scott called but now let's go ahead and actually look at one of these to see what exactly is going on",
    "start": "966790",
    "end": "972010"
  },
  {
    "text": "so I'm gonna run a bus history show and you can see immediately what repository",
    "start": "972010",
    "end": "980170"
  },
  {
    "text": "got called for this command so you see how the my repo parameter got mapped into the repository name and if you",
    "start": "980170",
    "end": "987250"
  },
  {
    "text": "continue on and go to the bottom you can also see the clone URL that we use to clone the repositories so specifically",
    "start": "987250",
    "end": "994180"
  },
  {
    "text": "we use this this value right here so that is nice so you can have a nice",
    "start": "994180",
    "end": "1001050"
  },
  {
    "text": "overview exactly what a bash script does if you need that extra debugging know this was very useful if you have a bug",
    "start": "1001050",
    "end": "1007770"
  },
  {
    "text": "in your script and you're trying to figure out what the heck went wrong so what I'm gonna do now is actually go into my clone script and message",
    "start": "1007770",
    "end": "1015600"
  },
  {
    "text": "something up say I was working on it and I messed up the James path of the james path expression to query out the",
    "start": "1015600",
    "end": "1022860"
  },
  {
    "text": "repository name say remove the eye right here and let's see what happens when I run this clone commit the clone script",
    "start": "1022860",
    "end": "1028620"
  },
  {
    "text": "again I get the error back saying the repository does not exist a few things",
    "start": "1028620",
    "end": "1035339"
  },
  {
    "text": "may confuse me at the start one is saying that none doesn't exist I don't not really sure exactly what none",
    "start": "1035340",
    "end": "1041730"
  },
  {
    "text": "references is this a repository name is it actually a is it actually just missing there's not a lot of context in",
    "start": "1041730",
    "end": "1049170"
  },
  {
    "text": "terms of how I wrote the bash script so this is where a bus history list comes in to actually go ahead and debug it",
    "start": "1049170",
    "end": "1054990"
  },
  {
    "text": "further so I'm gonna go ahead and run a base history list to see what commands actually got ran the first thing I'll",
    "start": "1054990",
    "end": "1061230"
  },
  {
    "text": "notice this is where we started the code commit list repositories but we want to called git repository once if you",
    "start": "1061230",
    "end": "1067020"
  },
  {
    "text": "remember before where you called it twice so that's already something fishy so I'm gonna go ahead and take the code the command ID and run a bit assessories",
    "start": "1067020",
    "end": "1075030"
  },
  {
    "text": "show so immediately if you can figure",
    "start": "1075030",
    "end": "1080310"
  },
  {
    "text": "out what exactly went wrong in terms of disambiguating at the possible error cases specifically you see a repository",
    "start": "1080310",
    "end": "1086820"
  },
  {
    "text": "name that got passed in was none and I do not have a repository name none so that is what I would expect it to be in",
    "start": "1086820",
    "end": "1093840"
  },
  {
    "text": "terms of getting that 400 back so given that let's figure out if the if the",
    "start": "1093840",
    "end": "1099120"
  },
  {
    "text": "issue was with the list command or the list repositories command so let's go ahead and copy down the",
    "start": "1099120",
    "end": "1104590"
  },
  {
    "text": "this command ID and if we go on what I'm",
    "start": "1104590",
    "end": "1113710"
  },
  {
    "text": "specifically looking for is if we're getting the responses back that we would expect so I want to make sure we're",
    "start": "1113710",
    "end": "1119980"
  },
  {
    "text": "getting those two repositories it looks like we are and also the parse response looks correct as well so that's telling",
    "start": "1119980",
    "end": "1126340"
  },
  {
    "text": "me that there must be something wrong with how I'm gluing together the values from the list command to the git repositories command and in order to",
    "start": "1126340",
    "end": "1133840"
  },
  {
    "text": "figure that out I'm gonna go ahead and reopen up the script and run that that",
    "start": "1133840",
    "end": "1142389"
  },
  {
    "text": "previous command to see what the exactions path query is gonna be or what",
    "start": "1142389",
    "end": "1147580"
  },
  {
    "text": "the virginias path query results in and you can see this results in none which",
    "start": "1147580",
    "end": "1153460"
  },
  {
    "text": "explains why we only had one git repository called in the first place so from there we go ahead and look at the",
    "start": "1153460",
    "end": "1159909"
  },
  {
    "text": "query and looking really closely we looks like we missed spelled repositories we missed that I and if we",
    "start": "1159909",
    "end": "1166299"
  },
  {
    "text": "called it again we get the correct response we expected back so that's that's pretty much it for this demo the",
    "start": "1166299",
    "end": "1173139"
  },
  {
    "text": "one the things I hope you got out of this was the power of using a diverse list and a table show together",
    "start": "1173139",
    "end": "1178590"
  },
  {
    "text": "specifically it abyss list gives you a nice overview it was that commands he ran and then in order to get more detail",
    "start": "1178590",
    "end": "1183909"
  },
  {
    "text": "you can go ahead and pipe the command ID to eight of us history show another",
    "start": "1183909",
    "end": "1189519"
  },
  {
    "text": "thing that is very helpful is that when you have big scripts like this Davis history list command really lets you",
    "start": "1189519",
    "end": "1195879"
  },
  {
    "text": "have a nice overview of what exactly ran or if you have a job say you had a cron job running a CLI commit as well and it",
    "start": "1195879",
    "end": "1202629"
  },
  {
    "text": "failed randomly you can actually go ahead and do some post-mortem debugging to see why it failed and have a better",
    "start": "1202629",
    "end": "1208960"
  },
  {
    "text": "idea of what was going on which is convenient as well so if we go back to",
    "start": "1208960",
    "end": "1214119"
  },
  {
    "text": "the slides now cool",
    "start": "1214119",
    "end": "1220710"
  },
  {
    "start": "1221000",
    "end": "1249000"
  },
  {
    "text": "that was a it for this section specifically for debugging what I covered was how you can enable CLI",
    "start": "1221150",
    "end": "1227880"
  },
  {
    "text": "history of the CLA history configuration option sitting that's enabled so it keeps track of all the history commands",
    "start": "1227880",
    "end": "1233970"
  },
  {
    "text": "or all the CLI commands you ran over time then we have history show and history list to go ahead and peer into",
    "start": "1233970",
    "end": "1239370"
  },
  {
    "text": "the exact command Z ran and the base act events via show in list alright so now",
    "start": "1239370",
    "end": "1251549"
  },
  {
    "start": "1249000",
    "end": "1377000"
  },
  {
    "text": "that I covered debugging improvements this year let's talk about how we improved providing credentials to the",
    "start": "1251549",
    "end": "1259409"
  },
  {
    "text": "CLI so if you ran the if you use the ABC Li before you've probably used the ABS configure command where you get prompted",
    "start": "1259409",
    "end": "1265799"
  },
  {
    "text": "for your access key secret key you probably also know there's a bunch of different other ways to give a probably credentials to the CLI and as it relates",
    "start": "1265799",
    "end": "1272640"
  },
  {
    "text": "to providing credentials we've really expanded it by allowing you to provide your own custom providers and allowing you to expand the different ways you can",
    "start": "1272640",
    "end": "1281400"
  },
  {
    "text": "assume roles with a to CLI and to motivate this let's go ahead and talk",
    "start": "1281400",
    "end": "1286799"
  },
  {
    "text": "about the different ways you can provide credentials to the CLI so there's the",
    "start": "1286799",
    "end": "1292830"
  },
  {
    "text": "environment variables you can do it through the shared credentials file you can do it through share config ECS",
    "start": "1292830",
    "end": "1298770"
  },
  {
    "text": "container credentials are easy to instance metadata and idea is when a sea",
    "start": "1298770",
    "end": "1304590"
  },
  {
    "text": "lion rank command gets ran what happens is it queries the credential chain and in the credential chain it looks at each",
    "start": "1304590",
    "end": "1310590"
  },
  {
    "text": "of these locations going from the top to the bottom to try to find the credentials so if it's not in",
    "start": "1310590",
    "end": "1315929"
  },
  {
    "text": "environment variables and move down to the credentials file if it's not there it'll go down to the shared config if it",
    "start": "1315929",
    "end": "1321900"
  },
  {
    "text": "finds it it will go ahead and return the Adria's potentials back to you and the",
    "start": "1321900",
    "end": "1327240"
  },
  {
    "text": "CLI will then sign request and send it to over to AWS so if I was to go ahead",
    "start": "1327240",
    "end": "1332490"
  },
  {
    "text": "and replace ooh some other SDK the SDK has support for these credentials",
    "start": "1332490",
    "end": "1337950"
  },
  {
    "text": "sources however the one thing prior to this year that other SDKs had on top of",
    "start": "1337950",
    "end": "1342990"
  },
  {
    "text": "the CLI was the ability to provide their own custom providers so the idea is if I'm using the ATM 60 cater Python I",
    "start": "1342990",
    "end": "1349320"
  },
  {
    "text": "write my own Python custom rioter and i can plummet into the credential change so it gets resolved",
    "start": "1349320",
    "end": "1354650"
  },
  {
    "text": "however this is the ABC y and CLI the code base is locked you can't import the code base in CLI and write your own",
    "start": "1354650",
    "end": "1361110"
  },
  {
    "text": "credential chain and inject it instead what we've done for 2017 is allowed you",
    "start": "1361110",
    "end": "1367500"
  },
  {
    "text": "to do custom credential providers but instead add a hook through the ABS config file so let's go ahead and talk",
    "start": "1367500",
    "end": "1375540"
  },
  {
    "text": "about this feature now so it this is a typical ADA shared config file and the",
    "start": "1375540",
    "end": "1381510"
  },
  {
    "start": "1377000",
    "end": "1468000"
  },
  {
    "text": "new configuration variable that we added was credential process so the idea of credential process is I'll take that",
    "start": "1381510",
    "end": "1388560"
  },
  {
    "text": "value and run it in a sub process and when the sub process runs it will return a output to return credentials through",
    "start": "1388560",
    "end": "1395370"
  },
  {
    "text": "standard out to the CLI to use so let's go ahead and just show what exactly this looks like so let's say the CLI ran this",
    "start": "1395370",
    "end": "1403500"
  },
  {
    "text": "command or the profile dev the seal I will know that there's a credential process set and it's pointing to this",
    "start": "1403500",
    "end": "1410250"
  },
  {
    "text": "script so from there it will go ahead and invoke the script the script will run and return back this JSON payload to",
    "start": "1410250",
    "end": "1420810"
  },
  {
    "text": "standard out so when you're implementing your own custom credential providers a few things to make a take care of in",
    "start": "1420810",
    "end": "1427320"
  },
  {
    "text": "following the protocol for this so one if you want to indicate success you have to make sure you have an RC of zero",
    "start": "1427320",
    "end": "1433400"
  },
  {
    "text": "another thing is you need to provide it as a JSON payload back so specifically you can even include the access key",
    "start": "1433400",
    "end": "1439710"
  },
  {
    "text": "secret key a version number specifying what version of the protocol are using there's only one version which is one",
    "start": "1439710",
    "end": "1445050"
  },
  {
    "text": "right now and given that what will happen is the CLI will pull this credentials and use those to interact",
    "start": "1445050",
    "end": "1450390"
  },
  {
    "text": "with AWS so now let's go ahead and show",
    "start": "1450390",
    "end": "1456810"
  },
  {
    "text": "how you can write your own custom credential provider using the ABC oh I",
    "start": "1456810",
    "end": "1463309"
  },
  {
    "text": "all right so let's say that I am a heavy user of my operating systems keychain I",
    "start": "1467080",
    "end": "1473390"
  },
  {
    "start": "1468000",
    "end": "1723000"
  },
  {
    "text": "like to store all my passwords all my secrets inside of this keychain and this applies to both my access key and secret",
    "start": "1473390",
    "end": "1479090"
  },
  {
    "text": "keys as well I don't want to be storing it on disk in the shared config file share credentials file so in order to",
    "start": "1479090",
    "end": "1486590"
  },
  {
    "text": "support this I'm going to be using I'm going to be trying to build a credential provider that accesses my credentials",
    "start": "1486590",
    "end": "1492350"
  },
  {
    "text": "from the keychain so to do this I have a I'm going to use the security command line tool to go ahead and find a generic",
    "start": "1492350",
    "end": "1500539"
  },
  {
    "text": "password a my keychain and up to specify",
    "start": "1500539",
    "end": "1506000"
  },
  {
    "text": "this specific service I want so i'm gonna say demo access and use the",
    "start": "1506000",
    "end": "1513470"
  },
  {
    "text": "correct keychain name so to start you'll notice that it prompts me for passwords",
    "start": "1513470",
    "end": "1519350"
  },
  {
    "text": "so i'm going to go ahead and add my password in there and it prints out a",
    "start": "1519350",
    "end": "1525260"
  },
  {
    "text": "dummy value for my ACT Eschete and now I can go ahead and do the same thing for my secret and you notice it prints out",
    "start": "1525260",
    "end": "1534559"
  },
  {
    "text": "the secret key as well so the idea now is let's lose this command line tool let's create a bash script to go ahead",
    "start": "1534559",
    "end": "1540020"
  },
  {
    "text": "and echo out a JSON payload that the key like and then consume and use those four credentials so in order to do this I",
    "start": "1540020",
    "end": "1546440"
  },
  {
    "text": "create a CLI alias if you're not familiar of the CLI aliases it's very similar to get aliases so the idea is",
    "start": "1546440",
    "end": "1553429"
  },
  {
    "text": "you write a shorthand command for a longer command and you write this write these aliases in the atomicity light",
    "start": "1553429",
    "end": "1560090"
  },
  {
    "text": "alias file and you can see this keychain alias that I have here so for the value",
    "start": "1560090",
    "end": "1567080"
  },
  {
    "text": "will happen is if I run a to miss keychain it will invoke this bash script right here and specifically what's gonna",
    "start": "1567080",
    "end": "1574130"
  },
  {
    "text": "happen is I'm gonna use a fine generic password command so you store my access key and then get my secret key the same",
    "start": "1574130",
    "end": "1579500"
  },
  {
    "text": "way and finally echo this JSON payload back through standard out so if I go",
    "start": "1579500",
    "end": "1586220"
  },
  {
    "text": "ahead and run this you can see this is",
    "start": "1586220",
    "end": "1591950"
  },
  {
    "text": "the exact format that I need to use the custom credential provider so let's go ahead and hook this up now to the ABC",
    "start": "1591950",
    "end": "1598429"
  },
  {
    "text": "Ally I'm going to be using the ABS configure command and setting the credential",
    "start": "1598429",
    "end": "1605190"
  },
  {
    "text": "process to a two based keychain and",
    "start": "1605190",
    "end": "1610309"
  },
  {
    "text": "let's call it a different profile I'm gonna call it my keychain profile so now",
    "start": "1610309",
    "end": "1616529"
  },
  {
    "text": "I'm gonna go ahead and run this and now if I make an API call to say easy to describe regions what I should get is an",
    "start": "1616529",
    "end": "1623640"
  },
  {
    "text": "off airbag because I'm using whoops didn't use the correct profile let me go ahead and change that I'll get off error",
    "start": "1623640",
    "end": "1632580"
  },
  {
    "text": "like this back because if I run a Biscay chain again these are the credentials I'm using right now secret key access",
    "start": "1632580",
    "end": "1639720"
  },
  {
    "text": "key these are not valid credentials obviously so let's actually make this work",
    "start": "1639720",
    "end": "1645860"
  },
  {
    "text": "clear this to get back to the top all right go back to the alias alias file",
    "start": "1647270",
    "end": "1656789"
  },
  {
    "text": "and then from there I'm gonna go ahead and replace demo with the word real as I",
    "start": "1656789",
    "end": "1662159"
  },
  {
    "text": "have my real access key into your key stored in my keychain and I mean - one more thing I'm gonna lock my keychain to",
    "start": "1662159",
    "end": "1667770"
  },
  {
    "text": "show how you can actually prompt for the password in your function as well so I'm",
    "start": "1667770",
    "end": "1674039"
  },
  {
    "text": "gonna go ahead and call it walk keychain on my reinvent keychain so now let's go",
    "start": "1674039",
    "end": "1681090"
  },
  {
    "text": "ahead and rerun that command and the first thing that should happen is I get prompted so I'll go ahead and add my",
    "start": "1681090",
    "end": "1687649"
  },
  {
    "text": "password and will happen is it'll use the the credentials from the keychain to go ahead and call the ec2 described",
    "start": "1687649",
    "end": "1695399"
  },
  {
    "text": "regions so that's the end of this demo the things I hope you got out of it was really the flexibility of the credential",
    "start": "1695399",
    "end": "1702659"
  },
  {
    "text": "process config variable it really allows you to do your own write your own custom",
    "start": "1702659",
    "end": "1708390"
  },
  {
    "text": "proprietor if the seal ID doesn't have a built in solution out of the box for you so there's no blockers for you to do",
    "start": "1708390",
    "end": "1714840"
  },
  {
    "text": "that so now let's go back to the slides",
    "start": "1714840",
    "end": "1721789"
  },
  {
    "start": "1723000",
    "end": "1831000"
  },
  {
    "text": "and talk about another application of the credential process provider so if",
    "start": "1723010",
    "end": "1730030"
  },
  {
    "text": "you work for a larger organization you're probably using an identity provider so the idea is you provide a",
    "start": "1730030",
    "end": "1735730"
  },
  {
    "text": "username and password to your IDP and what from there you have a key you have",
    "start": "1735730",
    "end": "1741190"
  },
  {
    "text": "prettification authorization to other services that you may require so you don't have to keep typing your past",
    "start": "1741190",
    "end": "1746290"
  },
  {
    "text": "password to remember all the different passwords for all different services so in order to show how the workflow works",
    "start": "1746290",
    "end": "1752950"
  },
  {
    "text": "for this this a user will first go ahead and send 8 they're using a password to",
    "start": "1752950",
    "end": "1759190"
  },
  {
    "text": "the IDP Oh IDP will authenticate the LDAP identity stored and then from there",
    "start": "1759190",
    "end": "1764710"
  },
  {
    "text": "that Deneb you Friday return a response back specifically a sam'l assertion so sam'l is an open standard for identity",
    "start": "1764710",
    "end": "1771280"
  },
  {
    "text": "providers and service providers to communicate authentication and authorization and it allows for features",
    "start": "1771280",
    "end": "1777400"
  },
  {
    "text": "such as single sign-on so the idea is that once the identity provider provides a sam'l assertion back the client can",
    "start": "1777400",
    "end": "1783669"
  },
  {
    "text": "then use the sam'l assertion to get credentials they may need so this applies as well to AWS right so",
    "start": "1783669",
    "end": "1789070"
  },
  {
    "text": "specifically for AWS it's in terms of roles so with the same or assertion the",
    "start": "1789070",
    "end": "1794679"
  },
  {
    "text": "client will go ahead and call assume role the sam'l using that same ole certian to assume the role you'll get",
    "start": "1794679",
    "end": "1799809"
  },
  {
    "text": "temporary credentials back and from there you can go ahead and use those temporary credentials to to interact",
    "start": "1799809",
    "end": "1804940"
  },
  {
    "text": "with AWS so fitting this all into the CLI now the idea is we want to actually",
    "start": "1804940",
    "end": "1810549"
  },
  {
    "text": "create a script so that when the CLI runs it will invoke the script this",
    "start": "1810549",
    "end": "1816490"
  },
  {
    "text": "simple workflow will go through and we will use the temporary credentials return back so let's go ahead and show",
    "start": "1816490",
    "end": "1823720"
  },
  {
    "text": "how you go about doing this now all",
    "start": "1823720",
    "end": "1830950"
  },
  {
    "text": "right so to get a better visualization of exactly how this workflow works let's",
    "start": "1830950",
    "end": "1836770"
  },
  {
    "start": "1831000",
    "end": "1936000"
  },
  {
    "text": "actually hop over to the browser as the browser will give you a nice overview exactly of what the process is so I have",
    "start": "1836770",
    "end": "1844600"
  },
  {
    "text": "a octave login endpoint set up a table supports many different sam'l providers",
    "start": "1844600",
    "end": "1849850"
  },
  {
    "text": "for this case I just decided to go up octave and the idea is go ahead and type my username and I type",
    "start": "1849850",
    "end": "1855980"
  },
  {
    "text": "my password in and go ahead and sign in",
    "start": "1855980",
    "end": "1861590"
  },
  {
    "text": "and when I get to this page it will show all the different services I can log in so when I go ahead and click one of",
    "start": "1861590",
    "end": "1868010"
  },
  {
    "text": "these say the abus the ABS one it will take the sam'l assertion and log into",
    "start": "1868010",
    "end": "1873620"
  },
  {
    "text": "the console for me so one thing I want to point out if you can see there is",
    "start": "1873620",
    "end": "1879560"
  },
  {
    "text": "that I am now logged in with a sam'l roll that through a better as a federated user and the reason I'm",
    "start": "1879560",
    "end": "1886490"
  },
  {
    "text": "showing you this to the console is because it's gonna be very similar on how we do with the CLI but we're just",
    "start": "1886490",
    "end": "1891770"
  },
  {
    "text": "scripting it instead so to help us with",
    "start": "1891770",
    "end": "1897350"
  },
  {
    "text": "actually assuming roles of sam'l alongside the credential provider we launched a new project called abus",
    "start": "1897350",
    "end": "1903590"
  },
  {
    "text": "process creds it's under the ADA slabs repository or Ibis labs organization but the idea is",
    "start": "1903590",
    "end": "1909950"
  },
  {
    "text": "this is a command-line tool over in Python for providing different sources",
    "start": "1909950",
    "end": "1914990"
  },
  {
    "text": "of credentials or custom credential providers for now all we have support is",
    "start": "1914990",
    "end": "1920180"
  },
  {
    "text": "for sam'l so let's actually show how you can kiss started using this by hopping back into the command line so the very",
    "start": "1920180",
    "end": "1927350"
  },
  {
    "text": "first thing you can do is run pip install ADIS process credential process spreads I heard it installed but that",
    "start": "1927350",
    "end": "1937640"
  },
  {
    "start": "1936000",
    "end": "2016000"
  },
  {
    "text": "would install it for you and now from there I actually I have a CLI I can use to interact with sam'l and gate",
    "start": "1937640",
    "end": "1944120"
  },
  {
    "text": "credentials that way so if I if I type this and add sam'l to it let's go ahead",
    "start": "1944120",
    "end": "1953240"
  },
  {
    "text": "and to the help documentation real quick and see what the arguments you probably I didn't see this KMI tool so you",
    "start": "1953240",
    "end": "1958580"
  },
  {
    "text": "provided the endpoint so from the console that was the sam'l login page I was using then there's a username you",
    "start": "1958580",
    "end": "1964490"
  },
  {
    "text": "provided when you first log in you also have to provide specify what provider using out of the box we'd support both",
    "start": "1964490",
    "end": "1970580"
  },
  {
    "text": "octa and a DFS and then there's also the role R so this is the role we want to soon with that sam'l assertion so let's",
    "start": "1970580",
    "end": "1977360"
  },
  {
    "text": "go ahead and actually run a sample command I have one of these saves already up front so I'm going to go",
    "start": "1977360",
    "end": "1983420"
  },
  {
    "text": "ahead and cut that out and go ahead and run it and in order to",
    "start": "1983420",
    "end": "1990860"
  },
  {
    "text": "better visualize what exactly is doing I'm gonna use the - Jesper boast flag and pipe all that input into our output",
    "start": "1990860",
    "end": "1997130"
  },
  {
    "text": "into a pager such as less so from now the first thing it's gonna happen it's very similar to the console where you",
    "start": "1997130",
    "end": "2003250"
  },
  {
    "text": "have to type in your password so I'm gonna go ahead and do that real quick so",
    "start": "2003250",
    "end": "2009730"
  },
  {
    "text": "right now it will show exactly what it what is going on with us in running this",
    "start": "2009730",
    "end": "2016750"
  },
  {
    "text": "command line so if you look at the very top it first sends an HTTP POST with my username and password directly to the",
    "start": "2016750",
    "end": "2022690"
  },
  {
    "text": "octa api endpoint so from there with a HTTP request now sent it returns a",
    "start": "2022690",
    "end": "2027760"
  },
  {
    "text": "response back to me and you can see the sam'l assertion that it received back and you notice that is a big XML",
    "start": "2027760",
    "end": "2034240"
  },
  {
    "text": "document with a bunch of information related authentication authorization so you can scroll down through that and get",
    "start": "2034240",
    "end": "2040270"
  },
  {
    "text": "to the next step which was the Zoom roll the sam'l portion right so once we",
    "start": "2040270",
    "end": "2045910"
  },
  {
    "text": "scrolled down all the way you can see that once we have the sam'l assertion we",
    "start": "2045910",
    "end": "2051040"
  },
  {
    "text": "call SDS assume roll with sam'l and in this parameters we provide to it include",
    "start": "2051040",
    "end": "2057429"
  },
  {
    "text": "the principal arms so this is the same ol provider we're using there's the roll aren't so if you remember from the console view we assume the roll through",
    "start": "2057429",
    "end": "2064570"
  },
  {
    "text": "the assumed sam'l roll and also the sam'l assertion note that is base64 encoded and at the very end you see the",
    "start": "2064570",
    "end": "2071560"
  },
  {
    "text": "credentials I got back these are temporary credentials so if you see there's a session token and also an",
    "start": "2071560",
    "end": "2076929"
  },
  {
    "text": "expiration so these are temporary so we can keep using these until these two expire for us and from there let's go",
    "start": "2076929",
    "end": "2083919"
  },
  {
    "text": "ahead and plug it into the a to be COI and to do that let's go ahead and remove some of these arguments that we don't",
    "start": "2083919",
    "end": "2090340"
  },
  {
    "text": "necessarily need and run a de bris with a new profile sam'l configure set",
    "start": "2090340",
    "end": "2097990"
  },
  {
    "text": "command",
    "start": "2097990",
    "end": "2100980"
  },
  {
    "text": "and now once I set that I can go ahead and call ABS easy to describe regions",
    "start": "2104200",
    "end": "2112090"
  },
  {
    "text": "and set my profile is sam'l and the very",
    "start": "2112090",
    "end": "2118850"
  },
  {
    "text": "first thing it's gonna happen is we're get prompted like before and to the",
    "start": "2118850",
    "end": "2125720"
  },
  {
    "text": "password and from there it should go ahead and get the same assertion and then make the API request to describe",
    "start": "2125720",
    "end": "2131600"
  },
  {
    "text": "regions another nice part about the the command-line tool that I'm using is it does caching so remember it has an",
    "start": "2131600",
    "end": "2137570"
  },
  {
    "text": "expiration date so what it does now is if it notices it has some potential response I could use",
    "start": "2137570",
    "end": "2143960"
  },
  {
    "text": "it loads it up checks to see if it's expired and if it isn't it goes heads and reuse it so if I go ahead and run",
    "start": "2143960",
    "end": "2149240"
  },
  {
    "text": "this command again I'm not gonna get prompted for my password so that's really cool because it's similar to how",
    "start": "2149240",
    "end": "2154490"
  },
  {
    "text": "the login experience for the console works where you sign in once so you don't have to worry about it again so",
    "start": "2154490",
    "end": "2160280"
  },
  {
    "text": "that was the end of this demo the key points I really hope you got out of it was to check out the APIs process creds",
    "start": "2160280",
    "end": "2166190"
  },
  {
    "text": "command line tool it's very helpful if you're currently using sam'l in your workflow another thing also wanted to",
    "start": "2166190",
    "end": "2171620"
  },
  {
    "text": "point out was while this command line tool was written in Python a nice part about the credential providers is that",
    "start": "2171620",
    "end": "2176900"
  },
  {
    "text": "you don't have to be stuck using Python unlike another SDK where you can provide",
    "start": "2176900",
    "end": "2183050"
  },
  {
    "text": "yeah I could have written this entire thing and go and as long as I have the JSON output that the CLI expects based",
    "start": "2183050",
    "end": "2188930"
  },
  {
    "text": "off the protocol it will work just fine",
    "start": "2188930",
    "end": "2192819"
  },
  {
    "text": "all right so now that I talked about the credential provider there is another",
    "start": "2197640",
    "end": "2202739"
  },
  {
    "start": "2198000",
    "end": "2543000"
  },
  {
    "text": "there's another portion of the improving the providing financial area that I want to talk about which was related to",
    "start": "2202739",
    "end": "2208799"
  },
  {
    "text": "assume roles and have you really expanded that ability so let's start",
    "start": "2208799",
    "end": "2214650"
  },
  {
    "text": "talking about why we care about assuming roles in the sense that when you first start out with AWS it's very likely that",
    "start": "2214650",
    "end": "2220739"
  },
  {
    "text": "you just have a single account with all your abs resources in it but as you expand out you're probably going to want",
    "start": "2220739",
    "end": "2226470"
  },
  {
    "text": "to break out into multiple different accounts such as so where you have the team accounts below the org accounts and",
    "start": "2226470",
    "end": "2232769"
  },
  {
    "text": "each and the reason why you want to break these out is that it gives you a nice sense of isolation so members in",
    "start": "2232769",
    "end": "2238499"
  },
  {
    "text": "one team account can't access resources another team account furthermore it allows you to audit billing per team",
    "start": "2238499",
    "end": "2245460"
  },
  {
    "text": "better and also if you're using services like a to s organizations you can manage policies and you can funnel bill bills",
    "start": "2245460",
    "end": "2251730"
  },
  {
    "text": "straight to the root account or the org account in our case and the reason why we want to care about assume roles in",
    "start": "2251730",
    "end": "2257430"
  },
  {
    "text": "this case is because you can't actually use your credentials from one account to another instead you have to use roles",
    "start": "2257430",
    "end": "2264150"
  },
  {
    "text": "where you take your credentials and a role from another account and assume role to get temporary credentials to use",
    "start": "2264150",
    "end": "2269759"
  },
  {
    "text": "and interact with those alias resources so in order to actually do this with the",
    "start": "2269759",
    "end": "2275730"
  },
  {
    "text": "aid of SCO why you do it using the ABS config file so you can see here I have",
    "start": "2275730",
    "end": "2281130"
  },
  {
    "text": "two profiles one for administrating my org account and another one for administrating my team account so if I",
    "start": "2281130",
    "end": "2287249"
  },
  {
    "text": "was to go ahead and run abus s 3 LS to list on my buckets to my team account I would do such this such as this and what",
    "start": "2287249",
    "end": "2295799"
  },
  {
    "text": "happens is when it runs identify the profile I'm trying to run yes a notice",
    "start": "2295799",
    "end": "2301529"
  },
  {
    "text": "there is a roll arm and with this roll Arn it now needs a figure out what credentials and needs to assume the role",
    "start": "2301529",
    "end": "2307559"
  },
  {
    "text": "so it specifies a source profile this admin order account and notices that there are access keys and secret keys",
    "start": "2307559",
    "end": "2314579"
  },
  {
    "text": "that can use to then assume a role and from there you'll get temporary credentials they can use to go ahead and",
    "start": "2314579",
    "end": "2321089"
  },
  {
    "text": "list those buckets and the team account all right so now let's motivate the new",
    "start": "2321089",
    "end": "2326220"
  },
  {
    "text": "feature that I want to talk about for our this year and it's related to",
    "start": "2326220",
    "end": "2331320"
  },
  {
    "text": "the scenario where what happens if the team account wants to expand just like the org account did and add separate",
    "start": "2331320",
    "end": "2337350"
  },
  {
    "text": "accounts for each project if we had a structure like this and the orga camp",
    "start": "2337350",
    "end": "2342450"
  },
  {
    "text": "wanted to access resources in the project account ideally what would happen is the org account could just assume a role from the team account and",
    "start": "2342450",
    "end": "2349200"
  },
  {
    "text": "from the team account you can assume a role for the project accounts to access those resources however prior to this",
    "start": "2349200",
    "end": "2355620"
  },
  {
    "text": "year the only way the CLI only supported one hops for assumed roles so in order to get this working the project account",
    "start": "2355620",
    "end": "2362100"
  },
  {
    "text": "would have to get permissions to the org account to assume its role for administrating its resources and with",
    "start": "2362100",
    "end": "2369720"
  },
  {
    "text": "that being said the feature that we launched this year is related to being able to do recursive assumed roles so to",
    "start": "2369720",
    "end": "2376050"
  },
  {
    "text": "do more than one and specifically you can see how the alias config file got",
    "start": "2376050",
    "end": "2381060"
  },
  {
    "text": "updated here with an admin project account and now if I want to list my buckets in my project account all I have",
    "start": "2381060",
    "end": "2386790"
  },
  {
    "text": "to do is specify profile and the process is very similar what will happen is they'll don't know identified there's a",
    "start": "2386790",
    "end": "2392970"
  },
  {
    "text": "role to be assumed oh try to fight credentials in the next profile then from there it notices another role learn",
    "start": "2392970",
    "end": "2399630"
  },
  {
    "text": "and it'll continue trying to find credentials until it stops so it'll say that there's credentials here and then",
    "start": "2399630",
    "end": "2405660"
  },
  {
    "text": "I'll resolve this change so take this to take the access key and take your key to a similar role for the admin team",
    "start": "2405660",
    "end": "2411630"
  },
  {
    "text": "account and then it will get temporary credentials to go ahead and assume a role with the project account to get the",
    "start": "2411630",
    "end": "2417600"
  },
  {
    "text": "final temporary credentials to list those buckets in the project account so this feature really allows it to allows",
    "start": "2417600",
    "end": "2424560"
  },
  {
    "text": "you to be a lot more flexible in terms of how you administer roles and handle",
    "start": "2424560",
    "end": "2429660"
  },
  {
    "text": "permissions and this enables you a lot more at the CLI it's a bill on top of that in terms of how you can assume",
    "start": "2429660",
    "end": "2436620"
  },
  {
    "text": "roles of the CLI one feature that I want to talk about specifically that I'm really excited I we launched this year",
    "start": "2436620",
    "end": "2442530"
  },
  {
    "text": "was the ability to specify which credential source you want to actually go ahead and use to assume roles",
    "start": "2442530",
    "end": "2449540"
  },
  {
    "text": "specifically this is related this example is related to ec2 instance metadata so with Amazon ec2 you can",
    "start": "2449540",
    "end": "2456840"
  },
  {
    "text": "store your credentials as an instance metadata so you don't have to store it on the box instead you can query the instance method",
    "start": "2456840",
    "end": "2461859"
  },
  {
    "text": "to go ahead and get temporary credentials to go ahead and make ATF's API calls but however prior prior years",
    "start": "2461859",
    "end": "2468789"
  },
  {
    "text": "with ABC Li you always have to specify your credentials and Ava's config file thus defeating the purpose of storing an",
    "start": "2468789",
    "end": "2474999"
  },
  {
    "text": "instance metadata because in order to access resources in another account you",
    "start": "2474999",
    "end": "2480309"
  },
  {
    "text": "can only specify it via the config file but with this year what we've added is",
    "start": "2480309",
    "end": "2485469"
  },
  {
    "text": "the convential source config variable so the idea is that if we call the LS",
    "start": "2485469",
    "end": "2491739"
  },
  {
    "text": "command with the profile admin team account what will happen is well identify the role of control - same as",
    "start": "2491739",
    "end": "2498190"
  },
  {
    "text": "before but instead though notice is a credential source right so from there the CLI will access the ec2 instance",
    "start": "2498190",
    "end": "2504279"
  },
  {
    "text": "metadata get the temporary credentials to go ahead and assume that role and get temporary credentials - lists all those",
    "start": "2504279",
    "end": "2510279"
  },
  {
    "text": "buckets on top of that likewise how we had other credential sources the",
    "start": "2510279",
    "end": "2516519"
  },
  {
    "text": "credentials for supports those other ones as well so we get soft swap this out for something like ECS container so",
    "start": "2516519",
    "end": "2522910"
  },
  {
    "text": "we can get credentials from lis CCS container credentials and also you can do it from the environment as well so",
    "start": "2522910",
    "end": "2528400"
  },
  {
    "text": "that gives you a lot of flexibility there and to wrap this all up I'm going to go ahead and do another demo where I",
    "start": "2528400",
    "end": "2533589"
  },
  {
    "text": "demonstrate how you can have this setup on your East two instance alright so",
    "start": "2533589",
    "end": "2544299"
  },
  {
    "start": "2543000",
    "end": "2650000"
  },
  {
    "text": "let's go ahead and SSH on to this ec2 instance that I've running and on this",
    "start": "2544299",
    "end": "2554529"
  },
  {
    "text": "box let's first make sure we don't have any credentials stored like in the config file so if I do it I can't real",
    "start": "2554529",
    "end": "2560319"
  },
  {
    "text": "quick on the abus config you'll notice that there's just this profile specifying the rural arm the credential",
    "start": "2560319",
    "end": "2566319"
  },
  {
    "text": "source and to further the point if I check the credentials file as well that",
    "start": "2566319",
    "end": "2573489"
  },
  {
    "text": "file doesn't even exist so now I can still go ahead and make API calls because I'm querying the instance",
    "start": "2573489",
    "end": "2578739"
  },
  {
    "text": "metadata for my default credentials so let's go ahead and use APIs code commit again to list out a repositories",
    "start": "2578739",
    "end": "2586410"
  },
  {
    "text": "and as you can see below these are the same repositories that I had from the first section my repo and other repo so",
    "start": "2589260",
    "end": "2596640"
  },
  {
    "text": "now let's go ahead and try to list the repositories for the for this for this",
    "start": "2596640",
    "end": "2603359"
  },
  {
    "text": "account and in order to do that you notice that we have the role aren't and a credential source being easy to it and",
    "start": "2603359",
    "end": "2609390"
  },
  {
    "text": "submitted it so use my Depot credentials to assume this role to list the coca met",
    "start": "2609390",
    "end": "2615330"
  },
  {
    "text": "repositories so let's go ahead and do that again and now this time I'll just specify the profile as other account and",
    "start": "2615330",
    "end": "2624359"
  },
  {
    "text": "you can see when I run this that I have no repositories in this count so you can see how it can access different",
    "start": "2624359",
    "end": "2629580"
  },
  {
    "text": "resources based off the count so to reiterate the usefulness of this I was",
    "start": "2629580",
    "end": "2636150"
  },
  {
    "text": "not storing any credentials on the box for easy to it on my ec2 instance I was able to leverage the instance metadata to do cross accounts at a resource axis",
    "start": "2636150",
    "end": "2645470"
  },
  {
    "text": "so to wrap this all up in terms of improvements related to providing credentials I talked about how you can",
    "start": "2649460",
    "end": "2656430"
  },
  {
    "text": "use the credential process to go ahead and plug in your own custom credential provider in the case that the CLI",
    "start": "2656430",
    "end": "2662789"
  },
  {
    "text": "doesn't have what you need straight out of the box I talked about how you can recursively assume roles for the source",
    "start": "2662789",
    "end": "2669089"
  },
  {
    "text": "profile of the CLI in a case where you have multiple accounts you want to manage and also talked about credential",
    "start": "2669089",
    "end": "2674849"
  },
  {
    "text": "source so specifying credentials outside of the config file to go ahead and assume the role so that's especially",
    "start": "2674849",
    "end": "2681569"
  },
  {
    "text": "useful for ec2 instance metadata and finally let's get to the last area",
    "start": "2681569",
    "end": "2688019"
  },
  {
    "text": "improvement related to Amazon s3 specifically the s3 transfer commands",
    "start": "2688019",
    "end": "2693180"
  },
  {
    "text": "these are really really useful commands lot of functionality and you have a lot",
    "start": "2693180",
    "end": "2699210"
  },
  {
    "text": "of configuration options available to you to get the performance that you want based off your environment so to",
    "start": "2699210",
    "end": "2704549"
  },
  {
    "text": "understand the configuration options one of the things we added in 2017 is a new",
    "start": "2704549",
    "end": "2710069"
  },
  {
    "text": "configuration option so let's go ahead and talk about how the CLI commands work under the hood to understand how these",
    "start": "2710069",
    "end": "2716579"
  },
  {
    "text": "configuration this new configuration option will work so what I have here is inves s3 CP so I'm going to be doing a",
    "start": "2716579",
    "end": "2723119"
  },
  {
    "text": "recursive download of the files stored in s3 and what happens first is each",
    "start": "2723119",
    "end": "2729450"
  },
  {
    "text": "thread in this thread pool that the CLI has is allocated to get a get object for a specific object so these threads in",
    "start": "2729450",
    "end": "2736440"
  },
  {
    "text": "parallel will go ahead and call get object requests on these s3 objects and they'll get a stream handle back so as",
    "start": "2736440",
    "end": "2743609"
  },
  {
    "text": "once they get a response back it will go ahead and read from the stream chunk by chunk adding to this i/o queue so each",
    "start": "2743609",
    "end": "2749670"
  },
  {
    "text": "thread will keep on doing this and at the other end of the i/o queue there is an i/o thread pulling off the queue and",
    "start": "2749670",
    "end": "2755309"
  },
  {
    "text": "writing it down to disk and as it's writing to disk the i/o thread the producer threads are still reading from",
    "start": "2755309",
    "end": "2761670"
  },
  {
    "text": "the stream and going ahead and adding it to the i/o queue so as it relates to the configuration options for s3 it's the",
    "start": "2761670",
    "end": "2768809"
  },
  {
    "text": "specifics used to setting the options in the system and in order to set these",
    "start": "2768809",
    "end": "2775349"
  },
  {
    "text": "configuration options you have to do it through the Avis config file and print previously of this year there's only",
    "start": "2775349",
    "end": "2781349"
  },
  {
    "text": "four Chansey use and one specifically what I want to talk about is max concurrent requests so with max concurrent requests",
    "start": "2781349",
    "end": "2789119"
  },
  {
    "text": "the idea is that it directly reflects the number of threads being used so in",
    "start": "2789119",
    "end": "2794619"
  },
  {
    "text": "this current setup I have a max memory request of three because there's three threads and if I wanted to speed this up",
    "start": "2794619",
    "end": "2800439"
  },
  {
    "text": "I can go ahead and crease that number say four so I have four threads making kid object quest so hopefully I get a",
    "start": "2800439",
    "end": "2805660"
  },
  {
    "text": "little bit speed up there so going on but now with the feature I want to talk about I want to talk about the opposite",
    "start": "2805660",
    "end": "2812229"
  },
  {
    "text": "case where I don't want to be running it as fast as I can I have a limited amount",
    "start": "2812229",
    "end": "2817509"
  },
  {
    "text": "of bandwidth I don't want to flood my network so in that case an appropriate action would be to go ahead and lower",
    "start": "2817509",
    "end": "2823269"
  },
  {
    "text": "the max request to something lower so this less threads making get object requests this is a good solution however",
    "start": "2823269",
    "end": "2830289"
  },
  {
    "text": "there is the one portion that max recurring fee request doesn't really handle and that is the ability to",
    "start": "2830289",
    "end": "2836130"
  },
  {
    "text": "throttle the reads of these streams right now these threads are reading as fastly they possibly can and putting it",
    "start": "2836130",
    "end": "2842769"
  },
  {
    "text": "on coq so whatever a resource allocation is branded to them and specifically the",
    "start": "2842769",
    "end": "2847959"
  },
  {
    "text": "configuration option that we added was called max bandwidth so it allows you to set the speed in which it's reading from",
    "start": "2847959",
    "end": "2853839"
  },
  {
    "text": "these strings so let's go ahead and demo what that specifically looks like all",
    "start": "2853839",
    "end": "2865390"
  },
  {
    "start": "2865000",
    "end": "3038000"
  },
  {
    "text": "right so to reiterate I'm still not you see to instance that is SH Don to and on",
    "start": "2865390",
    "end": "2871239"
  },
  {
    "text": "this ec2 instance let's go ahead and cut that Avis config file again and you",
    "start": "2871239",
    "end": "2877900"
  },
  {
    "text": "notice there's no s3 configurations currently set up right so if I was to go ahead and download one of these files",
    "start": "2877900",
    "end": "2885239"
  },
  {
    "text": "whoops typo you'll start saying this is",
    "start": "2891400",
    "end": "2900980"
  },
  {
    "text": "about the max you can save the baton bandwidth right here when it's transferring files over time it ends up",
    "start": "2900980",
    "end": "2906349"
  },
  {
    "text": "being about 45 megabytes per second so let's take the case where I don't want to be using that much bandwidth and",
    "start": "2906349",
    "end": "2912500"
  },
  {
    "text": "doing these transfers right I want to be able to use it for some other application so in order to actually go",
    "start": "2912500",
    "end": "2918619"
  },
  {
    "text": "ahead and decrease the amount of bandwidth I'm gonna try to tear some out of bandwidth I'm using I can go ahead",
    "start": "2918619",
    "end": "2926000"
  },
  {
    "text": "and set my max concurrent request to something lower so let's wait for this",
    "start": "2926000",
    "end": "2932000"
  },
  {
    "text": "to finish and now I'm gonna use the ABS can fit your command again as we go ahead and set the max to turn correct",
    "start": "2932000",
    "end": "2938180"
  },
  {
    "text": "press is something low let's say like let's make it one",
    "start": "2938180",
    "end": "2942430"
  },
  {
    "text": "cool so now if I cut the file again you can see that Max and current request is set to 1 and if I rerun this command",
    "start": "2948990",
    "end": "2955710"
  },
  {
    "text": "you'll notice that the transfer speed is definitely lower than where it was and",
    "start": "2955710",
    "end": "2961920"
  },
  {
    "text": "it's ending up being about 10 megabytes per second it's still a little high for my taste ideally let's say I wanted to",
    "start": "2961920",
    "end": "2967680"
  },
  {
    "text": "be 1 megabyte per second so I'm going to ctrl C out of this and then I'm gonna",
    "start": "2967680",
    "end": "2972750"
  },
  {
    "text": "set the max bandwidth option so the idea is I can go ahead and specify max",
    "start": "2972750",
    "end": "2980160"
  },
  {
    "text": "bandwidth as well and specify this specific speed I want so if I use a rate",
    "start": "2980160",
    "end": "2986450"
  },
  {
    "text": "suffix yeah I can set it to 1 megabyte per second so now if I cut the file they",
    "start": "2986450",
    "end": "2994619"
  },
  {
    "text": "look like this now where the max bandwidth is set to 1 megabyte per second and if I rerun it one thing",
    "start": "2994619",
    "end": "3004160"
  },
  {
    "text": "you'll notice is it doesn't get to the speeds that we were saying with the 1 thread so setting the max concurrent",
    "start": "3004160",
    "end": "3009170"
  },
  {
    "text": "request is something low and then using max bandwidth as well can be both very useful tools to get this desired speeds",
    "start": "3009170",
    "end": "3015650"
  },
  {
    "text": "you want in the performance if the max current K request isn't doing a good",
    "start": "3015650",
    "end": "3021020"
  },
  {
    "text": "isn't doing it well enough for you so",
    "start": "3021020",
    "end": "3026900"
  },
  {
    "text": "with that now showed let's continue back on the slides",
    "start": "3026900",
    "end": "3032079"
  },
  {
    "text": "all right so that wraps up the section for Amazon s3 where I talked about how",
    "start": "3037380",
    "end": "3043740"
  },
  {
    "start": "3038000",
    "end": "3243000"
  },
  {
    "text": "you can use max bandwidth to go ahead and set those maximum trance the maximum transfer speed for the demo I don't need",
    "start": "3043740",
    "end": "3050070"
  },
  {
    "text": "two downloads but this also applies for uploads so the idea is that when you provide a upload to s3 or put object you",
    "start": "3050070",
    "end": "3057180"
  },
  {
    "text": "providing a stream so the same interface applies to uploads where the throttle is the rate in which s so we can read from",
    "start": "3057180",
    "end": "3062220"
  },
  {
    "text": "that stream so now that I've covered all the sections let's go over a summary of",
    "start": "3062220",
    "end": "3068580"
  },
  {
    "text": "what I covered so first I talked about debunking so the idea is you can make it",
    "start": "3068580",
    "end": "3073740"
  },
  {
    "text": "easier on yourself to understand how the CLI commands are running or the CLI history mode enabled because I'll keep",
    "start": "3073740",
    "end": "3079950"
  },
  {
    "text": "track of all the CLI commands they ran over time there's also the latest history show so you can see specific",
    "start": "3079950",
    "end": "3085110"
  },
  {
    "text": "events on how the CLI command got executed I there is also a double sister list so you can see a list of all that",
    "start": "3085110",
    "end": "3091350"
  },
  {
    "text": "all the commands got ran and from there you can use the command IDs and pipe it into the Haber's history show to see",
    "start": "3091350",
    "end": "3096510"
  },
  {
    "text": "specifics for a specific command that you ran I talked about how you can",
    "start": "3096510",
    "end": "3101760"
  },
  {
    "text": "provide how we expanded providing credentials so using a credential process to go ahead and write your own",
    "start": "3101760",
    "end": "3107250"
  },
  {
    "text": "custom provider by hooking it in with a credential process config variable so the CI will invoke that process to get",
    "start": "3107250",
    "end": "3113520"
  },
  {
    "text": "credentials I also talked about the source profile so the ability to do",
    "start": "3113520",
    "end": "3118830"
  },
  {
    "text": "multiple assume roles in order to get credentials you use with a table us and also talk about credential source so",
    "start": "3118830",
    "end": "3124170"
  },
  {
    "text": "being able to specify credentials outside of the your config file specifically you can specify ec2",
    "start": "3124170",
    "end": "3130950"
  },
  {
    "text": "instance metadata and finally I talked about max bandwidth where you can set it in order to ensure that the necessary",
    "start": "3130950",
    "end": "3136620"
  },
  {
    "text": "commands won't exceed a specific bandwidth and you can preserve your network that way so now I summarized all",
    "start": "3136620",
    "end": "3144300"
  },
  {
    "text": "this let's talk about what's next and here is a list of helpful links that I recommend checking out after this talk",
    "start": "3144300",
    "end": "3149760"
  },
  {
    "text": "the first link is to the ABC live repository so I'm bring this up because a lot of the features that we develop",
    "start": "3149760",
    "end": "3156960"
  },
  {
    "text": "with the CLI comes straight from github these are requests from users of the COI so all the most of the features I talked",
    "start": "3156960",
    "end": "3163800"
  },
  {
    "text": "about today or heavily requested via github so if you do have a feature request you want go ahead and",
    "start": "3163800",
    "end": "3171030"
  },
  {
    "text": "check out github save there's an existing issue open for it plus one it if there isn't go ahead and open an",
    "start": "3171030",
    "end": "3176130"
  },
  {
    "text": "issue so we can start the conversation that way the second link is to the process providers so this is a link to",
    "start": "3176130",
    "end": "3182370"
  },
  {
    "text": "the repository right now we only have support for sam'l but as time goes on we'll likely be adding more process",
    "start": "3182370",
    "end": "3188220"
  },
  {
    "text": "providers so have more options to hook into the CLI the third link is related",
    "start": "3188220",
    "end": "3194430"
  },
  {
    "text": "to the reinvent scripts so the clunk the clone script and alias I'm gonna be adding that to Ava CLI examples under",
    "start": "3194430",
    "end": "3201720"
  },
  {
    "text": "there there you see previous scripts from 2015-2016 I'll be making a 20-17 directory and finally the last link is a",
    "start": "3201720",
    "end": "3208650"
  },
  {
    "text": "link to Davis blog I recommend phone that as the year goes on we'll be posting information about features like",
    "start": "3208650",
    "end": "3214770"
  },
  {
    "text": "Oh out any tips that come in handy and working at the ABC Ally so with that",
    "start": "3214770",
    "end": "3221100"
  },
  {
    "text": "being said I thank you guys for coming I really hope that you got a lot out of this and if you if you're on Twitter and",
    "start": "3221100",
    "end": "3229920"
  },
  {
    "text": "you want to follow you can follow me I will be posting stuff about the CLI on",
    "start": "3229920",
    "end": "3234990"
  },
  {
    "text": "and off so if you're interested in that I recommend you doing that and I want to thank you guys all again for coming",
    "start": "3234990",
    "end": "3241040"
  },
  {
    "text": "[Applause]",
    "start": "3241040",
    "end": "3245790"
  }
]