[
  {
    "text": "so thanks for sticking around last session session of the day uh i",
    "start": "160",
    "end": "5759"
  },
  {
    "text": "promised to try to make it a good one i'm actually pretty excited today is my one year anniversary with amazon not",
    "start": "5759",
    "end": "12559"
  },
  {
    "text": "yeah thank you not not yesterday not tomorrow actually exactly one year today and during the",
    "start": "12559",
    "end": "18640"
  },
  {
    "text": "last 12 months i've actually had a good opportunity to talk with a lot of customers like you and a few common things come out you",
    "start": "18640",
    "end": "24800"
  },
  {
    "text": "know one projects tend to start off really small but then grow really fast and one of the challenges with that is",
    "start": "24800",
    "end": "30720"
  },
  {
    "text": "you know as you go from one developer to two to hundreds of developers how do you share and delegate access to",
    "start": "30720",
    "end": "36320"
  },
  {
    "text": "that aws account that you have so that is what we're going to talk about for the next 60 minutes i am going",
    "start": "36320",
    "end": "42160"
  },
  {
    "text": "to try to keep it lively i have a lot of demos so hopefully that will keep you guys engaged i know it's",
    "start": "42160",
    "end": "49520"
  },
  {
    "text": "been a long two days so with that my name is jeff weir and",
    "start": "49520",
    "end": "54559"
  },
  {
    "text": "i'm a principal product manager on the identity and access management team do i need to switch it over to the",
    "start": "54559",
    "end": "59920"
  },
  {
    "text": "slides ah there we go",
    "start": "59920",
    "end": "65040"
  },
  {
    "text": "so before we get started a couple goals for this talk really two things that i want you to",
    "start": "65040",
    "end": "70240"
  },
  {
    "text": "walk away from this one is a good understanding of the technology that you need to use to delegate access to your",
    "start": "70240",
    "end": "76640"
  },
  {
    "text": "account specifically the heart of this is something we call sessions and i use a couple different terms for this",
    "start": "76640",
    "end": "82320"
  },
  {
    "text": "throughout the presentations but it's basically the temporary security credentials that you get from the security token service or sts",
    "start": "82320",
    "end": "90159"
  },
  {
    "text": "there's a couple different ways that you get those temporary credentials we're going to look at roles how you can",
    "start": "90159",
    "end": "95200"
  },
  {
    "text": "assume a role we're also going to look at federated sessions and then at the towards the end of the",
    "start": "95200",
    "end": "100240"
  },
  {
    "text": "presentation i'm kind of giving you a comparison of when to choose which between them there's a bunch of different ways you",
    "start": "100240",
    "end": "106240"
  },
  {
    "text": "can use sessions or temporary security credentials but we'll look at cross-account access doing delegation at",
    "start": "106240",
    "end": "112479"
  },
  {
    "text": "the api level we'll also look at api federation and to kick this off i'll actually give",
    "start": "112479",
    "end": "118000"
  },
  {
    "text": "you guys a demonstration of how you can single sign into the aws management console using federation",
    "start": "118000",
    "end": "124479"
  },
  {
    "text": "so with that i promised i'll try to put in as many demonstrations as we have",
    "start": "124479",
    "end": "129759"
  },
  {
    "text": "so the thing i would point out about this first demo is it's published and you can download it and you can play",
    "start": "129759",
    "end": "135599"
  },
  {
    "text": "with the source code so the url is there please take a photo it's also i've put this through the the",
    "start": "135599",
    "end": "142720"
  },
  {
    "text": "slide so if you don't remember the long ugly looking number at the end you can always grab it",
    "start": "142720",
    "end": "148959"
  },
  {
    "text": "but the way this demo is going to work is i'm going to log into a windows desktop i'm actually going to do this in",
    "start": "148959",
    "end": "154720"
  },
  {
    "text": "in ec2 inside there i've deployed windows active directory so i'm going to be authenticated as a user in ad i'm going",
    "start": "154720",
    "end": "163120"
  },
  {
    "text": "to hit an internal proxy server and that proxy server is going to present me with a couple of different roles that i can",
    "start": "163120",
    "end": "169440"
  },
  {
    "text": "assume to log into the aws management console so i'll choose the role that i want to",
    "start": "169440",
    "end": "175440"
  },
  {
    "text": "take and i'll be logged into the management console and i'll do this without having to have a username a password or having",
    "start": "175440",
    "end": "182239"
  },
  {
    "text": "to create an i am user to do so so let me show you what this looks like",
    "start": "182239",
    "end": "189159"
  },
  {
    "text": "so the first thing i uh like i mentioned uh if you if you're interested in playing with this yourself you can go",
    "start": "202400",
    "end": "208319"
  },
  {
    "text": "and you can go to the to the sample site you can download it included with the sample",
    "start": "208319",
    "end": "215360"
  },
  {
    "text": "is full documentation it's actually a visual studio project in in c sharp if you're familiar with that",
    "start": "215360",
    "end": "222319"
  },
  {
    "text": "but also if you're not a developer you're not interested you just want to evaluate it there's actually a simple msi that we created for it as well",
    "start": "222319",
    "end": "229200"
  },
  {
    "text": "so you can go through run the setup simply give it a site name",
    "start": "229200",
    "end": "234319"
  },
  {
    "text": "where you want to store it if you're going to use http or https i would go through the wizard it would create it",
    "start": "234319",
    "end": "240879"
  },
  {
    "text": "like any of those good cooking shows you know i've already deployed this and so you know you make",
    "start": "240879",
    "end": "246239"
  },
  {
    "text": "the batter you put it in the oven you pull out the cake 60 seconds later so i've already deployed it and i have my",
    "start": "246239",
    "end": "251519"
  },
  {
    "text": "console proxy sample running here so if i browse",
    "start": "251519",
    "end": "257439"
  },
  {
    "text": "it's going to come to this portal and it's going to give me this drop down with available roles",
    "start": "257440",
    "end": "262800"
  },
  {
    "text": "so a couple things i'll point out here one it knows who i am so i've logged into windows and using",
    "start": "262800",
    "end": "268639"
  },
  {
    "text": "integrated windows authentication it's able to determine what my username is it's also provided with me with a couple",
    "start": "268639",
    "end": "275199"
  },
  {
    "text": "of roles that i can assume to log into the console now where do those come from",
    "start": "275199",
    "end": "281440"
  },
  {
    "text": "so inside of identity inside of my account in identity and access management i can",
    "start": "281440",
    "end": "288000"
  },
  {
    "text": "switch over to the roles and in there i've actually created two roles one is aws admins and one is aws",
    "start": "288000",
    "end": "294720"
  },
  {
    "text": "s3 users and inside of active directory if you're familiar with active directory i'm going to go into the ad",
    "start": "294720",
    "end": "300800"
  },
  {
    "text": "administration center i can look up myself and in there i'm a member of two active directory groups of",
    "start": "300800",
    "end": "307759"
  },
  {
    "text": "the same name so what happens when i hit this site",
    "start": "307759",
    "end": "313360"
  },
  {
    "text": "is it goes it looks up who i am using integrated auth it goes and finds out what groups i'm a",
    "start": "313360",
    "end": "319039"
  },
  {
    "text": "member of in active directory and then it does an intersection with the roles that are in my account and i can simply",
    "start": "319039",
    "end": "324960"
  },
  {
    "text": "choose the role that i want in this case i'll choose aws admins click sign in",
    "start": "324960",
    "end": "330880"
  },
  {
    "text": "now i'm logged in didn't have to put any username didn't have to put in a password i simply log",
    "start": "330880",
    "end": "336000"
  },
  {
    "text": "into my account there's a couple differences i'll point out like visually here instead of it",
    "start": "336000",
    "end": "342160"
  },
  {
    "text": "having my name it's actually showing that i assumed a role and the name of the role that i have and",
    "start": "342160",
    "end": "347280"
  },
  {
    "text": "it's a bit truncated but there's a little other text in there in terms of my user id in the in the the windows",
    "start": "347280",
    "end": "352639"
  },
  {
    "text": "domain that i that i logged into so i know i did that kind of fast",
    "start": "352639",
    "end": "360639"
  },
  {
    "text": "and some of you may be asking okay wait a minute what just happened so to reiterate i logged into my windows desktop",
    "start": "364800",
    "end": "372319"
  },
  {
    "text": "i hid an intranet website the proxy server has sort of outsourced",
    "start": "372319",
    "end": "377520"
  },
  {
    "text": "the authentication authentication piece to a d so there's no need for me to enter in another username and password",
    "start": "377520",
    "end": "384960"
  },
  {
    "text": "i chose the role that i want basically it determined by entitlements by intersecting the active directory",
    "start": "384960",
    "end": "390960"
  },
  {
    "text": "groups along with the im roles in my account once i selected that and sign in",
    "start": "390960",
    "end": "396319"
  },
  {
    "text": "i'm automatically signed into the console so how did i do that",
    "start": "396319",
    "end": "401600"
  },
  {
    "text": "for the next 52 minutes we're going to figure out how that was done so let's start with the basics and",
    "start": "401600",
    "end": "408400"
  },
  {
    "text": "that's sessions and the uh the aws security token service so a little bit of sessions 101",
    "start": "408400",
    "end": "415520"
  },
  {
    "text": "so sessions are really the heart of how you do delegation they provide the temporary access to",
    "start": "415520",
    "end": "421520"
  },
  {
    "text": "your aws account sessions are generated by sts which i mentioned and they include temporary",
    "start": "421520",
    "end": "428319"
  },
  {
    "text": "security credentials that you then use to make signed api requests against aws",
    "start": "428319",
    "end": "433599"
  },
  {
    "text": "resources within your account or even within another user's account",
    "start": "433599",
    "end": "439840"
  },
  {
    "text": "so how do you go about requesting a session you can think of sts as sort of like a ticketing service okay you make a",
    "start": "442560",
    "end": "449120"
  },
  {
    "text": "request from sts and in the response it creates a session",
    "start": "449120",
    "end": "454160"
  },
  {
    "text": "the session has a few different parts first are the temporary security credentials this is your access key id",
    "start": "454160",
    "end": "460639"
  },
  {
    "text": "your secret access key and your session token you use the keys to sign the aws service",
    "start": "460639",
    "end": "466160"
  },
  {
    "text": "api requests the same way you use long-term credentials today you're probably either using your root credentials or you use it creating an im",
    "start": "466160",
    "end": "472720"
  },
  {
    "text": "user and using those credentials the only difference when you're using a session is you have to append the token",
    "start": "472720",
    "end": "478560"
  },
  {
    "text": "and the token is what allows us to verify that those temporary credentials are actually still valid",
    "start": "478560",
    "end": "484080"
  },
  {
    "text": "so in the case of s3 you would append that using the http header for all other services you're probably",
    "start": "484080",
    "end": "490160"
  },
  {
    "text": "using the sdk you simply set the security token parameter to the session token",
    "start": "490160",
    "end": "496800"
  },
  {
    "text": "there's a number of different ways to get sessions there's self sessions using the get session token",
    "start": "497039",
    "end": "503520"
  },
  {
    "text": "as the name would apply you're literally creating a temporary instance of yourself it's mostly useful for things",
    "start": "503520",
    "end": "510639"
  },
  {
    "text": "like if you're using multi-factor authentication you want to make api requests that require an mfa",
    "start": "510639",
    "end": "516560"
  },
  {
    "text": "one-time token there's also federated sessions you get them using the get federation token api",
    "start": "516560",
    "end": "522640"
  },
  {
    "text": "and then we have assumed role sessions using the new assume role api",
    "start": "522640",
    "end": "527760"
  },
  {
    "text": "the first one really is about self sessions is for yourself it's not really delegating the net the other two you can",
    "start": "527760",
    "end": "533839"
  },
  {
    "text": "use like with other users so that's going to be where we're going to focus the the rest of the presentation is",
    "start": "533839",
    "end": "539600"
  },
  {
    "text": "really on how you use get federation token and assume role to create those temporary credentials",
    "start": "539600",
    "end": "546000"
  },
  {
    "text": "now this is important sessions expire they are after all temporary and the expiration actually varies on the token",
    "start": "546000",
    "end": "552560"
  },
  {
    "text": "type so you'll notice the the minimum lifetime that you have is 15 minutes",
    "start": "552560",
    "end": "558000"
  },
  {
    "text": "regardless of the session type that you chose if you're using a federated session by default those are 12 there they last for",
    "start": "558000",
    "end": "564800"
  },
  {
    "text": "12 hours though you can specify them when you create them to have a lifetime up to 36 hours",
    "start": "564800",
    "end": "570399"
  },
  {
    "text": "assume roll are a bit more privileged and i'll talk about that later in the presentation and so therefore the",
    "start": "570399",
    "end": "575680"
  },
  {
    "text": "default is one hour and the maximum timeout is actually one hour for those as well",
    "start": "575680",
    "end": "580959"
  },
  {
    "text": "you want to make sure that you use caching to improve your application performance so a lot of people as they're they're",
    "start": "580959",
    "end": "586640"
  },
  {
    "text": "learning around how to use temporary security credentials you know there'll be samples where it says make a request",
    "start": "586640",
    "end": "592560"
  },
  {
    "text": "to sts get those credentials and then make a signed request against another another api",
    "start": "592560",
    "end": "598800"
  },
  {
    "text": "and a lot of developers go and they copy that code and they just every time they make an api request they request another",
    "start": "598800",
    "end": "604560"
  },
  {
    "text": "set of temporary credentials now obviously if your credentials are have a lifetime of 36 hours you don't need to",
    "start": "604560",
    "end": "610000"
  },
  {
    "text": "make that api request but once every 36 hours i see this pretty much daily",
    "start": "610000",
    "end": "616320"
  },
  {
    "text": "you'll start seeing people who will go and make a couple million calls you get on my naughty list i'll send you",
    "start": "616320",
    "end": "622240"
  },
  {
    "text": "an email and i'll probably call you and i'll go through this whole caching thing so it's it's important that uh when",
    "start": "622240",
    "end": "628320"
  },
  {
    "text": "you're doing this that you're checking the expiration of the credentials that you're using and if they if they're",
    "start": "628320",
    "end": "633760"
  },
  {
    "text": "still alive you don't have to request another session",
    "start": "633760",
    "end": "638079"
  },
  {
    "text": "so let's start with uh let's get into role based delegation and since roles are pretty new i always like",
    "start": "638880",
    "end": "645440"
  },
  {
    "text": "to go back to what is an i am role i mean quick how many people here are using",
    "start": "645440",
    "end": "650720"
  },
  {
    "text": "roles today okay so going through a tutorial on what a role is actually is pretty useful",
    "start": "650720",
    "end": "657360"
  },
  {
    "text": "so a role you can really think of as an entity or a container for policy",
    "start": "657360",
    "end": "663760"
  },
  {
    "text": "it defines a set of permissions for making aws service requests role is kind of a tough name because",
    "start": "663760",
    "end": "670000"
  },
  {
    "text": "when people think role they think group or they think role-based access control in this case an imrole has nothing to do",
    "start": "670000",
    "end": "675760"
  },
  {
    "text": "with users or groups they're not actually tied to a person right it's it's an entity",
    "start": "675760",
    "end": "682079"
  },
  {
    "text": "roles are assumed by users in other roles okay we call those",
    "start": "682079",
    "end": "687200"
  },
  {
    "text": "trusted entities and when you assume that role you inherit the policy and permissions that are associated with",
    "start": "687200",
    "end": "694560"
  },
  {
    "text": "that role there's one caveat there you can't use the root account so root accounts by default don't have uh policies right",
    "start": "694560",
    "end": "702640"
  },
  {
    "text": "they have full access so root accounts cannot be used to assume a role",
    "start": "702640",
    "end": "708399"
  },
  {
    "text": "i'm sure that you're all still a little bit wondering what a role is so don't worry we'll go through and we'll have",
    "start": "708399",
    "end": "714160"
  },
  {
    "text": "some a deeper discussion of how to use them so when we launched roles it was really",
    "start": "714160",
    "end": "720079"
  },
  {
    "text": "the the first purpose was something we called roles for ec2 and this solved the problem of having to",
    "start": "720079",
    "end": "726240"
  },
  {
    "text": "rotate credentials on your ec2 instances so a lot of our customers right we boot",
    "start": "726240",
    "end": "731279"
  },
  {
    "text": "up virtual machines in ec2 inside there you have code your own service code and a lot of time that code has to access",
    "start": "731279",
    "end": "737920"
  },
  {
    "text": "other aws resources so how do you do that if you're following best security practices you're creating an im user",
    "start": "737920",
    "end": "745200"
  },
  {
    "text": "you're creating credentials and then you're rotating those credentials pre",
    "start": "745200",
    "end": "750320"
  },
  {
    "text": "roles that is what you had to do everybody rotates their credentials right multiple times a day right lie to",
    "start": "750320",
    "end": "756399"
  },
  {
    "text": "me tell me that you're doing it okay if you're using a role you don't have to worry about that",
    "start": "756399",
    "end": "762079"
  },
  {
    "text": "you go in you create a role you create an access policy on that role maybe you want to give it read access to",
    "start": "762079",
    "end": "768880"
  },
  {
    "text": "all your s3 buckets or something like that you go and launch an ec2 instance you specify the role",
    "start": "768880",
    "end": "775120"
  },
  {
    "text": "and then behind the scenes we'll create temporary credentials for you we'll make them available to all those",
    "start": "775120",
    "end": "780240"
  },
  {
    "text": "instances that are launched with that role we'll rotate them multiple times a day and best of all if you're using the sdk",
    "start": "780240",
    "end": "787120"
  },
  {
    "text": "it will transparently use those credentials so you don't have to worry about getting credentials out to the instance you don't have to worry about",
    "start": "787120",
    "end": "792240"
  },
  {
    "text": "rotating them you don't have to even worry about specifying them in your code something called the metadata cache and",
    "start": "792240",
    "end": "797920"
  },
  {
    "text": "it's just the sdk will pull those up there automatically so let me show you",
    "start": "797920",
    "end": "804880"
  },
  {
    "text": "how to create a role and launch an instance",
    "start": "804880",
    "end": "808560"
  },
  {
    "text": "so i'm in the management console switch over to the roles in the im tab",
    "start": "810639",
    "end": "818560"
  },
  {
    "text": "go ahead and create a new role i'll call this one my aws summit demo",
    "start": "818560",
    "end": "826760"
  },
  {
    "text": "now there's two types of roles that we have today service roles and cross account access i'll show you the cross",
    "start": "829040",
    "end": "834320"
  },
  {
    "text": "account access one later in the in the presentation but what you're doing here when you create a service role is you're saying i want to create a role and i'm",
    "start": "834320",
    "end": "840720"
  },
  {
    "text": "going to delegate that service to have access to that role so i'll i'll create the i'll choose the",
    "start": "840720",
    "end": "847440"
  },
  {
    "text": "first one which is ec2 then i'll play a little bit of i don't know policy roulette",
    "start": "847440",
    "end": "854399"
  },
  {
    "text": "let's uh it's got a good policy yeah we'll just select one",
    "start": "854399",
    "end": "860639"
  },
  {
    "text": "there mapreduce has has a decent policy",
    "start": "860639",
    "end": "865120"
  },
  {
    "text": "so we go in here and this is the access policy which allows",
    "start": "865839",
    "end": "871839"
  },
  {
    "text": "well that's kind of annoying",
    "start": "872480",
    "end": "875680"
  },
  {
    "text": "let's try that again",
    "start": "877519",
    "end": "881079"
  },
  {
    "text": "that's a less impressive one but nonetheless",
    "start": "891680",
    "end": "897959"
  },
  {
    "text": "no i don't like this at all",
    "start": "899279",
    "end": "902480"
  },
  {
    "text": "relaunch the browser see if i get a better resolution",
    "start": "904720",
    "end": "909399"
  },
  {
    "text": "test power user there we go continue",
    "start": "923199",
    "end": "930639"
  },
  {
    "text": "so i've created my role now what other people do is they don't",
    "start": "930639",
    "end": "936000"
  },
  {
    "text": "go back and actually look at what that creates behind the scenes so it actually the policy",
    "start": "936000",
    "end": "942240"
  },
  {
    "text": "you already know right this is an access control policy and i'm sure you're familiar with the access control policy",
    "start": "942240",
    "end": "947680"
  },
  {
    "text": "language that we have but actually creates another policy in there that we call the trust policy",
    "start": "947680",
    "end": "953600"
  },
  {
    "text": "and so if i look at that this is another policy in here where we specify a principle and in this case",
    "start": "953600",
    "end": "959440"
  },
  {
    "text": "it's service and we've delegated access to ec2 and we've delegated access so",
    "start": "959440",
    "end": "964800"
  },
  {
    "text": "that they can call sts assume role explain a little bit more what that means when you specify something that",
    "start": "964800",
    "end": "971680"
  },
  {
    "text": "isn't a service like another aws account but there's actually two policies that are associated",
    "start": "971680",
    "end": "977440"
  },
  {
    "text": "with that now if i go over here and switch to ec2",
    "start": "977440",
    "end": "983839"
  },
  {
    "text": "i'll go ahead and launch an instance",
    "start": "991680",
    "end": "995720"
  },
  {
    "text": "select the good old amazon linux amy",
    "start": "1004959",
    "end": "1010720"
  },
  {
    "text": "team micro go big or go home continue",
    "start": "1010720",
    "end": "1017600"
  },
  {
    "text": "and then this is the only thing you need to do is go down here and specify the role",
    "start": "1017600",
    "end": "1023360"
  },
  {
    "text": "now when i click continue and i go and deploy that bad boy credentials are going to be made",
    "start": "1023360",
    "end": "1028798"
  },
  {
    "text": "available to it there's nothing that i need to do in terms of getting those keys out there now i'm actually not going to launch",
    "start": "1028799",
    "end": "1034160"
  },
  {
    "text": "that instance because that's that's a ridiculous size for a demo but that's as simple as it can get to launch",
    "start": "1034160",
    "end": "1041199"
  },
  {
    "text": "an ec2 instance so if you're not already using roles if you're still using long term credentials on your ec2 instances",
    "start": "1041199",
    "end": "1046720"
  },
  {
    "text": "this is the way to go so some of the obvious benefits of using",
    "start": "1046720",
    "end": "1052000"
  },
  {
    "text": "roles well as i mentioned before it eliminates the use of those long-term credentials we do the automatic rotation so if you",
    "start": "1052000",
    "end": "1058240"
  },
  {
    "text": "did write code that was rotating it or you were manually rotating it you no longer have to do that and actually eliminates the amount of",
    "start": "1058240",
    "end": "1064240"
  },
  {
    "text": "code that you need to write because the sdk is going to pick up those credentials automatically so you don't have to be putting them somewhere on the",
    "start": "1064240",
    "end": "1070320"
  },
  {
    "text": "file system encrypting them pulling them off the file system decrypting them and going through that whole routine",
    "start": "1070320",
    "end": "1076960"
  },
  {
    "text": "so that's one use of roles it's actually where we first",
    "start": "1076960",
    "end": "1082799"
  },
  {
    "text": "launched roles in november we actually added something we called cross account api access here",
    "start": "1082799",
    "end": "1088320"
  },
  {
    "text": "i call it api account access and this is going to allow you to access",
    "start": "1088320",
    "end": "1093520"
  },
  {
    "text": "resources across your aws accounts now turns out many of our customers have more than one aws account they'll have a",
    "start": "1093520",
    "end": "1100400"
  },
  {
    "text": "production one they'll have a development one they'll have a staging one i know customers who have hundreds",
    "start": "1100400",
    "end": "1105840"
  },
  {
    "text": "of aws accounts and you know when you have multiple accounts",
    "start": "1105840",
    "end": "1112160"
  },
  {
    "text": "like that management visibility across all of them can be difficult you can imagine having 100 accounts and having to log into the management console 100",
    "start": "1112160",
    "end": "1119440"
  },
  {
    "text": "times to see views across all of them also if you're a developer maybe you have full access to development staging",
    "start": "1119440",
    "end": "1126400"
  },
  {
    "text": "but you only want them to have read access to production data right",
    "start": "1126400",
    "end": "1131440"
  },
  {
    "text": "third and not least is using third party management tools so i know a lot of people manage their aws environment",
    "start": "1131440",
    "end": "1138000"
  },
  {
    "text": "using resources from our partners now you can go and you can create long-term credentials and hand them over to that",
    "start": "1138000",
    "end": "1143679"
  },
  {
    "text": "partner if you trust them or if you're using roles you can simply say here's a role",
    "start": "1143679",
    "end": "1149440"
  },
  {
    "text": "assume it and when you're done maybe you don't want to use them anymore you've terminated the relationship you simply",
    "start": "1149440",
    "end": "1155679"
  },
  {
    "text": "change the permissions on the role or you delete it you don't have to worry about any long-term credentials that are out there so",
    "start": "1155679",
    "end": "1161039"
  },
  {
    "text": "number of different reasons why you might want to delegate access across aws accounts and to enable this we really extended",
    "start": "1161039",
    "end": "1167679"
  },
  {
    "text": "that roles for ec2 concept so there's two policies on the role right when you created the role for ec2",
    "start": "1167679",
    "end": "1174480"
  },
  {
    "text": "we focused a lot on the access policy what can you do with that role but then",
    "start": "1174480",
    "end": "1180160"
  },
  {
    "text": "there's also the trust policy and it's in the trust where you delegate access to other aws entities so we",
    "start": "1180160",
    "end": "1187120"
  },
  {
    "text": "looked at the service one we looked at ec2 but i could also delegate to an imuser within my account or i could",
    "start": "1187120",
    "end": "1193280"
  },
  {
    "text": "delegate to another role you could have roles that call roles and those can be within your account or it could be from",
    "start": "1193280",
    "end": "1198799"
  },
  {
    "text": "another account as well and so with this you could have an im user in one account who can access any",
    "start": "1198799",
    "end": "1204240"
  },
  {
    "text": "other resources you could have a set of single set of credentials to rule them all that has access to every aws account",
    "start": "1204240",
    "end": "1210240"
  },
  {
    "text": "that you have and the way you do this is you go in and you create a role and you choose the role for cross",
    "start": "1210240",
    "end": "1216080"
  },
  {
    "text": "account access and when you go through that you're gonna end up creating a trust and this is what that trust will look like so in",
    "start": "1216080",
    "end": "1223039"
  },
  {
    "text": "here um you're allowed to assume a role and uh here is the arn of the role",
    "start": "1223039",
    "end": "1228640"
  },
  {
    "text": "actually this is the policy that goes in the im user the next slide actually describes this a little bit better so",
    "start": "1228640",
    "end": "1234480"
  },
  {
    "text": "let me paint the scenario here say i'm jeff because i am and i have my aws account",
    "start": "1234480",
    "end": "1241440"
  },
  {
    "text": "and i work for the im team and the im team has their aws account this is actually really how it works",
    "start": "1241440",
    "end": "1247520"
  },
  {
    "text": "and we both have resources in our accounts but i want to be able to read not only",
    "start": "1247520",
    "end": "1253520"
  },
  {
    "text": "the buckets in my account but all the buckets that are in my team account so to do this i'm going to create an s3",
    "start": "1253520",
    "end": "1259360"
  },
  {
    "text": "role in the team account and the policy on that role is going to allow me star",
    "start": "1259360",
    "end": "1264400"
  },
  {
    "text": "access to all s3 resources so i'll essentially be god of s3 inside the team",
    "start": "1264400",
    "end": "1270000"
  },
  {
    "text": "account and on there i need to add a trust and in this trust i'm going to",
    "start": "1270000",
    "end": "1275280"
  },
  {
    "text": "specify that this account can assume this role",
    "start": "1275280",
    "end": "1280559"
  },
  {
    "text": "this is half the equation the other half of the equation i actually have to create in my account so in my account i",
    "start": "1280559",
    "end": "1286720"
  },
  {
    "text": "have to create a user jeff and jeff will have that policy that says he can call assume role",
    "start": "1286720",
    "end": "1293280"
  },
  {
    "text": "for that role that i created in this account and what ended up happening is i'll authenticate using keys",
    "start": "1293280",
    "end": "1300159"
  },
  {
    "text": "for jeff the user in my account i'm going to get back a set of temporary credentials by calling sts and using the",
    "start": "1300159",
    "end": "1308080"
  },
  {
    "text": "s3 role and then with those temporary credentials i can make api requests",
    "start": "1308080",
    "end": "1313200"
  },
  {
    "text": "against buckets in the other account so let me show you how this looks in",
    "start": "1313200",
    "end": "1319679"
  },
  {
    "text": "in the wild so here",
    "start": "1319679",
    "end": "1326880"
  },
  {
    "text": "not that one this one yeah that's my roll let me get",
    "start": "1327200",
    "end": "1332480"
  },
  {
    "text": "that in my clipboard so i'm gonna launch a sample amp that i created",
    "start": "1332480",
    "end": "1337760"
  },
  {
    "text": "never tried to create a demo the day before i was up pretty late last night writing this",
    "start": "1338640",
    "end": "1344400"
  },
  {
    "text": "and in here i'm looking at all the buckets in my team account so probably makes sense to",
    "start": "1344400",
    "end": "1350480"
  },
  {
    "text": "bring this up in a browser so that you can see these side by side",
    "start": "1350480",
    "end": "1356120"
  },
  {
    "text": "so i'm going to go to s3 i'm actually logged into my team account over here",
    "start": "1360880",
    "end": "1366559"
  },
  {
    "text": "and you can see here are all the buckets for my team and the way i got to them is i have my",
    "start": "1367760",
    "end": "1374880"
  },
  {
    "text": "access key and secret key the jeff keys and i'm assuming this role to get all of them now i have multiple",
    "start": "1374880",
    "end": "1381360"
  },
  {
    "text": "accounts so what if i want to see all of those buckets across all the accounts well i",
    "start": "1381360",
    "end": "1386400"
  },
  {
    "text": "can go in and i can keep adding rolls",
    "start": "1386400",
    "end": "1390640"
  },
  {
    "text": "i love it when that doesn't work",
    "start": "1393440",
    "end": "1396960"
  },
  {
    "text": "let's try the clipboard again",
    "start": "1401280",
    "end": "1405240"
  },
  {
    "text": "all right clipboard is working again",
    "start": "1419360",
    "end": "1422799"
  },
  {
    "text": "so i'll go in add another roll",
    "start": "1425120",
    "end": "1429640"
  },
  {
    "text": "okay maybe it's not working yet say again",
    "start": "1430880",
    "end": "1437039"
  },
  {
    "text": "i'll take part of it and see",
    "start": "1439120",
    "end": "1443880"
  },
  {
    "text": "yeah good call",
    "start": "1444799",
    "end": "1449120"
  },
  {
    "text": "add in another roll now i can browse through them and i can just keep doing this and",
    "start": "1450960",
    "end": "1456480"
  },
  {
    "text": "yes you could use multiple credentials i could have created i am users and have credentials for each of those but the",
    "start": "1456480",
    "end": "1462559"
  },
  {
    "text": "nice thing about this is i have one set of credentials i need to manage and i can go through and i can continuously see you know like for",
    "start": "1462559",
    "end": "1469039"
  },
  {
    "text": "example here's photos of my kid shall come up and using the same set of",
    "start": "1469039",
    "end": "1475919"
  },
  {
    "text": "credentials i create a temporary i create a temporary session and i can go over and i can browse the bucket over here",
    "start": "1475919",
    "end": "1482080"
  },
  {
    "text": "and i can open up text files",
    "start": "1482080",
    "end": "1486120"
  },
  {
    "text": "thank you you'd be surprised how many times people don't clap for that",
    "start": "1489919",
    "end": "1494880"
  },
  {
    "text": "and so if i have more accounts you could see how i could just keep adding him on there and and i would have one place to",
    "start": "1496640",
    "end": "1502159"
  },
  {
    "text": "go and see all the data that is across all my accounts now this is an example for s3 obviously if you're using",
    "start": "1502159",
    "end": "1507600"
  },
  {
    "text": "something like ec2 the same premise would apply you can go in you could see all the virtual machines across test",
    "start": "1507600",
    "end": "1513120"
  },
  {
    "text": "broad and staging development any any of the environments you have now as i mentioned",
    "start": "1513120",
    "end": "1519200"
  },
  {
    "text": "the code for that looks pretty ugly right now because i was working on that up until this",
    "start": "1519200",
    "end": "1525919"
  },
  {
    "text": "presentation and so here i'm going to call out what i think are the relevant things one of the things i always try to",
    "start": "1525919",
    "end": "1531679"
  },
  {
    "text": "do is have code that you could copy and paste into your application so this was a c-sharp example and you should be if",
    "start": "1531679",
    "end": "1538559"
  },
  {
    "text": "you have an access key and you have a secret key you should be able to create a session and get back temporary credentials that",
    "start": "1538559",
    "end": "1544480"
  },
  {
    "text": "you could use and so what i'm doing in here is i'm making an assume roll request specifying a duration of 3600 one hour the maximum",
    "start": "1544480",
    "end": "1552400"
  },
  {
    "text": "putting in the arn of the role that you're going to assume and then you can give it some name later on in the presentation i'll talk",
    "start": "1552400",
    "end": "1558240"
  },
  {
    "text": "about scoping down so you can actually attach a policy if you want to scope down the permissions of that i don't have that in the sample here",
    "start": "1558240",
    "end": "1564880"
  },
  {
    "text": "when you get back the request result that will actually have the temporary credentials right the access key the",
    "start": "1564880",
    "end": "1570320"
  },
  {
    "text": "secret key and the session token that you then can use to access s3 and that's as simple as it is",
    "start": "1570320",
    "end": "1577039"
  },
  {
    "text": "so some of the obvious benefits of there i'll reiterate only one set of credentials so on my machine i only have",
    "start": "1577039",
    "end": "1582720"
  },
  {
    "text": "one set of credentials that are encrypted for that application i don't have to share long-term credentials with any of my business partners any of my",
    "start": "1582720",
    "end": "1589360"
  },
  {
    "text": "co-workers i simply create a role and i say assume this role and you should get temporary access for the next hour and",
    "start": "1589360",
    "end": "1594559"
  },
  {
    "text": "the great thing about that is i can revoke access to that role anytime i want i can change the permissions on that role i can delete that role and",
    "start": "1594559",
    "end": "1600799"
  },
  {
    "text": "when i do that their temporary access is actually eliminated",
    "start": "1600799",
    "end": "1606639"
  },
  {
    "text": "so let's talk a little bit about federation sort of a twist on the the cross account api access",
    "start": "1607039",
    "end": "1613840"
  },
  {
    "text": "so for for those of you who are new to federation this is sort of outsourcing the authentication piece to",
    "start": "1613919",
    "end": "1620640"
  },
  {
    "text": "aws right it's it's how you access your aws resources using your existing corporate entity and we took a look at",
    "start": "1620640",
    "end": "1627279"
  },
  {
    "text": "at the very beginning we took a look at how we could do this to log into the the management console right",
    "start": "1627279",
    "end": "1632480"
  },
  {
    "text": "but you could also build applications that transparently access aws resources and apis",
    "start": "1632480",
    "end": "1637600"
  },
  {
    "text": "maybe you want you know a little service or some type of application that runs on every one of your users desktop that",
    "start": "1637600",
    "end": "1643360"
  },
  {
    "text": "creates a home folder in s3 and copies that up there on their behalf and they don't want to have to go in and log in",
    "start": "1643360",
    "end": "1649840"
  },
  {
    "text": "with aws credentials to have that do it you want it running kind of as a background service right the other nice thing about it is it",
    "start": "1649840",
    "end": "1655760"
  },
  {
    "text": "eliminates yet another password to manage so i already know how to log into my workstation why should i have to remember another username and password",
    "start": "1655760",
    "end": "1661919"
  },
  {
    "text": "to get to all the resources i need to do my job so the first case we'll look at is api",
    "start": "1661919",
    "end": "1668240"
  },
  {
    "text": "federation just like the management console this is actually a sample that we published so if you want to download",
    "start": "1668240",
    "end": "1673360"
  },
  {
    "text": "that sample you're free to work and play with the code this is based on windows active",
    "start": "1673360",
    "end": "1678640"
  },
  {
    "text": "directory so we're assuming that the users are logging into windows in this case the privileges are going to",
    "start": "1678640",
    "end": "1683840"
  },
  {
    "text": "be based on ad group membership so similar to the management console we'll go and we'll see what groups they're a",
    "start": "1683840",
    "end": "1689600"
  },
  {
    "text": "member of and then on the 80 groups i actually store policy snippets and i'll show you",
    "start": "1689600",
    "end": "1695200"
  },
  {
    "text": "how i i did that on the other end i'm using the relying party as aws and we're going to look at",
    "start": "1695200",
    "end": "1700640"
  },
  {
    "text": "how we can access the s3 apis using temporary security credentials and in this case we're getting those temporary",
    "start": "1700640",
    "end": "1706399"
  },
  {
    "text": "credentials by making a get federation token request so different api we're not using",
    "start": "1706399",
    "end": "1711840"
  },
  {
    "text": "roles in this scenario to kind of walk you through it i'll have a command line application and that",
    "start": "1711840",
    "end": "1718720"
  },
  {
    "text": "command line application is going to be talking to a web service that's running on a proxy server you can think of it in",
    "start": "1718720",
    "end": "1724240"
  },
  {
    "text": "is inside my enterprise and that proxy server is actually going to use a set of im credentials and those",
    "start": "1724240",
    "end": "1731520"
  },
  {
    "text": "credentials are going to be used to make a get federation token request the way that get federation token works",
    "start": "1731520",
    "end": "1739600"
  },
  {
    "text": "is when you you make that request by default you get the privileges of the user so if",
    "start": "1739600",
    "end": "1746640"
  },
  {
    "text": "that user is an admin the resulting temporary credentials will actually have admin access",
    "start": "1746640",
    "end": "1753200"
  },
  {
    "text": "now when you make a get federation token request you can scope those down okay and i'll show you how you can attach a",
    "start": "1753200",
    "end": "1758240"
  },
  {
    "text": "policy to scope those down now let's say that the im user using at the proxy has",
    "start": "1758240",
    "end": "1763840"
  },
  {
    "text": "acts has s3 star access right i can't attach a policy that elevates",
    "start": "1763840",
    "end": "1769520"
  },
  {
    "text": "privileges i can only scope down privileges so if i give s3 star access i",
    "start": "1769520",
    "end": "1774720"
  },
  {
    "text": "can go to s3 read access but i can't give them you know administration access or access to im",
    "start": "1774720",
    "end": "1780000"
  },
  {
    "text": "apis or something like that so typically if you're going to have a bunch of user",
    "start": "1780000",
    "end": "1785279"
  },
  {
    "text": "who are sharing this proxy server the im credentials at the proxy server probably end up being pretty privileged",
    "start": "1785279",
    "end": "1791919"
  },
  {
    "text": "because they have to be the union of all the privileges of all the users and if you have one admin in your group",
    "start": "1791919",
    "end": "1798240"
  },
  {
    "text": "the proxy server is going to have to have admin privileges for those credentials so you want to make sure",
    "start": "1798240",
    "end": "1803440"
  },
  {
    "text": "that you secure those encrypt them make sure that the the proxy server is pretty hard and you don't want those",
    "start": "1803440",
    "end": "1808559"
  },
  {
    "text": "credentials to be stolen so i'm going to make a request the user is going to be authenticated against active directory i'm going to",
    "start": "1808559",
    "end": "1815520"
  },
  {
    "text": "look up the groups that they are in active directory and determine their entitlements i'm going to make the get federation token request against sts",
    "start": "1815520",
    "end": "1822640"
  },
  {
    "text": "sts is going to give me back the temporary credentials of the form of my keys and my token i'm going to take those that's session",
    "start": "1822640",
    "end": "1829760"
  },
  {
    "text": "and i'm going to make api requests against s3 so let me show you that",
    "start": "1829760",
    "end": "1837559"
  },
  {
    "text": "so the question is and i should i should i should have mentioned this at the front for i'll answer your question but",
    "start": "1846399",
    "end": "1852240"
  },
  {
    "text": "i'll i'll generally take questions at the end just because i uh i think i'm going to use up every minute the question was",
    "start": "1852240",
    "end": "1857919"
  },
  {
    "text": "can the api work against active directory could it work against any ldap directory the answer is is that you can",
    "start": "1857919",
    "end": "1863679"
  },
  {
    "text": "outsource it to any active any directory it's it's not it's not an ad specific thing i use it because it's pretty",
    "start": "1863679",
    "end": "1870240"
  },
  {
    "text": "pretty common case but basically in federation you're outsourcing it to any trusted identity provider",
    "start": "1870240",
    "end": "1877360"
  },
  {
    "text": "so once again let me go and just show you the configuration first if i go in here and i look at jeff jeff's a member of",
    "start": "1877360",
    "end": "1883679"
  },
  {
    "text": "this aws s3 users group i showed this group before in this case i'm using a little bit of a different trick",
    "start": "1883679",
    "end": "1890000"
  },
  {
    "text": "there are some unused attributes in active directory one of them is the alt security identities and in there i've",
    "start": "1890000",
    "end": "1895440"
  },
  {
    "text": "actually stored a snippet of policy it is absolutely impossible for any of you to see that",
    "start": "1895440",
    "end": "1901679"
  },
  {
    "text": "so this is what it looks like it's a snippet because it's not well-formed json it's just a little bit",
    "start": "1901679",
    "end": "1906960"
  },
  {
    "text": "and i'm going to use that to create a policy when i make the request and you can see i have kind of placeholders in",
    "start": "1906960",
    "end": "1912159"
  },
  {
    "text": "here that the proxy will replace so if there's a specific bucket based on my username or there's a group bucket i can",
    "start": "1912159",
    "end": "1917519"
  },
  {
    "text": "go in the proxy server and i can customize that that policy",
    "start": "1917519",
    "end": "1922399"
  },
  {
    "text": "now to demonstrate this i have just a console app so i'll launch that",
    "start": "1922640",
    "end": "1928240"
  },
  {
    "text": "and the console app is going to actually talk to that web service so the proxy server is actually supposed exposed as a",
    "start": "1928240",
    "end": "1934960"
  },
  {
    "text": "windows communication foundation service and i'm going to call that",
    "start": "1934960",
    "end": "1940960"
  },
  {
    "text": "and it's going to get back a set of temporary credentials and it's it's pretty fast you can see",
    "start": "1940960",
    "end": "1946000"
  },
  {
    "text": "when i have those credentials i can go through and i'm listing that",
    "start": "1946000",
    "end": "1952080"
  },
  {
    "text": "same bucket and so i can put a file to pull down actually pull",
    "start": "1952080",
    "end": "1958720"
  },
  {
    "text": "that down and uh if you're able to read that text",
    "start": "1958720",
    "end": "1965039"
  },
  {
    "text": "thank you you guys are actually alive at the end of the day and voila i'm able to read that now",
    "start": "1965120",
    "end": "1971760"
  },
  {
    "text": "what's actually happening behind the scenes this is where high resolution actually",
    "start": "1971760",
    "end": "1977440"
  },
  {
    "text": "is beneficial so first when the console application hits the",
    "start": "1977440",
    "end": "1982880"
  },
  {
    "text": "proxy server the first thing i do is identify the user so i know who i am it's using windows integrated",
    "start": "1982880",
    "end": "1988320"
  },
  {
    "text": "authentication you can replace this with any authentication system that you want",
    "start": "1988320",
    "end": "1993919"
  },
  {
    "text": "and all i'm doing there is i'm grabbing the username the next thing i'm going to do is i'm going to go and i'm going to create the security token",
    "start": "1993919",
    "end": "2000559"
  },
  {
    "text": "and this is just a function which calls get federation token",
    "start": "2000559",
    "end": "2005760"
  },
  {
    "text": "so in here there's a couple things i'll point out one",
    "start": "2005760",
    "end": "2011279"
  },
  {
    "text": "i build up the policy so this is a helper function over in utilities here where i basically go",
    "start": "2011279",
    "end": "2017360"
  },
  {
    "text": "through and i iterate through all the group membership once again it could be looking at an",
    "start": "2017360",
    "end": "2023279"
  },
  {
    "text": "ldap group membership and i go in there and i pull off that piece of policy snippet if the group has it and i",
    "start": "2023279",
    "end": "2029360"
  },
  {
    "text": "concatenate that to create a policy and so when i make the get federation token request this is the relevant piece of",
    "start": "2029360",
    "end": "2035600"
  },
  {
    "text": "code here i'm setting the duration and i'm setting a name for it just i did when i was creating the session with the",
    "start": "2035600",
    "end": "2040799"
  },
  {
    "text": "role but here i'm attaching a policy to scope it down so the imuser here in my case when i that's making the request",
    "start": "2040799",
    "end": "2047200"
  },
  {
    "text": "does have admin privileges but because i'm passing this policy all i'm going to the resulting temporary",
    "start": "2047200",
    "end": "2052638"
  },
  {
    "text": "credentials will be good for eight hours and they will only be good for accessing",
    "start": "2052639",
    "end": "2058398"
  },
  {
    "text": "the bucket resources that i specified in that policy and so this is how you give individualized or very custom",
    "start": "2058399",
    "end": "2064398"
  },
  {
    "text": "permissions to those federation users",
    "start": "2064399",
    "end": "2068480"
  },
  {
    "text": "okay so that's one type of federation and uh basically the same code",
    "start": "2073599",
    "end": "2079358"
  },
  {
    "text": "the one i showed in visual studio was pretty clean but here's another working sample if you want to copy and paste it",
    "start": "2079359",
    "end": "2084560"
  },
  {
    "text": "into into your application that's one type of federation",
    "start": "2084560",
    "end": "2090158"
  },
  {
    "text": "now you can use temporary credentials from an assume roll request or a get federation token request to perform",
    "start": "2090159",
    "end": "2097200"
  },
  {
    "text": "federation so assume role sessions can also be used it provides sort of a different option",
    "start": "2097200",
    "end": "2102720"
  },
  {
    "text": "for storing the permissions and this basically comes down to how",
    "start": "2102720",
    "end": "2108320"
  },
  {
    "text": "the privileges and the permissions are generated so as i mentioned when you do a get federation token request",
    "start": "2108320",
    "end": "2114400"
  },
  {
    "text": "the permissions are derived by the im user that's made the request and scoped down by the policy",
    "start": "2114400",
    "end": "2120960"
  },
  {
    "text": "so typically you're going to store those permissions inside of your enterprise like i did i stored them on active",
    "start": "2120960",
    "end": "2127119"
  },
  {
    "text": "directory objects when you use roles it gives you a sort of a different option",
    "start": "2127119",
    "end": "2132320"
  },
  {
    "text": "because the policy is actually stored on the role so depending on how your organization",
    "start": "2132320",
    "end": "2137599"
  },
  {
    "text": "is organized you may have you know you may have hey i'm the administrator and i own",
    "start": "2137599",
    "end": "2143520"
  },
  {
    "text": "everything and so i want to keep all those privileges inside of my enterprise and so maybe get federation token is a",
    "start": "2143520",
    "end": "2149520"
  },
  {
    "text": "good option for you you may have an organization where you know we have our active directory administrator",
    "start": "2149520",
    "end": "2156640"
  },
  {
    "text": "and they don't have access to aws and we want to have a separate administrator and they control all the privileges to aws in that case you would want to",
    "start": "2156640",
    "end": "2163440"
  },
  {
    "text": "create roles because the roles actually are the container for the policy and so there's this separation between the two",
    "start": "2163440",
    "end": "2169839"
  },
  {
    "text": "so it's another option that you can use for for federation so going back to the console federation",
    "start": "2169839",
    "end": "2175920"
  },
  {
    "text": "and here's that url again if you didn't have a chance to uh to to write it down this is a similar",
    "start": "2175920",
    "end": "2181119"
  },
  {
    "text": "scenario where we're going to use windows active directory though you can replace it with any directory the privileges are going to be based on",
    "start": "2181119",
    "end": "2187200"
  },
  {
    "text": "80 group membership but instead of getting the policy off the group we're going to match the group",
    "start": "2187200",
    "end": "2193200"
  },
  {
    "text": "to roles that are in my account and so the policy won't live in a.d the policy will actually live in im in this case",
    "start": "2193200",
    "end": "2200320"
  },
  {
    "text": "the relying party is going to be the aws management console and we're going to use the assume role api",
    "start": "2200320",
    "end": "2206720"
  },
  {
    "text": "so to set this up this is sort of it's sort of like the cross account scenario but within my account",
    "start": "2208240",
    "end": "2215440"
  },
  {
    "text": "so in there i'm going to create some roles once again i'll create an s3 role because we've been using that throughout the presentation",
    "start": "2215440",
    "end": "2221599"
  },
  {
    "text": "i'm going to create a trust policy but in this case i'm going to change the policy a little bit to add a condition",
    "start": "2221599",
    "end": "2227359"
  },
  {
    "text": "so in this condition i can specify an external id okay so what i'm going to do in the",
    "start": "2227359",
    "end": "2232960"
  },
  {
    "text": "proxy server is i'm going to look up the user and the user is going to choose a group",
    "start": "2232960",
    "end": "2238160"
  },
  {
    "text": "and i'm sort of going to do a matching on it a forced matching where i grabbed the sid the security identifier of that",
    "start": "2238160",
    "end": "2244240"
  },
  {
    "text": "group so you know if someone goes and deletes the group it recreates the administrator group you know you get a new sit",
    "start": "2244240",
    "end": "2250960"
  },
  {
    "text": "so by specifying the sid as a condition in the role that will guarantee that if",
    "start": "2250960",
    "end": "2256000"
  },
  {
    "text": "anything funny happens in active directory this role will break so it's not like someone can go in and create a",
    "start": "2256000",
    "end": "2261440"
  },
  {
    "text": "group and all of a sudden get privileges based on a simple name matching so this is a security session i thought",
    "start": "2261440",
    "end": "2267359"
  },
  {
    "text": "i'd mention that there's some additional security best practices you can do on that and then over in my account i have the",
    "start": "2267359",
    "end": "2274640"
  },
  {
    "text": "the proxy user and this proxy user is going to have the privileges to assume a role and to list all the roles and",
    "start": "2274640",
    "end": "2279920"
  },
  {
    "text": "that's all the privileges that proxy server needs you'll notice in this case it doesn't have to be a super user because it's",
    "start": "2279920",
    "end": "2286240"
  },
  {
    "text": "getting its privileges from the role that it's assuming so the proxy server will authenticate",
    "start": "2286240",
    "end": "2291280"
  },
  {
    "text": "with sts it will assume the role it'll get those temporary credentials and it's going to use those temporary credentials to log",
    "start": "2291280",
    "end": "2297359"
  },
  {
    "text": "into the management console this is the simple case this is the longer one so the user is going to browse to the to",
    "start": "2297359",
    "end": "2302800"
  },
  {
    "text": "the proxy server once again the proxy server is going to have im credentials but it's going to have limited rights to call list roles",
    "start": "2302800",
    "end": "2309599"
  },
  {
    "text": "and assume roles so even though it seems like those are just two apis",
    "start": "2309599",
    "end": "2314720"
  },
  {
    "text": "it's still highly privileged you should still encrypt them and you should secure that server it's going to authenticate the user",
    "start": "2314720",
    "end": "2320079"
  },
  {
    "text": "against the corporate directory it's going to enumerate the groups it's going to call list roles it's going",
    "start": "2320079",
    "end": "2325520"
  },
  {
    "text": "to get back a list a list of all the roles it's going to do an intersection it's going to populate a combo box you",
    "start": "2325520",
    "end": "2331760"
  },
  {
    "text": "guys saw that if you were here for the beginning of the presentation it's going to make an assumer request",
    "start": "2331760",
    "end": "2336880"
  },
  {
    "text": "it's going to get back a set of temporary credentials it's going to generate this funky looking url",
    "start": "2336880",
    "end": "2343280"
  },
  {
    "text": "which will redirect you into the management console now if you're interested in doing this i",
    "start": "2343280",
    "end": "2348640"
  },
  {
    "text": "highly recommend you download the sample because we've completely documented this there's a bunch of set of classes that you can use and you don't have to",
    "start": "2348640",
    "end": "2355280"
  },
  {
    "text": "reinvent this if you want to do it so we took a look at",
    "start": "2355280",
    "end": "2360720"
  },
  {
    "text": "the final product let's go ahead and look at it what's happening behind the covers",
    "start": "2361359",
    "end": "2367720"
  },
  {
    "text": "so i'll start up my project here here's the list so it's already gone in",
    "start": "2370079",
    "end": "2376880"
  },
  {
    "text": "and authenticated me in active directory it's called list roles it's done the intersection in this case here i'll",
    "start": "2376880",
    "end": "2382800"
  },
  {
    "text": "choose s3 sign in and the first thing we're going to do is we need to get those temporary",
    "start": "2382800",
    "end": "2388160"
  },
  {
    "text": "credentials so we'll go ahead and let it move forward the way it gets those temporary credentials is making an assumer request",
    "start": "2388160",
    "end": "2395520"
  },
  {
    "text": "so in this case i'm going to do the maximum of one hour i chose the s3 users there's full arm",
    "start": "2395520",
    "end": "2401200"
  },
  {
    "text": "for it that's my username so it knows it's me logged into that domain",
    "start": "2401200",
    "end": "2407040"
  },
  {
    "text": "and there's the sit of the group so all of that needs to be passed in with the request",
    "start": "2407040",
    "end": "2412320"
  },
  {
    "text": "if i didn't specify if i didn't put in this external id it would actually give me an access denied",
    "start": "2412320",
    "end": "2417760"
  },
  {
    "text": "so i'll go ahead and play that through this is where i get a bunch of keys this is where i keep playing and don't hover",
    "start": "2417760",
    "end": "2425680"
  },
  {
    "text": "and then over here we have to create this sign-in url so there's a whole set of code in here that",
    "start": "2425680",
    "end": "2432160"
  },
  {
    "text": "goes into creating that sign-in url first thing you do is you have to create a sign in token",
    "start": "2432160",
    "end": "2439839"
  },
  {
    "text": "and then we take the sign in url it's a little bit easier to look from here we take the sign in token",
    "start": "2440800",
    "end": "2446000"
  },
  {
    "text": "we take the issuer url which is the application that made the request so after my",
    "start": "2446000",
    "end": "2451200"
  },
  {
    "text": "session expires i'm going to get kicked out of the management console and it needs to send me somewhere this is the url that it",
    "start": "2451200",
    "end": "2457440"
  },
  {
    "text": "will send me to when my session expires and i need to know where i need to land i'm going to land in the management",
    "start": "2457440",
    "end": "2462640"
  },
  {
    "text": "console when i first attempt this and so the end product of this is the",
    "start": "2462640",
    "end": "2467680"
  },
  {
    "text": "sign in url which is a really long url and what this does is it gets sent back to the browser",
    "start": "2467680",
    "end": "2472880"
  },
  {
    "text": "and the redirection happens typically so fast that you're signed into the into the",
    "start": "2472880",
    "end": "2477920"
  },
  {
    "text": "management console and you never actually see that signing url is actually you should trust it as a secret because it has all the",
    "start": "2477920",
    "end": "2483839"
  },
  {
    "text": "things in there if i were to like mail it to you you could sign in as as an administrator into my account but i",
    "start": "2483839",
    "end": "2489760"
  },
  {
    "text": "chose the s3 role and just to show you you know if i go into i am",
    "start": "2489760",
    "end": "2495839"
  },
  {
    "text": "i'm going to get not authorized but if i go into s3",
    "start": "2495839",
    "end": "2500640"
  },
  {
    "text": "okay that's awesome if i went to s3 and i had the latest",
    "start": "2501359",
    "end": "2508640"
  },
  {
    "text": "java installed it would show me the s3 console",
    "start": "2508640",
    "end": "2513838"
  },
  {
    "text": "so once again i always like to show a little bit of code that you can use if you're using the sample it's actually very",
    "start": "2517680",
    "end": "2523400"
  },
  {
    "text": "compartmentalized and there's lots of classes and it's broken up but if you wanted to just play with it",
    "start": "2523400",
    "end": "2529200"
  },
  {
    "text": "this is a single single single method that you could use you pass in the credentials the issuer url",
    "start": "2529200",
    "end": "2535680"
  },
  {
    "text": "the console url and the sign in url and the output of that will be a login url that you can use to single",
    "start": "2535680",
    "end": "2541440"
  },
  {
    "text": "sign in so useful function if you want to uh play with that on your own",
    "start": "2541440",
    "end": "2547200"
  },
  {
    "text": "some of the obvious benefits you get to leverage your existing corporate identities right your users don't have",
    "start": "2547200",
    "end": "2552720"
  },
  {
    "text": "to remember yet another username and password the nice thing too is you get to enforce corporate policies and governance so if",
    "start": "2552720",
    "end": "2559599"
  },
  {
    "text": "you have extremely um a extremely",
    "start": "2559599",
    "end": "2565520"
  },
  {
    "text": "strict rules on on user names they need to be rotated every 30 days they need to",
    "start": "2565520",
    "end": "2570640"
  },
  {
    "text": "be 20 characters long right you can enforce all that stuff and and you don't have to worry about creating an im user",
    "start": "2570640",
    "end": "2576880"
  },
  {
    "text": "with that same sort of restriction on there the other thing too and this comes up more than you would you would think when an employee leaves you only need to",
    "start": "2576880",
    "end": "2582640"
  },
  {
    "text": "delete their corporate account you know we we get calls from people who say oh you know we let joe go two weeks",
    "start": "2582640",
    "end": "2588079"
  },
  {
    "text": "ago we forgot to delete his im account and he's been wreaking havoc on our aws account in the two weeks which he's been",
    "start": "2588079",
    "end": "2594000"
  },
  {
    "text": "gone here they leave you delete their account you've effectively revoked their permissions to to to aws so it's another benefit worth",
    "start": "2594000",
    "end": "2601280"
  },
  {
    "text": "worth pointing out okay here's another feature that uh",
    "start": "2601280",
    "end": "2606480"
  },
  {
    "text": "we actually released earlier this month that i wanted to mention because it's a it's a it's a different way of",
    "start": "2606480",
    "end": "2612000"
  },
  {
    "text": "delegation we've talked about cross account access and we've talked about federation this is a little feature that we added",
    "start": "2612000",
    "end": "2618480"
  },
  {
    "text": "that allows variable substitution in the policy language so let's imagine you are creating you know you you only have a",
    "start": "2618480",
    "end": "2624640"
  },
  {
    "text": "handful of people so you're not going to use federation you're just going to create a handful of users i am users",
    "start": "2624640",
    "end": "2630079"
  },
  {
    "text": "and you want to have you know very granular permissions on those users so for example you know maybe you want them",
    "start": "2630079",
    "end": "2636240"
  },
  {
    "text": "to be able to manage their own credentials they should be able to rotate their own keys they should be able to create their own passwords",
    "start": "2636240",
    "end": "2641760"
  },
  {
    "text": "maybe you want a home folder where they can store all their documents somewhere in an s3 bucket or maybe you even want",
    "start": "2641760",
    "end": "2647200"
  },
  {
    "text": "you know personal sns topics or sqsqs so before variables you would actually",
    "start": "2647200",
    "end": "2653280"
  },
  {
    "text": "have to create a very explicit policy that named all those resources",
    "start": "2653280",
    "end": "2658400"
  },
  {
    "text": "and on just earlier this month we allow you to take any of the keys so aws source ip",
    "start": "2658400",
    "end": "2664480"
  },
  {
    "text": "any of those conditional keys that you use in policies they're now exposed as a variable and we also added additional",
    "start": "2664480",
    "end": "2670240"
  },
  {
    "text": "ones for aws username aws user id and principal type so over here on the right i've created a",
    "start": "2670240",
    "end": "2677200"
  },
  {
    "text": "policy that i can put on a group that will give everybody in that group a",
    "start": "2677200",
    "end": "2682319"
  },
  {
    "text": "home folder in s3 and instead of having to create a new policy you know with bob with jim",
    "start": "2682319",
    "end": "2688800"
  },
  {
    "text": "with jeff or whatever i simply add users to this group and when they go and try to access a",
    "start": "2688800",
    "end": "2695599"
  },
  {
    "text": "resource the portion in red is the variable gets replaced with whatever value is in there",
    "start": "2695599",
    "end": "2701520"
  },
  {
    "text": "so i think this is actually one of them that demos better",
    "start": "2701520",
    "end": "2706240"
  },
  {
    "text": "actually let's do that from here",
    "start": "2706720",
    "end": "2710560"
  },
  {
    "text": "yeah okay let's do this from here so i'll do these side by side again",
    "start": "2717359",
    "end": "2723838"
  },
  {
    "text": "so in my account i have a user and the user is bob",
    "start": "2731040",
    "end": "2738640"
  },
  {
    "text": "and using the old method i'll go in and i'll look at the",
    "start": "2739599",
    "end": "2745119"
  },
  {
    "text": "permissions on bob",
    "start": "2745119",
    "end": "2748160"
  },
  {
    "text": "he's got a policy that gives him access to his own s3 bucket bob's lucky he's got",
    "start": "2751520",
    "end": "2757920"
  },
  {
    "text": "his own s3 bucket right and so you can imagine if i had to keep create adding users and creating buckets using this",
    "start": "2757920",
    "end": "2763359"
  },
  {
    "text": "method i'd pretty soon run up to the 100 bucket limit so what i really want to do is customize",
    "start": "2763359",
    "end": "2769599"
  },
  {
    "text": "this so bob has a home folder so if i log in as bob",
    "start": "2769599",
    "end": "2775839"
  },
  {
    "text": "i know that this one has the latest java",
    "start": "2786160",
    "end": "2789838"
  },
  {
    "text": "although i'm being the internet is not my friend here bob there's a bunch of buckets bob can",
    "start": "2799520",
    "end": "2805359"
  },
  {
    "text": "log into his bucket but he cannot log into the other buckets and what i really want him to do is to",
    "start": "2805359",
    "end": "2810720"
  },
  {
    "text": "be able to log into this users bucket where we have home folders so what i'm going to do",
    "start": "2810720",
    "end": "2816720"
  },
  {
    "text": "is i'm going to actually remove that policy from bob",
    "start": "2816720",
    "end": "2822480"
  },
  {
    "text": "and instead i'm going to move over to a group and here i have my s3 users",
    "start": "2822800",
    "end": "2828640"
  },
  {
    "text": "and i'm going to add bob to that group",
    "start": "2828640",
    "end": "2832318"
  },
  {
    "text": "and if i go over here and i look at the permissions on this group",
    "start": "2833760",
    "end": "2838880"
  },
  {
    "text": "it's a little bit maybe a little bit hard to see given the res given the resolution but i'll give you a",
    "start": "2840240",
    "end": "2847200"
  },
  {
    "text": "little bit more room just explain what happens in this policy this is sort of a boiler template if you",
    "start": "2847200",
    "end": "2852800"
  },
  {
    "text": "want people to be able to see all the buckets from the management console you're going to be giving them this this",
    "start": "2852800",
    "end": "2858480"
  },
  {
    "text": "privilege here it's probably one of the more frequently asked things of me is how do i let people access the management console",
    "start": "2858480",
    "end": "2864720"
  },
  {
    "text": "and then this bit of policy here allows them to see the home folder within my users bucket",
    "start": "2864720",
    "end": "2872960"
  },
  {
    "text": "and then down here is where the magic happens so within that bucket i'm going to have a home directory",
    "start": "2872960",
    "end": "2879040"
  },
  {
    "text": "with every user's name using that variable and then within that resource",
    "start": "2879040",
    "end": "2884720"
  },
  {
    "text": "right both within that folder in any sub folders i'm going to give them full",
    "start": "2884720",
    "end": "2890000"
  },
  {
    "text": "access to it and so now if i go back to bob you can see i cannot log into other",
    "start": "2890000",
    "end": "2896560"
  },
  {
    "text": "buckets i can now go into the user's bucket i can go into the home folder",
    "start": "2896560",
    "end": "2902000"
  },
  {
    "text": "i can't go into jeff's folder but i can go into bob's folder",
    "start": "2902000",
    "end": "2907920"
  },
  {
    "text": "and bob can even download files anyone guess what's going to be in this file",
    "start": "2908079",
    "end": "2915720"
  },
  {
    "text": "any good comedian comes to the same joke three times right so and that's probably that's a variable",
    "start": "2916160",
    "end": "2921680"
  },
  {
    "text": "substitution so that's actually a very simple way if you know you're not dealing with federation you're not dealing with delegation you have a",
    "start": "2921680",
    "end": "2927839"
  },
  {
    "text": "handful of users variable substitution is a great way to simplify the management of those users",
    "start": "2927839",
    "end": "2934480"
  },
  {
    "text": "so 10 minutes left i want to talk about considerations for when choosing the different session",
    "start": "2935760",
    "end": "2941520"
  },
  {
    "text": "types so as i mentioned there's there's different ways that you can get",
    "start": "2941520",
    "end": "2946880"
  },
  {
    "text": "those temporary credentials and depending on the api that you call there's a different way that those",
    "start": "2946880",
    "end": "2952319"
  },
  {
    "text": "the permissions for those credentials are derived there's a couple other factors that you should",
    "start": "2952319",
    "end": "2957920"
  },
  {
    "text": "consider one are what services do you want to use not all sessions were created equal and not all services",
    "start": "2957920",
    "end": "2963440"
  },
  {
    "text": "support temporary credentials and so it's important to know that in fact there's a couple services that don't support temporary credentials at all so",
    "start": "2963440",
    "end": "2970000"
  },
  {
    "text": "in that case if you're using one of those services you have to use long-term credentials so keep that in mind",
    "start": "2970000",
    "end": "2975119"
  },
  {
    "text": "the other one i mentioned before is where do you want to maintain those permissions are you an enterprise that wants to maintain all those permissions",
    "start": "2975119",
    "end": "2980640"
  },
  {
    "text": "inside of you know your corporation or do you have a separation of powers where you want to have policy in aws and users",
    "start": "2980640",
    "end": "2987839"
  },
  {
    "text": "defined so that's another thing to consider as well so this is sort of a chart on what",
    "start": "2987839",
    "end": "2993520"
  },
  {
    "text": "services support sessions so um most services support both federated",
    "start": "2993520",
    "end": "3000559"
  },
  {
    "text": "and assume role it really comes down to these handful so when you're using federated this is a",
    "start": "3000559",
    "end": "3005680"
  },
  {
    "text": "get federation token api you're not going to be able to call any of the security token service or the im and we",
    "start": "3005680",
    "end": "3011200"
  },
  {
    "text": "do that really for security purposes like those are privileged apis we don't want 36 hour temporary credentials",
    "start": "3011200",
    "end": "3017119"
  },
  {
    "text": "floating around there that potentially could expose your account assume rule on the other hand are time",
    "start": "3017119",
    "end": "3023280"
  },
  {
    "text": "bound they're tied to an entity the role and so therefore you can call the im apis",
    "start": "3023280",
    "end": "3030720"
  },
  {
    "text": "as well as you can assume a role so when you create an assume role session the temporary credentials you have",
    "start": "3030720",
    "end": "3037359"
  },
  {
    "text": "can be used to call assume rule they cannot be used to call get federation token because you can imagine",
    "start": "3037359",
    "end": "3042960"
  },
  {
    "text": "someone creates an assumeral session and then creates a 36 hour get federation and they just keep extending the",
    "start": "3042960",
    "end": "3049359"
  },
  {
    "text": "lifetime of that and so once again kind of for security reasons we don't allow that and then there's the three cloud",
    "start": "3049359",
    "end": "3056079"
  },
  {
    "text": "formation bean stock and and map reduce these are sort of meta services that do",
    "start": "3056079",
    "end": "3061520"
  },
  {
    "text": "a bunch of stuff behind the scenes on your behalf and because of that",
    "start": "3061520",
    "end": "3067200"
  },
  {
    "text": "impersonation it's it's it's going to take us a while to get those services to be able to support temporary credentials",
    "start": "3067200",
    "end": "3073040"
  },
  {
    "text": "so i point that out is if you're using cloud formation or you're using beanstalk or using mapreduce you're",
    "start": "3073040",
    "end": "3078400"
  },
  {
    "text": "going to be if you want to manage those services say from the management console you're going to have to log in using long term credentials those are the",
    "start": "3078400",
    "end": "3083920"
  },
  {
    "text": "three services right now that you can't use a role or get federation token to to",
    "start": "3083920",
    "end": "3090240"
  },
  {
    "text": "manage those and this is as a this is update as of 4 30. we have a list up there",
    "start": "3090240",
    "end": "3096400"
  },
  {
    "text": "that shows you what is supported and we're always changing that because new services are always coming online some",
    "start": "3096400",
    "end": "3102079"
  },
  {
    "text": "of those services support temporary potentials on day one some of them take a little bit of time so always go and look is the service that i'm calling",
    "start": "3102079",
    "end": "3109119"
  },
  {
    "text": "going to support temporary credentials this is the other one that i mentioned you know do you want to store the permissions inside of your enterprise or",
    "start": "3109119",
    "end": "3115520"
  },
  {
    "text": "do you want to store them within aws if you want to maintain everything and you have a single administrator you're",
    "start": "3115520",
    "end": "3121920"
  },
  {
    "text": "probably better off using get federation token as i mentioned going through that",
    "start": "3121920",
    "end": "3127280"
  },
  {
    "text": "scenario the proxy server is going to probably require the maximum permissions of the union of all of your users",
    "start": "3127280",
    "end": "3132800"
  },
  {
    "text": "typically that star and then you're going to attach a policy to the request to scope it down so",
    "start": "3132800",
    "end": "3138559"
  },
  {
    "text": "you're going to have to manage those policies inside of your enterprise and you're going to have to attach that with every request",
    "start": "3138559",
    "end": "3143920"
  },
  {
    "text": "if you want to manage the permissions inside of aws using roles is probably an easier solution for you if you use",
    "start": "3143920",
    "end": "3150800"
  },
  {
    "text": "the proxy sample that i demonstrated the proxy is only going to require list roles and assume role permissions",
    "start": "3150800",
    "end": "3157839"
  },
  {
    "text": "and then you can optionally attach a policy so roles are a little bit more flexible in that if you want to you",
    "start": "3157839",
    "end": "3163920"
  },
  {
    "text": "could also store policy inside of your enterprise and scope it down but in general you'll probably be assuming one",
    "start": "3163920",
    "end": "3170240"
  },
  {
    "text": "role for for one set of entitlements so in summary",
    "start": "3170240",
    "end": "3176960"
  },
  {
    "text": "we looked at a couple different use cases one of them was the cross account api access i showed you how you could build you",
    "start": "3176960",
    "end": "3183680"
  },
  {
    "text": "know a single set of utilities using one set of credentials where you can manage all of your accounts",
    "start": "3183680",
    "end": "3190240"
  },
  {
    "text": "you don't have to share long-term credentials you know with your users or even your business partners if you're using third-party tools to manage your",
    "start": "3190240",
    "end": "3197119"
  },
  {
    "text": "account and because this is based on a role you can change the permissions on the role you can delete the role at any time to revoke revoke access to that",
    "start": "3197119",
    "end": "3205200"
  },
  {
    "text": "we looked at federation as well so there you're leveraging your existing corporate identities",
    "start": "3205200",
    "end": "3211119"
  },
  {
    "text": "you get to use the username and password that you already know and love you get to enforce any corporate policies or",
    "start": "3211119",
    "end": "3217040"
  },
  {
    "text": "governments or any specific rules that you have inside of your organization that you want to apply to your aws",
    "start": "3217040",
    "end": "3222319"
  },
  {
    "text": "resources and best of all employee leaves gets fired retires wins the lottery",
    "start": "3222319",
    "end": "3229200"
  },
  {
    "text": "you should probably think of some positive examples there you only need to delete their account right and so you've effectively revoked",
    "start": "3229200",
    "end": "3235440"
  },
  {
    "text": "their access by deleting that that one username we took a look at some of the different technologies i'll reiterate sessions are",
    "start": "3235440",
    "end": "3242640"
  },
  {
    "text": "the heart of delegation you're going to use either the get federation token or the assume role api to request those",
    "start": "3242640",
    "end": "3249200"
  },
  {
    "text": "sessions from sts when you get those you get your keys your your secret key your access key and",
    "start": "3249200",
    "end": "3255520"
  },
  {
    "text": "your session token you're going to apply and you need to specify the token that's that's one another another frequently thing i see people do wrong is they get",
    "start": "3255520",
    "end": "3262240"
  },
  {
    "text": "the access keys from the session and they forget to append the token to the request so then we also start seeing in our logs",
    "start": "3262240",
    "end": "3268640"
  },
  {
    "text": "a bunch of access denied usually results in an email from me as well so you make sure that you assign",
    "start": "3268640",
    "end": "3274720"
  },
  {
    "text": "those you assign the token to the request in there and then last but not least you know choosing the right",
    "start": "3274720",
    "end": "3279760"
  },
  {
    "text": "session for the job so with that i'll put up some information on there we",
    "start": "3279760",
    "end": "3285520"
  },
  {
    "text": "have if you want to get more information we actually have the im home page we have a forum so if you have security",
    "start": "3285520",
    "end": "3291760"
  },
  {
    "text": "questions or you know you're having trouble with any of the samples that we have or you just have a question on how",
    "start": "3291760",
    "end": "3296800"
  },
  {
    "text": "to do something using the access control policy language that is where i and a bunch of other folks on the team",
    "start": "3296800",
    "end": "3304079"
  },
  {
    "text": "hang out the developer documentation is excellent there's actually another document in there for for sts i should have put in",
    "start": "3304079",
    "end": "3310800"
  },
  {
    "text": "there and just this was it last night yeah just last night we launched the aws",
    "start": "3310800",
    "end": "3315839"
  },
  {
    "text": "security blog so that's where we're going to be posting you know tips and tricks and and things how you do it so",
    "start": "3315839",
    "end": "3321359"
  },
  {
    "text": "you can go over there and you can subscribe to our blog i will leave this up and uh i have like four minutes so if",
    "start": "3321359",
    "end": "3328160"
  },
  {
    "text": "you guys have questions i'll hang up front you can come and talk to me and otherwise thank you for your time and",
    "start": "3328160",
    "end": "3334079"
  },
  {
    "text": "thank you for attending the aws summit",
    "start": "3334079",
    "end": "3338280"
  }
]