[
  {
    "start": "0",
    "end": "43000"
  },
  {
    "text": "hi there my name is Lee Hanigan and I'm",
    "start": "5600",
    "end": "7839"
  },
  {
    "text": "a senior specialist Solutions architect",
    "start": "7839",
    "end": "10080"
  },
  {
    "text": "with Amazon Dynamo Tob in this video",
    "start": "10080",
    "end": "13040"
  },
  {
    "text": "we're going to discuss one of Dynamo's",
    "start": "13040",
    "end": "14639"
  },
  {
    "text": "features which is maximum throughput for",
    "start": "14639",
    "end": "17039"
  },
  {
    "text": "on demand tables with this feature you",
    "start": "17039",
    "end": "20000"
  },
  {
    "text": "can now optionally specify the maximum",
    "start": "20000",
    "end": "21960"
  },
  {
    "text": "throughput for reads wrs or both on a",
    "start": "21960",
    "end": "26000"
  },
  {
    "text": "table or Global secondary index",
    "start": "26000",
    "end": "28320"
  },
  {
    "text": "level let's get into it",
    "start": "28320",
    "end": "31960"
  },
  {
    "text": "so maximum throughput is built for on",
    "start": "32040",
    "end": "34480"
  },
  {
    "text": "demand tables and to First understand",
    "start": "34480",
    "end": "37079"
  },
  {
    "text": "where it's beneficial we want to give",
    "start": "37079",
    "end": "38640"
  },
  {
    "text": "you a brief introduction to what on",
    "start": "38640",
    "end": "40280"
  },
  {
    "text": "Demag capacity mode",
    "start": "40280",
    "end": "43320"
  },
  {
    "start": "43000",
    "end": "81000"
  },
  {
    "text": "is then on demand is a serverless",
    "start": "44079",
    "end": "47120"
  },
  {
    "text": "billing option that allows Dynam to",
    "start": "47120",
    "end": "49360"
  },
  {
    "text": "serve millions of requests per second",
    "start": "49360",
    "end": "51559"
  },
  {
    "text": "without you having to worry about any",
    "start": "51559",
    "end": "53079"
  },
  {
    "text": "capacity",
    "start": "53079",
    "end": "54160"
  },
  {
    "text": "planning on demand mode offers a payer",
    "start": "54160",
    "end": "56719"
  },
  {
    "text": "request pricing model for both reads and",
    "start": "56719",
    "end": "58800"
  },
  {
    "text": "writs so that you only pay for what you",
    "start": "58800",
    "end": "62559"
  },
  {
    "text": "use when you choose on demand mode Den",
    "start": "62559",
    "end": "65439"
  },
  {
    "text": "will be instantly accommodates your",
    "start": "65439",
    "end": "66880"
  },
  {
    "text": "workloads as they ramp up or down to any",
    "start": "66880",
    "end": "69439"
  },
  {
    "text": "previously reached traffic",
    "start": "69439",
    "end": "71640"
  },
  {
    "text": "level if a workloads traffic level hits",
    "start": "71640",
    "end": "74520"
  },
  {
    "text": "a new Peak Den we adapts rapidly to",
    "start": "74520",
    "end": "77680"
  },
  {
    "text": "accommodate that",
    "start": "77680",
    "end": "80320"
  },
  {
    "start": "81000",
    "end": "187000"
  },
  {
    "text": "workload as Den is on demand mode can",
    "start": "81400",
    "end": "84840"
  },
  {
    "text": "instantly scale to any previously",
    "start": "84840",
    "end": "87079"
  },
  {
    "text": "reached Peak it is governed by the",
    "start": "87079",
    "end": "90040"
  },
  {
    "text": "account table level limit by default",
    "start": "90040",
    "end": "93360"
  },
  {
    "text": "this is 40,000 read capacity units and",
    "start": "93360",
    "end": "95759"
  },
  {
    "text": "40,000 right capacity",
    "start": "95759",
    "end": "97840"
  },
  {
    "text": "units this is a region level setting",
    "start": "97840",
    "end": "101200"
  },
  {
    "text": "meaning that this is governs the",
    "start": "101200",
    "end": "102720"
  },
  {
    "text": "capacity that all of your on demand",
    "start": "102720",
    "end": "104479"
  },
  {
    "text": "tables can consume that means that each",
    "start": "104479",
    "end": "106920"
  },
  {
    "text": "one of them can consume from 0 to 40,000",
    "start": "106920",
    "end": "110759"
  },
  {
    "text": "instantly and of course this is only a",
    "start": "110759",
    "end": "112840"
  },
  {
    "text": "soft limit so if you have a large",
    "start": "112840",
    "end": "115320"
  },
  {
    "text": "application that may need 100,000 right",
    "start": "115320",
    "end": "117759"
  },
  {
    "text": "capacity units for example you will have",
    "start": "117759",
    "end": "120119"
  },
  {
    "text": "to increase all of the capabilities of",
    "start": "120119",
    "end": "122039"
  },
  {
    "text": "all of your tables within that region",
    "start": "122039",
    "end": "124840"
  },
  {
    "text": "that means for some applications that",
    "start": "124840",
    "end": "126960"
  },
  {
    "text": "only need a small amount of capacity",
    "start": "126960",
    "end": "129039"
  },
  {
    "text": "they do have the ability to go from zero",
    "start": "129039",
    "end": "131319"
  },
  {
    "text": "to 100,000 right capacity units",
    "start": "131319",
    "end": "133360"
  },
  {
    "text": "instantly as that is an account level",
    "start": "133360",
    "end": "137560"
  },
  {
    "text": "limit with maximum throughput for on",
    "start": "138000",
    "end": "140599"
  },
  {
    "text": "demand we are now giving you the option",
    "start": "140599",
    "end": "144120"
  },
  {
    "text": "to provide a limit on a pair table or",
    "start": "144120",
    "end": "146200"
  },
  {
    "text": "pair index basis for both reads or wrs",
    "start": "146200",
    "end": "151040"
  },
  {
    "text": "so this now allows you to govern how",
    "start": "151040",
    "end": "152920"
  },
  {
    "text": "much capacity that you can consume on a",
    "start": "152920",
    "end": "155400"
  },
  {
    "text": "pair table or pair index basis you no",
    "start": "155400",
    "end": "158680"
  },
  {
    "text": "longer need to be governed by this",
    "start": "158680",
    "end": "160200"
  },
  {
    "text": "account level limit which is like a",
    "start": "160200",
    "end": "162800"
  },
  {
    "text": "blanket over all of your",
    "start": "162800",
    "end": "166040"
  },
  {
    "text": "tables if we look at our cloudwatch",
    "start": "166959",
    "end": "169000"
  },
  {
    "text": "metrics here we have a limit set for 500",
    "start": "169000",
    "end": "172080"
  },
  {
    "text": "right capacity units and we're also",
    "start": "172080",
    "end": "174159"
  },
  {
    "text": "trying to consume as much as we can but",
    "start": "174159",
    "end": "176120"
  },
  {
    "text": "as you can see our consume capacity is",
    "start": "176120",
    "end": "178720"
  },
  {
    "text": "unable to exceed seed or on man maximum",
    "start": "178720",
    "end": "184080"
  },
  {
    "start": "187000",
    "end": "262000"
  },
  {
    "text": "throughput so some use cases where this",
    "start": "188040",
    "end": "190680"
  },
  {
    "text": "may be beneficial one is trut cost",
    "start": "190680",
    "end": "193640"
  },
  {
    "text": "optimization so using maximum throughput",
    "start": "193640",
    "end": "196200"
  },
  {
    "text": "for on demand tables provides an",
    "start": "196200",
    "end": "198159"
  },
  {
    "text": "additional layer of cost predictability",
    "start": "198159",
    "end": "200360"
  },
  {
    "text": "and manageability additionally it offers",
    "start": "200360",
    "end": "203360"
  },
  {
    "text": "greater flexibility to use on demand",
    "start": "203360",
    "end": "205040"
  },
  {
    "text": "mode to support workloads with different",
    "start": "205040",
    "end": "207360"
  },
  {
    "text": "traffic patterns in budgets",
    "start": "207360",
    "end": "210400"
  },
  {
    "text": "then we have protection against",
    "start": "210400",
    "end": "211560"
  },
  {
    "text": "excessive usage so by setting maximum",
    "start": "211560",
    "end": "213799"
  },
  {
    "text": "throughput you can prevent an accidental",
    "start": "213799",
    "end": "215920"
  },
  {
    "text": "Surge and read or right consumption",
    "start": "215920",
    "end": "218000"
  },
  {
    "text": "which might arise from something like a",
    "start": "218000",
    "end": "219400"
  },
  {
    "text": "non-optimized code or a rogue process",
    "start": "219400",
    "end": "222599"
  },
  {
    "text": "against your on demand table so this",
    "start": "222599",
    "end": "225080"
  },
  {
    "text": "table level setting can protect",
    "start": "225080",
    "end": "226799"
  },
  {
    "text": "organizations from consuming excessive",
    "start": "226799",
    "end": "228959"
  },
  {
    "text": "resources within a certain time frame",
    "start": "228959",
    "end": "231799"
  },
  {
    "text": "and finally we can safegard Downstream",
    "start": "231799",
    "end": "234519"
  },
  {
    "text": "Services an application can include",
    "start": "234519",
    "end": "237159"
  },
  {
    "text": "serverless and non serverless",
    "start": "237159",
    "end": "238680"
  },
  {
    "text": "Technologies",
    "start": "238680",
    "end": "240280"
  },
  {
    "text": "and the servess piece of the",
    "start": "240280",
    "end": "241360"
  },
  {
    "text": "architecture can scale rapidly to match",
    "start": "241360",
    "end": "244239"
  },
  {
    "text": "demand but Downstream components with",
    "start": "244239",
    "end": "246840"
  },
  {
    "text": "fixed capacities could easily be",
    "start": "246840",
    "end": "249439"
  },
  {
    "text": "overwhelmed so implementing maximum",
    "start": "249439",
    "end": "251599"
  },
  {
    "text": "throughput settings for on demand tables",
    "start": "251599",
    "end": "254040"
  },
  {
    "text": "can prevent large volumes of events from",
    "start": "254040",
    "end": "256400"
  },
  {
    "text": "propagate to multiple Downstream",
    "start": "256400",
    "end": "258000"
  },
  {
    "text": "components with unexpected side",
    "start": "258000",
    "end": "262079"
  },
  {
    "start": "262000",
    "end": "545000"
  },
  {
    "text": "effects so now time for the demo I'm",
    "start": "262400",
    "end": "265280"
  },
  {
    "text": "going to take you through the AWS web",
    "start": "265280",
    "end": "267919"
  },
  {
    "text": "console to show you how to implement",
    "start": "267919",
    "end": "269800"
  },
  {
    "text": "maximum throughput for on demand",
    "start": "269800",
    "end": "273638"
  },
  {
    "text": "tables so here we are in the AWS web",
    "start": "274120",
    "end": "276600"
  },
  {
    "text": "console and we're going to go ahead and",
    "start": "276600",
    "end": "278199"
  },
  {
    "text": "create a Dynamo DB table so we click on",
    "start": "278199",
    "end": "280600"
  },
  {
    "text": "Dynamo DB and on the right hand side we",
    "start": "280600",
    "end": "283400"
  },
  {
    "text": "have the create table",
    "start": "283400",
    "end": "285080"
  },
  {
    "text": "workflow we're going to click on that",
    "start": "285080",
    "end": "287360"
  },
  {
    "text": "we'll give it a sample name and we're",
    "start": "287360",
    "end": "291199"
  },
  {
    "text": "just going to put in a protetion key",
    "start": "291199",
    "end": "292360"
  },
  {
    "text": "we'll call it PK for short and the same",
    "start": "292360",
    "end": "294360"
  },
  {
    "text": "with sort key ask for short and then we",
    "start": "294360",
    "end": "298280"
  },
  {
    "text": "scroll down to the table set",
    "start": "298280",
    "end": "300880"
  },
  {
    "text": "and we're going to put in customize",
    "start": "300880",
    "end": "302360"
  },
  {
    "text": "settings here so we can select for on",
    "start": "302360",
    "end": "304520"
  },
  {
    "text": "demand mode so customize setting we",
    "start": "304520",
    "end": "308039"
  },
  {
    "text": "don't need to change the table class",
    "start": "308039",
    "end": "309720"
  },
  {
    "text": "scroll on down we come to the read right",
    "start": "309720",
    "end": "312360"
  },
  {
    "text": "capacity settings here we're going to",
    "start": "312360",
    "end": "314440"
  },
  {
    "text": "choose on demand mode and then we'll see",
    "start": "314440",
    "end": "317199"
  },
  {
    "text": "this drop down which is our new maximum",
    "start": "317199",
    "end": "319120"
  },
  {
    "text": "table throughput which is optional so",
    "start": "319120",
    "end": "322199"
  },
  {
    "text": "we're going to drop that down now we can",
    "start": "322199",
    "end": "324280"
  },
  {
    "text": "see that we can set either reads or",
    "start": "324280",
    "end": "326440"
  },
  {
    "text": "writes or both on table or index if we",
    "start": "326440",
    "end": "329960"
  },
  {
    "text": "were to create an",
    "start": "329960",
    "end": "331120"
  },
  {
    "text": "index so we're going ahead and we're",
    "start": "331120",
    "end": "333319"
  },
  {
    "text": "going to set for both so we unlock both",
    "start": "333319",
    "end": "335639"
  },
  {
    "text": "of those and we're going to give them",
    "start": "335639",
    "end": "337440"
  },
  {
    "text": "1,000 read capacity units and 1,000",
    "start": "337440",
    "end": "340880"
  },
  {
    "text": "right capacity units so this now locks",
    "start": "340880",
    "end": "344000"
  },
  {
    "text": "this table in to not being able to",
    "start": "344000",
    "end": "346039"
  },
  {
    "text": "produce more than 1,000 right capacity",
    "start": "346039",
    "end": "347880"
  },
  {
    "text": "units or 1,000 Rec capacity units no",
    "start": "347880",
    "end": "350520"
  },
  {
    "text": "matter what applications are talking to",
    "start": "350520",
    "end": "352960"
  },
  {
    "text": "it scrolling right to the bottom then we",
    "start": "352960",
    "end": "355280"
  },
  {
    "text": "can skip encryption deletion protection",
    "start": "355280",
    "end": "357000"
  },
  {
    "text": "and resource based policies we don't",
    "start": "357000",
    "end": "359400"
  },
  {
    "text": "need any tags and we go ahead and create",
    "start": "359400",
    "end": "361520"
  },
  {
    "text": "the",
    "start": "361520",
    "end": "363680"
  },
  {
    "text": "table so while that one's being created",
    "start": "364919",
    "end": "367800"
  },
  {
    "text": "I'll show you one that I created earlier",
    "start": "367800",
    "end": "369440"
  },
  {
    "text": "so we can skip the the loading phase so",
    "start": "369440",
    "end": "372199"
  },
  {
    "text": "this is called my first table and first",
    "start": "372199",
    "end": "374800"
  },
  {
    "text": "of all if we scroll over to the very top",
    "start": "374800",
    "end": "376280"
  },
  {
    "text": "right of our table settings we have this",
    "start": "376280",
    "end": "378080"
  },
  {
    "text": "additional settings",
    "start": "378080",
    "end": "379680"
  },
  {
    "text": "tab we click on that we can see that",
    "start": "379680",
    "end": "382319"
  },
  {
    "text": "where capacity mode is on demand and now",
    "start": "382319",
    "end": "384800"
  },
  {
    "text": "we can also see that we've got maximum",
    "start": "384800",
    "end": "386360"
  },
  {
    "text": "read request units and maximum write",
    "start": "386360",
    "end": "388840"
  },
  {
    "text": "request units",
    "start": "388840",
    "end": "390080"
  },
  {
    "text": "and again both of those are set to 1,000",
    "start": "390080",
    "end": "393840"
  },
  {
    "text": "each then if we scroll over to the",
    "start": "393840",
    "end": "395960"
  },
  {
    "text": "monitor",
    "start": "395960",
    "end": "397479"
  },
  {
    "text": "tab so monitor gives us a brief overview",
    "start": "397479",
    "end": "400800"
  },
  {
    "text": "of our Cloud watch metrics and for about",
    "start": "400800",
    "end": "403400"
  },
  {
    "text": "the last one hour or so I've been making",
    "start": "403400",
    "end": "405039"
  },
  {
    "text": "right request to this table and those",
    "start": "405039",
    "end": "407360"
  },
  {
    "text": "right requests are trying to exceed the",
    "start": "407360",
    "end": "408960"
  },
  {
    "text": "1,000 right Capac units that I have set",
    "start": "408960",
    "end": "411440"
  },
  {
    "text": "as my maximum table through put",
    "start": "411440",
    "end": "413560"
  },
  {
    "text": "limit so for reads we're not going to",
    "start": "413560",
    "end": "416000"
  },
  {
    "text": "see anything different but for rights we",
    "start": "416000",
    "end": "418120"
  },
  {
    "text": "can see we've got a lot of right",
    "start": "418120",
    "end": "419840"
  },
  {
    "text": "throttle",
    "start": "419840",
    "end": "421599"
  },
  {
    "text": "requests so right throttle requests are",
    "start": "421599",
    "end": "425120"
  },
  {
    "text": "happening because I'm trying to exceed",
    "start": "425120",
    "end": "427080"
  },
  {
    "text": "the limit that I put in place so for",
    "start": "427080",
    "end": "429680"
  },
  {
    "text": "every item or every request that exceeds",
    "start": "429680",
    "end": "432000"
  },
  {
    "text": "that 1,000 right Capac units Dy is going",
    "start": "432000",
    "end": "434680"
  },
  {
    "text": "to give that a TR an",
    "start": "434680",
    "end": "436720"
  },
  {
    "text": "exception and it'll show up in your",
    "start": "436720",
    "end": "438680"
  },
  {
    "text": "graph just like",
    "start": "438680",
    "end": "440919"
  },
  {
    "text": "this basically it's telling Dy dyn is",
    "start": "440919",
    "end": "443800"
  },
  {
    "text": "basically telling your application that",
    "start": "443800",
    "end": "445919"
  },
  {
    "text": "you need to slow down that it cannot",
    "start": "445919",
    "end": "447879"
  },
  {
    "text": "maintain the rate of requests that",
    "start": "447879",
    "end": "449919"
  },
  {
    "text": "you're",
    "start": "449919",
    "end": "451960"
  },
  {
    "text": "making so then if we go over to our",
    "start": "451960",
    "end": "454039"
  },
  {
    "text": "right usage which we see our consumption",
    "start": "454039",
    "end": "456360"
  },
  {
    "text": "and we dig into the last one hour we can",
    "start": "456360",
    "end": "458919"
  },
  {
    "text": "see that we have this steady orange line",
    "start": "458919",
    "end": "462120"
  },
  {
    "text": "and that orange line is our maximum uh",
    "start": "462120",
    "end": "465280"
  },
  {
    "text": "right request",
    "start": "465280",
    "end": "466599"
  },
  {
    "text": "units the blue line is our consumption",
    "start": "466599",
    "end": "469919"
  },
  {
    "text": "and you can see that dyam be is not",
    "start": "469919",
    "end": "471680"
  },
  {
    "text": "allowing it to exceed the orange Lane so",
    "start": "471680",
    "end": "474879"
  },
  {
    "text": "we're being governed by that 1,000 right",
    "start": "474879",
    "end": "476680"
  },
  {
    "text": "capacity units that we set up when we",
    "start": "476680",
    "end": "478440"
  },
  {
    "text": "created the table",
    "start": "478440",
    "end": "481440"
  },
  {
    "text": "so if we wanted to disable our maximum",
    "start": "483080",
    "end": "485440"
  },
  {
    "text": "throughput for on demand tables that can",
    "start": "485440",
    "end": "487560"
  },
  {
    "text": "be easily done",
    "start": "487560",
    "end": "488759"
  },
  {
    "text": "too so if we go back over to our",
    "start": "488759",
    "end": "491599"
  },
  {
    "text": "additional settings on the top",
    "start": "491599",
    "end": "494639"
  },
  {
    "text": "right we can click edit here on the read",
    "start": "494639",
    "end": "497479"
  },
  {
    "text": "write capacity",
    "start": "497479",
    "end": "499080"
  },
  {
    "text": "mode and here you can just disable these",
    "start": "499080",
    "end": "502479"
  },
  {
    "text": "checkboxes that's simply removing it we",
    "start": "502479",
    "end": "505039"
  },
  {
    "text": "can also edit those we can increase them",
    "start": "505039",
    "end": "506680"
  },
  {
    "text": "should we want if we want to increase",
    "start": "506680",
    "end": "508520"
  },
  {
    "text": "our reads for example to 10,000 we can",
    "start": "508520",
    "end": "511560"
  },
  {
    "text": "easily do that and we can disable our",
    "start": "511560",
    "end": "513680"
  },
  {
    "text": "rights at the same",
    "start": "513680",
    "end": "515080"
  },
  {
    "text": "time we go ahead and we save the",
    "start": "515080",
    "end": "517719"
  },
  {
    "text": "changes and that's done so it's really",
    "start": "517719",
    "end": "520560"
  },
  {
    "text": "as simple as that to manage the maximum",
    "start": "520560",
    "end": "522360"
  },
  {
    "text": "throughput levels for your on demand",
    "start": "522360",
    "end": "524760"
  },
  {
    "text": "capacity mode",
    "start": "524760",
    "end": "526399"
  },
  {
    "text": "tables thank you for taking the time to",
    "start": "526399",
    "end": "529160"
  },
  {
    "text": "watch this video for maximum throughput",
    "start": "529160",
    "end": "531680"
  },
  {
    "text": "for on demand mode tables if you'd like",
    "start": "531680",
    "end": "534120"
  },
  {
    "text": "to learn more please scan the QR link",
    "start": "534120",
    "end": "536360"
  },
  {
    "text": "that you see here see you in the next",
    "start": "536360",
    "end": "538480"
  },
  {
    "text": "one",
    "start": "538480",
    "end": "541440"
  }
]