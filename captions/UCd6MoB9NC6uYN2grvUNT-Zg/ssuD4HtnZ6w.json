[
  {
    "text": "all right hello can y'all hear me team green wave at me if you can hear me",
    "start": "2179",
    "end": "7639"
  },
  {
    "text": "hi very cool and I'm glad you guys are here public sector this is very cool",
    "start": "7639",
    "end": "12900"
  },
  {
    "text": "my name is Eric Johnson let's see if let's see if my deck is up there we'll hit there 12 factor there I am that's me",
    "start": "12900",
    "end": "21199"
  },
  {
    "text": "so I'm not pretty but that's alright my wife says I don't have to be pretty I",
    "start": "21199",
    "end": "26250"
  },
  {
    "text": "don't have to be right I just have to be funny so it works out for us so I'm glad",
    "start": "26250",
    "end": "31740"
  },
  {
    "text": "you're here and a little bit about me to say you knew who I am I am the server list developer advocate",
    "start": "31740",
    "end": "37260"
  },
  {
    "text": "I'm a senior developer advocate for AWS talking about service my twitter handle is e DJ geek i encourage you to follow",
    "start": "37260",
    "end": "44010"
  },
  {
    "text": "it I talk about serving us a lot I also talk about my kids and family and weird things a lot so you know good with the",
    "start": "44010",
    "end": "49260"
  },
  {
    "text": "bad I am senior senior I talked about that I'm a big nerd on service tooling",
    "start": "49260",
    "end": "55649"
  },
  {
    "text": "Automation those kind of things I just realized there's a screen in front of me and not just behind me so that's gonna",
    "start": "55649",
    "end": "61890"
  },
  {
    "text": "be really helpful I am a dad of 5 ok yes that's not a typo I am a dad of 5 I'm a",
    "start": "61890",
    "end": "68700"
  },
  {
    "text": "husband of 1 and I am a musician but a lot of people say drummers aren't",
    "start": "68700",
    "end": "74040"
  },
  {
    "text": "musician so I am a drummer so ok we got some excitement out there we've got some drummers so a couple of things I have a",
    "start": "74040",
    "end": "79920"
  },
  {
    "text": "couple of rules when I'm talking okay and I know you're looking at me go who are you to make rules well I'm the guy",
    "start": "79920",
    "end": "85290"
  },
  {
    "text": "up front with the mic that talks to green right so the first rule is this and really the more guidelines are gonna",
    "start": "85290",
    "end": "91320"
  },
  {
    "text": "help you out but it will be handy the first rule is this this is any number I",
    "start": "91320",
    "end": "96329"
  },
  {
    "text": "want it to be okay I I'm not kidding you",
    "start": "96329",
    "end": "102720"
  },
  {
    "text": "because I will say things like there's seven of us there's nine of us and someone in the back I always make that's a one I know math that's a one okay",
    "start": "102720",
    "end": "113159"
  },
  {
    "text": "these are quotes not apostrophes I know that okay and these are thumbs I'm not",
    "start": "113159",
    "end": "121920"
  },
  {
    "text": "just pointing at myself my college ID was this and everybody's like why is he",
    "start": "121920",
    "end": "127590"
  },
  {
    "text": "pointing at himself so I do like to have some fun I will tell one finger jokes",
    "start": "127590",
    "end": "132870"
  },
  {
    "text": "it might make you comfortable and if that does you're gonna be uncomfortable because I'm gonna do it so but we are gonna have some fun",
    "start": "132870",
    "end": "140880"
  },
  {
    "text": "you public-sector this is very cool tell you last last year I went to the public sector party at reinvent and and there's",
    "start": "140880",
    "end": "146819"
  },
  {
    "text": "a lot of people that think they know how to throw a party but public sector knows how to throw a party ok let me tell you why you guys",
    "start": "146819",
    "end": "152670"
  },
  {
    "text": "had a donut wall okay now if you haven't figured out I was born to eat doughnuts okay",
    "start": "152670",
    "end": "158010"
  },
  {
    "text": "or make them you know so I was very happy all right so let's let's jump in here I can tell jokes all day but you",
    "start": "158010",
    "end": "164880"
  },
  {
    "text": "probably wanna hear a little bit about service so why are we here today okay so we're gonna be talking about what does",
    "start": "164880",
    "end": "173190"
  },
  {
    "text": "serverless mean today or what does twelve factor service applications mean okay so we're gonna jump in here twelve",
    "start": "173190",
    "end": "182160"
  },
  {
    "text": "factor model and so this application so what what is twelve factor has anybody ever heard of twelve factor okay",
    "start": "182160",
    "end": "188160"
  },
  {
    "text": "excellent so let's do this real quick how many y'all are using service currently all righty okay excellent how",
    "start": "188160",
    "end": "195480"
  },
  {
    "text": "many y'all are looking to get into service how many y'all are in the wrong",
    "start": "195480",
    "end": "200760"
  },
  {
    "text": "group and you're not sure what I'm talking about okay let's say you've got one guy raise his hand it's over there",
    "start": "200760",
    "end": "207890"
  },
  {
    "text": "okay great so the twelve factor is it was written by popularized by developers",
    "start": "207890",
    "end": "213510"
  },
  {
    "text": "building large-scale applications on platforms such as Haruko okay in recent years twelve factory guys have",
    "start": "213510",
    "end": "219840"
  },
  {
    "text": "really become best practices so what people do is they look at this and this this is how we should build their app and the great thing about twelve factor",
    "start": "219840",
    "end": "226019"
  },
  {
    "text": "app or twelve factor development model is that it applies it doesn't matter what language you're using doesn't",
    "start": "226019",
    "end": "232019"
  },
  {
    "text": "matter you know the frameworks stuff like that it's good it's just good practice okay",
    "start": "232019",
    "end": "237269"
  },
  {
    "text": "so we want to talk about how does that apply to you know service so there's",
    "start": "237269",
    "end": "242820"
  },
  {
    "text": "some key things in twelve factor that we want to point out okay so first of all when you look at this and I could read",
    "start": "242820",
    "end": "249150"
  },
  {
    "text": "this to you but the main things I want to call out are the twelve factor app is a methodology for building software as a",
    "start": "249150",
    "end": "254880"
  },
  {
    "text": "service app that number one let me try the button again number one use declarative formats for",
    "start": "254880",
    "end": "263250"
  },
  {
    "text": "setup automation okay so that means that when you have users coming in they should not have to",
    "start": "263250",
    "end": "269850"
  },
  {
    "text": "spend 17 days ramping up have you ever been that new guy coming in good okay",
    "start": "269850",
    "end": "275040"
  },
  {
    "text": "here's our application it's gonna take you a year to get it set up on your computer and then you'll probably get",
    "start": "275040",
    "end": "280530"
  },
  {
    "text": "fired but good luck so I've been that guy and that's that's a panic that's a stressful day okay second thing number",
    "start": "280530",
    "end": "288180"
  },
  {
    "text": "two what number alright there's somebody new in the back that's the one all right",
    "start": "288180",
    "end": "294480"
  },
  {
    "text": "have a clean contract with the underlying operating system you should not be reliant on the undulating",
    "start": "294480",
    "end": "300360"
  },
  {
    "text": "underlying operating system you should be able to move around you should be able to take that and move it fairly",
    "start": "300360",
    "end": "305790"
  },
  {
    "text": "easily okay number three are suitable for deployment on modern cloud platforms",
    "start": "305790",
    "end": "311520"
  },
  {
    "text": "hello this is important right okay so we don't want to have to always be reliant",
    "start": "311520",
    "end": "317190"
  },
  {
    "text": "on old technology we don't want to be able to move forward okay cloud cloud obviously I'm a proponent of cloud and",
    "start": "317190",
    "end": "324150"
  },
  {
    "text": "that's modern and we want to be able to do modern application modern you get the",
    "start": "324150",
    "end": "329220"
  },
  {
    "text": "efficiency the scalability the cost savings all those kind of things there",
    "start": "329220",
    "end": "334860"
  },
  {
    "text": "should be minimum divergent between development and production and enable continuous deployment okay we'll talk a",
    "start": "334860",
    "end": "341190"
  },
  {
    "text": "little bit more about that okay but man have you ever been that developer when",
    "start": "341190",
    "end": "346410"
  },
  {
    "text": "you're working on a project and you get to you build it and everything works locally but your production environment",
    "start": "346410",
    "end": "353130"
  },
  {
    "text": "looks entirely different ago yeah we don't run Windows in production okay",
    "start": "353130",
    "end": "360630"
  },
  {
    "text": "we're shutting down because I uppercase everything right so that's always been my thing case sensitivity between you",
    "start": "360630",
    "end": "367410"
  },
  {
    "text": "know Linux and windows so they should match right okay and finally can scale up without significant changes in",
    "start": "367410",
    "end": "373710"
  },
  {
    "text": "tooling architecture or development practices okay and I would add can scale up without having to call me at 3:00 in",
    "start": "373710",
    "end": "379229"
  },
  {
    "text": "the morning and say hey turn on another box alright cuz that's not fun okay grab",
    "start": "379229",
    "end": "385050"
  },
  {
    "text": "a drink of water here real quick all right so let's jump in here and look",
    "start": "385050",
    "end": "393430"
  },
  {
    "text": "at understanding servlets now this is a very basic this in this we're not going to go through the entire definition of",
    "start": "393430",
    "end": "399789"
  },
  {
    "text": "serve listen and and how it works but I will tell you it's servlets there are no computers there are computers but you",
    "start": "399789",
    "end": "406389"
  },
  {
    "text": "don't have to worry about it I'm not gonna lie I walked up this morning and I've never done a presentation there's no computer here",
    "start": "406389",
    "end": "412479"
  },
  {
    "text": "and I got all excited I said our server presentation server lists this is awesome",
    "start": "412479",
    "end": "417909"
  },
  {
    "text": "so it's not the case apparently it's in the back somewhere but you know so when",
    "start": "417909",
    "end": "423550"
  },
  {
    "text": "we're talking about service it's really kind of a basic idea okay when you think about how it works or we're gonna talk",
    "start": "423550",
    "end": "429009"
  },
  {
    "text": "about it a basic idea there's some more complexity that we worry about not you but the basic idea of running service is",
    "start": "429009",
    "end": "435819"
  },
  {
    "text": "that you have an event source and that event source can be really a number of anything okay it can be a change in data",
    "start": "435819",
    "end": "441099"
  },
  {
    "text": "state can be request to an endpoint change in resource state file dropped in a bucket I mean there's roughly 50",
    "start": "441099",
    "end": "447340"
  },
  {
    "text": "different event events that you can use an AWS to trigger your lambda okay so",
    "start": "447340",
    "end": "452949"
  },
  {
    "text": "that turbos triggers a function and you can run and this is not an exhaustive list you can do node Python Java C sharp",
    "start": "452949",
    "end": "460839"
  },
  {
    "text": "we have a runtime api that allows you to do pretty much anything we've seen COBOL",
    "start": "460839",
    "end": "466779"
  },
  {
    "text": "on there we've seen you know elixir we rust are all kinds of things so a lot of",
    "start": "466779",
    "end": "472690"
  },
  {
    "text": "power here to run the language you want and the lambda then does something okay so event triggers are lambda and the",
    "start": "472690",
    "end": "481089"
  },
  {
    "text": "lambda does something okay very technical right there something-something okay",
    "start": "481089",
    "end": "487240"
  },
  {
    "text": "and so it could be you know you could be you know scale an image that's the ever-popular hello world of lambda we're",
    "start": "487240",
    "end": "492849"
  },
  {
    "text": "gonna scale an image it could be recognizing image it could be translating something like that so",
    "start": "492849",
    "end": "498099"
  },
  {
    "text": "that's kind of the idea of how a service does there's some of our most common use cases that we see not any particular",
    "start": "498099",
    "end": "504279"
  },
  {
    "text": "order but web or mobile backends okay we see file processing again drop something",
    "start": "504279",
    "end": "509740"
  },
  {
    "text": "in a bucket and we do something to it we see queue processing queue processing",
    "start": "509740",
    "end": "514930"
  },
  {
    "text": "means hey I'm gonna use like an sqs I'm gonna stack it up with stuff that I need to happen and lambda we'll do it in",
    "start": "514930",
    "end": "520810"
  },
  {
    "text": "batches for us we can do Ames Kinesis real-time stream processing you",
    "start": "520810",
    "end": "526660"
  },
  {
    "text": "did some crazy stuff with that you can you can attach the land of streams or I'm sorry attached to Kinesis streams with lambda and you can work with that",
    "start": "526660",
    "end": "534070"
  },
  {
    "text": "data in in real-time or near real-time so you can get your very hot data Amazon",
    "start": "534070",
    "end": "539709"
  },
  {
    "text": "SNS notification processing this is where we you'll broadcast out and then",
    "start": "539709",
    "end": "544750"
  },
  {
    "text": "you have Amazon Cloud watch I was talking about this with someone earlier does anybody run a machine that runs",
    "start": "544750",
    "end": "549850"
  },
  {
    "text": "cron jobs okay you're gonna hug me later I'm gonna save your company and you a",
    "start": "549850",
    "end": "555459"
  },
  {
    "text": "billion dollars okay maybe not that's the don't quote me on that come back to AWS and demand a billion dollars but you",
    "start": "555459",
    "end": "562089"
  },
  {
    "text": "can in Amazon you can run an event trigger in cloud watch you could set a time on it's just like cron okay you",
    "start": "562089",
    "end": "568839"
  },
  {
    "text": "have different different options and then you could trigger a lambda and because you have any language of lambda",
    "start": "568839",
    "end": "574449"
  },
  {
    "text": "you can run bash scripts you can repair shell scripts you can do all kinds of things so rather than paying the money",
    "start": "574449",
    "end": "580209"
  },
  {
    "text": "to keep a server up and running to run tasks why not just pay for the individual invokes okay something to",
    "start": "580209",
    "end": "587290"
  },
  {
    "text": "think about alright so let's get into the 12 factor and how it applies so let's explore how the 12 factors apply to service",
    "start": "587290",
    "end": "593620"
  },
  {
    "text": "applications when you look at here they are I'm not gonna read them all to you because we're gonna go through them but",
    "start": "593620",
    "end": "598980"
  },
  {
    "text": "will will kind of jump in here so number one the code base tracked and it could",
    "start": "598980",
    "end": "605890"
  },
  {
    "text": "be should be how's it going one code base tracted revision control many",
    "start": "605890",
    "end": "611140"
  },
  {
    "text": "deploys okay so you should have all code should be stored a revision control this could be something like github very",
    "start": "611140",
    "end": "616959"
  },
  {
    "text": "popular bit bucket code commit still people some uses SPN you know all kinds",
    "start": "616959",
    "end": "624160"
  },
  {
    "text": "of things so but there's a lot of times we get questions on how do i break an application up what where do i put",
    "start": "624160",
    "end": "631240"
  },
  {
    "text": "things and you know do i use a mono repo multi repo is a big debate this is",
    "start": "631240",
    "end": "636880"
  },
  {
    "text": "almost like tabs and tabs and spaces okay mono versus multi repost a best",
    "start": "636880",
    "end": "642850"
  },
  {
    "text": "practice that we look at and we say if events are shared so you have a common api gateway so let's talk about a web",
    "start": "642850",
    "end": "648790"
  },
  {
    "text": "application if those events are shared they they create an their and applications one application right so we",
    "start": "648790",
    "end": "656860"
  },
  {
    "text": "store that in one repository but if the if they otherwise you break them down",
    "start": "656860",
    "end": "662380"
  },
  {
    "text": "okay so so if I've got multiple API gateways or I'm doing separate things that aren't tied together I'm going to",
    "start": "662380",
    "end": "668500"
  },
  {
    "text": "save them off as separate applications and I'm gonna use different repositories",
    "start": "668500",
    "end": "673650"
  },
  {
    "text": "so their supplies the service absinthe at your code is stored in a repository",
    "start": "673650",
    "end": "679680"
  },
  {
    "text": "just like any other deployment - and I can't imagine but if there's anybody in",
    "start": "679680",
    "end": "685960"
  },
  {
    "text": "here not using a repository you're grounded okay I have to tell you because the",
    "start": "685960",
    "end": "692200"
  },
  {
    "text": "reason for a repository number one rollbacks right we want versions we want to be able to pull it back number two early early merging okay so so when I",
    "start": "692200",
    "end": "700930"
  },
  {
    "text": "work with my developers I tell my developers look I need to be committing daily several three four ten twelve",
    "start": "700930",
    "end": "706150"
  },
  {
    "text": "times a day there's always that one developer that that commits every three weeks and he",
    "start": "706150",
    "end": "712360"
  },
  {
    "text": "breaks the whole thing so that guy's grounded - so I really encourage you if",
    "start": "712360",
    "end": "717640"
  },
  {
    "text": "you're not using repository liquid repository it's number two dependencies okay dependency should explicitly",
    "start": "717640",
    "end": "724210"
  },
  {
    "text": "declare Lord being cleared and isolated okay so what this means is a code that",
    "start": "724210",
    "end": "731140"
  },
  {
    "text": "needs to be used by multiple functions to be packaged into its own library don't don't repeat yourself okay that's",
    "start": "731140",
    "end": "737500"
  },
  {
    "text": "a that's the dry method or dry principle okay don't repeat yourself",
    "start": "737500",
    "end": "742540"
  },
  {
    "text": "if you find yourself writing the same function in every lambda don't do that okay",
    "start": "742540",
    "end": "748150"
  },
  {
    "text": "what you want to be able to do is you want to be able to share that library so that you're not repeating yourself okay",
    "start": "748150",
    "end": "754210"
  },
  {
    "text": "so so really what that comes out to you you could you zip files the different you can see the different languages",
    "start": "754210",
    "end": "759400"
  },
  {
    "text": "these are just again just some examples but the best practice that we talk about are lambda layers who's heard of layers",
    "start": "759400",
    "end": "767040"
  },
  {
    "text": "all right okay all right now I could ask that again everybody should raise their hand I'm gonna tell you about layers",
    "start": "767040",
    "end": "772930"
  },
  {
    "text": "right now what layers allow you to do is you can bring you can create your own libraries there's couple things you can",
    "start": "772930",
    "end": "778720"
  },
  {
    "text": "do it that let's I'm a node guy okay I don't apologize for that I am so what I learned I was a front-end guy first so",
    "start": "778720",
    "end": "784840"
  },
  {
    "text": "so with node I can package let's say I use low - a lot which is which is a you know it's a utility",
    "start": "784840",
    "end": "791559"
  },
  {
    "text": "library and I use the AWS SDK so I have a layer that I created that all that's",
    "start": "791559",
    "end": "796720"
  },
  {
    "text": "installed okay and I conversion that so I'm gonna push it up to my AWS and I conversion and I",
    "start": "796720",
    "end": "802720"
  },
  {
    "text": "can share that to either other people or publicly now when I create a new project",
    "start": "802720",
    "end": "808980"
  },
  {
    "text": "instead of me rewriting all those functions that I did and bringing in those layers but I'm sorry bringing in",
    "start": "808980",
    "end": "815199"
  },
  {
    "text": "those libraries I just connect to that layer alright so let me tell you what happens when the lambda is placed the",
    "start": "815199",
    "end": "822970"
  },
  {
    "text": "layer is placed into the execution environment okay so when you create or update the lambda they go and grab the",
    "start": "822970",
    "end": "828759"
  },
  {
    "text": "layer based on your version and they put it in the environment and then even if that layer is deleted by the by the",
    "start": "828759",
    "end": "835559"
  },
  {
    "text": "producer it's still in your lambda okay so you look at that go well what about",
    "start": "835559",
    "end": "840610"
  },
  {
    "text": "locally what if I'm developing locally well if you're using same local it also brings down that layer and it's just as",
    "start": "840610",
    "end": "846759"
  },
  {
    "text": "if you were using it just as if the library existed on your machine so don't",
    "start": "846759",
    "end": "852069"
  },
  {
    "text": "don't repeat yourself ok so again using lambda layers kind of what I just",
    "start": "852069",
    "end": "858249"
  },
  {
    "text": "explained on how it works they're immutable when a versus deleted it doesn't hurt you or the permissions are",
    "start": "858249",
    "end": "863860"
  },
  {
    "text": "done until the next time you try to install it okay so there may be a reason",
    "start": "863860",
    "end": "869019"
  },
  {
    "text": "why that why the Creator deleted it so when that versions gone then you can't",
    "start": "869019",
    "end": "874179"
  },
  {
    "text": "next time you update or create it or create anyone you'll have to update the version or change that out alright so",
    "start": "874179",
    "end": "881199"
  },
  {
    "text": "number three config okay well we're talking fig we talked about things like",
    "start": "881199",
    "end": "886660"
  },
  {
    "text": "you know what is the configuration of our application what is these you know what are the parameters that we need",
    "start": "886660",
    "end": "893230"
  },
  {
    "text": "what are the database passwords what are the you know the the API endpoints for",
    "start": "893230",
    "end": "899290"
  },
  {
    "text": "some different services that we need scuse me so these configs shouldn't they should",
    "start": "899290",
    "end": "907929"
  },
  {
    "text": "be stored in the environment that's the 12 factor declaration they're stored in the environment don't store them in your",
    "start": "907929",
    "end": "914019"
  },
  {
    "text": "app ok one it's hard to maintain to you there's a chance for your puts into a repository you push a password there",
    "start": "914019",
    "end": "920529"
  },
  {
    "text": "that's always fun I always like being that guy do you know you push your password to the yeah I know there's intentional is a",
    "start": "920529",
    "end": "927400"
  },
  {
    "text": "test okay you passed you get to keep your job go ahead and forget that and",
    "start": "927400",
    "end": "933520"
  },
  {
    "text": "let's roll that back so with serverless apps there's a lot of ways to do this okay AWS has a lot of",
    "start": "933520",
    "end": "941410"
  },
  {
    "text": "ways to store secrets okay there's lamda environment variables okay you can do these are key valuable key",
    "start": "941410",
    "end": "947410"
  },
  {
    "text": "value pairs available via standard environment variables you can push them with your same templates or with your CloudFormation templates this supports",
    "start": "947410",
    "end": "954670"
  },
  {
    "text": "kms encryption which is your key management service there's api gateway stages so this can",
    "start": "954670",
    "end": "960190"
  },
  {
    "text": "be done so if you're using api gateway in front of a lambda you can actually have your parameters there so based on a different stage that you use them may be",
    "start": "960190",
    "end": "966490"
  },
  {
    "text": "a you know version 1 of version 2 you can change those who pass it in and finally there's the ada be a Systems",
    "start": "966490",
    "end": "972550"
  },
  {
    "text": "Manager parameter store and this is probably one of my favorites because the way the system manager works is",
    "start": "972550",
    "end": "978970"
  },
  {
    "text": "centralized store to manage your configuration data and it's a count specific ok where this gets really",
    "start": "978970",
    "end": "984670"
  },
  {
    "text": "helpful is when I when I have when I set up an environment let's say I have 20 developers ok I'm gonna be set up",
    "start": "984670",
    "end": "992860"
  },
  {
    "text": "probably 23 accounts okay I'm gonna have a developer account for every one of my",
    "start": "992860",
    "end": "998080"
  },
  {
    "text": "developers they don't have to share and parameter ties and things like that and then I'm gonna have a an account for",
    "start": "998080",
    "end": "1003950"
  },
  {
    "text": "for let's say alpha and account for beta and account for production ok however",
    "start": "1003950",
    "end": "1010050"
  },
  {
    "text": "you want to do that so what you I'm able to do is I'm able to store account specific like developer",
    "start": "1010050",
    "end": "1015600"
  },
  {
    "text": "specific stuff is stored in their parameter store then the ones needed for the for alpha are stored in the Alpha",
    "start": "1015600",
    "end": "1022290"
  },
  {
    "text": "account and so on and so forth see what I'm driving at so as I move my code through there's might as my developers",
    "start": "1022290",
    "end": "1028020"
  },
  {
    "text": "are pushing code into the repository and I'm using a CI CD which was talked about in last session",
    "start": "1028020",
    "end": "1033780"
  },
  {
    "text": "if I'm using a CI CD they're grabbing those new parameters and it's always relevant to the environment so it's a",
    "start": "1033780",
    "end": "1040079"
  },
  {
    "text": "great way to store these they can be encrypted you have a lot of permission control around them using I am so great",
    "start": "1040080",
    "end": "1046020"
  },
  {
    "text": "way to do it library you can also grab so you can grab these from the templates those can",
    "start": "1046020",
    "end": "1051330"
  },
  {
    "text": "pull em in but you can also grab parameters right from the code using the the SDKs this is an example of",
    "start": "1051330",
    "end": "1056850"
  },
  {
    "text": "fun I think I don't do Python so that's not sure how you do a little Python if if I'm the last guy in the world I'd",
    "start": "1056850",
    "end": "1063870"
  },
  {
    "text": "probably still look for someone else but I can't do Python if you need it so alright let's move on so the fourth",
    "start": "1063870",
    "end": "1070410"
  },
  {
    "text": "we're going to talk about is backing services okay when we talk about backing services we're talking about things like",
    "start": "1070410",
    "end": "1076679"
  },
  {
    "text": "in our database our cueing system are you know different things like this so",
    "start": "1076679",
    "end": "1081929"
  },
  {
    "text": "they should be treated as attached resources they shouldn't be they love me",
    "start": "1081929",
    "end": "1087240"
  },
  {
    "text": "they shouldn't be written into the application okay all right so in service",
    "start": "1087240",
    "end": "1093990"
  },
  {
    "text": "apps this is no different okay resources that AWS lambda functions connect to such as databases should have their own",
    "start": "1093990",
    "end": "1100080"
  },
  {
    "text": "endpoints and that's that's always service works as we talk through endpoints most the time okay and so",
    "start": "1100080",
    "end": "1105750"
  },
  {
    "text": "treat those as separate applications and treat them as attached resources all",
    "start": "1105750",
    "end": "1112289"
  },
  {
    "text": "right number five it was always fun to Marco",
    "start": "1112289",
    "end": "1118020"
  },
  {
    "text": "Polo Marco it's quick there is I like that someone's on what someone's awake",
    "start": "1118020",
    "end": "1124020"
  },
  {
    "text": "okay all right so build release and run strictly separate build and run stages",
    "start": "1124020",
    "end": "1130320"
  },
  {
    "text": "build release and run stages okay so what this is talking about is I've got",
    "start": "1130320",
    "end": "1136289"
  },
  {
    "text": "I've got a process okay and this is this is no different service okay we use tools like code build and code pipeline",
    "start": "1136289",
    "end": "1143220"
  },
  {
    "text": "to make this happen but what we're talking about is my build process should create an artifact okay my release",
    "start": "1143220",
    "end": "1151049"
  },
  {
    "text": "process should grab that artifact and hand it to my run process okay and those",
    "start": "1151049",
    "end": "1157200"
  },
  {
    "text": "should have strict lines between them okay I shouldn't be changing code in my",
    "start": "1157200",
    "end": "1162360"
  },
  {
    "text": "release process okay does that just let's go back to that new guy who comes in well where is this change oh that's",
    "start": "1162360",
    "end": "1168929"
  },
  {
    "text": "in the release process well that makes sense not at all okay so you want to",
    "start": "1168929",
    "end": "1174900"
  },
  {
    "text": "break these down on how they're gonna work and so when we when we do this and we even you know you can even get very",
    "start": "1174900",
    "end": "1181350"
  },
  {
    "text": "granular and you can also you know okay I have my build process I have my test",
    "start": "1181350",
    "end": "1186600"
  },
  {
    "text": "process and those could be depending on the order if you're compiling however you do a lot of different dinner I have my",
    "start": "1186600",
    "end": "1192509"
  },
  {
    "text": "release or my my yeah my release process of my run process so we use inside of",
    "start": "1192509",
    "end": "1197659"
  },
  {
    "text": "the build code build we have ways to handle this okay so this is an example",
    "start": "1197659",
    "end": "1204059"
  },
  {
    "text": "of code build anybody using code build right now all right okay I really encourage you to like a code build code",
    "start": "1204059",
    "end": "1210539"
  },
  {
    "text": "builds very powerful and and I've always said if you could do it in the terminal you can do it in code build because how",
    "start": "1210539",
    "end": "1216450"
  },
  {
    "text": "it works is and it's it's a really simple idea in that it brings up a container and it runs the commands you",
    "start": "1216450",
    "end": "1222179"
  },
  {
    "text": "give it so if you're running kind mean when as developers you know we're you know in a npm run tests you know or you",
    "start": "1222179",
    "end": "1229049"
  },
  {
    "text": "know whatever language you choose to use so we can do that in the terminal on the build run code build to the build spec",
    "start": "1229049",
    "end": "1235619"
  },
  {
    "text": "file so this kind of gives an idea how this works and say and you could pass your pass variables in examples of what you can do",
    "start": "1235619",
    "end": "1242909"
  },
  {
    "text": "there's different phases there's an install a pre build a build at a post build and then it generates your",
    "start": "1242909",
    "end": "1247950"
  },
  {
    "text": "artifacts okay you can test here if you want or you can bring up code build",
    "start": "1247950",
    "end": "1253019"
  },
  {
    "text": "again and run tests against the artifacts that are passed from the previous one it's up to you but you have",
    "start": "1253019",
    "end": "1258480"
  },
  {
    "text": "a lot of ability to break that down so when you build an example of a so it",
    "start": "1258480",
    "end": "1263580"
  },
  {
    "text": "when you working with code build and you build these pipelines here's an example of a minimal developers pipeline okay so",
    "start": "1263580",
    "end": "1269610"
  },
  {
    "text": "what would happen in in this process that we're talking about is you would commit code into your code commits our",
    "start": "1269610",
    "end": "1275850"
  },
  {
    "text": "example here it would get triggered and it would test and test and build the",
    "start": "1275850",
    "end": "1281220"
  },
  {
    "text": "source okay so and this we're kind of combining it all it then passes it over to the deploy okay so we're running",
    "start": "1281220",
    "end": "1288389"
  },
  {
    "text": "cloud formation because we're running service here we're running cloud formation and what it's gonna do is it's gonna create a",
    "start": "1288389",
    "end": "1293970"
  },
  {
    "text": "change set because we always want to check our work first right it's just smart okay so we create a change set and",
    "start": "1293970",
    "end": "1299490"
  },
  {
    "text": "say hey does this look valid yep that looks valid then we do an execute change",
    "start": "1299490",
    "end": "1305279"
  },
  {
    "text": "set we make that change and we can run stubs on this we can do and we won't go",
    "start": "1305279",
    "end": "1310619"
  },
  {
    "text": "into this but you can do with lambda you can run pre and post hooks for lambda so",
    "start": "1310619",
    "end": "1315809"
  },
  {
    "text": "when you bring up your new code you can say hey use another lambda to check this lambda is it working great release it",
    "start": "1315809",
    "end": "1321570"
  },
  {
    "text": "and now that it's released check it after we're Oh nope it's not working all right roll",
    "start": "1321570",
    "end": "1326760"
  },
  {
    "text": "it back a lot of power that can be done here okay all right so when you get a",
    "start": "1326760",
    "end": "1331890"
  },
  {
    "text": "little more complicated this is a production pipeline right so this carries it out so the same thing you",
    "start": "1331890",
    "end": "1338280"
  },
  {
    "text": "know we commit our code we do our build we go to our deploying testing which we saw in the earlier one",
    "start": "1338280",
    "end": "1343380"
  },
  {
    "text": "then it deploys to staging okay now these are different variables different environment stuff because one we be the",
    "start": "1343380",
    "end": "1350610"
  },
  {
    "text": "done it in parameter store so we can grab it there or two we have stage variables at the at the this particular",
    "start": "1350610",
    "end": "1356900"
  },
  {
    "text": "setup okay same thing we run the API test looks no different except for do",
    "start": "1356900",
    "end": "1363120"
  },
  {
    "text": "y'all see right at the bottom of this the second column it says QA sign-off okay you could put a manual sign-off in",
    "start": "1363120",
    "end": "1369960"
  },
  {
    "text": "a pipeline very cool so what this does this emails our text someone and says hey this is out there take a look they",
    "start": "1369960",
    "end": "1377700"
  },
  {
    "text": "go look at it so the eyes on screen you're always one eyes on screen right they go okay then they can push that",
    "start": "1377700",
    "end": "1383730"
  },
  {
    "text": "button or when they do the review they can click and it'll actually continue the process so a lot of power here that",
    "start": "1383730",
    "end": "1390840"
  },
  {
    "text": "you can do so again break those processes out all right so now we're",
    "start": "1390840",
    "end": "1396630"
  },
  {
    "text": "gonna talk about process okay we just talked about process bore in so this is a little more literal when we talk about",
    "start": "1396630",
    "end": "1401780"
  },
  {
    "text": "application processes okay so execute the app as one or more stateless",
    "start": "1401780",
    "end": "1407880"
  },
  {
    "text": "processes how many y'all are still working in stateful applications okay",
    "start": "1407880",
    "end": "1413400"
  },
  {
    "text": "good how many I'll work with stateless applications all right get him out good good good good good I encourage you to",
    "start": "1413400",
    "end": "1419640"
  },
  {
    "text": "start looking at that because that's that's lot of times where you lose data is when things crash things like that happen and and it make them hard to",
    "start": "1419640",
    "end": "1425640"
  },
  {
    "text": "scale out but the idea here is to do stateless processes okay and this is inherent on how lambda is designed",
    "start": "1425640",
    "end": "1432300"
  },
  {
    "text": "already so we there already so lambdas should be treated as stateless there's no place in blame to the stored data",
    "start": "1432300",
    "end": "1438840"
  },
  {
    "text": "okay and that's there's an intent on that so you don't want to write it because that lambda is ephemeral okay",
    "start": "1438840",
    "end": "1445380"
  },
  {
    "text": "it's gonna be gone before you know it so they're treated stateless there's no promise of execution environment reuse",
    "start": "1445380",
    "end": "1451830"
  },
  {
    "text": "so I just said when the lambda swarm is a good chance it's gonna be reused okay",
    "start": "1451830",
    "end": "1456930"
  },
  {
    "text": "but it's not promise of it depends on if you know if it goes away you know timing move to the",
    "start": "1456930",
    "end": "1462360"
  },
  {
    "text": "Machine different things like that alright the day that needs to be kept should be stored off lambda and staple",
    "start": "1462360",
    "end": "1467370"
  },
  {
    "text": "services such as dynamodb caching to you there's different things you can do that so that's definitely again that's an",
    "start": "1467370",
    "end": "1475050"
  },
  {
    "text": "inherent thing in service so we meet that meet that declaration port binding",
    "start": "1475050",
    "end": "1484490"
  },
  {
    "text": "so export services via port binding have you ever seen this if you've run like PHP you might you might roll it off to",
    "start": "1486260",
    "end": "1493950"
  },
  {
    "text": "like Apache on a different port different things like that okay well this doesn't really apply in",
    "start": "1493950",
    "end": "1501000"
  },
  {
    "text": "lambda because it's done I'll just read",
    "start": "1501000",
    "end": "1506550"
  },
  {
    "text": "the certain doesn't apply the same D to a difference in how lambda functions are access okay we're gonna talk about how",
    "start": "1506550",
    "end": "1511710"
  },
  {
    "text": "their access basically instead of a port lambda functions are invoked V or one or more triggering services okay and like",
    "start": "1511710",
    "end": "1518070"
  },
  {
    "text": "we talked about if I drop something in a bucket it's gonna get triggered okay so we're not looking at we're not really routing ports anymore it's just kind of",
    "start": "1518070",
    "end": "1524730"
  },
  {
    "text": "one endpoint all the time so let me show you how that works so whenever a service calls a peter",
    "start": "1524730",
    "end": "1530520"
  },
  {
    "text": "calls lambda it invokes the lambda API okay so the lambda API is a synchronous",
    "start": "1530520",
    "end": "1536640"
  },
  {
    "text": "call well sports sink an async but it's used by all the other services okay so",
    "start": "1536640",
    "end": "1542400"
  },
  {
    "text": "that's how the lambdas talk to it's an endpoint okay so it's not a different port we don't have to write different",
    "start": "1542400",
    "end": "1547410"
  },
  {
    "text": "ones we don't have to worry about scaling these up or anything like that or you don't have to we handle that for",
    "start": "1547410",
    "end": "1553230"
  },
  {
    "text": "you so what that comes out to when you look at the lambda execution model there's several different ways that'll",
    "start": "1553230",
    "end": "1558660"
  },
  {
    "text": "work all of them use the invoke okay like we just looked at but in the first one we have a synchronous call which is",
    "start": "1558660",
    "end": "1565020"
  },
  {
    "text": "like something like an Amazon API gateway you make autumns on the API gateway it makes a synchronous call our",
    "start": "1565020",
    "end": "1571500"
  },
  {
    "text": "invoke of the lambda gets a response response to the user okay an asynchronous advantage something like an",
    "start": "1571500",
    "end": "1577320"
  },
  {
    "text": "S & S or an s3 or sqs or different things like that where then this is this",
    "start": "1577320",
    "end": "1582660"
  },
  {
    "text": "is when you're looking at service patterns and this isn't really service pattern talk but when you when you talking about that you really should be",
    "start": "1582660",
    "end": "1589110"
  },
  {
    "text": "looking at how can I stop my user from waiting how can I say we want them to be able to",
    "start": "1589110",
    "end": "1595050"
  },
  {
    "text": "move on while I take care of the work so I'm gonna do asynchronous call so I'm gonna push stuff to an S&S ok S&S will",
    "start": "1595050",
    "end": "1601710"
  },
  {
    "text": "trigger my land but it'll do the work then we'll get back to the user ok so these are very asynchronous type calls pull based is another way it works",
    "start": "1601710",
    "end": "1608610"
  },
  {
    "text": "now again it still uses the API lame to Gateway but the API and the lame the service handles this for you so what I'm",
    "start": "1608610",
    "end": "1614610"
  },
  {
    "text": "using pull based stuff like DynamoDB and this would be like the streams coming off of DynamoDB in Amazon Kinesis as",
    "start": "1614610",
    "end": "1621860"
  },
  {
    "text": "changes happen AWS lamda service pulls the land before you you can set batches",
    "start": "1621860",
    "end": "1627900"
  },
  {
    "text": "things like that and then it does the work ok so again another pattern is rather than having to write to dynamo",
    "start": "1627900",
    "end": "1633240"
  },
  {
    "text": "and get the data back do something else do something else I can write to dynamo and then trigger something off the",
    "start": "1633240",
    "end": "1638760"
  },
  {
    "text": "stream on the back side while my customer was able to move on until we get back to them alright so again",
    "start": "1638760",
    "end": "1645630"
  },
  {
    "text": "talking about how processes work this is how it works in service so actually",
    "start": "1645630",
    "end": "1651630"
  },
  {
    "text": "we're gonna talk about is concurrency concurrency is always fun to talk about how you know how fast how much can I",
    "start": "1651630",
    "end": "1658020"
  },
  {
    "text": "handle right so scale out via the process model so what what the 12",
    "start": "1658020",
    "end": "1663090"
  },
  {
    "text": "factors saying is your process you should be able to add more right and and build up okay so this doesn't apply to",
    "start": "1663090",
    "end": "1668760"
  },
  {
    "text": "lambda okay as lambda functions will scale automatically based on load so as you get more traffic will handle more",
    "start": "1668760",
    "end": "1675570"
  },
  {
    "text": "load we've got the stuff out there to handle these spikes okay that are going on okay you can fork threads inside your",
    "start": "1675570",
    "end": "1682500"
  },
  {
    "text": "function execution but there are practical limits to do to you know memory and CPU network and we'll talk",
    "start": "1682500",
    "end": "1688800"
  },
  {
    "text": "about that here so you could tweak your function to deal with the functions on",
    "start": "1688800",
    "end": "1697200"
  },
  {
    "text": "the computer power okay so so like a lambda exposes only a memory control there's two knobs you or there's one",
    "start": "1697200",
    "end": "1702480"
  },
  {
    "text": "knob you work with I'm sorry lambda exposes memory control and that that directly affects the amount of CPU have",
    "start": "1702480",
    "end": "1708630"
  },
  {
    "text": "more memory more CPU okay is your code CPU network or memory bound if so it",
    "start": "1708630",
    "end": "1714570"
  },
  {
    "text": "could be cheaper to use more memory okay if they say an aircar are you crazy because we charge you know on how much",
    "start": "1714570",
    "end": "1722040"
  },
  {
    "text": "memory use actually yes take a look at this okay now the first thing I'll point out is I know that that color down there where it",
    "start": "1722040",
    "end": "1728430"
  },
  {
    "text": "says red I realize that's not red okay so pretend when I say red it's blue I'm",
    "start": "1728430",
    "end": "1733740"
  },
  {
    "text": "not even gonna tell you why okay we'll just say I made a mistake it was a",
    "start": "1733740",
    "end": "1739710"
  },
  {
    "text": "mistake okay so when you look at so let's take a lead our example all right we've a we have stats for a lambda",
    "start": "1739710",
    "end": "1746490"
  },
  {
    "text": "function that calculates a thousand times all prime numbers okay less than",
    "start": "1746490",
    "end": "1752040"
  },
  {
    "text": "or equal to 1 million okay 1 million all right so at 128 megabyte its eleven",
    "start": "1752040",
    "end": "1758340"
  },
  {
    "text": "point seven seconds in Casas 0.024 okay remember that's red and red is bad okay",
    "start": "1758340",
    "end": "1764760"
  },
  {
    "text": "someone in the back that's not red it is red okay it's any number I say any color I say okay at 256 we you know we get a",
    "start": "1764760",
    "end": "1772590"
  },
  {
    "text": "little better but look at the 1024 one point four six seconds all right so one",
    "start": "1772590",
    "end": "1778500"
  },
  {
    "text": "tenth the speed right or your window it's much faster I'm lousy with numbers",
    "start": "1778500",
    "end": "1784140"
  },
  {
    "text": "I only got two two in math um alrighty you sure like that's rude okay so one",
    "start": "1784140",
    "end": "1791970"
  },
  {
    "text": "point four seconds much faster right but look at the price point oh two four six",
    "start": "1791970",
    "end": "1798720"
  },
  {
    "text": "two and then it's beyond what I would count and care about all right so your price is almost exact you're much faster",
    "start": "1798720",
    "end": "1804720"
  },
  {
    "text": "because you raised your memory okay so understanding your application and how it performs is critical",
    "start": "1804720",
    "end": "1810780"
  },
  {
    "text": "alright and and the cool thing about lambda is you can test it almost free",
    "start": "1810780",
    "end": "1816210"
  },
  {
    "text": "which is if you did I don't know if you know but the first million invokes are free and that's not pretty that's per",
    "start": "1816210",
    "end": "1822420"
  },
  {
    "text": "month and that's not just for the first year and free tier that's always okay so",
    "start": "1822420",
    "end": "1828270"
  },
  {
    "text": "lambda is a great way to start up to prototype to proof of concept just try it hey I wonder if this works just try it",
    "start": "1828270",
    "end": "1834690"
  },
  {
    "text": "spin it up okay all right so as you can see we did the math here - ten seconds",
    "start": "1834690",
    "end": "1843290"
  },
  {
    "text": "all right disposability so what this means is maximize robustus with fast",
    "start": "1843290",
    "end": "1849720"
  },
  {
    "text": "startup and graceful shutdown okay so when you're scaling and you want to be",
    "start": "1849720",
    "end": "1854850"
  },
  {
    "text": "efficient your app needs to start fast and it needs to be fast okay right",
    "start": "1854850",
    "end": "1861660"
  },
  {
    "text": "that's I mean we spend half our time optimizing your code how much better can we make this now the interesting thing",
    "start": "1861660",
    "end": "1867120"
  },
  {
    "text": "shutdown doesn't apply here okay cuz you're not gonna shut your lambda stand you're not gonna worry about that however speed does matter okay so how",
    "start": "1867120",
    "end": "1876480"
  },
  {
    "text": "fast can your lambic come up and we look at things like package size the language used are you in the V PC or not and in",
    "start": "1876480",
    "end": "1883650"
  },
  {
    "text": "pre handler code calls different things like that so there's different things that affect how you're going to speed this up so so there's a couple of things",
    "start": "1883650",
    "end": "1890460"
  },
  {
    "text": "you can do on lambda to help you figure it out okay one of the things is called",
    "start": "1890460",
    "end": "1895590"
  },
  {
    "text": "x-ray anybody use an x-ray alright anybody had an x-ray no that's personal",
    "start": "1895590",
    "end": "1900900"
  },
  {
    "text": "don't answer that all right so x-ray what it does it has a global view across all your services and",
    "start": "1900900",
    "end": "1907860"
  },
  {
    "text": "allows you to find the bottlenecks okay it allows you to see why is this call",
    "start": "1907860",
    "end": "1914400"
  },
  {
    "text": "taking so long why is this service taking a while to respond and so you're able to track that and start working",
    "start": "1914400",
    "end": "1920160"
  },
  {
    "text": "through the code okay start fixing your architecture application so you get a trace so when you when you add this it's",
    "start": "1920160",
    "end": "1927210"
  },
  {
    "text": "very powerful you can you can API gateway inserts of tracing header and HP and so it tracks it there lambda",
    "start": "1927210",
    "end": "1933300"
  },
  {
    "text": "instruments it's already added on lambda but you can actually talk to x-ray from within your code so you can wrap your",
    "start": "1933300",
    "end": "1940350"
  },
  {
    "text": "library and say anytime you call out I want you to do a trace on it so I can",
    "start": "1940350",
    "end": "1945390"
  },
  {
    "text": "say hey this called a DynamoDB is horrible I wonder why while you're scanning a million insert database every",
    "start": "1945390",
    "end": "1951660"
  },
  {
    "text": "time you call it that's bad okay let's look at doing get item instead of scan",
    "start": "1951660",
    "end": "1957990"
  },
  {
    "text": "all right or having secondary indexes hold another session all right so it's",
    "start": "1957990",
    "end": "1963390"
  },
  {
    "text": "what when you look at an x-ray this is what a trace example looks like okay and so what you're able to do is say okay",
    "start": "1963390",
    "end": "1969570"
  },
  {
    "text": "what am I seeing you know what what's going on you know in this example and it",
    "start": "1969570",
    "end": "1975390"
  },
  {
    "text": "kind of breaks it down into the different things you can see down here under s3 we've got an error or very",
    "start": "1975390",
    "end": "1981520"
  },
  {
    "text": "a large latency so it gives you some idea of how that's gonna work all right",
    "start": "1981520",
    "end": "1988690"
  },
  {
    "text": "so dev prod parody this is number 10",
    "start": "1988690",
    "end": "1993629"
  },
  {
    "text": "so what twelve factor says is keep development staging and production as similar as possible I said we come back",
    "start": "1994380",
    "end": "2001770"
  },
  {
    "text": "to this man that is the biggest pet peeve of mine okay that drives me nuts",
    "start": "2001770",
    "end": "2007410"
  },
  {
    "text": "oh yeah in in production we only run two mega RAM that's problematic okay it",
    "start": "2007410",
    "end": "2015000"
  },
  {
    "text": "should look like at least I understand that your development and your staging may not be identical but your staging",
    "start": "2015000",
    "end": "2021809"
  },
  {
    "text": "and production should a lot of times we said well yeah but we're running the same architecture we're running the same",
    "start": "2021809",
    "end": "2027450"
  },
  {
    "text": "you know processors we're running the same this with that but what we don't account for is load on those things that",
    "start": "2027450",
    "end": "2036420"
  },
  {
    "text": "can affect our app and timeouts different things like that okay so when we're talking environments we",
    "start": "2036420",
    "end": "2043559"
  },
  {
    "text": "want parity between them okay so service apps this can be made incredibly easy",
    "start": "2043559",
    "end": "2048810"
  },
  {
    "text": "with service applications by making use of the stage variables we talked about a parameter store okay using the service",
    "start": "2048810",
    "end": "2055590"
  },
  {
    "text": "application model Sam okay and have you see our CD process and tooling that",
    "start": "2055590",
    "end": "2060628"
  },
  {
    "text": "supports multiple environments okay so service is very easy to do CI CD on it's",
    "start": "2060629",
    "end": "2066540"
  },
  {
    "text": "very easy to have matching environments okay let me introduce you to see them",
    "start": "2066540",
    "end": "2071730"
  },
  {
    "text": "anybody met Sam before all right that's the most exciting part I know Sam okay",
    "start": "2071730",
    "end": "2078030"
  },
  {
    "text": "so Sam is the service application model and this is our undyed on't think it's",
    "start": "2078030",
    "end": "2083638"
  },
  {
    "text": "official but it is official our mascot is a squirrel I feel tough right now okay so so this",
    "start": "2083639",
    "end": "2091590"
  },
  {
    "text": "is our mascot so let me tell you about Sam on what it does okay Sam again is the a to be a service application model and there's several things that are",
    "start": "2091590",
    "end": "2097770"
  },
  {
    "text": "included with this the first one to talk about is the the CloudFormation template",
    "start": "2097770",
    "end": "2103109"
  },
  {
    "text": "so Kay the Sam templates which are CloudFormation templates okay so the cool thing about this is it's it's a",
    "start": "2103109",
    "end": "2108480"
  },
  {
    "text": "CloudFormation extension optimized for service so when I do like a service function I can build a service function",
    "start": "2108480",
    "end": "2115200"
  },
  {
    "text": "maybe six lines whereas in CloudFormation it's 96 lots it can be",
    "start": "2115200",
    "end": "2120930"
  },
  {
    "text": "kind of painful sometimes right so I'm able to build those very quick dynamodb table two lines and then matter you can",
    "start": "2120930",
    "end": "2128579"
  },
  {
    "text": "do that minimum right so it supports anything conformation so you could literally say look I'm not dealing with",
    "start": "2128579",
    "end": "2134040"
  },
  {
    "text": "service but I like sand so I'm gonna do that anywhere or I have a hybrid so you can bring those in it's open",
    "start": "2134040",
    "end": "2139829"
  },
  {
    "text": "specification you can see the website here so let's look at what that looks like so you have a template this is",
    "start": "2139829",
    "end": "2146579"
  },
  {
    "text": "creating a function okay and the meeting let me tell you what what this means okay so the first thing you have",
    "start": "2146579",
    "end": "2152190"
  },
  {
    "text": "actually them together next slide here we've pointed out for us so the first thing you have on top is it tells CloudFormation hey this is a transform",
    "start": "2152190",
    "end": "2159000"
  },
  {
    "text": "this isn't standard CloudFormation until you run the transform on it okay the second thing is in our resources this is",
    "start": "2159000",
    "end": "2165810"
  },
  {
    "text": "a function now this is doing several things we're declaring what it is we're",
    "start": "2165810",
    "end": "2171060"
  },
  {
    "text": "telling where it's where it's located and this instance can be in an s3 bucket we're gonna say the handler what should",
    "start": "2171060",
    "end": "2177450"
  },
  {
    "text": "I fire or what should I invoke when this function is called and that'll be a function under the file called index and",
    "start": "2177450",
    "end": "2184680"
  },
  {
    "text": "a function called get HTML this is no js' 6-10 which is not even available",
    "start": "2184680",
    "end": "2189690"
  },
  {
    "text": "anymore need to update my slides okay we need to change colors and update the domain got it all right someone write",
    "start": "2189690",
    "end": "2195630"
  },
  {
    "text": "that down anybody okay all right policies these are Amazon manage",
    "start": "2195630",
    "end": "2201329"
  },
  {
    "text": "policies you can do your own but these are very helpful so for instance this one we're doing Amazon DynamoDB",
    "start": "2201329",
    "end": "2206790"
  },
  {
    "text": "read-only access what you're not seeing here that I need to add is you can also",
    "start": "2206790",
    "end": "2211859"
  },
  {
    "text": "declare which table so if I had a table I'm building down lower I could pass that table name through a reference so I",
    "start": "2211859",
    "end": "2218400"
  },
  {
    "text": "don't have to name that table I just passed our reference to the logical ID and it will granularly set that",
    "start": "2218400",
    "end": "2224420"
  },
  {
    "text": "permissions okay really important when you're setting permissions is very easily you can get silly granular in Sam",
    "start": "2224420",
    "end": "2232020"
  },
  {
    "text": "okay so always do the least amount of access okay and so this would say only",
    "start": "2232020",
    "end": "2237540"
  },
  {
    "text": "this table okay then the last thing we have is what event is gonna trigger this lambda okay and so with this I'm using",
    "start": "2237540",
    "end": "2244950"
  },
  {
    "text": "an API and I'm telling it the path now this is a pro see and so this is this is a it's a",
    "start": "2244950",
    "end": "2250180"
  },
  {
    "text": "greedy so I could say hey anything past past the route I want you to trigger this lambda and then we'll handle",
    "start": "2250180",
    "end": "2255730"
  },
  {
    "text": "everything anything and then any method now I could say this could be users and",
    "start": "2255730",
    "end": "2260860"
  },
  {
    "text": "post okay so I could say one lambda for post one name to forget one lambda for put you",
    "start": "2260860",
    "end": "2267160"
  },
  {
    "text": "may or may not do that but you can get really granular and when we're building out lambdas we want to make sure that",
    "start": "2267160",
    "end": "2273340"
  },
  {
    "text": "we're building in a way that we keep it very simple and we don't repeat ourselves okay I really believe in the",
    "start": "2273340",
    "end": "2279460"
  },
  {
    "text": "single responsibility model when we're building lambdas for the lambdas they should do one thing and do it really",
    "start": "2279460",
    "end": "2284680"
  },
  {
    "text": "really well okay so and then the last thing I do have a table here the last",
    "start": "2284680",
    "end": "2289690"
  },
  {
    "text": "thing is a list table so I could actually ref this list table so I put bang ref and the list table and it would",
    "start": "2289690",
    "end": "2295960"
  },
  {
    "text": "only tie the permissions in to this table so what that enables is this okay",
    "start": "2295960",
    "end": "2304000"
  },
  {
    "text": "and that's kind of ugly cuz it's not dark and laid out but this picture becomes this this is kind of a diagram",
    "start": "2304000",
    "end": "2309700"
  },
  {
    "text": "of what it looks like in the cloud formation designer so so the second part",
    "start": "2309700",
    "end": "2315310"
  },
  {
    "text": "of this is and this is this is where it really gets powerful to is the command",
    "start": "2315310",
    "end": "2320860"
  },
  {
    "text": "line okay so this is something you install locally on your machine and it allows you to build service applications",
    "start": "2320860",
    "end": "2328360"
  },
  {
    "text": "and test locally okay now I get a lot of questions on that okay and and this goes",
    "start": "2328360",
    "end": "2334480"
  },
  {
    "text": "back to the 12 factor on how are we testing and the parody of our environments okay so what I encourage is",
    "start": "2334480",
    "end": "2342640"
  },
  {
    "text": "Sam local and in any kind of enforces best practices the way it's built is the only thing that's going to replicate",
    "start": "2342640",
    "end": "2348340"
  },
  {
    "text": "locally at the moment at least or the API gateway and the lambda so I can",
    "start": "2348340",
    "end": "2353530"
  },
  {
    "text": "actually type Sam local start API and it'll bring up a full API with any of",
    "start": "2353530",
    "end": "2361180"
  },
  {
    "text": "the lambda functions in there with endpoints okay so what you're then able to do is locally you can hit this API",
    "start": "2361180",
    "end": "2368140"
  },
  {
    "text": "it'll be you know local host 3,000 something like that and test against that okay so quick iterations and as you",
    "start": "2368140",
    "end": "2375130"
  },
  {
    "text": "change your lambda code you don't need to restart it it's automatically going to invoke the newest okay so quick",
    "start": "2375130",
    "end": "2381460"
  },
  {
    "text": "generations against to make sure it's working once it's done then I push it okay I commit it to my",
    "start": "2381460",
    "end": "2388570"
  },
  {
    "text": "repo and that repo will build it out in my development or alpha or whatever",
    "start": "2388570",
    "end": "2394150"
  },
  {
    "text": "whatever your tool chain does okay so Sam local gives you a lot of power you",
    "start": "2394150",
    "end": "2400090"
  },
  {
    "text": "can you can get logs it does a proxy style API gateway open surah Bruns a",
    "start": "2400090",
    "end": "2406060"
  },
  {
    "text": "docker lambda that's open source they can tail production logs so you can look at you say give me my logs you know from",
    "start": "2406060",
    "end": "2411940"
  },
  {
    "text": "from this and it should help you build a native dependencies built in native dependencies one of the things it has in",
    "start": "2411940",
    "end": "2417730"
  },
  {
    "text": "this is there's think I'm Sam build and so it will take your application and crunch it down very small so so you're",
    "start": "2417730",
    "end": "2425230"
  },
  {
    "text": "getting some of the smallest applications you can get it gets rid of stuff you're not using for testing gets right you can add ignore files for it a",
    "start": "2425230",
    "end": "2431770"
  },
  {
    "text": "lot of power there the other thing you can deploy you can do you can deploy",
    "start": "2431770",
    "end": "2437830"
  },
  {
    "text": "your Sam if you're not using the CI CD you can do a pata build package and deploy which that builds it out to the",
    "start": "2437830",
    "end": "2444820"
  },
  {
    "text": "smallest it packages it and puts it up in a folder in the zip and outputs a new template that tells deploy to work with",
    "start": "2444820",
    "end": "2451510"
  },
  {
    "text": "and then you deploy your your code so you can deploy right from Sam it's very easy when you're doing local development",
    "start": "2451510",
    "end": "2458560"
  },
  {
    "text": "single single developer applications maybe that works fine for you but I do encourage you to look at the CI CD stuff",
    "start": "2458560",
    "end": "2464680"
  },
  {
    "text": "as well when you're building on this so you can find information about this at amazon.com serverless Sam all right all",
    "start": "2464680",
    "end": "2474730"
  },
  {
    "text": "right 11 logs it always amazes me when we're talking to people to what what are your",
    "start": "2474730",
    "end": "2481300"
  },
  {
    "text": "logs say I I don't know okay logs treat",
    "start": "2481300",
    "end": "2486550"
  },
  {
    "text": "logs as event streams okay these should be things that are going on that you can respond to and",
    "start": "2486550",
    "end": "2492520"
  },
  {
    "text": "this works really well your console output automatically is collected when",
    "start": "2492520",
    "end": "2497830"
  },
  {
    "text": "we're using server lists you does metric collection they're considered a universal right okay we think logs",
    "start": "2497830",
    "end": "2504580"
  },
  {
    "text": "should be universal and should be an always-on thing okay so the cool thing",
    "start": "2504580",
    "end": "2509710"
  },
  {
    "text": "about it is all your logs all your outputs everything like that from the processes are pushed to cloud",
    "start": "2509710",
    "end": "2516069"
  },
  {
    "text": "watch an in cloud watch you can it's an event it's an event stream I can react to",
    "start": "2516069",
    "end": "2522369"
  },
  {
    "text": "things in a cloud watch I could set alarms I can get insights I can collect",
    "start": "2522369",
    "end": "2527499"
  },
  {
    "text": "events I can do reporting I can do all kinds of things but critically what I want to do is you know when I'm hitting",
    "start": "2527499",
    "end": "2533289"
  },
  {
    "text": "maybe I'm hitting concurrency and I don't know it maybe I got I got code that's failing and I don't know it",
    "start": "2533289",
    "end": "2539890"
  },
  {
    "text": "I should have alerts set up in my application that are telling me these kind of things",
    "start": "2539890",
    "end": "2545680"
  },
  {
    "text": "okay so logs are universal right and we believe that in service as well and we",
    "start": "2545680",
    "end": "2550930"
  },
  {
    "text": "encourage you to use them and react to them all right and the final factor 12",
    "start": "2550930",
    "end": "2559569"
  },
  {
    "text": "factor here is admin process okay run admin management tasks as one off",
    "start": "2559569",
    "end": "2565690"
  },
  {
    "text": "process okay and this is a lot of times like database migrations or different things like that if you if you if your",
    "start": "2565690",
    "end": "2572289"
  },
  {
    "text": "Ruby guy and you've done or gal and you've done some date you they have the migration and things like that I'm not",
    "start": "2572289",
    "end": "2577359"
  },
  {
    "text": "obviously as you can tell a Ruby person but you there's just different things",
    "start": "2577359",
    "end": "2582369"
  },
  {
    "text": "you can do well this is a little different in lambda it doesn't apply because lambda you already limit your",
    "start": "2582369",
    "end": "2588729"
  },
  {
    "text": "functions based on use case as we talked about earlier we really want landis to be single responsibility to do one thing",
    "start": "2588729",
    "end": "2596229"
  },
  {
    "text": "and to do it well okay so if you need to run us a one-off process things like",
    "start": "2596229",
    "end": "2601660"
  },
  {
    "text": "that build a lambda to do it okay you just use another lambda alright you can",
    "start": "2601660",
    "end": "2607779"
  },
  {
    "text": "trigger it from a cloud watch event you could trigger it from your let's say you need to do some migration and your build",
    "start": "2607779",
    "end": "2613630"
  },
  {
    "text": "needs to trigger it so you can do these one-off admin processes but it's easy to do by just triggering a lambda so again",
    "start": "2613630",
    "end": "2621910"
  },
  {
    "text": "this this doesn't apply in in including in the application because that's what the 12 factor will tell you but you",
    "start": "2621910",
    "end": "2628959"
  },
  {
    "text": "can't include it in the build process you can do it one-off through a separate lambda all right well how do we do let's",
    "start": "2628959",
    "end": "2636729"
  },
  {
    "text": "see so we've covered code base dependencies we match on a lot of things",
    "start": "2636729",
    "end": "2642039"
  },
  {
    "text": "okay but the purple stars you see work similarly the white is not relevant and I mean number nine is a half we talked",
    "start": "2642039",
    "end": "2648789"
  },
  {
    "text": "about the you don't but speed does matter so so as we've",
    "start": "2648789",
    "end": "2653830"
  },
  {
    "text": "seen 12 factors designed could still be applied to service without issue all",
    "start": "2653830",
    "end": "2659140"
  },
  {
    "text": "right I hope that encourages you if you follow this if you follow this so does this service stuff really work",
    "start": "2659140",
    "end": "2665830"
  },
  {
    "text": "are people applying this and I want to show you a couple examples of of companies that are doing this and doing",
    "start": "2665830",
    "end": "2672790"
  },
  {
    "text": "it well what are the benefits they're getting out of service so this company called pin point they were having issues",
    "start": "2672790",
    "end": "2681640"
  },
  {
    "text": "they needed to simplify both their internal workflow and analytics process pipeline as well as the process for building market services across so what",
    "start": "2681640",
    "end": "2688570"
  },
  {
    "text": "they did is they switched from using kubernetes to AWS lamda and they rewrote their entire API tier the parent",
    "start": "2688570",
    "end": "2695320"
  },
  {
    "text": "workflow and analytics process of time so here's what they got they deploy fixes and features multiple times a day",
    "start": "2695320",
    "end": "2700440"
  },
  {
    "text": "ok deploying the land is easy and because we build micro services because these are isolated because we've built",
    "start": "2700440",
    "end": "2706810"
  },
  {
    "text": "decoupled applications I can push code very easily and I can do it a lot ok and",
    "start": "2706810",
    "end": "2712990"
  },
  {
    "text": "I can roll back if there's a problem ok so it makes that deployment and an updating process easier much easier ok",
    "start": "2712990",
    "end": "2720220"
  },
  {
    "text": "I've been that developer that works on the monolithic application and they come to you look we want you to changes I'm",
    "start": "2720220",
    "end": "2726550"
  },
  {
    "text": "not touching that you know and you know it because you know there's a possibility when I push code it's gonna",
    "start": "2726550",
    "end": "2732190"
  },
  {
    "text": "break there's mine's gonna work fine because I test a production of my code always works but some people may disagree with",
    "start": "2732190",
    "end": "2741010"
  },
  {
    "text": "that so alright next one Autodesk ok so",
    "start": "2741010",
    "end": "2746290"
  },
  {
    "text": "they were setting up accounts was a bottleneck so they needed any they need a way to set up multiple accounts so they they built Taylor a solution for",
    "start": "2746290",
    "end": "2752859"
  },
  {
    "text": "using dynamo DB for data persistence and Amazon API gateway for API endpoints they automated all processing using",
    "start": "2752859",
    "end": "2759369"
  },
  {
    "text": "lambda so now they submit an online form to request a new account in the API request triggers the account creation",
    "start": "2759369",
    "end": "2764680"
  },
  {
    "text": "process it's instantaneous saves 99 percent of previous cost I don't care",
    "start": "2764680",
    "end": "2770380"
  },
  {
    "text": "who you are that's a pretty good stat yeah it's not 100 ok ok it's 100",
    "start": "2770380",
    "end": "2779490"
  },
  {
    "text": "okay alrighty supports queries by account number email address a lot of power going on okay",
    "start": "2779490",
    "end": "2786000"
  },
  {
    "text": "so lambda is more than an API or or an endpoint it's more than just a cron it's",
    "start": "2786000",
    "end": "2791670"
  },
  {
    "text": "really the Swiss Army knife of AWS it could be used for so many things limited only by your imagination okay",
    "start": "2791670",
    "end": "2800480"
  },
  {
    "text": "FINRA FINRA validates the data 50,000 Broker Dealer oats that's cool order audit trail",
    "start": "2800480",
    "end": "2806970"
  },
  {
    "text": "system files of formats them according to 200 rules okay so they do a lot of stuff they need a solution that could",
    "start": "2806970",
    "end": "2812850"
  },
  {
    "text": "scale with processing to me they needed scalability right okay and that's next what service does well so the data is",
    "start": "2812850",
    "end": "2819720"
  },
  {
    "text": "ingest in the Amazon s3 via FTP and a Tobias Landon from forms of validations",
    "start": "2819720",
    "end": "2825050"
  },
  {
    "text": "ec2 manages data feeds coming into and notification going out so lambda going",
    "start": "2825050",
    "end": "2832920"
  },
  {
    "text": "out of a Tobias lambda Amazon sqs so they're queuing it up is used for input/output messaging verification",
    "start": "2832920",
    "end": "2838920"
  },
  {
    "text": "while Amazon V PC participant system in two separate tests and production accounts Wow they took a lot on here delivered",
    "start": "2838920",
    "end": "2846840"
  },
  {
    "text": "solutions in three months and they built it fast okay accelerated data validation by 700 okay",
    "start": "2846840",
    "end": "2852660"
  },
  {
    "text": "if 99% good 700 that's better okay I'm not great at math that's better",
    "start": "2852660",
    "end": "2859470"
  },
  {
    "text": "okay so a lot of stuff going on creased cost efficiency by a factor of I'm gonna just do this to this - all right I can",
    "start": "2859470",
    "end": "2868050"
  },
  {
    "text": "go to four if I take my shoes off but we're just gonna stay here okay so good",
    "start": "2868050",
    "end": "2873600"
  },
  {
    "text": "to understand what you know what this is not something that we're just talking about theoretically it's something",
    "start": "2873600",
    "end": "2878940"
  },
  {
    "text": "really happening all right so what's the what's the final what what's the fin ACK on this okay so as we reviewed the 12",
    "start": "2878940",
    "end": "2886230"
  },
  {
    "text": "factor methodology for applications we've seen which factors do and do not apply okay some do some don't",
    "start": "2886230",
    "end": "2891360"
  },
  {
    "text": "okay thinking about code reusability and how to scope your functions to the smallest size necessary provides many",
    "start": "2891360",
    "end": "2897660"
  },
  {
    "text": "benefits that that's not different right for service smaller code faster that's",
    "start": "2897660",
    "end": "2903690"
  },
  {
    "text": "just reality factors related to underlying process management network ports concurrency an admin process are largely not an issue and best practices",
    "start": "2903690",
    "end": "2911280"
  },
  {
    "text": "for service align pretty close to 12 dr. Cotton's already so you might be really close to meeting the 12 factor",
    "start": "2911280",
    "end": "2917609"
  },
  {
    "text": "bar already a couple of websites I want to leave you with first is our service",
    "start": "2917609",
    "end": "2922920"
  },
  {
    "text": "Sam so amazon.com or a double yesterday amazon.com forward slash service Ford Sam it's tells you a lot about Sam if",
    "start": "2922920",
    "end": "2930089"
  },
  {
    "text": "you are trying to get into service or if you're doing service now use a framework okay Sam is the one I prefer it's the one a",
    "start": "2930089",
    "end": "2936720"
  },
  {
    "text": "TBS puts out I love it there are others there's good ones out there but I encourage you to use a framework okay",
    "start": "2936720",
    "end": "2943530"
  },
  {
    "text": "the second one I would tell you is just service itself if you're looking to know",
    "start": "2943530",
    "end": "2948599"
  },
  {
    "text": "about service anybody knows Amazon or ATS or amazon.com service that take a",
    "start": "2948599",
    "end": "2954960"
  },
  {
    "text": "lot about it help you get started I also encourage you to follow my handle eight EDG a geek on Twitter we do post a lot",
    "start": "2954960",
    "end": "2962160"
  },
  {
    "text": "of stuff announcements I do a lot of like Sam tips you know here's an easy way to have a template to always start",
    "start": "2962160",
    "end": "2968609"
  },
  {
    "text": "with things like that and that's it now I will tell you I can't take questions",
    "start": "2968609",
    "end": "2973800"
  },
  {
    "text": "up here because of the format but I will be wandering around the halls I'll be out back there glad to answer any questions I can I encourage you to fill",
    "start": "2973800",
    "end": "2980910"
  },
  {
    "text": "out the survey guys thank you team green have a good one thank you",
    "start": "2980910",
    "end": "2987680"
  }
]