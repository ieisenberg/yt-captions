[
  {
    "start": "0",
    "end": "92000"
  },
  {
    "text": "so good morning uh today or good afternoon uh my name's uh Elon Rin we're uh uh we're in the monitoring and motion",
    "start": "520",
    "end": "6480"
  },
  {
    "text": "session we're going to get to chat today a little bit about uh monitoring containers uh and and ECS in Amazon and",
    "start": "6480",
    "end": "12480"
  },
  {
    "text": "and what what that sort of dynamic infrastructure does to your uh your ability to operate and to monitor uh at",
    "start": "12480",
    "end": "19080"
  },
  {
    "text": "scale as things are moving moving around uh underneath your feet um so just uh do a quick background",
    "start": "19080",
    "end": "27359"
  },
  {
    "text": "on myself uh my name is Elon again Elon I'm the director Technical Community at data dog where a uh where I get to work",
    "start": "27359",
    "end": "34600"
  },
  {
    "text": "with folks uh folks like yourselves here in the audience get to capture your interesting monitoring stories get to tell them uh tell them and share them",
    "start": "34600",
    "end": "40440"
  },
  {
    "text": "with other with other customers and sort of establish best practices uh I also have a have the Fantastic opportunity of",
    "start": "40440",
    "end": "46440"
  },
  {
    "text": "working with our open source Community around uh uh all of our open source Integrations for the data dog platform",
    "start": "46440",
    "end": "51520"
  },
  {
    "text": "so if you have something that we don't yet monitor uh in our you know 150 plus Integrations uh drop me a line I'd love",
    "start": "51520",
    "end": "57640"
  },
  {
    "text": "to chat with you about how we can get that going in a poll request um my background tends to be in uh",
    "start": "57640",
    "end": "63359"
  },
  {
    "text": "running uh large scale web operations teams usually around uh infrastructure",
    "start": "63359",
    "end": "68439"
  },
  {
    "text": "Automation and tooling uh building building monitoring systems uh like like data dog before uh before they existed",
    "start": "68439",
    "end": "74520"
  },
  {
    "text": "and not not nearly as well as as as they do um my hobbies tend to be uh running",
    "start": "74520",
    "end": "79840"
  },
  {
    "text": "open source uh conferences so things around uh things like scale Texas Linux bestest and a couple of devop STS in LA",
    "start": "79840",
    "end": "85600"
  },
  {
    "text": "and Silicon Valley and what have you so uh hopefully I'll get an opportunity to see you guys at at some of",
    "start": "85600",
    "end": "92040"
  },
  {
    "start": "92000",
    "end": "92000"
  },
  {
    "text": "those um and then data dog of course my employer I'll drop a quick pitch but really if you want to learn about us you",
    "start": "92040",
    "end": "97520"
  },
  {
    "text": "should talk Dro by the exhibit hall floor we got some amazing demos I will try to keep the data dog specific",
    "start": "97520",
    "end": "103320"
  },
  {
    "text": "content to a minimum we'll try to talk about the the hard uh container facts here uh but the background you know what",
    "start": "103320",
    "end": "108799"
  },
  {
    "text": "data dog is is we're a SAS SAS based infrastructure and application monitoring platform uh we tend to focus",
    "start": "108799",
    "end": "115680"
  },
  {
    "text": "on modeling monitor infrastructure so things like the cloud containers uh all",
    "start": "115680",
    "end": "121039"
  },
  {
    "text": "of the technology that you're using as you're building out your microservices um places where things are",
    "start": "121039",
    "end": "126520"
  },
  {
    "text": "moving quite a bit we work fantastically in your on-prem environments as well but honestly we're here at reinvent and we all like to scale our infrastructure",
    "start": "126520",
    "end": "132800"
  },
  {
    "text": "with code rather than with people moving servers and drives out of R um so we're going to focus on that here and that's",
    "start": "132800",
    "end": "138959"
  },
  {
    "text": "where a lot of the power of data dog comes in um to give you a sense of our scale we process nearly a nearly a trillion metrics a day uh so that's you",
    "start": "138959",
    "end": "147160"
  },
  {
    "text": "know you can imagine that's customers both large and small um uh and then really what where where I think we Excel",
    "start": "147160",
    "end": "153959"
  },
  {
    "text": "is some of the intelligent alerting that we offer uh whether that be the fact that we can include a full runbook in those alerts that we send you rather",
    "start": "153959",
    "end": "160080"
  },
  {
    "text": "than you trying to figure out at 3 in the morning where that wiki page is uh or things like outlier detection where you send us a bunch of H data from from",
    "start": "160080",
    "end": "167640"
  },
  {
    "text": "from hundreds of hosts and we tell you which ones you know misbehaving or or acting weird in the cloud but again I'll leave the I'll try to go through this uh",
    "start": "167640",
    "end": "175440"
  },
  {
    "text": "the the dayto do commercial pretty quickly here uh so our goal is to help you monitor everything from all levels of your stack let you make intelligence",
    "start": "175440",
    "end": "181360"
  },
  {
    "start": "176000",
    "end": "176000"
  },
  {
    "text": "B Intelligent Decisions about your infrastructure and applications uh let you go to your boss or your colleague in",
    "start": "181360",
    "end": "186560"
  },
  {
    "text": "your colleague in another engineering team and arm yourself with graphs right it's much easier to it's much much easier to prove your point with a with a",
    "start": "186560",
    "end": "192640"
  },
  {
    "text": "with a graph uh and an alert than it is to do with your opinion",
    "start": "192640",
    "end": "197680"
  },
  {
    "text": "um uh so you we want to help you solve business problems like this right uh what's going on with my environment why",
    "start": "199959",
    "end": "205360"
  },
  {
    "text": "is this host getting more traffic or this host getting less traffic uh you know maybe it's a load balancing",
    "start": "205360",
    "end": "211280"
  },
  {
    "text": "problem uh so a quick overview of the plan for the day or for the at least the next 45 minutes or so uh we'll start off",
    "start": "211280",
    "end": "219000"
  },
  {
    "text": "with a quick introduction on why we're all containerizing and and why that's exciting to me and and and and hopefully",
    "start": "219000",
    "end": "224360"
  },
  {
    "text": "to your all all you folks here that are uh joining me here during the lunch hour uh we'll then dive a little bit into how",
    "start": "224360",
    "end": "230879"
  },
  {
    "text": "we're you know how the how of how of collecting some of this data how you're going to pull metrics from uh from",
    "start": "230879",
    "end": "236360"
  },
  {
    "text": "Docker as well as from ECS uh Dro into some the uh some of the best practices that data dogs picked up from working",
    "start": "236360",
    "end": "242720"
  },
  {
    "text": "with a lot of our customers as well as from other other leaders in the industry on on how to avoid things like pager fatigue make sure that you're only",
    "start": "242720",
    "end": "248640"
  },
  {
    "text": "alerting your teams on on the leading indicators the things that are most most important to you and and your customers",
    "start": "248640",
    "end": "254000"
  },
  {
    "text": "and then finally we'll try to fit it all together uh and dive into how we would you know plug this in with ECS with Docker and you know send send you home",
    "start": "254000",
    "end": "260880"
  },
  {
    "text": "with some tooling you might be able to to to use when you get back to your",
    "start": "260880",
    "end": "265759"
  },
  {
    "text": "desks so why containerization I just by a quick show of hands how many of you guys are using Docker",
    "start": "267040",
    "end": "272800"
  },
  {
    "text": "today so that's that's so so depending on on I'll",
    "start": "272800",
    "end": "278720"
  },
  {
    "text": "assume that depending on the level of your hand in the air that's whether or not you're a dabbler or an adopter uh",
    "start": "278720",
    "end": "283840"
  },
  {
    "text": "but that's you know that's a probably a good 75% 80% of the audience here is that seem sounds like at least you've",
    "start": "283840",
    "end": "288919"
  },
  {
    "text": "run Docker on your laptop somewhere but but like but likely somewhere likely using ECS as well so clearly there's a",
    "start": "288919",
    "end": "294000"
  },
  {
    "text": "lot of interest there um well let's dive a little bit into why this is interesting to us at you know at data do",
    "start": "294000",
    "end": "300280"
  },
  {
    "text": "um over the last year we ran a in Q4 we ran a study uh on dockor adoption so a",
    "start": "300280",
    "end": "306080"
  },
  {
    "text": "lot of the stats that I'm going to talk about uh in this talk come from this study uh link will be in the slide deck",
    "start": "306080",
    "end": "311440"
  },
  {
    "text": "if you want to pick this up later uh no need to take pictures of the screen uh and so you can dive into that there but",
    "start": "311440",
    "end": "317680"
  },
  {
    "text": "we we we have being a SAS based monitoring company we have a large view of how thousands upon thousands of folks",
    "start": "317680",
    "end": "323240"
  },
  {
    "text": "are uh are mon what what technologies they're monitoring and how they're monitoring them and we can come back and and and see industry Trends in in real",
    "start": "323240",
    "end": "329479"
  },
  {
    "text": "time time and so with Docker what we saw is just this amazing adoption curve so",
    "start": "329479",
    "end": "334840"
  },
  {
    "text": "clearly as a as a as a SAS based monitoring vendor it's important to us to be able to monitor the technology that our customers are interested in and",
    "start": "334840",
    "end": "341000"
  },
  {
    "text": "over that over that last year that we ran this study we saw a 5x increase in that adoption um so I mean the big tick",
    "start": "341000",
    "end": "348400"
  },
  {
    "text": "was was of course around the 10 release when when doctor started to stabilize but the 5x in one year I mean when was",
    "start": "348400",
    "end": "353479"
  },
  {
    "text": "the last time you saw uh you know a technology in a a technology see that",
    "start": "353479",
    "end": "358919"
  },
  {
    "text": "type of adoption um so this curve is amazing I mean and the other thing is folks are going from from this sort of",
    "start": "358919",
    "end": "364440"
  },
  {
    "text": "uh this dabbling piece in the middle uh almost immediately up to this uh up to",
    "start": "364440",
    "end": "370280"
  },
  {
    "text": "the adoption curve where they're running it in production and and and across their entire environments and very few people are are abandoning it which is",
    "start": "370280",
    "end": "376919"
  },
  {
    "text": "again something that we don't tend to see with a lot of other Technologies U containers have really become sort of the deao standard this point for um",
    "start": "376919",
    "end": "383880"
  },
  {
    "text": "Distributing complex distri uh distributed applications shipping them building them Etc um you know take a",
    "start": "383880",
    "end": "389599"
  },
  {
    "text": "slightly different view on this um you know we went from zero zero hosts being monitored running Docker to over 6% of",
    "start": "389599",
    "end": "395720"
  },
  {
    "text": "our uh customers uh 6% of the host that we're monitoring from our customers being Docker uh having some amount of",
    "start": "395720",
    "end": "401479"
  },
  {
    "text": "Docker or containerization on them and it's not stopping anytime soon so that's why it's important to me as a vendor but",
    "start": "401479",
    "end": "407759"
  },
  {
    "text": "why is it important to all of us together as users well uh how many you guys have run into this type of a situation with",
    "start": "407759",
    "end": "413400"
  },
  {
    "start": "410000",
    "end": "410000"
  },
  {
    "text": "dependency hell in some part of your environment maybe you have uh uh maybe you have packages at your operating system level that are conflicting I know",
    "start": "413400",
    "end": "419879"
  },
  {
    "text": "I started dealing with with stuff like this back in uh the late '90s early 2000s with uh with RPMs in my red hat",
    "start": "419879",
    "end": "426199"
  },
  {
    "text": "based dros uh I then graduated to dealing with things with things like Python and Ruby as I'm you know using",
    "start": "426199",
    "end": "431960"
  },
  {
    "text": "RBM and virtual L and uh you know my j2e containers with ears and wars and Maven and the reality is no matter what",
    "start": "431960",
    "end": "438280"
  },
  {
    "text": "technology has come out the door claiming that it's going to solve these dependency problems for me it hasn't in",
    "start": "438280",
    "end": "443639"
  },
  {
    "text": "some environment I run into some conflict and I spend way more time fighting this than I would ever like so that's serious problem want to try to",
    "start": "443639",
    "end": "449919"
  },
  {
    "text": "avoid that containers are are are are one way that we go about doing that so let's talk about a little about a little",
    "start": "449919",
    "end": "455080"
  },
  {
    "text": "bit about how right now rather than using something like a deployment some of the deployment tooling you might have used in the past or configuration",
    "start": "455080",
    "end": "460639"
  },
  {
    "text": "management tooling to install all the libraries all the different Tools around uh these containers that around the",
    "start": "460639",
    "end": "465919"
  },
  {
    "text": "applications that we're interested in deploying um we've buil a unified pipeline so we get uh we get both the",
    "start": "465919",
    "end": "471759"
  },
  {
    "text": "out the compiled output of our of our of our of our applications along with the",
    "start": "471759",
    "end": "477159"
  },
  {
    "text": "shared libraries and all the system level packages that might be important uh omnius them up put them into a single",
    "start": "477159",
    "end": "482919"
  },
  {
    "text": "Docker container we get that one artifact uh makes it much easier to get things out there very consistent deployments across our environments uh",
    "start": "482919",
    "end": "490560"
  },
  {
    "text": "not a lot of uh not a lot of questions around what's in staging versus what's in production it's it's a very clear dip",
    "start": "490560",
    "end": "495919"
  },
  {
    "text": "of that uh of that one binary uh and so it starts you know our application TI our application",
    "start": "495919",
    "end": "501960"
  },
  {
    "text": "infrastructure start to take a little bit of a shift right over the last 15 years you know maybe uh used to be in",
    "start": "501960",
    "end": "507159"
  },
  {
    "text": "your on Prem environment you'd have one uh maybe one or more applications running on top of some sort of a some",
    "start": "507159",
    "end": "513479"
  },
  {
    "text": "sort of an application stack maybe it's your uh you know Java world or some sort of dispatcher like gunicorn or unicorn",
    "start": "513479",
    "end": "519080"
  },
  {
    "text": "for your Ruby and python apps running on your OS and you likely had multiple things running there because you wanted to make the most use of this expensive",
    "start": "519080",
    "end": "525240"
  },
  {
    "text": "bare metal that was sitting sitting in your data centers um over the last five you know to eight years or so uh in both",
    "start": "525240",
    "end": "532640"
  },
  {
    "text": "both in Amazon and in our own data centers with things like ECX and KVM and Zen and all the amazing virtualization",
    "start": "532640",
    "end": "538200"
  },
  {
    "text": "Tech we found we thought well we'll make this easier we'll make one app per we we'll DPL one app per VM and those VMS",
    "start": "538200",
    "end": "544160"
  },
  {
    "text": "will we we'll make many of those VMS we'll slice our host down we'll get better uh better density in our environments better usage uh you know",
    "start": "544160",
    "end": "552399"
  },
  {
    "text": "better management of our costs uh and we'll go there but really that just kind of exacerbated the problem right now",
    "start": "552399",
    "end": "558959"
  },
  {
    "text": "rather than having uh rather than having one host for every piece of Hardware we now have multiplied that by two it's",
    "start": "558959",
    "end": "564000"
  },
  {
    "text": "that many more places we have to worry about that those dependencies and those deployments uh security updates all these other things that we're talking",
    "start": "564000",
    "end": "570000"
  },
  {
    "text": "about so now today as we're talking about containers what we're really looking at is sort of these very small",
    "start": "570000",
    "end": "575480"
  },
  {
    "text": "deployment units things that that just enough operating system if you can get away with it you're using things like uh",
    "start": "575480",
    "end": "581079"
  },
  {
    "text": "like Alpine where really there's there's almost no operating system at all all it is is your you know the the the base",
    "start": "581079",
    "end": "587279"
  },
  {
    "text": "libraries that you need for running your service um so let's just take things",
    "start": "587279",
    "end": "592760"
  },
  {
    "text": "like these kinds of messy moving trucks where we're strapping things to the top of our cars and shoving things in trying to figure out how to make use of all of",
    "start": "592760",
    "end": "598680"
  },
  {
    "text": "our resources something a little bit more standardized uh environments where we know exactly how much uh how much",
    "start": "598680",
    "end": "605320"
  },
  {
    "text": "capacity we have we're allocating that capacity uh efficiently so that we're",
    "start": "605320",
    "end": "610880"
  },
  {
    "text": "you know we're able to make use of all of our resources uh manage our costs",
    "start": "610880",
    "end": "616600"
  },
  {
    "text": "Etc um sort of any crane can pick up one of those shipping containers drop it on a truck drop it on a boat but it looks",
    "start": "616600",
    "end": "622560"
  },
  {
    "text": "the same whether you're again Amazon on Prem what have you uh the last sort of selling point of containers uh for us in",
    "start": "622560",
    "end": "629440"
  },
  {
    "text": "addition to that in addition that is of course the speed uh how long did it take does it take to spin up a VM maybe",
    "start": "629440",
    "end": "634560"
  },
  {
    "text": "that's in minutes maybe that's in tens of minutes how long did it take you to bake those those images and those Amis and and manage that it's a bit of time",
    "start": "634560",
    "end": "641120"
  },
  {
    "text": "and so the speed of of Docker uh lets us do things like uh makes makes things",
    "start": "641120",
    "end": "646800"
  },
  {
    "text": "like red blue deploy red blue deployments a lot a lot easier maybe you've got two versions of your application you quickly deploy version",
    "start": "646800",
    "end": "652639"
  },
  {
    "text": "two start to shut down your old containers if you notice an issue it's very quick again within seconds you can",
    "start": "652639",
    "end": "657959"
  },
  {
    "text": "flip right back there's not a lot of of spin up or boot up time in there uh you're not letting your you know your",
    "start": "657959",
    "end": "663480"
  },
  {
    "text": "the your Amis maybe run for weeks because you're afraid to shut them down because it's going to take again dozens of minutes maybe to to get up and",
    "start": "663480",
    "end": "670160"
  },
  {
    "text": "running um and so to kind of back that up some of the data from our study shows that uh you know the median the median",
    "start": "670160",
    "end": "676120"
  },
  {
    "text": "container lives about three days right now and it's actually just that time is I would I would imagine the next time we run this study it's going to be even",
    "start": "676120",
    "end": "682040"
  },
  {
    "text": "shorter than that uh whereas the VMS on the other VMS on the other hand are 12 days and this isn't the these are you",
    "start": "682040",
    "end": "687279"
  },
  {
    "text": "know tend to be a lot of cloud users folks where they're already using things like Autos scaling groups they're already using things like Amis they're",
    "start": "687279",
    "end": "693519"
  },
  {
    "text": "comfortable with treating their infrastructure as as cattle rather than pets um shutting them you know not not",
    "start": "693519",
    "end": "698639"
  },
  {
    "text": "naming them not treating them as friends and family trying not not trying to keep them around for years but they're still again 12 days versus three days that's a",
    "start": "698639",
    "end": "704600"
  },
  {
    "text": "lot of churn um so how do we manage that type of that type of churn uh well there's",
    "start": "704600",
    "end": "710399"
  },
  {
    "start": "706000",
    "end": "706000"
  },
  {
    "text": "things like so so Amazon offers some great uh great service elastic container service we saw a little bit about this",
    "start": "710399",
    "end": "715480"
  },
  {
    "text": "in the keynote today um let's just automatically manage and schedule these tasks we're not running ssing into every",
    "start": "715480",
    "end": "720839"
  },
  {
    "text": "host that we want to deploy to running the containers manually you know Docker run what have you uh that's a little",
    "start": "720839",
    "end": "726079"
  },
  {
    "text": "painful especially if you're talking about doing things dynamically your fingers don't move that fast I guarantee it um but also ensuring that those tasks",
    "start": "726079",
    "end": "733040"
  },
  {
    "text": "are running maybe we've hooked these things up with something like an auto scaling group and instances are coming and going making sure that we always",
    "start": "733040",
    "end": "738240"
  },
  {
    "text": "have the right number of containers is important and that the containers we're scheduling are working uh and so that's where ECS comes and then finally things",
    "start": "738240",
    "end": "744279"
  },
  {
    "text": "like port management are start to be a little bit of a pain with with Docker you don't actually know what port some of your services are going to come on",
    "start": "744279",
    "end": "750079"
  },
  {
    "text": "and so uh ECS lets us hook that up with elb and just do that fairly smoothly um",
    "start": "750079",
    "end": "755720"
  },
  {
    "text": "you just ask Amazon and your services will always be there for you um so but that you know this starts",
    "start": "755720",
    "end": "762440"
  },
  {
    "text": "we'll start as we start to talk about some of the challenges here um you know what the goal of our monitoring is to",
    "start": "762440",
    "end": "767560"
  },
  {
    "text": "help us Define define normal and alert on alert on it when it changes or come back and see you know and or come back",
    "start": "767560",
    "end": "774120"
  },
  {
    "text": "and see how our systems have been performing uh and how do you define normal when normal is different from one minute to the next or 1 second to the",
    "start": "774120",
    "end": "780279"
  },
  {
    "text": "next it's a bit of a challenge again containers are moving between hosts uh things are changing Point ports uh we're",
    "start": "780279",
    "end": "786360"
  },
  {
    "text": "we're sort of it feels like you're standing on quick sand it's standing on quick sand but it's turns out it's actually pretty stable you just need to",
    "start": "786360",
    "end": "792399"
  },
  {
    "text": "know how to look at it um so some of the other challenges adding up the numbers right uh We've now",
    "start": "792399",
    "end": "799360"
  },
  {
    "start": "795000",
    "end": "795000"
  },
  {
    "text": "gone from you know from we we've now gone from maybe having one instance to having four you know a number of",
    "start": "799360",
    "end": "804480"
  },
  {
    "text": "containers for instances for instance Docker itself just in uh you know and 1.9 which is what comes with your ECS",
    "start": "804480",
    "end": "811279"
  },
  {
    "text": "and optimized Amis is going to have uh just over 220 metrics per container",
    "start": "811279",
    "end": "816720"
  },
  {
    "text": "right these are things that you're going to want to keep track of things like your memory s CPU Network what have you we'll dive into that a little bit later",
    "start": "816720",
    "end": "821880"
  },
  {
    "text": "that's a lot of data to keep track of um you know cloudwatch adds another six metrics give or take again depending",
    "start": "821880",
    "end": "828199"
  },
  {
    "text": "on the number of of Services of tasks you're running there's going to be about four per cluster that are going to tell you about the cluster Health as a whole",
    "start": "828199",
    "end": "833360"
  },
  {
    "text": "another two per per task that you're running to tell you um uh you know tell you how that's",
    "start": "833360",
    "end": "839920"
  },
  {
    "text": "performing uh you're going to start to throw in your OS metrics so On Any Given instance you're likely monitoring about 100 metrics on average we see from the",
    "start": "839920",
    "end": "846040"
  },
  {
    "text": "operating system um your applications likely each have about 50 metrics each",
    "start": "846040",
    "end": "851320"
  },
  {
    "text": "so you start to add that all together U as you're running four containers on a host at a time which is what we've been seeing in our study uh and again it adds",
    "start": "851320",
    "end": "858320"
  },
  {
    "text": "up it adds up fast turns into a bit of metrics overload so where do you keep all of that right a lot of your legacy",
    "start": "858320",
    "end": "863759"
  },
  {
    "text": "monitoring tooling is likely not built for this type of uh this type of capacity or this type of change",
    "start": "863759",
    "end": "870079"
  },
  {
    "text": "it starts to kind of feel like maybe you're looking into looking at a relic of the past uh and whether or not it fits into you know what we're trying to",
    "start": "870079",
    "end": "875959"
  },
  {
    "text": "do today in the cloud with this Dynamic infrastructure um another challenge is",
    "start": "875959",
    "end": "882519"
  },
  {
    "start": "881000",
    "end": "881000"
  },
  {
    "text": "that a lot of the tools that we've been using up until now tend to be hostcentric with things like ECS abstracting the host away from us so",
    "start": "882519",
    "end": "889240"
  },
  {
    "text": "that we can focus on what we care about most which is the service we're offering our customers um it's a little challenging to think about this so this",
    "start": "889240",
    "end": "895360"
  },
  {
    "text": "is a model the picture you're seeing here is a model of the toic solar you know model the solar system um you know",
    "start": "895360",
    "end": "901000"
  },
  {
    "text": "this is back when we thought the the Earth revolve sorry the sun revolved around the earth along with all the other planets and the rest of the",
    "start": "901000",
    "end": "906480"
  },
  {
    "text": "universe it's kind of crazy look at all these lines right this is pretty hard math to do um if we start to flip things",
    "start": "906480",
    "end": "912120"
  },
  {
    "text": "around and think about Services which what again what we really care about what we're offering our customers starts to Look a Lot neater right these are not",
    "start": "912120",
    "end": "919600"
  },
  {
    "text": "the the math around this is much much simpler",
    "start": "919600",
    "end": "924639"
  },
  {
    "text": "um uh you know another thing we want to start to look at is how to avoid gaps in our in our in our graphs right you move",
    "start": "924639",
    "end": "930319"
  },
  {
    "text": "from one host to the next you want to see a consistent line across you know across any graph that you're tracking in",
    "start": "930319",
    "end": "935759"
  },
  {
    "text": "this case we're looking at uh you know application latency uh but you want to be able to look at that across your",
    "start": "935759",
    "end": "941079"
  },
  {
    "text": "entire across your entire infrastructure whether or not hosts are coming and going now these were challenges again this is a challenge you had again during",
    "start": "941079",
    "end": "947120"
  },
  {
    "text": "you know when you were using Autos scaling groups or really any Dynamic infrastructure but again the this what what containers have done is just thrown",
    "start": "947120",
    "end": "952880"
  },
  {
    "text": "this into overdrive the change is just leveling up all the time so we want to be able to avoid gaps so how",
    "start": "952880",
    "end": "959560"
  },
  {
    "text": "uh how do we do that um it's important to start thinking about our service our applications and",
    "start": "959560",
    "end": "965600"
  },
  {
    "text": "our infrastructure as as layers so uh and and and looking at different tools to monitor each of those layers there's",
    "start": "965600",
    "end": "971639"
  },
  {
    "text": "a little bit of overlap between each of these layers but uh but if you if you kind of look at it from this perspective",
    "start": "971639",
    "end": "977720"
  },
  {
    "text": "you can find the right tools to look at it from each uh from each point and then you can use something like data dog to aggate all that data together um so",
    "start": "977720",
    "end": "984000"
  },
  {
    "text": "maybe at the bottom maybe at the bottom there we have something like a cloud watch",
    "start": "984000",
    "end": "989600"
  },
  {
    "text": "or some other type of infrastructure monitoring tool at the at the lowest level letting us know how our how our hypervisors are performing what the",
    "start": "989600",
    "end": "995680"
  },
  {
    "text": "hypervisor is seeing about uh about our instances uh you go up a level and you have again infrastructure monitoring",
    "start": "995680",
    "end": "1002199"
  },
  {
    "text": "this is where things like um like like your data dogs your nagios your other you know some of the other tooling that's out there comes into play I'm",
    "start": "1002199",
    "end": "1008720"
  },
  {
    "text": "going to tell you about those individual containers or those individual uh individual VMS uh pill in things like",
    "start": "1008720",
    "end": "1014240"
  },
  {
    "text": "application metrics like requests per second uh or really all any of the other type work output that you're doing and",
    "start": "1014240",
    "end": "1021199"
  },
  {
    "text": "at the highest level what you're looking at is is APM and those might be sort of external that might be profiling tools",
    "start": "1021199",
    "end": "1027558"
  },
  {
    "text": "uh or external synthetic monitoring um and now you can't you you can't be successful at knowing what's going on",
    "start": "1027559",
    "end": "1033038"
  },
  {
    "text": "here unless you have all of these layers but those layers together uh put together a very powerful picture about",
    "start": "1033039",
    "end": "1038199"
  },
  {
    "text": "what's going on in your environment and and why um plug those all together using",
    "start": "1038199",
    "end": "1046160"
  },
  {
    "text": "tags right so what we do what are really the most important about all important piece of all of this as we're starting",
    "start": "1046160",
    "end": "1051880"
  },
  {
    "text": "to monitoring it regard monitor our systems regardless of what tools we're using um you want to you want to make",
    "start": "1051880",
    "end": "1058039"
  },
  {
    "text": "strong use of tags within uh both within your container infrastructure so maybe you're using labels on as part of Docker",
    "start": "1058039",
    "end": "1064760"
  },
  {
    "text": "uh tags as part of ECS you want to tag your AWS instances tags all the way down your infrastructure that you very can",
    "start": "1064760",
    "end": "1070760"
  },
  {
    "text": "very clearly slice and dice those metrics and know what you're looking",
    "start": "1070760",
    "end": "1075279"
  },
  {
    "text": "at um so tags could be anything from you know uh instance types to what availability Zone they're running in",
    "start": "1077400",
    "end": "1083200"
  },
  {
    "text": "what version of application is running all of those bits and together they let you put together uh to put together",
    "start": "1083200",
    "end": "1089080"
  },
  {
    "text": "queries that that ring true about your environment regardless of how many hosts or containers you're running on a given",
    "start": "1089080",
    "end": "1096039"
  },
  {
    "text": "day excuse me so um you know for example you want to be able to ask your your",
    "start": "1096799",
    "end": "1102440"
  },
  {
    "text": "your monitoring tooling questions like this uh business questions again show me all of my containers alert me any time a",
    "start": "1102440",
    "end": "1109080"
  },
  {
    "text": "container you know is running um a particular image across all of my you know across a given region across all",
    "start": "1109080",
    "end": "1115080"
  },
  {
    "text": "the availability zones with some sort of you know some sort of value on the metric so in this case we're looking at a container web across us E2 across all",
    "start": "1115080",
    "end": "1122799"
  },
  {
    "text": "variability zones uh where the average memory is 1.5 times the average and the so where the memory usage is 1 Point",
    "start": "1122799",
    "end": "1129159"
  },
  {
    "text": "time the average and it's running on a particular instance type all of these things that are sort of in bold and",
    "start": "1129159",
    "end": "1134360"
  },
  {
    "text": "underlined those are tags these are the types of things that you're going to use to query your environment you're going to ask ask it questions rather than asking it",
    "start": "1134360",
    "end": "1140799"
  },
  {
    "text": "about a particular host is something listening on Port 80 today you're going to ask it how is that application",
    "start": "1140799",
    "end": "1147480"
  },
  {
    "text": "performing so that's a quick overview of some of the challenges of of container based uh container based monitoring and",
    "start": "1147760",
    "end": "1153120"
  },
  {
    "text": "we we'll next we're going to move into that theory we were talking about earlier so monitoring 101",
    "start": "1153120",
    "end": "1159280"
  },
  {
    "text": "um this is sort of again this is sort of the theory and lessons that we've picked up from from working with a number of our customers over the last uh you know",
    "start": "1159280",
    "end": "1165880"
  },
  {
    "text": "many years as as as they monitor their infrastructure and as as we monitor ours um you know right we all know that",
    "start": "1165880",
    "end": "1172400"
  },
  {
    "text": "metrics are important we all care about we we all know monitoring is important the same way we wouldn't drive down the uh drive down the highway with our head",
    "start": "1172400",
    "end": "1178559"
  },
  {
    "text": "lights off and the wipers off in the middle of the night we might in the rain we might uh we we won't launch services",
    "start": "1178559",
    "end": "1183720"
  },
  {
    "text": "in production without monitoring right monitoring driven development forget about test driven development monitoring driven development start monitoring",
    "start": "1183720",
    "end": "1189480"
  },
  {
    "text": "these things in staging and development long before they've hit production because otherwise you won't know what they look like when you get there um and",
    "start": "1189480",
    "end": "1196480"
  },
  {
    "text": "when you end up in that situation you got this right you're going to hit something along the road and you're going to do that even if you prepared",
    "start": "1196480",
    "end": "1202679"
  },
  {
    "text": "but along if You' prepared you're going to have that data that you",
    "start": "1202679",
    "end": "1206799"
  },
  {
    "text": "need um because collecting that data is cheap when you have it but it's quite expensive to to to to try to collect it",
    "start": "1208000",
    "end": "1214360"
  },
  {
    "text": "and manifest it out of thin air later um how many you guys have ever done a postmortem where you say to your boss",
    "start": "1214360",
    "end": "1219720"
  },
  {
    "text": "you know I don't know why that happened but the action item is going to be to add more monitoring so I can tell you next",
    "start": "1219720",
    "end": "1226480"
  },
  {
    "text": "time okay there's there people hesitating to raise their hands I think they're afraid to be seen on camera uh",
    "start": "1227080",
    "end": "1232720"
  },
  {
    "text": "but the point is uh you never want to go to your customer and say you know we're going to have this instant twice so that you don't get so that I",
    "start": "1232720",
    "end": "1239960"
  },
  {
    "text": "can tell you why it happened and prevent it the third time right you want to be able to C you want to have it happen",
    "start": "1239960",
    "end": "1245039"
  },
  {
    "text": "never but if it's going to happen have it happen once and never again so again uh collecting that data is really cheap",
    "start": "1245039",
    "end": "1250080"
  },
  {
    "text": "when you have it super expensive when you don't and it's going to cost you in those postmortem um and so we say",
    "start": "1250080",
    "end": "1256039"
  },
  {
    "text": "instrument all the things but again earlier we talked about you know we talked about the volume of this and clearly there's a lot of data",
    "start": "1256039",
    "end": "1262559"
  },
  {
    "text": "um but you you got to weigh that weigh that cost and we're we're in the land of we're in the lands of uh you know of",
    "start": "1262559",
    "end": "1268120"
  },
  {
    "text": "Amazon and cloud services you get to scale your storage and your compute layers with a credit card it's that that",
    "start": "1268120",
    "end": "1273320"
  },
  {
    "text": "credit card transaction I guarantee you will be cheaper than collecting that data even if you only look at it 50% of the time or 20% of the time when that",
    "start": "1273320",
    "end": "1279480"
  },
  {
    "text": "one incident kicks off um so but as we're looking at all that data again there's this this fire",
    "start": "1279480",
    "end": "1285760"
  },
  {
    "text": "hose of data coming in we really need some some Modern tooling and ways to look at some modern modern uh",
    "start": "1285760",
    "end": "1293400"
  },
  {
    "text": "methodologies for looking at it right we can't you know we can't grab our 1960s uh you know NASA antennas and use them",
    "start": "1293400",
    "end": "1298960"
  },
  {
    "text": "to to figure out what's going on here um so we have we put together this um",
    "start": "1298960",
    "end": "1304679"
  },
  {
    "start": "1302000",
    "end": "1302000"
  },
  {
    "text": "this a bit of a guide and I'm going to give you the tldr edition of it for uh the redditors of you out there um but",
    "start": "1304679",
    "end": "1310520"
  },
  {
    "text": "you can find the long version up on our site it's a fantastic article I encourage you all to to read it and take a look at how it might fit into your",
    "start": "1310520",
    "end": "1316799"
  },
  {
    "text": "environment whether you're a data doc customer not I hope you are and if you are I'd love to chat with you afterwards",
    "start": "1316799",
    "end": "1321919"
  },
  {
    "text": "as well um so the short of it is uh the the the the biggest point the the biggest",
    "start": "1321919",
    "end": "1327919"
  },
  {
    "start": "1323000",
    "end": "1323000"
  },
  {
    "text": "piece of of monitoring 101 for us is the idea of categorizing your metrics really we see your metrics falling into three",
    "start": "1327919",
    "end": "1334440"
  },
  {
    "text": "uh three major areas the first being your work metrics um these are for",
    "start": "1334440",
    "end": "1339640"
  },
  {
    "text": "example think of if you think about your application or your environment as a factory let's say we're making cars um",
    "start": "1339640",
    "end": "1346919"
  },
  {
    "text": "you know Tesla's Tesla start started doing those pre-orders recently they're trying to turn them out as fast as they can uh all those orders came through",
    "start": "1346919",
    "end": "1353320"
  },
  {
    "text": "what's the throughput right these are the things that they're these the the the the throughput is how many of those cars are coming off the assembly line at",
    "start": "1353320",
    "end": "1358919"
  },
  {
    "text": "any given time so that we can sell them um success and error rates are really going to be how how are more about the",
    "start": "1358919",
    "end": "1364960"
  },
  {
    "text": "quality of the cars that are coming out there right how many of those are missing hubc Caps or have cracked windshields or don't have wheels at all",
    "start": "1364960",
    "end": "1371640"
  },
  {
    "text": "you know how how successful is our assembly line in outputting this uh and then performance and and then",
    "start": "1371640",
    "end": "1377159"
  },
  {
    "text": "performance uh you know at one of those requests come in how quickly can we uh can we turn can we turn that car",
    "start": "1377159",
    "end": "1383240"
  },
  {
    "text": "around uh resource metrics being all the pieces the things that go into there so maybe the rubber that goes into the",
    "start": "1383240",
    "end": "1388640"
  },
  {
    "text": "tires the number of tires you have available for the car uh and really what you're going to want to you want these because they tell you how much slack you",
    "start": "1388640",
    "end": "1395279"
  },
  {
    "text": "have in your pipeline how many more cars could you sell right could you turn up the you know could you turn up the the",
    "start": "1395279",
    "end": "1400720"
  },
  {
    "text": "throttle to right now how many more workers could you have assembling things right now uh and that's where utilization and saturation come in",
    "start": "1400720",
    "end": "1406640"
  },
  {
    "text": "they're sort of two two halves of the same coin uh or two sides of the same coin uh and then again error rates and availability",
    "start": "1406640",
    "end": "1412960"
  },
  {
    "text": "how much how much of these resources do you have available how many errors are you having as you're trying to look at at some of get access to some of these",
    "start": "1412960",
    "end": "1419480"
  },
  {
    "text": "resources and the final area is events events are things that provide context they're more qualitative so it's going",
    "start": "1419480",
    "end": "1425559"
  },
  {
    "text": "to be things like hey you just started a huge on sale that lets your customers order one you know billion dollars of",
    "start": "1425559",
    "end": "1430760"
  },
  {
    "text": "your car that you've not yet started making yet you got a big backlog you're going to want you're going to want to think about that uh code changes maybe",
    "start": "1430760",
    "end": "1436720"
  },
  {
    "text": "you've changed uh or formula Chang Chang maybe you change what goes into the rubber that goes into those tires maybe that's why things are taking a little",
    "start": "1436720",
    "end": "1442520"
  },
  {
    "text": "bit longer to assemble um alerts things that have notified you maybe you bought a Super Bowl ad and now you got to you",
    "start": "1442520",
    "end": "1448000"
  },
  {
    "text": "got to you got to track that but these are all the things that tell you why your metric dipped or or changed in a given at a given point in",
    "start": "1448000",
    "end": "1455480"
  },
  {
    "text": "time um so we'll apply this to some examples engine X is one of the most popular things we see running in containers and so we'll use that as a",
    "start": "1455480",
    "end": "1461400"
  },
  {
    "start": "1456000",
    "end": "1456000"
  },
  {
    "text": "quick example here um so what are some things that could be",
    "start": "1461400",
    "end": "1467799"
  },
  {
    "text": "considered web considered work metrics in the case of a web application like engine X um",
    "start": "1467799",
    "end": "1473760"
  },
  {
    "text": "requests per second of course that's that through put we were talking about earlier um dropped connections these are you know might be that error",
    "start": "1473760",
    "end": "1480080"
  },
  {
    "text": "rate uh you know request times that's going to be that performance we were talking about earlier the sum of the latency that your customers are",
    "start": "1480080",
    "end": "1485440"
  },
  {
    "text": "experiencing and then you know again back to error rates maybe 200s versus 500s versus 400s um you're going to know",
    "start": "1485440",
    "end": "1492159"
  },
  {
    "text": "those best based on what your application does but this these are these are some examples resour on the other side are the pieces that go into",
    "start": "1492159",
    "end": "1497679"
  },
  {
    "text": "that so in the case of an API you're not using rubber or tires or hubcaps but you are using things like disc um you are",
    "start": "1497679",
    "end": "1504080"
  },
  {
    "text": "looking at things like memory you're looking at things like CPU or or or or the depth of the cues that you're interacting",
    "start": "1504080",
    "end": "1511000"
  },
  {
    "text": "with and then of course events these are fairly straightforward right you know what you you guys are doing deployments all the time whether those they the red",
    "start": "1511000",
    "end": "1517279"
  },
  {
    "text": "green type deployments that we're talking about earlier or maybe something a little bit more complex um but the idea is these are these are things that",
    "start": "1517279",
    "end": "1523320"
  },
  {
    "text": "you've done to your environment whether it's being you know upgrading engine X restarting it to reload a new config",
    "start": "1523320",
    "end": "1528360"
  },
  {
    "text": "playing some new code on the back end um you know big web ad campaign that you've",
    "start": "1528360",
    "end": "1533399"
  },
  {
    "text": "started things like that and so these are the things that are going to help you understand why things why why your environment has",
    "start": "1533399",
    "end": "1539520"
  },
  {
    "text": "changed um so what which which of these do you think we paid you on when do you let a sleeping engineer lie how many you",
    "start": "1539520",
    "end": "1544840"
  },
  {
    "text": "guys get our on call okay again pretty much all of the audience if you know let you avoid",
    "start": "1544840",
    "end": "1550399"
  },
  {
    "text": "turning your heads but um so what what when when do we want to wake up in the middle of the night we want to wake we",
    "start": "1550399",
    "end": "1556399"
  },
  {
    "text": "we care about these leading indicators right we're not you know who's how many of you had a CEO call you and say you know you're using too much CPU I know",
    "start": "1556399",
    "end": "1562880"
  },
  {
    "text": "the API is ret turning perfectly but you're using too much CPU okay maybe the credit card bill was a little high on",
    "start": "1562880",
    "end": "1568200"
  },
  {
    "text": "that last month that you were using AWS or something but but the reality is they care about the business that you're turning around to the customers um and",
    "start": "1568200",
    "end": "1574640"
  },
  {
    "text": "so really what you want to do is look at those work metrics these are the symptoms of what your customers are experiencing they're those apis that are",
    "start": "1574640",
    "end": "1580799"
  },
  {
    "text": "failing to return um uh or returning slowly and you want",
    "start": "1580799",
    "end": "1586440"
  },
  {
    "text": "to use those in conjunction with the the work with the events and resource metrics that we're talking about to do some of that",
    "start": "1586440",
    "end": "1593520"
  },
  {
    "text": "investigation so really want to take a look at something like this every layer in your stack has a work metric doesn't",
    "start": "1595360",
    "end": "1600720"
  },
  {
    "text": "matter if you're a DBA all the way at the bottom there is a you have a work metric you're providing something to",
    "start": "1600720",
    "end": "1606360"
  },
  {
    "text": "some customer in your environment whether it's an app developer or a business user there is a work metric",
    "start": "1606360",
    "end": "1611679"
  },
  {
    "text": "there if you don't know what it is find it that's what you're being rated on and that's when you come into a situation",
    "start": "1611679",
    "end": "1616960"
  },
  {
    "text": "where you have an incident where you've been pag at at 3 in the morning you're trying to figure out what's going on you're going to start at the first work metric the first symptom that a customer",
    "start": "1616960",
    "end": "1622760"
  },
  {
    "text": "has noticed API requests are slow what's going on start diving in maybe you're running out of threads in your app TI",
    "start": "1622760",
    "end": "1628760"
  },
  {
    "text": "you don't have enough containers running what you know what's going on you're going to work all your way down the St stack till you find out maybe you have a slow SQL query I don't know uh not to",
    "start": "1628760",
    "end": "1635840"
  },
  {
    "text": "blame the databases been spent my time as a DBA as well just an example so again really the key thing is to find",
    "start": "1635840",
    "end": "1641559"
  },
  {
    "text": "those find those work metrics all the way down and then work your way through the resources and events that tie to them",
    "start": "1641559",
    "end": "1648720"
  },
  {
    "text": "um so we're in the SEC you know we're now sort of toward getting towards the the the latter part of the presentation",
    "start": "1648720",
    "end": "1654039"
  },
  {
    "text": "we were talking we said we we said we'd start with uh with why do why containers are important we talked about that a bit",
    "start": "1654039",
    "end": "1660559"
  },
  {
    "text": "um we said we talked about uh some of the challenges that we have there as well as uh uh you know some theory about",
    "start": "1660559",
    "end": "1667720"
  },
  {
    "text": "how to monitor them so now we're going to start to dive in on you know maybe how to get this how to get this stuff out of uh out of ECS and Docker um so we",
    "start": "1667720",
    "end": "1678200"
  },
  {
    "text": "so ECS metrics are clearly me again things that are your cluster Health the docker metrics and your application",
    "start": "1678880",
    "end": "1684120"
  },
  {
    "text": "metrics might be the things that are more specific to your environment um and then again we're want to try to figure out the resource metrics for those those",
    "start": "1684120",
    "end": "1690320"
  },
  {
    "text": "work metrics and what we're going to alert on so in the world of containers really",
    "start": "1690320",
    "end": "1695600"
  },
  {
    "start": "1694000",
    "end": "1694000"
  },
  {
    "text": "it's it's not all that different from from the engine X application we were looking at before you're going to look at things like CPU and memory IO Network",
    "start": "1695600",
    "end": "1701880"
  },
  {
    "text": "traffic Etc these are utilization again these are these are your resource metrics um you're going to look at things again saturation uh Swap all of",
    "start": "1701880",
    "end": "1709679"
  },
  {
    "text": "these things are key to knowing whether or not you have enough resources to the job that your customers are asking you to",
    "start": "1709679",
    "end": "1715399"
  },
  {
    "text": "do and then events these are things that are again these are mostly going to come from Docker and the ECS ECS apis the ECS",
    "start": "1715399",
    "end": "1722279"
  },
  {
    "start": "1716000",
    "end": "1716000"
  },
  {
    "text": "apis offer you um deployment events that you can pull into tools like data dog to tools like uh like your log and event",
    "start": "1722279",
    "end": "1728880"
  },
  {
    "text": "management tooling um but other events might be Auto scaling underlying instances right we've all we've we we've",
    "start": "1728880",
    "end": "1734840"
  },
  {
    "text": "all fallen in love with our spot instances and our Auto scaling groups ensuring that we always have the right amount of the thing we want when we want",
    "start": "1734840",
    "end": "1740039"
  },
  {
    "text": "it uh we're not giving that up just cuz we're using containers and so there's going to be some events around that changing it quite a bit as",
    "start": "1740039",
    "end": "1746279"
  },
  {
    "text": "well uh and so we go back to this diagram that we were looking at before where we're looking at the",
    "start": "1746279",
    "end": "1752080"
  },
  {
    "text": "layers so most of the things that we just talked about there in terms of resources and events they're going to come from this lower level part here",
    "start": "1752360",
    "end": "1758000"
  },
  {
    "text": "this is where you're get you're getting a lot of that from the CL from",
    "start": "1758000",
    "end": "1761840"
  },
  {
    "text": "cloudwatch again Cloud watch is going to give you a good sense of how much how much how much how many of these",
    "start": "1764360",
    "end": "1770039"
  },
  {
    "text": "resources you've reserved how much you're using and how much is just sitting out there unreserved um you want",
    "start": "1770039",
    "end": "1775279"
  },
  {
    "text": "to get familiar with these These are going to be these are going to tell you how much slack you have in your environment to deploy more deploy more",
    "start": "1775279",
    "end": "1782840"
  },
  {
    "text": "containers um moving up a layer in the stack again",
    "start": "1783559",
    "end": "1788679"
  },
  {
    "text": "we're talking about our infrastructure tooling so we're going to start talking about things like uh file system that we have available again you when you're",
    "start": "1788679",
    "end": "1794919"
  },
  {
    "text": "working with things like um dis usage is not one of the metrics that cloudwatch is returning for you on ECS",
    "start": "1794919",
    "end": "1801559"
  },
  {
    "text": "but also things also a lot of the work metrics that we were talking about earlier the number of queries your your your DB tier or web tier returning um",
    "start": "1801559",
    "end": "1808919"
  },
  {
    "text": "things of that nature so how do we get at those metrics",
    "start": "1808919",
    "end": "1814039"
  },
  {
    "start": "1812000",
    "end": "1812000"
  },
  {
    "text": "well luckily Docker offers a ton you know a myriad of ways to get at these the most popular three are are the ones",
    "start": "1814039",
    "end": "1819720"
  },
  {
    "text": "I'm listing up here uh we have pseudo files and we'll we'll talk about those in a little in a second those give you u",
    "start": "1819720",
    "end": "1825679"
  },
  {
    "text": "a point in time view into things like CPU uh memory some of the io metrics um",
    "start": "1825679",
    "end": "1831440"
  },
  {
    "text": "and and the number of stats available there are growing over time with each release um in the case if you're using",
    "start": "1831440",
    "end": "1837240"
  },
  {
    "text": "ECS and you're using the ECS optimized instances most of the caveats here honestly don't matter to you they're running a modern enough version of",
    "start": "1837240",
    "end": "1842960"
  },
  {
    "text": "Docker that you just don't care um you you can get all of this from from any one of them um they've got the stats",
    "start": "1842960",
    "end": "1848840"
  },
  {
    "text": "command uh and then of course the the docker API that the status the stats API that we were looking at",
    "start": "1848840",
    "end": "1854840"
  },
  {
    "text": "earlier um so what are pseudo files pseudo files are a way to you know get containers get at containers via what",
    "start": "1854840",
    "end": "1860519"
  },
  {
    "text": "look what seemingly feel like files on your file system these are Under CFS um if you've been using Linux for a while",
    "start": "1860519",
    "end": "1866080"
  },
  {
    "text": "you know you know what CFS looks like but basically these paths on your operating system it's going to depend if",
    "start": "1866080",
    "end": "1871200"
  },
  {
    "text": "you're running a buntu versus Red Hat versus Amazon Linux versus other places of where these are being mounted um but",
    "start": "1871200",
    "end": "1876440"
  },
  {
    "text": "you're going to be able to pull up containers on pull up metrics on a on a per container basis uh with this last",
    "start": "1876440",
    "end": "1882320"
  },
  {
    "text": "part here this La this last part here being the",
    "start": "1882320",
    "end": "1887639"
  },
  {
    "text": "container container ID that you fill in um fairly straightforward fairly quick",
    "start": "1887639",
    "end": "1894360"
  },
  {
    "text": "to get at but you're probably not sitting there tailing and catting files all day um so but to give you some examples",
    "start": "1894360",
    "end": "1901080"
  },
  {
    "text": "of things you can do again you just cat these out and you'll start to get things like how much time are you how much time is your are your containers uh you know",
    "start": "1901080",
    "end": "1907799"
  },
  {
    "text": "how how much time are your containers been spending cpui since boot um things like uh how how much time you're",
    "start": "1907799",
    "end": "1913360"
  },
  {
    "text": "spending executing system calls what have you there's lots of great great data here across a number of different files",
    "start": "1913360",
    "end": "1918600"
  },
  {
    "text": "um CPU accounting and and CPU stat are are are two very useful ones to take a look",
    "start": "1918600",
    "end": "1924799"
  },
  {
    "text": "at um throttling comes into play maybe you've uh maybe you scheduled too many resources on that particular host and",
    "start": "1924799",
    "end": "1930440"
  },
  {
    "text": "you're finding yourself um hitting hitting up against those C group limits that you might have set um so again just",
    "start": "1930440",
    "end": "1937159"
  },
  {
    "text": "because we've packed everything so efficiently into those containers on our host like those shipping containers we're talking about earlier doesn't mean",
    "start": "1937159",
    "end": "1942679"
  },
  {
    "text": "you don't have to worry about resources at all um um 's the docker",
    "start": "1942679",
    "end": "1950440"
  },
  {
    "start": "1947000",
    "end": "1947000"
  },
  {
    "text": "API this is going to give you some fairly detailed streaming metrics over HTTP you can access those over report or",
    "start": "1950440",
    "end": "1956120"
  },
  {
    "text": "over a socket um so in this example here I'm showing you how to do it with a Unix socket let you avoid exposing that Port",
    "start": "1956120",
    "end": "1964360"
  },
  {
    "text": "anywhere and this is going to give you a ton of data you'll see that these the numbers run off the screen here um and",
    "start": "1964360",
    "end": "1970120"
  },
  {
    "text": "no matter how how small I made the font and how many times I cut up the image couldn't make that Jan show up there so",
    "start": "1970120",
    "end": "1976799"
  },
  {
    "text": "um you know go back run it on your instances again you're going to be able to pull these down both at a at a higher level but also on a per container level",
    "start": "1976799",
    "end": "1982679"
  },
  {
    "text": "you'll notice a again here this is a container ID at the end there uh and these are streaming these are streaming",
    "start": "1982679",
    "end": "1988639"
  },
  {
    "text": "in so you do this you run this Cur command you're just going to constantly be getting a stream of data coming through um so it's a bit of a fire host",
    "start": "1988639",
    "end": "1996639"
  },
  {
    "text": "to suck on the end of uh and then finally you have the stats the the docker stats command you",
    "start": "1996639",
    "end": "2003559"
  },
  {
    "start": "1999000",
    "end": "1999000"
  },
  {
    "text": "you know similar to top or you may PS if you're used to it you just pop in uh pop in the container ID and you're going to",
    "start": "2003559",
    "end": "2009279"
  },
  {
    "text": "get just a very quick summary uh human readable format very useful in in a quick troubleshooting you know",
    "start": "2009279",
    "end": "2017399"
  },
  {
    "start": "2020000",
    "end": "2020000"
  },
  {
    "text": "sense um but really we don't want to sit again similar as I was saying before you don't want to be sitting around all day",
    "start": "2020080",
    "end": "2025360"
  },
  {
    "text": "tailing and catting and curling things right we got better things to do we want to go uh uh we want to go home we want",
    "start": "2025360",
    "end": "2030960"
  },
  {
    "text": "to be with our families we want to uh write some code for once rather than staring at you know St staring at CIS",
    "start": "2030960",
    "end": "2036639"
  },
  {
    "text": "all day um so we're going to pull in things like sidecar containers to to monitor this for us um so this is an",
    "start": "2036639",
    "end": "2042760"
  },
  {
    "text": "example of what you you know how what a data dog deployment on top of ECS might look like uh really it's the same in any containerized environment deploy data",
    "start": "2042760",
    "end": "2049480"
  },
  {
    "text": "dog as a container next to your applications just as you would any other application in your ECS environment uh or your monitoring tool have it pull up",
    "start": "2049480",
    "end": "2056280"
  },
  {
    "text": "those metrics uh via the stats API spit them back out into your dashboards and your alerts and and what have",
    "start": "2056280",
    "end": "2063200"
  },
  {
    "text": "you um at that level it's be able to pick up metrics from all of your apps uh and all and the bits under underlying",
    "start": "2063200",
    "end": "2071599"
  },
  {
    "start": "2071000",
    "end": "2071000"
  },
  {
    "text": "it um but ideally we want to schedule these in the same way that we would any other any other task in our environment",
    "start": "2071599",
    "end": "2078040"
  },
  {
    "text": "right we have no desire to we we just talked about how you don't want to run those containers all your app containers manually on every host in your",
    "start": "2078040",
    "end": "2083720"
  },
  {
    "text": "environment why would you do that with your monitoring right uh so the challenge here is that uh in at least in",
    "start": "2083720",
    "end": "2089599"
  },
  {
    "text": "ECS at the moment there's not a good way to schedule um to to say I want the container a particular container to run",
    "start": "2089599",
    "end": "2096040"
  },
  {
    "text": "on every single host in my environment at least once right in the way that you would have a demon some of your other",
    "start": "2096040",
    "end": "2101880"
  },
  {
    "text": "demons running whether they be Kon or something else in your environment um and so there's a couple options we can",
    "start": "2101880",
    "end": "2107640"
  },
  {
    "text": "bake it into our images that sort of feels like it's going back a step we just talked about how sort of painful and heavy that was um we can install on",
    "start": "2107640",
    "end": "2114280"
  },
  {
    "text": "each host at provision time you're back to the manual piece especially if you're using something like Auto scaling groups the hosts are coming and going um or the",
    "start": "2114280",
    "end": "2120800"
  },
  {
    "text": "third which is the hack it's it's a little bit of a hack but we choose you know we we we it's it's been quite successful for our for our customers",
    "start": "2120800",
    "end": "2126520"
  },
  {
    "text": "which is to automate this with user scripts and launch",
    "start": "2126520",
    "end": "2130760"
  },
  {
    "text": "configs um so what's that look like right uh we're all familiar with I am and if you're not I I hope you are",
    "start": "2135960",
    "end": "2142160"
  },
  {
    "text": "please don't be using your root accounts for anything but some of the newer features in I am let you delegate privileges to your underlying instance",
    "start": "2142160",
    "end": "2148160"
  },
  {
    "text": "to to your Amazon instances right they can pick up keys on the fly to make API calls for very scoped use uh and in the",
    "start": "2148160",
    "end": "2155319"
  },
  {
    "text": "case here what we're going to go ahead and do is create some policies that let us that let our instances schedule tasks",
    "start": "2155319",
    "end": "2161440"
  },
  {
    "text": "uh and launch our container on boot um so we go ahead and all the orange and",
    "start": "2161440",
    "end": "2166599"
  },
  {
    "text": "beats are variables that you're going to want to fill in but you know for your particular environment uh but we're going to go ahead and create uh create a",
    "start": "2166599",
    "end": "2172880"
  },
  {
    "text": "role attach a policy to it you got a policy on the right hand side here you what you're saying is we can assume",
    "start": "2172880",
    "end": "2180480"
  },
  {
    "text": "uh can assume you know assume a role within our with our instance can assume a role to quickly register container d",
    "start": "2181839",
    "end": "2187680"
  },
  {
    "text": "to The Container um collect some stats about it send some stats about it this is this is so that you can automate this",
    "start": "2187680",
    "end": "2192720"
  },
  {
    "text": "again so that you're not sitting there trying to F so you're not doing two things one don't put keys on those hosts at some point that key will get",
    "start": "2192720",
    "end": "2198160"
  },
  {
    "text": "compromised you're going to want to rotate it now you're figuring out how to go around B you know rebaking Keys all over the place um and it's going to let",
    "start": "2198160",
    "end": "2206040"
  },
  {
    "text": "you automate this all so quite helpful um so we're going to grab again this",
    "start": "2206040",
    "end": "2211319"
  },
  {
    "start": "2209000",
    "end": "2209000"
  },
  {
    "text": "user this is a user script that takes advantage of that uh again this is in this case we're using the uh we're looking at the data dog agent as as the",
    "start": "2211319",
    "end": "2217680"
  },
  {
    "text": "docker container we're pulling down and launching but or or the task that we're launching but really this can work with any container any demonized container",
    "start": "2217680",
    "end": "2224119"
  },
  {
    "text": "that you want uh sorry any container that represents a Damon or a set of services that you want to ensure on on",
    "start": "2224119",
    "end": "2229640"
  },
  {
    "text": "every host um you can just change a couple variables here and again link to this is in the in the notes as well um",
    "start": "2229640",
    "end": "2235760"
  },
  {
    "text": "but you'll see what this does is it's quickly quickly uh spinning up in when you when your instance fires up you're",
    "start": "2235760",
    "end": "2241680"
  },
  {
    "text": "going to use something like Etc RC local first thing it does is going to be start up this task on that host register that",
    "start": "2241680",
    "end": "2247240"
  },
  {
    "text": "Reg reg that instance with ECS as an available uh ECS instance and then run",
    "start": "2247240",
    "end": "2252839"
  },
  {
    "text": "and run your container on it and then of course Auto scale we talked about how much we love Autos",
    "start": "2252839",
    "end": "2258720"
  },
  {
    "text": "scaling and how important that is to us uh and so you're going to want to be able to what you can quickly do is take those profiles and take those user",
    "start": "2258720",
    "end": "2264560"
  },
  {
    "text": "scripts jump them into launch config and use them for your auto scaling just like you would anywhere",
    "start": "2264560",
    "end": "2269880"
  },
  {
    "text": "else um but aren't we still missing layer right in the last couple minutes here uh we've talked about how to monitor the operating system we've",
    "start": "2269880",
    "end": "2275960"
  },
  {
    "text": "talked about how to monitor the cluster we've talked about how operate some of your monitor some of your containers but",
    "start": "2275960",
    "end": "2281200"
  },
  {
    "text": "we still have some open questions so right we we crossed off the sort of the top two where's my container running and",
    "start": "2281200",
    "end": "2286800"
  },
  {
    "start": "2282000",
    "end": "2282000"
  },
  {
    "text": "how much is the capacity of my cluster we have a couple others in there that we've answered as well but we still don't know things like what ports your",
    "start": "2286800",
    "end": "2292359"
  },
  {
    "text": "app running on so if you have something like an enginex status page how do you get to that to get the metrics the port changed every time you launched it uh we",
    "start": "2292359",
    "end": "2298520"
  },
  {
    "text": "still don't know the throughput of your particular app we have the throughput of the cluster I can tell you how much you know how many Network bits came out the",
    "start": "2298520",
    "end": "2303760"
  },
  {
    "text": "you know out the front of the a particular instance or a cluster of instances but I told you how to get it from your individual app",
    "start": "2303760",
    "end": "2310800"
  },
  {
    "text": "um and then we want to get things like response types across versions not just across an app as a whole",
    "start": "2310800",
    "end": "2318040"
  },
  {
    "text": "so uh or or the error rates what have you so this is we still have a bunch of open questions here so there's a couple",
    "start": "2318040",
    "end": "2323680"
  },
  {
    "start": "2323000",
    "end": "2323000"
  },
  {
    "text": "different ways we can go about it this is this is the way that we've we've been quite successful with and something that some of our uh some of our customers are",
    "start": "2323680",
    "end": "2329480"
  },
  {
    "text": "doing today um so if at the top here we have um we",
    "start": "2329480",
    "end": "2338560"
  },
  {
    "text": "have things like our individual applications maybe it's a web app that you wrote or an off-the-shelf component something like redis or uh postgres or",
    "start": "2338560",
    "end": "2346720"
  },
  {
    "text": "some other data you know data store uh we've got all these different running here all these different things running here and they're changing ports all the",
    "start": "2346720",
    "end": "2352160"
  },
  {
    "text": "time we had the container already collecting the host level metrics um but where are these things going to get the ports and and and all",
    "start": "2352160",
    "end": "2358560"
  },
  {
    "text": "the other data about what's going on there so you can pull some of that stuff some of that stuff from from the docker",
    "start": "2358560",
    "end": "2363800"
  },
  {
    "text": "API you can know when a new container launched because you're going to watch those events you can get that from the e s deployment events as well um at a high",
    "start": "2363800",
    "end": "2370760"
  },
  {
    "text": "level that's there uh ECS and Cloud watch again offer some bits of metadata around tags uh but really what we what",
    "start": "2370760",
    "end": "2376880"
  },
  {
    "text": "we've started to do is we've started to drop all of these things all use use service Discovery tools like ETD or",
    "start": "2376880",
    "end": "2382240"
  },
  {
    "text": "console uh or some folks are using zookeeper I mean ETD and console are the two that we support but there's more",
    "start": "2382240",
    "end": "2387359"
  },
  {
    "text": "coming every day uh and and start to store both configuration Snippets in there in templates but also things like",
    "start": "2387359",
    "end": "2392800"
  },
  {
    "text": "uh also pick up when those services are running to let us do auto configuration and identify again what port those",
    "start": "2392800",
    "end": "2398359"
  },
  {
    "text": "things are running on uh at any given point in",
    "start": "2398359",
    "end": "2402560"
  },
  {
    "text": "time um and then of course the most important you know I don't want maybe not the most important but something I think is you know quite important I hope",
    "start": "2404880",
    "end": "2411200"
  },
  {
    "start": "2405000",
    "end": "2405000"
  },
  {
    "text": "I hope you guys are doing as well is you guys you know your applications way better than I do right you might tell me",
    "start": "2411200",
    "end": "2416319"
  },
  {
    "text": "that it's a web app and I'll tell you yes okay 500s versus 200s are important to me but which of those apis is what's",
    "start": "2416319",
    "end": "2422280"
  },
  {
    "text": "is a checkout on your shopping cart or the thing that actually puts money in your bank account I don't know",
    "start": "2422280",
    "end": "2427880"
  },
  {
    "text": "that you know that so uh what we what we started what we've seen with a lot of our customers doing and what we encourage folks to do is to start",
    "start": "2427880",
    "end": "2433680"
  },
  {
    "text": "finding finding those key transactions and instrument instrument your applications with them uh you know we offer a bunch of sdks around doing this",
    "start": "2433680",
    "end": "2440400"
  },
  {
    "text": "but there's also open protoc open open source tooling out there as well as um",
    "start": "2440400",
    "end": "2445760"
  },
  {
    "text": "as standards based tooling out there whether it's whether you're doing this via jmx or wmi or what have you that's you know those are going to be more",
    "start": "2445760",
    "end": "2451720"
  },
  {
    "text": "synchronous calls something that somebody has to connect into you to get but if you can use things like stats D which are eight synchronous you're going to be able to emit those metrics uh over",
    "start": "2451720",
    "end": "2458839"
  },
  {
    "text": "time and send them to us or to some other tooling uh when as as as they're",
    "start": "2458839",
    "end": "2465040"
  },
  {
    "text": "being generated from those transactions again you know your transactions best and really want to do this with",
    "start": "2465040",
    "end": "2471800"
  },
  {
    "text": "again something that's as asynchronous as possible something that's fire and forget uh statsd is fantastic you just send UDP usually to a collector locally",
    "start": "2471800",
    "end": "2478240"
  },
  {
    "text": "on the host again whether that's data dog or not um and send that sends that along back to some sort of a graphing",
    "start": "2478240",
    "end": "2483720"
  },
  {
    "text": "back end U over a more reliable protocol you know like TCP",
    "start": "2483720",
    "end": "2488760"
  },
  {
    "text": "um the reason those Asing Protocols are important is that you don't want your you don't want your applications blocking on some backend service that's waiting to tell you whether or not it",
    "start": "2488760",
    "end": "2494960"
  },
  {
    "text": "received those metrics",
    "start": "2494960",
    "end": "2498440"
  },
  {
    "text": "um so um in general I mean we're coming towards the end here I want to make sure I leave a little bit of time for questions but my goal here is really to",
    "start": "2502119",
    "end": "2508720"
  },
  {
    "text": "help you guys figure out how to stay out of the dogghouse uh even even as you're going into containers and so if I can",
    "start": "2508720",
    "end": "2514160"
  },
  {
    "text": "chat with you a little bit either whether it's here up front or maybe later on down at the data dog booth I'd love to chat with you guys a bit more",
    "start": "2514160",
    "end": "2519560"
  },
  {
    "text": "about what you're using to monitor uh what ECS and containers what types of things you're containerizing uh and just",
    "start": "2519560",
    "end": "2525000"
  },
  {
    "text": "learn about some of the tools that you're using",
    "start": "2525000",
    "end": "2529119"
  },
  {
    "text": "[Applause]",
    "start": "2532160",
    "end": "2537690"
  }
]