[
  {
    "text": "hi everyone welcome to the uh devops continuous integration and deployment on",
    "start": "199",
    "end": "6200"
  },
  {
    "text": "AWS talk uh we're about to get started here I'm Leo janovski I'm a Solutions",
    "start": "6200",
    "end": "11639"
  },
  {
    "text": "architect here at Amazon web services and this is Dave Beck he's the technical",
    "start": "11639",
    "end": "17119"
  },
  {
    "text": "director of the national novel writing month so I'll be telling you about some of our services that we have that will",
    "start": "17119",
    "end": "24439"
  },
  {
    "text": "allow you to do devops and CI and CD on our platform and uh Dave will be telling",
    "start": "24439",
    "end": "29840"
  },
  {
    "text": "you about uh his journey uh kind of into using these tools and into automation",
    "start": "29840",
    "end": "35079"
  },
  {
    "text": "all these good things so first of all what is devops so devops you know it's",
    "start": "35079",
    "end": "41920"
  },
  {
    "text": "kind of become a buzzword so uh there's a lot of different meanings of it and a lot of different use of it but really",
    "start": "41920",
    "end": "47160"
  },
  {
    "text": "what it means is it's the practice of operations and development Engineers participating together in the whole",
    "start": "47160",
    "end": "52800"
  },
  {
    "text": "application life cycle process right so from design to development to modeling and production support so really what it",
    "start": "52800",
    "end": "59199"
  },
  {
    "text": "means to me is is when you have operators who know something about engineering uh and you have Engineers",
    "start": "59199",
    "end": "65040"
  },
  {
    "text": "who know something about operations so you use Automation and you kind of do things uh smarter in a smarter fashion",
    "start": "65040",
    "end": "73240"
  },
  {
    "text": "so an important part of that is to utilize continuous integration what is",
    "start": "73240",
    "end": "78320"
  },
  {
    "text": "continuous integration so continuous integration allows you to make it so that when you have changes to your code",
    "start": "78320",
    "end": "84119"
  },
  {
    "text": "so you've got your code sitting in a a software you know Source control right and as soon as you change a certain",
    "start": "84119",
    "end": "90360"
  },
  {
    "text": "branch of your code um that code will then automatically get pushed whether it's a production or a staging or",
    "start": "90360",
    "end": "96439"
  },
  {
    "text": "however you want to set up that pipeline so it'll only get pushed though it'll only get deployed after passing tests so",
    "start": "96439",
    "end": "101920"
  },
  {
    "text": "we make sure that the code works that it's functioning as it should and then it gets deployed so what this allows you",
    "start": "101920",
    "end": "107920"
  },
  {
    "text": "to do is instead of having your deployments happen uh you know once a year four times a year or you know",
    "start": "107920",
    "end": "114040"
  },
  {
    "text": "having these big monolithic changes you have iterative small changes this makes your changes not scary it makes you able",
    "start": "114040",
    "end": "122320"
  },
  {
    "text": "to uh detect bugs really quickly so uh it's less scary to do deployments and",
    "start": "122320",
    "end": "127680"
  },
  {
    "text": "this encourages you to then automate your deployments if you update your software you know four times a year it's",
    "start": "127680",
    "end": "133720"
  },
  {
    "text": "easy to say okay let's just do this manually it's not a big deal if you update your software 10 times a day at",
    "start": "133720",
    "end": "139599"
  },
  {
    "text": "that point that doesn't scale and you have to uh automate uh your your deployments uh and this allows you to be",
    "start": "139599",
    "end": "146200"
  },
  {
    "text": "much more agile and this allows things to be much more rapid right so what does this actually look like so",
    "start": "146200",
    "end": "152879"
  },
  {
    "text": "you're the developer you're writing your code uh you've got your source code repository so get subversion you know",
    "start": "152879",
    "end": "160080"
  },
  {
    "text": "GitHub uh code commit whatever it is that you prefer to store your source code in and you've got your continuous",
    "start": "160080",
    "end": "166239"
  },
  {
    "text": "integration server so that could be um AWS code pipeline when that comes out it",
    "start": "166239",
    "end": "171519"
  },
  {
    "text": "could be Jenkins it could be Travis CI again whatever you prefer to do your continuous integration with uh and then",
    "start": "171519",
    "end": "177239"
  },
  {
    "text": "you've got your project management uh software so project management software just lets you keep track of your tasks",
    "start": "177239",
    "end": "183120"
  },
  {
    "text": "so what are you working on uh what do you have to do in the next Sprint so on and so forth so you pick your tasks from",
    "start": "183120",
    "end": "190040"
  },
  {
    "text": "the project management server that you're working on you submit your code so you you know you do the actual work",
    "start": "190040",
    "end": "195440"
  },
  {
    "text": "to uh complete your tasks you submit your code um this then kicks off a build",
    "start": "195440",
    "end": "201680"
  },
  {
    "text": "so you it could either automatically kick off a build in your continuous integration uh system or you could have",
    "start": "201680",
    "end": "207120"
  },
  {
    "text": "a recurrent build so you could have it every night let's do a build so you know once a day at 2 a.m. it's going to",
    "start": "207120",
    "end": "213959"
  },
  {
    "text": "rebuild all your software and it's going to run test against it and low test and security test and all that good stuff so",
    "start": "213959",
    "end": "219879"
  },
  {
    "text": "after your build's complete or actually the way the build works is it's going to fetch your code whatever um you know",
    "start": "219879",
    "end": "226000"
  },
  {
    "text": "commit that you want to build out of the um source code repository and it's going to run tests on that code so the tests",
    "start": "226000",
    "end": "232360"
  },
  {
    "text": "are going to be functional tests uh unit tests security tests all that good stuff",
    "start": "232360",
    "end": "238319"
  },
  {
    "text": "and if it if the tests fail it's not going to deploy if the tests pass it's going to deploy so you go to your",
    "start": "238319",
    "end": "245000"
  },
  {
    "text": "project management uh software and you see the results of your test and then assuming the tests uh pass you're going",
    "start": "245000",
    "end": "251599"
  },
  {
    "text": "to actually do a build so that build is going to give you output what is that output well you're going to be building",
    "start": "251599",
    "end": "257880"
  },
  {
    "text": "documentation you're going to be building binaries and packages which is what's actually going deployed onto your",
    "start": "257880",
    "end": "263160"
  },
  {
    "text": "instances to uh deploy the new version of your code and you're going to get notifications so part of devops is to",
    "start": "263160",
    "end": "270560"
  },
  {
    "text": "have visible operations so everybody that's involved in uh you know piece of software from the developers uh to The",
    "start": "270560",
    "end": "277400"
  },
  {
    "text": "Operators uh to project managers they should all get the same notification so they should all know what's going on is",
    "start": "277400",
    "end": "282479"
  },
  {
    "text": "my product up is it fast uh when has the deployment happened uh so that should",
    "start": "282479",
    "end": "288000"
  },
  {
    "text": "all be part of uh this process now something that I've recently seen uh which which is now possible is to do",
    "start": "288000",
    "end": "294680"
  },
  {
    "text": "immutable infrastructure so instead of uh updating the same set of instances with new software you just build new",
    "start": "294680",
    "end": "301840"
  },
  {
    "text": "instances and new infrastructure every single time you deploy so using uh cloud formation you could bring up a",
    "start": "301840",
    "end": "308240"
  },
  {
    "text": "whole new stack so your load balancers your databases your instances uh your vpcs really everything that's your whole",
    "start": "308240",
    "end": "314840"
  },
  {
    "text": "St that comprises your stack you could just build a new copy of it every time you deploy uh and instead of updating",
    "start": "314840",
    "end": "321560"
  },
  {
    "text": "your existing uh instances and updating your existing con um you know uh things that you have running now you could just",
    "start": "321560",
    "end": "327759"
  },
  {
    "text": "bring up new instances through uh building new Amazon machine images or if you're using Docker you could build new",
    "start": "327759",
    "end": "333960"
  },
  {
    "text": "Docker images and bring up new uh Docker containers so this has several benefits",
    "start": "333960",
    "end": "340240"
  },
  {
    "text": "right uh if you're building new infrastructure every time you deploy or for all you know major deploys uh from a",
    "start": "340240",
    "end": "347120"
  },
  {
    "text": "security perspective it's really good right so you have instances that are short-lived so if something happens to",
    "start": "347120",
    "end": "354000"
  },
  {
    "text": "your old instance it gets compromised well they're only around for a few days probably because you're deploying all the time uh so it's a benefit from there",
    "start": "354000",
    "end": "361240"
  },
  {
    "text": "in terms of rolling forward or rolling back uh you're not modifying your old instances your old instances are still",
    "start": "361240",
    "end": "367599"
  },
  {
    "text": "the same they're still sitting there and you're launching new instances so it's easy to go back if something goes wrong",
    "start": "367599",
    "end": "373199"
  },
  {
    "text": "so there's a lot of benefits uh to doing this so what does this actually look like from an architecture point of view",
    "start": "373199",
    "end": "379599"
  },
  {
    "text": "well uh the way it used to look like was this so you would have uh you know you",
    "start": "379599",
    "end": "385199"
  },
  {
    "text": "would store your builds and all your artifacts in S3 ideally so S3 is in object stores so that's the proper uh",
    "start": "385199",
    "end": "391120"
  },
  {
    "text": "place to store those things uh you would have a project management server with whatever software you prefer and that",
    "start": "391120",
    "end": "396919"
  },
  {
    "text": "would be running in an ec2 instance uh You' have your continuous integration uh server that would be like Jenkins or",
    "start": "396919",
    "end": "403240"
  },
  {
    "text": "some other continuous integration software and that also be running on ec2 and then your source code repo could be",
    "start": "403240",
    "end": "408720"
  },
  {
    "text": "just plain git running on ec2 it could be uh GitHub it could be stash it could",
    "start": "408720",
    "end": "414160"
  },
  {
    "text": "be subversion again whatever you prefer and then you know uh you have uh used rout 3 to point to the proper version of",
    "start": "414160",
    "end": "421879"
  },
  {
    "text": "the instance uh when you update it and such so we've recently announced a bunch",
    "start": "421879",
    "end": "427199"
  },
  {
    "text": "of new Services allow you to use AWS managed options for some of these things so uh last reent we launched AWS code",
    "start": "427199",
    "end": "435080"
  },
  {
    "text": "deploy so code deploy is an agent that runs on your instance or as of last week",
    "start": "435080",
    "end": "440160"
  },
  {
    "text": "on premise and it helps you deploy your code um and it scales so you can deploy",
    "start": "440160",
    "end": "445360"
  },
  {
    "text": "on hundreds or thousands of instances if you want uh we also announced two services that are coming out really soon",
    "start": "445360",
    "end": "451520"
  },
  {
    "text": "so there's AWS code commit so code commit allows you to store uh it's private G hosting right and then there's",
    "start": "451520",
    "end": "458240"
  },
  {
    "text": "AWS code pipeline which is AWS managed continuous integration so let's talk about these Services um so previously to",
    "start": "458240",
    "end": "466560"
  },
  {
    "text": "before we announced these Services uh we had these the following tools that are in this chart so we had tools that",
    "start": "466560",
    "end": "472680"
  },
  {
    "text": "allowed you to deploy your code so uh provision your infrastructure and monitor your code so you could use",
    "start": "472680",
    "end": "478039"
  },
  {
    "text": "elastic beanock to bring up um PHP ruby. net python uh node.js Docker containers",
    "start": "478039",
    "end": "485120"
  },
  {
    "text": "so you can bring apps in all these things with a basically a three tier web architecture right you could use AWS",
    "start": "485120",
    "end": "491440"
  },
  {
    "text": "opsw Works to break up your application into layers and Deploy on those layers based uh with Chef recipes you could use",
    "start": "491440",
    "end": "498240"
  },
  {
    "text": "cloud formation to provision uh things above the operating system level so you can provision load balancers and vpcs",
    "start": "498240",
    "end": "504440"
  },
  {
    "text": "and all that kind of stuff and you could use Amazon Cloud watch to Monitor and get metrics and all these things you",
    "start": "504440",
    "end": "510159"
  },
  {
    "text": "have running but what about storing your code building your code testing your code so let's talk about storing your",
    "start": "510159",
    "end": "517159"
  },
  {
    "text": "code um so code commit so code commit again it's private uh git repositories",
    "start": "517159",
    "end": "524000"
  },
  {
    "text": "so it's for private G hosting it's ultimately hosted on S3 uh so one of the nice things about uh code commit is that",
    "start": "524000",
    "end": "530800"
  },
  {
    "text": "it's got full git compatibility I'll show you what that means on the next slide but basically you just use your",
    "start": "530800",
    "end": "536000"
  },
  {
    "text": "existing G binaries you don't really have to change anything out and you could store your source code in your AWS",
    "start": "536000",
    "end": "541360"
  },
  {
    "text": "account running in code commit uh it's got all the good benefits of AWS so it a scalable Service uh it's highly durable",
    "start": "541360",
    "end": "549120"
  },
  {
    "text": "it's got the durability design of S3 uh it's built to be reliable and it's pay",
    "start": "549120",
    "end": "554320"
  },
  {
    "text": "as you go so you pay for however much you use um there's no size limits on the repository so because it's S3 based you",
    "start": "554320",
    "end": "561440"
  },
  {
    "text": "can store really large files and large binary files in your uh code repo and it's going to have nice online code",
    "start": "561440",
    "end": "567880"
  },
  {
    "text": "tools so you'll be able to browse your code code edit your code diff your code online on our console so the way you use",
    "start": "567880",
    "end": "575000"
  },
  {
    "text": "code commit is the same way that you use git right now so in this example here uh",
    "start": "575000",
    "end": "580120"
  },
  {
    "text": "I'm cloning a git repository the git repository is uh the master of it is hosted on code commit uh I'm editing a",
    "start": "580120",
    "end": "588279"
  },
  {
    "text": "readme file I'm committing the readme file uh to my repository and I'm pushing it up to the repository this is really",
    "start": "588279",
    "end": "595480"
  },
  {
    "text": "no different than how I would use git anywhere else so it's really simple to use there 's no uh you know barrier to",
    "start": "595480",
    "end": "601600"
  },
  {
    "text": "entry here uh next let's talk about code pipeline so code pipeline again is adbs",
    "start": "601600",
    "end": "607839"
  },
  {
    "text": "managed uh continuous integration and delivery so you can build a workflow for your code going from when where it's",
    "start": "607839",
    "end": "614959"
  },
  {
    "text": "stored to how it's built to where it's deployed uh through different environments so uh beta staging prod all",
    "start": "614959",
    "end": "622279"
  },
  {
    "text": "that kind of stuff uh it's going to have support for built-in Gates so you can have manual approval Gates and such",
    "start": "622279",
    "end": "627880"
  },
  {
    "text": "custom rules and it's going to integrate with a bunch of third party tools so if for example you use GitHub instead of",
    "start": "627880",
    "end": "633240"
  },
  {
    "text": "code commit you'll be able to store your code in GitHub and a bunch of other third party partners that we have so",
    "start": "633240",
    "end": "639240"
  },
  {
    "text": "this is what it's going to look like uh this is the web console for it so in this example uh I've got my code for my",
    "start": "639240",
    "end": "645480"
  },
  {
    "text": "demo application here stored in GitHub uh that code is going to get built so when I push an update to that code it's",
    "start": "645480",
    "end": "651720"
  },
  {
    "text": "going to trigger a build in uh code Pipeline and it's then going to trigger",
    "start": "651720",
    "end": "657480"
  },
  {
    "text": "deployment in code deploy so then in code deploy I could Target different Auto scaling groups I could have an auto",
    "start": "657480",
    "end": "663160"
  },
  {
    "text": "scaling group for my Beta Fleet for my production Fleet and so on and so forth so lastly let's talk about code",
    "start": "663160",
    "end": "669800"
  },
  {
    "text": "deploy so code deploy allows you to do rolling updates with no downtime uh for",
    "start": "669800",
    "end": "675000"
  },
  {
    "text": "your code so the way code deploy works again is it runs an agent on your instances or on your on premise servers",
    "start": "675000",
    "end": "680720"
  },
  {
    "text": "uh you then set a schedule for how it does the updates so you could update all of your servers or instances at once you",
    "start": "680720",
    "end": "686760"
  },
  {
    "text": "could do them half at a time you could do them one at a time you could do custom schedule so you could really tailor it to your needs of your",
    "start": "686760",
    "end": "693160"
  },
  {
    "text": "application uh it integrates with autoscaling so you could Target a whole autoscaling group as part of your",
    "start": "693160",
    "end": "699440"
  },
  {
    "text": "deployment um and it works with really any application so uh if you you know",
    "start": "699440",
    "end": "704639"
  },
  {
    "text": "take a look at the documentation for code deploy it's got different life cycle events so before install after",
    "start": "704639",
    "end": "710560"
  },
  {
    "text": "install so on so forth and it can copy files it can run shell scripts uh so you",
    "start": "710560",
    "end": "716160"
  },
  {
    "text": "can either use it to completely bootstrap your instances from the beginning or you can use it with existing tools so",
    "start": "716160",
    "end": "721880"
  },
  {
    "text": "if you're using Chef or puppet you can just use code deploy to bootstrap your chef and puppet and get it up and running and then get it talking to your",
    "start": "721880",
    "end": "728519"
  },
  {
    "text": "Chef or puppet servers right so it's pretty flexible so this is what that looks like",
    "start": "728519",
    "end": "734760"
  },
  {
    "text": "uh so this is the web console for code deploy um in this case we're deploying our code for uh WordPress install uh",
    "start": "734760",
    "end": "742279"
  },
  {
    "text": "into uh an S3 bucket and this actually has not been a very successful deployment but it's okay so we succeeded",
    "start": "742279",
    "end": "748040"
  },
  {
    "text": "uh deploying to one inst uh five of them failed four of them are skipped so we can then configure it to",
    "start": "748040",
    "end": "753480"
  },
  {
    "text": "roll back um as you can see it's deploying only to half at a time so even",
    "start": "753480",
    "end": "758639"
  },
  {
    "text": "if you know half of them failed you still have half of your instances that would be running your old code in this case and your website would stay up so",
    "start": "758639",
    "end": "765680"
  },
  {
    "text": "it allows you to do all these kinds of things here so just to reiterate now we have tools that allow you to go from",
    "start": "765680",
    "end": "773160"
  },
  {
    "text": "storing your code to building your code to testing your code to deploying your code provisioning it and monitoring it",
    "start": "773160",
    "end": "778560"
  },
  {
    "text": "all with WS tools also you don't have to manage all this undifferentiated heavy lifting of setting these things up by",
    "start": "778560",
    "end": "786959"
  },
  {
    "text": "yourself so what does this look like now so it's kind of the a similar architecture to what we had before",
    "start": "787560",
    "end": "793480"
  },
  {
    "text": "except now we're using Code commit and code pipeline so these are two less things that we now have to manage in our",
    "start": "793480",
    "end": "798760"
  },
  {
    "text": "own infrastructure so what are some uh",
    "start": "798760",
    "end": "804519"
  },
  {
    "text": "typical pain points that we see uh when you know people are doing continuous integration",
    "start": "804519",
    "end": "809959"
  },
  {
    "text": "so having accurate tests can be hard right you want to make sure that you're building tests uh they're complete",
    "start": "809959",
    "end": "816240"
  },
  {
    "text": "they're actually testing if your app is functional or not um it's often hard on premises to build a really good test",
    "start": "816240",
    "end": "823160"
  },
  {
    "text": "environment right so if you're on premises uh and you want to have an accurate test environment that means it",
    "start": "823160",
    "end": "828920"
  },
  {
    "text": "has to be the same as your actual production environment uh that can be expensive that means you have to double the amount of resources that you have",
    "start": "828920",
    "end": "834800"
  },
  {
    "text": "for production just for testing and you know if you have project that's",
    "start": "834800",
    "end": "840040"
  },
  {
    "text": "shortlived uh that didn't work out well you've now bought all this Hardware that you have to keep just for a test environment so it's really you know a",
    "start": "840040",
    "end": "847399"
  },
  {
    "text": "big problem there but in AWS it's elastic so you can bring up a test environment for a few hours that's",
    "start": "847399",
    "end": "853480"
  },
  {
    "text": "exactly the same as your production environment and then you can turn it off so this solves this problem so adps",
    "start": "853480",
    "end": "860240"
  },
  {
    "text": "again just to reiterate it's elastic so you can spin up 100 instances you can turn off 95 of those instances as you",
    "start": "860240",
    "end": "867440"
  },
  {
    "text": "need uh it's on demand so you get resources whenever you need them and it's pay as you go so you pay only for",
    "start": "867440",
    "end": "873199"
  },
  {
    "text": "what you use it's also a programmable platform so what that means is that the vast majority of our services are built",
    "start": "873199",
    "end": "879000"
  },
  {
    "text": "with apis in mind so because they're built with apis in mind you can automate against them and you can script against",
    "start": "879000",
    "end": "884920"
  },
  {
    "text": "them uh we've got sdks for a lot of major languages so uh we got sdks for",
    "start": "884920",
    "end": "890120"
  },
  {
    "text": "iOS for net node.js python Ruby uh PHP all kinds of other",
    "start": "890120",
    "end": "896320"
  },
  {
    "text": "things and if there's something we don't have an SDK for you can just talk directly to our apis we've also got ID toolkits so if",
    "start": "896320",
    "end": "903360"
  },
  {
    "text": "you're a user of Visual Studio or Eclipse uh you can just install R ID toolkits and it'll make your life a lot",
    "start": "903360",
    "end": "908959"
  },
  {
    "text": "easier we've also got really good command line utilities so uh we if you're a Windows user we've got a really",
    "start": "908959",
    "end": "915600"
  },
  {
    "text": "good set of Powershell utilities and if you're Windows Mac or Linux user uh we've got a unified command line utility",
    "start": "915600",
    "end": "922399"
  },
  {
    "text": "our unified command line utilities is Unified so it's the same thing on all the platforms it's written in Python uh",
    "start": "922399",
    "end": "928480"
  },
  {
    "text": "it's got all all kinds of nice features like auto complete so you can do tab completion to uh really fill in the",
    "start": "928480",
    "end": "934199"
  },
  {
    "text": "commands that are available um you can do um easy scripting on it the default",
    "start": "934199",
    "end": "940480"
  },
  {
    "text": "output on our command line utilities is Json so it's really easy to script against that so you should take",
    "start": "940480",
    "end": "946440"
  },
  {
    "text": "advantage of all these things to automate your uh architecture and infrastructure on AWS so again if you can program it that",
    "start": "946440",
    "end": "954639"
  },
  {
    "text": "means you can automate it so another thing that's important for automation is",
    "start": "954639",
    "end": "959880"
  },
  {
    "text": "to uh you know use the tools that are available to do that so I've certainly seen people use just shell scripts to do",
    "start": "959880",
    "end": "965399"
  },
  {
    "text": "their automation but when you get to a higher scale uh there's a lot of other options out there so there configuration",
    "start": "965399",
    "end": "971160"
  },
  {
    "text": "Management Systems so the popular ones that I've seen out there are salt stack chef and puppet and there's certainly",
    "start": "971160",
    "end": "977040"
  },
  {
    "text": "other ones as well and so configuration Management Systems what they typically do is they get your operating system to",
    "start": "977040",
    "end": "983440"
  },
  {
    "text": "desired state so you describe in recipes or manifests or depends what they're",
    "start": "983440",
    "end": "989040"
  },
  {
    "text": "called depending on your configuration management system that you're using but you basically write scripts that describe how you want your instances to",
    "start": "989040",
    "end": "996360"
  },
  {
    "text": "look like and the system will get those instances to that desired state so ideally when you're making changes to",
    "start": "996360",
    "end": "1001959"
  },
  {
    "text": "your instances instead of sshing in and manually changing things you're just changing your recipes and that gets",
    "start": "1001959",
    "end": "1008160"
  },
  {
    "text": "propagated to the instances and that uh ensures that everything's done programmatically and there's less room for manual error then there's deployment",
    "start": "1008160",
    "end": "1015000"
  },
  {
    "text": "Frameworks so how do you actually deploy your code onto your instances again one strategy is you could just build new",
    "start": "1015000",
    "end": "1020319"
  },
  {
    "text": "instances every time you deploy but if you don't do that you can use AWS code deploy uh you can use elastic beanock",
    "start": "1020319",
    "end": "1026558"
  },
  {
    "text": "opsworks and a lot of other uh thirdparty utilities out there as well then there's infrastructure management",
    "start": "1026559",
    "end": "1032000"
  },
  {
    "text": "so how do you actually manage things above the operating system level so how do you manage your load balancers your",
    "start": "1032000",
    "end": "1038000"
  },
  {
    "text": "networking your databases all that all those other artifacts that comprise your stack so cloud formation allows you to",
    "start": "1038000",
    "end": "1044199"
  },
  {
    "text": "do that and we'll dive a little bit deeper into that uh and then lastly if you're just using containers we now have",
    "start": "1044199",
    "end": "1050480"
  },
  {
    "text": "the Amazon ec2 container service so you can use that to orchestrate running tasks and those tasks are really just",
    "start": "1050480",
    "end": "1056320"
  },
  {
    "text": "runs of containers and then earlier today at the keynote we just announced a bunch of new features for that service and the fact that the container service",
    "start": "1056320",
    "end": "1063200"
  },
  {
    "text": "is now generally available so an important part of when you're",
    "start": "1063200",
    "end": "1069039"
  },
  {
    "text": "spinning up new instances is bootstrapping them right so how do you get from a base instance so an instance",
    "start": "1069039",
    "end": "1074760"
  },
  {
    "text": "that just has the default install of whatever operating system you're using to a desired state so one option is to",
    "start": "1074760",
    "end": "1082200"
  },
  {
    "text": "bake an image so by image I mean either a container or an Amazon machine image and so that can be timec consuming right",
    "start": "1082200",
    "end": "1089200"
  },
  {
    "text": "you're going to set up your instance you're going to install your software on it and you're going to make an Ami or",
    "start": "1089200",
    "end": "1094640"
  },
  {
    "text": "Docker container and now you've got this image that you can just spin up now the nice thing about this is that uh since",
    "start": "1094640",
    "end": "1100280"
  },
  {
    "text": "you're doing all this work up front when you actually have to scale up your images are already pre-baked so they",
    "start": "1100280",
    "end": "1105919"
  },
  {
    "text": "don't have to do anything they just turn on they're ready to go and they come up really fast the other strategy is to do Dynamic",
    "start": "1105919",
    "end": "1111559"
  },
  {
    "text": "configuration so what that means is every time you have to scale up you spin up a new instance that instance runs",
    "start": "1111559",
    "end": "1118320"
  },
  {
    "text": "code deploy or puppet or Chef or some combination of these things and every time you get the latest version of your",
    "start": "1118320",
    "end": "1124799"
  },
  {
    "text": "instance that's dynamically created the downside of this is you know let's say you've got a website and you have to",
    "start": "1124799",
    "end": "1130840"
  },
  {
    "text": "scale up because you've just had a lot of traffic come in well you know if your puppet run takes 20 minutes that's 20",
    "start": "1130840",
    "end": "1136840"
  },
  {
    "text": "minutes that you don't have enough capacity for your website so you know that can be bad so I like a hybrid of",
    "start": "1136840",
    "end": "1142520"
  },
  {
    "text": "these two things so I think you should use Automation and configuration management and all these good things to",
    "start": "1142520",
    "end": "1148240"
  },
  {
    "text": "build your images so you have your continuous integration system building Amis every time you change your code but",
    "start": "1148240",
    "end": "1154240"
  },
  {
    "text": "when you actually have to scale up it already has those Amis that it's going to bring up and it's going to spin up and they're going to be ready to go",
    "start": "1154240",
    "end": "1159960"
  },
  {
    "text": "really fast so let's dive a little bit deeper into cloud formation so again cloud formation",
    "start": "1159960",
    "end": "1167280"
  },
  {
    "text": "allows you to describe a whole whole stack so in this case we've got a RDS instance um an autoscaling group of web",
    "start": "1167280",
    "end": "1173720"
  },
  {
    "text": "servers and a elastic load balcer and so you can describe all that in your cloud formation template and you can launch it",
    "start": "1173720",
    "end": "1180200"
  },
  {
    "text": "programmatically and change it programmatically so I know this is a little bit hard to see but uh basically",
    "start": "1180200",
    "end": "1186520"
  },
  {
    "text": "the the different parts of a cloud formation template are you've got your headers so the headers uh just describe",
    "start": "1186520",
    "end": "1192200"
  },
  {
    "text": "you know it's the comment that describes what your cloud formation template is uh you've got your parameters so the",
    "start": "1192200",
    "end": "1197679"
  },
  {
    "text": "parameters are input so you can use the same template for different things so for example I can",
    "start": "1197679",
    "end": "1203039"
  },
  {
    "text": "have a parameter that um describes which ec2 key pair I want to install my instances uh I've got a parameter that",
    "start": "1203039",
    "end": "1209720"
  },
  {
    "text": "describes what instance size do I want to spin up or what VPC do I want to launch in so that's what the parameter",
    "start": "1209720",
    "end": "1215400"
  },
  {
    "text": "is and then we've got mappings so let's say you've got a golden image of your operating system and your application",
    "start": "1215400",
    "end": "1222360"
  },
  {
    "text": "lives in multiple regions uh well this and every time you copy even if you copy that same image to multiple regions is",
    "start": "1222360",
    "end": "1229000"
  },
  {
    "text": "going to have different Ami IDs so this just allows you to map which Ami IDs you want to use in the various regions then",
    "start": "1229000",
    "end": "1235280"
  },
  {
    "text": "you've got resources so this is probably going to be the biggest section that you're going to work on in the cloud formation template the resources",
    "start": "1235280",
    "end": "1240360"
  },
  {
    "text": "actually describe what this cloud formation template is spinning up in this case we're spinning up an ec2",
    "start": "1240360",
    "end": "1245600"
  },
  {
    "text": "instance uh that is just has a ec2 keyar installed on it um and it uses an Ami",
    "start": "1245600",
    "end": "1252880"
  },
  {
    "text": "based on one of those uh ones described in the mapping section then lastly we have outputs so outputs are uh",
    "start": "1252880",
    "end": "1261039"
  },
  {
    "text": "describing what actually happened after my cloud formation template spun up so what's my instance ID uh what's my uh",
    "start": "1261039",
    "end": "1268919"
  },
  {
    "text": "the URL of my elastic load balancer so on and so forth so let's take a look at",
    "start": "1268919",
    "end": "1274360"
  },
  {
    "text": "some basic examples of cloudformation templates so in this example uh I'm spinning up an RDS instance uh the size",
    "start": "1274360",
    "end": "1282000"
  },
  {
    "text": "of it is going to be uh M1 small uh it's going to have 500 gigs allocated to it it's using my SQL 5.5",
    "start": "1282000",
    "end": "1289360"
  },
  {
    "text": "and it's going to have a really basic username password that you should never use in production uh for good security",
    "start": "1289360",
    "end": "1295640"
  },
  {
    "text": "practices uh but just for an example here um then we have another C foration",
    "start": "1295640",
    "end": "1301720"
  },
  {
    "text": "to playay here so what this is doing is this is bootstrapping your instance so this is going to be a part of a",
    "start": "1301720",
    "end": "1307840"
  },
  {
    "text": "description of a instance resource and it's telling the instance uh to install",
    "start": "1307840",
    "end": "1313360"
  },
  {
    "text": "um the packages I've listed there onto my instance and it's telling you to download a zip file from an S3 bucket",
    "start": "1313360",
    "end": "1319960"
  },
  {
    "text": "and extract that zip file in my web root so just for this basic um bootstrapping",
    "start": "1319960",
    "end": "1326159"
  },
  {
    "text": "I will get you know a MySQL uh client MySQL server Apache PHP and uh a fully",
    "start": "1326159",
    "end": "1333240"
  },
  {
    "text": "baked website bootstrapped really quickly so again in this case they're bootstrapping it on the Fly they're not using pre-baked",
    "start": "1333240",
    "end": "1340200"
  },
  {
    "text": "images so lastly here's an example of parameter so again I'm just asking what",
    "start": "1340200",
    "end": "1345400"
  },
  {
    "text": "ec2 key pair should I use uh so that I can s into my instances and this is what",
    "start": "1345400",
    "end": "1350520"
  },
  {
    "text": "it actually looks like um when you're launching the template on",
    "start": "1350520",
    "end": "1356440"
  },
  {
    "text": "AWS so just to reate uh there's a lot of advantages of cloud formation templates",
    "start": "1356440",
    "end": "1361960"
  },
  {
    "text": "um it's a known configuration so every time you launch the cloud formation template you're going to get the same thing because it's doing the same",
    "start": "1361960",
    "end": "1368000"
  },
  {
    "text": "process to launch it every time uh it's a procedural definition so uh it's Json",
    "start": "1368000",
    "end": "1373640"
  },
  {
    "text": "right so uh it's created programmatically every single time again it's it's going to be consistent it's",
    "start": "1373640",
    "end": "1379360"
  },
  {
    "text": "parameter driven so you can have one cloud formation template that allows you to spin up uh multiple different",
    "start": "1379360",
    "end": "1384679"
  },
  {
    "text": "environments using parameters and it allows you to collaborate so ultimately a cloud information template is just a",
    "start": "1384679",
    "end": "1390640"
  },
  {
    "text": "file you can store that file in your uh source code repository you can share that file so if one of your developers",
    "start": "1390640",
    "end": "1397279"
  },
  {
    "text": "wants to spin up a test environment that's exactly the same as your PR environment you just send them your cloud formation file and they can launch",
    "start": "1397279",
    "end": "1402880"
  },
  {
    "text": "it so it's got a lot of nice things uh that you can do with it so if you want",
    "start": "1402880",
    "end": "1408640"
  },
  {
    "text": "to get started with cloud formation I would highly recommend um looking at our website uh if you look at our cloud",
    "start": "1408640",
    "end": "1414919"
  },
  {
    "text": "formation uh section of our website we've got a bunch of uh demo templates on there so you can do you can spin up a",
    "start": "1414919",
    "end": "1421760"
  },
  {
    "text": "multi easy Drupal install you can do all kinds of advanced things there's a SharePoint uh cloud formation template",
    "start": "1421760",
    "end": "1427600"
  },
  {
    "text": "that allows you to spit up a fully baked SharePoint environment uh so I would usually like when I work on a cloud",
    "start": "1427600",
    "end": "1433120"
  },
  {
    "text": "formation template um I usually take one of these as a starting point and just modify it from there",
    "start": "1433120",
    "end": "1440000"
  },
  {
    "text": "um so because of cloud formation you can now think of versions of not only your application but versions of your actual",
    "start": "1440000",
    "end": "1447240"
  },
  {
    "text": "infrastructure so um you can then again store your cloud formation template with",
    "start": "1447240",
    "end": "1452440"
  },
  {
    "text": "your code and you can have your continuous integration system every time you deploy you're not only deploying",
    "start": "1452440",
    "end": "1457600"
  },
  {
    "text": "your application but you're spinning up a whole new version of your infrastructure which is really really",
    "start": "1457600",
    "end": "1463000"
  },
  {
    "text": "powerful so this allows you to continuously deploy which means again",
    "start": "1463000",
    "end": "1468080"
  },
  {
    "text": "you're going to have small frequent changes into your code and this makes these changes a lot less scary uh and",
    "start": "1468080",
    "end": "1474399"
  },
  {
    "text": "the keys it's iteration right so iteration means you're modifying your system to better meet the expectations",
    "start": "1474399",
    "end": "1479840"
  },
  {
    "text": "of your users so it's not a product launch which is like a this giant monolithic thing right um so let's talk",
    "start": "1479840",
    "end": "1486880"
  },
  {
    "text": "about an example uh from inside of Amazon from Amazon retail about how we do deployments for the retail website so",
    "start": "1486880",
    "end": "1493880"
  },
  {
    "text": "these are some stats from 2011 uh so in 2011 there's about an 11 6 second",
    "start": "1493880",
    "end": "1499120"
  },
  {
    "text": "meantime between deployments on a weekday uh there's a maximum number of about a th deployments in any single",
    "start": "1499120",
    "end": "1504679"
  },
  {
    "text": "hour and about average of 10,000 hosts receiving a deployment at any given time",
    "start": "1504679",
    "end": "1510880"
  },
  {
    "text": "and a maximum of 30,000 hosts receiving a deployment at any given time um we",
    "start": "1510880",
    "end": "1516480"
  },
  {
    "text": "just released new stats actually recently so last year we did 50 million deployments uh in 2014 that means one",
    "start": "1516480",
    "end": "1523640"
  },
  {
    "text": "deployment every 1.5 seconds so again a deployment is not a",
    "start": "1523640",
    "end": "1529600"
  },
  {
    "text": "software launch if you're deploying multiple times a day at this rate you're doing very minor small changes and the",
    "start": "1529600",
    "end": "1536039"
  },
  {
    "text": "and if there's a bug in those changes you can easily just make another deployment and fix them and it's not going to be a",
    "start": "1536039",
    "end": "1542039"
  },
  {
    "text": "disaster so another thing that's really important as part of devops I think is to have data driven architectures so",
    "start": "1542039",
    "end": "1548600"
  },
  {
    "text": "what does that actually mean well let's take a look at what some of our customers are doing um so Etsy they have",
    "start": "1548600",
    "end": "1554200"
  },
  {
    "text": "this in their office they just have this giant screen or giant wall of different TVs with different metrics on them so",
    "start": "1554200",
    "end": "1560640"
  },
  {
    "text": "this could be the availability of their apps how much how many sales they're doing all kinds of useful metrics and",
    "start": "1560640",
    "end": "1567640"
  },
  {
    "text": "this isn't in the area where just the developers are this is in their main floor so everybody can see it so",
    "start": "1567640",
    "end": "1572760"
  },
  {
    "text": "everybody's exposed to metrics and this called visible Ops uh at my previous job",
    "start": "1572760",
    "end": "1578480"
  },
  {
    "text": "uh before Amazon so I used to work at the Obama campaign we had a similar thing we had screens all over the place that showed how many donations we were",
    "start": "1578480",
    "end": "1585159"
  },
  {
    "text": "uh taking in um if would the latency of our website was all these kinds of useful metrics so everybody in our Tech",
    "start": "1585159",
    "end": "1591799"
  },
  {
    "text": "Team developers systems administrators uh product managers uh people who were",
    "start": "1591799",
    "end": "1597120"
  },
  {
    "text": "Executives they all saw what was going on and they all felt that there's this allowed you to not have people throw",
    "start": "1597120",
    "end": "1603120"
  },
  {
    "text": "things over the wall to different and allow there not to be silos so all kinds of positive effects there so at the",
    "start": "1603120",
    "end": "1609679"
  },
  {
    "text": "Obama campaign this is one of the metrics that we had so this is a basically a Time series chart that shows",
    "start": "1609679",
    "end": "1615520"
  },
  {
    "text": "you uh kind of how different systems uh dependent on each other so these are",
    "start": "1615520",
    "end": "1621919"
  },
  {
    "text": "all just different apps but a Slowdown on one app you know could result in slow down in another app so if our identity",
    "start": "1621919",
    "end": "1628440"
  },
  {
    "text": "system was slow that would Ripple through all these other systems and this will allow us to understand and see how",
    "start": "1628440",
    "end": "1633679"
  },
  {
    "text": "our systems impact each other and we can then mitigate uh different kinds of issues so to help you do this kind of",
    "start": "1633679",
    "end": "1641000"
  },
  {
    "text": "monitoring there's a lot of options uh in AWS so the first thing that you should do is take advantage of AWS",
    "start": "1641000",
    "end": "1646440"
  },
  {
    "text": "cloudwatch so cloudwatch gives you all kinds of metrics on our services so for example for ec2 uh you get CPU usage you",
    "start": "1646440",
    "end": "1654360"
  },
  {
    "text": "get uh Network bandwidth in andout all kinds of useful stuff on top of that uh you can inject custom metrics so you can",
    "start": "1654360",
    "end": "1661519"
  },
  {
    "text": "uh you know have whatever metric you want tweets per hour anything that you you can possibly think of you can inject",
    "start": "1661519",
    "end": "1666960"
  },
  {
    "text": "it into cloudwatch um for RDS you get things like number of connection so each service has different kinds of metrics",
    "start": "1666960",
    "end": "1672880"
  },
  {
    "text": "that it gives you you can then create alarms off these metrics you can scale up and down off these metrics",
    "start": "1672880",
    "end": "1678679"
  },
  {
    "text": "you can inject these metrics into your monitoring system get alerts off them all kinds of powerful things also",
    "start": "1678679",
    "end": "1684200"
  },
  {
    "text": "cloudwatch gives you logging so we have a product that we launched last year called cloudwatch logs so there's an",
    "start": "1684200",
    "end": "1689240"
  },
  {
    "text": "agent that runs in your instance and it sends all your logs to cloudwatch and then you can search your logs again you",
    "start": "1689240",
    "end": "1694320"
  },
  {
    "text": "can alert on them do all kinds of stuff on top of that we have a very rich uh ecosystem of partners that gives you",
    "start": "1694320",
    "end": "1700559"
  },
  {
    "text": "application monitoring endpoint monitoring and these are just some examples of uh the options that we have",
    "start": "1700559",
    "end": "1706600"
  },
  {
    "text": "but I encourage you to walk around our vendor booth area uh today and you know see see what some of these options are",
    "start": "1706600",
    "end": "1712480"
  },
  {
    "text": "and see which ones work for you so just to reate continuous integration means that you can then have",
    "start": "1712480",
    "end": "1719640"
  },
  {
    "text": "continuous deployment continuous deployment means you can always experiment the risk of failure is low",
    "start": "1719640",
    "end": "1725440"
  },
  {
    "text": "and the cost of failure is low so you can fail fast instead of having to avoid big failures um you can continuously",
    "start": "1725440",
    "end": "1731919"
  },
  {
    "text": "improve your product and this means that you can innovate on behalf of your customers and this is really powerful so",
    "start": "1731919",
    "end": "1738720"
  },
  {
    "text": "just to reiterate um on AWS you can you can experiment really often uh failing",
    "start": "1738720",
    "end": "1745519"
  },
  {
    "text": "is cheap uh failing is okay because it's a small failure that you can quickly recover from this allows you to innovate",
    "start": "1745519",
    "end": "1751919"
  },
  {
    "text": "all these things on premises are a lot harder and much bigger problems so now",
    "start": "1751919",
    "end": "1757000"
  },
  {
    "text": "I'm going to have Dave Beck come up here and he's going to talk to you about uh National novel writing months journey",
    "start": "1757000",
    "end": "1763240"
  },
  {
    "text": "into devops thank you",
    "start": "1763240",
    "end": "1767880"
  },
  {
    "text": "I found myself thinking about skipping this part of the presentation so I could go back and revise my architecture plan",
    "start": "1772519",
    "end": "1778039"
  },
  {
    "text": "based on what Leo just said so um take everything I say with a grain of salt because I'm now I'm thinking a little",
    "start": "1778039",
    "end": "1783799"
  },
  {
    "text": "bit differently about what we're going to do uh I'm the technical director at National novel writing month also known",
    "start": "1783799",
    "end": "1789320"
  },
  {
    "text": "as nanoro and you can see that comes from the words National novel writing month do you have any rimos in the",
    "start": "1789320",
    "end": "1795120"
  },
  {
    "text": "audience today I know we've got one two awesome I hope you're participating in",
    "start": "1795120",
    "end": "1801200"
  },
  {
    "text": "Camp this year um we are an organization that",
    "start": "1801200",
    "end": "1806279"
  },
  {
    "text": "encourages creativity through writing and every November we host a writing event where people attempt to write a",
    "start": "1806279",
    "end": "1812200"
  },
  {
    "text": "whole novel in the month of November uh last year we had about 100",
    "start": "1812200",
    "end": "1817720"
  },
  {
    "text": "180,000 people toine novels and 40,000 actually finished during that month uh",
    "start": "1817720",
    "end": "1823799"
  },
  {
    "text": "we're not necessarily about publishing we're about creativity and self-empowerment",
    "start": "1823799",
    "end": "1829159"
  },
  {
    "text": "and we found that many of our participants actually go on to have better careers better social lives Etc",
    "start": "1829159",
    "end": "1835360"
  },
  {
    "text": "because they participated in nanor rimo uh this started in 1999 our founder",
    "start": "1835360",
    "end": "1843360"
  },
  {
    "text": "Chris batty was kind of a beach bum he challenged 20 of his friends to go out and write in one month and six of them",
    "start": "1843360",
    "end": "1851159"
  },
  {
    "text": "finished and over time we had well what we call explosive growth I'm sure this",
    "start": "1851159",
    "end": "1856440"
  },
  {
    "text": "is a a a fairly shallow slope for some of you but for us it was explosive",
    "start": "1856440",
    "end": "1861960"
  },
  {
    "text": "because we had no staff and no budget so around about uh 2009 2010 we found",
    "start": "1861960",
    "end": "1869880"
  },
  {
    "text": "that we just could not manage the kind of growth we were having anymore and so um well first let me tell",
    "start": "1869880",
    "end": "1877320"
  },
  {
    "text": "you about our sites we've got four sites right now nanom main running um older",
    "start": "1877320",
    "end": "1882440"
  },
  {
    "text": "versions of rubian rails and my squel uh Camp Neno runs in April and July",
    "start": "1882440",
    "end": "1888799"
  },
  {
    "text": "and then we've got The Young Riders program geared toward uh teens and younger kids and the school room setting",
    "start": "1888799",
    "end": "1895760"
  },
  {
    "text": "in Drupal 5 anybody else here still on Drupal 5 none no that's this is our",
    "start": "1895760",
    "end": "1903200"
  },
  {
    "text": "organization it's all kind of cobbled together and we also have a store on Drupal five well those last two pieces",
    "start": "1903200",
    "end": "1909480"
  },
  {
    "text": "are actually getting replaced with rails this year so uh we get to get off Drupal",
    "start": "1909480",
    "end": "1914600"
  },
  {
    "text": "five and hopefully that saves us some heartache and some server resources as",
    "start": "1914600",
    "end": "1920559"
  },
  {
    "text": "well uh here's a look at the essential problem of nanor rimo we have very",
    "start": "1920559",
    "end": "1926799"
  },
  {
    "text": "little traffic all year and then on November 1st it just",
    "start": "1926799",
    "end": "1932279"
  },
  {
    "text": "explodes and we could not handle this without AWS so what AWS offered us beginning in",
    "start": "1932279",
    "end": "1940880"
  },
  {
    "text": "2011 was the ability to spin up up to about a 100 servers for a day or two and",
    "start": "1940880",
    "end": "1947480"
  },
  {
    "text": "then slowly start spinning them down over the month and that's been great our",
    "start": "1947480",
    "end": "1953360"
  },
  {
    "text": "infrastructure however is a little bit messy um oh this",
    "start": "1953360",
    "end": "1960360"
  },
  {
    "text": "is this is great actually so our site crashed every November 1st from 2003 to",
    "start": "1960360",
    "end": "1966880"
  },
  {
    "text": "2011 and and uh uh we finally migrated in 2012 and we",
    "start": "1966880",
    "end": "1975159"
  },
  {
    "text": "had no more outages the site did not crash and as a result our participants",
    "start": "1975159",
    "end": "1981120"
  },
  {
    "text": "were outraged they saw this as kind of a badge of honor bringing down site was",
    "start": "1981120",
    "end": "1987840"
  },
  {
    "text": "what they love to do every November 1st so I don't know that's kind of a negative about AWS I",
    "start": "1987840",
    "end": "1995039"
  },
  {
    "text": "guess um uh so right now we've got kind of",
    "start": "1995039",
    "end": "2000679"
  },
  {
    "text": "like I said it's all cobbled together we've got uh proxy servers running varnish on Debbie and Weezy",
    "start": "2000679",
    "end": "2008279"
  },
  {
    "text": "uh some Ruby on Rails um resque redis Spinx Usual Suspects",
    "start": "2008279",
    "end": "2015919"
  },
  {
    "text": "right and we're using uh ec2 we're using S3 we're using RDS",
    "start": "2015919",
    "end": "2022440"
  },
  {
    "text": "EBS and some other services as well however in my job as technical",
    "start": "2022440",
    "end": "2028399"
  },
  {
    "text": "director I direct 4 fifths of a rails developer and",
    "start": "2028399",
    "end": "2034320"
  },
  {
    "text": "then there's me uh so we have no resources to manage this and really I",
    "start": "2034320",
    "end": "2040760"
  },
  {
    "text": "could spend all my time working on AWS if I wanted to I don't want to I want to code I want to work on our programs and",
    "start": "2040760",
    "end": "2046840"
  },
  {
    "text": "I'm work work on our mission so we love this new model we want to move to",
    "start": "2046840",
    "end": "2052878"
  },
  {
    "text": "it now here's a look at our instances last year excuse me one",
    "start": "2052879",
    "end": "2058760"
  },
  {
    "text": "moment you can see how things go we actually have a fair number of instances because we're running multiple sites",
    "start": "2061599",
    "end": "2067358"
  },
  {
    "text": "with different code bases so we have to maintain those and proxies and everything Associated and you can see",
    "start": "2067359",
    "end": "2072800"
  },
  {
    "text": "how things uh spike in November and we are just super careful about um pushing",
    "start": "2072800",
    "end": "2080040"
  },
  {
    "text": "up and pulling down instances because our budget is Razor thin uh so we love this new model and",
    "start": "2080040",
    "end": "2088679"
  },
  {
    "text": "the reason is really because we're shifting to a new idea of how we work so",
    "start": "2088679",
    "end": "2096000"
  },
  {
    "text": "in the past we host did this event and we spun up all these instances once and",
    "start": "2096000",
    "end": "2101880"
  },
  {
    "text": "we spun them down and then we sat around for a while and waited till next November did some code work did a deploy",
    "start": "2101880",
    "end": "2108560"
  },
  {
    "text": "once or twice over the year well that's all changing we're trying to actually host instances U of the event throughout",
    "start": "2108560",
    "end": "2115720"
  },
  {
    "text": "the year and so um we need a way to manage our infrastructure so that this",
    "start": "2115720",
    "end": "2122640"
  },
  {
    "text": "does not take all of my week every week to do and so love this new model our",
    "start": "2122640",
    "end": "2129040"
  },
  {
    "text": "goals first of all are save me time on server architecture",
    "start": "2129040",
    "end": "2134440"
  },
  {
    "text": "tasks uh number two increase the up time for all services and we found with our",
    "start": "2134440",
    "end": "2139480"
  },
  {
    "text": "old sort of custom scripted stuff literally written by volunteers over the",
    "start": "2139480",
    "end": "2144760"
  },
  {
    "text": "years things would go down inexplicably um so we need reliable",
    "start": "2144760",
    "end": "2151560"
  },
  {
    "text": "Solutions um to quickly respond to user-driven events this means like",
    "start": "2151560",
    "end": "2156920"
  },
  {
    "text": "emails when somebody finishes their novel uh to reduce ec2 costs through",
    "start": "2156920",
    "end": "2162520"
  },
  {
    "text": "autoscaling meaning that I don't have to project well maybe we're going to get this much traffic spin up the instances",
    "start": "2162520",
    "end": "2169720"
  },
  {
    "text": "and then I'm either wrong and we get 404 errors or I'm wrong the other way and it costs too much so we're moving toward",
    "start": "2169720",
    "end": "2176240"
  },
  {
    "text": "autoscaling as quickly as we can uh to create a faster and more Dynamic email system we're using a very",
    "start": "2176240",
    "end": "2182079"
  },
  {
    "text": "old open source email system called uh PHP list and uh it's just not working very well for us the moment and to",
    "start": "2182079",
    "end": "2189079"
  },
  {
    "text": "improve site search uh for steps goodby Drupal of",
    "start": "2189079",
    "end": "2194359"
  },
  {
    "text": "course um seems an obvious step but um I don't know one of the things I was",
    "start": "2194359",
    "end": "2200119"
  },
  {
    "text": "thinking would really good about Drupal 5 is it must be secure now because who's hacking Drupal",
    "start": "2200119",
    "end": "2206960"
  },
  {
    "text": "five um uh we're going to move our email systems on to Amazon CS very excited",
    "start": "2208160",
    "end": "2214720"
  },
  {
    "text": "about this and uh going to elastic load balancing",
    "start": "2214720",
    "end": "2220800"
  },
  {
    "text": "and auto scaling uh so that I don't have to think about exactly what we're going to need and the system can just work",
    "start": "2220800",
    "end": "2226960"
  },
  {
    "text": "automatically as we spin up new events uh definitely using Code",
    "start": "2226960",
    "end": "2233680"
  },
  {
    "text": "deploy um I'm really want to get code Pipeline and code commit in there but uh",
    "start": "2233680",
    "end": "2241200"
  },
  {
    "text": "those haven't been released yet so as soon as they are that's where we're going most",
    "start": "2241200",
    "end": "2246359"
  },
  {
    "text": "likely and and of course autoscaling it has to happen for",
    "start": "2246359",
    "end": "2251800"
  },
  {
    "text": "us uh one other thing that I just really want to tout is the SNS notifications",
    "start": "2252319",
    "end": "2258359"
  },
  {
    "text": "they've been extremely good for us um basically you know I get a text anytime",
    "start": "2258359",
    "end": "2263640"
  },
  {
    "text": "there's any sort of server based event and we can get on the problem within",
    "start": "2263640",
    "end": "2268800"
  },
  {
    "text": "seconds literally and that's been that's been wonderful so I want to expand that to include all the services that are",
    "start": "2268800",
    "end": "2275319"
  },
  {
    "text": "available to us and looking at uh using Cloud search",
    "start": "2275319",
    "end": "2281599"
  },
  {
    "text": "potentially for search features um we're currently using Sphinx and we probably",
    "start": "2281599",
    "end": "2287160"
  },
  {
    "text": "go in once a week to fix some bug something goes down the server goes down",
    "start": "2287160",
    "end": "2292440"
  },
  {
    "text": "the gem goes down and rubyan rails I'm very curious about Lambda as well but we",
    "start": "2292440",
    "end": "2297640"
  },
  {
    "text": "haven't quite figured out how we might use that and if anybody has any actual stories about that I'd love to hear",
    "start": "2297640",
    "end": "2303200"
  },
  {
    "text": "them and so our architecture then hope hopefully become something like what Leo",
    "start": "2303200",
    "end": "2309480"
  },
  {
    "text": "just showed um but an architecture where I don't have to be an AWS expert anymore",
    "start": "2309480",
    "end": "2317119"
  },
  {
    "text": "I can go off and I can write the Ruby code I can heck I design web pages as",
    "start": "2317119",
    "end": "2324560"
  },
  {
    "text": "well I'm doing all the work for this organization around the tech side and just let this thing run and that's my",
    "start": "2324560",
    "end": "2330760"
  },
  {
    "text": "goal we may not get there but if we do that would be totally lovely and uh I'm",
    "start": "2330760",
    "end": "2337160"
  },
  {
    "text": "sure Leo is going to hear from me in the future about how best to do this should we take some questions yeah",
    "start": "2337160",
    "end": "2345520"
  },
  {
    "text": "so we've got a a bunch of uh time here so there's a microphone up here so if anybody has any questions uh we'd love",
    "start": "2345520",
    "end": "2352119"
  },
  {
    "text": "to take",
    "start": "2352119",
    "end": "2354400"
  },
  {
    "text": "them all right so yeah if you have a question just uh just walk up to the mic up in the middle here",
    "start": "2357760",
    "end": "2365359"
  },
  {
    "text": "he when are when are those um The Code by plan in the other uh tool going to be",
    "start": "2371560",
    "end": "2376960"
  },
  {
    "text": "available uh soon nothing more specific um I I think",
    "start": "2376960",
    "end": "2382640"
  },
  {
    "text": "they're um we announced that reent so some something Quarter Two",
    "start": "2382640",
    "end": "2388318"
  },
  {
    "text": "2015 right yes uh one of the challenges people face in terms of their code",
    "start": "2388560",
    "end": "2393839"
  },
  {
    "text": "deployment and builds is uh the automated secure control of say the utility accounts mm that are used to to",
    "start": "2393839",
    "end": "2401680"
  },
  {
    "text": "uh execute the uh do you have any slides or any thoughts on the solutions that",
    "start": "2401680",
    "end": "2406800"
  },
  {
    "text": "you're going to offer as part of this yeah Matrix so code deploy the way it actually works IAS code deploy Works",
    "start": "2406800",
    "end": "2413119"
  },
  {
    "text": "through IM roles so you don't actually have to have um SSH accounts uh on your",
    "start": "2413119",
    "end": "2418960"
  },
  {
    "text": "instances just for code deploy so that'll help you out there yeah how are you managing things like",
    "start": "2418960",
    "end": "2425839"
  },
  {
    "text": "mapping a particular branch like a feature Branch or particular version Branch to a particular environment mhm",
    "start": "2425839",
    "end": "2432520"
  },
  {
    "text": "so uh one way I've seen this done um uh is uh you have use get uh tags so you",
    "start": "2432520",
    "end": "2440319"
  },
  {
    "text": "have a tag for each version right and then you have your continuous integration system configured to uh you",
    "start": "2440319",
    "end": "2446040"
  },
  {
    "text": "know so operator can go in and say I want to deploy this tag that's a manual process um another way that I've seen",
    "start": "2446040",
    "end": "2452960"
  },
  {
    "text": "this done is through service hooks so GitHub has service hook uh General regular git has um you know host receive",
    "start": "2452960",
    "end": "2460440"
  },
  {
    "text": "hooks right so you have a hook and you can configure the hook in different branches or you can configure the same",
    "start": "2460440",
    "end": "2465800"
  },
  {
    "text": "way so that the branch is a variable so that'll you know kick off your continuous integration system which will",
    "start": "2465800",
    "end": "2471040"
  },
  {
    "text": "then know through that variable which uh what actual like tag or uh Branch it",
    "start": "2471040",
    "end": "2476200"
  },
  {
    "text": "needs to deploy off of last question one last question sure",
    "start": "2476200",
    "end": "2482119"
  },
  {
    "text": "um you had talked earlier about just one of your slides showed like uh test results getting immediately put into",
    "start": "2482119",
    "end": "2488560"
  },
  {
    "text": "like a uh project manage management system we' actually done that using like red mine and having test results get",
    "start": "2488560",
    "end": "2495079"
  },
  {
    "text": "mapped into there be a a uh test management plugin but uh is is Amazon",
    "start": "2495079",
    "end": "2501040"
  },
  {
    "text": "planning on doing anything like that to make that easy to do so I I'm not sure of any specific plans but I know that",
    "start": "2501040",
    "end": "2506359"
  },
  {
    "text": "code pipeline is going to have easy third party integration so it wouldn't surprise me if you'll be able to",
    "start": "2506359",
    "end": "2511920"
  },
  {
    "text": "integrate with one of those tools thanks thank you um thank you by the way sounds",
    "start": "2511920",
    "end": "2517520"
  },
  {
    "text": "like really amazing we're definitely going there tomorrow you tomorrow um which is actually my question uh So",
    "start": "2517520",
    "end": "2523640"
  },
  {
    "text": "currently we have a system with chef and Jenkins and our builds you know maybe like a hundred different builds and 20",
    "start": "2523640",
    "end": "2531240"
  },
  {
    "text": "different Chef recipes do do you do you can you talk a little more about what do you envision migration to be from that",
    "start": "2531240",
    "end": "2539559"
  },
  {
    "text": "continuous integration system today to this yeah so I mean if you're using Chef right now um going to opsworks would be",
    "start": "2539559",
    "end": "2546280"
  },
  {
    "text": "really easy so you can literally take the vast majority of those Chef recipes and just drop them into opsworks so you",
    "start": "2546280",
    "end": "2552440"
  },
  {
    "text": "set up your instances in opsworks you set up your layers so the way Ops works works is you have like you imagine your",
    "start": "2552440",
    "end": "2558359"
  },
  {
    "text": "application you break it them to layers you've got your you know web layer your app layer your load balcer layer",
    "start": "2558359",
    "end": "2564040"
  },
  {
    "text": "whatever your application looks like and then each layer of instances is going to have different life cycle policies and",
    "start": "2564040",
    "end": "2569760"
  },
  {
    "text": "then at those each life cycle event so pre-install po install all those kinds of things uh you can have it uh kick off",
    "start": "2569760",
    "end": "2577599"
  },
  {
    "text": "different Chef recipes so you literally just have to take your Chef recipes and figure out where they go so the migration for your in your case should",
    "start": "2577599",
    "end": "2583680"
  },
  {
    "text": "be pretty easy um I'm not sure what the migration from Jenkins to Cod pipeline is going to look like but I know that c",
    "start": "2583680",
    "end": "2589079"
  },
  {
    "text": "pipeline is actually going to have integration with Jenkins at the beginning so it's yeah it shouldn't be",
    "start": "2589079",
    "end": "2595160"
  },
  {
    "text": "super difficult I would imagine if you don't mind uh um anyway go ahead I",
    "start": "2595160",
    "end": "2601760"
  },
  {
    "text": "forgot I forgot what it hi hi uh so right now we sa for for",
    "start": "2601760",
    "end": "2607240"
  },
  {
    "text": "example we are partnering with external applications sry can you talk closer to the mic can um so we say for example we",
    "start": "2607240",
    "end": "2614800"
  },
  {
    "text": "are partnering with external applications where we cannot spin off multiple instances on the go uh would",
    "start": "2614800",
    "end": "2621040"
  },
  {
    "text": "the code deploy or the code pipeline be smart enough to understand what the environment is like and make decisions",
    "start": "2621040",
    "end": "2627240"
  },
  {
    "text": "accordingly like for example one version is out and the other one cannot coined with the same yeah so um code deploy",
    "start": "2627240",
    "end": "2633640"
  },
  {
    "text": "just last week we announced that it works on premises now as well and code pipeline just plugs into code deploy",
    "start": "2633640",
    "end": "2638760"
  },
  {
    "text": "right so whether your code deploy instances are instances or there are things that are on premises uh it should",
    "start": "2638760",
    "end": "2644520"
  },
  {
    "text": "still work I mean ultimately uh you're kicking off uh you know a web accessible",
    "start": "2644520",
    "end": "2649839"
  },
  {
    "text": "URL so as long as code pipeline can access the agents you should be",
    "start": "2649839",
    "end": "2656079"
  },
  {
    "text": "fine hi hi um is code pipelines like comparing that to the Amazon's internal",
    "start": "2656440",
    "end": "2661720"
  },
  {
    "text": "pipelines U feature is that going to be a slim down version is going to be completely different or uh I'm not all",
    "start": "2661720",
    "end": "2667359"
  },
  {
    "text": "all I knows that it's it's heavily influenced them based on our internal tools so I'm not sure how what the Delta",
    "start": "2667359",
    "end": "2673440"
  },
  {
    "text": "is going to be okay thank thank you all right any other",
    "start": "2673440",
    "end": "2678960"
  },
  {
    "text": "questions there looks like we have hi hi um I had a question about",
    "start": "2678960",
    "end": "2684760"
  },
  {
    "text": "your uh slide about the Amazon internal deploys know where it was deployed every 11 seconds was that is that like AB",
    "start": "2684760",
    "end": "2691079"
  },
  {
    "text": "testing was that deployed everywhere I um so the the way that works is um so",
    "start": "2691079",
    "end": "2696800"
  },
  {
    "text": "you you know Amazon retail practices service R through architecture so amazon.com is not like one monolithic",
    "start": "2696800",
    "end": "2702440"
  },
  {
    "text": "website it's a bunch of microservices essentially so that's why there's so many deploy going on right there's",
    "start": "2702440",
    "end": "2708000"
  },
  {
    "text": "things getting updated but not the same things all the time okay absolutely makes sense cool okay thank",
    "start": "2708000",
    "end": "2714839"
  },
  {
    "text": "you um so my question has to do in with cloud formation templates that look very cool um what happens when some of the",
    "start": "2716720",
    "end": "2724119"
  },
  {
    "text": "things depend on other things for instance if I'm going to set up a DNS with Route 53 I first need to",
    "start": "2724119",
    "end": "2731200"
  },
  {
    "text": "instantiate the instance and see what I what what elastic IP I get before so how does it work so there's different things",
    "start": "2731200",
    "end": "2736960"
  },
  {
    "text": "you can do um cloud formation templates has this concept of nested templates so you could have a separate template for",
    "start": "2736960",
    "end": "2742760"
  },
  {
    "text": "your VPC you got have another template that just for your RDS so you don't have to have like one monolithic template but",
    "start": "2742760",
    "end": "2749240"
  },
  {
    "text": "on top of that uh cloud formation as weight conditions so you can have wait for certain things to complete before",
    "start": "2749240",
    "end": "2754760"
  },
  {
    "text": "doing the next step and it has dependencies as well actually so all right any any more",
    "start": "2754760",
    "end": "2764079"
  },
  {
    "text": "questions all right well thank you",
    "start": "2764079",
    "end": "2768680"
  }
]