[
  {
    "text": "hi",
    "start": "7919",
    "end": "8559"
  },
  {
    "text": "and welcome to part three in the getting",
    "start": "8559",
    "end": "10960"
  },
  {
    "text": "started with",
    "start": "10960",
    "end": "11599"
  },
  {
    "text": "aws iot sitewise video series",
    "start": "11599",
    "end": "14960"
  },
  {
    "text": "my name is dave malone and i am an iot",
    "start": "14960",
    "end": "17199"
  },
  {
    "text": "solutions architect for",
    "start": "17199",
    "end": "18480"
  },
  {
    "text": "aws in the previous videos",
    "start": "18480",
    "end": "22480"
  },
  {
    "text": "we set up our simple assets in the",
    "start": "22480",
    "end": "24560"
  },
  {
    "text": "sitewise console",
    "start": "24560",
    "end": "25920"
  },
  {
    "text": "and then connected to our actual machine",
    "start": "25920",
    "end": "28080"
  },
  {
    "text": "data via opc ua",
    "start": "28080",
    "end": "30640"
  },
  {
    "text": "set up the gateway and gateway connector",
    "start": "30640",
    "end": "33280"
  },
  {
    "text": "and",
    "start": "33280",
    "end": "33760"
  },
  {
    "text": "we're able to see the data flow into",
    "start": "33760",
    "end": "35680"
  },
  {
    "text": "sitewise",
    "start": "35680",
    "end": "37040"
  },
  {
    "text": "now that we have our data in sitewise",
    "start": "37040",
    "end": "39280"
  },
  {
    "text": "we'll dive deeper into asset modeling",
    "start": "39280",
    "end": "41680"
  },
  {
    "text": "creating hierarchies and defining",
    "start": "41680",
    "end": "43840"
  },
  {
    "text": "attributes metrics and transforms",
    "start": "43840",
    "end": "48079"
  },
  {
    "text": "again sitewise assets lets you create",
    "start": "48160",
    "end": "51440"
  },
  {
    "text": "virtual representations of your",
    "start": "51440",
    "end": "53600"
  },
  {
    "text": "industrial operations",
    "start": "53600",
    "end": "55520"
  },
  {
    "text": "to do this the sitewise user flow starts",
    "start": "55520",
    "end": "58320"
  },
  {
    "text": "with models",
    "start": "58320",
    "end": "59359"
  },
  {
    "text": "and within models you have assets in a",
    "start": "59359",
    "end": "62320"
  },
  {
    "text": "previous video",
    "start": "62320",
    "end": "63520"
  },
  {
    "text": "we created a model but when i did that i",
    "start": "63520",
    "end": "66159"
  },
  {
    "text": "did not add any attributes",
    "start": "66159",
    "end": "67920"
  },
  {
    "text": "measurements transforms metrics",
    "start": "67920",
    "end": "70080"
  },
  {
    "text": "hierarchies or tags",
    "start": "70080",
    "end": "71760"
  },
  {
    "text": "so we'll walk through that now to edit",
    "start": "71760",
    "end": "75200"
  },
  {
    "text": "our models",
    "start": "75200",
    "end": "76400"
  },
  {
    "text": "and to add attributes measurements and",
    "start": "76400",
    "end": "78320"
  },
  {
    "text": "transforms",
    "start": "78320",
    "end": "80720"
  },
  {
    "text": "navigate to the models section of the",
    "start": "80720",
    "end": "82560"
  },
  {
    "text": "aws iot sitewise",
    "start": "82560",
    "end": "84400"
  },
  {
    "text": "console and then select your model",
    "start": "84400",
    "end": "88240"
  },
  {
    "text": "and then click edit in the upper right",
    "start": "88240",
    "end": "90240"
  },
  {
    "text": "hand corner",
    "start": "90240",
    "end": "92640"
  },
  {
    "text": "this will open up a similar page as to",
    "start": "92640",
    "end": "94560"
  },
  {
    "text": "when we first created our model",
    "start": "94560",
    "end": "97520"
  },
  {
    "text": "we'll start with attribute definitions",
    "start": "97520",
    "end": "100159"
  },
  {
    "text": "attributes are static values",
    "start": "100159",
    "end": "102000"
  },
  {
    "text": "such as a device serial number or part",
    "start": "102000",
    "end": "104159"
  },
  {
    "text": "number",
    "start": "104159",
    "end": "105439"
  },
  {
    "text": "the name is the same name of the",
    "start": "105439",
    "end": "107680"
  },
  {
    "text": "grouping",
    "start": "107680",
    "end": "108479"
  },
  {
    "text": "again such as serial number next you can",
    "start": "108479",
    "end": "111600"
  },
  {
    "text": "enter a default value",
    "start": "111600",
    "end": "113280"
  },
  {
    "text": "which is what will show up if you don't",
    "start": "113280",
    "end": "115200"
  },
  {
    "text": "edit the value at the asset level",
    "start": "115200",
    "end": "118000"
  },
  {
    "text": "finally you can pick your data type",
    "start": "118000",
    "end": "120399"
  },
  {
    "text": "between string",
    "start": "120399",
    "end": "121600"
  },
  {
    "text": "integer double or boolean if you're",
    "start": "121600",
    "end": "124640"
  },
  {
    "text": "unfamiliar with those data types",
    "start": "124640",
    "end": "126799"
  },
  {
    "text": "click on the learn more link right above",
    "start": "126799",
    "end": "130640"
  },
  {
    "text": "i will keep this value as a string",
    "start": "130640",
    "end": "132959"
  },
  {
    "text": "because my serial numbers contain both",
    "start": "132959",
    "end": "135440"
  },
  {
    "text": "letters and numbers",
    "start": "135440",
    "end": "143840"
  },
  {
    "text": "next we'll set some measurement",
    "start": "148400",
    "end": "150480"
  },
  {
    "text": "definitions",
    "start": "150480",
    "end": "152239"
  },
  {
    "text": "measurements are time stamped raw data",
    "start": "152239",
    "end": "154879"
  },
  {
    "text": "streams",
    "start": "154879",
    "end": "156080"
  },
  {
    "text": "in our case this is where we'll enter",
    "start": "156080",
    "end": "158319"
  },
  {
    "text": "temperature and vibration values",
    "start": "158319",
    "end": "161519"
  },
  {
    "text": "temperature is in fahrenheit",
    "start": "161519",
    "end": "164640"
  },
  {
    "text": "matching the data i'm getting from my",
    "start": "164640",
    "end": "166319"
  },
  {
    "text": "equipment",
    "start": "166319",
    "end": "168080"
  },
  {
    "text": "and again you can choose your data type",
    "start": "168080",
    "end": "171440"
  },
  {
    "text": "of string integer double or boolean",
    "start": "171440",
    "end": "175040"
  },
  {
    "text": "i use double which is a floating point",
    "start": "175040",
    "end": "178000"
  },
  {
    "text": "number value",
    "start": "178000",
    "end": "180720"
  },
  {
    "text": "unit is optional i'll do the same thing",
    "start": "183840",
    "end": "187680"
  },
  {
    "text": "for",
    "start": "187680",
    "end": "188239"
  },
  {
    "text": "the vibration reading",
    "start": "188239",
    "end": "191360"
  },
  {
    "text": "in this case i'll leave unit blank but",
    "start": "191440",
    "end": "193680"
  },
  {
    "text": "i'll also choose double for the data",
    "start": "193680",
    "end": "196840"
  },
  {
    "text": "type",
    "start": "196840",
    "end": "199840"
  },
  {
    "text": "next we have our transforms",
    "start": "203519",
    "end": "207280"
  },
  {
    "text": "these are formulas that map a properties",
    "start": "208159",
    "end": "210319"
  },
  {
    "text": "data stream points",
    "start": "210319",
    "end": "211599"
  },
  {
    "text": "from one form to another a common one is",
    "start": "211599",
    "end": "214720"
  },
  {
    "text": "turning temperature data that comes in",
    "start": "214720",
    "end": "216560"
  },
  {
    "text": "in degrees fahrenheit to celsius or vice",
    "start": "216560",
    "end": "219280"
  },
  {
    "text": "versa",
    "start": "219280",
    "end": "220400"
  },
  {
    "text": "we'll skip this one for now since i want",
    "start": "220400",
    "end": "222560"
  },
  {
    "text": "to operate in fahrenheit",
    "start": "222560",
    "end": "224239"
  },
  {
    "text": "and the gravitational constant for",
    "start": "224239",
    "end": "226239"
  },
  {
    "text": "vibration",
    "start": "226239",
    "end": "228879"
  },
  {
    "text": "next we have our metric definitions",
    "start": "229760",
    "end": "231840"
  },
  {
    "text": "which are again formulas",
    "start": "231840",
    "end": "233760"
  },
  {
    "text": "but this is used to process data points",
    "start": "233760",
    "end": "236080"
  },
  {
    "text": "using aggregation formulas",
    "start": "236080",
    "end": "238000"
  },
  {
    "text": "across all input data points over a",
    "start": "238000",
    "end": "240879"
  },
  {
    "text": "specific time interval",
    "start": "240879",
    "end": "242959"
  },
  {
    "text": "producing a single output data point",
    "start": "242959",
    "end": "246159"
  },
  {
    "text": "a couple of things to note you can only",
    "start": "246159",
    "end": "248560"
  },
  {
    "text": "run metrics on",
    "start": "248560",
    "end": "250000"
  },
  {
    "text": "input properties that are integer or",
    "start": "250000",
    "end": "252080"
  },
  {
    "text": "double type",
    "start": "252080",
    "end": "253120"
  },
  {
    "text": "and you can't change the time interval",
    "start": "253120",
    "end": "255360"
  },
  {
    "text": "of an existing metric",
    "start": "255360",
    "end": "257040"
  },
  {
    "text": "if you want to do that you have to",
    "start": "257040",
    "end": "258799"
  },
  {
    "text": "create a new metric",
    "start": "258799",
    "end": "260479"
  },
  {
    "text": "a common metric is to find the maximum",
    "start": "260479",
    "end": "262720"
  },
  {
    "text": "temperature",
    "start": "262720",
    "end": "263600"
  },
  {
    "text": "or maximum vibration each minute hour",
    "start": "263600",
    "end": "267040"
  },
  {
    "text": "day or week whatever is relevant to the",
    "start": "267040",
    "end": "269520"
  },
  {
    "text": "insight you're trying to achieve",
    "start": "269520",
    "end": "272000"
  },
  {
    "text": "we have provided a full list of",
    "start": "272000",
    "end": "273919"
  },
  {
    "text": "functions and operators",
    "start": "273919",
    "end": "275600"
  },
  {
    "text": "available in the sitewise doc",
    "start": "275600",
    "end": "278240"
  },
  {
    "text": "documentation",
    "start": "278240",
    "end": "281120"
  },
  {
    "text": "finally we can create hierarchies which",
    "start": "281680",
    "end": "284560"
  },
  {
    "text": "are parent-child",
    "start": "284560",
    "end": "285680"
  },
  {
    "text": "relationships between assets of this",
    "start": "285680",
    "end": "288160"
  },
  {
    "text": "model",
    "start": "288160",
    "end": "288800"
  },
  {
    "text": "and assets of another model we'll come",
    "start": "288800",
    "end": "291280"
  },
  {
    "text": "back to this",
    "start": "291280",
    "end": "292479"
  },
  {
    "text": "so skip this for now and click save",
    "start": "292479",
    "end": "297840"
  },
  {
    "text": "now we can move on from models to assets",
    "start": "299360",
    "end": "302560"
  },
  {
    "text": "an asset can be a device a piece of",
    "start": "302560",
    "end": "304960"
  },
  {
    "text": "equipment",
    "start": "304960",
    "end": "305680"
  },
  {
    "text": "or a process that uploads one or more",
    "start": "305680",
    "end": "308240"
  },
  {
    "text": "data streams to the aws cloud",
    "start": "308240",
    "end": "310960"
  },
  {
    "text": "you can configure multiple data streams",
    "start": "310960",
    "end": "313280"
  },
  {
    "text": "to each asset",
    "start": "313280",
    "end": "314560"
  },
  {
    "text": "as we did when we created a temperature",
    "start": "314560",
    "end": "316639"
  },
  {
    "text": "measurement and a vibration measurement",
    "start": "316639",
    "end": "318800"
  },
  {
    "text": "in our previous step to do this at the",
    "start": "318800",
    "end": "321840"
  },
  {
    "text": "asset level",
    "start": "321840",
    "end": "323039"
  },
  {
    "text": "we have to map the temperature data",
    "start": "323039",
    "end": "324800"
  },
  {
    "text": "stream and the vibration data stream",
    "start": "324800",
    "end": "327360"
  },
  {
    "text": "that's coming from our opc ua server",
    "start": "327360",
    "end": "330479"
  },
  {
    "text": "to asset properties to do this we will",
    "start": "330479",
    "end": "333680"
  },
  {
    "text": "go to our assets",
    "start": "333680",
    "end": "335039"
  },
  {
    "text": "in the console and click edit in the top",
    "start": "335039",
    "end": "337919"
  },
  {
    "text": "right corner for each one",
    "start": "337919",
    "end": "341120"
  },
  {
    "text": "you'll notice how that now that we have",
    "start": "342080",
    "end": "344960"
  },
  {
    "text": "modules for attributes and measurement",
    "start": "344960",
    "end": "347280"
  },
  {
    "text": "which we added at the model level",
    "start": "347280",
    "end": "350479"
  },
  {
    "text": "now we can actually go ahead and tell",
    "start": "350479",
    "end": "352720"
  },
  {
    "text": "sitewise which data streams to connect",
    "start": "352720",
    "end": "355280"
  },
  {
    "text": "to which assets in sitewise using the",
    "start": "355280",
    "end": "358639"
  },
  {
    "text": "property alias",
    "start": "358639",
    "end": "360160"
  },
  {
    "text": "the property alias is the path to the",
    "start": "360160",
    "end": "362479"
  },
  {
    "text": "variable",
    "start": "362479",
    "end": "363680"
  },
  {
    "text": "in our case since we connected data from",
    "start": "363680",
    "end": "365919"
  },
  {
    "text": "an opcoa server",
    "start": "365919",
    "end": "367520"
  },
  {
    "text": "using a gateway it's the path to the",
    "start": "367520",
    "end": "370720"
  },
  {
    "text": "variable tag",
    "start": "370720",
    "end": "372080"
  },
  {
    "text": "under the object's node that starts with",
    "start": "372080",
    "end": "374240"
  },
  {
    "text": "a forward slash",
    "start": "374240",
    "end": "376240"
  },
  {
    "text": "if you are ingesting data from other",
    "start": "376240",
    "end": "378319"
  },
  {
    "text": "sources such as iot",
    "start": "378319",
    "end": "380000"
  },
  {
    "text": "core rules or the api you define your",
    "start": "380000",
    "end": "383680"
  },
  {
    "text": "property alias",
    "start": "383680",
    "end": "384720"
  },
  {
    "text": "at the time that you set that up go",
    "start": "384720",
    "end": "387520"
  },
  {
    "text": "ahead and enter in the value for your",
    "start": "387520",
    "end": "390639"
  },
  {
    "text": "property alias",
    "start": "390639",
    "end": "395840"
  },
  {
    "text": "and then click save",
    "start": "408800",
    "end": "411759"
  },
  {
    "text": "we'll repeat the same steps to configure",
    "start": "412639",
    "end": "415919"
  },
  {
    "text": "each of our assets and measurements",
    "start": "415919",
    "end": "417840"
  },
  {
    "text": "for their respective data streams",
    "start": "417840",
    "end": "423840"
  },
  {
    "text": "now we have our three widget machines",
    "start": "464639",
    "end": "467199"
  },
  {
    "text": "each connected to their respective",
    "start": "467199",
    "end": "468800"
  },
  {
    "text": "temperature data streams",
    "start": "468800",
    "end": "470240"
  },
  {
    "text": "and vibration data streams",
    "start": "470240",
    "end": "473599"
  },
  {
    "text": "okay so let's talk about hierarchies",
    "start": "474960",
    "end": "477680"
  },
  {
    "text": "let's say",
    "start": "477680",
    "end": "478319"
  },
  {
    "text": "in our example that these three widget",
    "start": "478319",
    "end": "480560"
  },
  {
    "text": "machines",
    "start": "480560",
    "end": "481360"
  },
  {
    "text": "make up one production line and i have",
    "start": "481360",
    "end": "483680"
  },
  {
    "text": "several other production lines each with",
    "start": "483680",
    "end": "485599"
  },
  {
    "text": "their own widget machines",
    "start": "485599",
    "end": "487360"
  },
  {
    "text": "i set up these relationships in sitewise",
    "start": "487360",
    "end": "489520"
  },
  {
    "text": "using hierarchies",
    "start": "489520",
    "end": "490960"
  },
  {
    "text": "which again create parent-child",
    "start": "490960",
    "end": "492800"
  },
  {
    "text": "relationships between assets in",
    "start": "492800",
    "end": "494560"
  },
  {
    "text": "different asset models",
    "start": "494560",
    "end": "496160"
  },
  {
    "text": "to do this i create a new model which",
    "start": "496160",
    "end": "498960"
  },
  {
    "text": "i'll call production lines",
    "start": "498960",
    "end": "502240"
  },
  {
    "text": "within that model i'll have two assets",
    "start": "502240",
    "end": "505599"
  },
  {
    "text": "in this case production line a and",
    "start": "505599",
    "end": "507360"
  },
  {
    "text": "production line b",
    "start": "507360",
    "end": "510319"
  },
  {
    "text": "next to establish the hierarchy",
    "start": "512240",
    "end": "514399"
  },
  {
    "text": "relationship",
    "start": "514399",
    "end": "515518"
  },
  {
    "text": "between the production line and the",
    "start": "515519",
    "end": "517760"
  },
  {
    "text": "widget machines",
    "start": "517760",
    "end": "519039"
  },
  {
    "text": "i'm going to create an hierarchy",
    "start": "519039",
    "end": "520640"
  },
  {
    "text": "definition",
    "start": "520640",
    "end": "522159"
  },
  {
    "text": "in this case i will call it production",
    "start": "522159",
    "end": "524399"
  },
  {
    "text": "line machines",
    "start": "524399",
    "end": "526399"
  },
  {
    "text": "and i will select the widget machines",
    "start": "526399",
    "end": "529440"
  },
  {
    "text": "as the hierarchy model and click create",
    "start": "529440",
    "end": "532839"
  },
  {
    "text": "model",
    "start": "532839",
    "end": "535839"
  },
  {
    "text": "now that i have established this",
    "start": "539680",
    "end": "540880"
  },
  {
    "text": "hierarchy i can go into my assets",
    "start": "540880",
    "end": "544160"
  },
  {
    "text": "and establish a parent-child",
    "start": "544160",
    "end": "545600"
  },
  {
    "text": "relationship between these asset types",
    "start": "545600",
    "end": "550079"
  },
  {
    "text": "i'll begin by creating a new asset using",
    "start": "556000",
    "end": "559200"
  },
  {
    "text": "my new",
    "start": "559200",
    "end": "559760"
  },
  {
    "text": "model type for production line",
    "start": "559760",
    "end": "563040"
  },
  {
    "text": "and i'll create production line a",
    "start": "563040",
    "end": "566320"
  },
  {
    "text": "and click create",
    "start": "566320",
    "end": "569040"
  },
  {
    "text": "once this asset is done creating i'll be",
    "start": "574080",
    "end": "576959"
  },
  {
    "text": "able to edit it",
    "start": "576959",
    "end": "578480"
  },
  {
    "text": "and move all of my existing widget",
    "start": "578480",
    "end": "580399"
  },
  {
    "text": "machines",
    "start": "580399",
    "end": "581519"
  },
  {
    "text": "under the production line asset",
    "start": "581519",
    "end": "591839"
  },
  {
    "text": "once i've associated all of my existing",
    "start": "605760",
    "end": "607839"
  },
  {
    "text": "widget machine assets",
    "start": "607839",
    "end": "609519"
  },
  {
    "text": "to this asset parent",
    "start": "609519",
    "end": "612800"
  },
  {
    "text": "click save",
    "start": "612800",
    "end": "618560"
  },
  {
    "text": "in the left-hand side i can now see the",
    "start": "618560",
    "end": "621519"
  },
  {
    "text": "hierarchical",
    "start": "621519",
    "end": "622480"
  },
  {
    "text": "relationship because my widget machines",
    "start": "622480",
    "end": "625200"
  },
  {
    "text": "are all associated",
    "start": "625200",
    "end": "626959"
  },
  {
    "text": "with their parent of the production line",
    "start": "626959",
    "end": "629360"
  },
  {
    "text": "a asset",
    "start": "629360",
    "end": "632560"
  },
  {
    "text": "to recap temperature and vibration data",
    "start": "632560",
    "end": "635120"
  },
  {
    "text": "is now flowing into each widget machine",
    "start": "635120",
    "end": "637440"
  },
  {
    "text": "asset",
    "start": "637440",
    "end": "638560"
  },
  {
    "text": "and those assets roll up to their parent",
    "start": "638560",
    "end": "640800"
  },
  {
    "text": "asset the production line",
    "start": "640800",
    "end": "643040"
  },
  {
    "text": "in the next video we'll visualize this",
    "start": "643040",
    "end": "645279"
  },
  {
    "text": "entire virtual representation",
    "start": "645279",
    "end": "647600"
  },
  {
    "text": "of my simple manufacturing facility",
    "start": "647600",
    "end": "650320"
  },
  {
    "text": "there are several ways to visualize data",
    "start": "650320",
    "end": "652160"
  },
  {
    "text": "from sitewise",
    "start": "652160",
    "end": "653279"
  },
  {
    "text": "including sitewise monitor a managed web",
    "start": "653279",
    "end": "655920"
  },
  {
    "text": "application",
    "start": "655920",
    "end": "657120"
  },
  {
    "text": "that is an easy and fast way to get",
    "start": "657120",
    "end": "659360"
  },
  {
    "text": "operational insights from dashboards",
    "start": "659360",
    "end": "661920"
  },
  {
    "text": "you can also use the sitewise api to",
    "start": "661920",
    "end": "664160"
  },
  {
    "text": "receive assets",
    "start": "664160",
    "end": "665760"
  },
  {
    "text": "from the sitewise time series data store",
    "start": "665760",
    "end": "668800"
  },
  {
    "text": "or use a publish subscribe interface to",
    "start": "668800",
    "end": "671920"
  },
  {
    "text": "access your sitewise data",
    "start": "671920",
    "end": "675839"
  }
]