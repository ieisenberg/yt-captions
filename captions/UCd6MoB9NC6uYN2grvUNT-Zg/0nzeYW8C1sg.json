[
  {
    "text": "okay so um so I have now",
    "start": "12820",
    "end": "17200"
  },
  {
    "text": "17 minutes to talk about lambda but",
    "start": "17200",
    "end": "20500"
  },
  {
    "text": "hopefully Verner already did an",
    "start": "20500",
    "end": "22750"
  },
  {
    "text": "introduction of lambda in his in his",
    "start": "22750",
    "end": "24760"
  },
  {
    "text": "keynote so i would start from the from",
    "start": "24760",
    "end": "28600"
  },
  {
    "text": "the problem that that motivated lambda",
    "start": "28600",
    "end": "30400"
  },
  {
    "text": "if you take a simple problem like this",
    "start": "30400",
    "end": "32259"
  },
  {
    "text": "one like let's say you want to create a",
    "start": "32260",
    "end": "34420"
  },
  {
    "text": "service that does the thumbnails of the",
    "start": "34420",
    "end": "37150"
  },
  {
    "text": "images of the picture your users upload",
    "start": "37150",
    "end": "40510"
  },
  {
    "text": "right so so how do you do it if you want",
    "start": "40510",
    "end": "43540"
  },
  {
    "text": "to be if you want to be absolutely",
    "start": "43540",
    "end": "45120"
  },
  {
    "text": "resilience callable and so on so if you",
    "start": "45120",
    "end": "48400"
  },
  {
    "text": "want to follow all the architecture",
    "start": "48400",
    "end": "50680"
  },
  {
    "text": "based practices you're going to end up",
    "start": "50680",
    "end": "52840"
  },
  {
    "text": "with something like this so you are",
    "start": "52840",
    "end": "56230"
  },
  {
    "text": "going to end up with an architecture",
    "start": "56230",
    "end": "57490"
  },
  {
    "text": "where the first fleet of ec2 instances",
    "start": "57490",
    "end": "60579"
  },
  {
    "text": "are going to be used to absorb the",
    "start": "60579",
    "end": "62650"
  },
  {
    "text": "images that you are uploading right",
    "start": "62650",
    "end": "64300"
  },
  {
    "text": "they're going to store the image they",
    "start": "64300",
    "end": "66280"
  },
  {
    "text": "uploaded images into as three because",
    "start": "66280",
    "end": "68290"
  },
  {
    "text": "you don't want to lose the way those",
    "start": "68290",
    "end": "69700"
  },
  {
    "text": "images you want to store them for",
    "start": "69700",
    "end": "71259"
  },
  {
    "text": "high-availability the metadata is going",
    "start": "71259",
    "end": "73600"
  },
  {
    "text": "to be on a small cluster of relational",
    "start": "73600",
    "end": "75850"
  },
  {
    "text": "databases over there in the middle you",
    "start": "75850",
    "end": "78250"
  },
  {
    "text": "see SQ s so it's going to be a cue to",
    "start": "78250",
    "end": "80979"
  },
  {
    "text": "put a message that a new image to be to",
    "start": "80979",
    "end": "84280"
  },
  {
    "text": "be scaled down has arrived and at the",
    "start": "84280",
    "end": "86679"
  },
  {
    "text": "bottom you have another fleet of",
    "start": "86679",
    "end": "87940"
  },
  {
    "text": "instances we're going to work only in",
    "start": "87940",
    "end": "89740"
  },
  {
    "text": "rescaling the images right so for a very",
    "start": "89740",
    "end": "94330"
  },
  {
    "text": "simple problem like rescaling an image",
    "start": "94330",
    "end": "98709"
  },
  {
    "text": "if you want to do it absolutely reliably",
    "start": "98709",
    "end": "102369"
  },
  {
    "text": "and and from a scalable perspective you",
    "start": "102369",
    "end": "105490"
  },
  {
    "text": "have to do a whole bunch of things that",
    "start": "105490",
    "end": "107170"
  },
  {
    "text": "at the end I don't know a lot of",
    "start": "107170",
    "end": "109660"
  },
  {
    "text": "operational overhaul because because you",
    "start": "109660",
    "end": "112390"
  },
  {
    "text": "don't know precisely when the upload is",
    "start": "112390",
    "end": "115330"
  },
  {
    "text": "finished right the only instances that",
    "start": "115330",
    "end": "117640"
  },
  {
    "text": "can know when the when the image has",
    "start": "117640",
    "end": "119170"
  },
  {
    "text": "been received out of ec2 instances but",
    "start": "119170",
    "end": "122080"
  },
  {
    "text": "you don't want to store data there",
    "start": "122080",
    "end": "123429"
  },
  {
    "text": "because if whatever reason an instance",
    "start": "123429",
    "end": "126280"
  },
  {
    "text": "dies or you lose you lose that on this",
    "start": "126280",
    "end": "128860"
  },
  {
    "text": "instance well you have to start again",
    "start": "128860",
    "end": "131980"
  },
  {
    "text": "the whole process so if we take back to",
    "start": "131980",
    "end": "136300"
  },
  {
    "text": "if we go back to what is what is lambda",
    "start": "136300",
    "end": "138910"
  },
  {
    "text": "and",
    "start": "138910",
    "end": "140250"
  },
  {
    "text": "paradigms that has been promoted by",
    "start": "140250",
    "end": "143280"
  },
  {
    "text": "things like languages like Lisp or like",
    "start": "143280",
    "end": "145840"
  },
  {
    "text": "perhaps more recently now scala in java",
    "start": "145840",
    "end": "148270"
  },
  {
    "text": "the idea is to really separate the the",
    "start": "148270",
    "end": "151060"
  },
  {
    "text": "function from data something a concept",
    "start": "151060",
    "end": "152770"
  },
  {
    "text": "that we already see a lot in",
    "start": "152770",
    "end": "154030"
  },
  {
    "text": "architecture when we want to want to",
    "start": "154030",
    "end": "156910"
  },
  {
    "text": "build scalable architectures we want to",
    "start": "156910",
    "end": "158800"
  },
  {
    "text": "have that completely stateless",
    "start": "158800",
    "end": "160000"
  },
  {
    "text": "architecture so from a good perspective",
    "start": "160000",
    "end": "161350"
  },
  {
    "text": "it's the same we try to have code",
    "start": "161350",
    "end": "164260"
  },
  {
    "text": "functions that have the least amount of",
    "start": "164260",
    "end": "167080"
  },
  {
    "text": "state or like for example in objects at",
    "start": "167080",
    "end": "169780"
  },
  {
    "text": "the least amount of other of properties",
    "start": "169780",
    "end": "171910"
  },
  {
    "text": "that keep data as possible and you want",
    "start": "171910",
    "end": "173890"
  },
  {
    "text": "to put all that in in a in code which is",
    "start": "173890",
    "end": "176290"
  },
  {
    "text": "called lambda functions so lambda itself",
    "start": "176290",
    "end": "180250"
  },
  {
    "text": "is a service that executes code based on",
    "start": "180250",
    "end": "184450"
  },
  {
    "text": "events as simple as this right so as we",
    "start": "184450",
    "end": "189910"
  },
  {
    "text": "saw this morning so we can use it for",
    "start": "189910",
    "end": "191200"
  },
  {
    "text": "for many different cases so you have",
    "start": "191200",
    "end": "193060"
  },
  {
    "text": "data that a change in a dynamo DB table",
    "start": "193060",
    "end": "195670"
  },
  {
    "text": "you can trigger a lambda function",
    "start": "195670",
    "end": "197620"
  },
  {
    "text": "exactly as you will do it like in all",
    "start": "197620",
    "end": "200230"
  },
  {
    "text": "school relational databases when you",
    "start": "200230",
    "end": "202390"
  },
  {
    "text": "have like a database triggers and the",
    "start": "202390",
    "end": "205060"
  },
  {
    "text": "database trigger can for example a copy",
    "start": "205060",
    "end": "206950"
  },
  {
    "text": "and change the data to another table",
    "start": "206950",
    "end": "208239"
  },
  {
    "text": "send the notification basically do",
    "start": "208239",
    "end": "210970"
  },
  {
    "text": "whatever you want another example will",
    "start": "210970",
    "end": "212769"
  },
  {
    "text": "be cloud cloud trail so this is a",
    "start": "212769",
    "end": "217810"
  },
  {
    "text": "service that puts logs in a JSON format",
    "start": "217810",
    "end": "221470"
  },
  {
    "text": "of everything that happened on your AWS",
    "start": "221470",
    "end": "223750"
  },
  {
    "text": "account into an amazon s3 bucket right",
    "start": "223750",
    "end": "226750"
  },
  {
    "text": "so you could you could have a nice three",
    "start": "226750",
    "end": "229420"
  },
  {
    "text": "events that every time a file is",
    "start": "229420",
    "end": "231760"
  },
  {
    "text": "received I'm going to trigger a lambda",
    "start": "231760",
    "end": "233320"
  },
  {
    "text": "function and if something something is",
    "start": "233320",
    "end": "235510"
  },
  {
    "text": "weird and this in this data I can send a",
    "start": "235510",
    "end": "237640"
  },
  {
    "text": "notification right or like you can have",
    "start": "237640",
    "end": "240010"
  },
  {
    "text": "like in the IOT custom custom functions",
    "start": "240010",
    "end": "243280"
  },
  {
    "text": "or even like a last one that we that we",
    "start": "243280",
    "end": "246850"
  },
  {
    "text": "saw recently in the AWS blog is you can",
    "start": "246850",
    "end": "249100"
  },
  {
    "text": "write your own auto scaling feature",
    "start": "249100",
    "end": "250799"
  },
  {
    "text": "based on based on the events that you",
    "start": "250799",
    "end": "253900"
  },
  {
    "text": "trigger on lambda so here it's an auto",
    "start": "253900",
    "end": "256030"
  },
  {
    "text": "scaling mechanism that allows you to to",
    "start": "256030",
    "end": "258729"
  },
  {
    "text": "scale containers to scale an Amazon ecs",
    "start": "258729",
    "end": "262150"
  },
  {
    "text": "cluster and neither will remove",
    "start": "262150",
    "end": "263500"
  },
  {
    "text": "containers on this so all those videos",
    "start": "263500",
    "end": "267190"
  },
  {
    "text": "aren't on the year-ago us blog so i want",
    "start": "267190",
    "end": "269950"
  },
  {
    "text": "to focus on the go back to this case",
    "start": "269950",
    "end": "272570"
  },
  {
    "text": "the one that we that we open that is I",
    "start": "272570",
    "end": "275180"
  },
  {
    "text": "put an image into amazon s3 and i need",
    "start": "275180",
    "end": "277890"
  },
  {
    "text": "to create a thumb down from this so so",
    "start": "277890",
    "end": "282720"
  },
  {
    "text": "let's build this so i'm going to go to",
    "start": "282720",
    "end": "284880"
  },
  {
    "text": "my to the management console and i'm",
    "start": "284880",
    "end": "289830"
  },
  {
    "text": "going to go back here in USC's let's say",
    "start": "289830",
    "end": "293420"
  },
  {
    "text": "so lambda is available on on multiple",
    "start": "293420",
    "end": "296850"
  },
  {
    "text": "regions including including Europe so",
    "start": "296850",
    "end": "300030"
  },
  {
    "text": "it's available today in u.s. East us Wes",
    "start": "300030",
    "end": "302340"
  },
  {
    "text": "and and Europe so I'm going to create a",
    "start": "302340",
    "end": "305670"
  },
  {
    "text": "function and this function I'm going to",
    "start": "305670",
    "end": "308460"
  },
  {
    "text": "use it to to create the thumbnails so",
    "start": "308460",
    "end": "312750"
  },
  {
    "text": "I'm going to call it thumbnail ER ok so",
    "start": "312750",
    "end": "319830"
  },
  {
    "text": "now the code lamp that can execute as of",
    "start": "319830",
    "end": "323730"
  },
  {
    "text": "today is either JavaScript with no Jas",
    "start": "323730",
    "end": "326370"
  },
  {
    "text": "or Java code so we are looking at adding",
    "start": "326370",
    "end": "329400"
  },
  {
    "text": "other languages in the future today",
    "start": "329400",
    "end": "331770"
  },
  {
    "text": "those are the languages that are",
    "start": "331770",
    "end": "333030"
  },
  {
    "text": "supported so either I submit to the code",
    "start": "333030",
    "end": "335820"
  },
  {
    "text": "directly like this if I have like a very",
    "start": "335820",
    "end": "337919"
  },
  {
    "text": "simple quick and dirty function that I",
    "start": "337919",
    "end": "339600"
  },
  {
    "text": "want to that I want to add or i can",
    "start": "339600",
    "end": "341640"
  },
  {
    "text": "upload a zip file this is what i'm going",
    "start": "341640",
    "end": "343980"
  },
  {
    "text": "to do and this is very interesting",
    "start": "343980",
    "end": "345600"
  },
  {
    "text": "because a lambda function is executing",
    "start": "345600",
    "end": "350130"
  },
  {
    "text": "within within a closed container so my",
    "start": "350130",
    "end": "352800"
  },
  {
    "text": "zip file can contain for example",
    "start": "352800",
    "end": "354410"
  },
  {
    "text": "statically linked libraries that i need",
    "start": "354410",
    "end": "357930"
  },
  {
    "text": "to do to do any kind of action so i can",
    "start": "357930",
    "end": "359910"
  },
  {
    "text": "add pretty much pretty much anything I",
    "start": "359910",
    "end": "362280"
  },
  {
    "text": "want right so in my situation this is",
    "start": "362280",
    "end": "367380"
  },
  {
    "text": "the function that I'm gonna then I'm",
    "start": "367380",
    "end": "369000"
  },
  {
    "text": "gonna upload it's a it's perhaps a bit",
    "start": "369000",
    "end": "372030"
  },
  {
    "text": "long but in fact it's pretty simple so",
    "start": "372030",
    "end": "374750"
  },
  {
    "text": "for those who don't know JavaScript at",
    "start": "374750",
    "end": "377910"
  },
  {
    "text": "the at the beginning what I'm preparing",
    "start": "377910",
    "end": "379800"
  },
  {
    "text": "is a couple of variables here so I'm",
    "start": "379800",
    "end": "381960"
  },
  {
    "text": "declaring the bucket that is that",
    "start": "381960",
    "end": "385230"
  },
  {
    "text": "received the image the bucket then I'm",
    "start": "385230",
    "end": "387060"
  },
  {
    "text": "gonna use for the output and then I'm",
    "start": "387060",
    "end": "391080"
  },
  {
    "text": "going to do a couple of checks that is",
    "start": "391080",
    "end": "392780"
  },
  {
    "text": "if I'm not having like the same source",
    "start": "392780",
    "end": "395820"
  },
  {
    "text": "and destination bucket if I if the email",
    "start": "395820",
    "end": "399570"
  },
  {
    "text": "the file that are received is a is an",
    "start": "399570",
    "end": "402090"
  },
  {
    "text": "image or not and then I'm going to",
    "start": "402090",
    "end": "403860"
  },
  {
    "text": "execute those actions for",
    "start": "403860",
    "end": "405449"
  },
  {
    "text": "I'm going to get the image from amazon",
    "start": "405449",
    "end": "408960"
  },
  {
    "text": "s3 so I don't load it using the AWS",
    "start": "408960",
    "end": "413039"
  },
  {
    "text": "JavaScript SDK then here I'm going to do",
    "start": "413039",
    "end": "415830"
  },
  {
    "text": "the scaling behind the scenes i'm using",
    "start": "415830",
    "end": "418680"
  },
  {
    "text": "imagemagick the proper function that",
    "start": "418680",
    "end": "421589"
  },
  {
    "text": "exists here is just a call to image",
    "start": "421589",
    "end": "424469"
  },
  {
    "text": "magical very well-known library to to",
    "start": "424469",
    "end": "426930"
  },
  {
    "text": "manipulate images and then at the end",
    "start": "426930",
    "end": "429210"
  },
  {
    "text": "I'm going to put back the result in to s",
    "start": "429210",
    "end": "432330"
  },
  {
    "text": "3 with a with a boot object function and",
    "start": "432330",
    "end": "434839"
  },
  {
    "text": "that's pretty much it at the end i call",
    "start": "434839",
    "end": "437520"
  },
  {
    "text": "contacts done this is the way to to say",
    "start": "437520",
    "end": "440159"
  },
  {
    "text": "to lambda that the function finished",
    "start": "440159",
    "end": "442310"
  },
  {
    "text": "obviously there's other ways to finish a",
    "start": "442310",
    "end": "444479"
  },
  {
    "text": "function i could for example raise an",
    "start": "444479",
    "end": "446400"
  },
  {
    "text": "exception or like a crash my code those",
    "start": "446400",
    "end": "449249"
  },
  {
    "text": "are also like good ways to to finish the",
    "start": "449249",
    "end": "451740"
  },
  {
    "text": "function so so the code is here the",
    "start": "451740",
    "end": "458550"
  },
  {
    "text": "function that I just open is here now I",
    "start": "458550",
    "end": "460529"
  },
  {
    "text": "need to add a couple of libraries that I",
    "start": "460529",
    "end": "462270"
  },
  {
    "text": "use so at the beginning here you see",
    "start": "462270",
    "end": "464550"
  },
  {
    "text": "that I declare a couple of libraries so",
    "start": "464550",
    "end": "468749"
  },
  {
    "text": "the AWS sdk is included by default in",
    "start": "468749",
    "end": "472259"
  },
  {
    "text": "lambda so i just have to install the",
    "start": "472259",
    "end": "475020"
  },
  {
    "text": "icing clip library and the war / on",
    "start": "475020",
    "end": "480419"
  },
  {
    "text": "imagemagick so again for those who don't",
    "start": "480419",
    "end": "483089"
  },
  {
    "text": "know no Jas or or JavaScript what i'm",
    "start": "483089",
    "end": "486419"
  },
  {
    "text": "doing here is using like a package",
    "start": "486419",
    "end": "488459"
  },
  {
    "text": "manager something like a composer in PHP",
    "start": "488459",
    "end": "491159"
  },
  {
    "text": "or gems 404 Ruby for example and now I",
    "start": "491159",
    "end": "496939"
  },
  {
    "text": "have this folder created node node",
    "start": "496939",
    "end": "499949"
  },
  {
    "text": "modules so I'm just going to create like",
    "start": "499949",
    "end": "501479"
  },
  {
    "text": "a zip file from this then I'm going to",
    "start": "501479",
    "end": "504930"
  },
  {
    "text": "put on the on the desktop and I'm going",
    "start": "504930",
    "end": "508139"
  },
  {
    "text": "to to upload the function zip okay so I",
    "start": "508139",
    "end": "517078"
  },
  {
    "text": "have my my bundle it's a theorem the on",
    "start": "517079",
    "end": "520828"
  },
  {
    "text": "the desktop so i just go back here so",
    "start": "520829",
    "end": "526079"
  },
  {
    "text": "it's",
    "start": "526079",
    "end": "527820"
  },
  {
    "text": "okay so so the hunter is the name of the",
    "start": "527820",
    "end": "532250"
  },
  {
    "text": "of the function is going to to execute",
    "start": "532250",
    "end": "534990"
  },
  {
    "text": "it will execute the code you see it here",
    "start": "534990",
    "end": "536880"
  },
  {
    "text": "so this is the name of the main function",
    "start": "536880",
    "end": "538860"
  },
  {
    "text": "that i'm going to call and then I'm",
    "start": "538860",
    "end": "541410"
  },
  {
    "text": "going to add a role to this function so",
    "start": "541410",
    "end": "543540"
  },
  {
    "text": "this is very important because the",
    "start": "543540",
    "end": "545790"
  },
  {
    "text": "number of function as you saw has has",
    "start": "545790",
    "end": "549270"
  },
  {
    "text": "access to the AWS sdk so theoretically a",
    "start": "549270",
    "end": "552660"
  },
  {
    "text": "lambda function can do pretty much",
    "start": "552660",
    "end": "554310"
  },
  {
    "text": "anything you want on your AWS account a",
    "start": "554310",
    "end": "556890"
  },
  {
    "text": "lambda function can create an instance",
    "start": "556890",
    "end": "559260"
  },
  {
    "text": "can kill an instance snapshot volumes",
    "start": "559260",
    "end": "561950"
  },
  {
    "text": "everything you want but you have to give",
    "start": "561950",
    "end": "564450"
  },
  {
    "text": "access to it so here I'm gonna I'm going",
    "start": "564450",
    "end": "567150"
  },
  {
    "text": "to restrict the role i'm going to give",
    "start": "567150",
    "end": "569310"
  },
  {
    "text": "access to the gift to this function only",
    "start": "569310",
    "end": "571290"
  },
  {
    "text": "a very restricted role that only allows",
    "start": "571290",
    "end": "573600"
  },
  {
    "text": "it to to go into a specific s3 buckets",
    "start": "573600",
    "end": "577110"
  },
  {
    "text": "and download and upload images the",
    "start": "577110",
    "end": "579960"
  },
  {
    "text": "function is not even able to create a",
    "start": "579960",
    "end": "581940"
  },
  {
    "text": "bucket or delete a bucket it can only",
    "start": "581940",
    "end": "583860"
  },
  {
    "text": "upload and download images because",
    "start": "583860",
    "end": "585720"
  },
  {
    "text": "that's the only thing I want right and",
    "start": "585720",
    "end": "588570"
  },
  {
    "text": "then this is the way to adjust you are",
    "start": "588570",
    "end": "592230"
  },
  {
    "text": "just a lambda so you you select the",
    "start": "592230",
    "end": "594390"
  },
  {
    "text": "amount of memory that you're going to",
    "start": "594390",
    "end": "595710"
  },
  {
    "text": "that you're going to allocate to this",
    "start": "595710",
    "end": "597480"
  },
  {
    "text": "function so 128 m x is is enough and",
    "start": "597480",
    "end": "602550"
  },
  {
    "text": "then the the timeout so i'm gonna i'm",
    "start": "602550",
    "end": "605490"
  },
  {
    "text": "going to execute this function for",
    "start": "605490",
    "end": "607050"
  },
  {
    "text": "maximum 57 57 seconds I'm going to come",
    "start": "607050",
    "end": "610680"
  },
  {
    "text": "back to this to this later so I'm",
    "start": "610680",
    "end": "613830"
  },
  {
    "text": "creating the function the function is",
    "start": "613830",
    "end": "615870"
  },
  {
    "text": "ready now I'm going to create the",
    "start": "615870",
    "end": "618300"
  },
  {
    "text": "buckets to to put the images so I'm",
    "start": "618300",
    "end": "621060"
  },
  {
    "text": "going to go back to the the console this",
    "start": "621060",
    "end": "622860"
  },
  {
    "text": "time I go to to s3 and i'm going to",
    "start": "622860",
    "end": "629820"
  },
  {
    "text": "create two buckets so tlv they're more",
    "start": "629820",
    "end": "635160"
  },
  {
    "text": "LBD and I'm going to put it here in the",
    "start": "635160",
    "end": "640050"
  },
  {
    "text": "US and i'm going to create another",
    "start": "640050",
    "end": "644129"
  },
  {
    "text": "bucket so the reason why i'm creating",
    "start": "644129",
    "end": "646860"
  },
  {
    "text": "two buckets is is an interesting one as",
    "start": "646860",
    "end": "652310"
  },
  {
    "text": "you saw lambda functions are going to be",
    "start": "652310",
    "end": "654810"
  },
  {
    "text": "triggered by by events every time I put",
    "start": "654810",
    "end": "658560"
  },
  {
    "text": "something into the bucket I'm going to",
    "start": "658560",
    "end": "660000"
  },
  {
    "text": "trigger the lambda function right so if",
    "start": "660000",
    "end": "662670"
  },
  {
    "text": "I'm only using one bucket and if the",
    "start": "662670",
    "end": "664350"
  },
  {
    "text": "result of my thumbnail operation I put",
    "start": "664350",
    "end": "667110"
  },
  {
    "text": "it in the same bucket I'm going to",
    "start": "667110",
    "end": "669120"
  },
  {
    "text": "trigger the function again and I'm going",
    "start": "669120",
    "end": "671040"
  },
  {
    "text": "to do like infinite loops of thumbnails",
    "start": "671040",
    "end": "672959"
  },
  {
    "text": "and thumbnails and so on so of course i",
    "start": "672959",
    "end": "675209"
  },
  {
    "text": "can add a check on my code but i don't",
    "start": "675209",
    "end": "677040"
  },
  {
    "text": "want to do that i mean i just create two",
    "start": "677040",
    "end": "678689"
  },
  {
    "text": "buckets and it's a and it's good enough",
    "start": "678689",
    "end": "680810"
  },
  {
    "text": "so the buckets are empty going back to",
    "start": "680810",
    "end": "683850"
  },
  {
    "text": "lambda now the only the only step is I",
    "start": "683850",
    "end": "687899"
  },
  {
    "text": "have to add the event source for this",
    "start": "687899",
    "end": "690480"
  },
  {
    "text": "for this function so so the event source",
    "start": "690480",
    "end": "695399"
  },
  {
    "text": "here is a is going to be is going to be",
    "start": "695399",
    "end": "697620"
  },
  {
    "text": "a bucket so let me refresh this with the",
    "start": "697620",
    "end": "700980"
  },
  {
    "text": "latest buckets we have and so it was tlv",
    "start": "700980",
    "end": "706850"
  },
  {
    "text": "tlv demo and the event type is put so",
    "start": "706850",
    "end": "710970"
  },
  {
    "text": "every time I put something on these",
    "start": "710970",
    "end": "714360"
  },
  {
    "text": "buckets it's going to trigger the",
    "start": "714360",
    "end": "716220"
  },
  {
    "text": "trigger of the lambda function okay so",
    "start": "716220",
    "end": "720959"
  },
  {
    "text": "going back to the going back to the",
    "start": "720959",
    "end": "722610"
  },
  {
    "text": "bucket you see here there's going to be",
    "start": "722610",
    "end": "724529"
  },
  {
    "text": "a couple of metrics that we're going to",
    "start": "724529",
    "end": "725880"
  },
  {
    "text": "see later metrics that are linked to to",
    "start": "725880",
    "end": "727740"
  },
  {
    "text": "cloud watch so here I'm back on the on",
    "start": "727740",
    "end": "730290"
  },
  {
    "text": "the tlv demo bucket I'm going to upload",
    "start": "730290",
    "end": "733709"
  },
  {
    "text": "to upload an image okay so you always",
    "start": "733709",
    "end": "739079"
  },
  {
    "text": "need pictures of cats when you do when",
    "start": "739079",
    "end": "741000"
  },
  {
    "text": "you do a demo so by the time we upload",
    "start": "741000",
    "end": "746939"
  },
  {
    "text": "the image so if you look at the lambda",
    "start": "746939",
    "end": "750149"
  },
  {
    "text": "documentation in less than a second the",
    "start": "750149",
    "end": "752250"
  },
  {
    "text": "events in lambda is going to be is going",
    "start": "752250",
    "end": "754649"
  },
  {
    "text": "to be triggered so if i don't have an",
    "start": "754649",
    "end": "758550"
  },
  {
    "text": "error",
    "start": "758550",
    "end": "759810"
  },
  {
    "text": "the thumbnail should be already already",
    "start": "759810",
    "end": "763020"
  },
  {
    "text": "created here here it is okay you guys",
    "start": "763020",
    "end": "772500"
  },
  {
    "text": "are really nice I just created a",
    "start": "772500",
    "end": "774060"
  },
  {
    "text": "thumbnail of a cat yeah and you applause",
    "start": "774060",
    "end": "776279"
  },
  {
    "text": "me so later on there's gonna be way",
    "start": "776279",
    "end": "778080"
  },
  {
    "text": "better stuff so this is just a cat right",
    "start": "778080",
    "end": "780290"
  },
  {
    "text": "okay so I think you get the idea so you",
    "start": "780290",
    "end": "784680"
  },
  {
    "text": "are you have all the information here as",
    "start": "784680",
    "end": "787260"
  },
  {
    "text": "well so the last thing I wanted to show",
    "start": "787260",
    "end": "788850"
  },
  {
    "text": "you I don't have much time is the easing",
    "start": "788850",
    "end": "791160"
  },
  {
    "text": "vacation logs because you're gonna have",
    "start": "791160",
    "end": "793650"
  },
  {
    "text": "all the information you need regarding",
    "start": "793650",
    "end": "796110"
  },
  {
    "text": "what happened on your function on on",
    "start": "796110",
    "end": "798120"
  },
  {
    "text": "cloud watch so here I'm going to the",
    "start": "798120",
    "end": "799920"
  },
  {
    "text": "logs and you see for example it's a",
    "start": "799920",
    "end": "803820"
  },
  {
    "text": "little bit at the bottom of the screen",
    "start": "803820",
    "end": "805050"
  },
  {
    "text": "so let me show you this so you see here",
    "start": "805050",
    "end": "808110"
  },
  {
    "text": "the duration was five thousand",
    "start": "808110",
    "end": "810240"
  },
  {
    "text": "milliseconds so five seconds and I",
    "start": "810240",
    "end": "813029"
  },
  {
    "text": "consume apologies for four people at the",
    "start": "813029",
    "end": "815910"
  },
  {
    "text": "bottom but there's a line saying that I",
    "start": "815910",
    "end": "817890"
  },
  {
    "text": "consumed 57 megabytes of memory so this",
    "start": "817890",
    "end": "821220"
  },
  {
    "text": "is what allows you to fine-tune how much",
    "start": "821220",
    "end": "823980"
  },
  {
    "text": "how much capacity you provision to your",
    "start": "823980",
    "end": "826470"
  },
  {
    "text": "to your function because this is the the",
    "start": "826470",
    "end": "829110"
  },
  {
    "text": "billing mechanism that is going to be",
    "start": "829110",
    "end": "830370"
  },
  {
    "text": "used for for lambda okay so quickly",
    "start": "830370",
    "end": "834570"
  },
  {
    "text": "getting back to to to this what I wanted",
    "start": "834570",
    "end": "837330"
  },
  {
    "text": "to show you here is also that there's",
    "start": "837330",
    "end": "839040"
  },
  {
    "text": "absolutely no infrastructure to manage",
    "start": "839040",
    "end": "840720"
  },
  {
    "text": "you write your code and then you use if",
    "start": "840720",
    "end": "843839"
  },
  {
    "text": "your code and you'll give it to lambda",
    "start": "843839",
    "end": "845430"
  },
  {
    "text": "and it works also the best thing is that",
    "start": "845430",
    "end": "847920"
  },
  {
    "text": "there's no magic that we apply on the",
    "start": "847920",
    "end": "849839"
  },
  {
    "text": "code that is if it works on your machine",
    "start": "849839",
    "end": "851460"
  },
  {
    "text": "it's going to work on lambda and you can",
    "start": "851460",
    "end": "853620"
  },
  {
    "text": "also simulate lambda on your machine by",
    "start": "853620",
    "end": "857100"
  },
  {
    "text": "directly giving the giving to the",
    "start": "857100",
    "end": "860070"
  },
  {
    "text": "function the parameters we give so here",
    "start": "860070",
    "end": "862140"
  },
  {
    "text": "if you go back to the lambda console",
    "start": "862140",
    "end": "863880"
  },
  {
    "text": "what I wanted to show you is that you",
    "start": "863880",
    "end": "865980"
  },
  {
    "text": "can test a function yourself by giving",
    "start": "865980",
    "end": "869100"
  },
  {
    "text": "it the information that an s3 bucket",
    "start": "869100",
    "end": "872339"
  },
  {
    "text": "will will give him so this is the the",
    "start": "872339",
    "end": "874620"
  },
  {
    "text": "data here that we give to the function",
    "start": "874620",
    "end": "877830"
  },
  {
    "text": "when we when we call it so you take this",
    "start": "877830",
    "end": "880800"
  },
  {
    "text": "you put it on a file on your laptop and",
    "start": "880800",
    "end": "882630"
  },
  {
    "text": "you can call your lambda function",
    "start": "882630",
    "end": "884370"
  },
  {
    "text": "locally that's exactly what we're going",
    "start": "884370",
    "end": "885990"
  },
  {
    "text": "to do okay so there's a couple of",
    "start": "885990",
    "end": "888510"
  },
  {
    "text": "different projects that you can find",
    "start": "888510",
    "end": "889890"
  },
  {
    "text": "that will help you test your lambda",
    "start": "889890",
    "end": "892620"
  },
  {
    "text": "functions",
    "start": "892620",
    "end": "893220"
  },
  {
    "text": "locally okay the second point is a very",
    "start": "893220",
    "end": "897300"
  },
  {
    "text": "interesting is you have automatic",
    "start": "897300",
    "end": "899250"
  },
  {
    "text": "scaling with a lambda that is you don't",
    "start": "899250",
    "end": "901079"
  },
  {
    "text": "have to think about how much resources",
    "start": "901079",
    "end": "902939"
  },
  {
    "text": "how much knows I'm going to charge it to",
    "start": "902939",
    "end": "905389"
  },
  {
    "text": "to execute my my functions and perhaps",
    "start": "905389",
    "end": "909329"
  },
  {
    "text": "this is one of the things that made a",
    "start": "909329",
    "end": "910889"
  },
  {
    "text": "vernors so excited about lambda and then",
    "start": "910889",
    "end": "913829"
  },
  {
    "text": "this morning you mention it as well is",
    "start": "913829",
    "end": "915750"
  },
  {
    "text": "that I think this is one of the first",
    "start": "915750",
    "end": "919139"
  },
  {
    "text": "true paper used services because if you",
    "start": "919139",
    "end": "922980"
  },
  {
    "text": "think about it amazon ec2 it's more you",
    "start": "922980",
    "end": "925500"
  },
  {
    "text": "pay for what your provision okay because",
    "start": "925500",
    "end": "927990"
  },
  {
    "text": "if i start on ec2 instance and I don't",
    "start": "927990",
    "end": "930029"
  },
  {
    "text": "do nothing with it I'm still paying for",
    "start": "930029",
    "end": "932399"
  },
  {
    "text": "this ec2 instance right but here i'm",
    "start": "932399",
    "end": "934589"
  },
  {
    "text": "only paying for the execution time of my",
    "start": "934589",
    "end": "936930"
  },
  {
    "text": "function so if i only exist my function",
    "start": "936930",
    "end": "939629"
  },
  {
    "text": "once per month or 100 times per second i",
    "start": "939629",
    "end": "944660"
  },
  {
    "text": "only pay for the for the execution time",
    "start": "944660",
    "end": "947040"
  },
  {
    "text": "so this is true pay for her pay for what",
    "start": "947040",
    "end": "949560"
  },
  {
    "text": "you use ok a better example because this",
    "start": "949560",
    "end": "952709"
  },
  {
    "text": "was just just just creating a thumbnail",
    "start": "952709",
    "end": "958319"
  },
  {
    "text": "so so let's let's see for example a",
    "start": "958319",
    "end": "960509"
  },
  {
    "text": "photo sharing application that works",
    "start": "960509",
    "end": "962220"
  },
  {
    "text": "without any end ec2 instance because",
    "start": "962220",
    "end": "964769"
  },
  {
    "text": "that's the exciting thing that lambda",
    "start": "964769",
    "end": "966350"
  },
  {
    "text": "allows you is to create server less",
    "start": "966350",
    "end": "969139"
  },
  {
    "text": "infrastructures so this is the high",
    "start": "969139",
    "end": "972120"
  },
  {
    "text": "level architecture you see at the top",
    "start": "972120",
    "end": "973709"
  },
  {
    "text": "you have the lambda function with the",
    "start": "973709",
    "end": "976410"
  },
  {
    "text": "role you see the resource bucket where",
    "start": "976410",
    "end": "980819"
  },
  {
    "text": "we're going to have the images here the",
    "start": "980819",
    "end": "982379"
  },
  {
    "text": "thumbnail bucket I'm gonna create a",
    "start": "982379",
    "end": "984930"
  },
  {
    "text": "dynamo DB table for the list of my items",
    "start": "984930",
    "end": "987029"
  },
  {
    "text": "and the website is going to be",
    "start": "987029",
    "end": "990480"
  },
  {
    "text": "statically host on an s3 bucket so to",
    "start": "990480",
    "end": "992639"
  },
  {
    "text": "start I upload the the HTML files of my",
    "start": "992639",
    "end": "996180"
  },
  {
    "text": "website on this on this bucket then when",
    "start": "996180",
    "end": "1000079"
  },
  {
    "text": "the browser comes and does the request",
    "start": "1000079",
    "end": "1002029"
  },
  {
    "text": "is redirected to the to the page with",
    "start": "1002029",
    "end": "1005059"
  },
  {
    "text": "the route 53 so it gets the HTML page",
    "start": "1005059",
    "end": "1009160"
  },
  {
    "text": "gets the JavaScript code with the",
    "start": "1009160",
    "end": "1013149"
  },
  {
    "text": "JavaScript SDK that is on the browser is",
    "start": "1013149",
    "end": "1016550"
  },
  {
    "text": "going to do an API call to dynamodb to",
    "start": "1016550",
    "end": "1018980"
  },
  {
    "text": "get the list of the images for this",
    "start": "1018980",
    "end": "1020839"
  },
  {
    "text": "specific user",
    "start": "1020839",
    "end": "1022430"
  },
  {
    "text": "so now I get I can deal the HTML code",
    "start": "1022430",
    "end": "1025428"
  },
  {
    "text": "and I just have to download now the",
    "start": "1025429",
    "end": "1027380"
  },
  {
    "text": "thumbnails from the the buckets and now",
    "start": "1027380",
    "end": "1030260"
  },
  {
    "text": "you have the gas right but just one",
    "start": "1030260",
    "end": "1034938"
  },
  {
    "text": "thing that I didn't mention is what",
    "start": "1034939",
    "end": "1037010"
  },
  {
    "text": "about the authentication right because",
    "start": "1037010",
    "end": "1039199"
  },
  {
    "text": "you can't do API calls on DynamoDB",
    "start": "1039199",
    "end": "1041630"
  },
  {
    "text": "without being authenticated so you could",
    "start": "1041630",
    "end": "1045050"
  },
  {
    "text": "also do a completely surface",
    "start": "1045050",
    "end": "1048500"
  },
  {
    "text": "authentication mechanism and I'm running",
    "start": "1048500",
    "end": "1051470"
  },
  {
    "text": "a little bit out of time but this is",
    "start": "1051470",
    "end": "1052820"
  },
  {
    "text": "already implemented by Daniel oh so",
    "start": "1052820",
    "end": "1055460"
  },
  {
    "text": "daniel is going to go and come later",
    "start": "1055460",
    "end": "1057590"
  },
  {
    "text": "today is going to do a couple of demos",
    "start": "1057590",
    "end": "1059000"
  },
  {
    "text": "here he has a project called lambda out",
    "start": "1059000",
    "end": "1062390"
  },
  {
    "text": "on on github and it's a an",
    "start": "1062390",
    "end": "1066380"
  },
  {
    "text": "authentication mechanism that is",
    "start": "1066380",
    "end": "1068000"
  },
  {
    "text": "completely based on lambda and dynamo dB",
    "start": "1068000",
    "end": "1070420"
  },
  {
    "text": "so just to do you a quick demo this",
    "start": "1070420",
    "end": "1075429"
  },
  {
    "text": "apologies for the design of the UI we",
    "start": "1075429",
    "end": "1078290"
  },
  {
    "text": "did it very very quickly with a with",
    "start": "1078290",
    "end": "1080929"
  },
  {
    "text": "common line tools so this is a static",
    "start": "1080929",
    "end": "1083600"
  },
  {
    "text": "HTML page with JavaScript embedded on it",
    "start": "1083600",
    "end": "1086030"
  },
  {
    "text": "like very very old school JavaScript so",
    "start": "1086030",
    "end": "1089780"
  },
  {
    "text": "here I'm just giving my credentials and",
    "start": "1089780",
    "end": "1096010"
  },
  {
    "text": "this is checking on a dynamo DB DB table",
    "start": "1096010",
    "end": "1100270"
  },
  {
    "text": "now a lambda function received receive",
    "start": "1100270",
    "end": "1103190"
  },
  {
    "text": "the call check on my story checked on a",
    "start": "1103190",
    "end": "1106520"
  },
  {
    "text": "dynamo DB table let me me refresh it and",
    "start": "1106520",
    "end": "1109150"
  },
  {
    "text": "now it's going to use another service",
    "start": "1109150",
    "end": "1112100"
  },
  {
    "text": "called cognito to get an identity so the",
    "start": "1112100",
    "end": "1115640"
  },
  {
    "text": "identity will give me credentials and",
    "start": "1115640",
    "end": "1117800"
  },
  {
    "text": "those credentials are going to allow me",
    "start": "1117800",
    "end": "1120470"
  },
  {
    "text": "to do the query on DynamoDB so you see",
    "start": "1120470",
    "end": "1123290"
  },
  {
    "text": "now i'm logged with the hash identity",
    "start": "1123290",
    "end": "1126650"
  },
  {
    "text": "and now that's it so the the images for",
    "start": "1126650",
    "end": "1130760"
  },
  {
    "text": "this users are being been refreshed and",
    "start": "1130760",
    "end": "1133460"
  },
  {
    "text": "and downloaded that dynamically so so",
    "start": "1133460",
    "end": "1137150"
  },
  {
    "text": "this is a complete architecture that is",
    "start": "1137150",
    "end": "1138730"
  },
  {
    "text": "that is serverless and that runs",
    "start": "1138730",
    "end": "1141290"
  },
  {
    "text": "completely on the browser and if it runs",
    "start": "1141290",
    "end": "1143270"
  },
  {
    "text": "on the browser you can have exactly the",
    "start": "1143270",
    "end": "1144679"
  },
  {
    "text": "same architecture for mobile",
    "start": "1144679",
    "end": "1145760"
  },
  {
    "text": "applications by using the database",
    "start": "1145760",
    "end": "1147830"
  },
  {
    "text": "Mobile SDK just one minute I wanted to",
    "start": "1147830",
    "end": "1151700"
  },
  {
    "text": "finish with the widow pricing",
    "start": "1151700",
    "end": "1153480"
  },
  {
    "text": "the granularity of the pricing is by 100",
    "start": "1153480",
    "end": "1156179"
  },
  {
    "text": "milliseconds so even for very very",
    "start": "1156179",
    "end": "1158580"
  },
  {
    "text": "simple things like for example checking",
    "start": "1158580",
    "end": "1160740"
  },
  {
    "text": "if an email address is valid it makes a",
    "start": "1160740",
    "end": "1163440"
  },
  {
    "text": "lot of sense to use lambda the feature",
    "start": "1163440",
    "end": "1165720"
  },
  {
    "text": "is quite generous you see that the first",
    "start": "1165720",
    "end": "1167760"
  },
  {
    "text": "million requests per month are free and",
    "start": "1167760",
    "end": "1170220"
  },
  {
    "text": "then it's pretty much twenty cents per",
    "start": "1170220",
    "end": "1174059"
  },
  {
    "text": "per million requests and this is why you",
    "start": "1174059",
    "end": "1177059"
  },
  {
    "text": "pay by execution time okay so i let you",
    "start": "1177059",
    "end": "1180660"
  },
  {
    "text": "elect to check the details i think will",
    "start": "1180660",
    "end": "1184230"
  },
  {
    "text": "you'll be convinced that that lambda is",
    "start": "1184230",
    "end": "1186809"
  },
  {
    "text": "way better to do these grindr executions",
    "start": "1186809",
    "end": "1190049"
  },
  {
    "text": "and with that thank you so much for your",
    "start": "1190049",
    "end": "1192299"
  },
  {
    "text": "time see you for the next demo later",
    "start": "1192299",
    "end": "1195620"
  },
  {
    "text": "you",
    "start": "1204900",
    "end": "1206960"
  }
]