[
  {
    "text": "he everyone welcome you know what is the fastest page you can actually create it's really",
    "start": "6040",
    "end": "12400"
  },
  {
    "text": "a blank page okay that is the fastest page you can create unfortunately that's not what your end users want okay and",
    "start": "12400",
    "end": "19279"
  },
  {
    "text": "the last time I checked pages are becoming bigger they're actually becoming uh more diverse",
    "start": "19279",
    "end": "25880"
  },
  {
    "text": "content and um your customers are expecting immediacy on that note welcome to the presentation",
    "start": "25880",
    "end": "32719"
  },
  {
    "text": "on milliseconds matter how do you design for low",
    "start": "32719",
    "end": "37878"
  },
  {
    "text": "lency um no presentation on performance is actually valid in my opinion until",
    "start": "38440",
    "end": "44600"
  },
  {
    "text": "you actually discuss the priorities for a web application and my opinion the priorities are in this order tight",
    "start": "44600",
    "end": "51719"
  },
  {
    "text": "security is the number one priority for your web application okay High availability comes next and then comes",
    "start": "51719",
    "end": "58199"
  },
  {
    "text": "performance and actually explicit about that uh priority guys and there's lots",
    "start": "58199",
    "end": "63600"
  },
  {
    "text": "of presentations on security and availability in this conference I'm not going to discuss that here uh but",
    "start": "63600",
    "end": "69080"
  },
  {
    "text": "there's a presentation on uh building anti-dos resilient architectures at 5:30 today I encourage you guys to go watch",
    "start": "69080",
    "end": "75119"
  },
  {
    "text": "that in terms of availability um the right way to actually measure availability is from the client side",
    "start": "75119",
    "end": "81920"
  },
  {
    "text": "okay if you're building a web application you have to know how your end users are perceiving your",
    "start": "81920",
    "end": "88240"
  },
  {
    "text": "availability um this is actually measurement from a third party provider we use sedexus for measuring our",
    "start": "88240",
    "end": "93399"
  },
  {
    "text": "applications availability and what you can see here is that the lots of providers out there",
    "start": "93399",
    "end": "98920"
  },
  {
    "text": "and they have occasional dips and even a 05% dip in availability and this is the",
    "start": "98920",
    "end": "104520"
  },
  {
    "text": "United States um when you have millions of users has an impact on your",
    "start": "104520",
    "end": "111159"
  },
  {
    "text": "application now why does milliseconds matter and there's a lot of research on",
    "start": "111880",
    "end": "117240"
  },
  {
    "text": "that lots of very detailed research and what I'm going be presenting is a couple of examples um of research that has been",
    "start": "117240",
    "end": "124240"
  },
  {
    "text": "conducted in the industry today uh this data is publicly available actually uh this is research from uh bing Microsoft",
    "start": "124240",
    "end": "131920"
  },
  {
    "text": "Bing what they did was they actually induced latencies of the order of 50 to 2,000 milliseconds and they actually",
    "start": "131920",
    "end": "138400"
  },
  {
    "text": "observed user Behavior they observed user behavior on multiple Dimensions um",
    "start": "138400",
    "end": "143640"
  },
  {
    "text": "the gist of this is that about a 1% reduction a 1% introduction of latency",
    "start": "143640",
    "end": "150319"
  },
  {
    "text": "actually reduce that Revenue per user by about 2.8% that's a significant amount there's lots of other data I encourage",
    "start": "150319",
    "end": "156920"
  },
  {
    "text": "you guys to go read that paper as well um similar studies were done by Google",
    "start": "156920",
    "end": "162480"
  },
  {
    "text": "where they introduced um latencies on their serice site for uh search results",
    "start": "162480",
    "end": "168120"
  },
  {
    "text": "and the interesting part of that experiment was that a 400 millisecond latency um introduced long-term side",
    "start": "168120",
    "end": "175120"
  },
  {
    "text": "effects and what that meant was after they turned off the experiment the they still observed that their users did not",
    "start": "175120",
    "end": "183480"
  },
  {
    "text": "have the same experience about 5 weeks after they turned it off which means they saw about long-term effects of. 21%",
    "start": "183480",
    "end": "190640"
  },
  {
    "text": "that's actually pretty important to understand what that means is when you introduce latencies into your web tier",
    "start": "190640",
    "end": "196959"
  },
  {
    "text": "um those effects actually have long-term side effects",
    "start": "196959",
    "end": "202080"
  },
  {
    "text": "okay um there's also um Neuroscience research that has happened in this area in fact uh they've actually figured out",
    "start": "202080",
    "end": "208879"
  },
  {
    "text": "that humans typically react to visual stimuli in about 150 to 200 milliseconds",
    "start": "208879",
    "end": "215360"
  },
  {
    "text": "okay there's lots of research in that area as well now what does that mean does that mean we have about 200 to 400",
    "start": "215360",
    "end": "221799"
  },
  {
    "text": "milliseconds to play with well that's great let's go home and let's actually make our applications slower by 200",
    "start": "221799",
    "end": "228120"
  },
  {
    "text": "milliseconds that gives you a lot of capability to add more features in that's not true because remember I",
    "start": "228120",
    "end": "233400"
  },
  {
    "text": "talked about how pages are becoming larger and they're becoming more diverse an average web page today has is about",
    "start": "233400",
    "end": "240200"
  },
  {
    "text": "100 objects and it's about 2 megabytes in size and when you see that uh when",
    "start": "240200",
    "end": "246519"
  },
  {
    "text": "you take the 200 milliseconds and you amortize it across your 100 objects you don't have a whole lot to play with and",
    "start": "246519",
    "end": "252599"
  },
  {
    "text": "that is why milliseconds of latency do matter okay now before you embark on",
    "start": "252599",
    "end": "259440"
  },
  {
    "text": "trying to go and make your web applications low latency the first thing you need to invest in is um Telemetry",
    "start": "259440",
    "end": "265720"
  },
  {
    "text": "around it you need to have detailed Telemetry on where your latency is being uh observed what parts of your",
    "start": "265720",
    "end": "271720"
  },
  {
    "text": "application can you improve on and um there's lots of commercial products out there that actually measure this for you",
    "start": "271720",
    "end": "278639"
  },
  {
    "text": "it starts all the way from Data Center and backbone measurements those are the simplest ones to set up they're low in",
    "start": "278639",
    "end": "284039"
  },
  {
    "text": "terms of accuracy I recommend that you do not rely on just that they have a place but if that's all you rely on to",
    "start": "284039",
    "end": "290520"
  },
  {
    "text": "understand your end user behavior um you're not really getting a good accurate picture of what your end users are experiencing and the reality is your",
    "start": "290520",
    "end": "297560"
  },
  {
    "text": "end users are not sitting in data centers so any measurement from data centers is kind of pointless okay you go",
    "start": "297560",
    "end": "303479"
  },
  {
    "text": "up the stack um there are L mile measurements which are slightly better still not really representative of your",
    "start": "303479",
    "end": "309520"
  },
  {
    "text": "us user experience go further up the stack and you have synthetic real-time",
    "start": "309520",
    "end": "314960"
  },
  {
    "text": "measurements synthetic real time measurements mean that you put web bugs on your web pages which are not web bugs",
    "start": "314960",
    "end": "321360"
  },
  {
    "text": "that are owned by you but they're measuring latencies from your end users perspective so surely better gives you a",
    "start": "321360",
    "end": "327479"
  },
  {
    "text": "good idea of where uh which network are slower which networks are faster what your latency measurements are by regions",
    "start": "327479",
    "end": "333960"
  },
  {
    "text": "and by specific asns so it's surely better the right way or the most",
    "start": "333960",
    "end": "339120"
  },
  {
    "text": "complicated way really to implement it is real user measurements of architecting your web pages it's harder",
    "start": "339120",
    "end": "344520"
  },
  {
    "text": "to do it has a lot of benefits and I encourage you guys to actually look at either synthetic measurements or real",
    "start": "344520",
    "end": "350080"
  },
  {
    "text": "user measurements in fact uh anecdotally",
    "start": "350080",
    "end": "355319"
  },
  {
    "text": "there are so many conversations I have with many customers where they come and say oh my web application has 5",
    "start": "355319",
    "end": "360479"
  },
  {
    "text": "millisecond latency and I tell them that's not real okay when you really go look at dive into what your first bite",
    "start": "360479",
    "end": "366400"
  },
  {
    "text": "latencies are and what your PTI load times are you rarely get anything of the order of 5 milliseconds",
    "start": "366400",
    "end": "372520"
  },
  {
    "text": "okay um so a little bit of under the covers like what does it take for us to actually develop uh low latency services",
    "start": "372520",
    "end": "379240"
  },
  {
    "text": "for you okay and what I'm going to actually talk to you about is how we evolved in one of our services which is",
    "start": "379240",
    "end": "386039"
  },
  {
    "text": "actually built about around providing customers High availability low latency okay I'm going to peel the onion I'm",
    "start": "386039",
    "end": "392039"
  },
  {
    "text": "going to tell you what our Evolution was and explain to you what did it take for us to build those services on your",
    "start": "392039",
    "end": "398840"
  },
  {
    "text": "behalf okay the one I'm going to talk about is cloudfront and um if your",
    "start": "398840",
    "end": "404800"
  },
  {
    "text": "application is just relying on a single instant sitting in anywhere in the world the speed of light is just too slow for",
    "start": "404800",
    "end": "410599"
  },
  {
    "text": "you to provide a good low latency experience so you don't have a choice but to rely on services that actually",
    "start": "410599",
    "end": "416599"
  },
  {
    "text": "spread this content across multiple locations okay the second important part of it is",
    "start": "416599",
    "end": "422919"
  },
  {
    "text": "what I'm going to talk about in the remaining part of the presentation which is about our routing algorithms so I'm",
    "start": "422919",
    "end": "428080"
  },
  {
    "text": "going to tell you how we actually evoled in cloudfront in building our routing algorithm such that we can optimize",
    "start": "428080",
    "end": "434199"
  },
  {
    "text": "latency for uh viewers so the first thing we started with was anycast routing so we looked at",
    "start": "434199",
    "end": "442199"
  },
  {
    "text": "our uh our Network and we said well briefly you announce your IP space from",
    "start": "442199",
    "end": "448039"
  },
  {
    "text": "multiple Edge locations you rely on the internet to actually associate a specific user to an edge",
    "start": "448039",
    "end": "455440"
  },
  {
    "text": "location by following the shortest hop path so this relies on bgp and network business policies and here's what we",
    "start": "455440",
    "end": "462319"
  },
  {
    "text": "found so here's a a schematic you have an end user in Singapore and you have",
    "start": "462319",
    "end": "467479"
  },
  {
    "text": "three stars that actually represent our Edge locations Singapore Hong Kong and Tokyo and what we did was we said okay",
    "start": "467479",
    "end": "474840"
  },
  {
    "text": "let's announce our name servers from all these locations and we did a trace route okay",
    "start": "474840",
    "end": "480319"
  },
  {
    "text": "and here's the important part of the trace route so we Trace routed to our name server from a reg from a end user",
    "start": "480319",
    "end": "486680"
  },
  {
    "text": "Network in Singapore and what that trace route showed you was it went through SEL which is the provider for that for that",
    "start": "486680",
    "end": "493240"
  },
  {
    "text": "particular end user and it went all the way to to Tokyo first so the internet is",
    "start": "493240",
    "end": "499440"
  },
  {
    "text": "actually just not a simple ball of connections it's actually a complex network of different policies and it's",
    "start": "499440",
    "end": "506199"
  },
  {
    "text": "governed by uh you know all these different providers who have Financial agreements and so it's not",
    "start": "506199",
    "end": "512360"
  },
  {
    "text": "straightforward to say well let's just use any cast and actually route customers to the right location so a meaningful set of our",
    "start": "512360",
    "end": "519200"
  },
  {
    "text": "customers sometimes were uh assigned to locations which are outside the country and even sometimes even outside of",
    "start": "519200",
    "end": "525200"
  },
  {
    "text": "continents okay so he said oh great that's easy to fix let's actually move",
    "start": "525200",
    "end": "530560"
  },
  {
    "text": "on to geob based routing and what we did there was we said well let's look at the network and let's associate IPS with",
    "start": "530560",
    "end": "538040"
  },
  {
    "text": "geographies let's associate them with the right Edge locations in those geographies simple enough so here's a",
    "start": "538040",
    "end": "544920"
  },
  {
    "text": "schematic of that again the same uh user the Singapore viewer Network the",
    "start": "544920",
    "end": "550680"
  },
  {
    "text": "resolver that they use our Edge location in Tokyo and Singapore so the DNS queries for d123 cloudfront.net uh goes",
    "start": "550680",
    "end": "558680"
  },
  {
    "text": "to their resolver that they use the uh DNS server responds back and now we used some cname trickery where we",
    "start": "558680",
    "end": "565480"
  },
  {
    "text": "said well if you ask for d123 we're going to give you back D12 3. sing sin.",
    "start": "565480",
    "end": "571160"
  },
  {
    "text": "cloudfront.net sure enough the resolver gets sin. d123 dos. cloudfront.net",
    "start": "571160",
    "end": "577399"
  },
  {
    "text": "makes a request to that specific DNS server gets back an IP address makes a",
    "start": "577399",
    "end": "583200"
  },
  {
    "text": "TCP connect goes to a Singapore location okay",
    "start": "583200",
    "end": "588240"
  },
  {
    "text": "happy same schematic again and now we did a trace out again for our Singapore",
    "start": "588240",
    "end": "594440"
  },
  {
    "text": "name server and here's what we found we found that we exited cintel as before",
    "start": "594440",
    "end": "600360"
  },
  {
    "text": "then we went all the way to Hong Kong and then came back to Singapore so to reach Singapore Edge location we were",
    "start": "600360",
    "end": "607040"
  },
  {
    "text": "going through Hong Kong okay that's what we did so we said well that doesn't make",
    "start": "607040",
    "end": "612839"
  },
  {
    "text": "any sense how do we fix this we can keep going and fixing this vaco like approach and the network that we actually run we",
    "start": "612839",
    "end": "619360"
  },
  {
    "text": "can't afford to do this we can't afford be fixing oneoff things like that we have to build automation around it",
    "start": "619360",
    "end": "624519"
  },
  {
    "text": "that's when we thought about latency based routing okay this was many years back and now cloudfront is latency based",
    "start": "624519",
    "end": "629839"
  },
  {
    "text": "routing system and what we said is what matters to customers is not the number of hops customers don't care about",
    "start": "629839",
    "end": "635959"
  },
  {
    "text": "geographic proximity and Geographic proximity we proved is not the same as latency proximity and we said that's",
    "start": "635959",
    "end": "641720"
  },
  {
    "text": "just route based on latency so how do we do that so the way we do that is by",
    "start": "641720",
    "end": "647519"
  },
  {
    "text": "gathering billions of measurements of actual end user latencies to all our Edge locations and this is a learning",
    "start": "647519",
    "end": "653680"
  },
  {
    "text": "system that we actually built we said well let's learn about latencies to all our Edge locations and let route based",
    "start": "653680",
    "end": "659040"
  },
  {
    "text": "on latency so here's what it it the same schematic so we have a routing engine",
    "start": "659040",
    "end": "664600"
  },
  {
    "text": "that actually continuously gathers latency data from all these different Edge",
    "start": "664600",
    "end": "670040"
  },
  {
    "text": "locations for real users and it creates two mappings it creates a mapping between our viewer",
    "start": "670040",
    "end": "676320"
  },
  {
    "text": "networks and our Edge locations and calculates those latencies and continuously learns about it then it",
    "start": "676320",
    "end": "681399"
  },
  {
    "text": "creates a mapping between the viewer networks and the resolvers that they use",
    "start": "681399",
    "end": "686519"
  },
  {
    "text": "okay so here's how that works so the sing po user again makes a request for",
    "start": "686519",
    "end": "691760"
  },
  {
    "text": "d123 cloudfront.net makes a request to our DNS resolver our DNS resolve that DNS",
    "start": "691760",
    "end": "698560"
  },
  {
    "text": "resolver the DNS resolver then enic cast it to Tokyo Tokyo then looks at our",
    "start": "698560",
    "end": "704240"
  },
  {
    "text": "mapping and says Ah the better place for you is really Hong Kong and I'm going to",
    "start": "704240",
    "end": "709920"
  },
  {
    "text": "return back to you 5. 6.7.8 and that's how we actually route Singapore users to Hong Kong and we",
    "start": "709920",
    "end": "716560"
  },
  {
    "text": "learn about latencies when we actually route them to the right location ation now that was fine and dandy until",
    "start": "716560",
    "end": "723639"
  },
  {
    "text": "about last year or this year actually and what we found was that there was a prevalence of uh open resolvers like",
    "start": "723639",
    "end": "731639"
  },
  {
    "text": "Open DNS or Google open resolvers which means our routing which is based on just",
    "start": "731639",
    "end": "736760"
  },
  {
    "text": "resolvers was suboptimal in some cases so he said what do we do in that case",
    "start": "736760",
    "end": "742800"
  },
  {
    "text": "and then introduce an option called edns Z and what edns0 is it's basically a a client subet extension to DNS what that",
    "start": "742800",
    "end": "750720"
  },
  {
    "text": "does is as part of the DNS request you actually get a a portion of the client's",
    "start": "750720",
    "end": "756240"
  },
  {
    "text": "IP typically a sl24 and uh we already had our mapping for all these viewer networks and their",
    "start": "756240",
    "end": "762480"
  },
  {
    "text": "latencies to Edge locations so we said we'll use the client subnet if available to Route them to the right",
    "start": "762480",
    "end": "769040"
  },
  {
    "text": "location and that's what we did we launched this in March of this year in",
    "start": "769040",
    "end": "774480"
  },
  {
    "text": "fact uh quite surprisingly uh the first graph there 20% of our responses today",
    "start": "774480",
    "end": "780480"
  },
  {
    "text": "or for edns zero option it's actually quite impressive it's it's quite telling as well um and here's a an example of a",
    "start": "780480",
    "end": "789399"
  },
  {
    "text": "specific Network this is in Germany where we look at our P90 first bite latencies and they actually di",
    "start": "789399",
    "end": "795480"
  },
  {
    "text": "significantly went from all the way from 150 milliseconds all the way to 10 to 12 milliseconds in latency okay that was a",
    "start": "795480",
    "end": "802440"
  },
  {
    "text": "pretty good success for us to actually really go and look at this network and understand what was happening in terms",
    "start": "802440",
    "end": "807639"
  },
  {
    "text": "of our routing and design around around it okay so why am I talking about all of",
    "start": "807639",
    "end": "812680"
  },
  {
    "text": "this and what does it matter to you well what I'm trying to impress on is trying",
    "start": "812680",
    "end": "818199"
  },
  {
    "text": "to build applications that are low latency requires a significant amount of operational focus it requires you as",
    "start": "818199",
    "end": "824600"
  },
  {
    "text": "operators to go look at the data understand what the data is saying potentially do some manual changes to",
    "start": "824600",
    "end": "830600"
  },
  {
    "text": "understand what the implications of it are and then go back and really introduce um operational systems and",
    "start": "830600",
    "end": "837920"
  },
  {
    "text": "automations around it okay we had to build these kinds of automations so that we can scale our Network that's a lot of",
    "start": "837920",
    "end": "844160"
  },
  {
    "text": "heavy lifting does it really mean that everyone in this room is going to go back and architect your applications for",
    "start": "844160",
    "end": "849279"
  },
  {
    "text": "it learn about it it's a lot of heavy lifting for what you want to deliver to your end users and you should be focused",
    "start": "849279",
    "end": "854680"
  },
  {
    "text": "on delivering those to your end users that's brings up to the next part of the of the presentation going to introduce",
    "start": "854680",
    "end": "860639"
  },
  {
    "text": "John is how do you use the services that we've actually built such that you can take advantage of the improvements that",
    "start": "860639",
    "end": "869279"
  },
  {
    "text": "you we've done over time okay thank you very much",
    "start": "869279",
    "end": "874320"
  },
  {
    "text": "[Applause]",
    "start": "874690",
    "end": "881160"
  },
  {
    "text": "John okay let's see uh I think this moved on to the next presentation here",
    "start": "881160",
    "end": "889519"
  },
  {
    "text": "somehow",
    "start": "889959",
    "end": "892959"
  },
  {
    "text": "uh okay it's uh actually not",
    "start": "897160",
    "end": "903759"
  },
  {
    "text": "advancing okay there we go thank you or no yes okay sorry about that all right",
    "start": "916759",
    "end": "924279"
  },
  {
    "text": "so um you know we heard a lot about the engineering effort that the cloud front uh uh Team put uh went through to get",
    "start": "924279",
    "end": "932519"
  },
  {
    "text": "you uh this system that you could leverage to really get great performance out of your applications now what I",
    "start": "932519",
    "end": "938720"
  },
  {
    "text": "going to do is see how you can actually Implement that right and to do that uh I",
    "start": "938720",
    "end": "943800"
  },
  {
    "text": "want to start with a baseline application and go through a series of optimizations uh and uh see what we can",
    "start": "943800",
    "end": "950360"
  },
  {
    "text": "do for page load times I'm going to do it basically in around the globe kind of",
    "start": "950360",
    "end": "955720"
  },
  {
    "text": "fashion all right so uh first thing we're start off with is what do a typical web web page looks like right",
    "start": "955720",
    "end": "962600"
  },
  {
    "text": "how uh uh what is it that uh what are the types of content on a typical web page so typically uh the Baseline that I",
    "start": "962600",
    "end": "970800"
  },
  {
    "text": "want to start with is the Amazon Health and Beauty site I just thought this might be relatively representative of",
    "start": "970800",
    "end": "976319"
  },
  {
    "text": "the types of sites that you guys might be developing it's an e-commerce kind of application clearly uh and you know this",
    "start": "976319",
    "end": "984639"
  },
  {
    "text": "seems pretty broadly relevant so if you look at this web page there's two kinds of content on it there's pregenerated",
    "start": "984639",
    "end": "989959"
  },
  {
    "text": "content like images CSS JS files and then server generated content this is",
    "start": "989959",
    "end": "995160"
  },
  {
    "text": "things like the page itself and any uh API calls that are responded to from",
    "start": "995160",
    "end": "1000279"
  },
  {
    "text": "Ajax requests so if you take another view of that same",
    "start": "1000279",
    "end": "1006079"
  },
  {
    "text": "application uh this is using the Chrome uh uh developer tools you know to just",
    "start": "1006079",
    "end": "1011360"
  },
  {
    "text": "generate a waterfall graph here there's other developer tools out there from Firefox or Firebug uh whatever whatever",
    "start": "1011360",
    "end": "1018160"
  },
  {
    "text": "your favorite uh tool is but definitely make sure if you're thinking about how to optimize a page from a performance",
    "start": "1018160",
    "end": "1023800"
  },
  {
    "text": "perspective that you are using some sort of waterfall chart extremely helpful but if you look at it from this view you'll",
    "start": "1023800",
    "end": "1029400"
  },
  {
    "text": "see that this page has 108 requests and about 2.8 Megs of data downloaded just to render this one page one page load",
    "start": "1029400",
    "end": "1036038"
  },
  {
    "text": "takes that that many requests and that amount of data and you could see the breakdown in the number of specific objects and this you know very tightly",
    "start": "1036039",
    "end": "1042760"
  },
  {
    "text": "matches up to the numbers that pad mentioned earlier all right so since I don't have",
    "start": "1042760",
    "end": "1047839"
  },
  {
    "text": "the source code for the amaz Health and Beauty application yes I work at Amazon no I do not have access to that source code I had to refactor this site right I",
    "start": "1047839",
    "end": "1054919"
  },
  {
    "text": "had to create a mockup of this I want to use this as the Baseline but I don't uh have the content itself so what I did is",
    "start": "1054919",
    "end": "1061039"
  },
  {
    "text": "save out all the static assets you know comment out the JavaScript so I'm not getting kind of JavaScript errors and",
    "start": "1061039",
    "end": "1066799"
  },
  {
    "text": "replace the body content by uh you know a shuffled number list I did that so uh",
    "start": "1066799",
    "end": "1072320"
  },
  {
    "text": "anytime that I'm refreshing a page I can know that I'm not looking at a cached version right I just wanted something to give me a little bit of uh dynamic",
    "start": "1072320",
    "end": "1079440"
  },
  {
    "text": "uh effect to content that I'm generating on the server all right so uh I'll show you",
    "start": "1079440",
    "end": "1085720"
  },
  {
    "text": "very simple this is kind of uh Loosely bled on on on the flask uh python flask",
    "start": "1085720",
    "end": "1091440"
  },
  {
    "text": "framework I had to make this into uh shorten it quite a bit so it could fit on one slide uh but it's uh roughly you",
    "start": "1091440",
    "end": "1098120"
  },
  {
    "text": "know what I was actually running throughout these tests uh so I have a function to do getting that random or",
    "start": "1098120",
    "end": "1103240"
  },
  {
    "text": "shuffled number list I have a variable called Static uh module level variable called Static which is to point uh uh to",
    "start": "1103240",
    "end": "1112080"
  },
  {
    "text": "where the static content lives on on the server so in this case it's going to be static slash right uh uh and then",
    "start": "1112080",
    "end": "1119400"
  },
  {
    "text": "whatever the name of the static file is and I have two functions one called root and one called Ajax the root is just",
    "start": "1119400",
    "end": "1125400"
  },
  {
    "text": "going to render a template we'll take a look at the template in a second uh and insert uh 5,000 random number or",
    "start": "1125400",
    "end": "1132240"
  },
  {
    "text": "shuffled numbers for the body content and uh Ajax is going to just return the uh roughly uh you know whatever number",
    "start": "1132240",
    "end": "1139280"
  },
  {
    "text": "of uh uh of numbers need to be rendered via a query string parameter so very",
    "start": "1139280",
    "end": "1146600"
  },
  {
    "text": "simple kind of app logic uh no database nothing like that I'm really looking at",
    "start": "1146600",
    "end": "1151880"
  },
  {
    "text": "how we can improve uh you know mitigate the uh impact of latency or an application not you know within within",
    "start": "1151880",
    "end": "1159080"
  },
  {
    "text": "the application itself uh to things like a database and then we look at this uh template all right so here again very",
    "start": "1159080",
    "end": "1166039"
  },
  {
    "text": "simple kind of uh redacted uh version of of the template here but",
    "start": "1166039",
    "end": "1171640"
  },
  {
    "text": "we had what I have is you know 100 or so of those first lines which are links to",
    "start": "1171640",
    "end": "1176679"
  },
  {
    "text": "the static assets you know image files CSS JS uh and then six or so uh uh Ajax",
    "start": "1176679",
    "end": "1184440"
  },
  {
    "text": "requests and then the last thing on that page there highlighted in red is just the actual body content which is the 5,000 sheffi numbers so this is the you",
    "start": "1184440",
    "end": "1192120"
  },
  {
    "text": "know this is the what I've used as the Baseline uh now let's take a look at how uh I deployed this and where we're doing",
    "start": "1192120",
    "end": "1198840"
  },
  {
    "text": "testing from so I deployed this to an ec2 instance in Virginia and I had testers in Virginia Oregon and uh",
    "start": "1198840",
    "end": "1207679"
  },
  {
    "text": "Tokyo uh the origin itself is running the python flask uh framework and it's",
    "start": "1207679",
    "end": "1213159"
  },
  {
    "text": "deployed through wsgi and uh the testers I used uh",
    "start": "1213159",
    "end": "1218919"
  },
  {
    "text": "selenium which is a browser automation Tool uh and I wrote a script in Python",
    "start": "1218919",
    "end": "1224480"
  },
  {
    "text": "to basically make 20 uh requests for this page load uh for for this",
    "start": "1224480",
    "end": "1230240"
  },
  {
    "text": "particular page and I'm using Firefox as the browser so I really wanted to you know not make individual requests for",
    "start": "1230240",
    "end": "1236480"
  },
  {
    "text": "Content because that's not what your end users are doing right they're requesting whole pages and we want to take a look",
    "start": "1236480",
    "end": "1241919"
  },
  {
    "text": "at how we can optimize whole pages not not individual requests so this is the method that I came up with to do that a",
    "start": "1241919",
    "end": "1249039"
  },
  {
    "text": "little bit more about selenium uh uh or how I configured it so it's important to take a browser cache out of the picture",
    "start": "1249039",
    "end": "1255840"
  },
  {
    "text": "for this testing so I wanted to show you this in case you do want to repeat these uh repeat these experiments uh so to do",
    "start": "1255840",
    "end": "1262600"
  },
  {
    "text": "that you can see the settings here that uh that you would need to implement uh and this makes it so that there's no browser caching uh at all we're really",
    "start": "1262600",
    "end": "1271120"
  },
  {
    "text": "relying on on the on the edge cache browser caches are incredibly important part of performance optimization uh but",
    "start": "1271120",
    "end": "1277640"
  },
  {
    "text": "to you know to kind of get numbers around what it would look like for multiple testers and uh in the same",
    "start": "1277640",
    "end": "1282760"
  },
  {
    "text": "geography I had to take that out of the picture all right so let's take a look at some baseline metrics here I have",
    "start": "1282760",
    "end": "1288919"
  },
  {
    "text": "this page with you know 108 uh uh 108 objects uh and uh I'm hitting it from",
    "start": "1288919",
    "end": "1296640"
  },
  {
    "text": "these three locations if we look at Virginia which is right next to the origin right no latency at all we'll see",
    "start": "1296640",
    "end": "1303600"
  },
  {
    "text": "the average uh page load time right about 400 milliseconds point4 seconds if we look at Oregon the page load time the",
    "start": "1303600",
    "end": "1311080"
  },
  {
    "text": "average page load time jumps way up to 3.4 seconds that's an incredible jump right the the if if if uh some of you",
    "start": "1311080",
    "end": "1318640"
  },
  {
    "text": "aren't aware the Ping time the roundt trip ping time between Virginia and oregin or Oregon is uh 70 milliseconds",
    "start": "1318640",
    "end": "1324960"
  },
  {
    "text": "or so right for 70 millisecond ping time we get an extra three seconds of page",
    "start": "1324960",
    "end": "1330039"
  },
  {
    "text": "load time why is that that's something that we really need to jump dive into and see what we can do to fix that if we",
    "start": "1330039",
    "end": "1335200"
  },
  {
    "text": "go all the way to Tokyo average page loan time of about 9.6 seconds same",
    "start": "1335200",
    "end": "1340880"
  },
  {
    "text": "testers you know exact same configuration uh but you can see that the the impact of latency is incredibly",
    "start": "1340880",
    "end": "1346559"
  },
  {
    "text": "dramatic and here in uh um uh Tokyo the the Ping time is again roughly about 250",
    "start": "1346559",
    "end": "1352360"
  },
  {
    "text": "milliseconds between Virginia and Tokyo uh so just keep those those things in mind what did I take a look at a",
    "start": "1352360",
    "end": "1359320"
  },
  {
    "text": "waterfall graph from Tokyo to see what it would look like when you're requesting this content or doing doing a",
    "start": "1359320",
    "end": "1365360"
  },
  {
    "text": "page load and there's one anomaly I really wanted to point out that's why I'm showing this graph here if you look",
    "start": "1365360",
    "end": "1370679"
  },
  {
    "text": "at o1 dogf uh you'll see an awfully long connecting line the orange part of the",
    "start": "1370679",
    "end": "1376240"
  },
  {
    "text": "waterfall graft is how long the connection time is uh and you'll see this sprinkled",
    "start": "1376240",
    "end": "1381440"
  },
  {
    "text": "throughout the page I can't show all 108 objects loading I just you know this is small enough to see hard enough to see",
    "start": "1381440",
    "end": "1386679"
  },
  {
    "text": "I'm sure for all of you as it is uh but you would see this kind of thing sprinkle throughout the page load and that really kills the performance this",
    "start": "1386679",
    "end": "1392799"
  },
  {
    "text": "is part of why it's taking n and a half seconds to load because there are a number of objects that um uh that just",
    "start": "1392799",
    "end": "1400279"
  },
  {
    "text": "for whatever reason seem to take an awfully long time to load um so this is just an observation",
    "start": "1400279",
    "end": "1406760"
  },
  {
    "text": "for right now we'll talk a a little bit more about it as we go on all right so the first optimization",
    "start": "1406760",
    "end": "1413480"
  },
  {
    "text": "optimization number one let's leverage Amazon cloudfront for static content caching take advantage of all the things",
    "start": "1413480",
    "end": "1419320"
  },
  {
    "text": "that pad talked about that we've uh we've worked on over the years all right so if we do that uh the",
    "start": "1419320",
    "end": "1425440"
  },
  {
    "text": "first thing I want to show you in every all of the five optimizations I'm going to talk through is graphs what are what",
    "start": "1425440",
    "end": "1432159"
  },
  {
    "text": "are the improvements and I want to do this so that you can decide whether or not you're going to care about what I'm going to say for the next couple of",
    "start": "1432159",
    "end": "1437799"
  },
  {
    "text": "slides um so if we look at uh Oregon and Tokyo",
    "start": "1437799",
    "end": "1443080"
  },
  {
    "text": "here I'm taking I'm not going to show Virginia uh pretty much anymore for the rest of the presentation since latency",
    "start": "1443080",
    "end": "1448679"
  },
  {
    "text": "is an an issue there but if we look at Oregon and Virginia uh we can see that just by adding cloudfront as a static",
    "start": "1448679",
    "end": "1455320"
  },
  {
    "text": "content cache we lowered the average page load time from 3.4 seconds down to you know probably about uh 900",
    "start": "1455320",
    "end": "1461760"
  },
  {
    "text": "milliseconds for Oregon and then in Tokyo you know roughly 10 seconds there",
    "start": "1461760",
    "end": "1467440"
  },
  {
    "text": "down to about a second and a half so huge huge Improvement so I'm hopeful that this is one of the optimizations",
    "start": "1467440",
    "end": "1473399"
  },
  {
    "text": "that you really will care about um and now if we look at the waterfall graph from Tokyo again of an",
    "start": "1473399",
    "end": "1480799"
  },
  {
    "text": "initial load which means a cash Miss uh one thing you'll see is there's none of those big spikes there's none of those",
    "start": "1480799",
    "end": "1487399"
  },
  {
    "text": "anomalous kind of three four two 3 4 second uh connection times uh and a lot",
    "start": "1487399",
    "end": "1493880"
  },
  {
    "text": "of that has to do with how we're uh you know the routing that we're we're doing with with front and the HTTP kind of",
    "start": "1493880",
    "end": "1500080"
  },
  {
    "text": "optimizations which we'll get into again a little later uh but I just wanted to show you that this kind of wiped out",
    "start": "1500080",
    "end": "1506760"
  },
  {
    "text": "that one particular problem that we saw and then if you look in the case of a cash hit these is this is what you",
    "start": "1506760",
    "end": "1512679"
  },
  {
    "text": "really love to see right nice little tiny lines on all the static assets right a couple of milliseconds is all it",
    "start": "1512679",
    "end": "1518320"
  },
  {
    "text": "takes because the end users are very close to the edge locations all right so how did how did I",
    "start": "1518320",
    "end": "1524720"
  },
  {
    "text": "implement this in my uh sample simple little application it was quite a trivial change all I had to do was uh um",
    "start": "1524720",
    "end": "1532799"
  },
  {
    "text": "have users continue to hit the origin as they would directly which I have down there is a nav URL of PFC 303. origin uh",
    "start": "1532799",
    "end": "1540960"
  },
  {
    "text": "and then in my code for the static content instead of having a relative path to static slash I have now a uh um",
    "start": "1540960",
    "end": "1549399"
  },
  {
    "text": "an absolute path to the cloudfront distribution so I'm not going to go through the setup of cloudfront that's",
    "start": "1549399",
    "end": "1555120"
  },
  {
    "text": "something that we you can you know read in the docs but it's a very simple change in the code uh to to make this",
    "start": "1555120",
    "end": "1560960"
  },
  {
    "text": "real and the other thing that I did is at the bottom you could see there I added cache control headers so the cache",
    "start": "1560960",
    "end": "1566520"
  },
  {
    "text": "control header says how long this object is going to these objects are going to live in the cache uh so this is saying",
    "start": "1566520",
    "end": "1572880"
  },
  {
    "text": "uh 300 seconds so these are the kinds of changes that you would have to make in your application or that you may make in",
    "start": "1572880",
    "end": "1578600"
  },
  {
    "text": "your application to leverage Cloud for static content caching uh and so why does this really",
    "start": "1578600",
    "end": "1584159"
  },
  {
    "text": "help well if I'm going to go through this really quick but if you have an end user in Tokyo they make a request for Content you're going to get routed to",
    "start": "1584159",
    "end": "1590120"
  },
  {
    "text": "the nearest Edge location from a latency perspective uh let's say that's only a few milliseconds away round trip time 10",
    "start": "1590120",
    "end": "1596039"
  },
  {
    "text": "milliseconds uh 20 milliseconds probably typical The Edge location is then going to make a request to the",
    "start": "1596039",
    "end": "1602640"
  },
  {
    "text": "origin uh this may be you know hundreds of milliseconds here uh and then the origins going respond uh with the with",
    "start": "1602640",
    "end": "1609760"
  },
  {
    "text": "the object and the second the uh the bits start hitting the edge location they're going to get streamed to the end",
    "start": "1609760",
    "end": "1615360"
  },
  {
    "text": "user so that's what the case of a cache Miss is going to look like uh if we look at a cash hit on the other",
    "start": "1615360",
    "end": "1621360"
  },
  {
    "text": "hand us going to make a request for Content The Edge location is going to say I have that in my cach I don't mean to make that long haul trip back to the",
    "start": "1621360",
    "end": "1627600"
  },
  {
    "text": "origin and can send it directly to the end user so cutting out hundreds of milliseconds uh so this is clearly very",
    "start": "1627600",
    "end": "1633760"
  },
  {
    "text": "beneficial for you if you can take advantage of it the next optimization I want to talk about is uh about caching",
    "start": "1633760",
    "end": "1641440"
  },
  {
    "text": "API costs and proxying your whole site uh so uh first off we're going to start",
    "start": "1641440",
    "end": "1648760"
  },
  {
    "text": "with looking at the numbers does this matter uh and if you look at now I'm just this this first graph is just",
    "start": "1648760",
    "end": "1654760"
  },
  {
    "text": "showing you Oregon uh our first a slide is showing you Oregon so on the left we're taking a",
    "start": "1654760",
    "end": "1660640"
  },
  {
    "text": "look at um what the first couple of hits look like in terms of time and then on",
    "start": "1660640",
    "end": "1665799"
  },
  {
    "text": "the right we're taking a look at the next 17 uh excuse me",
    "start": "1665799",
    "end": "1670919"
  },
  {
    "text": "requests and I had to do that so that you can actually see the impacts on the right hand side right or else the scale",
    "start": "1670919",
    "end": "1676279"
  },
  {
    "text": "would be completely off so if we look at the left we'll see that we shaved off uh you know a few hundred milliseconds",
    "start": "1676279",
    "end": "1681440"
  },
  {
    "text": "which is definitely worthwhile and then on the right we have a much smoother line in terms of you know performance",
    "start": "1681440",
    "end": "1687360"
  },
  {
    "text": "instead of jumping around between 600 and uh uh you know over a second of uh",
    "start": "1687360",
    "end": "1693279"
  },
  {
    "text": "page load time we have a pretty smooth line right around 600 uh or 620",
    "start": "1693279",
    "end": "1698559"
  },
  {
    "text": "milliseconds so definitely I think worthwhile digging into if we look at Tokyo we'll see the exact same kind of",
    "start": "1698559",
    "end": "1706360"
  },
  {
    "text": "pattern so why can we do this well many API calls most people think of them as Dynamic content uh and they don't think",
    "start": "1706360",
    "end": "1713440"
  },
  {
    "text": "about caching them well very often times you can cash them right and if we look at the health and beauty page uh uh you",
    "start": "1713440",
    "end": "1719640"
  },
  {
    "text": "may not be able to see those words there but it says best sellers in beauty that might be the kind of thing that you're loading in would be an Ajax request and",
    "start": "1719640",
    "end": "1726880"
  },
  {
    "text": "then it says updated hourly does do you do do your customers really need to see the best sellers and Beauty every 3",
    "start": "1726880",
    "end": "1732679"
  },
  {
    "text": "seconds right it's probably not going to change that much every 3 seconds you might not want to compute it every 3 seconds uh so this is clearly something",
    "start": "1732679",
    "end": "1738720"
  },
  {
    "text": "that you can cache many API calls fall under this uh umbrella and caching",
    "start": "1738720",
    "end": "1743840"
  },
  {
    "text": "doesn't have to be in the order of hours or minutes it could be seconds to take a uh you know big benefit if you have a",
    "start": "1743840",
    "end": "1749840"
  },
  {
    "text": "flash crowd that's coming in in a thousand requests a second instead of having a thousand request go back to your origin again which is a couple",
    "start": "1749840",
    "end": "1756320"
  },
  {
    "text": "hundred milliseconds away all it has to be is one right so you can get a big Advantage",
    "start": "1756320",
    "end": "1762159"
  },
  {
    "text": "there so what does the code look like very simple in my application here uh since I'm actually having end users go",
    "start": "1762159",
    "end": "1768720"
  },
  {
    "text": "directly to the uh Cloud to cloudfront now uh uh I'm going to go back to a",
    "start": "1768720",
    "end": "1774799"
  },
  {
    "text": "relative path for my static assets uh and then cloudfront is going to point to the origin uh and I'm going to set cache",
    "start": "1774799",
    "end": "1780960"
  },
  {
    "text": "control headers so that the root object is going to have a cash control header of zero which means it's not going to be cashed at all uh and any Ajax requests",
    "start": "1780960",
    "end": "1789360"
  },
  {
    "text": "are going to have a cash control header of 300 which means that they're going to be cached for 300 seconds uh the other thing that I had to",
    "start": "1789360",
    "end": "1797320"
  },
  {
    "text": "change was uh my ADD headers to all other objects uh I want to exclude the",
    "start": "1797320",
    "end": "1802840"
  },
  {
    "text": "um the root objects any HTML requests any HTML responses so that's the simple",
    "start": "1802840",
    "end": "1808120"
  },
  {
    "text": "changes I had to make I want to explain a little bit more about cache control headers uh and then we'll take a look at",
    "start": "1808120",
    "end": "1813240"
  },
  {
    "text": "how this works uh so there's two two there's there's many directives that you can have in the cach control header but",
    "start": "1813240",
    "end": "1819519"
  },
  {
    "text": "the two that I really want to point out to you are max age and S max age so max age if no s max age is specified max age",
    "start": "1819519",
    "end": "1827799"
  },
  {
    "text": "is is going to tell you how long this object should live either in a proxy cache like cloudfront or uh in a browser",
    "start": "1827799",
    "end": "1835679"
  },
  {
    "text": "cache if you specify both a max age and an SM max age SM max age is going to say",
    "start": "1835679",
    "end": "1840760"
  },
  {
    "text": "how long this object should live in cloudfront in this case uh and max age is going to specify how long it should",
    "start": "1840760",
    "end": "1846399"
  },
  {
    "text": "live in a browser cache so this is very important to understand uh you may want to have a zero for max age and an SM max",
    "start": "1846399",
    "end": "1853799"
  },
  {
    "text": "age of 300 uh that's one one thing you might want to do if you want to take out the uh variability associated with maybe",
    "start": "1853799",
    "end": "1860679"
  },
  {
    "text": "browser caches but again browser caches are important so I just want to make sure that's something that you're aware",
    "start": "1860679",
    "end": "1866240"
  },
  {
    "text": "of all right so how does this work why why are you getting some benefits from the whole site proxying right we saw",
    "start": "1866240",
    "end": "1872639"
  },
  {
    "text": "that the initial page load was less there's no benefit of caching on that first page load so why was that less one",
    "start": "1872639",
    "end": "1879799"
  },
  {
    "text": "of the main reasons is through uh keep alive connections with cloudfront so TCP",
    "start": "1879799",
    "end": "1885799"
  },
  {
    "text": "runs on on uh idea of connection so it's a connection based protocol uh and every",
    "start": "1885799",
    "end": "1890880"
  },
  {
    "text": "HTTP Uh u connection has this idea of a handshake and so if we look at what a",
    "start": "1890880",
    "end": "1897600"
  },
  {
    "text": "you know what a request for Content looks like for two users uh two separate users they're both going to have to do",
    "start": "1897600",
    "end": "1903919"
  },
  {
    "text": "two round trips to get at an absolute minimum to be able to get content uh one round trip to do the handshake which is",
    "start": "1903919",
    "end": "1910360"
  },
  {
    "text": "the uh synchronize the synchronized acknowledgement and then the uh acknowledgement of the synchronized from",
    "start": "1910360",
    "end": "1916399"
  },
  {
    "text": "this from the server finally there's the request for the object right and the the the the last act and and the request for",
    "start": "1916399",
    "end": "1921720"
  },
  {
    "text": "the object can happen in parallel so the minimum time to get that object back",
    "start": "1921720",
    "end": "1927200"
  },
  {
    "text": "with 100 millisecond round trip time is 200 milliseconds you can't do it any faster than that 200 milliseconds is the",
    "start": "1927200",
    "end": "1933919"
  },
  {
    "text": "the best that you can do from a TCP uh uh with a TCP protocol to get an object",
    "start": "1933919",
    "end": "1939559"
  },
  {
    "text": "back with a two with 100 millisecond round trip time if you put cloudfront in the middle uh and again let's assume",
    "start": "1939559",
    "end": "1946080"
  },
  {
    "text": "that cloudfront is 20 milliseconds away from the end user and the origins 80 milliseconds away from",
    "start": "1946080",
    "end": "1951480"
  },
  {
    "text": "cloudfront you'll see on the first user uh which is the top part of of this graph it's exactly the same 200",
    "start": "1951480",
    "end": "1958639"
  },
  {
    "text": "milliseconds uh but on the on the second User it's only 120 milliseconds because we can shave off that handshake um uh",
    "start": "1958639",
    "end": "1967559"
  },
  {
    "text": "between cloudfront and the origin because we will very likely have a connection in you know uh kept alive and",
    "start": "1967559",
    "end": "1974360"
  },
  {
    "text": "basically a connection cache you can think of uh at that edge app so you can see this you know 80 milliseconds is is",
    "start": "1974360",
    "end": "1981279"
  },
  {
    "text": "important right we can shave that off might as well uh another thing is window size",
    "start": "1981279",
    "end": "1987519"
  },
  {
    "text": "optimizations uh here um you know uh basically a server is going to send a certain number of packets to an end user",
    "start": "1987519",
    "end": "1993720"
  },
  {
    "text": "before it has to be acknowledged uh and so this is showing you the progression",
    "start": "1993720",
    "end": "1999120"
  },
  {
    "text": "of of uh you know of that basically the window size is going to expand until you've met the maximum capabilities of",
    "start": "1999120",
    "end": "2005480"
  },
  {
    "text": "your the quality of service of your connection um if you're you has that has to get",
    "start": "2005480",
    "end": "2011399"
  },
  {
    "text": "done every time that you establish a new connection uh but if you have that connection kept alive the information",
    "start": "2011399",
    "end": "2018240"
  },
  {
    "text": "about the quality of service of that connection could also be kept alive right so the window size uh between",
    "start": "2018240",
    "end": "2024080"
  },
  {
    "text": "cloudfront and uh your origin uh can be pretty can be fixed and and is likely",
    "start": "2024080",
    "end": "2029960"
  },
  {
    "text": "going to be pretty large since we have you know incredible incredible pipes coming out of uh out of Po",
    "start": "2029960",
    "end": "2036120"
  },
  {
    "text": "front all right so the next optimization I want to talk about is uh a multi- region",
    "start": "2036120",
    "end": "2043440"
  },
  {
    "text": "deployment uh so here we're going to look actually at a map first what I did is uh deploy a second or uh or origin in",
    "start": "2043559",
    "end": "2051158"
  },
  {
    "text": "uh Singapore um and we have the same three test",
    "start": "2051159",
    "end": "2056480"
  },
  {
    "text": "instances uh and so let's look at the numbers now I'm only going to show you for Tokyo because that's the only place",
    "start": "2056480",
    "end": "2062118"
  },
  {
    "text": "that's going to matter Oregon uh Oregon's going to still go to Virginia so Tokyo now will hit Singapore uh uh",
    "start": "2062119",
    "end": "2068040"
  },
  {
    "text": "for its origin uh and you could see you know the the the P the initial load is going to be the first hit is going to be",
    "start": "2068040",
    "end": "2074760"
  },
  {
    "text": "significantly left less right from 8 seconds down to 4 seconds uh so definitely worth doing this is for me",
    "start": "2074760",
    "end": "2081638"
  },
  {
    "text": "you know in this simple application an incredibly trivial thing to do all I had to do is stand up another instance there's no code changes at all required",
    "start": "2081639",
    "end": "2088480"
  },
  {
    "text": "for you it may be much more complicated um so you know this may or may not be something that you that you",
    "start": "2088480",
    "end": "2094760"
  },
  {
    "text": "can do uh the complications really come into dating synchronization uh if you running a database right how are you",
    "start": "2094760",
    "end": "2100800"
  },
  {
    "text": "going to get data in both places at the same time uh so that's a that's a that's",
    "start": "2100800",
    "end": "2105920"
  },
  {
    "text": "difficult challenge to solve uh but in this simple application it's very easy and one of the ways that we do that is through the latency based routing",
    "start": "2105920",
    "end": "2112839"
  },
  {
    "text": "capabilities of Route 53 which is our DNS service so this is going to allow you to run multiple origins in different",
    "start": "2112839",
    "end": "2119359"
  },
  {
    "text": "regions uh and pick the origin that you're going to go to Via latency based routing so let's look at what that looks",
    "start": "2119359",
    "end": "2125720"
  },
  {
    "text": "like uh from from a map perspective so if we have the testers in Oregon and Tokyo making request for Content that's",
    "start": "2125720",
    "end": "2132760"
  },
  {
    "text": "going to get resolved by DNS which is that Shield there uh to cloudfront the",
    "start": "2132760",
    "end": "2138320"
  },
  {
    "text": "nearest Edge location right so probably something very close by cloudfront is then going to make a request to the",
    "start": "2138320",
    "end": "2143800"
  },
  {
    "text": "origin uh through the DNS name to the for the origin uh that's going to get resolved by R 53 to the nearest origin",
    "start": "2143800",
    "end": "2150400"
  },
  {
    "text": "right so you can see here how the cloud front edge locations for Oregon would end up in Virginia and the one for Tokyo",
    "start": "2150400",
    "end": "2156480"
  },
  {
    "text": "would end up in uh in Singapore all right so the next optimization I want to talk to is",
    "start": "2156480",
    "end": "2163240"
  },
  {
    "text": "flipping optimization three on its head which is cach the base page but make the",
    "start": "2163240",
    "end": "2169359"
  },
  {
    "text": "API calls the Ajax calls more Dynamic like let them take care of the dynamic stuff but cach the base",
    "start": "2169359",
    "end": "2175119"
  },
  {
    "text": "page so looking at the numbers does this matter on the first hit really no difference and this makes perfect sense",
    "start": "2175119",
    "end": "2181280"
  },
  {
    "text": "now because we've already gone through proxying the whole site we're not getting any benefit out of caching here",
    "start": "2181280",
    "end": "2186640"
  },
  {
    "text": "so first hit is a wash but if we look at subsequent requests we can see a decent",
    "start": "2186640",
    "end": "2192520"
  },
  {
    "text": "Improvement in performance uh probably little less than 100 milliseconds Improvement in performance if we look at",
    "start": "2192520",
    "end": "2199119"
  },
  {
    "text": "Tokyo uh same kind of pattern right no improvement on the uh on left side but",
    "start": "2199119",
    "end": "2204240"
  },
  {
    "text": "decent Improvement on the right so why does this matter",
    "start": "2204240",
    "end": "2209400"
  },
  {
    "text": "well there's 108 objects to load one object is the base page that base page",
    "start": "2209400",
    "end": "2215880"
  },
  {
    "text": "is blocking everything else right until that until we start getting the bytes of the base page we don't know what the",
    "start": "2215880",
    "end": "2221480"
  },
  {
    "text": "other 107 objects are to load right so the more we can do to accelerate that the better we are overall right we can",
    "start": "2221480",
    "end": "2228200"
  },
  {
    "text": "start doing things in parallel right which is the key to to Performance so that's what this waterfall is showing here and from my",
    "start": "2228200",
    "end": "2235480"
  },
  {
    "text": "application all I had to do is flip what I'm doing with the cast control headers set the max age on the root object to be",
    "start": "2235480",
    "end": "2241119"
  },
  {
    "text": "300 seconds and on the Ajax calls I can leave that at zero and that's it but for",
    "start": "2241119",
    "end": "2247119"
  },
  {
    "text": "you guys is probably going to be a little bit more complex so let me give you some ideas on how you can make this reality for for you so what are some of",
    "start": "2247119",
    "end": "2254200"
  },
  {
    "text": "the types of things that you may want to do uh on the base page you might want to determine what the browser is so you can serve a mobile version versus a desktop",
    "start": "2254200",
    "end": "2260800"
  },
  {
    "text": "version and cloudfront is going to what it can do for you if you choose to do that is uh have it inject a header to",
    "start": "2260800",
    "end": "2267400"
  },
  {
    "text": "say is the viewer a mobile viewer tablet or or desktop viewer so you can vary the",
    "start": "2267400",
    "end": "2272839"
  },
  {
    "text": "cache based on those headers so this is something that one of the things that you can get out of it what language is the viewer can uh again vary it by the",
    "start": "2272839",
    "end": "2279839"
  },
  {
    "text": "accept language header and then from a personalization perspective let's say it's uh you know",
    "start": "2279839",
    "end": "2285319"
  },
  {
    "text": "me John manuso logging into the Amazon Health and Beauty site um you know I",
    "start": "2285319",
    "end": "2290440"
  },
  {
    "text": "might want to see what my product recommendations are I can do that via an Ajax request right I don't need to get",
    "start": "2290440",
    "end": "2295480"
  },
  {
    "text": "that from the base page I can make an Ajax request to say all right these are the personal the personalized items for",
    "start": "2295480",
    "end": "2300880"
  },
  {
    "text": "John uh but how am I going to handle the authentication well you can definitely see a you know push over the last few",
    "start": "2300880",
    "end": "2306920"
  },
  {
    "text": "years to uh for for uh for both the uh end users",
    "start": "2306920",
    "end": "2312119"
  },
  {
    "text": "uh benefit and and and your benefit as a site owner to use web identity providers like login with Facebook login with",
    "start": "2312119",
    "end": "2317960"
  },
  {
    "text": "Amazon Google uh so those can basically you know you're your the whether the",
    "start": "2317960",
    "end": "2323480"
  },
  {
    "text": "person's logged in or not can be persisted in JavaScript doesn't have to be part of the base page",
    "start": "2323480",
    "end": "2328760"
  },
  {
    "text": "logic so it is doable to do that and I think you can saw it was a pretty good benefit the last thing I want to talk",
    "start": "2328760",
    "end": "2334880"
  },
  {
    "text": "about is about optimizing for browser Behavior here um",
    "start": "2334880",
    "end": "2340960"
  },
  {
    "text": "so uh what is what does this mean this is actually a bundle of optimizations I'm going to get to them in a second but",
    "start": "2340960",
    "end": "2347359"
  },
  {
    "text": "let's see if they're significant or not so if we look here for Oregon we see that we can save you know uh over a",
    "start": "2347359",
    "end": "2354640"
  },
  {
    "text": "second well over a second on that first page load so definitely worthwhile there and then on the right hand side you can",
    "start": "2354640",
    "end": "2360680"
  },
  {
    "text": "see you know again a decent amount of time saved so I think these These are really important optimizations that that",
    "start": "2360680",
    "end": "2366720"
  },
  {
    "text": "you guys would want to take advantage of Tokyo same kind of thing so what are they what are these",
    "start": "2366720",
    "end": "2372960"
  },
  {
    "text": "what is this bundle of of optimizations that that I went through so first off instead of having one uh Alias to",
    "start": "2372960",
    "end": "2379480"
  },
  {
    "text": "cloudfront one C name you know could be mysite.com I'm going to have multiple so I have mysite.com mysite one.com mysite",
    "start": "2379480",
    "end": "2386599"
  },
  {
    "text": "2.com mysite 3.com and I'm going to use them strategically and explain why that matters in a second but right now I just",
    "start": "2386599",
    "end": "2393280"
  },
  {
    "text": "want to tell you that's what I did uh uh reduce the number of objects in the in the head requests cuz just like the P",
    "start": "2393280",
    "end": "2399880"
  },
  {
    "text": "main page the rest of the body objects can't start loading until the head is done um loading so anything we could do",
    "start": "2399880",
    "end": "2405240"
  },
  {
    "text": "to accelerate that is a big benefit do that by comining all the CSS into one file and all the javascripts into one",
    "start": "2405240",
    "end": "2411560"
  },
  {
    "text": "file and uh uh just only making two requests in the head uh so that's something that anybody can do right",
    "start": "2411560",
    "end": "2417359"
  },
  {
    "text": "there's no usually not a big blocker to that um the next thing is enabling gzip",
    "start": "2417359",
    "end": "2424760"
  },
  {
    "text": "right so compressing all the content um uh As It Gets Sent will help and then I",
    "start": "2424760",
    "end": "2430319"
  },
  {
    "text": "decided to uh initiate asynchronous calls early on in the page load life",
    "start": "2430319",
    "end": "2435560"
  },
  {
    "text": "cycle so let's take a look at why I came up with these ideas and to do that we'll look at this waterfall graph so if",
    "start": "2435560",
    "end": "2442280"
  },
  {
    "text": "you're looking at the waterfall graph and I apologize I know probably is going to be hard to see but it's something you can always come back to on the video",
    "start": "2442280",
    "end": "2447920"
  },
  {
    "text": "afterwards uh if you look at um uh",
    "start": "2447920",
    "end": "2453119"
  },
  {
    "text": "o1j which is the you know the first part of the body you can see again just like I said that has to wait for everything",
    "start": "2453119",
    "end": "2459119"
  },
  {
    "text": "in the head uh to to load all the CSS files and the JavaScript files and then",
    "start": "2459119",
    "end": "2464480"
  },
  {
    "text": "a really interesting thing is look at where the Orange Line starts to build right if you look at uh",
    "start": "2464480",
    "end": "2471640"
  },
  {
    "text": "o6 uh. CSS you'll see the orange line starting to build so that's the connection time we talked about earlier",
    "start": "2471640",
    "end": "2478560"
  },
  {
    "text": "uh I'm not going to answer that for you right now maybe some of you know the an is to why that is I'll answer it in the next slide but right now let's just",
    "start": "2478560",
    "end": "2484440"
  },
  {
    "text": "observe that and the last thing is the Ajax quests uh we can see that they don't start loading I had them at the",
    "start": "2484440",
    "end": "2490400"
  },
  {
    "text": "end of the page just by chance uh and they don't start loading until every other object is been loaded right and",
    "start": "2490400",
    "end": "2496720"
  },
  {
    "text": "now we have to wait for the page to load for an asynchronous thing you really don't want that to happen right so initiate these asynchronous CS calls",
    "start": "2496720",
    "end": "2502960"
  },
  {
    "text": "early on uh and then the rest of the page can continue to load while they're happening so this is this this is the",
    "start": "2502960",
    "end": "2509640"
  },
  {
    "text": "reason for that six right why did we why did that come uh uh uh the why did the",
    "start": "2509640",
    "end": "2516079"
  },
  {
    "text": "connection time start building on o6 CSS it's because uh this typically browsers",
    "start": "2516079",
    "end": "2522240"
  },
  {
    "text": "have a setting that says how many persistent connections can be established from the browser to a server",
    "start": "2522240",
    "end": "2528280"
  },
  {
    "text": "in this case it's six for Firefox it used to be two depends on the browser depends on you know lots of things so",
    "start": "2528280",
    "end": "2534640"
  },
  {
    "text": "this number isn't like always going to be six but I wanted to make sure that you understand that there is a limit of how many connections that a browser is",
    "start": "2534640",
    "end": "2541559"
  },
  {
    "text": "going to make to your server and if you have 108 objects something to keep in mind all right so let's look at the post",
    "start": "2541559",
    "end": "2548440"
  },
  {
    "text": "optimization benefits so uh the first three requests the the body uh um the",
    "start": "2548440",
    "end": "2555559"
  },
  {
    "text": "CSS file the J uh and the JS file are all happening through one domain name",
    "start": "2555559",
    "end": "2560599"
  },
  {
    "text": "PFC 303. cdnj man. WS uh so I'm not using any other Ellas yet uh and you",
    "start": "2560599",
    "end": "2567800"
  },
  {
    "text": "could see that uh you know we've gotten those done a lot quicker than we had on the previous uh on the previous",
    "start": "2567800",
    "end": "2574520"
  },
  {
    "text": "waterfall uh uh the there was no and there was no that connection time",
    "start": "2574520",
    "end": "2580400"
  },
  {
    "text": "for6 doesn't start blocking until way down in the body load so the next couple of requests which are the Ajax requests",
    "start": "2580400",
    "end": "2586880"
  },
  {
    "text": "we're using a different uh Alias now it's PFC 303. cdn2",
    "start": "2586880",
    "end": "2593319"
  },
  {
    "text": "jws and so we don't run into that six connection limit we not we've not made six requests yet before we started um uh",
    "start": "2593319",
    "end": "2603000"
  },
  {
    "text": "before we started processing the the Ajax requests and those are not going to these requests are now not going to",
    "start": "2603000",
    "end": "2608319"
  },
  {
    "text": "block anything else because uh they can all happen uh there's you know six",
    "start": "2608319",
    "end": "2613440"
  },
  {
    "text": "requests or six connections possible from PFC 303 cdn2 and PFC uh 303 cdn3 uh",
    "start": "2613440",
    "end": "2622319"
  },
  {
    "text": "all to the server so they're going to all happen without any kind of blocking the the first time that we're going to get a connection blocking is uh like I",
    "start": "2622319",
    "end": "2628960"
  },
  {
    "text": "said way down the way down in the body load you can't make 108 simultaneous requests to the origin that just",
    "start": "2628960",
    "end": "2635440"
  },
  {
    "text": "probably wouldn't make sense but the important thing here to understand is that you can uh use multiple domain",
    "start": "2635440",
    "end": "2640480"
  },
  {
    "text": "names to basically uh strategically place where the connections are going to",
    "start": "2640480",
    "end": "2645640"
  },
  {
    "text": "uh get blocked right where where it is that you're going to um uh uh you know",
    "start": "2645640",
    "end": "2652040"
  },
  {
    "text": "have uh asynchronous requests go without blocking other other requests uh and then you could see the",
    "start": "2652040",
    "end": "2658760"
  },
  {
    "text": "benefits of uh you know compression and and and so on so um those are the those are the",
    "start": "2658760",
    "end": "2665520"
  },
  {
    "text": "optimizations I wanted to walk through let's see the summary here in terms of you know what percentage improvements we got by going through these five",
    "start": "2665520",
    "end": "2672760"
  },
  {
    "text": "optimizations uh for V Virginia that last one optimization 5 it doesn't it's",
    "start": "2672760",
    "end": "2678079"
  },
  {
    "text": "not it's not U uh it's more than just fighting latency right this is making your whole application faster even",
    "start": "2678079",
    "end": "2684119"
  },
  {
    "text": "without any latency you could see that that really had an impact uh by you know 11% and 27% roughly respectively uh for",
    "start": "2684119",
    "end": "2692319"
  },
  {
    "text": "the first request and subsequent requests at Oregon 31% and 86 % savings",
    "start": "2692319",
    "end": "2697839"
  },
  {
    "text": "for cash hits right I mean that's an incredible number uh and then Tokyo",
    "start": "2697839",
    "end": "2703000"
  },
  {
    "text": "again 76 and 95 uh% 96% really um now I",
    "start": "2703000",
    "end": "2708880"
  },
  {
    "text": "know many of you won't be able to do multiple Origins like I said so I wanted to show you without that one optimization without the multiple um uh",
    "start": "2708880",
    "end": "2716440"
  },
  {
    "text": "multiple regions optimization we're still looking at 52% Improvement in and Page load time in Tokyo and 93% uh for",
    "start": "2716440",
    "end": "2724200"
  },
  {
    "text": "cash hits so um that's all I have um I",
    "start": "2724200",
    "end": "2729559"
  },
  {
    "text": "want to ask just call out a couple of things uh you know we're short on time here so we may not be able to take many",
    "start": "2729559",
    "end": "2736040"
  },
  {
    "text": "questions if you have questions um you know we'll stand over here to the side and try and answer as many as we can but",
    "start": "2736040",
    "end": "2741400"
  },
  {
    "text": "you can go down to the um uh cloudfront Booth or uh in the AWS Booth is a cloudfront section uh we're happy to",
    "start": "2741400",
    "end": "2748079"
  },
  {
    "text": "take questions there also there's uh webinar coming up next Thursday on reporting on cloudfront which is an",
    "start": "2748079",
    "end": "2754440"
  },
  {
    "text": "important part of performance optimization as well just knowing how your application is doing uh so if you",
    "start": "2754440",
    "end": "2759680"
  },
  {
    "text": "want to join that is uh it would be great thank you and please give us feedback on how we did",
    "start": "2759680",
    "end": "2768040"
  }
]