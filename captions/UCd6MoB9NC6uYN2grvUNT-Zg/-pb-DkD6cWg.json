[
  {
    "start": "0",
    "end": "82000"
  },
  {
    "text": "all right well welcome and I hope everybody's having a great reinvent",
    "start": "0",
    "end": "5339"
  },
  {
    "text": "thanks for being here with us so one of the most common questions that I get",
    "start": "5339",
    "end": "10370"
  },
  {
    "text": "from customers really centers on this idea of like you know how do I think",
    "start": "10370",
    "end": "15599"
  },
  {
    "text": "about my database investments you know it's it used to be a platform choice",
    "start": "15599",
    "end": "21689"
  },
  {
    "text": "like I would consider two or three vendors I would pick one that was my",
    "start": "21689",
    "end": "26820"
  },
  {
    "text": "platform that was my primary investment that I'd start building all my applications on that platform but today",
    "start": "26820",
    "end": "35040"
  },
  {
    "text": "there's there's hundreds of databases to choose from when you really look and",
    "start": "35040",
    "end": "40770"
  },
  {
    "text": "that's pretty hard you know to reason and customers like how should I how should I think about picking the right",
    "start": "40770",
    "end": "46800"
  },
  {
    "text": "tool for the right job and that's really the topic that we're gonna explore together today so if you leave this",
    "start": "46800",
    "end": "54390"
  },
  {
    "text": "session just having a better frame on how to think about these different databases their purpose the use cases",
    "start": "54390",
    "end": "61230"
  },
  {
    "text": "they support then we've done our job so I'm gonna try to cover the the whole",
    "start": "61230",
    "end": "67590"
  },
  {
    "text": "family of databases in the small amount of time we have we're gonna slip a demo",
    "start": "67590",
    "end": "72810"
  },
  {
    "text": "right into the middle and then at the very end I'll just have folks come up enjoy this upfront to answer questions",
    "start": "72810",
    "end": "79229"
  },
  {
    "text": "so let's let's get into it so if I were sitting down with you and",
    "start": "79229",
    "end": "86520"
  },
  {
    "start": "82000",
    "end": "400000"
  },
  {
    "text": "we were talking about databases this is one of the questions that I'd ask you straight away what is your database",
    "start": "86520",
    "end": "91890"
  },
  {
    "text": "strategy some customers that I talk to have a point of view on what their",
    "start": "91890",
    "end": "97950"
  },
  {
    "text": "database strategy is other customers are actually in the middle of thinking well what is our database strategy going",
    "start": "97950",
    "end": "104490"
  },
  {
    "text": "forward and then and then everything in between but what I find in this question is two",
    "start": "104490",
    "end": "111420"
  },
  {
    "text": "areas of focus almost always come up in almost every conversation I have in",
    "start": "111420",
    "end": "116640"
  },
  {
    "text": "those two fundamental areas that emerge are really around lift and shift you",
    "start": "116640",
    "end": "123210"
  },
  {
    "text": "know how do I think about lift and shift moving from on-premise into the cloud the second thing that comes up is how I",
    "start": "123210",
    "end": "130770"
  },
  {
    "text": "think about new database or in that database investments and new apps because that's that's a very",
    "start": "130770",
    "end": "136160"
  },
  {
    "text": "different thing than it than it was in the past and how people built their applications so let's take a closer look",
    "start": "136160",
    "end": "143840"
  },
  {
    "text": "at lift and shift so when I get into discussion around lift and shift",
    "start": "143840",
    "end": "150170"
  },
  {
    "text": "typically what's happening is somebody's got a set of applications that they've already built they don't have budget to rewrite those",
    "start": "150170",
    "end": "157280"
  },
  {
    "text": "applications they're trying to find ways to free up budget and one of the things",
    "start": "157280",
    "end": "163010"
  },
  {
    "text": "that they start looking at is hey if I can move some of my existing applications into a cloud can I get some",
    "start": "163010",
    "end": "171260"
  },
  {
    "text": "sort of return that frees up budget that I can invest in other places I can start innovating and that's basically what the",
    "start": "171260",
    "end": "178250"
  },
  {
    "text": "discussion is in its shortest form but in that what I often hear from customers",
    "start": "178250",
    "end": "184040"
  },
  {
    "text": "is this this notion of hey I actually really want to move off of these old",
    "start": "184040",
    "end": "189200"
  },
  {
    "text": "guard commercial databases I typically don't even have to ask why because what",
    "start": "189200",
    "end": "194390"
  },
  {
    "text": "they'll continue to tell me just yesterday is having lunch with somebody I didn't even know I just sat down sat",
    "start": "194390",
    "end": "200209"
  },
  {
    "text": "next to somebody asked him what he did for a living and he started telling me that hey I you know we build a financial",
    "start": "200209",
    "end": "207560"
  },
  {
    "text": "payroll thing in small medium-sized business we're trying to actually move",
    "start": "207560",
    "end": "212810"
  },
  {
    "text": "off of this commercial database I'm trying to free up some dollars so I can take that money and reinvest it back",
    "start": "212810",
    "end": "219650"
  },
  {
    "text": "into building new parts of my application that's that just happened yesterday now what comes next is you",
    "start": "219650",
    "end": "228350"
  },
  {
    "text": "know I don't want to be stuck I don't want to be stuck with punitive licensing terms these Licensing's terms change on",
    "start": "228350",
    "end": "234620"
  },
  {
    "text": "me to change my behavior that doesn't work for me I'm really thinking about moving over to open source like that's a",
    "start": "234620",
    "end": "241579"
  },
  {
    "text": "thing that we want to do in this case this particular gentleman told me he's like we want to move to Arora right away",
    "start": "241579",
    "end": "247870"
  },
  {
    "text": "so when you think about that comment going from commercial like Oracle or",
    "start": "247870",
    "end": "254120"
  },
  {
    "text": "sequel server to something on open source the next thing that I typically hear is hey we've been experimenting",
    "start": "254120",
    "end": "260510"
  },
  {
    "text": "with open source on-premise it's actually hard to get this to perform the way we need it to",
    "start": "260510",
    "end": "266480"
  },
  {
    "text": "but this is basically why we built Amazon Aurora sororal gives you the",
    "start": "266480",
    "end": "272510"
  },
  {
    "text": "performance and availability of commercial with the cost-effectiveness of open source it's really the simplest",
    "start": "272510",
    "end": "277790"
  },
  {
    "text": "way to think about it with the roar you'll see often five times the performance of standard my sequel three",
    "start": "277790",
    "end": "285380"
  },
  {
    "text": "times the performance of Postgres all with the security availability and reliability of commercial-grade at about",
    "start": "285380",
    "end": "291920"
  },
  {
    "text": "a tenth of the cost this is really why Annie is always showing up at reinvents",
    "start": "291920",
    "end": "297080"
  },
  {
    "text": "and talking about Aurora being one of the fastest growing services in AWS now",
    "start": "297080",
    "end": "303590"
  },
  {
    "text": "I also talked to a lot of customers that basically starts with hey ivory I've got",
    "start": "303590",
    "end": "310970"
  },
  {
    "text": "legacy apps I want to improve the performance and scale I want to free up",
    "start": "310970",
    "end": "316520"
  },
  {
    "text": "resources to innovate and a lot of folks running commercial databases will first move into RDS and they'll move into RDS",
    "start": "316520",
    "end": "325820"
  },
  {
    "text": "because RDS is just going to automate a lot of time-consuming tasks that many of you probably do on your own premise I",
    "start": "325820",
    "end": "332120"
  },
  {
    "text": "don't know that I need to go through what all of that means but the net is is when you're not doing provisioning and",
    "start": "332120",
    "end": "339050"
  },
  {
    "text": "managing servers and setting up h.a you get that time back to invest in other",
    "start": "339050",
    "end": "344150"
  },
  {
    "text": "things the other thing that a lot of customers benefit from on this lift and",
    "start": "344150",
    "end": "350570"
  },
  {
    "text": "shift category is using tools like DMS DMS is an excellent tool and I've seen",
    "start": "350570",
    "end": "359330"
  },
  {
    "text": "some big big enterprises take full advantage of this and the tooling is not",
    "start": "359330",
    "end": "365390"
  },
  {
    "text": "really meant to just it's not like point a tool at a source and then pointed at a",
    "start": "365390",
    "end": "371150"
  },
  {
    "text": "destination and everything is just going to get sorted out but these tools are getting better and smarter every day I",
    "start": "371150",
    "end": "377380"
  },
  {
    "text": "often think of these tools like having an army of consultants by your side through that knowledge through the form",
    "start": "377380",
    "end": "384080"
  },
  {
    "text": "of a software so if you're looking to move from sequel or Oracle or something",
    "start": "384080",
    "end": "391220"
  },
  {
    "text": "like my sequel or into AWS I would encourage you to check out DMS a lot of folks it saves folks a lot of time and",
    "start": "391220",
    "end": "398150"
  },
  {
    "text": "money all right so let's shift gears and take",
    "start": "398150",
    "end": "403360"
  },
  {
    "start": "400000",
    "end": "604000"
  },
  {
    "text": "a look at how customers think about database investments for new apps this",
    "start": "403360",
    "end": "410590"
  },
  {
    "text": "is very different than how things used to be this is really the crux of why",
    "start": "410590",
    "end": "415660"
  },
  {
    "text": "we're here right now so if you think about modern apps these modern apps",
    "start": "415660",
    "end": "422740"
  },
  {
    "text": "create all new requirements than what we might have been used to 10 15 20 years ago so for example if you think about",
    "start": "422740",
    "end": "431050"
  },
  {
    "text": "some of the largest cloud applications today you'll know you know such as like ride-hailing media streaming social",
    "start": "431050",
    "end": "437680"
  },
  {
    "text": "media dating you'll you'll notice some common characteristics millions of users",
    "start": "437680",
    "end": "443610"
  },
  {
    "text": "located all over the world everybody's expecting a near-instant experience",
    "start": "443610",
    "end": "449080"
  },
  {
    "text": "which could translate predictable sub-millisecond performance these",
    "start": "449080",
    "end": "455230"
  },
  {
    "text": "systems need to scale on-the-fly so this whole idea of a one-size-fits-all",
    "start": "455230",
    "end": "461080"
  },
  {
    "text": "database that doesn't work anymore instead developers are doing what they",
    "start": "461080",
    "end": "467050"
  },
  {
    "text": "do best they take these giant applications they break them into smaller parts and then they picked the",
    "start": "467050",
    "end": "473560"
  },
  {
    "text": "right tool for the right job why do they do that most developers say",
    "start": "473560",
    "end": "478930"
  },
  {
    "text": "the same thing to me I do not want to trade-off functionality performance or scale so they take a big",
    "start": "478930",
    "end": "486430"
  },
  {
    "text": "app break it into smaller parts and pick the right tool for the right job if we",
    "start": "486430",
    "end": "492190"
  },
  {
    "text": "went and looked at any of these large modern applications looked at the architecture behind the scenes you're",
    "start": "492190",
    "end": "497710"
  },
  {
    "text": "not going to see a platform or one database supporting it you're gonna see",
    "start": "497710",
    "end": "502750"
  },
  {
    "text": "most of the customers that are going down this path what they're doing is using the right tool for the right job so it's a variety of purpose-built",
    "start": "502750",
    "end": "509500"
  },
  {
    "text": "engines why because they don't want to trade off on functionality performance",
    "start": "509500",
    "end": "514599"
  },
  {
    "text": "or scale okay so if you think about",
    "start": "514600",
    "end": "521020"
  },
  {
    "text": "common data categories and use cases this this one slide is the one that almost everybody I show it to takes",
    "start": "521020",
    "end": "527110"
  },
  {
    "text": "picture of because it's a different way of thinking about things I am personally not a big fan of this no",
    "start": "527110",
    "end": "534740"
  },
  {
    "text": "sequel or non relational relational or no single I actually don't think that",
    "start": "534740",
    "end": "539840"
  },
  {
    "text": "helps the mental model of anything what I see from customers and developers is",
    "start": "539840",
    "end": "545090"
  },
  {
    "text": "they think about a family of databases and they're not competing with each other they're complementing each other",
    "start": "545090",
    "end": "551590"
  },
  {
    "text": "so when we think about a family of databases all we have done here is just",
    "start": "551590",
    "end": "556700"
  },
  {
    "text": "listed out some common categories along with the purpose of the tool in that",
    "start": "556700",
    "end": "562670"
  },
  {
    "text": "category along with some common use cases the use cases is not an exhaustive",
    "start": "562670",
    "end": "568670"
  },
  {
    "text": "list it's just to give you an idea so instead of looking at a list of to 300",
    "start": "568670",
    "end": "574190"
  },
  {
    "text": "databases I found when people just kind of turn it on its side and think about these categories then when you're",
    "start": "574190",
    "end": "580880"
  },
  {
    "text": "thinking about how do I pick the right tool for the right job it really starts with the use case and the access pattern",
    "start": "580880",
    "end": "586670"
  },
  {
    "text": "and then you pick the tech the the way it used to be was pick the tech then go",
    "start": "586670",
    "end": "593420"
  },
  {
    "text": "figure out how to do the use case and that's not the world we really live in anymore all right",
    "start": "593420",
    "end": "599480"
  },
  {
    "text": "so let's take a closer look at three of these I'm gonna get a little more detailed as we go now okay so let's look",
    "start": "599480",
    "end": "606230"
  },
  {
    "start": "604000",
    "end": "980000"
  },
  {
    "text": "at relational key value and graph now the reason I'm picking these three",
    "start": "606230",
    "end": "613010"
  },
  {
    "text": "it's not just a random collection is I actually think this really illustrates how databases have gone from platform to",
    "start": "613010",
    "end": "621620"
  },
  {
    "text": "more specialized over time so relational really emerged in the 70s",
    "start": "621620",
    "end": "627040"
  },
  {
    "text": "most of us are quite familiar with it because it's been around for multiple decades but key value is an example of a",
    "start": "627040",
    "end": "634970"
  },
  {
    "text": "new thing you know that starts to emerge in the 2000s graph really starts to",
    "start": "634970",
    "end": "640700"
  },
  {
    "text": "emerge in the last 12 to 18 months I don't think it's a coincidence that",
    "start": "640700",
    "end": "647450"
  },
  {
    "text": "these more specialized databases are emerging at the same time these modern",
    "start": "647450",
    "end": "652820"
  },
  {
    "text": "cloud apps are I don't think that's a coincidence I think that's the reality of what these new apps need",
    "start": "652820",
    "end": "659740"
  },
  {
    "text": "purpose-built engines so if we look at relational I'm gonna assume most of us are familiar",
    "start": "659740",
    "end": "666380"
  },
  {
    "text": "but just to recap if you think about sort of the purpose of relational in the",
    "start": "666380",
    "end": "671720"
  },
  {
    "text": "access pattern this is really about modeling or breaking data amongst tables",
    "start": "671720",
    "end": "678950"
  },
  {
    "text": "so I don't have the same data over and over and over and over you know if you think about it when relational first",
    "start": "678950",
    "end": "684650"
  },
  {
    "text": "came along storage was the premium so if you kept an address for a hospital a",
    "start": "684650",
    "end": "689840"
  },
  {
    "text": "thousand times over and you had to change the address it's like a thousand updates whereas if I just put it in the",
    "start": "689840",
    "end": "696020"
  },
  {
    "text": "hospital table give it a key it's one update I'm using less storage but the",
    "start": "696020",
    "end": "701390"
  },
  {
    "text": "reality is with these systems when I talk to developers it usually sounds like this I don't know all of the",
    "start": "701390",
    "end": "708110"
  },
  {
    "text": "questions that are gonna be asked to this data but what I do know is when somebody wants to ask a question perform",
    "start": "708110",
    "end": "715220"
  },
  {
    "text": "some ad hoc query that that must be that data that comes back must be high",
    "start": "715220",
    "end": "720290"
  },
  {
    "text": "integrity very consistent and I need that system to make sure that that",
    "start": "720290",
    "end": "725720"
  },
  {
    "text": "referential integrity is preserved so in this particular case I get a bunch of data accuracy and consistency if you",
    "start": "725720",
    "end": "733460"
  },
  {
    "text": "look at just how you might query that like in this case we've got you know",
    "start": "733460",
    "end": "738470"
  },
  {
    "text": "we're using a very simple schema here we modeled a patient a doctor a hospital visits and medical treatments pretty",
    "start": "738470",
    "end": "745430"
  },
  {
    "text": "simple we've got some keys that connect these things together so somebody can't",
    "start": "745430",
    "end": "751250"
  },
  {
    "text": "go delete a table the system won't let that happen but if I asked a question like doctors affiliated with a",
    "start": "751250",
    "end": "757010"
  },
  {
    "text": "particular Hospital pretty straightforward for a developer you know select from where statement the things",
    "start": "757010",
    "end": "763310"
  },
  {
    "text": "that meet that particular condition I get the result set back but I can trust that that data is consistent that I'm",
    "start": "763310",
    "end": "769670"
  },
  {
    "text": "looking at I might ask something a little more I might say hey I'd like to know imagine",
    "start": "769670",
    "end": "775640"
  },
  {
    "text": "if we had a we were an insurance company and we wanted to know the number of patient visits each doctor completed",
    "start": "775640",
    "end": "782750"
  },
  {
    "text": "last week well the developer that was implementing the query to answer that",
    "start": "782750",
    "end": "787970"
  },
  {
    "text": "question for us might write something like that you know or I select from where and then I group by that's kind of",
    "start": "787970",
    "end": "796550"
  },
  {
    "text": "the axis pattern I get this awesome integrity on the data that I'm looking at now as we all know",
    "start": "796550",
    "end": "802760"
  },
  {
    "text": "I've seen this many a times like if you overburden you can overburden any",
    "start": "802760",
    "end": "808700"
  },
  {
    "text": "database you just ask it to do more than it was supposed to do and that's where things start to you know that's where",
    "start": "808700",
    "end": "814970"
  },
  {
    "text": "things start to get in trouble but when you use them for their purpose they can do awesome this is what relational does",
    "start": "814970",
    "end": "821150"
  },
  {
    "text": "well ok so now let's look at key value so key value is all about the simple key",
    "start": "821150",
    "end": "829190"
  },
  {
    "text": "value pairs it's all about you know horizontal partitioning it's all about",
    "start": "829190",
    "end": "836470"
  },
  {
    "text": "consistent performance at scale so if you and I were building a video game app",
    "start": "836470",
    "end": "841970"
  },
  {
    "text": "and we had we were like how many users are we gonna have mmm it could be a hundred thousand it could be a hundred",
    "start": "841970",
    "end": "848330"
  },
  {
    "text": "million but no matter what it is we need consistent performance at scale she",
    "start": "848330",
    "end": "854510"
  },
  {
    "text": "imagine if we built a video game and the things stopped scaling like these players today boom they're gone one",
    "start": "854510",
    "end": "859580"
  },
  {
    "text": "click away they're off to the next game we can't afford that so that's why a lot of folks think about key value in these",
    "start": "859580",
    "end": "867380"
  },
  {
    "text": "use cases where you need perfect very consistent performance at scale a very flexible model and if you look here in",
    "start": "867380",
    "end": "875150"
  },
  {
    "text": "the middle you know the the you know the the language or the the way a developer",
    "start": "875150",
    "end": "880790"
  },
  {
    "text": "would interact with the system is pretty straightforward with puts and gets on the right is just a very simple gamers",
    "start": "880790",
    "end": "886850"
  },
  {
    "text": "table with the primary key and a set of attributes but let's look at how you might access data so in this axis",
    "start": "886850",
    "end": "895160"
  },
  {
    "text": "pattern on the right we have a gamer's table we try to keep this really simple just so we get through this quickly but",
    "start": "895160",
    "end": "901280"
  },
  {
    "text": "you'll see on my primary key a gamertag look at hammer 57 there and then under",
    "start": "901280",
    "end": "907640"
  },
  {
    "text": "type there's rank status weapon and if you look at status health and progress",
    "start": "907640",
    "end": "912830"
  },
  {
    "text": "imagine if we built a video game and part of our application logic needed to",
    "start": "912830",
    "end": "918320"
  },
  {
    "text": "quickly understand the current health of a player in real time as the games being",
    "start": "918320",
    "end": "924620"
  },
  {
    "text": "played so that's a really simple get go give me that data that query might look that easy where I go get from the",
    "start": "924620",
    "end": "931340"
  },
  {
    "text": "gamer's this key the type status and that's what the system is gonna pull out",
    "start": "931340",
    "end": "936860"
  },
  {
    "text": "just that it's a very simple yet and it works fast extremely fast or you know if",
    "start": "936860",
    "end": "946640"
  },
  {
    "text": "it's one of those situations where we need all of the data or so she associated to a particular game at",
    "start": "946640",
    "end": "953360"
  },
  {
    "text": "gamertag that's what the query would look like and in this particular case",
    "start": "953360",
    "end": "958700"
  },
  {
    "text": "we're gonna go pull back all of that data but the real magic in this is how",
    "start": "958700",
    "end": "964820"
  },
  {
    "text": "you can partition this data very easily for this very simple put get access pattern in regardless if we had 10 users",
    "start": "964820",
    "end": "972710"
  },
  {
    "text": "10 million or a hundred million users the system's going to perform the same",
    "start": "972710",
    "end": "978670"
  },
  {
    "text": "now if we look at graph graph is really about highly connected data you know",
    "start": "978670",
    "end": "985700"
  },
  {
    "start": "980000",
    "end": "1238000"
  },
  {
    "text": "where where relationships are first-class objects they have attributes",
    "start": "985700",
    "end": "991430"
  },
  {
    "text": "they can be queried in index so in this very simple drawing",
    "start": "991430",
    "end": "997750"
  },
  {
    "text": "there's vertices in a graph others call them nodes vertice graph vertex just",
    "start": "997750",
    "end": "1003700"
  },
  {
    "text": "means the same thing so in this case we have some customers and categories like",
    "start": "1003700",
    "end": "1011620"
  },
  {
    "text": "product and sport and then there's edges and edges are the connections between",
    "start": "1011620",
    "end": "1018040"
  },
  {
    "text": "these nodes that can have attributes on them and this is effectively what you're",
    "start": "1018040",
    "end": "1023920"
  },
  {
    "text": "querying so what do I mean by this so let's say for example we were working on",
    "start": "1023920",
    "end": "1031540"
  },
  {
    "text": "an app and in the app we wanted to do something like a product recommendation so in this case and if we were using a",
    "start": "1031540",
    "end": "1039970"
  },
  {
    "text": "graph which is its purpose is about highly connected data in this sort of use case let's say here we've got bill",
    "start": "1039970",
    "end": "1047010"
  },
  {
    "text": "Amit and Kevin as customers we have product and sport as categories those",
    "start": "1047010",
    "end": "1054490"
  },
  {
    "text": "are our vertexes or nodes bill has purchased product emits purchased",
    "start": "1054490",
    "end": "1060010"
  },
  {
    "text": "product Kevin follows a sport those are those connections are our edges and then Sara shows up in the system",
    "start": "1060010",
    "end": "1068170"
  },
  {
    "text": "Sara follow sports Sara goes to make a purchase from products and we want to",
    "start": "1068170",
    "end": "1075740"
  },
  {
    "text": "basically show her that customers who also follow sports purchase these items",
    "start": "1075740",
    "end": "1082180"
  },
  {
    "text": "that's what the gremlin query would look like to do that so instead of writing",
    "start": "1082180",
    "end": "1090250"
  },
  {
    "text": "hundreds upon hundreds upon hundreds of lines of code in a database whose",
    "start": "1090250",
    "end": "1096440"
  },
  {
    "text": "purpose isn't about traversing these types of relationships that's what I",
    "start": "1096440",
    "end": "1101960"
  },
  {
    "text": "mean by using something in a way that it really wasn't designed for a lot of",
    "start": "1101960",
    "end": "1107420"
  },
  {
    "text": "folks can try to do these workarounds and try to figure things out but remember I always hear from our customers I do not want to trade off",
    "start": "1107420",
    "end": "1115220"
  },
  {
    "text": "functionality performance and scale I do not want to spend all my time on these workarounds I just need the thing to",
    "start": "1115220",
    "end": "1120860"
  },
  {
    "text": "work and in this particular case that's the query very simple query to do a",
    "start": "1120860",
    "end": "1126710"
  },
  {
    "text": "product recommendation or the other common use case here as a friend",
    "start": "1126710",
    "end": "1132230"
  },
  {
    "text": "recommendation so if you look over on the right Mary shows up as a customer",
    "start": "1132230",
    "end": "1137860"
  },
  {
    "text": "Amit knows Mary emit knows Kevin now the",
    "start": "1137860",
    "end": "1144440"
  },
  {
    "text": "system can say hey do you know like you could think of a friend recommendation in this context that's what the query",
    "start": "1144440",
    "end": "1151790"
  },
  {
    "text": "looks like for that so it's relatively straight simple once you get versed with",
    "start": "1151790",
    "end": "1158750"
  },
  {
    "text": "it then off you go but the reality is I'm just showing really simple things",
    "start": "1158750",
    "end": "1164120"
  },
  {
    "text": "right now now imagine a graph with millions of nodes and all the associated",
    "start": "1164120",
    "end": "1171770"
  },
  {
    "text": "edges and attributes when you write that query you want that system to run extremely fast now if you take one step",
    "start": "1171770",
    "end": "1180980"
  },
  {
    "text": "back and we look at a couple of customer examples Airbnb most people are familiar",
    "start": "1180980",
    "end": "1188240"
  },
  {
    "text": "with Airbnb Airbnb has a awesome engineering team and the Airbnb is not a",
    "start": "1188240",
    "end": "1195830"
  },
  {
    "text": "it's a it's an experience to us as the users of it but there they break that down into all these smaller",
    "start": "1195830",
    "end": "1202299"
  },
  {
    "text": "parts and they absolutely picked the right tool for the right job in this case they'll use DynamoDB or key",
    "start": "1202299",
    "end": "1209350"
  },
  {
    "text": "value for search history because they're dealing they need super fast look ups",
    "start": "1209350",
    "end": "1214980"
  },
  {
    "text": "they'll use ElastiCache for session state and this allows them",
    "start": "1214980",
    "end": "1221100"
  },
  {
    "text": "sub-millisecond you know page rendering and they'll use RDS first as part of",
    "start": "1221100",
    "end": "1228279"
  },
  {
    "text": "their transactional data so oftentimes when you hear that you could think of the time where you're ready to give a credit card and this could be modeled in",
    "start": "1228279",
    "end": "1234789"
  },
  {
    "text": "a certain way that's Airbnb another really fun one is duolingo I just met a",
    "start": "1234789",
    "end": "1242919"
  },
  {
    "start": "1238000",
    "end": "1304000"
  },
  {
    "text": "reporter yesterday I was doing an interview with her she was from Japan and she uses duolingo for language",
    "start": "1242919",
    "end": "1252039"
  },
  {
    "text": "learning and we were on this topic and I said hey you know if you think a duolingo duolingo which is a language",
    "start": "1252039",
    "end": "1260890"
  },
  {
    "text": "learning platform and they do I think they offer 80 different",
    "start": "1260890",
    "end": "1266559"
  },
  {
    "text": "languages across 300 million total users doing seven billion exercises per month",
    "start": "1266559",
    "end": "1272399"
  },
  {
    "text": "so they break that app into smaller parts they're using DynamoDB for item tracking",
    "start": "1272399",
    "end": "1279789"
  },
  {
    "text": "to see which language exercises were completed they're using Aurora for their",
    "start": "1279789",
    "end": "1285039"
  },
  {
    "text": "primary transactional database for user data and then they're using ElastiCache",
    "start": "1285039",
    "end": "1290909"
  },
  {
    "text": "as a caching layer to speed up descriptions and learning around key",
    "start": "1290909",
    "end": "1297370"
  },
  {
    "text": "words such as the and in it so it's one",
    "start": "1297370",
    "end": "1302380"
  },
  {
    "text": "thing to talk about how developers will will take big things and break them into",
    "start": "1302380",
    "end": "1308020"
  },
  {
    "start": "1304000",
    "end": "1498000"
  },
  {
    "text": "smaller parts pick the right tool for the right job there's nothing better than seeing an actual demo so Joe thank",
    "start": "1308020",
    "end": "1316659"
  },
  {
    "text": "you very much John so we're gonna do is take what shawn has been talking about we're gonna put it into practice with",
    "start": "1316659",
    "end": "1322149"
  },
  {
    "text": "some live running code and what we built for you today is web application",
    "start": "1322149",
    "end": "1328240"
  },
  {
    "text": "ecommerce site that that sells books perhaps so you've used one of these before or familiar with this this type of scenario",
    "start": "1328240",
    "end": "1335390"
  },
  {
    "text": "and what we're gonna do is we're gonna put ourselves in the shoes of the developers building this site when we",
    "start": "1335390",
    "end": "1340500"
  },
  {
    "text": "built this out and we're gonna look at four different use cases and then we're gonna kind of rationalize you know what",
    "start": "1340500",
    "end": "1346410"
  },
  {
    "text": "is the use case what is the data model and what is the right tool for that particular job and then you know we'll",
    "start": "1346410",
    "end": "1353010"
  },
  {
    "text": "summarize so the four use cases we're gonna look at today are a product table and it's similar with the shopping cart",
    "start": "1353010",
    "end": "1360060"
  },
  {
    "text": "in and orders table that'll be the first experience the second one is a product search the third is a leaderboard and",
    "start": "1360060",
    "end": "1367200"
  },
  {
    "text": "the fourth is a recommendation engine so let's get into it so the first use case",
    "start": "1367200",
    "end": "1373230"
  },
  {
    "text": "we're gonna look at is our product table and that's really the metadata that describes you know these books that you",
    "start": "1373230",
    "end": "1378660"
  },
  {
    "text": "see on the screen right now so for that let's go look at what this data is",
    "start": "1378660",
    "end": "1384210"
  },
  {
    "text": "actually modeled as and I'm gonna pick on the book carbs today and there it is",
    "start": "1384210",
    "end": "1396679"
  },
  {
    "text": "now if we look at this data model the book has a unique identifier right and",
    "start": "1397970",
    "end": "1403920"
  },
  {
    "text": "that's a good and I think that's a pretty standard practice and that has a number of attributes the author the",
    "start": "1403920",
    "end": "1409440"
  },
  {
    "text": "category the name the price the rating the s3 bucket where the image resides",
    "start": "1409440",
    "end": "1415230"
  },
  {
    "text": "and it's a self-contained document so you know this this particular data model",
    "start": "1415230",
    "end": "1420750"
  },
  {
    "text": "lends itself really well to a key value store and why I chose dynamodb for this",
    "start": "1420750",
    "end": "1426000"
  },
  {
    "text": "particular use case is I only have 62 books in my website right now but if I",
    "start": "1426000",
    "end": "1431100"
  },
  {
    "text": "have ten thousand one hundred thousand ten million products and customers I want the access pattern to this",
    "start": "1431100",
    "end": "1437940"
  },
  {
    "text": "particular this particular document to be consistent and have the same",
    "start": "1437940",
    "end": "1443310"
  },
  {
    "text": "performance whether I have thousands or millions and that's what key value is really good for so let's modify this",
    "start": "1443310",
    "end": "1449190"
  },
  {
    "text": "we'll make this carbs vegas-style so we'll add a new book to our product table of course anything in Vegas is",
    "start": "1449190",
    "end": "1456390"
  },
  {
    "text": "expensive but delicious so we'll give it a five rating and we'll save that we",
    "start": "1456390",
    "end": "1462630"
  },
  {
    "text": "need a unique identify and we'll save that to our table so",
    "start": "1462630",
    "end": "1468799"
  },
  {
    "text": "we'll go back to our demo app will look at cookbooks and then we'll go try to find carbs vegas-style there it is right",
    "start": "1468799",
    "end": "1477470"
  },
  {
    "text": "there but what I just did is not how I expect my customers to search for books right I think we've all become very",
    "start": "1477470",
    "end": "1484250"
  },
  {
    "text": "accustomed to a really great product search experience instead I expect my customers to go up here in search and",
    "start": "1484250",
    "end": "1492350"
  },
  {
    "text": "there's the book we just add Vegas cards and you know 2998",
    "start": "1492350",
    "end": "1497470"
  },
  {
    "text": "now when I thought about choosing the data store that's going to power the search experience you know this is the",
    "start": "1497470",
    "end": "1503659"
  },
  {
    "text": "one area where I didn't want to compromise on functionality I don't want to as a developer I'll tell you the last thing I want to do is build full text",
    "start": "1503659",
    "end": "1510320"
  },
  {
    "text": "search faceting ranking and autocomplete into a database that doesn't have it",
    "start": "1510320",
    "end": "1515840"
  },
  {
    "text": "that's just a bunch of reinventing the wheel not a good use of my time I'd rather be building other experiences for",
    "start": "1515840",
    "end": "1523549"
  },
  {
    "text": "my customers so I chose Amazon elastic search service because that's its purpose it does really well at full text",
    "start": "1523549",
    "end": "1529669"
  },
  {
    "text": "search now you might be asking yourself but Joe you just wrote to a table and",
    "start": "1529669",
    "end": "1535190"
  },
  {
    "text": "dynamodb but you just told me you just searched for this new book you just had inelastic search index how did you keep",
    "start": "1535190",
    "end": "1541730"
  },
  {
    "text": "those two databases in sync or what did you do behind the scene to make that happen let me show you dynamodb has a really great feature",
    "start": "1541730",
    "end": "1548900"
  },
  {
    "text": "called streams and it's available in all tables so I'll create a new product table and there's and we'll create that",
    "start": "1548900",
    "end": "1561620"
  },
  {
    "text": "and for the streams I label it for this particular table when it's set up what",
    "start": "1561620",
    "end": "1568190"
  },
  {
    "text": "allows me to do is every time that I insert modify or delete an item in my",
    "start": "1568190",
    "end": "1573950"
  },
  {
    "text": "particular DynamoDB table it's gonna write it to the stream or if you want to think about it as a cue so with that cue",
    "start": "1573950",
    "end": "1581630"
  },
  {
    "text": "I can then associate a trigger which is a lambda function and we'll have a batch",
    "start": "1581630",
    "end": "1589970"
  },
  {
    "text": "size of one so that every time I write to that table it's going to trigger out",
    "start": "1589970",
    "end": "1595280"
  },
  {
    "text": "that lambda function it's going to go right into my elastic search index for me so that's me pushing this functionality down into the native",
    "start": "1595280",
    "end": "1601570"
  },
  {
    "text": "capabilities of the service so that I don't have to do this in my application tier all right so the third experience",
    "start": "1601570",
    "end": "1610510"
  },
  {
    "text": "we want to look at we have the basics right we have a product table and we have a search experience the third use",
    "start": "1610510",
    "end": "1616840"
  },
  {
    "start": "1616000",
    "end": "1791000"
  },
  {
    "text": "case I want to look at is a leaderboard and why a leaderboard well because I want my customers to be able to access",
    "start": "1616840",
    "end": "1622210"
  },
  {
    "text": "the most relevant content on my site and relevancy is sometimes measured by the",
    "start": "1622210",
    "end": "1627280"
  },
  {
    "text": "most items that have been purchased this is similar to the Billboard top 100 or New York Times bestseller list so here's",
    "start": "1627280",
    "end": "1635950"
  },
  {
    "text": "my bestseller list I have three items in it so when I think about picking the database for this particular use case",
    "start": "1635950",
    "end": "1642460"
  },
  {
    "text": "I'll tell you what I don't want to do I don't want to write a query that has to do a full table scan of my orders table",
    "start": "1642460",
    "end": "1649210"
  },
  {
    "text": "or group by a sub nation and an order by every time a customer comes to this",
    "start": "1649210",
    "end": "1654400"
  },
  {
    "text": "particular website why is that because I expect to get a lot of orders on my website and that query performance is",
    "start": "1654400",
    "end": "1661420"
  },
  {
    "text": "going to get slower is the number of orders I have in that table increases that's going to be so basically the more",
    "start": "1661420",
    "end": "1667120"
  },
  {
    "text": "successful the site becomes the slower this becomes that's not a good scenario so we thought about picking the the tool",
    "start": "1667120",
    "end": "1673840"
  },
  {
    "text": "for this job we used Amazon ElastiCache for Redis and why Redis Redis has",
    "start": "1673840",
    "end": "1679800"
  },
  {
    "text": "extremely useful in memory data structure called a sorted set that makes",
    "start": "1679800",
    "end": "1685390"
  },
  {
    "text": "it really easy to build use cases in scenarios like this so let me show you",
    "start": "1685390",
    "end": "1690490"
  },
  {
    "text": "what that looks like so I have a terminal right now that's actually connected to the Redis cluster that's",
    "start": "1690490",
    "end": "1696880"
  },
  {
    "text": "powering this demo application and a sorted set is just it sounds it is exactly what it sounds like and this is",
    "start": "1696880",
    "end": "1703660"
  },
  {
    "text": "the query for that so books all times the sorted set I'm gonna query from 0 to 10 I only have three items in there and",
    "start": "1703660",
    "end": "1710020"
  },
  {
    "text": "I'm gonna show you the scores right and that's the data structure that I'm pulling back now when I add an item to",
    "start": "1710020",
    "end": "1716320"
  },
  {
    "text": "this this in-memory data structure it's just gonna update you know the good is the book and then it's gonna update the",
    "start": "1716320",
    "end": "1722140"
  },
  {
    "text": "quantity so let's go ahead and do that now let's see what are we at if we want",
    "start": "1722140",
    "end": "1728380"
  },
  {
    "text": "to pop the last book up to the very top we have 34 for scream ice cream so we we",
    "start": "1728380",
    "end": "1736070"
  },
  {
    "text": "add 15 books or 12 will be good so let's let's buy that and let's pop this up to",
    "start": "1736070",
    "end": "1744260"
  },
  {
    "text": "the top now what we should expect happened in similar to what I did with",
    "start": "1744260",
    "end": "1749390"
  },
  {
    "text": "elasticsearch every time I write to my orders table I have a similar lambda",
    "start": "1749390",
    "end": "1754400"
  },
  {
    "text": "function that goes and writes it to my sorted set still have all my orders my orders table but I have this really",
    "start": "1754400",
    "end": "1759530"
  },
  {
    "text": "simplified data structure that keeps track of my sorted set for me so we go",
    "start": "1759530",
    "end": "1764870"
  },
  {
    "text": "back to our bestsellers ice creams on top we can go query this data structure",
    "start": "1764870",
    "end": "1771140"
  },
  {
    "text": "again and now we see we went from last to first and we have 46 items so every",
    "start": "1771140",
    "end": "1776690"
  },
  {
    "text": "time a customer comes to my website it's that simple of a query and it's incredibly useful all right so the",
    "start": "1776690",
    "end": "1787280"
  },
  {
    "text": "fourth experience is a recommendation engine now the one that we're showing right here and why we want a",
    "start": "1787280",
    "end": "1793460"
  },
  {
    "start": "1791000",
    "end": "1953000"
  },
  {
    "text": "recommendation engine is we know if a colleague recommends a book to us or we see it sitting on a friend's table that",
    "start": "1793460",
    "end": "1799100"
  },
  {
    "text": "has meaning to it so increases our likelihood to buy that book because there's some social validation there so",
    "start": "1799100",
    "end": "1804410"
  },
  {
    "text": "what this this recommendation engine is showing right here is like hey these are the other friends that have bought in this book and that's a really great tool",
    "start": "1804410",
    "end": "1813050"
  },
  {
    "text": "for our for our website number very visual learners let me show you what this graph looks like right this is the",
    "start": "1813050",
    "end": "1819440"
  },
  {
    "text": "social graph that's powering this demo application Nashawn talked about these circles are the vertexes the dark blue",
    "start": "1819440",
    "end": "1826220"
  },
  {
    "text": "ones are people the light blue ones are books and the orange ones are categories so we can see here is this particular",
    "start": "1826220",
    "end": "1832700"
  },
  {
    "text": "person purchased this book which was also purchased by this particular person and you know they know other people and",
    "start": "1832700",
    "end": "1839840"
  },
  {
    "text": "this is what a social graph looks like why I like to visualize this is a developers it actually helps me write",
    "start": "1839840",
    "end": "1845810"
  },
  {
    "text": "queries a lot more efficiently because I can you know match it with what the actual structure looks like so let's do",
    "start": "1845810",
    "end": "1852320"
  },
  {
    "text": "that the next experience I want to add is when I click I haven't built this yet but this is the next one I'll do and",
    "start": "1852320",
    "end": "1858590"
  },
  {
    "text": "when I get time when I click on this book I also want to present the other books that people have purchased that is",
    "start": "1858590",
    "end": "1865070"
  },
  {
    "text": "also bought in this book I think we're familiar with this experience if you bought this one you might like these five too so let me show you how I write",
    "start": "1865070",
    "end": "1871550"
  },
  {
    "text": "that that query in in gremlin right so",
    "start": "1871550",
    "end": "1876940"
  },
  {
    "text": "this is our this is our graph and we're gonna start with vertex 34 this is just a simplification of the book that we",
    "start": "1876940",
    "end": "1883400"
  },
  {
    "text": "clicked on and from there this first line of code is basically saying like given this vertex I want you to go out",
    "start": "1883400",
    "end": "1890900"
  },
  {
    "text": "and I want you to find out all the other people that have purchased this right so that's the first traversal so it's just",
    "start": "1890900",
    "end": "1896840"
  },
  {
    "text": "going out and saying hey who has purchased this the second line of code right here is saying ok now that we're",
    "start": "1896840",
    "end": "1902840"
  },
  {
    "text": "at those people right now that the people vertex is what other items did they purchase we're gonna remove the",
    "start": "1902840",
    "end": "1909590"
  },
  {
    "text": "item that we're referencing and then we're gonna order by the ratings of those books decreasingly so we get that",
    "start": "1909590",
    "end": "1916610"
  },
  {
    "text": "top list for a social recommendation engine so I already have a console setup with",
    "start": "1916610",
    "end": "1922820"
  },
  {
    "text": "Neptune I'm gonna run this query and then I get that performant result set",
    "start": "1922820",
    "end": "1928880"
  },
  {
    "text": "back with just a little bit of code and this is a great example again of just",
    "start": "1928880",
    "end": "1934070"
  },
  {
    "text": "using the native functionality of the database it's not that complicated to write these queries again I don't want",
    "start": "1934070",
    "end": "1940160"
  },
  {
    "text": "to try to write this query in sequel it's a disaster so with that let me",
    "start": "1940160",
    "end": "1947300"
  },
  {
    "text": "switch it back over and summarize really quickly so we did is we decomposed an",
    "start": "1947300",
    "end": "1956180"
  },
  {
    "text": "application we picked the right tool for the job we chose a key value store in dynamo DB",
    "start": "1956180",
    "end": "1961400"
  },
  {
    "text": "for our product table we chose a graph database for a product recommendation",
    "start": "1961400",
    "end": "1966620"
  },
  {
    "text": "engine we chose an in-memory store in elastic cashed in Redis for our leaderboard and we chose chose Amazon",
    "start": "1966620",
    "end": "1973160"
  },
  {
    "text": "elastic search service for our product search but wait there's more that demo",
    "start": "1973160",
    "end": "1982340"
  },
  {
    "text": "application that you saw that I ran today that's available today it's up on github",
    "start": "1982340",
    "end": "1988490"
  },
  {
    "text": "and we created a one-click CloudFormation template so you can get",
    "start": "1988490",
    "end": "1993560"
  },
  {
    "text": "this up and running in your own account just a 1 1 click and you can go ahead and explore and have fun and extend and",
    "start": "1993560",
    "end": "1999830"
  },
  {
    "text": "look at these different databases so that I really appreciate your time and thank you thank you all right it's",
    "start": "1999830",
    "end": "2008950"
  },
  {
    "text": "pretty fun stuff a lot of people worked on that demo in fact we did this talk",
    "start": "2008950",
    "end": "2014260"
  },
  {
    "text": "last year at the very end the we got a bunch of feedback hey that demo can you build it such that we can download it",
    "start": "2014260",
    "end": "2020200"
  },
  {
    "text": "play around with it etc and the team pulled it all together so thank you for",
    "start": "2020200",
    "end": "2025450"
  },
  {
    "text": "that ok so let's take a look at ledger",
    "start": "2025450",
    "end": "2030550"
  },
  {
    "start": "2027000",
    "end": "2058000"
  },
  {
    "text": "database it's a whole new category then we'll look at time series then we'll",
    "start": "2030550",
    "end": "2036550"
  },
  {
    "text": "summarize and be done alright just by raise of hands how many people are",
    "start": "2036550",
    "end": "2042460"
  },
  {
    "text": "familiar with the ledger database not a lot of us some of us okay I'm gonna try",
    "start": "2042460",
    "end": "2049840"
  },
  {
    "text": "to cover some key concepts here show you how it works talk about use cases and let's see where",
    "start": "2049840",
    "end": "2056470"
  },
  {
    "text": "we get ok so as it as it relates to use",
    "start": "2056470",
    "end": "2061690"
  },
  {
    "start": "2058000",
    "end": "2217000"
  },
  {
    "text": "cases what I can tell you is this I did",
    "start": "2061690",
    "end": "2067000"
  },
  {
    "text": "not have a customer come up to me when we started this project and say hey I need a ledger database nobody said that",
    "start": "2067000",
    "end": "2075480"
  },
  {
    "text": "instead what customers were saying was things like this hey boy would be great",
    "start": "2075480",
    "end": "2081940"
  },
  {
    "text": "if the data was immutable it just can't be changed I'd be great it would be",
    "start": "2081940",
    "end": "2087760"
  },
  {
    "text": "great if that data was immutable and could be cryptographically verifiable I",
    "start": "2087760",
    "end": "2093960"
  },
  {
    "text": "have supply chain scenarios where you know I need to be actually be able to",
    "start": "2093960",
    "end": "2099490"
  },
  {
    "text": "trace the source of something like a like a it could be a recalled product for example I need to be able to trust",
    "start": "2099490",
    "end": "2105640"
  },
  {
    "text": "the lineage of that data that it hasn't been changed that's what the conversation would sound like or in",
    "start": "2105640",
    "end": "2112470"
  },
  {
    "text": "healthcare it could be oftentimes when you sell a medical device you have to",
    "start": "2112470",
    "end": "2118120"
  },
  {
    "text": "keep record of who you sold it to you have to keep record of when it was served if you saw somebody else you have to keep record and in that context you'd",
    "start": "2118120",
    "end": "2125170"
  },
  {
    "text": "hear gosh it'd be great if the if the data was immutable and cryptographically",
    "start": "2125170",
    "end": "2131609"
  },
  {
    "text": "verifiable so that if we needed to go look at the lineage of that data we",
    "start": "2131609",
    "end": "2137050"
  },
  {
    "text": "could follow it and know that it hasn't been changed another example would be in",
    "start": "2137050",
    "end": "2142470"
  },
  {
    "text": "think of a DMV scenario car registration sky should be great all these car",
    "start": "2142470",
    "end": "2147580"
  },
  {
    "text": "registrations and tight tracking titles and registered owners boy wouldn't that be something like if you've ever looked",
    "start": "2147580",
    "end": "2154450"
  },
  {
    "text": "at a Carfax have you ever wondered when it said five owners you ever wondered to yourself I wonder if that car really has",
    "start": "2154450",
    "end": "2159640"
  },
  {
    "text": "had five owners like who validated that that's what we heard and it turns out",
    "start": "2159640",
    "end": "2166240"
  },
  {
    "text": "within Amazon several years ago we used to say this to ourselves like think of",
    "start": "2166240",
    "end": "2172150"
  },
  {
    "text": "the think of the control planes that sit behind ec2 and s3 just think of how much",
    "start": "2172150",
    "end": "2178560"
  },
  {
    "text": "activity event activity is happening there you know like gosh wouldn't be",
    "start": "2178560",
    "end": "2183640"
  },
  {
    "text": "great if we had a you know this would really help us in a variety of scenarios we could kind of have the the date of",
    "start": "2183640",
    "end": "2190000"
  },
  {
    "text": "all the control plane events and know that it hasn't been changed so we actually started building ledger",
    "start": "2190000",
    "end": "2196630"
  },
  {
    "text": "technology several years ago but it wasn't until the last year-and-a-half",
    "start": "2196630",
    "end": "2201660"
  },
  {
    "text": "that customer started talking to us just like I shared with you and the union of",
    "start": "2201660",
    "end": "2208240"
  },
  {
    "text": "those two things led to gosh I think people are really asking for what we",
    "start": "2208240",
    "end": "2213400"
  },
  {
    "text": "call today a ledger database so the",
    "start": "2213400",
    "end": "2218800"
  },
  {
    "start": "2217000",
    "end": "2342000"
  },
  {
    "text": "challenge is that we heard from customers center on just a couple of dimensions one if somebody made a",
    "start": "2218800",
    "end": "2225790"
  },
  {
    "text": "platform choice or was trying to sort of audit changes in a database using a",
    "start": "2225790",
    "end": "2231190"
  },
  {
    "text": "relational database we would hear this hey it's kind of hard to actually build an audit table for a variety of reasons",
    "start": "2231190",
    "end": "2238359"
  },
  {
    "text": "it's not that creating the table is hard it's the no we got to write this store",
    "start": "2238359",
    "end": "2244119"
  },
  {
    "text": "procedure we might have to write that trigger what happens if something does change in the audit travel table how do we keep track of it if we're auditing",
    "start": "2244119",
    "end": "2249700"
  },
  {
    "text": "too much did the application just slow down maybe we should audit less",
    "start": "2249700",
    "end": "2255150"
  },
  {
    "text": "then the second aspect we heard is this notion of hey even if I am trying to audit it's impossible to verify Impala",
    "start": "2255150",
    "end": "2265029"
  },
  {
    "text": "it's very hard customers say I don't have I don't have a clear way to prove",
    "start": "2265029",
    "end": "2270190"
  },
  {
    "text": "that superuser didn't log in and just change the data it's really hard for me to do that the other thing we heard from",
    "start": "2270190",
    "end": "2277450"
  },
  {
    "text": "customers is around blockchain some customers need distributed consensus",
    "start": "2277450",
    "end": "2285039"
  },
  {
    "text": "like imagine all of us in a room observing things and it recording what we saw happen you know that's a very",
    "start": "2285039",
    "end": "2292660"
  },
  {
    "text": "simple way of articulating distributed consensus but we don't know each other and the great thing is if we did need",
    "start": "2292660",
    "end": "2299319"
  },
  {
    "text": "distributed consensus and we were all recording things and you could imagine the algorithm you could write to prove",
    "start": "2299319",
    "end": "2304599"
  },
  {
    "text": "like hey actually that transaction did or didn't happen but a lot of customers say you know what I don't need 500",
    "start": "2304599",
    "end": "2312220"
  },
  {
    "text": "people I don't know in a room observing what I'm doing I don't need distributed",
    "start": "2312220",
    "end": "2317769"
  },
  {
    "text": "consensus that's not that's not my use case but I do need I do need that",
    "start": "2317769",
    "end": "2323490"
  },
  {
    "text": "cryptograph or that complete verifiable cryptographic way to watch and track",
    "start": "2323490",
    "end": "2330069"
  },
  {
    "text": "data changes I don't need to set up an entire blockchain environment just for",
    "start": "2330069",
    "end": "2335470"
  },
  {
    "text": "that but I do need this ledger thing now let's look at some fundamental key",
    "start": "2335470",
    "end": "2343869"
  },
  {
    "start": "2342000",
    "end": "2521000"
  },
  {
    "text": "concepts of alleged database so I know this is a new category and I'm just going to use drawings to try to",
    "start": "2343869",
    "end": "2349269"
  },
  {
    "text": "articulate this so as a developer this is this these are the key concepts to",
    "start": "2349269",
    "end": "2355569"
  },
  {
    "text": "just think about one you create a ledger when you create a ledger it's serverless and in a context of QLD",
    "start": "2355569",
    "end": "2363039"
  },
  {
    "text": "B so there's no servers to manage but a ledger has a key component and that key",
    "start": "2363039",
    "end": "2368289"
  },
  {
    "text": "component is called the journal and when",
    "start": "2368289",
    "end": "2373329"
  },
  {
    "text": "you record a transaction so if I use a car registration example like imagine",
    "start": "2373329",
    "end": "2378369"
  },
  {
    "text": "registering a car to a particular owner let's call that the transaction when I",
    "start": "2378369",
    "end": "2384509"
  },
  {
    "text": "perform that transaction I write it to the Journal and a transaction is actually",
    "start": "2384509",
    "end": "2391780"
  },
  {
    "text": "stored in a block on that journal and once the transaction is written to that",
    "start": "2391780",
    "end": "2399410"
  },
  {
    "text": "journal the data cannot be changed that's what we mean by immutable like",
    "start": "2399410",
    "end": "2405230"
  },
  {
    "text": "you can't go back to a block and change data and it can't update it if you if",
    "start": "2405230",
    "end": "2411050"
  },
  {
    "text": "you execute a transaction and you accidentally did something wrong like you you registered a car to the wrong",
    "start": "2411050",
    "end": "2416690"
  },
  {
    "text": "owner the only way to correct it is with a new transaction that doesn't update on",
    "start": "2416690",
    "end": "2422060"
  },
  {
    "text": "the owner so once written to the journal the data is immutable it can't be",
    "start": "2422060",
    "end": "2428210"
  },
  {
    "text": "chained and each of those little blocks just think of the transaction as the input the output is a little hash that",
    "start": "2428210",
    "end": "2433850"
  },
  {
    "text": "goes along with them just trying to oversimplify this okay so the journal",
    "start": "2433850",
    "end": "2441100"
  },
  {
    "text": "determines what we call current current",
    "start": "2441100",
    "end": "2446240"
  },
  {
    "text": "state or history what do I mean by that so think of like a bank scenario think",
    "start": "2446240",
    "end": "2451550"
  },
  {
    "text": "of debit credit debit credit debit credit on the journal and then as a developer you want to query what's my",
    "start": "2451550",
    "end": "2457820"
  },
  {
    "text": "current account balance that's what we mean by current state h4 history is this",
    "start": "2457820",
    "end": "2465260"
  },
  {
    "text": "really cool concept so typically what happens is okay I can wrap my head",
    "start": "2465260",
    "end": "2471920"
  },
  {
    "text": "around debit credit debit credit debit credit on J current state okay account activity but what if I wanted to see the",
    "start": "2471920",
    "end": "2479540"
  },
  {
    "text": "past 30 days or I'm sorry see for current state of my account balance but what if I want to see the past 30 days",
    "start": "2479540",
    "end": "2485990"
  },
  {
    "text": "of account activity so in our system it's just a table that's created by",
    "start": "2485990",
    "end": "2491510"
  },
  {
    "text": "default that allows you to just quickly query account history so just think of it like that all right so the ledger comprises C H",
    "start": "2491510",
    "end": "2502130"
  },
  {
    "text": "and J and J determines C and H so you",
    "start": "2502130",
    "end": "2509750"
  },
  {
    "text": "can blow up CNH and you can get it back with J I hope that makes sense I'm",
    "start": "2509750",
    "end": "2517910"
  },
  {
    "text": "trying to really simplify this now let me show you an example of how a ledger database works okay so the",
    "start": "2517910",
    "end": "2525380"
  },
  {
    "start": "2521000",
    "end": "2835000"
  },
  {
    "text": "scenario is this you and I are working together at the DMV our assignment is to",
    "start": "2525380",
    "end": "2531530"
  },
  {
    "text": "build an application that is recording registrations which we've all been doing already but what's different is we're",
    "start": "2531530",
    "end": "2539240"
  },
  {
    "text": "gonna record the transactions in a in a ledger database specifically on that journal why because we want to make sure",
    "start": "2539240",
    "end": "2547190"
  },
  {
    "text": "that we have a complete cryptographic verifiable way to just follow that data",
    "start": "2547190",
    "end": "2552860"
  },
  {
    "text": "lineage okay so here we go so we create a ledger and when we create that ledger",
    "start": "2552860",
    "end": "2560270"
  },
  {
    "text": "there's a basically think about it like an empty journal that you see on the bottom we create a current dot cars",
    "start": "2560270",
    "end": "2567040"
  },
  {
    "text": "table and then we have an Associated history dot cars to go along with it so",
    "start": "2567040",
    "end": "2573230"
  },
  {
    "text": "just think about it like that and now we want to register our first",
    "start": "2573230",
    "end": "2579050"
  },
  {
    "text": "car so if you look in the upper right that's our super complicated insert",
    "start": "2579050",
    "end": "2584780"
  },
  {
    "text": "script and this is rotary we're inserting into cars manufacturer Tesla",
    "start": "2584780",
    "end": "2592280"
  },
  {
    "text": "Model Model S year 2012 VIN and the owners Tracey Russell so as a developer",
    "start": "2592280",
    "end": "2599300"
  },
  {
    "text": "that's what I write when I execute that what happens the transaction is written",
    "start": "2599300",
    "end": "2607940"
  },
  {
    "text": "into a block on the journal and when I",
    "start": "2607940",
    "end": "2614300"
  },
  {
    "text": "write that transaction into the block if you see the data inside of that block",
    "start": "2614300",
    "end": "2619820"
  },
  {
    "text": "think of that as the input we run that through a hashing algorithm and then a",
    "start": "2619820",
    "end": "2626750"
  },
  {
    "text": "hash is associated to that data and then from a developer point of view if I go",
    "start": "2626750",
    "end": "2633410"
  },
  {
    "text": "query current dot cars I'd see Tracy Russell as our current owner and then of",
    "start": "2633410",
    "end": "2638780"
  },
  {
    "text": "course in the history table that's associated to it there's just one version of the doc now let's just let's",
    "start": "2638780",
    "end": "2645140"
  },
  {
    "text": "let's show a sale of the car so in this",
    "start": "2645140",
    "end": "2650510"
  },
  {
    "text": "case we're going to from cars where then equals the number that you see there we're gonna update",
    "start": "2650510",
    "end": "2656480"
  },
  {
    "text": "the owner to Rani Nash okay so when I execute this what's gonna happen we're",
    "start": "2656480",
    "end": "2663980"
  },
  {
    "text": "gonna write that transaction into a block on the journal so remember that journal it's append only we're not going",
    "start": "2663980",
    "end": "2672080"
  },
  {
    "text": "back and updating the first block it's a new transaction that's the input it gets",
    "start": "2672080",
    "end": "2677690"
  },
  {
    "text": "a hash there's a pointer that connects the two and now when I go in query",
    "start": "2677690",
    "end": "2682700"
  },
  {
    "text": "current cars I see Ronnie Nash is the owner and how many versions of the doc",
    "start": "2682700",
    "end": "2688820"
  },
  {
    "text": "three have in the system now you're right - so if I need this query the",
    "start": "2688820",
    "end": "2695060"
  },
  {
    "text": "history of hey cue show me the previous owners of this vehicle that's how you do it now just to complete this let's say",
    "start": "2695060",
    "end": "2701900"
  },
  {
    "text": "we saw the car one last time and in this case it's just an update for the owner",
    "start": "2701900",
    "end": "2708730"
  },
  {
    "text": "when I execute that update what happens I write a transaction into a block it",
    "start": "2708730",
    "end": "2713900"
  },
  {
    "text": "gets a hash there's a pointer that connects now on a developer queries current cars I see Elmer Hubbard is the",
    "start": "2713900",
    "end": "2720920"
  },
  {
    "text": "current registered owner and if I go look at the history of the registered owners for that vehicle you'd see I have",
    "start": "2720920",
    "end": "2726920"
  },
  {
    "text": "three versions of the doc so that in its essence is how a ledger database works",
    "start": "2726920",
    "end": "2733400"
  },
  {
    "text": "now one question I get from a lot of customers that have heard this cryptographic verification and immutable",
    "start": "2733400",
    "end": "2739940"
  },
  {
    "text": "part for the first time sounds like this hey could you tell me one more time how",
    "start": "2739940",
    "end": "2745190"
  },
  {
    "text": "that data is immutable and what I point them to is on the journal that first block and then I say hey if you look at",
    "start": "2745190",
    "end": "2752960"
  },
  {
    "text": "like the owner Tracy Russell the VIN and whatnot like once you write that to the",
    "start": "2752960",
    "end": "2758690"
  },
  {
    "text": "block you this database you don't go back and change the data there you just write a new transaction which is",
    "start": "2758690",
    "end": "2765410"
  },
  {
    "text": "recorded as a new block and this is when people go okay I think I now understand what you mean by immutable then could",
    "start": "2765410",
    "end": "2772610"
  },
  {
    "text": "you tell me one more time what do you mean by that cryptographic verification like what does that mean it's not that",
    "start": "2772610",
    "end": "2780110"
  },
  {
    "text": "the data on the journal is all encrypted it's that the message that transaction",
    "start": "2780110",
    "end": "2785120"
  },
  {
    "text": "goes through a secure hashing algorithm and it gets hashed now you have a digest you could publish",
    "start": "2785120",
    "end": "2791240"
  },
  {
    "text": "that digest and then if somebody ever came up to you said hmm I think you",
    "start": "2791240",
    "end": "2796700"
  },
  {
    "text": "might have changed that date I don't trust you then if you had a published digest then you could say okay let's take a look at the transaction let's",
    "start": "2796700",
    "end": "2802250"
  },
  {
    "text": "look at the digest republished you can run the hash against the same data I'm showing you if the hashes match you know",
    "start": "2802250",
    "end": "2808040"
  },
  {
    "text": "that data has not been changed so that's the real power of a larger database the",
    "start": "2808040",
    "end": "2814700"
  },
  {
    "text": "last thing I'll talk to somebody about if I if they're giving me that look you know it's like hey see where it says",
    "start": "2814700",
    "end": "2821090"
  },
  {
    "text": "owner Tracey Russell in the first block if you just changed that capital T to a",
    "start": "2821090",
    "end": "2826100"
  },
  {
    "text": "lowercase T in and submit it rehab it's a completely different hash this is when",
    "start": "2826100",
    "end": "2832250"
  },
  {
    "text": "people go okay now I get it alright so so we're excited about introducing QLD B",
    "start": "2832250",
    "end": "2840610"
  },
  {
    "text": "right we've had a lot of fun working on this project in terms of you know really",
    "start": "2840610",
    "end": "2847670"
  },
  {
    "text": "the things to remember here is the data that you store in here it's a mutable cryptographically verifiable the system",
    "start": "2847670",
    "end": "2854090"
  },
  {
    "text": "is very easy to use and we're excited what we can get done here all right now",
    "start": "2854090",
    "end": "2859430"
  },
  {
    "start": "2858000",
    "end": "2886000"
  },
  {
    "text": "let's look at time series so one of the things that we get on time series is what is time series data again could you",
    "start": "2859430",
    "end": "2867170"
  },
  {
    "text": "remind me of what you mean by that so time series data is basically a sequence of data points recorded over an interval",
    "start": "2867170",
    "end": "2874460"
  },
  {
    "text": "of time such as what is the weather house list of what's the temperature over time what's a stock price over time",
    "start": "2874460",
    "end": "2882670"
  },
  {
    "text": "some people call that regular time series data time series data is also if",
    "start": "2882670",
    "end": "2888800"
  },
  {
    "start": "2886000",
    "end": "2917000"
  },
  {
    "text": "you think of an Amazon Fulfillment Center a machine turned on or off I care about how that those changes over time",
    "start": "2888800",
    "end": "2896180"
  },
  {
    "text": "door open closed or I care about this a lot item picked item packaged item",
    "start": "2896180",
    "end": "2905540"
  },
  {
    "text": "shipped I definitely care about how that changes over time because if I have billions of events like that I need to",
    "start": "2905540",
    "end": "2911870"
  },
  {
    "text": "tune this environment in near real-time so I want to capture that time series",
    "start": "2911870",
    "end": "2916940"
  },
  {
    "text": "data but the next thing a lot of people ask is like what's so special by the time series database in other",
    "start": "2916940",
    "end": "2923310"
  },
  {
    "start": "2917000",
    "end": "2958000"
  },
  {
    "text": "words what they really mean is if I can record a timestamp isn't that just time series data no",
    "start": "2923310",
    "end": "2929869"
  },
  {
    "text": "those that laughed I I know time what makes a time series database special is",
    "start": "2929869",
    "end": "2936720"
  },
  {
    "text": "time is the single primary axis of the data model so X can be one thing and one",
    "start": "2936720",
    "end": "2942240"
  },
  {
    "text": "thing only as time and when you have that assumption in the system it just basically allows you to specialize and",
    "start": "2942240",
    "end": "2948329"
  },
  {
    "text": "optimize the whole stack from ingest to storage to query like you know in query",
    "start": "2948329",
    "end": "2953880"
  },
  {
    "text": "you're always querying over time there's a lot of things you can do to optimize the system from a use case perspective",
    "start": "2953880",
    "end": "2961170"
  },
  {
    "start": "2958000",
    "end": "2990000"
  },
  {
    "text": "there is a wide range of time series data use cases for almost all customers",
    "start": "2961170",
    "end": "2969119"
  },
  {
    "text": "I'm talking to in one way shape or form they're talking about gosh how do I analyze data as it changes over time you",
    "start": "2969119",
    "end": "2976260"
  },
  {
    "text": "know I have aspects of this all over my business and it's not just IOT sensors",
    "start": "2976260",
    "end": "2981660"
  },
  {
    "text": "it's also in application events like heavily instrumented applications DevOps",
    "start": "2981660",
    "end": "2987839"
  },
  {
    "text": "data and so on and so forth the challenges we heard from customers when",
    "start": "2987839",
    "end": "2993240"
  },
  {
    "start": "2990000",
    "end": "3168000"
  },
  {
    "text": "trying to build time series workloads it really is hey I tried to do this",
    "start": "2993240",
    "end": "2999060"
  },
  {
    "text": "thing in a relational database but it like I it's it's kind of unnatural for I",
    "start": "2999060",
    "end": "3004970"
  },
  {
    "text": "don't need a rigid schema in fact I don't even know what I might I might",
    "start": "3004970",
    "end": "3010099"
  },
  {
    "text": "have a set of sensors on a robot I might want to collect a certain amount of attributes but I might want to change",
    "start": "3010099",
    "end": "3015380"
  },
  {
    "text": "that on the fly I'm not trying to model out my entire I Oh T environment out of the gate I definitely need that kind of",
    "start": "3015380",
    "end": "3022670"
  },
  {
    "text": "flexibility and if I need to start collecting attributes on a sensor I need that to happen now I do not also another",
    "start": "3022670",
    "end": "3030140"
  },
  {
    "text": "common thing in time series customer they met with we're talking about time",
    "start": "3030140",
    "end": "3035450"
  },
  {
    "text": "series customer says gosh you know the one thing I have a problem with is interpolating missing data points for",
    "start": "3035450",
    "end": "3041990"
  },
  {
    "text": "whatever reason there's a connection it might fail what have you I'm missing data points I need to interpolate if you",
    "start": "3041990",
    "end": "3049609"
  },
  {
    "text": "go to stack overflow and just search up when you get a chance how do I interpolate a missing data",
    "start": "3049609",
    "end": "3055040"
  },
  {
    "text": "point using sequel you'll find folks sharing sometimes eight nine hundred",
    "start": "3055040",
    "end": "3060890"
  },
  {
    "text": "lines of code as an example but in a time series database that's exposed just",
    "start": "3060890",
    "end": "3066980"
  },
  {
    "text": "as a function think of it like a function key on a calculator you should just develop you should just say hey",
    "start": "3066980",
    "end": "3073100"
  },
  {
    "text": "using this series interpolate interpolate the missing data points",
    "start": "3073100",
    "end": "3078530"
  },
  {
    "text": "using this series it should be a single line of code and off you go those are the kinds of things that you should be able to do in time series database and",
    "start": "3078530",
    "end": "3085760"
  },
  {
    "text": "then the other thing we here with existing time series fully managed solutions out there I consistently hear",
    "start": "3085760",
    "end": "3093830"
  },
  {
    "text": "about scale constraints for example I had a customer tell me they one of these",
    "start": "3093830",
    "end": "3099380"
  },
  {
    "text": "fully managed time series solutions out there when it fills up with data it",
    "start": "3099380",
    "end": "3104810"
  },
  {
    "text": "literally will start purging data by default the other option I have is to",
    "start": "3104810",
    "end": "3109970"
  },
  {
    "text": "actually just turn off ingest so the the point that I wanted to make there is the",
    "start": "3109970",
    "end": "3115580"
  },
  {
    "text": "volume of data with these types of workloads is off the charts and when you think about a huge volume of data you",
    "start": "3115580",
    "end": "3123200"
  },
  {
    "text": "don't want to keep all that high resolution data in memory all the time you might for thirty minutes while",
    "start": "3123200",
    "end": "3128450"
  },
  {
    "text": "you're diagnosing something but with a policy you want to be able to very simply move that data from in memory",
    "start": "3128450",
    "end": "3135130"
  },
  {
    "text": "maybe to a warm tier you might down sample that data you might actually want",
    "start": "3135130",
    "end": "3141470"
  },
  {
    "text": "it to just gracefully end up and in cold storage that's really cheap why because",
    "start": "3141470",
    "end": "3146660"
  },
  {
    "text": "if I have a dashboard and I'm troubleshooting something on the spot I see vibrations on a particular machine",
    "start": "3146660",
    "end": "3152270"
  },
  {
    "text": "I might also want to see hey what did the fight what was the average vibration on this for the past twelve months that",
    "start": "3152270",
    "end": "3158870"
  },
  {
    "text": "should just be a simple query to a developer and managing that whole lifecycle of data is not something you",
    "start": "3158870",
    "end": "3164750"
  },
  {
    "text": "should be doing as a full-time job it should just be a policy so this is why I rebuilt timestream really excited about",
    "start": "3164750",
    "end": "3172340"
  },
  {
    "start": "3168000",
    "end": "3223000"
  },
  {
    "text": "it this is designed architectural II to really have no scale limits the",
    "start": "3172340",
    "end": "3180200"
  },
  {
    "text": "performance are excited about the formants you know we we believe you're going to be able to",
    "start": "3180200",
    "end": "3186650"
  },
  {
    "text": "collect data at the rate of millions of inserts per second process that data",
    "start": "3186650",
    "end": "3192920"
  },
  {
    "text": "very quickly will have built-in functions to help you with interpolation",
    "start": "3192920",
    "end": "3199400"
  },
  {
    "text": "extrapolation smoothing approximation and then of course it's serverless this",
    "start": "3199400",
    "end": "3205760"
  },
  {
    "text": "is the one big thing that we heard a lot of customers like you know when we first started on this journey they would show",
    "start": "3205760",
    "end": "3211250"
  },
  {
    "text": "us pictures and these data it was like Bill it was just things all over the place just trying to create a time",
    "start": "3211250",
    "end": "3218900"
  },
  {
    "text": "series database here you just create an endpoint start writing all right so",
    "start": "3218900",
    "end": "3224330"
  },
  {
    "start": "3223000",
    "end": "3298000"
  },
  {
    "text": "let's summarize so again when you think about the choices our family of",
    "start": "3224330",
    "end": "3231920"
  },
  {
    "text": "databases is represented across the page you know we have a very you know I think",
    "start": "3231920",
    "end": "3239630"
  },
  {
    "text": "some would argue it's you know our it we have a really good relationship with our",
    "start": "3239630",
    "end": "3244880"
  },
  {
    "text": "customers and understanding of how to scale these systems you know our roadmap is 90 percent driven with our customers",
    "start": "3244880",
    "end": "3252020"
  },
  {
    "text": "what you see on this page is a reflection of that relationship a common",
    "start": "3252020",
    "end": "3258770"
  },
  {
    "text": "question I get from customers is hey what what's coming next when we show up to reinvent next year and what's the new",
    "start": "3258770",
    "end": "3264980"
  },
  {
    "text": "category and a question I almost never get is what's not gonna change on this",
    "start": "3264980",
    "end": "3271280"
  },
  {
    "text": "picture and we want to invest in those things for example I don't think a",
    "start": "3271280",
    "end": "3277250"
  },
  {
    "text": "customer is going to come up to us and say hey really like those databases but I wish they were a little less reliable",
    "start": "3277250",
    "end": "3283760"
  },
  {
    "text": "I wish they scaled less so those are the types of investments that we make every",
    "start": "3283760",
    "end": "3289400"
  },
  {
    "text": "year we really want our investment and that operational aspect to be",
    "start": "3289400",
    "end": "3294620"
  },
  {
    "text": "indistinguishable indistinguishable from perfect all right so as far as other",
    "start": "3294620",
    "end": "3301040"
  },
  {
    "start": "3298000",
    "end": "3314000"
  },
  {
    "text": "breakouts you know there's there's topics you can do a deep dive on a",
    "start": "3301040",
    "end": "3306110"
  },
  {
    "text": "number of these systems you saw let it be Neptune the ledger I'm just listing some of them here with ElastiCache so on",
    "start": "3306110",
    "end": "3313070"
  },
  {
    "text": "and so forth know that purpose-built is really about",
    "start": "3313070",
    "end": "3319099"
  },
  {
    "text": "taking this big app breaking into smaller parts picking the right tool for the right job so we appreciate your time",
    "start": "3319099",
    "end": "3325849"
  },
  {
    "start": "3324000",
    "end": "3339000"
  },
  {
    "text": "and energy we know you have a lot of choices of sessions to go to and please help us improve so if you can take the",
    "start": "3325849",
    "end": "3332809"
  },
  {
    "text": "time to fill out that survey we would appreciate it so we'll meet folks up front to take questions thank you",
    "start": "3332809",
    "end": "3337900"
  },
  {
    "text": "[Applause]",
    "start": "3337900",
    "end": "3341189"
  }
]