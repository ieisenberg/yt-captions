[
  {
    "text": "hello good afternoon and welcome to the deep dive session for s3 my name is",
    "start": "260",
    "end": "5670"
  },
  {
    "text": "America Lonnie I'm a product manager for these three team and helping me out is carved summers my name is Carl I'm a",
    "start": "5670",
    "end": "11429"
  },
  {
    "text": "software engineer with s3 spent a couple years on the front doors the rest api and most recently been developing the",
    "start": "11429",
    "end": "16650"
  },
  {
    "text": "event notifications features alright so let's get started we have a lot to cover",
    "start": "16650",
    "end": "22199"
  },
  {
    "text": "today this is a deep dive session so we're going to try and keep it as detailed as possible but there are a lot",
    "start": "22199",
    "end": "27240"
  },
  {
    "text": "of new capabilities we've added to s3 so we're going to be focusing a lot on that as well I'm sure there's going to be",
    "start": "27240",
    "end": "32850"
  },
  {
    "text": "questions at the end Carl and I are going to be here for as long as it takes to answer any questions we encourage you",
    "start": "32850",
    "end": "39360"
  },
  {
    "text": "guys to come up and talk to us give us your feedback and you know will answer any questions as well so with that let's",
    "start": "39360",
    "end": "46200"
  },
  {
    "text": "get started so let's start with a bit of trivia on the slide behind me there's a",
    "start": "46200",
    "end": "53070"
  },
  {
    "text": "all the storage services that AWS offers as part of a storage portfolio who here",
    "start": "53070",
    "end": "59370"
  },
  {
    "text": "can tell me which one of these services launched first yes three yeah you know",
    "start": "59370",
    "end": "65820"
  },
  {
    "text": "but dude you are in the s3 session both of us are part of the SV team so it's liberating for you but that's right s3",
    "start": "65820",
    "end": "71760"
  },
  {
    "text": "was one of the first services that they launched for storage services that launched for parade of years but as you",
    "start": "71760",
    "end": "77759"
  },
  {
    "text": "see here this kind of leads you to how we think about storage all up at the AWS",
    "start": "77759",
    "end": "84119"
  },
  {
    "text": "right for us it's about freedom of choice very early on we heard from customers that not all storage and not",
    "start": "84119",
    "end": "89939"
  },
  {
    "text": "all data is it's built equal right data comes in different formats and as such",
    "start": "89939",
    "end": "95640"
  },
  {
    "text": "it requires different capabilities from its storage you have data that that's file-based and you need file based",
    "start": "95640",
    "end": "100890"
  },
  {
    "text": "semantics in order to in your story in order to use that appropriately be a block storage which you might want to",
    "start": "100890",
    "end": "107640"
  },
  {
    "text": "use your computer for persistent storage and then of course you have object storage as well which we have s3 and",
    "start": "107640",
    "end": "113189"
  },
  {
    "text": "glacier for but we really want to continue to make sure that we offer the right breadth of capabilities for our",
    "start": "113189",
    "end": "119100"
  },
  {
    "text": "customers so that the right kind of data in many cases more than one type four per customer goes in the right kind of",
    "start": "119100",
    "end": "125579"
  },
  {
    "text": "storage and it's not just about adding breaths to storage as well I'd be make sure that we continue to innovate in",
    "start": "125579",
    "end": "130950"
  },
  {
    "text": "each one of these storage services as we have been along the law around longest but even then you'll see in our session today to",
    "start": "130950",
    "end": "136740"
  },
  {
    "text": "be continued in a way we continue to think about how to make it easier for customers to get more value from their",
    "start": "136740",
    "end": "142380"
  },
  {
    "text": "data on s3 another aspect especially as we keep working with our customers",
    "start": "142380",
    "end": "148190"
  },
  {
    "text": "through their journey of migration migrating their their data from on-premises to the cloud is how do we",
    "start": "148190",
    "end": "154800"
  },
  {
    "text": "transfer information on how we transfer data from on-premise e to the cloud and any and back and there's a number of",
    "start": "154800",
    "end": "161040"
  },
  {
    "text": "different services that we are continuing to invest in that help you move your data from on-premises to to",
    "start": "161040",
    "end": "167160"
  },
  {
    "text": "the cloud and back you have the ability to use door i connect to establish a high-throughput link between your",
    "start": "167160",
    "end": "172740"
  },
  {
    "text": "on-premises network and the cloud last year we announced snowball and for this",
    "start": "172740",
    "end": "178170"
  },
  {
    "text": "where the summit you can now move up to 80 terabytes of information by getting this snowball shipped to your device to",
    "start": "178170",
    "end": "185310"
  },
  {
    "text": "your network connecting it to your network and then moving the information to the device and shipping it and",
    "start": "185310",
    "end": "191070"
  },
  {
    "text": "getting it directly to your data leg industry where you can then start getting a lot more value from that from",
    "start": "191070",
    "end": "197070"
  },
  {
    "text": "that data by using all the great ecosystem that we provide around it of services and capabilities we work very",
    "start": "197070",
    "end": "202740"
  },
  {
    "text": "closely with the rice be partners to make sure that all the on-premises storage appliances that you guys know and love work seamlessly with the AWS n",
    "start": "202740",
    "end": "210690"
  },
  {
    "text": "NS three we also launched Kinesis fire hose which allows you the ability to",
    "start": "210690",
    "end": "215970"
  },
  {
    "text": "stream data directly to x 30 redshift and stream turbine center observe information specifically for those IOT",
    "start": "215970",
    "end": "222030"
  },
  {
    "text": "related use cases and for this summit we also announced s3 transfer acceleration",
    "start": "222030",
    "end": "227280"
  },
  {
    "text": "a new service that allows you to leverage the the broad network we have for cloud front and upload data faster",
    "start": "227280",
    "end": "234480"
  },
  {
    "text": "to s3 by by by using the network the cloud front has and reaching out to your",
    "start": "234480",
    "end": "239550"
  },
  {
    "text": "closest point of presence and we'll talk a bit more about this but there is a dedicated session as well for for this",
    "start": "239550",
    "end": "245820"
  },
  {
    "text": "at the summit so I would encourage you to go go look at that as well and then of course we have Storage Gateway as",
    "start": "245820",
    "end": "251880"
  },
  {
    "text": "well which allows you to work seamlessly with with your network and in the cloud so a lot of breath in terms of services",
    "start": "251880",
    "end": "257910"
  },
  {
    "text": "a lot of innovation in each one of these capabilities and of course we're going to be focusing on those three for our session today but before we move on to",
    "start": "257910",
    "end": "265440"
  },
  {
    "text": "some of the new capability we've launched though I want to kind of take a minute and talk about our core customer prompts you know really",
    "start": "265440",
    "end": "272560"
  },
  {
    "text": "customers think of as three as the place to move data where you go I know is going to be there then I need it I know",
    "start": "272560",
    "end": "278199"
  },
  {
    "text": "my dad is going to be reliable we promised 11 nines of your ability four nines of availability so when I need my",
    "start": "278199",
    "end": "283599"
  },
  {
    "text": "data is going to be there available for me and it's going to scale seamlessly we're working with customers starting",
    "start": "283599",
    "end": "289060"
  },
  {
    "text": "with hundreds petabyte all the way to exabytes right and having that ability to scale up seamlessly to that level is",
    "start": "289060",
    "end": "296349"
  },
  {
    "text": "a big part of what we provide we regularly peek at millions of transactions per second and have",
    "start": "296349",
    "end": "302620"
  },
  {
    "text": "trillions of objects in history and that that scale really makes my job very interesting because a lot of energy that",
    "start": "302620",
    "end": "308650"
  },
  {
    "text": "we put in in any of the capabilities that we add to the platform go back to our core customer promise to make sure",
    "start": "308650",
    "end": "314050"
  },
  {
    "text": "that we have that 11-9 of durability the four nines of ale ability as well as as",
    "start": "314050",
    "end": "319629"
  },
  {
    "text": "well as being able to handle s3 scale right it's one thing to add a replication capability that says you know what I'm going to replicate",
    "start": "319629",
    "end": "325270"
  },
  {
    "text": "billions of even billions of objects from one bucket to another a very different engineering problem and you're",
    "start": "325270",
    "end": "330849"
  },
  {
    "text": "saying it could potentially be and it is in many cases trillions of objects so how do you design a system that scales",
    "start": "330849",
    "end": "336430"
  },
  {
    "text": "at that while still giving you the same performance also giving you the same durability and availability so that's",
    "start": "336430",
    "end": "341560"
  },
  {
    "text": "something that we continuously think of on the team and just want to kind of touch base on that is that you know this",
    "start": "341560",
    "end": "346719"
  },
  {
    "text": "is our core customer promise and any of the capability that we provide we make sure that we are true to that customer",
    "start": "346719",
    "end": "353110"
  },
  {
    "text": "promise so with that let's talk a little bit about some of the some of the great",
    "start": "353110",
    "end": "358479"
  },
  {
    "text": "innovation we've been doing in s3 over the over the past years I'm not going to go in detail for each one of these in",
    "start": "358479",
    "end": "364330"
  },
  {
    "text": "the interest of time but again if you have questions around this at the end you know feel free to come talk to us we'd love to hear your feedback around",
    "start": "364330",
    "end": "369879"
  },
  {
    "text": "this now one of the one of the feedback items we hear from a lot of our customers is you know I put data in s3",
    "start": "369879",
    "end": "377139"
  },
  {
    "text": "and that's great I need to be able to use that data I need to be able to derive value from this data and a big",
    "start": "377139",
    "end": "382389"
  },
  {
    "text": "part of that is using is 3 as a data leak so that I can leverage all the great capabilities and services that AWS",
    "start": "382389",
    "end": "388210"
  },
  {
    "text": "has to offer true to that one of the capabilities will build last year was",
    "start": "388210",
    "end": "393490"
  },
  {
    "text": "event notifications on s3 where you have the ability to add configuration to your bucket which then",
    "start": "393490",
    "end": "399380"
  },
  {
    "text": "triggers a notification on put events or delete events and even what you can figure and delivers it to multiple",
    "start": "399380",
    "end": "404570"
  },
  {
    "text": "destinations in AWS you can send a notification to SMS you can send it to NS q SQ and pick it up for your",
    "start": "404570",
    "end": "410389"
  },
  {
    "text": "application and perform actions on that or you can send it to a pre-configured lambda function which is compute in the",
    "start": "410389",
    "end": "415669"
  },
  {
    "text": "cloud for us with scales dynamically and then you can take specific actions on that there's a lot of very interesting",
    "start": "415669",
    "end": "420770"
  },
  {
    "text": "use cases we're seeing customers build with this the more common ones are I",
    "start": "420770",
    "end": "426770"
  },
  {
    "text": "want to be able to transcode my file so when a new file does show up in s3 maybe I want to create a thumbnail Orion code",
    "start": "426770",
    "end": "432380"
  },
  {
    "text": "that far the video in a different format and so forth or I want to build a secondary index or even dynamodb so when",
    "start": "432380",
    "end": "438620"
  },
  {
    "text": "a new object gets put I want to trigger it on the function than that then goes and update my index and of course metal",
    "start": "438620",
    "end": "445850"
  },
  {
    "text": "object is removed i want to take action as well so there's a lot of very interesting things that you can do with",
    "start": "445850",
    "end": "450979"
  },
  {
    "text": "this event based computing paradigm and hit obviously different committed that and as it is three you continue to",
    "start": "450979",
    "end": "456830"
  },
  {
    "text": "innovate another capability we added there is the ability to filter by prefixes or not only can you trigger a",
    "start": "456830",
    "end": "462590"
  },
  {
    "text": "notification for the entire bucket but for a specific prefix another capability",
    "start": "462590",
    "end": "469790"
  },
  {
    "text": "we launched is cross-regional replication specifically for those use cases where you have compliance related",
    "start": "469790",
    "end": "475430"
  },
  {
    "text": "requirements where you want to copy a copy of your data hundreds of miles apart you do work with a lot of financial customers who need to make",
    "start": "475430",
    "end": "481970"
  },
  {
    "text": "sure that for compliance reasons their data is hundreds of miles apart you know",
    "start": "481970",
    "end": "487100"
  },
  {
    "text": "some some specific geographical distance or that I want to move a copy of my data closer to my users so that when by end",
    "start": "487100",
    "end": "494660"
  },
  {
    "text": "users access this in the object they give they see the best possible performance because is actually physically closer to them in other use",
    "start": "494660",
    "end": "501650"
  },
  {
    "text": "cases protecting against a rogue actor right so if we see customers giving access to the logging information for",
    "start": "501650",
    "end": "507350"
  },
  {
    "text": "instance to all of all of their organizations so people can can move fast and use that information but at the",
    "start": "507350",
    "end": "512750"
  },
  {
    "text": "same time creating a copy of that or replicating a copy of that in another region which is locked down just to the administrator provides that extra",
    "start": "512750",
    "end": "519140"
  },
  {
    "text": "protection as well we also have PPC endpoints and we launched the capability",
    "start": "519140",
    "end": "525640"
  },
  {
    "text": "we launched VPC endpoints for amazon s3 which with bcn points you can create with VPC you",
    "start": "525640",
    "end": "532120"
  },
  {
    "text": "can create a closed network within is through your your private cloud and make sure that your application cannot be",
    "start": "532120",
    "end": "537790"
  },
  {
    "text": "accessed from the outside world and vice versa but a lot of these applications do use s3 so in that case you then have to",
    "start": "537790",
    "end": "544360"
  },
  {
    "text": "set up an Internet gateway or manage net instances the VPC endpoints for s3 however you only need to put a VPC",
    "start": "544360",
    "end": "550990"
  },
  {
    "text": "policy on on your VPC endpoint and then without your traffic having to go over the internet you are able to talk to",
    "start": "550990",
    "end": "557620"
  },
  {
    "text": "specific s3 bucket that you set up and that's important right you need to be able to configure which PPC is talk to",
    "start": "557620",
    "end": "562900"
  },
  {
    "text": "which buckets and which buckets have permission to to allow in from a PA",
    "start": "562900",
    "end": "568900"
  },
  {
    "text": "calls from a specific VPC you can control both of these using the pc policies and a combination of bucket",
    "start": "568900",
    "end": "574660"
  },
  {
    "text": "policies there now as s3 grows in scale one of the feedback items we hear from",
    "start": "574660",
    "end": "580270"
  },
  {
    "text": "customers is I need a better way to understand how much my date how much data i have on s3 and how that's",
    "start": "580270",
    "end": "586060"
  },
  {
    "text": "actually changing responding to that we launched the ability to we actually launched a specific Loudwater metrics",
    "start": "586060",
    "end": "592480"
  },
  {
    "text": "for s3 you can now for free for all buckets you can now monitor the object count for your bucket and see trends",
    "start": "592480",
    "end": "598810"
  },
  {
    "text": "that trending over time as well as byte count for standard standard infrequent axis which is on your storage class as",
    "start": "598810",
    "end": "604870"
  },
  {
    "text": "well as reduce redundancy story so really kind of get an idea of how my storage is changing over time we also",
    "start": "604870",
    "end": "610690"
  },
  {
    "text": "integrated the cloud trail so for bucket level API and configuration requests you can now track when and when a specific",
    "start": "610690",
    "end": "617590"
  },
  {
    "text": "API call was made what was a response who was the person making that which gets added to your cloud trail logs so",
    "start": "617590",
    "end": "622840"
  },
  {
    "text": "you have that available for auditability and you can go back in time and see who changed what configuration and when we",
    "start": "622840",
    "end": "629380"
  },
  {
    "text": "also increased the bucket limit for a three by default you can create up to 100 buckets in your account and we find",
    "start": "629380",
    "end": "635320"
  },
  {
    "text": "that for most use cases that's actually more than enough there are certainly use cases however we're increasing the book",
    "start": "635320",
    "end": "640360"
  },
  {
    "text": "is limit is required so if you think that you you need higher bucket limit you know open up a support ticket will",
    "start": "640360",
    "end": "645790"
  },
  {
    "text": "work with you to make sure that we increase your limit to an appropriate number that you require now s3 is a",
    "start": "645790",
    "end": "652570"
  },
  {
    "text": "distributed system and as such we are eventually consistent which means that if you delete an object or if you update",
    "start": "652570",
    "end": "657820"
  },
  {
    "text": "an object it will be eventually consistent and eventually we'll see the latest version of that object however we heard from customers",
    "start": "657820",
    "end": "664660"
  },
  {
    "text": "there specifically for new objects that are coming into s3 it would be great if i can get read after right consistency",
    "start": "664660",
    "end": "671470"
  },
  {
    "text": "wages and if i put an object i want to be able to read that new object immediately and take action on that so",
    "start": "671470",
    "end": "677670"
  },
  {
    "text": "last year we announced that for all regions and all endpoints we have strong",
    "start": "677670",
    "end": "682840"
  },
  {
    "text": "read after right consistency you are still eventually consistent for you after updating to leave and other operations however so just a quick look",
    "start": "682840",
    "end": "690580"
  },
  {
    "text": "at some of the capabilities that that we've been working on of course it doesn't stop there we also launched a",
    "start": "690580",
    "end": "697510"
  },
  {
    "text": "new storage class last year which we're seeing great adoption and great feedback on which is standard s3 infrequent axis",
    "start": "697510",
    "end": "703540"
  },
  {
    "text": "and I'll actually go in more detail for this we also this year just announced two new life cycle policies that help",
    "start": "703540",
    "end": "710080"
  },
  {
    "text": "you manage your data better the idea behind lifecycle policies really is that for those repetitive cumbersome tasks",
    "start": "710080",
    "end": "715630"
  },
  {
    "text": "around cleanup and managing the life of individual objects especially at s3 scale the more of that work that we can",
    "start": "715630",
    "end": "721840"
  },
  {
    "text": "take away from you the customer the more you can focus on building great applications and workloads on top of s3 and trigger the true to that with",
    "start": "721840",
    "end": "729190"
  },
  {
    "text": "lifecycle policies we now have two new policies one for expired object delete marker and again we'll go in more detail",
    "start": "729190",
    "end": "735940"
  },
  {
    "text": "as we as we progress in the with the presentation and also another policy for incomplete multi-part upload exploration",
    "start": "735940",
    "end": "742480"
  },
  {
    "text": "and as I mentioned earlier we launched in your service forestry transfer acceleration we leverage the great",
    "start": "742480",
    "end": "748930"
  },
  {
    "text": "network we have a cloud front as well as other network optimizations to increase the upload speed of your data up to 5x",
    "start": "748930",
    "end": "755710"
  },
  {
    "text": "depending on network conditions and it's actually very easy to use with this 3 as well there's basically two steps that",
    "start": "755710",
    "end": "760810"
  },
  {
    "text": "you need to do in order to use transfer acceleration one is set a configuration at your bucket level to enable transfer acceleration and then for your specific",
    "start": "760810",
    "end": "767770"
  },
  {
    "text": "put API where you want to use this simply change the endpoint with the name transfer acceleration in there and",
    "start": "767770",
    "end": "773800"
  },
  {
    "text": "that's about it right other than that you normally do need to make any changes to your application and especially very easy to use and we'll make sure that we",
    "start": "773800",
    "end": "779740"
  },
  {
    "text": "your data gets to s3 in the fastest possible way so so let's dive a bit",
    "start": "779740",
    "end": "786970"
  },
  {
    "text": "deeper into the new storage class transfer acceleration the way the way we think about this is for specifically",
    "start": "786970",
    "end": "794080"
  },
  {
    "text": "active close we've had three standard and you know customers know and love that where",
    "start": "794080",
    "end": "799090"
  },
  {
    "text": "you have the best possible durability the best possible performance and for you know regardless of how actively you",
    "start": "799090",
    "end": "804700"
  },
  {
    "text": "use this data the store in standard infrequent act three standard is is the",
    "start": "804700",
    "end": "810400"
  },
  {
    "text": "best storage class for that on the other end of the spectrum though you have archived data right data that's cold",
    "start": "810400",
    "end": "815920"
  },
  {
    "text": "you're not really using it you really want to make sure it's durably stored but you don't need it immediately right",
    "start": "815920",
    "end": "821290"
  },
  {
    "text": "for that of course glacier is the best possible choice and you know the way we kind of see a lot of workloads play out",
    "start": "821290",
    "end": "828250"
  },
  {
    "text": "and you're talking to a lot of customers as data and its characteristics change over time right so I might have an",
    "start": "828250",
    "end": "833500"
  },
  {
    "text": "object let's say a video that I upload which is a training video for my from our enterprise perhaps I upload that to",
    "start": "833500",
    "end": "840190"
  },
  {
    "text": "s3 you know it's an it's training season so everyone's looking at that or you know there might be a document that I'm",
    "start": "840190",
    "end": "845920"
  },
  {
    "text": "working on with my colleagues and so it's a new document I'm actively working on it and very actively being it's very actively being accessed but over time",
    "start": "845920",
    "end": "853090"
  },
  {
    "text": "you know there's going to come a point when I want to archive it and you know have it available but not actively use",
    "start": "853090",
    "end": "859300"
  },
  {
    "text": "it but that doesn't really change overnight it's not a flip of a switch right over time these characteristics change and the data is still important",
    "start": "859300",
    "end": "866290"
  },
  {
    "text": "the the video is still important people who are still looking at it but it it is less frequently accessed and so that's",
    "start": "866290",
    "end": "872740"
  },
  {
    "text": "really where standard in frequent access comes in is letting you know this is the storage class is specifically designed for data that is less frequently access",
    "start": "872740",
    "end": "879760"
  },
  {
    "text": "of course but when you need it you need it immediately so we wanted to make sure that you get the best possible performance for this but you do save on",
    "start": "879760",
    "end": "886330"
  },
  {
    "text": "storage costs because this data is less frequently accessed there's a number of",
    "start": "886330",
    "end": "892810"
  },
  {
    "text": "very interesting use cases we're seeing with this sink violin and share is one that I talked about a little bit you know for for documents backup and",
    "start": "892810",
    "end": "899590"
  },
  {
    "text": "archive specifically the disaster recovery is very interesting because I might be backing up my data but when I",
    "start": "899590",
    "end": "906040"
  },
  {
    "text": "need it for disaster recovery purposes i really needed immediately i don't want to wait for that data because this is",
    "start": "906040",
    "end": "912520"
  },
  {
    "text": "about business continuity for me so i need access to that immediately even though it's a very unlikely scenario and",
    "start": "912520",
    "end": "918580"
  },
  {
    "text": "similarly long retain data such as log data we're seeing a lot of that where i might not be either retain",
    "start": "918580",
    "end": "923840"
  },
  {
    "text": "the data earlier now I have the storage class and this data specifically logging something that I might not actively use",
    "start": "923840",
    "end": "929870"
  },
  {
    "text": "right if there is an issue with my application I might I really really need this information I need it right away because it's an operational issue but",
    "start": "929870",
    "end": "937010"
  },
  {
    "text": "odds are that I don't run into that issue and I you know that means that this data is going to be very infrequently accessed and there's",
    "start": "937010",
    "end": "943790"
  },
  {
    "text": "there's a lot more very interesting use cases we're hearing from customers around this as well so let's look at",
    "start": "943790",
    "end": "949610"
  },
  {
    "text": "some of the characteristics for standard infrequent axes so we wanted to make sure that as a customer and you put data",
    "start": "949610",
    "end": "954860"
  },
  {
    "text": "into s3 you never have to worry about losing that information right so across the board from standard to standard in",
    "start": "954860",
    "end": "960350"
  },
  {
    "text": "frequent access in glacier you get the same 11 nines of durability durability is exactly the same as standard standard",
    "start": "960350",
    "end": "967100"
  },
  {
    "text": "in frequent access is designed for three nines of availability which means ninety-nine point nine percent of the time when you access this object you",
    "start": "967100",
    "end": "974090"
  },
  {
    "text": "will get it but if you don't you can issue a get request immediately after and get your object but we also wanted",
    "start": "974090",
    "end": "979910"
  },
  {
    "text": "to make sure that you get the same performance and that's very important for our customers and that's what we",
    "start": "979910",
    "end": "985010"
  },
  {
    "text": "heard from customers too is that you know yes this file is less frequently accessed but I don't want my end users",
    "start": "985010",
    "end": "991370"
  },
  {
    "text": "to pay for that in terms of user experience so when my user requests a file it should it should get it with the same performance that you get for",
    "start": "991370",
    "end": "997160"
  },
  {
    "text": "standard and that is what we've delivered you get the same throughput as s3 standard another important aspect for",
    "start": "997160",
    "end": "1003490"
  },
  {
    "text": "us is ease of use not only can you keep objects within standard center infrequent axis and glacier within the",
    "start": "1003490",
    "end": "1010120"
  },
  {
    "text": "same bucket you don't need to change the prefix the location or your API for that race you mean you don't need to make any",
    "start": "1010120",
    "end": "1015970"
  },
  {
    "text": "changes to your application you simply tear your data from standard standard your frequent access and your",
    "start": "1015970",
    "end": "1022120"
  },
  {
    "text": "application just works security is always top of mind for AWS and s3 and as",
    "start": "1022120",
    "end": "1027880"
  },
  {
    "text": "such we added a lot of capability around security and encryption over the years you can encrypt an object using",
    "start": "1027880",
    "end": "1033250"
  },
  {
    "text": "server-side encryption you can also bring your own key and increment object even before you put it in s3 or you can",
    "start": "1033250",
    "end": "1040150"
  },
  {
    "text": "use KMS managed encryption keys as well sv standard in frequent access works with all of these just like standard",
    "start": "1040150",
    "end": "1046930"
  },
  {
    "text": "does and it's also integrated with all the different capabilities we continue to add wait on on s3 right such as the life",
    "start": "1046930",
    "end": "1053330"
  },
  {
    "text": "cycle platform it works with versioning just like standard you can find a notification from standard infrequent",
    "start": "1053330",
    "end": "1059480"
  },
  {
    "text": "axis just like you can with standard and any other information such as metrics you get with the storage class as well",
    "start": "1059480",
    "end": "1068020"
  },
  {
    "text": "but one very common sort of question I hear from customers around this is it's",
    "start": "1068020",
    "end": "1073370"
  },
  {
    "text": "great that I understand that I can put in frequently accessed data into SI ay or starting a frequent access and save",
    "start": "1073370",
    "end": "1078860"
  },
  {
    "text": "on that but more often than not I have specific workloads or applications running within the same bucket under",
    "start": "1078860",
    "end": "1086330"
  },
  {
    "text": "different prefixes so how do I know which one of my prefixes are infrequently access and which ones are not and for a demo today we're going to",
    "start": "1086330",
    "end": "1093290"
  },
  {
    "text": "answer that specific question using all the capability that's available today in s3 which is server access logs right you",
    "start": "1093290",
    "end": "1099500"
  },
  {
    "text": "have server access logs and it had this for a while where you can enable this logging functionality in s3 and all of",
    "start": "1099500",
    "end": "1105290"
  },
  {
    "text": "your API calls are logged in in a log file within your bucket but those are",
    "start": "1105290",
    "end": "1111320"
  },
  {
    "text": "specific API requests with time Stan choice we're going to look at when the demo that Carl is set up which actually",
    "start": "1111320",
    "end": "1117640"
  },
  {
    "text": "actually leverage is one of the most common movement one of the very common used use cases for s3 which is big data",
    "start": "1117640",
    "end": "1123650"
  },
  {
    "text": "on s3 and we've written a small big data job that then processes these logs and gets us to the specific insight we're",
    "start": "1123650",
    "end": "1129890"
  },
  {
    "text": "looking at which is which one of my prefixes should I actually tier 2 s.i a given the data so so with that let's",
    "start": "1129890",
    "end": "1138200"
  },
  {
    "text": "look at the architecture real quick of what we're going to be showing you guys it's actually seven simple steps we are",
    "start": "1138200",
    "end": "1145790"
  },
  {
    "text": "going to enable access logging a free capability available we're going to put the logs in in our data leg in s3 we're",
    "start": "1145790",
    "end": "1152480"
  },
  {
    "text": "going to leverage the power of EMR and write a very simple spark application that is actually going to aggregate these logs by the are and filter by by",
    "start": "1152480",
    "end": "1162170"
  },
  {
    "text": "operation so we know so we can filter out the total number of gets per hour and then and then visualize those and",
    "start": "1162170",
    "end": "1167840"
  },
  {
    "text": "the portal number of ports and so forth we also want to make sure that we filter these out by response code right so if I",
    "start": "1167840",
    "end": "1174980"
  },
  {
    "text": "want to make sure that the successful guess is what I look at we're also going to persist the interim results on to s3",
    "start": "1174980",
    "end": "1181700"
  },
  {
    "text": "a very common usage pattern with big data job we're customers once you as a projective",
    "start": "1181700",
    "end": "1186899"
  },
  {
    "text": "structure on your data and pre process this information you don't want to do that again because you might have to come back to this either for the same or",
    "start": "1186899",
    "end": "1192750"
  },
  {
    "text": "different analyses so it's a great it's a great best practice to actually persist that that interim data such as a",
    "start": "1192750",
    "end": "1199679"
  },
  {
    "text": "hive table for instance on to your on to your s3 bucket so that your big data job",
    "start": "1199679",
    "end": "1205080"
  },
  {
    "text": "can actually start from there and save a lot on on time when you when you run",
    "start": "1205080",
    "end": "1210179"
  },
  {
    "text": "that analysis and of course we're going to persist the aggregated results in s3 and then use the materials visualization",
    "start": "1210179",
    "end": "1216360"
  },
  {
    "text": "tools to to drive insights from from this aggregated information there it is",
    "start": "1216360",
    "end": "1226860"
  },
  {
    "text": "alright so let's start with enabling access logs for our bucket right so once",
    "start": "1226860",
    "end": "1232500"
  },
  {
    "text": "you go in your bucket under properties you have server access logging available you can simply use the UI just click",
    "start": "1232500",
    "end": "1238860"
  },
  {
    "text": "enable you can put the excess logs either in the same bucket or a different bucket and also specify a specific",
    "start": "1238860",
    "end": "1245130"
  },
  {
    "text": "prefix and this is where s3 will then start generating access logs for you so",
    "start": "1245130",
    "end": "1255000"
  },
  {
    "text": "let's look at the logs themselves to get a feel for what the logging information is and that really is you know for every",
    "start": "1255000",
    "end": "1262529"
  },
  {
    "text": "single API request you get to s3 we're going to log that information as well as",
    "start": "1262529",
    "end": "1267570"
  },
  {
    "text": "interesting information about that right such as the turnaround time or you know what was the response code for this",
    "start": "1267570",
    "end": "1272760"
  },
  {
    "text": "right what was the bucket in the prefix that we were accessing this under so this is what your access log actually",
    "start": "1272760",
    "end": "1277950"
  },
  {
    "text": "looks like if you just highlight one of these we can get a feel for what they look like so you have your prefix you",
    "start": "1277950",
    "end": "1283380"
  },
  {
    "text": "have your time stamp on when the specific operation the specific API call was was requested you have your your",
    "start": "1283380",
    "end": "1291539"
  },
  {
    "text": "operation this was a put right and then we have the response as well for this and and turnaround time and so forth",
    "start": "1291539",
    "end": "1297750"
  },
  {
    "text": "right so this is just a kind of get you an idea of what access logs actually look like of course this by itself",
    "start": "1297750",
    "end": "1303330"
  },
  {
    "text": "doesn't give us the answer of which one's of my prefixes are infrequently access rights over them so that's where we need to get to as part of our demo so",
    "start": "1303330",
    "end": "1310970"
  },
  {
    "text": "so next step then we're going to start setting up an EMR job i'm going to use park for that",
    "start": "1310970",
    "end": "1316690"
  },
  {
    "text": "it's super easy to set up we just created a new cluster right or are we creating a new cluster give it a name",
    "start": "1316690",
    "end": "1322330"
  },
  {
    "text": "logging again you can enable this and put it in your data lake which is s3 but",
    "start": "1322330",
    "end": "1327790"
  },
  {
    "text": "we're just going to keep that up we're going to use cluster as the launch mode we will pick the latest version for",
    "start": "1327790",
    "end": "1335260"
  },
  {
    "text": "applications we can select all the applications although we could have selected spark as well because it is a spark application let's pick an instance",
    "start": "1335260",
    "end": "1341950"
  },
  {
    "text": "type we could leave this as m3 excels and then pick the number of instances again depending on the amount of logs",
    "start": "1341950",
    "end": "1347320"
  },
  {
    "text": "that you have dependent depending on the overall traffic that you have which by the way you can end up on a data you",
    "start": "1347320",
    "end": "1352480"
  },
  {
    "text": "have which by the way you can see using using cloud watch metrics as well and then we will set up the security nexus",
    "start": "1352480",
    "end": "1357850"
  },
  {
    "text": "for this and just hit go for the cluster let's not hit OK for now we have a",
    "start": "1357850",
    "end": "1362920"
  },
  {
    "text": "pretty big cluster for you to go look at all right so we've set this up already",
    "start": "1362920",
    "end": "1368200"
  },
  {
    "text": "and the next step then is to to add a door spark code right so let's take a",
    "start": "1368200",
    "end": "1373960"
  },
  {
    "text": "look at the code that car let's put together for us it's actually fairly simple all this code does really is pull",
    "start": "1373960",
    "end": "1380800"
  },
  {
    "text": "the Act the raw access logs from s3 project structure on it and to start",
    "start": "1380800",
    "end": "1386740"
  },
  {
    "text": "parsing parsing these logs and then we actually aggregate the aggregate that",
    "start": "1386740",
    "end": "1393820"
  },
  {
    "text": "logs up I we are saving the interim results here by the way so this was one of the best practices that I talked",
    "start": "1393820",
    "end": "1399190"
  },
  {
    "text": "about that once you've done the pre processing processing of your logs it's a great idea to persist that in s3 as",
    "start": "1399190",
    "end": "1405190"
  },
  {
    "text": "well so the next time I spin up this cluster I can probably just start with the preprocessor I don't need to parse",
    "start": "1405190",
    "end": "1410230"
  },
  {
    "text": "that part set again this did this next file looks at looks at prefix",
    "start": "1410230",
    "end": "1415900"
  },
  {
    "text": "aggregation I so over here what we're doing is looking at how do we want to add this up right so we look at the",
    "start": "1415900",
    "end": "1421000"
  },
  {
    "text": "access logs it was specific access requests right you have you see a put you see a get and information about that",
    "start": "1421000",
    "end": "1426340"
  },
  {
    "text": "what we want to be able to do is add it up by prefix because we wanted to answer the question by specific prefixes we",
    "start": "1426340",
    "end": "1432760"
  },
  {
    "text": "want to edit up by our otherwise it's just going to be too much information so i want to see total number of put requests for a given prefix for for our",
    "start": "1432760",
    "end": "1440980"
  },
  {
    "text": "one two and three and so forth or a given our but status closes code is also important for us because you want to",
    "start": "1440980",
    "end": "1447400"
  },
  {
    "text": "filter out unsuccessful requests versus to hundreds and so forth so 40 for hundreds you might want to you might want to",
    "start": "1447400",
    "end": "1452950"
  },
  {
    "text": "filter out and then we kick off for a MapReduce job to actually go ahead and",
    "start": "1452950",
    "end": "1458020"
  },
  {
    "text": "then at the end of the day we will persist the final results back in s3 so that really is the extent of the code",
    "start": "1458020",
    "end": "1464470"
  },
  {
    "text": "that we have in two files and so now let's add code to our EMR cluster right",
    "start": "1464470",
    "end": "1470620"
  },
  {
    "text": "so we will add a spark application give it a name and then give it our input",
    "start": "1470620",
    "end": "1478870"
  },
  {
    "text": "options so so in our code if you noticed we had two parameters we have the input location of where my raw logs are",
    "start": "1478870",
    "end": "1485230"
  },
  {
    "text": "located and then another one for output location where you know where do I say where what is the s3 location where I",
    "start": "1485230",
    "end": "1491320"
  },
  {
    "text": "actually save my final my final log so let's go ahead and copy through these",
    "start": "1491320",
    "end": "1496480"
  },
  {
    "text": "arguments over and there we have here right so notice that you know in our",
    "start": "1496480",
    "end": "1502060"
  },
  {
    "text": "arguments we specifically specify as three as our input and output location",
    "start": "1502060",
    "end": "1508020"
  },
  {
    "text": "all right now the the jar files have been uploaded again into s3 and then we",
    "start": "1509460",
    "end": "1514780"
  },
  {
    "text": "can simply just knew once you specify this we can simply hit add and this will go ahead and add the spark application",
    "start": "1514780",
    "end": "1521470"
  },
  {
    "text": "to our prefix to our cluster so so mr",
    "start": "1521470",
    "end": "1526690"
  },
  {
    "text": "super easy to use in fact let's actually go back to to a presentation and talk about some interesting best practices",
    "start": "1526690",
    "end": "1532480"
  },
  {
    "text": "when it comes to leveraging EMR 4 4 s 3 there we go right so EMR super easy to",
    "start": "1532480",
    "end": "1544060"
  },
  {
    "text": "use but there are a lot of key benefits you get by leveraging mr with s3 first",
    "start": "1544060",
    "end": "1551470"
  },
  {
    "text": "and foremost s3 allows you to separate your compute from from your story from",
    "start": "1551470",
    "end": "1556510"
  },
  {
    "text": "your computer which really means that you have the ability to resize or shut down your EMR cluster completely without",
    "start": "1556510",
    "end": "1561730"
  },
  {
    "text": "ever having to worry about losing data because that's that's an s3 additionally you can actually point multiple Liam are",
    "start": "1561730",
    "end": "1567640"
  },
  {
    "text": "clusters to the same data in s3 so so that's you know these are these are key sort of value adds that s3 brings to the",
    "start": "1567640",
    "end": "1574450"
  },
  {
    "text": "table in addition to the great durability and persistence of your availability of your data",
    "start": "1574450",
    "end": "1581460"
  },
  {
    "text": "another another best practice is leveraging EMR FS with EMR EMR FS is an",
    "start": "1582370",
    "end": "1588140"
  },
  {
    "text": "implementation of Hadoop which is optimized words writing and reading directly form history for EMR for your",
    "start": "1588140",
    "end": "1594800"
  },
  {
    "text": "EMR cluster and there's a number of great capabilities that they actually brings to optimize your big data jobs",
    "start": "1594800",
    "end": "1600920"
  },
  {
    "text": "you do jobs first is it provides you the agreed after right consistency in",
    "start": "1600920",
    "end": "1605990"
  },
  {
    "text": "addition to that it actually has optimizations in it where it makes the list performance faster specifically",
    "start": "1605990",
    "end": "1612290"
  },
  {
    "text": "when you want to kick off your job and given the volume of your data you might have to wait for a bit whereas with EMR",
    "start": "1612290",
    "end": "1618620"
  },
  {
    "text": "FS they have optimizations built in to make your list perform much faster they",
    "start": "1618620",
    "end": "1624140"
  },
  {
    "text": "also have some error handling really even make sure that you use your your",
    "start": "1624140",
    "end": "1629390"
  },
  {
    "text": "for you as far as your big data application is concerned you have transparent access directly to s3 and",
    "start": "1629390",
    "end": "1636080"
  },
  {
    "text": "then of course the other advantage is any and all capabilities we have in history you get to use for instance encryption right you can use server-side",
    "start": "1636080",
    "end": "1642140"
  },
  {
    "text": "encryption on your data you can use client-side encryption or KMS be based encryption all of those as well as life",
    "start": "1642140",
    "end": "1647840"
  },
  {
    "text": "cycle so all of those capabilities that we've been talking about and are going to talk about you can actually leverage",
    "start": "1647840",
    "end": "1652970"
  },
  {
    "text": "with your big data job so for instance for your temp files you don't need to delete those you can show the lifecycle policy that will take care of it for you",
    "start": "1652970",
    "end": "1659300"
  },
  {
    "text": "and so forth so just just need a kind of pointing to some of the best practices when it comes to using EMR FS with this",
    "start": "1659300",
    "end": "1666830"
  },
  {
    "text": "three so let's move back to our demo and you know look at the start with looking",
    "start": "1666830",
    "end": "1672830"
  },
  {
    "text": "at the output file right and so once we do the aggregation we talked about which",
    "start": "1672830",
    "end": "1678050"
  },
  {
    "text": "is aggregating by prefix and operation at the time and aggregating it within",
    "start": "1678050",
    "end": "1683360"
  },
  {
    "text": "the within a one hour time slot and the operation and the response code what is",
    "start": "1683360",
    "end": "1688580"
  },
  {
    "text": "what does the output file actually look like so you see here we've transformed",
    "start": "1688580",
    "end": "1694100"
  },
  {
    "text": "their access logs from a specific API request to you know for this given",
    "start": "1694100",
    "end": "1700130"
  },
  {
    "text": "prefix I have an for this given our 2100 or I had 235 get get API requests which",
    "start": "1700130",
    "end": "1711020"
  },
  {
    "text": "was successful right wish i had a 200 count and so forth and you see this for all the different times tan that we never actually analyze this form",
    "start": "1711020",
    "end": "1717520"
  },
  {
    "text": "now if you were to put this in a pivot table look at that and what we did is we",
    "start": "1717520",
    "end": "1723700"
  },
  {
    "text": "just put it in a pivot table and we we filtered it by the access frequency by",
    "start": "1723700",
    "end": "1729100"
  },
  {
    "text": "deterring by the count so a pivot table we did by the count and we can actually",
    "start": "1729100",
    "end": "1734320"
  },
  {
    "text": "see the different API requests so if you were to visualize that pivot table you see here that each one of these graphs",
    "start": "1734320",
    "end": "1740800"
  },
  {
    "text": "shows you for a given are the total number of for total number of get",
    "start": "1740800",
    "end": "1745990"
  },
  {
    "text": "requests successful get requests so I see here the the prefix in blue for instance over time it is seeing a very",
    "start": "1745990",
    "end": "1752920"
  },
  {
    "text": "high number of persistent get count the dark blue one where is the light blue one is still high but it is it is it is",
    "start": "1752920",
    "end": "1759100"
  },
  {
    "text": "tapering down or larger amount of time whereas on the left bottom side the green in the Reds are very low hanging",
    "start": "1759100",
    "end": "1764620"
  },
  {
    "text": "fruit where yes they did peak to about 100 gets for an hour but you know very",
    "start": "1764620",
    "end": "1770080"
  },
  {
    "text": "quickly the taper down so for this specific vertical maybe most logs that I add there that I analyzed for the first few days and then I'm kind of done with",
    "start": "1770080",
    "end": "1776080"
  },
  {
    "text": "those or whatever or whatever else is low-hanging fruit and now I know specifically which one of my prefixes",
    "start": "1776080",
    "end": "1782140"
  },
  {
    "text": "are in frequently accessed now I can actually leverage lifecycle policy to actually go back and make sure that we",
    "start": "1782140",
    "end": "1788170"
  },
  {
    "text": "wheatear these out so let's actually take a look at that real quick so if you go to our bucket yeah so if you go to",
    "start": "1788170",
    "end": "1796059"
  },
  {
    "text": "our bucket for our given prefix and we",
    "start": "1796059",
    "end": "1801250"
  },
  {
    "text": "see these back there I don't know that's",
    "start": "1801250",
    "end": "1807610"
  },
  {
    "text": "gravy go sorry alright so if we go to a bucket we can",
    "start": "1807610",
    "end": "1812940"
  },
  {
    "text": "actually set the lifecycle policy for the specific prefixes that we know are now in frequently accessed based on our",
    "start": "1812940",
    "end": "1818489"
  },
  {
    "text": "analysis all right so we can simply go in specify the specific prefix and and",
    "start": "1818489",
    "end": "1825389"
  },
  {
    "text": "then you know given the data that we saw we can say you know in 60 days or 30 days whatever we we were able to see you",
    "start": "1825389",
    "end": "1831509"
  },
  {
    "text": "cannot expire with a lot of high confidence because you know that you're accessed it actually tells you that the",
    "start": "1831509",
    "end": "1837029"
  },
  {
    "text": "specific prefix isn't frequently accessed all right so let's move back to",
    "start": "1837029",
    "end": "1847710"
  },
  {
    "text": "our presentation and talk a bit more",
    "start": "1847710",
    "end": "1853169"
  },
  {
    "text": "about about life cycle policies right so",
    "start": "1853169",
    "end": "1858080"
  },
  {
    "text": "so for life cycle policies as I mentioned earlier really the goal is to take as much overhead for housekeeping",
    "start": "1859009",
    "end": "1865679"
  },
  {
    "text": "and like managing the lifecycle of your of your data away from customers making it simpler to manage data especially its",
    "start": "1865679",
    "end": "1871259"
  },
  {
    "text": "scale right and there's there's two possible actions you can take in life cycle policy you can either transition",
    "start": "1871259",
    "end": "1876830"
  },
  {
    "text": "to standard or two standard infrequent axis or glacier or you can take an",
    "start": "1876830",
    "end": "1882359"
  },
  {
    "text": "exploration action and delete objects right specifically for those use cases maybe I set up my Big Data job with with",
    "start": "1882359",
    "end": "1890009"
  },
  {
    "text": "s3 and I know that the temp files I don't want to keep for more than a week right and so you can actually expire",
    "start": "1890009",
    "end": "1895289"
  },
  {
    "text": "objects based on lifecycle or expire them yourself as well you are you do have the ability to combine multiple",
    "start": "1895289",
    "end": "1901379"
  },
  {
    "text": "actions so so in our demo we set a specific lifecycle policy for a given prefix we can actually go set other",
    "start": "1901379",
    "end": "1907409"
  },
  {
    "text": "lifecycle policies for the same bucket in other prefixes as well so if we look",
    "start": "1907409",
    "end": "1913649"
  },
  {
    "text": "if you look back to go to the next movies all right so if you look back to",
    "start": "1913649",
    "end": "1919679"
  },
  {
    "text": "standard in frequent access as I mentioned earlier it's fully supports the lifecycle capabilities you have the",
    "start": "1919679",
    "end": "1925349"
  },
  {
    "text": "ability to transition from standard or standard in frequent access and then from standard in frequent access to glacier based on your usage pattern that",
    "start": "1925349",
    "end": "1932220"
  },
  {
    "text": "we just looked at as part of our demo you can of course expire objects that",
    "start": "1932220",
    "end": "1938249"
  },
  {
    "text": "are standard infrequent axis just like you can all other storage classes and the new works with versioning supported",
    "start": "1938249",
    "end": "1944430"
  },
  {
    "text": "as well but another thing I wanted to call out is why you have the ability to trend to transition from standard too",
    "start": "1944430",
    "end": "1951240"
  },
  {
    "text": "infrequent access and for a lot of workloads it actually makes sense that your data is frequently accessed and it changes characteristics to be in",
    "start": "1951240",
    "end": "1958260"
  },
  {
    "text": "frequently accessed there are a lot of cases where it makes makes sense to put data directly into history and you have",
    "start": "1958260",
    "end": "1964500"
  },
  {
    "text": "that ability when you put an object you get to specify the storage class and you can specify standard infrequent axis as",
    "start": "1964500",
    "end": "1971100"
  },
  {
    "text": "one of those storage classes so if i do know i have logs that are not going to be used as frequently i can just put",
    "start": "1971100",
    "end": "1976320"
  },
  {
    "text": "them directly into s3 so here's a sample lifecycle policy just to kind of try the",
    "start": "1976320",
    "end": "1982770"
  },
  {
    "text": "point home on how easy it is to set up over here i'm setting to transition actions the first transition action",
    "start": "1982770",
    "end": "1989190"
  },
  {
    "text": "that's highlighted I'm actually transitioning data that is 30 days old regards to the storage class into",
    "start": "1989190",
    "end": "1995850"
  },
  {
    "text": "standard in frequent access and then in the next slide I'm going to talk in the",
    "start": "1995850",
    "end": "2001460"
  },
  {
    "text": "next slide we see here that you know we are then transitioning data that is a year old into glacier I see the both of",
    "start": "2001460",
    "end": "2008000"
  },
  {
    "text": "these policies work together to actually make sure that your data moves between storage classes but again remember that",
    "start": "2008000",
    "end": "2014540"
  },
  {
    "text": "you never have to change anything in your application neither did you have to change the location of your data as it",
    "start": "2014540",
    "end": "2019820"
  },
  {
    "text": "moved from standard to standard in frequent access to glacier alright so so",
    "start": "2019820",
    "end": "2026480"
  },
  {
    "text": "let's look at another best practice that we'd recommend our customers which is versioning right we talked a bit about this as well versioning is a capability",
    "start": "2026480",
    "end": "2033290"
  },
  {
    "text": "that allows you to protect against accidental deletes and over rights and the way this really works is you can",
    "start": "2033290",
    "end": "2038570"
  },
  {
    "text": "enable versioning etch at your bucket level and once you do that if you if you",
    "start": "2038570",
    "end": "2043790"
  },
  {
    "text": "put an object and then you put it another version of another essentially you try and overwrite the object its",
    "start": "2043790",
    "end": "2049370"
  },
  {
    "text": "Trubel not override it it will actually make the current version non-current while still keeping it and then simply",
    "start": "2049370",
    "end": "2055700"
  },
  {
    "text": "just put the latest version on top of that so now you actually have all versions of your object and you can",
    "start": "2055700",
    "end": "2062360"
  },
  {
    "text": "always recover a rollback right so if you accidentally overwrote an object no problem you can always just lethally",
    "start": "2062360",
    "end": "2068419"
  },
  {
    "text": "dispersion and then the one you have you can make your current version and so forth so so that really kind of gives you that additional",
    "start": "2068420",
    "end": "2074358"
  },
  {
    "text": "protection but against against those accidentally deletes and overrides there",
    "start": "2074359",
    "end": "2080868"
  },
  {
    "text": "are three states for version buckets by default versioning is not enables you do have to enable that for your bucket once",
    "start": "2080869",
    "end": "2088280"
  },
  {
    "text": "you do enable versioning the the state changes from verse 22 versioning enabled and that is when s3 will actually",
    "start": "2088280",
    "end": "2094608"
  },
  {
    "text": "persist all the versions of the object you can also suspend versioning in which",
    "start": "2094609",
    "end": "2099950"
  },
  {
    "text": "case we will not remove any of the existing version objects but if you do additional puts they will not be",
    "start": "2099950",
    "end": "2105140"
  },
  {
    "text": "worshipped now one very common sort of feedback item there and women in common",
    "start": "2105140",
    "end": "2111109"
  },
  {
    "text": "use case and you should patent we see with with versioning and lifecycle together is the ability to get recycle",
    "start": "2111109",
    "end": "2117140"
  },
  {
    "text": "bin now I want to make sure I protect against accidental deletes but at the same time I don't want to keep all",
    "start": "2117140",
    "end": "2122510"
  },
  {
    "text": "versions of my data forever and if that is what you want to do you can combine lifecycle policies bit versioning you",
    "start": "2122510",
    "end": "2128270"
  },
  {
    "text": "can enable versioning on your bucket and then set an exploration bicycle policy specifically for non current versions to",
    "start": "2128270",
    "end": "2135260"
  },
  {
    "text": "expire in X amount of days right so maybe I want to have the ability to retrieve and roll back for 90 days right",
    "start": "2135260",
    "end": "2140990"
  },
  {
    "text": "so I can I perform a mistake I have 90 days so she rolled back so you can do that by combining lifecycle policy",
    "start": "2140990",
    "end": "2147290"
  },
  {
    "text": "exploration action along with versioning another interesting sort of feedback we",
    "start": "2147290",
    "end": "2154700"
  },
  {
    "text": "heard from customers is because I used versioning averaging enabled and I have",
    "start": "2154700",
    "end": "2162230"
  },
  {
    "text": "an expression policy to remove my non current versions as well it is possible for me to issue a delete command and and",
    "start": "2162230",
    "end": "2168650"
  },
  {
    "text": "not have a current version and then over time the exploration policy goes ahead and removes the non current versions",
    "start": "2168650",
    "end": "2174290"
  },
  {
    "text": "under me you now have an empty delete market so the way this works is if I issue a delete command instead of",
    "start": "2174290",
    "end": "2179690"
  },
  {
    "text": "overriding s3 will place a delete marker to signify that the latest version has been deleted and not remove the not",
    "start": "2179690",
    "end": "2187220"
  },
  {
    "text": "remove the other versions and then lifecycle can come in and then remove the non current versions based on the",
    "start": "2187220",
    "end": "2192349"
  },
  {
    "text": "policy that you have set up but the implication of that then is over time it",
    "start": "2192349",
    "end": "2197780"
  },
  {
    "text": "is possible for you to have delete markers for objects where all the versions have been removed",
    "start": "2197780",
    "end": "2203089"
  },
  {
    "text": "based on the policy now that is something customers can list and you can actually go ahead and remove that yourself but again true to the spirit of",
    "start": "2203089",
    "end": "2209869"
  },
  {
    "text": "life cycle policy we want to take that overhead away from customers and this housekeeping you can simply do by",
    "start": "2209869",
    "end": "2215239"
  },
  {
    "text": "specifying a new life cycle policy to remove expired object delete markers so",
    "start": "2215239",
    "end": "2221239"
  },
  {
    "text": "there's two different use cases there one is if i use life cycle to actually",
    "start": "2221239",
    "end": "2226339"
  },
  {
    "text": "delete existing versions and and previous versions as well so that's the example i have here where i set an",
    "start": "2226339",
    "end": "2231469"
  },
  {
    "text": "expiration policy and say i want to delete objects once they become 60 days old but because you have originated in",
    "start": "2231469",
    "end": "2237859"
  },
  {
    "text": "abled s3 is not going to delete it is simply going to make it the non current version and place at the neat marker on",
    "start": "2237859",
    "end": "2242900"
  },
  {
    "text": "top of it then i specify another action where i want to expire non current",
    "start": "2242900",
    "end": "2249259"
  },
  {
    "text": "versions of my object in another 30 days so in the first 60 days and an object",
    "start": "2249259",
    "end": "2254420"
  },
  {
    "text": "will be deleted 30 days from then the lifecycle policy will delete the non the expired version the non current version",
    "start": "2254420",
    "end": "2260960"
  },
  {
    "text": "of that object and all you have is a delete marker because you're using the lifecycle policy to do this like we're",
    "start": "2260960",
    "end": "2266719"
  },
  {
    "text": "going to do the right thing and we'll simply just clean up the delete marker once all the versions under it are actually proved there's another version",
    "start": "2266719",
    "end": "2273289"
  },
  {
    "text": "of this where I do not leverage the exploration policy to remove objects right it is possible that I my",
    "start": "2273289",
    "end": "2278539"
  },
  {
    "text": "application needs to ensure the lead command specifically however once objects are removed I want to have the",
    "start": "2278539",
    "end": "2283640"
  },
  {
    "text": "recycle bin functionality for 4 30 days I'd have the ability to recover for 30 days so in this case I said and I said",
    "start": "2283640",
    "end": "2290150"
  },
  {
    "text": "the non current version exploration policy just like it in the previous one for 30 days but I do not use life cycle",
    "start": "2290150",
    "end": "2296390"
  },
  {
    "text": "I my application actually issues that delete itself in this case life cycle the in this case is going to be a delete",
    "start": "2296390",
    "end": "2301789"
  },
  {
    "text": "marker which either the application customer needs to remove or you cannot specify this additional property which",
    "start": "2301789",
    "end": "2307759"
  },
  {
    "text": "is a expired object to leave marker just set it to true if we do have a delete marker with no versions under it",
    "start": "2307759",
    "end": "2314170"
  },
  {
    "text": "lifecycle policy is simply going to do that cleanup and housekeeping for you",
    "start": "2314170",
    "end": "2319808"
  },
  {
    "text": "all right so let's take a look at how you might use the UI to actually go and",
    "start": "2321160",
    "end": "2327170"
  },
  {
    "text": "set up this expired object to eat marker policy",
    "start": "2327170",
    "end": "2331838"
  },
  {
    "text": "alright so if I for any given bucket if I go to properties for the bucket under",
    "start": "2333130",
    "end": "2342170"
  },
  {
    "text": "lifecycle I can actually add a new rule for previous versions so for previous",
    "start": "2342170",
    "end": "2354980"
  },
  {
    "text": "versions if I want to delete these let's say in 30 days over here I now have this checkbox this option to actually go",
    "start": "2354980",
    "end": "2361340"
  },
  {
    "text": "remove the expired object delete marker and do the housekeeping for me so I don't need to worry about doing it",
    "start": "2361340",
    "end": "2366830"
  },
  {
    "text": "myself alright so that is that's that that's how simple that is you can simply specify that and s3 will then take care",
    "start": "2366830",
    "end": "2373370"
  },
  {
    "text": "of it for you the implication of that of course is specifically you get better",
    "start": "2373370",
    "end": "2378470"
  },
  {
    "text": "list performance if you do not have delete markers right so if you had children you know hundreds of billions of objects and a lot of those are",
    "start": "2378470",
    "end": "2385130"
  },
  {
    "text": "actually delete markers right because you can keep deleting those and adding new data over time when we when you list",
    "start": "2385130",
    "end": "2390830"
  },
  {
    "text": "we actually filter those delete markers out and that takes a little bit of time so if you remove those and you do the housekeeping your performance of your",
    "start": "2390830",
    "end": "2396650"
  },
  {
    "text": "list API actually gets you see improvement in that in that performance in other best practice again to protect",
    "start": "2396650",
    "end": "2404600"
  },
  {
    "text": "against those accidental deletes is multi-factor authentication so that's something that we support in s3 you can",
    "start": "2404600",
    "end": "2410930"
  },
  {
    "text": "configure this at your bucket level so that in order to successfully issue a",
    "start": "2410930",
    "end": "2416270"
  },
  {
    "text": "delete command s3 will actually not only require your security credentials but also will require the code from an",
    "start": "2416270",
    "end": "2422780"
  },
  {
    "text": "improved authentication authenticated device yet another way for you to protect yourself against this accidental",
    "start": "2422780",
    "end": "2428450"
  },
  {
    "text": "deletes whether it's an issue in your policy or just an accidentally by a user so you can set up versioning and the",
    "start": "2428450",
    "end": "2435980"
  },
  {
    "text": "recycle bin functionality with versioning and lifecycle here's another way that is is recommended for you to protect specifically the data you want",
    "start": "2435980",
    "end": "2442160"
  },
  {
    "text": "to make sure that you want to be on a double check then you and you actually want to remove that data right so with",
    "start": "2442160",
    "end": "2452180"
  },
  {
    "text": "that let's talk a little bit about some of the best practices around improving performance of of your workload and",
    "start": "2452180",
    "end": "2460070"
  },
  {
    "text": "application on s3 so one of those is",
    "start": "2460070",
    "end": "2465170"
  },
  {
    "text": "really the ability you to paralyze your your put API calls specifically for larger objects you have",
    "start": "2465170",
    "end": "2472230"
  },
  {
    "text": "the ability to break that object into multiple parts and actually upload those parts in parallel to get much better",
    "start": "2472230",
    "end": "2477900"
  },
  {
    "text": "performance and for instance if you're on a high bandwidth network you can actually get much higher throughput on",
    "start": "2477900",
    "end": "2483770"
  },
  {
    "text": "aggregate throughput on your network by breaking your object into multiple parts and actually uploading that you know if",
    "start": "2483770",
    "end": "2490710"
  },
  {
    "text": "you were doing for instance a big data job like we were this is an optimization that you can do if you have a lot of",
    "start": "2490710",
    "end": "2496170"
  },
  {
    "text": "data that you're moving around also for actually also for networks where the",
    "start": "2496170",
    "end": "2502350"
  },
  {
    "text": "network resiliency is lower for spotty networks right in that case you want to make sure that for a retry you don't",
    "start": "2502350",
    "end": "2509550"
  },
  {
    "text": "upload larger objects again again so if you break your up tube down into smaller parts you add resiliency to your network",
    "start": "2509550",
    "end": "2514680"
  },
  {
    "text": "because one specific part might fail but that's the only one that you need to upload you don't need to upload the",
    "start": "2514680",
    "end": "2519720"
  },
  {
    "text": "entire object now multiple to upload the",
    "start": "2519720",
    "end": "2527640"
  },
  {
    "text": "way multiple output works is that you can break these parts down and in smaller chunks and upload those and once",
    "start": "2527640",
    "end": "2532860"
  },
  {
    "text": "you've completed all of those you can issue a command to actually put the object back together and s3 actually exposes that to you as a complete object",
    "start": "2532860",
    "end": "2539990"
  },
  {
    "text": "however we've heard from customers that you know depending on my application there are cases when either my",
    "start": "2539990",
    "end": "2545910"
  },
  {
    "text": "application might die or run into an issue throw an exception without having uploaded all of the other different",
    "start": "2545910",
    "end": "2551760"
  },
  {
    "text": "parts so now I ended up with multiple parts that I am actually paying for you do you are charged storage costs for",
    "start": "2551760",
    "end": "2557370"
  },
  {
    "text": "each of those each of those parts but I never really completed those now you can list those individually by default list",
    "start": "2557370",
    "end": "2564330"
  },
  {
    "text": "does not show them but you can specify parameter to actually list incomplete multi parts as well and actually clean",
    "start": "2564330",
    "end": "2570300"
  },
  {
    "text": "those up yourself but again why do that when life cycle can actually do that for you so that which is why we really",
    "start": "2570300",
    "end": "2575910"
  },
  {
    "text": "introduced this in this new policy for incomplete multi-part upload exploration policy where you can tell lifecycle to",
    "start": "2575910",
    "end": "2582240"
  },
  {
    "text": "simply delete all parts if upload is not completed in X amount of days so here's",
    "start": "2582240",
    "end": "2589350"
  },
  {
    "text": "an example of the policy in your life cycle policy you can specify the rule two aboard incomplete multi-part objects",
    "start": "2589350",
    "end": "2595530"
  },
  {
    "text": "and all you need to do is specify how long should I wait you expect your multi-part uploads to",
    "start": "2595530",
    "end": "2600660"
  },
  {
    "text": "take and you can simply specify that in terms of days and s3 will then the",
    "start": "2600660",
    "end": "2605940"
  },
  {
    "text": "lifecycle policy will then delete all the multiple multiple parts that have not completed the multi parts that have",
    "start": "2605940",
    "end": "2612330"
  },
  {
    "text": "not completed in that in that main day so you don't need to worry about that cleanup and of course you can you can restart that again another best practice",
    "start": "2612330",
    "end": "2622320"
  },
  {
    "text": "is in addition to your paralyzing your put request you can also paralyzed",
    "start": "2622320",
    "end": "2628500"
  },
  {
    "text": "you'll get requests right you have the ability to do range based gets on your",
    "start": "2628500",
    "end": "2634140"
  },
  {
    "text": "individual objects specifically for those large objects so you can actually benefit from you can actually spin multiple threads up and get higher",
    "start": "2634140",
    "end": "2641400"
  },
  {
    "text": "higher download speed right and download larger objects quicker this again compensates for unreliable networks as",
    "start": "2641400",
    "end": "2648000"
  },
  {
    "text": "well because if you are downloading smaller parts if it fails we all need to need to retry for that specific part and",
    "start": "2648000",
    "end": "2654000"
  },
  {
    "text": "not download the entire the entire object",
    "start": "2654000",
    "end": "2658190"
  },
  {
    "text": "alright so we looked at paralyzing your get as one of the best practices right",
    "start": "2671620",
    "end": "2679760"
  },
  {
    "text": "another thing you can do is paralyzed your list request as well so you can pair you can do multi-part upload and upload specific parts you can download",
    "start": "2679760",
    "end": "2687680"
  },
  {
    "text": "specific ranges of your object and then you can also paralyze your get request right specifically if you want a",
    "start": "2687680",
    "end": "2693500"
  },
  {
    "text": "sequential key for a sequential list of your keys you can then pick specific",
    "start": "2693500",
    "end": "2698900"
  },
  {
    "text": "prefixes and down and start multiple lists requests because this request is paginate it you can get a foul up to a",
    "start": "2698900",
    "end": "2704900"
  },
  {
    "text": "thousand objects per request so you can actually start multiple requests with the right delete markers for multiple",
    "start": "2704900",
    "end": "2710990"
  },
  {
    "text": "prefixes or even within the same prefix another very common usage pattern we see from customers is using secondary index",
    "start": "2710990",
    "end": "2717320"
  },
  {
    "text": "it I specifically for a list right I can maintain a secondary index and they're not only that does that get me faster",
    "start": "2717320",
    "end": "2723410"
  },
  {
    "text": "list I also have the ability to sort and search on metadata which in a lot of cases can be very useful in other best",
    "start": "2723410",
    "end": "2732860"
  },
  {
    "text": "practice is around SSL right and really for all of these different best",
    "start": "2732860",
    "end": "2738620"
  },
  {
    "text": "practices if you can you should just use the SDK we make sure that we continually",
    "start": "2738620",
    "end": "2743630"
  },
  {
    "text": "update and optimize the SDK to leverage all of these where possible but of course you know you can't use that every",
    "start": "2743630",
    "end": "2750110"
  },
  {
    "text": "single time and so if not you know please be aware of these best practices they can really help you optimize the",
    "start": "2750110",
    "end": "2755630"
  },
  {
    "text": "performance of your application for SSL based if you can use if you can use",
    "start": "2755630",
    "end": "2761120"
  },
  {
    "text": "hardware that's optimized and you can use hardware acceleration for SSL encryption that can can really help you",
    "start": "2761120",
    "end": "2768440"
  },
  {
    "text": "get the most right because there is overhead in encoding all of these in software and coding doing this so",
    "start": "2768440",
    "end": "2774500"
  },
  {
    "text": "encryption in software also the handshakes are expensive so if you can",
    "start": "2774500",
    "end": "2780200"
  },
  {
    "text": "avoid these handshakes by performing keeper lives or pulling connections sending multiple HTTP requests I should",
    "start": "2780200",
    "end": "2787220"
  },
  {
    "text": "be as request over the same connection not having to set up these expensive connections every time again is a way",
    "start": "2787220",
    "end": "2793310"
  },
  {
    "text": "you can actually optimize your app education and improve the performance another best practice is making sure",
    "start": "2793310",
    "end": "2800520"
  },
  {
    "text": "that your key names are randomly distributed and that really kind of comes from is relevant for buckets that",
    "start": "2800520",
    "end": "2806760"
  },
  {
    "text": "you expect hi TPS expected right height eps against one hundred TPS or more and",
    "start": "2806760",
    "end": "2813530"
  },
  {
    "text": "we see a lot of customers naming the bucket in this exam similar to this example where maybe I have my bucket and",
    "start": "2813530",
    "end": "2820440"
  },
  {
    "text": "then I have date ranges year month day and then I break down my data the",
    "start": "2820440",
    "end": "2825870"
  },
  {
    "text": "problem with this is that if you have your keys in this sequential manner s3",
    "start": "2825870",
    "end": "2832470"
  },
  {
    "text": "is going to try and write these keys to a specific partition right because these are these need to be located together",
    "start": "2832470",
    "end": "2838740"
  },
  {
    "text": "but because you don't have that randomness all of the uploads that you're doing go to the single partition now s3 does distribute workload under",
    "start": "2838740",
    "end": "2845910"
  },
  {
    "text": "the covers but if you expect your workflow to spike very very fast you might see higher turnaround times so the",
    "start": "2845910",
    "end": "2852630"
  },
  {
    "text": "best practice really is to get as much randomness as possible as as quick as",
    "start": "2852630",
    "end": "2857790"
  },
  {
    "text": "soon as possible in your prefix right so right after your bucket name if you can randomize the first few characters of your key name that then generates the",
    "start": "2857790",
    "end": "2865620"
  },
  {
    "text": "the randomness and when you upload these they're naturally going to show up and get uploaded to multiple partitions in",
    "start": "2865620",
    "end": "2871230"
  },
  {
    "text": "s3 which makes it which make sure that you do not see how a turnaround times when you hit higher higher TPS so some",
    "start": "2871230",
    "end": "2879720"
  },
  {
    "text": "of the techniques we see customers use you can hash your entire object name entirety name it's important to note",
    "start": "2879720",
    "end": "2887400"
  },
  {
    "text": "that this is the key name not just the file name right so if you do have bucket one prefix 12 and and your file name",
    "start": "2887400",
    "end": "2894090"
  },
  {
    "text": "image.jpg all of that is considered a key name so you need to make sure that right after the bucket name you you hash",
    "start": "2894090",
    "end": "2901980"
  },
  {
    "text": "everything including the prefixes another another so technique is to prepend a key name the key name with a",
    "start": "2901980",
    "end": "2909810"
  },
  {
    "text": "short hash or you can actually reverse the key name if that makes sense but again the goal is really to make sure",
    "start": "2909810",
    "end": "2916080"
  },
  {
    "text": "that right after the bucket you have as many random characters as possible we should then ensure for high TPS",
    "start": "2916080",
    "end": "2921390"
  },
  {
    "text": "workloads they randomly get distributed across the multiple partitions in s3 and you don't see higher you don't see",
    "start": "2921390",
    "end": "2927599"
  },
  {
    "text": "higher turnaround times so there was a lot of information we covered we looked",
    "start": "2927599",
    "end": "2933719"
  },
  {
    "text": "at standard infrequent access we we look at the great demo Carl put together for",
    "start": "2933719",
    "end": "2939390"
  },
  {
    "text": "us to really take access logs that we have and use that information to",
    "start": "2939390",
    "end": "2944999"
  },
  {
    "text": "determine which one of my specific prefixes are in fact in frequently accessed and then we set a lifecycle",
    "start": "2944999",
    "end": "2950519"
  },
  {
    "text": "policy to go tier those specifically those prefixes to SI a because now we",
    "start": "2950519",
    "end": "2955619"
  },
  {
    "text": "deterministically know that those prefixes are in frequently accessed we looked at life cycle policy and the new",
    "start": "2955619",
    "end": "2961619"
  },
  {
    "text": "management capabilities we've added to life cycle policy for expired object delete markers well as multi-part upload we looked at versioning and some best",
    "start": "2961619",
    "end": "2968519"
  },
  {
    "text": "practices around that as well as some best practices around performance so with that we're going to end again Carl",
    "start": "2968519",
    "end": "2975569"
  },
  {
    "text": "and I are here for any questions we encourage you guys to come over chat with us give us your feedback but thank",
    "start": "2975569",
    "end": "2981329"
  },
  {
    "text": "you for coming",
    "start": "2981329",
    "end": "2983779"
  }
]