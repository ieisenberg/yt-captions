[
  {
    "start": "0",
    "end": "24000"
  },
  {
    "text": "[Music]",
    "start": "4110",
    "end": "8080"
  },
  {
    "text": "hello I'm Nigel a cloud support engineer",
    "start": "8080",
    "end": "11320"
  },
  {
    "text": "here at the AWS office in Sydney today",
    "start": "11320",
    "end": "15160"
  },
  {
    "text": "I'm going to show you how to",
    "start": "15160",
    "end": "16358"
  },
  {
    "text": "troubleshoot five or four errors",
    "start": "16359",
    "end": "18640"
  },
  {
    "text": "returned by an application load balancer",
    "start": "18640",
    "end": "21240"
  },
  {
    "text": "let's get",
    "start": "21240",
    "end": "22560"
  },
  {
    "text": "started an application load balancer can",
    "start": "22560",
    "end": "25800"
  },
  {
    "start": "24000",
    "end": "81000"
  },
  {
    "text": "return a 504 error when any of the",
    "start": "25800",
    "end": "28240"
  },
  {
    "text": "following are true the load balancer",
    "start": "28240",
    "end": "31039"
  },
  {
    "text": "failed to establish a connection to the",
    "start": "31039",
    "end": "33200"
  },
  {
    "text": "Target before the connection timeout",
    "start": "33200",
    "end": "35640"
  },
  {
    "text": "expired the load balancer established a",
    "start": "35640",
    "end": "38520"
  },
  {
    "text": "connection to the Target but the Target",
    "start": "38520",
    "end": "41280"
  },
  {
    "text": "didn't respond before the idle timeout",
    "start": "41280",
    "end": "43920"
  },
  {
    "text": "period elapsed the target returns a",
    "start": "43920",
    "end": "46480"
  },
  {
    "text": "Content length header value that is",
    "start": "46480",
    "end": "48719"
  },
  {
    "text": "larger than the entity body the load",
    "start": "48719",
    "end": "51000"
  },
  {
    "text": "balancer timed out waiting for the",
    "start": "51000",
    "end": "53160"
  },
  {
    "text": "missing",
    "start": "53160",
    "end": "54000"
  },
  {
    "text": "bites the target is an AWS Lambda",
    "start": "54000",
    "end": "57480"
  },
  {
    "text": "function and the service didn't respond",
    "start": "57480",
    "end": "60440"
  },
  {
    "text": "before the connection timeout",
    "start": "60440",
    "end": "63080"
  },
  {
    "text": "expired let us look at an example where",
    "start": "63080",
    "end": "65920"
  },
  {
    "text": "the load balancer fails to establish a",
    "start": "65920",
    "end": "68080"
  },
  {
    "text": "connection to the Target before the",
    "start": "68080",
    "end": "70159"
  },
  {
    "text": "connection timeout expires which is 10",
    "start": "70159",
    "end": "72840"
  },
  {
    "text": "seconds here we see a 504 Gateway",
    "start": "72840",
    "end": "75600"
  },
  {
    "text": "timeout from the load balancer after",
    "start": "75600",
    "end": "77960"
  },
  {
    "text": "logging in to the AWS Management console",
    "start": "77960",
    "end": "81200"
  },
  {
    "start": "81000",
    "end": "146000"
  },
  {
    "text": "navigate to the Amazon elastic compute",
    "start": "81200",
    "end": "84000"
  },
  {
    "text": "Cloud console then select the load",
    "start": "84000",
    "end": "87640"
  },
  {
    "text": "balancers on the left column",
    "start": "87640",
    "end": "90640"
  },
  {
    "text": "here you can see the load balancer in",
    "start": "90640",
    "end": "93520"
  },
  {
    "text": "the region choose the one that is",
    "start": "93520",
    "end": "96159"
  },
  {
    "text": "returning the",
    "start": "96159",
    "end": "97479"
  },
  {
    "text": "504 choose the monitoring tab view the",
    "start": "97479",
    "end": "101360"
  },
  {
    "text": "target connection error count metric for",
    "start": "101360",
    "end": "103600"
  },
  {
    "text": "data",
    "start": "103600",
    "end": "105280"
  },
  {
    "text": "points compare this to the HTTP code elb",
    "start": "105280",
    "end": "109600"
  },
  {
    "text": "504 count",
    "start": "109600",
    "end": "112798"
  },
  {
    "text": "metric notice that the two metrics have",
    "start": "113040",
    "end": "115719"
  },
  {
    "text": "matching data",
    "start": "115719",
    "end": "117079"
  },
  {
    "text": "points this shows the five of POS is",
    "start": "117079",
    "end": "120759"
  },
  {
    "text": "caused by a connection issue with the",
    "start": "120759",
    "end": "125119"
  },
  {
    "text": "target choose the network mapping tab",
    "start": "125680",
    "end": "129679"
  },
  {
    "text": "choose the subnet IDs under the subnet",
    "start": "129679",
    "end": "132959"
  },
  {
    "text": "column each subnet opens in a new",
    "start": "132959",
    "end": "135680"
  },
  {
    "text": "browser",
    "start": "135680",
    "end": "138159"
  },
  {
    "text": "tab under each subnet check the network",
    "start": "139080",
    "end": "142440"
  },
  {
    "text": "ACL inbound and outbound rules",
    "start": "142440",
    "end": "147400"
  },
  {
    "start": "146000",
    "end": "260000"
  },
  {
    "text": "if the rules must be changed then choose",
    "start": "156200",
    "end": "158400"
  },
  {
    "text": "the network ACL hyperlink to modify",
    "start": "158400",
    "end": "163000"
  },
  {
    "text": "them let us look at an example where the",
    "start": "169319",
    "end": "172200"
  },
  {
    "text": "load balancer established a connection",
    "start": "172200",
    "end": "174159"
  },
  {
    "text": "to the Target but the target did not",
    "start": "174159",
    "end": "176879"
  },
  {
    "text": "respond before the idle timeout period",
    "start": "176879",
    "end": "179239"
  },
  {
    "text": "elapsed choose the attributes tab check",
    "start": "179239",
    "end": "183400"
  },
  {
    "text": "the connection idle timeout value it is",
    "start": "183400",
    "end": "185920"
  },
  {
    "text": "4",
    "start": "185920",
    "end": "187000"
  },
  {
    "text": "seconds choose the monitoring",
    "start": "187000",
    "end": "190519"
  },
  {
    "text": "tab look at the Target connection error",
    "start": "190519",
    "end": "193640"
  },
  {
    "text": "count metric for data",
    "start": "193640",
    "end": "197120"
  },
  {
    "text": "points compare this to the HTTP code elb",
    "start": "200640",
    "end": "204840"
  },
  {
    "text": "504 count metric",
    "start": "204840",
    "end": "209000"
  },
  {
    "text": "we can see that the 504s are independent",
    "start": "211799",
    "end": "215200"
  },
  {
    "text": "of the target connection error count",
    "start": "215200",
    "end": "217560"
  },
  {
    "text": "this shows that the load balancer did",
    "start": "217560",
    "end": "220120"
  },
  {
    "text": "not have issues connecting to the Target",
    "start": "220120",
    "end": "223000"
  },
  {
    "text": "but timed out waiting for the Target to",
    "start": "223000",
    "end": "225360"
  },
  {
    "text": "respond let's change the idle timeout",
    "start": "225360",
    "end": "228319"
  },
  {
    "text": "value of the application load",
    "start": "228319",
    "end": "230799"
  },
  {
    "text": "balancer to seven by editing the",
    "start": "230799",
    "end": "236000"
  },
  {
    "text": "attributes now let us to see whether it",
    "start": "237760",
    "end": "242480"
  },
  {
    "text": "works it works now note that in this",
    "start": "242480",
    "end": "246560"
  },
  {
    "text": "scenario I set a sleep function on the",
    "start": "246560",
    "end": "249120"
  },
  {
    "text": "target with a value of 7",
    "start": "249120",
    "end": "252239"
  },
  {
    "text": "seconds so now you know how to",
    "start": "252239",
    "end": "254599"
  },
  {
    "text": "troubleshoot 5 or four errors returned",
    "start": "254599",
    "end": "256959"
  },
  {
    "text": "by an application load",
    "start": "256959",
    "end": "259720"
  },
  {
    "text": "balancer thanks for watching and happy",
    "start": "259720",
    "end": "262479"
  },
  {
    "start": "260000",
    "end": "276000"
  },
  {
    "text": "cloud computing from all of us here at",
    "start": "262479",
    "end": "264759"
  },
  {
    "text": "AWS",
    "start": "264759",
    "end": "267759"
  },
  {
    "text": "[Music]",
    "start": "269450",
    "end": "274910"
  }
]