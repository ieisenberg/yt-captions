[
  {
    "text": "hi my name's James Bezeq I'm a senior",
    "start": "7080",
    "end": "10030"
  },
  {
    "text": "developer advocate here at AWS servers",
    "start": "10030",
    "end": "12610"
  },
  {
    "text": "and today I'm going to show you how to",
    "start": "12610",
    "end": "14469"
  },
  {
    "text": "use Amazon event bridge schema registry",
    "start": "14469",
    "end": "16900"
  },
  {
    "text": "in discovery",
    "start": "16900",
    "end": "18060"
  },
  {
    "text": "AWS is a rich source of events events",
    "start": "18060",
    "end": "21160"
  },
  {
    "text": "are generated from AWS services SAS",
    "start": "21160",
    "end": "23470"
  },
  {
    "text": "applications and your custom apps with",
    "start": "23470",
    "end": "26230"
  },
  {
    "text": "so many sources it can be really",
    "start": "26230",
    "end": "27789"
  },
  {
    "text": "challenging to know what to expect when",
    "start": "27789",
    "end": "30010"
  },
  {
    "text": "consuming events a schema represents the",
    "start": "30010",
    "end": "32830"
  },
  {
    "text": "structure of an event it helps define",
    "start": "32830",
    "end": "34930"
  },
  {
    "text": "what you can expect in the event both in",
    "start": "34930",
    "end": "37120"
  },
  {
    "text": "terms of attributes and data types for",
    "start": "37120",
    "end": "39040"
  },
  {
    "text": "example a customer review might always",
    "start": "39040",
    "end": "41710"
  },
  {
    "text": "contain a user ID as an integer and",
    "start": "41710",
    "end": "43870"
  },
  {
    "text": "their review as a string event bridge",
    "start": "43870",
    "end": "46390"
  },
  {
    "text": "helps automate the manual process of",
    "start": "46390",
    "end": "48219"
  },
  {
    "text": "finding and documenting schemas there",
    "start": "48219",
    "end": "50590"
  },
  {
    "text": "are two capabilities here a schema",
    "start": "50590",
    "end": "52719"
  },
  {
    "text": "registry and schema discovery a schema",
    "start": "52719",
    "end": "55780"
  },
  {
    "text": "registry is simply a container and",
    "start": "55780",
    "end": "57610"
  },
  {
    "text": "stores a collection of schemas you can",
    "start": "57610",
    "end": "59980"
  },
  {
    "text": "use a schema registry to search for find",
    "start": "59980",
    "end": "62320"
  },
  {
    "text": "and track different schemas used and",
    "start": "62320",
    "end": "64690"
  },
  {
    "text": "generated by your applications schemas",
    "start": "64690",
    "end": "67360"
  },
  {
    "text": "for all AWS sources supported in the",
    "start": "67360",
    "end": "69460"
  },
  {
    "text": "event bridge are automatically visible",
    "start": "69460",
    "end": "71289"
  },
  {
    "text": "in your schema registry SAS partner and",
    "start": "71289",
    "end": "74229"
  },
  {
    "text": "custom schemas can be generated and",
    "start": "74229",
    "end": "76450"
  },
  {
    "text": "added to the registry using the schema",
    "start": "76450",
    "end": "78880"
  },
  {
    "text": "discovery feature a schema registry",
    "start": "78880",
    "end": "81670"
  },
  {
    "text": "enables you to easily use events as",
    "start": "81670",
    "end": "83590"
  },
  {
    "text": "objects in your code let's take a look",
    "start": "83590",
    "end": "86110"
  },
  {
    "text": "at how to use this in the AWS management",
    "start": "86110",
    "end": "87849"
  },
  {
    "text": "console so first of all go to the",
    "start": "87849",
    "end": "91750"
  },
  {
    "text": "management console and open up the event",
    "start": "91750",
    "end": "94390"
  },
  {
    "text": "bridge homepage and then go to schema",
    "start": "94390",
    "end": "96910"
  },
  {
    "text": "registry now on this page you can learn",
    "start": "96910",
    "end": "99729"
  },
  {
    "text": "about how the schema registry works this",
    "start": "99729",
    "end": "102099"
  },
  {
    "text": "shows how versioning can be used along",
    "start": "102099",
    "end": "104410"
  },
  {
    "text": "with code bindings this could also give",
    "start": "104410",
    "end": "106300"
  },
  {
    "text": "you an intro to the toolkit plugins that",
    "start": "106300",
    "end": "108220"
  },
  {
    "text": "are available now clicking on schemas",
    "start": "108220",
    "end": "111280"
  },
  {
    "text": "there are three different types you have",
    "start": "111280",
    "end": "112479"
  },
  {
    "text": "AWS events schemas and for here I can",
    "start": "112479",
    "end": "116080"
  },
  {
    "text": "search for anything supported within",
    "start": "116080",
    "end": "117670"
  },
  {
    "text": "event bridge so s3 for example has a",
    "start": "117670",
    "end": "120069"
  },
  {
    "text": "range of different schemas available and",
    "start": "120069",
    "end": "121929"
  },
  {
    "text": "you can look through each of these",
    "start": "121929",
    "end": "125099"
  },
  {
    "text": "you also have discovered schema registry",
    "start": "125099",
    "end": "128140"
  },
  {
    "text": "which currently is empty but we'll come",
    "start": "128140",
    "end": "130330"
  },
  {
    "text": "back to that in just a minute and the",
    "start": "130330",
    "end": "131860"
  },
  {
    "text": "custom schema registry for your own",
    "start": "131860",
    "end": "134170"
  },
  {
    "text": "application so I'm going to click create",
    "start": "134170",
    "end": "135460"
  },
  {
    "text": "a schema registry here and call it my",
    "start": "135460",
    "end": "138130"
  },
  {
    "text": "registry",
    "start": "138130",
    "end": "140610"
  },
  {
    "text": "okay so we've got now a registry to this",
    "start": "140610",
    "end": "143769"
  },
  {
    "text": "our own weather in those schemers in",
    "start": "143769",
    "end": "145569"
  },
  {
    "text": "there so I'll click on create custom",
    "start": "145569",
    "end": "147580"
  },
  {
    "text": "schema I'll set this so it goes into my",
    "start": "147580",
    "end": "151959"
  },
  {
    "text": "registry and then call the schema user",
    "start": "151959",
    "end": "155879"
  },
  {
    "text": "now here I can choose to create the",
    "start": "155879",
    "end": "158769"
  },
  {
    "text": "schema using a template using an opiate",
    "start": "158769",
    "end": "160900"
  },
  {
    "text": "open API format and I can manually enter",
    "start": "160900",
    "end": "163390"
  },
  {
    "text": "everything there and that'll be just",
    "start": "163390",
    "end": "164680"
  },
  {
    "text": "fine alternatively I can have the",
    "start": "164680",
    "end": "167560"
  },
  {
    "text": "service discover the schema from JSON so",
    "start": "167560",
    "end": "170140"
  },
  {
    "text": "I'm going to create a JSON event here",
    "start": "170140",
    "end": "171760"
  },
  {
    "text": "and have it do the Skip discovery for us",
    "start": "171760",
    "end": "174660"
  },
  {
    "text": "when the call is give an ID of one and",
    "start": "174660",
    "end": "179700"
  },
  {
    "text": "then a name of James and then subscriber",
    "start": "179700",
    "end": "187480"
  },
  {
    "text": "rate using a decimal then I hit discover",
    "start": "187480",
    "end": "194109"
  },
  {
    "text": "schema and you can see that this is",
    "start": "194109",
    "end": "196359"
  },
  {
    "text": "extrapolated the schema from that JSON",
    "start": "196359",
    "end": "198370"
  },
  {
    "text": "object it shows that the ID is a number",
    "start": "198370",
    "end": "200230"
  },
  {
    "text": "the name is a string and the",
    "start": "200230",
    "end": "202180"
  },
  {
    "text": "subscription rate is a double now if I",
    "start": "202180",
    "end": "205030"
  },
  {
    "text": "change this subscription rate to a",
    "start": "205030",
    "end": "206650"
  },
  {
    "text": "dollar currency value as a string and",
    "start": "206650",
    "end": "209849"
  },
  {
    "text": "then have it discover the schema again",
    "start": "209849",
    "end": "212290"
  },
  {
    "text": "you can see that now it's changed that",
    "start": "212290",
    "end": "213880"
  },
  {
    "text": "type to a string I'm going to change",
    "start": "213880",
    "end": "216340"
  },
  {
    "text": "that back to a number and then hit",
    "start": "216340",
    "end": "220239"
  },
  {
    "text": "create and now you can see we've got our",
    "start": "220239",
    "end": "225430"
  },
  {
    "text": "own schema in the registry using that",
    "start": "225430",
    "end": "228639"
  },
  {
    "text": "simple event then you can also search",
    "start": "228639",
    "end": "232540"
  },
  {
    "text": "across schemas and this is a really",
    "start": "232540",
    "end": "233919"
  },
  {
    "text": "powerful feature if I search for that",
    "start": "233919",
    "end": "235750"
  },
  {
    "text": "attribute subscription rate you can see",
    "start": "235750",
    "end": "237699"
  },
  {
    "text": "it's found my user schema there if I",
    "start": "237699",
    "end": "241060"
  },
  {
    "text": "search for name it'll match many more",
    "start": "241060",
    "end": "242709"
  },
  {
    "text": "since there's a much more common",
    "start": "242709",
    "end": "243819"
  },
  {
    "text": "attribute okay I'm going to use vs code",
    "start": "243819",
    "end": "247989"
  },
  {
    "text": "now to download the code bindings for",
    "start": "247989",
    "end": "250510"
  },
  {
    "text": "our new schema so here oh I can do is",
    "start": "250510",
    "end": "255400"
  },
  {
    "text": "use the AWS toolkit extension for vs",
    "start": "255400",
    "end": "258220"
  },
  {
    "text": "code now you can find this in the",
    "start": "258220",
    "end": "262690"
  },
  {
    "text": "extensions marketplace under AWS toolkit",
    "start": "262690",
    "end": "265990"
  },
  {
    "text": "for visual studio code once you've",
    "start": "265990",
    "end": "268510"
  },
  {
    "text": "installed that you'll see the icon",
    "start": "268510",
    "end": "269979"
  },
  {
    "text": "appear on the left hand side",
    "start": "269979",
    "end": "272210"
  },
  {
    "text": "I mean the Ohio's I'm just going to open",
    "start": "272210",
    "end": "273710"
  },
  {
    "text": "the schemas there and you see my",
    "start": "273710",
    "end": "275300"
  },
  {
    "text": "registry and the user schema that we",
    "start": "275300",
    "end": "277729"
  },
  {
    "text": "created if I view this schema it's",
    "start": "277729",
    "end": "280039"
  },
  {
    "text": "exactly the same thing that we saw in",
    "start": "280039",
    "end": "281960"
  },
  {
    "text": "the console so now what I want to do is",
    "start": "281960",
    "end": "287360"
  },
  {
    "text": "create an application by downloading a",
    "start": "287360",
    "end": "289370"
  },
  {
    "text": "code binding first I'll create a simple",
    "start": "289370",
    "end": "292220"
  },
  {
    "text": "typescript empty application and now I'm",
    "start": "292220",
    "end": "297020"
  },
  {
    "text": "going to right click this and hit",
    "start": "297020",
    "end": "298190"
  },
  {
    "text": "download code binding I'll select",
    "start": "298190",
    "end": "299930"
  },
  {
    "text": "version 1 of my schema you can choose",
    "start": "299930",
    "end": "302780"
  },
  {
    "text": "Java Python the typescript cuz they're",
    "start": "302780",
    "end": "304550"
  },
  {
    "text": "all type safe languages I'm going to",
    "start": "304550",
    "end": "306440"
  },
  {
    "text": "select types type scripts and then event",
    "start": "306440",
    "end": "308419"
  },
  {
    "text": "bridge demo you can see the warnings in",
    "start": "308419",
    "end": "312500"
  },
  {
    "text": "the corner saying that it's downloading",
    "start": "312500",
    "end": "314000"
  },
  {
    "text": "it could take awhile to extract the",
    "start": "314000",
    "end": "315770"
  },
  {
    "text": "information let's flip back to the",
    "start": "315770",
    "end": "317630"
  },
  {
    "text": "Explorer view of my application inside",
    "start": "317630",
    "end": "320180"
  },
  {
    "text": "the new schema directory you can see",
    "start": "320180",
    "end": "322190"
  },
  {
    "text": "it's downloaded the event it's created a",
    "start": "322190",
    "end": "324110"
  },
  {
    "text": "class that represents the event object",
    "start": "324110",
    "end": "325940"
  },
  {
    "text": "and there's a modular in place as well",
    "start": "325940",
    "end": "330220"
  },
  {
    "text": "so now I'll create my application I'm",
    "start": "330250",
    "end": "332750"
  },
  {
    "text": "going to call this index dot ts for",
    "start": "332750",
    "end": "335210"
  },
  {
    "text": "typescript I'm going to import this",
    "start": "335210",
    "end": "339229"
  },
  {
    "text": "class it's an import event from schema",
    "start": "339229",
    "end": "346060"
  },
  {
    "text": "for slash user event now all I need to",
    "start": "346060",
    "end": "351349"
  },
  {
    "text": "do is create a new instance of this",
    "start": "351349",
    "end": "352729"
  },
  {
    "text": "event and now I can use this and",
    "start": "352729",
    "end": "358120"
  },
  {
    "text": "intellisense can tell which properties",
    "start": "358120",
    "end": "360860"
  },
  {
    "text": "are available you can see an ID property",
    "start": "360860",
    "end": "362479"
  },
  {
    "text": "is available as a number there so ID",
    "start": "362479",
    "end": "366050"
  },
  {
    "text": "equals 12 if you look at name it shows",
    "start": "366050",
    "end": "368330"
  },
  {
    "text": "that this is string I can now set that",
    "start": "368330",
    "end": "370580"
  },
  {
    "text": "to James and I'll do the subscriber rate",
    "start": "370580",
    "end": "375940"
  },
  {
    "text": "you and I will now say that to 12 I'll",
    "start": "375940",
    "end": "379520"
  },
  {
    "text": "put this in a string and if I put dollar",
    "start": "379520",
    "end": "381190"
  },
  {
    "text": "1234 you can see the ID is throwing an",
    "start": "381190",
    "end": "383960"
  },
  {
    "text": "error because it's not assignable to a",
    "start": "383960",
    "end": "385400"
  },
  {
    "text": "number so I'll take away the string and",
    "start": "385400",
    "end": "389060"
  },
  {
    "text": "now that's fine so I'll console.log this",
    "start": "389060",
    "end": "392840"
  },
  {
    "text": "event object out and then we'll just run",
    "start": "392840",
    "end": "398030"
  },
  {
    "text": "the typescript compiler and then run the",
    "start": "398030",
    "end": "402279"
  },
  {
    "text": "node file and you can see that it's now",
    "start": "402279",
    "end": "404990"
  },
  {
    "text": "logged out",
    "start": "404990",
    "end": "406010"
  },
  {
    "text": "event so that's fine for manually",
    "start": "406010",
    "end": "408620"
  },
  {
    "text": "created events but what if we want to",
    "start": "408620",
    "end": "410420"
  },
  {
    "text": "use schemers from events and have the",
    "start": "410420",
    "end": "413030"
  },
  {
    "text": "system automatically detect the scheme",
    "start": "413030",
    "end": "414770"
  },
  {
    "text": "of furrows for that we can use the",
    "start": "414770",
    "end": "417230"
  },
  {
    "text": "discovered scheme of registry at the",
    "start": "417230",
    "end": "419690"
  },
  {
    "text": "moment there's nothing in there but",
    "start": "419690",
    "end": "420890"
  },
  {
    "text": "we're going to create a schema using",
    "start": "420890",
    "end": "422510"
  },
  {
    "text": "this so I'm gonna go to them an event",
    "start": "422510",
    "end": "423860"
  },
  {
    "text": "bus now I have a custom event based bus",
    "start": "423860",
    "end": "428660"
  },
  {
    "text": "for a Zendesk here when I click that and",
    "start": "428660",
    "end": "431530"
  },
  {
    "text": "then say I'm going to start discovery",
    "start": "431530",
    "end": "434060"
  },
  {
    "text": "over here so now what this does is it",
    "start": "434060",
    "end": "437510"
  },
  {
    "text": "creates a rule on that event bus where",
    "start": "437510",
    "end": "441920"
  },
  {
    "text": "it's gonna listen to every event going",
    "start": "441920",
    "end": "444560"
  },
  {
    "text": "through the bus to be able to discover",
    "start": "444560",
    "end": "445910"
  },
  {
    "text": "the schema you can see that rule has",
    "start": "445910",
    "end": "447800"
  },
  {
    "text": "been created there if I go over to",
    "start": "447800",
    "end": "451550"
  },
  {
    "text": "Zendesk I'm going to add a new ticket",
    "start": "451550",
    "end": "453380"
  },
  {
    "text": "I'm going to say this is a test ticket",
    "start": "453380",
    "end": "457490"
  },
  {
    "text": "and just put description an example",
    "start": "457490",
    "end": "462290"
  },
  {
    "text": "description and submit this new this",
    "start": "462290",
    "end": "466100"
  },
  {
    "text": "will cause an event to be created now",
    "start": "466100",
    "end": "469160"
  },
  {
    "text": "over an event bridge if I go back now to",
    "start": "469160",
    "end": "471250"
  },
  {
    "text": "the schema Discoverer it won't show",
    "start": "471250",
    "end": "476360"
  },
  {
    "text": "anything right now but it'll show up in",
    "start": "476360",
    "end": "477770"
  },
  {
    "text": "just a few minutes okay now that's ready",
    "start": "477770",
    "end": "479720"
  },
  {
    "text": "you can see that it's discovered",
    "start": "479720",
    "end": "481400"
  },
  {
    "text": "multiple schemas for Zendesk now the",
    "start": "481400",
    "end": "483620"
  },
  {
    "text": "tickets been created",
    "start": "483620",
    "end": "484790"
  },
  {
    "text": "look at this last one here the ticket",
    "start": "484790",
    "end": "487910"
  },
  {
    "text": "created event and you can see it's",
    "start": "487910",
    "end": "490070"
  },
  {
    "text": "captured the schema the Zendesk is",
    "start": "490070",
    "end": "492530"
  },
  {
    "text": "submitted in this JSON and it's been",
    "start": "492530",
    "end": "494270"
  },
  {
    "text": "converted into this schema document now",
    "start": "494270",
    "end": "502130"
  },
  {
    "text": "going back to Visual Studio code what I",
    "start": "502130",
    "end": "504230"
  },
  {
    "text": "can do now is create an application",
    "start": "504230",
    "end": "505460"
  },
  {
    "text": "around that schema so I'll create a need",
    "start": "505460",
    "end": "507710"
  },
  {
    "text": "typescript",
    "start": "507710",
    "end": "508420"
  },
  {
    "text": "application and go to the AWS toolkit",
    "start": "508420",
    "end": "512360"
  },
  {
    "text": "where you can now see discover schemas",
    "start": "512360",
    "end": "515090"
  },
  {
    "text": "are available under schemas when I open",
    "start": "515090",
    "end": "517130"
  },
  {
    "text": "this these are all the different types",
    "start": "517130",
    "end": "520880"
  },
  {
    "text": "of schema that the system has identified",
    "start": "520880",
    "end": "524140"
  },
  {
    "text": "we're going to use this last one again",
    "start": "524140",
    "end": "526250"
  },
  {
    "text": "they ticket created schema now if I look",
    "start": "526250",
    "end": "529580"
  },
  {
    "text": "at the schema is exactly the same thing",
    "start": "529580",
    "end": "531200"
  },
  {
    "text": "that we saw in the console earlier it",
    "start": "531200",
    "end": "534230"
  },
  {
    "text": "shows all the different types expected",
    "start": "534230",
    "end": "536120"
  },
  {
    "text": "for different attributes",
    "start": "536120",
    "end": "538440"
  },
  {
    "text": "I'm going to download the code bindings",
    "start": "538440",
    "end": "540360"
  },
  {
    "text": "for this I'll select version 1 and type",
    "start": "540360",
    "end": "542699"
  },
  {
    "text": "script an event rich demo for my project",
    "start": "542699",
    "end": "545550"
  },
  {
    "text": "it shows that it's downloading the code",
    "start": "545550",
    "end": "547019"
  },
  {
    "text": "and let's take a minute or two and then",
    "start": "547019",
    "end": "549720"
  },
  {
    "text": "back in the files you can see there's a",
    "start": "549720",
    "end": "551339"
  },
  {
    "text": "schema directory that's been created",
    "start": "551339",
    "end": "552540"
  },
  {
    "text": "just going to create my application in",
    "start": "552540",
    "end": "554699"
  },
  {
    "text": "the XTS I'll put this side-by-side so we",
    "start": "554699",
    "end": "558449"
  },
  {
    "text": "can see what's going on a little bit",
    "start": "558449",
    "end": "559649"
  },
  {
    "text": "more clearly now here I'm going to",
    "start": "559649",
    "end": "563129"
  },
  {
    "text": "import this class the supported sport",
    "start": "563129",
    "end": "567509"
  },
  {
    "text": "ticket ticket created class and it's",
    "start": "567509",
    "end": "569459"
  },
  {
    "text": "already completed the directory you can",
    "start": "569459",
    "end": "571709"
  },
  {
    "text": "see that's come from that schema",
    "start": "571709",
    "end": "573480"
  },
  {
    "text": "directory that's been imported into my",
    "start": "573480",
    "end": "576449"
  },
  {
    "text": "project now I'm going to create an",
    "start": "576449",
    "end": "579089"
  },
  {
    "text": "instance called ticket of a new support",
    "start": "579089",
    "end": "582930"
  },
  {
    "text": "ticket and now when I use ticket you can",
    "start": "582930",
    "end": "587670"
  },
  {
    "text": "see the IDE knows about all the",
    "start": "587670",
    "end": "589439"
  },
  {
    "text": "different properties that are available",
    "start": "589439",
    "end": "591060"
  },
  {
    "text": "it sees there's a ticket event there and",
    "start": "591060",
    "end": "592980"
  },
  {
    "text": "there's a type property the type ticket",
    "start": "592980",
    "end": "596850"
  },
  {
    "text": "event and in the ticket type you can see",
    "start": "596850",
    "end": "599550"
  },
  {
    "text": "all these different properties they're",
    "start": "599550",
    "end": "600810"
  },
  {
    "text": "shown on the left hand side that come",
    "start": "600810",
    "end": "602550"
  },
  {
    "text": "from the schema you see those different",
    "start": "602550",
    "end": "607290"
  },
  {
    "text": "types they're all strings with a select",
    "start": "607290",
    "end": "609000"
  },
  {
    "text": "group ID actually I'll select instead",
    "start": "609000",
    "end": "614029"
  },
  {
    "text": "status and I can say that's ABC and",
    "start": "615199",
    "end": "619230"
  },
  {
    "text": "that's a string so that works was if I",
    "start": "619230",
    "end": "621689"
  },
  {
    "text": "said it was 1 you see an error in the",
    "start": "621689",
    "end": "623100"
  },
  {
    "text": "IDE because that's not the type that is",
    "start": "623100",
    "end": "625649"
  },
  {
    "text": "expecting like I can really select any",
    "start": "625649",
    "end": "630899"
  },
  {
    "text": "of these properties",
    "start": "630899",
    "end": "633410"
  },
  {
    "text": "era select type and I can give that type",
    "start": "636700",
    "end": "640150"
  },
  {
    "text": "of whatever I choose ABC and that's",
    "start": "640150",
    "end": "643360"
  },
  {
    "text": "basically how you bring in these",
    "start": "643360",
    "end": "645610"
  },
  {
    "text": "schemers directly into your projects in",
    "start": "645610",
    "end": "647740"
  },
  {
    "text": "Visual Studio code schema management can",
    "start": "647740",
    "end": "651310"
  },
  {
    "text": "be challenging when using event buses",
    "start": "651310",
    "end": "653110"
  },
  {
    "text": "event bridge makes light work of",
    "start": "653110",
    "end": "655180"
  },
  {
    "text": "automatically detecting and discovering",
    "start": "655180",
    "end": "657190"
  },
  {
    "text": "schemas both within AWS services SAS",
    "start": "657190",
    "end": "660430"
  },
  {
    "text": "partners and your custom applications",
    "start": "660430",
    "end": "662350"
  },
  {
    "text": "you can directly import code bindings",
    "start": "662350",
    "end": "664840"
  },
  {
    "text": "into many of the most popular IDs which",
    "start": "664840",
    "end": "667300"
  },
  {
    "text": "can help accelerate the development for",
    "start": "667300",
    "end": "668950"
  },
  {
    "text": "you and your team to learn more visit",
    "start": "668950",
    "end": "671320"
  },
  {
    "text": "aws.amazon.com forward slash of amperage",
    "start": "671320",
    "end": "674620"
  },
  {
    "text": "thanks for joining me for this brief",
    "start": "674620",
    "end": "676690"
  },
  {
    "text": "overview happy coding",
    "start": "676690",
    "end": "680010"
  }
]