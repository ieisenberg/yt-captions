[
  {
    "text": "a multi-tier application architecture for our customer picks and services but",
    "start": "0",
    "end": "6480"
  },
  {
    "text": "then they were tightly coupled and functioned from a development a",
    "start": "6480",
    "end": "12240"
  },
  {
    "text": "deployment and management effective in a monolithic way then as times gone on we've evolved to service-oriented",
    "start": "12240",
    "end": "19650"
  },
  {
    "text": "architectures and this is where the monolith was breaking down into major components but still had functions or",
    "start": "19650",
    "end": "26010"
  },
  {
    "text": "sub components as part of it there may have been multiple tiers to if such as",
    "start": "26010",
    "end": "32610"
  },
  {
    "text": "you know logic tiers application tiers and you know other new front end facing",
    "start": "32610",
    "end": "38489"
  },
  {
    "text": "tiers and then in the back here in data tiers so the move to service oriented",
    "start": "38489",
    "end": "44250"
  },
  {
    "text": "architecture goes back a number of years now and we're all we're all kind of we're seeing that now there's thousands",
    "start": "44250",
    "end": "49440"
  },
  {
    "text": "of applications that literature service-oriented architecture and now",
    "start": "49440",
    "end": "58350"
  },
  {
    "text": "that the the kind of the the next evolution we're seeing is a micro",
    "start": "58350",
    "end": "63390"
  },
  {
    "text": "services architecture where we take the service or in service-oriented abyss our introductory entire architecture and",
    "start": "63390",
    "end": "69210"
  },
  {
    "text": "split them down even further decouple them even more so that as you can see in",
    "start": "69210",
    "end": "75960"
  },
  {
    "text": "this diagram you've got these various you know really loosely coupled elements",
    "start": "75960",
    "end": "81810"
  },
  {
    "text": "within your infrastructure which provide a more discrete form of management",
    "start": "81810",
    "end": "87390"
  },
  {
    "text": "control etc so there are over time we've",
    "start": "87390",
    "end": "94020"
  },
  {
    "text": "seen with species service-oriented architecture a number of tools that have come to help customers you know such",
    "start": "94020",
    "end": "99930"
  },
  {
    "text": "using a web service code libraries continuous integration continuous deployment patterns containers API",
    "start": "99930",
    "end": "105540"
  },
  {
    "text": "management configuration management tools etc and you know a large number of tools are available to you to help with",
    "start": "105540",
    "end": "112649"
  },
  {
    "text": "this service-oriented this evolution of it will move to serious oriented architecture we've also along the way",
    "start": "112649",
    "end": "119490"
  },
  {
    "text": "and helping with it too with Susan such as the less to compute out on demand compute service auto scaling load",
    "start": "119490",
    "end": "126689"
  },
  {
    "text": "balancers other services like elastic Beanstalk our trusted adviser service",
    "start": "126689",
    "end": "132690"
  },
  {
    "text": "these are all which helped as part of this service-oriented approach but you know",
    "start": "132690",
    "end": "140520"
  },
  {
    "text": "this there's still all of these tours and innovations are still coupled to a shared dependency so although we've been",
    "start": "140520",
    "end": "146310"
  },
  {
    "text": "able to break down you know the monolithic to service-oriented architecture to you know more discrete",
    "start": "146310",
    "end": "151920"
  },
  {
    "text": "components there is still a coupling to shape dependency and that of course is",
    "start": "151920",
    "end": "158220"
  },
  {
    "text": "service and you know there's some examples on the screen that you can see",
    "start": "158220",
    "end": "163319"
  },
  {
    "text": "now is such as you know what what are the decisions we need to make as part of using service to stand up various",
    "start": "163319",
    "end": "169950"
  },
  {
    "text": "applications such as you know what size service do I need how to control access how do I handle change management how do",
    "start": "169950",
    "end": "177269"
  },
  {
    "text": "i scale which operating system there's all these questions are still there as part of even with a service-oriented",
    "start": "177269",
    "end": "185400"
  },
  {
    "text": "architecture or a move to market services you still throw these these dilemmas and challenges to plan how",
    "start": "185400",
    "end": "191280"
  },
  {
    "text": "you're gonna provide that service or that application to your customers so we've made you know as quickly we've",
    "start": "191280",
    "end": "198390"
  },
  {
    "text": "made it you know it's been a great journey but we still have this huge dilemma of service managing their",
    "start": "198390",
    "end": "203730"
  },
  {
    "text": "provision and deploying them etc so this is kind of led to an evolution our",
    "start": "203730",
    "end": "210329"
  },
  {
    "text": "customers coming to us and moving towards you know how do we remove service from this and I'm just going to",
    "start": "210329",
    "end": "216209"
  },
  {
    "text": "step back again and look at it from a different perspective of what we think service is an important kind of shift",
    "start": "216209",
    "end": "222359"
  },
  {
    "text": "the way our customers are designing deploying applications on AWS so if you",
    "start": "222359",
    "end": "228000"
  },
  {
    "text": "just look at say on the AWS cloud and we have this diagram where there's our",
    "start": "228000",
    "end": "233940"
  },
  {
    "text": "complete infrastructure and inside there is a collection of instances and they may be providing particular application",
    "start": "233940",
    "end": "240359"
  },
  {
    "text": "will cause a functionality they could be an individual server they could be a scanning group of servers but and on",
    "start": "240359",
    "end": "247470"
  },
  {
    "text": "each one of those instances we're running application code so this is the this is a situation you know a couple of",
    "start": "247470",
    "end": "254100"
  },
  {
    "text": "years ago you'd have AWS infrastructure inside there you'd have pools and groups",
    "start": "254100",
    "end": "259889"
  },
  {
    "text": "of servers instances and running on them would be application code and their",
    "start": "259889",
    "end": "265620"
  },
  {
    "text": "application code will provide different funky now he would work with data may be stored in a database may be stored an",
    "start": "265620",
    "end": "270900"
  },
  {
    "text": "object story but then next we move to",
    "start": "270900",
    "end": "277720"
  },
  {
    "text": "containers containers came out four years ago and allowed us to work with those same instances and leverage and",
    "start": "277720",
    "end": "284080"
  },
  {
    "text": "utilize that capacity even more so so containers run inside our instance is",
    "start": "284080",
    "end": "289120"
  },
  {
    "text": "our virtual servers they still use the st. Paul of instances they still use the same ATS infrastructure and inside them",
    "start": "289120",
    "end": "297550"
  },
  {
    "text": "we're running application code so we started with servers and application code running on inside instances and",
    "start": "297550",
    "end": "312220"
  },
  {
    "text": "we've now got container service on Amazon which is and contain those those",
    "start": "312220",
    "end": "317890"
  },
  {
    "text": "applications are still doing the same function they're still working with data they're still using degrading with third parties services or or additional",
    "start": "317890",
    "end": "324850"
  },
  {
    "text": "services on AWS so what if we took away the servers the need for servers you see what we really",
    "start": "324850",
    "end": "331300"
  },
  {
    "text": "care about is the application code all we care about at the data it's working with and the other bits of application",
    "start": "331300",
    "end": "338170"
  },
  {
    "text": "code that it works with in the other services those servers and even those containers that we saw in the previous diagrams they don't really matter they",
    "start": "338170",
    "end": "344500"
  },
  {
    "text": "don't necessarily add value to the application we want to provide to our customers so this is the shift this is a",
    "start": "344500",
    "end": "352630"
  },
  {
    "text": "shift how do we take away all those management operational decision-making",
    "start": "352630",
    "end": "358240"
  },
  {
    "text": "points that we have with the servers themselves whether that's the network's the scanning groups the capacity and",
    "start": "358240",
    "end": "364990"
  },
  {
    "text": "this is the this is the key value that we're seeing with service how we just focus on the application code the data",
    "start": "364990",
    "end": "371440"
  },
  {
    "text": "it needs to work with and then the other bits of application code it needs to talk to another services etc so that's",
    "start": "371440",
    "end": "378250"
  },
  {
    "text": "what I'm talking about in this webinar today that that shift from being able to totally not worry about what is the",
    "start": "378250",
    "end": "384400"
  },
  {
    "text": "underlying infrastructure that provides that application code to execute so kind",
    "start": "384400",
    "end": "391360"
  },
  {
    "text": "of kind of key points about architecting lis service what are we really talking about so service we're talking about",
    "start": "391360",
    "end": "396820"
  },
  {
    "text": "fully managed no provisioning zero administration high availability so what we have a channel code we don't want to be",
    "start": "396820",
    "end": "403690"
  },
  {
    "text": "worrying about where's Ben around how's it going to run how we going to get it they're just fully automatic we have a",
    "start": "403690",
    "end": "410130"
  },
  {
    "text": "piece a function or application code and it's just going to through the area's",
    "start": "410130",
    "end": "415900"
  },
  {
    "text": "platform the executed when it's needed how it's needed and in terms of",
    "start": "415900",
    "end": "421300"
  },
  {
    "text": "developer productivity focusing on just the code that matters and that way we can innovate more rapidly our customers",
    "start": "421300",
    "end": "426790"
  },
  {
    "text": "getting available rapidly and as soon as we write that that function or a new version of it we can very very quickly",
    "start": "426790",
    "end": "433120"
  },
  {
    "text": "get it into production so that customers can leverage it and the other big feature is continuously scaling to",
    "start": "433120",
    "end": "440110"
  },
  {
    "text": "automatically scaling up and down the infrastructure is dynamic that a application code can run once or can run",
    "start": "440110",
    "end": "447550"
  },
  {
    "text": "a million times not having to worry about thinking about all that the challenges have had to with you know",
    "start": "447550",
    "end": "456340"
  },
  {
    "text": "compute or even containers and worrying about plumbing in and scanning that environment to cope with dynamic demand",
    "start": "456340",
    "end": "464400"
  },
  {
    "text": "so the first services part of in service architecture is Amazon lambda a dubious",
    "start": "464400",
    "end": "471550"
  },
  {
    "text": "lambda lambda is a fully managed event-driven compute service it's a",
    "start": "471550",
    "end": "477370"
  },
  {
    "text": "micro service without service that's how we tend to think of lambda fully serving us we write a function upload as the",
    "start": "477370",
    "end": "484570"
  },
  {
    "text": "lambda service and then you can enable it to be executed in a number of different ways as needed so some",
    "start": "484570",
    "end": "492520"
  },
  {
    "text": "benefits to AWS lambda first door service we don't have the concept of service of lambda we write a function",
    "start": "492520",
    "end": "499449"
  },
  {
    "text": "and it can be executed any number of times across the lambda infrastructure",
    "start": "499449",
    "end": "505300"
  },
  {
    "text": "we don't have to worry about any of the underlying infrastructure next is event-driven scale and this is",
    "start": "505300",
    "end": "512500"
  },
  {
    "text": "kind of a key difference with serverless as opposed to say platform-as-a-service event-driven integration where external",
    "start": "512500",
    "end": "519669"
  },
  {
    "text": "events across the AWS platform can cause these functions these lambda functions",
    "start": "519669",
    "end": "526540"
  },
  {
    "text": "to be executed and the third one the big one when we're only worrying about the application code that's running these",
    "start": "526540",
    "end": "532240"
  },
  {
    "text": "functions we can then start thinking about Bill in much smaller increments in which case",
    "start": "532240",
    "end": "537940"
  },
  {
    "text": "with lambda we can think about 100 millisecond increments so we're just worrying about how much to charge based",
    "start": "537940",
    "end": "543670"
  },
  {
    "text": "on the time it takes to execute that function and that's a massive difference from traditional compute where you're",
    "start": "543670",
    "end": "549940"
  },
  {
    "text": "worrying about how much it cost each server to run each hour so some more",
    "start": "549940",
    "end": "556209"
  },
  {
    "text": "capabilities with lambda you can bring your own code and that's no js' Java or",
    "start": "556209",
    "end": "562600"
  },
  {
    "text": "Python there's a really simple resource model for lambda all we need to do is define for each particular function how",
    "start": "562600",
    "end": "569680"
  },
  {
    "text": "much memory it needs to run and automatically behind the scenes will scale the compute parrots given to match",
    "start": "569680",
    "end": "577320"
  },
  {
    "text": "that amount of memory next is invocation paths you can use events to kick-off",
    "start": "577320",
    "end": "582940"
  },
  {
    "text": "lambda functions or you can use a scheduling or time based approach to to",
    "start": "582940",
    "end": "588910"
  },
  {
    "text": "invoke functions finally really granular permissions control integration with AWS",
    "start": "588910",
    "end": "595600"
  },
  {
    "text": "Identity and Access Management you can find you have fine-grain control over your lambda functions how they run where",
    "start": "595600",
    "end": "603190"
  },
  {
    "text": "they run etc so lambda how does it work we author a function in the particular",
    "start": "603190",
    "end": "610149"
  },
  {
    "text": "language of choice and we upload it into the lambda service our functions are",
    "start": "610149",
    "end": "615160"
  },
  {
    "text": "designed to be stateless so think of lambda functions as being little bubbles little bubbles that that execute and do",
    "start": "615160",
    "end": "623230"
  },
  {
    "text": "something really really well and then as soon as the execution is done they disappear there's no concept of worrying",
    "start": "623230",
    "end": "629380"
  },
  {
    "text": "about the server that it runs all the infrastructure all we got to do is think about that little function discreet",
    "start": "629380",
    "end": "634870"
  },
  {
    "text": "finally focus function it'll execute and then once the execution is finished it'll just disappear and everything",
    "start": "634870",
    "end": "641980"
  },
  {
    "text": "needed to run it will disappear as well so truly stateless it's important we think of functions and lambda as being",
    "start": "641980",
    "end": "647829"
  },
  {
    "text": "truly stateless Nix of course is deployment you write a function put it into the lender service and everything",
    "start": "647829",
    "end": "654370"
  },
  {
    "text": "else is taken care of when it needs to be run lambda will make sure it's there",
    "start": "654370",
    "end": "659649"
  },
  {
    "text": "and ready to go as it's being as it's being invoked finally monitoring and logging forming",
    "start": "659649",
    "end": "666550"
  },
  {
    "text": "integrated monitoring who logging in the lender service allows you to see how many times your functions run and a",
    "start": "666550",
    "end": "672220"
  },
  {
    "text": "number of other metrics and give you logs around them so that allows you to both debug and also look at the the use",
    "start": "672220",
    "end": "679240"
  },
  {
    "text": "of your service how much been utilized whether you've got it the result right amount of resource for that function of",
    "start": "679240",
    "end": "685420"
  },
  {
    "text": "sign etcetera and we also have patter",
    "start": "685420",
    "end": "690550"
  },
  {
    "text": "eco system and we've got number of partners that are working with us to to make lambda a much more richer and",
    "start": "690550",
    "end": "696490"
  },
  {
    "text": "capable service so some components of lambda so we write a function where you",
    "start": "696490",
    "end": "702790"
  },
  {
    "text": "write a function the lambda service you can choose an event source that causes",
    "start": "702790",
    "end": "708250"
  },
  {
    "text": "that function to run and you have a networking environment behind it",
    "start": "708250",
    "end": "713970"
  },
  {
    "text": "everything else as part of the lambda service is fully managed and taken care of by AWS so I'll step through some of",
    "start": "713970",
    "end": "721450"
  },
  {
    "text": "these and more detail now so the function the function can be your code",
    "start": "721450",
    "end": "726730"
  },
  {
    "text": "written in either Java nodejs JavaScript or Python and I've got an example here",
    "start": "726730",
    "end": "731920"
  },
  {
    "text": "of a lambda function on the right hand side running in JavaScript you apply a",
    "start": "731920",
    "end": "738040"
  },
  {
    "text": "assignor I am role that is that the code assumes during execution so I am of course as",
    "start": "738040",
    "end": "743620"
  },
  {
    "text": "Amazon Web Services Identity and Access Management and we assign the amount of",
    "start": "743620",
    "end": "749710"
  },
  {
    "text": "memory allocated to your code which starts at 128 megabytes and goes up to one and a half gig now of course the",
    "start": "749710",
    "end": "757330"
  },
  {
    "text": "large amount of RAM or memory that's allocated then the more cost that their",
    "start": "757330",
    "end": "763270"
  },
  {
    "text": "function costs to be invoked so we want to have it as lean as possible or as",
    "start": "763270",
    "end": "768570"
  },
  {
    "text": "cost optimized as possible for each invocation so we're not so you're not wasting valuable money so really you",
    "start": "768570",
    "end": "776020"
  },
  {
    "text": "know see three simple parts to a lender function the code you write the role it's going to execute with and the",
    "start": "776020",
    "end": "782050"
  },
  {
    "text": "amount of memory it needs for that code to execute which of course in turn affects the amount of CPU and network",
    "start": "782050",
    "end": "788140"
  },
  {
    "text": "which is scaled behind the scenes that function",
    "start": "788140",
    "end": "793140"
  },
  {
    "text": "so event sources so these are the the things on the Atos platform that can",
    "start": "794360",
    "end": "800119"
  },
  {
    "text": "cause that lambda functions to be run and this is a real big shift from where",
    "start": "800119",
    "end": "805399"
  },
  {
    "text": "we may have seen like in the past they platform-as-a-service with event sources this is where we can",
    "start": "805399",
    "end": "812119"
  },
  {
    "text": "have different services across a double years causing a lambda function to run",
    "start": "812119",
    "end": "817179"
  },
  {
    "text": "so for example with Amazon s3 simple storage service if you put an object or",
    "start": "817179",
    "end": "824029"
  },
  {
    "text": "store a new object in history then an event is created and that event can cause a lambda function to run or Amazon",
    "start": "824029",
    "end": "832220"
  },
  {
    "text": "DynamoDB how no sequel database service",
    "start": "832220",
    "end": "838009"
  },
  {
    "text": "if you add a new record to a table and dynamodb the neck that also creates an",
    "start": "838009",
    "end": "844189"
  },
  {
    "text": "event and you could have a lambda function run based on a new wrinkle being added to a database or",
    "start": "844189",
    "end": "851170"
  },
  {
    "text": "notification or Amazon Kinesis as streams can own as new data comes in on",
    "start": "851170",
    "end": "856189"
  },
  {
    "text": "a stream you can cause lambda functions to be run so these are event sources",
    "start": "856189",
    "end": "861709"
  },
  {
    "text": "where the other a number of services across AWS platform can cause lambda functions to run and this becomes",
    "start": "861709",
    "end": "868399"
  },
  {
    "text": "incredibly powerful so lambda runs your",
    "start": "868399",
    "end": "874069"
  },
  {
    "text": "function code without you managing or scaling services we provide an API so you can also trigger execution of your",
    "start": "874069",
    "end": "880879"
  },
  {
    "text": "function so we have event sources which can automatically create the invocation",
    "start": "880879",
    "end": "887029"
  },
  {
    "text": "of a function we also have an API the we could really create get your function",
    "start": "887029",
    "end": "893989"
  },
  {
    "text": "invocate also we",
    "start": "893989",
    "end": "900270"
  },
  {
    "text": "talk for networking the blender so by default Lander works outside of the",
    "start": "900270",
    "end": "905760"
  },
  {
    "text": "context of your virtual private cloud your VP see your isolated private part of AWS platform but we also support",
    "start": "905760",
    "end": "913680"
  },
  {
    "text": "customer VPC so now you can have your lambda functions run entirely within",
    "start": "913680",
    "end": "919260"
  },
  {
    "text": "your AWS environment so you get to choose which whether you want the",
    "start": "919260",
    "end": "925500"
  },
  {
    "text": "default of just a default network environment within a BBC provider for",
    "start": "925500",
    "end": "930720"
  },
  {
    "text": "you or within your own specific customer VPC so you may be thinking well hold on",
    "start": "930720",
    "end": "938460"
  },
  {
    "text": "how does this change how is this how is this unique and I've kind of alluded to it so far so previously there is lots of",
    "start": "938460",
    "end": "946830"
  },
  {
    "text": "ways or existing lis there is lots of ways to abstract away your services software is a service platform as a",
    "start": "946830",
    "end": "952170"
  },
  {
    "text": "service databases services also you know",
    "start": "952170",
    "end": "958110"
  },
  {
    "text": "our back office or backing as a service and but they are fundamentally different where if services is is much more",
    "start": "958110",
    "end": "967050"
  },
  {
    "text": "powerful and capable as those integrations across the platform across the AWS platform that event-driven",
    "start": "967050",
    "end": "973230"
  },
  {
    "text": "approach these services suffers a service pack for service particularly",
    "start": "973230",
    "end": "978600"
  },
  {
    "text": "where isolated individual services service was lambda users remember now",
    "start": "978600",
    "end": "985440"
  },
  {
    "text": "the services takes it to and integrates across a diverse platform so what's",
    "start": "985440",
    "end": "990840"
  },
  {
    "text": "unique about lambda so abstraction a code function level it's arbitrary flexible and familiar in other words",
    "start": "990840",
    "end": "996840"
  },
  {
    "text": "you're writing code like you've always written it whether it's no js' Java or Python the security model the security",
    "start": "996840",
    "end": "1004970"
  },
  {
    "text": "models also incredibly familiar so you're utilizing Identity and Access Management BBC natively within lambda",
    "start": "1004970",
    "end": "1011060"
  },
  {
    "text": "the pricing model is based on the number of invitations there's now a really rich",
    "start": "1011060",
    "end": "1016430"
  },
  {
    "text": "community being built up around lambda we're seeing it with partners that are providing tours for lambda but also",
    "start": "1016430",
    "end": "1023180"
  },
  {
    "text": "seeing it online would say our forums where we're seeing customers sharing information sharing ideas on how to",
    "start": "1023180",
    "end": "1029150"
  },
  {
    "text": "utilize lambda to achieve things either more effectively or and of course integration across a",
    "start": "1029150",
    "end": "1036058"
  },
  {
    "text": "diverse service ecosystem so that's triggers events etc those are really big and unique aspects of lamda",
    "start": "1036059",
    "end": "1046459"
  },
  {
    "text": "so let me just give you an example this is just a quick kind of snapshot of the",
    "start": "1046459",
    "end": "1052049"
  },
  {
    "text": "difference of doing things with lambda versus how we would have done them historically so here's on screen now is",
    "start": "1052049",
    "end": "1059669"
  },
  {
    "text": "an example of a data processing architecture with servers there's a number of different things going on in",
    "start": "1059669",
    "end": "1066000"
  },
  {
    "text": "this diagram you can see there's nodes on the right hand side worker nodes we",
    "start": "1066000",
    "end": "1071160"
  },
  {
    "text": "have a source of data or from the left we have servers which are pushing data",
    "start": "1071160",
    "end": "1076799"
  },
  {
    "text": "listening to the source and then pushing it to different queues and then we have",
    "start": "1076799",
    "end": "1083010"
  },
  {
    "text": "the fleet of servers on the right taking action based on that but there's a there's a",
    "start": "1083010",
    "end": "1088440"
  },
  {
    "text": "lot of configuration and management in order to stand up this this this architecture you've got to worry about a",
    "start": "1088440",
    "end": "1094770"
  },
  {
    "text": "number of services such as ec2 if you compute your network the polling of the",
    "start": "1094770",
    "end": "1100679"
  },
  {
    "text": "service the polling of the source of data writing not only just writing the code to what it does to say push data to",
    "start": "1100679",
    "end": "1107760"
  },
  {
    "text": "a queue but also the you know the complete application thereof how it functions etc and then of course there's",
    "start": "1107760",
    "end": "1114510"
  },
  {
    "text": "the management of it there's things like managing cross availability zone",
    "start": "1114510",
    "end": "1120000"
  },
  {
    "text": "replication and making sure it's highly available highly resilient so if we look",
    "start": "1120000",
    "end": "1125610"
  },
  {
    "text": "at this same architecture simple application architecture of listening to a source of data and then pushing that",
    "start": "1125610",
    "end": "1132179"
  },
  {
    "text": "data onto a queue and taking action on it how does it look like with lambda so",
    "start": "1132179",
    "end": "1138120"
  },
  {
    "text": "with lambda much more straightforward we have a source of data the source of data",
    "start": "1138120",
    "end": "1143130"
  },
  {
    "text": "can be attached through an event to the invocation of a lambda function and then",
    "start": "1143130",
    "end": "1149220"
  },
  {
    "text": "every time that source of data came comes in that lambda function is run you don't have to worry about polling the",
    "start": "1149220",
    "end": "1155520"
  },
  {
    "text": "polling the source of data with some sort of middle tier application you know we're queuing you don't aware",
    "start": "1155520",
    "end": "1161730"
  },
  {
    "text": "auto-scaling you don't have to worry about cross availability zone or reputation or redundancy",
    "start": "1161730",
    "end": "1167460"
  },
  {
    "text": "that just takes care of all of it we just write a function once we've determined a way in which that function",
    "start": "1167460",
    "end": "1174240"
  },
  {
    "text": "will be advocated or executed such as an event and then everything else is",
    "start": "1174240",
    "end": "1179460"
  },
  {
    "text": "marriage behind the scenes it's a massive simplification of what we need",
    "start": "1179460",
    "end": "1184860"
  },
  {
    "text": "to do to have our outcome for that particular function so but there's also",
    "start": "1184860",
    "end": "1191700"
  },
  {
    "text": "other service options on a device and it's important to think not just in terms of lambda and that function that",
    "start": "1191700",
    "end": "1196890"
  },
  {
    "text": "keurig running but there's other aspects of service to which kind of make this capability and and make it special such",
    "start": "1196890",
    "end": "1204720"
  },
  {
    "text": "as a database service network messaging",
    "start": "1204720",
    "end": "1209730"
  },
  {
    "text": "logging these are all fully managed services so we don't need to worry about",
    "start": "1209730",
    "end": "1215010"
  },
  {
    "text": "standing up the infrastructure behind them worrying about managing them maintain them patching them these fully",
    "start": "1215010",
    "end": "1220710"
  },
  {
    "text": "managed services make serverless possible and induction to lambda and other services such as api gateway there",
    "start": "1220710",
    "end": "1227340"
  },
  {
    "text": "is a bigger picture here lambda and it's on its own isn't necessarily just",
    "start": "1227340",
    "end": "1234230"
  },
  {
    "text": "service you do need the benefits these other services brings such as a user management where you've got fully",
    "start": "1234230",
    "end": "1240600"
  },
  {
    "text": "integrated identity access management with the lambda service so liberating",
    "start": "1240600",
    "end": "1246210"
  },
  {
    "text": "these other services are also a part of service as well it's not just about lambda or other or a single service",
    "start": "1246210",
    "end": "1252630"
  },
  {
    "text": "server this does combine all that of those rich benefits across the head of this platform so we've built up a",
    "start": "1252630",
    "end": "1257789"
  },
  {
    "text": "capability that's allowed service to occur so just a few examples of some",
    "start": "1257789",
    "end": "1264899"
  },
  {
    "text": "more triggers for aw slander so such as",
    "start": "1264899",
    "end": "1270169"
  },
  {
    "text": "ello es iot actions actions occurring are instead of things service they can",
    "start": "1270169",
    "end": "1277110"
  },
  {
    "text": "cause lambda functions to be executed how about also Cognito Cognito so when",
    "start": "1277110",
    "end": "1286020"
  },
  {
    "text": "data is synced with the Camino sync service from say a mobile device tickled meter that can also cause an event which",
    "start": "1286020",
    "end": "1294240"
  },
  {
    "text": "makes a lambda function occur next of course is another example as CloudFormation you can",
    "start": "1294240",
    "end": "1300750"
  },
  {
    "text": "customer sources on CloudFormation cause lambda functions to be executed and even Amazon echo skills on the Amazon echo",
    "start": "1300750",
    "end": "1308370"
  },
  {
    "text": "device deck and cause lambda functions to be executed so just a few more ideas there of what can cause an end you know",
    "start": "1308370",
    "end": "1317580"
  },
  {
    "text": "cause lambda functions to be executed and what one more thing with mentioning of course you can also do scheduled",
    "start": "1317580",
    "end": "1322860"
  },
  {
    "text": "events on render others you can set a time for a a function to be executed so",
    "start": "1322860",
    "end": "1331080"
  },
  {
    "text": "I'm going to step through some example service architectures not going to dig",
    "start": "1331080",
    "end": "1336240"
  },
  {
    "text": "our to date these are really just to kind of share some ideas of how server",
    "start": "1336240",
    "end": "1342030"
  },
  {
    "text": "lists can be used and the first is a real-time stream processing using Kinesis and lambda and of course Kinesis",
    "start": "1342030",
    "end": "1349650"
  },
  {
    "text": "is our streaming so so Kinesis can consume streams of data from external",
    "start": "1349650",
    "end": "1355410"
  },
  {
    "text": "services or even in tone miso Kinesis may have a stream of data coming in and",
    "start": "1355410",
    "end": "1361100"
  },
  {
    "text": "then each time we have data communicant caused an event for a lambda function to run and then the lambda function may be",
    "start": "1361100",
    "end": "1368400"
  },
  {
    "text": "either may be able to analyze that data coming in or modify it transform it and",
    "start": "1368400",
    "end": "1373650"
  },
  {
    "text": "can put it into say redshift our data we have serviced or caused a notification",
    "start": "1373650",
    "end": "1379740"
  },
  {
    "text": "maybe we want a mobile notification to go out that a particular data or type of",
    "start": "1379740",
    "end": "1384840"
  },
  {
    "text": "data has come in so real-time stream processing is in lambda really simple to do really easy to create an event",
    "start": "1384840",
    "end": "1391850"
  },
  {
    "text": "connection between Kinesis and landers so that lambda is executing a function based on data being streamed in and",
    "start": "1391850",
    "end": "1399000"
  },
  {
    "text": "real-time so that's first example next",
    "start": "1399000",
    "end": "1405179"
  },
  {
    "text": "is real-time database triggers work for using dynamodb our no sequel database",
    "start": "1405179",
    "end": "1410820"
  },
  {
    "text": "service and AWS lambda so does dynamodb can have data commensal it so we add a",
    "start": "1410820",
    "end": "1416940"
  },
  {
    "text": "new record or modify a record in a table and then it will each of those events in",
    "start": "1416940",
    "end": "1422040"
  },
  {
    "text": "the database a lambda function can be executed and maybe it's to create an",
    "start": "1422040",
    "end": "1427470"
  },
  {
    "text": "index let's just say for example we've got a table any table of customer data",
    "start": "1427470",
    "end": "1432790"
  },
  {
    "text": "we want to have an index that's maintained a separate index of some particular function maybe we're",
    "start": "1432790",
    "end": "1438280"
  },
  {
    "text": "modifying it or transforming it and so we use lambda to create that maybe it's",
    "start": "1438280",
    "end": "1443650"
  },
  {
    "text": "not even maybe it's even in a different Amazon DynamoDB table or even in a",
    "start": "1443650",
    "end": "1449260"
  },
  {
    "text": "different region some people call this poor man's replication where data comes",
    "start": "1449260",
    "end": "1455890"
  },
  {
    "text": "a diamond even we add a record lambda function runs and goes and stores that that record somewhere else maybe in",
    "start": "1455890",
    "end": "1463270"
  },
  {
    "text": "another Amazon DynamoDB table a square or it's maybe putting it into Amazon richer so it's really quite capable",
    "start": "1463270",
    "end": "1470740"
  },
  {
    "text": "enriched to asynchronously do functions based on the database of events",
    "start": "1470740",
    "end": "1476650"
  },
  {
    "text": "occurring next one so wrote I miss at handling workflow using Amazon SNS and",
    "start": "1476650",
    "end": "1484150"
  },
  {
    "text": "AWS lambda so SNS is our notification service and for example say a new",
    "start": "1484150",
    "end": "1489700"
  },
  {
    "text": "message is published to the notification service well that also creates event and lambda can run a function based on that",
    "start": "1489700",
    "end": "1496690"
  },
  {
    "text": "new notification and maybe we want to have another notification occur or maybe",
    "start": "1496690",
    "end": "1501700"
  },
  {
    "text": "we want to cause some sort of the",
    "start": "1501700",
    "end": "1507310"
  },
  {
    "text": "interaction to occur on Amazon Kinesis our streaming service maybe we want a stream to start maybe notification comes",
    "start": "1507310",
    "end": "1513610"
  },
  {
    "text": "in and says a there's a particular event or or external factor that means we want",
    "start": "1513610",
    "end": "1521410"
  },
  {
    "text": "to stop the streaming of data and so functions lambda functions can run based",
    "start": "1521410",
    "end": "1527590"
  },
  {
    "text": "on notification service next one is a",
    "start": "1527590",
    "end": "1533500"
  },
  {
    "text": "beckon workflow using Amazon API gateway fully managed wistful API service and",
    "start": "1533500",
    "end": "1543220"
  },
  {
    "text": "avis lambda so in this particular case a gateway has a restful interface and an",
    "start": "1543220",
    "end": "1550630"
  },
  {
    "text": "API was called which in turn caused a lambda function and that lambda function may go and modify or check on a new",
    "start": "1550630",
    "end": "1559240"
  },
  {
    "text": "object that was say stored in history or maybe going to create an object in history or maybe it's going to add a",
    "start": "1559240",
    "end": "1565030"
  },
  {
    "text": "record to a table and Moe DB so a restful interface a risk of API causing lambda functions to run and",
    "start": "1565030",
    "end": "1573010"
  },
  {
    "text": "again this is a really rich scenario was to have a more detailed example here of",
    "start": "1573010",
    "end": "1581470"
  },
  {
    "text": "lambda being used and this's play on sports which is a customer running in production on AWS using lambda in a",
    "start": "1581470",
    "end": "1588820"
  },
  {
    "text": "totally serverless way and let me talk you through this example so play on sports allows the streaming of sports to",
    "start": "1588820",
    "end": "1598060"
  },
  {
    "text": "come in and be stored inside the object storage service and then also to be",
    "start": "1598060",
    "end": "1603250"
  },
  {
    "text": "consumed across mobile devices so in this example here we see sports being",
    "start": "1603250",
    "end": "1610360"
  },
  {
    "text": "streamed in and it comes in via clouds run flat front and skits stored into s3",
    "start": "1610360",
    "end": "1616630"
  },
  {
    "text": "object storage service and but it will come in and potentially a large very rich format high resolution format and",
    "start": "1616630",
    "end": "1623620"
  },
  {
    "text": "that may not be optimal for streaming to the end customer devices such as mobile or tablet etc so we want to the customer",
    "start": "1623620",
    "end": "1631930"
  },
  {
    "text": "play sports play on sports re wants to transcode those large original media",
    "start": "1631930",
    "end": "1638890"
  },
  {
    "text": "files into smaller more discreet more optimized files that customers are going to consume so as the media is streamed",
    "start": "1638890",
    "end": "1648490"
  },
  {
    "text": "and installed on s3 this causes an event for a number of different functions to run and there's a you can see in the",
    "start": "1648490",
    "end": "1656350"
  },
  {
    "text": "center of the screen there there is a master function a number of cascaded holds or more purposeful functions that",
    "start": "1656350",
    "end": "1662770"
  },
  {
    "text": "go and transcribe two different formats so we may have a full hi-def stream coming in and then the lambda function",
    "start": "1662770",
    "end": "1669400"
  },
  {
    "text": "will get executed as it's streamed and stored an s3 and then we'll transcode it",
    "start": "1669400",
    "end": "1674590"
  },
  {
    "text": "to a functional transcoded C to 480p to 360p to thumbnail size and auto auto or",
    "start": "1674590",
    "end": "1683110"
  },
  {
    "text": "your only and then we'll store that in the s3 bucket that's used for playback",
    "start": "1683110",
    "end": "1688560"
  },
  {
    "text": "so incredibly scalable no servers used in the entire service for this",
    "start": "1688560",
    "end": "1694660"
  },
  {
    "text": "functionality and yet it's entirely on demand so as these streams come in and",
    "start": "1694660",
    "end": "1699790"
  },
  {
    "text": "it's mesthri they can automatically transcoded because the events are causing lambda functions to be executed",
    "start": "1699790",
    "end": "1705580"
  },
  {
    "text": "again a really rich scenario really powerful scenario okay so that kind of",
    "start": "1705580",
    "end": "1712269"
  },
  {
    "text": "leads the question so to really utilize Lander do you need to react to take for",
    "start": "1712269",
    "end": "1718299"
  },
  {
    "text": "an address and event-driven environment well I think there's no doubt that",
    "start": "1718299",
    "end": "1723700"
  },
  {
    "text": "you'll get most benefit by reacting applications for lambda and aka roots",
    "start": "1723700",
    "end": "1730960"
  },
  {
    "text": "and let's talk about you get the benefit of being able to utilize a inventor own",
    "start": "1730960",
    "end": "1736389"
  },
  {
    "text": "function based approach to your code and yes you'll need to react it if you want",
    "start": "1736389",
    "end": "1742839"
  },
  {
    "text": "to get the most benefits out of it so let me talk now about API gave us our echo gateway is a risk for fully managed",
    "start": "1742839",
    "end": "1750159"
  },
  {
    "text": "service for your ap is it allows you to create api's on the API gateway service",
    "start": "1750159",
    "end": "1756039"
  },
  {
    "text": "configure and publish them and propose to provide those other in efforts of fully managed service where it's fully",
    "start": "1756039",
    "end": "1762549"
  },
  {
    "text": "monitored it's integrated with our Identity and Access Management and other platform security controls and easy to",
    "start": "1762549",
    "end": "1769719"
  },
  {
    "text": "maintain so an automatically fully managed service that scales as your API is a",
    "start": "1769719",
    "end": "1776919"
  },
  {
    "text": "call so this becomes a restful interface or risk for front-end for lambda lambda",
    "start": "1776919",
    "end": "1783940"
  },
  {
    "text": "itself of course is not you know it doesn't have a wrist interface you can't call it from say a ap web page or web",
    "start": "1783940",
    "end": "1791889"
  },
  {
    "text": "server directly you need to provide an API for it an API gateway provides that",
    "start": "1791889",
    "end": "1797139"
  },
  {
    "text": "front end so just some tips and tricks talking about using lambda so the first",
    "start": "1797139",
    "end": "1806799"
  },
  {
    "text": "one is using lambda to order cloud productivity so really good example here",
    "start": "1806799",
    "end": "1812409"
  },
  {
    "text": "cloud trail is our service that keeps track and stores and Amazon history all",
    "start": "1812409",
    "end": "1817749"
  },
  {
    "text": "the activity that goes on in your account so that may be through API is it may be through the console the main web",
    "start": "1817749",
    "end": "1825219"
  },
  {
    "text": "console everything you do is stored by cloud trial and files in Amazon s3",
    "start": "1825219",
    "end": "1831870"
  },
  {
    "text": "as those logs are stored in history it creates an event and you can assign a",
    "start": "1831870",
    "end": "1837600"
  },
  {
    "text": "lambda function to those events so that each time you get a cloud trail activity",
    "start": "1837600",
    "end": "1843059"
  },
  {
    "text": "ie activity across your account you can either send a notification as an example similar notification or maybe you want",
    "start": "1843059",
    "end": "1850020"
  },
  {
    "text": "that function to go and analyze I am to make sure things are how they're meant to be etc so using lambda to audit cloud",
    "start": "1850020",
    "end": "1857520"
  },
  {
    "text": "travel activity and make sure things that aren't expected and happening in your environment you can use lambda for",
    "start": "1857520",
    "end": "1865260"
  },
  {
    "text": "automated infrastructure management so for example if you have a cloud watch alarm cloud watch is a monitoring",
    "start": "1865260",
    "end": "1871950"
  },
  {
    "text": "service and you can have notifications that occur as a result of alarms and those notifications can of course cause",
    "start": "1871950",
    "end": "1879900"
  },
  {
    "text": "the lambda functions to run maybe you have an alarm that comes that that's",
    "start": "1879900",
    "end": "1885179"
  },
  {
    "text": "notifiers of a server at ec2 instance having some sort of fault or meeting",
    "start": "1885179",
    "end": "1894090"
  },
  {
    "text": "management maybe it's it's just just filling up etc so you could cause the lambda function to go and take action",
    "start": "1894090",
    "end": "1899280"
  },
  {
    "text": "based on it and you can do it across a number of services such as ec2 our compute service elastic compute",
    "start": "1899280",
    "end": "1906000"
  },
  {
    "text": "container service Beanstalk Kinesis etc so you can use cloud watch alarms and",
    "start": "1906000",
    "end": "1911700"
  },
  {
    "text": "notifications to get lambda to take care of and automate the management of your infrastructure next example is using",
    "start": "1911700",
    "end": "1924270"
  },
  {
    "text": "lambda 2 for database events to external endpoints so if we have also cloud watch",
    "start": "1924270",
    "end": "1930920"
  },
  {
    "text": "events coming in or creating activities so something causes a cloud watch event",
    "start": "1930920",
    "end": "1937800"
  },
  {
    "text": "or alarm notification Amazon notification service then causes the",
    "start": "1937800",
    "end": "1943080"
  },
  {
    "text": "lambda function we could then talk to an external outside service such as if this",
    "start": "1943080",
    "end": "1948360"
  },
  {
    "text": "thin bed and caused external activities to happen you know a really simple",
    "start": "1948360",
    "end": "1954420"
  },
  {
    "text": "example of course as if a server devise or there's some sort of fault for the server or group of servers or some",
    "start": "1954420",
    "end": "1960720"
  },
  {
    "text": "service on your AWS infrastructure you could have a light that comes on in your operation",
    "start": "1960720",
    "end": "1965940"
  },
  {
    "text": "Center so the lambda function could talk to if this then that and then have a light that comes on or some sort of you",
    "start": "1965940",
    "end": "1972210"
  },
  {
    "text": "know external maybe alarm or physical environment so it's another interesting",
    "start": "1972210",
    "end": "1978210"
  },
  {
    "text": "scenario of integrating with outside the AWS environment based on activities",
    "start": "1978210",
    "end": "1984210"
  },
  {
    "text": "happening on your infrastructure next of course is using them to deploy lambda",
    "start": "1984210",
    "end": "1990960"
  },
  {
    "text": "functions so as you create and manage your lambda code it's likely you may",
    "start": "1990960",
    "end": "1996870"
  },
  {
    "text": "store them and it github repository and give github of course can cause can talk",
    "start": "1996870",
    "end": "2002600"
  },
  {
    "text": "to Amazon SNS of course notifications when new functions or new coders edit your repository so in turn that can",
    "start": "2002600",
    "end": "2010250"
  },
  {
    "text": "cause a lambda function to run which may then go and take that new version of code to be uploaded into the lander",
    "start": "2010250",
    "end": "2016669"
  },
  {
    "text": "service some of the ways you've got lambda running lambda or lambda creating lambda functions",
    "start": "2016669",
    "end": "2021789"
  },
  {
    "text": "another rich scenario put you know for version control and management and how your developers all work in a more",
    "start": "2021789",
    "end": "2027590"
  },
  {
    "text": "complex environment where you have a number of people working on your lambda functions so good how being uses your",
    "start": "2027590",
    "end": "2034490"
  },
  {
    "text": "repository notifications being kicked off when you have new code submitted to",
    "start": "2034490",
    "end": "2039500"
  },
  {
    "text": "the repository and then I'll end a function running to upload that and insert it into create a lambda function",
    "start": "2039500",
    "end": "2045320"
  },
  {
    "text": "on AWS a few other tips and tricks for",
    "start": "2045320",
    "end": "2050358"
  },
  {
    "text": "extending lambda functionality let's to use those temp spaces cache when running",
    "start": "2050359",
    "end": "2055730"
  },
  {
    "text": "your function make use of grunt grunt and Jenkins plugins you can hook up",
    "start": "2055730",
    "end": "2062510"
  },
  {
    "text": "lambda functions to slack where you've got lender functions running based on conversations going on and on a select",
    "start": "2062510",
    "end": "2068990"
  },
  {
    "text": "channel and there's also another one worth looking at is jaws it's a service application framework that a custard",
    "start": "2068990",
    "end": "2076700"
  },
  {
    "text": "third party a customer has provided that allows you to manage your lambda",
    "start": "2076700",
    "end": "2081770"
  },
  {
    "text": "functions and how could the mention of them so some things to look at so now",
    "start": "2081770",
    "end": "2088220"
  },
  {
    "text": "I'm going to just quickly step through a a web tier",
    "start": "2088220",
    "end": "2096970"
  },
  {
    "text": "they're on - Canseco we just talked through a few more service architecture patterns know as first of course is",
    "start": "2098099",
    "end": "2104700"
  },
  {
    "text": "micro services so we talk about Marcus services quite a bit with lambda and if you're a gateway and and you get asked",
    "start": "2104700",
    "end": "2110970"
  },
  {
    "text": "often you know what's the connection was is a micro service is still relevant with vendôme well the great thing about",
    "start": "2110970",
    "end": "2117090"
  },
  {
    "text": "lambda and service of architectures is that they lead and they they help",
    "start": "2117090",
    "end": "2122910"
  },
  {
    "text": "towards micro services architecture they lead themselves to it there is a lot of similarities or",
    "start": "2122910",
    "end": "2130710"
  },
  {
    "text": "architectural similarities or connections between small discrete functions or Co such as you write with",
    "start": "2130710",
    "end": "2137640"
  },
  {
    "text": "lambda where it's a very small discrete function that runs based on either external events or schedule and that",
    "start": "2137640",
    "end": "2144420"
  },
  {
    "text": "natan naturally leads to what is a macro services architecture so it helps write",
    "start": "2144420",
    "end": "2149670"
  },
  {
    "text": "discrete functions discrete loosely coupled functions mobile backend has",
    "start": "2149670",
    "end": "2157230"
  },
  {
    "text": "another example mobile backing for a social media app where a user is going",
    "start": "2157230",
    "end": "2162510"
  },
  {
    "text": "to post data API gateway which I talked about for is our fully managed wistful gateway service so a mobile application",
    "start": "2162510",
    "end": "2170190"
  },
  {
    "text": "talking to API gateway making a call a lambda function is triggered which in",
    "start": "2170190",
    "end": "2175680"
  },
  {
    "text": "turn creates a notification wrote an analytics engine in which case using our",
    "start": "2175680",
    "end": "2183930"
  },
  {
    "text": "Kinesis our fully managed distributed streaming service as data is streamed in",
    "start": "2183930",
    "end": "2190470"
  },
  {
    "text": "and Kinesis lambda functions of a triggered which in turn may cause things",
    "start": "2190470",
    "end": "2196530"
  },
  {
    "text": "like an index being created or data being stored and dominating the database based on that data being streamed in and",
    "start": "2196530",
    "end": "2202470"
  },
  {
    "text": "then analysis of it using as a visualization tool like Sarah some",
    "start": "2202470",
    "end": "2209520"
  },
  {
    "text": "serverless best practices so let me just",
    "start": "2209520",
    "end": "2214830"
  },
  {
    "text": "talk about some best practices with using lambda first of all is to limit your function",
    "start": "2214830",
    "end": "2220589"
  },
  {
    "text": "size especially with Java as studying the JVM takes time I think most people",
    "start": "2220589",
    "end": "2226020"
  },
  {
    "text": "to understand that it's much larger startup time where the JVM as opposed to say",
    "start": "2226020",
    "end": "2231030"
  },
  {
    "text": "Python or nodejs so really limit your function science sighs keep it really",
    "start": "2231030",
    "end": "2236220"
  },
  {
    "text": "discreet keep it single purpose the intent with lambda functions is to go",
    "start": "2236220",
    "end": "2241740"
  },
  {
    "text": "and put twenty different outcomes or intent inside that function keep it to a single single purpose and then it",
    "start": "2241740",
    "end": "2249240"
  },
  {
    "text": "executes starts starts up and executes much quicker with nodejs remember their",
    "start": "2249240",
    "end": "2254940"
  },
  {
    "text": "execution is asynchronous and with lambda of course you can go down to past",
    "start": "2254940",
    "end": "2262350"
  },
  {
    "text": "you can have functions that can execute synchronously or asynchronously in other",
    "start": "2262350",
    "end": "2269130"
  },
  {
    "text": "words with your asynchronous are they the non-blocking and was soon granted synchronous execution the function the",
    "start": "2269130",
    "end": "2277110"
  },
  {
    "text": "lambda function will wait for its activities to complete before so it's a",
    "start": "2277110",
    "end": "2283530"
  },
  {
    "text": "blocking design applications designer or code design don't assume a function",
    "start": "2283530",
    "end": "2290490"
  },
  {
    "text": "container reuse so in other words so when the function executes you can",
    "start": "2290490",
    "end": "2295530"
  },
  {
    "text": "assume that the next time execute is going to be using the same container don't forget about the disk you've got a",
    "start": "2295530",
    "end": "2302550"
  },
  {
    "text": "500 megabyte the temp space provided for each function use function aliases so we",
    "start": "2302550",
    "end": "2309930"
  },
  {
    "text": "provide a number of different ways for you to to name your functions and aliases is a reasonably new feature",
    "start": "2309930",
    "end": "2315990"
  },
  {
    "text": "where it allows you to have say for your latest version of your function you could call it and give it a head esse",
    "start": "2315990",
    "end": "2322710"
  },
  {
    "text": "production and other newer versions you're working on an alias of div and",
    "start": "2322710",
    "end": "2328830"
  },
  {
    "text": "then in your code or through API call use the alias to call your function you",
    "start": "2328830",
    "end": "2335060"
  },
  {
    "text": "can clewd the logging service and also create custom metrics in which to",
    "start": "2335060",
    "end": "2341430"
  },
  {
    "text": "determine the the way you're going to analyze the success of your function",
    "start": "2341430",
    "end": "2347130"
  },
  {
    "text": "whether it's before me as you expect or is utilizing the resources it needs as",
    "start": "2347130",
    "end": "2352290"
  },
  {
    "text": "etc or is executing the right amount of time some API gateway based practices so",
    "start": "2352290",
    "end": "2360570"
  },
  {
    "text": "no one is to use new Mach integrations with API gateway so this again to to test how",
    "start": "2360570",
    "end": "2369900"
  },
  {
    "text": "your code is going to function not just across echo gateway but also in conjunction with lambda combined with",
    "start": "2369900",
    "end": "2375900"
  },
  {
    "text": "Amazon Candido for managing user base access controls so cana-do's our managed [Music]",
    "start": "2375900",
    "end": "2381980"
  },
  {
    "text": "mobile and web identity service that allows you to manage your customer identities and authenticate them with",
    "start": "2381980",
    "end": "2389160"
  },
  {
    "text": "your application or either with based on mobile and combine it with api gateway",
    "start": "2389160",
    "end": "2394860"
  },
  {
    "text": "to authenticate your users using and calling your AP is you staged variables",
    "start": "2394860",
    "end": "2401000"
  },
  {
    "text": "inject config values into lambda functions for login behavior cetera use",
    "start": "2401000",
    "end": "2406710"
  },
  {
    "text": "with critical response mapping templates and also take mistake ownership in your",
    "start": "2406710",
    "end": "2412500"
  },
  {
    "text": "code of for your HTTP response codes in other words determine how what's going",
    "start": "2412500",
    "end": "2417810"
  },
  {
    "text": "to happen with your different response codes whether they're successful HTTP 200 or different era states make sure",
    "start": "2417810",
    "end": "2425040"
  },
  {
    "text": "your your you're thinking about how you're handing that from an api get we perspective some more kind of just",
    "start": "2425040",
    "end": "2432450"
  },
  {
    "text": "something up best practices and that's to use strategic consumer naming conventions so other words how you name",
    "start": "2432450",
    "end": "2439470"
  },
  {
    "text": "your lambda functions your roles staging names etc dev and prod using",
    "start": "2439470",
    "end": "2446130"
  },
  {
    "text": "naming conventions and versioning to create automation so this is again where aliases as an example aliases are useful",
    "start": "2446130",
    "end": "2454440"
  },
  {
    "text": "as you add and create functions lambda functions in the lambda service the",
    "start": "2454440",
    "end": "2460140"
  },
  {
    "text": "newest version that you have uploaded into lambda always wins so if you start with rich one then you add a version two",
    "start": "2460140",
    "end": "2466530"
  },
  {
    "text": "by default it'll it'll use version two but you can use aliases and other naming",
    "start": "2466530",
    "end": "2473370"
  },
  {
    "text": "conventions to make it easy to call different versions of your lambda code",
    "start": "2473370",
    "end": "2478910"
  },
  {
    "text": "next couple more with mentioning is you know least privilege and separate iron roles so you want to make sure that",
    "start": "2478910",
    "end": "2485700"
  },
  {
    "text": "you're using the fine grained exit control that EDIUS gives you through Identity and Access Management so that",
    "start": "2485700",
    "end": "2491670"
  },
  {
    "text": "your lambda functions and are just using the least amount of",
    "start": "2491670",
    "end": "2497770"
  },
  {
    "text": "permissions that you're not giving your customers your end users to your service",
    "start": "2497770",
    "end": "2502900"
  },
  {
    "text": "application more Commission's than they need for it to function contact either",
    "start": "2502900",
    "end": "2508599"
  },
  {
    "text": "with support for at large knowing you know live scaling events so",
    "start": "2508599",
    "end": "2514390"
  },
  {
    "text": "if you have a new service application that leverages a lender API gateway and",
    "start": "2514390",
    "end": "2519780"
  },
  {
    "text": "you think it's going to be large-scale when you go live with it don't be afraid to contact support and let us know and",
    "start": "2519780",
    "end": "2526329"
  },
  {
    "text": "then we can work closely with you to make sure it's going to perform as you need and also answer any other concerns",
    "start": "2526329",
    "end": "2532900"
  },
  {
    "text": "you may have be aware of service throttling and also",
    "start": "2532900",
    "end": "2538930"
  },
  {
    "text": "engage an erisa support needed so diga",
    "start": "2538930",
    "end": "2544180"
  },
  {
    "text": "that's that's the webinar kind of summing up service why we see service is",
    "start": "2544180",
    "end": "2551859"
  },
  {
    "text": "really important okay and some a number of examples of what you can use a",
    "start": "2551859",
    "end": "2557349"
  },
  {
    "text": "combination of Amazon API gateway fully managed risk full api service lambda our",
    "start": "2557349",
    "end": "2564819"
  },
  {
    "text": "event driven compute service and our additional other services and how you",
    "start": "2564819",
    "end": "2570369"
  },
  {
    "text": "can build complete application architectures on AWS without having to",
    "start": "2570369",
    "end": "2575619"
  },
  {
    "text": "provision or worry about or manage servers just a few more things to talk",
    "start": "2575619",
    "end": "2580630"
  },
  {
    "text": "about so for our lunch and learns which are occurring over the next two and a",
    "start": "2580630",
    "end": "2585640"
  },
  {
    "text": "half weeks we've got a luncheon Lynn's coming up with server solutions on a device we're going to dig in much deeper",
    "start": "2585640",
    "end": "2591789"
  },
  {
    "text": "on these services such as a Tobias Lander and API gateway we're going to do some demos for you give you some much",
    "start": "2591789",
    "end": "2597940"
  },
  {
    "text": "more detailed information on how to architect and deploy applications on",
    "start": "2597940",
    "end": "2605549"
  },
  {
    "text": "forest service next week's Auckland Lunch and Learn we have changed the",
    "start": "2605549",
    "end": "2612789"
  },
  {
    "text": "venue due to popular demand and number of people coming with we've moved it from to the Crowne Plaza Hotel 128",
    "start": "2612789",
    "end": "2621279"
  },
  {
    "text": "Albert Street and Auckland just know that if you you may if you're coming to the Auckland Lunch and Learn next week",
    "start": "2621279",
    "end": "2626410"
  },
  {
    "text": "you should have an email in box living you know about the new location so just have a look on screen",
    "start": "2626410",
    "end": "2632830"
  },
  {
    "text": "is the example so we've got a lot of time now we've got about 10 minutes for",
    "start": "2632830",
    "end": "2638860"
  },
  {
    "text": "QA on service like I see it at the luncheon lens over the next two weeks",
    "start": "2638860",
    "end": "2644230"
  },
  {
    "text": "we're going to be going much deeper on these services in person both across",
    "start": "2644230",
    "end": "2650500"
  },
  {
    "text": "Australia and New Zealand this was just an introduction to core concepts for",
    "start": "2650500",
    "end": "2656100"
  },
  {
    "text": "service utilising a device and Lander happy to take questions now and provide",
    "start": "2656100",
    "end": "2663340"
  },
  {
    "text": "more information and I'll just leave it",
    "start": "2663340",
    "end": "2669220"
  },
  {
    "text": "there and so we've got a question box on the user interface feel free to enter in your questions what questions we don't",
    "start": "2669220",
    "end": "2675820"
  },
  {
    "text": "get to answer over the next 10 minutes or so we will be summarizing and the",
    "start": "2675820",
    "end": "2680860"
  },
  {
    "text": "document will send out to everyone over the next week there'll also be a copy of this webinar recording available next",
    "start": "2680860",
    "end": "2688450"
  },
  {
    "text": "week I'm gonna look through it's just a skim through some of the questions now and see if there's any I can answer",
    "start": "2688450",
    "end": "2694780"
  },
  {
    "text": "[Music]",
    "start": "2694780",
    "end": "2697829"
  },
  {
    "text": "oh come on for those that are interested is will ender ever allow lower memory limits so",
    "start": "2733980",
    "end": "2740760"
  },
  {
    "text": "at the moment the smallest resource amount you can assign to lambda function is 128 Meg's of RAM that is our smallest",
    "start": "2740760",
    "end": "2748170"
  },
  {
    "text": "amounts obviously we listen to our",
    "start": "2748170",
    "end": "2753599"
  },
  {
    "text": "customers on what they need I highly recommend if you seeing your lambda",
    "start": "2753599",
    "end": "2760109"
  },
  {
    "text": "functions and service architectures you know utilizing much less than that then",
    "start": "2760109",
    "end": "2765569"
  },
  {
    "text": "I highly recommend using the feedback button inside the alias console letting our developer team know that you're",
    "start": "2765569",
    "end": "2773190"
  },
  {
    "text": "using less for now though hundred megabytes is the minimum resource amount",
    "start": "2773190",
    "end": "2778349"
  },
  {
    "text": "you can assign to them to function another question there that's come in",
    "start": "2778349",
    "end": "2783869"
  },
  {
    "text": "what about golang so at the moment we support nodejs Java and Python again our",
    "start": "2783869",
    "end": "2790430"
  },
  {
    "text": "lambda team are listening to all of our customers and working obviously we want",
    "start": "2790430",
    "end": "2796740"
  },
  {
    "text": "to make the services with rich and relevant for our customers as possible so feel free to let our our lambda team",
    "start": "2796740",
    "end": "2804150"
  },
  {
    "text": "know by using the feedback button or or contacting support or yelling out to anyone who W know we're constantly",
    "start": "2804150",
    "end": "2811589"
  },
  {
    "text": "listening to make sure we're innovating with lambda and adding the features and capabilities you want",
    "start": "2811589",
    "end": "2818930"
  },
  {
    "text": "question come in what a good metaphor for lambda be a library and those",
    "start": "2855400",
    "end": "2861039"
  },
  {
    "text": "functions that you the lender functions your own are they equivalent to books so",
    "start": "2861039",
    "end": "2871140"
  },
  {
    "text": "yeah I well I don't know if that's good money for side I mean I think of just as",
    "start": "2871529",
    "end": "2877319"
  },
  {
    "text": "the the interesting about now and of course as lambda can call our lambda functions can call other lambda functions anything you can necessarily",
    "start": "2877319",
    "end": "2883690"
  },
  {
    "text": "Mason you can do with the AWS SDK lambda can do so I mean I would think of lambda",
    "start": "2883690",
    "end": "2892390"
  },
  {
    "text": "as really the machinery the computation machinery the capability for you to have",
    "start": "2892390",
    "end": "2898869"
  },
  {
    "text": "a function of code and then when you hit the execute button lambda is just",
    "start": "2898869",
    "end": "2903940"
  },
  {
    "text": "knowing where to execute it it's thinking about the complexities of you know which availability zone",
    "start": "2903940",
    "end": "2909789"
  },
  {
    "text": "what is the nuclear means what does the storage means what all those other kind of bits and pieces yeah that's a great",
    "start": "2909789",
    "end": "2917380"
  },
  {
    "text": "metaphor",
    "start": "2917380",
    "end": "2919769"
  },
  {
    "text": "so another question that's coming is as a good practice for lambda functions to",
    "start": "2948799",
    "end": "2955710"
  },
  {
    "text": "be as small as possible and you know you can store in their own get repo or is it",
    "start": "2955710",
    "end": "2961200"
  },
  {
    "text": "no problem to use really large frameworks like Lubich io etc in other",
    "start": "2961200",
    "end": "2969509"
  },
  {
    "text": "words have really large functions there's lots of capability and storing them in the repo so definitely the",
    "start": "2969509",
    "end": "2976079"
  },
  {
    "text": "smaller the lighter the lambda function the better the smaller it is then the",
    "start": "2976079",
    "end": "2982559"
  },
  {
    "text": "quicker it's going to execute it's going to load an execute and that saves not only improves the customer experience",
    "start": "2982559",
    "end": "2989700"
  },
  {
    "text": "but also saves money as well because you're occurring this computation time I",
    "start": "2989700",
    "end": "2996559"
  },
  {
    "text": "would be you know definitely recommend I mean utilize libraries inside your code",
    "start": "2996559",
    "end": "3002599"
  },
  {
    "text": "and inside your functions that you need but keep it absolutely minimal yeah and",
    "start": "3002599",
    "end": "3013519"
  },
  {
    "text": "so next question is this is recorded this this session is recorded and we're making it available online next week",
    "start": "3013519",
    "end": "3021758"
  },
  {
    "text": "so the next question is oh it's not able",
    "start": "3035090",
    "end": "3040110"
  },
  {
    "text": "to find any article just going ways to have dev test environments Marcus is implemented using lambda so lambda you",
    "start": "3040110",
    "end": "3045810"
  },
  {
    "text": "write a function and then you sign it a name or version or an alias and it's",
    "start": "3045810",
    "end": "3053160"
  },
  {
    "text": "that naming and how you call it that determines the environment and purpose",
    "start": "3053160",
    "end": "3058950"
  },
  {
    "text": "it's going to use so you can have different functions or the same function",
    "start": "3058950",
    "end": "3064070"
  },
  {
    "text": "executed across different environments they may be a dear test may be a production and you can utilize the",
    "start": "3064070",
    "end": "3069240"
  },
  {
    "text": "naming of it for the lifecycle or the stage the lifecycle had that particular",
    "start": "3069240",
    "end": "3075480"
  },
  {
    "text": "function but there's also is do you have lender functions working across your",
    "start": "3075480",
    "end": "3080520"
  },
  {
    "text": "different individual environments are you your developer environment production and test rather than the lifecycle of the function itself so you",
    "start": "3080520",
    "end": "3087060"
  },
  {
    "text": "could do that as well I mean if it's running in V PC which network or which resources or which application zip",
    "start": "3087060",
    "end": "3093000"
  },
  {
    "text": "function going to interact with you may have a function that can interact with different environments you have for your",
    "start": "3093000",
    "end": "3102890"
  },
  {
    "text": "particular interest architecture or you may have you know an individual function",
    "start": "3102890",
    "end": "3109230"
  },
  {
    "text": "or you may have different functions so lender functions you're only running give them to function G only running in and test and staging and products cetera",
    "start": "3109230",
    "end": "3117570"
  },
  {
    "text": "so you can determine how you do that either through how you invoke functions or you know just really the functions",
    "start": "3117570",
    "end": "3123780"
  },
  {
    "text": "you have inside your lambda environment if you have different functions for different environments or different",
    "start": "3123780",
    "end": "3129480"
  },
  {
    "text": "parts of your application lifecycle",
    "start": "3129480",
    "end": "3133400"
  },
  {
    "text": "I've got a Christian here can you give us a link for the play on slide yet we",
    "start": "3140440",
    "end": "3145760"
  },
  {
    "text": "have and there is a I've also published case study on LinkedIn as well so we'll",
    "start": "3145760",
    "end": "3152510"
  },
  {
    "text": "include that in Britain recording and [Music] follow after this with URL",
    "start": "3152510",
    "end": "3162010"
  },
  {
    "text": "so feel free to put in questions into the question box if you want anything",
    "start": "3186020",
    "end": "3193789"
  },
  {
    "text": "answered those that we don't get to answer in the next couple of minutes we will follow up later with questions for",
    "start": "3193789",
    "end": "3203270"
  },
  {
    "text": "so in next the structure behind Linda meet security standard subsidy ideas yes so at the",
    "start": "3210079",
    "end": "3216890"
  },
  {
    "text": "moment lambda is not a PC IQ",
    "start": "3216890",
    "end": "3221680"
  },
  {
    "text": "one of our PCI services on us on our compliance page we actually list there",
    "start": "3222040",
    "end": "3227450"
  },
  {
    "text": "eight of your services which are PCI compliant PCI approved lambda isn't yet",
    "start": "3227450",
    "end": "3235550"
  },
  {
    "text": "one of them",
    "start": "3235550",
    "end": "3238030"
  },
  {
    "text": "went out really valid jaws is now longer now the doors framework is now no longer",
    "start": "3281250",
    "end": "3286680"
  },
  {
    "text": "called jaws it's now called serverless you can get to it at HTTP concise",
    "start": "3286680",
    "end": "3292980"
  },
  {
    "text": "github.com slash serverless slash server that's so just a correction there yes jaws is now called service it's no",
    "start": "3292980",
    "end": "3300330"
  },
  {
    "text": "longer called jaws so that's the framework the member framework it's now",
    "start": "3300330",
    "end": "3305370"
  },
  {
    "text": "called service thanks guys",
    "start": "3305370",
    "end": "3308780"
  }
]