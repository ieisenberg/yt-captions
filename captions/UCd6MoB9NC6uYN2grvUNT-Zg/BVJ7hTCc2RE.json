[
  {
    "start": "0",
    "end": "16000"
  },
  {
    "text": "hey everybody how many people actually know what bleacher report is here Wow",
    "start": "30",
    "end": "5549"
  },
  {
    "text": "Wow a lot of a lot of be our fans so I wanted to show you a quick video just to",
    "start": "5549",
    "end": "10950"
  },
  {
    "text": "showcase some of the social highlights that we have and then we'll sort of get into it",
    "start": "10950",
    "end": "16490"
  },
  {
    "start": "16000",
    "end": "85000"
  },
  {
    "text": "main phases megacity faded she plays",
    "start": "34480",
    "end": "41490"
  },
  {
    "text": "swimming in the money coming",
    "start": "41490",
    "end": "45170"
  },
  {
    "text": "Space Jam stars about this year but ever wake up and smell the garden",
    "start": "48579",
    "end": "53950"
  },
  {
    "text": "I'm Einstein even when my thoughts you don't wanna hear",
    "start": "53950",
    "end": "60199"
  },
  {
    "text": "let the kilt off check the price again",
    "start": "60199",
    "end": "64390"
  },
  {
    "text": "like Nevada in the middle numbers arrested in the lead",
    "start": "65770",
    "end": "71930"
  },
  {
    "text": "no great",
    "start": "74280",
    "end": "77670"
  },
  {
    "text": "[Music]",
    "start": "80120",
    "end": "85830"
  },
  {
    "start": "85000",
    "end": "183000"
  },
  {
    "text": "cool so what they really expect from this session we're gonna quickly go over what bleacher report is we'll take a",
    "start": "85830",
    "end": "93460"
  },
  {
    "text": "quick journey through the evolution of our stack and why AWS elastic beanstalk",
    "start": "93460",
    "end": "98590"
  },
  {
    "text": "and docker worked for us and we'll go over a little bit of our usage of AWS elastic beanstalk we'll also do a quick",
    "start": "98590",
    "end": "105880"
  },
  {
    "text": "case study comparison to sort of see the before and after effects of it and we're gonna talk and real quick real briefly",
    "start": "105880",
    "end": "112450"
  },
  {
    "text": "about what the architecture is gonna go in the future so who we are this is a",
    "start": "112450",
    "end": "118450"
  },
  {
    "text": "quick shot in our SF office so these are all our content people that are feverishly giving you like the latest",
    "start": "118450",
    "end": "124060"
  },
  {
    "text": "news or latest updates and push notifications they get a they get to just watch sports all day as their job it's pretty great all the little things",
    "start": "124060",
    "end": "131319"
  },
  {
    "text": "you can see we have a little custom CMS for them it's all powered by elastic Beanstalk so we're a leader in sports",
    "start": "131319",
    "end": "138580"
  },
  {
    "text": "leading a sports media real-time social first sports content we reach over 250 million people every month our web",
    "start": "138580",
    "end": "146019"
  },
  {
    "text": "average is about 50 million uniques but what's really really important to us is that our app you know 15 million",
    "start": "146019",
    "end": "152109"
  },
  {
    "text": "downloads just this year and we average two hundred and thirty minutes per unique each month so we're the number one sports app so what makes us",
    "start": "152109",
    "end": "160720"
  },
  {
    "text": "different right we're industry trendsetter we seamlessly meld personalized in-depth sports coverage",
    "start": "160720",
    "end": "166030"
  },
  {
    "text": "with content that exudes pop culture Evelyn's I'm sure you've all seen our posts over Instagram Facebook Twitter we",
    "start": "166030",
    "end": "173980"
  },
  {
    "text": "also have innovative original content such as game as owns we also have social media accounts that were just mentioned",
    "start": "173980",
    "end": "180340"
  },
  {
    "text": "and there's millions and millions of followers so how many people here are",
    "start": "180340",
    "end": "185500"
  },
  {
    "start": "183000",
    "end": "407000"
  },
  {
    "text": "still running a monolithic infrastructure well not as many as I",
    "start": "185500",
    "end": "191560"
  },
  {
    "text": "thought there would be with it I feel your pain like most startups we built everything on a single codebase this was",
    "start": "191560",
    "end": "198190"
  },
  {
    "text": "not ideal but it really got us going compounding this we also built a lot of our own infrastructure what that means",
    "start": "198190",
    "end": "204010"
  },
  {
    "text": "like CloudFormation ec2 you know we did a lot of the nuts and bolts to get everything running",
    "start": "204010",
    "end": "209910"
  },
  {
    "text": "you know this war but you can really only run with ankle weights for so long right so mana lists",
    "start": "209910",
    "end": "216610"
  },
  {
    "text": "are very hard to scale I don't need to tell you guys this there's merge conflicts large intertwined codebase you know it's",
    "start": "216610",
    "end": "222850"
  },
  {
    "text": "really hard to learn the new employees are easily overwhelmed like you bring them in you dump on this big codebase to",
    "start": "222850",
    "end": "228520"
  },
  {
    "text": "come back what do I even start right continuous deployment is super risky you there's no sir there's no",
    "start": "228520",
    "end": "234640"
  },
  {
    "text": "concept with service contracts and the monolith you're just gonna go oh I need to make this change but you might be breaking somebody else's code so it's",
    "start": "234640",
    "end": "242860"
  },
  {
    "text": "very hard to scale an engineering organization so what does this really look like above you're gonna see what we",
    "start": "242860",
    "end": "249880"
  },
  {
    "text": "considered developers responsibility and below you're going to see the operations responsibility so this is back in the",
    "start": "249880",
    "end": "256299"
  },
  {
    "text": "monolithic stage so you on a new service oh we were big ruby shop and so if you",
    "start": "256299",
    "end": "262360"
  },
  {
    "text": "want a new service you're gonna go hey you know I need this new ruby app I'm gonna take that over to operations to be",
    "start": "262360",
    "end": "267730"
  },
  {
    "text": "like hey I need this thing built let's configure everything right and then",
    "start": "267730",
    "end": "272980"
  },
  {
    "text": "develop our operations be okay and when you install Ruby I'm gonna install all the libraries that you need",
    "start": "272980",
    "end": "278410"
  },
  {
    "text": "and as this is sort of happening two parallel paths of work are sort of happening and there's sort of divergent",
    "start": "278410",
    "end": "284890"
  },
  {
    "text": "they don't really come together at any given point in time what really happens is developers would install Ruby on",
    "start": "284890",
    "end": "290500"
  },
  {
    "text": "their own and then just play this little game of telephone and have operations try to mimic that on a production system",
    "start": "290500",
    "end": "295630"
  },
  {
    "text": "if you're a little bit better you use something like vagrant and these key people on the same page and then you have like chef and whatnot but still",
    "start": "295630",
    "end": "302200"
  },
  {
    "text": "this wasn't ideal you end up in this cycle we're like okay I think it's working let's ship some code to it you",
    "start": "302200",
    "end": "307960"
  },
  {
    "text": "know let's see if it works and then they'll come back and egg no no no I need this library or any disk configuration changed this is a vicious",
    "start": "307960",
    "end": "314470"
  },
  {
    "text": "cycle and it's super inefficient sometimes it could take two to three days even get a new service going when",
    "start": "314470",
    "end": "321130"
  },
  {
    "text": "we finally finished this loop we can actually go hey we feel pretty confident about this let's let's packages a build",
    "start": "321130",
    "end": "326890"
  },
  {
    "text": "an ami and put this in auto scaling group in you know throw it in cloud formation so as you notice you see",
    "start": "326890",
    "end": "332080"
  },
  {
    "text": "there's a lot of bouncing around and a lot of big steps and at this point developers are ready to verify so this",
    "start": "332080",
    "end": "339010"
  },
  {
    "text": "this isn't ideal but this worked for us of we were able to get our apps going",
    "start": "339010",
    "end": "345350"
  },
  {
    "text": "but something had to change right so let's let's dive into some of the technologies and sort of what all the different steps of all that was that was",
    "start": "345350",
    "end": "352400"
  },
  {
    "text": "a really high level here's actually what we did we use chef we will configure all the infrastructure which chef Ruby",
    "start": "352400",
    "end": "359870"
  },
  {
    "text": "installs my sequel libraries etc but uh after that we would still need to send",
    "start": "359870",
    "end": "366290"
  },
  {
    "text": "this up into s3 and build an ami at this point we would actually go to cloud formation and make that update onto the",
    "start": "366290",
    "end": "373130"
  },
  {
    "text": "auto scaling group at this point we're ready to scale in the new instances and then we would have to actually scale out",
    "start": "373130",
    "end": "379340"
  },
  {
    "text": "the old instances as well and because there's a health check it would actually",
    "start": "379340",
    "end": "384830"
  },
  {
    "text": "take up to two minutes for an instance to be reported healthy so this is you know a long process just to do a simple",
    "start": "384830",
    "end": "391400"
  },
  {
    "text": "deploy and at this point we're actually finally ready for clients as you can see",
    "start": "391400",
    "end": "396440"
  },
  {
    "text": "this is you know way too many steps and way too many things that you have to do and there's a potential to go wrong at every single step we try to automate it",
    "start": "396440",
    "end": "402800"
  },
  {
    "text": "all but we'll see what we can do about that so I want to bring up something we",
    "start": "402800",
    "end": "408920"
  },
  {
    "start": "407000",
    "end": "458000"
  },
  {
    "text": "build this isn't too important for you to dive too much in a detail but at the end of the day we actually built a lot",
    "start": "408920",
    "end": "415430"
  },
  {
    "text": "of that tooling as I sort of mentioned earlier we would actually want to just configure it with as little we want to",
    "start": "415430",
    "end": "421940"
  },
  {
    "text": "configure this with as little JSON as possible I don't know how many of you have used Confirmation but it's actually",
    "start": "421940",
    "end": "428060"
  },
  {
    "text": "pretty cumbersome to go through and write all the different portions of it so what we did was the guys who wrote",
    "start": "428060",
    "end": "434570"
  },
  {
    "text": "this is actually here we wrote a little tool that allows us to take a lot of the",
    "start": "434570",
    "end": "439700"
  },
  {
    "text": "different parameters and just create a little DSL for it so this saves a lot of",
    "start": "439700",
    "end": "445730"
  },
  {
    "text": "time this interface is actually quite good and it made things work without having to go to too much detail so now",
    "start": "445730",
    "end": "452420"
  },
  {
    "text": "that we know that how we used to run things let's sort of talk a little bit about where we want to be right so micro",
    "start": "452420",
    "end": "459950"
  },
  {
    "start": "458000",
    "end": "503000"
  },
  {
    "text": "services you know we understand the pass let's move forward like many other companies at these crossroads you know",
    "start": "459950",
    "end": "465650"
  },
  {
    "text": "we took the latest buzzword and we don't let's run with it you know this is gonna solve all our problems you know let's say that dragon break",
    "start": "465650",
    "end": "471770"
  },
  {
    "text": "that big monolithic thing you know pieces that we can actually handle you know brake services out remove the",
    "start": "471770",
    "end": "479150"
  },
  {
    "text": "complexity increase code velocity and we will be able to ramp up new hires faster",
    "start": "479150",
    "end": "484990"
  },
  {
    "text": "and now we're gonna have clear ownership of disparate code however before we can",
    "start": "484990",
    "end": "490760"
  },
  {
    "text": "do any of these things we sort of have to look at the process that we sort of had before and see if that scales even",
    "start": "490760",
    "end": "498020"
  },
  {
    "text": "by going to micro services so we already",
    "start": "498020",
    "end": "505820"
  },
  {
    "start": "503000",
    "end": "602000"
  },
  {
    "text": "went through a little bit about how we ran our infrastructure frankly it just didn't work because we wanted to move",
    "start": "505820",
    "end": "511490"
  },
  {
    "text": "fast you know we were a fast-paced engineering organization things were always shifting we're always trying to",
    "start": "511490",
    "end": "516770"
  },
  {
    "text": "stay ahead of the curve so we had to do a little bit of self-reflection in order to get us you know through this transition successfully so it's pretty",
    "start": "516770",
    "end": "525560"
  },
  {
    "text": "apparent you know Ops was becoming a clear bottleneck and this is not where we want it to be infrastructure",
    "start": "525560",
    "end": "532310"
  },
  {
    "text": "repository so all that tooling that we sort of talked about like the cloud",
    "start": "532310",
    "end": "537320"
  },
  {
    "text": "formation that DSL all the different things chef repository you know 182",
    "start": "537320",
    "end": "542450"
  },
  {
    "text": "thousand lines 882 like that that's terrible it takes 23 seconds of comas off github",
    "start": "542450",
    "end": "548690"
  },
  {
    "text": "but can you imagine being a new developer like we just hired you to be our new host guy here's how you get",
    "start": "548690",
    "end": "554990"
  },
  {
    "text": "started you cloned this monster of a thing so staging production stacks right we had over 600 cloud formation stacks",
    "start": "554990",
    "end": "561830"
  },
  {
    "text": "to manage yes we had maybe one or two big monoliths to manage but you know those are broken up into all their own",
    "start": "561830",
    "end": "568160"
  },
  {
    "text": "little things there's one code base but a lot of different services there was delayed jobs schedulers you know workers",
    "start": "568160",
    "end": "573500"
  },
  {
    "text": "web app you know Redis etcetera and our DevOps team Mehta size was - it always",
    "start": "573500",
    "end": "579650"
  },
  {
    "text": "fluctuated between two and four this was not like this big operation you know obviously something had to give and",
    "start": "579650",
    "end": "586160"
  },
  {
    "text": "we're always fighting fires this wasn't very good so we need to change and we needed to identify what those changes",
    "start": "586160",
    "end": "591380"
  },
  {
    "text": "were so we can move on in and move fast in order to keep up with our competitors so also one thing was it's just simply",
    "start": "591380",
    "end": "599360"
  },
  {
    "text": "too complex right",
    "start": "599360",
    "end": "602110"
  },
  {
    "start": "602000",
    "end": "719000"
  },
  {
    "text": "at this point you know the self-reflection is really important you can't really begin to tackle the problem until you've actually understood what",
    "start": "604490",
    "end": "610760"
  },
  {
    "text": "your actual problem is so one question is like as a DevOps engineer you should",
    "start": "610760",
    "end": "615830"
  },
  {
    "text": "always ask or as a good employee you know or a good engineer in the software development lifecycle where are you most",
    "start": "615830",
    "end": "621500"
  },
  {
    "text": "useful you know let's not reinvent the",
    "start": "621500",
    "end": "626600"
  },
  {
    "text": "wheel a lot of things have been commoditized every year at the reinvent you learn about all these new tools that",
    "start": "626600",
    "end": "631700"
  },
  {
    "text": "sort of obsolete everything else if you keep doing the things that you know are old and you're wasting your times on old",
    "start": "631700",
    "end": "637010"
  },
  {
    "text": "technology you know you you're not taking advantage of things that somebody else or facing the exact same problem",
    "start": "637010",
    "end": "642170"
  },
  {
    "text": "and Amazon's gonna solve that for you so remember to focus on you know the type of work that is most important to help",
    "start": "642170",
    "end": "649310"
  },
  {
    "text": "your business succeed one thing to",
    "start": "649310",
    "end": "655310"
  },
  {
    "text": "really identify as you're doing this process is to identify all the bottlenecks so I don't know how how many people here I've read the Phoenix",
    "start": "655310",
    "end": "661010"
  },
  {
    "text": "project good amount of people so this is a really great book it's sort of based",
    "start": "661010",
    "end": "667400"
  },
  {
    "text": "on manufacturing but they apply it to an engineering organization that you'll probably get a really great laughs especially if you've worked in a little",
    "start": "667400",
    "end": "672710"
  },
  {
    "text": "more of a traditional engineering organization it really helps you about identifying the bottlenecks and sort of",
    "start": "672710",
    "end": "678980"
  },
  {
    "text": "figuring out good ways to just sort of address them and more importantly we",
    "start": "678980",
    "end": "686270"
  },
  {
    "text": "really got to keep things simple this time one of the biggest problems was chef you know I don't know how many how",
    "start": "686270",
    "end": "691700"
  },
  {
    "text": "many people actually run chef here okay that number seems to be going down but one thing that we had as a problem which",
    "start": "691700",
    "end": "699950"
  },
  {
    "text": "chef was we couldn't get developers to use it it firmly became an OPS task to",
    "start": "699950",
    "end": "705170"
  },
  {
    "text": "do anything with chef we really didn't want to be gatekeepers at this point we wanted to empower developers to be able",
    "start": "705170",
    "end": "711380"
  },
  {
    "text": "to do things themselves so the lorda barrier of entry the easier it is to sell this as a you know as something",
    "start": "711380",
    "end": "716540"
  },
  {
    "text": "that would actually work so with all",
    "start": "716540",
    "end": "722420"
  },
  {
    "start": "719000",
    "end": "767000"
  },
  {
    "text": "that said we're now in a phase were alasa Beanstalk and docker really worked for us so this sort of happened in a",
    "start": "722420",
    "end": "729500"
  },
  {
    "text": "really cool way OPS's becoming such a big bottleneck that developers wanted to rebuild that CMS that you sort of saw on",
    "start": "729500",
    "end": "735860"
  },
  {
    "text": "that slide that all the content people would be using what happened was docker came around they wanted a way to",
    "start": "735860",
    "end": "742680"
  },
  {
    "text": "ship something in docker it just so happened that elastic Beanstalk was around so they were actually able to get",
    "start": "742680",
    "end": "749010"
  },
  {
    "text": "a first revision of that up without much operational help and you know with this we sort of took that and ran with it",
    "start": "749010",
    "end": "754560"
  },
  {
    "text": "because you know if a developer without a whole lot of intervention was able to get a lot of this stuff going there's no",
    "start": "754560",
    "end": "760589"
  },
  {
    "text": "reason we shouldn't approach this and see if we can make that experience even better right so let's talk a little bit",
    "start": "760589",
    "end": "769170"
  },
  {
    "start": "767000",
    "end": "868000"
  },
  {
    "text": "about why elastic Beanstalk and docker made this possible because of the",
    "start": "769170",
    "end": "777660"
  },
  {
    "text": "managed service we also have one infrastructure to rule them all there's docker or sorry way back there's one",
    "start": "777660",
    "end": "785790"
  },
  {
    "text": "infrastructure to rule them all right because now you're stripping docker containers docker is now the unit of deployment not a.m. eyes anybody who's",
    "start": "785790",
    "end": "793440"
  },
  {
    "text": "built a lot of a.m. eyes knows that like no matter how much you optimize for this process it's always going to take a few",
    "start": "793440",
    "end": "798480"
  },
  {
    "text": "minutes to send that up to s3 now we're sort of just going like hey you know just swap out what you need your docker",
    "start": "798480",
    "end": "804060"
  },
  {
    "text": "containers can be as lean as possible and you can actually do you can move really quickly and you only have one infrastructure to manage which is just",
    "start": "804060",
    "end": "809700"
  },
  {
    "text": "the elastic Beanstalk Amazon Linux you automatically get a multiplet of the",
    "start": "809700",
    "end": "814860"
  },
  {
    "text": "multitude of deployment options you know you can be rolling that will slowly take instances out and then replace it with",
    "start": "814860",
    "end": "821460"
  },
  {
    "text": "the new versions you can have immutable which will bring up a whole new set and then retire your old ones or you just do",
    "start": "821460",
    "end": "827010"
  },
  {
    "text": "all at once that's great for like staging environments when we did deployments in our old infrastructure we had to actually go and write a lot of",
    "start": "827010",
    "end": "833610"
  },
  {
    "text": "our own stuff make sure there's no downtime like write something that actually talks to ELB removes it while it does a deploy and",
    "start": "833610",
    "end": "839160"
  },
  {
    "text": "this is sort of just given to you as a first-class citizen this is done in the GUI you can just click exactly what you",
    "start": "839160",
    "end": "844620"
  },
  {
    "text": "want and the best part of it is all you need to do to get started it's just a",
    "start": "844620",
    "end": "849900"
  },
  {
    "text": "simple JSON format and one thing to really keep in mind is if you want to",
    "start": "849900",
    "end": "854910"
  },
  {
    "text": "make sure your apps go out fast you should really utilize the the docker layers to make deployments fast so we'll",
    "start": "854910",
    "end": "861900"
  },
  {
    "text": "go into that in a little bit detail about why we want to do that and how we do that",
    "start": "861900",
    "end": "867380"
  },
  {
    "start": "868000",
    "end": "1011000"
  },
  {
    "text": "so as mentioned earlier we wanted to shift some of that responsibility a little bit on the devs because we were a",
    "start": "869699",
    "end": "876339"
  },
  {
    "text": "small team we couldn't handle everything and we didn't want to be gatekeepers so one really big goal out of this by",
    "start": "876339",
    "end": "883449"
  },
  {
    "text": "moving the elastic Beanstalk was we wanted to remove all this unnecessary gating we shouldn't be preventing people",
    "start": "883449",
    "end": "889089"
  },
  {
    "text": "from doing their jobs we should be empowering them and making them better we wanted to focus on that tooling to",
    "start": "889089",
    "end": "895209"
  },
  {
    "text": "empower and enable developers let's talk a little bit of that the scaling right you think of it as think of a software",
    "start": "895209",
    "end": "903760"
  },
  {
    "text": "developer cycle as a baton race a really good way to think of this is how long do",
    "start": "903760",
    "end": "909040"
  },
  {
    "text": "you have to run before you hand out to the next person you know and sort of where we were at right now was you know developers were ready to go there really",
    "start": "909040",
    "end": "915730"
  },
  {
    "text": "did hand us the baton but you know as AWS people were down tying our shoelaces or something this wasn't the ideal state",
    "start": "915730",
    "end": "921430"
  },
  {
    "text": "to be in so how do we get this better right so obviously if you're using",
    "start": "921430",
    "end": "926769"
  },
  {
    "text": "docker you want to build docker files we reach or build docker images so at this",
    "start": "926769",
    "end": "932500"
  },
  {
    "text": "point we just had every service represented by a docker file and what we",
    "start": "932500",
    "end": "937660"
  },
  {
    "text": "really wanted to manage was the base docker files right you can go on docker",
    "start": "937660",
    "end": "943180"
  },
  {
    "text": "hub look at these things and be like okay how do I build something with node how do I build something that looks ER how about built something Ruby it's a",
    "start": "943180",
    "end": "949449"
  },
  {
    "text": "lot simpler than like the old chef cookbooks we were used to that went out of date or some new version and then all these like attributes you had to set you",
    "start": "949449",
    "end": "956050"
  },
  {
    "text": "actually had very clear different images that you could pool like I want this version I'm gonna pull this version this tag it's a very big difference so",
    "start": "956050",
    "end": "962709"
  },
  {
    "text": "anybody who's used chef before knows it like it's a little cumbersome when you want to you know switch between different versions a lot of this is",
    "start": "962709",
    "end": "969670"
  },
  {
    "text": "available on docker hub but we actually pulled that in-house and built something called shipyard that actually takes all",
    "start": "969670",
    "end": "975040"
  },
  {
    "text": "the base docker files and builds them it puts in our private registry the reason we wanted to do that we want to own that",
    "start": "975040",
    "end": "982029"
  },
  {
    "text": "process for security reasons like if something changes over time like if somebody I know they have the",
    "start": "982029",
    "end": "987880"
  },
  {
    "text": "trusted registry now but if somebody changes the docker file on talk or how then pushes it we don't want to be affected by that so one thing we really",
    "start": "987880",
    "end": "996699"
  },
  {
    "text": "liked before was we kept all the infrastructure in source control and we to continue doing that because it was a",
    "start": "996699",
    "end": "1002790"
  },
  {
    "text": "good changelog you know who made what change and this is exactly what you want",
    "start": "1002790",
    "end": "1008279"
  },
  {
    "text": "to do or else you're not going to know cool so here's a 1/2 of what you need to",
    "start": "1008279",
    "end": "1014100"
  },
  {
    "start": "1011000",
    "end": "1080000"
  },
  {
    "text": "get up and running in elastic Beanstalk with docker this is a single docker image in pretty much state where you",
    "start": "1014100",
    "end": "1020279"
  },
  {
    "text": "want to take your where you want to pull your docker image this is using the",
    "start": "1020279",
    "end": "1025949"
  },
  {
    "text": "public repo but as mentioned earlier we actually use a private repository you state what port your app is listening on",
    "start": "1025949",
    "end": "1032418"
  },
  {
    "text": "and then you also state any volumes you would like to share out the reason we",
    "start": "1032419",
    "end": "1038880"
  },
  {
    "text": "sort of share out this container logs and then share it out is because we do",
    "start": "1038880",
    "end": "1046110"
  },
  {
    "text": "centralize logging and this is an easy way for us to get the logs expose on a host so we just use a little Evie",
    "start": "1046110",
    "end": "1052260"
  },
  {
    "text": "extension that has something that sends it to our out stack and this is very useful tip you don't actually have to",
    "start": "1052260",
    "end": "1057540"
  },
  {
    "text": "log and talk to the Dockers log daemon you can actually just expose the port or expose a volume and write all your logs",
    "start": "1057540",
    "end": "1063690"
  },
  {
    "text": "there and you can also set a blog rotation that way so it's a little more traditional but we were sort of used to it and comfortable in this method one",
    "start": "1063690",
    "end": "1070410"
  },
  {
    "text": "last thing that's not listed here but if you use a private docker registry you probably also want to put a little snip",
    "start": "1070410",
    "end": "1075929"
  },
  {
    "text": "it in there for authentication and you just put that a little s3 bucket now the",
    "start": "1075929",
    "end": "1081000"
  },
  {
    "start": "1080000",
    "end": "1130000"
  },
  {
    "text": "other half of what you need to do is pretty simple for us as I said if you're",
    "start": "1081000",
    "end": "1087600"
  },
  {
    "text": "a developer you go in and go I'm gonna start a new ruby app right in this case",
    "start": "1087600",
    "end": "1093210"
  },
  {
    "text": "we're gonna get a two point two point one you we have a lot of these base base docker files for everybody to use all",
    "start": "1093210",
    "end": "1099330"
  },
  {
    "text": "they have to do is create an app folder copy in their code get it ready expose the port and then start their app so",
    "start": "1099330",
    "end": "1107160"
  },
  {
    "text": "once again the reason we do this is because if you build all the base docker files it's nice because those are",
    "start": "1107160",
    "end": "1113130"
  },
  {
    "text": "already on a machine after you've done one deploy if you're only doing this you'll see that like the layers that change are only the code changes so for",
    "start": "1113130",
    "end": "1120480"
  },
  {
    "text": "example if our code changes are only 30 40 megabytes you'll be pulling 30 40 megabytes versus like the entire docker",
    "start": "1120480",
    "end": "1126570"
  },
  {
    "text": "image which could be hundreds so under",
    "start": "1126570",
    "end": "1133440"
  },
  {
    "start": "1130000",
    "end": "1257000"
  },
  {
    "text": "the hood we really like elastic because at the end of the day it's just a wrapper around a lot of the",
    "start": "1133440",
    "end": "1138780"
  },
  {
    "text": "technologies we've been using except its packaging the nice little thing where we're not writing all the tooling we're",
    "start": "1138780",
    "end": "1143820"
  },
  {
    "text": "actually using leveraging some tooling that Amazon's already given us so when we deploy something to elastic Beanstalk",
    "start": "1143820",
    "end": "1151170"
  },
  {
    "text": "it creates a cloud or it goes into s3 and then it sort of triggers a cloud formation update so at this point it",
    "start": "1151170",
    "end": "1157260"
  },
  {
    "text": "doesn't there's a lot more that sort of happens under the hood but the things that really matter to us are like cloud",
    "start": "1157260",
    "end": "1162330"
  },
  {
    "text": "watch which you know you've you enable enhanced networking it gives you a lot of things that are normal normally given",
    "start": "1162330",
    "end": "1168270"
  },
  {
    "text": "to you in ec2 cloud watch you get things like disk space and other things like",
    "start": "1168270",
    "end": "1174570"
  },
  {
    "text": "memory usage etc and then you also get all the ELB and everything else under one pane of glass under elastic",
    "start": "1174570",
    "end": "1180360"
  },
  {
    "text": "Beanstalk that's a little bit nicer than like having to build your own dashboard going through everything this gives you a very good baseline so it's just sort",
    "start": "1180360",
    "end": "1187590"
  },
  {
    "text": "of given to you out of the box and I highly recommend you know before doing anything else taking a look at it that fits a lot of people's needs",
    "start": "1187590",
    "end": "1193710"
  },
  {
    "text": "it creates an almost feeling group so you know if your app crashes or whatever reason you get you know new instances to",
    "start": "1193710",
    "end": "1199140"
  },
  {
    "text": "replace it and it distributes that load for you or with an ELB so one also thing",
    "start": "1199140",
    "end": "1206220"
  },
  {
    "text": "because everything is confirmation if you have any issues you have the ability",
    "start": "1206220",
    "end": "1212730"
  },
  {
    "text": "to sort of trace everything by yourself so there had been times where you know something hadn't gone perfectly well",
    "start": "1212730",
    "end": "1219330"
  },
  {
    "text": "it's not often but when we have to we can actually dive in to the exact back-end services so you can actually",
    "start": "1219330",
    "end": "1226080"
  },
  {
    "text": "take an elastic Beanstalk stack and then search CloudFormation which will actually give you all the resources that",
    "start": "1226080",
    "end": "1232080"
  },
  {
    "text": "is created so like cloud watch auto scaling groups scale up policies etc so if you wanted to do some tooling like",
    "start": "1232080",
    "end": "1237570"
  },
  {
    "text": "let's say you wanted to do your own custom auto scaling because you know at CPU and network aren't the ones you want",
    "start": "1237570",
    "end": "1242940"
  },
  {
    "text": "a scale on you want a scale on a custom metric that you you sort of manage yourself you would need to look up those things so a quick way to do that",
    "start": "1242940",
    "end": "1249210"
  },
  {
    "text": "wouldn't be to go into confirmation look under the resources and then pull everything up as needed",
    "start": "1249210",
    "end": "1255350"
  },
  {
    "start": "1257000",
    "end": "1507000"
  },
  {
    "text": "so let's take a few moments to go over some tips about how to troubleshoot your elastic Beanstalk stack remember like",
    "start": "1260100",
    "end": "1266730"
  },
  {
    "text": "it's a great service but at the end of the day you own all your infrastructure so it's really really important that you",
    "start": "1266730",
    "end": "1273549"
  },
  {
    "text": "take some time and understand how everything sort of works there's actually a really great blog post on our",
    "start": "1273549",
    "end": "1280480"
  },
  {
    "text": "engineering blog about deconstructing a lot of these things so I'm not going to go into much detail but in /opt elastic",
    "start": "1280480",
    "end": "1287890"
  },
  {
    "text": "Beanstalk there's a two folders that are really important the hooks and a deploy folder what you really want to look at",
    "start": "1287890",
    "end": "1294520"
  },
  {
    "text": "is understanding like it at the end of the day it's really just a deployment tool of shipping docker containers so",
    "start": "1294520",
    "end": "1300640"
  },
  {
    "text": "this should be pretty easy it's already in bash you should go through and sort of understand like when I do a deploy",
    "start": "1300640",
    "end": "1305890"
  },
  {
    "text": "like what steps are actually happening this way you know if you ever run into errors or issues trying to deploy your",
    "start": "1305890",
    "end": "1311710"
  },
  {
    "text": "app you actually know what's going on and you know how to sort of work your way around it and one thing that also",
    "start": "1311710",
    "end": "1318100"
  },
  {
    "text": "keep in mind is uh since you're running a docker container this is for the single docker container one your docker",
    "start": "1318100",
    "end": "1324730"
  },
  {
    "text": "Damon is a daemon your docker container is demonized via an upstart job so let's",
    "start": "1324730",
    "end": "1329830"
  },
  {
    "text": "say your service was a little flappy and then you wanted to at least keep it up for a little bit so you know you know what's going on instead of having it",
    "start": "1329830",
    "end": "1335950"
  },
  {
    "text": "always restart and whatever so what you can actually do is you can go in and look at how they start that job it's",
    "start": "1335950",
    "end": "1341890"
  },
  {
    "text": "under Etsy in it you be docker it just like all the other upstart jobs but a great one is to just disable it and then",
    "start": "1341890",
    "end": "1349140"
  },
  {
    "text": "do your troubleshooting after that anybody who's using a shipping stock knows that there's a great feature that",
    "start": "1349140",
    "end": "1355240"
  },
  {
    "text": "you can go into the logs by just going to the GUI and hitting collect all logs",
    "start": "1355240",
    "end": "1360570"
  },
  {
    "text": "this is really great but call me old-fashioned I actually like to get on the box and tail along because you know",
    "start": "1360570",
    "end": "1366429"
  },
  {
    "text": "a lot of times that's truncated or you know if your instance isn't responding or something weird is happening you want",
    "start": "1366429",
    "end": "1371620"
  },
  {
    "text": "to be able to get on and troubleshoot you know as the first line versus waiting for some daemon to pull all your logs for you and then opening the text",
    "start": "1371620",
    "end": "1377409"
  },
  {
    "text": "editor that just seems to be too long so a really important one is a var log EB -",
    "start": "1377409",
    "end": "1382480"
  },
  {
    "text": "activity log definitely tell that especially during a deployment because then you'll see all the steps that are running all your EB extensions all your",
    "start": "1382480",
    "end": "1388510"
  },
  {
    "text": "tuning it's really important to sort of look there so the last step is a lot of times this is",
    "start": "1388510",
    "end": "1394890"
  },
  {
    "text": "where you would do a lot of your debugging when you're shipping a docker container you want to know like is it",
    "start": "1394890",
    "end": "1399900"
  },
  {
    "text": "running is it doing what's it doing right so docker PS everyone should know like all the docker processes that are",
    "start": "1399900",
    "end": "1405540"
  },
  {
    "text": "running by that daemon that's really important to sort of see a quick view there's anything running a common error",
    "start": "1405540",
    "end": "1412080"
  },
  {
    "text": "is your app will start and then fail immediately for example like you didn't",
    "start": "1412080",
    "end": "1418020"
  },
  {
    "text": "put in your connection string right for your database now you're in a point where your app starts and then died starts it in dies how do you know that",
    "start": "1418020",
    "end": "1425070"
  },
  {
    "text": "happens like Dockers or elastin being salt logs aren't gonna be able to tell you that you know you want to get to your application logs so if you have",
    "start": "1425070",
    "end": "1431190"
  },
  {
    "text": "centralized logging that that's one really great way to sort of see that in a single pane of glass but if not like let's say you haven't built out",
    "start": "1431190",
    "end": "1436860"
  },
  {
    "text": "infrastructure for centralized logging you can go and do docker PS - a which shows even all processes even ones that",
    "start": "1436860",
    "end": "1442800"
  },
  {
    "text": "have died and then you can actually do a docker logs and then just throw that container process in there when all else",
    "start": "1442800",
    "end": "1450750"
  },
  {
    "text": "fails I sort of mentioned this before you can trace the cloud formation stack let's say two people were doing a deployer and a configuration changed at",
    "start": "1450750",
    "end": "1456900"
  },
  {
    "text": "the same time it's not likely that'll allow you to do that or somebody was messing around a back-end and deleted",
    "start": "1456900",
    "end": "1462150"
  },
  {
    "text": "something manually and caused some issues there's been times where someone actually goes in and change the auto scaling group outside of elastic",
    "start": "1462150",
    "end": "1468060"
  },
  {
    "text": "Beanstalk puts it everything in a weird state a lot of times you can recover on your own if you knew what went wrong and",
    "start": "1468060",
    "end": "1474210"
  },
  {
    "text": "just look at the cloud formation events and you'll sort of see hey I can't it's",
    "start": "1474210",
    "end": "1480180"
  },
  {
    "text": "having trouble doing the auto scaling so you can actually go in and make that change manually on the back end and you",
    "start": "1480180",
    "end": "1485280"
  },
  {
    "text": "know a lot of times the system will just recover and up once again this is an",
    "start": "1485280",
    "end": "1490560"
  },
  {
    "text": "Amazon provided service so it's highly recommended that if you run into issues that you know you can't troubleshoot",
    "start": "1490560",
    "end": "1495660"
  },
  {
    "text": "don't you're not alone the best part is you can open a support ticket and it will actually help you up and I've",
    "start": "1495660",
    "end": "1501330"
  },
  {
    "text": "actually found that the elastic Beanstalk support is actually been pretty good so I talked a lot let's sort",
    "start": "1501330",
    "end": "1511920"
  },
  {
    "start": "1507000",
    "end": "1628000"
  },
  {
    "text": "of take a look at the new process you know once again you're a developer and",
    "start": "1511920",
    "end": "1517410"
  },
  {
    "text": "you want to sort of get things running right so we have something that we sort",
    "start": "1517410",
    "end": "1523200"
  },
  {
    "text": "of created it's sort of called a blueprint and from there you sort of just state like hey I want this new environment",
    "start": "1523200",
    "end": "1529710"
  },
  {
    "text": "I want what auto scaling group or how big of auto scaling group what I'm gonna scale on where I'm gonna deploy this you",
    "start": "1529710",
    "end": "1537780"
  },
  {
    "text": "take that check it in and get and then you go to Jenkins and you hit create environment we have a tool it's sort of like a one-click deployment and you sort",
    "start": "1537780",
    "end": "1545580"
  },
  {
    "text": "of notice that it's not it's no longer you know an ops or a developer thing",
    "start": "1545580",
    "end": "1551670"
  },
  {
    "text": "it's something that anybody can do you know anybody can provision a new environment anybody can do things and",
    "start": "1551670",
    "end": "1559050"
  },
  {
    "text": "now also you can create that docker file and rip your code to it",
    "start": "1559050",
    "end": "1564559"
  },
  {
    "text": "so as you see it's a lot more streamlined and it's a lot simpler we",
    "start": "1564559",
    "end": "1569730"
  },
  {
    "text": "don't need to do everything ourselves and it doesn't need to be an ops task it doesn't need to be a dev task the reason",
    "start": "1569730",
    "end": "1577800"
  },
  {
    "text": "I place all the swim lanes in the middle is it's really important that we empower everybody and allow everybody to do",
    "start": "1577800",
    "end": "1583110"
  },
  {
    "text": "things there is no ops responsibility there's no definition on it you know as dev ops you should really come together",
    "start": "1583110",
    "end": "1588660"
  },
  {
    "text": "and sort of share that responsibility and you know work together and that feedback loop that was sort of like hey",
    "start": "1588660",
    "end": "1593820"
  },
  {
    "text": "you do this and then I'll sort of try to match what your specs are know you can probably sit in a room together talk",
    "start": "1593820",
    "end": "1599820"
  },
  {
    "text": "about requirements in about five minutes you have an environment up and running and that's huge for us because we you",
    "start": "1599820",
    "end": "1605250"
  },
  {
    "text": "know by moving the micro services we're gonna have orders of magnitude more services to manage and in order to do",
    "start": "1605250",
    "end": "1611700"
  },
  {
    "text": "that you need to be able to deploy fast you shouldn't be spending all your time worrying about how you're gonna deploy you should be worrying about your time how to write the code how you're gonna",
    "start": "1611700",
    "end": "1617940"
  },
  {
    "text": "help your business win it's not you know it's pretty self apparent that you don't",
    "start": "1617940",
    "end": "1624750"
  },
  {
    "text": "want to spend your time on processes you want to be spending time writing code so",
    "start": "1624750",
    "end": "1630179"
  },
  {
    "start": "1628000",
    "end": "2106000"
  },
  {
    "text": "we're gonna go over the technologies that you sort of need to get this to happen in our case all you really need",
    "start": "1630179",
    "end": "1635250"
  },
  {
    "text": "to do create that docker file it'll do a build and we'll push it to our private registry this is all handled via Jenkins",
    "start": "1635250",
    "end": "1641940"
  },
  {
    "text": "again and then you can actually just take that and deploy with the docker run",
    "start": "1641940",
    "end": "1649920"
  },
  {
    "text": "that either with JSON you take that and you deploy that out takes about six minutes a lot less than what it used to",
    "start": "1649920",
    "end": "1655260"
  },
  {
    "text": "be and at that point you're sort of done that's sort of beautiful you know we do",
    "start": "1655260",
    "end": "1660269"
  },
  {
    "text": "a lot of this to a Jenkins pipeline so you notice that there even though there's three steps as a developer you",
    "start": "1660269",
    "end": "1665399"
  },
  {
    "text": "really after you have everything set up that initial time you sort of check that to get and you go to Jenkins as you go",
    "start": "1665399",
    "end": "1670769"
  },
  {
    "text": "like I want to deployed this app to this environment and then that's it Jenkins will sort of show you and a lot of little swim lanes like where you are so",
    "start": "1670769",
    "end": "1679740"
  },
  {
    "text": "one thing to keep in mind is for staging you probably want to do all at once employees which would probably get that down to like two or three minutes",
    "start": "1679740",
    "end": "1685620"
  },
  {
    "text": "because you're not actually replacing any instances or doing any like shuffling of instances to make sure you're up all the time and the other",
    "start": "1685620",
    "end": "1691889"
  },
  {
    "text": "ones you probably want to choose a smarter one to prevent downtime so let's talk a little bit about blueprints right",
    "start": "1691889",
    "end": "1697639"
  },
  {
    "text": "what does that sort of mean it's sort of something that we had a lot of trouble",
    "start": "1697639",
    "end": "1703710"
  },
  {
    "text": "getting people to adopt chef's it was something that we know we had to spend a lot of time",
    "start": "1703710",
    "end": "1708720"
  },
  {
    "text": "macmaine immutable doing all these things to sort of coax it to the right way our infrastructure code was just",
    "start": "1708720",
    "end": "1716129"
  },
  {
    "text": "humongous you know it was chef confirmation DSL is everything so let's",
    "start": "1716129",
    "end": "1722039"
  },
  {
    "text": "simplify that a little bit you know it's a simple representation of your environment in Yambol the reason we sort",
    "start": "1722039",
    "end": "1729389"
  },
  {
    "text": "of chose the animals if you go home and then you install it lacks a piece off CLI and you do a config save it actually",
    "start": "1729389",
    "end": "1734759"
  },
  {
    "text": "gives you the configuration in a little llamó format so for us it was like while we were tinkering around we can get a",
    "start": "1734759",
    "end": "1740009"
  },
  {
    "text": "copy of it in llamó we're like hey if we build a tool we should just keep it very very similar so after we've been",
    "start": "1740009",
    "end": "1745139"
  },
  {
    "text": "tinkering it we can actually just introduce a tool and it'd be very very similar so it directly leverages elastic",
    "start": "1745139",
    "end": "1754350"
  },
  {
    "text": "beanstalk api so when you write your yam bowl we take that and then we send that",
    "start": "1754350",
    "end": "1760049"
  },
  {
    "text": "over to API and create everything so we're really trying to limit the amount of it's really great to have a really",
    "start": "1760049",
    "end": "1765720"
  },
  {
    "text": "great GUI but for us we wanted to change or track changes and make sure that like changes were sort of gone through a",
    "start": "1765720",
    "end": "1771210"
  },
  {
    "text": "process and it's a little bit hard to like have people going around clicking things and changing things and we'll",
    "start": "1771210",
    "end": "1776429"
  },
  {
    "text": "never know what broke what if that's sort of happening so we're sort of creating a process around like hey all configuration changes should flow",
    "start": "1776429",
    "end": "1782279"
  },
  {
    "text": "through code should flow through these blueprints so one thing is when we move",
    "start": "1782279",
    "end": "1788399"
  },
  {
    "text": "the micro-services is we started using twelve factor apps and by using 12 factor apps all environment variables or now the",
    "start": "1788399",
    "end": "1794940"
  },
  {
    "text": "configuration back in the old days and chef we actually had to write default",
    "start": "1794940",
    "end": "1800400"
  },
  {
    "text": "configurations and then you know set over eyes per environment this is a little more straightforward if you have",
    "start": "1800400",
    "end": "1806100"
  },
  {
    "text": "an app and then you have these sets of configurations you sort of just put that in a blueprint and that'll sort of give you what you need one thing we really",
    "start": "1806100",
    "end": "1812220"
  },
  {
    "text": "did like about the chef thing is if you can write a bunch of base configurations and over time you be like if I'm in this",
    "start": "1812220",
    "end": "1818970"
  },
  {
    "text": "environment i'ma override that with a different settings so we'll talk a little bit more of how we sort of created that kind of process in our new",
    "start": "1818970",
    "end": "1824760"
  },
  {
    "text": "blueprints so as you sort of seen",
    "start": "1824760",
    "end": "1831000"
  },
  {
    "text": "earlier we can create an updated environment one click what's actually really cool as well is we have sort of a",
    "start": "1831000",
    "end": "1836190"
  },
  {
    "text": "dry run feature that isn't a lot if you work with CloudFormation one of the coolest new features that they have is",
    "start": "1836190",
    "end": "1842130"
  },
  {
    "text": "sort of like you can do a dry run you can be like hey if we're gonna do this new template what's gonna actually",
    "start": "1842130",
    "end": "1847860"
  },
  {
    "text": "happen what's gonna change and that's really important because if you're making changes you sort of want to test and see what those changes are before",
    "start": "1847860",
    "end": "1853320"
  },
  {
    "text": "you actually do them so it's it's also integrated right in Jenkins a little checkbox if you make a new configuration",
    "start": "1853320",
    "end": "1859020"
  },
  {
    "text": "and then you want to deploy that out before you do it you hit the little checkbox it says hey I want to actually",
    "start": "1859020",
    "end": "1864299"
  },
  {
    "text": "dry run this it would actually show you in red like what actual configuration is changing once again we're going back to",
    "start": "1864299",
    "end": "1871860"
  },
  {
    "text": "the point is like we really want to know that audit trail you know when things change it should flow through a structured process you want to hold your",
    "start": "1871860",
    "end": "1877020"
  },
  {
    "text": "infrastructure as code it's really cool that you can do a lot of things to a GUI through a CLI and all those things but at the end of the day for you know any",
    "start": "1877020",
    "end": "1884100"
  },
  {
    "text": "any sort of production system you want to make sure you have that audit trail and as mentioned earlier we sort of call",
    "start": "1884100",
    "end": "1890429"
  },
  {
    "text": "this inheritance we built this into the tool we don't want to repeat ourselves this is sort of like the configuration",
    "start": "1890429",
    "end": "1895710"
  },
  {
    "text": "changes and also anything that you know repeats itself because as you build all",
    "start": "1895710",
    "end": "1900750"
  },
  {
    "text": "these different micro services you're gonna have a lot of things like hey I'm gonna use this subnet you know I'm gonna",
    "start": "1900750",
    "end": "1905760"
  },
  {
    "text": "use these configuration settings I mean use a security group it gets really tedious and also increases your",
    "start": "1905760",
    "end": "1912110"
  },
  {
    "text": "potential for messing up and fat fingering is something if you have the same copy and paste across the board and",
    "start": "1912110",
    "end": "1917700"
  },
  {
    "text": "it's gonna be really hard and you can either ride a different tool that's sort of diffs everything on like a wholesale",
    "start": "1917700",
    "end": "1923580"
  },
  {
    "text": "level but then you end but that same like 180 mm line codebase we're really trying to keep things",
    "start": "1923580",
    "end": "1929279"
  },
  {
    "text": "simple and we really want to repeat ourselves we want to just keep it as small as possible so there's some",
    "start": "1929279",
    "end": "1936659"
  },
  {
    "text": "gotchas if you are a toll factor app environment variables are configuration",
    "start": "1936659",
    "end": "1942120"
  },
  {
    "text": "what's nice about it is lots of these types of courses off the bat you can use this really well but what's sort of",
    "start": "1942120",
    "end": "1949259"
  },
  {
    "text": "scary is if you store all of this and get this is a really bad thing right like we use github so at the end of the",
    "start": "1949259",
    "end": "1955620"
  },
  {
    "text": "day comes a really big organization but whenever you farm out something to somebody else you want to sort of treat",
    "start": "1955620",
    "end": "1961289"
  },
  {
    "text": "it with a little bit of distrust right let's say they get hacked and then all the code bases everywhere at the end of",
    "start": "1961289",
    "end": "1966750"
  },
  {
    "text": "the day you don't want your database connection strings and all your secrets to be out and we could have used",
    "start": "1966750",
    "end": "1972360"
  },
  {
    "text": "something a little more heavy-handed like Amazon's like secrets manager but we decided not to because at the end of",
    "start": "1972360",
    "end": "1979409"
  },
  {
    "text": "the day all the stuff lives on the lives on the last being some gooey so we",
    "start": "1979409",
    "end": "1984960"
  },
  {
    "text": "didn't want to do that so what we actually ended up doing is we encrypted them this way at least in GUID it's not",
    "start": "1984960",
    "end": "1991019"
  },
  {
    "text": "stored but stored in plain text and what's really important also is don't repeat yourself right we sort of went",
    "start": "1991019",
    "end": "1997139"
  },
  {
    "text": "into this a little bit the big things we sort of broke out to not repeat ourselves or like common configs like if",
    "start": "1997139",
    "end": "2002149"
  },
  {
    "text": "you're in staging you're in production you're gonna use different subnets and different v pcs if you have app specific",
    "start": "2002149",
    "end": "2008210"
  },
  {
    "text": "things such as like s3 X is like I am instance profile you want to sort of group those together because you know a",
    "start": "2008210",
    "end": "2015110"
  },
  {
    "text": "cluster of apps are probably gonna need the same permissions you don't need to create a bunch of different profiles for every single micro service like if it's",
    "start": "2015110",
    "end": "2020360"
  },
  {
    "text": "a cluster of stuff together to share a lot of similar things like they need to talk to each other for example like a lot of things you have the same security",
    "start": "2020360",
    "end": "2026330"
  },
  {
    "text": "group and you don't need to repeat yourself a lot of times and then at the very end you sort of choose like",
    "start": "2026330",
    "end": "2031549"
  },
  {
    "text": "environment specific things like if you have an SSL cert for this endpoint that you wanted to use you can state that but",
    "start": "2031549",
    "end": "2037429"
  },
  {
    "text": "you don't have to actually have that all the way up so all the things that are",
    "start": "2037429",
    "end": "2043460"
  },
  {
    "text": "like special snowflake things like let's say I am part of this group but I also need to add this security group or something else at the very very end you",
    "start": "2043460",
    "end": "2050148"
  },
  {
    "text": "can always override anything that is sort of inherited and that takes precedence over",
    "start": "2050149",
    "end": "2055399"
  },
  {
    "text": "and what's nice about this is you end up with a much shorter blueprint and sort of like your configuration is and you",
    "start": "2055400",
    "end": "2060740"
  },
  {
    "text": "know bloated and you're not copy and pasting the same code hundreds of times and the tooling actually compiles and",
    "start": "2060740",
    "end": "2066050"
  },
  {
    "text": "ships all of this via the API you can get the dry run all this features and so where we sort of come from is building",
    "start": "2066050",
    "end": "2072320"
  },
  {
    "text": "tools that improve the life of a developer and anybody working in our organization versus you know",
    "start": "2072320",
    "end": "2077690"
  },
  {
    "text": "firefighting and managing this tool that really were the only customers for right at the end of the day as DevOps",
    "start": "2077690",
    "end": "2083330"
  },
  {
    "text": "engineers our customers sit right next to us and you want them to be successful what do you do you create tooling for them and so this is this would not have",
    "start": "2083330",
    "end": "2090260"
  },
  {
    "text": "been possible if we're fighting fires and still managing all the different components by ourselves the last piece are sort of allowed us to",
    "start": "2090260",
    "end": "2096350"
  },
  {
    "text": "do less of the deployment and you know provisioning aspect and sort of build",
    "start": "2096350",
    "end": "2101870"
  },
  {
    "text": "more on you know custom tooling that makes sense for our organization so real",
    "start": "2101870",
    "end": "2108830"
  },
  {
    "start": "2106000",
    "end": "2214000"
  },
  {
    "text": "quick we're going to go through you know the decision tree process of making a blueprint as I sort of mentioned earlier",
    "start": "2108830",
    "end": "2115820"
  },
  {
    "text": "you know you're gonna be in production are you gonna be in staging a lot of times it's like VPC subnets some custom",
    "start": "2115820",
    "end": "2122420"
  },
  {
    "text": "tags to make sure that like you're allocated to the right resource and then as you sort of go down you sort of you",
    "start": "2122420",
    "end": "2127760"
  },
  {
    "text": "know break up into these different groups of services so you have a cluster you know a lot of times the things that",
    "start": "2127760",
    "end": "2133730"
  },
  {
    "text": "are shared here like I am roles security groups once again some more tagging that",
    "start": "2133730",
    "end": "2138830"
  },
  {
    "text": "would probably be useful for you and then you know at the very end is that you have all your little micro services",
    "start": "2138830",
    "end": "2145190"
  },
  {
    "text": "and all your little apps you know environment variables tags SSL certs all",
    "start": "2145190",
    "end": "2150380"
  },
  {
    "text": "these can be overridden or and be stated at any stage of these so it's actually",
    "start": "2150380",
    "end": "2155540"
  },
  {
    "text": "really useful so for example let's say you you were create a really small micro service that was sort of part of like",
    "start": "2155540",
    "end": "2161450"
  },
  {
    "text": "cluster one and you really had no big changes your your blueprint could actually be just like one line or even",
    "start": "2161450",
    "end": "2168680"
  },
  {
    "text": "less you can get something running you can create an empty file and this will sort of take it and run this is really",
    "start": "2168680",
    "end": "2173870"
  },
  {
    "text": "cool we use it a lot and you know this is just to prevent people from making mistakes and just to make it like not",
    "start": "2173870",
    "end": "2180890"
  },
  {
    "text": "something really daunting like if I wanted to get an environment up and running let's say you're a new engineer and you wanted just like a small like a",
    "start": "2180890",
    "end": "2188250"
  },
  {
    "text": "small service that you wanted to run as part of your starter projects you can get up and running well under 10 minutes",
    "start": "2188250",
    "end": "2193710"
  },
  {
    "text": "you know you can copy a docker file create a new blueprint hit a few buttons and Jenkins you're ready to go this is",
    "start": "2193710",
    "end": "2199650"
  },
  {
    "text": "huge you know it took forever to get things before just cloning that database was twenty these are clone either get",
    "start": "2199650",
    "end": "2204960"
  },
  {
    "text": "was 23 seconds that's ridiculous we're moving so much faster now that we're able to build all this tooling to make",
    "start": "2204960",
    "end": "2211320"
  },
  {
    "text": "developer lives easier so we'll take a quick look this is a really compressed",
    "start": "2211320",
    "end": "2217470"
  },
  {
    "start": "2214000",
    "end": "2275000"
  },
  {
    "text": "version of what our blueprint look like if anybody's actually work with Amazon's elastic beans on API this should look",
    "start": "2217470",
    "end": "2223290"
  },
  {
    "text": "pretty familiar because these are just sort of a response we write everything and go so a lot of this was a direct",
    "start": "2223290",
    "end": "2229260"
  },
  {
    "text": "port of the struct once we read this in Yambol we'll get this all as a struct and so the very very top red stuff there",
    "start": "2229260",
    "end": "2236520"
  },
  {
    "text": "sort of like the application level things like a database connection string and like what role this app is the",
    "start": "2236520",
    "end": "2241980"
  },
  {
    "text": "cluster level things are in orange you know like what security group well I am instance profiles you're going to use and then the very last things are like",
    "start": "2241980",
    "end": "2248610"
  },
  {
    "text": "the common things that you know every app is gonna need and you don't want to be copying that across every micro service and every little thing that you",
    "start": "2248610",
    "end": "2254220"
  },
  {
    "text": "deploy so like your ELB health check so you know if you're in a staging environment which VPC etc so once again",
    "start": "2254220",
    "end": "2263940"
  },
  {
    "text": "these are really slightly great these are abbreviated but you pretty much get the point of why we wanted to do this",
    "start": "2263940",
    "end": "2269100"
  },
  {
    "text": "can you imagine like pages of this for every service it just doesn't scale so",
    "start": "2269100",
    "end": "2276180"
  },
  {
    "start": "2275000",
    "end": "2478000"
  },
  {
    "text": "one last thing I sort of want to cover is EB extensions at the end of the a",
    "start": "2276180",
    "end": "2281400"
  },
  {
    "text": "once again you own all your infrastructure and there's no way that Amazon's gonna know exactly what your",
    "start": "2281400",
    "end": "2287430"
  },
  {
    "text": "workload needs they're same defaults but a lot of times you want to be able to build something that scales you know so",
    "start": "2287430",
    "end": "2293510"
  },
  {
    "text": "we'll go over some of the ones that we use we tune our apps for higher concurrency so we actually go into sis",
    "start": "2293510",
    "end": "2298800"
  },
  {
    "text": "ETL and change like the match connections or network settings and how many connections we can actually open",
    "start": "2298800",
    "end": "2304650"
  },
  {
    "text": "and open file descriptors etc we actually install a local private doctor",
    "start": "2304650",
    "end": "2310740"
  },
  {
    "text": "registry I don't know how many people run their own registry but for us it made a lot of sense to sort of do this what we really do actually is we",
    "start": "2310740",
    "end": "2317220"
  },
  {
    "text": "take that docker binary and created our own up star job so we actually have a decentralized docker registry all we",
    "start": "2317220",
    "end": "2323520"
  },
  {
    "text": "really need is for s3 to be up so it's actually pretty cool at this point like we I don't know anybody who or who here",
    "start": "2323520",
    "end": "2330599"
  },
  {
    "text": "has actually used docker hub really really when they were really young anybody do you guys experience a lot of",
    "start": "2330599",
    "end": "2337230"
  },
  {
    "text": "downtime when that happened yeah this is sort of what pushed us toward doing this by creating this little service that",
    "start": "2337230",
    "end": "2343920"
  },
  {
    "text": "we're able to do we can actually you know decentralize that docker registry we actually just pull everything from s3",
    "start": "2343920",
    "end": "2349740"
  },
  {
    "text": "so as long as s3 is up we're good we also install their monitoring tools",
    "start": "2349740",
    "end": "2355260"
  },
  {
    "text": "though we actually use data dog a lot so the agent gets installed via this and we also install nginx tuning and course",
    "start": "2355260",
    "end": "2361530"
  },
  {
    "text": "settings so a lot of this is as we break up that base into a lot of different",
    "start": "2361530",
    "end": "2366960"
  },
  {
    "text": "disparate services we need to be able to do requests across different services",
    "start": "2366960",
    "end": "2372570"
  },
  {
    "text": "and you know all the apps run through nginx on the elastic Beanstalk with docker so we actually went through and",
    "start": "2372570",
    "end": "2378630"
  },
  {
    "text": "added all these courses via an ad extension and once again we install our",
    "start": "2378630",
    "end": "2383720"
  },
  {
    "text": "centralized logging we use file beet and an L stack so we ship all that off and we do that through a little Evie",
    "start": "2383720",
    "end": "2389880"
  },
  {
    "text": "extension that installs that little daemon and listens for it one thing to keep in mind about EB extensions is it's",
    "start": "2389880",
    "end": "2395760"
  },
  {
    "text": "not just system level stuff you can actually do a lot of cool things you can do custom cloud formation changes one",
    "start": "2395760",
    "end": "2402450"
  },
  {
    "text": "big thing that we had was a we were an early adopter of Amazon Web Services and what happened was we had to move all our",
    "start": "2402450",
    "end": "2409589"
  },
  {
    "text": "databases into a V PC so we could start using some of the newer instance sizes we did that first and what we also",
    "start": "2409589",
    "end": "2415619"
  },
  {
    "text": "noticed is hey we want classic lean to work for elastic Beanstalk but it wasn't a setting that you can actually directly",
    "start": "2415619",
    "end": "2422160"
  },
  {
    "text": "click so what we did is uh you can actually create an EB extension that will create a confirmation change and",
    "start": "2422160",
    "end": "2429210"
  },
  {
    "text": "for in our case this was to enable classic link but a lot of times it's as long as it's supported by our cloud",
    "start": "2429210",
    "end": "2436080"
  },
  {
    "text": "formation you can actually extend a lot of the functionality that isn't directly built in or exposed via their GUI this",
    "start": "2436080",
    "end": "2441660"
  },
  {
    "text": "is all still part of that same ecosystem that you can sort of customize as you need and one one tip is even though you",
    "start": "2441660",
    "end": "2449010"
  },
  {
    "text": "can do a lot of this through EB to do it at runtime the most efficient manner to do a lot of this is actually",
    "start": "2449010",
    "end": "2454950"
  },
  {
    "text": "to build that ami and you can actually state which am I want to use for what service it's something like a blueprint",
    "start": "2454950",
    "end": "2460410"
  },
  {
    "text": "this is really useful because then you're not actually tuning your service and you know you get your deploy times",
    "start": "2460410",
    "end": "2466650"
  },
  {
    "text": "down you can't build conformation changes into it so you still have to use EP extensions to some extent but it is",
    "start": "2466650",
    "end": "2473040"
  },
  {
    "text": "pretty useful when you want to go to production to build us into an ami that",
    "start": "2473040",
    "end": "2480089"
  },
  {
    "start": "2478000",
    "end": "2576000"
  },
  {
    "text": "means said we'll talk a little bit about you know the before and after and we have a V PC migration task that you know",
    "start": "2480089",
    "end": "2486690"
  },
  {
    "text": "we had to do we had a lot of Micra so we actually went micro services first and then did our V PC migrations which you know sort of shot ourselves in the foot",
    "start": "2486690",
    "end": "2492540"
  },
  {
    "text": "a little bit because now you know we have all these different services we needed to migrate over to the V PC but",
    "start": "2492540",
    "end": "2499020"
  },
  {
    "text": "it also lends itself to a really really good discussion right we can actually do a real comparison because we haven't completely killed a monolith so we had",
    "start": "2499020",
    "end": "2507089"
  },
  {
    "text": "to migrate those as well so my idea the legacy apps it took to engineering days like to retool a lot of the things",
    "start": "2507089",
    "end": "2513240"
  },
  {
    "text": "rewrite the cloud formation templates update the tooling and then add some flags to maintain backwards",
    "start": "2513240",
    "end": "2518819"
  },
  {
    "text": "compatibility because we were doing this piecemeal we weren't shipping all our things at once we had to make sure to totally still worked we wanted to update",
    "start": "2518819",
    "end": "2523829"
  },
  {
    "text": "something that was old we had to do a lot of extensive regression testing so",
    "start": "2523829",
    "end": "2529130"
  },
  {
    "text": "two days that that's a long time so from migrating elastic Beanstalk apps this",
    "start": "2529130",
    "end": "2535680"
  },
  {
    "text": "was 30 minutes and all it really was was reading a lot of documentation about",
    "start": "2535680",
    "end": "2541410"
  },
  {
    "text": "what I needed to change and it was five lines of blueprints you just add a V PC parameters so by leveraging a lot of",
    "start": "2541410",
    "end": "2548250"
  },
  {
    "text": "Amazon or AWS specific infrastructure you can see that it plays really well within that ecosystem without having to",
    "start": "2548250",
    "end": "2554430"
  },
  {
    "text": "you know use too much of the API and everything and just leverage what you can so this is literally what we had to",
    "start": "2554430",
    "end": "2563910"
  },
  {
    "text": "do to migrate our apps to V PC state that we wanted to which V PC we're going to what subnets",
    "start": "2563910",
    "end": "2570119"
  },
  {
    "text": "and then what ELB subnets to use that's it",
    "start": "2570119",
    "end": "2575000"
  },
  {
    "start": "2576000",
    "end": "2674000"
  },
  {
    "text": "so here's some comparison by numbers just to sort of show you like how far we've come by doing this so I keep",
    "start": "2577450",
    "end": "2586599"
  },
  {
    "text": "harping on this number one hundred eighty two thousand eight hundred eighty sometimes code it's a lot and we're not",
    "start": "2586599",
    "end": "2593140"
  },
  {
    "text": "completely off of it yet but I can't wait for that day because just blueprints like they accomplish the same tasks just blueprints is four thousand",
    "start": "2593140",
    "end": "2600520"
  },
  {
    "text": "lines you know four thousand just a shade under forty two hundred are deployed times on average thirty five",
    "start": "2600520",
    "end": "2606970"
  },
  {
    "text": "minutes for the old stuff because of the chef run the ami building like rolling them out waiting for health checks to",
    "start": "2606970",
    "end": "2612790"
  },
  {
    "text": "pass that's about 35 minutes in elastic Beanstalk it's about twenty minutes",
    "start": "2612790",
    "end": "2618970"
  },
  {
    "text": "a lot of this is like building the repo shipping it out or building the docker image shipping that out but actually we",
    "start": "2618970",
    "end": "2624670"
  },
  {
    "text": "do immutable deploys because one of the things is we wanted to bring up a whole new fleet in case something like this is a really cool feature it's relatively",
    "start": "2624670",
    "end": "2631240"
  },
  {
    "text": "new but it'll bring up a whole new set of instances in a new auto scaling group and those pass the health checks it will",
    "start": "2631240",
    "end": "2637569"
  },
  {
    "text": "slowly ramp up it'll actually just launch one instance test it if it looks good it won't launch all the rest that's actually why it's twenty if we're really",
    "start": "2637569",
    "end": "2644500"
  },
  {
    "text": "really good you want to streamline and you don't care you have a good process to do things you can actually get that down as low as three minutes but for us",
    "start": "2644500",
    "end": "2650170"
  },
  {
    "text": "it's about twenty so last thing to sort of look at tooling code so a lot of the",
    "start": "2650170",
    "end": "2656109"
  },
  {
    "text": "stuff such as like our custom tooling that went to the api's and then you know for us like what the blueprint stuff was",
    "start": "2656109",
    "end": "2662049"
  },
  {
    "text": "you know twelve thousand versus just a shade under 6,000 you know half the code that needs to be written that's",
    "start": "2662049",
    "end": "2667750"
  },
  {
    "text": "ridiculous right if you have this much less you can get so much more done and you're actually focusing on things that",
    "start": "2667750",
    "end": "2672760"
  },
  {
    "text": "matter this is huge for us so key takeaways um the numbers field is a lot",
    "start": "2672760",
    "end": "2678010"
  },
  {
    "start": "2674000",
    "end": "2716000"
  },
  {
    "text": "better but less co2 manage more infrastructure fast deployments with a multiple you options you don't need to",
    "start": "2678010",
    "end": "2684040"
  },
  {
    "text": "sort of build everything yourself and especially if you launch a parallel stack and use DNS or something else I",
    "start": "2684040",
    "end": "2689200"
  },
  {
    "text": "get a load balancer on your own and sort of do it you can make it even faster for us it wasn't as important but it's definitely doable and you don't have to",
    "start": "2689200",
    "end": "2696099"
  },
  {
    "text": "worry as much about it a lot less cooling required you know we leverage Amazon is rich API ecosystem we love",
    "start": "2696099",
    "end": "2704109"
  },
  {
    "text": "amazon's api we try to do everything we can through an api not like a lot of times you just at the end",
    "start": "2704109",
    "end": "2709309"
  },
  {
    "text": "of the day when you're clicking around in the console you're actually just calling the API through something else that's sort of given to you so I've",
    "start": "2709309",
    "end": "2718099"
  },
  {
    "start": "2716000",
    "end": "2819000"
  },
  {
    "text": "talked a lot I want to sort of show you that there's no live demo today but I",
    "start": "2718099",
    "end": "2723230"
  },
  {
    "text": "have on our github something you can clone and try this is a simple single",
    "start": "2723230",
    "end": "2730339"
  },
  {
    "text": "docker app it'll has an EB extension that kernel tune something for hide",
    "start": "2730339",
    "end": "2735710"
  },
  {
    "text": "network concurrency and this isn't our blueprints but this is more of what Amazon's config is so you can actually",
    "start": "2735710",
    "end": "2742039"
  },
  {
    "text": "look at it and use Amazon's tool directly you can see what we based off our our tool off of it isn't that",
    "start": "2742039",
    "end": "2747319"
  },
  {
    "text": "complicated to write yourself read the readme for a lot more details but you",
    "start": "2747319",
    "end": "2752569"
  },
  {
    "text": "should be up and running within five minutes it creates a little wire mock instance that allows you to sort of",
    "start": "2752569",
    "end": "2757839"
  },
  {
    "text": "respond on slash hello what we use with wire mock fors as we started moving toward all these different micro",
    "start": "2757839",
    "end": "2763849"
  },
  {
    "text": "services we wanted to be able to synthetically benchmark and know the service limits for all these different services because we wanted to know when",
    "start": "2763849",
    "end": "2769609"
  },
  {
    "text": "something was going to fall over when we needed to scale and whatnot so we use wire mop to actually mock out all the",
    "start": "2769609",
    "end": "2774920"
  },
  {
    "text": "dependent services so this is actually a really cool project to sort of take this and maybe this is your first elastic beanstalk app maybe not but you can",
    "start": "2774920",
    "end": "2780650"
  },
  {
    "text": "actually use this very useful within your engineering organization by like mocking out all the dependent calls and",
    "start": "2780650",
    "end": "2785809"
  },
  {
    "text": "then when you do a load test you know that like if I scale the elastic Beanstalk thing properly I know that",
    "start": "2785809",
    "end": "2791480"
  },
  {
    "text": "this app can do five thousand concurrent before falls over or something like that and that's really really useful because then you know that like if you can send",
    "start": "2791480",
    "end": "2797690"
  },
  {
    "text": "that to cloud watch you know that like around two or three thousand average you want to scale up and what's also cool is",
    "start": "2797690",
    "end": "2804319"
  },
  {
    "text": "what we've recently built as well is when we scale out what the main service we absolute scale all the dependent",
    "start": "2804319",
    "end": "2810349"
  },
  {
    "text": "services so you know why our mocks a really cool tool to sort of isolate what you need so yeah try for yourself",
    "start": "2810349",
    "end": "2818500"
  },
  {
    "start": "2819000",
    "end": "2925000"
  },
  {
    "text": "so where do we go from here you know today we're two monoliths and we're",
    "start": "2821290",
    "end": "2826510"
  },
  {
    "text": "actually up to twenty-six microservices that's not counting all the different staging environments integration environments this is we've come pretty",
    "start": "2826510",
    "end": "2833200"
  },
  {
    "text": "far and we're only growing we're gonna have more micro-services as we go the time to service online is actually down",
    "start": "2833200",
    "end": "2838630"
  },
  {
    "text": "more than 300% this is huge you know we don't want that baton to drop like this",
    "start": "2838630",
    "end": "2844870"
  },
  {
    "text": "is really really important that we you know that hand off is clean smooth and people can get going so a big takeaway is the elastic",
    "start": "2844870",
    "end": "2851290"
  },
  {
    "text": "beanstalk allows us to focus on the tooling and what's important for our business and not the firefighting though it's really hard to retain good ops",
    "start": "2851290",
    "end": "2858130"
  },
  {
    "text": "engineers if they're just firefighting all the time they're gonna get fed up and they're gonna you know move on so",
    "start": "2858130",
    "end": "2863560"
  },
  {
    "text": "tomorrow you know where we go from the future right we're gonna iterate on that tooling to continue to reduce that",
    "start": "2863560",
    "end": "2869350"
  },
  {
    "text": "barrier of entry we're pretty happy where we are but I mean there's always room for improvement I see a lot of cool things we can still do and what's nice",
    "start": "2869350",
    "end": "2876040"
  },
  {
    "text": "about this is we're now focusing on things that help us win some technologies we're keeping a close eye",
    "start": "2876040",
    "end": "2881170"
  },
  {
    "text": "on ECS right now as we mentioned we're using single docker images so we can figure out service limits and all that",
    "start": "2881170",
    "end": "2886480"
  },
  {
    "text": "stuff very clearly but ECS will really help us save on the spend side because as we get container density you know",
    "start": "2886480",
    "end": "2892660"
  },
  {
    "text": "we're gonna run all our instances harder because especially since we use elixir for a lot of our apps it's very high",
    "start": "2892660",
    "end": "2899020"
  },
  {
    "text": "concurrency very low CPU usage we can actually overload that machine more than we can actually throw enough load at it",
    "start": "2899020",
    "end": "2905250"
  },
  {
    "text": "so multi container lasts something's up which is based on ECS is also an option but I mean the Holy Grail as as you've",
    "start": "2905250",
    "end": "2911830"
  },
  {
    "text": "seen a lot through the keynotes and everything else you know server less where we don't run anything at all we manage just a software W lifecycle and",
    "start": "2911830",
    "end": "2917530"
  },
  {
    "text": "then we can just figure out how to get our apps running without running the servers so like lambda API gateway so",
    "start": "2917530",
    "end": "2926220"
  },
  {
    "start": "2925000",
    "end": "3013000"
  },
  {
    "text": "takeaways as I keep mentioning focus on what's important to help your business win that that's the biggest thing you",
    "start": "2926220",
    "end": "2932020"
  },
  {
    "text": "can do for your company ownership of infrastructure is really important but really manage only what you have to",
    "start": "2932020",
    "end": "2938160"
  },
  {
    "text": "stand on the shoulder of giants don't reinvent the wheel there's a lot of stuff that's out there just like you",
    "start": "2938160",
    "end": "2943540"
  },
  {
    "text": "wouldn't write your own Linux kernel you wouldn't write your own load balancer I mean go out and see if there's something out there it might not even necessarily",
    "start": "2943540",
    "end": "2949750"
  },
  {
    "text": "be Amazon just like Hoshi Corp has a bunch of things in that space as well you wouldn't write a lot of that stuff",
    "start": "2949750",
    "end": "2955840"
  },
  {
    "text": "make sure you go out and see what you have so identify your needs and address",
    "start": "2955840",
    "end": "2961270"
  },
  {
    "text": "those minimize situations that lead to bottlenecks so as you sort of go through this process you're gonna sort of see",
    "start": "2961270",
    "end": "2967030"
  },
  {
    "text": "that like certain parts of it are inefficient and that's when you actually need to focus on let's say you still are",
    "start": "2967030",
    "end": "2972160"
  },
  {
    "text": "on a monolith if there's other things that are more pressing like let's figure out what those bottlenecks are and scale those first and complexity is really",
    "start": "2972160",
    "end": "2979270"
  },
  {
    "text": "really bad monoliths lead the complexity but as you build your new micro-services you want",
    "start": "2979270",
    "end": "2985660"
  },
  {
    "text": "to make sure that you keep things simple and it's easy to digest and people are willing to you know adopt it because",
    "start": "2985660",
    "end": "2990670"
  },
  {
    "text": "it's easy and that's really all I have we are hiring if we do have some time",
    "start": "2990670",
    "end": "2998200"
  },
  {
    "text": "for Q&A so if you want you can come up to the podium or a microphone over there and you can ask a question",
    "start": "2998200",
    "end": "3005660"
  },
  {
    "text": "[Applause]",
    "start": "3008130",
    "end": "3015639"
  }
]