[
  {
    "text": "- It's essential to\nmaintain data consistency",
    "start": "120",
    "end": "2250"
  },
  {
    "text": "and design for failure",
    "start": "2250",
    "end": "3720"
  },
  {
    "text": "in your distributed\nmicroservice architectures.",
    "start": "3720",
    "end": "6840"
  },
  {
    "text": "Understanding how to\ndesign your transactions",
    "start": "6840",
    "end": "9120"
  },
  {
    "text": "so you can avoid partial transactions",
    "start": "9120",
    "end": "11280"
  },
  {
    "text": "while keeping your microservices\nintact is important",
    "start": "11280",
    "end": "14099"
  },
  {
    "text": "to avoiding the pitfalls\nand complexity over time.",
    "start": "14100",
    "end": "16863"
  },
  {
    "text": "A saga is defined as a\nsequence of local transactions",
    "start": "17700",
    "end": "21180"
  },
  {
    "text": "with each local transaction\ndoing some work,",
    "start": "21180",
    "end": "23250"
  },
  {
    "text": "like updating the database,",
    "start": "23250",
    "end": "25470"
  },
  {
    "text": "publishing a message or an event",
    "start": "25470",
    "end": "27420"
  },
  {
    "text": "to trigger the next local transaction.",
    "start": "27420",
    "end": "29790"
  },
  {
    "text": "In most cases, the whole\ntransaction runs successfully.",
    "start": "29790",
    "end": "33750"
  },
  {
    "text": "Sometimes, a failure happens",
    "start": "33750",
    "end": "35490"
  },
  {
    "text": "and it doesn't completely go through.",
    "start": "35490",
    "end": "37830"
  },
  {
    "text": "The saga pattern mentions",
    "start": "37830",
    "end": "39510"
  },
  {
    "text": "that in the case of a failure,",
    "start": "39510",
    "end": "41340"
  },
  {
    "text": "a set of compensating\ntransactions can be executed",
    "start": "41340",
    "end": "44370"
  },
  {
    "text": "to undo the changes that were made",
    "start": "44370",
    "end": "46020"
  },
  {
    "text": "by the preceding local transactions.",
    "start": "46020",
    "end": "48240"
  },
  {
    "text": "If any of the steps in the\ndistributed transaction fail,",
    "start": "48240",
    "end": "51930"
  },
  {
    "text": "you can revert it back through\ncompensating transactions.",
    "start": "51930",
    "end": "54780"
  },
  {
    "text": "The saga pattern is a way to manage",
    "start": "54780",
    "end": "57629"
  },
  {
    "text": "and mitigate transaction failures.",
    "start": "57630",
    "end": "60003"
  }
]