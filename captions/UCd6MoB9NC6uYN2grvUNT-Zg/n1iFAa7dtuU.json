[
  {
    "start": "0",
    "end": "112000"
  },
  {
    "text": "all right good morning everybody my name is Peter O'Donnell I'm the dedicated Solutions Architect for",
    "start": "260",
    "end": "6690"
  },
  {
    "text": "Capital One I've been working with Capital One for about a little more than the last two years and they're an extraordinary customer it's really been",
    "start": "6690",
    "end": "12630"
  },
  {
    "text": "a privilege to support them on their journey this morning we're going to talk to you about managed directory services",
    "start": "12630",
    "end": "17850"
  },
  {
    "text": "in the cloud how to solve for complex secure critical resources using our",
    "start": "17850",
    "end": "24420"
  },
  {
    "text": "managed services and what's and you're gonna hear from our Capital One engineers my friends here kuntala Mitra",
    "start": "24420",
    "end": "30029"
  },
  {
    "text": "and Katie hill who've been working on deploying at scale and getting to",
    "start": "30029",
    "end": "35579"
  },
  {
    "text": "genuine automation to take some of the heavy lifting out of it to be able to deploy manage directory into the V pcs",
    "start": "35579",
    "end": "42930"
  },
  {
    "text": "across Capital One that allows them to integrate with some of our services like RDS sequel server provides",
    "start": "42930",
    "end": "49079"
  },
  {
    "text": "authentication for Amazon connect and also serves as their directory and services authentication for user login",
    "start": "49079",
    "end": "55680"
  },
  {
    "text": "across their platform they've done a lot of really clever work to make this deployable scalable and automated to not",
    "start": "55680",
    "end": "64170"
  },
  {
    "text": "only meet their kind of technical requirements but also meet their stakeholders requirements for security and encryption and authentication across",
    "start": "64170",
    "end": "71520"
  },
  {
    "text": "the cloud so you really get into it and tell you all about how they've delivered technologies for managing directory in",
    "start": "71520",
    "end": "77820"
  },
  {
    "text": "the cloud let me introduce you to my friend Kenny Hill jiff",
    "start": "77820",
    "end": "82700"
  },
  {
    "text": "hi guys doing my name is Kenny Oh Capital One I'm in the identity access",
    "start": "84620",
    "end": "90270"
  },
  {
    "text": "management organization I lead a team of directory services engineers I've been",
    "start": "90270",
    "end": "95490"
  },
  {
    "text": "doing I didn't mean directory type work for near 20 years the name my main focus",
    "start": "95490",
    "end": "102510"
  },
  {
    "text": "is moving directories into the cloud specifically AWS and privileged access",
    "start": "102510",
    "end": "107520"
  },
  {
    "text": "management today we're going to touch on a little bit of both of those if good",
    "start": "107520",
    "end": "113040"
  },
  {
    "start": "112000",
    "end": "246000"
  },
  {
    "text": "morning everyone hope you learned a great start to reinvent my name is Quinton Mitra I work on the public cloud",
    "start": "113040",
    "end": "119970"
  },
  {
    "text": "engineering team at Capital One and my main area of focus is cloud security and",
    "start": "119970",
    "end": "125570"
  },
  {
    "text": "automation handing it back to Kenny",
    "start": "125570",
    "end": "131179"
  },
  {
    "text": "your nose hear it",
    "start": "174370",
    "end": "178959"
  },
  {
    "text": "- I'll get started from here we'll kick",
    "start": "221000",
    "end": "228360"
  },
  {
    "text": "the slides going",
    "start": "228360",
    "end": "230930"
  },
  {
    "text": "so we had a need to a capital one to utilize RDS sequel databases and we have",
    "start": "245740",
    "end": "255950"
  },
  {
    "text": "many AWS accounts and with multiple V pcs oh we want to use for identity",
    "start": "255950",
    "end": "263660"
  },
  {
    "text": "access management best practices our Active Directory groups this gives us the ability to use our central",
    "start": "263660",
    "end": "269810"
  },
  {
    "text": "provisioning system which if somebody was to leave the company to remove the",
    "start": "269810",
    "end": "275480"
  },
  {
    "text": "right to be a provisioning if someone switched roles our provisioning system takes care of that in order to do this",
    "start": "275480",
    "end": "281570"
  },
  {
    "text": "in with four RDS sequel you need to have Active Directory or AWS Microsoft Active",
    "start": "281570",
    "end": "289520"
  },
  {
    "text": "Directory the and our first initial response was go ahead we put the main",
    "start": "289520",
    "end": "295730"
  },
  {
    "text": "controllers in AWS we're hosting money C to go ahead and enjoin them but that's",
    "start": "295730",
    "end": "301250"
  },
  {
    "text": "not how it works and we understand so RDS runs on AWS managed ec2 s and if",
    "start": "301250",
    "end": "309590"
  },
  {
    "text": "they were to join our corporate domain policies would apply I mean admins would be used added domain users and Amazon",
    "start": "309590",
    "end": "317780"
  },
  {
    "text": "couldn't offer their awesome I think almost 100% uptime for that so you",
    "start": "317780",
    "end": "325160"
  },
  {
    "text": "utilize AWS Microsoft ad which also the CTS are managed by Amazon the end",
    "start": "325160",
    "end": "336430"
  },
  {
    "text": "just working off the slides here it's up so we determine that first we started",
    "start": "346960",
    "end": "357759"
  },
  {
    "text": "building a handful of the AWS managed ADEs ourselves we work through all the nuances of getting everything figured",
    "start": "357759",
    "end": "365650"
  },
  {
    "text": "out tweak to our environment that's a little bit about what we're gonna talk about today he it's oh we started",
    "start": "365650",
    "end": "376449"
  },
  {
    "text": "meeting with our cloud team and kun tells on our cloud team and our first",
    "start": "376449",
    "end": "382680"
  },
  {
    "text": "response was hey we can automate this go ahead and we've automated building",
    "start": "383250",
    "end": "390550"
  },
  {
    "text": "domain controllers in Active Directory we can automate building out the AWS",
    "start": "390550",
    "end": "395650"
  },
  {
    "text": "Microsoft ad amazon offers all kinds of api's that multiple languages and we",
    "start": "395650",
    "end": "402099"
  },
  {
    "text": "were gonna try to use PowerShell so we met with our our cloud team and we said hey yeah we're gonna need you to give us",
    "start": "402099",
    "end": "409300"
  },
  {
    "text": "I am access into all of our lines of business accounts and to build directory",
    "start": "409300",
    "end": "415180"
  },
  {
    "text": "services it's had no problem that was okay and then there we said we also need",
    "start": "415180",
    "end": "421419"
  },
  {
    "text": "de the ability to modify security groups so when you spin up an AWS Microsoft ad",
    "start": "421419",
    "end": "428380"
  },
  {
    "text": "it automatically creates a security group and what that security group does is it has so you define two subnets and",
    "start": "428380",
    "end": "436870"
  },
  {
    "start": "435000",
    "end": "685000"
  },
  {
    "text": "then it's going to kind of combine the two subnets and create a rule rules in between those those don't actually",
    "start": "436870",
    "end": "443620"
  },
  {
    "text": "communicate though with your enterprise directory okay okay but now we have some slides awesome feel a little bit better",
    "start": "443620",
    "end": "453690"
  },
  {
    "text": "so our cloud team said no we're not going to give you rights to manage this",
    "start": "454949",
    "end": "461710"
  },
  {
    "text": "security groups and that makes sense and we understand it so security groups there we we treat them a Capital One as",
    "start": "461710",
    "end": "467770"
  },
  {
    "text": "an application firewall barrier so we ensure that applications can only",
    "start": "467770",
    "end": "472930"
  },
  {
    "text": "ingress egress communicate with what exactly what they need to so giving out these right",
    "start": "472930",
    "end": "478300"
  },
  {
    "text": "would kind of be like cloud team giving out one of their keys to their castle B",
    "start": "478300",
    "end": "486690"
  },
  {
    "text": "so we did our next meeting a week later to figure out how we were going to",
    "start": "486690",
    "end": "491800"
  },
  {
    "text": "deploy deploy it across all of our V pcs and the cloud team said hey we can",
    "start": "491800",
    "end": "498310"
  },
  {
    "text": "automate this for you guys just you need to give us the ability to create",
    "start": "498310",
    "end": "505479"
  },
  {
    "text": "incoming trusts and all right service now and not because they said no the week before it was as as far as I've",
    "start": "505479",
    "end": "513159"
  },
  {
    "text": "been any access management we need to be able to understand exactly where all",
    "start": "513159",
    "end": "518620"
  },
  {
    "text": "users or groups are going to be used for auditing being a financial institute",
    "start": "518620",
    "end": "523839"
  },
  {
    "text": "we're heavily heavily regulated we go through lots of audits and so we need to",
    "start": "523839",
    "end": "528940"
  },
  {
    "text": "be able to find and you're not gonna actually know exactly where groups used unless you do the audit but at least",
    "start": "528940",
    "end": "534279"
  },
  {
    "text": "knowing you know needle in the haystack which field do you are you gonna look in for it and don't get me wrong I started",
    "start": "534279",
    "end": "541600"
  },
  {
    "text": "picturing some agile names of directories and how is it gonna explain to my boss how we had maybe fuzzy bunny",
    "start": "541600",
    "end": "548320"
  },
  {
    "text": "trusting our enterprise directory so the big question we had is how do we create",
    "start": "548320",
    "end": "554470"
  },
  {
    "text": "secure and Minister AWS Microsoft Active Directory given the segregation of",
    "start": "554470",
    "end": "561339"
  },
  {
    "text": "duties oh we have the Active Directory",
    "start": "561339",
    "end": "566500"
  },
  {
    "text": "account where we currently host 82 main",
    "start": "566500",
    "end": "571750"
  },
  {
    "text": "controllers oh this is where it's it's very secure and this is where we have",
    "start": "571750",
    "end": "578950"
  },
  {
    "text": "our enterprise domain controllers running on ec2 we then have a secure",
    "start": "578950",
    "end": "585760"
  },
  {
    "text": "public cloud account and this is where our cloud team manages most of their automation and then we have all of our",
    "start": "585760",
    "end": "593380"
  },
  {
    "text": "line lines of business accounts lines of business accounts this is where we were",
    "start": "593380",
    "end": "598570"
  },
  {
    "text": "going to deploy RDS sequel and this is where we need to build the AWS managed",
    "start": "598570",
    "end": "604120"
  },
  {
    "text": "at Hades though our experience building",
    "start": "604120",
    "end": "610570"
  },
  {
    "text": "out a few of these man the deployments were going to be pretty",
    "start": "610570",
    "end": "615860"
  },
  {
    "text": "complex so it's there were lots of little things too that we had to tweak",
    "start": "615860",
    "end": "621710"
  },
  {
    "text": "and modify to to make them work we also",
    "start": "621710",
    "end": "626720"
  },
  {
    "text": "knew we needed to fully automate it though amazon offers snap snap shots so",
    "start": "626720",
    "end": "633800"
  },
  {
    "text": "you can you can restore the directory right on top of that we want additional insurance so part of our disaster",
    "start": "633800",
    "end": "639920"
  },
  {
    "text": "recovery plan is we'd spend to spin up another directory if we absolutely had",
    "start": "639920",
    "end": "644960"
  },
  {
    "text": "to and we tested out migrating RDS sequel databases from one directory to",
    "start": "644960",
    "end": "651920"
  },
  {
    "text": "another and it's pretty seamless it doesn't it takes a few minutes you easily change them and then even all the",
    "start": "651920",
    "end": "658790"
  },
  {
    "text": "groups and users stay in so we worked",
    "start": "658790",
    "end": "664400"
  },
  {
    "text": "with Amazon our AWS account team the",
    "start": "664400",
    "end": "669770"
  },
  {
    "text": "directory service team if you're at how we're going to do this and we came up",
    "start": "669770",
    "end": "676370"
  },
  {
    "text": "with an approach of using a WR i am roles and lamda step functions we'd",
    "start": "676370",
    "end": "689480"
  },
  {
    "start": "685000",
    "end": "988000"
  },
  {
    "text": "start with an ec2 instance sitting in the AWS ad account we'd have the step",
    "start": "689480",
    "end": "695120"
  },
  {
    "text": "functions and a few other lambda functions sitting in the public cloud account and then we build the AWS",
    "start": "695120",
    "end": "702290"
  },
  {
    "text": "managed AEDs in the lines business accounts o we'd spin up the ec2 and that",
    "start": "702290",
    "end": "710150"
  },
  {
    "text": "would have the automation that goes ahead and initiates the build this would",
    "start": "710150",
    "end": "715820"
  },
  {
    "text": "assume a role in the in the pub and the cloud account goon so we'll get into",
    "start": "715820",
    "end": "721940"
  },
  {
    "text": "more details on exactly how that works and though that role only has right to run the step functions or the lambda",
    "start": "721940",
    "end": "729260"
  },
  {
    "text": "functions and then the step functions themselves have right assume another",
    "start": "729260",
    "end": "736250"
  },
  {
    "text": "role into the line of business account that's able to build the directory and do do a few other things so back to that",
    "start": "736250",
    "end": "743330"
  },
  {
    "text": "no you can't modify security groups this is how we get around that well so",
    "start": "743330",
    "end": "751310"
  },
  {
    "text": "we first call call the step functions and they'd go through a list of",
    "start": "751310",
    "end": "757399"
  },
  {
    "text": "different things that we were able to do all and more in one step and kintel is gonna go into more details with this",
    "start": "757399",
    "end": "766190"
  },
  {
    "text": "configuration this allowed the cloud team to know that they weren't giving out too many rights they everything's",
    "start": "766190",
    "end": "772970"
  },
  {
    "text": "secure and allows the directory services team to build when and where they need",
    "start": "772970",
    "end": "778430"
  },
  {
    "text": "to following their naming standards ensuring we're auditing those directories there's an additional",
    "start": "778430",
    "end": "785570"
  },
  {
    "text": "challenge though so we have with VPC pairing and the some of some of the",
    "start": "785570",
    "end": "793160"
  },
  {
    "text": "limitations we also we need to be able to discover the directory and we're",
    "start": "793160",
    "end": "804320"
  },
  {
    "text": "utilizing the if you follow the document that Amazon has posted it's gonna tell",
    "start": "804320",
    "end": "810560"
  },
  {
    "text": "you to utilize conditional Florida sand and that's one approach and that works great for us the number of directories",
    "start": "810560",
    "end": "817790"
  },
  {
    "text": "that we were building it wasn't really feasible to use conditional for udders and it also added another step of",
    "start": "817790",
    "end": "824990"
  },
  {
    "text": "segregation of duties we'd have our whole network team we would need to deal with so we're we are creating our",
    "start": "824990",
    "end": "832010"
  },
  {
    "text": "records in route 53 for the for the AWS managed to ad so it's there's a handful",
    "start": "832010",
    "end": "839660"
  },
  {
    "text": "of a records that in SRV records that you need to create it's key to have the",
    "start": "839660",
    "end": "845510"
  },
  {
    "text": "records or you're not gonna be able to build the trust and this is how we got",
    "start": "845510",
    "end": "851089"
  },
  {
    "text": "around using conditional foreigners oh but first the first thing we need to do is though we need to discover the",
    "start": "851089",
    "end": "858140"
  },
  {
    "text": "directory from our ad account we have a read-only role that allows us access to",
    "start": "858140",
    "end": "866899"
  },
  {
    "text": "directories inside the line it's a business account we go and we just discover the directory and then we can",
    "start": "866899",
    "end": "874790"
  },
  {
    "text": "do whatever you want to call it nslookup dig get DNS hostname we have to get the",
    "start": "874790",
    "end": "883250"
  },
  {
    "text": "actual names of the domain controllers that were spun up for AWS managed ad and",
    "start": "883250",
    "end": "888880"
  },
  {
    "text": "depending on if we're going to prod or get a dev or QA downstream we may build",
    "start": "888880",
    "end": "896540"
  },
  {
    "text": "more so Amazon released the awesome feature handful of months ago originally",
    "start": "896540",
    "end": "901580"
  },
  {
    "text": "it was you could have two domain controllers now makes a soft limit of up to 20 so if you want more resiliency you",
    "start": "901580",
    "end": "909350"
  },
  {
    "text": "can throw five 10 at it for this step we'd have to repeat it multiple times we",
    "start": "909350",
    "end": "916370"
  },
  {
    "text": "then call a using the same role we had another lambda function or that goes",
    "start": "916370",
    "end": "923270"
  },
  {
    "text": "ahead and creates the the route 53 records now that the records are created",
    "start": "923270",
    "end": "932180"
  },
  {
    "text": "were able to resolve the directory so we're able to on our incoming our",
    "start": "932180",
    "end": "937490"
  },
  {
    "text": "enterprise directories were able to determine we can see the directory you",
    "start": "937490",
    "end": "942920"
  },
  {
    "text": "can build a forest raw so we build one-way incoming forest rust next we'd",
    "start": "942920",
    "end": "950600"
  },
  {
    "text": "call another lambda function in public cloud or the cloud our cloud secure",
    "start": "950600",
    "end": "957590"
  },
  {
    "text": "account which builds a trust is where your past conditional I pass your DNS",
    "start": "957590",
    "end": "966400"
  },
  {
    "text": "yeah your DNS server names also finally where we then need to rename the default",
    "start": "966400",
    "end": "974300"
  },
  {
    "text": "site I'll go into more details in a bit after kertel talks on why we're renaming",
    "start": "974300",
    "end": "979700"
  },
  {
    "text": "the default site and we think the figure groups also talked a little more about that and then validate with this I'd",
    "start": "979700",
    "end": "989750"
  },
  {
    "start": "988000",
    "end": "1440000"
  },
  {
    "text": "like to allow coontail to talk for a little while and explain more on the automation exactly how all this nuts and",
    "start": "989750",
    "end": "997250"
  },
  {
    "text": "bolts of how this works sure thanks so as Kenny explained we have automated",
    "start": "997250",
    "end": "1003270"
  },
  {
    "text": "our entire directory services set a process to a single click of a button so let's go through the details and see how",
    "start": "1003270",
    "end": "1010050"
  },
  {
    "text": "we achieve this end-to-end automation using server less architecture wherever possible now the first step in the",
    "start": "1010050",
    "end": "1017130"
  },
  {
    "text": "process is basically we have a PowerShell script deployed in an ad AWS account which are active directory",
    "start": "1017130",
    "end": "1023820"
  },
  {
    "text": "administrators can remotely invoke so once the PowerShell script is invoked by",
    "start": "1023820",
    "end": "1029699"
  },
  {
    "text": "our administrators it then assumes a role in a secure AWS account which then",
    "start": "1029700",
    "end": "1035699"
  },
  {
    "text": "triggers AWS step function which initiates the entire setup process one",
    "start": "1035700",
    "end": "1041670"
  },
  {
    "text": "of the reasons we went ahead with safe functions is it allows us to create complex business workflows by dividing",
    "start": "1041670",
    "end": "1048950"
  },
  {
    "text": "functionalities into steps and utilizing wet conditions decision branching and exception handling to",
    "start": "1048950",
    "end": "1057090"
  },
  {
    "text": "implement long-running processes now one of the most important things to note here is the usage of assumed role and",
    "start": "1057090",
    "end": "1063740"
  },
  {
    "text": "deployment of your cloud automation tools in a secure AWS account it not",
    "start": "1063740",
    "end": "1069870"
  },
  {
    "text": "only helps us to achieve segregation of duties but it also helps us to secure our automation workloads and our cloud",
    "start": "1069870",
    "end": "1076980"
  },
  {
    "text": "infrastructure the PowerShell script internally uses AWS instance profiles as",
    "start": "1076980",
    "end": "1084990"
  },
  {
    "text": "you know in order to invoke AWS api's we need credentials so PowerShell script is",
    "start": "1084990",
    "end": "1090690"
  },
  {
    "text": "tied to a AWS instance profile which then generates temporary credentials and then you can use those credentials to",
    "start": "1090690",
    "end": "1097680"
  },
  {
    "text": "invoke AWS api's now in order to create",
    "start": "1097680",
    "end": "1104580"
  },
  {
    "text": "and configure AWS manage my CRO soft active directory as we have seen that",
    "start": "1104580",
    "end": "1109590"
  },
  {
    "text": "the PowerShell script assumes a role in a secure AWS account and then it starts",
    "start": "1109590",
    "end": "1114750"
  },
  {
    "text": "the execution of a step function this step function handles all the complex",
    "start": "1114750",
    "end": "1119910"
  },
  {
    "text": "workflows involved in setting up the directory services like for example",
    "start": "1119910",
    "end": "1125300"
  },
  {
    "text": "creating AWS manage Microsoft Active Directory configuring monitoring it's",
    "start": "1125300",
    "end": "1131790"
  },
  {
    "text": "really important to monitor your direct trees and to notify stakeholders as and when your directory domain controllers",
    "start": "1131790",
    "end": "1138540"
  },
  {
    "text": "are down or your directory services start acting up next we need to update",
    "start": "1138540",
    "end": "1144500"
  },
  {
    "text": "discover and update our security groups the default security groups created by",
    "start": "1144500",
    "end": "1150060"
  },
  {
    "text": "AWS might not work in your environment as you might have some different network configuration so it's really important",
    "start": "1150060",
    "end": "1157020"
  },
  {
    "text": "to discover and update all this relevant security groups to make sure that you enable inbound outbound traffic",
    "start": "1157020",
    "end": "1163200"
  },
  {
    "text": "connections to establish connectivity next is to increase the domain",
    "start": "1163200",
    "end": "1169410"
  },
  {
    "text": "controllers now it's really important for your production workloads to be",
    "start": "1169410",
    "end": "1174840"
  },
  {
    "text": "highly available and reliable so it's really important to figure out what your",
    "start": "1174840",
    "end": "1180090"
  },
  {
    "text": "volume constraints are and based on that you can update your domain controllers",
    "start": "1180090",
    "end": "1185390"
  },
  {
    "text": "last but not the list is to create it around 53 record sense now this record",
    "start": "1185390",
    "end": "1191460"
  },
  {
    "text": "set is really required for establishing to a trust relationship between the AWS",
    "start": "1191460",
    "end": "1197070"
  },
  {
    "text": "manage active directory and your organization's active directory we'll see in a bit of why that press relations",
    "start": "1197070",
    "end": "1203550"
  },
  {
    "text": "is really important and just to mention",
    "start": "1203550",
    "end": "1210090"
  },
  {
    "text": "like it's really easy to automate the entire process because there are a",
    "start": "1210090",
    "end": "1215970"
  },
  {
    "text": "number of AWS api is available out there and you can use any programming language you want so it that really makes it easy",
    "start": "1215970",
    "end": "1223200"
  },
  {
    "text": "to automate stuff now once we have this",
    "start": "1223200",
    "end": "1228390"
  },
  {
    "text": "active directory set up we need to discover those directories and figure",
    "start": "1228390",
    "end": "1233820"
  },
  {
    "text": "out the number of domain controllers that are attached to those directories now why do we need to figure it out",
    "start": "1233820",
    "end": "1239600"
  },
  {
    "text": "because once the domain controllers are created they'll be assigned an IP and",
    "start": "1239600",
    "end": "1245220"
  },
  {
    "text": "based on the IP we need to figure out the hostname associated with it the",
    "start": "1245220",
    "end": "1250530"
  },
  {
    "text": "hostname is required for setting up the stress creating route 53 record sets so",
    "start": "1250530",
    "end": "1256290"
  },
  {
    "text": "what our PowerShell script does is it again assumes another role this time it",
    "start": "1256290",
    "end": "1261570"
  },
  {
    "text": "assumes a role in every lob account to gather domain controller I peace",
    "start": "1261570",
    "end": "1266919"
  },
  {
    "text": "once we have the list of IPs a PowerShell script will perform some",
    "start": "1266919",
    "end": "1272390"
  },
  {
    "text": "basic operations like resolve DNS name together to capture force names now",
    "start": "1272390",
    "end": "1278480"
  },
  {
    "text": "again one important thing to note here is your PowerShell script should really",
    "start": "1278480",
    "end": "1283850"
  },
  {
    "text": "be deployed in a V PC which is peer to every other V PC where your directory",
    "start": "1283850",
    "end": "1288950"
  },
  {
    "text": "exists the reason being you need to in order to perform resolve DNS resolution",
    "start": "1288950",
    "end": "1294860"
  },
  {
    "text": "you will need connectivity and unless your V pieces are appeared you won't be able to resolve those entries next with",
    "start": "1294860",
    "end": "1305270"
  },
  {
    "text": "these details in hand a our powershell script will once again invoke another",
    "start": "1305270",
    "end": "1310370"
  },
  {
    "text": "will assume another role this time in a secured AWS account and invoke a lambda",
    "start": "1310370",
    "end": "1316100"
  },
  {
    "text": "function which helps us to set up all the route 53 record sets now next is to",
    "start": "1316100",
    "end": "1326720"
  },
  {
    "text": "set up the trust relationship as I mentioned earlier the trust relationship is really important and in order to set",
    "start": "1326720",
    "end": "1333350"
  },
  {
    "text": "up the trust relationship we need to create an incoming trust as well as an outgoing trust between the AWS manage",
    "start": "1333350",
    "end": "1341000"
  },
  {
    "text": "active directory and your organization's active directory now the trust between",
    "start": "1341000",
    "end": "1348429"
  },
  {
    "text": "the trust from your organ from AWS manage Active Directory to your",
    "start": "1348429",
    "end": "1354470"
  },
  {
    "text": "organization's Active Directory is really important because it's the one that will allow you to use a single",
    "start": "1354470",
    "end": "1361159"
  },
  {
    "text": "sign-on authentication for RDS sequel instances by tying it back to your",
    "start": "1361159",
    "end": "1366799"
  },
  {
    "text": "primary domain which is there on your organization so you can use your internal users and groups to grant",
    "start": "1366799",
    "end": "1373850"
  },
  {
    "text": "access or deny access or modify access as and when people change different or",
    "start": "1373850",
    "end": "1379720"
  },
  {
    "text": "different work streams or new people get hired or existing people leave the",
    "start": "1379720",
    "end": "1385159"
  },
  {
    "text": "organization and again all of these like cross account assume role functionality",
    "start": "1385159",
    "end": "1392059"
  },
  {
    "text": "AWS step functions lambda makes a provides us a powerful way to organize",
    "start": "1392059",
    "end": "1399890"
  },
  {
    "text": "and deploy your automation tools in such a way that you don't have to maintain multiple",
    "start": "1399890",
    "end": "1405809"
  },
  {
    "text": "copies of it you can just deploy in one account and then execute across multiple",
    "start": "1405809",
    "end": "1411180"
  },
  {
    "text": "accounts to set up your directory services now at this stage your",
    "start": "1411180",
    "end": "1418830"
  },
  {
    "text": "directory services is completely set up it has all the basic requirements which are needed for it to be functional but",
    "start": "1418830",
    "end": "1426059"
  },
  {
    "text": "there are a couple of steps which are needed in order to optimize the",
    "start": "1426059",
    "end": "1431100"
  },
  {
    "text": "administration of this directory services so I am going to hand it back",
    "start": "1431100",
    "end": "1436260"
  },
  {
    "text": "to Kenny for him to finish the describing the final steps in the process some rewind a little bit a",
    "start": "1436260",
    "end": "1446160"
  },
  {
    "text": "little shuffle the how many guys are using AWS micromanaged ad today how",
    "start": "1446160",
    "end": "1452910"
  },
  {
    "text": "many guys are running to make controllers on ec2 okay",
    "start": "1452910",
    "end": "1458340"
  },
  {
    "text": "so a good mix probably more running Easter we're gonna have time for questions at",
    "start": "1458340",
    "end": "1464190"
  },
  {
    "text": "the end feel free to throw any of the questions on either either to us there's also a session a couple sessions on AWS",
    "start": "1464190",
    "end": "1472770"
  },
  {
    "text": "managed or it'll use Microsoft Active Directory that round up here is is presenting at alright so rename default",
    "start": "1472770",
    "end": "1483120"
  },
  {
    "start": "1481000",
    "end": "1562000"
  },
  {
    "text": "site any of you who are used to managing large enterprise directories multiple",
    "start": "1483120",
    "end": "1489590"
  },
  {
    "text": "forests even resource domains you probably go about Microsoft best",
    "start": "1489590",
    "end": "1497400"
  },
  {
    "text": "practice to ensure that your ad sites are the same to show to tell where",
    "start": "1497400",
    "end": "1504510"
  },
  {
    "text": "traffic should go so for us if at the scale we're operating with this it's",
    "start": "1504510",
    "end": "1510809"
  },
  {
    "text": "absolutely critical for us to keep any",
    "start": "1510809",
    "end": "1516080"
  },
  {
    "text": "authentication authorization which is occurring to AWS managed ad going to",
    "start": "1516080",
    "end": "1524700"
  },
  {
    "text": "domain controllers that we have hosted in aw if we lost Direct Connect this would",
    "start": "1524700",
    "end": "1530010"
  },
  {
    "text": "still our traffic would staff so it's the same thing we're domain joining both",
    "start": "1530010",
    "end": "1536430"
  },
  {
    "text": "Linux and Windows instances to to our enterprise directory and it's absolutely",
    "start": "1536430",
    "end": "1542100"
  },
  {
    "text": "critical that we keep we keep that traffic especially for an application",
    "start": "1542100",
    "end": "1547890"
  },
  {
    "text": "that's going to need to scale to stay so keeping having the site names the",
    "start": "1547890",
    "end": "1554190"
  },
  {
    "text": "same is very important for us on top of that I'm gonna explain more why we we",
    "start": "1554190",
    "end": "1564990"
  },
  {
    "start": "1562000",
    "end": "1660000"
  },
  {
    "text": "have multiple V pcs where the main car enterprise domain controllers are hosted",
    "start": "1564990",
    "end": "1570270"
  },
  {
    "text": "there's currently a hundred and twenty-five limit VP peering between V",
    "start": "1570270",
    "end": "1577230"
  },
  {
    "text": "pcs but a route table limit and heavy",
    "start": "1577230",
    "end": "1582240"
  },
  {
    "text": "recommendation not to increase by Amazon of a hundred so essentially you can have 100 V pcs",
    "start": "1582240",
    "end": "1589860"
  },
  {
    "text": "peared appeared to each other though in our ad account once you hit a hundred",
    "start": "1589860",
    "end": "1597060"
  },
  {
    "text": "what do you do you either stop domain joining or you build another V PC with two main controllers you hit another",
    "start": "1597060",
    "end": "1602520"
  },
  {
    "text": "hundred you build another one so that's where we're at we have we have over a",
    "start": "1602520",
    "end": "1607760"
  },
  {
    "text": "handful of different V pcs where we have domain controllers no specific order it",
    "start": "1607760",
    "end": "1613740"
  },
  {
    "text": "could be anywhere so it's really important for us to to first know so as",
    "start": "1613740",
    "end": "1619380"
  },
  {
    "text": "a new a WS account soon or V PC is created by our cloud team Active",
    "start": "1619380",
    "end": "1626760"
  },
  {
    "text": "Directory is part of that loop a subnet is created for the cider block of the V",
    "start": "1626760",
    "end": "1633150"
  },
  {
    "text": "PC and it's assigned to the ad site where the two peers are so in part of",
    "start": "1633150",
    "end": "1639900"
  },
  {
    "text": "our managed ad rollout we have to use that read-only line business account go",
    "start": "1639900",
    "end": "1645990"
  },
  {
    "text": "into the end discover the V PC and get the cider block more importantly so if",
    "start": "1645990",
    "end": "1651300"
  },
  {
    "text": "you use the slash 16 14 whatever whatever you guys have for your IP range",
    "start": "1651300",
    "end": "1657390"
  },
  {
    "text": "assigned to your VP these once we have that we can then do a",
    "start": "1657390",
    "end": "1662760"
  },
  {
    "start": "1660000",
    "end": "1700000"
  },
  {
    "text": "PowerShell command to discover the which",
    "start": "1662760",
    "end": "1668250"
  },
  {
    "text": "80 site it's assigned to and now that's where Kunta was talking about it's",
    "start": "1668250",
    "end": "1674470"
  },
  {
    "text": "important to run the automation in somewhere where you have network connectivity so if we have multiple for",
    "start": "1674470",
    "end": "1682990"
  },
  {
    "text": "us we have multiple V pcs we know ahead of time before we spin up that ec2",
    "start": "1682990",
    "end": "1688539"
  },
  {
    "text": "that's going to do this work we know that it's in it's coming from one of the",
    "start": "1688539",
    "end": "1693669"
  },
  {
    "text": "adb pcs which is peered o once we discover that sudden that then we can",
    "start": "1693669",
    "end": "1701679"
  },
  {
    "text": "just use a regular ad object rename command to rename the site to match at this point time any authentication that",
    "start": "1701679",
    "end": "1708070"
  },
  {
    "text": "comes to say an RDS data database will",
    "start": "1708070",
    "end": "1714929"
  },
  {
    "text": "go to AWS managed ad and then stay to",
    "start": "1714929",
    "end": "1720220"
  },
  {
    "text": "domain controllers that are hosted in AWS of course if those were down it would go elsewhere",
    "start": "1720220",
    "end": "1725650"
  },
  {
    "text": "chase referrals but the idea is to keep all the traffic there the the next part",
    "start": "1725650",
    "end": "1734530"
  },
  {
    "start": "1733000",
    "end": "1833000"
  },
  {
    "text": "and again I think any come this is really the case for any company not just",
    "start": "1734530",
    "end": "1741030"
  },
  {
    "text": "regulated financial institute is you need to be able to audit your your",
    "start": "1741030",
    "end": "1746169"
  },
  {
    "text": "domains o at this point we and manage them at this point where then the trust",
    "start": "1746169",
    "end": "1753789"
  },
  {
    "text": "was built we're able to utilize the AWS",
    "start": "1753789",
    "end": "1758860"
  },
  {
    "text": "managed ad but we need to ensure we're able to discover anything in there today our use",
    "start": "1758860",
    "end": "1765820"
  },
  {
    "text": "case is really light it's it's it's RDS we may use it utilize it for more future",
    "start": "1765820",
    "end": "1771370"
  },
  {
    "text": "so we want to make sure nothing extra is showing up in the directories that's not auto-created by RDS o this point we add",
    "start": "1771370",
    "end": "1780340"
  },
  {
    "text": "a few audit groups which have service accounts that are going to constantly",
    "start": "1780340",
    "end": "1785530"
  },
  {
    "text": "check what's in the domain and report on it has alerting that go off if if something's",
    "start": "1785530",
    "end": "1792050"
  },
  {
    "text": "created and it shouldn't be and we also want to be able to manage it we don't as",
    "start": "1792050",
    "end": "1798310"
  },
  {
    "text": "the whole premise behind doing this is so we're not managing local database",
    "start": "1798310",
    "end": "1804260"
  },
  {
    "text": "accounts for for RDS it's to utilize our enterprise directory and the same",
    "start": "1804260",
    "end": "1810830"
  },
  {
    "text": "concept goes for managing these directories is we want to ensure that our admins can use their privileged",
    "start": "1810830",
    "end": "1818450"
  },
  {
    "text": "account which we rotate the passwords every few hours on verse using a",
    "start": "1818450",
    "end": "1824500"
  },
  {
    "text": "stagnant account that sitting in the directory so this is where we add admin accounts and authentic audit groups then",
    "start": "1824500",
    "end": "1833810"
  },
  {
    "start": "1833000",
    "end": "1991000"
  },
  {
    "text": "we need to validate that everything is healthy with the domain we first so we have a list of PowerShell commands there",
    "start": "1833810",
    "end": "1840410"
  },
  {
    "text": "we're getting getting the domain controller list and this this is the",
    "start": "1840410",
    "end": "1846200"
  },
  {
    "text": "trigger that tells us as far as when when the report comes back or we're",
    "start": "1846200",
    "end": "1851750"
  },
  {
    "text": "going to audit it if we said build five domain controllers and only three show",
    "start": "1851750",
    "end": "1856940"
  },
  {
    "text": "up in the report someone needs to go take a look and see what's going on we",
    "start": "1856940",
    "end": "1862640"
  },
  {
    "text": "also are checking the Trust's and this would this one's cool because this is going to tell you if it failed and my",
    "start": "1862640",
    "end": "1870440"
  },
  {
    "text": "tip here is out of all this automation where you've run it a few hundred times this has been the trust part has been",
    "start": "1870440",
    "end": "1878480"
  },
  {
    "text": "where we've seen the most failures and this is due to we even though we have",
    "start": "1878480",
    "end": "1885170"
  },
  {
    "text": "the site renamed already but when we call the AWS API to build the trust it",
    "start": "1885170",
    "end": "1892010"
  },
  {
    "text": "could chase referral so that means by chase referrals I mean it's if you guys",
    "start": "1892010",
    "end": "1897740"
  },
  {
    "text": "are too familiar to us it's gonna pull back the list of DNS records and say it's going to start at the very first",
    "start": "1897740",
    "end": "1904010"
  },
  {
    "text": "one if you have your if you say you have your multiple regions and you don't have",
    "start": "1904010",
    "end": "1910940"
  },
  {
    "text": "access or you have firewalls or security groups aren't set up right then the",
    "start": "1910940",
    "end": "1917120"
  },
  {
    "text": "trust that the outgoing trust will fail and it doesn't feel that much I think",
    "start": "1917120",
    "end": "1923380"
  },
  {
    "text": "we're at about 50 and 85 percent success rate 15% but it's always been where if",
    "start": "1923380",
    "end": "1930490"
  },
  {
    "text": "we run it a couple more times then it will be successful so we have to you delete the the outgoing trusts you",
    "start": "1930490",
    "end": "1936640"
  },
  {
    "text": "recreate it and it's successful or we ended up having a firewall in the way",
    "start": "1936640",
    "end": "1941770"
  },
  {
    "text": "it's the next one is we're just doing a gap data directory this allows us to log",
    "start": "1941770",
    "end": "1948130"
  },
  {
    "text": "in and send off the the notification of the directory ID and all the important",
    "start": "1948130",
    "end": "1954310"
  },
  {
    "text": "information we then check the trust invalidate that our incoming trust is",
    "start": "1954310",
    "end": "1961540"
  },
  {
    "text": "good so we are building for our production we have a single trust but for our dev and QA environments we have",
    "start": "1961540",
    "end": "1970960"
  },
  {
    "text": "multiple trusts so we think you can you can build more of these and sometimes",
    "start": "1970960",
    "end": "1977040"
  },
  {
    "text": "you'll see where the one one successful one's not and it's usually it's almost",
    "start": "1977040",
    "end": "1982810"
  },
  {
    "text": "always Network related so that's really",
    "start": "1982810",
    "end": "1990060"
  },
  {
    "text": "it guys",
    "start": "1990060",
    "end": "1993300"
  }
]