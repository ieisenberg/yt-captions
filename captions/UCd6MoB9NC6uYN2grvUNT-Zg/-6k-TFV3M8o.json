[
  {
    "start": "0",
    "end": "17000"
  },
  {
    "text": "[Music]",
    "start": "0",
    "end": "2840"
  },
  {
    "text": "hi my name is America man",
    "start": "2840",
    "end": "5430"
  },
  {
    "text": "I'm a senior Solutions Architect with",
    "start": "5430",
    "end": "6960"
  },
  {
    "text": "AWS team and in this video I'm going to",
    "start": "6960",
    "end": "9330"
  },
  {
    "text": "show you how to create a dotnet based",
    "start": "9330",
    "end": "11010"
  },
  {
    "text": "lambda function to receive events from",
    "start": "11010",
    "end": "12990"
  },
  {
    "text": "an IOT button and said to Kinesis data",
    "start": "12990",
    "end": "14940"
  },
  {
    "text": "stream let's get started all right so",
    "start": "14940",
    "end": "18539"
  },
  {
    "start": "17000",
    "end": "71000"
  },
  {
    "text": "this is the architecture of the",
    "start": "18539",
    "end": "20189"
  },
  {
    "text": "application we have a lambda function",
    "start": "20189",
    "end": "21570"
  },
  {
    "text": "that's written using C sharp and it it",
    "start": "21570",
    "end": "24359"
  },
  {
    "text": "waits for an IOT button event",
    "start": "24359",
    "end": "26130"
  },
  {
    "text": "once the IOT button even arrives it",
    "start": "26130",
    "end": "27900"
  },
  {
    "text": "takes the data and sends it to Kinesis",
    "start": "27900",
    "end": "29939"
  },
  {
    "text": "data stream the Kinesis data stream",
    "start": "29939",
    "end": "31920"
  },
  {
    "text": "caches the data until it reaches a",
    "start": "31920",
    "end": "35460"
  },
  {
    "text": "certain limit in our example we are",
    "start": "35460",
    "end": "37440"
  },
  {
    "text": "going to configure it for one megabyte",
    "start": "37440",
    "end": "38940"
  },
  {
    "text": "and the Canisius firehose picks up the",
    "start": "38940",
    "end": "41399"
  },
  {
    "text": "data from kinesin data stream and throws",
    "start": "41399",
    "end": "43410"
  },
  {
    "text": "into s3 bucket I have any data place IRT",
    "start": "43410",
    "end": "46440"
  },
  {
    "text": "button with me and this is what I'm",
    "start": "46440",
    "end": "48420"
  },
  {
    "text": "going to use in this project this has",
    "start": "48420",
    "end": "50640"
  },
  {
    "text": "that you can generate three kinds of",
    "start": "50640",
    "end": "52739"
  },
  {
    "text": "events with it one a single click it's",
    "start": "52739",
    "end": "56190"
  },
  {
    "text": "just a simple press and you can do you",
    "start": "56190",
    "end": "58980"
  },
  {
    "text": "can get a double click by doing double",
    "start": "58980",
    "end": "61050"
  },
  {
    "text": "press and you can create a long press by",
    "start": "61050",
    "end": "64408"
  },
  {
    "text": "pressing long press so you can easily",
    "start": "64409",
    "end": "66630"
  },
  {
    "text": "configure this button to your AWS",
    "start": "66630",
    "end": "68549"
  },
  {
    "text": "account I have it already configured to",
    "start": "68549",
    "end": "69990"
  },
  {
    "text": "my AWS account alright so we are on the",
    "start": "69990",
    "end": "73260"
  },
  {
    "start": "71000",
    "end": "140000"
  },
  {
    "text": "iot demo project and this is a lambda",
    "start": "73260",
    "end": "76170"
  },
  {
    "text": "function and it has one function handler",
    "start": "76170",
    "end": "78350"
  },
  {
    "text": "it has it receives JSON object as an",
    "start": "78350",
    "end": "82140"
  },
  {
    "text": "input and I'm using lambda logger class",
    "start": "82140",
    "end": "85680"
  },
  {
    "text": "to log the input so I can actually see",
    "start": "85680",
    "end": "88979"
  },
  {
    "text": "the incoming data on cloud watch and I'm",
    "start": "88979",
    "end": "92520"
  },
  {
    "text": "sending the I'm converting the string to",
    "start": "92520",
    "end": "94770"
  },
  {
    "text": "memory stream and using the put records",
    "start": "94770",
    "end": "98040"
  },
  {
    "text": "async method on the from the Amazon",
    "start": "98040",
    "end": "100740"
  },
  {
    "text": "Canisius client class by passing input",
    "start": "100740",
    "end": "103770"
  },
  {
    "text": "record say sing put records request",
    "start": "103770",
    "end": "105689"
  },
  {
    "text": "object and sending you to the Kinesis",
    "start": "105689",
    "end": "108860"
  },
  {
    "text": "Kinesis service so the put records",
    "start": "108860",
    "end": "112409"
  },
  {
    "text": "request object itself has a stream name",
    "start": "112409",
    "end": "114659"
  },
  {
    "text": "and records parameters stream name is",
    "start": "114659",
    "end": "117119"
  },
  {
    "text": "basically the name of the Canisius",
    "start": "117119",
    "end": "118619"
  },
  {
    "text": "stream that we will create next and",
    "start": "118619",
    "end": "120270"
  },
  {
    "text": "records is the data that we are passing",
    "start": "120270",
    "end": "122490"
  },
  {
    "text": "to the Kinesis data stream it's a very",
    "start": "122490",
    "end": "125729"
  },
  {
    "text": "simple project and we are going to",
    "start": "125729",
    "end": "128340"
  },
  {
    "text": "deploy it by right-clicking on the",
    "start": "128340",
    "end": "130530"
  },
  {
    "text": "solution and",
    "start": "130530",
    "end": "131670"
  },
  {
    "text": "King published a lambda next and click",
    "start": "131670",
    "end": "137340"
  },
  {
    "text": "upload that's it we are on the AWS",
    "start": "137340",
    "end": "140880"
  },
  {
    "start": "140000",
    "end": "316000"
  },
  {
    "text": "console and we are inside the IOT demo",
    "start": "140880",
    "end": "143250"
  },
  {
    "text": "API function you can see that the",
    "start": "143250",
    "end": "145470"
  },
  {
    "text": "function is configured to get invoked",
    "start": "145470",
    "end": "147840"
  },
  {
    "text": "for an IOT event and I'm going to click",
    "start": "147840",
    "end": "150750"
  },
  {
    "text": "on the a SS IOT trigger point and you",
    "start": "150750",
    "end": "154590"
  },
  {
    "text": "can see that a function has been",
    "start": "154590",
    "end": "156300"
  },
  {
    "text": "triggered all right so now let's go to",
    "start": "156300",
    "end": "158910"
  },
  {
    "text": "the Canisius homepage we are the",
    "start": "158910",
    "end": "163260"
  },
  {
    "text": "Canisius homepage let's get started",
    "start": "163260",
    "end": "165090"
  },
  {
    "text": "we're going to create a data stream and",
    "start": "165090",
    "end": "167040"
  },
  {
    "text": "a delivery stream let's first create a",
    "start": "167040",
    "end": "169410"
  },
  {
    "text": "data stream and remember we named the",
    "start": "169410",
    "end": "173400"
  },
  {
    "text": "data stream as IOT Barton stream in the",
    "start": "173400",
    "end": "175170"
  },
  {
    "text": "lambda function so the name has to be",
    "start": "175170",
    "end": "177600"
  },
  {
    "text": "exactly the same so I'm giving it that",
    "start": "177600",
    "end": "179280"
  },
  {
    "text": "and for the number of shards the shots",
    "start": "179280",
    "end": "182819"
  },
  {
    "text": "I'm going to say just one that is a",
    "start": "182819",
    "end": "184920"
  },
  {
    "text": "simple calculator that you can use if",
    "start": "184920",
    "end": "186840"
  },
  {
    "text": "you want to calculate efficiently how",
    "start": "186840",
    "end": "189269"
  },
  {
    "text": "many shards you and you can use you need",
    "start": "189269",
    "end": "191040"
  },
  {
    "text": "to use for this data stream but for demo",
    "start": "191040",
    "end": "192989"
  },
  {
    "text": "purposes I'm just going to use just one",
    "start": "192989",
    "end": "194760"
  },
  {
    "text": "because we were just dealing with a very",
    "start": "194760",
    "end": "196799"
  },
  {
    "text": "small data set I'm clicking on create",
    "start": "196799",
    "end": "199530"
  },
  {
    "text": "Kinesis stream the Canisius stream is",
    "start": "199530",
    "end": "201840"
  },
  {
    "text": "currently being created right now all",
    "start": "201840",
    "end": "203970"
  },
  {
    "text": "right",
    "start": "203970",
    "end": "204420"
  },
  {
    "text": "the IOT button stream that has been",
    "start": "204420",
    "end": "206790"
  },
  {
    "text": "created so now let's go create a data",
    "start": "206790",
    "end": "209880"
  },
  {
    "text": "fire house this is basically the",
    "start": "209880",
    "end": "211590"
  },
  {
    "text": "delivery stream that will push the data",
    "start": "211590",
    "end": "213450"
  },
  {
    "text": "into an s3 bucket let's click on create",
    "start": "213450",
    "end": "216540"
  },
  {
    "text": "delivery stream and this can be anything",
    "start": "216540",
    "end": "218790"
  },
  {
    "text": "I'm going to say IOT delivery stream and",
    "start": "218790",
    "end": "225709"
  },
  {
    "text": "the source you can add the selector put",
    "start": "225950",
    "end": "228840"
  },
  {
    "text": "resource or second easy stream we",
    "start": "228840",
    "end": "230670"
  },
  {
    "text": "already have a Canisius stream so you're",
    "start": "230670",
    "end": "232200"
  },
  {
    "text": "going to select the existing can use a",
    "start": "232200",
    "end": "233730"
  },
  {
    "text": "stream which we just created click Next",
    "start": "233730",
    "end": "240390"
  },
  {
    "text": "I'm going to leave all these",
    "start": "240390",
    "end": "242459"
  },
  {
    "text": "transformation settings just to the",
    "start": "242459",
    "end": "245220"
  },
  {
    "text": "default next and the destination you can",
    "start": "245220",
    "end": "249450"
  },
  {
    "text": "select any of these 4 destinations you",
    "start": "249450",
    "end": "251760"
  },
  {
    "text": "want we're gonna select Amazon s3 and I",
    "start": "251760",
    "end": "255930"
  },
  {
    "text": "already had I had created a specific s3",
    "start": "255930",
    "end": "260519"
  },
  {
    "text": "bucket for this purpose so I'm selecting",
    "start": "260519",
    "end": "261810"
  },
  {
    "text": "a double SS stream data which is the",
    "start": "261810",
    "end": "264850"
  },
  {
    "text": "s3 bucket that I had created you can add",
    "start": "264850",
    "end": "266710"
  },
  {
    "text": "a prefix if you want click Next",
    "start": "266710",
    "end": "270040"
  },
  {
    "text": "I'm going to change the buffer size to",
    "start": "270040",
    "end": "271750"
  },
  {
    "text": "just 1 MB so I can see the results I'm",
    "start": "271750",
    "end": "275740"
  },
  {
    "text": "going to leave everything else as",
    "start": "275740",
    "end": "277120"
  },
  {
    "text": "default and for I am role which we need",
    "start": "277120",
    "end": "281290"
  },
  {
    "text": "to create I'm going to click on this it",
    "start": "281290",
    "end": "282820"
  },
  {
    "text": "will take me to the I am console you can",
    "start": "282820",
    "end": "286600"
  },
  {
    "text": "see that it has populated a default role",
    "start": "286600",
    "end": "289900"
  },
  {
    "text": "I'm going to ask you to create a new",
    "start": "289900",
    "end": "291310"
  },
  {
    "text": "policy you can see the policy document",
    "start": "291310",
    "end": "293140"
  },
  {
    "text": "if you want I'm going to say Allah you",
    "start": "293140",
    "end": "297010"
  },
  {
    "text": "can see that the I enroll has been",
    "start": "297010",
    "end": "298660"
  },
  {
    "text": "configured to this to this instance we",
    "start": "298660",
    "end": "303130"
  },
  {
    "text": "come next into a quick review and click",
    "start": "303130",
    "end": "307150"
  },
  {
    "text": "create a delivery stream all right the",
    "start": "307150",
    "end": "311710"
  },
  {
    "text": "IOT delivery stream has been",
    "start": "311710",
    "end": "313330"
  },
  {
    "text": "successfully created I went ahead and",
    "start": "313330",
    "end": "316540"
  },
  {
    "text": "created a few events on the IOT button I",
    "start": "316540",
    "end": "319270"
  },
  {
    "text": "did a single click double-click and a",
    "start": "319270",
    "end": "321040"
  },
  {
    "text": "few few long presses so let's go to a",
    "start": "321040",
    "end": "324840"
  },
  {
    "text": "cloud watch and see if the events have",
    "start": "324840",
    "end": "327310"
  },
  {
    "text": "been locked remember we used lambda",
    "start": "327310",
    "end": "328990"
  },
  {
    "text": "logger to log the events and we are on",
    "start": "328990",
    "end": "331570"
  },
  {
    "text": "cloud watch cloud watch will filter and",
    "start": "331570",
    "end": "333700"
  },
  {
    "text": "we see some events here yeah there you",
    "start": "333700",
    "end": "337360"
  },
  {
    "text": "go there is the single clicks double",
    "start": "337360",
    "end": "339310"
  },
  {
    "text": "clicks and all that okay so it seems the",
    "start": "339310",
    "end": "342760"
  },
  {
    "text": "lambda function is being successfully",
    "start": "342760",
    "end": "344800"
  },
  {
    "text": "triggered from the IOT button now let's",
    "start": "344800",
    "end": "347380"
  },
  {
    "text": "go to s3 and take a look at the s3",
    "start": "347380",
    "end": "350050"
  },
  {
    "text": "bucket and see if the events have",
    "start": "350050",
    "end": "351280"
  },
  {
    "text": "arrived a double a stream data is the s3",
    "start": "351280",
    "end": "354550"
  },
  {
    "text": "bucket that we configured 2018 is the",
    "start": "354550",
    "end": "357850"
  },
  {
    "text": "year month and the day and time so you",
    "start": "357850",
    "end": "363760"
  },
  {
    "text": "see that our process has been successful",
    "start": "363760",
    "end": "365890"
  },
  {
    "text": "so an IOT button triggered an event the",
    "start": "365890",
    "end": "368920"
  },
  {
    "text": "event got processed by lambda through",
    "start": "368920",
    "end": "370630"
  },
  {
    "text": "the data into Kinesis data stream and it",
    "start": "370630",
    "end": "372940"
  },
  {
    "text": "got picked up by Canisius data firehouse",
    "start": "372940",
    "end": "374740"
  },
  {
    "text": "and that was thrown into an s3 bucket",
    "start": "374740",
    "end": "377370"
  },
  {
    "start": "377000",
    "end": "390000"
  },
  {
    "text": "alright so in this video we covered how",
    "start": "377370",
    "end": "380470"
  },
  {
    "text": "to create a darknet based lambda",
    "start": "380470",
    "end": "381940"
  },
  {
    "text": "function to receive events from an ID",
    "start": "381940",
    "end": "383950"
  },
  {
    "text": "button and send to Kinesis data stream",
    "start": "383950",
    "end": "385690"
  },
  {
    "text": "hope it helped thanks for watching",
    "start": "385690",
    "end": "387660"
  },
  {
    "text": "[Music]",
    "start": "387660",
    "end": "392239"
  }
]