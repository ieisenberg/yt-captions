[
  {
    "start": "0",
    "end": "14000"
  },
  {
    "text": "[Music]",
    "start": "2100",
    "end": "8000"
  },
  {
    "text": "welcome to what's new with aws",
    "start": "8000",
    "end": "10240"
  },
  {
    "text": "i'm jeff barr i've got three awesome",
    "start": "10240",
    "end": "12400"
  },
  {
    "text": "launches to share with you today",
    "start": "12400",
    "end": "14559"
  },
  {
    "start": "14000",
    "end": "102000"
  },
  {
    "text": "first up let's bring two cool and",
    "start": "14559",
    "end": "16400"
  },
  {
    "text": "powerful aws services together",
    "start": "16400",
    "end": "18640"
  },
  {
    "text": "amazon s3 it's been around since 2006",
    "start": "18640",
    "end": "21840"
  },
  {
    "text": "lets you store any amount of data there",
    "start": "21840",
    "end": "24000"
  },
  {
    "text": "are literally thousands of tools",
    "start": "24000",
    "end": "25840"
  },
  {
    "text": "apps scripts and utilities that use the",
    "start": "25840",
    "end": "27840"
  },
  {
    "text": "s3 apis in a multitude of ways",
    "start": "27840",
    "end": "31199"
  },
  {
    "text": "aws outposts whole lot newer launched at",
    "start": "31199",
    "end": "34160"
  },
  {
    "text": "re invent in 2019",
    "start": "34160",
    "end": "36239"
  },
  {
    "text": "lets you bring aws compute storage and",
    "start": "36239",
    "end": "38879"
  },
  {
    "text": "database services into your own data",
    "start": "38879",
    "end": "40559"
  },
  {
    "text": "center or colocation space",
    "start": "40559",
    "end": "42800"
  },
  {
    "text": "you can use outpost to do low latency",
    "start": "42800",
    "end": "44559"
  },
  {
    "text": "compute that's great for local data",
    "start": "44559",
    "end": "46320"
  },
  {
    "text": "processing",
    "start": "46320",
    "end": "47039"
  },
  {
    "text": "real time gaming high frequency trading",
    "start": "47039",
    "end": "49520"
  },
  {
    "text": "and so forth",
    "start": "49520",
    "end": "50879"
  },
  {
    "text": "so these tools apps scripts utilities",
    "start": "50879",
    "end": "53680"
  },
  {
    "text": "all built atop the s3 apis",
    "start": "53680",
    "end": "55680"
  },
  {
    "text": "or the aws sdks can now be used to store",
    "start": "55680",
    "end": "58399"
  },
  {
    "text": "data on an outpost",
    "start": "58399",
    "end": "59760"
  },
  {
    "text": "the data metadata and the tags are all",
    "start": "59760",
    "end": "62559"
  },
  {
    "text": "stored durably and redundantly on the",
    "start": "62559",
    "end": "64158"
  },
  {
    "text": "outpost",
    "start": "64159",
    "end": "64878"
  },
  {
    "text": "all protected by server-side encryption",
    "start": "64879",
    "end": "67439"
  },
  {
    "text": "you can keep the data there for the long",
    "start": "67439",
    "end": "68960"
  },
  {
    "text": "term",
    "start": "68960",
    "end": "69439"
  },
  {
    "text": "or you could filter compress or do other",
    "start": "69439",
    "end": "71439"
  },
  {
    "text": "pre-processing before you copy it to an",
    "start": "71439",
    "end": "73680"
  },
  {
    "text": "aws region",
    "start": "73680",
    "end": "75040"
  },
  {
    "text": "you can use all the usual s3 commands to",
    "start": "75040",
    "end": "77200"
  },
  {
    "text": "copy data from a bucket in an outpost to",
    "start": "77200",
    "end": "79280"
  },
  {
    "text": "a bucket in a region",
    "start": "79280",
    "end": "80479"
  },
  {
    "text": "you can also use aws data sync",
    "start": "80479",
    "end": "83680"
  },
  {
    "text": "so if you've already got an outpost and",
    "start": "83680",
    "end": "85520"
  },
  {
    "text": "you're using no more than 11 terabytes",
    "start": "85520",
    "end": "87600"
  },
  {
    "text": "of ebs storage",
    "start": "87600",
    "end": "88880"
  },
  {
    "text": "you can add up to 48 terabytes of s3",
    "start": "88880",
    "end": "91119"
  },
  {
    "text": "storage with no hardware changes",
    "start": "91119",
    "end": "93119"
  },
  {
    "text": "we've got some other options for you",
    "start": "93119",
    "end": "94640"
  },
  {
    "text": "that'll let you add either 48 or 96",
    "start": "94640",
    "end": "96640"
  },
  {
    "text": "terabytes of s3 capacity to an outpost",
    "start": "96640",
    "end": "99280"
  },
  {
    "text": "you can learn a whole lot more by",
    "start": "99280",
    "end": "100640"
  },
  {
    "text": "reading martin's blog post",
    "start": "100640",
    "end": "102560"
  },
  {
    "start": "102000",
    "end": "181000"
  },
  {
    "text": "next up the amazon timestream database",
    "start": "102560",
    "end": "104640"
  },
  {
    "text": "is now available",
    "start": "104640",
    "end": "105920"
  },
  {
    "text": "as you can probably guess from the name",
    "start": "105920",
    "end": "107439"
  },
  {
    "text": "this is perfect for storing data that",
    "start": "107439",
    "end": "109280"
  },
  {
    "text": "describes how something changes over",
    "start": "109280",
    "end": "111040"
  },
  {
    "text": "time",
    "start": "111040",
    "end": "111680"
  },
  {
    "text": "this could be production lines machines",
    "start": "111680",
    "end": "114560"
  },
  {
    "text": "iot",
    "start": "114560",
    "end": "115040"
  },
  {
    "text": "devices or even i.t infrastructure",
    "start": "115040",
    "end": "117759"
  },
  {
    "text": "timestream is fast",
    "start": "117759",
    "end": "119200"
  },
  {
    "text": "it's scalable it's serverless and it's",
    "start": "119200",
    "end": "121280"
  },
  {
    "text": "also really cost effective",
    "start": "121280",
    "end": "123439"
  },
  {
    "text": "you can collect and process trillions of",
    "start": "123439",
    "end": "125119"
  },
  {
    "text": "events per day up to a thousand times",
    "start": "125119",
    "end": "127200"
  },
  {
    "text": "faster and",
    "start": "127200",
    "end": "128160"
  },
  {
    "text": "one-tenth the cost of a relational",
    "start": "128160",
    "end": "129599"
  },
  {
    "text": "database the recent data is stored in",
    "start": "129599",
    "end": "132319"
  },
  {
    "text": "memory",
    "start": "132319",
    "end": "132800"
  },
  {
    "text": "it's replicated across three aws",
    "start": "132800",
    "end": "134959"
  },
  {
    "text": "availability zones for durability",
    "start": "134959",
    "end": "137200"
  },
  {
    "text": "the older data is moved to cost",
    "start": "137200",
    "end": "139040"
  },
  {
    "text": "optimized magnetic storage using a",
    "start": "139040",
    "end": "140720"
  },
  {
    "text": "retention policy that you define",
    "start": "140720",
    "end": "142480"
  },
  {
    "text": "when you create your database a second",
    "start": "142480",
    "end": "144800"
  },
  {
    "text": "policy controls retention on the",
    "start": "144800",
    "end": "146319"
  },
  {
    "text": "magnetic storage with a maximum value of",
    "start": "146319",
    "end": "148480"
  },
  {
    "text": "200 years",
    "start": "148480",
    "end": "150879"
  },
  {
    "text": "you can insert data without having to",
    "start": "150879",
    "end": "152560"
  },
  {
    "text": "set up a schema your queries",
    "start": "152560",
    "end": "154160"
  },
  {
    "text": "transparently span the in-memory and the",
    "start": "154160",
    "end": "156160"
  },
  {
    "text": "magnetic storage with no effort on your",
    "start": "156160",
    "end": "158080"
  },
  {
    "text": "part",
    "start": "158080",
    "end": "159440"
  },
  {
    "text": "to get started with timestream you",
    "start": "159440",
    "end": "161280"
  },
  {
    "text": "create a database define your retention",
    "start": "161280",
    "end": "163360"
  },
  {
    "text": "policies",
    "start": "163360",
    "end": "164080"
  },
  {
    "text": "and then you just start to put records",
    "start": "164080",
    "end": "166239"
  },
  {
    "text": "from there you can run",
    "start": "166239",
    "end": "167680"
  },
  {
    "text": "time-oriented sql queries from your code",
    "start": "167680",
    "end": "169840"
  },
  {
    "text": "using a jdbc connector",
    "start": "169840",
    "end": "171680"
  },
  {
    "text": "you can also use the console and you can",
    "start": "171680",
    "end": "173760"
  },
  {
    "text": "also use open source tools such as",
    "start": "173760",
    "end": "175200"
  },
  {
    "text": "grafana",
    "start": "175200",
    "end": "176480"
  },
  {
    "text": "to learn more and to see amazon",
    "start": "176480",
    "end": "178000"
  },
  {
    "text": "timestream in action you can read",
    "start": "178000",
    "end": "179360"
  },
  {
    "text": "daniello's blog post",
    "start": "179360",
    "end": "181360"
  },
  {
    "start": "181000",
    "end": "257000"
  },
  {
    "text": "now finally we launched a preview of aws",
    "start": "181360",
    "end": "183920"
  },
  {
    "text": "cost anomaly detection",
    "start": "183920",
    "end": "185519"
  },
  {
    "text": "this is a part of aws cost explorer i",
    "start": "185519",
    "end": "187599"
  },
  {
    "text": "think you're really going to like it",
    "start": "187599",
    "end": "189360"
  },
  {
    "text": "behind the scenes it uses a machine",
    "start": "189360",
    "end": "191280"
  },
  {
    "text": "learning model that's going to detect",
    "start": "191280",
    "end": "192879"
  },
  {
    "text": "one-time cost surges and then gradual",
    "start": "192879",
    "end": "194879"
  },
  {
    "text": "cost increases",
    "start": "194879",
    "end": "196400"
  },
  {
    "text": "over time it's going to learn about your",
    "start": "196400",
    "end": "198319"
  },
  {
    "text": "historical costs",
    "start": "198319",
    "end": "199440"
  },
  {
    "text": "it's also going to take organic growth",
    "start": "199440",
    "end": "201280"
  },
  {
    "text": "and some any seasonal trends into",
    "start": "201280",
    "end": "202800"
  },
  {
    "text": "consideration",
    "start": "202800",
    "end": "204000"
  },
  {
    "text": "once it's set up you're going to get",
    "start": "204000",
    "end": "205680"
  },
  {
    "text": "alerts you also can do root cause",
    "start": "205680",
    "end": "207360"
  },
  {
    "text": "analysis",
    "start": "207360",
    "end": "208080"
  },
  {
    "text": "going to help you to minimize any",
    "start": "208080",
    "end": "209280"
  },
  {
    "text": "unintentional spending",
    "start": "209280",
    "end": "211120"
  },
  {
    "text": "to get started you simply enable the",
    "start": "211120",
    "end": "213120"
  },
  {
    "text": "granular cost anomaly detection by",
    "start": "213120",
    "end": "215200"
  },
  {
    "text": "creating some monitor types",
    "start": "215200",
    "end": "216640"
  },
  {
    "text": "you can go really fine grained with",
    "start": "216640",
    "end": "218319"
  },
  {
    "text": "options that go by account",
    "start": "218319",
    "end": "220080"
  },
  {
    "text": "aws service cost allocation tag or a",
    "start": "220080",
    "end": "223120"
  },
  {
    "text": "cost category",
    "start": "223120",
    "end": "224480"
  },
  {
    "text": "the models are finalized and set up 24",
    "start": "224480",
    "end": "227519"
  },
  {
    "text": "hours later you start to get alerts by",
    "start": "227519",
    "end": "229200"
  },
  {
    "text": "email or by sns",
    "start": "229200",
    "end": "231120"
  },
  {
    "text": "to learn more you can read the blog post",
    "start": "231120",
    "end": "232959"
  },
  {
    "text": "from bowen and by from juan",
    "start": "232959",
    "end": "235599"
  },
  {
    "text": "that's all for today we always look",
    "start": "235599",
    "end": "237599"
  },
  {
    "text": "forward to your feedback",
    "start": "237599",
    "end": "238799"
  },
  {
    "text": "you could send us an email leave us a",
    "start": "238799",
    "end": "240640"
  },
  {
    "text": "tweet leave us a comment below",
    "start": "240640",
    "end": "242879"
  },
  {
    "text": "to see some more of our videos subscribe",
    "start": "242879",
    "end": "244959"
  },
  {
    "text": "to our channel",
    "start": "244959",
    "end": "245920"
  },
  {
    "text": "click the bell for notifications thank",
    "start": "245920",
    "end": "247840"
  },
  {
    "text": "you so much for watching",
    "start": "247840",
    "end": "248959"
  },
  {
    "text": "and we'll see you again soon",
    "start": "248959",
    "end": "255840"
  },
  {
    "text": "you",
    "start": "257199",
    "end": "259280"
  }
]