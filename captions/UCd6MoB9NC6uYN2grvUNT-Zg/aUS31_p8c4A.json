[
  {
    "start": "0",
    "end": "89000"
  },
  {
    "text": "[Music]",
    "start": "140",
    "end": "1160"
  },
  {
    "text": "[Applause]",
    "start": "1160",
    "end": "2910"
  },
  {
    "text": "[Music]",
    "start": "2910",
    "end": "6080"
  },
  {
    "text": "hello I am sangram a cloud support",
    "start": "7640",
    "end": "10160"
  },
  {
    "text": "engineer here at the AWS office in",
    "start": "10160",
    "end": "12960"
  },
  {
    "text": "Dallas today I am going to show you how",
    "start": "12960",
    "end": "16080"
  },
  {
    "text": "to troubleshoot HTTP 503 errors return",
    "start": "16080",
    "end": "19840"
  },
  {
    "text": "When using classic load balancer let's",
    "start": "19840",
    "end": "22519"
  },
  {
    "text": "get started you can see http503 errors",
    "start": "22519",
    "end": "26080"
  },
  {
    "text": "in Access log Amazon cloudwatch metrics",
    "start": "26080",
    "end": "28800"
  },
  {
    "text": "or when users hit the load balancers DNS",
    "start": "28800",
    "end": "31599"
  },
  {
    "text": "name in the browser or from any other",
    "start": "31599",
    "end": "33800"
  },
  {
    "text": "clients a typical http503 error means",
    "start": "33800",
    "end": "37399"
  },
  {
    "text": "that the service is unavailable which",
    "start": "37399",
    "end": "39520"
  },
  {
    "text": "means that the server can't handle the",
    "start": "39520",
    "end": "41520"
  },
  {
    "text": "incoming request usually this behavior",
    "start": "41520",
    "end": "44480"
  },
  {
    "text": "is observed when either the server is",
    "start": "44480",
    "end": "46360"
  },
  {
    "text": "down or the server is overloaded and",
    "start": "46360",
    "end": "49039"
  },
  {
    "text": "can't handle any more incoming request",
    "start": "49039",
    "end": "51760"
  },
  {
    "text": "there are two aspects to check when",
    "start": "51760",
    "end": "53559"
  },
  {
    "text": "troubles shooting the HTTP 503 errors",
    "start": "53559",
    "end": "56280"
  },
  {
    "text": "return return from a classic load",
    "start": "56280",
    "end": "57640"
  },
  {
    "text": "balancer first check if the server is",
    "start": "57640",
    "end": "60559"
  },
  {
    "text": "down make sure that you registered",
    "start": "60559",
    "end": "63280"
  },
  {
    "text": "backend instances in every availability",
    "start": "63280",
    "end": "65720"
  },
  {
    "text": "Zone that your classic load balancer is",
    "start": "65720",
    "end": "68200"
  },
  {
    "text": "configured to respond in and make sure",
    "start": "68200",
    "end": "71479"
  },
  {
    "text": "that the register backend instances",
    "start": "71479",
    "end": "73240"
  },
  {
    "text": "aren't failing H checks second check if",
    "start": "73240",
    "end": "77119"
  },
  {
    "text": "the server is",
    "start": "77119",
    "end": "78280"
  },
  {
    "text": "overloaded make sure that the backend",
    "start": "78280",
    "end": "80680"
  },
  {
    "text": "instances are sized appropriately to",
    "start": "80680",
    "end": "83079"
  },
  {
    "text": "handle the load your application",
    "start": "83079",
    "end": "85520"
  },
  {
    "text": "requires let's troubleshoot the first",
    "start": "85520",
    "end": "88079"
  },
  {
    "text": "part checking to see if the is down",
    "start": "88079",
    "end": "91280"
  },
  {
    "start": "89000",
    "end": "181000"
  },
  {
    "text": "first confirm if there are register",
    "start": "91280",
    "end": "93079"
  },
  {
    "text": "backend instances in every availability",
    "start": "93079",
    "end": "95479"
  },
  {
    "text": "Zone where the load balancer is",
    "start": "95479",
    "end": "97320"
  },
  {
    "text": "configured after logging into the AWS",
    "start": "97320",
    "end": "100200"
  },
  {
    "text": "Management console navigate to the",
    "start": "100200",
    "end": "102680"
  },
  {
    "text": "Amazon elastic compute Cloud",
    "start": "102680",
    "end": "106040"
  },
  {
    "text": "console then navigate to load",
    "start": "106040",
    "end": "109759"
  },
  {
    "text": "balancers choose the name of a classic",
    "start": "109759",
    "end": "112040"
  },
  {
    "text": "load balancer to open its Details",
    "start": "112040",
    "end": "115119"
  },
  {
    "text": "page on the details page choose the",
    "start": "115119",
    "end": "117840"
  },
  {
    "text": "instances tab to list all the inst St",
    "start": "117840",
    "end": "120600"
  },
  {
    "text": "associated with the given load balancer",
    "start": "120600",
    "end": "123280"
  },
  {
    "text": "under the edit availability zones button",
    "start": "123280",
    "end": "126000"
  },
  {
    "text": "check the list of availability zones",
    "start": "126000",
    "end": "128280"
  },
  {
    "text": "where the given load balancer is active",
    "start": "128280",
    "end": "130520"
  },
  {
    "text": "along with the column named instance",
    "start": "130520",
    "end": "132640"
  },
  {
    "text": "count for best results there must be at",
    "start": "132640",
    "end": "135560"
  },
  {
    "text": "least one instance count for each listed",
    "start": "135560",
    "end": "138040"
  },
  {
    "text": "availability Zone if any availability",
    "start": "138040",
    "end": "141120"
  },
  {
    "text": "Zone has an instance count of zero then",
    "start": "141120",
    "end": "143800"
  },
  {
    "text": "either remove that availability Zone and",
    "start": "143800",
    "end": "145840"
  },
  {
    "text": "corresponding subnet from the given load",
    "start": "145840",
    "end": "147840"
  },
  {
    "text": "balancer or add an instr from that",
    "start": "147840",
    "end": "150560"
  },
  {
    "text": "availability Zone as a backend instance",
    "start": "150560",
    "end": "153000"
  },
  {
    "text": "to your load balancer by choosing edit",
    "start": "153000",
    "end": "155360"
  },
  {
    "text": "instances button here I am removing the",
    "start": "155360",
    "end": "158519"
  },
  {
    "text": "availability Zone us- east- 1D from the",
    "start": "158519",
    "end": "162720"
  },
  {
    "text": "load balancer because it has zero",
    "start": "162720",
    "end": "165000"
  },
  {
    "text": "backend",
    "start": "165000",
    "end": "167400"
  },
  {
    "text": "instances as the final check make sure",
    "start": "169200",
    "end": "172519"
  },
  {
    "text": "all the active availability zones for",
    "start": "172519",
    "end": "174720"
  },
  {
    "text": "the given load balancer have at least",
    "start": "174720",
    "end": "177080"
  },
  {
    "text": "one instance",
    "start": "177080",
    "end": "178760"
  },
  {
    "text": "count",
    "start": "178760",
    "end": "181640"
  },
  {
    "start": "181000",
    "end": "344000"
  },
  {
    "text": "now let's confirm if all the instances",
    "start": "181640",
    "end": "184400"
  },
  {
    "text": "behind the given classic load balancer",
    "start": "184400",
    "end": "186239"
  },
  {
    "text": "are healthy and in service the load",
    "start": "186239",
    "end": "189200"
  },
  {
    "text": "balancer sends a heal check request to",
    "start": "189200",
    "end": "191519"
  },
  {
    "text": "each registered instance every set",
    "start": "191519",
    "end": "193440"
  },
  {
    "text": "interval seconds using the specified",
    "start": "193440",
    "end": "195920"
  },
  {
    "text": "Port protocol and path for HTTP or https",
    "start": "195920",
    "end": "201040"
  },
  {
    "text": "H checks when the load balancer receives",
    "start": "201040",
    "end": "203560"
  },
  {
    "text": "the HTTP 200 Response Code from the back",
    "start": "203560",
    "end": "206560"
  },
  {
    "text": "end instance the instance is marked as",
    "start": "206560",
    "end": "209080"
  },
  {
    "text": "healthy for TCP H checks the load",
    "start": "209080",
    "end": "211959"
  },
  {
    "text": "balancer marks the instance as healthy",
    "start": "211959",
    "end": "214680"
  },
  {
    "text": "if the instance successfully completes a",
    "start": "214680",
    "end": "216959"
  },
  {
    "text": "TCP hand check now let's confirm if the",
    "start": "216959",
    "end": "219680"
  },
  {
    "text": "provision backend instances behind the",
    "start": "219680",
    "end": "221840"
  },
  {
    "text": "given load balancer are marked healthy",
    "start": "221840",
    "end": "224080"
  },
  {
    "text": "by the load balancer from the AWS",
    "start": "224080",
    "end": "226319"
  },
  {
    "text": "Management console from the ec2 console",
    "start": "226319",
    "end": "229560"
  },
  {
    "text": "select load",
    "start": "229560",
    "end": "231920"
  },
  {
    "text": "balancers and then choose the name of a",
    "start": "231920",
    "end": "234360"
  },
  {
    "text": "classic load balancer to open its",
    "start": "234360",
    "end": "236519"
  },
  {
    "text": "Details page on the details page choose",
    "start": "236519",
    "end": "239920"
  },
  {
    "text": "the instances tab to list all the",
    "start": "239920",
    "end": "242159"
  },
  {
    "text": "instances associated with the given load",
    "start": "242159",
    "end": "244879"
  },
  {
    "text": "balancer on the instances page under the",
    "start": "244879",
    "end": "247920"
  },
  {
    "text": "edit instances button check the status",
    "start": "247920",
    "end": "250400"
  },
  {
    "text": "of the backend instances from the status",
    "start": "250400",
    "end": "252599"
  },
  {
    "text": "column as we can see the instances",
    "start": "252599",
    "end": "255120"
  },
  {
    "text": "status is shown as out of service now",
    "start": "255120",
    "end": "258320"
  },
  {
    "text": "hover your cursor over the little I",
    "start": "258320",
    "end": "260720"
  },
  {
    "text": "located next to the out of service",
    "start": "260720",
    "end": "263360"
  },
  {
    "text": "status here the instance is marked as",
    "start": "263360",
    "end": "266160"
  },
  {
    "text": "out of service by the load balancer",
    "start": "266160",
    "end": "268040"
  },
  {
    "text": "because it is in a stopped state in a",
    "start": "268040",
    "end": "270160"
  },
  {
    "text": "similar way check the status of the next",
    "start": "270160",
    "end": "272199"
  },
  {
    "text": "instance here we can see the reason for",
    "start": "272199",
    "end": "274919"
  },
  {
    "text": "the instance's status the instance is",
    "start": "274919",
    "end": "277360"
  },
  {
    "text": "out of service because it has failed at",
    "start": "277360",
    "end": "280000"
  },
  {
    "text": "least the unhealthy threshold number of",
    "start": "280000",
    "end": "281800"
  },
  {
    "text": "heal checks consecutively troubleshoot",
    "start": "281800",
    "end": "284199"
  },
  {
    "text": "the reason for the heal check failure",
    "start": "284199",
    "end": "286000"
  },
  {
    "text": "and then remove the stopped instances",
    "start": "286000",
    "end": "288000"
  },
  {
    "text": "from the load balancer if they are no",
    "start": "288000",
    "end": "289880"
  },
  {
    "text": "longer needed to handle incoming",
    "start": "289880",
    "end": "291759"
  },
  {
    "text": "requests there can be various reasons",
    "start": "291759",
    "end": "294199"
  },
  {
    "text": "that can cause an instance to fail the",
    "start": "294199",
    "end": "296280"
  },
  {
    "text": "classic load balancers H check",
    "start": "296280",
    "end": "298000"
  },
  {
    "text": "troubleshoot the H check failure issue",
    "start": "298000",
    "end": "300280"
  },
  {
    "text": "and then confirm if all the register",
    "start": "300280",
    "end": "302240"
  },
  {
    "text": "instances listed behind the load",
    "start": "302240",
    "end": "304080"
  },
  {
    "text": "balancer are marked in service by the",
    "start": "304080",
    "end": "306440"
  },
  {
    "text": "given classic load balancer check the",
    "start": "306440",
    "end": "308639"
  },
  {
    "text": "latest instance status on the elastic",
    "start": "308639",
    "end": "311080"
  },
  {
    "text": "load balancing console as we did earlier",
    "start": "311080",
    "end": "313960"
  },
  {
    "text": "open the instances tab on the load",
    "start": "313960",
    "end": "315759"
  },
  {
    "text": "balancers Details page and then confirm",
    "start": "315759",
    "end": "318440"
  },
  {
    "text": "if all the listed instances are shown as",
    "start": "318440",
    "end": "321199"
  },
  {
    "text": "in service in this way you can make sure",
    "start": "321199",
    "end": "324199"
  },
  {
    "text": "that your backend instances are",
    "start": "324199",
    "end": "325800"
  },
  {
    "text": "responding correctly to H check request",
    "start": "325800",
    "end": "328080"
  },
  {
    "text": "coming from the classic load back",
    "start": "328080",
    "end": "329560"
  },
  {
    "text": "balancer and the instances are marked in",
    "start": "329560",
    "end": "332120"
  },
  {
    "text": "service by the load balancer now let's",
    "start": "332120",
    "end": "334880"
  },
  {
    "text": "move on to the second aspect of",
    "start": "334880",
    "end": "336600"
  },
  {
    "text": "troubleshooting that we discuss at the",
    "start": "336600",
    "end": "338560"
  },
  {
    "text": "beginning of this video to check if the",
    "start": "338560",
    "end": "341039"
  },
  {
    "text": "server is overloaded make sure that the",
    "start": "341039",
    "end": "343759"
  },
  {
    "text": "backend instances are sized",
    "start": "343759",
    "end": "345400"
  },
  {
    "start": "344000",
    "end": "562000"
  },
  {
    "text": "appropriately to handle the load your",
    "start": "345400",
    "end": "347319"
  },
  {
    "text": "application requires cloudwatch metrics",
    "start": "347319",
    "end": "350440"
  },
  {
    "text": "search Q length and Spiel or count are",
    "start": "350440",
    "end": "352720"
  },
  {
    "text": "the best indicators of such scenarios",
    "start": "352720",
    "end": "355039"
  },
  {
    "text": "where the incoming traffic loads exit",
    "start": "355039",
    "end": "357520"
  },
  {
    "text": "systems capacity the metric search CU",
    "start": "357520",
    "end": "360160"
  },
  {
    "text": "length indicates the total number of",
    "start": "360160",
    "end": "362039"
  },
  {
    "text": "request for HTTP listener or connections",
    "start": "362039",
    "end": "364919"
  },
  {
    "text": "for TCP listener that are pending",
    "start": "364919",
    "end": "366919"
  },
  {
    "text": "routing to a healthy or inservice",
    "start": "366919",
    "end": "369160"
  },
  {
    "text": "instance the maximum size for the queue",
    "start": "369160",
    "end": "372000"
  },
  {
    "text": "is",
    "start": "372000",
    "end": "373039"
  },
  {
    "text": "1,24 additional request or connections",
    "start": "373039",
    "end": "376160"
  },
  {
    "text": "are rejected when the queue is full and",
    "start": "376160",
    "end": "378800"
  },
  {
    "text": "the metric spill over count indicates",
    "start": "378800",
    "end": "381360"
  },
  {
    "text": "the total number of requests that were",
    "start": "381360",
    "end": "383800"
  },
  {
    "text": "rejected because the search queue is",
    "start": "383800",
    "end": "385599"
  },
  {
    "text": "full for HTTP listener the load balancer",
    "start": "385599",
    "end": "389120"
  },
  {
    "text": "returns and http503 error",
    "start": "389120",
    "end": "392479"
  },
  {
    "text": "code from the load balances Details page",
    "start": "392479",
    "end": "395759"
  },
  {
    "text": "choose the monitoring",
    "start": "395759",
    "end": "397800"
  },
  {
    "text": "tab on the page look for the metric",
    "start": "397800",
    "end": "401199"
  },
  {
    "text": "named search Q length choose the metric",
    "start": "401199",
    "end": "404840"
  },
  {
    "text": "to maximize",
    "start": "404840",
    "end": "407680"
  },
  {
    "text": "it confirm that the statistics is set to",
    "start": "407720",
    "end": "411120"
  },
  {
    "text": "maximum and select the appropriate time",
    "start": "411120",
    "end": "413759"
  },
  {
    "text": "range and period I'll keep the default",
    "start": "413759",
    "end": "416319"
  },
  {
    "text": "parameters here confirm if the metric",
    "start": "416319",
    "end": "418919"
  },
  {
    "text": "contains any data points as you can see",
    "start": "418919",
    "end": "422000"
  },
  {
    "text": "multiple data points are recorded for",
    "start": "422000",
    "end": "424080"
  },
  {
    "text": "the given classic load balancer in the",
    "start": "424080",
    "end": "426080"
  },
  {
    "text": "last hour this indicates that the rate",
    "start": "426080",
    "end": "429000"
  },
  {
    "text": "of incoming request was higher than the",
    "start": "429000",
    "end": "431800"
  },
  {
    "text": "rate of processing those request by the",
    "start": "431800",
    "end": "433800"
  },
  {
    "text": "backend instances this also indicates",
    "start": "433800",
    "end": "436720"
  },
  {
    "text": "that the backend instances can't handle",
    "start": "436720",
    "end": "438879"
  },
  {
    "text": "the incoming load and are taking a",
    "start": "438879",
    "end": "441000"
  },
  {
    "text": "longer time to process the incoming",
    "start": "441000",
    "end": "442800"
  },
  {
    "text": "request which caus the load balancer to",
    "start": "442800",
    "end": "445400"
  },
  {
    "text": "cue the new incoming request now close",
    "start": "445400",
    "end": "448800"
  },
  {
    "text": "this metric",
    "start": "448800",
    "end": "449879"
  },
  {
    "text": "and look for a metric named spill over",
    "start": "449879",
    "end": "452599"
  },
  {
    "text": "count choose the metric to maximize it",
    "start": "452599",
    "end": "456240"
  },
  {
    "text": "confirm if the metric contains any data",
    "start": "456240",
    "end": "458720"
  },
  {
    "text": "points as you can see here we see a data",
    "start": "458720",
    "end": "461840"
  },
  {
    "text": "point with a value of",
    "start": "461840",
    "end": "463840"
  },
  {
    "text": "5853 this indicates that the 5853",
    "start": "463840",
    "end": "467000"
  },
  {
    "text": "request were rejected at 3:15 p.m. by",
    "start": "467000",
    "end": "469879"
  },
  {
    "text": "the given classic load balancer by",
    "start": "469879",
    "end": "471840"
  },
  {
    "text": "sending HTTP 503 to clients because of",
    "start": "471840",
    "end": "475080"
  },
  {
    "text": "an inability of backend instances to",
    "start": "475080",
    "end": "477400"
  },
  {
    "text": "process them from the observations of",
    "start": "477400",
    "end": "479400"
  },
  {
    "text": "this cloudwatch metrics we can confirm",
    "start": "479400",
    "end": "481639"
  },
  {
    "text": "that the provision capacity at the back",
    "start": "481639",
    "end": "483879"
  },
  {
    "text": "end of the load balancer is not enough",
    "start": "483879",
    "end": "485960"
  },
  {
    "text": "to handle the incoming traffic load to",
    "start": "485960",
    "end": "488440"
  },
  {
    "text": "further troubleshoot the backend",
    "start": "488440",
    "end": "490039"
  },
  {
    "text": "instance capacity issue you can follow",
    "start": "490039",
    "end": "492319"
  },
  {
    "text": "these steps verify that your backend",
    "start": "492319",
    "end": "494720"
  },
  {
    "text": "instance can handle the CPU usage memory",
    "start": "494720",
    "end": "498280"
  },
  {
    "text": "disk and the number of connections that",
    "start": "498280",
    "end": "500560"
  },
  {
    "text": "your application requires check the CPU",
    "start": "500560",
    "end": "503720"
  },
  {
    "text": "utilization cloudwatch metrics for your",
    "start": "503720",
    "end": "505759"
  },
  {
    "text": "instances and confirm it is hitting 100%",
    "start": "505759",
    "end": "509039"
  },
  {
    "text": "of is consistently very high over long",
    "start": "509039",
    "end": "512159"
  },
  {
    "text": "periods of time check the memory and dis",
    "start": "512159",
    "end": "514640"
  },
  {
    "text": "usage of your instances check any",
    "start": "514640",
    "end": "517518"
  },
  {
    "text": "available application and Os level logs",
    "start": "517519",
    "end": "520360"
  },
  {
    "text": "to get more insights into server",
    "start": "520360",
    "end": "522880"
  },
  {
    "text": "application Behavior verify if all the",
    "start": "522880",
    "end": "525959"
  },
  {
    "text": "dependencies for your server application",
    "start": "525959",
    "end": "528519"
  },
  {
    "text": "are working well and are not introducing",
    "start": "528519",
    "end": "531279"
  },
  {
    "text": "any undesired delay into request",
    "start": "531279",
    "end": "533399"
  },
  {
    "text": "processing adding more capacity in the",
    "start": "533399",
    "end": "535760"
  },
  {
    "text": "back end by provisioning more instances",
    "start": "535760",
    "end": "537959"
  },
  {
    "text": "behind the load balancer is one of the",
    "start": "537959",
    "end": "540120"
  },
  {
    "text": "ways to fix the capacity issue you can",
    "start": "540120",
    "end": "543320"
  },
  {
    "text": "also consider resizing the current",
    "start": "543320",
    "end": "545560"
  },
  {
    "text": "instances to higher capacity size",
    "start": "545560",
    "end": "548640"
  },
  {
    "text": "instances based on your analysis from",
    "start": "548640",
    "end": "551160"
  },
  {
    "text": "the server application side you can make",
    "start": "551160",
    "end": "553519"
  },
  {
    "text": "necessary changes into the number or",
    "start": "553519",
    "end": "555640"
  },
  {
    "text": "size of the backend instances along with",
    "start": "555640",
    "end": "558160"
  },
  {
    "text": "any changes required in the server",
    "start": "558160",
    "end": "560279"
  },
  {
    "text": "application logic so now you know how to",
    "start": "560279",
    "end": "563440"
  },
  {
    "start": "562000",
    "end": "585000"
  },
  {
    "text": "troubleshoot http503 errors return When",
    "start": "563440",
    "end": "567320"
  },
  {
    "text": "using classic load balancer thanks for",
    "start": "567320",
    "end": "569760"
  },
  {
    "text": "watching and happy cloud computing from",
    "start": "569760",
    "end": "572120"
  },
  {
    "text": "all of us here at",
    "start": "572120",
    "end": "574300"
  },
  {
    "text": "[Music]",
    "start": "574300",
    "end": "575320"
  },
  {
    "text": "[Applause]",
    "start": "575320",
    "end": "577080"
  },
  {
    "text": "[Music]",
    "start": "577080",
    "end": "580249"
  },
  {
    "text": "[Music]",
    "start": "582290",
    "end": "583519"
  },
  {
    "text": "AWS",
    "start": "583519",
    "end": "586519"
  }
]