[
  {
    "text": "[Music]",
    "start": "0",
    "end": "2990"
  },
  {
    "text": "hi today we're gonna talk about how to",
    "start": "2990",
    "end": "6150"
  },
  {
    "text": "run sequel server and docker containers",
    "start": "6150",
    "end": "8519"
  },
  {
    "text": "this is gonna be the first in a series",
    "start": "8519",
    "end": "10650"
  },
  {
    "text": "of videos that will show you how to do",
    "start": "10650",
    "end": "13170"
  },
  {
    "text": "that in AWS to start with we'll see how",
    "start": "13170",
    "end": "16740"
  },
  {
    "text": "we can run sequel server in a container",
    "start": "16740",
    "end": "18930"
  },
  {
    "text": "running inside Windows 10 and that's",
    "start": "18930",
    "end": "22890"
  },
  {
    "text": "what's actually on my laptop I have a",
    "start": "22890",
    "end": "24539"
  },
  {
    "text": "laptop here and I have Windows 10",
    "start": "24539",
    "end": "25949"
  },
  {
    "text": "installed on it you can do this using",
    "start": "25949",
    "end": "33630"
  },
  {
    "text": "windows powershell powershell core or",
    "start": "33630",
    "end": "36660"
  },
  {
    "text": "even windows command prompt your user",
    "start": "36660",
    "end": "44730"
  },
  {
    "text": "must have access to docker if I check",
    "start": "44730",
    "end": "51960"
  },
  {
    "text": "docker images you can see sequel server",
    "start": "51960",
    "end": "57180"
  },
  {
    "text": "is not installed the image is not",
    "start": "57180",
    "end": "59699"
  },
  {
    "text": "available on my laptop yet so where to",
    "start": "59699",
    "end": "63149"
  },
  {
    "text": "get that it's available in the docker",
    "start": "63149",
    "end": "65189"
  },
  {
    "text": "hub Microsoft publishes the latest",
    "start": "65189",
    "end": "67680"
  },
  {
    "text": "images on docker hub you can pull it",
    "start": "67680",
    "end": "71549"
  },
  {
    "text": "from there then you can of course upload",
    "start": "71549",
    "end": "75030"
  },
  {
    "text": "it in your private registry and",
    "start": "75030",
    "end": "76830"
  },
  {
    "text": "thereafter have it pulled from there if",
    "start": "76830",
    "end": "79070"
  },
  {
    "text": "you go to this Microsoft documentation",
    "start": "79070",
    "end": "81840"
  },
  {
    "text": "page you can see the commands over there",
    "start": "81840",
    "end": "84869"
  },
  {
    "text": "there's a command for PowerShell I'll",
    "start": "84869",
    "end": "87180"
  },
  {
    "text": "copy that and paste it here I want to",
    "start": "87180",
    "end": "94799"
  },
  {
    "text": "also change my password let's say p @ s",
    "start": "94799",
    "end": "98729"
  },
  {
    "text": "SW 0 rd the one-two-three-four bear in",
    "start": "98729",
    "end": "106950"
  },
  {
    "text": "mind this has to be a strong password if",
    "start": "106950",
    "end": "109200"
  },
  {
    "text": "you use a weak password it would throw",
    "start": "109200",
    "end": "111960"
  },
  {
    "text": "an error at startup and sequel server",
    "start": "111960",
    "end": "114090"
  },
  {
    "text": "container will not start up so it",
    "start": "114090",
    "end": "116549"
  },
  {
    "text": "definitely has to be a strong password",
    "start": "116549",
    "end": "120290"
  },
  {
    "text": "furthermore in production it's not good",
    "start": "122030",
    "end": "125010"
  },
  {
    "text": "practice to directly enter password",
    "start": "125010",
    "end": "126570"
  },
  {
    "text": "through command-line because it's very",
    "start": "126570",
    "end": "129990"
  },
  {
    "text": "easy for anyone to retrieve that",
    "start": "129990",
    "end": "131610"
  },
  {
    "text": "password from your shell history there",
    "start": "131610",
    "end": "135660"
  },
  {
    "text": "are better ways to do that in production",
    "start": "135660",
    "end": "137580"
  },
  {
    "text": "but here it's no big deal I'm just going",
    "start": "137580",
    "end": "139800"
  },
  {
    "text": "to demonstrate how to do that in your",
    "start": "139800",
    "end": "141810"
  },
  {
    "text": "dev laptop if you're using Windows 10",
    "start": "141810",
    "end": "143970"
  },
  {
    "text": "and the other point is to understand as",
    "start": "143970",
    "end": "147660"
  },
  {
    "text": "you can see the image is a linux image",
    "start": "147660",
    "end": "151320"
  },
  {
    "text": "it's not a Windows container it's",
    "start": "151320",
    "end": "153150"
  },
  {
    "text": "actually a Linux container and you can",
    "start": "153150",
    "end": "156240"
  },
  {
    "text": "run Linux containers on Windows 10 so",
    "start": "156240",
    "end": "159030"
  },
  {
    "text": "it's going to be the same image that you",
    "start": "159030",
    "end": "161130"
  },
  {
    "text": "would run in production",
    "start": "161130",
    "end": "162300"
  },
  {
    "text": "there's also another parameter that",
    "start": "162300",
    "end": "164760"
  },
  {
    "text": "determines the sequel server edition if",
    "start": "164760",
    "end": "168390"
  },
  {
    "text": "you go to this other page you can see",
    "start": "168390",
    "end": "176580"
  },
  {
    "text": "there's this MS sequel PID parameter",
    "start": "176580",
    "end": "179730"
  },
  {
    "text": "available and it's set to enterprise",
    "start": "179730",
    "end": "182280"
  },
  {
    "text": "here indicating Enterprise Edition but",
    "start": "182280",
    "end": "185670"
  },
  {
    "text": "if you don't pass that parameter if you",
    "start": "185670",
    "end": "188040"
  },
  {
    "text": "exclude that by default it is set to",
    "start": "188040",
    "end": "190739"
  },
  {
    "text": "developer edition and that's the free",
    "start": "190739",
    "end": "193500"
  },
  {
    "text": "edition you don't need a license to run",
    "start": "193500",
    "end": "195269"
  },
  {
    "text": "developer edition that's what I'm going",
    "start": "195269",
    "end": "197430"
  },
  {
    "text": "to use here so if I run this it can find",
    "start": "197430",
    "end": "203370"
  },
  {
    "text": "the image locally of course because I",
    "start": "203370",
    "end": "205890"
  },
  {
    "text": "didn't have it now it's pulling the",
    "start": "205890",
    "end": "207660"
  },
  {
    "text": "image from docker hub as you know docker",
    "start": "207660",
    "end": "212070"
  },
  {
    "text": "images are stored in different layers",
    "start": "212070",
    "end": "213780"
  },
  {
    "text": "because each layer is immutable so if",
    "start": "213780",
    "end": "218160"
  },
  {
    "text": "you make any changes in a container",
    "start": "218160",
    "end": "220560"
  },
  {
    "text": "that's running in your host instead of",
    "start": "220560",
    "end": "222510"
  },
  {
    "text": "changing the existing layer it creates",
    "start": "222510",
    "end": "225630"
  },
  {
    "text": "another layer on top of the previous",
    "start": "225630",
    "end": "228269"
  },
  {
    "text": "ones and that's how it maintains",
    "start": "228269",
    "end": "230610"
  },
  {
    "text": "immutability of those images once you",
    "start": "230610",
    "end": "235769"
  },
  {
    "text": "upload that image all the layers will be",
    "start": "235769",
    "end": "238620"
  },
  {
    "text": "uploaded and that's also another way to",
    "start": "238620",
    "end": "241890"
  },
  {
    "text": "reuse the existing images so if for",
    "start": "241890",
    "end": "245820"
  },
  {
    "text": "example here the sequel server images",
    "start": "245820",
    "end": "248250"
  },
  {
    "text": "installed on top of the Linux image",
    "start": "248250",
    "end": "250819"
  },
  {
    "text": "and Linux image is reused and if you",
    "start": "250819",
    "end": "253640"
  },
  {
    "text": "have other applications that are built",
    "start": "253640",
    "end": "255200"
  },
  {
    "text": "on top of the same Linux image they will",
    "start": "255200",
    "end": "258560"
  },
  {
    "text": "reuse the same layer you don't store the",
    "start": "258560",
    "end": "262490"
  },
  {
    "text": "same binaries several times separate for",
    "start": "262490",
    "end": "265520"
  },
  {
    "text": "each container and that's also another",
    "start": "265520",
    "end": "268639"
  },
  {
    "text": "benefit of running containers instead of",
    "start": "268639",
    "end": "271009"
  },
  {
    "text": "VMs because as you know for VMs",
    "start": "271009",
    "end": "273740"
  },
  {
    "text": "everything is repeated if you have two",
    "start": "273740",
    "end": "275930"
  },
  {
    "text": "VMs they will have completely separate",
    "start": "275930",
    "end": "278389"
  },
  {
    "text": "file systems completely separate",
    "start": "278389",
    "end": "280550"
  },
  {
    "text": "operating systems installed on each of",
    "start": "280550",
    "end": "282680"
  },
  {
    "text": "those it's taking a while to download",
    "start": "282680",
    "end": "284750"
  },
  {
    "text": "the image as you can see but this is",
    "start": "284750",
    "end": "288889"
  },
  {
    "text": "only the first time subsequent runs will",
    "start": "288889",
    "end": "292310"
  },
  {
    "text": "use the already stored already",
    "start": "292310",
    "end": "294560"
  },
  {
    "text": "downloaded image that is cached on the",
    "start": "294560",
    "end": "298160"
  },
  {
    "text": "localhost now of course there's another",
    "start": "298160",
    "end": "302120"
  },
  {
    "text": "way to because this is downloading the",
    "start": "302120",
    "end": "305000"
  },
  {
    "text": "image from docker hub that is through",
    "start": "305000",
    "end": "307820"
  },
  {
    "text": "the internet you can download this image",
    "start": "307820",
    "end": "310340"
  },
  {
    "text": "once and store it in your private",
    "start": "310340",
    "end": "312680"
  },
  {
    "text": "registry which is closer and inside your",
    "start": "312680",
    "end": "316400"
  },
  {
    "text": "internal network and again even for the",
    "start": "316400",
    "end": "319669"
  },
  {
    "text": "first time that the container is being",
    "start": "319669",
    "end": "321949"
  },
  {
    "text": "spun up on a host since it will fetch it",
    "start": "321949",
    "end": "325280"
  },
  {
    "text": "from a private registry from your local",
    "start": "325280",
    "end": "328009"
  },
  {
    "text": "network it'll be much faster to run it",
    "start": "328009",
    "end": "332800"
  },
  {
    "text": "[Music]",
    "start": "334190",
    "end": "362569"
  },
  {
    "text": "okay so now it's running let's have a",
    "start": "362569",
    "end": "365580"
  },
  {
    "text": "look",
    "start": "365580",
    "end": "366059"
  },
  {
    "text": "docker images Microsoft sequel server",
    "start": "366059",
    "end": "371059"
  },
  {
    "text": "2017 latest docker PS docker PS here",
    "start": "371059",
    "end": "383309"
  },
  {
    "text": "container is running it's been up for 19",
    "start": "383309",
    "end": "386939"
  },
  {
    "text": "seconds from the parameters I set the",
    "start": "386939",
    "end": "391439"
  },
  {
    "text": "port number to 14 33 that's the default",
    "start": "391439",
    "end": "395159"
  },
  {
    "text": "port number for sequel server database",
    "start": "395159",
    "end": "397189"
  },
  {
    "text": "first one is the container port second",
    "start": "397189",
    "end": "400379"
  },
  {
    "text": "one is the host port so it's binding the",
    "start": "400379",
    "end": "403019"
  },
  {
    "text": "container port 14 33 to host port 14 33",
    "start": "403019",
    "end": "407009"
  },
  {
    "text": "I can access the container and the",
    "start": "407009",
    "end": "410129"
  },
  {
    "text": "sequel server instance that's running",
    "start": "410129",
    "end": "411749"
  },
  {
    "text": "inside this container through port 14 33",
    "start": "411749",
    "end": "414929"
  },
  {
    "text": "of my hosts I don't have sequel server",
    "start": "414929",
    "end": "417449"
  },
  {
    "text": "installed on my local computer but I",
    "start": "417449",
    "end": "419369"
  },
  {
    "text": "have sequel server management studio",
    "start": "419369",
    "end": "421139"
  },
  {
    "text": "installed so now if I connect to",
    "start": "421139",
    "end": "425459"
  },
  {
    "text": "localhost",
    "start": "425459",
    "end": "426949"
  },
  {
    "text": "even though sequel server is not",
    "start": "426949",
    "end": "429089"
  },
  {
    "text": "installed since it's bound to the same",
    "start": "429089",
    "end": "431909"
  },
  {
    "text": "port of the container I'll be able to",
    "start": "431909",
    "end": "435419"
  },
  {
    "text": "connect to sequel server",
    "start": "435419",
    "end": "439729"
  },
  {
    "text": "I don't have any databases but of course",
    "start": "445320",
    "end": "459510"
  },
  {
    "text": "system databases are already there and I",
    "start": "459510",
    "end": "462300"
  },
  {
    "text": "can also create user databases creating",
    "start": "462300",
    "end": "465330"
  },
  {
    "text": "a user database let's call it a test",
    "start": "465330",
    "end": "473280"
  },
  {
    "text": "docker let's create a table",
    "start": "473280",
    "end": "487720"
  },
  {
    "text": "[Music]",
    "start": "487720",
    "end": "538940"
  },
  {
    "text": "there's our table and now we can insert",
    "start": "539110",
    "end": "542720"
  },
  {
    "text": "some rows inside it let's run a select",
    "start": "542720",
    "end": "562520"
  },
  {
    "text": "query there it is now we can stop this",
    "start": "562520",
    "end": "574310"
  },
  {
    "text": "container and see it what will happen",
    "start": "574310",
    "end": "576490"
  },
  {
    "text": "docker stop docker PS doctor no",
    "start": "576490",
    "end": "597980"
  },
  {
    "text": "containers are running but if I do",
    "start": "597980",
    "end": "601100"
  },
  {
    "text": "docker PS - a the same container is",
    "start": "601100",
    "end": "605990"
  },
  {
    "text": "still there but it's stopped",
    "start": "605990",
    "end": "607820"
  },
  {
    "text": "it's exited now if I disconnect my local",
    "start": "607820",
    "end": "612890"
  },
  {
    "text": "sequel server trying to connect again of",
    "start": "612890",
    "end": "618430"
  },
  {
    "text": "course I will not be able to connect",
    "start": "618430",
    "end": "622750"
  },
  {
    "text": "because my container is stopped now I go",
    "start": "622750",
    "end": "631610"
  },
  {
    "text": "back here",
    "start": "631610",
    "end": "634180"
  },
  {
    "text": "I'll do docker start yeah connect it",
    "start": "635560",
    "end": "682730"
  },
  {
    "text": "again my database is there my table is",
    "start": "682730",
    "end": "689120"
  },
  {
    "text": "also there let's see if the data is also",
    "start": "689120",
    "end": "692959"
  },
  {
    "text": "in its place yeah all the rows are still",
    "start": "692959",
    "end": "700670"
  },
  {
    "text": "there no difference at all now what",
    "start": "700670",
    "end": "703459"
  },
  {
    "text": "happened here all the changes that I",
    "start": "703459",
    "end": "709520"
  },
  {
    "text": "made are created inside the same",
    "start": "709520",
    "end": "711770"
  },
  {
    "text": "container inside this container ID and",
    "start": "711770",
    "end": "714910"
  },
  {
    "text": "that's a layer on top of the previous",
    "start": "714910",
    "end": "717500"
  },
  {
    "text": "image that was downloaded from docker",
    "start": "717500",
    "end": "719510"
  },
  {
    "text": "hub docker images I have this image",
    "start": "719510",
    "end": "727399"
  },
  {
    "text": "that's the base image on top of this a",
    "start": "727399",
    "end": "730779"
  },
  {
    "text": "new layer has been created which",
    "start": "730779",
    "end": "734120"
  },
  {
    "text": "includes the filesystem of my container",
    "start": "734120",
    "end": "737170"
  },
  {
    "text": "when I created my database all database",
    "start": "737170",
    "end": "740480"
  },
  {
    "text": "files were created inside this layer I",
    "start": "740480",
    "end": "743890"
  },
  {
    "text": "can also create another image from this",
    "start": "743890",
    "end": "746839"
  },
  {
    "text": "but that's not necessary as long as this",
    "start": "746839",
    "end": "750800"
  },
  {
    "text": "container layers available on my hosts",
    "start": "750800",
    "end": "752690"
  },
  {
    "text": "my files are also persisted in",
    "start": "752690",
    "end": "757180"
  },
  {
    "text": "production you would use some other",
    "start": "757180",
    "end": "759110"
  },
  {
    "text": "method to persist your database files",
    "start": "759110",
    "end": "761390"
  },
  {
    "text": "[Music]",
    "start": "761390",
    "end": "765319"
  },
  {
    "text": "it's also explained in this Microsoft",
    "start": "765319",
    "end": "768269"
  },
  {
    "text": "documentation page so if we go to",
    "start": "768269",
    "end": "774809"
  },
  {
    "text": "persist your data as you can see there",
    "start": "774809",
    "end": "777449"
  },
  {
    "text": "are two ways you can do that either",
    "start": "777449",
    "end": "779790"
  },
  {
    "text": "using a localhost directory as explained",
    "start": "779790",
    "end": "785879"
  },
  {
    "text": "here in this command with dash B and",
    "start": "785879",
    "end": "790379"
  },
  {
    "text": "mapping a host directory to ver up to ms",
    "start": "790379",
    "end": "792930"
  },
  {
    "text": "sequel that's the path inside the",
    "start": "792930",
    "end": "795930"
  },
  {
    "text": "container where a sequel server DB files",
    "start": "795930",
    "end": "798240"
  },
  {
    "text": "are stored and the second one is using",
    "start": "798240",
    "end": "803129"
  },
  {
    "text": "volume containers that means you first",
    "start": "803129",
    "end": "808139"
  },
  {
    "text": "define your volumes and then you can map",
    "start": "808139",
    "end": "811439"
  },
  {
    "text": "your volumes to the same path inside",
    "start": "811439",
    "end": "813660"
  },
  {
    "text": "your container and that's how easy it is",
    "start": "813660",
    "end": "818009"
  },
  {
    "text": "to run sequel server containers in the",
    "start": "818009",
    "end": "822839"
  },
  {
    "text": "next video I'll show you how to do that",
    "start": "822839",
    "end": "825629"
  },
  {
    "text": "in production and particularly in AWS",
    "start": "825629",
    "end": "829379"
  },
  {
    "text": "using kubernetes how you can run a",
    "start": "829379",
    "end": "831959"
  },
  {
    "text": "managed kubernetes cluster in AWS and",
    "start": "831959",
    "end": "834600"
  },
  {
    "text": "how to run sequel server on top of that",
    "start": "834600",
    "end": "837240"
  },
  {
    "text": "cluster thanks for watching",
    "start": "837240",
    "end": "839480"
  },
  {
    "text": "[Music]",
    "start": "839480",
    "end": "844070"
  }
]