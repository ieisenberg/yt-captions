[
  {
    "text": "right so by show of hands how many of you are new to microservices some of you",
    "start": "30",
    "end": "6810"
  },
  {
    "text": "yeah and how many of you think you need a better software architecture I was",
    "start": "6810",
    "end": "11910"
  },
  {
    "text": "hoping more hands but yeah that's good so why are we here talking about micro",
    "start": "11910",
    "end": "17609"
  },
  {
    "text": "services we sing a lot of customers doctor micro services have managed to",
    "start": "17609",
    "end": "23910"
  },
  {
    "text": "achieve benefits like increased pace of innovations and also improve on customer",
    "start": "23910",
    "end": "29970"
  },
  {
    "text": "satisfaction so we have a lot of content to go through so I will ask you to leave",
    "start": "29970",
    "end": "36000"
  },
  {
    "text": "your questions to the end make sure we have time to cover them my name is chemin Wong I'm a Solutions",
    "start": "36000",
    "end": "42390"
  },
  {
    "text": "Architect for Amazon Web Services AWS are being with the company for two and a half years I started my AWS career as a",
    "start": "42390",
    "end": "50610"
  },
  {
    "text": "professional services consultant in Australia so excuse my accent yes okay",
    "start": "50610",
    "end": "59940"
  },
  {
    "text": "and and I hope Australian customers embracing DevOps so I hope by the end of",
    "start": "59940",
    "end": "68400"
  },
  {
    "text": "the presentation you will walk away with a set of design principles that you can apply and first on micro services Jeff",
    "start": "68400",
    "end": "77549"
  },
  {
    "text": "and also consider AWS to make that architecture transformation from where",
    "start": "77549",
    "end": "83159"
  },
  {
    "text": "you are today to what you want to be easier so let's begin by talking about",
    "start": "83159",
    "end": "90780"
  },
  {
    "text": "the monolith and when I see the word monolith I can think of the death star",
    "start": "90780",
    "end": "97950"
  },
  {
    "text": "in Star Wars right any Star Wars fan okay that's not you know that giant guy",
    "start": "97950",
    "end": "104130"
  },
  {
    "text": "gigantic complex machine and with also tightly coupled systems so monolith can",
    "start": "104130",
    "end": "112560"
  },
  {
    "text": "be a good way when you're starting out because it is the simplest form of architecture and enables you to get that",
    "start": "112560",
    "end": "121229"
  },
  {
    "text": "minimal Viable Product out the door and get you to the market quicker in fact",
    "start": "121229",
    "end": "126409"
  },
  {
    "text": "amazon.com started out as a one big monolithic application with running a",
    "start": "126409",
    "end": "131640"
  },
  {
    "text": "web server talking regularly to the back-end database now of course when your application or your",
    "start": "131640",
    "end": "138400"
  },
  {
    "text": "company grows one of the speakings to slow you down and that's exactly what happened to amazon.com website you I",
    "start": "138400",
    "end": "146380"
  },
  {
    "text": "think was around year 2001 we added so many features your website that the code",
    "start": "146380",
    "end": "153730"
  },
  {
    "text": "base was written obidos I believe was began to sprawl and we then realized",
    "start": "153730",
    "end": "161050"
  },
  {
    "text": "that the monolithic architecture was the biggest bottleneck our developers couldn't integrate any more new features",
    "start": "161050",
    "end": "167440"
  },
  {
    "text": "to the website and they had difficulty understanding the data coming through from our e-commerce operations and also",
    "start": "167440",
    "end": "175210"
  },
  {
    "text": "they couldn't respond to the customer feedback quickly so you're probably all wondering who so what the Amazon do",
    "start": "175210",
    "end": "181270"
  },
  {
    "text": "right before we talk about that let's look at the challenges that you typically go through when you're dealing",
    "start": "181270",
    "end": "188440"
  },
  {
    "text": "with Michael monolithic software right so first thing is it's difficult to scale the part of",
    "start": "188440",
    "end": "197320"
  },
  {
    "text": "the application that you want to scale independently typically later they tend",
    "start": "197320",
    "end": "203080"
  },
  {
    "text": "to share resources with other parts of the application you don't know about and you tend to have long build test release",
    "start": "203080",
    "end": "211390"
  },
  {
    "text": "cycles and people just afraid to add new features because I don't know what the impact will be to other functionalities",
    "start": "211390",
    "end": "217660"
  },
  {
    "text": "and operations are nightmare because there is no isolation within a system so which means there's no clear",
    "start": "217660",
    "end": "224320"
  },
  {
    "text": "ownership and the monolithic code base is big and it's hard to maintain get",
    "start": "224320",
    "end": "231610"
  },
  {
    "text": "involved because when you touch it you touch the monitors as a whole and",
    "start": "231610",
    "end": "237600"
  },
  {
    "text": "there's not much of a developer freedom which means you know innovation would",
    "start": "237600",
    "end": "242620"
  },
  {
    "text": "takes a long time and then you don't respond to your customer feedback so the",
    "start": "242620",
    "end": "247840"
  },
  {
    "text": "lack of agility the lack of innovation what do you end up with frustrated customers right there's another thing",
    "start": "247840",
    "end": "255970"
  },
  {
    "text": "the model is development lifecycle so when you have so many developers they",
    "start": "255970",
    "end": "261669"
  },
  {
    "text": "say hundreds or even thousands and they all try to push changes down through single shared release pipeline you can",
    "start": "261669",
    "end": "270009"
  },
  {
    "text": "expect there will be a lot of frictions a lot of frictions in every point of your development lifecycle so during a",
    "start": "270009",
    "end": "279460"
  },
  {
    "text": "development your engineers will have the coordinate changes and know how to make",
    "start": "279460",
    "end": "284800"
  },
  {
    "text": "sure whatever features or changes they putting break someone else's code and",
    "start": "284800",
    "end": "291610"
  },
  {
    "text": "also you feel I want to say upgrade the shell library to take advantage of new",
    "start": "291610",
    "end": "297009"
  },
  {
    "text": "features they need to convince up other people to do good luck with that and if",
    "start": "297009",
    "end": "304539"
  },
  {
    "text": "you don't want to push a pigs to a new feature they need to merge the change in with other people that are resolved",
    "start": "304539",
    "end": "310990"
  },
  {
    "text": "changes and that this is something we call merge Fridays or merge weeks if you",
    "start": "310990",
    "end": "316449"
  },
  {
    "text": "media with that term and basically there's all the developers we spend the whole day you know testing components",
    "start": "316449",
    "end": "323590"
  },
  {
    "text": "and making sure they're ready for the next release and when you're lucky",
    "start": "323590",
    "end": "329050"
  },
  {
    "text": "enough to make it out the development lifecycle you have another another overhead which is pushing that changes",
    "start": "329050",
    "end": "335830"
  },
  {
    "text": "down to that sheer release pipeline and what happens there is you run a lot of",
    "start": "335830",
    "end": "340990"
  },
  {
    "text": "tests lots of testing although made a menu and just to make sure that there",
    "start": "340990",
    "end": "346870"
  },
  {
    "text": "are no regressions and then you have to deploy that entire monolithic",
    "start": "346870",
    "end": "353380"
  },
  {
    "text": "application into production okay to give",
    "start": "353380",
    "end": "360099"
  },
  {
    "text": "you the size of the overhead Amazon you should have a central team who's so job",
    "start": "360099",
    "end": "366580"
  },
  {
    "text": "was to push that of deploy a monolithic application into product so if your",
    "start": "366580",
    "end": "372760"
  },
  {
    "text": "company is going through growth you've try to innovate and compete these type of sluggishness you're just not going to",
    "start": "372760",
    "end": "378760"
  },
  {
    "text": "be acceptable and I touch on the terms clean so typically we see monolithic",
    "start": "378760",
    "end": "388960"
  },
  {
    "text": "design pattern that enables you to do software coupling into common places one",
    "start": "388960",
    "end": "394810"
  },
  {
    "text": "is share libraries when two teams are sharing other's library and plus some common libraries",
    "start": "394810",
    "end": "400550"
  },
  {
    "text": "and what happened is when one team makes a update to the library automatic breaks",
    "start": "400550",
    "end": "405919"
  },
  {
    "text": "the other the other teams code oh oh it was like if the team is doing",
    "start": "405919",
    "end": "411740"
  },
  {
    "text": "their software bills but they got blocked because they don't have the latest version of the other team's libraries yeah the others so database",
    "start": "411740",
    "end": "422780"
  },
  {
    "text": "schema levels so they're sharing that both things are sharing database schemer and again wanting updates is by adding a",
    "start": "422780",
    "end": "430699"
  },
  {
    "text": "new column that would break the other teams code now you understand the",
    "start": "430699",
    "end": "439250"
  },
  {
    "text": "challenges with monolithic software it's no surprise that amazon.com decided to",
    "start": "439250",
    "end": "446919"
  },
  {
    "text": "implement a mende to decompose the monolithic application and evolved",
    "start": "446919",
    "end": "452419"
  },
  {
    "text": "towards microservices a shared nothing architecture let's talk about",
    "start": "452419",
    "end": "457819"
  },
  {
    "text": "micro-service if you want you to look up the definition you can go on Wikipedia",
    "start": "457819",
    "end": "463210"
  },
  {
    "text": "but personally I like the definition from our vice-president of architecture",
    "start": "463210",
    "end": "470240"
  },
  {
    "text": "agent so calling to your agent micro-services is service oriented",
    "start": "470240",
    "end": "478009"
  },
  {
    "text": "architecture compulsive loosely coupled elements that have bound the context so",
    "start": "478009",
    "end": "484099"
  },
  {
    "text": "service or a sorry service-oriented architecture means that your people and",
    "start": "484099",
    "end": "490330"
  },
  {
    "text": "with many many services and all these services communicate each other over the",
    "start": "490330",
    "end": "495740"
  },
  {
    "text": "network to fulfill a goal and they are",
    "start": "495740",
    "end": "500900"
  },
  {
    "text": "loosely coupled it means that they",
    "start": "500900",
    "end": "505659"
  },
  {
    "text": "independently sorry the microphones going in now and they all have found the context the",
    "start": "506169",
    "end": "513570"
  },
  {
    "text": "what I mean is they are all self-contained they can coexist independently and have their own cycles",
    "start": "513570",
    "end": "523459"
  },
  {
    "text": "so what is a micro service look like it has a dollar store and it can be a",
    "start": "523459",
    "end": "531420"
  },
  {
    "text": "relational database management system or a no sequel database and your",
    "start": "531420",
    "end": "536850"
  },
  {
    "text": "application logic your business logic sits in somewhere is and represented by",
    "start": "536850",
    "end": "543540"
  },
  {
    "text": "your code or libraries and you expose that application logic through a set of",
    "start": "543540",
    "end": "549390"
  },
  {
    "text": "public API could be restful api so by way of design",
    "start": "549390",
    "end": "555839"
  },
  {
    "text": "micro services let your voice software coupling because now they are",
    "start": "555839",
    "end": "561450"
  },
  {
    "text": "self-contained they all independent from each other and the way they communicate is by each other's public API and as",
    "start": "561450",
    "end": "572880"
  },
  {
    "text": "your company grow and York application grows you may start having a ecosystem",
    "start": "572880",
    "end": "578940"
  },
  {
    "text": "or micro services so here is just an example at a high level what our ecosystem will look like this assume you",
    "start": "578940",
    "end": "586500"
  },
  {
    "text": "are building a restaurant application is restaurant nearby you for example you",
    "start": "586500",
    "end": "592079"
  },
  {
    "text": "start out with a restaurant micro servers and then you might consider all this add location let's add ordering",
    "start": "592079",
    "end": "598860"
  },
  {
    "text": "micro servers and payment and so on so all these micro services I'll collaborate with each other and talk to",
    "start": "598860",
    "end": "606180"
  },
  {
    "text": "each other by the public API to provide a application functionality in fact",
    "start": "606180",
    "end": "612720"
  },
  {
    "text": "that's exactly what how am is doc works so all these things that you see like",
    "start": "612720",
    "end": "618779"
  },
  {
    "text": "customer feedback shopping carts title reviews or not they all many many micro",
    "start": "618779",
    "end": "627390"
  },
  {
    "text": "services all talking to each other and ensuring that when you shop on Amazon",
    "start": "627390",
    "end": "632579"
  },
  {
    "text": "you have the best experience and that's a that's a shipping container I didn't I didn't know what he wasn't gonna look it",
    "start": "632579",
    "end": "638100"
  },
  {
    "text": "up I don't know why anybody want to buy a shipping container and price as well oh hey yeah",
    "start": "638100",
    "end": "648840"
  },
  {
    "text": "free shipping too so now we talk about micro-services white look looks like so",
    "start": "648840",
    "end": "655080"
  },
  {
    "text": "you might you're probably wondering um so if I move to micro-services what is a success look like there's its many ways",
    "start": "655080",
    "end": "663990"
  },
  {
    "text": "to measure success but here's a one time you can use so suppose you have",
    "start": "663990",
    "end": "670410"
  },
  {
    "text": "thousands of development teams they all creating highly affected or effective",
    "start": "670410",
    "end": "676110"
  },
  {
    "text": "micro services and they deploy that to their test production environments in a",
    "start": "676110",
    "end": "683430"
  },
  {
    "text": "continuous delivery process and what you get is a lot of deployments in fact 15",
    "start": "683430",
    "end": "689700"
  },
  {
    "text": "million deployments a year and that's what Amazon managed to hit in 2014 and",
    "start": "689700",
    "end": "695850"
  },
  {
    "text": "if I'm math is any good I think that equates to one point five deployments Oh every second one point five",
    "start": "695850",
    "end": "702840"
  },
  {
    "text": "deployments every second it's a lot of deployments anyone here heard of guilt",
    "start": "702840",
    "end": "710000"
  },
  {
    "text": "cool thank you I was hoping someone would guilt is a is",
    "start": "710000",
    "end": "716310"
  },
  {
    "text": "a company that sells luxury designer brains online and at last year's",
    "start": "716310",
    "end": "723990"
  },
  {
    "text": "reinvent about their journey from monolithic to micro services and it's",
    "start": "723990",
    "end": "730920"
  },
  {
    "text": "something interesting about guilt is how they have failed on every day and at",
    "start": "730920",
    "end": "736410"
  },
  {
    "text": "noon Eastern Standard Time and when the sales got life typically they their",
    "start": "736410",
    "end": "745410"
  },
  {
    "text": "traffic just spikes four hundred times their normal within a matter of seconds",
    "start": "745410",
    "end": "750600"
  },
  {
    "text": "right and they used to run a monolithic application written in rails and that",
    "start": "750600",
    "end": "757460"
  },
  {
    "text": "monolithic applications just couldn't scale to support this type of burst of",
    "start": "757460",
    "end": "762930"
  },
  {
    "text": "activity so then they made a change the architecture the mutual distributors",
    "start": "762930",
    "end": "768750"
  },
  {
    "text": "system based upon hundreds of micro services all running on aw",
    "start": "768750",
    "end": "775670"
  },
  {
    "text": "now see if you think about what approaches you can take to build your micro services applications on aw yes",
    "start": "776570",
    "end": "783829"
  },
  {
    "text": "I'm just going to go through a number of services for you to consider the first one is API gateway and it's a",
    "start": "783829",
    "end": "791730"
  },
  {
    "text": "it's quite an easy way to deploy your a your micro services when you publish",
    "start": "791730",
    "end": "798750"
  },
  {
    "text": "your API you you publish it of course we are world wide age locations so the",
    "start": "798750",
    "end": "805769"
  },
  {
    "text": "benefits of API gateway is well cases to your content so yeah I can it's",
    "start": "805769",
    "end": "812699"
  },
  {
    "text": "responsive of your micro service using cash and you provide it gives you",
    "start": "812699",
    "end": "819899"
  },
  {
    "text": "traffic throttling so you prevent our voids your packing system from being",
    "start": "819899",
    "end": "825089"
  },
  {
    "text": "overloaded and all the API calls and activities I get log to our Amazon",
    "start": "825089",
    "end": "831570"
  },
  {
    "text": "CloudWatch which is our more entering service and in integrates with lender functions so",
    "start": "831570",
    "end": "837230"
  },
  {
    "text": "in fact API gateway can abstract your back-end so your backing can be running",
    "start": "837230",
    "end": "843089"
  },
  {
    "text": "in lambda on ec2 or even ECS our container service offering and you can",
    "start": "843089",
    "end": "849600"
  },
  {
    "text": "run multiple versions of the same API which means they allows gives you the ability to make changes your API going",
    "start": "849600",
    "end": "857639"
  },
  {
    "text": "using different versions and it's fully managed means you don't run any server",
    "start": "857639",
    "end": "863540"
  },
  {
    "text": "high availability for all this l for you",
    "start": "863540",
    "end": "869959"
  },
  {
    "text": "Elastic Compute shall compute offering in the cloud you have complete control",
    "start": "870220",
    "end": "875389"
  },
  {
    "text": "of the amount CPU and memory and it",
    "start": "875389",
    "end": "880910"
  },
  {
    "text": "reduces time to obtain a book you serve instance because you can you can put the",
    "start": "880910",
    "end": "886009"
  },
  {
    "text": "server from Amazon machine image or aiming that you owned or you purchased our AWS market so with a mine you have",
    "start": "886009",
    "end": "895069"
  },
  {
    "text": "all that information to run",
    "start": "895069",
    "end": "899920"
  },
  {
    "text": "right oh good yeah",
    "start": "909180",
    "end": "914290"
  },
  {
    "text": "so the ami has all the information and configurations you need to run your soft race so you can put up your server",
    "start": "914290",
    "end": "920140"
  },
  {
    "text": "instance in a matter of minutes and we have many different type of instances",
    "start": "920140",
    "end": "925540"
  },
  {
    "text": "ranging ranging from computer storage autumn eyes memory optimized graphic optimized and depending on your use",
    "start": "925540",
    "end": "932080"
  },
  {
    "text": "cases and you only pay for what you use now I mention about our container",
    "start": "932080",
    "end": "939190"
  },
  {
    "text": "management service offering ECS is a high-performance container management service for running your docker",
    "start": "939190",
    "end": "944800"
  },
  {
    "text": "containers it has billing scheduler and so you can you can use the billing",
    "start": "944800",
    "end": "950290"
  },
  {
    "text": "schedule to spread your docker containers of course availability zones to have high availability and but you",
    "start": "950290",
    "end": "958540"
  },
  {
    "text": "can also write your own schedule if you are for the challenge or use the party scheduler like other",
    "start": "958540",
    "end": "964210"
  },
  {
    "text": "services ECS integrates quite well with the rest of the ecosystem on AWS for",
    "start": "964210",
    "end": "969790"
  },
  {
    "text": "example a lossy load balancer and a lossy blocks storage which is our",
    "start": "969790",
    "end": "975100"
  },
  {
    "text": "persistent storage there is no additional charge for using ECS we also",
    "start": "975100",
    "end": "981100"
  },
  {
    "text": "offer a container registry service called ECR that you can use to you know",
    "start": "981100",
    "end": "987370"
  },
  {
    "text": "maintain deploying your docking images straight from that registry so I mention",
    "start": "987370",
    "end": "993400"
  },
  {
    "text": "about them then they let you run code without managing servers so what how it",
    "start": "993400",
    "end": "1000600"
  },
  {
    "text": "works is you upload your application code to lambda and that can be written",
    "start": "1000600",
    "end": "1006300"
  },
  {
    "text": "in kampala language languages like Java or.net or interpreter languages like",
    "start": "1006300",
    "end": "1014220"
  },
  {
    "text": "node.js and Python you upload that you named our and then you step settle and",
    "start": "1014220",
    "end": "1020280"
  },
  {
    "text": "then the function to be triggered from other services",
    "start": "1020280",
    "end": "1025339"
  },
  {
    "text": "yep okay cool in lambda for lambda will we scale for",
    "start": "1041010",
    "end": "1048428"
  },
  {
    "text": "you so if you keep a lambda function status name a CC lambda will replicate",
    "start": "1048429",
    "end": "1053530"
  },
  {
    "text": "your functions to scale including to the incoming events and as I mentioned you",
    "start": "1053530",
    "end": "1059770"
  },
  {
    "text": "don't need to provision any infrastructure and you pay only for what you use and it comes with sub-second",
    "start": "1059770",
    "end": "1065950"
  },
  {
    "text": "metering DynamoDB is our no sequel database service offering you know it's",
    "start": "1065950",
    "end": "1073360"
  },
  {
    "text": "capable Henning handling any amount of data so the behind-the-scene DynamoDB",
    "start": "1073360",
    "end": "1081640"
  },
  {
    "text": "will provision machine resources and to make sure it meets your storage",
    "start": "1081640",
    "end": "1086830"
  },
  {
    "text": "requirements it's highly durable so again the DynamoDB will replicate your",
    "start": "1086830",
    "end": "1092440"
  },
  {
    "text": "data of course three facilities we think a given AWS region and is using SSD",
    "start": "1092440",
    "end": "1099340"
  },
  {
    "text": "storage and simple and cost-effective right so if you're thinking building a",
    "start": "1099340",
    "end": "1106450"
  },
  {
    "text": "microservice application AWS a typical architecture leveraging the some of the",
    "start": "1106450",
    "end": "1112990"
  },
  {
    "text": "services I just mentioned will look like this and what you need to start with is looking at the the flow of your API call",
    "start": "1112990",
    "end": "1120730"
  },
  {
    "text": "starting from the ill left right you have your clients that could be mobile",
    "start": "1120730",
    "end": "1125950"
  },
  {
    "text": "apps where apps or some packing servers and the request will first hit I'll call",
    "start": "1125950",
    "end": "1132040"
  },
  {
    "text": "from aged locations and then CloudFront will then reroute that request to the",
    "start": "1132040",
    "end": "1138910"
  },
  {
    "text": "API gateway in your customers region and API gateway were first looking to use",
    "start": "1138910",
    "end": "1145690"
  },
  {
    "text": "cache if the record is not there what it does is you broker that request to the",
    "start": "1145690",
    "end": "1151150"
  },
  {
    "text": "backend when your application logic is running from and that could be name the function or ECG or ECS and then",
    "start": "1151150",
    "end": "1161040"
  },
  {
    "text": "your your your back hands your micro-services will then talk to you the DynamoDB for example and then return",
    "start": "1161040",
    "end": "1167940"
  },
  {
    "text": "that content back to the client and all these the API calls will get log into",
    "start": "1167940",
    "end": "1173160"
  },
  {
    "text": "our Amazon call watch monitoring service so I know a company called check tax and",
    "start": "1173160",
    "end": "1181320"
  },
  {
    "text": "they actually built the air they micro services just by using the service approach and instable approach is",
    "start": "1181320",
    "end": "1188010"
  },
  {
    "text": "actually a good way to think about micro services at the start and that company is able to get all the benefits or micro",
    "start": "1188010",
    "end": "1195450"
  },
  {
    "text": "services and still be able to keep a team of less than 10 today so we're",
    "start": "1195450",
    "end": "1202440"
  },
  {
    "text": "gonna switch gear and talk about some of the best practices we have seen I mean I mean different companies I have something that works for them but these",
    "start": "1202440",
    "end": "1209700"
  },
  {
    "text": "are some of the big ones first thing micro services only rely on each other's public API so I mentioned is the",
    "start": "1209700",
    "end": "1217560"
  },
  {
    "text": "multiple times now so you know you have two micro services and they they should really talk to each other by the public",
    "start": "1217560",
    "end": "1224640"
  },
  {
    "text": "API so if service a once you talk your service B's data store",
    "start": "1224640",
    "end": "1229920"
  },
  {
    "text": "that's the anti-pattern right so you",
    "start": "1229920",
    "end": "1235230"
  },
  {
    "text": "always have to talk to the other services API even if you want to get the",
    "start": "1235230",
    "end": "1240390"
  },
  {
    "text": "data and you know she also think about you evolve your API in a backward",
    "start": "1240390",
    "end": "1245670"
  },
  {
    "text": "compatible way and then document and communicate during upgrades so what I",
    "start": "1245670",
    "end": "1251790"
  },
  {
    "text": "mean by that is issue you can think about some kind of versioning strategy and here we're just showcasing one of",
    "start": "1251790",
    "end": "1258960"
  },
  {
    "text": "one of the strategies it's called semantic versioning and the",
    "start": "1258960",
    "end": "1264300"
  },
  {
    "text": "reason why you want to have a version strategy is because if you think about the public API is actually a contract",
    "start": "1264300",
    "end": "1271520"
  },
  {
    "text": "between your micro services and its client so once that API is released you",
    "start": "1271520",
    "end": "1278430"
  },
  {
    "text": "need to keep it maintained as long as your clients rely on it so if I'm gonna",
    "start": "1278430",
    "end": "1283740"
  },
  {
    "text": "make a change to the the API say going for from version 1.0",
    "start": "1283740",
    "end": "1288960"
  },
  {
    "text": "to version 1.1 let's consider a minor version change where I'm adding a",
    "start": "1288960",
    "end": "1294360"
  },
  {
    "text": "functionality in a backwards compatible way but if I'm going from version one to",
    "start": "1294360",
    "end": "1300509"
  },
  {
    "text": "version two that's a major version change and I'm and that that's in",
    "start": "1300509",
    "end": "1306840"
  },
  {
    "text": "comeback with incompatible API change and you may probably have patches and",
    "start": "1306840",
    "end": "1311940"
  },
  {
    "text": "that's impasses in terms of versioning it has to be backwards compatible as",
    "start": "1311940",
    "end": "1317369"
  },
  {
    "text": "well right the second best practice is use the right tool for the job",
    "start": "1317369",
    "end": "1324499"
  },
  {
    "text": "if animation alia micro-service is all independent from each other they still contain so here you know service a again",
    "start": "1324499",
    "end": "1332429"
  },
  {
    "text": "talking to service B and service a maybe you know passing some data over to",
    "start": "1332429",
    "end": "1338369"
  },
  {
    "text": "service B to store information and it it doesn't matter like how the service Li",
    "start": "1338369",
    "end": "1345749"
  },
  {
    "text": "you want to store our data is completely up to what was this what is the right fees for your business so if you think",
    "start": "1345749",
    "end": "1353369"
  },
  {
    "text": "no sequel database like dynamo DB makes sense use dynamodb if you want to add a search component to your micro service",
    "start": "1353369",
    "end": "1361139"
  },
  {
    "text": "you may consider our eyelashes elastic search service which is a managed",
    "start": "1361139",
    "end": "1366779"
  },
  {
    "text": "service offering running running alasa searching in the AWS cloud and if you're",
    "start": "1366779",
    "end": "1374489"
  },
  {
    "text": "storing a structured structured data like complete the customer customer",
    "start": "1374489",
    "end": "1380429"
  },
  {
    "text": "orders then you might make sense to use a relational database like RDS or aura",
    "start": "1380429",
    "end": "1387919"
  },
  {
    "text": "so when comes to programming frameworks you should also embrace polyglot programming preparing frameworks so one",
    "start": "1388580",
    "end": "1396119"
  },
  {
    "text": "that means I think the coined by the a guy named Neil Ford who says that when",
    "start": "1396119",
    "end": "1401970"
  },
  {
    "text": "you develop applications you should consider using multiple different programming languages because different",
    "start": "1401970",
    "end": "1407309"
  },
  {
    "text": "languages are suitable for tackling different problem so you feel your team",
    "start": "1407309",
    "end": "1414120"
  },
  {
    "text": "it's comfortable working with Java use Java if they're comfortable using no",
    "start": "1414120",
    "end": "1419550"
  },
  {
    "text": "JSU's no js' right so use the right tool for the job is the key and the next best",
    "start": "1419550",
    "end": "1426540"
  },
  {
    "text": "practice is secure your services now",
    "start": "1426540",
    "end": "1431960"
  },
  {
    "text": "this whole slides talking about security and we can have a very extensive discussion on security but the way I",
    "start": "1431960",
    "end": "1437940"
  },
  {
    "text": "like to think about it security is no it's not unusual or any different in AWS but that means you have",
    "start": "1437940",
    "end": "1446700"
  },
  {
    "text": "to think about defense-in-depth so I'd apply defense at every level and on AWS",
    "start": "1446700",
    "end": "1451770"
  },
  {
    "text": "we have features are available to you to do that free of charge and you can look",
    "start": "1451770",
    "end": "1458160"
  },
  {
    "text": "at networks to never label security like BPC virtual private cloud security",
    "start": "1458160",
    "end": "1463500"
  },
  {
    "text": "groups they were ACLs and encryption and you can also apply onion policies to",
    "start": "1463500",
    "end": "1471420"
  },
  {
    "text": "lock down who has access to what in AWS and there are other features at a",
    "start": "1471420",
    "end": "1476610"
  },
  {
    "text": "service server and container level as well as the application level that you need to consider and whenever possible",
    "start": "1476610",
    "end": "1484220"
  },
  {
    "text": "leverage manage service like API gateway folio for your as a front door for your",
    "start": "1484220",
    "end": "1489480"
  },
  {
    "text": "micro service because of reason I mentioned before about API throttling so",
    "start": "1489480",
    "end": "1494850"
  },
  {
    "text": "a you know API gateway can protect your back-end from being overloaded by",
    "start": "1494850",
    "end": "1500400"
  },
  {
    "text": "traffic and also API gateway can help you to protect prevent against DDoS",
    "start": "1500400",
    "end": "1505800"
  },
  {
    "text": "attacks and when you think about authentication authorization you need to do that every way as well so either",
    "start": "1505800",
    "end": "1513300"
  },
  {
    "text": "let's form client to service or service to service API gateways to post cus",
    "start": "1513300",
    "end": "1518580"
  },
  {
    "text": "custom name des authorizers which allows you to implement different verification",
    "start": "1518580",
    "end": "1523890"
  },
  {
    "text": "authentication authorization strategy like JSON web tokens or oath but you can",
    "start": "1523890",
    "end": "1530520"
  },
  {
    "text": "also use I am based authentication with API gateway then which you know it",
    "start": "1530520",
    "end": "1536100"
  },
  {
    "text": "allows you to define a policy lock train specific privileges that your micro services need to do its job",
    "start": "1536100",
    "end": "1542720"
  },
  {
    "text": "and secrets management you can store secrets in a strip buckers you make sure",
    "start": "1542720",
    "end": "1548390"
  },
  {
    "text": "your encrypted before you upload your s3 or use server-side encryption available from s3 and they also apply I am policy",
    "start": "1548390",
    "end": "1556640"
  },
  {
    "text": "to control who has access to last secret you can also use other open-source tools",
    "start": "1556640",
    "end": "1561680"
  },
  {
    "text": "if you want and last but not least is be",
    "start": "1561680",
    "end": "1566750"
  },
  {
    "text": "a good citizen within a ecosystem so what baile",
    "start": "1566750",
    "end": "1573590"
  },
  {
    "text": "I mean Communications is the key as you continue to grow your micro services",
    "start": "1573590",
    "end": "1578960"
  },
  {
    "text": "application so here we have a service a and B and service a is asking beta we",
    "start": "1578960",
    "end": "1584810"
  },
  {
    "text": "need to we need to call your micro service to fetch restaurant details and service B with host back several",
    "start": "1584810",
    "end": "1592910"
  },
  {
    "text": "questions to a that what ApS you need to call what they made permission you you",
    "start": "1592910",
    "end": "1598370"
  },
  {
    "text": "need and also what are your request response nemeth right so really if you",
    "start": "1598370",
    "end": "1608060"
  },
  {
    "text": "think about it you need monitoring you need logging you need tracing and the",
    "start": "1608060",
    "end": "1613670"
  },
  {
    "text": "the principle here is if it moves you logged and tracked right but one",
    "start": "1613670",
    "end": "1619880"
  },
  {
    "text": "recommending you to do is spending more time on analyzing and understanding the",
    "start": "1619880",
    "end": "1626990"
  },
  {
    "text": "metrics that you are collecting and making sure there's a clear alignment between your business goals and your",
    "start": "1626990",
    "end": "1633650"
  },
  {
    "text": "micro services so for example you for business with customers they care about",
    "start": "1633650",
    "end": "1641150"
  },
  {
    "text": "how easy it is to use the single click ordering like you can do on Amazon website and then if that functionality",
    "start": "1641150",
    "end": "1648560"
  },
  {
    "text": "is slow to respond you know your customer is not gonna use it and one way",
    "start": "1648560",
    "end": "1655430"
  },
  {
    "text": "of it and your understanding that online is to come up with share matrix and here I'm just giving you a couple like real",
    "start": "1655430",
    "end": "1662120"
  },
  {
    "text": "quest time time to first byte but again it's understanding what really matters to your business and custom",
    "start": "1662120",
    "end": "1668510"
  },
  {
    "text": "and you should also consider collecting user experience metrics like status",
    "start": "1668510",
    "end": "1674510"
  },
  {
    "text": "codes latency and layout this distributed tracing tools on the market",
    "start": "1674510",
    "end": "1681320"
  },
  {
    "text": "that you can use to trace the flow of the API requests so use that to your",
    "start": "1681320",
    "end": "1687230"
  },
  {
    "text": "advantage okay so finally I think you",
    "start": "1687230",
    "end": "1693530"
  },
  {
    "text": "know the journey from one of the monolithic to micro-services is it's not easy you need to expect a",
    "start": "1693530",
    "end": "1702050"
  },
  {
    "text": "lot of challenges and also it requires additional work both technically and",
    "start": "1702050",
    "end": "1709030"
  },
  {
    "text": "culturally to make micro services a success and I'm just outlining some of",
    "start": "1709030",
    "end": "1714800"
  },
  {
    "text": "the challenges here so first Union on send your business domains all right and you know factoring complexity",
    "start": "1714800",
    "end": "1722300"
  },
  {
    "text": "complexities like service discovery eventual consistency and also anticipate",
    "start": "1722300",
    "end": "1728750"
  },
  {
    "text": "there are lots a lots moving parts that we create you to increase your coordination effort and also it will you",
    "start": "1728750",
    "end": "1735920"
  },
  {
    "text": "know there's a complicity around testing deploying and really it's it's an",
    "start": "1735920",
    "end": "1741050"
  },
  {
    "text": "architectural transformation but is it is also a cultural transformation so you need to think about how your team",
    "start": "1741050",
    "end": "1747230"
  },
  {
    "text": "operate and how they solve problems as they go",
    "start": "1747230",
    "end": "1752110"
  },
  {
    "text": "okay so we cover today the evolution form only things to microservices we",
    "start": "1755250",
    "end": "1762270"
  },
  {
    "text": "talk about why you know companies of all sizes adopting up because they're seeing the benefits of faster inflammation and",
    "start": "1762270",
    "end": "1769200"
  },
  {
    "text": "improve customer satisfaction so if you're thinking about micro services as",
    "start": "1769200",
    "end": "1774720"
  },
  {
    "text": "the right architecture for you to go in forward we have a lot of resources available but we if you have any",
    "start": "1774720",
    "end": "1783990"
  },
  {
    "text": "questions I'm happy to detect them we also have architecture booth at the",
    "start": "1783990",
    "end": "1789179"
  },
  {
    "text": "front when you're walking you're right so if I can answer your questions now please go ask one of our architects any",
    "start": "1789179",
    "end": "1797549"
  },
  {
    "text": "questions it's good all right",
    "start": "1797549",
    "end": "1802279"
  }
]