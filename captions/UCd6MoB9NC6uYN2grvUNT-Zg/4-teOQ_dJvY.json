[
  {
    "start": "0",
    "end": "82000"
  },
  {
    "text": "Welcome to 'This is My Architecture.' ",
    "start": "7039",
    "end": "8835"
  },
  {
    "text": "Today I'm joined by Simon\nfrom SBB.",
    "start": "8835",
    "end": "12510"
  },
  {
    "text": "- Hey, Simon.\n- Hello, Ramon.",
    "start": "12510",
    "end": "15869"
  },
  {
    "text": "Simon, tell us about SBB.",
    "start": "15869",
    "end": "17824"
  },
  {
    "text": "SBB is the Swiss Federal Railway Company",
    "start": "17824",
    "end": "21136"
  },
  {
    "text": "and its subsidiary, SBB Cargo,\nis the main freight company in Switzerland.",
    "start": "21136",
    "end": "28094"
  },
  {
    "text": "And that's where we had this project here.",
    "start": "28094",
    "end": "31890"
  },
  {
    "text": "Okay, so you brought us\na nice architecture diagram here.",
    "start": "31890",
    "end": "35371"
  },
  {
    "text": "Maybe tell us, in the first place,\nwhat was the project about.",
    "start": "35371",
    "end": "38934"
  },
  {
    "text": "Every time a freight train is leaving,",
    "start": "38934",
    "end": "44137"
  },
  {
    "text": "one person has to walk all around the train\nfor inspection.",
    "start": "44138",
    "end": "48310"
  },
  {
    "text": "And for a long train, \nit can take more than half an hour.",
    "start": "48310",
    "end": "52997"
  },
  {
    "text": "And with this project,\nwe wanted to reduce this time,",
    "start": "52997",
    "end": "56170"
  },
  {
    "text": "and we do it by putting sensors\non the train,",
    "start": "56170",
    "end": "59333"
  },
  {
    "text": "putting sensors along the track.",
    "start": "59333",
    "end": "62043"
  },
  {
    "text": "And with this data we collect,",
    "start": "62043",
    "end": "66316"
  },
  {
    "text": "we try to get a good view\nof the condition of the train",
    "start": "66316",
    "end": "70743"
  },
  {
    "text": "before the person\nthat is going there.",
    "start": "70743",
    "end": "72772"
  },
  {
    "text": "And then they only can focus\non very few critical parts",
    "start": "72773",
    "end": "77826"
  },
  {
    "text": "so the inspection is done\nwithin minutes.",
    "start": "77826",
    "end": "81398"
  },
  {
    "text": "Okay, very cool.",
    "start": "81399",
    "end": "83215"
  },
  {
    "start": "82000",
    "end": "193000"
  },
  {
    "text": "So all of this sensor data\nis flowing into your system,",
    "start": "83215",
    "end": "86740"
  },
  {
    "text": "maybe you can walk us\nthrough all of this.",
    "start": "86740",
    "end": "88896"
  },
  {
    "text": "Yes, so Producer,\nlet's take the locomotive.",
    "start": "88897",
    "end": "93166"
  },
  {
    "text": "There is a lot of data",
    "start": "93166",
    "end": "95402"
  },
  {
    "text": "and this data we want to capture\nto bring into our digital twin.",
    "start": "95402",
    "end": "100751"
  },
  {
    "text": "And the Producer is sending data\nin any kind of format.",
    "start": "100751",
    "end": "109642"
  },
  {
    "text": "So the Lambda is just taking the data\nand forwards it into Kinesis.",
    "start": "109642",
    "end": "116118"
  },
  {
    "text": "On a locomotive, there, we get about\nthree million samples a day.",
    "start": "117983",
    "end": "123837"
  },
  {
    "text": "But we are actually only interested\nin very few parts.",
    "start": "123837",
    "end": "126782"
  },
  {
    "text": "So we use Kinesis Analytics\nto reduce it,",
    "start": "126782",
    "end": "130558"
  },
  {
    "text": "to filter out to just the data we need,",
    "start": "130559",
    "end": "133236"
  },
  {
    "text": "and then we forward it into\na new Kinesis stream.",
    "start": "133236",
    "end": "138187"
  },
  {
    "text": "The target is DynamoDB,",
    "start": "140030",
    "end": "141644"
  },
  {
    "text": "so that this Lambda\nis just managing the data in and out of it.",
    "start": "141644",
    "end": "146354"
  },
  {
    "text": "So Kinesis stream, \nthe data is caught by the Lambda,",
    "start": "146354",
    "end": "150429"
  },
  {
    "text": "and then it's pushed in the right format\ninto the DynamoDB.",
    "start": "150429",
    "end": "155930"
  },
  {
    "text": "On the other side, you have consumers,\nfor example, an algorithm.",
    "start": "156861",
    "end": "161234"
  },
  {
    "text": "The algorithm is deciding,\nis this train now in a good condition or not?",
    "start": "161234",
    "end": "167256"
  },
  {
    "text": "And this algorithm wants the data,",
    "start": "167256",
    "end": "173079"
  },
  {
    "text": "so we have this interface,\nthe API Gateway,",
    "start": "173079",
    "end": "177737"
  },
  {
    "text": "where it asks for the data,",
    "start": "177737",
    "end": "180340"
  },
  {
    "text": "but, finally, the data is then,\nagain, through the same Lambda,",
    "start": "180340",
    "end": "184793"
  },
  {
    "text": "pushed to the gateway\nand then to the consumer.",
    "start": "184794",
    "end": "191202"
  },
  {
    "text": "Okay, and so, this is all highly automated",
    "start": "191202",
    "end": "195958"
  },
  {
    "start": "193000",
    "end": "314000"
  },
  {
    "text": "and it accelerates the process\nthat you are going through many times a day, I would assume.",
    "start": "195958",
    "end": "200609"
  },
  {
    "text": "So what were the top priorities,\ndesigning the system.",
    "start": "200609",
    "end": "203999"
  },
  {
    "text": "So the business had a clear idea\nwhat they wanted to achieve,",
    "start": "203999",
    "end": "208049"
  },
  {
    "text": "but we had actually, in the project,\nno idea how we would get there.",
    "start": "208718",
    "end": "211213"
  },
  {
    "text": "So what data do we need,\nwhat are the algorithms we are going to use?",
    "start": "211213",
    "end": "217203"
  },
  {
    "text": "So I had to design\na very flexible architecture.",
    "start": "217203",
    "end": "221831"
  },
  {
    "text": "And I knew it will have \na lot of different data sources",
    "start": "221831",
    "end": "228635"
  },
  {
    "text": "so I want to have a standardized way",
    "start": "228635",
    "end": "231284"
  },
  {
    "text": "because the maintenance\nof the whole system should be low.",
    "start": "231284",
    "end": "235056"
  },
  {
    "text": "So for example, let's say,\nhere, we have the data from the locomotive.",
    "start": "235056",
    "end": "241768"
  },
  {
    "text": "We have another data source\nsensors along the track.",
    "start": "241768",
    "end": "246160"
  },
  {
    "text": "And now we want to get this data in\nto the digital twin.",
    "start": "246160",
    "end": "250979"
  },
  {
    "text": "And what all we have to do is\ncopy-paste this stream here.",
    "start": "250979",
    "end": "257342"
  },
  {
    "text": "So all what is in this dash box,\nwe just copy-paste.",
    "start": "257342",
    "end": "265406"
  },
  {
    "text": "And  it can do copy-paste easily",
    "start": "265406",
    "end": "267393"
  },
  {
    "text": "because everything what is here\nis infrastructure as code.",
    "start": "267393",
    "end": "271576"
  },
  {
    "text": "And so, we just copy the Lambda,",
    "start": "271576",
    "end": "275479"
  },
  {
    "text": "so the infrastructure, stream,\nKinesis Analytics.",
    "start": "275479",
    "end": "279911"
  },
  {
    "text": "Now we only have to modify\nthe Lambda",
    "start": "279911",
    "end": "282878"
  },
  {
    "text": "because here the data\ncan come in a completely different way.",
    "start": "282878",
    "end": "286393"
  },
  {
    "text": "So the Lambda is getting the data,",
    "start": "286393",
    "end": "290542"
  },
  {
    "text": "and at the end, it's, again,\npushed into the same Kinesis stream.",
    "start": "290542",
    "end": "293925"
  },
  {
    "text": "So here we have all the data\nnormalized, harmonized,",
    "start": "293925",
    "end": "297759"
  },
  {
    "text": "and can be used, for example,\nin this case,",
    "start": "297759",
    "end": "301638"
  },
  {
    "text": "it's a digital twin.",
    "start": "301638",
    "end": "304683"
  },
  {
    "text": "And even if, for example,\nexchange digital twin need another concept,",
    "start": "304683",
    "end": "308778"
  },
  {
    "text": "you just connect it here to this stream.",
    "start": "308778",
    "end": "311478"
  },
  {
    "text": "And, yeah, we are very flexible\nin that way.",
    "start": "311478",
    "end": "314250"
  },
  {
    "start": "314000",
    "end": "395000"
  },
  {
    "text": "So it's very easy for you to add\nmultiple of those Producer pipelines",
    "start": "314250",
    "end": "319045"
  },
  {
    "text": "with different formats of data.",
    "start": "319045",
    "end": "321118"
  },
  {
    "text": "And you mentioned Lambda for example,",
    "start": "321118",
    "end": "324436"
  },
  {
    "text": "and I see a few other serverless\nand fully managed service",
    "start": "324436",
    "end": "327348"
  },
  {
    "text": "on the blackboard here.",
    "start": "327348",
    "end": "328850"
  },
  {
    "text": "Why did you choose those types of services",
    "start": "328850",
    "end": "332018"
  },
  {
    "text": "in comparison to \na more traditional, EC2-based architecture?",
    "start": "332018",
    "end": "337632"
  },
  {
    "text": "As mentioned, one of our priorities",
    "start": "338761",
    "end": "343663"
  },
  {
    "text": "is to have the least operations as possible",
    "start": "343663",
    "end": "346003"
  },
  {
    "text": "because we're in a very small team",
    "start": "346003",
    "end": "348097"
  },
  {
    "text": "and we wanted to concentrate \nreally on the business logic",
    "start": "348097",
    "end": "351649"
  },
  {
    "text": "to bring the data to the business.",
    "start": "351649",
    "end": "354238"
  },
  {
    "text": "And we didn't want to manage\nservers, operating system, or anything like that",
    "start": "354239",
    "end": "359841"
  },
  {
    "text": "because AWS did the servicing for us.",
    "start": "359841",
    "end": "362843"
  },
  {
    "text": "And for example, Lambda, \nthe data that is modified",
    "start": "362843",
    "end": "369004"
  },
  {
    "text": "or transformed,",
    "start": "369004",
    "end": "371441"
  },
  {
    "text": "that's just a few lines of code.",
    "start": "371441",
    "end": "373730"
  },
  {
    "text": "There is no advantage \nhaving a large setup for that.",
    "start": "373730",
    "end": "378672"
  },
  {
    "text": "So very little maintenance overhead,\nso to say.",
    "start": "378672",
    "end": "381062"
  },
  {
    "text": "Absolutely.",
    "start": "381062",
    "end": "382112"
  },
  {
    "text": "Awesome. Thank you for sharing, Simon.",
    "start": "382112",
    "end": "384425"
  },
  {
    "text": "You're welcome. Thank you.",
    "start": "384425",
    "end": "386332"
  },
  {
    "text": "And thanks for watching 'This is My Architecture.'",
    "start": "386333",
    "end": "388484"
  }
]