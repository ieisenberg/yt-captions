[
  {
    "start": "0",
    "end": "15000"
  },
  {
    "text": "Welcome to 'This Is My Architecture.'\nI'm Benjamin from AWS.",
    "start": "6389",
    "end": "9855"
  },
  {
    "text": "We are here in Tel Aviv, Israel.",
    "start": "9855",
    "end": "12000"
  },
  {
    "text": "Today I'm joined by Tom from Wix.\nHi, Tom.",
    "start": "12001",
    "end": "14324"
  },
  {
    "text": "-Hi Benjamin.\n-Thanks for joining us.",
    "start": "14324",
    "end": "15819"
  },
  {
    "start": "15000",
    "end": "61000"
  },
  {
    "text": "-Thank you for having me. \n-Tom, tell us a little bit about what Wix does.",
    "start": "15819",
    "end": "19348"
  },
  {
    "text": "As you know, Wix is an online presence platform \nserving about 5% of the world's websites",
    "start": "19348",
    "end": "24505"
  },
  {
    "text": "with over 700 million unique users per month.",
    "start": "24505",
    "end": "27894"
  },
  {
    "text": "Okay, so right off the bat you're \noperating at quite a bit of scale.",
    "start": "27895",
    "end": "31495"
  },
  {
    "text": "-Yeah, it's high scale. \n-And today we wanted to talk about your SLED system.",
    "start": "31495",
    "end": "34971"
  },
  {
    "text": "-Tell us what SLED does. \n-SLED is an end to end testing framework",
    "start": "34971",
    "end": "38842"
  },
  {
    "text": "we developed here at Wix and it's mostly\nbased on AWS Lambda infrastructure.",
    "start": "38842",
    "end": "44614"
  },
  {
    "text": "Okay, so testing to test for \nproduction changes to your websites.",
    "start": "44615",
    "end": "50595"
  },
  {
    "text": "What kind of scale are we\ntalking about for those?",
    "start": "50595",
    "end": "53480"
  },
  {
    "text": "So let's say the average rate for \nproduction changes and deployments,",
    "start": "53480",
    "end": "58048"
  },
  {
    "text": "I'm talking about unique deployments, \nis about 400 a day.",
    "start": "58048",
    "end": "61472"
  },
  {
    "start": "61000",
    "end": "106000"
  },
  {
    "text": "All right, so 400 deployments a day\nyou're going to be testing automatically.",
    "start": "61472",
    "end": "64836"
  },
  {
    "text": "You're going to be testing all the time. \nAll right, so how do you test on SLED?",
    "start": "64836",
    "end": "67897"
  },
  {
    "text": "So, the first thing we do is SLED is already\ninstalled on a laptop or the CI machine at build time,",
    "start": "67898",
    "end": "74051"
  },
  {
    "text": "it doesn't really matter. \nThe first thing we do is that",
    "start": "74051",
    "end": "77745"
  },
  {
    "text": "we execute the test.",
    "start": "77745",
    "end": "78936"
  },
  {
    "text": "Let's say that the developer writes a simple test,\nan end to end test using Puppateer in Jest",
    "start": "78936",
    "end": "83360"
  },
  {
    "text": "and good and popular open source libraries.",
    "start": "83360",
    "end": "86715"
  },
  {
    "text": "The first thing we do is we want to make sure \nthat the user that just invoked the test",
    "start": "86715",
    "end": "90426"
  },
  {
    "text": "is actually a Wix developer \nand it's authenticated properly.",
    "start": "90427",
    "end": "94132"
  },
  {
    "text": "So what we do is that we use AWS Cognito\nalong with the built-in support with Google Sign in .",
    "start": "94132",
    "end": "99852"
  },
  {
    "text": "So we make sure that every developer\nis indeed a Wix developer.",
    "start": "99852",
    "end": "103508"
  },
  {
    "text": "So that's the first thing and we know\nthe user is authenticated.",
    "start": "103509",
    "end": "106907"
  },
  {
    "start": "106000",
    "end": "171000"
  },
  {
    "text": "Okay, so authentication.\nWhat happens next?",
    "start": "106907",
    "end": "111325"
  },
  {
    "text": "So once we're authenticated we look\nat the test code, the test code you've just written.",
    "start": "111325",
    "end": "115743"
  },
  {
    "text": "We take the test code itself, \nwith all its interdependency,",
    "start": "115743",
    "end": "118868"
  },
  {
    "text": "and we pack it and compress it\nand we upload it to S3",
    "start": "118869",
    "end": "123169"
  },
  {
    "text": "with a specific unique ID we give,\nlet's say it's XYZ.",
    "start": "123169",
    "end": "127836"
  },
  {
    "text": "And that's what we call the execution bundle.",
    "start": "127836",
    "end": "130379"
  },
  {
    "text": "-Okay.\n-So once we've uploaded the execution bundle",
    "start": "130379",
    "end": "133476"
  },
  {
    "text": "what we do is that we start running the test\nwith the native testing framework.",
    "start": "133476",
    "end": "137745"
  },
  {
    "text": "In this case it's Jest.",
    "start": "137745",
    "end": "141151"
  },
  {
    "text": "And what we do is we use Jest API and tweaked it \nand now instead of running the test on the laptop itself",
    "start": "141151",
    "end": "146805"
  },
  {
    "text": "what we do is that we start invoking Lambdas,\nnot running the test like it should have been run.",
    "start": "146805",
    "end": "152254"
  },
  {
    "text": "What we do is we start invoking \na lot of Lambdas.",
    "start": "152254",
    "end": "156056"
  },
  {
    "text": "By the way, the average test we have\nin the major builds in Wix",
    "start": "156056",
    "end": "159565"
  },
  {
    "text": "is about 700 different test files.",
    "start": "159565",
    "end": "162034"
  },
  {
    "text": "When I say 700, it's 700 different test files\nwith different Chrome and different Puppateering instances,",
    "start": "162034",
    "end": "167491"
  },
  {
    "text": "and we start invoking 700 of this\nin parallel, all at the same time.",
    "start": "167491",
    "end": "171551"
  },
  {
    "start": "171000",
    "end": "185000"
  },
  {
    "text": "So, using Puppateer and Chromium \nyou're able to fake a browser",
    "start": "171551",
    "end": "176726"
  },
  {
    "text": "running on Lambda, correct?\n-Exactly.",
    "start": "176727",
    "end": "179382"
  },
  {
    "text": "And I believe you're using \nLambda layers as well?",
    "start": "179382",
    "end": "181401"
  },
  {
    "text": "Yes, we use layers, we actually\nuse only two types of layers.",
    "start": "181401",
    "end": "185554"
  },
  {
    "start": "185000",
    "end": "248000"
  },
  {
    "text": "It's very easy to maintain and keep track \nof the code to make sure that the run times look the same",
    "start": "185554",
    "end": "190311"
  },
  {
    "text": "both on the laptop and on the Lambda.",
    "start": "190311",
    "end": "192458"
  },
  {
    "text": "We have one layer with pre-installed \nChromium AWS Lambda.",
    "start": "192458",
    "end": "195801"
  },
  {
    "text": "Again, it's an open source,\nvery popular library",
    "start": "195801",
    "end": "198519"
  },
  {
    "text": "that allows you to install Chromium \nwith all it's optimizations and tweaks,",
    "start": "198519",
    "end": "202778"
  },
  {
    "text": "and have it run smoothly along with Puppateer\non a Lambda run-time environment.",
    "start": "202778",
    "end": "207284"
  },
  {
    "text": "The second thing we have is just \nthe standard Jest in its interdependency.",
    "start": "207284",
    "end": "211698"
  },
  {
    "text": "We pre-build and we pre-install it\non the Lambda itself.",
    "start": "211699",
    "end": "214840"
  },
  {
    "text": "So every time we invoke a Lambda \nusually the Lambda is already warmed up",
    "start": "214840",
    "end": "218515"
  },
  {
    "text": "because you see what's our scale.",
    "start": "218515",
    "end": "220576"
  },
  {
    "text": "We already have a Chromium instance\nready to be executed along with all the Jest dependencies.",
    "start": "220576",
    "end": "226114"
  },
  {
    "text": "So the only thing we need to download\nfrom the Lambda, and that's the second part.",
    "start": "226114",
    "end": "231343"
  },
  {
    "text": "What we do is that we pass it,\nthe execution bundle ID,",
    "start": "231343",
    "end": "235803"
  },
  {
    "text": "the Lambda downloads immediately \nthe execution with the test file",
    "start": "235803",
    "end": "239484"
  },
  {
    "text": "just brought from the developer laptop\nand we start executing smoothly",
    "start": "239484",
    "end": "243782"
  },
  {
    "text": "as if it was executed here, only it's happening\n700 times all at the same time.",
    "start": "243783",
    "end": "248536"
  },
  {
    "start": "248000",
    "end": "306000"
  },
  {
    "text": "So every one of these executions \nhas its own sort of headless browser.",
    "start": "248536",
    "end": "253002"
  },
  {
    "text": "It is executing a test against your \nproduction website, correct?",
    "start": "253003",
    "end": "256314"
  },
  {
    "text": "Exactly. Pure production with the minor changes \nthat the developer just did for its own personal code.",
    "start": "256314",
    "end": "261805"
  },
  {
    "text": "And then once its figured out sort of \nif the execution failed or succeeded,",
    "start": "261805",
    "end": "266530"
  },
  {
    "text": "how does it report back?",
    "start": "266530",
    "end": "267903"
  },
  {
    "text": "So, because it's just a standard \nnormal Jest installed on the Lambda",
    "start": "267903",
    "end": "271572"
  },
  {
    "text": "what we do is we respond\nto the regional invocation",
    "start": "271572",
    "end": "276539"
  },
  {
    "text": "with a simple JSON.",
    "start": "276540",
    "end": "278463"
  },
  {
    "text": "And that JSON has everything needed \nin order for the test originally running on the laptop",
    "start": "278463",
    "end": "283164"
  },
  {
    "text": "to determine whether it passed or failed\nand if it failed, what were the errors and expectations",
    "start": "283164",
    "end": "288337"
  },
  {
    "text": "not being fulfilled.",
    "start": "288337",
    "end": "289790"
  },
  {
    "text": "So what we have is we have \na developer right here.",
    "start": "289790",
    "end": "292307"
  },
  {
    "text": "Again, it could be CI the same thing \nbut we get a very, very smooth",
    "start": "292307",
    "end": "296644"
  },
  {
    "text": "and very cool developer experience \nwhere you just invoke 700 different browsers",
    "start": "296644",
    "end": "301108"
  },
  {
    "text": "on his laptop in a matter \nof let's say, 2 or 3 minutes.",
    "start": "301108",
    "end": "304820"
  },
  {
    "text": "That's it, for 700 different tests.",
    "start": "304820",
    "end": "307056"
  },
  {
    "text": "So it's almost like the laptop \nor the CI machine doesn't even know",
    "start": "307056",
    "end": "310585"
  },
  {
    "text": "that you were running these tests\nin parallel or you were running them remotely.",
    "start": "310585",
    "end": "313865"
  },
  {
    "text": "-It's just happy. \n-Exactly.",
    "start": "313865",
    "end": "315638"
  },
  {
    "text": "How do these two fit in?",
    "start": "315639",
    "end": "317496"
  },
  {
    "text": "So, because we consider ourself\nas a full blown infra,",
    "start": "317496",
    "end": "320640"
  },
  {
    "text": "what we can do is that we can monitor \nand report back to DynamoDB and CloudWatch",
    "start": "320640",
    "end": "325887"
  },
  {
    "text": "and better understand the infrastructure\nand maybe some tweaks and optimizations",
    "start": "325887",
    "end": "330470"
  },
  {
    "text": "needed in order to make sure that our\nup time is as high as possible,",
    "start": "330470",
    "end": "334454"
  },
  {
    "text": "and every test is being executed properly\nand returned properly with the correct message.",
    "start": "334454",
    "end": "338813"
  },
  {
    "text": "So give me a sense of how many\nof these tests are you running in general.",
    "start": "338813",
    "end": "343774"
  },
  {
    "text": "So I just looked last week.\nIn 5 working days we have 1.2 million",
    "start": "343774",
    "end": "348310"
  },
  {
    "text": "different SLED tests, different SLED test executions.\nMeaning 1.2 million browsers executed",
    "start": "348310",
    "end": "354174"
  },
  {
    "text": "on Labmda, reporting back\nand playing around with our production system.",
    "start": "354174",
    "end": "359070"
  },
  {
    "start": "358000",
    "end": "417000"
  },
  {
    "text": "So if you wanted to run this on Lambda \nand you wanted to run it say in like your CI server",
    "start": "359070",
    "end": "364024"
  },
  {
    "text": "or one of the developer's laptops, \nyou probably wouldn't be able to do it?",
    "start": "364024",
    "end": "367987"
  },
  {
    "text": "You can try executing 700 browsers\non your laptop and see how it goes.",
    "start": "367987",
    "end": "372458"
  },
  {
    "text": "And 2 million executions a week. \nThat's amazing.",
    "start": "372458",
    "end": "375376"
  },
  {
    "text": "So, I really like this and I like it \nbecause you're using Lambda in a smart way.",
    "start": "375376",
    "end": "380841"
  },
  {
    "text": "You're sort of faking the testing environment \nthat you're running on your CI servers, your developers.",
    "start": "380841",
    "end": "386295"
  },
  {
    "text": "You're giving them, sort of very seamless, \nsmooth developer experience.",
    "start": "386295",
    "end": "389967"
  },
  {
    "text": "They almost don't know that it's happening.",
    "start": "389967",
    "end": "391725"
  },
  {
    "text": "But you're benefiting from this endless compute.",
    "start": "391725",
    "end": "394808"
  },
  {
    "text": "This is a really cool use of Lambda \nand clearly you're running at a scale",
    "start": "394808",
    "end": "398165"
  },
  {
    "text": "where you need this to be robust, \nyou need this to be stable,",
    "start": "398165",
    "end": "400623"
  },
  {
    "text": "you need this to be monitored so you're\nusing the platform to monitor this system well.",
    "start": "400623",
    "end": "404569"
  },
  {
    "text": "So this is pretty cool \nand thank you for sharing it with us.",
    "start": "404569",
    "end": "407294"
  },
  {
    "text": "Thank you for having me again.",
    "start": "407294",
    "end": "408456"
  },
  {
    "text": "And thank you for watching 'This Is My Architecture.'",
    "start": "408456",
    "end": "411208"
  }
]