[
  {
    "text": "In this video, you’ll see how to run \nqueries across Amazon Managed",
    "start": "0",
    "end": "2976"
  },
  {
    "text": "Service for Prometheus workspaces.",
    "start": "2976",
    "end": "4911"
  },
  {
    "text": "With this solution, you can deploy \nPromxy, an open-source Prometheus",
    "start": "5381",
    "end": "8848"
  },
  {
    "text": "proxy, in your container cluster to \nenable a single Grafana data source for",
    "start": "8848",
    "end": "12427"
  },
  {
    "text": "querying multiple Prometheus workspaces. ",
    "start": "12427",
    "end": "14520"
  },
  {
    "text": "Let’s quickly review the solution architecture. ",
    "start": "16740",
    "end": "18899"
  },
  {
    "text": "We have three Amazon Managed \nService for Prometheus workspaces",
    "start": "19380",
    "end": "22425"
  },
  {
    "text": "receiving metrics from multiple \nAmazon Elastic Kubernetes Service",
    "start": "22426",
    "end": "25697"
  },
  {
    "text": "(Amazon EKS) clusters.",
    "start": "25697",
    "end": "27470"
  },
  {
    "text": "Promxy is deployed between Amazon \nManaged Service for Prometheus",
    "start": "27871",
    "end": "31057"
  },
  {
    "text": "and Amazon Managed Grafana.",
    "start": "31057",
    "end": "32540"
  },
  {
    "text": "Two ingress resources provide basic \nauthentication and application load balancing.",
    "start": "33078",
    "end": "37194"
  },
  {
    "text": "Note that we’re using Amazon EKS, \nbut other platforms can be used.",
    "start": "37929",
    "end": "41529"
  },
  {
    "text": "To get started, let’s go to Cloud9 to \nprepare our Amazon EKS cluster. ",
    "start": "42069",
    "end": "46209"
  },
  {
    "text": "First, we’ll associate an AWS Identity \nand Access Management (IAM)",
    "start": "47886",
    "end": "51792"
  },
  {
    "text": "role with our service account.",
    "start": "51792",
    "end": "53166"
  },
  {
    "text": "To do this, we need an IAM OpenID \nConnect (OIDC) identity provider for our cluster.",
    "start": "53829",
    "end": "59169"
  },
  {
    "text": "Let’s run a command to determine \nwhether we have one configured.",
    "start": "59760",
    "end": "62579"
  },
  {
    "text": "Our cluster does have an \nIAM OIDC identity provider.",
    "start": "64620",
    "end": "68125"
  },
  {
    "text": "If we didn’t have an IAM OIDC identity \nprovider, we could create one by",
    "start": "69865",
    "end": "73839"
  },
  {
    "text": "following these instructions \nin the AWS documentation.",
    "start": "73839",
    "end": "76631"
  },
  {
    "text": "The first step in our deployment is \ninstalling the Application Load Balancer",
    "start": "78240",
    "end": "81467"
  },
  {
    "text": "Controller, which automatically \nprovisions an application load balancer",
    "start": "81468",
    "end": "84772"
  },
  {
    "text": "when a Kubernetes Ingress resource is created. ",
    "start": "84772",
    "end": "86905"
  },
  {
    "text": "This website provides instructions for \ncreating the necessary IAM policy, role,",
    "start": "87741",
    "end": "91444"
  },
  {
    "text": "and Kubernetes service account.",
    "start": "91444",
    "end": "92863"
  },
  {
    "text": "For the purposes of this example, \nwe’ve already gone through this process, ",
    "start": "93820",
    "end": "96790"
  },
  {
    "text": "so we’re ready to deploy the \napplication load balancer helm chart. ",
    "start": "96790",
    "end": "99923"
  },
  {
    "text": "Let’s return to Cloud9 and do so.",
    "start": "100496",
    "end": "102435"
  },
  {
    "text": "Now that the controller is \ndeployed, let’s verify the resources.",
    "start": "106652",
    "end": "109532"
  },
  {
    "text": "Promxy doesn’t provide an \nauthentication mechanism, so we’ll use ",
    "start": "117300",
    "end": "120321"
  },
  {
    "text": "the Ingress NGINX controller for authentication.",
    "start": "120321",
    "end": "122850"
  },
  {
    "text": "Let’s deploy the Ingress NGINX helm chart.",
    "start": "123526",
    "end": "125669"
  },
  {
    "text": "Notice that we’re setting the \nservice type to NodePort. ",
    "start": "126920",
    "end": "129306"
  },
  {
    "text": "This is to prevent the NGINX controller \nfrom automatically creating the classic",
    "start": "129845",
    "end": "133043"
  },
  {
    "text": "load balancer for Ingress resources.",
    "start": "133043",
    "end": "135068"
  },
  {
    "text": "Instead, we’ll be using the AWS Load \nBalancer Controller to create an",
    "start": "135720",
    "end": "139058"
  },
  {
    "text": "application load balancer.",
    "start": "139058",
    "end": "140400"
  },
  {
    "text": "Next, let’s verify the resources.",
    "start": "141597",
    "end": "143368"
  },
  {
    "text": "To complete the authentication setup, \nwe’ll create a username and password,",
    "start": "144595",
    "end": "148103"
  },
  {
    "text": "then convert them into a Kubernetes secret.",
    "start": "148103",
    "end": "150461"
  },
  {
    "text": "Let’s examine the secret to \nconfirm that it was properly created.",
    "start": "154843",
    "end": "157483"
  },
  {
    "text": "Let’s go to the AWS Management Console.",
    "start": "160517",
    "end": "162640"
  },
  {
    "text": "To prepare for the Promxy deployment,",
    "start": "164252",
    "end": "165936"
  },
  {
    "text": "we need to create an IAM role to give \nPromxy permissions to query metrics",
    "start": "165936",
    "end": "169238"
  },
  {
    "text": "from Amazon Managed Service \nfor Prometheus workspaces.",
    "start": "169238",
    "end": "172000"
  },
  {
    "text": "We’ll create a custom trust policy.",
    "start": "173232",
    "end": "174900"
  },
  {
    "text": "The trust policy will specify the account ID, \nRegion, and OIDC identity provider information.",
    "start": "180360",
    "end": "185649"
  },
  {
    "text": "Next, we’ll add the AWS managed policy\n that provides query access to Prometheus.",
    "start": "190446",
    "end": "194886"
  },
  {
    "text": "Let’s enter a name for \nthe role and create it.",
    "start": "198426",
    "end": "200450"
  },
  {
    "text": "Before we deploy Promxy, we need to make \nsome changes and additions to the files. ",
    "start": "207600",
    "end": "211598"
  },
  {
    "text": "Let’s clone the Promxy GitHub \nrepository to our local file system.",
    "start": "211919",
    "end": "215152"
  },
  {
    "text": "Next, we’ll create some supplementary \nfiles to modify the default Promxy",
    "start": "217320",
    "end": "220836"
  },
  {
    "text": "deployment and create additional files \nfor the application load balancer",
    "start": "220836",
    "end": "224043"
  },
  {
    "text": "and Ingress NGINX resources. ",
    "start": "224043",
    "end": "226000"
  },
  {
    "text": "The first file we’ll create will provide \nvalues to overwrite the default Promxy",
    "start": "226980",
    "end": "230422"
  },
  {
    "text": "configuration and define additional values \nthat we’re adding to the Promxy deployment. ",
    "start": "230422",
    "end": "234239"
  },
  {
    "text": "First, we define the \nservice account to be used. ",
    "start": "236684",
    "end": "238747"
  },
  {
    "text": "We then disable the default Ingress\nresource provided by Promxy. ",
    "start": "239354",
    "end": "242446"
  },
  {
    "text": "Next, we create two new Ingress",
    "start": "243332",
    "end": "244961"
  },
  {
    "text": "resources, one for the application \nload balancer, and one for NGINX.",
    "start": "244961",
    "end": "248480"
  },
  {
    "text": "Next, we define a sidecar container that\nutilizes AWS Signature version 4 to add",
    "start": "250866",
    "end": "255385"
  },
  {
    "text": "authentication information to calls \nthat Promxy makes to Amazon",
    "start": "255385",
    "end": "258497"
  },
  {
    "text": "Managed Service for Prometheus.",
    "start": "258497",
    "end": "260078"
  },
  {
    "text": "Finally, we define the Prometheus \nworkspace connection details.",
    "start": "261407",
    "end": "264381"
  },
  {
    "text": "Note that the entire static_configs \nsection is duplicated, and each",
    "start": "265618",
    "end": "269078"
  },
  {
    "text": "contains a separate workspace ID.",
    "start": "269078",
    "end": "270860"
  },
  {
    "text": "This section should be replicated \nfor every Amazon Managed Service",
    "start": "271640",
    "end": "274473"
  },
  {
    "text": "for Prometheus workspace to \nwhich Promxy will proxy requests.",
    "start": "274473",
    "end": "277735"
  },
  {
    "text": "Next, we need to create the files \nthat define our Ingress resources. ",
    "start": "280577",
    "end": "283784"
  },
  {
    "text": "Let’s go to the templates directory.",
    "start": "284071",
    "end": "285465"
  },
  {
    "text": "Here, we’ll create two files. ",
    "start": "286679",
    "end": "288141"
  },
  {
    "text": "The first one is for the application \nload balancer Ingress resource.",
    "start": "288557",
    "end": "291646"
  },
  {
    "text": "Second, we’ll create the file that \ndefines the NGINX Ingress resource.",
    "start": "292826",
    "end": "296309"
  },
  {
    "text": "Next, in addition to adding the \nAWS Signature version 4 sidecar",
    "start": "299400",
    "end": "303103"
  },
  {
    "text": "container to our override file, we \nneed to ensure that it gets added to the",
    "start": "303103",
    "end": "306750"
  },
  {
    "text": "default deployment.yaml file so \nthat the container gets deployed.",
    "start": "306750",
    "end": "310213"
  },
  {
    "text": "Near the end of this file, we can see that \nthe sidecar container has been defined.",
    "start": "311370",
    "end": "314936"
  },
  {
    "text": "We are now ready to deploy \nthe Promxy helm chart.",
    "start": "318535",
    "end": "320853"
  },
  {
    "text": "Let’s go to the base directory where the \nPromxy GitHub repository was cloned",
    "start": "321414",
    "end": "324847"
  },
  {
    "text": "and initiate the deployment.",
    "start": "324847",
    "end": "325979"
  },
  {
    "text": "Let’s verify the resources.",
    "start": "328475",
    "end": "329909"
  },
  {
    "text": "Once the deployment is complete,",
    "start": "331866",
    "end": "333318"
  },
  {
    "text": "the application load balancer \nwill be automatically deployed.",
    "start": "333318",
    "end": "335892"
  },
  {
    "text": "Let’s obtain the application load balancer URL.",
    "start": "336568",
    "end": "339052"
  },
  {
    "text": "We’ll use this URL when we \ndefine the data source in Grafana.",
    "start": "340107",
    "end": "342912"
  },
  {
    "text": "Now we’re ready to define our Grafana \ndata source and create visualizations. ",
    "start": "344943",
    "end": "348455"
  },
  {
    "text": "Let’s create a new Prometheus data source \nwithin our Amazon Managed Grafana workspace.",
    "start": "348913",
    "end": "353020"
  },
  {
    "text": "We’ll name our data source “Promxy.”",
    "start": "354880",
    "end": "356580"
  },
  {
    "text": "Let’s paste in the application \nload balancer URL we obtained.",
    "start": "358855",
    "end": "361860"
  },
  {
    "text": "We’ll enable basic authentication and specify \nthe username and password we defined earlier.",
    "start": "362960",
    "end": "367340"
  },
  {
    "text": "Let’s save and test the data source.",
    "start": "373063",
    "end": "374784"
  },
  {
    "text": "Notice that it says the data source is working.",
    "start": "375919",
    "end": "377921"
  },
  {
    "text": "Let’s explore the data source.",
    "start": "379149",
    "end": "380589"
  },
  {
    "text": "As you can see, we have multiple \nEKS clusters, each writing to a",
    "start": "383920",
    "end": "387179"
  },
  {
    "text": "separate Amazon Managed \nService for Prometheus workspace.",
    "start": "387179",
    "end": "390108"
  },
  {
    "text": "Let’s open a dashboard that \ndisplays the Prometheus metrics.",
    "start": "390716",
    "end": "393480"
  },
  {
    "text": "On the left side, the dashboard \nshows Prometheus metrics",
    "start": "396355",
    "end": "398984"
  },
  {
    "text": "aggregated by pod and EKS cluster.",
    "start": "398984",
    "end": "401220"
  },
  {
    "text": "On the right side, the same metrics \nare aggregated across EKS clusters",
    "start": "402000",
    "end": "405409"
  },
  {
    "text": "and across Amazon Managed \nService for Prometheus workspaces.",
    "start": "405409",
    "end": "408466"
  },
  {
    "text": "All of this is done using a single data\n source, pointing to Promxy, which",
    "start": "408901",
    "end": "412480"
  },
  {
    "text": "proxies the queries to every Amazon \nManaged Service for Prometheus",
    "start": "412480",
    "end": "415448"
  },
  {
    "text": "workspace that has been defined. ",
    "start": "415448",
    "end": "416974"
  },
  {
    "text": "You’ve just seen how to run queries \nacross Amazon Managed Service",
    "start": "420066",
    "end": "422846"
  },
  {
    "text": "for Prometheus workspaces.",
    "start": "422846",
    "end": "424506"
  },
  {
    "text": "You can learn more about this topic in \nthe description and links for this video.",
    "start": "425546",
    "end": "428447"
  },
  {
    "text": "Thanks for watching. Now it’s your turn to try.",
    "start": "428688",
    "end": "430666"
  }
]