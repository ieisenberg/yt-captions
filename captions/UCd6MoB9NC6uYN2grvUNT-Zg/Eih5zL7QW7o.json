[
  {
    "text": "well welcome everyone I just wanted to",
    "start": "439",
    "end": "3210"
  },
  {
    "text": "give a big thanks to everyone at AWS for",
    "start": "3210",
    "end": "4680"
  },
  {
    "text": "having me here I'm really excited to",
    "start": "4680",
    "end": "7799"
  },
  {
    "text": "talk to you guys today about building an",
    "start": "7799",
    "end": "9090"
  },
  {
    "text": "auto scaling CI cluster today we'll go",
    "start": "9090",
    "end": "10830"
  },
  {
    "text": "through some real-life examples about",
    "start": "10830",
    "end": "12540"
  },
  {
    "text": "how gussto CI has evolved over the years",
    "start": "12540",
    "end": "15120"
  },
  {
    "text": "and how we ultimately ended up at the",
    "start": "15120",
    "end": "17670"
  },
  {
    "text": "solution we have today built on top of",
    "start": "17670",
    "end": "19410"
  },
  {
    "text": "AWS tooling at the end of this talk you",
    "start": "19410",
    "end": "23160"
  },
  {
    "text": "also have a good idea of some services",
    "start": "23160",
    "end": "25830"
  },
  {
    "text": "and tools to look into to build",
    "start": "25830",
    "end": "27420"
  },
  {
    "text": "something like this in-house at your own",
    "start": "27420",
    "end": "28980"
  },
  {
    "text": "company so my name is Nikhil Mathieu I'm",
    "start": "28980",
    "end": "32308"
  },
  {
    "text": "an infrastructure engineer at gusto hi",
    "start": "32309",
    "end": "34800"
  },
  {
    "text": "there I lead the developer tooling team",
    "start": "34800",
    "end": "36420"
  },
  {
    "text": "I worked as a product engineer I guess",
    "start": "36420",
    "end": "39030"
  },
  {
    "text": "so for several years and kind of got",
    "start": "39030",
    "end": "40530"
  },
  {
    "text": "first-hand experience and how our",
    "start": "40530",
    "end": "42149"
  },
  {
    "text": "development development philosophies",
    "start": "42149",
    "end": "43739"
  },
  {
    "text": "have evolved and how that has changed",
    "start": "43739",
    "end": "45750"
  },
  {
    "text": "and about a year and a half ago I",
    "start": "45750",
    "end": "47730"
  },
  {
    "text": "started our first team that was in",
    "start": "47730",
    "end": "50100"
  },
  {
    "text": "service to the water engineering team at",
    "start": "50100",
    "end": "51510"
  },
  {
    "text": "gusto mainly working on tools to help",
    "start": "51510",
    "end": "54390"
  },
  {
    "text": "development experience be faster better",
    "start": "54390",
    "end": "56940"
  },
  {
    "text": "and safer today were a very leveraged",
    "start": "56940",
    "end": "60329"
  },
  {
    "text": "team of four people supporting Anna",
    "start": "60329",
    "end": "62070"
  },
  {
    "text": "during team of over 120 and we handle",
    "start": "62070",
    "end": "64768"
  },
  {
    "text": "everything from code authoring tools to",
    "start": "64769",
    "end": "66780"
  },
  {
    "text": "testing and build tools deployments and",
    "start": "66780",
    "end": "69210"
  },
  {
    "text": "getting feedback but your code once it's",
    "start": "69210",
    "end": "70740"
  },
  {
    "text": "been launched in production for me",
    "start": "70740",
    "end": "73229"
  },
  {
    "text": "personally I'm really passionate about",
    "start": "73229",
    "end": "75299"
  },
  {
    "text": "enabling developers to ship faster and",
    "start": "75299",
    "end": "77670"
  },
  {
    "text": "ship more securely so I'm thrilled today",
    "start": "77670",
    "end": "79979"
  },
  {
    "text": "to talk to you guys about one of our",
    "start": "79979",
    "end": "81509"
  },
  {
    "text": "most leveraged projects we've had at",
    "start": "81509",
    "end": "83460"
  },
  {
    "text": "gussto as a part of this team working on",
    "start": "83460",
    "end": "86310"
  },
  {
    "text": "developer tools you can usually find me",
    "start": "86310",
    "end": "87990"
  },
  {
    "text": "playing jazz and blues guitar or hiking",
    "start": "87990",
    "end": "89369"
  },
  {
    "text": "or snowboarding and nearby mountain so",
    "start": "89369",
    "end": "91049"
  },
  {
    "text": "I'll be at the start bar after the talk",
    "start": "91049",
    "end": "93150"
  },
  {
    "text": "today so if you guys want to talk about",
    "start": "93150",
    "end": "94710"
  },
  {
    "text": "tooling or any of those other topics I",
    "start": "94710",
    "end": "96600"
  },
  {
    "text": "would love to meet you and Jeff so for",
    "start": "96600",
    "end": "100380"
  },
  {
    "text": "those of you don't know gesso is a",
    "start": "100380",
    "end": "101759"
  },
  {
    "text": "payroll benefits and HR company and we",
    "start": "101759",
    "end": "104430"
  },
  {
    "text": "focus on empowering small business",
    "start": "104430",
    "end": "106020"
  },
  {
    "text": "owners to focus on what they love which",
    "start": "106020",
    "end": "107790"
  },
  {
    "text": "is running their business so we automate",
    "start": "107790",
    "end": "109950"
  },
  {
    "text": "all filings tax payments and onboarding",
    "start": "109950",
    "end": "112049"
  },
  {
    "text": "forms so you can be sure that you're",
    "start": "112049",
    "end": "113399"
  },
  {
    "text": "staying compliant we serve over 60,000",
    "start": "113399",
    "end": "116009"
  },
  {
    "text": "businesses across America we pay",
    "start": "116009",
    "end": "117689"
  },
  {
    "text": "hundreds of thousands employees each",
    "start": "117689",
    "end": "118829"
  },
  {
    "text": "year and our system moves billions of",
    "start": "118829",
    "end": "120509"
  },
  {
    "text": "dollars annually through our system",
    "start": "120509",
    "end": "122430"
  },
  {
    "text": "we're mostly a Ruby on Rails shop and",
    "start": "122430",
    "end": "124230"
  },
  {
    "text": "like many of you here we have a monolith",
    "start": "124230",
    "end": "127080"
  },
  {
    "text": "that has evolved as our product has",
    "start": "127080",
    "end": "128580"
  },
  {
    "text": "grown over time with several supporting",
    "start": "128580",
    "end": "130410"
  },
  {
    "text": "services that have come up over the",
    "start": "130410",
    "end": "132090"
  },
  {
    "text": "years vessel engineers work on code that",
    "start": "132090",
    "end": "135390"
  },
  {
    "text": "people's livelihood depends on making",
    "start": "135390",
    "end": "137250"
  },
  {
    "text": "sure your benefits are in place so or",
    "start": "137250",
    "end": "138900"
  },
  {
    "text": "you're getting your payroll on time it",
    "start": "138900",
    "end": "141000"
  },
  {
    "text": "can be a really important thing for most",
    "start": "141000",
    "end": "143400"
  },
  {
    "text": "people and we take that responsibility",
    "start": "143400",
    "end": "144600"
  },
  {
    "text": "really seriously we firmly believe in",
    "start": "144600",
    "end": "147210"
  },
  {
    "text": "moving fast and breaking nothing we",
    "start": "147210",
    "end": "149880"
  },
  {
    "text": "deploy the production several times a",
    "start": "149880",
    "end": "151530"
  },
  {
    "text": "day across all of our applications and",
    "start": "151530",
    "end": "153360"
  },
  {
    "text": "we've been really heavily on our CI",
    "start": "153360",
    "end": "155130"
  },
  {
    "text": "system to know that when we make a",
    "start": "155130",
    "end": "156630"
  },
  {
    "text": "change that we're not inverting lee",
    "start": "156630",
    "end": "158130"
  },
  {
    "text": "breaking something in another part of",
    "start": "158130",
    "end": "159690"
  },
  {
    "text": "the system so what is continuing this",
    "start": "159690",
    "end": "162030"
  },
  {
    "text": "integration this is probably familiar to",
    "start": "162030",
    "end": "164400"
  },
  {
    "text": "a lot of you all here but there was a",
    "start": "164400",
    "end": "165750"
  },
  {
    "text": "great set bit about what what continuous",
    "start": "165750",
    "end": "167850"
  },
  {
    "text": "integration is and what it gives us on",
    "start": "167850",
    "end": "169650"
  },
  {
    "text": "AWS is code deploy on page so continuous",
    "start": "169650",
    "end": "172860"
  },
  {
    "text": "integration is a software development",
    "start": "172860",
    "end": "174360"
  },
  {
    "text": "practice where developers regularly",
    "start": "174360",
    "end": "176040"
  },
  {
    "text": "merge their code changes into a central",
    "start": "176040",
    "end": "177810"
  },
  {
    "text": "repository after which automated builds",
    "start": "177810",
    "end": "180090"
  },
  {
    "text": "and tests are run the key goals of",
    "start": "180090",
    "end": "182490"
  },
  {
    "text": "continuous integration are defined in",
    "start": "182490",
    "end": "184200"
  },
  {
    "text": "addressed bugs quicker improve software",
    "start": "184200",
    "end": "185940"
  },
  {
    "text": "quality and reduce the time it takes to",
    "start": "185940",
    "end": "187590"
  },
  {
    "text": "validate and release new software",
    "start": "187590",
    "end": "188880"
  },
  {
    "text": "updates so what does this look like",
    "start": "188880",
    "end": "191430"
  },
  {
    "text": "Agosto so we use github as our SCM",
    "start": "191430",
    "end": "194519"
  },
  {
    "text": "provider and all of our production apps",
    "start": "194519",
    "end": "196709"
  },
  {
    "text": "have a default development branch this",
    "start": "196709",
    "end": "199830"
  },
  {
    "text": "branch is green at all times it's always",
    "start": "199830",
    "end": "202530"
  },
  {
    "text": "considered our diploma branch and is",
    "start": "202530",
    "end": "204390"
  },
  {
    "text": "always the most up-to-date with the",
    "start": "204390",
    "end": "206610"
  },
  {
    "text": "changes we have that will be sent out to",
    "start": "206610",
    "end": "207989"
  },
  {
    "text": "staging and then production",
    "start": "207989",
    "end": "210349"
  },
  {
    "text": "so when an engineer goes to work on",
    "start": "210349",
    "end": "212180"
  },
  {
    "text": "their feature they branch off of",
    "start": "212180",
    "end": "213469"
  },
  {
    "text": "developments and they'll check out their",
    "start": "213469",
    "end": "215269"
  },
  {
    "text": "feature branch they'll start working on",
    "start": "215269",
    "end": "217310"
  },
  {
    "text": "their feature and commit the changes",
    "start": "217310",
    "end": "218599"
  },
  {
    "text": "there once they're ready to push those",
    "start": "218599",
    "end": "221389"
  },
  {
    "text": "changes up will automatically run the",
    "start": "221389",
    "end": "222889"
  },
  {
    "text": "entire suite of tests NCI and the",
    "start": "222889",
    "end": "225469"
  },
  {
    "text": "engineer will get a slack message with",
    "start": "225469",
    "end": "227120"
  },
  {
    "text": "their test results at this point in time",
    "start": "227120",
    "end": "230269"
  },
  {
    "text": "they can fix any test that they may have",
    "start": "230269",
    "end": "231920"
  },
  {
    "text": "broken and iterate on that feedback",
    "start": "231920",
    "end": "234139"
  },
  {
    "text": "until they get a green build at that",
    "start": "234139",
    "end": "236299"
  },
  {
    "text": "point in time yeah the code review we",
    "start": "236299",
    "end": "238310"
  },
  {
    "text": "pass up to a number another member of",
    "start": "238310",
    "end": "239659"
  },
  {
    "text": "the team and once everything was good",
    "start": "239659",
    "end": "241099"
  },
  {
    "text": "it's good to merge into development once",
    "start": "241099",
    "end": "245030"
  },
  {
    "text": "the changes land in development we'll",
    "start": "245030",
    "end": "246769"
  },
  {
    "text": "run and test one last time to make sure",
    "start": "246769",
    "end": "248359"
  },
  {
    "text": "that it integrates with the most",
    "start": "248359",
    "end": "249560"
  },
  {
    "text": "upstream changes and then we'll send it",
    "start": "249560",
    "end": "251329"
  },
  {
    "text": "out to staging for verification and at",
    "start": "251329",
    "end": "253189"
  },
  {
    "text": "that point we're ready to deploy to get",
    "start": "253189",
    "end": "256489"
  },
  {
    "text": "a sense of how often we're doing this",
    "start": "256489",
    "end": "258229"
  },
  {
    "text": "and how many times this is happening we",
    "start": "258229",
    "end": "259940"
  },
  {
    "text": "have about 120 contributors doing this",
    "start": "259940",
    "end": "261739"
  },
  {
    "text": "every single day we're running about 600",
    "start": "261739",
    "end": "264229"
  },
  {
    "text": "builds across all of our applications",
    "start": "264229",
    "end": "265370"
  },
  {
    "text": "and we deploy about 40 times a day",
    "start": "265370",
    "end": "267770"
  },
  {
    "text": "across all of our services",
    "start": "267770",
    "end": "270949"
  },
  {
    "text": "so I like to think about CI and two",
    "start": "270949",
    "end": "273599"
  },
  {
    "text": "portions the scheduler and the computer",
    "start": "273599",
    "end": "276289"
  },
  {
    "text": "so the scheduler is what talks to your",
    "start": "276289",
    "end": "278969"
  },
  {
    "text": "SCM provider listens to things like it",
    "start": "278969",
    "end": "280949"
  },
  {
    "text": "pushes and creates a workload based on",
    "start": "280949",
    "end": "283739"
  },
  {
    "text": "the changes that you've pushed up",
    "start": "283739",
    "end": "285409"
  },
  {
    "text": "usually this workflow this workload is",
    "start": "285409",
    "end": "288119"
  },
  {
    "text": "defined in a configuration file that",
    "start": "288119",
    "end": "289589"
  },
  {
    "text": "lives in your repository for example in",
    "start": "289589",
    "end": "292559"
  },
  {
    "text": "a ruby application you might have a",
    "start": "292559",
    "end": "293789"
  },
  {
    "text": "configuration file that says I need to",
    "start": "293789",
    "end": "295649"
  },
  {
    "text": "run all of my tests in the spec",
    "start": "295649",
    "end": "297389"
  },
  {
    "text": "directory across ruby versions 2 3 & 2 4",
    "start": "297389",
    "end": "300269"
  },
  {
    "text": "and the scheduler will create that",
    "start": "300269",
    "end": "302879"
  },
  {
    "text": "workload to be picked up by the compute",
    "start": "302879",
    "end": "305809"
  },
  {
    "text": "so the compute is usually a set of",
    "start": "305809",
    "end": "308069"
  },
  {
    "text": "virtual machines that actually run your",
    "start": "308069",
    "end": "310259"
  },
  {
    "text": "software so this these workers pull the",
    "start": "310259",
    "end": "314159"
  },
  {
    "text": "scheduler for work that's waiting to be",
    "start": "314159",
    "end": "316019"
  },
  {
    "text": "completed and they're usually",
    "start": "316019",
    "end": "317369"
  },
  {
    "text": "provisioned with whatever software you",
    "start": "317369",
    "end": "319469"
  },
  {
    "text": "need to run your tests this could be",
    "start": "319469",
    "end": "322169"
  },
  {
    "text": "particularly B versions Python versions",
    "start": "322169",
    "end": "324050"
  },
  {
    "text": "version of your database whatever you",
    "start": "324050",
    "end": "326069"
  },
  {
    "text": "need to actually execute your tests",
    "start": "326069",
    "end": "328369"
  },
  {
    "text": "depending on what provider used and how",
    "start": "328369",
    "end": "330539"
  },
  {
    "text": "you've set up your CI system",
    "start": "330539",
    "end": "332009"
  },
  {
    "text": "these can be machines that you hosts and",
    "start": "332009",
    "end": "333809"
  },
  {
    "text": "you control and that you have full",
    "start": "333809",
    "end": "335669"
  },
  {
    "text": "control over the software that's run on",
    "start": "335669",
    "end": "336899"
  },
  {
    "text": "them or in the case of a managed",
    "start": "336899",
    "end": "338699"
  },
  {
    "text": "provider it's provided by your CI system",
    "start": "338699",
    "end": "341789"
  },
  {
    "text": "and you have custom setup hooks you have",
    "start": "341789",
    "end": "343679"
  },
  {
    "text": "to install any dependencies you might",
    "start": "343679",
    "end": "344969"
  },
  {
    "text": "need",
    "start": "344969",
    "end": "346279"
  },
  {
    "text": "so probably the CI system people are",
    "start": "346279",
    "end": "349139"
  },
  {
    "text": "most familiar with is Jenkins this is an",
    "start": "349139",
    "end": "351479"
  },
  {
    "text": "example of an unmanaged provider so in",
    "start": "351479",
    "end": "354329"
  },
  {
    "text": "Jenkins case it's it's a self hosted",
    "start": "354329",
    "end": "356429"
  },
  {
    "text": "system so you're running it on your own",
    "start": "356429",
    "end": "357929"
  },
  {
    "text": "infrastructure it's open in the sense",
    "start": "357929",
    "end": "360389"
  },
  {
    "text": "that you have access to the source code",
    "start": "360389",
    "end": "361529"
  },
  {
    "text": "and can modify and make changes as",
    "start": "361529",
    "end": "362969"
  },
  {
    "text": "needed and while it's a bit dated it",
    "start": "362969",
    "end": "366629"
  },
  {
    "text": "supported many large companies at scale",
    "start": "366629",
    "end": "368339"
  },
  {
    "text": "and has been around for for quite a",
    "start": "368339",
    "end": "371309"
  },
  {
    "text": "while",
    "start": "371309",
    "end": "372620"
  },
  {
    "text": "a few years back when guess it was less",
    "start": "372620",
    "end": "375830"
  },
  {
    "text": "than ten contributors we had 100% of our",
    "start": "375830",
    "end": "377990"
  },
  {
    "text": "CI running on a Jenkins machine there",
    "start": "377990",
    "end": "380840"
  },
  {
    "text": "was nothing special about the setup it",
    "start": "380840",
    "end": "382910"
  },
  {
    "text": "was running on a machine that's that in",
    "start": "382910",
    "end": "384919"
  },
  {
    "text": "our closet this machine was actually",
    "start": "384919",
    "end": "387470"
  },
  {
    "text": "very critical to our business workflow",
    "start": "387470",
    "end": "389240"
  },
  {
    "text": "at the time it would pull our SEM for",
    "start": "389240",
    "end": "392210"
  },
  {
    "text": "any changes that came in and when it did",
    "start": "392210",
    "end": "393650"
  },
  {
    "text": "it would run a build that we had where",
    "start": "393650",
    "end": "396710"
  },
  {
    "text": "we manually paralyzed our tests across",
    "start": "396710",
    "end": "398750"
  },
  {
    "text": "all the cores on the machine Jenkins was",
    "start": "398750",
    "end": "402500"
  },
  {
    "text": "like our pet we named him Leroy he was",
    "start": "402500",
    "end": "406280"
  },
  {
    "text": "totally irreplaceable we couldn't",
    "start": "406280",
    "end": "407750"
  },
  {
    "text": "reproduce it if even if we wanted to the",
    "start": "407750",
    "end": "409970"
  },
  {
    "text": "machine was set up by SSH eating out of",
    "start": "409970",
    "end": "411800"
  },
  {
    "text": "the box running a bunch of ad hoc",
    "start": "411800",
    "end": "413449"
  },
  {
    "text": "commands and we even named him Leroy so",
    "start": "413449",
    "end": "417080"
  },
  {
    "text": "one day we took about 12 hours for us to",
    "start": "417080",
    "end": "420590"
  },
  {
    "text": "get our test results back at this point",
    "start": "420590",
    "end": "422810"
  },
  {
    "text": "in time it was peak season for Gus so",
    "start": "422810",
    "end": "425330"
  },
  {
    "text": "this is end of year when we're handling",
    "start": "425330",
    "end": "426590"
  },
  {
    "text": "tax filings and customers are calling in",
    "start": "426590",
    "end": "428810"
  },
  {
    "text": "to make sure that they're all of their",
    "start": "428810",
    "end": "430280"
  },
  {
    "text": "Ducks are in a row and this was really",
    "start": "430280",
    "end": "433010"
  },
  {
    "text": "destructive to our development workflow",
    "start": "433010",
    "end": "434690"
  },
  {
    "text": "so we weren't able to ship any fixes",
    "start": "434690",
    "end": "437750"
  },
  {
    "text": "that we had to get out in that time",
    "start": "437750",
    "end": "438950"
  },
  {
    "text": "because we couldn't get a positive CI",
    "start": "438950",
    "end": "440720"
  },
  {
    "text": "status on the commits that we were",
    "start": "440720",
    "end": "442130"
  },
  {
    "text": "trying to send out and ultimately we",
    "start": "442130",
    "end": "444289"
  },
  {
    "text": "knew that at that point in time we",
    "start": "444289",
    "end": "446210"
  },
  {
    "text": "didn't have the time nor the expertise",
    "start": "446210",
    "end": "448220"
  },
  {
    "text": "to build a more cost-efficient scalable",
    "start": "448220",
    "end": "450590"
  },
  {
    "text": "and solution in-house so in order to",
    "start": "450590",
    "end": "452930"
  },
  {
    "text": "kind of bring us to the next stage of",
    "start": "452930",
    "end": "453950"
  },
  {
    "text": "ghusl engineering we're decided to look",
    "start": "453950",
    "end": "455419"
  },
  {
    "text": "elsewhere for a minute provider so",
    "start": "455419",
    "end": "458930"
  },
  {
    "text": "managed providers are usually multi",
    "start": "458930",
    "end": "461210"
  },
  {
    "text": "tenant systems they're usually hosted on",
    "start": "461210",
    "end": "463550"
  },
  {
    "text": "internet outside of your own VPC these",
    "start": "463550",
    "end": "466340"
  },
  {
    "text": "systems are usually closed you don't",
    "start": "466340",
    "end": "467780"
  },
  {
    "text": "have access to customize the software on",
    "start": "467780",
    "end": "469550"
  },
  {
    "text": "those systems most most CI providers do",
    "start": "469550",
    "end": "472550"
  },
  {
    "text": "usually provide some hooks so you could",
    "start": "472550",
    "end": "474169"
  },
  {
    "text": "say before your build install some",
    "start": "474169",
    "end": "476330"
  },
  {
    "text": "packages that you might need or run some",
    "start": "476330",
    "end": "478520"
  },
  {
    "text": "configuration that's necessary and most",
    "start": "478520",
    "end": "482150"
  },
  {
    "text": "of these systems will just provision the",
    "start": "482150",
    "end": "483590"
  },
  {
    "text": "machines as you push up your code and",
    "start": "483590",
    "end": "485690"
  },
  {
    "text": "will have software you need ready to run",
    "start": "485690",
    "end": "487520"
  },
  {
    "text": "on them such as a particular ruby",
    "start": "487520",
    "end": "488720"
  },
  {
    "text": "version",
    "start": "488720",
    "end": "490710"
  },
  {
    "text": "so as we moved from 10 contributors up",
    "start": "490710",
    "end": "493860"
  },
  {
    "text": "to 60 we used of managed provider called",
    "start": "493860",
    "end": "496110"
  },
  {
    "text": "salon elapsed",
    "start": "496110",
    "end": "497310"
  },
  {
    "text": "they worked actually really well for us",
    "start": "497310",
    "end": "498539"
  },
  {
    "text": "for about two years",
    "start": "498539",
    "end": "500340"
  },
  {
    "text": "there were hosted machines that would",
    "start": "500340",
    "end": "502620"
  },
  {
    "text": "automatically detect based on a couple",
    "start": "502620",
    "end": "504690"
  },
  {
    "text": "of clues in the repository",
    "start": "504690",
    "end": "506550"
  },
  {
    "text": "what dependencies we would need in salt",
    "start": "506550",
    "end": "508380"
  },
  {
    "text": "we had a couple of hooks that installed",
    "start": "508380",
    "end": "510570"
  },
  {
    "text": "some some binaries that were necessary",
    "start": "510570",
    "end": "512700"
  },
  {
    "text": "to run our tests and one of the best",
    "start": "512700",
    "end": "514740"
  },
  {
    "text": "things about Solana Labs is out of the",
    "start": "514740",
    "end": "516089"
  },
  {
    "text": "box we got some strong paralyzation",
    "start": "516089",
    "end": "517770"
  },
  {
    "text": "primitives so automatically it would",
    "start": "517770",
    "end": "520020"
  },
  {
    "text": "detect all of our tests paralyze them",
    "start": "520020",
    "end": "521849"
  },
  {
    "text": "over about 12 machines and that was",
    "start": "521849",
    "end": "523740"
  },
  {
    "text": "something that we didn't have to any",
    "start": "523740",
    "end": "524640"
  },
  {
    "text": "configuration for while this worked well",
    "start": "524640",
    "end": "527850"
  },
  {
    "text": "for us for quite a while it altom utley",
    "start": "527850",
    "end": "529350"
  },
  {
    "text": "became very expensive so if you think",
    "start": "529350",
    "end": "532080"
  },
  {
    "text": "about CI mo CI providers will bill you",
    "start": "532080",
    "end": "534990"
  },
  {
    "text": "by the month but actually you're really",
    "start": "534990",
    "end": "537149"
  },
  {
    "text": "running CI for maybe eight to ten hours",
    "start": "537149",
    "end": "540029"
  },
  {
    "text": "a day during working hours and at night",
    "start": "540029",
    "end": "542040"
  },
  {
    "text": "your load is actually very low if you",
    "start": "542040",
    "end": "543510"
  },
  {
    "text": "have any at all on the weekends it's the",
    "start": "543510",
    "end": "545610"
  },
  {
    "text": "same story so you're paying for all of",
    "start": "545610",
    "end": "547680"
  },
  {
    "text": "your CI a at all times when you really",
    "start": "547680",
    "end": "549750"
  },
  {
    "text": "only need it for maybe sixty hours a",
    "start": "549750",
    "end": "552330"
  },
  {
    "text": "week finally as our app grew pretty",
    "start": "552330",
    "end": "556110"
  },
  {
    "text": "large a bunch of the optimizations we",
    "start": "556110",
    "end": "558060"
  },
  {
    "text": "wanted to do such as having some",
    "start": "558060",
    "end": "559680"
  },
  {
    "text": "software ready to go as soon as the",
    "start": "559680",
    "end": "561060"
  },
  {
    "text": "machines booted up we weren't able to",
    "start": "561060",
    "end": "563339"
  },
  {
    "text": "get fine-grained control over our build",
    "start": "563339",
    "end": "566070"
  },
  {
    "text": "started to grow to about 3035 minutes as",
    "start": "566070",
    "end": "568680"
  },
  {
    "text": "the team grew we were getting a lot of",
    "start": "568680",
    "end": "570630"
  },
  {
    "text": "key changes queued up and ultimately we",
    "start": "570630",
    "end": "573600"
  },
  {
    "text": "were seeing infrastructure flakiness",
    "start": "573600",
    "end": "575730"
  },
  {
    "text": "just due to the load that we were",
    "start": "575730",
    "end": "577050"
  },
  {
    "text": "putting on the external provider so once",
    "start": "577050",
    "end": "579959"
  },
  {
    "text": "again we set out for a way to get our",
    "start": "579959",
    "end": "581610"
  },
  {
    "text": "bill times back down and enable our",
    "start": "581610",
    "end": "583230"
  },
  {
    "text": "pipeline to move smoothly and we came",
    "start": "583230",
    "end": "585209"
  },
  {
    "text": "across a pretty innovative CI provider",
    "start": "585209",
    "end": "586890"
  },
  {
    "text": "called build K so bill kite only",
    "start": "586890",
    "end": "590160"
  },
  {
    "text": "provides the CI scheduler portion of a",
    "start": "590160",
    "end": "592620"
  },
  {
    "text": "CI system they have a model called bring",
    "start": "592620",
    "end": "595079"
  },
  {
    "text": "your own compute so bill kite will host",
    "start": "595079",
    "end": "597779"
  },
  {
    "text": "a managed product that connects with",
    "start": "597779",
    "end": "601050"
  },
  {
    "text": "your SCM provider and schedules your",
    "start": "601050",
    "end": "602760"
  },
  {
    "text": "workload but it's up to you to run their",
    "start": "602760",
    "end": "605760"
  },
  {
    "text": "open source agent on your own",
    "start": "605760",
    "end": "607140"
  },
  {
    "text": "infrastructure to pick up work that",
    "start": "607140",
    "end": "609089"
  },
  {
    "text": "they've scheduled",
    "start": "609089",
    "end": "610450"
  },
  {
    "text": "this gave us a lot of flexibility to run",
    "start": "610450",
    "end": "612730"
  },
  {
    "text": "our own software to build pipelines",
    "start": "612730",
    "end": "614950"
  },
  {
    "text": "without needing to build any of the UI",
    "start": "614950",
    "end": "617410"
  },
  {
    "text": "or of the other portions either for a CI",
    "start": "617410",
    "end": "619270"
  },
  {
    "text": "scheduler and allow us to keep costs low",
    "start": "619270",
    "end": "621010"
  },
  {
    "text": "by optimizing for providing power during",
    "start": "621010",
    "end": "623410"
  },
  {
    "text": "the day and bring up the compute during",
    "start": "623410",
    "end": "625990"
  },
  {
    "text": "that time",
    "start": "625990",
    "end": "628260"
  },
  {
    "text": "so here's a basic overview of what the",
    "start": "628260",
    "end": "631080"
  },
  {
    "text": "book architecture looks like so if you",
    "start": "631080",
    "end": "632940"
  },
  {
    "text": "see up here at the top in their hosted",
    "start": "632940",
    "end": "634740"
  },
  {
    "text": "platform they provide the bill kite web",
    "start": "634740",
    "end": "636630"
  },
  {
    "text": "UI any integrations you might expect",
    "start": "636630",
    "end": "638490"
  },
  {
    "text": "like with slack or with your SCM",
    "start": "638490",
    "end": "640380"
  },
  {
    "text": "provider and that will start queuing the",
    "start": "640380",
    "end": "643710"
  },
  {
    "text": "workload that your agents will run as",
    "start": "643710",
    "end": "647640"
  },
  {
    "text": "you go down across the bottom line the",
    "start": "647640",
    "end": "649680"
  },
  {
    "text": "on premise is what lives in your own vbz",
    "start": "649680",
    "end": "651300"
  },
  {
    "text": "so we're running these agents on",
    "start": "651300",
    "end": "653580"
  },
  {
    "text": "machines that we provision in AWS and",
    "start": "653580",
    "end": "656160"
  },
  {
    "text": "because these live in our own VPC we can",
    "start": "656160",
    "end": "658740"
  },
  {
    "text": "lock down access to things like our",
    "start": "658740",
    "end": "660060"
  },
  {
    "text": "source code any internal systems that",
    "start": "660060",
    "end": "662190"
  },
  {
    "text": "they need access to and any other",
    "start": "662190",
    "end": "663780"
  },
  {
    "text": "sensitive resources that we want to",
    "start": "663780",
    "end": "665220"
  },
  {
    "text": "access during our builds so today we've",
    "start": "665220",
    "end": "670920"
  },
  {
    "text": "been using bill kite for about a year",
    "start": "670920",
    "end": "672510"
  },
  {
    "text": "now and we're really happy with the",
    "start": "672510",
    "end": "674310"
  },
  {
    "text": "system we've made so together with Bill",
    "start": "674310",
    "end": "676230"
  },
  {
    "text": "kite docker and AWS auto-scaling groups",
    "start": "676230",
    "end": "678210"
  },
  {
    "text": "we've built a system that scales up runs",
    "start": "678210",
    "end": "681570"
  },
  {
    "text": "the tests we need to and gives us the",
    "start": "681570",
    "end": "683580"
  },
  {
    "text": "flexibility to put more instances in",
    "start": "683580",
    "end": "686400"
  },
  {
    "text": "there to paralyze as the eff grow given",
    "start": "686400",
    "end": "689520"
  },
  {
    "text": "that we have the scheduler portion from",
    "start": "689520",
    "end": "690990"
  },
  {
    "text": "build kite will require to build out the",
    "start": "690990",
    "end": "693330"
  },
  {
    "text": "computer of the CI we had a handful",
    "start": "693330",
    "end": "695720"
  },
  {
    "text": "requirements when we set out to build",
    "start": "695720",
    "end": "697620"
  },
  {
    "text": "this system and the first and foremost",
    "start": "697620",
    "end": "699960"
  },
  {
    "text": "thing we wanted to have the system be",
    "start": "699960",
    "end": "701730"
  },
  {
    "text": "was container based this gives us a",
    "start": "701730",
    "end": "703830"
  },
  {
    "text": "strong contract that applications can",
    "start": "703830",
    "end": "705450"
  },
  {
    "text": "conform to so every application can",
    "start": "705450",
    "end": "708000"
  },
  {
    "text": "define a docker file or some other",
    "start": "708000",
    "end": "709620"
  },
  {
    "text": "method of building a container that",
    "start": "709620",
    "end": "711330"
  },
  {
    "text": "describes all the dependencies that they",
    "start": "711330",
    "end": "713250"
  },
  {
    "text": "need",
    "start": "713250",
    "end": "713870"
  },
  {
    "text": "this gives the application developers a",
    "start": "713870",
    "end": "716790"
  },
  {
    "text": "contract to say you know I can provide",
    "start": "716790",
    "end": "719100"
  },
  {
    "text": "you a container and all our machines had",
    "start": "719100",
    "end": "720630"
  },
  {
    "text": "to do was run that container with the",
    "start": "720630",
    "end": "721920"
  },
  {
    "text": "tests we wanted it to be auto scaling",
    "start": "721920",
    "end": "724400"
  },
  {
    "text": "being a small leverage team we really",
    "start": "724400",
    "end": "726840"
  },
  {
    "text": "couldn't afford to sit and babysit and",
    "start": "726840",
    "end": "729240"
  },
  {
    "text": "scale up when we needed to and scaled",
    "start": "729240",
    "end": "731010"
  },
  {
    "text": "down manually so we wanted to rig up all",
    "start": "731010",
    "end": "733410"
  },
  {
    "text": "of the load to report those metrics to",
    "start": "733410",
    "end": "735180"
  },
  {
    "text": "cloud watch so our instances would come",
    "start": "735180",
    "end": "737160"
  },
  {
    "text": "up when the need and come down when they",
    "start": "737160",
    "end": "738450"
  },
  {
    "text": "need to",
    "start": "738450",
    "end": "740030"
  },
  {
    "text": "we wanted our system to be immutable",
    "start": "740030",
    "end": "741590"
  },
  {
    "text": "this gives us a lot of stability",
    "start": "741590",
    "end": "743270"
  },
  {
    "text": "guarantees because we know that when a",
    "start": "743270",
    "end": "745340"
  },
  {
    "text": "tester tests are being run none of the",
    "start": "745340",
    "end": "747170"
  },
  {
    "text": "software underneath is being changed",
    "start": "747170",
    "end": "748760"
  },
  {
    "text": "this also gives us the ability to do",
    "start": "748760",
    "end": "750680"
  },
  {
    "text": "canary deploys and kind of see how a new",
    "start": "750680",
    "end": "753280"
  },
  {
    "text": "release performs before rolling it out",
    "start": "753280",
    "end": "755690"
  },
  {
    "text": "to the entire cluster and ultimately we",
    "start": "755690",
    "end": "758780"
  },
  {
    "text": "wanted it to be self-healing we wanted",
    "start": "758780",
    "end": "760640"
  },
  {
    "text": "to be able to identify machines that",
    "start": "760640",
    "end": "762590"
  },
  {
    "text": "were misbehaving or not running tests",
    "start": "762590",
    "end": "764090"
  },
  {
    "text": "well and automatically replace them with",
    "start": "764090",
    "end": "765890"
  },
  {
    "text": "healthy instances when that happened so",
    "start": "765890",
    "end": "769850"
  },
  {
    "text": "we use docker for our contract with",
    "start": "769850",
    "end": "771770"
  },
  {
    "text": "running tests one of the great things",
    "start": "771770",
    "end": "773900"
  },
  {
    "text": "about this is tamas on the",
    "start": "773900",
    "end": "776420"
  },
  {
    "text": "infrastructure side we simply had to",
    "start": "776420",
    "end": "778070"
  },
  {
    "text": "provide a docker daemon that was",
    "start": "778070",
    "end": "779300"
  },
  {
    "text": "available and developers could use that",
    "start": "779300",
    "end": "781160"
  },
  {
    "text": "as they pleased so every application",
    "start": "781160",
    "end": "783290"
  },
  {
    "text": "will define a docker file and they can",
    "start": "783290",
    "end": "785840"
  },
  {
    "text": "install any dependencies that they need",
    "start": "785840",
    "end": "787370"
  },
  {
    "text": "no longer does anyone have to come to an",
    "start": "787370",
    "end": "789950"
  },
  {
    "text": "infrastructure engineer and asked to",
    "start": "789950",
    "end": "791150"
  },
  {
    "text": "install the latest version of Ruby or",
    "start": "791150",
    "end": "792920"
  },
  {
    "text": "install it the database that they want",
    "start": "792920",
    "end": "794060"
  },
  {
    "text": "to use they can simply make that changes",
    "start": "794060",
    "end": "795830"
  },
  {
    "text": "in the repository and see instantly",
    "start": "795830",
    "end": "797990"
  },
  {
    "text": "reflected in CI another great benefit of",
    "start": "797990",
    "end": "801080"
  },
  {
    "text": "this is that it's a it's very",
    "start": "801080",
    "end": "802190"
  },
  {
    "text": "reproducible so if there's a particular",
    "start": "802190",
    "end": "804500"
  },
  {
    "text": "failure n CI that they're unable to",
    "start": "804500",
    "end": "806720"
  },
  {
    "text": "reproduce on their host machine they can",
    "start": "806720",
    "end": "808700"
  },
  {
    "text": "build the container locally and run the",
    "start": "808700",
    "end": "810230"
  },
  {
    "text": "exact same command that's running in CI",
    "start": "810230",
    "end": "811790"
  },
  {
    "text": "to debug and get some further insight",
    "start": "811790",
    "end": "815150"
  },
  {
    "text": "also because we were trying to paralyze",
    "start": "815150",
    "end": "817430"
  },
  {
    "text": "our machine our test across even more",
    "start": "817430",
    "end": "819589"
  },
  {
    "text": "machines we really wanted the artifacts",
    "start": "819589",
    "end": "821510"
  },
  {
    "text": "to be portable so we could build the",
    "start": "821510",
    "end": "823279"
  },
  {
    "text": "image once and then ship it out to 30 or",
    "start": "823279",
    "end": "825740"
  },
  {
    "text": "more machines for them to run all in",
    "start": "825740",
    "end": "827900"
  },
  {
    "text": "parallel so for some of our larger",
    "start": "827900",
    "end": "832610"
  },
  {
    "text": "applications so we've actually outgrown",
    "start": "832610",
    "end": "834230"
  },
  {
    "text": "the traditional docker file way of",
    "start": "834230",
    "end": "835940"
  },
  {
    "text": "building containers one of the nice",
    "start": "835940",
    "end": "837740"
  },
  {
    "text": "things is that docker provides a lower",
    "start": "837740",
    "end": "839180"
  },
  {
    "text": "level API where we can customize for",
    "start": "839180",
    "end": "841339"
  },
  {
    "text": "build speed we wanted to make sure a",
    "start": "841339",
    "end": "843620"
  },
  {
    "text": "smaller changes that didn't affect",
    "start": "843620",
    "end": "845690"
  },
  {
    "text": "things like your bundle dependencies or",
    "start": "845690",
    "end": "847910"
  },
  {
    "text": "your database would start up really fast",
    "start": "847910",
    "end": "850339"
  },
  {
    "text": "and we have the ability to get down to",
    "start": "850339",
    "end": "852260"
  },
  {
    "text": "the nitty-gritty details with with",
    "start": "852260",
    "end": "854210"
  },
  {
    "text": "Dockers api's AWS auto scaling groups",
    "start": "854210",
    "end": "857600"
  },
  {
    "text": "are really powerful for defining how we",
    "start": "857600",
    "end": "860450"
  },
  {
    "text": "want machines to come up how we want",
    "start": "860450",
    "end": "862700"
  },
  {
    "text": "them to be secured and to provide work",
    "start": "862700",
    "end": "865850"
  },
  {
    "text": "workload management in a way that",
    "start": "865850",
    "end": "867770"
  },
  {
    "text": "doesn't require much human intervention",
    "start": "867770",
    "end": "869350"
  },
  {
    "text": "so we define one auto scaling group for",
    "start": "869350",
    "end": "873620"
  },
  {
    "text": "every queue that our CI system provides",
    "start": "873620",
    "end": "875360"
  },
  {
    "text": "this usually Maps one to one with an",
    "start": "875360",
    "end": "877279"
  },
  {
    "text": "application so if on a particular day",
    "start": "877279",
    "end": "879650"
  },
  {
    "text": "our monolith has a lot of builds that",
    "start": "879650",
    "end": "881300"
  },
  {
    "text": "can scale independently of some of our",
    "start": "881300",
    "end": "882680"
  },
  {
    "text": "smaller services and we wanted to",
    "start": "882680",
    "end": "885350"
  },
  {
    "text": "actually manage these all in the same",
    "start": "885350",
    "end": "886640"
  },
  {
    "text": "way such that if we made a change to the",
    "start": "886640",
    "end": "888290"
  },
  {
    "text": "base auto scaling group configuration it",
    "start": "888290",
    "end": "890000"
  },
  {
    "text": "would be reflected across all of them so",
    "start": "890000",
    "end": "892100"
  },
  {
    "text": "listed here are a few of the things that",
    "start": "892100",
    "end": "893510"
  },
  {
    "text": "we use to set up our auto scaling groups",
    "start": "893510",
    "end": "896620"
  },
  {
    "text": "we use security groups to make sure that",
    "start": "896620",
    "end": "899510"
  },
  {
    "text": "our build kind instances can only talk",
    "start": "899510",
    "end": "901250"
  },
  {
    "text": "to each other",
    "start": "901250",
    "end": "901790"
  },
  {
    "text": "and have no access to our production",
    "start": "901790",
    "end": "904130"
  },
  {
    "text": "infrastructure or anything else in the",
    "start": "904130",
    "end": "905720"
  },
  {
    "text": "system so that communication is blocked",
    "start": "905720",
    "end": "907640"
  },
  {
    "text": "at the network layer and we can feel",
    "start": "907640",
    "end": "909800"
  },
  {
    "text": "confident that our tests our testing",
    "start": "909800",
    "end": "911720"
  },
  {
    "text": "system is not going to adversely affect",
    "start": "911720",
    "end": "912800"
  },
  {
    "text": "anything else in our V PC",
    "start": "912800",
    "end": "915530"
  },
  {
    "text": "we use I am profiles to allow certain",
    "start": "915530",
    "end": "918260"
  },
  {
    "text": "cues to have elevated permissions",
    "start": "918260",
    "end": "920030"
  },
  {
    "text": "against AWS resources so most of our",
    "start": "920030",
    "end": "923360"
  },
  {
    "text": "cues need access to s3 there's going to",
    "start": "923360",
    "end": "925820"
  },
  {
    "text": "store some things like build artifacts",
    "start": "925820",
    "end": "927200"
  },
  {
    "text": "and other things necessary to run the",
    "start": "927200",
    "end": "929330"
  },
  {
    "text": "build but we have a handful of cues that",
    "start": "929330",
    "end": "931370"
  },
  {
    "text": "actually will spin up innocence run a",
    "start": "931370",
    "end": "934580"
  },
  {
    "text": "configuration against it in the search",
    "start": "934580",
    "end": "937160"
  },
  {
    "text": "that the machine ended up in the state",
    "start": "937160",
    "end": "938690"
  },
  {
    "text": "we expected it to at the end of the test",
    "start": "938690",
    "end": "940520"
  },
  {
    "text": "it'll spin down that instance and in",
    "start": "940520",
    "end": "943100"
  },
  {
    "text": "order to achieve that we wanted to allow",
    "start": "943100",
    "end": "944840"
  },
  {
    "text": "only that's that queue the elevated",
    "start": "944840",
    "end": "946580"
  },
  {
    "text": "permissions to create and destroy ec2",
    "start": "946580",
    "end": "949040"
  },
  {
    "text": "instances we use Amazon machine images",
    "start": "949040",
    "end": "952640"
  },
  {
    "text": "for provisioning the software we need to",
    "start": "952640",
    "end": "955280"
  },
  {
    "text": "run that includes the docker daemon the",
    "start": "955280",
    "end": "958910"
  },
  {
    "text": "build client that I was talking about",
    "start": "958910",
    "end": "959960"
  },
  {
    "text": "earlier and we wanted to have a single",
    "start": "959960",
    "end": "962000"
  },
  {
    "text": "ami that we can use for all of our build",
    "start": "962000",
    "end": "963860"
  },
  {
    "text": "kinda Sheen's",
    "start": "963860",
    "end": "964400"
  },
  {
    "text": "even if different auto scaling groups",
    "start": "964400",
    "end": "965930"
  },
  {
    "text": "we're going to listen on different",
    "start": "965930",
    "end": "966860"
  },
  {
    "text": "queues so this is where launch",
    "start": "966860",
    "end": "968660"
  },
  {
    "text": "configurations come in",
    "start": "968660",
    "end": "969680"
  },
  {
    "text": "so each auto scaling group will define a",
    "start": "969680",
    "end": "971510"
  },
  {
    "text": "launch configuration that says I would",
    "start": "971510",
    "end": "973400"
  },
  {
    "text": "like to listen to the default built IQ",
    "start": "973400",
    "end": "975770"
  },
  {
    "text": "or the chef milk IQ so when the launch",
    "start": "975770",
    "end": "979430"
  },
  {
    "text": "configuration gets executed when the",
    "start": "979430",
    "end": "980780"
  },
  {
    "text": "machine is brought up it'll update the",
    "start": "980780",
    "end": "982370"
  },
  {
    "text": "configuration of the build cut agent and",
    "start": "982370",
    "end": "983930"
  },
  {
    "text": "we can use that same ami across the",
    "start": "983930",
    "end": "986000"
  },
  {
    "text": "entire cluster but have each auto",
    "start": "986000",
    "end": "987890"
  },
  {
    "text": "scaling group listen to a different",
    "start": "987890",
    "end": "989240"
  },
  {
    "text": "build cut cue for our alarm triggers we",
    "start": "989240",
    "end": "994250"
  },
  {
    "text": "report some custom metrics to cloud",
    "start": "994250",
    "end": "995600"
  },
  {
    "text": "watch in order to know when we should",
    "start": "995600",
    "end": "997160"
  },
  {
    "text": "scale up and when we should scale down",
    "start": "997160",
    "end": "998480"
  },
  {
    "text": "so we have a separate service that is",
    "start": "998480",
    "end": "1000820"
  },
  {
    "text": "querying the build KPI for the number of",
    "start": "1000820",
    "end": "1003430"
  },
  {
    "text": "jobs that are queued to be run and the",
    "start": "1003430",
    "end": "1005589"
  },
  {
    "text": "number of available agents that are",
    "start": "1005589",
    "end": "1006760"
  },
  {
    "text": "there we combine these metrics on a q /",
    "start": "1006760",
    "end": "1010240"
  },
  {
    "text": "q basis and create something called",
    "start": "1010240",
    "end": "1012610"
  },
  {
    "text": "agent utilization which is just a",
    "start": "1012610",
    "end": "1014080"
  },
  {
    "text": "percentage value of what's free at the",
    "start": "1014080",
    "end": "1016060"
  },
  {
    "text": "time when we get around I think 85%",
    "start": "1016060",
    "end": "1019390"
  },
  {
    "text": "utilization for more than five minutes",
    "start": "1019390",
    "end": "1021130"
  },
  {
    "text": "we scale up and we actually can do",
    "start": "1021130",
    "end": "1023290"
  },
  {
    "text": "tiered scaling so if for whatever reason",
    "start": "1023290",
    "end": "1025270"
  },
  {
    "text": "we get a huge burst right at the",
    "start": "1025270",
    "end": "1026589"
  },
  {
    "text": "beginning of the day we can scale up",
    "start": "1026589",
    "end": "1027938"
  },
  {
    "text": "twice as fast to make sure that we can",
    "start": "1027939",
    "end": "1030400"
  },
  {
    "text": "handle that workload as it comes in also",
    "start": "1030400",
    "end": "1033490"
  },
  {
    "text": "when we start lowering down to maybe",
    "start": "1033490",
    "end": "1035438"
  },
  {
    "text": "under 50% utilization for 15 minutes",
    "start": "1035439",
    "end": "1037449"
  },
  {
    "text": "that's where we start scaling back our",
    "start": "1037449",
    "end": "1038890"
  },
  {
    "text": "queues",
    "start": "1038890",
    "end": "1040810"
  },
  {
    "text": "we heavily use spot requests for our",
    "start": "1040810",
    "end": "1044420"
  },
  {
    "text": "auto-scaling infrastructure AWS makes it",
    "start": "1044420",
    "end": "1046819"
  },
  {
    "text": "super easy to configure what you would",
    "start": "1046820",
    "end": "1049040"
  },
  {
    "text": "like your spot request bid to be for a",
    "start": "1049040",
    "end": "1051020"
  },
  {
    "text": "particular auto scaling group so spot",
    "start": "1051020",
    "end": "1053630"
  },
  {
    "text": "requests allow you to bid on an instance",
    "start": "1053630",
    "end": "1055760"
  },
  {
    "text": "instance type and usually get it for a",
    "start": "1055760",
    "end": "1058010"
  },
  {
    "text": "fraction of what you'd pay for an",
    "start": "1058010",
    "end": "1059480"
  },
  {
    "text": "automated assist type",
    "start": "1059480",
    "end": "1060820"
  },
  {
    "text": "usually we set this to be pretty high",
    "start": "1060820",
    "end": "1062780"
  },
  {
    "text": "maybe pretty close to the on-demand",
    "start": "1062780",
    "end": "1063950"
  },
  {
    "text": "price and occasionally the spot the spot",
    "start": "1063950",
    "end": "1066950"
  },
  {
    "text": "marker can fluctuate in such a way where",
    "start": "1066950",
    "end": "1068390"
  },
  {
    "text": "priced out of your instance so you're",
    "start": "1068390",
    "end": "1070190"
  },
  {
    "text": "not guaranteed to have that for the",
    "start": "1070190",
    "end": "1071540"
  },
  {
    "text": "duration of the hour but we've built in",
    "start": "1071540",
    "end": "1073730"
  },
  {
    "text": "a few mitigation saturdays so when we",
    "start": "1073730",
    "end": "1075110"
  },
  {
    "text": "know we're gonna get an instance taken",
    "start": "1075110",
    "end": "1076400"
  },
  {
    "text": "away we can cancel the job and riku it",
    "start": "1076400",
    "end": "1078650"
  },
  {
    "text": "to be picked up by a new machine that we",
    "start": "1078650",
    "end": "1080180"
  },
  {
    "text": "have in the cluster and then finally we",
    "start": "1080180",
    "end": "1083390"
  },
  {
    "text": "really wanted to make sure that when we",
    "start": "1083390",
    "end": "1084620"
  },
  {
    "text": "were scaling up and down our instances",
    "start": "1084620",
    "end": "1086030"
  },
  {
    "text": "that we were never cutting tests off and",
    "start": "1086030",
    "end": "1087950"
  },
  {
    "text": "providing an unnatural error to the user",
    "start": "1087950",
    "end": "1091100"
  },
  {
    "text": "when they were looking at their test",
    "start": "1091100",
    "end": "1092690"
  },
  {
    "text": "results so we used lifecycle hooks for",
    "start": "1092690",
    "end": "1095120"
  },
  {
    "text": "this when an auto scaling group cues and",
    "start": "1095120",
    "end": "1097730"
  },
  {
    "text": "machine to be taken out of rotation it",
    "start": "1097730",
    "end": "1099470"
  },
  {
    "text": "puts it in a terminating weight",
    "start": "1099470",
    "end": "1100850"
  },
  {
    "text": "statement every instance has a service",
    "start": "1100850",
    "end": "1103700"
  },
  {
    "text": "that is querying the AWS API and when it",
    "start": "1103700",
    "end": "1106010"
  },
  {
    "text": "realizes that the instance it's running",
    "start": "1106010",
    "end": "1107780"
  },
  {
    "text": "on is in terminating weight it sends a",
    "start": "1107780",
    "end": "1109490"
  },
  {
    "text": "signal to the Bocage",
    "start": "1109490",
    "end": "1110830"
  },
  {
    "text": "the billikin agent receives that signal",
    "start": "1110830",
    "end": "1113270"
  },
  {
    "text": "and it says I'm going to finish the work",
    "start": "1113270",
    "end": "1115160"
  },
  {
    "text": "I currently have but I won't take",
    "start": "1115160",
    "end": "1116720"
  },
  {
    "text": "anything new when I'm complete it exits",
    "start": "1116720",
    "end": "1119240"
  },
  {
    "text": "after it completes the job it's",
    "start": "1119240",
    "end": "1120800"
  },
  {
    "text": "currently running within query for all",
    "start": "1120800",
    "end": "1123140"
  },
  {
    "text": "of the book is running on the system and",
    "start": "1123140",
    "end": "1125060"
  },
  {
    "text": "once there are none we tell AWS to",
    "start": "1125060",
    "end": "1127100"
  },
  {
    "text": "continue shutting down the Machine and",
    "start": "1127100",
    "end": "1128240"
  },
  {
    "text": "is taken out of rotation this is really",
    "start": "1128240",
    "end": "1130760"
  },
  {
    "text": "powerful because we know that we're not",
    "start": "1130760",
    "end": "1132260"
  },
  {
    "text": "dropping any jobs whenever we're",
    "start": "1132260",
    "end": "1133760"
  },
  {
    "text": "rotating a machine or scaling down and",
    "start": "1133760",
    "end": "1135710"
  },
  {
    "text": "can ensure stability for the test",
    "start": "1135710",
    "end": "1137810"
  },
  {
    "text": "results so managing all those",
    "start": "1137810",
    "end": "1139460"
  },
  {
    "text": "configuration can be kind of complex we",
    "start": "1139460",
    "end": "1142580"
  },
  {
    "text": "always want to make sure that we're",
    "start": "1142580",
    "end": "1143480"
  },
  {
    "text": "representing our infrastructure s code",
    "start": "1143480",
    "end": "1144830"
  },
  {
    "text": "for us we use hashey Korps terraform to",
    "start": "1144830",
    "end": "1147860"
  },
  {
    "text": "do this so terraform allows us to",
    "start": "1147860",
    "end": "1149750"
  },
  {
    "text": "represent all of the resources you see",
    "start": "1149750",
    "end": "1152090"
  },
  {
    "text": "here as module that they provide and we",
    "start": "1152090",
    "end": "1155210"
  },
  {
    "text": "can create an abstraction on top of this",
    "start": "1155210",
    "end": "1156560"
  },
  {
    "text": "so we created our own internal module",
    "start": "1156560",
    "end": "1158720"
  },
  {
    "text": "called bill cloud OCA lean that holds",
    "start": "1158720",
    "end": "1161120"
  },
  {
    "text": "all of that configuration with a variety",
    "start": "1161120",
    "end": "1162650"
  },
  {
    "text": "of parameters if you want to add a new",
    "start": "1162650",
    "end": "1164930"
  },
  {
    "text": "queue all you have to specify is the",
    "start": "1164930",
    "end": "1166820"
  },
  {
    "text": "minimum size of your ASG the maximum",
    "start": "1166820",
    "end": "1169190"
  },
  {
    "text": "size of your ASG if you want to override",
    "start": "1169190",
    "end": "1171080"
  },
  {
    "text": "the instance type you can do that and",
    "start": "1171080",
    "end": "1172460"
  },
  {
    "text": "tell us what queue you're wanting to run",
    "start": "1172460",
    "end": "1173750"
  },
  {
    "text": "on",
    "start": "1173750",
    "end": "1174260"
  },
  {
    "text": "so with about five lines of",
    "start": "1174260",
    "end": "1176030"
  },
  {
    "text": "configuration anyone on the team can add",
    "start": "1176030",
    "end": "1178280"
  },
  {
    "text": "a new cue and put a pull request against",
    "start": "1178280",
    "end": "1180559"
  },
  {
    "text": "the infrastructure team and we can apply",
    "start": "1180559",
    "end": "1181940"
  },
  {
    "text": "it for them so they have it right away",
    "start": "1181940",
    "end": "1183260"
  },
  {
    "text": "so during our daily peak we have quite a",
    "start": "1183260",
    "end": "1187010"
  },
  {
    "text": "few machines running we've got about 375",
    "start": "1187010",
    "end": "1190490"
  },
  {
    "text": "C for 2x large instances running during",
    "start": "1190490",
    "end": "1193340"
  },
  {
    "text": "peak times of the day and that gives us",
    "start": "1193340",
    "end": "1195350"
  },
  {
    "text": "access to about 3000 cores and 5.6",
    "start": "1195350",
    "end": "1197780"
  },
  {
    "text": "terabytes of memory to run tests against",
    "start": "1197780",
    "end": "1199190"
  },
  {
    "text": "on average we're running about 9500 jobs",
    "start": "1199190",
    "end": "1202429"
  },
  {
    "text": "per day previously I mentioned we run",
    "start": "1202429",
    "end": "1204830"
  },
  {
    "text": "about 600 bills per day and each build",
    "start": "1204830",
    "end": "1206630"
  },
  {
    "text": "can have anywhere between 3 and 35 jobs",
    "start": "1206630",
    "end": "1209210"
  },
  {
    "text": "depending on how how much they want to",
    "start": "1209210",
    "end": "1210860"
  },
  {
    "text": "paralyze their test runs every job can",
    "start": "1210860",
    "end": "1213980"
  },
  {
    "text": "spin up just the app container or often",
    "start": "1213980",
    "end": "1215809"
  },
  {
    "text": "listen up a database and something like",
    "start": "1215809",
    "end": "1217520"
  },
  {
    "text": "Redis in addition and we're actually",
    "start": "1217520",
    "end": "1219049"
  },
  {
    "text": "booting 22,000 containers per day so",
    "start": "1219049",
    "end": "1221510"
  },
  {
    "text": "this amounts to about 2800 usage hours",
    "start": "1221510",
    "end": "1224780"
  },
  {
    "text": "every day if we were to use on-demand",
    "start": "1224780",
    "end": "1227179"
  },
  {
    "text": "instances this would actually get pricey",
    "start": "1227179",
    "end": "1229220"
  },
  {
    "text": "pretty quick we would pay about eleven",
    "start": "1229220",
    "end": "1230780"
  },
  {
    "text": "hundred dollars or nine dollars and 20",
    "start": "1230780",
    "end": "1232880"
  },
  {
    "text": "cents per developer per day because of",
    "start": "1232880",
    "end": "1235400"
  },
  {
    "text": "our use of spot instances this is",
    "start": "1235400",
    "end": "1237169"
  },
  {
    "text": "actually dramatically lower we spent",
    "start": "1237169",
    "end": "1238730"
  },
  {
    "text": "around three hundred and ten dollars or",
    "start": "1238730",
    "end": "1240140"
  },
  {
    "text": "two dollars and 60 cents per developer",
    "start": "1240140",
    "end": "1241700"
  },
  {
    "text": "per day we keep a big eye on on this",
    "start": "1241700",
    "end": "1245570"
  },
  {
    "text": "this metric this is our signal to know",
    "start": "1245570",
    "end": "1247940"
  },
  {
    "text": "that even if our total cost goes up as",
    "start": "1247940",
    "end": "1250160"
  },
  {
    "text": "long as it's growing relative to the",
    "start": "1250160",
    "end": "1252620"
  },
  {
    "text": "engineering size that we're in good",
    "start": "1252620",
    "end": "1254270"
  },
  {
    "text": "shape and we can continue to scale so a",
    "start": "1254270",
    "end": "1256820"
  },
  {
    "text": "mutable infrastructure is an approach to",
    "start": "1256820",
    "end": "1258740"
  },
  {
    "text": "managing services and software",
    "start": "1258740",
    "end": "1260030"
  },
  {
    "text": "deployments on resources wherein",
    "start": "1260030",
    "end": "1261710"
  },
  {
    "text": "components are replaced rather than",
    "start": "1261710",
    "end": "1263299"
  },
  {
    "text": "changed an application or services",
    "start": "1263299",
    "end": "1265549"
  },
  {
    "text": "effectively redeployed each time any",
    "start": "1265549",
    "end": "1267620"
  },
  {
    "text": "change occurs so the way we apply this",
    "start": "1267620",
    "end": "1269960"
  },
  {
    "text": "with our auto scaling groups is by",
    "start": "1269960",
    "end": "1271850"
  },
  {
    "text": "building immutable a.m. eyes so we use",
    "start": "1271850",
    "end": "1274309"
  },
  {
    "text": "chef internally for defining our",
    "start": "1274309",
    "end": "1277340"
  },
  {
    "text": "software configuration as code so in",
    "start": "1277340",
    "end": "1279890"
  },
  {
    "text": "chef we'll define a resource and chef is",
    "start": "1279890",
    "end": "1282770"
  },
  {
    "text": "just a Ruby DSL for defining what",
    "start": "1282770",
    "end": "1284299"
  },
  {
    "text": "packages you want to install what",
    "start": "1284299",
    "end": "1285799"
  },
  {
    "text": "configuration files you're running right",
    "start": "1285799",
    "end": "1287059"
  },
  {
    "text": "down and pretty much anything you need",
    "start": "1287059",
    "end": "1288830"
  },
  {
    "text": "to configure an instance once we have a",
    "start": "1288830",
    "end": "1292850"
  },
  {
    "text": "change we want to make to chef we do the",
    "start": "1292850",
    "end": "1294860"
  },
  {
    "text": "same process we saw before we'll check",
    "start": "1294860",
    "end": "1296510"
  },
  {
    "text": "out a feature branch we'll run tests",
    "start": "1296510",
    "end": "1298010"
  },
  {
    "text": "against it and once this code reviewed",
    "start": "1298010",
    "end": "1299419"
  },
  {
    "text": "it gets merged into development branch",
    "start": "1299419",
    "end": "1301640"
  },
  {
    "text": "of chef",
    "start": "1301640",
    "end": "1302840"
  },
  {
    "text": "at this point Packer takes over so",
    "start": "1302840",
    "end": "1305779"
  },
  {
    "text": "whenever we run a build on development",
    "start": "1305779",
    "end": "1307999"
  },
  {
    "text": "chef Packer will spin up a new ec2",
    "start": "1307999",
    "end": "1310220"
  },
  {
    "text": "instance run chef against it and save",
    "start": "1310220",
    "end": "1312470"
  },
  {
    "text": "the results as an ami at this point the",
    "start": "1312470",
    "end": "1315409"
  },
  {
    "text": "ami is pushed up to the AWS registry and",
    "start": "1315409",
    "end": "1317480"
  },
  {
    "text": "it's available for whenever we want to",
    "start": "1317480",
    "end": "1319759"
  },
  {
    "text": "bump the ami we're using on our auto",
    "start": "1319759",
    "end": "1321740"
  },
  {
    "text": "scaling groups so when we're ready to",
    "start": "1321740",
    "end": "1323870"
  },
  {
    "text": "actually release something we go in to",
    "start": "1323870",
    "end": "1325519"
  },
  {
    "text": "terraform and we ask terraform to look",
    "start": "1325519",
    "end": "1327379"
  },
  {
    "text": "for the latest ami that's available for",
    "start": "1327379",
    "end": "1329539"
  },
  {
    "text": "built cut for example terraform will",
    "start": "1329539",
    "end": "1332090"
  },
  {
    "text": "tell us the ami that it finds and we can",
    "start": "1332090",
    "end": "1334009"
  },
  {
    "text": "apply that change to our auto scaling",
    "start": "1334009",
    "end": "1335360"
  },
  {
    "text": "groups to then start using this new ami",
    "start": "1335360",
    "end": "1337759"
  },
  {
    "text": "that we've built on any new instances",
    "start": "1337759",
    "end": "1339830"
  },
  {
    "text": "that come up so at this point if it's in",
    "start": "1339830",
    "end": "1342679"
  },
  {
    "text": "the middle of the day say we have 150",
    "start": "1342679",
    "end": "1344809"
  },
  {
    "text": "instances already provisioned we've",
    "start": "1344809",
    "end": "1346940"
  },
  {
    "text": "upgraded our auto scaling groups to use",
    "start": "1346940",
    "end": "1348379"
  },
  {
    "text": "the latest ami and at this point all of",
    "start": "1348379",
    "end": "1350899"
  },
  {
    "text": "the existing instances are left intact",
    "start": "1350899",
    "end": "1352340"
  },
  {
    "text": "and only new instances that come up will",
    "start": "1352340",
    "end": "1354619"
  },
  {
    "text": "have this new ami this gives us the",
    "start": "1354619",
    "end": "1356480"
  },
  {
    "text": "opportunity to do somewhat of a canary",
    "start": "1356480",
    "end": "1358429"
  },
  {
    "text": "deploy so as those new machines pickup",
    "start": "1358429",
    "end": "1360619"
  },
  {
    "text": "work we can monitor them individually",
    "start": "1360619",
    "end": "1362299"
  },
  {
    "text": "and make sure they aren't having",
    "start": "1362299",
    "end": "1363950"
  },
  {
    "text": "elevated errors or anything else that",
    "start": "1363950",
    "end": "1366679"
  },
  {
    "text": "signals that those machines are",
    "start": "1366679",
    "end": "1368059"
  },
  {
    "text": "unhealthy if they are it's pretty easy",
    "start": "1368059",
    "end": "1370399"
  },
  {
    "text": "for us to roll back to the last known",
    "start": "1370399",
    "end": "1372049"
  },
  {
    "text": "good AMI and then just replace all those",
    "start": "1372049",
    "end": "1374179"
  },
  {
    "text": "new machines that came up that weren't",
    "start": "1374179",
    "end": "1375710"
  },
  {
    "text": "behaving correctly if we ever want to",
    "start": "1375710",
    "end": "1378350"
  },
  {
    "text": "deploy a change across all of our",
    "start": "1378350",
    "end": "1380059"
  },
  {
    "text": "infrastructure and get it out in a",
    "start": "1380059",
    "end": "1381440"
  },
  {
    "text": "timely manner we built a small",
    "start": "1381440",
    "end": "1382730"
  },
  {
    "text": "deployment tool that allows us to mark",
    "start": "1382730",
    "end": "1384559"
  },
  {
    "text": "every instance using the old ami as",
    "start": "1384559",
    "end": "1386809"
  },
  {
    "text": "unhealthy so the autoscaler group will",
    "start": "1386809",
    "end": "1389779"
  },
  {
    "text": "see that it's unhealthy and that it",
    "start": "1389779",
    "end": "1391009"
  },
  {
    "text": "should be replaced and due to the",
    "start": "1391009",
    "end": "1392840"
  },
  {
    "text": "lifecycle hook configuration we've",
    "start": "1392840",
    "end": "1394159"
  },
  {
    "text": "specified before it'll allow us to wait",
    "start": "1394159",
    "end": "1396559"
  },
  {
    "text": "until all the tests that they're running",
    "start": "1396559",
    "end": "1397970"
  },
  {
    "text": "are complete and then gracefully shut",
    "start": "1397970",
    "end": "1399679"
  },
  {
    "text": "down the machines and replace them with",
    "start": "1399679",
    "end": "1401059"
  },
  {
    "text": "the new ami that we've just rolled out",
    "start": "1401059",
    "end": "1402639"
  },
  {
    "text": "so finally we wanted our cluster to be",
    "start": "1402639",
    "end": "1405769"
  },
  {
    "text": "self-healing",
    "start": "1405769",
    "end": "1406309"
  },
  {
    "text": "so we built a small check server that",
    "start": "1406309",
    "end": "1409129"
  },
  {
    "text": "lives on the instance and this health",
    "start": "1409129",
    "end": "1411499"
  },
  {
    "text": "check server will query for the status",
    "start": "1411499",
    "end": "1413149"
  },
  {
    "text": "of the build cut agents the status of",
    "start": "1413149",
    "end": "1415490"
  },
  {
    "text": "the docker daemon and a couple other",
    "start": "1415490",
    "end": "1416749"
  },
  {
    "text": "critical services we have on the box",
    "start": "1416749",
    "end": "1418299"
  },
  {
    "text": "because these machines don't",
    "start": "1418299",
    "end": "1420110"
  },
  {
    "text": "traditionally Ron respond to HTTP we're",
    "start": "1420110",
    "end": "1422600"
  },
  {
    "text": "not using we're not routing traffic to",
    "start": "1422600",
    "end": "1424460"
  },
  {
    "text": "them we have an external service in AWS",
    "start": "1424460",
    "end": "1426679"
  },
  {
    "text": "periodically checking the health check",
    "start": "1426679",
    "end": "1428330"
  },
  {
    "text": "server on every box if the machine",
    "start": "1428330",
    "end": "1431360"
  },
  {
    "text": "responds unhealthily more than once per",
    "start": "1431360",
    "end": "1432919"
  },
  {
    "text": "minute it's automatically taken out of",
    "start": "1432919",
    "end": "1434629"
  },
  {
    "text": "rotation and",
    "start": "1434629",
    "end": "1435850"
  },
  {
    "text": "scaling group will manage pulling up a",
    "start": "1435850",
    "end": "1437380"
  },
  {
    "text": "new one to replace it additionally when",
    "start": "1437380",
    "end": "1441010"
  },
  {
    "text": "we're running tests we always want to",
    "start": "1441010",
    "end": "1442450"
  },
  {
    "text": "make sure that the user has an error",
    "start": "1442450",
    "end": "1444700"
  },
  {
    "text": "that's actionable for them so if a user",
    "start": "1444700",
    "end": "1447160"
  },
  {
    "text": "sees in their test result that it failed",
    "start": "1447160",
    "end": "1448600"
  },
  {
    "text": "because the doctor daemon failed to",
    "start": "1448600",
    "end": "1449980"
  },
  {
    "text": "respond correctly there's obviously",
    "start": "1449980",
    "end": "1451510"
  },
  {
    "text": "nothing they can do about that",
    "start": "1451510",
    "end": "1452470"
  },
  {
    "text": "so we've built some small wrappers",
    "start": "1452470",
    "end": "1454390"
  },
  {
    "text": "around our test runners to detect when",
    "start": "1454390",
    "end": "1456760"
  },
  {
    "text": "there's an infrastructure error causing",
    "start": "1456760",
    "end": "1458410"
  },
  {
    "text": "a test failure when it does that it'll",
    "start": "1458410",
    "end": "1460270"
  },
  {
    "text": "swallow that exception queued up to be",
    "start": "1460270",
    "end": "1462039"
  },
  {
    "text": "retried on a healthy machine and provide",
    "start": "1462039",
    "end": "1464350"
  },
  {
    "text": "the user with some actionable feedback",
    "start": "1464350",
    "end": "1465570"
  },
  {
    "text": "that they can bet it can fix the test",
    "start": "1465570",
    "end": "1467740"
  },
  {
    "text": "for so taking a look back at what we",
    "start": "1467740",
    "end": "1469990"
  },
  {
    "text": "accomplished about a year ago our test",
    "start": "1469990",
    "end": "1472900"
  },
  {
    "text": "times were creeping up above the 35",
    "start": "1472900",
    "end": "1474340"
  },
  {
    "text": "minute mark we were paying about",
    "start": "1474340",
    "end": "1476700"
  },
  {
    "text": "$180,000 per year for this",
    "start": "1476700",
    "end": "1479020"
  },
  {
    "text": "infrastructure it was unstable it was",
    "start": "1479020",
    "end": "1481809"
  },
  {
    "text": "becoming a little flaky with the load we",
    "start": "1481809",
    "end": "1483130"
  },
  {
    "text": "were putting on it and we didn't have",
    "start": "1483130",
    "end": "1484990"
  },
  {
    "text": "any options to customize the software on",
    "start": "1484990",
    "end": "1487330"
  },
  {
    "text": "it to make that more stable this was",
    "start": "1487330",
    "end": "1489010"
  },
  {
    "text": "good for us when we were in the 50 to 60",
    "start": "1489010",
    "end": "1491289"
  },
  {
    "text": "range but as we grew to a team of 120 we",
    "start": "1491289",
    "end": "1495100"
  },
  {
    "text": "knew this wasn't going to support us so",
    "start": "1495100",
    "end": "1496360"
  },
  {
    "text": "fast forward to the present and our",
    "start": "1496360",
    "end": "1498640"
  },
  {
    "text": "builds are running in about 12 minutes",
    "start": "1498640",
    "end": "1499840"
  },
  {
    "text": "we're spending about half the money that",
    "start": "1499840",
    "end": "1501909"
  },
  {
    "text": "we did a year ago and $90,000 per year",
    "start": "1501909",
    "end": "1504130"
  },
  {
    "text": "we've built in a lot of stability and",
    "start": "1504130",
    "end": "1506230"
  },
  {
    "text": "automatic retry features that have been",
    "start": "1506230",
    "end": "1508090"
  },
  {
    "text": "keeping the scaling well for us and it's",
    "start": "1508090",
    "end": "1510220"
  },
  {
    "text": "suitable for a team our size and as we",
    "start": "1510220",
    "end": "1513159"
  },
  {
    "text": "continue to grow we feel that this will",
    "start": "1513159",
    "end": "1515080"
  },
  {
    "text": "scale well with us so looking ahead at",
    "start": "1515080",
    "end": "1517900"
  },
  {
    "text": "peak load we're running about 375",
    "start": "1517900",
    "end": "1520270"
  },
  {
    "text": "machines but the way we've configured it",
    "start": "1520270",
    "end": "1522370"
  },
  {
    "text": "it should be easy enough for us to press",
    "start": "1522370",
    "end": "1523960"
  },
  {
    "text": "on the gas increase the parallelization",
    "start": "1523960",
    "end": "1525549"
  },
  {
    "text": "for our tests and add more instances as",
    "start": "1525549",
    "end": "1528159"
  },
  {
    "text": "the team grows so thank you everyone",
    "start": "1528159",
    "end": "1530340"
  },
  {
    "text": "I'll be hanging out at the startup bar",
    "start": "1530340",
    "end": "1532450"
  },
  {
    "text": "if you guys have any questions I would",
    "start": "1532450",
    "end": "1534159"
  },
  {
    "text": "love to chat with you about some so yeah",
    "start": "1534159",
    "end": "1535680"
  },
  {
    "text": "[Applause]",
    "start": "1535680",
    "end": "1540619"
  }
]