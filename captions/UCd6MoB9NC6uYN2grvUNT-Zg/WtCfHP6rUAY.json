[
  {
    "text": "Hi. Welcome to 'This is My Architecture',\ncoming to you from Zurich in Switzerland.",
    "start": "6918",
    "end": "11879"
  },
  {
    "text": "Today, I'm joined by Michal\nfrom Coople.",
    "start": "11879",
    "end": "14627"
  },
  {
    "text": "- Hi, Michal.\n- Hi, Ross.",
    "start": "14627",
    "end": "16223"
  },
  {
    "text": "Thank you for inviting me here.",
    "start": "16223",
    "end": "17857"
  },
  {
    "text": "Such a pleasure.\nWhat can you tell us about Coople?",
    "start": "17857",
    "end": "20021"
  },
  {
    "text": "So Coople is a digital staffing platform.",
    "start": "20021",
    "end": "22614"
  },
  {
    "text": "We support finding, hiring, and pay-rolling\nof temporary and permanent workers.",
    "start": "22614",
    "end": "28356"
  },
  {
    "text": "We're in Switzerland and in the UK.",
    "start": "28356",
    "end": "31469"
  },
  {
    "text": "And we have more than 20,000 companies registered\nand more than 500,000 workers.",
    "start": "31469",
    "end": "36486"
  },
  {
    "text": "That is really nice.",
    "start": "37431",
    "end": "38612"
  },
  {
    "text": "Tell me what part of Coople\nare we going to be talking about?",
    "start": "38612",
    "end": "41031"
  },
  {
    "text": "So today, I'd like to tell you\nhow we migrated our system",
    "start": "41032",
    "end": "44199"
  },
  {
    "text": "from a traditional data center\nto AWS.",
    "start": "44199",
    "end": "46535"
  },
  {
    "text": "We have had a CQRS Event Source node on it\nwhich we moved to AWS.",
    "start": "46535",
    "end": "50821"
  },
  {
    "text": "Today, we are gradually migrating functionalities",
    "start": "50821",
    "end": "53982"
  },
  {
    "text": "to domain serverless services.",
    "start": "53982",
    "end": "57234"
  },
  {
    "text": "That is nice.",
    "start": "57235",
    "end": "58999"
  },
  {
    "text": "Event Sourcing CQRS \nis some of my favorite architecture patterns",
    "start": "58999",
    "end": "63037"
  },
  {
    "text": "that I'm really keen to get into the details.",
    "start": "63037",
    "end": "66058"
  },
  {
    "text": "Why don't you take us through\nwhat's on the board?",
    "start": "66058",
    "end": "68471"
  },
  {
    "text": "So when a client wants to write to the system,",
    "start": "68471",
    "end": "72477"
  },
  {
    "text": "they send us a CQRS command.",
    "start": "72477",
    "end": "75822"
  },
  {
    "text": "It goes to AWS Lambda.",
    "start": "75822",
    "end": "78186"
  },
  {
    "text": "This Lambda processes and\nvalidates the request.",
    "start": "79633",
    "end": "82715"
  },
  {
    "text": "And if everything is fine,\nit emits an event to the event store.",
    "start": "82715",
    "end": "87474"
  },
  {
    "text": "Our event store is a table\nin DynamoDB.",
    "start": "87474",
    "end": "91006"
  },
  {
    "text": "Then this event goes through DynamoDB stream\nto Lambda.",
    "start": "92499",
    "end": "96798"
  },
  {
    "text": "Our streamer puts the event to SNS FIFO",
    "start": "98492",
    "end": "102775"
  },
  {
    "text": "and also archives data to S3.",
    "start": "102776",
    "end": "106387"
  },
  {
    "text": "From SNS FIFO, we do a fan-out.",
    "start": "108367",
    "end": "110684"
  },
  {
    "text": "Every service can subscribe to an event",
    "start": "110684",
    "end": "113201"
  },
  {
    "text": "by simply attaching SQS to SNS.",
    "start": "113202",
    "end": "117423"
  },
  {
    "text": "Now, SNS FIFO is a relatively new service\nin AWS.",
    "start": "118947",
    "end": "123034"
  },
  {
    "text": "If we were to go back in time for a year,\nwhat would this look like?",
    "start": "123034",
    "end": "126447"
  },
  {
    "text": "So before we had a normal SNS and SQS.",
    "start": "126447",
    "end": "130069"
  },
  {
    "text": "We moved it to SNS FIFO and SQS FIFO\nto simplify the architecture.",
    "start": "130070",
    "end": "135359"
  },
  {
    "text": "This simple change helped us to remove\nadditional components",
    "start": "135359",
    "end": "139056"
  },
  {
    "text": "which were maintaining the events ordering\nwithin one aggregate and events cache in the handler.",
    "start": "139056",
    "end": "144585"
  },
  {
    "text": "Okay, great to hear.\nSo what happens next?",
    "start": "144585",
    "end": "148211"
  },
  {
    "text": "So Lambda pulls events from SQS.",
    "start": "148211",
    "end": "153489"
  },
  {
    "text": "Here we handle all the business events",
    "start": "153489",
    "end": "156453"
  },
  {
    "text": "and we write the data to our read models.",
    "start": "156453",
    "end": "161360"
  },
  {
    "text": "These are the projections\nfor reading the data from the system.",
    "start": "161360",
    "end": "166866"
  },
  {
    "text": "When a client wants to read the data,\nthey send us a CQRS query to Lambda.",
    "start": "166866",
    "end": "172890"
  },
  {
    "text": "Lambda reads this data from the read model\nand sends it back to the client.",
    "start": "172890",
    "end": "179653"
  },
  {
    "text": "So having read models \nin something like DynamoDB makes a lot of sense.",
    "start": "179653",
    "end": "183952"
  },
  {
    "text": "You get away from having to build the queries\nat runtime,",
    "start": "183952",
    "end": "186672"
  },
  {
    "text": "but how do you know \nwhat read models you need for your customers?",
    "start": "186672",
    "end": "189217"
  },
  {
    "text": "So at the beginning we don't know this.",
    "start": "189217",
    "end": "191461"
  },
  {
    "text": "We start quite usually with MySQL database.",
    "start": "191461",
    "end": "194752"
  },
  {
    "text": "Over time, we learn\nwhat access patterns are used",
    "start": "194752",
    "end": "199015"
  },
  {
    "text": "and then we can change this database\nto a different one",
    "start": "199016",
    "end": "202009"
  },
  {
    "text": "that better suits the access pattern\nused by the microservice.",
    "start": "202009",
    "end": "205887"
  },
  {
    "text": "Okay, okay, nice.",
    "start": "205887",
    "end": "207637"
  },
  {
    "text": "I want to go back a bit\nwhere, right at the beginning,",
    "start": "207637",
    "end": "210431"
  },
  {
    "text": "you mentioned that you are migrating\nfrom a CQRS monolith application.",
    "start": "210431",
    "end": "215054"
  },
  {
    "text": "How does that fit in\nto what you've got on AWS now?",
    "start": "215054",
    "end": "218298"
  },
  {
    "text": "So we still use the monolith,\nbut from MySQL event store,",
    "start": "218298",
    "end": "222607"
  },
  {
    "text": "we migrated to a table in DynamoDB.",
    "start": "222607",
    "end": "225832"
  },
  {
    "text": "Our monolith uses the same table\nas all the microservices.",
    "start": "225832",
    "end": "230071"
  },
  {
    "text": "The difference is that for building projections,",
    "start": "230071",
    "end": "232999"
  },
  {
    "text": "it uses a GSI which maintains a global order\nfor all events in the system.",
    "start": "232999",
    "end": "238760"
  },
  {
    "text": "Okay, now as elegant\nand as good as this architecture looks,",
    "start": "238760",
    "end": "243877"
  },
  {
    "text": "it's always constantly evolving.",
    "start": "243877",
    "end": "246347"
  },
  {
    "text": "What's next?",
    "start": "246347",
    "end": "247729"
  },
  {
    "text": "So right now we are starting\nto build new contexts in the Coople.",
    "start": "247729",
    "end": "251749"
  },
  {
    "text": "It means that a new context \nis getting a separate event store.",
    "start": "251749",
    "end": "256639"
  },
  {
    "text": "This new context will have a separate business event\nwhich is internal for this context.",
    "start": "256639",
    "end": "263528"
  },
  {
    "text": "And when a new context wants to\ncommunicate with an old part of the system,",
    "start": "263528",
    "end": "268393"
  },
  {
    "text": "they will be using public events\nwhich will be sent over EventBridge.",
    "start": "268393",
    "end": "272417"
  },
  {
    "text": "Okay. Michal, thank you \nfor sharing your architecture with us today.",
    "start": "272417",
    "end": "276996"
  },
  {
    "text": "You're welcome.",
    "start": "276996",
    "end": "278179"
  },
  {
    "text": "And thank you for watching 'This is My Architecture.'",
    "start": "278179",
    "end": "280995"
  }
]