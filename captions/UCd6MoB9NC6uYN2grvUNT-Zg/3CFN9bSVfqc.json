[
  {
    "text": "everyone welcome to the AWS developer workshop theater thank you very much for joining us we have another excellent",
    "start": "4560",
    "end": "10770"
  },
  {
    "text": "session from Alex you might have seen him present on AWS 101 this morning also",
    "start": "10770",
    "end": "15840"
  },
  {
    "text": "hello to the couple thousands of viewers out there on Twitch thank you for tuning in very glad that you could join us so alex is going to take an existing",
    "start": "15840",
    "end": "23280"
  },
  {
    "text": "Express JavaScript application and he's going to port it over to serverless architecture so if you've done any",
    "start": "23280",
    "end": "30600"
  },
  {
    "text": "JavaScript and you want to learn how that might apply to server lists you're in the right room so thank you very much Alex take it away Thank You Brandon hi",
    "start": "30600",
    "end": "38219"
  },
  {
    "text": "everybody welcome back how many of you already attended this session today not too many",
    "start": "38219",
    "end": "43440"
  },
  {
    "text": "cool so welcome for the first time to the theater thank you all of you on Twitch we had so many good questions so",
    "start": "43440",
    "end": "50879"
  },
  {
    "text": "keep them coming and I'm here we are here all day today tomorrow and Thursday so keep your question coming we're happy",
    "start": "50879",
    "end": "57839"
  },
  {
    "text": "to help so yes this session is about porting an actual application in about 30 minutes we have 45 50 so I can do",
    "start": "57839",
    "end": "65760"
  },
  {
    "text": "some introduction and get you started on service computing some of the main concepts that you may not be aware of",
    "start": "65760",
    "end": "74149"
  },
  {
    "text": "I'm a Technical Evangelist I'm a software engineer and and web developer that's mostly what I do what I've done",
    "start": "74149",
    "end": "80159"
  },
  {
    "text": "in my career now I'm a Technical Evangelist at AWS I also organize some",
    "start": "80159",
    "end": "85409"
  },
  {
    "text": "service events around the world we call them service days we have a new ad one",
    "start": "85409",
    "end": "90630"
  },
  {
    "text": "in Canada but it's probably coming soon as well so if you're interested just reach out happy to help there too the",
    "start": "90630",
    "end": "98159"
  },
  {
    "text": "agenda for this session is a little bit of background about service computing what is it when and how and why does it",
    "start": "98159",
    "end": "105479"
  },
  {
    "text": "make sense then I'll do a brief introduction about which programming",
    "start": "105479",
    "end": "110609"
  },
  {
    "text": "language you can actually run on AWS lambda our service and the rest of our",
    "start": "110609",
    "end": "116070"
  },
  {
    "text": "service platform and then we'll actually do some live coding and there's up migration I've actually have a very",
    "start": "116070",
    "end": "122670"
  },
  {
    "text": "similar app and a very similar demo for a Python web application so if you're",
    "start": "122670",
    "end": "128220"
  },
  {
    "text": "more enterprise ok who is a JavaScript developer or does JavaScript what about Python ok",
    "start": "128220",
    "end": "135209"
  },
  {
    "text": "so JavaScript wins sorry I could have done it in Python come back come to me I can share the",
    "start": "135209",
    "end": "141600"
  },
  {
    "text": "Python version with you so sorry the last time you raise your hand how many",
    "start": "141600",
    "end": "147660"
  },
  {
    "text": "of you already know are familiar with serval is computing a few right so for",
    "start": "147660",
    "end": "153450"
  },
  {
    "text": "all the others and you know for everybody actually why is herbal computing what does it mean when and how",
    "start": "153450",
    "end": "159900"
  },
  {
    "text": "does it make sense first of all what do we really mean when we say service",
    "start": "159900",
    "end": "165330"
  },
  {
    "text": "because a lot of people I meet around the world tell me well there are still servers right you I mean it's not that",
    "start": "165330",
    "end": "172620"
  },
  {
    "text": "we hate them or that we want to not use them it's that there is a lot of work involved with managing and patching and",
    "start": "172620",
    "end": "179610"
  },
  {
    "text": "provisioning and you know thinking about servers or containers in general there",
    "start": "179610",
    "end": "185010"
  },
  {
    "text": "is some heavy lifting there there is some maintenance that needs to go on even the skill set that you need you",
    "start": "185010",
    "end": "190620"
  },
  {
    "text": "know it's a mix of operations ops devoxx and so on so when we say serval is you",
    "start": "190620",
    "end": "196440"
  },
  {
    "text": "you know when you do services you might actually use more servers than people that actually use servers because we manage them for you we spin up a lot of",
    "start": "196440",
    "end": "203610"
  },
  {
    "text": "machines virtual machines and instances for you under the hood of course it's just that you don't have to think about",
    "start": "203610",
    "end": "209430"
  },
  {
    "text": "them at all they kind of disappear from your development workflow and the",
    "start": "209430",
    "end": "215610"
  },
  {
    "text": "consequence of that are you know if you can take the quiz constant you know few benefits first one is you can you can be",
    "start": "215610",
    "end": "223950"
  },
  {
    "text": "much more flexible as far as your scaling or the scale on your application",
    "start": "223950",
    "end": "229049"
  },
  {
    "text": "because all you need to provide is your application code your business logic everything under that as we talked this",
    "start": "229049",
    "end": "236190"
  },
  {
    "text": "morning in the first session everything behind below that we handle it so all the networking all the virtual machines",
    "start": "236190",
    "end": "242820"
  },
  {
    "text": "or the patching of the operating system all the security of that part of the",
    "start": "242820",
    "end": "248760"
  },
  {
    "text": "stack is on the cloud provider on us so it takes first of all some heavy",
    "start": "248760",
    "end": "254100"
  },
  {
    "text": "lifting of your workload your your your your development workflow but it also",
    "start": "254100",
    "end": "260100"
  },
  {
    "text": "means that you can scale much much faster if we have zero calls per second or if you have a thousand calls per",
    "start": "260100",
    "end": "266250"
  },
  {
    "text": "second it's none of your problem it's our problem we take care of that for you and it's elastic meaning that if",
    "start": "266250",
    "end": "273940"
  },
  {
    "text": "there is nothing on zero calls per second you pay zero okay that's the idea instead of paying per hour or per month",
    "start": "273940",
    "end": "280930"
  },
  {
    "text": "or per second you pay per 100 millisecond intervals right that's a big",
    "start": "280930",
    "end": "286900"
  },
  {
    "text": "mental shift when you think about developments or cloud resources in general and that's how this service",
    "start": "286900",
    "end": "293790"
  },
  {
    "text": "revolution kind of started in 2014-2015 when we announced AWS lambda which is",
    "start": "293790",
    "end": "300400"
  },
  {
    "text": "our function as a service service offering so the idea they can go up to",
    "start": "300400",
    "end": "306850"
  },
  {
    "text": "potentially infinity and down to zero based on the car and load you know it changes how you build software it",
    "start": "306850",
    "end": "313150"
  },
  {
    "text": "changes how you think about architectures it changing how you think about your business model as well so",
    "start": "313150",
    "end": "318640"
  },
  {
    "text": "there is a lot of things to think about today we talked about the technical",
    "start": "318640",
    "end": "324040"
  },
  {
    "text": "stuff so another consequence is that availability of your application that the resiliency of your application",
    "start": "324040",
    "end": "330190"
  },
  {
    "text": "that's also on us right meaning we take care of deploying your application into multiple data centers you know so that",
    "start": "330190",
    "end": "336820"
  },
  {
    "text": "if anything goes down even if all building goes down your application is",
    "start": "336820",
    "end": "342100"
  },
  {
    "text": "still up and running that's something that if we use traditional servers you need to get take care of that somehow",
    "start": "342100",
    "end": "347650"
  },
  {
    "text": "and you have the skills and the time and pay those people that do that in your organization it's a lot of time that you",
    "start": "347650",
    "end": "355480"
  },
  {
    "text": "can invest otherwise to not reinvent the wheel to build something that brings value to your customers for real and so",
    "start": "355480",
    "end": "363910"
  },
  {
    "text": "that holds for security allows for resiliency and availability as well so this is about benefits in general and in",
    "start": "363910",
    "end": "371169"
  },
  {
    "text": "the live demo to actually do it and what really changes another advantage or",
    "start": "371169",
    "end": "376570"
  },
  {
    "text": "another shift that we see is that you can now finally build event-driven",
    "start": "376570",
    "end": "382710"
  },
  {
    "text": "architectures without thinking about the server's so event-driven because everything in the service world is an",
    "start": "382710",
    "end": "389680"
  },
  {
    "text": "event okay something happens in your in your AWS account on your cloud",
    "start": "389680",
    "end": "395770"
  },
  {
    "text": "environment a new object on Amazon s3 or a new record on your database or an",
    "start": "395770",
    "end": "401050"
  },
  {
    "text": "user logs in you can think of that as an event that triggers your lambda",
    "start": "401050",
    "end": "406569"
  },
  {
    "text": "functions and your functions are stateless and they can just react to these events maybe it's called some",
    "start": "406569",
    "end": "412659"
  },
  {
    "text": "other services or stored the information into another database or do all sort of business logics that you need to do even",
    "start": "412659",
    "end": "419500"
  },
  {
    "text": "an HTTP call is modeled as an event so if you're handling HTTP calls for your",
    "start": "419500",
    "end": "425979"
  },
  {
    "text": "API is for your back-end for your web or mobile applications those are also events coming into your function and",
    "start": "425979",
    "end": "431949"
  },
  {
    "text": "your function will always get this event object as input and it will come back",
    "start": "431949",
    "end": "437199"
  },
  {
    "text": "with a you know another JSON or depending on the language another kind of output document if you are doing API",
    "start": "437199",
    "end": "445210"
  },
  {
    "text": "is with a body and a status code and everything will we'll see that in a second",
    "start": "445210",
    "end": "450819"
  },
  {
    "text": "the use cases if you ask me about a year or two ago I started doing circles",
    "start": "450819",
    "end": "455919"
  },
  {
    "text": "around 2016 I will told you maybe 40 50",
    "start": "455919",
    "end": "462550"
  },
  {
    "text": "percent of the applications could have been built on top of AWS lambda and serena with a serval is kind of approach",
    "start": "462550",
    "end": "469150"
  },
  {
    "text": "if you ask me today I'll probably say more than 80 or 90 percent because we have added you know security",
    "start": "469150",
    "end": "476949"
  },
  {
    "text": "functionalities compliance for for credit card payments like ESO or HIPAA",
    "start": "476949",
    "end": "483099"
  },
  {
    "text": "and all sort of certifications we have augmented enlarge how many minutes you",
    "start": "483099",
    "end": "489880"
  },
  {
    "text": "have lambda functions can run with so from five minutes up to 15 minutes so that covers a lot more use cases now and",
    "start": "489880",
    "end": "496830"
  },
  {
    "text": "the number of integrations there are more than 40 or 50 integrations from",
    "start": "496830",
    "end": "502029"
  },
  {
    "text": "other services that you can use not only to handle these events but even to customize how the other services work",
    "start": "502029",
    "end": "508150"
  },
  {
    "text": "let me give you an example that is a service called Amazon Cognito user tools that allow you to manage users like sign",
    "start": "508150",
    "end": "515649"
  },
  {
    "text": "in/sign up password forgotten emails or multi-factor authentication everything",
    "start": "515649",
    "end": "521020"
  },
  {
    "text": "about users so you not to were implemented but you can extend the behavior of that service using AWS",
    "start": "521020",
    "end": "526959"
  },
  {
    "text": "lambda hooks so you can say on signup run this function",
    "start": "526959",
    "end": "532210"
  },
  {
    "text": "then you can implement whatever you want in whatever language you want as an event and you signup happens go and send",
    "start": "532210",
    "end": "539350"
  },
  {
    "text": "an email go and store message somewhere really do whatever you want or when the",
    "start": "539350",
    "end": "546520"
  },
  {
    "text": "user requests to change password okay run this other function and you can kind of customize the built-in functionality",
    "start": "546520",
    "end": "552850"
  },
  {
    "text": "of this service using lambda and this is happening in a lot of places and this is actually something that a lot of other",
    "start": "552850",
    "end": "559180"
  },
  {
    "text": "customers are doing for their product if you have a product and you want your customers to customize the way your",
    "start": "559180",
    "end": "565480"
  },
  {
    "text": "product behaves you can do something similar use lambda you allow them to provide code to you to extend your",
    "start": "565480",
    "end": "571660"
  },
  {
    "text": "system and you run their code on lambda so that's what we're doing that's what a lot of customers started doing as well",
    "start": "571660",
    "end": "576790"
  },
  {
    "text": "so you can let your customers be event-driven and customize the behavior of your application but anyway they use",
    "start": "576790",
    "end": "583480"
  },
  {
    "text": "cases go from you know web app backends for web application IOT even even chat",
    "start": "583480",
    "end": "590950"
  },
  {
    "text": "BOTS how many of you have an Amazon Alexa at home a few I have a couple so alex is built on top of AWS lambda",
    "start": "590950",
    "end": "598089"
  },
  {
    "text": "itself so every time you say something the request goes to an AWS lambda",
    "start": "598089",
    "end": "603220"
  },
  {
    "text": "function and you can just code what needs to happen what's the response what to store in which database and so on so",
    "start": "603220",
    "end": "611620"
  },
  {
    "text": "the idea is that everything that's driven by events or by user interaction or everything that is a very spiky or",
    "start": "611620",
    "end": "618220"
  },
  {
    "text": "unpredictable load is a very good use case for lambda so that you're not over provisioning or under provisioning if we",
    "start": "618220",
    "end": "624700"
  },
  {
    "text": "have 10,000 requests from 0 to 10,000 requests per second in half a minute",
    "start": "624700",
    "end": "629950"
  },
  {
    "text": "span that's really hard to handle with the traditional you know instances or containers because you need to scale",
    "start": "629950",
    "end": "637450"
  },
  {
    "text": "really quickly lambda can scale in less than a second in a few hundred milliseconds we can spin up thousands of",
    "start": "637450",
    "end": "643900"
  },
  {
    "text": "these micro virtual machines to handle your your requests there is even a",
    "start": "643900",
    "end": "652260"
  },
  {
    "text": "spatial way to define your your application structure let's say and",
    "start": "652260",
    "end": "658209"
  },
  {
    "text": "we're going to use that in the demo so don't don't worry if you know what Amazon Cloud formation is that's how we",
    "start": "658209",
    "end": "665079"
  },
  {
    "text": "do interest dress code so you define your application as a template and that allows you to deploy your application to",
    "start": "665079",
    "end": "671620"
  },
  {
    "text": "multiple accounts multiple AWS region or or multiple environments like development staging production and so on",
    "start": "671620",
    "end": "679480"
  },
  {
    "text": "without touching anything you just deploy that template and able yes Sam",
    "start": "679480",
    "end": "684550"
  },
  {
    "text": "besides being a cute squirrel it's also the service application model and that allows you to define service application",
    "start": "684550",
    "end": "691240"
  },
  {
    "text": "with that same approach but you know with fewer lines of code it's also it's",
    "start": "691240",
    "end": "696370"
  },
  {
    "text": "also open source so your your your template from this like maybe a couple hundred lines of code becomes you know",
    "start": "696370",
    "end": "702970"
  },
  {
    "text": "20 25 so you're going to find your functions your API is the events that involve them and all the other resources",
    "start": "702970",
    "end": "710230"
  },
  {
    "text": "in a template so that's how you define a function okay whatever",
    "start": "710230",
    "end": "717010"
  },
  {
    "text": "so you define this AWS service function resource in your cloud formation template you specify which events can",
    "start": "717010",
    "end": "724030"
  },
  {
    "text": "invoke it eventually you provide some permissions so your function can do this",
    "start": "724030",
    "end": "729850"
  },
  {
    "text": "or that because by default your functions can do cannot invoke any other",
    "start": "729850",
    "end": "735130"
  },
  {
    "text": "awf service if you want anything to do anything you need to provide permissions because it's secure by default it's",
    "start": "735130",
    "end": "741610"
  },
  {
    "text": "locked down to just running stateless code if you want to read from a database",
    "start": "741610",
    "end": "747250"
  },
  {
    "text": "or write into a queue provide permission to do so and with like three four lines of llamó",
    "start": "747250",
    "end": "752830"
  },
  {
    "text": "this is yeah more code but you can also use JSON with three four lines of Yambol code you can provide those permissions",
    "start": "752830",
    "end": "758670"
  },
  {
    "text": "there is even a local two that we call AWS Sam CLI that allows you to emulate a",
    "start": "758670",
    "end": "765640"
  },
  {
    "text": "double is lambda API gateway and some of the other related service in your on your machine so you don't necessarily",
    "start": "765640",
    "end": "772330"
  },
  {
    "text": "have to deploy everything to the cloud if you are offline or if you I have some unit tests or integration tests that you",
    "start": "772330",
    "end": "779260"
  },
  {
    "text": "want to run locally you can do that as well and emulate all this environment on your machine this is also open source so",
    "start": "779260",
    "end": "787540"
  },
  {
    "text": "let me tell you a little bit about the runtimes if you're using nodejs that's been one of the very first",
    "start": "787540",
    "end": "793690"
  },
  {
    "text": "languages to be supported by a double lambda but there are all basically every",
    "start": "793690",
    "end": "798700"
  },
  {
    "text": "other language right now can be supported and let me tell you why and how we got there so we",
    "start": "798700",
    "end": "805010"
  },
  {
    "text": "started with nodejs back in 2014-2015 we all said Python 2 and Java that was the",
    "start": "805010",
    "end": "812149"
  },
  {
    "text": "first three and that's when I started basically I could use a couple of them and then we are the nodejs for dotnet we",
    "start": "812149",
    "end": "819410"
  },
  {
    "text": "keep adding more nodejs versions and python 3 as well and then last year we had this boom of new runtimes a new",
    "start": "819410",
    "end": "827570"
  },
  {
    "text": "programming language that you can use on top of lambda and that happened well",
    "start": "827570",
    "end": "832910"
  },
  {
    "text": "first of all because customers asked for it and that's what we do if you ask us to do something we have enough customers",
    "start": "832910",
    "end": "839060"
  },
  {
    "text": "saying so and requesting a given runtime or a specific language or a feature we try to deliver as soon as possible but",
    "start": "839060",
    "end": "845870"
  },
  {
    "text": "also we released a new feature of lambda which we call custom runtimes that allow",
    "start": "845870",
    "end": "852290"
  },
  {
    "text": "you or anybody to come up with their own custom support for other languages so",
    "start": "852290",
    "end": "859279"
  },
  {
    "text": "other partners and the community has been built in support for PHP and C++",
    "start": "859279",
    "end": "864319"
  },
  {
    "text": "and even COBOL we have a customer who migrated their mainframe code to a SS",
    "start": "864319",
    "end": "871279"
  },
  {
    "text": "lambda with this COBOL runtime so you can kind of containerize or reshape your",
    "start": "871279",
    "end": "878990"
  },
  {
    "text": "funky or your application code to run on lambda whatever language it is there is no kind of excuse anymore",
    "start": "878990",
    "end": "886910"
  },
  {
    "text": "and yet we recently like like a week or two ago announced no no J s10 support to",
    "start": "886910",
    "end": "894819"
  },
  {
    "text": "but you know how do we actually choose the right language I mean do you really",
    "start": "894819",
    "end": "900290"
  },
  {
    "text": "have to I've seen teams using a double is lambda and implementing different",
    "start": "900290",
    "end": "905360"
  },
  {
    "text": "endpoints and different parts of the system in different programs programming language that's one of the great",
    "start": "905360",
    "end": "910639"
  },
  {
    "text": "advantages of building micro services you know each sub part of the system can be independent we'll use a different",
    "start": "910639",
    "end": "916639"
  },
  {
    "text": "database potentially we'll use a different language so I'm good with Python and node maybe you're very good",
    "start": "916639",
    "end": "922610"
  },
  {
    "text": "with dotnet and Java or my friend is very good with go for some other [Music]",
    "start": "922610",
    "end": "928120"
  },
  {
    "text": "use cases so we can all work together in the same system and every function canal can be implemented in a different",
    "start": "928120",
    "end": "934870"
  },
  {
    "text": "runtime so that's pretty flexible I think there are reasons why you may want",
    "start": "934870",
    "end": "940990"
  },
  {
    "text": "to choose a specific runtime if you want to do a lot of things in parallel it's not recommended but it's probably easier",
    "start": "940990",
    "end": "947110"
  },
  {
    "text": "to do it in note then with Python threads or something like that so depending on that you can choose the",
    "start": "947110",
    "end": "953950"
  },
  {
    "text": "favorite programming language that you like or they want that's specifically built for that kind of task so how do we",
    "start": "953950",
    "end": "961420"
  },
  {
    "text": "pour the web application there are a few strategies let me show you a couple of ways that we can cheat kind of take an",
    "start": "961420",
    "end": "967630"
  },
  {
    "text": "existing app and migrated like lift and shifted to a double is lambda without touching it much so if you're using",
    "start": "967630",
    "end": "975880"
  },
  {
    "text": "Express specifically in nodejs this is actually a library called AWS",
    "start": "975880",
    "end": "981160"
  },
  {
    "text": "Robles Express that kind of wraps your application and makes it service ready",
    "start": "981160",
    "end": "986320"
  },
  {
    "text": "it makes it compatible with it is lambda and you can keep using your middlewares and your libraries and your application",
    "start": "986320",
    "end": "992980"
  },
  {
    "text": "code without really almost touching nothing it's it's an open source and",
    "start": "992980",
    "end": "999580"
  },
  {
    "text": "Gita you can go and try it out why not if you're an Express application that's not what we're going to do today because",
    "start": "999580",
    "end": "1006270"
  },
  {
    "text": "it will be very easy and kind of cheating there is a Python version of",
    "start": "1006270",
    "end": "1012330"
  },
  {
    "text": "that actually two versions of that if you're using Python and frameworks like flask or Django for example so there is",
    "start": "1012330",
    "end": "1019440"
  },
  {
    "text": "Zappa Zappa is a another library that kind of wraps your Django application",
    "start": "1019440",
    "end": "1025439"
  },
  {
    "text": "and also makes it kind of service ready so what you do is you install it you in",
    "start": "1025440",
    "end": "1030780"
  },
  {
    "text": "it and then you deploy it really it will just attack your jungle app and deploy it to lambda as is maybe you configure",
    "start": "1030780",
    "end": "1038280"
  },
  {
    "text": "the bucket where the code needs to go but there is really no code change and of course some Django plugins are",
    "start": "1038280",
    "end": "1045360"
  },
  {
    "text": "supported some are not it's very well documented and it could be a good way to get started and lift and shift your app",
    "start": "1045360",
    "end": "1052080"
  },
  {
    "text": "it's also open source what is the second version of it if you're using a flask specifically",
    "start": "1052080",
    "end": "1059250"
  },
  {
    "text": "instead of junga there is chalice so cellies requires some code refactor so you",
    "start": "1059250",
    "end": "1066130"
  },
  {
    "text": "install it you refactor a little bit in your code and you chalice deploy from",
    "start": "1066130",
    "end": "1071320"
  },
  {
    "text": "the terminal so the refactor this is a typical minimal flask application the refactor",
    "start": "1071320",
    "end": "1078010"
  },
  {
    "text": "is really about that okay so you kind of just change the library instead of",
    "start": "1078010",
    "end": "1084070"
  },
  {
    "text": "importing flare flask you import chalice everything else is supposed to work and again the flask and django ecosystem is",
    "start": "1084070",
    "end": "1091420"
  },
  {
    "text": "so big that some of the plugins some of the hacks or workarounds are not fully",
    "start": "1091420",
    "end": "1097480"
  },
  {
    "text": "compatible with this it's a lift and shift approach meaning it probably works but it might need some fine-tuning but",
    "start": "1097480",
    "end": "1104530"
  },
  {
    "text": "it's a good strategy to see how your application delivers as far as speed and",
    "start": "1104530",
    "end": "1109690"
  },
  {
    "text": "performance and security in a service environment so check it out it's also",
    "start": "1109690",
    "end": "1115390"
  },
  {
    "text": "open source this is not good enough ok we want to actually optimize our code",
    "start": "1115390",
    "end": "1122710"
  },
  {
    "text": "for a double is lambda we want to make it fast we want to make it cloud ready and cloud native we want to see all the",
    "start": "1122710",
    "end": "1130150"
  },
  {
    "text": "security permission policies so that our functions are doing the right thing and",
    "start": "1130150",
    "end": "1137020"
  },
  {
    "text": "we also want to optimize for performance that's a big difference if you go for",
    "start": "1137020",
    "end": "1142300"
  },
  {
    "text": "this lift and ship approaches because they end up doing a big fat aww lambda",
    "start": "1142300",
    "end": "1148090"
  },
  {
    "text": "function that does everything it's like a new monolith but it's shaped like a function the consequence is that the",
    "start": "1148090",
    "end": "1155230"
  },
  {
    "text": "amount of code then you need to upload is pretty big it could be 20 30 40 megabytes okay that's not the optimal",
    "start": "1155230",
    "end": "1162970"
  },
  {
    "text": "way to do this the idea is to have at least the least amount of dependencies the least amount of code to reuse you",
    "start": "1162970",
    "end": "1170410"
  },
  {
    "text": "know manage services and to use what Blom that comes with by default like the",
    "start": "1170410",
    "end": "1176650"
  },
  {
    "text": "SDK and you have some built in libraries depending on the runtime so if your code",
    "start": "1176650",
    "end": "1181810"
  },
  {
    "text": "if the deployment package that you build for lambda is I don't know 50 kilobytes",
    "start": "1181810",
    "end": "1188890"
  },
  {
    "text": "instead of fitting key megabyte as you can imagine we have a lot less stuff to move and even for you in the developer",
    "start": "1188890",
    "end": "1195880"
  },
  {
    "text": "experience is much faster to upload 50 kilobytes than 50 megabytes so we can do",
    "start": "1195880",
    "end": "1201820"
  },
  {
    "text": "better and let's do it so I have this github repo there is also the Python",
    "start": "1201820",
    "end": "1209200"
  },
  {
    "text": "version it's on my github account so let's go and open it and see what we can",
    "start": "1209200",
    "end": "1214570"
  },
  {
    "text": "do with that if internet is up again yes",
    "start": "1214570",
    "end": "1220410"
  },
  {
    "text": "so I've actually forked this application",
    "start": "1220410",
    "end": "1225970"
  },
  {
    "text": "from already existing one it's an Express application it used to run on",
    "start": "1225970",
    "end": "1231870"
  },
  {
    "text": "Amazon Elastic Beanstalk so there is already some AWS configuration in there",
    "start": "1231870",
    "end": "1237390"
  },
  {
    "text": "again I'm trying to make it a bit easier and faster so we can do in 30 minutes so it's reading running on AWS but not on",
    "start": "1237390",
    "end": "1245080"
  },
  {
    "text": "lambda it's running on another computer flat form that's using instances and kind of containers kind of abstraction",
    "start": "1245080",
    "end": "1251890"
  },
  {
    "text": "level so let me actually show it it's a simple startup landing page so it's a",
    "start": "1251890",
    "end": "1261520"
  },
  {
    "text": "landing page just showing you hey we have a new product do you want to sign up for it there is a forum a module you",
    "start": "1261520",
    "end": "1266860"
  },
  {
    "text": "sign you sign up with your email and a couple of more fields and we store that data into a dynamo table and I get an",
    "start": "1266860",
    "end": "1273700"
  },
  {
    "text": "email whenever someone new signs up very simple use case it does only one thing",
    "start": "1273700",
    "end": "1279240"
  },
  {
    "text": "but you know let's see how we can migrate that to service quickly so I already have the code on my machine so",
    "start": "1279240",
    "end": "1288610"
  },
  {
    "text": "let's open it in an IDE this is what what the app looks like there is an app",
    "start": "1288610",
    "end": "1293860"
  },
  {
    "text": "folder with one index.js file in there there is a lot of stuff related to",
    "start": "1293860",
    "end": "1300870"
  },
  {
    "text": "express j/s itself and we are going to remove all of that so the amount of code that we end up with might be like 50",
    "start": "1300870",
    "end": "1307990"
  },
  {
    "text": "percent of what we started from the results show a static section is a key",
    "start": "1307990",
    "end": "1314800"
  },
  {
    "text": "folder and there we have JavaScript resources and CSS and J's stuff this",
    "start": "1314800",
    "end": "1320710"
  },
  {
    "text": "application was doing some server-side rendering to render the HTML",
    "start": "1320710",
    "end": "1326180"
  },
  {
    "text": "it's doing that you know with the typical Express format so there's stuff",
    "start": "1326180",
    "end": "1331520"
  },
  {
    "text": "like static bias and variables in the templates so the first thing we want to do is to do you know to follow that like",
    "start": "1331520",
    "end": "1339770"
  },
  {
    "text": "modern application best practices web application so we want to separate our front end from our back end so our back",
    "start": "1339770",
    "end": "1347570"
  },
  {
    "text": "end can scale independently and our front end can be as simple as a simple static web site that can evolve",
    "start": "1347570",
    "end": "1354080"
  },
  {
    "text": "independently from the API so the first thing we'll do is converting this dynamic template into a static HTML file",
    "start": "1354080",
    "end": "1361910"
  },
  {
    "text": "and you know we could even take that into another repo and give it to another team and maybe they start using angular",
    "start": "1361910",
    "end": "1368270"
  },
  {
    "text": "or react or view j/s and you know it'll be their project as long as we agree on the interface so first of all let's move",
    "start": "1368270",
    "end": "1377750"
  },
  {
    "text": "this file to the static folder so we're",
    "start": "1377750",
    "end": "1383390"
  },
  {
    "text": "going to do is to have everything that is a static front-end in the static folder so we can deploy that to Amazon",
    "start": "1383390",
    "end": "1389690"
  },
  {
    "text": "s3 is a static website so let's move it there and once it's there we can",
    "start": "1389690",
    "end": "1396710"
  },
  {
    "text": "simplify it a bit actually it needs to be in another format so you'll be study",
    "start": "1396710",
    "end": "1405080"
  },
  {
    "text": "index dot HTML so we can deploy it easily so now that it's an HTML file",
    "start": "1405080",
    "end": "1411020"
  },
  {
    "text": "we're going to remove all this dynamic content here you can just simplify a bit",
    "start": "1411020",
    "end": "1416830"
  },
  {
    "text": "this might be converted into a static website generator or into environment",
    "start": "1416830",
    "end": "1423050"
  },
  {
    "text": "variables if you're using react or angular so let's not spend too much time on that we can use the default theme",
    "start": "1423050",
    "end": "1430900"
  },
  {
    "text": "like the fold all this stuff that's dynamic so I'm not",
    "start": "1430900",
    "end": "1438350"
  },
  {
    "text": "saying this is required a required step for you but this will help you separate",
    "start": "1438350",
    "end": "1444380"
  },
  {
    "text": "these two different applications your front end and your back end so let's",
    "start": "1444380",
    "end": "1449420"
  },
  {
    "text": "move this stuff here to anything else yeah okay we can get rid of that cool so",
    "start": "1449420",
    "end": "1458060"
  },
  {
    "text": "we are left with a really just a static website here there is some jQuery logic to take the input form and to submit",
    "start": "1458060",
    "end": "1466730"
  },
  {
    "text": "that to an API and as you see there is a slash sign up end point that we are",
    "start": "1466730",
    "end": "1475280"
  },
  {
    "text": "posting our content to and of course as soon as we separate back end from front end our static website and our API will",
    "start": "1475280",
    "end": "1483290"
  },
  {
    "text": "probably not be on the same domain or the same origin so we'll probably need to change that slash sign up and",
    "start": "1483290",
    "end": "1490280"
  },
  {
    "text": "actually add the API domain there like my company slash whatever but for now",
    "start": "1490280",
    "end": "1496640"
  },
  {
    "text": "let's take that static website and deploy how can we do that okay so I",
    "start": "1496640",
    "end": "1503240"
  },
  {
    "text": "already created an s3 bucket for this let me find out what's the name it",
    "start": "1503240",
    "end": "1509600"
  },
  {
    "text": "should be like so let's sign up so we can do this static website deployment",
    "start": "1509600",
    "end": "1515510"
  },
  {
    "text": "with one comment and that's pretty easy let me find the bucket so this is the s3",
    "start": "1515510",
    "end": "1521990"
  },
  {
    "text": "console and I already created this service signup bucket for us to use I'm",
    "start": "1521990",
    "end": "1527870"
  },
  {
    "text": "going to use that and how do we deploy this static folder into s3 that as easy",
    "start": "1527870",
    "end": "1533240"
  },
  {
    "text": "as AWS as tracing static",
    "start": "1533240",
    "end": "1539770"
  },
  {
    "text": "and then we do just that okay this way we're just syncing the local folder with",
    "start": "1540240",
    "end": "1545759"
  },
  {
    "text": "the remote bucket and everything will be copied every time we change something just sync and it will go just like that",
    "start": "1545759",
    "end": "1553529"
  },
  {
    "text": "but this is a public website right we want everybody to be able to access it as I managed before as I mentioned",
    "start": "1553529",
    "end": "1559950"
  },
  {
    "text": "before you need to provide the permission for this file to be read otherwise by default you know the cloud",
    "start": "1559950",
    "end": "1565559"
  },
  {
    "text": "is secure by default so if I just upload them the body will have access to it so we just do a CL public read ok this make",
    "start": "1565559",
    "end": "1575940"
  },
  {
    "text": "sure these files are readable from everybody out there so let's do that and",
    "start": "1575940",
    "end": "1581899"
  },
  {
    "text": "this command is now reading the local folder winning the remote folder finding",
    "start": "1581899",
    "end": "1587399"
  },
  {
    "text": "the differences and uploading the files so if I did everything correctly I should now be able to open the static",
    "start": "1587399",
    "end": "1597240"
  },
  {
    "text": "website of this bucket and see my application okay so I told you it's a",
    "start": "1597240",
    "end": "1603840"
  },
  {
    "text": "very simple application it is pretty ugly web page but I can do sign up now",
    "start": "1603840",
    "end": "1609960"
  },
  {
    "text": "sign up today and here I'm showing a male and a couple of parameters like do",
    "start": "1609960",
    "end": "1615509"
  },
  {
    "text": "you want preview access yes now it's super simple but of course if we try to",
    "start": "1615509",
    "end": "1623539"
  },
  {
    "text": "sign up we get a beautiful 405 error",
    "start": "1623539",
    "end": "1628649"
  },
  {
    "text": "which is like hey you cannot post into an s3 bucket because we are using this domain and this domain is a static",
    "start": "1628649",
    "end": "1635519"
  },
  {
    "text": "website you can really post it we need to create the API to take the data and save it into a database so let's do that",
    "start": "1635519",
    "end": "1643639"
  },
  {
    "text": "first of all let's see what the application code looks like it's a J's",
    "start": "1643639",
    "end": "1649529"
  },
  {
    "text": "file there is a lot of stuff going on the first part here is about handling",
    "start": "1649529",
    "end": "1655009"
  },
  {
    "text": "multi process your multi-pronged multi-process web server we don't really need that anymore",
    "start": "1655009",
    "end": "1661379"
  },
  {
    "text": "so I'm just going to delete this first party here there's already 25 lines of",
    "start": "1661379",
    "end": "1666929"
  },
  {
    "text": "code we do not need too bright we not we do not need to maintain or patch or test or debug done so everything else here is",
    "start": "1666929",
    "end": "1677779"
  },
  {
    "text": "business logic more or less there is some more server listening port",
    "start": "1677779",
    "end": "1683399"
  },
  {
    "text": "configuration we don't need that either so I was saying here that is left if we",
    "start": "1683399",
    "end": "1690210"
  },
  {
    "text": "remove the application setup we don't",
    "start": "1690210",
    "end": "1695490"
  },
  {
    "text": "need that if you remove the HTML view that we used to render with express we",
    "start": "1695490",
    "end": "1703320"
  },
  {
    "text": "don't need that because now the web site is static somewhere else so that's also not needed so we already ended up with",
    "start": "1703320",
    "end": "1710759"
  },
  {
    "text": "about 50 lines of code instead of 100 and let's see how we can make this a",
    "start": "1710759",
    "end": "1717590"
  },
  {
    "text": "table slam that compatible we actually don't need these two dependencies either",
    "start": "1717590",
    "end": "1723799"
  },
  {
    "text": "okay we're good so now the shape of your lambda functions the handler of your",
    "start": "1723799",
    "end": "1730679"
  },
  {
    "text": "lambda function should take an event parameter and the context parameter as input so let's do that",
    "start": "1730679",
    "end": "1738679"
  },
  {
    "text": "export handler we have an event variable",
    "start": "1738679",
    "end": "1745529"
  },
  {
    "text": "and a context var okay I'm using the new ACMA script six seven",
    "start": "1745529",
    "end": "1750600"
  },
  {
    "text": "whatever so in this event we're going to receive the actual input event in our case it",
    "start": "1750600",
    "end": "1757710"
  },
  {
    "text": "will be an HTTP call so we have the body the headers and everything in the HTTP request the context is useful for like",
    "start": "1757710",
    "end": "1765210"
  },
  {
    "text": "who is the entity how much time I have left and all sort of context contextual information there so is this compatible",
    "start": "1765210",
    "end": "1775710"
  },
  {
    "text": "with our Express interface Express give you request and response so it's not",
    "start": "1775710",
    "end": "1782220"
  },
  {
    "text": "compatible we need to do some refactoring there so let's do that so our body will be",
    "start": "1782220",
    "end": "1791360"
  },
  {
    "text": "json.parse event the body so event that body is the body of the request and",
    "start": "1791360",
    "end": "1798120"
  },
  {
    "text": "that's a string so we Jason parse it and we're going to have the body of the request that's one line of code and then",
    "start": "1798120",
    "end": "1805860"
  },
  {
    "text": "we can use body instead of request of body everywhere okay done so the",
    "start": "1805860",
    "end": "1815550"
  },
  {
    "text": "business logic here is just creating DynamoDB item that's just a kind of a",
    "start": "1815550",
    "end": "1821100"
  },
  {
    "text": "JSON item with some string string string strings we are storing four strings here",
    "start": "1821100",
    "end": "1827030"
  },
  {
    "text": "and we are taking that from the body of the request we might want to have some",
    "start": "1827030",
    "end": "1832980"
  },
  {
    "text": "validation but you know we're just porting here we are not improving or adding new functionalities let's just",
    "start": "1832980",
    "end": "1838470"
  },
  {
    "text": "focus on the porting so what comes next we are putting an item we are writing",
    "start": "1838470",
    "end": "1846270"
  },
  {
    "text": "into Amazon DynamoDB which is our no sequel database manage for you and based",
    "start": "1846270",
    "end": "1852720"
  },
  {
    "text": "on the result if everything went all right we're also publishing a message into an SNS topic it's our simple",
    "start": "1852720",
    "end": "1861360"
  },
  {
    "text": "notification service topic and when that happens we'll get an email because we have configuration has to send us an",
    "start": "1861360",
    "end": "1867630"
  },
  {
    "text": "email whenever there is a new message in the topic so this is a bit unreadable",
    "start": "1867630",
    "end": "1873660"
  },
  {
    "text": "there's a lot of cool backs mess in there so maybe let's reshape it a bit to",
    "start": "1873660",
    "end": "1878820"
  },
  {
    "text": "be you know to use a sink of AIDS and to be a bit more modern so we are kind of",
    "start": "1878820",
    "end": "1885530"
  },
  {
    "text": "modern let's say so we're just doing a wait and so this ugly callback we are",
    "start": "1885530",
    "end": "1894840"
  },
  {
    "text": "just doing a try/catch maybe so it's a bit more readable cool",
    "start": "1894840",
    "end": "1901650"
  },
  {
    "text": "so we catch the exception the error if it happens so all the error handling",
    "start": "1901650",
    "end": "1907260"
  },
  {
    "text": "logic can just be moved here cool and then we can take our SNS publish",
    "start": "1907260",
    "end": "1917790"
  },
  {
    "text": "code some just here we do wait that's",
    "start": "1917790",
    "end": "1924300"
  },
  {
    "text": "you actually need to do dot promise otherwise doesn't work we can just",
    "start": "1924300",
    "end": "1929950"
  },
  {
    "text": "promise a five-day sdk calls we have a promise you can await it we do the same",
    "start": "1929950",
    "end": "1935890"
  },
  {
    "text": "here right so we'll do another try catch",
    "start": "1935890",
    "end": "1942220"
  },
  {
    "text": "here I'm just doing some code refactoring and modernization but you know we don't really have to do this for lambda I",
    "start": "1942220",
    "end": "1948550"
  },
  {
    "text": "think it's just fun let's do it quickly so if you're an error we want to give a",
    "start": "1948550",
    "end": "1955270"
  },
  {
    "text": "five hundred otherwise we want to give a two hundred",
    "start": "1955270",
    "end": "1960850"
  },
  {
    "text": "okay I'm still using the res response variable so that doesn't work",
    "start": "1960850",
    "end": "1966430"
  },
  {
    "text": "same as their response the request so the contract between AWS lambda and API",
    "start": "1966430",
    "end": "1973660"
  },
  {
    "text": "gate we the service that we are using to have a restful interface on top of our lambda function is that we should return",
    "start": "1973660",
    "end": "1979330"
  },
  {
    "text": "an object that is shaped like this we",
    "start": "1979330",
    "end": "1985150"
  },
  {
    "text": "should have a status code like two hundred and we should have a message",
    "start": "1985150",
    "end": "1991360"
  },
  {
    "text": "this is you know your wish is obviously of a body which could contain in our",
    "start": "1991360",
    "end": "1996940"
  },
  {
    "text": "case a message it could be anything that's the structure that should be the",
    "start": "1996940",
    "end": "2003060"
  },
  {
    "text": "output of our function so let's create just a little helper to do that so we",
    "start": "2003060",
    "end": "2010920"
  },
  {
    "text": "have status message",
    "start": "2010920",
    "end": "2016820"
  },
  {
    "text": "so I'm really bad at typing on stage I'm getting better so that's what we should",
    "start": "2017560",
    "end": "2025910"
  },
  {
    "text": "return but yeah let's use those and the",
    "start": "2025910",
    "end": "2032600"
  },
  {
    "text": "message cool so we have an hour a nice little handler that returns the response",
    "start": "2032600",
    "end": "2038780"
  },
  {
    "text": "to the API gateway expects so let's just do it",
    "start": "2038780",
    "end": "2043970"
  },
  {
    "text": "down here we wanted to return a 500 with",
    "start": "2043970",
    "end": "2049610"
  },
  {
    "text": "a like KO message whatever and maybe we also return and maybe with console.log",
    "start": "2049610",
    "end": "2057530"
  },
  {
    "text": "so I didn't mention so far but everything you log in a console log or",
    "start": "2057530",
    "end": "2062658"
  },
  {
    "text": "in a print depending on the runtime goes to another service called Amazon Cloud",
    "start": "2062659",
    "end": "2067760"
  },
  {
    "text": "Watch there you will find all the invocation logs all the prints all the console information of all your",
    "start": "2067760",
    "end": "2073908"
  },
  {
    "text": "invocations what happens when we have a 200 well actually it's a 201 and we say",
    "start": "2073909",
    "end": "2082370"
  },
  {
    "text": "ok and we also have another case up here",
    "start": "2082370",
    "end": "2087520"
  },
  {
    "text": "where so this is a bit different because if DynamoDB fails it might actually be",
    "start": "2087520",
    "end": "2093770"
  },
  {
    "text": "that the email that we are trying to add already exists so we want to handle that",
    "start": "2093770",
    "end": "2099350"
  },
  {
    "text": "case and you start of 400 or 200 or 500 we want to give a 409 which means like",
    "start": "2099350",
    "end": "2106550"
  },
  {
    "text": "object already exists so the client knows that it's non error it's just that it exists already so let's just use the",
    "start": "2106550",
    "end": "2116270"
  },
  {
    "text": "return status it's still a KO in my opinion but we can argue about that and",
    "start": "2116270",
    "end": "2122540"
  },
  {
    "text": "let's move the console log up there so in our logs we will see whether it's a",
    "start": "2122540",
    "end": "2129020"
  },
  {
    "text": "DynamoDB here or whether it's an SNS error and we have configure input and",
    "start": "2129020",
    "end": "2134810"
  },
  {
    "text": "output to use the double use lambda convention so we ended up with yeah 60",
    "start": "2134810",
    "end": "2142310"
  },
  {
    "text": "lines of code are we good yeah syntax is good so up",
    "start": "2142310",
    "end": "2151680"
  },
  {
    "text": "here we didn't spend too much time talking about what's happening here but here we are just reading the environment",
    "start": "2151680",
    "end": "2159540"
  },
  {
    "text": "variable from the processed end and you could do the same in Python in Java and go in dotnet just by using the operating",
    "start": "2159540",
    "end": "2166440"
  },
  {
    "text": "system environment variable API call so",
    "start": "2166440",
    "end": "2172020"
  },
  {
    "text": "we are reading the name of the table and the name of the SNS topic from an environment variable that we can",
    "start": "2172020",
    "end": "2178020"
  },
  {
    "text": "configure cool so our code is be",
    "start": "2178020",
    "end": "2183660"
  },
  {
    "text": "imported we're not done yet the code is there we can deploy it but again we want",
    "start": "2183660",
    "end": "2189870"
  },
  {
    "text": "to apply the best practices and we want to do infrastructure as code we want to create a nice little template for our",
    "start": "2189870",
    "end": "2196320"
  },
  {
    "text": "developers or devups or operation people to just take that and deploy the function without having to redo",
    "start": "2196320",
    "end": "2205020"
  },
  {
    "text": "everything manually in the console so let's do that too so what I want to do is to create a new",
    "start": "2205020",
    "end": "2212610"
  },
  {
    "text": "file called template llamó it could be called any way you want template oh yeah mel is a convention and it could be also",
    "start": "2212610",
    "end": "2219800"
  },
  {
    "text": "jason by the way for those of you that prefer json over llamo who prefers json",
    "start": "2219800",
    "end": "2227850"
  },
  {
    "text": "over llamo sorry did you know that ml is",
    "start": "2227850",
    "end": "2233580"
  },
  {
    "text": "actually a superset of JSON so you can use JSON inside llamo that's just random knowledge but if you have a JSON",
    "start": "2233580",
    "end": "2240390"
  },
  {
    "text": "template you can just throw it inside a Yama file it works trust me that's why I",
    "start": "2240390",
    "end": "2246060"
  },
  {
    "text": "prefer Yama but I'm sure you have your ideas and your your reasons so now we",
    "start": "2246060",
    "end": "2251460"
  },
  {
    "text": "have this Yama file that we can use to",
    "start": "2251460",
    "end": "2256920"
  },
  {
    "text": "define our application right so I'm I have a really really bad memory so let",
    "start": "2256920",
    "end": "2262590"
  },
  {
    "text": "me go and find what's the structure it's all pretty well-documented so the",
    "start": "2262590",
    "end": "2268050"
  },
  {
    "text": "service application model that I've mentioned before it's on github you can find all the documentation about how to",
    "start": "2268050",
    "end": "2274620"
  },
  {
    "text": "define your applications so let's take the sample template from there and start from there okay so",
    "start": "2274620",
    "end": "2282300"
  },
  {
    "text": "that's a typical sample template that we are starting from let's use that so what",
    "start": "2282300",
    "end": "2289050"
  },
  {
    "text": "are we doing we define okay this is a template we are applying a travellish transformation this is what it W as Sam",
    "start": "2289050",
    "end": "2295200"
  },
  {
    "text": "is it's a transformation so our resources will be transformed by",
    "start": "2295200",
    "end": "2300540"
  },
  {
    "text": "confirmation but don't worry about that just the detail and then we define our resources okay we have our sign-up",
    "start": "2300540",
    "end": "2307770"
  },
  {
    "text": "function we could name it this is just a logical name we could know me name in any way we want and we define this",
    "start": "2307770",
    "end": "2315180"
  },
  {
    "text": "surplice function we want to define where the handler is so we define the",
    "start": "2315180",
    "end": "2320370"
  },
  {
    "text": "app folder and we have the index dot JSP and the handler is called handler right",
    "start": "2320370",
    "end": "2330300"
  },
  {
    "text": "so we're just defined where the code is in our folder structure then we define",
    "start": "2330300",
    "end": "2336180"
  },
  {
    "text": "the run time let's use the node.js eight run time and then we have a few more",
    "start": "2336180",
    "end": "2341640"
  },
  {
    "text": "properties to set up because we want to have an API interface on top of this function so let's go and let's go and",
    "start": "2341640",
    "end": "2348690"
  },
  {
    "text": "find that yeah so when you define a function you can have a property called",
    "start": "2348690",
    "end": "2357540"
  },
  {
    "text": "events so we need a list of events here and when you define events let me find",
    "start": "2357540",
    "end": "2367350"
  },
  {
    "text": "out you can have different type of events so if it's an s3 event like a new",
    "start": "2367350",
    "end": "2373290"
  },
  {
    "text": "object in the object storage as soon as Kinesis dynamo there are like a lot of",
    "start": "2373290",
    "end": "2378660"
  },
  {
    "text": "them these are the ones that you double your same supports today we want to use an API event because we are building an",
    "start": "2378660",
    "end": "2385560"
  },
  {
    "text": "HTTP endpoint so that's how you do it you give it a name it could be post",
    "start": "2385560",
    "end": "2395370"
  },
  {
    "text": "event so it's a type API the property is slash signup like we had",
    "start": "2395370",
    "end": "2404040"
  },
  {
    "text": "before and it's a post method it could be get put delete whatever you want",
    "start": "2404040",
    "end": "2409590"
  },
  {
    "text": "so we have already configured the event that we want to use when invoke this",
    "start": "2409590",
    "end": "2414690"
  },
  {
    "text": "function and awsm will just take this and create all the resources around it",
    "start": "2414690",
    "end": "2419970"
  },
  {
    "text": "the API gateway API the resources the methods the binding between API gate",
    "start": "2419970",
    "end": "2425010"
  },
  {
    "text": "Orion lambda so this is doing a lot of stuff for you you don't really have to learn it but it's doing a lot of stuff for you what else so we need some",
    "start": "2425010",
    "end": "2433620"
  },
  {
    "text": "permissions why because this function is reading it is actually writing into a",
    "start": "2433620",
    "end": "2440310"
  },
  {
    "text": "database and it's publishing a message into an SMS topic so if we don't provide",
    "start": "2440310",
    "end": "2446280"
  },
  {
    "text": "permissions as I've mentioned before it's not going to be able to do that so we need to provide provide permission",
    "start": "2446280",
    "end": "2453410"
  },
  {
    "text": "how do we do that let me find out you don't need to learn to do you know all",
    "start": "2453410",
    "end": "2459270"
  },
  {
    "text": "this stuff by heart of course yeah it's",
    "start": "2459270",
    "end": "2465510"
  },
  {
    "text": "somewhere here yeah",
    "start": "2465510",
    "end": "2470730"
  },
  {
    "text": "so you have these policies property that you can use so let's go with that and",
    "start": "2470730",
    "end": "2476670"
  },
  {
    "text": "let me show you what it looks like so a policy it's actually an iam policy I am is",
    "start": "2476670",
    "end": "2484320"
  },
  {
    "text": "identity and access management it's a native layer service that allows you to do who can do what in your AWS account",
    "start": "2484320",
    "end": "2491040"
  },
  {
    "text": "so when you specify a policy you can eat either use and manage policy like this a",
    "start": "2491040",
    "end": "2496410"
  },
  {
    "text": "double is lambda execute policy that is the default and then you can add more so this is a list in Yama right so we can",
    "start": "2496410",
    "end": "2503490"
  },
  {
    "text": "add more policies so we're going to add two policies one for dynamodb and one",
    "start": "2503490",
    "end": "2508680"
  },
  {
    "text": "for SNS so we want to allow some actions",
    "start": "2508680",
    "end": "2513840"
  },
  {
    "text": "on some specific resources right so the action that we want to allow is dynamo",
    "start": "2513840",
    "end": "2522980"
  },
  {
    "text": "dynamodb put item because that's what our function is doing and remember you",
    "start": "2522980",
    "end": "2530010"
  },
  {
    "text": "can be very granular you don't want to give your function I could have done this but some butterfly out there will",
    "start": "2530010",
    "end": "2538680"
  },
  {
    "text": "dice and somebody will feel really sorry for you to do this your function can create tables delete tables do all sort of",
    "start": "2538680",
    "end": "2545750"
  },
  {
    "text": "things you don't want that you want to be very specific about what this function can do so put item is good and",
    "start": "2545750",
    "end": "2553510"
  },
  {
    "text": "the same holds in the resource parameter",
    "start": "2553510",
    "end": "2559490"
  },
  {
    "text": "so we could say dynamo to be everything so it can put item on every dynamo to be",
    "start": "2559490",
    "end": "2565460"
  },
  {
    "text": "table but no it doesn't make sense we want this function to write only in one specific table that we want to create",
    "start": "2565460",
    "end": "2572030"
  },
  {
    "text": "for this app so actually this application already was deployed on",
    "start": "2572030",
    "end": "2577790"
  },
  {
    "text": "Beanstalk and there were some resource definitions that we can reuse so let me",
    "start": "2577790",
    "end": "2583490"
  },
  {
    "text": "find those somewhere yeah so we have this table definition that we",
    "start": "2583490",
    "end": "2590270"
  },
  {
    "text": "can use so let me remind you what we're doing we are defining resources in our",
    "start": "2590270",
    "end": "2596600"
  },
  {
    "text": "lamilton place so we can deploy this with one-click everywhere in our AWS regions and accounts here we can also",
    "start": "2596600",
    "end": "2604160"
  },
  {
    "text": "add all sort of other resources it could be our functions our API is our database",
    "start": "2604160",
    "end": "2610030"
  },
  {
    "text": "also can be defined here so what i'm doing here is defining a startup sign-ups table",
    "start": "2610030",
    "end": "2616850"
  },
  {
    "text": "which is a dynamodb table which has some properties there is an email primary key",
    "start": "2616850",
    "end": "2623360"
  },
  {
    "text": "that we're going to use and what's the advantage of defining your dynamodb table in the same template what do you",
    "start": "2623360",
    "end": "2631040"
  },
  {
    "text": "think the advantage is that we can reference this dynamically table in the",
    "start": "2631040",
    "end": "2638810"
  },
  {
    "text": "permission policy of our function I can do something like that so now my",
    "start": "2638810",
    "end": "2645680"
  },
  {
    "text": "function can put item only on that table and the table is created in the",
    "start": "2645680",
    "end": "2652670"
  },
  {
    "text": "application stack whenever we deploy this service application so we're going",
    "start": "2652670",
    "end": "2658160"
  },
  {
    "text": "to do the same for our SNS topic there",
    "start": "2658160",
    "end": "2663590"
  },
  {
    "text": "is a bit more stuff here but don't worry I'll guide you through that",
    "start": "2663590",
    "end": "2670930"
  },
  {
    "text": "so we are defining a queue this is a",
    "start": "2672940",
    "end": "2678800"
  },
  {
    "text": "nice qsq we are defining an SNS topic and again we are porting we are not building a new app okay this stuff was",
    "start": "2678800",
    "end": "2684260"
  },
  {
    "text": "already in the previous application it's not that you have to learn this to use the W lambda we're just fine-tuning some",
    "start": "2684260",
    "end": "2691580"
  },
  {
    "text": "stuff here I can say end point like my",
    "start": "2691580",
    "end": "2698330"
  },
  {
    "text": "email this is my email don't spam me and this stuff is just permission to",
    "start": "2698330",
    "end": "2705410"
  },
  {
    "text": "integrate SNS and SQS we don't need to go through it but we want to provide our function with the permissions to publish",
    "start": "2705410",
    "end": "2713210"
  },
  {
    "text": "a message into that as soon as topic now so allow it'll be as soon as publish I",
    "start": "2713210",
    "end": "2723310"
  },
  {
    "text": "think let me find out if it's true as soon as publish API so whenever we are",
    "start": "2723310",
    "end": "2731450"
  },
  {
    "text": "in trouble you can just go and find out what's the name of your API resource",
    "start": "2731450",
    "end": "2737980"
  },
  {
    "text": "patterns of your identifiers",
    "start": "2737980",
    "end": "2743440"
  },
  {
    "text": "yeah let me find that",
    "start": "2749740",
    "end": "2753510"
  },
  {
    "text": "that's right so this is the name of the resource and we're going to do that cool",
    "start": "2756060",
    "end": "2762890"
  },
  {
    "text": "and what's the resource that we want to publish to it is this topic here so",
    "start": "2762890",
    "end": "2769350"
  },
  {
    "text": "we're just going to reference that as well and it just kind of works so we",
    "start": "2769350",
    "end": "2775470"
  },
  {
    "text": "have just a few minutes left so we managed to build kind of the whole stack",
    "start": "2775470",
    "end": "2780570"
  },
  {
    "text": "and we can start from this template and just deploy it to production or to development account or a staging account",
    "start": "2780570",
    "end": "2788070"
  },
  {
    "text": "and the tool that we want to use is AWS Sam so you can use Sam as a local CLI",
    "start": "2788070",
    "end": "2795750"
  },
  {
    "text": "tool to take this template and you can do some package and then Sam deploy to",
    "start": "2795750",
    "end": "2801660"
  },
  {
    "text": "comments to deploy your application to the cloud and this will take your code",
    "start": "2801660",
    "end": "2806970"
  },
  {
    "text": "create the deployment package upload everything to s3 and configure conformation to deploy your application",
    "start": "2806970",
    "end": "2813840"
  },
  {
    "text": "and with a couple more lines you can deploy it to different accounts different environments you can configure",
    "start": "2813840",
    "end": "2819800"
  },
  {
    "text": "environment variables and so on so I want to take a couple of minutes to",
    "start": "2819800",
    "end": "2826350"
  },
  {
    "text": "answer your questions and instead of showing you the boring comments so thank you for coming if you have questions I'm",
    "start": "2826350",
    "end": "2832590"
  },
  {
    "text": "here you can find this and get up",
    "start": "2832590",
    "end": "2839460"
  },
  {
    "text": "there is the same application for flask and Python you can actually get all the slides of today tomorrow and Thursday if",
    "start": "2839460",
    "end": "2847260"
  },
  {
    "text": "we scan your badge at the booth or if you go to this public URL so if we take a picture we'll just send you there you",
    "start": "2847260",
    "end": "2854940"
  },
  {
    "text": "can sign up for the slides thank you sorry picture thank you everybody and if",
    "start": "2854940",
    "end": "2863100"
  },
  {
    "text": "you have questions I'm here any question from you or twitch one question for you",
    "start": "2863100",
    "end": "2868890"
  },
  {
    "text": "most of the questions on twitch were answered but what do you think is the hardest part about transitioning to a",
    "start": "2868890",
    "end": "2875250"
  },
  {
    "text": "server less sort of architecture as a developer what are the things that you should think about before you get started right so what's the hard thing",
    "start": "2875250",
    "end": "2882660"
  },
  {
    "text": "about moving to services there are a few things to be aware of I think the hardest is the mental shift of",
    "start": "2882660",
    "end": "2890540"
  },
  {
    "text": "moving away from the your favorite full-stack framework that you've been using for the last five to ten years and",
    "start": "2890540",
    "end": "2896480"
  },
  {
    "text": "the challenge there is that these frameworks have been developed like Django and flask and and I don't know",
    "start": "2896480",
    "end": "2902599"
  },
  {
    "text": "there are many other for Java and other languages these primers have been developed to work in a long-running",
    "start": "2902599",
    "end": "2908900"
  },
  {
    "text": "server environment they take sometimes 20 seconds to spin up and to be up and running like spring for Java for example",
    "start": "2908900",
    "end": "2916030"
  },
  {
    "text": "but the mental shift is to get used to writing as little code as possible to",
    "start": "2916030",
    "end": "2921410"
  },
  {
    "text": "have the least amount of dependencies to think about security to think about",
    "start": "2921410",
    "end": "2926599"
  },
  {
    "text": "permissions to think about sharing code between your team so there are other services that help you do that as well",
    "start": "2926599",
    "end": "2932990"
  },
  {
    "text": "but that the mental shift that I've seen that is more like that the friction when",
    "start": "2932990",
    "end": "2940130"
  },
  {
    "text": "you start moving to servers and just not just taking the code and throwing it you know on the other side of the world",
    "start": "2940130",
    "end": "2946280"
  },
  {
    "text": "hoping somebody will deploy it the idea is to ship to a micro services approach DevOps approach well you also",
    "start": "2946280",
    "end": "2952339"
  },
  {
    "text": "own the applications and the service that you were building so that might be the hardest thing on the technology",
    "start": "2952339",
    "end": "2958339"
  },
  {
    "text": "technology level it's not that hard so I think it's more of a cultural mental shift thank you everybody",
    "start": "2958339",
    "end": "2965000"
  },
  {
    "text": "all right thank you Alex",
    "start": "2965000",
    "end": "2968470"
  }
]