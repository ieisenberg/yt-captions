[
  {
    "text": "[Music]",
    "start": "410",
    "end": "12399"
  },
  {
    "text": "hello i'm akshada a cloud support",
    "start": "12480",
    "end": "14639"
  },
  {
    "text": "engineer here at the aws office in",
    "start": "14639",
    "end": "16960"
  },
  {
    "text": "sydney today i'm going to tell you about",
    "start": "16960",
    "end": "19520"
  },
  {
    "text": "the possible reasons for getting 401",
    "start": "19520",
    "end": "21920"
  },
  {
    "text": "unauthorized errors when using an aws",
    "start": "21920",
    "end": "24640"
  },
  {
    "text": "lambda authorizer and show you how to",
    "start": "24640",
    "end": "26880"
  },
  {
    "text": "resolve them let's get",
    "start": "26880",
    "end": "28840"
  },
  {
    "text": "started amazon api gateway can return",
    "start": "28840",
    "end": "31760"
  },
  {
    "text": "401 unauthorized errors in a variety of",
    "start": "31760",
    "end": "34399"
  },
  {
    "text": "scenarios this video addresses only a",
    "start": "34399",
    "end": "37280"
  },
  {
    "text": "401 unauthorized response returned by",
    "start": "37280",
    "end": "40160"
  },
  {
    "text": "api gateway without calling the",
    "start": "40160",
    "end": "42239"
  },
  {
    "text": "authorizer lambda function when an api",
    "start": "42239",
    "end": "45120"
  },
  {
    "text": "gateway api with the lambda authorizer",
    "start": "45120",
    "end": "47680"
  },
  {
    "text": "receives an unauthorized request api",
    "start": "47680",
    "end": "50160"
  },
  {
    "text": "gateway returns a 401 unauthorized",
    "start": "50160",
    "end": "52719"
  },
  {
    "text": "response for token based authorizers the",
    "start": "52719",
    "end": "55760"
  },
  {
    "text": "error generally occurs when a required",
    "start": "55760",
    "end": "58000"
  },
  {
    "text": "token is missing or invalidated by the",
    "start": "58000",
    "end": "60640"
  },
  {
    "text": "authorizer's token validation expression",
    "start": "60640",
    "end": "63760"
  },
  {
    "text": "for request parameter based authorizers",
    "start": "63760",
    "end": "66400"
  },
  {
    "text": "the error generally occurs when",
    "start": "66400",
    "end": "68320"
  },
  {
    "text": "configured identity sources are missing",
    "start": "68320",
    "end": "71119"
  },
  {
    "text": "null empty or invalid",
    "start": "71119",
    "end": "73680"
  },
  {
    "text": "first let's review the configurations",
    "start": "73680",
    "end": "75600"
  },
  {
    "text": "for the token based lambda authorizer",
    "start": "75600",
    "end": "78240"
  },
  {
    "text": "after logging into the aws management",
    "start": "78240",
    "end": "80720"
  },
  {
    "text": "console navigate to the api gateway",
    "start": "80720",
    "end": "83040"
  },
  {
    "text": "console choose your api navigate to the",
    "start": "83040",
    "end": "86720"
  },
  {
    "text": "authorizers pane",
    "start": "86720",
    "end": "88560"
  },
  {
    "text": "i have configured an authorizer name",
    "start": "88560",
    "end": "90560"
  },
  {
    "text": "token authorizer check the value of",
    "start": "90560",
    "end": "93040"
  },
  {
    "text": "token source this value must be used as",
    "start": "93040",
    "end": "95759"
  },
  {
    "text": "the request header i have set the token",
    "start": "95759",
    "end": "98079"
  },
  {
    "text": "source as authorization token",
    "start": "98079",
    "end": "100479"
  },
  {
    "text": "if you entered a regular expression for",
    "start": "100479",
    "end": "102560"
  },
  {
    "text": "token validation then api gateway",
    "start": "102560",
    "end": "105200"
  },
  {
    "text": "validates the token against this",
    "start": "105200",
    "end": "107119"
  },
  {
    "text": "expression for example if you entered",
    "start": "107119",
    "end": "109920"
  },
  {
    "text": "the regular expression as highlighted on",
    "start": "109920",
    "end": "112159"
  },
  {
    "text": "screen only token values with 5",
    "start": "112159",
    "end": "114720"
  },
  {
    "text": "character alphanumeric strings are",
    "start": "114720",
    "end": "116560"
  },
  {
    "text": "successfully validated",
    "start": "116560",
    "end": "118719"
  },
  {
    "text": "now let's test this authorizer from the",
    "start": "118719",
    "end": "120960"
  },
  {
    "text": "api gateway authorizers console page",
    "start": "120960",
    "end": "124159"
  },
  {
    "text": "choose test",
    "start": "124159",
    "end": "126079"
  },
  {
    "text": "choose test without giving any value for",
    "start": "126079",
    "end": "128319"
  },
  {
    "text": "authorization token header we receive a",
    "start": "128319",
    "end": "131039"
  },
  {
    "text": "401 unauthorized response code because",
    "start": "131039",
    "end": "134000"
  },
  {
    "text": "authorization token is empty",
    "start": "134000",
    "end": "136640"
  },
  {
    "text": "now let's enter a value that's not valid",
    "start": "136640",
    "end": "138959"
  },
  {
    "text": "for the authorization token such as",
    "start": "138959",
    "end": "141720"
  },
  {
    "text": "abc123",
    "start": "141720",
    "end": "143680"
  },
  {
    "text": "choose test",
    "start": "143680",
    "end": "145120"
  },
  {
    "text": "we receive a 401 unauthorized response",
    "start": "145120",
    "end": "148080"
  },
  {
    "text": "code because abc123 is not a valid five",
    "start": "148080",
    "end": "151360"
  },
  {
    "text": "character alphanumeric string and",
    "start": "151360",
    "end": "153519"
  },
  {
    "text": "therefore doesn't satisfy the token",
    "start": "153519",
    "end": "155360"
  },
  {
    "text": "validation expression",
    "start": "155360",
    "end": "157120"
  },
  {
    "text": "let's review the token-based lambda",
    "start": "157120",
    "end": "159280"
  },
  {
    "text": "authorizer code in this code the caller",
    "start": "159280",
    "end": "162160"
  },
  {
    "text": "named user is allowed to invoke a",
    "start": "162160",
    "end": "164319"
  },
  {
    "text": "request if the client supplied token",
    "start": "164319",
    "end": "166560"
  },
  {
    "text": "value is allow",
    "start": "166560",
    "end": "168319"
  },
  {
    "text": "now let's enter a valid value allow for",
    "start": "168319",
    "end": "171360"
  },
  {
    "text": "authorization token",
    "start": "171360",
    "end": "173280"
  },
  {
    "text": "choose test",
    "start": "173280",
    "end": "174800"
  },
  {
    "text": "a 200 response code is returned",
    "start": "174800",
    "end": "177280"
  },
  {
    "text": "indicating that authorization is",
    "start": "177280",
    "end": "179280"
  },
  {
    "text": "successful",
    "start": "179280",
    "end": "181120"
  },
  {
    "text": "let's review the configurations for the",
    "start": "181120",
    "end": "182959"
  },
  {
    "text": "request based lambda authorizer",
    "start": "182959",
    "end": "186400"
  },
  {
    "text": "navigate to the api gateway console",
    "start": "186400",
    "end": "190159"
  },
  {
    "text": "choose your api",
    "start": "190159",
    "end": "193040"
  },
  {
    "text": "navigate to the authorizers pane",
    "start": "193040",
    "end": "195599"
  },
  {
    "text": "i have configured an authorizer named",
    "start": "195599",
    "end": "197840"
  },
  {
    "text": "request authorizer",
    "start": "197840",
    "end": "200159"
  },
  {
    "text": "check the configured identity sources",
    "start": "200159",
    "end": "203120"
  },
  {
    "text": "these can be headers query strings and",
    "start": "203120",
    "end": "206000"
  },
  {
    "text": "stage variables",
    "start": "206000",
    "end": "207680"
  },
  {
    "text": "i have set the identity sources as",
    "start": "207680",
    "end": "209840"
  },
  {
    "text": "header 1 query string 1 and stage",
    "start": "209840",
    "end": "212560"
  },
  {
    "text": "variable 1.",
    "start": "212560",
    "end": "214159"
  },
  {
    "text": "let's test this authorizer from api",
    "start": "214159",
    "end": "216239"
  },
  {
    "text": "gateway authorizer's console page",
    "start": "216239",
    "end": "218879"
  },
  {
    "text": "choose test",
    "start": "218879",
    "end": "221280"
  },
  {
    "text": "choose test without giving any request",
    "start": "221280",
    "end": "223599"
  },
  {
    "text": "parameters",
    "start": "223599",
    "end": "225120"
  },
  {
    "text": "we receive a 401 unauthorized response",
    "start": "225120",
    "end": "228080"
  },
  {
    "text": "code because request parameters are",
    "start": "228080",
    "end": "230080"
  },
  {
    "text": "missing",
    "start": "230080",
    "end": "231280"
  },
  {
    "text": "let's review the request-based lambda",
    "start": "231280",
    "end": "233360"
  },
  {
    "text": "authorizer code in this code a request",
    "start": "233360",
    "end": "236400"
  },
  {
    "text": "is authorized if the client-supplied",
    "start": "236400",
    "end": "238560"
  },
  {
    "text": "header query parameter and stage",
    "start": "238560",
    "end": "241120"
  },
  {
    "text": "variable all match the specified values",
    "start": "241120",
    "end": "244319"
  },
  {
    "text": "of header value 1 query value 1 and",
    "start": "244319",
    "end": "247680"
  },
  {
    "text": "stage value 1 respectively",
    "start": "247680",
    "end": "251360"
  },
  {
    "text": "now let's enter valid values for request",
    "start": "251360",
    "end": "254239"
  },
  {
    "text": "parameters",
    "start": "254239",
    "end": "256799"
  },
  {
    "text": "choose test",
    "start": "256799",
    "end": "258079"
  },
  {
    "text": "a 200 response code is returned",
    "start": "258079",
    "end": "260799"
  },
  {
    "text": "indicating that authorization is",
    "start": "260799",
    "end": "262479"
  },
  {
    "text": "successful",
    "start": "262479",
    "end": "263840"
  },
  {
    "text": "you can also test your api using the",
    "start": "263840",
    "end": "266240"
  },
  {
    "text": "postman client or curl command remember",
    "start": "266240",
    "end": "269120"
  },
  {
    "text": "to deploy your api after making any",
    "start": "269120",
    "end": "271600"
  },
  {
    "text": "changes",
    "start": "271600",
    "end": "272720"
  },
  {
    "text": "so now you know about the possible",
    "start": "272720",
    "end": "274880"
  },
  {
    "text": "reasons for getting 401 unauthorized",
    "start": "274880",
    "end": "277440"
  },
  {
    "text": "errors when using a lambda authorizer",
    "start": "277440",
    "end": "280000"
  },
  {
    "text": "and how to resolve them thanks for",
    "start": "280000",
    "end": "282320"
  },
  {
    "text": "watching and happy cloud computing from",
    "start": "282320",
    "end": "284479"
  },
  {
    "text": "all of us here at aws",
    "start": "284479",
    "end": "288350"
  },
  {
    "text": "[Music]",
    "start": "288350",
    "end": "291939"
  }
]