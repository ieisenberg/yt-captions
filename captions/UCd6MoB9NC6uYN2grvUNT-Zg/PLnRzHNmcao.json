[
  {
    "text": "hello my name is Adam lava I'm a",
    "start": "30",
    "end": "2700"
  },
  {
    "text": "Solutions Architect at AWS working with",
    "start": "2700",
    "end": "5040"
  },
  {
    "text": "developers to help them understand how",
    "start": "5040",
    "end": "6629"
  },
  {
    "text": "to build applications and systems using",
    "start": "6629",
    "end": "8639"
  },
  {
    "text": "the components tools and services of the",
    "start": "8639",
    "end": "10650"
  },
  {
    "text": "AWS platform in this session I want to",
    "start": "10650",
    "end": "13410"
  },
  {
    "text": "talk to you about building intelligent",
    "start": "13410",
    "end": "14790"
  },
  {
    "text": "chat BOTS and voice BOTS using Amazon",
    "start": "14790",
    "end": "16619"
  },
  {
    "text": "Lex and natural language understanding",
    "start": "16619",
    "end": "18119"
  },
  {
    "text": "service and Amazon Pali our service that",
    "start": "18119",
    "end": "21000"
  },
  {
    "text": "converts text into lifelike speech think",
    "start": "21000",
    "end": "24029"
  },
  {
    "text": "about the user interface in your own",
    "start": "24029",
    "end": "25380"
  },
  {
    "text": "applications right now they may have a",
    "start": "25380",
    "end": "27330"
  },
  {
    "text": "fairly traditional user experience with",
    "start": "27330",
    "end": "29160"
  },
  {
    "text": "search fields and text entry fields and",
    "start": "29160",
    "end": "31410"
  },
  {
    "text": "buttons and dialogues but imagine if",
    "start": "31410",
    "end": "33420"
  },
  {
    "text": "your users could just shut to your",
    "start": "33420",
    "end": "34890"
  },
  {
    "text": "application and ask it questions using",
    "start": "34890",
    "end": "36780"
  },
  {
    "text": "natural language instead of clicking and",
    "start": "36780",
    "end": "38670"
  },
  {
    "text": "swiping taking it further imagine if",
    "start": "38670",
    "end": "41070"
  },
  {
    "text": "your users could simply speak to your",
    "start": "41070",
    "end": "42480"
  },
  {
    "text": "application",
    "start": "42480",
    "end": "43110"
  },
  {
    "text": "engaging in natural conversation using",
    "start": "43110",
    "end": "44850"
  },
  {
    "text": "their own voice as if speech was just",
    "start": "44850",
    "end": "46920"
  },
  {
    "text": "another input device another modality to",
    "start": "46920",
    "end": "49020"
  },
  {
    "text": "interact with your application outside",
    "start": "49020",
    "end": "51750"
  },
  {
    "text": "of web applications speech and direction",
    "start": "51750",
    "end": "53730"
  },
  {
    "text": "has fantastic utility in situations",
    "start": "53730",
    "end": "55860"
  },
  {
    "text": "where users are focused on other tasks",
    "start": "55860",
    "end": "57870"
  },
  {
    "text": "like when they're driving or operating",
    "start": "57870",
    "end": "59250"
  },
  {
    "text": "machinery sometimes it could be unsafe",
    "start": "59250",
    "end": "61800"
  },
  {
    "text": "for typing and swiping and clicking on a",
    "start": "61800",
    "end": "63600"
  },
  {
    "text": "user interface but a voicing direction",
    "start": "63600",
    "end": "65640"
  },
  {
    "text": "is much safer easier and simpler to use",
    "start": "65640",
    "end": "68240"
  },
  {
    "text": "augmenting the user experience by adding",
    "start": "68240",
    "end": "70439"
  },
  {
    "text": "additional modalities like the ability",
    "start": "70439",
    "end": "72090"
  },
  {
    "text": "for your user interface to listen hear",
    "start": "72090",
    "end": "74010"
  },
  {
    "text": "speak and understand intelligently adds",
    "start": "74010",
    "end": "76320"
  },
  {
    "text": "an extra dimension to your applications",
    "start": "76320",
    "end": "77970"
  },
  {
    "text": "and this is where chat BOTS and voice",
    "start": "77970",
    "end": "79560"
  },
  {
    "text": "BOTS come in chat BOTS and voice BOTS",
    "start": "79560",
    "end": "82020"
  },
  {
    "text": "allow your users to converse with your",
    "start": "82020",
    "end": "83610"
  },
  {
    "text": "app as if they were talking to another",
    "start": "83610",
    "end": "84869"
  },
  {
    "text": "person these intelligent multimodal",
    "start": "84869",
    "end": "87210"
  },
  {
    "text": "interfaces make the interaction between",
    "start": "87210",
    "end": "88890"
  },
  {
    "text": "your application and your users much",
    "start": "88890",
    "end": "90840"
  },
  {
    "text": "more simple and engaging Amazon Lex and",
    "start": "90840",
    "end": "93540"
  },
  {
    "text": "Amazon Pali make it really easy to add",
    "start": "93540",
    "end": "95670"
  },
  {
    "text": "chat and voice interaction to your",
    "start": "95670",
    "end": "96960"
  },
  {
    "text": "applications and we're going to see",
    "start": "96960",
    "end": "98520"
  },
  {
    "text": "these services in today's examples today",
    "start": "98520",
    "end": "100950"
  },
  {
    "text": "I'll introduce the various concepts",
    "start": "100950",
    "end": "102840"
  },
  {
    "text": "controls and features that Amazon Lex",
    "start": "102840",
    "end": "104970"
  },
  {
    "text": "and Amazon Pali provide and how to",
    "start": "104970",
    "end": "106770"
  },
  {
    "text": "create and test your chat button in the",
    "start": "106770",
    "end": "108540"
  },
  {
    "text": "console I'll show you how you can use",
    "start": "108540",
    "end": "110790"
  },
  {
    "text": "lambda functions that will hook into",
    "start": "110790",
    "end": "112530"
  },
  {
    "text": "each voice interaction allowing you to",
    "start": "112530",
    "end": "114090"
  },
  {
    "text": "control the flow of the conversation",
    "start": "114090",
    "end": "115250"
  },
  {
    "text": "programmatically we'll take a look at",
    "start": "115250",
    "end": "117719"
  },
  {
    "text": "the application logic that makes your",
    "start": "117719",
    "end": "119130"
  },
  {
    "text": "Amazon Lex chat bot work and how to",
    "start": "119130",
    "end": "121619"
  },
  {
    "text": "manage the conversation context using",
    "start": "121619",
    "end": "123479"
  },
  {
    "text": "session based attributes",
    "start": "123479",
    "end": "124880"
  },
  {
    "text": "we'll see how to interact with our bot",
    "start": "124880",
    "end": "127320"
  },
  {
    "text": "using text from our own website using",
    "start": "127320",
    "end": "129420"
  },
  {
    "text": "the Amazon Lex API or from a social",
    "start": "129420",
    "end": "131849"
  },
  {
    "text": "platform like Facebook",
    "start": "131849",
    "end": "133300"
  },
  {
    "text": "and how we can use voicing direction to",
    "start": "133300",
    "end": "135970"
  },
  {
    "text": "create a completely hands-free natural",
    "start": "135970",
    "end": "137980"
  },
  {
    "text": "language experience for our applications",
    "start": "137980",
    "end": "140250"
  },
  {
    "text": "to demonstrate I've created a fictitious",
    "start": "140250",
    "end": "142780"
  },
  {
    "text": "startup that I've called travel buddy",
    "start": "142780",
    "end": "144460"
  },
  {
    "text": "travel buddy sells flights an",
    "start": "144460",
    "end": "146260"
  },
  {
    "text": "accommodation at the last minute with",
    "start": "146260",
    "end": "147850"
  },
  {
    "text": "massive savings for my customers I've",
    "start": "147850",
    "end": "149980"
  },
  {
    "text": "built a standard website that allows my",
    "start": "149980",
    "end": "151570"
  },
  {
    "text": "users to register log in search for",
    "start": "151570",
    "end": "153490"
  },
  {
    "text": "flights and accommodation and to make",
    "start": "153490",
    "end": "155050"
  },
  {
    "text": "reservations my site is hosted on Amazon",
    "start": "155050",
    "end": "157600"
  },
  {
    "text": "s3 is a single page web application and",
    "start": "157600",
    "end": "159670"
  },
  {
    "text": "might use a framework such as angular or",
    "start": "159670",
    "end": "162040"
  },
  {
    "text": "react making restful calls for data",
    "start": "162040",
    "end": "164050"
  },
  {
    "text": "served by Amazon API gateway ahead of",
    "start": "164050",
    "end": "166450"
  },
  {
    "text": "AWS lambda functions the query Amazon",
    "start": "166450",
    "end": "168940"
  },
  {
    "text": "Elastic search or Amazon DynamoDB my",
    "start": "168940",
    "end": "171640"
  },
  {
    "text": "site is service and service full secure",
    "start": "171640",
    "end": "173890"
  },
  {
    "text": "scalable and highly available so let's",
    "start": "173890",
    "end": "176320"
  },
  {
    "text": "take a quick look right now I have a",
    "start": "176320",
    "end": "178480"
  },
  {
    "text": "gadget to allow my users to quickly",
    "start": "178480",
    "end": "180010"
  },
  {
    "text": "enter the destination that they're",
    "start": "180010",
    "end": "181540"
  },
  {
    "text": "looking for perform a search and show",
    "start": "181540",
    "end": "183970"
  },
  {
    "text": "various options and prices the user",
    "start": "183970",
    "end": "186100"
  },
  {
    "text": "would then click on an option to proceed",
    "start": "186100",
    "end": "187690"
  },
  {
    "text": "with the reservation to remove any",
    "start": "187690",
    "end": "190150"
  },
  {
    "text": "usability friction and provide a more",
    "start": "190150",
    "end": "191560"
  },
  {
    "text": "natural interaction I want to implement",
    "start": "191560",
    "end": "193480"
  },
  {
    "text": "a chat bot using Amazon elects Amazon",
    "start": "193480",
    "end": "196870"
  },
  {
    "text": "Lex is a natural language understanding",
    "start": "196870",
    "end": "198400"
  },
  {
    "text": "engine that is powered by the same deep",
    "start": "198400",
    "end": "200380"
  },
  {
    "text": "learning technology as Amazon Alexa we",
    "start": "200380",
    "end": "203170"
  },
  {
    "text": "can use Amazon Lex to build chat BOTS",
    "start": "203170",
    "end": "204760"
  },
  {
    "text": "for web sites integrate with social",
    "start": "204760",
    "end": "206410"
  },
  {
    "text": "messaging platforms such as Facebook",
    "start": "206410",
    "end": "208330"
  },
  {
    "text": "slack kik and Twilio and interact with",
    "start": "208330",
    "end": "211180"
  },
  {
    "text": "their users via text or voice using the",
    "start": "211180",
    "end": "213490"
  },
  {
    "text": "native integration with Amazon Pali key",
    "start": "213490",
    "end": "217270"
  },
  {
    "text": "to building a successful conversational",
    "start": "217270",
    "end": "218890"
  },
  {
    "text": "interface is an understanding of the",
    "start": "218890",
    "end": "220810"
  },
  {
    "text": "Amazon Lex concepts intense utterances",
    "start": "220810",
    "end": "223660"
  },
  {
    "text": "slots and fulfilment intense of what you",
    "start": "223660",
    "end": "227380"
  },
  {
    "text": "mean or what you intend when you say",
    "start": "227380",
    "end": "229300"
  },
  {
    "text": "something for example if I say I want to",
    "start": "229300",
    "end": "231610"
  },
  {
    "text": "book a hotel the intention is that I",
    "start": "231610",
    "end": "233470"
  },
  {
    "text": "want to book a hotel an utterance is",
    "start": "233470",
    "end": "236110"
  },
  {
    "text": "what you say that has meaning or intent",
    "start": "236110",
    "end": "238390"
  },
  {
    "text": "in the previous example I wonder booked",
    "start": "238390",
    "end": "240910"
  },
  {
    "text": "a hotel is the utterance that invokes",
    "start": "240910",
    "end": "242800"
  },
  {
    "text": "the intent booked a hotel there can be",
    "start": "242800",
    "end": "245530"
  },
  {
    "text": "many utterances that have the same",
    "start": "245530",
    "end": "247270"
  },
  {
    "text": "meaning and so multiple utterances can",
    "start": "247270",
    "end": "249400"
  },
  {
    "text": "link to a single intent slots are like",
    "start": "249400",
    "end": "252040"
  },
  {
    "text": "variables or parameters that we need the",
    "start": "252040",
    "end": "253930"
  },
  {
    "text": "user to provide values for during a",
    "start": "253930",
    "end": "255430"
  },
  {
    "text": "conversational exchange in order to",
    "start": "255430",
    "end": "257380"
  },
  {
    "text": "fulfill the intent slots have datatypes",
    "start": "257380",
    "end": "259989"
  },
  {
    "text": "time date location etc and you specify",
    "start": "259989",
    "end": "262720"
  },
  {
    "text": "the type when you define a slot",
    "start": "262720",
    "end": "264510"
  },
  {
    "text": "once we've elicited all the slide value",
    "start": "264510",
    "end": "266990"
  },
  {
    "text": "we are ready to fulfill the intense",
    "start": "266990",
    "end": "269259"
  },
  {
    "text": "fulfillment is the last concept we need",
    "start": "269259",
    "end": "271099"
  },
  {
    "text": "to understand this is what we want to",
    "start": "271099",
    "end": "273199"
  },
  {
    "text": "happen as the result of the interaction",
    "start": "273199",
    "end": "274639"
  },
  {
    "text": "and normally we would perform some tasks",
    "start": "274639",
    "end": "276530"
  },
  {
    "text": "like updating a database of triggering a",
    "start": "276530",
    "end": "278539"
  },
  {
    "text": "workflow to make it easier to create",
    "start": "278539",
    "end": "281389"
  },
  {
    "text": "your BOTS Amazon Lex allows you to use a",
    "start": "281389",
    "end": "283849"
  },
  {
    "text": "built-in library of intense these",
    "start": "283849",
    "end": "286069"
  },
  {
    "text": "provide pre-configured utterances for",
    "start": "286069",
    "end": "287960"
  },
  {
    "text": "common actions that you need across all",
    "start": "287960",
    "end": "289460"
  },
  {
    "text": "chat BOTS such as asking for help using",
    "start": "289460",
    "end": "291530"
  },
  {
    "text": "the help intent or cancelling an",
    "start": "291530",
    "end": "293750"
  },
  {
    "text": "interaction using the cancel intent",
    "start": "293750",
    "end": "296199"
  },
  {
    "text": "Amazon Lex also provides built-in",
    "start": "296199",
    "end": "298400"
  },
  {
    "text": "support for commonly used data types",
    "start": "298400",
    "end": "300110"
  },
  {
    "text": "such as City date and time the built-in",
    "start": "300110",
    "end": "302900"
  },
  {
    "text": "date type for example manages the",
    "start": "302900",
    "end": "304550"
  },
  {
    "text": "complexities of absolute and relative",
    "start": "304550",
    "end": "306050"
  },
  {
    "text": "dates and dates with special meanings",
    "start": "306050",
    "end": "308210"
  },
  {
    "text": "such as Christmas Day or Newsday Amazon",
    "start": "308210",
    "end": "310819"
  },
  {
    "text": "Lex handles the date calculations for us",
    "start": "310819",
    "end": "314169"
  },
  {
    "text": "let's take a simple check bot example",
    "start": "314169",
    "end": "316580"
  },
  {
    "text": "I've created an intent that I've called",
    "start": "316580",
    "end": "318860"
  },
  {
    "text": "test intent and added some sample",
    "start": "318860",
    "end": "321110"
  },
  {
    "text": "utterances you can see how I've created",
    "start": "321110",
    "end": "323659"
  },
  {
    "text": "a few variations that all map to the",
    "start": "323659",
    "end": "325610"
  },
  {
    "text": "same intent so I could say I need a room",
    "start": "325610",
    "end": "328190"
  },
  {
    "text": "or I could say I want a hotel those two",
    "start": "328190",
    "end": "331909"
  },
  {
    "text": "utterances would trigger my test intent",
    "start": "331909",
    "end": "333740"
  },
  {
    "text": "but neither would provide any slot",
    "start": "333740",
    "end": "335300"
  },
  {
    "text": "values Lex will prompt the user for the",
    "start": "335300",
    "end": "337610"
  },
  {
    "text": "value of the three slots that I've",
    "start": "337610",
    "end": "338870"
  },
  {
    "text": "defined down here destination City",
    "start": "338870",
    "end": "341750"
  },
  {
    "text": "check-in date and room type but I could",
    "start": "341750",
    "end": "345530"
  },
  {
    "text": "also say but also notice how I could say",
    "start": "345530",
    "end": "349070"
  },
  {
    "text": "I want a hotel in Melbourne and that",
    "start": "349070",
    "end": "351949"
  },
  {
    "text": "would match the sample utterance I want",
    "start": "351949",
    "end": "353599"
  },
  {
    "text": "a hotel in destination city and at the",
    "start": "353599",
    "end": "356030"
  },
  {
    "text": "same time it would provide the value for",
    "start": "356030",
    "end": "357800"
  },
  {
    "text": "the slot destination city I could also",
    "start": "357800",
    "end": "360680"
  },
  {
    "text": "say I want a hotel in destination City",
    "start": "360680",
    "end": "363469"
  },
  {
    "text": "for check-in date and provide both the",
    "start": "363469",
    "end": "365810"
  },
  {
    "text": "destination city and the chicken date at",
    "start": "365810",
    "end": "367669"
  },
  {
    "text": "the same time the I've defined",
    "start": "367669",
    "end": "370340"
  },
  {
    "text": "each have types destination city is of",
    "start": "370340",
    "end": "373159"
  },
  {
    "text": "type u.s. city which is a built in",
    "start": "373159",
    "end": "375259"
  },
  {
    "text": "catalogue of predefined cities chicken",
    "start": "375259",
    "end": "377599"
  },
  {
    "text": "date is a date type and will allow the",
    "start": "377599",
    "end": "379639"
  },
  {
    "text": "user to specify an absolute date or a",
    "start": "379639",
    "end": "381500"
  },
  {
    "text": "relative date construct such as tomorrow",
    "start": "381500",
    "end": "383800"
  },
  {
    "text": "Lex will handle the conversion to a",
    "start": "383800",
    "end": "385940"
  },
  {
    "text": "usable date value for that slot for us",
    "start": "385940",
    "end": "388210"
  },
  {
    "text": "the last slot is room type and notice",
    "start": "388210",
    "end": "391250"
  },
  {
    "text": "how this is of type hotel room types",
    "start": "391250",
    "end": "393139"
  },
  {
    "text": "this is a custom slot type that I have",
    "start": "393139",
    "end": "395539"
  },
  {
    "text": "defined if I inspect the definition of",
    "start": "395539",
    "end": "398300"
  },
  {
    "text": "the hotel room types of slot type",
    "start": "398300",
    "end": "400400"
  },
  {
    "text": "you can see I'm making use of a feature",
    "start": "400400",
    "end": "402020"
  },
  {
    "text": "where I can map the possible slot values",
    "start": "402020",
    "end": "403940"
  },
  {
    "text": "to synonyms so here you can see that if",
    "start": "403940",
    "end": "406759"
  },
  {
    "text": "the user says penthouse or premium or",
    "start": "406759",
    "end": "409250"
  },
  {
    "text": "best in place of the room type then Lex",
    "start": "409250",
    "end": "412220"
  },
  {
    "text": "will map that to the value penthouse so",
    "start": "412220",
    "end": "414860"
  },
  {
    "text": "my application doesn't have to do that",
    "start": "414860",
    "end": "416060"
  },
  {
    "text": "mapping by itself instead I could ask",
    "start": "416060",
    "end": "419360"
  },
  {
    "text": "Lex to expand the values and this means",
    "start": "419360",
    "end": "421250"
  },
  {
    "text": "the values that I have provided are just",
    "start": "421250",
    "end": "423259"
  },
  {
    "text": "hints to Lex if the user says a room",
    "start": "423259",
    "end": "425630"
  },
  {
    "text": "type other than one of these that I have",
    "start": "425630",
    "end": "427039"
  },
  {
    "text": "defined Lex will accept it as a slot",
    "start": "427039",
    "end": "429350"
  },
  {
    "text": "value so my application would need to",
    "start": "429350",
    "end": "431690"
  },
  {
    "text": "handle any arbitrary value for that",
    "start": "431690",
    "end": "433370"
  },
  {
    "text": "particular slot it is completely up to",
    "start": "433370",
    "end": "436160"
  },
  {
    "text": "me as the developer to decide which mode",
    "start": "436160",
    "end": "437840"
  },
  {
    "text": "I would prefer to use I've also set a",
    "start": "437840",
    "end": "440840"
  },
  {
    "text": "confirmation prompt when all the slot",
    "start": "440840",
    "end": "442970"
  },
  {
    "text": "values have been provided by the user",
    "start": "442970",
    "end": "444320"
  },
  {
    "text": "Lex will respond with the confirmation",
    "start": "444320",
    "end": "446000"
  },
  {
    "text": "prompt and expect the user to respond",
    "start": "446000",
    "end": "447560"
  },
  {
    "text": "with a yes or no answer in this case Lex",
    "start": "447560",
    "end": "450470"
  },
  {
    "text": "would respond shall I go ahead and",
    "start": "450470",
    "end": "452300"
  },
  {
    "text": "reserve your room type room in",
    "start": "452300",
    "end": "454280"
  },
  {
    "text": "destination City for check-in dates and",
    "start": "454280",
    "end": "456979"
  },
  {
    "text": "would replace room type destination city",
    "start": "456979",
    "end": "459740"
  },
  {
    "text": "and chicken date with the actual values",
    "start": "459740",
    "end": "461539"
  },
  {
    "text": "provided by the user if the user",
    "start": "461539",
    "end": "463940"
  },
  {
    "text": "responds negatively Lex will respond",
    "start": "463940",
    "end": "466400"
  },
  {
    "text": "with the cancel prompt in this case okay",
    "start": "466400",
    "end": "468830"
  },
  {
    "text": "no problem otherwise when the user",
    "start": "468830",
    "end": "471050"
  },
  {
    "text": "responds affirmatively then Lex will",
    "start": "471050",
    "end": "473180"
  },
  {
    "text": "fulfill the intent in my test intent I",
    "start": "473180",
    "end": "476300"
  },
  {
    "text": "have set the fulfillment mode to return",
    "start": "476300",
    "end": "478340"
  },
  {
    "text": "parameters to client in this case the",
    "start": "478340",
    "end": "480770"
  },
  {
    "text": "client that is calling Lex will receive",
    "start": "480770",
    "end": "482510"
  },
  {
    "text": "a JSON payload describing all the site",
    "start": "482510",
    "end": "484550"
  },
  {
    "text": "values let's see that in action I can",
    "start": "484550",
    "end": "487520"
  },
  {
    "text": "test the bot in the browser directly if",
    "start": "487520",
    "end": "489560"
  },
  {
    "text": "I say I need a room then the sample",
    "start": "489560",
    "end": "492919"
  },
  {
    "text": "utterance without any slots will trigger",
    "start": "492919",
    "end": "494630"
  },
  {
    "text": "the intent instead I could say I want a",
    "start": "494630",
    "end": "497570"
  },
  {
    "text": "room in Melbourne for tomorrow and",
    "start": "497570",
    "end": "499190"
  },
  {
    "text": "provide both these destination city and",
    "start": "499190",
    "end": "501409"
  },
  {
    "text": "the date at the same time",
    "start": "501409",
    "end": "502880"
  },
  {
    "text": "Amazon Lex will respond by prompting me",
    "start": "502880",
    "end": "505130"
  },
  {
    "text": "for the missing value for the slot room",
    "start": "505130",
    "end": "507199"
  },
  {
    "text": "type let's say I want the best room and",
    "start": "507199",
    "end": "510199"
  },
  {
    "text": "Amazon Lex Maps best as a synonym for",
    "start": "510199",
    "end": "512750"
  },
  {
    "text": "penthouse because of the slot resolution",
    "start": "512750",
    "end": "514969"
  },
  {
    "text": "I configured for the room type slot type",
    "start": "514969",
    "end": "516909"
  },
  {
    "text": "now I have all the slot values that have",
    "start": "516909",
    "end": "519380"
  },
  {
    "text": "been elicited from the user",
    "start": "519380",
    "end": "520580"
  },
  {
    "text": "Amazon Lex will return the confirmation",
    "start": "520580",
    "end": "522440"
  },
  {
    "text": "prompt and you can see how the slot",
    "start": "522440",
    "end": "524360"
  },
  {
    "text": "values have been inserted into the",
    "start": "524360",
    "end": "525620"
  },
  {
    "text": "response and the relative date tomorrow",
    "start": "525620",
    "end": "528020"
  },
  {
    "text": "has been resolved to the actual date in",
    "start": "528020",
    "end": "531110"
  },
  {
    "text": "response to you're asking me if we",
    "start": "531110",
    "end": "532730"
  },
  {
    "text": "should proceed to book the hood",
    "start": "532730",
    "end": "534130"
  },
  {
    "text": "well I say yes and then the intent is",
    "start": "534130",
    "end": "537070"
  },
  {
    "text": "ready to be fulfilled because I set the",
    "start": "537070",
    "end": "539590"
  },
  {
    "text": "fulfillment type to return parameters to",
    "start": "539590",
    "end": "541450"
  },
  {
    "text": "client Lex will respond back to the",
    "start": "541450",
    "end": "543340"
  },
  {
    "text": "caller with a JSON payload describing",
    "start": "543340",
    "end": "545170"
  },
  {
    "text": "the interaction notice here we have all",
    "start": "545170",
    "end": "547630"
  },
  {
    "text": "the slot values our application can make",
    "start": "547630",
    "end": "549430"
  },
  {
    "text": "use of this data and process according",
    "start": "549430",
    "end": "551560"
  },
  {
    "text": "to our business logic I've integrated",
    "start": "551560",
    "end": "554020"
  },
  {
    "text": "the chat bot into my travel buddy",
    "start": "554020",
    "end": "555520"
  },
  {
    "text": "website as well so I can have the same",
    "start": "555520",
    "end": "557290"
  },
  {
    "text": "interaction on my own site again if I",
    "start": "557290",
    "end": "560140"
  },
  {
    "text": "say I want a hotel room in Melbourne for",
    "start": "560140",
    "end": "562420"
  },
  {
    "text": "tomorrow the bot responds by prompting",
    "start": "562420",
    "end": "564760"
  },
  {
    "text": "me for the room type and if I provide",
    "start": "564760",
    "end": "567430"
  },
  {
    "text": "the room type then Lex responds with the",
    "start": "567430",
    "end": "569740"
  },
  {
    "text": "confirmation prompt and interaction",
    "start": "569740",
    "end": "571870"
  },
  {
    "text": "continues now we've seen the chat bot",
    "start": "571870",
    "end": "574810"
  },
  {
    "text": "working in the travel buddy site let's",
    "start": "574810",
    "end": "576640"
  },
  {
    "text": "look at the architecture notice how we",
    "start": "576640",
    "end": "578740"
  },
  {
    "text": "have the client website call directly to",
    "start": "578740",
    "end": "581080"
  },
  {
    "text": "the Amazon Lex service we use the AWS",
    "start": "581080",
    "end": "583960"
  },
  {
    "text": "SDK for javascript in the browser to",
    "start": "583960",
    "end": "585940"
  },
  {
    "text": "make use of a cognitive identity pool to",
    "start": "585940",
    "end": "588430"
  },
  {
    "text": "Vence scoped temporary credentials to",
    "start": "588430",
    "end": "590470"
  },
  {
    "text": "sign our requests and keep things nice",
    "start": "590470",
    "end": "591970"
  },
  {
    "text": "and secure and then call directly into",
    "start": "591970",
    "end": "593950"
  },
  {
    "text": "the Amazon Lex service using the AWS SDK",
    "start": "593950",
    "end": "597580"
  },
  {
    "text": "we can very easily call in to Amazon Lex",
    "start": "597580",
    "end": "599620"
  },
  {
    "text": "to submit our users chat text first we",
    "start": "599620",
    "end": "602740"
  },
  {
    "text": "construct a params object that contains",
    "start": "602740",
    "end": "605020"
  },
  {
    "text": "our chat bot details and the text from",
    "start": "605020",
    "end": "607210"
  },
  {
    "text": "the user that we want to submit we also",
    "start": "607210",
    "end": "609250"
  },
  {
    "text": "provide a user ID which allows Lex to",
    "start": "609250",
    "end": "611530"
  },
  {
    "text": "keep state or cross calls and maintain a",
    "start": "611530",
    "end": "613390"
  },
  {
    "text": "session for us we then simply call the",
    "start": "613390",
    "end": "616120"
  },
  {
    "text": "post text method of the Amazon Lex run",
    "start": "616120",
    "end": "618100"
  },
  {
    "text": "frame object and when the callback",
    "start": "618100",
    "end": "620050"
  },
  {
    "text": "completes successfully we will have an",
    "start": "620050",
    "end": "621640"
  },
  {
    "text": "object that contains updated session",
    "start": "621640",
    "end": "623380"
  },
  {
    "text": "attributes and also a message in text",
    "start": "623380",
    "end": "625570"
  },
  {
    "text": "format that is the response from Amazon",
    "start": "625570",
    "end": "627550"
  },
  {
    "text": "Lex we simply push the Amazon Lex",
    "start": "627550",
    "end": "630010"
  },
  {
    "text": "response message into our chat window",
    "start": "630010",
    "end": "631600"
  },
  {
    "text": "which is just a simple floating window",
    "start": "631600",
    "end": "633160"
  },
  {
    "text": "created using CSS for travel body to",
    "start": "633160",
    "end": "637060"
  },
  {
    "text": "book flights we need to have more",
    "start": "637060",
    "end": "638710"
  },
  {
    "text": "programmatic interaction during the",
    "start": "638710",
    "end": "640150"
  },
  {
    "text": "conversation with the user to validate",
    "start": "640150",
    "end": "641890"
  },
  {
    "text": "each of the steps so to do that I'm",
    "start": "641890",
    "end": "643630"
  },
  {
    "text": "making use of the AWS lambda integration",
    "start": "643630",
    "end": "645940"
  },
  {
    "text": "with Amazon Lex I let Amazon Lex",
    "start": "645940",
    "end": "649780"
  },
  {
    "text": "determine the flow of the conversation",
    "start": "649780",
    "end": "650950"
  },
  {
    "text": "based on the utterances and slots that I",
    "start": "650950",
    "end": "653230"
  },
  {
    "text": "configured in the HIVs console but in",
    "start": "653230",
    "end": "655900"
  },
  {
    "text": "the case of travel body booking a flight",
    "start": "655900",
    "end": "657340"
  },
  {
    "text": "I have a more complicated workflow and",
    "start": "657340",
    "end": "659470"
  },
  {
    "text": "so I want to be able to run an AWS",
    "start": "659470",
    "end": "661330"
  },
  {
    "text": "lambda function on each interaction and",
    "start": "661330",
    "end": "663280"
  },
  {
    "text": "also rather than simply returning the",
    "start": "663280",
    "end": "665440"
  },
  {
    "text": "slot values to the caller when the",
    "start": "665440",
    "end": "666730"
  },
  {
    "text": "intense slots are all ELISA",
    "start": "666730",
    "end": "667990"
  },
  {
    "text": "from the user I want Amazon likes to",
    "start": "667990",
    "end": "670089"
  },
  {
    "text": "call a lambda function directly to",
    "start": "670089",
    "end": "671890"
  },
  {
    "text": "perform the fulfillment I can do this",
    "start": "671890",
    "end": "674110"
  },
  {
    "text": "using code Hawkes",
    "start": "674110",
    "end": "675250"
  },
  {
    "text": "code hooks allow you to customize the",
    "start": "675250",
    "end": "677380"
  },
  {
    "text": "user interaction and conversation flow",
    "start": "677380",
    "end": "679140"
  },
  {
    "text": "validate user input during the",
    "start": "679140",
    "end": "681040"
  },
  {
    "text": "conversation and also allow Amazon Lex",
    "start": "681040",
    "end": "683380"
  },
  {
    "text": "to directly fulfill the intent outcome",
    "start": "683380",
    "end": "685060"
  },
  {
    "text": "using an AWS lambda function when we",
    "start": "685060",
    "end": "687520"
  },
  {
    "text": "specify a lambda function for an intense",
    "start": "687520",
    "end": "689560"
  },
  {
    "text": "code Hawke every interaction will fire",
    "start": "689560",
    "end": "691570"
  },
  {
    "text": "the specified lambda function to allow",
    "start": "691570",
    "end": "693160"
  },
  {
    "text": "it to intercept the current state of the",
    "start": "693160",
    "end": "694690"
  },
  {
    "text": "interaction validate slot values change",
    "start": "694690",
    "end": "697750"
  },
  {
    "text": "the flow of the conversation and even",
    "start": "697750",
    "end": "699550"
  },
  {
    "text": "allow me to transfer state between",
    "start": "699550",
    "end": "700930"
  },
  {
    "text": "intents the lambda function is passed an",
    "start": "700930",
    "end": "703720"
  },
  {
    "text": "event a JSON payload which contains the",
    "start": "703720",
    "end": "706420"
  },
  {
    "text": "context about the user input such as the",
    "start": "706420",
    "end": "708520"
  },
  {
    "text": "name of the bot and the intent of the",
    "start": "708520",
    "end": "709990"
  },
  {
    "text": "user is currently interacting with the",
    "start": "709990",
    "end": "712360"
  },
  {
    "text": "current state of all the slots and the",
    "start": "712360",
    "end": "714040"
  },
  {
    "text": "session attributes and the input",
    "start": "714040",
    "end": "716230"
  },
  {
    "text": "transcript so we can see exactly what",
    "start": "716230",
    "end": "717730"
  },
  {
    "text": "the user said the dialogue code Haupt",
    "start": "717730",
    "end": "720310"
  },
  {
    "text": "lambda function can check the intent",
    "start": "720310",
    "end": "721779"
  },
  {
    "text": "information such as the intent name",
    "start": "721779",
    "end": "723279"
  },
  {
    "text": "invocation source confirmation status",
    "start": "723279",
    "end": "725830"
  },
  {
    "text": "and slot values to determine what",
    "start": "725830",
    "end": "727600"
  },
  {
    "text": "functions it should perform next",
    "start": "727600",
    "end": "728980"
  },
  {
    "text": "including redirecting the conversation",
    "start": "728980",
    "end": "731110"
  },
  {
    "text": "to elicit a particular slot value from",
    "start": "731110",
    "end": "732670"
  },
  {
    "text": "the user or transferring to another",
    "start": "732670",
    "end": "734320"
  },
  {
    "text": "intent typically your lambda function",
    "start": "734320",
    "end": "737680"
  },
  {
    "text": "would inspect the state of the",
    "start": "737680",
    "end": "738850"
  },
  {
    "text": "interaction do some processing such as",
    "start": "738850",
    "end": "740860"
  },
  {
    "text": "querying a database to validate state",
    "start": "740860",
    "end": "742540"
  },
  {
    "text": "and then direct them as on Lex on what",
    "start": "742540",
    "end": "744760"
  },
  {
    "text": "to do next by retaining a dialogue",
    "start": "744760",
    "end": "746470"
  },
  {
    "text": "action in the code response in the code",
    "start": "746470",
    "end": "750190"
  },
  {
    "text": "hook response your lambda function must",
    "start": "750190",
    "end": "752020"
  },
  {
    "text": "return a JSON payload containing some",
    "start": "752020",
    "end": "753730"
  },
  {
    "text": "key items first the session attributes",
    "start": "753730",
    "end": "756550"
  },
  {
    "text": "which you may have updated during the",
    "start": "756550",
    "end": "758050"
  },
  {
    "text": "processing of your lambda function the",
    "start": "758050",
    "end": "760420"
  },
  {
    "text": "dialogue action which determines what",
    "start": "760420",
    "end": "762279"
  },
  {
    "text": "Lex should do in terms of the",
    "start": "762279",
    "end": "763450"
  },
  {
    "text": "conversation flow and the current values",
    "start": "763450",
    "end": "765880"
  },
  {
    "text": "of each of the slots which again you may",
    "start": "765880",
    "end": "767920"
  },
  {
    "text": "have updated during your function based",
    "start": "767920",
    "end": "769390"
  },
  {
    "text": "on your business logic there are five",
    "start": "769390",
    "end": "772300"
  },
  {
    "text": "different dialogue actions that you can",
    "start": "772300",
    "end": "773770"
  },
  {
    "text": "specify each of which have a specific",
    "start": "773770",
    "end": "775480"
  },
  {
    "text": "effect on the conversation flow you can",
    "start": "775480",
    "end": "778480"
  },
  {
    "text": "close the intent which completes the",
    "start": "778480",
    "end": "780730"
  },
  {
    "text": "interaction and no further input is",
    "start": "780730",
    "end": "782320"
  },
  {
    "text": "required from the user you can specify a",
    "start": "782320",
    "end": "785020"
  },
  {
    "text": "confirm intent action which means Lex is",
    "start": "785020",
    "end": "787750"
  },
  {
    "text": "now expecting yes/no from the user you",
    "start": "787750",
    "end": "791170"
  },
  {
    "text": "can specify delegate which will cause",
    "start": "791170",
    "end": "793180"
  },
  {
    "text": "Amazon Lex to decide what to do next and",
    "start": "793180",
    "end": "795370"
  },
  {
    "text": "this decision is based on the options",
    "start": "795370",
    "end": "797320"
  },
  {
    "text": "you've specified in the AWS console you",
    "start": "797320",
    "end": "800529"
  },
  {
    "text": "can return a list",
    "start": "800529",
    "end": "801550"
  },
  {
    "text": "intent which will change the",
    "start": "801550",
    "end": "802839"
  },
  {
    "text": "conversation context across to a",
    "start": "802839",
    "end": "804250"
  },
  {
    "text": "completely different intent if you need",
    "start": "804250",
    "end": "805600"
  },
  {
    "text": "to or you can remain in the current",
    "start": "805600",
    "end": "807820"
  },
  {
    "text": "intent and redirect the conversation to",
    "start": "807820",
    "end": "809920"
  },
  {
    "text": "ask the user for a specific slug value",
    "start": "809920",
    "end": "811720"
  },
  {
    "text": "with illicit slot so I can completely",
    "start": "811720",
    "end": "815410"
  },
  {
    "text": "control the conversation flow",
    "start": "815410",
    "end": "816640"
  },
  {
    "text": "dynamically using code hooks and lambda",
    "start": "816640",
    "end": "818560"
  },
  {
    "text": "functions now let's say I want the user",
    "start": "818560",
    "end": "820930"
  },
  {
    "text": "to be able to ask what's the weather",
    "start": "820930",
    "end": "822790"
  },
  {
    "text": "like at a destination and have Lex",
    "start": "822790",
    "end": "824769"
  },
  {
    "text": "provide their user with a weather report",
    "start": "824769",
    "end": "826570"
  },
  {
    "text": "okay so far so good next the user",
    "start": "826570",
    "end": "829000"
  },
  {
    "text": "decides they want to know what flights",
    "start": "829000",
    "end": "830500"
  },
  {
    "text": "are available to that destination the",
    "start": "830500",
    "end": "832720"
  },
  {
    "text": "same destination that they just asked",
    "start": "832720",
    "end": "834190"
  },
  {
    "text": "about that would require a different",
    "start": "834190",
    "end": "835540"
  },
  {
    "text": "intent because they may ask tell me what",
    "start": "835540",
    "end": "837760"
  },
  {
    "text": "flights there are to get there I don't",
    "start": "837760",
    "end": "839950"
  },
  {
    "text": "want my user to have to re specify the",
    "start": "839950",
    "end": "841870"
  },
  {
    "text": "destination I want the conversation",
    "start": "841870",
    "end": "843250"
  },
  {
    "text": "context to transfer between the two",
    "start": "843250",
    "end": "845170"
  },
  {
    "text": "intents I can do this using session",
    "start": "845170",
    "end": "847570"
  },
  {
    "text": "attributes when a client calls Amazon",
    "start": "847570",
    "end": "849880"
  },
  {
    "text": "Lex app specific information can be",
    "start": "849880",
    "end": "851980"
  },
  {
    "text": "passed along as session attributes",
    "start": "851980",
    "end": "854110"
  },
  {
    "text": "Amazon Lex will pass the session",
    "start": "854110",
    "end": "856120"
  },
  {
    "text": "attributes to the lambda functions",
    "start": "856120",
    "end": "857470"
  },
  {
    "text": "called by the bot and the lambda",
    "start": "857470",
    "end": "859450"
  },
  {
    "text": "functions can make use of add to or",
    "start": "859450",
    "end": "861550"
  },
  {
    "text": "update the session attributes in the",
    "start": "861550",
    "end": "864190"
  },
  {
    "text": "previous example in the first intent for",
    "start": "864190",
    "end": "866230"
  },
  {
    "text": "the weather report I would save the",
    "start": "866230",
    "end": "868060"
  },
  {
    "text": "destination the user wants to know about",
    "start": "868060",
    "end": "869470"
  },
  {
    "text": "in a session attribute then when the",
    "start": "869470",
    "end": "872350"
  },
  {
    "text": "book flight intent is triggered",
    "start": "872350",
    "end": "873850"
  },
  {
    "text": "I would code the lambda function to look",
    "start": "873850",
    "end": "875649"
  },
  {
    "text": "for a destination city in the session",
    "start": "875649",
    "end": "877450"
  },
  {
    "text": "attributes this way the bot doesn't have",
    "start": "877450",
    "end": "880029"
  },
  {
    "text": "to ask the user for the city that",
    "start": "880029",
    "end": "881410"
  },
  {
    "text": "they're interested in and the",
    "start": "881410",
    "end": "882490"
  },
  {
    "text": "conversation flows much more naturally",
    "start": "882490",
    "end": "884110"
  },
  {
    "text": "in travel buddy I've done exactly this I",
    "start": "884110",
    "end": "886779"
  },
  {
    "text": "use a session attribute to store",
    "start": "886779",
    "end": "888790"
  },
  {
    "text": "adjacent payload that contains all the",
    "start": "888790",
    "end": "890500"
  },
  {
    "text": "information I need across all of my",
    "start": "890500",
    "end": "892000"
  },
  {
    "text": "intents things like Origin City",
    "start": "892000",
    "end": "893790"
  },
  {
    "text": "destination City a number of passengers",
    "start": "893790",
    "end": "895990"
  },
  {
    "text": "traveling now any of my intents can",
    "start": "895990",
    "end": "898149"
  },
  {
    "text": "populate those fields and other intents",
    "start": "898149",
    "end": "900279"
  },
  {
    "text": "can use the values if they need them",
    "start": "900279",
    "end": "901839"
  },
  {
    "text": "rather than asking the user again if a",
    "start": "901839",
    "end": "904930"
  },
  {
    "text": "field is not set when it an intent is",
    "start": "904930",
    "end": "906550"
  },
  {
    "text": "triggered we can redirect the user to",
    "start": "906550",
    "end": "908230"
  },
  {
    "text": "provide that value using the illicit",
    "start": "908230",
    "end": "909850"
  },
  {
    "text": "slot directive let's take a look at the",
    "start": "909850",
    "end": "912490"
  },
  {
    "text": "different intents in my trouble buddy",
    "start": "912490",
    "end": "913839"
  },
  {
    "text": "chat bot to see how the user experience",
    "start": "913839",
    "end": "915699"
  },
  {
    "text": "is designed",
    "start": "915699",
    "end": "917540"
  },
  {
    "text": "we have a check whether intent which has",
    "start": "917540",
    "end": "920450"
  },
  {
    "text": "a single slot that destination city this",
    "start": "920450",
    "end": "923210"
  },
  {
    "text": "intent allows the user to ask things",
    "start": "923210",
    "end": "924770"
  },
  {
    "text": "like what's the weather like in London",
    "start": "924770",
    "end": "926750"
  },
  {
    "text": "and notice that we use a dialogue code",
    "start": "926750",
    "end": "929120"
  },
  {
    "text": "hook to process the interaction and that",
    "start": "929120",
    "end": "930620"
  },
  {
    "text": "in that lambda function we query a",
    "start": "930620",
    "end": "933290"
  },
  {
    "text": "weather API and also restore the city",
    "start": "933290",
    "end": "936170"
  },
  {
    "text": "that we're referring to in a session",
    "start": "936170",
    "end": "937670"
  },
  {
    "text": "attribute collection as destination city",
    "start": "937670",
    "end": "940210"
  },
  {
    "text": "other intents can now check to see if",
    "start": "940210",
    "end": "942590"
  },
  {
    "text": "this variable is set and make use of it",
    "start": "942590",
    "end": "944710"
  },
  {
    "text": "we also have a news about destination",
    "start": "944710",
    "end": "947630"
  },
  {
    "text": "intent that also wants access to the",
    "start": "947630",
    "end": "949790"
  },
  {
    "text": "destination city and a lander code hook",
    "start": "949790",
    "end": "952160"
  },
  {
    "text": "that we've configured looks at the",
    "start": "952160",
    "end": "953600"
  },
  {
    "text": "session attributes to see if we have a",
    "start": "953600",
    "end": "954980"
  },
  {
    "text": "destination city set and if so uses that",
    "start": "954980",
    "end": "957770"
  },
  {
    "text": "by default otherwise it prompts the user",
    "start": "957770",
    "end": "959900"
  },
  {
    "text": "to provide the city that they're",
    "start": "959900",
    "end": "960950"
  },
  {
    "text": "interested in checking the news about",
    "start": "960950",
    "end": "964240"
  },
  {
    "text": "the book",
    "start": "965790",
    "end": "967490"
  },
  {
    "text": "they check flights to city intent which",
    "start": "967490",
    "end": "969529"
  },
  {
    "text": "manages the interaction to elicit the",
    "start": "969529",
    "end": "971180"
  },
  {
    "text": "destination city origin city number of",
    "start": "971180",
    "end": "973700"
  },
  {
    "text": "passengers traveling and the flight",
    "start": "973700",
    "end": "974990"
  },
  {
    "text": "number from the user so let's look at",
    "start": "974990",
    "end": "977450"
  },
  {
    "text": "this in action in our travel buddy chat",
    "start": "977450",
    "end": "978980"
  },
  {
    "text": "bot I can ask what's the weather like in",
    "start": "978980",
    "end": "982279"
  },
  {
    "text": "Cairo the chat bot responds with a",
    "start": "982279",
    "end": "984830"
  },
  {
    "text": "weather report which it gets from the",
    "start": "984830",
    "end": "986360"
  },
  {
    "text": "lander function that calls out to a",
    "start": "986360",
    "end": "987980"
  },
  {
    "text": "weather API",
    "start": "987980",
    "end": "988700"
  },
  {
    "text": "the lander function also sets a session",
    "start": "988700",
    "end": "991490"
  },
  {
    "text": "attribute to remember the destination",
    "start": "991490",
    "end": "993050"
  },
  {
    "text": "city that the user is referring to",
    "start": "993050",
    "end": "996490"
  },
  {
    "text": "next the user wants to know what the",
    "start": "997740",
    "end": "1000000"
  },
  {
    "text": "latest news is from that city so they",
    "start": "1000000",
    "end": "1001710"
  },
  {
    "text": "ask what's the latest news from there",
    "start": "1001710",
    "end": "1003450"
  },
  {
    "text": "which is a different intent notice we",
    "start": "1003450",
    "end": "1005760"
  },
  {
    "text": "didn't specify the city the lambda",
    "start": "1005760",
    "end": "1007650"
  },
  {
    "text": "function assumes Cairo because of the",
    "start": "1007650",
    "end": "1009690"
  },
  {
    "text": "session attribute was set in the",
    "start": "1009690",
    "end": "1010830"
  },
  {
    "text": "previous check the weather intent",
    "start": "1010830",
    "end": "1012120"
  },
  {
    "text": "interaction let's say the user reads the",
    "start": "1012120",
    "end": "1017220"
  },
  {
    "text": "news report and is really convinced that",
    "start": "1017220",
    "end": "1019170"
  },
  {
    "text": "they want to go to Cairo so they say I",
    "start": "1019170",
    "end": "1020910"
  },
  {
    "text": "want to fly there which is another uh",
    "start": "1020910",
    "end": "1022860"
  },
  {
    "text": "pterence that maps to yet another intent",
    "start": "1022860",
    "end": "1026449"
  },
  {
    "text": "the dialogue code hullender function",
    "start": "1027060",
    "end": "1029310"
  },
  {
    "text": "looks up the database of available",
    "start": "1029310",
    "end": "1030600"
  },
  {
    "text": "flights to the destination city and",
    "start": "1030600",
    "end": "1032490"
  },
  {
    "text": "shows the top three to the user",
    "start": "1032490",
    "end": "1034439"
  },
  {
    "text": "prompting them to select a flight number",
    "start": "1034440",
    "end": "1036000"
  },
  {
    "text": "or make another query this time we're in",
    "start": "1036000",
    "end": "1039300"
  },
  {
    "text": "the same intent and amazon lexis are",
    "start": "1039300",
    "end": "1041130"
  },
  {
    "text": "listening the remaining values from",
    "start": "1041130",
    "end": "1042540"
  },
  {
    "text": "the user the flight number and the",
    "start": "1042540",
    "end": "1044459"
  },
  {
    "text": "number of passengers traveling in order",
    "start": "1044460",
    "end": "1046530"
  },
  {
    "text": "to build an itinerary next the user can",
    "start": "1046530",
    "end": "1049350"
  },
  {
    "text": "ask about their itinerary and Lex asks",
    "start": "1049350",
    "end": "1051360"
  },
  {
    "text": "them if they wanted to proceed with the",
    "start": "1051360",
    "end": "1052680"
  },
  {
    "text": "booking if they say yes we proceed with",
    "start": "1052680",
    "end": "1056040"
  },
  {
    "text": "the booking will assume that some",
    "start": "1056040",
    "end": "1057540"
  },
  {
    "text": "transaction takes place at this point to",
    "start": "1057540",
    "end": "1059190"
  },
  {
    "text": "confirm the arrangements now there's",
    "start": "1059190",
    "end": "1062730"
  },
  {
    "text": "another aspect to consider here in terms",
    "start": "1062730",
    "end": "1064440"
  },
  {
    "text": "of our travel website and that is reach",
    "start": "1064440",
    "end": "1066200"
  },
  {
    "text": "the kind of customers that I want to",
    "start": "1066200",
    "end": "1068400"
  },
  {
    "text": "engage with may not be the kind of",
    "start": "1068400",
    "end": "1069900"
  },
  {
    "text": "digital citizens that search online for",
    "start": "1069900",
    "end": "1071520"
  },
  {
    "text": "a travel website and then browse to it",
    "start": "1071520",
    "end": "1073350"
  },
  {
    "text": "they may prefer other digital channels",
    "start": "1073350",
    "end": "1075450"
  },
  {
    "text": "like social platforms Amazon Lex",
    "start": "1075450",
    "end": "1077790"
  },
  {
    "text": "integrates natively with Facebook",
    "start": "1077790",
    "end": "1079590"
  },
  {
    "text": "messenger slack kick and Twilio and",
    "start": "1079590",
    "end": "1081930"
  },
  {
    "text": "apart from configuring the link between",
    "start": "1081930",
    "end": "1084000"
  },
  {
    "text": "the chat bot and the social platform you",
    "start": "1084000",
    "end": "1086220"
  },
  {
    "text": "don't need to make any changes to your",
    "start": "1086220",
    "end": "1087540"
  },
  {
    "text": "chat bot when you're targeting facebook",
    "start": "1087540",
    "end": "1090630"
  },
  {
    "text": "messenger slack and Twilio you may want",
    "start": "1090630",
    "end": "1092910"
  },
  {
    "text": "to include response cards response cards",
    "start": "1092910",
    "end": "1095640"
  },
  {
    "text": "are additional metadata that can be",
    "start": "1095640",
    "end": "1097200"
  },
  {
    "text": "returned in your dial-up response JSON",
    "start": "1097200",
    "end": "1099240"
  },
  {
    "text": "to describe lists of options and do",
    "start": "1099240",
    "end": "1101430"
  },
  {
    "text": "things like embedding images and URLs",
    "start": "1101430",
    "end": "1103370"
  },
  {
    "text": "social platforms like Facebook can make",
    "start": "1103370",
    "end": "1105870"
  },
  {
    "text": "use of this data to return lists of",
    "start": "1105870",
    "end": "1107640"
  },
  {
    "text": "options as buttons and can embed the",
    "start": "1107640",
    "end": "1109710"
  },
  {
    "text": "images and link to the URLs you provide",
    "start": "1109710",
    "end": "1111630"
  },
  {
    "text": "these all work to make things much",
    "start": "1111630",
    "end": "1113760"
  },
  {
    "text": "easier for the user to interact with",
    "start": "1113760",
    "end": "1115230"
  },
  {
    "text": "your chat bot integrating a chat bot",
    "start": "1115230",
    "end": "1118260"
  },
  {
    "text": "with Facebook for example is really",
    "start": "1118260",
    "end": "1119820"
  },
  {
    "text": "straightforward",
    "start": "1119820",
    "end": "1120600"
  },
  {
    "text": "check out documentation for the",
    "start": "1120600",
    "end": "1121950"
  },
  {
    "text": "step-by-step process required to obtain",
    "start": "1121950",
    "end": "1123510"
  },
  {
    "text": "the relevant tokens and keys from",
    "start": "1123510",
    "end": "1125220"
  },
  {
    "text": "facebook messenger then on the Amazon",
    "start": "1125220",
    "end": "1128130"
  },
  {
    "text": "left side select the channels tab in",
    "start": "1128130",
    "end": "1130740"
  },
  {
    "text": "your bot and configure the details",
    "start": "1130740",
    "end": "1132870"
  },
  {
    "text": "including the tokens and keys from",
    "start": "1132870",
    "end": "1134610"
  },
  {
    "text": "Facebook then click activate let's see",
    "start": "1134610",
    "end": "1137550"
  },
  {
    "text": "the results in action if I go over to my",
    "start": "1137550",
    "end": "1139770"
  },
  {
    "text": "travel buddy Facebook page I can send a",
    "start": "1139770",
    "end": "1141810"
  },
  {
    "text": "message to my chat bot and interact with",
    "start": "1141810",
    "end": "1144030"
  },
  {
    "text": "it and you can see I can have the same",
    "start": "1144030",
    "end": "1145830"
  },
  {
    "text": "interaction with my customers by my",
    "start": "1145830",
    "end": "1147660"
  },
  {
    "text": "Facebook page as I can on my own website",
    "start": "1147660",
    "end": "1149910"
  },
  {
    "text": "I can ask what's the weather like in",
    "start": "1149910",
    "end": "1152370"
  },
  {
    "text": "Melbourne and what's the latest news",
    "start": "1152370",
    "end": "1155220"
  },
  {
    "text": "from there",
    "start": "1155220",
    "end": "1157610"
  },
  {
    "text": "you",
    "start": "1163000",
    "end": "1165060"
  },
  {
    "text": "I can tell my checkbook that I want to",
    "start": "1167380",
    "end": "1170200"
  },
  {
    "text": "go there and see the flight details",
    "start": "1170200",
    "end": "1171850"
  },
  {
    "text": "retrieved from my database via the",
    "start": "1171850",
    "end": "1173560"
  },
  {
    "text": "dialog code lambda function",
    "start": "1173560",
    "end": "1175150"
  },
  {
    "text": "you'll also notice how Facebook renders",
    "start": "1175150",
    "end": "1177970"
  },
  {
    "text": "the response cards in messenger and",
    "start": "1177970",
    "end": "1180010"
  },
  {
    "text": "these make it easier for my user to",
    "start": "1180010",
    "end": "1182020"
  },
  {
    "text": "interact with the chat but in this mode",
    "start": "1182020",
    "end": "1183550"
  },
  {
    "text": "the same conversation flow still works",
    "start": "1183550",
    "end": "1186400"
  },
  {
    "text": "transferring state between intense using",
    "start": "1186400",
    "end": "1188380"
  },
  {
    "text": "the session attributes and I don't have",
    "start": "1188380",
    "end": "1190420"
  },
  {
    "text": "to change any of my code just configure",
    "start": "1190420",
    "end": "1192190"
  },
  {
    "text": "the Facebook integration with Lex and",
    "start": "1192190",
    "end": "1193870"
  },
  {
    "text": "you're done",
    "start": "1193870",
    "end": "1196170"
  },
  {
    "text": "now I mentioned earlier that Amazon",
    "start": "1199299",
    "end": "1201740"
  },
  {
    "text": "lakes can interact with text as well as",
    "start": "1201740",
    "end": "1203630"
  },
  {
    "text": "voice and that you can build",
    "start": "1203630",
    "end": "1205010"
  },
  {
    "text": "applications that allow users to speak",
    "start": "1205010",
    "end": "1206780"
  },
  {
    "text": "and have Lex respond back using voice",
    "start": "1206780",
    "end": "1209080"
  },
  {
    "text": "Amazon Lex integrates natively with",
    "start": "1209080",
    "end": "1211549"
  },
  {
    "text": "Amazon Poly a service for converting",
    "start": "1211549",
    "end": "1213320"
  },
  {
    "text": "text into lifelike speech Amazon Pali is",
    "start": "1213320",
    "end": "1216650"
  },
  {
    "text": "a fully managed text-to-speech engine",
    "start": "1216650",
    "end": "1218240"
  },
  {
    "text": "that supports 52 voices across 25",
    "start": "1218240",
    "end": "1220670"
  },
  {
    "text": "different languages and offers really",
    "start": "1220670",
    "end": "1222500"
  },
  {
    "text": "low latency so you can build",
    "start": "1222500",
    "end": "1223640"
  },
  {
    "text": "applications that respond using speech",
    "start": "1223640",
    "end": "1225590"
  },
  {
    "text": "in real time and what's great for",
    "start": "1225590",
    "end": "1227840"
  },
  {
    "text": "developers is that once you've render",
    "start": "1227840",
    "end": "1229309"
  },
  {
    "text": "speech as a file you can reuse that file",
    "start": "1229309",
    "end": "1231350"
  },
  {
    "text": "as often as you like including it in",
    "start": "1231350",
    "end": "1233090"
  },
  {
    "text": "your application resources and shipping",
    "start": "1233090",
    "end": "1234530"
  },
  {
    "text": "it with your application without having",
    "start": "1234530",
    "end": "1236030"
  },
  {
    "text": "to pay any ongoing license fees so what",
    "start": "1236030",
    "end": "1239390"
  },
  {
    "text": "if I wanted to grow my treble company",
    "start": "1239390",
    "end": "1241040"
  },
  {
    "text": "and include physical kiosks that could",
    "start": "1241040",
    "end": "1242900"
  },
  {
    "text": "be placed in public spaces and allow",
    "start": "1242900",
    "end": "1244820"
  },
  {
    "text": "passers-by to interact with it using",
    "start": "1244820",
    "end": "1246440"
  },
  {
    "text": "their voice and completely do away with",
    "start": "1246440",
    "end": "1248240"
  },
  {
    "text": "keyboard and mouse well in this last",
    "start": "1248240",
    "end": "1250790"
  },
  {
    "text": "demonstration I'm using a Raspberry Pi",
    "start": "1250790",
    "end": "1252740"
  },
  {
    "text": "as the compute platform for my kiosk it",
    "start": "1252740",
    "end": "1255290"
  },
  {
    "text": "has enough processing power and ran for",
    "start": "1255290",
    "end": "1256880"
  },
  {
    "text": "this simple task and is a great platform",
    "start": "1256880",
    "end": "1259100"
  },
  {
    "text": "for prototyping projects like this so my",
    "start": "1259100",
    "end": "1261440"
  },
  {
    "text": "hardware kit is a Raspberry Pi with a",
    "start": "1261440",
    "end": "1263030"
  },
  {
    "text": "microphone connected so I can capture",
    "start": "1263030",
    "end": "1264590"
  },
  {
    "text": "speech from the user here are some of",
    "start": "1264590",
    "end": "1267440"
  },
  {
    "text": "the key features that I wanted to",
    "start": "1267440",
    "end": "1268580"
  },
  {
    "text": "implement in this prototype first of all",
    "start": "1268580",
    "end": "1270919"
  },
  {
    "text": "I want it to run headless so I don't",
    "start": "1270919",
    "end": "1273080"
  },
  {
    "text": "want any physical interaction from the",
    "start": "1273080",
    "end": "1274460"
  },
  {
    "text": "user just their voice so I need to",
    "start": "1274460",
    "end": "1276799"
  },
  {
    "text": "implement a hot word to get the devices",
    "start": "1276799",
    "end": "1278660"
  },
  {
    "text": "attention to begin a conversation so for",
    "start": "1278660",
    "end": "1281150"
  },
  {
    "text": "this I'm using a toolkit called snow boy",
    "start": "1281150",
    "end": "1282850"
  },
  {
    "text": "after the user has gotten the device's",
    "start": "1282850",
    "end": "1285290"
  },
  {
    "text": "attention with a hot word I then need to",
    "start": "1285290",
    "end": "1286940"
  },
  {
    "text": "be able to determine when the user stops",
    "start": "1286940",
    "end": "1288679"
  },
  {
    "text": "speaking to process what they said for",
    "start": "1288679",
    "end": "1291860"
  },
  {
    "text": "this task",
    "start": "1291860",
    "end": "1292400"
  },
  {
    "text": "I'm using socks an open-source utility",
    "start": "1292400",
    "end": "1294590"
  },
  {
    "text": "for audio processing to keep the latency",
    "start": "1294590",
    "end": "1297650"
  },
  {
    "text": "really low I'm going to stream the audio",
    "start": "1297650",
    "end": "1299630"
  },
  {
    "text": "packets up to the cloud using AWS IOT so",
    "start": "1299630",
    "end": "1302630"
  },
  {
    "text": "data is transferred while the user is",
    "start": "1302630",
    "end": "1304549"
  },
  {
    "text": "still speaking rather than waiting for",
    "start": "1304549",
    "end": "1306140"
  },
  {
    "text": "them to finish speaking before starting",
    "start": "1306140",
    "end": "1307669"
  },
  {
    "text": "the upload and for natural language",
    "start": "1307669",
    "end": "1310040"
  },
  {
    "text": "understanding and converting text to",
    "start": "1310040",
    "end": "1311990"
  },
  {
    "text": "voice I'm going to use Amazon Lex and",
    "start": "1311990",
    "end": "1313850"
  },
  {
    "text": "Amazon Pali the way it works is the",
    "start": "1313850",
    "end": "1317059"
  },
  {
    "text": "device is always listening out for the",
    "start": "1317059",
    "end": "1318530"
  },
  {
    "text": "hot word to wake it up the user just",
    "start": "1318530",
    "end": "1320570"
  },
  {
    "text": "says hey travel buddy to wake the device",
    "start": "1320570",
    "end": "1322490"
  },
  {
    "text": "up and it responds back to prompt the",
    "start": "1322490",
    "end": "1324470"
  },
  {
    "text": "user to ask a question I've used Amazon",
    "start": "1324470",
    "end": "1326960"
  },
  {
    "text": "Pali to create the sound files with the",
    "start": "1326960",
    "end": "1328669"
  },
  {
    "text": "prompts and ship them with a device so",
    "start": "1328669",
    "end": "1330800"
  },
  {
    "text": "the voice remains constant whether",
    "start": "1330800",
    "end": "1332669"
  },
  {
    "text": "responses are predetermined like this",
    "start": "1332669",
    "end": "1334139"
  },
  {
    "text": "one or dynamic which they will be for",
    "start": "1334139",
    "end": "1336419"
  },
  {
    "text": "most of the conversation with a voice",
    "start": "1336419",
    "end": "1337619"
  },
  {
    "text": "bot the device then turns on the",
    "start": "1337619",
    "end": "1339899"
  },
  {
    "text": "microphone to capture what the user says",
    "start": "1339899",
    "end": "1341519"
  },
  {
    "text": "and streams audio chunks up to AWS in",
    "start": "1341519",
    "end": "1344159"
  },
  {
    "text": "real time to the AWS iot service I am",
    "start": "1344159",
    "end": "1347639"
  },
  {
    "text": "using AWS IOT as an mqtt endpoint to get",
    "start": "1347639",
    "end": "1351119"
  },
  {
    "text": "really low latency from my device to the",
    "start": "1351119",
    "end": "1353009"
  },
  {
    "text": "cloud to make the voice interaction as",
    "start": "1353009",
    "end": "1354869"
  },
  {
    "text": "natural as possible",
    "start": "1354869",
    "end": "1355919"
  },
  {
    "text": "I have an AWS IOT rule that sets the",
    "start": "1355919",
    "end": "1359639"
  },
  {
    "text": "audio chunks into the DynamoDB table for",
    "start": "1359639",
    "end": "1362100"
  },
  {
    "text": "temporary storage when the user stops",
    "start": "1362100",
    "end": "1364350"
  },
  {
    "text": "speaking the device detects silence",
    "start": "1364350",
    "end": "1366029"
  },
  {
    "text": "using the SoCs utility and then makes a",
    "start": "1366029",
    "end": "1367919"
  },
  {
    "text": "secure call into Amazon API gateway to",
    "start": "1367919",
    "end": "1370289"
  },
  {
    "text": "trigger and lambda function to",
    "start": "1370289",
    "end": "1372059"
  },
  {
    "text": "reconstruct all the audio chunks into a",
    "start": "1372059",
    "end": "1374100"
  },
  {
    "text": "single file and pass it on to Amazon",
    "start": "1374100",
    "end": "1375869"
  },
  {
    "text": "Lakes for processing Amazon leaks",
    "start": "1375869",
    "end": "1378119"
  },
  {
    "text": "processes the voice interaction runs my",
    "start": "1378119",
    "end": "1380309"
  },
  {
    "text": "lambda code Hawks with their business",
    "start": "1380309",
    "end": "1381720"
  },
  {
    "text": "logic just like it does with the text",
    "start": "1381720",
    "end": "1383309"
  },
  {
    "text": "input from the chat bot but since we're",
    "start": "1383309",
    "end": "1385590"
  },
  {
    "text": "providing an audio input rather than",
    "start": "1385590",
    "end": "1387179"
  },
  {
    "text": "text Amazon licks will use Amazon poly",
    "start": "1387179",
    "end": "1389399"
  },
  {
    "text": "to render a speech response as an audio",
    "start": "1389399",
    "end": "1391649"
  },
  {
    "text": "payload Amazon licks returns the audio",
    "start": "1391649",
    "end": "1394499"
  },
  {
    "text": "payload together with the other bot",
    "start": "1394499",
    "end": "1396029"
  },
  {
    "text": "information like session attributes and",
    "start": "1396029",
    "end": "1397590"
  },
  {
    "text": "dialogue action information just like",
    "start": "1397590",
    "end": "1399419"
  },
  {
    "text": "before this goes back to the device and",
    "start": "1399419",
    "end": "1401940"
  },
  {
    "text": "we render the speech as an audio file",
    "start": "1401940",
    "end": "1403679"
  },
  {
    "text": "and play it out the device's speaker the",
    "start": "1403679",
    "end": "1406350"
  },
  {
    "text": "whole interaction continues this way",
    "start": "1406350",
    "end": "1407850"
  },
  {
    "text": "until the conversation is fulfilled",
    "start": "1407850",
    "end": "1409529"
  },
  {
    "text": "exactly like it works with text I don't",
    "start": "1409529",
    "end": "1411809"
  },
  {
    "text": "have to make any changes to my chat bot",
    "start": "1411809",
    "end": "1413429"
  },
  {
    "text": "in order to support this new modality",
    "start": "1413429",
    "end": "1415080"
  },
  {
    "text": "let's see it in action okay so what I",
    "start": "1415080",
    "end": "1420210"
  },
  {
    "text": "have here is a pretty simple setup I've",
    "start": "1420210",
    "end": "1421619"
  },
  {
    "text": "got my Raspberry Pi 3 an analog speaker",
    "start": "1421619",
    "end": "1424049"
  },
  {
    "text": "so I can hear what the device is saying",
    "start": "1424049",
    "end": "1425279"
  },
  {
    "text": "and a microphone to capture the audio",
    "start": "1425279",
    "end": "1427200"
  },
  {
    "text": "from the user so everything's up and",
    "start": "1427200",
    "end": "1429119"
  },
  {
    "text": "running let's give it a try hey travel",
    "start": "1429119",
    "end": "1431820"
  },
  {
    "text": "buddy hi there how can I help what's the",
    "start": "1431820",
    "end": "1435629"
  },
  {
    "text": "weather like in Melbourne the current",
    "start": "1435629",
    "end": "1441570"
  },
  {
    "text": "weather for Melbourne is clouds overcast",
    "start": "1441570",
    "end": "1444119"
  },
  {
    "text": "clouds it is currently 19 degrees with a",
    "start": "1444119",
    "end": "1446909"
  },
  {
    "text": "humidity of 64 visibility is up to ten",
    "start": "1446909",
    "end": "1449970"
  },
  {
    "text": "thousand meters and you can see here how",
    "start": "1449970",
    "end": "1452549"
  },
  {
    "text": "I've got all the values from the JSON",
    "start": "1452549",
    "end": "1454230"
  },
  {
    "text": "payload return from Lex displayed on the",
    "start": "1454230",
    "end": "1455940"
  },
  {
    "text": "screen including the slot values so",
    "start": "1455940",
    "end": "1458249"
  },
  {
    "text": "let's say I wants to know what's the",
    "start": "1458249",
    "end": "1459809"
  },
  {
    "text": "news from there so I can say hey travel",
    "start": "1459809",
    "end": "1461940"
  },
  {
    "text": "buddy yeah what's the latest news from",
    "start": "1461940",
    "end": "1464820"
  },
  {
    "text": "there",
    "start": "1464820",
    "end": "1466230"
  },
  {
    "text": "notice how how I didn't make decide the",
    "start": "1466230",
    "end": "1468370"
  },
  {
    "text": "city night here are the top three news",
    "start": "1468370",
    "end": "1470770"
  },
  {
    "text": "articles about male born Patrick Allen",
    "start": "1470770",
    "end": "1473020"
  },
  {
    "text": "reports these are the safest major",
    "start": "1473020",
    "end": "1474940"
  },
  {
    "text": "cities in the world to visit right now",
    "start": "1474940",
    "end": "1476980"
  },
  {
    "text": "David Lum reports an Amazon Australia",
    "start": "1476980",
    "end": "1479650"
  },
  {
    "text": "starts taking orders John Russell",
    "start": "1479650",
    "end": "1481720"
  },
  {
    "text": "reports Australia's air wallis raises",
    "start": "1481720",
    "end": "1484240"
  },
  {
    "text": "six million dollars to grow its",
    "start": "1484240",
    "end": "1485799"
  },
  {
    "text": "cross-border payment business okay I'm",
    "start": "1485799",
    "end": "1488440"
  },
  {
    "text": "convinced I really want to go to",
    "start": "1488440",
    "end": "1489790"
  },
  {
    "text": "Melbourne so I can say hey travel buddy",
    "start": "1489790",
    "end": "1492299"
  },
  {
    "text": "yeah I want to go there no problem I",
    "start": "1492299",
    "end": "1500410"
  },
  {
    "text": "found 11 flights to Melbourne here are",
    "start": "1500410",
    "end": "1503169"
  },
  {
    "text": "the first three by departure date flight",
    "start": "1503169",
    "end": "1505620"
  },
  {
    "text": "1048 from Canberra on 22nd of January",
    "start": "1505620",
    "end": "1509580"
  },
  {
    "text": "$419 flight 113 from Sydney on 18th of",
    "start": "1509580",
    "end": "1513460"
  },
  {
    "text": "February $262 flight 1116 from Singapore",
    "start": "1513460",
    "end": "1518740"
  },
  {
    "text": "on 9th of April $447 any of these dates",
    "start": "1518740",
    "end": "1522790"
  },
  {
    "text": "suit your travel needs if so just say",
    "start": "1522790",
    "end": "1525580"
  },
  {
    "text": "the flight number otherwise we can look",
    "start": "1525580",
    "end": "1527830"
  },
  {
    "text": "for other destinations 113 that's the",
    "start": "1527830",
    "end": "1533559"
  },
  {
    "text": "flight from Sydney to Melbourne ok let's",
    "start": "1533559",
    "end": "1536440"
  },
  {
    "text": "take a look at flight 113 from Sydney to",
    "start": "1536440",
    "end": "1538929"
  },
  {
    "text": "Melbourne how many passengers are",
    "start": "1538929",
    "end": "1541000"
  },
  {
    "text": "travelling there are two of us ok got it",
    "start": "1541000",
    "end": "1549160"
  },
  {
    "text": "I have added two seats on flight 113",
    "start": "1549160",
    "end": "1552250"
  },
  {
    "text": "from Sydney to Melbourne - your travel",
    "start": "1552250",
    "end": "1554049"
  },
  {
    "text": "itinerary when you're ready just let me",
    "start": "1554049",
    "end": "1556630"
  },
  {
    "text": "know and I will confirm and process your",
    "start": "1556630",
    "end": "1558370"
  },
  {
    "text": "booking so at this point that data is",
    "start": "1558370",
    "end": "1560950"
  },
  {
    "text": "held in session attributes so my next",
    "start": "1560950",
    "end": "1563080"
  },
  {
    "text": "step is to ask travel buddy to make my",
    "start": "1563080",
    "end": "1565179"
  },
  {
    "text": "booking hey travel buddy yeah I want to",
    "start": "1565179",
    "end": "1568960"
  },
  {
    "text": "confirm my itinerary",
    "start": "1568960",
    "end": "1571710"
  },
  {
    "text": "here's your travel itinerary I have two",
    "start": "1573780",
    "end": "1576669"
  },
  {
    "text": "seats on flight 113 from Sydney to",
    "start": "1576669",
    "end": "1579100"
  },
  {
    "text": "Melbourne do you want me to proceed with",
    "start": "1579100",
    "end": "1581260"
  },
  {
    "text": "confirming this booking yes please",
    "start": "1581260",
    "end": "1585630"
  },
  {
    "text": "you can see how the natural interaction",
    "start": "1585630",
    "end": "1587919"
  },
  {
    "text": "okay I am now processing your itinerary",
    "start": "1587919",
    "end": "1590440"
  },
  {
    "text": "you will receive an email confirmation",
    "start": "1590440",
    "end": "1592450"
  },
  {
    "text": "shortly and of course just as before the",
    "start": "1592450",
    "end": "1595270"
  },
  {
    "text": "interaction will continue and processing",
    "start": "1595270",
    "end": "1597520"
  },
  {
    "text": "will take place in a booking will be",
    "start": "1597520",
    "end": "1598660"
  },
  {
    "text": "made let's",
    "start": "1598660",
    "end": "1599110"
  },
  {
    "text": "assume that just happens in the",
    "start": "1599110",
    "end": "1600010"
  },
  {
    "text": "background so as you can see I didn't",
    "start": "1600010",
    "end": "1601809"
  },
  {
    "text": "need to make any changes to my chat bot",
    "start": "1601809",
    "end": "1603580"
  },
  {
    "text": "itself it is exactly the same",
    "start": "1603580",
    "end": "1604929"
  },
  {
    "text": "interaction that I would have had with",
    "start": "1604929",
    "end": "1606429"
  },
  {
    "text": "the text bot in my facebook web page in",
    "start": "1606429",
    "end": "1608500"
  },
  {
    "text": "my travel buddy website or even on the",
    "start": "1608500",
    "end": "1610390"
  },
  {
    "text": "AWS console thanks for attending the",
    "start": "1610390",
    "end": "1616510"
  },
  {
    "text": "session today I hope you found it really",
    "start": "1616510",
    "end": "1617950"
  },
  {
    "text": "interesting and that it helps you think",
    "start": "1617950",
    "end": "1619240"
  },
  {
    "text": "about how you can add voice and text to",
    "start": "1619240",
    "end": "1621610"
  },
  {
    "text": "your own applications if after today",
    "start": "1621610",
    "end": "1624010"
  },
  {
    "text": "you're wanting to take your AWS",
    "start": "1624010",
    "end": "1625570"
  },
  {
    "text": "knowledge to the next level you have",
    "start": "1625570",
    "end": "1627280"
  },
  {
    "text": "several options available to you to gain",
    "start": "1627280",
    "end": "1629320"
  },
  {
    "text": "more confidence and hands-on experience",
    "start": "1629320",
    "end": "1630820"
  },
  {
    "text": "with AWS watch our instructional videos",
    "start": "1630820",
    "end": "1632919"
  },
  {
    "text": "and explore the self-paced labs",
    "start": "1632919",
    "end": "1634860"
  },
  {
    "text": "additionally you can attend our",
    "start": "1634860",
    "end": "1636790"
  },
  {
    "text": "instructor-led classes led by qualified",
    "start": "1636790",
    "end": "1639250"
  },
  {
    "text": "AWS instructors and learn how to design",
    "start": "1639250",
    "end": "1641620"
  },
  {
    "text": "deploy and operate highly available",
    "start": "1641620",
    "end": "1643780"
  },
  {
    "text": "cost-effective and secure applications",
    "start": "1643780",
    "end": "1646030"
  },
  {
    "text": "on eight of us don't forget to validate",
    "start": "1646030",
    "end": "1648669"
  },
  {
    "text": "your technical expertise with AWS and",
    "start": "1648669",
    "end": "1651040"
  },
  {
    "text": "use practice exams to help you prepare",
    "start": "1651040",
    "end": "1652690"
  },
  {
    "text": "for AWS certification please take the",
    "start": "1652690",
    "end": "1656169"
  },
  {
    "text": "time to provide feedback on today's",
    "start": "1656169",
    "end": "1657520"
  },
  {
    "text": "event so that we can improve the event",
    "start": "1657520",
    "end": "1659470"
  },
  {
    "text": "experience for you in the future",
    "start": "1659470",
    "end": "1661270"
  },
  {
    "text": "I really look forward to seeing you the",
    "start": "1661270",
    "end": "1663040"
  },
  {
    "text": "next time and please enjoy the rest of",
    "start": "1663040",
    "end": "1664660"
  },
  {
    "text": "the conference",
    "start": "1664660",
    "end": "1666929"
  }
]