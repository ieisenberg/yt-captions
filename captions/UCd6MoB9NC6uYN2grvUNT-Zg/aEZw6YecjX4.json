[
  {
    "start": "0",
    "end": "48000"
  },
  {
    "text": "welcome to this webinar on scholastics transition to a digital realm using",
    "start": "30",
    "end": "5700"
  },
  {
    "text": "container based architectures my name is Ryan I am a partner Solutions Architect",
    "start": "5700",
    "end": "10889"
  },
  {
    "text": "with Amazon Web Services I am joined here today by Meyer who is a senior",
    "start": "10889",
    "end": "17760"
  },
  {
    "text": "Solutions Architect from Red Hat and a specialist on Red Hat OpenShift and URI",
    "start": "17760",
    "end": "24510"
  },
  {
    "text": "who is a DevOps systems engineer from Scholastic and we are going to be",
    "start": "24510",
    "end": "31439"
  },
  {
    "text": "discussing various aspects of open shift as well as the scholastic journey from a",
    "start": "31439",
    "end": "37760"
  },
  {
    "text": "largely monolithic platform to a container based architecture using open",
    "start": "37760",
    "end": "45480"
  },
  {
    "text": "shift on top of AWS in a modern-day",
    "start": "45480",
    "end": "50969"
  },
  {
    "start": "48000",
    "end": "137000"
  },
  {
    "text": "digital context businesses have had a requirement evolution more and more",
    "start": "50969",
    "end": "58020"
  },
  {
    "text": "businesses are facing challenges where they need to get feedback from their",
    "start": "58020",
    "end": "63300"
  },
  {
    "text": "customer base this feedback is collected through various means some of them even",
    "start": "63300",
    "end": "68790"
  },
  {
    "text": "through simple mechanisms such as mobile apps where the customer is able to provide feedback around their experience",
    "start": "68790",
    "end": "76259"
  },
  {
    "text": "on the application solutions provided by the customer companies need to take this",
    "start": "76259",
    "end": "81810"
  },
  {
    "text": "feedback and convert that feedback into ideas whether these ideas are simple bug",
    "start": "81810",
    "end": "89009"
  },
  {
    "text": "fixes or whether they are completely new feature sets or new products either",
    "start": "89009",
    "end": "94530"
  },
  {
    "text": "which way a business needs to be able to take this feedback convert it into ideas and actually build out on these ideas",
    "start": "94530",
    "end": "101340"
  },
  {
    "text": "and get them into the market where customers and are able to consume these",
    "start": "101340",
    "end": "106710"
  },
  {
    "text": "new features these new services traditionally this was a very slow",
    "start": "106710",
    "end": "112200"
  },
  {
    "text": "process in a modern day context the desire is to be able to collect feedback",
    "start": "112200",
    "end": "118049"
  },
  {
    "text": "action those ideas tests experiment with those ideas and push them out into",
    "start": "118049",
    "end": "124770"
  },
  {
    "text": "production as rapidly as possible in some cases we're seeing customers being able to do this at a very high frequency",
    "start": "124770",
    "end": "131959"
  },
  {
    "text": "and very low cadence in terms of getting it out in terms of days the modern",
    "start": "131959",
    "end": "139250"
  },
  {
    "start": "137000",
    "end": "178000"
  },
  {
    "text": "application development goals are to be able to automate and abstract away as",
    "start": "139250",
    "end": "147060"
  },
  {
    "text": "much of the heavy lifting for a customer",
    "start": "147060",
    "end": "152430"
  },
  {
    "text": "as possible we really want to find ways to enable customers to focus on what is important",
    "start": "152430",
    "end": "158940"
  },
  {
    "text": "to them and their businesses ie have the development and operations teams focus",
    "start": "158940",
    "end": "164880"
  },
  {
    "text": "on building out applications that are meaningful to their customers instead of",
    "start": "164880",
    "end": "169890"
  },
  {
    "text": "having them focus on things such as infrastructure or platforms these",
    "start": "169890",
    "end": "180590"
  },
  {
    "start": "178000",
    "end": "258000"
  },
  {
    "text": "modernized development practices focus on three very critical components",
    "start": "180590",
    "end": "187290"
  },
  {
    "text": "firstly to shorten the time frame from a conceptual idea to production this is a",
    "start": "187290",
    "end": "196319"
  },
  {
    "text": "interesting change from the past in the past we focused very strongly on",
    "start": "196319",
    "end": "201530"
  },
  {
    "text": "accelerating development in a modern-day context we're taking it a step further",
    "start": "201530",
    "end": "206959"
  },
  {
    "text": "we're no longer concerned about simply developing an application or a solution we really want to see that solution get",
    "start": "206959",
    "end": "215519"
  },
  {
    "text": "out into the market in a production context so not just going from development but going from testing from",
    "start": "215519",
    "end": "222120"
  },
  {
    "text": "UAT to security assessment and ultimately into a production context",
    "start": "222120",
    "end": "227190"
  },
  {
    "text": "itself the risks that we typically see with a development process we want to",
    "start": "227190",
    "end": "234840"
  },
  {
    "text": "address those risks we want to identify them sooner we want to solve those challenges very rapidly so that we can",
    "start": "234840",
    "end": "241950"
  },
  {
    "text": "get into production in a large part of that's not just a development cycle but also the security elements we also",
    "start": "241950",
    "end": "249959"
  },
  {
    "text": "continuously want to improve on systems so once an application has been",
    "start": "249959",
    "end": "255390"
  },
  {
    "text": "developed and that has gone into production that is certainly not the end of the journey we do want to see a",
    "start": "255390",
    "end": "262190"
  },
  {
    "start": "258000",
    "end": "358000"
  },
  {
    "text": "evolution of that software set and those customer feedback on ponents where customers are saying this",
    "start": "262190",
    "end": "268680"
  },
  {
    "text": "is what we want this is what's missing drive that continuous improvement over",
    "start": "268680",
    "end": "274889"
  },
  {
    "text": "and above that we do see customers wanting to evolve and streamline their cost their security footprints and their",
    "start": "274889",
    "end": "281490"
  },
  {
    "text": "agility in a modernized cloud context there are several drivers we're seeing",
    "start": "281490",
    "end": "286770"
  },
  {
    "text": "more and more customers move into the cloud and there are various reasons for this",
    "start": "286770",
    "end": "291990"
  },
  {
    "text": "these may include operational resilience customers who typical on-premises data",
    "start": "291990",
    "end": "298889"
  },
  {
    "text": "centers are not as highly available as what they can achieve on cloud offerings",
    "start": "298889",
    "end": "305330"
  },
  {
    "text": "cost savings the economy at scale the ability to pay for resources only when",
    "start": "305330",
    "end": "313349"
  },
  {
    "text": "you're using them the ability to scale up and scale down as your business requires that and based on that pay only",
    "start": "313349",
    "end": "320639"
  },
  {
    "text": "for what you absolutely need when you need it better resource efficiency newer",
    "start": "320639",
    "end": "326220"
  },
  {
    "text": "technologies newer innovations coming out continuously as well as the ability",
    "start": "326220",
    "end": "332340"
  },
  {
    "text": "to be incredibly agile at an infrastructure level but also at an",
    "start": "332340",
    "end": "338669"
  },
  {
    "text": "application level ultimately aggregating into a much higher agility and the",
    "start": "338669",
    "end": "345900"
  },
  {
    "text": "ability to get your ideas built into products and solutions and into the",
    "start": "345900",
    "end": "350940"
  },
  {
    "text": "market quicker and these are the primary drivers that we are seeing with customers moving into AWS furthermore if",
    "start": "350940",
    "end": "361199"
  },
  {
    "start": "358000",
    "end": "402000"
  },
  {
    "text": "we look at containers minton majority of these customers have selected a container platform to provide them a",
    "start": "361199",
    "end": "368849"
  },
  {
    "text": "portability mechanism a means of packaging up their code their configurations all of the dependencies",
    "start": "368849",
    "end": "376289"
  },
  {
    "text": "and ensuring that that application workload can run whether it is on a",
    "start": "376289",
    "end": "381990"
  },
  {
    "text": "developer notebook whether it is in a development or production context whether it is going to run in an",
    "start": "381990",
    "end": "388259"
  },
  {
    "text": "on-premises data center or whether it'll run on AWS cloud really enabling a",
    "start": "388259",
    "end": "396110"
  },
  {
    "text": "agility model a portability model containers themselves unfortunately are",
    "start": "396110",
    "end": "402639"
  },
  {
    "start": "402000",
    "end": "478000"
  },
  {
    "text": "not enough on their own we do need a little bit more than just a container run time and this is where Red Hat has",
    "start": "402639",
    "end": "410349"
  },
  {
    "text": "come into the picture with OpenShift OpenShift is not simply a container run",
    "start": "410349",
    "end": "415870"
  },
  {
    "text": "time it is an application platform that caters for various components focusing",
    "start": "415870",
    "end": "422889"
  },
  {
    "text": "on a an administrative experience allowing for developers operators as",
    "start": "422889",
    "end": "428439"
  },
  {
    "text": "well as security individuals to control various aspects of that application",
    "start": "428439",
    "end": "434229"
  },
  {
    "text": "journey application services a lot has been put into OpenShift to enable the",
    "start": "434229",
    "end": "440740"
  },
  {
    "text": "development process as well as to reduce some of the heavy lifting of database",
    "start": "440740",
    "end": "447699"
  },
  {
    "text": "and storage mechanisms as well as the orchestration platform being highly",
    "start": "447699",
    "end": "453159"
  },
  {
    "text": "abstracted and simplified and then of course my favorite is open shifts",
    "start": "453159",
    "end": "459669"
  },
  {
    "text": "ability to provide not just a holistic security platform but also that of a",
    "start": "459669",
    "end": "465189"
  },
  {
    "text": "prescriptive guardrail type environment where protective measures are put in",
    "start": "465189",
    "end": "472029"
  },
  {
    "text": "place to guide developers and operation teams as to how best to implement",
    "start": "472029",
    "end": "477279"
  },
  {
    "text": "security within their application environments when we at AWS and Red Hat",
    "start": "477279",
    "end": "482289"
  },
  {
    "text": "reached out to customers to validate some of our assumptions we got some",
    "start": "482289",
    "end": "487899"
  },
  {
    "text": "consistent asks from all of our customers and those asks were very simply we want agility we want to be",
    "start": "487899",
    "end": "494319"
  },
  {
    "text": "able to get into the market quicker we want a hybrid experience our customers wanted a unified experience a unified",
    "start": "494319",
    "end": "502360"
  },
  {
    "text": "process whether they were running that application workload on-premises or whether that was going to run on top of",
    "start": "502360",
    "end": "508990"
  },
  {
    "text": "the AWS cloud many customers came forward and said though they are have",
    "start": "508990",
    "end": "514630"
  },
  {
    "text": "the ability to take various open source and third-party solutions and integrate",
    "start": "514630",
    "end": "520209"
  },
  {
    "text": "them together and basically build them out the desire was more for a turnkey",
    "start": "520209",
    "end": "525699"
  },
  {
    "text": "solution and out-of-the-box approach so that less if it was spent in terms of",
    "start": "525699",
    "end": "531130"
  },
  {
    "text": "building out the system as opposed to focusing and below building the applications that are",
    "start": "531130",
    "end": "536529"
  },
  {
    "text": "relevant to the customer environment and then again that prescriptive guardrail",
    "start": "536529",
    "end": "541620"
  },
  {
    "text": "desire for security and OpenShift has by a long means been the platform of",
    "start": "541620",
    "end": "550570"
  },
  {
    "text": "choice providing all of these components when we have a look at container",
    "start": "550570",
    "end": "558070"
  },
  {
    "start": "555000",
    "end": "701000"
  },
  {
    "text": "platforms and we look at Red Hat OpenShift we do see some very",
    "start": "558070",
    "end": "563079"
  },
  {
    "text": "interesting industry statistics the year can you run us through some of the things that you're seeing with your",
    "start": "563079",
    "end": "568630"
  },
  {
    "text": "customer base sure Thank You Anne containers are nothing less than new",
    "start": "568630",
    "end": "574630"
  },
  {
    "text": "atomic units on which applications are not just developed but also deployed",
    "start": "574630",
    "end": "580110"
  },
  {
    "text": "containers provide unprecedented resilience to these applications but not",
    "start": "580110",
    "end": "585519"
  },
  {
    "text": "only that they also provide great agility and flexibility to these",
    "start": "585519",
    "end": "590560"
  },
  {
    "text": "enterprise applications so organizations that are leveraging containerization and",
    "start": "590560",
    "end": "596320"
  },
  {
    "text": "public cloud by using by going with AWS and OpenShift",
    "start": "596320",
    "end": "601930"
  },
  {
    "text": "are reported to us the benefits that they're seeing in terms of scalability",
    "start": "601930",
    "end": "608440"
  },
  {
    "text": "in terms of security and in terms of economics as a result these",
    "start": "608440",
    "end": "615160"
  },
  {
    "text": "organizations are capturing the value of the investments in open shipped and AWS",
    "start": "615160",
    "end": "620860"
  },
  {
    "text": "and IDC has projected this number to be ten point eight nine million dollars per",
    "start": "620860",
    "end": "627490"
  },
  {
    "text": "organization per year and most of that comes from enabling development teams to",
    "start": "627490",
    "end": "634649"
  },
  {
    "text": "develop applications faster and our features to the applications in a much",
    "start": "634649",
    "end": "639819"
  },
  {
    "text": "more timely manner also organizations are being been increasing their revenue",
    "start": "639819",
    "end": "645459"
  },
  {
    "text": "by focusing on opportunities and delivering applications and going to",
    "start": "645459",
    "end": "653110"
  },
  {
    "text": "market in a much more timely manner also we have seen that the employee",
    "start": "653110",
    "end": "659620"
  },
  {
    "text": "productivity has increased and this is because the downtime has gone down",
    "start": "659620",
    "end": "666070"
  },
  {
    "text": "with the with the onset of OpenShift and running on AWS",
    "start": "666070",
    "end": "672720"
  },
  {
    "text": "we also seem that the IPT staff has been in far less time managing and supporting",
    "start": "672720",
    "end": "678220"
  },
  {
    "text": "and tried to secure the IT infrastructure because of m2 and automation provided by pocket shift and",
    "start": "678220",
    "end": "685269"
  },
  {
    "text": "last but not release is the lowering of the infrastructure cost not only for",
    "start": "685269",
    "end": "692100"
  },
  {
    "text": "development but also for deployment by moving on to AWS cloud and leveraging",
    "start": "692100",
    "end": "697839"
  },
  {
    "text": "the features of open shift functionalities let me talk about the",
    "start": "697839",
    "end": "707790"
  },
  {
    "start": "701000",
    "end": "1125000"
  },
  {
    "text": "benefits of kubernetes I mean open shift is Enterprise kubernetes plus right so",
    "start": "707790",
    "end": "713949"
  },
  {
    "text": "let's start with the benefits of kubernetes if implemented correctly kubernetes offers great deal of benefits",
    "start": "713949",
    "end": "722079"
  },
  {
    "text": "I mean in terms of scalability in terms of workload portability and our",
    "start": "722079",
    "end": "727720"
  },
  {
    "text": "separation of concern just in terms of scalability you could deploy kubernetes",
    "start": "727720",
    "end": "733329"
  },
  {
    "text": "on your laptop or you could deploy it in a cluster with hundreds and thousands of",
    "start": "733329",
    "end": "740560"
  },
  {
    "text": "nodes or also from a local portability point of view you can have your",
    "start": "740560",
    "end": "747399"
  },
  {
    "text": "workloads running on on-premise or you could have them of the cloud like AWS or",
    "start": "747399",
    "end": "753940"
  },
  {
    "text": "you could also have it in a hybrid manner where your workload would be",
    "start": "753940",
    "end": "759490"
  },
  {
    "text": "running both in a private cloud as well as at a public cloud and you can scale this as and when you need also",
    "start": "759490",
    "end": "767709"
  },
  {
    "text": "kubernetes addresses the concerns not only of the developers who want to",
    "start": "767709",
    "end": "772720"
  },
  {
    "text": "basically bring their applications out faster but also the operations teams who",
    "start": "772720",
    "end": "778689"
  },
  {
    "text": "are looking for more stability so one of the challenges basically that the",
    "start": "778689",
    "end": "784209"
  },
  {
    "text": "enterprise's are seeing with kubernetes what we've found is the main challenge",
    "start": "784209",
    "end": "790360"
  },
  {
    "text": "is with the installation and deployment ID must validate the horse and the right",
    "start": "790360",
    "end": "798370"
  },
  {
    "text": "kind of settings that they have the set on the host before the deployed kubernetes also they have to be",
    "start": "798370",
    "end": "804520"
  },
  {
    "text": "concerned about the Linux operating system whether it's installed properly all",
    "start": "804520",
    "end": "809620"
  },
  {
    "text": "those things are a big concern and a roadblock for i-44 enterprises when they",
    "start": "809620",
    "end": "816820"
  },
  {
    "text": "deploy two vanities even while deploying kubernetes the right identity and",
    "start": "816820",
    "end": "822760"
  },
  {
    "text": "security access must be supplied just so that you can integrate your storage your networking and the container registries",
    "start": "822760",
    "end": "832770"
  },
  {
    "text": "in terms of hardening once kubernetes is deployed even to just integrate it you",
    "start": "832770",
    "end": "839920"
  },
  {
    "text": "would need others other tools like your monitoring tools your logging tools also",
    "start": "839920",
    "end": "846610"
  },
  {
    "text": "things like you've got to be concerned about security hardening and also think",
    "start": "846610",
    "end": "852550"
  },
  {
    "text": "about organizations with multiple teams these organizations organizations are concerned about how to segment the",
    "start": "852550",
    "end": "859600"
  },
  {
    "text": "resources how to how to do meetings for these various teams within their",
    "start": "859600",
    "end": "864640"
  },
  {
    "text": "organisations metering and chargeback has been a big challenge for for",
    "start": "864640",
    "end": "870280"
  },
  {
    "text": "enterprise customers using kubernetes say everything is everything is deployed",
    "start": "870280",
    "end": "877390"
  },
  {
    "text": "properly in communities we are in production even after that operations",
    "start": "877390",
    "end": "882730"
  },
  {
    "text": "have to be concerned about the stack from end to end right from the operating system to the kubernetes and the",
    "start": "882730",
    "end": "890380"
  },
  {
    "text": "application services that are running on top of it these need to be constantly patched and updated and this again is a",
    "start": "890380",
    "end": "897370"
  },
  {
    "text": "massive concern for enterprises so what is not in kubernetes if you look at it",
    "start": "897370",
    "end": "906250"
  },
  {
    "text": "developing developer tools and application services are some is one thing that is really not part of",
    "start": "906250",
    "end": "913120"
  },
  {
    "text": "kubernetes kubernetes is not tested with middleware databases of any performance",
    "start": "913120",
    "end": "919510"
  },
  {
    "text": "monitoring of solution tools additionally if you want to want to add a specific editor or an IDE or a testing",
    "start": "919510",
    "end": "929050"
  },
  {
    "text": "framework these are all not part of kubernetes in check",
    "start": "929050",
    "end": "934740"
  },
  {
    "text": "even develop a DevOps workflows for example see ICD workflows and how to",
    "start": "934740",
    "end": "942280"
  },
  {
    "text": "build containers and update our and update them that's not part of kubernetes and this is something which",
    "start": "942280",
    "end": "949720"
  },
  {
    "text": "both developers and the operation folks see the other technologies like the",
    "start": "949720",
    "end": "958750"
  },
  {
    "text": "operating system the storage and the networking are all necessary for to deploy kubernetes in production but",
    "start": "958750",
    "end": "965620"
  },
  {
    "text": "these are not bundled in and these are a",
    "start": "965620",
    "end": "970900"
  },
  {
    "text": "big this is a big concern for enterprise customers so what you see in with what",
    "start": "970900",
    "end": "976930"
  },
  {
    "text": "you get with OpenShift is and end-to-end solution which is an out-of-the-box solution which ties all the needs and",
    "start": "976930",
    "end": "984400"
  },
  {
    "text": "requirements of the enterprise and fills in the needs which are not currently",
    "start": "984400",
    "end": "990400"
  },
  {
    "text": "available in kubernetes so that way you have a nice term solution for",
    "start": "990400",
    "end": "996130"
  },
  {
    "text": "improvement of the applications so not",
    "start": "996130",
    "end": "1003090"
  },
  {
    "text": "just open shift on AWS we've had customers who are taking full advantage of openshift",
    "start": "1003090",
    "end": "1008790"
  },
  {
    "text": "but also are consuming native AWS services as part of modernizing their",
    "start": "1008790",
    "end": "1014700"
  },
  {
    "text": "application workloads typically we would see a customer take a on-premises",
    "start": "1014700",
    "end": "1019800"
  },
  {
    "text": "application move that as a container workload into openshift on AWS and then go through the process",
    "start": "1019800",
    "end": "1026490"
  },
  {
    "text": "of exchanging out database caching layers and various other services in",
    "start": "1026490",
    "end": "1034530"
  },
  {
    "text": "favour of a native AWS service that is managed for them or it is able to scale",
    "start": "1034530",
    "end": "1042689"
  },
  {
    "text": "or it has a greater resilience platform and to assist customers in this AWS and",
    "start": "1042690",
    "end": "1049800"
  },
  {
    "text": "red hats have teamed up to build out the AWS service broker as well as the AWS",
    "start": "1049800",
    "end": "1055560"
  },
  {
    "text": "service operator one being a open service broker API implementation and",
    "start": "1055560",
    "end": "1062070"
  },
  {
    "text": "the other being a operator framework which directly interact with",
    "start": "1062070",
    "end": "1067190"
  },
  {
    "text": "OpenShift allowing dev and operations teams to provision and expose native AWS",
    "start": "1067190",
    "end": "1074540"
  },
  {
    "text": "services to their applications without leaving the familiar interface and process of open shift in itself and",
    "start": "1074540",
    "end": "1081950"
  },
  {
    "text": "these are both open source projects that customers can not only consume but also",
    "start": "1081950",
    "end": "1087350"
  },
  {
    "text": "contribute with what I think let's bring URI into the picture URI is a DevOps",
    "start": "1087350",
    "end": "1095020"
  },
  {
    "text": "engineer at scholastic and URI run us through the journey that scholastic has",
    "start": "1095020",
    "end": "1101330"
  },
  {
    "text": "taken over the last few years in terms of moving from a largely traditional monolithic footprint to a modernized",
    "start": "1101330",
    "end": "1109040"
  },
  {
    "text": "container platform using OpenShift an AWS sure thanks Ryan so today I'll be",
    "start": "1109040",
    "end": "1116300"
  },
  {
    "text": "talking about a scholastics journey with openshift on AWS",
    "start": "1116300",
    "end": "1122170"
  },
  {
    "text": "you you okay so a little bit about scholastic",
    "start": "1122559",
    "end": "1128740"
  },
  {
    "start": "1125000",
    "end": "1155000"
  },
  {
    "text": "before we get started some of you may know scholastics one of the largest children's book publisher companies we",
    "start": "1128740",
    "end": "1135310"
  },
  {
    "text": "actually have offices and presence all over the world but are mainly based in New York City so although it may be",
    "start": "1135310",
    "end": "1141400"
  },
  {
    "text": "surprising but scholastic actually has a pretty large tech division and we do try to work with the latest technologies we",
    "start": "1141400",
    "end": "1148360"
  },
  {
    "text": "actually began our AWS journey back in 2012 and there are now about 95% on",
    "start": "1148360",
    "end": "1154540"
  },
  {
    "text": "cloud so let's uh let's talk about some of the challenges we were facing prior to going to open shift well back in 2016",
    "start": "1154540",
    "end": "1163210"
  },
  {
    "start": "1155000",
    "end": "1178000"
  },
  {
    "text": "we actually had hundreds of monolithic applications and infrastructure set ups by now most of us know the negatives of",
    "start": "1163210",
    "end": "1170590"
  },
  {
    "text": "monolithic architectures from like the application standpoint but there is actually a lot of overhead from the",
    "start": "1170590",
    "end": "1175900"
  },
  {
    "text": "intra side of it as well so for us the infrastructure was",
    "start": "1175900",
    "end": "1182040"
  },
  {
    "start": "1178000",
    "end": "1219000"
  },
  {
    "text": "actually hard to manage and handle we didn't really have much consistency so",
    "start": "1182040",
    "end": "1188700"
  },
  {
    "text": "some teams are actually deploying it using automated tools such as chef or you're just using batch scripts while",
    "start": "1188700",
    "end": "1194790"
  },
  {
    "text": "others are just deploying servers and updating them manually they were doing everything manually also we just didn't",
    "start": "1194790",
    "end": "1201870"
  },
  {
    "text": "have consistencies across environments so some teams had environments like dev",
    "start": "1201870",
    "end": "1207570"
  },
  {
    "text": "one love to QA 1 QA 2 and so on while others just had the basic dev kit per",
    "start": "1207570",
    "end": "1213900"
  },
  {
    "text": "prod whatnot this also we had a similar issue with monitoring so teams were",
    "start": "1213900",
    "end": "1222210"
  },
  {
    "start": "1219000",
    "end": "1235000"
  },
  {
    "text": "using their own tools each it so some tools some teams were using tools such as sensor for alerting while others were",
    "start": "1222210",
    "end": "1228570"
  },
  {
    "text": "using new relic for application metrics and some were just using no tools at all",
    "start": "1228570",
    "end": "1235640"
  },
  {
    "start": "1235000",
    "end": "1285000"
  },
  {
    "text": "and finally one of the biggest issues we had to tackle was a application",
    "start": "1235640",
    "end": "1244110"
  },
  {
    "text": "tend to go live so basically back that applications took about two to three",
    "start": "1244110",
    "end": "1249810"
  },
  {
    "text": "months depending on the size of the app to actually go into production this means before the applique the time it",
    "start": "1249810",
    "end": "1256050"
  },
  {
    "text": "took for applications to finally start serving traffic both internally and externally the deployments were taking",
    "start": "1256050",
    "end": "1264060"
  },
  {
    "text": "long because each environment had to be built out prior to the deployment and then the operations team would do the",
    "start": "1264060",
    "end": "1269610"
  },
  {
    "text": "deployments for us operational readiness which meant going through a review of",
    "start": "1269610",
    "end": "1275220"
  },
  {
    "text": "application architecture with the operations team just making sure all the monitoring was in place took about two",
    "start": "1275220",
    "end": "1281970"
  },
  {
    "text": "weeks and this was kind of due to the back and forth they had to do so what",
    "start": "1281970",
    "end": "1288810"
  },
  {
    "start": "1285000",
    "end": "1349000"
  },
  {
    "text": "are some of the goals well of course we wanted to move away from the monolithic architecture we wanted to kind of",
    "start": "1288810",
    "end": "1294210"
  },
  {
    "text": "optimize our infrastructure by densely packing these compute nodes and they're just scaling as we needed of course main",
    "start": "1294210",
    "end": "1304890"
  },
  {
    "text": "goal was also to minimize our application time to market just and just simplifying the whole process",
    "start": "1304890",
    "end": "1312390"
  },
  {
    "text": "and also we wanted to actually create a consistency ICD pipeline process so",
    "start": "1312390",
    "end": "1320540"
  },
  {
    "text": "prior to this a few teams were using automated CI processes with Jenkins for",
    "start": "1320540",
    "end": "1326190"
  },
  {
    "text": "example to build and push their applications and code but a lot of it was also done manually on top of that we",
    "start": "1326190",
    "end": "1333750"
  },
  {
    "text": "actually had no insight into unit code test coverage so our idea was basically",
    "start": "1333750",
    "end": "1338790"
  },
  {
    "text": "to use these pipelines and force developers to build their code at that",
    "start": "1338790",
    "end": "1344280"
  },
  {
    "text": "pass through these proper unit tests before they could deploy their applications",
    "start": "1344280",
    "end": "1350809"
  },
  {
    "text": "and we just wanted a simple out the box solution to deploy a simple container",
    "start": "1350919",
    "end": "1357350"
  },
  {
    "text": "solution what's the friendly user interface pretty much so why discuss to",
    "start": "1357350",
    "end": "1363860"
  },
  {
    "start": "1360000",
    "end": "1442000"
  },
  {
    "text": "go with Red Hat OpenShift well first let's talk about the benefits we saw in",
    "start": "1363860",
    "end": "1368960"
  },
  {
    "text": "OpenShift itself back then vanilla kubernetes was kind of in its infancy",
    "start": "1368960",
    "end": "1374720"
  },
  {
    "text": "and it came with a lot of overhead bits and pieces it was difficult to manage",
    "start": "1374720",
    "end": "1380030"
  },
  {
    "text": "and install so also compared to the OpenShift the UI just wasn't as friendly",
    "start": "1380030",
    "end": "1385910"
  },
  {
    "text": "to beginners so say the devs we did POC tectonic and it was impressive with its",
    "start": "1385910",
    "end": "1393200"
  },
  {
    "text": "one-click install option but by that point we were kind of ready doing development work on open ships and we",
    "start": "1393200",
    "end": "1399380"
  },
  {
    "text": "had settled with it we saw that open shift offered s2i which we thought was",
    "start": "1399380",
    "end": "1406010"
  },
  {
    "text": "going to be very helpful in just standardizing our images for the CI CD pipelines also routes were interesting I",
    "start": "1406010",
    "end": "1413960"
  },
  {
    "text": "remember back then the ingress object hadn't been introduced to vanilla kubernetes yet so basically open shift was handling all",
    "start": "1413960",
    "end": "1421910"
  },
  {
    "text": "that for us which was very attractive and of course we also found templates to be useful again there was no native",
    "start": "1421910",
    "end": "1429770"
  },
  {
    "text": "kubernetes native solution I know of course now we have helm and customized and whatnot but back then we ended up",
    "start": "1429770",
    "end": "1435140"
  },
  {
    "text": "going with templates to build out our CI CD pipelines and of course the open sure",
    "start": "1435140",
    "end": "1440720"
  },
  {
    "text": "had a pretty friendly user interface now why did we go with the supported model",
    "start": "1440720",
    "end": "1446750"
  },
  {
    "start": "1442000",
    "end": "1500000"
  },
  {
    "text": "well we already rel customers back then so going with a trusted company made an",
    "start": "1446750",
    "end": "1452270"
  },
  {
    "text": "easy decision for us now we actually did try to spin up openshift origin clusters",
    "start": "1452270",
    "end": "1457760"
  },
  {
    "text": "and I remember them breaking due to some internal registry certificate issues and",
    "start": "1457760",
    "end": "1463810"
  },
  {
    "text": "honestly back then we just didn't have enough experience to fix it so we went",
    "start": "1463810",
    "end": "1468980"
  },
  {
    "text": "with the Red Hat supported model of course deploying everything on AWS was",
    "start": "1468980",
    "end": "1474320"
  },
  {
    "text": "also an obvious choice for us we had been working with Amazon since our cloud migration journey began back in 2012 so",
    "start": "1474320",
    "end": "1482300"
  },
  {
    "text": "by this time we had around 85 percent of our infrastructure already on it",
    "start": "1482300",
    "end": "1487450"
  },
  {
    "text": "biggest benefit is we were able to utilize our existing public and private",
    "start": "1487450",
    "end": "1492950"
  },
  {
    "text": "domains in route 53 to create the routing for OpenShift and of course using wildcards made this",
    "start": "1492950",
    "end": "1498710"
  },
  {
    "text": "very simple for us so let's talk about the solution",
    "start": "1498710",
    "end": "1505350"
  },
  {
    "start": "1500000",
    "end": "1621000"
  },
  {
    "text": "implementation here so for the infrastructure we actually worked with",
    "start": "1505350",
    "end": "1510360"
  },
  {
    "text": "the Red Hat engineer to get our first cluster setup then we built out the rest ourselves Red had pretty much provided",
    "start": "1510360",
    "end": "1518010"
  },
  {
    "text": "all the necessary playbooks for installation so it wasn't too hard to get everything running up and running",
    "start": "1518010",
    "end": "1523230"
  },
  {
    "text": "initially we did use the end ansible contributes which are now of course",
    "start": "1523230",
    "end": "1530330"
  },
  {
    "text": "deprecated but back then they actually installed all the infrastructure and OpenShift using a combination of cloud",
    "start": "1530330",
    "end": "1536880"
  },
  {
    "text": "formation and Python the one negative is it did limit our ability to customize",
    "start": "1536880",
    "end": "1542780"
  },
  {
    "text": "since we did not use the recommended uh OpenShift like ansible host installation",
    "start": "1542780",
    "end": "1549419"
  },
  {
    "text": "process but we were able to work around that just by running the ad hoc Red Hat",
    "start": "1549419",
    "end": "1555690"
  },
  {
    "text": "playbooks as well as just writing our own playbooks to do things such as fix like the update log rotate or set up",
    "start": "1555690",
    "end": "1563340"
  },
  {
    "text": "LDAP just to name a few we also did run into issues upgrading",
    "start": "1563340",
    "end": "1570510"
  },
  {
    "text": "clusters but it was a minor issue really so since these ansible contribs had been",
    "start": "1570510",
    "end": "1576299"
  },
  {
    "text": "deprecated we kind of to reverse engineer them a little bit and just update a few packages for the newer",
    "start": "1576299",
    "end": "1583020"
  },
  {
    "text": "version of openshift and then we were able to go get get the new clusters up and running the real issue came up is",
    "start": "1583020",
    "end": "1590610"
  },
  {
    "text": "when we were migrating and we did not we actually did not have a proper dns strategy set up and I'll get it",
    "start": "1590610",
    "end": "1597630"
  },
  {
    "text": "going into that in just a little bit so right now we're actually in the process of migrating to open shift for and AWS",
    "start": "1597630",
    "end": "1604830"
  },
  {
    "text": "and uh so far it the new like operator based installation seems very uh I don't",
    "start": "1604830",
    "end": "1612630"
  },
  {
    "text": "know refined and useful I was we got everything up and running and so far were impressed so here's a",
    "start": "1612630",
    "end": "1623389"
  },
  {
    "start": "1621000",
    "end": "1699000"
  },
  {
    "text": "gram of our basic architecture on AWS so we actually started off with recommended",
    "start": "1623389",
    "end": "1629899"
  },
  {
    "text": "three master three info infra three app node setup and kind of expanded from",
    "start": "1629899",
    "end": "1635929"
  },
  {
    "text": "there for the master in infra gnomes we used the sizes that red had recommended",
    "start": "1635929",
    "end": "1641299"
  },
  {
    "text": "which were M for extra large nodes now for the app nodes we actually wanted to",
    "start": "1641299",
    "end": "1647690"
  },
  {
    "text": "make them memory specific to fit as many pods as possible so about 95 or so",
    "start": "1647690",
    "end": "1654469"
  },
  {
    "text": "percent of our infrastructure met micro services were more memory intensive than",
    "start": "1654469",
    "end": "1659690"
  },
  {
    "text": "CPU so we ended up going with our for to extra large nodes for the applications",
    "start": "1659690",
    "end": "1667140"
  },
  {
    "text": "now while our non-product custer's were fine using the recommended 3/3 master 3",
    "start": "1667140",
    "end": "1673900"
  },
  {
    "text": "infra note setup for production we actually scaled up to 5 infra nodes just",
    "start": "1673900",
    "end": "1679150"
  },
  {
    "text": "to have some resiliency for the routers this was something we did as a precaution since we did have a few CPU",
    "start": "1679150",
    "end": "1686470"
  },
  {
    "text": "intensive pods like Prometheus and Gore fana running on the infra nodes and we did see large CPU spikes for the",
    "start": "1686470",
    "end": "1693820"
  },
  {
    "text": "application nodes we were able to scale horizontally as our usage went up so no issues there now let's talk about our",
    "start": "1693820",
    "end": "1703410"
  },
  {
    "start": "1699000",
    "end": "1836000"
  },
  {
    "text": "implementation of CI CD pipelines the biggest challenge here was really just",
    "start": "1703410",
    "end": "1709150"
  },
  {
    "text": "getting developers on board and we ended up going through three versions of CI CD pipelines our first version was kind of",
    "start": "1709150",
    "end": "1717040"
  },
  {
    "text": "just multiple Jenkins jobs that pretty much wrapped the basic OC commands for",
    "start": "1717040",
    "end": "1722830"
  },
  {
    "text": "developers to just build and deploy their applications we actually did not give them any access to the OpenShift",
    "start": "1722830",
    "end": "1729910"
  },
  {
    "text": "console UI back then so they just had to run all their commands through Jenkins which of course you can imagine how",
    "start": "1729910",
    "end": "1735910"
  },
  {
    "text": "difficult it is for developers to kind of figure out memorize all these jobs and learn it so the next version we",
    "start": "1735910",
    "end": "1743020"
  },
  {
    "text": "combined some of these jobs to make deployments a little bit more streamlined we also gave developers at",
    "start": "1743020",
    "end": "1748780"
  },
  {
    "text": "View access in the openshift console so they would be able to view their application logs and metrics but they",
    "start": "1748780",
    "end": "1755470"
  },
  {
    "text": "still could not deploy from the UI he still had to remember a few Jenkins jobs",
    "start": "1755470",
    "end": "1761200"
  },
  {
    "text": "to run in the correct order and whatnot so training was still kind of an issue for us finally in the third version of",
    "start": "1761200",
    "end": "1768640"
  },
  {
    "text": "our pipelines we actually went with the built-in openshift pipelines which were integrated with jenkins and we used the",
    "start": "1768640",
    "end": "1775750"
  },
  {
    "text": "templates to do the deployments so pretty much it combined previous jobs",
    "start": "1775750",
    "end": "1781930"
  },
  {
    "text": "and just to two pipelines first there was a single pipeline that devs ran only",
    "start": "1781930",
    "end": "1787210"
  },
  {
    "text": "once per environment so once per day once per QA this pipeline would just",
    "start": "1787210",
    "end": "1792250"
  },
  {
    "text": "build out all the resources such as the deployment config the route and the service and this was only ran once the",
    "start": "1792250",
    "end": "1799690"
  },
  {
    "text": "second pipeline was a Trucy icd pipeline so first around the image builds and that",
    "start": "1799690",
    "end": "1805960"
  },
  {
    "text": "hooked unit test results into sonar cube basically if their applications failed",
    "start": "1805960",
    "end": "1811450"
  },
  {
    "text": "these unit tests we would see the results in solar cube and they would not be allowed to publish this image and",
    "start": "1811450",
    "end": "1817570"
  },
  {
    "text": "move forward until they fixed it once it was once they were able to build their image they were then able to deploy to",
    "start": "1817570",
    "end": "1824919"
  },
  {
    "text": "various environments on top of that we actually were also mounting a new relic",
    "start": "1824919",
    "end": "1830440"
  },
  {
    "text": "jar into each pod so now devs got ad metrics out the box pretty much with each deployment so",
    "start": "1830440",
    "end": "1839380"
  },
  {
    "start": "1836000",
    "end": "1932000"
  },
  {
    "text": "let's talk about some of the lessons learned there's quite a few but I'll go into the major ones so one issue we ran",
    "start": "1839380",
    "end": "1846580"
  },
  {
    "text": "into is actually having very large images even though we were using s2i we're still packing too much into them",
    "start": "1846580",
    "end": "1853860"
  },
  {
    "text": "one solution for this is of course to go with alpine linux and it's something",
    "start": "1853860",
    "end": "1859480"
  },
  {
    "text": "we're still currently working on honestly I do highly recommend keeping the images just as basic and minimal as",
    "start": "1859480",
    "end": "1866919"
  },
  {
    "text": "possible of course so for example our first back-to-school season back in",
    "start": "1866919",
    "end": "1873419"
  },
  {
    "text": "August 2017 I think we had a lot of issues with some PHP applications this",
    "start": "1873419",
    "end": "1879970"
  },
  {
    "text": "was due to the pods being killed and just taking forever to restart just causing this loop feedback loop so back",
    "start": "1879970",
    "end": "1887860"
  },
  {
    "text": "then we actually did not know any better and we tried to stuff these old monolithic apps into a container this",
    "start": "1887860",
    "end": "1894070"
  },
  {
    "text": "meant that these containers were just packed with various batch scripts that were like checking out git repos and running a bunch of commands just taking",
    "start": "1894070",
    "end": "1900309"
  },
  {
    "text": "very long to get the application up and running in retrospect it it may sound dumb but it's just",
    "start": "1900309",
    "end": "1906580"
  },
  {
    "text": "something we kind of learned with experience which brings me to another point make sure to add limits to your pods so",
    "start": "1906580",
    "end": "1914289"
  },
  {
    "text": "they don't go rogue and just take over the nodes during this first outage with the PHP containers they actually brought",
    "start": "1914289",
    "end": "1920230"
  },
  {
    "text": "down the whole cluster but we quickly added our limits to them so then we were",
    "start": "1920230",
    "end": "1926470"
  },
  {
    "text": "able to limit the outage to only these containers while the rest of the cluster was up and running fine",
    "start": "1926470",
    "end": "1933390"
  },
  {
    "start": "1932000",
    "end": "2033000"
  },
  {
    "text": "now I'll talk about the other issue we had with the migration so looking back",
    "start": "1935200",
    "end": "1941930"
  },
  {
    "text": "at it I do wish we had thought of a better upgrade and migration strategy in terms of DNS before we built out our",
    "start": "1941930",
    "end": "1948890"
  },
  {
    "text": "first set of clusters so we did have wildcard DNS entries further all the routes in OpenShift and this wildcard",
    "start": "1948890",
    "end": "1955820"
  },
  {
    "text": "basically included the cluster name now as you can imagine when we built our new clusters that means all the routes had",
    "start": "1955820",
    "end": "1963170"
  },
  {
    "text": "to be changed this is a lot to ask developers to do to update their API",
    "start": "1963170",
    "end": "1968270"
  },
  {
    "text": "gateways to upgrade all their integrations with the new URLs so however we were able to solve this",
    "start": "1968270",
    "end": "1975650"
  },
  {
    "text": "basically by creating a more generic wildcard like star apps",
    "start": "1975650",
    "end": "1981260"
  },
  {
    "text": "that's classic comm for example and then we were able to delegate the environments in route 53 by pretty much",
    "start": "1981260",
    "end": "1987500"
  },
  {
    "text": "pointing them to the matching elby's of each cluster this made the next",
    "start": "1987500",
    "end": "1992720"
  },
  {
    "text": "migration easier since now we could pretty much run the same container in two clusters and just use the route 53",
    "start": "1992720",
    "end": "1999350"
  },
  {
    "text": "to point to widow to the correct ELB and finally for lessons learned I'd say is",
    "start": "1999350",
    "end": "2006070"
  },
  {
    "text": "just should be open to using new tools like before Prometheus was integrated",
    "start": "2006070",
    "end": "2011980"
  },
  {
    "text": "into OpenShift we actually use the custom Prometheus and graph on a solution for metrics and it really worked great for us we also",
    "start": "2011980",
    "end": "2019780"
  },
  {
    "text": "ended up building up our own flow and D forwarder to filter and send logs to Summa logic the one that came out the",
    "start": "2019780",
    "end": "2026470"
  },
  {
    "text": "box from Red Hat was fine it's just we need a little bit more customization and had to install some custom gems for this",
    "start": "2026470",
    "end": "2034320"
  },
  {
    "start": "2033000",
    "end": "2105000"
  },
  {
    "text": "so what are the results of us going with OpenShift on AWS well one main thing is we created a",
    "start": "2035130",
    "end": "2042550"
  },
  {
    "text": "standard IC ICD pipeline all for all openshift deployments and dismay",
    "start": "2042550",
    "end": "2047740"
  },
  {
    "text": "training developer is much easier so whether it was spring boot Python or",
    "start": "2047740",
    "end": "2054820"
  },
  {
    "text": "nodejs the pipeline and process was almost identical so the DOS just needed",
    "start": "2054820",
    "end": "2060100"
  },
  {
    "text": "to try it out a few times with our guidance of course and then they were able to go out and deploy on their own",
    "start": "2060100",
    "end": "2066700"
  },
  {
    "text": "the appointments themselves came down to just a few minutes pretty much these cold commits webhooks triggered the",
    "start": "2066700",
    "end": "2072878"
  },
  {
    "text": "pipelines which then built in new images ran the unit tests and deploy to the dev",
    "start": "2072879",
    "end": "2078010"
  },
  {
    "text": "environment once functionality was verified developers could then deploy to",
    "start": "2078010",
    "end": "2083020"
  },
  {
    "text": "QA earth and so on this also changed how operations worked for us so since our",
    "start": "2083020",
    "end": "2090490"
  },
  {
    "text": "open shift infrastructure was sanctioned by the operations team when the developers were ready to go to",
    "start": "2090490",
    "end": "2096099"
  },
  {
    "text": "production they just needed to hop on a call but the ops team to verify all the other components of their architecture",
    "start": "2096099",
    "end": "2102010"
  },
  {
    "text": "and then they were ready to deploy to prod",
    "start": "2102010",
    "end": "2106800"
  },
  {
    "start": "2105000",
    "end": "2139000"
  },
  {
    "text": "so here's an example of what the developers view today is like so as you",
    "start": "2107150",
    "end": "2112910"
  },
  {
    "text": "can see they have a main CIC name namespace and from here they're able to deploy into any other environment",
    "start": "2112910",
    "end": "2119470"
  },
  {
    "text": "developers right now do all their own deployments and testing and just need approve change request tickets to get a",
    "start": "2119470",
    "end": "2126559"
  },
  {
    "text": "token to deploy to production this allows our team to have time and cycles",
    "start": "2126559",
    "end": "2132140"
  },
  {
    "text": "to work on other new things or updates instead of supporting the devs like we're trying to get open ship for up",
    "start": "2132140",
    "end": "2137990"
  },
  {
    "text": "right now now one of the biggest benefits we got",
    "start": "2137990",
    "end": "2145530"
  },
  {
    "start": "2139000",
    "end": "2263000"
  },
  {
    "text": "with openshift was of course resiliency so just last Labor Day when AWS had an",
    "start": "2145530",
    "end": "2151260"
  },
  {
    "text": "outage in one of their data centers we had a production node go down during our peak back-to-school time this means like",
    "start": "2151260",
    "end": "2158700"
  },
  {
    "text": "the time when most kids are actually logging on to our services luckily for us we had no issues on the OpenShift",
    "start": "2158700",
    "end": "2165089"
  },
  {
    "text": "side the pods that were on that note that went down pretty much just migrated to another node and there was just no",
    "start": "2165089",
    "end": "2172440"
  },
  {
    "text": "outages for us at all another benefit that we kind of took for granted was",
    "start": "2172440",
    "end": "2178800"
  },
  {
    "text": "that OpenShift allowed us to natively plug into our LDAP so we created groups",
    "start": "2178800",
    "end": "2184080"
  },
  {
    "text": "in Active Directory then simply mapped them to the respective team namespaces and open",
    "start": "2184080",
    "end": "2189330"
  },
  {
    "text": "shift each team managed their own groups and access to the namespaces so that meant just less work for us of course",
    "start": "2189330",
    "end": "2198599"
  },
  {
    "text": "the biggest result of going with open shift is just a reduced application time to mark it it's reduced now down to two",
    "start": "2198599",
    "end": "2206190"
  },
  {
    "text": "weeks so the Train developers now don't need to worry about infrastructure anymore for their micro services they",
    "start": "2206190",
    "end": "2212940"
  },
  {
    "text": "can just go directly into open shift and start deploying and testing them out even without our involvement right now",
    "start": "2212940",
    "end": "2220460"
  },
  {
    "text": "we have over 200 containers running an open shift in AWS and that number is",
    "start": "2220460",
    "end": "2225780"
  },
  {
    "text": "growing quickly so we started off with like various old micro services that were just broken off a monolithic apps",
    "start": "2225780",
    "end": "2232530"
  },
  {
    "text": "and then migrated into openshift but today we're actually trying to develop small and nimble micro services",
    "start": "2232530",
    "end": "2240109"
  },
  {
    "text": "the majority of them are just spring boot API backends for the user facing apps while the others are either like",
    "start": "2240109",
    "end": "2247380"
  },
  {
    "text": "some front-end nodejs nodejs apps or just some Python games such as our our Oak Island we even have some",
    "start": "2247380",
    "end": "2254820"
  },
  {
    "text": "applications that consist of up to 15 micro services and we're definitely just trying to embrace the micro services",
    "start": "2254820",
    "end": "2261330"
  },
  {
    "text": "model all the way now",
    "start": "2261330",
    "end": "2264710"
  },
  {
    "start": "2263000",
    "end": "2348000"
  },
  {
    "text": "what are some of the next steps for us well of course we're looking forward to upgrading to openshift 4 we see it",
    "start": "2266520",
    "end": "2272490"
  },
  {
    "text": "brings up a lot of new features and one interesting thing is like that tectonic had back then that I see Red Hat",
    "start": "2272490",
    "end": "2278130"
  },
  {
    "text": "incorporated now is the being able to upgrade the kubernetes in the cluster on the go I think this is huge and it",
    "start": "2278130",
    "end": "2285330"
  },
  {
    "text": "should definitely save us a lot of time in terms of just upgrading clusters and not having to rebuild new clusters also",
    "start": "2285330",
    "end": "2293910"
  },
  {
    "text": "during our back-to-school season actually during both the last two back-to-school seasons we did run two",
    "start": "2293910",
    "end": "2299610"
  },
  {
    "text": "production cluster side-by-side and week and as I mentioned we could manage the traffic tore out 53 in the al B's but",
    "start": "2299610",
    "end": "2306780"
  },
  {
    "text": "now we're going to look into doing that permanently or at least more as needed based on each application we're also",
    "start": "2306780",
    "end": "2314430"
  },
  {
    "text": "excited to really try out new service mesh tools like sto and which is now",
    "start": "2314430",
    "end": "2319950"
  },
  {
    "text": "integrate built into openshift so I think that's pretty cool and uh lastly of course the open source community",
    "start": "2319950",
    "end": "2326720"
  },
  {
    "text": "constantly develops new and cool tools and we're just going to continue to experiment and POC them and if you guys",
    "start": "2326720",
    "end": "2335610"
  },
  {
    "text": "want to learn more about this just check out these links right here a little bit more about open shift on AWS and if you",
    "start": "2335610",
    "end": "2343230"
  },
  {
    "text": "have any questions please feel free to ask now thank you",
    "start": "2343230",
    "end": "2349119"
  },
  {
    "start": "2348000",
    "end": "2726000"
  },
  {
    "text": "you and Dimitri thank you very much for that you are able to pose questions through",
    "start": "2349119",
    "end": "2356840"
  },
  {
    "text": "your webinar control panel you will see a questions pane that you can expand and",
    "start": "2356840",
    "end": "2362230"
  },
  {
    "text": "we will try and get to as many of these as we are able to if we do run out of",
    "start": "2362230",
    "end": "2371930"
  },
  {
    "text": "time what we will do is try and collect these questions and address them in an email coming out a little bit later on",
    "start": "2371930",
    "end": "2378460"
  },
  {
    "text": "what so a couple of questions have come in regarding provisioning OpenShift on",
    "start": "2378460",
    "end": "2386030"
  },
  {
    "text": "AWS one question came in how can i deploy a small instance of OpenShift on",
    "start": "2386030",
    "end": "2393500"
  },
  {
    "text": "AWS for testing and validation before going into production there are a couple",
    "start": "2393500",
    "end": "2399860"
  },
  {
    "text": "of things that are available here within OpenShift 3x the slightly older product",
    "start": "2399860",
    "end": "2408800"
  },
  {
    "text": "family if I was simply a developer wanting to explore OpenShift on a",
    "start": "2408800",
    "end": "2414860"
  },
  {
    "text": "notebook or something I would simply go and take the open shaft client tools",
    "start": "2414860",
    "end": "2419900"
  },
  {
    "text": "install them I would run a very simple OC cluster app command and that would",
    "start": "2419900",
    "end": "2425450"
  },
  {
    "text": "give me a single VM or a single ec2",
    "start": "2425450",
    "end": "2430820"
  },
  {
    "text": "instance that I could explore the product with moving to the newer",
    "start": "2430820",
    "end": "2436310"
  },
  {
    "text": "OpenShift version for Red Hat have changed the installation process to a",
    "start": "2436310",
    "end": "2441380"
  },
  {
    "text": "operator based install process the new installer allows you to basically take a",
    "start": "2441380",
    "end": "2449120"
  },
  {
    "text": "Jason configuration file and go and add into that config file the size and scale",
    "start": "2449120",
    "end": "2456260"
  },
  {
    "text": "of the deployment whether you want the Installer to provision out everything on AWS such as spin up the ec2 instances",
    "start": "2456260",
    "end": "2463640"
  },
  {
    "text": "for you or whether you have existing ec2 instances and you simply want the",
    "start": "2463640",
    "end": "2468770"
  },
  {
    "text": "Installer to add openshift on top of existing underlying infrastructure but I",
    "start": "2468770",
    "end": "2474710"
  },
  {
    "text": "would say the new openshift for installer is a fantastic way to just",
    "start": "2474710",
    "end": "2479750"
  },
  {
    "text": "need to reconfigure that configuration file for a smaller deployment the default does cater to a highly",
    "start": "2479750",
    "end": "2487500"
  },
  {
    "text": "resilient sort of deployment that enterprises would use for default",
    "start": "2487500",
    "end": "2492720"
  },
  {
    "text": "installation one of the links that Yuri pointed out during the presentation also",
    "start": "2492720",
    "end": "2498300"
  },
  {
    "text": "draws attention to the AWS OpenShift QuickStart this is a reference",
    "start": "2498300",
    "end": "2505560"
  },
  {
    "text": "architecture for deploying openshift on AWS it is jointly maintained by Red Hat",
    "start": "2505560",
    "end": "2511500"
  },
  {
    "text": "and AWS and as we learn things from the market and from our customers we",
    "start": "2511500",
    "end": "2518760"
  },
  {
    "text": "continuously upgrade this reference architecture but there is an infrastructure as code template that",
    "start": "2518760",
    "end": "2523950"
  },
  {
    "text": "allows customers to very easily fill in some parameters and build out a",
    "start": "2523950",
    "end": "2529650"
  },
  {
    "text": "production ready OpenShift implementation to put it into perspective that entire process of",
    "start": "2529650",
    "end": "2536310"
  },
  {
    "text": "building out a multi AZ OpenShift",
    "start": "2536310",
    "end": "2541320"
  },
  {
    "text": "implementation will take about two-and-a-half hours after you fill in a couple of parameters and click on go so",
    "start": "2541320",
    "end": "2548040"
  },
  {
    "text": "great way to stand up Apoc environment but also if you're happy with that you can leave that",
    "start": "2548040",
    "end": "2554880"
  },
  {
    "text": "environment in place as your production starting point in terms of operating",
    "start": "2554880",
    "end": "2564690"
  },
  {
    "text": "systems that are supported in OpenShift the OpenShift cluster in itself so the",
    "start": "2564690",
    "end": "2574250"
  },
  {
    "text": "the master in infrastructure nodes those would typically run on Red Hat",
    "start": "2574250",
    "end": "2580710"
  },
  {
    "text": "Enterprise Linux but now moving into OpenShift four we will see core OS being",
    "start": "2580710",
    "end": "2587310"
  },
  {
    "text": "the underpinning operating system technology there the application node so",
    "start": "2587310",
    "end": "2592859"
  },
  {
    "text": "these are the underlying container hosts running on ec2 that are running the",
    "start": "2592859",
    "end": "2598950"
  },
  {
    "text": "customers applications themselves these would typically be Red Hat Enterprise",
    "start": "2598950",
    "end": "2603960"
  },
  {
    "text": "Linux or a core OS in the environment URI one of the things he called out was",
    "start": "2603960",
    "end": "2611220"
  },
  {
    "text": "in order to achieve a lighter weight container image however in their container image descriptions they were",
    "start": "2611220",
    "end": "2617070"
  },
  {
    "text": "using other operating systems not limited to rel or a core OS",
    "start": "2617070",
    "end": "2626069"
  },
  {
    "text": "platform let's see if there are any",
    "start": "2626069",
    "end": "2631470"
  },
  {
    "text": "questions that are directly related to us in terms of versioning whether you're",
    "start": "2631470",
    "end": "2639599"
  },
  {
    "text": "running open shrift on your on-premises infrastructure or whether you're running it on AWS the versioning is identical",
    "start": "2639599",
    "end": "2648119"
  },
  {
    "text": "there are not two different versions of the software you can take the exact same software set and run it on premises and",
    "start": "2648119",
    "end": "2655619"
  },
  {
    "text": "on AWS that being said there are customers out there who have been running openshift",
    "start": "2655619",
    "end": "2662130"
  },
  {
    "text": "in an on-premises context they've they start to their journey there and they are now migrating into AWS these",
    "start": "2662130",
    "end": "2670799"
  },
  {
    "text": "customers may make a decision to use the same version they're using on-premises typically a 3x family 3.9 3.9 3.7 or we",
    "start": "2670799",
    "end": "2681059"
  },
  {
    "text": "would and then later transition both that unprepped emesis and cloud implementation to a newer version such",
    "start": "2681059",
    "end": "2688319"
  },
  {
    "text": "as open shift 4 in other contexts I'm working with customers where they make a",
    "start": "2688319",
    "end": "2693900"
  },
  {
    "text": "decision to deploy open show 4 on to AWS and then at a later stage upgrade the",
    "start": "2693900",
    "end": "2699990"
  },
  {
    "text": "on-premise environment but just to reiterate there is no hard-and-fast",
    "start": "2699990",
    "end": "2705680"
  },
  {
    "text": "required version differentiation whether you are on premises or on AWS what do we",
    "start": "2705680",
    "end": "2717470"
  },
  {
    "text": "did touch on the operating systems",
    "start": "2717470",
    "end": "2722720"
  },
  {
    "start": "2726000",
    "end": "2746000"
  },
  {
    "text": "how to manage databases messaging services while you were doing container",
    "start": "2728740",
    "end": "2734770"
  },
  {
    "text": "applications so there there are a couple of ways to do this and and it's it's",
    "start": "2734770",
    "end": "2741050"
  },
  {
    "text": "driven really by customer need and and customer journey so for customers who",
    "start": "2741050",
    "end": "2747680"
  },
  {
    "start": "2746000",
    "end": "2803000"
  },
  {
    "text": "are running OpenShift on AWS what i typically see is neat new",
    "start": "2747680",
    "end": "2753700"
  },
  {
    "text": "application workloads so these are new micro services coming into the cloud",
    "start": "2753700",
    "end": "2759650"
  },
  {
    "text": "running on top of OpenShift I do see a trend where customers are taking advantage of native AWS services like",
    "start": "2759650",
    "end": "2768080"
  },
  {
    "text": "the RDS relational database service Aurora no sequel implementations like",
    "start": "2768080",
    "end": "2775070"
  },
  {
    "text": "dynamo DB queuing and messaging systems like sqs and SNS how they provision and",
    "start": "2775070",
    "end": "2783230"
  },
  {
    "text": "implement these there's a bit of variety some customers are using separate cloud teams to provision out these resources",
    "start": "2783230",
    "end": "2789950"
  },
  {
    "text": "and make them available for developers and then the developers in their containers are consuming these simply by",
    "start": "2789950",
    "end": "2797420"
  },
  {
    "text": "adding in environment variables within their container definitions some more",
    "start": "2797420",
    "end": "2804260"
  },
  {
    "start": "2803000",
    "end": "2918000"
  },
  {
    "text": "elegant ways of doing this especially if you are trying to enable your development teams and you're trying to",
    "start": "2804260",
    "end": "2810920"
  },
  {
    "text": "stay within a familiar interface things like the AWS service broker things like",
    "start": "2810920",
    "end": "2817100"
  },
  {
    "text": "the AWS service operator providing developers with in openshift the ability",
    "start": "2817100",
    "end": "2823610"
  },
  {
    "text": "to not only provision those AWS resources and they would do this in the",
    "start": "2823610",
    "end": "2829220"
  },
  {
    "text": "same way that you would provision any service in open shop so some very simple open shift commands around a OC create",
    "start": "2829220",
    "end": "2838280"
  },
  {
    "text": "service and then you would define a relational database and feeding the",
    "start": "2838280",
    "end": "2843290"
  },
  {
    "text": "parameters to stand up that database the broker and operator then do out-of-band",
    "start": "2843290",
    "end": "2849320"
  },
  {
    "text": "calls to AWS api calls through cloud formation they provision the resource",
    "start": "2849320",
    "end": "2855560"
  },
  {
    "text": "once the resource is available the broker and Reiter communicate back to OpenShift and",
    "start": "2855560",
    "end": "2862080"
  },
  {
    "text": "all of the building blocks required to consume that resource so the end point",
    "start": "2862080",
    "end": "2867630"
  },
  {
    "text": "for talking to a database the port number usernames passwords any IAM",
    "start": "2867630",
    "end": "2873900"
  },
  {
    "text": "credentials that would be required to consume that resource these are them stored safely inside open shifts",
    "start": "2873900",
    "end": "2881850"
  },
  {
    "text": "credenzie crits manager and what developers can do is simply do a binding",
    "start": "2881850",
    "end": "2887640"
  },
  {
    "text": "process from that secret to their application and that will then map the",
    "start": "2887640",
    "end": "2893190"
  },
  {
    "text": "environment variables in their application container to the values that",
    "start": "2893190",
    "end": "2898440"
  },
  {
    "text": "were provided from these brokers and things and there are several examples of this available out on the internet on",
    "start": "2898440",
    "end": "2905730"
  },
  {
    "text": "YouTube but do go and do a quick search in for and the AWS service broker or the",
    "start": "2905730",
    "end": "2912900"
  },
  {
    "text": "AWS service operator and you'll get to those open source projects that being",
    "start": "2912900",
    "end": "2918990"
  },
  {
    "start": "2918000",
    "end": "3006000"
  },
  {
    "text": "said in a migration context we do see a situation where customers are taking",
    "start": "2918990",
    "end": "2924470"
  },
  {
    "text": "application workloads and very much a lift and shift process where they're taking an existing containerized",
    "start": "2924470",
    "end": "2930720"
  },
  {
    "text": "application running an open shift on premises that workload may have a database attached to it and that",
    "start": "2930720",
    "end": "2938820"
  },
  {
    "text": "database is running as a container workload typically a my sequel running as a container inside open shift and I",
    "start": "2938820",
    "end": "2947010"
  },
  {
    "text": "have seen customers take those containers for the database and the application consuming it lift and shift",
    "start": "2947010",
    "end": "2953100"
  },
  {
    "text": "those into open shift on AWS exactly as they are on-premises and then in a later",
    "start": "2953100",
    "end": "2958140"
  },
  {
    "text": "stage spin up a RDS relational database do a data transfer from the container",
    "start": "2958140",
    "end": "2965790"
  },
  {
    "text": "database to the RDS and then change the environment variable mappings so that",
    "start": "2965790",
    "end": "2972600"
  },
  {
    "text": "the container workload can talk to the new AWS database and then they can remove that containerized version and",
    "start": "2972600",
    "end": "2980370"
  },
  {
    "text": "what this allows them is a managed relational database including something",
    "start": "2980370",
    "end": "2986340"
  },
  {
    "text": "that scales something that has multi a-z awareness and really taking full",
    "start": "2986340",
    "end": "2992460"
  },
  {
    "text": "advantage the native AWS services and we do touch",
    "start": "2992460",
    "end": "2997860"
  },
  {
    "text": "on these sort of concepts in other presentations so if you hunt around you you will find those",
    "start": "2997860",
    "end": "3004750"
  },
  {
    "start": "3006000",
    "end": "3088000"
  },
  {
    "text": "have you considered lambda services in your micro services model this is a",
    "start": "3006400",
    "end": "3012350"
  },
  {
    "text": "question directly to URI I'm gonna quickly touch on it from my side yes I",
    "start": "3012350",
    "end": "3018170"
  },
  {
    "text": "do see customers making a decision on you know whether an application workload is a good container fit for them and in",
    "start": "3018170",
    "end": "3025460"
  },
  {
    "text": "which case it tends to run inside OpenShift other workloads if they are shorter running and then fit inside the",
    "start": "3025460",
    "end": "3033260"
  },
  {
    "text": "concept of other lambda service are taking some workloads and deploying them",
    "start": "3033260",
    "end": "3038270"
  },
  {
    "text": "in lambda I've even seen customers use the built-in openshift Jenkins pipelines",
    "start": "3038270",
    "end": "3043430"
  },
  {
    "text": "to cater for both delivery of those URI just quickly bringing you into the conversation was there any sort of",
    "start": "3043430",
    "end": "3050720"
  },
  {
    "text": "service micro services at play ah yeah",
    "start": "3050720",
    "end": "3055940"
  },
  {
    "text": "absolutely there was so really the biggest advantage of lambda is of course the integrations with AWS so we kind of",
    "start": "3055940",
    "end": "3063920"
  },
  {
    "text": "go based off of that like if you need to be integrated with the API gateways and",
    "start": "3063920",
    "end": "3069410"
  },
  {
    "text": "whatever internal aid AWS tools then yes we do have a lot of applications running",
    "start": "3069410",
    "end": "3075560"
  },
  {
    "text": "on lambda but otherwise if it's just like regular Springwood apps or something we generally tell them to go",
    "start": "3075560",
    "end": "3083359"
  },
  {
    "text": "on open shift so yeah we do use both you're another question that's coming",
    "start": "3083359",
    "end": "3090470"
  },
  {
    "start": "3088000",
    "end": "3147000"
  },
  {
    "text": "your way can you give us a perspective of the number of developers and",
    "start": "3090470",
    "end": "3095510"
  },
  {
    "text": "contrasting that with the number of operators that are required to run the implementation that you have sure so",
    "start": "3095510",
    "end": "3103850"
  },
  {
    "text": "developers we have two main units and openshift business units and then",
    "start": "3103850",
    "end": "3109190"
  },
  {
    "text": "they're split into various teams ah just off the top of my head there's got",
    "start": "3109190",
    "end": "3114770"
  },
  {
    "text": "to be at least I don't know 30 or more but in terms of operators it's just",
    "start": "3114770",
    "end": "3121700"
  },
  {
    "text": "mainly our team so we did try to hand it off to operations but honestly man",
    "start": "3121700",
    "end": "3127450"
  },
  {
    "text": "openshift was kind of huge and we had the expertise on our team so we still kind of managed it while other small",
    "start": "3127450",
    "end": "3134540"
  },
  {
    "text": "things like alerts like application alerts or whatever that goes to the ops teams and then they work with the",
    "start": "3134540",
    "end": "3140180"
  },
  {
    "text": "developers on issues Yuriy it is another",
    "start": "3140180",
    "end": "3149420"
  },
  {
    "start": "3147000",
    "end": "3234000"
  },
  {
    "text": "question here I just wanted it's fairly long-winded so",
    "start": "3149420",
    "end": "3155480"
  },
  {
    "text": "I'm trying to see if I can summarize this could you talk more about the code",
    "start": "3155480",
    "end": "3163070"
  },
  {
    "text": "journey from repository to production development for example did openshift",
    "start": "3163070",
    "end": "3169340"
  },
  {
    "text": "help with canary deployments or code promotion techniques is that something",
    "start": "3169340",
    "end": "3176510"
  },
  {
    "text": "that you could shed some light on Yuri okay sort of so we actually unfortunately haven't gotten to doing",
    "start": "3176510",
    "end": "3184310"
  },
  {
    "text": "canary deployments yet something we've looked into and we're definitely gonna try it out with a steel and stuff in",
    "start": "3184310",
    "end": "3190099"
  },
  {
    "text": "OpenShift four but in terms of the image promotion we were actually building the",
    "start": "3190099",
    "end": "3195290"
  },
  {
    "text": "images internally and openshift in the dev environment and as I mentioned once they passed all the tests and developers",
    "start": "3195290",
    "end": "3202460"
  },
  {
    "text": "are ready to promote them we were then pushing the images to artifactory so it's an external registry pretty much",
    "start": "3202460",
    "end": "3208880"
  },
  {
    "text": "and from there we were able to basically pull that image that was a approved into",
    "start": "3208880",
    "end": "3214700"
  },
  {
    "text": "various environments so QA once QA was good then they could process that image and eventually it could go to prod so we",
    "start": "3214700",
    "end": "3222589"
  },
  {
    "text": "used artifactory we still do use artifact yers or like central image repo to promote images but the devil images",
    "start": "3222589",
    "end": "3230330"
  },
  {
    "text": "are actually built in the openshift internal registry is a very common pattern I'm seeing on",
    "start": "3230330",
    "end": "3237100"
  },
  {
    "start": "3234000",
    "end": "3348000"
  },
  {
    "text": "my side as well where customers are taking advantage of the built-in registry provided by openshift",
    "start": "3237100",
    "end": "3244090"
  },
  {
    "text": "as well as some sort of white listing entity that way they can the developers",
    "start": "3244090",
    "end": "3249640"
  },
  {
    "text": "are able to develop and play an experiment and those very unvalidated",
    "start": "3249640",
    "end": "3256830"
  },
  {
    "text": "workloads go into a cluster implementation of OpenShift and then as they go through unit testing",
    "start": "3256830",
    "end": "3265950"
  },
  {
    "text": "various code analysis static code content scanning container vulnerability",
    "start": "3265950",
    "end": "3272950"
  },
  {
    "text": "scanning the code is then whitelisted and stored in a whitelist of repository",
    "start": "3272950",
    "end": "3279460"
  },
  {
    "text": "if you will typically that's something like an artifact tree and what this means is when a developer starts",
    "start": "3279460",
    "end": "3285340"
  },
  {
    "text": "building a new project they don't have to start from scratch they can go to this white listed artifact relocation",
    "start": "3285340",
    "end": "3291790"
  },
  {
    "text": "and say you know is there something here that has already been partially built out has it been security approved and",
    "start": "3291790",
    "end": "3297610"
  },
  {
    "text": "tested and can I simply consume that and build on top of it or do I need to build",
    "start": "3297610",
    "end": "3302800"
  },
  {
    "text": "something completely from scratch and I can do that in my precursor environment but the use of different repositories",
    "start": "3302800",
    "end": "3309820"
  },
  {
    "text": "and the use of pipelines are essential to this process and this is a growing",
    "start": "3309820",
    "end": "3315880"
  },
  {
    "text": "trend within container and and DevOps practices and an open shift outside does",
    "start": "3315880",
    "end": "3322270"
  },
  {
    "text": "a phenomenal job of assisting here but I do want to call out it's not just open",
    "start": "3322270",
    "end": "3327370"
  },
  {
    "text": "to Prasanna to see a lot of things like artifactory coming into picture the Quai",
    "start": "3327370",
    "end": "3332970"
  },
  {
    "text": "repository that came in from core OS also things like these security and",
    "start": "3332970",
    "end": "3338440"
  },
  {
    "text": "vulnerability tools out there the likes of twist lock as a partner for example doing assisting with vulnerability",
    "start": "3338440",
    "end": "3344800"
  },
  {
    "text": "scanning just touching on there was a question here is this a self managed",
    "start": "3344800",
    "end": "3351210"
  },
  {
    "start": "3348000",
    "end": "3538000"
  },
  {
    "text": "implementation openshift can be deployed on AWS typically as self managed so ec2",
    "start": "3351210",
    "end": "3360400"
  },
  {
    "text": "instances open shift on top of that and customers being able to manage this entirely themselves and and the",
    "start": "3360400",
    "end": "3367030"
  },
  {
    "text": "deployment means there's the couple of options whether you using AWS quickstarts or whether you are using",
    "start": "3367030",
    "end": "3372910"
  },
  {
    "text": "something like the new OpenShift for installer there is a managed version of",
    "start": "3372910",
    "end": "3380700"
  },
  {
    "text": "OpenShift available on AWS it's called open shift dedicated this is not sold through AWS",
    "start": "3380700",
    "end": "3390220"
  },
  {
    "text": "you would basically purchase it through your Red Hat account team it caters for two variants a standard edition and a",
    "start": "3390220",
    "end": "3398110"
  },
  {
    "text": "cloud choice or bring your own cloud concept just to differentiate the",
    "start": "3398110",
    "end": "3403420"
  },
  {
    "text": "standard edition very quickly you sign up for open strip dedicated read how to",
    "start": "3403420",
    "end": "3408790"
  },
  {
    "text": "provision the OpenShift implementation into an AWS account that they control and the customer simply consumes that",
    "start": "3408790",
    "end": "3416440"
  },
  {
    "text": "implementation by getting access to the API endpoint this is completely managed",
    "start": "3416440",
    "end": "3421540"
  },
  {
    "text": "by the Red Hat esre team so they do the installation they monitor health they do any replacement of underlying things",
    "start": "3421540",
    "end": "3427630"
  },
  {
    "text": "they'll assist in scaling the solution the cloud choice or bring your own cloud",
    "start": "3427630",
    "end": "3432910"
  },
  {
    "text": "offering customer gets the same management from Red Hat the only difference is the customer brings their",
    "start": "3432910",
    "end": "3440050"
  },
  {
    "text": "own AWS account and the Red Hat SRE team deploy OpenShift into the customers",
    "start": "3440050",
    "end": "3445420"
  },
  {
    "text": "account and what this means is that an AWS customer now has the ability to take",
    "start": "3445420",
    "end": "3450460"
  },
  {
    "text": "advantage of consolidated billing they can you bring reserved instances into",
    "start": "3450460",
    "end": "3456070"
  },
  {
    "text": "that picture to offset some of the infrastructure costs they'll have visibility into the account from a",
    "start": "3456070",
    "end": "3462010"
  },
  {
    "text": "auditing and compliance perspective but in essence they still don't have to do",
    "start": "3462010",
    "end": "3468010"
  },
  {
    "text": "all of the heavy lifting themselves so we do have the ability to run openshift as a managed or as a self-managed",
    "start": "3468010",
    "end": "3477360"
  },
  {
    "text": "implementation are there any cloud formation templates available to deploy openshift on AWS yes there is a quick",
    "start": "3477360",
    "end": "3484840"
  },
  {
    "text": "start solution for deploying openshift on AWS currently that supports the",
    "start": "3484840",
    "end": "3490390"
  },
  {
    "text": "version 3 family and there is a version 4 QuickStart on its way and we should",
    "start": "3490390",
    "end": "3496390"
  },
  {
    "text": "see that towards the end of the year there are a mo",
    "start": "3496390",
    "end": "3501990"
  },
  {
    "text": "of questions still coming in I will address one or two more as we are on the top of the hour what we will do is try",
    "start": "3501990",
    "end": "3508230"
  },
  {
    "text": "and collect some of these questions and get them out to you in the summary email a little bit later on just give me a",
    "start": "3508230",
    "end": "3515910"
  },
  {
    "text": "moment or two to try and sort of some of these yes this recording will be",
    "start": "3515910",
    "end": "3522390"
  },
  {
    "text": "available for later consumption or reekin sumption one question around open",
    "start": "3522390",
    "end": "3529619"
  },
  {
    "text": "shaft versus native AWS eks which is the",
    "start": "3529619",
    "end": "3534680"
  },
  {
    "text": "managed kubernetes environment aw is that the big differentiator with open",
    "start": "3534680",
    "end": "3540960"
  },
  {
    "start": "3538000",
    "end": "3600000"
  },
  {
    "text": "trust I would say or why I'm seeing customers trend towards open shift is",
    "start": "3540960",
    "end": "3546530"
  },
  {
    "text": "that it is a turnkey solution it's not just a container runtime and an",
    "start": "3546530",
    "end": "3552750"
  },
  {
    "text": "orchestration layer OpenShift does bring a lot in terms of bundling features",
    "start": "3552750",
    "end": "3559230"
  },
  {
    "text": "together so there is a built-in pipeline and build process it's based on Jenkins",
    "start": "3559230",
    "end": "3565619"
  },
  {
    "text": "but you get that out of the box there is a built-in container runtime built-in",
    "start": "3565619",
    "end": "3571680"
  },
  {
    "text": "orchestration which is based on topic Unix knitties it's not a exclusively",
    "start": "3571680",
    "end": "3577920"
  },
  {
    "text": "kubernetes environment where developers operators need to get really into the weeds with kubernetes so openshift does",
    "start": "3577920",
    "end": "3584490"
  },
  {
    "text": "bring a lot of abstraction over and above that kubernetes implementation and this allows developers and operators to",
    "start": "3584490",
    "end": "3593780"
  },
  {
    "text": "ease some of the the pains around storage some of the pains around the",
    "start": "3593780",
    "end": "3599460"
  },
  {
    "text": "networking that they're typically faced with in kubernetes itself the",
    "start": "3599460",
    "end": "3605420"
  },
  {
    "text": "implementation the install and management process is also greatly simplified the openshift implementation",
    "start": "3605420",
    "end": "3613050"
  },
  {
    "text": "also adds in a lot of simplifications around single sign-on directory",
    "start": "3613050",
    "end": "3618869"
  },
  {
    "text": "integrations yuri did mention this briefly regarding their implementation",
    "start": "3618869",
    "end": "3624270"
  },
  {
    "text": "with Active Directory and how this simplifies the journey the is a built-in",
    "start": "3624270",
    "end": "3630150"
  },
  {
    "text": "monitoring and logging mechanism so when you're looking at OpenShift and",
    "start": "3630150",
    "end": "3635370"
  },
  {
    "text": "comparing it to eks many of these features are available with eks but they're not part of eks itself you would",
    "start": "3635370",
    "end": "3641700"
  },
  {
    "text": "have to implement other AWS services and integrate them together typically code",
    "start": "3641700",
    "end": "3647220"
  },
  {
    "text": "pipeline code build ECR is a container registry you would need to bring in",
    "start": "3647220",
    "end": "3653190"
  },
  {
    "text": "elements of cloud watch eks in itself and then you would have to go and there",
    "start": "3653190",
    "end": "3658740"
  },
  {
    "text": "add in some element of Federation so it's possible but there's a little bit more if it's not an simply",
    "start": "3658740",
    "end": "3664140"
  },
  {
    "text": "out-of-the-box turnkey solution the biggest differentiator for me however on OpenShift is its relevance within a hybrid context",
    "start": "3664140",
    "end": "3672900"
  },
  {
    "text": "if you're a customer who's running workloads on-premises as well as in the cloud and you want that same experience",
    "start": "3672900",
    "end": "3679830"
  },
  {
    "text": "that same process you want the exact same way of doing things whether it's on-premises or in the cloud",
    "start": "3679830",
    "end": "3685320"
  },
  {
    "text": "open stuff becomes a very natural solution in that context you know yes",
    "start": "3685320",
    "end": "3691560"
  },
  {
    "text": "you'd have two different clusters but the process around managing those clusters would be the same on both sides",
    "start": "3691560",
    "end": "3698210"
  },
  {
    "text": "we do still have a long list of questions here I will try and address these in the email going out at a later",
    "start": "3698210",
    "end": "3704550"
  },
  {
    "text": "stage I do want to thank everybody who joined us it has been a pleasure speaking to you",
    "start": "3704550",
    "end": "3710970"
  },
  {
    "text": "URI my year thank you very much for giving us insight from both a Red Hat as",
    "start": "3710970",
    "end": "3716040"
  },
  {
    "text": "well as a Scholastic perspective sure thanks Ryan and thank you everyone",
    "start": "3716040",
    "end": "3724770"
  }
]