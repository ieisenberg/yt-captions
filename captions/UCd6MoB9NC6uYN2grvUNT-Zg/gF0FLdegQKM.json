[
  {
    "start": "0",
    "end": "24000"
  },
  {
    "text": "In this video, you’ll see how to log activity events \nfrom non-AWS sources in AWS CloudTrail Lake.",
    "start": "505",
    "end": "6664"
  },
  {
    "text": "With this capability, you can capture \nauditable events such as user and API",
    "start": "7444",
    "end": "11570"
  },
  {
    "text": "activity from disparate sources across \nyour environment, query events in the",
    "start": "11570",
    "end": "15808"
  },
  {
    "text": "unified log, and centrally manage \ncompliance controls of audit events",
    "start": "15808",
    "end": "19742"
  },
  {
    "text": "from AWS, custom applications, \nand partner products.",
    "start": "19742",
    "end": "23109"
  },
  {
    "start": "24000",
    "end": "110000"
  },
  {
    "text": "We’ll begin in the AWS CloudTrail \nconsole, where we’ll create an",
    "start": "24913",
    "end": "28622"
  },
  {
    "text": "integration to log events from \na non-AWS application source.",
    "start": "28622",
    "end": "32258"
  },
  {
    "text": "We can integrate CloudTrail Lake with \nan available partner application source",
    "start": "33252",
    "end": "36931"
  },
  {
    "text": "or create a custom integration.",
    "start": "36931",
    "end": "38425"
  },
  {
    "text": "There are two types of \nintegrations, direct and solution.",
    "start": "39371",
    "end": "42629"
  },
  {
    "text": "We’ll create a custom solution \nintegration where our sample",
    "start": "43584",
    "end": "46203"
  },
  {
    "text": "application is running in a\nseparate database account.",
    "start": "46203",
    "end": "48731"
  },
  {
    "text": "Let’s name the channel.",
    "start": "49744",
    "end": "50802"
  },
  {
    "text": "Here, we can choose a \ndifferent partner source.",
    "start": "54227",
    "end": "56428"
  },
  {
    "text": "We’ll continue with the custom \nintegration source we selected.",
    "start": "56942",
    "end": "59769"
  },
  {
    "text": "We can deliver our events to an existing \nevent data store, or we can create a new one.",
    "start": "61675",
    "end": "66012"
  },
  {
    "text": "Let’s create a new event data store.",
    "start": "66759",
    "end": "68566"
  },
  {
    "text": "We'll leave the retention period as the default.",
    "start": "72661",
    "end": "74979"
  },
  {
    "text": "The resource policy attached to the \nchannel allows the source to transmit",
    "start": "76506",
    "end": "79949"
  },
  {
    "text": "events through the channel.",
    "start": "79949",
    "end": "81179"
  },
  {
    "text": "For this custom integration, we’ll specify\nthe AWS account that hosts our application",
    "start": "81801",
    "end": "86508"
  },
  {
    "text": "and give it the necessary permissions.",
    "start": "86508",
    "end": "88171"
  },
  {
    "text": "We’ll leave the tags blank, \nand add the integration.",
    "start": "90743",
    "end": "93144"
  },
  {
    "text": "Our integration was created successfully.",
    "start": "94000",
    "end": "96035"
  },
  {
    "text": "The status is currently “incomplete” \nsince we haven’t logged any events",
    "start": "96625",
    "end": "99884"
  },
  {
    "text": "for this integration channel.",
    "start": "99884",
    "end": "101283"
  },
  {
    "text": "To begin logging events to CloudTrail \nLake, we’ll copy the channel ARN and then",
    "start": "102302",
    "end": "106506"
  },
  {
    "text": "open the AWS Command Line Interface (CLI).",
    "start": "106506",
    "end": "109939"
  },
  {
    "start": "110000",
    "end": "163000"
  },
  {
    "text": "First, let’s view an example audit event for a \nuser logging into the sample application console.",
    "start": "111065",
    "end": "116051"
  },
  {
    "text": "To put events into CloudTrail Lake,",
    "start": "117048",
    "end": "118951"
  },
  {
    "text": "the event data must conform to the \nCloudTrail Lake integrations event schema.",
    "start": "118951",
    "end": "122713"
  },
  {
    "text": "You can find a documentation link for this \nschema in the description for this video.",
    "start": "123294",
    "end": "126861"
  },
  {
    "text": "We’ll use the put-audit-events API \nto put the event into our account’s",
    "start": "127805",
    "end": "131415"
  },
  {
    "text": "CloudTrail Lake event data store.",
    "start": "131415",
    "end": "133306"
  },
  {
    "text": "We’ll specify the channel ARN we copied and the \naudit events we want to input into CloudTrail Lake.",
    "start": "134270",
    "end": "139504"
  },
  {
    "text": "Our events were successfully ingested \ninto the CloudTrail Lake channel.",
    "start": "141148",
    "end": "144430"
  },
  {
    "text": "When using the put-audit-events API, \nyou can add up to 100 events or up to",
    "start": "145472",
    "end": "149912"
  },
  {
    "text": "one megabyte per put-audit-events request.",
    "start": "149912",
    "end": "152359"
  },
  {
    "text": "Let’s put four audit events into \nour CloudTrail Lake channel.",
    "start": "153442",
    "end": "156393"
  },
  {
    "text": "The events have been added.",
    "start": "158272",
    "end": "159471"
  },
  {
    "text": "Let’s return to the CloudTrail console.",
    "start": "159915",
    "end": "161797"
  },
  {
    "start": "163000",
    "end": "245000"
  },
  {
    "text": "Our integration is now active \nbecause it is receiving events.",
    "start": "164369",
    "end": "167421"
  },
  {
    "text": "Next, let’s see how to query \nevents in CloudTrail Lake.",
    "start": "168297",
    "end": "171164"
  },
  {
    "text": "In the query editor, we’ll select the \nevent data store we just created.",
    "start": "172946",
    "end": "176516"
  },
  {
    "text": "Next, we’ll query our sample application \naudit logs to see events related to a",
    "start": "177459",
    "end": "181539"
  },
  {
    "text": "specific user's console login.",
    "start": "181539",
    "end": "183568"
  },
  {
    "text": "The query returned two records.",
    "start": "184636",
    "end": "186397"
  },
  {
    "text": "On the Query results tab, we can see more \ndetails about the application’s event logs.",
    "start": "187321",
    "end": "191869"
  },
  {
    "text": "We can select the results and \ncopy the data to our clipboard,",
    "start": "192724",
    "end": "195906"
  },
  {
    "text": "or save the results to an Amazon S3 bucket.",
    "start": "195906",
    "end": "198452"
  },
  {
    "text": "Next, let’s run a query that joins \naudit events from our sample",
    "start": "202651",
    "end": "205680"
  },
  {
    "text": "application and AWS CloudTrail.",
    "start": "205680",
    "end": "208056"
  },
  {
    "text": "We’ll filter the CloudTrail event data store \nto find console logins for a specified user,",
    "start": "209016",
    "end": "214102"
  },
  {
    "text": "and join that event with our \nsample application event data.",
    "start": "214102",
    "end": "217068"
  },
  {
    "text": "Let’s run the query and review the results.",
    "start": "218051",
    "end": "220103"
  },
  {
    "text": "We can see the conjoined data between \nour AWS CloudTrail event data, and our",
    "start": "223241",
    "end": "227237"
  },
  {
    "text": "sample application integration.",
    "start": "227237",
    "end": "229008"
  },
  {
    "text": "You’ve just seen how to log activity events \nfrom non-AWS sources in AWS CloudTrail Lake.",
    "start": "231571",
    "end": "237022"
  },
  {
    "text": "You can learn more about this topic in \nthe description and links for this video.",
    "start": "238220",
    "end": "241584"
  },
  {
    "text": "Thanks for watching. Now it’s your turn to try.",
    "start": "241841",
    "end": "244007"
  }
]