[
  {
    "text": "alright let's kick her off alright hello and welcome you can hear right dar I",
    "start": "30",
    "end": "6029"
  },
  {
    "text": "fantastic fun with giant spotlights right in my face I can't actually see anybody but I assume you're out there",
    "start": "6029",
    "end": "12540"
  },
  {
    "text": "I'm Brian Lewis a Solutions Architect with AWS and with me I have Kirk I'm",
    "start": "12540",
    "end": "18240"
  },
  {
    "text": "Kirk Davis also Solutions Architect with AWS on the dotnet I'm a dotnet",
    "start": "18240",
    "end": "23340"
  },
  {
    "text": "specialist essay so I deal a lot with asp.net and dotnet apps on AWS and I",
    "start": "23340",
    "end": "29340"
  },
  {
    "text": "work with Microsoft workloads on top of AWS all kinds of them including dotnet so we have some related sessions I don't",
    "start": "29340",
    "end": "37050"
  },
  {
    "text": "actually have the dates and times on these but these seemed related to the topic so if you're here for container",
    "start": "37050",
    "end": "42899"
  },
  {
    "text": "izing legacy asp.net apps you might be interested in one of these so feel free to check out them on the schedule I",
    "start": "42899",
    "end": "49200"
  },
  {
    "text": "don't have it okay what we're going to cover today is we're going to base go",
    "start": "49200",
    "end": "55680"
  },
  {
    "text": "over the basics of docker first and then we're gonna go over why would want to docker eyes a legacy dotnet app the next",
    "start": "55680",
    "end": "63930"
  },
  {
    "text": "piece will go into is container container izing that dotnet app we're going to go through a sample app and",
    "start": "63930",
    "end": "70170"
  },
  {
    "text": "containerize it and then lastly we'll look at deploying to ECS and running it on top of a ECS environment alright so",
    "start": "70170",
    "end": "80610"
  },
  {
    "text": "before we get started though I wanted to talk about or forget a show of hands that people who are doing like dotnet",
    "start": "80610",
    "end": "86610"
  },
  {
    "text": "development or dotnet DevOps something in that okay oh wow a bunch of hands so",
    "start": "86610",
    "end": "92060"
  },
  {
    "text": "probably most of you know this already the the title on this slide is actually a quote from Scott hunter at at",
    "start": "92060",
    "end": "99270"
  },
  {
    "text": "Microsoft he's the director of program management for net so dotnet is the future sorry dotnet core is the future",
    "start": "99270",
    "end": "105840"
  },
  {
    "text": "of dotnet dotnet framework 4.8 which just dropped I think this spring is the",
    "start": "105840",
    "end": "111720"
  },
  {
    "text": "last major version of.net framework they're going to continue to release security patches and minor bug fixes and",
    "start": "111720",
    "end": "118320"
  },
  {
    "text": "things like that but there's there's never going to be a dotnet framework 5 there might be a dotnet framework 4.9",
    "start": "118320",
    "end": "123659"
  },
  {
    "text": "I'm hearing probably not but that's possible but all future that the key",
    "start": "123659",
    "end": "128910"
  },
  {
    "text": "takeaway is that like third bullet down all future investment in net at Microsoft is",
    "start": "128910",
    "end": "134069"
  },
  {
    "text": "dotnet core and they're gonna be releasing it every other year and then after dotnet 3 dot net core 3 and 3.1",
    "start": "134069",
    "end": "142290"
  },
  {
    "text": "ships this fall the next release isn't going to be called dotnet core 4 because they wanted to avoid confusion with",
    "start": "142290",
    "end": "147900"
  },
  {
    "text": "dotnet framework for and dotnet core 4 so it's just dotnet 5 it's no longer a",
    "start": "147900",
    "end": "154019"
  },
  {
    "text": "framework or core I think they said you can continue calling it core because for a while it'll probably be less confusing",
    "start": "154019",
    "end": "159930"
  },
  {
    "text": "but it's just gonna be dotnet v dot net 6 if you see the LTS long term support",
    "start": "159930",
    "end": "165629"
  },
  {
    "text": "those are the the versions of.net core soon to be net that will get the long term you know security patches and stuff",
    "start": "165629",
    "end": "172470"
  },
  {
    "text": "like that for 2 years as opposed to the shorter the the alternate versions that",
    "start": "172470",
    "end": "177780"
  },
  {
    "text": "come out on even years so at AWS we support net and framework across a variety of compute so dotnet",
    "start": "177780",
    "end": "184980"
  },
  {
    "text": "framework we support on ec2 and in Windows containers dotnet core we support in lambda long-term support",
    "start": "184980",
    "end": "192510"
  },
  {
    "text": "releases in lambda you can run in Fargate you can actually use your own layers in lambda to run whatever version",
    "start": "192510",
    "end": "199019"
  },
  {
    "text": "of.net core you want in a lambda function so basically anything new that you're building should be built on",
    "start": "199019",
    "end": "205290"
  },
  {
    "text": "dotnet core if you're starting a new project don't start it with dotnet framework started with dotnet core can",
    "start": "205290",
    "end": "210299"
  },
  {
    "text": "go back to that for a second just yeah something that hit my memory was the original name of dotnet core 1.0 was",
    "start": "210299",
    "end": "217500"
  },
  {
    "text": "going to be before it shipped was gonna be dotnet core 5.0 and then they they changed it before they shipped it to one",
    "start": "217500",
    "end": "224340"
  },
  {
    "text": "so it was always going to be you know the plan next generation it's just taking a couple versions now to get to",
    "start": "224340",
    "end": "230489"
  },
  {
    "text": "five so we should have three shipped this summer and you know the difference",
    "start": "230489",
    "end": "236190"
  },
  {
    "text": "between core versus the framework windows the framework only runs on Windows servers where the core will run",
    "start": "236190",
    "end": "242310"
  },
  {
    "text": "cross-platform it's open source in like it's modular it's lightweight a dotnet",
    "start": "242310",
    "end": "248400"
  },
  {
    "text": "core is distributed through nougat you can add if not monolithic you can run side by side versions so we're not",
    "start": "248400",
    "end": "254849"
  },
  {
    "text": "saying that your gotta net framework apps are bad or that you should throw them away because they will continue to run you can can you to continue to",
    "start": "254849",
    "end": "261419"
  },
  {
    "text": "extend them and build them just for new things used on that core so",
    "start": "261419",
    "end": "268169"
  },
  {
    "text": "if there's a common perception I see online where people think that EWS don't you know doesn't support dotnet or we",
    "start": "268169",
    "end": "274379"
  },
  {
    "text": "don't really do anything for dotnet and I just went and grabbed like I think is that like eight different releases that",
    "start": "274379",
    "end": "280409"
  },
  {
    "text": "were focused on dotnet that we did this year from releasing PowerShell standards support lambda layers was kind of a big",
    "start": "280409",
    "end": "287909"
  },
  {
    "text": "one because it allows you to run dotnet core 3 if you want in preview preview 3",
    "start": "287909",
    "end": "293999"
  },
  {
    "text": "I think is the latest you can run that in a lambda function with the bring your own runtime that lambda the Amazon dot",
    "start": "293999",
    "end": "301110"
  },
  {
    "text": "lambda dot runtime support for custom lambda lambda runtimes basically we have a lot of iterations of new services or",
    "start": "301110",
    "end": "308159"
  },
  {
    "text": "features that are related to dotnet so and I'm one of I don't know a half a",
    "start": "308159",
    "end": "313529"
  },
  {
    "text": "dozen dotnet specialist solution architects in AWS so we're advocating on behalf of dotnet developers as well why",
    "start": "313529",
    "end": "322199"
  },
  {
    "text": "containers why don't you do containers well so let's talk about what containers",
    "start": "322199",
    "end": "327689"
  },
  {
    "text": "are first containers are something that gives us a very similar thing to a virtual machine so that gives us",
    "start": "327689",
    "end": "335669"
  },
  {
    "text": "portability right I can run on any piece of hardware not have to worry about the drivers underneath it gives me the",
    "start": "335669",
    "end": "340979"
  },
  {
    "text": "ability to run multiple versions without them stepping on each other on the same",
    "start": "340979",
    "end": "347159"
  },
  {
    "text": "host so why don't I just do virtual machines virtual machines are much heavier so if I can run ten virtual",
    "start": "347159",
    "end": "353909"
  },
  {
    "text": "machines on a server I may be able to run 20 containers or 50 containers a",
    "start": "353909",
    "end": "358949"
  },
  {
    "text": "nurse are generally a lot lighter weight startup times for a container when I",
    "start": "358949",
    "end": "364979"
  },
  {
    "text": "reboot a Windows container like a nano server Windows container a reboot is sub one second so that's kind of nice",
    "start": "364979",
    "end": "371550"
  },
  {
    "text": "because even in my VM it doesn't take one second to reboot that guy my laptop",
    "start": "371550",
    "end": "377279"
  },
  {
    "text": "doesn't boot that fast on my server when it counts through the memory but boots even slower so containers are really",
    "start": "377279",
    "end": "383669"
  },
  {
    "text": "nice from that aspect the thing that's different on containers is you're not emulating all of that hardware you're",
    "start": "383669",
    "end": "389789"
  },
  {
    "text": "you're basically writing on top of the kernel so that means every container or every different thing running has to be",
    "start": "389789",
    "end": "397860"
  },
  {
    "text": "run on the same version you can't run Linux next to Windows you know not to Solaris you can't do that you have to",
    "start": "397860",
    "end": "404100"
  },
  {
    "text": "run not only and in this case Windows Server you have to run the Windows Server version so he can't run 2016 and",
    "start": "404100",
    "end": "411690"
  },
  {
    "text": "2019 on the same host it's got to be whatever that host kernel is do we have show of hands like have any of you used",
    "start": "411690",
    "end": "418770"
  },
  {
    "text": "containers is everyone familiar with the concept of containers all right so there at least",
    "start": "418770",
    "end": "424050"
  },
  {
    "text": "so Linux containers people have been doing for quite a long time I would imagine those hands I'll just ask another one who's doing Windows",
    "start": "424050",
    "end": "431340"
  },
  {
    "text": "containers today Oh Oh fair amount more than I would have guessed so excellent I",
    "start": "431340",
    "end": "436980"
  },
  {
    "text": "guess we can talk to you about the difference between the two different ways containers windows container can",
    "start": "436980",
    "end": "442710"
  },
  {
    "text": "run on Windows Brian was saying that the versions have to match if the versions match then you can run the container",
    "start": "442710",
    "end": "449430"
  },
  {
    "text": "directly and it will share the same host kernel so if you're running a Windows",
    "start": "449430",
    "end": "454800"
  },
  {
    "text": "Server 2019 which is a much better thing to run containers on than 2016 then if",
    "start": "454800",
    "end": "460470"
  },
  {
    "text": "you're running Windows Server 2019 containers they'll just use the underlying kernel and it's just the app",
    "start": "460470",
    "end": "465810"
  },
  {
    "text": "layer basically that's going to be running on top libraries dotnet framework versions like that we're gonna go to the next one so if we look at this",
    "start": "465810",
    "end": "472140"
  },
  {
    "text": "next thing how do I then take my laptop and build stuff for the server on there",
    "start": "472140",
    "end": "477480"
  },
  {
    "text": "well one of the ways to fix that would be run a hypervisor and then run the server kernel on your development",
    "start": "477480",
    "end": "484290"
  },
  {
    "text": "machine so I'm still running Windows 10 on my development machine I don't have to load server on my laptop but when I",
    "start": "484290",
    "end": "489900"
  },
  {
    "text": "go and play within the visual studio or just in docker itself I'm going to run",
    "start": "489900",
    "end": "495030"
  },
  {
    "text": "on top of a hypervisor and run that kernel there and then I can load my docker container on top of that alright",
    "start": "495030",
    "end": "501750"
  },
  {
    "text": "so that means I can basically code to Server 2016 2019 whatever it doesn't",
    "start": "501750",
    "end": "506970"
  },
  {
    "text": "matter because I can run that kernel it's because I have a Windows 10 laptop",
    "start": "506970",
    "end": "511980"
  },
  {
    "text": "but I'm deploying to Windows Server 2019 or Windows Server 2016 but because on my",
    "start": "511980",
    "end": "518099"
  },
  {
    "text": "laptop it's running in hyper-v mode anybody who's done windows containers on your laptop you know have to an able hyper-v and maybe change a BIOS setting",
    "start": "518100",
    "end": "525030"
  },
  {
    "text": "and then reboot that's the reason why so Y containers for legacy dotnet apps so",
    "start": "525030",
    "end": "531450"
  },
  {
    "text": "there's three main reasons that we see customers taking you know their legacy asp.net apps",
    "start": "531450",
    "end": "536700"
  },
  {
    "text": "they're traditionally asp.net you could be there are cost customers running other dotnet apps if you're running a",
    "start": "536700",
    "end": "541950"
  },
  {
    "text": "thick client though it doesn't make any sense to containerize that because it's got a UI that users have to interact with it could be a batch job",
    "start": "541950",
    "end": "548340"
  },
  {
    "text": "it's a dotnet console app or something but most commonly it's asp.net so the three big reasons I see customers doing",
    "start": "548340",
    "end": "554790"
  },
  {
    "text": "this is they're moving the either they're moving to the cloud anyway and they've got to take these legacy apps along with them and support it or",
    "start": "554790",
    "end": "561210"
  },
  {
    "text": "they're looking to save money and get more flexibility by moving to the cloud so the question is how do you do that",
    "start": "561210",
    "end": "566850"
  },
  {
    "text": "with an asp.net app so a bi asp.net I mean dotnet framework not dotnet core if",
    "start": "566850",
    "end": "573390"
  },
  {
    "text": "it's not in that core you can there's other things you can do run it in a Linux container or moving to Fargate whatever if it's a asp.net framework",
    "start": "573390",
    "end": "580770"
  },
  {
    "text": "like an MVC or especially like a web forms app there's no way to migrate web forms to dotnet core anyway it's not a",
    "start": "580770",
    "end": "587400"
  },
  {
    "text": "supported project type so you've got and there's a lot of them out there if you see the URL ends in dot aspx that's",
    "start": "587400",
    "end": "593730"
  },
  {
    "text": "definitely web forms so rewinding the three big reasons are like operating",
    "start": "593730",
    "end": "599730"
  },
  {
    "text": "system utilization if you're running and I've seen customers running 15 20 different asp.net apps in their data",
    "start": "599730",
    "end": "606900"
  },
  {
    "text": "center and because each one's in a slightly different version of the.net framework they're all on different",
    "start": "606900",
    "end": "611910"
  },
  {
    "text": "machines all of which have to be maintained and administered every one of those machines is a Windows server",
    "start": "611910",
    "end": "617820"
  },
  {
    "text": "license that they're paying for so in if you move that to continue containerize",
    "start": "617820",
    "end": "624270"
  },
  {
    "text": "those 20 apps and then move it to the cloud you can run it all on one machine you've got one Windows license and",
    "start": "624270",
    "end": "629400"
  },
  {
    "text": "anybody who pays the Microsoft tax is aware how much Windows server licenses cost second big reason is deployment",
    "start": "629400",
    "end": "636600"
  },
  {
    "text": "runtime consistency that means if I'm a developer and I have done this I was a developer for 20 years if I'm building",
    "start": "636600",
    "end": "643650"
  },
  {
    "text": "on my own machine and I've got iis and sequel server Express I've got my own configuration and I run it locally and",
    "start": "643650",
    "end": "650250"
  },
  {
    "text": "everything works great and then we deploy it out to Windows Server 2016 and the operations guys you know deploy my",
    "start": "650250",
    "end": "657960"
  },
  {
    "text": "app on that server and it doesn't work and it's because subtle changes in configuration my some registry settings",
    "start": "657960",
    "end": "665070"
  },
  {
    "text": "not the same whatever and so you end up in the cycle of okay I have to remote desktop onto that prod box and then try to",
    "start": "665070",
    "end": "671850"
  },
  {
    "text": "figure out why it's not working with containers once I have this container running locally on my machine and it it",
    "start": "671850",
    "end": "678300"
  },
  {
    "text": "is working and everything works I can take that exact image that I use to",
    "start": "678300",
    "end": "683970"
  },
  {
    "text": "spawn the container locally and I can take that image and use it to deploy the exact same container to a server in the",
    "start": "683970",
    "end": "691950"
  },
  {
    "text": "cloud in my data center in my closet wherever and it will run exactly the same it's it's encapsulated well I have",
    "start": "691950",
    "end": "698910"
  },
  {
    "text": "a server in my closet alright my wife is really happy about that and the last thing is you have it hooked",
    "start": "698910",
    "end": "704010"
  },
  {
    "text": "to that closet drive away chiller cooling your closet maybe last thing would be scaling just",
    "start": "704010",
    "end": "711330"
  },
  {
    "text": "the ability to rapidly scale up Brian mention like nano server can can boot in under a second even the the bigger",
    "start": "711330",
    "end": "718500"
  },
  {
    "text": "Windows server core which can run asp.net framework and iOS base abs that's a couple of seconds to boot it's",
    "start": "718500",
    "end": "725520"
  },
  {
    "text": "much faster than booting a hardware instance or even a virtual machine and Windows virtual machines even in AWS",
    "start": "725520",
    "end": "731970"
  },
  {
    "text": "we've done a lot of work to improve it it's still a couple of minutes to bring up one of those things whereas the",
    "start": "731970",
    "end": "737070"
  },
  {
    "text": "container will boot in on the order of 10 seconds or seven seconds or something so you can rapidly scale out your your",
    "start": "737070",
    "end": "743520"
  },
  {
    "text": "applications so we're gonna walk through anything to add to what you said about the legacy you know the reason you want",
    "start": "743520",
    "end": "748710"
  },
  {
    "text": "to run these legacy apps is a lot of them can't port right now excuse me to dotnet core but Microsoft keeps adding",
    "start": "748710",
    "end": "755520"
  },
  {
    "text": "api's and functionality and so when three comes out when four when five comes out cuz four is not coming out",
    "start": "755520",
    "end": "760610"
  },
  {
    "text": "they should be adding functionality that will make that port a lot easier and so",
    "start": "760610",
    "end": "765660"
  },
  {
    "text": "it might fix that for you web forms probably not but there's an open-source effort for WCF a limited support for WCF",
    "start": "765660",
    "end": "773190"
  },
  {
    "text": "which is not baked in a dotnet core but we can talk about that at the end we have a monetization section so for",
    "start": "773190",
    "end": "780210"
  },
  {
    "text": "operating system utilization this is kind of if you're in your data center or even in AWS running on ec2 instances I",
    "start": "780210",
    "end": "785670"
  },
  {
    "text": "might have these three apps I've got it you know I want multiple copies running",
    "start": "785670",
    "end": "791490"
  },
  {
    "text": "maybe at peak load I've got four copies of each so I'm running 12 total",
    "start": "791490",
    "end": "797000"
  },
  {
    "text": "applications on these four boxes and each of these boxes is run",
    "start": "797000",
    "end": "802110"
  },
  {
    "text": "say Windows Server 2019 that's for Windows Server licenses whereas if I'm",
    "start": "802110",
    "end": "809340"
  },
  {
    "text": "running Windows Server containers then I can basically you see w3p that's the",
    "start": "809340",
    "end": "816570"
  },
  {
    "text": "world wide web publishing service which is what you're using the publish asp.net web apps are the web server so I can run",
    "start": "816570",
    "end": "823260"
  },
  {
    "text": "my own copy of that inside of these containers it's still running in the same Windows Server kernel underneath",
    "start": "823260",
    "end": "829260"
  },
  {
    "text": "but now I can have different configurations for each of these as well they can each be running on the default",
    "start": "829260",
    "end": "834480"
  },
  {
    "text": "website because lots and lots of legacy apps I've seen are configured to only run in the default website and nobody",
    "start": "834480",
    "end": "840540"
  },
  {
    "text": "really has the source code and wants to go figure out how to make it run eight websites and a server and then I'll be",
    "start": "840540",
    "end": "846240"
  },
  {
    "text": "standard and this can all be standardized and also all of the under sorry so I think I kind of skipped ahead",
    "start": "846240",
    "end": "852990"
  },
  {
    "text": "but you could basically if I'm running with docker containers there's a docker engine that's going to be running on",
    "start": "852990",
    "end": "858390"
  },
  {
    "text": "each one of those servers I might have the same twelve apps but here I'm only",
    "start": "858390",
    "end": "863760"
  },
  {
    "text": "running for Windows Server licenses instead of twelve I'm not sure what I said a minute ago but it was twelve",
    "start": "863760",
    "end": "869430"
  },
  {
    "text": "server licenses now it's four the reality is you could even do better than this because those containers if we go",
    "start": "869430",
    "end": "875430"
  },
  {
    "text": "back a slide to here you can see the guest OS it's actually not drawn to",
    "start": "875430",
    "end": "881970"
  },
  {
    "text": "scale because the reality is a Windows server OS is you know 12 15 gigabytes",
    "start": "881970",
    "end": "888090"
  },
  {
    "text": "you know and then your app is probably 500 Meg's maybe if that maybe two hundred Meg's so it's a really thin",
    "start": "888090",
    "end": "894120"
  },
  {
    "text": "slice the OS is the big fat thing hogging up a lot of space on your server and memory so when you go to talk if",
    "start": "894120",
    "end": "902400"
  },
  {
    "text": "you've containerized them instead of running three the reality is you can probably run four or five or six on that",
    "start": "902400",
    "end": "907890"
  },
  {
    "text": "same hardware then you could even decrease the server count to three and end up paying for three windows server",
    "start": "907890",
    "end": "913500"
  },
  {
    "text": "license instead of twelve so you can get a lot of savings especially companies that are running lots and lots of these",
    "start": "913500",
    "end": "919710"
  },
  {
    "text": "you know going from 12 to 3 or 4 you know ok I've just knocked off 8 windows",
    "start": "919710",
    "end": "925650"
  },
  {
    "text": "server license is it might not sound hugely but if you're running 1200 and you've reduced it to 350 that's a lot of",
    "start": "925650",
    "end": "934260"
  },
  {
    "text": "money so so a deployment and runtime consistency I talked a little bit about this I can",
    "start": "934260",
    "end": "940970"
  },
  {
    "text": "developers can build these containers test build code locally take the",
    "start": "940970",
    "end": "946740"
  },
  {
    "text": "container push it up to your test environment run all your tests the container will run the same on your test",
    "start": "946740",
    "end": "952470"
  },
  {
    "text": "environment as it did on dev and exactly as it is gonna do on prod you're not going to have this differences between",
    "start": "952470",
    "end": "957720"
  },
  {
    "text": "well my test environments running a slightly different KB knowledge base patch version than my production",
    "start": "957720",
    "end": "965010"
  },
  {
    "text": "environment is or it's it's two weeks prod is two weeks behind on patches and therefore they're no longer perfectly",
    "start": "965010",
    "end": "971550"
  },
  {
    "text": "high fidelity environments so with containers it's the same thing everywhere to containerize an app is",
    "start": "971550",
    "end": "978570"
  },
  {
    "text": "really pretty simple conceptually it is just really adding a docker file that",
    "start": "978570",
    "end": "985320"
  },
  {
    "text": "gives docker instructions on the files and commands you want docker to run it's",
    "start": "985320",
    "end": "990780"
  },
  {
    "text": "generally just one text file you can edit it in notepad I usually edit mine in Visual Studio or original studio code",
    "start": "990780",
    "end": "996300"
  },
  {
    "text": "and I'll show you one later during the demo so that this docker file generates",
    "start": "996300",
    "end": "1002750"
  },
  {
    "text": "a layer a container sorry a container image so this is an image an image is actually made up of multiple layers but",
    "start": "1002750",
    "end": "1009290"
  },
  {
    "text": "in this case we'll call it an image every image gets a unique ID like it's sort of like a gooood if I step through",
    "start": "1009290",
    "end": "1016640"
  },
  {
    "text": "this the entire image is made up of in this case this hypothetical one it's four layers the OS layer is the biggest",
    "start": "1016640",
    "end": "1023360"
  },
  {
    "text": "and then finally the app layers on top this is a beautiful if once you create",
    "start": "1023360",
    "end": "1028970"
  },
  {
    "text": "an image you can't go in and like you know start editing the image you're making changes if you want to make a",
    "start": "1028970",
    "end": "1034610"
  },
  {
    "text": "change you just create a new image and this this leads to a lot of benefits later instead of deploying a production",
    "start": "1034610",
    "end": "1042860"
  },
  {
    "text": "app and then as things change over time you're patching it and then you're somebody went in and changed a registry",
    "start": "1042860",
    "end": "1049310"
  },
  {
    "text": "setting because they read a blog article to solve something and then six weeks after that somebody installed notepad",
    "start": "1049310",
    "end": "1055280"
  },
  {
    "text": "plus plus on the server because they were trying to edit something and eventually you end up with a server that's in a state that's not really",
    "start": "1055280",
    "end": "1060710"
  },
  {
    "text": "known because it's been hacked on for the last two years by your admins with the container you go back to the source",
    "start": "1060710",
    "end": "1066590"
  },
  {
    "text": "and you recreate it each time it's it's immutable and then finally",
    "start": "1066590",
    "end": "1072530"
  },
  {
    "text": "when your docker container gets placed somewhere those these bottom layers like",
    "start": "1072530",
    "end": "1077809"
  },
  {
    "text": "I said they're all immutable there is a read/write layer so your app if your application needs to write things",
    "start": "1077809",
    "end": "1083600"
  },
  {
    "text": "locally write to the local disk drive it thinks it's writing to a server disk",
    "start": "1083600",
    "end": "1089000"
  },
  {
    "text": "drive it's actually writing to a special an abstracted filesystem that only the",
    "start": "1089000",
    "end": "1094040"
  },
  {
    "text": "container it's only specific to that container and sorry shut down that container that those files are lost",
    "start": "1094040",
    "end": "1100910"
  },
  {
    "text": "right well I'm really losing my boy yeah he's getting sick don't let him breathe on you so for scaling one of the reasons",
    "start": "1100910",
    "end": "1109100"
  },
  {
    "text": "it's so fast to scale is the very first time a container gets placed on this on",
    "start": "1109100",
    "end": "1114500"
  },
  {
    "text": "a host this is the server all the layers that make it up have to be pulled down especially that seven gigabyte base",
    "start": "1114500",
    "end": "1121160"
  },
  {
    "text": "layer it'll be pulled down the first time now for our container orchestration service one of them is called ECS which",
    "start": "1121160",
    "end": "1127250"
  },
  {
    "text": "we'll talk about layer later that layer gets we pre cache that on the server so",
    "start": "1127250",
    "end": "1133100"
  },
  {
    "text": "if you're pulling down container images that were based on Windows Server 2010",
    "start": "1133100",
    "end": "1138770"
  },
  {
    "text": "from docker hub they'll already be cached locally but regardless it would only get pulled down once anyway because",
    "start": "1138770",
    "end": "1144920"
  },
  {
    "text": "as you place more and more containers it's just the readwrite layer that has to be created as a copy and that's why",
    "start": "1144920",
    "end": "1151520"
  },
  {
    "text": "these things can get spun up so fast additional ones because the core read-only layer stays the same it's just",
    "start": "1151520",
    "end": "1159290"
  },
  {
    "text": "the readwrite layer that the container that the each new container has to have instantiated ok well I'll just finish",
    "start": "1159290",
    "end": "1166520"
  },
  {
    "text": "that previous slide which is is if you look at the size of a disk used I don't",
    "start": "1166520",
    "end": "1172640"
  },
  {
    "text": "be able to keep this up if you look at the size of the disk used it's saving this right if I have 10 copies it still",
    "start": "1172640",
    "end": "1179960"
  },
  {
    "text": "only uses the same size as if I only ran one copy if I ran a hundred copies and",
    "start": "1179960",
    "end": "1185179"
  },
  {
    "text": "maybe I have a hundred different apps it's only that 50 mag or hover big my app is that gets added for each one so",
    "start": "1185179",
    "end": "1192880"
  },
  {
    "text": "it's not free right and so you save time and storage space in installation time",
    "start": "1192880",
    "end": "1198320"
  },
  {
    "text": "because even though this is cheap that still has come across the network on the end and it installs once the way to do it it",
    "start": "1198320",
    "end": "1206260"
  },
  {
    "text": "is to do a docker pull here Microsoft has updated where their images are it's",
    "start": "1206260",
    "end": "1211480"
  },
  {
    "text": "no longer on docker it's on Microsoft's MCR Microsoft comm and there's three",
    "start": "1211480",
    "end": "1216850"
  },
  {
    "text": "main images there is nano server there is server core and then full-blown",
    "start": "1216850",
    "end": "1221980"
  },
  {
    "text": "Windows so nano server is their smallest one we're gonna go into that in the next slide",
    "start": "1221980",
    "end": "1227790"
  },
  {
    "text": "no we're not gonna go in that next slide that's in three four slides first we're",
    "start": "1227790",
    "end": "1233050"
  },
  {
    "text": "gonna talk that it's the smallest available it's only 64-bit but so is all Windows Server now there's no graphical",
    "start": "1233050",
    "end": "1240130"
  },
  {
    "text": "applications it downloads it's about a hundred Meghan size right now and expands about 250 yeah so it's very",
    "start": "1240130",
    "end": "1245710"
  },
  {
    "text": "similar to a Linux container in size I mean if you get the dotnet core Linux",
    "start": "1245710",
    "end": "1250720"
  },
  {
    "text": "container that's like 80 megabytes around there 80 to 100 so nano server is",
    "start": "1250720",
    "end": "1256630"
  },
  {
    "text": "actually getting close to that in size although it's dotnet core only yeah and it's got there's no graphical",
    "start": "1256630",
    "end": "1263200"
  },
  {
    "text": "environment really to login to it's got a a simple thing to fix the networking rather than that everything's done",
    "start": "1263200",
    "end": "1268750"
  },
  {
    "text": "remotely to manage it and then let's go on the next one and then there's server core and server core is basically",
    "start": "1268750",
    "end": "1274270"
  },
  {
    "text": "windows full-blown server without the GUI on top and so the GUI has been ripped out and hopefully you've seen and",
    "start": "1274270",
    "end": "1279790"
  },
  {
    "text": "heard of server core before but it's a bit bigger to Gabe or so I'm guessing",
    "start": "1279790",
    "end": "1285360"
  },
  {
    "text": "3.5 3.5 sizes but I think it's 3.5 compressed and about 5 uncompressed on a",
    "start": "1285360",
    "end": "1293230"
  },
  {
    "text": "disk so it's still not horrific the benefit is it can run the framenet framework whereas nano server cannot announce",
    "start": "1293230",
    "end": "1300310"
  },
  {
    "text": "Webber's dotnet core only this is full server and and windows powershell just powershell core and now",
    "start": "1300310",
    "end": "1309310"
  },
  {
    "text": "this is a new thing that they've released with server 2019 which is a full version of Windows Server it has",
    "start": "1309310",
    "end": "1315010"
  },
  {
    "text": "the desktop api's and such in there as well and so this is something that you can use for automating and testing of",
    "start": "1315010",
    "end": "1322210"
  },
  {
    "text": "GUI api's you can get AB access to the to the GPU there's a full api including",
    "start": "1322210",
    "end": "1330430"
  },
  {
    "text": "DirectX 4 for video so if you were for instance running selenium tests",
    "start": "1330430",
    "end": "1336110"
  },
  {
    "text": "using chromedriver to automate your you know website test and you wanted to run that in a container you can actually do",
    "start": "1336110",
    "end": "1342080"
  },
  {
    "text": "that now with the the full windows now the container is not small and we'll see the sizes here in a second the full one",
    "start": "1342080",
    "end": "1348980"
  },
  {
    "text": "oh yeah the Windows server core is only 1.5 and it's five uncompressed the full windows is about three and a half gigs",
    "start": "1348980",
    "end": "1356149"
  },
  {
    "text": "and eleven gigs once it decompresses which is not small but it's still smaller than a complete Windows Server",
    "start": "1356149",
    "end": "1363200"
  },
  {
    "text": "installation that you were doing well and these are the latest right now version 1903 right hmm they have a new",
    "start": "1363200",
    "end": "1369710"
  },
  {
    "text": "version come out every six months and these you know six months ago were a bit bigger six months before that they're a",
    "start": "1369710",
    "end": "1375769"
  },
  {
    "text": "lot bigger and so we'll see if they are able to keep that pod I think they're probably getting to the limit right I",
    "start": "1375769",
    "end": "1381559"
  },
  {
    "text": "guess as it goes down and then they start adding stuff and it will go back up but we'll see okay certain channels",
    "start": "1381559",
    "end": "1390409"
  },
  {
    "text": "so it's just like Windows 10 if you're not familiar with what is going on there is a long term servicing channel and so",
    "start": "1390409",
    "end": "1397460"
  },
  {
    "text": "like Server 2019 is a long term servicing Channel and then serve it 2019",
    "start": "1397460",
    "end": "1403210"
  },
  {
    "text": "version 1903 is a new version of it and if you think about the version 1903",
    "start": "1403210",
    "end": "1409970"
  },
  {
    "text": "where that comes from is that's 2019 January February March",
    "start": "1409970",
    "end": "1415100"
  },
  {
    "text": "we're in 1903 it could be see you're the Wright brothers nothing to do with it",
    "start": "1415100",
    "end": "1423019"
  },
  {
    "text": "okay because if you look at the previous one its 1809 which came out September of 28 to Goodyear and if you go before that",
    "start": "1423019",
    "end": "1430190"
  },
  {
    "text": "it was 1803 and so the reason it's the year first is because they always get",
    "start": "1430190",
    "end": "1436039"
  },
  {
    "text": "bigger so we can start to do things in PowerShell to to say I want the latest version that kind of stuff version",
    "start": "1436039",
    "end": "1444860"
  },
  {
    "text": "compatibility so if you see the green here this is the host on the top and",
    "start": "1444860",
    "end": "1451010"
  },
  {
    "text": "then the container version down the left if the container version OS version",
    "start": "1451010",
    "end": "1457340"
  },
  {
    "text": "matches the host then it can run in what's called process isolation that's we talked about before where they're",
    "start": "1457340",
    "end": "1462769"
  },
  {
    "text": "sharing the same underlying kernel without having to use hyper-v so if you're deploying on to using ECS to",
    "start": "1462769",
    "end": "1469220"
  },
  {
    "text": "deploy to normal ec2 instances which are already virtual machines that's what supported is in green if",
    "start": "1469220",
    "end": "1476750"
  },
  {
    "text": "you're running on bare metal or on your own laptop which is probably bare metal then you can do the ones in yellow which",
    "start": "1476750",
    "end": "1482390"
  },
  {
    "text": "is hyper-v and that's where it's it's a container running in a stripped-down virtual machine so it's a little bit",
    "start": "1482390",
    "end": "1487760"
  },
  {
    "text": "bigger than just the container but it's still not horrible and if you're in red you just can't do it at all so if you're",
    "start": "1487760",
    "end": "1494390"
  },
  {
    "text": "looking to deploy onto ECS and not have to go bare metal servers that the green",
    "start": "1494390",
    "end": "1502040"
  },
  {
    "text": "is what you're gonna be looking to do and really you should be looking at the latest version so Server 2019 and you",
    "start": "1502040",
    "end": "1509000"
  },
  {
    "text": "want your containers to be built on Server 2019 as well and that's the demo we'll do in here in a minute the other",
    "start": "1509000",
    "end": "1514670"
  },
  {
    "text": "thing is you get your best performance there right because nested virtualization usually you're going inside a virtual machine already and",
    "start": "1514670",
    "end": "1521060"
  },
  {
    "text": "then to do a virtual machine inside a virtual machine really has performance degradation consequences so that's the",
    "start": "1521060",
    "end": "1527570"
  },
  {
    "text": "fastest is that green channel so for the sample app we're using a the original",
    "start": "1527570",
    "end": "1534140"
  },
  {
    "text": "source code from Scott Hanselman nerd dinner except he added a bunch of client-side",
    "start": "1534140",
    "end": "1540260"
  },
  {
    "text": "stuff and now he's got maps and all kinds of stuff we just took the original asp.net MVC 1.0 code we retargeted the",
    "start": "1540260",
    "end": "1549050"
  },
  {
    "text": "code for dotnet framework for dot 7.2 which is now considered legacy because 4.8 has brought more compatibility with",
    "start": "1549050",
    "end": "1557540"
  },
  {
    "text": "dotnet standard and sequel server Express local DB so what we're gonna do",
    "start": "1557540",
    "end": "1563180"
  },
  {
    "text": "nerd dinner originally it uses sequel server in the backend we're gonna put the asp.net web app in one container",
    "start": "1563180",
    "end": "1570340"
  },
  {
    "text": "sequel server Express in another container and then we're gonna show them running locally with docker compose and",
    "start": "1570340",
    "end": "1576860"
  },
  {
    "text": "then we're gonna show them running I'll show how you push it up to AWS ECS which",
    "start": "1576860",
    "end": "1582260"
  },
  {
    "text": "is the elastic container service or sometimes people call it ec2 container service I don't know why so we're gonna",
    "start": "1582260",
    "end": "1588410"
  },
  {
    "text": "show how all that works so I think this is the demo all right so I'm gonna pray",
    "start": "1588410",
    "end": "1595640"
  },
  {
    "text": "to the demo gods really quick that nothing breaks",
    "start": "1595640",
    "end": "1601440"
  },
  {
    "text": "okay so let me pull up Visual Studio first so in Visual Studio hopefully",
    "start": "1601440",
    "end": "1608550"
  },
  {
    "text": "people can see this is the nerd dinner and then I have to docker files",
    "start": "1608550",
    "end": "1613680"
  },
  {
    "text": "separately that are in separate folders normally the docker falls just at the",
    "start": "1613680",
    "end": "1619260"
  },
  {
    "text": "root of your project in this case I just have them in two other folders that doesn't make any difference if we look",
    "start": "1619260",
    "end": "1625560"
  },
  {
    "text": "at the code this is just a very standard whoops sorry I meant to do controllers so this is just dinner i mean standard",
    "start": "1625560",
    "end": "1633480"
  },
  {
    "text": "asp.net code anybody who's done net would would know immediately what this stuff is the two important parts of this",
    "start": "1633480",
    "end": "1640380"
  },
  {
    "text": "are the two docker files if you look at a docker file when you do this so you",
    "start": "1640380",
    "end": "1646110"
  },
  {
    "text": "can see it a little better the docker file is using what's called a multi-stage build I think feel like my",
    "start": "1646110",
    "end": "1652890"
  },
  {
    "text": "cursor is going away when I'm oh that's not good okay well I have no cursor in",
    "start": "1652890",
    "end": "1660270"
  },
  {
    "text": "the we go speed up here oh you can see the cursor up there yeah oh yeah okay well I'll just look up there because that's convenient the docker file is",
    "start": "1660270",
    "end": "1669420"
  },
  {
    "text": "doing a couple things it's first it says create a working folder in the docker",
    "start": "1669420",
    "end": "1674910"
  },
  {
    "text": "container called c.src source code and i'm gonna copy my CS project into there",
    "start": "1674910",
    "end": "1681900"
  },
  {
    "text": "and run new get restore because the windows the container oops I'm missing I think I'm not",
    "start": "1681900",
    "end": "1688350"
  },
  {
    "text": "scrolled up ah sorry the very first thing is from it's saying from this",
    "start": "1688350",
    "end": "1694230"
  },
  {
    "text": "particular container which is a container Microsoft publishes it has the dotnet framework for dot 7.2 SDK that",
    "start": "1694230",
    "end": "1703050"
  },
  {
    "text": "means it's got nougat it's got msbuild it's got the build targets for web apps",
    "start": "1703050",
    "end": "1708600"
  },
  {
    "text": "that you normally you get by installing Visual Studio it has all that stuff to do builds already in that container so",
    "start": "1708600",
    "end": "1715350"
  },
  {
    "text": "that's the base layer then we're gonna create a layer on top and say I want to copy in my solution file and my CS proj",
    "start": "1715350",
    "end": "1722580"
  },
  {
    "text": "and then I'm gonna run new get restore so that's going to pull down all my new",
    "start": "1722580",
    "end": "1727650"
  },
  {
    "text": "get packages and put those in in that layer next I'm gonna copy and if you",
    "start": "1727650",
    "end": "1733230"
  },
  {
    "text": "look it says like copy current folder - C colon backslash source in the",
    "start": "1733230",
    "end": "1738660"
  },
  {
    "text": "context of docker when you do a copy it's actually this means copy",
    "start": "1738660",
    "end": "1744750"
  },
  {
    "text": "recursively the entire current folder so that that's gonna grab all of my source code all of my dot CSC sharp files my",
    "start": "1744750",
    "end": "1752880"
  },
  {
    "text": "views everything it's gonna copy all that stuff into the same working folder",
    "start": "1752880",
    "end": "1758340"
  },
  {
    "text": "and then it's gonna run msbuild which compiles it in release mode sets the output path and then finally once I've",
    "start": "1758340",
    "end": "1766020"
  },
  {
    "text": "got all that done I'm gonna create a new docker container using a different base image this one is pulling from asp.net",
    "start": "1766020",
    "end": "1774830"
  },
  {
    "text": "4.7 dot 2 that means it has a is it has asp.net already configured and I'm",
    "start": "1774830",
    "end": "1780030"
  },
  {
    "text": "pulling it for the latest one that Brian talked about the long-term support channel 2019 that's the container I",
    "start": "1780030",
    "end": "1786780"
  },
  {
    "text": "actually want to deploy the top one up there is a throwaway I'm just using it because I want msbuild",
    "start": "1786780",
    "end": "1792720"
  },
  {
    "text": "and NuGet and all that stuff but I don't want MS build in the container I deploy to my production environment because",
    "start": "1792720",
    "end": "1798750"
  },
  {
    "text": "it's just using up space it's extra code the container is bigger it's got a bigger attack surface so I don't want",
    "start": "1798750",
    "end": "1805650"
  },
  {
    "text": "that stuff in the container that actually gets deployed so all the way down to pound a p-- image the app image",
    "start": "1805650",
    "end": "1810960"
  },
  {
    "text": "comment that's to do the build in one container the output gets copied and I'm",
    "start": "1810960",
    "end": "1816330"
  },
  {
    "text": "gonna say from this lean down production container I'm gonna then set some",
    "start": "1816330",
    "end": "1822929"
  },
  {
    "text": "environment variables I'm gonna configure my website with some PowerShell commands in there basically",
    "start": "1822929",
    "end": "1828990"
  },
  {
    "text": "name it web app and tell IAS to run so once you get down oops yeah I really",
    "start": "1828990",
    "end": "1836580"
  },
  {
    "text": "can't see my can't see my mouse and then finally it's going to publish it's gonna copy everything that I had built up in",
    "start": "1836580",
    "end": "1843179"
  },
  {
    "text": "this build layer here it's gonna copy all that into that production container",
    "start": "1843179",
    "end": "1849630"
  },
  {
    "text": "and then that sort of the last layer so there ends up being like six or eight layers because every time I copy",
    "start": "1849630",
    "end": "1855540"
  },
  {
    "text": "something over that's a new layer in the docker container image so once you have",
    "start": "1855540",
    "end": "1862860"
  },
  {
    "text": "your docker file done you're gonna build build it so I'm gonna do docker you",
    "start": "1862860",
    "end": "1868740"
  },
  {
    "text": "still do docker build but the correct that's sort of going to be deprecated I think so you're supposed to do docker image build I can say what file I want",
    "start": "1868740",
    "end": "1877350"
  },
  {
    "text": "to use so my docker file is in the web folder and then dots so it's actually",
    "start": "1877350",
    "end": "1888300"
  },
  {
    "text": "telling docker to run all these steps it's it's just you can see it's actually running some of these commands it's",
    "start": "1888300",
    "end": "1894870"
  },
  {
    "text": "copying a bunch of stuff and that was",
    "start": "1894870",
    "end": "1903960"
  },
  {
    "text": "the actual compilation going on in the in the intermediate docker image and then finally it's doing the copy and",
    "start": "1903960",
    "end": "1913559"
  },
  {
    "text": "then it's yeah so that was it so it didn't take too long to do that I don't have the world's fastest laptop either",
    "start": "1913559",
    "end": "1920040"
  },
  {
    "text": "so once you've built the docker file the next steps are you're gonna tag it tagging it just associates it with the",
    "start": "1920040",
    "end": "1927570"
  },
  {
    "text": "repository where it's going to go I mean you can use tags for a lot of stuff in this case I'm going to tag it with the docker repository where I'm going to",
    "start": "1927570",
    "end": "1934170"
  },
  {
    "text": "push it to and then I'm gonna push it so tagging you can tag your image tag any",
    "start": "1934170",
    "end": "1939900"
  },
  {
    "text": "container image with slash prod you can add tags to them tagging is also it",
    "start": "1939900",
    "end": "1945420"
  },
  {
    "text": "reminds me a bit like and get if I assign a remote repo for get you know when I do a git push it knows where to",
    "start": "1945420",
    "end": "1951179"
  },
  {
    "text": "push it once I've tagged it and I do a dr. I push it's going to know where to push it rather than copying and pasting",
    "start": "1951179",
    "end": "1956730"
  },
  {
    "text": "I'm gonna go find the last place I tagged it and just scroll up a minute",
    "start": "1956730",
    "end": "1963890"
  },
  {
    "text": "maybe wow I did a lot of stuff since I last did this he ran around in it before",
    "start": "1963980",
    "end": "1969390"
  },
  {
    "text": "docker tag your dinner slash web latest that that long don't copy my account",
    "start": "1969390",
    "end": "1976920"
  },
  {
    "text": "name oh you know what let me make the font bigger here but if you want to copy",
    "start": "1976920",
    "end": "1983010"
  },
  {
    "text": "that account name oh yeah photograph would probably make it happen okay so",
    "start": "1983010",
    "end": "1988620"
  },
  {
    "text": "that's my AWS account number account ID but that's the URI of the container",
    "start": "1988620",
    "end": "1994110"
  },
  {
    "text": "registry where I'm gonna push it it's my account number dot DKR dot e CR because",
    "start": "1994110",
    "end": "2000080"
  },
  {
    "text": "that's the elastic container registry or ec2 container registry blah blah blah blah blah and then I'm gonna tag it with",
    "start": "2000080",
    "end": "2005810"
  },
  {
    "text": "latest because later when I tell UCS I want to run copies of that container I'm",
    "start": "2005810",
    "end": "2011540"
  },
  {
    "text": "gonna say run the latest although you could specify an earlier version if you wanted so now it's tagged I'm just gonna",
    "start": "2011540",
    "end": "2017600"
  },
  {
    "text": "push it up which eventually I could just",
    "start": "2017600",
    "end": "2024050"
  },
  {
    "text": "you'd be just fine where I did this or maybe it'd be quicker if I just did the",
    "start": "2024050",
    "end": "2030140"
  },
  {
    "text": "copy paste there we go so docker push it's the exact same long URI basically so when I push that in",
    "start": "2030140",
    "end": "2038930"
  },
  {
    "text": "this case I push this earlier so I'm just going to show you really quick though because it's all built in layers",
    "start": "2038930",
    "end": "2045200"
  },
  {
    "text": "and the biggest layer are is the OS layer and my app is really small even if",
    "start": "2045200",
    "end": "2050570"
  },
  {
    "text": "I go and change the app and I come into here and go to I don't know it's going",
    "start": "2050570",
    "end": "2057379"
  },
  {
    "text": "to the home controller and say I can't see my cursor there and say hello public",
    "start": "2057380",
    "end": "2071710"
  },
  {
    "text": "sector summit attendees alright save and",
    "start": "2071710",
    "end": "2080740"
  },
  {
    "text": "because I'm a good developer I always right-click and build before I push things up to production usually so I",
    "start": "2080740",
    "end": "2089570"
  },
  {
    "text": "think that Bill okay so I will flip back over we will do the docker build again",
    "start": "2089570",
    "end": "2096550"
  },
  {
    "text": "so it's gonna do the same thing exactly as before it's gonna create a container",
    "start": "2096550",
    "end": "2101660"
  },
  {
    "text": "from the base image it's gonna tell it's gonna do the MS build inside that",
    "start": "2101660",
    "end": "2106910"
  },
  {
    "text": "container take the output and put it in the production container that doesn't have MS build and you get and all those",
    "start": "2106910",
    "end": "2112940"
  },
  {
    "text": "things in it and I'm gonna push it again and it'll only push the difference that's gonna push just the layer that",
    "start": "2112940",
    "end": "2118910"
  },
  {
    "text": "changed and which will be very very quick even on the free Wi-Fi here in the convention so can you tell them to find",
    "start": "2118910",
    "end": "2126320"
  },
  {
    "text": "a little bit what a container registries are I mean it's a file share right and it's they're simple I can't quite hear",
    "start": "2126320",
    "end": "2132440"
  },
  {
    "text": "you yeah I was asking if you could say it cuz I can't you're a docker push okay so",
    "start": "2132440",
    "end": "2138380"
  },
  {
    "text": "that was so quick we didn't even see it happen okay so that that cop pushed up",
    "start": "2138380",
    "end": "2144290"
  },
  {
    "text": "and to prove it push up and to Brian's point a container registry is just a place now that image could be you know",
    "start": "2144290",
    "end": "2151250"
  },
  {
    "text": "in this case it's I don't know two gigabytes or something it could be a 5",
    "start": "2151250",
    "end": "2157160"
  },
  {
    "text": "gigabyte or something if it was based on the full Windows server OS that image",
    "start": "2157160",
    "end": "2162950"
  },
  {
    "text": "has to live somewhere where the place you're gonna run your containers needs to be able to get to it so a couple",
    "start": "2162950",
    "end": "2169190"
  },
  {
    "text": "common places are docker hub which is where even Microsoft will until recently kept their docker container images AWS I",
    "start": "2169190",
    "end": "2176060"
  },
  {
    "text": "believe we actually published some stuff on docker hub I'm not sure we have a in",
    "start": "2176060",
    "end": "2183440"
  },
  {
    "text": "your AWS account if you have an AWS account you already have a private container registry in your AWS account",
    "start": "2183440",
    "end": "2189530"
  },
  {
    "text": "called ECR so that's where I push when I did the docker or push I told it push this container in is just living in my",
    "start": "2189530",
    "end": "2196130"
  },
  {
    "text": "laptop up to ECR and so we'll go look at it right now this is ECR make that a little bigger if",
    "start": "2196130",
    "end": "2203720"
  },
  {
    "text": "I click on repositories' you can see I've got two repositories nerd dinner that's the database which is sequel",
    "start": "2203720",
    "end": "2210620"
  },
  {
    "text": "server Express container image and here's the one that we just built and pushed so if I go into here and look at",
    "start": "2210620",
    "end": "2217850"
  },
  {
    "text": "latest whoo you can see it says it was 611 2019 at 5:56 a.m. which I think",
    "start": "2217850",
    "end": "2228260"
  },
  {
    "text": "that's just a timezone issue also I'm doing all this in Oregon because I live in Portland Oregon I think I mentioned",
    "start": "2228260",
    "end": "2234740"
  },
  {
    "text": "that the beginning or maybe not I live in Oregon so I'm in the US West to Oregon region so I'm not sure how that",
    "start": "2234740",
    "end": "2240740"
  },
  {
    "text": "affects the time zone changes here but this will be the one that I just pushed up it's actually really small it's a 128",
    "start": "2240740",
    "end": "2248120"
  },
  {
    "text": "megabytes which is that that's just the latest the layer right let me see if I",
    "start": "2248120",
    "end": "2255620"
  },
  {
    "text": "can scroll over here yeah so the base",
    "start": "2255620",
    "end": "2261470"
  },
  {
    "text": "the base layer of this is over a gigabyte but the layer I just pushed was only 128",
    "start": "2261470",
    "end": "2267430"
  },
  {
    "text": "okay so once you've pushed this image up there how do you get in",
    "start": "2267430",
    "end": "2272870"
  },
  {
    "text": "ECS how do I get that to then deploy onto servers because somewhere there's still servers under the hood the hosts",
    "start": "2272870",
    "end": "2279080"
  },
  {
    "text": "well we're going to define a task definition which simply says I have",
    "start": "2279080",
    "end": "2284330"
  },
  {
    "text": "either one container or two containers one or more containers here's how much memory and CPU I want to allocate to",
    "start": "2284330",
    "end": "2291560"
  },
  {
    "text": "each container and then that's a task so let's go look at the task definition really quick so if I go to the task",
    "start": "2291560",
    "end": "2300410"
  },
  {
    "text": "definition I have some other ones in here because I've been doing other stuff I thought I'd I swear I thought I",
    "start": "2300410",
    "end": "2306740"
  },
  {
    "text": "deleted some of these but maybe jump in demos or we're gonna get out there - first and slides and then go into this",
    "start": "2306740",
    "end": "2312710"
  },
  {
    "text": "oh yeah okay we can do that yeah I think I'm jumping ahead pardon me",
    "start": "2312710",
    "end": "2318320"
  },
  {
    "text": "so I've got Brian here to keep me honest I can't see my cursor in this amazing",
    "start": "2318320",
    "end": "2324170"
  },
  {
    "text": "voice",
    "start": "2324170",
    "end": "2326349"
  },
  {
    "text": "Wow that was interesting okay everybody",
    "start": "2333710",
    "end": "2339230"
  },
  {
    "text": "can see my toast your notifications will remain quiet here while you're presenting thank you for notifying give that",
    "start": "2339230",
    "end": "2345970"
  },
  {
    "text": "alright so yeah I did jump ahead a little bit so these are the steps I was",
    "start": "2345970",
    "end": "2351050"
  },
  {
    "text": "trying to talk through where I actually right clicked and did the build in Visual Studio the docker file was",
    "start": "2351050",
    "end": "2357380"
  },
  {
    "text": "already there but we walked through it we oh I forgot to pull it up locally on",
    "start": "2357380",
    "end": "2362510"
  },
  {
    "text": "my machine do we have time ten minutes yeah yeah okay I could have pulled that up locally",
    "start": "2362510",
    "end": "2368330"
  },
  {
    "text": "on my own machine and showed you which I totally forgot we skipped ahead to push the container up to ECR which is already",
    "start": "2368330",
    "end": "2374840"
  },
  {
    "text": "there I am gonna just show you really quickly that you can actually run these things locally using a tool called",
    "start": "2374840",
    "end": "2381290"
  },
  {
    "text": "docker compose so I can say docker compose up and then dash D means",
    "start": "2381290",
    "end": "2390890"
  },
  {
    "text": "detached and then I think a period at the end I hope oops maybe no period",
    "start": "2390890",
    "end": "2403630"
  },
  {
    "text": "and done so it already booted up and launched both of those containers locally now with older versions of",
    "start": "2405710",
    "end": "2411830"
  },
  {
    "text": "Windows I'm gonna lose my voice to with older versions of Windows if you wanted",
    "start": "2411830",
    "end": "2417080"
  },
  {
    "text": "to then look at it locally you had to go inspect the container and get the IP address because it's got its own IP and",
    "start": "2417080",
    "end": "2423020"
  },
  {
    "text": "then use that but in Windows Server 29 Windows 10 18:09 they set up port",
    "start": "2423020",
    "end": "2429170"
  },
  {
    "text": "forwarding so my app is listening on port 80 20 so now that's automatically",
    "start": "2429170",
    "end": "2435340"
  },
  {
    "text": "port forwarded from localhost so all I have to do to look at this is go to localhost localhost colon 80 20 and",
    "start": "2435340",
    "end": "2448450"
  },
  {
    "text": "please come up might take a second alright the very first time you hit it is has to like spawn a process and okay",
    "start": "2449560",
    "end": "2457430"
  },
  {
    "text": "so there came up so I have some very real events in here like the chief nerd",
    "start": "2457430",
    "end": "2463310"
  },
  {
    "text": "dinner with Andy jassie anyone not know who Andy jesse is he's the CEO of AWS",
    "start": "2463310",
    "end": "2469840"
  },
  {
    "text": "like don't show up in Seattle for this because I made these up obviously so",
    "start": "2469840",
    "end": "2475400"
  },
  {
    "text": "this is actually hitting the sequel server which when I said docker compose it created in the docker compose file",
    "start": "2475400",
    "end": "2483170"
  },
  {
    "text": "which I'm using locally which apparently I don't have up nerd inner docker",
    "start": "2483170",
    "end": "2492050"
  },
  {
    "text": "compose there we go okay so docker",
    "start": "2492050",
    "end": "2498170"
  },
  {
    "text": "compose is just used I'm using it to run these locally it just sets up some networking and and tells me that this",
    "start": "2498170",
    "end": "2504620"
  },
  {
    "text": "container with the web app depends on the database container but the real app",
    "start": "2504620",
    "end": "2510620"
  },
  {
    "text": "is it's now up and running and it's hitting the asp.net up as one container and the sequel servers in the other",
    "start": "2510620",
    "end": "2517010"
  },
  {
    "text": "container and the Linux guys used to pick on us in Windows containers all the time because we couldn't hit localhost",
    "start": "2517010",
    "end": "2523790"
  },
  {
    "text": "well now we can huh who's the rest for that progress is",
    "start": "2523790",
    "end": "2529130"
  },
  {
    "text": "progress alright so back to the presentation I think we've got like seven and a half minutes so we're gonna",
    "start": "2529130",
    "end": "2535580"
  },
  {
    "text": "try to speed up a little bit so I talked about this already multi - age builds I have a throwaway middle",
    "start": "2535580",
    "end": "2542059"
  },
  {
    "text": "container that I use to actually do msbuild and NuGet but I don't want msbuild and NuGet and my source code in",
    "start": "2542059",
    "end": "2548149"
  },
  {
    "text": "the image I deploy why did they change the slides whoa what just happened sighs",
    "start": "2548149",
    "end": "2553489"
  },
  {
    "text": "we have seven minutes left over okay - the audio-video people we just lost our",
    "start": "2553489",
    "end": "2558979"
  },
  {
    "text": "presentation and something else came up",
    "start": "2558979",
    "end": "2562689"
  },
  {
    "text": "so what you should be seeing here is what you should be now there we go okay",
    "start": "2564999",
    "end": "2570380"
  },
  {
    "text": "thank you thank you Microsoft sequel server in a container this is useful I",
    "start": "2570380",
    "end": "2578359"
  },
  {
    "text": "think for me primarily for developer environments like if I have an app that I'm gonna run a bunch of smoke tests and",
    "start": "2578359",
    "end": "2584659"
  },
  {
    "text": "selenium apps on it and it has to have sequel server with a bunch of test data in there for my tests I can deploy just",
    "start": "2584659",
    "end": "2590929"
  },
  {
    "text": "as I just ran them locally I can deploy a container with my web app and a container with sequel server deploy them",
    "start": "2590929",
    "end": "2597019"
  },
  {
    "text": "together and then they can launch in five seconds I can run all my tests in the container get all the results and",
    "start": "2597019",
    "end": "2603169"
  },
  {
    "text": "then throw the whole thing away so that's a way to have reproducible tests by having sequel server in a container I",
    "start": "2603169",
    "end": "2609439"
  },
  {
    "text": "think Brian you're losing your voice did you want to talk about persistent I was just gonna try and say that you you",
    "start": "2609439",
    "end": "2616219"
  },
  {
    "text": "would probably use a regular sequel server for this instead of a container",
    "start": "2616219",
    "end": "2621669"
  },
  {
    "text": "introduction but there are areas where it may make sense to actually use a container instead of a production sequel",
    "start": "2621669",
    "end": "2627559"
  },
  {
    "text": "server but there are three ways to do it as far as saving the data and because",
    "start": "2627559",
    "end": "2633669"
  },
  {
    "text": "non-persistent otherwise and so that using pipes to pipe it down to the file",
    "start": "2633669",
    "end": "2639199"
  },
  {
    "text": "system is a standard way it's possible in Windows use a file share as well and my voice just is not alright well that's",
    "start": "2639199",
    "end": "2647329"
  },
  {
    "text": "okay so I don't think it's probably worth going and watching me do docker billdocker tag docker push again just",
    "start": "2647329",
    "end": "2654679"
  },
  {
    "text": "for the sequel server one I did do that already and I pushed it up to ECS so that it's already there",
    "start": "2654679",
    "end": "2661269"
  },
  {
    "text": "oops so ECS is the arcane one of our two container orchestration services the",
    "start": "2661269",
    "end": "2668179"
  },
  {
    "text": "other one is eks which is managed kubernetes which I believe have beta's support for windows in",
    "start": "2668179",
    "end": "2675589"
  },
  {
    "text": "kubernetes or is it Prague is prom we went GA with it so if you if you have expertise in kubernetes Cooper Nettie's",
    "start": "2675589",
    "end": "2682190"
  },
  {
    "text": "is a little more complicated there's more stuff to install set up and configure it's not trivial but you can",
    "start": "2682190",
    "end": "2688400"
  },
  {
    "text": "also run Windows Cooper windows containers in our manage kubernetes service ECS it's a bit easier we've had",
    "start": "2688400",
    "end": "2694700"
  },
  {
    "text": "support for Windows and UCS longer so it's it's a bit easier to do ECS the relies on an agent it runs the",
    "start": "2694700",
    "end": "2702530"
  },
  {
    "text": "NATO's Windows service includes docker 18.09083 2019 basically so the first",
    "start": "2702530",
    "end": "2712910"
  },
  {
    "text": "step to this is in ECS and i can show you this i think in a minute you build",
    "start": "2712910",
    "end": "2719240"
  },
  {
    "text": "the cluster oops and ECS a cluster is defined as the servers that your",
    "start": "2719240",
    "end": "2725119"
  },
  {
    "text": "containers are going to run on you can set scaling rules to automatically scale up the number of servers as your load goes up you may be",
    "start": "2725119",
    "end": "2731599"
  },
  {
    "text": "during the day you have eight but at night you might be down to just two one in each availability zone for highly",
    "start": "2731599",
    "end": "2737300"
  },
  {
    "text": "available apps right we already talked about the tasks that the task just says",
    "start": "2737300",
    "end": "2743390"
  },
  {
    "text": "these are the containers I want you don't have to learn any JSON for this we have a GUI that I'll show you in a",
    "start": "2743390",
    "end": "2749210"
  },
  {
    "text": "minute to define the tasks and then finally you create a service which is a long-running",
    "start": "2749210",
    "end": "2754839"
  },
  {
    "text": "instance of a task which is itself one or two or three containers and say this",
    "start": "2754839",
    "end": "2760970"
  },
  {
    "text": "is how I want them to be placed the rules I want you to follow and this is how I want you to scale those up and",
    "start": "2760970",
    "end": "2767480"
  },
  {
    "text": "down that's your task and for a traditional app I might only have one because a lot of our traditional apps",
    "start": "2767480",
    "end": "2773960"
  },
  {
    "text": "can't handle running multiple copies at the same time so if I switch back to the",
    "start": "2773960",
    "end": "2779569"
  },
  {
    "text": "console really quick just so you know this is actually the one the copy of this app that's up there and running on",
    "start": "2779569",
    "end": "2788079"
  },
  {
    "text": "ECS right now I deployed it earlier this morning and I actually have a load balancer in front of it because I have",
    "start": "2788079",
    "end": "2794420"
  },
  {
    "text": "two ec2 instances one in each of two availability zones and I deployed my",
    "start": "2794420",
    "end": "2800000"
  },
  {
    "text": "task one copy on each so I have a highly available nerd dinner app so",
    "start": "2800000",
    "end": "2805720"
  },
  {
    "text": "it's a very complicated app as you can see if I go into ECS we just talked",
    "start": "2805720",
    "end": "2812200"
  },
  {
    "text": "about the task definitions I'll go into the nerd dinner task let me up the font a bit here's the latest version of my",
    "start": "2812200",
    "end": "2819490"
  },
  {
    "text": "task I've gone through different versions because I was playing with some memory and CPU sizing under the hood it",
    "start": "2819490",
    "end": "2825880"
  },
  {
    "text": "is a giant JSON file but you don't have to know JSON you can come into the Builder and the main thing is it's it's",
    "start": "2825880",
    "end": "2836079"
  },
  {
    "text": "got these are the two containers that are in it it's got the nerd dinner web",
    "start": "2836079",
    "end": "2841210"
  },
  {
    "text": "container and an ERG dinner database I gave them each four gigs of RAM so",
    "start": "2841210",
    "end": "2850119"
  },
  {
    "text": "that's the task definition and finally the service here's my cluster Windows",
    "start": "2850119",
    "end": "2855130"
  },
  {
    "text": "Server 2019 I have one service define the nerd dinner service",
    "start": "2855130",
    "end": "2860220"
  },
  {
    "text": "it's got running right now two copies of it each copy is a task so I've got a web",
    "start": "2860220",
    "end": "2868750"
  },
  {
    "text": "server and a sequel server here and a web server in a sequel server here so it's highly available there's a load balancer in front anytime you want to",
    "start": "2868750",
    "end": "2876309"
  },
  {
    "text": "update this you just click update you can come in and change things I can pick",
    "start": "2876309",
    "end": "2881410"
  },
  {
    "text": "a different version of this if I wanted to rollback and I turned out that my newest push was bad I could pick an",
    "start": "2881410",
    "end": "2887260"
  },
  {
    "text": "older version and roll back to it there's a lot of stuff that you can configure with that I think we're about out of time which is why I'm trying to",
    "start": "2887260",
    "end": "2893020"
  },
  {
    "text": "rush through this so I'm gonna switch back really quick to wrap up",
    "start": "2893020",
    "end": "2898270"
  },
  {
    "text": "come on amazing oh yeah let's skip ahead to modernizing so ultimately you know if",
    "start": "2898270",
    "end": "2907359"
  },
  {
    "text": "you have unlimited resources and you have lots of developers with lots of free time you know if you can port your",
    "start": "2907359",
    "end": "2913510"
  },
  {
    "text": "app to dotnet core and break it apart there's that's the cleanest approach but",
    "start": "2913510",
    "end": "2919539"
  },
  {
    "text": "the reality is for a lot of enterprise apps that are running their asp.net they're on Windows there isn't they're",
    "start": "2919539",
    "end": "2925900"
  },
  {
    "text": "working fine and you don't have a really big need I mean your developers probably want to go and then rewrite it because",
    "start": "2925900",
    "end": "2930970"
  },
  {
    "text": "we always want to rewrite stuff but the reality is you might not have the resources to do that so one option you",
    "start": "2930970",
    "end": "2936220"
  },
  {
    "text": "can do to take advantage of things like immutability scalability reducing your licensing costs not as",
    "start": "2936220",
    "end": "2943270"
  },
  {
    "text": "much as running it on linux but still reducing them a lot is move to windows containers some of the other migration",
    "start": "2943270",
    "end": "2951550"
  },
  {
    "text": "strategies which I just talked about you can deploy them as they are at ec2 that's the least amount of work it's the",
    "start": "2951550",
    "end": "2957520"
  },
  {
    "text": "least amount of benefit financially you could containerize them in windows containers which is what we were doing",
    "start": "2957520",
    "end": "2962980"
  },
  {
    "text": "today and then finally the hardest one or the most work is going to be porting it to dotnet core breaking apart",
    "start": "2962980",
    "end": "2968920"
  },
  {
    "text": "monoliths creating lightweight Linux containers or even running some of them in lambda functions we have a feature",
    "start": "2968920",
    "end": "2975460"
  },
  {
    "text": "for ECS called Fargate where you don't even have any ec2 instances that you see you just push up your container and say",
    "start": "2975460",
    "end": "2982180"
  },
  {
    "text": "run five copies of that and you don't even there is no ec2 instance to worry about there's no that's Linux only",
    "start": "2982180",
    "end": "2988690"
  },
  {
    "text": "though so if you're doing dotnet core then that opens that up is a possibility but not having those services a",
    "start": "2988690",
    "end": "2993940"
  },
  {
    "text": "tremendous cost savings right you don't have to pay for instances running 24 hours a day okay all right",
    "start": "2993940",
    "end": "2999970"
  },
  {
    "text": "we're at your time thank you all for coming today we really appreciated it appreciated it I made that word up",
    "start": "2999970",
    "end": "3007760"
  }
]