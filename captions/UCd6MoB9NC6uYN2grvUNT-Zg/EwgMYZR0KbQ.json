[
  {
    "start": "0",
    "end": "121000"
  },
  {
    "text": "hi everyone thank you for attending today's webinar the webinar will begin shortly",
    "start": "7220",
    "end": "13340"
  },
  {
    "text": "hi everyone and welcome to work security and compliance for kubernetes all need to be less with",
    "start": "54480",
    "end": "60520"
  },
  {
    "text": "Atlassian and tag era when you join today's webinar you select to join either by phone call or your computer",
    "start": "60520",
    "end": "66160"
  },
  {
    "text": "audio if for any reason you would like to change your selection you can do so by accessing your audio pane in your",
    "start": "66160",
    "end": "71590"
  },
  {
    "text": "control panel also from this control panel you have the opportunity to submit questions to today's presenters by typing your",
    "start": "71590",
    "end": "77440"
  },
  {
    "text": "questions into the questions pane we will collect these and address them during the Q&A session at the end of",
    "start": "77440",
    "end": "82810"
  },
  {
    "text": "today's presentation if for any reason we could not get to your question we plan on responding to each of you",
    "start": "82810",
    "end": "87880"
  },
  {
    "text": "personally through email the decks will be available through SlideShare along with the recording of the webinar two to",
    "start": "87880",
    "end": "93280"
  },
  {
    "text": "three days after the conclusion of this presentation so keep an eye out for that email with that said my name is Carmen",
    "start": "93280",
    "end": "99070"
  },
  {
    "text": "Pucci I'm a principal solutions architect here at AWS and I'll be your speaker and moderator for today's webinar i'm joined with karthik",
    "start": "99070",
    "end": "105880"
  },
  {
    "text": "Prabhakar from Tai Guerra and Matt Whittington and Corey Johnston from Atlassian okay so let's get started so",
    "start": "105880",
    "end": "123610"
  },
  {
    "start": "121000",
    "end": "121000"
  },
  {
    "text": "modern application development so when we talk about modern application development we're essentially talking",
    "start": "123610",
    "end": "129459"
  },
  {
    "text": "about the new normal meaning more and more companies are increasingly global and products are and products are",
    "start": "129459",
    "end": "135519"
  },
  {
    "text": "completely digital cloud mobile big data social technologies have really impacted",
    "start": "135519",
    "end": "140650"
  },
  {
    "text": "application development and they're they're building new digital disruptions and forcing change even faster this is",
    "start": "140650",
    "end": "147910"
  },
  {
    "text": "really the new normal and this means that application leaders must splice essentially like a digital DNA if you",
    "start": "147910",
    "end": "154209"
  },
  {
    "text": "will into their culture processes and technologies to transform into top performing organizations and so and with",
    "start": "154209",
    "end": "161140"
  },
  {
    "text": "that there's this need for rapid innovation so to",
    "start": "161140",
    "end": "173840"
  },
  {
    "text": "be competitive you really need to innovate as as rapidly as possible and when it comes to this innovation yeah",
    "start": "173840",
    "end": "180080"
  },
  {
    "text": "and and you know going as quickly as possible and trying to stay competitive we talked about modernization and these",
    "start": "180080",
    "end": "185510"
  },
  {
    "text": "days modernizing your business applications it's really an inevitable aspect of doing business businesses want",
    "start": "185510",
    "end": "192110"
  },
  {
    "text": "to drive growth they want to accelerate their migrations with repeatable processes and patterns and they really",
    "start": "192110",
    "end": "198019"
  },
  {
    "text": "want to maximize the value as they modernize these applications because at the end of the day it's really about",
    "start": "198019",
    "end": "203269"
  },
  {
    "text": "speed and agility for the digital business and the faster they collect and analyze this feedback the quicker they",
    "start": "203269",
    "end": "209510"
  },
  {
    "text": "react for their customers and the more they can reduce their costs the more they can experimental new ideas and the",
    "start": "209510",
    "end": "215480"
  },
  {
    "text": "faster those ideas get the market the more successful they are so so at the end of this it's like what what does it",
    "start": "215480",
    "end": "220819"
  },
  {
    "text": "look like in real life and what are some options for you to modernize an application so so containers right so",
    "start": "220819",
    "end": "229160"
  },
  {
    "start": "227000",
    "end": "227000"
  },
  {
    "text": "containers to the rescue when it comes to you know how customers can accelerate application delivery while reducing",
    "start": "229160",
    "end": "234769"
  },
  {
    "text": "costs a very common approach nowadays is to leverage containers The Container story is especially compelling because",
    "start": "234769",
    "end": "241700"
  },
  {
    "text": "it allows customers to be more effective it allows them to be more agile containers provide that option deliver",
    "start": "241700",
    "end": "247880"
  },
  {
    "text": "applications quickly for the development and operations teams who are under pressure to adapt to the growing",
    "start": "247880",
    "end": "254000"
  },
  {
    "text": "business needs and businesses know that getting software products and services to market fan if you have faster",
    "start": "254000",
    "end": "260989"
  },
  {
    "text": "translates into that gained market share and using containers can help enterprises modernize these legacy",
    "start": "260989",
    "end": "266570"
  },
  {
    "text": "applications create cloud native net new applications that are essentially both scalable and agile so container",
    "start": "266570",
    "end": "273169"
  },
  {
    "text": "frameworks such as docker provide that standardized way to package applications including the code the runtime the",
    "start": "273169",
    "end": "279110"
  },
  {
    "text": "libraries and the run them across the entire software development lifecycle regardless of the environment and",
    "start": "279110",
    "end": "284330"
  },
  {
    "text": "gardener predicts that I think it's in 2020 more than 50% of the globe",
    "start": "284330",
    "end": "289520"
  },
  {
    "text": "organizations will be running containerized applications in production which is up from 20% today so the",
    "start": "289520",
    "end": "296960"
  },
  {
    "start": "296000",
    "end": "296000"
  },
  {
    "text": "benefits of containers right you've heard about them it's a hot topic right so what are some of the benefits the the",
    "start": "296960",
    "end": "302539"
  },
  {
    "text": "first one is this this defined as code right so containers packaged your code with the configuration file",
    "start": "302539",
    "end": "308030"
  },
  {
    "text": "and the dependencies that the application needs to run consistently in any environment when it comes to",
    "start": "308030",
    "end": "314150"
  },
  {
    "text": "microservices containers provide that process isolation it makes it very easy to break apart and run applications as",
    "start": "314150",
    "end": "320450"
  },
  {
    "text": "independent components called micro services and modern applications that are shifting to cloud native and micro",
    "start": "320450",
    "end": "326480"
  },
  {
    "text": "service architectures and containers are a perfect way to encapsulate these these individual pieces into portable units",
    "start": "326480",
    "end": "333070"
  },
  {
    "text": "automated testing and deployment so development methodologies are essentially really changing with",
    "start": "333070",
    "end": "339620"
  },
  {
    "text": "developers shifting to this agile method or DevOps and leveraging continuous integration and continuous deployment",
    "start": "339620",
    "end": "345680"
  },
  {
    "text": "systems or CIS CD and and because containers are lightweight and portable they make great vessels if you will to",
    "start": "345680",
    "end": "352430"
  },
  {
    "text": "wrap code up in order to push them through these new software pipelines the monitoring aspects you know containers",
    "start": "352430",
    "end": "359030"
  },
  {
    "text": "provide process isolation as I've said before that lets you do things like granularly set CPU and memory for better",
    "start": "359030",
    "end": "366020"
  },
  {
    "text": "use of compute resources and and also with that said it's important to think about your overall application level",
    "start": "366020",
    "end": "372440"
  },
  {
    "text": "monitoring and how you will ensure the overall health of your application is your containers spin up and down in the",
    "start": "372440",
    "end": "377450"
  },
  {
    "text": "dynamic environment and then lastly but but not least is the security and compliance controls because containers",
    "start": "377450",
    "end": "384229"
  },
  {
    "text": "help enforce an infrastructure as code mindset into your application lifecycle another benefit is at the security level",
    "start": "384229",
    "end": "390800"
  },
  {
    "text": "so you have the ability to set and version not just the container itself but but think about maybe you want to",
    "start": "390800",
    "end": "396890"
  },
  {
    "text": "you know set versions around the packages that make up your application and if you combine this with processes",
    "start": "396890",
    "end": "403220"
  },
  {
    "text": "like vulnerability scans of the container image and incorporating automated checks into your continuous",
    "start": "403220",
    "end": "408680"
  },
  {
    "text": "delivery workflow your security teams and your developer teams are about to start working together to ensure a high",
    "start": "408680",
    "end": "414140"
  },
  {
    "text": "level of security for your containerized application services I want to fast so",
    "start": "414140",
    "end": "422270"
  },
  {
    "start": "419000",
    "end": "419000"
  },
  {
    "text": "Amazon container services right so since 2014 AWS has launched more than 50 new",
    "start": "422270",
    "end": "427940"
  },
  {
    "text": "features and services to help developers better create and manage containers and the mission at AWS is to make you know",
    "start": "427940",
    "end": "435919"
  },
  {
    "text": "it the best place to build and run your modern applications for containers so the goal is to remove the",
    "start": "435919",
    "end": "441380"
  },
  {
    "text": "differentiated heavy lifting and your teams to basically have the ability to give new ideas off the ground and out",
    "start": "441380",
    "end": "447830"
  },
  {
    "text": "the door as well as making it easy to optimize your existing applications and customers love AWS container services",
    "start": "447830",
    "end": "454310"
  },
  {
    "text": "because it not only provides the broadest set of capabilities for them to manage their containerize applications",
    "start": "454310",
    "end": "460340"
  },
  {
    "text": "but it's also the easiest place for in their own containers so our services are deeply integrated with the AWS cloud so",
    "start": "460340",
    "end": "466070"
  },
  {
    "text": "you think about things like I am integration security VPC networking load balancing all surrounded by your def",
    "start": "466070",
    "end": "472850"
  },
  {
    "text": "pops workflow and your developer tools and it's a compelling story why customers like running containers on top of AWS and then when it comes to the",
    "start": "472850",
    "end": "483050"
  },
  {
    "start": "480000",
    "end": "480000"
  },
  {
    "text": "foundation right and having this as part of your application lifecycle a lot of times people talk about the monolith",
    "start": "483050",
    "end": "489470"
  },
  {
    "text": "versus microservices right and you know think about the monolith it's it's it's essentially that you know that thing",
    "start": "489470",
    "end": "495200"
  },
  {
    "text": "that's been sitting in your datacenter forever you know you might not necessarily know what it is or the people that build it don't necessarily",
    "start": "495200",
    "end": "501440"
  },
  {
    "text": "work here anymore but but you really want to think about how you can take that aspect of your application and you",
    "start": "501440",
    "end": "507950"
  },
  {
    "text": "want to think about how you can move towards a microservices architecture because it's really where micro services",
    "start": "507950",
    "end": "513260"
  },
  {
    "text": "help you build and deploy faster and you aren't running in that tightly coupled single service like you would be in that",
    "start": "513260",
    "end": "518960"
  },
  {
    "text": "legacy monolith people talk about how the cloud enables you to fail fast and quickly learn from your mistakes as you",
    "start": "518960",
    "end": "525320"
  },
  {
    "text": "experiment and the easiest kind of innovation is the kind that is to drive incremental change with lots of",
    "start": "525320",
    "end": "531710"
  },
  {
    "text": "experiments so the meaning it's much easier to do you know you know you know essentially have the ability to wait for",
    "start": "531710",
    "end": "538970"
  },
  {
    "text": "those innovations so you can learn fast or you want to go as quickly as possible so it's okay to fail it's okay to learn",
    "start": "538970",
    "end": "544730"
  },
  {
    "text": "from your mistakes because essentially you know by putting these pipelines in place and having the ability to you know",
    "start": "544730",
    "end": "550880"
  },
  {
    "text": "do a code check-in that will kick off a new environment it allows you to learn from your mistakes but then quickly",
    "start": "550880",
    "end": "556910"
  },
  {
    "text": "iterate and then deploy net new versions of the application right so if you have your teams that they're staffed",
    "start": "556910",
    "end": "562250"
  },
  {
    "text": "appropriately that that understand the pipelines and understand what it takes to actually push these aspects of your",
    "start": "562250",
    "end": "568580"
  },
  {
    "text": "application out into your environment it really helps them make decisions very rapidly and it allows them to",
    "start": "568580",
    "end": "574490"
  },
  {
    "text": "essentially you know put in place patterns that allow them to move these applications from that legacy",
    "start": "574490",
    "end": "579620"
  },
  {
    "text": "monolith into a micro services based architecture and essentially be a lot more scalable and I'll be able to react",
    "start": "579620",
    "end": "585500"
  },
  {
    "text": "to change at a quicker pace so when we talk about monitoring at the end of the",
    "start": "585500",
    "end": "591080"
  },
  {
    "start": "588000",
    "end": "588000"
  },
  {
    "text": "at the end user experience it's it's really important I always talk about this regardless of where you're running",
    "start": "591080",
    "end": "597260"
  },
  {
    "text": "right so if you're running in a legacy environment if you're running on top of ec2 if you're running in containers monitoring is always an important story",
    "start": "597260",
    "end": "603980"
  },
  {
    "text": "right because monitoring is that part where you're you're maintaining the reliability the availability the",
    "start": "603980",
    "end": "609530"
  },
  {
    "text": "performance of your application you need to think about collecting data from all parts of your application and you need",
    "start": "609530",
    "end": "615860"
  },
  {
    "text": "to think about how you can easily debug a multi-point failure if one occurs you",
    "start": "615860",
    "end": "621380"
  },
  {
    "text": "need to think about and you need to start answering questions again regardless if this is a container or not but specifically like what are your",
    "start": "621380",
    "end": "627890"
  },
  {
    "text": "goals and what resources will you monitor and how often are you gonna monger as resources and maybe what tools",
    "start": "627890",
    "end": "634130"
  },
  {
    "text": "are you going to use and who's going to actually perform the tasks and who's going to be notified when something goes",
    "start": "634130",
    "end": "639170"
  },
  {
    "text": "wrong very important questions you need to think about when monitoring your modernize applications or even your",
    "start": "639170",
    "end": "644270"
  },
  {
    "text": "legacy applications and then when it comes to the CI CD process right so you",
    "start": "644270",
    "end": "650480"
  },
  {
    "text": "know - people have been throwing the term CI CD around for a very long time now but when it comes to it you know just to sum it up it stands for",
    "start": "650480",
    "end": "656750"
  },
  {
    "text": "continuous integration and continuous deployment and customers who are modernizing their applications see the",
    "start": "656750",
    "end": "662120"
  },
  {
    "text": "tremendous benefit and tremendous value when incorporating CI CD and DevOps practices into that application",
    "start": "662120",
    "end": "668300"
  },
  {
    "text": "lifecycle so by incorporating automation and and really putting that cultural change of learning on how to integrate",
    "start": "668300",
    "end": "675980"
  },
  {
    "text": "frequently you know customers are able to address those bugs quicker they're able to improve software quality and",
    "start": "675980",
    "end": "681500"
  },
  {
    "text": "reduce the time it takes to validate and release new software updates and then",
    "start": "681500",
    "end": "687980"
  },
  {
    "start": "686000",
    "end": "686000"
  },
  {
    "text": "when it comes to - security you know if you again like just a touch on this like the security of your application you",
    "start": "687980",
    "end": "694640"
  },
  {
    "text": "really want to think about how you can secure the application but also how you can incorporate automation and detection",
    "start": "694640",
    "end": "701180"
  },
  {
    "text": "through the entire deployment process right so you want to try and find the you know or put something in place to",
    "start": "701180",
    "end": "707960"
  },
  {
    "text": "address blind spot without slowing down innovation because the innovation piece is kids I was talking about before so your security",
    "start": "707960",
    "end": "714290"
  },
  {
    "text": "teams or operations teams and your developers need to realize goals things like if you think about it's like how do",
    "start": "714290",
    "end": "719780"
  },
  {
    "text": "i embed security Knology into my data Bob's teams so they can secure those pipelines so they can design and",
    "start": "719780",
    "end": "726050"
  },
  {
    "text": "automate right and then at the same time they need to learn how to add you know embed essentially the application",
    "start": "726050",
    "end": "731270"
  },
  {
    "text": "development knowledge and automated tools and processes into those security teams so they can provide that security",
    "start": "731270",
    "end": "736730"
  },
  {
    "text": "at scale on the cloud all right if the end goal is essentially that you want this application to run you want to",
    "start": "736730",
    "end": "742550"
  },
  {
    "text": "ensure that you know the solutions are only working as intended and you want to make sure that you have the smallest",
    "start": "742550",
    "end": "747620"
  },
  {
    "text": "blast radius as possible and really you want to think about how you can do that through automation so with that said I",
    "start": "747620",
    "end": "754370"
  },
  {
    "text": "want to kick it over to the Atlantia Matt and Corey from Atlassian and they're going to tell you a little bit about their story of secure in their",
    "start": "754370",
    "end": "760370"
  },
  {
    "text": "path des WS thanks coming my name is",
    "start": "760370",
    "end": "765530"
  },
  {
    "text": "Corey Johnson I'm the cupid a DS platform team lead at Atlassian",
    "start": "765530",
    "end": "770020"
  },
  {
    "text": "next slide please so Atlassian we're all",
    "start": "778360",
    "end": "785660"
  },
  {
    "start": "779000",
    "end": "779000"
  },
  {
    "text": "about unleashing the potential of every team our team collaboration and productivity software helps teams to",
    "start": "785660",
    "end": "791300"
  },
  {
    "text": "organize discuss and complete shared work teams at more than 138 thousand customers across large and small",
    "start": "791300",
    "end": "797810"
  },
  {
    "text": "organizations including General Motors all Mart labs Bank of America Merrill Lynch lyft Verizon Spotify NASA all",
    "start": "797810",
    "end": "805790"
  },
  {
    "text": "these Atlassian's project tracking content creation and sharing and service management products to work better",
    "start": "805790",
    "end": "810860"
  },
  {
    "text": "together and to deliver quality results on time so continuous integration and",
    "start": "810860",
    "end": "818960"
  },
  {
    "start": "815000",
    "end": "815000"
  },
  {
    "text": "continuous deployment is moving table part of the software development lifecycle and naturally it's a big part of how we build software it's also a",
    "start": "818960",
    "end": "825830"
  },
  {
    "text": "service we offer to our customers to internally Atlassian uses bamboos when a",
    "start": "825830",
    "end": "830990"
  },
  {
    "text": "lousy apes are continuously built and deployed their products or services we've got a dedicated team which is",
    "start": "830990",
    "end": "836450"
  },
  {
    "text": "responsible for running the bamboo build to the entire company making a trivial for other teams to set up plans to build",
    "start": "836450",
    "end": "841940"
  },
  {
    "text": "and ship their apps in a compliant way with little friction to give you an idea of scale we do about 88,000 build today",
    "start": "841940",
    "end": "849310"
  },
  {
    "text": "we've also offered their pocket pipelines to the public where any developer hosting their coding bitbucket",
    "start": "849310",
    "end": "854570"
  },
  {
    "text": "can quickly self a build pipeline from a simple Yama file to continuously integrate build and deploy their coil so",
    "start": "854570",
    "end": "862760"
  },
  {
    "text": "while this is a fantastic service for developers at the end of the day for platform administrators like my team this represents arbitrary code execution",
    "start": "862760",
    "end": "869930"
  },
  {
    "text": "because when giving users how to do anything in these build environments and such running services like this on a",
    "start": "869930",
    "end": "876200"
  },
  {
    "text": "multi tentative platform like Cuba Nettie's means we take security really seriously and we'll have invested a lot",
    "start": "876200",
    "end": "881840"
  },
  {
    "text": "of time and effort into hiding our platform and limiting the blast craters any potential attack so",
    "start": "881840",
    "end": "892910"
  },
  {
    "start": "888000",
    "end": "888000"
  },
  {
    "text": "is a Cuban ease infrastructure technology team or kit push go as you can see from the picture of the hot na",
    "start": "892910",
    "end": "898730"
  },
  {
    "text": "named wet themed around Knight Rider our team's big hairy audacious goal as we",
    "start": "898730",
    "end": "904220"
  },
  {
    "text": "like to say that glass ian is feel that ultimately post 95 percent or more of all of the compute workloads of",
    "start": "904220",
    "end": "909530"
  },
  {
    "text": "Atlassian running on a containerization platform over the next three years so we",
    "start": "909530",
    "end": "914690"
  },
  {
    "text": "need to support a really diverse workload consisting of batch jobs and persistent services prior to a dream",
    "start": "914690",
    "end": "921230"
  },
  {
    "text": "forming there are a bunch of smaller product related teams each trying to run and manage containers themselves so Adam",
    "start": "921230",
    "end": "927350"
  },
  {
    "text": "was essentially spun up to deduplicate this effort and to offer kubernetes as a production grade service so other teams",
    "start": "927350",
    "end": "932960"
  },
  {
    "text": "don't have to do so we've got some really important requirements first of all self service again we want to",
    "start": "932960",
    "end": "940730"
  },
  {
    "text": "unleash the power of every developer so it needs to be trivial for developers to run their containers without leading our",
    "start": "940730",
    "end": "946190"
  },
  {
    "text": "team to set them up each time users shouldn't need to touch or see the underlying Ardwick we provide a",
    "start": "946190",
    "end": "952520"
  },
  {
    "text": "redundant multi-region platform and they can run on our stack wherever there is an Amazon presence the platform should",
    "start": "952520",
    "end": "959930"
  },
  {
    "text": "do the heavy lifting Club things like authentication and authorization logging monitoring compliance auto scaling cost",
    "start": "959930",
    "end": "967010"
  },
  {
    "text": "visibility and optimization dish we could all come out of the box so there's ultimately nothing for the users to",
    "start": "967010",
    "end": "972470"
  },
  {
    "text": "administer upgrade or maintain we want to get their services up and running as quickly as possible with no friction or",
    "start": "972470",
    "end": "978290"
  },
  {
    "text": "red tape so looking back since we spun up the team back in 2016 there been two",
    "start": "978290",
    "end": "983600"
  },
  {
    "text": "main work two main goals with focus on first of all in 2017 we focus on",
    "start": "983600",
    "end": "988610"
  },
  {
    "text": "migrating our job based or batch workloads from other container technologies across the kubernetes this",
    "start": "988610",
    "end": "994040"
  },
  {
    "text": "is predominantly CFI cd-based workloads driven by the bamboo or bitbucket pipelines then in 2018 once we",
    "start": "994040",
    "end": "1001450"
  },
  {
    "text": "had this workload moving on cube we've devoted to services workloads specifically but we've been working",
    "start": "1001450",
    "end": "1006790"
  },
  {
    "text": "closely without has seen our platform as a service team to help them to build their next generation of paths called",
    "start": "1006790",
    "end": "1013120"
  },
  {
    "text": "micros directly on top of communities up until that point app has essentially consisted of scheduled topic containers",
    "start": "1013120",
    "end": "1019780"
  },
  {
    "text": "running on dedicated ec2 instances with every service behind its own ylvie and",
    "start": "1019780",
    "end": "1025180"
  },
  {
    "text": "having an ASD that science so it worked really well but it's not as efficient or fast as we'd like it to be",
    "start": "1025180",
    "end": "1033418"
  },
  {
    "start": "1033000",
    "end": "1033000"
  },
  {
    "text": "so let's look at some of the challenges faced so where were we three years ago well pre AWS our team used to run a",
    "start": "1035220",
    "end": "1042610"
  },
  {
    "text": "customized on-prem contain a platform out of data since it was based on openvz and a lot",
    "start": "1042610",
    "end": "1049929"
  },
  {
    "text": "of silicon mechanics infrastructure in north american data centers now three years ago we had some serious obstacles",
    "start": "1049929",
    "end": "1055809"
  },
  {
    "text": "preventing us from scaling firstly a monolithic application architecture involved running a separate container",
    "start": "1055809",
    "end": "1062350"
  },
  {
    "text": "that each customer with his own database instance and a separate copy of each application that our customers wanted to",
    "start": "1062350",
    "end": "1067630"
  },
  {
    "text": "run so it wasn't efficient during off-peak periods when our customers would sleep their containers and the",
    "start": "1067630",
    "end": "1073480"
  },
  {
    "text": "underlying physical infrastructure stayed online and it couldn't shrink and it couldn't grow so upgrades are really",
    "start": "1073480",
    "end": "1079450"
  },
  {
    "text": "hard we developed really sleek upgrade processes but at the end of the day we needed downtime to physically stop each",
    "start": "1079450",
    "end": "1084730"
  },
  {
    "text": "customer environment upgrade the instance and restart but we optimized a process to the original for our outage",
    "start": "1084730",
    "end": "1091029"
  },
  {
    "text": "down but we are still ultimately scheduling rolling upgrades for hundreds of thousands of copies of applications",
    "start": "1091029",
    "end": "1096460"
  },
  {
    "text": "as you can imagine this doesn't scale and it's heavily prone to error this architecture meant that whenever we",
    "start": "1096460",
    "end": "1103659"
  },
  {
    "text": "wanted to grow a team would physically need to deploy new racks and data servers as you can imagine provisioning",
    "start": "1103659",
    "end": "1109779"
  },
  {
    "text": "typically took two to three pumps to negotiate contracts organize floor space like cabling Network links and then",
    "start": "1109779",
    "end": "1115690"
  },
  {
    "text": "install racks into the data centers this meant will limited managing a handful of physical sites we recognize that if we",
    "start": "1115690",
    "end": "1122799"
  },
  {
    "text": "want to grow our platform called cloud scale growth we'd need to switch to cloud native multi tentative application",
    "start": "1122799",
    "end": "1128110"
  },
  {
    "text": "architecture where a single instance of our apps could support thousands of customer workloads a true space",
    "start": "1128110",
    "end": "1134590"
  },
  {
    "text": "architecture which would remove the remove these choke points I mentioned and then it faster and cheaper for us to",
    "start": "1134590",
    "end": "1140470"
  },
  {
    "text": "scale as our business grew so let's",
    "start": "1140470",
    "end": "1147039"
  },
  {
    "text": "pause and take a look at three of the big challenges we face when implementing kubernetes firstly in communities",
    "start": "1147039",
    "end": "1153130"
  },
  {
    "text": "clusters there's a lot of east-west into cluster traffic between pods so traditional host or network based",
    "start": "1153130",
    "end": "1159130"
  },
  {
    "text": "security models and longer sufficient to these dynamic flows with pods or of thermal and often come",
    "start": "1159130",
    "end": "1164650"
  },
  {
    "text": "and go within minutes clothes need to be grounded and denied with much more granularity for example at a pod or at a",
    "start": "1164650",
    "end": "1171280"
  },
  {
    "text": "namespace level Huber Nettie's enables answers platform in administrators working with our security team to define",
    "start": "1171280",
    "end": "1177940"
  },
  {
    "text": "an ace line cluster security policy including for example default denies between neighboring tenants restricting",
    "start": "1177940",
    "end": "1184420"
  },
  {
    "text": "access to privileged ports such as the public port or the AOS metadata service but allowing access to authorized shared",
    "start": "1184420",
    "end": "1192250"
  },
  {
    "text": "services such as clustered a net end users in Heather how to grant or deny",
    "start": "1192250",
    "end": "1197740"
  },
  {
    "text": "additional flows on top of this bilaterally own custom policy on top so",
    "start": "1197740",
    "end": "1203110"
  },
  {
    "text": "having the capability to define and enforce policy is just to start today we manage more than 20 clusters the largest",
    "start": "1203110",
    "end": "1209830"
  },
  {
    "text": "being of fleet consisting of about 14,000 B CPU and 50 terabytes of RAM in peak several hundred of Amazon's biggest",
    "start": "1209830",
    "end": "1217870"
  },
  {
    "text": "boxes so with this many mateship machines it's important to be able to deploy changes quickly and transparently",
    "start": "1217870",
    "end": "1224650"
  },
  {
    "text": "across the entire fleet high gear technology updates each hosts IP tables",
    "start": "1224650",
    "end": "1229780"
  },
  {
    "text": "virtually instantly to enforce the policy we've defined it then handles the update we can push changes across the",
    "start": "1229780",
    "end": "1236500"
  },
  {
    "text": "entire fleet in met notes so kubernetes is inherently about multi-tenancy rather",
    "start": "1236500",
    "end": "1243820"
  },
  {
    "text": "than having dedicated servers for each of the spoke application it's about leveraging tools of hardware and multi-tenant in diverse workloads across",
    "start": "1243820",
    "end": "1250330"
  },
  {
    "text": "them doing this in a secure way requires a tenant's pods run side-by-side on the",
    "start": "1250330",
    "end": "1256510"
  },
  {
    "text": "same hardware to minimize costs and to consolidate hardware but we need to ensure they cannot access neighboring",
    "start": "1256510",
    "end": "1262600"
  },
  {
    "text": "workloads processes or data but there are isolated in other words so in this",
    "start": "1262600",
    "end": "1268180"
  },
  {
    "text": "way our workloads quite a bit different to other classes we've seen where there's an inherent trust between pods in our clusters it's often no trust for",
    "start": "1268180",
    "end": "1276070"
  },
  {
    "text": "example we've bit luck at pipelines enabling our customers to build and execute arbitrary code it's sooth'd really important that",
    "start": "1276070",
    "end": "1282310"
  },
  {
    "text": "customers can only access their own resources and stay within the confines of their own sandbox we need to ensure",
    "start": "1282310",
    "end": "1289090"
  },
  {
    "text": "that the various actors can't break out to the underlying host to the cluster or to other footbots so let's tickle Tanglers our",
    "start": "1289090",
    "end": "1300379"
  },
  {
    "start": "1295000",
    "end": "1295000"
  },
  {
    "text": "solution firstly we needed a cloud provider that had a global footprint so",
    "start": "1300379",
    "end": "1305539"
  },
  {
    "text": "enable us to stand up a local application stack in regions to minimize latency for the customer so we've gone",
    "start": "1305539",
    "end": "1311690"
  },
  {
    "text": "to having just two North American pots to having additional sites in Asia Pacific and Europe to make our apps more",
    "start": "1311690",
    "end": "1317239"
  },
  {
    "text": "responsive we needed a provider that went beyond basic infrastructure as a service and provided a rich portfolio of",
    "start": "1317239",
    "end": "1324529"
  },
  {
    "text": "managed services such as RDS dynamo ElastiCache so that we could stop having",
    "start": "1324529",
    "end": "1330019"
  },
  {
    "text": "to run these services ourselves we needed a part of the cookie scale so we could run down our infrastructure during",
    "start": "1330019",
    "end": "1336409"
  },
  {
    "text": "the quiet periods I mentioned before and ran it back up really quickly when our customers workload increased this",
    "start": "1336409",
    "end": "1341779"
  },
  {
    "text": "enables us to offer competitive pricing for our cloud products so looking back",
    "start": "1341779",
    "end": "1346969"
  },
  {
    "text": "broadly speaking our journey into the cloud and broke into two phases firstly the reality of our cloud products the",
    "start": "1346969",
    "end": "1353929"
  },
  {
    "text": "more native multi-tenant and SAS architectures leveraging containers which we wrapped up around 2016 and then",
    "start": "1353929",
    "end": "1361759"
  },
  {
    "text": "shifting our products across to docker running on ec2 and leveraging auto scaling this immediately helped us to",
    "start": "1361759",
    "end": "1367429"
  },
  {
    "text": "scale faster then second in 2017 once we've moved our $30",
    "start": "1367429",
    "end": "1372440"
  },
  {
    "text": "then came the shift to proven edits and optimizing the way that we orchestrate and running containers they needed to be",
    "start": "1372440",
    "end": "1378679"
  },
  {
    "text": "both faster for developers and cheaper to run so white a year on AWS well when",
    "start": "1378679",
    "end": "1389539"
  },
  {
    "text": "we started building a platform to support support our big hairy audacious goal as we like to say at Alaskan a",
    "start": "1389539",
    "end": "1395570"
  },
  {
    "text": "running ninety five percent or more of Atlassian's inspire compute workload on a cube container platform we realize",
    "start": "1395570",
    "end": "1402049"
  },
  {
    "text": "that security would be a huge focus for a team one of the key design tenants for securing our platform is around",
    "start": "1402049",
    "end": "1407749"
  },
  {
    "text": "defense-in-depth or incorporating multiple layers of defense to secure our network and to",
    "start": "1407749",
    "end": "1413299"
  },
  {
    "text": "minimize the blast radius of any potential attack so when implementing",
    "start": "1413299",
    "end": "1418519"
  },
  {
    "text": "defense-in-depth for the two platform we started by leveraging the fundamental capabilities of AWS using security",
    "start": "1418519",
    "end": "1423950"
  },
  {
    "text": "groups on ec2 instances to firewall instances such as a control plane and the kubernetes",
    "start": "1423950",
    "end": "1429020"
  },
  {
    "text": "worker nodes and using in general ACLs restrict Network subnets enabling BBC",
    "start": "1429020",
    "end": "1435320"
  },
  {
    "text": "flow logs comprehensively across our deployment gives us security and order teams insight into what's going on and a",
    "start": "1435320",
    "end": "1440840"
  },
  {
    "text": "packet level but then extending this we needed technology to implement kubernetes network policy as platform",
    "start": "1440840",
    "end": "1447590"
  },
  {
    "text": "admins we specified kubernetes they were policy to block cluster between different tenants for privacy reasons but allow traffic flow to shared",
    "start": "1447590",
    "end": "1454610"
  },
  {
    "text": "services like 14s we allow our end-users to layer on custom dynamic pod level",
    "start": "1454610",
    "end": "1461600"
  },
  {
    "text": "policies to protect their dynamic workloads so when we surveyed the market back in 2016 there was one clear winning",
    "start": "1461600",
    "end": "1468620"
  },
  {
    "text": "year they provided the technical capabilities we required and the leadership we needed a hero not only do",
    "start": "1468620",
    "end": "1474830"
  },
  {
    "text": "they provide a layer for network enforcement policy we needed but we also have the assurance they were committed",
    "start": "1474830",
    "end": "1480080"
  },
  {
    "text": "to testing it against the leading stacks in kubernetes for example in our case against Final which we use as our Sdn so",
    "start": "1480080",
    "end": "1491510"
  },
  {
    "start": "1488000",
    "end": "1488000"
  },
  {
    "text": "let's take a look at a few Bonetti safe much like our layered approach to security we designed activating stack is",
    "start": "1491510",
    "end": "1497600"
  },
  {
    "text": "a three layer cake with each layer building upon the output of the last as you can see the names Organa I managed",
    "start": "1497600",
    "end": "1504140"
  },
  {
    "text": "narrator no shame here so starting at the very bottom of the stack much like a",
    "start": "1504140",
    "end": "1509630"
  },
  {
    "text": "TV show where the flag is a foundation for Lauren government and the mobile garage for the keytar flag in our stack",
    "start": "1509630",
    "end": "1515900"
  },
  {
    "text": "is our foundation layer it contains all the base layer AWS company such as V PC networking security group and other",
    "start": "1515900",
    "end": "1523130"
  },
  {
    "text": "foundational quantity current bar moving up to the car layer again just like the",
    "start": "1523130",
    "end": "1528440"
  },
  {
    "text": "TV show our car is programmed for self-preservation this layer contains all the complete infrastructure used to",
    "start": "1528440",
    "end": "1535070"
  },
  {
    "text": "run given edits the control plan consisting auto scale API servers and EDD persistence saw as well as tools of",
    "start": "1535070",
    "end": "1542630"
  },
  {
    "text": "work nodes we use terraform to manage our confi this allows us to me another",
    "start": "1542630",
    "end": "1548480"
  },
  {
    "text": "design tenet immutable infrastructure or put another way to manage our infrastructure as cattle and not pets in",
    "start": "1548480",
    "end": "1556370"
  },
  {
    "text": "our previous on primal I spoke of earlier we used to manage individual servers repairing them whenever there was a",
    "start": "1556370",
    "end": "1562190"
  },
  {
    "text": "hardware or software fault and tending to them as pets where we knew the name of each one of them for the host name",
    "start": "1562190",
    "end": "1568279"
  },
  {
    "text": "but shifting to a mutable infrastructure paradigm we now treat ourselves as cattle easier those are probably one",
    "start": "1568279",
    "end": "1574070"
  },
  {
    "text": "loan we simply terminate it and replace it with a brand new instance terraform when combined with our CI pipeline",
    "start": "1574070",
    "end": "1580490"
  },
  {
    "text": "enables us to achieve this and easily reconciles the running side of the cluster with our desired configuration",
    "start": "1580490",
    "end": "1586100"
  },
  {
    "text": "can hold so when the second layer the car is complete with what everything in",
    "start": "1586100",
    "end": "1591200"
  },
  {
    "text": "place for a functional kubernetes api server so what's the life about lr3",
    "start": "1591200",
    "end": "1596539"
  },
  {
    "text": "we're moving up to Goliath the life contains all of the in cluster configuration to customize our Cuba",
    "start": "1596539",
    "end": "1601820"
  },
  {
    "text": "Nettie's cluster we use an ant book driven pipe i display our cluster config consisting of our back policy pod",
    "start": "1601820",
    "end": "1608659"
  },
  {
    "text": "security policy namespaces kubernetes network policy cluster services and all the other KHTML you'll need to customize",
    "start": "1608659",
    "end": "1615320"
  },
  {
    "text": "each cluster again it's managed by our CI pipeline no surprises were using Atlassian's",
    "start": "1615320",
    "end": "1620539"
  },
  {
    "text": "bamboo to building testers so we reduce the chance of untested code making its way into production that hasn't already",
    "start": "1620539",
    "end": "1625970"
  },
  {
    "text": "passed our pre deployment testing this helps us remote remain compliant by ensuring the because by peer review of",
    "start": "1625970",
    "end": "1632330"
  },
  {
    "text": "our changes complete and that they've had a green build prior to a production release i'm now going to hand over to",
    "start": "1632330",
    "end": "1639289"
  },
  {
    "text": "matt who's going to dive deeper into our security strategy hey everyone I'm Matt",
    "start": "1639289",
    "end": "1645860"
  },
  {
    "start": "1643000",
    "end": "1643000"
  },
  {
    "text": "I'm a senior engineer on the kid team here Atlassian so I'm gonna talk a bit more about exactly how we secure our",
    "start": "1645860",
    "end": "1652610"
  },
  {
    "text": "kubernetes clusters with AWS anti Garrow so as Corey mentioned our kubernetes",
    "start": "1652610",
    "end": "1658039"
  },
  {
    "text": "clusters run arbitrary user-provided code in our big bucket pipelines clusters these users and non Atlassian",
    "start": "1658039",
    "end": "1664190"
  },
  {
    "text": "and all of these customers code runs on the same pool of hardware inside a given cluster so this configuration provides a",
    "start": "1664190",
    "end": "1670549"
  },
  {
    "text": "big security risk for us to manage it increases the surface area that attackers can probe and increases the",
    "start": "1670549",
    "end": "1676309"
  },
  {
    "text": "likelihood that at any unpatched machine or other vulnerability can be exploited to gain unauthorized access to our",
    "start": "1676309",
    "end": "1681740"
  },
  {
    "text": "systems or data so naturally some pieces of Okuma Nettie's cluster require",
    "start": "1681740",
    "end": "1687020"
  },
  {
    "text": "elevated permissions to perform their job in a recorder of privilege from",
    "start": "1687020",
    "end": "1692059"
  },
  {
    "text": "highest to lowest the components go cetera D which is the persistent storage and source of truth for the cluster then",
    "start": "1692059",
    "end": "1698570"
  },
  {
    "text": "the API server which talks directly to etc D and manipulates the data in that then the rest of the control plan which",
    "start": "1698570",
    "end": "1705529"
  },
  {
    "text": "includes the controller manager and scheduler and they both talk to the API server then any core system services",
    "start": "1705529",
    "end": "1712009"
  },
  {
    "text": "that require some privilege like queue proxy or calico or core dns finally",
    "start": "1712009",
    "end": "1717559"
  },
  {
    "text": "there's the user code which uses the compute to perform arbitrary tasks this has the lowest priority of all the",
    "start": "1717559",
    "end": "1722720"
  },
  {
    "text": "components to capture these required levels of resource access we break our",
    "start": "1722720",
    "end": "1727850"
  },
  {
    "text": "community's workloads down into two broad categories privileged and restrict privileged workloads include all of the",
    "start": "1727850",
    "end": "1734570"
  },
  {
    "text": "system components I just mentioned restrictive workloads are all about user's code and then some of our own",
    "start": "1734570",
    "end": "1739789"
  },
  {
    "text": "that just doesn't require privilege these restricted workloads make up the majority of the code that runs in our",
    "start": "1739789",
    "end": "1745220"
  },
  {
    "text": "clusters we try to separate these two kinds of workload from each other on as many different layers as possible to",
    "start": "1745220",
    "end": "1751009"
  },
  {
    "text": "prevent the damage that could be done by an attacker as Corey mentioned earlier we designed our clusters using the",
    "start": "1751009",
    "end": "1757309"
  },
  {
    "text": "principle of defense in depth ideally we want to stop an attacker gaining access to any part of our system",
    "start": "1757309",
    "end": "1762559"
  },
  {
    "text": "full stop however over a long period of time the likelihood of a compromise still exists",
    "start": "1762559",
    "end": "1768080"
  },
  {
    "text": "to mitigate the potential impact of an attack up we have paid careful attention to network segmentation and where our",
    "start": "1768080",
    "end": "1774259"
  },
  {
    "text": "customers code actually runs inside the network so Network ACLs to block general cases of classes and cases of traffic EC",
    "start": "1774259",
    "end": "1782059"
  },
  {
    "text": "to security groups to ensure separation between discreet types of hosts and calico rules to dynamically enforce",
    "start": "1782059",
    "end": "1788570"
  },
  {
    "text": "layer 4 network policy to catch any finer grained requirements the Calico rules we use range from large and",
    "start": "1788570",
    "end": "1794600"
  },
  {
    "text": "sweeping like denying all restricted workloads from accessing the ec2 metadata service to small and specific",
    "start": "1794600",
    "end": "1800659"
  },
  {
    "text": "like denying particular pods of the ability to talk to the kubernetes api so we also pay careful attention to which",
    "start": "1800659",
    "end": "1807619"
  },
  {
    "text": "ec2 instances we allow these workloads to run on restricted workloads and not allowed to run on the same ec2 instances",
    "start": "1807619",
    "end": "1813860"
  },
  {
    "text": "as the control plane or any other core system workloads this reduces the chance of an attacker being able to escalate",
    "start": "1813860",
    "end": "1819529"
  },
  {
    "text": "their privileges or export rate sensitive data should they be able to break out of a container so now let's",
    "start": "1819529",
    "end": "1827029"
  },
  {
    "start": "1824000",
    "end": "1824000"
  },
  {
    "text": "examine whatever and host segmentation looks like in a bit more detail all of the segmentation",
    "start": "1827029",
    "end": "1832130"
  },
  {
    "text": "is done with the goal of keeping those privileged and restricted workloads as separated as possible so we have two",
    "start": "1832130",
    "end": "1838309"
  },
  {
    "text": "major network segments that make up each cluster the privileged subnets and the unprivileged subnets the privileged",
    "start": "1838309",
    "end": "1844700"
  },
  {
    "text": "subnets post all of the control plane components for the cluster this includes the kubernetes api server the etcetera d",
    "start": "1844700",
    "end": "1850970"
  },
  {
    "text": "that stores the persistent state for the cluster the in cluster core dns services and our monitoring and alerting tools",
    "start": "1850970",
    "end": "1857420"
  },
  {
    "text": "for the cluster the unprivileged subnets roam our users code and services and any",
    "start": "1857420",
    "end": "1863059"
  },
  {
    "text": "system demons that we run on all the boxes the biggest difference between privileged and unprivileged subnets is",
    "start": "1863059",
    "end": "1869270"
  },
  {
    "text": "their view of the LS in corporate network on our most secure clusters the unprivileged subnets cannot see any",
    "start": "1869270",
    "end": "1874880"
  },
  {
    "text": "services running elsewhere in Alaska this is accomplished by applying Network ACLs to those subnets and restricting",
    "start": "1874880",
    "end": "1880880"
  },
  {
    "text": "their route tables another important benefit of organizing our networks like this is that we can block code running",
    "start": "1880880",
    "end": "1886640"
  },
  {
    "text": "in the unprivileged subnets from being able to access anything inside the privileged subnets and then we can",
    "start": "1886640",
    "end": "1891710"
  },
  {
    "text": "whitelist any required exceptions this means we can allow the bare minimum interaction between untrusted code and",
    "start": "1891710",
    "end": "1897740"
  },
  {
    "text": "core system components for example we don't allow anything in the unprivileged subnets to talk directly to its set",
    "start": "1897740",
    "end": "1904130"
  },
  {
    "text": "radik as that would open up a high impact attack vector the kubernetes api",
    "start": "1904130",
    "end": "1909290"
  },
  {
    "text": "is only accessible via the controller lb which can only receive traffic from the corporate network this prevents any API",
    "start": "1909290",
    "end": "1915800"
  },
  {
    "text": "based attacks or abuse unless the attacker is already inside our network our services may only expose themselves",
    "start": "1915800",
    "end": "1922400"
  },
  {
    "text": "to cluster external networks via an HTTP or HTTPS port which can be accessed via",
    "start": "1922400",
    "end": "1927559"
  },
  {
    "text": "the ingress alb for the cluster inside this cluster services can talk to each other on other ports but restricted",
    "start": "1927559",
    "end": "1934550"
  },
  {
    "text": "workloads generally cannot talk to privileged workloads the separation is enforced by Calico rules console access to the nodes in the",
    "start": "1934550",
    "end": "1942650"
  },
  {
    "text": "cluster is provided by a set of jump boxes that live in a DMZ we can SSH into those jump boxes from",
    "start": "1942650",
    "end": "1948500"
  },
  {
    "text": "our corporate network after completing a two factor auth from there we can SSH home to any node in the cluster for",
    "start": "1948500",
    "end": "1954679"
  },
  {
    "text": "administration purposes connections from inside the cluster are not permitted outbound to the jump boxes at all",
    "start": "1954679",
    "end": "1961990"
  },
  {
    "text": "so despite all of the thought that's gone into designing our network to ensure that privileged and restricted",
    "start": "1963040",
    "end": "1968480"
  },
  {
    "text": "workloads stay separated at some point they do need to interact for example a restricted user building needs to access",
    "start": "1968480",
    "end": "1974720"
  },
  {
    "text": "the frugal entity and s workload to find out the IP address of the service they need this is where ty gear is a big part",
    "start": "1974720",
    "end": "1980930"
  },
  {
    "text": "of how we do things here at Atlassian we use Tokyo's calico to filter which workloads can talk to each other based",
    "start": "1980930",
    "end": "1986930"
  },
  {
    "text": "on various metadata within kubernetes workloads can be segregated by their communities namespace or by arbitrary",
    "start": "1986930",
    "end": "1993080"
  },
  {
    "text": "labels that we apply to them this will has a great degree of flexibility for our platform and lets us create the",
    "start": "1993080",
    "end": "1998420"
  },
  {
    "text": "simplest possible rules to create our clusters the security that we need there's a few rules of thumb that we use",
    "start": "1998420",
    "end": "2004510"
  },
  {
    "text": "when creating our network policy enforcement rule set all privileged workloads can talk to all other",
    "start": "2004510",
    "end": "2010000"
  },
  {
    "text": "privileged workloads without restriction restricted workloads can talk to privileged workloads but only on a",
    "start": "2010000",
    "end": "2015880"
  },
  {
    "text": "case-by-case and white listed basis by default restricted workloads are completely isolated from each other they",
    "start": "2015880",
    "end": "2022510"
  },
  {
    "text": "have to opt in to be able to talk to each other privileges workloads generally run in specific umbrella",
    "start": "2022510",
    "end": "2028150"
  },
  {
    "text": "namespaces so cube system is an example of a privileged namespace this is important because it allows us to",
    "start": "2028150",
    "end": "2034090"
  },
  {
    "text": "categorize what workloads broadly and reduce the amount of conflict that we have to manage workloads that listen on",
    "start": "2034090",
    "end": "2040780"
  },
  {
    "text": "host ports should be rare and when when they exist they should have their traffic filtered by both ec2 security",
    "start": "2040780",
    "end": "2046660"
  },
  {
    "text": "groups and calibre rules security groups cannot stop traffic looping back to a service running on the same box like the",
    "start": "2046660",
    "end": "2053230"
  },
  {
    "text": "cubelet for example so calico rules are used to provide defense-in-depth here having both allows us to be more",
    "start": "2053230",
    "end": "2058870"
  },
  {
    "text": "confident in our security some examples of rules that we have in place can be",
    "start": "2058870",
    "end": "2063940"
  },
  {
    "text": "seen in the diagram on the right known bad actors are not allowed to be contacted on egress from workloads",
    "start": "2063940",
    "end": "2070138"
  },
  {
    "text": "Goliath lets us keep a Goliath layer the Corey mentioned lets us keep an update list of bad actors which can be rendered",
    "start": "2070139",
    "end": "2076840"
  },
  {
    "text": "into Calico rules which have been deployed to our clusters restricted workloads cannot talk directly to the",
    "start": "2076840",
    "end": "2083080"
  },
  {
    "text": "AWS metadata service this is very important as access to the metadata service can allow an attacker to access",
    "start": "2083080",
    "end": "2089620"
  },
  {
    "text": "potentially sensitive resources hosted in AWS like s3 buckets it can also allow",
    "start": "2089620",
    "end": "2095679"
  },
  {
    "text": "escalation in certain high-risk clusters like bitbucket pipelines we ship",
    "start": "2095679",
    "end": "2101200"
  },
  {
    "text": "restrict we stop restricted workloads from talking to the DNS service at all just to remove potential attack and",
    "start": "2101200",
    "end": "2106720"
  },
  {
    "text": "discovery vectors all workloads have unrestricted access to private s3",
    "start": "2106720",
    "end": "2111910"
  },
  {
    "text": "buckets access control here is handled by AWS I am and bucket policies we don't want to stop our users accessing what",
    "start": "2111910",
    "end": "2118119"
  },
  {
    "text": "they should be able to access one big win that we've had the tag areas calico",
    "start": "2118119",
    "end": "2123280"
  },
  {
    "text": "is empowering our users to extend our global filtering rules with specific rules of our own so we order our",
    "start": "2123280",
    "end": "2129309"
  },
  {
    "text": "filtering rules in such a way that after the mandatory filtering is done customers can add new rules by a",
    "start": "2129309",
    "end": "2134650"
  },
  {
    "text": "kubernetes network policy objects to allow or deny traffic to the service their service as they require this way",
    "start": "2134650",
    "end": "2142270"
  },
  {
    "text": "we can cover any extent of security that our customers need for their workloads without having to be manually involved",
    "start": "2142270",
    "end": "2147760"
  },
  {
    "text": "our customers get multiple control over their service as security and they aren't dependent on us to make changes",
    "start": "2147760",
    "end": "2153160"
  },
  {
    "text": "on their behalf so some of the benefits",
    "start": "2153160",
    "end": "2161079"
  },
  {
    "start": "2157000",
    "end": "2157000"
  },
  {
    "text": "of tiger on AWS they'd help us improve our they've helped us stay agile",
    "start": "2161079",
    "end": "2166710"
  },
  {
    "text": "utilizing our Goliath layer to template out filtering rules for our clusters we can build into the Play updates to our",
    "start": "2166710",
    "end": "2172420"
  },
  {
    "text": "network policy configuration across all of our clusters in less than 20 minutes as in recently we have more than 20",
    "start": "2172420",
    "end": "2178930"
  },
  {
    "text": "clusters to manage so that's seriously quick the previously mentioned ability for teams to be able to control and",
    "start": "2178930",
    "end": "2184660"
  },
  {
    "text": "customize their own levels of security is another big win for company-wide agility if teams don't have to contact",
    "start": "2184660",
    "end": "2190420"
  },
  {
    "text": "us then they can do their job faster tige era has been used beyond the kid",
    "start": "2190420",
    "end": "2195760"
  },
  {
    "text": "team as well our network engineering team has used tiny rows calico to enforce export control and filter",
    "start": "2195760",
    "end": "2201640"
  },
  {
    "text": "traffic flows for services running on top of our old pass in that configuration each service runs on an",
    "start": "2201640",
    "end": "2207609"
  },
  {
    "text": "individual ec2 instance so allowing rules to propagate across that many boxes is quite impressive one real world",
    "start": "2207609",
    "end": "2216099"
  },
  {
    "text": "and real time example of how high gear as calico has helped us is in diffusing Bitcoin mining abuse on bitbucket",
    "start": "2216099",
    "end": "2221980"
  },
  {
    "text": "pipelines so one day the pipeline's team paged us into an incident room and alerted us to some potential Bitcoin",
    "start": "2221980",
    "end": "2228339"
  },
  {
    "text": "mining happening Casta minions later we had identified the command used by the offending bills",
    "start": "2228339",
    "end": "2234170"
  },
  {
    "text": "which contained the domain name of the Bitcoin mining pool we immediately moved to deny the IP",
    "start": "2234170",
    "end": "2239569"
  },
  {
    "text": "addresses associated with the domain name he's in calico rules after verifying that those rules blocked the",
    "start": "2239569",
    "end": "2245509"
  },
  {
    "text": "expected traffic and a development cluster we applied them to the production cluster via the Kuban that his API and the halt of the abuse",
    "start": "2245509",
    "end": "2251809"
  },
  {
    "text": "immediately this is a big win because without ty Giro we may have had to script a solution to the problem",
    "start": "2251809",
    "end": "2257690"
  },
  {
    "text": "dynamically this wouldn't likely be more error-prone and much slower so looking",
    "start": "2257690",
    "end": "2266119"
  },
  {
    "start": "2263000",
    "end": "2263000"
  },
  {
    "text": "ahead on our road map there's two main initiatives that we are working with ty Guerra our first and foremost is the",
    "start": "2266119",
    "end": "2272029"
  },
  {
    "text": "migration of our micro services on to our next gen pass powered by kubernetes this pass will enable every developer at",
    "start": "2272029",
    "end": "2278960"
  },
  {
    "text": "Atlassian to build and ship faster kubernetes enables faster iterations because deployments can be stood up in",
    "start": "2278960",
    "end": "2285109"
  },
  {
    "text": "seconds not the minutes it takes on our current paths individual ec2 instances take much longer to stand up and just",
    "start": "2285109",
    "end": "2291469"
  },
  {
    "text": "spinning up a new topic container on an existing kubernetes node so here is",
    "start": "2291469",
    "end": "2296479"
  },
  {
    "text": "helping us address application layer policy requirements for this next gen past all of the rules I mentioned",
    "start": "2296479",
    "end": "2302089"
  },
  {
    "text": "previously are done at the transport layer we do TCP and UDP filtering based on raw IP address ranges or on",
    "start": "2302089",
    "end": "2308960"
  },
  {
    "text": "kubernetes metadata that gets transformed dynamically into IP address ranges and lists by Calico as we",
    "start": "2308960",
    "end": "2315289"
  },
  {
    "text": "on-board more and more different types of workload our users requirements are increasing the need to define policy in",
    "start": "2315289",
    "end": "2320779"
  },
  {
    "text": "terms of application layer constructs so one example that comes up often is the ability to restrict access to external",
    "start": "2320779",
    "end": "2327170"
  },
  {
    "text": "non cluster resources by their domain name currently we're only able to block",
    "start": "2327170",
    "end": "2332210"
  },
  {
    "text": "the IP addresses associated with a domain name by enumerate them statically but looking at the application layer",
    "start": "2332210",
    "end": "2338119"
  },
  {
    "text": "will allow us to stay protected even if these IP addresses behind the domain change we've been working with ty",
    "start": "2338119",
    "end": "2344479"
  },
  {
    "text": "guerra to get these features ready for our next gen paths and satisfy our developers and security teams alike the",
    "start": "2344479",
    "end": "2351200"
  },
  {
    "text": "second exciting area we're working with on with Tahira is windows with windows containers gaining more and more",
    "start": "2351200",
    "end": "2357079"
  },
  {
    "text": "momentum in the containment ecosystem were also keen to support running Windows pods in our kubernetes cost",
    "start": "2357079",
    "end": "2363230"
  },
  {
    "text": "the main use case for this is that somewhat less Ian's teams would love to be able to use the same CI CD pipeline",
    "start": "2363230",
    "end": "2368960"
  },
  {
    "text": "and tooling they already use to build Windows binaries of our apps okay that's",
    "start": "2368960",
    "end": "2375920"
  },
  {
    "text": "it for me I'm gonna hand over to Catholic from tae Guerra now",
    "start": "2375920",
    "end": "2381190"
  },
  {
    "text": "well wonderful what a fantastic presentation by Matt and Corey",
    "start": "2383989",
    "end": "2390299"
  },
  {
    "text": "thanks Matt thanks Corey so I don't",
    "start": "2390299",
    "end": "2395549"
  },
  {
    "text": "think there's any way I can top that walk through that Korean Matt dead I mean come on they even have the half and",
    "start": "2395549",
    "end": "2402479"
  },
  {
    "text": "obviously the and kit and the team that they have their sister and they got managed to get it onto the slides which",
    "start": "2402479",
    "end": "2408569"
  },
  {
    "text": "is incredible believe it no they tried convincing our marketing folks that we should try and",
    "start": "2408569",
    "end": "2415229"
  },
  {
    "text": "get some perhaps a Baywatch themed slide deck but that was quickly next so all of",
    "start": "2415229",
    "end": "2422399"
  },
  {
    "text": "that said I want to just wrap things up here with a few things for you to consider so as you consider some of the",
    "start": "2422399",
    "end": "2433759"
  },
  {
    "start": "2430000",
    "end": "2430000"
  },
  {
    "text": "points that Matt and Korean made in their journey and you think about the",
    "start": "2433759",
    "end": "2438869"
  },
  {
    "text": "applicability clear own sort of migration to microservices leveraging kubernetes on AWS there are sort of",
    "start": "2438869",
    "end": "2445769"
  },
  {
    "text": "three fairly big and important questions that you need to ask yourself so firstly",
    "start": "2445769",
    "end": "2452489"
  },
  {
    "text": "and most importantly you know how do you secure your workloads when they're being",
    "start": "2452489",
    "end": "2457619"
  },
  {
    "text": "deployed in a very declarative and orchestrated platform like kubernetes",
    "start": "2457619",
    "end": "2463019"
  },
  {
    "text": "running in AWS and specifically as you look at micro services which are spinning up dynamically and increasingly",
    "start": "2463019",
    "end": "2470880"
  },
  {
    "text": "not just in a single cluster but increasingly with Canarian deployments spanning multiple clusters how do you",
    "start": "2470880",
    "end": "2476880"
  },
  {
    "text": "how do you enable your security in your policies for control to protect and",
    "start": "2476880",
    "end": "2484559"
  },
  {
    "text": "provide wrappers around these workloads which are now dynamic and the question you need to ask yourself is do you",
    "start": "2484559",
    "end": "2491069"
  },
  {
    "text": "sacrifice security for agility or do you compromise on agility in the name of",
    "start": "2491069",
    "end": "2496769"
  },
  {
    "text": "security right or like Atlassian have chosen is there a way that you can",
    "start": "2496769",
    "end": "2503519"
  },
  {
    "text": "codify your security policies and the corresponding actions and orchestrate",
    "start": "2503519",
    "end": "2510509"
  },
  {
    "text": "them and lockstep with your workloads and ultimately tie them to your workload",
    "start": "2510509",
    "end": "2516209"
  },
  {
    "text": "identity which is now very dynamic so is that is that something that you can consider the",
    "start": "2516209",
    "end": "2524190"
  },
  {
    "text": "second thing that you should ask yourself is how do you know that you secure you have the right visibility and",
    "start": "2524190",
    "end": "2531660"
  },
  {
    "text": "traceability tools to help you make sense of the raw data there is going to",
    "start": "2531660",
    "end": "2537960"
  },
  {
    "text": "be a lot of raw data coming at you when when we deal with the dynamic platform like kubernetes and in order to thwart",
    "start": "2537960",
    "end": "2545640"
  },
  {
    "text": "attacks or to respond to indicators of compromise or dealing with bad bad",
    "start": "2545640",
    "end": "2550650"
  },
  {
    "text": "actors like in the example that might be provided on the Bitcoin mining situation",
    "start": "2550650",
    "end": "2555900"
  },
  {
    "text": "how do you do you have the right level of visibility to make sense of what's going on so that you can automate some",
    "start": "2555900",
    "end": "2562440"
  },
  {
    "text": "of your security responses that you take and thirdly it's not just about knowing",
    "start": "2562440",
    "end": "2569850"
  },
  {
    "text": "that you're secure but how can you prove to others that you're secure and",
    "start": "2569850",
    "end": "2575300"
  },
  {
    "text": "specifically the thing to consider is how can you prove this to auditors and",
    "start": "2575300",
    "end": "2580760"
  },
  {
    "text": "especially for those of you who could need to ensure compliance",
    "start": "2580760",
    "end": "2586020"
  },
  {
    "text": "whether it is to various internal business controls or very often in",
    "start": "2586020",
    "end": "2592040"
  },
  {
    "text": "ensuring compliance to regulator controls how do you how do you prove to auditors that you are indeed secure and",
    "start": "2592040",
    "end": "2598830"
  },
  {
    "text": "to be able to do that in a continual basis in lockstep with new applications",
    "start": "2598830",
    "end": "2603960"
  },
  {
    "text": "rollouts because as you all know these days application rollouts happened by the second rather than every few weeks or",
    "start": "2603960",
    "end": "2610770"
  },
  {
    "text": "months which was the case years ago so really the consideration that you need",
    "start": "2610770",
    "end": "2616380"
  },
  {
    "text": "to look at is how do you ensure continuous compliance in lockstep with",
    "start": "2616380",
    "end": "2621930"
  },
  {
    "text": "CI CD right I'm not sure if CC has become a common term but ultimately this",
    "start": "2621930",
    "end": "2627720"
  },
  {
    "text": "is about ensuring continuous compliance even as your applications and micro services continuously are iterated so as",
    "start": "2627720",
    "end": "2636750"
  },
  {
    "text": "you consider those three questions I think it's also important to make sure that whatever solutions you you discover",
    "start": "2636750",
    "end": "2643860"
  },
  {
    "text": "that help you address those three challenges are also consumed in a as",
    "start": "2643860",
    "end": "2650070"
  },
  {
    "text": "native as possible within kubernetes an AWS so",
    "start": "2650070",
    "end": "2656060"
  },
  {
    "text": "ultimately this is really about ensuring that the tools that we use the solutions",
    "start": "2656060",
    "end": "2662250"
  },
  {
    "text": "that you use all work with the existing infrastructure the existing processes that we rely on and that you don't have",
    "start": "2662250",
    "end": "2668970"
  },
  {
    "text": "to go through any artificial axe to be able to integrate these students",
    "start": "2668970",
    "end": "2674480"
  },
  {
    "text": "so at tangora this is the problem that we focused on solving together with our",
    "start": "2674480",
    "end": "2679650"
  },
  {
    "text": "customers and partners such as Atlassian and interviewers to give you a little",
    "start": "2679650",
    "end": "2686670"
  },
  {
    "start": "2686000",
    "end": "2686000"
  },
  {
    "text": "bit of context here so as Matt and Cory pointed out tigrerra solution such as calico and",
    "start": "2686670",
    "end": "2693840"
  },
  {
    "text": "Tiger a secure which builds on top of calico tied into kubernetes and service mesh technologies",
    "start": "2693840",
    "end": "2699360"
  },
  {
    "text": "it's very deeply integrated with the base Orchestrator and we leveraged not",
    "start": "2699360",
    "end": "2704850"
  },
  {
    "text": "just the superficial information such as likely addresses and port numbers but a lot more detailed metadata that provides",
    "start": "2704850",
    "end": "2712350"
  },
  {
    "text": "the context for the application within the orchestrator and we leveraged this detailed metadata in in helping",
    "start": "2712350",
    "end": "2720420"
  },
  {
    "text": "operators make security decisions and to help them in orchestrating actions based",
    "start": "2720420",
    "end": "2727020"
  },
  {
    "text": "on policies that are defined and also in terms of how we report back and provide visibility not just at the wrong level",
    "start": "2727020",
    "end": "2734490"
  },
  {
    "text": "but the intelligence that is specific to the orchestrator part of that is also",
    "start": "2734490",
    "end": "2742980"
  },
  {
    "start": "2741000",
    "end": "2741000"
  },
  {
    "text": "making sure that when you have workloads running in kubernetes across one or more",
    "start": "2742980",
    "end": "2748080"
  },
  {
    "text": "clusters that you can also enable fine-grained access to not just other workloads running in the same cluster or",
    "start": "2748080",
    "end": "2754980"
  },
  {
    "text": "in kubernetes but also to workloads running outside of kubernetes as an",
    "start": "2754980",
    "end": "2760980"
  },
  {
    "text": "example we integrate secure we integrate very closely leveraging not just",
    "start": "2760980",
    "end": "2767520"
  },
  {
    "text": "concepts like network policy in kubernetes but also in terms of how we integrate that very seamlessly into the",
    "start": "2767520",
    "end": "2773610"
  },
  {
    "text": "rest of the infrastructure for example being able to ensure fine-grained policy control to say that certain pods a",
    "start": "2773610",
    "end": "2780660"
  },
  {
    "text": "certain tenants pods allowed access to that particular other services such as perhaps an AWS",
    "start": "2780660",
    "end": "2789020"
  },
  {
    "text": "RDS or elastic cash or the services or perhaps there are the external ec2",
    "start": "2789020",
    "end": "2794900"
  },
  {
    "text": "instances that these pods need to access but to ensure that pods running alongside them on the same node",
    "start": "2794900",
    "end": "2801970"
  },
  {
    "text": "belonging to a different application are belonging to a different tenant are not given that same access and that these",
    "start": "2801970",
    "end": "2809000"
  },
  {
    "text": "tenants and applications are isolated from each other and done so dynamically and this is where we've provided some",
    "start": "2809000",
    "end": "2816200"
  },
  {
    "text": "very deep integration working within amazon's wouldn't amazon partnership to",
    "start": "2816200",
    "end": "2821630"
  },
  {
    "text": "ensure that this works seamlessly with integrations with things like security drops ultimately the visibility for all",
    "start": "2821630",
    "end": "2831050"
  },
  {
    "start": "2829000",
    "end": "2829000"
  },
  {
    "text": "of this actions the policy actions the metadata the raw information can be consumed via native services such as AWS",
    "start": "2831050",
    "end": "2839030"
  },
  {
    "text": "cloud watch with additional detailed metadata and also detailed",
    "start": "2839030",
    "end": "2844790"
  },
  {
    "text": "interpretation of that metadata provided in a variety of ways including obviously with cloud watching cloud trail now this",
    "start": "2844790",
    "end": "2853130"
  },
  {
    "text": "is all fine and good when you want to consume the raw data but taking it one level beyond that Tiger has also been",
    "start": "2853130",
    "end": "2860810"
  },
  {
    "start": "2858000",
    "end": "2858000"
  },
  {
    "text": "focused on the notion of continuous compliance ultimately keep in mind that your workloads are being iterated and",
    "start": "2860810",
    "end": "2868820"
  },
  {
    "text": "changed dynamically and continuously and if you're doing a audit check once a",
    "start": "2868820",
    "end": "2877070"
  },
  {
    "text": "week or once a month which has been the case in you know historically keep in",
    "start": "2877070",
    "end": "2883010"
  },
  {
    "text": "mind your audit check is no longer accurate so this is red tiger have been focused on the notion of continuous",
    "start": "2883010",
    "end": "2889610"
  },
  {
    "text": "compliance where we keep a complete state of all policies and infrastructure",
    "start": "2889610",
    "end": "2895400"
  },
  {
    "text": "at any given time and together with that we correlate it with a complete view of all flow logs in terms of both allotted",
    "start": "2895400",
    "end": "2902330"
  },
  {
    "text": "denied floors including floors that were denied at the workload itself and",
    "start": "2902330",
    "end": "2907630"
  },
  {
    "text": "together with that raw metadata we correlate it with additional metadata from the base platform to be able to",
    "start": "2907630",
    "end": "2915110"
  },
  {
    "text": "allow you to generate dynamic come clients reports where you can pick any",
    "start": "2915110",
    "end": "2920549"
  },
  {
    "text": "instant in time and say at that given instant what was the state of compliance based on your definition of compliance",
    "start": "2920549",
    "end": "2927539"
  },
  {
    "text": "whether it is for internal business control or for regulatory reasons and to",
    "start": "2927539",
    "end": "2932720"
  },
  {
    "text": "be able to say that hey I that gave an instant what workloads were compliant by our",
    "start": "2932720",
    "end": "2939089"
  },
  {
    "text": "definition of compliance what workloads were trying to violate policy what were the policy violation",
    "start": "2939089",
    "end": "2944640"
  },
  {
    "text": "attempts and what does that mean whether any security anomalies I indicate is a compromise and to give you additional",
    "start": "2944640",
    "end": "2951299"
  },
  {
    "text": "intelligence based on that based on correlating it with additional metadata and deeper statistical analysis that we",
    "start": "2951299",
    "end": "2958109"
  },
  {
    "text": "do so really to wrap things up I want to",
    "start": "2958109",
    "end": "2963240"
  },
  {
    "start": "2959000",
    "end": "2959000"
  },
  {
    "text": "leave you with a few thoughts right so as you consider migrating to a new environment that provides the agile",
    "start": "2963240",
    "end": "2970380"
  },
  {
    "text": "application delivery and deployment platform with kubernetes on AWS keep in",
    "start": "2970380",
    "end": "2975390"
  },
  {
    "text": "mind that your workloads now a moving to very declarative and dynamic pattern in",
    "start": "2975390",
    "end": "2981539"
  },
  {
    "text": "this sort of a dynamic micro-services environment it is incredibly important",
    "start": "2981539",
    "end": "2986670"
  },
  {
    "text": "to now leverage a strong identity and combine that with a defense in depth",
    "start": "2986670",
    "end": "2992760"
  },
  {
    "text": "posture leveraging concepts like network policy and application policy that are",
    "start": "2992760",
    "end": "2998339"
  },
  {
    "text": "now all codified and enable you to allow your workloads to move around between",
    "start": "2998339",
    "end": "3005390"
  },
  {
    "text": "clusters enabling for example scenario deployments of blue grain deployments but to make sure that your security",
    "start": "3005390",
    "end": "3012079"
  },
  {
    "text": "policies can follow your applications as they get deployed within different",
    "start": "3012079",
    "end": "3018529"
  },
  {
    "text": "clusters secondly to make sure that you have detailed traceability in visibility",
    "start": "3018529",
    "end": "3024490"
  },
  {
    "text": "via a native AWS constructs for decode raw visibility of things like flow logs",
    "start": "3024490",
    "end": "3031579"
  },
  {
    "text": "and policy metrics and together with that being able to make sense of that",
    "start": "3031579",
    "end": "3037069"
  },
  {
    "text": "raw data so that your policy is both at the network level and the application level can be enforced at multiple points",
    "start": "3037069",
    "end": "3044480"
  },
  {
    "text": "of enforcement really providing a defense-in-depth posture obviously",
    "start": "3044480",
    "end": "3050430"
  },
  {
    "text": "as you get to applications and infrastructure which has been defined as code you really want your security",
    "start": "3050430",
    "end": "3057300"
  },
  {
    "text": "policies to also be codified but in addition to just the policies being codified themselves I think most",
    "start": "3057300",
    "end": "3064290"
  },
  {
    "text": "organizations today if you're relying on manual human intervention to respond to all security threats you are going to be",
    "start": "3064290",
    "end": "3072000"
  },
  {
    "text": "heavily heavily overloaded and overworked so really you want to focus in on how can you automate as much of",
    "start": "3072000",
    "end": "3078569"
  },
  {
    "text": "your security actions as well together with your policy controls and from that",
    "start": "3078569",
    "end": "3087359"
  },
  {
    "text": "perspective ultimately base elements of the security operations and elements of",
    "start": "3087359",
    "end": "3094200"
  },
  {
    "text": "what going to your sock I think it things like incident response and the workflows you take with that can be",
    "start": "3094200",
    "end": "3099839"
  },
  {
    "text": "automated in lockstep with networking application policies and these are all",
    "start": "3099839",
    "end": "3104849"
  },
  {
    "text": "constructs that really been focused on and helping our customers solve there's",
    "start": "3104849",
    "end": "3110940"
  },
  {
    "text": "two main solutions that we we focus on at Agera building on top of calico but",
    "start": "3110940",
    "end": "3117809"
  },
  {
    "text": "focused on the more advanced network security work flows from operations and organizational perspective there's a",
    "start": "3117809",
    "end": "3124230"
  },
  {
    "text": "tiger a secure Enterprise Edition and there's a tiger secure cloud edition",
    "start": "3124230",
    "end": "3129920"
  },
  {
    "text": "both are fully certified and work very closely with both self-managed",
    "start": "3129920",
    "end": "3135780"
  },
  {
    "text": "kubernetes clusters on AWS as well as the hosted kubernetes clusters on AWS",
    "start": "3135780",
    "end": "3141299"
  },
  {
    "text": "dks as as a quick reward for you",
    "start": "3141299",
    "end": "3146760"
  },
  {
    "text": "attending this webinar we have a chromophore tiger a secure client edition and please do try this out it is",
    "start": "3146760",
    "end": "3154650"
  },
  {
    "text": "fairly easy to get started but do reach out to us as well with any of the links mentioned we'd love to collaborate with",
    "start": "3154650",
    "end": "3161549"
  },
  {
    "text": "you and look forward to getting your feedback and collaborating with you moving forward thank you so much for",
    "start": "3161549",
    "end": "3168089"
  },
  {
    "text": "your time and with that I'll hand it back to our hosts for the for the afternoon yeah awesome",
    "start": "3168089",
    "end": "3175770"
  },
  {
    "text": "so thank you Karthik Matt and Cory what we're going to do now is we're going to hop into our live Q&A as a reminder",
    "start": "3175770",
    "end": "3184230"
  },
  {
    "text": "the attendees on the webinar you'll be able to submit any written questions through the questions panel and in the",
    "start": "3184230",
    "end": "3190380"
  },
  {
    "text": "event that we aren't able to answer your questions today we'll follow up with everyone individually via email on there",
    "start": "3190380",
    "end": "3195750"
  },
  {
    "text": "were a couple of questions around will the slides be available will this video be you know available and I addressed",
    "start": "3195750",
    "end": "3201780"
  },
  {
    "text": "that earlier but I'll just reinstate it just real quick yes the slides will be available in about two to three days and",
    "start": "3201780",
    "end": "3207180"
  },
  {
    "text": "the video will be out as well so you can definitely check it out again and send it to your teams so with that said I kind of want to you",
    "start": "3207180",
    "end": "3214619"
  },
  {
    "text": "know jump into this really quick with the limited time so Karthik one of the questions that's that's popped up is",
    "start": "3214619",
    "end": "3220950"
  },
  {
    "text": "essentially around like you know a customer has teams that with various",
    "start": "3220950",
    "end": "3226410"
  },
  {
    "text": "different needs at the network security level how do you address the needs of different teams when your security",
    "start": "3226410",
    "end": "3232200"
  },
  {
    "text": "policies affect their workflows oh that's so that's a great question that sounds so it's very much in line with",
    "start": "3232200",
    "end": "3240480"
  },
  {
    "text": "one of the key areas that we have been focused on which is that look when you look at platforms like kubernetes and",
    "start": "3240480",
    "end": "3246869"
  },
  {
    "text": "how it is allows developers and individual application owners to define",
    "start": "3246869",
    "end": "3251940"
  },
  {
    "text": "their own policies that's great but when you look at your wall deployments often organizations have a need to say that",
    "start": "3251940",
    "end": "3258150"
  },
  {
    "text": "that's great that applications can define their own fine-grained policies but will need as a security operator as",
    "start": "3258150",
    "end": "3264660"
  },
  {
    "text": "a network operations team as a cloud platform team we're going to need",
    "start": "3264660",
    "end": "3270240"
  },
  {
    "text": "additional controls that we need to bound these individual application developer policies and so from that",
    "start": "3270240",
    "end": "3277500"
  },
  {
    "text": "perspective tigerair securer has built out a very nicely integrated set of controls that",
    "start": "3277500",
    "end": "3283950"
  },
  {
    "text": "we call hierarchical policy tiers which allow an operator to supersede the",
    "start": "3283950",
    "end": "3289770"
  },
  {
    "text": "developer policies with other policies that take higher precedence and allowing",
    "start": "3289770",
    "end": "3296580"
  },
  {
    "text": "an operator to isolate individual applications and tenants from each other but also to be able to insert and inject",
    "start": "3296580",
    "end": "3303140"
  },
  {
    "text": "rules whether it gets to thwart an attack occur at a finer grained level or",
    "start": "3303140",
    "end": "3308280"
  },
  {
    "text": "whether it is for monitoring and visibility and these are policies that are then tied in to organizational roles",
    "start": "3308280",
    "end": "3316740"
  },
  {
    "text": "by our back so this gives a great facility to codify not just your individual policy rules",
    "start": "3316740",
    "end": "3322299"
  },
  {
    "text": "but to also codify some of your security and visibility practices that you need to look at how you operate the cluster",
    "start": "3322299",
    "end": "3330279"
  },
  {
    "text": "introduction so it encourage folks to come take a look at tigeress appear and this is actually a feature that we have",
    "start": "3330279",
    "end": "3336160"
  },
  {
    "text": "as a differentiating feature and in the product and something that we'd be happy to engage with you one further cool",
    "start": "3336160",
    "end": "3344039"
  },
  {
    "text": "another one for you as well excuse me you know for for customers that are",
    "start": "3344039",
    "end": "3350200"
  },
  {
    "text": "adopting service mesh on kubernetes and trying to enable and trying to decide",
    "start": "3350200",
    "end": "3355390"
  },
  {
    "text": "where they need to enable a security policy this tige have any best practice",
    "start": "3355390",
    "end": "3360880"
  },
  {
    "text": "or recommendations around this how can you guys help me III think that's a great question Kia for a future webinar",
    "start": "3360880",
    "end": "3366640"
  },
  {
    "text": "as well so Tiger has been very involved in service mesh technologies from the early days and as an example we've been",
    "start": "3366640",
    "end": "3373930"
  },
  {
    "text": "very involved in service mesh technologies which are increasingly gaining mindshare such as sto and also",
    "start": "3373930",
    "end": "3380410"
  },
  {
    "text": "others and so from Tiger s perspective we have continuously innovated with",
    "start": "3380410",
    "end": "3387640"
  },
  {
    "text": "calico hood to unify policies not just at the kubernetes and network policy",
    "start": "3387640",
    "end": "3392890"
  },
  {
    "text": "layer but to also include application policies leveraging work that is happening in service mesh technologies",
    "start": "3392890",
    "end": "3400150"
  },
  {
    "text": "leveraging sidecar proxies like the Envoy Roxy but together with that we've also been very focused on the concept of",
    "start": "3400150",
    "end": "3406750"
  },
  {
    "text": "workload identity and specifically in how you can leverage a cryptographic",
    "start": "3406750",
    "end": "3411789"
  },
  {
    "text": "identity that is being assigned to a workload in policy enforcement and the",
    "start": "3411789",
    "end": "3416799"
  },
  {
    "text": "concept being that as you know workloads move around between clusters and as you get to Canary deployments how your",
    "start": "3416799",
    "end": "3422770"
  },
  {
    "text": "policies really follow your workloads and this is an area of a kegger has been working very closely with in the",
    "start": "3422770",
    "end": "3428170"
  },
  {
    "text": "upstream kubernetes and service mesh communities in enabling this dynamic",
    "start": "3428170",
    "end": "3433329"
  },
  {
    "text": "concept of security policies with workload identity so again a great topic that we can dive into a deeper or",
    "start": "3433329",
    "end": "3440049"
  },
  {
    "text": "perhaps follow up with us when we can give you more color I'm gonna cool so",
    "start": "3440049",
    "end": "3445270"
  },
  {
    "text": "that this one actually is also for you and there was another question in there so I'm going to kind of",
    "start": "3445270",
    "end": "3450770"
  },
  {
    "text": "sum them up right but it's around PCI compliance and visibility so so you know",
    "start": "3450770",
    "end": "3456380"
  },
  {
    "text": "if a customer needs to see the network flow you know and what's essentially denied at the pod level are there ways",
    "start": "3456380",
    "end": "3463760"
  },
  {
    "text": "to address this and then at the same time - one of the questions is do you do you have any pre-configured rules that",
    "start": "3463760",
    "end": "3469310"
  },
  {
    "text": "help them achieve PCI compliance like how does that work no great questions yeah PCI is one one",
    "start": "3469310",
    "end": "3476390"
  },
  {
    "text": "of common compliance framework that we get a lot of interest from our customer base there's a number of other",
    "start": "3476390",
    "end": "3481520"
  },
  {
    "text": "compliance frameworks each tend to have a slightly different requirements in terms of network compliance reporting as",
    "start": "3481520",
    "end": "3488660"
  },
  {
    "text": "well as the controls that would need to be put in place in each of these cases ultimately what were is a fundamental",
    "start": "3488660",
    "end": "3496250"
  },
  {
    "text": "requirement is to be able to provide detailed visibility and to not just provide that visibility but to be able",
    "start": "3496250",
    "end": "3502760"
  },
  {
    "text": "to generate that proof dynamically saying that at any given instant",
    "start": "3502760",
    "end": "3508330"
  },
  {
    "text": "explained and sure you know in an audit report that can be generated dynamically",
    "start": "3508330",
    "end": "3513980"
  },
  {
    "text": "what be compliance posture is specifically what workloads which were",
    "start": "3513980",
    "end": "3520370"
  },
  {
    "text": "part of that need to meet PCI compliance what were the state of the workloads",
    "start": "3520370",
    "end": "3526610"
  },
  {
    "text": "what when the state had the flow is happening with these workloads - other workloads within the infrastructure and",
    "start": "3526610",
    "end": "3531950"
  },
  {
    "text": "to be able to report on that dynamically so ultimately at Agora in Tiger a CTO we",
    "start": "3531950",
    "end": "3538160"
  },
  {
    "text": "captured that legal metadata we capture the detail visibility we also correlate",
    "start": "3538160",
    "end": "3543260"
  },
  {
    "text": "that with other pieces of metadata but ultimately what we enable operators to",
    "start": "3543260",
    "end": "3548810"
  },
  {
    "text": "do is to be able to generate dynamic compliance reports that that operators",
    "start": "3548810",
    "end": "3555500"
  },
  {
    "text": "of infrastructure and applications on kubernetes in AWS can consume via cloud",
    "start": "3555500",
    "end": "3561140"
  },
  {
    "text": "watching Cloud trail together with templates to report on things like PCI",
    "start": "3561140",
    "end": "3566390"
  },
  {
    "text": "compliance obviously these can be customized based on the specific circumstances and cluster but we provide",
    "start": "3566390",
    "end": "3573050"
  },
  {
    "text": "a number of common templates to help operators and application owners get started awesome awesome awesome thank",
    "start": "3573050",
    "end": "3580580"
  },
  {
    "text": "you so so on that note we're going to wrap up today's webinar just one final reminder you will receive",
    "start": "3580580",
    "end": "3586610"
  },
  {
    "text": "an email within the next two or three days with a link to these slides on SlideShare and the recording of today's webinar we want to thank you very very",
    "start": "3586610",
    "end": "3593240"
  },
  {
    "text": "much for attending and thank you for taking the time today if you have any other questions please don't hesitate to",
    "start": "3593240",
    "end": "3598880"
  },
  {
    "text": "reach out so with that said thank you to Matt and Corey from Atlassian thank you from Arctic from Nigeria and thank you",
    "start": "3598880",
    "end": "3605510"
  },
  {
    "text": "to you for attending um thanks all",
    "start": "3605510",
    "end": "3609310"
  },
  {
    "text": "[Music]",
    "start": "3611970",
    "end": "3614220"
  }
]