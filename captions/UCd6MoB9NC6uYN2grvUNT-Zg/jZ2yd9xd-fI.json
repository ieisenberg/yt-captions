[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "hello everyone welcome back to a SS",
    "start": "5259",
    "end": "7939"
  },
  {
    "text": "launch page we're here from the London",
    "start": "7939",
    "end": "10309"
  },
  {
    "text": "summit talking now about mobile",
    "start": "10309",
    "end": "13070"
  },
  {
    "text": "application development and some new",
    "start": "13070",
    "end": "15440"
  },
  {
    "text": "features and services that we have for",
    "start": "15440",
    "end": "17480"
  },
  {
    "text": "that I'm joined today by Danielle and",
    "start": "17480",
    "end": "20240"
  },
  {
    "text": "Anna fund and I will start by asking you",
    "start": "20240",
    "end": "24380"
  },
  {
    "text": "to tell our fellow streamers what you do",
    "start": "24380",
    "end": "28460"
  },
  {
    "text": "for Amazon sure hi my name is Daniel I",
    "start": "28460",
    "end": "31550"
  },
  {
    "start": "30000",
    "end": "448000"
  },
  {
    "text": "work as a Solutions Architect at AWS out",
    "start": "31550",
    "end": "34850"
  },
  {
    "text": "of our Berlin office where I help",
    "start": "34850",
    "end": "36879"
  },
  {
    "text": "customers and startups especially use",
    "start": "36879",
    "end": "40250"
  },
  {
    "text": "AWS and optimize their services and I",
    "start": "40250",
    "end": "43370"
  },
  {
    "text": "also help customers with mobile services",
    "start": "43370",
    "end": "45800"
  },
  {
    "text": "all over Europe cool I'm also a solution",
    "start": "45800",
    "end": "50329"
  },
  {
    "text": "architect I worked with the started",
    "start": "50329",
    "end": "52340"
  },
  {
    "text": "focused in London and a lot of work",
    "start": "52340",
    "end": "55460"
  },
  {
    "text": "which I do is thinking about how",
    "start": "55460",
    "end": "57469"
  },
  {
    "text": "startups are building their software and",
    "start": "57469",
    "end": "59570"
  },
  {
    "text": "what are the lessons they can learn from",
    "start": "59570",
    "end": "61250"
  },
  {
    "text": "a lot of other startups which are",
    "start": "61250",
    "end": "62780"
  },
  {
    "text": "building similar systems so looking",
    "start": "62780",
    "end": "65390"
  },
  {
    "text": "forward to sharing some of the lessons",
    "start": "65390",
    "end": "66680"
  },
  {
    "text": "we've learned in mobile space so in this",
    "start": "66680",
    "end": "71450"
  },
  {
    "text": "mobile space and developing mobile",
    "start": "71450",
    "end": "73190"
  },
  {
    "text": "applications I'm a developer myself I",
    "start": "73190",
    "end": "75709"
  },
  {
    "text": "hear that graph QL is the new order and",
    "start": "75709",
    "end": "79729"
  },
  {
    "text": "what everybody's using to build it could",
    "start": "79729",
    "end": "82340"
  },
  {
    "text": "we talk about what is graph QL and why",
    "start": "82340",
    "end": "85160"
  },
  {
    "text": "does it matter",
    "start": "85160",
    "end": "86060"
  },
  {
    "text": "sure um graph QL is a query language for",
    "start": "86060",
    "end": "89869"
  },
  {
    "text": "api's it's an open standard and",
    "start": "89869",
    "end": "93349"
  },
  {
    "text": "basically it enables clients to load to",
    "start": "93349",
    "end": "96890"
  },
  {
    "text": "change and to subscribe to data from",
    "start": "96890",
    "end": "99619"
  },
  {
    "text": "servers there's a when you build mobile",
    "start": "99619",
    "end": "102500"
  },
  {
    "text": "apps there's some common challenges web",
    "start": "102500",
    "end": "105440"
  },
  {
    "text": "apps have those too and graph QL tries",
    "start": "105440",
    "end": "107899"
  },
  {
    "text": "to address those those are things like",
    "start": "107899",
    "end": "109759"
  },
  {
    "text": "the data requirements they change over",
    "start": "109759",
    "end": "111679"
  },
  {
    "text": "time you need different data for",
    "start": "111679",
    "end": "114590"
  },
  {
    "text": "different platforms you have",
    "start": "114590",
    "end": "116780"
  },
  {
    "text": "relationships between data you have",
    "start": "116780",
    "end": "119899"
  },
  {
    "text": "lists with reduced information that",
    "start": "119899",
    "end": "121970"
  },
  {
    "text": "comes back from API so you have ordering",
    "start": "121970",
    "end": "124220"
  },
  {
    "text": "and pagination you have notifications so",
    "start": "124220",
    "end": "126920"
  },
  {
    "text": "those are all common challenges and with",
    "start": "126920",
    "end": "129470"
  },
  {
    "text": "graph QL",
    "start": "129470",
    "end": "130610"
  },
  {
    "text": "those are all addressed so with graph QL",
    "start": "130610",
    "end": "132950"
  },
  {
    "text": "the client specifies the format and the",
    "start": "132950",
    "end": "136370"
  },
  {
    "text": "structure of how a data",
    "start": "136370",
    "end": "138500"
  },
  {
    "text": "that needs to be retrieved what it",
    "start": "138500",
    "end": "140480"
  },
  {
    "text": "should look like in the query and so",
    "start": "140480",
    "end": "142700"
  },
  {
    "text": "when the client loads it loads the data",
    "start": "142700",
    "end": "144430"
  },
  {
    "text": "they load only what they need and only",
    "start": "144430",
    "end": "147350"
  },
  {
    "text": "in the format that they need and that's",
    "start": "147350",
    "end": "150980"
  },
  {
    "text": "basically what graph care was cool and",
    "start": "150980",
    "end": "153470"
  },
  {
    "text": "what are we doing about it what so how",
    "start": "153470",
    "end": "157760"
  },
  {
    "text": "does that really are well absolutely",
    "start": "157760",
    "end": "160580"
  },
  {
    "text": "we have released service called app sync",
    "start": "160580",
    "end": "163790"
  },
  {
    "text": "and AWS f sync is a managed graph QL",
    "start": "163790",
    "end": "167900"
  },
  {
    "text": "service it's part of the AWS mobile",
    "start": "167900",
    "end": "171020"
  },
  {
    "text": "services it's a server less service so",
    "start": "171020",
    "end": "174410"
  },
  {
    "text": "that means there is no servers for",
    "start": "174410",
    "end": "176480"
  },
  {
    "text": "customers to manage to to set up appsync",
    "start": "176480",
    "end": "181040"
  },
  {
    "text": "helps customers to rapidly prototype and",
    "start": "181040",
    "end": "183830"
  },
  {
    "text": "develop graph QL api's and you can use",
    "start": "183830",
    "end": "187640"
  },
  {
    "text": "it to build real-time data access and",
    "start": "187640",
    "end": "191750"
  },
  {
    "text": "update applications so for example if",
    "start": "191750",
    "end": "195739"
  },
  {
    "text": "you have collaborative mobile or web",
    "start": "195739",
    "end": "197570"
  },
  {
    "text": "applications app sync as the service",
    "start": "197570",
    "end": "199730"
  },
  {
    "text": "you'd use to help build those so if I",
    "start": "199730",
    "end": "202850"
  },
  {
    "text": "understand correctly this is for the",
    "start": "202850",
    "end": "205730"
  },
  {
    "text": "client-side developer for your mobile",
    "start": "205730",
    "end": "208070"
  },
  {
    "text": "web app to synchronize data and get all",
    "start": "208070",
    "end": "213290"
  },
  {
    "text": "the hard part about synchronizing it to",
    "start": "213290",
    "end": "216860"
  },
  {
    "text": "the cloud and storing this data",
    "start": "216860",
    "end": "218660"
  },
  {
    "text": "somewhere and separate this from the",
    "start": "218660",
    "end": "221840"
  },
  {
    "text": "mobile app developers so that he can",
    "start": "221840",
    "end": "223910"
  },
  {
    "text": "focus on building a better experience",
    "start": "223910",
    "end": "226000"
  },
  {
    "text": "right well actually it's a on the on the",
    "start": "226000",
    "end": "229310"
  },
  {
    "text": "backend it's usually what you have with",
    "start": "229310",
    "end": "232850"
  },
  {
    "text": "the RESTful API for example there's some",
    "start": "232850",
    "end": "234829"
  },
  {
    "text": "there's a some sort of a coupling of",
    "start": "234829",
    "end": "236900"
  },
  {
    "text": "what the API looks like on the backend",
    "start": "236900",
    "end": "238970"
  },
  {
    "text": "and then on the client side you just",
    "start": "238970",
    "end": "241459"
  },
  {
    "text": "have to work with what you're given by",
    "start": "241459",
    "end": "243079"
  },
  {
    "text": "the backend by the by the API and you",
    "start": "243079",
    "end": "246230"
  },
  {
    "text": "mentioned specific thing there that's",
    "start": "246230",
    "end": "249530"
  },
  {
    "text": "very interesting how this compares to",
    "start": "249530",
    "end": "252170"
  },
  {
    "text": "rest like what's the comparison and how",
    "start": "252170",
    "end": "254930"
  },
  {
    "text": "is grass qaul different from REST API",
    "start": "254930",
    "end": "259298"
  },
  {
    "text": "well you've got the basically the rest",
    "start": "260320",
    "end": "266830"
  },
  {
    "text": "has those challenges that I mentioned",
    "start": "266830",
    "end": "268420"
  },
  {
    "text": "where you have the different URLs for",
    "start": "268420",
    "end": "272140"
  },
  {
    "text": "different objects I have the lists that",
    "start": "272140",
    "end": "274510"
  },
  {
    "text": "contain maybe the data you have but",
    "start": "274510",
    "end": "276850"
  },
  {
    "text": "maybe some other a restful URL contains",
    "start": "276850",
    "end": "279460"
  },
  {
    "text": "other data that you have and with breath",
    "start": "279460",
    "end": "281440"
  },
  {
    "text": "ul you specify in your query what are",
    "start": "281440",
    "end": "285100"
  },
  {
    "text": "the elements that you want to retrieve I",
    "start": "285100",
    "end": "286990"
  },
  {
    "text": "say for it so for example I know in many",
    "start": "286990",
    "end": "291880"
  },
  {
    "text": "systems especially with object",
    "start": "291880",
    "end": "294040"
  },
  {
    "text": "relational mapping you get a lot of data",
    "start": "294040",
    "end": "296620"
  },
  {
    "text": "back so in graph q well you can say hey",
    "start": "296620",
    "end": "299470"
  },
  {
    "text": "I just want first name last name and",
    "start": "299470",
    "end": "301480"
  },
  {
    "text": "agent that's it and if we'll bring back",
    "start": "301480",
    "end": "303790"
  },
  {
    "text": "just that it's exactly right so you just",
    "start": "303790",
    "end": "305410"
  },
  {
    "text": "use it you connect to the endpoint and",
    "start": "305410",
    "end": "308110"
  },
  {
    "text": "you discover what the data looks like",
    "start": "308110",
    "end": "311020"
  },
  {
    "text": "without a knowledge of the backend and",
    "start": "311020",
    "end": "313440"
  },
  {
    "text": "exactly like you say in your query you",
    "start": "313440",
    "end": "315730"
  },
  {
    "text": "specify here's the object that I want",
    "start": "315730",
    "end": "318190"
  },
  {
    "text": "that's the the fields within that object",
    "start": "318190",
    "end": "321100"
  },
  {
    "text": "that I want or those are the",
    "start": "321100",
    "end": "322150"
  },
  {
    "text": "relationships I'm interested in and",
    "start": "322150",
    "end": "323890"
  },
  {
    "text": "whatever you're not interested whatever",
    "start": "323890",
    "end": "325840"
  },
  {
    "text": "you're not interested in you don't put",
    "start": "325840",
    "end": "327640"
  },
  {
    "text": "that in your query and then it doesn't",
    "start": "327640",
    "end": "329140"
  },
  {
    "text": "come across and so yeah essentially I",
    "start": "329140",
    "end": "331600"
  },
  {
    "text": "think the client has the full knowledge",
    "start": "331600",
    "end": "333490"
  },
  {
    "text": "of what data resides in the server and",
    "start": "333490",
    "end": "335850"
  },
  {
    "text": "server sends whatever is needed to the",
    "start": "335850",
    "end": "338590"
  },
  {
    "text": "client without client making multiple",
    "start": "338590",
    "end": "340270"
  },
  {
    "text": "requests for the same data one query per",
    "start": "340270",
    "end": "342670"
  },
  {
    "text": "per view basically there's a lot of",
    "start": "342670",
    "end": "346920"
  },
  {
    "text": "things that's possible on this mobile",
    "start": "346920",
    "end": "349900"
  },
  {
    "text": "space and especially with graph QL could",
    "start": "349900",
    "end": "352990"
  },
  {
    "text": "we just make a clear statement of the",
    "start": "352990",
    "end": "356800"
  },
  {
    "text": "main features of app sink yeah",
    "start": "356800",
    "end": "360160"
  },
  {
    "text": "understand like what's the key points",
    "start": "360160",
    "end": "362620"
  },
  {
    "text": "they should remember so app sink is a",
    "start": "362620",
    "end": "365790"
  },
  {
    "text": "simple scalable real-time",
    "start": "365790",
    "end": "369340"
  },
  {
    "text": "synchronization service that enables you",
    "start": "369340",
    "end": "371680"
  },
  {
    "text": "to do queries filtering and search",
    "start": "371680",
    "end": "374290"
  },
  {
    "text": "inside application search query",
    "start": "374290",
    "end": "377080"
  },
  {
    "text": "filtering and search any applications",
    "start": "377080",
    "end": "378640"
  },
  {
    "text": "you use app sink to connect to resources",
    "start": "378640",
    "end": "381820"
  },
  {
    "text": "in your AWS account ok all right",
    "start": "381820",
    "end": "384910"
  },
  {
    "text": "it has built-in offline support so how",
    "start": "384910",
    "end": "389560"
  },
  {
    "text": "you defined is like",
    "start": "389560",
    "end": "391400"
  },
  {
    "text": "how do you bind this to your data",
    "start": "391400",
    "end": "393199"
  },
  {
    "text": "sources how you define those schemas how",
    "start": "393199",
    "end": "396350"
  },
  {
    "text": "does this gets built yeah so basically",
    "start": "396350",
    "end": "399789"
  },
  {
    "text": "an app sync when you start with a",
    "start": "399789",
    "end": "402949"
  },
  {
    "text": "project the first thing you do is you",
    "start": "402949",
    "end": "404570"
  },
  {
    "text": "define a schema okay and the schema is",
    "start": "404570",
    "end": "408110"
  },
  {
    "text": "defined in a schema definition language",
    "start": "408110",
    "end": "410600"
  },
  {
    "text": "okay and it basically has three three",
    "start": "410600",
    "end": "414710"
  },
  {
    "text": "operator types it has it has a query for",
    "start": "414710",
    "end": "418580"
  },
  {
    "text": "read it has a mutation for writes and it",
    "start": "418580",
    "end": "423620"
  },
  {
    "text": "has a subscription for if you if data",
    "start": "423620",
    "end": "426740"
  },
  {
    "text": "changes and you get pushed back in real",
    "start": "426740",
    "end": "429350"
  },
  {
    "text": "time so when you define your schema you",
    "start": "429350",
    "end": "432860"
  },
  {
    "text": "define these three route types they're",
    "start": "432860",
    "end": "434840"
  },
  {
    "text": "always part of that I see could we take",
    "start": "434840",
    "end": "437780"
  },
  {
    "text": "a look at it and see what it looks like",
    "start": "437780",
    "end": "440030"
  },
  {
    "text": "when building it absolutely switch to",
    "start": "440030",
    "end": "444199"
  },
  {
    "text": "your desktop yeah it's good all right so",
    "start": "444199",
    "end": "448130"
  },
  {
    "start": "448000",
    "end": "738000"
  },
  {
    "text": "this is the AWS console that everyone",
    "start": "448130",
    "end": "450229"
  },
  {
    "text": "knows from when you log into AWS on the",
    "start": "450229",
    "end": "452780"
  },
  {
    "text": "web browser so here we'll just type apps",
    "start": "452780",
    "end": "456020"
  },
  {
    "text": "and we maximize and make this just a",
    "start": "456020",
    "end": "459199"
  },
  {
    "text": "little bigger sure awesome let's make",
    "start": "459199",
    "end": "462169"
  },
  {
    "text": "this bigger he's good okay perfect so",
    "start": "462169",
    "end": "464960"
  },
  {
    "text": "look for the app sync service open it",
    "start": "464960",
    "end": "468849"
  },
  {
    "text": "all right so that's actually I've got",
    "start": "468849",
    "end": "472639"
  },
  {
    "text": "some API here already so let me show you",
    "start": "472639",
    "end": "474560"
  },
  {
    "text": "what it looks like when you're on first",
    "start": "474560",
    "end": "476060"
  },
  {
    "text": "run you don't know how oh hi oh because",
    "start": "476060",
    "end": "477770"
  },
  {
    "text": "I don't have any API is defined here so",
    "start": "477770",
    "end": "480139"
  },
  {
    "text": "that's your first your first run",
    "start": "480139",
    "end": "482449"
  },
  {
    "text": "experience or you'd click create API for",
    "start": "482449",
    "end": "485599"
  },
  {
    "text": "the demo I'm going to show you guys what",
    "start": "485599",
    "end": "487729"
  },
  {
    "text": "it looks like in our event though so",
    "start": "487729",
    "end": "489949"
  },
  {
    "text": "I'll go back to there so you see it just",
    "start": "489949",
    "end": "493669"
  },
  {
    "text": "looks a little bit different when you've",
    "start": "493669",
    "end": "494720"
  },
  {
    "text": "used it once in a region so you create",
    "start": "494720",
    "end": "496580"
  },
  {
    "text": "an API here and first step when you",
    "start": "496580",
    "end": "499610"
  },
  {
    "text": "create an API and app sync is you have",
    "start": "499610",
    "end": "502190"
  },
  {
    "text": "to name it right that's one of the three",
    "start": "502190",
    "end": "503919"
  },
  {
    "text": "difficult questions in idea naming",
    "start": "503919",
    "end": "508310"
  },
  {
    "text": "things let's just stick with the default",
    "start": "508310",
    "end": "509930"
  },
  {
    "text": "so what if they are going to create",
    "start": "509930",
    "end": "511610"
  },
  {
    "text": "today so you have a choice between doing",
    "start": "511610",
    "end": "514310"
  },
  {
    "text": "a custom schema right here or doing a",
    "start": "514310",
    "end": "516260"
  },
  {
    "text": "sample and I think for simplicity sake",
    "start": "516260",
    "end": "518450"
  },
  {
    "text": "we'll just stick with a sample",
    "start": "518450",
    "end": "522039"
  },
  {
    "text": "which what what the sample does is it",
    "start": "522139",
    "end": "525049"
  },
  {
    "text": "creates events with comments on it and",
    "start": "525049",
    "end": "527689"
  },
  {
    "text": "it saves those to a dynamodb table so",
    "start": "527689",
    "end": "531559"
  },
  {
    "text": "you can assume an app where users are",
    "start": "531559",
    "end": "533209"
  },
  {
    "text": "interacting with your content and",
    "start": "533209",
    "end": "534860"
  },
  {
    "text": "they're commenting on how the content is",
    "start": "534860",
    "end": "537049"
  },
  {
    "text": "exactly so it's like a calendaring",
    "start": "537049",
    "end": "538759"
  },
  {
    "text": "system where you post an event and then",
    "start": "538759",
    "end": "541129"
  },
  {
    "text": "other people can post their events or",
    "start": "541129",
    "end": "543019"
  },
  {
    "text": "comment or change events nice yeah",
    "start": "543019",
    "end": "545600"
  },
  {
    "text": "that's what this sample is so you see",
    "start": "545600",
    "end": "549069"
  },
  {
    "text": "the details of what the event schema",
    "start": "549069",
    "end": "552170"
  },
  {
    "text": "looks like and in the schema if you",
    "start": "552170",
    "end": "555799"
  },
  {
    "text": "scroll to the very bottom there you see",
    "start": "555799",
    "end": "557720"
  },
  {
    "text": "the three root elements that I talked",
    "start": "557720",
    "end": "559279"
  },
  {
    "text": "about so you have the query which maps",
    "start": "559279",
    "end": "561199"
  },
  {
    "text": "to query that's those we see here you",
    "start": "561199",
    "end": "564649"
  },
  {
    "text": "have a mutation which maps the mutation",
    "start": "564649",
    "end": "567499"
  },
  {
    "text": "type up here and then you have the",
    "start": "567499",
    "end": "570529"
  },
  {
    "text": "subscription root element which maps",
    "start": "570529",
    "end": "573319"
  },
  {
    "text": "those descriptions here and then within",
    "start": "573319",
    "end": "574939"
  },
  {
    "text": "each of these you get you have your your",
    "start": "574939",
    "end": "579170"
  },
  {
    "text": "queries here so within the query you",
    "start": "579170",
    "end": "581029"
  },
  {
    "text": "have the get event for a for example",
    "start": "581029",
    "end": "582790"
  },
  {
    "text": "which has an ID attribute which is of",
    "start": "582790",
    "end": "587509"
  },
  {
    "text": "the type ID and exclamation mark means",
    "start": "587509",
    "end": "590089"
  },
  {
    "text": "it's mandatory and the return value of",
    "start": "590089",
    "end": "592999"
  },
  {
    "text": "that is an event type IC so so every API",
    "start": "592999",
    "end": "597980"
  },
  {
    "text": "which you design will have this",
    "start": "597980",
    "end": "599329"
  },
  {
    "text": "structure they will always have a schema",
    "start": "599329",
    "end": "601160"
  },
  {
    "text": "they'll always have a get query it'll",
    "start": "601160",
    "end": "602989"
  },
  {
    "text": "always have the schema yeah and what",
    "start": "602989",
    "end": "604669"
  },
  {
    "text": "happens after that is up to you so the",
    "start": "604669",
    "end": "606649"
  },
  {
    "text": "only thing the only other thing I guess",
    "start": "606649",
    "end": "608149"
  },
  {
    "text": "you always have is that you have types",
    "start": "608149",
    "end": "609980"
  },
  {
    "text": "and then everything flows from the type",
    "start": "609980",
    "end": "612259"
  },
  {
    "text": "so if we look at event for example I'm",
    "start": "612259",
    "end": "614329"
  },
  {
    "text": "gonna show you where that comes from",
    "start": "614329",
    "end": "615799"
  },
  {
    "text": "and oh let's stay with a query for a",
    "start": "615799",
    "end": "618079"
  },
  {
    "text": "second so we also have list event you're",
    "start": "618079",
    "end": "620029"
  },
  {
    "text": "not gonna go into all those details",
    "start": "620029",
    "end": "621049"
  },
  {
    "text": "again because yeah there's one detail",
    "start": "621049",
    "end": "623839"
  },
  {
    "text": "that's really there does this mean that",
    "start": "623839",
    "end": "626269"
  },
  {
    "text": "I don't have to write pagination code on",
    "start": "626269",
    "end": "629629"
  },
  {
    "text": "the server side anymore it will just",
    "start": "629629",
    "end": "631459"
  },
  {
    "text": "come paginate it for me on the client",
    "start": "631459",
    "end": "634009"
  },
  {
    "text": "side yes because of what's happening",
    "start": "634009",
    "end": "636019"
  },
  {
    "text": "behind this so will actually look at the",
    "start": "636019",
    "end": "638360"
  },
  {
    "text": "details of how this is how this is",
    "start": "638360",
    "end": "639889"
  },
  {
    "text": "implemented so yeah I'll show you okay",
    "start": "639889",
    "end": "642769"
  },
  {
    "text": "so we've got event defined here as a",
    "start": "642769",
    "end": "644389"
  },
  {
    "text": "result as a return type of get event and",
    "start": "644389",
    "end": "647389"
  },
  {
    "text": "the event connection returned as",
    "start": "647389",
    "end": "649880"
  },
  {
    "text": "result of list events and event",
    "start": "649880",
    "end": "651890"
  },
  {
    "text": "connection the naming is with connection",
    "start": "651890",
    "end": "654350"
  },
  {
    "text": "that's kind of the that's been",
    "start": "654350",
    "end": "656830"
  },
  {
    "text": "established as the standard in graph QL",
    "start": "656830",
    "end": "658940"
  },
  {
    "text": "for from a genetic results I see okay",
    "start": "658940",
    "end": "661790"
  },
  {
    "text": "and now we'll look at where event",
    "start": "661790",
    "end": "662900"
  },
  {
    "text": "connection and event are actually",
    "start": "662900",
    "end": "664370"
  },
  {
    "text": "defined so we see type event connection",
    "start": "664370",
    "end": "666290"
  },
  {
    "text": "is up here which contains items to",
    "start": "666290",
    "end": "669380"
  },
  {
    "text": "contains an array of events and the next",
    "start": "669380",
    "end": "671420"
  },
  {
    "text": "token which is a string and the type",
    "start": "671420",
    "end": "674270"
  },
  {
    "text": "event which we've seen here and which",
    "start": "674270",
    "end": "676520"
  },
  {
    "text": "we've seen in the queries is defined up",
    "start": "676520",
    "end": "679010"
  },
  {
    "text": "here so that's one of our application",
    "start": "679010",
    "end": "681680"
  },
  {
    "text": "objects where you have an ID a name",
    "start": "681680",
    "end": "683680"
  },
  {
    "text": "field where the event takes place when",
    "start": "683680",
    "end": "686540"
  },
  {
    "text": "it takes place the description of the",
    "start": "686540",
    "end": "688010"
  },
  {
    "text": "event and then the list of comments",
    "start": "688010",
    "end": "690650"
  },
  {
    "text": "which and you see again here comment",
    "start": "690650",
    "end": "692900"
  },
  {
    "text": "connection that's imaginated list of",
    "start": "692900",
    "end": "695450"
  },
  {
    "text": "comments it's defined up here so you",
    "start": "695450",
    "end": "698060"
  },
  {
    "text": "have individual data types and you have",
    "start": "698060",
    "end": "700130"
  },
  {
    "text": "collection data types which are covering",
    "start": "700130",
    "end": "702440"
  },
  {
    "text": "those individual data types right that's",
    "start": "702440",
    "end": "704690"
  },
  {
    "text": "right yeah",
    "start": "704690",
    "end": "705380"
  },
  {
    "text": "but basically it all gets defined in",
    "start": "705380",
    "end": "707210"
  },
  {
    "text": "here in your schema so it does not have",
    "start": "707210",
    "end": "710090"
  },
  {
    "text": "anything to do with my database schema",
    "start": "710090",
    "end": "712430"
  },
  {
    "text": "this is a client-side schemes a good",
    "start": "712430",
    "end": "714620"
  },
  {
    "text": "time yes absolutely the mapping from the",
    "start": "714620",
    "end": "719410"
  },
  {
    "text": "graph key of schema so what you have in",
    "start": "719410",
    "end": "722510"
  },
  {
    "text": "your database is that's completely",
    "start": "722510",
    "end": "724640"
  },
  {
    "text": "separate so the thing the piece that's",
    "start": "724640",
    "end": "726770"
  },
  {
    "text": "between those is as resolvers as we take",
    "start": "726770",
    "end": "729860"
  },
  {
    "text": "a look at those next actually sure let's",
    "start": "729860",
    "end": "731810"
  },
  {
    "text": "go there alright so we haven't created",
    "start": "731810",
    "end": "734150"
  },
  {
    "text": "this API yet we just went through the",
    "start": "734150",
    "end": "735950"
  },
  {
    "text": "sample or fake create now and now what",
    "start": "735950",
    "end": "738920"
  },
  {
    "start": "738000",
    "end": "990000"
  },
  {
    "text": "Apps Inc does is provisions that API on",
    "start": "738920",
    "end": "741830"
  },
  {
    "text": "the back end there is a number of",
    "start": "741830",
    "end": "745900"
  },
  {
    "text": "example projects here we'll pick web for",
    "start": "745900",
    "end": "750680"
  },
  {
    "text": "the demo that we'll do later on so you",
    "start": "750680",
    "end": "754100"
  },
  {
    "text": "copy this get command to clone the repo",
    "start": "754100",
    "end": "756890"
  },
  {
    "text": "and download the app sync dot j s config",
    "start": "756890",
    "end": "759800"
  },
  {
    "text": "file that's important because that tells",
    "start": "759800",
    "end": "762050"
  },
  {
    "text": "the client how to connect to your schema",
    "start": "762050",
    "end": "765830"
  },
  {
    "text": "but that's also pretty much all there is",
    "start": "765830",
    "end": "767930"
  },
  {
    "text": "okay the schema also downloaded along",
    "start": "767930",
    "end": "771740"
  },
  {
    "text": "with it or schema just this is actually",
    "start": "771740",
    "end": "774200"
  },
  {
    "text": "just a configuration yep if you have a",
    "start": "774200",
    "end": "776210"
  },
  {
    "text": "local IDE that has",
    "start": "776210",
    "end": "778770"
  },
  {
    "text": "code completion you could download the",
    "start": "778770",
    "end": "780270"
  },
  {
    "text": "graphical schema from here as well is",
    "start": "780270",
    "end": "781740"
  },
  {
    "text": "there anything that developers need to",
    "start": "781740",
    "end": "783690"
  },
  {
    "text": "do if these J's config file or just save",
    "start": "783690",
    "end": "786480"
  },
  {
    "text": "and go you'll drop it in your project so",
    "start": "786480",
    "end": "789210"
  },
  {
    "text": "we'll do that in a second when we look",
    "start": "789210",
    "end": "790770"
  },
  {
    "text": "at the application okay so it seems like",
    "start": "790770",
    "end": "793440"
  },
  {
    "text": "there were some Network issues",
    "start": "793440",
    "end": "795120"
  },
  {
    "text": "shall we summarize what we have talked",
    "start": "795120",
    "end": "797430"
  },
  {
    "text": "so far so sorry I think there was some",
    "start": "797430",
    "end": "800640"
  },
  {
    "text": "interruption can we summarize whatever",
    "start": "800640",
    "end": "803280"
  },
  {
    "text": "we discussed so far in this applications",
    "start": "803280",
    "end": "805410"
  },
  {
    "text": "alright so we were just joining it can",
    "start": "805410",
    "end": "807210"
  },
  {
    "text": "understand sure so we've looked at the",
    "start": "807210",
    "end": "809870"
  },
  {
    "text": "schema of how the schema is defined we",
    "start": "809870",
    "end": "813360"
  },
  {
    "text": "have a sample project that has events",
    "start": "813360",
    "end": "816270"
  },
  {
    "text": "and comments on events and now we've",
    "start": "816270",
    "end": "819240"
  },
  {
    "text": "just created the API and downloaded the",
    "start": "819240",
    "end": "822090"
  },
  {
    "text": "config file that appsync",
    "start": "822090",
    "end": "824010"
  },
  {
    "text": "generated for us that relates to this",
    "start": "824010",
    "end": "826530"
  },
  {
    "text": "API what we're doing next is well I",
    "start": "826530",
    "end": "829710"
  },
  {
    "text": "guess we could look into how the",
    "start": "829710",
    "end": "831420"
  },
  {
    "text": "application actually works",
    "start": "831420",
    "end": "832710"
  },
  {
    "text": "sure yeah do that okay",
    "start": "832710",
    "end": "837000"
  },
  {
    "text": "like this big",
    "start": "837000",
    "end": "839130"
  },
  {
    "text": "so what all you have on your machine",
    "start": "839130",
    "end": "840960"
  },
  {
    "text": "right now so you have JS file JavaScript",
    "start": "840960",
    "end": "844530"
  },
  {
    "text": "file which you downloaded yeah and then",
    "start": "844530",
    "end": "846210"
  },
  {
    "text": "you have a schema file which you",
    "start": "846210",
    "end": "847260"
  },
  {
    "text": "downloaded",
    "start": "847260",
    "end": "847890"
  },
  {
    "text": "I didn't download the schema file so",
    "start": "847890",
    "end": "849360"
  },
  {
    "text": "it's just the dodgiest okay fake and I",
    "start": "849360",
    "end": "852090"
  },
  {
    "text": "copied the git clone command and I'll",
    "start": "852090",
    "end": "854100"
  },
  {
    "text": "paste that in here now so I've just",
    "start": "854100",
    "end": "857070"
  },
  {
    "text": "prepared the path before and that's it",
    "start": "857070",
    "end": "859340"
  },
  {
    "text": "okay now get cloned it actually have two",
    "start": "859340",
    "end": "862620"
  },
  {
    "text": "little clone which repository I cloned",
    "start": "862620",
    "end": "866310"
  },
  {
    "text": "the starter the the starter project",
    "start": "866310",
    "end": "869700"
  },
  {
    "text": "basically from from github the example",
    "start": "869700",
    "end": "872130"
  },
  {
    "text": "that comes with this sample graph QL can",
    "start": "872130",
    "end": "874560"
  },
  {
    "text": "you show our viewers where they can",
    "start": "874560",
    "end": "876270"
  },
  {
    "text": "download that sure let's go back to",
    "start": "876270",
    "end": "879530"
  },
  {
    "text": "where did we have it here so it's when",
    "start": "879530",
    "end": "884970"
  },
  {
    "text": "you after you create the API which was",
    "start": "884970",
    "end": "887610"
  },
  {
    "text": "the sample that we had here you clone",
    "start": "887610",
    "end": "890130"
  },
  {
    "text": "the repo right here yep so this that's",
    "start": "890130",
    "end": "893520"
  },
  {
    "text": "exactly what I did I just clicked on the",
    "start": "893520",
    "end": "895020"
  },
  {
    "text": "copy button yep and then pasted it from",
    "start": "895020",
    "end": "897690"
  },
  {
    "text": "my from my clipboard in here so now we",
    "start": "897690",
    "end": "901110"
  },
  {
    "text": "see the project I cloned now I move into",
    "start": "901110",
    "end": "907380"
  },
  {
    "text": "the project directory and I just copied",
    "start": "907380",
    "end": "910350"
  },
  {
    "text": "from my notes the move command so I",
    "start": "910350",
    "end": "911820"
  },
  {
    "text": "don't have to type it so we're moving",
    "start": "911820",
    "end": "913230"
  },
  {
    "text": "the app sync Jas to the source directory",
    "start": "913230",
    "end": "916380"
  },
  {
    "text": "that's inside this clone project so we",
    "start": "916380",
    "end": "919260"
  },
  {
    "text": "see that here yep source and that's what",
    "start": "919260",
    "end": "922170"
  },
  {
    "text": "it did now it moved up Jepsen is the",
    "start": "922170",
    "end": "924300"
  },
  {
    "text": "source and now the next step is",
    "start": "924300",
    "end": "929620"
  },
  {
    "text": "configure it with yarn yeah get all the",
    "start": "929620",
    "end": "933100"
  },
  {
    "text": "dependency what is yarn doing here so",
    "start": "933100",
    "end": "935440"
  },
  {
    "text": "yarn is loading the description of the",
    "start": "935440",
    "end": "938200"
  },
  {
    "text": "project and installs all the",
    "start": "938200",
    "end": "940120"
  },
  {
    "text": "dependencies that the project needs okay",
    "start": "940120",
    "end": "944340"
  },
  {
    "text": "wow it does this we have a couple",
    "start": "944340",
    "end": "947050"
  },
  {
    "text": "questions about related technologies I",
    "start": "947050",
    "end": "949690"
  },
  {
    "text": "know we can't discuss comparators but is",
    "start": "949690",
    "end": "953680"
  },
  {
    "text": "there anything you could say about the",
    "start": "953680",
    "end": "955570"
  },
  {
    "text": "relation between graph QL and old data",
    "start": "955570",
    "end": "958480"
  },
  {
    "text": "and firebase and there's other",
    "start": "958480",
    "end": "960550"
  },
  {
    "text": "technologies that are perhaps in the",
    "start": "960550",
    "end": "963279"
  },
  {
    "text": "same space yes I think there are various",
    "start": "963279",
    "end": "966339"
  },
  {
    "text": "choices when you have to build mobile",
    "start": "966339",
    "end": "968529"
  },
  {
    "text": "apps it could be you having all the",
    "start": "968529",
    "end": "971650"
  },
  {
    "text": "client-side code on mobile applications",
    "start": "971650",
    "end": "973180"
  },
  {
    "text": "and making API calls to server the",
    "start": "973180",
    "end": "976510"
  },
  {
    "text": "second option is you use something like",
    "start": "976510",
    "end": "978370"
  },
  {
    "text": "graph QL and I think there are different",
    "start": "978370",
    "end": "980050"
  },
  {
    "text": "providers which provide similar",
    "start": "980050",
    "end": "981250"
  },
  {
    "text": "functionality actually graph QL was",
    "start": "981250",
    "end": "983110"
  },
  {
    "text": "built by Facebook and it's an open",
    "start": "983110",
    "end": "985330"
  },
  {
    "text": "source thing which a lot of companies",
    "start": "985330",
    "end": "987550"
  },
  {
    "text": "are using these days so let's see D app",
    "start": "987550",
    "end": "991810"
  },
  {
    "text": "running yeah so that the sample app is",
    "start": "991810",
    "end": "994810"
  },
  {
    "text": "started it opens the web browser and now",
    "start": "994810",
    "end": "997210"
  },
  {
    "text": "what we do here is just create an event",
    "start": "997210",
    "end": "999010"
  },
  {
    "text": "let's call it hello London it's",
    "start": "999010",
    "end": "1002670"
  },
  {
    "text": "happening right now at the AWS summit in",
    "start": "1002670",
    "end": "1006660"
  },
  {
    "text": "London so you are simulating a user",
    "start": "1006660",
    "end": "1009360"
  },
  {
    "text": "writing this is using a website now or",
    "start": "1009360",
    "end": "1013950"
  },
  {
    "text": "an application and feeds it with data",
    "start": "1013950",
    "end": "1015960"
  },
  {
    "text": "that's interesting so it can be either a",
    "start": "1015960",
    "end": "1018839"
  },
  {
    "text": "mobile app or a web app it's not",
    "start": "1018839",
    "end": "1021810"
  },
  {
    "text": "restricted to one or another exactly",
    "start": "1021810",
    "end": "1023910"
  },
  {
    "text": "yeah so it's anything so this example",
    "start": "1023910",
    "end": "1026550"
  },
  {
    "text": "that we're doing here is anything that",
    "start": "1026550",
    "end": "1029370"
  },
  {
    "text": "JavaScript based cool all right so what",
    "start": "1029370",
    "end": "1033150"
  },
  {
    "text": "it did now is it submitted the mutation",
    "start": "1033150",
    "end": "1036720"
  },
  {
    "text": "request to create the event actually",
    "start": "1036720",
    "end": "1040890"
  },
  {
    "text": "it's easier if I show you on the on the",
    "start": "1040890",
    "end": "1044730"
  },
  {
    "text": "console how it flows through the through",
    "start": "1044730",
    "end": "1047069"
  },
  {
    "text": "the schema all right so we've got",
    "start": "1047069",
    "end": "1051289"
  },
  {
    "text": "we've had the mutation trade event and",
    "start": "1051340",
    "end": "1057559"
  },
  {
    "text": "we see here the mapping of the fields on",
    "start": "1057559",
    "end": "1059539"
  },
  {
    "text": "the on the background of the of the",
    "start": "1059539",
    "end": "1061520"
  },
  {
    "text": "webapp those were the the properties",
    "start": "1061520",
    "end": "1064100"
  },
  {
    "text": "that I entered okay up to description",
    "start": "1064100",
    "end": "1066529"
  },
  {
    "text": "and so what what the app did then it",
    "start": "1066529",
    "end": "1071899"
  },
  {
    "text": "called this mutation the creative and",
    "start": "1071899",
    "end": "1073820"
  },
  {
    "text": "mutation and what happens next is that's",
    "start": "1073820",
    "end": "1077750"
  },
  {
    "text": "where we look into the resolver function",
    "start": "1077750",
    "end": "1079700"
  },
  {
    "text": "so I'm looking here for the mutation",
    "start": "1079700",
    "end": "1082370"
  },
  {
    "text": "create event okay that map's",
    "start": "1082370",
    "end": "1085250"
  },
  {
    "text": "actually it lists the name of the data",
    "start": "1085250",
    "end": "1087860"
  },
  {
    "text": "source which is a DynamoDB table in this",
    "start": "1087860",
    "end": "1090409"
  },
  {
    "text": "case what based on the sample we're",
    "start": "1090409",
    "end": "1092240"
  },
  {
    "text": "getting it but actually when you tap on",
    "start": "1092240",
    "end": "1094429"
  },
  {
    "text": "it it opens the resolver function for",
    "start": "1094429",
    "end": "1098720"
  },
  {
    "text": "this for this mutation call instead of",
    "start": "1098720",
    "end": "1101149"
  },
  {
    "text": "writing my data access objects and",
    "start": "1101149",
    "end": "1103789"
  },
  {
    "text": "things like this I can just use the",
    "start": "1103789",
    "end": "1106340"
  },
  {
    "text": "templates and the mutaters at exactly",
    "start": "1106340",
    "end": "1108679"
  },
  {
    "text": "passing your JSON object and let the",
    "start": "1108679",
    "end": "1112190"
  },
  {
    "text": "resolver do the rest and what the",
    "start": "1112190",
    "end": "1113990"
  },
  {
    "text": "resolver does in this case is you",
    "start": "1113990",
    "end": "1116779"
  },
  {
    "text": "configure the data source name that's",
    "start": "1116779",
    "end": "1118970"
  },
  {
    "text": "our app sync event table this list is",
    "start": "1118970",
    "end": "1120799"
  },
  {
    "text": "populated from the data sources that are",
    "start": "1120799",
    "end": "1122960"
  },
  {
    "text": "configured for this API and you",
    "start": "1122960",
    "end": "1127010"
  },
  {
    "text": "configure a request mapping template so",
    "start": "1127010",
    "end": "1129080"
  },
  {
    "text": "that means when new data comes in place",
    "start": "1129080",
    "end": "1131390"
  },
  {
    "text": "on that call there's a number of samples",
    "start": "1131390",
    "end": "1133940"
  },
  {
    "text": "as well and in this case code is already",
    "start": "1133940",
    "end": "1137690"
  },
  {
    "text": "built so this is a call to dynamo DB a",
    "start": "1137690",
    "end": "1141169"
  },
  {
    "text": "put item operation where the key",
    "start": "1141169",
    "end": "1144070"
  },
  {
    "text": "actually people who use dynamodb they'll",
    "start": "1144070",
    "end": "1147110"
  },
  {
    "text": "be familiar with this notation the key a",
    "start": "1147110",
    "end": "1149899"
  },
  {
    "text": "string and the key here for using a",
    "start": "1149899",
    "end": "1152929"
  },
  {
    "text": "utility a helper utility on the app sink",
    "start": "1152929",
    "end": "1155510"
  },
  {
    "text": "side which generally generates you you",
    "start": "1155510",
    "end": "1158450"
  },
  {
    "text": "IDs which we used for IDs here in this",
    "start": "1158450",
    "end": "1160309"
  },
  {
    "text": "case and then the attribute values here",
    "start": "1160309",
    "end": "1162409"
  },
  {
    "text": "you see we're just mapping from a",
    "start": "1162409",
    "end": "1165169"
  },
  {
    "text": "context object which is always part of a",
    "start": "1165169",
    "end": "1167720"
  },
  {
    "text": "resolver call okay",
    "start": "1167720",
    "end": "1169159"
  },
  {
    "text": "which has been called with arguments I",
    "start": "1169159",
    "end": "1171110"
  },
  {
    "text": "see and the arguments contain the name",
    "start": "1171110",
    "end": "1173240"
  },
  {
    "text": "so that is what we saw mapped in a",
    "start": "1173240",
    "end": "1176029"
  },
  {
    "text": "schema earlier and that names to the",
    "start": "1176029",
    "end": "1178000"
  },
  {
    "text": "name property in DynamoDB and",
    "start": "1178000",
    "end": "1180690"
  },
  {
    "text": "that's kind of how they all work and if",
    "start": "1180690",
    "end": "1182460"
  },
  {
    "text": "instead of a dynamo debate was could it",
    "start": "1182460",
    "end": "1185070"
  },
  {
    "text": "be a relational database for example it",
    "start": "1185070",
    "end": "1187979"
  },
  {
    "text": "couldn't be a relation I think you could",
    "start": "1187979",
    "end": "1189840"
  },
  {
    "text": "make it work with a lambda function so",
    "start": "1189840",
    "end": "1192479"
  },
  {
    "text": "as as data sources you have a number of",
    "start": "1192479",
    "end": "1196200"
  },
  {
    "text": "options you can use DynamoDB as a data",
    "start": "1196200",
    "end": "1200849"
  },
  {
    "text": "table as a data source you could use an",
    "start": "1200849",
    "end": "1203429"
  },
  {
    "text": "elastic search domain you can use the",
    "start": "1203429",
    "end": "1206070"
  },
  {
    "text": "lambda function also and thermal and the",
    "start": "1206070",
    "end": "1208169"
  },
  {
    "text": "function you can go any we could call",
    "start": "1208169",
    "end": "1209999"
  },
  {
    "text": "RTS for example for a relational",
    "start": "1209999",
    "end": "1212190"
  },
  {
    "text": "database system the challenges you could",
    "start": "1212190",
    "end": "1215249"
  },
  {
    "text": "call an external data source like if you",
    "start": "1215249",
    "end": "1216840"
  },
  {
    "text": "have another API you want to call for",
    "start": "1216840",
    "end": "1218460"
  },
  {
    "text": "some reason a challenge here something",
    "start": "1218460",
    "end": "1220229"
  },
  {
    "text": "you have to watch for is because Apps",
    "start": "1220229",
    "end": "1222899"
  },
  {
    "text": "Sync is a managed service service that",
    "start": "1222899",
    "end": "1225090"
  },
  {
    "text": "serverless it can scale very rapidly",
    "start": "1225090",
    "end": "1228470"
  },
  {
    "text": "depending on what your users do and so",
    "start": "1228470",
    "end": "1231210"
  },
  {
    "text": "the challenges got to make sure to",
    "start": "1231210",
    "end": "1233129"
  },
  {
    "text": "protect your back-end to know that you",
    "start": "1233129",
    "end": "1234599"
  },
  {
    "text": "can totally I know dynamo can scale",
    "start": "1234599",
    "end": "1236700"
  },
  {
    "text": "infinitely but not api's are like that",
    "start": "1236700",
    "end": "1239009"
  },
  {
    "text": "right yeah there's a question can can",
    "start": "1239009",
    "end": "1242009"
  },
  {
    "text": "you have a rest endpoint as a data",
    "start": "1242009",
    "end": "1243720"
  },
  {
    "text": "source for a resolver so maybe they have",
    "start": "1243720",
    "end": "1247799"
  },
  {
    "text": "a rest service already running and how",
    "start": "1247799",
    "end": "1249869"
  },
  {
    "text": "this is the front edge to that rest",
    "start": "1249869",
    "end": "1251549"
  },
  {
    "text": "service that's exactly that example",
    "start": "1251549",
    "end": "1253320"
  },
  {
    "text": "right where you have a lambda function",
    "start": "1253320",
    "end": "1254429"
  },
  {
    "text": "that would pick up your details and then",
    "start": "1254429",
    "end": "1257669"
  },
  {
    "text": "pass it on to another polling side it",
    "start": "1257669",
    "end": "1260759"
  },
  {
    "text": "will again pull it from a lambda",
    "start": "1260759",
    "end": "1262289"
  },
  {
    "text": "function which is pulling another API",
    "start": "1262289",
    "end": "1264539"
  },
  {
    "text": "which already exists yes we have a",
    "start": "1264539",
    "end": "1268950"
  },
  {
    "text": "question about scaling so this is",
    "start": "1268950",
    "end": "1271799"
  },
  {
    "start": "1269000",
    "end": "1579000"
  },
  {
    "text": "surveillance I don't need to scale it",
    "start": "1271799",
    "end": "1273479"
  },
  {
    "text": "myself so but I do need to take care of",
    "start": "1273479",
    "end": "1277979"
  },
  {
    "text": "the scaling of the backend just to make",
    "start": "1277979",
    "end": "1279929"
  },
  {
    "text": "sure people get as we're talking that",
    "start": "1279929",
    "end": "1283249"
  },
  {
    "text": "scaling app sink itself it's not",
    "start": "1283249",
    "end": "1286710"
  },
  {
    "text": "necessary but on the back end you have",
    "start": "1286710",
    "end": "1289289"
  },
  {
    "text": "to make sure your data sources will",
    "start": "1289289",
    "end": "1291359"
  },
  {
    "text": "handle the load right that's right if",
    "start": "1291359",
    "end": "1293820"
  },
  {
    "text": "you use DynamoDB tables for example you",
    "start": "1293820",
    "end": "1296489"
  },
  {
    "text": "don't have to do that though right",
    "start": "1296489",
    "end": "1298139"
  },
  {
    "text": "because in DynamoDB you can enable",
    "start": "1298139",
    "end": "1300479"
  },
  {
    "text": "automatic scaling of read throughput",
    "start": "1300479",
    "end": "1302729"
  },
  {
    "text": "write throughput it goes into millions",
    "start": "1302729",
    "end": "1305190"
  },
  {
    "text": "of requests a second or more you can",
    "start": "1305190",
    "end": "1307559"
  },
  {
    "text": "automatic munich enable that that the",
    "start": "1307559",
    "end": "1309599"
  },
  {
    "text": "service can automatically scale the the",
    "start": "1309599",
    "end": "1312269"
  },
  {
    "text": "provision throughput for you",
    "start": "1312269",
    "end": "1313410"
  },
  {
    "text": "table and that way if you're right -",
    "start": "1313410",
    "end": "1316140"
  },
  {
    "text": "dynamo you actually don't have to worry",
    "start": "1316140",
    "end": "1317670"
  },
  {
    "text": "about scaling anything ever perfect or",
    "start": "1317670",
    "end": "1320490"
  },
  {
    "text": "that does the same is there you were",
    "start": "1320490",
    "end": "1322980"
  },
  {
    "text": "going somewhere I interrupted you there",
    "start": "1322980",
    "end": "1326720"
  },
  {
    "text": "we were looking at the well it's maybe",
    "start": "1327530",
    "end": "1330750"
  },
  {
    "text": "maybe we don't have to show it just on",
    "start": "1330750",
    "end": "1332400"
  },
  {
    "text": "the resolver site when you pass in the",
    "start": "1332400",
    "end": "1335310"
  },
  {
    "text": "object to be persisted in a data source",
    "start": "1335310",
    "end": "1337560"
  },
  {
    "text": "in the resolver we saw the request",
    "start": "1337560",
    "end": "1340020"
  },
  {
    "text": "mapping template which is written in",
    "start": "1340020",
    "end": "1342290"
  },
  {
    "text": "Apache velocity so if people are",
    "start": "1342290",
    "end": "1344940"
  },
  {
    "text": "familiar with the velocity templates or",
    "start": "1344940",
    "end": "1347550"
  },
  {
    "text": "really Java language VTL we wonder on",
    "start": "1347550",
    "end": "1353610"
  },
  {
    "text": "the response site you also have a",
    "start": "1353610",
    "end": "1355680"
  },
  {
    "text": "mapping so you can tweak the structure",
    "start": "1355680",
    "end": "1362370"
  },
  {
    "text": "of the request and response on the fly",
    "start": "1362370",
    "end": "1364310"
  },
  {
    "text": "very interesting question from Delora",
    "start": "1364310",
    "end": "1368150"
  },
  {
    "text": "how does it work the sink part of it",
    "start": "1368150",
    "end": "1371160"
  },
  {
    "text": "do I have to worry what happens when the",
    "start": "1371160",
    "end": "1375020"
  },
  {
    "text": "synchronization happens between app sink",
    "start": "1375020",
    "end": "1378150"
  },
  {
    "text": "and my mobile web do I need to worry",
    "start": "1378150",
    "end": "1381000"
  },
  {
    "text": "about conflict resolution and this kind",
    "start": "1381000",
    "end": "1383400"
  },
  {
    "text": "of things or it's totally transparent",
    "start": "1383400",
    "end": "1384750"
  },
  {
    "text": "it's a good point thanks to Laura for",
    "start": "1384750",
    "end": "1386400"
  },
  {
    "text": "asking that that's actually one of the",
    "start": "1386400",
    "end": "1389070"
  },
  {
    "text": "features of app sink is that on the",
    "start": "1389070",
    "end": "1392910"
  },
  {
    "text": "client side the synchronization is",
    "start": "1392910",
    "end": "1395130"
  },
  {
    "text": "completely transparent for you as a",
    "start": "1395130",
    "end": "1396990"
  },
  {
    "text": "developer you use the to use the SDK",
    "start": "1396990",
    "end": "1401550"
  },
  {
    "text": "that appsync provides so for example if",
    "start": "1401550",
    "end": "1403560"
  },
  {
    "text": "you use react native or react or web you",
    "start": "1403560",
    "end": "1406680"
  },
  {
    "text": "would use a project called AWS amplify",
    "start": "1406680",
    "end": "1408780"
  },
  {
    "text": "that can help you build that and app",
    "start": "1408780",
    "end": "1411330"
  },
  {
    "text": "sync has so enough sync when you when",
    "start": "1411330",
    "end": "1414720"
  },
  {
    "text": "you do a fetch when you do a query to",
    "start": "1414720",
    "end": "1416130"
  },
  {
    "text": "load your data the the data is cached",
    "start": "1416130",
    "end": "1419820"
  },
  {
    "text": "locally and that's one of the points I",
    "start": "1419820",
    "end": "1421470"
  },
  {
    "text": "was mentioning is a pain point for for",
    "start": "1421470",
    "end": "1423990"
  },
  {
    "text": "for app developers today is your your",
    "start": "1423990",
    "end": "1428400"
  },
  {
    "text": "customers your users they expect your",
    "start": "1428400",
    "end": "1431010"
  },
  {
    "text": "app to work offline - and that's where",
    "start": "1431010",
    "end": "1433200"
  },
  {
    "text": "appsync helps because it does it caches",
    "start": "1433200",
    "end": "1435540"
  },
  {
    "text": "the data automatically and when you edit",
    "start": "1435540",
    "end": "1437580"
  },
  {
    "text": "it offline app saying the text when you",
    "start": "1437580",
    "end": "1440940"
  },
  {
    "text": "come back online and sends the changes",
    "start": "1440940",
    "end": "1443160"
  },
  {
    "text": "out back to the service",
    "start": "1443160",
    "end": "1445010"
  },
  {
    "text": "on the service side on appsync you",
    "start": "1445010",
    "end": "1447410"
  },
  {
    "text": "actually can configure server-side",
    "start": "1447410",
    "end": "1450880"
  },
  {
    "text": "conflict resolution there is a three",
    "start": "1450880",
    "end": "1454280"
  },
  {
    "text": "basic patterns that it supports so you",
    "start": "1454280",
    "end": "1456470"
  },
  {
    "text": "have that the server wins whatever is on",
    "start": "1456470",
    "end": "1458840"
  },
  {
    "text": "the server is the truth or you can do a",
    "start": "1458840",
    "end": "1461150"
  },
  {
    "text": "silent drop you could also if you have",
    "start": "1461150",
    "end": "1464720"
  },
  {
    "text": "custom business logic that's that you",
    "start": "1464720",
    "end": "1466760"
  },
  {
    "text": "need to implement to resolve conflicts",
    "start": "1466760",
    "end": "1468470"
  },
  {
    "text": "you could use a an AWS lambda function",
    "start": "1468470",
    "end": "1472430"
  },
  {
    "text": "to implement that custom business logic",
    "start": "1472430",
    "end": "1474560"
  },
  {
    "text": "I said those were three options the",
    "start": "1474560",
    "end": "1477350"
  },
  {
    "text": "fourth one is you could do a callback",
    "start": "1477350",
    "end": "1479840"
  },
  {
    "text": "call to the client side to let them know",
    "start": "1479840",
    "end": "1483050"
  },
  {
    "text": "that there is a conflict and that's",
    "start": "1483050",
    "end": "1484460"
  },
  {
    "text": "typically the only option that you have",
    "start": "1484460",
    "end": "1486620"
  },
  {
    "text": "with with most systems but appsync",
    "start": "1486620",
    "end": "1488870"
  },
  {
    "text": "provides you server side rights that on",
    "start": "1488870",
    "end": "1490550"
  },
  {
    "text": "the server side I think this is",
    "start": "1490550",
    "end": "1491690"
  },
  {
    "text": "excellent for users who are traveling",
    "start": "1491690",
    "end": "1494420"
  },
  {
    "text": "like going in a tube where there's no",
    "start": "1494420",
    "end": "1496250"
  },
  {
    "text": "network connectivity airplane or going",
    "start": "1496250",
    "end": "1498380"
  },
  {
    "text": "somewhere where they don't have",
    "start": "1498380",
    "end": "1499550"
  },
  {
    "text": "connection so they just use your app and",
    "start": "1499550",
    "end": "1501350"
  },
  {
    "text": "all the data is cached and they can",
    "start": "1501350",
    "end": "1503510"
  },
  {
    "text": "interact with the app as if it's still",
    "start": "1503510",
    "end": "1505100"
  },
  {
    "text": "connected exactly and that's kind of",
    "start": "1505100",
    "end": "1506600"
  },
  {
    "text": "what users expect from apps right great",
    "start": "1506600",
    "end": "1509410"
  },
  {
    "text": "we're getting near to the end would you",
    "start": "1509410",
    "end": "1513200"
  },
  {
    "text": "have any suggestions for people to get",
    "start": "1513200",
    "end": "1515690"
  },
  {
    "text": "started how can they go on and build",
    "start": "1515690",
    "end": "1518690"
  },
  {
    "text": "their apps with Epson yeah absolutely so",
    "start": "1518690",
    "end": "1520640"
  },
  {
    "text": "I mentioned AWS amplify",
    "start": "1520640",
    "end": "1524450"
  },
  {
    "text": "that's a tool that makes it really easy",
    "start": "1524450",
    "end": "1526580"
  },
  {
    "text": "to get started with AWS mobile services",
    "start": "1526580",
    "end": "1528980"
  },
  {
    "text": "in general maybe the best recommendation",
    "start": "1528980",
    "end": "1532460"
  },
  {
    "text": "I have is just go try it out it takes",
    "start": "1532460",
    "end": "1535010"
  },
  {
    "text": "minutes to set this up I mean we've seen",
    "start": "1535010",
    "end": "1536720"
  },
  {
    "text": "the app working up here I don't know how",
    "start": "1536720",
    "end": "1539660"
  },
  {
    "text": "long did that take you five minutes five",
    "start": "1539660",
    "end": "1541190"
  },
  {
    "text": "minutes and every service we looked at",
    "start": "1541190",
    "end": "1544040"
  },
  {
    "text": "here has a free tier so it doesn't cost",
    "start": "1544040",
    "end": "1546170"
  },
  {
    "text": "you anything beyond the free tier you",
    "start": "1546170",
    "end": "1548720"
  },
  {
    "text": "only pay for what you use so my tip is",
    "start": "1548720",
    "end": "1551000"
  },
  {
    "text": "go and build something awesome and",
    "start": "1551000",
    "end": "1553910"
  },
  {
    "text": "that's the time we had for today get in",
    "start": "1553910",
    "end": "1556640"
  },
  {
    "text": "touch with us we'd love to hear more",
    "start": "1556640",
    "end": "1558710"
  },
  {
    "text": "questions and get back to you with",
    "start": "1558710",
    "end": "1561290"
  },
  {
    "text": "software development",
    "start": "1561290",
    "end": "1563590"
  },
  {
    "text": "AWS and help you guys be successful",
    "start": "1563590",
    "end": "1565899"
  },
  {
    "text": "thank you very much for watching thank",
    "start": "1565899",
    "end": "1567549"
  },
  {
    "text": "you Daniel thank you and see you in the",
    "start": "1567549",
    "end": "1569649"
  },
  {
    "text": "next session thank you go build",
    "start": "1569649",
    "end": "1573840"
  }
]