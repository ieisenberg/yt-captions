[
  {
    "text": "well I think we'll start a minute early do you think that's okay I think it's okay so to apologies first apology is",
    "start": "4330",
    "end": "11170"
  },
  {
    "text": "there are people standing at the back of the room obviously with the events of this type where they are free events",
    "start": "11170",
    "end": "17320"
  },
  {
    "text": "with open registration we have to overbook the events in order to make efficient use of the space and we've got",
    "start": "17320",
    "end": "23140"
  },
  {
    "text": "a higher than normal turnout today or the lower than normal dropout rate depending on how you look at it we have",
    "start": "23140",
    "end": "29440"
  },
  {
    "text": "data that we use believe it or not to figure out how much we should over booked events like this and you guys are",
    "start": "29440",
    "end": "35289"
  },
  {
    "text": "just too keen or you guys and ladies are just too keen so we are slightly fuller today than we anticipate and also it's",
    "start": "35289",
    "end": "41350"
  },
  {
    "text": "also of course difficult for us to balance across the tracks so we're obviously very full in this room right",
    "start": "41350",
    "end": "47470"
  },
  {
    "text": "now last time I checked there were a few seats left in the AI and m/l track you can move around during the day if you",
    "start": "47470",
    "end": "53440"
  },
  {
    "text": "get bored with standing or you want to go and see some content that's in another track so don't feel obliged",
    "start": "53440",
    "end": "58920"
  },
  {
    "text": "necessarily to stay in the same room all day you don't have to do that second thing I'm going to apologize for is the",
    "start": "58920",
    "end": "65110"
  },
  {
    "text": "individual sitting at the far sides of this room because we're recording this session and we're going to be streaming",
    "start": "65110",
    "end": "71439"
  },
  {
    "text": "it on our twitch channel over the course the next couple of days I've been told but I have to stand in this sort of ten",
    "start": "71439",
    "end": "77859"
  },
  {
    "text": "to twelve foot area in the center of the room here which is not my normal way of doing things so if you at the edge of the room hi okay probably not going to",
    "start": "77859",
    "end": "85179"
  },
  {
    "text": "be down there very much during the day because I have to talk to this camera so that we can share this content on on our",
    "start": "85179",
    "end": "91420"
  },
  {
    "text": "twitch channel later in in the in the week also mention on Twitch that if you",
    "start": "91420",
    "end": "96849"
  },
  {
    "text": "want to catch up with any of the content from today that you don't see live you can jump on to twitch.tv slash AWS",
    "start": "96849",
    "end": "103869"
  },
  {
    "text": "tomorrow or Friday and will be vodcast in the other two tracks so tomorrow will",
    "start": "103869",
    "end": "109029"
  },
  {
    "text": "be vodka sting the containers track and on Friday will be vodcast in this serverless track so if you do want to go",
    "start": "109029",
    "end": "114969"
  },
  {
    "text": "and watch something else you'll be able to catch up on the content later in the week okay twitch.tv slash AWS and the",
    "start": "114969",
    "end": "121299"
  },
  {
    "text": "last bit of housekeeping is at the end of the day today we're going to be hosting a happy hour and drinks reception in that networking area at the",
    "start": "121299",
    "end": "128020"
  },
  {
    "text": "end of the venue so if you want to hang around to the end of the day and have a drink with us and our partners please do",
    "start": "128020",
    "end": "133540"
  },
  {
    "text": "so we've got some food and some soft drinks and beer and wine today for you to work for you to enjoy",
    "start": "133540",
    "end": "140519"
  },
  {
    "text": "so please stick around at the end of the day for that as well okay so let's kick off just to quickly introduce myself my name is Ian Ian",
    "start": "140519",
    "end": "147209"
  },
  {
    "text": "messing am responsible for developer relations or technical evangelism AWS worldwide you can probably tell I am",
    "start": "147209",
    "end": "153180"
  },
  {
    "text": "from the UK still live in the UK but have this worldwide responsibility AWS I",
    "start": "153180",
    "end": "158430"
  },
  {
    "text": "also help run events like this so the overall developer education content program that we have so if you've got",
    "start": "158430",
    "end": "164670"
  },
  {
    "text": "any feedback about the event you can reach me here on Twitter or you can email me it's just",
    "start": "164670",
    "end": "170040"
  },
  {
    "text": "Ian M Amazon calm indigo alpha November mica amazon.com have to take your",
    "start": "170040",
    "end": "175799"
  },
  {
    "text": "feedback you'll also get a feedback survey after the event today where we want to gather some feedback comments",
    "start": "175799",
    "end": "183209"
  },
  {
    "text": "from you about how we're doing with our event programs so please reply to that we will also send out all of the slide",
    "start": "183209",
    "end": "189689"
  },
  {
    "text": "where from today in the form of links to the content on SlideShare where you'll be able to see and download all the",
    "start": "189689",
    "end": "196019"
  },
  {
    "text": "materials from every track so you can refrain from taking pictures of the slides if you are doing that just to get",
    "start": "196019",
    "end": "202530"
  },
  {
    "text": "a record of what we're showing to you because we're going to send that out and we'll also include links there to videos of all the sessions as well that be able",
    "start": "202530",
    "end": "209010"
  },
  {
    "text": "to watch on the AWS YouTube so as well as the vodcast in a week or so we'll have all of the content of available on",
    "start": "209010",
    "end": "214049"
  },
  {
    "text": "YouTube for you to watch as well so plenty of opportunities for you to revisit the content and catch up on",
    "start": "214049",
    "end": "219239"
  },
  {
    "text": "anything that you've missed as well okay so in this room we're focusing on service today not just AWS lamda which",
    "start": "219239",
    "end": "226139"
  },
  {
    "text": "is what a lot of you will think about when we talk about service applications on AWS but also the broader ecosystem of",
    "start": "226139",
    "end": "233220"
  },
  {
    "text": "components that we have that can help architects create applications in this",
    "start": "233220",
    "end": "238500"
  },
  {
    "text": "way and help developers build and deploy and operate applications where you don't",
    "start": "238500",
    "end": "244109"
  },
  {
    "text": "have to worry quite so much about managing underlying infrastructure components you can spend a lot more time",
    "start": "244109",
    "end": "249690"
  },
  {
    "text": "on the higher value parts the unique parts of the applications that you're",
    "start": "249690",
    "end": "256260"
  },
  {
    "text": "building that's what we think about when we talk about actually what we think about when we talk about the AWS cloud",
    "start": "256260",
    "end": "261389"
  },
  {
    "text": "more generally and specifically what we think about when we talk about helping developers build applications in a way",
    "start": "261389",
    "end": "267300"
  },
  {
    "text": "which is service ok so we'll start off with this state of the Union which is a quick recap actually of what's new",
    "start": "267300",
    "end": "273840"
  },
  {
    "text": "with AWS lambda and associated services obviously we had AWS reinvent at the end",
    "start": "273840",
    "end": "279690"
  },
  {
    "text": "of last year see this gentleman down here is wearing one of our reinvent we play t-shirts so just going to recap",
    "start": "279690",
    "end": "284880"
  },
  {
    "text": "quickly some of the stuff that we've launched out reinvent and since then and then we'll move on from this first",
    "start": "284880",
    "end": "290640"
  },
  {
    "text": "session to some deeper content which is more hands-on demo orientated where we're going to show you how to get",
    "start": "290640",
    "end": "297120"
  },
  {
    "text": "started with different aspects of the AWS service toolkit ok so first up after me is going to be Danilo patia if you",
    "start": "297120",
    "end": "303840"
  },
  {
    "text": "don't know Danilo he is the author of a book called AWS Lander in action which was actually the first commercially",
    "start": "303840",
    "end": "311040"
  },
  {
    "text": "published piece of work about building applications using AWS Lander it came out last November so it's about 14",
    "start": "311040",
    "end": "316380"
  },
  {
    "text": "months old that pretty successful Danilo the author of that it's going to be talking first of all today about the",
    "start": "316380",
    "end": "323220"
  },
  {
    "text": "developer experience for creating applications using AWS lambda and the rest of the toolset and then it's going to return at the end of the day for a",
    "start": "323220",
    "end": "329820"
  },
  {
    "text": "session on step functions which is our state machine that enables you to coordinate loosely coupled architectures",
    "start": "329820",
    "end": "337200"
  },
  {
    "text": "of different lambda functions to build more complex apps so that'll be the last session today of the day in the middle we'll have some stuff on dynamodb which",
    "start": "337200",
    "end": "346890"
  },
  {
    "text": "is our state store a non relational database that many customers choose to integrate with AWS lambda and we'll also",
    "start": "346890",
    "end": "353160"
  },
  {
    "text": "have a session on architectural patterns for service apps as well so we're going to tour around all things related to",
    "start": "353160",
    "end": "359010"
  },
  {
    "text": "serving us in this room throughout the course of the day so what is the problem that we're trying to solve here when we",
    "start": "359010",
    "end": "366290"
  },
  {
    "text": "think about enabling developers to create applications without running",
    "start": "366290",
    "end": "372300"
  },
  {
    "text": "machines okay without thinking about these lower level infrastructure building blocks for anything like me and",
    "start": "372300",
    "end": "377880"
  },
  {
    "text": "you've got you know 20 years in IT 20-plus years in IT well it's embarrassing",
    "start": "377880",
    "end": "383750"
  },
  {
    "text": "probably spent the majority of your career thinking about machines okay so I want to deploy an app I need machines",
    "start": "383750",
    "end": "390270"
  },
  {
    "text": "for that we started out with physical you know in my case son asked for one three systems that look like pizza boxes",
    "start": "390270",
    "end": "396780"
  },
  {
    "text": "that lived in racks and then intel architecture machines running Linux and really our building block was the Compaq",
    "start": "396780",
    "end": "403410"
  },
  {
    "text": "or HP DL whatever it was server that would deploy our apps on to write as many as we",
    "start": "403410",
    "end": "408440"
  },
  {
    "text": "needed in order to make that a reality then virtualization arrived and that was really nice it was nice for a couple of",
    "start": "408440",
    "end": "414800"
  },
  {
    "text": "reasons first of all it allowed us to template eyes and deploy operating systems much",
    "start": "414800",
    "end": "419990"
  },
  {
    "text": "more quickly almost in an on-demand way but not quite so shortening the time to",
    "start": "419990",
    "end": "425060"
  },
  {
    "text": "provision these resources and it also helped us with efficiency okay so we could run lots and lots of distinct",
    "start": "425060",
    "end": "432290"
  },
  {
    "text": "machines which were inside their own virtual machine containers on the same",
    "start": "432290",
    "end": "437990"
  },
  {
    "text": "underlying hardware platform that enabled us to use our hardware in a more efficient way and it also enabled some",
    "start": "437990",
    "end": "443810"
  },
  {
    "text": "availability features like we could quickly teleport a virtual machine from one physical box to another with certain",
    "start": "443810",
    "end": "450860"
  },
  {
    "text": "virtualization platforms or we could quickly clone and duplicate large",
    "start": "450860",
    "end": "456440"
  },
  {
    "text": "numbers of machines for testing and development or for scaling purposes so that substrate as it was automated and",
    "start": "456440",
    "end": "463120"
  },
  {
    "text": "virtualized it introduced some characteristics which made it easier for us to get things done in higher levels",
    "start": "463120",
    "end": "470300"
  },
  {
    "text": "of the stack right you're familiar with this idea that we can monetize and automate the platform and then we can",
    "start": "470300",
    "end": "475460"
  },
  {
    "text": "get more done further up the stack and actually serve less AWS lambda and these",
    "start": "475460",
    "end": "481430"
  },
  {
    "text": "are the services that we've created that have similar characteristics we're continuing to move along that continuum",
    "start": "481430",
    "end": "487940"
  },
  {
    "text": "okay so we're thinking more about how we can allow developers how we can allow",
    "start": "487940",
    "end": "493220"
  },
  {
    "text": "software builders and architects to focus only on the things that are unique",
    "start": "493220",
    "end": "498320"
  },
  {
    "text": "to their particular application or service okay and if you consider what's happened with serverless",
    "start": "498320",
    "end": "505040"
  },
  {
    "text": "actually going further down the continuum down this journey that we first took the first steps on when we",
    "start": "505040",
    "end": "512270"
  },
  {
    "text": "started with virtualization technology okay so here we're pushing up the level",
    "start": "512270",
    "end": "517490"
  },
  {
    "text": "of abstraction from the hardware through the operating system into the runtime ok",
    "start": "517490",
    "end": "523729"
  },
  {
    "text": "so rather than having to specify a machine type or specify other",
    "start": "523729",
    "end": "529790"
  },
  {
    "text": "characteristics about the low-level platform or we specify is the runtime container within which we want our",
    "start": "529790",
    "end": "536480"
  },
  {
    "text": "software to run is it node is it Python is it go is it dotnet core is it Java okay we deploy",
    "start": "536480",
    "end": "543910"
  },
  {
    "text": "our package into that in a fixed format and the underlying platform takes care",
    "start": "543910",
    "end": "549399"
  },
  {
    "text": "of these other attributes it takes care of scaling out end copies of that runtime environment in order to satisfy",
    "start": "549399",
    "end": "555760"
  },
  {
    "text": "the level of demand that we have a particular point in time whether that's one function 1000 functions or 100,000",
    "start": "555760",
    "end": "562959"
  },
  {
    "text": "functions the platform will deliver the capacity that we need when we need it on demand spinning up additional copies of",
    "start": "562959",
    "end": "569260"
  },
  {
    "text": "that application with the associated container as we need it it will deal",
    "start": "569260",
    "end": "574389"
  },
  {
    "text": "with high availability in a couple of different ways first of all it will distribute those runtime containers",
    "start": "574389",
    "end": "579850"
  },
  {
    "text": "across lower level infrastructure primitives in our case this is our availability zones so you can target a",
    "start": "579850",
    "end": "586029"
  },
  {
    "text": "particular region within which to run your service application we will take care of ensuring that both compute part",
    "start": "586029",
    "end": "593260"
  },
  {
    "text": "of your app and the state stores and other components like queues or api edges that you might run they're all",
    "start": "593260",
    "end": "599829"
  },
  {
    "text": "distributed across multiple data centers and they're all managed in a way such that you are well not only are you",
    "start": "599829",
    "end": "606610"
  },
  {
    "text": "isolated from failures Fillies are actually invisible to you okay so for a low-level component like a machine or",
    "start": "606610",
    "end": "612550"
  },
  {
    "text": "even an entire data center or availability zone fails do you notice that if you're using a service approach",
    "start": "612550",
    "end": "618880"
  },
  {
    "text": "to architecture no you don't that is something which is below the abstraction",
    "start": "618880",
    "end": "625000"
  },
  {
    "text": "layer at which you're operating and those infrastructure building blocks those infrastructure components even the",
    "start": "625000",
    "end": "632050"
  },
  {
    "text": "large-scale expensive ones like data centers are hidden away from you as a developer or operator you don't see them",
    "start": "632050",
    "end": "638980"
  },
  {
    "text": "okay the next time a copy of your function runs it will be running in a different data center which is still",
    "start": "638980",
    "end": "644589"
  },
  {
    "text": "available and if you're using another one of our abstracted services like dynamo or Kinesis when sq sq we're using",
    "start": "644589",
    "end": "651880"
  },
  {
    "text": "the availability zones to deliver the fundamental availability characteristics of that service component you don't have",
    "start": "651880",
    "end": "658600"
  },
  {
    "text": "to think about what worried about that as part of your deployment planning or part of your operations okay so that's",
    "start": "658600",
    "end": "664839"
  },
  {
    "text": "high availability and then on on pricing actually in the third",
    "start": "664839",
    "end": "671110"
  },
  {
    "text": "last year we changed the way in which pricing works for our Linux based",
    "start": "671110",
    "end": "676200"
  },
  {
    "text": "virtual machines our ec2 instances so we now have per second billing for our",
    "start": "676200",
    "end": "681970"
  },
  {
    "text": "virtual machine platform for our ec2 instances as long as you're running on versions of the Linux operating system",
    "start": "681970",
    "end": "689380"
  },
  {
    "text": "that qualify for that particular billing model okay but lambda takes it beyond",
    "start": "689380",
    "end": "694750"
  },
  {
    "text": "that we have 100 milliseconds billing increments here so you're paying on tenth of a second units of consumption",
    "start": "694750",
    "end": "701490"
  },
  {
    "text": "okay so it's six times better six times more granular than ec2 and very much",
    "start": "701490",
    "end": "710500"
  },
  {
    "text": "more elastic in the sense that we will scale out to very large amounts of capacity if you need them and scale in",
    "start": "710500",
    "end": "718089"
  },
  {
    "text": "to you zero amounts of capacity if your application is completely idle and you're charging will precisely follow",
    "start": "718089",
    "end": "724510"
  },
  {
    "text": "that profile you'll be metered and billed for exactly what you use in terms of usage on this service okay so a very",
    "start": "724510",
    "end": "731380"
  },
  {
    "text": "very efficient way to an applications particularly applications that are highly volatile in terms of their usage",
    "start": "731380",
    "end": "737649"
  },
  {
    "text": "patterns okay we can talk about a few examples of this later but there's one example of a gaming operator here in the",
    "start": "737649",
    "end": "743470"
  },
  {
    "text": "UK that was using AWS lambda very early",
    "start": "743470",
    "end": "748630"
  },
  {
    "text": "in its life time to customize outbound push notifications for a mobile app that",
    "start": "748630",
    "end": "754899"
  },
  {
    "text": "they were running they were delivering 150,000 of these push notifications a",
    "start": "754899",
    "end": "760420"
  },
  {
    "text": "second every single one of them customized for a particular user by merging in data about the user and data",
    "start": "760420",
    "end": "767440"
  },
  {
    "text": "about topics that they were interested in this case Premier League football games pushing those out to mobile",
    "start": "767440",
    "end": "773050"
  },
  {
    "text": "endpoints with customization the only complexity is that they were only doing",
    "start": "773050",
    "end": "778720"
  },
  {
    "text": "this for about a 10 minute period on a Saturday afternoon or only doing it at this level of volume for about 10",
    "start": "778720",
    "end": "785769"
  },
  {
    "text": "minutes on a Saturday afternoon so they could scale their app up to this massive level of capacity push out huge numbers",
    "start": "785769",
    "end": "793480"
  },
  {
    "text": "of these push notifications to drive engagement with the applications that they were running drive engagement with",
    "start": "793480",
    "end": "798699"
  },
  {
    "text": "with the services that they're running and then immediately after that tsunami",
    "start": "798699",
    "end": "803770"
  },
  {
    "text": "of demand had vanished all of their capacity would be taken away and they would just pay for that usage peak for those two spikes at the",
    "start": "803770",
    "end": "811250"
  },
  {
    "text": "end of the first half and at the end of the second half of Premier League games every weekend so a really good tangible",
    "start": "811250",
    "end": "817700"
  },
  {
    "text": "example of how customers put this elasticity put this very very discrete",
    "start": "817700",
    "end": "824120"
  },
  {
    "text": "billing model to use for a specific application type okay so let's take a",
    "start": "824120",
    "end": "830329"
  },
  {
    "text": "look at some of the recent recent enhancements we've made to the ws service platform and the first thing is",
    "start": "830329",
    "end": "837500"
  },
  {
    "text": "thinking about this in the context of developer workflows so let's just say",
    "start": "837500",
    "end": "843230"
  },
  {
    "text": "that you asked to create an application that delivers the ability for customers",
    "start": "843230",
    "end": "849320"
  },
  {
    "text": "to modify a profile for an app okay so typically we would build this by",
    "start": "849320",
    "end": "855950"
  },
  {
    "text": "creating a web or mobile application using a shared API back-end to enable us",
    "start": "855950",
    "end": "861620"
  },
  {
    "text": "to share those business logic components across the different application platforms that we want to use okay so",
    "start": "861620",
    "end": "867529"
  },
  {
    "text": "maybe we got react mobile maybe we got a web app we want to build the backend once want to use the state store that enables",
    "start": "867529",
    "end": "874430"
  },
  {
    "text": "customers to store JSON documents that contain information about their profile and settings want to do this in a way",
    "start": "874430",
    "end": "880820"
  },
  {
    "text": "which is a service so we have a high degree of elasticity we don't have to",
    "start": "880820",
    "end": "885980"
  },
  {
    "text": "think about scaling this application in response to demand or scaling it down in",
    "start": "885980",
    "end": "892370"
  },
  {
    "text": "response to periods of slack demand we want to encode our business logic as lambda functions how do we get started",
    "start": "892370",
    "end": "899390"
  },
  {
    "text": "with that AWS we invent we announced a new component for the AWS service portfolio",
    "start": "899390",
    "end": "906560"
  },
  {
    "text": "called the service application repository okay this is in preview at the moment all familiar with the",
    "start": "906560",
    "end": "912949"
  },
  {
    "text": "difference between private preview preview and beta or so I'll just dig into that quickly so private preview we",
    "start": "912949",
    "end": "919760"
  },
  {
    "text": "invite you to participate essentially so there are services that AWS is developing experimenting with white",
    "start": "919760",
    "end": "926149"
  },
  {
    "text": "right now and there are customers using those services and unless you are working for one of those customers you",
    "start": "926149",
    "end": "932480"
  },
  {
    "text": "don't know about that those services exist okay so we have them under NDA actually a lot of examples of this right",
    "start": "932480",
    "end": "937819"
  },
  {
    "text": "now where we are experimenting with groups of early adopters to help us refine use",
    "start": "937819",
    "end": "944680"
  },
  {
    "text": "cases help us refine console experiences help us refine service offerings even",
    "start": "944680",
    "end": "949900"
  },
  {
    "text": "pricing plans and business models for new services that we're thinking about but if we haven't invited you to participate you wouldn't know about them",
    "start": "949900",
    "end": "956500"
  },
  {
    "text": "okay so that's a private preview a public preview which is the state that this service is in it means we've",
    "start": "956500",
    "end": "961690"
  },
  {
    "text": "announced the service okay we have asked customers to participate in the preview but it is a gated signup okay so to",
    "start": "961690",
    "end": "968560"
  },
  {
    "text": "access the preview you come to our website the product detail page typically you register for the preview",
    "start": "968560",
    "end": "975250"
  },
  {
    "text": "we qualify your use case and then we gate you into the preview by white listing you activating you to use that",
    "start": "975250",
    "end": "982750"
  },
  {
    "text": "particular service once your white listed and the process of white listing requires your AWS account number then",
    "start": "982750",
    "end": "989110"
  },
  {
    "text": "you can see modifications in our console you can access the API endpoints associated with that particular service",
    "start": "989110",
    "end": "995200"
  },
  {
    "text": "often by downloading custom model files that are used with our CLI or SDKs okay",
    "start": "995200",
    "end": "1001020"
  },
  {
    "text": "this is an example of a console screenshot from an account that's been whitelisted for this service application",
    "start": "1001020",
    "end": "1007470"
  },
  {
    "text": "repository which is a new service that we have in praat in public preview right now it's my AWS account actually a",
    "start": "1007470",
    "end": "1014400"
  },
  {
    "text": "discount of a colleague and you can see that I've got a panel here which shows the serverless application repository",
    "start": "1014400",
    "end": "1019620"
  },
  {
    "text": "this is in the lambda create function page within the AWS lambda console okay",
    "start": "1019620",
    "end": "1027030"
  },
  {
    "text": "so if you're not white listed you're still going to have these two things or from scratch and blueprints you're not",
    "start": "1027030",
    "end": "1032400"
  },
  {
    "text": "going to see this box okay and this box exposes new functionality for customers",
    "start": "1032400",
    "end": "1038189"
  },
  {
    "text": "that allows them to access a library or marketplace of prepackaged applications",
    "start": "1038190",
    "end": "1044790"
  },
  {
    "text": "that have been created by other developers ok create both the developers and uploaded into the service",
    "start": "1044790",
    "end": "1051510"
  },
  {
    "text": "application repository as templates or full-blown applications that other AWS",
    "start": "1051510",
    "end": "1059010"
  },
  {
    "text": "customers can choose to use okay when you choose to use one you are going to be deploying one of these template",
    "start": "1059010",
    "end": "1065160"
  },
  {
    "text": "applications into your AWS account so you're going to be creating resources within your AWS account",
    "start": "1065160",
    "end": "1071929"
  },
  {
    "text": "that are defined within the service application template which is defined using our Sam service application model",
    "start": "1071929",
    "end": "1078129"
  },
  {
    "text": "templating language from this repository okay you can search the repository you",
    "start": "1078129",
    "end": "1083840"
  },
  {
    "text": "can see the popularity of applications and templates that have been deposited there by other developers and you can",
    "start": "1083840",
    "end": "1090740"
  },
  {
    "text": "also see their authorship ok so establish who's created them as a developer you can also create your own",
    "start": "1090740",
    "end": "1097399"
  },
  {
    "text": "application templates using Sam and you can upload those into the service",
    "start": "1097399",
    "end": "1102679"
  },
  {
    "text": "application repository we take them through a short qualification process and then other developers will be able",
    "start": "1102679",
    "end": "1108769"
  },
  {
    "text": "to make use of your applications inside their AWS accounts so it's a little bit",
    "start": "1108769",
    "end": "1114289"
  },
  {
    "text": "like Amazon machine images or Army's for virtual machines which a lot of you will be familiar with you can share those",
    "start": "1114289",
    "end": "1120409"
  },
  {
    "text": "across accounts but it's for a different type of abstraction the type of abstraction that it's for of course is",
    "start": "1120409",
    "end": "1126110"
  },
  {
    "text": "the serverless app and the abstraction model that's used is the Sam templates that I've talked about a second ago ok",
    "start": "1126110",
    "end": "1132980"
  },
  {
    "text": "and these Sam templates are Yama files using a defined syntax of course they",
    "start": "1132980",
    "end": "1140539"
  },
  {
    "text": "can benefit from things like expansion tokens so when a nother AWS customer",
    "start": "1140539",
    "end": "1146960"
  },
  {
    "text": "chooses to deploy an application from the service application repository it gets customized for their account ok so",
    "start": "1146960",
    "end": "1153799"
  },
  {
    "text": "we're gonna do token expansion here create things like custom s3 buckets",
    "start": "1153799",
    "end": "1158869"
  },
  {
    "text": "custom Kinesis streams potentially other types of resource and those will be for",
    "start": "1158869",
    "end": "1163970"
  },
  {
    "text": "specific for that instance of the application created within a target account within the users account ok so",
    "start": "1163970",
    "end": "1170779"
  },
  {
    "text": "you can modify the apps using this template driven approach so what why",
    "start": "1170779",
    "end": "1178490"
  },
  {
    "text": "would we have this well it enables you to share and browse ready-made applications and samples ok it enables",
    "start": "1178490",
    "end": "1184909"
  },
  {
    "text": "you to do that publicly so I can open up an application for general use by any other AWS customer it also enables me to",
    "start": "1184909",
    "end": "1192320"
  },
  {
    "text": "do it privately so if I'm working in an organization where I've got say several different independent teams that are",
    "start": "1192320",
    "end": "1199100"
  },
  {
    "text": "working on creating services that we want to share within our company or even within our company and with selected",
    "start": "1199100",
    "end": "1204919"
  },
  {
    "text": "third part to customers or partners we can create applications within this service application repository and then we can",
    "start": "1204919",
    "end": "1211659"
  },
  {
    "text": "whitelist specific target accounts ourselves and make those applications visible only to those specific accounts",
    "start": "1211659",
    "end": "1217929"
  },
  {
    "text": "okay so I could use this within an enterprise within our customer organization to create my own reusable",
    "start": "1217929",
    "end": "1225159"
  },
  {
    "text": "library of service components that other development teams inside my own organization could then reuse in a",
    "start": "1225159",
    "end": "1231970"
  },
  {
    "text": "trusted way so it's a distribution model I can use in that way today it's not",
    "start": "1231970",
    "end": "1237220"
  },
  {
    "text": "possible to directly monetize applications within the repository okay but it is possible to point applications",
    "start": "1237220",
    "end": "1243190"
  },
  {
    "text": "within repository of course at commercial API endpoints okay so if I was providing say payment services API",
    "start": "1243190",
    "end": "1250210"
  },
  {
    "text": "or a geospatial data API or some sort of data analytics or even AI or ML API I",
    "start": "1250210",
    "end": "1256870"
  },
  {
    "text": "could hard code those API endpoints inside my application templates and I",
    "start": "1256870",
    "end": "1263110"
  },
  {
    "text": "could require registration and establish a monetization boundary at those API",
    "start": "1263110",
    "end": "1268120"
  },
  {
    "text": "endpoints that are consumed by my service apps so I can use this as a mechanism for delivering service SDKs",
    "start": "1268120",
    "end": "1276279"
  },
  {
    "text": "essentially that enable my customers to use services that I do choose to charge for within my own business model okay so",
    "start": "1276279",
    "end": "1283630"
  },
  {
    "text": "we have that and within our AWS marketplace we have a mechanism for charging metering and managing",
    "start": "1283630",
    "end": "1290799"
  },
  {
    "text": "subscriptions to API endpoints you can actually manage all that within the AWS",
    "start": "1290799",
    "end": "1295960"
  },
  {
    "text": "marketplace environment allowing your customers to sign up for your api's bill",
    "start": "1295960",
    "end": "1301149"
  },
  {
    "text": "via their existing AWS account relationships and then we pay you for that consumption okay if you're",
    "start": "1301149",
    "end": "1307960"
  },
  {
    "text": "interested in doing that you should talk to us ok we have a partner program for API providers that want to do that or",
    "start": "1307960",
    "end": "1313990"
  },
  {
    "text": "you could use your own alternative sign up and author authorization authentication mechanism equally okay and then we have of course",
    "start": "1313990",
    "end": "1320830"
  },
  {
    "text": "this Sam model which is actually a derivative of AWS CloudFormation using",
    "start": "1320830",
    "end": "1325929"
  },
  {
    "text": "Yamahas already mentioned that enables you to define applications in this way using both a simplified notation for",
    "start": "1325929",
    "end": "1334629"
  },
  {
    "text": "commonly used serverless resources which you'll hear more about in the second session of day or full-blown cloud formation if you",
    "start": "1334629",
    "end": "1341990"
  },
  {
    "text": "want to use full-blown AWS resources like I am roles Kinesis streams and some",
    "start": "1341990",
    "end": "1347720"
  },
  {
    "text": "of these higher-order services that are not currently supported by Sam Sam is",
    "start": "1347720",
    "end": "1354110"
  },
  {
    "text": "open source you can find the definitions that are used for that model on the AWS",
    "start": "1354110",
    "end": "1360530"
  },
  {
    "text": "github account okay so that's servlet application repository the second new",
    "start": "1360530",
    "end": "1366680"
  },
  {
    "text": "thing that we announced at AWS reinvent was a set of enhancements to the AWS",
    "start": "1366680",
    "end": "1374630"
  },
  {
    "text": "lambda console okay so the familiar with the lambda console since launch you've",
    "start": "1374630",
    "end": "1380690"
  },
  {
    "text": "been able to edit handlers in there when I talk about handler I'm talking about",
    "start": "1380690",
    "end": "1387140"
  },
  {
    "text": "the entry point that the runtime invokes when a function is initiated okay it's",
    "start": "1387140",
    "end": "1395300"
  },
  {
    "text": "typically one file of JavaScript - we",
    "start": "1395300",
    "end": "1400910"
  },
  {
    "text": "now support c-sharp which we'll talk about a little bit later we now support go and we also support Java but",
    "start": "1400910",
    "end": "1407270"
  },
  {
    "text": "typically customers have used the editor within the console to edit the",
    "start": "1407270",
    "end": "1412760"
  },
  {
    "text": "interpreted languages and to do that with simple functions that do not have dependencies okay so there was a",
    "start": "1412760",
    "end": "1419000"
  },
  {
    "text": "variation in the deployment model for simple functions which didn't have dependencies or deployment packages",
    "start": "1419000",
    "end": "1426710"
  },
  {
    "text": "where you needed to include dependencies within the deployment package for the second option you would create a zip",
    "start": "1426710",
    "end": "1432530"
  },
  {
    "text": "file as part of your pipeline or on your workstation and then push that into the",
    "start": "1432530",
    "end": "1437780"
  },
  {
    "text": "AWS lambda API or upload it to Amazon s3 in referencing and then lambda would",
    "start": "1437780",
    "end": "1443720"
  },
  {
    "text": "grab that and establish it within your account as the container basis that would be used when that function was",
    "start": "1443720",
    "end": "1449510"
  },
  {
    "text": "invoked with this new editor we've removed the limitation on editing multi",
    "start": "1449510",
    "end": "1455840"
  },
  {
    "text": "file packages okay so you can see and edit the complete file hierarchy does it",
    "start": "1455840",
    "end": "1462290"
  },
  {
    "text": "include is included within your deployable directly within the console you can also add new dependencies and",
    "start": "1462290",
    "end": "1467630"
  },
  {
    "text": "modify existing dependencies directly within this okay can also run tests and view results",
    "start": "1467630",
    "end": "1474460"
  },
  {
    "text": "and logs for interpreted languages directly within the editor and you have this WYSIWYG what you see is what you",
    "start": "1474460",
    "end": "1480460"
  },
  {
    "text": "get designer for authoring functions as well so it's a real improvement to the developer experience directly within the",
    "start": "1480460",
    "end": "1487090"
  },
  {
    "text": "lambda console you're gonna see a lot more of that in the second session after the break this morning we're danilo will",
    "start": "1487090",
    "end": "1492700"
  },
  {
    "text": "demo the new editor functionality that we have there it means that you can see",
    "start": "1492700",
    "end": "1500080"
  },
  {
    "text": "that dependencies that your function has so for example if my function has I am",
    "start": "1500080",
    "end": "1506710"
  },
  {
    "text": "roles associated with it which grant the permission to access other AWS service endpoints those are visible visually",
    "start": "1506710",
    "end": "1514510"
  },
  {
    "text": "within the function I can see the I am roles associated with the function I can see the service icons for the AWS",
    "start": "1514510",
    "end": "1521200"
  },
  {
    "text": "services that function is authorized to call and I can directly drill into things like the I am policies from",
    "start": "1521200",
    "end": "1526780"
  },
  {
    "text": "within the console okay so you get a visual display of what the trust",
    "start": "1526780",
    "end": "1533230"
  },
  {
    "text": "relationships are between that function of their AWS service it's actually really helpful for operating under a",
    "start": "1533230",
    "end": "1538990"
  },
  {
    "text": "principle of least privilege you know you could look at a function think why have I got access to X or Y if it's not",
    "start": "1538990",
    "end": "1544570"
  },
  {
    "text": "required in my code and then Grunch down close down your security policies as a",
    "start": "1544570",
    "end": "1549850"
  },
  {
    "text": "result of that visual display that's the main way that I use it ya can also attach new policies directly within the",
    "start": "1549850",
    "end": "1555040"
  },
  {
    "text": "console as well okay so that's the function and danilo will show you this after the break the other thing we've",
    "start": "1555040",
    "end": "1562360"
  },
  {
    "text": "done is work on quite a few develop the",
    "start": "1562360",
    "end": "1567580"
  },
  {
    "text": "quality of life enhancements to improve the breadth of use cases that lambda can",
    "start": "1567580",
    "end": "1573850"
  },
  {
    "text": "be applied to and fix some common hurdles really or allow developers to",
    "start": "1573850",
    "end": "1580020"
  },
  {
    "text": "overcome some common hurdles to using AWS lambda more easily okay so the first",
    "start": "1580020",
    "end": "1585340"
  },
  {
    "text": "thing is we have increased the number of concurrent executions to a thousand",
    "start": "1585340",
    "end": "1591760"
  },
  {
    "text": "concurrent executions per account per region by default it used to be a hundred so this means that you can have",
    "start": "1591760",
    "end": "1599170"
  },
  {
    "text": "a thousand [Music] thousand concurrent copies of your",
    "start": "1599170",
    "end": "1605159"
  },
  {
    "text": "functions in aggregate running in any region without having to ask for what we call a limit increase or in fact contact",
    "start": "1605159",
    "end": "1613320"
  },
  {
    "text": "AWS in any way so that is the new default that all accounts benefit from and that really converts to about ten",
    "start": "1613320",
    "end": "1620130"
  },
  {
    "text": "thousand transactions per second if you've got 100 millisecond or less execution time on of course okay we also",
    "start": "1620130",
    "end": "1627929"
  },
  {
    "text": "have Auto approval to three times the default automatically on request so if",
    "start": "1627929",
    "end": "1633659"
  },
  {
    "text": "you do raise the limit request and you say I want to go up to 3000 concurrent function executions per region as long",
    "start": "1633659",
    "end": "1640289"
  },
  {
    "text": "as your account has what we call a good containment score in other words there's nothing there that indicates that the",
    "start": "1640289",
    "end": "1645360"
  },
  {
    "text": "account is a risk in any way we will automatically approve you for 3,000 concurrent executions per region okay",
    "start": "1645360",
    "end": "1653549"
  },
  {
    "text": "and as I've already mentioned many many customers have much much higher limits",
    "start": "1653549",
    "end": "1659159"
  },
  {
    "text": "than that about six months after launch I was aware of this one customer that had 125 thousand concurrent executions",
    "start": "1659159",
    "end": "1666720"
  },
  {
    "text": "per region which is a 1.2 million times the old default okay so we can grow a",
    "start": "1666720",
    "end": "1673529"
  },
  {
    "text": "big in terms of giving you lots and lots of execution capacity so why do you",
    "start": "1673529",
    "end": "1678720"
  },
  {
    "text": "think these limits are there you know why do you think if we can go so big why do you think we have limits of a thousand concurrent or three thousand",
    "start": "1678720",
    "end": "1684830"
  },
  {
    "text": "automatic approval the answer is to protect you to protect customers from",
    "start": "1684830",
    "end": "1690450"
  },
  {
    "text": "excessive spend so we would recommend tuning these limits in a way which gates",
    "start": "1690450",
    "end": "1695820"
  },
  {
    "text": "your AWS bill constrains your AWS bill if you've got an expected level of usage",
    "start": "1695820",
    "end": "1700830"
  },
  {
    "text": "then try to set your limits just a little bit above the expected level of usage if you do get say a distributed",
    "start": "1700830",
    "end": "1709620"
  },
  {
    "text": "denial of service attack against one of your endpoints or you somehow introduce a bug in your code which drives much",
    "start": "1709620",
    "end": "1715679"
  },
  {
    "text": "much higher than anticipated levels of usage you'll get throttled okay you'll see that in your cloud watch metrics and",
    "start": "1715679",
    "end": "1722309"
  },
  {
    "text": "you'll prevent yourselves from having a large billing overrun as a result of excessive usage so you should tune these",
    "start": "1722309",
    "end": "1728669"
  },
  {
    "text": "limits in a way which is consistent with your anticipated level of usage they're there not to really protect us then more",
    "start": "1728669",
    "end": "1735210"
  },
  {
    "text": "there to protect you and ensure you're operating in a way which is cost optimal okay so use them use them we've",
    "start": "1735210",
    "end": "1741280"
  },
  {
    "text": "got some other enhancements that we've made as well and if you do need to go extremely wide and have real mass scale",
    "start": "1741280",
    "end": "1747040"
  },
  {
    "text": "concurrent function execution again you should chat with us okay we can help you in a few things firstly the limit",
    "start": "1747040",
    "end": "1752170"
  },
  {
    "text": "increase of course but secondly with offering guidance about how you might optimize your application to reduce",
    "start": "1752170",
    "end": "1757750"
  },
  {
    "text": "costs or do real-world performance testing through load injection to ensure",
    "start": "1757750",
    "end": "1762880"
  },
  {
    "text": "that your function performs in the way you anticipate once you start to drive really significant load to it okay so",
    "start": "1762880",
    "end": "1768760"
  },
  {
    "text": "your functions are unlikely to exist in isolation it's probable that you've got a state store behind them or a queue",
    "start": "1768760",
    "end": "1775060"
  },
  {
    "text": "behind them so let us help you assess your architecture and make sure that when you turn up this dial at the front",
    "start": "1775060",
    "end": "1780190"
  },
  {
    "text": "end you're not going to cause issues as you get into the dependencies within your app let's help you let us review",
    "start": "1780190",
    "end": "1786520"
  },
  {
    "text": "your architecture with you and make sure that you're making the best and most efficient use of AWS that you can for",
    "start": "1786520",
    "end": "1792190"
  },
  {
    "text": "cost optimization and for performance of course we've got lots of experience with helping customers do this stuff at scale",
    "start": "1792190",
    "end": "1798720"
  },
  {
    "text": "the other thing we've done is work on cold start optimization now this is a",
    "start": "1798720",
    "end": "1805510"
  },
  {
    "text": "bit of internals here so what do you think actually happens when my lambda function gets invoked if I haven't run",
    "start": "1805510",
    "end": "1812830"
  },
  {
    "text": "it for a while okay lambda functions are packaged up in containers okay and those",
    "start": "1812830",
    "end": "1818890"
  },
  {
    "text": "containers have to be deployed down on to what CPUs because believe it or not",
    "start": "1818890",
    "end": "1824020"
  },
  {
    "text": "within serverless are actually CPUs involved there is memory there is memory bandwidth there",
    "start": "1824020",
    "end": "1829060"
  },
  {
    "text": "are memory controllers there are solid state disks there are machines there okay it's just you'd have to worry about them okay but we still need to get the container",
    "start": "1829060",
    "end": "1835600"
  },
  {
    "text": "from its storage location within AWS down onto that CPU so it can start to be",
    "start": "1835600",
    "end": "1840850"
  },
  {
    "text": "executed right we also need to wire in the programmable networking platform and deliver traffic to and from that end",
    "start": "1840850",
    "end": "1847060"
  },
  {
    "text": "point otherwise it will execute in isolation you'll never get the results back to your API request you'll never",
    "start": "1847060",
    "end": "1852490"
  },
  {
    "text": "process that object in that data stream or respond to that event right so that",
    "start": "1852490",
    "end": "1859090"
  },
  {
    "text": "results in what we call a cold start the first time the container is deployed on to that machine and then subsequent",
    "start": "1859090",
    "end": "1865660"
  },
  {
    "text": "executions while it's cached okay and that machine will get hit by the next deven the next event the next event",
    "start": "1865660",
    "end": "1871880"
  },
  {
    "text": "potentially running multiple copies of the same container until we exhaust the",
    "start": "1871880",
    "end": "1877070"
  },
  {
    "text": "resources of the VM which is hosting that particular function that particular container and then what happens",
    "start": "1877070",
    "end": "1883160"
  },
  {
    "text": "we need another machine for more budget so we pull down another container somewhere in your metrics you'll see one",
    "start": "1883160",
    "end": "1889580"
  },
  {
    "text": "more function star which is a cold start which has a higher degree of latency okay and then that machine's warm and",
    "start": "1889580",
    "end": "1895820"
  },
  {
    "text": "that's getting used and then ever we get a third fourth fifth and six machine and each time we bring one of these machines into the survey so you get one function",
    "start": "1895820",
    "end": "1902750"
  },
  {
    "text": "star which is slightly slower than all of the others okay because that is a cold start we've done work here to",
    "start": "1902750",
    "end": "1910310"
  },
  {
    "text": "optimize that particularly for large functions so let's have an issue for",
    "start": "1910310",
    "end": "1917120"
  },
  {
    "text": "simple functions where you have either small statically compiled binaries with",
    "start": "1917120",
    "end": "1923120"
  },
  {
    "text": "things like golang functions or small scripts in Python or Java Script which obviously interpreted on the machine all",
    "start": "1923120",
    "end": "1929810"
  },
  {
    "text": "you're pushing down is the source essentially for interpreter execution",
    "start": "1929810",
    "end": "1934940"
  },
  {
    "text": "with large byte code so Java functions",
    "start": "1934940",
    "end": "1939950"
  },
  {
    "text": "predominantly that are really big ok can be really big if you've got a lot of dependencies built into them you've got",
    "start": "1939950",
    "end": "1946280"
  },
  {
    "text": "a large container to move across the network and that's where this 80% reduction in function start time comes",
    "start": "1946280",
    "end": "1952220"
  },
  {
    "text": "in we've taken steps to optimize the way in which we get the containers from the",
    "start": "1952220",
    "end": "1957320"
  },
  {
    "text": "container registries we run down onto the execution machines to minimize that",
    "start": "1957320",
    "end": "1963140"
  },
  {
    "text": "cold start time for larger functions that was something that a few customers suggested we focus on in order to",
    "start": "1963140",
    "end": "1968480"
  },
  {
    "text": "improve efficiency third thing we've done is changed the lambda console to",
    "start": "1968480",
    "end": "1975230"
  },
  {
    "text": "make it easier to surface and access execution logs for your functions so we have integration here with something",
    "start": "1975230",
    "end": "1980510"
  },
  {
    "text": "called cloud watch logs which allows us to collect log streams from the lambda",
    "start": "1980510",
    "end": "1988460"
  },
  {
    "text": "functions that are executing store those in a central location in a durable way",
    "start": "1988460",
    "end": "1994430"
  },
  {
    "text": "and enable you to search them even enable you to create metrics on top of those logs if you wish to do so and what",
    "start": "1994430",
    "end": "2001990"
  },
  {
    "text": "we have done is integrate the experience for accessing those logs directly within the console so I can look at my",
    "start": "2001990",
    "end": "2007630"
  },
  {
    "text": "functions in the lambda console click a button and immediately see all of the log streams associated with that",
    "start": "2007630",
    "end": "2012850"
  },
  {
    "text": "function so it's a quality of life improvement really it just makes it easier for you to access your logging data very helpful if you're a bad Python",
    "start": "2012850",
    "end": "2019960"
  },
  {
    "text": "programmer like me and you have a lot of debugging to do ok come to my session",
    "start": "2019960",
    "end": "2025600"
  },
  {
    "text": "later when amaz and Lex and see exactly how bad I am memory size this is another very",
    "start": "2025600",
    "end": "2032440"
  },
  {
    "text": "important attribute of AWS lambda is sometimes I think not as well understood as it could be so when we talk about",
    "start": "2032440",
    "end": "2038490"
  },
  {
    "text": "memory allocation okay we're not just talking about memory allocation we talk about memory",
    "start": "2038490",
    "end": "2044650"
  },
  {
    "text": "allocation for functions you can replace memory with resource allocation okay the",
    "start": "2044650",
    "end": "2050470"
  },
  {
    "text": "dial that you turn is RAM okay from 128 Meg's up to 3 gigs now as we've doubled",
    "start": "2050470",
    "end": "2056020"
  },
  {
    "text": "the the top limit on that but you're actually allocating not only Ram you're actually allocating machine shares ok",
    "start": "2056020",
    "end": "2062560"
  },
  {
    "text": "and when you allocate machine shares you're giving Ram CPU and network bandwidth to that function in proportion",
    "start": "2062560",
    "end": "2070510"
  },
  {
    "text": "they all scale linearly in accordance with the amount of memory that you give so a 128 megabytes function turn it up",
    "start": "2070510",
    "end": "2080350"
  },
  {
    "text": "to one point two eight gigs you're giving 10 times the amount of CPU",
    "start": "2080350",
    "end": "2085780"
  },
  {
    "text": "performance and ten times the amount of network performance and ten times the amount of sockets TCP sockets for that",
    "start": "2085780",
    "end": "2092648"
  },
  {
    "text": "function as well okay so if you've got a function which is resource constrained not just a memory but on CPU or i/o or",
    "start": "2092649",
    "end": "2100620"
  },
  {
    "text": "network performance you can increase all of those things by turning up the amount of memory that you allocate okay so if",
    "start": "2100620",
    "end": "2107620"
  },
  {
    "text": "you've got a function is CPU intensive give it more memory or get more CPU and it will perform more quickly even if it",
    "start": "2107620",
    "end": "2113920"
  },
  {
    "text": "doesn't need all the memory budget this is just a lever that you pull but when you pull a lever it's just to make it big bigger or make it smaller lever that",
    "start": "2113920",
    "end": "2120730"
  },
  {
    "text": "you're pulling and all resources will scale in accordance with that memory budget allocation okay by turning up the",
    "start": "2120730",
    "end": "2127330"
  },
  {
    "text": "maximum from 1.5 to 3 gigs what we're doing actually is saying are we allowing your functions to have twice as much CPU",
    "start": "2127330",
    "end": "2134020"
  },
  {
    "text": "and twice as much memory performance as well as why it's twice as much network performance as well as twice as much",
    "start": "2134020",
    "end": "2139780"
  },
  {
    "text": "memory yeah and then brand-new this is 15 to January we made these two new",
    "start": "2139780",
    "end": "2147370"
  },
  {
    "text": "runtimes available such as three weeks ago dotnet core 2.0 so C sharp and net",
    "start": "2147370",
    "end": "2154450"
  },
  {
    "text": "core 2.0 runtime that's available now and support for golang as well so you",
    "start": "2154450",
    "end": "2159880"
  },
  {
    "text": "can run your lightweight statically compiled normally high performance go on",
    "start": "2159880",
    "end": "2166560"
  },
  {
    "text": "AWS lambda as well and over here we also integrated something called Sam local",
    "start": "2166560",
    "end": "2174010"
  },
  {
    "text": "which enables you to run many components of the AWS service platform on a",
    "start": "2174010",
    "end": "2180400"
  },
  {
    "text": "developer laptop your local machine independent of the cloud we also integrated golang runtime into that and",
    "start": "2180400",
    "end": "2186340"
  },
  {
    "text": "we created some templates in another service we have called AWS code staff",
    "start": "2186340",
    "end": "2191470"
  },
  {
    "text": "for continuous integration for Galang as well and we also shipped a beta SDK for",
    "start": "2191470",
    "end": "2197140"
  },
  {
    "text": "another service that we have called AWS x-ray which is an instrumentation and tracing service that enables you to",
    "start": "2197140",
    "end": "2203650"
  },
  {
    "text": "provide distributed visible visibility into distributed applications using a",
    "start": "2203650",
    "end": "2209530"
  },
  {
    "text": "small SDK that you embed into your lambda functions okay so we also have support for go in AWS x-ray as well okay",
    "start": "2209530",
    "end": "2216160"
  },
  {
    "text": "that all came out on the same day on the 15th and most of it was developed by Paul Maddox who is next door right now",
    "start": "2216160",
    "end": "2222190"
  },
  {
    "text": "talking about containers one of our one of our solutions architects specializing in DevOps and servals okay so that's all",
    "start": "2222190",
    "end": "2231490"
  },
  {
    "text": "about these quality of life improvements the other thing that we have worked on",
    "start": "2231490",
    "end": "2237730"
  },
  {
    "text": "is in the wraparound if you like the CI",
    "start": "2237730",
    "end": "2242830"
  },
  {
    "text": "CD tooling the IDE tool chain the deployment capabilities that make it",
    "start": "2242830",
    "end": "2250560"
  },
  {
    "text": "safer to use AWS lambda inside",
    "start": "2250560",
    "end": "2255760"
  },
  {
    "text": "production apps because there's been a big area of focus for customers we were lacking at first launch a couple of",
    "start": "2255760",
    "end": "2261100"
  },
  {
    "text": "years ago we were lacking some of these lacking support for some of these",
    "start": "2261100",
    "end": "2266440"
  },
  {
    "text": "requirements that customers really need in order to run AWS lambda and product okay so some of the things we've done on",
    "start": "2266440",
    "end": "2271719"
  },
  {
    "text": "this side of things first of all we announced a new service we invent called AWS cloud 9 okay so it's a company we",
    "start": "2271719",
    "end": "2279880"
  },
  {
    "text": "acquired a couple of years ago we called cloud 9 we've rebranded a this provides a cloud-based IDE",
    "start": "2279880",
    "end": "2285849"
  },
  {
    "text": "okay so you can establish an integrated development environment that runs inside your browser with an editor with a",
    "start": "2285849",
    "end": "2295479"
  },
  {
    "text": "debugger with the ability to invoke a",
    "start": "2295479",
    "end": "2301650"
  },
  {
    "text": "console session a terminal session and inside there is lambda blueprint support",
    "start": "2301650",
    "end": "2308849"
  },
  {
    "text": "support for some local which you just mentioned a minute ago so that's the idea that you can run a server list",
    "start": "2308849",
    "end": "2314529"
  },
  {
    "text": "development environment on your developer laptop or workstation well you can also run that same server list",
    "start": "2314529",
    "end": "2320289"
  },
  {
    "text": "developer environment in the cloud integrated into the cloud9 IDE okay that",
    "start": "2320289",
    "end": "2325779"
  },
  {
    "text": "provides a testing harness it provides a local runtime environment for our API",
    "start": "2325779",
    "end": "2330849"
  },
  {
    "text": "gateway for AWS lambda and it provides an emulator for dynamodb as well so you can run a complete service environment",
    "start": "2330849",
    "end": "2338859"
  },
  {
    "text": "as you would define it using Sam the service application model natively within the IDE within cloud9 IDE or",
    "start": "2338859",
    "end": "2344979"
  },
  {
    "text": "natively directly on your laptop and on your laptop obviously you can do that in disconnected mode as well okay so you can build and test serverless apps",
    "start": "2344979",
    "end": "2352359"
  },
  {
    "text": "without being connected to the cloud or to the internet for that matter okay so pretty useful for developers that might",
    "start": "2352359",
    "end": "2357849"
  },
  {
    "text": "be working mobile mobile with this cloud9 IDE you can deploy directly to",
    "start": "2357849",
    "end": "2364179"
  },
  {
    "text": "lambda you can also of course integrate with git based source control systems",
    "start": "2364179",
    "end": "2370269"
  },
  {
    "text": "get compatible source control systems to enable you to take your code out of the IDE push it to get and then pull it down",
    "start": "2370269",
    "end": "2376660"
  },
  {
    "text": "onto a developer laptop so you can move code out of the IDE into the mobile developer environments if you need it",
    "start": "2376660",
    "end": "2382119"
  },
  {
    "text": "and we have IDE debugging for lambda functions so for JavaScript functions you can set breakpoints do step based",
    "start": "2382119",
    "end": "2390339"
  },
  {
    "text": "execution inspect variables another aspects of program State natively within the IDE so you can connect a debugger to",
    "start": "2390339",
    "end": "2397569"
  },
  {
    "text": "a container which is running your lambda function within the some local environment again which has been one of the things that",
    "start": "2397569",
    "end": "2403510"
  },
  {
    "text": "as I've asked for since we created this service back in 2015 okay so tidying up enhancing the",
    "start": "2403510",
    "end": "2410680"
  },
  {
    "text": "developer experience which Danilo will show in the next session in more detail and then deployment so you can deploy to",
    "start": "2410680",
    "end": "2420390"
  },
  {
    "text": "AWS lambda using another service we have called code pipeline this is a service",
    "start": "2420390",
    "end": "2426340"
  },
  {
    "text": "for established and managed service for establishing build pipelines natively within AWS so commit to source code",
    "start": "2426340",
    "end": "2434740"
  },
  {
    "text": "repositories github our own code commit service build lambda deployment packages",
    "start": "2434740",
    "end": "2440880"
  },
  {
    "text": "using dependency management with requirements txt or with node modules or",
    "start": "2440880",
    "end": "2446530"
  },
  {
    "text": "with byte code compilation steps for Java establish your deployment package",
    "start": "2446530",
    "end": "2452500"
  },
  {
    "text": "that zip file I was talking about earlier and potentially encompass of the",
    "start": "2452500",
    "end": "2458530"
  },
  {
    "text": "CloudFormation resources in that deployment package then push all of that to cloud formation or directly to",
    "start": "2458530",
    "end": "2465640"
  },
  {
    "text": "deployment into AWS lambda via AWS code deploy which is our deployment service now the cool thing about this is it's",
    "start": "2465640",
    "end": "2473590"
  },
  {
    "text": "wrapped up in another service that I mentioned earlier called code star and you can literally establish that whole",
    "start": "2473590",
    "end": "2479680"
  },
  {
    "text": "build pipeline in like five clicks within the AWS console which will create",
    "start": "2479680",
    "end": "2484870"
  },
  {
    "text": "you a source code repository with a template application in it establish the build automation and the deployment",
    "start": "2484870",
    "end": "2491980"
  },
  {
    "text": "automation for you and create the template function as a first deployment target can then modify your code check",
    "start": "2491980",
    "end": "2498940"
  },
  {
    "text": "it into the source code repository and whatever commit you make will end up reflected in AWS lambda in just a couple",
    "start": "2498940",
    "end": "2505600"
  },
  {
    "text": "of minutes it is so easy to use as a developer getting started with AWS for creating applications I can't really",
    "start": "2505600",
    "end": "2512890"
  },
  {
    "text": "imagine why you'd do it any other way okay we support github at the beginning as well as code commits so you can also",
    "start": "2512890",
    "end": "2518800"
  },
  {
    "text": "develop applications in the open using the same kind of pipeline with a",
    "start": "2518800",
    "end": "2524320"
  },
  {
    "text": "web-based commit and branch management",
    "start": "2524320",
    "end": "2529390"
  },
  {
    "text": "tool if you want or you can use our code commit service which has some advantages",
    "start": "2529390",
    "end": "2534700"
  },
  {
    "text": "in terms of security and comply for customers that might be operating in regulated or highly secure environments",
    "start": "2534700",
    "end": "2540430"
  },
  {
    "text": "or care cost benefits from things like our ISO 27001 and PCI DSS compliance",
    "start": "2540430",
    "end": "2546370"
  },
  {
    "text": "statements and for certain types of developers that's obviously obviously very very important but you can also use github if that's your preferred model if",
    "start": "2546370",
    "end": "2554470"
  },
  {
    "text": "you've not used code star I mean if you've got one takeaway from this whole tract today okay I would say go and try",
    "start": "2554470",
    "end": "2560530"
  },
  {
    "text": "blowing a servlet application using this tool it is so easy I just don't understand why you would do it any other",
    "start": "2560530",
    "end": "2567130"
  },
  {
    "text": "way and your first pipeline is in the free tier as well so it will cost you nothing to experiment with it's a really really",
    "start": "2567130",
    "end": "2572650"
  },
  {
    "text": "good tool now on deployments specifically what I've described of course is pretty simple okay so that is",
    "start": "2572650",
    "end": "2579160"
  },
  {
    "text": "putting an application into production use or test use for the first time it's",
    "start": "2579160",
    "end": "2584440"
  },
  {
    "text": "about as simple as it gets okay but of course once you've got live",
    "start": "2584440",
    "end": "2589720"
  },
  {
    "text": "customers using an application or service or you've got product managers",
    "start": "2589720",
    "end": "2594930"
  },
  {
    "text": "driving feature enhancements on an application or service potentially with several different ideas in mind at the",
    "start": "2594930",
    "end": "2601480"
  },
  {
    "text": "same time things are quite a bit more complicated than the simplistic use case that I've just talked about right you've",
    "start": "2601480",
    "end": "2607900"
  },
  {
    "text": "got a few more things to consider and this is something else that we've been doing a lot of work on how do we make it",
    "start": "2607900",
    "end": "2613150"
  },
  {
    "text": "safer and easier for customers to use good software deployment practices in",
    "start": "2613150",
    "end": "2619180"
  },
  {
    "text": "conjunction with serverless apps okay we've been doing a lot of work on this so first thing that we announced AWS",
    "start": "2619180",
    "end": "2625630"
  },
  {
    "text": "reinvent is something called weighted aliases and this literally allows me to have two variants or more than two",
    "start": "2625630",
    "end": "2632950"
  },
  {
    "text": "variants of an AWS lambda function in production at the same time okay and to",
    "start": "2632950",
    "end": "2638770"
  },
  {
    "text": "distribute traffic across those two or more variants in accordance with a weighted algorithm so put 95% on the",
    "start": "2638770",
    "end": "2646000"
  },
  {
    "text": "production version and 5% on this new experimental version I have okay now you've always been able to do that if",
    "start": "2646000",
    "end": "2652600"
  },
  {
    "text": "your functions have been and behind an API gateway okay in order to do that",
    "start": "2652600",
    "end": "2657790"
  },
  {
    "text": "behind an API gateway you would have to API endpoints okay and you would use DNS",
    "start": "2657790",
    "end": "2663670"
  },
  {
    "text": "load balancing to distribute traffic with weightings across those two endpoints what do we know about DNA",
    "start": "2663670",
    "end": "2669910"
  },
  {
    "text": "load-balancing it's not an exact science is it because DNS resolution requests",
    "start": "2669910",
    "end": "2677020"
  },
  {
    "text": "get cached okay so some clients will end pinned on a beta version of your endpoint even if you don't want them to",
    "start": "2677020",
    "end": "2684039"
  },
  {
    "text": "be and it's actually hard to retire the beta version of the endpoint once the client has it in their DNS cache so it's",
    "start": "2684039",
    "end": "2690549"
  },
  {
    "text": "a fine-grained but difficult to control mechanism for distributing traffic right",
    "start": "2690549",
    "end": "2696220"
  },
  {
    "text": "agree you all know about this problem with this model we remove that so you",
    "start": "2696220",
    "end": "2702789"
  },
  {
    "text": "can have one API gateway or one of the event source may be an IOT event source or a Kinesis stream or an event source",
    "start": "2702789",
    "end": "2711789"
  },
  {
    "text": "that comes from something like a let let's chat bot which is also driving invocation of lambda functions and we",
    "start": "2711789",
    "end": "2718089"
  },
  {
    "text": "are managing the waited execution directly in the lambda function invocation stream directly in the",
    "start": "2718089",
    "end": "2724480"
  },
  {
    "text": "invocation path okay so we can then execute fine grained control we can introduce or eliminate versions of the",
    "start": "2724480",
    "end": "2731890"
  },
  {
    "text": "function much much more rapidly enough a much higher degree of control over their introduction and removal from the waited",
    "start": "2731890",
    "end": "2737740"
  },
  {
    "text": "set because this is a really useful feature for customers that want to test multiple versions of a function also in",
    "start": "2737740",
    "end": "2745329"
  },
  {
    "text": "order to help customers that wanted to continue to use API gateway we've removed the requirement to have multiple",
    "start": "2745329",
    "end": "2754210"
  },
  {
    "text": "DNS records so you can share within the API gateway as well across different sub stages okay so to smoothly migrate",
    "start": "2754210",
    "end": "2761859"
  },
  {
    "text": "traffic between two versions of an API or to have two different versions of an API in production at the same time for a",
    "start": "2761859",
    "end": "2768309"
  },
  {
    "text": "be testing okay so it also got that as an additional control point and then with code deploy which is our deployment",
    "start": "2768309",
    "end": "2775029"
  },
  {
    "text": "service that fits into that pipeline that I talked about earlier we can do smooth weighted deployments with metrics",
    "start": "2775029",
    "end": "2782289"
  },
  {
    "text": "driven rollback okay so what this means is we can establish a deployment we can start to shift traffic between two",
    "start": "2782289",
    "end": "2789730"
  },
  {
    "text": "different versions of an AWS lambda function as part of this deployment process that you can see here gradually",
    "start": "2789730",
    "end": "2796510"
  },
  {
    "text": "moving the traffic between them we can use metrics to health check to establish",
    "start": "2796510",
    "end": "2801730"
  },
  {
    "text": "whether that deployment is being success and if we start to see elevated ell error rates during that deployment we",
    "start": "2801730",
    "end": "2808400"
  },
  {
    "text": "can automatically roll black rollback and remove that deployment on the basis of metrics okay so it's helping us",
    "start": "2808400",
    "end": "2814490"
  },
  {
    "text": "minimize the amount of overhead associated with our deployment activities and helping our dev teams be",
    "start": "2814490",
    "end": "2820670"
  },
  {
    "text": "more autonomous and require less operation support in a lot of cases to get their code out into production okay",
    "start": "2820670",
    "end": "2826640"
  },
  {
    "text": "even allowing things like out-of-hours deployments with automated rollback on the basis of metrics that's a pretty",
    "start": "2826640",
    "end": "2833030"
  },
  {
    "text": "useful feature and then we also have this weighted functionality that I",
    "start": "2833030",
    "end": "2839090"
  },
  {
    "text": "talked about earlier for Canario deployments this is showing a Canario deployment in api gateway you can see",
    "start": "2839090",
    "end": "2845180"
  },
  {
    "text": "here that we've directing 10% of our traffic of our request to that canario deployment and 90% of it goes on to our",
    "start": "2845180",
    "end": "2852380"
  },
  {
    "text": "old pod stage which is are trying to trusted version of our api and then we",
    "start": "2852380",
    "end": "2858410"
  },
  {
    "text": "can observe directly within the cloud watch metrics console how our traffic is",
    "start": "2858410",
    "end": "2863599"
  },
  {
    "text": "being distributed across the two different variants that we have here you can see that we've got one point 2 K",
    "start": "2863599",
    "end": "2868880"
  },
  {
    "text": "requests per second hitting prod and 113 hitting our pod slash canary stage end",
    "start": "2868880",
    "end": "2874609"
  },
  {
    "text": "point okay so that's about 10% of our load okay so we've got fine-grained control there within the console we can",
    "start": "2874609",
    "end": "2879920"
  },
  {
    "text": "update that within real-time reapportioned traffic between the production version and the new version",
    "start": "2879920",
    "end": "2885500"
  },
  {
    "text": "that we've got in testing in near-real-time as well okay so really helpful features I think for developers",
    "start": "2885500",
    "end": "2890630"
  },
  {
    "text": "that want to manage incremental deployment experimentation testing of service applications in a more robust in",
    "start": "2890630",
    "end": "2897980"
  },
  {
    "text": "a safer way I'd characterize it is safe for deployments really okay ten minutes",
    "start": "2897980",
    "end": "2903500"
  },
  {
    "text": "left so let's talk now about some stuff that we've done for enterprise customers so one of the other things we've heard",
    "start": "2903500",
    "end": "2909680"
  },
  {
    "text": "about is yeah AWS lambda great for you know cloud",
    "start": "2909680",
    "end": "2915260"
  },
  {
    "text": "native where everything's simple we're always building new things or we have no connectivity back to legacy systems that",
    "start": "2915260",
    "end": "2921650"
  },
  {
    "text": "is typically something that's more complex more difficult to manage but what about if we want to integrate a",
    "start": "2921650",
    "end": "2928369"
  },
  {
    "text": "service app with something we already have and that's something we already have has you know traditional enterprise",
    "start": "2928369",
    "end": "2935119"
  },
  {
    "text": "characteristics you know we're working with fixed licensing pools it's expensive difficult",
    "start": "2935119",
    "end": "2941900"
  },
  {
    "text": "to change okay how do we deal with that there's a few things we've done here",
    "start": "2941900",
    "end": "2947990"
  },
  {
    "text": "okay so concurrency monitoring concurrency limits okay establishing",
    "start": "2947990",
    "end": "2955869"
  },
  {
    "text": "integration between services that are running on AWS lamda and other service",
    "start": "2955869",
    "end": "2961250"
  },
  {
    "text": "components but need to communicate and talk to services that are within the VPC security perimeter okay so that's",
    "start": "2961250",
    "end": "2968030"
  },
  {
    "text": "something going to talk about as well and then lastly logging in auditing okay for customers that are operating in",
    "start": "2968030",
    "end": "2975790"
  },
  {
    "text": "either compliant environments or customers that have a requirement is something called protective monitoring",
    "start": "2975790",
    "end": "2981859"
  },
  {
    "text": "if you've heard those two words before together in combination you'll know what I'm talking about which is a particular",
    "start": "2981859",
    "end": "2987319"
  },
  {
    "text": "set of security practices that are used in the UK public sector okay so what",
    "start": "2987319",
    "end": "2993079"
  },
  {
    "text": "have we done here okay first thing is providing a mechanism for providing",
    "start": "2993079",
    "end": "3001089"
  },
  {
    "text": "mechanism for customers to control concurrency of lambda functions okay",
    "start": "3001089",
    "end": "3007349"
  },
  {
    "text": "creating a mechanism to quickly retire functions that are behaving badly okay",
    "start": "3007349",
    "end": "3014760"
  },
  {
    "text": "and providing a mechanism for gating or limiting concurrency in order to manage",
    "start": "3014760",
    "end": "3021030"
  },
  {
    "text": "throughput so what we really heard was that concurrency control is really important to this particular class of",
    "start": "3021030",
    "end": "3028119"
  },
  {
    "text": "customers okay so in order to help address that we've introduced a couple of new things the first is a concurrency",
    "start": "3028119",
    "end": "3034030"
  },
  {
    "text": "metric so you can look at each of your functions and see in kara watch metrics console what their level of concurrency",
    "start": "3034030",
    "end": "3041140"
  },
  {
    "text": "is so how many copies of function a are being run how many of B and how many of",
    "start": "3041140",
    "end": "3046690"
  },
  {
    "text": "C in comparison to before which would be your total number of concurrent invitations across all functions in a",
    "start": "3046690",
    "end": "3052720"
  },
  {
    "text": "region so it's more granular reporting about concurrency to enable developers",
    "start": "3052720",
    "end": "3058599"
  },
  {
    "text": "to take more informed decisions about how they manage it okay and then obviously going beyond that once you've",
    "start": "3058599",
    "end": "3064359"
  },
  {
    "text": "got the visibility well you can use those same metrics to establish some controls you know say that function",
    "start": "3064359",
    "end": "3070910"
  },
  {
    "text": "a is allowed 100 concurrent executions and no more than that because we only have a hundred licenses to connect back",
    "start": "3070910",
    "end": "3077420"
  },
  {
    "text": "to our back-end relational databases 100 concurrent connections so we can do that",
    "start": "3077420",
    "end": "3082640"
  },
  {
    "text": "as well we can do that on a per per function basis this allows us to limit",
    "start": "3082640",
    "end": "3088970"
  },
  {
    "text": "concurrency to legacy systems allows us to protect production services from",
    "start": "3088970",
    "end": "3095569"
  },
  {
    "text": "other functions in the same account so say we've got you know one lambda",
    "start": "3095569",
    "end": "3101510"
  },
  {
    "text": "function that is related to charging customers for products and another which",
    "start": "3101510",
    "end": "3106880"
  },
  {
    "text": "is used for reporting don't we want to prioritize the one that actually generates as revenue so that if somebody",
    "start": "3106880",
    "end": "3113329"
  },
  {
    "text": "miss Britt misbehaves in writing a query on one of our reporting systems we don't",
    "start": "3113329",
    "end": "3118700"
  },
  {
    "text": "end up diminishing our ability to sell a product or to charge a customer this allows us to do that I allows us to say",
    "start": "3118700",
    "end": "3124250"
  },
  {
    "text": "write this particular function is going to be capped in terms of its concurrency",
    "start": "3124250",
    "end": "3129260"
  },
  {
    "text": "level and this other function is not so we'll never use more than say 10% of our capacity for our my API okay",
    "start": "3129260",
    "end": "3137059"
  },
  {
    "text": "leaving 90% of our capacity available for the functions actually serve our customers so we can implement some",
    "start": "3137059",
    "end": "3143000"
  },
  {
    "text": "business rules by using these concurrency controls we can also use this as a mechanism to very quickly",
    "start": "3143000",
    "end": "3149410"
  },
  {
    "text": "disable a function just by setting its concurrency level to zero okay without having a deep revision it or delete it",
    "start": "3149410",
    "end": "3156160"
  },
  {
    "text": "essentially switch it off by flicking a switch very very responsive only takes a second to issue an API call like that or",
    "start": "3156160",
    "end": "3162890"
  },
  {
    "text": "to change your value in the console and we're just going to remove that function from service okay and last week we can",
    "start": "3162890",
    "end": "3172670"
  },
  {
    "text": "also use this as an additional protection as I mentioned earlier where",
    "start": "3172670",
    "end": "3177710"
  },
  {
    "text": "you might use your overall account limit as a mechanism to prevent billing overruns or control concurrency you can",
    "start": "3177710",
    "end": "3183619"
  },
  {
    "text": "do exactly the same thing at the individual function level by using this tool and then on connectivity for quite",
    "start": "3183619",
    "end": "3193369"
  },
  {
    "text": "a while now we've had the ability to run lambda functions with en eyes of elastic",
    "start": "3193369",
    "end": "3199250"
  },
  {
    "text": "network interfaces attached to them this essentially allows your lambda function to run inside your VPC okay so access",
    "start": "3199250",
    "end": "3206880"
  },
  {
    "text": "VPC based resources so it has both an en i and a security group associated with",
    "start": "3206880",
    "end": "3212040"
  },
  {
    "text": "it you could use this to integrate lambda functions with things like RDS or",
    "start": "3212040",
    "end": "3217250"
  },
  {
    "text": "even with non-relational databases other than DynamoDB that don't support",
    "start": "3217250",
    "end": "3222300"
  },
  {
    "text": "I am roles and requests signing okay I did a demo quite a while ago of integrating AWS lambda with MongoDB",
    "start": "3222300",
    "end": "3229050"
  },
  {
    "text": "using exactly the same model lambda functions when us we're not a specific subnet inside the V PC they have a",
    "start": "3229050",
    "end": "3235410"
  },
  {
    "text": "specific security group associated with them the MongoDB or relational database endpoint permits traffic from that",
    "start": "3235410",
    "end": "3241380"
  },
  {
    "text": "security group and magically your lambda functions can communicate with your relational and on relational state store",
    "start": "3241380",
    "end": "3247050"
  },
  {
    "text": "within the perimeter of your V PC without having to send traffic out onto the internet so they can run privately in that context it's a really nice use",
    "start": "3247050",
    "end": "3255060"
  },
  {
    "text": "case with this new service V PC private",
    "start": "3255060",
    "end": "3260310"
  },
  {
    "text": "link you can do more than that okay you can both expose services and data",
    "start": "3260310",
    "end": "3270300"
  },
  {
    "text": "within your V PC from the public API endpoint okay so the public API endpoint",
    "start": "3270300",
    "end": "3276420"
  },
  {
    "text": "is out on the internet and then private link is used to wire from that API endpoint directly to within your V PC",
    "start": "3276420",
    "end": "3284270"
  },
  {
    "text": "because that's a nice feature and secondly partners can use private link",
    "start": "3284270",
    "end": "3289950"
  },
  {
    "text": "to offer API or with the service endpoints to other AWS accounts okay so",
    "start": "3289950",
    "end": "3298500"
  },
  {
    "text": "say I've got a private API maybe I've got an API which is used only by Finance",
    "start": "3298500",
    "end": "3303750"
  },
  {
    "text": "customers and therefore I know implicitly that because of the regulatory nature of the data behind",
    "start": "3303750",
    "end": "3308790"
  },
  {
    "text": "that API it can't be put out on the Internet okay but I do have a large constituency of customers with in AWS",
    "start": "3308790",
    "end": "3315540"
  },
  {
    "text": "that wanted to use it I can offer up that API endpoint as a private link service other AWS accounts can subscribe",
    "start": "3315540",
    "end": "3323460"
  },
  {
    "text": "to it and they'll see appear within their V PC as an endpoint directly",
    "start": "3323460",
    "end": "3329460"
  },
  {
    "text": "within a specific V PC that they specify it's not available publicly it will never be available public",
    "start": "3329460",
    "end": "3334860"
  },
  {
    "text": "but I can offer it up to nominated AWS accounts on the white listing basis this",
    "start": "3334860",
    "end": "3340140"
  },
  {
    "text": "concept of white listings becoming increasingly important okay also with the API gate where we introduced another",
    "start": "3340140",
    "end": "3345990"
  },
  {
    "text": "enhancement which is a region specific endpoint so we used to have the API gateway available only on our edge",
    "start": "3345990",
    "end": "3351690"
  },
  {
    "text": "networks in over 100 locations around the world but it's only on the edge with edge Network now you can also restrict",
    "start": "3351690",
    "end": "3358140"
  },
  {
    "text": "the time as an API gateway service to a specific nominated regional endpoint",
    "start": "3358140",
    "end": "3363750"
  },
  {
    "text": "okay so some enhancements for regulatory control probably you can appreciate how that second feature could be important",
    "start": "3363750",
    "end": "3370770"
  },
  {
    "text": "with things like gdpr where you might need to keep data associated with a specific service in a",
    "start": "3370770",
    "end": "3377430"
  },
  {
    "text": "specific regional location with the potential implications of brexit from",
    "start": "3377430",
    "end": "3383430"
  },
  {
    "text": "the regulatory perspective this is another use case there where you might want data in the UK data in Ireland you",
    "start": "3383430",
    "end": "3389790"
  },
  {
    "text": "can separate your API s and deploy them in specific regions to meet future regulatory requirements as well quite",
    "start": "3389790",
    "end": "3395640"
  },
  {
    "text": "important ok obviously how you provision now just jump over this and then lastly",
    "start": "3395640",
    "end": "3402230"
  },
  {
    "text": "[Music] lastly log and audit ok so structured",
    "start": "3402230",
    "end": "3411990"
  },
  {
    "text": "logging for API is this is about how we store information about API endpoint requests within CloudWatch logs ok so",
    "start": "3411990",
    "end": "3418920"
  },
  {
    "text": "we've got a structured logging capability there now makes it easier for you to search an organized logging data",
    "start": "3418920",
    "end": "3424230"
  },
  {
    "text": "of our API endpoint requests we've also added AWS cloud trail support for lambda",
    "start": "3424230",
    "end": "3429420"
  },
  {
    "text": "functions if you're not familiar with AWS cloud trail this is a API auditing",
    "start": "3429420",
    "end": "3435540"
  },
  {
    "text": "service that allows you to establish a continuous log of all requests that hit",
    "start": "3435540",
    "end": "3443040"
  },
  {
    "text": "your all requests that hit WS API endpoints using identities associated",
    "start": "3443040",
    "end": "3448920"
  },
  {
    "text": "with your account ok so you can use it for observability and this kind of protective monitoring that I talked",
    "start": "3448920",
    "end": "3455040"
  },
  {
    "text": "about earlier it will literally record everything ok so take my lambda function use cases an",
    "start": "3455040",
    "end": "3460920"
  },
  {
    "text": "example each time only I invoke a lambda function I'll end up with an entry in my cloud",
    "start": "3460920",
    "end": "3466130"
  },
  {
    "text": "trail log I can see the credentials that were used to invoke that function the originating IP address the timestamp of",
    "start": "3466130",
    "end": "3472759"
  },
  {
    "text": "course and the query parameters that came in with the request can they interrogate search filter alert upon",
    "start": "3472759",
    "end": "3480680"
  },
  {
    "text": "that data using patterns that I define off third-party tools that I might choose to deploy because it gives me",
    "start": "3480680",
    "end": "3486230"
  },
  {
    "text": "observability over the usage of the api's that I'm defining and not only if",
    "start": "3486230",
    "end": "3491779"
  },
  {
    "text": "they are exposed via an API gateway but also if they're exposed directly for invocation with AWS access and secret",
    "start": "3491779",
    "end": "3498769"
  },
  {
    "text": "keys okay so fine-grained visibility over usage of my services okay so what",
    "start": "3498769",
    "end": "3505460"
  },
  {
    "text": "have we done on the enterprise basically what we're trying to do here is address some of the inhibitors that enterprise",
    "start": "3505460",
    "end": "3512390"
  },
  {
    "text": "customers have told us are important to their usage of this serverless technology in conjunction with legacy",
    "start": "3512390",
    "end": "3518390"
  },
  {
    "text": "systems and in conjunction with the governance and control frameworks that are present inside these regulators and",
    "start": "3518390",
    "end": "3524690"
  },
  {
    "text": "more complex environments okay so trying to make it easier for customers of that type to use AWS lambda and associated",
    "start": "3524690",
    "end": "3531619"
  },
  {
    "text": "services okay so that concludes this quick recap of what's new with AWS",
    "start": "3531619",
    "end": "3537200"
  },
  {
    "text": "lambda and service more general on AWS it's got two minutes does anybody have any questions they want to ask yeah",
    "start": "3537200",
    "end": "3547240"
  },
  {
    "text": "okay yep so the question here is about how we support testing inside our code",
    "start": "3550500",
    "end": "3557860"
  },
  {
    "text": "pipeline the answer is that we have a partner ecosystem that plug in there so we don't have our own suite of",
    "start": "3557860",
    "end": "3566680"
  },
  {
    "text": "integration or functional testing tools okay we do partner with companies like",
    "start": "3566680",
    "end": "3571900"
  },
  {
    "text": "run scope HPE and a variety of others if you go to the aws.amazon.com slash code",
    "start": "3571900",
    "end": "3581440"
  },
  {
    "text": "pipelines page okay you will find a lot of information about testing partners that are supported in running these",
    "start": "3581440",
    "end": "3588790"
  },
  {
    "text": "pipelines you have configurable stages okay so you can write your own routines",
    "start": "3588790",
    "end": "3595720"
  },
  {
    "text": "as well that are invoked your own code that is invoked when the pipeline",
    "start": "3595720",
    "end": "3600850"
  },
  {
    "text": "reaches a certain point okay and those themselves can actually be lambda functions so that's how some of",
    "start": "3600850",
    "end": "3607690"
  },
  {
    "text": "these partners integrate and there are also other integration methods as well but essentially testing is today",
    "start": "3607690",
    "end": "3613180"
  },
  {
    "text": "provided by this group of partners that we work with and you can then have",
    "start": "3613180",
    "end": "3618850"
  },
  {
    "text": "stop/go conditions branching in the pipeline even multi deploy multi",
    "start": "3618850",
    "end": "3623890"
  },
  {
    "text": "environment deployments within a pipeline as well so you can push a release candidate into a beta",
    "start": "3623890",
    "end": "3630820"
  },
  {
    "text": "environment for example run testing against that and then have an automated or manual step to continue that pipeline",
    "start": "3630820",
    "end": "3637090"
  },
  {
    "text": "to push that B to candidate out into a production deployment there's a lot of configurability within the pipeline's we",
    "start": "3637090",
    "end": "3642790"
  },
  {
    "text": "establish simple pipelines with code star but you're then free to modify them as you see fit",
    "start": "3642790",
    "end": "3648900"
  },
  {
    "text": "okay any other questions yeah",
    "start": "3648900",
    "end": "3653490"
  },
  {
    "text": "yep",
    "start": "3658730",
    "end": "3661730"
  },
  {
    "text": "could build access for vbc I'm not sure about that I need to check it so I'd need to take a look at the docks but we can cover it offline afterwards",
    "start": "3665779",
    "end": "3671660"
  },
  {
    "text": "certainly works for external dependencies so pulling from public repos not sure about VPC access it's",
    "start": "3671660",
    "end": "3678950"
  },
  {
    "text": "difficult because I have the roadmap and I'd be careful I don't say something which is on the roadmap so go check that okay question area so is there overlap",
    "start": "3678950",
    "end": "3695960"
  },
  {
    "text": "between the canary builds within the API gateway encode pipeline there's several",
    "start": "3695960",
    "end": "3702650"
  },
  {
    "text": "different approaches that you can take here okay as is the case with many AWS services there's like more than one tool",
    "start": "3702650",
    "end": "3708349"
  },
  {
    "text": "that you can use for the job within code pipeline you could establish a custom pipeline that deployed a release",
    "start": "3708349",
    "end": "3714349"
  },
  {
    "text": "candidate to a different end point if you wished okay or you could establish a pipeline that modified an existing",
    "start": "3714349",
    "end": "3721640"
  },
  {
    "text": "endpoint to create in a canary deployment okay so you could do it either way depending on how you configure your automation within the",
    "start": "3721640",
    "end": "3728930"
  },
  {
    "text": "pipeline essentially or you could do it manually in the console for a particular",
    "start": "3728930",
    "end": "3734319"
  },
  {
    "text": "manually driven change you can do it whichever way you wish really it was one more question over here and then we're",
    "start": "3734319",
    "end": "3739970"
  },
  {
    "text": "probably out of time yes I wouldn't say",
    "start": "3739970",
    "end": "3749569"
  },
  {
    "text": "that they're necessarily an alternative they are different approaches for solving the same kind of problem I know",
    "start": "3749569",
    "end": "3754670"
  },
  {
    "text": "that the service framework is incredibly popular and I know a lot of customers that use it and we certainly regard it",
    "start": "3754670",
    "end": "3762559"
  },
  {
    "text": "as a valuable tool for customers to use with Sam one of the things that you can do which I don't I'm not an expert on",
    "start": "3762559",
    "end": "3769400"
  },
  {
    "text": "service so I might be wrong here but one of the things that I like about Sam is that you can blend these simplified",
    "start": "3769400",
    "end": "3774950"
  },
  {
    "text": "resources together with full-blown cloud formation template content so if you've",
    "start": "3774950",
    "end": "3780140"
  },
  {
    "text": "got an application which includes resources that are service plus resources that are a little bit less",
    "start": "3780140",
    "end": "3786799"
  },
  {
    "text": "service like so in RDS database or an elastic search cluster for example with",
    "start": "3786799",
    "end": "3792619"
  },
  {
    "text": "Sam you can blend those things into a single template file or collection of template files and",
    "start": "3792619",
    "end": "3797930"
  },
  {
    "text": "manage it all in a cohesive way I don't believe that that is possible with the serverless framework I think it only",
    "start": "3797930",
    "end": "3803930"
  },
  {
    "text": "supports those specific service resource types okay so you've got a little bit more flexibility with Sam but serverless",
    "start": "3803930",
    "end": "3811910"
  },
  {
    "text": "is still a great tool and a lot of customers use it okay we're out of time if you've got further more detailed",
    "start": "3811910",
    "end": "3817850"
  },
  {
    "text": "questions if you didn't see it at the back end of this Expo and coffee area here there's something called the ask an",
    "start": "3817850",
    "end": "3824180"
  },
  {
    "text": "architect booth if you go there you'll find a gaggle of AWS solutions architects waiting waiting to answer",
    "start": "3824180",
    "end": "3830180"
  },
  {
    "text": "questions so there's anything else you want to ask go there and seek out one of those ladies or many thank you",
    "start": "3830180",
    "end": "3836610"
  },
  {
    "text": "[Applause]",
    "start": "3836610",
    "end": "3840479"
  }
]