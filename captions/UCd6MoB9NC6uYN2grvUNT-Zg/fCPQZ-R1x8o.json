[
  {
    "start": "0",
    "end": "55000"
  },
  {
    "text": "all right let's get started so I'm sure there'll be more people trickling in um the uh keynote",
    "start": "799",
    "end": "7480"
  },
  {
    "text": "ran just a little bit over but let's get started so uh what we're going to cover today I'll start with a very brief",
    "start": "7480",
    "end": "13240"
  },
  {
    "text": "orientation and then we'll spend most of the time talking about roles for ec2 instances and ec2 resource level",
    "start": "13240",
    "end": "18720"
  },
  {
    "text": "permissions uh I will briefly preview another feature that's coming out soon uh which will be resource level",
    "start": "18720",
    "end": "24039"
  },
  {
    "text": "permissions for run instances uh we'll spend a little bit of time of on uh how to debug some of these policies and then",
    "start": "24039",
    "end": "30199"
  },
  {
    "text": "I'll provide some additional resources at the end uh we won't have a Q&A session here but I'll be happy to take some questions afterwards and then uh",
    "start": "30199",
    "end": "37000"
  },
  {
    "text": "Ken if you want to stand up uh I'm on the ec2 team Ken is on the IM am team uh he will be happy to take your questions",
    "start": "37000",
    "end": "43120"
  },
  {
    "text": "as well at the",
    "start": "43120",
    "end": "45600"
  },
  {
    "text": "end so the types of problems we're working on here are primarily credential management and authorization problems uh",
    "start": "52359",
    "end": "59519"
  },
  {
    "start": "55000",
    "end": "55000"
  },
  {
    "text": "who can what types of problems as well as how do I get credentials to them we're going to often talk at the",
    "start": "59519",
    "end": "66439"
  },
  {
    "text": "API level here uh because a lot of these permissions are enforced at the API level it works equally well in the",
    "start": "66439",
    "end": "71720"
  },
  {
    "text": "console and through the tools so uh please understand that even though we're talking at the API level it doesn't mean",
    "start": "71720",
    "end": "77040"
  },
  {
    "text": "this is just for the apis the consoles and tools are using the apis themselves uh so this is the lowest common",
    "start": "77040",
    "end": "82759"
  },
  {
    "text": "denominator that we often speak in here uh we're going to assume a little",
    "start": "82759",
    "end": "87840"
  },
  {
    "text": "bit of prerequisite here I'll I'll try to keep it to a 200 level class uh if you have Ninja questions come find me at",
    "start": "87840",
    "end": "93600"
  },
  {
    "text": "the end uh we're going to assume that you have some basic familiarity with IM and ec2 uh but uh uh will not assume",
    "start": "93600",
    "end": "102280"
  },
  {
    "text": "that you're necessarily a expert in it uh and we're going to take an uh admittedly ec2 Centric view here so a",
    "start": "102280",
    "end": "108000"
  },
  {
    "text": "lot of these same topics work for other awf services not just for ec2 uh to simplify things we're going to talk uh",
    "start": "108000",
    "end": "114520"
  },
  {
    "text": "primarily about the ec2 version of these subjects",
    "start": "114520",
    "end": "119960"
  },
  {
    "text": "so roles for ec2 instances first of all what is a role uh a role describes a set of",
    "start": "121520",
    "end": "128280"
  },
  {
    "start": "123000",
    "end": "123000"
  },
  {
    "text": "capabilities uh it can be assumed by a user it can also be passed to an instance uh and the passing it to an",
    "start": "128319",
    "end": "134040"
  },
  {
    "text": "instance is the case that we're going to mostly focus on here uh a user can only assume one Ro at",
    "start": "134040",
    "end": "139760"
  },
  {
    "text": "a time it's exclusive so I can't assume two roles at the same time U which is a nice effect for certain permissions if",
    "start": "139760",
    "end": "145560"
  },
  {
    "text": "you have somebody uh for example that has multiple different roles in your organization you don't want them to be able to mix those maybe they're a DBA",
    "start": "145560",
    "end": "152280"
  },
  {
    "text": "and they're also a web engineer U roles provide a good way to make sure that they're only acting in one capacity to",
    "start": "152280",
    "end": "158360"
  },
  {
    "text": "time because of that exclusivity uh role permissions are established by IM am policies we'll talk",
    "start": "158360",
    "end": "165120"
  },
  {
    "text": "quite a bit about that uh in the resource level permissions section uh roles have preset expiration times which",
    "start": "165120",
    "end": "171519"
  },
  {
    "text": "is kind of kind of a nice feature in a lot of cases so when you assume a role it's for a session and that session",
    "start": "171519",
    "end": "176599"
  },
  {
    "text": "expires at some point uh after the session expires the credential that are associated with that role are no longer",
    "start": "176599",
    "end": "183440"
  },
  {
    "text": "valid and credentials are roles of course a great way to manage permissions so what's a simple example of this uh",
    "start": "183440",
    "end": "190360"
  },
  {
    "text": "maybe I create a web administrator role I give the web administrator role permission to run and terminate web",
    "start": "190360",
    "end": "196360"
  },
  {
    "start": "196000",
    "end": "196000"
  },
  {
    "text": "servers uh maybe there's more to it than that but in the simple case maybe that's all it is uh I'm going to then Grant",
    "start": "196360",
    "end": "202959"
  },
  {
    "text": "several users permission to assume the web admin role uh these users can now assume that",
    "start": "202959",
    "end": "209159"
  },
  {
    "text": "role and once they assume that role then they can start and terminate web servers they they have the capability now of that role after assuming",
    "start": "209159",
    "end": "215400"
  },
  {
    "text": "it uh so that's all well and good that's the normal user case but what about a programmatic user uh so suppose I have",
    "start": "215400",
    "end": "222040"
  },
  {
    "start": "216000",
    "end": "216000"
  },
  {
    "text": "an application that needs to be able to do something one common anti- pattern uh",
    "start": "222040",
    "end": "227799"
  },
  {
    "text": "and uh you should not do this but one common anti- pattern that people sometimes are tempted to do is to create",
    "start": "227799",
    "end": "233239"
  },
  {
    "text": "a user with long-term credentials associated with it and then save those credentials somewhere that their program can access it maybe in a file uh maybe",
    "start": "233239",
    "end": "240439"
  },
  {
    "text": "you check it into your source code U maybe you do something uh insecure with those credentials so that your",
    "start": "240439",
    "end": "246159"
  },
  {
    "text": "application can then uh use the permissions of that user uh you should not do this uh this there's better ways",
    "start": "246159",
    "end": "251560"
  },
  {
    "text": "to handle that and uh the better way to handle that is to use a roll with an instance profile so uh when you use an",
    "start": "251560",
    "end": "258799"
  },
  {
    "text": "instance profile what it does is it delivers the roll credentials to an instance for you",
    "start": "258799",
    "end": "263919"
  },
  {
    "text": "automatically the uh in addition to being delivered automatically they're also rotated for you automatically so I",
    "start": "263919",
    "end": "269800"
  },
  {
    "text": "mentioned before that RS have an expiration time prior to the RO expiring the instance profile will produce a new",
    "start": "269800",
    "end": "276240"
  },
  {
    "text": "set of credentials for the role so it's rotated uh the standard I believe right now is every six hours U and so on a",
    "start": "276240",
    "end": "282919"
  },
  {
    "text": "regular Cadence you'll get a fresh set of credentials uh associated with that instance",
    "start": "282919",
    "end": "288360"
  },
  {
    "text": "profile uh you don't have to actually deploy any credentials in this case because it's already deployed for you to",
    "start": "288360",
    "end": "293680"
  },
  {
    "text": "the instance so you don't have to check anything into source code there's no file with secret key material in it that you have to manage that's all provided",
    "start": "293680",
    "end": "300120"
  },
  {
    "text": "for you uh another nice feature about this is because you're actually applying that",
    "start": "300120",
    "end": "305360"
  },
  {
    "text": "through the apis you can actually now look at the instance and see which instance profile is associated with that instance and that allows you in turn to",
    "start": "305360",
    "end": "312440"
  },
  {
    "text": "understand what permissions have been granted to that instance from a API level uh you don't have to necessarily",
    "start": "312440",
    "end": "317479"
  },
  {
    "text": "log into that instance now to know what permissions have been deployed to it so you get a lot of improvements in visibility as",
    "start": "317479",
    "end": "323680"
  },
  {
    "text": "well so some common use cases where this comes up uh maybe my instance needs to",
    "start": "323680",
    "end": "328919"
  },
  {
    "text": "be able to access an S3 bucket uh maybe it needs to access an sqsq maybe an SNS topic this could be",
    "start": "328919",
    "end": "335560"
  },
  {
    "text": "as simple as uploading its log file it could be something something richer than that uh maybe I need a Cron job that's",
    "start": "335560",
    "end": "341600"
  },
  {
    "text": "going to take regular backups for me uh maybe I have a chef server or some",
    "start": "341600",
    "end": "346840"
  },
  {
    "text": "other sort of management server that wants that needs to be able to do some things in my environment I need to give it permissions to do that uh maybe I'm",
    "start": "346840",
    "end": "354160"
  },
  {
    "text": "doing something creative when I'm bootstrapping my instance and it wants to describe itself to understand whether it's in a beta Environ enironment or a",
    "start": "354160",
    "end": "360120"
  },
  {
    "text": "production environment then it's going to do something different as it bootstraps itself this is a good way to enable it to do that without having to",
    "start": "360120",
    "end": "366520"
  },
  {
    "text": "deploy credentials for each individual instance so how can I do this uh first",
    "start": "366520",
    "end": "371960"
  },
  {
    "text": "of all uh the first step is to create the role we can watch how this works here so",
    "start": "371960",
    "end": "377280"
  },
  {
    "text": "I'm going to go to the am console presumably most of you have seen this before I'm going to log",
    "start": "377280",
    "end": "384400"
  },
  {
    "text": "in I have MFA enabled so I'm logging in with my MFA",
    "start": "385880",
    "end": "391560"
  },
  {
    "text": "right now I'm going to go create a",
    "start": "403639",
    "end": "406759"
  },
  {
    "text": "roll and here we're going to create an Amazon ec2 roll you notice that other services also use roll",
    "start": "414639",
    "end": "420919"
  },
  {
    "text": "and we're going to give a readon uh role here so it's very simple uh this Ro is going to enable the instance that it's",
    "start": "420919",
    "end": "426639"
  },
  {
    "text": "deployed to to be able to describe resources but not to mutate them I'm going to go ahead and set this",
    "start": "426639",
    "end": "434919"
  },
  {
    "text": "up and now my role is created and if I want I can go look at all the policies that are associated with this",
    "start": "434919",
    "end": "441479"
  },
  {
    "text": "role if I ever have questions later about what it's able to do",
    "start": "441479",
    "end": "447560"
  },
  {
    "text": "and then this trust relationship I can see here that I've trusted Amazon ec2 with this role uh so this is the way",
    "start": "452400",
    "end": "458120"
  },
  {
    "text": "that I can tell that ec2 is going to be the service assuming this role and I can see some information here",
    "start": "458120",
    "end": "464840"
  },
  {
    "text": "in the summary uh I will actually use that instance profile the instance profile AR uh if I am at the API I use",
    "start": "464840",
    "end": "470960"
  },
  {
    "text": "that to actually pass that to the instance when I run it we'll do it through the console which will be a little easier to see so now I'm going to",
    "start": "470960",
    "end": "477840"
  },
  {
    "text": "deploy this rooll to an instance so to do that uh going to go to the ec2",
    "start": "477840",
    "end": "483440"
  },
  {
    "text": "console",
    "start": "483440",
    "end": "485919"
  },
  {
    "text": "now and there's a couple different ways you can do this I'm going to use the big blue button on the",
    "start": "490919",
    "end": "497000"
  },
  {
    "text": "dashboard and we're going to run a Amazon Linux instance this comes with the tools and SDK already installed",
    "start": "497000",
    "end": "503199"
  },
  {
    "text": "which makes for a nice demo and this is the critical step here under the configure instance details",
    "start": "503199",
    "end": "509479"
  },
  {
    "text": "we're going to add an I am roll here this is the roll that we just created",
    "start": "509479",
    "end": "517000"
  },
  {
    "text": "now I'm going to do something a little bit naughty here and use a security group that's open to the all IP addresses U because I'm on Wi-Fi when",
    "start": "539680",
    "end": "546040"
  },
  {
    "text": "I'm doing the demo but um normally if you have a corporate Network you can also restrict this so people can only ssh in from a limited set of source IP",
    "start": "546040",
    "end": "554959"
  },
  {
    "text": "addresses and I'm going to review this and I'm going to see at the end here I can confirm that my IM am Ro is going to",
    "start": "555079",
    "end": "560279"
  },
  {
    "text": "be added to this instance when it's run I'm going to go ahead and launch it",
    "start": "560279",
    "end": "568480"
  },
  {
    "text": "and it's as easy as that the instance is now uh starting and it will have the roll on it when it's available I can go",
    "start": "572279",
    "end": "578240"
  },
  {
    "text": "look at it",
    "start": "578240",
    "end": "580720"
  },
  {
    "text": "here there it is this is the instance that I just",
    "start": "584760",
    "end": "589519"
  },
  {
    "text": "created and then uh if I come back to this later I forget what I did I can also come to the instance page here and",
    "start": "590279",
    "end": "595640"
  },
  {
    "text": "then I can see again that the IM rooll is deployed to this instance from the instance details",
    "start": "595640",
    "end": "602640"
  },
  {
    "text": "here wonderful so this is all well and good",
    "start": "607200",
    "end": "612760"
  },
  {
    "text": "let's see what we can do with this now so now that the instance is running I'm going to uh take the public DNS here",
    "start": "612760",
    "end": "619279"
  },
  {
    "text": "and then I'm going to SSH into this",
    "start": "619279",
    "end": "622680"
  },
  {
    "text": "instance apologies to Windows users there's an analog in Windows as well I I find the uh Linux based interface here",
    "start": "625720",
    "end": "632880"
  },
  {
    "text": "pretty clear so I'm going to use my private key pair here to log",
    "start": "632880",
    "end": "638160"
  },
  {
    "text": "in this is the instance that I just",
    "start": "638440",
    "end": "642680"
  },
  {
    "text": "created so I'm logged into this instance now uh I'm going to configure my region for the uh AWS CLI quickly just so it",
    "start": "643680",
    "end": "651720"
  },
  {
    "text": "knows which region to use I'm doing this in SF in the Usos one",
    "start": "651720",
    "end": "657200"
  },
  {
    "text": "region and now I'm just going to call describe instances I haven't done anything with",
    "start": "657200",
    "end": "662920"
  },
  {
    "text": "credentials myself I haven't touched any secret key material uh and I was able to just describe all of my instances in",
    "start": "662920",
    "end": "668200"
  },
  {
    "text": "this region from this instance and just to prove that the uh role is actually using the permissions",
    "start": "668200",
    "end": "674120"
  },
  {
    "text": "that I deployed to it I'm going to now try to terminate an instance and you remember I gave it a readon role so it",
    "start": "674120",
    "end": "679200"
  },
  {
    "text": "should be able to describe resources but not mutate them so I'd expect the uh terminate instances call here to fail",
    "start": "679200",
    "end": "685399"
  },
  {
    "text": "because I did not give it permission to do that and sure enough that does fail uh so now I've just managed to deploy an",
    "start": "685399",
    "end": "691079"
  },
  {
    "text": "instance that has permissions associated with it as if by Magic and I log into it",
    "start": "691079",
    "end": "696200"
  },
  {
    "text": "without touching any key material and I can make API calls now or use the CLI U",
    "start": "696200",
    "end": "702200"
  },
  {
    "text": "here and the way that this magic works that you guys have some background on this uh there's actually a URL here this",
    "start": "702200",
    "end": "708120"
  },
  {
    "text": "169 254 uh address that is only addressable from inside of the instance and this is the uh instance metadata and",
    "start": "708120",
    "end": "715279"
  },
  {
    "text": "this service actually has quite a bit of information in it uh IM credentials is one of these things I can see here that",
    "start": "715279",
    "end": "720839"
  },
  {
    "text": "I have a uh my rooll is deployed to this instance and now I'm going to go pull up the actual credentials for this role and",
    "start": "720839",
    "end": "727480"
  },
  {
    "text": "you can see there's actually a document here that I can only access from inside of this instance it's got an access key",
    "start": "727480",
    "end": "733399"
  },
  {
    "text": "it's got a secret key and it's got a token and these are the credentials that I'm using to make those uh API calls now",
    "start": "733399",
    "end": "739639"
  },
  {
    "text": "the AWS CLI has automatically pulled those in for me so I don't need to do any work if I'm using third party tools",
    "start": "739639",
    "end": "745079"
  },
  {
    "text": "or I want to roll my own I can actually just U get this Json do pars this myself",
    "start": "745079",
    "end": "750639"
  },
  {
    "text": "and then use those credentials to then go make my API calls uh and there's an expiration time here as well and this is",
    "start": "750639",
    "end": "756199"
  },
  {
    "text": "going to rotate on a regular basis so as if by Magic U uh a couple",
    "start": "756199",
    "end": "763079"
  },
  {
    "text": "more details here that are interesting uh so you know these are automatically available uh through the instance",
    "start": "763079",
    "end": "768519"
  },
  {
    "text": "metadata you'll want to uh look at that URL uh that's all in the uh IM documentation uh you can use these to",
    "start": "768519",
    "end": "775240"
  },
  {
    "text": "make API calls and it saves you from doing dumb things like checking in your secret key uh taking dependencies on",
    "start": "775240",
    "end": "780720"
  },
  {
    "text": "that so please don't do that uh a couple additional considerations here to be aware of uh any processor user on that",
    "start": "780720",
    "end": "787680"
  },
  {
    "text": "instance that's able to access that URL can get to those credentials uh those credentials are U rooll credentials so",
    "start": "787680",
    "end": "794920"
  },
  {
    "text": "uh if I'd done this just recently and those credentials were still valid and somebody could type quickly enough you",
    "start": "794920",
    "end": "800079"
  },
  {
    "text": "know you could type that and then you could make API calls um using my account so you want to make sure that you control who has access to that instance",
    "start": "800079",
    "end": "807519"
  },
  {
    "text": "um so if you're going to let people H into this instance you're going to deploy that role you want to make sure that you're controlling um uh in most",
    "start": "807519",
    "end": "814399"
  },
  {
    "text": "cases the best way to do is not to let anybody into that instance unless they should have access to those roll",
    "start": "814399",
    "end": "819440"
  },
  {
    "text": "credentials uh which means that you have to you have to own the u u control around the access to that instance U",
    "start": "819440",
    "end": "826560"
  },
  {
    "text": "another thing that's a a fine point but the one that you'll probably discover very quickly uh these rols can be added",
    "start": "826560",
    "end": "832600"
  },
  {
    "text": "to instances at the time that you run them but they have to be added at the time that you run them you can't add it to an already running instance so so",
    "start": "832600",
    "end": "839320"
  },
  {
    "text": "make sure that you're adding that when you first run the instance now you can change the permissions later and that's very easy to do uh but you want to make",
    "start": "839320",
    "end": "845399"
  },
  {
    "text": "sure that the profile is deployed at the time that you run it uh so and then a quick word on some",
    "start": "845399",
    "end": "851800"
  },
  {
    "text": "of the other uses for rols uh so rolls aren't just interesting for uh uh",
    "start": "851800",
    "end": "857759"
  },
  {
    "start": "852000",
    "end": "852000"
  },
  {
    "text": "instance profile use cases you can also use them for other identity and access problems uh so for example uh one of the",
    "start": "857759",
    "end": "864800"
  },
  {
    "text": "things that uh you'll see with some of these other services like elastic data pipeline Cloud HSM they're actually",
    "start": "864800",
    "end": "870639"
  },
  {
    "text": "using roles in your account and that's how you're actually permitting those other ads services to take actions in your account uh this is actually a good",
    "start": "870639",
    "end": "877199"
  },
  {
    "text": "practice not just with other AWS services but if you have other third parties that you're working with rols",
    "start": "877199",
    "end": "882240"
  },
  {
    "text": "can be a good way to describe a set of capabilities that you want that third party to be able to do in your account U",
    "start": "882240",
    "end": "887639"
  },
  {
    "text": "and it's a it's a very clear contract around what they can and can't do uh rols also support cross account",
    "start": "887639",
    "end": "893600"
  },
  {
    "text": "account access and that's uh another very powerful tool here as well so outside of the instance profile case I",
    "start": "893600",
    "end": "899800"
  },
  {
    "text": "can allow somebody in using another AWS account uh to log in with their normal adws credentials from their home account",
    "start": "899800",
    "end": "906519"
  },
  {
    "text": "and then assume a role in my account when they need to go do something in my account so this can be a great way to work with vendors and third parties uh",
    "start": "906519",
    "end": "912800"
  },
  {
    "text": "using roles and then uh you can also use roles with web identities U so this is your",
    "start": "912800",
    "end": "918759"
  },
  {
    "text": "Facebook login your Google login your login with Amazon U you can actually pass rooll credentials uh to uh",
    "start": "918759",
    "end": "925480"
  },
  {
    "text": "individuals and users that have logged in with those credentials as well um",
    "start": "925480",
    "end": "930920"
  },
  {
    "text": "so let's talk about resource level permissions now so uh we've talked a bit about roles which helps me manage",
    "start": "930920",
    "end": "937040"
  },
  {
    "text": "identities and get secret material out to the instances uh but that readon policy wasn't very interesting uh you",
    "start": "937040",
    "end": "943480"
  },
  {
    "text": "know I don't think people would be coming to a session at reinvent if all you wanted to do was a re readon policy",
    "start": "943480",
    "end": "948519"
  },
  {
    "text": "uh so let's talk about how we can construct a little bit more interesting policies here uh so resource level policies are",
    "start": "948519",
    "end": "955639"
  },
  {
    "text": "actually available for quite a few AWS Services you probably saw the Dynamo announcement recently which is quite",
    "start": "955639",
    "end": "960839"
  },
  {
    "text": "exciting uh we're going to talk specifically about the Amazon E2 implementation of this uh but recognize",
    "start": "960839",
    "end": "966199"
  },
  {
    "text": "that a lot of these same ideas will apply to other AWS Services as",
    "start": "966199",
    "end": "971240"
  },
  {
    "text": "well so uh what we're talking about here are the ability to write IM policies",
    "start": "971440",
    "end": "977279"
  },
  {
    "text": "that have fine grained permissions that allow access to individual resources or",
    "start": "977279",
    "end": "982440"
  },
  {
    "start": "981000",
    "end": "981000"
  },
  {
    "text": "sets of resources within a larger",
    "start": "982440",
    "end": "986240"
  },
  {
    "text": "environment and uh one of the cool things that we do with uh resource level permissions for ec2 is tag based",
    "start": "987600",
    "end": "993680"
  },
  {
    "text": "permissions models so we'll have a couple examples of this so U you'll see very quickly that if you are one of the",
    "start": "993680",
    "end": "999680"
  },
  {
    "text": "uh customers like you saw in the keynote where you have thousands or tens of thousands of resources running uh writing policies for each individual one",
    "start": "999680",
    "end": "1006639"
  },
  {
    "text": "uh is probably not a practical solution so uh what we enable you to do is to tag those resources and then write policies",
    "start": "1006639",
    "end": "1012480"
  },
  {
    "text": "based on the tags that are present on those resources uh and you can use this with",
    "start": "1012480",
    "end": "1017560"
  },
  {
    "text": "any am principle so you can use this you can apply these types of policies to users to groups to rols to any new thing",
    "start": "1017560",
    "end": "1024079"
  },
  {
    "text": "that IM am might invent in the future as well so a couple sample use cases when",
    "start": "1024079",
    "end": "1029640"
  },
  {
    "start": "1028000",
    "end": "1028000"
  },
  {
    "text": "you might think about using this uh maybe you have a user that's supposed to be able to start stop terminate uh take",
    "start": "1029640",
    "end": "1035280"
  },
  {
    "text": "other actions on a very limited set of resources it could be an individual developer it could be a team a group of",
    "start": "1035280",
    "end": "1040760"
  },
  {
    "text": "people that uh you want to give control over certain resources too but not",
    "start": "1040760",
    "end": "1046120"
  },
  {
    "text": "others Um this can be other action for example like attaching volumes these can be multiple resources involved in these",
    "start": "1046120",
    "end": "1052840"
  },
  {
    "text": "actions they don't have to necessarily be Atomic U you know maybe you have certain people in your organization that",
    "start": "1052840",
    "end": "1058880"
  },
  {
    "text": "you want to perform certain activities like managing security groups you want to delegate to a group of Administrators",
    "start": "1058880",
    "end": "1064720"
  },
  {
    "text": "uh you don't want to trust your end user maybe to uh to make a uh Security Group",
    "start": "1064720",
    "end": "1069799"
  },
  {
    "text": "changes uh maybe you want to set up like a Dev environment and a prod environment you're going to be more permissive in",
    "start": "1069799",
    "end": "1075240"
  },
  {
    "text": "your Dev environment than you are in your prod environment this helps you do that uh maybe you have certain very sensitive",
    "start": "1075240",
    "end": "1082280"
  },
  {
    "text": "resources and you want to require MFA uh to make changes there so U this could be a change to uh uh authorize access on a",
    "start": "1082280",
    "end": "1090520"
  },
  {
    "text": "security group this could be uh something very impactful to a VPC uh this could be uh an action on a",
    "start": "1090520",
    "end": "1096360"
  },
  {
    "text": "production database that's very sensitive um and you know you can do things like require any action on that",
    "start": "1096360",
    "end": "1102320"
  },
  {
    "text": "resource use an MFA device which you can then keep in a safe under a director's desk or something like that if you have",
    "start": "1102320",
    "end": "1108000"
  },
  {
    "text": "other sorts of control roles that you want to implement so how does this work um so",
    "start": "1108000",
    "end": "1116159"
  },
  {
    "text": "what we're going to do is we're going to construct Special AM policies that have these fine grain per permissions then",
    "start": "1116159",
    "end": "1121679"
  },
  {
    "start": "1117000",
    "end": "1117000"
  },
  {
    "text": "we're going to take an IM am principle we'll use Bob for this example uh and we're going to give Bob permissions to",
    "start": "1121679",
    "end": "1126919"
  },
  {
    "text": "do different things uh he's going to be able to do the things that we've allowed him to do by this fine grain policy and not other things um this is all going to",
    "start": "1126919",
    "end": "1134640"
  },
  {
    "text": "be enforced at the API level on the back end so this is enforced at the uh by the ec2 apis now any other tooling that we",
    "start": "1134640",
    "end": "1141480"
  },
  {
    "text": "might have be it the console be it the CLI uh be it third party tools will'll all use the ec2 API so that's the least",
    "start": "1141480",
    "end": "1147840"
  },
  {
    "text": "common denominator but this will work regardless of how somebody accesses this",
    "start": "1147840",
    "end": "1153280"
  },
  {
    "text": "U and the policies are all going to result in either allowing Bob to do something or denying him the ability to do something there's really no other",
    "start": "1153280",
    "end": "1159799"
  },
  {
    "text": "possible outcome uh it's either permitted or not it's totally binary so uh let's do a very simple",
    "start": "1159799",
    "end": "1167240"
  },
  {
    "text": "example we're going to let Bob stop one instance and not any other instances how do we do",
    "start": "1167240",
    "end": "1173519"
  },
  {
    "text": "that so first of all an administrator is going to add a resource level policy to Bob that's going to enable him to stop",
    "start": "1173760",
    "end": "1179880"
  },
  {
    "text": "one particular instance uh we're going to take advantage of the fact that IM am uses a default deny model so anything",
    "start": "1179880",
    "end": "1185720"
  },
  {
    "text": "that Bob's not allow anything that Bob is not explicitly given permission to do Bob will not be able to do he has to be",
    "start": "1185720",
    "end": "1191840"
  },
  {
    "text": "explicitly authorized to do something and he can't ever be denied the ability to do it in order for us to authorize him um the model is uh you you need at",
    "start": "1191840",
    "end": "1200080"
  },
  {
    "text": "least one allow in the absence of a deny is the easy way to think about this so we're going to give him one allow and",
    "start": "1200080",
    "end": "1205559"
  },
  {
    "text": "then we're not going to say anything else about anything um it's often very complex to write policies about all the",
    "start": "1205559",
    "end": "1210919"
  },
  {
    "text": "things Bob can't do so we'll merely write a policy about the one thing we want Bob to be able to do so in order to",
    "start": "1210919",
    "end": "1217480"
  },
  {
    "text": "do this uh we're going to go into users I've created a user Bob here already and there's no promot permissions associated",
    "start": "1217480",
    "end": "1223840"
  },
  {
    "text": "with Bob yet so we're going to attach some permissions uh we're going to use the policy generator the policy",
    "start": "1223840",
    "end": "1229760"
  },
  {
    "text": "generator is one of the better ways to uh create resource level policies and this is going to be a policy for Amazon",
    "start": "1229760",
    "end": "1235120"
  },
  {
    "text": "ec2 and we said that we want Bob to be able to stop an instance so we're going to give him permission to the action",
    "start": "1235120",
    "end": "1240240"
  },
  {
    "text": "stop instances and then we're going to use an Amazon resource name here this is a a",
    "start": "1240240",
    "end": "1247240"
  },
  {
    "text": "scheme for uniquely identifying Amazon resources uh and",
    "start": "1247240",
    "end": "1253120"
  },
  {
    "text": "uh you can see there we've got a individual instance that we've named there using that orang",
    "start": "1253120",
    "end": "1259280"
  },
  {
    "text": "uh we'll give you more information on the documentation for how you can uh learn more about how those ARS are constructed but suffice it to say there",
    "start": "1259280",
    "end": "1266280"
  },
  {
    "text": "that Bob is going to have permission to stop this instance ending in 22f uh but nothing",
    "start": "1266280",
    "end": "1272200"
  },
  {
    "text": "else so once this is policy is applied let's see what Bob can do uh we're going to test the policy we're going to have",
    "start": "1272200",
    "end": "1278720"
  },
  {
    "text": "him try to stop an instance uh which is the one ending in 22f there that's going to succeed and then we're going to try",
    "start": "1278720",
    "end": "1284120"
  },
  {
    "text": "to stop another instance and uh make sure that that fails",
    "start": "1284120",
    "end": "1289919"
  },
  {
    "text": "so to do this we're going to use the AWS CLI",
    "start": "1291039",
    "end": "1295440"
  },
  {
    "text": "here so that's the instance ending in 22f that we just gave Bob permission to stop uh we're going to take advantage of",
    "start": "1307440",
    "end": "1313400"
  },
  {
    "text": "this nice feature that the aw CLI provides where it allows me to have multiple identities so I'm going to make this uh a call as Bob I've already put",
    "start": "1313400",
    "end": "1320480"
  },
  {
    "text": "Bob's credentials in here and you can see that Bob was just able to stop that instance so that worked as",
    "start": "1320480",
    "end": "1327559"
  },
  {
    "text": "expected now we're going to try to stop a different instance and we haven't given Bob we haven't said anything about",
    "start": "1329760",
    "end": "1334799"
  },
  {
    "text": "whether Bob's allowed to do this or not yet uh so we're going to use the default deny here uh to prevent Bob from doing",
    "start": "1334799",
    "end": "1340919"
  },
  {
    "text": "this again making this API call is Bob and sure enough Bob's not able to do",
    "start": "1340919",
    "end": "1347919"
  },
  {
    "text": "that so we've had a simple policy there uh kind of your most limited example we've enabled Bob to stop this one",
    "start": "1347919",
    "end": "1353960"
  },
  {
    "text": "instance and not to stop another instance now suppose I don't have just",
    "start": "1353960",
    "end": "1359120"
  },
  {
    "text": "two instances suppose I have hundreds of instances I don't want to have to write a policy for each individual user for",
    "start": "1359120",
    "end": "1365000"
  },
  {
    "text": "each individual resource uh that's going to make me go crazy very quickly so instead I'm going to allow Bob now to",
    "start": "1365000",
    "end": "1370960"
  },
  {
    "text": "stop instances with the tag stack equals Dev on them uh so if the instance has that tag Bob will be able to stop",
    "start": "1370960",
    "end": "1377279"
  },
  {
    "text": "it uh now suppose I also have instances with the tag stack equals prod on them I",
    "start": "1377279",
    "end": "1383240"
  },
  {
    "text": "could I could choose to still rely on the default deny model and not say anything about that Bob would not be able to stop instances unless they had",
    "start": "1383240",
    "end": "1389559"
  },
  {
    "text": "the stack Eagles Dev uh but maybe I have number of people maintaining policies here maybe I want to be absolutely",
    "start": "1389559",
    "end": "1395559"
  },
  {
    "text": "certain that Bob can't touch anything in my uh prod environment I'm going to in this case specifically prohibit Bob from",
    "start": "1395559",
    "end": "1401760"
  },
  {
    "text": "taking any actions on resources that are tagged with stack equals",
    "start": "1401760",
    "end": "1406880"
  },
  {
    "text": "prod so here I've got two instances uh one that's okay for Bob to stop and one that's not okay for Bob to stop uh you",
    "start": "1407440",
    "end": "1414159"
  },
  {
    "text": "can see that we've got a uh stack tag there where stack equals prod for the one that is not okay for Bob to stop and",
    "start": "1414159",
    "end": "1420240"
  },
  {
    "text": "stack equals Dev for the one that is okay for Bob to stop and it's still that same 22f instance that he's going to be",
    "start": "1420240",
    "end": "1426480"
  },
  {
    "text": "able to stop the one ending in 22f great so now that we've seen that",
    "start": "1426480",
    "end": "1433320"
  },
  {
    "text": "let's go to IM am and let's set up the policy for this",
    "start": "1433320",
    "end": "1438320"
  },
  {
    "text": "so we're going to go back to Bob and we're going to blow away these old permissions here and add some new",
    "start": "1451240",
    "end": "1457399"
  },
  {
    "text": "ones we're going to use the policy generator again like we did before again it's an Amazon ec2",
    "start": "1458600",
    "end": "1466640"
  },
  {
    "text": "policy we're going to do stop instances",
    "start": "1466640",
    "end": "1471039"
  },
  {
    "text": "again and then for the Amazon resource name here we're going to do something a little different so before we had a unique identifier for the individual",
    "start": "1474240",
    "end": "1480520"
  },
  {
    "text": "instance uh here we're going to take advantage of the fact that we can use wild cards in these orangs uh and we're",
    "start": "1480520",
    "end": "1485640"
  },
  {
    "text": "going to allow uh we're going to instead of referencing the individual instance we're going to use a wild card to reference all of the instances in this",
    "start": "1485640",
    "end": "1491880"
  },
  {
    "text": "region um so This Is Us West one and then that's my account ID and then I'm",
    "start": "1491880",
    "end": "1497000"
  },
  {
    "text": "going to do the resource type here which is instance and then slashstar which will en Encompass uh any individual",
    "start": "1497000",
    "end": "1503559"
  },
  {
    "text": "instances in that region for my account and then I'm going to add a",
    "start": "1503559",
    "end": "1509120"
  },
  {
    "text": "condition here and the condition is how I'm going to reference the uh tag so uh when it's doing the evaluation uh it's",
    "start": "1509120",
    "end": "1514679"
  },
  {
    "text": "going to be checking this instance the additional information about that instance including any tags on the instance including what instance type it",
    "start": "1514679",
    "end": "1521880"
  },
  {
    "text": "is uh including uh what the root device volume is all sorts of other condition",
    "start": "1521880",
    "end": "1527240"
  },
  {
    "text": "keys are available to me here uh the one that I care about is that the stack equals Dev tag is present on that",
    "start": "1527240",
    "end": "1533360"
  },
  {
    "text": "instance now the uh condition prefix there doesn't particularly matter matter here because the uh key stack will be",
    "start": "1533360",
    "end": "1540240"
  },
  {
    "text": "unique for the resource uh so I can actually pick either one there uh and so now I've got my allow policy and we said",
    "start": "1540240",
    "end": "1545559"
  },
  {
    "text": "we were going to do a explicit denial uh for uh instances with a tag stack equals prod on them so we're going to do",
    "start": "1545559",
    "end": "1552440"
  },
  {
    "text": "basically exactly the same steps here except for the other tag so uh ec2 stop",
    "start": "1552440",
    "end": "1557720"
  },
  {
    "text": "instances is using the AR with the wild card",
    "start": "1557720",
    "end": "1563679"
  },
  {
    "text": "this will be the stack equals prod",
    "start": "1594919",
    "end": "1598360"
  },
  {
    "text": "tag and I want this to be a denial policy so I'll make that the effect of that policy deny so now I've got a two-",
    "start": "1603200",
    "end": "1609720"
  },
  {
    "text": "statement policy here one allowing him to stop instances with the tag stack equal Dev one denying",
    "start": "1609720",
    "end": "1615919"
  },
  {
    "text": "him the ability to do it stack prod I can see the the actual policy document that's created by that uh policy",
    "start": "1615919",
    "end": "1621159"
  },
  {
    "text": "generator here verify that everything is as",
    "start": "1621159",
    "end": "1626960"
  },
  {
    "text": "expected great now I've applied that a policy to Bob if I ever forget later I can come back and just show that policy",
    "start": "1629840",
    "end": "1635679"
  },
  {
    "text": "and see all the details",
    "start": "1635679",
    "end": "1638720"
  },
  {
    "text": "here great so now that that's been applied uh let's do exactly the same thing that we did before and we'll prove",
    "start": "1642520",
    "end": "1648279"
  },
  {
    "text": "ourselves that this works doing the tag based policy so Bob's going to now try to stop that one instance ending in 22f",
    "start": "1648279",
    "end": "1653799"
  },
  {
    "text": "that has the tag stack Google Dev on it and that's going to succeed and he's going to try to stop the other one and that's going to fail but in this case we",
    "start": "1653799",
    "end": "1660159"
  },
  {
    "text": "haven't said anything about individual instance IDs we've done it purely based on the tags that are present on the uh on the",
    "start": "1660159",
    "end": "1667159"
  },
  {
    "text": "instances so I'm going to stop instances again and depending on your environment",
    "start": "1667159",
    "end": "1673880"
  },
  {
    "text": "obviously you may have more than just Devon prod you know um you may have a series of different cost centers or",
    "start": "1673880",
    "end": "1679200"
  },
  {
    "text": "applications uh if you want you can actually get more complex here and you can require the presence of two tags so",
    "start": "1679200",
    "end": "1684519"
  },
  {
    "text": "you know maybe Bob is only able to act on the DB tier in your Dev environment but not the web tier uh so you can apply",
    "start": "1684519",
    "end": "1690480"
  },
  {
    "text": "multiple tags and and make this as complex as you would like um the you'll find the complexity of in implementation",
    "start": "1690480",
    "end": "1696120"
  },
  {
    "text": "skills roughly uh in line with the uh complexity of what you're trying to do uh hopefully and so of course the the",
    "start": "1696120",
    "end": "1702720"
  },
  {
    "text": "first one here worked as Bob and then we expect the second one to fail",
    "start": "1702720",
    "end": "1708799"
  },
  {
    "text": "and of course that that fails as expected so let's talk a little bit about how I am's policies are structured",
    "start": "1716120",
    "end": "1723080"
  },
  {
    "text": "so I I kind of waved my hands a little bit at that big Json block before uh that was the actual policy document so",
    "start": "1723080",
    "end": "1728760"
  },
  {
    "text": "let's talk just a little bit about how that's composed I am uses what's called what we call the Park Model uh and uh",
    "start": "1728760",
    "end": "1734919"
  },
  {
    "text": "Park is an acronym here where P is for principle A is for action R is for resources and C is for conditions uh",
    "start": "1734919",
    "end": "1741159"
  },
  {
    "text": "there's a couple other minor pieces in the policy like there's a version number there's that effect allowed deny but the me to the policy are really these these",
    "start": "1741159",
    "end": "1747799"
  },
  {
    "text": "four items U the principle here uh in this case Bob was the principal uh we",
    "start": "1747799",
    "end": "1753760"
  },
  {
    "text": "don't actually see Bob in that policy that we created because we're attaching the policy to Bob uh so the fact that it's a policy about Bob is inferred from",
    "start": "1753760",
    "end": "1760519"
  },
  {
    "text": "the fact that the policy was attached to Bob uh typically when you add policies in IM am you will not actually see the",
    "start": "1760519",
    "end": "1766679"
  },
  {
    "text": "principle in the policy statement because you've applied the policy to the principle uh the action is a the action",
    "start": "1766679",
    "end": "1775159"
  },
  {
    "text": "that is going to be performed uh it'll typically map very closely to API level actions uh so in the case of ec2 it's",
    "start": "1775159",
    "end": "1781760"
  },
  {
    "start": "1777000",
    "end": "1777000"
  },
  {
    "text": "almost a onetoone mapping there's a a few cases uh where the action is subtly",
    "start": "1781760",
    "end": "1786960"
  },
  {
    "text": "different uh than the API that it refers to an example would be uh for security groups there's a separate action for",
    "start": "1786960",
    "end": "1792360"
  },
  {
    "text": "allowing Ingress uh versus egress uh whereas there's a single API but it's it's uh usually usually pretty high",
    "start": "1792360",
    "end": "1798600"
  },
  {
    "text": "fidelity relationship between these actions and the apis that you're going to allow them to call uh stop instances was the the",
    "start": "1798600",
    "end": "1806080"
  },
  {
    "text": "example we just saw uh the resource is a resource that's involved in the action it could be an",
    "start": "1806080",
    "end": "1812039"
  },
  {
    "text": "object of the uh action it could be you know in a grammatical sense a direct object it could be an indirect object um",
    "start": "1812039",
    "end": "1818679"
  },
  {
    "text": "and this is something where it's going to depend a little bit on the specific action that you're using uh so we'll see",
    "start": "1818679",
    "end": "1824120"
  },
  {
    "text": "uh an example in just a second where there's multiple resources involved in API call um you will need to separately authorize",
    "start": "1824120",
    "end": "1830519"
  },
  {
    "text": "each of those resources in the case where there's multiple resources involved uh in this case we had a simple example where we were authorizing this",
    "start": "1830519",
    "end": "1836640"
  },
  {
    "text": "individual instance uh then conditions are optional",
    "start": "1836640",
    "end": "1842320"
  },
  {
    "text": "uh you don't necessarily need a condition statement in a policy but it allows you to uh further limit what's",
    "start": "1842320",
    "end": "1848000"
  },
  {
    "text": "going to happen by the policy uh these are optional additional parameters um",
    "start": "1848000",
    "end": "1853200"
  },
  {
    "text": "you can see there that we use the ec2 resource tag stack equals Dev as a condition key uh and that was so we were",
    "start": "1853200",
    "end": "1859600"
  },
  {
    "text": "allowing access to that instance conditional on the presence of this tag on that instance uh there's a number of",
    "start": "1859600",
    "end": "1864840"
  },
  {
    "text": "other uh uh conditions that are available the uh uh platform-wide there's a number that AWS provides uh",
    "start": "1864840",
    "end": "1872240"
  },
  {
    "text": "through IM such as MFA access the source IP address uh uh generic uh cross ads",
    "start": "1872240",
    "end": "1879399"
  },
  {
    "text": "items as well as a number of specific ec2 items such as the resource tag here um and then other attributes typically",
    "start": "1879399",
    "end": "1886360"
  },
  {
    "text": "related to the resource that we evaluating in the policy so then these then get combined",
    "start": "1886360",
    "end": "1892120"
  },
  {
    "text": "into a policy statement here's a uh you know kind of a pseudo policy here uh we would also typically have a version",
    "start": "1892120",
    "end": "1898559"
  },
  {
    "text": "number in here but we admit that for Simplicity uh we have an effect which is going to be allower deny for a",
    "start": "1898559",
    "end": "1905039"
  },
  {
    "text": "particular action on a particular resource subject to certain conditions this would then be attached to the principle that it's going to be applied",
    "start": "1905039",
    "end": "1910720"
  },
  {
    "text": "to um so uh in terms of how all this works all of these policies are provided",
    "start": "1910720",
    "end": "1917480"
  },
  {
    "text": "by it's a central cross AWS Service uh they are then implemented by the individual service teams so uh the uh",
    "start": "1917480",
    "end": "1926039"
  },
  {
    "text": "examples that we've been seeing we've been switching between the IM console and the ec2 console uh ec2 here for",
    "start": "1926039",
    "end": "1931120"
  },
  {
    "text": "example enumerates all the different actions uh that are provided and the different resources that they can act on",
    "start": "1931120",
    "end": "1936880"
  },
  {
    "text": "uh so usually when you're working with these you'll want to look at IM documentation uh practically what this means is look at IM documentation uh for",
    "start": "1936880",
    "end": "1944760"
  },
  {
    "text": "uh things about managing policies uploading them U that type of information and then look at ec2",
    "start": "1944760",
    "end": "1949960"
  },
  {
    "text": "documentation for information about which actions are supported for uh for ec2 which resources they're acting on",
    "start": "1949960",
    "end": "1955919"
  },
  {
    "text": "what condition Keys might be available in that context so you'll usually need to look at",
    "start": "1955919",
    "end": "1961039"
  },
  {
    "text": "both uh so a minute ago I promised a little bit more uh complex example uh that would involve multiple resources uh",
    "start": "1961039",
    "end": "1968360"
  },
  {
    "text": "we'll do uh slightly more complicated one here where we're going to allow Bob now to attach a volume to an instance um",
    "start": "1968360",
    "end": "1975760"
  },
  {
    "text": "it actually acts on both resources depending on the context I might be I might uh care about whether Bob is",
    "start": "1975760",
    "end": "1980919"
  },
  {
    "text": "allowed to attach volumes to the instance or I might care about what uh instances Bob is allowed to attach that",
    "start": "1980919",
    "end": "1986080"
  },
  {
    "text": "volume to depending on my use case so you know maybe this there's something sensitive about that instance maybe",
    "start": "1986080",
    "end": "1991120"
  },
  {
    "text": "there's something sensitive about the data uh I want to make sure that I'm actually controlling both of those in this case uh in order to do that I'm",
    "start": "1991120",
    "end": "1997600"
  },
  {
    "text": "going to actually uh write a policy that allows Bob to attach the instance and the volume only if both of them have",
    "start": "1997600",
    "end": "2003519"
  },
  {
    "text": "that stack equals Dev tag on them so I'm going to do a policy evaluation against both resources",
    "start": "2003519",
    "end": "2009440"
  },
  {
    "text": "here uh so because this is a little bit more complex action uh and this is a",
    "start": "2009440",
    "end": "2014559"
  },
  {
    "text": "good general practice uh we're going to actually start by Consulting the documentation first just to make sure",
    "start": "2014559",
    "end": "2019960"
  },
  {
    "text": "that uh we understand exactly how this is going to work so this is basically",
    "start": "2019960",
    "end": "2025080"
  },
  {
    "text": "where you're going to want to go for uh learning more about specific and more complicated actions uh you want to go to",
    "start": "2025080",
    "end": "2030200"
  },
  {
    "text": "the ec2 API reference and then there's this permission section here and you can see that we've got uh documentation on",
    "start": "2030200",
    "end": "2036880"
  },
  {
    "text": "the uh different actions that are supported here uh I should point out that not all ec2 actions support",
    "start": "2036880",
    "end": "2042279"
  },
  {
    "text": "resource level permissions at this point uh describe instances being for example a notable absence uh so you'll want to",
    "start": "2042279",
    "end": "2048158"
  },
  {
    "text": "make sure that this is that this is supported for the action that you're using uh because it is only a subset of apis at this point so we found attach",
    "start": "2048159",
    "end": "2055839"
  },
  {
    "text": "volume here uh and we can see that attach volume uh uses two resources there's an instance and a volume that",
    "start": "2055839",
    "end": "2061919"
  },
  {
    "text": "we'll need to authorize and in both cases this resource tag uh is supported for both resources you can see see that",
    "start": "2061919",
    "end": "2067960"
  },
  {
    "text": "there's some other condition keys that I could choose to use there as well U you know so maybe I care about authorizing",
    "start": "2067960",
    "end": "2073599"
  },
  {
    "text": "Bob's access to that volume based on the parent snapshot that was created from uh you know maybe uh you know in another",
    "start": "2073599",
    "end": "2080440"
  },
  {
    "text": "context I might care about uh information such as what instance type it is things like that so I can see all",
    "start": "2080440",
    "end": "2086118"
  },
  {
    "text": "the information that's available to me there my use case is supported so I'm good to go so now I'm going to write go",
    "start": "2086119",
    "end": "2092079"
  },
  {
    "text": "ahead and write this policy uh so I'm going to go back to Bob here um I've deleted his policies again so we're",
    "start": "2092079",
    "end": "2097920"
  },
  {
    "text": "going to add new policies for Bob we're going to go back to this policy generator like we did",
    "start": "2097920",
    "end": "2103119"
  },
  {
    "text": "before again it's an ec2 policy and the action here that we're",
    "start": "2103119",
    "end": "2108640"
  },
  {
    "text": "going to use this time is attach",
    "start": "2108640",
    "end": "2111880"
  },
  {
    "text": "volume and then we're going to do the AR with the Wild Card like we did before and I'm going to paste it in here to",
    "start": "2114160",
    "end": "2119680"
  },
  {
    "text": "save time so this is the instance policy now I'm going to add conditions",
    "start": "2119680",
    "end": "2127880"
  },
  {
    "text": "so again we're going to do the uh tag based",
    "start": "2127880",
    "end": "2132720"
  },
  {
    "text": "policy now we're going to do a second statement here for the volume now if we wanted we could do different policies",
    "start": "2145119",
    "end": "2151400"
  },
  {
    "text": "for the instance and the volume so maybe I have a different tagging scheme for the instances than I do for the volumes you know maybe you know sensitivity",
    "start": "2151400",
    "end": "2157720"
  },
  {
    "text": "equals low on the volume or something else depending on what's relevant to me",
    "start": "2157720",
    "end": "2163318"
  },
  {
    "text": "um I can also use variables if I want so I can tag the volume with Bob's username and then only let Bob touch volumes that",
    "start": "2163560",
    "end": "2171079"
  },
  {
    "text": "are tagged with his username if I want to be a little bit more complicated uh lots of ways to to extend this here but",
    "start": "2171079",
    "end": "2176359"
  },
  {
    "text": "we're going to keep it simple for now and it's they're both going to have stack equals Dev on",
    "start": "2176359",
    "end": "2181680"
  },
  {
    "text": "them great and now we've allowed Bob to attach instances with that tag on them and we've allowed him to attach volumes",
    "start": "2185839",
    "end": "2191800"
  },
  {
    "text": "with that tag on them which will now allow him to U accomplish his use case check the",
    "start": "2191800",
    "end": "2198240"
  },
  {
    "text": "policy that's all good to go",
    "start": "2198240",
    "end": "2204280"
  },
  {
    "text": "wonderful we can verify that later here if we need to so let's verify that this actually",
    "start": "2204280",
    "end": "2211599"
  },
  {
    "text": "works as expected uh and we're going to try a couple permutations here so we first of all we've got two instances one",
    "start": "2211599",
    "end": "2217720"
  },
  {
    "text": "that's that development instance from before and one that's a uh production instance we're using the tag uh screen",
    "start": "2217720",
    "end": "2224240"
  },
  {
    "text": "to uh to see this here which is in the ec2 console uh so if you're start using tags pretty heavily this is a useful way",
    "start": "2224240",
    "end": "2230520"
  },
  {
    "text": "to visualize that uh now we've got these three volumes two of them are in Dev and one",
    "start": "2230520",
    "end": "2236680"
  },
  {
    "text": "of them are in prod and we're going to do a couple different combinations here uh just to see that this actually works",
    "start": "2236680",
    "end": "2242119"
  },
  {
    "text": "as we expect so Bob's going to try to attach uh attach the volume he's going to use this uh instance that he is",
    "start": "2242119",
    "end": "2248640"
  },
  {
    "text": "authorized to use this 22f instance and then he's going to use one",
    "start": "2248640",
    "end": "2253680"
  },
  {
    "text": "of these Dev",
    "start": "2253680",
    "end": "2256720"
  },
  {
    "text": "volumes and that device there is just where we're going to mount the volume on the instance and we're going to make this call as",
    "start": "2266720",
    "end": "2273640"
  },
  {
    "text": "Bob and sure enough that exceeds because he's authorized to perform that action on both of",
    "start": "2275640",
    "end": "2281280"
  },
  {
    "text": "these now we're going to try this again with a slightly different permutation",
    "start": "2281280",
    "end": "2286680"
  },
  {
    "text": "here we're going to use the other instance this time this is the uh instance with the prod tag on it so Bob",
    "start": "2288480",
    "end": "2294800"
  },
  {
    "text": "should not be able to do",
    "start": "2294800",
    "end": "2297760"
  },
  {
    "text": "this now to keep things interesting the volume that we're using is a volume with the uh Dev tag on it so Bob should be",
    "start": "2304480",
    "end": "2310880"
  },
  {
    "text": "able to attach this volume to instances but he should not be able to attach the instance to volumes um because he's not",
    "start": "2310880",
    "end": "2316839"
  },
  {
    "text": "allowed to uh do this it doesn't well so we'll use the correct profile here um so",
    "start": "2316839",
    "end": "2323839"
  },
  {
    "text": "because he's not allowed to do this it it fails we'll try this the other way around now so we'll use a instance that",
    "start": "2323839",
    "end": "2330280"
  },
  {
    "text": "he is allowed to use and a volume that he's not and again this will",
    "start": "2330280",
    "end": "2336440"
  },
  {
    "text": "fail for",
    "start": "2336440",
    "end": "2340440"
  },
  {
    "text": "and sure enough that also fails so Bob can only attach the instances with a particular tag on it and he can only",
    "start": "2370400",
    "end": "2375560"
  },
  {
    "text": "attach volumes with a particular tag on it uh so he needs to make sure that he's using an instance with that tag and a",
    "start": "2375560",
    "end": "2380680"
  },
  {
    "text": "volume with that tag um there are uh other examples where this gets a little bit more complicated we'll preview uh",
    "start": "2380680",
    "end": "2386760"
  },
  {
    "text": "run instances very briefly in a second which is something that's not out yet but coming very soon uh where this is",
    "start": "2386760",
    "end": "2391960"
  },
  {
    "text": "going to be a little bit more involved",
    "start": "2391960",
    "end": "2395838"
  },
  {
    "text": "and here we're going to now again try to that he is allowed to do just to prove to ourselves that this is uh working as",
    "start": "2397640",
    "end": "2404880"
  },
  {
    "text": "expected and sure enough that works so uh for these policies uh a couple of",
    "start": "2411800",
    "end": "2417680"
  },
  {
    "start": "2416000",
    "end": "2416000"
  },
  {
    "text": "best practices U the first one is stop and think about what you want to do here so these are fundamental building blocks",
    "start": "2417680",
    "end": "2424200"
  },
  {
    "text": "uh you need to figure out what security policies are going to make the most sense for you what model you want to use",
    "start": "2424200",
    "end": "2430240"
  },
  {
    "text": "and the first step for that is usually thinking about how you want to organize your users and your resources so I used a very simple example here where we had",
    "start": "2430240",
    "end": "2436800"
  },
  {
    "text": "the tags Dev and prod U it's obviously a little bit simpler than probably the environments that most of you are",
    "start": "2436800",
    "end": "2442119"
  },
  {
    "text": "working in uh you want to make sure that you think through that um do you want for example only one level of tagging do",
    "start": "2442119",
    "end": "2448160"
  },
  {
    "text": "you want to also intersect for example application names or uh service tiers different information like that uh for",
    "start": "2448160",
    "end": "2454079"
  },
  {
    "text": "setting up these policies typically tags are the best way to do this um you can use other things as well tags you'll",
    "start": "2454079",
    "end": "2460359"
  },
  {
    "text": "find are the most flexible um and and most broadly available uh another good",
    "start": "2460359",
    "end": "2466560"
  },
  {
    "text": "idea here make heavy use of the default deny model in I IM if you try to write policies that describe every individual",
    "start": "2466560",
    "end": "2472000"
  },
  {
    "text": "thing that somebody should not be able to do uh especially with the rate at which new features are arriving you're going to you're going to run into a lot",
    "start": "2472000",
    "end": "2477880"
  },
  {
    "text": "of headaches very quickly much better to focus on on giving very limited allow statements for what people should be",
    "start": "2477880",
    "end": "2483480"
  },
  {
    "text": "able to do uh another thing too these get pretty complicated as you get into more complex uh examples make sure that",
    "start": "2483480",
    "end": "2490079"
  },
  {
    "text": "you're testing these to gain confidence in them it's easy enough to fat finger something or whatever and have this not",
    "start": "2490079",
    "end": "2495280"
  },
  {
    "text": "quite work as you expect uh so make sure that you're testing these before relying on them",
    "start": "2495280",
    "end": "2500319"
  },
  {
    "text": "heavily a couple additional considerations here uh so if you do use tags for permissions uh you want to make",
    "start": "2500319",
    "end": "2506319"
  },
  {
    "start": "2503000",
    "end": "2503000"
  },
  {
    "text": "sure that you're controlling who can actually apply those tags so in these examples if I gave Bob the permission to",
    "start": "2506319",
    "end": "2511520"
  },
  {
    "text": "change that prod tag to a Dev tag uh I haven't effectively limited his ability to do very much um so I want to make",
    "start": "2511520",
    "end": "2518000"
  },
  {
    "text": "sure that if I am using tags for this that I'm thoughtful about who controls those tags U another a little bit of a sharp",
    "start": "2518000",
    "end": "2525000"
  },
  {
    "text": "edge here not all ec2 uh operations currently support this uh so you'll want to look uh in that API documentation",
    "start": "2525000",
    "end": "2531160"
  },
  {
    "text": "that we checked there to make sure that um it's actually implemented for what you're looking for uh one actually",
    "start": "2531160",
    "end": "2537960"
  },
  {
    "text": "pretty cool benefit for this so these same tags can be used for tag- based billing uh so in a lot of cases you may",
    "start": "2537960",
    "end": "2544079"
  },
  {
    "text": "be wanting to set permissions based on what workg group somebody's in uh what application they work on uh if you use",
    "start": "2544079",
    "end": "2549960"
  },
  {
    "text": "tags for that then you can go get uh uh detailed billing reports based on uh the cost of the resources with those tags on",
    "start": "2549960",
    "end": "2556240"
  },
  {
    "text": "it so you can set up one resource model uh with your tags and get both the billing features as well as the",
    "start": "2556240",
    "end": "2561520"
  },
  {
    "text": "permissions features out of that so we've got one coming soon announcement here uh for run instances",
    "start": "2561520",
    "end": "2568520"
  },
  {
    "text": "so run instances is going to support resource level permissions very soon here um and this is going to allow you",
    "start": "2568520",
    "end": "2573640"
  },
  {
    "text": "to do a lot of cool stuff there's actually a lot of different resources that go into run instance is it's one of the more complex apis uh this will allow",
    "start": "2573640",
    "end": "2580520"
  },
  {
    "text": "you to uh control which amies and snapshots an individual user can use so we can for example give Bob permission",
    "start": "2580520",
    "end": "2586800"
  },
  {
    "text": "only to use amies that are on my corporate white list or only a specific enumerated Ami and that will be the only",
    "start": "2586800",
    "end": "2591880"
  },
  {
    "text": "Ami that he can use to run instances with I can control which snapshots he's able to use as well uh I can do both of",
    "start": "2591880",
    "end": "2597880"
  },
  {
    "text": "those with tags or individual resource identifiers of course uh I will be able to also control the types of resources",
    "start": "2597880",
    "end": "2603680"
  },
  {
    "text": "that he can create using run instances uh most most notably this is the instance in the volume so I can",
    "start": "2603680",
    "end": "2610000"
  },
  {
    "text": "control for example Bob's ability uh to create you know M1 small instances maybe",
    "start": "2610000",
    "end": "2615079"
  },
  {
    "text": "I want him to be able to do that uh maybe I don't want him to be able to create a new I2 instance at the moment U",
    "start": "2615079",
    "end": "2620800"
  },
  {
    "text": "whether for cost reasons or because I don't think it's appropriate whatever I I can specify the types of attributes uh",
    "start": "2620800",
    "end": "2627079"
  },
  {
    "text": "for that resource that he's intending to create and then have the policy allow or deny him to do that based on those attributes uh I will also be able to",
    "start": "2627079",
    "end": "2633920"
  },
  {
    "text": "authorize Bob to um launch instances in to certain subnets uh but not other",
    "start": "2633920",
    "end": "2639119"
  },
  {
    "text": "subnets so if I have for example a production subnet and I want to make sure that that's only used for a production workload and Bob shouldn't be",
    "start": "2639119",
    "end": "2645599"
  },
  {
    "text": "able to run instances there I'll be able to prevent Bob from doing that uh I will also be able to control which security",
    "start": "2645599",
    "end": "2651440"
  },
  {
    "text": "groups Bob can use uh which network interfaces he can use as well uh so pretty rich set of permissions around uh",
    "start": "2651440",
    "end": "2657680"
  },
  {
    "text": "the types of resources that Bob is able to create I don't have an exact date to share with you for this but it's coming in the in the very near future and uh",
    "start": "2657680",
    "end": "2664720"
  },
  {
    "text": "and of course there will be more after this as well so the best way to keep an eye on this uh we'll be announcing these of course in",
    "start": "2664720",
    "end": "2670800"
  },
  {
    "text": "the forums on the blogs and then of course those documentation that we saw before will be updated as these are",
    "start": "2670800",
    "end": "2676240"
  },
  {
    "text": "added so you know couple months from now if it's been a while since you've looked at this and you're wondering uh check",
    "start": "2676240",
    "end": "2681960"
  },
  {
    "start": "2679000",
    "end": "2679000"
  },
  {
    "text": "that documentation it's very likely that there will be uh even more that we've provided here uh so now I want to talk",
    "start": "2681960",
    "end": "2687200"
  },
  {
    "text": "about actually what I think is one of the very cool features uh it's also a little bit easy to specific here um for",
    "start": "2687200",
    "end": "2693040"
  },
  {
    "text": "how you manage some of these complex policies uh one of the challenges of course is if I want to make sure that",
    "start": "2693040",
    "end": "2698960"
  },
  {
    "text": "Bob isn't able to terminate my production database uh the last thing I want to do is TR try to terminate my",
    "start": "2698960",
    "end": "2704720"
  },
  {
    "text": "production database and then find out that that succeeds when I didn't intend it to um so we've got a a feature for",
    "start": "2704720",
    "end": "2710760"
  },
  {
    "text": "ec2 here that we call dry run API calls uh and this is a flag that I can use when I make the API call it will check",
    "start": "2710760",
    "end": "2717440"
  },
  {
    "text": "the authorization result of the API call but it won't actually process it uh and this is specifically useful for this uh",
    "start": "2717440",
    "end": "2723359"
  },
  {
    "text": "example so let's watch how this works I've changed Bob's policy around a little bit for this example Bob's going",
    "start": "2723359",
    "end": "2729599"
  },
  {
    "text": "to now try to terminate an instance you can imagine that this has something on it that I don't want Bob to",
    "start": "2729599",
    "end": "2735640"
  },
  {
    "text": "terminate and I'm going to make sure that he can uh he cannot terminate",
    "start": "2735640",
    "end": "2741359"
  },
  {
    "text": "this so I go ahead and I just like before I'm going to try to make this API call us Bob but now I'm going to add an",
    "start": "2742200",
    "end": "2747720"
  },
  {
    "text": "additional flag here this dry run flag and I'm going to see now that that",
    "start": "2747720",
    "end": "2754480"
  },
  {
    "text": "that call would have succeeded if I didn't have the driver run flag it would have actually gone and terminated that instance um thankfully I had used the",
    "start": "2754480",
    "end": "2761040"
  },
  {
    "text": "dry run flag so it's not actually terminated and now I can figure out that my policy would have allowed that I'm going to now check a different",
    "start": "2761040",
    "end": "2768839"
  },
  {
    "text": "instance again making the API call as",
    "start": "2768839",
    "end": "2773200"
  },
  {
    "text": "Bob and now this is the other possible result so Bob was not able to terminate this other instance and so I've used",
    "start": "2778040",
    "end": "2783800"
  },
  {
    "text": "this as a way of figuring out the effective permissions that Bob has uh this is using all the tags that are currently on those resources all the",
    "start": "2783800",
    "end": "2790280"
  },
  {
    "text": "other contextual information that might be there just as if it was a real API call uh except that I haven't actually",
    "start": "2790280",
    "end": "2795720"
  },
  {
    "text": "processed it uh the second really cool feature here uh you've been noticing these big",
    "start": "2795720",
    "end": "2801800"
  },
  {
    "start": "2798000",
    "end": "2798000"
  },
  {
    "text": "ugly asy armored blocks uh that are called encoded error messages uh these are actually a really cool feature that",
    "start": "2801800",
    "end": "2807640"
  },
  {
    "text": "you can use for this uh you have to be using a recent version of the ec2 API to get those so if you aren't seeing those",
    "start": "2807640",
    "end": "2813440"
  },
  {
    "text": "uh when you're using ec2 you're probably not using a recent enough version of the API so make sure you're using at least",
    "start": "2813440",
    "end": "2818839"
  },
  {
    "text": "the June 15th API or later um and then there's a uh relatively recently released U STS API that you can use to",
    "start": "2818839",
    "end": "2826480"
  },
  {
    "text": "decode these it's called decode authorization message uh and the results going to include a lot of information on",
    "start": "2826480",
    "end": "2832280"
  },
  {
    "text": "uh what I tried what the user tried to do and then what the result was uh and you can lock down access to that STS API",
    "start": "2832280",
    "end": "2839040"
  },
  {
    "text": "using im as well uh so you can have for example an administrator that's able to decode these messages the user maybe can",
    "start": "2839040",
    "end": "2845599"
  },
  {
    "text": "uh can't decode them themselves they could email them to an administrator um you know for example to have those decoded so let's continue this earlier",
    "start": "2845599",
    "end": "2852599"
  },
  {
    "text": "example that we just had here um and we want to figure out more about uh why Bob wasn't able to terminate that",
    "start": "2852599",
    "end": "2859200"
  },
  {
    "text": "instance so we're going to use this STS API here and we're just going to copy and",
    "start": "2859200",
    "end": "2866359"
  },
  {
    "text": "paste this whole",
    "start": "2866359",
    "end": "2868960"
  },
  {
    "text": "block and now in this case we're going to we I created a new user here called Alice and Alice is is my administrator",
    "start": "2872160",
    "end": "2877640"
  },
  {
    "text": "and Alice is going to check this Bob would not be able to check this but Alice can check this and she's going to get quite a bit of information here uh",
    "start": "2877640",
    "end": "2884319"
  },
  {
    "text": "about why exactly this was denied and she's going to see that this was an explicit denial so I had an actual uh",
    "start": "2884319",
    "end": "2890000"
  },
  {
    "text": "denial statement which is why Bob wasn't able to do this and the denial statement here",
    "start": "2890000",
    "end": "2895880"
  },
  {
    "text": "uh uh is a statement that does not allow Bob to uh perform any actions on",
    "start": "2895880",
    "end": "2901119"
  },
  {
    "text": "Resources with a prod tag on them and then I can see information about the instance that Bob was trying to ter as",
    "start": "2901119",
    "end": "2907440"
  },
  {
    "text": "well uh and I'm going to see down here that the instance that Bob was trying to terminate had this prod tag on it and so",
    "start": "2907440",
    "end": "2914079"
  },
  {
    "text": "that policy matched that instance that Bob was trying to terminate and that's why he was denied that ability uh this",
    "start": "2914079",
    "end": "2919760"
  },
  {
    "text": "can also be very useful in contexts where uh you want to figure out what condition keys are available for example",
    "start": "2919760",
    "end": "2925040"
  },
  {
    "text": "I can actually see a full list of all the different condition keys that are available to me uh when I want to write policies about uh what Bob can do with",
    "start": "2925040",
    "end": "2931760"
  },
  {
    "text": "this instance so I can see for example what you know there's a region tag here there's an availability tag here there's",
    "start": "2931760",
    "end": "2937760"
  },
  {
    "text": "an instance type tag here there's an EBS optimized uh U tag here as well I can",
    "start": "2937760",
    "end": "2942880"
  },
  {
    "text": "write policies to any of those uh typically when I'm personally writing policies I find it very use useful to use this feature and then I just copy",
    "start": "2942880",
    "end": "2949359"
  },
  {
    "text": "and paste what's in here that I want to write a policy so I don't add any policies first copy and paste what I",
    "start": "2949359",
    "end": "2954720"
  },
  {
    "text": "want and here into the policy uh and it makes it a lot faster to author to uh author those",
    "start": "2954720",
    "end": "2959799"
  },
  {
    "text": "policies so putting this together uh the best way to write these policies if if you end up in a position where you're",
    "start": "2959799",
    "end": "2965200"
  },
  {
    "text": "doing this quite a bit uh I typically like to start with a test user so maybe don't use a real Bob you know invent",
    "start": "2965200",
    "end": "2971280"
  },
  {
    "text": "some sort of a test user where I'm going to keep their credentials so I can make calls uh as that user uh put a test",
    "start": "2971280",
    "end": "2977319"
  },
  {
    "text": "policy on there use that dry run flag verify that you're getting what you expect if you're not getting what you",
    "start": "2977319",
    "end": "2982680"
  },
  {
    "text": "expect uh use those authorization messages U decode those figure out what's going on iterate on that policy",
    "start": "2982680",
    "end": "2988599"
  },
  {
    "text": "until you get the policy the way that you like it and then go apply that policy to all the users groups and roles that you want to apply that policy to",
    "start": "2988599",
    "end": "2997000"
  },
  {
    "text": "so uh at the end here a couple additional resources that you'll find useful I'll leave this slide up for a second um there's kind of four main",
    "start": "2997000",
    "end": "3004280"
  },
  {
    "text": "places that I would go for more information on this uh I would go to the ec2 user guide and I think that's the best place to start for all the topics",
    "start": "3004280",
    "end": "3010760"
  },
  {
    "text": "that we just talked about uh there's a a section on u u uh IM permissions for ec2",
    "start": "3010760",
    "end": "3017839"
  },
  {
    "text": "uh which goes through the actual way that you write policies and there's a separate section on IM IM roles which goes through how you use the roles that",
    "start": "3017839",
    "end": "3024040"
  },
  {
    "text": "we talked about at the beginning of the presentation um that's the best place to start uh links to everything else are",
    "start": "3024040",
    "end": "3029280"
  },
  {
    "text": "from there so if you're um remembering this uh and not taking notes uh start",
    "start": "3029280",
    "end": "3034480"
  },
  {
    "text": "with ec2 user guide and then if you want to go into the actual API level details around what isn't isn't supported uh go",
    "start": "3034480",
    "end": "3042200"
  },
  {
    "text": "to the ec2 API reference for that there's a permission section in there that's the one that we saw in the video uh and that has all the U fine grain",
    "start": "3042200",
    "end": "3049200"
  },
  {
    "text": "details on exactly what I can do and which context uh IM also has some very useful documentation here so they have",
    "start": "3049200",
    "end": "3055440"
  },
  {
    "text": "uh permissions and policy section which talks in more if you want to learn more about the park model and uh uh how IM",
    "start": "3055440",
    "end": "3062440"
  },
  {
    "text": "policies are structured and applied uh IM has a lot of good resources on that and they also have more information on",
    "start": "3062440",
    "end": "3068160"
  },
  {
    "text": "roles if you want to learn more about some of the other examples of roles that we talked about such as cross account access things like that uh IM IM has",
    "start": "3068160",
    "end": "3075040"
  },
  {
    "text": "that documentation and then if you're looking for uh good implementation ideas for this and uh good examples of of how",
    "start": "3075040",
    "end": "3082400"
  },
  {
    "text": "this can work in practice uh use the AWS security blog for that uh we're going to be periodically uh posting uh to that",
    "start": "3082400",
    "end": "3089079"
  },
  {
    "text": "with cool use cases uh around uh different ways that you can take advantage of that and that'll be a good",
    "start": "3089079",
    "end": "3094400"
  },
  {
    "text": "Avenue for this as well uh in addition to of course all the normal uh normal Avenues so U you know the ec2 forums for",
    "start": "3094400",
    "end": "3101599"
  },
  {
    "text": "example are a great way to interact with us the IM Am forums uh we'll use of course the AWS blog and other resources",
    "start": "3101599",
    "end": "3107319"
  },
  {
    "text": "as well but uh specifically for this material I think you'll find these most useful so uh with that in mind uh we are",
    "start": "3107319",
    "end": "3117880"
  },
  {
    "text": "wrapping up here so uh we'd love to get your feedback on the session what you like what you didn't like uh I guess",
    "start": "3117880",
    "end": "3123280"
  },
  {
    "text": "there's a prize I don't know what it is but there's a prize if you fill out your survey so uh uh take advantage of that",
    "start": "3123280",
    "end": "3129559"
  },
  {
    "text": "and uh thank you very much um again my name was Derrick lion I'm a uh product manager on the ec2 team so hopefully you",
    "start": "3129559",
    "end": "3135359"
  },
  {
    "text": "found it helpful uh if you have feature requests or questions or anything else uh Ken and I would be happy to take your",
    "start": "3135359",
    "end": "3140880"
  },
  {
    "text": "questions after the session thank you",
    "start": "3140880",
    "end": "3145798"
  }
]