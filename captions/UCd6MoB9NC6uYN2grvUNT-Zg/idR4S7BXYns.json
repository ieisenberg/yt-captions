[
  {
    "start": "0",
    "end": "15000"
  },
  {
    "text": "[Music]",
    "start": "0",
    "end": "2810"
  },
  {
    "text": "hi my name is Nick nada I'm a",
    "start": "2810",
    "end": "5609"
  },
  {
    "text": "specialized solutions architect with",
    "start": "5609",
    "end": "7379"
  },
  {
    "text": "Microsoft platform team today I'll be",
    "start": "7379",
    "end": "9719"
  },
  {
    "text": "showing you how to develop a modern net",
    "start": "9719",
    "end": "12179"
  },
  {
    "text": "surveillance application let's get",
    "start": "12179",
    "end": "14370"
  },
  {
    "text": "started",
    "start": "14370",
    "end": "14990"
  },
  {
    "text": "we're gonna go through now the",
    "start": "14990",
    "end": "18230"
  },
  {
    "start": "15000",
    "end": "44000"
  },
  {
    "text": "serverless architecture the first part",
    "start": "18230",
    "end": "21180"
  },
  {
    "text": "I'm going to showing you a use case of",
    "start": "21180",
    "end": "22970"
  },
  {
    "text": "serverless architecture on AWS then I'm",
    "start": "22970",
    "end": "26820"
  },
  {
    "text": "going to show you a demo which is the",
    "start": "26820",
    "end": "29220"
  },
  {
    "text": "cloud flashcard application that I built",
    "start": "29220",
    "end": "31650"
  },
  {
    "text": "using the server's architecture and then",
    "start": "31650",
    "end": "34680"
  },
  {
    "text": "we're gonna go through the code and AWS",
    "start": "34680",
    "end": "38579"
  },
  {
    "text": "configuration services used in the cloud",
    "start": "38579",
    "end": "42360"
  },
  {
    "text": "flashcard so this is actually a one use",
    "start": "42360",
    "end": "47190"
  },
  {
    "start": "44000",
    "end": "224000"
  },
  {
    "text": "case of how to build serverless",
    "start": "47190",
    "end": "49170"
  },
  {
    "text": "architecture enable us the first thing",
    "start": "49170",
    "end": "51059"
  },
  {
    "text": "I'm going to talk about is the backend",
    "start": "51059",
    "end": "52800"
  },
  {
    "text": "so here is a one use case to build a",
    "start": "52800",
    "end": "57180"
  },
  {
    "text": "server less back-end",
    "start": "57180",
    "end": "58789"
  },
  {
    "text": "architecture in AWS as you can see the",
    "start": "58789",
    "end": "62399"
  },
  {
    "text": "entry point for this back-end or the",
    "start": "62399",
    "end": "64350"
  },
  {
    "text": "architecture is using Amazon API gateway",
    "start": "64350",
    "end": "67619"
  },
  {
    "text": "to receive calls from your client then",
    "start": "67619",
    "end": "71880"
  },
  {
    "text": "Amazon API gateway api's will be calling",
    "start": "71880",
    "end": "75590"
  },
  {
    "text": "AWS lambda functions to get the response",
    "start": "75590",
    "end": "79909"
  },
  {
    "text": "required the AWS lambda functions here",
    "start": "79909",
    "end": "83610"
  },
  {
    "text": "where you put the code to handle your",
    "start": "83610",
    "end": "85729"
  },
  {
    "text": "database calls other services like using",
    "start": "85729",
    "end": "90320"
  },
  {
    "text": "Amazon s3 or even using Amazon",
    "start": "90320",
    "end": "93450"
  },
  {
    "text": "ElastiCache to put some data in the",
    "start": "93450",
    "end": "95579"
  },
  {
    "text": "cache to avoid hitting Amazon DynamoDB",
    "start": "95579",
    "end": "98340"
  },
  {
    "text": "over and over because that's gonna cost",
    "start": "98340",
    "end": "100979"
  },
  {
    "text": "you more money and it's gonna make to",
    "start": "100979",
    "end": "103079"
  },
  {
    "text": "your application performance a little",
    "start": "103079",
    "end": "104549"
  },
  {
    "text": "bit now weak but not as fast as when you",
    "start": "104549",
    "end": "107610"
  },
  {
    "text": "using the Amazon ElastiCache for the",
    "start": "107610",
    "end": "110549"
  },
  {
    "text": "repeated data so instead of hitting the",
    "start": "110549",
    "end": "112799"
  },
  {
    "text": "database over and over you are actually",
    "start": "112799",
    "end": "115829"
  },
  {
    "text": "going to cache this data for certain",
    "start": "115829",
    "end": "117840"
  },
  {
    "text": "time and it will turn it back to the",
    "start": "117840",
    "end": "120689"
  },
  {
    "text": "call coming from Amazon API gateway to",
    "start": "120689",
    "end": "124860"
  },
  {
    "text": "make the performance better and save a",
    "start": "124860",
    "end": "128160"
  },
  {
    "text": "cost for your application",
    "start": "128160",
    "end": "130920"
  },
  {
    "text": "so here I'm showing you one client of",
    "start": "130920",
    "end": "134590"
  },
  {
    "text": "this architecture is could be a your",
    "start": "134590",
    "end": "137560"
  },
  {
    "text": "mobile client or you can build a mobile",
    "start": "137560",
    "end": "139900"
  },
  {
    "text": "application to call and consume your",
    "start": "139900",
    "end": "143490"
  },
  {
    "text": "back-end by calling the Amazon API",
    "start": "143490",
    "end": "146890"
  },
  {
    "text": "gateway APR that you built in the",
    "start": "146890",
    "end": "149290"
  },
  {
    "text": "backend",
    "start": "149290",
    "end": "151110"
  },
  {
    "text": "the second client could be a static",
    "start": "151110",
    "end": "154660"
  },
  {
    "text": "website hosted in Amazon s3 and",
    "start": "154660",
    "end": "157750"
  },
  {
    "text": "distributed using Amazon CloudFront so",
    "start": "157750",
    "end": "161200"
  },
  {
    "text": "that's just a simple static website",
    "start": "161200",
    "end": "164050"
  },
  {
    "text": "where you can call the your api's using",
    "start": "164050",
    "end": "168220"
  },
  {
    "text": "a Java Script and you're gonna get the",
    "start": "168220",
    "end": "170320"
  },
  {
    "text": "same response that you're getting from",
    "start": "170320",
    "end": "172360"
  },
  {
    "text": "the mobile client and from the third",
    "start": "172360",
    "end": "175330"
  },
  {
    "text": "case that I'm gonna show you later the",
    "start": "175330",
    "end": "177840"
  },
  {
    "text": "third case is when you build actually",
    "start": "177840",
    "end": "180490"
  },
  {
    "text": "web application in our case here I used",
    "start": "180490",
    "end": "183370"
  },
  {
    "text": "AWS sorry",
    "start": "183370",
    "end": "185350"
  },
  {
    "text": "a asp.net core to build a web",
    "start": "185350",
    "end": "189910"
  },
  {
    "text": "application to consume and call our",
    "start": "189910",
    "end": "192720"
  },
  {
    "text": "Amazon API gateway back-end to get the",
    "start": "192720",
    "end": "196570"
  },
  {
    "text": "data from s3 and dynamodb but mainly",
    "start": "196570",
    "end": "201760"
  },
  {
    "text": "this is the common use case to build",
    "start": "201760",
    "end": "206100"
  },
  {
    "text": "serverless architecture and I'm using",
    "start": "206100",
    "end": "208870"
  },
  {
    "text": "dotnet so this architecture is for",
    "start": "208870",
    "end": "211110"
  },
  {
    "text": "dotnet serverless dotnet solution to",
    "start": "211110",
    "end": "214510"
  },
  {
    "text": "show how you build server lists the",
    "start": "214510",
    "end": "217090"
  },
  {
    "text": "architecture using AWS and asp.net core",
    "start": "217090",
    "end": "221140"
  },
  {
    "text": "or dotnet core second thing here we're",
    "start": "221140",
    "end": "226180"
  },
  {
    "start": "224000",
    "end": "255000"
  },
  {
    "text": "gonna talk about and showing you a cloud",
    "start": "226180",
    "end": "228790"
  },
  {
    "text": "flashcard it's just a simple application",
    "start": "228790",
    "end": "230760"
  },
  {
    "text": "to manage flash cards so you have flash",
    "start": "230760",
    "end": "235870"
  },
  {
    "text": "cards a grouped into topics the user can",
    "start": "235870",
    "end": "239140"
  },
  {
    "text": "create topics and create flashcards",
    "start": "239140",
    "end": "241080"
  },
  {
    "text": "related to those topics but before start",
    "start": "241080",
    "end": "244780"
  },
  {
    "text": "using the application users need to sign",
    "start": "244780",
    "end": "247180"
  },
  {
    "text": "up and sign in",
    "start": "247180",
    "end": "249680"
  },
  {
    "text": "before you can start creating and you",
    "start": "249680",
    "end": "252319"
  },
  {
    "text": "know managing your flashcards so the",
    "start": "252319",
    "end": "256940"
  },
  {
    "start": "255000",
    "end": "320000"
  },
  {
    "text": "application is built using dotnet core",
    "start": "256940",
    "end": "260209"
  },
  {
    "text": "2.1 and i'm using AWS kognito to sign up",
    "start": "260209",
    "end": "265070"
  },
  {
    "text": "and sign in users and also using dynamo",
    "start": "265070",
    "end": "268669"
  },
  {
    "text": "DB to store the data mainly the topics",
    "start": "268669",
    "end": "271310"
  },
  {
    "text": "and flashcards and we're using AWS",
    "start": "271310",
    "end": "274190"
  },
  {
    "text": "lambda functions to create those you",
    "start": "274190",
    "end": "278840"
  },
  {
    "text": "know topics and flashcards and store",
    "start": "278840",
    "end": "281630"
  },
  {
    "text": "them in in in DynamoDB put them in the",
    "start": "281630",
    "end": "284860"
  },
  {
    "text": "elastic cache and also maybe get some",
    "start": "284860",
    "end": "288110"
  },
  {
    "text": "information from s3 if we are recording",
    "start": "288110",
    "end": "290740"
  },
  {
    "text": "flashcards by voice and we're using",
    "start": "290740",
    "end": "295160"
  },
  {
    "text": "Amazon API gateway api's to call the AWS",
    "start": "295160",
    "end": "299210"
  },
  {
    "text": "lambda function so mainly the clients",
    "start": "299210",
    "end": "301160"
  },
  {
    "text": "actually dealing only with your api's",
    "start": "301160",
    "end": "303770"
  },
  {
    "text": "hosted on Amazon API gateway so we have",
    "start": "303770",
    "end": "308449"
  },
  {
    "text": "here in this application two tables",
    "start": "308449",
    "end": "310400"
  },
  {
    "text": "topic and card in DynamoDB 6 lambda",
    "start": "310400",
    "end": "313250"
  },
  {
    "text": "functions 6 API gateways API and one",
    "start": "313250",
    "end": "317210"
  },
  {
    "text": "kognito user pool so here's the",
    "start": "317210",
    "end": "321909"
  },
  {
    "start": "320000",
    "end": "355000"
  },
  {
    "text": "architecture of the our demo cloud flash",
    "start": "321909",
    "end": "326449"
  },
  {
    "text": "card I have the browser calling asp.net",
    "start": "326449",
    "end": "329900"
  },
  {
    "text": "core hosted on ec2 instances I can make",
    "start": "329900",
    "end": "333919"
  },
  {
    "text": "this architecture highly scalable highly",
    "start": "333919",
    "end": "336229"
  },
  {
    "text": "available by putting on two different AZ",
    "start": "336229",
    "end": "338990"
  },
  {
    "text": "and using auto scaling group and elastic",
    "start": "338990",
    "end": "343849"
  },
  {
    "text": "load balancer calling the Amazon API",
    "start": "343849",
    "end": "347120"
  },
  {
    "text": "gateway and AWS lambda functions and",
    "start": "347120",
    "end": "350240"
  },
  {
    "text": "Amazon DynamoDB with the use of Amazon",
    "start": "350240",
    "end": "353810"
  },
  {
    "text": "ElastiCache ok I'm just gonna show you",
    "start": "353810",
    "end": "356840"
  },
  {
    "start": "355000",
    "end": "488000"
  },
  {
    "text": "now you know how the application works",
    "start": "356840",
    "end": "359900"
  },
  {
    "text": "so I put this in dev cloud Lashkar calm",
    "start": "359900",
    "end": "364669"
  },
  {
    "text": "as a demo I have this is the home page",
    "start": "364669",
    "end": "367190"
  },
  {
    "text": "of the application so I need first to",
    "start": "367190",
    "end": "369880"
  },
  {
    "text": "sign in I already signed up using my",
    "start": "369880",
    "end": "374530"
  },
  {
    "text": "Amazon email address",
    "start": "374530",
    "end": "378280"
  },
  {
    "text": "so here the page of my user so now I",
    "start": "379979",
    "end": "384580"
  },
  {
    "text": "sign in using you know AWS Cognito just",
    "start": "384580",
    "end": "389020"
  },
  {
    "text": "gonna go to dashboard here I'm gonna see",
    "start": "389020",
    "end": "392110"
  },
  {
    "text": "list of topics that I created so I have",
    "start": "392110",
    "end": "395979"
  },
  {
    "text": "here four topics I can create a new",
    "start": "395979",
    "end": "398349"
  },
  {
    "text": "topic by just going to this screen",
    "start": "398349",
    "end": "402930"
  },
  {
    "text": "I'm gonna call new topic tool and as I",
    "start": "402930",
    "end": "407199"
  },
  {
    "text": "said before this application is based on",
    "start": "407199",
    "end": "409779"
  },
  {
    "text": "asp.net core and actually calling the",
    "start": "409779",
    "end": "412839"
  },
  {
    "text": "Amazon API gateway api's so you see here",
    "start": "412839",
    "end": "416409"
  },
  {
    "text": "I have this topic if I want to go for",
    "start": "416409",
    "end": "419680"
  },
  {
    "text": "any topic and click on it I'm gonna go",
    "start": "419680",
    "end": "421930"
  },
  {
    "text": "to the screen where I can see the",
    "start": "421930",
    "end": "424539"
  },
  {
    "text": "properties of this topic like the create",
    "start": "424539",
    "end": "427479"
  },
  {
    "text": "date update date and I can check the",
    "start": "427479",
    "end": "430779"
  },
  {
    "text": "cards related to this topic so if I",
    "start": "430779",
    "end": "434139"
  },
  {
    "text": "click on the view cards you can take me",
    "start": "434139",
    "end": "436089"
  },
  {
    "text": "now to screen where I'm gonna be able to",
    "start": "436089",
    "end": "438909"
  },
  {
    "text": "see cards related to this topic",
    "start": "438909",
    "end": "441729"
  },
  {
    "text": "this topic has no cards so I can go to",
    "start": "441729",
    "end": "445289"
  },
  {
    "text": "lambda topic and here I see list of",
    "start": "445289",
    "end": "449710"
  },
  {
    "text": "cards I can create two new cards just to",
    "start": "449710",
    "end": "453939"
  },
  {
    "text": "put some information for the for the",
    "start": "453939",
    "end": "458080"
  },
  {
    "text": "demo and now I'm creating new card",
    "start": "458080",
    "end": "460419"
  },
  {
    "text": "related to this topic so if I go back",
    "start": "460419",
    "end": "463120"
  },
  {
    "text": "and check lambda and go to the view card",
    "start": "463120",
    "end": "466389"
  },
  {
    "text": "I'm gonna see this topic because the",
    "start": "466389",
    "end": "469029"
  },
  {
    "text": "this screen actually is gonna be sorting",
    "start": "469029",
    "end": "471009"
  },
  {
    "text": "topics the latest one is going to be the",
    "start": "471009",
    "end": "473889"
  },
  {
    "text": "first one short on the screen so this is",
    "start": "473889",
    "end": "477430"
  },
  {
    "text": "just a quick demo on how to use the",
    "start": "477430",
    "end": "479620"
  },
  {
    "text": "application now later I'm gonna show you",
    "start": "479620",
    "end": "481779"
  },
  {
    "text": "how I build this application using",
    "start": "481779",
    "end": "484029"
  },
  {
    "text": "visual studio and AWS services",
    "start": "484029",
    "end": "487888"
  },
  {
    "start": "488000",
    "end": "937000"
  },
  {
    "text": "so now just to show you how a business",
    "start": "488200",
    "end": "491270"
  },
  {
    "text": "application first we're gonna go to AWS",
    "start": "491270",
    "end": "493580"
  },
  {
    "text": "console and start you know showing you",
    "start": "493580",
    "end": "497060"
  },
  {
    "text": "all services that are part of this demo",
    "start": "497060",
    "end": "500600"
  },
  {
    "text": "so first I'm gonna go to kognito to show",
    "start": "500600",
    "end": "509030"
  },
  {
    "text": "you the user pool that I used to handle",
    "start": "509030",
    "end": "512990"
  },
  {
    "text": "the sign in sign up process just",
    "start": "512990",
    "end": "522740"
  },
  {
    "text": "different region so here cloud first",
    "start": "522740",
    "end": "525500"
  },
  {
    "text": "card this is the user pool where I have",
    "start": "525500",
    "end": "528530"
  },
  {
    "text": "the pool ID here and I have the",
    "start": "528530",
    "end": "531980"
  },
  {
    "text": "configuration this is one of the users",
    "start": "531980",
    "end": "534560"
  },
  {
    "text": "you know that I used before when I show",
    "start": "534560",
    "end": "537830"
  },
  {
    "text": "you demo so actually this is the user ID",
    "start": "537830",
    "end": "541690"
  },
  {
    "text": "using to connect the topics with the",
    "start": "541690",
    "end": "545600"
  },
  {
    "text": "user ID in DynamoDB table which we'll",
    "start": "545600",
    "end": "548540"
  },
  {
    "text": "see this later but this is just a simple",
    "start": "548540",
    "end": "551180"
  },
  {
    "text": "user pool where I can handle all the",
    "start": "551180",
    "end": "553730"
  },
  {
    "text": "authentication and the signup of this",
    "start": "553730",
    "end": "556190"
  },
  {
    "text": "application demo second thing we're",
    "start": "556190",
    "end": "559010"
  },
  {
    "text": "gonna go to",
    "start": "559010",
    "end": "561490"
  },
  {
    "text": "to the Amazon API gateway to show you",
    "start": "566830",
    "end": "573620"
  },
  {
    "text": "the interface of this application here",
    "start": "573620",
    "end": "576170"
  },
  {
    "text": "you can see cloud flashcard API and this",
    "start": "576170",
    "end": "584270"
  },
  {
    "text": "is the list of resources and each one",
    "start": "584270",
    "end": "587510"
  },
  {
    "text": "has its own method so I'm gonna go over",
    "start": "587510",
    "end": "590180"
  },
  {
    "text": "all of them just quickly so this the",
    "start": "590180",
    "end": "592970"
  },
  {
    "text": "first function is the first API used to",
    "start": "592970",
    "end": "596900"
  },
  {
    "text": "get the topics for the signed-in user so",
    "start": "596900",
    "end": "600770"
  },
  {
    "text": "I'm taking the user ID the one I showed",
    "start": "600770",
    "end": "603830"
  },
  {
    "text": "you before the user ID incognito to call",
    "start": "603830",
    "end": "608180"
  },
  {
    "text": "the this API so it's only I have only",
    "start": "608180",
    "end": "613970"
  },
  {
    "text": "here one get method that's gonna be",
    "start": "613970",
    "end": "616340"
  },
  {
    "text": "showing you the workflow of this method",
    "start": "616340",
    "end": "617930"
  },
  {
    "text": "where I have the request integration",
    "start": "617930",
    "end": "621320"
  },
  {
    "text": "request and this is the lambda function",
    "start": "621320",
    "end": "623270"
  },
  {
    "text": "connected or supporting this API and",
    "start": "623270",
    "end": "625580"
  },
  {
    "text": "then the response so if I click on the",
    "start": "625580",
    "end": "628490"
  },
  {
    "text": "method request I'm going to show you",
    "start": "628490",
    "end": "630530"
  },
  {
    "text": "here I'm using the user ID as a part of",
    "start": "630530",
    "end": "634790"
  },
  {
    "text": "the query string I need to use to pass",
    "start": "634790",
    "end": "637610"
  },
  {
    "text": "the user ID to this method and lit later",
    "start": "637610",
    "end": "642080"
  },
  {
    "text": "it's gonna be actually used by the AWS",
    "start": "642080",
    "end": "644600"
  },
  {
    "text": "lambda function same thing here for the",
    "start": "644600",
    "end": "647270"
  },
  {
    "text": "topic here I have two methods get and",
    "start": "647270",
    "end": "650030"
  },
  {
    "text": "post also if I go to the gate I'm gonna",
    "start": "650030",
    "end": "654440"
  },
  {
    "text": "see the same workflow but I have two e",
    "start": "654440",
    "end": "656510"
  },
  {
    "text": "requests I have here the integration in",
    "start": "656510",
    "end": "659300"
  },
  {
    "text": "this section actually where I'm",
    "start": "659300",
    "end": "661370"
  },
  {
    "text": "connecting this API with the lambda",
    "start": "661370",
    "end": "664610"
  },
  {
    "text": "function so as you can see in the screen",
    "start": "664610",
    "end": "666350"
  },
  {
    "text": "I selected the integration type as a",
    "start": "666350",
    "end": "669230"
  },
  {
    "text": "lambda function and here the lambda",
    "start": "669230",
    "end": "671570"
  },
  {
    "text": "function you know code that I'm gonna",
    "start": "671570",
    "end": "674030"
  },
  {
    "text": "need to use when this API is called same",
    "start": "674030",
    "end": "678890"
  },
  {
    "text": "thing for the rest so I have here four",
    "start": "678890",
    "end": "681290"
  },
  {
    "text": "resources the cards the topic cards",
    "start": "681290",
    "end": "683720"
  },
  {
    "text": "topics and user topics and I'm using get",
    "start": "683720",
    "end": "686930"
  },
  {
    "text": "post sometimes get in order to support",
    "start": "686930",
    "end": "689810"
  },
  {
    "text": "the api's but this is part of the API so",
    "start": "689810",
    "end": "693290"
  },
  {
    "text": "if you want to go and see the lambda",
    "start": "693290",
    "end": "695060"
  },
  {
    "text": "function",
    "start": "695060",
    "end": "697290"
  },
  {
    "text": "supported or supporting this API here's",
    "start": "697290",
    "end": "701980"
  },
  {
    "text": "the list of six lambda functions except",
    "start": "701980",
    "end": "705760"
  },
  {
    "text": "for this one that is used for something",
    "start": "705760",
    "end": "707800"
  },
  {
    "text": "else I have here six lambda function so",
    "start": "707800",
    "end": "711070"
  },
  {
    "text": "if I get this get topics per user this",
    "start": "711070",
    "end": "716980"
  },
  {
    "text": "Ashley lambda function is called by the",
    "start": "716980",
    "end": "719850"
  },
  {
    "text": "get user or user topics API here",
    "start": "719850",
    "end": "724930"
  },
  {
    "text": "actually I'm using the trigger as a API",
    "start": "724930",
    "end": "728590"
  },
  {
    "text": "gateway API and the information about",
    "start": "728590",
    "end": "732970"
  },
  {
    "text": "this lambda function later I'm going to",
    "start": "732970",
    "end": "735280"
  },
  {
    "text": "show you the code in Visual Studio how",
    "start": "735280",
    "end": "737080"
  },
  {
    "text": "we build this lambda function so here I",
    "start": "737080",
    "end": "740890"
  },
  {
    "text": "have the six lambda functions supporting",
    "start": "740890",
    "end": "745300"
  },
  {
    "text": "the six API used by your client so now",
    "start": "745300",
    "end": "752650"
  },
  {
    "text": "I'm just gonna go through DynamoDB to",
    "start": "752650",
    "end": "756700"
  },
  {
    "text": "list the tables that are supporting this",
    "start": "756700",
    "end": "759250"
  },
  {
    "text": "application here as I said before I have",
    "start": "759250",
    "end": "763150"
  },
  {
    "text": "two tables one for the topic one for the",
    "start": "763150",
    "end": "766180"
  },
  {
    "text": "card the topic is actually here I'm",
    "start": "766180",
    "end": "771520"
  },
  {
    "text": "using the user ID this user ID the same",
    "start": "771520",
    "end": "774220"
  },
  {
    "text": "one that I showed you before",
    "start": "774220",
    "end": "775660"
  },
  {
    "text": "that's the kognito user ID that's how",
    "start": "775660",
    "end": "778270"
  },
  {
    "text": "I'm connecting topics wood users so once",
    "start": "778270",
    "end": "781330"
  },
  {
    "text": "the user is signed in then the system",
    "start": "781330",
    "end": "784450"
  },
  {
    "text": "will take his user ID and use it to",
    "start": "784450",
    "end": "787480"
  },
  {
    "text": "store the topics and later the user the",
    "start": "787480",
    "end": "790270"
  },
  {
    "text": "topics ID used to group the flashcard so",
    "start": "790270",
    "end": "795070"
  },
  {
    "text": "this is the first table is showing user",
    "start": "795070",
    "end": "796810"
  },
  {
    "text": "ID and I have here the topic ID and the",
    "start": "796810",
    "end": "799780"
  },
  {
    "text": "name if I go to the cards actually the",
    "start": "799780",
    "end": "803020"
  },
  {
    "text": "cars are related to topic so I see here",
    "start": "803020",
    "end": "806950"
  },
  {
    "text": "the topic ID is connected with the card",
    "start": "806950",
    "end": "810850"
  },
  {
    "text": "ID and the content so indirectly the",
    "start": "810850",
    "end": "813790"
  },
  {
    "text": "flash cards or the cards here related to",
    "start": "813790",
    "end": "816490"
  },
  {
    "text": "a specific user may I have two tables to",
    "start": "816490",
    "end": "820120"
  },
  {
    "text": "support the application and those tables",
    "start": "820120",
    "end": "823690"
  },
  {
    "text": "actually managed by the AWS lambda",
    "start": "823690",
    "end": "826420"
  },
  {
    "text": "functions that I showed you",
    "start": "826420",
    "end": "827600"
  },
  {
    "text": "before same thing in lambda function is",
    "start": "827600",
    "end": "830269"
  },
  {
    "text": "it gonna be using elastic cash or any",
    "start": "830269",
    "end": "832730"
  },
  {
    "text": "other AWS service to add this to the",
    "start": "832730",
    "end": "836779"
  },
  {
    "text": "cash or maybe save files in s3 or maybe",
    "start": "836779",
    "end": "839930"
  },
  {
    "text": "call xq s queue to send message to",
    "start": "839930",
    "end": "844370"
  },
  {
    "text": "another system so mainly this is the",
    "start": "844370",
    "end": "847100"
  },
  {
    "text": "part of a device configuration of this",
    "start": "847100",
    "end": "849500"
  },
  {
    "text": "demo here's the list of all api's in the",
    "start": "849500",
    "end": "853160"
  },
  {
    "text": "Amazon API gateway screen but after I am",
    "start": "853160",
    "end": "857329"
  },
  {
    "text": "done with the api's I'm ready they are",
    "start": "857329",
    "end": "861110"
  },
  {
    "text": "all tested and down I need to deploy the",
    "start": "861110",
    "end": "865940"
  },
  {
    "text": "stage or deploy those functions to get",
    "start": "865940",
    "end": "868130"
  },
  {
    "text": "the URL that I'm going to be using by",
    "start": "868130",
    "end": "870680"
  },
  {
    "text": "the clients like mobile application or",
    "start": "870680",
    "end": "873079"
  },
  {
    "text": "asp.net core MVC client or the static",
    "start": "873079",
    "end": "877069"
  },
  {
    "text": "website using javascript so once I'm",
    "start": "877069",
    "end": "879500"
  },
  {
    "text": "done I can just select the top of the my",
    "start": "879500",
    "end": "883819"
  },
  {
    "text": "API and I go and I have I can just call",
    "start": "883819",
    "end": "887389"
  },
  {
    "text": "deploy API once I'm done here I'm just",
    "start": "887389",
    "end": "891410"
  },
  {
    "text": "gonna be able to see dip my deployment",
    "start": "891410",
    "end": "894199"
  },
  {
    "text": "so every time I'm changing anything in",
    "start": "894199",
    "end": "897019"
  },
  {
    "text": "the Amazon API gateway api's",
    "start": "897019",
    "end": "900610"
  },
  {
    "text": "configuration I'm adding new resources",
    "start": "900610",
    "end": "903470"
  },
  {
    "text": "I'm learning new methods I need to",
    "start": "903470",
    "end": "905930"
  },
  {
    "text": "create a new build or new stage and this",
    "start": "905930",
    "end": "909019"
  },
  {
    "text": "stage actually you can see here the",
    "start": "909019",
    "end": "911000"
  },
  {
    "text": "invoke URL that's the base URL de I'm",
    "start": "911000",
    "end": "914630"
  },
  {
    "text": "going to be using by my client one is",
    "start": "914630",
    "end": "918139"
  },
  {
    "text": "the asp.net called MVC application and",
    "start": "918139",
    "end": "921380"
  },
  {
    "text": "then when I'm using this URL",
    "start": "921380",
    "end": "923930"
  },
  {
    "text": "we're actually I'm going to be adding",
    "start": "923930",
    "end": "926560"
  },
  {
    "text": "resources here to that URL and the",
    "start": "926560",
    "end": "929899"
  },
  {
    "text": "required parameters around in order to",
    "start": "929899",
    "end": "932480"
  },
  {
    "text": "make a successful call to the API now",
    "start": "932480",
    "end": "937130"
  },
  {
    "start": "937000",
    "end": "1001000"
  },
  {
    "text": "open visual studio and I'm going to show",
    "start": "937130",
    "end": "939709"
  },
  {
    "text": "you the projects that I used to build",
    "start": "939709",
    "end": "942230"
  },
  {
    "text": "this solution okay you can see here more",
    "start": "942230",
    "end": "944870"
  },
  {
    "text": "project like five but mainly",
    "start": "944870",
    "end": "948290"
  },
  {
    "text": "new projects are used in this demo the",
    "start": "948290",
    "end": "951290"
  },
  {
    "text": "first one is the server list and the",
    "start": "951290",
    "end": "955399"
  },
  {
    "text": "second one is the web application so the",
    "start": "955399",
    "end": "959660"
  },
  {
    "text": "server list is the part that you know",
    "start": "959660",
    "end": "961850"
  },
  {
    "text": "covering the AWS lambda functions I have",
    "start": "961850",
    "end": "966050"
  },
  {
    "text": "here two files one two to support or to",
    "start": "966050",
    "end": "971720"
  },
  {
    "text": "build the topic functions and the second",
    "start": "971720",
    "end": "974360"
  },
  {
    "text": "one to support the flashcards functions",
    "start": "974360",
    "end": "977509"
  },
  {
    "text": "I'm going to start with the topic",
    "start": "977509",
    "end": "980569"
  },
  {
    "text": "function as we saw in the AWS lambda",
    "start": "980569",
    "end": "985459"
  },
  {
    "text": "function console I have six lambda",
    "start": "985459",
    "end": "988730"
  },
  {
    "text": "functions two three four topics and",
    "start": "988730",
    "end": "991639"
  },
  {
    "text": "three four flashcards so this source",
    "start": "991639",
    "end": "994819"
  },
  {
    "text": "code or this file contains the functions",
    "start": "994819",
    "end": "998269"
  },
  {
    "text": "related to topic as you can see the",
    "start": "998269",
    "end": "1002410"
  },
  {
    "start": "1001000",
    "end": "1097000"
  },
  {
    "text": "first one here actually I'm getting the",
    "start": "1002410",
    "end": "1004690"
  },
  {
    "text": "topics per user ID so I'm getting API",
    "start": "1004690",
    "end": "1008860"
  },
  {
    "text": "gateway proxy requests here I'm checking",
    "start": "1008860",
    "end": "1011380"
  },
  {
    "text": "the input so the user ID is a required",
    "start": "1011380",
    "end": "1015310"
  },
  {
    "text": "parameter to be as an input for this",
    "start": "1015310",
    "end": "1017800"
  },
  {
    "text": "method as I showed you before in the",
    "start": "1017800",
    "end": "1020860"
  },
  {
    "text": "console I'm looking for user ID as an",
    "start": "1020860",
    "end": "1023949"
  },
  {
    "text": "input and here in lambda function I'm",
    "start": "1023949",
    "end": "1026500"
  },
  {
    "text": "gonna check to see if the query strings",
    "start": "1026500",
    "end": "1029079"
  },
  {
    "text": "that contained this this parameter so",
    "start": "1029079",
    "end": "1032918"
  },
  {
    "text": "the user ID if it's not part of the",
    "start": "1032919",
    "end": "1036220"
  },
  {
    "text": "query string I'm gonna return that",
    "start": "1036220",
    "end": "1038650"
  },
  {
    "text": "request a message to the user",
    "start": "1038650",
    "end": "1040959"
  },
  {
    "text": "explaining that missing required",
    "start": "1040959",
    "end": "1043209"
  },
  {
    "text": "parameter and here and this variable and",
    "start": "1043209",
    "end": "1046030"
  },
  {
    "text": "putting what's the parameter and later",
    "start": "1046030",
    "end": "1048360"
  },
  {
    "text": "I'm actually calling lambda or actually",
    "start": "1048360",
    "end": "1053440"
  },
  {
    "text": "coming a DynamoDB using the dynamodb a",
    "start": "1053440",
    "end": "1056500"
  },
  {
    "text": "client where I can query the table which",
    "start": "1056500",
    "end": "1060340"
  },
  {
    "text": "is the topic table using the user ID in",
    "start": "1060340",
    "end": "1063309"
  },
  {
    "text": "order to get list of all topics related",
    "start": "1063309",
    "end": "1065950"
  },
  {
    "text": "to this to this user",
    "start": "1065950",
    "end": "1068650"
  },
  {
    "text": "the second method here is to get the",
    "start": "1068650",
    "end": "1072610"
  },
  {
    "text": "topic so in this case I'm actually",
    "start": "1072610",
    "end": "1074620"
  },
  {
    "text": "getting the information for specific",
    "start": "1074620",
    "end": "1076540"
  },
  {
    "text": "topic so I need the topic ID to be part",
    "start": "1076540",
    "end": "1081070"
  },
  {
    "text": "of the query string so same thing I'm",
    "start": "1081070",
    "end": "1085809"
  },
  {
    "text": "validating the input here to make sure",
    "start": "1085809",
    "end": "1088750"
  },
  {
    "text": "the topic ID is part of the input if not",
    "start": "1088750",
    "end": "1092110"
  },
  {
    "text": "then this request is bad and sending bad",
    "start": "1092110",
    "end": "1094660"
  },
  {
    "text": "request response second or next part is",
    "start": "1094660",
    "end": "1099550"
  },
  {
    "start": "1097000",
    "end": "1137000"
  },
  {
    "text": "actually I'm calling the dynamo DB using",
    "start": "1099550",
    "end": "1101860"
  },
  {
    "text": "DynamoDB client where i need to query",
    "start": "1101860",
    "end": "1104740"
  },
  {
    "text": "the table and get this specific topic",
    "start": "1104740",
    "end": "1107559"
  },
  {
    "text": "based on the topic ID return it back to",
    "start": "1107559",
    "end": "1111160"
  },
  {
    "text": "the caller which is the API gateway API",
    "start": "1111160",
    "end": "1114970"
  },
  {
    "text": "I'm using some logs here where I just",
    "start": "1114970",
    "end": "1119200"
  },
  {
    "text": "need to make sure when I'm debugging the",
    "start": "1119200",
    "end": "1121150"
  },
  {
    "text": "application before I start you know",
    "start": "1121150",
    "end": "1123910"
  },
  {
    "text": "testing the whole application I need to",
    "start": "1123910",
    "end": "1126370"
  },
  {
    "text": "make sure all the lambda functions are",
    "start": "1126370",
    "end": "1128350"
  },
  {
    "text": "working properly that's why I'm putting",
    "start": "1128350",
    "end": "1130300"
  },
  {
    "text": "some lines here where I need to just add",
    "start": "1130300",
    "end": "1132970"
  },
  {
    "text": "some logs while the function is actually",
    "start": "1132970",
    "end": "1135220"
  },
  {
    "text": "working the third method is to create",
    "start": "1135220",
    "end": "1140590"
  },
  {
    "start": "1137000",
    "end": "1197000"
  },
  {
    "text": "topic this is actually the post from the",
    "start": "1140590",
    "end": "1143820"
  },
  {
    "text": "API gateway API same thing I need here",
    "start": "1143820",
    "end": "1147880"
  },
  {
    "text": "to pass the user ID and you need to make",
    "start": "1147880",
    "end": "1152590"
  },
  {
    "text": "sure not only user ID passed as a",
    "start": "1152590",
    "end": "1155110"
  },
  {
    "text": "parameter I need to make sure that the",
    "start": "1155110",
    "end": "1157090"
  },
  {
    "text": "name of the topic also passed because",
    "start": "1157090",
    "end": "1159670"
  },
  {
    "text": "when I create a new topic",
    "start": "1159670",
    "end": "1161260"
  },
  {
    "text": "I need the user ID and I need the name",
    "start": "1161260",
    "end": "1163480"
  },
  {
    "text": "of this topic so here and in the screen",
    "start": "1163480",
    "end": "1166150"
  },
  {
    "text": "you see two validation happening here",
    "start": "1166150",
    "end": "1169120"
  },
  {
    "text": "two validations the first one is to",
    "start": "1169120",
    "end": "1171010"
  },
  {
    "text": "validate a user ID and the second one is",
    "start": "1171010",
    "end": "1175059"
  },
  {
    "text": "the topic name then once I'm done I can",
    "start": "1175059",
    "end": "1179260"
  },
  {
    "text": "just call the EDA DynamoDB client to",
    "start": "1179260",
    "end": "1182590"
  },
  {
    "text": "create a new item and database to using",
    "start": "1182590",
    "end": "1186309"
  },
  {
    "text": "the user ID and the topic name and I'm",
    "start": "1186309",
    "end": "1188770"
  },
  {
    "text": "creating the topic ID and other stuff",
    "start": "1188770",
    "end": "1191350"
  },
  {
    "text": "this is for the",
    "start": "1191350",
    "end": "1193490"
  },
  {
    "text": "functions used to support the topic",
    "start": "1193490",
    "end": "1195900"
  },
  {
    "text": "api's the same thing I can show you can",
    "start": "1195900",
    "end": "1199050"
  },
  {
    "start": "1197000",
    "end": "1274000"
  },
  {
    "text": "be used for the card so here the same",
    "start": "1199050",
    "end": "1202200"
  },
  {
    "text": "same idea just I'm doing something",
    "start": "1202200",
    "end": "1204780"
  },
  {
    "text": "different where I'm actually calling the",
    "start": "1204780",
    "end": "1207810"
  },
  {
    "text": "flashcard per topic so I'm gonna need",
    "start": "1207810",
    "end": "1210990"
  },
  {
    "text": "the topic ID same thing I'm doing the",
    "start": "1210990",
    "end": "1213810"
  },
  {
    "text": "validation calling DynamoDB getting the",
    "start": "1213810",
    "end": "1216390"
  },
  {
    "text": "response send it back the second one is",
    "start": "1216390",
    "end": "1218850"
  },
  {
    "text": "actually when I'm trying to check",
    "start": "1218850",
    "end": "1220860"
  },
  {
    "text": "specific flashcard so I need the",
    "start": "1220860",
    "end": "1223890"
  },
  {
    "text": "flashcard ID as an input and then I'm",
    "start": "1223890",
    "end": "1226890"
  },
  {
    "text": "gonna return back to the API the",
    "start": "1226890",
    "end": "1230120"
  },
  {
    "text": "flashcard information",
    "start": "1230120",
    "end": "1231930"
  },
  {
    "text": "the last method is when I create a new",
    "start": "1231930",
    "end": "1234510"
  },
  {
    "text": "flashcard here I need to validate the",
    "start": "1234510",
    "end": "1237660"
  },
  {
    "text": "same thing the input where I need the",
    "start": "1237660",
    "end": "1239250"
  },
  {
    "text": "topic ID because every flashcard is",
    "start": "1239250",
    "end": "1241920"
  },
  {
    "text": "related to specific topic and I need",
    "start": "1241920",
    "end": "1244590"
  },
  {
    "text": "also to make sure the user ID is passed",
    "start": "1244590",
    "end": "1247830"
  },
  {
    "text": "as part of the dynamodb design and I",
    "start": "1247830",
    "end": "1250800"
  },
  {
    "text": "need the content because if I'm creating",
    "start": "1250800",
    "end": "1253610"
  },
  {
    "text": "a flashcard without content then it",
    "start": "1253610",
    "end": "1256740"
  },
  {
    "text": "doesn't make sense I need to make sure",
    "start": "1256740",
    "end": "1258180"
  },
  {
    "text": "it's it's it's it's contact is ready the",
    "start": "1258180",
    "end": "1262650"
  },
  {
    "text": "user ID and the topic ID so mainly those",
    "start": "1262650",
    "end": "1266460"
  },
  {
    "text": "two files contain all the AWS lambda",
    "start": "1266460",
    "end": "1270270"
  },
  {
    "text": "functions that I'm using to support the",
    "start": "1270270",
    "end": "1272370"
  },
  {
    "text": "backend of this application here I can",
    "start": "1272370",
    "end": "1275970"
  },
  {
    "text": "just you know write the click and",
    "start": "1275970",
    "end": "1278570"
  },
  {
    "text": "publish for the first time or every time",
    "start": "1278570",
    "end": "1282000"
  },
  {
    "text": "I change my code publish those methods",
    "start": "1282000",
    "end": "1284550"
  },
  {
    "text": "or functions to ALW Standa so every time",
    "start": "1284550",
    "end": "1287520"
  },
  {
    "text": "I update the code I need to repeat this",
    "start": "1287520",
    "end": "1289980"
  },
  {
    "text": "just to make sure I'm putting in AWS",
    "start": "1289980",
    "end": "1292920"
  },
  {
    "text": "lambda the latest version in this",
    "start": "1292920",
    "end": "1295860"
  },
  {
    "text": "application there is a file here I'm",
    "start": "1295860",
    "end": "1299460"
  },
  {
    "text": "using to create the",
    "start": "1299460",
    "end": "1302390"
  },
  {
    "text": "lambda functions which is that a cloud",
    "start": "1302390",
    "end": "1306360"
  },
  {
    "start": "1305000",
    "end": "1339000"
  },
  {
    "text": "formation template",
    "start": "1306360",
    "end": "1308330"
  },
  {
    "text": "the system will gainer is going to be",
    "start": "1308330",
    "end": "1310920"
  },
  {
    "text": "using this template file to create the",
    "start": "1310920",
    "end": "1313500"
  },
  {
    "text": "first time or every time you update your",
    "start": "1313500",
    "end": "1316020"
  },
  {
    "text": "code to create an update lambda",
    "start": "1316020",
    "end": "1318330"
  },
  {
    "text": "functions in AWS thumbtack so mainly",
    "start": "1318330",
    "end": "1321300"
  },
  {
    "text": "this is the code for the AWS lambda",
    "start": "1321300",
    "end": "1326100"
  },
  {
    "text": "functions supporting the back end of the",
    "start": "1326100",
    "end": "1328620"
  },
  {
    "text": "system now I'm going to show you the",
    "start": "1328620",
    "end": "1332070"
  },
  {
    "text": "code related to the asp.net call MVC",
    "start": "1332070",
    "end": "1337290"
  },
  {
    "text": "application so if we go now here",
    "start": "1337290",
    "end": "1342990"
  },
  {
    "start": "1339000",
    "end": "1373000"
  },
  {
    "text": "actually I'm just calling the Amazon API",
    "start": "1342990",
    "end": "1347310"
  },
  {
    "text": "gateway api's is like I'm calling any",
    "start": "1347310",
    "end": "1349650"
  },
  {
    "text": "other restful or any other web api's I",
    "start": "1349650",
    "end": "1352800"
  },
  {
    "text": "have here code to handle this but first",
    "start": "1352800",
    "end": "1356700"
  },
  {
    "text": "I need to make sure then I'm calling the",
    "start": "1356700",
    "end": "1360090"
  },
  {
    "text": "kognito to sign in the user before I can",
    "start": "1360090",
    "end": "1363630"
  },
  {
    "text": "show the data related to this user the",
    "start": "1363630",
    "end": "1367140"
  },
  {
    "text": "first of all I need to show you the sign",
    "start": "1367140",
    "end": "1369810"
  },
  {
    "text": "in controller sign controller here is",
    "start": "1369810",
    "end": "1372150"
  },
  {
    "text": "just you know calling a service that I",
    "start": "1372150",
    "end": "1375090"
  },
  {
    "start": "1373000",
    "end": "1399000"
  },
  {
    "text": "built within this application or this",
    "start": "1375090",
    "end": "1377340"
  },
  {
    "text": "project to deal with kognito so I'm",
    "start": "1377340",
    "end": "1380400"
  },
  {
    "text": "receiving the email and password and",
    "start": "1380400",
    "end": "1382860"
  },
  {
    "text": "then I'm calling the Cognito service as",
    "start": "1382860",
    "end": "1387540"
  },
  {
    "text": "part of my asp.net core application this",
    "start": "1387540",
    "end": "1391050"
  },
  {
    "text": "cognitive service is used to handle any",
    "start": "1391050",
    "end": "1394980"
  },
  {
    "text": "work with Cognito one of them is to get",
    "start": "1394980",
    "end": "1399600"
  },
  {
    "start": "1399000",
    "end": "1423000"
  },
  {
    "text": "the user or validate the user so I'm",
    "start": "1399600",
    "end": "1402929"
  },
  {
    "text": "gonna send a user email and password and",
    "start": "1402929",
    "end": "1407330"
  },
  {
    "text": "make sure this user is already part of",
    "start": "1407330",
    "end": "1410789"
  },
  {
    "text": "the system and authenticated properly",
    "start": "1410789",
    "end": "1412770"
  },
  {
    "text": "before I move to the authenticated",
    "start": "1412770",
    "end": "1416070"
  },
  {
    "text": "controllers where I need to start",
    "start": "1416070",
    "end": "1418169"
  },
  {
    "text": "showing the topics and flashcard",
    "start": "1418169",
    "end": "1420120"
  },
  {
    "text": "generated related to this user so the",
    "start": "1420120",
    "end": "1424650"
  },
  {
    "start": "1423000",
    "end": "1454000"
  },
  {
    "text": "main controller here is the one related",
    "start": "1424650",
    "end": "1429510"
  },
  {
    "text": "to dashboard here where I actually put",
    "start": "1429510",
    "end": "1433140"
  },
  {
    "text": "the first screen that I showed you",
    "start": "1433140",
    "end": "1435630"
  },
  {
    "text": "before list of all topics for the user",
    "start": "1435630",
    "end": "1438630"
  },
  {
    "text": "so this is I have it the gate topics",
    "start": "1438630",
    "end": "1441450"
  },
  {
    "text": "list as you can see on the screen if I",
    "start": "1441450",
    "end": "1444299"
  },
  {
    "text": "go to data service using to handle and",
    "start": "1444299",
    "end": "1449280"
  },
  {
    "text": "manage the API gateway so this is",
    "start": "1449280",
    "end": "1455880"
  },
  {
    "text": "actually the gate topic list I'm getting",
    "start": "1455880",
    "end": "1459510"
  },
  {
    "text": "user ID as an input and then I'm calling",
    "start": "1459510",
    "end": "1464210"
  },
  {
    "text": "the Amazon API gateway and then I'm",
    "start": "1464210",
    "end": "1470220"
  },
  {
    "text": "sending user ID with the specific",
    "start": "1470220",
    "end": "1472559"
  },
  {
    "text": "resource which is the user of topics as",
    "start": "1472559",
    "end": "1474480"
  },
  {
    "text": "I showed you before I'm giving this user",
    "start": "1474480",
    "end": "1477840"
  },
  {
    "text": "ID as an input and if the operation or",
    "start": "1477840",
    "end": "1482789"
  },
  {
    "text": "the call is you know successfully done",
    "start": "1482789",
    "end": "1487049"
  },
  {
    "text": "I'm gonna receive the information and",
    "start": "1487049",
    "end": "1489480"
  },
  {
    "text": "data try it now to dis arise the object",
    "start": "1489480",
    "end": "1492390"
  },
  {
    "text": "to get list of topics and then once the",
    "start": "1492390",
    "end": "1495179"
  },
  {
    "text": "topics ready I'm gonna you know send it",
    "start": "1495179",
    "end": "1499080"
  },
  {
    "text": "to my view where I can you know see the",
    "start": "1499080",
    "end": "1503549"
  },
  {
    "text": "list of topics related to the user",
    "start": "1503549",
    "end": "1506240"
  },
  {
    "text": "joining now the view we go to dashboard",
    "start": "1506240",
    "end": "1513770"
  },
  {
    "text": "I'm going to the view so here where you",
    "start": "1514620",
    "end": "1520900"
  },
  {
    "start": "1518000",
    "end": "1592000"
  },
  {
    "text": "see the first time after you log in the",
    "start": "1520900",
    "end": "1522790"
  },
  {
    "text": "dashboard is list of all topics related",
    "start": "1522790",
    "end": "1525430"
  },
  {
    "text": "to this user",
    "start": "1525430",
    "end": "1526170"
  },
  {
    "text": "of course here all the methods or the",
    "start": "1526170",
    "end": "1530220"
  },
  {
    "text": "actions related to dashboard controller",
    "start": "1530220",
    "end": "1533940"
  },
  {
    "text": "are represented by views as part of the",
    "start": "1533940",
    "end": "1537790"
  },
  {
    "text": "project here dashboard you see here a",
    "start": "1537790",
    "end": "1543940"
  },
  {
    "text": "list of all views this is where I see",
    "start": "1543940",
    "end": "1545800"
  },
  {
    "text": "the view called a new topic and you",
    "start": "1545800",
    "end": "1548710"
  },
  {
    "text": "called a edit topic and also cards by",
    "start": "1548710",
    "end": "1552370"
  },
  {
    "text": "topic so mainly this is the presentation",
    "start": "1552370",
    "end": "1556540"
  },
  {
    "text": "layer of this demo it just based on",
    "start": "1556540",
    "end": "1558640"
  },
  {
    "text": "asp.net core 2.1 what I'm calling the",
    "start": "1558640",
    "end": "1562560"
  },
  {
    "text": "Amazon API gateway API to retrieve data",
    "start": "1562560",
    "end": "1565870"
  },
  {
    "text": "and display it and also I'm using",
    "start": "1565870",
    "end": "1569460"
  },
  {
    "text": "Cognito to sign in user to make sure the",
    "start": "1569460",
    "end": "1573280"
  },
  {
    "text": "user is already authenticated before",
    "start": "1573280",
    "end": "1575170"
  },
  {
    "text": "start calling secured API related to",
    "start": "1575170",
    "end": "1578020"
  },
  {
    "text": "this application so in this video you",
    "start": "1578020",
    "end": "1581290"
  },
  {
    "text": "learned how to develop a modern dotnet",
    "start": "1581290",
    "end": "1583540"
  },
  {
    "text": "surveillance application I hope you can",
    "start": "1583540",
    "end": "1586090"
  },
  {
    "text": "take advantage of it and thank you for",
    "start": "1586090",
    "end": "1588460"
  },
  {
    "text": "watching",
    "start": "1588460",
    "end": "1589310"
  },
  {
    "text": "[Music]",
    "start": "1589310",
    "end": "1593900"
  }
]