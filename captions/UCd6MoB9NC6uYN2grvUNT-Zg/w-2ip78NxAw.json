[
  {
    "text": "hello everyone my name is adik samanth i",
    "start": "719",
    "end": "3040"
  },
  {
    "text": "am a database specialist solutions",
    "start": "3040",
    "end": "4560"
  },
  {
    "text": "architect here at aws",
    "start": "4560",
    "end": "6480"
  },
  {
    "text": "today we are going to continue our",
    "start": "6480",
    "end": "8000"
  },
  {
    "text": "conversation on amazon aurora",
    "start": "8000",
    "end": "10400"
  },
  {
    "text": "and its integration with our machine",
    "start": "10400",
    "end": "12639"
  },
  {
    "text": "learning services",
    "start": "12639",
    "end": "14160"
  },
  {
    "text": "in the previous video we talked about",
    "start": "14160",
    "end": "16000"
  },
  {
    "text": "amazon aura's integration",
    "start": "16000",
    "end": "17680"
  },
  {
    "text": "with comprehend today we're going to",
    "start": "17680",
    "end": "20000"
  },
  {
    "text": "continue on that thread",
    "start": "20000",
    "end": "21520"
  },
  {
    "text": "and we are going to talk about amazon",
    "start": "21520",
    "end": "23439"
  },
  {
    "text": "aurora's integration",
    "start": "23439",
    "end": "24800"
  },
  {
    "text": "with amazon sagemaker okay so let's get",
    "start": "24800",
    "end": "27920"
  },
  {
    "text": "started",
    "start": "27920",
    "end": "28640"
  },
  {
    "text": "as part of today's agenda we will talk",
    "start": "28640",
    "end": "30720"
  },
  {
    "text": "about aurora machine learning",
    "start": "30720",
    "end": "32480"
  },
  {
    "text": "and do a quick overview of amazon",
    "start": "32480",
    "end": "34640"
  },
  {
    "text": "sagemaker",
    "start": "34640",
    "end": "36239"
  },
  {
    "text": "we will talk about some of the",
    "start": "36239",
    "end": "37440"
  },
  {
    "text": "development challenges and how we can",
    "start": "37440",
    "end": "39120"
  },
  {
    "text": "solve",
    "start": "39120",
    "end": "39520"
  },
  {
    "text": "with the amazon aurora integration with",
    "start": "39520",
    "end": "42079"
  },
  {
    "text": "the machine learning services and",
    "start": "42079",
    "end": "44160"
  },
  {
    "text": "towards the end we'll do a quick demo",
    "start": "44160",
    "end": "46160"
  },
  {
    "text": "using this integration and with the",
    "start": "46160",
    "end": "48160"
  },
  {
    "text": "churn analysis",
    "start": "48160",
    "end": "50960"
  },
  {
    "text": "let's spend a couple of minutes talking",
    "start": "51199",
    "end": "52480"
  },
  {
    "text": "about amazon aura amazon aura is a",
    "start": "52480",
    "end": "55280"
  },
  {
    "text": "database built for the cloud",
    "start": "55280",
    "end": "57199"
  },
  {
    "text": "it is delivered as a managed service and",
    "start": "57199",
    "end": "59440"
  },
  {
    "text": "it comes with",
    "start": "59440",
    "end": "60480"
  },
  {
    "text": "two compatible engines either mysql or",
    "start": "60480",
    "end": "63199"
  },
  {
    "text": "postgresql",
    "start": "63199",
    "end": "65198"
  },
  {
    "text": "it brings you the simplicity and cost",
    "start": "65199",
    "end": "67040"
  },
  {
    "text": "effectiveness of the open source world",
    "start": "67040",
    "end": "68960"
  },
  {
    "text": "which means there is no licensing cost",
    "start": "68960",
    "end": "71600"
  },
  {
    "text": "and it gives you the throughput and",
    "start": "71600",
    "end": "72960"
  },
  {
    "text": "availability",
    "start": "72960",
    "end": "74000"
  },
  {
    "text": "of the commercial database engines all",
    "start": "74000",
    "end": "76479"
  },
  {
    "text": "of this",
    "start": "76479",
    "end": "77040"
  },
  {
    "text": "comes with the promise of aws of simple",
    "start": "77040",
    "end": "80000"
  },
  {
    "text": "and pay-as-you-go pricing",
    "start": "80000",
    "end": "83200"
  },
  {
    "text": "let's take a look at aws machine",
    "start": "83360",
    "end": "85520"
  },
  {
    "text": "learning stack aws machine learning",
    "start": "85520",
    "end": "87439"
  },
  {
    "text": "stack is pretty broad and deep",
    "start": "87439",
    "end": "89680"
  },
  {
    "text": "it has three layers of services the top",
    "start": "89680",
    "end": "92960"
  },
  {
    "text": "layer",
    "start": "92960",
    "end": "93360"
  },
  {
    "text": "is our ai services services like amazon",
    "start": "93360",
    "end": "95759"
  },
  {
    "text": "recognition",
    "start": "95759",
    "end": "96560"
  },
  {
    "text": "or poly are comprehend these services",
    "start": "96560",
    "end": "99280"
  },
  {
    "text": "are usually",
    "start": "99280",
    "end": "100400"
  },
  {
    "text": "an api endpoint you don't have to learn",
    "start": "100400",
    "end": "103680"
  },
  {
    "text": "machine learning or you don't have to",
    "start": "103680",
    "end": "104960"
  },
  {
    "text": "train the data you simply just consume",
    "start": "104960",
    "end": "107280"
  },
  {
    "text": "the service as an api endpoint the",
    "start": "107280",
    "end": "109759"
  },
  {
    "text": "second layer is amazon sagemaker",
    "start": "109759",
    "end": "112000"
  },
  {
    "text": "and it's companion applications like the",
    "start": "112000",
    "end": "114000"
  },
  {
    "text": "studio ide",
    "start": "114000",
    "end": "115200"
  },
  {
    "text": "neo marketplace and more and towards the",
    "start": "115200",
    "end": "118399"
  },
  {
    "text": "end we have our machine learning",
    "start": "118399",
    "end": "119840"
  },
  {
    "text": "frameworks and infrastructure",
    "start": "119840",
    "end": "121680"
  },
  {
    "text": "that is bundled with our ec2 and our",
    "start": "121680",
    "end": "125200"
  },
  {
    "text": "container services",
    "start": "125200",
    "end": "127040"
  },
  {
    "text": "today we're going to talk about the",
    "start": "127040",
    "end": "129360"
  },
  {
    "text": "second layer",
    "start": "129360",
    "end": "130239"
  },
  {
    "text": "which is amazon sagemaker",
    "start": "130239",
    "end": "133760"
  },
  {
    "text": "let's take a look at some of the issues",
    "start": "134319",
    "end": "136080"
  },
  {
    "text": "that we face",
    "start": "136080",
    "end": "137599"
  },
  {
    "text": "when we try to build a machine learning",
    "start": "137599",
    "end": "139440"
  },
  {
    "text": "application where we're trying to take",
    "start": "139440",
    "end": "141520"
  },
  {
    "text": "advantage",
    "start": "141520",
    "end": "142160"
  },
  {
    "text": "of our relational database data and",
    "start": "142160",
    "end": "144319"
  },
  {
    "text": "we're trying to enrich it",
    "start": "144319",
    "end": "145520"
  },
  {
    "text": "and derive insights from it usually it's",
    "start": "145520",
    "end": "148000"
  },
  {
    "text": "a six step process",
    "start": "148000",
    "end": "149120"
  },
  {
    "text": "step number one is to select and train",
    "start": "149120",
    "end": "151040"
  },
  {
    "text": "the machine learning model",
    "start": "151040",
    "end": "152319"
  },
  {
    "text": "step number two is to write an",
    "start": "152319",
    "end": "154080"
  },
  {
    "text": "application code to read the data",
    "start": "154080",
    "end": "156400"
  },
  {
    "text": "from the database step number three is",
    "start": "156400",
    "end": "159200"
  },
  {
    "text": "to format the data to fit the machine",
    "start": "159200",
    "end": "160959"
  },
  {
    "text": "learning model",
    "start": "160959",
    "end": "162239"
  },
  {
    "text": "step number four is to now call the",
    "start": "162239",
    "end": "164319"
  },
  {
    "text": "machine learning service",
    "start": "164319",
    "end": "165920"
  },
  {
    "text": "and then use this data and run through",
    "start": "165920",
    "end": "167680"
  },
  {
    "text": "that machine learning model",
    "start": "167680",
    "end": "169200"
  },
  {
    "text": "step number five is to again format that",
    "start": "169200",
    "end": "171360"
  },
  {
    "text": "data so that the application can",
    "start": "171360",
    "end": "173200"
  },
  {
    "text": "actually consume it",
    "start": "173200",
    "end": "174319"
  },
  {
    "text": "and then final step is to load the",
    "start": "174319",
    "end": "176080"
  },
  {
    "text": "results to the application",
    "start": "176080",
    "end": "179040"
  },
  {
    "text": "because this integration is so",
    "start": "179040",
    "end": "180560"
  },
  {
    "text": "complicated what usually ends up",
    "start": "180560",
    "end": "182640"
  },
  {
    "text": "happening",
    "start": "182640",
    "end": "183519"
  },
  {
    "text": "is a data scientist or a developer",
    "start": "183519",
    "end": "186080"
  },
  {
    "text": "usually",
    "start": "186080",
    "end": "187440"
  },
  {
    "text": "takes a data source like a relational",
    "start": "187440",
    "end": "189040"
  },
  {
    "text": "database downloads that in a csv format",
    "start": "189040",
    "end": "192159"
  },
  {
    "text": "or some other format then puts it on",
    "start": "192159",
    "end": "194400"
  },
  {
    "text": "their database",
    "start": "194400",
    "end": "195440"
  },
  {
    "text": "or puts it on their laptop or",
    "start": "195440",
    "end": "197360"
  },
  {
    "text": "workstation",
    "start": "197360",
    "end": "198879"
  },
  {
    "text": "and then runs it offline through the",
    "start": "198879",
    "end": "201440"
  },
  {
    "text": "machine learning model",
    "start": "201440",
    "end": "202640"
  },
  {
    "text": "then takes that enriched data and the",
    "start": "202640",
    "end": "204480"
  },
  {
    "text": "predictions and then loads it back into",
    "start": "204480",
    "end": "206159"
  },
  {
    "text": "the application",
    "start": "206159",
    "end": "207599"
  },
  {
    "text": "so the challenge we're trying to solve",
    "start": "207599",
    "end": "210239"
  },
  {
    "text": "or the goal",
    "start": "210239",
    "end": "211120"
  },
  {
    "text": "here is to take this offline model and",
    "start": "211120",
    "end": "213840"
  },
  {
    "text": "bring it online",
    "start": "213840",
    "end": "216720"
  },
  {
    "text": "so how do we solve this challenge with",
    "start": "219120",
    "end": "220720"
  },
  {
    "text": "amazon aura amazon aura machine learning",
    "start": "220720",
    "end": "223360"
  },
  {
    "text": "integration is simple",
    "start": "223360",
    "end": "224640"
  },
  {
    "text": "optimized and secure and it connects",
    "start": "224640",
    "end": "227120"
  },
  {
    "text": "amazon aura",
    "start": "227120",
    "end": "228159"
  },
  {
    "text": "with two of our machine learning stack",
    "start": "228159",
    "end": "230319"
  },
  {
    "text": "services which is amazon save maker and",
    "start": "230319",
    "end": "232640"
  },
  {
    "text": "amazon",
    "start": "232640",
    "end": "233280"
  },
  {
    "text": "comprehend this integration lets you do",
    "start": "233280",
    "end": "236480"
  },
  {
    "text": "machine learning predictions",
    "start": "236480",
    "end": "237920"
  },
  {
    "text": "on relational data it helps you enrich",
    "start": "237920",
    "end": "239840"
  },
  {
    "text": "it it helps you derive insights from it",
    "start": "239840",
    "end": "242400"
  },
  {
    "text": "and you can do it using your familiar",
    "start": "242400",
    "end": "244480"
  },
  {
    "text": "sql languages",
    "start": "244480",
    "end": "245760"
  },
  {
    "text": "so you don't have to learn new languages",
    "start": "245760",
    "end": "247920"
  },
  {
    "text": "like python or r",
    "start": "247920",
    "end": "249840"
  },
  {
    "text": "this is done in a very low latency",
    "start": "249840",
    "end": "253040"
  },
  {
    "text": "almost immediate way um so the",
    "start": "253040",
    "end": "256560"
  },
  {
    "text": "the latency um or the amount of time it",
    "start": "256560",
    "end": "259600"
  },
  {
    "text": "takes for",
    "start": "259600",
    "end": "260239"
  },
  {
    "text": "for you to get the results back uh from",
    "start": "260239",
    "end": "262479"
  },
  {
    "text": "your machine learning stack",
    "start": "262479",
    "end": "264080"
  },
  {
    "text": "um is going to be uh very low usually in",
    "start": "264080",
    "end": "266880"
  },
  {
    "text": "milliseconds",
    "start": "266880",
    "end": "268800"
  },
  {
    "text": "um this integration is part of",
    "start": "268800",
    "end": "272000"
  },
  {
    "text": "your familiar aws secure environment",
    "start": "272000",
    "end": "275280"
  },
  {
    "text": "so you can take advantage of your you",
    "start": "275280",
    "end": "278080"
  },
  {
    "text": "know governance and compliance rules",
    "start": "278080",
    "end": "279840"
  },
  {
    "text": "that you",
    "start": "279840",
    "end": "280479"
  },
  {
    "text": "that you utilize for your regular",
    "start": "280479",
    "end": "283280"
  },
  {
    "text": "operation with aws",
    "start": "283280",
    "end": "286479"
  },
  {
    "text": "so this amazon integration",
    "start": "287520",
    "end": "290720"
  },
  {
    "text": "between aurora and machine learning",
    "start": "290720",
    "end": "293600"
  },
  {
    "text": "takes",
    "start": "293600",
    "end": "294080"
  },
  {
    "text": "the six step approach that we talked",
    "start": "294080",
    "end": "296160"
  },
  {
    "text": "about before",
    "start": "296160",
    "end": "297840"
  },
  {
    "text": "to three steps where now you just",
    "start": "297840",
    "end": "300960"
  },
  {
    "text": "select a machine learning model using",
    "start": "300960",
    "end": "302880"
  },
  {
    "text": "sagemaker",
    "start": "302880",
    "end": "304000"
  },
  {
    "text": "you run a sql query to invoke a machine",
    "start": "304000",
    "end": "306320"
  },
  {
    "text": "learning service",
    "start": "306320",
    "end": "307840"
  },
  {
    "text": "and then you just use the results in the",
    "start": "307840",
    "end": "310000"
  },
  {
    "text": "application",
    "start": "310000",
    "end": "310960"
  },
  {
    "text": "it becomes really really simple",
    "start": "310960",
    "end": "314400"
  },
  {
    "text": "so here are a couple of examples",
    "start": "315520",
    "end": "318800"
  },
  {
    "text": "the first example is to find suspected",
    "start": "318800",
    "end": "321759"
  },
  {
    "text": "fraudulent transactions",
    "start": "321759",
    "end": "324240"
  },
  {
    "text": "so if you imagine that you have a",
    "start": "324240",
    "end": "326160"
  },
  {
    "text": "banking application",
    "start": "326160",
    "end": "327440"
  },
  {
    "text": "and a banking application you're",
    "start": "327440",
    "end": "328960"
  },
  {
    "text": "inserting",
    "start": "328960",
    "end": "330479"
  },
  {
    "text": "a transaction into a table",
    "start": "330479",
    "end": "333919"
  },
  {
    "text": "what you can do is you can create an a",
    "start": "333919",
    "end": "336560"
  },
  {
    "text": "trigger",
    "start": "336560",
    "end": "337759"
  },
  {
    "text": "and this trigger basically sends the",
    "start": "337759",
    "end": "340800"
  },
  {
    "text": "data that's being inserted back to the",
    "start": "340800",
    "end": "343520"
  },
  {
    "text": "machine learning service",
    "start": "343520",
    "end": "344720"
  },
  {
    "text": "let's say you have a model that can",
    "start": "344720",
    "end": "346639"
  },
  {
    "text": "actually look at this data",
    "start": "346639",
    "end": "347919"
  },
  {
    "text": "and make a prediction whether this is a",
    "start": "347919",
    "end": "349759"
  },
  {
    "text": "fraudulent transaction or not",
    "start": "349759",
    "end": "352560"
  },
  {
    "text": "and if it's if it is a fraudulent",
    "start": "352560",
    "end": "354240"
  },
  {
    "text": "transaction based on machine learning",
    "start": "354240",
    "end": "355759"
  },
  {
    "text": "prediction",
    "start": "355759",
    "end": "356479"
  },
  {
    "text": "then you don't insert it into table or",
    "start": "356479",
    "end": "358160"
  },
  {
    "text": "you just keep it aside",
    "start": "358160",
    "end": "359520"
  },
  {
    "text": "for for processing later another example",
    "start": "359520",
    "end": "363840"
  },
  {
    "text": "is prioritizing customers based",
    "start": "363840",
    "end": "367199"
  },
  {
    "text": "on their predicted future spend again",
    "start": "367199",
    "end": "370800"
  },
  {
    "text": "here's also another banking example",
    "start": "370800",
    "end": "374000"
  },
  {
    "text": "where you have an application and you",
    "start": "374000",
    "end": "376639"
  },
  {
    "text": "can",
    "start": "376639",
    "end": "377120"
  },
  {
    "text": "figure out if based on current spending",
    "start": "377120",
    "end": "380319"
  },
  {
    "text": "of a customer if they are going to be a",
    "start": "380319",
    "end": "382880"
  },
  {
    "text": "good fit",
    "start": "382880",
    "end": "383840"
  },
  {
    "text": "for a certain type of promotion or not",
    "start": "383840",
    "end": "386319"
  },
  {
    "text": "again you basically take that data",
    "start": "386319",
    "end": "388560"
  },
  {
    "text": "that is in your relational database you",
    "start": "388560",
    "end": "390560"
  },
  {
    "text": "send it to",
    "start": "390560",
    "end": "391919"
  },
  {
    "text": "the machine learning model and you get",
    "start": "391919",
    "end": "394080"
  },
  {
    "text": "the prediction and then you can",
    "start": "394080",
    "end": "395280"
  },
  {
    "text": "prioritize these customers",
    "start": "395280",
    "end": "396720"
  },
  {
    "text": "based on the prediction so that brings",
    "start": "396720",
    "end": "400400"
  },
  {
    "text": "us to demos",
    "start": "400400",
    "end": "402240"
  },
  {
    "text": "so today's demo we are going to",
    "start": "402240",
    "end": "405280"
  },
  {
    "text": "basically see a customer churn example",
    "start": "405280",
    "end": "409039"
  },
  {
    "text": "and we're going to use amazon sagemaker",
    "start": "409039",
    "end": "411120"
  },
  {
    "text": "in the backend for that",
    "start": "411120",
    "end": "412880"
  },
  {
    "text": "before we actually get to the demo i",
    "start": "412880",
    "end": "414479"
  },
  {
    "text": "wanted to quickly show you the steps of",
    "start": "414479",
    "end": "416080"
  },
  {
    "text": "the demo",
    "start": "416080",
    "end": "417360"
  },
  {
    "text": "so the first step is to deploy the model",
    "start": "417360",
    "end": "419840"
  },
  {
    "text": "which is part of the pre-work",
    "start": "419840",
    "end": "421599"
  },
  {
    "text": "right so in the real world scenario",
    "start": "421599",
    "end": "424400"
  },
  {
    "text": "either you have",
    "start": "424400",
    "end": "425360"
  },
  {
    "text": "a data scientist or you already have",
    "start": "425360",
    "end": "428240"
  },
  {
    "text": "purchased",
    "start": "428240",
    "end": "428880"
  },
  {
    "text": "a machine learning model that's ready to",
    "start": "428880",
    "end": "431120"
  },
  {
    "text": "go so we will quickly look at this",
    "start": "431120",
    "end": "432880"
  },
  {
    "text": "model before we actually start doing the",
    "start": "432880",
    "end": "435840"
  },
  {
    "text": "integration",
    "start": "435840",
    "end": "437120"
  },
  {
    "text": "step number two is to establish trust",
    "start": "437120",
    "end": "439360"
  },
  {
    "text": "between the amazon aurora and",
    "start": "439360",
    "end": "441039"
  },
  {
    "text": "major sagemaker using imroll",
    "start": "441039",
    "end": "445039"
  },
  {
    "text": "step number three is going to be about",
    "start": "445039",
    "end": "448400"
  },
  {
    "text": "modification of some of the parameters",
    "start": "448400",
    "end": "450880"
  },
  {
    "text": "on this on",
    "start": "450880",
    "end": "452000"
  },
  {
    "text": "amazon aurora and here's the important",
    "start": "452000",
    "end": "455599"
  },
  {
    "text": "step",
    "start": "455599",
    "end": "456720"
  },
  {
    "text": "the sql function that we're going to use",
    "start": "456720",
    "end": "458960"
  },
  {
    "text": "is going to use",
    "start": "458960",
    "end": "459919"
  },
  {
    "text": "a clause called aws sagemaker invoke",
    "start": "459919",
    "end": "462479"
  },
  {
    "text": "endpoint we'll look at it in detail when",
    "start": "462479",
    "end": "464479"
  },
  {
    "text": "we do the demo",
    "start": "464479",
    "end": "467120"
  },
  {
    "text": "here's quickly how the function looks",
    "start": "467199",
    "end": "468879"
  },
  {
    "text": "like if you look at the function",
    "start": "468879",
    "end": "471199"
  },
  {
    "text": "most of the function looks like exact",
    "start": "471199",
    "end": "473039"
  },
  {
    "text": "sql function there there are no",
    "start": "473039",
    "end": "475039"
  },
  {
    "text": "there are no changes it's just a regular",
    "start": "475039",
    "end": "476800"
  },
  {
    "text": "sql function",
    "start": "476800",
    "end": "478080"
  },
  {
    "text": "the only change is towards the end where",
    "start": "478080",
    "end": "480319"
  },
  {
    "text": "we are calling an",
    "start": "480319",
    "end": "481280"
  },
  {
    "text": "alias and then we're saying aws",
    "start": "481280",
    "end": "483520"
  },
  {
    "text": "sagemaker invoke endpoint",
    "start": "483520",
    "end": "485199"
  },
  {
    "text": "and then we're providing the name of the",
    "start": "485199",
    "end": "486800"
  },
  {
    "text": "endpoint and we'll look at all of these",
    "start": "486800",
    "end": "488400"
  },
  {
    "text": "steps in details in a minute",
    "start": "488400",
    "end": "491280"
  },
  {
    "text": "okay to start our demo we're gonna head",
    "start": "491280",
    "end": "493039"
  },
  {
    "text": "over to our aws console",
    "start": "493039",
    "end": "495520"
  },
  {
    "text": "and there we're gonna go to the amazon",
    "start": "495520",
    "end": "497840"
  },
  {
    "text": "sagemaker console",
    "start": "497840",
    "end": "499599"
  },
  {
    "text": "in amazon stage maker console on the",
    "start": "499599",
    "end": "501520"
  },
  {
    "text": "left hand side you're gonna see a",
    "start": "501520",
    "end": "503280"
  },
  {
    "text": "notebook area",
    "start": "503280",
    "end": "504639"
  },
  {
    "text": "the notebook area lets you define",
    "start": "504639",
    "end": "506319"
  },
  {
    "text": "jupyter notebooks so",
    "start": "506319",
    "end": "508000"
  },
  {
    "text": "let's go ahead and take a look at these",
    "start": "508000",
    "end": "509599"
  },
  {
    "text": "notebooks the notebook i'm interested in",
    "start": "509599",
    "end": "512240"
  },
  {
    "text": "is the aura machine learning demo",
    "start": "512240",
    "end": "513919"
  },
  {
    "text": "notebook so let's go ahead",
    "start": "513919",
    "end": "516080"
  },
  {
    "text": "and open it so it brings you",
    "start": "516080",
    "end": "519440"
  },
  {
    "text": "to this area where you can open up",
    "start": "519440",
    "end": "522640"
  },
  {
    "text": "the amazon or the jupiter notebook",
    "start": "522640",
    "end": "527120"
  },
  {
    "text": "and here's my jupiter notebook so let me",
    "start": "528480",
    "end": "531200"
  },
  {
    "text": "open that up",
    "start": "531200",
    "end": "535839"
  },
  {
    "text": "so this jupyter notebook defines",
    "start": "539279",
    "end": "543040"
  },
  {
    "text": "a bunch of python code so some of this",
    "start": "543040",
    "end": "545839"
  },
  {
    "text": "python code",
    "start": "545839",
    "end": "546720"
  },
  {
    "text": "imports libraries it defines an s3",
    "start": "546720",
    "end": "549680"
  },
  {
    "text": "bucket",
    "start": "549680",
    "end": "550800"
  },
  {
    "text": "it imports the data that we need to",
    "start": "550800",
    "end": "553360"
  },
  {
    "text": "train the algorithm",
    "start": "553360",
    "end": "555360"
  },
  {
    "text": "it classifies that data it",
    "start": "555360",
    "end": "558399"
  },
  {
    "text": "imports the framework that we're going",
    "start": "558399",
    "end": "561120"
  },
  {
    "text": "to use the frameworks name",
    "start": "561120",
    "end": "562560"
  },
  {
    "text": "is scikit-learn framework so it imports",
    "start": "562560",
    "end": "565680"
  },
  {
    "text": "that framework",
    "start": "565680",
    "end": "567680"
  },
  {
    "text": "um and then also defines the algorithm",
    "start": "567680",
    "end": "570399"
  },
  {
    "text": "that it's going to use which is the",
    "start": "570399",
    "end": "571519"
  },
  {
    "text": "random cut force algorithm in this case",
    "start": "571519",
    "end": "574160"
  },
  {
    "text": "and there's a lot of processing but",
    "start": "574160",
    "end": "576640"
  },
  {
    "text": "essentially what it does towards the end",
    "start": "576640",
    "end": "578640"
  },
  {
    "text": "is after training this algorithm with",
    "start": "578640",
    "end": "580959"
  },
  {
    "text": "that data set",
    "start": "580959",
    "end": "582560"
  },
  {
    "text": "it deploys a model in an ester bucket",
    "start": "582560",
    "end": "585360"
  },
  {
    "text": "and it also",
    "start": "585360",
    "end": "586320"
  },
  {
    "text": "deploys an endpoint so after the",
    "start": "586320",
    "end": "589519"
  },
  {
    "text": "the processing is done in this notebook",
    "start": "589519",
    "end": "592640"
  },
  {
    "text": "we should have",
    "start": "592640",
    "end": "593920"
  },
  {
    "text": "an endpoint ready for us so to save some",
    "start": "593920",
    "end": "596640"
  },
  {
    "text": "time i've already executed this notebook",
    "start": "596640",
    "end": "598640"
  },
  {
    "text": "so let's head over to our amazon",
    "start": "598640",
    "end": "600080"
  },
  {
    "text": "sagemaker area",
    "start": "600080",
    "end": "602720"
  },
  {
    "text": "and let's go down to the endpoints area",
    "start": "602720",
    "end": "605600"
  },
  {
    "text": "in the endpoint area",
    "start": "605600",
    "end": "607040"
  },
  {
    "text": "here's my endpoint that i need to use",
    "start": "607040",
    "end": "610240"
  },
  {
    "text": "in aurora so i'm going to click on the",
    "start": "610240",
    "end": "612800"
  },
  {
    "text": "endpoint",
    "start": "612800",
    "end": "613920"
  },
  {
    "text": "this endpoint shows me a couple of",
    "start": "613920",
    "end": "615360"
  },
  {
    "text": "things on the right hand side you see",
    "start": "615360",
    "end": "617519"
  },
  {
    "text": "this url",
    "start": "617519",
    "end": "619040"
  },
  {
    "text": "this is how you would usually interact",
    "start": "619040",
    "end": "620880"
  },
  {
    "text": "with this endpoint you would use",
    "start": "620880",
    "end": "622480"
  },
  {
    "text": "your rest apis",
    "start": "622480",
    "end": "625600"
  },
  {
    "text": "or applications um and they will talk to",
    "start": "625600",
    "end": "628640"
  },
  {
    "text": "this endpoint",
    "start": "628640",
    "end": "630640"
  },
  {
    "text": "or this url to get predictions",
    "start": "630640",
    "end": "634000"
  },
  {
    "text": "for us because we're using aurora",
    "start": "634000",
    "end": "637120"
  },
  {
    "text": "integration",
    "start": "637120",
    "end": "638320"
  },
  {
    "text": "we need to basically run sql queries",
    "start": "638320",
    "end": "641600"
  },
  {
    "text": "so for that what we're going to need is",
    "start": "641600",
    "end": "643360"
  },
  {
    "text": "we're going to need this ern",
    "start": "643360",
    "end": "644959"
  },
  {
    "text": "so i'm going to copy this ern and i'll",
    "start": "644959",
    "end": "646959"
  },
  {
    "text": "i'm going to show you in a second",
    "start": "646959",
    "end": "648560"
  },
  {
    "text": "where we use this erm and aaron stands",
    "start": "648560",
    "end": "651279"
  },
  {
    "text": "for amazon resource name",
    "start": "651279",
    "end": "652959"
  },
  {
    "text": "it basically tells you a unique id for",
    "start": "652959",
    "end": "655360"
  },
  {
    "text": "the resource",
    "start": "655360",
    "end": "656480"
  },
  {
    "text": "within the aws area",
    "start": "656480",
    "end": "661120"
  },
  {
    "text": "so let's go to our rds console",
    "start": "661120",
    "end": "664320"
  },
  {
    "text": "and i'm going to go to my database",
    "start": "664320",
    "end": "666480"
  },
  {
    "text": "instances",
    "start": "666480",
    "end": "668640"
  },
  {
    "text": "i've already spun up a database instance",
    "start": "668640",
    "end": "670560"
  },
  {
    "text": "that i'm going to use for this demo",
    "start": "670560",
    "end": "673200"
  },
  {
    "text": "i'm gonna um go to connectivity and",
    "start": "673200",
    "end": "676720"
  },
  {
    "text": "security area",
    "start": "676720",
    "end": "678079"
  },
  {
    "text": "and then scroll down to the manage im",
    "start": "678079",
    "end": "681040"
  },
  {
    "text": "roles area",
    "start": "681040",
    "end": "682320"
  },
  {
    "text": "click on the select the service to",
    "start": "682320",
    "end": "683839"
  },
  {
    "text": "connect to this cluster and as you can",
    "start": "683839",
    "end": "685839"
  },
  {
    "text": "imagine the service that i want to",
    "start": "685839",
    "end": "687360"
  },
  {
    "text": "connect here",
    "start": "687360",
    "end": "688000"
  },
  {
    "text": "is going to be amazon sage maker so i'm",
    "start": "688000",
    "end": "690480"
  },
  {
    "text": "going to click on amazon sagemaker",
    "start": "690480",
    "end": "692480"
  },
  {
    "text": "and then i'm going to click on connect",
    "start": "692480",
    "end": "694160"
  },
  {
    "text": "service so as soon as i click on connect",
    "start": "694160",
    "end": "696560"
  },
  {
    "text": "service",
    "start": "696560",
    "end": "697600"
  },
  {
    "text": "it asks me for the arn for amazon",
    "start": "697600",
    "end": "700240"
  },
  {
    "text": "sagemaker endpoint",
    "start": "700240",
    "end": "701760"
  },
  {
    "text": "so this is the endpoint that we just",
    "start": "701760",
    "end": "703440"
  },
  {
    "text": "copied in my last step",
    "start": "703440",
    "end": "705360"
  },
  {
    "text": "so i'm going to paste that here and then",
    "start": "705360",
    "end": "708079"
  },
  {
    "text": "i'm going to click on connect service",
    "start": "708079",
    "end": "710639"
  },
  {
    "text": "it's going to take a few seconds and",
    "start": "710639",
    "end": "712399"
  },
  {
    "text": "then it's going to become active",
    "start": "712399",
    "end": "714880"
  },
  {
    "text": "okay so now the role is active",
    "start": "714880",
    "end": "718000"
  },
  {
    "text": "let's see what this role is doing for us",
    "start": "718000",
    "end": "722079"
  },
  {
    "text": "i'm going to copy the name of this role",
    "start": "722079",
    "end": "724160"
  },
  {
    "text": "and then i'm going to head over to my",
    "start": "724160",
    "end": "726639"
  },
  {
    "text": "iam area i'm going to go over to the",
    "start": "726639",
    "end": "730320"
  },
  {
    "text": "roles",
    "start": "730320",
    "end": "732000"
  },
  {
    "text": "area and then look for this role that",
    "start": "732000",
    "end": "734800"
  },
  {
    "text": "was just created",
    "start": "734800",
    "end": "735760"
  },
  {
    "text": "by the aurora service",
    "start": "735760",
    "end": "739120"
  },
  {
    "text": "so let's click on this role and see what",
    "start": "739200",
    "end": "740959"
  },
  {
    "text": "it's doing inside",
    "start": "740959",
    "end": "744320"
  },
  {
    "text": "so if you look at the policy that was",
    "start": "744320",
    "end": "746079"
  },
  {
    "text": "defined by this role",
    "start": "746079",
    "end": "747920"
  },
  {
    "text": "it's basically doing just a couple of",
    "start": "747920",
    "end": "750320"
  },
  {
    "text": "things it's saying",
    "start": "750320",
    "end": "752639"
  },
  {
    "text": "allow this action which is invoke",
    "start": "752639",
    "end": "755519"
  },
  {
    "text": "endpoint in the sagemaker service and",
    "start": "755519",
    "end": "758079"
  },
  {
    "text": "it's also defining",
    "start": "758079",
    "end": "759200"
  },
  {
    "text": "which endpoint can be utilized which is",
    "start": "759200",
    "end": "761360"
  },
  {
    "text": "identified by the crn",
    "start": "761360",
    "end": "763200"
  },
  {
    "text": "so fairly straightforward what we're",
    "start": "763200",
    "end": "764720"
  },
  {
    "text": "doing here we're saying",
    "start": "764720",
    "end": "767120"
  },
  {
    "text": "let rds service or aurora in this case",
    "start": "767120",
    "end": "771120"
  },
  {
    "text": "uh invoke the sagemaker endpoint and",
    "start": "771120",
    "end": "773760"
  },
  {
    "text": "we're also telling",
    "start": "773760",
    "end": "774800"
  },
  {
    "text": "which endpoint can be invoked so",
    "start": "774800",
    "end": "778079"
  },
  {
    "text": "that's fairly straightforward the other",
    "start": "778079",
    "end": "780160"
  },
  {
    "text": "thing that i wanted to show you is the",
    "start": "780160",
    "end": "781440"
  },
  {
    "text": "trust relationship",
    "start": "781440",
    "end": "782560"
  },
  {
    "text": "so we have defined a policy that tells",
    "start": "782560",
    "end": "785120"
  },
  {
    "text": "you exactly which resource can be",
    "start": "785120",
    "end": "787200"
  },
  {
    "text": "accessed and also we're defining a trust",
    "start": "787200",
    "end": "790000"
  },
  {
    "text": "policy so we're saying",
    "start": "790000",
    "end": "791760"
  },
  {
    "text": "let the rds service talk to the sage",
    "start": "791760",
    "end": "794560"
  },
  {
    "text": "maker service",
    "start": "794560",
    "end": "795839"
  },
  {
    "text": "that's all so",
    "start": "795839",
    "end": "799120"
  },
  {
    "text": "let's go back to our rds console so we",
    "start": "799120",
    "end": "801279"
  },
  {
    "text": "took care of the two steps which is to",
    "start": "801279",
    "end": "803519"
  },
  {
    "text": "define the sagemaker endpoints",
    "start": "803519",
    "end": "807360"
  },
  {
    "text": "then take that sagemaker endpoint and",
    "start": "807360",
    "end": "809600"
  },
  {
    "text": "create a role",
    "start": "809600",
    "end": "810800"
  },
  {
    "text": "now what we need to do is we also need",
    "start": "810800",
    "end": "813680"
  },
  {
    "text": "to",
    "start": "813680",
    "end": "814079"
  },
  {
    "text": "provide a parameter or modify a",
    "start": "814079",
    "end": "817120"
  },
  {
    "text": "parameter",
    "start": "817120",
    "end": "818000"
  },
  {
    "text": "so that the aurora service can actually",
    "start": "818000",
    "end": "820079"
  },
  {
    "text": "utilize this newly defined role",
    "start": "820079",
    "end": "822800"
  },
  {
    "text": "so let's go back to the configuration",
    "start": "822800",
    "end": "825360"
  },
  {
    "text": "area",
    "start": "825360",
    "end": "826000"
  },
  {
    "text": "in rds console",
    "start": "826000",
    "end": "829120"
  },
  {
    "text": "and in configuration area what we need",
    "start": "829120",
    "end": "831519"
  },
  {
    "text": "is the database",
    "start": "831519",
    "end": "832639"
  },
  {
    "text": "cluster parameter so if you see right",
    "start": "832639",
    "end": "834959"
  },
  {
    "text": "here we have our database cluster",
    "start": "834959",
    "end": "836880"
  },
  {
    "text": "parameter group listed",
    "start": "836880",
    "end": "838800"
  },
  {
    "text": "which is rmi sql 57 cluster ml",
    "start": "838800",
    "end": "842160"
  },
  {
    "text": "i'm just gonna click on it and open it",
    "start": "842160",
    "end": "844320"
  },
  {
    "text": "in a new tab",
    "start": "844320",
    "end": "847040"
  },
  {
    "text": "and then the parameter that we need to",
    "start": "849839",
    "end": "851440"
  },
  {
    "text": "change is called aws default sagemaker",
    "start": "851440",
    "end": "854320"
  },
  {
    "text": "role",
    "start": "854320",
    "end": "855120"
  },
  {
    "text": "so i'm going to edit this parameter",
    "start": "855120",
    "end": "857920"
  },
  {
    "text": "click on edit",
    "start": "857920",
    "end": "859279"
  },
  {
    "text": "again if you see here it says the",
    "start": "859279",
    "end": "860959"
  },
  {
    "text": "default i am role error and used for",
    "start": "860959",
    "end": "862800"
  },
  {
    "text": "integration with sagemaker",
    "start": "862800",
    "end": "864639"
  },
  {
    "text": "so we are going to get this value",
    "start": "864639",
    "end": "867839"
  },
  {
    "text": "from the role we just defined and",
    "start": "867839",
    "end": "870959"
  },
  {
    "text": "this value is right here so i'm going to",
    "start": "870959",
    "end": "872639"
  },
  {
    "text": "copy this",
    "start": "872639",
    "end": "874959"
  },
  {
    "text": "come back here and then paste this value",
    "start": "874959",
    "end": "878959"
  },
  {
    "text": "then i'm going to click on save changes",
    "start": "878959",
    "end": "882720"
  },
  {
    "text": "now if you see under apply type this",
    "start": "882959",
    "end": "884639"
  },
  {
    "text": "changes dynamic",
    "start": "884639",
    "end": "886079"
  },
  {
    "text": "so we don't need a reboot to apply this",
    "start": "886079",
    "end": "887920"
  },
  {
    "text": "change let's make sure",
    "start": "887920",
    "end": "889839"
  },
  {
    "text": "that the changes are correct um",
    "start": "889839",
    "end": "893440"
  },
  {
    "text": "so it is already a stage maker role it",
    "start": "893440",
    "end": "896160"
  },
  {
    "text": "ends with this number which is the same",
    "start": "896160",
    "end": "898720"
  },
  {
    "text": "as this number so",
    "start": "898720",
    "end": "900560"
  },
  {
    "text": "we're good here so i'm going to click on",
    "start": "900560",
    "end": "902480"
  },
  {
    "text": "changes",
    "start": "902480",
    "end": "904720"
  },
  {
    "text": "and at this point all the pre-work that",
    "start": "904720",
    "end": "907120"
  },
  {
    "text": "we need to do in console is done",
    "start": "907120",
    "end": "908959"
  },
  {
    "text": "so the endpoint is defined the role is",
    "start": "908959",
    "end": "911519"
  },
  {
    "text": "created",
    "start": "911519",
    "end": "912399"
  },
  {
    "text": "and the parameters change so aurora",
    "start": "912399",
    "end": "914880"
  },
  {
    "text": "knows which role to utilize",
    "start": "914880",
    "end": "916639"
  },
  {
    "text": "for the next step",
    "start": "916639",
    "end": "919759"
  },
  {
    "text": "okay now we're in mysql workbench let's",
    "start": "922079",
    "end": "924720"
  },
  {
    "text": "take a look at our aurora version first",
    "start": "924720",
    "end": "927040"
  },
  {
    "text": "it's 2.08.1 as long as we are above",
    "start": "927040",
    "end": "931480"
  },
  {
    "text": "2.07.0",
    "start": "931480",
    "end": "933199"
  },
  {
    "text": "uh our integration with machine learning",
    "start": "933199",
    "end": "936560"
  },
  {
    "text": "is supported so in this case we're good",
    "start": "936560",
    "end": "939759"
  },
  {
    "text": "so i'm going to show you the table",
    "start": "939759",
    "end": "943120"
  },
  {
    "text": "and the contents of this table that i'm",
    "start": "943120",
    "end": "945120"
  },
  {
    "text": "going to use for this demo",
    "start": "945120",
    "end": "946959"
  },
  {
    "text": "and i'm going to talk or spend a couple",
    "start": "946959",
    "end": "949519"
  },
  {
    "text": "of minutes talking about the use case",
    "start": "949519",
    "end": "951519"
  },
  {
    "text": "and how this machine learning algorithm",
    "start": "951519",
    "end": "953600"
  },
  {
    "text": "is trained",
    "start": "953600",
    "end": "954720"
  },
  {
    "text": "so the rest of the demo kind of makes",
    "start": "954720",
    "end": "956560"
  },
  {
    "text": "sense",
    "start": "956560",
    "end": "957920"
  },
  {
    "text": "so let's take an example of a row here",
    "start": "957920",
    "end": "961440"
  },
  {
    "text": "and let's talk through this data that",
    "start": "961440",
    "end": "963440"
  },
  {
    "text": "was used to train",
    "start": "963440",
    "end": "964800"
  },
  {
    "text": "the machine learning algorithm so this",
    "start": "964800",
    "end": "968000"
  },
  {
    "text": "data was made available publicly",
    "start": "968000",
    "end": "971360"
  },
  {
    "text": "by a telecom company this is an",
    "start": "971360",
    "end": "973680"
  },
  {
    "text": "anonymized customer data",
    "start": "973680",
    "end": "975279"
  },
  {
    "text": "and it has observations so if you look",
    "start": "975279",
    "end": "978639"
  },
  {
    "text": "at this first row that's highlighted the",
    "start": "978639",
    "end": "980320"
  },
  {
    "text": "observation",
    "start": "980320",
    "end": "981199"
  },
  {
    "text": "is that this customer was in kansas",
    "start": "981199",
    "end": "983440"
  },
  {
    "text": "state",
    "start": "983440",
    "end": "984560"
  },
  {
    "text": "um their account length was 128 days",
    "start": "984560",
    "end": "987759"
  },
  {
    "text": "their area code was 415. they didn't",
    "start": "987759",
    "end": "990639"
  },
  {
    "text": "have an international plan",
    "start": "990639",
    "end": "992079"
  },
  {
    "text": "they didn't have a voice or they did",
    "start": "992079",
    "end": "993920"
  },
  {
    "text": "have a voice",
    "start": "993920",
    "end": "995440"
  },
  {
    "text": "mail plan and it also goes ahead and",
    "start": "995440",
    "end": "998639"
  },
  {
    "text": "does some observations like how much",
    "start": "998639",
    "end": "1000320"
  },
  {
    "text": "time they spend",
    "start": "1000320",
    "end": "1001519"
  },
  {
    "text": "uh during daytime on a call",
    "start": "1001519",
    "end": "1005440"
  },
  {
    "text": "how much time did they spend during",
    "start": "1005440",
    "end": "1007440"
  },
  {
    "text": "night time on a call if they had",
    "start": "1007440",
    "end": "1009759"
  },
  {
    "text": "international plan or not how many how",
    "start": "1009759",
    "end": "1012160"
  },
  {
    "text": "many how much time did they spend on",
    "start": "1012160",
    "end": "1014000"
  },
  {
    "text": "making international calls",
    "start": "1014000",
    "end": "1015600"
  },
  {
    "text": "if they made customer service calls or",
    "start": "1015600",
    "end": "1017440"
  },
  {
    "text": "not and along these observations there's",
    "start": "1017440",
    "end": "1019839"
  },
  {
    "text": "another observation",
    "start": "1019839",
    "end": "1021040"
  },
  {
    "text": "which is you know noted in the column",
    "start": "1021040",
    "end": "1024480"
  },
  {
    "text": "churn",
    "start": "1024480",
    "end": "1026000"
  },
  {
    "text": "which basically says either true or",
    "start": "1026000",
    "end": "1028880"
  },
  {
    "text": "false",
    "start": "1028880",
    "end": "1029520"
  },
  {
    "text": "so if this churn column says false",
    "start": "1029520",
    "end": "1032720"
  },
  {
    "text": "that means this customer did not leave",
    "start": "1032720",
    "end": "1035918"
  },
  {
    "text": "the service if it says true that means",
    "start": "1035919",
    "end": "1038720"
  },
  {
    "text": "based on this information they found out",
    "start": "1038720",
    "end": "1040720"
  },
  {
    "text": "that this customer actually left the",
    "start": "1040720",
    "end": "1042319"
  },
  {
    "text": "service and went to some other telecom",
    "start": "1042319",
    "end": "1044160"
  },
  {
    "text": "company",
    "start": "1044160",
    "end": "1046160"
  },
  {
    "text": "so again this churn column here is part",
    "start": "1046160",
    "end": "1048558"
  },
  {
    "text": "of this table",
    "start": "1048559",
    "end": "1049840"
  },
  {
    "text": "and all it does is it notes the",
    "start": "1049840",
    "end": "1052400"
  },
  {
    "text": "observation",
    "start": "1052400",
    "end": "1053120"
  },
  {
    "text": "and it tells us whether a customer",
    "start": "1053120",
    "end": "1056720"
  },
  {
    "text": "left the service or not based on all",
    "start": "1056720",
    "end": "1058720"
  },
  {
    "text": "these other pieces of information that",
    "start": "1058720",
    "end": "1060880"
  },
  {
    "text": "was collected",
    "start": "1060880",
    "end": "1062320"
  },
  {
    "text": "so this is important to understand",
    "start": "1062320",
    "end": "1064080"
  },
  {
    "text": "because we use this data to train the",
    "start": "1064080",
    "end": "1066160"
  },
  {
    "text": "sagemaker algorithm",
    "start": "1066160",
    "end": "1067679"
  },
  {
    "text": "that we looked at before and that's how",
    "start": "1067679",
    "end": "1069760"
  },
  {
    "text": "the endpoint is defined",
    "start": "1069760",
    "end": "1071600"
  },
  {
    "text": "which is using this data and then use",
    "start": "1071600",
    "end": "1074960"
  },
  {
    "text": "we are going to use the same data to",
    "start": "1074960",
    "end": "1076960"
  },
  {
    "text": "make predictions also so",
    "start": "1076960",
    "end": "1079440"
  },
  {
    "text": "since this is just a demonstration we're",
    "start": "1079440",
    "end": "1081360"
  },
  {
    "text": "using the same data set for",
    "start": "1081360",
    "end": "1082960"
  },
  {
    "text": "training and prediction in",
    "start": "1082960",
    "end": "1086080"
  },
  {
    "text": "real-world scenarios you would probably",
    "start": "1086080",
    "end": "1089039"
  },
  {
    "text": "not do this you will use a separate data",
    "start": "1089039",
    "end": "1091039"
  },
  {
    "text": "set for training and separate data set",
    "start": "1091039",
    "end": "1093440"
  },
  {
    "text": "for prediction so",
    "start": "1093440",
    "end": "1097360"
  },
  {
    "text": "before we actually move on to make any",
    "start": "1097360",
    "end": "1100080"
  },
  {
    "text": "predictions",
    "start": "1100080",
    "end": "1100960"
  },
  {
    "text": "i wanted to show you the function",
    "start": "1100960",
    "end": "1102720"
  },
  {
    "text": "definition",
    "start": "1102720",
    "end": "1104640"
  },
  {
    "text": "so i'm going to go go over to the",
    "start": "1104640",
    "end": "1106880"
  },
  {
    "text": "function here",
    "start": "1106880",
    "end": "1108480"
  },
  {
    "text": "and then make a copy of that function",
    "start": "1108480",
    "end": "1112400"
  },
  {
    "text": "and then we're going to observe the",
    "start": "1112400",
    "end": "1114160"
  },
  {
    "text": "function definition",
    "start": "1114160",
    "end": "1115600"
  },
  {
    "text": "so if you look at the function body it's",
    "start": "1115600",
    "end": "1118880"
  },
  {
    "text": "fairly straightforward",
    "start": "1118880",
    "end": "1120080"
  },
  {
    "text": "it's just standard sql we're creating a",
    "start": "1120080",
    "end": "1122880"
  },
  {
    "text": "function called",
    "start": "1122880",
    "end": "1123760"
  },
  {
    "text": "churn and we're saying this function",
    "start": "1123760",
    "end": "1126559"
  },
  {
    "text": "expects",
    "start": "1126559",
    "end": "1127520"
  },
  {
    "text": "these parameters with these data types",
    "start": "1127520",
    "end": "1131120"
  },
  {
    "text": "here's the important part though",
    "start": "1131120",
    "end": "1134240"
  },
  {
    "text": "the clause we're using is the alias",
    "start": "1134240",
    "end": "1136559"
  },
  {
    "text": "clause and then we're calling aws",
    "start": "1136559",
    "end": "1138799"
  },
  {
    "text": "sagemaker invoke endpoint",
    "start": "1138799",
    "end": "1140880"
  },
  {
    "text": "so what we're saying here is this",
    "start": "1140880",
    "end": "1143039"
  },
  {
    "text": "function is essentially",
    "start": "1143039",
    "end": "1144559"
  },
  {
    "text": "accepting all of these parameters and",
    "start": "1144559",
    "end": "1146160"
  },
  {
    "text": "it's just a wrapper",
    "start": "1146160",
    "end": "1148160"
  },
  {
    "text": "for invoking this endpoint so this",
    "start": "1148160",
    "end": "1151440"
  },
  {
    "text": "endpoint is the same endpoint that we",
    "start": "1151440",
    "end": "1153280"
  },
  {
    "text": "looked at before in the sagemaker",
    "start": "1153280",
    "end": "1154880"
  },
  {
    "text": "console",
    "start": "1154880",
    "end": "1156000"
  },
  {
    "text": "and this function is using the sagemaker",
    "start": "1156000",
    "end": "1159520"
  },
  {
    "text": "integration to call",
    "start": "1159520",
    "end": "1160799"
  },
  {
    "text": "that endpoint in the backend so that's",
    "start": "1160799",
    "end": "1163600"
  },
  {
    "text": "all this function is doing it's",
    "start": "1163600",
    "end": "1164799"
  },
  {
    "text": "essentially just a wrapper",
    "start": "1164799",
    "end": "1167520"
  },
  {
    "text": "so now that we understand what this",
    "start": "1167520",
    "end": "1168799"
  },
  {
    "text": "function is doing let's",
    "start": "1168799",
    "end": "1171039"
  },
  {
    "text": "send a row to this function",
    "start": "1171039",
    "end": "1174240"
  },
  {
    "text": "and see what we get back so the output",
    "start": "1174240",
    "end": "1177600"
  },
  {
    "text": "column",
    "start": "1177600",
    "end": "1178080"
  },
  {
    "text": "will be named will churn question mark",
    "start": "1178080",
    "end": "1180320"
  },
  {
    "text": "so it's just telling us whether",
    "start": "1180320",
    "end": "1181919"
  },
  {
    "text": "the prediction is going to say will this",
    "start": "1181919",
    "end": "1184080"
  },
  {
    "text": "customer churn",
    "start": "1184080",
    "end": "1185039"
  },
  {
    "text": "or will this customer not turn based on",
    "start": "1185039",
    "end": "1186880"
  },
  {
    "text": "this information we're sending to it",
    "start": "1186880",
    "end": "1189200"
  },
  {
    "text": "so let's look at this output so based on",
    "start": "1189200",
    "end": "1191360"
  },
  {
    "text": "this just one row of information we sent",
    "start": "1191360",
    "end": "1194160"
  },
  {
    "text": "the um the prediction is true so based",
    "start": "1194160",
    "end": "1197440"
  },
  {
    "text": "on this information you know state is",
    "start": "1197440",
    "end": "1199120"
  },
  {
    "text": "indiana the",
    "start": "1199120",
    "end": "1200160"
  },
  {
    "text": "account length is 65 and and you know",
    "start": "1200160",
    "end": "1203120"
  },
  {
    "text": "and rest of the things",
    "start": "1203120",
    "end": "1204799"
  },
  {
    "text": "we the prediction is that this customer",
    "start": "1204799",
    "end": "1207200"
  },
  {
    "text": "will turn",
    "start": "1207200",
    "end": "1207840"
  },
  {
    "text": "so if you can see you know this",
    "start": "1207840",
    "end": "1210960"
  },
  {
    "text": "this becomes so much easier to make",
    "start": "1210960",
    "end": "1212720"
  },
  {
    "text": "predictions from",
    "start": "1212720",
    "end": "1214080"
  },
  {
    "text": "right here within your mysql",
    "start": "1214080",
    "end": "1218840"
  },
  {
    "text": "queries so",
    "start": "1218840",
    "end": "1221120"
  },
  {
    "text": "let's take this example forward and what",
    "start": "1221120",
    "end": "1223520"
  },
  {
    "text": "i'm going to do now",
    "start": "1223520",
    "end": "1224400"
  },
  {
    "text": "is instead of just sending a single row",
    "start": "1224400",
    "end": "1228159"
  },
  {
    "text": "i'm going to send the entire table so",
    "start": "1228159",
    "end": "1231440"
  },
  {
    "text": "again this is a standard function call",
    "start": "1231440",
    "end": "1234559"
  },
  {
    "text": "what i'm doing here is i'm using the",
    "start": "1234559",
    "end": "1236240"
  },
  {
    "text": "churn function and i'm passing all the",
    "start": "1236240",
    "end": "1238559"
  },
  {
    "text": "columns",
    "start": "1238559",
    "end": "1239919"
  },
  {
    "text": "from the customers table that i've",
    "start": "1239919",
    "end": "1241600"
  },
  {
    "text": "defined here and then the output",
    "start": "1241600",
    "end": "1243679"
  },
  {
    "text": "is defined as or the name of the column",
    "start": "1243679",
    "end": "1246320"
  },
  {
    "text": "is going to be churn question mark",
    "start": "1246320",
    "end": "1248480"
  },
  {
    "text": "so let's look at this output",
    "start": "1248480",
    "end": "1251760"
  },
  {
    "text": "okay you see it was pretty pretty quick",
    "start": "1251760",
    "end": "1253919"
  },
  {
    "text": "less than a second maybe",
    "start": "1253919",
    "end": "1255520"
  },
  {
    "text": "we'll look at the performance in a",
    "start": "1255520",
    "end": "1256720"
  },
  {
    "text": "second",
    "start": "1256720",
    "end": "1258559"
  },
  {
    "text": "but if you see the output if you",
    "start": "1258559",
    "end": "1260880"
  },
  {
    "text": "remember from the",
    "start": "1260880",
    "end": "1262000"
  },
  {
    "text": "previous table description that i was",
    "start": "1262000",
    "end": "1265039"
  },
  {
    "text": "showing",
    "start": "1265039",
    "end": "1265679"
  },
  {
    "text": "this churn column here is essentially",
    "start": "1265679",
    "end": "1269120"
  },
  {
    "text": "the actual observation okay and this",
    "start": "1269120",
    "end": "1272559"
  },
  {
    "text": "churn question mark",
    "start": "1272559",
    "end": "1273760"
  },
  {
    "text": "is the output of the function so if you",
    "start": "1273760",
    "end": "1276240"
  },
  {
    "text": "see these two columns line up pretty",
    "start": "1276240",
    "end": "1278400"
  },
  {
    "text": "well",
    "start": "1278400",
    "end": "1279200"
  },
  {
    "text": "which means that we're almost variables",
    "start": "1279200",
    "end": "1282320"
  },
  {
    "text": "are you know our our predictions are",
    "start": "1282320",
    "end": "1285280"
  },
  {
    "text": "spot on",
    "start": "1285280",
    "end": "1286799"
  },
  {
    "text": "based on the actual observations and",
    "start": "1286799",
    "end": "1288960"
  },
  {
    "text": "what the sagemaker",
    "start": "1288960",
    "end": "1290799"
  },
  {
    "text": "function or sagemaker endpoint is",
    "start": "1290799",
    "end": "1292720"
  },
  {
    "text": "returning in terms of predictions",
    "start": "1292720",
    "end": "1294960"
  },
  {
    "text": "so you know that makes us really really",
    "start": "1294960",
    "end": "1296880"
  },
  {
    "text": "easy for",
    "start": "1296880",
    "end": "1298320"
  },
  {
    "text": "calling the sagemaker functions in the",
    "start": "1298320",
    "end": "1299840"
  },
  {
    "text": "back end just using a query",
    "start": "1299840",
    "end": "1303120"
  },
  {
    "text": "so now that you kind of see how easy it",
    "start": "1303120",
    "end": "1305120"
  },
  {
    "text": "is let's take this example further",
    "start": "1305120",
    "end": "1307840"
  },
  {
    "text": "and let's look at the uh you know",
    "start": "1307840",
    "end": "1311200"
  },
  {
    "text": "performance aspect of this demonstration",
    "start": "1311200",
    "end": "1314880"
  },
  {
    "text": "so to do the performance demonstration",
    "start": "1314880",
    "end": "1317679"
  },
  {
    "text": "what i'm going to",
    "start": "1317679",
    "end": "1318400"
  },
  {
    "text": "use is i'm going to use the explain",
    "start": "1318400",
    "end": "1322000"
  },
  {
    "text": "clause and the explain command basically",
    "start": "1322000",
    "end": "1324960"
  },
  {
    "text": "just shows me the",
    "start": "1324960",
    "end": "1326320"
  },
  {
    "text": "query plan so if i look at the explain",
    "start": "1326320",
    "end": "1330000"
  },
  {
    "text": "for the single row that was passed",
    "start": "1330000",
    "end": "1331919"
  },
  {
    "text": "before um",
    "start": "1331919",
    "end": "1333919"
  },
  {
    "text": "it doesn't have any extra information it",
    "start": "1333919",
    "end": "1336400"
  },
  {
    "text": "just says",
    "start": "1336400",
    "end": "1337039"
  },
  {
    "text": "you know i sent a query i got the",
    "start": "1337039",
    "end": "1338720"
  },
  {
    "text": "results back done",
    "start": "1338720",
    "end": "1341120"
  },
  {
    "text": "but if i look at the explain",
    "start": "1341120",
    "end": "1344480"
  },
  {
    "text": "information for the when i send the",
    "start": "1344480",
    "end": "1346640"
  },
  {
    "text": "entire table",
    "start": "1346640",
    "end": "1347840"
  },
  {
    "text": "this is the other function call i have",
    "start": "1347840",
    "end": "1351120"
  },
  {
    "text": "some additional information under the",
    "start": "1351120",
    "end": "1352559"
  },
  {
    "text": "extra column",
    "start": "1352559",
    "end": "1353760"
  },
  {
    "text": "and this additional information says",
    "start": "1353760",
    "end": "1355600"
  },
  {
    "text": "batch machine learning",
    "start": "1355600",
    "end": "1357200"
  },
  {
    "text": "so this is an optimization that we have",
    "start": "1357200",
    "end": "1359919"
  },
  {
    "text": "applied",
    "start": "1359919",
    "end": "1361360"
  },
  {
    "text": "or we have created for the",
    "start": "1361360",
    "end": "1364799"
  },
  {
    "text": "sagemaker integration what we are doing",
    "start": "1364799",
    "end": "1367039"
  },
  {
    "text": "here is we are trying to batch as many",
    "start": "1367039",
    "end": "1370320"
  },
  {
    "text": "rows as possible before we send it to",
    "start": "1370320",
    "end": "1373600"
  },
  {
    "text": "the",
    "start": "1373600",
    "end": "1374159"
  },
  {
    "text": "to the sagemaker endpoint so the",
    "start": "1374159",
    "end": "1377520"
  },
  {
    "text": "idea behind this is because if we send",
    "start": "1377520",
    "end": "1380320"
  },
  {
    "text": "individual rows or",
    "start": "1380320",
    "end": "1381600"
  },
  {
    "text": "you know rows in smaller groups it takes",
    "start": "1381600",
    "end": "1384159"
  },
  {
    "text": "a lot of times for them to kind of",
    "start": "1384159",
    "end": "1385760"
  },
  {
    "text": "travel",
    "start": "1385760",
    "end": "1386240"
  },
  {
    "text": "over the wire get the prediction come",
    "start": "1386240",
    "end": "1388559"
  },
  {
    "text": "back and",
    "start": "1388559",
    "end": "1390000"
  },
  {
    "text": "you know that can keep adding and it can",
    "start": "1390000",
    "end": "1392480"
  },
  {
    "text": "cause performance issues when you're",
    "start": "1392480",
    "end": "1393919"
  },
  {
    "text": "doing predictions",
    "start": "1393919",
    "end": "1395200"
  },
  {
    "text": "using this integration so our",
    "start": "1395200",
    "end": "1397280"
  },
  {
    "text": "recommendation and kind of overarching",
    "start": "1397280",
    "end": "1399200"
  },
  {
    "text": "advice here",
    "start": "1399200",
    "end": "1400159"
  },
  {
    "text": "is to try to group as many rows as",
    "start": "1400159",
    "end": "1402000"
  },
  {
    "text": "possible and send",
    "start": "1402000",
    "end": "1403760"
  },
  {
    "text": "to your sage maker algorithm as possible",
    "start": "1403760",
    "end": "1407280"
  },
  {
    "text": "and that depends",
    "start": "1407280",
    "end": "1408400"
  },
  {
    "text": "uh on uh you know different variables so",
    "start": "1408400",
    "end": "1411679"
  },
  {
    "text": "one of the things is",
    "start": "1411679",
    "end": "1413919"
  },
  {
    "text": "how many rows can your sagemaker",
    "start": "1413919",
    "end": "1416159"
  },
  {
    "text": "algorithm",
    "start": "1416159",
    "end": "1417039"
  },
  {
    "text": "are the algorithm or the endpoint that",
    "start": "1417039",
    "end": "1418640"
  },
  {
    "text": "you're defined how many rows can it",
    "start": "1418640",
    "end": "1420159"
  },
  {
    "text": "support",
    "start": "1420159",
    "end": "1421440"
  },
  {
    "text": "what is the size of the information that",
    "start": "1421440",
    "end": "1423840"
  },
  {
    "text": "you're sending so there there are",
    "start": "1423840",
    "end": "1425360"
  },
  {
    "text": "several things that",
    "start": "1425360",
    "end": "1426480"
  },
  {
    "text": "uh to be taken into account here but our",
    "start": "1426480",
    "end": "1428960"
  },
  {
    "text": "advice is send",
    "start": "1428960",
    "end": "1430000"
  },
  {
    "text": "as many or group as many as possible so",
    "start": "1430000",
    "end": "1432480"
  },
  {
    "text": "that your performance is good",
    "start": "1432480",
    "end": "1435039"
  },
  {
    "text": "so to demonstrate this point what i've",
    "start": "1435039",
    "end": "1437440"
  },
  {
    "text": "done is i've created a",
    "start": "1437440",
    "end": "1439520"
  },
  {
    "text": "separate function definition and i'm",
    "start": "1439520",
    "end": "1442159"
  },
  {
    "text": "going to show you",
    "start": "1442159",
    "end": "1442960"
  },
  {
    "text": "the function definition for this",
    "start": "1442960",
    "end": "1446080"
  },
  {
    "text": "second function so the name of this",
    "start": "1446080",
    "end": "1448240"
  },
  {
    "text": "function is turn",
    "start": "1448240",
    "end": "1449600"
  },
  {
    "text": "max batch 100. so as you can imagine",
    "start": "1449600",
    "end": "1452400"
  },
  {
    "text": "what i've done",
    "start": "1452400",
    "end": "1453120"
  },
  {
    "text": "is i've used this max batch size clause",
    "start": "1453120",
    "end": "1456720"
  },
  {
    "text": "and i've changed the max batch size to",
    "start": "1456720",
    "end": "1458559"
  },
  {
    "text": "100",
    "start": "1458559",
    "end": "1460080"
  },
  {
    "text": "by default our max batch size for the",
    "start": "1460080",
    "end": "1462640"
  },
  {
    "text": "sagemaker integration is ten thousand",
    "start": "1462640",
    "end": "1464640"
  },
  {
    "text": "so i have reduced it significantly from",
    "start": "1464640",
    "end": "1466960"
  },
  {
    "text": "ten thousand two hundred",
    "start": "1466960",
    "end": "1468240"
  },
  {
    "text": "so what i'm saying here is instead of",
    "start": "1468240",
    "end": "1469760"
  },
  {
    "text": "sending uh or grouping ten thousand",
    "start": "1469760",
    "end": "1472080"
  },
  {
    "text": "rows together only group hundred so in",
    "start": "1472080",
    "end": "1474880"
  },
  {
    "text": "this",
    "start": "1474880",
    "end": "1475279"
  },
  {
    "text": "uh three thousand rows we're probably",
    "start": "1475279",
    "end": "1477120"
  },
  {
    "text": "going to make uh batches of about at",
    "start": "1477120",
    "end": "1479120"
  },
  {
    "text": "least thirty",
    "start": "1479120",
    "end": "1480400"
  },
  {
    "text": "um to send all of this information to",
    "start": "1480400",
    "end": "1482799"
  },
  {
    "text": "the sagemaker backend",
    "start": "1482799",
    "end": "1484400"
  },
  {
    "text": "okay so no no other different difference",
    "start": "1484400",
    "end": "1487520"
  },
  {
    "text": "real",
    "start": "1487520",
    "end": "1488080"
  },
  {
    "text": "really here the the bodies the function",
    "start": "1488080",
    "end": "1491039"
  },
  {
    "text": "body",
    "start": "1491039",
    "end": "1491600"
  },
  {
    "text": "is identical except this max patch size",
    "start": "1491600",
    "end": "1494640"
  },
  {
    "text": "so let's see what happens when we",
    "start": "1494640",
    "end": "1497360"
  },
  {
    "text": "execute",
    "start": "1497360",
    "end": "1498240"
  },
  {
    "text": "the the new function definition with",
    "start": "1498240",
    "end": "1501200"
  },
  {
    "text": "smaller batch size so i'm just going to",
    "start": "1501200",
    "end": "1502720"
  },
  {
    "text": "go ahead and execute this",
    "start": "1502720",
    "end": "1506080"
  },
  {
    "text": "so it took some time it came back it was",
    "start": "1506240",
    "end": "1509679"
  },
  {
    "text": "probably also soft second so",
    "start": "1509679",
    "end": "1511600"
  },
  {
    "text": "let's look at the performance schema",
    "start": "1511600",
    "end": "1513200"
  },
  {
    "text": "output and compare these two up",
    "start": "1513200",
    "end": "1515120"
  },
  {
    "text": "to runtimes and see the",
    "start": "1515120",
    "end": "1518159"
  },
  {
    "text": "you know what kind of observations we",
    "start": "1518159",
    "end": "1519520"
  },
  {
    "text": "have here so",
    "start": "1519520",
    "end": "1521279"
  },
  {
    "text": "let's look at the function without",
    "start": "1521279",
    "end": "1524799"
  },
  {
    "text": "batching",
    "start": "1524799",
    "end": "1525600"
  },
  {
    "text": "and then the function called with",
    "start": "1525600",
    "end": "1527279"
  },
  {
    "text": "batching so here here are the two",
    "start": "1527279",
    "end": "1529039"
  },
  {
    "text": "that i've highlighted so here's the",
    "start": "1529039",
    "end": "1531200"
  },
  {
    "text": "function call",
    "start": "1531200",
    "end": "1532320"
  },
  {
    "text": "with the smaller batch of 100 and here's",
    "start": "1532320",
    "end": "1534400"
  },
  {
    "text": "the default function call where we're",
    "start": "1534400",
    "end": "1536080"
  },
  {
    "text": "batching",
    "start": "1536080",
    "end": "1537200"
  },
  {
    "text": "um 10 000 rows so if you see the",
    "start": "1537200",
    "end": "1540159"
  },
  {
    "text": "difference between these two",
    "start": "1540159",
    "end": "1542000"
  },
  {
    "text": "function runtimes the duration is",
    "start": "1542000",
    "end": "1544400"
  },
  {
    "text": "dramatically different",
    "start": "1544400",
    "end": "1546000"
  },
  {
    "text": "when we batch everything together or 10",
    "start": "1546000",
    "end": "1548320"
  },
  {
    "text": "000 rows together",
    "start": "1548320",
    "end": "1549760"
  },
  {
    "text": "by default we took about 300",
    "start": "1549760",
    "end": "1551919"
  },
  {
    "text": "milliseconds to run",
    "start": "1551919",
    "end": "1553360"
  },
  {
    "text": "when we changed our batch size to much",
    "start": "1553360",
    "end": "1555279"
  },
  {
    "text": "smaller batch which is",
    "start": "1555279",
    "end": "1556720"
  },
  {
    "text": "a hundred our duration for executing the",
    "start": "1556720",
    "end": "1559760"
  },
  {
    "text": "exact same query",
    "start": "1559760",
    "end": "1561679"
  },
  {
    "text": "was one second so you know it's",
    "start": "1561679",
    "end": "1564799"
  },
  {
    "text": "it's just running it's just taking a lot",
    "start": "1564799",
    "end": "1567600"
  },
  {
    "text": "more time three to four times",
    "start": "1567600",
    "end": "1570320"
  },
  {
    "text": "then compared to the to the batched",
    "start": "1570320",
    "end": "1573120"
  },
  {
    "text": "version or the default batching",
    "start": "1573120",
    "end": "1574799"
  },
  {
    "text": "so again just i'm just trying to",
    "start": "1574799",
    "end": "1576000"
  },
  {
    "text": "reiterate this i'm trying to drive this",
    "start": "1576000",
    "end": "1578000"
  },
  {
    "text": "point home",
    "start": "1578000",
    "end": "1578640"
  },
  {
    "text": "that try to batch as many rows as",
    "start": "1578640",
    "end": "1581360"
  },
  {
    "text": "possible to get the best performance out",
    "start": "1581360",
    "end": "1583440"
  },
  {
    "text": "of the sagemaker integration",
    "start": "1583440",
    "end": "1586480"
  },
  {
    "text": "and i'm finally i'm just going to run",
    "start": "1586480",
    "end": "1589120"
  },
  {
    "text": "this",
    "start": "1589120",
    "end": "1589840"
  },
  {
    "text": "quick sub query to kind of demonstrate",
    "start": "1589840",
    "end": "1593840"
  },
  {
    "text": "the",
    "start": "1593840",
    "end": "1594640"
  },
  {
    "text": "the accuracy of the model that we",
    "start": "1594640",
    "end": "1596480"
  },
  {
    "text": "created here",
    "start": "1596480",
    "end": "1597679"
  },
  {
    "text": "so i am correlating",
    "start": "1597679",
    "end": "1601120"
  },
  {
    "text": "the predicted churns with the actual",
    "start": "1601120",
    "end": "1604240"
  },
  {
    "text": "churns",
    "start": "1604240",
    "end": "1604880"
  },
  {
    "text": "so the sagemaker endpoint predicted",
    "start": "1604880",
    "end": "1608159"
  },
  {
    "text": "that based on the information that was",
    "start": "1608159",
    "end": "1609840"
  },
  {
    "text": "sent to it 400 customers will churn",
    "start": "1609840",
    "end": "1612480"
  },
  {
    "text": "the actual observation was 394",
    "start": "1612480",
    "end": "1615760"
  },
  {
    "text": "and 6 did not churn so our accuracy",
    "start": "1615760",
    "end": "1619600"
  },
  {
    "text": "in this case is extremely high so the",
    "start": "1619600",
    "end": "1622559"
  },
  {
    "text": "the sagemaker",
    "start": "1622559",
    "end": "1623919"
  },
  {
    "text": "predictions are almost 98.50 correct",
    "start": "1623919",
    "end": "1629200"
  },
  {
    "text": "okay so that concludes our demo i'd like",
    "start": "1630559",
    "end": "1632880"
  },
  {
    "text": "to take a minute",
    "start": "1632880",
    "end": "1633919"
  },
  {
    "text": "and summarize what we learned here today",
    "start": "1633919",
    "end": "1636480"
  },
  {
    "text": "you can use",
    "start": "1636480",
    "end": "1637200"
  },
  {
    "text": "amazon aura machine learning integration",
    "start": "1637200",
    "end": "1639760"
  },
  {
    "text": "to enrich your relational data and",
    "start": "1639760",
    "end": "1641679"
  },
  {
    "text": "derive insights from it",
    "start": "1641679",
    "end": "1643200"
  },
  {
    "text": "you don't have to be a machine learning",
    "start": "1643200",
    "end": "1644799"
  },
  {
    "text": "expert or a data scientist to do that",
    "start": "1644799",
    "end": "1647360"
  },
  {
    "text": "you don't have to learn any new",
    "start": "1647360",
    "end": "1648720"
  },
  {
    "text": "languages you can continue to use",
    "start": "1648720",
    "end": "1650480"
  },
  {
    "text": "the familiar sql language and you can",
    "start": "1650480",
    "end": "1653840"
  },
  {
    "text": "derive these insights",
    "start": "1653840",
    "end": "1655440"
  },
  {
    "text": "in a online secure and fast environment",
    "start": "1655440",
    "end": "1659520"
  },
  {
    "text": "with that i'd like to thank you i hope",
    "start": "1659520",
    "end": "1661919"
  },
  {
    "text": "you enjoyed this session",
    "start": "1661919",
    "end": "1663200"
  },
  {
    "text": "i hope you enjoyed the demos and i'd",
    "start": "1663200",
    "end": "1665760"
  },
  {
    "text": "like to",
    "start": "1665760",
    "end": "1666399"
  },
  {
    "text": "wish you happy cloud computing from",
    "start": "1666399",
    "end": "1668480"
  },
  {
    "text": "everyone here at aws",
    "start": "1668480",
    "end": "1681840"
  }
]