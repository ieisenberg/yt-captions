[
  {
    "start": "0",
    "end": "69000"
  },
  {
    "text": "[Music]",
    "start": "700",
    "end": "9519"
  },
  {
    "text": "good afternoon everyone thanks for joining us it's beautiful afternoon and I know you have a lot of things to do of",
    "start": "9519",
    "end": "16400"
  },
  {
    "text": "all the things that you share with us your time is the most valuable thing that we can we can cherish so we",
    "start": "16400",
    "end": "21600"
  },
  {
    "text": "appreciate you sharing with us my name is Sundar Raawan and I've been talking to some of our engineers and in case you",
    "start": "21600",
    "end": "28080"
  },
  {
    "text": "didn't know in the language I speak it means handsome so I thought my engineers are being nice to me when they call me",
    "start": "28080",
    "end": "33840"
  },
  {
    "text": "handsome turns out that they have a great sense of humor they are the smart ones and by definition I'm not the smart",
    "start": "33840",
    "end": "40239"
  },
  {
    "text": "one so and then of course I talked to Neil neil said \"Well do you know what it means?\" Neil is our business development",
    "start": "40239",
    "end": "46239"
  },
  {
    "text": "manager neil means apparently get rich so with that stated we I have the",
    "start": "46239",
    "end": "53039"
  },
  {
    "text": "pleasure of bringing two engineers uh two fantastic customers on stage to",
    "start": "53039",
    "end": "58320"
  },
  {
    "text": "share their experience with us my goal is to try and share with you what we have done from a technology perspective",
    "start": "58320",
    "end": "64720"
  },
  {
    "text": "to help you build great applications one of the things that we",
    "start": "64720",
    "end": "69760"
  },
  {
    "start": "69000",
    "end": "69000"
  },
  {
    "text": "realized at Amazon early on is really customers when it comes to building applications they prefer choice till",
    "start": "69760",
    "end": "77439"
  },
  {
    "text": "this day the technology choice that's been available to you is to use relational databases and that works",
    "start": "77439",
    "end": "83680"
  },
  {
    "text": "great if you wanted to build scalable relational applications we give you a",
    "start": "83680",
    "end": "89119"
  },
  {
    "text": "platform which is the relational database as a service and elastic cache that goes along with it we also",
    "start": "89119",
    "end": "95759"
  },
  {
    "text": "recognize a lot of and that's part of our SSQL",
    "start": "95759",
    "end": "100840"
  },
  {
    "text": "movement that's right soon you guys know now what's coming next a lot of you have said well",
    "start": "100840",
    "end": "107280"
  },
  {
    "text": "I don't like SQL and that's part of our NoSQL movement and those of you who are",
    "start": "107280",
    "end": "112960"
  },
  {
    "text": "building applications that are really massive scale particularly webcaling",
    "start": "112960",
    "end": "118640"
  },
  {
    "text": "front-endf facing customercentric applications you could build them in a",
    "start": "118640",
    "end": "124560"
  },
  {
    "text": "non-SSQL way in a very scalable way our goal is not to try and say one is better",
    "start": "124560",
    "end": "130560"
  },
  {
    "text": "than the other we will let your application choice make that to be whatever it is you need need it to be",
    "start": "130560",
    "end": "136400"
  },
  {
    "text": "but our goal is to deliver you the service that you can count on you can rely on continue to innovate and make it",
    "start": "136400",
    "end": "143280"
  },
  {
    "text": "scalable low cost and effective in the first part of the conversation I plan to focus on the green side of the equation",
    "start": "143280",
    "end": "150800"
  },
  {
    "text": "we'll talk about what we have done from a scalability perspective how you can take advantage of it and then we'll also",
    "start": "150800",
    "end": "157120"
  },
  {
    "text": "hear a case study from Flipboard Greg Scallan after that we'll talk about",
    "start": "157120",
    "end": "162319"
  },
  {
    "text": "Dynamo DB and then have a case study on how Earth Networks is making use of it",
    "start": "162319",
    "end": "167920"
  },
  {
    "text": "to build a scalable application the thing that I hear the most from our",
    "start": "167920",
    "end": "173280"
  },
  {
    "start": "171000",
    "end": "171000"
  },
  {
    "text": "customers is the way people have built database applications the old way up",
    "start": "173280",
    "end": "178879"
  },
  {
    "text": "until today or up until now is to primarily focus on scaling with a human",
    "start": "178879",
    "end": "186080"
  },
  {
    "text": "intervention so initially the application starts fine so you have the compute and storage infrastructure then",
    "start": "186080",
    "end": "193200"
  },
  {
    "text": "as the application scales you are now adding more capacity from a buying boxes",
    "start": "193200",
    "end": "198800"
  },
  {
    "text": "buying storage arrays and hooking them together the problem is as your application goes through its peaks and",
    "start": "198800",
    "end": "204560"
  },
  {
    "text": "valleys depending on the seasonality of your application or the nature of your application you are continuing to add",
    "start": "204560",
    "end": "211920"
  },
  {
    "text": "more and more capacity from a physical infrastructure perspective and as you",
    "start": "211920",
    "end": "217280"
  },
  {
    "text": "reach you provision for peak capacity you are stuck with that peak capacity so really the old way is to try and do this",
    "start": "217280",
    "end": "225440"
  },
  {
    "text": "either in an optimistic way or in a reactive way but do always with humans",
    "start": "225440",
    "end": "231599"
  },
  {
    "text": "so you have an army of boxes you have an army of storage arrays and then you have an army of people that are managing all",
    "start": "231599",
    "end": "238640"
  },
  {
    "text": "of this it gets very static it becomes very cumbersome in fact when we speak to",
    "start": "238640",
    "end": "244319"
  },
  {
    "start": "244000",
    "end": "244000"
  },
  {
    "text": "a lot of innovative companies many of you in the room what we consistently hear from customers is the time they",
    "start": "244319",
    "end": "251920"
  },
  {
    "text": "spend on managing these server infrastructure storage infrastructure",
    "start": "251920",
    "end": "257199"
  },
  {
    "text": "backup and recovery often exceeds far exceeds the amount of time they have to",
    "start": "257199",
    "end": "263040"
  },
  {
    "text": "innovate much of the innovation is somewhere between 30 to 40% in actually",
    "start": "263040",
    "end": "268720"
  },
  {
    "text": "scripting and coding and building application and performance optimizing whereas a lot of the time is spent on",
    "start": "268720",
    "end": "276080"
  },
  {
    "text": "database management what our goal at the Amazon RDS team is to really try and",
    "start": "276080",
    "end": "281759"
  },
  {
    "text": "help you make that 40% more like 100% of your time so that you can offload the",
    "start": "281759",
    "end": "287800"
  },
  {
    "text": "remaining management tasks to the AWS engine and that's what we have done in",
    "start": "287800",
    "end": "294080"
  },
  {
    "start": "293000",
    "end": "293000"
  },
  {
    "text": "the new way what you can do with the RDS engine is taking that exact same",
    "start": "294080",
    "end": "299520"
  },
  {
    "text": "application profile but use your application to intelligently determine",
    "start": "299520",
    "end": "304560"
  },
  {
    "text": "what's going on with the database engine database layer and accordingly scale it for example you can add compute you can",
    "start": "304560",
    "end": "312240"
  },
  {
    "text": "add storage programmatically you can add instances you can delete instances",
    "start": "312240",
    "end": "317400"
  },
  {
    "text": "programmatically you can switch uh from single availability zone deployment to",
    "start": "317400",
    "end": "322960"
  },
  {
    "text": "multiple availability zone deployment programmatically through our APIs that way as you reach the peak your",
    "start": "322960",
    "end": "329360"
  },
  {
    "text": "application through its intelligence through the application logic that you have put in is dynamically and very",
    "start": "329360",
    "end": "336400"
  },
  {
    "text": "optimistically managing your capacity and as your application goes to a lower",
    "start": "336400",
    "end": "341440"
  },
  {
    "text": "end you can now have a database that contains all the data possibly managed",
    "start": "341440",
    "end": "347440"
  },
  {
    "text": "by an instance that's smaller than what you started with based on your application profile this is very",
    "start": "347440",
    "end": "354000"
  },
  {
    "text": "different than what we have thought about as databases in the past we have thought about databases as these",
    "start": "354000",
    "end": "359039"
  },
  {
    "text": "untouchable entities where they have to always run and you cannot reboot a database instance whereas what we are",
    "start": "359039",
    "end": "365280"
  },
  {
    "text": "suggesting here is you can make it very elastic it's okay to drive database instances by the app you can add",
    "start": "365280",
    "end": "372160"
  },
  {
    "text": "capacity you can add storage you can do these things programmatically the best part of all of",
    "start": "372160",
    "end": "378800"
  },
  {
    "text": "this is the results are immediate you don't have to wait for someone in IT to",
    "start": "378800",
    "end": "384160"
  },
  {
    "text": "approve adding capacity to your box or you don't have to wait for boxes to show up and cut and open and so on so forth",
    "start": "384160",
    "end": "391360"
  },
  {
    "text": "you free up time that allows you to build scalable applications that's what the database",
    "start": "391360",
    "end": "398000"
  },
  {
    "start": "396000",
    "end": "396000"
  },
  {
    "text": "audience engine is it's we provide you a choice of database engines you can use",
    "start": "398000",
    "end": "404000"
  },
  {
    "text": "MySQL if you're very familiar with MySQL and some of you may be building applications for enterprise customers",
    "start": "404000",
    "end": "410160"
  },
  {
    "text": "that expect you to build it on top of a commercial database engine say for example Oracle we fully support Oracle",
    "start": "410160",
    "end": "418479"
  },
  {
    "text": "as a managed service as well what we mean by managed services you can literally go to the console start a new",
    "start": "418479",
    "end": "425759"
  },
  {
    "text": "database engine and it'll be up and running fully booted up and ready to go in a matter of minutes you can use the",
    "start": "425759",
    "end": "433120"
  },
  {
    "text": "scale compute operation to change the size and shape of that machine from small all the way to 4 XL through your",
    "start": "433120",
    "end": "440880"
  },
  {
    "text": "own architecture you can partition and scale out as you choose to do that's what we mean by push button scalability",
    "start": "440880",
    "end": "448080"
  },
  {
    "text": "we do automatic backups so pretty much every night we take care of backing up",
    "start": "448080",
    "end": "453440"
  },
  {
    "text": "your database you can do a point in time restore very quickly if you choose to",
    "start": "453440",
    "end": "459440"
  },
  {
    "text": "you can also initiate a point in time a snapshot at any time of your choosing so",
    "start": "459440",
    "end": "465680"
  },
  {
    "text": "middle of the day if you feel like you need to have a most accurate copy of your database you can do that",
    "start": "465680",
    "end": "471080"
  },
  {
    "text": "programmatically or by through the console all these services the database services",
    "start": "471080",
    "end": "477120"
  },
  {
    "text": "they work together with everything else you have on the AWS platform it works with EC2 it works with elastic cache you",
    "start": "477120",
    "end": "485360"
  },
  {
    "text": "can connect it with other engines so pretty much your front-end layer the application layer can be on EC2 and your",
    "start": "485360",
    "end": "492800"
  },
  {
    "text": "database is fully managed and ready to go often times I get asked by people how",
    "start": "492800",
    "end": "500240"
  },
  {
    "start": "497000",
    "end": "497000"
  },
  {
    "text": "do I make my database applications perform really well there are lots of different questions that come up first",
    "start": "500240",
    "end": "506000"
  },
  {
    "text": "and foremost people talk about availability as a requirement then they talk about increasing the throughput as",
    "start": "506000",
    "end": "512640"
  },
  {
    "text": "a requirement and then they talk about reducing latency typically when I talk",
    "start": "512640",
    "end": "518080"
  },
  {
    "text": "to customers they've had to have independent projects in terms of increasing reliability or increasing",
    "start": "518080",
    "end": "524080"
  },
  {
    "text": "throughput so these are independent choices that they have been able to make in the old way in the new way the Amazon",
    "start": "524080",
    "end": "531600"
  },
  {
    "text": "RDS way these are choices that are available to you that you can mix and",
    "start": "531600",
    "end": "536640"
  },
  {
    "text": "match for example if you built the application and you go through the development and test cycle and you are",
    "start": "536640",
    "end": "543040"
  },
  {
    "text": "now ready to launch you can push a button and basically make that deployment multi-AZ ready when you do",
    "start": "543040",
    "end": "550480"
  },
  {
    "text": "that we'll talk a little bit more detail about that your application will your database will simultaneously operate in",
    "start": "550480",
    "end": "556959"
  },
  {
    "text": "two different availability zones within a region and be durable and reliable as",
    "start": "556959",
    "end": "563040"
  },
  {
    "text": "you do that you can also increase your read scalability to both instances by",
    "start": "563040",
    "end": "568560"
  },
  {
    "text": "adding a read replica we'll talk about what that means in a moment you can also",
    "start": "568560",
    "end": "574240"
  },
  {
    "text": "put an elastic cache in front of them so that your application performance is",
    "start": "574240",
    "end": "579279"
  },
  {
    "text": "highly optimized these choices are available to you so that you can mix and",
    "start": "579279",
    "end": "584399"
  },
  {
    "text": "match and define the perfect application characteristics that you are choosing the best part is you don't have to",
    "start": "584399",
    "end": "591440"
  },
  {
    "text": "really spend a whole lot of time these are either console UI operation or a",
    "start": "591440",
    "end": "596480"
  },
  {
    "text": "simple API operation looking at push button scaling",
    "start": "596480",
    "end": "602000"
  },
  {
    "start": "600000",
    "end": "600000"
  },
  {
    "text": "you can do scale in two dimensions with RDS one any instance that you start with",
    "start": "602000",
    "end": "607279"
  },
  {
    "text": "database can be scaled up by that I mean you can actually take that from small to",
    "start": "607279",
    "end": "613279"
  },
  {
    "text": "medium to large to extra large quadruple extra large as you do that you may also",
    "start": "613279",
    "end": "619600"
  },
  {
    "text": "find out that your application is growing at a really faster pace than a single instance can handle through your",
    "start": "619600",
    "end": "626000"
  },
  {
    "text": "application architecture you can scale out you can create partitions of data",
    "start": "626000",
    "end": "631600"
  },
  {
    "text": "either on a vertical basis or on a horizontal basis across different engines and have your application",
    "start": "631600",
    "end": "638360"
  },
  {
    "text": "intelligently go after the right partition for the right queries the nice thing is as you do this as part of RDS",
    "start": "638360",
    "end": "645680"
  },
  {
    "text": "all those shards are automatically backed up and at any point with a simple push button you can easily restore them",
    "start": "645680",
    "end": "653360"
  },
  {
    "text": "as you choose to and those snapshots are also available for you on S3 as a as a",
    "start": "653360",
    "end": "660320"
  },
  {
    "text": "object in addition to that part of scaling we talked about the nice thing that you can",
    "start": "660320",
    "end": "666800"
  },
  {
    "start": "662000",
    "end": "662000"
  },
  {
    "text": "do for your end users is given most of the applications have more writes more",
    "start": "666800",
    "end": "671920"
  },
  {
    "text": "reads than writes you can improve the readability of your application by",
    "start": "671920",
    "end": "677120"
  },
  {
    "text": "putting in a read replica in that goes with it you can also use the read",
    "start": "677120",
    "end": "682320"
  },
  {
    "text": "replica to for business intelligence reporting so your production server does not have to take the DSS queries that",
    "start": "682320",
    "end": "688800"
  },
  {
    "text": "will come through your BI tools and that operation is quite literally a simple",
    "start": "688800",
    "end": "694800"
  },
  {
    "text": "console operation as well the difference between our multi-AZ",
    "start": "694800",
    "end": "699880"
  },
  {
    "text": "functionality and this read scaling is the rescaling read replica uses the",
    "start": "699880",
    "end": "705279"
  },
  {
    "text": "native MySQL operation so that the copies are pretty much uh the relicas",
    "start": "705279",
    "end": "710560"
  },
  {
    "text": "are using the MySQL native operation the thing that we all have to prepare",
    "start": "710560",
    "end": "716320"
  },
  {
    "start": "714000",
    "end": "714000"
  },
  {
    "text": "for is um as Wner was saying we we cannot assume why things fail or we",
    "start": "716320",
    "end": "722160"
  },
  {
    "text": "cannot assume things will not fail we have to assume everything will fail",
    "start": "722160",
    "end": "727200"
  },
  {
    "text": "pretty much anytime that you don't expect it to the chaos monkey always rules right in our business so if you",
    "start": "727200",
    "end": "734399"
  },
  {
    "text": "have to prepare for redundancy in the past the typical expensive path has been to try and do that yourselves by",
    "start": "734399",
    "end": "741279"
  },
  {
    "text": "creating an alternate infrastructure with our service we provide you an",
    "start": "741279",
    "end": "748360"
  },
  {
    "start": "744000",
    "end": "744000"
  },
  {
    "text": "enterprisegrade fault tolerance through our multi-AZ capability what happens with this is when you launch an instance",
    "start": "748360",
    "end": "755440"
  },
  {
    "text": "and you say I want to make this multi-AZ behind the scenes RDS service provisions",
    "start": "755440",
    "end": "760720"
  },
  {
    "text": "and creates another copy exact copy of that running in parallel your primary is",
    "start": "760720",
    "end": "767440"
  },
  {
    "text": "always kept in sync with secondary through a synchronous replication technology",
    "start": "767440",
    "end": "773440"
  },
  {
    "text": "when there is a failure on primary for whatever reason whether it's instance failure storage failure network failure",
    "start": "773440",
    "end": "780079"
  },
  {
    "text": "the system automatically detects it and allows you to do a failover upon",
    "start": "780079",
    "end": "785120"
  },
  {
    "text": "failover we also take care of reestablishing the secondary now that the secondary has become the primary",
    "start": "785120",
    "end": "791440"
  },
  {
    "text": "reestablishing the secondary so that you always have both copies all available",
    "start": "791440",
    "end": "797040"
  },
  {
    "text": "and running in sync this is a pretty important technology it's a very cost-effective technology that you can",
    "start": "797040",
    "end": "803680"
  },
  {
    "text": "use for making sure your applications are not only highly scalable but highly",
    "start": "803680",
    "end": "808959"
  },
  {
    "text": "reliable as well the tech the Amazon RDS technology",
    "start": "808959",
    "end": "814160"
  },
  {
    "start": "811000",
    "end": "811000"
  },
  {
    "text": "it's not something that is new it's been in production for close to two years now",
    "start": "814160",
    "end": "820079"
  },
  {
    "text": "thousands of users hundreds of companies are using it every single day in fact",
    "start": "820079",
    "end": "825680"
  },
  {
    "text": "some of the world's largest applications such as Tweet Deck or GMI which is a",
    "start": "825680",
    "end": "831200"
  },
  {
    "text": "very large video gaming company or Sega they all use this one of the most",
    "start": "831200",
    "end": "836720"
  },
  {
    "text": "innovative companies that I have come across in fact my wife uses it all the time is Flipboard they are what the",
    "start": "836720",
    "end": "844240"
  },
  {
    "text": "magazines of tomorrow or a newspaper of tomorrow from what I can tell they have a very interesting very cool application",
    "start": "844240",
    "end": "851440"
  },
  {
    "text": "how they built their application on top of RDS is a pretty unique story i'd like to invite Greg Scallan from Flipboard to",
    "start": "851440",
    "end": "858000"
  },
  {
    "text": "describe that story greg thanks",
    "start": "858000",
    "end": "865120"
  },
  {
    "start": "864000",
    "end": "864000"
  },
  {
    "text": "hi everyone um my name is Greg Scallan i'm",
    "start": "865120",
    "end": "870959"
  },
  {
    "text": "here from Flipboard and um my goal today is to describe to you some of the",
    "start": "870959",
    "end": "876399"
  },
  {
    "text": "challenges that come with making decisions on how to store your data when you decide to uh build an application",
    "start": "876399",
    "end": "884720"
  },
  {
    "text": "that has various requirements um with Flipboard we started the company in",
    "start": "884720",
    "end": "893360"
  },
  {
    "text": "January of 2010 and we wanted to release a product fairly quickly and we came out",
    "start": "893360",
    "end": "899040"
  },
  {
    "text": "with the first release of it in July of 2010 so after about six months and we",
    "start": "899040",
    "end": "904079"
  },
  {
    "text": "went from a very fuzzy description of what we were trying to do and what we thought our users wanted uh to a",
    "start": "904079",
    "end": "911519"
  },
  {
    "text": "shipping working application um and this product really didn't look what it what",
    "start": "911519",
    "end": "916560"
  },
  {
    "text": "it looked like the day we shipped it until about I'd say nine days before we",
    "start": "916560",
    "end": "921920"
  },
  {
    "text": "actually shipped it so we had a lot of changes on the user interface from our",
    "start": "921920",
    "end": "927040"
  },
  {
    "text": "developers as we were constantly changing things around what this required of us was to think",
    "start": "927040",
    "end": "934680"
  },
  {
    "text": "about what is the data that we need in the application and how do we ensure",
    "start": "934680",
    "end": "940399"
  },
  {
    "text": "that it will scale regardless of what the usage will be when we finally ship the product and because we didn't know",
    "start": "940399",
    "end": "946480"
  },
  {
    "text": "what the product was going to look like or what data we needed because we really didn't know what the user interface was",
    "start": "946480",
    "end": "951759"
  },
  {
    "text": "going to look like we needed elasticity we needed the ability to constantly",
    "start": "951759",
    "end": "957120"
  },
  {
    "text": "change where we were storing our data how we were accessing it how we were going to query it um and how we were",
    "start": "957120",
    "end": "964560"
  },
  {
    "text": "going to operate on it and modify it uh so one of the things that we had to",
    "start": "964560",
    "end": "969920"
  },
  {
    "text": "build into this architecture um was the ability to do very complex",
    "start": "969920",
    "end": "975000"
  },
  {
    "text": "operations and to change what those complex operations are fairly quickly within the",
    "start": "975000",
    "end": "980920"
  },
  {
    "text": "product um after we launched today we've gotten we've grown to about 5 million",
    "start": "980920",
    "end": "987199"
  },
  {
    "text": "users and about two billion page flips per month and in our product the page flip is essentially uh it could be",
    "start": "987199",
    "end": "994079"
  },
  {
    "text": "several articles that you quickly see and that you flip through um visually",
    "start": "994079",
    "end": "1002040"
  },
  {
    "text": "so the um in order to do these complex queries uh very quick in order to enable",
    "start": "1002720",
    "end": "1009120"
  },
  {
    "text": "us to do these complex queries uh we decided to go with RDS as our main",
    "start": "1009120",
    "end": "1014639"
  },
  {
    "text": "database solution for the real-time queries that come from end users so if it's a query that's going to come from",
    "start": "1014639",
    "end": "1019920"
  },
  {
    "text": "an end user and it may be complex or it may be simple but it has to be responsive very quickly um we decided to",
    "start": "1019920",
    "end": "1026798"
  },
  {
    "text": "go with RDS because we felt like it was a a known solution that we can uh work",
    "start": "1026799",
    "end": "1032319"
  },
  {
    "text": "with over time that would not run into a variety of other pitfalls that other",
    "start": "1032319",
    "end": "1037520"
  },
  {
    "text": "database uh solutions might um happen with",
    "start": "1037520",
    "end": "1043038"
  },
  {
    "start": "1039000",
    "end": "1039000"
  },
  {
    "text": "you so the um the general architecture of Flipboard service is a very similar",
    "start": "1045240",
    "end": "1052400"
  },
  {
    "text": "end tier application and it's a you got your logic tier and then you got your data tier but within the data tier we",
    "start": "1052400",
    "end": "1058240"
  },
  {
    "text": "have many different databases rds is just one of them we heavily use memcached uh within our product",
    "start": "1058240",
    "end": "1066120"
  },
  {
    "text": "um we got I think maybe 700 gigabytes of memcache right now and it pretty much",
    "start": "1066120",
    "end": "1072240"
  },
  {
    "text": "grows every day and one of our theories with me is if you're ever going to make",
    "start": "1072240",
    "end": "1077760"
  },
  {
    "text": "a query twice and get the same results stick it in memcache whatever it is",
    "start": "1077760",
    "end": "1083080"
  },
  {
    "text": "offload your queries from your database because given the type of social",
    "start": "1083080",
    "end": "1088320"
  },
  {
    "text": "application we are where you're building highly relevant data based on what people are doing what their friends are",
    "start": "1088320",
    "end": "1094960"
  },
  {
    "text": "doing and that they care about what's happened in the last few minutes in real time you're doing a ton of writes to",
    "start": "1094960",
    "end": "1100799"
  },
  {
    "text": "these databases so that when that user does come in they have that information readily accessible to them at that",
    "start": "1100799",
    "end": "1107679"
  },
  {
    "text": "moment which means you have to minimize everything else you do in those databases so we went through the architectural",
    "start": "1107679",
    "end": "1114640"
  },
  {
    "text": "approach of just memcache everything as often as you can and then your databases",
    "start": "1114640",
    "end": "1120400"
  },
  {
    "text": "will have a lot more life to work off of um in addition to that there's a lot of",
    "start": "1120400",
    "end": "1126720"
  },
  {
    "text": "processing that occurs in the background um since we're a social magazine we do a lot of content processing we're looking",
    "start": "1126720",
    "end": "1133120"
  },
  {
    "text": "at web pages we're analyzing we're doing topic extraction categorization when",
    "start": "1133120",
    "end": "1138480"
  },
  {
    "text": "your friends and your social networks that you've signed us up with are looking at stuff and they're sharing stuff with you and you're commenting on",
    "start": "1138480",
    "end": "1144480"
  },
  {
    "text": "it with them we're looking to see what it is about that information that you care about so that we can provide you",
    "start": "1144480",
    "end": "1150320"
  },
  {
    "text": "with more relevant articles that you would care about all this is happening in the background for us using a NoSQL",
    "start": "1150320",
    "end": "1157440"
  },
  {
    "text": "solution um because of the massive scalability that we need for that architecture but in the end what it's",
    "start": "1157440",
    "end": "1164400"
  },
  {
    "text": "going to do is produce some numbers some pieces of information that are going to go into this RDS database that we're",
    "start": "1164400",
    "end": "1170559"
  },
  {
    "text": "going to make available to those real-time requests uh to ensure that we can deliver those",
    "start": "1170559",
    "end": "1177200"
  },
  {
    "text": "features in a timely manner um so you can see that we have uh an elastic cache type front end for all",
    "start": "1177200",
    "end": "1184080"
  },
  {
    "text": "this data which fronts MySQL um on the back end the uh simple DB is something",
    "start": "1184080",
    "end": "1190240"
  },
  {
    "text": "that is a kind of I consider a precursor to Dynamob but it's what we use for all of our operational stuff one of the",
    "start": "1190240",
    "end": "1196320"
  },
  {
    "text": "perks that we found of of using that for instance over MySQL is that the management is just a lot easier it's",
    "start": "1196320",
    "end": "1202640"
  },
  {
    "text": "just a database that happens to be there if you're doing simple queries just doing your gets and your puts out of it",
    "start": "1202640",
    "end": "1208240"
  },
  {
    "text": "tends to be a lot simpler and easier and safer and more reliable than having to worry about some of the additional",
    "start": "1208240",
    "end": "1214720"
  },
  {
    "text": "complexities of managing an actual SQL database um this is an example of what",
    "start": "1214720",
    "end": "1222320"
  },
  {
    "text": "the front page might look like of Flipboard when you go into it um and you can see that in the lower lefthand",
    "start": "1222320",
    "end": "1229520"
  },
  {
    "text": "corner this is simply a picture that was shared from one of my friends so the minute you launch the application we've",
    "start": "1229520",
    "end": "1235200"
  },
  {
    "text": "already surfaced a variety of articles and photos that have been shared with",
    "start": "1235200",
    "end": "1240320"
  },
  {
    "text": "you through your social network into the product as soon as you get into it um in",
    "start": "1240320",
    "end": "1246320"
  },
  {
    "text": "the upper right hand corner is a preview of some of the more relevant stuff that has happened very recently that you",
    "start": "1246320",
    "end": "1252080"
  },
  {
    "text": "might care about looking at and you can click into there to essentially get more details within there and it keeps going",
    "start": "1252080",
    "end": "1258880"
  },
  {
    "text": "deeper and deeper as you go into these articles you'll learn more about well for each specific article who's um you",
    "start": "1258880",
    "end": "1266080"
  },
  {
    "text": "know commenting on it who's liking it which of your friends care about it uh and so all this information is being",
    "start": "1266080",
    "end": "1272640"
  },
  {
    "text": "stored over in MySQL so that we can aggregate it very quickly and present it",
    "start": "1272640",
    "end": "1278480"
  },
  {
    "text": "to the user",
    "start": "1278480",
    "end": "1283760"
  },
  {
    "text": "um some tips for RDS that we've learned in using it uh the first one is that you",
    "start": "1283880",
    "end": "1290640"
  },
  {
    "text": "should leverage the cloud for what the cloud is good at which is elasticity if you go into a cloud and you start taking",
    "start": "1290640",
    "end": "1299200"
  },
  {
    "text": "some of your old mentality ways of building your own data center managing",
    "start": "1299200",
    "end": "1304480"
  },
  {
    "text": "subnets and routers and access control list at the IP level you're basically",
    "start": "1304480",
    "end": "1309520"
  },
  {
    "text": "doing a lot of work that you don't need to and you're wasting a lot of time it is much better to just hop on the",
    "start": "1309520",
    "end": "1314960"
  },
  {
    "text": "bandwagon and learn how to implement the security and networking mechanisms that",
    "start": "1314960",
    "end": "1320240"
  },
  {
    "text": "give you that ability to quickly expand when you need to be able to expand and then leverage that in your application",
    "start": "1320240",
    "end": "1327280"
  },
  {
    "text": "don't confine yourself to doing really complex designs limiting what you can do when you find there some new feature you",
    "start": "1327280",
    "end": "1333679"
  },
  {
    "text": "wish you had and you could do quickly but your model isn't going to support that um for scaling up with RDS it's",
    "start": "1333679",
    "end": "1341360"
  },
  {
    "text": "real simple you start with a low-end database you monitor it you hit a button you get a bigger one um there's really",
    "start": "1341360",
    "end": "1348480"
  },
  {
    "text": "not much more to say say about it than that the uh the amount of time it takes to go from a lower-end instance to a",
    "start": "1348480",
    "end": "1354640"
  },
  {
    "text": "higherend instance I found we found is very quick and very easy to do um",
    "start": "1354640",
    "end": "1359840"
  },
  {
    "text": "another tip I found that a 500 gigabyte database just go with a larger size database because it tends to get a lot",
    "start": "1359840",
    "end": "1365200"
  },
  {
    "text": "better IO performance than if you start with a much smaller say 32 GB database",
    "start": "1365200",
    "end": "1370240"
  },
  {
    "text": "only because you only need a smaller one um the larger ones tend to have what seems to be much more reliable",
    "start": "1370240",
    "end": "1377120"
  },
  {
    "text": "performance across the board um if you don't have complex data you",
    "start": "1377120",
    "end": "1383679"
  },
  {
    "text": "have real simple data something other than and you don't need to do SQL something other than RDS would probably",
    "start": "1383679",
    "end": "1389520"
  },
  {
    "text": "be a better solution um even though RDS is managed you still have to do stuff",
    "start": "1389520",
    "end": "1394640"
  },
  {
    "text": "with it and manage it you can run out of you can run out of space you can run out",
    "start": "1394640",
    "end": "1399919"
  },
  {
    "text": "of performance and you're going to have to deal with that other solutions out there that have sharding built in for",
    "start": "1399919",
    "end": "1405760"
  },
  {
    "start": "1404000",
    "end": "1404000"
  },
  {
    "text": "instance like Dynamo DB where you don't have to worry about it you get that for free so if you don't actually need that",
    "start": "1405760",
    "end": "1411919"
  },
  {
    "text": "uh mechanisms for quering the data you don't necessarily want to go ahead and do that",
    "start": "1411919",
    "end": "1417280"
  },
  {
    "text": "um another little tip we learned was uh write read and write IO performance if",
    "start": "1417280",
    "end": "1423600"
  },
  {
    "text": "you have a large database tens of millions of rows or whatever it is um",
    "start": "1423600",
    "end": "1428720"
  },
  {
    "text": "and you do some queries that can be pretty harsh on it readwise that will",
    "start": "1428720",
    "end": "1434799"
  },
  {
    "text": "affect your ability to perform at scale rightwise likewise doing say map produce",
    "start": "1434799",
    "end": "1440559"
  },
  {
    "text": "jobs that will decide I want to blast 10,000 records into my SQL database to make them available to someone is also",
    "start": "1440559",
    "end": "1447760"
  },
  {
    "text": "not a very good thing that can cause things to kind of freeze up for a brief period of time it's much better to",
    "start": "1447760",
    "end": "1453679"
  },
  {
    "text": "spread those jobs out over the over some period of time to give it a little bit more of a breather for the read",
    "start": "1453679",
    "end": "1459919"
  },
  {
    "text": "operations what we found is that if you find that your your right IO is being impacted quite often it's because of an",
    "start": "1459919",
    "end": "1465600"
  },
  {
    "text": "expensive read operation we just go ahead and uh hit a button and create a read replica and then move those gnarly",
    "start": "1465600",
    "end": "1472559"
  },
  {
    "text": "read operations off to the read replica as long as it doesn't require that the data is 100% accurate up up to date you",
    "start": "1472559",
    "end": "1478960"
  },
  {
    "text": "know for instance if you're looking to do a count of records or if you're looking to get a a general feel for",
    "start": "1478960",
    "end": "1484799"
  },
  {
    "text": "certain data but it doesn't have to be absolutely correct because the user needs to know that it's accurate 100%",
    "start": "1484799",
    "end": "1490880"
  },
  {
    "text": "and able to modify it um and that's something that we've leveraged quite a",
    "start": "1490880",
    "end": "1495960"
  },
  {
    "text": "bit um RDS is still SQL you're not going to get around that there's nothing that",
    "start": "1495960",
    "end": "1501600"
  },
  {
    "text": "RDS is going to help you when it comes to um optimizing your system for doing",
    "start": "1501600",
    "end": "1507919"
  },
  {
    "text": "very well at SQL performance you're still going to have to use all the same techniques and strategies that you use",
    "start": "1507919",
    "end": "1513520"
  },
  {
    "text": "today to perform well within an SQL database so you got to make sure you do",
    "start": "1513520",
    "end": "1518799"
  },
  {
    "text": "your your joins the right way and your indexes and everything is set up properly",
    "start": "1518799",
    "end": "1524320"
  },
  {
    "text": "um one of the things that I really love about using RDS is they have um daily",
    "start": "1524320",
    "end": "1529600"
  },
  {
    "text": "snapshots and they also have you know you know point and instant uh backups",
    "start": "1529600",
    "end": "1534799"
  },
  {
    "text": "but every night at a certain time we get a certain backup and so from a development perspective what I tend to",
    "start": "1534799",
    "end": "1540320"
  },
  {
    "text": "do is I'll wake up the next day and I'll create a whole new database instance from a previous snapshot of real data",
    "start": "1540320",
    "end": "1545760"
  },
  {
    "text": "and I will test some new code I'm writing against that new snapshot of",
    "start": "1545760",
    "end": "1550960"
  },
  {
    "text": "database instance it allows me to actually operate on data that's pretty much close to real time with what our",
    "start": "1550960",
    "end": "1557760"
  },
  {
    "text": "users are seeing without worrying about messing with the real data over in a separate sandbox um and this all happens",
    "start": "1557760",
    "end": "1565039"
  },
  {
    "text": "without having to do MySQL dumps and and other stuff yourself in order to make sure it all goes in there it's all",
    "start": "1565039",
    "end": "1570799"
  },
  {
    "text": "basically readily available and you can just kick it off and then you have a new database to operate off of",
    "start": "1570799",
    "end": "1577080"
  },
  {
    "text": "um and finally the one uh thing I want to mention is for RDS you still have to",
    "start": "1577080",
    "end": "1582480"
  },
  {
    "text": "worry about scaling horizontally um if you are going to uh have lots of users",
    "start": "1582480",
    "end": "1590559"
  },
  {
    "text": "with lots of RIDO operations you're eventually going to be hit with the situation where the largest size",
    "start": "1590559",
    "end": "1596000"
  },
  {
    "text": "database is not going to be good enough for you and you're going to have to start building out more and more databases and pick which database you're",
    "start": "1596000",
    "end": "1602720"
  },
  {
    "text": "going to go to for each operation uh typically what what we've done or people do is to just charge based on the user",
    "start": "1602720",
    "end": "1609679"
  },
  {
    "text": "ID right if you're an oper based on users you just figure out a hash based",
    "start": "1609679",
    "end": "1615360"
  },
  {
    "text": "on your user and then you pick the right database and then you map them over to that",
    "start": "1615360",
    "end": "1620760"
  },
  {
    "text": "um and so those are pretty much the tips that I have from our experiences over at Flipboard thank you that's an awesome",
    "start": "1620760",
    "end": "1628400"
  },
  {
    "text": "awesome presentation i think a lot of things that I uh especially when my my wife goes through Flipboard on our iPad",
    "start": "1628400",
    "end": "1635760"
  },
  {
    "text": "she always says \"Is this the one that you guys are helping?\" I said \"No our part is really small they are the",
    "start": "1635760",
    "end": "1641200"
  },
  {
    "text": "innovators.\" So fantastic thanks Greg um so there is always this debate to say",
    "start": "1641200",
    "end": "1647840"
  },
  {
    "text": "yes to SQL or to say no to SQL and we think that kind of a dialogue is not",
    "start": "1647840",
    "end": "1654559"
  },
  {
    "start": "1653000",
    "end": "1653000"
  },
  {
    "text": "super effective we think you as application architects you as data owners you as innovators have to have",
    "start": "1654559",
    "end": "1661360"
  },
  {
    "text": "that choice and you have to be able to make that choice based on a variety of trade-offs that are obvious to you that",
    "start": "1661360",
    "end": "1668159"
  },
  {
    "text": "you need to deliberate and you need to debate and figure it out for example it's not an exhaustive list but you can",
    "start": "1668159",
    "end": "1674880"
  },
  {
    "text": "certainly take a look at it and say is my application an existing database application is this a business process",
    "start": "1674880",
    "end": "1681440"
  },
  {
    "text": "ccentric app where I have to go through a complex relational data model workflow",
    "start": "1681440",
    "end": "1686720"
  },
  {
    "text": "process flow and other things in that case you might want to stick with the relational model RDS model and then",
    "start": "1686720",
    "end": "1694159"
  },
  {
    "text": "properly design it to scale up as well as scale out as Greg was saying clearly",
    "start": "1694159",
    "end": "1700480"
  },
  {
    "text": "you'll have to take some matters in your hand particularly the scale out part of it from a sharding perspective on the",
    "start": "1700480",
    "end": "1706799"
  },
  {
    "text": "other hand if you are rethinking this application you built it with existing technology 10 years ago 5 years ago now",
    "start": "1706799",
    "end": "1714559"
  },
  {
    "text": "you want to be completely social completely mobile completely go to the new world you might want to think about",
    "start": "1714559",
    "end": "1720720"
  },
  {
    "text": "simplifying the data model build it for web scale and do a large number of small",
    "start": "1720720",
    "end": "1725840"
  },
  {
    "text": "writes and reads and your transactional semantics might be a lot simpler than",
    "start": "1725840",
    "end": "1731120"
  },
  {
    "text": "what your relational model can provide in that case you might want to choose DynamoB in particular if you want to",
    "start": "1731120",
    "end": "1738320"
  },
  {
    "text": "think about scale you might want to think about a very clear choice of is",
    "start": "1738320",
    "end": "1743600"
  },
  {
    "text": "this going to be architected by a DBA or an application or is this need to be",
    "start": "1743600",
    "end": "1749360"
  },
  {
    "text": "completely seamless and the system does the work for you this is a very",
    "start": "1749360",
    "end": "1754799"
  },
  {
    "text": "important conversation within your engineering team your application development team a equally important",
    "start": "1754799",
    "end": "1761919"
  },
  {
    "text": "conversation is also the skill set that you have at the end of the day we are all racing to meet a particular market",
    "start": "1761919",
    "end": "1767840"
  },
  {
    "text": "demand your users have patience but only that much which means you have to get new applications really fast so you",
    "start": "1767840",
    "end": "1774640"
  },
  {
    "text": "might want to take advantage of the skill set that you have going to a new model such as Dynamo DB while it's going",
    "start": "1774640",
    "end": "1781440"
  },
  {
    "text": "to give you a lot of benefits may require you to augment your skills in the team you need to know the web style",
    "start": "1781440",
    "end": "1787440"
  },
  {
    "text": "of programming once once you think about all of that and you choose to go through",
    "start": "1787440",
    "end": "1792480"
  },
  {
    "text": "the scale you can really think about how you your applications requirement",
    "start": "1792480",
    "end": "1798200"
  },
  {
    "start": "1793000",
    "end": "1793000"
  },
  {
    "text": "evolves these days given the mobile and social world that we live in customer",
    "start": "1798200",
    "end": "1803440"
  },
  {
    "text": "expectation is to have consistent predictable high",
    "start": "1803440",
    "end": "1808919"
  },
  {
    "text": "performance the older technologies can create a graph that looks like the red",
    "start": "1808919",
    "end": "1814080"
  },
  {
    "text": "line what that means is to catch up to the performance expectations your users have you will have to be deal dealing",
    "start": "1814080",
    "end": "1821039"
  },
  {
    "text": "with a lot of management issues on your own that's why you know as Verer was",
    "start": "1821039",
    "end": "1827120"
  },
  {
    "text": "showing go faster and faster on higher and higher scale from scaling from",
    "start": "1827120",
    "end": "1832720"
  },
  {
    "text": "architecture perspective to scaling by demand that's the model that we want to propose and that really means really",
    "start": "1832720",
    "end": "1840640"
  },
  {
    "start": "1840000",
    "end": "1840000"
  },
  {
    "text": "Amazon Dynamob from our perspective several years ago I think it's like six",
    "start": "1840640",
    "end": "1846000"
  },
  {
    "text": "or seven years ago when the Dynamo DB team was responsible for building this for our company they came up with a set",
    "start": "1846000",
    "end": "1853520"
  },
  {
    "text": "of requirements that was codified in a paper the original paper that we wrote that's what we learned seven over the",
    "start": "1853520",
    "end": "1860080"
  },
  {
    "text": "seven years we took the time to learn how to operate this as a service on our own nickel and dime now we are",
    "start": "1860080",
    "end": "1866159"
  },
  {
    "text": "transitioning that and launch have launched it as a service that you can take advantage of first and foremost we",
    "start": "1866159",
    "end": "1872159"
  },
  {
    "text": "designed with ease of administration in mind which means for all the sharding and other scaling you don't have to do",
    "start": "1872159",
    "end": "1879039"
  },
  {
    "text": "anything you just literally quite literally dial it up or dial it down system manages itself we designed for",
    "start": "1879039",
    "end": "1885200"
  },
  {
    "text": "performance we built it on latest state-of-the-art solid state technology so you get the best read write",
    "start": "1885200",
    "end": "1891960"
  },
  {
    "text": "capabilities we also allow you to reserve the capacity that you need that way you don't have to worry about will",
    "start": "1891960",
    "end": "1898000"
  },
  {
    "text": "you have the scale that you need last but not least is the throughput parts of",
    "start": "1898000",
    "end": "1903440"
  },
  {
    "text": "it is really something you don't have to worry about you can start with the smallest throughput application scale it",
    "start": "1903440",
    "end": "1910080"
  },
  {
    "text": "up completely on demand and scale it down as you see fit this is very different than the way",
    "start": "1910080",
    "end": "1917279"
  },
  {
    "start": "1916000",
    "end": "1916000"
  },
  {
    "text": "you would have thought about managing databases this is about providing fast predictable performance",
    "start": "1917279",
    "end": "1923440"
  },
  {
    "text": "this is about providing seamless scalability this is not about managing lots and lots of little databases from a",
    "start": "1923440",
    "end": "1930080"
  },
  {
    "text": "fully sharded perspective most importantly this is all about simplifying the administration of the",
    "start": "1930080",
    "end": "1937760"
  },
  {
    "text": "database this is actually something Matt Wood shared with the development team developer summit that we had yesterday",
    "start": "1937799",
    "end": "1944480"
  },
  {
    "text": "what we are showing you here is what do we mean by high performance on one axis",
    "start": "1944480",
    "end": "1949919"
  },
  {
    "text": "particularly this you know as you can see the the CPU performance is been",
    "start": "1949919",
    "end": "1955279"
  },
  {
    "text": "going up and down this is how intensive the processor is working on the other",
    "start": "1955279",
    "end": "1960320"
  },
  {
    "text": "hand you can see the get latency which is shown as pretty much like a flat line",
    "start": "1960320",
    "end": "1965760"
  },
  {
    "text": "that's what the dynamob database performance is so when you just suppose your CPU how intensely it's working",
    "start": "1965760",
    "end": "1972640"
  },
  {
    "text": "versus your IO performance performance which is really really rock solid stable and very you know millisecond",
    "start": "1972640",
    "end": "1979120"
  },
  {
    "text": "performance singledigit millisecond performance you can really see how your application is going to perform super",
    "start": "1979120",
    "end": "1985200"
  },
  {
    "text": "optimally for your users this model is also very different than",
    "start": "1985200",
    "end": "1991120"
  },
  {
    "start": "1987000",
    "end": "1987000"
  },
  {
    "text": "how you typically buy databases here just like the way you buy your cable company channels or you buy electricity",
    "start": "1991120",
    "end": "1998320"
  },
  {
    "text": "or you buy cell phone plans here you reserve the throughput that you want you",
    "start": "1998320",
    "end": "2003360"
  },
  {
    "text": "set a table creation you can programmatically change it via API call you just pay a penny for every 10 units",
    "start": "2003360",
    "end": "2010480"
  },
  {
    "text": "of write or every a penny for every 50 units of read very simple",
    "start": "2010480",
    "end": "2016559"
  },
  {
    "text": "straightforward model all programmers know the size of the objects that you're reading or writing reading from or",
    "start": "2016559",
    "end": "2022880"
  },
  {
    "text": "writing to and it's very straightforward to calculate what the cost of your operations would be you don't need to",
    "start": "2022880",
    "end": "2028799"
  },
  {
    "text": "worry about small instance large instance extra large instance you don't need to think about input output all of",
    "start": "2028799",
    "end": "2035120"
  },
  {
    "text": "that things it's a very straightforward model from a performance perspective once again since we launched",
    "start": "2035120",
    "end": "2042799"
  },
  {
    "start": "2040000",
    "end": "2040000"
  },
  {
    "text": "this technology uh in January we have seen unbelievable adoption we literally have thousands of users using this um",
    "start": "2042799",
    "end": "2050800"
  },
  {
    "text": "DynamoDeb has been one of the most fastest growing from an adoption",
    "start": "2050800",
    "end": "2055919"
  },
  {
    "text": "perspective within the AWS services to hear a firsthand experience",
    "start": "2055919",
    "end": "2061679"
  },
  {
    "text": "of an incredibly cool application I'd like to invite the Earth Networks team they have built an awesome awesome",
    "start": "2061679",
    "end": "2068040"
  },
  {
    "text": "application come on in [Applause]",
    "start": "2068040",
    "end": "2078560"
  },
  {
    "text": "thank you yeah you're welcome Eddie thank you can you hear me",
    "start": "2078560",
    "end": "2084440"
  },
  {
    "text": "okay good afternoon we're Earth Networks i'm Eric",
    "start": "2084440",
    "end": "2091839"
  },
  {
    "text": "Weller uh director of development with Edward Dingles uh he's the technical",
    "start": "2091839",
    "end": "2097760"
  },
  {
    "text": "lead for uh the Dynamo DB implementation um I'm going to do the first couple",
    "start": "2097760",
    "end": "2103200"
  },
  {
    "text": "slides uh to give a brief overview uh and then Edward will come up and take over the technical analysis and the",
    "start": "2103200",
    "end": "2109680"
  },
  {
    "text": "technical solution who is Earth Networks uh Earth",
    "start": "2109680",
    "end": "2115119"
  },
  {
    "start": "2113000",
    "end": "2113000"
  },
  {
    "text": "Networks owns and operates the largest weather network in the world uh it's about five to six times larger than the",
    "start": "2115119",
    "end": "2122480"
  },
  {
    "text": "National Weather Service uh the data that we gather on this network we uh",
    "start": "2122480",
    "end": "2128240"
  },
  {
    "text": "store we analyze we provide it to consumers to governments to scientists",
    "start": "2128240",
    "end": "2134560"
  },
  {
    "text": "so that they can get a better understanding uh of what's going on with the planet uh we also have our newest uh",
    "start": "2134560",
    "end": "2142400"
  },
  {
    "text": "productized sensor network which is for lightning uh that output is used to",
    "start": "2142400",
    "end": "2148720"
  },
  {
    "text": "pinpoint uh lightning strikes it's also um the best indicator of when there's",
    "start": "2148720",
    "end": "2156720"
  },
  {
    "text": "dangerous weather uh in the area uh we also are the owner of the weatherbug",
    "start": "2156720",
    "end": "2162800"
  },
  {
    "text": "brand of products uh that you can get all this data from as well as we have",
    "start": "2162800",
    "end": "2168480"
  },
  {
    "text": "over 30 million users on these products so our problem uh our CEO probably a lot",
    "start": "2168480",
    "end": "2176320"
  },
  {
    "start": "2173000",
    "end": "2173000"
  },
  {
    "text": "of you uh have uh your CEO or someone high up come to you and give you a nice",
    "start": "2176320",
    "end": "2181520"
  },
  {
    "text": "challenge so our CEO comes to us and uh he's a founder of the company as well uh",
    "start": "2181520",
    "end": "2186880"
  },
  {
    "text": "comes to us and basically asks us um how can we get this uh great lightning data",
    "start": "2186880",
    "end": "2193040"
  },
  {
    "text": "um and you know I'm outside a lot i'm outside with my family i'm on athletic fields um playing golf uh enjoying the",
    "start": "2193040",
    "end": "2201599"
  },
  {
    "text": "weather uh so how can I get this information that's relevant to me while",
    "start": "2201599",
    "end": "2206880"
  },
  {
    "text": "I'm outside on my mobile device uh to provide safety safety to the",
    "start": "2206880",
    "end": "2212599"
  },
  {
    "text": "consumer uh and we had a lot of constraints uh one of them was how do we",
    "start": "2212599",
    "end": "2218079"
  },
  {
    "text": "how do we do this geospatially we have this real time oop sorry real-time lightning data coming in um as well as",
    "start": "2218079",
    "end": "2225200"
  },
  {
    "text": "we have mobile users that are moving so two dynamic data sets so we had to do geospatial queries it also had to be",
    "start": "2225200",
    "end": "2231920"
  },
  {
    "text": "scalable uh we have a out of the box we have or we have six million users currently uh we also have 100%",
    "start": "2231920",
    "end": "2239359"
  },
  {
    "text": "year-over-year growth um and severe weather outbreaks drive high data rates",
    "start": "2239359",
    "end": "2244560"
  },
  {
    "text": "and high usage uh from our uh consumers ers it needed to be fast um fast speed",
    "start": "2244560",
    "end": "2252800"
  },
  {
    "text": "plus accuracy equals safety and we want our consumers of our products to feel",
    "start": "2252800",
    "end": "2258040"
  },
  {
    "text": "safe uh we also had a very short window of time reduce time to market and we",
    "start": "2258040",
    "end": "2264079"
  },
  {
    "text": "needed to have a low cost of ownership at this time I'd like to welcome Edward to the podium",
    "start": "2264079",
    "end": "2272599"
  },
  {
    "start": "2274000",
    "end": "2274000"
  },
  {
    "text": "all right so I'm gonna kind of dive into the technical stuff um what I'd like to kind of do first is review fundamentally",
    "start": "2274000",
    "end": "2279359"
  },
  {
    "text": "we had a spatial problem here so there's a set of lightning data that's real time all right spatially located and we have",
    "start": "2279359",
    "end": "2284880"
  },
  {
    "text": "set of users they're moving about in the world what we really want to do is take those two sets of data and sort of mash",
    "start": "2284880",
    "end": "2290560"
  },
  {
    "text": "them together for every user we want to produce the closest and most relevant set of lightning data for them and doing",
    "start": "2290560",
    "end": "2296560"
  },
  {
    "text": "this all in real time so when we came to this problem what we decided to do was look at a three- tiered architecture",
    "start": "2296560",
    "end": "2302240"
  },
  {
    "text": "approach we were going to have a front-end web tier which we'd put behind ELB and use autoscaling to meet user",
    "start": "2302240",
    "end": "2307800"
  },
  {
    "text": "demand what we'd have is a middle data tier which we wanted to be consistent durable and highly available and then a",
    "start": "2307800",
    "end": "2313920"
  },
  {
    "text": "backend management tier for loading the data and putting the data uh into whatever data tier we needed so we kind",
    "start": "2313920",
    "end": "2320400"
  },
  {
    "text": "of had the opportunity to look through a couple different data tiers and that's what we want to focus on today and one of the first things we looked at was SQL",
    "start": "2320400",
    "end": "2326720"
  },
  {
    "text": "Server 2008 and really the spatial component here so one of the things is uh SQL spatial is pretty efficient at an",
    "start": "2326720",
    "end": "2333200"
  },
  {
    "text": "answering the spatial question and can scale out pretty well uh but one of the",
    "start": "2333200",
    "end": "2338240"
  },
  {
    "text": "things is there's a very high cost of ownership you have to pay for licensing you have to pay for administration and you know",
    "start": "2338240",
    "end": "2344800"
  },
  {
    "text": "fundamentally we wanted to constrain the problem and drive down the cost of ownership here so we started looking at",
    "start": "2344800",
    "end": "2350400"
  },
  {
    "text": "my SQL which has a lower cost of ownership in terms of the licensing constraints but a much higher cost of",
    "start": "2350400",
    "end": "2356480"
  },
  {
    "text": "still a high cost of ownership in terms of DBA administration also I should note that fundamentally Earth Networks is a",
    "start": "2356480",
    "end": "2362960"
  },
  {
    "text": "Microsoft shop we do a lot of work with uhnet and SQL server so my SQL wasn't",
    "start": "2362960",
    "end": "2368079"
  },
  {
    "text": "really in our wheelhouse which is why I have a high engineering cost here whereas with SQL Server Spatial we're",
    "start": "2368079",
    "end": "2373200"
  },
  {
    "text": "very familiar with it and I've used it a lot for doing a number of different things uh my SQL wasn't really uh sort",
    "start": "2373200",
    "end": "2378480"
  },
  {
    "text": "of in our wheelhouse so the other thing we've done a lot of since we've worked with spatial data at Earth networks a",
    "start": "2378480",
    "end": "2383599"
  },
  {
    "text": "lot is we have a number of in-memory structures we use quad trees KD trees for doing spatial analysis now these",
    "start": "2383599",
    "end": "2389200"
  },
  {
    "text": "in-memory structures are very good they have a very high throughput for spatial queries however the engineering cost is",
    "start": "2389200",
    "end": "2394480"
  },
  {
    "text": "very high since these are all custom rolled applications the good news here is the cost of ownership is a little",
    "start": "2394480",
    "end": "2400320"
  },
  {
    "text": "less all we would really be paying for is the Amazon EC2 instances we can scale these instances out using either uh",
    "start": "2400320",
    "end": "2406960"
  },
  {
    "text": "autoscaling and place them behind ELBs so the management there is a little bit easier in terms of of the instances",
    "start": "2406960",
    "end": "2413520"
  },
  {
    "text": "however we we ourselves need to maintain consistency at the data level right so with SQL sorry with SQL server we have",
    "start": "2413520",
    "end": "2421119"
  },
  {
    "text": "different options for maintaining consistency whether we're looking at clustering or sharding or things like these but with custom solutions we would",
    "start": "2421119",
    "end": "2426880"
  },
  {
    "text": "have to build all the logic to maintain consistency between these instances uh about a year ago our company started",
    "start": "2426880",
    "end": "2434160"
  },
  {
    "text": "moving all of our physical data centers into Amazon and so far we've closed actually four physical data centers and",
    "start": "2434160",
    "end": "2439839"
  },
  {
    "text": "so what we started to do was look at some Amazon technologies here to possibly help us with this problem and",
    "start": "2439839",
    "end": "2445359"
  },
  {
    "text": "one of the pieces we looked at was memcache now memcache was fairly good and was very highly efficient at",
    "start": "2445359",
    "end": "2451119"
  },
  {
    "text": "answering part of the spatial query for us in terms of development it was very easy to work with but we still had to",
    "start": "2451119",
    "end": "2456319"
  },
  {
    "text": "manage the instances and when we got this problem DynamoB had just come out about a month earlier and we started",
    "start": "2456319",
    "end": "2462240"
  },
  {
    "text": "working with it and literally on the first day we were get able to provision it get it up and running and start working with it the throughput of it is",
    "start": "2462240",
    "end": "2468960"
  },
  {
    "text": "just as high as memcache are relatively as high as our in-memory uh structures",
    "start": "2468960",
    "end": "2474079"
  },
  {
    "text": "but the engineering cost to working with it is extremely low also the cost of ownership here is is very low from an",
    "start": "2474079",
    "end": "2480319"
  },
  {
    "text": "administration perspective and the ability to just scale it out so now I kind of want to go into the solution we",
    "start": "2480319",
    "end": "2486319"
  },
  {
    "start": "2484000",
    "end": "2484000"
  },
  {
    "text": "did using Dynamo and uh you know one of the things here was we had uh spatially",
    "start": "2486319",
    "end": "2493839"
  },
  {
    "text": "located data right it's latitude and longitude but DynamoB is a key valued database and really you have the option",
    "start": "2493839",
    "end": "2499920"
  },
  {
    "text": "of using a hash key and a range key and so what we decided to do is we would geohash our lightning data and what this",
    "start": "2499920",
    "end": "2505280"
  },
  {
    "text": "is it's a way of taking a latitude and longitude and reducing it to a single value and fundamentally what this does",
    "start": "2505280",
    "end": "2510720"
  },
  {
    "text": "is create buckets inside of Dynamo So what we did is we have our backend services which are constantly taking in",
    "start": "2510720",
    "end": "2516400"
  },
  {
    "text": "this real-time stream of lightning data geohashing it and creating basically uh localized buckets inside of",
    "start": "2516400",
    "end": "2523319"
  },
  {
    "text": "Dynamo we also have the front-end web service which I talked about before for encoding and decoding the data what's",
    "start": "2523319",
    "end": "2530160"
  },
  {
    "text": "interesting there is even with the efficiency of Dynamo and being able to query back a very efficiently a subset",
    "start": "2530160",
    "end": "2535599"
  },
  {
    "text": "of the lightning data we still found that doing uh greater circle distance calculations were too expensive and so",
    "start": "2535599",
    "end": "2541359"
  },
  {
    "text": "we further optimized our front-end web tier to use geometric instead of trigonometric calculations and what this",
    "start": "2541359",
    "end": "2547520"
  },
  {
    "text": "fundamentally meant is we could support a higher throughput even in our website um now we didn't want to lose accuracy",
    "start": "2547520",
    "end": "2554160"
  },
  {
    "text": "so what we're doing is we're actually sending back a a a set of data to the client the client will compute the actual ranges and then produce",
    "start": "2554160",
    "end": "2562040"
  },
  {
    "text": "alerts so kind of our reflection on our Dynamo DB usage one it's extremely easy",
    "start": "2562040",
    "end": "2567200"
  },
  {
    "start": "2563000",
    "end": "2563000"
  },
  {
    "text": "to provision uh you know compare it to SQL Server where you're going to have to go out and buy licenses get instances",
    "start": "2567200",
    "end": "2573280"
  },
  {
    "text": "set up do the installation yourself uh there's no contest it's just that much easier to provision furthermore it has",
    "start": "2573280",
    "end": "2580160"
  },
  {
    "text": "built-in consistency so when you talk about things like memcache and having to maintain consistency between instances",
    "start": "2580160",
    "end": "2585520"
  },
  {
    "text": "this is not an issue with Dynamo basically you're going to have a consistency within a region it's highly",
    "start": "2585520",
    "end": "2591040"
  },
  {
    "text": "scalable so in terms of needing to meet on demand load all you have to do is edit your read write counts and you can",
    "start": "2591040",
    "end": "2597359"
  },
  {
    "text": "increase to pretty much an arbitrary limit also it's highly available so take",
    "start": "2597359",
    "end": "2602640"
  },
  {
    "text": "your uh any other solution uh within an instant within a region you may have to",
    "start": "2602640",
    "end": "2608079"
  },
  {
    "text": "handle high availability on yourself whether it's with RDS or whether it's with any other system you're going to",
    "start": "2608079",
    "end": "2613119"
  },
  {
    "text": "have to handle your high availability um now there are still a couple things we wanted to see from",
    "start": "2613119",
    "end": "2618480"
  },
  {
    "text": "Dynamo and I'm sure they're still working on it but one thing we'd like to see is automated region uh basically",
    "start": "2618480",
    "end": "2624000"
  },
  {
    "text": "disaster recovery failover so right now uh Dynamo is located within a region uh",
    "start": "2624000",
    "end": "2629200"
  },
  {
    "text": "not across regions so the other thing we could ask for is durability across regions so that Dynamo could be DB could",
    "start": "2629200",
    "end": "2635040"
  },
  {
    "text": "be defined in multiple regions uh we'd like to be able to autoscale down without a throttle so right now you can",
    "start": "2635040",
    "end": "2641520"
  },
  {
    "text": "autoscale up as quickly as you want and this is actually very important for us uh for example as Eric was talking about",
    "start": "2641520",
    "end": "2648480"
  },
  {
    "text": "um population centers with storms will drive very high throughput so for example storms in New York City will drive throughput uh uh user queries up",
    "start": "2648480",
    "end": "2656079"
  },
  {
    "text": "very high but right now in terms of autoscaling you can go up as much as you want but down only once every 24 hours",
    "start": "2656079",
    "end": "2662960"
  },
  {
    "text": "what would be nice is if we could autoscale down relatively as quickly as we could autoscale up uh for in terms of",
    "start": "2662960",
    "end": "2668800"
  },
  {
    "text": "saving on money also there's an item size limit of 64K now this is a fairly",
    "start": "2668800",
    "end": "2674079"
  },
  {
    "text": "large limit much bigger than simple DB and there are ways to work around it but any increase on this size would be",
    "start": "2674079",
    "end": "2679839"
  },
  {
    "text": "helpful for us so what I'd like to do now is kind of show a little demo here",
    "start": "2679839",
    "end": "2685200"
  },
  {
    "start": "2685000",
    "end": "2685000"
  },
  {
    "text": "of the application working and what you're going to see here kind of before I hit play is here was an",
    "start": "2685200",
    "end": "2691599"
  },
  {
    "text": "actual storm that happened last weekend over in Indianapolis and here you have radar overlaid with our real-time",
    "start": "2691599",
    "end": "2697359"
  },
  {
    "text": "lightning data on the right side is our iPhone application the rings represent 10 20 and 30 miles so let's see if we",
    "start": "2697359",
    "end": "2704720"
  },
  {
    "text": "can get this plane so the lightning's coming in it",
    "start": "2704720",
    "end": "2710560"
  },
  {
    "text": "passes the 30 miles all of a sudden right under the sun well you're getting this as it's moving in you're getting",
    "start": "2710560",
    "end": "2717040"
  },
  {
    "text": "more alerts basically telling you to be cautious now it's right over top of you and it's basically telling you seek",
    "start": "2717040",
    "end": "2722640"
  },
  {
    "text": "shelter now so that's the application we built uh and you know we had a great",
    "start": "2722640",
    "end": "2728960"
  },
  {
    "text": "time with it just for kicks i'm going to play it",
    "start": "2728960",
    "end": "2737319"
  },
  {
    "text": "again it is just unreal i mean let's see if I can get the mouse there it",
    "start": "2737319",
    "end": "2743480"
  },
  {
    "text": "is here it is lightning coming in 30 m 10 22 miles 13 miles zero take cover",
    "start": "2743480",
    "end": "2754560"
  },
  {
    "text": "it's pretty neat pretty neat nice job [Applause]",
    "start": "2754560",
    "end": "2762680"
  },
  {
    "text": "guys so with that uh I wanted to open it up for any questions i think there is uh",
    "start": "2762680",
    "end": "2768960"
  },
  {
    "text": "I might also ask Greg and Eddie guys to come over just in case the questions are for you so come on",
    "start": "2768960",
    "end": "2775079"
  },
  {
    "text": "over you can also come yeah okay um we also wanted to mention as you",
    "start": "2775079",
    "end": "2782960"
  },
  {
    "start": "2782000",
    "end": "2782000"
  },
  {
    "text": "are getting ready for questions that you can use Amazon RDS and DynamoB for free",
    "start": "2782960",
    "end": "2788960"
  },
  {
    "text": "go to aws.mazon.comds for RDS free trial and",
    "start": "2788960",
    "end": "2794319"
  },
  {
    "text": "then DynamoB for DynamoB free trial now that 64 uh limit is that like the uh",
    "start": "2794319",
    "end": "2802079"
  },
  {
    "text": "like a in like kind of like a insert into SQL type thing and using how does that 64 go ahead I'll let you answer",
    "start": "2802079",
    "end": "2808480"
  },
  {
    "text": "yeah actually you know the answer so that's the item size limit so basically a single item in Dynamo referenced by a",
    "start": "2808480",
    "end": "2813599"
  },
  {
    "text": "key has a limit of 64K there are ways around that so one of the suggestions from Amazon is store larger objects on",
    "start": "2813599",
    "end": "2820319"
  },
  {
    "text": "S3 the other thing we've done is we'll have a single key which can be compound so there's the the hash key as well as",
    "start": "2820319",
    "end": "2826400"
  },
  {
    "text": "the range key and we're what we're actually doing here in the lightning solution uh because lightning can be concentrated we're using overflow",
    "start": "2826400",
    "end": "2832720"
  },
  {
    "text": "buckets so the geohash key may exist the the hash key may exist multiple times but we use a range key as a bucket",
    "start": "2832720",
    "end": "2838640"
  },
  {
    "text": "indicator so basically there are ways around it you can organize your data in there you can use time slicing there's a",
    "start": "2838640",
    "end": "2844240"
  },
  {
    "text": "number of different options we're using for different data types but you can think of that as like a size of a row",
    "start": "2844240",
    "end": "2850720"
  },
  {
    "text": "yeah yeah in your example you said that the u the database query came back with with all",
    "start": "2850720",
    "end": "2855760"
  },
  {
    "text": "the lightning strikes and then the client did actual distance computations how did you how did you trade that off",
    "start": "2855760",
    "end": "2861839"
  },
  {
    "text": "how did you optimize that and about how many lightning strikes would would be sent to the client for it to sort through okay uh so two pieces one uh we",
    "start": "2861839",
    "end": "2870319"
  },
  {
    "text": "actually optimized it at two levels uh from Dynamo we got a subset of the total global lightning data and that was based",
    "start": "2870319",
    "end": "2877440"
  },
  {
    "text": "on a configurable region within the client based on safety so about 30 miles is what we're looking at what the front",
    "start": "2877440",
    "end": "2883520"
  },
  {
    "text": "end web tier would actually do is use geometric calculations to prune that down to an approximate set normally",
    "start": "2883520",
    "end": "2888640"
  },
  {
    "text": "between say 10 and 20 strikes and it you know to get into sort of the math behind it the error rates for using geometric",
    "start": "2888640",
    "end": "2895040"
  },
  {
    "text": "calculations rather than greater circle distance calculations within uh less than 30 miles is very small uh so",
    "start": "2895040",
    "end": "2902400"
  },
  {
    "text": "there's ways around it so basically to I think to answer your question about 10 to 20 strikes go to the client to actually compute uh because all we're",
    "start": "2902400",
    "end": "2909200"
  },
  {
    "text": "really concerned here with is the closest strike on the client for the alert um during your development process what",
    "start": "2909200",
    "end": "2915839"
  },
  {
    "text": "did you use to uh stand in for Dynamob do you have some kind of mopping mocking framework",
    "start": "2915839",
    "end": "2922160"
  },
  {
    "text": "okay so that's interesting we actually implemented all the solutions you see above uh as well as another in-memory",
    "start": "2922160",
    "end": "2929200"
  },
  {
    "text": "solution so one of the things that was interesting here is this was our first experience with Dynamo so we actually had no idea how it would perform and so",
    "start": "2929200",
    "end": "2936960"
  },
  {
    "text": "within both our back-end data management as well as our web tier we built adapters for pretty much every one of",
    "start": "2936960",
    "end": "2942400"
  },
  {
    "text": "these frameworks and implemented across each data tier and then basically tested them so you can do stand-ins for Dynamo",
    "start": "2942400",
    "end": "2949599"
  },
  {
    "text": "whether it's in memory whether it's SQL whether it's MySQL i mean all Dynamo is is key value based so you can even set",
    "start": "2949599",
    "end": "2955119"
  },
  {
    "text": "up SQL tables that are key value based put adapters on both ends and work with SQL",
    "start": "2955119",
    "end": "2961920"
  },
  {
    "text": "uh you had a question about using uh RDS read replicas i was thinking about this for my application and uh I wonder what",
    "start": "2961920",
    "end": "2968960"
  },
  {
    "text": "the latency is as far as let's say my application writes something and then like you know a millisecond later it",
    "start": "2968960",
    "end": "2974720"
  },
  {
    "text": "something else decides to read it uh I'm expecting might get consistency problems",
    "start": "2974720",
    "end": "2980559"
  },
  {
    "text": "um well our experience I haven't needed to get submillisecond",
    "start": "2980559",
    "end": "2985599"
  },
  {
    "text": "um accuracy in terms of updates we've only used the read replicas for um uh",
    "start": "2985599",
    "end": "2991040"
  },
  {
    "text": "doing uh operations which you didn't need absolute guarantees on the data but",
    "start": "2991040",
    "end": "2996880"
  },
  {
    "text": "from what I've seen it's been pretty quick in terms of the replication it it's uh I have ne I've never seen any",
    "start": "2996880",
    "end": "3003040"
  },
  {
    "text": "delays so the read replica uses the native MySQL um replication so um it's",
    "start": "3003040",
    "end": "3010400"
  },
  {
    "text": "not the same as the multi-AZ synchronous replication that we do i don't want to",
    "start": "3010400",
    "end": "3015520"
  },
  {
    "text": "say this is asynchronous but it is possible given the MySQL uh",
    "start": "3015520",
    "end": "3021400"
  },
  {
    "text": "concurrency issues that some sometimes this might actually there might be a lag",
    "start": "3021400",
    "end": "3027040"
  },
  {
    "text": "so you really need to take that into account from an application perspective",
    "start": "3027040",
    "end": "3032800"
  },
  {
    "text": "i was just I was just curious for the differences between your geohashing method in the Dynino DB Dynamo DB versus",
    "start": "3032800",
    "end": "3040240"
  },
  {
    "text": "say the geospatial curing and SQL have you noticed any differences between accuracy or performance have you done",
    "start": "3040240",
    "end": "3046000"
  },
  {
    "text": "any sentment testings with with the difference in the differences or uh in terms of using single key lookups inside",
    "start": "3046000",
    "end": "3051440"
  },
  {
    "text": "of SQL versus single key lookups inside of Dynamo is that what you're asking no I'm talking about geospatial querying",
    "start": "3051440",
    "end": "3056640"
  },
  {
    "text": "using SQL versus geohashing using uh Dynamo DV so in SQL there's not geo",
    "start": "3056640",
    "end": "3062000"
  },
  {
    "text": "hashing right it's actually uh a geo type right you're storing it you can you can highly index the tables but what we",
    "start": "3062000",
    "end": "3068319"
  },
  {
    "text": "found is with Dynamo at least in this particular case for this set of data Dynamo is going to outperform SQL now",
    "start": "3068319",
    "end": "3073920"
  },
  {
    "text": "the thing here is we're dealing with two sets of point data right so we couldn't have done this solution if we were",
    "start": "3073920",
    "end": "3078960"
  },
  {
    "text": "dealing with point to polygon or you know polygon to polygon solutions so there are reasons to stick with SQL spatial rather than Dynamo uh in terms",
    "start": "3078960",
    "end": "3086720"
  },
  {
    "text": "of an actual analysis uh yeah I mean really we found Dynamo So it's going to be much more scalable from point one point to point okay thank you okay so we",
    "start": "3086720",
    "end": "3095040"
  },
  {
    "text": "are completely out of time what I wanted to say is I don't want to avoid the questions maybe we take them right in",
    "start": "3095040",
    "end": "3100400"
  },
  {
    "text": "the back if you guys are okay with that my apologies so thank you so much for everyone's time [Music]",
    "start": "3100400",
    "end": "3110849"
  }
]