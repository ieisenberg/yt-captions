[
  {
    "start": "0",
    "end": "110000"
  },
  {
    "text": "okay we want to get started uh welcome everybody to reinvent um my name's Chris whiter I'm the development manager for",
    "start": "760",
    "end": "8480"
  },
  {
    "text": "AWS coud formation and AWS elastic beant stock both of those two Services um over",
    "start": "8480",
    "end": "14240"
  },
  {
    "text": "in the corner over there we have some other guys from the team so if you have questions at the end um so we have",
    "start": "14240",
    "end": "20600"
  },
  {
    "text": "avanes um he's a Dev manager we have David he's the developer from elastic",
    "start": "20600",
    "end": "26359"
  },
  {
    "text": "beant stock we have uh Adam who's a developer on cloud",
    "start": "26359",
    "end": "31759"
  },
  {
    "text": "formation so at the end if you want to come find us come find us um so just to",
    "start": "31759",
    "end": "37719"
  },
  {
    "text": "get started so I'm going to assume nobody knows anything about cloud formation so this is going to be kind of",
    "start": "37719",
    "end": "42800"
  },
  {
    "text": "an introduction session we're going to walk through a few things um just to kind of start off we as we talk to",
    "start": "42800",
    "end": "49399"
  },
  {
    "text": "customers what what we found was there were a bunch of things that we that were consistent across",
    "start": "49399",
    "end": "55840"
  },
  {
    "text": "um various things as we taught the customers so customers wanted to be able to create multiple environments maybe a",
    "start": "55840",
    "end": "63879"
  },
  {
    "text": "test environment a pre-prod environment and then a production environment and make sure they were all all the same so",
    "start": "63879",
    "end": "70320"
  },
  {
    "text": "that they had the same configuration same security settings things like that",
    "start": "70320",
    "end": "75759"
  },
  {
    "text": "um we also had customers that wanted to take an application from one region move it to another region um we also had",
    "start": "75759",
    "end": "84040"
  },
  {
    "text": "customers that wanted to see all the configuration in one place so they wanted to see all the security settings",
    "start": "84040",
    "end": "90360"
  },
  {
    "text": "all of the parameters for all of the resources that they have and so that's kind of why we built cloud formation and",
    "start": "90360",
    "end": "96079"
  },
  {
    "text": "so we'll work through how cloud formation helps with those things and how um you can use cloud formation to",
    "start": "96079",
    "end": "103680"
  },
  {
    "text": "set up multiple Stacks multiple um instances different regions things like",
    "start": "103680",
    "end": "109240"
  },
  {
    "text": "that so what are we going to do so here here's the the kind of overview of what we're going to do in the presentation",
    "start": "109240",
    "end": "115240"
  },
  {
    "start": "110000",
    "end": "425000"
  },
  {
    "text": "today we're going to walk through what cloud formation is as a service",
    "start": "115240",
    "end": "120520"
  },
  {
    "text": "and as we go through that we'll look at some of the benefits that we have for cloud formation why should you use cloud",
    "start": "120520",
    "end": "126039"
  },
  {
    "text": "formation um and then we'll look at how kind of how easy it is to use hopefully you'll see that as as we walk through",
    "start": "126039",
    "end": "134560"
  },
  {
    "text": "it so what's cloud formation um the intent of the service is really to make",
    "start": "134560",
    "end": "139680"
  },
  {
    "text": "it easy to deploy sets of resources that you need for your application uh in AWS so it's really",
    "start": "139680",
    "end": "147920"
  },
  {
    "text": "about collecting all the resources you need together building all of those things and running the",
    "start": "147920",
    "end": "154400"
  },
  {
    "text": "application so AWS has kind of many building block services so for example",
    "start": "154400",
    "end": "159879"
  },
  {
    "text": "ec2 for compute S3 for storage RDS for databases um various things like that um",
    "start": "159879",
    "end": "167360"
  },
  {
    "text": "if you're building an application typically you need resources from each of these different services so if you're",
    "start": "167360",
    "end": "172480"
  },
  {
    "text": "building say a web service you might need a load balancer um you might need some ec2",
    "start": "172480",
    "end": "177560"
  },
  {
    "text": "instances or an autoscaling group uh you might need security settings a database various things that you need",
    "start": "177560",
    "end": "184120"
  },
  {
    "text": "for that application um so what cloud formation lets you do is specify all of those",
    "start": "184120",
    "end": "189599"
  },
  {
    "text": "things in what we call a template so template is just a fancy name for text file it's really just a Json text file",
    "start": "189599",
    "end": "195480"
  },
  {
    "text": "and we'll look at one of those uh later but what you do in that text file is specify all the resources that you need",
    "start": "195480",
    "end": "202720"
  },
  {
    "text": "in order to run the application so it's purely declarative it's not a script so",
    "start": "202720",
    "end": "208120"
  },
  {
    "text": "you just list out the set of resources with the properties that you need for that that particular",
    "start": "208120",
    "end": "214280"
  },
  {
    "text": "application you can also specify dependencies between resources so for example you might need the instances to",
    "start": "214280",
    "end": "221480"
  },
  {
    "text": "come up after the low balancer getting some feedback um so you",
    "start": "221480",
    "end": "227280"
  },
  {
    "text": "might need the instances to come up after load Balan so you can specify those kinds of dependencies so that you can order the things as they come up you",
    "start": "227280",
    "end": "234519"
  },
  {
    "text": "can also specify um data flows between resources so for example the RDS",
    "start": "234519",
    "end": "241280"
  },
  {
    "text": "database you might need to pass the connection string of that database to the instances that are actually going to",
    "start": "241280",
    "end": "246560"
  },
  {
    "text": "use the the the database so it gives you a way in the application uh in the template to specify all of those",
    "start": "246560",
    "end": "253040"
  },
  {
    "text": "dependencies all of those resources so you're effectively building up the architectural diagram of your",
    "start": "253040",
    "end": "259959"
  },
  {
    "text": "application inside the template so that's really what cloud formation is all about so the the diagram at the bottom",
    "start": "259959",
    "end": "267199"
  },
  {
    "text": "there is you define a template contains all of those resources you then pass that template to clad",
    "start": "267199",
    "end": "272919"
  },
  {
    "text": "formation clad formation then takes care of calling all other services on your behalf so it creates all of those",
    "start": "272919",
    "end": "279800"
  },
  {
    "text": "resources in your account spins everything up in the order as necessary flows all the data as",
    "start": "279800",
    "end": "286400"
  },
  {
    "text": "appropriate um and then builds what we call a stack so so really there are two concepts that cloud formation brings",
    "start": "286400",
    "end": "293240"
  },
  {
    "text": "first is the template and then so that's the specification if you like and then",
    "start": "293240",
    "end": "298320"
  },
  {
    "text": "the stack which is a run instance of the template and you can create multiple Stacks from the same template and we'll",
    "start": "298320",
    "end": "304600"
  },
  {
    "text": "see that kind of in action once you have a stack over time the application dependencies or the",
    "start": "304600",
    "end": "311400"
  },
  {
    "text": "requirements on that application might change so for example you might need a bigger datab base you might want to add",
    "start": "311400",
    "end": "317160"
  },
  {
    "text": "a cash you may want to change properties of um alarms or some of the other",
    "start": "317160",
    "end": "322840"
  },
  {
    "text": "resources in there so cloud formation lets you modify the template and resubmit that template to cloud",
    "start": "322840",
    "end": "328880"
  },
  {
    "text": "formation so you can make changes to either the resources you can add and",
    "start": "328880",
    "end": "334560"
  },
  {
    "text": "remove resources from the template resubmit that template cloud formation will then let will then effectively do a",
    "start": "334560",
    "end": "341280"
  },
  {
    "text": "diff between the template the new template that you passed and what's already running look at what the",
    "start": "341280",
    "end": "347199"
  },
  {
    "text": "differences are and try and create the minimal set of changes necessary to bring your stack up to the next template",
    "start": "347199",
    "end": "355319"
  },
  {
    "text": "version if you like um so it allows you to manage the application over it life",
    "start": "355319",
    "end": "361280"
  },
  {
    "text": "cycle uh so that's kind",
    "start": "361280",
    "end": "365160"
  },
  {
    "text": "of running instances yeah so the question was Will Will cloud formation update existing running instances so you",
    "start": "366880",
    "end": "374520"
  },
  {
    "text": "can make changes to properties on an instance and resubmit that template and it will make changes to that instance",
    "start": "374520",
    "end": "381319"
  },
  {
    "text": "now some changes can be made dynamically um some changes cannot so",
    "start": "381319",
    "end": "387240"
  },
  {
    "text": "for example if you change the army so I want run a different version of some software then we'll actually spin up a",
    "start": "387240",
    "end": "394240"
  },
  {
    "text": "new instance and replace that instance in the",
    "start": "394240",
    "end": "398599"
  },
  {
    "text": "stack",
    "start": "403680",
    "end": "406680"
  },
  {
    "text": "didn't yeah so we'll actually walk through an example that looks like that um so the question was if I if you don't",
    "start": "409199",
    "end": "415360"
  },
  {
    "text": "have a patch installed and you want then want a patch installed can you do that through a template and and yes you can",
    "start": "415360",
    "end": "421199"
  },
  {
    "text": "and we'll kind of work through that um so what is a template how how do",
    "start": "421199",
    "end": "428240"
  },
  {
    "start": "425000",
    "end": "742000"
  },
  {
    "text": "you actually create template how do you use it once you have it so we'll look at",
    "start": "428240",
    "end": "433599"
  },
  {
    "text": "a template in a minute but the the thing to look at is the template's really divided into multiple sections um so",
    "start": "433599",
    "end": "440800"
  },
  {
    "text": "there's a resources section and that that resources section contains the list of all the resources that you need for",
    "start": "440800",
    "end": "446759"
  },
  {
    "text": "the application so security groups EC to instances RDS databases and so forth um",
    "start": "446759",
    "end": "454080"
  },
  {
    "text": "so it let you create all the instance all the resources that you need in that section along with all the properties",
    "start": "454080",
    "end": "461120"
  },
  {
    "text": "that you need for those resources there's then a parameters section um so one of the things about",
    "start": "461120",
    "end": "467440"
  },
  {
    "text": "cloud formation templates is you can reuse a template to create multiple Stacks from the same template um in some",
    "start": "467440",
    "end": "474919"
  },
  {
    "text": "cases you actually want different properties for different Stacks so for example I'm might have a test stack and",
    "start": "474919",
    "end": "480599"
  },
  {
    "text": "a production stack um in the test stack I want say two instances but in the production stack I want 10 instances um",
    "start": "480599",
    "end": "488000"
  },
  {
    "text": "so cloud formation allows you to add parameters to uh a template that get",
    "start": "488000",
    "end": "493919"
  },
  {
    "text": "passed into that template when at stack creation time so that you can modify at",
    "start": "493919",
    "end": "499879"
  },
  {
    "text": "runtime what actually gets created in the template and we'll we'll see an example of",
    "start": "499879",
    "end": "505360"
  },
  {
    "text": "that there are cases where you actually want to have different prop prop values depending on on things in the template",
    "start": "505360",
    "end": "512080"
  },
  {
    "text": "or or maybe the different region that you're running in or some other environmental properties um so cloud",
    "start": "512080",
    "end": "518518"
  },
  {
    "text": "formation provides a section called mappings so really a mapping is think of it as a table it's it's really a way to",
    "start": "518519",
    "end": "525959"
  },
  {
    "text": "say given this particular condition I want to use this value for the property so it's it's a way to do conditionals in",
    "start": "525959",
    "end": "532279"
  },
  {
    "text": "the template and we'll look at that in a second um the final section is really",
    "start": "532279",
    "end": "538160"
  },
  {
    "text": "The Outpost section so when you build a stack things are",
    "start": "538160",
    "end": "543560"
  },
  {
    "text": "created dynamically you might want to pass back um data to the user of that",
    "start": "543560",
    "end": "548600"
  },
  {
    "text": "template so for example if I'm creating a website I probably want to pass back the URL of the newly created website um",
    "start": "548600",
    "end": "556680"
  },
  {
    "text": "because it depends on what the resources were in the template that got created and so the output section let you",
    "start": "556680",
    "end": "562399"
  },
  {
    "text": "specify things that get propagated back to the user and they get shown in the console um and we'll see examples of",
    "start": "562399",
    "end": "568839"
  },
  {
    "text": "that there's a few other things there before we start to look at a template so because you can create",
    "start": "568839",
    "end": "576360"
  },
  {
    "text": "multiple Stacks from a single template we don't have the physical names of the",
    "start": "576360",
    "end": "581480"
  },
  {
    "text": "resources in the template so I can't say I want the RDS to be called or the RDS database instance to be called Fu",
    "start": "581480",
    "end": "588560"
  },
  {
    "text": "because if I rerun that template multiple times then I'm going to get collisions on the naming so cloud",
    "start": "588560",
    "end": "594480"
  },
  {
    "text": "formation in the template you specify logical names for the resources um",
    "start": "594480",
    "end": "599839"
  },
  {
    "text": "that's really just a way to identify the resources in the template and then be able to reference them elsewhere in the",
    "start": "599839",
    "end": "606279"
  },
  {
    "text": "template um when we create the stack from the template we actually create",
    "start": "606279",
    "end": "611680"
  },
  {
    "text": "real physical names based on that logical name um but they will be different for each stack that you create",
    "start": "611680",
    "end": "617680"
  },
  {
    "text": "so we effectively uniquify if you like uh the actual resource names based on the uh resource names in the",
    "start": "617680",
    "end": "625640"
  },
  {
    "text": "template um the along with kind of all the resources",
    "start": "625640",
    "end": "631440"
  },
  {
    "text": "that you can specify in the template we give you a mechanism to augment the data",
    "start": "631440",
    "end": "636760"
  },
  {
    "text": "in the template uh and that's called metadata and we we'll look at a little example of of actually using metadata",
    "start": "636760",
    "end": "644200"
  },
  {
    "text": "but really the cloud formation service itself doesn't really look at the metadata it's just additional properties",
    "start": "644200",
    "end": "650519"
  },
  {
    "text": "that you can specify on the on the different um resources in the template so that you can say tag it with things",
    "start": "650519",
    "end": "657000"
  },
  {
    "text": "that if you have tooling on top of cloud formation uh you can use that to kind of specify",
    "start": "657000",
    "end": "662639"
  },
  {
    "text": "things for example if you're building say a UI on top maybe some of the metadata is the XY coordinate of the",
    "start": "662639",
    "end": "669920"
  },
  {
    "text": "block on some diagram so you can use it for whatever you want um there is a",
    "start": "669920",
    "end": "675959"
  },
  {
    "text": "there is a very specific use of metadata that cloud formation itself uses uh and we'll go to how it how it uses that",
    "start": "675959",
    "end": "683200"
  },
  {
    "text": "essentially to put files and packages and other software on the instance",
    "start": "683200",
    "end": "689560"
  },
  {
    "text": "um the final one there is there's a bunch of functions that you can specify inside a template so not only can you",
    "start": "689720",
    "end": "697480"
  },
  {
    "text": "specify actual values for the properties but we give you a bunch of functions so that you can reference other things from",
    "start": "697480",
    "end": "703800"
  },
  {
    "text": "within the template or you can get attributes so for example the uh availability zone of an instance that",
    "start": "703800",
    "end": "710399"
  },
  {
    "text": "got created I can use that as somewhere else in the template so I might want to put the EBS volume and the ec2 instance",
    "start": "710399",
    "end": "718120"
  },
  {
    "text": "in the same availability Zone but I don't actually want to specify an availability zone so we give you",
    "start": "718120",
    "end": "723160"
  },
  {
    "text": "functions to be able to take values that were created as a result of creating a resource and using those values in other",
    "start": "723160",
    "end": "730200"
  },
  {
    "text": "resources so that's kind of the the basic overview of a template so if we",
    "start": "730200",
    "end": "735560"
  },
  {
    "text": "flip to kind of let's find a template oops I have meeting",
    "start": "735560",
    "end": "742079"
  },
  {
    "start": "742000",
    "end": "975000"
  },
  {
    "text": "request um so templates ajacent format um I'm actually using a plugin in",
    "start": "742079",
    "end": "748720"
  },
  {
    "text": "Firefox actually show this Mo mostly because it's easier for you guys to see the specific things we're talking about",
    "start": "748720",
    "end": "755199"
  },
  {
    "text": "um but it's really if you look at the entire template it's a Json file um and this is just a rendering of that using a",
    "start": "755199",
    "end": "761360"
  },
  {
    "text": "Firefox plugin um so this template is actually a fairly simple template it's a single ec2",
    "start": "761360",
    "end": "769680"
  },
  {
    "text": "instance with an elastic IP address uh and a security group and it's running a",
    "start": "769680",
    "end": "776639"
  },
  {
    "text": "PHP application so we can look through the template and we can see all of those things uh so we'll go through one by",
    "start": "776639",
    "end": "785440"
  },
  {
    "text": "one on this screen can we move that slightly",
    "start": "787680",
    "end": "793800"
  },
  {
    "text": "across oh we done it um so let's look at the parameters",
    "start": "793800",
    "end": "800519"
  },
  {
    "text": "section so parameters like I say parameters are there so that you can specify um values at creation time of",
    "start": "800519",
    "end": "807720"
  },
  {
    "text": "the template that are not hardcoded in the template um so the parameter section",
    "start": "807720",
    "end": "813199"
  },
  {
    "text": "is essentially just a list of parameters in this particular template I just have one parameter which is called",
    "start": "813199",
    "end": "819600"
  },
  {
    "text": "instance type so all parameters have a name in this case instance",
    "start": "819600",
    "end": "824800"
  },
  {
    "text": "type parameters also have a description so that's really just a text field uh",
    "start": "824800",
    "end": "830120"
  },
  {
    "text": "and that'll show up in the console when we come to to actually run this template you'll see where that actually shows up",
    "start": "830120",
    "end": "835360"
  },
  {
    "text": "but it's essentially there so that you can specify to the user of the template what is this value what you expect from",
    "start": "835360",
    "end": "842560"
  },
  {
    "text": "it um properties can parameters can have default values uh so in this case the",
    "start": "842560",
    "end": "850079"
  },
  {
    "text": "instance type parameter is actually going to be the instance type that we use to create the ec2",
    "start": "850079",
    "end": "855440"
  },
  {
    "text": "instance and we're defaulting that to T1 micro in this particular",
    "start": "855440",
    "end": "861600"
  },
  {
    "text": "case um along with kind of the defaults and the descriptions and the types uh so",
    "start": "861600",
    "end": "867639"
  },
  {
    "text": "actually we missed type out so type Ty type just defines what kind of property we expect this to be so in this case",
    "start": "867639",
    "end": "873880"
  },
  {
    "text": "it's a string we also have numeric oops I really should get rid of my",
    "start": "873880",
    "end": "881040"
  },
  {
    "text": "Outlook um so you can just specify different types so we have string types",
    "start": "881440",
    "end": "886600"
  },
  {
    "text": "we have numeric types and we have uh list types where they're interesting is",
    "start": "886600",
    "end": "892040"
  },
  {
    "text": "for the constraints that you can apply to that particular parameter uh so in this case instance type",
    "start": "892040",
    "end": "899759"
  },
  {
    "text": "has a set of predefined values that we can we can actually use so in this case allowed value specifies all the ec2",
    "start": "899759",
    "end": "906600"
  },
  {
    "text": "instance types that support 64bit in this case there are other types of constraints you can put on so if this",
    "start": "906600",
    "end": "913320"
  },
  {
    "text": "was a numeric parameter you can say minimum value maximum value for Strings",
    "start": "913320",
    "end": "919440"
  },
  {
    "text": "if it isn't a kind of a list of specific ones you can say it can be between this length and this length we allow it to do",
    "start": "919440",
    "end": "926680"
  },
  {
    "text": "rexes so if you have some Rex that you want the parameter to conform to you can",
    "start": "926680",
    "end": "931959"
  },
  {
    "text": "also specify that so it gives us a a way to validate the input from the user in the console so that the author of the",
    "start": "931959",
    "end": "939079"
  },
  {
    "text": "template can make sure that the property values that we specified are actually the ones that are valid for this",
    "start": "939079",
    "end": "944680"
  },
  {
    "text": "particular parameter uh and then the last thing there constraint description that's",
    "start": "944680",
    "end": "950800"
  },
  {
    "text": "actually the error string that the console will print out um if the constraint is violated so in this case",
    "start": "950800",
    "end": "958199"
  },
  {
    "text": "must be a valid 64-bit ec2 instance type if you don't type one of those things",
    "start": "958199",
    "end": "964079"
  },
  {
    "text": "in so that's kind of the parameters section you can have um a bunch of",
    "start": "964079",
    "end": "969800"
  },
  {
    "text": "parameters in there this just has",
    "start": "969800",
    "end": "974000"
  },
  {
    "start": "975000",
    "end": "1039000"
  },
  {
    "text": "one yes and in fact we'll see that in a second so the question was can you parameterize the",
    "start": "975079",
    "end": "982800"
  },
  {
    "text": "region um so the mapping section so ec2 instances obviously need an uh an image",
    "start": "982800",
    "end": "991560"
  },
  {
    "text": "ID in order to run the image IDs are actually different depending on the",
    "start": "991560",
    "end": "996959"
  },
  {
    "text": "regions uh and so in this particular case this application is running on a",
    "start": "996959",
    "end": "1002519"
  },
  {
    "text": "base Amazon Linux Army so nothing special about the Army it's just a base Amazon Linux Army but the Army ID is",
    "start": "1002519",
    "end": "1009880"
  },
  {
    "text": "different in each region uh and so the mapping that I've defined here really is a mapping of which region to which army",
    "start": "1009880",
    "end": "1017399"
  },
  {
    "text": "ID uh and so this is kind of a way to specify that so for example in the US East one region the Army is the one",
    "start": "1017399",
    "end": "1024959"
  },
  {
    "text": "that's specified there and we'll see how you use these mappings inside the template to actually pick the right Army",
    "start": "1024959",
    "end": "1030120"
  },
  {
    "text": "ID um for the region and you can specify other things in mappings this is just a an example of",
    "start": "1030120",
    "end": "1039199"
  },
  {
    "start": "1039000",
    "end": "1132000"
  },
  {
    "text": "that um then comes a resources section and there's no particular order to these sections they just happen to be in a",
    "start": "1039640",
    "end": "1046959"
  },
  {
    "text": "reasonably logical order in this template um so in this template we have five",
    "start": "1046959",
    "end": "1053760"
  },
  {
    "text": "resources so each each resource is given a logical name we talked a little bit about that before so the what you see in",
    "start": "1053760",
    "end": "1060520"
  },
  {
    "text": "there is actually the logical names of each of the resources um so let's take a look at the",
    "start": "1060520",
    "end": "1066080"
  },
  {
    "text": "first one which is uh a instant Security Group is what it's called so each resource has a type in",
    "start": "1066080",
    "end": "1073679"
  },
  {
    "text": "this particular case it's an ec2 Security Group type and we'll see cases",
    "start": "1073679",
    "end": "1079360"
  },
  {
    "text": "of other types um and then there's a property section for each of the",
    "start": "1079360",
    "end": "1084880"
  },
  {
    "text": "resources what we tried to do in cloud formation is",
    "start": "1084880",
    "end": "1089960"
  },
  {
    "text": "not Define any new properties so what you'll see here in the property sections",
    "start": "1089960",
    "end": "1095120"
  },
  {
    "text": "for each of the resources the properties that you would pass to the API calls of the different services so we we not",
    "start": "1095120",
    "end": "1102039"
  },
  {
    "text": "renaming things so that you don't have to learn anything new the property should be pretty obvious if you've used",
    "start": "1102039",
    "end": "1107760"
  },
  {
    "text": "those Services before so we Tred to keep it consistent um so for security group we",
    "start": "1107760",
    "end": "1114000"
  },
  {
    "text": "have group description it's really just a text string and then we have an Ingress rule uh this is a like I said",
    "start": "1114000",
    "end": "1120880"
  },
  {
    "text": "it's a web service so we're opening P 80 uh on the security group uh and we just",
    "start": "1120880",
    "end": "1126640"
  },
  {
    "text": "Define in the Engish ruer for",
    "start": "1126640",
    "end": "1130919"
  },
  {
    "text": "that we then have an elastic IP address so we want to associate the IP address",
    "start": "1132280",
    "end": "1137320"
  },
  {
    "text": "with the instance uh so again it has a type in this case ec2",
    "start": "1137320",
    "end": "1143720"
  },
  {
    "text": "EIP and then an instance ID now we don't know what the instance ID is going to be",
    "start": "1143720",
    "end": "1149280"
  },
  {
    "text": "because the instance is going to be created by the template uh and so what we can use is a ref function so that's",
    "start": "1149280",
    "end": "1156679"
  },
  {
    "text": "really a reference to something else in the template so we can ref the ec2 instance which if you look at the other",
    "start": "1156679",
    "end": "1163919"
  },
  {
    "text": "resources there's an ec2 instance uh resource in the template so so you use",
    "start": "1163919",
    "end": "1169120"
  },
  {
    "text": "the name of the ec2 ec2 instance in the reference and that'll actually return the instance ID of the instance that was",
    "start": "1169120",
    "end": "1176880"
  },
  {
    "text": "created so you can reference the physical the physical ID of any of the",
    "start": "1176880",
    "end": "1182440"
  },
  {
    "text": "resources in the template using the ref function so that's how you do",
    "start": "1182440",
    "end": "1188480"
  },
  {
    "start": "1189000",
    "end": "1286000"
  },
  {
    "text": "that we then have an ec2 instance so again it has a type ec2 instance ID",
    "start": "1189240",
    "end": "1195559"
  },
  {
    "text": "sorry ec2 instance and a bunch of properties now in this case we're associating the",
    "start": "1195559",
    "end": "1202039"
  },
  {
    "text": "security group that we created in the template as the property for security",
    "start": "1202039",
    "end": "1208080"
  },
  {
    "text": "group and again that's a reference because we didn't create the security group ahead of time it's created in the template so we referenced the instance",
    "start": "1208080",
    "end": "1215320"
  },
  {
    "text": "Security Group resource that was",
    "start": "1215320",
    "end": "1219679"
  },
  {
    "text": "created um and then we have image ID so this is what we pick from the table that",
    "start": "1220640",
    "end": "1226840"
  },
  {
    "text": "we had in the mappings so we have a function finding map which takes the map",
    "start": "1226840",
    "end": "1232480"
  },
  {
    "text": "name which is what the mapping was defined as before uh AWS region to Army that's what we call the table and then",
    "start": "1232480",
    "end": "1239919"
  },
  {
    "text": "what we're looking for is the Army in there based on the region now to specify",
    "start": "1239919",
    "end": "1245640"
  },
  {
    "text": "the region we give you a what we call a pseudo parameter in this case we're",
    "start": "1245640",
    "end": "1251200"
  },
  {
    "text": "using AWS colon colon region that is set up by cloud formation as the region",
    "start": "1251200",
    "end": "1257280"
  },
  {
    "text": "identifier for wherever this template was run so you're effectively using the region that the template was run in to",
    "start": "1257280",
    "end": "1263840"
  },
  {
    "text": "pick the Army ID from the list that we had so that's kind of how you reference the the region uh in this in the",
    "start": "1263840",
    "end": "1270919"
  },
  {
    "text": "template there are a few other uh kind of pseudo parameters that we have so this stack name if you want to put the",
    "start": "1270919",
    "end": "1277039"
  },
  {
    "text": "stack name in there somewhere uh and there's a few",
    "start": "1277039",
    "end": "1281600"
  },
  {
    "text": "others um the next piece the for that this",
    "start": "1282919",
    "end": "1289159"
  },
  {
    "start": "1286000",
    "end": "1534000"
  },
  {
    "text": "template actually does is we're just using the bass Linux Amazon the Basse Amazon Linux Army to fire up this",
    "start": "1289159",
    "end": "1296240"
  },
  {
    "text": "instance we actually want to run a PHP application on it so we actually need to download and create the application on",
    "start": "1296240",
    "end": "1302640"
  },
  {
    "text": "the instance the way clad formation does that is there's really three pieces to",
    "start": "1302640",
    "end": "1307760"
  },
  {
    "text": "it there's a set of helper functions if you like that run on the instance",
    "start": "1307760",
    "end": "1313919"
  },
  {
    "text": "themselves that's the the functions that run on the instance pull down the the files the packages whatever it is you",
    "start": "1313919",
    "end": "1320799"
  },
  {
    "text": "need to actually run on the instance cuz that obviously has to run on the instance as it starts",
    "start": "1320799",
    "end": "1326960"
  },
  {
    "text": "out those functions are actually uh installed by default on Amazon Linux as",
    "start": "1326960",
    "end": "1333520"
  },
  {
    "text": "well as on the the windows uh alies that we have uh we have packages that you can",
    "start": "1333520",
    "end": "1339480"
  },
  {
    "text": "download onto many of the other Linux distributions uh so you can use the same kind of functionality across any",
    "start": "1339480",
    "end": "1346360"
  },
  {
    "text": "particular instance type any OS type that you might use so that's kind of the first part is",
    "start": "1346360",
    "end": "1353440"
  },
  {
    "text": "the the functions that actually run on the instance and we'll look at that in a second the second part is kind of the",
    "start": "1353440",
    "end": "1360159"
  },
  {
    "text": "metadata definition so we talked a little bit about metadata cloud formation the",
    "start": "1360159",
    "end": "1365480"
  },
  {
    "text": "service itself doesn't actually look at that metadata but there is a special case of metadata so there's a metadata",
    "start": "1365480",
    "end": "1372200"
  },
  {
    "text": "section here in the template and we have a well defined name",
    "start": "1372200",
    "end": "1377640"
  },
  {
    "text": "called AWS cloud formation in it that's the name of the section of metadata um the on host functions that",
    "start": "1377640",
    "end": "1385000"
  },
  {
    "text": "we just talked about use this section to actually decide what to download and what to put on the instance so you can",
    "start": "1385000",
    "end": "1392760"
  },
  {
    "text": "Define different configurations in this case is just one configuration but in that configuration you can Define things",
    "start": "1392760",
    "end": "1399039"
  },
  {
    "text": "like packages files um which services to start zip files to pull down various",
    "start": "1399039",
    "end": "1405919"
  },
  {
    "text": "things like that so in this particular case what we're actually going to install on an instance is we're going to install",
    "start": "1405919",
    "end": "1413480"
  },
  {
    "text": "Apache and PHP from the Y repo so that's how we Define that in there so it's",
    "start": "1413480",
    "end": "1419880"
  },
  {
    "text": "really when this instance starts up pull httpd and PHP from the Yum repo and",
    "start": "1419880",
    "end": "1426520"
  },
  {
    "text": "install them locally um we then have a section called",
    "start": "1426520",
    "end": "1433360"
  },
  {
    "text": "sources and in this particular case sources is the location of a zip file",
    "start": "1433360",
    "end": "1439559"
  },
  {
    "text": "that we want to pull down and unpack in this case it happens to be the application so it's a a sample",
    "start": "1439559",
    "end": "1445520"
  },
  {
    "text": "application really simple PHP app and the sources and definition is what to",
    "start": "1445520",
    "end": "1452400"
  },
  {
    "text": "pull and where to put it so we're putting that zip file into V wwh HTML so",
    "start": "1452400",
    "end": "1459840"
  },
  {
    "text": "that's kind of how you specify how to pull down a zip file unpack it on the instance and and let it execute",
    "start": "1459840",
    "end": "1469080"
  },
  {
    "text": "obv go ahead",
    "start": "1469360",
    "end": "1474279"
  },
  {
    "text": "yep uh you can if you specify in a so the question was do we support custom",
    "start": "1475080",
    "end": "1480919"
  },
  {
    "text": "yum repos uh if you set up the Yum repo so that it can be pulled locally from",
    "start": "1480919",
    "end": "1485960"
  },
  {
    "text": "the instance then we can pull it from",
    "start": "1485960",
    "end": "1490039"
  },
  {
    "text": "there um got the sources section so once we have all of this",
    "start": "1491880",
    "end": "1498440"
  },
  {
    "text": "stuff down on the instance we actually need to make sure Apache is actually running so the services section lets us",
    "start": "1498440",
    "end": "1505080"
  },
  {
    "text": "start up any of the services that we need on the instance in this case we're starting up the Apache demon making sure",
    "start": "1505080",
    "end": "1511320"
  },
  {
    "text": "it's enabled making sure it's going to run if the instance reboots um so it gives you a way to",
    "start": "1511320",
    "end": "1516640"
  },
  {
    "text": "download packages and files and we'll look at an example in a little later of how to actually embed the actual content",
    "start": "1516640",
    "end": "1524360"
  },
  {
    "text": "in here in this particular case we're just referencing uh uh a zip file that happens to be on S3 but you can actually",
    "start": "1524360",
    "end": "1531080"
  },
  {
    "text": "put the content in here too if you want it so that's kind of the second piece",
    "start": "1531080",
    "end": "1536760"
  },
  {
    "text": "that you need in order to download the software onto the instance so we got the cloud formation helper scripts on the",
    "start": "1536760",
    "end": "1543760"
  },
  {
    "text": "instance we got the definition of what we want to pull in the actual um",
    "start": "1543760",
    "end": "1551320"
  },
  {
    "text": "template run ownt yeah there's a so the question was can you run your own",
    "start": "1551320",
    "end": "1556480"
  },
  {
    "text": "scripts there's actually a so if we just open that a second so along with packages sources Services there's also a",
    "start": "1556480",
    "end": "1563520"
  },
  {
    "text": "commands section where you can run arbitrary commands on the instance um as",
    "start": "1563520",
    "end": "1569440"
  },
  {
    "text": "well and some of those commands may well be",
    "start": "1569440",
    "end": "1574840"
  },
  {
    "text": "from batch files or whatever that you actually downloaded as part this",
    "start": "1574840",
    "end": "1580640"
  },
  {
    "text": "so um so that's the third section so the third section is user data so we need to",
    "start": "1580720",
    "end": "1586840"
  },
  {
    "text": "run the Cent formation scripts when this instance starts um you bun to Amazon Linux and",
    "start": "1586840",
    "end": "1595240"
  },
  {
    "text": "the windows Army actually allow you to put a script into user data user data",
    "start": "1595240",
    "end": "1600440"
  },
  {
    "text": "for those that don't know it's a it's a property that you pass the ec2 instances where that data is just passed to the",
    "start": "1600440",
    "end": "1607120"
  },
  {
    "text": "instance and available on the instance so it can be arbitrary um",
    "start": "1607120",
    "end": "1612159"
  },
  {
    "text": "content uh Amazon Linux you to and windows actually let you put a script in",
    "start": "1612159",
    "end": "1617240"
  },
  {
    "text": "there uh so in this particular case what I've done is we've put the script and",
    "start": "1617240",
    "end": "1623480"
  },
  {
    "text": "it's not particularly readable in this this format but we put a script in there which is actually to fire up the unhost",
    "start": "1623480",
    "end": "1631320"
  },
  {
    "text": "helper functions for cloud formation pull down the packages and files and deploy those files um and so if we look",
    "start": "1631320",
    "end": "1638399"
  },
  {
    "text": "at this particular script it's it's it's a base 64 encoded script but that's just",
    "start": "1638399",
    "end": "1645120"
  },
  {
    "text": "because ec2 user data requires it to be base 64 encoded and it's just a very",
    "start": "1645120",
    "end": "1651240"
  },
  {
    "text": "simple badge file um first off it does a yum update just to make sure we have the",
    "start": "1651240",
    "end": "1656880"
  },
  {
    "text": "latest version of the cloud formation helper scripts they're actually installed by default but with this particular one just make sure we have",
    "start": "1656880",
    "end": "1662840"
  },
  {
    "text": "the most upto-date version uh and then it runs the CFN init helper script so that's really the",
    "start": "1662840",
    "end": "1669720"
  },
  {
    "text": "helper script that pulls down all of those files and packages and the way it does that is you",
    "start": "1669720",
    "end": "1676120"
  },
  {
    "text": "specify where you want that metadata to come from so you can attach that metadata anywhere uh and CFN in it you",
    "start": "1676120",
    "end": "1684279"
  },
  {
    "text": "specify the stack that it came from so in this case it comes from the same stack that we're building and that's",
    "start": "1684279",
    "end": "1690519"
  },
  {
    "text": "what the ref AWS stack name does that's like the region function it's another o",
    "start": "1690519",
    "end": "1696320"
  },
  {
    "text": "pseudo parameters um and you also specify the resource that you want to get that metadata from so in this case we",
    "start": "1696320",
    "end": "1703799"
  },
  {
    "text": "attached the metadata to the ec2 instance itself so um you'll see there",
    "start": "1703799",
    "end": "1709200"
  },
  {
    "text": "that no no good me pointing at my screen I guess uh so you'll see here that the resource that we're using is the ec2",
    "start": "1709200",
    "end": "1715679"
  },
  {
    "text": "instance so that's just a reference to the name of the resource in the",
    "start": "1715679",
    "end": "1720840"
  },
  {
    "text": "template um and then we get give it a region we need to know where that stack is",
    "start": "1720840",
    "end": "1726039"
  },
  {
    "text": "created and so that's really all you need to do to pull down all those files and packages and install them um so it's",
    "start": "1726039",
    "end": "1733039"
  },
  {
    "text": "a pretty simple call it goes out fetches the metadata from cloud formation does",
    "start": "1733039",
    "end": "1738399"
  },
  {
    "text": "whatever the the metadata specifies to pull down those packages um the last command there CFN",
    "start": "1738399",
    "end": "1745080"
  },
  {
    "text": "signal so that's another of the cloud formation helper functions in this particular case what",
    "start": "1745080",
    "end": "1751440"
  },
  {
    "text": "we actually want to do is make sure that the stack doesn't create completely",
    "start": "1751440",
    "end": "1756559"
  },
  {
    "text": "until the application's installed uh and so we have I just come",
    "start": "1756559",
    "end": "1763279"
  },
  {
    "text": "down a little bit to a couple more resources so we have this notion of a weight condition",
    "start": "1763279",
    "end": "1769080"
  },
  {
    "text": "so you can think of a weight condition just as a semaphore it's really just something that gets created but doesn't",
    "start": "1769080",
    "end": "1776399"
  },
  {
    "text": "get completely created until it's signaled from somewhere um uh I can",
    "start": "1776399",
    "end": "1786120"
  },
  {
    "text": "try that work yeah there you go um so we have a weight condition",
    "start": "1787120",
    "end": "1794080"
  },
  {
    "text": "that's really just a a a semaphor uh that needs to be signaled from somewhere in order to be",
    "start": "1794080",
    "end": "1799880"
  },
  {
    "text": "created so the the very last command in the user data script that we had is a",
    "start": "1799880",
    "end": "1806320"
  },
  {
    "text": "signal and it signals the weight condition that we had so essentially what's going to happen is we're going to",
    "start": "1806320",
    "end": "1812000"
  },
  {
    "text": "call CFN a knit download other software onto the box and then signal as soon as",
    "start": "1812000",
    "end": "1817200"
  },
  {
    "text": "that's created so now we know the application itself is installed and running uh and so then the weight",
    "start": "1817200",
    "end": "1823000"
  },
  {
    "text": "condition can be complete once the signal happens so it's really a way to stop the stack being created completely",
    "start": "1823000",
    "end": "1828840"
  },
  {
    "text": "until the application's installed in this particular",
    "start": "1828840",
    "end": "1833559"
  },
  {
    "start": "1836000",
    "end": "1976000"
  },
  {
    "text": "case um so the output section in this particular template we're passing back a",
    "start": "1836320",
    "end": "1841679"
  },
  {
    "text": "bunch of things to the user of this template so the instance",
    "start": "1841679",
    "end": "1847000"
  },
  {
    "text": "ID um each output has a name just like all the other properties in the",
    "start": "1847000",
    "end": "1852120"
  },
  {
    "text": "template uh and then you can specify a description what is it that this output actually represents in this case it's",
    "start": "1852120",
    "end": "1858360"
  },
  {
    "text": "the instance ID of the newly created instance and we actually want to get the value of that so we pass um we reference",
    "start": "1858360",
    "end": "1866039"
  },
  {
    "text": "the ec2 instance that we created in the template in order to get that value back to the user that's kind of the instance",
    "start": "1866039",
    "end": "1873600"
  },
  {
    "text": "ID um in the ec2 instance creation we didn't specify an availability zone so",
    "start": "1873600",
    "end": "1880000"
  },
  {
    "text": "ec2 will pick one uh so in this particular case we're actually outputting which availability Zone this",
    "start": "1880000",
    "end": "1886320"
  },
  {
    "text": "instance got created in as one of the",
    "start": "1886320",
    "end": "1890518"
  },
  {
    "text": "output um and to get that so that's a runtime attribute of the ec2 instance so",
    "start": "1891440",
    "end": "1896679"
  },
  {
    "text": "ref gets you the physical ID but we need other properties of it and so we have another function called get at and what",
    "start": "1896679",
    "end": "1904120"
  },
  {
    "text": "that does is given a resource in this case ec2 instance and a property in this",
    "start": "1904120",
    "end": "1910159"
  },
  {
    "text": "case availability Zone returns back that property of the instance that was created so it lets you kind of get the",
    "start": "1910159",
    "end": "1916120"
  },
  {
    "text": "runtime properties of the instance in this case uh to pass back to the user",
    "start": "1916120",
    "end": "1921679"
  },
  {
    "text": "you can also use getat anywhere else so if you wanted the availability Zone to be attached to the uh EBS volume you can",
    "start": "1921679",
    "end": "1928519"
  },
  {
    "text": "also use getat to fill in properties of other resources and then finally the the last",
    "start": "1928519",
    "end": "1935840"
  },
  {
    "text": "output that we have here is the URL we want to pass back the URL of the website we just",
    "start": "1935840",
    "end": "1941000"
  },
  {
    "text": "created um and so that's a concatenation of multiple things so we want the HTTP",
    "start": "1941000",
    "end": "1946240"
  },
  {
    "text": "SL slash but we also want the IP address of the EIP that we created um so we have",
    "start": "1946240",
    "end": "1953440"
  },
  {
    "text": "a function called called join which allows you to concatenate strings um and",
    "start": "1953440",
    "end": "1959519"
  },
  {
    "text": "so in this case we're concatenating the the constant HTTP column with the EIP",
    "start": "1959519",
    "end": "1964919"
  },
  {
    "text": "address that we got back from the instant uh from the EIP so now we have the URL of the newly created",
    "start": "1964919",
    "end": "1973080"
  },
  {
    "text": "website um so the question was why does the the concatenation start with the empty string um so the join function",
    "start": "1975440",
    "end": "1983120"
  },
  {
    "text": "allows you to specify a um separator between the the strings in this case I",
    "start": "1983120",
    "end": "1989399"
  },
  {
    "text": "didn't particularly want a separator so it's empty string but you could put anything in there and it will",
    "start": "1989399",
    "end": "1995039"
  },
  {
    "text": "be added between each of the other sections of the The Joint so that's kind of the template um",
    "start": "1995039",
    "end": "2002559"
  },
  {
    "text": "it's pretty simple template creates three resources and a weight condition",
    "start": "2002559",
    "end": "2007960"
  },
  {
    "text": "make a service uh can you make a web service call from the template was the question",
    "start": "2007960",
    "end": "2014240"
  },
  {
    "text": "so no the the it's purely declarative so everything has to be specified in the template as declarations as opposed to",
    "start": "2014240",
    "end": "2020799"
  },
  {
    "text": "scripts so it's not it's not run as",
    "start": "2020799",
    "end": "2025200"
  },
  {
    "text": "such",
    "start": "2026000",
    "end": "2029000"
  },
  {
    "text": "yeah yeah you can get the so the question was do you have to get the content from S3 you can get it from any",
    "start": "2032399",
    "end": "2039760"
  },
  {
    "text": "location it's purely a as long as it's a well- defined URL could be file",
    "start": "2039760",
    "end": "2046480"
  },
  {
    "text": "callon sorry can you say that again yes so the question was given the",
    "start": "2055599",
    "end": "2062398"
  },
  {
    "text": "IP address can we tie that into R 53 um so cloud formation supports most of the resour es that AWS has including Route",
    "start": "2062399",
    "end": "2069599"
  },
  {
    "text": "53 so you can create Route 53 a records C Name Records whatever inside here um",
    "start": "2069599",
    "end": "2076079"
  },
  {
    "text": "and then associate the EIP address using the ref function with that",
    "start": "2076079",
    "end": "2082440"
  },
  {
    "text": "name",
    "start": "2082879",
    "end": "2085878"
  },
  {
    "text": "yeah sorry say that again",
    "start": "2092960",
    "end": "2097639"
  },
  {
    "text": "MH sure um so the question was if you're just updating the software on the instance can you do that without doing a",
    "start": "2105599",
    "end": "2112800"
  },
  {
    "text": "stack update essentially or without updating any of the resources um so clad",
    "start": "2112800",
    "end": "2118560"
  },
  {
    "text": "for just using cloud formation itself uh you can change the the metadata that",
    "start": "2118560",
    "end": "2124680"
  },
  {
    "text": "contains the packages and do a stack update will only update the metadata um there are other functions that you can",
    "start": "2124680",
    "end": "2130720"
  },
  {
    "text": "use on the instance to look for changes to metadata when that metadata changes it will update the software on the stack",
    "start": "2130720",
    "end": "2137119"
  },
  {
    "text": "you're not actually updating any of the resources other than the",
    "start": "2137119",
    "end": "2142039"
  },
  {
    "text": "metadata um so that's kind of the template so let's actually walk through how you actually use that",
    "start": "2143640",
    "end": "2150200"
  },
  {
    "text": "template so this is the cloud formation console um it's one of the consoles for",
    "start": "2150200",
    "end": "2157160"
  },
  {
    "start": "2151000",
    "end": "2335000"
  },
  {
    "text": "AWS yes um so we have a create stack here so",
    "start": "2157160",
    "end": "2163240"
  },
  {
    "text": "really it's just a case of creating a stack by hitting create stack you give it a stack",
    "start": "2163240",
    "end": "2170240"
  },
  {
    "text": "name and you can actually pick templates from multiple places so we have a whole bunch of sample templates that are",
    "start": "2170440",
    "end": "2176720"
  },
  {
    "text": "visible in the console directly so um things like Drupal red mine",
    "start": "2176720",
    "end": "2182680"
  },
  {
    "text": "WordPress various things we'll and we'll talk about some of the sample templates later",
    "start": "2182680",
    "end": "2188920"
  },
  {
    "text": "so you can directly get to those you can upload a template file from local disk",
    "start": "2188920",
    "end": "2193960"
  },
  {
    "text": "which is where I'll get it from or you can provide a template URL now right now",
    "start": "2193960",
    "end": "2199319"
  },
  {
    "text": "the only template URLs that we support are S3 URLs and the template has to be",
    "start": "2199319",
    "end": "2206280"
  },
  {
    "text": "in the same region as the template as the stack that you're creating um so that's a restriction on that",
    "start": "2206280",
    "end": "2212359"
  },
  {
    "text": "one um so we'll pull a template file from here so this is the template we would just looking",
    "start": "2212359",
    "end": "2219599"
  },
  {
    "text": "at so the second page is the parameters page and this is generated from what the content of the template so in this case",
    "start": "2219599",
    "end": "2227319"
  },
  {
    "text": "remember we only had one uh parameter instance type and the default Valu is filled in for you you can change that so",
    "start": "2227319",
    "end": "2234400"
  },
  {
    "text": "we can change that to T to M1 small if we want",
    "start": "2234400",
    "end": "2240400"
  },
  {
    "text": "to uh you can then tag Stacks so we allow you to add tags to",
    "start": "2240400",
    "end": "2246319"
  },
  {
    "text": "Stacks um there's a couple of things there one is those tags will be propagated to all of the resources that",
    "start": "2246319",
    "end": "2252040"
  },
  {
    "text": "support tags so ec2 instances EBS volumes VPC all of those things those",
    "start": "2252040",
    "end": "2258079"
  },
  {
    "text": "tags will get propagated you can use those then for cost allocation purposes so you can use Amazon um cost allocation",
    "start": "2258079",
    "end": "2266000"
  },
  {
    "text": "by tagging so it means that you can use if you spin up an application using cloud formation with tags you can then",
    "start": "2266000",
    "end": "2273200"
  },
  {
    "text": "see over time how much that actually going to cost you so we'll put tag in",
    "start": "2273200",
    "end": "2280680"
  },
  {
    "text": "here uh you can put tags on resources in the template so the question was can you tag put tags in the template so any",
    "start": "2284040",
    "end": "2290560"
  },
  {
    "text": "resources that support tagging you can also as one of the property support tags",
    "start": "2290560",
    "end": "2295640"
  },
  {
    "text": "uh already in there and then you kind of get a summary page of what is it we're about to do so",
    "start": "2295640",
    "end": "2302920"
  },
  {
    "text": "we're about to create this stack there's a link to the cost calculator here so that's the AWS cost calculator so it",
    "start": "2302920",
    "end": "2309760"
  },
  {
    "text": "fills in all of those properties from the template that that um you specified",
    "start": "2309760",
    "end": "2315160"
  },
  {
    "text": "and it'll give you an idea of what is it going to cost to run this template um and we'll just hit",
    "start": "2315160",
    "end": "2323119"
  },
  {
    "text": "continue and that's really it so now the stack is creating progress and ultimately all of those resources will",
    "start": "2323119",
    "end": "2329640"
  },
  {
    "text": "get spun",
    "start": "2329640",
    "end": "2332119"
  },
  {
    "start": "2335000",
    "end": "2589000"
  },
  {
    "text": "up yes and so I'll I'll walk through the that where to get that",
    "start": "2335000",
    "end": "2340800"
  },
  {
    "text": "from um so reinvent demo one is is a a",
    "start": "2340960",
    "end": "2346119"
  },
  {
    "text": "stack that I created earlier and it's from the same template so it's it's exactly the same template we were just",
    "start": "2346119",
    "end": "2351560"
  },
  {
    "text": "looking at um that's already crate complete in the bottom section here you",
    "start": "2351560",
    "end": "2357079"
  },
  {
    "text": "can see various things that we give you back about this about this stack and the template so in the description tab we",
    "start": "2357079",
    "end": "2363319"
  },
  {
    "text": "really give you what is it that this uh St is so it gives you the description",
    "start": "2363319",
    "end": "2369200"
  },
  {
    "text": "that was in the template is down here tells you when it was created what",
    "start": "2369200",
    "end": "2374640"
  },
  {
    "text": "its current statuses and then a stack ID which is you can use that for various",
    "start": "2374640",
    "end": "2380359"
  },
  {
    "text": "things if you use an API calls for example you can pass the stack ID to that and the stack name so so that's",
    "start": "2380359",
    "end": "2386920"
  },
  {
    "text": "really just kind of an overview of of this particular stack you can see the resources that",
    "start": "2386920",
    "end": "2393359"
  },
  {
    "text": "were actually created so in this T in this tab we give you the mapping that we",
    "start": "2393359",
    "end": "2399240"
  },
  {
    "text": "created so in the template we had logical IDs we actually created physical resources behind those um so each of",
    "start": "2399240",
    "end": "2406960"
  },
  {
    "text": "these uh logical IDs is mapped to a physical ID so in this case the security group that was created from instance",
    "start": "2406960",
    "end": "2414280"
  },
  {
    "text": "Security Group in the template is actually this physical",
    "start": "2414280",
    "end": "2419480"
  },
  {
    "text": "ID um and then there's various other things you can see the original template you can see parameters that were passed",
    "start": "2419640",
    "end": "2425480"
  },
  {
    "text": "in you can see the tags that were passed in so it's really just here's all the things that you did in order to create",
    "start": "2425480",
    "end": "2431599"
  },
  {
    "text": "the stack that's kind of",
    "start": "2431599",
    "end": "2436040"
  },
  {
    "text": "Y right",
    "start": "2448560",
    "end": "2452560"
  },
  {
    "text": "that that's good feedback actually so the the feedback was it doesn't so the events tab gets populated as things",
    "start": "2467920",
    "end": "2474480"
  },
  {
    "text": "happen but it doesn't tell you what's left to do um so that's good",
    "start": "2474480",
    "end": "2479640"
  },
  {
    "text": "feedback how do",
    "start": "2479640",
    "end": "2483799"
  },
  {
    "text": "so the question was how do you debug uh stack so right now the only way to do that is to actually create it um which",
    "start": "2487640",
    "end": "2494240"
  },
  {
    "text": "is kind of an iterative",
    "start": "2494240",
    "end": "2497920"
  },
  {
    "text": "process yeah so if the stack fails to create everything get rolled back um so",
    "start": "2514000",
    "end": "2519119"
  },
  {
    "text": "we'll delete everything that was",
    "start": "2519119",
    "end": "2522240"
  },
  {
    "text": "created yeah um so flipping",
    "start": "2524800",
    "end": "2531000"
  },
  {
    "text": "on so what can I include in the template um so we support basically a broad range",
    "start": "2531000",
    "end": "2536319"
  },
  {
    "text": "of the AWS Services uh the list too long to mention but it's all in the",
    "start": "2536319",
    "end": "2542559"
  },
  {
    "text": "documentation uh cloud formation itself has a few resources that we we can create weight condition and metadata",
    "start": "2542559",
    "end": "2548559"
  },
  {
    "text": "we've looked at custom resource we'll talk about uh shortly uh the other thing to note is",
    "start": "2548559",
    "end": "2554960"
  },
  {
    "text": "elastic beant stock the other service that is kind of in the same space actually uses cloud formation to to",
    "start": "2554960",
    "end": "2561559"
  },
  {
    "text": "create elastic beant stock environments um um there's a talk on elastic Bean stalk later on today if if folks are",
    "start": "2561559",
    "end": "2568440"
  },
  {
    "text": "interested have the the session at the end um so how do I change my stack so",
    "start": "2568440",
    "end": "2577640"
  },
  {
    "text": "the template is just a text file you can make changes to that go",
    "start": "2577640",
    "end": "2582760"
  },
  {
    "text": "ahead so the question was can Autos scaling groups via the policy and the trigger",
    "start": "2588640",
    "end": "2595040"
  },
  {
    "text": "cause cloud information templates to get executed I think is it not today although it's certainly something",
    "start": "2595040",
    "end": "2602760"
  },
  {
    "text": "interesting um so how do I change my stack so the application requirements",
    "start": "2602760",
    "end": "2607800"
  },
  {
    "text": "can change over time I may need to add a cash I may need to add additional resources change properties so really",
    "start": "2607800",
    "end": "2613480"
  },
  {
    "text": "you just edit the template it's just a text file uh you can Version Control that text file along with all the other",
    "start": "2613480",
    "end": "2619920"
  },
  {
    "text": "application um artifacts that you have so you can effectively Version Control the infrastructure by version",
    "start": "2619920",
    "end": "2625960"
  },
  {
    "text": "controlling the template uh you can update properties of existing resources so if you need to",
    "start": "2625960",
    "end": "2632119"
  },
  {
    "text": "change existing properties you can do that if you need to add resources you can do that if you need to remove",
    "start": "2632119",
    "end": "2637319"
  },
  {
    "text": "resources you can do that you can change the metadata we talked a little bit about that so you can update the stack",
    "start": "2637319",
    "end": "2643079"
  },
  {
    "text": "itself so essentially you just give us the template back we'll do a diff and make the",
    "start": "2643079",
    "end": "2649440"
  },
  {
    "text": "changes yeah in fact so the question was if I update the security group so",
    "start": "2656880",
    "end": "2664400"
  },
  {
    "text": "um there were a bunch of questions so were running a little bit behind but does a so I actually have a template",
    "start": "2664400",
    "end": "2671720"
  },
  {
    "text": "which has some diffs from the original template so in this particular case in the original template we didn't",
    "start": "2671720",
    "end": "2678680"
  },
  {
    "text": "um we didn't add a key pair to the instance so I can't SSH to the instance",
    "start": "2678680",
    "end": "2684000"
  },
  {
    "text": "so now I want to be able to SSH to the instance I need to actually change the instance uh I need to change the",
    "start": "2684000",
    "end": "2689760"
  },
  {
    "text": "security group so I can open up the SSH um Port so in the particular case um",
    "start": "2689760",
    "end": "2697240"
  },
  {
    "text": "oops wrong one try that one so in this particular case what I've",
    "start": "2697240",
    "end": "2702920"
  },
  {
    "text": "done is added a parameter key name which is really just to give me a separate key name um and then in the resources",
    "start": "2702920",
    "end": "2710359"
  },
  {
    "text": "section I've modified the security group to also open port",
    "start": "2710359",
    "end": "2715520"
  },
  {
    "text": "22 um so that I can SSH to the box and in the instance I've also specified the",
    "start": "2715520",
    "end": "2722760"
  },
  {
    "text": "key name in the instance so if I take my original stack and apply this template",
    "start": "2722760",
    "end": "2728839"
  },
  {
    "text": "to it it will make those changes uh in this case you can't change",
    "start": "2728839",
    "end": "2734040"
  },
  {
    "text": "the instance on the fly to create to add a key name so we'll create another",
    "start": "2734040",
    "end": "2740000"
  },
  {
    "text": "instance with the key name in it and then we'll associate that with the EIP so in this particular case we're",
    "start": "2740000",
    "end": "2745760"
  },
  {
    "text": "actually tearing down the existing instance and bringing up another instance um but that's just because the key name can't be changed on the Fly",
    "start": "2745760",
    "end": "2755039"
  },
  {
    "text": "sorry can you I got I didn't hear",
    "start": "2761720",
    "end": "2767318"
  },
  {
    "text": "that yeah so if you have so the question was if you have data on the volume uh",
    "start": "2772520",
    "end": "2777559"
  },
  {
    "text": "data on the instance which is um transient if you like so in other words it's on the on the boot disc of the",
    "start": "2777559",
    "end": "2785000"
  },
  {
    "text": "volume of that instance you'll lose that data or we're really going to replace",
    "start": "2785000",
    "end": "2792000"
  },
  {
    "text": "it so so the question was can an instance detect an update's going to happen um so not right now although it",
    "start": "2802359",
    "end": "2809160"
  },
  {
    "text": "is something we're looking at which is how do you get the instance to participate in the the stack update",
    "start": "2809160",
    "end": "2814520"
  },
  {
    "text": "process so that's something we're looking at um so getting started with templates",
    "start": "2814520",
    "end": "2820559"
  },
  {
    "text": "there's a bunch of different places but essentially we have a template Library just flip quickly to",
    "start": "2820559",
    "end": "2827040"
  },
  {
    "text": "that um so there's a template library that contains a whole bunch of different kinds of templates so it",
    "start": "2827040",
    "end": "2833839"
  },
  {
    "text": "contains end to end templates so we have a bunch of Windows samples like SharePoint",
    "start": "2833839",
    "end": "2840079"
  },
  {
    "text": "um we have a whole bunch of recently added ones there's open source",
    "start": "2840079",
    "end": "2845920"
  },
  {
    "text": "application so this is kind of where you get the templates which are from the drop down in the console so that's",
    "start": "2845920",
    "end": "2851559"
  },
  {
    "text": "essentially this set of templates here yep how you Auto scaling sure um so the",
    "start": "2851559",
    "end": "2859200"
  },
  {
    "text": "question was how do you integrate with auto scaling so in a in a template rather than an ec2 instance I can create",
    "start": "2859200",
    "end": "2864839"
  },
  {
    "text": "an autoscaling group um and then set up whatever policies and triggers I want on",
    "start": "2864839",
    "end": "2870559"
  },
  {
    "text": "that um particular Auto scaling group so just like we added an ec2 instance here",
    "start": "2870559",
    "end": "2875800"
  },
  {
    "text": "um some of these applic actually use an Autos scaling group",
    "start": "2875800",
    "end": "2880720"
  },
  {
    "text": "instead yeah so the question was can you use the templates to create an essentially an image that you can then",
    "start": "2891319",
    "end": "2897119"
  },
  {
    "text": "use elsewhere um so yes you can use you can create template that downloads all",
    "start": "2897119",
    "end": "2903359"
  },
  {
    "text": "the software puts it on the box and then manually create the uh the image from that instance we don't give you a",
    "start": "2903359",
    "end": "2909200"
  },
  {
    "text": "mechanism inside cloud formation to say make this into an army right",
    "start": "2909200",
    "end": "2914839"
  },
  {
    "text": "now it's certainly something we're looking at um so that's the template Library uh",
    "start": "2914839",
    "end": "2922520"
  },
  {
    "text": "it's if you go the coud formation homepage there's a link on the left hand side to take you to the temple library",
    "start": "2922520",
    "end": "2929280"
  },
  {
    "text": "and that's actually a good place to start if you're building a template is pick one from the template library and just modify it to whatever you need for",
    "start": "2929280",
    "end": "2935920"
  },
  {
    "text": "your application um so what if you have an application already running uh and you actually want",
    "start": "2935920",
    "end": "2943160"
  },
  {
    "text": "to create template from it so we we provide a tool called Cloud forer that's",
    "start": "2943160",
    "end": "2949119"
  },
  {
    "text": "really it's it's kind of an appliance that you spin up in your account so it's an instance it's running software",
    "start": "2949119",
    "end": "2955040"
  },
  {
    "text": "um and it runs through your account all the resources in your account and let you select which resources you want to",
    "start": "2955040",
    "end": "2961880"
  },
  {
    "text": "include in the template uh and then it allows you to customize the names that get put into the template or add outputs things like",
    "start": "2961880",
    "end": "2968960"
  },
  {
    "text": "that and so you can kind of use it as a starting point for creating a template",
    "start": "2968960",
    "end": "2974000"
  },
  {
    "text": "from an existing application what it does though is it fills in all the properties so for",
    "start": "2974000",
    "end": "2979520"
  },
  {
    "text": "example if there was an ec2 instance the template that got created through Cloud fora would actually include the",
    "start": "2979520",
    "end": "2985160"
  },
  {
    "text": "availability Zone in it because it's one of the properties um so it's really a starting point so you can use that as a",
    "start": "2985160",
    "end": "2991720"
  },
  {
    "text": "base and then either take things out or abstract things out whatever whatever you want to do with that um so that's",
    "start": "2991720",
    "end": "2998799"
  },
  {
    "text": "kind of how you would create a um a template from an existing running",
    "start": "2998799",
    "end": "3007760"
  },
  {
    "text": "application um what if you got non AWS resources so cloud formation we've talked a lot about kind of all the AWS",
    "start": "3008880",
    "end": "3015880"
  },
  {
    "text": "resources that that you can put in a template so a couple of weeks ago we launched new feature that we call",
    "start": "3015880",
    "end": "3022680"
  },
  {
    "text": "userdefined or custom resources so you can now specify anything really in a in a template um",
    "start": "3022680",
    "end": "3030240"
  },
  {
    "text": "and the way that works is cloud formation obviously doesn't know to how to interact with that with an arbitrary",
    "start": "3030240",
    "end": "3036079"
  },
  {
    "text": "resource uh we obviously do the work to do AWS resources but if you have say I",
    "start": "3036079",
    "end": "3042240"
  },
  {
    "text": "don't know pick one pingdom for example um if you want to include a pingdom alarm as part of your stack Cloud",
    "start": "3042240",
    "end": "3049200"
  },
  {
    "text": "information doesn't know how to talk to pingdom but we have the notion of a bridge which is a piece of software that",
    "start": "3049200",
    "end": "3055799"
  },
  {
    "text": "you write that interacts with cloud formation through essentially an SNS topic allows",
    "start": "3055799",
    "end": "3062839"
  },
  {
    "text": "you to get stack Creations stack update stack delete notifications you get those",
    "start": "3062839",
    "end": "3068280"
  },
  {
    "text": "notifications and then you can call whatever service you want on on the back end of that so it's kind of a bridge to",
    "start": "3068280",
    "end": "3074200"
  },
  {
    "text": "be able to add anything you want into the template um and then create those",
    "start": "3074200",
    "end": "3079839"
  },
  {
    "text": "resources even if they're not AWS resources um just as a quick kind of",
    "start": "3079839",
    "end": "3085319"
  },
  {
    "text": "view of what that actually looks like this is a actually a pingdom",
    "start": "3085319",
    "end": "3090640"
  },
  {
    "text": "example so the resources look the same uh logically so each one has a type",
    "start": "3090640",
    "end": "3096559"
  },
  {
    "text": "in this case custom resource is the type that we use for resources that we don't know about",
    "start": "3096559",
    "end": "3103119"
  },
  {
    "text": "um and then the rest of the properties are essentially up to you depends what you need for that particular resource so",
    "start": "3103119",
    "end": "3108720"
  },
  {
    "text": "you can specify anything in there that that resource needs um the",
    "start": "3108720",
    "end": "3114280"
  },
  {
    "text": "only property that you have to specify is the property called service token which is essentially an SNS topic that",
    "start": "3114280",
    "end": "3121640"
  },
  {
    "text": "whatever your application is listening to gets send those messages so you'll get a stack creation message that says I",
    "start": "3121640",
    "end": "3128520"
  },
  {
    "text": "want to create this Resource as part of this stack or you get an update request that says I want to change these",
    "start": "3128520",
    "end": "3134920"
  },
  {
    "text": "properties of that custom resource or when you delete the stack you'll get a delete message so it's really where",
    "start": "3134920",
    "end": "3141000"
  },
  {
    "text": "where do we send the messages and we'll package up all other the properties that are in the template and send them to you",
    "start": "3141000",
    "end": "3146640"
  },
  {
    "text": "during those events so you can do whatever you want with those uh particular",
    "start": "3146640",
    "end": "3152240"
  },
  {
    "text": "things so sorry say that",
    "start": "3155720",
    "end": "3160520"
  },
  {
    "text": "again you could certainly use it for that I don't we haven't got examples of",
    "start": "3162079",
    "end": "3167280"
  },
  {
    "text": "that so the question was is that a good way to use uh to get the instance itself to be a participant in the transaction",
    "start": "3167280",
    "end": "3173559"
  },
  {
    "text": "in the stack creation phases um you certainly use it for",
    "start": "3173559",
    "end": "3179240"
  },
  {
    "text": "that um so if you only remember three things from the presentation I guess so",
    "start": "3184119",
    "end": "3189559"
  },
  {
    "text": "templates are reusable you can create the stack you can create multiple Stacks in a single region you can create Stacks",
    "start": "3189559",
    "end": "3196200"
  },
  {
    "text": "across regions all from the same template um now that we have custom resources you can extend the set of",
    "start": "3196200",
    "end": "3202680"
  },
  {
    "text": "resources you want to whatever to cover whatever application requirements you have and we support the full application",
    "start": "3202680",
    "end": "3210119"
  },
  {
    "text": "life cycle so you can create update delete you can make changes over time",
    "start": "3210119",
    "end": "3215200"
  },
  {
    "text": "depending on how the application changes um so I guess call to action so",
    "start": "3215200",
    "end": "3222480"
  },
  {
    "text": "try out cloud formation if you haven't already tried it out um take one take one of the sample templates modify it",
    "start": "3222480",
    "end": "3229079"
  },
  {
    "text": "customize it for your own applications or use cloud forer to create a template from your existing",
    "start": "3229079",
    "end": "3235079"
  },
  {
    "text": "application and then try to update stack see what",
    "start": "3235079",
    "end": "3240000"
  },
  {
    "text": "happens um sorry go",
    "start": "3240920",
    "end": "3245078"
  },
  {
    "text": "ahead MH okay yeah um so the question was what happens if an update fails I",
    "start": "3252160",
    "end": "3257520"
  },
  {
    "text": "guess um so if you do a stack update and and the stack fails then we'll roll back",
    "start": "3257520",
    "end": "3262720"
  },
  {
    "text": "any changes that's why we in in some cases create new things we leave the old things around just in case it rolls back",
    "start": "3262720",
    "end": "3269160"
  },
  {
    "text": "to put it back in um so we'll try and recover from an update if it fails um so here's some related content",
    "start": "3269160",
    "end": "3278119"
  },
  {
    "text": "uh introduction to beant stocks later this afternoon there's a few other um",
    "start": "3278119",
    "end": "3283559"
  },
  {
    "text": "presentations there that include cloud formation um if you have any questions I'll be in the developer Lounge later",
    "start": "3283559",
    "end": "3290200"
  },
  {
    "text": "along with the rest of the team so come find us",
    "start": "3290200",
    "end": "3296240"
  },
  {
    "text": "so so the question was is there any way to lock down resources so that you can't accidentally break them I guess um so",
    "start": "3308079",
    "end": "3314319"
  },
  {
    "text": "not today but that's that's a good good feature request um and then finally um since",
    "start": "3314319",
    "end": "3321000"
  },
  {
    "text": "this the first reinvent your feedbacks um we're very happy to get your feedback we'll do more sessions um and getting",
    "start": "3321000",
    "end": "3328480"
  },
  {
    "text": "any feedback would be great thank you",
    "start": "3328480",
    "end": "3333559"
  }
]