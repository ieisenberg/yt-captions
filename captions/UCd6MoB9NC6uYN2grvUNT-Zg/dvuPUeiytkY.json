[
  {
    "start": "0",
    "end": "45000"
  },
  {
    "text": "let's let's get going before we get started i'd like to do a quick survey around the room uh how many people here",
    "start": "2240",
    "end": "7839"
  },
  {
    "text": "have a production um web application deployment uh in aws",
    "start": "7839",
    "end": "12880"
  },
  {
    "text": "right now that's a lot of people um how many people have uh have a laugh in that",
    "start": "12880",
    "end": "19520"
  },
  {
    "text": "deployment as well so that's that's not that's that's not a lot of people how about um",
    "start": "19520",
    "end": "25840"
  },
  {
    "text": "how about autoscaling how many people here ought to scale their environment with the lb",
    "start": "25840",
    "end": "31119"
  },
  {
    "text": "so that's that's a good number it looks it looks like about half of the half of the room here you guys ought to scale using elb primarily or other tools how",
    "start": "31119",
    "end": "38399"
  },
  {
    "text": "many people here here use elb versus their own home homegrown tools most people use zlb got it",
    "start": "38399",
    "end": "46160"
  },
  {
    "start": "45000",
    "end": "185000"
  },
  {
    "text": "so that's a um that's actually what we wanted to start with we've been",
    "start": "46320",
    "end": "51520"
  },
  {
    "text": "first of all alert logic primarily works with cloud and hosting customers so we have we have a lot of data about incident",
    "start": "51520",
    "end": "57440"
  },
  {
    "text": "trends that we see we have some people here in the room amanda's back there she's got a copy of the cloud security report that we put",
    "start": "57440",
    "end": "63840"
  },
  {
    "text": "out because we have a lot of live incident data one of the viewpoints we have is the premise that everybody has",
    "start": "63840",
    "end": "70479"
  },
  {
    "text": "that the cloud is less secure than on-premise deployments especially enterprise deployments is that really",
    "start": "70479",
    "end": "76159"
  },
  {
    "text": "true or not at least in our estimation that doesn't appear to be true at all in fact we see",
    "start": "76159",
    "end": "82640"
  },
  {
    "text": "higher attack frequency in enterprise deployments i think a lot of it has to do with the fact of what's actually",
    "start": "82640",
    "end": "88000"
  },
  {
    "text": "deployed in many cloud environments when we deal with cloud customers a lot of a lot of times what we see are not",
    "start": "88000",
    "end": "93920"
  },
  {
    "text": "necessarily entire data centers being airlifted into into amazon its applications and those applications are",
    "start": "93920",
    "end": "100400"
  },
  {
    "text": "usually uh usually protected much better than they than they can be in an enterprise environment they have a very",
    "start": "100400",
    "end": "105680"
  },
  {
    "text": "specific set of uh security groups they have a very specific set of settings most of the time it's automated so as a",
    "start": "105680",
    "end": "112159"
  },
  {
    "text": "result it's easy to do deployments it's easy to do patching so we see very different trends between on-premise",
    "start": "112159",
    "end": "117840"
  },
  {
    "text": "versus cloud attacks we see fewer of them and as a result i do believe that a lot of cloud",
    "start": "117840",
    "end": "122960"
  },
  {
    "text": "deployments if not are inherently more secure but certainly can be more secure than on-premise deployments now what we",
    "start": "122960",
    "end": "129200"
  },
  {
    "text": "do see as a commonality between on-premise and cloud deployments is that web attacks are surprisingly high uh",
    "start": "129200",
    "end": "136400"
  },
  {
    "text": "attack vector we see it as as one of the top three attack factors no matter where we go so web attacks are fairly",
    "start": "136400",
    "end": "142959"
  },
  {
    "text": "common we're going to show you some other data that we have about what specifically we see in terms of web attacks i think it's important to",
    "start": "142959",
    "end": "148640"
  },
  {
    "text": "understand exactly not just is it a big vector but also what are we being attacked with is it is",
    "start": "148640",
    "end": "154239"
  },
  {
    "text": "it the most advanced attacks in the universe or is it easy stuff that you should be able to filter out uh with",
    "start": "154239",
    "end": "159920"
  },
  {
    "text": "fairly minimal effort right um but in general we see attacks be consistent pretty much across the board",
    "start": "159920",
    "end": "166319"
  },
  {
    "text": "we see it just as much in enterprises we see in a cloud attack frequency is smaller in the in the cloud and also the",
    "start": "166319",
    "end": "172879"
  },
  {
    "text": "exposed surface is much smaller so as a result we just see fewer incidents in most cloud environments and that those",
    "start": "172879",
    "end": "178560"
  },
  {
    "text": "numbers might change as more infrastructure moves to the cloud but so far we haven't seen cloud environments",
    "start": "178560",
    "end": "184080"
  },
  {
    "text": "be less secure yet so um what's what's interesting about",
    "start": "184080",
    "end": "189280"
  },
  {
    "start": "185000",
    "end": "338000"
  },
  {
    "text": "about security is when you talk to uh to people that make decisions about what what they want to buy in the cloud",
    "start": "189280",
    "end": "195360"
  },
  {
    "text": "security actually shows up at the very top of the list but that when you that when you talk to people about what do",
    "start": "195360",
    "end": "200720"
  },
  {
    "text": "they actually have running in cloud environments you find that there's actually not a lot of security tools and is it because people don't care it",
    "start": "200720",
    "end": "206400"
  },
  {
    "text": "certainly doesn't seem like it's a like it's a low priority people put at the top of the list in most major",
    "start": "206400",
    "end": "212319"
  },
  {
    "text": "surveys this is one done by uh the infopro group that's a division of 451",
    "start": "212319",
    "end": "218319"
  },
  {
    "text": "research the way they do it is they call four to five hundred midsize and large enterprises and ask them uh how are you",
    "start": "218319",
    "end": "224799"
  },
  {
    "text": "making cloud buying decisions what's important to you security is is universally uh you decided as was one of",
    "start": "224799",
    "end": "230640"
  },
  {
    "text": "the most important things out there yet again when you talk to those customers about what you actually do about it there's not a whole lot out there i",
    "start": "230640",
    "end": "236640"
  },
  {
    "text": "think there's a reason for that we'll get we'll get back to that a little bit later uh but in terms of what uh what",
    "start": "236640",
    "end": "242560"
  },
  {
    "text": "attacks do you actually see out there and what vulnerabilities do you see uh this is a this isn't actually our data this is a company called uh white hat",
    "start": "242560",
    "end": "249599"
  },
  {
    "text": "security they do web application scanning so they identify vulnerabilities out there they their",
    "start": "249599",
    "end": "254879"
  },
  {
    "text": "data actually correlates very closely to ours uh this is the the o wasp top 10",
    "start": "254879",
    "end": "260000"
  },
  {
    "text": "attacks uh the and the the top 10 for owasp has been stable for probably two",
    "start": "260000",
    "end": "265520"
  },
  {
    "text": "to three years at this point maybe maybe maybe even longer these are very common web application attacks these are things like cross-site",
    "start": "265520",
    "end": "272160"
  },
  {
    "text": "scripting information leakage content spoofing command injection attacks",
    "start": "272160",
    "end": "277280"
  },
  {
    "text": "this top 10 has been out there for a very long time this is the bread and butter of most web",
    "start": "277280",
    "end": "282479"
  },
  {
    "text": "application uh breaches the reality of it is that a lot of web code out there is riddled with holes",
    "start": "282479",
    "end": "288639"
  },
  {
    "text": "it's relatively easy for somebody to find out what they are i suspect at some point when the defenses get strong enough we are going",
    "start": "288639",
    "end": "295280"
  },
  {
    "text": "to see more sophistication out there but that's not what we see today that's not what white hat sees either so this is",
    "start": "295280",
    "end": "301280"
  },
  {
    "text": "our data uh in terms of which specific attacks that we see out there what's what's",
    "start": "301280",
    "end": "306479"
  },
  {
    "text": "fascinating is that havage toolkit which is the i mean it's got a graphical ui so you know it's not written for uh",
    "start": "306479",
    "end": "313120"
  },
  {
    "text": "security experts it's written for script kitties right it's the most common tool that we see out there the vast majority",
    "start": "313120",
    "end": "319039"
  },
  {
    "text": "of the web attacks that we see are generated using a very simple to use tool kit",
    "start": "319039",
    "end": "324400"
  },
  {
    "text": "and anybody with marginal technical skills can find web location flaws exploit them",
    "start": "324400",
    "end": "330320"
  },
  {
    "text": "and until we reverse that picture until we make it more difficult i suspect that's going to stay that's going to",
    "start": "330320",
    "end": "335600"
  },
  {
    "text": "stay the same and we're going to see that the same picture right now just fundamentals of what what web app",
    "start": "335600",
    "end": "342000"
  },
  {
    "start": "338000",
    "end": "524000"
  },
  {
    "text": "firewalls do by the way in this room how many of you feel like you have a fairly good grasp of what a waff is and and how it",
    "start": "342000",
    "end": "348479"
  },
  {
    "text": "operates so it's not everybody i'm going to i'm not going to spend a lot of time on this but the basic idea is that you put a you",
    "start": "348479",
    "end": "354720"
  },
  {
    "text": "put an inline proxy in front of you or in front of your web service it's it's a reverse proxy it essentially allows you",
    "start": "354720",
    "end": "360639"
  },
  {
    "text": "to filter out malicious traffic so the assumption is that the waff can identify malicious attacks out there as they're",
    "start": "360639",
    "end": "367280"
  },
  {
    "text": "traversing the network and as before they get to your to your servers you can filter them out so good theoretically at",
    "start": "367280",
    "end": "373440"
  },
  {
    "text": "least good sessions continue forward sql injection crosstrack scripting all the stuff you want to block gets blocked uh",
    "start": "373440",
    "end": "380000"
  },
  {
    "text": "this is technology's been around for about 10 years it's not new uh so it should be fairly pervasive um",
    "start": "380000",
    "end": "385840"
  },
  {
    "text": "and what makes waffs work really right there there's really two types of them and uh",
    "start": "385840",
    "end": "391759"
  },
  {
    "text": "there's two major technologies and two major approaches that you find in the waff world one of them is reliant on",
    "start": "391759",
    "end": "397280"
  },
  {
    "text": "blacklisting the the whole concept there is that you have a static rule set very similar to antivirus right static rules",
    "start": "397280",
    "end": "405039"
  },
  {
    "text": "you expl you essentially define what a sql injection attack looks like that allows the the wave to match on a",
    "start": "405039",
    "end": "410960"
  },
  {
    "text": "typical sql injection attack and other attack types and filter that out that's a very simple way to get value out of",
    "start": "410960",
    "end": "416880"
  },
  {
    "text": "oaf it starts working as soon as you put it into into production it'll start filtering out",
    "start": "416880",
    "end": "422240"
  },
  {
    "text": "a bit more for false positive prone obviously these rules cannot be accurate",
    "start": "422240",
    "end": "427360"
  },
  {
    "text": "100 of the time they don't always work but it is the fastest way to get value out of a web",
    "start": "427360",
    "end": "433039"
  },
  {
    "text": "application firewall now most of the flaws out there and we don't",
    "start": "433039",
    "end": "438160"
  },
  {
    "text": "have a slide on this but but i do have one back at the office most of that uh exposed surface and web applications is",
    "start": "438160",
    "end": "444479"
  },
  {
    "text": "actually custom code right it's it's code that some developer wrote it's not commercial quality uh software it's not",
    "start": "444479",
    "end": "451199"
  },
  {
    "text": "really well known flaws it's just web code that somebody banged out and there's an unfor unfortunately there's a",
    "start": "451199",
    "end": "456319"
  },
  {
    "text": "sql injection flow on it or one of the one of the other flaws so typical static rules can't find every",
    "start": "456319",
    "end": "463360"
  },
  {
    "text": "single flaw out there there's quite a few of them out there that are that are in custom code for that uh for those",
    "start": "463360",
    "end": "469039"
  },
  {
    "text": "type of flaws white listing is a much better approach what it essentially does is learn their",
    "start": "469039",
    "end": "474080"
  },
  {
    "text": "applications so imagine your web application firewall sits in line certain number of requests later it",
    "start": "474080",
    "end": "480000"
  },
  {
    "text": "figures out i sort of have a sense now for what for what your application looks like what it should or shouldn't do at",
    "start": "480000",
    "end": "486080"
  },
  {
    "text": "that point it starts to block and it starts to filter out malicious traffic so the the benefit of the white listing",
    "start": "486080",
    "end": "491919"
  },
  {
    "text": "approach it is slower it takes time to figure that out but once that happens it is essentially now tuned to your",
    "start": "491919",
    "end": "497360"
  },
  {
    "text": "specific uh specific application so it's much more flexible it's much more tuned to your environment it's a it's",
    "start": "497360",
    "end": "503360"
  },
  {
    "text": "certainly a much more accurate way to go forward in a lot of ways if somebody's tuning in the wave",
    "start": "503360",
    "end": "508720"
  },
  {
    "text": "properly a lot of times they will then depreciate the nega the blacklisting rules and then use more of the white",
    "start": "508720",
    "end": "514399"
  },
  {
    "text": "listing rules because those are actually tuned to this specific application so the problem with all this is that it's",
    "start": "514399",
    "end": "519599"
  },
  {
    "text": "fairly complex and it doesn't let you auto scale easily so",
    "start": "519599",
    "end": "525200"
  },
  {
    "start": "524000",
    "end": "663000"
  },
  {
    "text": "before we get into that uh just a couple of words on this is not a web auto scaling session there's",
    "start": "525200",
    "end": "530959"
  },
  {
    "text": "probably a number of sessions at re invent where you can learn about how to auto scale your web tier we're going to",
    "start": "530959",
    "end": "536240"
  },
  {
    "text": "talk about security first and foremost but at the when you're talking about architecture there's a couple of things",
    "start": "536240",
    "end": "541839"
  },
  {
    "text": "you have to have in place in order to auto scale uh easily right one of the most important is that",
    "start": "541839",
    "end": "548480"
  },
  {
    "text": "ideally your application should be as loosely coupled as possible the tiers that you're scaling should not be",
    "start": "548480",
    "end": "553519"
  },
  {
    "text": "dependent heavily on each other you should be able to scale them out uh linearly uh independent components",
    "start": "553519",
    "end": "559519"
  },
  {
    "text": "talking to each other as little as possible through fairly well abstract the connections right so",
    "start": "559519",
    "end": "564959"
  },
  {
    "text": "you want as little status as as possible and as much as as much an ability to",
    "start": "564959",
    "end": "570080"
  },
  {
    "text": "scale these things out without without having to scale in log step with all other layers right the second thing you're looking",
    "start": "570080",
    "end": "576399"
  },
  {
    "text": "for is that you really should be designed for failure right so in addition to be able to scale horizontally one of the number one",
    "start": "576399",
    "end": "582240"
  },
  {
    "text": "things you look for in auto scaling is you want a fast bootstrap when you auto scale when you bring up a new instance",
    "start": "582240",
    "end": "588000"
  },
  {
    "text": "to handle more web traffic you want to be able to uh to scale that rapidly you don't want to have to sit",
    "start": "588000",
    "end": "594320"
  },
  {
    "text": "there and wait for that instance to warm up and get into production over some time so it's important to have",
    "start": "594320",
    "end": "600160"
  },
  {
    "text": "fast bootstrap that means that when you auto scale it comes up really fast and it goes into production as soon as",
    "start": "600160",
    "end": "605279"
  },
  {
    "text": "possible and obviously health and load conditions could be a precursor to an outage but really an auto-scaling world",
    "start": "605279",
    "end": "612320"
  },
  {
    "text": "should be a trigger for autoscale right this is what you're looking for in order to help you help your infrastructure know it is time",
    "start": "612320",
    "end": "618720"
  },
  {
    "text": "to spin up new instances this time to it's time to it's time to scale so the good news is for web tiers uh web tier is by far the",
    "start": "618720",
    "end": "626079"
  },
  {
    "text": "easiest to scale if you talk to most people out there you'll find that databases scale up more often than not",
    "start": "626079",
    "end": "632240"
  },
  {
    "text": "web tiers scale out because they're easier to to scale out and they're a lot of times built using these principles in",
    "start": "632240",
    "end": "638480"
  },
  {
    "text": "mind now uh web application fire was not as much web location fire was a much more complex than that that's the reason",
    "start": "638480",
    "end": "644880"
  },
  {
    "text": "why you saw so many people raise their hand when they talked about how many uh web uh production deployments they have",
    "start": "644880",
    "end": "651360"
  },
  {
    "text": "what did they do auto scaling how many how few hands went up when they first of all even had a waff but second had an",
    "start": "651360",
    "end": "657519"
  },
  {
    "text": "auto scaling raft that's been very difficult to do because a lot of the architecture prevents you from doing so but um",
    "start": "657519",
    "end": "664399"
  },
  {
    "start": "663000",
    "end": "721000"
  },
  {
    "text": "common tool kit for uh for autoscaling again we're not going to do a deep dive into this but this is essentially tools",
    "start": "664399",
    "end": "669760"
  },
  {
    "text": "of the trade if you ought to scale your environment those of you in a room that originally do this know this reasonably",
    "start": "669760",
    "end": "675360"
  },
  {
    "text": "well uh elastic low balancer is a fantastic tool set for auto scaling not not just because it's a great uh low",
    "start": "675360",
    "end": "681120"
  },
  {
    "text": "balancer but because it has native uh constructs for how to monitor your uh how to monitor infrastructure with cloud",
    "start": "681120",
    "end": "687760"
  },
  {
    "text": "watch how to auto scale it right health monitoring we in our deployment we we ended up using amazon cloud watch it",
    "start": "687760",
    "end": "694160"
  },
  {
    "text": "doesn't have to be the way you monitor infrastructure but it but the integration with elb makes it extremely easy and bootstrap there's a whole lot",
    "start": "694160",
    "end": "700640"
  },
  {
    "text": "of options there that you you can do this pretty much anything you want uh we're using a lot of cloud formation we also use a lot of chef and puppet and",
    "start": "700640",
    "end": "707120"
  },
  {
    "text": "internally i would imagine that if you ask people in this room what they use there's going to be plurality of choices",
    "start": "707120",
    "end": "712240"
  },
  {
    "text": "out there and that's totally fine there's there's no reason to get stuck on a particular uh particular",
    "start": "712240",
    "end": "717519"
  },
  {
    "text": "configuration management toolkit so why is it difficult to scale to auto",
    "start": "717519",
    "end": "725120"
  },
  {
    "start": "721000",
    "end": "908000"
  },
  {
    "text": "scale wafts first of all a couple of models that you'll see for wav deployments a lot of the traditional",
    "start": "725120",
    "end": "731440"
  },
  {
    "text": "web application firewalls are appliances it's a either a hardware appliance or a virtual appliance it's it's a proxy you",
    "start": "731440",
    "end": "738079"
  },
  {
    "text": "put it online now that appliance usually functions as an atomic unit right so if you put it in in line and you want to do",
    "start": "738079",
    "end": "745440"
  },
  {
    "text": "uh white listing you're going to let you you're going to have to let it sit there and warm up learn about your application",
    "start": "745440",
    "end": "751200"
  },
  {
    "text": "then finally go into full full protection mode and start start blocking attacks great for security fairly",
    "start": "751200",
    "end": "757600"
  },
  {
    "text": "terrible for uh for autoscaling it breaks the principle of uh of a fast",
    "start": "757600",
    "end": "763760"
  },
  {
    "text": "bootstrap you can't easily auto-scale something that has to sit there for as long as a couple of weeks zach how how",
    "start": "763760",
    "end": "769600"
  },
  {
    "text": "long does it usually take to train a train a wife on a moderately sized site",
    "start": "769600",
    "end": "776720"
  },
  {
    "text": "he's got a second delay or so there we go all right so it depends on the amount of traffic but i mean we usually do",
    "start": "780639",
    "end": "786720"
  },
  {
    "text": "basically 10 000 request sample sizes for for for analysis so and and that's per uh application",
    "start": "786720",
    "end": "793760"
  },
  {
    "text": "basically per uri per path uh so depending on how much traffic you have that could take uh you know just a week",
    "start": "793760",
    "end": "801279"
  },
  {
    "text": "uh to get most of your application covered it could take could take a significant time especially for uh parts of your application that aren't used",
    "start": "801279",
    "end": "807120"
  },
  {
    "text": "very frequently so different vendors have different mechanics for how their learning engine works but all of them",
    "start": "807120",
    "end": "812160"
  },
  {
    "text": "require require you the wife to see a certain amount of traffic before you can really",
    "start": "812160",
    "end": "817279"
  },
  {
    "text": "decide that now i understand what all the paths look like now i understand what all the parameters should be and",
    "start": "817279",
    "end": "823279"
  },
  {
    "text": "and now i'm certain that anything beyond this should be should be blocked again brakes auto scaling principles that's",
    "start": "823279",
    "end": "828800"
  },
  {
    "text": "probably one of the biggest reasons why you you don't see a whole lot of laughs in deployment in production auto scaling",
    "start": "828800",
    "end": "834959"
  },
  {
    "text": "with the web tier and that's a major problem uh web application threats are one of the biggest attack vectors out",
    "start": "834959",
    "end": "840160"
  },
  {
    "text": "there and they we should be doing this stuff it just hasn't been possible to do until we figure out how to re-architect this",
    "start": "840160",
    "end": "846160"
  },
  {
    "text": "stuff now the second flavor uh the the good news is that first of all these are cdns these are content delivery networks",
    "start": "846160",
    "end": "853040"
  },
  {
    "text": "akamai is a good example akamai is probably the most well-known cdn out there akamai offers a waff as an option",
    "start": "853040",
    "end": "859600"
  },
  {
    "text": "as an add-on to their to their uh to their cdn but it doesn't do learning",
    "start": "859600",
    "end": "864880"
  },
  {
    "text": "it's a fairly static rule set so it doesn't give you all the protection you're looking for i think it's going to take care of the of the low-hanging",
    "start": "864880",
    "end": "871199"
  },
  {
    "text": "fruit it does give you it doesn't auto-scale but but essentially can handle as much traffic as you throw at",
    "start": "871199",
    "end": "876560"
  },
  {
    "text": "it so from that perspective you don't have to worry about it you simply redirect your your your traffic to the",
    "start": "876560",
    "end": "882160"
  },
  {
    "text": "cdn and you're fairly comfortable knowing that it's going to handle your load but it's not going to be the best",
    "start": "882160",
    "end": "887760"
  },
  {
    "text": "security model out there if you have a fairly complex application that's where cdn based labs get get less and less",
    "start": "887760",
    "end": "893680"
  },
  {
    "text": "effective right so there's a lot of reasons why labs are difficult to auto scale native support",
    "start": "893680",
    "end": "899279"
  },
  {
    "text": "and really architecture principles used in a lot of a lot of these uh products are just not compatible with without",
    "start": "899279",
    "end": "905600"
  },
  {
    "text": "auto scaling principles so um",
    "start": "905600",
    "end": "910880"
  },
  {
    "start": "908000",
    "end": "1107000"
  },
  {
    "text": "first of all we're going to present um the way we we handle auto scaling uh for",
    "start": "910880",
    "end": "916800"
  },
  {
    "text": "um for aws uh i think these uh principles really go for any waff that",
    "start": "916800",
    "end": "922240"
  },
  {
    "text": "you use out there so if you have a wife that kind of follows this uh these set of architecture principles chances are",
    "start": "922240",
    "end": "928160"
  },
  {
    "text": "you should be able to auto scale it just as we did the the basic approach that we took was",
    "start": "928160",
    "end": "933199"
  },
  {
    "text": "that we have to separate the control plane from the data processing plane and uh if we if our wife is one of the webs",
    "start": "933199",
    "end": "940399"
  },
  {
    "text": "that that does white uh whitelisting and uh and blacklisting but what we try to do is make sure that when we when we",
    "start": "940399",
    "end": "947040"
  },
  {
    "text": "learn about application we offload all of that information onto a masternode that masternode really becomes the",
    "start": "947040",
    "end": "953759"
  },
  {
    "text": "central point where all the configuration is stored so when a when a worker right and a worker for us is",
    "start": "953759",
    "end": "959279"
  },
  {
    "text": "defined as a as an appliance that helps you filter out traffic when the worker comes up it doesn't have to sit there",
    "start": "959279",
    "end": "965120"
  },
  {
    "text": "and go into into learning mode it's already we've already learned what their application looks like we already know",
    "start": "965120",
    "end": "970720"
  },
  {
    "text": "what it should be configured as there's really no difference between workers workers come up they have the exact same",
    "start": "970720",
    "end": "975759"
  },
  {
    "text": "configuration as all the other workers sitting side by side with them they should be able to go into into",
    "start": "975759",
    "end": "980880"
  },
  {
    "text": "production and bootstrap as soon as possible so by splitting the control plane and the data processing plane it's",
    "start": "980880",
    "end": "986880"
  },
  {
    "text": "allowed us to do that right and uh um to get that done we used a lot of the",
    "start": "986880",
    "end": "992560"
  },
  {
    "text": "native amazon technologies to uh to to build this first of all we use elastic",
    "start": "992560",
    "end": "997839"
  },
  {
    "text": "load balancer as as a way to auto scale our wave deployment we use cloud watch to help us monitor our wave instances to",
    "start": "997839",
    "end": "1005040"
  },
  {
    "text": "know when we're going to uh when we we're going to auto scale them we use cloud formation extensively this is a",
    "start": "1005040",
    "end": "1010959"
  },
  {
    "text": "this is actually a fairly complex deployment uh uh that zac was just telling me a couple of days ago that if",
    "start": "1010959",
    "end": "1016160"
  },
  {
    "text": "he was to do this by hand or just sit down and build one of these stacks just for testing it would take him about a",
    "start": "1016160",
    "end": "1021279"
  },
  {
    "text": "day to do it and he knows what he's doing cloud formation i think it takes what 15-20 minutes max not even now yeah",
    "start": "1021279",
    "end": "1027280"
  },
  {
    "text": "actually in the same room here on tuesday we had a we had a boot camp and we literally had 80 people in here spin",
    "start": "1027280",
    "end": "1033839"
  },
  {
    "text": "off a sample uh sample wav stack including elb including all the nat instances including s3 and ebs and all",
    "start": "1033839",
    "end": "1041438"
  },
  {
    "text": "of it happened within within about 15 minutes or so not none of it failed everything worked that's the that's the",
    "start": "1041439",
    "end": "1046880"
  },
  {
    "text": "beauty of uh that's the beauty of cloud formation cloud formation lets you take very complex deployments that are very",
    "start": "1046880",
    "end": "1052240"
  },
  {
    "text": "configuration heavy automate them to the nth degree and then get a stack that you can actually you can actually work from",
    "start": "1052240",
    "end": "1058400"
  },
  {
    "text": "uh again we're using s3 and ebs to make sure that we can share configuration data and log data between all these all",
    "start": "1058400",
    "end": "1065440"
  },
  {
    "text": "of these worker instances so now we have a way to kind of instrument all of our wife operation using native amazon",
    "start": "1065440",
    "end": "1071520"
  },
  {
    "text": "technologies we're no longer reliant on tight coupling between the master and the and the worker at this point they",
    "start": "1071520",
    "end": "1078240"
  },
  {
    "text": "all work in they all communicate as little as possible and are fairly loosely coupled so that's what allowed",
    "start": "1078240",
    "end": "1083360"
  },
  {
    "text": "us to auto scale pretty dramatically um we we primarily built this for uh vpc",
    "start": "1083360",
    "end": "1089600"
  },
  {
    "text": "deployments i think we could make it work outside of epc but i think it would be more difficult than not uh and uh and",
    "start": "1089600",
    "end": "1096320"
  },
  {
    "text": "we've done this with with quite a bit of traffic we're gonna we're gonna try to do it live and we're gonna see how that goes now uh we're gonna do a deeper dive",
    "start": "1096320",
    "end": "1103679"
  },
  {
    "text": "into each one of these layers but to uh but to introduce you and kind of orient you",
    "start": "1103679",
    "end": "1109120"
  },
  {
    "start": "1107000",
    "end": "1218000"
  },
  {
    "text": "to what you're looking at um let's see if my yeah i got a laser that works so um",
    "start": "1109120",
    "end": "1115120"
  },
  {
    "text": "if you use elastic low bouncer right now this is the tier that you currently have in production right that's the that's",
    "start": "1115120",
    "end": "1121600"
  },
  {
    "text": "the internal elastic load balancer that essentially fronts your web server instances it is essentially what what",
    "start": "1121600",
    "end": "1127840"
  },
  {
    "text": "low balance is between your uh between your uh web servers right and by the way when you see wsm here that is the waff",
    "start": "1127840",
    "end": "1134559"
  },
  {
    "text": "that i'm talking about our our wife is called web security manager so every time you see ws7 one of these slides it",
    "start": "1134559",
    "end": "1140160"
  },
  {
    "text": "is referring to waff infrastructure what on this slide you and all the slides that uh that come after it you'll notice",
    "start": "1140160",
    "end": "1147280"
  },
  {
    "text": "that the orange is amazon infrastructure the blue is alert logic infrastructure and green is actually your",
    "start": "1147280",
    "end": "1153440"
  },
  {
    "text": "infrastructure spun up on amazon right so these are your instances spun up uh in in aws right so if you haven't if you",
    "start": "1153440",
    "end": "1161280"
  },
  {
    "text": "have a deployment right now and you use elb we essentially become an overlay on top of it we have another elb deployment",
    "start": "1161280",
    "end": "1167600"
  },
  {
    "text": "the fronts are wav our wav units that alb deployment lets us come there is one group for for the master there's another",
    "start": "1167600",
    "end": "1174559"
  },
  {
    "text": "group for the workers and that lets us auto scale our waft here independently of your web servers we certainly don't",
    "start": "1174559",
    "end": "1179840"
  },
  {
    "text": "want to scale we certainly don't want to have a one for one relationship between the waffs and the web servers we have no",
    "start": "1179840",
    "end": "1184960"
  },
  {
    "text": "idea what your application runs and and how it auto scales that's not important what's important is that when we get to",
    "start": "1184960",
    "end": "1191760"
  },
  {
    "text": "the certain performance shelf with one of these one of these workers we can step up to the next level spin up a new instance",
    "start": "1191760",
    "end": "1198240"
  },
  {
    "text": "and go into production so we're going to get into more detail on this that's essentially what you'll be what you'll be looking at uh over the next couple of",
    "start": "1198240",
    "end": "1205039"
  },
  {
    "text": "slides right so at this point we're gonna do a live demo zack built a dashboard uh that lets us",
    "start": "1205039",
    "end": "1211039"
  },
  {
    "text": "see that so uh what we're gonna do is zach actually walk up through that can you tell them what we're autoscaling",
    "start": "1211039",
    "end": "1216799"
  },
  {
    "text": "from and two yeah so this is actually just kind of a dashboard that we built when we were",
    "start": "1216799",
    "end": "1222640"
  },
  {
    "start": "1218000",
    "end": "1459000"
  },
  {
    "text": "in-house kind of learning what auto scaling looks like so we could kind of visualize it we could take a look and see what was",
    "start": "1222640",
    "end": "1227760"
  },
  {
    "text": "happening but basically our top graph here is going to be requests per second and uh megabits per second of traffic uh",
    "start": "1227760",
    "end": "1235600"
  },
  {
    "text": "we've got the number of workers uh in the auto scaling group cpu utilization uh you see there that's across the",
    "start": "1235600",
    "end": "1242080"
  },
  {
    "text": "entire autoscaling group that's also represented by the middle graph requests per second uh megabits per",
    "start": "1242080",
    "end": "1248640"
  },
  {
    "text": "second or gigabits per second uh inbound and outbound traffic uh and then at the very end the bottom uh",
    "start": "1248640",
    "end": "1255280"
  },
  {
    "text": "right corner you see a graph of workers um you'll see that that tailing down that's actually i went and ran this",
    "start": "1255280",
    "end": "1262240"
  },
  {
    "text": "about an hour ago that was actually the last time it autoscaled back down because there was not a lot not load on it and you'll see two lines there a",
    "start": "1262240",
    "end": "1268320"
  },
  {
    "text": "green line and a pink line the pinkish line has unhealthy workers and what you'll see is as they come up they're",
    "start": "1268320",
    "end": "1273679"
  },
  {
    "text": "not initially healthy this is it means healthy to the elastic load balancer so they haven't actually passed their health check and been put into the pool",
    "start": "1273679",
    "end": "1279679"
  },
  {
    "text": "of workers that traffic's going to yet but you'll see that the green line go up as the red line",
    "start": "1279679",
    "end": "1285039"
  },
  {
    "text": "goes down and you'll see little little peaks as it scales so what we're going to try to do today is we're going to try to go from",
    "start": "1285039",
    "end": "1290480"
  },
  {
    "text": "a paltry it was sitting idle we're going to go from 22 000 requests per second or so where we're right now uh to something",
    "start": "1290480",
    "end": "1297120"
  },
  {
    "text": "around 350 to 400 000 requests per second it'll push about a gigabit per second of inbound request traffic so",
    "start": "1297120",
    "end": "1304159"
  },
  {
    "text": "that is the actual you know your your http headers uh et cetera that traffic and that's what what our what our wife",
    "start": "1304159",
    "end": "1310480"
  },
  {
    "text": "products analyzing it ends up being about 10 gigabits of of traffic being served from the",
    "start": "1310480",
    "end": "1316159"
  },
  {
    "text": "the website in the back you'll see the workers will scale from two to thirty two as what i've kind of",
    "start": "1316159",
    "end": "1323360"
  },
  {
    "text": "capped this group at and this will take place over the course of the next uh 15 to 20 minutes",
    "start": "1323360",
    "end": "1328960"
  },
  {
    "text": "basically starting up with a traffic generator this is the i went viral so what this does actually every 30 seconds",
    "start": "1328960",
    "end": "1334960"
  },
  {
    "text": "is adds another 10 traffic um which is you know my link is spreading and i'm getting getting hammered so this is just",
    "start": "1334960",
    "end": "1340960"
  },
  {
    "text": "one of the one of the use cases examples we wanted to test when we were doing auto scaling and zach can you cover a little bit about traffic generation i",
    "start": "1340960",
    "end": "1347600"
  },
  {
    "text": "mean obviously in the real world there's going to be a lot of diversity and requests uh and certainly a lot of diversity and amount of traffic coming",
    "start": "1347600",
    "end": "1353760"
  },
  {
    "text": "out but what are you this is not necessarily a production environment you you're you're this is synthetic traffic",
    "start": "1353760",
    "end": "1358799"
  },
  {
    "text": "right this is this is synthetic traffic we don't actually have anyone that pushes this kind of traffic on a sustained basis which kind of overbuilt",
    "start": "1358799",
    "end": "1364720"
  },
  {
    "text": "even for existing customer base and and for most people i think if anybody here does a gigabit per",
    "start": "1364720",
    "end": "1369840"
  },
  {
    "text": "second inbound request traffic i'd really like to talk to you after the session uh because it's really interesting to me um and and we just we",
    "start": "1369840",
    "end": "1376080"
  },
  {
    "text": "don't see that very much in in real life um with customers that we have now so this is uh we so we couldn't pull actual",
    "start": "1376080",
    "end": "1382159"
  },
  {
    "text": "real traffic to play back uh given that we don't have that so so it is it is synthetic uh again your mileage may vary",
    "start": "1382159",
    "end": "1387600"
  },
  {
    "text": "that's kind of true with anything that you're when you're sitting in line processing another quick survey here actually how",
    "start": "1387600",
    "end": "1393600"
  },
  {
    "text": "many people here have less than 100 megabits of web traffic today",
    "start": "1393600",
    "end": "1398720"
  },
  {
    "text": "how about less than 200 megabits it's a lot of high traffic people here",
    "start": "1398720",
    "end": "1404960"
  },
  {
    "text": "how about less than less than 500 megabits less than a gigabit",
    "start": "1404960",
    "end": "1410559"
  },
  {
    "text": "all right uh less than five gigabits anybody have 10 gigabits of traffic or",
    "start": "1410559",
    "end": "1416320"
  },
  {
    "text": "so what web traffic okay so nobody has nobody has the top limit to with it so far so that's uh",
    "start": "1416320",
    "end": "1422080"
  },
  {
    "text": "that makes me feel pretty good about it so um so so again we're going up from a very",
    "start": "1422080",
    "end": "1427520"
  },
  {
    "text": "small deployment to just uh just under 100 megabits we're going to keep pushing this up now we weren't able to get this",
    "start": "1427520",
    "end": "1433840"
  },
  {
    "text": "dashboard to stay up the entire time so we're going to flip back and forth between the presentation and this dashboard we're going to see so watch",
    "start": "1433840",
    "end": "1439840"
  },
  {
    "text": "these watch these graphs right here right this is this is this is the traffic that you're really watching because that's that's traffic outbound",
    "start": "1439840",
    "end": "1446480"
  },
  {
    "text": "if you combine inbound and outbound that's really the effective load that we're handling right now so we're we're in a fairly small deployment right now",
    "start": "1446480",
    "end": "1452400"
  },
  {
    "text": "just a couple of uh worker nodes and just under a gigabit of traffic and we're going to push it up higher and",
    "start": "1452400",
    "end": "1457440"
  },
  {
    "text": "higher all right",
    "start": "1457440",
    "end": "1463120"
  },
  {
    "start": "1459000",
    "end": "1524000"
  },
  {
    "text": "so in terms of the data flow here's what's happening right now and actually at this point this is exactly what this",
    "start": "1463120",
    "end": "1468400"
  },
  {
    "text": "deployment looks like i'm actually not sure how many web servers we have uh behind our internal elb stack but uh in",
    "start": "1468400",
    "end": "1475520"
  },
  {
    "text": "the middle right our our the elb stack design for the workers uh we have a couple of uh worker",
    "start": "1475520",
    "end": "1481679"
  },
  {
    "text": "instances there that's really the minimum that we suggest not because uh not because that's the that's that's the",
    "start": "1481679",
    "end": "1487200"
  },
  {
    "text": "handle of traffic we we have we have workers that can handle anywhere from uh tens of um tens of uh megabits to",
    "start": "1487200",
    "end": "1494960"
  },
  {
    "text": "hundreds of megabits it's really for uh for availability right you want to have at least a couple of them out there that's what that's what you want to",
    "start": "1494960",
    "end": "1500880"
  },
  {
    "text": "autoscale from so the data flow is such where a client sends a request it the request that traverses the first layer",
    "start": "1500880",
    "end": "1507360"
  },
  {
    "text": "of the elb stack hits the wafts malicious traffic gets filtered out then it gets down to the internal elb by the",
    "start": "1507360",
    "end": "1513919"
  },
  {
    "text": "application gets filled by your web servers then flows directly out through the same through the same stock so",
    "start": "1513919",
    "end": "1519039"
  },
  {
    "text": "everything flows through the uh reverse proxies in this case anything else to add here",
    "start": "1519039",
    "end": "1525039"
  },
  {
    "start": "1524000",
    "end": "1698000"
  },
  {
    "text": "zach you want to take uh take this one yeah so there there's a reason that there's two auto scaling groups and uh",
    "start": "1525039",
    "end": "1530400"
  },
  {
    "text": "we did have quite a few people in the room that use auto scaling so i'm sure some of you use this trick already uh we",
    "start": "1530400",
    "end": "1535600"
  },
  {
    "text": "have we have our control plane where our master lives and this is basically for management it also does kind of collection of all the statistics and",
    "start": "1535600",
    "end": "1541360"
  },
  {
    "text": "processes this information for learning and and creating the white list rule set",
    "start": "1541360",
    "end": "1546559"
  },
  {
    "text": "that's a that's an auto scaling group of one of one we only need one uh to do those things uh and we only ever need",
    "start": "1546559",
    "end": "1553039"
  },
  {
    "text": "one but we always want one so what we've done instead of just having a fixed instance there we actually still go ahead and we create a launch",
    "start": "1553039",
    "end": "1558960"
  },
  {
    "text": "configuration we create an auto scaling group and we tell aws there should always be one of these things if there's",
    "start": "1558960",
    "end": "1564880"
  },
  {
    "text": "an issue if there's a failure if you need to vertically scale your master you can actually take it down",
    "start": "1564880",
    "end": "1570559"
  },
  {
    "text": "update your launch configuration with a larger instance size and bring it back up and it'll pick off uh pick up where it was so that it just buys you a lot of",
    "start": "1570559",
    "end": "1577200"
  },
  {
    "text": "flexibility that way and it buys you kind of some availability now the the control plane there the master actually",
    "start": "1577200",
    "end": "1583279"
  },
  {
    "text": "doesn't have to be up for any traffic to be processed by the worker pools right so that's one of those things where you can take it down to to to upgrade it if",
    "start": "1583279",
    "end": "1590159"
  },
  {
    "text": "you have an issue or you so you get a notification that that your instances can be terminated because they're doing a hardware upgrade for example you",
    "start": "1590159",
    "end": "1595600"
  },
  {
    "text": "happen to be on an old box it's not an issue the other auto-scaling group look it's going to",
    "start": "1595600",
    "end": "1600880"
  },
  {
    "text": "look pretty similar to what your web servers look like it's spread across multiple availability zones behind an",
    "start": "1600880",
    "end": "1606000"
  },
  {
    "text": "elastic load balancer we use elb health checking on it there's actually a health check file that the appliances write themselves for the elb to look for",
    "start": "1606000",
    "end": "1612880"
  },
  {
    "text": "they're fairly aggressive uh at shooting themselves in the head so if they",
    "start": "1612880",
    "end": "1618240"
  },
  {
    "text": "don't think that they're in a good place they'll rip that file out and then everything's happening handled",
    "start": "1618240",
    "end": "1623279"
  },
  {
    "text": "automatically right the eob will pull it out of the group auto scaling will pull it out of the group terminate that instance stand up another one in its",
    "start": "1623279",
    "end": "1628559"
  },
  {
    "text": "place yeah and this is and this is an important note if you go to our blog you'll you'll notice there's a there's a blog post from today about kind of",
    "start": "1628559",
    "end": "1634960"
  },
  {
    "text": "optimizing for cost obviously auto scaling anything gets expensive if you if you if you if you stay in a in a top",
    "start": "1634960",
    "end": "1642320"
  },
  {
    "text": "processing state so uh we do have uh we do have logic in there to scale it down",
    "start": "1642320",
    "end": "1647360"
  },
  {
    "text": "as much as up and that's really what zach's talking about you can't modify it so if you want to scale if you want to if you want to give yourself kind of a",
    "start": "1647360",
    "end": "1653360"
  },
  {
    "text": "soft roll back and you want to wait longer there's certainly a way to do that so to clarify something that zach",
    "start": "1653360",
    "end": "1658480"
  },
  {
    "text": "said once again traffic is flowing through the uh through the worker elb group and the",
    "start": "1658480",
    "end": "1664480"
  },
  {
    "text": "worker instances traffic is not flowing through the master and that's the reason why there's only one of them that master",
    "start": "1664480",
    "end": "1669760"
  },
  {
    "text": "is only responsible for making sure that we can control the workers and making sure that the workers get their",
    "start": "1669760",
    "end": "1675039"
  },
  {
    "text": "configuration directives can can persist logs and so on so if that worker dies",
    "start": "1675039",
    "end": "1680159"
  },
  {
    "text": "there's no issue it will continue to operate there's there should there shouldn't be a problem with flowing traffic the traffic will continue to",
    "start": "1680159",
    "end": "1686080"
  },
  {
    "text": "flow through the worker uh instances we're actually going to use the same uh health checks in um in elb to restart it",
    "start": "1686080",
    "end": "1694480"
  },
  {
    "text": "and get it back into production right go ahead so yeah auto auto scaling",
    "start": "1694480",
    "end": "1701200"
  },
  {
    "start": "1698000",
    "end": "1798000"
  },
  {
    "text": "parameters so obviously these are defaults they may vary for your application uh and we we want to kind of",
    "start": "1701200",
    "end": "1707039"
  },
  {
    "text": "stay at pretty high utilization you want to make the most of your money uh in amazon that's one of the things this allows you to do is not",
    "start": "1707039",
    "end": "1713440"
  },
  {
    "text": "have a lot of stuff sitting idle so by default we're looking at uh when you get above 80 we're going to",
    "start": "1713440",
    "end": "1719360"
  },
  {
    "text": "want to scale up we look at that if it's if that's for two minutes go ahead and do that um",
    "start": "1719360",
    "end": "1725360"
  },
  {
    "text": "scale down at fifty percent uh and the scale down uh we put a little bit of",
    "start": "1725360",
    "end": "1730480"
  },
  {
    "text": "longer time on that you know once an instance up you're paying for an hour for it anyway right so put a little bit longer time there give it a chance in",
    "start": "1730480",
    "end": "1736640"
  },
  {
    "text": "case that was an initial spike maybe before a bigger spike of traffic uh in in the div in the uh templates that",
    "start": "1736640",
    "end": "1744320"
  },
  {
    "text": "we use for most of our deployments these are parameters uh actually in the template so if you are familiar with",
    "start": "1744320",
    "end": "1749679"
  },
  {
    "text": "cloud formation uh it is parameterized and we can adjust those settings also one thing to note the auto scaling",
    "start": "1749679",
    "end": "1756159"
  },
  {
    "text": "groups the cloud watch alarms that you set up for this these you own these",
    "start": "1756159",
    "end": "1761279"
  },
  {
    "text": "these are not ours this is in your environment in your vpc you control so you can go and modify these so you've",
    "start": "1761279",
    "end": "1766799"
  },
  {
    "text": "got an e-commerce site you've got black friday coming up you can go ahead and set an auto scaling policy to just go",
    "start": "1766799",
    "end": "1773279"
  },
  {
    "text": "ahead and ramp up 32 of these things uh on that friday you've got a super bowl commercial ramp up 32 of them for your",
    "start": "1773279",
    "end": "1779440"
  },
  {
    "text": "super bowl commercial and you can do that along with default policy we are using cpu",
    "start": "1779440",
    "end": "1786320"
  },
  {
    "text": "as the default metric processing all the traffic is very cpu intensive we don't really have any i o issues there but it",
    "start": "1786320",
    "end": "1793200"
  },
  {
    "text": "is very cpu intensive to work uh processing that traffic uh on layer seven",
    "start": "1793200",
    "end": "1798720"
  },
  {
    "start": "1798000",
    "end": "2019000"
  },
  {
    "text": "um configuration dataflow i'm gonna let zach cover the slide but uh this is a little bit inside baseball if you're",
    "start": "1798720",
    "end": "1804240"
  },
  {
    "text": "into a kind of web scale architecture i think some of these some of these things are interesting but if you're using your wife i'm not sure if you really need to",
    "start": "1804240",
    "end": "1810640"
  },
  {
    "text": "know about this but zach you want to walk us through how configuration data flows and and honestly if i was building another auto scaling application this is",
    "start": "1810640",
    "end": "1817679"
  },
  {
    "text": "actually an interesting way to look at uh at managing configuration log data right so so there's a couple of ways",
    "start": "1817679",
    "end": "1823360"
  },
  {
    "text": "that that we do this essentially the configuration is like the control plane that is on the wsm master and uh",
    "start": "1823360",
    "end": "1829919"
  },
  {
    "text": "we have we can do that from the outside through the the elastic load balancer obviously this is security group controlled so access to the control the",
    "start": "1829919",
    "end": "1836960"
  },
  {
    "text": "management interfaces is fairly strict what happens then with that information is actually gets transported and stored",
    "start": "1836960",
    "end": "1843520"
  },
  {
    "text": "in s3 we could have used something internal to the vpc to do that",
    "start": "1843520",
    "end": "1849360"
  },
  {
    "text": "s3 is very inexpensive and it's also a little bit forward-looking to a solution that maybe works in more than one region right s3 is just out there and available",
    "start": "1849360",
    "end": "1856880"
  },
  {
    "text": "again access to that's very controlled we use iem policies again automatically created for you and",
    "start": "1856880",
    "end": "1863440"
  },
  {
    "text": "those are your policies you can manage them as long as we can have a role that those instances can talk to their",
    "start": "1863440",
    "end": "1868640"
  },
  {
    "text": "specific bucket in s3 to do that that configuration information is also transported back to",
    "start": "1868640",
    "end": "1874559"
  },
  {
    "text": "us for backup and safekeeping in case anything were to happen basically what happens when a worker",
    "start": "1874559",
    "end": "1880399"
  },
  {
    "text": "stands up and i don't think that we have a slide that covers this but they're actually the roles are driven by user data so the user data that we'll create",
    "start": "1880399",
    "end": "1887120"
  },
  {
    "text": "in the launch configurations has some information that they need to know workers need to know very little they need to know that they're a worker and",
    "start": "1887120",
    "end": "1892960"
  },
  {
    "text": "then they need to know that there's an s3 bucket that they have access to and they have an iem profile that allows them to access that",
    "start": "1892960",
    "end": "1899679"
  },
  {
    "text": "bucket they look for the things in that bucket that identifies where their master is it identifies the configuration that they",
    "start": "1899679",
    "end": "1905760"
  },
  {
    "text": "should start up with meaning what websites they have what policies they have the blacklist and the whitelist stuff",
    "start": "1905760",
    "end": "1912640"
  },
  {
    "text": "and they can actually come up and process traffic they can do that if the control plane is completely gone as long as that information's been stored in s3",
    "start": "1912640",
    "end": "1918480"
  },
  {
    "text": "you just can't change the configuration without that master so that so i think this is actually a useful note for",
    "start": "1918480",
    "end": "1924399"
  },
  {
    "text": "anybody that that kind of re-architects applications for uh for auto scaling in",
    "start": "1924399",
    "end": "1929440"
  },
  {
    "text": "amazon we started out with something that certainly wasn't designed to be uh to be out of scale with the lb and the",
    "start": "1929440",
    "end": "1935120"
  },
  {
    "text": "initial challenge was exactly exactly that it's way too tightly coupled we have configuration data flowing back and",
    "start": "1935120",
    "end": "1940640"
  },
  {
    "text": "forth between the master and and the workers we have we have log data that's flowing between the two how do you pull",
    "start": "1940640",
    "end": "1945919"
  },
  {
    "text": "them apart and allow yourself to auto scale the things that matter and then centralize all of the login",
    "start": "1945919",
    "end": "1951440"
  },
  {
    "text": "configuration data i think there's a number of ways to stage that you can use a number of and not just these services",
    "start": "1951440",
    "end": "1957919"
  },
  {
    "text": "in aws i think you can use a number of ways to share this data but i thought that was a fairly elegant way of dealing with that i think you'll find that you",
    "start": "1957919",
    "end": "1963840"
  },
  {
    "text": "can do the same thing with kind of legacy web applications if i if i had one and it was tightly coupled that",
    "start": "1963840",
    "end": "1968880"
  },
  {
    "text": "would be one of the avenues i'd look into for how to how to pull it apart turn it for something very tightly",
    "start": "1968880",
    "end": "1974640"
  },
  {
    "text": "coupled to something very loosely coupled so we're going to flip back to our demo here",
    "start": "1974640",
    "end": "1980000"
  },
  {
    "text": "so zach what do we have now let's take a look so it looks like now we're we've kind of ramped up uh we've got eight wsm",
    "start": "1980000",
    "end": "1986640"
  },
  {
    "text": "workers uh you'll notice the cpu graph right this is i hit my limit my alarm goes off more more workers are scaled up",
    "start": "1986640",
    "end": "1994320"
  },
  {
    "text": "and then my cpu usage drops same thing again i talked about before you see the healthy and unhealthy workers so we're",
    "start": "1994320",
    "end": "2000880"
  },
  {
    "text": "we're approaching a hundred thousand requests per second and uh just over three gigabits per",
    "start": "2000880",
    "end": "2006880"
  },
  {
    "text": "second of outbound traffic right now and we should see this uh continue continue to grow over the next five or ten",
    "start": "2006880",
    "end": "2012640"
  },
  {
    "text": "minutes uh and hopefully we'll see the 10 gigabits outbound number",
    "start": "2012640",
    "end": "2019080"
  },
  {
    "start": "2019000",
    "end": "2158000"
  },
  {
    "text": "do we already cover this this is my slide yeah do we already cover this one uh no",
    "start": "2021840",
    "end": "2028720"
  },
  {
    "text": "so uh login statistics collection so there's a few there there are a few interesting things that we want to know",
    "start": "2028720",
    "end": "2033760"
  },
  {
    "text": "about the workers one of the things we don't really care about is what it was what it we don't want to",
    "start": "2033760",
    "end": "2039360"
  },
  {
    "text": "know that there was 18 of them what we really want to know is about the traffic that we're processing so we do we do collect syslog from them and and they",
    "start": "2039360",
    "end": "2046399"
  },
  {
    "text": "are identified as workers we get some very little bit we get some information about them uh so that we can do some",
    "start": "2046399",
    "end": "2052638"
  },
  {
    "text": "debugging troubleshooting tracing if we need to what we're really interested in is what they've done with the traffic so",
    "start": "2052639",
    "end": "2057839"
  },
  {
    "text": "statistics uh obviously is is very key uh deny logs which is what we call our",
    "start": "2057839",
    "end": "2064878"
  },
  {
    "text": "basically block event you'll get a deny log message uh that has the request has the reason why you blocked it which",
    "start": "2064879",
    "end": "2070079"
  },
  {
    "text": "policy it matched etc and access logs and other statistics so",
    "start": "2070079",
    "end": "2077760"
  },
  {
    "text": "how do we do that uh where it's not we're not losing data so",
    "start": "2078079",
    "end": "2083440"
  },
  {
    "text": "one of the big things was okay the master can go away so we do have to build some cues into these things so not",
    "start": "2083440",
    "end": "2089520"
  },
  {
    "text": "only do the workers have a cue that actually transports to the master the master has a cue for the things it can process",
    "start": "2089520",
    "end": "2095679"
  },
  {
    "text": "one of the things that is very interesting especially about this demo here is we're actually kind of hitting a burst capability in the master we're",
    "start": "2095679",
    "end": "2101520"
  },
  {
    "text": "using a relatively small instance size for the master i say relatively considering the the number of workers that we have so we actually hit a little",
    "start": "2101520",
    "end": "2108000"
  },
  {
    "text": "bit of burst capacity we're actually kind of cueing some of this stuff that'll then filter out and take maybe uh five five minutes or so actually to",
    "start": "2108000",
    "end": "2114160"
  },
  {
    "text": "go and process all that stuff because it's a lot of traffic that we're kind of pushing through it uh for for what it is",
    "start": "2114160",
    "end": "2119599"
  },
  {
    "text": "uh so what we do is actually the master runs just kind of a receiver that actually will cue in a pre",
    "start": "2119599",
    "end": "2125599"
  },
  {
    "text": "ebs volume this is an additional ebs volume not the root evs volume for the instance that's it's unique to the stack",
    "start": "2125599",
    "end": "2131680"
  },
  {
    "text": "and that ebs volume is persistent across master instances so what happens is if a master goes down for example it actually",
    "start": "2131680",
    "end": "2138720"
  },
  {
    "text": "has a persistent q on that ebs volume the next instance that comes up as a master can actually pick up that queue",
    "start": "2138720",
    "end": "2144000"
  },
  {
    "text": "and start processing that information again so we're not we're not losing data when that goes down and we're able to",
    "start": "2144000",
    "end": "2149599"
  },
  {
    "text": "kind of exceed capacity a little bit and then come back and get in line and make sure that we're not losing that",
    "start": "2149599",
    "end": "2154960"
  },
  {
    "text": "information so one of the most common questions we get",
    "start": "2154960",
    "end": "2161200"
  },
  {
    "start": "2158000",
    "end": "2384000"
  },
  {
    "text": "is uh this looks like fairly complex infrastructure how do you insert this into my stack without uh breaking a",
    "start": "2161200",
    "end": "2166880"
  },
  {
    "text": "whole lot of things and taking things out of production uh so we we've built a fairly easy way to to put this into",
    "start": "2166880",
    "end": "2173040"
  },
  {
    "text": "production and and what we recommend is that you don't just build an overlay on top of your existing elb deployment and",
    "start": "2173040",
    "end": "2179440"
  },
  {
    "text": "just go into production right away what you want to do is build a stack you want to you want to give it some time you",
    "start": "2179440",
    "end": "2184640"
  },
  {
    "text": "want to pass some test traffic through it how you do it is actually very much variable right a lot of it depends on",
    "start": "2184640",
    "end": "2190640"
  },
  {
    "text": "what your infrastructure looks like so there's a there's a lot of flexibility there you can redirect some portion of your traffic you can redirect certain a",
    "start": "2190640",
    "end": "2198160"
  },
  {
    "text": "slice of your infrastructure you can run test workloads behind it but so the very first thing you do is you",
    "start": "2198160",
    "end": "2203599"
  },
  {
    "text": "stand up a sample uh wsm stack right and that that's done using cloudformation uh",
    "start": "2203599",
    "end": "2209119"
  },
  {
    "text": "tools we're gonna we're gonna show you what those look like that's gonna give you essentially kind of an initial deployment that you can play with so",
    "start": "2209119",
    "end": "2215359"
  },
  {
    "text": "again it takes about 10 or 15 minutes that will essentially create everything you need in order to be able to use",
    "start": "2215359",
    "end": "2220960"
  },
  {
    "text": "the waff with uh with all the infrastructure in place including all the all the",
    "start": "2220960",
    "end": "2226400"
  },
  {
    "text": "s3 buckets and all of the um all of the ebs volumes everything will be stood up at that point you'll be able to hang",
    "start": "2226400",
    "end": "2232720"
  },
  {
    "text": "servers under it now once you're ready the not once you're ready to balance to it you can start redirecting traffic to",
    "start": "2232720",
    "end": "2238880"
  },
  {
    "text": "it so it's kind of a two-step process obviously for more geographically diverse environments environments where",
    "start": "2238880",
    "end": "2244000"
  },
  {
    "text": "there's a lot of complexity it might be slightly different than that but generically it looks similar to that is that any anything to add here no so but",
    "start": "2244000",
    "end": "2251280"
  },
  {
    "text": "yeah so there's a lot of ways to do this and actually one of the things we provide is is we provided a couple of templates and we'll and we'll show that",
    "start": "2251280",
    "end": "2257760"
  },
  {
    "text": "before but uh there's some examples if you're not using cloudformation uh to do stuff uh",
    "start": "2257760",
    "end": "2263760"
  },
  {
    "text": "it's nice to be able to show how to how you can integrate cloud formation into your existing environment without even without necessarily taking your whole",
    "start": "2263760",
    "end": "2270160"
  },
  {
    "text": "environment and and templatize it just look back at the",
    "start": "2270160",
    "end": "2275599"
  },
  {
    "text": "dashboard as it moved up a lot so it it has actually our numbers got",
    "start": "2275599",
    "end": "2280640"
  },
  {
    "text": "smaller but that's because we rolled from megabits to gigabits so we're actually uh 350 000 requests per second um",
    "start": "2280640",
    "end": "2288079"
  },
  {
    "text": "we're basically sitting at the at the limit of what the 32 could do with just just above 90 cp usage we're",
    "start": "2288079",
    "end": "2295280"
  },
  {
    "text": "really utilizing all of those right now and we're pushing uh what basically 12 gigabits per second",
    "start": "2295280",
    "end": "2301760"
  },
  {
    "text": "throughput uh inbound and outbound traffic through those and we'll see it it now that now",
    "start": "2301760",
    "end": "2307440"
  },
  {
    "text": "that it's hit that limit it we'll see that line kind of tail off this traffic generator will actually",
    "start": "2307440",
    "end": "2312560"
  },
  {
    "text": "stop after 30 minutes of it being started and we may i don't think we'll have time to",
    "start": "2312560",
    "end": "2318560"
  },
  {
    "text": "see it all go scale back down but we will we will see it stop and the traffic die",
    "start": "2318560",
    "end": "2326000"
  },
  {
    "text": "all right i'm glad this worked i had i had nightmares of this failing yeah this is i've been to a few sessions and i've",
    "start": "2326000",
    "end": "2332079"
  },
  {
    "text": "seen some other demos and i don't know just showing the dashboards not really showing everything that we can do but",
    "start": "2332079",
    "end": "2337839"
  },
  {
    "text": "the other demos that i saw were recordings well we're actually doing this live in amazon right now that actually is you know the 32 worker nodes",
    "start": "2337839",
    "end": "2344880"
  },
  {
    "text": "our masternode elastic load balancers uh one one thing if you haven't pre-warmed your elastic load balancers they're no",
    "start": "2344880",
    "end": "2351680"
  },
  {
    "text": "they don't out of the box with that kind of traffic but they're fairly easy to pre-warm or you can even if you",
    "start": "2351680",
    "end": "2356800"
  },
  {
    "text": "have support with amazon call them let them know you're expecting increases in traffic they can do that for you",
    "start": "2356800",
    "end": "2362640"
  },
  {
    "text": "it's actually using 220 nodes to push traffic through actually",
    "start": "2362640",
    "end": "2367680"
  },
  {
    "text": "just generating that much traffic was kind of difficult i picked up off-the-shelf tools because i needed something to do quickly but even just",
    "start": "2367680",
    "end": "2374400"
  },
  {
    "text": "generating that much traffic isn't easy that's auto scaling group driven as well and also cloud formations like again i",
    "start": "2374400",
    "end": "2380160"
  },
  {
    "text": "said this is a tool that we've used that's repeatable we can we can use in-house yeah so a couple of words about sizing uh because a lot of the decisions",
    "start": "2380160",
    "end": "2387119"
  },
  {
    "start": "2384000",
    "end": "2491000"
  },
  {
    "text": "really deal with do you really want to auto-scale with largest instances out there just because they give you the most load not always",
    "start": "2387119",
    "end": "2392640"
  },
  {
    "text": "that you actually want to balance out kind of diversity of and the number of nodes what the amount",
    "start": "2392640",
    "end": "2398720"
  },
  {
    "text": "of traffic it can handle uh master uh sizing is not that interesting these are inbound numbers so uh with the smallest",
    "start": "2398720",
    "end": "2405680"
  },
  {
    "text": "instance we handle we can do about 250 megabits larger one can do one gigabit inbound that's essentially what what we",
    "start": "2405680",
    "end": "2411520"
  },
  {
    "text": "were showing now with the worker instances um here's what i would not recommend if you're doing if you have a",
    "start": "2411520",
    "end": "2416560"
  },
  {
    "text": "300 megabit uh deployment and you're doing 300 megabit uh in and out right i would not recommend scaling with the c1",
    "start": "2416560",
    "end": "2423119"
  },
  {
    "text": "extra large instance for example that you probably want smaller instances because what you want is a good blend of",
    "start": "2423119",
    "end": "2428560"
  },
  {
    "text": "of number of instances you can you can flow through and amount of bandwidth you can handle so the right number the right",
    "start": "2428560",
    "end": "2433680"
  },
  {
    "text": "instance for that will probably be c1 medium right then c1 extra large actually goes up to about 250 50 megabits not 200 so slightly larger than",
    "start": "2433680",
    "end": "2441359"
  },
  {
    "text": "that now obviously if you're scaling up to five gigabits or so you obviously want to scale in uh in what the largest",
    "start": "2441359",
    "end": "2447359"
  },
  {
    "text": "instances do we offer uh and that you obviously want to choose the the larger ones so these are typical rules of thumb",
    "start": "2447359",
    "end": "2453440"
  },
  {
    "text": "for how you want to do this i don't anything else to add here no you know that again and that that's mainly cost",
    "start": "2453440",
    "end": "2459040"
  },
  {
    "text": "considerations right you want to make sure that you're you're optimizing your utilization with your spend uh the one",
    "start": "2459040",
    "end": "2464400"
  },
  {
    "text": "thing for example the demo i showed we ended up at 32 that's just because that's number i got",
    "start": "2464400",
    "end": "2469599"
  },
  {
    "text": "to when i was testing stuff to see the the the 10 gigabit number uh theoretically these are horizontally",
    "start": "2469599",
    "end": "2475440"
  },
  {
    "text": "scalable as many as you can put inside a subnet in your vpc so if i could drive more traffic i would",
    "start": "2475440",
    "end": "2482079"
  },
  {
    "text": "test it to to much higher levels just just to see what i could do but we've not had any issues going from 32 to 60",
    "start": "2482079",
    "end": "2487920"
  },
  {
    "text": "40 even over 100 of these nodes so to cover the deployment with cloud cloudformation this is actually the",
    "start": "2487920",
    "end": "2494000"
  },
  {
    "start": "2491000",
    "end": "2613000"
  },
  {
    "text": "parts that if you were trying to do this and like i said we had about 80 people doing this in the lab a couple of days",
    "start": "2494000",
    "end": "2499440"
  },
  {
    "text": "ago uh this is essentially what would happen when you run the cloudformation uh templates we stand up all of the",
    "start": "2499440",
    "end": "2505359"
  },
  {
    "text": "infrastructure you see on this list here zach you want to you want to go through that real quick i don't know if we need a lot of detail on this but yeah so",
    "start": "2505359",
    "end": "2511359"
  },
  {
    "text": "basically like i said this is a vpc solution so in the example and for the lab what we did is we've got two",
    "start": "2511359",
    "end": "2516800"
  },
  {
    "text": "templates one it stands up it looks like a basic auto scaling environment it's got an elastic load balancer it crosses",
    "start": "2516800",
    "end": "2522400"
  },
  {
    "text": "multiple availability zones it's got public and private subnets it's got nat instances so you can reach out from your private subnets to access things uh and",
    "start": "2522400",
    "end": "2529280"
  },
  {
    "text": "then what we do is we've uh obviously it creates route tables it creates security group",
    "start": "2529280",
    "end": "2535440"
  },
  {
    "text": "policies uh a lot of that there's probably about 40 or 50 individual things if you get down",
    "start": "2535440",
    "end": "2542000"
  },
  {
    "text": "to the this is an ingress rule this is an egress rule all the things that we do to create the stack",
    "start": "2542000",
    "end": "2548160"
  },
  {
    "text": "and and then what we do is we have a second template that actually will take inputs from this or we'll take inputs from your environment so it'll take your",
    "start": "2548160",
    "end": "2554000"
  },
  {
    "text": "vpc id the subnet id of your public subnets or your net instances live the",
    "start": "2554000",
    "end": "2559359"
  },
  {
    "text": "route tables that route the traffic to those and actually then insert into the environment",
    "start": "2559359",
    "end": "2564480"
  },
  {
    "text": "those things it'll take the elb name of your existing elb and so you could actually stand this up",
    "start": "2564480",
    "end": "2571839"
  },
  {
    "text": "in in your existing environment route traffic through this on the side without actually affecting your existing",
    "start": "2572160",
    "end": "2579520"
  },
  {
    "text": "traffic you could use route 53 for example to send some subset of the traffic there you know which might be",
    "start": "2579520",
    "end": "2585280"
  },
  {
    "text": "good as a second phase after you've kind of stood stuff up to actually get that learning process kicked off in the laugh",
    "start": "2585280",
    "end": "2591520"
  },
  {
    "text": "so we can get the positive rule sets generated the white list rule sets",
    "start": "2591520",
    "end": "2596720"
  },
  {
    "text": "and so it's it's fairly painless deployment for how complicated the solution is this is not",
    "start": "2596720",
    "end": "2602560"
  },
  {
    "text": "something that you could do in a physical data center this is not something that you can do uh in other virtual environments this easily it's",
    "start": "2602560",
    "end": "2608880"
  },
  {
    "text": "really amazing uh what we've been able to do with cloud formation to kind of do this yeah so the the cloud formation",
    "start": "2608880",
    "end": "2614800"
  },
  {
    "start": "2613000",
    "end": "2687000"
  },
  {
    "text": "process is actually fairly simple once zac went through a whole lot of work making it work but but now that it works",
    "start": "2614800",
    "end": "2620480"
  },
  {
    "text": "it's actually very simple to get the templates and be able to stand up here on stack you literally just load the template you fill out a couple of uh",
    "start": "2620480",
    "end": "2627520"
  },
  {
    "text": "addressing parameters it asks you whether or not uh whether or not you have accurate information here and off",
    "start": "2627520",
    "end": "2632640"
  },
  {
    "text": "it goes same thing can be done with the command line so if you're if you're going all out and for example you're",
    "start": "2632640",
    "end": "2637680"
  },
  {
    "text": "orchestrating your entire deployments uh using command line tools and and using uh and using cloud formation to stand up",
    "start": "2637680",
    "end": "2644160"
  },
  {
    "text": "entire environments you can easily use these cloud formation templates as a starting point and you certainly don't",
    "start": "2644160",
    "end": "2649839"
  },
  {
    "text": "have to do it through the uh through the console if you don't want to anything else here yeah so we actually have",
    "start": "2649839",
    "end": "2655200"
  },
  {
    "text": "one of our customers uses an in-house system they wrote that's a kind of very much uh like puppet and it's kind of it",
    "start": "2655200",
    "end": "2661839"
  },
  {
    "text": "was something that they wrote a long time ago back when they were doing this stuff in the physical world and it's kind of migrated and migrated and",
    "start": "2661839",
    "end": "2667599"
  },
  {
    "text": "migrated and they've actually integrated being able to call these templates uh using apis through their tool that are",
    "start": "2667599",
    "end": "2673200"
  },
  {
    "text": "actually well they have api access already they added cloudformation api stuff to it and were able to do this and integrate with their existing",
    "start": "2673200",
    "end": "2679040"
  },
  {
    "text": "deployments so now that they they can repeatably uh stand up this as part of their web stack in their dev their test",
    "start": "2679040",
    "end": "2685040"
  },
  {
    "text": "and their production environments yeah so whether you run out of the console whether you run it at the command line uh essentially the next",
    "start": "2685040",
    "end": "2690720"
  },
  {
    "start": "2687000",
    "end": "2765000"
  },
  {
    "text": "thing you'll see is that your cloud your your uh your wsm stack is now ready to go this essentially gives you a place",
    "start": "2690720",
    "end": "2696400"
  },
  {
    "text": "where you can start playing with it and start testing it if you uh would like to to give it a shot we'd love for you to",
    "start": "2696400",
    "end": "2701599"
  },
  {
    "text": "try it especially those of you that have a lot of traffic we would love to check out what that looks like because",
    "start": "2701599",
    "end": "2706960"
  },
  {
    "text": "like zach said we've done it with uh we've done it with fairly big deployments we've done it in a lab with",
    "start": "2706960",
    "end": "2712319"
  },
  {
    "text": "a lot of traffic but um but in a lot of ways real traffic is really where where it's proven so just",
    "start": "2712319",
    "end": "2719119"
  },
  {
    "text": "because we can push 11 gigabits per second of synthetic traffic doesn't mean that that's exactly what we'll do in production as well i think we'll get i",
    "start": "2719119",
    "end": "2725520"
  },
  {
    "text": "think we'll get pretty high up there i mean when you're thinking about you know 32 different uh uh laugh instances that's quite a bit of trafficking",
    "start": "2725520",
    "end": "2731680"
  },
  {
    "text": "process that's more than i've seen in production before but we would love to see it in very very large scale environments soon",
    "start": "2731680",
    "end": "2738960"
  },
  {
    "text": "so that's all i have for you guys uh and we do have copies of the class security report that i referenced uh earlier um",
    "start": "2741280",
    "end": "2748560"
  },
  {
    "text": "amanda and patio back there so they have they have copied those you can grab we also have them available in our on our site if you have",
    "start": "2748560",
    "end": "2755200"
  },
  {
    "text": "people asking you about whether you know is the cloud really insecure i think we have a lot of data points to do to disprove that notion so i think we have",
    "start": "2755200",
    "end": "2762160"
  },
  {
    "text": "some time here so any questions in the room",
    "start": "2762160",
    "end": "2767280"
  }
]