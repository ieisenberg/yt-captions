[
  {
    "start": "0",
    "end": "76000"
  },
  {
    "text": "hello everybody my name is David pestis I've been with Amazon for about four and",
    "start": "60",
    "end": "5279"
  },
  {
    "text": "a half years I was actually at the first reinvent in 2012 and there were actually only 5,000 attendees in 2012 today if",
    "start": "5279",
    "end": "13080"
  },
  {
    "text": "you guys watched Andy's keynote there's 44 thousand people so unbelievable the growth with growth we've seen over the",
    "start": "13080",
    "end": "19140"
  },
  {
    "text": "last five years when I when I came in 2012 I was in ur see that was a customer and I knew I really wanted to be part of",
    "start": "19140",
    "end": "25920"
  },
  {
    "text": "the bay AWS so I'm super fired up to be here with you guys today we also have a special guest here Andrew Spiker from",
    "start": "25920",
    "end": "31650"
  },
  {
    "text": "Netflix who's going to give us a little bit of a demo a very cool demo in terms of how they're using ELB and their",
    "start": "31650",
    "end": "38489"
  },
  {
    "text": "application architectures today so hopefully we have a lot of good stuff for you guys today so what is elastic",
    "start": "38489",
    "end": "44700"
  },
  {
    "text": "load balancing this is the only slide that I'm going to read directly off the slide elastic load balancing",
    "start": "44700",
    "end": "50780"
  },
  {
    "text": "automatically distributes incoming application traffic across multiple targets such as Amazon ec2 instances",
    "start": "50780",
    "end": "57920"
  },
  {
    "text": "containers and IP addresses so for those of you who follow the elbe roadmap will",
    "start": "57920",
    "end": "63329"
  },
  {
    "text": "know that IP address is a new feature that we added about two months ago and so you can actually add IP addresses",
    "start": "63329",
    "end": "69630"
  },
  {
    "text": "accessible from your V PC as targets behind your load balancer so when when we talk about load",
    "start": "69630",
    "end": "77280"
  },
  {
    "start": "76000",
    "end": "76000"
  },
  {
    "text": "balancing we talked about to two major two main types of load balancing the first is layer 4 the layer 4 load",
    "start": "77280",
    "end": "84000"
  },
  {
    "text": "balancing is supports TCP SSL your incoming client connections are bound to",
    "start": "84000",
    "end": "90450"
  },
  {
    "text": "a server connection so all those requests that come through the the layer 4 load balancer I really just pass",
    "start": "90450",
    "end": "95610"
  },
  {
    "text": "through to the targets there's no header modification with layer 4 if you want to",
    "start": "95610",
    "end": "100890"
  },
  {
    "text": "know the source IP address with layer 4 load balancing you can use things like proxy protocol layer 7 is the HTTP HTTP",
    "start": "100890",
    "end": "109110"
  },
  {
    "text": "load balancing though so this is at that layer 7 within AWS or load balancers or",
    "start": "109110",
    "end": "114479"
  },
  {
    "text": "layer 7 load balancer actually terminates the connection on the lower balancer we can we look at these",
    "start": "114479",
    "end": "120360"
  },
  {
    "text": "requests so we can do things like content based routing and be very smart in the way that we route these requests",
    "start": "120360",
    "end": "126030"
  },
  {
    "text": "to your targets and so we do modify headers with layer 7 load balancing and",
    "start": "126030",
    "end": "131580"
  },
  {
    "text": "so for example with the exported or header will upend that source IP used to that header so that when the request",
    "start": "131580",
    "end": "137550"
  },
  {
    "text": "reaches the target you actually know where that request is coming from so the",
    "start": "137550",
    "end": "142620"
  },
  {
    "start": "141000",
    "end": "141000"
  },
  {
    "text": "elastic load balancing family today has three three main products the first one is the elastic the application load",
    "start": "142620",
    "end": "148890"
  },
  {
    "text": "balancer which was launched in August of 2016 this is your HTTP HTTPS layer seven",
    "start": "148890",
    "end": "155460"
  },
  {
    "text": "very feature-rich load balancer today's talk is primarily going to focus on the application little bouncer the second",
    "start": "155460",
    "end": "162120"
  },
  {
    "text": "wasn't is the network load balancer this is your layer 4 load balancer this was released about two months ago extremely",
    "start": "162120",
    "end": "169020"
  },
  {
    "text": "highly performant a high high performant very low latency for your layer for TCP",
    "start": "169020",
    "end": "174870"
  },
  {
    "text": "traffic and then finally in 2000 2009 we've had the classic load balancer this",
    "start": "174870",
    "end": "180420"
  },
  {
    "text": "is what we're calling this our previous generation load balancer it's extremely highly available extremely reliable",
    "start": "180420",
    "end": "186000"
  },
  {
    "text": "product but you'll see the future of load balancing is really this application load balancer and the",
    "start": "186000",
    "end": "191850"
  },
  {
    "text": "network load balancing products and the ELB family so the there are four really",
    "start": "191850",
    "end": "199140"
  },
  {
    "text": "main characteristics of all these ELB products in the alb family the first one is that the LB is extremely elastic and",
    "start": "199140",
    "end": "206459"
  },
  {
    "text": "so what this means is we love the word elastic in AWS but what we mean is you",
    "start": "206459",
    "end": "211470"
  },
  {
    "text": "create that load balancer and as you start increasing traffic to that load balancer as you start getting more and more customers we dynamically scale that",
    "start": "211470",
    "end": "218640"
  },
  {
    "text": "load balancer for you you do not have to do anything and so we'll dynamically add capacity add more resources at that load",
    "start": "218640",
    "end": "224400"
  },
  {
    "text": "balancer so that we can handle these increases in traffic second is we're extremely secure and so",
    "start": "224400",
    "end": "230549"
  },
  {
    "text": "we like to build a lot of security features for you guys such as S&I SSL managed SSL policies so that we want you",
    "start": "230549",
    "end": "239370"
  },
  {
    "text": "guys to be able to focus on really building awesome applications and so we have a whole teams working on security to make sure that we're making it easy",
    "start": "239370",
    "end": "245790"
  },
  {
    "text": "for you to apply the most advanced security to your load balancers we're integrated and so what that means is ELB",
    "start": "245790",
    "end": "252390"
  },
  {
    "text": "is integrated with more than 15 different awf services things like cloud watch on the container service around 53",
    "start": "252390",
    "end": "260519"
  },
  {
    "text": "and so just by nature of using ELB you get very deep into the AWS ecosystem and",
    "start": "260519",
    "end": "266160"
  },
  {
    "text": "you get to take a lot a lot of these different features such as Auto scaling and finally we're cost",
    "start": "266160",
    "end": "271500"
  },
  {
    "text": "effective if you look at you know some customers talk about how they want to run their old loan balance for",
    "start": "271500",
    "end": "277889"
  },
  {
    "text": "themselves and create their own ec2 instances when you look at the cost of having us operate and run that load",
    "start": "277889",
    "end": "283889"
  },
  {
    "text": "balancer and do all the stuff for you versus you doing it yourself it's way more cost-effective to run to use the",
    "start": "283889",
    "end": "290280"
  },
  {
    "text": "elbe products to run your load balancers so this is one of my favorite pictures",
    "start": "290280",
    "end": "297620"
  },
  {
    "text": "we've all been here right when we start building the application we use one server we put the database we put the",
    "start": "297620",
    "end": "303840"
  },
  {
    "text": "application at one server and it doesn't take a very smart person to figure out that this is a very dangerous architecture it doesn't scale it's got a",
    "start": "303840",
    "end": "311669"
  },
  {
    "text": "single point of failure and so what we want your application to look like is something like this where you put a load",
    "start": "311669",
    "end": "318150"
  },
  {
    "text": "balancer in front of your application and behind that load balancer you have multiple application servers and what's",
    "start": "318150",
    "end": "324240"
  },
  {
    "text": "very cool about the load balancer is that one of these targets one of these ec2 instances fails the lower balancer",
    "start": "324240",
    "end": "330150"
  },
  {
    "text": "will automatically fail away from that ec2 instance and so things like you know",
    "start": "330150",
    "end": "336530"
  },
  {
    "text": "garbage collection or core dumps or you have a bug in your application you have memory pressure and we've all deployed a",
    "start": "336530",
    "end": "342539"
  },
  {
    "text": "bug of course if that happens and one of these ec2 instance starts having problems the lower bounce will to stop",
    "start": "342539",
    "end": "349320"
  },
  {
    "text": "routing magically stop routing traffic then we'll get into more of those details shortly the health check is my favorite feature of the load balancer by",
    "start": "349320",
    "end": "355860"
  },
  {
    "text": "the way if you cared so we're gonna get into some of the underlying architecture of ELB we typically don't share these",
    "start": "355860",
    "end": "362759"
  },
  {
    "start": "356000",
    "end": "356000"
  },
  {
    "text": "details I'm so I'm pretty excited to share this with you guys today and these these are fundamental concepts that go",
    "start": "362759",
    "end": "368610"
  },
  {
    "text": "across all the ELB products so starting with a customer vbc when you guys create",
    "start": "368610",
    "end": "374190"
  },
  {
    "text": "a load balancer we want you to give us two different subnets and two different availability zones and so we'd like it",
    "start": "374190",
    "end": "380039"
  },
  {
    "text": "when you create these subnets and you create ec2 instances or you know targets",
    "start": "380039",
    "end": "385550"
  },
  {
    "text": "inside of two different subnets and we'll get into detail shortly but this helps create that high availability then",
    "start": "385550",
    "end": "392520"
  },
  {
    "text": "you have ELB we use VPC the same exact way that you guys do and so we'll create ELB nodes and an AZ",
    "start": "392520",
    "end": "400590"
  },
  {
    "text": "corresponding to where your targets are located and so we get that high availability as well and then finally",
    "start": "400590",
    "end": "407220"
  },
  {
    "text": "you have route 53 so when you create a load balancer we give you an a record",
    "start": "407220",
    "end": "412530"
  },
  {
    "text": "you can take that a record and put it you create a cname in DNS you know so david.com will route to this load",
    "start": "412530",
    "end": "418710"
  },
  {
    "text": "balancer amazon route 53 will actually round-robin across these dlb nodes so",
    "start": "418710",
    "end": "425250"
  },
  {
    "text": "you get extra redundancy there now you have resources and two different VP C's until you get extra availability there",
    "start": "425250",
    "end": "430620"
  },
  {
    "text": "and so all these layers really help bill to create a highly available application",
    "start": "430620",
    "end": "435750"
  },
  {
    "text": "for you we'll get into a lot more to these details shortly by the way we're huge supporters of route 53 and ELB and",
    "start": "435750",
    "end": "441930"
  },
  {
    "text": "so you guys want to look at their health checking service it's awesome highly recommend you take a look so now we're",
    "start": "441930",
    "end": "448710"
  },
  {
    "text": "gonna get into the details the fun stuff of the application load balancer so this",
    "start": "448710",
    "end": "454020"
  },
  {
    "text": "is a it's new it's a little more than a year old but it still feels new to me it's a feature-rich layer seven load",
    "start": "454020",
    "end": "459930"
  },
  {
    "text": "balancing platform and one of the key features of the application load balancer is the content based routing so",
    "start": "459930",
    "end": "466710"
  },
  {
    "text": "what that means is based on the content of those requests we can route these requests to different different",
    "start": "466710",
    "end": "472440"
  },
  {
    "text": "applications behind the load balancer we support microservices container",
    "start": "472440",
    "end": "477630"
  },
  {
    "text": "applications and we're going to get all get into that shortly we support WebSockets in HTTP - these",
    "start": "477630",
    "end": "484050"
  },
  {
    "text": "are supported out-of-the-box you don't have to do anything you just get WebSockets in HTTP 2 and so most modern",
    "start": "484050",
    "end": "490080"
  },
  {
    "text": "browsers today support HTTP 2 so your application when it can be communicates with the ALB it'll just establish an",
    "start": "490080",
    "end": "496590"
  },
  {
    "text": "HTTP 2 connection path and host based routing we have improved health checks",
    "start": "496590",
    "end": "502380"
  },
  {
    "text": "you know we'll get into those details shortly Amazon CloudWatch improved performance for real-time and streaming",
    "start": "502380",
    "end": "507600"
  },
  {
    "text": "applications so as I mentioned earlier the classic load balancer was built in",
    "start": "507600",
    "end": "513150"
  },
  {
    "text": "2009 that's that old boat balancer the application load balancer was launched a year ago we had this huge struggle we",
    "start": "513150",
    "end": "519090"
  },
  {
    "text": "don't like to break backwards compatibility and ELB but so we were trying to take all these cool new alb",
    "start": "519090",
    "end": "525600"
  },
  {
    "text": "features and and jam them mentally the initial API design that was released in 2009 and we just couldn't get it to work",
    "start": "525600",
    "end": "532320"
  },
  {
    "text": "and so we launched a brand-new API as part of the application the load balancer we were very nervous to do it",
    "start": "532320",
    "end": "538510"
  },
  {
    "text": "but we had to do it and I'm very pleased to say that the vast majority of our customers have been very happy and that",
    "start": "538510",
    "end": "544750"
  },
  {
    "text": "stamie API works for both alb and NLB and then finally this is kind of a funny",
    "start": "544750",
    "end": "550450"
  },
  {
    "text": "feature but load balancer API deletion protection we do get a lot of calls where customers have accidentally",
    "start": "550450",
    "end": "556630"
  },
  {
    "text": "deleted their load balancers and it calls panicked this is available on ec2 today right you can protect deletion",
    "start": "556630",
    "end": "563140"
  },
  {
    "text": "from your ec2 instance so now you know the fun feature we're very proud that we have now released deletion protection",
    "start": "563140",
    "end": "568779"
  },
  {
    "text": "for your load balancer so in the last year we've been very busy we've launched",
    "start": "568779",
    "end": "574300"
  },
  {
    "text": "things like host based routing sni which allows you to put multiple certificates and a load balancer cloud watch percentile support request",
    "start": "574300",
    "end": "581350"
  },
  {
    "text": "tracing blah blah blah we're gonna go through all these shortly so I'm not gonna I promised you I wouldn't read more than one slide so we're now what",
    "start": "581350",
    "end": "589990"
  },
  {
    "text": "we're gonna do is we're gonna build an alb from the ground up for fun not for real but you know conceptually so you",
    "start": "589990",
    "end": "596230"
  },
  {
    "text": "start with a load balancer and every load balancer needs a listener and you might ask what's a listener listeners",
    "start": "596230",
    "end": "602920"
  },
  {
    "text": "define the port and protocol that the load balancer is listening at and so for alb the most typical listeners are HTTP",
    "start": "602920",
    "end": "610600"
  },
  {
    "text": "with port 80 or HTTP with port 443 and each load balancer can have up to 10",
    "start": "610600",
    "end": "616630"
  },
  {
    "text": "different listeners and we talked about these routing rules where you can do content based routing your host based",
    "start": "616630",
    "end": "622120"
  },
  {
    "text": "routing those are defined at the listener level so the next thing we're going to do is add target groups target",
    "start": "622120",
    "end": "629950"
  },
  {
    "text": "groups are logical logical collections of AWS resources so as I mentioned in",
    "start": "629950",
    "end": "636100"
  },
  {
    "text": "that first slide that I've read off of it can either be containers IP addresses",
    "start": "636100",
    "end": "641350"
  },
  {
    "text": "or ec2 instances and every target group has its own customized health check so",
    "start": "641350",
    "end": "647230"
  },
  {
    "text": "you can configure these health checks and so each target group can have its own type of a health check and so again",
    "start": "647230",
    "end": "654579"
  },
  {
    "start": "654000",
    "end": "654000"
  },
  {
    "text": "I said the target groups are these logical groupings of targets they exist independently of the load balancer and",
    "start": "654579",
    "end": "659860"
  },
  {
    "text": "so you can be preparing this target group off to the side adding your resources to that target group and when",
    "start": "659860",
    "end": "665170"
  },
  {
    "text": "it's ready you can then attach it to the load balancer and each target group contained up to a thousand resources so you can have a",
    "start": "665170",
    "end": "670920"
  },
  {
    "text": "thousand containers thousand IP addresses thousand ec2 instances and the",
    "start": "670920",
    "end": "676860"
  },
  {
    "text": "other cool thing about this is that each target group can be associated with an auto scaling group and so each of these",
    "start": "676860",
    "end": "682440"
  },
  {
    "text": "target groups you know typically they're going to be different applications and each target group can be scaled independently of the other target group",
    "start": "682440",
    "end": "688890"
  },
  {
    "text": "so you can get very very granular and very efficient in the way that you scale your resources so as I mentioned earlier",
    "start": "688890",
    "end": "697020"
  },
  {
    "text": "health checks are my favorite feature of the of the load balancer these allow for for traffic to be shifted away from from",
    "start": "697020",
    "end": "704640"
  },
  {
    "text": "targets that might be impaired and so what does this look like here you have a healthy running application all three of",
    "start": "704640",
    "end": "710190"
  },
  {
    "start": "707000",
    "end": "707000"
  },
  {
    "text": "these targets are running great now that top ec2 instance suddenly has high CPU",
    "start": "710190",
    "end": "716700"
  },
  {
    "text": "and so it becomes less responsive to the health check so what will happen is the ELB will now automatically fail away",
    "start": "716700",
    "end": "723060"
  },
  {
    "text": "from that ec2 instance you guys are gonna get a notification that one of your hosts isn't healthy so you can take",
    "start": "723060",
    "end": "729210"
  },
  {
    "text": "your time go debug that application figure out what's going on and magically",
    "start": "729210",
    "end": "734580"
  },
  {
    "text": "that ec2 instance becomes healthy again and the ELB will resume routing traffic and so you set these thresholds of",
    "start": "734580",
    "end": "740340"
  },
  {
    "text": "what's healthy and what's not healthy inside of your health check so one of",
    "start": "740340",
    "end": "745890"
  },
  {
    "text": "the things I like to talk about is I really want you guys to think about the",
    "start": "745890",
    "end": "751020"
  },
  {
    "text": "depth and accuracy of your health checks and so one of the problems we have is when people create these health checks",
    "start": "751020",
    "end": "756900"
  },
  {
    "text": "you know the alb is actually pinging those targets behind the load balancer and what a lot of customers will do is",
    "start": "756900",
    "end": "762300"
  },
  {
    "text": "they'll have this master database that's supporting the entire company and every time they do one of these health check calls it's actually calling that master",
    "start": "762300",
    "end": "769170"
  },
  {
    "text": "database and so that's named master database by chance goes down all sudden",
    "start": "769170",
    "end": "774300"
  },
  {
    "text": "you've taken out every single target from your application right so your application is down because of a database failure so you want to be very",
    "start": "774300",
    "end": "780660"
  },
  {
    "text": "careful with you don't want these health checks to go too deep what I like to tell customers is that your health check",
    "start": "780660",
    "end": "787140"
  },
  {
    "text": "should be deep enough just deep enough to detect the health of an individual target but a show it shouldn't go beyond",
    "start": "787140",
    "end": "793470"
  },
  {
    "text": "that and so really think deeply about how deeply how deep you make those health checks the other thing is that",
    "start": "793470",
    "end": "800790"
  },
  {
    "text": "you can customized the healthy response Co now with the health check and the classic load balancer was only 200 now we can",
    "start": "800790",
    "end": "807830"
  },
  {
    "text": "mark a target as healthy with any Co between 200 and 300 and the other thing",
    "start": "807830",
    "end": "813200"
  },
  {
    "text": "we've added is if you look at the API or look at the console and a target is failing well actually tell you we'll give you",
    "start": "813200",
    "end": "818870"
  },
  {
    "text": "the reason why that target has failed that health check so the next thing",
    "start": "818870",
    "end": "824690"
  },
  {
    "text": "we're going to do here is we're going to add resources to these target groups and so in this chart you know you have one",
    "start": "824690",
    "end": "831470"
  },
  {
    "text": "target group with ec2 instances one with IP addresses one with containers and one",
    "start": "831470",
    "end": "836660"
  },
  {
    "text": "thing to mention here is target groups have to be homogeneous you can't have mixtures or resource types and then",
    "start": "836660",
    "end": "841820"
  },
  {
    "text": "target groups and so they have to be all of one of these three types it's all",
    "start": "841820",
    "end": "847460"
  },
  {
    "text": "again we support you see two instances you can actually register an ec2 instance multiple times with the same",
    "start": "847460",
    "end": "854390"
  },
  {
    "text": "target group with different different port and so this allows you to start using containers we'll get into this in",
    "start": "854390",
    "end": "860270"
  },
  {
    "text": "a moment but if you want to configure containers you want to put 20 containers and the same ec2 instance you can",
    "start": "860270",
    "end": "866240"
  },
  {
    "text": "register that ec2 instance 20 times with a different port for each container in a",
    "start": "866240",
    "end": "872360"
  },
  {
    "text": "single a single ec2 instance can also be registered with multiple target groups and when the very cool things here is",
    "start": "872360",
    "end": "879470"
  },
  {
    "text": "now you can route to IP addresses that are accessible from your V PC you can even route to IP addresses that are",
    "start": "879470",
    "end": "885290"
  },
  {
    "text": "on-premise and so you can get to these if your vbc is connected to your on-prem via Direct Connect or VPN you can then",
    "start": "885290",
    "end": "893720"
  },
  {
    "text": "route to those IP addresses so now we have this beautiful architecture and",
    "start": "893720",
    "end": "900020"
  },
  {
    "text": "we're going to add some rules this is where I think alb gets very exciting and so on that listener on the left side",
    "start": "900020",
    "end": "906410"
  },
  {
    "text": "there we have two rules you have the default rule and slash image and so anything any request that comes through",
    "start": "906410",
    "end": "911810"
  },
  {
    "text": "like david.com slash image is gonna get routed to target group to everything",
    "start": "911810",
    "end": "917720"
  },
  {
    "text": "else is going to go through target group 1 so this is where you can really start getting granular with your request types",
    "start": "917720",
    "end": "922730"
  },
  {
    "text": "and how you route these to your different target applications behind your load balancer",
    "start": "922730",
    "end": "928420"
  },
  {
    "text": "so you've got these rules each listener can have one or more rules rules of",
    "start": "931740",
    "end": "937570"
  },
  {
    "text": "conditioner in action and so like we said / image is a condition and the action is route to this target group",
    "start": "937570",
    "end": "943890"
  },
  {
    "text": "today rules can forward can for the request of specific target groups and you know over time we'll get more",
    "start": "943890",
    "end": "949390"
  },
  {
    "text": "advanced with the type of actions that you can take this is the the format that these rule that the path can take inside",
    "start": "949390",
    "end": "956980"
  },
  {
    "text": "of the URL and so these are basic syntax guidance for you we also have host based",
    "start": "956980",
    "end": "963370"
  },
  {
    "start": "962000",
    "end": "962000"
  },
  {
    "text": "routing and so you can do like I said slash image you can route on the slash image of the path or you can do host so",
    "start": "963370",
    "end": "970390"
  },
  {
    "text": "david.com can go to one target group and Joo comp can go to another target group so you can do whole space routing as",
    "start": "970390",
    "end": "976390"
  },
  {
    "text": "well so now we have our rules we have our targets we have our health checks",
    "start": "976390",
    "end": "981640"
  },
  {
    "text": "and this is where things get very cool as well so here's here's your typical",
    "start": "981640",
    "end": "987670"
  },
  {
    "text": "your old you know 2009 classic load balance or architecture you have an application now let's pretend you want",
    "start": "987670",
    "end": "993100"
  },
  {
    "text": "to add another application well the way you used to have to do that is you had to create another classic load balancer",
    "start": "993100",
    "end": "999160"
  },
  {
    "text": "because your orders at example.com and images dot example.com couldn't go to the same place they can't go to the same",
    "start": "999160",
    "end": "1005430"
  },
  {
    "text": "load balancer the way the classic was architected it's now with alb we can",
    "start": "1005430",
    "end": "1011250"
  },
  {
    "text": "actually combine that and so you can now consolidate your applications behind a single load balancer and so this is",
    "start": "1011250",
    "end": "1017520"
  },
  {
    "text": "awesome right it's easier for you to maintain if you have one less load balancer it's cheaper because you're not paying that monthly fee now so it",
    "start": "1017520",
    "end": "1024600"
  },
  {
    "text": "becomes way more efficient for you to operate your applications the one that the guidance I like to give is some",
    "start": "1024600",
    "end": "1030300"
  },
  {
    "text": "people get so excited they look they're like oh my god you know I have a hundred applications in my company I'm going to consolidate these all behind the alb um",
    "start": "1030300",
    "end": "1037260"
  },
  {
    "text": "I don't want you to do that either because that becomes dangerous right you grossly increase your blast radius",
    "start": "1037260",
    "end": "1042540"
  },
  {
    "text": "you've got a single point of failure if somebody in another department accidentally changes a rule notice that",
    "start": "1042540",
    "end": "1048150"
  },
  {
    "text": "all of a sudden they've brought down every application in your in your company and so sometimes we give the guidance of you know maybe one load",
    "start": "1048150",
    "end": "1055470"
  },
  {
    "text": "balancer for department or team so you'll be careful on how much you consolidate because it could get you can",
    "start": "1055470",
    "end": "1061770"
  },
  {
    "text": "get yourself into some dangerous territory what else so we talked about this a",
    "start": "1061770",
    "end": "1068169"
  },
  {
    "text": "little earlier but basically each of these target groups can be tied to its own individual auto scaling group and so",
    "start": "1068169",
    "end": "1073840"
  },
  {
    "text": "maybe one application starts getting hot and you want to scale that one target group you can scale that target group",
    "start": "1073840",
    "end": "1079210"
  },
  {
    "text": "independently of the other target groups so again this allows you to be very efficient in the way that you scale your",
    "start": "1079210",
    "end": "1084700"
  },
  {
    "text": "resources we're deeply integrated with ECS which is the elastic container service this is",
    "start": "1084700",
    "end": "1091120"
  },
  {
    "start": "1086000",
    "end": "1086000"
  },
  {
    "text": "super exciting because I don't know if you guys have been paying attention to all the features that they've released but now they have Fargate the fully",
    "start": "1091120",
    "end": "1098019"
  },
  {
    "text": "managed container service we now support kubernetes eks was just released and",
    "start": "1098019",
    "end": "1103029"
  },
  {
    "text": "like it's so cool because we just get that like the elbe team didn't have to do any work but just cuz we're deeply",
    "start": "1103029",
    "end": "1108850"
  },
  {
    "text": "integrated with ECS like you guys just get these features and so you can use kubernetes and Fargate which makes it a",
    "start": "1108850",
    "end": "1115659"
  },
  {
    "text": "whole lot easier for you to deploy containers behind your application load balancer and ECS by using ici yes they",
    "start": "1115659",
    "end": "1123039"
  },
  {
    "text": "just they do all that heavy lifting for you all that port mapping that's all it all happens automatically so it makes it",
    "start": "1123039",
    "end": "1128679"
  },
  {
    "text": "a lot easier for you guys to use containers behind your application so",
    "start": "1128679",
    "end": "1134559"
  },
  {
    "text": "here you can see when you kind of talked about this earlier but now you have two different target groups one has ec2",
    "start": "1134559",
    "end": "1139720"
  },
  {
    "text": "instances and 1s containers so we talked earlier about security policies and the",
    "start": "1139720",
    "end": "1147760"
  },
  {
    "start": "1141000",
    "end": "1141000"
  },
  {
    "text": "load balancer with a lbph we have these predefined security policies so when you create an alb it's a drop-down menu so",
    "start": "1147760",
    "end": "1154389"
  },
  {
    "text": "we have these I think five different policies literally if you create your alb and say I want to do HTTP you have a",
    "start": "1154389",
    "end": "1160720"
  },
  {
    "text": "drop-down on these policies what's very cool about this is if there's an issue one day you know maybe there's a",
    "start": "1160720",
    "end": "1167710"
  },
  {
    "text": "security vulnerability and what in an open SSL or something like that you can literally with a drop-down menu apply",
    "start": "1167710",
    "end": "1173980"
  },
  {
    "text": "that new policy and secure your load balancer and so again we designed these policies so that you guys can focus on",
    "start": "1173980",
    "end": "1180490"
  },
  {
    "text": "building awesome applications and not have to get so deep into the security because this is really complicated stuff",
    "start": "1180490",
    "end": "1187320"
  },
  {
    "text": "so sni we are we recently released sni about two months ago maybe a month ago I",
    "start": "1187320",
    "end": "1193779"
  },
  {
    "text": "don't know but anyways this allows you this is one of the most requested features over the last five years if you look at",
    "start": "1193779",
    "end": "1200560"
  },
  {
    "text": "the message boards everybody want an S and I and so what this allows you to do now is you get a multiple domains on the",
    "start": "1200560",
    "end": "1206560"
  },
  {
    "text": "same load balancer each with its own TLS certificate and so again it allows you to be put more applications behind your",
    "start": "1206560",
    "end": "1212890"
  },
  {
    "text": "load balancer not too many but it makes it makes it so you can be a lot more efficient with the way you manage your",
    "start": "1212890",
    "end": "1218770"
  },
  {
    "text": "applications we're deeply integrated with ACM which is the Amazon certificate Management",
    "start": "1218770",
    "end": "1223990"
  },
  {
    "text": "Service and so we give you free SSL certificates and these things are updated automatically so prevents you",
    "start": "1223990",
    "end": "1230050"
  },
  {
    "text": "from having the expiration issues so it's just a very easy way to manage your certificates on your load balancer this",
    "start": "1230050",
    "end": "1239200"
  },
  {
    "text": "is my favorite slide because I don't tha say anything else but we I thought this",
    "start": "1239200",
    "end": "1244510"
  },
  {
    "text": "was very funny I'm happy to hear you guys laughing when we finally launched ipv6 I think the world was trying to get",
    "start": "1244510",
    "end": "1250210"
  },
  {
    "text": "this for about 20 years but we finally have a pv6 support when you create your load balancer there's a drop-down menu",
    "start": "1250210",
    "end": "1255940"
  },
  {
    "text": "you can click dual-stack and we give you an ipv6 address and an ipv4 address so we're very proud that this finally",
    "start": "1255940",
    "end": "1261580"
  },
  {
    "text": "launched oh wow web is super cool especially yesterday because of there's",
    "start": "1261580",
    "end": "1268150"
  },
  {
    "start": "1263000",
    "end": "1263000"
  },
  {
    "text": "another announcement but this is the Web Application Firewall and every request that comes to your load balancer it gets",
    "start": "1268150",
    "end": "1274510"
  },
  {
    "text": "inspected if you turn this on you have to enroll in this feature but if you have laughs on your load balancer will",
    "start": "1274510",
    "end": "1281980"
  },
  {
    "text": "inspect your inspector request and either allow it or or reject it and so",
    "start": "1281980",
    "end": "1287460"
  },
  {
    "text": "you know we can look for sequel injection cross-site scripting one of the things that I'm super excited about",
    "start": "1287460",
    "end": "1292990"
  },
  {
    "text": "is yesterday yesterday with this morning they launched managed policies so like",
    "start": "1292990",
    "end": "1298540"
  },
  {
    "text": "alert logic Trend Micro now these managed security policies on RAF that",
    "start": "1298540",
    "end": "1304540"
  },
  {
    "text": "will if there's new threats those policies will just get updated you don't have to do anything so these manage this is one of those",
    "start": "1304540",
    "end": "1310630"
  },
  {
    "text": "things where just by nature of using laughs you get you just get these new features and so I'm actually I'm very",
    "start": "1310630",
    "end": "1317590"
  },
  {
    "text": "excited to go look at some of these manage policies that alert alert logic and trend Michael are putting in laughs so a super cool feature to add your load",
    "start": "1317590",
    "end": "1324640"
  },
  {
    "text": "balancer to add another layer of security for you and finally the fun",
    "start": "1324640",
    "end": "1330610"
  },
  {
    "text": "part because I'm pretty boring Andrews going to give a quick demo on IP as a target so at Netflix",
    "start": "1330610",
    "end": "1344869"
  },
  {
    "text": "we've been using ELB technology since the move to the cloud and I wanted to cover two cases first if you think about",
    "start": "1344869",
    "end": "1352190"
  },
  {
    "text": "our streaming service which serves over 109 million customers on a daily basis",
    "start": "1352190",
    "end": "1358549"
  },
  {
    "text": "we have some pretty advanced in the balancing technology so what you can see here is as you're streaming as you're",
    "start": "1358549",
    "end": "1365779"
  },
  {
    "text": "watching Netflix content as you're interacting with our streaming experience you're going through route 53",
    "start": "1365779",
    "end": "1372049"
  },
  {
    "text": "and you're getting geo-located across u.s. east one u.s. one and US west to",
    "start": "1372049",
    "end": "1378379"
  },
  {
    "text": "whatever is closest to you right below that we're using CLB at that level of",
    "start": "1378379",
    "end": "1383539"
  },
  {
    "text": "scale and right below that we're talking to our cloud gateway technology",
    "start": "1383539",
    "end": "1388580"
  },
  {
    "text": "something we've open source called Zul and then in the micro services network our load balancing is based on",
    "start": "1388580",
    "end": "1394029"
  },
  {
    "text": "technology we've also open source called Eureka what all these layers of load",
    "start": "1394029",
    "end": "1399409"
  },
  {
    "text": "balancing do for us is fault tolerance so if you think about failures that",
    "start": "1399409",
    "end": "1404599"
  },
  {
    "text": "occur because we do bad code deploys in any one region or if there's a temporary",
    "start": "1404599",
    "end": "1410229"
  },
  {
    "text": "instability in one of the Amazon regions we can actually start shifting traffic from that Zul layer across regions and",
    "start": "1410229",
    "end": "1417489"
  },
  {
    "text": "then eventually change DNS and start moving your traffic around the world and we've got it down to around six minutes",
    "start": "1417489",
    "end": "1424849"
  },
  {
    "text": "that we can actually take all of the traffic out of say US East one and split it to EU and the west coast without you",
    "start": "1424849",
    "end": "1431779"
  },
  {
    "text": "noticing and availability event we couldn't do this without load balancing technologies that's one area of Netflix",
    "start": "1431779",
    "end": "1439489"
  },
  {
    "text": "and load balancing another area which are going to go into deep today is our alb usage so while you know we need this",
    "start": "1439489",
    "end": "1447049"
  },
  {
    "text": "for the streaming service there's a lot of people that are looking for some of the more advanced features that are coming out with alb as well as a simple",
    "start": "1447049",
    "end": "1453229"
  },
  {
    "text": "load balancing solution than all these tiers I just talked about people that are in our content area people that are",
    "start": "1453229",
    "end": "1460070"
  },
  {
    "text": "working in our studio people that are doing partner facing applications",
    "start": "1460070",
    "end": "1465320"
  },
  {
    "text": "and they're using spinner tur to configure a elby's which I'll show you in a second so Who am I",
    "start": "1465320",
    "end": "1472790"
  },
  {
    "text": "I'm Andrew Spiker that was the global Netflix view my my day job is I run the",
    "start": "1472790",
    "end": "1478640"
  },
  {
    "text": "container management platform at Netflix something that we love to call Titus on the upper right side there we've got",
    "start": "1478640",
    "end": "1484340"
  },
  {
    "text": "some stickers if you wanted afterwards Titus launches about a million containers a week and when we set out",
    "start": "1484340",
    "end": "1491780"
  },
  {
    "text": "design Titus as a container management platform we wanted it to be natively AWS integrated and from a networking",
    "start": "1491780",
    "end": "1498050"
  },
  {
    "text": "perspective what that meant was we wanted I psi P stacks for each one of",
    "start": "1498050",
    "end": "1503570"
  },
  {
    "text": "our containers we didn't want to do port mapping we didn't want to do an overlay network we want to just straight-up",
    "start": "1503570",
    "end": "1509540"
  },
  {
    "text": "mapping into V PC that gives us security groups that gives us things like I am rolls but it presented a challenge",
    "start": "1509540",
    "end": "1516530"
  },
  {
    "text": "especially on the load balancing front the challenge was up until what we're",
    "start": "1516530",
    "end": "1521570"
  },
  {
    "text": "going to talk about with IP targets is you could only register the ec2 host I'm",
    "start": "1521570",
    "end": "1527690"
  },
  {
    "start": "1527000",
    "end": "1527000"
  },
  {
    "text": "not going to go into deep details here because you can watch the presentation from last year's reinvent but this is",
    "start": "1527690",
    "end": "1533210"
  },
  {
    "text": "what our networking stack looks like on a single instance that's running multiple containers in titus so the big",
    "start": "1533210",
    "end": "1539780"
  },
  {
    "text": "takeaway here is that's a single virtual machine host and there's three containers that are running and there's",
    "start": "1539780",
    "end": "1545810"
  },
  {
    "text": "a lot of networking Gorp and magic that basically maps them to two different en eyes and three different IP addresses",
    "start": "1545810",
    "end": "1553330"
  },
  {
    "text": "before al B and IP targets we couldn't map this into the alb world because we",
    "start": "1553330",
    "end": "1558890"
  },
  {
    "text": "could only map that virtual machine host and we one didn't want to do that port mapping so now with Al B's and actually",
    "start": "1558890",
    "end": "1566510"
  },
  {
    "start": "1564000",
    "end": "1564000"
  },
  {
    "text": "with our spinnaker enablement of this spinnaker is our continuous deployment platform at Netflix we can manage al B's",
    "start": "1566510",
    "end": "1574430"
  },
  {
    "text": "and associate them with container clusters spinnaker wraps up the concept",
    "start": "1574430",
    "end": "1579710"
  },
  {
    "text": "of an application at Netflix so it takes your image it takes your load balancers",
    "start": "1579710",
    "end": "1585080"
  },
  {
    "text": "it takes your security groups it takes your IM roles all the things that go together to create a micro service and exposes it out into a single pane of",
    "start": "1585080",
    "end": "1592400"
  },
  {
    "text": "management for al b specifically what we can do is we can to find the cluster much like you would",
    "start": "1592400",
    "end": "1598669"
  },
  {
    "text": "with the ec2 instances but now with containers and then we associate an IP target group under unknown lb and like",
    "start": "1598669",
    "end": "1607190"
  },
  {
    "text": "David was talking about we have a lot of flexibility so we can have al bees that are crossing different clusters of",
    "start": "1607190",
    "end": "1612740"
  },
  {
    "text": "containers we can have them crossing ec2 instances and containers as people are",
    "start": "1612740",
    "end": "1617990"
  },
  {
    "text": "migrating between the two all that flexibility and listeners and and target groups gives us our baterry mapping that",
    "start": "1617990",
    "end": "1624200"
  },
  {
    "text": "we can play with and basically the user at the end of the day tells spinnaker to",
    "start": "1624200",
    "end": "1629539"
  },
  {
    "text": "find a cluster which talks to our tightest runtime for containers and then tells it which IP target group to",
    "start": "1629539",
    "end": "1635139"
  },
  {
    "text": "associate it with how this actually works then as traffic starts flowing",
    "start": "1635139",
    "end": "1640360"
  },
  {
    "start": "1636000",
    "end": "1636000"
  },
  {
    "text": "into those containers on the bottom side you'll see all the containers that are running in the upper left you'll see the",
    "start": "1640360",
    "end": "1646639"
  },
  {
    "text": "container runtime something as I said tightest and you'll associate that alb",
    "start": "1646639",
    "end": "1652429"
  },
  {
    "text": "with an IP target group and initially it'll be empty right but as containers start up or containers",
    "start": "1652429",
    "end": "1658970"
  },
  {
    "text": "are replaced we in Titus will launch a container as part of that launching the container will configure its VPC",
    "start": "1658970",
    "end": "1664759"
  },
  {
    "text": "resources well get back an IP and then we'll update the IP target group and at that point the alb can start flowing",
    "start": "1664759",
    "end": "1671299"
  },
  {
    "text": "traffic down to the containers this is through the basic block and tackle of getting it working we also had to do",
    "start": "1671299",
    "end": "1677960"
  },
  {
    "text": "some two advanced things that I want to talk about in terms of handling down",
    "start": "1677960",
    "end": "1683029"
  },
  {
    "text": "scales and as you said your favorite feature health checks and health check reconciliation so let me cover those",
    "start": "1683029",
    "end": "1689990"
  },
  {
    "start": "1689000",
    "end": "1689000"
  },
  {
    "text": "real quick before I turn it back over one of the events features we had to do and and the alb api's let us do this",
    "start": "1689990",
    "end": "1696590"
  },
  {
    "text": "it's pretty amazing is you can imagine one of these containers has to shut down",
    "start": "1696590",
    "end": "1701600"
  },
  {
    "text": "so you're like auto-scaling your cluster down you don't want to just kill the container or if it was an ec2 instance",
    "start": "1701600",
    "end": "1708320"
  },
  {
    "text": "you don't want to just kill it because now the IP target group has an IP that is serving traffic that is no longer in",
    "start": "1708320",
    "end": "1714799"
  },
  {
    "text": "existence so with the api's and alb what we do is when we see a downscaling event",
    "start": "1714799",
    "end": "1720590"
  },
  {
    "text": "come into Titus will actually make a call over to the alb service and say can you start draining this IP address in",
    "start": "1720590",
    "end": "1727070"
  },
  {
    "text": "this IP target group and when it's done that we can terminate the container so it",
    "start": "1727070",
    "end": "1732260"
  },
  {
    "text": "gives us much more graceful shutdown the other feature that we've implemented is health check reconciliation so it's",
    "start": "1732260",
    "end": "1739700"
  },
  {
    "text": "great to have health checks it's great to have them deep but not too deep but then what do you do with them what we do",
    "start": "1739700",
    "end": "1746060"
  },
  {
    "text": "is the IP the alb is constantly doing health checks of our containers calling",
    "start": "1746060",
    "end": "1751070"
  },
  {
    "text": "those health check implementations and then our container runtime Titus is actually pulling the IP target group for",
    "start": "1751070",
    "end": "1757670"
  },
  {
    "text": "the health of all of these instances and when it sees one that's failing a health",
    "start": "1757670",
    "end": "1762680"
  },
  {
    "text": "check for enough of time it'll actually terminate the container instance and",
    "start": "1762680",
    "end": "1767720"
  },
  {
    "text": "then it will replace it with a new healthy instance and those are just some of the things that we've been able to do",
    "start": "1767720",
    "end": "1773150"
  },
  {
    "text": "without this IP target support and al Bea's we would have been kind of shut off from",
    "start": "1773150",
    "end": "1779300"
  },
  {
    "text": "running containers within load-balancing but with us now we able to do our own",
    "start": "1779300",
    "end": "1784580"
  },
  {
    "text": "load balancing both of the scale of the streaming service as well as some of the advanced use cases that were coming",
    "start": "1784580",
    "end": "1790520"
  },
  {
    "text": "through the alb side cool thank you it's",
    "start": "1790520",
    "end": "1795770"
  },
  {
    "text": "awesome Thank You Andrew I know you guys all",
    "start": "1795770",
    "end": "1801980"
  },
  {
    "text": "came to see Andrew and not me anyway so I really appreciate that so a couple details about IP is a target these are",
    "start": "1801980",
    "end": "1808370"
  },
  {
    "text": "these are the RFC ranges of the IP addresses that the alb can reach the",
    "start": "1808370",
    "end": "1814280"
  },
  {
    "text": "other thing we mentioned this a little bit earlier but if you want to reach on-premise IP addresses if you have a",
    "start": "1814280",
    "end": "1819980"
  },
  {
    "text": "Direct Connect or VPN to your V PC you can reach those as well so super cool feature and some really cool use cases",
    "start": "1819980",
    "end": "1826910"
  },
  {
    "text": "as Andrew just showed you guys so across on load balancing this ties back to that",
    "start": "1826910",
    "end": "1834020"
  },
  {
    "start": "1831000",
    "end": "1831000"
  },
  {
    "text": "that architecture that I showed you guys earlier this is a fundamental feature",
    "start": "1834020",
    "end": "1839120"
  },
  {
    "text": "that's enabled with every single application load balancer and so we evenly distribute requests across both",
    "start": "1839120",
    "end": "1846170"
  },
  {
    "text": "of your availability zones are both of your subnets as I mentioned you earlier we want you to give us two different subnets we want you to put targets in",
    "start": "1846170",
    "end": "1853550"
  },
  {
    "text": "both subnets we believe so strongly in multi a-z we always have ELB in two",
    "start": "1853550",
    "end": "1858679"
  },
  {
    "text": "different availability zones and even if you only give us one subnet we're still going to load bound",
    "start": "1858679",
    "end": "1864290"
  },
  {
    "text": "across these two different availability zones because if there's an issue with one of those alb nodes I'm will just",
    "start": "1864290",
    "end": "1870110"
  },
  {
    "text": "fail away from it but even if we fail the way to the node that's not in the same as e as your targets will still route there and so we'll give you a",
    "start": "1870110",
    "end": "1877040"
  },
  {
    "text": "little example here here's here's a functioning application and we get some",
    "start": "1877040",
    "end": "1885020"
  },
  {
    "start": "1878000",
    "end": "1878000"
  },
  {
    "text": "issues here right and so maybe something happens that 1az most targets start failing that node in u.s. West one B can",
    "start": "1885020",
    "end": "1893000"
  },
  {
    "text": "still reach the targets in u.s. in u.s. West 1a so this is a key feature of high",
    "start": "1893000",
    "end": "1898460"
  },
  {
    "text": "availability that the application load balancer provides you so we highly recommend again you put resources in",
    "start": "1898460",
    "end": "1904460"
  },
  {
    "text": "both daisies first sometimes it you can't do it and that's okay but we're when it's possible please do that the",
    "start": "1904460",
    "end": "1912860"
  },
  {
    "text": "other thing that happens here is with cross and little balancing is without cross so load balancing you could",
    "start": "1912860",
    "end": "1918290"
  },
  {
    "text": "actually get a you can you get an imbalance load and see you can see that ec2 instance on the top Izzie is running",
    "start": "1918290",
    "end": "1925220"
  },
  {
    "text": "hot right now but when you turn on cross all the load balancing the traffic now gets distributed evenly across all both",
    "start": "1925220",
    "end": "1931460"
  },
  {
    "text": "of your subnets of across all of your resources so you can see even though you",
    "start": "1931460",
    "end": "1937250"
  },
  {
    "text": "might have only one resources and one is ian ford and the other with cross on load balancing we still evenly",
    "start": "1937250",
    "end": "1943190"
  },
  {
    "text": "distribute the load and by the way typically when you do cross on with ec2",
    "start": "1943190",
    "end": "1950510"
  },
  {
    "text": "you get charged there is no charge with al B so even though we might be sending sending traffic across that barrier",
    "start": "1950510",
    "end": "1956750"
  },
  {
    "text": "there is no charge for you as an al B customer so now we're getting to the details of Amazon CloudWatch metrics",
    "start": "1956750",
    "end": "1962930"
  },
  {
    "text": "this is also a very cool feature of al B because we're in this unique position where all these requests are coming from",
    "start": "1962930",
    "end": "1968780"
  },
  {
    "text": "the alb so we have very unique visibility into the health of your application and so we just by nature of",
    "start": "1968780",
    "end": "1974390"
  },
  {
    "text": "using al B you get all these cloud watch metrics at first of all it's a one minute granularity so you can look at",
    "start": "1974390",
    "end": "1980210"
  },
  {
    "text": "things every minute second of all we just released a feature percentiles and",
    "start": "1980210",
    "end": "1985490"
  },
  {
    "text": "so when you look at at like for example if you're looking at lane sees and you look at an average latency it's very",
    "start": "1985490",
    "end": "1991370"
  },
  {
    "text": "hard to detect issues right because some of these if there's a problem customer or a problem issue they get hidden in",
    "start": "1991370",
    "end": "1996860"
  },
  {
    "text": "that average and so if you start using things like percentiles at Amazon we call p99",
    "start": "1996860",
    "end": "2002179"
  },
  {
    "text": "so I'm looking at the p99 of latency and the latency is 10 milliseconds that means every single customer is",
    "start": "2002179",
    "end": "2008480"
  },
  {
    "text": "experienced 10 milliseconds or better so it kind of gives you that worst-case and so it becomes a whole lot easier to zero",
    "start": "2008480",
    "end": "2015740"
  },
  {
    "text": "in on problems by using percent house and I mean the scale AWS obviously as you guys know is so big we use P 99.99",
    "start": "2015740",
    "end": "2024019"
  },
  {
    "text": "9.99 too sometimes it gets so hard to zero in on where there are problems with our applications or our services well one of",
    "start": "2024019",
    "end": "2034519"
  },
  {
    "text": "them one of the most important metrics is that healthy host count and this gives you the number of healthy hosts in",
    "start": "2034519",
    "end": "2040039"
  },
  {
    "start": "2035000",
    "end": "2035000"
  },
  {
    "text": "a specific availability zone so you can alarm on this maybe you're expecting to have 10 hosts in a specific availability",
    "start": "2040039",
    "end": "2046580"
  },
  {
    "text": "zone and one of those hosts becomes unhealthy all of a sudden your metric is 9 you can get an alert so this is a",
    "start": "2046580",
    "end": "2052460"
  },
  {
    "text": "really cool way to monitor the health of your application the number one reason",
    "start": "2052460",
    "end": "2057589"
  },
  {
    "text": "for this failure for the healthy host count to start dropping is that those health checks start failing and so",
    "start": "2057589",
    "end": "2062628"
  },
  {
    "text": "you're waiting for a response from the target and you're not getting that response because of you know what's going beyond on that Stern that certain",
    "start": "2062629",
    "end": "2069560"
  },
  {
    "text": "latency this so this is a very important metric this is the time it takes from",
    "start": "2069560",
    "end": "2075950"
  },
  {
    "start": "2072000",
    "end": "2072000"
  },
  {
    "text": "then when the packet leaves that the load bouncer goes through the target and comes back and so when you start seeing",
    "start": "2075950",
    "end": "2082010"
  },
  {
    "text": "increases in these late C's it's typically a sign of an under scaled application so you prop most likely",
    "start": "2082010",
    "end": "2088580"
  },
  {
    "text": "you're going to need to add more capacity to the to that target group behind the load balancer so when you",
    "start": "2088580",
    "end": "2093589"
  },
  {
    "text": "start seeing these metrics go up you know you can actually scale on this via your auto scaling group reject a",
    "start": "2093589",
    "end": "2101300"
  },
  {
    "start": "2101000",
    "end": "2101000"
  },
  {
    "text": "connection count this basically means that the application load balancers getting requests and we have nowhere to",
    "start": "2101300",
    "end": "2106369"
  },
  {
    "text": "route them to all the way up all the targets are busy so we just start dropping the start we start dropping",
    "start": "2106369",
    "end": "2111380"
  },
  {
    "text": "these requests and so this is obviously sign of an under scaled application as well and something something you would",
    "start": "2111380",
    "end": "2116599"
  },
  {
    "text": "not want to watch pretty closely and what the very cool thing is you know we've been talking about this throughout",
    "start": "2116599",
    "end": "2122540"
  },
  {
    "start": "2119000",
    "end": "2119000"
  },
  {
    "text": "this talk is each target group is really its own application and so what we do is we give you all these metrics at the",
    "start": "2122540",
    "end": "2129050"
  },
  {
    "text": "target group level so you can monitor perform of your specific applications behind your load balancer and then finally we",
    "start": "2129050",
    "end": "2138110"
  },
  {
    "start": "2136000",
    "end": "2136000"
  },
  {
    "text": "have access logs and so these cloud watch metrics give you this high level you know aggregate view across your",
    "start": "2138110",
    "end": "2144500"
  },
  {
    "text": "across your various target groups but like you start seeing a latency problem for example you're going to look at that",
    "start": "2144500",
    "end": "2150350"
  },
  {
    "text": "access log to root so the access log contains the request time the client IP address latency request path to get",
    "start": "2150350",
    "end": "2157550"
  },
  {
    "text": "really really good detail on the type of request coming through the load bouncer and you can use the access log to really",
    "start": "2157550",
    "end": "2164270"
  },
  {
    "text": "help deep dive where is that problem coming from we ship access logs off of the load balancer every 5 or 60 minutes",
    "start": "2164270",
    "end": "2171410"
  },
  {
    "text": "depending on how you have them configured so it usually starts with you detecting a problem in your cloud watch",
    "start": "2171410",
    "end": "2176660"
  },
  {
    "text": "metrics and then really debugging it via your access logs so now we're getting on",
    "start": "2176660",
    "end": "2185600"
  },
  {
    "start": "2183000",
    "end": "2183000"
  },
  {
    "text": "the pricing the alb is actually 10% cheaper per month versus the CLB so",
    "start": "2185600",
    "end": "2192530"
  },
  {
    "text": "that's pretty cool and then we have this new concept called the LCU the LCU cost eight tenths of a cent per hour and what",
    "start": "2192530",
    "end": "2201620"
  },
  {
    "text": "an LCU is LCU gives you 25 new connections per second 3,000 active",
    "start": "2201620",
    "end": "2208370"
  },
  {
    "start": "2203000",
    "end": "2203000"
  },
  {
    "text": "connections per minute up to two point two two megabits megabytes which translates to one gigabyte per hour or",
    "start": "2208370",
    "end": "2214490"
  },
  {
    "text": "one thousand rules of valuating remember all those content-based rules or host-based rules and basically every",
    "start": "2214490",
    "end": "2220310"
  },
  {
    "text": "hour we look at all four of these dimensions and we'll charge you on the one that has the highest usage typically",
    "start": "2220310",
    "end": "2227390"
  },
  {
    "text": "you know ninety-nine p99 of workloads are usually bandwidth bound you know",
    "start": "2227390",
    "end": "2232760"
  },
  {
    "text": "rich but you know sometimes people will have like very high connection rates you know they have a whole bunch of WebSockets but typically you'll see that",
    "start": "2232760",
    "end": "2239360"
  },
  {
    "text": "your LCU is bound by bandwidth and most most workloads so migrating to the",
    "start": "2239360",
    "end": "2246680"
  },
  {
    "start": "2245000",
    "end": "2245000"
  },
  {
    "text": "application load balancer you know a lot of people are you still using the classic load balancer today as we mentioned it's super reliable super high",
    "start": "2246680",
    "end": "2254090"
  },
  {
    "text": "availability and it's really it's really easy if you create a new load balancer a new application load balancer we give",
    "start": "2254090",
    "end": "2260510"
  },
  {
    "text": "you a new a record and you can start creating targets and putting it behind that Kayson load balancer and maybe in route",
    "start": "2260510",
    "end": "2266869"
  },
  {
    "text": "53 you start wading away from your old load balancer to the new one it's very easy i'm via dns to create a",
    "start": "2266869",
    "end": "2273080"
  },
  {
    "text": "load balancer and start testing things last week or two weeks ago we launched a",
    "start": "2273080",
    "end": "2278089"
  },
  {
    "start": "2276000",
    "end": "2276000"
  },
  {
    "text": "migration wizard well actually create an application load balancer and replicate that",
    "start": "2278089",
    "end": "2283250"
  },
  {
    "text": "configuration and your classic world bounce aren't added to your application load balancer so we're trying to make this a very easy for you because first",
    "start": "2283250",
    "end": "2289940"
  },
  {
    "text": "of all application load balancer is cheaper and second of all all those cool features are available an application load balancer so we're trying to make it",
    "start": "2289940",
    "end": "2296270"
  },
  {
    "text": "as easy as possible for you guys to migrate to that alb so the question",
    "start": "2296270",
    "end": "2302869"
  },
  {
    "text": "starts coming when should I use application load balancer and here's here's a feature breakdown of the",
    "start": "2302869",
    "end": "2308839"
  },
  {
    "text": "application load balancer versus the network load balancer this is the classic load balancer we don't really",
    "start": "2308839",
    "end": "2314960"
  },
  {
    "text": "want you're using classic load balancer there are there are some edge cases",
    "start": "2314960",
    "end": "2320180"
  },
  {
    "text": "where classic load balancer works for example if you if you are do seeing TCP",
    "start": "2320180",
    "end": "2325339"
  },
  {
    "text": "and you want an SSL termination that's not yet available in NLB but besides that if you're doing if you're doing",
    "start": "2325339",
    "end": "2331550"
  },
  {
    "text": "anything but T TCP load balancer we want you to use a LB we've made this very",
    "start": "2331550",
    "end": "2336560"
  },
  {
    "text": "simple for TCP use Network load balancer for all other use cases use the",
    "start": "2336560",
    "end": "2341599"
  },
  {
    "text": "application load balancer and finally to learn more we have the you know here's",
    "start": "2341599",
    "end": "2348619"
  },
  {
    "text": "some links of the documentation I'm on Twitter if you guys have questions and Andrew and I are happy to answer any",
    "start": "2348619",
    "end": "2353960"
  },
  {
    "text": "questions you guys have about ELB cool thank you guys",
    "start": "2353960",
    "end": "2359740"
  }
]