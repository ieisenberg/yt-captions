[
  {
    "start": "0",
    "end": "80000"
  },
  {
    "text": "good afternoon my name is Brian Welker and I'm a principal product manager on",
    "start": "30",
    "end": "5490"
  },
  {
    "text": "the Amazon RDS team excited to give you today a deep dive on Amazon RDS now as a",
    "start": "5490",
    "end": "12179"
  },
  {
    "text": "product manager on the team one of my main jobs is to answer questions and I get lots of questions I get questions",
    "start": "12179",
    "end": "17640"
  },
  {
    "text": "from support cases that people open I get questions from our field Account",
    "start": "17640",
    "end": "23580"
  },
  {
    "text": "Managers and essays I get questions over the RDS forums well we have a community",
    "start": "23580",
    "end": "30000"
  },
  {
    "text": "forum where we answer questions about the product and I get questions from shows like reinvent and so what I'd like",
    "start": "30000",
    "end": "36750"
  },
  {
    "text": "to do over the next 50 minutes or so is to review a lot of those questions and answer some of those questions that I",
    "start": "36750",
    "end": "42660"
  },
  {
    "text": "get constantly about using the service in order to help you use the service better just a show of hands",
    "start": "42660",
    "end": "49469"
  },
  {
    "text": "who's using Amazon RDS today in production okay how about for more than",
    "start": "49469",
    "end": "55020"
  },
  {
    "text": "a year more than a year alright how about more than five years if you go",
    "start": "55020",
    "end": "60719"
  },
  {
    "text": "there very good how about more than one database engine using more than one or",
    "start": "60719",
    "end": "67380"
  },
  {
    "text": "more than four database engines okay well we've got some some longtime users",
    "start": "67380",
    "end": "73170"
  },
  {
    "text": "and some users that are using service so hopefully we'll get to a lot of those those key questions so for those of you",
    "start": "73170",
    "end": "81210"
  },
  {
    "start": "80000",
    "end": "243000"
  },
  {
    "text": "who are using it today you probably know that Amazon RDS is our manage relational database service in the AWS cloud and",
    "start": "81210",
    "end": "88909"
  },
  {
    "text": "you may not know that Amazon RDS was started back in 2009 one of the earliest",
    "start": "88909",
    "end": "95159"
  },
  {
    "text": "services in AWS and it was started by some folks who were running the amazon.com database the database that",
    "start": "95159",
    "end": "102960"
  },
  {
    "text": "powers our e-commerce site running one of the world's largest e-commerce databases at the time and they thought",
    "start": "102960",
    "end": "109140"
  },
  {
    "text": "well if we the things that we've learned about running databases is that we can take that and apply it to our customers",
    "start": "109140",
    "end": "116009"
  },
  {
    "text": "databases we can do the same things for our customers in AWS and so they started the core of Amazon RDS started with the",
    "start": "116009",
    "end": "122909"
  },
  {
    "text": "MySQL engine and then over time over the last seven years it's grown we've added",
    "start": "122909",
    "end": "128729"
  },
  {
    "text": "engines we've added features we've added the Amazon Roar engine so and at the time it was sort of a novel",
    "start": "128729",
    "end": "135359"
  },
  {
    "text": "idea why would we have a database service I can just use compute and storage and I can run my own database",
    "start": "135359",
    "end": "140849"
  },
  {
    "text": "but we really wanted to provide a higher level service that took some of the muck",
    "start": "140849",
    "end": "146040"
  },
  {
    "text": "sort of the grunt work out of running your own database it was like provisioning things like patching things",
    "start": "146040",
    "end": "151349"
  },
  {
    "text": "like scaling back up and restore these are things that if you have good DBAs you have good engineers you can build",
    "start": "151349",
    "end": "157530"
  },
  {
    "text": "yourself but they're really not things that necessarily add value for your company and then we provide really these",
    "start": "157530",
    "end": "164249"
  },
  {
    "text": "high availability solutions that I'll talk a lot about leveraging high availability these are things that typically come in commercial databases",
    "start": "164249",
    "end": "170639"
  },
  {
    "text": "at a very expensive price point and we built them right into RDS so from the beginning you can take advantage of",
    "start": "170639",
    "end": "177030"
  },
  {
    "text": "these so why would you use a managed database solution as I mentioned we managed them up we managed to the day to",
    "start": "177030",
    "end": "182879"
  },
  {
    "text": "day grunt work of running a database and that allows you to get more out of your",
    "start": "182879",
    "end": "188250"
  },
  {
    "text": "teams right so they can build their apps they can deploy their outs they don't spend a lot of time tweaking the database and really focus on the things",
    "start": "188250",
    "end": "195900"
  },
  {
    "text": "that differentiate your solutions not running a relational database as I mentioned we've built in high",
    "start": "195900",
    "end": "201870"
  },
  {
    "text": "availability and cross region things like cross region replication so one of the benefits of being in the AWS cloud",
    "start": "201870",
    "end": "208349"
  },
  {
    "text": "is that we have a global infrastructure we can do things that are really challenging to do on-premises being able",
    "start": "208349",
    "end": "215430"
  },
  {
    "text": "to support multiple data centers around the world for high availability for disaster recovery so even if you're a",
    "start": "215430",
    "end": "223379"
  },
  {
    "text": "small start-up just starting out and you're provisioning your first database you can take advantage of these features",
    "start": "223379",
    "end": "229590"
  },
  {
    "text": "right off the bat you simply check a check box in the console and then you",
    "start": "229590",
    "end": "234689"
  },
  {
    "text": "get a really available solution with that 99.95% really high availability so",
    "start": "234689",
    "end": "244349"
  },
  {
    "start": "243000",
    "end": "356000"
  },
  {
    "text": "the first thing you have to do when you're starting getting started with RDS you have to pick the pick your database",
    "start": "244349",
    "end": "249959"
  },
  {
    "text": "instance you have to pick your instance you have to pick your storage and that can be a daunting task",
    "start": "249959",
    "end": "255359"
  },
  {
    "text": "the first thing actually is is to choose your engine so we now support the what",
    "start": "255359",
    "end": "261060"
  },
  {
    "text": "we call the EBS space these are our five engines on the Left that are based on",
    "start": "261060",
    "end": "266340"
  },
  {
    "text": "Amazon the elastic block store so two commercial engines we call the Oracle and sequel server obviously those are",
    "start": "266340",
    "end": "273450"
  },
  {
    "text": "products from those companies we just run as is and then we have our open source engine it's MySQL PostgreSQL",
    "start": "273450",
    "end": "279890"
  },
  {
    "text": "Andreea DB these are engines that we take the community distribution we do a",
    "start": "279890",
    "end": "285840"
  },
  {
    "text": "small amount of tweaking but but really we pretty much take them as is and then run them in the RDS infrastructure so",
    "start": "285840",
    "end": "293610"
  },
  {
    "text": "that allows us with these engines to really keep up with the improvements in the community when those new versions",
    "start": "293610",
    "end": "300030"
  },
  {
    "text": "come out when those improvements come out and the community additions we just incorporate those into RDS now we do",
    "start": "300030",
    "end": "306240"
  },
  {
    "text": "have our cloud native databases so amazon aurora that comes in both the MySQL compatible addition and the",
    "start": "306240",
    "end": "312990"
  },
  {
    "text": "PostgreSQL compatible addition that we went ga-ga with a few weeks ago and those are built on the aurora storage",
    "start": "312990",
    "end": "319650"
  },
  {
    "text": "system so instead of using amazon EBS they use a totally cloud native built",
    "start": "319650",
    "end": "325710"
  },
  {
    "text": "from the ground up storage system that has a huge amount of benefits for durability for scalability now I would",
    "start": "325710",
    "end": "332610"
  },
  {
    "text": "encourage you for this talk I'm going to focus I'm gonna talk about RDS broadly but I'm gonna focus on the EBS based",
    "start": "332610",
    "end": "338790"
  },
  {
    "text": "engines if you want to know all about aurora there are lots of great presentations deep dives into the aurora",
    "start": "338790",
    "end": "345930"
  },
  {
    "text": "storage system some of the things i'll talk about are apply to all of the engines but i really wanted to talk",
    "start": "345930",
    "end": "351330"
  },
  {
    "text": "about some of the traditional some of our our EBS based storage engines so the",
    "start": "351330",
    "end": "358470"
  },
  {
    "text": "first thing you do once you pick your engine and and you know many people pick their engine because they've got existing applications that they're",
    "start": "358470",
    "end": "364890"
  },
  {
    "text": "running today sometimes they pick their engine because they want to move from say a commercial engine over to an open",
    "start": "364890",
    "end": "370530"
  },
  {
    "text": "source engine they're tired of paying licensing fees and they want to move to open source sometimes they're building",
    "start": "370530",
    "end": "375930"
  },
  {
    "text": "new applications and they want to take advantage so you know multiple people you can take multiple engines but once",
    "start": "375930",
    "end": "383010"
  },
  {
    "text": "you pick your engine then you have to pick your instance type there are currently 27 different instance types we",
    "start": "383010",
    "end": "388320"
  },
  {
    "text": "we support a subset of ec2 instance types there's 27 of them it supported an",
    "start": "388320",
    "end": "393479"
  },
  {
    "text": "RDS but they really break down into three categories you've got your t2 family which is sort of affordable for",
    "start": "393479",
    "end": "400440"
  },
  {
    "text": "poor that's a burstable family your M family and then your our family now the T's are",
    "start": "400440",
    "end": "406470"
  },
  {
    "text": "a great engine to start with starting a great instance type to start with they are bursts of also they work on the",
    "start": "406470",
    "end": "412860"
  },
  {
    "text": "notion of CPU credits so you get a certain amount of CPU credits then you use them up you will see a performance",
    "start": "412860",
    "end": "419190"
  },
  {
    "text": "degradation as you're exceeding those credits as you scale up in the t2 family",
    "start": "419190",
    "end": "424289"
  },
  {
    "text": "you're going to see you're going to get higher performance as well as higher credit limits they do have moderate",
    "start": "424289",
    "end": "429509"
  },
  {
    "text": "networking performance and just a note here we recently introduced for all of the Amazon EBS base engines support for",
    "start": "429509",
    "end": "436759"
  },
  {
    "text": "t2 extra-large and t2 2x large so we can go up to 8 V CPUs with 32 gig of ram so",
    "start": "436759",
    "end": "445020"
  },
  {
    "text": "a good size t2 instance very affordable C twos are really good for your variable",
    "start": "445020",
    "end": "450930"
  },
  {
    "text": "workloads so where you're maybe not running you know continuously or they're good for sort of intermittent workloads",
    "start": "450930",
    "end": "457620"
  },
  {
    "text": "they're also part of the t2 micros is eligible for the free tier so if you're just trying it out you get a free t2 for",
    "start": "457620",
    "end": "464580"
  },
  {
    "text": "a year to try out and test the service as I mentioned you do want to monitor if",
    "start": "464580",
    "end": "470610"
  },
  {
    "text": "you're using the t2 you'll want to make sure you're looking at your cpu credit metrics in cloud watch so go ahead and",
    "start": "470610",
    "end": "475919"
  },
  {
    "text": "add those to your cloud watch and make sure you're not consuming all your CP credits when your workload is that of",
    "start": "475919",
    "end": "483590"
  },
  {
    "text": "you're running your workload fully so the next step up is the M family now it",
    "start": "483590",
    "end": "489599"
  },
  {
    "text": "has the same shape as the t2 all right has the same memory 2 CPU ratio as the t2 so a good balance of memory and CPU",
    "start": "489599",
    "end": "496680"
  },
  {
    "text": "goes from now to V CPUs and 8 gigs up to 64 and 256 so we introduced support for",
    "start": "496680",
    "end": "504240"
  },
  {
    "text": "the m416 X large to the top of the m4 family high-performance networking with",
    "start": "504240",
    "end": "511319"
  },
  {
    "text": "EBS optimization also in the m4 family and so these are really good for production workloads where you want good",
    "start": "511319",
    "end": "518099"
  },
  {
    "text": "CPU intensive so if you're say worrying a big WordPress site it's really good for the m-series will",
    "start": "518099",
    "end": "524370"
  },
  {
    "text": "do a really good job for you now the ARS are just like the m's except they have twice as much memory so they go up to a",
    "start": "524370",
    "end": "531899"
  },
  {
    "text": "half a terabyte of RAM up on the upper end the R we're 16x large once again we just introduced support across the board for",
    "start": "531899",
    "end": "538949"
  },
  {
    "text": "the r4 family for the EBS based engines and as well for Amazon Aurora and really",
    "start": "538949",
    "end": "546029"
  },
  {
    "text": "good for query intensive workloads so if you're running something with high connection counts query intensive things",
    "start": "546029",
    "end": "552300"
  },
  {
    "text": "are going to take up a lot of memory where you're gonna want to have a large working set the r4 family is really good",
    "start": "552300",
    "end": "558959"
  },
  {
    "text": "we do recommend that it's possible you use the latest generation so if you're running an m3 or you're running an r3",
    "start": "558959",
    "end": "565319"
  },
  {
    "text": "you might want to consider moving to m4 are for those are going to give you the best price performance you get generally",
    "start": "565319",
    "end": "572009"
  },
  {
    "text": "going to get better networking out of the latest generation and as ec2 introduces new instance types they",
    "start": "572009",
    "end": "578639"
  },
  {
    "text": "always do we will support those in our DSO will continue to move forward and",
    "start": "578639",
    "end": "583980"
  },
  {
    "text": "allow you to scale up to those larger instances ultimately the best way to do it is to to try it out to run your",
    "start": "583980",
    "end": "590879"
  },
  {
    "text": "production workload on your on your instance type of choice and then be able to see whether or not you are exceeding",
    "start": "590879",
    "end": "597209"
  },
  {
    "text": "the the resources whether you're have enough Io whether you have enough CPU to handle your workload so the next",
    "start": "597209",
    "end": "605370"
  },
  {
    "start": "604000",
    "end": "789000"
  },
  {
    "text": "question you have to choose with with RDS is which storage type should I choose we support and two primary storage types",
    "start": "605370",
    "end": "613470"
  },
  {
    "text": "- SSD based storage types so your general-purpose storage is your sort of affordable storage type similar to t2",
    "start": "613470",
    "end": "619319"
  },
  {
    "text": "and that has this notion of bursting but instead of bursting CPU your bursts in iOS so general important GP - and",
    "start": "619319",
    "end": "627899"
  },
  {
    "text": "provision - I ops I owe one storage both go up to 16 terabytes so we recently introduced we",
    "start": "627899",
    "end": "635639"
  },
  {
    "text": "upped the maximum from 6 terabytes up to 16 terabytes so you can have a pretty",
    "start": "635639",
    "end": "640680"
  },
  {
    "text": "large databases now with the Amazon ABS engines with GP to the AI ops is",
    "start": "640680",
    "end": "648180"
  },
  {
    "text": "determined by your volume size so as you scale the volume up up until about one",
    "start": "648180",
    "end": "653910"
  },
  {
    "text": "point three terabytes the AI ops that you're going to get is too dependent on the size of the volume so larger volume",
    "start": "653910",
    "end": "659370"
  },
  {
    "text": "more AI ops minimum of 100 and then when it's below one point three terabytes",
    "start": "659370",
    "end": "665490"
  },
  {
    "text": "it's actually going to burst up to 3000 IAP so you're gonna get that bursting that bursting will eventually",
    "start": "665490",
    "end": "672540"
  },
  {
    "text": "deplete your burst credits so once again you're gonna want to to monitor that but gp2 is a great choice we see some",
    "start": "672540",
    "end": "681240"
  },
  {
    "text": "folks not sure about which one they they want to use but we recommend give GP 2 a",
    "start": "681240",
    "end": "686580"
  },
  {
    "text": "try see if especially on an over provision volume you're gonna it'll probably be good enough for you",
    "start": "686580",
    "end": "693420"
  },
  {
    "text": "now the premium option is the provision die-offs also called io 1 once again in",
    "start": "693420",
    "end": "700230"
  },
  {
    "text": "SSD based storage very fast I didn't I forgot to mention and I'll talk a little",
    "start": "700230",
    "end": "706050"
  },
  {
    "text": "bit about it we now leverage Amazon EBS scalable volumes and when I talk about scaling that makes it really easy to",
    "start": "706050",
    "end": "712530"
  },
  {
    "text": "extend your volumes to grow your storage goes up to now a maximum of 40k 40,000 I",
    "start": "712530",
    "end": "720000"
  },
  {
    "text": "ops we up to the maximum recently from 30,000 to 40,000 so if you really have I",
    "start": "720000",
    "end": "725580"
  },
  {
    "text": "owe intensive applications you can now go up to 40,000 I ops sequel server because of it's running on Windows and",
    "start": "725580",
    "end": "731550"
  },
  {
    "text": "basically it's only using one EBS volume behind the scenes is limited to twenty Kay a twenty thousand die ups but still",
    "start": "731550",
    "end": "737370"
  },
  {
    "text": "a good choice there and what you're gonna get with IO one is consistency you're gonna get that consistent I ops",
    "start": "737370",
    "end": "744500"
  },
  {
    "text": "99.9% of the time you're gonna deliver that it'll deliver that to you so high performance high consistency the third",
    "start": "744500",
    "end": "752070"
  },
  {
    "text": "option is magnetic we still have magnetic storage mainly for legacy applications if you're running an RDS",
    "start": "752070",
    "end": "758070"
  },
  {
    "text": "instance for years and you want to keep it running then you can choose the magnetic option we don't really",
    "start": "758070",
    "end": "763560"
  },
  {
    "text": "recommend it for new databases in the end because with magnetic you're actually going to pay an additional",
    "start": "763560",
    "end": "768960"
  },
  {
    "text": "charge for each i/o for each million iOS that you perform so most magnetic users",
    "start": "768960",
    "end": "773970"
  },
  {
    "text": "actually see that they pay more than they would for gp2 and they're going to get a less consistent performance and",
    "start": "773970",
    "end": "779400"
  },
  {
    "text": "they're going to get less throughput than they would with gp2 so we really support that for legacy databases but",
    "start": "779400",
    "end": "785850"
  },
  {
    "text": "don't recommend that you use the magnetic storage so I mentioned a little bit about this choice between gp2 and",
    "start": "785850",
    "end": "792780"
  },
  {
    "start": "789000",
    "end": "894000"
  },
  {
    "text": "i/o one and how do you decide how do you pick one you know GP 2 is a great choice",
    "start": "792780",
    "end": "798720"
  },
  {
    "text": "as I said most people's applications you be surprised that most people occations really don't push that much i/o and it's",
    "start": "798720",
    "end": "806620"
  },
  {
    "text": "a great choice and especially if you scale up past one point one terabyte volumes because what happens is you can",
    "start": "806620",
    "end": "813250"
  },
  {
    "text": "see from the chart your baseline performance crosses over your burst performance so you don't have to worry",
    "start": "813250",
    "end": "818350"
  },
  {
    "text": "about burst performance so if you're running a 500 gigabyte GP 2 volume and you want more i ops just go ahead and",
    "start": "818350",
    "end": "824410"
  },
  {
    "text": "provision it up and you know it will cost just to its cost a few dollars more a month but you're gonna get much better",
    "start": "824410",
    "end": "829870"
  },
  {
    "text": "performance and it'll be less expensive than if you go to io 1 the burst balance metric is there in cloud watch to",
    "start": "829870",
    "end": "836500"
  },
  {
    "text": "determine your credits that are available and once again monitor your rewrite IATA performance to see if",
    "start": "836500",
    "end": "843220"
  },
  {
    "text": "you're running above that baseline and you need more eye ops the other question people get is why I'm not seeing 30,000",
    "start": "843220",
    "end": "849910"
  },
  {
    "text": "AI ops I went into i/o one I provision 30,000 why am I not seeing that you really need to think about your eye ops",
    "start": "849910",
    "end": "855850"
  },
  {
    "text": "rating as sort of the maximum i/o rate this is the the top end of the threshold your workload needs to push that much",
    "start": "855850",
    "end": "862480"
  },
  {
    "text": "data we find a lot of workloads don't actually push the i/o because of contention in the database because you",
    "start": "862480",
    "end": "869140"
  },
  {
    "text": "know the threads in the database are actually not doing all that i/o or you're actually using memory more",
    "start": "869140",
    "end": "874300"
  },
  {
    "text": "efficiently so you'll actually see your eye ops drop because you're using your buffers better using your memory better",
    "start": "874300",
    "end": "879730"
  },
  {
    "text": "so more eye ops is not necessarily better so you know once again looking",
    "start": "879730",
    "end": "885370"
  },
  {
    "text": "cloud watch look at your your your metrics and make sure that you're really using the the i/o that you're you're",
    "start": "885370",
    "end": "891880"
  },
  {
    "text": "paying for so scaling so once you've picked your initial configuration you",
    "start": "891880",
    "end": "899080"
  },
  {
    "start": "894000",
    "end": "1121000"
  },
  {
    "text": "picked your instance type how do you scale up and down so if you've got additional load you've got a your",
    "start": "899080",
    "end": "904779"
  },
  {
    "text": "application as say more load than you expected you've got more users you've got queries you want to scale it",
    "start": "904779",
    "end": "911650"
  },
  {
    "text": "up so you can easily scale compute and memory so you can scale anywhere up in",
    "start": "911650",
    "end": "916990"
  },
  {
    "text": "the instance family or you can scale to another instance family so you could go from an in series to an R series to",
    "start": "916990",
    "end": "923680"
  },
  {
    "text": "handle additional capacity you can also scale down so you can go to a lower",
    "start": "923680",
    "end": "929110"
  },
  {
    "text": "instance class if you don't need all that capacity you're overpaying now when we scale capacity we",
    "start": "929110",
    "end": "935370"
  },
  {
    "text": "the new host so we go to so ec2 we grab a new host machine that we're gonna run we install the database on it we get",
    "start": "935370",
    "end": "942270"
  },
  {
    "text": "everything ready and then we disconnect the original database and then we reconnect the new database to the same",
    "start": "942270",
    "end": "948570"
  },
  {
    "text": "storage and restart the database so there will be some that there will be some downtime when you scale storage",
    "start": "948570",
    "end": "954680"
  },
  {
    "text": "your applications will need to know that so you know they'll have to reconnect they'll get a new IP address because the",
    "start": "954680",
    "end": "961740"
  },
  {
    "text": "new hosts will have an IP address the endpoint will be the same so when you go to DNS and you get your IP address it'll",
    "start": "961740",
    "end": "968310"
  },
  {
    "text": "be the same endpoint but you will have to reconnect to that new instance so we recommend that you do a scaling",
    "start": "968310",
    "end": "973529"
  },
  {
    "text": "operation you know in a time when you can afford a little bit of disruption to your application now storage scaling as",
    "start": "973529",
    "end": "981060"
  },
  {
    "text": "I mentioned we now scale up to 16 terabytes of storage on the Amazon EBS",
    "start": "981060",
    "end": "987150"
  },
  {
    "text": "based engines on over Amazon Aurora stores scales automatically to 64",
    "start": "987150",
    "end": "993150"
  },
  {
    "text": "terabytes so if you're using Amazon Aurora that's has already been there but for a lot of folks who are using",
    "start": "993150",
    "end": "998510"
  },
  {
    "text": "Microsoft sequel server or Oracle or Postgres they wanted to go have larger",
    "start": "998510",
    "end": "1003950"
  },
  {
    "text": "volumes so we supported that the other thing that we did was we took advantage of the Amazon EBS elastic volumes and",
    "start": "1003950",
    "end": "1010520"
  },
  {
    "text": "this allows us to extend the volume very very rapidly so before when you went from say a 2 terabyte volume to a 4",
    "start": "1010520",
    "end": "1017120"
  },
  {
    "text": "terabyte volume it could take a long time it could take hours now your database was still alive you're still",
    "start": "1017120",
    "end": "1022910"
  },
  {
    "text": "active you can still use the database but what we were doing is we were copying over all that data to a new set",
    "start": "1022910",
    "end": "1028550"
  },
  {
    "text": "of volumes and then switching over the instance use that new set of volumes now when we scale we use the elastic volumes",
    "start": "1028550",
    "end": "1035270"
  },
  {
    "text": "and we simply extend the volume set for Amazon RDS and just a note here Amazon",
    "start": "1035270",
    "end": "1041959"
  },
  {
    "text": "RDS actually uses multiple volumes behind the scenes multiple EBS volumes we present that to to you as a single",
    "start": "1041959",
    "end": "1048500"
  },
  {
    "text": "data volume so you don't have to worry about volume geometry or any of this you just sort of say and I want 8 terabytes",
    "start": "1048500",
    "end": "1055220"
  },
  {
    "text": "so I want 10 terabytes and we'll go provision that for you so there's really no downtime to storage scaling once",
    "start": "1055220",
    "end": "1062900"
  },
  {
    "text": "you've sort of done that initial scale now if you've got older volumes the",
    "start": "1062900",
    "end": "1068210"
  },
  {
    "text": "first time of scale it will be a little bit slower we have to use the old technique to get it into",
    "start": "1068210",
    "end": "1073640"
  },
  {
    "text": "a new volume configuration so that that does take a little bit of time so if you're planning on scaling in the future",
    "start": "1073640",
    "end": "1080000"
  },
  {
    "text": "you might want to take that hit up front and then later on down the road you can use the elastic volumes and get",
    "start": "1080000",
    "end": "1086000"
  },
  {
    "text": "basically instantaneous scaling you're also limited in scaling to once every",
    "start": "1086000",
    "end": "1092360"
  },
  {
    "text": "six hours we do do some optimizations and so we basically keep you from",
    "start": "1092360",
    "end": "1098840"
  },
  {
    "text": "scaling once every six hours I could change in the future but right now that's the limitation so just be aware when you're scaling to make sure that",
    "start": "1098840",
    "end": "1106190"
  },
  {
    "text": "you're you've got the size that you want now if you're using provisioned I ops you can change the eye ops value on the",
    "start": "1106190",
    "end": "1113240"
  },
  {
    "text": "fly without any disruption to your storage so you can increase the vio that you're using easily the next thing",
    "start": "1113240",
    "end": "1123530"
  },
  {
    "start": "1121000",
    "end": "1187000"
  },
  {
    "text": "people ask about is how do I manage high availability how do I manage backups how to do all the sort of the day-to-day tasks of running a relational database",
    "start": "1123530",
    "end": "1131150"
  },
  {
    "text": "so I want to first talk about high availability as I mentioned this is a feature that's typically in the",
    "start": "1131150",
    "end": "1136190"
  },
  {
    "text": "enterprise version of a lot of our commercial databases and we built it right into Amazon RDS our multi AZ",
    "start": "1136190",
    "end": "1143210"
  },
  {
    "text": "configuration provides at fault tolerance we have an additional copy of",
    "start": "1143210",
    "end": "1148310"
  },
  {
    "text": "your database running in a second availability zone as you know most likely an availability zone is a",
    "start": "1148310",
    "end": "1154190"
  },
  {
    "text": "logically distinct data center in the same region so you get sort of that extra redundancy you get automatic",
    "start": "1154190",
    "end": "1161810"
  },
  {
    "text": "failover so if we detect anything's going on we can't reach the hosts in the primary if there's a networking problem",
    "start": "1161810",
    "end": "1167750"
  },
  {
    "text": "there's some sort of infrastructure problem then we will initiate the failover automatically all the data is",
    "start": "1167750",
    "end": "1174410"
  },
  {
    "text": "synchronously replicated so that you don't have to worry about any data loss during this event and it's super easy to",
    "start": "1174410",
    "end": "1181310"
  },
  {
    "text": "do you just turn on one button in the console and enable it",
    "start": "1181310",
    "end": "1187269"
  },
  {
    "text": "so it's not just enough to know that you have a high availability story but what actually happens during a high",
    "start": "1188740",
    "end": "1194320"
  },
  {
    "text": "availability story you should test this you know so it's great that you've set everything up but do your applications",
    "start": "1194320",
    "end": "1200289"
  },
  {
    "text": "survive some sort of networking event do they survive when a multi AC failover",
    "start": "1200289",
    "end": "1205330"
  },
  {
    "text": "happens so this diagram here shows you at a steady state you've got your primary an ec2 host that's the database",
    "start": "1205330",
    "end": "1212289"
  },
  {
    "text": "server that your database is running on you've got your set EBS volume sets and then you've got a standby in an",
    "start": "1212289",
    "end": "1218230"
  },
  {
    "text": "additional availability zone number two and they're replicating synchronously now that replication is at the block",
    "start": "1218230",
    "end": "1224470"
  },
  {
    "text": "level it's not a logical replication it's actually physically replicating the the storage blocks and there's a third",
    "start": "1224470",
    "end": "1232350"
  },
  {
    "text": "party here that's monitoring these two and making sure that it can see both of them and maintaining the quorum so that",
    "start": "1232350",
    "end": "1238090"
  },
  {
    "text": "they make sure that there's only one that thinks it's the primary and the only one that thinks it's the secondary so that they don't get effectively a",
    "start": "1238090",
    "end": "1244750"
  },
  {
    "text": "split brain syndrome so once that observer determines that it does need to failover it loses connectivity then it",
    "start": "1244750",
    "end": "1253510"
  },
  {
    "text": "initiates the failover the primary becomes the secondary becomes the primary we put a new entry into the DNS",
    "start": "1253510",
    "end": "1260919"
  },
  {
    "text": "table so that you can your application when it gets disconnected queries the DNS again and then connects to the new",
    "start": "1260919",
    "end": "1267700"
  },
  {
    "text": "primary you'll get a new IP address reconnect to the new primary and then you'll go typically this process takes",
    "start": "1267700",
    "end": "1273850"
  },
  {
    "text": "about a minute minute to two minutes to perform the failover there is will be",
    "start": "1273850",
    "end": "1279070"
  },
  {
    "text": "some time when the new instance starts up on the new database starts up on the secondary after that then we'll",
    "start": "1279070",
    "end": "1284770"
  },
  {
    "text": "reestablish a new secondary to make sure that we put you back into a highly available configuration will start to",
    "start": "1284770",
    "end": "1290230"
  },
  {
    "text": "repopulate the secondary even if that secondary is on either the existing host",
    "start": "1290230",
    "end": "1295539"
  },
  {
    "text": "or we have to go provision a new host now one of the things that if you're caching dns entries if your applications",
    "start": "1295539",
    "end": "1301270"
  },
  {
    "text": "hold on to IP addresses then make sure that they respect the time-to-live value you want a low time to live because you",
    "start": "1301270",
    "end": "1308260"
  },
  {
    "text": "know when you go back and and and get a new IP address for the new primary you don't want it to be stale so please test",
    "start": "1308260",
    "end": "1316179"
  },
  {
    "text": "this if you're you know your applications simulate a failover you can go into the RDS console and simply",
    "start": "1316179",
    "end": "1321760"
  },
  {
    "text": "select reboot with failover you just go to your instance a reboot with failover and then it'll initiate this and you can see how",
    "start": "1321760",
    "end": "1328330"
  },
  {
    "text": "your applications behave if you're using connection pooling make sure that the connection pools behave so the next",
    "start": "1328330",
    "end": "1337960"
  },
  {
    "start": "1336000",
    "end": "1502000"
  },
  {
    "text": "thing that you might want to take advantage of is read replicas and so people say why would I I wouldn't need to read replicas and read replicas the",
    "start": "1337960",
    "end": "1345580"
  },
  {
    "text": "primary goal is to relieve pressure on your source database so you've got a writing node you've got a main database",
    "start": "1345580",
    "end": "1351400"
  },
  {
    "text": "and you're finding that you've got extra traffic on there and instead of scaling up the the primary you might want to",
    "start": "1351400",
    "end": "1357130"
  },
  {
    "text": "create a read replicas to sort of offload some of that most applications are actually you know read heavy not",
    "start": "1357130",
    "end": "1363130"
  },
  {
    "text": "write heavy so you can create an additional read replica another reason you might want to do it is actually",
    "start": "1363130",
    "end": "1369039"
  },
  {
    "text": "using a global read replica using a cross region read replica so let's say you've got a customer database in US",
    "start": "1369039",
    "end": "1374440"
  },
  {
    "text": "East one that's being updated continuously and you need a copy of that in u.s. West two out in Oregon because",
    "start": "1374440",
    "end": "1381370"
  },
  {
    "text": "you're gonna have a read-only copy and you've got a front-end in in u.s. West two that you want to present to your",
    "start": "1381370",
    "end": "1387429"
  },
  {
    "text": "users and you don't want to pay for the latency to go you know between across the country to go get data out in the",
    "start": "1387429",
    "end": "1393610"
  },
  {
    "text": "database so you can set up a read replica in another region it'll it'll populate that populated asynchronously",
    "start": "1393610",
    "end": "1401320"
  },
  {
    "text": "so there's no lag time there's no impact on the source database another reason",
    "start": "1401320",
    "end": "1406630"
  },
  {
    "text": "you can use read replicas is actually promoting in case of a disaster recovery so let's say in that same scenario I'm",
    "start": "1406630",
    "end": "1412059"
  },
  {
    "text": "on US East one I create a read replica in another region and then something bad happens I lose a database I lose a",
    "start": "1412059",
    "end": "1418630"
  },
  {
    "text": "application the whole region disappears which hopefully we never ever will happen but so in that case you can you",
    "start": "1418630",
    "end": "1427720"
  },
  {
    "text": "can populate you can actually promote the secondary the the source database sorry you can promote the replica to be",
    "start": "1427720",
    "end": "1434530"
  },
  {
    "text": "the new source database to be a new master database and then use that for your applications and recover quickly",
    "start": "1434530",
    "end": "1442110"
  },
  {
    "text": "the last scenario is kind of nice is you can upgrade the Reeb replica to a new",
    "start": "1442110",
    "end": "1447730"
  },
  {
    "text": "version of the database so let's say you're testing out you want to test out the latest version of of my skew or the latest version of",
    "start": "1447730",
    "end": "1454450"
  },
  {
    "text": "Postgres but you don't want to impact your working database so what you can do is you can create a read replica you can",
    "start": "1454450",
    "end": "1460270"
  },
  {
    "text": "upgrade that to the new version you can actually disconnect it if you want and run your tests on this new version so",
    "start": "1460270",
    "end": "1465940"
  },
  {
    "text": "you get a full copy that you can run against and then when you're ready you can actually either promote that one or",
    "start": "1465940",
    "end": "1471340"
  },
  {
    "text": "you can upgrade it the source database so lots of scenarios lots of useful",
    "start": "1471340",
    "end": "1477250"
  },
  {
    "text": "things around read replicas supported for MySQL Murray TV and PostgreSQL",
    "start": "1477250",
    "end": "1483450"
  },
  {
    "text": "Amazon Roar also has a notion of read replicas it's a little bit different in that it works on a stayer shared storage",
    "start": "1483450",
    "end": "1490450"
  },
  {
    "text": "architecture so instead of getting a second copy of the database you just have additional reader nodes on the the",
    "start": "1490450",
    "end": "1497020"
  },
  {
    "text": "storage architecture so this is for all the the EBS based for the EBS based engines so I've talked about multi a-z I",
    "start": "1497020",
    "end": "1505150"
  },
  {
    "start": "1502000",
    "end": "1665000"
  },
  {
    "text": "talked about read replicas and you know they both get copies of the data so why would you use one versus the other so put together this just to sort of",
    "start": "1505150",
    "end": "1512049"
  },
  {
    "text": "help you decide you know which is right for your scenario multi a-z is synchronous so every block is written to",
    "start": "1512049",
    "end": "1518260"
  },
  {
    "text": "both copies both sides of the of the database read replicas are asynchronous so there is potentially a replication",
    "start": "1518260",
    "end": "1525220"
  },
  {
    "text": "lag depending on the distance between your source and your target so you need to accommodate for that you know that",
    "start": "1525220",
    "end": "1531100"
  },
  {
    "text": "that lag between the source and the target in a multi AZ configuration only the",
    "start": "1531100",
    "end": "1537280"
  },
  {
    "text": "primary instance is available so even though you have a secondary there that's waiting in case of a failover only the",
    "start": "1537280",
    "end": "1543400"
  },
  {
    "text": "primary instance is actually active and then we switch over and start the database once it's on the secondary in a",
    "start": "1543400",
    "end": "1550720"
  },
  {
    "text": "read replica all of the replicas are active so you can use them for read scaling there are full databases running",
    "start": "1550720",
    "end": "1556110"
  },
  {
    "text": "and and you can use them for read scaling for multi a-z we actually",
    "start": "1556110",
    "end": "1561250"
  },
  {
    "text": "support the ability to take your backups I'll talk about backups in a minute from the secondary so reducing any sort of",
    "start": "1561250",
    "end": "1567160"
  },
  {
    "text": "impact on the primary read replicas you don't really need a backup because they're read-only copies you can",
    "start": "1567160",
    "end": "1572710"
  },
  {
    "text": "recreate them at any time multi agency is oles to availability zones in a single region so exactly to",
    "start": "1572710",
    "end": "1581220"
  },
  {
    "text": "read replicas could be either within the same AZ as the source database it could be cross",
    "start": "1581220",
    "end": "1587470"
  },
  {
    "text": "savesies or a cross region so you can you get that option when you create your read replicas versions so when I upgrade",
    "start": "1587470",
    "end": "1594700"
  },
  {
    "text": "a multi AZ configuration the version of the database upgrades at the same time so both sides because it's a synchronous",
    "start": "1594700",
    "end": "1601360"
  },
  {
    "text": "copy or upgraded simultaneously that does mean that when you have a multi AZ configuration that we do have some some",
    "start": "1601360",
    "end": "1609850"
  },
  {
    "text": "downtime when we upgrade the database and we go to a new version of the database we will experience a downtime",
    "start": "1609850",
    "end": "1615280"
  },
  {
    "text": "because we have to restart the database reapply any of the changes that have occurred read replicas they're",
    "start": "1615280",
    "end": "1620560"
  },
  {
    "text": "independent database engines so you can actually upgrade read replicas independently from the source database",
    "start": "1620560",
    "end": "1627850"
  },
  {
    "text": "and as I mentioned that's a really good strategy if you're testing out a new database version with your application",
    "start": "1627850",
    "end": "1634090"
  },
  {
    "text": "and finally with multi a-z you get that automatic failover when we detect a",
    "start": "1634090",
    "end": "1639370"
  },
  {
    "text": "problem we automatically failover although you can promote a read replica to be a standalone database that's not",
    "start": "1639370",
    "end": "1645310"
  },
  {
    "text": "automatic that you have to manually go in you can write a script you can go through the console and you can promote",
    "start": "1645310",
    "end": "1650770"
  },
  {
    "text": "that this part of your disaster recovery if you want to promote that so in reality we see lots of customers who use",
    "start": "1650770",
    "end": "1657340"
  },
  {
    "text": "both who use multi AC for their production database and then create a set of read replicas from that multi a-z",
    "start": "1657340",
    "end": "1663310"
  },
  {
    "text": "configuration so backups are another thing that if you're running your own",
    "start": "1663310",
    "end": "1669190"
  },
  {
    "start": "1665000",
    "end": "1806000"
  },
  {
    "text": "database you have to spend a lot of time managing your backups and managing the backup metadata and making sure that",
    "start": "1669190",
    "end": "1675310"
  },
  {
    "text": "your backups are good and with Amazon RDS its built-in we have two types of backups in RDS we have our automated",
    "start": "1675310",
    "end": "1681220"
  },
  {
    "text": "backups these are a window of backups in which you can do point-in-time restores and then we have manual snapshots where",
    "start": "1681220",
    "end": "1687700"
  },
  {
    "text": "you can go in either using the CLI or the API you can take a full snapshot of the database and store that for later",
    "start": "1687700",
    "end": "1694030"
  },
  {
    "text": "now RDS uses EBS I'll let Emma's on EBS snapshots and those snapshots are stored",
    "start": "1694030",
    "end": "1700390"
  },
  {
    "text": "off in s3 now they're not stored in your s3 buckets they're stored in the the RDS",
    "start": "1700390",
    "end": "1705820"
  },
  {
    "text": "accounts buckets and you manage them through RDS API so you don't don't go to s3 and expect the the snapshots to be",
    "start": "1705820",
    "end": "1712150"
  },
  {
    "text": "there we're managing on your behalf and you access them through the RDS API now in addition to support point in time",
    "start": "1712150",
    "end": "1718650"
  },
  {
    "text": "restores the point-in-time restores the ability to effectively rewind the database to anytime that you want within",
    "start": "1718650",
    "end": "1724800"
  },
  {
    "text": "a period so let's say something bad happened yesterday at 4:00 you can say I want to rewind the database to yesterday",
    "start": "1724800",
    "end": "1730260"
  },
  {
    "text": "at 3:55 and you can do that point time restore in order to support that we store the transaction logs so we take a",
    "start": "1730260",
    "end": "1736770"
  },
  {
    "text": "full backup in the database every night and then we store the transaction logs every five minutes and we ship those off",
    "start": "1736770",
    "end": "1742620"
  },
  {
    "text": "to s3 and then when you restore the database we're actually going to replay those transaction logs and get your",
    "start": "1742620",
    "end": "1748500"
  },
  {
    "text": "database back to the point where you want it to now the nice thing about backups because they're done by EBS is",
    "start": "1748500",
    "end": "1753870"
  },
  {
    "text": "there's no performance penalty for them at all there's not any sort of load on",
    "start": "1753870",
    "end": "1758970"
  },
  {
    "text": "the database server that you'll have so you can take as many snapshots as you",
    "start": "1758970",
    "end": "1764370"
  },
  {
    "text": "want you don't have to worry about them impacting your server as I mentioned before you can see here in the in the",
    "start": "1764370",
    "end": "1771060"
  },
  {
    "text": "diagram we've got our availability zone one this is a multi AZ configuration and we're actually taking the snapshots off",
    "start": "1771060",
    "end": "1777240"
  },
  {
    "text": "of the volumes attached to the host in availability zone too often the secondary host transaction logs were",
    "start": "1777240",
    "end": "1783750"
  },
  {
    "text": "then being pushed each five minutes into s3 then you can then also take a cob",
    "start": "1783750",
    "end": "1791520"
  },
  {
    "text": "shot and you can copied across regions so let's say you want to have you want to store that snapshot in another region",
    "start": "1791520",
    "end": "1798120"
  },
  {
    "text": "for disaster recovery you can restore it later or you just want to save the database at a certain point in time",
    "start": "1798120",
    "end": "1804060"
  },
  {
    "text": "we'll keep that around for you so wouldn't you use these different techniques so an automated backup you",
    "start": "1804060",
    "end": "1810960"
  },
  {
    "start": "1806000",
    "end": "1892000"
  },
  {
    "text": "specify your retention window it's super easy it defaults to seven days you can get up to 35 days and we'll let you do",
    "start": "1810960",
    "end": "1819240"
  },
  {
    "text": "point-in-time restores to anytime in that window manual snapshot so you go through the the AWS console you select I",
    "start": "1819240",
    "end": "1826320"
  },
  {
    "text": "want to take a snapshot now you give it a name and we'll keep that keep that forever so automated backups will",
    "start": "1826320",
    "end": "1832590"
  },
  {
    "text": "eventually leave the backup windows so if you have a seven-day window anything after eight days will be deleted and and",
    "start": "1832590",
    "end": "1838260"
  },
  {
    "text": "move out manual snapshots when you take them they're there forever until you delete them so you can keep them around",
    "start": "1838260",
    "end": "1844830"
  },
  {
    "text": "you can keep them for four years and restore them if you need to automated backup support that notion of",
    "start": "1844830",
    "end": "1851570"
  },
  {
    "text": "point and time recovery so a specific time during the day and then manual snapshots restores to that exact",
    "start": "1851570",
    "end": "1856850"
  },
  {
    "text": "snapshot when you took that full backup so automate backups I mentioned good for disaster recovery too getting back to a",
    "start": "1856850",
    "end": "1863120"
  },
  {
    "text": "good state of the database while manual snapshots good for things like before you make a big change if you're using a",
    "start": "1863120",
    "end": "1869570"
  },
  {
    "text": "production environment and you want to pull that into test so you could take a snapshot of your production environment pull that into your test environment and",
    "start": "1869570",
    "end": "1876649"
  },
  {
    "text": "then run your tests against basically a copy of your production environment any you know environmental changes you're",
    "start": "1876649",
    "end": "1883130"
  },
  {
    "text": "making or maybe a final copy before you delete it so I will save one off in case you you were didn't want to delete that",
    "start": "1883130",
    "end": "1892419"
  },
  {
    "start": "1892000",
    "end": "2007000"
  },
  {
    "text": "so restoring a database so how do you restore the backup as I mentioned that",
    "start": "1893080",
    "end": "1898610"
  },
  {
    "text": "is the two ways you either do the point-in-time restores you can see in the top right you specify the restore time or you so go to the snapshot you",
    "start": "1898610",
    "end": "1906500"
  },
  {
    "text": "say I want to pull this snapshot back now restoring creates an entirely new database since it doesn't affect the",
    "start": "1906500",
    "end": "1911720"
  },
  {
    "text": "running database when I take a backup of my database and then I restore that I get a new new database instance a new",
    "start": "1911720",
    "end": "1917809"
  },
  {
    "text": "set of storage it doesn't change the one that's running so even if it's a point in time restore that one's still there",
    "start": "1917809",
    "end": "1923630"
  },
  {
    "text": "so you'll get that new instance configuration you can specify the instance I of the storage you will get",
    "start": "1923630",
    "end": "1930500"
  },
  {
    "text": "the default parameter security and option group so you might need to go set those after you do the restore now some",
    "start": "1930500",
    "end": "1936500"
  },
  {
    "text": "people say why does it take so long it can take for large databases it can take a significant amount of time for them to",
    "start": "1936500",
    "end": "1942440"
  },
  {
    "text": "be fully restored and the reason it does that is because the new volumes are hydrated from s3 so remember we're",
    "start": "1942440",
    "end": "1949159"
  },
  {
    "text": "storing the backups in s3 and what happens is is that we make the volume initially available to the database so",
    "start": "1949159",
    "end": "1955039"
  },
  {
    "text": "we we get the volume ready but then the blocks are pulled in as they're needed so berths are pulled in from s3 and so",
    "start": "1955039",
    "end": "1960799"
  },
  {
    "text": "when you're initially restoring a database and starting it up it can be slow until some of those blocks come in",
    "start": "1960799",
    "end": "1967370"
  },
  {
    "text": "now we're working with the amazon EBS team in order to pre hydrate to warm",
    "start": "1967370",
    "end": "1972679"
  },
  {
    "text": "that quicker so that those blocks come in faster but just be aware that you know when you we restore a large",
    "start": "1972679",
    "end": "1978200"
  },
  {
    "text": "database and you want to get that up to speed it will take take a while until your basically pulled in all the blocks ways",
    "start": "1978200",
    "end": "1985070"
  },
  {
    "text": "to mitigate that is to make sure that you've got an instance class with high i/o capacity so if you're restoring",
    "start": "1985070",
    "end": "1990530"
  },
  {
    "text": "something you can use a larger instance than you might in production at least for that initial restore and you could",
    "start": "1990530",
    "end": "1995990"
  },
  {
    "text": "scale it back down and then you want to maximize the i/o so maybe you want to use provision die-offs or other ways to",
    "start": "1995990",
    "end": "2002140"
  },
  {
    "text": "really maximize that Oh IO for the restore so we also get a lot of",
    "start": "2002140",
    "end": "2010240"
  },
  {
    "start": "2007000",
    "end": "2053000"
  },
  {
    "text": "questions about security so how do I secure my database how do I make sure that my data is secure in the database",
    "start": "2010240",
    "end": "2016980"
  },
  {
    "text": "we know that databases are the heart of your company and you want to make sure that it's secure we've designed Amazon",
    "start": "2016980",
    "end": "2023169"
  },
  {
    "text": "RDS to default into to be secure by default to be out of the box just as",
    "start": "2023169",
    "end": "2028809"
  },
  {
    "text": "secure as you would have on your premises or more secure and that includes the using Amazon V PC for",
    "start": "2028809",
    "end": "2035380"
  },
  {
    "text": "network isolation using I am for access control encryption through a DBS key",
    "start": "2035380",
    "end": "2041679"
  },
  {
    "text": "management service as well as if you're using the commercial engines using oracle microsoft transit parent data",
    "start": "2041679",
    "end": "2048010"
  },
  {
    "text": "encryption and then using ssl so these are some of the techniques to make sure that your data is secure so what does V",
    "start": "2048010",
    "end": "2054760"
  },
  {
    "start": "2053000",
    "end": "2259000"
  },
  {
    "text": "PC do you're probably using V PC today if you have a new AWS account but it",
    "start": "2054760",
    "end": "2059800"
  },
  {
    "text": "really isolates your database into a private subnet to make sure it's not accessible via the internet so while",
    "start": "2059800",
    "end": "2065888"
  },
  {
    "text": "you're in development environment you might want to open up ports to allow direct management of your AWS of your",
    "start": "2065889",
    "end": "2072128"
  },
  {
    "text": "RDS database but when you're actually in production you probably want to turn off publicly accessible and just make sure",
    "start": "2072129",
    "end": "2077590"
  },
  {
    "text": "that that database is only accessible by other instances in the same V PC all",
    "start": "2077590",
    "end": "2082658"
  },
  {
    "text": "right so other ec2 instances that can access that so you know you'll want to",
    "start": "2082659",
    "end": "2087760"
  },
  {
    "text": "make sure that you're you're managing your who has access to your database but really that that IP level firewall",
    "start": "2087760",
    "end": "2094300"
  },
  {
    "text": "opening up whatever ports you want to access your database if you're working",
    "start": "2094300",
    "end": "2099460"
  },
  {
    "text": "with instances in ec2 classic so if you've got an older AWS account you can use things like classically to",
    "start": "2099460",
    "end": "2105670"
  },
  {
    "text": "communicate back and forth and VPC also provides things like routing rules Direct Connect if you want to connect to",
    "start": "2105670",
    "end": "2112500"
  },
  {
    "text": "the database to something on-premises so if your exam if you've got a database you want to",
    "start": "2112500",
    "end": "2118150"
  },
  {
    "text": "replicate from on-premises into the into Amazon RDS you can do that through Direct Connect and tie this to your V PC",
    "start": "2118150",
    "end": "2126730"
  },
  {
    "text": "together peering allows you to share between V pcs and gateways so all",
    "start": "2126730",
    "end": "2132580"
  },
  {
    "text": "features built into Amazon V PC so",
    "start": "2132580",
    "end": "2137950"
  },
  {
    "text": "granting access to their database so we use identity access management to determine who can do what - your RDS",
    "start": "2137950",
    "end": "2144940"
  },
  {
    "text": "resources we encourage you not to use your root credentials to manage the database you you know you want to keep",
    "start": "2144940",
    "end": "2150730"
  },
  {
    "text": "those root credentials safe assign roles to people or what they can do there's a",
    "start": "2150730",
    "end": "2156250"
  },
  {
    "text": "you know set up templates so that you make sure that only people can create databases delete databases you want to",
    "start": "2156250",
    "end": "2161380"
  },
  {
    "text": "set those rules up including your your sis admins you can also use the",
    "start": "2161380",
    "end": "2167410"
  },
  {
    "text": "multi-factor authentication to provide an extra level protection so if you ever have a an account compromised and you",
    "start": "2167410",
    "end": "2173860"
  },
  {
    "text": "you know you don't want a roué actor deleting your RDS databases you can use multi-factor authentication requires a",
    "start": "2173860",
    "end": "2179950"
  },
  {
    "text": "token as well as a password in order to perform actions and you can say okay you can't change the configuration you can't",
    "start": "2179950",
    "end": "2185680"
  },
  {
    "text": "delete sort of dangerous actions without multi-factor authentication so that's",
    "start": "2185680",
    "end": "2190840"
  },
  {
    "text": "managing the service itself that's creating databases instances deleting them setting security setting properties",
    "start": "2190840",
    "end": "2199000"
  },
  {
    "text": "options now once you're you've got your database up and running then you you",
    "start": "2199000",
    "end": "2204460"
  },
  {
    "text": "access it you grant access to tables views stored procedures within the database just like you would today with",
    "start": "2204460",
    "end": "2211360"
  },
  {
    "text": "an on-premises database so using tools like sequel Enterprise Manager or my sequel workbench any of those apps work",
    "start": "2211360",
    "end": "2218560"
  },
  {
    "text": "today to access provide access within your RDS",
    "start": "2218560",
    "end": "2223810"
  },
  {
    "text": "database that's just a normal grants that you have now we do have a couple of ways to provide integrated security so",
    "start": "2223810",
    "end": "2230170"
  },
  {
    "text": "we do support for RDS for sequel server Active Directory Integration so you can",
    "start": "2230170",
    "end": "2235330"
  },
  {
    "text": "keep your user directory in AD and then authenticate into your RDS database we",
    "start": "2235330",
    "end": "2242170"
  },
  {
    "text": "also support I am and vindication where you can actually use I am credentials two for RDS my sequel and RDS",
    "start": "2242170",
    "end": "2249790"
  },
  {
    "text": "and an Amazon Aurora so you can actually use I am users to determine who can have",
    "start": "2249790",
    "end": "2255250"
  },
  {
    "text": "access to your your database so there's some options there around authentication encryption is also a feature that you'll",
    "start": "2255250",
    "end": "2262540"
  },
  {
    "start": "2259000",
    "end": "2353000"
  },
  {
    "text": "want to turn on by default I think it's it's often the console but I would encourage you to turn on because it's",
    "start": "2262540",
    "end": "2267790"
  },
  {
    "text": "basically free it doesn't have any performance implications we encrypt at",
    "start": "2267790",
    "end": "2272950"
  },
  {
    "text": "the volume level so encryption at rest the data is fully encrypted at the volume level there isn't any performance",
    "start": "2272950",
    "end": "2279700"
  },
  {
    "text": "penalty for encrypting the data and we provide centralized key access through AWS kms so any access to the encryption",
    "start": "2279700",
    "end": "2287620"
  },
  {
    "text": "keys is logged it's audited we actually use a two-tier encryption so you can see",
    "start": "2287620",
    "end": "2292660"
  },
  {
    "text": "here we have your master keys that are created or managed by you and then each individual instance will have its own",
    "start": "2292660",
    "end": "2298900"
  },
  {
    "text": "data key and the master key is used to encrypt the data key and the data key is used to encrypt the data and this allows",
    "start": "2298900",
    "end": "2305920"
  },
  {
    "text": "you to do key rotation and it also helps from compromising keys right because if",
    "start": "2305920",
    "end": "2311470"
  },
  {
    "text": "you you can't you have to have access to the master key to decrypt the data key now if they once you encrypt a database",
    "start": "2311470",
    "end": "2319690"
  },
  {
    "text": "you can't unencrypted it so it's a one-way one-way door you can take an existing non encrypted database and if",
    "start": "2319690",
    "end": "2326890"
  },
  {
    "text": "you take a backup of that so you take a full snapshot you encrypt the snapshot and then you restore that you can get in",
    "start": "2326890",
    "end": "2332650"
  },
  {
    "text": "an encrypted database but that does take a while so I would encourage you if you're going to use an encrypted database go ahead",
    "start": "2332650",
    "end": "2337870"
  },
  {
    "text": "and do that from the start if the source database is encrypted in a read replica scenario then the read",
    "start": "2337870",
    "end": "2345160"
  },
  {
    "text": "replica is also encrypted so they're both encrypted that includes both within the region and cross region",
    "start": "2345160",
    "end": "2352890"
  },
  {
    "start": "2353000",
    "end": "2424000"
  },
  {
    "text": "so monitoring how do you monitor the health of your instance so people are used to using third-party tools to",
    "start": "2354559",
    "end": "2361529"
  },
  {
    "text": "monitor we have a lot of things that are built into Amazon RDS for monitoring so your basic CloudWatch metrics there's",
    "start": "2361529",
    "end": "2368400"
  },
  {
    "text": "about 15 metrics that you get just out of the box you go to the console you go to cloud watch you'll see those metrics",
    "start": "2368400",
    "end": "2373589"
  },
  {
    "text": "there you can set alarms on those so you can make sure that you know if you see a threshold you know a certain IO",
    "start": "2373589",
    "end": "2380339"
  },
  {
    "text": "threshold or a connection count threshold you can set an alarm on that and then you can get notification when",
    "start": "2380339",
    "end": "2386759"
  },
  {
    "text": "that alarm happens we have something called enhanced monitoring for Amazon RDS and I encourage you to turn that on",
    "start": "2386759",
    "end": "2393509"
  },
  {
    "text": "and make sure it's on it gives you additional about 50 additional metrics that are not included in the basic cloud",
    "start": "2393509",
    "end": "2400079"
  },
  {
    "text": "watch metrics and it doesn't really doesn't really cost anything it does use",
    "start": "2400079",
    "end": "2405539"
  },
  {
    "text": "cloud watch logs to to egress that data but it really unless you're monitoring a",
    "start": "2405539",
    "end": "2410939"
  },
  {
    "text": "large database at a high frequency it shouldn't cost you anything extra you",
    "start": "2410939",
    "end": "2416789"
  },
  {
    "text": "can actually go down to one-second intervals to with enhanced monitoring we also have an integration with a lot of",
    "start": "2416789",
    "end": "2422999"
  },
  {
    "text": "third-party tools now that's a cloud",
    "start": "2422999",
    "end": "2428039"
  },
  {
    "start": "2424000",
    "end": "2506000"
  },
  {
    "text": "watch and enhanced monitoring is about monitoring the infrastructure monitoring the the basic operating system we have a",
    "start": "2428039",
    "end": "2434369"
  },
  {
    "text": "new feature called Amazon RDS performance insights with Amazon aurora",
    "start": "2434369",
    "end": "2439529"
  },
  {
    "text": "for Postgres we introduced this new feature and what this does is allows you to look inside the database and see",
    "start": "2439529",
    "end": "2445439"
  },
  {
    "text": "what's going on so this is similar to tools that you may have used for commercial databases where you can see what are the queries that are actually",
    "start": "2445439",
    "end": "2451769"
  },
  {
    "text": "taking up the time why is my database slow oh there's this query and there's contention it's locked on another set of",
    "start": "2451769",
    "end": "2457949"
  },
  {
    "text": "queries that are running so this was introduced we introduced a new metric called active average active sessions so",
    "start": "2457949",
    "end": "2465390"
  },
  {
    "text": "you can see here it's broken down by the different sequel statements that are running inside the database you can see",
    "start": "2465390",
    "end": "2470729"
  },
  {
    "text": "the top bottle next top sequel statements that are causing bottlenecks super easy to drill down will have an",
    "start": "2470729",
    "end": "2476579"
  },
  {
    "text": "adjustable time frame so you can see you know it's my database slow you know last week or yesterday so you'll be able to",
    "start": "2476579",
    "end": "2482969"
  },
  {
    "text": "take a look at that it's available now for Amazon or or Postgres and it's come to all the rest of the Amazon EBS engine",
    "start": "2482969",
    "end": "2491279"
  },
  {
    "text": "so my seat bull maria DB it'll come for sequel server oracle so we'll have this functionality and really we want to make",
    "start": "2491279",
    "end": "2498329"
  },
  {
    "text": "it so that not only sort of keeping your environment running is easy but also managing the performance of your",
    "start": "2498329",
    "end": "2504119"
  },
  {
    "text": "database is easy so one final tip on",
    "start": "2504119",
    "end": "2509880"
  },
  {
    "start": "2506000",
    "end": "2555000"
  },
  {
    "text": "monitoring how do you know when something happens on your RDS instance we use amazon SNS to notify you when",
    "start": "2509880",
    "end": "2516299"
  },
  {
    "text": "something happens so for example a backup fails or storage full notification so you can create a",
    "start": "2516299",
    "end": "2521849"
  },
  {
    "text": "subscription for events right through the console and then it notifies an SNS",
    "start": "2521849",
    "end": "2527130"
  },
  {
    "text": "topic and then you can get an email you can get a text message it can call an HTTP HTTP in point assume when something",
    "start": "2527130",
    "end": "2534089"
  },
  {
    "text": "happens in your environment you want to be able to be alerted things like you know what happened to an instance if",
    "start": "2534089",
    "end": "2539970"
  },
  {
    "text": "someone changed a configuration if a backup was deleted if an instance was deleted so all of these will generate",
    "start": "2539970",
    "end": "2546269"
  },
  {
    "text": "events and you can specify which events that you're interested in through the console so I should take really",
    "start": "2546269",
    "end": "2552299"
  },
  {
    "text": "advantage of the the venting mechanism now one popular question I get is about",
    "start": "2552299",
    "end": "2559769"
  },
  {
    "start": "2555000",
    "end": "2570000"
  },
  {
    "text": "maintenance and about billing surprisingly it's not about the technology sometimes it's about you know",
    "start": "2559769",
    "end": "2564779"
  },
  {
    "text": "how am I going to be billed and how do I keep my bill low and then how are you gonna maintain my database so we're",
    "start": "2564779",
    "end": "2572099"
  },
  {
    "start": "2570000",
    "end": "2730000"
  },
  {
    "text": "maintenance perspective when you create your instance you're gonna specify a maintenance window that's a once a week",
    "start": "2572099",
    "end": "2578150"
  },
  {
    "text": "15-minute maintenance window and if we have any maintenance operations that",
    "start": "2578150",
    "end": "2583289"
  },
  {
    "text": "causes downtime now that doesn't happen very often we try to as much as possible don't cause any downtime but it will",
    "start": "2583289",
    "end": "2589529"
  },
  {
    "text": "happen a couple of times a year but if it happens it will happen in that maintenance window so so don't think",
    "start": "2589529",
    "end": "2595559"
  },
  {
    "text": "that just because it's Wednesday night it at midnight that you're gonna get a maintenance event you're gonna have disruption but if we do have a",
    "start": "2595559",
    "end": "2602250"
  },
  {
    "text": "maintenance event it will go in that window most of the operating system level maintenance that we do most of the",
    "start": "2602250",
    "end": "2607319"
  },
  {
    "text": "patching of the OS or patching of the RDS control software on the box is done without any database restart your",
    "start": "2607319",
    "end": "2613799"
  },
  {
    "text": "database will keep running serving connections and will patch behind the scenes now if you're upgrading the",
    "start": "2613799",
    "end": "2620369"
  },
  {
    "text": "database to a new version you're going from a new version of post Crestor new version of MySQL that does",
    "start": "2620369",
    "end": "2626470"
  },
  {
    "text": "require some downtime because we have to apply the new engine binaries through the and then apply any upgrade scripts",
    "start": "2626470",
    "end": "2633370"
  },
  {
    "text": "to that now minor versions are either automatically scheduled so when you create your instance you can say I want",
    "start": "2633370",
    "end": "2639340"
  },
  {
    "text": "to opt into minor version upgrades so let's say you want to go from my sequel",
    "start": "2639340",
    "end": "2644410"
  },
  {
    "text": "5 7 10 to 5 719 automatically so when we",
    "start": "2644410",
    "end": "2649600"
  },
  {
    "text": "set a new minor version as preferred then we'll upgrade within a the next",
    "start": "2649600",
    "end": "2655270"
  },
  {
    "text": "maintenance window major version upgrades are always manually applied so those are up to you because they",
    "start": "2655270",
    "end": "2660490"
  },
  {
    "text": "typically have changes to the engine that may cause application compatibility issues so you'll want to see those we do",
    "start": "2660490",
    "end": "2668440"
  },
  {
    "text": "what time to time also deprecated versions so for example if a version goes out of support or it contains bugs",
    "start": "2668440",
    "end": "2677920"
  },
  {
    "text": "that you know are causing problems in the fleet that we've seen we do deprecated versions will always give you",
    "start": "2677920",
    "end": "2684010"
  },
  {
    "text": "a notice when we deprecated a version when a version is going away for minor versions we'll give you a three-month notice and then for major versions we'll",
    "start": "2684010",
    "end": "2690820"
  },
  {
    "text": "give you a six-month notice those notices appear on you'll get an email but we all get a lot of emails so",
    "start": "2690820",
    "end": "2697480"
  },
  {
    "text": "they'll appear on your personal health dashboard as well so there's a little icon up at the top of your console that",
    "start": "2697480",
    "end": "2703780"
  },
  {
    "text": "has a list of maintenance events and so you'll see this database version is being deprecated and it'll be an upgrade",
    "start": "2703780",
    "end": "2710530"
  },
  {
    "text": "will be applied automatically within your maintenance window but you will get time to plan for that I do encourage you",
    "start": "2710530",
    "end": "2716380"
  },
  {
    "text": "that if you get a maintenance notification from us you know go ahead and plan that and do it don't wait till",
    "start": "2716380",
    "end": "2721450"
  },
  {
    "text": "the last minute we do hear from people who get to the very end and then you know but please please pay attention to",
    "start": "2721450",
    "end": "2729790"
  },
  {
    "text": "those so a billing perspective you know",
    "start": "2729790",
    "end": "2735220"
  },
  {
    "start": "2730000",
    "end": "2861000"
  },
  {
    "text": "bills are a little bit complicated but they break down into three key piece your database instance hours all right",
    "start": "2735220",
    "end": "2742000"
  },
  {
    "text": "so this is going to be depending on what region you're in what your instance type is what the engine you picked and then",
    "start": "2742000",
    "end": "2748180"
  },
  {
    "text": "if you're using a license included Oracle or sequel server that'll be included in that instance",
    "start": "2748180",
    "end": "2753700"
  },
  {
    "text": "so that's you're building that in instance hours your storage your provision storage for Amazon EBS or your",
    "start": "2753700",
    "end": "2761290"
  },
  {
    "text": "consume storage for Amazon Aurora you'll get a storage bill that's billed in gigabyte months now along with the",
    "start": "2761290",
    "end": "2766660"
  },
  {
    "text": "storage you may have it some additional charges for if you're using provisioned I ops you'll be charged for the amount",
    "start": "2766660",
    "end": "2772570"
  },
  {
    "text": "of I ops that you're actually provisioned and that's not a variable amount so if you say you want 10,000 I ops you're going to be billed for that",
    "start": "2772570",
    "end": "2778990"
  },
  {
    "text": "each each period whether you're actually consuming i--once or not now for i/o for",
    "start": "2778990",
    "end": "2785290"
  },
  {
    "text": "Aurora and for magnetic volumes we also charge you in millions of i/o requests there's additional charge and the final",
    "start": "2785290",
    "end": "2792640"
  },
  {
    "text": "component is your backup storage so it's the aggregate size of the backup that you've got that we're storing off an s3",
    "start": "2792640",
    "end": "2798450"
  },
  {
    "text": "now there's no charge for backup storage to the size of the volume and what that",
    "start": "2798450",
    "end": "2803770"
  },
  {
    "text": "means is that if you've got a 1 terabyte database that means we'll store one terabyte of backups at no charge and",
    "start": "2803770",
    "end": "2810160"
  },
  {
    "text": "only when you go beyond one terabyte that will start to charge you per gigabyte 1 a lot of folks who have",
    "start": "2810160",
    "end": "2817390"
  },
  {
    "text": "larger databases but are using perhaps a small portion of them you know they're using a you know 2 out of 5 terabytes",
    "start": "2817390",
    "end": "2824020"
  },
  {
    "text": "will ever actually see backup charges at all because they don't consume enough backup the final piece is the the data",
    "start": "2824020",
    "end": "2831280"
  },
  {
    "text": "transfer piece and that's similar to other services there's no cost for transferring data into your Amazon RDS",
    "start": "2831280",
    "end": "2838270"
  },
  {
    "text": "instance copying data in is is free copying data out so if you're doing lots",
    "start": "2838270",
    "end": "2843400"
  },
  {
    "text": "of bulk exports or if you're moving lots of data from region to region so the on the out you could see the data transfer",
    "start": "2843400",
    "end": "2849940"
  },
  {
    "text": "charges data within the V PC within the the the AC obviously that's that's not",
    "start": "2849940",
    "end": "2856180"
  },
  {
    "text": "that doesn't count as data transfer so a lot of folks never even see transfer charges so on your bill itself it's",
    "start": "2856180",
    "end": "2865150"
  },
  {
    "start": "2861000",
    "end": "2946000"
  },
  {
    "text": "going to be you're gonna see relational database service all the RDS charges are grouped by regions for using multiple",
    "start": "2865150",
    "end": "2870250"
  },
  {
    "text": "regions will see those grouped and then within that instances are grouped by engine and you'll see both reserved",
    "start": "2870250",
    "end": "2875920"
  },
  {
    "text": "instances and on-demand group together a real great tool if you haven't used it",
    "start": "2875920",
    "end": "2882220"
  },
  {
    "text": "is the AWS cost Explorer it just got an upgrade I think last week you can",
    "start": "2882220",
    "end": "2887260"
  },
  {
    "text": "get a graphical breakdown you can break down my instance type you can bake down region and break down analyze your bill",
    "start": "2887260",
    "end": "2893290"
  },
  {
    "text": "that's really nice tool for doing that and then if you really want all the the",
    "start": "2893290",
    "end": "2898600"
  },
  {
    "text": "gory details for billing they have the cost and usage report that's a detailed",
    "start": "2898600",
    "end": "2904120"
  },
  {
    "text": "line by line each hour shows you exactly what you're consuming an AWS and how how",
    "start": "2904120",
    "end": "2910420"
  },
  {
    "text": "you're being billed for it you do have to turn that on it's not on by default if you haven't used that and it stores",
    "start": "2910420",
    "end": "2915580"
  },
  {
    "text": "that on in an s3 bucket you give it an s3 bucket and each hour it pushes out a very detailed cost report for you if you",
    "start": "2915580",
    "end": "2923770"
  },
  {
    "text": "want to bring that into a lot of companies like to pull that in and bring it into their own database so they can",
    "start": "2923770",
    "end": "2929230"
  },
  {
    "text": "do analytics one thing you also might want to do is use tags so there's a tagging feature in billing so if you",
    "start": "2929230",
    "end": "2935830"
  },
  {
    "text": "want to tag say your production resources or a department you can set those tags on those resources and then",
    "start": "2935830",
    "end": "2941440"
  },
  {
    "text": "you can see in the bill analysis you can slice and dice by tag so the question",
    "start": "2941440",
    "end": "2949150"
  },
  {
    "start": "2946000",
    "end": "3061000"
  },
  {
    "text": "how do I save money on my database so one of the ways is through Amazon RDS",
    "start": "2949150",
    "end": "2954310"
  },
  {
    "text": "reserved instances so our eyes allow you give you a discount over on-demand prices up to 60% I think for three-year",
    "start": "2954310",
    "end": "2962890"
  },
  {
    "text": "reserved instance and 30 or 40% for one year now reserved instances a little bit",
    "start": "2962890",
    "end": "2970090"
  },
  {
    "text": "of a tricky word because we don't actually reserve capacity so it's not like 500 reserved instance there's a",
    "start": "2970090",
    "end": "2976290"
  },
  {
    "text": "space on a rack sitting there for me from an artistic perspective it's just a building commitment you're basically",
    "start": "2976290",
    "end": "2982600"
  },
  {
    "text": "saying I'm going to run a database for a 1 or 3 year period and I want to get a discount off of the on-demand price we",
    "start": "2982600",
    "end": "2990760"
  },
  {
    "text": "do now offer size flexibility we recently introduced that so if you're running a for example a are for large",
    "start": "2990760",
    "end": "2998230"
  },
  {
    "text": "and then you want to scale that up to an R for extra-large we now count the RI",
    "start": "2998230",
    "end": "3003420"
  },
  {
    "text": "for the are for large against usage of the larger type so within a family for all of the",
    "start": "3003420",
    "end": "3009780"
  },
  {
    "text": "open-source engines and Oracle BYO L so we do offer that RI flexibility allows",
    "start": "3009780",
    "end": "3017370"
  },
  {
    "text": "you to get better RI utilization we sorry we recently introduced the RI",
    "start": "3017370",
    "end": "3026369"
  },
  {
    "text": "utilization report so this has been working a while for ec2 and it tells you of the R as I purchased how many are",
    "start": "3026369",
    "end": "3032430"
  },
  {
    "text": "being utilized and how much so this worked for ec2 it now works for Amazon RDS as well so you can go in there and",
    "start": "3032430",
    "end": "3038849"
  },
  {
    "text": "say ok how am I using actually using against my reserved instance they also",
    "start": "3038849",
    "end": "3044490"
  },
  {
    "text": "have something called the coverage report which is of the on-demand usage I'm using which is covered by our eyes",
    "start": "3044490",
    "end": "3050250"
  },
  {
    "text": "and which is not covered by our eyes that report would be working for RDS very soon now so that's coming soon so",
    "start": "3050250",
    "end": "3056970"
  },
  {
    "text": "that really allows you to analyze your your usage and then the final thing is a",
    "start": "3056970",
    "end": "3063750"
  },
  {
    "start": "3061000",
    "end": "3169000"
  },
  {
    "text": "way to save database is to stop it when it's not in use we recently added the",
    "start": "3063750",
    "end": "3069299"
  },
  {
    "text": "ability to start and stop a running database so you can go to a database you can say stop while it's not running",
    "start": "3069299",
    "end": "3076529"
  },
  {
    "text": "you're not paying for that database you're only paying for the storage that's being used so it's available",
    "start": "3076529",
    "end": "3082890"
  },
  {
    "text": "today for single AZ database instances we mainly focused on development and",
    "start": "3082890",
    "end": "3089039"
  },
  {
    "text": "test environments where you've got developers who go home at night don't use the database over the weekend and",
    "start": "3089039",
    "end": "3094500"
  },
  {
    "text": "you don't want to have to pay for that database while it's not being used now if you leave a database to sleep for",
    "start": "3094500",
    "end": "3100170"
  },
  {
    "text": "more than a week we'll actually restart it because what we need to do is make",
    "start": "3100170",
    "end": "3105269"
  },
  {
    "text": "sure that you haven't passed any maintenance required maintenance we don't want to build up a set of patches",
    "start": "3105269",
    "end": "3110400"
  },
  {
    "text": "over time so we'll restart it will reapply the patches you do get an event when that happens if you want to put it",
    "start": "3110400",
    "end": "3116819"
  },
  {
    "text": "back stop it again immediately that's fine you can start it at stop it after it's",
    "start": "3116819",
    "end": "3121829"
  },
  {
    "text": "done its maintenance and if you if you want to so super easy just stop from the",
    "start": "3121829",
    "end": "3126990"
  },
  {
    "text": "console or you can script the stop through the API so hopefully this has",
    "start": "3126990",
    "end": "3132539"
  },
  {
    "text": "given you a tour of Amazon RDS lots of tips for optimizing RDS in case you're",
    "start": "3132539",
    "end": "3141059"
  },
  {
    "text": "broke down some of the other related sessions that reinvent I know there's hundreds of sessions so see these are",
    "start": "3141059",
    "end": "3146789"
  },
  {
    "text": "some that you might be interested if you're interested in learning more about RDS whether it's running sequel server running its Oracle",
    "start": "3146789",
    "end": "3154030"
  },
  {
    "text": "and and some higher-level presentations about overall database trends but thank you so much for coming and I will",
    "start": "3154030",
    "end": "3160300"
  },
  {
    "text": "actually I'm going to get off the stage but you feel free to come up and talk and ask questions and we'll also be at",
    "start": "3160300",
    "end": "3166690"
  },
  {
    "text": "the the show floor so thank you very much [Applause]",
    "start": "3166690",
    "end": "3171830"
  }
]