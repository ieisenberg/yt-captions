[
  {
    "text": "hello and welcome to self defending borders a developer's approach to security part of the eight of us",
    "start": "30",
    "end": "5339"
  },
  {
    "text": "innovate online conference in today's modern world your border is an interface between yourself and consumer businesses",
    "start": "5339",
    "end": "13049"
  },
  {
    "text": "today not only need an online presence but need to ensure they can deal with an ever-increasing hostile environment but",
    "start": "13049",
    "end": "18869"
  },
  {
    "text": "is traditional security enough given that modern day attacks focus at the application layer in this session I will",
    "start": "18869",
    "end": "25949"
  },
  {
    "text": "illustrate how you can leverage AWS development services in conjunction with traditional security services to create",
    "start": "25949",
    "end": "32160"
  },
  {
    "text": "an architecture that dynamically responds to what is occurring in your environment allowing you to build a self",
    "start": "32160",
    "end": "37230"
  },
  {
    "text": "defending border to protect your online assets just a bit a little level setting for today's session we're going to spend",
    "start": "37230",
    "end": "44430"
  },
  {
    "text": "about 30 minutes together exploring a use case of how you can use development services to transform your reg from one",
    "start": "44430",
    "end": "50370"
  },
  {
    "text": "that is static which forces you to play cat-and-mouse to one that is proactive self defense and drive maturity in your",
    "start": "50370",
    "end": "57390"
  },
  {
    "text": "security practices for many of you the services and concepts discussed here",
    "start": "57390",
    "end": "62940"
  },
  {
    "text": "will be quite new so I'm going to walk you through a few demonstrations to illustrate the art of the possible focusing in on how development services",
    "start": "62940",
    "end": "70170"
  },
  {
    "text": "can augment and add value to your security posture and because we're all builders will be no black boxes in this",
    "start": "70170",
    "end": "76439"
  },
  {
    "text": "session I will demystify the underlying reference architecture and implementation details behind these",
    "start": "76439",
    "end": "81600"
  },
  {
    "text": "demos we only have 30 minutes so let's get started let's talk about the state",
    "start": "81600",
    "end": "87659"
  },
  {
    "text": "of play in business today in this ever-changing digital world the frequency of attacks are increasing year-on-year and at the same time the",
    "start": "87659",
    "end": "95100"
  },
  {
    "text": "attack vectors are becoming more and more complex businesses are often extending the life",
    "start": "95100",
    "end": "100140"
  },
  {
    "text": "cycle of their security investments prolonging and sweating their assets there is an ever increasing amount of",
    "start": "100140",
    "end": "106950"
  },
  {
    "text": "rules and regulations for compliance that need to be adhered to and let's be honest it can be a struggle to be",
    "start": "106950",
    "end": "112590"
  },
  {
    "text": "compliant and lastly we have a plethora of isolated systems and log sources that",
    "start": "112590",
    "end": "118020"
  },
  {
    "text": "we struggle to extract value from so what are the threats facing today's",
    "start": "118020",
    "end": "123090"
  },
  {
    "text": "online assets well there are many so let's talk about them lots there are",
    "start": "123090",
    "end": "129179"
  },
  {
    "text": "many attack vectors attacks are shifting towards the application layer and at the application layer we have the open web application security project or",
    "start": "129179",
    "end": "136379"
  },
  {
    "text": "a wasp for short the OWASP top 10 is a list of the 10 most dangerous current",
    "start": "136379",
    "end": "142260"
  },
  {
    "text": "web application security flaws along with effective methods for mitigation we're talking here attacks on web",
    "start": "142260",
    "end": "148409"
  },
  {
    "text": "applications via methods such as sequel injection insecure D serialization cross-site request forgery and so on the",
    "start": "148409",
    "end": "157109"
  },
  {
    "text": "Olaf top 10 was last updated in 2017 and it's no surprise that number one on the",
    "start": "157109",
    "end": "162689"
  },
  {
    "text": "list is injection almost any source of data can be an injection vector injection floors occur when an attacker",
    "start": "162689",
    "end": "169859"
  },
  {
    "text": "consent hostile data to an interpreter injection floors are very prevalent particularly in legacy code and are",
    "start": "169859",
    "end": "176129"
  },
  {
    "text": "often found in sequel and no sequel queries LDAP as well as XML parsers and SMTP whilst injection flaws are easy to",
    "start": "176129",
    "end": "183810"
  },
  {
    "text": "discover when examining code injection can result in data loss corruption disclosure to unauthorized parties or",
    "start": "183810",
    "end": "190650"
  },
  {
    "text": "denial of access in some cases injection can lead to complete host takeover pretty serious stuff we should be",
    "start": "190650",
    "end": "197489"
  },
  {
    "text": "mitigating against let's take a look at the simplistic example I've decided to",
    "start": "197489",
    "end": "203220"
  },
  {
    "text": "log in to a website and have entered in my username and password this has translated into a sequel query from the",
    "start": "203220",
    "end": "208709"
  },
  {
    "text": "web application to the database engine and it might look something like this pretty innocent but we know not everyone",
    "start": "208709",
    "end": "216840"
  },
  {
    "text": "is innocent and by not validating our user import our malicious actor is able to modify the sequel query being sent to",
    "start": "216840",
    "end": "223290"
  },
  {
    "text": "the database engine and in this scenario all usernames and passwords would have been returned as a record set obviously",
    "start": "223290",
    "end": "229979"
  },
  {
    "text": "the query would require a bit of massaging to return as HTML output but you get the gist so how does a typical",
    "start": "229979",
    "end": "237359"
  },
  {
    "text": "business tackle these threats today we use controls and we have various",
    "start": "237359",
    "end": "243840"
  },
  {
    "text": "controls in our toolbox to provide countermeasures but there are problems the traditional approaches of defending",
    "start": "243840",
    "end": "249510"
  },
  {
    "text": "ones border doesn't scale in terms of effort versus return firstly these proprietary systems and appliances are",
    "start": "249510",
    "end": "256680"
  },
  {
    "text": "often expensive attracting high capex startup costs while requiring professional services for implementation",
    "start": "256680",
    "end": "262099"
  },
  {
    "text": "equally as important IT departments the world over are adopting a DevOps model these two",
    "start": "262099",
    "end": "267810"
  },
  {
    "text": "to rely on automated deployments and often see an opportunity to automate their security operations death SEC ops",
    "start": "267810",
    "end": "274139"
  },
  {
    "text": "and these security systems often lack multi-vendor integration lastly if the site has a",
    "start": "274139",
    "end": "280830"
  },
  {
    "text": "high release cadence how often is your security getting in the way of genuine transactions so enough theory here let's",
    "start": "280830",
    "end": "288120"
  },
  {
    "text": "see this in action let's look at this problem through the lens of our fictitious website the snowy unicorn",
    "start": "288120",
    "end": "293160"
  },
  {
    "text": "elevator company their website is based on the popular commercial off-the-shelf software WordPress and has been modified",
    "start": "293160",
    "end": "299550"
  },
  {
    "text": "to work with their ERP and CRM platforms they have just invented a revolutionary new type of elevator that has thrust",
    "start": "299550",
    "end": "306960"
  },
  {
    "text": "them into the digital era traffic to their website is growing by orders of magnitude month and month but because of",
    "start": "306960",
    "end": "313650"
  },
  {
    "text": "this invention they are growing quickly and with IT not being their core business function the security posture",
    "start": "313650",
    "end": "318870"
  },
  {
    "text": "at the snowy unicorn elevator company could be described as block-and-tackle at best they lack operational",
    "start": "318870",
    "end": "325620"
  },
  {
    "text": "intelligence they are reactive making manual firewall changes do nothing with their log artifacts and recently",
    "start": "325620",
    "end": "331440"
  },
  {
    "text": "received a ransom email stating that their website would be dead asked unless they transfer 50 bitcoins to a Bitcoin",
    "start": "331440",
    "end": "337169"
  },
  {
    "text": "wallet I hope none of this sounds familiar before we switch into our demo like to",
    "start": "337169",
    "end": "342960"
  },
  {
    "text": "talk about their architecture starting from left to right their users resolved their website via route 53 the website",
    "start": "342960",
    "end": "350010"
  },
  {
    "text": "resolves to an application load balancer and to ensure deployed capacity meets user demand they have implemented their",
    "start": "350010",
    "end": "355740"
  },
  {
    "text": "front end servers in an auto scaling group on the back end they are using an RDS from IC called DB configured for",
    "start": "355740",
    "end": "362340"
  },
  {
    "text": "high availability across multiple availability zones they also have a bastion host in their front end used for",
    "start": "362340",
    "end": "367950"
  },
  {
    "text": "remote administration but we also have bad actors and whilst we can lock down 9",
    "start": "367950",
    "end": "373560"
  },
  {
    "text": "ports to known IPs being an online business they need to keep 443 and 80 open to everyone including bad actors",
    "start": "373560",
    "end": "380669"
  },
  {
    "text": "what will they do today I'll be using Kali Linux as it will form the basis of",
    "start": "380669",
    "end": "386490"
  },
  {
    "text": "our attacks for those who aren't familiar with Kali it's a Debian derived Linux distribution designed for digital forensics and",
    "start": "386490",
    "end": "393210"
  },
  {
    "text": "penetration testing it contains hundreds of pre-installed tools perfect for",
    "start": "393210",
    "end": "398370"
  },
  {
    "text": "prodding and poking systems it's a for 32-bit 64-bit and armed systems and",
    "start": "398370",
    "end": "404830"
  },
  {
    "text": "is available in the aid of your marketplace wearing my attackers hat what attacks will I be performing let's",
    "start": "404830",
    "end": "411550"
  },
  {
    "text": "quickly talk about them firstly I need to do a little bit of discovery to understand what I'm working with what",
    "start": "411550",
    "end": "418269"
  },
  {
    "text": "I'm looking for here are breadcrumbs of information and that will help me plan my attack HTTP headers script engine",
    "start": "418269",
    "end": "424629"
  },
  {
    "text": "versions directory structures and so on I am next going to extract as much information as I can perhaps for a",
    "start": "424629",
    "end": "431379"
  },
  {
    "text": "future phishing campaign on their customers before launching some hostile attacks I'll add a serving of denial of",
    "start": "431379",
    "end": "439269"
  },
  {
    "text": "service and the cherry on top a brute-force attack let's switch to a demo let's start off by viewing the",
    "start": "439269",
    "end": "445839"
  },
  {
    "text": "snowy unicorn elevator company's website as per a recent topology diagram it's a two-tier website running Apache on the",
    "start": "445839",
    "end": "452289"
  },
  {
    "text": "front end with my sequel on the back end pretty standard stuff here and given WordPress powers 29% of websites",
    "start": "452289",
    "end": "458229"
  },
  {
    "text": "worldwide it should have synergies to the website too many of you manage and keep secure today wearing my attackers",
    "start": "458229",
    "end": "464259"
  },
  {
    "text": "hat I'm going to launch our attacks in order to complete a future phishing campaign I'll need a copy of their",
    "start": "464259",
    "end": "470110"
  },
  {
    "text": "website so let's see if we can spider and scrape this site I have three SSH",
    "start": "470110",
    "end": "475149"
  },
  {
    "text": "sessions open to the same Kali Linux instance and I'm quickly going to open my shell script which is using a",
    "start": "475149",
    "end": "480249"
  },
  {
    "text": "combination of curl and double you get to scrape their website whilst it's executing let's take a look at their",
    "start": "480249",
    "end": "485740"
  },
  {
    "text": "robots file and based on the robots file assuming I didn't know this was WordPress showing forward slash WP -",
    "start": "485740",
    "end": "492369"
  },
  {
    "text": "admin is a pretty clear indicator that this is WordPress even if I wasn't familiar with WordPress I can quickly",
    "start": "492369",
    "end": "498550"
  },
  {
    "text": "validate this with a search engine given I believe this is WordPress let's use Kali and perform a scan of the site with",
    "start": "498550",
    "end": "505749"
  },
  {
    "text": "the WordPress vulnerability scanner WP scan WP scan can take some time to run",
    "start": "505749",
    "end": "511089"
  },
  {
    "text": "and given me a time-limited I've run this just before the session let's take a look at the output and based on the",
    "start": "511089",
    "end": "517689"
  },
  {
    "text": "output I can deduce the following the version of PHP is 7.0 1 6 they are",
    "start": "517689",
    "end": "522789"
  },
  {
    "text": "behind on patching WordPress not too far behind but the build is from January there is a vulnerability before versions",
    "start": "522789",
    "end": "528910"
  },
  {
    "text": "of WordPress less than 4.9 for which by happens to be the current version of WordPress and lastly a theme and plug-in",
    "start": "528910",
    "end": "534730"
  },
  {
    "text": "have been Clyde the plug-in that WP scan detected is called apartment management and",
    "start": "534730",
    "end": "540070"
  },
  {
    "text": "apartment management is a wordpress plugin that is is designed to manage housing society and neighborhood",
    "start": "540070",
    "end": "545500"
  },
  {
    "text": "maintenance tasks the snowy unicorn elevator company has altered this to manage not houses but maintenance tasks",
    "start": "545500",
    "end": "551980"
  },
  {
    "text": "of their elevators one of the many functions of this plugin is the ability of users to send messages",
    "start": "551980",
    "end": "557110"
  },
  {
    "text": "to each other or groups now I've done some research on the internet and prodding and probing against this plugin",
    "start": "557110",
    "end": "562450"
  },
  {
    "text": "and whilst WP scan doesn't think it's vulnerable I do I've crafted some pretty interesting URLs to perform a sequel",
    "start": "562450",
    "end": "568810"
  },
  {
    "text": "injection shall we try these let's look in our IDE at our sequel query and as we can see",
    "start": "568810",
    "end": "574570"
  },
  {
    "text": "this is T sequel but we are having to use HTML separators in crafter T Seagle in a manner so rather than returning a",
    "start": "574570",
    "end": "581350"
  },
  {
    "text": "huge multi row record set it returns as one record set and it's also not as simple as just sending this to the my",
    "start": "581350",
    "end": "587709"
  },
  {
    "text": "sequel database engine we need to encode it and it will look something like this so I just run this and by modifying a",
    "start": "587709",
    "end": "594850"
  },
  {
    "text": "query string and encoding a select statement what I've been able to do here is list all the tables in their database",
    "start": "594850",
    "end": "599950"
  },
  {
    "text": "one table stands out and it see a counts table as it does not have that the same WP underscore prefix like the other",
    "start": "599950",
    "end": "607120"
  },
  {
    "text": "tables let's look at what filter in this table and we can beam this by looking at the information schema and now since we",
    "start": "607120",
    "end": "617529"
  },
  {
    "text": "know the table names let's dump out the data we now have some pretty juicy personal information here",
    "start": "617529",
    "end": "625829"
  },
  {
    "text": "we now have first and last names as well as their date of birth WP scam stated earlier that there was a",
    "start": "632840",
    "end": "639990"
  },
  {
    "text": "vulnerability in all WordPress versions and after reading about this I've crafted a Python script to exploit this",
    "start": "639990",
    "end": "646190"
  },
  {
    "text": "what the script is going to do is for every HTTP POST cause Apache to generate",
    "start": "646190",
    "end": "651450"
  },
  {
    "text": "approximately a four megabyte payload even if I can't bring their website offline I can at the very least causing",
    "start": "651450",
    "end": "657750"
  },
  {
    "text": "financial pain by increasing the outbound bandwidth by hundreds of megabits per second and in order to",
    "start": "657750",
    "end": "663270"
  },
  {
    "text": "amplify its attack I'm going to run this from multiple SSH sessions let's check the website and what I hope",
    "start": "663270",
    "end": "669390"
  },
  {
    "text": "will happen is a website is going to go slow come to a crawl before Apache",
    "start": "669390",
    "end": "675240"
  },
  {
    "text": "finally gets exhausted of resources and crashes there is a bastion host in this",
    "start": "675240",
    "end": "686700"
  },
  {
    "text": "architecture and whilst it's not possible to query a public zone for an a record an nmap subnet scan with tcp/ip",
    "start": "686700",
    "end": "693830"
  },
  {
    "text": "fingerprinting will clearly show some information about the host and in the Wild West of the internet such scans",
    "start": "693830",
    "end": "699960"
  },
  {
    "text": "occur with high frequency in running",
    "start": "699960",
    "end": "706500"
  },
  {
    "text": "nmap we can see that 3389 is open which is RDP and for good measure I'm going to",
    "start": "706500",
    "end": "713940"
  },
  {
    "text": "try and force my way in using a dictionary attack using the brute force tool Hydra I'm going to assume the",
    "start": "713940",
    "end": "721050"
  },
  {
    "text": "standard Windows administrator username and iterate through a password list of 2.1 million passwords let's leave this",
    "start": "721050",
    "end": "728100"
  },
  {
    "text": "running and switch back to the slides so what did you think of the website all the trademarks of an expert UI design",
    "start": "728100",
    "end": "735210"
  },
  {
    "text": "team right look for a company relying on ass digital presence one guy you know",
    "start": "735210",
    "end": "740610"
  },
  {
    "text": "with the laptop in ten minutes has caused chaos their defense was inadequate their website is currently",
    "start": "740610",
    "end": "747060"
  },
  {
    "text": "down they can't do business and they can't manage our inventory personal",
    "start": "747060",
    "end": "752250"
  },
  {
    "text": "information was just exposed and with the increase in data breach notification laws around the world this could have",
    "start": "752250",
    "end": "758010"
  },
  {
    "text": "very serious consequences for the snowy unicorn elevator company this could be the end for them but what's scary is",
    "start": "758010",
    "end": "764850"
  },
  {
    "text": "this all flew under the right I didn't invite you here today to focus",
    "start": "764850",
    "end": "770520"
  },
  {
    "text": "on building a better candle I want to focus on building a light bulb self-defending borders we have a new",
    "start": "770520",
    "end": "778470"
  },
  {
    "text": "architecture and let's talk through our architecture before we jump into some more demos at the core of our",
    "start": "778470",
    "end": "783750"
  },
  {
    "text": "self-defending architecture is AWS wife and more specifically the web a CL that",
    "start": "783750",
    "end": "788910"
  },
  {
    "text": "acts as a central inspection and decision point for all incoming requests the protective functions of this",
    "start": "788910",
    "end": "795000"
  },
  {
    "text": "architecture will determine the custom rules that are dynamically injected and removed from the web a CL our domain is",
    "start": "795000",
    "end": "802230"
  },
  {
    "text": "resolving to a CloudFront distribution which is protected by a to be a shield to only allow HTTP HTTP requests to make",
    "start": "802230",
    "end": "809970"
  },
  {
    "text": "their way through the cloud from cloud Front is handling both static and dynamic requests and for those requests",
    "start": "809970",
    "end": "816390"
  },
  {
    "text": "that can't be performed at the edge cloud font will retrieve from the origin which is our application load balancer",
    "start": "816390",
    "end": "822360"
  },
  {
    "text": "and this is set to only accept requests from cloud front which is further reducing our surface attack area by",
    "start": "822360",
    "end": "828330"
  },
  {
    "text": "preventing request directly accessing the origin just as the saying goes if you're not keeping score well it's just",
    "start": "828330",
    "end": "835080"
  },
  {
    "text": "practice without logging it's virtually impossible to detect a malicious actors all logs generated by cloud front the",
    "start": "835080",
    "end": "842370"
  },
  {
    "text": "alb and the web servers Apache are being pushed into an Amazon s3 bucket which",
    "start": "842370",
    "end": "847860"
  },
  {
    "text": "will be ingested by our architecture to drive operational intelligence lastly we",
    "start": "847860",
    "end": "853709"
  },
  {
    "text": "have our honeypot endpoint which is a security mechanism intended to lure and deflect an attempted attack",
    "start": "853709",
    "end": "859110"
  },
  {
    "text": "I chose WordPress today because other than being popular there is a lot of collateral that is easily available",
    "start": "859110",
    "end": "864420"
  },
  {
    "text": "online on how to compromise an unpatched unsupported WordPress website the",
    "start": "864420",
    "end": "869850"
  },
  {
    "text": "honeypot detects inbound requests from content scrapers and bad BOTS that don't obey a robot's file and to catch those",
    "start": "869850",
    "end": "876029"
  },
  {
    "text": "who are trying to access known application exploits if the source accesses a honeypot we",
    "start": "876029",
    "end": "882029"
  },
  {
    "text": "will kick off an appropriate workflow let's drop back to a demo this time we",
    "start": "882029",
    "end": "887520"
  },
  {
    "text": "have a new website URL self-defending TSU EC comm we have the same content and",
    "start": "887520",
    "end": "893220"
  },
  {
    "text": "same robots file and other than a different fully qualified domain name it's the same website but don't take my",
    "start": "893220",
    "end": "899370"
  },
  {
    "text": "word let's the results of WP scan - which I also ran earlier and to make it clearer let's",
    "start": "899370",
    "end": "904649"
  },
  {
    "text": "drop to an IDE and if the results between our self defending architecture and our original architecture still",
    "start": "904649",
    "end": "910649"
  },
  {
    "text": "WordPress four point seven nine still one theme and the plug-in I hope you can",
    "start": "910649",
    "end": "916560"
  },
  {
    "text": "now see there isn't any smoke and mirrors going on but did you notice anything else in the output we now have",
    "start": "916560",
    "end": "924779"
  },
  {
    "text": "cloud front and shield standards sitting in front I'm going to now try and execute the same sequel injection the",
    "start": "924779",
    "end": "937140"
  },
  {
    "text": "application is still vulnerable but the OWASP rules within our web ACL have decoded my request identified that",
    "start": "937140",
    "end": "944279"
  },
  {
    "text": "this is an injection and blocked it before I was able to extract personal information including first and last",
    "start": "944279",
    "end": "949770"
  },
  {
    "text": "names they have gone from having a terrible day to being able to block receive notification and take",
    "start": "949770",
    "end": "955410"
  },
  {
    "text": "programmatic action whilst I can't run my sequel injection I still should be able to render their website offline",
    "start": "955410",
    "end": "961020"
  },
  {
    "text": "let's drop back to Kali and use a Python script the requests are now racking up",
    "start": "961020",
    "end": "966529"
  },
  {
    "text": "but the website is still up and it is actually quite performant and we can",
    "start": "966529",
    "end": "972180"
  },
  {
    "text": "quantify the response times with Firefox inspector and as we can see the site is",
    "start": "972180",
    "end": "977490"
  },
  {
    "text": "not only online but still performs very well and this is because shield standard and CloudFront",
    "start": "977490",
    "end": "982680"
  },
  {
    "text": "are dropping these requests at the edge with requests never making their way through to the origin I'm going to pause",
    "start": "982680",
    "end": "990149"
  },
  {
    "text": "in our architecture here and change gear because not only does AWS provide you a suite of Best of Breed security services",
    "start": "990149",
    "end": "996450"
  },
  {
    "text": "but you have a portfolio of building blocks to help you architect and develop robust security practices and as",
    "start": "996450",
    "end": "1003020"
  },
  {
    "text": "builders these are the building blocks we're going to use you have sqs and SNS",
    "start": "1003020",
    "end": "1008270"
  },
  {
    "text": "our managed queuing and notification services to help decouple and provide reliable messaging there's dynamo DB and",
    "start": "1008270",
    "end": "1014750"
  },
  {
    "text": "s3 which provide durable and scalable storage options for logging and audit trails as you can see I've listed quite",
    "start": "1014750",
    "end": "1022010"
  },
  {
    "text": "a few non security services and that's because in 2018 security can't be looked",
    "start": "1022010",
    "end": "1028100"
  },
  {
    "text": "at in isolation and it's these services that really empower you to build modern security architectures",
    "start": "1028100",
    "end": "1034360"
  },
  {
    "text": "the key adding smart into our border is a use of aid of your step functions and AWS lambda these two services are adding",
    "start": "1034360",
    "end": "1042260"
  },
  {
    "text": "enterprise of rigor and robustness giving us a capability to dynamically drive configuration of AWS woth and",
    "start": "1042260",
    "end": "1048650"
  },
  {
    "text": "other applications based on site behavior let's quickly refresh our understanding of lambda and step",
    "start": "1048650",
    "end": "1054650"
  },
  {
    "text": "functions a dubious lambda is a service compute service that runs your code in",
    "start": "1054650",
    "end": "1060650"
  },
  {
    "text": "response to events such as HTTP requests via Amazon API gateway creation of",
    "start": "1060650",
    "end": "1066860"
  },
  {
    "text": "objects in Amazon s3 state transitions in eight of your step functions and so",
    "start": "1066860",
    "end": "1071870"
  },
  {
    "text": "on the code you run on lambda is called a lambda function after you create your",
    "start": "1071870",
    "end": "1077210"
  },
  {
    "text": "lambda function it's always ready to run as soon as it's triggered service means having a simple but useable primitive",
    "start": "1077210",
    "end": "1083720"
  },
  {
    "text": "your code as a lambda function with nothing that looks like a server or a container there's no need to worry about",
    "start": "1083720",
    "end": "1090740"
  },
  {
    "text": "provisioning securing and configuring servers no more Patch Tuesday availability and",
    "start": "1090740",
    "end": "1096799"
  },
  {
    "text": "scalability is managed by us and unlike your on-premises ec2 or container",
    "start": "1096799",
    "end": "1102140"
  },
  {
    "text": "deployment you never pay for idle time you only pay for compute time that is the time your function takes to run in",
    "start": "1102140",
    "end": "1108440"
  },
  {
    "text": "units of 100 milliseconds and that is why lambda is perfect for our honeypot event-driven architecture equally as",
    "start": "1108440",
    "end": "1117049"
  },
  {
    "text": "important is eight of your step functions eight of your step functions is part of the eight of your service platform and it makes it simple to",
    "start": "1117049",
    "end": "1124190"
  },
  {
    "text": "orchestrate lambda functions for service applications if you're using lambda today I bet there aren't many apps with",
    "start": "1124190",
    "end": "1131090"
  },
  {
    "text": "only one function one entry point one module one component in fact it's common",
    "start": "1131090",
    "end": "1136549"
  },
  {
    "text": "to have lots of functions and this is where step functions comes in step functions is a reliable way to",
    "start": "1136549",
    "end": "1142280"
  },
  {
    "text": "coordinate the components and step through the functions of your applications step functions automatically triggers and tracks each",
    "start": "1142280",
    "end": "1148309"
  },
  {
    "text": "step so your application executes in the order as expected and if things do go wrong you can diagnose and debug",
    "start": "1148309",
    "end": "1154730"
  },
  {
    "text": "problems quickly so why step functions for us today it's adding robustness in gates to business",
    "start": "1154730",
    "end": "1161539"
  },
  {
    "text": "critical workflows to avoid false positives you use the JSON based Amazon",
    "start": "1161539",
    "end": "1167330"
  },
  {
    "text": "States language to write your state machine as you construct your Jason it will be visualized in the console you define",
    "start": "1167330",
    "end": "1173390"
  },
  {
    "text": "your workflow as a series of steps and transitions between each step when you start a state machine you pass an input",
    "start": "1173390",
    "end": "1179450"
  },
  {
    "text": "in the form of JSON and each state changes or adds to this JSON blob as output which becomes the input to the",
    "start": "1179450",
    "end": "1186710"
  },
  {
    "text": "next state today I'm using step functions as a common pattern but let's",
    "start": "1186710",
    "end": "1191810"
  },
  {
    "text": "talk through this specific case with our honeypot our step function is being invoked with a payload of JSON data and",
    "start": "1191810",
    "end": "1198350"
  },
  {
    "text": "it will start via a call originating from an API gateway when our wordpress honeypot is hit our lambda function",
    "start": "1198350",
    "end": "1204950"
  },
  {
    "text": "intercepts and inspects of request headers to extract the IP address and the HTTP user agent of the source that",
    "start": "1204950",
    "end": "1211370"
  },
  {
    "text": "access the trap endpoint our state machine logic evaluates the HTTP user",
    "start": "1211370",
    "end": "1217190"
  },
  {
    "text": "agent to deem if we have seen this attack vector before and it does this by looking at a dynamo DB table if there is",
    "start": "1217190",
    "end": "1223820"
  },
  {
    "text": "a user agent match we have the IP address to the AWS wife otherwise we",
    "start": "1223820",
    "end": "1229490"
  },
  {
    "text": "progress in our step function to the manual approval lambda function and send an email to an InfoSec team requiring",
    "start": "1229490",
    "end": "1235280"
  },
  {
    "text": "human intervention and if our InfoSec team deem this to be a malicious HTTP",
    "start": "1235280",
    "end": "1240560"
  },
  {
    "text": "user agent the approval response and step function task token will flow back through Amazon API gateway and the HTTP",
    "start": "1240560",
    "end": "1247580"
  },
  {
    "text": "user agent will be added to the dynamo DB table and the IP address that hit the honeypot to the wife ACL what I've built",
    "start": "1247580",
    "end": "1254990"
  },
  {
    "text": "here is a reusable and extendable pattern that will be used throughout our self-defending architecture if you want",
    "start": "1254990",
    "end": "1261170"
  },
  {
    "text": "to learn more about this manual approval process I'll leave links to this in the session summary I just mentioned the",
    "start": "1261170",
    "end": "1269030"
  },
  {
    "text": "ability to notify our InfoSec team in order to decouple our architecture and provide a mechanism for messaging to our",
    "start": "1269030",
    "end": "1276050"
  },
  {
    "text": "InfoSec team I'm using Amazon simple notification service Amazon simple notification service is a flexible fully",
    "start": "1276050",
    "end": "1283160"
  },
  {
    "text": "managed pub/sub messaging and mobile notification service for coordinating the delivery of messages to subscribing",
    "start": "1283160",
    "end": "1289220"
  },
  {
    "text": "endpoints and clients messages can be delivered over multiple transports such as Amazon sqs queues HTTP endpoints",
    "start": "1289220",
    "end": "1296720"
  },
  {
    "text": "lambda functions mobile push messaging SMS and email",
    "start": "1296720",
    "end": "1301860"
  },
  {
    "text": "S&S has a simple API allowing you to create topics add subscribers and publish quickly and easily and finally",
    "start": "1301860",
    "end": "1308490"
  },
  {
    "text": "being a higher order service SNS is reliable with messages stored across multiple lazy's let's drop back to a",
    "start": "1308490",
    "end": "1315990"
  },
  {
    "text": "demo we are back in our kali linux session and we're using the same shell script to scrape this time the target is",
    "start": "1315990",
    "end": "1322290"
  },
  {
    "text": "our self-defending architecture switching back to our robots file we can see we have a few directories are",
    "start": "1322290",
    "end": "1327780"
  },
  {
    "text": "compliant spiders and indexes should stay clear of but the thing is being a scrape up I don't care and my script",
    "start": "1327780",
    "end": "1334020"
  },
  {
    "text": "isn't compliant let's execute this shell script the shell script is running and my phone in my pocket has just started",
    "start": "1334020",
    "end": "1340740"
  },
  {
    "text": "vibrating I'm sure I received a message and rather than looking at my phone let's drop to my email and read this in",
    "start": "1340740",
    "end": "1346049"
  },
  {
    "text": "full the honeypot was hit by my scraping script and we can validate this by looking at the W get output API Gateway",
    "start": "1346049",
    "end": "1356700"
  },
  {
    "text": "is configured as a proxy pass through to our lambda function which is returning our message thanks for visiting 54 2 5 2",
    "start": "1356700",
    "end": "1363059"
  },
  {
    "text": "1 5 6 11 which is the IP address of our Kali Linux instance if I drop into the step functions console we can see we",
    "start": "1363059",
    "end": "1370020"
  },
  {
    "text": "have an active state machine our step",
    "start": "1370020",
    "end": "1377309"
  },
  {
    "text": "function was invoked with a payload of JSON data",
    "start": "1377309",
    "end": "1382130"
  },
  {
    "text": "and based on the state machine logic we are in a manual approval process I'm going to drop back to my email and click",
    "start": "1383620",
    "end": "1390880"
  },
  {
    "text": "approve this will flow back through API gateway which will pass a state machine",
    "start": "1390880",
    "end": "1397210"
  },
  {
    "text": "task token and approval result back as an input for the next step which will execute a lambda function update worth",
    "start": "1397210",
    "end": "1403090"
  },
  {
    "text": "bad bot ACL which will then update the aide of us wife we can validate this in",
    "start": "1403090",
    "end": "1409180"
  },
  {
    "text": "the AWS wife console CLI or SDK as you can see I'm in the wife console or we",
    "start": "1409180",
    "end": "1416290"
  },
  {
    "text": "can use our script again which is now returning 404s",
    "start": "1416290",
    "end": "1421320"
  },
  {
    "text": "a development principle is to always use feedback loops and that is how I like to think of this last function as a safety",
    "start": "1421600",
    "end": "1428770"
  },
  {
    "text": "net should our previous attempts not be successful I've added another eight of your service to our solution AWS guard",
    "start": "1428770",
    "end": "1436090"
  },
  {
    "text": "duty guard duty is a managed threat detection service that continuously monitors for malicious or unauthorized",
    "start": "1436090",
    "end": "1442539"
  },
  {
    "text": "behavior to help you protect your aid abuse account and workloads it monitors",
    "start": "1442539",
    "end": "1447549"
  },
  {
    "text": "for activities such as unusual API calls and the text potentially compromised instances or reconnaissance attempts",
    "start": "1447549",
    "end": "1454450"
  },
  {
    "text": "being performed by malicious actors so what value is guard duty adding to our",
    "start": "1454450",
    "end": "1460240"
  },
  {
    "text": "border guard duty is providing our step function the IPS of those who are",
    "start": "1460240",
    "end": "1465280"
  },
  {
    "text": "managing to hit our environment with unusual access patterns as well as IPS from third-party IP reputation list from",
    "start": "1465280",
    "end": "1471820"
  },
  {
    "text": "Spamhaus proof point and the Tor exit node list these findings are delivered as a JSON",
    "start": "1471820",
    "end": "1477460"
  },
  {
    "text": "payload to which we can use to feed our step functions lambda pattern to provide logic evaluation and branching before",
    "start": "1477460",
    "end": "1484150"
  },
  {
    "text": "manipulating AWS services in order to generate findings guard duty leverages",
    "start": "1484150",
    "end": "1489970"
  },
  {
    "text": "three different data feeds it firstly evaluates a duplicate VPC log stream that we operate so there's no need to",
    "start": "1489970",
    "end": "1496780"
  },
  {
    "text": "turn on PPC flow logs on a DNS front it monitors queries made from ec2 instances",
    "start": "1496780",
    "end": "1502330"
  },
  {
    "text": "to known questionable domains as well as we route 53 logs if you're using route 53 then lastly your cloud trail history",
    "start": "1502330",
    "end": "1510340"
  },
  {
    "text": "of AWS API calls used to access the management console SDKs and CLI plus the",
    "start": "1510340",
    "end": "1515830"
  },
  {
    "text": "identification of the user account and source IP making the call feed into guard duty all of this data is then used",
    "start": "1515830",
    "end": "1522460"
  },
  {
    "text": "to generate findings guard duty findings are made available via cloud watch so",
    "start": "1522460",
    "end": "1527620"
  },
  {
    "text": "not only can you detect but you can report and act from cloud watch you can leverage cloud wash events to act on",
    "start": "1527620",
    "end": "1534490"
  },
  {
    "text": "this information via services such as step functions and lambda or you could use Amazon simple notification service",
    "start": "1534490",
    "end": "1540789"
  },
  {
    "text": "to send this information to a c-more sock with such rich integration the",
    "start": "1540789",
    "end": "1545830"
  },
  {
    "text": "choice is really up to you let's drop back into a demo in the very first demo",
    "start": "1545830",
    "end": "1552100"
  },
  {
    "text": "I launched a brute-force attack using Hydra in fact it's running and while speaking a few minutes",
    "start": "1552100",
    "end": "1557440"
  },
  {
    "text": "earlier my phone vibrated again I bet I received another alert but rather than look at my phone let's drop to my email",
    "start": "1557440",
    "end": "1563410"
  },
  {
    "text": "guard judy has detected this brute-force attack via our duplicate VPC log stream and we are using the same step functions",
    "start": "1563410",
    "end": "1570130"
  },
  {
    "text": "pattern to take action on these findings let's take a look at our state machine and this time when we click approve",
    "start": "1570130",
    "end": "1576010"
  },
  {
    "text": "rather than updating AWS laughs our lambda function is updating the ec2 guest OS firewall and before we do this",
    "start": "1576010",
    "end": "1582490"
  },
  {
    "text": "let's check to validate we can tell it to port 3389 and we can so let's hit",
    "start": "1582490",
    "end": "1588370"
  },
  {
    "text": "approve and again this should flow through API gateway into step functions and vile lambda into the Windows",
    "start": "1588370",
    "end": "1593650"
  },
  {
    "text": "Firewall of this instance now let's see if we can telling it to 3389",
    "start": "1593650",
    "end": "1598750"
  },
  {
    "text": "and just like that we have leveraged our gadgety finding to trigger an orchestration within our environment",
    "start": "1598750",
    "end": "1606510"
  },
  {
    "text": "let's recap what we just saw we climb the curve we took the snowy unicorn",
    "start": "1606510",
    "end": "1612040"
  },
  {
    "text": "elevator company from an architecture that was static and provided little to no visibility to one that is self",
    "start": "1612040",
    "end": "1617860"
  },
  {
    "text": "defending and we did this not only by utilizing traditional security services but by looking through the aid of us",
    "start": "1617860",
    "end": "1623530"
  },
  {
    "text": "toolbox and combining security services with those you see above services that",
    "start": "1623530",
    "end": "1628660"
  },
  {
    "text": "were once the realm of developers and architects have augmented our architecture providing us a pattern that",
    "start": "1628660",
    "end": "1634120"
  },
  {
    "text": "will scale for other attack vectors whilst at the same time we did this in a way that will reduce our operational",
    "start": "1634120",
    "end": "1639430"
  },
  {
    "text": "overhead you're probably thinking can I afford this and what does something like",
    "start": "1639430",
    "end": "1644620"
  },
  {
    "text": "this cost to run let's find out just under 20 dollars per month that's less",
    "start": "1644620",
    "end": "1650620"
  },
  {
    "text": "than the cost of a movie ticket so what does $20 buyers just a disclaimer all",
    "start": "1650620",
    "end": "1656110"
  },
  {
    "text": "prices are accurate as of today and prices are in US dollars for the Sydney region obviously each and every",
    "start": "1656110",
    "end": "1662530"
  },
  {
    "text": "environment is going to be unique but let's use some rough arbitrary figures let's assume my website received 10",
    "start": "1662530",
    "end": "1669100"
  },
  {
    "text": "million HTTP requests generating one terabyte of outbound traffic our architecture today used 1 web ACL with 5",
    "start": "1669100",
    "end": "1677020"
  },
  {
    "text": "rules which is the bulk of our cost API gateway was used for our honeypot and manual approval process and unless",
    "start": "1677020",
    "end": "1683680"
  },
  {
    "text": "you're getting hit a lot this is only going to cost a few cents at best which could also be said for lambda",
    "start": "1683680",
    "end": "1689500"
  },
  {
    "text": "whilst it's the glue for our step functions an AP our gateway request it cost 20 cents per million requests guard",
    "start": "1689500",
    "end": "1696940"
  },
  {
    "text": "duty has to be turned on at the AWS region level and today it's picking up findings not only for this architecture",
    "start": "1696940",
    "end": "1702850"
  },
  {
    "text": "but for everything else running within my AWS account but what we typically see is car Duty cost typically equate to",
    "start": "1702850",
    "end": "1709300"
  },
  {
    "text": "lesson one percent of a customer's total AWS monthly spend and my favorite eight",
    "start": "1709300",
    "end": "1714970"
  },
  {
    "text": "of your service step functions whilst being the workhorse in this architecture step functions is only costing a cool",
    "start": "1714970",
    "end": "1721060"
  },
  {
    "text": "$0.10 and lastly shield standard is completely free and what I didn't",
    "start": "1721060",
    "end": "1726160"
  },
  {
    "text": "mention is the fact that most of these services provide a free tier so depending on your usage you may find",
    "start": "1726160",
    "end": "1731410"
  },
  {
    "text": "this architecture is free or almost free in summary of this session security",
    "start": "1731410",
    "end": "1736900"
  },
  {
    "text": "doesn't need to be static the AWS platform isn't so why should your architecture leverage of the portfolio",
    "start": "1736900",
    "end": "1742870"
  },
  {
    "text": "of a device development services in conjunction with the rich programmatic Atos platform to drive maturity in your",
    "start": "1742870",
    "end": "1749080"
  },
  {
    "text": "InfoSec practice allowing you to build a security architecture that automatically responds to the dynamic threats you face",
    "start": "1749080",
    "end": "1755640"
  },
  {
    "text": "cloud security at AWS is the highest priority the Adria's cloud provides you",
    "start": "1755640",
    "end": "1761290"
  },
  {
    "text": "with a platform to scale and innovate whilst maintaining a secure environment and lastly traditionally security has",
    "start": "1761290",
    "end": "1768730"
  },
  {
    "text": "been expensive to implement and maintain it doesn't need to be many of the features we saw here today are either",
    "start": "1768730",
    "end": "1774190"
  },
  {
    "text": "free or almost free and the full feature API integration allows for quick and timely implementations allowing you to",
    "start": "1774190",
    "end": "1780880"
  },
  {
    "text": "quickly D risk your business please see the following links to get you started with a diverse lambda and Adria step",
    "start": "1780880",
    "end": "1787090"
  },
  {
    "text": "functions as well as links to the AWS wife automation and step functions manual approval workflow to which we",
    "start": "1787090",
    "end": "1792910"
  },
  {
    "text": "have seen today to gain more confidence and hands-on experience with AWS access",
    "start": "1792910",
    "end": "1798040"
  },
  {
    "text": "to digital training built and delivered by eight of us expert AWS has a wide partner ecosystem to help you focus on",
    "start": "1798040",
    "end": "1804640"
  },
  {
    "text": "your success and take full advantage of all the business benefits that eight of us has to offer to learn more about how",
    "start": "1804640",
    "end": "1811120"
  },
  {
    "text": "APN partners can help you visit the AWS APN booth at our showcase finally I",
    "start": "1811120",
    "end": "1817420"
  },
  {
    "text": "would like to thank you for attending today and sticking out until the very end of this presentation I want to wish you good luck in trance",
    "start": "1817420",
    "end": "1823360"
  },
  {
    "text": "forming your edge to one that is self defending",
    "start": "1823360",
    "end": "1827610"
  }
]