[
  {
    "text": "welcome back again my name is Brent Langston and this is creating effective",
    "start": "1810",
    "end": "7700"
  },
  {
    "text": "container images as voted on by the audience in the last session so what",
    "start": "7700",
    "end": "13160"
  },
  {
    "text": "we're gonna take a look at is basically what it takes to build a docker image",
    "start": "13160",
    "end": "19970"
  },
  {
    "text": "some best practices around it some language specific items that might be",
    "start": "19970",
    "end": "26480"
  },
  {
    "text": "helpful and then we're gonna mention some tools some tooling that you can use",
    "start": "26480",
    "end": "33379"
  },
  {
    "text": "and then hopefully at the end we'll have time to do a demo where we take a let's",
    "start": "33379",
    "end": "42079"
  },
  {
    "text": "just say inefficiently written docker image docker file and build out of that",
    "start": "42079",
    "end": "48530"
  },
  {
    "text": "build an effective docker file so what",
    "start": "48530",
    "end": "54979"
  },
  {
    "text": "are layers docker for a docker file builds an image but it's not a flat",
    "start": "54979",
    "end": "61789"
  },
  {
    "text": "image it's actually an image of layers and knowing how the layers work can help",
    "start": "61789",
    "end": "68509"
  },
  {
    "text": "you sort of start to understand what is the right direction when I'm building my",
    "start": "68509",
    "end": "75859"
  },
  {
    "text": "docker file so container layers are simply information that is you that is",
    "start": "75859",
    "end": "83899"
  },
  {
    "text": "written and then potentially overwritten in a future layer to the point where",
    "start": "83899",
    "end": "88969"
  },
  {
    "text": "we're at the very top where when we launch our container we have an ephemeral read/write layer for things",
    "start": "88969",
    "end": "97159"
  },
  {
    "text": "that can go on in the container while it's running so why does this matter why",
    "start": "97159",
    "end": "104090"
  },
  {
    "text": "should you care because you should care because when you have more layers then",
    "start": "104090",
    "end": "110359"
  },
  {
    "text": "there's a chance that your image is overly large the larger the image the",
    "start": "110359",
    "end": "116600"
  },
  {
    "text": "more it takes to download as you do deploys these these downloads add up",
    "start": "116600",
    "end": "122359"
  },
  {
    "text": "they cost bandwidth they cost you know transit time they cost deploy time so",
    "start": "122359",
    "end": "130149"
  },
  {
    "text": "building an efficient docker container is very useful and can pay off dividends",
    "start": "130150",
    "end": "136200"
  },
  {
    "text": "smaller images can also mean a smaller attack surface so if you put less into",
    "start": "136200",
    "end": "143920"
  },
  {
    "text": "the image then there's less that could that is potentially outdated and less to",
    "start": "143920",
    "end": "150040"
  },
  {
    "text": "potentially be used as an attack vector okay so how can I reduce my layers well one",
    "start": "150040",
    "end": "158050"
  },
  {
    "text": "of one thing to just keep in mind is sharing is caring sharing is very useful",
    "start": "158050",
    "end": "163750"
  },
  {
    "text": "so for example try if you can and standardize on the same base image or at",
    "start": "163750",
    "end": "171880"
  },
  {
    "text": "least a handful of base images at places that I've worked in the past I encouraged polyglot development but that",
    "start": "171880",
    "end": "179170"
  },
  {
    "text": "didn't mean that we all just you know it was the Wild West for images I preferred",
    "start": "179170",
    "end": "186310"
  },
  {
    "text": "that everyone start with scratch for golang or anything compiled and if not",
    "start": "186310",
    "end": "193299"
  },
  {
    "text": "then try and use Alpine so those were our two standards and then there was a",
    "start": "193299",
    "end": "198519"
  },
  {
    "text": "process if you needed some other image you know a process for just you know",
    "start": "198519",
    "end": "204549"
  },
  {
    "text": "making that happen but we tried to keep it limited so if you can't do it in",
    "start": "204549",
    "end": "210220"
  },
  {
    "text": "scratch and you can't do it in Alpine then let's look at are we doing the right thing to begin with and if we",
    "start": "210220",
    "end": "216609"
  },
  {
    "text": "decide we're still doing the right thing and you need to bun to or something like that then we'll do it but for the most",
    "start": "216609",
    "end": "222820"
  },
  {
    "text": "part we try to limit the base image so that as we push things out we have a",
    "start": "222820",
    "end": "229769"
  },
  {
    "text": "shared starting point and we don't have to redownload the base image every time",
    "start": "229769",
    "end": "236250"
  },
  {
    "text": "limit the data that's written to the container and then chain run statements together we're gonna try and look at all",
    "start": "236250",
    "end": "242859"
  },
  {
    "text": "of these things in a little bit more detail and then prevent cache misses for",
    "start": "242859",
    "end": "248079"
  },
  {
    "text": "as long as possible so we're going to look at techniques for that so basics of",
    "start": "248079",
    "end": "254500"
  },
  {
    "text": "a minimal image a docker file is a series of instructions for building an",
    "start": "254500",
    "end": "260019"
  },
  {
    "text": "image so if you look at a docker file and we'll take a look at this in a minute you'll see you'll recognize that",
    "start": "260019",
    "end": "265900"
  },
  {
    "text": "it's just a bunch of and as you read the lines you can sort of under begin to understand that the",
    "start": "265900",
    "end": "272750"
  },
  {
    "text": "lines are simply commands so think about for a second before you were using",
    "start": "272750",
    "end": "278120"
  },
  {
    "text": "docker you needed to build a server and the server maybe you decide that server",
    "start": "278120",
    "end": "283640"
  },
  {
    "text": "needs to have Ruby installed rails a bunch of gems and you know then your app",
    "start": "283640",
    "end": "292010"
  },
  {
    "text": "code deployed to it and so on and so forth and so through your config management or maybe before you adopted",
    "start": "292010",
    "end": "300230"
  },
  {
    "text": "config management you would log into the server and you would run commands that would do that would set up everything",
    "start": "300230",
    "end": "306920"
  },
  {
    "text": "that you needed all of your prerequisites that's what a docker file is it's effectively a recipe on building",
    "start": "306920",
    "end": "314270"
  },
  {
    "text": "the in state of your image so the the thing to note though is each line that",
    "start": "314270",
    "end": "321140"
  },
  {
    "text": "you execute execute in a new layer and anything that you've done before that is",
    "start": "321140",
    "end": "328420"
  },
  {
    "text": "permanent so it is always going to be in that image there's no undoing it let me",
    "start": "328420",
    "end": "334760"
  },
  {
    "text": "give you an example of this let's say for example that you need to download some piece of software so you curl a",
    "start": "334760",
    "end": "342950"
  },
  {
    "text": "tarball to your server you then explode the tarball you then run make and then you",
    "start": "342950",
    "end": "350840"
  },
  {
    "text": "delete the tarball and delete the directory where it was exploded Makemake install etc so that's a very common",
    "start": "350840",
    "end": "359480"
  },
  {
    "text": "pattern right when you're when you're installing stuff on a server if you were",
    "start": "359480",
    "end": "365720"
  },
  {
    "text": "to take those same steps and just put them into a docker file think about what would happen in each of the layers",
    "start": "365720",
    "end": "372080"
  },
  {
    "text": "first I would download I would curl the tarball so that's gonna take up space in a layer then I would explode it so",
    "start": "372080",
    "end": "379820"
  },
  {
    "text": "that's gonna take up you know 10x the the space in a new layer then I would",
    "start": "379820",
    "end": "385130"
  },
  {
    "text": "run make and maybe then make install so that's going to add more in in new",
    "start": "385130",
    "end": "391730"
  },
  {
    "text": "layers either one or two then maybe I just think ok well now I'm gonna delete",
    "start": "391730",
    "end": "396800"
  },
  {
    "text": "the tarball and I'm going to delete the directory that I exploded everything into does that do I get that space back",
    "start": "396800",
    "end": "404360"
  },
  {
    "text": "no those that all happen in lower layers so those layers are now locked in there",
    "start": "404360",
    "end": "410700"
  },
  {
    "text": "they're read-only that data is still there it won't be presented to me if I",
    "start": "410700",
    "end": "416370"
  },
  {
    "text": "just look at the top layer of the container that data will be erased but",
    "start": "416370",
    "end": "421500"
  },
  {
    "text": "it's all still there in the lower layers so that makes for an inefficient",
    "start": "421500",
    "end": "427200"
  },
  {
    "text": "container so you can't simply take the commands that you use to build a server",
    "start": "427200",
    "end": "432450"
  },
  {
    "text": "and run those exact same commands and and build a docker container that's a",
    "start": "432450",
    "end": "438270"
  },
  {
    "text": "good starting point but hopefully now that you're sitting here you may be",
    "start": "438270",
    "end": "443400"
  },
  {
    "text": "maybe you've done that and you can think you know I need to go back and fix that cache is another critical thing about",
    "start": "443400",
    "end": "453150"
  },
  {
    "text": "docker so as you build layers think about it I love using Ruby because it's",
    "start": "453150",
    "end": "460410"
  },
  {
    "text": "so slow but rails I have a I have a docker container that I wrote with rails",
    "start": "460410",
    "end": "467580"
  },
  {
    "text": "and for me to do a docker build every time I change my app code it can",
    "start": "467580",
    "end": "472860"
  },
  {
    "text": "sometimes take forever and it and the thing that can make it take a long time",
    "start": "472860",
    "end": "478110"
  },
  {
    "text": "is redownload a you know the Ubuntu like apt-get updating packages and and stuff",
    "start": "478110",
    "end": "485880"
  },
  {
    "text": "like that so I want to try and do that as little as possible every time I make",
    "start": "485880",
    "end": "492390"
  },
  {
    "text": "a change in a docker file I change one line of the text of the docker file then",
    "start": "492390",
    "end": "498090"
  },
  {
    "text": "docker knows it's very efficient at recognizing changes and it knows okay",
    "start": "498090",
    "end": "504360"
  },
  {
    "text": "everything above this line hasn't changed I don't need to rebuild that layer everything starting with the",
    "start": "504360",
    "end": "510900"
  },
  {
    "text": "change I need to rebuild and because Ivan validated that layer every layer",
    "start": "510900",
    "end": "516479"
  },
  {
    "text": "that follows needs to also be rebuilt so think about as you're building a",
    "start": "516479",
    "end": "523070"
  },
  {
    "text": "Python package or your building Ruby or something like that you tend to install",
    "start": "523070",
    "end": "530130"
  },
  {
    "text": "pips for Python gems for Ruby if you put that as like you know one of the top lines of",
    "start": "530130",
    "end": "536790"
  },
  {
    "text": "your dockerfile and then you go change the list of libraries that you need",
    "start": "536790",
    "end": "541950"
  },
  {
    "text": "installed you're gonna invalidate every single layer after that and so you're gonna be constantly having to rebuild all of the",
    "start": "541950",
    "end": "550020"
  },
  {
    "text": "layers of your docker file if you put your app code you know step one start",
    "start": "550020",
    "end": "556320"
  },
  {
    "text": "with Ubuntu step to copy my app code well obviously every time you are",
    "start": "556320",
    "end": "561900"
  },
  {
    "text": "changing your app code you're going to rebuild your docker file if that's layer",
    "start": "561900",
    "end": "567000"
  },
  {
    "text": "two then you're gonna have to rebuild every single layer every single time that's going to be inefficient so using",
    "start": "567000",
    "end": "576090"
  },
  {
    "text": "cash or knowing how docker caching works will help you build a more efficient",
    "start": "576090",
    "end": "583680"
  },
  {
    "text": "docker file so this is a very basic docker file it looks fine",
    "start": "583680",
    "end": "590010"
  },
  {
    "text": "we start with Ubuntu latest we then run apt-get update and we do apt-get install",
    "start": "590010",
    "end": "596780"
  },
  {
    "text": "python stuff then we copy our application we change directories to our",
    "start": "596780",
    "end": "603630"
  },
  {
    "text": "application we run pip install requirements we expose 5,000 we setup",
    "start": "603630",
    "end": "609660"
  },
  {
    "text": "the entry point to be the Python command with application pi as the argument this",
    "start": "609660",
    "end": "616950"
  },
  {
    "text": "looks totally normal right this is perhaps even a good docker file but it",
    "start": "616950",
    "end": "623280"
  },
  {
    "text": "can be better so one way to make this more efficient we started with Ubuntu",
    "start": "623280",
    "end": "629730"
  },
  {
    "text": "latest Ubuntu latest on its own is 458 Meg's think about that for a second I",
    "start": "629730",
    "end": "636330"
  },
  {
    "text": "haven't added anything to it I'm starting at 458 Meg's so I know that you",
    "start": "636330",
    "end": "641910"
  },
  {
    "text": "might like Ubuntu that might be what you run on your desktop but that doesn't",
    "start": "641910",
    "end": "647280"
  },
  {
    "text": "mean that it's good for docker images get used to smaller distributions for",
    "start": "647280",
    "end": "654300"
  },
  {
    "text": "docker images it'll pay off for you in the long run one of the smallest and now the official docker image is alpine so",
    "start": "654300",
    "end": "662520"
  },
  {
    "text": "alpine the base image for it for the this by the way is the Python version of",
    "start": "662520",
    "end": "667890"
  },
  {
    "text": "Alpine it's at 86 Meg's the standard alpine Basin image is 4 Meg's so you can go",
    "start": "667890",
    "end": "675869"
  },
  {
    "text": "from something very big to something very small by making a really simple",
    "start": "675869",
    "end": "681299"
  },
  {
    "text": "change at the very beginning switching from the stock ubuntu image to the Python Alpine image so these are some",
    "start": "681299",
    "end": "690540"
  },
  {
    "text": "base images that you can take a look at debian 123 Meg's if you like Ubuntu and",
    "start": "690540",
    "end": "697410"
  },
  {
    "text": "you want to stick with Ubuntu I mean come on ubuntu debian are you really gonna notice the difference in a",
    "start": "697410",
    "end": "702689"
  },
  {
    "text": "container switch to debian and you'll save 300 Meg's so that's an easy choice to make Fedora",
    "start": "702689",
    "end": "709709"
  },
  {
    "text": "if you like the Red Hat ecosystem you can get some well relatively small image",
    "start": "709709",
    "end": "717089"
  },
  {
    "text": "sizes out of fedora so definitely you know explore that but I would really",
    "start": "717089",
    "end": "722850"
  },
  {
    "text": "encourage you to bite the bullet and look at Alpine get used to its packaging system get used to its package names and",
    "start": "722850",
    "end": "729569"
  },
  {
    "text": "just sort of add that to your repertoire of stuff that you know about because 4",
    "start": "729569",
    "end": "734910"
  },
  {
    "text": "Meg's I mean that's really hard to beat ok when do you want a full base OS I've",
    "start": "734910",
    "end": "742290"
  },
  {
    "text": "had to do this once or twice and for this I've done who bun - I've done CentOS I've done Fedora but the reason",
    "start": "742290",
    "end": "749970"
  },
  {
    "text": "that I needed it was to actually test running security scans that that test an",
    "start": "749970",
    "end": "756119"
  },
  {
    "text": "operating system so it it was like the container needed an operating system in",
    "start": "756119",
    "end": "763079"
  },
  {
    "text": "order to run all of the tests that it needs to run it needs to validate that you know Etsy password exists and Etsy",
    "start": "763079",
    "end": "770489"
  },
  {
    "text": "shadow exists an expiration is set and all these you know normal operating",
    "start": "770489",
    "end": "776069"
  },
  {
    "text": "system level tests I just stuck them all in a container but ran an operating system in the container very rare it's",
    "start": "776069",
    "end": "784589"
  },
  {
    "text": "probably something that you don't normally need to do so back to our",
    "start": "784589",
    "end": "789929"
  },
  {
    "text": "original image remember Ubuntu latest the next thing we did is we ran apt-get",
    "start": "789929",
    "end": "794999"
  },
  {
    "text": "update if we make this simple change we're copy",
    "start": "794999",
    "end": "801860"
  },
  {
    "text": "we're starting with Python 2/7 Alpine we're then copying our app we're setting",
    "start": "801860",
    "end": "807780"
  },
  {
    "text": "up our directory for our app and then we're running pip install we go down to",
    "start": "807780",
    "end": "813540"
  },
  {
    "text": "like 90 Meg's or something like that super super good change even better",
    "start": "813540",
    "end": "820530"
  },
  {
    "text": "change though is to take that and copy",
    "start": "820530",
    "end": "825620"
  },
  {
    "text": "requirements first think about okay when would requirements get copied in this",
    "start": "825620",
    "end": "830670"
  },
  {
    "text": "file when we copy the app code but that's line 2 every time I'm building a",
    "start": "830670",
    "end": "837390"
  },
  {
    "text": "container it's probably because I changed the app code which means every time I'm building a container line 2 is",
    "start": "837390",
    "end": "843750"
  },
  {
    "text": "new which means every layer starting with line 2 is invalid if I am NOT",
    "start": "843750",
    "end": "851370"
  },
  {
    "text": "changing requirements dot text quite as often whoops then let's copy it over first let's do",
    "start": "851370",
    "end": "859170"
  },
  {
    "text": "the PIP installs then after that and then we'll copy over the rest of the app",
    "start": "859170",
    "end": "865260"
  },
  {
    "text": "code by doing it this way I don't have to sit through pip installs on every",
    "start": "865260",
    "end": "871470"
  },
  {
    "text": "container build I only have to sit through those when requirements dot text changes so I change a version of pips",
    "start": "871470",
    "end": "878700"
  },
  {
    "text": "yeah I invalidate layer 2 and I build everything after that but if I never change that stuff once I've sat through",
    "start": "878700",
    "end": "886080"
  },
  {
    "text": "that build once I get to reuse that layer over and over and over again so",
    "start": "886080",
    "end": "891200"
  },
  {
    "text": "cache it's your friend take advantage of it it changes the order that you might",
    "start": "891200",
    "end": "896850"
  },
  {
    "text": "choose to do things but once you have this pattern figured out it's easy to",
    "start": "896850",
    "end": "902130"
  },
  {
    "text": "spot and it's easy to to reuse so",
    "start": "902130",
    "end": "907430"
  },
  {
    "text": "recapping layers represent filesystem differences they add up as you make",
    "start": "907430",
    "end": "914070"
  },
  {
    "text": "changes in future in future layers former layers are locked in and they",
    "start": "914070",
    "end": "920190"
  },
  {
    "text": "will never be changed again unless you change the way they get built you can",
    "start": "920190",
    "end": "926850"
  },
  {
    "text": "build and run everything the same regardless of the container operating system though so just use docker build",
    "start": "926850",
    "end": "934769"
  },
  {
    "text": "and docker run so we take all of these different behaviors and we sort of wrap",
    "start": "934769",
    "end": "940739"
  },
  {
    "text": "them in something that is the same everywhere every time so it's this I'm",
    "start": "940739",
    "end": "946290"
  },
  {
    "text": "building the container the exact same way on my laptop as I am on my server as I am I don't know where else you might",
    "start": "946290",
    "end": "954269"
  },
  {
    "text": "do it but everywhere it's always the same so that's what's really cool okay so",
    "start": "954269",
    "end": "960119"
  },
  {
    "text": "docker files we're gonna start out again looking at our docker file so this is",
    "start": "960119",
    "end": "967860"
  },
  {
    "text": "the big one I may have repeated this slide actually yes I did okay",
    "start": "967860",
    "end": "975529"
  },
  {
    "text": "so thing number two to note about docker files again layers are line by line in",
    "start": "975529",
    "end": "983639"
  },
  {
    "text": "the docker file so that means if you can continue a line then you can save space",
    "start": "983639",
    "end": "990059"
  },
  {
    "text": "so remember my scenario where I'm downloading a tarball I'm exploding the tarball I'm running",
    "start": "990059",
    "end": "996480"
  },
  {
    "text": "Makemake install deleting the tarball deleting the source code what if I did",
    "start": "996480",
    "end": "1002179"
  },
  {
    "text": "all of that in one line now all of a sudden I'm not paying for that space I'm",
    "start": "1002179",
    "end": "1007369"
  },
  {
    "text": "not spending space to hold that tarball spending space to hold the exploded",
    "start": "1007369",
    "end": "1013369"
  },
  {
    "text": "tarball I should use line continuations and do that entire operation with",
    "start": "1013369",
    "end": "1019639"
  },
  {
    "text": "conditional executions on one line and that's what we see here we have one line",
    "start": "1019639",
    "end": "1025668"
  },
  {
    "text": "on the screen obviously it's broken up but it still counts as one line in the",
    "start": "1025669",
    "end": "1032058"
  },
  {
    "text": "docker file it's a run line where we run apt-get update apt-get install we list",
    "start": "1032059",
    "end": "1038298"
  },
  {
    "text": "out all the packages that we're going to install and then and and conditional",
    "start": "1038299",
    "end": "1043880"
  },
  {
    "text": "execution we run RM dash RF the apt cache so we get rid of all of that cruft",
    "start": "1043880",
    "end": "1052340"
  },
  {
    "text": "that got downloaded just by us using the package manager think about it for a",
    "start": "1052340",
    "end": "1057559"
  },
  {
    "text": "second in a container we're never going to use that package manager again once",
    "start": "1057559",
    "end": "1062600"
  },
  {
    "text": "it's built it's built so we don't need all that stuff and therefore we should get rid of",
    "start": "1062600",
    "end": "1068419"
  },
  {
    "text": "of it so that it doesn't take up room in our container so this is a very common",
    "start": "1068419",
    "end": "1074269"
  },
  {
    "text": "pattern for efficient containers so",
    "start": "1074269",
    "end": "1079509"
  },
  {
    "text": "switching users adds layers basically again every line adds a layer now it's a",
    "start": "1079509",
    "end": "1085489"
  },
  {
    "text": "metadata layer it doesn't necessarily add space but it is a layer nonetheless",
    "start": "1085489",
    "end": "1091609"
  },
  {
    "text": "and therefore it locks in everything that has happened up to that point avoid",
    "start": "1091609",
    "end": "1097639"
  },
  {
    "text": "adding large files so you see here kind of the example I've been using where",
    "start": "1097639",
    "end": "1102919"
  },
  {
    "text": "we're downloading or we're adding a tarball we're extracting it and then we're running make put it all in one line with",
    "start": "1102919",
    "end": "1110509"
  },
  {
    "text": "conditional execution and that way you aren't giving up all the space of",
    "start": "1110509",
    "end": "1116600"
  },
  {
    "text": "storing the tarball and the exploded tarball although I'm missing the delete",
    "start": "1116600",
    "end": "1122779"
  },
  {
    "text": "at the end of all that that example pretend that was there that should have",
    "start": "1122779",
    "end": "1129590"
  },
  {
    "text": "been there so oh here we go even better example including the delete so I am",
    "start": "1129590",
    "end": "1136850"
  },
  {
    "text": "downloading I'm untiring I'm making and then I'm RM Inge the tarball now",
    "start": "1136850",
    "end": "1145580"
  },
  {
    "text": "language-specific stuff so we I alluded to this earlier there are certain",
    "start": "1145580",
    "end": "1153200"
  },
  {
    "text": "languages that can take advantage of certain conditions in dockerfile one for example is golang so with golang",
    "start": "1153200",
    "end": "1162769"
  },
  {
    "text": "you know that when you build what you end up with is a statically linked",
    "start": "1162769",
    "end": "1168259"
  },
  {
    "text": "artifact that is awesome you can build statically linked to artifacts with C",
    "start": "1168259",
    "end": "1173659"
  },
  {
    "text": "you can build statically linked to artifacts with Crystal Eye you can for",
    "start": "1173659",
    "end": "1179690"
  },
  {
    "text": "example with Java build a Java jar that has all of your dependencies put",
    "start": "1179690",
    "end": "1184940"
  },
  {
    "text": "together so these are all languages that you can take advantage of this style but",
    "start": "1184940",
    "end": "1190369"
  },
  {
    "text": "basically build and then once you have your artifact built copy it to a scratch",
    "start": "1190369",
    "end": "1196909"
  },
  {
    "text": "container what is a scratch container that from line mean start with nothing start empty so from",
    "start": "1196909",
    "end": "1205400"
  },
  {
    "text": "scratch you're starting with zero bytes and empty nothing and then you're copying in your artifact and then you're",
    "start": "1205400",
    "end": "1212600"
  },
  {
    "text": "setting the entry point as your artifact so this is the smallest container you",
    "start": "1212600",
    "end": "1218210"
  },
  {
    "text": "can possibly build it's as big as your artifact and it's easy to distribute",
    "start": "1218210",
    "end": "1223400"
  },
  {
    "text": "it's easy to run because you can run docker anywhere so anywhere docker can",
    "start": "1223400",
    "end": "1229640"
  },
  {
    "text": "run you can run this and this makes it super easy so again what is scratch",
    "start": "1229640",
    "end": "1236360"
  },
  {
    "text": "since special empty docker file you can use it to build your own base images if",
    "start": "1236360",
    "end": "1242210"
  },
  {
    "text": "you ever look even at like complicated docker files like ruby if you look at",
    "start": "1242210",
    "end": "1247640"
  },
  {
    "text": "the official ruby docker file or the official Python docker file you'll see that it starts from scratch and it",
    "start": "1247640",
    "end": "1254210"
  },
  {
    "text": "actually explodes at our ball into the container and builds a whole Linux file system",
    "start": "1254210",
    "end": "1259490"
  },
  {
    "text": "from that tar ball so scratch is where eventually everything traces back to but",
    "start": "1259490",
    "end": "1267020"
  },
  {
    "text": "if you start from there then you know you're going to have a docker container that's as efficient as",
    "start": "1267020",
    "end": "1272240"
  },
  {
    "text": "possible okay Ruby official images for",
    "start": "1272240",
    "end": "1279230"
  },
  {
    "text": "Ruby are huge I don't know why but if you just change out the base image from",
    "start": "1279230",
    "end": "1286220"
  },
  {
    "text": "the official one then it can pay off huge dividends so you can see in this",
    "start": "1286220",
    "end": "1291950"
  },
  {
    "text": "docker file we're starting with alpine 3 2 instead of starting with the official Ruby image start with alpine you know",
    "start": "1291950",
    "end": "1299510"
  },
  {
    "text": "your starting point is 4 Meg's then you can apk as their package manager apk add",
    "start": "1299510",
    "end": "1306679"
  },
  {
    "text": "the stuff that you need and then delete the cache this should have been a line",
    "start": "1306679",
    "end": "1314299"
  },
  {
    "text": "continuation by the way so notice that deleting of the cache really isn't going",
    "start": "1314299",
    "end": "1319370"
  },
  {
    "text": "to help you any is it no js' also very small very efficient again just like",
    "start": "1319370",
    "end": "1327470"
  },
  {
    "text": "with Python earlier where we copy over requirement text with no js' that equivalent is package.json so copy over",
    "start": "1327470",
    "end": "1335270"
  },
  {
    "text": "package JSON install your npm x' from it then copy over your the rest of your code",
    "start": "1335270",
    "end": "1341510"
  },
  {
    "text": "that way you're not in validating layers java here's this is more than just for",
    "start": "1341510",
    "end": "1349279"
  },
  {
    "text": "java but it's really handy for java because when you're doing java you and",
    "start": "1349279",
    "end": "1355820"
  },
  {
    "text": "you run tests the tests often take a lot of additional software to be able to run",
    "start": "1355820",
    "end": "1362419"
  },
  {
    "text": "but you don't need that software to live in your final container so docker",
    "start": "1362419",
    "end": "1367760"
  },
  {
    "text": "introduced i don't know maybe a year ago something called multi stage builds and",
    "start": "1367760",
    "end": "1373279"
  },
  {
    "text": "what it is is i'm going to start with a container start with a big container if",
    "start": "1373279",
    "end": "1378380"
  },
  {
    "text": "i want and i'm going to run some commands and then when i get to the",
    "start": "1378380",
    "end": "1384559"
  },
  {
    "text": "point where i've built an artifact i can then create a second container and copy",
    "start": "1384559",
    "end": "1390830"
  },
  {
    "text": "something out of the first container into the second and then throw away the first container so that's a multi-stage",
    "start": "1390830",
    "end": "1398840"
  },
  {
    "text": "build i can build an entire jar i can do all my maven testing and have everything",
    "start": "1398840",
    "end": "1404600"
  },
  {
    "text": "that I need for the testing then turn around and take that jar and copy it",
    "start": "1404600",
    "end": "1410090"
  },
  {
    "text": "into an empty container and then run that content and distribute that container around and I have a small Java",
    "start": "1410090",
    "end": "1416390"
  },
  {
    "text": "container even though I had a big Java build environment so here's an example",
    "start": "1416390",
    "end": "1424640"
  },
  {
    "text": "of doing a multi-stage build in multi stage builds you see that I'm starting",
    "start": "1424640",
    "end": "1430909"
  },
  {
    "text": "with from Ubuntu 458 Meg's or whatever it was as build in and I'm doing all you",
    "start": "1430909",
    "end": "1438860"
  },
  {
    "text": "know installing apt-get installing make and then adding my source running my",
    "start": "1438860",
    "end": "1447230"
  },
  {
    "text": "build then my second containers from busybox which is still really tiny and",
    "start": "1447230",
    "end": "1454220"
  },
  {
    "text": "I'm copying from buildin the built application and then exposing port 80 so",
    "start": "1454220",
    "end": "1462610"
  },
  {
    "text": "you see that in this multistage scenario I'm going to distribute a",
    "start": "1462610",
    "end": "1469639"
  },
  {
    "text": "really small container even though I started with a container that was hundreds of Meg's multistage builds",
    "start": "1469639",
    "end": "1477679"
  },
  {
    "text": "really handy yes sir I mean it takes",
    "start": "1477679",
    "end": "1488089"
  },
  {
    "text": "seconds longer because well longer than the Ubuntu seconds because that's what's",
    "start": "1488089",
    "end": "1495139"
  },
  {
    "text": "really taking a while that running your tests and all of that to add on the second container busy box and then copy",
    "start": "1495139",
    "end": "1502429"
  },
  {
    "text": "the file is just I don't know that you would notice the difference it's five seconds more",
    "start": "1502429",
    "end": "1507859"
  },
  {
    "text": "maybe so the the savings in space will be where you get back all of those those",
    "start": "1507859",
    "end": "1514940"
  },
  {
    "text": "extra seconds so you won't be downloading 500 Meg's on every deploy",
    "start": "1514940",
    "end": "1520609"
  },
  {
    "text": "times every server you'll be downloading five Meg's you know times however many",
    "start": "1520609",
    "end": "1527029"
  },
  {
    "text": "servers tools are here to help so",
    "start": "1527029",
    "end": "1532539"
  },
  {
    "text": "basically what are tools for this is my coworker Abbie you see I liked basically",
    "start": "1532539",
    "end": "1541309"
  },
  {
    "text": "how can you but mostly me do less work so tools are the answer to that tools",
    "start": "1541309",
    "end": "1549799"
  },
  {
    "text": "will help you do less work think about my example from the earlier talk keeping",
    "start": "1549799",
    "end": "1556669"
  },
  {
    "text": "track of vulnerabilities like if you had to do that by hand or by me you know manually track every single library that",
    "start": "1556669",
    "end": "1564169"
  },
  {
    "text": "you use across hundreds of micro services that could be that could just",
    "start": "1564169",
    "end": "1570200"
  },
  {
    "text": "drive you crazy you know that's more than a full-time job so there are tools that can help you do that this is an",
    "start": "1570200",
    "end": "1579679"
  },
  {
    "text": "example of using a docker security scanner so the workflow goes basically",
    "start": "1579679",
    "end": "1586429"
  },
  {
    "text": "like this I build a docker container I push my docker container to some",
    "start": "1586429",
    "end": "1593509"
  },
  {
    "text": "registry and then that triggers a scan so some scanning service earlier we",
    "start": "1593509",
    "end": "1600499"
  },
  {
    "text": "talked I mentioned twistlock some scanning service comes along and notices that you pushed a new version of",
    "start": "1600499",
    "end": "1606409"
  },
  {
    "text": "your container so it goes and grabs it and then it introspects every layer not",
    "start": "1606409",
    "end": "1612019"
  },
  {
    "text": "just the top layer and looks at what's in the container and then it alerts you",
    "start": "1612019",
    "end": "1617149"
  },
  {
    "text": "if there are any known vulnerabilities and it does that on an ongoing basis so as long as that is the one that you are",
    "start": "1617149",
    "end": "1624620"
  },
  {
    "text": "that you have deployed that version of that container is what you have deployed then I care if a vulnerability is",
    "start": "1624620",
    "end": "1632029"
  },
  {
    "text": "discovered so services will keep track of all of that and then we'll alert you there was",
    "start": "1632029",
    "end": "1638899"
  },
  {
    "text": "a service that was built into docker hub that would do this for you but I think I",
    "start": "1638899",
    "end": "1645470"
  },
  {
    "text": "just logged in a week or two ago and noticed that they've sunsetted this so it may still work for some people but I",
    "start": "1645470",
    "end": "1652580"
  },
  {
    "text": "don't know that it will work on new repositories okay so let's try and",
    "start": "1652580",
    "end": "1660080"
  },
  {
    "text": "actually do this live this is kind of funny because I was like well okay where",
    "start": "1660080",
    "end": "1665210"
  },
  {
    "text": "am I going to find an inefficiently written docker container and then I",
    "start": "1665210",
    "end": "1670669"
  },
  {
    "text": "thought well okay where will I find any docker containers so I went out the very",
    "start": "1670669",
    "end": "1677360"
  },
  {
    "text": "first place I looked was the AWS samples github repository where we actually have",
    "start": "1677360",
    "end": "1683990"
  },
  {
    "text": "an ACS workshop I've run this workshop I don't know how many times I've I've seen",
    "start": "1683990",
    "end": "1689269"
  },
  {
    "text": "it run countless times more I never bothered looking at the docker file until I was writing this talk and this",
    "start": "1689269",
    "end": "1696830"
  },
  {
    "text": "docker file is well not awesome so it looks awesome though so okay let's drop",
    "start": "1696830",
    "end": "1704210"
  },
  {
    "text": "out of this and go to the command line and by the way I forked this repo so",
    "start": "1704210",
    "end": "1711590"
  },
  {
    "text": "that I can make changes but if you want to sort of do this on your own and",
    "start": "1711590",
    "end": "1716809"
  },
  {
    "text": "examine it you can either look at my Fork of the repo and I've saved all of the iterations of the docker file for",
    "start": "1716809",
    "end": "1723980"
  },
  {
    "text": "you to look at or you can you know figure it out on your own from theirs okay so the original docker file looks",
    "start": "1723980",
    "end": "1732169"
  },
  {
    "text": "like this so by the way I only looked at the iridium client this is by the this",
    "start": "1732169",
    "end": "1737969"
  },
  {
    "text": "is Assyria this is a workshop where we launched a series of micro services and",
    "start": "1737969",
    "end": "1743869"
  },
  {
    "text": "one of one of these micro services we've named iridium so this is just the client",
    "start": "1743869",
    "end": "1750210"
  },
  {
    "text": "for iridium the original dockerfile looks like this it's actually pretty to",
    "start": "1750210",
    "end": "1758789"
  },
  {
    "text": "look at it's easy to read we start with Ubuntu 1404 well okay now",
    "start": "1758789",
    "end": "1764399"
  },
  {
    "text": "now that you've sat through enough of this you know well that's mistake number one right just don't start with Ubuntu then we do",
    "start": "1764399",
    "end": "1772349"
  },
  {
    "text": "an apt-get update then we do an app get install then we set our work directory",
    "start": "1772349",
    "end": "1778879"
  },
  {
    "text": "we download get pip dot pi and we run",
    "start": "1778879",
    "end": "1785070"
  },
  {
    "text": "get pip dot pi now I don't know why we're downloading the pip installer when",
    "start": "1785070",
    "end": "1791460"
  },
  {
    "text": "you know there is a pip installer for Ubuntu right but we do we set our work",
    "start": "1791460",
    "end": "1798330"
  },
  {
    "text": "directory again to a different directory we build a virtual end why do you need a",
    "start": "1798330",
    "end": "1805529"
  },
  {
    "text": "virtualenv in a container you don't this is something this is I can tell after I",
    "start": "1805529",
    "end": "1811499"
  },
  {
    "text": "get to this point that whoever wrote this is just copying instructions",
    "start": "1811499",
    "end": "1816839"
  },
  {
    "text": "straight off of how to build a server right you're not making a mistake this is just not docker style so this is",
    "start": "1816839",
    "end": "1824429"
  },
  {
    "text": "inefficient they're doing pip installs and then they're copying requirements",
    "start": "1824429",
    "end": "1830099"
  },
  {
    "text": "text and then doing a pip install of that list then they copy over the app",
    "start": "1830099",
    "end": "1836580"
  },
  {
    "text": "and execute the app so we can do better right all right so let's take a look an",
    "start": "1836580",
    "end": "1844940"
  },
  {
    "text": "easy one would be to swap to Debian stretch slim so let's take a look if I",
    "start": "1844940",
    "end": "1853499"
  },
  {
    "text": "just build this as is the way it's written",
    "start": "1853499",
    "end": "1858809"
  },
  {
    "text": "the image is 568 Meg's so we know that most of that is Ubuntu let me show you a",
    "start": "1858809",
    "end": "1865499"
  },
  {
    "text": "trick by the way docker history on the image ID and we",
    "start": "1865499",
    "end": "1873380"
  },
  {
    "text": "can see every layer and we can see how much space is in that layer so if it's",
    "start": "1873380",
    "end": "1882889"
  },
  {
    "text": "missing that's probably because it's in the from so line one from Ubuntu these",
    "start": "1882889",
    "end": "1889940"
  },
  {
    "text": "are all the lines that were used to build the Ubuntu image and then starting with the layers that have IDs those are",
    "start": "1889940",
    "end": "1896899"
  },
  {
    "text": "my lines so notice that line 3 adds 232",
    "start": "1896899",
    "end": "1902330"
  },
  {
    "text": "Meg's it's where I'm running apt-get install and then another 10 Meg's",
    "start": "1902330",
    "end": "1908899"
  },
  {
    "text": "another 12 Meg's 25 Meg's 43 and so on and so forth so we can basically look at",
    "start": "1908899",
    "end": "1916460"
  },
  {
    "text": "this and we can know where can i optimize once I've squeezed the space",
    "start": "1916460",
    "end": "1922490"
  },
  {
    "text": "down to hopefully one layer and gotten that layer to be as small as possible",
    "start": "1922490",
    "end": "1928159"
  },
  {
    "text": "then I'm in I'm as optimized as possible I'll still probably have some bytes here",
    "start": "1928159",
    "end": "1933259"
  },
  {
    "text": "and there but for the most part if I have one layer that does what I need it to do and all in all of the space is in",
    "start": "1933259",
    "end": "1941570"
  },
  {
    "text": "that layer for the most part then I know I'm optimized so docker images grep",
    "start": "1941570",
    "end": "1949370"
  },
  {
    "text": "client if we just change one thing change it to Debbie and stretch slim we",
    "start": "1949370",
    "end": "1955220"
  },
  {
    "text": "know that going from Ubuntu to Debian can save us hundreds of Meg's so let's grep for slim so client slim",
    "start": "1955220",
    "end": "1965710"
  },
  {
    "text": "starts off using Debian well uses Debbie and stretch slim instead and I'm down to",
    "start": "1965710",
    "end": "1971710"
  },
  {
    "text": "388 Meg's awesome that's that's much",
    "start": "1971710",
    "end": "1976879"
  },
  {
    "text": "better but still you know I could probably do better if I docker history this then I",
    "start": "1976879",
    "end": "1987950"
  },
  {
    "text": "can still see that I have you know 55",
    "start": "1987950",
    "end": "1993519"
  },
  {
    "text": "216 1416 I still have some you know space there's another 43",
    "start": "1993519",
    "end": "2000350"
  },
  {
    "text": "so I still haven't figured out how to put all of those in one layer okay what",
    "start": "2000350",
    "end": "2007909"
  },
  {
    "text": "more can we do well we can switch to Python to alpine remember alpine much",
    "start": "2007909",
    "end": "2013759"
  },
  {
    "text": "smaller this is the one that python builds for you and provides it so it has",
    "start": "2013759",
    "end": "2018950"
  },
  {
    "text": "Python in my case Python to seven because I'm saying Python : to Alpine so",
    "start": "2018950",
    "end": "2026630"
  },
  {
    "text": "let's switch to that let's see so python",
    "start": "2026630",
    "end": "2041539"
  },
  {
    "text": "to alpine when i build gets down to seventy three point two Meg's let's take",
    "start": "2041539",
    "end": "2046730"
  },
  {
    "text": "a look at the dockerfile",
    "start": "2046730",
    "end": "2049509"
  },
  {
    "text": "alpine so i've switched from python to alpine I switched the package stuff",
    "start": "2053290",
    "end": "2061970"
  },
  {
    "text": "instead of apt-get in Alpine it's apk a few of the package names change also but",
    "start": "2061970",
    "end": "2069290"
  },
  {
    "text": "for the most part I kept all the packages in there that that had been in there before even though they probably",
    "start": "2069290",
    "end": "2074388"
  },
  {
    "text": "weren't necessary like I ever I never saw anywhere that used get so I don't",
    "start": "2074389",
    "end": "2079669"
  },
  {
    "text": "know why the get package is in there but I left it in just for fairness sake we",
    "start": "2079669",
    "end": "2086929"
  },
  {
    "text": "still are downloading the the get pip PI and all that stuff so I haven't",
    "start": "2086929",
    "end": "2093138"
  },
  {
    "text": "optimized any of that yet let's take a look then if we do some more",
    "start": "2093139",
    "end": "2098569"
  },
  {
    "text": "optimization we'll get rid of some of the superfluous layers and the pip cache when I when I",
    "start": "2098569",
    "end": "2106630"
  },
  {
    "text": "make this change I go from 300 megabytes to 275 megabytes",
    "start": "2106630",
    "end": "2112630"
  },
  {
    "text": "and those that docker file looks like this so I still have my apt-get upgrade",
    "start": "2112630",
    "end": "2122110"
  },
  {
    "text": "and adds I then I got rid of the",
    "start": "2122110",
    "end": "2127240"
  },
  {
    "text": "downloading get pip PI and all that I just use the packaged the package",
    "start": "2127240",
    "end": "2133840"
  },
  {
    "text": "managers pip and that's about it so if I",
    "start": "2133840",
    "end": "2144070"
  },
  {
    "text": "then try and combine remember combining run statements is handy so if I if I",
    "start": "2144070",
    "end": "2150370"
  },
  {
    "text": "combine all the run statements that I can combine I get down to a hundred sixty two Meg's even better let's take a",
    "start": "2150370",
    "end": "2158260"
  },
  {
    "text": "look at that one so I'm copying in",
    "start": "2158260",
    "end": "2164620"
  },
  {
    "text": "requirements I'm doing the apk upgrade and installation in one line and then",
    "start": "2164620",
    "end": "2173740"
  },
  {
    "text": "I'm copying over my app code so I've gotten down to only what three lines of",
    "start": "2173740",
    "end": "2181510"
  },
  {
    "text": "actual work pretty handy can we keep",
    "start": "2181510",
    "end": "2187870"
  },
  {
    "text": "going from here let's let's see let's take a look at the the history of the",
    "start": "2187870",
    "end": "2193570"
  },
  {
    "text": "image",
    "start": "2193570",
    "end": "2195930"
  },
  {
    "text": "okay so starting at the bottom I'm starting at four point eight two Meg's",
    "start": "2202750",
    "end": "2209380"
  },
  {
    "text": "again this is all stuff out of my control it's in the from Python to alpine looks like they add in sixty one",
    "start": "2209380",
    "end": "2217790"
  },
  {
    "text": "point two Meg's then another six point five six Meg's",
    "start": "2217790",
    "end": "2224620"
  },
  {
    "text": "then my big layer is eighty eight point seven Meg's but that's really it",
    "start": "2224620",
    "end": "2231890"
  },
  {
    "text": "so everything that all of my commands have been squeezed into one layer and",
    "start": "2231890",
    "end": "2237020"
  },
  {
    "text": "it's roughly 88 Meg's in size but the rest of the space is coming from my base",
    "start": "2237020",
    "end": "2244760"
  },
  {
    "text": "image that I didn't build myself but you know what I did choose it so what if I",
    "start": "2244760",
    "end": "2250010"
  },
  {
    "text": "made a different choice what if instead of Python to alpine what if I just use",
    "start": "2250010",
    "end": "2257990"
  },
  {
    "text": "Alpine so let's not use the Alpine that the Python community builds and",
    "start": "2257990",
    "end": "2264260"
  },
  {
    "text": "distributes let's use just straight-up Alpine and let's add in the Python bits",
    "start": "2264260",
    "end": "2270650"
  },
  {
    "text": "that we need so when we do that my image goes down to 72 Meg's so I started at",
    "start": "2270650",
    "end": "2278950"
  },
  {
    "text": "568 Meg's and in 10 minutes I'm down to 72 Meg's think about what that does for",
    "start": "2278950",
    "end": "2286220"
  },
  {
    "text": "deploy times you know it's humbler we used to have a thousand web servers just",
    "start": "2286220",
    "end": "2291380"
  },
  {
    "text": "for our front-end and we would do deploys I don't know how many times a",
    "start": "2291380",
    "end": "2296960"
  },
  {
    "text": "day dozens of times a day but let's say for example that we had a thousand and we did ten deploys a day and if we were",
    "start": "2296960",
    "end": "2303590"
  },
  {
    "text": "at 568 Meg's round down to 500 we would be spending five terabytes of bandwidth",
    "start": "2303590",
    "end": "2310460"
  },
  {
    "text": "the day on just deploying code that would be five terabytes a day that we",
    "start": "2310460",
    "end": "2316640"
  },
  {
    "text": "couldn't use to serve traffic to our customers so that would be terrible if",
    "start": "2316640",
    "end": "2321950"
  },
  {
    "text": "we can reduce that down to 72 Meg's then we have you know one by almost an order",
    "start": "2321950",
    "end": "2329840"
  },
  {
    "text": "of magnitude we we ever do the amount of bandwidth necessary to do deploys quite noticeably so what does",
    "start": "2329840",
    "end": "2339530"
  },
  {
    "text": "this file look like so I'm copying in",
    "start": "2339530",
    "end": "2347390"
  },
  {
    "text": "requirements I'm running my apk upgrade and package commands and then at the end",
    "start": "2347390",
    "end": "2355220"
  },
  {
    "text": "of it I am our Emig the package cache",
    "start": "2355220",
    "end": "2361040"
  },
  {
    "text": "and finding all of the precompiled pyc",
    "start": "2361040",
    "end": "2367760"
  },
  {
    "text": "files I don't need those because they're just get rebuilt when I start my container so let's just get rid of them",
    "start": "2367760",
    "end": "2374240"
  },
  {
    "text": "so that I'll save the space and then I copy in my product our yeah my product",
    "start": "2374240",
    "end": "2381170"
  },
  {
    "text": "PI and I execute it so this container behaves exactly the same and is almost",
    "start": "2381170",
    "end": "2389210"
  },
  {
    "text": "90 percent smaller than the original container",
    "start": "2389210",
    "end": "2394780"
  },
  {
    "text": "another side effect of having large containers especially when you're using",
    "start": "2398789",
    "end": "2405099"
  },
  {
    "text": "orchestration the hosts that you're downloading containers to will",
    "start": "2405099",
    "end": "2410619"
  },
  {
    "text": "eventually fill up so every time you download 568 Meg's of image that has to",
    "start": "2410619",
    "end": "2418089"
  },
  {
    "text": "be stored somewhere so over time docker doesn't clean those images out now it",
    "start": "2418089",
    "end": "2424599"
  },
  {
    "text": "will unlink images and those unlinked images you can issue a command docker",
    "start": "2424599",
    "end": "2430509"
  },
  {
    "text": "image prune and it will prune any images that are unlinked that'll never be used",
    "start": "2430509",
    "end": "2435579"
  },
  {
    "text": "again so that's great but you have to think to do this or if you know I'm no",
    "start": "2435579",
    "end": "2442930"
  },
  {
    "text": "longer running any of these images you can do docker system prune and this will",
    "start": "2442930",
    "end": "2448719"
  },
  {
    "text": "clean out any images that are no longer linked to any containers so no running",
    "start": "2448719",
    "end": "2456549"
  },
  {
    "text": "containers get rid of the image underneath if you ever need it again you can reap uh lit so this is handy to",
    "start": "2456549",
    "end": "2464109"
  },
  {
    "text": "build in all of the good orchestrators build this into their client already",
    "start": "2464109",
    "end": "2469269"
  },
  {
    "text": "kubernetes does this for you ECS does this for you I don't remember what",
    "start": "2469269",
    "end": "2475239"
  },
  {
    "text": "schedule it does it on either one of them because it's pretty good at it but it's good to be aware that this is",
    "start": "2475239",
    "end": "2481660"
  },
  {
    "text": "something that you need to do if you're if you're ever lacking space on your laptop and you use your laptop to build",
    "start": "2481660",
    "end": "2489160"
  },
  {
    "text": "images a lot go back and look it's like I've cleaned up like 20 gigs of old",
    "start": "2489160",
    "end": "2496329"
  },
  {
    "text": "images off of my laptop unfortunately then I thought oh man that would be a good demo for this but there's no way to",
    "start": "2496329",
    "end": "2503410"
  },
  {
    "text": "get them back so garbage collection is what that's called clean up after your containers",
    "start": "2503410",
    "end": "2510749"
  },
  {
    "text": "now if you're using something like Fargate you never have to think about it right because you don't manage the",
    "start": "2510749",
    "end": "2517690"
  },
  {
    "text": "instance so the instance will never fill up on disk as you rotate out your",
    "start": "2517690",
    "end": "2523059"
  },
  {
    "text": "containers they're probably going to be coming up on new instances that are clean and then we you know cycle those",
    "start": "2523059",
    "end": "2529749"
  },
  {
    "text": "disks and clean up everything under the covers",
    "start": "2529749",
    "end": "2535240"
  },
  {
    "text": "so looking forward to the future there's",
    "start": "2536200",
    "end": "2541970"
  },
  {
    "text": "always going to be more so there's always newer things coming out pay",
    "start": "2541970",
    "end": "2547400"
  },
  {
    "text": "attention to social media pay attention to white papers and and blog posts but",
    "start": "2547400",
    "end": "2554360"
  },
  {
    "text": "try and keep up with things that are changing because there will always be a",
    "start": "2554360",
    "end": "2560060"
  },
  {
    "text": "newer way to do something that you can do today so what have we learned",
    "start": "2560060",
    "end": "2567520"
  },
  {
    "text": "less layers is better is more share layers whenever possible choose to build",
    "start": "2567520",
    "end": "2576470"
  },
  {
    "text": "your base image wisely that could just be making a choice of what to start with",
    "start": "2576470",
    "end": "2582710"
  },
  {
    "text": "or it could be starting from scratch so depending on your code or your interest",
    "start": "2582710",
    "end": "2588740"
  },
  {
    "text": "level in in building your own image you could potentially start from scratch not",
    "start": "2588740",
    "end": "2595100"
  },
  {
    "text": "all languages have to be built the same way the way you build Java might be vastly different than the way you build",
    "start": "2595100",
    "end": "2601460"
  },
  {
    "text": "Python Python might not benefit greatly from multi stage builds nodejs might",
    "start": "2601460",
    "end": "2609650"
  },
  {
    "text": "built might benefit slightly more and then go putt and Java might benefit",
    "start": "2609650",
    "end": "2616310"
  },
  {
    "text": "greatly from it keep it simple try and avoid the extras don't install",
    "start": "2616310",
    "end": "2622010"
  },
  {
    "text": "them enhanced right because you're never gonna log into that container you're never going to run an editor so if you",
    "start": "2622010",
    "end": "2628280"
  },
  {
    "text": "do you're probably doing something wrong so just you know don't install the things that you normally install to your",
    "start": "2628280",
    "end": "2635120"
  },
  {
    "text": "server because this isn't a server this is just to execute your app and nothing",
    "start": "2635120",
    "end": "2640910"
  },
  {
    "text": "else and then use tools they're here to help you they're here to make your life easier these are some useful links I",
    "start": "2640910",
    "end": "2648110"
  },
  {
    "text": "know you can't read this very well now but definitely check it out when you get",
    "start": "2648110",
    "end": "2653930"
  },
  {
    "text": "a copy of the slides after filling out the survey thank you guys very much and",
    "start": "2653930",
    "end": "2659930"
  },
  {
    "text": "are there any questions I can answer",
    "start": "2659930",
    "end": "2663640"
  },
  {
    "text": "all right cool it's like beer 12 a beer",
    "start": "2666729",
    "end": "2673369"
  },
  {
    "text": "- I can't say it right it's not beer 30 yet so I hope you guys have a good day",
    "start": "2673369",
    "end": "2679009"
  },
  {
    "text": "and come find me if you have any questions later on cool",
    "start": "2679009",
    "end": "2684630"
  },
  {
    "text": "[Applause]",
    "start": "2684630",
    "end": "2693009"
  }
]