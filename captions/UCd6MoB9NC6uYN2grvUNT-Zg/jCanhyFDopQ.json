[
  {
    "start": "0",
    "end": "325000"
  },
  {
    "text": "step away from the microphone good afternoon um my name is Neil hunt I'm",
    "start": "240",
    "end": "7000"
  },
  {
    "text": "the chief product offerers at Chief product officer at Netflix um which may",
    "start": "7000",
    "end": "12920"
  },
  {
    "text": "be one of the coolest jobs in the world I get to hire really smart people who do",
    "start": "12920",
    "end": "19439"
  },
  {
    "text": "some really great work on AWS cloud and produce a service that millions of",
    "start": "19439",
    "end": "24720"
  },
  {
    "text": "people get to enjoy and love and this afternoon I get to share some of the lessons I've learned with all of you",
    "start": "24720",
    "end": "30960"
  },
  {
    "text": "guys so let's start with have I got The Right audience here how many of you are",
    "start": "30960",
    "end": "38760"
  },
  {
    "text": "building or planning to build or trying to build Global web scale highly available Cloud native applications",
    "start": "38760",
    "end": "45800"
  },
  {
    "text": "using AWS well that's that's a relief",
    "start": "45800",
    "end": "51000"
  },
  {
    "text": "good so the point of my talk is to wonder why it's so difficult to build",
    "start": "51000",
    "end": "58519"
  },
  {
    "text": "systems that achieve the availability goals that we have in mind how many of you achieve the",
    "start": "58519",
    "end": "65478"
  },
  {
    "text": "availability goals you set for yourself or that your business needs well um I'm going to trade places",
    "start": "65479",
    "end": "73400"
  },
  {
    "text": "with you cuz you can get the um I don't think we've ever quite",
    "start": "73400",
    "end": "80159"
  },
  {
    "text": "achieved the the goals we've set for ourselves um we certainly have",
    "start": "80159",
    "end": "85240"
  },
  {
    "text": "relatively achievable goals but we fail to achieve them now why is that um I'd",
    "start": "85240",
    "end": "90560"
  },
  {
    "text": "like to wonder why it is that most disciplines of engineering actually succeed and software engineering rarely",
    "start": "90560",
    "end": "96799"
  },
  {
    "text": "does and I think it's because of the rather repeatable it's it's a it's a",
    "start": "96799",
    "end": "102880"
  },
  {
    "text": "it's a software is is completely perfectly repeatable it always does",
    "start": "102880",
    "end": "108159"
  },
  {
    "text": "exactly what you tell it to do and that tempts us it encourages us it requires",
    "start": "108159",
    "end": "113640"
  },
  {
    "text": "us to build things that are amazingly complicated and imagine if a physical",
    "start": "113640",
    "end": "119000"
  },
  {
    "text": "artifact a wire never had a floor in it and it was as strong as it could possibly be",
    "start": "119000",
    "end": "125119"
  },
  {
    "text": "imagine if a bolt never went Rusty and you could trust its full strength think of the complexity of the bridge that you",
    "start": "125119",
    "end": "130879"
  },
  {
    "text": "could build across a long river with those kinds of components and now think about software engineering where we do",
    "start": "130879",
    "end": "136360"
  },
  {
    "text": "have bolts that don't rust and we have wires that have no flaws and so we can build massively complicated systems that",
    "start": "136360",
    "end": "144200"
  },
  {
    "text": "stretch the limits of our creativity and Imagination in a way that leads to inevitable f",
    "start": "144200",
    "end": "150920"
  },
  {
    "text": "and so some of the lessons that I've learned through our team ways to",
    "start": "150920",
    "end": "157519"
  },
  {
    "text": "understand and contemplate the kinds of failure that software under goes it's it's not a rusty bolt and it's not a",
    "start": "157519",
    "end": "162879"
  },
  {
    "text": "flawed wire and it doesn't allow us to build infinitely long Bridges but it does allow us to build very complicated",
    "start": "162879",
    "end": "168400"
  },
  {
    "text": "systems and sometimes we can get it right and make it work",
    "start": "168400",
    "end": "174000"
  },
  {
    "text": "so uh 2008 5 years ago um Netflix was a monolithic Java app",
    "start": "174000",
    "end": "182879"
  },
  {
    "text": "um running against an Oracle database in our own Data Center and at that time uh",
    "start": "182879",
    "end": "189000"
  },
  {
    "text": "Netflix was fundamentally a dis shipping business and we were just beginning to launch a streaming service now of course",
    "start": "189000",
    "end": "195680"
  },
  {
    "text": "there's an important difference there a dis that you have at home is always available for your enjoyment but a",
    "start": "195680",
    "end": "202319"
  },
  {
    "text": "streaming service uh that isn't up can't deliver value to its customers and so we",
    "start": "202319",
    "end": "207599"
  },
  {
    "text": "were transitioning in 2008 uh to a new higher level of requirements in terms of",
    "start": "207599",
    "end": "213040"
  },
  {
    "text": "availability and at about that time we suffered a very significant Hardware",
    "start": "213040",
    "end": "218120"
  },
  {
    "text": "failure in our data center and it caused the disc that stored our Oracle databases to get corrupted took us down",
    "start": "218120",
    "end": "225280"
  },
  {
    "text": "for a couple of days took us in fact nearly three days to get everything up and running again and it was a big",
    "start": "225280",
    "end": "230720"
  },
  {
    "text": "embarrassment and it made me realize that we had to do a lot of engineering work to build in the kinds of robustness",
    "start": "230720",
    "end": "237920"
  },
  {
    "text": "and redundancy necessary to achieve the availability levels that we were trying to get to over the next few years as we",
    "start": "237920",
    "end": "244760"
  },
  {
    "text": "launched into streaming in a big way",
    "start": "244760",
    "end": "250040"
  },
  {
    "text": "so we thought if we were going to go through all that engineering work we shouldn't do it in our own data center",
    "start": "250040",
    "end": "255760"
  },
  {
    "text": "we should take advantage of Amazon's brand new AWS cloud and so we set out to",
    "start": "255760",
    "end": "261519"
  },
  {
    "text": "to build that system and I of an interesting anecdote here um the first",
    "start": "261519",
    "end": "266960"
  },
  {
    "text": "page that we moved from our data center into the Cloud was the jobs page and you",
    "start": "266960",
    "end": "273000"
  },
  {
    "text": "know but it it's important that we had to retrain ourselves we had to retrain all",
    "start": "273000",
    "end": "280039"
  },
  {
    "text": "of our engineering skills and disciplines or rehire those skills and disciplines um to bring in a different",
    "start": "280039",
    "end": "286600"
  },
  {
    "text": "skill set very different from what we've been used to in building our application and our data center to building on the",
    "start": "286600",
    "end": "292360"
  },
  {
    "text": "new abstraction layer that was AWS and along the way we've learned a lot of stuff and ironically the chobs pages",
    "start": "292360",
    "end": "299720"
  },
  {
    "text": "migrated back out of AWS and we do different things with it now but we're now 5 years later um and about 10 times",
    "start": "299720",
    "end": "307160"
  },
  {
    "text": "as much traffic um and we're almost 100% in AWS um at nearly the same kind of",
    "start": "307160",
    "end": "312960"
  },
  {
    "text": "cost profile as we were in our data center back in 2008 so I wanted to share",
    "start": "312960",
    "end": "318000"
  },
  {
    "text": "with you this afternoon some of the lessons we've learned about how that stuff works and",
    "start": "318000",
    "end": "325160"
  },
  {
    "start": "325000",
    "end": "536000"
  },
  {
    "text": "so I'm thinking about systems that are web scale Global highly available consumer facing what do these things",
    "start": "326400",
    "end": "332440"
  },
  {
    "text": "mean web scale millions of of of transactions millions of customers with",
    "start": "332440",
    "end": "338759"
  },
  {
    "text": "web scale you have both the need and the resources to be able to reach for the kinds of work that we need to do to make",
    "start": "338759",
    "end": "345240"
  },
  {
    "text": "the robustness and redundancy and availability we care about a global business a business that",
    "start": "345240",
    "end": "351240"
  },
  {
    "text": "serves customers around the world it's peak time somewhere in the world at all times so there's no good time to take a",
    "start": "351240",
    "end": "358039"
  },
  {
    "text": "downtime for datab Base maintenance a backup a schema change so we better",
    "start": "358039",
    "end": "363400"
  },
  {
    "text": "think about different ways to do that in fact highly available systems are always pushed live and are never down uh By",
    "start": "363400",
    "end": "371360"
  },
  {
    "text": "Design and customer facing systems are systems uh that we iterate continuously",
    "start": "371360",
    "end": "378240"
  },
  {
    "text": "we want to continue making changes and improvements to deliver the new features and benefits that our consumers care",
    "start": "378240",
    "end": "383599"
  },
  {
    "text": "about and those changes are infinite sources of bugs and Mis features and",
    "start": "383599",
    "end": "389599"
  },
  {
    "text": "failures and faults uh that helped make it hard to achieve the goals we care for",
    "start": "389599",
    "end": "394720"
  },
  {
    "text": "ourselves and then finally Cloud native um I'm not talking about an application",
    "start": "394720",
    "end": "400280"
  },
  {
    "text": "that we forklift into the cloud from its old architecture and then try to layer on redundancy afterwards I'm talking",
    "start": "400280",
    "end": "406520"
  },
  {
    "text": "about how do we build something from the ground up using The Primitives that AWS gives us in order to build that kind of",
    "start": "406520",
    "end": "413599"
  },
  {
    "text": "redundancy in from the first place so I have a chart here that I'm",
    "start": "413599",
    "end": "419080"
  },
  {
    "text": "I'm going to to build all the way cuz it's easier to talk to when it's",
    "start": "419080",
    "end": "424879"
  },
  {
    "text": "all set up this talks about scale and speed of change and so many of us start",
    "start": "424879",
    "end": "432440"
  },
  {
    "text": "our careers building things in the bottom quadrant there um Enterprise it apps um we build a thing it's it can be",
    "start": "432440",
    "end": "440919"
  },
  {
    "text": "reasonably complicated but it doesn't serve millions of customers it serves hundreds or thousands of customers and",
    "start": "440919",
    "end": "447599"
  },
  {
    "text": "the changes happen on a monthly basis or maybe a weekly basis um and fundamentally it's not that difficult to",
    "start": "447599",
    "end": "453840"
  },
  {
    "text": "get everything to work and once it's working it tends to stay working because it's not growing rapidly and it's not",
    "start": "453840",
    "end": "459280"
  },
  {
    "text": "changing rapidly and so that's pretty easy now as we move up the left axis the",
    "start": "459280",
    "end": "464840"
  },
  {
    "text": "scale axis we need to deploy that application on more and more hardware and every time we scale up the amount of",
    "start": "464840",
    "end": "471400"
  },
  {
    "text": "Hardware we introduce new opportunities for the hardware to fail and on the left axis um an application perhaps a Telco",
    "start": "471400",
    "end": "479560"
  },
  {
    "text": "application for example that has huge scale but the requirements don't change tremendously much the major source of",
    "start": "479560",
    "end": "486120"
  },
  {
    "text": "failure is from Hardware faults large complex hardware systems something always goes wrong and that's the major",
    "start": "486120",
    "end": "492159"
  },
  {
    "text": "source of failure that happens here if instead we progress along the bottom axis um it's all about rate of change",
    "start": "492159",
    "end": "499520"
  },
  {
    "text": "think of the startup that's learning what its customers need um learning what its business needs and adding Those comp",
    "start": "499520",
    "end": "506280"
  },
  {
    "text": "those features and those capabilities every day and every one of those changes there's no opportunity to introduce a",
    "start": "506280",
    "end": "512399"
  },
  {
    "text": "fault or a failure and so the major source of failure in this case is software fault software bugs code errors",
    "start": "512399",
    "end": "519240"
  },
  {
    "text": "and then as we get to web scale millions of subscribers rapid iteration lots of",
    "start": "519240",
    "end": "524720"
  },
  {
    "text": "change lots of Hardware it's hard to keep anything running at all in fact it's pretty surprising that that any of",
    "start": "524720",
    "end": "530120"
  },
  {
    "text": "us do keep our applications running and so that's the space I really want to talk about",
    "start": "530120",
    "end": "537000"
  },
  {
    "start": "536000",
    "end": "875000"
  },
  {
    "text": "here so back in 2008 when we set off to migrate our stuff to Amazon's",
    "start": "537000",
    "end": "544959"
  },
  {
    "text": "Cloud I set out three goals um I wanted to achieve availability scale and",
    "start": "544959",
    "end": "550360"
  },
  {
    "text": "performance and I want to touch on what each of those goals means starting with performance um so today um if if imagine",
    "start": "550360",
    "end": "560240"
  },
  {
    "text": "imagine you're starting Netflix and it takes five or 10 or 20 seconds for that application to come up on your TV um or",
    "start": "560240",
    "end": "567120"
  },
  {
    "text": "for that homepage to load if I can reduce that startup Time by 1 second by",
    "start": "567120",
    "end": "572360"
  },
  {
    "text": "having a higher performance infrastructure behind it the scale that that applies to is just mindboggling",
    "start": "572360",
    "end": "579560"
  },
  {
    "text": "that could save one human lifetime and save time every day that's that's a lot of time I me that that that doesn't",
    "start": "579560",
    "end": "585760"
  },
  {
    "text": "perhaps resonate very much but it helps me to win more moments of Truth and a Moment of Truth for NE Netflix is when a",
    "start": "585760",
    "end": "592560"
  },
  {
    "text": "customer sits down in front of the TV and they think well am I going to am I going to watch Netflix tonight or am we going to flip to linear TV and and and",
    "start": "592560",
    "end": "600279"
  },
  {
    "text": "watch uh NBC or watch HBO and the moment of truth is that 10 20 30 50 60 seconds",
    "start": "600279",
    "end": "608040"
  },
  {
    "text": "when they sit down in front of that TV and I have 10 20 titles to show them to",
    "start": "608040",
    "end": "613680"
  },
  {
    "text": "see if I can grab their attention say this is something you ought to watch tonight and and if I can grab their",
    "start": "613680",
    "end": "620399"
  },
  {
    "text": "attention in that 10 or 20 seconds then maybe I have value delivered and if I",
    "start": "620399",
    "end": "625480"
  },
  {
    "text": "don't find anything that grabs their attention immediately um then they're perhaps flipped over to HBO and watching",
    "start": "625480",
    "end": "631640"
  },
  {
    "text": "something else instead and we've lost that customer for tonight and maybe tomorrow night as well so if I can shave",
    "start": "631640",
    "end": "637839"
  },
  {
    "text": "one second off that startup time that gives me more chance to win that moment of truth and so the value out of even",
    "start": "637839",
    "end": "644079"
  },
  {
    "text": "small performance improvements across large scale like that get to be pretty huge or perhaps what if I could suggest",
    "start": "644079",
    "end": "652320"
  },
  {
    "text": "choices that are one% better by running a more complex recommendation algorithm to choose what's shown on that homepage",
    "start": "652320",
    "end": "660040"
  },
  {
    "text": "um 1% better choices might result in 500,000 additional hours a day of value",
    "start": "660040",
    "end": "665320"
  },
  {
    "text": "delivered to those customers so huge value on performance I want to push it to the Limit the second thing I talked about",
    "start": "665320",
    "end": "672360"
  },
  {
    "text": "was scale and we're uh currently serving in 50 countries in three continents um",
    "start": "672360",
    "end": "680760"
  },
  {
    "text": "uh we're running tens of thousands of Amazon instances it's pretty big scale and it's growing about 50%",
    "start": "680760",
    "end": "686279"
  },
  {
    "text": "year-over-year in terms of volume in terms of of starts for example um and and in spite of all of that scale we're",
    "start": "686279",
    "end": "693079"
  },
  {
    "text": "not talking about massive cost um the magnitude at least of the cost here is in in in the magnitude of about a tenth",
    "start": "693079",
    "end": "699959"
  },
  {
    "text": "of a penny per stun and rough orders of magnitude the content cost is 10 or 100",
    "start": "699959",
    "end": "705720"
  },
  {
    "text": "times as much as that so it's it's uh definitely um a a thing that we can",
    "start": "705720",
    "end": "711440"
  },
  {
    "text": "afford to spend money on to get right availability then is sort of",
    "start": "711440",
    "end": "716519"
  },
  {
    "text": "really the topic of my talk and and I thought about what was appropriate and I",
    "start": "716519",
    "end": "721800"
  },
  {
    "text": "thought well can we can we achieve better than the 2 and a half to three NES that we' been achieving in 2008 can",
    "start": "721800",
    "end": "727560"
  },
  {
    "text": "we achieve three and a half or four NS what that means today is um a downtime",
    "start": "727560",
    "end": "733800"
  },
  {
    "text": "of less than about 3 minutes a quarter um in terms of of being able to uh",
    "start": "733800",
    "end": "740160"
  },
  {
    "text": "survive at Peak time it means that we deliver about 10 billion starts a quarter and we only suffer about 1",
    "start": "740160",
    "end": "746760"
  },
  {
    "text": "million failures but 1 million failures there still 1 million disappointed customers who pick up the phone and call",
    "start": "746760",
    "end": "752519"
  },
  {
    "text": "customer service and cost five or 10 bucks each call um it's a lot of lost business if I could shorten that million",
    "start": "752519",
    "end": "759920"
  },
  {
    "text": "down to 500,000 or 100,000 so much the better so 49s is an important goal to",
    "start": "759920",
    "end": "765560"
  },
  {
    "text": "achieve and it's one that we rarely have achieved but we keep gradually getting closer and closer",
    "start": "765560",
    "end": "771000"
  },
  {
    "text": "to and of course availability compound so if I have two subsystems Each of",
    "start": "771000",
    "end": "776320"
  },
  {
    "text": "which has 99.99% availability and they're independent then my overall",
    "start": "776320",
    "end": "781680"
  },
  {
    "text": "system is 99.99 squared and if I have a th subsystems which is a pretty fair description of the Netflix architecture",
    "start": "781680",
    "end": "788959"
  },
  {
    "text": "then I've only got about 90% um availability out of subsystems that have four nines of availability and wow",
    "start": "788959",
    "end": "796600"
  },
  {
    "text": "that's pretty damaging or to think about this the other way around if I want to achieve four nines and a th000",
    "start": "796600",
    "end": "802480"
  },
  {
    "text": "components I need six nines of availability for each separate dependency so let's put six nines in",
    "start": "802480",
    "end": "809440"
  },
  {
    "text": "perspective 69 is your car starting without fault every morning and every",
    "start": "809440",
    "end": "815000"
  },
  {
    "text": "evening for 1,700 years it's walking from here to my home",
    "start": "815000",
    "end": "822639"
  },
  {
    "text": "in California without tripping on a pebble once and by the way that's going to take you all went long you'll be",
    "start": "822639",
    "end": "828040"
  },
  {
    "text": "there in about April so achieving those kinds of availabilities is a very very hard",
    "start": "828040",
    "end": "835120"
  },
  {
    "text": "problem so we somehow have to break that model we have to figure out how to have those availabilities compound we have to",
    "start": "835120",
    "end": "842040"
  },
  {
    "text": "figure out how to isolate and and a key component of my talk here is how do we",
    "start": "842040",
    "end": "847560"
  },
  {
    "text": "isolate those dependencies so that a failure in one small component which is inevitable it will happen it is",
    "start": "847560",
    "end": "853240"
  },
  {
    "text": "happening right now how can we make sure that failure uh causes a minor",
    "start": "853240",
    "end": "858320"
  },
  {
    "text": "degradation in the service and not a cascading failure that takes out the whole service or large chunks of the",
    "start": "858320",
    "end": "864120"
  },
  {
    "text": "service and really a lot of what several hundred people do is figuring out how to make sure a failure is localized and",
    "start": "864120",
    "end": "871040"
  },
  {
    "text": "minimized and doesn't propagate and spread but availability scale and",
    "start": "871040",
    "end": "877600"
  },
  {
    "start": "875000",
    "end": "1002000"
  },
  {
    "text": "performance I realized this year are really not enough we have to go further",
    "start": "877600",
    "end": "882759"
  },
  {
    "text": "than that and we have to think about iteration and rates of change and I alluded to this beforehand but in in our",
    "start": "882759",
    "end": "889320"
  },
  {
    "text": "case um we look to push new features and we look to push AB tests and we look to",
    "start": "889320",
    "end": "895040"
  },
  {
    "text": "optimize and and and improve and scale up and we look to remove redundant features and simplify and take out tests",
    "start": "895040",
    "end": "902720"
  },
  {
    "text": "that are failed we make about a thousand changes a day in our infrastructure and every one of those changes another",
    "start": "902720",
    "end": "908720"
  },
  {
    "text": "opportunity for faults to come in and affect either one system or sets of systems and so Rate rates of change are",
    "start": "908720",
    "end": "916079"
  },
  {
    "text": "hard um I'm going to skip that and go to",
    "start": "916079",
    "end": "921759"
  },
  {
    "text": "uh this slide here so change change leads to bugs all of those things lead to uh to faults and failures and fail",
    "start": "921759",
    "end": "928399"
  },
  {
    "text": "ability is dramatically in tension with the rate of change that we want to achieve and we need",
    "start": "928399",
    "end": "934720"
  },
  {
    "text": "both so this is a representation what you see here is is a",
    "start": "934720",
    "end": "940839"
  },
  {
    "text": "a curve of availability and rates of tradeoff and you know when when I was when I was a kid in college um I thought",
    "start": "940839",
    "end": "948279"
  },
  {
    "text": "that I wanted to be a research scientist and I thought that I wanted to discover hunts law and I realized a few days ago",
    "start": "948279",
    "end": "953759"
  },
  {
    "text": "that that maybe this is hunts law that the the the rate of the rate of change",
    "start": "953759",
    "end": "959759"
  },
  {
    "text": "multiplied by the availability is a constant for any given architectural configuration and that you can be at",
    "start": "959759",
    "end": "966000"
  },
  {
    "text": "anywhere you want on this curve but you can't have high rates of change and high availability at the same time with a",
    "start": "966000",
    "end": "971519"
  },
  {
    "text": "particular architecture you can slow up the rates of change and you can make it better and better and better and have",
    "start": "971519",
    "end": "976880"
  },
  {
    "text": "high availability or if you want to push a thousand changes a day you're going to be on the wrong side of the curve and so",
    "start": "976880",
    "end": "982959"
  },
  {
    "text": "what we have to figure out is is not where the tradeoff is on that curve which is how a lot of us think but how",
    "start": "982959",
    "end": "989399"
  },
  {
    "text": "we shift the curve all together how do we architect our systems uh so that we can have both higher rates of change and",
    "start": "989399",
    "end": "996040"
  },
  {
    "text": "higher availability and that's really all about independence and isolation of the of the",
    "start": "996040",
    "end": "1002399"
  },
  {
    "start": "1002000",
    "end": "1073000"
  },
  {
    "text": "subsystems so we have to break the chain dependencies that compound in cascading",
    "start": "1002399",
    "end": "1008040"
  },
  {
    "text": "system failure so what I'm talking about here is you've got a an architecture um that's layers of",
    "start": "1008040",
    "end": "1016519"
  },
  {
    "text": "components that talk to each other to have dependencies and somewhere down on the bottom layer a minor fault causes a",
    "start": "1016519",
    "end": "1022959"
  },
  {
    "text": "lookup of a customer record to be a little slower than it should be um and so it times out and so that propagates",
    "start": "1022959",
    "end": "1029280"
  },
  {
    "text": "up and then somewhere at a higher level in the system um maybe you've got an expensive uh query that's pulled out a",
    "start": "1029280",
    "end": "1036360"
  },
  {
    "text": "big package of data and it's waiting for that little token to come in from the other side and and that's taking 10",
    "start": "1036360",
    "end": "1042000"
  },
  {
    "text": "times longer than it should to so the memory fills up and then that system runs out of space um and it topples over",
    "start": "1042000",
    "end": "1048360"
  },
  {
    "text": "and you come fire up new systems fast enough and pretty soon the entire architecture is a smoking heap of ruins",
    "start": "1048360",
    "end": "1054039"
  },
  {
    "text": "on the floor you've all been there I'm sure so how do we how do we figure out how to",
    "start": "1054039",
    "end": "1060360"
  },
  {
    "text": "not do that how do we figure out um how to make those changes be local Lo those failures be local failures that don't",
    "start": "1060360",
    "end": "1067320"
  },
  {
    "text": "propagate um and that don't cause cascading",
    "start": "1067320",
    "end": "1072679"
  },
  {
    "start": "1073000",
    "end": "1452000"
  },
  {
    "text": "failure well um I've got a a number of different recipes here and the most",
    "start": "1073679",
    "end": "1079880"
  },
  {
    "text": "obvious one is just redundancy how do we take that service oriented architecture",
    "start": "1079880",
    "end": "1086320"
  },
  {
    "text": "um that includes uh lots of components all talking with each other and how do",
    "start": "1086320",
    "end": "1092039"
  },
  {
    "text": "we make sure that we replicate each module of that stuff in a way that if one fails um we can fall to the other",
    "start": "1092039",
    "end": "1097880"
  },
  {
    "text": "one pull out the answer we're looking for without a problem so what I've what I've drawn here is a representation of",
    "start": "1097880",
    "end": "1104440"
  },
  {
    "text": "of a dependent system quering a dependency um when it times out um we we",
    "start": "1104440",
    "end": "1110320"
  },
  {
    "text": "fall back and hit the next one uh pretty obvious straightforward redundancy but it's more complicated than it seems what",
    "start": "1110320",
    "end": "1117679"
  },
  {
    "text": "if we've got several levels of this stuff um and what if the timeout at the lowest level um is actually about the",
    "start": "1117679",
    "end": "1124440"
  },
  {
    "text": "same time as the timeout at the highest level you could run the risk of everything timing out all at once um and",
    "start": "1124440",
    "end": "1129919"
  },
  {
    "text": "then the the entire system has fallen over even though in fact you've got good answers in all the other likes and all",
    "start": "1129919",
    "end": "1135080"
  },
  {
    "text": "the other dependencies so there's no magic answer here we have to be very thoughtful about uh what the nature of",
    "start": "1135080",
    "end": "1141080"
  },
  {
    "text": "those cascading timeouts is how to set things up in a way that works",
    "start": "1141080",
    "end": "1146600"
  },
  {
    "text": "well we've built uh many of you are familiar with the uh the the Simian Army",
    "start": "1146600",
    "end": "1153640"
  },
  {
    "text": "and one of the important monkeys in the semian Army is the latency monkey and the latency monkey we apply to uh these",
    "start": "1153640",
    "end": "1161400"
  },
  {
    "text": "to to modulating these Connections in a way that we can test what happens if if",
    "start": "1161400",
    "end": "1167000"
  },
  {
    "text": "a a latency gets much longer than than it should be um so what what we have found often is",
    "start": "1167000",
    "end": "1174159"
  },
  {
    "text": "that um we've built in those those uh timeouts we've built in those fallback",
    "start": "1174159",
    "end": "1180039"
  },
  {
    "text": "answers but unless we've tested them um we find that they Cascade in an",
    "start": "1180039",
    "end": "1185120"
  },
  {
    "text": "unfortunate way and that's it's uh it leads to unexpected system Behavior overall so it's super important for us",
    "start": "1185120",
    "end": "1192559"
  },
  {
    "text": "to uh to continue to apply latency monkey uh to measure and evaluate the",
    "start": "1192559",
    "end": "1198320"
  },
  {
    "text": "impact of failures of of subsystems making sure that they don't propagate and that we get degraded Behavior",
    "start": "1198320",
    "end": "1205400"
  },
  {
    "text": "instead of cascading failure all the way",
    "start": "1205400",
    "end": "1209120"
  },
  {
    "text": "through so what if it's actually not a hardware problem um it's not a",
    "start": "1211120",
    "end": "1217360"
  },
  {
    "text": "particular incidence that's maybe falling over or getting slow but what if it's a software bug in that instance",
    "start": "1217360",
    "end": "1223080"
  },
  {
    "text": "instead and in fact um for this particular query whatever instance we query we're going to get the same",
    "start": "1223080",
    "end": "1230159"
  },
  {
    "text": "failure um well the solution to that may be is that um when we start to see",
    "start": "1230159",
    "end": "1236240"
  },
  {
    "text": "repeating failures all of the same pattern we need to start not querying the dependent system but to fall back to",
    "start": "1236240",
    "end": "1242559"
  },
  {
    "text": "a default answer and can we do that reliably um a default answer might be um",
    "start": "1242559",
    "end": "1249960"
  },
  {
    "text": "a a non-personalized solution or it might be an answer that says maybe I'm querying is this person a valid customer",
    "start": "1249960",
    "end": "1257240"
  },
  {
    "text": "paid up and the the answer might be the default answer might be yes it might be safer to assume that they're a paid up",
    "start": "1257240",
    "end": "1263640"
  },
  {
    "text": "customer and give them service once in a million or once and 10,000 times then is to fail out and have the system fail all",
    "start": "1263640",
    "end": "1271080"
  },
  {
    "text": "together so we have to be very thoughtful about what those default answers are in a way that gives us degraded performance instead of",
    "start": "1271080",
    "end": "1277159"
  },
  {
    "text": "cascading failure and we have to be thoughtful about when to substitute those those default answers in that's",
    "start": "1277159",
    "end": "1283640"
  },
  {
    "text": "another strategy that's important in this kind of system",
    "start": "1283640",
    "end": "1289158"
  },
  {
    "text": "software failures um often are hard to find in unit test they often don't",
    "start": "1289360",
    "end": "1294880"
  },
  {
    "text": "manifest until you start putting a system underload so another tool that we have in our Arsenal here is what we call",
    "start": "1294880",
    "end": "1301120"
  },
  {
    "text": "the canary push uh we'll take a new code version of of a particular service and",
    "start": "1301120",
    "end": "1307360"
  },
  {
    "text": "we'll push that live in just one or 10 instances as part of the live Cloud um",
    "start": "1307360",
    "end": "1313679"
  },
  {
    "text": "and then we start to see real load hit that Canary instance and that gives us an opportunity to evaluate the stability",
    "start": "1313679",
    "end": "1319640"
  },
  {
    "text": "of the canary in real production systems um and if the canary is bad we can observe that from the metric of the",
    "start": "1319640",
    "end": "1326080"
  },
  {
    "text": "connection we can take it back out of service and fix it and if the canary is good then we know we can move to the",
    "start": "1326080",
    "end": "1332360"
  },
  {
    "text": "next level of deploying more widely so deploying more widely we use a",
    "start": "1332360",
    "end": "1338120"
  },
  {
    "text": "technology we call the red black push and what we what we do here is we spin up um enough we we spin up a new",
    "start": "1338120",
    "end": "1345720"
  },
  {
    "text": "autoscaling group um with enough instances of the new code the the red cluster here uh to carry the load we",
    "start": "1345720",
    "end": "1352840"
  },
  {
    "text": "care about but we keep the old cluster the black cluster um up and running and",
    "start": "1352840",
    "end": "1357880"
  },
  {
    "text": "we steer the load over to the red cluster and now if we see um unexpected",
    "start": "1357880",
    "end": "1363480"
  },
  {
    "text": "failure on the load for the for the new code for the red cluster uh we have the old cluster ready to immediately fall",
    "start": "1363480",
    "end": "1369320"
  },
  {
    "text": "back to and that's a way to uh to quickly fall back and avoid the kinds of failure that would happen if if we had",
    "start": "1369320",
    "end": "1377240"
  },
  {
    "text": "uh switched over from from the black to the red and one go and the cloud gives us the opportunity uh to keep both the",
    "start": "1377240",
    "end": "1383440"
  },
  {
    "text": "old and new running uh for a period of perhaps 24 hours to make sure that we can get through a peak load",
    "start": "1383440",
    "end": "1390840"
  },
  {
    "text": "time even then sometimes it's a data dependent or a Time dependent bomb that",
    "start": "1392320",
    "end": "1398159"
  },
  {
    "text": "causes thing to blow up and so maybe both the red and the black have the same bug in um and we can't reliably fail",
    "start": "1398159",
    "end": "1405240"
  },
  {
    "text": "back to the black because that fails too and so we've started working towards what we call the blue system and the",
    "start": "1405240",
    "end": "1412279"
  },
  {
    "text": "blue system if you like is a um an independently authored um static version",
    "start": "1412279",
    "end": "1420679"
  },
  {
    "text": "that that delivers a credible solution but it's not dependent upon any of the code pass that the the red or the black",
    "start": "1420679",
    "end": "1425919"
  },
  {
    "text": "systems were maybe it's a version from five or 10 versions ago uh that's coded to be very stable very static very",
    "start": "1425919",
    "end": "1432640"
  },
  {
    "text": "minimal and by having blue subsystems on standby um that by not being dynamic",
    "start": "1432640",
    "end": "1439760"
  },
  {
    "text": "they may be easier able to scale by having blue systems that we can switch in in the case of of gross system",
    "start": "1439760",
    "end": "1445200"
  },
  {
    "text": "failures um we can also avoid the cascading failure and get to a more",
    "start": "1445200",
    "end": "1450360"
  },
  {
    "text": "supportable system then of course we have the zone",
    "start": "1450360",
    "end": "1456200"
  },
  {
    "start": "1452000",
    "end": "1518000"
  },
  {
    "text": "to Zone failures and this is one of Amazon's more basic um redundancy patterns the idea that we can deploy",
    "start": "1456200",
    "end": "1463559"
  },
  {
    "text": "subsystems in several different zones and then we can load balance between the subs systems in those zones and this is",
    "start": "1463559",
    "end": "1471000"
  },
  {
    "text": "a this is an important tool to deal with infrastructure failure to deal with a power failure a significant Network",
    "start": "1471000",
    "end": "1477279"
  },
  {
    "text": "failure um or even uh some kinds of infrastructure software firmware",
    "start": "1477279",
    "end": "1483200"
  },
  {
    "text": "failures that take out um a whole surface in a whole Zone uh but not a whole region and the the load balance of",
    "start": "1483200",
    "end": "1490840"
  },
  {
    "text": "course is one significant um point of of uh common failure between those",
    "start": "1490840",
    "end": "1496760"
  },
  {
    "text": "different zones so that becomes a very crucial point to this thing we have a member of the Simeon Army the chaos",
    "start": "1496760",
    "end": "1503000"
  },
  {
    "text": "gorilla that allows us to simulate entire Zone failure and make sure that our systems are actually able to fail",
    "start": "1503000",
    "end": "1509200"
  },
  {
    "text": "over into the remaining zones without tripping over each other without tripping over",
    "start": "1509200",
    "end": "1515158"
  },
  {
    "start": "1518000",
    "end": "1688000"
  },
  {
    "text": "customers the common failure modes of things like elastic load balancer um and",
    "start": "1519080",
    "end": "1525760"
  },
  {
    "text": "and the opportunity for things like code bushes to load balances or code purses to shed infrastructure across a whole",
    "start": "1525760",
    "end": "1532200"
  },
  {
    "text": "region mean that sometimes more than a Zone can fail and fact a whole region",
    "start": "1532200",
    "end": "1537279"
  },
  {
    "text": "can fail um and it's it's not only infrastructure it's also sometimes our",
    "start": "1537279",
    "end": "1542600"
  },
  {
    "text": "code if we've written code that has um dependencies that span an entire region",
    "start": "1542600",
    "end": "1549559"
  },
  {
    "text": "um maybe it's impossible to run a region without having consistent code in it um but we can run different regions uh with",
    "start": "1549559",
    "end": "1556520"
  },
  {
    "text": "Allen new code over a period of 4 to 48 hours of difference and we can survive",
    "start": "1556520",
    "end": "1562240"
  },
  {
    "text": "um something like a load balance of failure in one in one region by failing",
    "start": "1562240",
    "end": "1567880"
  },
  {
    "text": "to another region as well and so this is a pattern that we've embraced this year",
    "start": "1567880",
    "end": "1573240"
  },
  {
    "text": "um we we've started to um to bring up uh Us East and US West and we now service",
    "start": "1573240",
    "end": "1579399"
  },
  {
    "text": "half our customers out of each of those uh we use DNS to split the country down the middle and send about half the load",
    "start": "1579399",
    "end": "1585200"
  },
  {
    "text": "in each Direction and in the case of an entire region failing um in the space of",
    "start": "1585200",
    "end": "1590240"
  },
  {
    "text": "half an hour 15 minutes to half an hour to an hour we can switch all the customers on the other side of the country over to the to the region that's",
    "start": "1590240",
    "end": "1598200"
  },
  {
    "text": "still up and running a key observation here is that we have to be super careful about how we",
    "start": "1598200",
    "end": "1603880"
  },
  {
    "text": "deploy across those regions we need to make sure that our deployment tools deploy new code first to a canary uh",
    "start": "1603880",
    "end": "1611640"
  },
  {
    "text": "then to a red black push uh then to a region and only if the region has",
    "start": "1611640",
    "end": "1616799"
  },
  {
    "text": "survived for some number number of hours uh do we start moving over to the other region and bring that up to the same",
    "start": "1616799",
    "end": "1622440"
  },
  {
    "text": "state as well so there's a lot of different tracking of stuff that goes on here in order to make sure that we keep",
    "start": "1622440",
    "end": "1628000"
  },
  {
    "text": "all that consistent chaos Kong is our semian army",
    "start": "1628000",
    "end": "1633440"
  },
  {
    "text": "member that simulates um region isolation um we had anticipated that we",
    "start": "1633440",
    "end": "1640919"
  },
  {
    "text": "would not run chaos Kong on our brand new multi-region hot hot failover system",
    "start": "1640919",
    "end": "1645960"
  },
  {
    "text": "this year we would wait until we got to next year and then uh fate came along and we did",
    "start": "1645960",
    "end": "1651240"
  },
  {
    "text": "in fact have a region failure and I'm happy to report that the failover worked as planned um even though it was was in",
    "start": "1651240",
    "end": "1658360"
  },
  {
    "text": "a system that was really only about a week or two old and we were able to survive um the west coast region uh",
    "start": "1658360",
    "end": "1664760"
  },
  {
    "text": "failing out and and switch all the customers from the West Coast back to the east coast region as well um to date",
    "start": "1664760",
    "end": "1671440"
  },
  {
    "text": "that pattern is only used in the US um we haven't yet taken our European",
    "start": "1671440",
    "end": "1676799"
  },
  {
    "text": "operations to be multi-regional and we have to figure out how to fail our European operations over to the Amazon",
    "start": "1676799",
    "end": "1683000"
  },
  {
    "text": "East Coast Data Center I think that's probably the the model we need to do",
    "start": "1683000",
    "end": "1688559"
  },
  {
    "start": "1688000",
    "end": "1739000"
  },
  {
    "text": "there so in uh in thinking where we got to here there's there's a a a variety of",
    "start": "1688600",
    "end": "1695880"
  },
  {
    "text": "different tools um uh there's there's tools to uh to enable redundancy at lots",
    "start": "1695880",
    "end": "1702960"
  },
  {
    "text": "of different levels um to make sure that in in many different circumstances to do",
    "start": "1702960",
    "end": "1708000"
  },
  {
    "text": "with with failing Hardware uh failing infrastructure uh failing networks uh",
    "start": "1708000",
    "end": "1714080"
  },
  {
    "text": "software bugs that we've introduced software bugs that are latent in our systems uh data bugs um uh software and",
    "start": "1714080",
    "end": "1722559"
  },
  {
    "text": "firmware bugs that get pushed through Amazon stuff uh there's a pattern for each of these things uh that helps us",
    "start": "1722559",
    "end": "1728640"
  },
  {
    "text": "build systems that don't Cascade and fail uh but which degrade slowly instead",
    "start": "1728640",
    "end": "1734039"
  },
  {
    "text": "um and I've described some of those things um and uh talked about some of those details so I wanted to sort of",
    "start": "1734039",
    "end": "1742679"
  },
  {
    "text": "bring us to kind of a conclusion here with a key observation from my perspective when we see a failure when I",
    "start": "1742679",
    "end": "1751360"
  },
  {
    "text": "see a failure and I and I look at my team it's it's it's important to do the postmodern to figure out what went wrong",
    "start": "1751360",
    "end": "1758880"
  },
  {
    "text": "um why did it fail um what can we do better next time um but it's important",
    "start": "1758880",
    "end": "1765760"
  },
  {
    "text": "also to remember that trying hard is not going to cut it um trying harder",
    "start": "1765760",
    "end": "1772279"
  },
  {
    "text": "is is a at best a linear response by trying trying twice as hard by working",
    "start": "1772279",
    "end": "1778000"
  },
  {
    "text": "Harder by working smarter by hiring better people um we get to at best",
    "start": "1778000",
    "end": "1783760"
  },
  {
    "text": "reduce the number of failures in a linear sense and it's probably more logarithmic than that too um but in fact",
    "start": "1783760",
    "end": "1789760"
  },
  {
    "text": "is we have more people and more work to do and more changes to push um the problem gets exponentially harder um not",
    "start": "1789760",
    "end": "1797240"
  },
  {
    "text": "linearly and not logarithmically harder and so trying harder just isn't going to do it so we do need to be great at",
    "start": "1797240",
    "end": "1804039"
  },
  {
    "text": "execution um we really need to really understand how to work well but it's",
    "start": "1804039",
    "end": "1810399"
  },
  {
    "text": "execution not just in being in in avoiding bugs because bugs are unavoidable it's in building",
    "start": "1810399",
    "end": "1816360"
  },
  {
    "text": "architectures that are resilient and tolerant of bugs it's about embracing failure not only of Hardware but also of",
    "start": "1816360",
    "end": "1823039"
  },
  {
    "text": "software and expecting that it's going to fail just like that Rusty Bridge Bolt",
    "start": "1823039",
    "end": "1828559"
  },
  {
    "text": "um has six other bolts to butress it so the bridge doesn't fall down um so too",
    "start": "1828559",
    "end": "1833799"
  },
  {
    "text": "our software is not going to be as perfect and repeatable as it is tempting",
    "start": "1833799",
    "end": "1839679"
  },
  {
    "text": "to think of it as being um it's going to have faults and failures um and we're",
    "start": "1839679",
    "end": "1845159"
  },
  {
    "text": "going to need to build that same kind of redundancy in order to be able to avoid those kinds of problems and so instead",
    "start": "1845159",
    "end": "1852440"
  },
  {
    "text": "of me pounding the table and threatening to fire the person who caused the problem um I have to be thoughtful about",
    "start": "1852440",
    "end": "1860799"
  },
  {
    "start": "1860000",
    "end": "1901000"
  },
  {
    "text": "what what systemic problem caus us to build an architecture where that one fault that somebody introduced uh could",
    "start": "1860799",
    "end": "1867720"
  },
  {
    "text": "cause a significant failure and uh you know we we struggled um many of you may",
    "start": "1867720",
    "end": "1874480"
  },
  {
    "text": "have noticed that that we released a pretty significant upgrade um today um",
    "start": "1874480",
    "end": "1879639"
  },
  {
    "text": "new TV experience and just last night we had one of these cascading failures at",
    "start": "1879639",
    "end": "1885399"
  },
  {
    "text": "just the most inopportune moment it's Absolut absolutely unbelievable and it turned out that it was a bunch of image",
    "start": "1885399",
    "end": "1891880"
  },
  {
    "text": "assets um for glyphs and buttons uh stored on a net app server back in our",
    "start": "1891880",
    "end": "1897039"
  },
  {
    "text": "old data center that we had all forgotten even existed how can we have how could we",
    "start": "1897039",
    "end": "1904960"
  },
  {
    "start": "1901000",
    "end": "1967000"
  },
  {
    "text": "have a dependency like that that we haven't figured out it's just unimaginable and yet the",
    "start": "1904960",
    "end": "1911880"
  },
  {
    "text": "truth is that we've built massively complicated systems with thousands or tens of thousands of components and it's",
    "start": "1911880",
    "end": "1919200"
  },
  {
    "text": "very very hard to get those right and so this evening I won't be going home and",
    "start": "1919200",
    "end": "1924440"
  },
  {
    "text": "looking for a head I'll be going home and looking to how do we get better at",
    "start": "1924440",
    "end": "1930120"
  },
  {
    "text": "tracking those kinds of dependencies how do we get better at thinking about how to do it differently how to how to build",
    "start": "1930120",
    "end": "1936480"
  },
  {
    "text": "those six bolts instead of one to hold that bridge band together and so that's",
    "start": "1936480",
    "end": "1942399"
  },
  {
    "text": "the story I wanted to share with you today um and I'm sure there's going to be a bunch of inter questions I'm",
    "start": "1942399",
    "end": "1949120"
  },
  {
    "text": "interested to learn what architectural features uh you guys have figured out uh",
    "start": "1949120",
    "end": "1955360"
  },
  {
    "text": "to ensure availability scale and performance at rapid rates of change in those Cloud native Global highly",
    "start": "1955360",
    "end": "1962840"
  },
  {
    "text": "available um systems that we're all trying to build",
    "start": "1962840",
    "end": "1969080"
  },
  {
    "start": "1967000",
    "end": "1975000"
  },
  {
    "text": "questions there's mics here if you want to run to a mic or you can shout out and I'll",
    "start": "1969080",
    "end": "1974240"
  },
  {
    "text": "repeat Whata your region to go out say again what caused the region level failure what caused the region level",
    "start": "1974240",
    "end": "1981639"
  },
  {
    "text": "failure um we've we've had we've had casional troubles with elb elastic load",
    "start": "1981639",
    "end": "1988720"
  },
  {
    "text": "balancer um that of course is necessarily shared between zones uh so",
    "start": "1988720",
    "end": "1993880"
  },
  {
    "text": "that's been a that was our Christmas Eve failure for example was an elb failure um pretty comfortable that that",
    "start": "1993880",
    "end": "2001120"
  },
  {
    "text": "architectural changes and and software changes have made that less likely um",
    "start": "2001120",
    "end": "2006919"
  },
  {
    "text": "the the region failure we had um back a a few weeks ago that we were",
    "start": "2006919",
    "end": "2012000"
  },
  {
    "text": "successfully able to recover from um was a was in part an Amazon Network failure",
    "start": "2012000",
    "end": "2018559"
  },
  {
    "text": "um and it was in large part um a software failure on our side uh that caused that to Cascade and ripple",
    "start": "2018559",
    "end": "2024559"
  },
  {
    "text": "through and so in that case um it's hard to blame Amazon it's easy to blame Amazon too right because you know their",
    "start": "2024559",
    "end": "2029840"
  },
  {
    "text": "server should be perfect but their server going to have bugs and faults and failures too and and the bug stops here",
    "start": "2029840",
    "end": "2036120"
  },
  {
    "text": "we have to engineer and architect in a way that makes us resilient to all of those kinds of failure the hardware will",
    "start": "2036120",
    "end": "2041679"
  },
  {
    "text": "fail the zones will fail the regions will fail and we just have to figure out how to build around that it's just like",
    "start": "2041679",
    "end": "2048240"
  },
  {
    "text": "the bridge builder you know the B the bolts will go Rusty the wind will blow at a high speed and the snow will fall",
    "start": "2048240",
    "end": "2054118"
  },
  {
    "text": "uh on on the wrong side of the of the highway and so I think there's there's from every",
    "start": "2054119",
    "end": "2060720"
  },
  {
    "text": "failure there's a lesson to be learned about how to build things that are more resilient",
    "start": "2060720",
    "end": "2066440"
  },
  {
    "text": "uh so I I'm curious because um often when we talk about rapid rates change",
    "start": "2068000",
    "end": "2073280"
  },
  {
    "text": "and agile software most people talk about the web",
    "start": "2073280",
    "end": "2078599"
  },
  {
    "text": "tier or the UI and that seems to be an order of magnitude easier than data",
    "start": "2078599",
    "end": "2084079"
  },
  {
    "text": "tiers moving at that speed especially when we start talking about data being",
    "start": "2084079",
    "end": "2089800"
  },
  {
    "text": "denormalized often when you change the code all of the data needs to change um",
    "start": "2089800",
    "end": "2095599"
  },
  {
    "text": "I wonder if you run into those sorts of challenges and what do what do you do about them like data scheme is changing",
    "start": "2095599",
    "end": "2101760"
  },
  {
    "text": "code changing that changes data and how do you how do you change rapidly when the data needs to change how do we",
    "start": "2101760",
    "end": "2108599"
  },
  {
    "text": "change rapidly when the data needs to change well I I um I didn't talk much about what cloud",
    "start": "2108599",
    "end": "2116119"
  },
  {
    "text": "native means to me um one of the features that that I think of cloud native is no sequel um and uh We've",
    "start": "2116119",
    "end": "2125520"
  },
  {
    "text": "chosen to embrace Cassandra as our key store persistence layer um and and we we",
    "start": "2125520",
    "end": "2132680"
  },
  {
    "text": "have our layer of of uh technology on top of that that's part of our open source plan that makes that more package",
    "start": "2132680",
    "end": "2139079"
  },
  {
    "text": "more more palatable the key there is that that um we have to we have to",
    "start": "2139079",
    "end": "2144640"
  },
  {
    "text": "embrace the fact that the the data doesn't live in a fixed schema uh that the schema can change and evolve um and",
    "start": "2144640",
    "end": "2151480"
  },
  {
    "text": "that the changes to the schema uh aren't instant they you don't you you you don't",
    "start": "2151480",
    "end": "2157640"
  },
  {
    "text": "stopped the entire system changed the schema um and then start it up again in a new schema uh the schema change",
    "start": "2157640",
    "end": "2163839"
  },
  {
    "text": "happens over a period the schema change happens as the data is updated over a period of hours days or months and that",
    "start": "2163839",
    "end": "2169800"
  },
  {
    "text": "we have to architect our systems to be able to deal with the old and the new at the same time um be able to update the",
    "start": "2169800",
    "end": "2175599"
  },
  {
    "text": "old to the new as it touches it and move forward on that basis and then of course they a a a key coroller of that is",
    "start": "2175599",
    "end": "2183280"
  },
  {
    "text": "eventual consistency um and statelessness of all the services too uh",
    "start": "2183280",
    "end": "2188720"
  },
  {
    "text": "if the if the if the services aren't stateless you can't try this path and",
    "start": "2188720",
    "end": "2194280"
  },
  {
    "text": "then and that fails try a different path without having uh the state be not mapped properly so the this the services",
    "start": "2194280",
    "end": "2201480"
  },
  {
    "text": "have to be stateless the state has to be captured in the persistence layer and the persistence layer with eventual",
    "start": "2201480",
    "end": "2207520"
  },
  {
    "text": "consistency um is able to uh to to reflect that that uh eventually correct",
    "start": "2207520",
    "end": "2214359"
  },
  {
    "text": "answer or eventually singular answer in a way that works but uh the the",
    "start": "2214359",
    "end": "2219839"
  },
  {
    "text": "semantics of eventual consistency are hard for us to get our heads around and we have to be thoughtful about that and",
    "start": "2219839",
    "end": "2224880"
  },
  {
    "text": "test it as well so I I I don't think there's a perfect good answer to it it's",
    "start": "2224880",
    "end": "2229920"
  },
  {
    "text": "it's one more piece of of thinking about resilience and robustness and redundancy",
    "start": "2229920",
    "end": "2235240"
  },
  {
    "text": "it's it's relativity of data if you like in some sense it's it's hard to think about hard to engineer around um but",
    "start": "2235240",
    "end": "2242480"
  },
  {
    "text": "it's necessary to build robust redundant systems yes",
    "start": "2242480",
    "end": "2249520"
  },
  {
    "text": "I'm not sure what a blue green deploy is I had a I had a blue system and a red black system so red black is is version",
    "start": "2252920",
    "end": "2259880"
  },
  {
    "text": "91 and version 92 and and we run version 92 is the red system um and we see it",
    "start": "2259880",
    "end": "2266000"
  },
  {
    "text": "through peak time and if it survives then we shut down the black system and reclaim the instances and then prep them",
    "start": "2266000",
    "end": "2272119"
  },
  {
    "text": "for version 94 tomorrow um so that's pretty straightforward but what if at version 82 we introduced a a fault that",
    "start": "2272119",
    "end": "2280760"
  },
  {
    "text": "meant that uh that on Sundays everything blows up and on Thursday we're fine and",
    "start": "2280760",
    "end": "2286119"
  },
  {
    "text": "on Friday we're fine and we've we've we've rolled forward and we're several versions forward of that and then on Sunday the date comes around and the",
    "start": "2286119",
    "end": "2292880"
  },
  {
    "text": "system blows up falling from the red to the black is not going to solve it because the bug's been in there for a long time it's a it's a time bomb um but",
    "start": "2292880",
    "end": "2300000"
  },
  {
    "text": "if we have a completely separate independently implemented system that maybe isn't capable of delivering the",
    "start": "2300000",
    "end": "2306560"
  },
  {
    "text": "fully comprehensive Dynamic answer but capable of delivering a workable degraded answer um then we can continue",
    "start": "2306560",
    "end": "2312680"
  },
  {
    "text": "to work while we fix the code bug and get back to the red black uh system that that works and so that blue system is a",
    "start": "2312680",
    "end": "2319640"
  },
  {
    "text": "deliberately minimal strip down um version that's capable of delivering at high volume so we don't have to have",
    "start": "2319640",
    "end": "2326000"
  },
  {
    "text": "lots of instances running a simple static answer um to to each of the queries and each of the levels that we",
    "start": "2326000",
    "end": "2332359"
  },
  {
    "text": "can sub in in the case of a logic bomb or a failure that's been latent for a long time",
    "start": "2332359",
    "end": "2339440"
  },
  {
    "text": "um you didn't specifically mention circuit breaker um but is the blue stand",
    "start": "2339560",
    "end": "2345920"
  },
  {
    "text": "system is tripped in I think it depends upon the the the",
    "start": "2345920",
    "end": "2352319"
  },
  {
    "start": "2349000",
    "end": "2437000"
  },
  {
    "text": "nature of that so that me I'm I'm sorry I should repeat the question the question was about circuit breaker and",
    "start": "2352319",
    "end": "2357599"
  },
  {
    "text": "it's and its relevance to red black versus blue um circuit breaker is is a",
    "start": "2357599",
    "end": "2364160"
  },
  {
    "text": "one of the components um that help helps us to uh to avoid pounding and pounding",
    "start": "2364160",
    "end": "2370000"
  },
  {
    "text": "and pounding a system that's that's decaying it it it causes the Upstream systems to stop pounding the downstream",
    "start": "2370000",
    "end": "2376119"
  },
  {
    "text": "system um and the Upstream systems to start defaulting to degraded Behavior",
    "start": "2376119",
    "end": "2381400"
  },
  {
    "text": "instead um one of the possible responses for a circuit breaker is to sub in a blue system at the right level another",
    "start": "2381400",
    "end": "2388319"
  },
  {
    "text": "response is to sub in a completely canned default answer um which was the pattern two before the blue that comes",
    "start": "2388319",
    "end": "2395480"
  },
  {
    "text": "along um we to figure out what the right answer is circuit breaker is one Tool uh",
    "start": "2395480",
    "end": "2400720"
  },
  {
    "text": "that helps us to uh avoid the uh the pounding that happens that could cause",
    "start": "2400720",
    "end": "2406160"
  },
  {
    "text": "cascading failure",
    "start": "2406160",
    "end": "2411319"
  },
  {
    "text": "so with",
    "start": "2411319",
    "end": "2415079"
  },
  {
    "text": "cl job in a different company you know an",
    "start": "2420760",
    "end": "2425800"
  },
  {
    "text": "Enterprise leg stuff going on now you thoughts or guid how you can",
    "start": "2425800",
    "end": "2432960"
  },
  {
    "text": "people to get their head around that so the the question",
    "start": "2432960",
    "end": "2440400"
  },
  {
    "start": "2437000",
    "end": "2694000"
  },
  {
    "text": "is cloud native um uh I had Netflix had the the luxury of a blank sheet of paper",
    "start": "2440400",
    "end": "2448400"
  },
  {
    "text": "the question I supposes um and that uh we could start from scratch and and if",
    "start": "2448400",
    "end": "2454280"
  },
  {
    "text": "we didn't have the luxur of a blank sheet of paper how would we get there",
    "start": "2454280",
    "end": "2459240"
  },
  {
    "text": "um that's a tough one maybe Ras writing is a good start NetFlix is",
    "start": "2459560",
    "end": "2465100"
  },
  {
    "text": "[Laughter] hiring um we we didn't really have a blank",
    "start": "2465100",
    "end": "2472119"
  },
  {
    "text": "sheet of paper we had um we had 10 Years of Legacy code that we needed to use and",
    "start": "2472119",
    "end": "2478599"
  },
  {
    "text": "so our strategy um we we debated three different strategies one strategy was to",
    "start": "2478599",
    "end": "2484720"
  },
  {
    "text": "take the existing monolithic Java app and it's database and Port it into the cloud um and then start to layer on",
    "start": "2484720",
    "end": "2492240"
  },
  {
    "text": "redundancy on top of that we decided that that was a supremely bad idea um we had a different strategy",
    "start": "2492240",
    "end": "2500040"
  },
  {
    "text": "which was to uh to to build a uh to build a system with with sort of deep",
    "start": "2500040",
    "end": "2505520"
  },
  {
    "text": "functionality but no scale um and then start to deploy that into the cloud because it would allow us to fully",
    "start": "2505520",
    "end": "2511520"
  },
  {
    "text": "exercise all the functionality at low scale um and then we could figure out how to add the scale and then the",
    "start": "2511520",
    "end": "2518160"
  },
  {
    "text": "competing alternative was to take very thin slices of vertical functionality like the jobs page that",
    "start": "2518160",
    "end": "2525440"
  },
  {
    "text": "actually has no functionality at all except pulling the database of open rxs um and and how do you how do you take",
    "start": "2525440",
    "end": "2531839"
  },
  {
    "text": "that and you build it in a resilient redundant robust system and and today even today you see the legacy of that um",
    "start": "2531839",
    "end": "2539359"
  },
  {
    "text": "Netflix actually has um when you go to the e-commerce you visit dubdub dub.",
    "start": "2539359",
    "end": "2545440"
  },
  {
    "text": "netflix.com um when you go to choose movies you go to movies. netflix.com well movies. netflix.com was the",
    "start": "2545440",
    "end": "2551760"
  },
  {
    "text": "original cloud deployment um and dubdub duub was the old data center deployment and we gradually moved over one small",
    "start": "2551760",
    "end": "2558440"
  },
  {
    "text": "feature at a time from the data center to the cloud and we've spent 5 years getting there the only thing left in the",
    "start": "2558440",
    "end": "2565520"
  },
  {
    "text": "data center at this point is actually the billing subsystems that where we have not gotten through all of the socks",
    "start": "2565520",
    "end": "2570880"
  },
  {
    "text": "and PCI requirements uh for moving to the cloud but that will come uh by the end of this year or early next year here",
    "start": "2570880",
    "end": "2577880"
  },
  {
    "text": "and so I I would say the the model of of of move slowly one vertical piece of",
    "start": "2577880",
    "end": "2583240"
  },
  {
    "text": "functionality at time is a good pattern to to follow um what we learned is that",
    "start": "2583240",
    "end": "2588640"
  },
  {
    "text": "in fact we made several mistakes not much of the first things we moved over actually survived um we ended up ripping",
    "start": "2588640",
    "end": "2594559"
  },
  {
    "text": "them up and throwing them away and starting over um we did a lot of work with stdb for example and sdb was was a",
    "start": "2594559",
    "end": "2602400"
  },
  {
    "text": "nice tool that offered all the promise of of no Sequel and the capabilities we were looking for but in the end it",
    "start": "2602400",
    "end": "2609359"
  },
  {
    "text": "didn't give us quite the scale and performance that we cared about and it didn't allow us to do um the region to",
    "start": "2609359",
    "end": "2615160"
  },
  {
    "text": "region copies um in a way that we wanted and Amazon since caught up with new services but in the meantime uh we",
    "start": "2615160",
    "end": "2622200"
  },
  {
    "text": "actually discarded most of the stb stuff and went to Cassandra instead so we have Cassandra deployed in a in a region um",
    "start": "2622200",
    "end": "2629119"
  },
  {
    "text": "we have Cassandra deployed in another region then we have another cassander ring that ties those two regions together in fact we now have U some some",
    "start": "2629119",
    "end": "2637079"
  },
  {
    "text": "comp of four different regions and so those kinds of things are things we learned after the fact and we moved on",
    "start": "2637079",
    "end": "2643760"
  },
  {
    "text": "into we we actually we didn't internally decide that no SQL was fundamental right",
    "start": "2643760",
    "end": "2650280"
  },
  {
    "text": "from the beginning we actually used some um some uh uh MySQL RDS uh service at",
    "start": "2650280",
    "end": "2658160"
  },
  {
    "text": "First as well um but we quickly realized that that wasn't the right answer and got rid of that too and moved everything",
    "start": "2658160",
    "end": "2664440"
  },
  {
    "text": "to Cassandra and just a little bit of simple DB that's left and so moving",
    "start": "2664440",
    "end": "2669559"
  },
  {
    "text": "slowly vertical by vertical is a good way to uh learn understand develop Talent um we found some people were able",
    "start": "2669559",
    "end": "2677119"
  },
  {
    "text": "to move their shift shift their thinking and and and and and perform well in that space and others moved on to different",
    "start": "2677119",
    "end": "2683920"
  },
  {
    "text": "businesses and we've hired and turned over a lot of the team as well so tricky",
    "start": "2683920",
    "end": "2693319"
  },
  {
    "text": "question could you talk a little bit about how you do testing",
    "start": "2693960",
    "end": "2699520"
  },
  {
    "start": "2694000",
    "end": "3044000"
  },
  {
    "text": "orar um AB testing and multivariant testing good",
    "start": "2700240",
    "end": "2706079"
  },
  {
    "text": "um there's a uh there's a phenomenon that that uh I call hippo winds um who",
    "start": "2706079",
    "end": "2714000"
  },
  {
    "text": "knows what hippo wins stands for it's uh hippo is the highest paid person's",
    "start": "2714000",
    "end": "2720319"
  },
  {
    "text": "opinion um and that's often mine",
    "start": "2720319",
    "end": "2728359"
  },
  {
    "text": "and what I've learned is that I'm usually wrong and so hippo wins is a problem to",
    "start": "2729040",
    "end": "2734839"
  },
  {
    "text": "be avoided in a discussion or a debate um hippo wins is a way to build what the",
    "start": "2734839",
    "end": "2739880"
  },
  {
    "text": "boss wants and not what the customer wants um and that's a problem and so AB",
    "start": "2739880",
    "end": "2744920"
  },
  {
    "text": "testing is the ultimate answer to that if you think about different possibilities um and you build them all",
    "start": "2744920",
    "end": "2751200"
  },
  {
    "text": "and then you deploy them to customers and you get the feedback and the measurement then you know what actually works and a good example here is",
    "start": "2751200",
    "end": "2757240"
  },
  {
    "text": "actually the push we did this morning it's it's our fourth generation of TV technology um when we set out to build",
    "start": "2757240",
    "end": "2764000"
  },
  {
    "text": "Netflix on a TV screen um we went out we did a lot of call work we talked to a lot of customers we figured out what",
    "start": "2764000",
    "end": "2770040"
  },
  {
    "text": "people wanted and everybody everybody love the hierarchical drill down you want to see a genre you want to drill",
    "start": "2770040",
    "end": "2776440"
  },
  {
    "text": "into subg genres you want to drill down you want to drill down you want to have access to the whole catalog of 10,000",
    "start": "2776440",
    "end": "2781640"
  },
  {
    "text": "titles um and we built lots of paper prototypes and we developed and refined",
    "start": "2781640",
    "end": "2788359"
  },
  {
    "text": "and then we also thought that you know we've learned so many times in the past",
    "start": "2788359",
    "end": "2793599"
  },
  {
    "text": "that Simplicity wins and we've learned so many times in the past that um",
    "start": "2793599",
    "end": "2799119"
  },
  {
    "text": "actually keeping people away from the long tale of stuff that they might not be interested in is profitable and",
    "start": "2799119",
    "end": "2805559"
  },
  {
    "text": "worthwhile that we also built some prototypes that were two layers deep with no drill down where you could only",
    "start": "2805559",
    "end": "2811079"
  },
  {
    "text": "access the set typles that a recommendation engine was putting up and then qu sessions people said no no",
    "start": "2811079",
    "end": "2817839"
  },
  {
    "text": "that's too limiting I I really want to see everything give me the hierarchical version but we built it and we tested it",
    "start": "2817839",
    "end": "2823160"
  },
  {
    "text": "and we we fielded it to 250,000 customers in each version in fact we had three or four different versions with",
    "start": "2823160",
    "end": "2829319"
  },
  {
    "text": "variations and uh we we test mostly on brand new customers and so when somebody",
    "start": "2829319",
    "end": "2835800"
  },
  {
    "text": "signs up with Netflix there there's your typically 10 to 20 dice rolled that that",
    "start": "2835800",
    "end": "2842760"
  },
  {
    "text": "decide which version of tests um may be as many as many as 20 30 tests running",
    "start": "2842760",
    "end": "2848040"
  },
  {
    "text": "simultaneously that new customer will be allocated to um and in this case uh customers were round robin randomly",
    "start": "2848040",
    "end": "2854680"
  },
  {
    "text": "allocated to the the flat or the hierarchical or the other experience and then after a month or two or three or",
    "start": "2854680",
    "end": "2861040"
  },
  {
    "text": "six months we get to look at the statistics uh who's retained well who's watched the most where did they discover",
    "start": "2861040",
    "end": "2867680"
  },
  {
    "text": "the things they watch um and we get to to look at those variations and differences and decide that that one is",
    "start": "2867680",
    "end": "2874920"
  },
  {
    "text": "not what people said they wanted but it's the one one they responded to the best and that's the one we'll roll with",
    "start": "2874920",
    "end": "2881200"
  },
  {
    "text": "um there's there's a lot of stuff that goes along with that um it's expensive to build six different versions that are",
    "start": "2881200",
    "end": "2887160"
  },
  {
    "text": "slightly different in measure and so we we try to capture the essence of what we're trying to test and build a minimum",
    "start": "2887160",
    "end": "2893640"
  },
  {
    "text": "viable product uh field it deploy it and test it read the results um and then",
    "start": "2893640",
    "end": "2899480"
  },
  {
    "text": "polish it up and launch the one that wins um often we find that that building",
    "start": "2899480",
    "end": "2905599"
  },
  {
    "text": "uh six different versions to scale effectively is hard uh but maybe at 250,000 customers we don't have to scale",
    "start": "2905599",
    "end": "2912839"
  },
  {
    "text": "it we can build a crude simple version and rely on just overspending on the hardware to run in um but then when we",
    "start": "2912839",
    "end": "2918960"
  },
  {
    "text": "find the winner we discard the five that don't work and then we scale up we do the engineering work to make it",
    "start": "2918960",
    "end": "2924440"
  },
  {
    "text": "efficient and effective and perform well and then that's what we get to roll out um so there's there's uh lots of lots of",
    "start": "2924440",
    "end": "2933599"
  },
  {
    "text": "learning uh who to test with what to do with ex exting members um existing",
    "start": "2933599",
    "end": "2938960"
  },
  {
    "text": "members respond very differently to brand new members they have learned behavior often they dislike the new",
    "start": "2938960",
    "end": "2944760"
  },
  {
    "text": "thing that's actually better because it's different people dislike change and so how do you migrate existing customers",
    "start": "2944760",
    "end": "2950799"
  },
  {
    "text": "from something they like to something that's actually better as proven by the measurements on new customers without",
    "start": "2950799",
    "end": "2955960"
  },
  {
    "text": "making them feel betrayed and left behind how do you provide Bridge features how do you test those Bridge",
    "start": "2955960",
    "end": "2961240"
  },
  {
    "text": "features so testing is something that that we've spent a decade figuring out um and we still figure out every day we",
    "start": "2961240",
    "end": "2967880"
  },
  {
    "text": "learn new things about how to test effectively and get to better answers more quickly and more efficiently",
    "start": "2967880",
    "end": "2973520"
  },
  {
    "text": "technology wise",
    "start": "2973520",
    "end": "2976599"
  },
  {
    "text": "there um technology wise what do we do for AP testing the the there's there's a",
    "start": "2980520",
    "end": "2987200"
  },
  {
    "text": "fair amount of systems that we've built from the ground up that are the the ab allocator uh the ab test store um the",
    "start": "2987200",
    "end": "2995839"
  },
  {
    "text": "all of the metric logging stuff uh I mean big data is a is a Hot Topic but uh",
    "start": "2995839",
    "end": "3001559"
  },
  {
    "text": "um if you're going to track metrics you better make sure that every single metric you track is tagged with um with",
    "start": "3001559",
    "end": "3008599"
  },
  {
    "text": "the the the the test allocation of all the customers who are generating that metric so that you can slice every",
    "start": "3008599",
    "end": "3015319"
  },
  {
    "text": "data by the by the test characteristics you're looking at because what happens is the product manager is is looking at",
    "start": "3015319",
    "end": "3022160"
  },
  {
    "text": "the test results something not quite understandable and they want to delve into this metric and then they want to into that metric and then they want to",
    "start": "3022160",
    "end": "3028000"
  },
  {
    "text": "delve into the next one and unless you can disaggregate it by the test cell you're not going to be able to answer the questions they have in mind and so",
    "start": "3028000",
    "end": "3035119"
  },
  {
    "text": "there's there's a lot of setup in terms of making sure that you can uh tag and",
    "start": "3035119",
    "end": "3040680"
  },
  {
    "text": "qualify the data all the way through the system",
    "start": "3040680",
    "end": "3047760"
  },
  {
    "start": "3044000",
    "end": "3114000"
  },
  {
    "text": "yes uh do we leverage a black deployments as part of AB testing um no",
    "start": "3050799",
    "end": "3056640"
  },
  {
    "text": "a little bit the other way around um we we often use so what what often happens",
    "start": "3056640",
    "end": "3061920"
  },
  {
    "text": "is that we we'll we'll we'll build the new test subsystems um and we'll deploy",
    "start": "3061920",
    "end": "3066960"
  },
  {
    "text": "them turned off so we we have the ability to to keep the allocator at zero and we'll deploy the system and then at",
    "start": "3066960",
    "end": "3074359"
  },
  {
    "text": "off peak time we'll turn it on for a few percentage and start to allocate a few people um and get to see the behavior",
    "start": "3074359",
    "end": "3080440"
  },
  {
    "text": "and the outcomes um and then if we like that we'll dial it up to 5% or 10% um",
    "start": "3080440",
    "end": "3086359"
  },
  {
    "text": "and uh often what happens is that in the first two or 5% we find that the test wasn't implemented properly and it's not",
    "start": "3086359",
    "end": "3092880"
  },
  {
    "text": "delivering the functionality we really expected or it's not scaling well or it's not performing well um and then",
    "start": "3092880",
    "end": "3098880"
  },
  {
    "text": "we're able to turn the test off fix the problem deploy it again and then dial up the scale again so I would say the the",
    "start": "3098880",
    "end": "3106359"
  },
  {
    "text": "the AP test mechanism is another vehicle we use uh to help achieve the scale and",
    "start": "3106359",
    "end": "3111559"
  },
  {
    "text": "availability that we need yes speak to the granularity of the",
    "start": "3111559",
    "end": "3118280"
  },
  {
    "start": "3114000",
    "end": "3221000"
  },
  {
    "text": "the red black on kind of the component level you know kind of how many components",
    "start": "3118280",
    "end": "3124079"
  },
  {
    "text": "you have the flexibility to deploy for that red um the the granularity of the",
    "start": "3124079",
    "end": "3130839"
  },
  {
    "text": "red black deployment at the component level um I I would say that the tools",
    "start": "3130839",
    "end": "3136240"
  },
  {
    "text": "exist to deploy it at any level um that we choose to deploy it at",
    "start": "3136240",
    "end": "3142480"
  },
  {
    "text": "um there's there's a uh there's a challenge with getting people to use all the tools all the",
    "start": "3142480",
    "end": "3149520"
  },
  {
    "text": "time um if you've successfully deployed a piece of simple software um 10 or 100",
    "start": "3149520",
    "end": "3155520"
  },
  {
    "text": "times without having a problem then the complexity of going through the red black deployment and waiting and then deploying it in the in the next region",
    "start": "3155520",
    "end": "3162599"
  },
  {
    "text": "then waiting and deploying it again it feels honorous and challenging and it feels like it's slowing down",
    "start": "3162599",
    "end": "3168520"
  },
  {
    "text": "progress and forward motion and so people attempted to uh to sidestep the",
    "start": "3168520",
    "end": "3174000"
  },
  {
    "text": "the the process and to to to launch the thing directly um and then one day of course they do launch failure and it's",
    "start": "3174000",
    "end": "3180599"
  },
  {
    "text": "problem you have to sort of step back and get people to think again hm there really is value to this thing the the",
    "start": "3180599",
    "end": "3187040"
  },
  {
    "text": "cascading failures thing is important if if uh if you think there's a 99% chance",
    "start": "3187040",
    "end": "3193240"
  },
  {
    "text": "that you're going to push this code and it's going to be correct then you're tempted to push it because that means that you move forward far more quickly",
    "start": "3193240",
    "end": "3199240"
  },
  {
    "text": "but you have to remember that your failure might take out a thousand other people's work um and you know loss of",
    "start": "3199240",
    "end": "3206040"
  },
  {
    "text": "productivity for a day while you fix and remediate the problem and get everything back up and running if you do cause a",
    "start": "3206040",
    "end": "3211280"
  },
  {
    "text": "cascading failure and so it's reminding people to be thoughtful about the implications of the of the potential",
    "start": "3211280",
    "end": "3217799"
  },
  {
    "text": "failure that helps to get us to the right technology yeah",
    "start": "3217799",
    "end": "3226000"
  },
  {
    "start": "3221000",
    "end": "3312000"
  },
  {
    "text": "how much testing do we do pre-release um usability testing functionality testing",
    "start": "3245480",
    "end": "3253000"
  },
  {
    "text": "um I would say not that much um we obviously we do do testing we do do unit",
    "start": "3253000",
    "end": "3258720"
  },
  {
    "text": "testing we do do testing at of performance and what have you it's it's very very hard to to make load tests",
    "start": "3258720",
    "end": "3266119"
  },
  {
    "text": "that that uh that are as Nimble and evolve as quickly as as the requirements",
    "start": "3266119",
    "end": "3271280"
  },
  {
    "text": "of your system and it's very very easy to do a red black deployment and and see what actually happens and so when you've",
    "start": "3271280",
    "end": "3278040"
  },
  {
    "text": "got the tools to to get it out live quickly um nimbleness and Agility seems to suggest it's a good way to go so I",
    "start": "3278040",
    "end": "3285079"
  },
  {
    "text": "think you probably be surprised how little upfront testing and and validation we do we're pretty serious",
    "start": "3285079",
    "end": "3291520"
  },
  {
    "text": "about code reviews and and uh and and thinking carefully about what you're",
    "start": "3291520",
    "end": "3296920"
  },
  {
    "text": "about to do uh but then trying to build lots of comprehensive tests and particularly load tests that's not very",
    "start": "3296920",
    "end": "3303400"
  },
  {
    "text": "profitable we just push the thing out with the ability to turn it off and roll it back quickly with through a red black",
    "start": "3303400",
    "end": "3308559"
  },
  {
    "text": "deployment or through turning off an AB",
    "start": "3308559",
    "end": "3312160"
  },
  {
    "start": "3312000",
    "end": "3400000"
  },
  {
    "text": "test I apologize how do we Define how do you define so that",
    "start": "3318720",
    "end": "3327480"
  },
  {
    "text": "how do we how do we Define the data architecture so it survives in a regional failure um we use we use",
    "start": "3327799",
    "end": "3335680"
  },
  {
    "text": "Cassandra in a region um and then we have a a next tier of Cassandra that",
    "start": "3335680",
    "end": "3342079"
  },
  {
    "text": "replicates the important data from that region to another region not all data is replicated but the data that's necessary",
    "start": "3342079",
    "end": "3348760"
  },
  {
    "text": "to provide service for a customer fails from one region to the other um that's copied across and so um the the the that",
    "start": "3348760",
    "end": "3358200"
  },
  {
    "text": "higher level Cassandra ring keeps the opposite region version um within a",
    "start": "3358200",
    "end": "3363680"
  },
  {
    "text": "second or two of of what's over here um and that means that you know if there's a failure you can fault back to the",
    "start": "3363680",
    "end": "3370160"
  },
  {
    "text": "other region and essentially get the same data right away so that there really is no giant problem there um the",
    "start": "3370160",
    "end": "3376920"
  },
  {
    "text": "the only concern potentially happens when you've pushed a piece of code in one region um that effectively changes",
    "start": "3376920",
    "end": "3384400"
  },
  {
    "text": "the data representation the schema and that schema starts to replicate into the other region and when you fail over to",
    "start": "3384400",
    "end": "3390280"
  },
  {
    "text": "the other region you've got old code there that doesn't expect that data so we have to be thoughtful about forward",
    "start": "3390280",
    "end": "3395799"
  },
  {
    "text": "and backward compatibility of the data structures in the persistent store just uh run for about one or two",
    "start": "3395799",
    "end": "3403119"
  },
  {
    "start": "3400000",
    "end": "3456000"
  },
  {
    "text": "more questions I think",
    "start": "3403119",
    "end": "3406160"
  },
  {
    "text": "yeah many's how many how many of these",
    "start": "3409640",
    "end": "3415760"
  },
  {
    "text": "components each week or month like what's the Aver um do we we have a lot of",
    "start": "3415760",
    "end": "3422559"
  },
  {
    "text": "components do we have an estimate of how many chip each month I I would I would say that in round figures about a",
    "start": "3422559",
    "end": "3429880"
  },
  {
    "text": "thousand components um most of them are evolving at least weekly um most of",
    "start": "3429880",
    "end": "3435720"
  },
  {
    "text": "those components have a a team that's that owns a bunch of them that iterates and evolves them pretty quickly um I'm",
    "start": "3435720",
    "end": "3443280"
  },
  {
    "text": "told that our tracking system does ref sort of upwards of a thousand changes a day so there's you know certainly lots",
    "start": "3443280",
    "end": "3449680"
  },
  {
    "text": "of activity going on and that certainly is the Big Driver of instability",
    "start": "3449680",
    "end": "3455520"
  },
  {
    "text": "too in the back I'm I'm sorry you can you you want",
    "start": "3455760",
    "end": "3463000"
  },
  {
    "start": "3456000",
    "end": "3521000"
  },
  {
    "text": "to run to the mic there sorry so does your red black uh",
    "start": "3463000",
    "end": "3469559"
  },
  {
    "text": "deployment present a bottleneck as you're waiting to verify that it's correct you said in some cases it was 24",
    "start": "3469559",
    "end": "3475079"
  },
  {
    "text": "hours um does that mean no one else can deploy in that time period does the does the red black",
    "start": "3475079",
    "end": "3481480"
  },
  {
    "text": "deployment present a bottleneck nobody else can use that that that window of time it it does mean that that you have",
    "start": "3481480",
    "end": "3487240"
  },
  {
    "text": "to you have to designate your regions in a sequence so that um all the changes",
    "start": "3487240",
    "end": "3492839"
  },
  {
    "text": "Ripple down in the same order you can't have changes Rippling across the thing and if they depend upon each other um",
    "start": "3492839",
    "end": "3498160"
  },
  {
    "text": "but there's no reason that you can't push to the to the uh to the east coast first and then the west coast and then",
    "start": "3498160",
    "end": "3504240"
  },
  {
    "text": "before you've got to the West Coast with this change you can push the dependent change and then the next dependent change and then it all ripples down in",
    "start": "3504240",
    "end": "3509960"
  },
  {
    "text": "order um it's it certainly you know it's not fullprof and it requires thought and",
    "start": "3509960",
    "end": "3515599"
  },
  {
    "text": "care and attention but it doesn't it doesn't block you indefinitely otherwise you wouldn't be able to make any progress at all",
    "start": "3515599",
    "end": "3521599"
  },
  {
    "start": "3521000",
    "end": "3557000"
  },
  {
    "text": "thanks how many developers do you have at Netflix do um that's a good question it's the",
    "start": "3521599",
    "end": "3529680"
  },
  {
    "text": "the the whole team is is uh about 800ish something like that and that includes",
    "start": "3529680",
    "end": "3535160"
  },
  {
    "text": "product managers and it includes the the the metadata um authors and it includes the",
    "start": "3535160",
    "end": "3541319"
  },
  {
    "text": "taggers that that's one of the coolest jobs actually is watching movies that decide whether they're gritty or they",
    "start": "3541319",
    "end": "3546440"
  },
  {
    "text": "feature a strong female lead um but yeah I I I don't actually",
    "start": "3546440",
    "end": "3552359"
  },
  {
    "text": "know exactly how many development Engineers but think maybe a",
    "start": "3552359",
    "end": "3557119"
  },
  {
    "start": "3557000",
    "end": "3600000"
  },
  {
    "text": "half it I'm sorry is there an Uber traffic cop there is no over traffic cup",
    "start": "3562000",
    "end": "3567440"
  },
  {
    "text": "we try to preach the idea that that everybody is independent",
    "start": "3567440",
    "end": "3572599"
  },
  {
    "text": "um most changes require changes to some but not all subsystems um so often",
    "start": "3572599",
    "end": "3578200"
  },
  {
    "text": "there's there's an engineering manager or product manager who acts as the coordinator for a set of changes to make",
    "start": "3578200",
    "end": "3583520"
  },
  {
    "text": "sure that the changes to the five or the 10 or 20 systems happen in the right order but they're not necessarily",
    "start": "3583520",
    "end": "3589640"
  },
  {
    "text": "synchronized with everything else one of the implications of that is that if we're rolling out we've got two teams",
    "start": "3589640",
    "end": "3595319"
  },
  {
    "text": "rolling out two different tests it's entirely possible that that experience a of test one collides with experience X",
    "start": "3595319",
    "end": "3603160"
  },
  {
    "text": "of Test 2 um and so we have to make sure that you don't get cross allocated into both those tests at once so there's",
    "start": "3603160",
    "end": "3608640"
  },
  {
    "text": "there's a bunch of rules about cross allocating of tests that we have to be careful about other than the test cross",
    "start": "3608640",
    "end": "3613720"
  },
  {
    "text": "allocation no we just we just let things run on each individual pce so that's",
    "start": "3613720",
    "end": "3619039"
  },
  {
    "text": "that's the way we get the scale with a large number of Engineers all working together yeah",
    "start": "3619039",
    "end": "3627280"
  },
  {
    "text": "devops we how do we handle devops we we we by and large each team is responsible for their own operations and there's",
    "start": "3631039",
    "end": "3637839"
  },
  {
    "text": "there's a a core team that provides a lot of the engineering functions and services to to make that realistic um",
    "start": "3637839",
    "end": "3645599"
  },
  {
    "text": "but uh when when the component fails um there's somebody on the team that",
    "start": "3645599",
    "end": "3650839"
  },
  {
    "text": "authored that component is is on the page of Duty to respond to the failure and make sure that it",
    "start": "3650839",
    "end": "3656480"
  },
  {
    "text": "it's fixed and resolved",
    "start": "3656480",
    "end": "3659960"
  },
  {
    "text": "quickly yes I mean there's a core team that that sort of takes point on figuring out who to call um and that",
    "start": "3664039",
    "end": "3670000"
  },
  {
    "text": "does the immediate resilience the immediate shutting off of subsystems or failing over to a different region but",
    "start": "3670000",
    "end": "3676000"
  },
  {
    "text": "then it's okay who do we get in to really fix the problem last question",
    "start": "3676000",
    "end": "3684000"
  },
  {
    "text": "um each team decides its own process um and so there is no standard at all um",
    "start": "3690319",
    "end": "3695480"
  },
  {
    "text": "there are some standard tools that that people have and use um even that's not particularly standard we use git we use",
    "start": "3695480",
    "end": "3701880"
  },
  {
    "text": "Perce we use different interfaces it's a complete mix we we we practice the",
    "start": "3701880",
    "end": "3707559"
  },
  {
    "text": "notion of uh freedom and responsibility and that that's freedom to choose the best tools for the kind of work that",
    "start": "3707559",
    "end": "3714119"
  },
  {
    "text": "each team is doing and responsibility to use it carefully and not trip everybody else up and I'd say that we learn a lot",
    "start": "3714119",
    "end": "3721319"
  },
  {
    "text": "by having different teams do it in different ways and then sort of figuring out what's best practice and then spreading that",
    "start": "3721319",
    "end": "3728279"
  },
  {
    "text": "around okay well thanks very much um I hope that was useful",
    "start": "3728279",
    "end": "3734640"
  },
  {
    "text": "[Applause]",
    "start": "3735630",
    "end": "3738859"
  }
]