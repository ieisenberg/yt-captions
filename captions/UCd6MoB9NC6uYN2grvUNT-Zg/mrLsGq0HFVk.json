[
  {
    "text": "good evening everybody thank you so much for joining us on this first day of",
    "start": "439",
    "end": "6359"
  },
  {
    "text": "reinvent at least for some of us we have a packed session today I'm gonna walk",
    "start": "6359",
    "end": "12719"
  },
  {
    "text": "you through Kinesis video streams talk to you about what it means to ingest data from media pipelines store it",
    "start": "12719",
    "end": "19920"
  },
  {
    "text": "process it and walk you through a demo of building such a pipeline end to end and even more excitingly I have with me",
    "start": "19920",
    "end": "27420"
  },
  {
    "text": "today a meet Vaswani who's the head of infrastructure services for Amazon go a",
    "start": "27420",
    "end": "32668"
  },
  {
    "text": "close customer and partner of Kinesis video streams who will walk you through how Amazon goes just walk out technology",
    "start": "32669",
    "end": "40050"
  },
  {
    "text": "is built using Kinesis video streams among other services so before we dive",
    "start": "40050",
    "end": "45510"
  },
  {
    "text": "into the details today how many of you have actually had a chance to play with",
    "start": "45510",
    "end": "51840"
  },
  {
    "text": "Kinesis video in any shape or form show of hands",
    "start": "51840",
    "end": "56329"
  },
  {
    "text": "not too many how many of you have video analytics based applications that you've",
    "start": "56989",
    "end": "63570"
  },
  {
    "text": "either already built or are thinking about building in your organization's today a lot more that's exciting and",
    "start": "63570",
    "end": "70710"
  },
  {
    "text": "encouraging and hopefully today you will go back with some thoughts some knowledge and perhaps a little bit of",
    "start": "70710",
    "end": "77240"
  },
  {
    "text": "inspiration on how you can get about on that journey and you've already built amazing stuff I would love for you to",
    "start": "77240",
    "end": "83850"
  },
  {
    "text": "come back and tell me about it so that I can learn from you so we're gonna get in all of you Kinesis video streams so",
    "start": "83850",
    "end": "90000"
  },
  {
    "text": "we're gonna look at target use cases we're gonna spend some time understanding what it means to have",
    "start": "90000",
    "end": "96500"
  },
  {
    "text": "producer software as we call it or a set of software assets that have to build and and run on media pipelines to grab",
    "start": "96500",
    "end": "104340"
  },
  {
    "text": "the frames and then send them over to the AWS endpoint we will learn more",
    "start": "104340",
    "end": "109680"
  },
  {
    "text": "about the video processing analytics ecosystem that is built around Kinesis",
    "start": "109680",
    "end": "115200"
  },
  {
    "text": "video streams and I'll do a little bit of a demo and then a meet will come on stage to talk about here's a 15 years",
    "start": "115200",
    "end": "121020"
  },
  {
    "text": "experience with the Kinesis video before I come back and take some questions about the service we're all here today",
    "start": "121020",
    "end": "130440"
  },
  {
    "text": "because clearly we feel that video is now an important part of how we're thinking",
    "start": "130440",
    "end": "135590"
  },
  {
    "text": "about advancing our business many many many devices out there devices",
    "start": "135590",
    "end": "141890"
  },
  {
    "text": "that are embedded in our home appliances devices that are present at the intersection of street corners on cities",
    "start": "141890",
    "end": "148630"
  },
  {
    "text": "devices camera based devices that are part of manufacturing and automation",
    "start": "148630",
    "end": "154670"
  },
  {
    "text": "systems and what's common in increasingly number of these devices is there is the mind-boggling number of",
    "start": "154670",
    "end": "161090"
  },
  {
    "text": "sensors that are on it and one of the preeminent sensors that we're seeing is the image sensor connected devices was",
    "start": "161090",
    "end": "167960"
  },
  {
    "text": "image sensor ends up creating this massive opportunity to do something",
    "start": "167960",
    "end": "173720"
  },
  {
    "text": "meaningful with this video data outside of simply playing back and watching it",
    "start": "173720",
    "end": "180670"
  },
  {
    "text": "however as we went down in this journey we learned a few things that building a",
    "start": "180670",
    "end": "186140"
  },
  {
    "text": "video ingestion system it's kind of hard why is it hard it's hard because it's",
    "start": "186140",
    "end": "193220"
  },
  {
    "text": "fundamentally a multidisciplinary problem what do I mean by that the",
    "start": "193220",
    "end": "198440"
  },
  {
    "text": "journey of video data typically starts with the device and embedded devices are",
    "start": "198440",
    "end": "204709"
  },
  {
    "text": "not the easiest things to program there is a bewildering array of hardware",
    "start": "204709",
    "end": "209989"
  },
  {
    "text": "firmware software combinations that have to be direct those challenges have to be",
    "start": "209989",
    "end": "215989"
  },
  {
    "text": "surmounted so that you can write the right kind of lower-level software that",
    "start": "215989",
    "end": "221900"
  },
  {
    "text": "can reliably connect into the media pipeline and stream into the cloud once you were able to figure all that stuff",
    "start": "221900",
    "end": "227840"
  },
  {
    "text": "out you actually have to build a reliable scalable elastic cloud service",
    "start": "227840",
    "end": "233510"
  },
  {
    "text": "that can accept these video streams do so securely and be able to vend those",
    "start": "233510",
    "end": "239150"
  },
  {
    "text": "streams to your applications for downstream processing and of course you",
    "start": "239150",
    "end": "245150"
  },
  {
    "text": "have to do all of this in an operationally excellent manner so can it be done by yourself absolutely I'm not sure some of you have",
    "start": "245150",
    "end": "251870"
  },
  {
    "text": "done the same but is it easy is it it's a pain free today it's not and that",
    "start": "251870",
    "end": "257840"
  },
  {
    "text": "ultimately became the motivation for Kinesis video streams just by way of context some of you may have heard of",
    "start": "257840",
    "end": "264229"
  },
  {
    "text": "the Amazon Kinesis data family of Farex Kinesis be dreams or five holes and and Kinesis",
    "start": "264229",
    "end": "270230"
  },
  {
    "text": "video streams intends to solve the same qualitative problems but to do so for",
    "start": "270230",
    "end": "276230"
  },
  {
    "text": "audio video and related time encode metadata so really what we want to help",
    "start": "276230",
    "end": "281780"
  },
  {
    "text": "is have customers be able to securely connect and stream from many many many",
    "start": "281780",
    "end": "287360"
  },
  {
    "text": "devices devices be able to focus on building their own vision enabled",
    "start": "287360",
    "end": "293000"
  },
  {
    "text": "applications not have to be about how to build playback of video be it live or",
    "start": "293000",
    "end": "300380"
  },
  {
    "text": "on-demand and to be able to do so in a in a fully managed secure reliable form",
    "start": "300380",
    "end": "308140"
  },
  {
    "text": "some of you may already have meaningfully interesting use cases in your head or things that are trying to",
    "start": "308140",
    "end": "314180"
  },
  {
    "text": "prototype today but sound the thing that we're seeing now as customers adopt Kinesis video streams and some of your",
    "start": "314180",
    "end": "320060"
  },
  {
    "text": "use cases might matter these include the following there's a whole bunch of use",
    "start": "320060",
    "end": "325430"
  },
  {
    "text": "cases that are emerging around the home broadly speaking I would argue that",
    "start": "325430",
    "end": "331240"
  },
  {
    "text": "possibly 50% upwards of us have some sort of home security camera already in",
    "start": "331240",
    "end": "337040"
  },
  {
    "text": "our homes and and that's where the brain immediately goes to but there are so many other home appliances or devices",
    "start": "337040",
    "end": "343880"
  },
  {
    "text": "that are now getting imbued with image sensors that makes it easy to now build a whole bunch of different use cases",
    "start": "343880",
    "end": "349930"
  },
  {
    "text": "this is an example of a pet monitor and as we will learn later this week not",
    "start": "349930",
    "end": "355550"
  },
  {
    "text": "only are there things to monitor pets but that's robotic pets that can monitor you there are bill with Kinesis video",
    "start": "355550",
    "end": "361880"
  },
  {
    "text": "streams another big use case is broadly in the public sector smart city domain",
    "start": "361880",
    "end": "369440"
  },
  {
    "text": "where you've got a number of cameras on city intersections as part of critical",
    "start": "369440",
    "end": "374870"
  },
  {
    "text": "national infrastructure as part of trying to harness understanding of how",
    "start": "374870",
    "end": "380360"
  },
  {
    "text": "traffic flows operate and the same cameras are now fundamental to be able",
    "start": "380360",
    "end": "386090"
  },
  {
    "text": "to drive for emergency first responder kind of scenarios and we see customers",
    "start": "386090",
    "end": "392050"
  },
  {
    "text": "building building machine learning applications that can take the input video streams and then do things like",
    "start": "392050",
    "end": "398539"
  },
  {
    "text": "license-plate recognition on those streams using some of our email services and then of course there's a",
    "start": "398539",
    "end": "406300"
  },
  {
    "text": "whole Greenfield set of opportunities that are broadly being created in the",
    "start": "406300",
    "end": "412389"
  },
  {
    "text": "manufacturing automation space we're just like industrial sensors enabled",
    "start": "412389",
    "end": "418540"
  },
  {
    "text": "customers to understand what is happening in their infrastructure they can now do the same by using machine",
    "start": "418540",
    "end": "424330"
  },
  {
    "text": "vision let's not transition to do a quick product overview there are four",
    "start": "424330",
    "end": "431139"
  },
  {
    "text": "things to kind of bear in mind when you think about the Kinesis video streams product life starts with number one",
    "start": "431139",
    "end": "438729"
  },
  {
    "text": "a producer SDK a software asset that enables you to capture the media created",
    "start": "438729",
    "end": "445870"
  },
  {
    "text": "on the device and then securely and reliably send it to an AWS resource",
    "start": "445870",
    "end": "452169"
  },
  {
    "text": "called a video stream and now the stream is responsible for the durable capture",
    "start": "452169",
    "end": "460229"
  },
  {
    "text": "reliable capture and durable storage of the media and making it available for applications and the applications can be",
    "start": "460229",
    "end": "467140"
  },
  {
    "text": "of the real-time variety this is where obviously low latency is important we you value frame-by-frame analytics or",
    "start": "467140",
    "end": "473700"
  },
  {
    "text": "these applications could be ad hoc batch driven which means that latency may not",
    "start": "473700",
    "end": "479830"
  },
  {
    "text": "be the most important criteria but you still want access to fragments some or all the fragments contained in the",
    "start": "479830",
    "end": "486460"
  },
  {
    "text": "stream for any kind of analytics the fourth construct is your application",
    "start": "486460",
    "end": "492729"
  },
  {
    "text": "this is where a lot of the interesting stuff is going to happen this could be a license plate recognition application",
    "start": "492729",
    "end": "498400"
  },
  {
    "text": "this could be a bet detector application this could be an application that allows you to do remote control of a drone or",
    "start": "498400",
    "end": "506620"
  },
  {
    "text": "off of a vehicle that is elsewhere but that is where your responsibility as",
    "start": "506620",
    "end": "512020"
  },
  {
    "text": "developers lies to go build that interesting thing of course with the help of variety of other eight of your",
    "start": "512020",
    "end": "517870"
  },
  {
    "text": "services so let's look at some of the details around the Kinesis video",
    "start": "517870",
    "end": "524800"
  },
  {
    "text": "producer now a lot of you when you start building with Kinesis video this is the first asset that you'll be looking at",
    "start": "524800",
    "end": "531660"
  },
  {
    "text": "important to clarify that this different than the AWS SDK assets and",
    "start": "531660",
    "end": "536950"
  },
  {
    "text": "the reason is that this SDK on the Kinesis video site is more than",
    "start": "536950",
    "end": "542890"
  },
  {
    "text": "syntactic sugar and best practices usage of the Kinesis video api's it certainly",
    "start": "542890",
    "end": "548350"
  },
  {
    "text": "does those things but what's important to understand about this SDK is that it",
    "start": "548350",
    "end": "554410"
  },
  {
    "text": "integrates with the underlying media pipeline at a very high level when you",
    "start": "554410",
    "end": "559510"
  },
  {
    "text": "take out your phone you've got an image sensor in it and I'm simplifying this you have an image sensor you've got some",
    "start": "559510",
    "end": "566620"
  },
  {
    "text": "sort of an encoding chip h.264 h.265 being common modules and and that at the",
    "start": "566620",
    "end": "572500"
  },
  {
    "text": "core level that constitutes a media by tonight the output of which is encoded bit frames and that's where the journey",
    "start": "572500",
    "end": "579700"
  },
  {
    "text": "starts and that's where the keenest video STK enables you to capture packaged and reliably and securely",
    "start": "579700",
    "end": "585970"
  },
  {
    "text": "stream those video frames and fragments into the cloud of course it by default",
    "start": "585970",
    "end": "592630"
  },
  {
    "text": "wraps in all of the best practices for authentication authorization and",
    "start": "592630",
    "end": "597910"
  },
  {
    "text": "provides you ways to do things such as insert metadata about what the camera",
    "start": "597910",
    "end": "605080"
  },
  {
    "text": "device itself is seeing or detecting as part of the fragment itself and these are all capabilities that are built into",
    "start": "605080",
    "end": "611740"
  },
  {
    "text": "the Kinesis video producer SDK and the way it's been built is it likes charts",
    "start": "611740",
    "end": "618250"
  },
  {
    "text": "in the platform independent layer part of the poor C code it is a bunch of Esso",
    "start": "618250",
    "end": "625150"
  },
  {
    "text": "files up outside of core camera manufacturers or embedded systems",
    "start": "625150",
    "end": "630490"
  },
  {
    "text": "engineers it is unlikely that you will use that it is more likely that as developers you will start your journey",
    "start": "630490",
    "end": "636850"
  },
  {
    "text": "on the object oriented layer where we've where the entire API set is duly wrapped",
    "start": "636850",
    "end": "642520"
  },
  {
    "text": "up in both C++ and Java forms and we've created that across a whole host of different operating systems we've also",
    "start": "642520",
    "end": "650560"
  },
  {
    "text": "produced darker images of that for those of you who are looking to kick the tires pretty quickly and get started",
    "start": "650560",
    "end": "658050"
  },
  {
    "text": "of course at AWS the thing that we enjoy and love the most is building fully",
    "start": "658770",
    "end": "664150"
  },
  {
    "text": "managed api's that just work and no different with Kinesis video streams we've got a set of control plane",
    "start": "664150",
    "end": "670999"
  },
  {
    "text": "api's and instead a data plane api's as",
    "start": "670999",
    "end": "676129"
  },
  {
    "text": "you can see just like many other services there are a whole host of create describe delete kind of api's but",
    "start": "676129",
    "end": "683509"
  },
  {
    "text": "something that is interesting in Kinesis video that i want to call out is the get data endpoint now this is an api",
    "start": "683509",
    "end": "690319"
  },
  {
    "text": "api call that is called by either the producer so the thing that is sending the data or by a consuming application",
    "start": "690319",
    "end": "697129"
  },
  {
    "text": "to request and gain access to the actual stream and this enables this kind of",
    "start": "697129",
    "end": "703999"
  },
  {
    "text": "decoupling if you will between the producers and the consumers and allows them to rendezvous on the same stream",
    "start": "703999",
    "end": "710809"
  },
  {
    "text": "and this is something unique and different thankfully this API and it's",
    "start": "710809",
    "end": "717559"
  },
  {
    "text": "built into the producer sdk so you don't explicitly have to program for the get data endpoint but for those of you who",
    "start": "717559",
    "end": "724189"
  },
  {
    "text": "end up writing raw software from scratch that's something to bear in mind all",
    "start": "724189",
    "end": "730540"
  },
  {
    "text": "streams have the ability to retain data indefinitely and you as developers can",
    "start": "731799",
    "end": "740720"
  },
  {
    "text": "choose to dial up or dial down the retention at any point in time and so the only interesting API that I'd want",
    "start": "740720",
    "end": "747829"
  },
  {
    "text": "to call out on this slide is the update data retention API so if you have a",
    "start": "747829",
    "end": "753799"
  },
  {
    "text": "super interesting stream that is monitoring a critical part of your",
    "start": "753799",
    "end": "759759"
  },
  {
    "text": "physical layout you may want for that stream to have 30 days retention on the",
    "start": "759759",
    "end": "765319"
  },
  {
    "text": "other hand you may have some streams that are pointed at at portions of your of your physical side that are not that",
    "start": "765319",
    "end": "771290"
  },
  {
    "text": "interesting and you may say hey I maybe I need a week's worth of attention and that's it and the cool thing is you can",
    "start": "771290",
    "end": "777529"
  },
  {
    "text": "always change this data retention at any point during the operation of the stream",
    "start": "777529",
    "end": "783910"
  },
  {
    "text": "so after the control plane api's let's now look at some of the data plane api's",
    "start": "785379",
    "end": "790809"
  },
  {
    "text": "for core data plane api's to bear in mind the most interesting api in a way",
    "start": "790809",
    "end": "798919"
  },
  {
    "text": "are the is the pair of put media and get media api's now all of you are very used to a",
    "start": "798919",
    "end": "805260"
  },
  {
    "text": "restful api model that AWS presents but",
    "start": "805260",
    "end": "810570"
  },
  {
    "text": "the put media and the get media api's are streaming api's which means that",
    "start": "810570",
    "end": "816300"
  },
  {
    "text": "they operate in a manner wherein once the producer grabs an endpoint and",
    "start": "816300",
    "end": "822570"
  },
  {
    "text": "starts submitting video frames and fragments to it it doesn't tear down the",
    "start": "822570",
    "end": "829350"
  },
  {
    "text": "connection after a given fragment is sent out that connection is kept open and a series of frames and fragments are",
    "start": "829350",
    "end": "836820"
  },
  {
    "text": "put through on that open connection on the flip side a consuming application on",
    "start": "836820",
    "end": "843300"
  },
  {
    "text": "get media is then able to retrieve the underlying frames and fragments in close",
    "start": "843300",
    "end": "851070"
  },
  {
    "text": "to real-time and so this streaming nature of the api's makes the video",
    "start": "851070",
    "end": "857490"
  },
  {
    "text": "streaming experience closer to what you and i know know of it as consumers of a",
    "start": "857490",
    "end": "864510"
  },
  {
    "text": "variety of other video streaming systems and so the this put media get media",
    "start": "864510",
    "end": "870149"
  },
  {
    "text": "experience again is something that is captured in the SDKs and is qualitatively different than a typical",
    "start": "870149",
    "end": "878120"
  },
  {
    "text": "restful api interaction with most AWS services we also have a playback API one",
    "start": "878120",
    "end": "889350"
  },
  {
    "text": "of the things that customers kept asking us for after the the initial launch of Kinesis video streams was the ability",
    "start": "889350",
    "end": "896570"
  },
  {
    "text": "not to actually analyze the video data but simply be able to play back the",
    "start": "896570",
    "end": "902820"
  },
  {
    "text": "media that was being submitted by the security camera by the drone by a robot",
    "start": "902820",
    "end": "908970"
  },
  {
    "text": "and to be able to just watch that video and they wanted to watch that video",
    "start": "908970",
    "end": "914029"
  },
  {
    "text": "somewhat close to real-time they definitely wanted the ability to go playback that video on an on demand",
    "start": "914029",
    "end": "919860"
  },
  {
    "text": "basis and so middle of this year we launched the default capability for the",
    "start": "919860",
    "end": "925920"
  },
  {
    "text": "HTTP Live Streaming or HLS standard and all of that experience of building and",
    "start": "925920",
    "end": "932399"
  },
  {
    "text": "managing infrastructure that takes in raw media streams and trance packages them and then replays that data more",
    "start": "932399",
    "end": "940290"
  },
  {
    "text": "accurately plays back that data in browsers in AB conditions is now enabled",
    "start": "940290",
    "end": "945720"
  },
  {
    "text": "through the get HLS streaming session URL operation this is arguably the",
    "start": "945720",
    "end": "952829"
  },
  {
    "text": "easiest way for you to playback the media that is ingested into your stream on on majority of browsers majority of",
    "start": "952829",
    "end": "961290"
  },
  {
    "text": "application mobile operating system platforms ok so now that we've talked",
    "start": "961290",
    "end": "971009"
  },
  {
    "text": "about the act of ingesting media using the producer SDK and we've talked about",
    "start": "971009",
    "end": "978559"
  },
  {
    "text": "how the core API sets operate at a high level I'm gonna now talk about the other",
    "start": "978559",
    "end": "985920"
  },
  {
    "text": "half of Kinesis video streams which is now the ability to actually analyze your",
    "start": "985920",
    "end": "992579"
  },
  {
    "text": "video in the last year or so they've been a trim there's been this massive",
    "start": "992579",
    "end": "999689"
  },
  {
    "text": "explosion in the kinds of machine learning applications that can do interesting meaningful things with all",
    "start": "999689",
    "end": "1006230"
  },
  {
    "text": "kinds of data and video and image data are no different when we launched we launched with default integration with",
    "start": "1006230",
    "end": "1014059"
  },
  {
    "text": "Amazon recognition video which is a fully managed service that enables",
    "start": "1014059",
    "end": "1019339"
  },
  {
    "text": "developers to simply call a P eyes such as call API as that can do things like",
    "start": "1019339",
    "end": "1026319"
  },
  {
    "text": "detect faces and when you upload a known collection of faces it could go ahead",
    "start": "1026319",
    "end": "1032418"
  },
  {
    "text": "and even identify those for you based on that privately uploaded collection in",
    "start": "1032419",
    "end": "1038329"
  },
  {
    "text": "the last in the last month or so we've also introduced an integration with",
    "start": "1038329",
    "end": "1043579"
  },
  {
    "text": "Amazon Sage Maker Amazon Sage Maker is a fully managed service to build deploy",
    "start": "1043579",
    "end": "1048679"
  },
  {
    "text": "and train machine learning models at scale so now you can bring your own models and have the entire system",
    "start": "1048679",
    "end": "1055370"
  },
  {
    "text": "operate in an end-to-end fashion outside of these fully managed services we have",
    "start": "1055370",
    "end": "1062149"
  },
  {
    "text": "a variety of software that developers can use to build into their own cost",
    "start": "1062149",
    "end": "1067520"
  },
  {
    "text": "applications and deploy on their own AWS infrastructure for analytics and the key",
    "start": "1067520",
    "end": "1072680"
  },
  {
    "text": "here is that a variety of use cases real-time analytics non real-time batch",
    "start": "1072680",
    "end": "1078350"
  },
  {
    "text": "your inter processing playback of media on-demand or playback of media in near",
    "start": "1078350",
    "end": "1084440"
  },
  {
    "text": "real-time are all kinds of applications that can be supported concurrently and",
    "start": "1084440",
    "end": "1091370"
  },
  {
    "text": "patently true Kinesis video streams so you could have one stream coming in one",
    "start": "1091370",
    "end": "1096500"
  },
  {
    "text": "real-time very round this application one HLS playback application you could have another machine application that is",
    "start": "1096500",
    "end": "1104840"
  },
  {
    "text": "simply using the data to train train its model and you could have all these different applications operating off the",
    "start": "1104840",
    "end": "1111440"
  },
  {
    "text": "same stream without you having to build and operate different solution architecture components as part of the",
    "start": "1111440",
    "end": "1122000"
  },
  {
    "text": "the processing ecosystem we have an open source java based library called the",
    "start": "1122000",
    "end": "1128000"
  },
  {
    "text": "Kinesis video streams parcel library this library is intended for developers",
    "start": "1128000",
    "end": "1133310"
  },
  {
    "text": "who want to now start building their own applications and it starts by enabling them to do things like extracting frame",
    "start": "1133310",
    "end": "1141260"
  },
  {
    "text": "level objects of fragment level objects that constitute the data inside of a",
    "start": "1141260",
    "end": "1146360"
  },
  {
    "text": "video stream it will enable them to extract any metadata that has been",
    "start": "1146360",
    "end": "1152030"
  },
  {
    "text": "attached to the fragment that was originally sent by the producing device or the camera it'll enable them to do",
    "start": "1152030",
    "end": "1158420"
  },
  {
    "text": "things like strip out all the metadata and then merge the fragments to generate if you will a clip of some variety among",
    "start": "1158420",
    "end": "1166400"
  },
  {
    "text": "other things it can also do do it can decode the incoming raw frames and then",
    "start": "1166400",
    "end": "1173680"
  },
  {
    "text": "and then encode decode them to JPEG PNG or a variety of other image formats",
    "start": "1173680",
    "end": "1179420"
  },
  {
    "text": "which may then be required for any downstream processing analytics application and of course the way the",
    "start": "1179420",
    "end": "1187370"
  },
  {
    "text": "library is built is that you could then factor that into your application and have that scale 2 to thousands and",
    "start": "1187370",
    "end": "1193700"
  },
  {
    "text": "thousands of concurrent streams of video",
    "start": "1193700",
    "end": "1198700"
  },
  {
    "text": "about ten days ago we announced the latest integration of Kinesis video",
    "start": "1202419",
    "end": "1207860"
  },
  {
    "text": "streams and this is with Amazon sage maker the way the template works up is",
    "start": "1207860",
    "end": "1216650"
  },
  {
    "text": "called Kinesis video streams inference template kit for short kit is gives",
    "start": "1216650",
    "end": "1221809"
  },
  {
    "text": "developers the ability to sample parse and decode the incoming media frames and",
    "start": "1221809",
    "end": "1227870"
  },
  {
    "text": "then reliably invoke a sage maker endpoint that contains the model that",
    "start": "1227870",
    "end": "1233299"
  },
  {
    "text": "you own and run as the model generates inferences it then pumps that into a",
    "start": "1233299",
    "end": "1239659"
  },
  {
    "text": "Kinesis data stream from where those inference results that are tagged with",
    "start": "1239659",
    "end": "1244669"
  },
  {
    "text": "every single fragment number are now available for any business logic to then",
    "start": "1244669",
    "end": "1250640"
  },
  {
    "text": "consume and process so the actual kit comprises of the ivory that I talked",
    "start": "1250640",
    "end": "1258200"
  },
  {
    "text": "about previously and it also contains a fully managed cloud formation template",
    "start": "1258200",
    "end": "1264530"
  },
  {
    "text": "that spins up resources like Fargate compute it which actually runs the the",
    "start": "1264530",
    "end": "1271640"
  },
  {
    "text": "core compute for analyzing the video itself it contains it includes the",
    "start": "1271640",
    "end": "1277130"
  },
  {
    "text": "ability to spin up DynamoDB which manages the checkpoints and releases as the fleet elastically grows or shrinks",
    "start": "1277130",
    "end": "1284900"
  },
  {
    "text": "in response to the incoming video it integrates with the sage maker endpoint",
    "start": "1284900",
    "end": "1291289"
  },
  {
    "text": "to reliably call the call decision maker endpoint for any for any number of",
    "start": "1291289",
    "end": "1298159"
  },
  {
    "text": "inferences that were created for any number of Biko's that will happen and it",
    "start": "1298159",
    "end": "1303530"
  },
  {
    "text": "then pumps that video data a pumps the inference data back into a Kinesis data",
    "start": "1303530",
    "end": "1308539"
  },
  {
    "text": "stream and all of that is is fully managed and in a demo i'm going to show",
    "start": "1308539",
    "end": "1314510"
  },
  {
    "text": "you how this thing will work live",
    "start": "1314510",
    "end": "1319179"
  },
  {
    "text": "however rolling out your own machine learning application is obviously not",
    "start": "1319990",
    "end": "1325280"
  },
  {
    "text": "the only way to go about it and and we feel fortunate that a variety of video",
    "start": "1325280",
    "end": "1331070"
  },
  {
    "text": "analytics partners integrations with Kinesis video streams and what that means for for enterprises",
    "start": "1331070",
    "end": "1337610"
  },
  {
    "text": "and companies who do not wish to make their own investments into machine learning is that they can now use some",
    "start": "1337610",
    "end": "1344299"
  },
  {
    "text": "of these partners and say here's all my hero my cameras that are hooked up with Lisa's video streams and here's how I",
    "start": "1344299",
    "end": "1351470"
  },
  {
    "text": "wish to and I would like for it to be analyzed using your software machine",
    "start": "1351470",
    "end": "1356900"
  },
  {
    "text": "learning driven software capabilities as",
    "start": "1356900",
    "end": "1363350"
  },
  {
    "text": "with several AWS services Kinesis video streams is a purely pay-as-you-go model",
    "start": "1363350",
    "end": "1369520"
  },
  {
    "text": "so remember you're not spinning up any instances you're not managing load",
    "start": "1369520",
    "end": "1376309"
  },
  {
    "text": "balancers you're not managing storage systems and you're not managing any API",
    "start": "1376309",
    "end": "1382010"
  },
  {
    "text": "to pull them all together the abstraction you see is a stream this the",
    "start": "1382010",
    "end": "1387049"
  },
  {
    "text": "stream ingest data that's the data ingested per gigabyte the data is",
    "start": "1387049",
    "end": "1392450"
  },
  {
    "text": "consumed and consumption can fall in one of two buckets you could be consuming",
    "start": "1392450",
    "end": "1397610"
  },
  {
    "text": "the data for your analytics applications that's the data consumed per gigabyte or",
    "start": "1397610",
    "end": "1402860"
  },
  {
    "text": "you could be consuming the media data for HLS playback and that's the data consumed using HLS and finally because",
    "start": "1402860",
    "end": "1411049"
  },
  {
    "text": "storage retention is an optional factor when you decide to store media there is",
    "start": "1411049",
    "end": "1416419"
  },
  {
    "text": "a data store per gigabyte month pricing dimension around that and all of this is",
    "start": "1416419",
    "end": "1421970"
  },
  {
    "text": "fully pay as you go if your streams are not sending if your cameras are not sending any data you don't pay",
    "start": "1421970",
    "end": "1427669"
  },
  {
    "text": "correspondingly so you could have a million devices connected and maybe only 0.1% of then stream at any point in time",
    "start": "1427669",
    "end": "1433909"
  },
  {
    "text": "and that's the only only scenario under which you actually actively end up paying for those resources so I'm gonna",
    "start": "1433909",
    "end": "1443510"
  },
  {
    "text": "transition now and do something brave",
    "start": "1443510",
    "end": "1450490"
  },
  {
    "text": "wonderful so what I have here is a $19 and 89 cent Logitech webcam that I",
    "start": "1460920",
    "end": "1468960"
  },
  {
    "text": "ordered of Amazon and what I'm gonna do now is fire up a producer SDK instance",
    "start": "1468960",
    "end": "1475440"
  },
  {
    "text": "that's going to be running on my demo laptop this is USB connected into my machine and so you should what you",
    "start": "1475440",
    "end": "1482580"
  },
  {
    "text": "should see is the producer SDK connecting in pulling in the frames from",
    "start": "1482580",
    "end": "1487950"
  },
  {
    "text": "this Logitech device camera device sending it over to to the Kinesis video",
    "start": "1487950",
    "end": "1493350"
  },
  {
    "text": "streams end point where we should hopefully see the media player so you should see the actual video playback and",
    "start": "1493350",
    "end": "1500580"
  },
  {
    "text": "then I have the background infrastructure for analytics with with",
    "start": "1500580",
    "end": "1508020"
  },
  {
    "text": "sage makers fan up already and so I will take you through some of the moving parts over there do can demonstrate how",
    "start": "1508020",
    "end": "1515570"
  },
  {
    "text": "increasingly easy it is now to build together these kinds of media pipelines",
    "start": "1515570",
    "end": "1520650"
  },
  {
    "text": "so here goes so this is my Kinesis video streams management console I have",
    "start": "1520650",
    "end": "1526110"
  },
  {
    "text": "created just one stream here for you and I'm going to fire up my SDK so that's",
    "start": "1526110",
    "end": "1537180"
  },
  {
    "text": "remember is running on my on my laptop looks like it is we're in business",
    "start": "1537180",
    "end": "1543690"
  },
  {
    "text": "okay so it's streaming should probably see me at this stage so what I'm gonna do is navigate over to my management",
    "start": "1543690",
    "end": "1550680"
  },
  {
    "text": "console and my stream is called Windows stream that I'm going to now click on we",
    "start": "1550680",
    "end": "1556530"
  },
  {
    "text": "should bring up the management console which has a video viewer built into it",
    "start": "1556530",
    "end": "1561720"
  },
  {
    "text": "and you can see that with some delay you can totally see my face right",
    "start": "1561720",
    "end": "1574490"
  },
  {
    "text": "okay and I'm also gonna hover it over this bottle to see if it picks up stuff",
    "start": "1577430",
    "end": "1586300"
  },
  {
    "text": "all right okay so so far what we've established is we are doing some variety",
    "start": "1586300",
    "end": "1592460"
  },
  {
    "text": "of streaming pretty easily from a random device into the cloud okay so now we go",
    "start": "1592460",
    "end": "1600620"
  },
  {
    "text": "over to the lander logs which are",
    "start": "1600620",
    "end": "1608060"
  },
  {
    "text": "sitting on the other side of the Kinesis data stream that is now is now returning results from the actual inference model",
    "start": "1608060",
    "end": "1614480"
  },
  {
    "text": "and what you'll see here is that you",
    "start": "1614480",
    "end": "1620090"
  },
  {
    "text": "should see objects such as person you'll",
    "start": "1620090",
    "end": "1625820"
  },
  {
    "text": "see object which is a cup now that is purely the the nature of the model itself and how trained or not",
    "start": "1625820",
    "end": "1632690"
  },
  {
    "text": "trained it is but the key point here is that now you have lambda that is pulling off the inferences results that have",
    "start": "1632690",
    "end": "1639680"
  },
  {
    "text": "been already published into the Kinesis data stream that are giving you those results and this is happening close to",
    "start": "1639680",
    "end": "1646730"
  },
  {
    "text": "real time so it continues to detect I guess me so all of this stuff is now a",
    "start": "1646730",
    "end": "1654860"
  },
  {
    "text": "matter of a few clicks and all the core object code D the actual source code behind this is available for any",
    "start": "1654860",
    "end": "1661580"
  },
  {
    "text": "developer to pick pick and choose and run as part of the the kit you also have",
    "start": "1661580",
    "end": "1667430"
  },
  {
    "text": "the ability to act on a variety of different metrics so everything from",
    "start": "1667430",
    "end": "1672970"
  },
  {
    "text": "frame level metrics to saying how many frames are actually decoded Layton sees",
    "start": "1672970",
    "end": "1679070"
  },
  {
    "text": "n2 and Layton sees from when we ingested to when it was actually process here you can see we've got about a 200",
    "start": "1679070",
    "end": "1685580"
  },
  {
    "text": "millisecond latency for the pipeline to go end-to-end a variety of other metrics around how the action easiest service is",
    "start": "1685580",
    "end": "1693320"
  },
  {
    "text": "being utilized the CPU memory utilization how many records have been published into the Kinesis data stream",
    "start": "1693320",
    "end": "1699110"
  },
  {
    "text": "and and things like how many times sage maker the where the model actually runs was invoked as well as the corresponding",
    "start": "1699110",
    "end": "1706430"
  },
  {
    "text": "lambda invocation so you as an as a developer as an operator have the ability to now see this end-to-end as part of your",
    "start": "1706430",
    "end": "1713539"
  },
  {
    "text": "infrastructure so hopefully that was interesting to see how all these",
    "start": "1713539",
    "end": "1719779"
  },
  {
    "text": "different moving parts which until recently sir I had a tremendous amount of energy to put together have now",
    "start": "1719779",
    "end": "1726679"
  },
  {
    "text": "become fundamentally easy for for majority of developers to go and tackle",
    "start": "1726679",
    "end": "1733779"
  },
  {
    "text": "with that I'm going to now announce on stage a meet a meet Vaswani is the head",
    "start": "1733779",
    "end": "1741889"
  },
  {
    "text": "of infrastructure services at Amazon go and he's going to talk to you about his",
    "start": "1741889",
    "end": "1747499"
  },
  {
    "text": "team's journey with streaming video and specifically with Amazon go I mean",
    "start": "1747499",
    "end": "1753080"
  },
  {
    "text": "thanks AVI good evening everyone hope you are all",
    "start": "1753080",
    "end": "1758119"
  },
  {
    "text": "enjoying the first day here at reinvent my name is Amit Vaswani and I am the",
    "start": "1758119",
    "end": "1764210"
  },
  {
    "text": "head of infrastructure services for Amazon go today I'll be talking about Amazon go and our use of Kinesis video",
    "start": "1764210",
    "end": "1772869"
  },
  {
    "text": "it's late on a I know it's late on a Monday evening so I'm going to try to make this as lively and entertaining as",
    "start": "1772869",
    "end": "1778879"
  },
  {
    "text": "possible and with having said that let's start off with a quick video that introduces Amazon go",
    "start": "1778879",
    "end": "1786789"
  },
  {
    "text": "four years ago we started to wonder what would shopping look like if you",
    "start": "1788320",
    "end": "1795140"
  },
  {
    "text": "could walk into a store grab what you want and just go what if we could weave",
    "start": "1795140",
    "end": "1800870"
  },
  {
    "text": "the most advanced machine learning computer vision and AI into the very fabric of a store so you never have to",
    "start": "1800870",
    "end": "1807350"
  },
  {
    "text": "wait in line no lines no checkouts no registers [Music]",
    "start": "1807350",
    "end": "1814120"
  },
  {
    "text": "welcome to Amazon go use the Amazon Go",
    "start": "1814120",
    "end": "1819559"
  },
  {
    "text": "app to enter then put away your phone and start shopping it's really that",
    "start": "1819559",
    "end": "1825710"
  },
  {
    "text": "simple take whatever you like anything you pick up is automatically added to your",
    "start": "1825710",
    "end": "1831710"
  },
  {
    "text": "virtual cart if you change your mind about that cupcake just put it back our technology",
    "start": "1831710",
    "end": "1840730"
  },
  {
    "text": "will update your virtual cart automatically so how does it work we used computer",
    "start": "1840730",
    "end": "1849760"
  },
  {
    "text": "vision deep learning algorithms at sensor fusion much like you'd find in self-driving cars we call it just walk",
    "start": "1849760",
    "end": "1857350"
  },
  {
    "text": "out technology once you've got everything you want you can just go when",
    "start": "1857350",
    "end": "1864910"
  },
  {
    "text": "you leave our just walk out technology adds up your virtual cart and charges your Amazon account your receipt a sense",
    "start": "1864910",
    "end": "1871000"
  },
  {
    "text": "straight to the app and you can keep going amazon go",
    "start": "1871000",
    "end": "1877110"
  },
  {
    "text": "no lines no checkout no seriously",
    "start": "1877110",
    "end": "1882650"
  },
  {
    "text": "[Music]",
    "start": "1882750",
    "end": "1888749"
  },
  {
    "text": "so we built Amazon go because we believe that fundamentally nobody actually likes",
    "start": "1890740",
    "end": "1896510"
  },
  {
    "text": "to go to a store and wait at the line people don't go to a store to wait in a line to go to a store to shop over the",
    "start": "1896510",
    "end": "1903650"
  },
  {
    "text": "years there have been several innovations in brick-and-mortar retail stores all the way from credit-card",
    "start": "1903650",
    "end": "1909679"
  },
  {
    "text": "machines to barcode scanners to self checkout stations and so on but the",
    "start": "1909679",
    "end": "1914960"
  },
  {
    "text": "fundamental process of shopping in a store has remained largely the same you",
    "start": "1914960",
    "end": "1919970"
  },
  {
    "text": "enter the store you go take the products you want you wait in line for checkout you pay and then you leave with Amazon",
    "start": "1919970",
    "end": "1926809"
  },
  {
    "text": "go we're trying to change that experience you enter the store using a rap you go pick the products you want",
    "start": "1926809",
    "end": "1933289"
  },
  {
    "text": "and then you leave there are no lines no checkout you just walk out so how do we",
    "start": "1933289",
    "end": "1940309"
  },
  {
    "text": "do it well all we needed to know was which Amazon accounts are shopping in",
    "start": "1940309",
    "end": "1946880"
  },
  {
    "text": "the store and what products they picked so that we could accurately charge",
    "start": "1946880",
    "end": "1952159"
  },
  {
    "text": "customers one when they were done with their shopping trip that sounds simple enough",
    "start": "1952159",
    "end": "1957500"
  },
  {
    "text": "what makes that complicated well life would actually be pretty simple if this is what we had to deal with having one",
    "start": "1957500",
    "end": "1965120"
  },
  {
    "text": "or a few people in the store walking around leisurely picking one product at",
    "start": "1965120",
    "end": "1970309"
  },
  {
    "text": "a time preferably a big product like that and and walking out of the store that doesn't seem too hard however",
    "start": "1970309",
    "end": "1979190"
  },
  {
    "text": "reality is more like that reality stores that are crowded reality is people who",
    "start": "1979190",
    "end": "1987230"
  },
  {
    "text": "are shopping in close proximity with each other realities kids running around the store babies going in and out of",
    "start": "1987230",
    "end": "1994940"
  },
  {
    "text": "strollers reality is that people don't shop one item at a time reality is",
    "start": "1994940",
    "end": "2001840"
  },
  {
    "text": "natural shopping behavior where somebody picks a product looks at it puts it back in the shelf sometimes puts it back in a",
    "start": "2001840",
    "end": "2009400"
  },
  {
    "text": "different shelf sometimes they're shopping as part of a group so they hand it to a friend or to a relative who",
    "start": "2009400",
    "end": "2015970"
  },
  {
    "text": "eventually puts it in a different shelf where somebody else comes along in and picks the product",
    "start": "2015970",
    "end": "2022330"
  },
  {
    "text": "reality is products that are identical don't always look the same and",
    "start": "2022330",
    "end": "2028880"
  },
  {
    "text": "conversely products that look the same aren't always identical",
    "start": "2028880",
    "end": "2034520"
  },
  {
    "text": "for example plain yogurt and vanilla are good it's really hard to differentiate between those two so to solve this we as",
    "start": "2034520",
    "end": "2044810"
  },
  {
    "text": "in the Amazon go team decided to use computer vision as our core algorithm we",
    "start": "2044810",
    "end": "2051530"
  },
  {
    "text": "built our own cameras and and we really push the state of the art forward in deep algorithms to be able to accurately",
    "start": "2051530",
    "end": "2058850"
  },
  {
    "text": "answer the question of who took what we built techniques to fuse together",
    "start": "2058850",
    "end": "2066110"
  },
  {
    "text": "signals from cameras and other types of sensors we built vision algorithms that",
    "start": "2066110",
    "end": "2073310"
  },
  {
    "text": "are capable of understanding natural shopping behaviors as we talked about previously and we built a host of other",
    "start": "2073310",
    "end": "2080450"
  },
  {
    "text": "services that are required or or necessary to be able to operate a group",
    "start": "2080450",
    "end": "2086120"
  },
  {
    "text": "of sensors and to be able to run a production store with high availability and high accuracy one such set of",
    "start": "2086120",
    "end": "2096110"
  },
  {
    "text": "services that we built is our streaming services for our algorithms to be able",
    "start": "2096110",
    "end": "2101480"
  },
  {
    "text": "to accurately understand our customers shopping actions we need to capture the",
    "start": "2101480",
    "end": "2108710"
  },
  {
    "text": "moment of truth when a customer picks an item or returns it back on the shelf so",
    "start": "2108710",
    "end": "2114970"
  },
  {
    "text": "we built a set of services that are responsible for capturing the videos the",
    "start": "2114970",
    "end": "2121580"
  },
  {
    "text": "video frames from the cameras and passing it on to our algorithms running in downstream services these streaming",
    "start": "2121580",
    "end": "2130400"
  },
  {
    "text": "services have to be extremely reliable they have to operate with high throughput they have to be resilient to",
    "start": "2130400",
    "end": "2136700"
  },
  {
    "text": "hosts failures they have to be resilient with network blips and they have to operate with extremely tight bounds on",
    "start": "2136700",
    "end": "2143120"
  },
  {
    "text": "end-to-end latency between when the action is triggered and when our",
    "start": "2143120",
    "end": "2148460"
  },
  {
    "text": "algorithms are able to process it and that leads me to how our team began our",
    "start": "2148460",
    "end": "2154580"
  },
  {
    "text": "partners with Adi and the Kinesis video team we launched our first Amazon go store back",
    "start": "2154580",
    "end": "2161180"
  },
  {
    "text": "in 2016 and when we launched our first store we were using our own set of",
    "start": "2161180",
    "end": "2166400"
  },
  {
    "text": "streaming services that that we had built ourselves at the same time AWS was building the Kinesis video",
    "start": "2166400",
    "end": "2174530"
  },
  {
    "text": "streaming product for AWS customers so it seemed like the perfect opportunity for collaboration since then over the",
    "start": "2174530",
    "end": "2182660"
  },
  {
    "text": "last two years we've closely partnered with the Kinesis video team initially to",
    "start": "2182660",
    "end": "2188900"
  },
  {
    "text": "onboard or initially to influence product direction and subsequently to onboard as their early adopters so why",
    "start": "2188900",
    "end": "2196310"
  },
  {
    "text": "did we do this what's in it for us the Amazon go team why did we decide to onboard on to Kinesis video first and",
    "start": "2196310",
    "end": "2204110"
  },
  {
    "text": "foremost using Canisius video allows us to focus on our unique values by by",
    "start": "2204110",
    "end": "2213170"
  },
  {
    "text": "freeing ourselves from the undifferentiated heavy lifting of having",
    "start": "2213170",
    "end": "2218450"
  },
  {
    "text": "to move video frames through the network we can instead focus on tackling unique",
    "start": "2218450",
    "end": "2224690"
  },
  {
    "text": "challenges in computer vision and machine learning and other in-store customer experiences secondly using",
    "start": "2224690",
    "end": "2232940"
  },
  {
    "text": "Genesis video streams lowers our operational cost as Rd mentioned our",
    "start": "2232940",
    "end": "2238970"
  },
  {
    "text": "costs become elastic we only pay for the video streams that that we use rather",
    "start": "2238970",
    "end": "2244250"
  },
  {
    "text": "than paying for any fixed infrastructure it obviously helps us launch faster it",
    "start": "2244250",
    "end": "2251810"
  },
  {
    "text": "improves our time to market this year we've launched about five additional stores and being able to use a managed",
    "start": "2251810",
    "end": "2259640"
  },
  {
    "text": "service for video streaming rather than building our own infrastructure for every store is definitely a simplifier",
    "start": "2259640",
    "end": "2266480"
  },
  {
    "text": "for us and finally it helps us lower our operational burden this one's pretty",
    "start": "2266480",
    "end": "2273890"
  },
  {
    "text": "evident just like nobody likes waiting in lines nobody likes their pages going",
    "start": "2273890",
    "end": "2278990"
  },
  {
    "text": "off either hopefully and using a managed service certainly reduces the likelihood",
    "start": "2278990",
    "end": "2285710"
  },
  {
    "text": "of of incurring operational board in running photos for the Kinesis video",
    "start": "2285710",
    "end": "2292580"
  },
  {
    "text": "team are partnering with Amazon go gave them an early adopter we were able to validate their production use cases",
    "start": "2292580",
    "end": "2300620"
  },
  {
    "text": "using a real world application and being an early adopter we were able to push",
    "start": "2300620",
    "end": "2305960"
  },
  {
    "text": "for production scale and here one availability from from the very GetGo",
    "start": "2305960",
    "end": "2312579"
  },
  {
    "text": "points of friction and how did we overcome them so any deep integration at",
    "start": "2313150",
    "end": "2318770"
  },
  {
    "text": "this level is bound to run into some issues and we certainly had our fair share of those your use cases might be",
    "start": "2318770",
    "end": "2326390"
  },
  {
    "text": "different but I wanted to share some of these that may or may not be relevant to those who are considering adopting",
    "start": "2326390",
    "end": "2333140"
  },
  {
    "text": "Kinesis video streams as I mentioned already we were early adopters of this",
    "start": "2333140",
    "end": "2339860"
  },
  {
    "text": "product and as early adopters we had to make some fairly significant",
    "start": "2339860",
    "end": "2344950"
  },
  {
    "text": "modifications to the Kinesis producer sdk to meet our needs depending on your use case you may or may not be able to",
    "start": "2344950",
    "end": "2352010"
  },
  {
    "text": "use it right out of the box secondly we found that Kinesis video",
    "start": "2352010",
    "end": "2358340"
  },
  {
    "text": "streams works really well for streaming data continuously as adi had mentioned",
    "start": "2358340",
    "end": "2365230"
  },
  {
    "text": "however we had some use cases where we needed to do restful api as we had use",
    "start": "2365230",
    "end": "2371330"
  },
  {
    "text": "cases for non streaming put aps and for those use cases we had to work with the",
    "start": "2371330",
    "end": "2376670"
  },
  {
    "text": "Kinesis video team to be able to support it in our application similarly we found",
    "start": "2376670",
    "end": "2383690"
  },
  {
    "text": "that Kinesis video streams works really well and it's very durable it works really well for durable video streaming",
    "start": "2383690",
    "end": "2391310"
  },
  {
    "text": "to the network however we have some use cases where are our bounds on end-to-end",
    "start": "2391310",
    "end": "2399470"
  },
  {
    "text": "latency were extremely tight we needed the latency between the video frame",
    "start": "2399470",
    "end": "2404720"
  },
  {
    "text": "generation and consumption to be extremely small and for those use cases we continue to use our own video",
    "start": "2404720",
    "end": "2411230"
  },
  {
    "text": "streaming services at this point and finally just like all other AWS services",
    "start": "2411230",
    "end": "2417220"
  },
  {
    "text": "Canisius videos has its own set of service limits and it's important to understand",
    "start": "2417220",
    "end": "2422480"
  },
  {
    "text": "some of these limits are easily configurable or can be changed by filing",
    "start": "2422480",
    "end": "2427940"
  },
  {
    "text": "a service request such as how many streams you're using however there's a",
    "start": "2427940",
    "end": "2432980"
  },
  {
    "text": "certain set of hard limits that are inherent to the architecture of the service for example the TPS on certain",
    "start": "2432980",
    "end": "2439760"
  },
  {
    "text": "API s and it's important to understand those and and incorporate those in the design and architecture of your own",
    "start": "2439760",
    "end": "2446809"
  },
  {
    "text": "service well that's it for me I would",
    "start": "2446809",
    "end": "2452450"
  },
  {
    "text": "like to hand it off to our D at this point I'm excited about continuing our partnership with the Kinesis video",
    "start": "2452450",
    "end": "2458329"
  },
  {
    "text": "streams as we continue to focus on building more delightful features for our customers thank you so we have some",
    "start": "2458329",
    "end": "2471079"
  },
  {
    "text": "time to take questions there are two mics out here so if you feel you have",
    "start": "2471079",
    "end": "2476660"
  },
  {
    "text": "some question you want to share please do so the the other thing is a meet or will not be taking direct questions",
    "start": "2476660",
    "end": "2482390"
  },
  {
    "text": "about Amazon go so if your questions are around Kinesis video streams use cases",
    "start": "2482390",
    "end": "2487690"
  },
  {
    "text": "producer SDKs consumption applications I'm very very happy to do to talk",
    "start": "2487690",
    "end": "2492920"
  },
  {
    "text": "through those here so any questions you've got one here on the right yes sir",
    "start": "2492920",
    "end": "2499640"
  },
  {
    "text": "yeah why did he choose sage maker / now I see you get video recognition oh so so",
    "start": "2499640",
    "end": "2507349"
  },
  {
    "text": "the question is why did we choose sage maker / recognition video and we did not",
    "start": "2507349",
    "end": "2514299"
  },
  {
    "text": "customers can use recognition video to do to take advantage of the built-in",
    "start": "2514299",
    "end": "2520010"
  },
  {
    "text": "integration just like that there is yet another service that you can use which is sage maker you can use both of them",
    "start": "2520010",
    "end": "2526579"
  },
  {
    "text": "in tandem secondly there are a whole bunch of other use cases that may not fall them fall into the narrow video",
    "start": "2526579",
    "end": "2533809"
  },
  {
    "text": "recognition context you might be wanting to analyze audio you might be wanting to analyze radar signatures so on so forth",
    "start": "2533809",
    "end": "2542180"
  },
  {
    "text": "for which you may want to build your own custom models and run them in sage maker do you know if video recognition is only",
    "start": "2542180",
    "end": "2549799"
  },
  {
    "text": "video or it can also take an audio so very specifically the integration of",
    "start": "2549799",
    "end": "2555170"
  },
  {
    "text": "recognition has with Kinesis video streams is for video only another question there yeah",
    "start": "2555170",
    "end": "2564770"
  },
  {
    "text": "that's my questions about Lane C so what's the what sort of the best or that",
    "start": "2564770",
    "end": "2570589"
  },
  {
    "text": "gets the lowest lane see that you can expect and the use case that I was thinking of is for example remote gaming",
    "start": "2570589",
    "end": "2577099"
  },
  {
    "text": "where you have some game running in some server instance and you want to send out video stream to to a consumer device and",
    "start": "2577099",
    "end": "2583640"
  },
  {
    "text": "for that you'd probably want to blow it or at the highest 200 milliseconds depending on like what game you have",
    "start": "2583640",
    "end": "2589510"
  },
  {
    "text": "there any architectural changes or anything or is this even a recommended service for that kind of a use case",
    "start": "2589510",
    "end": "2594910"
  },
  {
    "text": "great quest so the question is around latency specifically for a use case around I'm gonna say remote viewing of a",
    "start": "2594910",
    "end": "2603520"
  },
  {
    "text": "game being played online forgive me for the simplification so the what I would",
    "start": "2603520",
    "end": "2610250"
  },
  {
    "text": "say is that when you want to target clearly sub one second Layton sees end to end you should not use HLS HLS is a",
    "start": "2610250",
    "end": "2619609"
  },
  {
    "text": "fragment oriented standard and the specification itself requires there is a",
    "start": "2619609",
    "end": "2626299"
  },
  {
    "text": "certain amount it the architecture requires it to be certain way if you're",
    "start": "2626299",
    "end": "2631790"
  },
  {
    "text": "going to be building if your requirements are around that then you should a build-your-own player so",
    "start": "2631790",
    "end": "2640430"
  },
  {
    "text": "renderer surface flinger and playback controls using our get media API",
    "start": "2640430",
    "end": "2646880"
  },
  {
    "text": "directly so the get media API is supposed is a real-time API originally",
    "start": "2646880",
    "end": "2654349"
  },
  {
    "text": "it is built for analytics so it doesn't do the kind of trance packaging for",
    "start": "2654349",
    "end": "2661339"
  },
  {
    "text": "example or encoding required typically for viewing applications because that's not a design point for it",
    "start": "2661339",
    "end": "2667819"
  },
  {
    "text": "however such an application can be built but someone who was adept at building players if we do that you're now looking",
    "start": "2667819",
    "end": "2675589"
  },
  {
    "text": "at a world where you can attain yours you know sub 500 milli second latencies but then you are on the hook for",
    "start": "2675589",
    "end": "2682609"
  },
  {
    "text": "building your own player all right thanks yeah welcome have a question",
    "start": "2682609",
    "end": "2688700"
  },
  {
    "text": "there sure my question is kind of along the same lines in terms of from ingestion to",
    "start": "2688700",
    "end": "2695710"
  },
  {
    "text": "encoding to consumption what's the time behind life if we use Kinesis yeah so so",
    "start": "2695710",
    "end": "2702670"
  },
  {
    "text": "just to be kind of clear with the terminology this question is is also around entering legacies there is no",
    "start": "2702670",
    "end": "2710609"
  },
  {
    "text": "there are two distinct paths to bear in mind there is the put media to get media path where the frames are being put on",
    "start": "2710609",
    "end": "2717910"
  },
  {
    "text": "the wire as they're generated and then they are presented on the get media interface API interface for any",
    "start": "2717910",
    "end": "2724089"
  },
  {
    "text": "application to consume now on that path are our p50 latencies are much much less",
    "start": "2724089",
    "end": "2733060"
  },
  {
    "text": "than one second right and that is indeed why you can see that in the demo with",
    "start": "2733060",
    "end": "2738609"
  },
  {
    "text": "sage maker all those steps could happen you know Kinesis video streams the",
    "start": "2738609",
    "end": "2743890"
  },
  {
    "text": "Fargate instance sampling decoding invoking sage maker and the stuff comes by and you could see would still be in",
    "start": "2743890",
    "end": "2749829"
  },
  {
    "text": "the few hundred millions when you look at get the HLS API there you are going",
    "start": "2749829",
    "end": "2757420"
  },
  {
    "text": "to be paying the the rule of thumb is you will pick a fragment length",
    "start": "2757420",
    "end": "2763230"
  },
  {
    "text": "typically let's say one second long which is what you would pick on the camera producer device this is what the",
    "start": "2763230",
    "end": "2769869"
  },
  {
    "text": "end quarter says I'm going to give you a fragment an assembly of one second it's going to compose of you know 25 frames",
    "start": "2769869",
    "end": "2776470"
  },
  {
    "text": "inside of it when you use that all things considered you can use a rule of",
    "start": "2776470",
    "end": "2781540"
  },
  {
    "text": "thumb off between 2x to 2.5 X of the fragment length for the video to",
    "start": "2781540",
    "end": "2787210"
  },
  {
    "text": "actually be rendered on on some sort of a player so that so that's what you're",
    "start": "2787210",
    "end": "2792910"
  },
  {
    "text": "looking at on the get HLS API so two different data paths from a consumption perspective to different latency",
    "start": "2792910",
    "end": "2798970"
  },
  {
    "text": "profiles to different use cases really just a quick follow up in terms of if we",
    "start": "2798970",
    "end": "2804369"
  },
  {
    "text": "kind of take the same problem but if scale it to 100,000 concurrent users or more than that what will be the impact",
    "start": "2804369",
    "end": "2811829"
  },
  {
    "text": "so if you so the question is is around what happens when you have hundred thousand concurrent users to which the",
    "start": "2811829",
    "end": "2818050"
  },
  {
    "text": "question I'll have back for you is that at that point you're going to have to use CDN I'm guessing that this is still for",
    "start": "2818050",
    "end": "2825730"
  },
  {
    "text": "viewing live media and if you're going to use a CDN in the mix that you're going to be adding a few more",
    "start": "2825730",
    "end": "2832110"
  },
  {
    "text": "single-digit seconds of latency to get this to get it consumed and to end but",
    "start": "2832110",
    "end": "2837790"
  },
  {
    "text": "when you use when you build a solution architecture that includes a CDN like CloudFront our our belief is that the",
    "start": "2837790",
    "end": "2846310"
  },
  {
    "text": "number of users themselves are not going to impact the latency itself but you",
    "start": "2846310",
    "end": "2851830"
  },
  {
    "text": "will pay a certain amount of latency you will incur more latency on account of",
    "start": "2851830",
    "end": "2859030"
  },
  {
    "text": "the solution or architecture in composing it with something like CloudFront distribution thank you yeah what question there please yeah so quick",
    "start": "2859030",
    "end": "2867460"
  },
  {
    "text": "question are we able to we to use WebRTC as a producer herbs the question is very",
    "start": "2867460",
    "end": "2875350"
  },
  {
    "text": "simple web RTC is a producer and the answer is no no however if you wouldn't",
    "start": "2875350",
    "end": "2882370"
  },
  {
    "text": "mind talking to our product manager Girish who's right here please he is be",
    "start": "2882370",
    "end": "2889870"
  },
  {
    "text": "very interested in understanding the use cases as we evaluate how else do we evolve the Kinesis video strains product",
    "start": "2889870",
    "end": "2895900"
  },
  {
    "text": "roadmap what's the use case I would like to use commodity hardware for some",
    "start": "2895900",
    "end": "2901260"
  },
  {
    "text": "analysis we would like to use commodity hardware like Chromebooks and things like that for size analysis I see",
    "start": "2901260",
    "end": "2907120"
  },
  {
    "text": "commodity hardware like Chromebooks got it thank you and second question is I've",
    "start": "2907120",
    "end": "2912430"
  },
  {
    "text": "seen you guys are using far gate in order to process like the inference yeah",
    "start": "2912430",
    "end": "2917460"
  },
  {
    "text": "any reason why you chose far gate over maybe alarmed or something a really good",
    "start": "2917460",
    "end": "2922660"
  },
  {
    "text": "question so we are looking to release",
    "start": "2922660",
    "end": "2927880"
  },
  {
    "text": "the underlying software fully into into the community you could use in theory",
    "start": "2927880",
    "end": "2935110"
  },
  {
    "text": "for ECS any compute type it is ECS based more than anything else and Fargate was",
    "start": "2935110",
    "end": "2941350"
  },
  {
    "text": "the compute type that we picked the so number one number two why not lambda is",
    "start": "2941350",
    "end": "2946780"
  },
  {
    "text": "because if you recall in my presentation I talked about put media and get media being streaming api's where we hold the",
    "start": "2946780",
    "end": "2953890"
  },
  {
    "text": "connection Oh as we are consuming on the underlying frames and fragments and that streaming",
    "start": "2953890",
    "end": "2960330"
  },
  {
    "text": "API support has not been built yet with lambda the second thing is that these",
    "start": "2960330",
    "end": "2966930"
  },
  {
    "text": "are long running applications right you can imagine that a stream video stream",
    "start": "2966930",
    "end": "2972089"
  },
  {
    "text": "is being pumped continuously for several hours at a time and and typically we want for the computer infrastructure",
    "start": "2972089",
    "end": "2978240"
  },
  {
    "text": "that supports it to also be live for the duration of the stream so those two",
    "start": "2978240",
    "end": "2983310"
  },
  {
    "text": "factors right now mean that we haven't been able to cobble together the support",
    "start": "2983310",
    "end": "2989010"
  },
  {
    "text": "with lambda but but but I suspect that those things will change as lambda accommodates for more and more use cases",
    "start": "2989010",
    "end": "2994290"
  },
  {
    "text": "and we we plumbed the support through okay thank you thank you thank you for questions yes I am curious as to whether",
    "start": "2994290",
    "end": "3003349"
  },
  {
    "text": "a stream can process 3d depth data like from the point cloud the classic example",
    "start": "3003349",
    "end": "3010520"
  },
  {
    "text": "being I guess the Microsoft Kinect or recently yeah yes is a good question",
    "start": "3010520",
    "end": "3019490"
  },
  {
    "text": "this is about if you were more exotic data types like point cloud D so the",
    "start": "3019490",
    "end": "3025780"
  },
  {
    "text": "core Kinesis video format if you will because underlying all of this the data",
    "start": "3025780",
    "end": "3031910"
  },
  {
    "text": "is being packaged in a format of some variety it's based on matroska so it's",
    "start": "3031910",
    "end": "3037010"
  },
  {
    "text": "for those of you in the know it's the dot MKV file which incidentally is the",
    "start": "3037010",
    "end": "3043119"
  },
  {
    "text": "kinda the more foundational construct behind web and which is the foundational",
    "start": "3043119",
    "end": "3048260"
  },
  {
    "text": "concept behind things like what you use for YouTube video viewing the reason giving that theory is that we openly",
    "start": "3048260",
    "end": "3055970"
  },
  {
    "text": "specify what it is that the format looks like you can actually send any kind of",
    "start": "3055970",
    "end": "3063170"
  },
  {
    "text": "data inside of a caduceus video stream at the end of the day and only when it comes to actually viewing the video",
    "start": "3063170",
    "end": "3069740"
  },
  {
    "text": "playing it back do we require things like h.264 encoded data you know such a",
    "start": "3069740",
    "end": "3077390"
  },
  {
    "text": "way that least you know with the fragment being such that it is at least one iframe in that fragment those",
    "start": "3077390",
    "end": "3082580"
  },
  {
    "text": "concepts only really get enforced when you want playback the media either in our console",
    "start": "3082580",
    "end": "3089299"
  },
  {
    "text": "or you know or or using the HLS capability itself but you could happily send any kind of data on put media",
    "start": "3089299",
    "end": "3097029"
  },
  {
    "text": "package it you know we'll just package a default and present that on the get",
    "start": "3097029",
    "end": "3102049"
  },
  {
    "text": "media API where your application can have at it we from a Kinesis video streams perspective would be would",
    "start": "3102049",
    "end": "3109190"
  },
  {
    "text": "happily do that and we would have without throwing up any problems so that's kind of the good news the bad",
    "start": "3109190",
    "end": "3115700"
  },
  {
    "text": "news is that there isn't anything specific to make the task of point log processing any simpler though so can we",
    "start": "3115700",
    "end": "3124069"
  },
  {
    "text": "can use case use it yep is anything special though no awesome thanks yeah",
    "start": "3124069",
    "end": "3129880"
  },
  {
    "text": "I'd like to know about the inference template you have introduced is it",
    "start": "3129880",
    "end": "3135349"
  },
  {
    "text": "possible to tag the frames in the video stream and then process it at the lambda",
    "start": "3135349",
    "end": "3140720"
  },
  {
    "text": "the so instead of fragment so just kind of make sure that I understand the",
    "start": "3140720",
    "end": "3146119"
  },
  {
    "text": "question the question is can you tag the frames instead of the fragments",
    "start": "3146119",
    "end": "3153200"
  },
  {
    "text": "themselves so the way that the the integration the kit integration with",
    "start": "3153200",
    "end": "3158690"
  },
  {
    "text": "sage maker works is that as the video frames that comprise so a fragment",
    "start": "3158690",
    "end": "3164359"
  },
  {
    "text": "comprises of multiple frames the the the software is going to decode every single",
    "start": "3164359",
    "end": "3172700"
  },
  {
    "text": "frame in that fragment and it's going to there is additional functionality there",
    "start": "3172700",
    "end": "3177710"
  },
  {
    "text": "you can choose a sampling frequency so if you don't want to sample everything you know 25 frames per fragment per",
    "start": "3177710",
    "end": "3183200"
  },
  {
    "text": "second you may we should change that but right now as it stands it that it will sample and decode every single frame and",
    "start": "3183200",
    "end": "3190299"
  },
  {
    "text": "then it passes on that decoded frame as some sort of image format jpg PNG so on",
    "start": "3190299",
    "end": "3196160"
  },
  {
    "text": "so forth to the sage maker endpoint which contains your model so the inference that is being returned by sage",
    "start": "3196160",
    "end": "3203869"
  },
  {
    "text": "maker is actually for the frame the thing is that the frame is part of a",
    "start": "3203869",
    "end": "3209690"
  },
  {
    "text": "fragment right and that fragment will have the fragment ID of fragment number associated with it so the actual",
    "start": "3209690",
    "end": "3216410"
  },
  {
    "text": "inference is happening on a per frame basis today does that answer your question we could",
    "start": "3216410",
    "end": "3223390"
  },
  {
    "text": "infer on the device in the camera itself and then tag the frame oh sorry so the question was really around metadata",
    "start": "3223390",
    "end": "3229470"
  },
  {
    "text": "inferencing on the edge device itself you right so today it does operate at",
    "start": "3229470",
    "end": "3236290"
  },
  {
    "text": "the fragment level but you know as I said earlier you could you could kind of",
    "start": "3236290",
    "end": "3245050"
  },
  {
    "text": "work around the fragment tagging and insert additional metadata that gives",
    "start": "3245050",
    "end": "3251020"
  },
  {
    "text": "hints as to what frame ID it actually belongs to so there is a way to kind of work around that and I'd be happy to",
    "start": "3251020",
    "end": "3258220"
  },
  {
    "text": "kind of chat in more detail offline once we're done here on how we could do that thank you",
    "start": "3258220",
    "end": "3263890"
  },
  {
    "text": "any other questions hi",
    "start": "3263890",
    "end": "3269280"
  },
  {
    "text": "when you're making a producer and I want to make my own producer and I just have a series of frames uh-huh do I have to",
    "start": "3269280",
    "end": "3276760"
  },
  {
    "text": "then encode them in in the MKV format before I send them off no thankfully you",
    "start": "3276760",
    "end": "3282099"
  },
  {
    "text": "don't if you use the producer SDK it takes care of the the packaging capability as long as your device is",
    "start": "3282099",
    "end": "3289599"
  },
  {
    "text": "sending h.264 encoded frames which in our experience vast majority of",
    "start": "3289599",
    "end": "3295859"
  },
  {
    "text": "devices in today's world do you're good to go okay also about like when you were",
    "start": "3295859",
    "end": "3303430"
  },
  {
    "text": "demoing it and you have a poor Wi-Fi connection yeah is it able to elegantly",
    "start": "3303430",
    "end": "3310980"
  },
  {
    "text": "reduce the quality of the video or if you lose connection completely will it",
    "start": "3310980",
    "end": "3317700"
  },
  {
    "text": "elegantly get it back even because you're using a streaming API got it got",
    "start": "3317700",
    "end": "3323049"
  },
  {
    "text": "it those are really great questions around broadly speaking the resilience of the producer SDK software in the event of",
    "start": "3323049",
    "end": "3329460"
  },
  {
    "text": "misbehaving connections which happens a lot so the first question was around would it dynamically change the quality",
    "start": "3329460",
    "end": "3336040"
  },
  {
    "text": "maybe that is frame rate or reduce frame rate or reduce resolution as the case",
    "start": "3336040",
    "end": "3341049"
  },
  {
    "text": "might be so the producer SDK in that regard behaves quite simply because it",
    "start": "3341049",
    "end": "3346390"
  },
  {
    "text": "is not an encoder it is not going to try and drop frame rates or",
    "start": "3346390",
    "end": "3352290"
  },
  {
    "text": "mess with resolution if the encoder hardware itself decides that it needs to",
    "start": "3352290",
    "end": "3357360"
  },
  {
    "text": "do that the producer SDK kind of behaves in simple ways think of it as a pipeline you know the image sensor the encoder",
    "start": "3357360",
    "end": "3364260"
  },
  {
    "text": "and then the producer SDK software and it's just gonna happily package and send what the encoder decides to provide it",
    "start": "3364260",
    "end": "3371000"
  },
  {
    "text": "on the second aspect which is around",
    "start": "3371000",
    "end": "3376200"
  },
  {
    "text": "what happens in the interface of network connection drops if you will we had the",
    "start": "3376200",
    "end": "3381390"
  },
  {
    "text": "concept of a content store and a content buffer that is built into the SDK so",
    "start": "3381390",
    "end": "3387110"
  },
  {
    "text": "content can be locally spooled on the device subject to whatever memory",
    "start": "3387110",
    "end": "3393600"
  },
  {
    "text": "constraints you have in there and then once network resumes it will try and purge that of course you can decide to",
    "start": "3393600",
    "end": "3400320"
  },
  {
    "text": "drop the data if you care more about recent data or you could decide to send it back there are some rough edges in",
    "start": "3400320",
    "end": "3407010"
  },
  {
    "text": "order in all honesty around how how much of a buffer you can maintain on the",
    "start": "3407010",
    "end": "3412230"
  },
  {
    "text": "device how reliably it can then Riis pull all of that data because you'll be",
    "start": "3412230",
    "end": "3417510"
  },
  {
    "text": "in this mode well let's say you've been out for several minutes and the device has generated a whole bunch of data you",
    "start": "3417510",
    "end": "3422610"
  },
  {
    "text": "still want to send the live data while back filling this older data so so that",
    "start": "3422610",
    "end": "3427890"
  },
  {
    "text": "part of the experience isn't fully cleanly implemented yet but that's",
    "start": "3427890",
    "end": "3433320"
  },
  {
    "text": "something again that we're actively exploring thank you thank you for your question is really good yes ma'am",
    "start": "3433320",
    "end": "3440090"
  },
  {
    "text": "going back to the Amazon go implementation you mentioned that there were use cases for a restful and",
    "start": "3440090",
    "end": "3446520"
  },
  {
    "text": "interface can you explain and elaborate a little bit more on what those were and how that related to your user experience",
    "start": "3446520",
    "end": "3453000"
  },
  {
    "text": "on something that should be hypothetically instantaneous I'm not",
    "start": "3453000",
    "end": "3459180"
  },
  {
    "text": "sure unfortunately that I'm able to answer that question around Amazon goes use case in in in in depth here today I",
    "start": "3459180",
    "end": "3466050"
  },
  {
    "text": "apologize any other questions yeah yeah one good",
    "start": "3466050",
    "end": "3473190"
  },
  {
    "text": "question it's a very high-level question how does deep blends fit into this Oh lovely question D prince is a producer",
    "start": "3473190",
    "end": "3479910"
  },
  {
    "text": "at the simplest way to think about it is AWS deep lines is a producer today they",
    "start": "3479910",
    "end": "3485609"
  },
  {
    "text": "is kvs Kinesis video streams module that you can simply put into keaney into",
    "start": "3485609",
    "end": "3491660"
  },
  {
    "text": "start streaming into Kinesis video streams actually that is existed for since summer since early summer so that",
    "start": "3491660",
    "end": "3499440"
  },
  {
    "text": "so that exists the the more interesting things start happening when you want to integrate can you deep Lance's",
    "start": "3499440",
    "end": "3507420"
  },
  {
    "text": "capability to do obviously do the detections on the device which is what it is built to do and how you integrate",
    "start": "3507420",
    "end": "3513150"
  },
  {
    "text": "that with something like our metadata per fragment feature right now you we",
    "start": "3513150",
    "end": "3519210"
  },
  {
    "text": "can we get excited about things like that because you can imagine a world where your sage maker does the detection",
    "start": "3519210",
    "end": "3524249"
  },
  {
    "text": "whatever that you've trained to do and then as the fragments are being sent into Kinesis video you tagged it with",
    "start": "3524249",
    "end": "3530309"
  },
  {
    "text": "that detection now that metadata and you know key value tags key value pairs and",
    "start": "3530309",
    "end": "3536299"
  },
  {
    "text": "the fraggin which is the actual video traveled together and what you could do",
    "start": "3536299",
    "end": "3541529"
  },
  {
    "text": "is then access the tags on the cloud side to build your own let's say search infrastructure you've all the fragments",
    "start": "3541529",
    "end": "3548279"
  },
  {
    "text": "are restored and index based on time and now you have this index that you can",
    "start": "3548279",
    "end": "3553319"
  },
  {
    "text": "build that contains all the detections that have been made and now suddenly you have the bit you've the foundations for",
    "start": "3553319",
    "end": "3559319"
  },
  {
    "text": "a very rich rich index to recall and replay data from that sort of stuff that",
    "start": "3559319",
    "end": "3565230"
  },
  {
    "text": "is that's super exciting but but yeah but it works today the producer stuff is super simple exists as a module that you",
    "start": "3565230",
    "end": "3572400"
  },
  {
    "text": "can use today so we've got just about a minute are there any other questions wonderful",
    "start": "3572400",
    "end": "3581609"
  },
  {
    "text": "thank you so much for all of your time and attention I really appreciate it thanks",
    "start": "3581609",
    "end": "3587150"
  }
]