[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "[Music]",
    "start": "2100",
    "end": "6960"
  },
  {
    "text": "hey everyone and welcome back to what's",
    "start": "6960",
    "end": "8880"
  },
  {
    "text": "new with aws",
    "start": "8880",
    "end": "10400"
  },
  {
    "text": "i'm nick walsh and today i'll be talking",
    "start": "10400",
    "end": "12320"
  },
  {
    "text": "about a few of the recent launches from",
    "start": "12320",
    "end": "13759"
  },
  {
    "text": "us here",
    "start": "13759",
    "end": "14320"
  },
  {
    "text": "at amazon web services my hope is that",
    "start": "14320",
    "end": "16800"
  },
  {
    "text": "by educating you on some of the exciting",
    "start": "16800",
    "end": "18480"
  },
  {
    "text": "solutions and events that we'll talk",
    "start": "18480",
    "end": "19840"
  },
  {
    "text": "about",
    "start": "19840",
    "end": "20240"
  },
  {
    "text": "it'll equip you to face any challenges",
    "start": "20240",
    "end": "21840"
  },
  {
    "text": "you have today or on the horizon",
    "start": "21840",
    "end": "24080"
  },
  {
    "text": "let's get started first up is amazon",
    "start": "24080",
    "end": "26800"
  },
  {
    "start": "25000",
    "end": "102000"
  },
  {
    "text": "lookout for metrics",
    "start": "26800",
    "end": "28080"
  },
  {
    "text": "before we begin a little background",
    "start": "28080",
    "end": "30240"
  },
  {
    "text": "businesses of all types have",
    "start": "30240",
    "end": "31840"
  },
  {
    "text": "quantitative metrics that are sampled",
    "start": "31840",
    "end": "33440"
  },
  {
    "text": "periodically",
    "start": "33440",
    "end": "34480"
  },
  {
    "text": "you may have heard of these referred to",
    "start": "34480",
    "end": "36079"
  },
  {
    "text": "as time series data",
    "start": "36079",
    "end": "37760"
  },
  {
    "text": "time series data includes everything",
    "start": "37760",
    "end": "39520"
  },
  {
    "text": "from monthly utility costs",
    "start": "39520",
    "end": "41200"
  },
  {
    "text": "hourly shopping cart conversion rate",
    "start": "41200",
    "end": "43120"
  },
  {
    "text": "daily revenue and more",
    "start": "43120",
    "end": "44960"
  },
  {
    "text": "as you're probably thinking it is",
    "start": "44960",
    "end": "46879"
  },
  {
    "text": "critically important to be alerted when",
    "start": "46879",
    "end": "48559"
  },
  {
    "text": "there are unexpected changes to that",
    "start": "48559",
    "end": "50480"
  },
  {
    "text": "data",
    "start": "50480",
    "end": "51039"
  },
  {
    "text": "and that is exactly where amazon lookout",
    "start": "51039",
    "end": "52960"
  },
  {
    "text": "for metrics comes in",
    "start": "52960",
    "end": "54559"
  },
  {
    "text": "lookout for metrics makes it easy to",
    "start": "54559",
    "end": "56320"
  },
  {
    "text": "detect anomalies in your business",
    "start": "56320",
    "end": "58079"
  },
  {
    "text": "metrics with a simple setup and alerting",
    "start": "58079",
    "end": "60320"
  },
  {
    "text": "process",
    "start": "60320",
    "end": "61280"
  },
  {
    "text": "to get started navigate to the lookout",
    "start": "61280",
    "end": "63120"
  },
  {
    "text": "for metrics console and then create a",
    "start": "63120",
    "end": "65040"
  },
  {
    "text": "detector with just a few clicks",
    "start": "65040",
    "end": "67280"
  },
  {
    "text": "users can provide a historical data set",
    "start": "67280",
    "end": "69119"
  },
  {
    "text": "to help better inform the detector",
    "start": "69119",
    "end": "70880"
  },
  {
    "text": "with an additional option for how",
    "start": "70880",
    "end": "72400"
  },
  {
    "text": "frequently you want the metric to be",
    "start": "72400",
    "end": "74000"
  },
  {
    "text": "assessed by the service",
    "start": "74000",
    "end": "75759"
  },
  {
    "text": "lookout for metric supports 19 data",
    "start": "75759",
    "end": "78000"
  },
  {
    "text": "sources at launch including amazon s3",
    "start": "78000",
    "end": "80560"
  },
  {
    "text": "cloudwatch rds redshift and a number of",
    "start": "80560",
    "end": "83840"
  },
  {
    "text": "sas applications like salesforce marketo",
    "start": "83840",
    "end": "86560"
  },
  {
    "text": "and zendesk additionally you can apply a",
    "start": "86560",
    "end": "89360"
  },
  {
    "text": "detector",
    "start": "89360",
    "end": "90000"
  },
  {
    "text": "to back test on a historical data set",
    "start": "90000",
    "end": "92320"
  },
  {
    "text": "expediting historical analysis",
    "start": "92320",
    "end": "94079"
  },
  {
    "text": "or just to get a feel for how it reacts",
    "start": "94079",
    "end": "96560"
  },
  {
    "text": "to your business's data",
    "start": "96560",
    "end": "98320"
  },
  {
    "text": "for step-by-step onboarding instructions",
    "start": "98320",
    "end": "100079"
  },
  {
    "text": "check out the link to the blog post",
    "start": "100079",
    "end": "101439"
  },
  {
    "text": "below",
    "start": "101439",
    "end": "102799"
  },
  {
    "start": "102000",
    "end": "179000"
  },
  {
    "text": "next let's talk about cloudwatch metrics",
    "start": "102799",
    "end": "104880"
  },
  {
    "text": "streams cloudwatch metric streams make",
    "start": "104880",
    "end": "106799"
  },
  {
    "text": "it easier for aws partners to access",
    "start": "106799",
    "end": "109119"
  },
  {
    "text": "these metrics faster and at scale",
    "start": "109119",
    "end": "111200"
  },
  {
    "text": "by delivering metrics directly to a",
    "start": "111200",
    "end": "112799"
  },
  {
    "text": "kinesis data fire hose stream",
    "start": "112799",
    "end": "115360"
  },
  {
    "text": "traditionally external metrics",
    "start": "115360",
    "end": "116960"
  },
  {
    "text": "aggregators could perform long polling",
    "start": "116960",
    "end": "118640"
  },
  {
    "text": "against the primary cloud watch apis",
    "start": "118640",
    "end": "120799"
  },
  {
    "text": "namely list metrics and get metric data",
    "start": "120799",
    "end": "123680"
  },
  {
    "text": "now this model results in some amount of",
    "start": "123680",
    "end": "125680"
  },
  {
    "text": "latency between when a performance",
    "start": "125680",
    "end": "127200"
  },
  {
    "text": "metric is measured",
    "start": "127200",
    "end": "128080"
  },
  {
    "text": "and one that shows up in your",
    "start": "128080",
    "end": "129119"
  },
  {
    "text": "application typically on the order of",
    "start": "129119",
    "end": "130959"
  },
  {
    "text": "minutes",
    "start": "130959",
    "end": "131840"
  },
  {
    "text": "further managing your own polling",
    "start": "131840",
    "end": "133440"
  },
  {
    "text": "infrastructure for aggregating these",
    "start": "133440",
    "end": "134959"
  },
  {
    "text": "metrics",
    "start": "134959",
    "end": "135520"
  },
  {
    "text": "is yet another form of undifferentiated",
    "start": "135520",
    "end": "137760"
  },
  {
    "text": "heavy lifting",
    "start": "137760",
    "end": "139040"
  },
  {
    "text": "and so partners like datadog dynatrace",
    "start": "139040",
    "end": "141520"
  },
  {
    "text": "new relic splunk and sumo logic",
    "start": "141520",
    "end": "143920"
  },
  {
    "text": "are all making use of cloudwatch metrics",
    "start": "143920",
    "end": "146000"
  },
  {
    "text": "streams to more quickly deliver metrics",
    "start": "146000",
    "end": "147920"
  },
  {
    "text": "and insights to their customers",
    "start": "147920",
    "end": "150160"
  },
  {
    "text": "aws customers working on creating their",
    "start": "150160",
    "end": "152080"
  },
  {
    "text": "own data lakes may also be interested in",
    "start": "152080",
    "end": "154000"
  },
  {
    "text": "cloudwatch metrics streams",
    "start": "154000",
    "end": "155360"
  },
  {
    "text": "allowing you to stream metrics to your",
    "start": "155360",
    "end": "157120"
  },
  {
    "text": "own kinesis data firehose",
    "start": "157120",
    "end": "159760"
  },
  {
    "text": "from there you can implement a number of",
    "start": "159760",
    "end": "161519"
  },
  {
    "text": "common data transformations through use",
    "start": "161519",
    "end": "163360"
  },
  {
    "text": "of amazon s3 and redshift",
    "start": "163360",
    "end": "165280"
  },
  {
    "text": "and then downstream from there amazon",
    "start": "165280",
    "end": "166959"
  },
  {
    "text": "sagemaker amazon emr",
    "start": "166959",
    "end": "168640"
  },
  {
    "text": "amazon athena amazon kinesis data",
    "start": "168640",
    "end": "170640"
  },
  {
    "text": "analytics and more",
    "start": "170640",
    "end": "172400"
  },
  {
    "text": "to learn more about cloudwatch metrics",
    "start": "172400",
    "end": "174080"
  },
  {
    "text": "streams including pricing regional",
    "start": "174080",
    "end": "175680"
  },
  {
    "text": "availability and more",
    "start": "175680",
    "end": "177040"
  },
  {
    "text": "read jeff barr's blog post below third",
    "start": "177040",
    "end": "180319"
  },
  {
    "start": "179000",
    "end": "231000"
  },
  {
    "text": "we have the upcoming aws public sector",
    "start": "180319",
    "end": "182400"
  },
  {
    "text": "online summit",
    "start": "182400",
    "end": "183519"
  },
  {
    "text": "taking place from april 15th to 16th",
    "start": "183519",
    "end": "186000"
  },
  {
    "text": "with over 40 breakout sessions across",
    "start": "186000",
    "end": "187920"
  },
  {
    "text": "seven tracks",
    "start": "187920",
    "end": "188720"
  },
  {
    "text": "there will be a little something for",
    "start": "188720",
    "end": "189920"
  },
  {
    "text": "everybody to make it easier to make the",
    "start": "189920",
    "end": "192000"
  },
  {
    "text": "most of your time",
    "start": "192000",
    "end": "192959"
  },
  {
    "text": "we've crafted a handful of curated",
    "start": "192959",
    "end": "195040"
  },
  {
    "text": "example schedules",
    "start": "195040",
    "end": "196400"
  },
  {
    "text": "whether you're new to the cloud",
    "start": "196400",
    "end": "197840"
  },
  {
    "text": "experimenting with aws",
    "start": "197840",
    "end": "199440"
  },
  {
    "text": "a business leader or someone running",
    "start": "199440",
    "end": "201200"
  },
  {
    "text": "complex aws workloads",
    "start": "201200",
    "end": "202879"
  },
  {
    "text": "the sample schedule should help to get",
    "start": "202879",
    "end": "204560"
  },
  {
    "text": "you off to the races",
    "start": "204560",
    "end": "206080"
  },
  {
    "text": "for those that want to get hands-on we",
    "start": "206080",
    "end": "207680"
  },
  {
    "text": "are excited to offer a number of fun",
    "start": "207680",
    "end": "209760"
  },
  {
    "text": "educational activities including the aws",
    "start": "209760",
    "end": "212159"
  },
  {
    "text": "gm lounge",
    "start": "212159",
    "end": "212959"
  },
  {
    "text": "and four virtual workshops including",
    "start": "212959",
    "end": "215440"
  },
  {
    "text": "intro to amazon elastic container",
    "start": "215440",
    "end": "217040"
  },
  {
    "text": "service",
    "start": "217040",
    "end": "217840"
  },
  {
    "text": "intro to serverless computing intro to",
    "start": "217840",
    "end": "219760"
  },
  {
    "text": "aws cloud development kit",
    "start": "219760",
    "end": "221440"
  },
  {
    "text": "and building an enterprise analytics",
    "start": "221440",
    "end": "223040"
  },
  {
    "text": "solution with amazon redshiftin.net",
    "start": "223040",
    "end": "225599"
  },
  {
    "text": "it's a completely free event so register",
    "start": "225599",
    "end": "227599"
  },
  {
    "text": "today at the link below",
    "start": "227599",
    "end": "228640"
  },
  {
    "text": "to stay in the loop as the event",
    "start": "228640",
    "end": "229920"
  },
  {
    "text": "approaches",
    "start": "229920",
    "end": "231760"
  },
  {
    "start": "231000",
    "end": "310000"
  },
  {
    "text": "well that's all the latest news i had to",
    "start": "231760",
    "end": "233680"
  },
  {
    "text": "talk to you about today but i wanted to",
    "start": "233680",
    "end": "235519"
  },
  {
    "text": "encourage you to get your feedback in",
    "start": "235519",
    "end": "237120"
  },
  {
    "text": "we read it i promise to walk the walk",
    "start": "237120",
    "end": "239519"
  },
  {
    "text": "here we had a question from last week's",
    "start": "239519",
    "end": "240959"
  },
  {
    "text": "episode",
    "start": "240959",
    "end": "241680"
  },
  {
    "text": "saradarkilik asked how does the aws",
    "start": "241680",
    "end": "244159"
  },
  {
    "text": "lambda s3 object feature",
    "start": "244159",
    "end": "246000"
  },
  {
    "text": "work differently than triggering the",
    "start": "246000",
    "end": "247200"
  },
  {
    "text": "lambda function through an s3 cloudwatch",
    "start": "247200",
    "end": "249040"
  },
  {
    "text": "event",
    "start": "249040",
    "end": "250080"
  },
  {
    "text": "well while the resulting output of the",
    "start": "250080",
    "end": "251840"
  },
  {
    "text": "two options may be identical with amazon",
    "start": "251840",
    "end": "254560"
  },
  {
    "text": "s3 object lamp the user only ever has to",
    "start": "254560",
    "end": "256799"
  },
  {
    "text": "interact with the s3 get object api",
    "start": "256799",
    "end": "259519"
  },
  {
    "text": "this means that the amazon s3 object",
    "start": "259519",
    "end": "261280"
  },
  {
    "text": "lambda helps to further reduce",
    "start": "261280",
    "end": "262639"
  },
  {
    "text": "downstream infrastructure complexity",
    "start": "262639",
    "end": "264479"
  },
  {
    "text": "and management of intermediate data",
    "start": "264479",
    "end": "266240"
  },
  {
    "text": "artifacts for example",
    "start": "266240",
    "end": "268080"
  },
  {
    "text": "in a transformation use case like",
    "start": "268080",
    "end": "270000"
  },
  {
    "text": "redacting personally identifiable",
    "start": "270000",
    "end": "271600"
  },
  {
    "text": "information",
    "start": "271600",
    "end": "272720"
  },
  {
    "text": "the way i think about it is that s3",
    "start": "272720",
    "end": "274479"
  },
  {
    "text": "object land that enables different data",
    "start": "274479",
    "end": "276000"
  },
  {
    "text": "consumers to query the data directly",
    "start": "276000",
    "end": "277759"
  },
  {
    "text": "from the same source in",
    "start": "277759",
    "end": "278960"
  },
  {
    "text": "s3 here greatly simplifying your data",
    "start": "278960",
    "end": "281199"
  },
  {
    "text": "pipelines that require object level",
    "start": "281199",
    "end": "282800"
  },
  {
    "text": "transformations",
    "start": "282800",
    "end": "283680"
  },
  {
    "text": "or downstream happenings and event",
    "start": "283680",
    "end": "285360"
  },
  {
    "text": "triggers",
    "start": "285360",
    "end": "287280"
  },
  {
    "text": "well that's it click through to like",
    "start": "287280",
    "end": "289520"
  },
  {
    "text": "subscribe and share",
    "start": "289520",
    "end": "290960"
  },
  {
    "text": "my favorite question in the comments",
    "start": "290960",
    "end": "292479"
  },
  {
    "text": "will get one of these aws twitch",
    "start": "292479",
    "end": "294400"
  },
  {
    "text": "stickers",
    "start": "294400",
    "end": "295120"
  },
  {
    "text": "and jeff will be back for next week so",
    "start": "295120",
    "end": "296960"
  },
  {
    "text": "please get those questions in",
    "start": "296960",
    "end": "298240"
  },
  {
    "text": "and we'll see you on the next episode",
    "start": "298240",
    "end": "311840"
  }
]