[
  {
    "text": "- [Instructor] Hello, everyone.",
    "start": "360",
    "end": "1440"
  },
  {
    "text": "Today I'm gonna show\nyou how you can automate",
    "start": "1440",
    "end": "3330"
  },
  {
    "text": "the PGP file decryption process",
    "start": "3330",
    "end": "5250"
  },
  {
    "text": "for any files uploaded to\nAmazon S3 or Amazon EFS",
    "start": "5250",
    "end": "8850"
  },
  {
    "text": "via the AWS Transfer Family service",
    "start": "8850",
    "end": "11070"
  },
  {
    "text": "using the managed workflow feature.",
    "start": "11070",
    "end": "13260"
  },
  {
    "text": "For the purpose of this video,",
    "start": "13260",
    "end": "14550"
  },
  {
    "text": "I will assume that everyone\nis already familiar",
    "start": "14550",
    "end": "16379"
  },
  {
    "text": "with what the Transfer Family service is",
    "start": "16380",
    "end": "18330"
  },
  {
    "text": "as well as what Transfer\nFamily managed workflows are.",
    "start": "18330",
    "end": "21210"
  },
  {
    "text": "If you're unfamiliar with\neither of these topics,",
    "start": "21210",
    "end": "23279"
  },
  {
    "text": "please refer to the video that is linked",
    "start": "23280",
    "end": "24600"
  },
  {
    "text": "in the description below,",
    "start": "24600",
    "end": "25920"
  },
  {
    "text": "as it provides a great summary",
    "start": "25920",
    "end": "27180"
  },
  {
    "text": "regarding what the\nTransfer Family service is",
    "start": "27180",
    "end": "29400"
  },
  {
    "text": "as well as what Transfer\nFamily managed workflows are.",
    "start": "29400",
    "end": "32759"
  },
  {
    "text": "Quick overview of what I'll be\ncovering today in this video,",
    "start": "32760",
    "end": "35670"
  },
  {
    "text": "I'll start by going over a short refresher",
    "start": "35670",
    "end": "37589"
  },
  {
    "text": "of what PGP is and its typical use cases.",
    "start": "37590",
    "end": "40560"
  },
  {
    "text": "I'll walk through each step\nof the managed workflow",
    "start": "40560",
    "end": "42750"
  },
  {
    "text": "and explain how the PGP\ndecryption Lambda function works.",
    "start": "42750",
    "end": "46020"
  },
  {
    "text": "I'll go over the custom Transfer\nFamily identity provider",
    "start": "46020",
    "end": "48600"
  },
  {
    "text": "that I'll be implementing in this video",
    "start": "48600",
    "end": "50280"
  },
  {
    "text": "and explain why you may want to use this",
    "start": "50280",
    "end": "52020"
  },
  {
    "text": "over traditional Transfer\nFamily managed users.",
    "start": "52020",
    "end": "54780"
  },
  {
    "text": "I'll then explain how all\nthese different pieces",
    "start": "54780",
    "end": "56610"
  },
  {
    "text": "fit together using an\narchitecture diagram.",
    "start": "56610",
    "end": "58980"
  },
  {
    "text": "And I'll finish out the\nvideo by showing you how",
    "start": "58980",
    "end": "60660"
  },
  {
    "text": "to configure the solution\nwithin your own AWS environment",
    "start": "60660",
    "end": "63750"
  },
  {
    "text": "as well as provide a quick demonstration",
    "start": "63750",
    "end": "65339"
  },
  {
    "text": "of what the managed workflow\nlooks like in action.",
    "start": "65340",
    "end": "68070"
  },
  {
    "text": "For those of you who may\nbe unfamiliar with PGP,",
    "start": "68070",
    "end": "70440"
  },
  {
    "text": "it stands for Pretty Good Privacy.",
    "start": "70440",
    "end": "72450"
  },
  {
    "text": "And it's an encryption system used",
    "start": "72450",
    "end": "74070"
  },
  {
    "text": "for sending encrypted\nemails and encrypting files.",
    "start": "74070",
    "end": "77130"
  },
  {
    "text": "PGP is mainly used today\nto help organizations",
    "start": "77130",
    "end": "79469"
  },
  {
    "text": "meet various security\ncompliance requirements",
    "start": "79470",
    "end": "81900"
  },
  {
    "text": "and to ensure that only\nthe intended parties",
    "start": "81900",
    "end": "83910"
  },
  {
    "text": "have access to specific files.",
    "start": "83910",
    "end": "85950"
  },
  {
    "text": "The main challenge, however,\nis that PGP encryption",
    "start": "85950",
    "end": "88500"
  },
  {
    "text": "and decryption add a layer\nof operational complexity.",
    "start": "88500",
    "end": "91620"
  },
  {
    "text": "Today I'll show you",
    "start": "91620",
    "end": "92610"
  },
  {
    "text": "how you can remove this\nundifferentiated heavy lifting",
    "start": "92610",
    "end": "95400"
  },
  {
    "text": "by automating the PGP decryption process",
    "start": "95400",
    "end": "97770"
  },
  {
    "text": "using a Transfer Family managed workflow.",
    "start": "97770",
    "end": "99820"
  },
  {
    "text": "So the managed workflow\ncontains four steps in total,",
    "start": "100680",
    "end": "103230"
  },
  {
    "text": "one of which will manage\nthe PGP decryption process.",
    "start": "103230",
    "end": "106590"
  },
  {
    "text": "The first step is to copy any\nfile that is uploaded to S3",
    "start": "106590",
    "end": "109829"
  },
  {
    "text": "via the Transfer Family to\nan S3 prefix named archive.",
    "start": "109830",
    "end": "113253"
  },
  {
    "text": "The next step then tags\nthe file that was copied",
    "start": "114270",
    "end": "116280"
  },
  {
    "text": "to the archive prefix as archived.",
    "start": "116280",
    "end": "118263"
  },
  {
    "text": "Then the workflow orchestrator",
    "start": "119280",
    "end": "120960"
  },
  {
    "text": "invokes the custom Lambda function,",
    "start": "120960",
    "end": "122700"
  },
  {
    "text": "which performs the actual\nPGP decryption process.",
    "start": "122700",
    "end": "125579"
  },
  {
    "text": "And the Lambda function then\nmoves the decrypted file",
    "start": "125580",
    "end": "127710"
  },
  {
    "text": "to an S3 prefix named decrypted files.",
    "start": "127710",
    "end": "130203"
  },
  {
    "text": "Lastly, the originally uploaded\nfile gets deleted from S3",
    "start": "131160",
    "end": "134400"
  },
  {
    "text": "since it was archived in step one",
    "start": "134400",
    "end": "136140"
  },
  {
    "text": "and decrypted and moved to\nthe decrypted files prefix",
    "start": "136140",
    "end": "138630"
  },
  {
    "text": "in step three.",
    "start": "138630",
    "end": "140130"
  },
  {
    "text": "If any errors occur during\na workflow's execution,",
    "start": "140130",
    "end": "142890"
  },
  {
    "text": "the exception-handling steps\nthat you specify are executed.",
    "start": "142890",
    "end": "145953"
  },
  {
    "text": "Several things can cause\nthese exception-handling steps",
    "start": "146820",
    "end": "149430"
  },
  {
    "text": "to be invoked, such as if the\nfile decryption process fails",
    "start": "149430",
    "end": "152400"
  },
  {
    "text": "for any reason, if the time\nthreshold for a step is reached,",
    "start": "152400",
    "end": "156060"
  },
  {
    "text": "or if a step fails for other reasons,",
    "start": "156060",
    "end": "157830"
  },
  {
    "text": "such as inadequate S3\npermissions on a copy step.",
    "start": "157830",
    "end": "160803"
  },
  {
    "text": "Regardless of the reason which\ncauses the workflow to fail,",
    "start": "161760",
    "end": "164430"
  },
  {
    "text": "the exception-handling\nsteps for this workflow",
    "start": "164430",
    "end": "166590"
  },
  {
    "text": "will copy the file that failed",
    "start": "166590",
    "end": "168150"
  },
  {
    "text": "to an S3 perfects named failed decryption,",
    "start": "168150",
    "end": "170760"
  },
  {
    "text": "tag the file with the\nstatus of failed decryption,",
    "start": "170760",
    "end": "173040"
  },
  {
    "text": "and then delete the\noriginally uploaded file.",
    "start": "173040",
    "end": "175980"
  },
  {
    "text": "The way the custom PGP\ndecryption Lambda function works",
    "start": "175980",
    "end": "178860"
  },
  {
    "text": "is by first, it downloads the\nnewly uploaded file from S3.",
    "start": "178860",
    "end": "182430"
  },
  {
    "text": "It then checks if the\nfile is encrypted or not.",
    "start": "182430",
    "end": "185370"
  },
  {
    "text": "If the file is encrypted,",
    "start": "185370",
    "end": "186870"
  },
  {
    "text": "the Lambda function pulls\nthe private key required",
    "start": "186870",
    "end": "189000"
  },
  {
    "text": "for decryption from secrets manager",
    "start": "189000",
    "end": "190770"
  },
  {
    "text": "and performs the decryption.",
    "start": "190770",
    "end": "192480"
  },
  {
    "text": "Once the file has been decrypted,",
    "start": "192480",
    "end": "193950"
  },
  {
    "text": "it is moved to the S3\nprefix named decrypted files",
    "start": "193950",
    "end": "197069"
  },
  {
    "text": "and a success message is sent\nback to the managed workflow",
    "start": "197070",
    "end": "199800"
  },
  {
    "text": "using the send-workflow step state API.",
    "start": "199800",
    "end": "202113"
  },
  {
    "text": "Once the workflow receives\nthe success message,",
    "start": "203160",
    "end": "205290"
  },
  {
    "text": "it continues with the\nnext step of the workflow.",
    "start": "205290",
    "end": "207450"
  },
  {
    "text": "If the file decryption\nprocess fails for any reason,",
    "start": "207450",
    "end": "209819"
  },
  {
    "text": "the Lambda function\nreports this failure back",
    "start": "209820",
    "end": "211680"
  },
  {
    "text": "to the managed workflow,",
    "start": "211680",
    "end": "212760"
  },
  {
    "text": "and the exception-handling\nsteps are invoked.",
    "start": "212760",
    "end": "215010"
  },
  {
    "text": "In this demo,",
    "start": "215880",
    "end": "216750"
  },
  {
    "text": "I will use a custom secrets\nmanager-based identity provider",
    "start": "216750",
    "end": "219840"
  },
  {
    "text": "for Transfer Family user authentication.",
    "start": "219840",
    "end": "221940"
  },
  {
    "text": "However, please note that\nthis custom identity provider",
    "start": "221940",
    "end": "224520"
  },
  {
    "text": "is optional, as the PGP\ndecryption Lambda function",
    "start": "224520",
    "end": "227490"
  },
  {
    "text": "will work the same regardless",
    "start": "227490",
    "end": "228990"
  },
  {
    "text": "of how you choose to authenticate users.",
    "start": "228990",
    "end": "231420"
  },
  {
    "text": "The reason I'm using this\ncustom identity provider",
    "start": "231420",
    "end": "233880"
  },
  {
    "text": "is because it provides\nseveral extra features",
    "start": "233880",
    "end": "236040"
  },
  {
    "text": "that Transfer Family managed\nusers do not currently support,",
    "start": "236040",
    "end": "238860"
  },
  {
    "text": "such as username and\npassword authentication",
    "start": "238860",
    "end": "240960"
  },
  {
    "text": "and source IP address checks.",
    "start": "240960",
    "end": "242523"
  },
  {
    "text": "Now that you're familiar with\neach step of the process,",
    "start": "243870",
    "end": "246120"
  },
  {
    "text": "let's put it all together with\nthis architecture diagram.",
    "start": "246120",
    "end": "249450"
  },
  {
    "text": "First, the user sends an\nauthentication request",
    "start": "249450",
    "end": "252000"
  },
  {
    "text": "to the Transfer Family server endpoint,",
    "start": "252000",
    "end": "253860"
  },
  {
    "text": "which is then forwarded",
    "start": "253860",
    "end": "254730"
  },
  {
    "text": "to the custom Lambda\nfunction identity provider.",
    "start": "254730",
    "end": "257130"
  },
  {
    "text": "The Lambda function will then check",
    "start": "257970",
    "end": "259410"
  },
  {
    "text": "if the authentication credentials provided",
    "start": "259410",
    "end": "261480"
  },
  {
    "text": "match what is stored\nwithin secrets manager,",
    "start": "261480",
    "end": "263460"
  },
  {
    "text": "for example, a username and password.",
    "start": "263460",
    "end": "265413"
  },
  {
    "text": "If these credentials do match,",
    "start": "266280",
    "end": "267750"
  },
  {
    "text": "then the user is authenticated",
    "start": "267750",
    "end": "268920"
  },
  {
    "text": "in the Transfer Family server.",
    "start": "268920",
    "end": "270750"
  },
  {
    "text": "Step four is where the main part",
    "start": "270750",
    "end": "271950"
  },
  {
    "text": "of the project actually begins\nwhen a user uploads a file",
    "start": "271950",
    "end": "274710"
  },
  {
    "text": "to S3 via the Transfer Family.",
    "start": "274710",
    "end": "277289"
  },
  {
    "text": "Once the file is uploaded,",
    "start": "277290",
    "end": "278700"
  },
  {
    "text": "the Transfer Family managed\nworkflow gets invoked,",
    "start": "278700",
    "end": "280950"
  },
  {
    "text": "and it goes through the four steps",
    "start": "280950",
    "end": "282180"
  },
  {
    "text": "that I discussed earlier in this video.",
    "start": "282180",
    "end": "284130"
  },
  {
    "text": "For the purpose of this video,",
    "start": "284970",
    "end": "286260"
  },
  {
    "text": "I'll be going through\nthis configuration process",
    "start": "286260",
    "end": "288030"
  },
  {
    "text": "rather quickly.",
    "start": "288030",
    "end": "289110"
  },
  {
    "text": "For detailed step-by-step instructions",
    "start": "289110",
    "end": "290849"
  },
  {
    "text": "on how to recreate this project,",
    "start": "290850",
    "end": "292530"
  },
  {
    "text": "please refer to the read-me file",
    "start": "292530",
    "end": "293790"
  },
  {
    "text": "on the AWS Samples GitHub\nRepository for this project,",
    "start": "293790",
    "end": "296760"
  },
  {
    "text": "which is linked in the\nvideo description below.",
    "start": "296760",
    "end": "299093"
  },
  {
    "text": "So the first step of the project",
    "start": "300060",
    "end": "301200"
  },
  {
    "text": "is to clone the GitHub repository",
    "start": "301200",
    "end": "302880"
  },
  {
    "text": "into our CloudShell environment.",
    "start": "302880",
    "end": "304590"
  },
  {
    "text": "After that, we'll change\ninto the new directory",
    "start": "304590",
    "end": "307080"
  },
  {
    "text": "and give the setup environment Bash script",
    "start": "307080",
    "end": "308939"
  },
  {
    "text": "executable permissions.",
    "start": "308940",
    "end": "310500"
  },
  {
    "text": "Then we'll run the setup\nenvironment Bash script.",
    "start": "310500",
    "end": "312963"
  },
  {
    "text": "So right now, this Bash script\nis downloading the package",
    "start": "314820",
    "end": "317550"
  },
  {
    "text": "and binary file which are required",
    "start": "317550",
    "end": "319500"
  },
  {
    "text": "to make the custom PGP\ndecryption Lambda function work.",
    "start": "319500",
    "end": "323310"
  },
  {
    "text": "After it downloads all the required files,",
    "start": "323310",
    "end": "325380"
  },
  {
    "text": "it will zip them up and push\nthem to AWS as a Lambda layer.",
    "start": "325380",
    "end": "329310"
  },
  {
    "text": "If you're not familiar with\nwhat Lambda layers are,",
    "start": "329310",
    "end": "331860"
  },
  {
    "text": "they're used to provide a convenient way",
    "start": "331860",
    "end": "333449"
  },
  {
    "text": "to package libraries\nand other dependencies",
    "start": "333450",
    "end": "335820"
  },
  {
    "text": "that you can use with\nyour Lambda functions.",
    "start": "335820",
    "end": "338280"
  },
  {
    "text": "Now that the script is finished\nbuilding my Lambda layer,",
    "start": "338280",
    "end": "340620"
  },
  {
    "text": "I'm going to deploy the\nfirst CloudFormation stack",
    "start": "340620",
    "end": "342930"
  },
  {
    "text": "by copying this command from the read-me",
    "start": "342930",
    "end": "344699"
  },
  {
    "text": "and pasting it into CloudShell.",
    "start": "344700",
    "end": "346950"
  },
  {
    "text": "First, give the stack a name.",
    "start": "346950",
    "end": "348930"
  },
  {
    "text": "I'm going to name mine\nPGP decryption stack.",
    "start": "348930",
    "end": "351750"
  },
  {
    "text": "Then select a region.",
    "start": "351750",
    "end": "353400"
  },
  {
    "text": "I'm just going to press enter for this one",
    "start": "353400",
    "end": "354960"
  },
  {
    "text": "to leave it as default.",
    "start": "354960",
    "end": "356819"
  },
  {
    "text": "Now, enter a name for the S3 bucket",
    "start": "356820",
    "end": "358830"
  },
  {
    "text": "that the stack is going to create.",
    "start": "358830",
    "end": "360629"
  },
  {
    "text": "I'm going to name mine\nPGP decrypted files,",
    "start": "360630",
    "end": "363150"
  },
  {
    "text": "then respond to the rest of the prompts.",
    "start": "363150",
    "end": "364889"
  },
  {
    "text": "For a full list of all my responses",
    "start": "364890",
    "end": "366540"
  },
  {
    "text": "to the stack-creation parameters,",
    "start": "366540",
    "end": "368190"
  },
  {
    "text": "refer to the read-me file\non the GitHub repository.",
    "start": "368190",
    "end": "371100"
  },
  {
    "text": "Right now, this stack\nis creating the required",
    "start": "371100",
    "end": "373260"
  },
  {
    "text": "IAM rules S3 bucket Lambda function,",
    "start": "373260",
    "end": "376350"
  },
  {
    "text": "PGP private key secret,\nand managed workflow.",
    "start": "376350",
    "end": "378813"
  },
  {
    "text": "Now I'm gonna deploy the\nsecond CloudFormation stack",
    "start": "379710",
    "end": "382139"
  },
  {
    "text": "which will create a Transfer Family server",
    "start": "382140",
    "end": "383970"
  },
  {
    "text": "with the custom identity\nprovider I mentioned earlier",
    "start": "383970",
    "end": "386100"
  },
  {
    "text": "in this video.",
    "start": "386100",
    "end": "387390"
  },
  {
    "text": "First, I'll create a\nnew directory named temp",
    "start": "387390",
    "end": "389850"
  },
  {
    "text": "and change into it.",
    "start": "389850",
    "end": "391500"
  },
  {
    "text": "Now I'm going to grab the link",
    "start": "391500",
    "end": "392490"
  },
  {
    "text": "to download the CloudFormation stack",
    "start": "392490",
    "end": "394199"
  },
  {
    "text": "and paste it into CloudShell.",
    "start": "394200",
    "end": "395990"
  },
  {
    "text": "Now I'll unzip the folder",
    "start": "397800",
    "end": "399060"
  },
  {
    "text": "containing all the files I need to deploy.",
    "start": "399060",
    "end": "401460"
  },
  {
    "text": "And then I'll run the\ncommand sam deploy -guided.",
    "start": "401460",
    "end": "404313"
  },
  {
    "text": "Now I'll give the stack a name.",
    "start": "405270",
    "end": "406770"
  },
  {
    "text": "I'm going to name mine\nTransfer Family server,",
    "start": "406770",
    "end": "408990"
  },
  {
    "text": "but you can name yours\nwhatever you'd like.",
    "start": "408990",
    "end": "410880"
  },
  {
    "text": "After that, accept all the options",
    "start": "410880",
    "end": "412560"
  },
  {
    "text": "as default simply by pressing enter.",
    "start": "412560",
    "end": "414750"
  },
  {
    "text": "Same as with the last stack deployment,",
    "start": "414750",
    "end": "416340"
  },
  {
    "text": "refer to the GitHub read-me file",
    "start": "416340",
    "end": "417840"
  },
  {
    "text": "for a full list of my responses",
    "start": "417840",
    "end": "419280"
  },
  {
    "text": "to these stack-creation parameters.",
    "start": "419280",
    "end": "421030"
  },
  {
    "text": "Now that we've ran the setup\nenvironment Bash script",
    "start": "421950",
    "end": "424110"
  },
  {
    "text": "and deployed both CloudFormation stacks,",
    "start": "424110",
    "end": "426270"
  },
  {
    "text": "I'm going to create a\nnew Transfer Family user",
    "start": "426270",
    "end": "428220"
  },
  {
    "text": "for the custom identity provider.",
    "start": "428220",
    "end": "429870"
  },
  {
    "text": "So I'll navigate to the\nsecrets manager console",
    "start": "430830",
    "end": "433020"
  },
  {
    "text": "and select store a new secret.",
    "start": "433020",
    "end": "434879"
  },
  {
    "text": "Then I'll select other type of secret,",
    "start": "434880",
    "end": "436770"
  },
  {
    "text": "and I'll create four\ndifferent key value pairs",
    "start": "436770",
    "end": "438870"
  },
  {
    "text": "for password, role,\nhome directory details,",
    "start": "438870",
    "end": "441690"
  },
  {
    "text": "and home directory type.",
    "start": "441690",
    "end": "442890"
  },
  {
    "text": "Please note that the secret\nkey names are case-sensitive,",
    "start": "444120",
    "end": "447180"
  },
  {
    "text": "so be sure to name the keys\nexactly the same as I do.",
    "start": "447180",
    "end": "450360"
  },
  {
    "text": "To get the value for the role field,",
    "start": "450360",
    "end": "452099"
  },
  {
    "text": "I'll navigate to the\nCloudFormation console",
    "start": "452100",
    "end": "454050"
  },
  {
    "text": "and select stacks.",
    "start": "454050",
    "end": "455340"
  },
  {
    "text": "Then I'll select the name of\nthe first stack we deployed.",
    "start": "455340",
    "end": "457830"
  },
  {
    "text": "Then I'll select outputs.",
    "start": "457830",
    "end": "459711"
  },
  {
    "text": "Now I'll copy the IAM roles arn,",
    "start": "459711",
    "end": "462240"
  },
  {
    "text": "navigate back into secrets manager,",
    "start": "462240",
    "end": "463949"
  },
  {
    "text": "and paste that into the\nvalue field for my role.",
    "start": "463950",
    "end": "466350"
  },
  {
    "text": "Now for the home directory details field,",
    "start": "467490",
    "end": "469860"
  },
  {
    "text": "I'll navigate to the read-me file,",
    "start": "469860",
    "end": "471599"
  },
  {
    "text": "copy the secret value from the table,",
    "start": "471600",
    "end": "473340"
  },
  {
    "text": "and paste it into secrets manager.",
    "start": "473340",
    "end": "475590"
  },
  {
    "text": "Now I'll switch back to\nCloudFormation once more",
    "start": "475590",
    "end": "477600"
  },
  {
    "text": "to grab the name of the\nS3 bucket that I created.",
    "start": "477600",
    "end": "480270"
  },
  {
    "text": "I'll copy the name, and I'll\nreplace the part of the secret",
    "start": "480270",
    "end": "482639"
  },
  {
    "text": "that says insert S3 bucket name",
    "start": "482640",
    "end": "484830"
  },
  {
    "text": "with the name of my S3 bucket.",
    "start": "484830",
    "end": "486720"
  },
  {
    "text": "Then I'll change to where\nit says insert username",
    "start": "486720",
    "end": "489000"
  },
  {
    "text": "and insert whatever I\nwant the username to be.",
    "start": "489000",
    "end": "491130"
  },
  {
    "text": "For the purpose of this video,",
    "start": "491130",
    "end": "492360"
  },
  {
    "text": "I'm going to name my user test user.",
    "start": "492360",
    "end": "495300"
  },
  {
    "text": "Lastly, for the home\ndirectory details field,",
    "start": "495300",
    "end": "497849"
  },
  {
    "text": "I'm going to paste in the word LOGICAL",
    "start": "497850",
    "end": "499620"
  },
  {
    "text": "in all caps for the secret value.",
    "start": "499620",
    "end": "501660"
  },
  {
    "text": "The reason I'm doing this is\nto create a logical directory",
    "start": "501660",
    "end": "504150"
  },
  {
    "text": "for my Transfer Family user.",
    "start": "504150",
    "end": "505770"
  },
  {
    "text": "This logical directory can be used",
    "start": "505770",
    "end": "507300"
  },
  {
    "text": "to set the user's route directory",
    "start": "507300",
    "end": "508800"
  },
  {
    "text": "to a desired location\nwithin my storage hierarchy.",
    "start": "508800",
    "end": "511800"
  },
  {
    "text": "By implementing a logical\ndirectory structure,",
    "start": "511800",
    "end": "514140"
  },
  {
    "text": "I can avoid disclosing absolute paths",
    "start": "514140",
    "end": "516090"
  },
  {
    "text": "and S3 bucket names to any end users.",
    "start": "516090",
    "end": "519030"
  },
  {
    "text": "If you'd like to learn more\nabout logical directories",
    "start": "519030",
    "end": "521010"
  },
  {
    "text": "with Transfer Family users,",
    "start": "521010",
    "end": "522570"
  },
  {
    "text": "please refer to the link\nin the description below.",
    "start": "522570",
    "end": "525540"
  },
  {
    "text": "Now I'll click next, and\nI'll give my secret a name.",
    "start": "525540",
    "end": "527940"
  },
  {
    "text": "For this custom identity provider,\nthe secret must be stored",
    "start": "527940",
    "end": "530520"
  },
  {
    "text": "in the format of server ID/username.",
    "start": "530520",
    "end": "533550"
  },
  {
    "text": "To get the Transfer Family server ID,",
    "start": "533550",
    "end": "535350"
  },
  {
    "text": "I'll go to the CloudFormation console,",
    "start": "535350",
    "end": "536940"
  },
  {
    "text": "select the name of the\nTransfer Family server stack,",
    "start": "536940",
    "end": "539400"
  },
  {
    "text": "and then select outputs.",
    "start": "539400",
    "end": "541020"
  },
  {
    "text": "I'll copy the server ID",
    "start": "541020",
    "end": "542310"
  },
  {
    "text": "and paste it into the secrets name field.",
    "start": "542310",
    "end": "544500"
  },
  {
    "text": "Then I'll add a backslash followed",
    "start": "544500",
    "end": "545940"
  },
  {
    "text": "by whatever I assigned as the username.",
    "start": "545940",
    "end": "547890"
  },
  {
    "text": "So in my case, I will enter test user.",
    "start": "547890",
    "end": "550860"
  },
  {
    "text": "All right, now I'll press next,",
    "start": "550860",
    "end": "552540"
  },
  {
    "text": "leave all the options as default,",
    "start": "552540",
    "end": "554009"
  },
  {
    "text": "press next again, and then press store.",
    "start": "554010",
    "end": "556143"
  },
  {
    "text": "Now that I've got my user configured,",
    "start": "557160",
    "end": "558810"
  },
  {
    "text": "I need to paste in my PGP private key",
    "start": "558810",
    "end": "560880"
  },
  {
    "text": "into the secret that was created",
    "start": "560880",
    "end": "562440"
  },
  {
    "text": "by the CloudFormation\nstack I deployed earlier",
    "start": "562440",
    "end": "564480"
  },
  {
    "text": "in this video.",
    "start": "564480",
    "end": "565920"
  },
  {
    "text": "So I'm gonna open up my\nPGP private key, copy it,",
    "start": "565920",
    "end": "569850"
  },
  {
    "text": "go back into secrets manager,",
    "start": "569850",
    "end": "571769"
  },
  {
    "text": "replace the text that is\nserving as a placeholder,",
    "start": "571770",
    "end": "574440"
  },
  {
    "text": "and paste in my private\nkey and select save.",
    "start": "574440",
    "end": "576873"
  },
  {
    "text": "The last step I need to complete is",
    "start": "578760",
    "end": "580140"
  },
  {
    "text": "to attach my newly created\nTransfer Family managed workflow",
    "start": "580140",
    "end": "582990"
  },
  {
    "text": "to my Transfer Family server.",
    "start": "582990",
    "end": "584399"
  },
  {
    "text": "To do this in the Transfer Family console,",
    "start": "584400",
    "end": "586500"
  },
  {
    "text": "I'll select the server, then select edit,",
    "start": "586500",
    "end": "589530"
  },
  {
    "text": "then scroll down to where\nit says managed workflows.",
    "start": "589530",
    "end": "592410"
  },
  {
    "text": "And I'll select the\nnewly created workflow.",
    "start": "592410",
    "end": "594560"
  },
  {
    "text": "For the managed workflow execution role,",
    "start": "595590",
    "end": "597930"
  },
  {
    "text": "I will select the role",
    "start": "597930",
    "end": "598950"
  },
  {
    "text": "that's named PGP decryption\nmanaged workflow role.",
    "start": "598950",
    "end": "601593"
  },
  {
    "text": "I'll then scroll down to\nthe bottom and select save.",
    "start": "602910",
    "end": "605509"
  },
  {
    "text": "Now that I've finished\nthe configuration process,",
    "start": "608370",
    "end": "610529"
  },
  {
    "text": "let's see how the managed\nworkflow looks in action.",
    "start": "610530",
    "end": "612960"
  },
  {
    "text": "To start off, I'm gonna\nopen up a PGP encrypted file",
    "start": "612960",
    "end": "615840"
  },
  {
    "text": "stored locally on my machine.",
    "start": "615840",
    "end": "618030"
  },
  {
    "text": "As we can see, the file\nis indeed encrypted,",
    "start": "618030",
    "end": "620370"
  },
  {
    "text": "and no useful information\ncan be gained from this file.",
    "start": "620370",
    "end": "623120"
  },
  {
    "text": "Now I'm gonna connect my\nTransfer Family server.",
    "start": "624090",
    "end": "626400"
  },
  {
    "text": "So first, I'm gonna copy the endpoint ID",
    "start": "626400",
    "end": "628860"
  },
  {
    "text": "from the Transfer Family console.",
    "start": "628860",
    "end": "630990"
  },
  {
    "text": "Then I'm gonna open up\nmy file transfer client.",
    "start": "630990",
    "end": "633120"
  },
  {
    "text": "I'll be using WinSCP,",
    "start": "633120",
    "end": "634500"
  },
  {
    "text": "but you can use any file transfer client",
    "start": "634500",
    "end": "636240"
  },
  {
    "text": "that you would like.",
    "start": "636240",
    "end": "637073"
  },
  {
    "text": "The process will work the exact same.",
    "start": "637073",
    "end": "639420"
  },
  {
    "text": "So now that we've got WinSCP open,",
    "start": "639420",
    "end": "641190"
  },
  {
    "text": "I'm gonna paste in the endpoint ID.",
    "start": "641190",
    "end": "642940"
  },
  {
    "text": "The method for authentication will vary",
    "start": "644250",
    "end": "646260"
  },
  {
    "text": "based on how you deployed\nyour Transfer Family server.",
    "start": "646260",
    "end": "648840"
  },
  {
    "text": "Since I deployed the\nTransfer Family server",
    "start": "648840",
    "end": "650580"
  },
  {
    "text": "with a custom identity provider,",
    "start": "650580",
    "end": "652470"
  },
  {
    "text": "I'll be using a username and\npassword to authenticate.",
    "start": "652470",
    "end": "655170"
  },
  {
    "text": "Now that I've successfully connected",
    "start": "656070",
    "end": "657360"
  },
  {
    "text": "to my Transfer Family server,",
    "start": "657360",
    "end": "658740"
  },
  {
    "text": "I'll upload the encrypted\ndocument that I opened earlier",
    "start": "658740",
    "end": "661080"
  },
  {
    "text": "as well as some other test documents.",
    "start": "661080",
    "end": "662930"
  },
  {
    "text": "Now that these files have been uploaded,",
    "start": "665550",
    "end": "667170"
  },
  {
    "text": "let's go into the S3 bucket",
    "start": "667170",
    "end": "668399"
  },
  {
    "text": "to see how the managed workflow\nhas handled these files.",
    "start": "668400",
    "end": "671160"
  },
  {
    "text": "Right off the bat, I can see\nthe three different prefixes.",
    "start": "671160",
    "end": "673860"
  },
  {
    "text": "Let's look at the archive prefix first.",
    "start": "673860",
    "end": "675959"
  },
  {
    "text": "Once I click into this prefix,",
    "start": "675960",
    "end": "677430"
  },
  {
    "text": "I see another preface that\nis named after the username.",
    "start": "677430",
    "end": "680160"
  },
  {
    "text": "This is done in order to sort files",
    "start": "680160",
    "end": "681600"
  },
  {
    "text": "that are uploaded by different users.",
    "start": "681600",
    "end": "683490"
  },
  {
    "text": "Once I click into this prefix,",
    "start": "683490",
    "end": "684810"
  },
  {
    "text": "I can see all the files that I uploaded",
    "start": "684810",
    "end": "686580"
  },
  {
    "text": "have indeed been archived.",
    "start": "686580",
    "end": "688320"
  },
  {
    "text": "Now I'm going to navigate into\nthe decrypted files' prefix.",
    "start": "688320",
    "end": "691170"
  },
  {
    "text": "And again, we see the username prefix.",
    "start": "691170",
    "end": "693930"
  },
  {
    "text": "Once we click into that,\nwe can see the file",
    "start": "693930",
    "end": "696240"
  },
  {
    "text": "that was initially encrypted\nhas been decrypted.",
    "start": "696240",
    "end": "699360"
  },
  {
    "text": "Now I'm going to go ahead",
    "start": "699360",
    "end": "700193"
  },
  {
    "text": "and download this file and open it.",
    "start": "700193",
    "end": "702420"
  },
  {
    "text": "And as you can see,",
    "start": "702420",
    "end": "703440"
  },
  {
    "text": "the file has indeed been\nsuccessfully decrypted.",
    "start": "703440",
    "end": "705963"
  },
  {
    "text": "Lastly, I'll look at the\nfailed decryption prefix,",
    "start": "707340",
    "end": "709920"
  },
  {
    "text": "where I can see two files that I uploaded",
    "start": "709920",
    "end": "711690"
  },
  {
    "text": "that are purposely intended to\nfail the decryption process.",
    "start": "711690",
    "end": "714330"
  },
  {
    "text": "The first file was encrypted\nwith a different key pair",
    "start": "714330",
    "end": "716790"
  },
  {
    "text": "than what I have stored\nin secrets manager.",
    "start": "716790",
    "end": "718949"
  },
  {
    "text": "The other file was\nactually never encrypted.",
    "start": "718950",
    "end": "721440"
  },
  {
    "text": "It was just a .TXT file\nthat I renamed to .GPG.",
    "start": "721440",
    "end": "725400"
  },
  {
    "text": "Since both these files are\nunable to be decrypted,",
    "start": "725400",
    "end": "727620"
  },
  {
    "text": "we see them here in the\nfailed decryption prefix.",
    "start": "727620",
    "end": "730710"
  },
  {
    "text": "Now I'm going to quickly walk through",
    "start": "730710",
    "end": "731910"
  },
  {
    "text": "what the CloudWatch logs\nlook like for this process.",
    "start": "731910",
    "end": "735300"
  },
  {
    "text": "To access these logs within\nCloudWatch, select log groups.",
    "start": "735300",
    "end": "738690"
  },
  {
    "text": "Then select the specific\nTransfer Family server",
    "start": "738690",
    "end": "741000"
  },
  {
    "text": "and then the specific workflow.",
    "start": "741000",
    "end": "742550"
  },
  {
    "text": "So we can see that the\nworkflow execution started.",
    "start": "743850",
    "end": "746819"
  },
  {
    "text": "Then it copied the file to archive.",
    "start": "746820",
    "end": "749400"
  },
  {
    "text": "After that, it tagged\nthe file for archive.",
    "start": "749400",
    "end": "752760"
  },
  {
    "text": "Then it invoked the custom PGP\ndecryption Lambda function.",
    "start": "752760",
    "end": "756660"
  },
  {
    "text": "And lastly, it deleted the original file.",
    "start": "756660",
    "end": "758943"
  },
  {
    "text": "Now I'm gonna quickly shift\nover to a different log",
    "start": "760080",
    "end": "762270"
  },
  {
    "text": "to show what the\nexception-handling steps look like.",
    "start": "762270",
    "end": "765420"
  },
  {
    "text": "As soon as the workflow\norchestrator receives notification",
    "start": "765420",
    "end": "768089"
  },
  {
    "text": "that a step in the workflow has failed,",
    "start": "768090",
    "end": "770160"
  },
  {
    "text": "it executes the exception-handling steps,",
    "start": "770160",
    "end": "772290"
  },
  {
    "text": "as we can see here.",
    "start": "772290",
    "end": "773253"
  },
  {
    "text": "That completes today's video.",
    "start": "774180",
    "end": "775950"
  },
  {
    "text": "To recap, today we went",
    "start": "775950",
    "end": "777270"
  },
  {
    "text": "over a specific Transfer\nFamily managed workflow",
    "start": "777270",
    "end": "779820"
  },
  {
    "text": "to automate the PGP decryption process.",
    "start": "779820",
    "end": "782340"
  },
  {
    "text": "We walked through the process\nof how to configure this",
    "start": "782340",
    "end": "784470"
  },
  {
    "text": "within your own AWS environment",
    "start": "784470",
    "end": "786509"
  },
  {
    "text": "and finished up by providing a demo",
    "start": "786510",
    "end": "788190"
  },
  {
    "text": "of what the workflow looks like in action.",
    "start": "788190",
    "end": "790800"
  },
  {
    "text": "Thank you all for watching.",
    "start": "790800",
    "end": "791850"
  },
  {
    "text": "I hope you have a great day.",
    "start": "791850",
    "end": "793250"
  }
]