[
  {
    "text": "hi guys uh thank you for joining us today uh the talk is entitled The Quest for the last nine uh or the next nine",
    "start": "3879",
    "end": "10200"
  },
  {
    "text": "building highly available systems and services from the ground up and is a privilege to be here in front of you in",
    "start": "10200",
    "end": "15799"
  },
  {
    "text": "the audience as well as the folks on the stream um this talk I'm going to be talking for a little bit and then I'm",
    "start": "15799",
    "end": "20800"
  },
  {
    "text": "also going to invite Valentino uh from adril who's going to talk about how he thinks about availability at adrol so",
    "start": "20800",
    "end": "27000"
  },
  {
    "text": "we're going to start by talking about a little bit of a history of database across Amazon uh when it started as a a",
    "start": "27000",
    "end": "33079"
  },
  {
    "text": "little startup but before that let's start by talking about Swiss Army knives",
    "start": "33079",
    "end": "38200"
  },
  {
    "text": "now Swiss Army knives were invented in 1891 and they were made for the Swiss Swiss Army for a very particular reason",
    "start": "38200",
    "end": "45960"
  },
  {
    "text": "supposed to be a special purpose tool with three specific purposes a blade a screwdriver and a can opener a blade for",
    "start": "45960",
    "end": "53239"
  },
  {
    "text": "a versatile general purpose uh use can opener for food and screwdriver to be",
    "start": "53239",
    "end": "58640"
  },
  {
    "text": "able to service the rifle now contrary to popular belief the first uh set of s Army knives were actually made in uh",
    "start": "58640",
    "end": "65360"
  },
  {
    "text": "Germany because nobody none of the manufacturing companies and uh szone actually had the manufacturing capacity",
    "start": "65360",
    "end": "71200"
  },
  {
    "text": "to build enough now many many years later we still have Swiss Army knives",
    "start": "71200",
    "end": "76520"
  },
  {
    "text": "and there's still been a lot of Innovations across SS Army knives um and it turns out that SS Army knives they",
    "start": "76520",
    "end": "83280"
  },
  {
    "text": "get bigger and bigger and bigger and one of the things that happens is if you uh They Don't Really scale all that well",
    "start": "83280",
    "end": "89960"
  },
  {
    "text": "right I mean you uh you have all of these key capabilities uh in the SS army knife but you're not going to carry",
    "start": "89960",
    "end": "95399"
  },
  {
    "text": "something that big necessarily in your pocket now these SS Knives have um they",
    "start": "95399",
    "end": "100640"
  },
  {
    "text": "remind us of a very interesting piece which is you know it reminds us of a database if you start using all of its",
    "start": "100640",
    "end": "106360"
  },
  {
    "text": "functionalities all at once if you're not careful you might actually cut yourself and you might actually end up with some availability risks at once",
    "start": "106360",
    "end": "115640"
  },
  {
    "text": "so fast forwarding um you know to the early 2000s you know amazon.com was a uh",
    "start": "117039",
    "end": "123479"
  },
  {
    "text": "rapidly growing company uh that continuously outgrew its uh relational databases because of the fact that um",
    "start": "123479",
    "end": "130560"
  },
  {
    "text": "you know we were growing and what happened was we continued to Benchmark these databases we contined to buy",
    "start": "130560",
    "end": "136200"
  },
  {
    "text": "bigger and bigger boxes because let's be honest like sharting the database is actually really easy but recharting",
    "start": "136200",
    "end": "142920"
  },
  {
    "text": "while uh taking live traffic is always a leap of faith um and that makes it very",
    "start": "142920",
    "end": "148360"
  },
  {
    "text": "difficult to do it while taking aail while not having any availability risk while life traffic is coming in if you",
    "start": "148360",
    "end": "153400"
  },
  {
    "text": "realize that you need to buy more traffic if you need to be able to serve more people and the bigger boxes just",
    "start": "153400",
    "end": "158840"
  },
  {
    "text": "can't handle it right you got to be able to do recharting in real time and that becomes very difficult and it causes",
    "start": "158840",
    "end": "164120"
  },
  {
    "text": "availability risks now back in 2006 we started out with uh Dynamo we wrote a",
    "start": "164120",
    "end": "169720"
  },
  {
    "text": "paper about it and Dynamo V1 was basically a very simple key Value Store",
    "start": "169720",
    "end": "175200"
  },
  {
    "text": "um it was eventually consistent it had very limited quing capability we traded the EXT extensive coring capability that",
    "start": "175200",
    "end": "181080"
  },
  {
    "text": "we had earlier for predictable performance we had um you know it was a replicated distributed hash table",
    "start": "181080",
    "end": "186799"
  },
  {
    "text": "eventual consistent so we traded consistency for availability we traded uh features and uh querying capabilities",
    "start": "186799",
    "end": "194239"
  },
  {
    "text": "for predictable performance and you know it actually was kind of nice but Dynamo itself this is V1 this is not Dynamo DB",
    "start": "194239",
    "end": "201120"
  },
  {
    "text": "it was basically a software that everybody at Amazon all the people who wanted to run their services would download and install and run on their",
    "start": "201120",
    "end": "208200"
  },
  {
    "text": "own and it had its own set of problems right because now the people who are",
    "start": "208200",
    "end": "213480"
  },
  {
    "text": "writing uh machine learning algorithms and recommendation algorithms also had to be distributed systems experts",
    "start": "213480",
    "end": "218560"
  },
  {
    "text": "because they had to learn how to operate a giant database and it was nice because it was horizontally scalable it allowed",
    "start": "218560",
    "end": "224879"
  },
  {
    "text": "you to actually be able to Shard your data across lots and lots of nodes uh commodity nodes uh very easily but now",
    "start": "224879",
    "end": "231879"
  },
  {
    "text": "instead of managing three or four huge boxes um you know our developers were all of a sudden managing hundreds of",
    "start": "231879",
    "end": "238319"
  },
  {
    "text": "boxes because scaling was made so much easier and it turned out that all of a sudden our developers were the new dbas",
    "start": "238319",
    "end": "244840"
  },
  {
    "text": "because why we still had to Benchmark and order new hardware anytime we had to plan for capacity anytime we have to",
    "start": "244840",
    "end": "250680"
  },
  {
    "text": "plan for Q4 we still had to deal with Hardware failures we still had to have pagers on and we still had to deal with",
    "start": "250680",
    "end": "258120"
  },
  {
    "text": "all of the intricate failures that actually occur in a large scale distributed system now no SQL in the",
    "start": "258120",
    "end": "266000"
  },
  {
    "text": "cloud is not necessarily the same thing as Cloud um uh no SQL that is built for the cloud and what that leads to is",
    "start": "266000",
    "end": "272960"
  },
  {
    "text": "manage services so we started thinking about well what can we do in this area what can we do to improve the",
    "start": "272960",
    "end": "278479"
  },
  {
    "text": "availability to improve the productivity of the developers within amazon.com as well as some of the customers that have",
    "start": "278479",
    "end": "284680"
  },
  {
    "text": "come through at as part of AWS and back in 2012 about almost three years ago we",
    "start": "284680",
    "end": "289720"
  },
  {
    "text": "launched Dynamo DB now Dynamo DB itself is a fully managed nosql database it has",
    "start": "289720",
    "end": "296320"
  },
  {
    "text": "fast and predictable performance it seamlessly scales and has easy Administration what that means is",
    "start": "296320",
    "end": "302000"
  },
  {
    "text": "there's no more benchmarking or Hardware there's no capacity planning there's no business continuity risk when you have",
    "start": "302000",
    "end": "307720"
  },
  {
    "text": "to plan for how much more capacity you need when it comes time for your next big launch you configure your database",
    "start": "307720",
    "end": "313639"
  },
  {
    "text": "with respect to how many rights per seconds and how many reads per seconds you want out of your database and behind",
    "start": "313639",
    "end": "319560"
  },
  {
    "text": "the scenes all that complexity of sharting the database all that complexity of multi-az uh durability all",
    "start": "319560",
    "end": "327240"
  },
  {
    "text": "that complexity of multi-az availability is all taken care of for you on your behalf and best of all if you built a",
    "start": "327240",
    "end": "333919"
  },
  {
    "text": "database let's say you wanted to just use the free tier and build a database for 25 writes 25 reads and tomorrow your",
    "start": "333919",
    "end": "340240"
  },
  {
    "text": "application becomes really popular you have a million iops it's okay because you just go to the console and increase",
    "start": "340240",
    "end": "345720"
  },
  {
    "text": "the number of iops and behind the scenes all that resharding is happening on your behalf without you having to worry about",
    "start": "345720",
    "end": "352080"
  },
  {
    "text": "migration of data and ensuring that the right bits land in the right shards especially during that delicate period",
    "start": "352080",
    "end": "357960"
  },
  {
    "text": "when the resharding is happening so what we tried to do with this was to",
    "start": "357960",
    "end": "363160"
  },
  {
    "text": "encapsulate the complexity of distributed systems it's built with um you know it's the the data anytime you",
    "start": "363160",
    "end": "370199"
  },
  {
    "text": "get an acknowledge of a right anytime you do a put on Dynamo before you actually get the result back it's",
    "start": "370199",
    "end": "376680"
  },
  {
    "text": "already persisted on disk on at least two different data centers right and eventually it makes it to three",
    "start": "376680",
    "end": "382599"
  },
  {
    "text": "different data centers um and it's persistent on ssds it has fast and predictable performance as well which is",
    "start": "382599",
    "end": "388199"
  },
  {
    "text": "key for your availability and most importantly because it's built from the ground up to run in three different azs",
    "start": "388199",
    "end": "394479"
  },
  {
    "text": "it is highly available so in even in case of an AZ wide of data center wide outage these are things that not only",
    "start": "394479",
    "end": "401039"
  },
  {
    "text": "are we uh able to um uh are we able to handle but we actively exercise as part of our testing so in this uh uh session",
    "start": "401039",
    "end": "410039"
  },
  {
    "text": "I'm going to go through various lessons we learn over the long years of uh going and building highly available systems",
    "start": "410039",
    "end": "415520"
  },
  {
    "text": "and the first lesson that we learned was manage nosql services allows Ed us to encapsulate the complexity allowed us to",
    "start": "415520",
    "end": "422160"
  },
  {
    "text": "uh strengthen our availability story on a in an organization within Amazon that we were able to share with the rest of",
    "start": "422160",
    "end": "428800"
  },
  {
    "text": "amazon.com and we were able to provide them with a single click experience that",
    "start": "428800",
    "end": "434280"
  },
  {
    "text": "encapsulated all the availability and complexity for them now with that in mind I'm going to turn it over to",
    "start": "434280",
    "end": "440199"
  },
  {
    "text": "Valentino who's going to talk about how they think about availability at adril now adril just to give you guys a",
    "start": "440199",
    "end": "445720"
  },
  {
    "text": "context of what adril is um adril is an ad ising uh company that deals with",
    "start": "445720",
    "end": "452240"
  },
  {
    "text": "about 15,000 advertisers spanning a 100 countries okay so Valentino is handling",
    "start": "452240",
    "end": "457960"
  },
  {
    "text": "over a billion cookies every month um and he's the CTO for agel I would like to welcome him on stage so he can take",
    "start": "457960",
    "end": "463879"
  },
  {
    "text": "you through some of the lessons that he's learned in terms of",
    "start": "463879",
    "end": "468039"
  },
  {
    "text": "availability thank you is this following hello uh can you hear me yeah",
    "start": "469840",
    "end": "478319"
  },
  {
    "text": "okay so first of all what does uh what what is uh as as uh Kaja explained ad is a um is",
    "start": "478319",
    "end": "486360"
  },
  {
    "text": "a marketing platform that allows companies of all sizes and types to effectively run Roi positive marketing",
    "start": "486360",
    "end": "493520"
  },
  {
    "text": "campaigns online and this in order to do this in order to be able to create value out of an the incredible amount of data",
    "start": "493520",
    "end": "500759"
  },
  {
    "text": "that is out there we need to uh build the systems that that are capable of ingesting this amount of data and and",
    "start": "500759",
    "end": "507039"
  },
  {
    "text": "then process all of it in real time effectively in a in in a very U basic",
    "start": "507039",
    "end": "513800"
  },
  {
    "text": "terms add effectively is listening on the impressions of all of the exchanges in the world and this is effectively",
    "start": "513800",
    "end": "520120"
  },
  {
    "text": "today is about a rate of 60 billion Impressions every day so every minute it's about 4050 million impressions that",
    "start": "520120",
    "end": "527240"
  },
  {
    "text": "um our machines are are going to receive and are going to have to process and um",
    "start": "527240",
    "end": "532519"
  },
  {
    "text": "the most important part of all of this is that because we are directly hosted on our customers websites or or we are",
    "start": "532519",
    "end": "539680"
  },
  {
    "text": "buying advertising online uh as people are browsing the web if we are down for",
    "start": "539680",
    "end": "544800"
  },
  {
    "text": "1% of the time over a year so 99% uh up time and we are a hundred",
    "start": "544800",
    "end": "550920"
  },
  {
    "text": "million company this means that effectively I mean AD is more than $100 million company but uh if we're down",
    "start": "550920",
    "end": "558040"
  },
  {
    "text": "just 1% of the time this means losing more than $1 million of Revenue not only that but there is a finite number of",
    "start": "558040",
    "end": "563920"
  },
  {
    "text": "Impressions on the web every single day and if you are down for 1% of that day",
    "start": "563920",
    "end": "569200"
  },
  {
    "text": "and that happens to be the moment in which one of our customers has a sale our customer loses uh loses Revenue",
    "start": "569200",
    "end": "575440"
  },
  {
    "text": "because we weren't able to drive all of the all of the potential uh all of their potential customers over to their site",
    "start": "575440",
    "end": "582200"
  },
  {
    "text": "and so if this wasn't enough and this already is enough to have a very complicated business to run uh at at the",
    "start": "582200",
    "end": "589360"
  },
  {
    "text": "at the scale that we do today we also need to maintain 100 millisec latency so there's a lot of talk about realtime",
    "start": "589360",
    "end": "596079"
  },
  {
    "text": "systems uh in recent years real time for us is in the traditional sense there are",
    "start": "596079",
    "end": "601839"
  },
  {
    "text": "three types of realtime systems there are soft realtime systems which are usually those that if you don't hit the",
    "start": "601839",
    "end": "607760"
  },
  {
    "text": "deadline the system continues to work degraded state but somewhat is fine um",
    "start": "607760",
    "end": "613440"
  },
  {
    "text": "there are hard realtime systems like uh the car ABS system where if basically",
    "start": "613440",
    "end": "619120"
  },
  {
    "text": "the car control system doesn't need the deadline it's completely shut down and it just breaks normally and then there",
    "start": "619120",
    "end": "625920"
  },
  {
    "text": "are firm real-time systems which is what real-time advertising is today and effectively that means that if we don't",
    "start": "625920",
    "end": "631600"
  },
  {
    "text": "hit this 100 millisecond deadline the result is completely useless but if we don't hit it often enough the entire",
    "start": "631600",
    "end": "638120"
  },
  {
    "text": "system effectively starts to crash and burn because all of the exchanges start to uh bombard us with even more request",
    "start": "638120",
    "end": "645000"
  },
  {
    "text": "and or they start to send us almost no requests which means that we lose even more Revenue so all of this needs to is",
    "start": "645000",
    "end": "651399"
  },
  {
    "text": "is it's really complicated to run especially because traffic comes from everywhere in the world and um",
    "start": "651399",
    "end": "656440"
  },
  {
    "text": "effectively there is not enough time for L to travel from from one side of the world to the other and the only way to",
    "start": "656440",
    "end": "661560"
  },
  {
    "text": "do this is to leverage Global presence inside AWS this has two actually big uh big benefits for us not only thanks to",
    "start": "661560",
    "end": "668920"
  },
  {
    "text": "being uh in a everywhere in the world if a region were to go down or there would be some kind of Internet disruption in",
    "start": "668920",
    "end": "675399"
  },
  {
    "text": "Europe using DNS DNS service like Route 53 you can Route traffic to to another",
    "start": "675399",
    "end": "681000"
  },
  {
    "text": "region that is available and from the point of you instead of our availability in different exchanges by being able to",
    "start": "681000",
    "end": "687160"
  },
  {
    "text": "be very close to the exchanges we have uh the ability to use the maximum amount of time for our machines to process uh",
    "start": "687160",
    "end": "695000"
  },
  {
    "text": "every single one of the requests and on top of that we can actually be located close to the specific exchange so if a",
    "start": "695000",
    "end": "701120"
  },
  {
    "text": "specific area in the world were to have a problem only the exchanges that were in that region would be impacted so",
    "start": "701120",
    "end": "706600"
  },
  {
    "text": "having having a global presence allows us to be both available at all times but also uh Route Around problems of uh of",
    "start": "706600",
    "end": "714160"
  },
  {
    "text": "the internet that don't really depend on us and so naturally all of this is is a",
    "start": "714160",
    "end": "719240"
  },
  {
    "text": "very complicated system and uh and one might think that when when there are so",
    "start": "719240",
    "end": "724480"
  },
  {
    "text": "many moving parts that the company might want to move a little bit slow a little bit slower maybe maybe you don't want to",
    "start": "724480",
    "end": "730800"
  },
  {
    "text": "push right around Thanksgiving because a lot of uh families are doing their their shopping and you don't want to risk",
    "start": "730800",
    "end": "736920"
  },
  {
    "text": "breaking customer sites or you don't want to take down your infrastructure and and so maybe you think you're going",
    "start": "736920",
    "end": "742639"
  },
  {
    "text": "to you're going to be a little bit more careful maybe only put the best of the best engineers uh that never make any",
    "start": "742639",
    "end": "750440"
  },
  {
    "text": "type of mistake on these machines and uh and if this is really what you're going to think that that adal does or that a",
    "start": "750440",
    "end": "756639"
  },
  {
    "text": "company in this situation should do well you would be wrong uh Andy Jesse said",
    "start": "756639",
    "end": "761959"
  },
  {
    "text": "even said this said this uh this morning too and Mark andron at a one of his famous tweets um",
    "start": "761959",
    "end": "770760"
  },
  {
    "text": "uh not too long ago talked about how cyle time compression is probably the most underrepresented uh and underrated",
    "start": "770760",
    "end": "776880"
  },
  {
    "text": "uh force in determining winners or losers in general and they Jesse today talked about speed and that's why Amazon",
    "start": "776880",
    "end": "782519"
  },
  {
    "text": "today released a lot of life cycle tools um the reality is that if if your",
    "start": "782519",
    "end": "787560"
  },
  {
    "text": "company is going to slow down as the complexity is growing of your systems then even your pace of innovation and",
    "start": "787560",
    "end": "793720"
  },
  {
    "text": "your ability to uh improve your products is going to slow down and that's the last thing you want in a market that",
    "start": "793720",
    "end": "798880"
  },
  {
    "text": "continuously have new competitors and has a very low barrier to entry like advertising and so and so how did we how",
    "start": "798880",
    "end": "807160"
  },
  {
    "text": "could we possibly uh create a fast- pacing environment in",
    "start": "807160",
    "end": "812279"
  },
  {
    "text": "which we can release software constantly and we don't need to be scared about holidays coming up or sales of our",
    "start": "812279",
    "end": "818639"
  },
  {
    "text": "customers we need to build a platform that is reliable and we can that we can rely on as we move forward and every",
    "start": "818639",
    "end": "823680"
  },
  {
    "text": "step we take we have a we have a guarantee that the system that we have deployed is Rock Solid and we do this",
    "start": "823680",
    "end": "829680"
  },
  {
    "text": "using Brooklyn deploys um it's a fairly common uh common strategy of deployment",
    "start": "829680",
    "end": "835639"
  },
  {
    "text": "it's what Amazon uh Apollo that they release this morning daza what multiple",
    "start": "835639",
    "end": "840800"
  },
  {
    "text": "other companies like Netflix do and otherly it is a very uh tough scale um",
    "start": "840800",
    "end": "847000"
  },
  {
    "text": "tough to scale problem effectively all of our machines and there's thousands of them all around the world report",
    "start": "847000",
    "end": "852639"
  },
  {
    "text": "thousands of real-time metrics into our uh metric dashboards and this is the",
    "start": "852639",
    "end": "857720"
  },
  {
    "text": "dashboard that we use for example to run releases in the middle when uh when uh the average when when the graph goes",
    "start": "857720",
    "end": "863839"
  },
  {
    "text": "down it's because it's goes about to half because two clusters have have been spawn",
    "start": "863839",
    "end": "869440"
  },
  {
    "text": "next to each other and using these dashboards even even in an automatic fashion we can tell if the system is",
    "start": "869440",
    "end": "875279"
  },
  {
    "text": "behaving correctly compared to what the previous version was doing and once uh once we are actually absolutely sure",
    "start": "875279",
    "end": "881639"
  },
  {
    "text": "that there are no no possible issues ongoing without in in in the infrastructure in the new pieces of code",
    "start": "881639",
    "end": "887399"
  },
  {
    "text": "that that we're sending out then we roll out the uh the new version and and the",
    "start": "887399",
    "end": "893120"
  },
  {
    "text": "retire the the old one of course it's complicated and sometimes the systems are uh way more complicated to deal with",
    "start": "893120",
    "end": "900800"
  },
  {
    "text": "than just Rolling In and Out software for example if you're dealing with databases it's very or",
    "start": "900800",
    "end": "906120"
  },
  {
    "text": "state or state the the um rolling state in and out like that with different",
    "start": "906120",
    "end": "911720"
  },
  {
    "text": "machines it's extremely complicated and so we were faced with the challenge of where do we put all of the states that",
    "start": "911720",
    "end": "917560"
  },
  {
    "text": "these machines generate every one of these uh these machines is buiding on behalf of our customers for more than 30",
    "start": "917560",
    "end": "924360"
  },
  {
    "text": "50 30 to uh 40,000 campaigns every moment in time and U it's very",
    "start": "924360",
    "end": "930639"
  },
  {
    "text": "complicated to maintain a distributed State on 30,000 objects across thousands of machines distributed around the world",
    "start": "930639",
    "end": "937639"
  },
  {
    "text": "and make sure that when you do a deployment and you replace an old set of machines with a new set of machine that none of that data is getting lost and so",
    "start": "937639",
    "end": "946120"
  },
  {
    "text": "how did we how did we end up going there well state is a very complicated thing to deal with and it's the last thing",
    "start": "946120",
    "end": "952800"
  },
  {
    "text": "that I would like to figure out how to fix and so um as Amazon shifted their",
    "start": "952800",
    "end": "959759"
  },
  {
    "text": "their loads over to Dynamo DB and they ended up gaining a little bit more uh availability we ended up doing the same",
    "start": "959759",
    "end": "965360"
  },
  {
    "text": "all of the machines moved to be stateless there's no baggage that they were carrying around as they were",
    "start": "965360",
    "end": "970440"
  },
  {
    "text": "operating and effectively the infrastructure has been designed and changed so that all of the",
    "start": "970440",
    "end": "976360"
  },
  {
    "text": "machines instead of talking to each other or even maintaining their own State internally they would instead",
    "start": "976360",
    "end": "981680"
  },
  {
    "text": "communicate through the other Amazon web services that are available so effectively all of the requests come",
    "start": "981680",
    "end": "987040"
  },
  {
    "text": "through the elb and the configuration for each machine is push is pulled from from Amazon",
    "start": "987040",
    "end": "993120"
  },
  {
    "text": "S3 but then every time these machines change any type of configuration or internal State instead of talking to",
    "start": "993120",
    "end": "999800"
  },
  {
    "text": "each other uh directly on the network they might go down or change version or whatnot they instead push all of their",
    "start": "999800",
    "end": "1006240"
  },
  {
    "text": "updates inside Amazon Kinesis the stream that goes into Amazon Kinesis is a",
    "start": "1006240",
    "end": "1011560"
  },
  {
    "text": "stream that does about 600,000 updates every uh every second and uh basically",
    "start": "1011560",
    "end": "1018000"
  },
  {
    "text": "they keep TR track these machines are keeping track of this State of the State of spend of 30,000 uh 30,000 campaigns",
    "start": "1018000",
    "end": "1024400"
  },
  {
    "text": "through uh about 600,000 objects and these 600,000 objects are replicated",
    "start": "1024400",
    "end": "1030319"
  },
  {
    "text": "from Kinesis to all of the regions in the world inside Dynamo DB and the machines themselves then update them",
    "start": "1030319",
    "end": "1035880"
  },
  {
    "text": "update fetching again the data from from Dynamo DB all of this uh that might seem",
    "start": "1035880",
    "end": "1041798"
  },
  {
    "text": "complicated system is in fact uh extremely stable and we have noticed while while running this uh this uh this",
    "start": "1041799",
    "end": "1048240"
  },
  {
    "text": "new infrastructure that the discrepancy between the data that we were seeing in the logs at the end of the day and the",
    "start": "1048240",
    "end": "1053679"
  },
  {
    "text": "data instead that we were seeing in real time was less than 1% off and for less than 2,000 objects out out of 600,000 so",
    "start": "1053679",
    "end": "1061280"
  },
  {
    "text": "effectively because of the low of the low latency of the entire system um that",
    "start": "1061280",
    "end": "1066600"
  },
  {
    "text": "we ended up building thanks to the kinesi service and and Amazon Dynamo theb service we were able to effectively",
    "start": "1066600",
    "end": "1072440"
  },
  {
    "text": "remove the state from all of the machines which then didn't need to worry about any of that anymore they just talked to the services and then the the",
    "start": "1072440",
    "end": "1079280"
  },
  {
    "text": "rest of the protocol did did all the necessary steps and so ultimately what did this allow us to do",
    "start": "1079280",
    "end": "1086039"
  },
  {
    "text": "there is more than 500 real-time instances that are running in four different regions when we do a a rolling",
    "start": "1086039",
    "end": "1092159"
  },
  {
    "text": "deploy this rolling deploy takes about 45 minutes and uh it takes 45 minutes",
    "start": "1092159",
    "end": "1097240"
  },
  {
    "text": "because we just want to be very safe that all of the data and all of the spend information and the metrics",
    "start": "1097240",
    "end": "1102640"
  },
  {
    "text": "are uh moving in the right direction and they're not going to have strange spikes when more load goes to them and it's",
    "start": "1102640",
    "end": "1109559"
  },
  {
    "text": "about one engineer that runs through all of this process for all the four regions in the world and we we basically have um",
    "start": "1109559",
    "end": "1116640"
  },
  {
    "text": "no downtime there is no uh there is no there is no quantifiable downtime that",
    "start": "1116640",
    "end": "1122280"
  },
  {
    "text": "we see from all of their metrics all of the or or the exchanges that we work with and um basically all of this this",
    "start": "1122280",
    "end": "1128960"
  },
  {
    "text": "stuff is automated so the engineer is there just to just in case of something that needs to be rolled back but they're",
    "start": "1128960",
    "end": "1134520"
  },
  {
    "text": "not there in order to make any type of decision about when something is going to be fully rolled out to the rest of",
    "start": "1134520",
    "end": "1139919"
  },
  {
    "text": "the infrastructure and so there's there's companies there's our competitors uh public companies that run",
    "start": "1139919",
    "end": "1146960"
  },
  {
    "text": "very similar infrastructure with uh perhaps their own data centers or their own their own databases in the back and",
    "start": "1146960",
    "end": "1153200"
  },
  {
    "text": "the matter of fact is that ad is not a database company it's not a storage company we generate uh more or less about a",
    "start": "1153200",
    "end": "1160760"
  },
  {
    "text": "petabyte of data every month of compressed data we're not a storage company even though we generate that much data and we're not we're not a a",
    "start": "1160760",
    "end": "1168440"
  },
  {
    "text": "database company even though we run uh about uh uh 1 million requests per second on Dynamo DB we are we just",
    "start": "1168440",
    "end": "1175200"
  },
  {
    "text": "happen to have loads that are very similar to uh what a database company would need to uh would need to be able",
    "start": "1175200",
    "end": "1182039"
  },
  {
    "text": "to sustain if they were to write a software like Dynam or a company like building something like A3 if they",
    "start": "1182039",
    "end": "1188520"
  },
  {
    "text": "needed to uh to store that much quantity of data but we don't want to spend the",
    "start": "1188520",
    "end": "1193880"
  },
  {
    "text": "time on those things but we need to have those rocks solid and uh by using Dynamo DB and Amazon S3 and Kinesis we've",
    "start": "1193880",
    "end": "1201159"
  },
  {
    "text": "effectively been able to defocus our attention from from the things that we're not adding value to our customers",
    "start": "1201159",
    "end": "1207080"
  },
  {
    "text": "our customers don't see if we're using Dynamo DB or not but they do see when we're not up and they do see when we",
    "start": "1207080",
    "end": "1213159"
  },
  {
    "text": "overspend on their campaigns and also our our uh engineering team can actually",
    "start": "1213159",
    "end": "1219039"
  },
  {
    "text": "just instead of growing just because our infrastructure is growing can grow because we need to build more products rather than because we have more machine",
    "start": "1219039",
    "end": "1225720"
  },
  {
    "text": "going around and so and this is it uh",
    "start": "1225720",
    "end": "1231080"
  },
  {
    "text": "basically all [Applause]",
    "start": "1231080",
    "end": "1238008"
  },
  {
    "text": "right thank you um so some of the tools that Valentino mentioned just uh if you",
    "start": "1239159",
    "end": "1244200"
  },
  {
    "text": "want to look them up um one of the things that he mentioned was Route 53 Route 53 allows you to have latency",
    "start": "1244200",
    "end": "1249320"
  },
  {
    "text": "based routing uh so you can actually uh route your customers automatically to the closest region but it also has",
    "start": "1249320",
    "end": "1255120"
  },
  {
    "text": "built-in health checks so you can automatically take out entire deployments when they're not passing when they're no longer passing these",
    "start": "1255120",
    "end": "1261200"
  },
  {
    "text": "health checks and there's a lot of tools like that that are available uh to you within AWS also things like elastic load",
    "start": "1261200",
    "end": "1266919"
  },
  {
    "text": "balancers that allow you to balance your load across multiple availability zones within ec2 and then how you can stitch",
    "start": "1266919",
    "end": "1272279"
  },
  {
    "text": "them together with rafter 3 as well uh across regions so with that said we're",
    "start": "1272279",
    "end": "1278159"
  },
  {
    "text": "going to go through some of the uh secret sauce for how you actually create a successful service and we some of the",
    "start": "1278159",
    "end": "1283200"
  },
  {
    "text": "deployment practices that we employ um you know within AWS so within AWS when",
    "start": "1283200",
    "end": "1289200"
  },
  {
    "text": "we start thinking about how we're going to build a new service we start by looking at the customer and what is the problem that we're trying to solve we",
    "start": "1289200",
    "end": "1295159"
  },
  {
    "text": "start by writing a PR and FAQ and so forth and then we started going down this uh virtuous circle of you know you",
    "start": "1295159",
    "end": "1301120"
  },
  {
    "text": "start by architecting then you develop then you test it and you have to deploy it monitor it reassess your goals and",
    "start": "1301120",
    "end": "1307960"
  },
  {
    "text": "then repeat that cycle over and over again now in order for you to be able to do that there's a lot of innovation that",
    "start": "1307960",
    "end": "1313559"
  },
  {
    "text": "needs to happen there's a lot of deployments that need to happen you need to be continuously able to improve and enhance your your system without having",
    "start": "1313559",
    "end": "1319039"
  },
  {
    "text": "any downtime so first and foremost what you have to do is after you've done the",
    "start": "1319039",
    "end": "1324240"
  },
  {
    "text": "architecture and evaluation and the coding you have to be able to test and testing is pretty much a um a lifelong",
    "start": "1324240",
    "end": "1331000"
  },
  {
    "text": "journey because things will continue coming up and you know some of the corner cases might start to come up and you might start to think well the law of",
    "start": "1331000",
    "end": "1337600"
  },
  {
    "text": "large number is your friend why this is a very small scenario it only happens one in a million times but the problem",
    "start": "1337600",
    "end": "1343400"
  },
  {
    "text": "is a law of large number is your friend until you actually hit large number so when you running service says the scale",
    "start": "1343400",
    "end": "1348520"
  },
  {
    "text": "that for instance Valentino is running at large the small incidents small probability incidents are normal",
    "start": "1348520",
    "end": "1353559"
  },
  {
    "text": "occurrences right so you have to be able to plan for Success you have to be able to plan accordingly and make sure that",
    "start": "1353559",
    "end": "1359000"
  },
  {
    "text": "you have the test in place that can detect some of these anomalies some of the things that we do on Amazon include",
    "start": "1359000",
    "end": "1364159"
  },
  {
    "text": "um you know using formal methods and and actually doing formal proofs for large scale distributed systems that we that",
    "start": "1364159",
    "end": "1369640"
  },
  {
    "text": "we're changing but more importantly you got to basically be able to embrace failures you got to realize that",
    "start": "1369640",
    "end": "1375400"
  },
  {
    "text": "failures are going to happen and you shouldn't be surprised so so the things that we do as we do our deployment as we improve our software you know we got to",
    "start": "1375400",
    "end": "1381880"
  },
  {
    "text": "do the basic unit testing but then you also got to do things like fault injection what happens when different",
    "start": "1381880",
    "end": "1387600"
  },
  {
    "text": "parts of the system actually start to fall apart what happens when the system grows out of Beyond uh out of bounds and",
    "start": "1387600",
    "end": "1393159"
  },
  {
    "text": "goes beyond what you imagine so that's the scale testing part what happens when you network when you brown out a network",
    "start": "1393159",
    "end": "1399000"
  },
  {
    "text": "what how does your system actually deal with NK the two data centers that are not necessarily connected in the best uh",
    "start": "1399000",
    "end": "1405440"
  },
  {
    "text": "situation uh during an internet outage for instance what happens when an entire data center goes down now Netflix uh for instance",
    "start": "1405440",
    "end": "1412039"
  },
  {
    "text": "has open source a lot of the chaos monkey and Chaos gorilla stuff that does a lot of this stuff as well and we at",
    "start": "1412039",
    "end": "1418200"
  },
  {
    "text": "Amazon when we start deploying Services when we when we do incremental deployments we do a lot of this testing to ensure that our system is resilient",
    "start": "1418200",
    "end": "1425120"
  },
  {
    "text": "to some of these things that can actually happen in any large scale environment but after you're done with",
    "start": "1425120",
    "end": "1430840"
  },
  {
    "text": "the testing after you have validated that this process that you wrote the pieces of software that you wrote",
    "start": "1430840",
    "end": "1436400"
  },
  {
    "text": "actually are going to work you're going to deploy this in uh into the wild and how do you deal with that so first of",
    "start": "1436400",
    "end": "1443200"
  },
  {
    "text": "all when we start doing the deployments we deploy with a lot of care and these are things that you can involve in your service as well so you got to pay a lot",
    "start": "1443200",
    "end": "1449880"
  },
  {
    "text": "of attention to what your release cycle actually looks like now within Amazon we start by doing uh in my team we start by",
    "start": "1449880",
    "end": "1455760"
  },
  {
    "text": "doing a gamma cluster uh which is basically there to simulate a real world environment now it may not be running at the full scale of the real world but you",
    "start": "1455760",
    "end": "1462760"
  },
  {
    "text": "start you know simulating what things might actually go wrong known issues that you might go wrong and you try to",
    "start": "1462760",
    "end": "1467840"
  },
  {
    "text": "simulate as much of the scale as you possibly can in this environment so you can learn lessons now you've done your",
    "start": "1467840",
    "end": "1473039"
  },
  {
    "text": "unit testing you've done your architectural evaluation you've done your gamma testing should you just go ahead and turn everything off and put",
    "start": "1473039",
    "end": "1479039"
  },
  {
    "text": "the new one in no so then it comes down to phase deployment so the way we start doing this is we start by deploying the",
    "start": "1479039",
    "end": "1485279"
  },
  {
    "text": "software to one of the many boxes and see what happens you put that box under very strict scrutiny and watch what do",
    "start": "1485279",
    "end": "1492320"
  },
  {
    "text": "the latencies look like what do the 39 latencies look like on that box is the garbage collection cycle any different",
    "start": "1492320",
    "end": "1497840"
  },
  {
    "text": "on this box and the rest of the fleet and once you've gained enough confidence that this real one box is gaining is",
    "start": "1497840",
    "end": "1504720"
  },
  {
    "text": "able to operate the way you expect it to operate in real life production workloads then you're actually confident",
    "start": "1504720",
    "end": "1510679"
  },
  {
    "text": "enough to start deploying it a little more aggressively at that point we start deploying across an entire a we start",
    "start": "1510679",
    "end": "1516960"
  },
  {
    "text": "going by rack by rack slowly and injecting a little bit of time in each of the deployments to ensure that um",
    "start": "1516960",
    "end": "1524200"
  },
  {
    "text": "that you know if there's anything that shows up at a a particular scale you're able to roll back very very quickly um",
    "start": "1524200",
    "end": "1530600"
  },
  {
    "text": "and then after that you know once you've done an a then you do multiple azs and then you move on to to different regions",
    "start": "1530600",
    "end": "1536360"
  },
  {
    "text": "with some bake time in the middle for each cycle and what you're doing there is you're really just watching your system",
    "start": "1536360",
    "end": "1542520"
  },
  {
    "text": "the new system that you have deployed act and perform in the real world and the other thing that you need to have in",
    "start": "1542520",
    "end": "1548360"
  },
  {
    "text": "a scenario like that is to be able to detect when something has gone wrong and immediately roll back right because in",
    "start": "1548360",
    "end": "1555000"
  },
  {
    "text": "the time of deployment if there's a problem with this particular software or if you actually misconfigure something",
    "start": "1555000",
    "end": "1560200"
  },
  {
    "text": "it's as part of that deployment you got to be able to automatically roll back and that deployment roll back has to be",
    "start": "1560200",
    "end": "1567039"
  },
  {
    "text": "built in and the way you you detect when to roll back is the is the crucial part which is monitoring even after you've",
    "start": "1567039",
    "end": "1573159"
  },
  {
    "text": "done the deployment you have to be able to continuously monitor the system um so some of the tools that we",
    "start": "1573159",
    "end": "1580159"
  },
  {
    "text": "use within Amazon um to do this process we've actually uh released today things",
    "start": "1580159",
    "end": "1585360"
  },
  {
    "text": "like AWS uh code deploy and code pipeline that are going to allow folks outside allow the AWS customers to",
    "start": "1585360",
    "end": "1591559"
  },
  {
    "text": "actually be able to use um and deploy uh AWS capabilities that internal",
    "start": "1591559",
    "end": "1596640"
  },
  {
    "text": "capabilities at Amazon uh to deploy their own software now put things in perspective um you know we do about 50",
    "start": "1596640",
    "end": "1602240"
  },
  {
    "text": "million deployments a year that's about a one and a half deployments every second across Amazon and you have to have some of this automation built in in",
    "start": "1602240",
    "end": "1608520"
  },
  {
    "text": "order to be able to do this effectively and safely but what does monitoring mean",
    "start": "1608520",
    "end": "1613880"
  },
  {
    "text": "right so the system has been deployed um and it's been running for an hour or was running for a day running for a week but",
    "start": "1613880",
    "end": "1619720"
  },
  {
    "text": "you can still have issues in your system say a small memory leak that only manifests itself after the system has",
    "start": "1619720",
    "end": "1625240"
  },
  {
    "text": "been running for over a week or it only manifests itself under a particular customer workload to do that you got to",
    "start": "1625240",
    "end": "1632360"
  },
  {
    "text": "be able to keep a strong eye on actually every single component of the system and you got to not just be worried about the",
    "start": "1632360",
    "end": "1637679"
  },
  {
    "text": "average you got to look at the tp99 and this is not just for your performance but also for monitoring because tp99 is",
    "start": "1637679",
    "end": "1644679"
  },
  {
    "text": "actually a great and leading indicator of when things are about to go wrong if your tp99 is consistently solid at one",
    "start": "1644679",
    "end": "1651559"
  },
  {
    "text": "point all of a sudden it starts to slowly creep up something might be about to go wrong you might want to take a",
    "start": "1651559",
    "end": "1656919"
  },
  {
    "text": "quick look at what's actually happening in the system could be a memory leak could be a a network Brown out coming",
    "start": "1656919",
    "end": "1662279"
  },
  {
    "text": "your way and in order to deal with that one of the things that we end up doing internally especially is you quantify",
    "start": "1662279",
    "end": "1668640"
  },
  {
    "text": "you define a quantifiable internal SLA and you want to set up alarm so that you can alarm whenever that SLA is breached",
    "start": "1668640",
    "end": "1676240"
  },
  {
    "text": "you want to have that baked in into your alarming system into your monitoring system so whenever your tp99 latencies",
    "start": "1676240",
    "end": "1681440"
  },
  {
    "text": "for instance in Dynamo DB whenever the tp99 latencies if they ever start to exceed a particular threshold we alarm",
    "start": "1681440",
    "end": "1687279"
  },
  {
    "text": "and we start looking at what's actually happening is it because of an internet outage or is it a network data center uh",
    "start": "1687279",
    "end": "1693600"
  },
  {
    "text": "uh connectivity issue but more importantly than that so now you you can actually go overboard on this right so",
    "start": "1693600",
    "end": "1699279"
  },
  {
    "text": "one of the things you might start doing is you might start set up an alarm on every little thing and now what happens",
    "start": "1699279",
    "end": "1704760"
  },
  {
    "text": "is your engineers are going to start getting pages every 10 minutes right or every hour and and when you have when",
    "start": "1704760",
    "end": "1709919"
  },
  {
    "text": "you start over alarming what happens is people just ignore the alarms right so you got to be very thoughtful on what",
    "start": "1709919",
    "end": "1716120"
  },
  {
    "text": "alarms you set so you got to make sure that you don't under alarm but you also want to make sure that you're not",
    "start": "1716120",
    "end": "1721200"
  },
  {
    "text": "getting so many pages that the most crucial alarm is just going to get overlooked and get bossed in the noise",
    "start": "1721200",
    "end": "1726519"
  },
  {
    "text": "across all of the other alarming that is happening and then another key lesson",
    "start": "1726519",
    "end": "1731919"
  },
  {
    "text": "that we learned was don't just rely on the monitoring system that You' have built yourself so you might have a lot of metrics that are being emitted from",
    "start": "1731919",
    "end": "1737880"
  },
  {
    "text": "your system but you don't want to just rely on those metrics because what happens if the metrics themselves are not performing well what happens if a",
    "start": "1737880",
    "end": "1744880"
  },
  {
    "text": "new deployment that you made actually turns off the metrics for instance and the way you validate that one of the key",
    "start": "1744880",
    "end": "1750240"
  },
  {
    "text": "tricks that you can use is you can keep your me uh your monitoring honest with the use of canaries right um You can",
    "start": "1750240",
    "end": "1756559"
  },
  {
    "text": "call them canaries you can call them customer experience L but essentially what something like this for Dynamo DB would look like is create a table every",
    "start": "1756559",
    "end": "1762519"
  },
  {
    "text": "minute drop it uh or create a table insert a bunch of data query it and then",
    "start": "1762519",
    "end": "1767880"
  },
  {
    "text": "drop it or have a particular table where you're just running data across you're just running known queries over and over",
    "start": "1767880",
    "end": "1774120"
  },
  {
    "text": "and over again this means that even if your monitoring system had an issue this third party canary will actually detect",
    "start": "1774120",
    "end": "1780080"
  },
  {
    "text": "if something might have gone wrong and it will enable your developers to pinpoint exactly what's happening and",
    "start": "1780080",
    "end": "1786159"
  },
  {
    "text": "then it'll allow you to react to any issues that might happen before your customers do right so it allows you to",
    "start": "1786159",
    "end": "1792799"
  },
  {
    "text": "be upfront and be able to uh address issues and before they actually become issues",
    "start": "1792799",
    "end": "1799320"
  },
  {
    "text": "so last but not least as you start thinking about availability the other key part of availability is the",
    "start": "1799640",
    "end": "1805440"
  },
  {
    "text": "durability aspect of your system you got to think very uh diligently about the durability of the system that you're",
    "start": "1805440",
    "end": "1810840"
  },
  {
    "text": "putting out there um and the key lesson here is you don't just want to think about physical durability you can be",
    "start": "1810840",
    "end": "1817159"
  },
  {
    "text": "setting all your data in the in the traditional Enterprise you can be sending all of your data back onto tape and you think you know everything is",
    "start": "1817159",
    "end": "1822880"
  },
  {
    "text": "good because I've got physical durability but the thing that you have to worry about is also logical",
    "start": "1822880",
    "end": "1828039"
  },
  {
    "text": "durability right even just because if you've built a large scale distributed system and you've got three party uh you",
    "start": "1828039",
    "end": "1833840"
  },
  {
    "text": "know three copy replicas um and everything is being replicated across 3 azs that's great but you also want to be",
    "start": "1833840",
    "end": "1840399"
  },
  {
    "text": "able to protect yourself against logical Corruptions what happens if somebody just comes in and drops your table what happens if you do a bad deployment uh",
    "start": "1840399",
    "end": "1847919"
  },
  {
    "text": "that uh that is basically writes faulty data into your database right um how do",
    "start": "1847919",
    "end": "1853799"
  },
  {
    "text": "you roll that back and that's the kind of logical uh corruption issues that that you want to be thinking about up front as you design your your",
    "start": "1853799",
    "end": "1859799"
  },
  {
    "text": "applications is well so I'm I've got uh dur uh physical durability but what",
    "start": "1859799",
    "end": "1865559"
  },
  {
    "text": "happens when I have a bad deployment and how do I actually roll that back now some of the things that help with that are snapshots so you can actually roll",
    "start": "1865559",
    "end": "1871799"
  },
  {
    "text": "back to a particular Point uh like a snapshot so if you're taking daily snapshots you can roll back to that",
    "start": "1871799",
    "end": "1876960"
  },
  {
    "text": "particular point in time uh but then you still have that granularity what are you going to do about what happens if the",
    "start": "1876960",
    "end": "1882559"
  },
  {
    "text": "outage or The Logical corruption occurs at hour number 23 how do you deal with that",
    "start": "1882559",
    "end": "1887679"
  },
  {
    "text": "uh so I'll get to that one in just one second but the other thing is your",
    "start": "1887679",
    "end": "1892720"
  },
  {
    "text": "backups are actually not very useful until you exercise them until you restore the backups right so you can",
    "start": "1892720",
    "end": "1899880"
  },
  {
    "text": "have a backup of all your data but until you uh restore the data you don't actually know if something is working and this doesn't just mean that okay I'm",
    "start": "1899880",
    "end": "1906240"
  },
  {
    "text": "going to take my tape back up and deploy it back into system okay the hard drive looks good it means actually running the entire application back uh from the",
    "start": "1906240",
    "end": "1913880"
  },
  {
    "text": "restored data it means analyzing what it takes to actually do a restore when there is a logical corruption or an",
    "start": "1913880",
    "end": "1919320"
  },
  {
    "text": "issue that happens in real time because you don't want to be learning these lessons while uh you know you're going",
    "start": "1919320",
    "end": "1924799"
  },
  {
    "text": "through an outage you want to be actually able to have exercise these Restorations and getting the application",
    "start": "1924799",
    "end": "1930960"
  },
  {
    "text": "back up and running with the restored data over and over again you want to do this routinely if the last time you did",
    "start": "1930960",
    "end": "1936200"
  },
  {
    "text": "the restore on your backup was over a year ago was over a month ago I would highly recommend reconsidering how",
    "start": "1936200",
    "end": "1942039"
  },
  {
    "text": "you're doing your backups and restores and just doing a drill and just seeing what the restoration strategy looks like",
    "start": "1942039",
    "end": "1948120"
  },
  {
    "text": "so as we start thinking about restoration you know one of the fundamental friends that we have in this business is logs logs are incredibly",
    "start": "1948120",
    "end": "1955399"
  },
  {
    "text": "powerful especially in the world of databases because if you can get a transactional log around your database",
    "start": "1955399",
    "end": "1960840"
  },
  {
    "text": "around your uh storage system you can reconstruct a lot of your data even in case of a major corruption and um you",
    "start": "1960840",
    "end": "1968760"
  },
  {
    "text": "know one of the things that we have built recently and we released it on Monday was Dynam DB streams right and Dynamo DB streams are essentially a uh",
    "start": "1968760",
    "end": "1976320"
  },
  {
    "text": "transactional log across your entire database right across your entire table and what it's giving you is item level",
    "start": "1976320",
    "end": "1982960"
  },
  {
    "text": "ordering across all of the changes that are that a particular item is undergoing in your table so with that couple with",
    "start": "1982960",
    "end": "1990360"
  },
  {
    "text": "snapshotting capabilities you can actually build continuous backup systems where you can actually start using uh",
    "start": "1990360",
    "end": "1996360"
  },
  {
    "text": "using a kinesia style API you can actually subscribe to this and start logging and storing your data into S3 so",
    "start": "1996360",
    "end": "2002399"
  },
  {
    "text": "that you can replay the log if let's say you're taking a snapshot every 24 hours and you want to restore back to hour",
    "start": "2002399",
    "end": "2008159"
  },
  {
    "text": "number 22 50 minutes and 3 seconds you can actually just continue to replay your logs until you hit the point where",
    "start": "2008159",
    "end": "2014159"
  },
  {
    "text": "the corruption was or you can actually roll back right so if you know that all of the corruption happened in the last",
    "start": "2014159",
    "end": "2019679"
  },
  {
    "text": "15 minutes you can just go look at the last 15 minutes find out which records were change and only roll those back so",
    "start": "2019679",
    "end": "2025880"
  },
  {
    "text": "transactional logs are actually very powerful and this is one of the main reasons why we started introducing access to these logs uh from Dynamo DB",
    "start": "2025880",
    "end": "2033080"
  },
  {
    "text": "directly to you so you can build applications of this nature um for your availability story now one of the other",
    "start": "2033080",
    "end": "2039960"
  },
  {
    "text": "things that we that we built as part of this was we noticed that a lot of customers wanted to do cross region",
    "start": "2039960",
    "end": "2045399"
  },
  {
    "text": "replication so as part of the Dynamo DB streams preview we were also launching uh cross region replication support for",
    "start": "2045399",
    "end": "2051679"
  },
  {
    "text": "Dynam DB in a in an open source library that you can download and run and all that Library does really is is a few",
    "start": "2051679",
    "end": "2058200"
  },
  {
    "text": "simple things one it's able to bootstrap so it can do parallel scans across your database and then uh get another table",
    "start": "2058200",
    "end": "2064720"
  },
  {
    "text": "basically to be a full copy of what you had originally and then it subscribes to the update uh to the Dynamo DB streams",
    "start": "2064720",
    "end": "2071440"
  },
  {
    "text": "and just copies all the changes that are occurring into the second table now this table could be within the same region so",
    "start": "2071440",
    "end": "2077760"
  },
  {
    "text": "you could have a continuous backup of your data in the same region or it could be in a different region so you can be",
    "start": "2077760",
    "end": "2083079"
  },
  {
    "text": "using it for performance enhancements and doing cross replication for latency uh purposes as well but more importantly",
    "start": "2083079",
    "end": "2089960"
  },
  {
    "text": "you can actually just use the same Library you can extend it to do things like the back the uh continuous backup",
    "start": "2089960",
    "end": "2095919"
  },
  {
    "text": "in your store that I talked about to be able to replay your logs completely with DB streams you're actually able to uh",
    "start": "2095919",
    "end": "2102359"
  },
  {
    "text": "get your logs up to 24 hours ago so like I said if you're you can basically be",
    "start": "2102359",
    "end": "2107720"
  },
  {
    "text": "archiving these logs so you can go back as much in time as you want or you can uh basically if you think you have an",
    "start": "2107720",
    "end": "2113560"
  },
  {
    "text": "outage in the last hour or so uh an issue you can actually just go back to just that particular",
    "start": "2113560",
    "end": "2119520"
  },
  {
    "text": "hour so uh thank you for coming and uh there's the links here here if you",
    "start": "2119520",
    "end": "2125560"
  },
  {
    "text": "wanted to sign up for these um I'll be available for questions um afterwards as well and I appreciate your time and",
    "start": "2125560",
    "end": "2131839"
  },
  {
    "text": "thank you Valentino for uh presenting with me",
    "start": "2131839",
    "end": "2139800"
  }
]