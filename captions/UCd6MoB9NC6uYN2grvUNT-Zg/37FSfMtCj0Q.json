[
  {
    "text": "[Music]",
    "start": "140",
    "end": "1160"
  },
  {
    "text": "[Applause]",
    "start": "1160",
    "end": "2910"
  },
  {
    "text": "[Music]",
    "start": "2910",
    "end": "6080"
  },
  {
    "text": "hi everyone I'm Rohit a cloud support",
    "start": "7759",
    "end": "10080"
  },
  {
    "text": "engineer here at the AWS office in",
    "start": "10080",
    "end": "12519"
  },
  {
    "text": "Sydney today I'll show you how to",
    "start": "12519",
    "end": "14639"
  },
  {
    "text": "publish Amazon simple notification",
    "start": "14639",
    "end": "16960"
  },
  {
    "text": "service SNS notifications to web hooks",
    "start": "16960",
    "end": "20359"
  },
  {
    "text": "with the help of AWS Lambda let's get",
    "start": "20359",
    "end": "23000"
  },
  {
    "text": "started we use Lambda because some",
    "start": "23000",
    "end": "26039"
  },
  {
    "text": "common web books expect Json key value",
    "start": "26039",
    "end": "28720"
  },
  {
    "text": "pairs that SNS doesn't support when",
    "start": "28720",
    "end": "30960"
  },
  {
    "text": "confirming the HTTP or https",
    "start": "30960",
    "end": "34239"
  },
  {
    "text": "subscription for example an Amazon chime",
    "start": "34239",
    "end": "37360"
  },
  {
    "text": "webbook expects ajacent request with",
    "start": "37360",
    "end": "40079"
  },
  {
    "text": "string corresponding to a Content key",
    "start": "40079",
    "end": "42920"
  },
  {
    "text": "similarly slack and Microsoft teams",
    "start": "42920",
    "end": "45680"
  },
  {
    "text": "expect a Jason request with a string",
    "start": "45680",
    "end": "48399"
  },
  {
    "text": "corresponding to a text key so if we",
    "start": "48399",
    "end": "51160"
  },
  {
    "text": "want to deliver a message to these",
    "start": "51160",
    "end": "52719"
  },
  {
    "text": "endpoints we must transform the Amazon",
    "start": "52719",
    "end": "55680"
  },
  {
    "text": "SNS message body Json request using an",
    "start": "55680",
    "end": "59079"
  },
  {
    "text": "AWS Lambda",
    "start": "59079",
    "end": "61920"
  },
  {
    "text": "function after logging into the AWS",
    "start": "61920",
    "end": "64640"
  },
  {
    "text": "Management console navigate to the SNS",
    "start": "64640",
    "end": "68400"
  },
  {
    "text": "console then select",
    "start": "68400",
    "end": "71119"
  },
  {
    "text": "topics and create topic select standard",
    "start": "71119",
    "end": "74920"
  },
  {
    "text": "type and enter a unique name for the",
    "start": "74920",
    "end": "78200"
  },
  {
    "text": "topic now scroll down and choose create",
    "start": "78200",
    "end": "82759"
  },
  {
    "text": "topic when the SNS topic is created open",
    "start": "82759",
    "end": "86040"
  },
  {
    "text": "the Lambda",
    "start": "86040",
    "end": "87159"
  },
  {
    "text": "console navigate to the functions tab",
    "start": "87159",
    "end": "90040"
  },
  {
    "text": "and then choose create function name the",
    "start": "90040",
    "end": "92960"
  },
  {
    "text": "function select the runtime that you",
    "start": "92960",
    "end": "95000"
  },
  {
    "text": "want to use and then choose create",
    "start": "95000",
    "end": "98560"
  },
  {
    "text": "function in my example I'm using python",
    "start": "98560",
    "end": "102079"
  },
  {
    "text": "3.12 the function creation might take",
    "start": "102079",
    "end": "104600"
  },
  {
    "text": "some time from here we must Implement",
    "start": "104600",
    "end": "108200"
  },
  {
    "text": "some custom code to transform the SNS",
    "start": "108200",
    "end": "110680"
  },
  {
    "text": "topics notification messages for the",
    "start": "110680",
    "end": "113200"
  },
  {
    "text": "type of webbook endpoint we using in",
    "start": "113200",
    "end": "115840"
  },
  {
    "text": "this example the code I'm copying here",
    "start": "115840",
    "end": "118240"
  },
  {
    "text": "will publish to a slack Channel see the",
    "start": "118240",
    "end": "120399"
  },
  {
    "text": "reference material to see the codee for",
    "start": "120399",
    "end": "122399"
  },
  {
    "text": "Microsoft teams and Amazon chime in",
    "start": "122399",
    "end": "125399"
  },
  {
    "text": "short the Lambda function is using the",
    "start": "125399",
    "end": "128119"
  },
  {
    "text": "HTTP post request to the hooks. slack",
    "start": "128119",
    "end": "131200"
  },
  {
    "text": "URL you can see that the post request",
    "start": "131200",
    "end": "133920"
  },
  {
    "text": "has a message body with the keys Channel",
    "start": "133920",
    "end": "137319"
  },
  {
    "text": "username text and icon Emoji the text",
    "start": "137319",
    "end": "140519"
  },
  {
    "text": "key here captures the value from the",
    "start": "140519",
    "end": "142720"
  },
  {
    "text": "Lambda event object event record zero",
    "start": "142720",
    "end": "147200"
  },
  {
    "text": "SNS message this is passed from from our",
    "start": "147200",
    "end": "150560"
  },
  {
    "text": "SNS topic take a moment and pause the",
    "start": "150560",
    "end": "153120"
  },
  {
    "text": "video here to further examine the Lambda",
    "start": "153120",
    "end": "155440"
  },
  {
    "text": "code note you can also find this code in",
    "start": "155440",
    "end": "158319"
  },
  {
    "text": "the reference",
    "start": "158319",
    "end": "159560"
  },
  {
    "text": "material next let's modify the webbook",
    "start": "159560",
    "end": "162480"
  },
  {
    "text": "URL and the channel values to direct the",
    "start": "162480",
    "end": "165280"
  },
  {
    "text": "messages to your slack account and",
    "start": "165280",
    "end": "167599"
  },
  {
    "text": "specific Channel if you haven't yet",
    "start": "167599",
    "end": "169840"
  },
  {
    "text": "activated web books in your slack app",
    "start": "169840",
    "end": "172400"
  },
  {
    "text": "then go to the slack tutorial sending",
    "start": "172400",
    "end": "175080"
  },
  {
    "text": "messages using incoming webbook follow",
    "start": "175080",
    "end": "177519"
  },
  {
    "text": "the steps to activate incoming web books",
    "start": "177519",
    "end": "180280"
  },
  {
    "text": "and then add a new web hook to your",
    "start": "180280",
    "end": "184319"
  },
  {
    "text": "workspace I'll copy my personal web hook",
    "start": "184400",
    "end": "187239"
  },
  {
    "text": "URL and slack channel name over",
    "start": "187239",
    "end": "191560"
  },
  {
    "text": "now save the function code by choosing",
    "start": "194159",
    "end": "197120"
  },
  {
    "text": "the save from the file menu and then",
    "start": "197120",
    "end": "200080"
  },
  {
    "text": "choose deploy to deploy the updated",
    "start": "200080",
    "end": "202640"
  },
  {
    "text": "Lambda function code Let's test the",
    "start": "202640",
    "end": "204519"
  },
  {
    "text": "function implementation using the Lambda",
    "start": "204519",
    "end": "206959"
  },
  {
    "text": "console select the test button to",
    "start": "206959",
    "end": "209120"
  },
  {
    "text": "configure the test test event in the",
    "start": "209120",
    "end": "211000"
  },
  {
    "text": "event name enter a unique name for the",
    "start": "211000",
    "end": "213319"
  },
  {
    "text": "test event in the template drop- down",
    "start": "213319",
    "end": "215720"
  },
  {
    "text": "list select the SNS topic",
    "start": "215720",
    "end": "218599"
  },
  {
    "text": "notification finally select the save",
    "start": "218599",
    "end": "223280"
  },
  {
    "text": "button when the test event is configured",
    "start": "223959",
    "end": "227400"
  },
  {
    "text": "choose the test button",
    "start": "227400",
    "end": "229280"
  },
  {
    "text": "again if the response is 200 the message",
    "start": "229280",
    "end": "232519"
  },
  {
    "text": "was accepted by the webook and delivered",
    "start": "232519",
    "end": "235040"
  },
  {
    "text": "to the corresponding Channel we now see",
    "start": "235040",
    "end": "238200"
  },
  {
    "text": "the example message posted to the slack",
    "start": "238200",
    "end": "241480"
  },
  {
    "text": "channnel however if the response was 400",
    "start": "241480",
    "end": "244720"
  },
  {
    "text": "then check the webook URL to confirm",
    "start": "244720",
    "end": "247400"
  },
  {
    "text": "that the key value pair is correct and",
    "start": "247400",
    "end": "249480"
  },
  {
    "text": "accepted by the destination web Hook",
    "start": "249480",
    "end": "251360"
  },
  {
    "text": "when you can successfully send the test",
    "start": "251360",
    "end": "253159"
  },
  {
    "text": "messages to the web hook you must then",
    "start": "253159",
    "end": "255040"
  },
  {
    "text": "subscribe the Lambda function to the SNS",
    "start": "255040",
    "end": "257600"
  },
  {
    "text": "topic to do this create a new trigger",
    "start": "257600",
    "end": "260280"
  },
  {
    "text": "from within the Lambda function",
    "start": "260280",
    "end": "261639"
  },
  {
    "text": "dashboard select the plus add trigger",
    "start": "261639",
    "end": "264280"
  },
  {
    "text": "button and enter SNS",
    "start": "264280",
    "end": "268600"
  },
  {
    "text": "trigger",
    "start": "268720",
    "end": "271039"
  },
  {
    "text": "in SNS topic section specify the Arn or",
    "start": "271039",
    "end": "275080"
  },
  {
    "text": "name of the SNS topic that we created",
    "start": "275080",
    "end": "277680"
  },
  {
    "text": "earlier and choose",
    "start": "277680",
    "end": "279680"
  },
  {
    "text": "add after we do this send a test",
    "start": "279680",
    "end": "282800"
  },
  {
    "text": "notification from the SNS topic to do",
    "start": "282800",
    "end": "286080"
  },
  {
    "text": "this navigate back to the newly created",
    "start": "286080",
    "end": "288600"
  },
  {
    "text": "SNS Topic in the SNS",
    "start": "288600",
    "end": "291560"
  },
  {
    "text": "console after we refresh the",
    "start": "291560",
    "end": "294880"
  },
  {
    "text": "page notice the new subscription which",
    "start": "294880",
    "end": "297800"
  },
  {
    "text": "is the Lambda trigger that we just",
    "start": "297800",
    "end": "299400"
  },
  {
    "text": "created created now choose the publish",
    "start": "299400",
    "end": "301960"
  },
  {
    "text": "message button at the top right and",
    "start": "301960",
    "end": "305000"
  },
  {
    "text": "enter a custom message under message",
    "start": "305000",
    "end": "307199"
  },
  {
    "text": "body to send to the",
    "start": "307199",
    "end": "309919"
  },
  {
    "text": "endpoint choose publish message then",
    "start": "309919",
    "end": "313320"
  },
  {
    "text": "check the message that was posted to",
    "start": "313320",
    "end": "315199"
  },
  {
    "text": "your slack",
    "start": "315199",
    "end": "316720"
  },
  {
    "text": "Channel if this test was successful then",
    "start": "316720",
    "end": "319680"
  },
  {
    "text": "we know that the messages that are",
    "start": "319680",
    "end": "322039"
  },
  {
    "text": "published to this SNS topic will be",
    "start": "322039",
    "end": "324720"
  },
  {
    "text": "forwarded to the Lambda function and",
    "start": "324720",
    "end": "326880"
  },
  {
    "text": "from there will be sent to our web hook",
    "start": "326880",
    "end": "329440"
  },
  {
    "text": "this allows us to publish many useful",
    "start": "329440",
    "end": "332039"
  },
  {
    "text": "notifications such as subscribe to",
    "start": "332039",
    "end": "334120"
  },
  {
    "text": "cloudwatch alarms and then be notified",
    "start": "334120",
    "end": "336680"
  },
  {
    "text": "in slack Microsoft teams or Amazon chime",
    "start": "336680",
    "end": "340199"
  },
  {
    "text": "whenever an alarm is",
    "start": "340199",
    "end": "342319"
  },
  {
    "text": "triggered and now you know how to",
    "start": "342319",
    "end": "344600"
  },
  {
    "text": "publish Amazon simple notification",
    "start": "344600",
    "end": "347039"
  },
  {
    "text": "service SNS notifications to webbook",
    "start": "347039",
    "end": "350039"
  },
  {
    "text": "with the help of AWS Lambda thanks for",
    "start": "350039",
    "end": "352280"
  },
  {
    "text": "watching and happy cloud computing from",
    "start": "352280",
    "end": "354360"
  },
  {
    "text": "all of us here at",
    "start": "354360",
    "end": "356300"
  },
  {
    "text": "[Music]",
    "start": "356300",
    "end": "357320"
  },
  {
    "text": "[Applause]",
    "start": "357320",
    "end": "358639"
  },
  {
    "text": "AWS",
    "start": "358639",
    "end": "361639"
  },
  {
    "text": "[Music]",
    "start": "364290",
    "end": "367489"
  }
]