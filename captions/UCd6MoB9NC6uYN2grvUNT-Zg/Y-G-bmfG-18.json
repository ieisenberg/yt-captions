[
  {
    "start": "0",
    "end": "15000"
  },
  {
    "text": "hey guys hi hi everybody all right I've",
    "start": "890",
    "end": "5339"
  },
  {
    "text": "got 15 minutes with you so I'm going to",
    "start": "5339",
    "end": "8429"
  },
  {
    "text": "walk you through real-time analytics and",
    "start": "8429",
    "end": "10920"
  },
  {
    "text": "how we do that Redis labs with Redis I'm",
    "start": "10920",
    "end": "16080"
  },
  {
    "start": "15000",
    "end": "84000"
  },
  {
    "text": "weepy a product I'm a database geek I've",
    "start": "16080",
    "end": "18150"
  },
  {
    "text": "worked on quite a few of these databases",
    "start": "18150",
    "end": "21020"
  },
  {
    "text": "a lot of them",
    "start": "21020",
    "end": "23730"
  },
  {
    "text": "relational some no sequel but Redis",
    "start": "23730",
    "end": "28080"
  },
  {
    "text": "obviously is my favorite one so let me",
    "start": "28080",
    "end": "29880"
  },
  {
    "text": "let me introduce the product okay by the",
    "start": "29880",
    "end": "32040"
  },
  {
    "text": "way how many people use Redis Oh perfect",
    "start": "32040",
    "end": "34710"
  },
  {
    "text": "okay so Redis is an in-memory",
    "start": "34710",
    "end": "36000"
  },
  {
    "text": "open-source database it's great for",
    "start": "36000",
    "end": "40100"
  },
  {
    "text": "transactional processing as well as",
    "start": "40100",
    "end": "42149"
  },
  {
    "text": "analytics we are the home of Redis at",
    "start": "42149",
    "end": "45750"
  },
  {
    "text": "Redis labs we provide the commercial",
    "start": "45750",
    "end": "47879"
  },
  {
    "text": "Edition as well as the open source",
    "start": "47879",
    "end": "49320"
  },
  {
    "text": "edition we provide the majority of the",
    "start": "49320",
    "end": "52280"
  },
  {
    "text": "contributions into the Redis product we",
    "start": "52280",
    "end": "55800"
  },
  {
    "text": "ship in Enterprise Edition of this",
    "start": "55800",
    "end": "58440"
  },
  {
    "text": "product called Redis Enterprise and I'll",
    "start": "58440",
    "end": "59879"
  },
  {
    "text": "talk about how it's different it's 100%",
    "start": "59879",
    "end": "62789"
  },
  {
    "text": "compatible with the Redis if you've got",
    "start": "62789",
    "end": "64588"
  },
  {
    "text": "a Redis application all you need to do",
    "start": "64589",
    "end": "66030"
  },
  {
    "text": "is change your connection string and it",
    "start": "66030",
    "end": "67530"
  },
  {
    "text": "will just continue to operate but Redis",
    "start": "67530",
    "end": "70830"
  },
  {
    "text": "Enterprise provides added availability",
    "start": "70830",
    "end": "73549"
  },
  {
    "text": "simplified management high performance",
    "start": "73549",
    "end": "76439"
  },
  {
    "text": "better scale and improved security on",
    "start": "76439",
    "end": "79920"
  },
  {
    "text": "top of what Rattus Rattus provides and a",
    "start": "79920",
    "end": "81810"
  },
  {
    "text": "lot of advanced deployment models so",
    "start": "81810",
    "end": "84750"
  },
  {
    "start": "84000",
    "end": "120000"
  },
  {
    "text": "Redis enterprises the core technology",
    "start": "84750",
    "end": "87060"
  },
  {
    "text": "that we developed by you can actually",
    "start": "87060",
    "end": "88350"
  },
  {
    "text": "get this as a database service and the",
    "start": "88350",
    "end": "90810"
  },
  {
    "text": "majority of the public clouds out there",
    "start": "90810",
    "end": "92850"
  },
  {
    "text": "so if you just want to create a database",
    "start": "92850",
    "end": "95820"
  },
  {
    "text": "and one of the public clouds just tell",
    "start": "95820",
    "end": "99780"
  },
  {
    "text": "us with geography in which data center",
    "start": "99780",
    "end": "101340"
  },
  {
    "text": "and we'll create it for you and we'll",
    "start": "101340",
    "end": "102780"
  },
  {
    "text": "manage it for you these are data bases",
    "start": "102780",
    "end": "104520"
  },
  {
    "text": "or service products you can also get the",
    "start": "104520",
    "end": "107220"
  },
  {
    "text": "same software that we use to host tens",
    "start": "107220",
    "end": "110250"
  },
  {
    "text": "of thousands of customers as software",
    "start": "110250",
    "end": "112770"
  },
  {
    "text": "and you can run it under complete",
    "start": "112770",
    "end": "114990"
  },
  {
    "text": "control of your own and deploy it on",
    "start": "114990",
    "end": "117719"
  },
  {
    "text": "premise and that's called Redis pack so",
    "start": "117719",
    "end": "120930"
  },
  {
    "start": "120000",
    "end": "190000"
  },
  {
    "text": "why is read is so popular I just want to",
    "start": "120930",
    "end": "123030"
  },
  {
    "text": "kind of touch on a few things that will",
    "start": "123030",
    "end": "124799"
  },
  {
    "text": "set the stage for why we are we are such",
    "start": "124799",
    "end": "128399"
  },
  {
    "text": "a popular database so number one people",
    "start": "128399",
    "end": "130739"
  },
  {
    "text": "love us for performance we have",
    "start": "130739",
    "end": "133360"
  },
  {
    "text": "over 400 million downloads on docker",
    "start": "133360",
    "end": "136510"
  },
  {
    "text": "it's crazy insane we get hundreds of",
    "start": "136510",
    "end": "139870"
  },
  {
    "text": "thousands of additional downloads every",
    "start": "139870",
    "end": "141370"
  },
  {
    "text": "day and the performance of this",
    "start": "141370",
    "end": "144040"
  },
  {
    "text": "environment is just what attracts",
    "start": "144040",
    "end": "145900"
  },
  {
    "text": "developers to it",
    "start": "145900",
    "end": "147460"
  },
  {
    "text": "the second one is simplicity instead of",
    "start": "147460",
    "end": "150280"
  },
  {
    "text": "tables or documents as kind of the core",
    "start": "150280",
    "end": "152790"
  },
  {
    "text": "anchoring data model type within the",
    "start": "152790",
    "end": "156100"
  },
  {
    "text": "environment",
    "start": "156100",
    "end": "156940"
  },
  {
    "text": "what Redis provides is data structures",
    "start": "156940",
    "end": "158650"
  },
  {
    "text": "and we'll talk a lot about what this",
    "start": "158650",
    "end": "161230"
  },
  {
    "text": "brings but the data structures really",
    "start": "161230",
    "end": "163270"
  },
  {
    "text": "make developments simplified you don't",
    "start": "163270",
    "end": "165700"
  },
  {
    "text": "have to convert back and forth there's",
    "start": "165700",
    "end": "167080"
  },
  {
    "text": "no over am working Redis is just like",
    "start": "167080",
    "end": "170620"
  },
  {
    "text": "working with frameworks and versatility",
    "start": "170620",
    "end": "173110"
  },
  {
    "text": "so with Redis 4.0 we added this",
    "start": "173110",
    "end": "175420"
  },
  {
    "text": "capability to add your own modules into",
    "start": "175420",
    "end": "177820"
  },
  {
    "text": "the end into the mix you can extend the",
    "start": "177820",
    "end": "180640"
  },
  {
    "text": "data types you can add new commands we",
    "start": "180640",
    "end": "183459"
  },
  {
    "text": "use it to do a lot of the extensions to",
    "start": "183459",
    "end": "185620"
  },
  {
    "text": "the environment that we run on the Redis",
    "start": "185620",
    "end": "187840"
  },
  {
    "text": "enterprise as well but it brings a lot",
    "start": "187840",
    "end": "190959"
  },
  {
    "text": "of new capabilities right it is",
    "start": "190959",
    "end": "193090"
  },
  {
    "text": "versatile I'm going to focus in on the",
    "start": "193090",
    "end": "195580"
  },
  {
    "text": "middle section here on analytics and",
    "start": "195580",
    "end": "198519"
  },
  {
    "text": "tell you a few of the types of",
    "start": "198519",
    "end": "200680"
  },
  {
    "text": "applications that you can build and give",
    "start": "200680",
    "end": "203019"
  },
  {
    "text": "you a few examples of the customers that",
    "start": "203019",
    "end": "204580"
  },
  {
    "text": "are using them today so let me drill in",
    "start": "204580",
    "end": "207959"
  },
  {
    "start": "207000",
    "end": "265000"
  },
  {
    "text": "since we have limited time I'm going to",
    "start": "207959",
    "end": "210940"
  },
  {
    "text": "focus on three different unique cases",
    "start": "210940",
    "end": "212830"
  },
  {
    "text": "where Redis with real-time analytics",
    "start": "212830",
    "end": "214840"
  },
  {
    "text": "really shines",
    "start": "214840",
    "end": "216010"
  },
  {
    "text": "the first one is I'll talk about some",
    "start": "216010",
    "end": "218320"
  },
  {
    "text": "data structures that really are unique",
    "start": "218320",
    "end": "219910"
  },
  {
    "text": "you can't find these in other databases",
    "start": "219910",
    "end": "222760"
  },
  {
    "text": "they really simplify certain types of",
    "start": "222760",
    "end": "225850"
  },
  {
    "text": "operations in analytics that are that",
    "start": "225850",
    "end": "228760"
  },
  {
    "text": "need to be real-time and very hard to",
    "start": "228760",
    "end": "230709"
  },
  {
    "text": "build with others I'll talk about",
    "start": "230709",
    "end": "232420"
  },
  {
    "text": "machine learning this is a new important",
    "start": "232420",
    "end": "235239"
  },
  {
    "text": "way in which we see new applications",
    "start": "235239",
    "end": "238030"
  },
  {
    "text": "come up machine learning especially",
    "start": "238030",
    "end": "240610"
  },
  {
    "text": "serving recommendations in real time",
    "start": "240610",
    "end": "242530"
  },
  {
    "text": "that's one of the cases that Redis is",
    "start": "242530",
    "end": "244390"
  },
  {
    "text": "great at and finally I just want to talk",
    "start": "244390",
    "end": "246610"
  },
  {
    "text": "about how to bring in a lot more data",
    "start": "246610",
    "end": "248320"
  },
  {
    "text": "into Redis even RAM is expensive",
    "start": "248320",
    "end": "250630"
  },
  {
    "text": "I'll talk about how we can actually",
    "start": "250630",
    "end": "252760"
  },
  {
    "text": "extend your RAM on to flash and have",
    "start": "252760",
    "end": "255070"
  },
  {
    "text": "Redis operate and data process not just",
    "start": "255070",
    "end": "257440"
  },
  {
    "text": "in memory but across RAM and flash so",
    "start": "257440",
    "end": "260290"
  },
  {
    "text": "you can you can actually have terabytes",
    "start": "260290",
    "end": "261940"
  },
  {
    "text": "of data easily without having to pay for",
    "start": "261940",
    "end": "263890"
  },
  {
    "text": "the cost of RAM for all of that all",
    "start": "263890",
    "end": "266500"
  },
  {
    "start": "265000",
    "end": "362000"
  },
  {
    "text": "right so let's get started",
    "start": "266500",
    "end": "267370"
  },
  {
    "text": "data-type so there's a couple of data",
    "start": "267370",
    "end": "269320"
  },
  {
    "text": "types in Redis that really are basic you",
    "start": "269320",
    "end": "271960"
  },
  {
    "text": "know if you want something like tables",
    "start": "271960",
    "end": "273220"
  },
  {
    "text": "there's hash tables if you want",
    "start": "273220",
    "end": "274810"
  },
  {
    "text": "something like documents there's JSON",
    "start": "274810",
    "end": "276610"
  },
  {
    "text": "types but there's a couple of unique",
    "start": "276610",
    "end": "278530"
  },
  {
    "text": "types that really make it interesting to",
    "start": "278530",
    "end": "280270"
  },
  {
    "text": "build analytics applications on top",
    "start": "280270",
    "end": "282160"
  },
  {
    "text": "aratus hyper log log is one of them how",
    "start": "282160",
    "end": "285790"
  },
  {
    "text": "many people have had to do a unique",
    "start": "285790",
    "end": "288940"
  },
  {
    "text": "count on a an entity unique count",
    "start": "288940",
    "end": "293250"
  },
  {
    "text": "alright and said so hyper log log is a",
    "start": "293250",
    "end": "296080"
  },
  {
    "text": "data type that takes fraction of the",
    "start": "296080",
    "end": "299560"
  },
  {
    "text": "cost of storage of storing all of the",
    "start": "299560",
    "end": "302770"
  },
  {
    "text": "unique visitors let's say to a specific",
    "start": "302770",
    "end": "305020"
  },
  {
    "text": "product but can actually do a unique",
    "start": "305020",
    "end": "307510"
  },
  {
    "text": "count for you and it's an approximation",
    "start": "307510",
    "end": "309639"
  },
  {
    "text": "it's not an exact count but given the",
    "start": "309639",
    "end": "313570"
  },
  {
    "text": "space that it actually consumes you can",
    "start": "313570",
    "end": "315310"
  },
  {
    "text": "do unique counts for almost anything in",
    "start": "315310",
    "end": "317350"
  },
  {
    "text": "fact one of our customers Home Depot",
    "start": "317350",
    "end": "319500"
  },
  {
    "text": "does a unique count for every one of",
    "start": "319500",
    "end": "322060"
  },
  {
    "text": "their products in every state both in in",
    "start": "322060",
    "end": "327160"
  },
  {
    "text": "in brick-and-mortar stores as well as",
    "start": "327160",
    "end": "328990"
  },
  {
    "text": "their online stores but you can find out",
    "start": "328990",
    "end": "330820"
  },
  {
    "text": "how many people uniquely visit it each",
    "start": "330820",
    "end": "333010"
  },
  {
    "text": "one of these products etc and it it",
    "start": "333010",
    "end": "335650"
  },
  {
    "text": "actually takes quite a lot of space to",
    "start": "335650",
    "end": "338289"
  },
  {
    "text": "be able to store every visitor to every",
    "start": "338289",
    "end": "340150"
  },
  {
    "text": "product and be able to count that and",
    "start": "340150",
    "end": "342099"
  },
  {
    "text": "constantly report on that for the week",
    "start": "342099",
    "end": "344289"
  },
  {
    "text": "month day hour etc for them hyper log",
    "start": "344289",
    "end": "347770"
  },
  {
    "text": "log is the saver right",
    "start": "347770",
    "end": "349300"
  },
  {
    "text": "it just takes fraction of the amount of",
    "start": "349300",
    "end": "351190"
  },
  {
    "text": "space and you can use hyper log log just",
    "start": "351190",
    "end": "353500"
  },
  {
    "text": "to add the visitors that are coming in",
    "start": "353500",
    "end": "355690"
  },
  {
    "text": "that unique user IDs and hyper log log",
    "start": "355690",
    "end": "358180"
  },
  {
    "text": "will take care of just giving you a",
    "start": "358180",
    "end": "359650"
  },
  {
    "text": "count back on the fraction of the space",
    "start": "359650",
    "end": "362010"
  },
  {
    "start": "362000",
    "end": "440000"
  },
  {
    "text": "we also have a lot of modules that allow",
    "start": "362010",
    "end": "365110"
  },
  {
    "text": "us to extend the data types that exist",
    "start": "365110",
    "end": "366880"
  },
  {
    "text": "in Reddit so things like bloom filters",
    "start": "366880",
    "end": "369880"
  },
  {
    "text": "how many people know what bloom filters",
    "start": "369880",
    "end": "371740"
  },
  {
    "text": "are no okay let me talk about bloom",
    "start": "371740",
    "end": "375520"
  },
  {
    "text": "filters a little bit bloom filter is",
    "start": "375520",
    "end": "377250"
  },
  {
    "text": "used for existence searches so if you're",
    "start": "377250",
    "end": "381310"
  },
  {
    "text": "doing fraud detection and you're trying",
    "start": "381310",
    "end": "383919"
  },
  {
    "text": "to understand whether a transaction has",
    "start": "383919",
    "end": "385990"
  },
  {
    "text": "happened before the identical",
    "start": "385990",
    "end": "387880"
  },
  {
    "text": "transaction has happened before it's a",
    "start": "387880",
    "end": "389470"
  },
  {
    "text": "very common kind of fraud where credit",
    "start": "389470",
    "end": "392770"
  },
  {
    "text": "cards will actually be charged by a",
    "start": "392770",
    "end": "394930"
  },
  {
    "text": "legitimate transaction but then there",
    "start": "394930",
    "end": "396460"
  },
  {
    "text": "will be a second charge identical to it",
    "start": "396460",
    "end": "398349"
  },
  {
    "text": "and this is one way in which",
    "start": "398349",
    "end": "400840"
  },
  {
    "text": "credit card kind of statements you can",
    "start": "400840",
    "end": "404020"
  },
  {
    "text": "you can easily miss this because you",
    "start": "404020",
    "end": "405790"
  },
  {
    "text": "expect this kind of stuff so bloom",
    "start": "405790",
    "end": "408310"
  },
  {
    "text": "filters provide an existence search for",
    "start": "408310",
    "end": "411490"
  },
  {
    "text": "a unique transaction what you can do is",
    "start": "411490",
    "end": "415060"
  },
  {
    "text": "you can add it to the bloom filter and",
    "start": "415060",
    "end": "416560"
  },
  {
    "text": "once you add that again it will tell you",
    "start": "416560",
    "end": "418720"
  },
  {
    "text": "whether that transaction had happened or",
    "start": "418720",
    "end": "421090"
  },
  {
    "text": "not and it takes a fraction of the cost",
    "start": "421090",
    "end": "423580"
  },
  {
    "text": "of storing every transaction for a",
    "start": "423580",
    "end": "425350"
  },
  {
    "text": "credit card so at a very small space",
    "start": "425350",
    "end": "428680"
  },
  {
    "text": "with a amazing update speed you can have",
    "start": "428680",
    "end": "432880"
  },
  {
    "text": "an index called bloom filters that will",
    "start": "432880",
    "end": "434650"
  },
  {
    "text": "tell you whether that transaction",
    "start": "434650",
    "end": "436000"
  },
  {
    "text": "existed before or not whether it's the",
    "start": "436000",
    "end": "438250"
  },
  {
    "text": "first time it's happening or not so",
    "start": "438250",
    "end": "440320"
  },
  {
    "start": "440000",
    "end": "472000"
  },
  {
    "text": "these are some of the cases where the",
    "start": "440320",
    "end": "442210"
  },
  {
    "text": "datatypes themselves are built to be",
    "start": "442210",
    "end": "444250"
  },
  {
    "text": "able to provide and uniquely solve",
    "start": "444250",
    "end": "446440"
  },
  {
    "text": "specific analytic cases that are real",
    "start": "446440",
    "end": "449260"
  },
  {
    "text": "time near you the real time analytics",
    "start": "449260",
    "end": "451300"
  },
  {
    "text": "cases are tough because for a lot of",
    "start": "451300",
    "end": "453639"
  },
  {
    "text": "people if you swipe your credit card and",
    "start": "453639",
    "end": "455229"
  },
  {
    "text": "you have to wait five minutes before it",
    "start": "455229",
    "end": "457330"
  },
  {
    "text": "actually tells you whether it's a good",
    "start": "457330",
    "end": "459160"
  },
  {
    "text": "legitimate transaction or not that's too",
    "start": "459160",
    "end": "461620"
  },
  {
    "text": "long nobody would use that credit card",
    "start": "461620",
    "end": "463150"
  },
  {
    "text": "anymore so for a lot of these cases",
    "start": "463150",
    "end": "465640"
  },
  {
    "text": "where real time is the key Redis is the",
    "start": "465640",
    "end": "469090"
  },
  {
    "text": "answer for a lot of people let me talk",
    "start": "469090",
    "end": "473110"
  },
  {
    "start": "472000",
    "end": "510000"
  },
  {
    "text": "about machine learning we have a couple",
    "start": "473110",
    "end": "475030"
  },
  {
    "text": "of ways in which machine learning can be",
    "start": "475030",
    "end": "476650"
  },
  {
    "text": "embedded into Redis as well given the",
    "start": "476650",
    "end": "478419"
  },
  {
    "text": "data structures that we hosts we",
    "start": "478419",
    "end": "480610"
  },
  {
    "text": "actually have a module that allow us to",
    "start": "480610",
    "end": "482800"
  },
  {
    "text": "do neural networks inside Redis this is",
    "start": "482800",
    "end": "485860"
  },
  {
    "text": "a module that can train on the data",
    "start": "485860",
    "end": "488050"
  },
  {
    "text": "that's in Redis that's coming in in real",
    "start": "488050",
    "end": "490090"
  },
  {
    "text": "time we take for tens of thousands of",
    "start": "490090",
    "end": "493570"
  },
  {
    "text": "items and keys we take about 100",
    "start": "493570",
    "end": "495910"
  },
  {
    "text": "milliseconds to train so this kind of",
    "start": "495910",
    "end": "498220"
  },
  {
    "text": "training is for the last minute data",
    "start": "498220",
    "end": "500530"
  },
  {
    "text": "that actually happens but it provides",
    "start": "500530",
    "end": "503639"
  },
  {
    "text": "recommendations and classifications for",
    "start": "503639",
    "end": "506370"
  },
  {
    "text": "things that you can actually throw at it",
    "start": "506370",
    "end": "509340"
  },
  {
    "text": "we have another module called Redis",
    "start": "509340",
    "end": "511780"
  },
  {
    "start": "510000",
    "end": "555000"
  },
  {
    "text": "Amell which is used in combination with",
    "start": "511780",
    "end": "514659"
  },
  {
    "text": "tensorflow",
    "start": "514659",
    "end": "515380"
  },
  {
    "text": "or with SPARC machine learning libraries",
    "start": "515380",
    "end": "517870"
  },
  {
    "text": "where you can actually take the models",
    "start": "517870",
    "end": "519729"
  },
  {
    "text": "you generate embedded inside Redis and",
    "start": "519729",
    "end": "522219"
  },
  {
    "text": "centrally serve those recommendations",
    "start": "522219",
    "end": "524229"
  },
  {
    "text": "directly out of Redis so we provide",
    "start": "524229",
    "end": "526600"
  },
  {
    "text": "commands like forest run to get you a",
    "start": "526600",
    "end": "529660"
  },
  {
    "text": "random forest recommendation based on",
    "start": "529660",
    "end": "532630"
  },
  {
    "text": "the attributes you submit",
    "start": "532630",
    "end": "534790"
  },
  {
    "text": "into a model you can what we find is a",
    "start": "534790",
    "end": "538030"
  },
  {
    "text": "lot of our customers store many",
    "start": "538030",
    "end": "539560"
  },
  {
    "text": "different models and they use them",
    "start": "539560",
    "end": "541930"
  },
  {
    "text": "weighted across all of them to create",
    "start": "541930",
    "end": "544300"
  },
  {
    "text": "user engagements or recommendations and",
    "start": "544300",
    "end": "547620"
  },
  {
    "text": "Redis becomes that central point where",
    "start": "547620",
    "end": "550420"
  },
  {
    "text": "they can actually store an update and",
    "start": "550420",
    "end": "552760"
  },
  {
    "text": "serve recommendations directly out of so",
    "start": "552760",
    "end": "554920"
  },
  {
    "text": "this is what it looks like you typically",
    "start": "554920",
    "end": "556690"
  },
  {
    "start": "555000",
    "end": "590000"
  },
  {
    "text": "have a training phase I face where you",
    "start": "556690",
    "end": "559510"
  },
  {
    "text": "create the model and then you serve it",
    "start": "559510",
    "end": "561810"
  },
  {
    "text": "the first two is done best with things",
    "start": "561810",
    "end": "565210"
  },
  {
    "text": "like spark or tension flow or cafe etc",
    "start": "565210",
    "end": "568980"
  },
  {
    "text": "but the last phase typically is some",
    "start": "568980",
    "end": "571540"
  },
  {
    "text": "homegrown application that's fairly",
    "start": "571540",
    "end": "573010"
  },
  {
    "text": "difficult to develop or you use spark",
    "start": "573010",
    "end": "576070"
  },
  {
    "text": "for a lot of people replacing that with",
    "start": "576070",
    "end": "578430"
  },
  {
    "text": "Redis Enterprise just makes that serving",
    "start": "578430",
    "end": "582250"
  },
  {
    "text": "capability much simpler as I said we",
    "start": "582250",
    "end": "584740"
  },
  {
    "text": "provides direct commands out of Redis",
    "start": "584740",
    "end": "587350"
  },
  {
    "text": "that can serve the general",
    "start": "587350",
    "end": "588870"
  },
  {
    "text": "recommendation to you directly I won't",
    "start": "588870",
    "end": "591940"
  },
  {
    "start": "590000",
    "end": "610000"
  },
  {
    "text": "go through this calculation but we find",
    "start": "591940",
    "end": "593740"
  },
  {
    "text": "that centralizing the serving of",
    "start": "593740",
    "end": "596590"
  },
  {
    "text": "recommendations can actually save you up",
    "start": "596590",
    "end": "598480"
  },
  {
    "text": "to 90% on infrastructure costs and",
    "start": "598480",
    "end": "602730"
  },
  {
    "text": "compared to spark which is not built for",
    "start": "602730",
    "end": "605440"
  },
  {
    "text": "interactive applications we can actually",
    "start": "605440",
    "end": "607360"
  },
  {
    "text": "do it's much much faster with much lower",
    "start": "607360",
    "end": "609190"
  },
  {
    "text": "latencies alright finally I want to talk",
    "start": "609190",
    "end": "611980"
  },
  {
    "text": "about how you can store a lot of data",
    "start": "611980",
    "end": "613950"
  },
  {
    "text": "when Ram is so expensive and still get",
    "start": "613950",
    "end": "617170"
  },
  {
    "text": "the games and and the speed of Redis",
    "start": "617170",
    "end": "619480"
  },
  {
    "text": "with analytics applications so the point",
    "start": "619480",
    "end": "623770"
  },
  {
    "start": "622000",
    "end": "646000"
  },
  {
    "text": "of this is Ram is about 20x more",
    "start": "623770",
    "end": "627460"
  },
  {
    "text": "expensive 10 to 20 X more expensive than",
    "start": "627460",
    "end": "629500"
  },
  {
    "text": "flash so if you could actually extend",
    "start": "629500",
    "end": "632940"
  },
  {
    "text": "Ram on to flash and let you store a lot",
    "start": "632940",
    "end": "635830"
  },
  {
    "text": "more data and do the processing in Redis",
    "start": "635830",
    "end": "638110"
  },
  {
    "text": "we could actually gain provide a cheaper",
    "start": "638110",
    "end": "641920"
  },
  {
    "text": "way to store much larger data sets in",
    "start": "641920",
    "end": "644200"
  },
  {
    "text": "Redis and the technology that we provide",
    "start": "644200",
    "end": "646690"
  },
  {
    "text": "does exactly that you get to govern for",
    "start": "646690",
    "end": "649870"
  },
  {
    "text": "each database how much flash memory",
    "start": "649870",
    "end": "652180"
  },
  {
    "text": "versus RAM you want to use we have Rux",
    "start": "652180",
    "end": "655870"
  },
  {
    "text": "DB that actually govern the movement of",
    "start": "655870",
    "end": "659590"
  },
  {
    "text": "data back and forth in a smart way",
    "start": "659590",
    "end": "661000"
  },
  {
    "text": "between Flash and RAM and all of this",
    "start": "661000",
    "end": "664540"
  },
  {
    "text": "technology allows you to change that",
    "start": "664540",
    "end": "666760"
  },
  {
    "text": "ratio at any time so the hot",
    "start": "666760",
    "end": "668470"
  },
  {
    "text": "working said stays in RAM but you can",
    "start": "668470",
    "end": "671350"
  },
  {
    "text": "host much much larger sets of data for",
    "start": "671350",
    "end": "673690"
  },
  {
    "text": "cheaper storage on on Redis using this",
    "start": "673690",
    "end": "677590"
  },
  {
    "text": "Flash technology then we extend Redis in",
    "start": "677590",
    "end": "680410"
  },
  {
    "text": "Redis enterprise to provide these",
    "start": "680410",
    "end": "682360"
  },
  {
    "text": "capabilities both in the cloud and",
    "start": "682360",
    "end": "684310"
  },
  {
    "text": "on-premise as a quick calculation here",
    "start": "684310",
    "end": "689440"
  },
  {
    "start": "687000",
    "end": "704000"
  },
  {
    "text": "if you guys are interested we're going",
    "start": "689440",
    "end": "691300"
  },
  {
    "text": "to be at the booth right after the talk",
    "start": "691300",
    "end": "693070"
  },
  {
    "text": "I can walk you through this but compared",
    "start": "693070",
    "end": "695800"
  },
  {
    "text": "to storing everything in RAM if you're",
    "start": "695800",
    "end": "697450"
  },
  {
    "text": "looking at 10 terabyte of storage we can",
    "start": "697450",
    "end": "699580"
  },
  {
    "text": "get you over 80% savings just by using",
    "start": "699580",
    "end": "702610"
  },
  {
    "text": "flash alright so let me just mention to",
    "start": "702610",
    "end": "707140"
  },
  {
    "start": "704000",
    "end": "780000"
  },
  {
    "text": "customers that are using Redis for",
    "start": "707140",
    "end": "709840"
  },
  {
    "text": "real-time analytics and mobile just",
    "start": "709840",
    "end": "711970"
  },
  {
    "text": "concluded with that one of them that I",
    "start": "711970",
    "end": "714040"
  },
  {
    "text": "wanted to pull up is Redmond so Redfin",
    "start": "714040",
    "end": "716350"
  },
  {
    "text": "has a very similar case of trying to",
    "start": "716350",
    "end": "719590"
  },
  {
    "text": "count interest in each property and each",
    "start": "719590",
    "end": "722740"
  },
  {
    "text": "agent that is on their website but",
    "start": "722740",
    "end": "725260"
  },
  {
    "text": "they'd like to do that for every hour",
    "start": "725260",
    "end": "727210"
  },
  {
    "text": "every day every week every month and",
    "start": "727210",
    "end": "730090"
  },
  {
    "text": "they'd like to do that for every state",
    "start": "730090",
    "end": "731980"
  },
  {
    "text": "every city every zip code and that adds",
    "start": "731980",
    "end": "735670"
  },
  {
    "text": "up to be a lot of counting they want to",
    "start": "735670",
    "end": "738220"
  },
  {
    "text": "know the unique visitors as well as the",
    "start": "738220",
    "end": "739690"
  },
  {
    "text": "total visitors to all of these things",
    "start": "739690",
    "end": "741190"
  },
  {
    "text": "and Redis is perfect for this as the",
    "start": "741190",
    "end": "743730"
  },
  {
    "text": "data inflows into Redis what they can do",
    "start": "743730",
    "end": "747850"
  },
  {
    "text": "is use the data greatest data types that",
    "start": "747850",
    "end": "750340"
  },
  {
    "text": "are purpose-built for these like hyper",
    "start": "750340",
    "end": "752140"
  },
  {
    "text": "log log to count each one of these",
    "start": "752140",
    "end": "754900"
  },
  {
    "text": "unique cases so you end up taking this",
    "start": "754900",
    "end": "758110"
  },
  {
    "text": "visitor and depending on their zip code",
    "start": "758110",
    "end": "761200"
  },
  {
    "text": "you you end up inserting them into the",
    "start": "761200",
    "end": "762880"
  },
  {
    "text": "state into the city and the specific",
    "start": "762880",
    "end": "767710"
  },
  {
    "text": "property that they viewed and you can",
    "start": "767710",
    "end": "769270"
  },
  {
    "text": "constantly get a good sense of who is",
    "start": "769270",
    "end": "771520"
  },
  {
    "text": "visiting what kind of property and what",
    "start": "771520",
    "end": "773310"
  },
  {
    "text": "accounts you have which which properties",
    "start": "773310",
    "end": "775690"
  },
  {
    "text": "are popular and more engaging for the",
    "start": "775690",
    "end": "778660"
  },
  {
    "text": "customers that are on their site home",
    "start": "778660",
    "end": "780550"
  },
  {
    "start": "780000",
    "end": "807000"
  },
  {
    "text": "depot does something very similar they",
    "start": "780550",
    "end": "783580"
  },
  {
    "text": "actually use Redis to be able to count",
    "start": "783580",
    "end": "787830"
  },
  {
    "text": "the visitors to the products that they",
    "start": "787830",
    "end": "790540"
  },
  {
    "text": "actually host for them you know this is",
    "start": "790540",
    "end": "793840"
  },
  {
    "text": "20,000 transactions per second it's a",
    "start": "793840",
    "end": "795820"
  },
  {
    "text": "lot of counting to do and hyper log log",
    "start": "795820",
    "end": "799510"
  },
  {
    "text": "provides that perfect balance",
    "start": "799510",
    "end": "802060"
  },
  {
    "text": "as well as some of the m/l capabilities",
    "start": "802060",
    "end": "803620"
  },
  {
    "text": "that we have to be able to engage their",
    "start": "803620",
    "end": "805420"
  },
  {
    "text": "customers on their website this",
    "start": "805420",
    "end": "808990"
  },
  {
    "start": "807000",
    "end": "832000"
  },
  {
    "text": "concludes pretty much all the slides",
    "start": "808990",
    "end": "811450"
  },
  {
    "text": "that I have so you can try all of this",
    "start": "811450",
    "end": "813940"
  },
  {
    "text": "today Redis labs calm we have either two",
    "start": "813940",
    "end": "818260"
  },
  {
    "text": "software that you can download and",
    "start": "818260",
    "end": "819700"
  },
  {
    "text": "docker Windows or Mac OS or on the Linux",
    "start": "819700",
    "end": "822850"
  },
  {
    "text": "flavors or you can sign up on the cloud",
    "start": "822850",
    "end": "824860"
  },
  {
    "text": "on any one of the public clouds and you",
    "start": "824860",
    "end": "827170"
  },
  {
    "text": "can try all of these things to yourself",
    "start": "827170",
    "end": "828370"
  },
  {
    "text": "I appreciate it thanks for listening",
    "start": "828370",
    "end": "830680"
  },
  {
    "text": "thank you",
    "start": "830680",
    "end": "833339"
  }
]