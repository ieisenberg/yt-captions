[
  {
    "text": "If you want to build an app\nwith language modeling,",
    "start": "0",
    "end": "2423"
  },
  {
    "text": "but aren't sure how to get started in AWS?",
    "start": "2423",
    "end": "5606"
  },
  {
    "text": "Stick around, this episode is for you.",
    "start": "5606",
    "end": "8466"
  },
  {
    "text": "Our guest for this episode is George.",
    "start": "13733",
    "end": "16512"
  },
  {
    "text": "George recently graduated with a computer science degree\nfrom Bucknell University in the US.",
    "start": "16512",
    "end": "21991"
  },
  {
    "text": "During school, he learned about natural language processing",
    "start": "21991",
    "end": "25437"
  },
  {
    "text": "and wanted to come with a project that applied it.",
    "start": "25437",
    "end": "28053"
  },
  {
    "text": "Let's hear from George.",
    "start": "28053",
    "end": "30102"
  },
  {
    "text": "Hello, I'm George.",
    "start": "30103",
    "end": "31993"
  },
  {
    "text": "I'm developing an AI assistance tool that will help\nlyricists write better lyrics faster.",
    "start": "31993",
    "end": "36475"
  },
  {
    "text": "The idea is a user will select\nmultiple albums they want to sound like.",
    "start": "36476",
    "end": "40097"
  },
  {
    "text": "Then my application will scrape\nthe lyrics of all the songs on the albums,",
    "start": "40097",
    "end": "44326"
  },
  {
    "text": "do some text preprocessing cleaning,\nand then feed it into a large language model for training.",
    "start": "44326",
    "end": "49037"
  },
  {
    "text": "Then the user can generate new lyrics,\nand edit them to their liking.",
    "start": "49140",
    "end": "54058"
  },
  {
    "text": "My goal is to help inspire\nthe next generation of songwriters.",
    "start": "54769",
    "end": "57991"
  },
  {
    "text": "George wants to build an app\nthat helps artists write the freshest lyrics",
    "start": "59358",
    "end": "62902"
  },
  {
    "text": "that are inspired by their favorite musicians.",
    "start": "62902",
    "end": "65617"
  },
  {
    "text": "Simply insert some of your own lyrics\nand the name of your favorite rapper",
    "start": "65617",
    "end": "69748"
  },
  {
    "text": "and his app will generate unique lyrics that sound\nso much like your favorite rapper,",
    "start": "69749",
    "end": "74421"
  },
  {
    "text": "you'd think they were stolen.",
    "start": "74421",
    "end": "76404"
  },
  {
    "text": "In order to generate new song lyrics that emulate the style of a specific artist,",
    "start": "76404",
    "end": "81579"
  },
  {
    "text": "George needs to train machine learning models that learn the lyrical style of each artist.",
    "start": "81579",
    "end": "87364"
  },
  {
    "text": "This learning is done by training models against a lot of data,",
    "start": "87364",
    "end": "91248"
  },
  {
    "text": "Which in this case would be a data set of song lyrics from each artist.",
    "start": "91248",
    "end": "95423"
  },
  {
    "text": "For your language modeling application, you'll want as much training data as possible ",
    "start": "96293",
    "end": "101426"
  },
  {
    "text": "so that your models have a diverse set of samples to learn from.",
    "start": "101426",
    "end": "105096"
  },
  {
    "text": "Once George has gathered enough song lyrics, he'll store it all in Amazon S3.",
    "start": "106093",
    "end": "111450"
  },
  {
    "text": "S3 provides you with durable\nand cost-effective storage in the cloud.",
    "start": "112476",
    "end": "117554"
  },
  {
    "text": "For machine learning problems in AWS,\nit'll be your go-to service for storing your raw data set.",
    "start": "117554",
    "end": "124206"
  },
  {
    "text": "Make sure you utilize\nthe Intelligent-Tiering storage class in S3",
    "start": "124206",
    "end": "129171"
  },
  {
    "text": "since it'll help you keep your storage costs as low as possible.",
    "start": "129171",
    "end": "133259"
  },
  {
    "text": "To begin working with your data,\nyou can use Amazon SageMaker.",
    "start": "133909",
    "end": "138213"
  },
  {
    "text": "SageMaker is a fully managed machine learning service",
    "start": "138214",
    "end": "141544"
  },
  {
    "text": "that you can use for each step of the machine learning process.",
    "start": "141544",
    "end": "145304"
  },
  {
    "text": " Be sure to check out SageMaker Studio,\na web based IDE that comes at no extra cost",
    "start": "145304",
    "end": "150667"
  },
  {
    "text": "and is designed to make you more productive \nthroughout the machine learning process.",
    "start": "150667",
    "end": "155056"
  },
  {
    "text": "From SageMaker you're going to import\nyour data set from S3,",
    "start": "155655",
    "end": "159543"
  },
  {
    "text": "And begin cleaning it and preparing it for the modeling process",
    "start": "159543",
    "end": "163405"
  },
  {
    "text": "Within SageMaker Studio Notebooks,\nyou can import all of the tools",
    "start": "163405",
    "end": "167479"
  },
  {
    "text": "and libraries commonly used\nfor data preprocessing and exploration,",
    "start": "167479",
    "end": "172666"
  },
  {
    "text": "such as Pandas, NumPy,\nand Matplotlib.",
    "start": "172666",
    "end": "176356"
  },
  {
    "text": "Beyond data preparation, you can also employ feature engineering methods",
    "start": "176356",
    "end": "180862"
  },
  {
    "text": "common to natural language processing problems ",
    "start": "180862",
    "end": "183388"
  },
  {
    "text": "such as Part Of Speech Tagging, Sentiment Analysis,",
    "start": "183388",
    "end": "187081"
  },
  {
    "text": "Named Entity Recognition,\nTopic Modeling and many others. ",
    "start": "187081",
    "end": "191111"
  },
  {
    "text": "Once your data sets are ready for modeling,",
    "start": "191824",
    "end": "194040"
  },
  {
    "text": "you'll need to decide which machine learning algorithms to employ.",
    "start": "194040",
    "end": "197814"
  },
  {
    "text": "Common algorithms for text generation problems\ninclude Recurrent Neural Networks,",
    "start": "197814",
    "end": "202444"
  },
  {
    "text": "and Hugging Face Transformers. ",
    "start": "202444",
    "end": "205075"
  },
  {
    "text": "Recurrent Neural Networks process sequential information",
    "start": "205075",
    "end": "208019"
  },
  {
    "text": "to generate meaningful text, based on the words it has learned from.",
    "start": "208019",
    "end": "212374"
  },
  {
    "text": "They primarily learn the order that words commonly appear in,",
    "start": "212374",
    "end": "215982"
  },
  {
    "text": "rather than the actual semantic meaning.",
    "start": "215983",
    "end": "218558"
  },
  {
    "text": "They're very successful at generating human-readable text passages",
    "start": "218558",
    "end": "222647"
  },
  {
    "text": "Hugging Face Transformers is a popular open source project",
    "start": "223845",
    "end": "227301"
  },
  {
    "text": "that provides pre-trained NLP models\nfor a wide variety of use cases.",
    "start": "227301",
    "end": "232202"
  },
  {
    "text": "Transformers are modern neural networks\nthat tend to outperform",
    "start": "232203",
    "end": "235991"
  },
  {
    "text": "traditional recurrent neural networks and convolutional neural networks",
    "start": "235991",
    "end": "239664"
  },
  {
    "text": "because of their computational efficiency and capacity for parallel training.",
    "start": "239664",
    "end": "244489"
  },
  {
    "text": "These models also come pre-trained on a lot of text,",
    "start": "245125",
    "end": "248379"
  },
  {
    "text": "so they can save you\na tremendous amount of time and compute power. ",
    "start": "248379",
    "end": "251662"
  },
  {
    "text": "Although its pre-trained,\nHugging Face also can be tailored to emulate specific texts",
    "start": "252291",
    "end": "257465"
  },
  {
    "text": " which is called Transfer Learning.",
    "start": "257465",
    "end": "259414"
  },
  {
    "text": "Check out the links in the description of this video ",
    "start": "260240",
    "end": "262931"
  },
  {
    "text": "to see how you can build a Hugging Face SageMaker Estimator\nusing AWS Deep Learning Containers. ",
    "start": "262932",
    "end": "269171"
  },
  {
    "text": "SageMaker supports deploying Hugging Face models ",
    "start": "270235",
    "end": "273120"
  },
  {
    "text": "using the Hugging Face AWS Deep Learning Containers for inference and training.",
    "start": "273120",
    "end": "278270"
  },
  {
    "text": "George will train models for each music artist",
    "start": "279076",
    "end": "281932"
  },
  {
    "text": "by feeding his training data into the model\nand kicking off a training job.",
    "start": "281933",
    "end": "286314"
  },
  {
    "text": "As you train your model, you can also make use of a SageMaker feature called Automatic Model Tuning.",
    "start": "287011",
    "end": "293110"
  },
  {
    "text": "This feature allows us to easily optimize the hyperparameters of your model",
    "start": "293110",
    "end": "298000"
  },
  {
    "text": "To use the tuner, specify the hyperparameters and the ranges that you want to search through.",
    "start": "298463",
    "end": "303546"
  },
  {
    "text": "The tuner then runs a series of training jobs searching through these ranges ",
    "start": "304050",
    "end": "308021"
  },
  {
    "text": "to find the optimal set of hyperparameters that result in the best performing model.",
    "start": "308021",
    "end": "313253"
  },
  {
    "text": "At the end of the training process, the final model artifact is stored as a model file in Amazon S3.",
    "start": "313253",
    "end": "320738"
  },
  {
    "text": "The deployment process launches your model into a cluster of Load Balanced and Auto Scaled EC2 instances.",
    "start": "320739",
    "end": "327560"
  },
  {
    "text": "To invoke this endpoint from your application front end,",
    "start": "327560",
    "end": "330645"
  },
  {
    "text": "you can implement a serverless backend to request predictions using Amazon API Gateway and AWS Lambda.",
    "start": "330645",
    "end": "338199"
  },
  {
    "text": "API Gateway makes it easy to publish, maintain,",
    "start": "338200",
    "end": "341339"
  },
  {
    "text": "monitor, and secure APIs at scale.",
    "start": "341339",
    "end": "345147"
  },
  {
    "text": "Lambda lets you run code without having to manage servers",
    "start": "345147",
    "end": "348840"
  },
  {
    "text": "In George's app, the frontend will send an API request with the user's own song lyrics,",
    "start": "348840",
    "end": "354550"
  },
  {
    "text": "The name of the artist the user wants to emulate, and the desired character count.",
    "start": "354550",
    "end": "359270"
  },
  {
    "text": "API Gateway then passes these parameter values to a Lambda function.",
    "start": "359270",
    "end": "363793"
  },
  {
    "text": "The Lambda function parses the input\nand forwards it to the SageMaker Model Endpoint.",
    "start": "363794",
    "end": "369123"
  },
  {
    "text": "The model is invoked based on\nwhich artist is specified within the request.",
    "start": "369123",
    "end": "374797"
  },
  {
    "text": "George's pre-trained model then generates unique lyrics that continue the song from the input text.",
    "start": "374797",
    "end": "380996"
  },
  {
    "text": "These lyrics are sent back to Lambda.",
    "start": "380996",
    "end": "383405"
  },
  {
    "text": "The Lambda function then parses this text and sends it back to API Gateway,",
    "start": "383405",
    "end": "387669"
  },
  {
    "text": "which returns it back to the frontend application.",
    "start": "387669",
    "end": "390956"
  },
  {
    "text": "I know, I covered a lot.",
    "start": "390956",
    "end": "392611"
  },
  {
    "text": "If you missed something, don't worry because now it's time for the recap.",
    "start": "392611",
    "end": "396968"
  },
  {
    "text": "All of your machine learning happens in Amazon SageMaker.",
    "start": "397989",
    "end": "401574"
  },
  {
    "text": "Use AWS Lambda as your backend\nfor making requests to SageMaker.",
    "start": "401574",
    "end": "406188"
  },
  {
    "text": "Manage access to your backend with Amazon API Gateway.",
    "start": "406188",
    "end": "409909"
  },
  {
    "text": "That's how you build a language modeling app in AWS.",
    "start": "409909",
    "end": "413876"
  },
  {
    "text": "It doesn't matter when you start, as long as you just get started.",
    "start": "413876",
    "end": "417084"
  },
  {
    "text": "Make sure you check out the links below the video before you get started. ",
    "start": "417084",
    "end": "420852"
  },
  {
    "text": "Thanks for hanging out with me, see you soon.",
    "start": "420852",
    "end": "423396"
  }
]