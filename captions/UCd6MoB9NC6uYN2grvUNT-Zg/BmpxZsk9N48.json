[
  {
    "text": "good afternoon everybody and thank you very much for joining me for today's session which is a deep dive on Amazon",
    "start": "1280",
    "end": "8189"
  },
  {
    "text": "ec2 Systems Manager my name is Maitreya Ranganath and I'm a solution architect I am based out of the",
    "start": "8189",
    "end": "13320"
  },
  {
    "text": "Dallas office and today it's my pleasure to go deep on the assistant manager with you just by a show of hands how many of",
    "start": "13320",
    "end": "20850"
  },
  {
    "text": "you have actually are using or evaluating systems manager or using run command",
    "start": "20850",
    "end": "26539"
  },
  {
    "text": "I'd say about 10% so my objective today is to address that to show you how you",
    "start": "26539",
    "end": "33750"
  },
  {
    "text": "can use that and my hope is that you come away from this session understanding some cases where you can",
    "start": "33750",
    "end": "39300"
  },
  {
    "text": "use systems manager and understanding how it can help you so what can you expect from today's session you'll get",
    "start": "39300",
    "end": "45420"
  },
  {
    "text": "an overview of system manager capabilities and components we will walk you through some use cases of each",
    "start": "45420",
    "end": "51719"
  },
  {
    "text": "component i'll also break off and show some demonstrations to show you some of those components in action and finally",
    "start": "51719",
    "end": "58590"
  },
  {
    "text": "we will talk about how you can bring all of those components together to realize enter and use cases I have some demos so",
    "start": "58590",
    "end": "66030"
  },
  {
    "text": "it probably will take almost the entire hour but I'll hang around after this to answer any questions if we finish early",
    "start": "66030",
    "end": "71100"
  },
  {
    "text": "I can take a few questions so we've been listening to customers we've been having",
    "start": "71100",
    "end": "77130"
  },
  {
    "text": "we had customers come up and speak about how cloud has become the new normal in places like the keynote that we had",
    "start": "77130",
    "end": "83340"
  },
  {
    "text": "yesterday so what's happening is that customers of all sizes enterprises as well as small customers are moving to",
    "start": "83340",
    "end": "90600"
  },
  {
    "text": "AWS and they're getting advantage of the benefits of AWS increase agility reduced",
    "start": "90600",
    "end": "96150"
  },
  {
    "text": "costs as well as global reach but there's been a refrain that what we've seen our customers are also trying to",
    "start": "96150",
    "end": "102479"
  },
  {
    "text": "manage the systems that they deploy on AWS and when they do that the first step they sometimes take is to bring their",
    "start": "102479",
    "end": "108720"
  },
  {
    "text": "traditional on-premises tools to manage those systems or new wshh and they also",
    "start": "108720",
    "end": "113850"
  },
  {
    "text": "try to do this management so have a single pane of glass there a single tool that they can use to manage servers both",
    "start": "113850",
    "end": "120060"
  },
  {
    "text": "in AWS as well as on-premises and what happens then is they've shared challenges with us what they've told us",
    "start": "120060",
    "end": "125640"
  },
  {
    "text": "is that many of those traditional tools are not really designed to handle the",
    "start": "125640",
    "end": "130679"
  },
  {
    "text": "scalability that comes with it u.s. or the dynamic nature of the environment in AWS when systems can come",
    "start": "130679",
    "end": "136900"
  },
  {
    "text": "up and come down within matter of minutes many of these tools really can't keep up with that pace of change what",
    "start": "136900",
    "end": "142900"
  },
  {
    "text": "happens then is you have to create two different systems a set of tools perhaps that work well with AWS and a different",
    "start": "142900",
    "end": "149800"
  },
  {
    "text": "set of tools that work with on-premises and when you do that you don't get a single pane of glass you don't get",
    "start": "149800",
    "end": "154959"
  },
  {
    "text": "variability across all your resources what also happens is that when you try to integrate these kinds of tools",
    "start": "154959",
    "end": "160120"
  },
  {
    "text": "together you end up having significant complexity and finally many of these",
    "start": "160120",
    "end": "165670"
  },
  {
    "text": "on-premises tools have licensing costs and you kind of have to pay by managed service and that can quickly become",
    "start": "165670",
    "end": "172180"
  },
  {
    "text": "difficult when you try to manage servers that don't exist for very long periods of time ephemeral servers so in summary",
    "start": "172180",
    "end": "179520"
  },
  {
    "text": "customers have shared with us that managing cloud and hybrid environments using traditional tool sets is complex",
    "start": "179520",
    "end": "186730"
  },
  {
    "text": "and costly so we heard that feedback loud and clear and then we said what can",
    "start": "186730",
    "end": "191920"
  },
  {
    "text": "we do about that and ec2 Systems Manager came out as a result of those discussions so in summary ec2 Systems Manager is a",
    "start": "191920",
    "end": "199480"
  },
  {
    "text": "set of capabilities and you'll see it comes in seven capabilities today and we'll dive deep on each of those it",
    "start": "199480",
    "end": "206440"
  },
  {
    "text": "allows you to do ongoing operations and management's of systems at scale this is",
    "start": "206440",
    "end": "211660"
  },
  {
    "text": "addressing the responsibility area of managing operating systems and about so",
    "start": "211660",
    "end": "216730"
  },
  {
    "text": "if you look at the shared model that AWS has that is a responsibility if you are using a service like ec2 that is your",
    "start": "216730",
    "end": "223510"
  },
  {
    "text": "responsibility so Systems Manager is a tool that can help you on that on to deliver on that responsibility so it",
    "start": "223510",
    "end": "229360"
  },
  {
    "text": "helps you automate all the actions that you need to do for that it works across both Linux and Windows server so it's",
    "start": "229360",
    "end": "235420"
  },
  {
    "text": "cross-platform and it also can work across both systems and servers in ec2 you see two instances as well as servers",
    "start": "235420",
    "end": "242829"
  },
  {
    "text": "that you have on-premises so it's hybrid in nature so the name is easy to systems manager but it's not just easy to it can",
    "start": "242829",
    "end": "249430"
  },
  {
    "text": "be both on-premises as well as ec2 and finally to address that cost equation it",
    "start": "249430",
    "end": "255549"
  },
  {
    "text": "doesn't cost anything to use the facilities we are going to talk about right Systems Manager is offered to you at no additional cost you pay for the",
    "start": "255549",
    "end": "262660"
  },
  {
    "text": "resources you use so for example ec2 you pay for those you might pay a little bit for storage of the output and you might pay for",
    "start": "262660",
    "end": "268810"
  },
  {
    "text": "things like spinning up servers when you want to take images and we will talk about that but the services themselves",
    "start": "268810",
    "end": "274330"
  },
  {
    "text": "come to you as no additional cost both for unpromising l as in AWS so why",
    "start": "274330",
    "end": "280990"
  },
  {
    "text": "should you care about systems manager it really comes down to the benefits it provides you so number one is it",
    "start": "280990",
    "end": "286780"
  },
  {
    "text": "supports hybrid architectures you can use Systems Manager as a uniform way to manage servers both in AWS as well as in",
    "start": "286780",
    "end": "293740"
  },
  {
    "text": "on-premises data centers it's cross-platform Windows and Linux several flavors of Linux and several",
    "start": "293740",
    "end": "299710"
  },
  {
    "text": "versions of Windows it's inherently scalable it can handle tens or thousands of servers without having any additional",
    "start": "299710",
    "end": "307030"
  },
  {
    "text": "complexity that you need to introduce it's inherently secure like every other",
    "start": "307030",
    "end": "312130"
  },
  {
    "text": "AWS Service Systems Manager integrates with tools like cloud trail and with",
    "start": "312130",
    "end": "317620"
  },
  {
    "text": "Identity and Access Management so you use your familiar ways that you have to manage accesses to resources in AWS you",
    "start": "317620",
    "end": "324370"
  },
  {
    "text": "can use the same mechanisms to manage how actions can be done in Systems Manager Systems Manager makes it really",
    "start": "324370",
    "end": "331240"
  },
  {
    "text": "easy for you to write your own automation and extend that to do additional actions and we'll see examples of that and finally a",
    "start": "331240",
    "end": "337750"
  },
  {
    "text": "combination of all of that results in lower total total cost of ownership you don't have to pay for licenses as well",
    "start": "337750",
    "end": "344020"
  },
  {
    "text": "it reduces the amount of manual work that you need to do so anything that you can automate that's effort that you can",
    "start": "344020",
    "end": "349720"
  },
  {
    "text": "save on and you can focus on higher order functions actually what makes your business unique so these we consider as",
    "start": "349720",
    "end": "356050"
  },
  {
    "text": "undifferentiated heavy lifting you can kind of elevate yourself and do something which is unique to your",
    "start": "356050",
    "end": "361540"
  },
  {
    "text": "business so let's take a look at the system manager components and use cases",
    "start": "361540",
    "end": "366660"
  },
  {
    "text": "the code to the systems manager is the system manager agent this is a piece of software that you install on the",
    "start": "366660",
    "end": "373000"
  },
  {
    "text": "operating system of servers that you want to manage it supports a bunch of platform so it has several flavors of",
    "start": "373000",
    "end": "380830"
  },
  {
    "text": "Linux including Red Hat Center or some SUSE Linux and it has several versions of Windows in fact if you are running on",
    "start": "380830",
    "end": "387970"
  },
  {
    "text": "ec2 and you have launched an ami from for Windows subsequent to about mid of",
    "start": "387970",
    "end": "394419"
  },
  {
    "text": "2016 the Systems Manager agent is already included in the that you've launched so you are already",
    "start": "394419",
    "end": "399910"
  },
  {
    "text": "enabled to be managed by Systems Manager if you're using windows on AWS ec2 if",
    "start": "399910",
    "end": "406000"
  },
  {
    "text": "you're using Linux you have to download and install the agent so it's a few steps to get it from as3 URL and expand",
    "start": "406000",
    "end": "412780"
  },
  {
    "text": "and run that command and you can script that as part of your user data bootstrap script so every instance that you launch",
    "start": "412780",
    "end": "418960"
  },
  {
    "text": "will be ready to be managed by Systems Manager the agent itself is open source",
    "start": "418960",
    "end": "424780"
  },
  {
    "text": "we make the source available in github so you can examine it to see what it's doing under the hood so once you have an",
    "start": "424780",
    "end": "430750"
  },
  {
    "text": "agent installed on a server be that on ec2 or in on-premises you are now able to take advantage of the capabilities",
    "start": "430750",
    "end": "436240"
  },
  {
    "text": "which are on the next slide so there are seven capabilities and I won't read them all right now but let's see how they",
    "start": "436240",
    "end": "442240"
  },
  {
    "text": "kind of hang together and that's the next diagram so the core of Systems Manager is a concept called documents so",
    "start": "442240",
    "end": "448420"
  },
  {
    "text": "documents are JSON files that you can author which contain a list of commands or actions that you want systems manager",
    "start": "448420",
    "end": "455590"
  },
  {
    "text": "to do for you what you can then do is deliver that document to a service so in this example let's say you go towards",
    "start": "455590",
    "end": "461710"
  },
  {
    "text": "the right and you deliver the document to a service or a facility called run command and run command will execute",
    "start": "461710",
    "end": "467320"
  },
  {
    "text": "that document on the entire suite of servers that you define there are also services like state",
    "start": "467320",
    "end": "473410"
  },
  {
    "text": "manager patch manager and automation that can take documents of different types and execute them we go deeper into",
    "start": "473410",
    "end": "479830"
  },
  {
    "text": "each of these and there are three other services that are overly parameter store which lets you store parameters",
    "start": "479830",
    "end": "485880"
  },
  {
    "text": "inventory which lets you get a full inventory of a software and maintenance window as the name suggests lets you",
    "start": "485880",
    "end": "492460"
  },
  {
    "text": "define maintenance windows and execute them at your schedule so you might be",
    "start": "492460",
    "end": "498010"
  },
  {
    "text": "thinking what's a document really right so let's look at an example a document is a JSON document like we said this is",
    "start": "498010",
    "end": "504250"
  },
  {
    "text": "an example of a document which you can deliver and have executed it has a",
    "start": "504250",
    "end": "509320"
  },
  {
    "text": "schema so it has a schema version we have updated the schema a couple of times so it's schema version 2.0 right",
    "start": "509320",
    "end": "515080"
  },
  {
    "text": "now it has a description and this document takes some input parameters so in this example this is a document that",
    "start": "515080",
    "end": "521740"
  },
  {
    "text": "installs a particular Windows feature so the parameter a represents the name of the feature that we want to be installed",
    "start": "521740",
    "end": "527980"
  },
  {
    "text": "so you can have a feature windows feature like iis dotnet framework and this document will",
    "start": "527980",
    "end": "534370"
  },
  {
    "text": "install that on all the servers you specify down below are the main steps so this is one or more steps that you want",
    "start": "534370",
    "end": "540460"
  },
  {
    "text": "the document to in to execute and here we are taking example of running a PowerShell script so this is a windows",
    "start": "540460",
    "end": "546970"
  },
  {
    "text": "powershell commandlets that installs the windows feature that we've named with the feature you can see",
    "start": "546970",
    "end": "552130"
  },
  {
    "text": "some examples here of parameters being expanded because those double brackets represents the value of the feature that",
    "start": "552130",
    "end": "558430"
  },
  {
    "text": "you're going to provide when you run this command okay so what we're doing now is we can take this document and",
    "start": "558430",
    "end": "564580"
  },
  {
    "text": "deliver that to one of those features we saw on the previous page and have that executed so the first feature i want to",
    "start": "564580",
    "end": "570460"
  },
  {
    "text": "dive deeper on is run command so this is the core service we launched that actually a little over two years ago the",
    "start": "570460",
    "end": "577030"
  },
  {
    "text": "concept with this is that it lets you securely and remotely manage your servers at scale both in ec2 as well as",
    "start": "577030",
    "end": "583810"
  },
  {
    "text": "in on-premises environments you represent the actions that you want run command to do in that document the",
    "start": "583810",
    "end": "590650"
  },
  {
    "text": "format we just saw and then you decide on how many servers or which servers this particular document should be run",
    "start": "590650",
    "end": "596670"
  },
  {
    "text": "run command will execute that the system is manager agent will run those commands the output and the success in failure",
    "start": "596670",
    "end": "603730"
  },
  {
    "text": "state comes back to run command and you can see the results in the service console or through s CLI or an API call",
    "start": "603730",
    "end": "610780"
  },
  {
    "text": "what also happens is the output of those commands are also stored they can be sent to s3 or they can be viewed",
    "start": "610780",
    "end": "616930"
  },
  {
    "text": "directly in the console run command also has features to make sure that it can control the rate so if you have a fleet",
    "start": "616930",
    "end": "623680"
  },
  {
    "text": "of say tens of servers you can say that run command will run at the most two of those commands in parallel so it kind of",
    "start": "623680",
    "end": "630160"
  },
  {
    "text": "spreads that workload over time and it also has error handling so you can define how many errors should happen",
    "start": "630160",
    "end": "636280"
  },
  {
    "text": "before run command decides that that particular command has failed it's obvious native what that really means is",
    "start": "636280",
    "end": "642880"
  },
  {
    "text": "that it's integrated with several other AWS services cloud trail is a great example which let's use that which lets",
    "start": "642880",
    "end": "649839"
  },
  {
    "text": "you know which commands were run and who ran them so you can actually have a very clear audit of all the commands that",
    "start": "649839",
    "end": "655690"
  },
  {
    "text": "were executed on your fleet it also is integrated with iam so you can decide to",
    "start": "655690",
    "end": "661720"
  },
  {
    "text": "control your access using identity and access management policies to decide who is allowed to run a",
    "start": "661720",
    "end": "667100"
  },
  {
    "text": "command and with what conditions right so you can let that scope the permissions down so what are some of the",
    "start": "667100",
    "end": "674509"
  },
  {
    "text": "use cases that people are using run command for the first one that jumps out is that because you now have the ability",
    "start": "674509",
    "end": "680480"
  },
  {
    "text": "to remotely execute commands without having to SSH or RDP into servers you",
    "start": "680480",
    "end": "685519"
  },
  {
    "text": "can now turn those services off so rather than having to have a whole fleet of managed users on each server and",
    "start": "685519",
    "end": "692750"
  },
  {
    "text": "having to worry about who's having access to what and I'm going to have to rotate their keys and things like that",
    "start": "692750",
    "end": "698029"
  },
  {
    "text": "you can eliminate that entire class of problem and say to those users that you can now use run command to run those",
    "start": "698029",
    "end": "703940"
  },
  {
    "text": "commands instead of having to log into boxes now because your run command has documents that's the curated set of",
    "start": "703940",
    "end": "710360"
  },
  {
    "text": "actions that you want to allow your users to do they can't deviate from that all they can do is run that so they",
    "start": "710360",
    "end": "715430"
  },
  {
    "text": "can't actually log into a box serve to some site and download some malicious code because they don't have the ability to do that which is a nice thing to have",
    "start": "715430",
    "end": "722029"
  },
  {
    "text": "so again you can run arbitrary bash and PowerShell scripts and you can use that for various different use cases and it's",
    "start": "722029",
    "end": "728540"
  },
  {
    "text": "really a peer magician to see how you can use run command to do your work so",
    "start": "728540",
    "end": "734750"
  },
  {
    "text": "some other some of the key use cases that we've seen customers use that for are for operating systems changes a very",
    "start": "734750",
    "end": "741079"
  },
  {
    "text": "common use case is to do automated domain join so if you use the AC to console there's a drop-down in the",
    "start": "741079",
    "end": "746540"
  },
  {
    "text": "wizard that lets you automatically join a domain behind the scenes what's really happening is that a run command document",
    "start": "746540",
    "end": "752779"
  },
  {
    "text": "is being executed to join your Windows Server 2 directory services domain you",
    "start": "752779",
    "end": "758060"
  },
  {
    "text": "can manage application changes and you can also integrate run command with configuration management tools like",
    "start": "758060",
    "end": "763850"
  },
  {
    "text": "ansible salt powershell of DSC so you can use that to trigger actions to keep",
    "start": "763850",
    "end": "769850"
  },
  {
    "text": "your configuration up-to-date here's a blog post link as well as a diagram that",
    "start": "769850",
    "end": "775699"
  },
  {
    "text": "shows you how to replace a bastion host so this is the bastion host or a jump box that traditionally we've had to",
    "start": "775699",
    "end": "781939"
  },
  {
    "text": "maintain because users want to go to servers and administer them what we can do by taking all those actions and",
    "start": "781939",
    "end": "788329"
  },
  {
    "text": "making curated lists of documents is eliminate that entire set of bastion hosts so that's an entire infrastructure",
    "start": "788329",
    "end": "794089"
  },
  {
    "text": "that we don't need to maintain and don't need to worry about securing because run command lets you kind of",
    "start": "794089",
    "end": "799279"
  },
  {
    "text": "have the speak basic the the curated set of commands as well as very good auditing in terms of who executed what",
    "start": "799279",
    "end": "805670"
  },
  {
    "text": "when so you don't have to have the set of Bastion host and the other thing is since you do not allow SSH in that's",
    "start": "805670",
    "end": "811699"
  },
  {
    "text": "another vector that you kind of eliminate from consideration what I'm going to show you now is a walkthrough",
    "start": "811699",
    "end": "817309"
  },
  {
    "text": "so I'm going to switch now to a demo and show you how the run command works so",
    "start": "817309",
    "end": "823100"
  },
  {
    "text": "what you're seeing here is I've logged into my AWS account and I'm in the ec2 I just logged into the ec2 dashboard so",
    "start": "823100",
    "end": "829939"
  },
  {
    "text": "where you find Systems Manager and all its related services and capabilities is on the left side it comes in two parts",
    "start": "829939",
    "end": "835910"
  },
  {
    "text": "you see the Systems Manager services and systems manager shared resources what",
    "start": "835910",
    "end": "842899"
  },
  {
    "text": "I'm going to do now is to click on manage instances and it brings up a list of servers that have the SSM agent",
    "start": "842899",
    "end": "849139"
  },
  {
    "text": "installed so these are servers where I've either install the SSM agent such as the Linux servers or I have enabled",
    "start": "849139",
    "end": "855829"
  },
  {
    "text": "the SSM agent on Windows and in order to let SSM agent talk to the assistant",
    "start": "855829",
    "end": "860870"
  },
  {
    "text": "service I need to give those instances and an I am role which lets it do that",
    "start": "860870",
    "end": "866990"
  },
  {
    "text": "so there's a predefined policy document that you can associate with that I am role which lets the server communicate",
    "start": "866990",
    "end": "873680"
  },
  {
    "text": "with the SSM api's and do things like register and appear online scrolling down I also have a new bundle virtual",
    "start": "873680",
    "end": "881930"
  },
  {
    "text": "machine that's running on my laptop which kind of represents the on-premises use case so what you can see here is that it looks identical to all the other",
    "start": "881930",
    "end": "889009"
  },
  {
    "text": "instances except that it's instance ID is MI - something rather than just I -",
    "start": "889009",
    "end": "894350"
  },
  {
    "text": "something so from the perspective of Systems Manager and on-premises server is the same as NEC - instance what I can",
    "start": "894350",
    "end": "902629"
  },
  {
    "text": "see here are that the agent version so we can keep track of agent versions so that is manage instances so these are",
    "start": "902629",
    "end": "909019"
  },
  {
    "text": "servers on which I can now run Systems Manager commands I'm going to show you now documents so these are the documents",
    "start": "909019",
    "end": "916279"
  },
  {
    "text": "and if you come just log into documents you'll see that there's a whole a long list of documents that AWS provides so",
    "start": "916279",
    "end": "922370"
  },
  {
    "text": "these are documents that we've created for common use cases for example in order to be able to patch the SSM agent",
    "start": "922370",
    "end": "929029"
  },
  {
    "text": "which is a common task we have a document here called patch the agent or update SSM agent so this is",
    "start": "929029",
    "end": "936740"
  },
  {
    "text": "the document that's predefined all you have to do is run it if you want to run this particular command now you can also",
    "start": "936740",
    "end": "942379"
  },
  {
    "text": "author your own document so I'm going to show you an example of that a really simple document which lists the open",
    "start": "942379",
    "end": "947899"
  },
  {
    "text": "ports so essentially it runs a net stat for me and if I look at the content of",
    "start": "947899",
    "end": "953929"
  },
  {
    "text": "the document you can see the JSON I'm going to scroll down to show you that it's very simple it has the basic",
    "start": "953929",
    "end": "959600"
  },
  {
    "text": "preamble here main steps it doesn't take any parameters what it does is we have two steps here the first one is a",
    "start": "959600",
    "end": "965839"
  },
  {
    "text": "PowerShell script which runs next at minus-8 and I've scoped that down with a precondition to say that this should run",
    "start": "965839",
    "end": "972110"
  },
  {
    "text": "only for Windows and have a second command called run shell script and scope down to run on Linux servers to",
    "start": "972110",
    "end": "978470"
  },
  {
    "text": "run let's start with a slightly different set of parameters so this is a multi-platform or cross-platform",
    "start": "978470",
    "end": "983990"
  },
  {
    "text": "document that I can run on a fleet of servers so let's go and try run that and",
    "start": "983990",
    "end": "990470"
  },
  {
    "text": "see what happens so I'm going to run command we click on run a command which brings me to this",
    "start": "990470",
    "end": "996589"
  },
  {
    "text": "view that lets me select the document I'll scope it down to look for documents owned by me this is the same document we",
    "start": "996589",
    "end": "1003160"
  },
  {
    "text": "talked about earlier list open ports and now I need to choose this list the set of servers on which I want to apply this",
    "start": "1003160",
    "end": "1009790"
  },
  {
    "text": "document so I can choose the servers in two ways I can get a full list of managed service and cannot select them",
    "start": "1009790",
    "end": "1016839"
  },
  {
    "text": "one by one or I can choose them by a tag so choosing by a tag is really powerful",
    "start": "1016839",
    "end": "1022329"
  },
  {
    "text": "because now I am not constraining it to the set of individual identified servers it's any server that happens to have",
    "start": "1022329",
    "end": "1029140"
  },
  {
    "text": "that tag when I'm running the command and this will come in useful when I have scheduled commands later for now let me",
    "start": "1029140",
    "end": "1034870"
  },
  {
    "text": "just go and select all of the servers that I have in my - list and I can set a",
    "start": "1034870",
    "end": "1040209"
  },
  {
    "text": "couple of other parameters like how many servers I need to run in parallel so let's say I put that as two I want to",
    "start": "1040209",
    "end": "1045788"
  },
  {
    "text": "stop after one error and I can in Advanced Options write the output to s3 but I just wanted I'm not interested in",
    "start": "1045789",
    "end": "1052990"
  },
  {
    "text": "just looking at the output side on that what I get back is a command ID and I can view the result what I see here is",
    "start": "1052990",
    "end": "1059950"
  },
  {
    "text": "the result of running that command on all the servers that employee in my list",
    "start": "1059950",
    "end": "1065889"
  },
  {
    "text": "of servers here's an example what I'm going to do is reflect that and check what happened to be run off this particular command on",
    "start": "1065889",
    "end": "1074630"
  },
  {
    "text": "this particular server",
    "start": "1074630",
    "end": "1077410"
  },
  {
    "text": "having a conflicted with another patching system so that's what happened here but that's fine we can find the",
    "start": "1091680",
    "end": "1098160"
  },
  {
    "text": "output of that here so this is an example of a free this run what I can see here is I can look at the output and",
    "start": "1098160",
    "end": "1103590"
  },
  {
    "text": "this is an example of a Windows server so it was skipped the Linux step if I go back to the Windows server I can see the",
    "start": "1103590",
    "end": "1110190"
  },
  {
    "text": "output here and so this is the step and the output from the Windows command so arbitrary commands can be run and I can",
    "start": "1110190",
    "end": "1116130"
  },
  {
    "text": "capture the output I can see them in the console or I can pipe those outputs to s3 where I can further look at them so",
    "start": "1116130",
    "end": "1122550"
  },
  {
    "text": "at its basic level what we've done here is used run command to select a command",
    "start": "1122550",
    "end": "1127890"
  },
  {
    "text": "to run set the number of servers on which I want it to be run and collected the results back all right",
    "start": "1127890",
    "end": "1134820"
  },
  {
    "text": "let's switch back to the presentation now and go through some other components",
    "start": "1134820",
    "end": "1141140"
  },
  {
    "text": "so the other company I want to talk to you about is state manager so we saw an example of run command which is run this",
    "start": "1141140",
    "end": "1146820"
  },
  {
    "text": "particular command right now but what state manager does is to let you do that on a repeatable basis so the idea with",
    "start": "1146820",
    "end": "1153210"
  },
  {
    "text": "state manager is that with the come talk ument you can define the rules and the commands that you want to run on a",
    "start": "1153210",
    "end": "1159240"
  },
  {
    "text": "periodic basis and the idea here is with those pet commands you're going to be able to deal with configuration drift so",
    "start": "1159240",
    "end": "1166080"
  },
  {
    "text": "you can make sure that your instances and servers are in a defined state based on the rules that you define in that",
    "start": "1166080",
    "end": "1172440"
  },
  {
    "text": "state manager document so instead of having to say list ports let's say I required action to update the SSM agent",
    "start": "1172440",
    "end": "1181320"
  },
  {
    "text": "every 30 second every 30 minutes rather so that's an action that I could deliver to state manager and have that execute",
    "start": "1181320",
    "end": "1187350"
  },
  {
    "text": "every 30 minutes the second feature here is inventory and the role of inventory",
    "start": "1187350",
    "end": "1192840"
  },
  {
    "text": "is to collect software inventory of all my servers and present that in a query about fashion so I'm able to now query",
    "start": "1192840",
    "end": "1199679"
  },
  {
    "text": "inventory to know what are the instances of software versions and I can use that information to find out if I have any",
    "start": "1199679",
    "end": "1205710"
  },
  {
    "text": "server with a particular vulnerability example so let's look at some use cases state manager is all about keeping a",
    "start": "1205710",
    "end": "1212370"
  },
  {
    "text": "consistent configuration so and the second thing is making sure that configuration drift is avoided so an",
    "start": "1212370",
    "end": "1218910"
  },
  {
    "text": "example of that is let's say that I have a large set of auto scaling group of instances those instances come and go",
    "start": "1218910",
    "end": "1225389"
  },
  {
    "text": "but they happen to be tagged with the auto scaling group ID so that's what's done automatically I can set up a state",
    "start": "1225389",
    "end": "1230879"
  },
  {
    "text": "manager state action that says run that on all the servers that are belonging to this auto scaling group and perform an",
    "start": "1230879",
    "end": "1237329"
  },
  {
    "text": "action so for example make sure that this SSM agent is updated and state manager will now execute that on the",
    "start": "1237329",
    "end": "1243539"
  },
  {
    "text": "schedule and remove that configuration drift what are some of the use cases of",
    "start": "1243539",
    "end": "1249389"
  },
  {
    "text": "inventory so obviously you can discover and audit your software you're getting detailed information about all the",
    "start": "1249389",
    "end": "1254849"
  },
  {
    "text": "software versions and packages that are installed including windows hot fixes and you can use that information for",
    "start": "1254849",
    "end": "1260729"
  },
  {
    "text": "security and incident analysis so let's say that there's a high-priority CVE that comes out if you want to quickly",
    "start": "1260729",
    "end": "1267089"
  },
  {
    "text": "tell am i running any of those impacted vulnerable versions of software by going",
    "start": "1267089",
    "end": "1272309"
  },
  {
    "text": "to inventory you can type a query and quickly answer that what you can also do",
    "start": "1272309",
    "end": "1277320"
  },
  {
    "text": "is inventory we recently announced a new feature called resource Data Sync the idea here is that rather than having all",
    "start": "1277320",
    "end": "1283049"
  },
  {
    "text": "that data just in inventory you can also enable that data to be dumped into s3 and in certain format which lets it be",
    "start": "1283049",
    "end": "1290609"
  },
  {
    "text": "variable easily with tools like Amazon Athena as well as be visualized in a",
    "start": "1290609",
    "end": "1295769"
  },
  {
    "text": "tool like Amazon quick slide so here's an example of a quick site dashboard that queries inventory and shows that",
    "start": "1295769",
    "end": "1303179"
  },
  {
    "text": "inventory graphically so I can see here what are the count of instance IDs by publisher how many servers are from",
    "start": "1303179",
    "end": "1309959"
  },
  {
    "text": "different publishers and just below that you can see all of it it shows you a kind of heat map of what are the",
    "start": "1309959",
    "end": "1316109"
  },
  {
    "text": "versions of software that are installed so you can kind of slice and dice that data that is delivered by inventory in",
    "start": "1316109",
    "end": "1321659"
  },
  {
    "text": "any different way that you want so certainly you can use our console to query but you can now bring that in to",
    "start": "1321659",
    "end": "1327059"
  },
  {
    "text": "Athena and quick side to do further analysis that you want this is really really useful if you have hundreds of",
    "start": "1327059",
    "end": "1332759"
  },
  {
    "text": "thousands of servers and you want to kind of slice and dice them to find out what you need to do an operational work",
    "start": "1332759",
    "end": "1338329"
  },
  {
    "text": "let's do a walk-through now of state manager and inventory I'm going to go",
    "start": "1338329",
    "end": "1343919"
  },
  {
    "text": "back to my console now now you're not",
    "start": "1343919",
    "end": "1349709"
  },
  {
    "text": "seeing that yet okay there we go so I'm going to go and now look at state",
    "start": "1349709",
    "end": "1355620"
  },
  {
    "text": "manager and this shows me that there are a few states that are already running or",
    "start": "1355620",
    "end": "1361200"
  },
  {
    "text": "associations that are already present I'm going to walk you through how you would create such an association so let's click on create Association it",
    "start": "1361200",
    "end": "1367740"
  },
  {
    "text": "looks very similar to run commands right the first thing I need to do is back to the core concept I need to choose a document so let's take an example of",
    "start": "1367740",
    "end": "1374730"
  },
  {
    "text": "what I was talking about earlier let's say I want to make sure that the EC to the SSM agent is updated in all the",
    "start": "1374730",
    "end": "1381750"
  },
  {
    "text": "servers and kept up to date so we've created a document just for that which is called update SSM agent I choose that",
    "start": "1381750",
    "end": "1388380"
  },
  {
    "text": "predefined document I note that it can be run on both Windows and UNIX so it's a cross cross-platform document I need",
    "start": "1388380",
    "end": "1396059"
  },
  {
    "text": "to now choose instances by tag so I choose here to choose instances by tags so I'm going to choose instances that",
    "start": "1396059",
    "end": "1402269"
  },
  {
    "text": "are tracked tagged with environment equals production so and after that I need to set the schedule so here let's",
    "start": "1402269",
    "end": "1408510"
  },
  {
    "text": "say I want this to be run every 30 minutes and I said that as I said you and I create the Association so what",
    "start": "1408510",
    "end": "1414450"
  },
  {
    "text": "happens from now on is any instance that is tagged with environment production will now get this action every 30",
    "start": "1414450",
    "end": "1421529"
  },
  {
    "text": "minutes right and you can now see the result of applying that in the status here it takes a few seconds to actually",
    "start": "1421529",
    "end": "1428220"
  },
  {
    "text": "go scheduled and do that what I'm going to do is switch back and look at another one of these that I had created earlier",
    "start": "1428220",
    "end": "1434279"
  },
  {
    "text": "and see what has happened so you can see here that the Association was run on the",
    "start": "1434279",
    "end": "1441090"
  },
  {
    "text": "top of the hour two o'clock and it was successful on all these instances so these were the three say production",
    "start": "1441090",
    "end": "1446429"
  },
  {
    "text": "instances and I can click on that instance ID and switch on the association side and see the output of",
    "start": "1446429",
    "end": "1452490"
  },
  {
    "text": "that so again it says that one plugin which is the update SSM agent plug-in",
    "start": "1452490",
    "end": "1458880"
  },
  {
    "text": "was present and one was successful so this means that that particular update operation either was not necessary or",
    "start": "1458880",
    "end": "1465690"
  },
  {
    "text": "the package was updated and the SSM agent version is now at the latest so",
    "start": "1465690",
    "end": "1471389"
  },
  {
    "text": "that is state manager in a nutshell so the use case is really are depending",
    "start": "1471389",
    "end": "1477000"
  },
  {
    "text": "upon the document that you want to run so your document in this case was updating software it could also be",
    "start": "1477000",
    "end": "1482789"
  },
  {
    "text": "things like checking for a particular Fermi in a particular directory and undoing",
    "start": "1482789",
    "end": "1487860"
  },
  {
    "text": "any changes that could happen so think of that as something that continuously runs and under under undo any drift that",
    "start": "1487860",
    "end": "1494670"
  },
  {
    "text": "could happen in configuration let's look at inventory so back to manage instances",
    "start": "1494670",
    "end": "1500490"
  },
  {
    "text": "and here's a wizard way of setting up inventory so what happens really is",
    "start": "1500490",
    "end": "1507570"
  },
  {
    "text": "inventory is another type of SSM document which is scheduled to run so what really happens when I do the wizard",
    "start": "1507570",
    "end": "1514020"
  },
  {
    "text": "view is that the document is chosen to be the gather software inventory document and I can now choose which",
    "start": "1514020",
    "end": "1520530"
  },
  {
    "text": "instances to run it on so again let's go back to environment equals let's say in this case development what sort of",
    "start": "1520530",
    "end": "1526650"
  },
  {
    "text": "schedule do I want that inventory to be gathered on so for development servers where a lot of change happens I might",
    "start": "1526650",
    "end": "1531750"
  },
  {
    "text": "want to do this every 30 minutes production servers where I expect less change I might want to do this every day",
    "start": "1531750",
    "end": "1537000"
  },
  {
    "text": "for every week or a different shell you depend on what you want these are the parameters in",
    "start": "1537000",
    "end": "1542070"
  },
  {
    "text": "terms of what type of inventory I want to collect so I want to make sure that I want to collect information about",
    "start": "1542070",
    "end": "1547260"
  },
  {
    "text": "applications AWS components that AWS installs network configuration windows",
    "start": "1547260",
    "end": "1553440"
  },
  {
    "text": "updates for Windows servers detailed information about the instance and things like custom inventory so you have",
    "start": "1553440",
    "end": "1559110"
  },
  {
    "text": "the ability to also push custom information about your servers and have that be tracked by inventory when I",
    "start": "1559110",
    "end": "1565800"
  },
  {
    "text": "click on setup inventory what really happens is that there is a state manager association that now schedules that",
    "start": "1565800",
    "end": "1571680"
  },
  {
    "text": "gather inventory job to happen at the schedule that I said the end result of all of that is that when I click on the",
    "start": "1571680",
    "end": "1578970"
  },
  {
    "text": "inventory tab here in the console for manage instances I can see the inventory by filtering on application so for",
    "start": "1578970",
    "end": "1586170"
  },
  {
    "text": "example let us say that I want M interested in what are the apps that are installed on this particular Red Hat server this is a full list of all the",
    "start": "1586170",
    "end": "1592860"
  },
  {
    "text": "apps so I can see here the app I can see the version I can see the publisher when",
    "start": "1592860",
    "end": "1598440"
  },
  {
    "text": "was it installed architecture URLs and things like that so that metadata is what inventory' collects on my behalf I",
    "start": "1598440",
    "end": "1604290"
  },
  {
    "text": "can also now filter down and say okay let's say I'm interested in finding out",
    "start": "1604290",
    "end": "1610520"
  },
  {
    "text": "what sort of version of OpenSSL do I have so so that",
    "start": "1610520",
    "end": "1616660"
  },
  {
    "text": "shows me that there's these are the versions of OpenSSL that I have so it's 1.01 e is what's installed on this",
    "start": "1616660",
    "end": "1623770"
  },
  {
    "text": "particular Red Hat server right so what I'm doing here is I'm querying the inventory by selecting a particular",
    "start": "1623770",
    "end": "1629740"
  },
  {
    "text": "instance so that's great but I can also go out I can unclick this and I can go back and query the",
    "start": "1629740",
    "end": "1635410"
  },
  {
    "text": "inventory on an entire fleet basis so this is what I'm going to do now let's say I want to answer the question of",
    "start": "1635410",
    "end": "1640750"
  },
  {
    "text": "which are all the servers that have dotnet framework installed and that's the question we can also hear so I'm",
    "start": "1640750",
    "end": "1647650"
  },
  {
    "text": "saying what are the application names that begin with it shows me that there's",
    "start": "1647650",
    "end": "1657220"
  },
  {
    "text": "one server happens to be Visual Studio which is probably a dev box that has got net framework there what if we have a",
    "start": "1657220",
    "end": "1664150"
  },
  {
    "text": "rule in our enterprise that says we should not have any system with dotnet framework less than 4.6 as an example so",
    "start": "1664150",
    "end": "1670780"
  },
  {
    "text": "we can add another filter here that says application version less than 4.6",
    "start": "1670780",
    "end": "1679140"
  },
  {
    "text": "whether it's the same server so this is the one that we need to look at a little closely so when I come back here I can",
    "start": "1679140",
    "end": "1685210"
  },
  {
    "text": "do the same kind of filtering to see",
    "start": "1685210",
    "end": "1688980"
  },
  {
    "text": "and I can see that this particular server happened to have both 4.5 as well",
    "start": "1698650",
    "end": "1705799"
  },
  {
    "text": "as 4.6 not a big concern so we are probably using this for development but it is something that we can now take",
    "start": "1705799",
    "end": "1712040"
  },
  {
    "text": "action on if this was interesting to us another thing I want to show you is I'll",
    "start": "1712040",
    "end": "1717320"
  },
  {
    "text": "clear out these filters so what we've done is we are now querying what's the information what's the inventory",
    "start": "1717320",
    "end": "1722780"
  },
  {
    "text": "information right now right that's useful but what if I want you to know about the historical view so let's go",
    "start": "1722780",
    "end": "1728210"
  },
  {
    "text": "back to the Red Hat server and then take a look at on the right side it links",
    "start": "1728210",
    "end": "1734480"
  },
  {
    "text": "directly to a service called AWS config if you use AWS config for other AWS resources you know that it's a service",
    "start": "1734480",
    "end": "1741169"
  },
  {
    "text": "that tracks changes in your resources over time so now what happens is that inventory or software inventory also",
    "start": "1741169",
    "end": "1747380"
  },
  {
    "text": "becomes the first-class citizen of the AWS config in terms of how it's tracked so I'm going to click on the timeline",
    "start": "1747380",
    "end": "1753049"
  },
  {
    "text": "button and let the AWS config UI come up so what we are looking at here is the",
    "start": "1753049",
    "end": "1759230"
  },
  {
    "text": "inventory changes over time so you can see here that I launched this server on 23rd I made a few changes over time and",
    "start": "1759230",
    "end": "1765830"
  },
  {
    "text": "then this is the inventory view with the timeline view on the left let me click on something here which is five changes",
    "start": "1765830",
    "end": "1773240"
  },
  {
    "text": "that happen on 24th what were they so you can see here that what's happening is that I had installed the apache set",
    "start": "1773240",
    "end": "1780350"
  },
  {
    "text": "of program so there were a couple of packages that got installed httpd tools a PR util and you can see here that on",
    "start": "1780350",
    "end": "1787130"
  },
  {
    "text": "that particular day it went from nothing to that that means that a new package was installed I can also see patching",
    "start": "1787130",
    "end": "1793549"
  },
  {
    "text": "happening so when you have changes where a particular version changes let's take an example here you can see that in this",
    "start": "1793549",
    "end": "1799880"
  },
  {
    "text": "case the SSM agent was patched by my scheduled scripts to go from eight four",
    "start": "1799880",
    "end": "1805190"
  },
  {
    "text": "seven to eight seven nine right so this gives you a great timeline you and have can help you answer the question of not",
    "start": "1805190",
    "end": "1811220"
  },
  {
    "text": "just what's the version now what was it three weeks ago and what were the changes that happen because maybe",
    "start": "1811220",
    "end": "1816799"
  },
  {
    "text": "something has happened I'm troubleshooting something right so great way for you to do that",
    "start": "1816799",
    "end": "1823480"
  },
  {
    "text": "so that was in summary both looking at state manager and inventory so back to",
    "start": "1824490",
    "end": "1829860"
  },
  {
    "text": "the presentation we looked at how state manager can be used to schedule jobs to",
    "start": "1829860",
    "end": "1835860"
  },
  {
    "text": "keep your configuration drift in check as well as inventory can be used to collect information about all your servers and present that in a query",
    "start": "1835860",
    "end": "1842669"
  },
  {
    "text": "Abell fashion to more features there's maintenance window and patch manager so",
    "start": "1842669",
    "end": "1848700"
  },
  {
    "text": "we all have situations where we need to make changes to systems but we want to do this at periods of time when the when",
    "start": "1848700",
    "end": "1856950"
  },
  {
    "text": "the disruption is allowed so for example low low traffic periods because maybe we are patching systems and they need to be",
    "start": "1856950",
    "end": "1863460"
  },
  {
    "text": "rebooted so traditionally we've had to define these as maintenance windows we have run books we have run plans and",
    "start": "1863460",
    "end": "1871139"
  },
  {
    "text": "someone is going to wake up at night and do that work so maintenance window really lets you define those rules in",
    "start": "1871139",
    "end": "1877710"
  },
  {
    "text": "the service itself and schedule those tasks to happen at the time that you define right so potentially disruptive",
    "start": "1877710",
    "end": "1884519"
  },
  {
    "text": "actions can be scheduled to happen at the schedule that you define and patch manager is a service that now lets you",
    "start": "1884519",
    "end": "1890909"
  },
  {
    "text": "patch the operating system of your servers based on the rules that you define as well we will dive deeper into",
    "start": "1890909",
    "end": "1898110"
  },
  {
    "text": "both of those so some of the use cases maintenance media obviously you can use that to automatically perform actions",
    "start": "1898110",
    "end": "1904860"
  },
  {
    "text": "during the periods that you define it has an inherent concept of priority and a list of tasks so you can define high",
    "start": "1904860",
    "end": "1911999"
  },
  {
    "text": "priority tasks to be executed first and then low priority tasks you can define information like what's the duration of",
    "start": "1911999",
    "end": "1918990"
  },
  {
    "text": "the window and how long before the window closes should I stop executing",
    "start": "1918990",
    "end": "1923999"
  },
  {
    "text": "more tasks so you can incorporate a lot of those rules within the logic that you define with maintenance window and patch",
    "start": "1923999",
    "end": "1930929"
  },
  {
    "text": "manager obviously is used for patching and managing your operating system",
    "start": "1930929",
    "end": "1935970"
  },
  {
    "text": "versions so you can use that to manage a core concept called patch baseline a patch baseline is a set of rules in",
    "start": "1935970",
    "end": "1942990"
  },
  {
    "text": "terms of what patches supplied by operating system vendor are approved to apply to service automatically so you",
    "start": "1942990",
    "end": "1950249"
  },
  {
    "text": "can define you can select those patches by severity you can select those patches by classification and you can define",
    "start": "1950249",
    "end": "1956609"
  },
  {
    "text": "periods of time that the patch baseline should wait before applying a patch to the operating",
    "start": "1956609",
    "end": "1961920"
  },
  {
    "text": "system so an example of that would be when Windows or Microsoft issues critical updates wait for seven days",
    "start": "1961920",
    "end": "1969090"
  },
  {
    "text": "before applying it to my production servers but wait for zero days before applying it to my dev servers that's an",
    "start": "1969090",
    "end": "1975060"
  },
  {
    "text": "example of a patch baseline I'll show you some examples of patch baselines and you can always customize those as well",
    "start": "1975060",
    "end": "1981950"
  },
  {
    "text": "once you have liked those patches patch manager also lets you look at patch compliance so this helps you answer the",
    "start": "1981950",
    "end": "1988320"
  },
  {
    "text": "question of once I have defined the rules how are my servers doing as regards those rules have those patches being",
    "start": "1988320",
    "end": "1994590"
  },
  {
    "text": "applied and how do I stand in terms of which other patches that are supposed to be applied but are missing which are the",
    "start": "1994590",
    "end": "2001400"
  },
  {
    "text": "patches that should have been applied but failed to apply so patch compliance lets you query that and see that on the",
    "start": "2001400",
    "end": "2007370"
  },
  {
    "text": "console itself let's look at patch manager and go back to the demo now so",
    "start": "2007370",
    "end": "2018220"
  },
  {
    "text": "patch manager is found here I'm going to start by looking at patch baselines what",
    "start": "2018250",
    "end": "2025100"
  },
  {
    "text": "we've defined here are AWS provided patch baselines so these represent common logic the logic I talked about in",
    "start": "2025100",
    "end": "2031610"
  },
  {
    "text": "terms of taking Windows updates seven days later is represented by this predefined patch baseline called default",
    "start": "2031610",
    "end": "2038090"
  },
  {
    "text": "patch baseline so this default patch baseline actually applies to all Windows",
    "start": "2038090",
    "end": "2043340"
  },
  {
    "text": "servers if you don't do anything else so this is the default for Windows and I'm going to click on the approval rules and",
    "start": "2043340",
    "end": "2048889"
  },
  {
    "text": "you can see here it says that take all critical and security updates as long as",
    "start": "2048890",
    "end": "2053929"
  },
  {
    "text": "their severity is critical or important so this Riviere T comes from the operating system vendor and after that",
    "start": "2053929",
    "end": "2060169"
  },
  {
    "text": "wait for seven days before applying it onto the servers so this basically sets up that rule and we can now have this",
    "start": "2060169",
    "end": "2067639"
  },
  {
    "text": "patching execute on a maintenance window if we want let's take a look at a similar rule for Red Hat which is",
    "start": "2067640",
    "end": "2074120"
  },
  {
    "text": "another one of those pre-built rules it looks very similar it says take any security or bug fix as long as security",
    "start": "2074120",
    "end": "2081379"
  },
  {
    "text": "is critical or important and again apply it after seven days right so these are examples of rules that are pre-built now",
    "start": "2081380",
    "end": "2088879"
  },
  {
    "text": "you could go with these rules or you can also of course create your one rule so here's an example of a rule I created for Windows development which",
    "start": "2088880",
    "end": "2095579"
  },
  {
    "text": "says I want to take all security updates and all critical updates no matter what the severity and I don't want to wait",
    "start": "2095579",
    "end": "2101130"
  },
  {
    "text": "any time before approving so this gives me kind of much more fast following kind of idea the idea here is that I can",
    "start": "2101130",
    "end": "2106920"
  },
  {
    "text": "possibly test these patches in dev before deciding that they go get approved to be applied in prod rules",
    "start": "2106920",
    "end": "2113400"
  },
  {
    "text": "also have the ability to do whitelist and back-lit blacklist of patches so patches that match these rules but you",
    "start": "2113400",
    "end": "2119220"
  },
  {
    "text": "want to blacklist those so they're never installed because maybe they conflict with something else that you're using you can blacklist those and they'll",
    "start": "2119220",
    "end": "2125099"
  },
  {
    "text": "never be installed so those rules are represented in patch exceptions I have not defined any right now but you can",
    "start": "2125099",
    "end": "2130890"
  },
  {
    "text": "define both approved and rejected patches which are never going to be installed even if they are proved by the",
    "start": "2130890",
    "end": "2136470"
  },
  {
    "text": "rules so once we define a patch baseline we now need to schedule the patching and",
    "start": "2136470",
    "end": "2141690"
  },
  {
    "text": "that can be done by running a maintenance window so let's go back and look at maintenance windows and see how",
    "start": "2141690",
    "end": "2148140"
  },
  {
    "text": "we set that up so when we create a maintenance window I'm required to",
    "start": "2148140",
    "end": "2154140"
  },
  {
    "text": "provide a name here so",
    "start": "2154140",
    "end": "2157278"
  },
  {
    "text": "I'm going to sue choose unregistered target so any target that matches the criteria defined below will be a",
    "start": "2161180",
    "end": "2167420"
  },
  {
    "text": "candidate for maintenance window and I'm required now to to choose a schedule so I can choose the schedule to",
    "start": "2167420",
    "end": "2172789"
  },
  {
    "text": "be every 30 minutes or I can say Sunday mornings at 1:00 a.m. as an example so let me go ahead and do that as an",
    "start": "2172789",
    "end": "2178460"
  },
  {
    "text": "example so this is Sunday morning 1:00 a.m. UTC every every every week the",
    "start": "2178460",
    "end": "2185269"
  },
  {
    "text": "duration of the patch maintenance window is 4 hours what I wanted to stop executing things of the 3rd hour",
    "start": "2185269",
    "end": "2190849"
  },
  {
    "text": "so one hour before the maintenance window closes and that's all I need to do if to create a maintenance window",
    "start": "2190849",
    "end": "2196789"
  },
  {
    "text": "just define the schedule right and the properties about that once I've defined",
    "start": "2196789",
    "end": "2202220"
  },
  {
    "text": "that now I need to tell patch manager what exactly to do and I do that by deciding the tasks so there's one task",
    "start": "2202220",
    "end": "2211789"
  },
  {
    "text": "that we have which is called apply or run patch baseline out here and the idea",
    "start": "2211789",
    "end": "2223279"
  },
  {
    "text": "with this one is the moment I run this predefined document what happens is that the patch baselines that are defined for",
    "start": "2223279",
    "end": "2228829"
  },
  {
    "text": "those operating systems those are executed those rules are evaluated and the operating system is patched to the",
    "start": "2228829",
    "end": "2234589"
  },
  {
    "text": "level that are approved by the rules right so this predefined document does that so this is what I want to be done I",
    "start": "2234589",
    "end": "2240739"
  },
  {
    "text": "choose that I say task priority is 1 I will choose the selecting registered",
    "start": "2240739",
    "end": "2247400"
  },
  {
    "text": "target groups so I have not done that yet but let's say that I had a set of target groups I could choose specific",
    "start": "2247400",
    "end": "2253099"
  },
  {
    "text": "instances and have that run here I can also choose based on the document to scan so this simply scans for patches",
    "start": "2253099",
    "end": "2260599"
  },
  {
    "text": "that should be applied or I can choose install which actually installs those patches so I can register that task and",
    "start": "2260599",
    "end": "2266980"
  },
  {
    "text": "I need to choose the role so this is a role that patch manager uses on my",
    "start": "2266980",
    "end": "2272539"
  },
  {
    "text": "behalf to actually run those patching commands so there is a maintenance window role that I have and I choose to",
    "start": "2272539",
    "end": "2280339"
  },
  {
    "text": "execute on to at in parallel and stop after one error right there same kind of semantics a state manager and I",
    "start": "2280339",
    "end": "2287029"
  },
  {
    "text": "registered the tasks so I think I skipped a step so let me go back and define the targets so",
    "start": "2287029",
    "end": "2293029"
  },
  {
    "text": "you define which servers it should run on I do that by using the tags so this",
    "start": "2293029",
    "end": "2301130"
  },
  {
    "text": "runs on development servers and I've set the task here to say run the patching",
    "start": "2301130",
    "end": "2306559"
  },
  {
    "text": "task and I'm done",
    "start": "2306559",
    "end": "2309369"
  },
  {
    "text": "once I've registered the task now maintenance window is going to wake up on Sunday at 1:00 a.m. and start executing the tasks I defined which is",
    "start": "2326070",
    "end": "2332490"
  },
  {
    "text": "run patch baselines and runs patch baselines is now going to discover the rules that I've set up for that",
    "start": "2332490",
    "end": "2338340"
  },
  {
    "text": "particular patch baseline for that particular operating system and start executing those particular patching",
    "start": "2338340",
    "end": "2344070"
  },
  {
    "text": "operations I can come back to state to be managed instances and take a look at",
    "start": "2344070",
    "end": "2351990"
  },
  {
    "text": "the patching actions that have taken place so let's go back to the Windows Server here and there's a patch tab here",
    "start": "2351990",
    "end": "2358920"
  },
  {
    "text": "that shows me what are the patches that have been installed so these are 45 patches that were installed by patch",
    "start": "2358920",
    "end": "2364560"
  },
  {
    "text": "manager some of those were installed ahead of time by they were already part",
    "start": "2364560",
    "end": "2370320"
  },
  {
    "text": "of the ami and some of them were installed by the patch manager based on the severity so if i scope down to",
    "start": "2370320",
    "end": "2377850"
  },
  {
    "text": "severity i can see here that there was this july roll-up patch update which was",
    "start": "2377850",
    "end": "2383160"
  },
  {
    "text": "applied and installed on July 22nd and this was because it was selected by the rules that I had defined if I do the",
    "start": "2383160",
    "end": "2389940"
  },
  {
    "text": "same thing with red hat I can see again that there were two critical patches that patch manager decided needed to be",
    "start": "2389940",
    "end": "2396450"
  },
  {
    "text": "installed and those were installed the status was installed here says that these patches were installed on the",
    "start": "2396450",
    "end": "2401790"
  },
  {
    "text": "server there's another state called missing which is basically means that those patches are not present on the",
    "start": "2401790",
    "end": "2407460"
  },
  {
    "text": "server so this is on a server by server view I want to look at compliance across my field across my fleet I can come to",
    "start": "2407460",
    "end": "2415200"
  },
  {
    "text": "class compliance and I can go to instances here choose all the instances that I have and see how they stack up in",
    "start": "2415200",
    "end": "2421590"
  },
  {
    "text": "terms of the rules that I have defined I'm in a good place here so all my five instances are up to date there are no",
    "start": "2421590",
    "end": "2427350"
  },
  {
    "text": "missing updates there are no servers that are in error state what that means is patch manager is running and all the",
    "start": "2427350",
    "end": "2433350"
  },
  {
    "text": "instances in terms of the rules that have defined have been patched up to the level that I want right and I can click",
    "start": "2433350",
    "end": "2439950"
  },
  {
    "text": "on these instances see the output of all of those actions to see what patching actions was complete completed so to",
    "start": "2439950",
    "end": "2447300"
  },
  {
    "text": "summarize what we've done here is we've used patch manager to define patch baselines we've also used maintenance",
    "start": "2447300",
    "end": "2453540"
  },
  {
    "text": "window to execute those patches on a schedule that we defined in this case once a week on Sunday night",
    "start": "2453540",
    "end": "2459720"
  },
  {
    "text": "or Sunday mornings but we could have chosen a much more frequent execution if we wanted to do that alright so we",
    "start": "2459720",
    "end": "2467250"
  },
  {
    "text": "switch back now to be presentation and talk about one more feature which is the final capability that comes with Systems",
    "start": "2467250",
    "end": "2474690"
  },
  {
    "text": "Manager two more capabilities we've talked about so far actions and changes",
    "start": "2474690",
    "end": "2480090"
  },
  {
    "text": "that are happening to running instances so we ran run command on a set of running instances automation takes that",
    "start": "2480090",
    "end": "2486300"
  },
  {
    "text": "problem to the next step which is updating and managing Amazon machine images so we are we can use automation",
    "start": "2486300",
    "end": "2493380"
  },
  {
    "text": "to make sure that Amazon machine images are up-to-date from a passing perspective as well as up-to-date from a",
    "start": "2493380",
    "end": "2498600"
  },
  {
    "text": "software installation perspective a common task we see customers do is to bake a common set of security or",
    "start": "2498600",
    "end": "2505080"
  },
  {
    "text": "monitoring agents into their a Mis but over time those agent versions change and when you want to patch the operating",
    "start": "2505080",
    "end": "2511920"
  },
  {
    "text": "system you can combine both of those actions in automation so the way automation works is you define all your",
    "start": "2511920",
    "end": "2518240"
  },
  {
    "text": "actions that you want to take starting from an ami launching an ec2 instance",
    "start": "2518240",
    "end": "2523550"
  },
  {
    "text": "performing actions on that ec2 instance and then finally taking an image of that ec2 instance that entire step can be",
    "start": "2523550",
    "end": "2530910"
  },
  {
    "text": "represented in one automation document and executed periodically if you want or up on demand if you want once you have",
    "start": "2530910",
    "end": "2538410"
  },
  {
    "text": "this capability what are some of the use cases obviously you can use that to maintain and update your Amazon machine images you can also include an",
    "start": "2538410",
    "end": "2546510"
  },
  {
    "text": "additional application so your own custom code you're monitoring agents your security agents can be bundled into",
    "start": "2546510",
    "end": "2553560"
  },
  {
    "text": "your a.m. eyes automatically instead of manually executing automation you can",
    "start": "2553560",
    "end": "2559620"
  },
  {
    "text": "integrate that with your CI CD pipeline so imagine a use case where you have your application being built by your CI",
    "start": "2559620",
    "end": "2566100"
  },
  {
    "text": "CD pipeline the output of that is a binary version of your latest application code your requirement is to",
    "start": "2566100",
    "end": "2572190"
  },
  {
    "text": "burn that into an AMI what you could do is your final step in your build process could trigger the automation flow which",
    "start": "2572190",
    "end": "2578880"
  },
  {
    "text": "picks up that latest package install this on any c2 instance takes an image of that and now you have a Amazon",
    "start": "2578880",
    "end": "2585690"
  },
  {
    "text": "machine image with the latest version of your code and you can use that to now deploy that to additional servers or you",
    "start": "2585690",
    "end": "2592080"
  },
  {
    "text": "can update your auto scaling group to deploy that when new servers are needed as an example one of the ways",
    "start": "2592080",
    "end": "2598380"
  },
  {
    "text": "you can extend automation is through Amazon lambda so automation steps can",
    "start": "2598380",
    "end": "2603420"
  },
  {
    "text": "also have a call out to a lambda function where you can do arbitrary actions so let's say that at the end of",
    "start": "2603420",
    "end": "2608490"
  },
  {
    "text": "our process we want to take our Amazon machine image update all the auto scaling groups associated with that and",
    "start": "2608490",
    "end": "2613820"
  },
  {
    "text": "deploy it in such a way that a rolling update happens that's an action that you could script in a lambda function as one",
    "start": "2613820",
    "end": "2620640"
  },
  {
    "text": "of the steps in your automation workflow the last feature is parameter store and",
    "start": "2620640",
    "end": "2626970"
  },
  {
    "text": "this is the service that can be used across all the components we just talked about as well as with other services so",
    "start": "2626970",
    "end": "2633180"
  },
  {
    "text": "parameter storage the base of it solves the problem of securely storing and sharing information and that could be",
    "start": "2633180",
    "end": "2640410"
  },
  {
    "text": "information that secrets across your fleet of servers so rather than having things like database passwords or",
    "start": "2640410",
    "end": "2647040"
  },
  {
    "text": "passwords to other systems embedded in configuration files where they can be lost or inadvertently committed to",
    "start": "2647040",
    "end": "2653640"
  },
  {
    "text": "public repositories what you can do instead is use parameter store to store those parameters parameters can be",
    "start": "2653640",
    "end": "2659760"
  },
  {
    "text": "simple key value pairs or key and string pairs or encrypted strings and encrypted",
    "start": "2659760",
    "end": "2664950"
  },
  {
    "text": "strings are are encrypted using key management service so if you're familiar with kms or key management service it's",
    "start": "2664950",
    "end": "2671550"
  },
  {
    "text": "a service that lets you use store keys and use them to encrypt and decrypt your",
    "start": "2671550",
    "end": "2677130"
  },
  {
    "text": "secrets so parameter store under the hood uses that to encrypt and decrypt those encrypted string parameters you",
    "start": "2677130",
    "end": "2685619"
  },
  {
    "text": "can reference those parameters in documents so you can use a parameter a kind of markup to look up SSM parameters",
    "start": "2685619",
    "end": "2692670"
  },
  {
    "text": "and have that value be retrieved from the parameter store and used as a value",
    "start": "2692670",
    "end": "2697800"
  },
  {
    "text": "in any of your documents you can go further and integrate that with other services so certain other services like",
    "start": "2697800",
    "end": "2704030"
  },
  {
    "text": "ECS or it obvious lambda have native integration with parameters store and",
    "start": "2704030",
    "end": "2709230"
  },
  {
    "text": "they can pull parameters and read them into the function if you want if you are just writing a script you can also do a",
    "start": "2709230",
    "end": "2715230"
  },
  {
    "text": "direct get parameter API call to get a parameter and decrypt it and use it so",
    "start": "2715230",
    "end": "2720330"
  },
  {
    "text": "this solves the problem of not having to store secrets you don't want to store your secrets in a place where they can",
    "start": "2720330",
    "end": "2726090"
  },
  {
    "text": "be lost instead store it in parameter store and you can now use API to get at it the",
    "start": "2726090",
    "end": "2731760"
  },
  {
    "text": "beauty with that is every API again goes to cloud trail so you know exactly who made a parameter call request who was",
    "start": "2731760",
    "end": "2738780"
  },
  {
    "text": "accessing a parameter and at what time right so you have the ability to do that you also have the ability to scope down",
    "start": "2738780",
    "end": "2744360"
  },
  {
    "text": "that because every call is going to be checked against iam policies you can decide that these users are these ec2",
    "start": "2744360",
    "end": "2751230"
  },
  {
    "text": "instances with iam roles by EC to have access to those parameters a very",
    "start": "2751230",
    "end": "2757350"
  },
  {
    "text": "classic use case is if you're not using directory services but you want to join directly to Active Directory in order to",
    "start": "2757350",
    "end": "2763620"
  },
  {
    "text": "do a domain join you need the domain admin password which is a sensitive piece of information it's all powerful you want to secure that so a parameter",
    "start": "2763620",
    "end": "2770670"
  },
  {
    "text": "store is a great place to put that parameter and you can pull that value of the parameter on the sly use that to",
    "start": "2770670",
    "end": "2776220"
  },
  {
    "text": "join the domain and forget that and it won't be persisted anywhere and you can have full audit on who access that",
    "start": "2776220",
    "end": "2781860"
  },
  {
    "text": "parameter and what it was used for here's an example of using parameter",
    "start": "2781860",
    "end": "2787740"
  },
  {
    "text": "stores with another service called code deploy so on the left here we have that example of using database password which",
    "start": "2787740",
    "end": "2794400"
  },
  {
    "text": "is ABCD in this example and that is stored in parameter store and we have a fleet of ec2 instances that are",
    "start": "2794400",
    "end": "2800400"
  },
  {
    "text": "configured and deployed code is being deployed using AWS code deploy the",
    "start": "2800400",
    "end": "2805710"
  },
  {
    "text": "example here is that what we have in the deployment is an app spec file which defines pre and post steps so one of the",
    "start": "2805710",
    "end": "2812190"
  },
  {
    "text": "steps in that file is to do a get parameter call and decrypt the value of that parameter and get the password ABCD",
    "start": "2812190",
    "end": "2818910"
  },
  {
    "text": "and use that to configure my connection string and forget that from then on the way that authentication happens is by an",
    "start": "2818910",
    "end": "2826050"
  },
  {
    "text": "easy to roll with specific permissions so we are giving it permissions to do just those two particular calls get",
    "start": "2826050",
    "end": "2832830"
  },
  {
    "text": "parameter and decrypt write because we need to decrypt the encrypted parameter so you can define exactly who is able to",
    "start": "2832830",
    "end": "2839220"
  },
  {
    "text": "get that parameter and they have to have the correct internet credentials to be able to do that so we've talked about",
    "start": "2839220",
    "end": "2845910"
  },
  {
    "text": "seven features or seven capabilities of Systems Manager today let's look at how it can be integrated with other AWS",
    "start": "2845910",
    "end": "2853080"
  },
  {
    "text": "services so these are some examples to do that the first service is cloud watch",
    "start": "2853080",
    "end": "2858990"
  },
  {
    "text": "events so many of the capabilities we talked about like run command parameter store",
    "start": "2858990",
    "end": "2864990"
  },
  {
    "text": "can be sources of events so if you've used cloud work events it's a service",
    "start": "2864990",
    "end": "2870210"
  },
  {
    "text": "that lets you take events insert from different sources an example would be easy to events systems going up systems",
    "start": "2870210",
    "end": "2876870"
  },
  {
    "text": "going down and why are those events up to targets where you can react to those events so an example of a target will be",
    "start": "2876870",
    "end": "2883590"
  },
  {
    "text": "a lambda function that is triggered upon a launch of any c2 instance which does",
    "start": "2883590",
    "end": "2888900"
  },
  {
    "text": "something to make that ec2 instance ready for use you can use the same philosophy with events coming from",
    "start": "2888900",
    "end": "2895260"
  },
  {
    "text": "Systems Manager so an example of that would be you take an event source let's say the output of run command or the",
    "start": "2895260",
    "end": "2901410"
  },
  {
    "text": "state the fact that run command has completed and you can now type that event to something like a lambda",
    "start": "2901410",
    "end": "2907260"
  },
  {
    "text": "function to do some work so that's the Systems Manager as a source idea Systems",
    "start": "2907260",
    "end": "2912330"
  },
  {
    "text": "Manager can also be a target so right now you can run commands as a result of events coming into your cloud watch",
    "start": "2912330",
    "end": "2918780"
  },
  {
    "text": "events so let's say that same situation an ec2 event happened you want to react to that by running a run command you can",
    "start": "2918780",
    "end": "2925530"
  },
  {
    "text": "set that up directly in cloud watch events and have that happen let's take a look look at a concrete example here's",
    "start": "2925530",
    "end": "2932370"
  },
  {
    "text": "an integration with lambda so what I am doing here is I set up a cloud watch event rule to trigger a lambda function",
    "start": "2932370",
    "end": "2938640"
  },
  {
    "text": "so let's just walk through a little bit of this lambda function what it does is it retrieves the event parameter it",
    "start": "2938640",
    "end": "2945650"
  },
  {
    "text": "lists the output of the command that this event pertain to so basically calls",
    "start": "2945650",
    "end": "2950970"
  },
  {
    "text": "the run command list output command and then it writes the output right into cloud watch logs so the philosophy here",
    "start": "2950970",
    "end": "2957630"
  },
  {
    "text": "is rather than having to go through each command in the console I want to look at all the output in cloud watch logs and",
    "start": "2957630",
    "end": "2964710"
  },
  {
    "text": "the way you set that up if you set a rule which defines the source event which is basically Systems Manager run",
    "start": "2964710",
    "end": "2971580"
  },
  {
    "text": "command and then you set up the statuses on which it should be triggered so in this case it's a status change",
    "start": "2971580",
    "end": "2977460"
  },
  {
    "text": "notification what that means is run command status has changed from say pending to completed or pending to",
    "start": "2977460",
    "end": "2983100"
  },
  {
    "text": "failed and we set up the outputs so that goes to the function that we define SSM",
    "start": "2983100",
    "end": "2989010"
  },
  {
    "text": "in this case email output but you could also have it as cloud watch output and that why is it all so that every time run command state",
    "start": "2989010",
    "end": "2996150"
  },
  {
    "text": "changes that function is going to be invoked and the end result looks like this so you have all the output going to",
    "start": "2996150",
    "end": "3003200"
  },
  {
    "text": "cloud watch logs so this inter Eliza's all the output from all the run commands that have taken place in one place that",
    "start": "3003200",
    "end": "3008960"
  },
  {
    "text": "I can now query and I can now have additional things like I can set up metrics to alert me when many many run",
    "start": "3008960",
    "end": "3015740"
  },
  {
    "text": "commands are feeling so if the number of failures exceeds say five I can now have",
    "start": "3015740",
    "end": "3020839"
  },
  {
    "text": "an alert and take a look at that so that's an example of taking output from systems manager run command passing it",
    "start": "3020839",
    "end": "3028430"
  },
  {
    "text": "through cloud watch events sending it to lambda and finally having it end up in cloud watch logs here's another example",
    "start": "3028430",
    "end": "3035990"
  },
  {
    "text": "so a common case is that we want to scan our environments for common vulnerabilities and best practices so",
    "start": "3035990",
    "end": "3042619"
  },
  {
    "text": "Amazon inspector is a service that does that and the way it works is that you run Amazon inspected on a fleet of",
    "start": "3042619",
    "end": "3048440"
  },
  {
    "text": "servers and it produces findings those findings are things like I discovered a",
    "start": "3048440",
    "end": "3053660"
  },
  {
    "text": "vulnerable version of a software package and this is the CVE or common vulnerabilities and exploits",
    "start": "3053660",
    "end": "3059059"
  },
  {
    "text": "ID for that particular issue those findings can now be delivered through to",
    "start": "3059059",
    "end": "3064970"
  },
  {
    "text": "SNS topics and you can have a lambda function that is triggered by that which in a closed loop goes back and run the",
    "start": "3064970",
    "end": "3071630"
  },
  {
    "text": "command or runs patch to go and patch that particular vulnerability that was found right so instead of having to work",
    "start": "3071630",
    "end": "3078170"
  },
  {
    "text": "with vulnerability software that produced lots and lots of PDF documents having lots of meetings to decide what",
    "start": "3078170",
    "end": "3083420"
  },
  {
    "text": "to do about it you could actually script the entire process and have that closed loop where a vulnerability is found and",
    "start": "3083420",
    "end": "3090230"
  },
  {
    "text": "patched almost immediately right and this can be used for operating systems it can be used for application patching",
    "start": "3090230",
    "end": "3097400"
  },
  {
    "text": "and other best practices findings that Amazon inspector surfaces so we've been",
    "start": "3097400",
    "end": "3104510"
  },
  {
    "text": "working really hard on systems manager so this is a list of recent launches so Systems Manager announced the agent",
    "start": "3104510",
    "end": "3111440"
  },
  {
    "text": "announced support for SUSE Linux in the past few weeks we have hierarchy tagging",
    "start": "3111440",
    "end": "3116660"
  },
  {
    "text": "and notification support for parameter store so what that lets you do is basically organize your parameters in a",
    "start": "3116660",
    "end": "3122930"
  },
  {
    "text": "tree base structure so rather than having a flag namespace it a hierarchical tree like namespace you",
    "start": "3122930",
    "end": "3129950"
  },
  {
    "text": "can use that to organize your parameters together so let's say that back to that DB example you might want to have DB",
    "start": "3129950",
    "end": "3135620"
  },
  {
    "text": "parameters for a parameter for dev and a parameter for prod so other than having some sort of naming convention you can",
    "start": "3135620",
    "end": "3141650"
  },
  {
    "text": "actually have a path that says prod /bb password and dev slash DB password as an",
    "start": "3141650",
    "end": "3147500"
  },
  {
    "text": "example notification support is really cool this lets you track parameter life",
    "start": "3147500",
    "end": "3153350"
  },
  {
    "text": "cycles so back to the DB example let's say that that DB password has updated now we have a problem on our hands",
    "start": "3153350",
    "end": "3159770"
  },
  {
    "text": "because now we need to update all the servers that were using that parameter so what we can do is we can have a",
    "start": "3159770",
    "end": "3165470"
  },
  {
    "text": "notification on the change of that DB parameter value and trigger a function such as a lambda function to go and",
    "start": "3165470",
    "end": "3171860"
  },
  {
    "text": "update all the servers to let them restart or reconnect to the database pulling down the new value of the",
    "start": "3171860",
    "end": "3178040"
  },
  {
    "text": "parameter right so again you don't have to manually do any of that we can set up a closed-loop system to do that we",
    "start": "3178040",
    "end": "3184880"
  },
  {
    "text": "announce Clause cross-platform and multi-step document support so we saw examples of that where a single document",
    "start": "3184880",
    "end": "3190760"
  },
  {
    "text": "such as that lists open ports document we saw can be used for both Windows and Linux with variants of the commands for",
    "start": "3190760",
    "end": "3197420"
  },
  {
    "text": "both of them this is a big one here patch manager supports the next patching this came out about two and a half weeks",
    "start": "3197420",
    "end": "3203990"
  },
  {
    "text": "ago so we're really proud of that this was a very common task and now what you can do is you can use patch manager as",
    "start": "3203990",
    "end": "3209360"
  },
  {
    "text": "we saw and compliance as a single pane of glass to look at patching of both Windows and Linux servers both in AWS as",
    "start": "3209360",
    "end": "3216980"
  },
  {
    "text": "well as on-premises and the final feature was syncing the inventory data we saw an example of quick site",
    "start": "3216980",
    "end": "3224150"
  },
  {
    "text": "analyzing that data sitting in s3 and you can kind of think of many different use cases the moment you have the data",
    "start": "3224150",
    "end": "3229940"
  },
  {
    "text": "in a queryable form you can actually represent your inventory query in sequel and basically it's up to you to query",
    "start": "3229940",
    "end": "3236720"
  },
  {
    "text": "that join that with other information and produce your reports as we saw so we",
    "start": "3236720",
    "end": "3242180"
  },
  {
    "text": "continue to innovate and we continue to listen to your feedback so if you have used Susan manager or if you have some",
    "start": "3242180",
    "end": "3247550"
  },
  {
    "text": "interesting use cases please please feel free to each other we really keen to hear that here are some customers that",
    "start": "3247550",
    "end": "3254300"
  },
  {
    "text": "are using Systems Manager obviously this is not an exhaustive list these are some customers who are public about have",
    "start": "3254300",
    "end": "3260670"
  },
  {
    "text": "use that so if you have any interesting use cases do see me after this we are always looking for use cases and areas",
    "start": "3260670",
    "end": "3268049"
  },
  {
    "text": "in which we can improve so to summarize where is SSM a Systems Manager doesn't have its own console",
    "start": "3268049",
    "end": "3273780"
  },
  {
    "text": "it's found in the ec2 console like I showed you and so do you remember that and in summary why would you use Systems",
    "start": "3273780",
    "end": "3280470"
  },
  {
    "text": "Manager it's about managing hybrid infrastructure it's cross-platform Windows and Linux it's inherently",
    "start": "3280470",
    "end": "3286740"
  },
  {
    "text": "scalable it's secure because it's protected by both I am policies as well",
    "start": "3286740",
    "end": "3291750"
  },
  {
    "text": "as logging in cloud cloud trail it makes it easy for you to write automation we saw examples of that and the end result",
    "start": "3291750",
    "end": "3298680"
  },
  {
    "text": "the follow that is reduced total cost of ownership you don't pay for the usage of the service itself and through",
    "start": "3298680",
    "end": "3305010"
  },
  {
    "text": "automation the idea is that you can use reduce the amount of manual work I also",
    "start": "3305010",
    "end": "3310380"
  },
  {
    "text": "put a link here to the management tools blog where we have several articles some of the articles I pointed out earlier",
    "start": "3310380",
    "end": "3315660"
  },
  {
    "text": "they appear in the management tool blogs so keep a look at that and let us know your interesting use cases so I hope",
    "start": "3315660",
    "end": "3322589"
  },
  {
    "text": "this was useful thank you very much and I will hang around here for some questions",
    "start": "3322589",
    "end": "3328700"
  }
]