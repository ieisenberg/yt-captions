[
  {
    "text": "Hello, my name is Lucas Ferrari,",
    "start": "5666",
    "end": "7932"
  },
  {
    "text": "I am a Database Specialist\nsolutions architect.",
    "start": "7933",
    "end": "10633"
  },
  {
    "text": "At WS.",
    "start": "10633",
    "end": "12266"
  },
  {
    "text": "I help customers to implement\nand design database solutions",
    "start": "12466",
    "end": "15299"
  },
  {
    "text": "in the cloud.",
    "start": "15300",
    "end": "17633"
  },
  {
    "text": "Today we will talk about\nfine-grained access control",
    "start": "17733",
    "end": "21100"
  },
  {
    "text": "in DynamoDB,\nusing IAM policy",
    "start": "21100",
    "end": "24600"
  },
  {
    "text": "conditions.",
    "start": "24600",
    "end": "26833"
  },
  {
    "text": "At AWS we have the culture\nthat security is job zero",
    "start": "27900",
    "end": "32099"
  },
  {
    "text": "and it means it's more important\nthan any priority number one.",
    "start": "32466",
    "end": "36333"
  },
  {
    "text": "DynamoDB supports identity-based policies,",
    "start": "37500",
    "end": "41400"
  },
  {
    "text": "referred to as policies and permissions in IAM\nfor fine-grained access control.",
    "start": "41400",
    "end": "45066"
  },
  {
    "text": "Let's understand\nwhat options we have to implement",
    "start": "45966",
    "end": "48666"
  },
  {
    "text": "fine-grained access control\nin the DynamoDB model.",
    "start": "48666",
    "end": "52933"
  },
  {
    "text": "Unlike other services like S3,\nfor example,",
    "start": "53700",
    "end": "57100"
  },
  {
    "text": "DynamoDB does not support\nresource-based policies.",
    "start": "57500",
    "end": "61400"
  },
  {
    "text": "Let's do a review.",
    "start": "62400",
    "end": "64066"
  },
  {
    "text": "An IAM policy,\nhas the following components.",
    "start": "64066",
    "end": "66800"
  },
  {
    "text": "The first is the Amazon \nresource name, ARN",
    "start": "67733",
    "end": "70600"
  },
  {
    "text": "to identify the resource\nto which the policy applies.",
    "start": "70966",
    "end": "74033"
  },
  {
    "text": "The second is the Action,\nan action to identify operations",
    "start": "75000",
    "end": "78233"
  },
  {
    "text": "that you want to allow or deny.",
    "start": "78233",
    "end": "80466"
  },
  {
    "text": "The third component is the effect,",
    "start": "81366",
    "end": "83632"
  },
  {
    "text": "which can allow\nor deny the specified action.",
    "start": "83633",
    "end": "86633"
  },
  {
    "text": "The last is the principal,\nwhich identifies the user",
    "start": "87600",
    "end": "90299"
  },
  {
    "text": "or role\nto which the policy is attached.",
    "start": "90300",
    "end": "93066"
  },
  {
    "text": "With this context in mind, let's see",
    "start": "93933",
    "end": "96100"
  },
  {
    "text": "an example of IAM policy.",
    "start": "96100",
    "end": "100000"
  },
  {
    "text": "This policy grants permissions for\nall actions in DynamoDB on a table.",
    "start": "100800",
    "end": "105233"
  },
  {
    "text": "When this policy is applied\nto a user or role.",
    "start": "105900",
    "end": "108666"
  },
  {
    "text": "It allows executing\nall DynamoDB actions on the table",
    "start": "109333",
    "end": "112533"
  },
  {
    "text": "with the specified ARN name.",
    "start": "112533",
    "end": "114632"
  },
  {
    "text": "You can create a policy like this\nin seconds,",
    "start": "115533",
    "end": "117766"
  },
  {
    "text": "but understand that a policy\nwith excessive permissions like this",
    "start": "118100",
    "end": "121666"
  },
  {
    "text": "is a security threat,\nas it allows many actions",
    "start": "122166",
    "end": "125966"
  },
  {
    "text": "that a normal user or role\nmight not need.",
    "start": "125966",
    "end": "128766"
  },
  {
    "text": "Can you guess what",
    "start": "130066",
    "end": "131200"
  },
  {
    "text": "means the action DynamoDB:*,",
    "start": "131200",
    "end": "134433"
  },
  {
    "text": "or what actions are allowed\nwith this policy?",
    "start": "135000",
    "end": "138333"
  },
  {
    "text": "This policy allows more than 60 actions\non a given table in DynamoDB.",
    "start": "140133",
    "end": "144566"
  },
  {
    "text": "This includes actions like delete item,\ndelete backup,",
    "start": "145366",
    "end": "148900"
  },
  {
    "text": "delete table replica\nor even delete the table.",
    "start": "149166",
    "end": "152433"
  },
  {
    "text": "Would you like to have a policy\nlike this",
    "start": "153466",
    "end": "155700"
  },
  {
    "text": "in your production application,\nwhere all you would need",
    "start": "155700",
    "end": "159366"
  },
  {
    "text": "is access\nto run queries on your table?",
    "start": "159366",
    "end": "162599"
  },
  {
    "text": "Definitely no, \nca we can improve this?",
    "start": "163600",
    "end": "166333"
  },
  {
    "text": "For sure.",
    "start": "166900",
    "end": "168599"
  },
  {
    "text": "Let's take a look\nat this other example policy.",
    "start": "168933",
    "end": "171765"
  },
  {
    "text": "This policy\ngrants read-only permission",
    "start": "172300",
    "end": "175600"
  },
  {
    "text": "on items of a DynamoDB table.",
    "start": "175600",
    "end": "177833"
  },
  {
    "text": "This is achieved by explicitly including\nfive actions within actions.",
    "start": "178500",
    "end": "183666"
  },
  {
    "text": "In this example,",
    "start": "183733",
    "end": "185066"
  },
  {
    "text": "when this policy is applied\nto any user or role,",
    "start": "185666",
    "end": "189200"
  },
  {
    "text": "they will not be able to perform actions\nlike write item,",
    "start": "189600",
    "end": "193066"
  },
  {
    "text": "delete item or delete the table,",
    "start": "193266",
    "end": "195666"
  },
  {
    "text": "as this policy allows only the five\nmentioned actions on the table.",
    "start": "196333",
    "end": "200400"
  },
  {
    "text": "Now we are definitely in a much safer state",
    "start": "201300",
    "end": "204966"
  },
  {
    "text": "than with the previous policy.",
    "start": "204966",
    "end": "206333"
  },
  {
    "text": "We can optimize it even further,",
    "start": "207300",
    "end": "209433"
  },
  {
    "text": "following the concept of least privilege",
    "start": "209433",
    "end": "212200"
  },
  {
    "text": "and fine-grained access control",
    "start": "212200",
    "end": "215733"
  },
  {
    "text": "with fine-grained access control\nin DynamoDB.",
    "start": "216100",
    "end": "218700"
  },
  {
    "text": "We can have access control both\nat the item level",
    "start": "218966",
    "end": "221900"
  },
  {
    "text": "and at the attribute level,\nusing IAM policies.",
    "start": "222300",
    "end": "225533"
  },
  {
    "text": "Item-level access control",
    "start": "226333",
    "end": "228532"
  },
  {
    "text": "allows granting permissions on a table,\nbut restrict access",
    "start": "228533",
    "end": "232766"
  },
  {
    "text": "to specific items based on certain\nprimary key values.",
    "start": "232766",
    "end": "236333"
  },
  {
    "text": "An example might be a social network app\nfor games",
    "start": "237933",
    "end": "241200"
  },
  {
    "text": "where all user's saved game data\nare stored in one table,",
    "start": "241500",
    "end": "246066"
  },
  {
    "text": "but the user can access only items\nwith data they own.",
    "start": "246600",
    "end": "250333"
  },
  {
    "text": "Attribute-level access control allows",
    "start": "251300",
    "end": "254133"
  },
  {
    "text": "only a subset of attributes\nto be visible to the user.",
    "start": "254133",
    "end": "257799"
  },
  {
    "text": "An example could be an application\nthat displays flight data",
    "start": "258533",
    "end": "262032"
  },
  {
    "text": "based on the user's location.",
    "start": "262300",
    "end": "265065"
  },
  {
    "text": "Attributes such as the airline name,\narrival time, departure time,",
    "start": "265066",
    "end": "270600"
  },
  {
    "text": "flight number are all displayed\nto all passengers.",
    "start": "270600",
    "end": "274533"
  },
  {
    "text": "However,\nattributes such as the pilot's name",
    "start": "274966",
    "end": "277933"
  },
  {
    "text": "or the number of passengers\nare hidden from the passengers",
    "start": "278366",
    "end": "282500"
  },
  {
    "text": "and are shown only to the user\nof the airline staff.",
    "start": "282500",
    "end": "286166"
  },
  {
    "text": "The good thing is that you can implement",
    "start": "286966",
    "end": "289433"
  },
  {
    "text": "item-level and attribute-level controls\nin the same policy.",
    "start": "289433",
    "end": "292933"
  },
  {
    "text": "Let's see some examples of",
    "start": "293900",
    "end": "295199"
  },
  {
    "text": "fine-grained access control\nusing IAM policies.",
    "start": "295200",
    "end": "300133"
  },
  {
    "text": "In this example, consider a mobile\ngaming application",
    "start": "300766",
    "end": "304199"
  },
  {
    "text": "that allows players\nto play a variety of different games.",
    "start": "304533",
    "end": "307800"
  },
  {
    "text": "The application uses a DynamoDB table\ncalled Game Score",
    "start": "308766",
    "end": "312832"
  },
  {
    "text": "to keep track of high scores\nand other user data",
    "start": "313300",
    "end": "317465"
  },
  {
    "text": "for each item\nin the table, uniquely identified",
    "start": "317633",
    "end": "321199"
  },
  {
    "text": "by a user ID,\nwhich is its partition key.",
    "start": "321366",
    "end": "324566"
  },
  {
    "text": "Suppose there is a requirement\nto allow users to access",
    "start": "325366",
    "end": "329400"
  },
  {
    "text": "only their own game data.",
    "start": "329400",
    "end": "331466"
  },
  {
    "text": "You use the IAM condition element",
    "start": "332500",
    "end": "334600"
  },
  {
    "text": "to implement a fine-grained access control \npolicy for this requirement.",
    "start": "334900",
    "end": "339300"
  },
  {
    "text": "Pay attention to the condition\nDynamoDB:LeadingKeys.",
    "start": "339700",
    "end": "343566"
  },
  {
    "text": "This condition allows the user to access\nonly the items",
    "start": "344433",
    "end": "348433"
  },
  {
    "text": "where the partition key value\nmatches their user ID.",
    "start": "348433",
    "end": "352033"
  },
  {
    "text": "The ID www.amazon.com:userID\nis a substitution variable",
    "start": "355133",
    "end": "358400"
  },
  {
    "text": "from web identity federation.",
    "start": "358400",
    "end": "361300"
  },
  {
    "text": "When a user logs in\nusing a web identity federation,",
    "start": "362000",
    "end": "365866"
  },
  {
    "text": "like Amazon, for example,\nan IAM role will be assigned to them",
    "start": "366033",
    "end": "370500"
  },
  {
    "text": "that will have this security policy\nattached.",
    "start": "370933",
    "end": "373266"
  },
  {
    "text": "In this way,",
    "start": "374300",
    "end": "375166"
  },
  {
    "text": "we ensure that the user has access\nonly to their own record",
    "start": "375166",
    "end": "378666"
  },
  {
    "text": "and cannot access\nother users records.",
    "start": "379000",
    "end": "383533"
  },
  {
    "text": "In this other example,\nthis policy allows access to only two",
    "start": "383866",
    "end": "387633"
  },
  {
    "text": "specific attributes, the user ID\nand the high score of a table.",
    "start": "387633",
    "end": "393033"
  },
  {
    "text": "By adding the DynamoDB:Attributes condition",
    "start": "393400",
    "end": "395766"
  },
  {
    "text": "clause,\nyou might have noticed the StringEqualsIfExists condition.",
    "start": "396066",
    "end": "399500"
  },
  {
    "text": "It's possible that there is this clause\nin the permissions policy.",
    "start": "399566",
    "end": "404066"
  },
  {
    "text": "It ensures that your user\nspecifies the select parameter.",
    "start": "404066",
    "end": "407633"
  },
  {
    "text": "Its value must be specific attributes.",
    "start": "408166",
    "end": "410766"
  },
  {
    "text": "This requirement\nprevents the API action from returning",
    "start": "411466",
    "end": "414466"
  },
  {
    "text": "any attributes\nthat are not allowed.",
    "start": "414466",
    "end": "417333"
  },
  {
    "text": "If the user specifies the parameter\nreturn values,",
    "start": "418366",
    "end": "421400"
  },
  {
    "text": "then its value must be NONE, UPDATED_OLD, or UPDATED_NEW.",
    "start": "421900",
    "end": "424966"
  },
  {
    "text": "This is necessary\nbecause the UpdateItem action",
    "start": "424966",
    "end": "427066"
  },
  {
    "text": "also\nperforms an implicit read operation",
    "start": "428166",
    "end": "431432"
  },
  {
    "text": "to check\nif the item exists before replacing it",
    "start": "431700",
    "end": "434400"
  },
  {
    "text": "and so that the values\nof the previous attributes can be",
    "start": "434733",
    "end": "438033"
  },
  {
    "text": "returned if requested.",
    "start": "438700",
    "end": "441900"
  },
  {
    "text": "Restricting return values\nin this way",
    "start": "441900",
    "end": "443333"
  },
  {
    "text": "ensures that users can only read\nor write the allowed attributes.",
    "start": "444600",
    "end": "447133"
  },
  {
    "text": "If you are wondering\nif it's possible to explicitly deny",
    "start": "447133",
    "end": "452133"
  },
  {
    "text": "access to specific attributes,\nthe answer is yes.",
    "start": "453366",
    "end": "456800"
  },
  {
    "text": "This policy limits the user's access\nto update only specific attributes",
    "start": "456800",
    "end": "459633"
  },
  {
    "text": "identified\nby the DynamoDB:Attributes condition.",
    "start": "460533",
    "end": "465432"
  },
  {
    "text": "The StringNotLike condition\nprevents the application from updating",
    "start": "465433",
    "end": "469233"
  },
  {
    "text": "the specified attribute.\nusing the condition DynamoDB:Attributes,",
    "start": "470333",
    "end": "474633"
  },
  {
    "text": "we can extend this functionality",
    "start": "474633",
    "end": "479566"
  },
  {
    "text": "even to attributes of global secondary IDs.",
    "start": "479666",
    "end": "481866"
  },
  {
    "text": "In this other example, this policy\nallows a query to read",
    "start": "481866",
    "end": "484966"
  },
  {
    "text": "only five attributes\non a secondary index.",
    "start": "486300",
    "end": "490900"
  },
  {
    "text": "This is achieved\nusing the DynamoDB:Attributes condition",
    "start": "490900",
    "end": "493633"
  },
  {
    "text": "clause and specifying the index in resources.",
    "start": "494366",
    "end": "497400"
  },
  {
    "text": "The policy also\nlimits the queries to request",
    "start": "497400",
    "end": "501333"
  },
  {
    "text": "only specific attributes\nthat were projected on the index",
    "start": "502066",
    "end": "505233"
  },
  {
    "text": "and to require that the",
    "start": "509733",
    "end": "510833"
  },
  {
    "text": "application specify\na list of attributes in the query.",
    "start": "510833",
    "end": "513900"
  },
  {
    "text": "The policy also specifies\nthe condition dynamodb:Select, requiring",
    "start": "514866",
    "end": "519866"
  },
  {
    "text": "that the select parameter of the query action\nbe specific attributes.",
    "start": "519866",
    "end": "524000"
  },
  {
    "text": "And finally,\nthis is a more comprehensive example",
    "start": "526200",
    "end": "529100"
  },
  {
    "text": "of a policy\nthat shows how condition elements",
    "start": "529100",
    "end": "532199"
  },
  {
    "text": "can be used to define granular access\nboth at the item level",
    "start": "532200",
    "end": "536033"
  },
  {
    "text": "and at the attribute level,\nboth for the table",
    "start": "536533",
    "end": "539366"
  },
  {
    "text": "and for the global secondary ID.",
    "start": "539700",
    "end": "542700"
  },
  {
    "text": "This policy allows specific actions\nin DynamoDB that are specified",
    "start": "542700",
    "end": "547366"
  },
  {
    "text": "in the section element, and the table and index\nare specified in the source element.",
    "start": "547366",
    "end": "552266"
  },
  {
    "text": "The policy uses dynamodb:LeadingKeys condition",
    "start": "553133",
    "end": "556000"
  },
  {
    "text": "to restrict permissions\nonly to items whose value",
    "start": "556033",
    "end": "560366"
  },
  {
    "text": "of the partition key\nmatches the user's Facebook ID.",
    "start": "560366",
    "end": "564166"
  },
  {
    "text": "In this way, the user can access",
    "start": "564900",
    "end": "567233"
  },
  {
    "text": "attribute A and attribute B.",
    "start": "567233",
    "end": "570332"
  },
  {
    "text": "To learn more",
    "start": "571300",
    "end": "572266"
  },
  {
    "text": "about and IAM on DynamoDB.",
    "start": "572266",
    "end": "575233"
  },
  {
    "text": "You can consult our documentation",
    "start": "575400",
    "end": "577533"
  },
  {
    "text": "which explains in detail how you\ncan authenticate with multiple identities,",
    "start": "578266",
    "end": "582899"
  },
  {
    "text": "like Web Identity Federation\nusing Google,",
    "start": "583233",
    "end": "586600"
  },
  {
    "text": "Amazon and Facebook and implement policies",
    "start": "586600",
    "end": "589665"
  },
  {
    "text": "and fine-grained access control\nusing using IAM policy conditions.",
    "start": "589666",
    "end": "593133"
  },
  {
    "text": "Please, scan the QR Code on your screen\nto access the documentation",
    "start": "593800",
    "end": "598200"
  },
  {
    "text": "and learn more about security on DynamoDB.",
    "start": "598200",
    "end": "601866"
  },
  {
    "text": "In this video\nwe learned to use fine-grained access control",
    "start": "602266",
    "end": "605399"
  },
  {
    "text": "in DynamoDB\nusing IAM policies conditions.",
    "start": "605400",
    "end": "608866"
  },
  {
    "text": "I hope this section has been useful",
    "start": "609133",
    "end": "611133"
  },
  {
    "text": "and that you implement\nthese learning in your application.",
    "start": "611300",
    "end": "614200"
  },
  {
    "text": "Thank you.",
    "start": "614833",
    "end": "615633"
  },
  {
    "text": "My name is Lucas Ferrari,",
    "start": "615633",
    "end": "616966"
  },
  {
    "text": "I am a Database Specialist\nSolutions Architect at AWS.",
    "start": "616966",
    "end": "620766"
  }
]