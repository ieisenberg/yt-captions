[
  {
    "start": "0",
    "end": "45000"
  },
  {
    "text": "I'd like to thank you everyone for taking their time to attend today's webinar uh my name is uh Ronald widda a Solutions architect of Amazon web",
    "start": "40",
    "end": "6480"
  },
  {
    "text": "services today I'm joined by Chuck price uh VP of Professional Services at logic",
    "start": "6480",
    "end": "11960"
  },
  {
    "text": "works and Jerry hagerdon uh VP of it spring Venture group now the word devops",
    "start": "11960",
    "end": "18560"
  },
  {
    "text": "and container architecture have been thrown around by many people in the industry in the next hour we're going to",
    "start": "18560",
    "end": "26320"
  },
  {
    "text": "spend some time talking about what devops actually mean to an organization what problem they solve a look at how to",
    "start": "26320",
    "end": "33320"
  },
  {
    "text": "enable such capabilities on AWS then we will also follow up with adding containers into that mix how using",
    "start": "33320",
    "end": "40160"
  },
  {
    "text": "container Technologies like Docker can further enhance our devops tooling so",
    "start": "40160",
    "end": "45360"
  },
  {
    "start": "45000",
    "end": "86000"
  },
  {
    "text": "let's first start off today's topic by looking at devops on the AWS Cloud one of the fundamental benefit of moving to",
    "start": "45360",
    "end": "51920"
  },
  {
    "text": "the AWS cloud is that we are able to quickly spin up resources as we need them uh deploying hundreds or even",
    "start": "51920",
    "end": "58039"
  },
  {
    "text": "thousands of servers really in minutes we do this either through uh the web console uh writing a bash scripts or",
    "start": "58039",
    "end": "64280"
  },
  {
    "text": "also making calls to the AWS apis as this limitation that typically imposed",
    "start": "64280",
    "end": "69320"
  },
  {
    "text": "by the hardware nature of the data centers disappears The scalability",
    "start": "69320",
    "end": "74360"
  },
  {
    "text": "elasticity the self-provisioning capabilities through this programmable interface the cloud really opens up new",
    "start": "74360",
    "end": "80320"
  },
  {
    "text": "possibilities that wasn't that before wasn't possible now these are some of the enablers to uh devops these days all",
    "start": "80320",
    "end": "87680"
  },
  {
    "start": "86000",
    "end": "174000"
  },
  {
    "text": "types of businesses rely on software and we because of that when the when traditionally we think about the",
    "start": "87680",
    "end": "93040"
  },
  {
    "text": "separation of it and business in the organization both are now so intertwined",
    "start": "93040",
    "end": "98320"
  },
  {
    "text": "that any issues it is facing with delivering technology really directly impacts the business um their ability to",
    "start": "98320",
    "end": "105719"
  },
  {
    "text": "deliver value to the customer many many moons ago you know software projects are often seen as a high-risk engagement",
    "start": "105719",
    "end": "112880"
  },
  {
    "text": "they take a long time to complete um but the underlying issues is that most of the people who would benefit from it do",
    "start": "112880",
    "end": "119240"
  },
  {
    "text": "not have clear picture if the final product um will solve their problem uh",
    "start": "119240",
    "end": "125880"
  },
  {
    "text": "before um before uh before the piece of software is developed in the first place",
    "start": "125880",
    "end": "132239"
  },
  {
    "text": "so when we do get to accomplish what we wanted to do um creating a piece of software that fit for function uh we",
    "start": "132239",
    "end": "138760"
  },
  {
    "text": "would attract many of those uh users and here we would have a different kind of problem how do we keep these Services",
    "start": "138760",
    "end": "145360"
  },
  {
    "text": "remain available remain useful as new requirements comes up",
    "start": "145360",
    "end": "150440"
  },
  {
    "text": "so on one hand many of us are even still struggling with deployment weekends you",
    "start": "150440",
    "end": "155879"
  },
  {
    "text": "know the sacred ritual that everyone dreads on doing because they rarely go how we want them to you deploy once and",
    "start": "155879",
    "end": "162800"
  },
  {
    "text": "if it succeed don't touch anything so how do we continuously deliver the same Miracle all day every day and that's",
    "start": "162800",
    "end": "170680"
  },
  {
    "text": "what that's what devops promised to self Now devops is really the mindset the",
    "start": "170680",
    "end": "177360"
  },
  {
    "start": "174000",
    "end": "278000"
  },
  {
    "text": "people process and tools to tackle this very problem so how can we help our organization to innovate at a faster",
    "start": "177360",
    "end": "184799"
  },
  {
    "text": "Pace the good news is these objectives of you know gaining business agility",
    "start": "184799",
    "end": "189879"
  },
  {
    "text": "decreasing time of uh uh decreasing time of value or decreasing time to Value are",
    "start": "189879",
    "end": "195560"
  },
  {
    "text": "really not new to us um we tackled many of these very same challenges in the",
    "start": "195560",
    "end": "200720"
  },
  {
    "text": "software development World years years ago you know through the move from waterfall to agol methodology like",
    "start": "200720",
    "end": "207959"
  },
  {
    "text": "scrums scan buun and and B the devops community really seeks to introduce",
    "start": "207959",
    "end": "213080"
  },
  {
    "text": "these same patterns uh people processing tools uh to the world of software or it",
    "start": "213080",
    "end": "219640"
  },
  {
    "text": "delivery so the big challenge is how can we move from a long high-risk High Gain",
    "start": "219640",
    "end": "225879"
  },
  {
    "text": "engagements or delivery to small incremental delivery where business can",
    "start": "225879",
    "end": "231280"
  },
  {
    "text": "see quick turnaround to test out different ideas but at the same time reduce the risk of",
    "start": "231280",
    "end": "237400"
  },
  {
    "text": "failure so as an example when you release once in a blue moon releases",
    "start": "237400",
    "end": "242879"
  },
  {
    "text": "becomes a big event it is a potentially a new piece of software that no one would recognize and have to relearn but",
    "start": "242879",
    "end": "249799"
  },
  {
    "text": "when you release once a month a week in an incremental way people see incremental features also so some of the",
    "start": "249799",
    "end": "257079"
  },
  {
    "text": "problem that they had a few weeks ago might be alleviated uh in this in this release when you deploy your app once",
    "start": "257079",
    "end": "264960"
  },
  {
    "text": "every year deployment becomes a scary thing uh and as we're moving to that shorter Cadence",
    "start": "264960",
    "end": "270280"
  },
  {
    "text": "hopefully we are building that muscle some automation to make deployment simply a business as usual routine so",
    "start": "270280",
    "end": "278120"
  },
  {
    "start": "278000",
    "end": "292000"
  },
  {
    "text": "let's take a deeper look at the ingredients of a common devops practice uh to gain all the benefits we talk",
    "start": "278120",
    "end": "285440"
  },
  {
    "text": "about before we think there are four pillars and we're going to quickly go",
    "start": "285440",
    "end": "291400"
  },
  {
    "text": "through some of them today the first one is the concept of infrastructure as code",
    "start": "291400",
    "end": "296720"
  },
  {
    "start": "292000",
    "end": "370000"
  },
  {
    "text": "like I mentioned before we have apis clis provisioning templates like cloud formation AWS cloud has really made",
    "start": "296720",
    "end": "304360"
  },
  {
    "text": "infrastructure being as malleable as a piece of software um and because of that",
    "start": "304360",
    "end": "311400"
  },
  {
    "text": "why should shouldn't we treat infrastructure any differently to the application we develop or manage in AWS",
    "start": "311400",
    "end": "318639"
  },
  {
    "text": "every piece of our infrastructure could be or really should be defined in a",
    "start": "318639",
    "end": "323800"
  },
  {
    "text": "script or as a cloud formation template this means we can have repeatable process you can manage changes you can",
    "start": "323800",
    "end": "330120"
  },
  {
    "text": "work in parallel in a team and also track the change version that has been made to our infrastructure stack",
    "start": "330120",
    "end": "336120"
  },
  {
    "text": "therefore you'll be able to get the ability to roll back and roll forward if you wanted to and and I'm not talking",
    "start": "336120",
    "end": "342080"
  },
  {
    "text": "about on an application Level I'm talking about on an infrastructure level it can also potentially explicit",
    "start": "342080",
    "end": "347600"
  },
  {
    "text": "explicitly declare dependencies between the apps and the type of infrastructure that they need or",
    "start": "347600",
    "end": "353880"
  },
  {
    "text": "maybe one piece of infrastructure relies on a different uh piece of the infrastructure adopting the",
    "start": "353880",
    "end": "359680"
  },
  {
    "text": "infrastructure as code as a pattern also allows us to take on more complex",
    "start": "359680",
    "end": "365280"
  },
  {
    "text": "architectural pattern that spans across many servers and networks topology so",
    "start": "365280",
    "end": "370680"
  },
  {
    "start": "370000",
    "end": "453000"
  },
  {
    "text": "microservices for example is an architectural pattern that breaks apart",
    "start": "370680",
    "end": "375720"
  },
  {
    "text": "application to small modular Services where each one of this unit scales and",
    "start": "375720",
    "end": "381520"
  },
  {
    "text": "operate independently each microservice has its own stack including potentially",
    "start": "381520",
    "end": "386840"
  },
  {
    "text": "its own persistence layer it then exposes an a Pi with a clear SLA for those who wants to consume it this",
    "start": "386840",
    "end": "393599"
  },
  {
    "text": "pattern buys us a couple of things one resiliency right as each microservice is independent it enables us for simpler",
    "start": "393599",
    "end": "401319"
  },
  {
    "text": "and more frequent iterative deploys uh cost Effectiveness with the service",
    "start": "401319",
    "end": "406479"
  },
  {
    "text": "being so small we can use many small cost effective instances than the larger ones uh it also gives the dev team",
    "start": "406479",
    "end": "413680"
  },
  {
    "text": "freedom to Define their own technology stack you know one microservice might be using python Jango um others might be",
    "start": "413680",
    "end": "420280"
  },
  {
    "text": "using Ruby on rail C Java go whatever the flavor of the month that that the team choose to uh to go with it also",
    "start": "420280",
    "end": "428000"
  },
  {
    "text": "allows the team to drastically introduce new features and perhaps as new",
    "start": "428000",
    "end": "434000"
  },
  {
    "text": "microservice so therefore you can deploy this new functionality without worrying",
    "start": "434000",
    "end": "439319"
  },
  {
    "text": "about breaking core functionality because because essentially you're not changing uh the the core functionality",
    "start": "439319",
    "end": "445520"
  },
  {
    "text": "by not touching those microservices and this culture of experiment M ation really address that Innovation part of",
    "start": "445520",
    "end": "452720"
  },
  {
    "text": "our objective so the next pillar that I want to talk about is really having an effective flogging and monitoring",
    "start": "452720",
    "end": "458000"
  },
  {
    "start": "453000",
    "end": "536000"
  },
  {
    "text": "strategy it is critical in a devops environment to get this right log and Metric streams from applications and",
    "start": "458000",
    "end": "464720"
  },
  {
    "text": "infrastructure should be centrally aggregated to a single pane of glass uh",
    "start": "464720",
    "end": "470159"
  },
  {
    "text": "this allows the team to understand what really is going on in our apps and infra and able to take preventive actions",
    "start": "470159",
    "end": "476199"
  },
  {
    "text": "remediation and potential optimization so maybe certain instances are over provision you know from logs and metrics",
    "start": "476199",
    "end": "482919"
  },
  {
    "text": "you'll be able to take the right measure to to address those perhaps a specific",
    "start": "482919",
    "end": "488199"
  },
  {
    "text": "microservice keeps on falling over and you need to restart once in a while to flush the memory whatever that problem",
    "start": "488199",
    "end": "493800"
  },
  {
    "text": "may be um The Hope is with effective logging and monitoring strategy you'll be able to uh you you'll be able to",
    "start": "493800",
    "end": "500720"
  },
  {
    "text": "proactively react uh on these issues now in AWS we have cloudwatch and cloudwatch",
    "start": "500720",
    "end": "507080"
  },
  {
    "text": "logs uh this allows us not only gain insight to our system but also with cloudwatch events we can create alerts",
    "start": "507080",
    "end": "514880"
  },
  {
    "text": "based on threshold that you define and Trigger automatically a remediation script if we need to so this enables the",
    "start": "514880",
    "end": "522680"
  },
  {
    "text": "dev side of that devops component where now we have tools at our disposal to to",
    "start": "522680",
    "end": "528480"
  },
  {
    "text": "develop uh automation scripts as opposed to Simply reacting manually when an",
    "start": "528480",
    "end": "533600"
  },
  {
    "text": "event or issue occur automate automate automate lastly um this is the pillar",
    "start": "533600",
    "end": "538800"
  },
  {
    "start": "536000",
    "end": "596000"
  },
  {
    "text": "that we're probably going going to be spending some time on in this webinar uh continuous delivery Pipeline and",
    "start": "538800",
    "end": "545120"
  },
  {
    "text": "continuous integration also known as cicd um AWS allows it teams to rapidly",
    "start": "545120",
    "end": "551279"
  },
  {
    "text": "and reliably build test and deploy our application in a in a in a very",
    "start": "551279",
    "end": "556480"
  },
  {
    "text": "automated manner when a built and deployment process for both application as well as on the infrastructure level",
    "start": "556480",
    "end": "562800"
  },
  {
    "text": "is as easy as committing a code or that provisioning script or provisioning",
    "start": "562800",
    "end": "567880"
  },
  {
    "text": "template to a code rep like git hopefully will be able to deliver value to the business faster than ever now the",
    "start": "567880",
    "end": "574800"
  },
  {
    "text": "journey to embrac embracing the devops mindset can be challenging you know uh as you may guess the transformation",
    "start": "574800",
    "end": "581800"
  },
  {
    "text": "isn't just about the tools but it's also about how the people and process should",
    "start": "581800",
    "end": "587519"
  },
  {
    "text": "evolve along with it and there are clear benefits on having help from those who have gone through or at least assist",
    "start": "587519",
    "end": "594640"
  },
  {
    "text": "other organization going through the the same transformation so with that I'm going to",
    "start": "594640",
    "end": "602160"
  },
  {
    "text": "um introduce you to logic Works uh logic works is one of our Premier AWS",
    "start": "602160",
    "end": "608519"
  },
  {
    "text": "Consulting Partners who have helped many customers in their Cloud transformation Journey I'd like to introduce Chuck",
    "start": "608519",
    "end": "614440"
  },
  {
    "text": "price uh Chuck is the VP of Professional Services at logic Works Chuck has over",
    "start": "614440",
    "end": "619519"
  },
  {
    "text": "20 years of experience in software development and it and was doing edel software development before edel ever",
    "start": "619519",
    "end": "626320"
  },
  {
    "text": "existed welcome CH thank you Ron and welcome welcome everyone again good morning good afternoon and good evening",
    "start": "626320",
    "end": "633880"
  },
  {
    "text": "so while we get to the next slide here uh let me tell you a little bit about logic Works logic works is a premier",
    "start": "633880",
    "end": "639880"
  },
  {
    "start": "636000",
    "end": "675000"
  },
  {
    "text": "partner in the adws ecosystem and our Focus as an organization is designing building and automating uh ongoing",
    "start": "639880",
    "end": "646480"
  },
  {
    "text": "management of cloud infrastructure we've been doing this for over 20 years and have migrated a lot of companies to the",
    "start": "646480",
    "end": "651880"
  },
  {
    "text": "cloud manag their workloads and we focus heavily on devops and automation with a dedicated AWS devops engineering team we",
    "start": "651880",
    "end": "658880"
  },
  {
    "text": "have a range of experience across different business vertical but particularly customers in Risk averse",
    "start": "658880",
    "end": "664600"
  },
  {
    "text": "compliance Laden Industries like healthcare and financial services so we specialize in Hippa PCI nist sock2",
    "start": "664600",
    "end": "671560"
  },
  {
    "text": "compliance let's dive into some of the details first up on the agenda devops from the Ops side the focus of the",
    "start": "671560",
    "end": "678079"
  },
  {
    "start": "675000",
    "end": "714000"
  },
  {
    "text": "presentation today is to talk about how you build a devops practice on AWS first",
    "start": "678079",
    "end": "684839"
  },
  {
    "text": "we'll give a brief overview of devops then do a deep technical dive into how to build the devops practice from the",
    "start": "684839",
    "end": "691040"
  },
  {
    "text": "operation side which as we'll discuss is often overlooked in the first stages of agile transformation next we'll look at",
    "start": "691040",
    "end": "697279"
  },
  {
    "text": "Docker and then wrap up with an impact on all this automation on your security after we talk about devops from the Ops",
    "start": "697279",
    "end": "702920"
  },
  {
    "text": "side we'll introduce Jerry from Spring Venture group a customer of logic Works who'll pick up the story and talk about",
    "start": "702920",
    "end": "708839"
  },
  {
    "text": "devops from the dev side including his deployment Pipeline with Docker the first a quick poll let me open this poll",
    "start": "708839",
    "end": "717200"
  },
  {
    "start": "714000",
    "end": "746000"
  },
  {
    "text": "here so who is currently living the dream of cloud-based devops um we'd like to get a sense for",
    "start": "717200",
    "end": "724399"
  },
  {
    "text": "who on the on the call has actually have some experience with devops is it just",
    "start": "724399",
    "end": "729839"
  },
  {
    "text": "you personally is it you working with your company have you or do you not have any experience with it at all so we got",
    "start": "729839",
    "end": "736480"
  },
  {
    "text": "the numbers coming in that's great really appreciate you uh participating we'll wait just a couple more seconds it",
    "start": "736480",
    "end": "743360"
  },
  {
    "text": "looks like we've got uh the majority of folks who responded that's fantastic so",
    "start": "743360",
    "end": "748680"
  },
  {
    "text": "uh it looks like like about half the people on the call actually are doing uh cloud-based devops in some way both they",
    "start": "748680",
    "end": "755880"
  },
  {
    "text": "and their company uh are focused on on devops and then there's a a small",
    "start": "755880",
    "end": "760920"
  },
  {
    "text": "majority a small group of folks in the middle uh and then about 25% of the",
    "start": "760920",
    "end": "766440"
  },
  {
    "text": "folks on the call uh are not doing it at all so that's fantastic uh that group of folks uh I think you'll really get a lot",
    "start": "766440",
    "end": "773120"
  },
  {
    "text": "of value out of this out of this presentation so on the next slide",
    "start": "773120",
    "end": "780079"
  },
  {
    "start": "779000",
    "end": "799000"
  },
  {
    "text": "we'll talk about uh what is devops Ron's already provided a very nice introduction to what devops is",
    "start": "780079",
    "end": "786680"
  },
  {
    "text": "essentially the practice of enabling a company to innovate at a higher velocity as Darwin famously stated it's not the",
    "start": "786680",
    "end": "793040"
  },
  {
    "text": "strongest that survive but most responsive to change change or die right",
    "start": "793040",
    "end": "799199"
  },
  {
    "start": "799000",
    "end": "840000"
  },
  {
    "text": "all right but we all know that the dream of devops doesn't always meet reality and this is especially true in the Ops",
    "start": "799199",
    "end": "805839"
  },
  {
    "text": "portion of devops usually in the first efforts to transform an it organization it's really the developers that get most",
    "start": "805839",
    "end": "811920"
  },
  {
    "text": "of the focus development and deployment tools often get automated but infrastructure does not which means that",
    "start": "811920",
    "end": "819040"
  },
  {
    "text": "every infrastructure change is timec consuming and risky Ops is always putting out fires and struggles and with",
    "start": "819040",
    "end": "825079"
  },
  {
    "text": "further comp are further compounded when pockets of developers use their favorite and often not well integrated tools it's",
    "start": "825079",
    "end": "831320"
  },
  {
    "text": "no wonder that more than half of developers still have no access to self-service infrastructure and more",
    "start": "831320",
    "end": "836680"
  },
  {
    "text": "than a third of developers say it takes more than a month to get new infrastructure so how do we make the Ops",
    "start": "836680",
    "end": "842160"
  },
  {
    "start": "840000",
    "end": "915000"
  },
  {
    "text": "half of devops great basically that's what logic Works does every day we're experts at this we help companies",
    "start": "842160",
    "end": "847440"
  },
  {
    "text": "automate operations so that their developer and operations teams stop putting out fires and start delivering",
    "start": "847440",
    "end": "852800"
  },
  {
    "text": "better applications we've done hundreds of these projects and we find that the key ingredients are uh first of all",
    "start": "852800",
    "end": "858600"
  },
  {
    "text": "making it easy for developers to launch approved infrastructure we're talking about selfservice infrastructure we're",
    "start": "858600",
    "end": "864880"
  },
  {
    "text": "going to get into that what that means in in just a minute next building a self-service C means that you can create",
    "start": "864880",
    "end": "870600"
  },
  {
    "text": "a clear line of responsibilities between Ops and development no more waiting a month to deploy new infrastructure and",
    "start": "870600",
    "end": "876120"
  },
  {
    "text": "developers can just go and launch a new stack uh as needed great Ops also means",
    "start": "876120",
    "end": "881800"
  },
  {
    "text": "designing for constant change as a systems engineer you simply can't custom build each infrastructure stack for each",
    "start": "881800",
    "end": "889480"
  },
  {
    "text": "unique app it's just not scalable instead you need to start treating infrastructure as code and building",
    "start": "889480",
    "end": "895240"
  },
  {
    "text": "templates that deploy infrastructure rather than handbuilding your instances all this means you're no longer",
    "start": "895240",
    "end": "901160"
  },
  {
    "text": "constantly managing and fixing infrastructure with so with less people in your production environment you",
    "start": "901160",
    "end": "906440"
  },
  {
    "text": "reduce your overall security risk but we'll talk more about security and why people are important and that's still uh",
    "start": "906440",
    "end": "913480"
  },
  {
    "text": "toward the end of the the section so let's take a look at what what this might look like uh a layered kick",
    "start": "913480",
    "end": "920000"
  },
  {
    "start": "915000",
    "end": "986000"
  },
  {
    "text": "diagram here uh any organization that is fully entrenched in devops has a stack",
    "start": "920000",
    "end": "925199"
  },
  {
    "text": "that that may look something like this uh you see that the AWS platform is is at the bottom in green which is really",
    "start": "925199",
    "end": "931440"
  },
  {
    "text": "the foundation for everything that we that we do here in the next layer you have infrastructure automation basically",
    "start": "931440",
    "end": "938800"
  },
  {
    "text": "rather than manually orchestrating different AWS and other services you build a an automation platform that",
    "start": "938800",
    "end": "944839"
  },
  {
    "text": "orchestrates those services for you and there are hundreds of tools you could use in this infrastructure automation",
    "start": "944839",
    "end": "949880"
  },
  {
    "text": "layer but today we're going to talk about mostly AWS cloud formation and configuration management the next layer",
    "start": "949880",
    "end": "956800"
  },
  {
    "text": "is your self-service portal and as we talked about this is something that your operations Team sets up basically",
    "start": "956800",
    "end": "962079"
  },
  {
    "text": "building all the infrastructure templates and security and working in the background so that developers have a simple easy to use interface to launch",
    "start": "962079",
    "end": "969040"
  },
  {
    "text": "new infrastructure in truth all the work that you do in the infrastructure automation layer is what makes the",
    "start": "969040",
    "end": "975040"
  },
  {
    "text": "self-service portal possible so contained in the blue layers uh is the information that your operations team",
    "start": "975040",
    "end": "981399"
  },
  {
    "text": "would take care of and at logic works this is really our core competency so if",
    "start": "981399",
    "end": "986959"
  },
  {
    "start": "986000",
    "end": "1039000"
  },
  {
    "text": "we look at this layer uh from a partnership perspective between spring Venture group logic works and Amazon uh",
    "start": "986959",
    "end": "994240"
  },
  {
    "text": "this may look a bit complex uh the spring Venture group is a case study is a great case study because they've",
    "start": "994240",
    "end": "1000040"
  },
  {
    "text": "really achieved this devops on AWS from infrastructure all the way through to their application SVG is an Innovative",
    "start": "1000040",
    "end": "1007000"
  },
  {
    "text": "health insurance sales company that approached logic Works last year with the desire to migrate to ads they were",
    "start": "1007000",
    "end": "1012680"
  },
  {
    "text": "already proficient at figuring out their application and were using containers on premise but they needed help migrating",
    "start": "1012680",
    "end": "1018240"
  },
  {
    "text": "to AWS as you can see in this diagram SVG chose to use both AWS and logic Works to",
    "start": "1018240",
    "end": "1024319"
  },
  {
    "text": "provide the Ops side of devops really providing a foundation for their developers to build a fully automated",
    "start": "1024319",
    "end": "1030120"
  },
  {
    "text": "software delivery pipeline without having to worry about infrastructure we're going to walk through each of these layers one by one um and I'm going",
    "start": "1030120",
    "end": "1036918"
  },
  {
    "text": "to talk about the first three layers before turning it over to Jerry who'll uh wrap it up with some great info on",
    "start": "1036919",
    "end": "1042678"
  },
  {
    "start": "1039000",
    "end": "1093000"
  },
  {
    "text": "the application side so first AWS platform as Ron talked about AWS is",
    "start": "1042679",
    "end": "1048240"
  },
  {
    "text": "quite simple the most robust mature and largest IAS platform in the world at",
    "start": "1048240",
    "end": "1053880"
  },
  {
    "text": "logic Works we've been you working with AWS since about 2012 and firmly believe that you can build an equally or even",
    "start": "1053880",
    "end": "1060559"
  },
  {
    "text": "more secure Solution on AWS than we could in our in private data centers it",
    "start": "1060559",
    "end": "1066080"
  },
  {
    "text": "has dozens of service and also puts a strong emphasis on developing devops friendly Services basically they give",
    "start": "1066080",
    "end": "1071799"
  },
  {
    "text": "you all the ingredients for devops but it's your responsibility to coordinate those services in a way that works for",
    "start": "1071799",
    "end": "1077039"
  },
  {
    "text": "your team for those Lego fans out there uh these are the building blocks the Lego blocks uh different sizes and",
    "start": "1077039",
    "end": "1083360"
  },
  {
    "text": "colors and shapes and becoming a master builder uh using these Legos to build an",
    "start": "1083360",
    "end": "1089000"
  },
  {
    "text": "automated infrastructure is really uh the end goal here so when we look at",
    "start": "1089000",
    "end": "1094919"
  },
  {
    "start": "1093000",
    "end": "1140000"
  },
  {
    "text": "Cloud first versus traditional application development and we compare what it's like to develop applications",
    "start": "1094919",
    "end": "1101159"
  },
  {
    "text": "in a cloud native Cloud first approach with AWS leveraging AWS uh this is a",
    "start": "1101159",
    "end": "1106919"
  },
  {
    "text": "survey that was done a while ago but you can see the average time to deploy new applications is 36% faster using",
    "start": "1106919",
    "end": "1115240"
  },
  {
    "text": "AWS and the number of business apps deployed per year 120% more almost uh",
    "start": "1115240",
    "end": "1121159"
  },
  {
    "text": "the size of your development teams are 22% smaller uh necessary so that's a",
    "start": "1121159",
    "end": "1127280"
  },
  {
    "text": "lower investment for T faster time to Market and as you can see an uh unplanned downtime instance reduced by",
    "start": "1127280",
    "end": "1134480"
  },
  {
    "text": "80% so more stability uh on the platform as well with a cloud approach so since",
    "start": "1134480",
    "end": "1140440"
  },
  {
    "start": "1140000",
    "end": "1148000"
  },
  {
    "text": "we talked about AWS let's jump into the next layer which is the infrastructure automation remember this is the bread and butter of what your operations team",
    "start": "1140440",
    "end": "1147520"
  },
  {
    "text": "will focus on from a day-to-day basis before we get into that let's do one",
    "start": "1147520",
    "end": "1153000"
  },
  {
    "start": "1148000",
    "end": "1182000"
  },
  {
    "text": "more survey who is currently leveraging infrastructure as code who understands",
    "start": "1153000",
    "end": "1159360"
  },
  {
    "text": "really what that means who's using it firmly uh use it every day all day uh or",
    "start": "1159360",
    "end": "1165840"
  },
  {
    "text": "not really sure what that seems in fact the terms sort of mean sort of seemed",
    "start": "1165840",
    "end": "1170880"
  },
  {
    "text": "contradictory so it looks like about half the folks are learning more now and",
    "start": "1170880",
    "end": "1176480"
  },
  {
    "text": "uh hope to dig in uh more this year so that's great uh I think you've come to the right place all right why",
    "start": "1176480",
    "end": "1182960"
  },
  {
    "start": "1182000",
    "end": "1294000"
  },
  {
    "text": "infrastructure Automation in the old way of doing things we built infrastructure manually every environment was a",
    "start": "1182960",
    "end": "1189080"
  },
  {
    "text": "snowflake that meant if something broke good luck figuring out which thing went wrong also if you're a system engineer",
    "start": "1189080",
    "end": "1194600"
  },
  {
    "text": "manually building out the environment there's no good chance that you're going to uh there's a good chance you may",
    "start": "1194600",
    "end": "1199840"
  },
  {
    "text": "forget how you built something that you built last year or five years ago and it's slow and painful to debug but when",
    "start": "1199840",
    "end": "1206360"
  },
  {
    "text": "you automate the infrastructure rather than sshing into each machine to fix it you go back into the code the templates",
    "start": "1206360",
    "end": "1212679"
  },
  {
    "text": "that built that environment usually in nabs confirmation template makeer updates rebuild the environment from",
    "start": "1212679",
    "end": "1218400"
  },
  {
    "text": "scratch it's easy to replicate environment so you can just tear down the old one rebuild a new one from the",
    "start": "1218400",
    "end": "1223720"
  },
  {
    "text": "templates without downtime this is the true meaning of disposable infrastructure or immutable infrastructure if you've ever heard",
    "start": "1223720",
    "end": "1230280"
  },
  {
    "text": "those terms before when you build every environment from a template that means you finally achieved this Holy Grail of",
    "start": "1230280",
    "end": "1235960"
  },
  {
    "text": "infrastructure operations where every environment and every instance is consistent and repeatable you know",
    "start": "1235960",
    "end": "1241799"
  },
  {
    "text": "exactly how an instance is configured just by looking at the code that built it it's that powerful so in the",
    "start": "1241799",
    "end": "1246880"
  },
  {
    "text": "infrastructure automation pipeline what does that really look like in practice first you start off with raw AWS",
    "start": "1246880",
    "end": "1253559"
  },
  {
    "text": "services this is your ec2 instances your vpcs then your team designs and",
    "start": "1253559",
    "end": "1259320"
  },
  {
    "text": "architecture with these services and any thirdparty Services you use this is actually the longest stage of the",
    "start": "1259320",
    "end": "1264799"
  },
  {
    "text": "process this is the time when your security team and your development team should all be involved to produce an MVP Cloud once you figured out your standard",
    "start": "1264799",
    "end": "1271279"
  },
  {
    "text": "architecture you can code that architecture into an architecture template in cloud formation once your infrastructure",
    "start": "1271279",
    "end": "1278360"
  },
  {
    "text": "resources are up you usually have to do some configuration of the OS you've probably launched your cloud formation",
    "start": "1278360",
    "end": "1284200"
  },
  {
    "text": "template with a base Ami and usually at this stage a configuration management tool like AWS opsworks or puppet and",
    "start": "1284200",
    "end": "1291279"
  },
  {
    "text": "Chef anible Etc will configure your base image so let's dive deeper into the",
    "start": "1291279",
    "end": "1296440"
  },
  {
    "text": "final two stages of the process infrastructure templates and configuration management all right AWS",
    "start": "1296440",
    "end": "1302240"
  },
  {
    "start": "1301000",
    "end": "1368000"
  },
  {
    "text": "cloud formation so the infrastructure buildout stage is the most crucial part of the process and AWS cloud formation",
    "start": "1302240",
    "end": "1309799"
  },
  {
    "text": "is simply the best and most incredible incredibly powerful tool to do this basically it's Json where you just write",
    "start": "1309799",
    "end": "1316960"
  },
  {
    "text": "Json and tell AWS what resources to build it can do things like set up your vpcs and subnets configure gateways and",
    "start": "1316960",
    "end": "1322880"
  },
  {
    "text": "access points and all sorts of things that set up the foundation of your infrastructure for SVG logic Works buil",
    "start": "1322880",
    "end": "1330480"
  },
  {
    "text": "cloud formation templates that included the buildout of AWS ec2 container clusters service clusters which",
    "start": "1330480",
    "end": "1336760"
  },
  {
    "text": "orchestrate Docker containers and Jerry will talk more about this in his presentation but if you don't already",
    "start": "1336760",
    "end": "1342039"
  },
  {
    "text": "use cloud formation I definitely encourage you to do that even if this is only the only thing you take away from",
    "start": "1342039",
    "end": "1347760"
  },
  {
    "text": "today's presentation go out learn about it and have your team try it out the benefit of",
    "start": "1347760",
    "end": "1353279"
  },
  {
    "text": "programmatically building your infrastructure is that again you have a consistent stable repeatable way to",
    "start": "1353279",
    "end": "1359200"
  },
  {
    "text": "build out infrastructure that has all of your security standards built in rather than having to manually rebuild each",
    "start": "1359200",
    "end": "1364880"
  },
  {
    "text": "time a configuration changes so the next stage is",
    "start": "1364880",
    "end": "1370000"
  },
  {
    "start": "1368000",
    "end": "1429000"
  },
  {
    "text": "configuration management the purpose of configuration management is to get your instances",
    "start": "1370000",
    "end": "1375200"
  },
  {
    "text": "ready to receive your application code this means configurating host names binding instances to Central off and",
    "start": "1375200",
    "end": "1381080"
  },
  {
    "text": "installing various packages at logic works we have a central puppet module that is that has basic policies that our",
    "start": "1381080",
    "end": "1388159"
  },
  {
    "text": "clients will use for most of their environment together AWS cloud formation and configuration management are the onew punch that gets your infrastructure",
    "start": "1388159",
    "end": "1394799"
  },
  {
    "text": "ready to receive code when you configure your instances with a tool like puppet or chef and then use a code repo like",
    "start": "1394799",
    "end": "1400679"
  },
  {
    "text": "git to Version Control your puppet and Chef scripts you're essentially treating the configuration or infrastructure like",
    "start": "1400679",
    "end": "1407159"
  },
  {
    "text": "software soft it can be easily modified replicated rolled back versioned imagine",
    "start": "1407159",
    "end": "1412679"
  },
  {
    "text": "that rather than having to manually install packages or remember to update packages you can write code to install",
    "start": "1412679",
    "end": "1418640"
  },
  {
    "text": "those packages once in a central location and then have 100% certainty that all your instances will meet that",
    "start": "1418640",
    "end": "1423720"
  },
  {
    "text": "new configuration when checked back into puppet incredibly powerful finally in the case of spring",
    "start": "1423720",
    "end": "1430080"
  },
  {
    "start": "1429000",
    "end": "1457000"
  },
  {
    "text": "Venture group they had to maintain hippoc compliance so you'll see that a lot of the things that puppet does like configuring log shipping and monitoring",
    "start": "1430080",
    "end": "1436400"
  },
  {
    "text": "software are essentially are essential components of meeting Hippa compliance logic Works infrastructure automation",
    "start": "1436400",
    "end": "1442320"
  },
  {
    "text": "means that SVG has 100% certainty that all their instances meet Hippa",
    "start": "1442320",
    "end": "1447720"
  },
  {
    "text": "standards now all that automation is in place the next step is letting developers push the button to build out",
    "start": "1447720",
    "end": "1454080"
  },
  {
    "text": "new environments that means we're to the self-service portal so the AWS service catalog is a service that allows us to",
    "start": "1454080",
    "end": "1460799"
  },
  {
    "start": "1457000",
    "end": "1484000"
  },
  {
    "text": "create a catalog of AWS cloud formation templates that are approved for use on ABS so in the case of SG SVG logic works",
    "start": "1460799",
    "end": "1468440"
  },
  {
    "text": "built out the cloud information templates put them in the service catalog and now SVG developers can launch AWS environments that are",
    "start": "1468440",
    "end": "1474760"
  },
  {
    "text": "configured to their exact specifications uh on a repeatable fashion including their ec2 container",
    "start": "1474760",
    "end": "1481360"
  },
  {
    "text": "service which are ready for their containers so what's the impact on security while we're wrapping up let's",
    "start": "1481360",
    "end": "1488640"
  },
  {
    "start": "1484000",
    "end": "1559000"
  },
  {
    "text": "uh this section let's look quickly at the impact of infrastructure Automation and the service catalog on security as",
    "start": "1488640",
    "end": "1494840"
  },
  {
    "text": "you can see if your developers and operations folks only launched approved a Cloud information templates then you",
    "start": "1494840",
    "end": "1500159"
  },
  {
    "text": "have a carefully controlled buildout process your security team gets involved in creating the templates and building",
    "start": "1500159",
    "end": "1505480"
  },
  {
    "text": "in crucial configurations and templates so that no infrastructure components ever get launched without MFA or",
    "start": "1505480",
    "end": "1511440"
  },
  {
    "text": "encryption for example your operations team is no longer no longer hand handcrafting each environment testing",
    "start": "1511440",
    "end": "1518120"
  },
  {
    "text": "environments mirror production environments and there is consistency second you have a controlled",
    "start": "1518120",
    "end": "1523760"
  },
  {
    "text": "update process rather than doing one-off fixes and constantly firefighting your operations team is changing code not",
    "start": "1523760",
    "end": "1531120"
  },
  {
    "text": "servers that means every change in your environment is documented if you work in a company with compliance requirement",
    "start": "1531120",
    "end": "1536600"
  },
  {
    "text": "you know how valuable it is to be able to show an auditor that no one makes direct changes to a production environment and all changes are",
    "start": "1536600",
    "end": "1542720"
  },
  {
    "text": "carefully documented and version controlled finally this gives you peace of mind that your developers and",
    "start": "1542720",
    "end": "1548200"
  },
  {
    "text": "operations aren't touching your production infrastructure so you have less of a human uh risk a risk of human",
    "start": "1548200",
    "end": "1555480"
  },
  {
    "text": "error but humans are still important so key takeaways to wrap it up remember",
    "start": "1555480",
    "end": "1562399"
  },
  {
    "start": "1559000",
    "end": "1598000"
  },
  {
    "text": "that building a fully automated Cloud en environment is complex but it is critical especially if you have a",
    "start": "1562399",
    "end": "1568000"
  },
  {
    "text": "complex set of applications even more so the more complex your application self-service infrastructure",
    "start": "1568000",
    "end": "1574360"
  },
  {
    "text": "enabled by infrastructure automation is the foundation for devops developing your cicd pipeline is important but",
    "start": "1574360",
    "end": "1581360"
  },
  {
    "text": "remember the impact on your business of automating code delivery is severely hampered if it still takes a month to",
    "start": "1581360",
    "end": "1587080"
  },
  {
    "text": "build new infrastructure and of course all this seems a little bit too complex and if you'd rather just focus on your",
    "start": "1587080",
    "end": "1593600"
  },
  {
    "text": "application development you can talk to logic Works to support your efforts next uh Ron I'm going to turn it",
    "start": "1593600",
    "end": "1600080"
  },
  {
    "start": "1598000",
    "end": "1622000"
  },
  {
    "text": "over to you to introduce Jerry uh to get into uh the application in cicd pipeline portion of the",
    "start": "1600080",
    "end": "1606360"
  },
  {
    "text": "presentation thanks uh thanks Chuck um thanks for taking us through the core parts of devops and for this part of the",
    "start": "1606360",
    "end": "1612600"
  },
  {
    "text": "webinar I would like to uh welcome Jerry haror he is the VP of Information",
    "start": "1612600",
    "end": "1619159"
  },
  {
    "text": "Technology at Spring Venture group he has 21 years of software development experience as well as architecture and",
    "start": "1619159",
    "end": "1626480"
  },
  {
    "start": "1622000",
    "end": "1641000"
  },
  {
    "text": "Leadership under his belt he came from Department of Agriculture driving change for 10 years then joined spring Venture",
    "start": "1626480",
    "end": "1633240"
  },
  {
    "text": "group in January 2016 welcome Jerry thank you Ron so you just heard Chuck",
    "start": "1633240",
    "end": "1639640"
  },
  {
    "text": "from logic Works um talk through uh the three operational layers uh up through",
    "start": "1639640",
    "end": "1645240"
  },
  {
    "start": "1641000",
    "end": "1658000"
  },
  {
    "text": "the service catalog I'm going to talk about the the employment Auto automation layer as well as how SVG leverages the",
    "start": "1645240",
    "end": "1652799"
  },
  {
    "text": "service catalog to create a seamless integration between our two devop stacks",
    "start": "1652799",
    "end": "1658279"
  },
  {
    "start": "1658000",
    "end": "1723000"
  },
  {
    "text": "so a little bit about spring Venture group so SVG is a group of sales Center based Insurance",
    "start": "1658279",
    "end": "1664679"
  },
  {
    "text": "brokerages um that all work in the senior Insurance Spas we've been around for about eight years um we have an",
    "start": "1664679",
    "end": "1671760"
  },
  {
    "text": "awesome sales team that help our clients navigate through the complexities of",
    "start": "1671760",
    "end": "1677120"
  },
  {
    "text": "Medicare during a significant transition in their lives about three years ago SVG started making a significant investment",
    "start": "1677120",
    "end": "1683799"
  },
  {
    "text": "in developing it systems to differentiate itself in the marketplace our distribution platform has had a",
    "start": "1683799",
    "end": "1689960"
  },
  {
    "text": "major impact in allowing our agents to better help our clients SVG has a",
    "start": "1689960",
    "end": "1695440"
  },
  {
    "text": "amazing culture and we've been recognized by ingrams as the best company to work for in the Insurance Pace in 2016 and just last week ingrams",
    "start": "1695440",
    "end": "1703200"
  },
  {
    "text": "announced that we won that same award for 2017 all of this has led to a significant growth uh in both revenue",
    "start": "1703200",
    "end": "1711399"
  },
  {
    "text": "and staff size in 2016 we had 150% Revenue growth and in the last 18 months",
    "start": "1711399",
    "end": "1718799"
  },
  {
    "text": "uh the company overall and the IT staff has tripled so uh talk about so what are",
    "start": "1718799",
    "end": "1724919"
  },
  {
    "start": "1723000",
    "end": "1752000"
  },
  {
    "text": "we going to talk through in this last third of the presentation so we'll go over uh spring Venture group's",
    "start": "1724919",
    "end": "1730640"
  },
  {
    "text": "technology goals we'll talk about why we chose Docker we'll go briefly over our",
    "start": "1730640",
    "end": "1735960"
  },
  {
    "text": "deployment pipeline we'll talk through Docker orchestration and security and",
    "start": "1735960",
    "end": "1741720"
  },
  {
    "text": "then we'll wrap up with uh talking about how combining infrastructure Automation",
    "start": "1741720",
    "end": "1747279"
  },
  {
    "text": "and deployment automation leads to efficient developers which help us drive our mission so our goals um so when I uh",
    "start": "1747279",
    "end": "1754880"
  },
  {
    "start": "1752000",
    "end": "1844000"
  },
  {
    "text": "arrived in January of last year um we had a great group of developers here at Spring Venture group and had about 25",
    "start": "1754880",
    "end": "1761159"
  },
  {
    "text": "systems and services running on a very brittle on premise infrastructure uh we had stability",
    "start": "1761159",
    "end": "1767440"
  },
  {
    "text": "problems that impacted our business and we uh had to have heroic efforts to go",
    "start": "1767440",
    "end": "1773640"
  },
  {
    "text": "through and minimize the impact of those issues on our business so the first thing that we wanted to make sure that",
    "start": "1773640",
    "end": "1779799"
  },
  {
    "text": "we had was a a stable solid infrastructure that was simple for us to maintain as well as allowing us to grow",
    "start": "1779799",
    "end": "1787039"
  },
  {
    "text": "uh as our business grew the second thing is we wanted to focus on development and not infrastructure so we wanted to focus",
    "start": "1787039",
    "end": "1792679"
  },
  {
    "text": "our limited it resources on implementing those Business Solutions that help differentiate ourselves in the market",
    "start": "1792679",
    "end": "1798039"
  },
  {
    "text": "Marketplace and find a partner to help us focus on uh AWS infrastructure then lastly um as part of",
    "start": "1798039",
    "end": "1805640"
  },
  {
    "text": "our role out in our migration to AWS we wanted to adopt a devops mindset so we wanted to implement uh development",
    "start": "1805640",
    "end": "1813000"
  },
  {
    "text": "operations and automation uh from the infrastructure all the way through code deployments we wanted to do this to make",
    "start": "1813000",
    "end": "1819200"
  },
  {
    "text": "things easier for the developers to do their job um as well as increase the quality and stability of our business",
    "start": "1819200",
    "end": "1824960"
  },
  {
    "text": "solutions by implementing things like automated testing and consistent deployments and finally uh we want to",
    "start": "1824960",
    "end": "1830279"
  },
  {
    "text": "focus on compliance so in a world of ever increasing security threats reactive policy and procedure based",
    "start": "1830279",
    "end": "1836360"
  },
  {
    "text": "compliance is just not a VI is not a viable option so we wanted to make sure that we had an infrastructure that was",
    "start": "1836360",
    "end": "1842320"
  },
  {
    "text": "focused on proactive compliance so our solution so first we chose uh Docker and",
    "start": "1842320",
    "end": "1848279"
  },
  {
    "start": "1844000",
    "end": "1894000"
  },
  {
    "text": "ECS which for us was the natural fit as we were implementing a service oriented architecture running lxc containers on",
    "start": "1848279",
    "end": "1855639"
  },
  {
    "text": "premise we also chose logic works as our managed hosting provider because they had expertise and uh competencies in",
    "start": "1855639",
    "end": "1862679"
  },
  {
    "text": "both healthc care and devops and they also had experience implementing Docker",
    "start": "1862679",
    "end": "1868519"
  },
  {
    "text": "and then finally we chose Amazon web service for all of this to run on uh we",
    "start": "1868519",
    "end": "1873639"
  },
  {
    "text": "for a few different reasons so first of all uh AWS has a long history for support on Open Source Products like the",
    "start": "1873639",
    "end": "1880080"
  },
  {
    "text": "ones we use they had a bread of capabilities that existed at that point and a history of delivering increasing",
    "start": "1880080",
    "end": "1887240"
  },
  {
    "text": "uh capability ities over time and they have a very mature and stable platform",
    "start": "1887240",
    "end": "1892399"
  },
  {
    "text": "on which our business can grow so with Docker what what do you get so you know the first thing is you build that Docker",
    "start": "1892399",
    "end": "1899480"
  },
  {
    "start": "1894000",
    "end": "1939000"
  },
  {
    "text": "container once or you build that Docker image you can then use that uh to pick it up and run it",
    "start": "1899480",
    "end": "1905240"
  },
  {
    "text": "anywhere um because the application and",
    "start": "1905240",
    "end": "1910279"
  },
  {
    "text": "the OS dependencies are all packaged together in that Docker container you don't have to worry about missing",
    "start": "1910279",
    "end": "1915360"
  },
  {
    "text": "dependencies and packages as you pick that Sol solution up and run it in in one",
    "start": "1915360",
    "end": "1921399"
  },
  {
    "text": "cluster or another uh because of the the uh sandboxing with Docker it isolates your",
    "start": "1921399",
    "end": "1928399"
  },
  {
    "text": "software and it also uh provides isolation for code failures and then",
    "start": "1928399",
    "end": "1933600"
  },
  {
    "text": "finally uh Docker makes it easier to automate testing integration and packaging so as technologists we often",
    "start": "1933600",
    "end": "1940600"
  },
  {
    "start": "1939000",
    "end": "1966000"
  },
  {
    "text": "get lost in Technologies um I talked to my folks about making sure that we focus on the why uh so we can understand um",
    "start": "1940600",
    "end": "1948440"
  },
  {
    "text": "you know really what we're trying to accomplish with what they're building so Solomon the father of Docker at Docker",
    "start": "1948440",
    "end": "1954600"
  },
  {
    "text": "for Docker conon 14 talked about the essence of Docker and how the essence of Docker is really about the",
    "start": "1954600",
    "end": "1961480"
  },
  {
    "text": "standardization that comes from getting people to agree on things and not the Technologies so some basic terminology",
    "start": "1961480",
    "end": "1968159"
  },
  {
    "start": "1966000",
    "end": "2019000"
  },
  {
    "text": "around Docker um so you'll hear the term Docker Hub uh which you can think of as",
    "start": "1968159",
    "end": "1973519"
  },
  {
    "text": "a GitHub or a you'll also refer to as a repository for your do Docker images um",
    "start": "1973519",
    "end": "1979720"
  },
  {
    "text": "the docker file is the text file that contains the commands uh to build out those Docker images so Chuck talked",
    "start": "1979720",
    "end": "1985919"
  },
  {
    "text": "about uh cloud formation in his presentation and so the docker file in",
    "start": "1985919",
    "end": "1990960"
  },
  {
    "text": "the docker world is that cloud formation so that those are synonymous finally",
    "start": "1990960",
    "end": "1996000"
  },
  {
    "text": "once you've built that Docker image you think of the docker image as that executable that's what you put in that",
    "start": "1996000",
    "end": "2001799"
  },
  {
    "text": "that repository then when you go to actually run copies of that that's where those images get spun up and turned into",
    "start": "2001799",
    "end": "2008880"
  },
  {
    "text": "the actual containers at runtime all that then is managed by your Docker Damon uh which basically uh builds them",
    "start": "2008880",
    "end": "2016320"
  },
  {
    "text": "runs the and distributes those containers for you so our deployment pipeline so Chuck talked earlier about",
    "start": "2016320",
    "end": "2023320"
  },
  {
    "start": "2019000",
    "end": "2100000"
  },
  {
    "text": "um the AWS service catalog and in the event that we need to stand up a new cluster uh which we do on occasion then",
    "start": "2023320",
    "end": "2030919"
  },
  {
    "text": "that would be the first step of this process we would either through API or through the console use the service",
    "start": "2030919",
    "end": "2036240"
  },
  {
    "text": "catalog to stand up a new ECS cluster a lot of times though um we're just redeploy or deploying or redeploying a",
    "start": "2036240",
    "end": "2042919"
  },
  {
    "text": "container into an existing cluster in that case we would start with checking our uh software into our source",
    "start": "2042919",
    "end": "2051280"
  },
  {
    "text": "repository once we do that that would be merged into a branch would kick off a Jenkins build the application artifacts",
    "start": "2051280",
    "end": "2058398"
  },
  {
    "text": "would then be built test cases would be executed to ensure the quality of that application artifact once we had",
    "start": "2058399",
    "end": "2064320"
  },
  {
    "text": "validated the quality of that application artifact we would then go forward with steps three and four which",
    "start": "2064320",
    "end": "2069679"
  },
  {
    "text": "would we pull down the the base image uh Docker image and build the new Docker image at that point we would then push",
    "start": "2069679",
    "end": "2076839"
  },
  {
    "text": "that Docker image up into our Docker repository which is step five there uh we might execute any additional um",
    "start": "2076839",
    "end": "2084440"
  },
  {
    "text": "provisioning activities such as creation of rout 53 entries those sorts of things",
    "start": "2084440",
    "end": "2089679"
  },
  {
    "text": "we would place that uh Docker image in the uh AWS ec2 container service or or",
    "start": "2089679",
    "end": "2096520"
  },
  {
    "text": "ECS and then we would start that service so and as Chuck talked about earlier uh",
    "start": "2096520",
    "end": "2104119"
  },
  {
    "start": "2100000",
    "end": "2132000"
  },
  {
    "text": "service catalog provides uh spring Venture group from a client perspective a consistent ECS ready environment all",
    "start": "2104119",
    "end": "2111560"
  },
  {
    "text": "the controls and everything that logic work has built in from an infrastructure standpoint to ensure Hippa compliance is",
    "start": "2111560",
    "end": "2117720"
  },
  {
    "text": "all there we don't have to worry about that we just execute a command and we get back infrastructure that we know is",
    "start": "2117720",
    "end": "2124960"
  },
  {
    "text": "consistent and there's no delays or friction between the operations devop stack and our development devop stack so",
    "start": "2124960",
    "end": "2133040"
  },
  {
    "start": "2132000",
    "end": "2277000"
  },
  {
    "text": "some key tips for adopting Docker um so automate automate automate so when when",
    "start": "2133040",
    "end": "2139160"
  },
  {
    "text": "you're implementing Docker the the scale very quickly grows with you so when we",
    "start": "2139160",
    "end": "2145240"
  },
  {
    "text": "initially deployed uh midyear last year we had about 25 Docker containers we've",
    "start": "2145240",
    "end": "2150680"
  },
  {
    "text": "about tripled that number uh really with you know within less than a year so you really need to focus on getting that",
    "start": "2150680",
    "end": "2156720"
  },
  {
    "text": "continuous integration continuous deployment Automation in place at least a solid version of that um so that the",
    "start": "2156720",
    "end": "2164520"
  },
  {
    "text": "environment doesn't get away from you uh invest early in service uh Discovery",
    "start": "2164520",
    "end": "2169920"
  },
  {
    "text": "Solutions so this was one of the things that we thought we could get away with without implementing initially um sort",
    "start": "2169920",
    "end": "2175680"
  },
  {
    "text": "of realized after the fact that this was something that we wanted in place and we're now going back and and rolling",
    "start": "2175680",
    "end": "2181440"
  },
  {
    "text": "this out in our infrastructure embracing external configuration isn't necessarily specific",
    "start": "2181440",
    "end": "2186839"
  },
  {
    "text": "to Docker but anytime you can take uh functionality and and push it out or an ability to configure or make changes",
    "start": "2186839",
    "end": "2193200"
  },
  {
    "text": "without redeploying an app that's always a good thing the next bullet point on health checks is really from my",
    "start": "2193200",
    "end": "2199319"
  },
  {
    "text": "perspective the biggest uh gain that we got from implementing uh Docker and ECS",
    "start": "2199319",
    "end": "2204640"
  },
  {
    "text": "so when we implemented the docker health checks we implemented them from looking at the perspective of is the application",
    "start": "2204640",
    "end": "2211960"
  },
  {
    "text": "able to provide the business value that it was intended to provide and we built our health check in that manner and so",
    "start": "2211960",
    "end": "2219200"
  },
  {
    "text": "then when a health check fails we then built a a wrapper around that that we can then look at the fact that that",
    "start": "2219200",
    "end": "2225240"
  },
  {
    "text": "failed and take the appropriate action so for example we could terminate that Docker container and then have e ECS",
    "start": "2225240",
    "end": "2232400"
  },
  {
    "text": "stand up a new Docker container in its place and that last part would happen automatically and just by implementing",
    "start": "2232400",
    "end": "2238920"
  },
  {
    "text": "that one item we've seen an incredible increase in the stability of our infrastructure from our business users",
    "start": "2238920",
    "end": "2244640"
  },
  {
    "text": "perspective right so weird things that might have created a situation in an application where an application became",
    "start": "2244640",
    "end": "2250760"
  },
  {
    "text": "unhealthy those things self-heal at this point and we don't have to you know they don't impact the business and they don't",
    "start": "2250760",
    "end": "2257079"
  },
  {
    "text": "impact a developer or an operations person time to go track it down lastly",
    "start": "2257079",
    "end": "2262240"
  },
  {
    "text": "um when we kick this process off a year and a half ago only the classic load balancers were in place and at this",
    "start": "2262240",
    "end": "2269560"
  },
  {
    "text": "point with application load balancers we're beginning to roll those out so my recommendation would be to head down that route at this",
    "start": "2269560",
    "end": "2275920"
  },
  {
    "text": "point so Dr security with Docker security the first thing is that you're",
    "start": "2275920",
    "end": "2281440"
  },
  {
    "start": "2277000",
    "end": "2389000"
  },
  {
    "text": "going to gain is application uh segregation so what that allows you to do is um minimize the number of os",
    "start": "2281440",
    "end": "2289440"
  },
  {
    "text": "features that exist in each of those Docker containers which thereby reduces the potential attack surfaces of things",
    "start": "2289440",
    "end": "2295680"
  },
  {
    "text": "that can be taken advantage of by a wouldbe hacker uh the next is the fact that Docker environments tend to be very",
    "start": "2295680",
    "end": "2302560"
  },
  {
    "text": "transient so you're standing up a Docker container that's running an application and then periodically you're rebuilding",
    "start": "2302560",
    "end": "2308920"
  },
  {
    "text": "and creating new versions of those Services um in a microservices or a SOA environment so because that your Docker",
    "start": "2308920",
    "end": "2315880"
  },
  {
    "text": "containers T tend not to be longlived and in a lot of cases security vulnerabilities come from the fact that",
    "start": "2315880",
    "end": "2321760"
  },
  {
    "text": "you have environments that live for long periods of time and and don't get patched correctly or can't be patched",
    "start": "2321760",
    "end": "2328319"
  },
  {
    "text": "and and then vulnerabilities then uh come to light um as was talked about",
    "start": "2328319",
    "end": "2333680"
  },
  {
    "text": "earlier these Docker containers are immutable just like with uh the formation templates the docker",
    "start": "2333680",
    "end": "2339000"
  },
  {
    "text": "containers you're going to build them you're going to run and execute tests and ensure that your application works",
    "start": "2339000",
    "end": "2344560"
  },
  {
    "text": "with the docker container that way and then that's what's going to run in your production environment until you replace",
    "start": "2344560",
    "end": "2350200"
  },
  {
    "text": "it with a new version of that Docker container Docker and ECS provide an ability for resource isolation so that",
    "start": "2350200",
    "end": "2356520"
  },
  {
    "text": "you can uh limit the number the amount of memory or CPU any given Docker container would would have to to",
    "start": "2356520",
    "end": "2363480"
  },
  {
    "text": "leverage um having said that uh docker does leverage the a shared kernel on",
    "start": "2363480",
    "end": "2369480"
  },
  {
    "text": "that host so you just need to take that into account as you're thinking about the security of your applications and so",
    "start": "2369480",
    "end": "2375800"
  },
  {
    "text": "if you have services or applications that have significantly different security requirements you might want to",
    "start": "2375800",
    "end": "2382240"
  },
  {
    "text": "think about spreading those apart into different clusters or tagging them so they run different instances those sorts",
    "start": "2382240",
    "end": "2387720"
  },
  {
    "text": "of things so Amazon ECS ec2 container service or ECS is a highly scalable uh",
    "start": "2387720",
    "end": "2395359"
  },
  {
    "start": "2389000",
    "end": "2415000"
  },
  {
    "text": "highly performant container Management Service it's lightweight uh from a from our perspective it eliminates the needs to",
    "start": "2395359",
    "end": "2402359"
  },
  {
    "text": "install and operate the cluster and and the management infrastructure because AWS manages that for us and ECS has no",
    "start": "2402359",
    "end": "2410480"
  },
  {
    "text": "additional charge you just pay for the ec2 instance that run your Docker",
    "start": "2410480",
    "end": "2415680"
  },
  {
    "start": "2415000",
    "end": "2474000"
  },
  {
    "text": "containers so Docker orchestration there's many different types of uh options out there for Docker",
    "start": "2415680",
    "end": "2421920"
  },
  {
    "text": "orchestration we chose Amazon ECS um for our orchestration and and we made a",
    "start": "2421920",
    "end": "2429000"
  },
  {
    "text": "conscious decision when we moved towards uh AWS we made an investment in it and",
    "start": "2429000",
    "end": "2434400"
  },
  {
    "text": "we wanted to make sure we leverage AWS native Solutions wherever possible um",
    "start": "2434400",
    "end": "2439839"
  },
  {
    "text": "again back to that we wanted to focus on the development not the operations so ECS provided a stable maintenance",
    "start": "2439839",
    "end": "2446560"
  },
  {
    "text": "covered solution for us and so in addition it met all of our environment needs um from a ECS Docker perspective",
    "start": "2446560",
    "end": "2455040"
  },
  {
    "text": "we saw a significant Improvement in the stability um of our environment when disposing of containers through these",
    "start": "2455040",
    "end": "2460760"
  },
  {
    "text": "health checks and in addition to that logic Works was there to support and manage our infrastructure so from our",
    "start": "2460760",
    "end": "2467119"
  },
  {
    "text": "perspective we were able to leverage Docker without any worry about managing",
    "start": "2467119",
    "end": "2472319"
  },
  {
    "text": "the orchestration layers so as we talked about earlier we chose to work with logic Works uh to",
    "start": "2472319",
    "end": "2479680"
  },
  {
    "start": "2474000",
    "end": "2580000"
  },
  {
    "text": "expedite our migration to AWS um so we sat down originally with",
    "start": "2479680",
    "end": "2485200"
  },
  {
    "text": "Amazon excuse me with uh with works and talked through our requirements talked",
    "start": "2485200",
    "end": "2491440"
  },
  {
    "text": "about what we were doing how our systems were built based upon that uh logic",
    "start": "2491440",
    "end": "2496560"
  },
  {
    "text": "Works put together an architect architecture that ensured our Hippa uh",
    "start": "2496560",
    "end": "2502119"
  },
  {
    "text": "requirements were being met they then took those requirements built out the infrastructure using their devop stack",
    "start": "2502119",
    "end": "2509680"
  },
  {
    "text": "process and then stood all that environment up we then took that environment and started building our",
    "start": "2509680",
    "end": "2515440"
  },
  {
    "text": "continuous integration continuous Dey employment on automation on top of that um one of the things that is as we",
    "start": "2515440",
    "end": "2523040"
  },
  {
    "text": "continue to grow as an organization uh we are starting to look at doing more and more customer facing um integration",
    "start": "2523040",
    "end": "2530160"
  },
  {
    "text": "and so as as part of that we knew we were going to need more and more 24x7 by",
    "start": "2530160",
    "end": "2535599"
  },
  {
    "text": "365 support in case there was an issue with one of our systems and I didn't",
    "start": "2535599",
    "end": "2540839"
  },
  {
    "text": "want to go out and hire a set of operation staff to manage a knock 24x7 so we got that out of the box with our",
    "start": "2540839",
    "end": "2547400"
  },
  {
    "text": "relationship with logic Works um as we talked about with the service catalog they created that service catalog",
    "start": "2547400",
    "end": "2553640"
  },
  {
    "text": "allowing us to have a one click or API based ability to stand up infrastructure",
    "start": "2553640",
    "end": "2559520"
  },
  {
    "text": "additionally we continue to to use logic Works ongoing for their expertise so as we have new business uh solutions that",
    "start": "2559520",
    "end": "2566440"
  },
  {
    "text": "we need to deliver that may require new leveraging new AWS Services uh we sit",
    "start": "2566440",
    "end": "2571960"
  },
  {
    "text": "down with them talk about how we best do that uh to make sure that we optimize uh the investment that we have with AWS so",
    "start": "2571960",
    "end": "2579760"
  },
  {
    "text": "to kind of begin to wrap up and talk about uh the results of our project overall so we started our migration",
    "start": "2579760",
    "end": "2585559"
  },
  {
    "start": "2580000",
    "end": "2631000"
  },
  {
    "text": "effort uh in February of 2016 of last year uh the whole migration took about",
    "start": "2585559",
    "end": "2590680"
  },
  {
    "text": "five months uh most of that time was us working through building out our",
    "start": "2590680",
    "end": "2595880"
  },
  {
    "text": "continuous integration and continuous deployment stack and really refining that over time um additionally one of",
    "start": "2595880",
    "end": "2602480"
  },
  {
    "text": "the big benefits that we got was building out a separate testing region which we didn't have our on premise",
    "start": "2602480",
    "end": "2608000"
  },
  {
    "text": "environment which has helped us increase the quality of our Solutions as we deliver them to production so we we",
    "start": "2608000",
    "end": "2613559"
  },
  {
    "text": "delivered uh the last the last of the three phases of our migration uh in July",
    "start": "2613559",
    "end": "2618800"
  },
  {
    "text": "of last year we did that with a minimal uh business operational impact we",
    "start": "2618800",
    "end": "2624160"
  },
  {
    "text": "delivered several key uh business deployments in that five-month period of time and we nearly doubled the number of",
    "start": "2624160",
    "end": "2629800"
  },
  {
    "text": "users that our systems were supporting so some key takeaways uh for your team from from my perspective or are kind of",
    "start": "2629800",
    "end": "2637440"
  },
  {
    "start": "2631000",
    "end": "2681000"
  },
  {
    "text": "a client perspective is we talked about before automation is the key uh to doing",
    "start": "2637440",
    "end": "2643400"
  },
  {
    "text": "devops and specifically with with looking at things like SOA microservices and and doing that with a devops",
    "start": "2643400",
    "end": "2649839"
  },
  {
    "text": "environment um you need that to really ensure the efficiencies of your developers on health checks I'd really",
    "start": "2649839",
    "end": "2656079"
  },
  {
    "text": "encourage you to think through what you're doing with those health checks and make sure that they're as robust as you can uh so that you get the most",
    "start": "2656079",
    "end": "2663079"
  },
  {
    "text": "stability out of your platform and finally the kind of the last point is Partnerships are key um there's no way",
    "start": "2663079",
    "end": "2670040"
  },
  {
    "text": "we could have gotten that AWS migration done in the five Monon time frame with",
    "start": "2670040",
    "end": "2675280"
  },
  {
    "text": "the quality of the solution that got delivered uh without our partners at AWS and logic works so finally um we are",
    "start": "2675280",
    "end": "2683359"
  },
  {
    "start": "2681000",
    "end": "2701000"
  },
  {
    "text": "looking for a great devops engineer to help us manage our uh and grow our continuous integration continuous",
    "start": "2683359",
    "end": "2689040"
  },
  {
    "text": "deployment environment and support us with application monitoring so if you know somebody uh there's a link to our",
    "start": "2689040",
    "end": "2694440"
  },
  {
    "text": "career site and we'd be uh happy to have them apply with that Ron I'm going to hand things back over to you for Q&A Jerry thank you",
    "start": "2694440",
    "end": "2701440"
  },
  {
    "start": "2701000",
    "end": "3141000"
  },
  {
    "text": "so much for taking us through the value of containerized architecture in a devops environment so I hope uh the",
    "start": "2701440",
    "end": "2707599"
  },
  {
    "text": "content has been useful for everyone we've got 10 minutes left uh to the hour we covered the concept of devops in",
    "start": "2707599",
    "end": "2713720"
  },
  {
    "text": "general uh the goal you know just to quickly recap is to increase our pace of innovation we talk about the four",
    "start": "2713720",
    "end": "2719680"
  },
  {
    "text": "pillars infras code microservices login monitoring cicd Chuck took us through",
    "start": "2719680",
    "end": "2725520"
  },
  {
    "text": "the value of automation configuration management and also uh a build pipeline",
    "start": "2725520",
    "end": "2730800"
  },
  {
    "text": "Jerry then added added on taking us through the value of containerized architecture using Docker and",
    "start": "2730800",
    "end": "2736640"
  },
  {
    "text": "orchestrating that using Amazon ECS so we have quite a few questions here and we'll go through it as much as possible",
    "start": "2736640",
    "end": "2743280"
  },
  {
    "text": "if we couldn't get to your questions today we will try and follow up as best as we can uh I also would like to",
    "start": "2743280",
    "end": "2749240"
  },
  {
    "text": "welcome Phil Christensen uh he is a Senior Solutions architect from logic Works who'll be helping us uh with some",
    "start": "2749240",
    "end": "2755800"
  },
  {
    "text": "of these questions so let's just go uh go through it so the first question that",
    "start": "2755800",
    "end": "2761280"
  },
  {
    "text": "we have um maybe you know for for Jerry uh Jerry would you mind talking through",
    "start": "2761280",
    "end": "2767599"
  },
  {
    "text": "about uh the docker image a little bit more um in in in a simplistic way what",
    "start": "2767599",
    "end": "2772880"
  },
  {
    "text": "is it what is it for uh what do you do with the docker image sure so um if you really think",
    "start": "2772880",
    "end": "2779920"
  },
  {
    "text": "about um a Docker image it's really the executable so if you think of like um",
    "start": "2779920",
    "end": "2785160"
  },
  {
    "text": "something as simple as uh like word or an application it's that executable and",
    "start": "2785160",
    "end": "2790800"
  },
  {
    "text": "that Docker image is going to encapsulate um you know whatever the application is along with the",
    "start": "2790800",
    "end": "2796559"
  },
  {
    "text": "infrastructure so it's that that uh that application along with the OS all of that stuff packaged up in one thing so",
    "start": "2796559",
    "end": "2804559"
  },
  {
    "text": "that you can pick it up and run it anywhere that you want um so hopefully that provides a",
    "start": "2804559",
    "end": "2811000"
  },
  {
    "text": "little bit of clarity oh absolutely I think essentially it's a container template right uh it has the components",
    "start": "2811000",
    "end": "2817559"
  },
  {
    "text": "of the operating system the apps and all the configuration that you might choose to include as part of the image and",
    "start": "2817559",
    "end": "2823200"
  },
  {
    "text": "therefore you can kind of Spun up different instances based on those images uh another question probably",
    "start": "2823200",
    "end": "2829400"
  },
  {
    "text": "related to that um is docker free is there a cost of using uh Docker as a",
    "start": "2829400",
    "end": "2835240"
  },
  {
    "text": "technology um Docker is an open- Source solution um and again um we're",
    "start": "2835240",
    "end": "2840599"
  },
  {
    "text": "leveraging ECS uh which is aws's um version of Docker and that",
    "start": "2840599",
    "end": "2847000"
  },
  {
    "text": "again as we talked about in the presentation is also free uh you just pay for the the actual runtime execution",
    "start": "2847000",
    "end": "2853800"
  },
  {
    "text": "of your ec2 containers awesome uh we have a question around",
    "start": "2853800",
    "end": "2860400"
  },
  {
    "text": "Amazon ec2 container service or ECS what is an ECS cluster and maybe I'll I'll",
    "start": "2860400",
    "end": "2866640"
  },
  {
    "text": "take a quick step on that and if Jerry or or Phil would like to jump in please please do so uh essentially ec2",
    "start": "2866640",
    "end": "2874040"
  },
  {
    "text": "container service is our AR is our docker container or orchestration service so when it comes to Containers",
    "start": "2874040",
    "end": "2881200"
  },
  {
    "text": "you want to have a orchestrator that spins up those Docker instances those",
    "start": "2881200",
    "end": "2886880"
  },
  {
    "text": "container instances to serve request maybe there are websites maybe there are web services um and manage the life",
    "start": "2886880",
    "end": "2895359"
  },
  {
    "text": "cycle of that when do you want to launch it when do you want to terminate it uh and ECS cluster is really the pool of",
    "start": "2895359",
    "end": "2903400"
  },
  {
    "text": "ec2 instances or the pool of virtual machine instances where you're hosting",
    "start": "2903400",
    "end": "2909680"
  },
  {
    "text": "this Docker container so think of it as another layer of a virtualization you may have and obviously Docker container",
    "start": "2909680",
    "end": "2916720"
  },
  {
    "text": "isn't a virtualization technology but you can think of it as that you may have five Docker instances running on a",
    "start": "2916720",
    "end": "2922960"
  },
  {
    "text": "single ECS instance which is a part of a bigger cluster um Jerry or uh Phil would",
    "start": "2922960",
    "end": "2930040"
  },
  {
    "text": "you like to add anything on top of that around ECS I would u i I would just add the the other additional thing that I",
    "start": "2930040",
    "end": "2935839"
  },
  {
    "text": "think is really important about understanding with a ECS cluster is that that's how you are going to achieve High",
    "start": "2935839",
    "end": "2942000"
  },
  {
    "text": "availability you know we we talk a lot on AWS about availability zones and ensuring if you're if you're trying to",
    "start": "2942000",
    "end": "2948480"
  },
  {
    "text": "have that level of high availability ensuring that you always are across multiple availability zones if you want",
    "start": "2948480",
    "end": "2953640"
  },
  {
    "text": "to have that same kind of redundancy on your Docker cluster you'll want to do the same thing only this time you want",
    "start": "2953640",
    "end": "2959079"
  },
  {
    "text": "to have a Docker container in two places on two different availability zones and",
    "start": "2959079",
    "end": "2965160"
  },
  {
    "text": "the way to do that is to have two ec2 instances and ECS will help you manage",
    "start": "2965160",
    "end": "2970359"
  },
  {
    "text": "that and ensure that those containers are across A's that's a really good point the next question it sounds like",
    "start": "2970359",
    "end": "2977960"
  },
  {
    "text": "we have a lot of uh container related question which is kind of somewhat expected I guess um so question to Jerry",
    "start": "2977960",
    "end": "2986160"
  },
  {
    "text": "Jerry you're very popular today did you build your own application load balancing layer to manage the",
    "start": "2986160",
    "end": "2992160"
  },
  {
    "text": "microservices deployed as containers did you use uh the aw tooling or do you use",
    "start": "2992160",
    "end": "2997680"
  },
  {
    "text": "any other open source framework for the most part we use the classic load balancers as we talked about um and then",
    "start": "2997680",
    "end": "3004960"
  },
  {
    "text": "uh going forward we're looking at using the classic load balancers along with some other Technologies to sort of",
    "start": "3004960",
    "end": "3010680"
  },
  {
    "text": "combine together for that load balancing and I think um for for those who are not familiar with ECS and if you're happen",
    "start": "3010680",
    "end": "3016480"
  },
  {
    "text": "to use ECS you know application load balancer integrate really nicely with Amazon ec2 container services it does",
    "start": "3016480",
    "end": "3023480"
  },
  {
    "text": "the port forwarding for you uh it does the services Discovery through um through DNS uh through URLs so um that",
    "start": "3023480",
    "end": "3032400"
  },
  {
    "text": "that something that I would suggest for you uh to look at as well let's go through a couple here um whatever around",
    "start": "3032400",
    "end": "3038880"
  },
  {
    "text": "security we we touch on security and there's a question here around uh automating security testing as part of",
    "start": "3038880",
    "end": "3046880"
  },
  {
    "text": "the deployment process whether it be a static analysis or dynamic analysis um",
    "start": "3046880",
    "end": "3052960"
  },
  {
    "text": "Phil Jerry do you have any um opinions on that so so I mean I'll jump in real",
    "start": "3052960",
    "end": "3059040"
  },
  {
    "text": "quick Phil and then you can add to it so um absolutely I mean part of your",
    "start": "3059040",
    "end": "3064119"
  },
  {
    "text": "continuous integration pipeline should be um various testing tools and and",
    "start": "3064119",
    "end": "3070400"
  },
  {
    "text": "looking at uh static code analysis and other things from a that automated",
    "start": "3070400",
    "end": "3075440"
  },
  {
    "text": "process should be one of the things that you should be building into your CI stack and uh the reason I was uh",
    "start": "3075440",
    "end": "3082880"
  },
  {
    "text": "accidentally jumping in there was because a similar question came up uh recently as well related to unit testing",
    "start": "3082880",
    "end": "3088720"
  },
  {
    "text": "with regards to your development pipeline um as far as how this fits into the docker uh integration as well and I",
    "start": "3088720",
    "end": "3094799"
  },
  {
    "text": "think this is true for both whether you're doing uh unit tests something as simple as linting or actual security",
    "start": "3094799",
    "end": "3101160"
  },
  {
    "text": "analysis is that uh this is an unusual scenario where I think you're actually going to do the build first and then and",
    "start": "3101160",
    "end": "3107839"
  },
  {
    "text": "analyze the build so you're going to create your Docker container and then run your unit test from within that",
    "start": "3107839",
    "end": "3113119"
  },
  {
    "text": "Docker container run your security test from within that container and so there's a set of ways that you can",
    "start": "3113119",
    "end": "3118319"
  },
  {
    "text": "handle that so that you also achieve some of the um the minimum deployment things that Jerry was talking about uh",
    "start": "3118319",
    "end": "3125559"
  },
  {
    "text": "as in having a base image that is your core application and then having an",
    "start": "3125559",
    "end": "3131520"
  },
  {
    "text": "image that extends from that that includes your unit tests and the other uh security related or testing related",
    "start": "3131520",
    "end": "3137799"
  },
  {
    "text": "items that you might need to run as part of your your deployment pipeline fantastic I think we captured some other",
    "start": "3137799",
    "end": "3145920"
  },
  {
    "start": "3141000",
    "end": "3197000"
  },
  {
    "text": "questions as well well with that answer so we have a lot of things to uh go",
    "start": "3145920",
    "end": "3151319"
  },
  {
    "text": "through and unfortunately we only have 2 minutes left so I'm going to I'm going to perhaps uh save it for follow-ups uh",
    "start": "3151319",
    "end": "3158520"
  },
  {
    "text": "the team is going to try and work hard as much as possible to follow up with every single one of the questions but we",
    "start": "3158520",
    "end": "3163640"
  },
  {
    "text": "do have lots of questions to go through so I apolog apologize if we cannot go through all of them today so I want to I",
    "start": "3163640",
    "end": "3170160"
  },
  {
    "text": "want to share with uh everyone here uh a couple of resources that you might want to look at uh there's a couple of white",
    "start": "3170160",
    "end": "3176280"
  },
  {
    "text": "pap by our friends at logic Works a couple of reference architectures as well as white paper from AWS around using AWS",
    "start": "3176280",
    "end": "3184599"
  },
  {
    "text": "ECS alongside Docker containers uh as well as building up your own cicd Pipeline on AWS uh with that I thank you",
    "start": "3184599",
    "end": "3192480"
  },
  {
    "text": "so much for your uh time today and I look forward to seeing you on the next webinar",
    "start": "3192480",
    "end": "3199319"
  }
]