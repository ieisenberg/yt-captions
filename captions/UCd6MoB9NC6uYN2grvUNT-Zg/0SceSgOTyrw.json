[
  {
    "start": "0",
    "end": "70000"
  },
  {
    "text": "okay I think that means we're ready to start mm-hmm so first off let me thank you very much",
    "start": "1370",
    "end": "6720"
  },
  {
    "text": "for coming and spending some time with us this afternoon obviously this is something we're really really excited to",
    "start": "6720",
    "end": "12090"
  },
  {
    "text": "talk to you about the team has been working on this for a bit and we think it's really going to change the way that",
    "start": "12090",
    "end": "17940"
  },
  {
    "text": "people think about compute and running containers on on AWS and what we're",
    "start": "17940",
    "end": "24000"
  },
  {
    "text": "gonna do today is spend some time and give you a little bit insight into our journey what have we learned over the",
    "start": "24000",
    "end": "29789"
  },
  {
    "text": "last three years of running production container workloads and working with our",
    "start": "29789",
    "end": "36570"
  },
  {
    "text": "customers or who are doing that at really massive scale",
    "start": "36570",
    "end": "41700"
  },
  {
    "text": "what have we learn what do we hear that kind of got us to the point where we thought a technology like eight of us Fargate would would offer a lot of",
    "start": "41700",
    "end": "47940"
  },
  {
    "text": "benefit and value to customers and then we're going to take some time my colleague deepak is going to come on",
    "start": "47940",
    "end": "54420"
  },
  {
    "text": "stage and actually talk really deep into the product how we expect it to work or",
    "start": "54420",
    "end": "60149"
  },
  {
    "text": "what you'll see underneath the hood and we'll actually do a demo of Fargate",
    "start": "60149",
    "end": "65430"
  },
  {
    "text": "running today so to start let me just jump a little",
    "start": "65430",
    "end": "71670"
  },
  {
    "text": "bit in back three years ago because that's about what it was about three years ago almost to the day that we were",
    "start": "71670",
    "end": "77369"
  },
  {
    "text": "here announcing the release of Amazon ECS and when we launched dcs three years",
    "start": "77369",
    "end": "84420"
  },
  {
    "text": "ago we were trying to solve a couple specific problems for customers our customers had started running and using",
    "start": "84420",
    "end": "91920"
  },
  {
    "text": "docker they really loved the user experience about docker a lot of the primitives the docker exposed as far as",
    "start": "91920",
    "end": "97920"
  },
  {
    "text": "how they could build their applications but as they want to run those at scale",
    "start": "97920",
    "end": "102979"
  },
  {
    "text": "they've introduced some new challenges around how to manage applications they were going from monolithic applications",
    "start": "102979",
    "end": "110100"
  },
  {
    "text": "to micro services they were now running hundreds to thousands or tens of",
    "start": "110100",
    "end": "115530"
  },
  {
    "text": "thousands of containers they had to think about managing clusters of resources how to properly make sure that",
    "start": "115530",
    "end": "122009"
  },
  {
    "text": "those nodes were utilized from a cost perspective how to handle failure",
    "start": "122009",
    "end": "127079"
  },
  {
    "text": "scenarios they still had to deal with the the management of infrastructure and",
    "start": "127079",
    "end": "132360"
  },
  {
    "text": "so when we launched DCC our goal was pretty simple we wanted to remove the heavy lifting around that",
    "start": "132360",
    "end": "139439"
  },
  {
    "text": "infrastructure management so customers who were running things like maysa or",
    "start": "139439",
    "end": "144769"
  },
  {
    "text": "zookeeper and had to figure out how to scale those those types of applications we wanted them to use a service a core",
    "start": "144769",
    "end": "153209"
  },
  {
    "text": "set of api's that they could just manage the life cycle of what we call tasks a task is a a group of containers that",
    "start": "153209",
    "end": "161640"
  },
  {
    "text": "make up your application and so that's what we did we focused on a building",
    "start": "161640",
    "end": "169049"
  },
  {
    "start": "165000",
    "end": "202000"
  },
  {
    "text": "ECS we launched that three years ago and we've learned quite a bit from the use",
    "start": "169049",
    "end": "174090"
  },
  {
    "text": "cases that customers have brought to this product one of the first obvious ones is to run a reliable container",
    "start": "174090",
    "end": "180359"
  },
  {
    "text": "based infrastructure as you need a reliable container registry and so the",
    "start": "180359",
    "end": "185730"
  },
  {
    "text": "following year reinvents in 2015 we announced Amazon Elastic container registry or ECR and the goal there was",
    "start": "185730",
    "end": "192959"
  },
  {
    "text": "to provide a really high performance secure private repository where",
    "start": "192959",
    "end": "198480"
  },
  {
    "text": "customers could store their images and after that what we learned is this",
    "start": "198480",
    "end": "206430"
  },
  {
    "text": "ecosystem really allowed customers to start to scale the applications they",
    "start": "206430",
    "end": "211500"
  },
  {
    "text": "took advantage of the primitives that that doctor provided early on the packaging the distribution model the",
    "start": "211500",
    "end": "217590"
  },
  {
    "text": "immutable infrastructure and that led to this really fast growth of container",
    "start": "217590",
    "end": "226530"
  },
  {
    "text": "based workloads on AWS today in the last since - 2016 we've seen active usage",
    "start": "226530",
    "end": "233910"
  },
  {
    "text": "grow by four hundred and fifty percent on ECS we're running hundreds of millions of containers each week",
    "start": "233910",
    "end": "240269"
  },
  {
    "text": "launching these across millions of instances so that's really bringing",
    "start": "240269",
    "end": "246359"
  },
  {
    "text": "use-cases up to our right right to our doorstep and saying hey these are new",
    "start": "246359",
    "end": "251729"
  },
  {
    "text": "problems that as you're running were closed of this scale and trying to use containers like you got to go solve right we have to go solve these for",
    "start": "251729",
    "end": "257849"
  },
  {
    "text": "customers so what we've done over the last couple years their first goal was to give you the same power that you get",
    "start": "257849",
    "end": "264719"
  },
  {
    "text": "when you're using an ec2 instance all the the Prem that you got accustomed to building your applications we've been working to make",
    "start": "264719",
    "end": "270630"
  },
  {
    "text": "those operate at the test level so things like VPC networking which we launched a couple weeks ago you get all",
    "start": "270630",
    "end": "277380"
  },
  {
    "text": "the value and power of AWS PPC now at the task primitive things like our task",
    "start": "277380",
    "end": "283169"
  },
  {
    "text": "placement engine which we launched at the end of last year where he can do preformed algorithms around bin packing",
    "start": "283169",
    "end": "289349"
  },
  {
    "text": "or high availability placement of tasks run things across distinct instances",
    "start": "289349",
    "end": "294530"
  },
  {
    "text": "we've invested in powerful scheduling engines right where you can run millions of containers and a single cluster we've",
    "start": "294530",
    "end": "303090"
  },
  {
    "text": "expanded to be in thirteen or fourteen different regions eight of us regions we realize that now customers including",
    "start": "303090",
    "end": "309810"
  },
  {
    "text": "internal Atos teams are building on top of ECS as a Tier one service we've just got to be everywhere right so we",
    "start": "309810",
    "end": "315180"
  },
  {
    "text": "invested in making sure that our service was available in in a global manner integration with things that are just",
    "start": "315180",
    "end": "321840"
  },
  {
    "text": "core functionality if you're going to build an application today things like load balancers and auto scaling",
    "start": "321840",
    "end": "328250"
  },
  {
    "text": "visibility through cloud watch metrics and cloud cloud watch logs we also built",
    "start": "328250",
    "end": "334770"
  },
  {
    "text": "a CLI that allows you to help with the transition a lot of our customers were getting started and coming from working",
    "start": "334770",
    "end": "342150"
  },
  {
    "text": "with docker on their laptop they use docker compose we want to make that a seamless experience so that they can use",
    "start": "342150",
    "end": "347789"
  },
  {
    "text": "a composed AML file and easily get started setting up an ECS cluster and running tasks on top of ECS so this kept",
    "start": "347789",
    "end": "356130"
  },
  {
    "text": "us pretty busy and in the first couple years what we were able to do is deliver",
    "start": "356130",
    "end": "363150"
  },
  {
    "text": "50 features or more than 50 features to build up this ecosystem it's really with",
    "start": "363150",
    "end": "368340"
  },
  {
    "text": "the goal of making the task a primitive that our customers can operate at I like",
    "start": "368340",
    "end": "373380"
  },
  {
    "text": "this little flywheel if you've seen some Amazon presentations before you might have seen a fly or something similar to",
    "start": "373380",
    "end": "378599"
  },
  {
    "text": "this but really is this how we think about this as from from our team perspective the building of these",
    "start": "378599",
    "end": "385500"
  },
  {
    "text": "features and getting these into our customers hands opens up new use cases and feedback that we can learn from the",
    "start": "385500",
    "end": "391469"
  },
  {
    "text": "more we learn the more that our team takes that information from you guys and and we'd try and experiment we try and",
    "start": "391469",
    "end": "398339"
  },
  {
    "text": "build new technologies new features we get those back into your hands and now some of",
    "start": "398339",
    "end": "403729"
  },
  {
    "text": "this flywheel spinning pretty quickly because we're just getting a ton of information right especially at scale",
    "start": "403729",
    "end": "409490"
  },
  {
    "text": "with all the customer growth and the number of containers that are running across native s today it's just really",
    "start": "409490",
    "end": "416030"
  },
  {
    "text": "been a pouring of feedback that's allowed us to think about what should we go build next what's that next big",
    "start": "416030",
    "end": "421790"
  },
  {
    "text": "problem that we can solve that allows you to operate more efficiently and build applications in this new manner",
    "start": "421790",
    "end": "429320"
  },
  {
    "start": "429000",
    "end": "482000"
  },
  {
    "text": "and so what the big lesson we've learned and we feel is you know fairly obvious",
    "start": "429320",
    "end": "436970"
  },
  {
    "text": "was the more we encouraged and built primitives that are based off of the task the more our customers just wanted",
    "start": "436970",
    "end": "443240"
  },
  {
    "text": "to build their applications and think about applications in that level they never wanted to think about the ec2 infrastructure anymore right they wanted",
    "start": "443240",
    "end": "450530"
  },
  {
    "text": "to think about modeling their application in the task definition they want to think about things above that",
    "start": "450530",
    "end": "456949"
  },
  {
    "text": "stack how these applications can talk to each other things like service discovery",
    "start": "456949",
    "end": "462190"
  },
  {
    "text": "they want to think about how to run that application and build it so that it's highly available but underneath right",
    "start": "462190",
    "end": "468620"
  },
  {
    "text": "the ec2 instance management the managing the clusters the patching the operating",
    "start": "468620",
    "end": "473990"
  },
  {
    "text": "systems handling the lifecycle of those nodes that was another layer of undifferentiated heavy lifting that we",
    "start": "473990",
    "end": "479780"
  },
  {
    "text": "still hadn't solved for customers and so that's why we built forgave and that's",
    "start": "479780",
    "end": "485599"
  },
  {
    "start": "482000",
    "end": "533000"
  },
  {
    "text": "what Andy announced today and we're really really excited about it because what we think that this solves is giving",
    "start": "485599",
    "end": "491780"
  },
  {
    "text": "you a new primitive a new compute primitive to really build your applications around there's no more",
    "start": "491780",
    "end": "498560"
  },
  {
    "text": "infrastructure management to worry about we kept the cluster model and construct",
    "start": "498560",
    "end": "504050"
  },
  {
    "text": "because we wanted to give you a secure way to run these containers an isolation boundary is that pattern what you do",
    "start": "504050",
    "end": "510680"
  },
  {
    "text": "with ECS today so that that isolation boundary spans you can have heterogeneous clusters where you're running ECS tasks as you do today and",
    "start": "510680",
    "end": "517339"
  },
  {
    "text": "now for a gate tasks and deepak will get in a lot more detail as he dives deeper into the product but we kept the cluster",
    "start": "517339",
    "end": "524930"
  },
  {
    "text": "concept simply as an organizational or security boundary but inside of that when you're running forged tests there's",
    "start": "524930",
    "end": "530750"
  },
  {
    "text": "now no more for structure for you to manage so really there's three key takeaways no",
    "start": "530750",
    "end": "535970"
  },
  {
    "start": "533000",
    "end": "565000"
  },
  {
    "text": "more instance management you get a task native API experience and now with that",
    "start": "535970",
    "end": "541370"
  },
  {
    "text": "allowed us to do is change the entire consumption model now you don't need to think about ec2 instances all you do is",
    "start": "541370",
    "end": "546620"
  },
  {
    "text": "pay for the CPU and the memory that you provision per task at the per second",
    "start": "546620",
    "end": "552500"
  },
  {
    "text": "level right so that's how this product is designed and built to work and so we",
    "start": "552500",
    "end": "558740"
  },
  {
    "text": "think that it provides a simple easy to use yet still extremely powerful way to run your applications and your",
    "start": "558740",
    "end": "564560"
  },
  {
    "text": "containers so we talked about investing to make the task a primitive with ECS",
    "start": "564560",
    "end": "571670"
  },
  {
    "start": "565000",
    "end": "615000"
  },
  {
    "text": "what happens with our game well is yes it's still the powerful engine forget is",
    "start": "571670",
    "end": "577040"
  },
  {
    "text": "just a technology that we've built that really sits on top of ease yes so in",
    "start": "577040",
    "end": "582320"
  },
  {
    "text": "this case all the things that we've been working on in the last couple years to give you you know powerful networking",
    "start": "582320",
    "end": "587930"
  },
  {
    "text": "capabilities with VPC the load balancers the ability of scale your infrastructure",
    "start": "587930",
    "end": "593780"
  },
  {
    "text": "or now your tasks that stuff all just works it's still continued to work the same way that it worked with ease yes",
    "start": "593780",
    "end": "599960"
  },
  {
    "text": "and it will continue to work when you're running for our gate tasks they kind of get that for free as part of the process",
    "start": "599960",
    "end": "605060"
  },
  {
    "text": "we're not starting from scratch those those integrations are all there as of",
    "start": "605060",
    "end": "610250"
  },
  {
    "text": "today when we announced general availability earlier this morning so",
    "start": "610250",
    "end": "616700"
  },
  {
    "start": "615000",
    "end": "648000"
  },
  {
    "text": "what about eks you heard us talked about our new managed communities offering well we want to make this technology",
    "start": "616700",
    "end": "623830"
  },
  {
    "text": "database Fargate work across orchestration so our goal in 2018 is to",
    "start": "623830",
    "end": "629570"
  },
  {
    "text": "make it such that you can use Fargate with communities clusters as well so we're pretty excited about that and",
    "start": "629570",
    "end": "634880"
  },
  {
    "text": "really the goal there is to give you choice whether you want to use ECS of the orchestration we want as kubernetes",
    "start": "634880",
    "end": "640780"
  },
  {
    "text": "it's your choice which engine to use we're going to make it such that Fargate enables all those use cases",
    "start": "640780",
    "end": "648730"
  },
  {
    "start": "648000",
    "end": "707000"
  },
  {
    "text": "great would you like to learn more and actually see a live demo ok awesome so",
    "start": "649090",
    "end": "655040"
  },
  {
    "text": "let me invite up deepak he's been working on this product leading the the the product definition and he's going to",
    "start": "655040",
    "end": "661160"
  },
  {
    "text": "take you through where we ended up what we're excited to talked about today and a demo hi everyone my name is deepak",
    "start": "661160",
    "end": "673580"
  },
  {
    "text": "i'ma product manager in the container services team very excited to be here and talk about Fargate so we will",
    "start": "673580",
    "end": "680930"
  },
  {
    "text": "discuss some of the use cases for Fargate how it works and demo and visit",
    "start": "680930",
    "end": "687440"
  },
  {
    "text": "some of the key product features Fargate if you look at the use cases that you",
    "start": "687440",
    "end": "693380"
  },
  {
    "text": "can address with Fargate it really addresses the breadth of use cases that",
    "start": "693380",
    "end": "699380"
  },
  {
    "text": "you can do with containers today for example if you look at micro services",
    "start": "699380",
    "end": "708040"
  },
  {
    "start": "707000",
    "end": "748000"
  },
  {
    "text": "micro services by definition are independently deployable services that",
    "start": "708040",
    "end": "714350"
  },
  {
    "text": "work together modern around a single business domain what a platform like ECS",
    "start": "714350",
    "end": "721730"
  },
  {
    "text": "does and Fargate enables you even further to do is to let developers be",
    "start": "721730",
    "end": "729050"
  },
  {
    "text": "able to who are working on these applications be able to choose their deployment cadence and scaling",
    "start": "729050",
    "end": "735829"
  },
  {
    "text": "requirements without any additional infrastructural considerations similarly",
    "start": "735829",
    "end": "745279"
  },
  {
    "text": "another case that we see is around bad jobs if you are running jobs that are",
    "start": "745279",
    "end": "752029"
  },
  {
    "text": "maybe shorter lived are intermittent and you don't know when they would start up",
    "start": "752029",
    "end": "758060"
  },
  {
    "text": "and you typically have to provision clusters standup these come this compute",
    "start": "758060",
    "end": "763640"
  },
  {
    "text": "capacity in advance of running these jobs now that does not become a consideration anymore and lastly if you",
    "start": "763640",
    "end": "775130"
  },
  {
    "start": "772000",
    "end": "810000"
  },
  {
    "text": "look at containers itself they are an excellent way to be able to port",
    "start": "775130",
    "end": "780829"
  },
  {
    "text": "applications not only between environments such as your local",
    "start": "780829",
    "end": "786290"
  },
  {
    "text": "environment and dev and prod but also do a lift and shift on/off from on-premises",
    "start": "786290",
    "end": "792350"
  },
  {
    "text": "to the cloud and if you are doing that you probably have been",
    "start": "792350",
    "end": "797610"
  },
  {
    "text": "infrastructure in the pond premises you don't want to do that again so far gate enables you to be able to focus on the",
    "start": "797610",
    "end": "805890"
  },
  {
    "text": "container and the application so use",
    "start": "805890",
    "end": "812460"
  },
  {
    "text": "cases are good but how do I run these containers on far gate Anthony discussed",
    "start": "812460",
    "end": "817800"
  },
  {
    "text": "earlier about a thinking behind building Fargate and how it eliminates",
    "start": "817800",
    "end": "823670"
  },
  {
    "text": "undifferentiated heavy lifting of infrastructure when it comes to running",
    "start": "823670",
    "end": "829680"
  },
  {
    "text": "containerized workloads we now want to discuss how far gate can be used in",
    "start": "829680",
    "end": "836520"
  },
  {
    "text": "action as mentioned earlier we have",
    "start": "836520",
    "end": "842310"
  },
  {
    "text": "launched our gate today with support for Amazon ECS with plants",
    "start": "842310",
    "end": "848580"
  },
  {
    "text": "to be able to support eks in 2018 so we will discuss for the purpose of this",
    "start": "848580",
    "end": "854460"
  },
  {
    "text": "session how it works with ECS and demo that so if you want to start a container",
    "start": "854460",
    "end": "865100"
  },
  {
    "text": "that should be pretty easy couple of commands you can get going on your local",
    "start": "865100",
    "end": "870270"
  },
  {
    "text": "environment not much effort required you want to spin up containers in the cloud",
    "start": "870270",
    "end": "876840"
  },
  {
    "start": "872000",
    "end": "914000"
  },
  {
    "text": "that's pretty straight out straightforward to you can launch a few instances spin up your containers in a",
    "start": "876840",
    "end": "883200"
  },
  {
    "text": "similar way but that works for a few dozens of containers perhaps but as you",
    "start": "883200",
    "end": "891330"
  },
  {
    "text": "think about scaling this and managing this say you have hundreds of instances",
    "start": "891330",
    "end": "897480"
  },
  {
    "text": "and dozens of applications running on them and you want to have high",
    "start": "897480",
    "end": "902820"
  },
  {
    "text": "availability and you want to manage the lifecycle of these instances and",
    "start": "902820",
    "end": "907890"
  },
  {
    "text": "placement of your containers so this doesn't scale so you want to run let's",
    "start": "907890",
    "end": "916170"
  },
  {
    "start": "914000",
    "end": "928000"
  },
  {
    "text": "say an application that spans three availability zones in a highly resilient fashion easiest enables you to be able",
    "start": "916170",
    "end": "925620"
  },
  {
    "text": "to operationalize this so the cluster management piece in ECS",
    "start": "925620",
    "end": "933269"
  },
  {
    "text": "enabled you to monitor the cluster scale it using auto scaling groups and be able",
    "start": "933269",
    "end": "939819"
  },
  {
    "text": "to manage the state and take actions based on the instance state in the cluster secondly now that your cluster",
    "start": "939819",
    "end": "947769"
  },
  {
    "text": "management has taken care of you now want to take care of placing your container or the containers or tasks in",
    "start": "947769",
    "end": "955120"
  },
  {
    "text": "ECS speak on these instances the placement engine enables you to be able",
    "start": "955120",
    "end": "960759"
  },
  {
    "text": "to do that based on your preferences whether that is to get bin packing on the instances you are running or to be",
    "start": "960759",
    "end": "967569"
  },
  {
    "text": "able to get a Z spread for high resiliency and finally the advanced",
    "start": "967569",
    "end": "973480"
  },
  {
    "text": "scheduling features enable you to be able to maintain the desired state of",
    "start": "973480",
    "end": "980350"
  },
  {
    "text": "the service that you are running whether it is a minimum desired count that the",
    "start": "980350",
    "end": "985660"
  },
  {
    "text": "service should have at all times or be able to respond to scaling events and launch more tasks the service scheduler",
    "start": "985660",
    "end": "993160"
  },
  {
    "text": "is aware of these definitions at the service level and takes actions based on",
    "start": "993160",
    "end": "998860"
  },
  {
    "text": "that so this enables you as Anthony mentioned earlier to run we have seen",
    "start": "998860",
    "end": "1004860"
  },
  {
    "start": "1003000",
    "end": "1027000"
  },
  {
    "text": "run running hundreds of millions of containers every week but if you double click on that in those instances there's",
    "start": "1004860",
    "end": "1012240"
  },
  {
    "text": "another layer of management that you have to do you have to manage the docker daemon to worry about the version that",
    "start": "1012240",
    "end": "1018180"
  },
  {
    "text": "you're running there you have to manage the underlying operating system ensure its passed and up to the latest security",
    "start": "1018180",
    "end": "1025100"
  },
  {
    "text": "security patches so if you really look at it there are these multiple layers of",
    "start": "1025100",
    "end": "1032159"
  },
  {
    "start": "1027000",
    "end": "1059000"
  },
  {
    "text": "management so as you try to scale you",
    "start": "1032159",
    "end": "1038788"
  },
  {
    "text": "did not want to run all these layers of management all you wanted to do was run containers Fargate enables you to do",
    "start": "1038789",
    "end": "1047038"
  },
  {
    "text": "just that it's a so with easy SM Fargate",
    "start": "1047039",
    "end": "1052230"
  },
  {
    "text": "you get a fully managed orchestration as well as data plain experience bringing",
    "start": "1052230",
    "end": "1058140"
  },
  {
    "text": "your focus back to the container as you notice there are no more instances",
    "start": "1058140",
    "end": "1063790"
  },
  {
    "start": "1059000",
    "end": "1079000"
  },
  {
    "text": "you just see these tasks being placed in the availability zones that you want and",
    "start": "1063790",
    "end": "1070020"
  },
  {
    "text": "you can still leverage the service service scheduling and orchestration",
    "start": "1070020",
    "end": "1076030"
  },
  {
    "text": "capabilities of ECS so let's talk about",
    "start": "1076030",
    "end": "1082030"
  },
  {
    "start": "1079000",
    "end": "1135000"
  },
  {
    "text": "how to use Fargate with EECS you want to think about Fargate as a technology and",
    "start": "1082030",
    "end": "1088180"
  },
  {
    "text": "not a different service per se when using it with ECS there is no new API or",
    "start": "1088180",
    "end": "1094090"
  },
  {
    "text": "primitives to learn here's a screenshot of ECS when you define an application",
    "start": "1094090",
    "end": "1100480"
  },
  {
    "text": "you get a choice whether you want to run that application as a SES launch type or",
    "start": "1100480",
    "end": "1106750"
  },
  {
    "text": "forget launch type if you want to run your containers on the ec2 instances as",
    "start": "1106750",
    "end": "1112600"
  },
  {
    "text": "you would have been would do until today that is called the ec2 launch type",
    "start": "1112600",
    "end": "1118770"
  },
  {
    "text": "similarly the the API is remains the same when it comes to running these",
    "start": "1118770",
    "end": "1124090"
  },
  {
    "text": "tasks and services it's just a new parameter that you define at the time of",
    "start": "1124090",
    "end": "1130180"
  },
  {
    "text": "launching which is say launch type Fargate so you continue to define the",
    "start": "1130180",
    "end": "1138670"
  },
  {
    "start": "1135000",
    "end": "1184000"
  },
  {
    "text": "applications as you do today for ECS it is the same application definition",
    "start": "1138670",
    "end": "1143680"
  },
  {
    "text": "Skiba obviously there are some compatibility considerations so you cannot run your tasks in let's say a",
    "start": "1143680",
    "end": "1150910"
  },
  {
    "text": "privileged mode there are also networking considerations that I will I will get to in a little bit but you",
    "start": "1150910",
    "end": "1158170"
  },
  {
    "text": "don't have any additional plug-in to be able to run your containers with fergie and you can continue to leverage the",
    "start": "1158170",
    "end": "1164260"
  },
  {
    "text": "same constructs so migration between ec2 and Fargate launch types is rather",
    "start": "1164260",
    "end": "1172660"
  },
  {
    "text": "simple and in that case you you have the flexibility to be able to pick the",
    "start": "1172660",
    "end": "1179290"
  },
  {
    "text": "launch type that meets your application needs the best so let's do a quick demo",
    "start": "1179290",
    "end": "1188670"
  },
  {
    "start": "1184000",
    "end": "1218000"
  },
  {
    "text": "okay so let me just switched it so in",
    "start": "1214910",
    "end": "1220670"
  },
  {
    "start": "1218000",
    "end": "1273000"
  },
  {
    "text": "this demo I'll just go over the CLI experience with Fargate we just today we",
    "start": "1220670",
    "end": "1228560"
  },
  {
    "text": "release pcs CLI version 1.1 it simplifies a lot of the setup cluster",
    "start": "1228560",
    "end": "1235640"
  },
  {
    "text": "configuration V PC setup for your applications when using with ECS so it's",
    "start": "1235640",
    "end": "1242600"
  },
  {
    "text": "sort of setup sets up your cloud formation stack for you so you don't have to do all that word so for purpose",
    "start": "1242600",
    "end": "1250940"
  },
  {
    "text": "of this demonstration I have already set up a cluster using a default launch type called Fargate just to save time and not",
    "start": "1250940",
    "end": "1258320"
  },
  {
    "text": "wait for V pcs and subnets and Internet gateways being created while we wait and",
    "start": "1258320",
    "end": "1264440"
  },
  {
    "text": "then I set up the cluster just product up and I defined a application as a",
    "start": "1264440",
    "end": "1270500"
  },
  {
    "text": "compose file so let's just look at that I have the image sitting in ECR and I've",
    "start": "1270500",
    "end": "1278120"
  },
  {
    "start": "1273000",
    "end": "1297000"
  },
  {
    "text": "mapped the ports to 80 for the for the e and I'll come to networking later and we",
    "start": "1278120",
    "end": "1284270"
  },
  {
    "text": "are using cloud watch logs here which is AWS logs driver and this is the group",
    "start": "1284270",
    "end": "1289790"
  },
  {
    "text": "group prefix and the stream prefix that we are going to use in us east one once",
    "start": "1289790",
    "end": "1298280"
  },
  {
    "start": "1297000",
    "end": "1364000"
  },
  {
    "text": "you have defined your application from a composed standpoint you only have to do",
    "start": "1298280",
    "end": "1305410"
  },
  {
    "text": "so it brings up a new task for me in the ACA as Fargate launch type because I",
    "start": "1311340",
    "end": "1317440"
  },
  {
    "text": "already defined that my preference launch type for this cluster is of ECS launch type there is more work that i'm",
    "start": "1317440",
    "end": "1324700"
  },
  {
    "text": "so i'm shooting a little back again with respect to defining the ECS specifics of",
    "start": "1324700",
    "end": "1330549"
  },
  {
    "text": "this task that you are launching with respect to ECS what you want to define",
    "start": "1330549",
    "end": "1336970"
  },
  {
    "text": "is the CPU and memory resources at the task level this is again a new resource",
    "start": "1336970",
    "end": "1345309"
  },
  {
    "text": "that we have introduced for Fargate until now you defined only at the container level and also the networking",
    "start": "1345309",
    "end": "1351099"
  },
  {
    "text": "configuration where do you want us to place this task and this is within your VPC within your subnet so i've also",
    "start": "1351099",
    "end": "1359590"
  },
  {
    "text": "specified security groups to meet my application requirements over here",
    "start": "1359590",
    "end": "1365129"
  },
  {
    "text": "switching to the console a little bit if you look at the clusters the clusters",
    "start": "1365190",
    "end": "1372460"
  },
  {
    "text": "here are really heterogeneous you can run Fargate tasks you can run ECS tasks and services side-by-side so cluster",
    "start": "1372460",
    "end": "1380289"
  },
  {
    "text": "becomes this administrative boundary where you're running all these tasks let's go and check on the tasks that we",
    "start": "1380289",
    "end": "1387549"
  },
  {
    "text": "just launched so this is the container that we just launched by the way I do",
    "start": "1387549",
    "end": "1394119"
  },
  {
    "text": "want to go back and talk about the the logging experience we also have a new",
    "start": "1394119",
    "end": "1401590"
  },
  {
    "text": "role that we have introduced at the tasks level which is the task execution role this enables us as easy a service",
    "start": "1401590",
    "end": "1409149"
  },
  {
    "text": "to take certain actions on your behalf let's see so going to the cluster level",
    "start": "1409149",
    "end": "1420419"
  },
  {
    "start": "1413000",
    "end": "1470000"
  },
  {
    "text": "internet is a little slow ok so let's do a PS real quick this is my task",
    "start": "1421859",
    "end": "1430210"
  },
  {
    "text": "definition ID and I can just see which",
    "start": "1430210",
    "end": "1435309"
  },
  {
    "text": "tasks are running so I just brought up the stars over here",
    "start": "1435309",
    "end": "1443600"
  },
  {
    "text": "and it came up with a public IP so I defined in my networking configuration",
    "start": "1443600",
    "end": "1450540"
  },
  {
    "text": "that I want to bring up this task with a public IP this is again a new capability",
    "start": "1450540",
    "end": "1456950"
  },
  {
    "text": "that we are introducing with Fargate so I go back here let's see what the",
    "start": "1456950",
    "end": "1465500"
  },
  {
    "text": "weather the app is up and running and we",
    "start": "1465500",
    "end": "1471500"
  },
  {
    "text": "have a WordPress running so this is a quick demo of how Fargate tasks can be",
    "start": "1471500",
    "end": "1479550"
  },
  {
    "text": "spun up there if you look at the en eyes let's just go into the console real quick look at the task and the task that",
    "start": "1479550",
    "end": "1487260"
  },
  {
    "text": "we just brought up it was this one for target demo you have a dedicated en I to",
    "start": "1487260",
    "end": "1493020"
  },
  {
    "text": "the task so you just have a task and a ye and I that's all you need to manage",
    "start": "1493020",
    "end": "1499429"
  },
  {
    "text": "[Applause]",
    "start": "1507670",
    "end": "1515440"
  },
  {
    "start": "1515000",
    "end": "1526000"
  },
  {
    "text": "so now we looked at the demo let's with it some of the key product features",
    "start": "1515440",
    "end": "1521210"
  },
  {
    "text": "you'll begin with networking as I just showed you can have a task spin up with",
    "start": "1521210",
    "end": "1528380"
  },
  {
    "start": "1526000",
    "end": "1624000"
  },
  {
    "text": "just an e and I in a subnet that you designate us to place it in with a",
    "start": "1528380",
    "end": "1534080"
  },
  {
    "text": "public IP here it is working with a Internet gateway and you can spin it up with you know you can spin it up across",
    "start": "1534080",
    "end": "1541280"
  },
  {
    "text": "multiple AZ's and subnets it's really a placement time consideration as far as",
    "start": "1541280",
    "end": "1549040"
  },
  {
    "text": "your run task or service bringing your service up is concerned so in the farm",
    "start": "1549040",
    "end": "1556160"
  },
  {
    "text": "far gate model even though there are no instances to manage each task gets its",
    "start": "1556160",
    "end": "1563150"
  },
  {
    "text": "own en I in a separate network namespace that namespace is shared by containers",
    "start": "1563150",
    "end": "1569690"
  },
  {
    "text": "within that same task this is a recently launched feature as Anthony was mentioning it is called AWS V PC mode",
    "start": "1569690",
    "end": "1576860"
  },
  {
    "text": "and it is a default way and rather the only way of running your tasks with",
    "start": "1576860",
    "end": "1583880"
  },
  {
    "text": "Fargate this provides the level of separation and of responsibility when it",
    "start": "1583880",
    "end": "1592130"
  },
  {
    "text": "comes to managing the security of your tasks because as you as a user while you",
    "start": "1592130",
    "end": "1597530"
  },
  {
    "text": "don't have to worry about the infrastructure anymore you have complete control over the",
    "start": "1597530",
    "end": "1602960"
  },
  {
    "text": "networking policies the routing well and you know why security groups and",
    "start": "1602960",
    "end": "1607970"
  },
  {
    "text": "knackles for what your task communicates with",
    "start": "1607970",
    "end": "1613360"
  },
  {
    "text": "let's go to the next round we are leveraging the cni plugin which",
    "start": "1620530",
    "end": "1627940"
  },
  {
    "start": "1624000",
    "end": "1674000"
  },
  {
    "text": "is part of the CNC a foundation by the way for the purposes of implementing this we also see a lot of customers take",
    "start": "1627940",
    "end": "1635380"
  },
  {
    "text": "advantage of the capabilities of the application load balancer and the",
    "start": "1635380",
    "end": "1641770"
  },
  {
    "text": "recently launched network load balancer you can continue to use them in the same",
    "start": "1641770",
    "end": "1647920"
  },
  {
    "text": "way as ECS service integration provides today you register your target types",
    "start": "1647920",
    "end": "1653710"
  },
  {
    "text": "with your load balancer on the back end and you see a service scheduler is able",
    "start": "1653710",
    "end": "1659770"
  },
  {
    "text": "to register them with your with your load balancers in the case of Fargate",
    "start": "1659770",
    "end": "1666070"
  },
  {
    "text": "though you have to register with your IPS because you cannot give a target type of instances anymore so we talked",
    "start": "1666070",
    "end": "1676000"
  },
  {
    "text": "about security and the network level isolation and how it Fargate tasks and",
    "start": "1676000",
    "end": "1681820"
  },
  {
    "text": "run in your vb sees but let's also talk about the level of isolation and how you",
    "start": "1681820",
    "end": "1688450"
  },
  {
    "text": "could think about it when planning your clusters with ECS and Fargate so we",
    "start": "1688450",
    "end": "1697540"
  },
  {
    "start": "1695000",
    "end": "1773000"
  },
  {
    "text": "continue to use the notion of a cluster in Fargate even though the cluster doesn't really have to have any",
    "start": "1697540",
    "end": "1705120"
  },
  {
    "text": "instances registered with it so in this case I have four different clusters",
    "start": "1705120",
    "end": "1711730"
  },
  {
    "text": "under the same account in the same region in ECS with ec2 launched type the",
    "start": "1711730",
    "end": "1720610"
  },
  {
    "text": "way it works is you register your instances with the cluster and all these",
    "start": "1720610",
    "end": "1725890"
  },
  {
    "text": "instances that are part of the cluster they can run any of these applications",
    "start": "1725890",
    "end": "1731380"
  },
  {
    "text": "and you can control the placement of them so with respect to isolation you",
    "start": "1731380",
    "end": "1738340"
  },
  {
    "text": "get the same level of isolation in the prod cluster as with ECS mode as you do",
    "start": "1738340",
    "end": "1746350"
  },
  {
    "text": "with Fargate so in this case your proud fraud cluster may have the same",
    "start": "1746350",
    "end": "1753160"
  },
  {
    "text": "underlying infrastructure only for the applications running within it the notification application running in",
    "start": "1753160",
    "end": "1760080"
  },
  {
    "text": "the prod cluster in top-left will not share the infrastructure with any other",
    "start": "1760080",
    "end": "1765480"
  },
  {
    "text": "tasks in the dev QA or beta clusters",
    "start": "1765480",
    "end": "1771710"
  },
  {
    "start": "1773000",
    "end": "1860000"
  },
  {
    "text": "with respect to permission tiers again it goes by the what you want who do you",
    "start": "1774620",
    "end": "1780450"
  },
  {
    "text": "want to to be able to run tasks or view tasks and services within your cluster",
    "start": "1780450",
    "end": "1785910"
  },
  {
    "text": "so you maintain your cluster as the administrative boundary regardless of which launch type you are using ECS",
    "start": "1785910",
    "end": "1793440"
  },
  {
    "text": "width so if you have the same set of applications you separate the user",
    "start": "1793440",
    "end": "1798780"
  },
  {
    "text": "permissions based on the environment they should have access to secondly we",
    "start": "1798780",
    "end": "1806100"
  },
  {
    "text": "have passed level permissions so if you ask the question that who has access to",
    "start": "1806100",
    "end": "1812670"
  },
  {
    "text": "my dynamo DB tables as an application or s3 buckets we can give an identity to",
    "start": "1812670",
    "end": "1817920"
  },
  {
    "text": "your task the task I am roles and this was a feature that was introduced for ECS and this applies",
    "start": "1817920",
    "end": "1825000"
  },
  {
    "text": "for Fargate as well and lastly because",
    "start": "1825000",
    "end": "1830100"
  },
  {
    "text": "Fargate abstracts the underlying infrastructure there are certain actions that easier service needs to take on",
    "start": "1830100",
    "end": "1837030"
  },
  {
    "text": "your behalf and you can explicitly grant these permissions to ECS whether it's",
    "start": "1837030",
    "end": "1842370"
  },
  {
    "text": "pushing your logs to cloud wash logs or providing authentication to ECR and",
    "start": "1842370",
    "end": "1847680"
  },
  {
    "text": "seamlessly be able to pull your ECR images you have control over what level",
    "start": "1847680",
    "end": "1853890"
  },
  {
    "text": "of permissions you want to give to the service now you can run your containers",
    "start": "1853890",
    "end": "1863940"
  },
  {
    "start": "1860000",
    "end": "1871000"
  },
  {
    "text": "very easily with Fargate with no infrastructure management but where do",
    "start": "1863940",
    "end": "1869460"
  },
  {
    "text": "you store the images amazon ECR is a fully managed highly available registry",
    "start": "1869460",
    "end": "1876150"
  },
  {
    "start": "1871000",
    "end": "1906000"
  },
  {
    "text": "with a global footprint the additional capabilities that i mentioned with the",
    "start": "1876150",
    "end": "1881490"
  },
  {
    "text": "task execution role enables us to provide seamless authentication to ECR",
    "start": "1881490",
    "end": "1889310"
  },
  {
    "text": "so if you are using a public repository let's say like docker hub you can",
    "start": "1889310",
    "end": "1895050"
  },
  {
    "text": "continue to do so from a product perspective it is also we are also",
    "start": "1895050",
    "end": "1900720"
  },
  {
    "text": "looking at supporting third party private repositories with respect to",
    "start": "1900720",
    "end": "1908850"
  },
  {
    "start": "1906000",
    "end": "1952000"
  },
  {
    "text": "visibility and monitoring this becomes pretty important if you think about in the Fargate model because you have only",
    "start": "1908850",
    "end": "1917490"
  },
  {
    "text": "your tasks and your network interface that you have to manage but at the same time how do you look into what's",
    "start": "1917490",
    "end": "1924960"
  },
  {
    "text": "actually happening in your tasks so we have by default cloud wash logs and cloud watch events supported we also",
    "start": "1924960",
    "end": "1933840"
  },
  {
    "text": "have service level metrics that you do today with ECS so you can monitor your",
    "start": "1933840",
    "end": "1939420"
  },
  {
    "text": "service CPU and service memory utilization you can also set up the auto",
    "start": "1939420",
    "end": "1944970"
  },
  {
    "text": "scaling policies based on the thresholds that you set up for these metrics and",
    "start": "1944970",
    "end": "1953480"
  },
  {
    "start": "1952000",
    "end": "1989000"
  },
  {
    "text": "with Fargate today you can run your",
    "start": "1953480",
    "end": "1958500"
  },
  {
    "text": "tasks with an ephemeral storage it is backed by EBS it is really meant for",
    "start": "1958500",
    "end": "1965160"
  },
  {
    "text": "scratch space or some temporary storage that you want for your applications the",
    "start": "1965160",
    "end": "1971340"
  },
  {
    "text": "storage space you get for your containers is 10 GB and in addition to that if your containers have a need to",
    "start": "1971340",
    "end": "1979290"
  },
  {
    "text": "be able to share wall rooms amongst themselves there's another 4 GB carved",
    "start": "1979290",
    "end": "1985470"
  },
  {
    "text": "out for that purpose so let us look at",
    "start": "1985470",
    "end": "1992700"
  },
  {
    "text": "the pricing and configuration options for Fargate as mentioned earlier the",
    "start": "1992700",
    "end": "2001880"
  },
  {
    "start": "1998000",
    "end": "2042000"
  },
  {
    "text": "pricing dimensions for CPU and memory have been introduced at the task level you are billed on a per second",
    "start": "2001880",
    "end": "2008090"
  },
  {
    "text": "granularity CPU and memory are independent dimensions so you only pay by the per CPU second and per GB second",
    "start": "2008090",
    "end": "2015910"
  },
  {
    "text": "there is a one minute minimum in this case and the billing begins when you",
    "start": "2015910",
    "end": "2023540"
  },
  {
    "text": "start downloading the images for a task so you only pay for the resources that",
    "start": "2023540",
    "end": "2029900"
  },
  {
    "text": "you consume so here we have defined CPU",
    "start": "2029900",
    "end": "2035000"
  },
  {
    "text": "and memory at 1v CPU and 3gb that's perfectly valid configuration and there",
    "start": "2035000",
    "end": "2040550"
  },
  {
    "text": "are certain increments that we offer that we look at real quick so here are the configurations supported today with",
    "start": "2040550",
    "end": "2047390"
  },
  {
    "start": "2042000",
    "end": "2080000"
  },
  {
    "text": "Fargate as you can see you can have about 2gb to 8gb generally for all",
    "start": "2047390",
    "end": "2055540"
  },
  {
    "text": "configurations to meet your application needs the best so if you have a more",
    "start": "2055540",
    "end": "2061158"
  },
  {
    "text": "compute optimized workload or a more memory optimized you should be able to",
    "start": "2061159",
    "end": "2066379"
  },
  {
    "text": "do that by customizing this and picking the right combination of CPU and memory",
    "start": "2066380",
    "end": "2071810"
  },
  {
    "text": "for your particular task you should look at the Fargate website for pricing",
    "start": "2071810",
    "end": "2078080"
  },
  {
    "text": "details we also launched today support",
    "start": "2078080",
    "end": "2083750"
  },
  {
    "start": "2080000",
    "end": "2096000"
  },
  {
    "text": "with cloud formation so if you have cloud formation stacks with ECS and you want to set up your default launch types",
    "start": "2083750",
    "end": "2091610"
  },
  {
    "text": "for Fargate and you want to start launching Fargate containers you should be able to do that in addition with",
    "start": "2091610",
    "end": "2099200"
  },
  {
    "start": "2096000",
    "end": "2132000"
  },
  {
    "text": "respect to the scale that Anthony was talking about earlier we also have a",
    "start": "2099200",
    "end": "2106010"
  },
  {
    "text": "very high very strong reliability of the track record and we have service level",
    "start": "2106010",
    "end": "2112010"
  },
  {
    "text": "agreements and for computed service compute services like EBS and ec2 we are",
    "start": "2112010",
    "end": "2120410"
  },
  {
    "text": "now extending that to also include ECS and Fargate at 99.99%",
    "start": "2120410",
    "end": "2129040"
  },
  {
    "start": "2132000",
    "end": "2151000"
  },
  {
    "text": "so you may ask that you know now the target launch mode available which one",
    "start": "2133290",
    "end": "2139990"
  },
  {
    "text": "should I choose or if you say that I like the simplicity of Fargate but when",
    "start": "2139990",
    "end": "2145599"
  },
  {
    "text": "should I think about using ec2 launch time the answer is that far gate and",
    "start": "2145599",
    "end": "2154359"
  },
  {
    "text": "easy to launch types are compatible with each other as I mentioned earlier the schema is essentially the same it's only",
    "start": "2154359",
    "end": "2161079"
  },
  {
    "text": "compatibility considerations when it comes to your specific task definition that you have to look at but you forget",
    "start": "2161079",
    "end": "2168970"
  },
  {
    "text": "and ECS easy to launch types can run within the same cluster boundary so if",
    "start": "2168970",
    "end": "2177220"
  },
  {
    "text": "you have use cases where you need to roll your own version of the underlying",
    "start": "2177220",
    "end": "2182650"
  },
  {
    "text": "infrastructure regardless of which level you're looking at whether it's at the army level or you have other software",
    "start": "2182650",
    "end": "2189910"
  },
  {
    "text": "and packages that need to be running on your instance ec2 launch type is a very",
    "start": "2189910",
    "end": "2195579"
  },
  {
    "text": "good answer you want to use spot instances for example you can run spot clusters with",
    "start": "2195579",
    "end": "2202180"
  },
  {
    "text": "ec2 launched type very efficiently and we provide integration to be able to do",
    "start": "2202180",
    "end": "2207640"
  },
  {
    "text": "that but I think the key to understand",
    "start": "2207640",
    "end": "2212680"
  },
  {
    "start": "2210000",
    "end": "2291000"
  },
  {
    "text": "here is that this is not a one-way door so forget clusters as I showed earlier",
    "start": "2212680",
    "end": "2218500"
  },
  {
    "text": "are all heterogeneous say you have different requirements where the",
    "start": "2218500",
    "end": "2224020"
  },
  {
    "text": "notification application here would like to be able to move to far gate but has a",
    "start": "2224020",
    "end": "2229690"
  },
  {
    "text": "different time line it is a different set of developers and they do want to move at their own cadence whereas the",
    "start": "2229690",
    "end": "2236710"
  },
  {
    "text": "shopping cart and the web app are ready to move to far gate as you notice the",
    "start": "2236710",
    "end": "2245130"
  },
  {
    "text": "shopping cart and the web app here they are just running these tasks in the same",
    "start": "2245130",
    "end": "2250500"
  },
  {
    "text": "network boundary as you are running you're easy to launch type tasks and",
    "start": "2250500",
    "end": "2256950"
  },
  {
    "text": "they the communication model is still maintained in that sense you can still",
    "start": "2256950",
    "end": "2263440"
  },
  {
    "text": "continue to be able to choose between these different launch types go back and",
    "start": "2263440",
    "end": "2268970"
  },
  {
    "text": "forth depending on what your how your application requirements change over",
    "start": "2268970",
    "end": "2275060"
  },
  {
    "text": "time but you will still be able to apply a uniform set of policies whether it's",
    "start": "2275060",
    "end": "2282110"
  },
  {
    "text": "at the cluster level with network isolation and all three tiers of",
    "start": "2282110",
    "end": "2287510"
  },
  {
    "text": "permissions that we talked about earlier we have had very good feedback and",
    "start": "2287510",
    "end": "2297380"
  },
  {
    "start": "2291000",
    "end": "2334000"
  },
  {
    "text": "interaction with our early adopters here I have some of the some of their names and in addition we are also working with",
    "start": "2297380",
    "end": "2305810"
  },
  {
    "text": "some of our partners in the security monitoring and visibility space if you",
    "start": "2305810",
    "end": "2312770"
  },
  {
    "text": "get a chance data dog also has a demo where are you running with Fargate at their booth how they still provide",
    "start": "2312770",
    "end": "2319580"
  },
  {
    "text": "visibility with stats for your containers and be able to provide all",
    "start": "2319580",
    "end": "2324830"
  },
  {
    "text": "the container metadata for example so you can continue to leverage their",
    "start": "2324830",
    "end": "2330620"
  },
  {
    "text": "products when working with Fargate here are some other relevant sessions there",
    "start": "2330620",
    "end": "2338300"
  },
  {
    "start": "2334000",
    "end": "2358000"
  },
  {
    "text": "is a deeper dive if you want to see how I can build a application end-to-end",
    "start": "2338300",
    "end": "2343370"
  },
  {
    "text": "with far gate or rather as a service and integrated with load balancer you should attend con 3-3-3 which is tomorrow and",
    "start": "2343370",
    "end": "2351440"
  },
  {
    "text": "there are some other sessions that you should I would encourage you to check out as well so thank you very much for",
    "start": "2351440",
    "end": "2360980"
  },
  {
    "start": "2358000",
    "end": "2378000"
  },
  {
    "text": "listening I have I do have to say that we have some Fargate stickers at the",
    "start": "2360980",
    "end": "2366410"
  },
  {
    "text": "back so if you want to get some cool stickers you can you can grab them over",
    "start": "2366410",
    "end": "2371510"
  },
  {
    "text": "there and we always love to hear feedback from customers so thanks a lot [Applause]",
    "start": "2371510",
    "end": "2380030"
  }
]