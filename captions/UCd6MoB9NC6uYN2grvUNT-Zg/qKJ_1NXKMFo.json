[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "Do you want to build\na virtual proctoring solution in your app?",
    "start": "192",
    "end": "3546"
  },
  {
    "text": "Stick around. I'll show you the services\nthat you can use to build this out quickly.",
    "start": "3546",
    "end": "8420"
  },
  {
    "text": "Today's episode comes from Raj.",
    "start": "16050",
    "end": "18542"
  },
  {
    "text": "Raj is an engineering student\nin Pune, India.",
    "start": "18542",
    "end": "21626"
  },
  {
    "text": "Raj wants to build an app that detects\nif a student is cheating on an exam",
    "start": "21626",
    "end": "26388"
  },
  {
    "text": "and notifies the professor\nif a student might be cheating.",
    "start": "26388",
    "end": "29846"
  },
  {
    "text": "Let's hear from Raj.",
    "start": "29846",
    "end": "31562"
  },
  {
    "start": "30000",
    "end": "67000"
  },
  {
    "text": "Hi, I'm Raj. I'm a computer\nengineering junior at VIT Pune, India.",
    "start": "31562",
    "end": "35222"
  },
  {
    "text": "When the pandemic started,",
    "start": "35306",
    "end": "36720"
  },
  {
    "text": "there was no easy way for common teachers\nto conduct remote examinations",
    "start": "36720",
    "end": "40838"
  },
  {
    "text": "and be sure that the integrity\nof the exams is maintained.",
    "start": "40838",
    "end": "44150"
  },
  {
    "text": "I wanted to build\na platform for remote examinations",
    "start": "44150",
    "end": "46946"
  },
  {
    "text": "which will allow teachers,\nprofessors and educators at all levels",
    "start": "46946",
    "end": "50954"
  },
  {
    "text": "to easily organize\ncheating-free remote examinations",
    "start": "50954",
    "end": "54350"
  },
  {
    "text": "and provide them with an easy to use\nplatform which they can rely on.",
    "start": "54350",
    "end": "58654"
  },
  {
    "text": "At the same time,",
    "start": "58654",
    "end": "59784"
  },
  {
    "text": "provide the students with a platform\non which they can trust.",
    "start": "59784",
    "end": "63240"
  },
  {
    "text": "Awesome, Raj. Let's dive in.",
    "start": "63750",
    "end": "66420"
  },
  {
    "text": "The test taker will use a laptop,\na camera and a microphone.",
    "start": "66870",
    "end": "71738"
  },
  {
    "text": "At the beginning of an exam,",
    "start": "71738",
    "end": "73644"
  },
  {
    "text": "the candidate will have to allow the app\nto access their camera and microphone.",
    "start": "73644",
    "end": "79322"
  },
  {
    "text": "The test seekers video and audio\nwill be sent to the cloud for analysis",
    "start": "79322",
    "end": "84014"
  },
  {
    "text": "through a secure connection.",
    "start": "84014",
    "end": "85870"
  },
  {
    "start": "86000",
    "end": "147000"
  },
  {
    "text": "The video stream will be captured\nby Amazon Kinesis Video Streams.",
    "start": "86250",
    "end": "91082"
  },
  {
    "text": "Kinesis Video Streams allows you\nto process and store media streams",
    "start": "91082",
    "end": "95714"
  },
  {
    "text": "for playback, analytics,\nand machine learning.",
    "start": "95714",
    "end": "98770"
  },
  {
    "text": "When streaming videos\nto Kinesis Video Streams,",
    "start": "98940",
    "end": "102110"
  },
  {
    "text": "there will be a producer and a consumer.",
    "start": "102110",
    "end": "104942"
  },
  {
    "text": "A producer is any source that puts data\ninto a Kinesis Video Stream.",
    "start": "104942",
    "end": "109690"
  },
  {
    "text": "A producer can be\nany video generating device",
    "start": "110010",
    "end": "112790"
  },
  {
    "text": "such as a smartphone, camera,\nor a laptop camera.",
    "start": "112790",
    "end": "117062"
  },
  {
    "text": "In Raj's case,",
    "start": "117206",
    "end": "118390"
  },
  {
    "text": "the test takers camera from their laptop\nwill stream their video to Kinesis Video Streams.",
    "start": "118390",
    "end": "124510"
  },
  {
    "text": "Once the video is streamed\nto Kinesis Video Streams,",
    "start": "125190",
    "end": "128570"
  },
  {
    "text": "the consumers get the data\nsuch as fragments and frames",
    "start": "128570",
    "end": "132722"
  },
  {
    "text": "to view, process, or analyze it.",
    "start": "132722",
    "end": "135432"
  },
  {
    "text": "You can write backend applications\nthat consume and process data",
    "start": "135432",
    "end": "139740"
  },
  {
    "text": "in Kinesis Video Streams in real time",
    "start": "139740",
    "end": "142656"
  },
  {
    "text": "or after the data is durably stored\nand time indexed.",
    "start": "142656",
    "end": "147410"
  },
  {
    "start": "147000",
    "end": "199000"
  },
  {
    "text": "The video stream will be consumed\nby Amazon Rekognition Video.",
    "start": "147590",
    "end": "152002"
  },
  {
    "text": "Rekognition Video is a machine learning\npowered video analysis service",
    "start": "152002",
    "end": "156912"
  },
  {
    "text": "that can be used to provide\nhighly accurate facial analysis",
    "start": "156912",
    "end": "160574"
  },
  {
    "text": "and facial search capabilities.",
    "start": "160574",
    "end": "162730"
  },
  {
    "text": "Amazon Rekognition Video will analyze\nyour live video streams in real time",
    "start": "163110",
    "end": "168168"
  },
  {
    "text": "to detect and search for faces.",
    "start": "168168",
    "end": "170582"
  },
  {
    "text": "By providing a stream from\nAmazon Kinesis Video Streams",
    "start": "170726",
    "end": "174216"
  },
  {
    "text": "as an input to Rekognition Video,",
    "start": "174217",
    "end": "177312"
  },
  {
    "text": "you can search through faces against\na repository of your own images",
    "start": "177312",
    "end": "182306"
  },
  {
    "text": "with very low latency.",
    "start": "182306",
    "end": "184390"
  },
  {
    "text": "Rekognition Video returns a confidence score\nbetween 0 and 100",
    "start": "185070",
    "end": "189554"
  },
  {
    "text": "that you can use to determine if\nthe Proctor should be notified",
    "start": "189554",
    "end": "193046"
  },
  {
    "text": "to review the playback of the incident\nin which the test taker might have cheated.",
    "start": "193046",
    "end": "198370"
  },
  {
    "text": "For each analyzed frame,",
    "start": "199050",
    "end": "200822"
  },
  {
    "text": "Amazon Rekognition Video outputs\na JSON record to a Kinesis Data Stream.",
    "start": "200822",
    "end": "205958"
  },
  {
    "text": "The JSON record includes information\nabout the streaming video,",
    "start": "206114",
    "end": "209640"
  },
  {
    "text": "the status for the analyzed frame",
    "start": "209640",
    "end": "211958"
  },
  {
    "text": "and information about faces\nthat are recognized in the frame.",
    "start": "211958",
    "end": "215950"
  },
  {
    "text": "AWS Lambda functions\nwill process the results",
    "start": "216390",
    "end": "219074"
  },
  {
    "text": "that recognition video sends\nto the Kinesis Data Stream.",
    "start": "219074",
    "end": "223034"
  },
  {
    "text": "Lambda allows you\nto run code without managing servers.",
    "start": "223034",
    "end": "226706"
  },
  {
    "text": "You'll want to run a lot of simulations\nof cheating and not cheating in an exam",
    "start": "226898",
    "end": "232428"
  },
  {
    "text": "in order to determine\nother behaviors or metrics",
    "start": "232428",
    "end": "235418"
  },
  {
    "text": "that can increase\nyour applications accuracy.",
    "start": "235418",
    "end": "238569"
  },
  {
    "start": "239000",
    "end": "273000"
  },
  {
    "text": "You can create a workflow\nin AWS Step Functions",
    "start": "239370",
    "end": "243073"
  },
  {
    "text": "based on the confidence score\nthat recognition returns.",
    "start": "243074",
    "end": "246430"
  },
  {
    "text": "Step Functions is a lowcode visual workflow service\nused to orchestrate AWS services,",
    "start": "247470",
    "end": "253606"
  },
  {
    "text": "automate business processes\nand build serverless applications.",
    "start": "253606",
    "end": "257834"
  },
  {
    "text": "With Step Functions,\nyou can create branching logic",
    "start": "258002",
    "end": "260678"
  },
  {
    "text": "to determine what your application\nshould do in a scenario.",
    "start": "260678",
    "end": "264722"
  },
  {
    "text": "Let's say the confidence score is 70.",
    "start": "264866",
    "end": "267766"
  },
  {
    "text": "Raj might not think\nthat's high enough to assume",
    "start": "267948",
    "end": "270866"
  },
  {
    "text": "that the test taker is cheating\nby ending the exam,",
    "start": "270866",
    "end": "273802"
  },
  {
    "start": "273000",
    "end": "307000"
  },
  {
    "text": "but if Raj finds it suspicious,",
    "start": "274197",
    "end": "276218"
  },
  {
    "text": "then Raj would use\nAmazon's Simple Notification Service",
    "start": "276374",
    "end": "280054"
  },
  {
    "text": "to notify the Proctor\nof suspicious test taking activity.",
    "start": "280152",
    "end": "284342"
  },
  {
    "text": "Simple Notification Service is\na fully managed messaging service",
    "start": "284342",
    "end": "288552"
  },
  {
    "text": "for both application to application\nand application to person communication.",
    "start": "288552",
    "end": "293770"
  },
  {
    "text": "The Proctor would then review the replay\nof the test taker taking the exam",
    "start": "294210",
    "end": "298595"
  },
  {
    "text": "to determine if the test taker cheated.",
    "start": "298596",
    "end": "301090"
  },
  {
    "text": "If Raj thinks that a score above 90 means",
    "start": "301470",
    "end": "304692"
  },
  {
    "text": "there is no doubt that\nthis test taker is cheating,",
    "start": "304692",
    "end": "307501"
  },
  {
    "start": "307000",
    "end": "366000"
  },
  {
    "text": "then the application could trigger\nan AWS Lambda Function to stop the exam.",
    "start": "307502",
    "end": "312178"
  },
  {
    "text": "At the same time, a push notification\nwill be sent to the Proctor",
    "start": "312324",
    "end": "316250"
  },
  {
    "text": "through Simple Notification Service to inform\nthe Proctor of the candidate that cheated.",
    "start": "316250",
    "end": "321506"
  },
  {
    "text": "I know, I covered a lot.",
    "start": "321698",
    "end": "323986"
  },
  {
    "text": "Time for a recap.",
    "start": "324168",
    "end": "326170"
  },
  {
    "text": "Stream video using\nAmazon Kinesis Video Streams.",
    "start": "326490",
    "end": "329690"
  },
  {
    "text": "Use Amazon Rekognition Video\nto determine if someone is cheating.",
    "start": "329810",
    "end": "333878"
  },
  {
    "text": "Use AWS Step Functions\nto build workflows for Lambda Functions.",
    "start": "334034",
    "end": "338162"
  },
  {
    "text": "Notify the instructor using\nAmazon's Simple Notification Service.",
    "start": "338306",
    "end": "342060"
  },
  {
    "text": "That's how you can build\na virtual proctoring solution.",
    "start": "342390",
    "end": "346382"
  },
  {
    "text": "Make sure you check out\nthe links below the video.",
    "start": "346382",
    "end": "349116"
  },
  {
    "text": "It doesn't matter when you start,\nas long as you just get started.",
    "start": "349116",
    "end": "352416"
  },
  {
    "text": "Thanks for hanging out with me.\nSee you soon.",
    "start": "352416",
    "end": "354603"
  }
]