[
  {
    "text": "hi everybody this is an introduction to graph QL with principal Technical Evangelist Robert Xu I hope you're",
    "start": "7029",
    "end": "14690"
  },
  {
    "text": "you're excited about graph QL and please give a hand to Robert",
    "start": "14690",
    "end": "19930"
  },
  {
    "text": "thank you welcome everyone day three of collision conf I hope you're having a good time",
    "start": "22530",
    "end": "28050"
  },
  {
    "text": "I'm Robert with AWS and today I'm gonna give you an introduction to graph QL",
    "start": "28050",
    "end": "34370"
  },
  {
    "text": "first let me introduce myself I'm a principal Technical Evangelist on the",
    "start": "34370",
    "end": "40860"
  },
  {
    "text": "technical evangelism team here at AWS prior to joining AWS I was a software",
    "start": "40860",
    "end": "46650"
  },
  {
    "text": "engineer at Facebook where I worked on graph QL and part of that I was a software engineer at Microsoft where I",
    "start": "46650",
    "end": "52769"
  },
  {
    "text": "worked on Xbox dotnet framework Windows Server various things and last year I",
    "start": "52769",
    "end": "60120"
  },
  {
    "text": "became a published author this is a real book but you can't buy it because if you",
    "start": "60120",
    "end": "67500"
  },
  {
    "text": "actually buy it and read it that would invalidate the premise of the book I just wanted to show you that I did this",
    "start": "67500",
    "end": "73729"
  },
  {
    "text": "okay I'm gonna start with the demo so conference Wi-Fi appears to be working",
    "start": "73729",
    "end": "80550"
  },
  {
    "text": "today thank goodness if you want to follow along open up your laptops or phones to",
    "start": "80550",
    "end": "86790"
  },
  {
    "text": "demo Rob's you dot dev I'll give everybody a couple minutes if you want",
    "start": "86790",
    "end": "92460"
  },
  {
    "text": "to follow along I really think it makes the concept stick so I encourage you to do so and of course twitch chat you have",
    "start": "92460",
    "end": "99150"
  },
  {
    "text": "the privilege of just opening up a new browser tab and doing this now I",
    "start": "99150",
    "end": "106110"
  },
  {
    "text": "understand what I'm signing up for so you know if if there's too much too many people abusing this demo then I think",
    "start": "106110",
    "end": "113250"
  },
  {
    "text": "things are gonna go south but I'm trusting the the audience and and twitch so be kind please okay see a couple",
    "start": "113250",
    "end": "124380"
  },
  {
    "text": "people getting their laptops out let me give you a few more minutes a few more moments not minutes",
    "start": "124380",
    "end": "131989"
  },
  {
    "text": "can everybody see this in the back okay yeah thumbs up alright so let me show",
    "start": "142349",
    "end": "153900"
  },
  {
    "text": "you this first link here if you go to demo Rob's udev and you click on this",
    "start": "153900",
    "end": "159690"
  },
  {
    "text": "first big link you get the Star Wars swap II swap eco rest API",
    "start": "159690",
    "end": "170269"
  },
  {
    "text": "let's see if it loads anybody else",
    "start": "170390",
    "end": "176730"
  },
  {
    "text": "having trouble loading this it's not loading ok well let's give it a moment",
    "start": "176730",
    "end": "183060"
  },
  {
    "text": "and uh if you can stop spamming refresh on that link maybe that'll help I think this is a pretty this is not my server",
    "start": "183060",
    "end": "189540"
  },
  {
    "text": "by the way this is like a this is a different URL let me let me explain what we're actually gonna try to do imagine",
    "start": "189540",
    "end": "195659"
  },
  {
    "text": "that we're building an application and we want to fetch the names of all of the",
    "start": "195659",
    "end": "201389"
  },
  {
    "text": "Star Wars characters that appeared in movies with Luke Skywalker alright it's",
    "start": "201389",
    "end": "208980"
  },
  {
    "text": "a pretty simple requirement right everyone here has seen Star Wars I hope it's a pretty simple requirement and the",
    "start": "208980",
    "end": "216239"
  },
  {
    "text": "API that we have to work with is giving us an application error maybe I should",
    "start": "216239",
    "end": "224730"
  },
  {
    "text": "have done the demo before I asked everyone to swarm this thing let's give",
    "start": "224730",
    "end": "232709"
  },
  {
    "text": "it a moment to recover because okay alright so this is swap eco this is a",
    "start": "232709",
    "end": "241139"
  },
  {
    "text": "lot of Star Wars data that has been built up as a REST API now rest api rest",
    "start": "241139",
    "end": "250199"
  },
  {
    "text": "stands for representational state transfer is the architectural style of the web and over the last decade ever",
    "start": "250199",
    "end": "257370"
  },
  {
    "text": "since your web 2.0 it has been the dominant api style and i'm gonna show",
    "start": "257370",
    "end": "265500"
  },
  {
    "text": "you what it means because it's actually very very intuitive for example it shows us right here that the resource at swap",
    "start": "265500",
    "end": "273389"
  },
  {
    "text": "eco slash API slash people slash 1 is the resource that represents Luke",
    "start": "273389",
    "end": "279330"
  },
  {
    "text": "Skywalker this is a JSON document and it represents Luke Skywalker the other",
    "start": "279330",
    "end": "286650"
  },
  {
    "text": "things that I can see here are these embedded URLs these hypermedia links so",
    "start": "286650",
    "end": "291900"
  },
  {
    "text": "it says that Luke Skywalker he has a homeworld field but if I want to fetch",
    "start": "291900",
    "end": "298800"
  },
  {
    "text": "the details of that homeworld field I need to go and execute an HTTP request",
    "start": "298800",
    "end": "304320"
  },
  {
    "text": "against this URL right and that's what makes rest so powerful and so intuitive",
    "start": "304320",
    "end": "309990"
  },
  {
    "text": "it acts like a web page so I can just take this URL and paste it into a new",
    "start": "309990",
    "end": "317160"
  },
  {
    "text": "tab",
    "start": "317160",
    "end": "319490"
  },
  {
    "text": "but okay so it's actually good that it loaded in another tap and we have actually seen it because I want to point",
    "start": "323230",
    "end": "329500"
  },
  {
    "text": "out another thing about rest api's what I can see right here that Luke Skywalker has a field called name which is a",
    "start": "329500",
    "end": "336850"
  },
  {
    "text": "string height match hair color eye skin colour these are the fields for Luke Skywalker but what are the fields for",
    "start": "336850",
    "end": "344440"
  },
  {
    "text": "the resource that's returned that represents his homeworld is it called planet name is it a planet at all does",
    "start": "344440",
    "end": "351760"
  },
  {
    "text": "it have some sort of field representing gravity and is that a float is that a",
    "start": "351760",
    "end": "357910"
  },
  {
    "text": "string I don't know right I actually have to go and perform the HTTP request to get that resource and then I have to",
    "start": "357910",
    "end": "365950"
  },
  {
    "text": "go take a look at the JSON document to kind of figure that out on the fly and that's great for human beings navigating",
    "start": "365950",
    "end": "372010"
  },
  {
    "text": "the web through hypermedia links because they're really intelligent they can figure this stuff out but machines not",
    "start": "372010",
    "end": "377680"
  },
  {
    "text": "so good at this so you can see that you know our guest was kind of off it's not called planet name it's just called name",
    "start": "377680",
    "end": "383710"
  },
  {
    "text": "it has this field called rotation period that I couldn't have guessed I didn't know that it was to be called rotation period with underscore and it's also",
    "start": "383710",
    "end": "390730"
  },
  {
    "text": "rotation period is 23 what are the units for this it's also encoded as a string instead of a number so you can see that",
    "start": "390730",
    "end": "397740"
  },
  {
    "text": "oops did the can you guys see the slide in the back did it go out all right let",
    "start": "397740",
    "end": "403180"
  },
  {
    "text": "me uh is it back okay sorry about the technical difficulties we've got we've",
    "start": "403180",
    "end": "408280"
  },
  {
    "text": "got this situation happening throughout the conference so I apologize yeah so",
    "start": "408280",
    "end": "414070"
  },
  {
    "text": "you can see it has all these fields but you just don't know in advance what the names of these fields are and what the",
    "start": "414070",
    "end": "420280"
  },
  {
    "text": "types are right so let's keep that in",
    "start": "420280",
    "end": "425440"
  },
  {
    "text": "mind cache that away now let's actually think about what it would take to fetch the names of all the characters in films",
    "start": "425440",
    "end": "433600"
  },
  {
    "text": "with Luke Skywalker if the tool that we have our disposal is this swappi dotco",
    "start": "433600",
    "end": "438960"
  },
  {
    "text": "rest api well i would go back to this",
    "start": "438960",
    "end": "444550"
  },
  {
    "text": "URL this is the resource with luke right and i have this handy films list and for",
    "start": "444550",
    "end": "450940"
  },
  {
    "text": "each film in here i have a URL so i can just take this first film and copy and paste it",
    "start": "450940",
    "end": "459400"
  },
  {
    "text": "again film same problem right I don't know what the fields are of film and I",
    "start": "462590",
    "end": "469010"
  },
  {
    "text": "don't know what their data types are I have to actually perform the network request in order to get that data before",
    "start": "469010",
    "end": "475940"
  },
  {
    "text": "I can figure out just what's going on",
    "start": "475940",
    "end": "479919"
  },
  {
    "text": "let's give it a moment to load",
    "start": "481030",
    "end": "484840"
  },
  {
    "text": "twitch please no I can't even tell twitch it's a chill",
    "start": "492270",
    "end": "500009"
  },
  {
    "text": "on the API okay so let me just get ahead",
    "start": "500009",
    "end": "508800"
  },
  {
    "text": "of the the actual document while we wait for it to load what intuitively happens is that we have",
    "start": "508800",
    "end": "514979"
  },
  {
    "text": "to go and fetch the HTTP resource representing each film and then in there",
    "start": "514979",
    "end": "520529"
  },
  {
    "text": "hopefully we have all the characters but what do you think the characters are",
    "start": "520529",
    "end": "525570"
  },
  {
    "text": "gonna be do you think the characters are gonna handily have all the character first names in the document they're",
    "start": "525570",
    "end": "532890"
  },
  {
    "text": "gonna be the it's possibly they're gonna be more URLs right and if they're more",
    "start": "532890",
    "end": "542190"
  },
  {
    "text": "URLs what can we do with URLs more network requests so in order to fetch",
    "start": "542190",
    "end": "548070"
  },
  {
    "text": "all these names what I actually have to do in the code is to perform the HTTP",
    "start": "548070",
    "end": "553200"
  },
  {
    "text": "GET against the Luke Skywalker resource parse out this film's field for each",
    "start": "553200",
    "end": "558779"
  },
  {
    "text": "film execute an HTTP request when I get that HTTP response parse that into a",
    "start": "558779",
    "end": "565890"
  },
  {
    "text": "JSON document pull out the characters array for each character URL issue",
    "start": "565890",
    "end": "572040"
  },
  {
    "text": "another HTTP request how many Network requests do you think",
    "start": "572040",
    "end": "577200"
  },
  {
    "text": "that is anybody want to guess how many people think it's five Network requests",
    "start": "577200",
    "end": "585440"
  },
  {
    "text": "less than five more than five okay that's almost everyone more than",
    "start": "585440",
    "end": "591660"
  },
  {
    "text": "100 okay a couple a couple hands maybe maybe you're all big Star Wars there so",
    "start": "591660",
    "end": "597329"
  },
  {
    "text": "you know exactly how many characters appeared in the film's with Luke Skywalker I love Star Wars but I don't love it that much so let me actually",
    "start": "597329",
    "end": "605220"
  },
  {
    "text": "show you this code so if I inspect the",
    "start": "605220",
    "end": "611550"
  },
  {
    "text": "source code for this page there's an there's a handler here called run rest",
    "start": "611550",
    "end": "620910"
  },
  {
    "text": "and this is what happens when I click this button with fetch rest now because it's using the swap eco API and the",
    "start": "620910",
    "end": "627600"
  },
  {
    "text": "swipe echo API is not cooperative it's not gonna work unless unless you know we back off over",
    "start": "627600",
    "end": "634320"
  },
  {
    "text": "the traffic for a little bit we let the application recover I'm so if you want to see that demo please stop hammering the API but look everything I described",
    "start": "634320",
    "end": "641220"
  },
  {
    "text": "just now is in the code it's just just a few lines of code right I have the Luke URL that's why Pico I can fetch this",
    "start": "641220",
    "end": "651570"
  },
  {
    "text": "object at that URL and then I get the character and then what I'm gonna do is",
    "start": "651570",
    "end": "657420"
  },
  {
    "text": "this fetch all the special is just very simple it's a helper function it's going to fire off several different HTTP",
    "start": "657420",
    "end": "663000"
  },
  {
    "text": "requests in parallel and it's going to wait for them to come back and when I have all the films I now have to go and",
    "start": "663000",
    "end": "670020"
  },
  {
    "text": "in this inner function you can see here for each film I'm pulling out the characters field I'm gonna flatten that",
    "start": "670020",
    "end": "677340"
  },
  {
    "text": "into one giant list of characters and now I have an array of maybe approximately a hundred characters and",
    "start": "677340",
    "end": "684150"
  },
  {
    "text": "then I need to fetch all of those and I'm also you know filtering out the unique fields here so I'm not fetching",
    "start": "684150",
    "end": "689220"
  },
  {
    "text": "the same resource more than once and anybody who's built web applications is this familiar to you yeah okay I see",
    "start": "689220",
    "end": "695760"
  },
  {
    "text": "a lot of nodding heads yeah so when you use REST API you're often following through these hypermedia links and then",
    "start": "695760",
    "end": "702600"
  },
  {
    "text": "you're doing a lot of joins on the client to finally get the data into the shape that you want it right but take a",
    "start": "702600",
    "end": "711660"
  },
  {
    "text": "look at this graph QL document down below this is labelled let me show you",
    "start": "711660",
    "end": "716880"
  },
  {
    "text": "the endpoint first so when I click on this thing this is the exact same data as swipe eco except I've rebuilt it with",
    "start": "716880",
    "end": "726450"
  },
  {
    "text": "graph QL as the API layer let me show you this to you real quick so what we're",
    "start": "726450",
    "end": "735180"
  },
  {
    "text": "looking at here is a variant of graphical graphical is the graph QL IDE",
    "start": "735180",
    "end": "741540"
  },
  {
    "text": "this is a tool that we can use to explore the data and the schema and what",
    "start": "741540",
    "end": "749190"
  },
  {
    "text": "we're gonna do is authorize on the left-hand side and we're gonna get the response coming back on the right-hand",
    "start": "749190",
    "end": "756450"
  },
  {
    "text": "side so right off the bat you can see it's a little bit different from rest what kinds of requests",
    "start": "756450",
    "end": "762370"
  },
  {
    "text": "can we execute to know that I'm gonna open up this schema tab here and I can",
    "start": "762370",
    "end": "768220"
  },
  {
    "text": "see that there are a couple of route fields available on the query type so if",
    "start": "768220",
    "end": "774700"
  },
  {
    "text": "I click in here two films well okay let's try to find Luke Skywalker first because that's that's the requirement",
    "start": "774700",
    "end": "780070"
  },
  {
    "text": "for application right so I can say something like people and what I'm gonna",
    "start": "780070",
    "end": "788170"
  },
  {
    "text": "issue a query which represents that the intent to read data from the service I'm going to issue a query and in here for",
    "start": "788170",
    "end": "794980"
  },
  {
    "text": "the route field I'm gonna specify people and for each people what can i select well it says it actually tells me here",
    "start": "794980",
    "end": "802720"
  },
  {
    "text": "that type details the field people returns a list of persons and each",
    "start": "802720",
    "end": "809020"
  },
  {
    "text": "person has the following fields and each field has the following types everybody",
    "start": "809020",
    "end": "816490"
  },
  {
    "text": "see that now what that means is contrary to rest I actually know the structure and the",
    "start": "816490",
    "end": "823660"
  },
  {
    "text": "type of the data that I'm querying before I ever execute the query and that",
    "start": "823660",
    "end": "829810"
  },
  {
    "text": "means that if I'm working in a statically typed language like Java or C",
    "start": "829810",
    "end": "835089"
  },
  {
    "text": "sharp or Objective C I can actually generate typesafe client-side code that",
    "start": "835089",
    "end": "841930"
  },
  {
    "text": "corresponds to the data that's gonna be returned from executing graphic L request right so with people I now know",
    "start": "841930",
    "end": "849400"
  },
  {
    "text": "I can I can query for a name and I can query for is there an ID field is there",
    "start": "849400",
    "end": "855910"
  },
  {
    "text": "a URL field maybe okay so I collapsed that you can see that I get back JSON",
    "start": "855910",
    "end": "862330"
  },
  {
    "text": "and the data within this field here within the people that the data under",
    "start": "862330",
    "end": "868000"
  },
  {
    "text": "that sorry the people object under the data property this JSON field represents",
    "start": "868000",
    "end": "876930"
  },
  {
    "text": "it contains a structure that resembles the graphical query that I just wrote",
    "start": "876930",
    "end": "882370"
  },
  {
    "text": "it's almost as if the graphic your query is JSON except I've stripped away the value half leaving only the name of JSON",
    "start": "882370",
    "end": "890740"
  },
  {
    "text": "of the of the data right it looks like JSON so knowing that I can come in here",
    "start": "890740",
    "end": "896170"
  },
  {
    "text": "and say well I won't I really want to fetch person and person you can see here",
    "start": "896170",
    "end": "905019"
  },
  {
    "text": "I have autocomplete person says you can't just fetch person what person do you want specify the name of the person",
    "start": "905019",
    "end": "910450"
  },
  {
    "text": "please so I can say name Luke Skywalker",
    "start": "910450",
    "end": "915610"
  },
  {
    "text": "and I'm just gonna fetch the name out of this document for sanity and I get Luke",
    "start": "915610",
    "end": "922899"
  },
  {
    "text": "Skywalker okay so the other thing that we haven't done yet is in the REST API",
    "start": "922899",
    "end": "928470"
  },
  {
    "text": "let me see if it's recovered okay let me go ahead and run this this thing for you",
    "start": "928470",
    "end": "933519"
  },
  {
    "text": "real quick before uh before everyone takes it down again I'm gonna click this button and it's going to fetch it's",
    "start": "933519",
    "end": "940060"
  },
  {
    "text": "gonna run that code that I showed you a little while earlier it's gonna fetch all the films and for those it's gonna",
    "start": "940060",
    "end": "945970"
  },
  {
    "text": "fetch all the characters and you can see that it's successfully printed all of the first names of all the characters",
    "start": "945970",
    "end": "952329"
  },
  {
    "text": "that appeared in films with Luke Skywalker right so that works but let me",
    "start": "952329",
    "end": "960790"
  },
  {
    "text": "show you the network tab do you see this network tab let me run this again we'll",
    "start": "960790",
    "end": "965920"
  },
  {
    "text": "see we'll see what's happening with the network tab down here do you see all",
    "start": "965920",
    "end": "974050"
  },
  {
    "text": "these network requests in flight this this staircase we're going to come back",
    "start": "974050",
    "end": "980740"
  },
  {
    "text": "to that shortly",
    "start": "980740",
    "end": "983130"
  },
  {
    "text": "so now how do we do this with graph QL I",
    "start": "986070",
    "end": "992720"
  },
  {
    "text": "need to fetch the film's filled out of the Luke Skywalker the person data type",
    "start": "992720",
    "end": "999300"
  },
  {
    "text": "how do I do that well there's this film's field here and note that instead of returning a list of",
    "start": "999300",
    "end": "1004790"
  },
  {
    "text": "URLs I actually return a list of film objects so if I click on this field what",
    "start": "1004790",
    "end": "1010579"
  },
  {
    "text": "are the fields present on the film its title episode ID opening crawl director producer etc right so I should be able",
    "start": "1010579",
    "end": "1016940"
  },
  {
    "text": "to come in here and say films and then within films I'm going to select what",
    "start": "1016940",
    "end": "1023630"
  },
  {
    "text": "the characters and notice that characters is again a collection of persons so I can say characters and then",
    "start": "1023630",
    "end": "1031819"
  },
  {
    "text": "what do I want for each character anybody want to shout it out what will feel do I type here name yeah name okay",
    "start": "1031819",
    "end": "1042130"
  },
  {
    "text": "all of the characters names from all of the films that Luke Skywalker appeared",
    "start": "1042699",
    "end": "1049400"
  },
  {
    "text": "in in a single Network request with no",
    "start": "1049400",
    "end": "1054890"
  },
  {
    "text": "extra data only the data that I asked for because another thing I didn't point out is that when we fetched film look at",
    "start": "1054890",
    "end": "1061429"
  },
  {
    "text": "this field right here is opening crawl this is a long blob of text when I perform an HTTP GET request against this",
    "start": "1061429",
    "end": "1067850"
  },
  {
    "text": "URL I get that text whether I wanted it or not so that means that actually when",
    "start": "1067850",
    "end": "1073070"
  },
  {
    "text": "I got all that data back in the rest case I threw away most of it leaving",
    "start": "1073070",
    "end": "1078470"
  },
  {
    "text": "behind only the data that I needed which was the the names but that's very wasteful right and that problem is",
    "start": "1078470",
    "end": "1085130"
  },
  {
    "text": "called over fetching I'll talk about that in more detail shortly so what does",
    "start": "1085130",
    "end": "1091190"
  },
  {
    "text": "this look like when you fetch it with graph QL",
    "start": "1091190",
    "end": "1094720"
  },
  {
    "text": "a lot faster right and I know this is kind of an absurd comparison because",
    "start": "1096210",
    "end": "1101999"
  },
  {
    "text": "what's making it so fast is that graph QL is fetching only the data that I need",
    "start": "1101999",
    "end": "1108869"
  },
  {
    "text": "and it's doing it with exactly one network round-trip all right",
    "start": "1108869",
    "end": "1117679"
  },
  {
    "text": "so with that let me take you back to the slides I like to start with that demo",
    "start": "1121700",
    "end": "1130550"
  },
  {
    "text": "because it kind of gives you an intuitive sense of what graph QL is right rather than trying to start with",
    "start": "1130550",
    "end": "1135770"
  },
  {
    "text": "formal definitions I just wanted to show you what it's like to actually use it and then a lot of the blanks are going to start making more sense so now that",
    "start": "1135770",
    "end": "1143480"
  },
  {
    "text": "you saw that in action let me explain what happened we know that there was a request that we wrote a graphical",
    "start": "1143480",
    "end": "1150320"
  },
  {
    "text": "document that we wrote in the left hand side in the graphical IDE we sent this",
    "start": "1150320",
    "end": "1155600"
  },
  {
    "text": "request to the server the server did some work and it sent back a response in the form of a JSON document but there",
    "start": "1155600",
    "end": "1164120"
  },
  {
    "text": "appeared to be some rules right there appears to be some pretty common-sense rules like you know you shouldn't open",
    "start": "1164120",
    "end": "1169720"
  },
  {
    "text": "opening curly braces need to be paired with closing curly braces what about",
    "start": "1169720",
    "end": "1174830"
  },
  {
    "text": "that query keyword at the beginning could I have typed anything and for that",
    "start": "1174830",
    "end": "1180140"
  },
  {
    "text": "there's a language specification just like there's legal and in illegal syntax",
    "start": "1180140",
    "end": "1185450"
  },
  {
    "text": "for writing sequel queries so it is with graph QL but the language specification those things like operation type",
    "start": "1185450",
    "end": "1191060"
  },
  {
    "text": "keywords opening curly braces you know allowed characters disallowed characters whether you can put spaces or",
    "start": "1191060",
    "end": "1197030"
  },
  {
    "text": "not can you put return carriages all of that is defined in the graph QL language specification this specification",
    "start": "1197030",
    "end": "1205130"
  },
  {
    "text": "describes how the graph QL language operates but then aside from the",
    "start": "1205130",
    "end": "1211190"
  },
  {
    "text": "language specification we also saw that the given graph QL API had a domain-specific schema and this schema",
    "start": "1211190",
    "end": "1218060"
  },
  {
    "text": "expressed the structure of data within the Star Wars films films characters starships planets right that is a domain",
    "start": "1218060",
    "end": "1226580"
  },
  {
    "text": "specific schema obviously not every graph QL API has those types with those fields that's specific to the Star Wars",
    "start": "1226580",
    "end": "1232700"
  },
  {
    "text": "domain and that means that this schema specifies what legal queries I can",
    "start": "1232700",
    "end": "1240440"
  },
  {
    "text": "execute I couldn't have gone in there and asked for the field author for example because it's not about the Star",
    "start": "1240440",
    "end": "1245750"
  },
  {
    "text": "Wars novels it's not about novels at all right and that makes intuitive sense but again that's not part of language",
    "start": "1245750",
    "end": "1251180"
  },
  {
    "text": "specification that's part of the schema that we built I'll show you the code for that later finally there's a server running",
    "start": "1251180",
    "end": "1257059"
  },
  {
    "text": "somewhere there's a process that has to actually do the work as to say look you passed in a graph kill document this",
    "start": "1257059",
    "end": "1263539"
  },
  {
    "text": "graph kill document is just plain text I have to parse this make sure that what",
    "start": "1263539",
    "end": "1268999"
  },
  {
    "text": "you sent me was actually a valid graphical request and was valid with respect to the schema that I support and",
    "start": "1268999",
    "end": "1274690"
  },
  {
    "text": "once both of those things are cleared out then I can go and fetch the data",
    "start": "1274690",
    "end": "1279740"
  },
  {
    "text": "corresponding to each field and assemble it back into a JSON document and hand it back to the client that is all the work",
    "start": "1279740",
    "end": "1285799"
  },
  {
    "text": "that was happening under the covers when you saw the graph QL requests take about 150 milliseconds okay I also like to",
    "start": "1285799",
    "end": "1297580"
  },
  {
    "text": "talk about what graph QL is not graph QL is not a graph database query language",
    "start": "1297580",
    "end": "1304730"
  },
  {
    "text": "despite what the QL in the name might imply although there is a interesting",
    "start": "1304730",
    "end": "1312080"
  },
  {
    "text": "aside there's a database a graph database out there called D graph and the D graph folks have chosen to use",
    "start": "1312080",
    "end": "1318590"
  },
  {
    "text": "graph QL to support graph QL as one of the languages that you can use to query",
    "start": "1318590",
    "end": "1323600"
  },
  {
    "text": "the graph database it's a dialect of graph QL called graph QL plus minus but for the most part its graph QL I've just",
    "start": "1323600",
    "end": "1329509"
  },
  {
    "text": "wanted to point out that it's not what it was designed for but it can do the job the second point is that graph QL is",
    "start": "1329509",
    "end": "1335149"
  },
  {
    "text": "not going to solve your client-side state management layer you still need something like Redux or relay because",
    "start": "1335149",
    "end": "1342559"
  },
  {
    "text": "graph QL just hung out kind of hands-off the JSON document to the client and then it says I'm done it's not a solution for",
    "start": "1342559",
    "end": "1349909"
  },
  {
    "text": "binary streams you might be wondering can you use graphical to download files can you use it to stream media audio",
    "start": "1349909",
    "end": "1354980"
  },
  {
    "text": "whatever right and yeah in theory you can but that's not what it's designed for",
    "start": "1354980",
    "end": "1360409"
  },
  {
    "text": "and you end up having a hack and a bunch of solutions in order to make that work it's also not to be confused with the",
    "start": "1360409",
    "end": "1367309"
  },
  {
    "text": "Facebook Graph API has anybody here used the Facebook Graph API okay a couple of",
    "start": "1367309",
    "end": "1373340"
  },
  {
    "text": "hands but most people don't seem to be familiar with it the Facebook Graph API is the Facebook third-party developer",
    "start": "1373340",
    "end": "1380570"
  },
  {
    "text": "API and that's actually a REST API so common poor choice of names you know the",
    "start": "1380570",
    "end": "1386659"
  },
  {
    "text": "group the word graph seems to be very popular but graph is not the Facebook Graph API it's not",
    "start": "1386659",
    "end": "1391700"
  },
  {
    "text": "limited to any specific databases or any databases at all as I'll show you later the code that fills out the value for",
    "start": "1391700",
    "end": "1398240"
  },
  {
    "text": "any given field is just arbitrary code and that means that you're not you can",
    "start": "1398240",
    "end": "1403700"
  },
  {
    "text": "draw that data from a database you can read it from a cache you can calculate it on the fly you can generate random numbers whatever you want to do you can",
    "start": "1403700",
    "end": "1410480"
  },
  {
    "text": "even call other API you can call the graphical ApS call REST API and use graphical as a wrapper around a bunch of",
    "start": "1410480",
    "end": "1415610"
  },
  {
    "text": "REST API which is actually a very common and very popular practice the server I",
    "start": "1415610",
    "end": "1421820"
  },
  {
    "text": "just showed you is running nodejs on the backend using our reference implementation but it is absolutely not",
    "start": "1421820",
    "end": "1429830"
  },
  {
    "text": "restricted to running JavaScript on the backend graphical servers have been implemented in every popular language",
    "start": "1429830",
    "end": "1435380"
  },
  {
    "text": "and there are also widely tested a production scale for example AWS app",
    "start": "1435380",
    "end": "1441260"
  },
  {
    "text": "sync which is the AWS graphic you as a service offering uses the graphical Java",
    "start": "1441260",
    "end": "1447170"
  },
  {
    "text": "server so don't be afraid to use graphical servers implemented in other languages don't contort yourself to use",
    "start": "1447170",
    "end": "1454190"
  },
  {
    "text": "the j/s implementation it's also not exclusive to the popular Facebook web",
    "start": "1454190",
    "end": "1463490"
  },
  {
    "text": "stack where you have react relay and then graph QL on the backend it actually",
    "start": "1463490",
    "end": "1468680"
  },
  {
    "text": "doesn't care what the front-end is you can actually you know you can use curl and you can hit your graph QL API it's",
    "start": "1468680",
    "end": "1475640"
  },
  {
    "text": "also very popularly used with mobile applications that are obviously not necessarily written in react and relay",
    "start": "1475640",
    "end": "1482120"
  },
  {
    "text": "and finally at the transport layer it's not limited to HTTP you can actually",
    "start": "1482120",
    "end": "1488000"
  },
  {
    "text": "perform graph QL queries over a WebSocket you can do it over a raw TCP socket you can use any transport you",
    "start": "1488000",
    "end": "1494840"
  },
  {
    "text": "want as long as it supports TCP like semantics common sense things like in order to guarantee delivery right",
    "start": "1494840",
    "end": "1500180"
  },
  {
    "text": "because if you're a graphical request gets chunked apart and you only get one half of it that's not graph QL job",
    "start": "1500180",
    "end": "1508060"
  },
  {
    "text": "so we saw one of the operations which is the query and roughly that mirrors the read operation you're trying to read",
    "start": "1511290",
    "end": "1517110"
  },
  {
    "text": "data from the graph QL server we also support two other operation types one of them is called the mutation and the",
    "start": "1517110",
    "end": "1523800"
  },
  {
    "text": "mutation is used to model rights and we also support the subscription which is a long-lived request that subscribes to a",
    "start": "1523800",
    "end": "1531510"
  },
  {
    "text": "domain specific event on the back end and whenever that domain specific event triggers the graph QL query that you",
    "start": "1531510",
    "end": "1537690"
  },
  {
    "text": "sent is reax acute 'add and the response is pushed down to the client and this enables all sorts of really cool",
    "start": "1537690",
    "end": "1543030"
  },
  {
    "text": "real-time interactions like chat rooms now I want to mention that these",
    "start": "1543030",
    "end": "1549060"
  },
  {
    "text": "graphical operations specifically query mutation are stateless and they are here",
    "start": "1549060",
    "end": "1554340"
  },
  {
    "text": "only to serve as a semantic marker a way for developers to communicate with one",
    "start": "1554340",
    "end": "1560430"
  },
  {
    "text": "another there in that regard they're very similar to the HTTP GET post put",
    "start": "1560430",
    "end": "1565500"
  },
  {
    "text": "delete verbs right I can go and create an HTTP and a REST API where I handle",
    "start": "1565500",
    "end": "1572700"
  },
  {
    "text": "the delete operation but I don't delete anything right I can do that it would be",
    "start": "1572700",
    "end": "1578430"
  },
  {
    "text": "very confusing to you as the users of that API but I can do it nonetheless similarly I can wire up an HTTP GET",
    "start": "1578430",
    "end": "1584910"
  },
  {
    "text": "operation to go and delete a bunch of records in the database but again that would not be intuitive and so it is with",
    "start": "1584910",
    "end": "1591360"
  },
  {
    "text": "the query in the mutation you can write a query that goes into lease records in the database and you can write a mutation that does no such thing they're",
    "start": "1591360",
    "end": "1598020"
  },
  {
    "text": "just tools for you to communicate so please use them responsibly next let's",
    "start": "1598020",
    "end": "1604380"
  },
  {
    "text": "put that query structure under a microscope what were you see here is all",
    "start": "1604380",
    "end": "1610230"
  },
  {
    "text": "this text is called the graph QL document and you can see that when we send this to the server we're getting",
    "start": "1610230",
    "end": "1616200"
  },
  {
    "text": "back JSON that closely resembles the document that we send so when the server",
    "start": "1616200",
    "end": "1622080"
  },
  {
    "text": "receives this document it's going to take a first pass and it's going to validate it and if it's valid then the",
    "start": "1622080",
    "end": "1627120"
  },
  {
    "text": "server will try to execute it which means that it's going to implement all the functions that back all the",
    "start": "1627120",
    "end": "1632340"
  },
  {
    "text": "different fields I've highlighted here the operation type again this is query",
    "start": "1632340",
    "end": "1638420"
  },
  {
    "text": "mutation or subscription and the operation type determines which route fields we can specify",
    "start": "1638420",
    "end": "1645120"
  },
  {
    "text": "in the selection set below for example you know the ad field the ad route field",
    "start": "1645120",
    "end": "1653280"
  },
  {
    "text": "might be valid as a mutation but not as a query this next highlighted segment",
    "start": "1653280",
    "end": "1661410"
  },
  {
    "text": "here is called the operation name and this is a name that the client can specify it can be any alphanumeric",
    "start": "1661410",
    "end": "1668190"
  },
  {
    "text": "string and the operation name is sent along with the server and it's very useful for debugging and identifying",
    "start": "1668190",
    "end": "1675570"
  },
  {
    "text": "which operation to execute if the graphical document contains more than one now what we see here inside these",
    "start": "1675570",
    "end": "1686520"
  },
  {
    "text": "parentheses is the set of query variables and query variables allow us",
    "start": "1686520",
    "end": "1692580"
  },
  {
    "text": "to turn this thing into a reusable query right because if I hard-coded the ID of",
    "start": "1692580",
    "end": "1697740"
  },
  {
    "text": "the author here this query is only ever good for fetching one specific author not a very useful piece of code but if I",
    "start": "1697740",
    "end": "1704880"
  },
  {
    "text": "extract the ID and say this is the thing that can change and whatever ID you pass me I'm gonna try to find an author with",
    "start": "1704880",
    "end": "1710520"
  },
  {
    "text": "that ID and fetch the following fields now this query is much more generally useful and then here I've highlighted",
    "start": "1710520",
    "end": "1719160"
  },
  {
    "text": "the selection set which is designated by the pair of opening and curly braces and",
    "start": "1719160",
    "end": "1725040"
  },
  {
    "text": "again the selection set is going to give us a preview of what the return JSON object looks like within this election",
    "start": "1725040",
    "end": "1731940"
  },
  {
    "text": "set we have the route field and you can think of this as the entry point into the graph you have to enter into the",
    "start": "1731940",
    "end": "1736980"
  },
  {
    "text": "graph somewhere and so this is the at the root of your selection set and then",
    "start": "1736980",
    "end": "1743100"
  },
  {
    "text": "here we have a nested selection set because when you select for book every book is actually a complex type right",
    "start": "1743100",
    "end": "1751380"
  },
  {
    "text": "but graph your queries they they have to terminate in what are called scalar types scalar types go no further",
    "start": "1751380",
    "end": "1756929"
  },
  {
    "text": "for example scalar types include bulls strings int floats IDs but if you have a",
    "start": "1756929",
    "end": "1765870"
  },
  {
    "text": "complex type like person you can't just say give me person because then graph Gale doesn't know what fields under person to return so all queries in graph",
    "start": "1765870",
    "end": "1773790"
  },
  {
    "text": "key all legal queries must terminate in scalar types",
    "start": "1773790",
    "end": "1778520"
  },
  {
    "text": "and now that we've seen Groff kill in action and we understand in the query Anatomy I'm sure you're wondering well",
    "start": "1782120",
    "end": "1788730"
  },
  {
    "text": "how do we build one of these graft queue all api's and for that I all the code",
    "start": "1788730",
    "end": "1794280"
  },
  {
    "text": "that I showed you the the graph kills server that we were using that was running out of this project right here",
    "start": "1794280",
    "end": "1801650"
  },
  {
    "text": "let me show you so here you can see that when we fetch a person can everybody see",
    "start": "1801650",
    "end": "1807929"
  },
  {
    "text": "in the back ok so you can see that this is a resolver and a resolver is the name",
    "start": "1807929",
    "end": "1813929"
  },
  {
    "text": "that we give a function that fulfills one of the graph QL fields and the framework that I'm using here by the way",
    "start": "1813929",
    "end": "1820260"
  },
  {
    "text": "this is this is a nodejs with typescript and this framework that I'm using here",
    "start": "1820260",
    "end": "1827400"
  },
  {
    "text": "is called type graph QL I highly recommend it I think it's one of the quickest ways to get started with",
    "start": "1827400",
    "end": "1832770"
  },
  {
    "text": "building a graph QL server especially if you're already familiar with javascript and typescript but as I start adding as I start making",
    "start": "1832770",
    "end": "1840150"
  },
  {
    "text": "some changes I think everything's going to make a lot of sense so if I come in here and I say something like I can just",
    "start": "1840150",
    "end": "1845309"
  },
  {
    "text": "copy this thing and use it as reference code I don't even need to copy it it's so simple I can say query and I'm gonna",
    "start": "1845309",
    "end": "1852450"
  },
  {
    "text": "add a new query that returns something of type string okay oops let's give it a",
    "start": "1852450",
    "end": "1861510"
  },
  {
    "text": "name let's call it demo query and therefore",
    "start": "1861510",
    "end": "1869740"
  },
  {
    "text": "the demo query I'm just going to return",
    "start": "1869740",
    "end": "1873330"
  },
  {
    "text": "that",
    "start": "1878170",
    "end": "1880770"
  },
  {
    "text": "I know I have a syntax error somewhere",
    "start": "1898530",
    "end": "1903560"
  },
  {
    "text": "I'm sorry can you speak up",
    "start": "1905000",
    "end": "1908690"
  },
  {
    "text": "twelve oh thank you the opening quote",
    "start": "1911850",
    "end": "1919320"
  },
  {
    "text": "okay let's uh see if that compiles and this is a it's just running a watch",
    "start": "1919320",
    "end": "1925750"
  },
  {
    "text": "process so whenever it detects a file change I whenever I click save its recompiling so this worked then the demo",
    "start": "1925750",
    "end": "1933520"
  },
  {
    "text": "queries should now show up in my schema and let's see if that's the case you can",
    "start": "1933520",
    "end": "1943480"
  },
  {
    "text": "refresh this pop-up in the schema and I can see right here demo query right and",
    "start": "1943480",
    "end": "1950350"
  },
  {
    "text": "it says it returns a scalar of type string which means I can come in here and just say oops demo query and I get",
    "start": "1950350",
    "end": "1959830"
  },
  {
    "text": "the hello Toronto that's how easy it is and now obviously you can put in any",
    "start": "1959830",
    "end": "1966370"
  },
  {
    "text": "code you want here right you can put in code to call a lambda function you can put in code to make a database call you",
    "start": "1966370",
    "end": "1973090"
  },
  {
    "text": "can put in code to check whether or not the current user is authorized now let me show you one other thing so far we've",
    "start": "1973090",
    "end": "1978400"
  },
  {
    "text": "been working with queries only let me show you a mutation and again these are",
    "start": "1978400",
    "end": "1983770"
  },
  {
    "text": "these add symbols these are experimental drug decorators for JavaScript this is not a fully functional feature yet so",
    "start": "1983770",
    "end": "1989830"
  },
  {
    "text": "when you use type graph QL you do have to transpile the code",
    "start": "1989830",
    "end": "1994770"
  },
  {
    "text": "I'm gonna specify a mutation that returns a int and I'm not gonna make the",
    "start": "1997570",
    "end": "2005909"
  },
  {
    "text": "same mistake again but I'm going to create a simple add operation right I'm going to say this add operation takes in",
    "start": "2005909",
    "end": "2012090"
  },
  {
    "text": "as an argument value a a which is of",
    "start": "2012090",
    "end": "2019649"
  },
  {
    "text": "type number",
    "start": "2019649",
    "end": "2022940"
  },
  {
    "text": "I think it's gonna pick up that automatically actually let me keep going",
    "start": "2031350",
    "end": "2036350"
  },
  {
    "text": "oops",
    "start": "2046860",
    "end": "2049279"
  },
  {
    "text": "can I come back in here into the demo I can see that now instead of a query it",
    "start": "2063990",
    "end": "2071370"
  },
  {
    "text": "disappears under the mutations operation type which is exactly what I expect right if I click into here it says",
    "start": "2071370",
    "end": "2078899"
  },
  {
    "text": "that's a little weird it takes flow to takes fluid and returns int but that's fine",
    "start": "2078900",
    "end": "2085700"
  },
  {
    "text": "okay so there I just showed that you can write arbitrary code you don't have to just return boring hard-coded strings",
    "start": "2092379",
    "end": "2098369"
  },
  {
    "text": "and the problem with like declaring the inputs as floats that's just inferring that because in typescript I specify the",
    "start": "2098369",
    "end": "2104920"
  },
  {
    "text": "input arguments as number and typescript doesn't distinguish typescript by by virtue of JavaScript does distinguish",
    "start": "2104920",
    "end": "2110920"
  },
  {
    "text": "between instant floats right okay so that's what it's like to build",
    "start": "2110920",
    "end": "2117400"
  },
  {
    "text": "the server and I know that's the snapshot it's got everything set up but if you go back to the demo Dobbs udev",
    "start": "2117400",
    "end": "2123430"
  },
  {
    "text": "there's a link to the repo where you can clone that repo and it has all this code so you can play around with it you can",
    "start": "2123430",
    "end": "2129309"
  },
  {
    "text": "modify it and ask me questions on the repo file issues if you have any",
    "start": "2129309",
    "end": "2134319"
  },
  {
    "text": "problems okay let me give you a quick",
    "start": "2134319",
    "end": "2139390"
  },
  {
    "text": "history of graph QL the first version was actually built internally at Facebook in 20 in 2012 and was built to",
    "start": "2139390",
    "end": "2145839"
  },
  {
    "text": "support the data fetching needs of the Facebook mobile applications because the rest architectural style was not cutting",
    "start": "2145839",
    "end": "2153039"
  },
  {
    "text": "it in 2015 graph QL was open sourced specifically it was open source in two",
    "start": "2153039",
    "end": "2159400"
  },
  {
    "text": "parts the first is the graph QL language specification that I mentioned and the second is the reference implementation that we wrote in JavaScript and node 4",
    "start": "2159400",
    "end": "2167259"
  },
  {
    "text": "node J s just last year in 2018 we announced the formation of the graph QL",
    "start": "2167259",
    "end": "2172960"
  },
  {
    "text": "foundation and AWS is a proud founding member of the graph QL foundation what",
    "start": "2172960",
    "end": "2179529"
  },
  {
    "text": "the graph Gale foundation seeks to do is provide a neutral home for graph QL to evolve and it's the umbrella",
    "start": "2179529",
    "end": "2186369"
  },
  {
    "text": "organization that hosts and supports all the major graphical projects such as the reference publication and graphical that",
    "start": "2186369",
    "end": "2192430"
  },
  {
    "text": "we've been using today graph QL powers",
    "start": "2192430",
    "end": "2197799"
  },
  {
    "text": "many things most notably the Facebook mobile and web applications with over 2",
    "start": "2197799",
    "end": "2204579"
  },
  {
    "text": "billion daily active users they collectively send over one trillion graph QL queries a day so I think it's",
    "start": "2204579",
    "end": "2212559"
  },
  {
    "text": "safe to say that it's proven at scale so use widely it's growing quickly and of",
    "start": "2212559",
    "end": "2217569"
  },
  {
    "text": "course many other companies are using graph QL including Amazon github Pinterest Intuit Coursera twitch users",
    "start": "2217569",
    "end": "2226119"
  },
  {
    "text": "fq l you hear that chat",
    "start": "2226119",
    "end": "2229318"
  },
  {
    "text": "now there are a lot of architectures frameworks libraries and patterns that help you facilitate client-server",
    "start": "2234580",
    "end": "2241750"
  },
  {
    "text": "communication and I don't have time to go through all of these we'd be here all day so in order to give you a better sense",
    "start": "2241750",
    "end": "2249520"
  },
  {
    "text": "of graph QL how graph Cal fits into this space I'm just going to compare graph QL to rest because that's the API that",
    "start": "2249520",
    "end": "2256830"
  },
  {
    "text": "we're most familiar with we've been working with it for a long time we already saw rest and graphical in action",
    "start": "2256830",
    "end": "2262360"
  },
  {
    "text": "side by side but I want them doing more detailed comparison for you and by the",
    "start": "2262360",
    "end": "2268210"
  },
  {
    "text": "way if you're curious how graph Cal compares to any of these other technologies come talk to me afterward",
    "start": "2268210",
    "end": "2273930"
  },
  {
    "text": "so before I dive in you're gonna see a lot of literature online about how graph",
    "start": "2274770",
    "end": "2281530"
  },
  {
    "text": "QL is gonna kill rest and how awful rest is that is overreaching you know this",
    "start": "2281530",
    "end": "2290320"
  },
  {
    "text": "framework sorry this trade-off that I'm about to do you really need to think of it in terms of trade-offs do not try to",
    "start": "2290320",
    "end": "2296800"
  },
  {
    "text": "keep score and tally a checkbox in each call and that's not how it's gonna go right for some use cases graph QL is",
    "start": "2296800",
    "end": "2303490"
  },
  {
    "text": "gonna offer a certain kind of benefit and for other use cases rest is going to offer a certain kind of benefit and you",
    "start": "2303490",
    "end": "2309430"
  },
  {
    "text": "as builders us engineers us visionaries you need to go figure out which is the",
    "start": "2309430",
    "end": "2314590"
  },
  {
    "text": "right solution for your problem okay there's no service that can do that for you by show of hands how many people in",
    "start": "2314590",
    "end": "2323500"
  },
  {
    "text": "the room think they know what a REST API is okay please keep your hands up high",
    "start": "2323500",
    "end": "2328750"
  },
  {
    "text": "raise them high okay that's a lot of hands now keep your hand up if you think you will agree with",
    "start": "2328750",
    "end": "2334570"
  },
  {
    "text": "everyone else who has their hands raised about what a REST API is okay we have",
    "start": "2334570",
    "end": "2341350"
  },
  {
    "text": "one one per one person who thinks he'll agree with everybody else he went where their hands went down so that is our",
    "start": "2341350",
    "end": "2348790"
  },
  {
    "text": "first point of comparison there's no shared definition for rest because rest",
    "start": "2348790",
    "end": "2354760"
  },
  {
    "text": "is it was a name that was coined after the fact right it was coined by dr. Roy",
    "start": "2354760",
    "end": "2362710"
  },
  {
    "text": "fielding in his dissertation in 2000 he studied successful architectures on the",
    "start": "2362710",
    "end": "2368020"
  },
  {
    "text": "web and he identified these architectural constraints that comprise rest and he",
    "start": "2368020",
    "end": "2373420"
  },
  {
    "text": "called this set of things rest therefore rest as an architectural style is not a",
    "start": "2373420",
    "end": "2379840"
  },
  {
    "text": "specification it's not an implementation so I can say I have a REST API you can",
    "start": "2379840",
    "end": "2385690"
  },
  {
    "text": "say you have a REST API and we might mean different things so different in fact that it's incompatible if I just",
    "start": "2385690",
    "end": "2391330"
  },
  {
    "text": "told you I have a REST API do you know how to call it I think the Star Wars API example made it very clear that the",
    "start": "2391330",
    "end": "2397750"
  },
  {
    "text": "answer is no even if you follow a lot of the rest architectural constraints to the letter you can explore it as a human",
    "start": "2397750",
    "end": "2403000"
  },
  {
    "text": "being but you without going through and digging through it you don't actually know how to call it right the second",
    "start": "2403000",
    "end": "2411130"
  },
  {
    "text": "point is that rest and graph QL have different conceptual models in rest the",
    "start": "2411130",
    "end": "2418390"
  },
  {
    "text": "organizing model is the resource and a resource you can think of a resource as",
    "start": "2418390",
    "end": "2424540"
  },
  {
    "text": "a virtual file that sits on the server but with graph QL the organizing model",
    "start": "2424540",
    "end": "2429970"
  },
  {
    "text": "is the graph that is all of the types and they're scalar fields as we saw",
    "start": "2429970",
    "end": "2435280"
  },
  {
    "text": "defined in the schema and consequently that means that rest has a bunch of",
    "start": "2435280",
    "end": "2440950"
  },
  {
    "text": "different entry points into the API whereas rest has only one entry point",
    "start": "2440950",
    "end": "2446140"
  },
  {
    "text": "one URL to get into the API to issue all requests and from then on you're",
    "start": "2446140",
    "end": "2451210"
  },
  {
    "text": "exploring one consistent graph as defined by the schema",
    "start": "2451210",
    "end": "2455850"
  },
  {
    "text": "graph QL and rest also have differences in terms of how they're organized and if you think I'm out what makes rest so",
    "start": "2458700",
    "end": "2465540"
  },
  {
    "text": "powerful it's this decentralized model it's the federated model you can go to IMDB and IMDB will have a hyper media",
    "start": "2465540",
    "end": "2472710"
  },
  {
    "text": "link to Wikipedia for you know the fact that or not actor is also an author and then in Wikipedia it lists the ISBN",
    "start": "2472710",
    "end": "2479340"
  },
  {
    "text": "numbers for all the books that this author wrote that you can then go and purchase on Amazon right that's what's",
    "start": "2479340",
    "end": "2484650"
  },
  {
    "text": "really cool about rest that's what's really powerful about rest if all of those different services and all those different types were forced to be",
    "start": "2484650",
    "end": "2490590"
  },
  {
    "text": "consistent with one another we would not have the web at the scale and success that we have today but by contrast graph",
    "start": "2490590",
    "end": "2497580"
  },
  {
    "text": "QL is centralized it guarantees that whatever is within the schema is consistent with all the different types it would be awkward if graph Gil told me",
    "start": "2497580",
    "end": "2505110"
  },
  {
    "text": "yeah I can I have the person field I can index into the the planet field that the planet type and then the planet type",
    "start": "2505110",
    "end": "2510270"
  },
  {
    "text": "doesn't actually have the type that it just told me it had right that would be really confusing so graph QL is",
    "start": "2510270",
    "end": "2516030"
  },
  {
    "text": "considered a centralized organizing organizing model and consequently in graphic yo it's very difficult to link",
    "start": "2516030",
    "end": "2521760"
  },
  {
    "text": "data across two completely different schemas for example if you were to try to link data from the twitch graph QL",
    "start": "2521760",
    "end": "2527040"
  },
  {
    "text": "schema with the Twitter graph QL schema you can have a hard time because it doesn't cross link that way rest also",
    "start": "2527040",
    "end": "2535980"
  },
  {
    "text": "has one of the six rest constraints it's called the uniform interface constraint",
    "start": "2535980",
    "end": "2542460"
  },
  {
    "text": "and part of the uniform interface constraint states that you can manipulate resources through their",
    "start": "2542460",
    "end": "2549210"
  },
  {
    "text": "representations what this means is that if you fetch a rest resource then the",
    "start": "2549210",
    "end": "2554400"
  },
  {
    "text": "repetition of that resource also contains hypermedia links to delete and modify that resource is that bring about",
    "start": "2554400",
    "end": "2560130"
  },
  {
    "text": "with anyone I know it's a lot of rest jargon but it's actually very handy and in graph QL you have no such",
    "start": "2560130",
    "end": "2566820"
  },
  {
    "text": "corresponding feature you cannot fetch Luke Skywalker and then go and say oh by",
    "start": "2566820",
    "end": "2571830"
  },
  {
    "text": "the way where are all the subscriptions that tell me whenever you know Luke gets a new lightsaber or something there's",
    "start": "2571830",
    "end": "2577980"
  },
  {
    "text": "nothing like that right but instead graph QL has something called an introspection query and with the",
    "start": "2577980",
    "end": "2584040"
  },
  {
    "text": "introspection query allows you to do is to ask what is the graphical schema water all the types what are their names",
    "start": "2584040",
    "end": "2591720"
  },
  {
    "text": "and this I argue is more generally powerful than related operations in fact",
    "start": "2591720",
    "end": "2597450"
  },
  {
    "text": "introspection queries are what power the graphical tools that we saw and they power a bunch of other tooling anytime",
    "start": "2597450",
    "end": "2603869"
  },
  {
    "text": "you're using client-side static statically typed code generation with graph QL you're using the introspection query finally we saw that there is data",
    "start": "2603869",
    "end": "2614790"
  },
  {
    "text": "typing in graph QL right we know that a field is of type flow we know that a field is of type string with rest we",
    "start": "2614790",
    "end": "2622590"
  },
  {
    "text": "didn't get that and in fact we also don't know when the rest api is changed and this is kind of related to federation right if i link away to",
    "start": "2622590",
    "end": "2628320"
  },
  {
    "text": "something to an object on ebay how can i know in advance because eBay's is responsible for controlling the",
    "start": "2628320",
    "end": "2634140"
  },
  {
    "text": "representation of that object they can change it at any time so I can't know and I I don't know and I can't know ahead of time what the types are and",
    "start": "2634140",
    "end": "2640560"
  },
  {
    "text": "this is actually a benefit for rest in certain use cases but the strong data typing is a benefit if you control the",
    "start": "2640560",
    "end": "2646740"
  },
  {
    "text": "API entirely right oh what one one other point data typing was not the last point",
    "start": "2646740",
    "end": "2653030"
  },
  {
    "text": "by by using the subscription API we also support real-time operations in graph QL",
    "start": "2653030",
    "end": "2659490"
  },
  {
    "text": "where is anybody if anybody's tried to build real-time interactions with rest you know that it's kind of awkward right",
    "start": "2659490",
    "end": "2664680"
  },
  {
    "text": "at best you can pull and the reason why this you know it's gonna be awkward forever because rest has another",
    "start": "2664680",
    "end": "2670619"
  },
  {
    "text": "constraint called the statelessness constraint how do you build rest real-time API is that are by definition stateful if you're trying to be",
    "start": "2670619",
    "end": "2677280"
  },
  {
    "text": "stateless it's just anybody who asked these questions you know it's never gonna work out or somebody's gonna call",
    "start": "2677280",
    "end": "2683070"
  },
  {
    "text": "your API not truly restful so there are",
    "start": "2683070",
    "end": "2688170"
  },
  {
    "text": "a lot of challenges I won't have time to go over each of these but I do want to dive into a few the first is efficiency",
    "start": "2688170",
    "end": "2695790"
  },
  {
    "text": "and as you saw we had two problems with the REST API we had over fetching which",
    "start": "2695790",
    "end": "2701520"
  },
  {
    "text": "is when the response contained too much data such as that opening crawling text that we got back from the episode and we",
    "start": "2701520",
    "end": "2707190"
  },
  {
    "text": "didn't use it that was wasteful the other is under fetching which is when we get the data back it has a bunch of hypermedia links and that's actually not",
    "start": "2707190",
    "end": "2714060"
  },
  {
    "text": "the thing I want that doesn't contain the data I want I want the data within that hypermedia link and that means that",
    "start": "2714060",
    "end": "2719339"
  },
  {
    "text": "the my only recourse is to make a subsequent network request why does this matter because networks are true",
    "start": "2719339",
    "end": "2725490"
  },
  {
    "text": "awful and the most difficult thing for you to deal with when you're building a distributed application for reference if",
    "start": "2725490",
    "end": "2732180"
  },
  {
    "text": "you're using a modern SSD and a non-volatile memory SSD those things that look like little sticks of gum if",
    "start": "2732180",
    "end": "2738660"
  },
  {
    "text": "you have one of those recent models have read speeds that frequently exceed one",
    "start": "2738660",
    "end": "2745260"
  },
  {
    "text": "megabyte per 400 or sorry let me put another way the time it takes to read one megabyte of sequential data off of",
    "start": "2745260",
    "end": "2751830"
  },
  {
    "text": "one of these modern SSDs is about 400 microseconds okay compare that with the",
    "start": "2751830",
    "end": "2758040"
  },
  {
    "text": "ideal network packet round-trip time between the US and Europe which is 150",
    "start": "2758040",
    "end": "2764460"
  },
  {
    "text": "milliseconds the difference is a factor of about 350 that would be like the",
    "start": "2764460",
    "end": "2772200"
  },
  {
    "text": "difference between ordering something on Amazon and getting next day shipping versus getting next year shipping right",
    "start": "2772200",
    "end": "2779490"
  },
  {
    "text": "so when you over fetch when you under fetch you saw the huge difference it made between building the the Star Wars",
    "start": "2779490",
    "end": "2786450"
  },
  {
    "text": "characters that appeared with Luke Skywalker and films with Luke Skywalker you saw the huge difference it made between executing 100 Network requests",
    "start": "2786450",
    "end": "2792810"
  },
  {
    "text": "warehouse execute a single network request and this matters even more because often you know I used idealized",
    "start": "2792810",
    "end": "2800010"
  },
  {
    "text": "network conditions network conditions are far from ideal as we all know at at this conference right yesterday the",
    "start": "2800010",
    "end": "2805650"
  },
  {
    "text": "network was kicking in and out if you can get one network response and with all the data that's the difference between your customer spending money on",
    "start": "2805650",
    "end": "2811770"
  },
  {
    "text": "your application versus throwing their hands up in frustration and putting application down and forgetting about it forever right so this has real monetary",
    "start": "2811770",
    "end": "2818640"
  },
  {
    "text": "consequences for your business the other thing is there are entire parts of the",
    "start": "2818640",
    "end": "2823950"
  },
  {
    "text": "world developing parts of the world that we're the only device a person has is a",
    "start": "2823950",
    "end": "2829980"
  },
  {
    "text": "mobile device and often these mobile devices are built for cost they're",
    "start": "2829980",
    "end": "2835380"
  },
  {
    "text": "optimized for costs so they have limited CPU they have limited memory they have limited storage and they're also on very",
    "start": "2835380",
    "end": "2844619"
  },
  {
    "text": "spotty connections 2g connections at best sometimes these these these cell phone",
    "start": "2844619",
    "end": "2850140"
  },
  {
    "text": "plans also carry data caps and let's not think that just because we're in Canada or North America that this problem",
    "start": "2850140",
    "end": "2856080"
  },
  {
    "text": "doesn't affect us if you've traveled and you're at the Airport and you join the Wi-Fi network there well you've experienced third",
    "start": "2856080",
    "end": "2863190"
  },
  {
    "text": "world network connectivity so you really want to optimize the network and this is",
    "start": "2863190",
    "end": "2869490"
  },
  {
    "text": "a problem the under fetching problem is a problem that gets worse the better you get at implementing the hypermedia",
    "start": "2869490",
    "end": "2875310"
  },
  {
    "text": "constraint for rest api's the hypermedia constraint is also known as hey Dios it",
    "start": "2875310",
    "end": "2880320"
  },
  {
    "text": "is the most opinionated and difficult constraint to abide by within rest and the better you get at that the more",
    "start": "2880320",
    "end": "2885630"
  },
  {
    "text": "hypermedia links you have connecting to one another I'm told that I only have",
    "start": "2885630",
    "end": "2891150"
  },
  {
    "text": "two minutes left so I unfortunately need to hurry through the rest of this so type safety I mentioned this graph QL",
    "start": "2891150",
    "end": "2898860"
  },
  {
    "text": "schema gives you a priori knowledge of what the data types are what you can",
    "start": "2898860",
    "end": "2903990"
  },
  {
    "text": "expect therefore wait for building any client-side statically typed code you don't have to deal with dynamically",
    "start": "2903990",
    "end": "2909000"
  },
  {
    "text": "typed JSON you can have higher confidence of what the data types actually are another really subtle",
    "start": "2909000",
    "end": "2915210"
  },
  {
    "text": "advantage that you get from graph QL is in terms of domain modeling has anybody here read Eric Evans book two main",
    "start": "2915210",
    "end": "2921660"
  },
  {
    "text": "driven design okay not a lot of people but this is I highly recommend this book because this is a",
    "start": "2921660",
    "end": "2927780"
  },
  {
    "text": "book written in 2004 by Eric Evans and in it he says that there's this concept called a ubiquitous language that forms",
    "start": "2927780",
    "end": "2933990"
  },
  {
    "text": "as you build a business and the ubiquitous language is the plain language that you use to describe the business entities processes and",
    "start": "2933990",
    "end": "2940800"
  },
  {
    "text": "relations and what this allows you to do is to basically involve everybody technical or non-technical in helping",
    "start": "2940800",
    "end": "2946590"
  },
  {
    "text": "shape the capabilities of the business if your domain language gets bogged down by technical jargon if you're constantly",
    "start": "2946590",
    "end": "2953970"
  },
  {
    "text": "talking about resources tables joins you're actually eroding the power and",
    "start": "2953970",
    "end": "2959550"
  },
  {
    "text": "the expressiveness of the ubiquitous language you need to keep the ubiquitous language sharp clear unambiguous and",
    "start": "2959550",
    "end": "2965250"
  },
  {
    "text": "graphical helps you do that it helps you create a more clear shared language because the graph model is a better fit",
    "start": "2965250",
    "end": "2971850"
  },
  {
    "text": "for most business processes it Maps naturally to say I want to fetch the first names of the characters that are",
    "start": "2971850",
    "end": "2977280"
  },
  {
    "text": "in films that's a graphical query but that's also plain English don't underestimate how powerful this",
    "start": "2977280",
    "end": "2982500"
  },
  {
    "text": "capability is let me skip that talk me offline if you want to learn how to",
    "start": "2982500",
    "end": "2987870"
  },
  {
    "text": "version graph QL api's spoiler don't do it to lien documentation you saw a powerful",
    "start": "2987870",
    "end": "2993329"
  },
  {
    "text": "graphical is I'm not gonna spend more time on this authentication or authorization a big question it comes up",
    "start": "2993329",
    "end": "2999509"
  },
  {
    "text": "over and over again I'm sorry I have to really race through this but you do not",
    "start": "2999509",
    "end": "3004880"
  },
  {
    "text": "want to put authentication authorization into the graph QL there why not simply put you should not be replacing your",
    "start": "3004880",
    "end": "3010519"
  },
  {
    "text": "REST API with graph QL often there's a smooth migration path they're gonna be living side by side if you put authorization logic into the graph QL",
    "start": "3010519",
    "end": "3016910"
  },
  {
    "text": "layer you have to duplicate it for your rest layer and your PC layer and then when you push you have to have atomic",
    "start": "3016910",
    "end": "3022849"
  },
  {
    "text": "pushes very hard to deal with don't do it keep it in a business logic layer the rest I have to go after",
    "start": "3022849",
    "end": "3029359"
  },
  {
    "text": "unfortunately I'm being told that I am out of time so I have to end here but if",
    "start": "3029359",
    "end": "3034910"
  },
  {
    "text": "you want to chat more I'm gonna stick around so it has been a pleasure thank",
    "start": "3034910",
    "end": "3040390"
  },
  {
    "text": "you for for spending your time with me and I look forward to meeting you",
    "start": "3040390",
    "end": "3048880"
  }
]