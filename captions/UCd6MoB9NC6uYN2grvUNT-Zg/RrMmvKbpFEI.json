[
  {
    "text": "In this video, you’ll see how to connect Amazon",
    "start": "0",
    "end": "2400"
  },
  {
    "text": "Virtual Private Cloud (Amazon VPC) data \nsources with Amazon Managed Grafana.",
    "start": "2400",
    "end": "7687"
  },
  {
    "text": "With this capability, you can create an \nAmazon Managed Grafana workspace,",
    "start": "8131",
    "end": "12226"
  },
  {
    "text": "connect it to a data source in an \nAmazon VPC, and then query the",
    "start": "12226",
    "end": "15991"
  },
  {
    "text": "VPC data source using \nAmazon Managed Grafana.",
    "start": "15991",
    "end": "18900"
  },
  {
    "text": "We’ll begin in Amazon Managed Grafana, \nwhere we’ll create a new workspace.",
    "start": "21140",
    "end": "24831"
  },
  {
    "text": "Let’s name the workspace.",
    "start": "25932",
    "end": "27257"
  },
  {
    "text": "We’ll choose AWS IAM Identity \nCenter for the authentication method.",
    "start": "33360",
    "end": "37680"
  },
  {
    "text": "We’ll use the default service \nmanaged permission type.",
    "start": "39960",
    "end": "42600"
  },
  {
    "text": "Next, we'll select an outbound VPC connection.",
    "start": "43208",
    "end": "45921"
  },
  {
    "text": "For this example, we’ll use a VPC that already \nhas an OpenSearch Service domain configured.",
    "start": "47900",
    "end": "52820"
  },
  {
    "text": "Next, we’ll select two subnets to map \nthe Availability Zones for our VPC.",
    "start": "54088",
    "end": "58348"
  },
  {
    "text": "We’ll select a security group and continue.",
    "start": "68079",
    "end": "70059"
  },
  {
    "text": "We’ll select Amazon OpenSearch \nService as our data source.",
    "start": "78260",
    "end": "81560"
  },
  {
    "text": "For the notification channel, \nwe’ll use Amazon SNS.",
    "start": "82500",
    "end": "85560"
  },
  {
    "text": "Let’s create the workspace.",
    "start": "87845",
    "end": "89165"
  },
  {
    "text": "While the workspace is being created,",
    "start": "94748",
    "end": "96577"
  },
  {
    "text": "let's navigate to the Amazon \nOpenSearch Service console.",
    "start": "96577",
    "end": "99728"
  },
  {
    "text": "For the purposes of this demo, we already \nhave an OpenSearch Service domain.",
    "start": "102102",
    "end": "105941"
  },
  {
    "text": "Let’s view it.",
    "start": "106090",
    "end": "107049"
  },
  {
    "text": "The OpenSearch Service domain \nis only accessible in a VPC,",
    "start": "110340",
    "end": "113792"
  },
  {
    "text": "so opening the URL will time out.",
    "start": "113792",
    "end": "115740"
  },
  {
    "text": "The domain has a Security Group,",
    "start": "120360",
    "end": "122218"
  },
  {
    "text": "which allows Grafana security \ngroups to access the cluster.",
    "start": "122218",
    "end": "125189"
  },
  {
    "text": "Let’s drill down to view its rules.",
    "start": "125553",
    "end": "127359"
  },
  {
    "text": "The security group has two inbound rules.",
    "start": "130560",
    "end": "133076"
  },
  {
    "text": "One gives domain access to Grafana, \nand the other gives domain access to a",
    "start": "133440",
    "end": "137452"
  },
  {
    "text": "bastion host on Amazon Elastic \nCompute Cloud (Amazon EC2).",
    "start": "137452",
    "end": "141660"
  },
  {
    "text": "Let’s navigate to the EC2 Management \nconsole and find the host instance.",
    "start": "142320",
    "end": "146160"
  },
  {
    "text": "We’ll copy the OpenSearch Dashboards \nURL so we can use it to verify connectivity.",
    "start": "153392",
    "end": "157712"
  },
  {
    "text": "Let’s try connecting to the domain.",
    "start": "160888",
    "end": "162568"
  },
  {
    "text": "The bastion host has access to \nthe domain on a network level,  ",
    "start": "165437",
    "end": "168607"
  },
  {
    "text": "so we can use port forwarding to \nforward the local traffic to OpenSearch.",
    "start": "168607",
    "end": "172506"
  },
  {
    "text": "Before we can forward traffic, we’ll need to give \nthe security groups SSH access to the instance.",
    "start": "173514",
    "end": "178739"
  },
  {
    "text": "We’ll edit the bastion security group’s inbound \nrules to authorize SSH access on our local IP.",
    "start": "182371",
    "end": "187951"
  },
  {
    "text": "Now we’ll run a command to \nstart forwarding the traffic.",
    "start": "194585",
    "end": "197293"
  },
  {
    "text": "Now, let’s open the OpenSearch \nDashboard on localhost.",
    "start": "200060",
    "end": "203231"
  },
  {
    "text": "We'll add some sample flight data \nthat we can search for in Grafana.",
    "start": "210388",
    "end": "213448"
  },
  {
    "text": "Next, we’ll view the security roles.",
    "start": "215942",
    "end": "217982"
  },
  {
    "text": "Next, we’ll set up an OpenSearch \nrole for Grafana users.",
    "start": "222871",
    "end": "225871"
  },
  {
    "text": "Let’s return to the Grafana console.",
    "start": "226494",
    "end": "228354"
  },
  {
    "text": "Our workspace has been created successfully.",
    "start": "229479",
    "end": "231699"
  },
  {
    "text": "The Network Access Control tab displays \nthe VPC settings we configured earlier.",
    "start": "233897",
    "end": "238037"
  },
  {
    "text": "Let’s copy the IAM role for the \nworkspace and return to OpenSearch.",
    "start": "239213",
    "end": "242844"
  },
  {
    "text": "On the OpenSearch Dashboard, we’ll \nselect the all_access role and map a user.",
    "start": "245742",
    "end": "249942"
  },
  {
    "text": "We’ll map the backend role to \nthe IAM role we just copied.",
    "start": "254634",
    "end": "257814"
  },
  {
    "text": "The Grafana workspace now has access to",
    "start": "260165",
    "end": "262186"
  },
  {
    "text": "OpenSearch on the network level and \nat the authentication layer level.",
    "start": "262186",
    "end": "265685"
  },
  {
    "text": "Next, let's assign a user to connect to \nGrafana and configure OpenSearch connectivity.",
    "start": "266851",
    "end": "271231"
  },
  {
    "text": "For demonstration purposes, we have one user.",
    "start": "273942",
    "end": "276344"
  },
  {
    "text": "Let’s assign the user access to Grafana,",
    "start": "276799",
    "end": "278757"
  },
  {
    "text": "and make them an Admin so \nthey can perform all actions.",
    "start": "278757",
    "end": "281392"
  },
  {
    "text": "Next, we’ll open Grafana and sign \nin with AWS IAM Identity Center.",
    "start": "285102",
    "end": "289181"
  },
  {
    "text": "Let’s add the OpenSearch data source.",
    "start": "292085",
    "end": "294125"
  },
  {
    "text": "For the domain URL, we’ll go to the OpenSearch \nconsole and copy the domain endpoint.",
    "start": "302394",
    "end": "306774"
  },
  {
    "text": "We’ll select SigV4 authentication, which will use  ",
    "start": "315377",
    "end": "318240"
  },
  {
    "text": "the Grafana IAM role to connect to the \nindex through the OpenSearch mapping.",
    "start": "318240",
    "end": "322000"
  },
  {
    "text": "Next, we’ll select the default region.",
    "start": "323165",
    "end": "325025"
  },
  {
    "text": "Next, we’ll need the OpenSearch index name.",
    "start": "330422",
    "end": "332642"
  },
  {
    "text": "We can retrieve this from \nthe OpenSearch Dashboard.",
    "start": "333131",
    "end": "335434"
  },
  {
    "text": "We’ll navigate to the Discover dashboard.",
    "start": "337299",
    "end": "339325"
  },
  {
    "text": "We’ll copy the index name.",
    "start": "341908",
    "end": "343348"
  },
  {
    "text": "When entering details, it’s important \nnot to include additional spaces.",
    "start": "350382",
    "end": "354042"
  },
  {
    "text": "Next, we’ll specify the time field name.",
    "start": "355074",
    "end": "357414"
  },
  {
    "text": "On the OpenSearch Dashboard Discover page, \nwe can view all detected fields in the left pane.",
    "start": "358505",
    "end": "363245"
  },
  {
    "text": "We’ll use the timestamp field.",
    "start": "363541",
    "end": "365340"
  },
  {
    "text": "Now, we'll save and test the data source.",
    "start": "370651",
    "end": "372871"
  },
  {
    "text": "The data source is now connected.",
    "start": "376114",
    "end": "377854"
  },
  {
    "text": "On the Data Sources page, we can see that \nOpenSearch is configured for our private domain.",
    "start": "380502",
    "end": "385002"
  },
  {
    "text": "On the Explore page, OpenSearch is \navailable as a data source we can query.",
    "start": "389100",
    "end": "393051"
  },
  {
    "text": "Let's run a query using PPL.",
    "start": "394111",
    "end": "396056"
  },
  {
    "text": "We’ll query to return the index \nwith our sample data flights.",
    "start": "398762",
    "end": "401762"
  },
  {
    "text": "The OpenSearch Service data in our \nVPC has been retrieved and can be",
    "start": "404691",
    "end": "408020"
  },
  {
    "text": "used in Amazon Managed Grafana.",
    "start": "408020",
    "end": "410000"
  },
  {
    "text": "You've just seen how to connect Amazon VPC \ndata sources with Amazon Managed Grafana.",
    "start": "413382",
    "end": "417942"
  },
  {
    "text": "You can learn more about this topic in\nthe description and links for this video.",
    "start": "419222",
    "end": "422581"
  },
  {
    "text": "Thanks for watching. Now it’s your turn to try.",
    "start": "422730",
    "end": "425130"
  }
]