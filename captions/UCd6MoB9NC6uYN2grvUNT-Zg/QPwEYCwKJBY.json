[
  {
    "text": "using Docker containers means that you",
    "start": "1839",
    "end": "3800"
  },
  {
    "text": "can abstract away the software operating",
    "start": "3800",
    "end": "6480"
  },
  {
    "text": "system and Hardware configuration from",
    "start": "6480",
    "end": "8599"
  },
  {
    "text": "your app and have a standard building",
    "start": "8599",
    "end": "10400"
  },
  {
    "text": "block that you can run anywhere but when",
    "start": "10400",
    "end": "12960"
  },
  {
    "text": "you start deploying lots of these",
    "start": "12960",
    "end": "14719"
  },
  {
    "text": "containers for lots of applications",
    "start": "14719",
    "end": "17160"
  },
  {
    "text": "managing all of these container clusters",
    "start": "17160",
    "end": "19240"
  },
  {
    "text": "starts to get complicated pretty fast",
    "start": "19240",
    "end": "22400"
  },
  {
    "text": "wouldn't it be nice if you could just",
    "start": "22400",
    "end": "24279"
  },
  {
    "text": "focus on building containerized apps and",
    "start": "24279",
    "end": "26599"
  },
  {
    "text": "leave the container deployment and",
    "start": "26599",
    "end": "28439"
  },
  {
    "text": "scheduling and cluster configuration and",
    "start": "28439",
    "end": "30840"
  },
  {
    "text": "management to a service that manages all",
    "start": "30840",
    "end": "33200"
  },
  {
    "text": "of this introducing Amazon ec2 container",
    "start": "33200",
    "end": "37840"
  },
  {
    "text": "service Amazon ec2 container service is",
    "start": "37840",
    "end": "40920"
  },
  {
    "text": "a highly scalable high- performance",
    "start": "40920",
    "end": "43239"
  },
  {
    "text": "container management service that allows",
    "start": "43239",
    "end": "45280"
  },
  {
    "text": "you to run and manage distributed",
    "start": "45280",
    "end": "47840"
  },
  {
    "text": "applications ec2 container service",
    "start": "47840",
    "end": "50360"
  },
  {
    "text": "allows you to schedule launch and run",
    "start": "50360",
    "end": "52840"
  },
  {
    "text": "Docker containers across a cluster of",
    "start": "52840",
    "end": "55039"
  },
  {
    "text": "Amazon ec2 instances using a simple set",
    "start": "55039",
    "end": "57840"
  },
  {
    "text": "of apis you can build and package",
    "start": "57840",
    "end": "61079"
  },
  {
    "text": "applications into containers with Docker",
    "start": "61079",
    "end": "63359"
  },
  {
    "text": "and then seamlessly deploy the",
    "start": "63359",
    "end": "64960"
  },
  {
    "text": "applications into production with ec2",
    "start": "64960",
    "end": "67080"
  },
  {
    "text": "container service ec2 container service",
    "start": "67080",
    "end": "70400"
  },
  {
    "text": "manages a cluster of Amazon ec2",
    "start": "70400",
    "end": "72840"
  },
  {
    "text": "instances for you and takes care of the",
    "start": "72840",
    "end": "74920"
  },
  {
    "text": "state of your cluster as well as",
    "start": "74920",
    "end": "76640"
  },
  {
    "text": "scheduling running and monitoring",
    "start": "76640",
    "end": "78759"
  },
  {
    "text": "containers across your cluster ec2",
    "start": "78759",
    "end": "81880"
  },
  {
    "text": "container service schedules containers",
    "start": "81880",
    "end": "83720"
  },
  {
    "text": "to help find the optimal placement based",
    "start": "83720",
    "end": "85880"
  },
  {
    "text": "on your CPU and memory needs and you can",
    "start": "85880",
    "end": "89159"
  },
  {
    "text": "use your own schedulers with ec2",
    "start": "89159",
    "end": "91079"
  },
  {
    "text": "container service if you would",
    "start": "91079",
    "end": "92880"
  },
  {
    "text": "like with ec2 container service you can",
    "start": "92880",
    "end": "95960"
  },
  {
    "text": "run a mix of different types of",
    "start": "95960",
    "end": "97720"
  },
  {
    "text": "applications or tasks across your",
    "start": "97720",
    "end": "99680"
  },
  {
    "text": "cluster for example you might have a web",
    "start": "99680",
    "end": "102720"
  },
  {
    "text": "app that runs all the time and an image",
    "start": "102720",
    "end": "105040"
  },
  {
    "text": "processing worker that processes",
    "start": "105040",
    "end": "106759"
  },
  {
    "text": "intermittent tasks ec2 container service",
    "start": "106759",
    "end": "109799"
  },
  {
    "text": "can schedule and run these together ec2",
    "start": "109799",
    "end": "113079"
  },
  {
    "text": "container service also monitors your",
    "start": "113079",
    "end": "115159"
  },
  {
    "text": "cluster and tells you how much resources",
    "start": "115159",
    "end": "117280"
  },
  {
    "text": "are being used by each application and",
    "start": "117280",
    "end": "119680"
  },
  {
    "text": "how how much is left for new tasks ec2",
    "start": "119680",
    "end": "123200"
  },
  {
    "text": "container service allows you to quickly",
    "start": "123200",
    "end": "125079"
  },
  {
    "text": "deploy update and roll back containers",
    "start": "125079",
    "end": "127880"
  },
  {
    "text": "regardless of whether you're dealing",
    "start": "127880",
    "end": "129200"
  },
  {
    "text": "with tens or thousands of containers",
    "start": "129200",
    "end": "131800"
  },
  {
    "text": "making it easy to run all the different",
    "start": "131800",
    "end": "133879"
  },
  {
    "text": "tasks that make up your application such",
    "start": "133879",
    "end": "136040"
  },
  {
    "text": "as web servers cues databases API",
    "start": "136040",
    "end": "139599"
  },
  {
    "text": "backends and background workers you can",
    "start": "139599",
    "end": "142680"
  },
  {
    "text": "access ec2 container service from the",
    "start": "142680",
    "end": "144920"
  },
  {
    "text": "AWS Management console or through the",
    "start": "144920",
    "end": "147319"
  },
  {
    "text": "AWS",
    "start": "147319",
    "end": "148599"
  },
  {
    "text": "sdks e ec2 container service combines",
    "start": "148599",
    "end": "151680"
  },
  {
    "text": "the consistent build and deploy",
    "start": "151680",
    "end": "153560"
  },
  {
    "text": "experience of Docker with all the",
    "start": "153560",
    "end": "155480"
  },
  {
    "text": "benefits of Amazon",
    "start": "155480",
    "end": "157319"
  },
  {
    "text": "ec2 and best of all you just pay for the",
    "start": "157319",
    "end": "160400"
  },
  {
    "text": "Amazon ec2 instances in your cluster and",
    "start": "160400",
    "end": "163080"
  },
  {
    "text": "any other AWS resources used there's no",
    "start": "163080",
    "end": "166159"
  },
  {
    "text": "additional charge for using ec2",
    "start": "166159",
    "end": "168000"
  },
  {
    "text": "container",
    "start": "168000",
    "end": "169000"
  },
  {
    "text": "service get started deploying containers",
    "start": "169000",
    "end": "171800"
  },
  {
    "text": "on ec2 container service with a few",
    "start": "171800",
    "end": "174319"
  },
  {
    "text": "clicks in the AWS Management console",
    "start": "174319",
    "end": "179120"
  }
]