[
  {
    "start": "0",
    "end": "122000"
  },
  {
    "text": "all right thank you very much for coming everyone my name is Alex Dunlap I'm the general manager for Amazon CloudFront",
    "start": "0",
    "end": "5210"
  },
  {
    "text": "this is what a little bit different",
    "start": "5210",
    "end": "14549"
  },
  {
    "text": "format than some of the other sessions what we're doing here is we called internally lightning talks and the idea",
    "start": "14549",
    "end": "20880"
  },
  {
    "text": "is let's get some of the engineers who have built cloud front up on stage give you some very practical tangible things",
    "start": "20880",
    "end": "27330"
  },
  {
    "text": "that you can do bring back home and use in your applications and your workflow to make cloud front perform better make",
    "start": "27330",
    "end": "35790"
  },
  {
    "text": "it more make your websites more available improve your cash mobility so there was really an emphasis here in",
    "start": "35790",
    "end": "41640"
  },
  {
    "text": "this talk on practical tangible things that you can take away so for that again",
    "start": "41640",
    "end": "46890"
  },
  {
    "text": "I'm Alex we've got clean Jared and Matthew so these are all members of the",
    "start": "46890",
    "end": "52590"
  },
  {
    "text": "cloud front team we're each gonna spend about 10 10 minutes or so going through one topic kind of passed to the next one",
    "start": "52590",
    "end": "60500"
  },
  {
    "text": "about your so specifically what are the four topics we're in cover today the",
    "start": "60500",
    "end": "66720"
  },
  {
    "text": "first topic we're going to cover is best practice for setting up your origin cloud front acts as a cache the servers",
    "start": "66720",
    "end": "72299"
  },
  {
    "text": "are the the things behind that cache is what we call your origin so we're going",
    "start": "72299",
    "end": "77340"
  },
  {
    "text": "to walk through some back best practices for setting up your origin second Jared is going to go into getting better",
    "start": "77340",
    "end": "85229"
  },
  {
    "text": "visibility into your distribution where's your traffic going who's downloading it what are they doing it",
    "start": "85229",
    "end": "90479"
  },
  {
    "text": "what are they watching third we're gonna matthew is going to go through how to",
    "start": "90479",
    "end": "96119"
  },
  {
    "text": "improve your cash ability we are cached with cloud front at least for the static assets we will cache static assets and",
    "start": "96119",
    "end": "102150"
  },
  {
    "text": "there are things that you can do as a developer that will lead to either better or worse caching let's understand",
    "start": "102150",
    "end": "108299"
  },
  {
    "text": "what those things are and how you can improve your cash ability and fourth come back to me at the end I'll give you",
    "start": "108299",
    "end": "114240"
  },
  {
    "text": "a little bit of overview about various types of testing you can do I'm reading",
    "start": "114240",
    "end": "119759"
  },
  {
    "text": "off of the slide something there we go fourth it's going to come back to me",
    "start": "119759",
    "end": "126689"
  },
  {
    "start": "122000",
    "end": "204000"
  },
  {
    "text": "we're gonna go through and look at various ways you can test your configuration",
    "start": "126689",
    "end": "131960"
  },
  {
    "text": "you know that what you've set up is going to work for your end users so with that we'll start with clean talked about",
    "start": "131960",
    "end": "139450"
  },
  {
    "text": "best practices for setting up your origin great thank you Alex I think first dozen practice make sure projected",
    "start": "139450",
    "end": "146270"
  },
  {
    "text": "correctly which it looks like we are thank you so we'll go ahead and get started so today I wanted to focus specifically on",
    "start": "146270",
    "end": "152900"
  },
  {
    "text": "some items that you can follow to improve your availability get better",
    "start": "152900",
    "end": "158720"
  },
  {
    "text": "performance and make it easier to debug your application as well as debugging any trouble you may have when running",
    "start": "158720",
    "end": "164020"
  },
  {
    "text": "cloud front so the five items I picked out specifically for this talk are",
    "start": "164020",
    "end": "169460"
  },
  {
    "text": "utilizing route 53 health checking and DNS failover for your origin configuring",
    "start": "169460",
    "end": "175550"
  },
  {
    "text": "multiple origins securing your origin either if you're using an Amazon s3 or origin or a custom origin such as an",
    "start": "175550",
    "end": "182540"
  },
  {
    "text": "elastic load balancer logging request IDs and these are the requested ease that cloud for instance or generating",
    "start": "182540",
    "end": "188780"
  },
  {
    "text": "your own request IDs to make it easier to find specific requests from your customers the fifth item I wanted to",
    "start": "188780",
    "end": "197540"
  },
  {
    "text": "speak about is a setting some origin response headers and these are HTTP specific response headers so as you may",
    "start": "197540",
    "end": "206420"
  },
  {
    "start": "204000",
    "end": "300000"
  },
  {
    "text": "know Ralph 53 Amazon ref do during hell tracking and DNS failover is a service or currently offer that allows you to",
    "start": "206420",
    "end": "212720"
  },
  {
    "text": "help check any HTTP endpoint on the Internet and based on the health of that",
    "start": "212720",
    "end": "218570"
  },
  {
    "text": "end point you can failover to another end point or you can be alerted if that health check is",
    "start": "218570",
    "end": "224390"
  },
  {
    "text": "unhealthy and you can use that information to make routing decisions at the DMS level and so in this example we",
    "start": "224390",
    "end": "231560"
  },
  {
    "text": "have a deployment with an elastic load balancer in our US East one region and",
    "start": "231560",
    "end": "236720"
  },
  {
    "text": "you can see we have four edge locations all doing their origin fetches from US East one and so what what I can do is I",
    "start": "236720",
    "end": "244160"
  },
  {
    "text": "can set up a Lewton see late excuse me a latency based routing configuration within route 53 that routes cloud front",
    "start": "244160",
    "end": "251900"
  },
  {
    "text": "to the least latent AWS region so here you can see my edge locations in Europe",
    "start": "251900",
    "end": "259160"
  },
  {
    "text": "and India are being routed to EU s1 my edge locations in Brazil and the",
    "start": "259160",
    "end": "264199"
  },
  {
    "text": "United States are being routed to us ds1 that just happened seamlessly you never have to worry about updating any latency",
    "start": "264199",
    "end": "270860"
  },
  {
    "text": "data that's all done for you so let's say someone accidentally terminates all their instances behind our load balancer",
    "start": "270860",
    "end": "278120"
  },
  {
    "text": "in one of the regions so what happens behind the scenes is the health checks",
    "start": "278120",
    "end": "284210"
  },
  {
    "text": "will start to fail that endpoint will stop being returned to DNS and then call from will start doing your origin",
    "start": "284210",
    "end": "290120"
  },
  {
    "text": "fetches from the next available end point and we'll be demoing that as well we're where I'll accidentally terminate",
    "start": "290120",
    "end": "296750"
  },
  {
    "text": "my instances and see what happens and here's a sample configuration that you",
    "start": "296750",
    "end": "303590"
  },
  {
    "start": "300000",
    "end": "417000"
  },
  {
    "text": "can take a look at so I have a origin at example.com configured where I have",
    "start": "303590",
    "end": "309020"
  },
  {
    "text": "latency based routing between us East 1 again and the u.s. 1 and I am checking",
    "start": "309020",
    "end": "314810"
  },
  {
    "text": "the evaluate target health on my alb so I get the benefits of getting the health",
    "start": "314810",
    "end": "320900"
  },
  {
    "text": "checks that are already built into my L beat and robbed III can make decisions off of that as well and you can see all",
    "start": "320900",
    "end": "326750"
  },
  {
    "text": "the available AWS regions or my own C based routing great so now my the second",
    "start": "326750",
    "end": "333919"
  },
  {
    "text": "best practice I wanted to talk about maybe I'll stand right here ok is configuring multiple origins so",
    "start": "333919",
    "end": "341479"
  },
  {
    "text": "here we have a whole website delivery sorry for example.com and you can see",
    "start": "341479",
    "end": "347449"
  },
  {
    "text": "what I'm doing is I'm configuring some cloud front cache behaviors that sends",
    "start": "347449",
    "end": "353349"
  },
  {
    "text": "assets or maybe my static error pages to s3 and my dynamic content to my elastic",
    "start": "353349",
    "end": "361310"
  },
  {
    "text": "load balancer which it then I'm low low latency based routing between AWS regions so why would you want to do this",
    "start": "361310",
    "end": "368150"
  },
  {
    "text": "so this allows you to decouple your assets such as JavaScript CSS images",
    "start": "368150",
    "end": "373580"
  },
  {
    "text": "from your application and let your application focus on generating dynamic",
    "start": "373580",
    "end": "378650"
  },
  {
    "text": "content for your customers and have just all your assets an s3 and so some of the",
    "start": "378650",
    "end": "383779"
  },
  {
    "text": "benefits you get out of this is for example let's say you have an application where users are uploading",
    "start": "383779",
    "end": "389629"
  },
  {
    "text": "user generated content now all those assets are going into a3 and when you're two instances scale up",
    "start": "389629",
    "end": "396440"
  },
  {
    "text": "and down you never have to wear yo do I have all my assets on all my ec2 instances and as you're generating a lot",
    "start": "396440",
    "end": "401780"
  },
  {
    "text": "of content that starts to add up the other benefit you have is if you have multiple properties or multiple games",
    "start": "401780",
    "end": "408139"
  },
  {
    "text": "you can share those assets with all of those properties and Matthew will",
    "start": "408139",
    "end": "413930"
  },
  {
    "text": "actually talk about that a little bit more later third best practice is securing your",
    "start": "413930",
    "end": "419300"
  },
  {
    "start": "417000",
    "end": "447000"
  },
  {
    "text": "origin so as you know we announced AWS swap today so you want to make sure that all your requests are being funneled",
    "start": "419300",
    "end": "424580"
  },
  {
    "text": "through Amazon CloudFront and so the way you can do that is you can use our origin access identity feature to",
    "start": "424580",
    "end": "431900"
  },
  {
    "text": "protect your s3 origin so that only cloud front or other authenticated requests can come through for custom",
    "start": "431900",
    "end": "439159"
  },
  {
    "text": "origins you can create a whitelist and we'll talk about how to do that keep",
    "start": "439159",
    "end": "444229"
  },
  {
    "text": "that up to date without any effort so to go into this little bit more detail when",
    "start": "444229",
    "end": "449840"
  },
  {
    "text": "we have here as a user trying to access our s3 bucket directly and they're denied access but if they access it",
    "start": "449840",
    "end": "456500"
  },
  {
    "text": "through cloud front and they're granted access through cloud front then they're able to access the static content from",
    "start": "456500",
    "end": "463069"
  },
  {
    "text": "s3 protecting your custom origin same thing except for with IP whitelisting",
    "start": "463069",
    "end": "469009"
  },
  {
    "text": "and so you can see here users trying to access for example let's say my ELB directly they're gonna get denied if I",
    "start": "469009",
    "end": "475130"
  },
  {
    "text": "go through cloud front they're able to access the content and so how do you how",
    "start": "475130",
    "end": "481580"
  },
  {
    "start": "479000",
    "end": "530000"
  },
  {
    "text": "do you keep your or whitelist up-to-date so as you know AWS publishes all of our",
    "start": "481580",
    "end": "486770"
  },
  {
    "text": "IP ranges and a JSON file that you can download and consume and so and it's",
    "start": "486770",
    "end": "491779"
  },
  {
    "text": "broken down by service as well and cloud front is one of those services that that's broken down and so what the the",
    "start": "491779",
    "end": "498529"
  },
  {
    "text": "ranges are broken down and so what you can do is you can create a lambda function that subscribed to an SMS topic",
    "start": "498529",
    "end": "505430"
  },
  {
    "text": "that we publish to whenever the ranges are updated you can get the IP addresses for the cloud front service and then",
    "start": "505430",
    "end": "512180"
  },
  {
    "text": "call AWS authorized ec2 the ec2 API to authorize the security",
    "start": "512180",
    "end": "517880"
  },
  {
    "text": "and then make sure that you always have the latest up-to-date IP addresses authorized and you don't have to ever",
    "start": "517880",
    "end": "524840"
  },
  {
    "text": "worry about am i following keeping them up to date so long I mean it fourth best",
    "start": "524840",
    "end": "532310"
  },
  {
    "start": "530000",
    "end": "574000"
  },
  {
    "text": "practice I wanted to talk about is logging request IDs and so this is important if you want to be able to",
    "start": "532310",
    "end": "538150"
  },
  {
    "text": "correlate requests made to your origin by Amazon CloudFront as well as logging requests in your application when you",
    "start": "538150",
    "end": "544670"
  },
  {
    "text": "make requests to clout front so both on the front and the back end and we find this very helpful when customers are",
    "start": "544670",
    "end": "550940"
  },
  {
    "text": "reporting trouble with call front or wise comp front doing this behavior but I didn't expect it we can look up even",
    "start": "550940",
    "end": "556400"
  },
  {
    "text": "though it's not an error we can find the event of the customer's request relatively easy so definitely recommend",
    "start": "556400",
    "end": "563530"
  },
  {
    "text": "generating your own request IDs as well in your own applications you'll find it a lot easier to find specific requests",
    "start": "563530",
    "end": "570710"
  },
  {
    "text": "especially if you're generating a lot of walks right the last item I want to talk",
    "start": "570710",
    "end": "576770"
  },
  {
    "start": "574000",
    "end": "696000"
  },
  {
    "text": "about is sending HTTP response headers and so the four headers I wanted to talk",
    "start": "576770",
    "end": "582620"
  },
  {
    "text": "about is strict Transport Security and so this headers requires that you serve all your content over HTTPS for it to",
    "start": "582620",
    "end": "589010"
  },
  {
    "text": "work correctly and so what this does is it tells your browser only make requests over HTTPS and so this helps prevent",
    "start": "589010",
    "end": "595910"
  },
  {
    "text": "downgrade attacks on your site so some things to keep in mind when you are implementing this header is the max age",
    "start": "595910",
    "end": "602780"
  },
  {
    "text": "as you can see is how long the browser typically will cache that information",
    "start": "602780",
    "end": "608300"
  },
  {
    "text": "for so you typically want to start with something small to make sure that you don't break some functionality that you weren't aware that may break when you",
    "start": "608300",
    "end": "614720"
  },
  {
    "text": "turn this upon so that's something to keep in mind the other benefit of this",
    "start": "614720",
    "end": "622700"
  },
  {
    "text": "header is yep correct so the second header I want to talk about is X frames",
    "start": "622700",
    "end": "628010"
  },
  {
    "text": "options and so this is helpful to prevent your website from being rendered in other on iframes and this is a common",
    "start": "628010",
    "end": "636260"
  },
  {
    "text": "attack for cross-site scripting excuse me I took for I'm trying to play sorry",
    "start": "636260",
    "end": "643720"
  },
  {
    "text": "the the third option is xx protection and so this is a header that",
    "start": "643720",
    "end": "649820"
  },
  {
    "text": "activates the cross-site scripting module in browsers even though a user may have turned it off the one other",
    "start": "649820",
    "end": "655550"
  },
  {
    "text": "point I wanted to make about the strict Transport Security header is if you turn this on sometimes when you go to a",
    "start": "655550",
    "end": "662180"
  },
  {
    "text": "website you get a security warning saying the certificate doesn't match do you want to proceed if you use this",
    "start": "662180",
    "end": "667340"
  },
  {
    "text": "header it disables that functionality you you cannot proceed so that's something to keep in mind as well when you do turn that on as a user will not",
    "start": "667340",
    "end": "674540"
  },
  {
    "text": "be able to proceed if you generate a certificate maybe that's expired there's not valid for the domain that you're",
    "start": "674540",
    "end": "679940"
  },
  {
    "text": "serving the content on and the fourth header I wanted to talk about here is",
    "start": "679940",
    "end": "685280"
  },
  {
    "text": "the cache control header and so that tells Kaufering to cache objects or as well as any intermediary proxies or your end-user",
    "start": "685280",
    "end": "692270"
  },
  {
    "text": "browsers and Matthew will talk about that a little bit more detail later great so I'm gonna go ahead and and show",
    "start": "692270",
    "end": "698150"
  },
  {
    "start": "696000",
    "end": "846000"
  },
  {
    "text": "some demos so let's see switch perfect so here you can see I have two windows",
    "start": "698150",
    "end": "704600"
  },
  {
    "text": "side by side just explain what what you're seeing and at the very bottom of the window you'll see that I'm",
    "start": "704600",
    "end": "711580"
  },
  {
    "text": "generating the AWS availability zone that this instance is serving the",
    "start": "711580",
    "end": "716870"
  },
  {
    "text": "content from so you can see on the Left it's same page as the right but it's a different ec2 instance so what I'm gonna",
    "start": "716870",
    "end": "724220"
  },
  {
    "text": "do is I'm gonna go ahead and terminate these one of these instances and us east",
    "start": "724220",
    "end": "729500"
  },
  {
    "text": "one accidentally",
    "start": "729500",
    "end": "734650"
  },
  {
    "text": "great so while those shut down terminate my LD is gonna evaluate that the help that the incidents are no longer healthy",
    "start": "738810",
    "end": "745110"
  },
  {
    "text": "and then mark the mess I'm available and I'll come back in a second oh sorry",
    "start": "745110",
    "end": "752610"
  },
  {
    "text": "I'll come back in a second to just to demo that we filled over the second thing I want to talk about is the lambda",
    "start": "752610",
    "end": "758520"
  },
  {
    "text": "function to update security groups so you can see here I have a cloud from security group in my B PC that has only",
    "start": "758520",
    "end": "764640"
  },
  {
    "text": "two ranges allow the two IP address ranges allowed for both four four four",
    "start": "764640",
    "end": "771030"
  },
  {
    "text": "three and four or eighty so I'm going to do is I'm gonna manually invoke the lambda function and it should update as",
    "start": "771030",
    "end": "778740"
  },
  {
    "text": "you can see I'm just gonna go and manually invoke it it should update the security group with all the top front ranges from the IP ranges JSON file so",
    "start": "778740",
    "end": "785640"
  },
  {
    "text": "we got a two hundred refresh and now we have all these ranges and that that",
    "start": "785640",
    "end": "792120"
  },
  {
    "text": "lambda functions always triggered whenever and an event comes in because the ranges have been updated perfect the",
    "start": "792120",
    "end": "799440"
  },
  {
    "text": "other thing I wanted to show you real quick is the origin access identity and you can enable that in your origin you just restrict bucket accesses check it -",
    "start": "799440",
    "end": "806610"
  },
  {
    "text": "yes select your origin access identity if you want to automatically update your bucket policy click yes clicks click yes",
    "start": "806610",
    "end": "813530"
  },
  {
    "text": "so let's go back to our demo and see if we failed over",
    "start": "813530",
    "end": "819380"
  },
  {
    "text": "perfect so you'll notice on the right it says US East one beep sorry on my left",
    "start": "824410",
    "end": "829940"
  },
  {
    "text": "us he's one B on the right us West to see you're automatically filled over and once the auto-scaling your appeals and",
    "start": "829940",
    "end": "837440"
  },
  {
    "text": "we'll fill back great we'll go ahead and",
    "start": "837440",
    "end": "844930"
  },
  {
    "text": "switch us back perfect so keep key takeaways definitely use",
    "start": "844930",
    "end": "850460"
  },
  {
    "start": "846000",
    "end": "926000"
  },
  {
    "text": "round fifty-three health checks and Janice failover especially if you're using a little balance or you just have to check a box evaluate target health",
    "start": "850460",
    "end": "856400"
  },
  {
    "text": "and configure your latency based routing policy that you would like to use improve improve security by setting the",
    "start": "856400",
    "end": "863930"
  },
  {
    "text": "custom headers that your origin enable logging up headers likes to be label",
    "start": "863930",
    "end": "869630"
  },
  {
    "text": "logging of requests IDs specifically cloud front or generating your own request IDs as well to help find",
    "start": "869630",
    "end": "875300"
  },
  {
    "text": "specific requests for your end users serve you stack assets out of Amazon s3 and definitely serve customer message",
    "start": "875300",
    "end": "881960"
  },
  {
    "text": "out of Amazon s3 should none of your origin become unavailable should i've excellently terminated all my instances at the same time with that I'm gonna go",
    "start": "881960",
    "end": "889370"
  },
  {
    "text": "ahead and hand it over to Jerry Thank You point hello everyone how many of you",
    "start": "889370",
    "end": "901400"
  },
  {
    "text": "use clapping how many of you are familiar with our reports and analytics",
    "start": "901400",
    "end": "906890"
  },
  {
    "text": "that we've been releasing the last year okay now minimum so so what I'm gonna",
    "start": "906890",
    "end": "915230"
  },
  {
    "text": "show today is how you can gain visibility into your distribution using some of the tools that we have native to",
    "start": "915230",
    "end": "920390"
  },
  {
    "text": "CloudFront and using some other tools like fog watch and cloud trail well",
    "start": "920390",
    "end": "928580"
  },
  {
    "text": "there are variety ways to give visibility into your distribution we're gonna cover for today using a two Bs",
    "start": "928580",
    "end": "934430"
  },
  {
    "text": "cloud trail for monitoring distribution configuration changes using your real-time metrics provided by Amazon",
    "start": "934430",
    "end": "941180"
  },
  {
    "text": "Cloud Print yeah Amazon Cloud watch using Amazon Cloud Print reports for",
    "start": "941180",
    "end": "947720"
  },
  {
    "text": "analytics and using Amazon Cloud watch logs for a custom reporting so Cloud",
    "start": "947720",
    "end": "954650"
  },
  {
    "start": "953000",
    "end": "991000"
  },
  {
    "text": "trail is a service as a native a service that tracks API activity across services",
    "start": "954650",
    "end": "961070"
  },
  {
    "text": "lb ec2 s3 CloudFront it allows you to",
    "start": "961070",
    "end": "966850"
  },
  {
    "text": "basically audit any API activity that occurs in this case you can set an alarm",
    "start": "966850",
    "end": "973070"
  },
  {
    "text": "when there are our configuration changes on your distribution such as a",
    "start": "973070",
    "end": "978560"
  },
  {
    "text": "distribution being a disabled trusted signers being disabled or custom TLS",
    "start": "978560",
    "end": "984290"
  },
  {
    "text": "certificate changes we'll go into a little bit more on that in the demo",
    "start": "984290",
    "end": "990730"
  },
  {
    "text": "another way to gain visibility into your distributions is using Amazon CloudFront",
    "start": "991510",
    "end": "997610"
  },
  {
    "text": "near real-time metrics this is the Amazon Cloud watch currently you can",
    "start": "997610",
    "end": "1004330"
  },
  {
    "text": "alarm on six metrics and I forgot to mention that these metrics are within one to two minutes of the actual",
    "start": "1004330",
    "end": "1010180"
  },
  {
    "text": "activity that may be two to three minutes of the actual activity that occurred of the request for your content",
    "start": "1010180",
    "end": "1016470"
  },
  {
    "text": "currently you can allow on six metrics includes requests bytes download eight",
    "start": "1016470",
    "end": "1022390"
  },
  {
    "text": "bytes uploaded those are usually come from put post requests for 400-series",
    "start": "1022390",
    "end": "1028600"
  },
  {
    "text": "error rate 500-series error rates and total error rates an example of something you might have want them on for 400 series error",
    "start": "1028600",
    "end": "1035490"
  },
  {
    "text": "rate let's say that you've released grid new assets on your website or cred new",
    "start": "1035490",
    "end": "1042418"
  },
  {
    "text": "version err website you see you you create an alarm on 400 series their",
    "start": "1042419",
    "end": "1048120"
  },
  {
    "text": "rating you get notified you realize that you have a problem a lot of those newly released assets are getting error rate",
    "start": "1048120",
    "end": "1055590"
  },
  {
    "text": "so you actually allows you to rollback or you could rollback make the decision to rollback same with the 500 over 500",
    "start": "1055590",
    "end": "1062460"
  },
  {
    "text": "series gateway so if you have errors to distribution you can get notified of",
    "start": "1062460",
    "end": "1068039"
  },
  {
    "text": "those errors and then dig into what's occurring either using logs or some of",
    "start": "1068039",
    "end": "1073380"
  },
  {
    "text": "the other reports where that's going to now some of these reports these reports",
    "start": "1073380",
    "end": "1079500"
  },
  {
    "text": "that I'm about to show you are actually delayed a little bit they're delayed by up to an hour and we have released over",
    "start": "1079500",
    "end": "1087990"
  },
  {
    "text": "I think close to 20 reports this year so any of you that has it hasn't had the",
    "start": "1087990",
    "end": "1093150"
  },
  {
    "text": "opportunity to look at them yet will demo them but you can also take a look at them and today some of these reports",
    "start": "1093150",
    "end": "1100830"
  },
  {
    "text": "include cache hit missed report incomplete downloads top country's mobile users popular objects report",
    "start": "1100830",
    "end": "1107940"
  },
  {
    "text": "we're actually going to go into those I'm going to actually demo those and take you through those and show you how",
    "start": "1107940",
    "end": "1113039"
  },
  {
    "text": "you can use them another way that you",
    "start": "1113039",
    "end": "1118980"
  },
  {
    "start": "1115000",
    "end": "1136000"
  },
  {
    "text": "can get visible in your distributions is through Amazon CloudFront access logs well Amazon CloudFront access logs you",
    "start": "1118980",
    "end": "1126000"
  },
  {
    "text": "can subscribe to you and they can get delivered to your s3 bucket multiple times within an hour so one really cool",
    "start": "1126000",
    "end": "1136860"
  },
  {
    "start": "1136000",
    "end": "1198000"
  },
  {
    "text": "thing you can do with Amazon CloudFront access logs is generate custom metrics",
    "start": "1136860",
    "end": "1143840"
  },
  {
    "text": "the way you do that is you can once you can create a s3 notification or actually",
    "start": "1143840",
    "end": "1152130"
  },
  {
    "text": "SF via SNS notify you every time you get log files delivered to your s3 bucket",
    "start": "1152130",
    "end": "1158190"
  },
  {
    "text": "and then that can trigger a lambda function to take those files downloaded upload",
    "start": "1158190",
    "end": "1163510"
  },
  {
    "text": "them to cloud lunch and then you can create a variety of custom metrics such",
    "start": "1163510",
    "end": "1169930"
  },
  {
    "text": "as being notified then you notify the",
    "start": "1169930",
    "end": "1177190"
  },
  {
    "text": "bots if you get a larger number of bots you can create a custom metric on",
    "start": "1177190",
    "end": "1182910"
  },
  {
    "text": "granular response codes like for X X you can create excuse me 400 series you can",
    "start": "1182910",
    "end": "1190600"
  },
  {
    "text": "also create a custom metric on certain URLs yeah Geoff's versions so we're",
    "start": "1190600",
    "end": "1199810"
  },
  {
    "start": "1198000",
    "end": "1322000"
  },
  {
    "text": "gonna go into the demo so earlier we",
    "start": "1199810",
    "end": "1209320"
  },
  {
    "text": "mentioned how you get notified when there are configuration changes made to your cloud fund distribution so we want",
    "start": "1209320",
    "end": "1216880"
  },
  {
    "text": "to show you what this looks like so this",
    "start": "1216880",
    "end": "1221890"
  },
  {
    "text": "is a this is via cloud watch and here's a cloud front default Law Group",
    "start": "1221890",
    "end": "1226990"
  },
  {
    "text": "so we're gonna show you what this looks like how to set a cloud front notification or clogged trail",
    "start": "1226990",
    "end": "1232720"
  },
  {
    "text": "notice a cloud watch notification for a cloud trail sorry I clicked on the wrong",
    "start": "1232720",
    "end": "1239080"
  },
  {
    "text": "thing so this is what it's like to set",
    "start": "1239080",
    "end": "1244630"
  },
  {
    "text": "and events for that you contract via cloud trail excuse me this is a fog",
    "start": "1244630",
    "end": "1250690"
  },
  {
    "text": "watch event it's a cloud trail group attract via cloud watch so what you're",
    "start": "1250690",
    "end": "1256840"
  },
  {
    "text": "doing here is you're tracking on a certain API activity so for example here",
    "start": "1256840",
    "end": "1262060"
  },
  {
    "text": "you're setting event source is is CloudFront that's the service the event",
    "start": "1262060",
    "end": "1270520"
  },
  {
    "text": "source is CloudFront aws.amazon.com etre",
    "start": "1270520",
    "end": "1276730"
  },
  {
    "text": "is is the distribution and the request parameter distribution configuration",
    "start": "1276730",
    "end": "1283000"
  },
  {
    "text": "enabled is false basically what this is is a rule that's telling you that anytime your configuration is disabled",
    "start": "1283000",
    "end": "1289150"
  },
  {
    "text": "it's gonna you're gonna actually it's going to log a response or log a met",
    "start": "1289150",
    "end": "1294630"
  },
  {
    "text": "so I go here I logged the metric where I go to see if anything's actually",
    "start": "1294630",
    "end": "1301559"
  },
  {
    "text": "occurred let me see here so I'm seeing that there was a disabled man or disabled here and here well that's not",
    "start": "1301559",
    "end": "1308850"
  },
  {
    "text": "good I didn't disable my distribution so I need to set alarm so that I'm notified",
    "start": "1308850",
    "end": "1315360"
  },
  {
    "text": "once you met the distribution is disabled so you can you can create an",
    "start": "1315360",
    "end": "1323130"
  },
  {
    "start": "1322000",
    "end": "1352000"
  },
  {
    "text": "alarm here it basically shows you or tells you that will tell you anytime",
    "start": "1323130",
    "end": "1328950"
  },
  {
    "text": "that's disabled for example if when CloudFront disabled is greater than",
    "start": "1328950",
    "end": "1334950"
  },
  {
    "text": "equal to 1 in this case you're gonna be wanting to notified be notified anytime this occurs so greater than equal to 1",
    "start": "1334950",
    "end": "1343320"
  },
  {
    "text": "you're creating for one cuz I get occurred you just want to know any time that CloudFront distribution is disabled",
    "start": "1343320",
    "end": "1350340"
  },
  {
    "text": "you need to create the along I'm here so this is basically setting a cloud a",
    "start": "1350340",
    "end": "1355490"
  },
  {
    "start": "1352000",
    "end": "1374000"
  },
  {
    "text": "alarm on a cloud trail activity and again cloud trail is a service that",
    "start": "1355490",
    "end": "1362029"
  },
  {
    "text": "tracks API activity or logs API activities so it allows you to log on",
    "start": "1362029",
    "end": "1367940"
  },
  {
    "text": "all these different events that occur in API and the yes so now I'm gonna go and",
    "start": "1367940",
    "end": "1376320"
  },
  {
    "start": "1374000",
    "end": "1558000"
  },
  {
    "text": "talk a little bit about cloud fronts some of the reports we've released this year so you can see all these reports on",
    "start": "1376320",
    "end": "1382740"
  },
  {
    "text": "the left nav here these are all the reports the cache statistics the popular objects the top referrers and the usage",
    "start": "1382740",
    "end": "1389100"
  },
  {
    "text": "reports are all reports that are available within about an hour of the event happening the modern burning",
    "start": "1389100",
    "end": "1395669"
  },
  {
    "text": "alarming these are available within two to three minutes so I'm gonna briefly go",
    "start": "1395669",
    "end": "1401370"
  },
  {
    "text": "through these and show you how these reports can be made actionable so on the cache statistics reports some",
    "start": "1401370",
    "end": "1406799"
  },
  {
    "text": "interesting things here so we have a total requests percentage of you are",
    "start": "1406799",
    "end": "1412019"
  },
  {
    "text": "request by result type that shows hits misses errors bytes transferred to viewers that shows you this for how many",
    "start": "1412019",
    "end": "1419220"
  },
  {
    "text": "bytes are being delivered and then you have status cuz the type status goes to",
    "start": "1419220",
    "end": "1425740"
  },
  {
    "text": "100 series for anniversaries 400 500 series of the status codes that are being delivered as a result of requests",
    "start": "1425740",
    "end": "1432400"
  },
  {
    "text": "and then you have this is an interim report we have the number of debt requests that didn't finish downloading",
    "start": "1432400",
    "end": "1438420"
  },
  {
    "text": "so this report is important because it shows you not only the the objects that",
    "start": "1438420",
    "end": "1445090"
  },
  {
    "text": "aren't excuse me the number of requests that aren't that are coming for objects that aren't being finished downloading",
    "start": "1445090",
    "end": "1450160"
  },
  {
    "text": "but the problem here is that if a object",
    "start": "1450160",
    "end": "1456070"
  },
  {
    "text": "isn't completely downloaded it affects Amazon's cache Amazon CloudFront cache ability so that in turn affects the",
    "start": "1456070",
    "end": "1462760"
  },
  {
    "text": "latency of that object now in this case I look at this report how do I make this",
    "start": "1462760",
    "end": "1469030"
  },
  {
    "text": "actionable okay so I've got I'm seeing these requests so then I I want to go",
    "start": "1469030",
    "end": "1474850"
  },
  {
    "text": "into my popular objects so I can use this report called popular objects and I can try to correlate which objects might",
    "start": "1474850",
    "end": "1481210"
  },
  {
    "text": "be causing the incomplete Gallants so if I go here I see this object here oops",
    "start": "1481210",
    "end": "1488440"
  },
  {
    "text": "it's got 1999 complete downloads and",
    "start": "1488440",
    "end": "1495309"
  },
  {
    "text": "there's been 40 48 requests so little about 40 percent of the requests coming for that object aren't completely or not",
    "start": "1495309",
    "end": "1502300"
  },
  {
    "text": "downloaded completely so all that means is someone might be downloading the video file and then leaving before",
    "start": "1502300",
    "end": "1509650"
  },
  {
    "text": "completely downloads for example let's say you have a training site and you're surveying training videos some of your",
    "start": "1509650",
    "end": "1516640"
  },
  {
    "text": "customers money that might not be stay until the end of the video so they're exiting that's resulting in a incomplete",
    "start": "1516640",
    "end": "1522370"
  },
  {
    "text": "download now what's actionable here is you can take that file in this case is",
    "start": "1522370",
    "end": "1528730"
  },
  {
    "text": "an mp4 and you can have it basically converting them to a segmented format so",
    "start": "1528730",
    "end": "1536620"
  },
  {
    "text": "that yeah you can do that via lots of transmitters so they it's a smaller file set so it's it's segmented so if someone",
    "start": "1536620",
    "end": "1543429"
  },
  {
    "text": "downloads it they're getting a segment that way will cache it when you see all the other files here these these are",
    "start": "1543429",
    "end": "1548950"
  },
  {
    "text": "actually segmented where this one isn't so that's an example now a couple other",
    "start": "1548950",
    "end": "1554919"
  },
  {
    "text": "examples I want to show that I meant and viewers I talked about locations",
    "start": "1554919",
    "end": "1560060"
  },
  {
    "start": "1558000",
    "end": "1612000"
  },
  {
    "text": "here's the locations report this shows you again this is a demo account so it's not completely it doesn't have that much",
    "start": "1560060",
    "end": "1566690"
  },
  {
    "text": "activity but this shows the top locations by by country and here for",
    "start": "1566690",
    "end": "1574310"
  },
  {
    "text": "example you'll see Sweden let's say in this case wow I'm getting a lot of",
    "start": "1574310",
    "end": "1580280"
  },
  {
    "text": "people from Sweden that's a surprise to me I might want to vary my content so that Swedish customers get a more personalized experience so you can",
    "start": "1580280",
    "end": "1586700"
  },
  {
    "text": "configure it in a way that using the same URL Amazon CloudFront can vary the content delivered to customers who come",
    "start": "1586700",
    "end": "1592550"
  },
  {
    "text": "from that location and then one last I want to show here",
    "start": "1592550",
    "end": "1599650"
  },
  {
    "text": "devices so there's also a device report we provide as well and on this one it's",
    "start": "1599650",
    "end": "1607910"
  },
  {
    "text": "on this tab sorry so you can see the",
    "start": "1607910",
    "end": "1613940"
  },
  {
    "start": "1612000",
    "end": "1634000"
  },
  {
    "text": "devices your customers are coming from now what's action will here if the large percentage of your customers are coming",
    "start": "1613940",
    "end": "1619550"
  },
  {
    "text": "via a mobile as in the case here you're gonna want to make sure that your site is optimized for mobile users so that's",
    "start": "1619550",
    "end": "1625310"
  },
  {
    "text": "something you'd want to do if you hadn't done though right",
    "start": "1625310",
    "end": "1629290"
  },
  {
    "text": "the last item that I'm gonna talk about here is using cloud watch for custom",
    "start": "1630730",
    "end": "1639920"
  },
  {
    "start": "1634000",
    "end": "1689000"
  },
  {
    "text": "metrics so this is what I mentioned earlier about using Amazon CloudFront to",
    "start": "1639920",
    "end": "1644950"
  },
  {
    "text": "Amazon CloudFront access logs these are delivered to your cloud front s3 or",
    "start": "1644950",
    "end": "1650750"
  },
  {
    "text": "scuse me to your Amazon s3 bucket and then you can create an SMS notification",
    "start": "1650750",
    "end": "1656720"
  },
  {
    "text": "to trigger a lambda function to download",
    "start": "1656720",
    "end": "1661880"
  },
  {
    "text": "those files and upload them to cloud watch logs once they're up to up to cloud watch logs that's where you can",
    "start": "1661880",
    "end": "1668960"
  },
  {
    "text": "create any a variety metrics on anything in the in the log files I'm gonna show you what these log files look like",
    "start": "1668960",
    "end": "1676509"
  },
  {
    "text": "that's my stuff",
    "start": "1681590",
    "end": "1685340"
  },
  {
    "start": "1689000",
    "end": "1714000"
  },
  {
    "text": "because they're basically what these log files look like once you're in fog watch each one of these represents the",
    "start": "1689260",
    "end": "1695470"
  },
  {
    "text": "requests each one of these line items is a request so you can run and you kind of creating any kind of custom metric based",
    "start": "1695470",
    "end": "1701980"
  },
  {
    "text": "on any item in the fields here so this gives you a lot of flexibility so you can alarm on any one of these and I'm",
    "start": "1701980",
    "end": "1708309"
  },
  {
    "text": "gonna show you some of the ones we've alarmed on here remember to get back how to get back so",
    "start": "1708309",
    "end": "1714730"
  },
  {
    "start": "1714000",
    "end": "1740000"
  },
  {
    "text": "here we've created a couple filters one this was a bot we're tracking the number",
    "start": "1714730",
    "end": "1721330"
  },
  {
    "text": "of bots that are coming because let's say you want to be notified if you get a lot of bots because you know there are",
    "start": "1721330",
    "end": "1727690"
  },
  {
    "text": "some good BOTS and there's bad BOTS and you want to be notified so you can look into what kind of bots these are so this",
    "start": "1727690",
    "end": "1735250"
  },
  {
    "text": "gives you the ability to do mission to see how many bots are visiting daily and you can also dig in and look at what",
    "start": "1735250",
    "end": "1742120"
  },
  {
    "start": "1740000",
    "end": "1754000"
  },
  {
    "text": "kind of bots are and you can block specific BOTS again using our AWS wealth",
    "start": "1742120",
    "end": "1748210"
  },
  {
    "text": "service that we we announced yesterday there's a lot of functionality that you can use on that to block certain requests another one is SSL v3 one of",
    "start": "1748210",
    "end": "1758590"
  },
  {
    "start": "1754000",
    "end": "1764000"
  },
  {
    "text": "the items here so you can count the number of requests you're getting 4 SSL v3 let's say you've you're using Amazon",
    "start": "1758590",
    "end": "1767590"
  },
  {
    "start": "1764000",
    "end": "1800000"
  },
  {
    "text": "Cloud France custom SSL feature and you've enabled SSL v3 which means you're",
    "start": "1767590",
    "end": "1772990"
  },
  {
    "text": "serving SSL v3 and then you're like well that's not exactly the most secure thing so I want to turn that off so you can",
    "start": "1772990",
    "end": "1778720"
  },
  {
    "text": "actually monitor how many your customers are visiting your site using SSL v3 so",
    "start": "1778720",
    "end": "1786970"
  },
  {
    "text": "you can see what kind of impact you're gonna have if you turn that off go back",
    "start": "1786970",
    "end": "1793240"
  },
  {
    "text": "to",
    "start": "1793240",
    "end": "1795570"
  },
  {
    "start": "1800000",
    "end": "1869000"
  },
  {
    "text": "so key takeaways enable ATF cloud trail so you can track configuration changes",
    "start": "1800840",
    "end": "1807540"
  },
  {
    "text": "so they say distribution gets disabled you're immediately notified you can take corrective action monitor your Amazon",
    "start": "1807540",
    "end": "1815310"
  },
  {
    "text": "front reports that's where we talked about if you have a writer then complete down if you get a bunch of income free downloads you're gonna want to",
    "start": "1815310",
    "end": "1821640"
  },
  {
    "text": "investigate how you can resolve that create alarms error rates request",
    "start": "1821640",
    "end": "1826920"
  },
  {
    "text": "whatever you think is important if for example you might want to put an alarm",
    "start": "1826920",
    "end": "1832380"
  },
  {
    "text": "on Dave transfer because you're sensitive your price sensitive or cost",
    "start": "1832380",
    "end": "1837390"
  },
  {
    "text": "sensitive so you can create alarms to trigger it when you help over a certain amount of transfer subscribe me Amazon",
    "start": "1837390",
    "end": "1844500"
  },
  {
    "text": "CloudFront access access logs again you can do that just to get the value of digging into logs or you can also use a",
    "start": "1844500",
    "end": "1853140"
  },
  {
    "text": "lambda function to push those large the Amazon Cloud watch where you really have a lot of freedom to run any kind of",
    "start": "1853140",
    "end": "1859020"
  },
  {
    "text": "reports you want so I'm gonna turn it over to Matt Baldwin a senior software engineer Thank You Jared I'm Matthew",
    "start": "1859020",
    "end": "1872130"
  },
  {
    "start": "1869000",
    "end": "1912000"
  },
  {
    "text": "Baldwin a senior software development engineer on the cloud front team I'm gonna talk to you today about some best",
    "start": "1872130",
    "end": "1877200"
  },
  {
    "text": "practices only improving the cache ability of your content so there are four and a half best practices I want to",
    "start": "1877200",
    "end": "1883740"
  },
  {
    "text": "talk to you out the first one is versioning your website assets cache",
    "start": "1883740",
    "end": "1888900"
  },
  {
    "text": "cache headers and cache control headers to instruct our cloud front other intermediary caches and browser caches",
    "start": "1888900",
    "end": "1895350"
  },
  {
    "text": "on how long to keep your objects in cache for now we talk about shared distributions forwarded values and the",
    "start": "1895350",
    "end": "1901530"
  },
  {
    "text": "half best practices path prefix in validations the idea being that v4 if you followed the best practices it's",
    "start": "1901530",
    "end": "1907230"
  },
  {
    "text": "like giving you a before that we won't ever have to use our in violation tool but it's there if you do need it so",
    "start": "1907230",
    "end": "1914010"
  },
  {
    "start": "1912000",
    "end": "2007000"
  },
  {
    "text": "let's get started versioning website assets this is simply include a version",
    "start": "1914010",
    "end": "1919410"
  },
  {
    "text": "number in the URL every time you publish new versions of your assets and",
    "start": "1919410",
    "end": "1925350"
  },
  {
    "text": "this is this is useful for example Jared talked just now about monitoring the 4xx",
    "start": "1925350",
    "end": "1932650"
  },
  {
    "text": "error rate after a new deployment if you've burdened your your assets and",
    "start": "1932650",
    "end": "1938160"
  },
  {
    "text": "you've included you've changed the URL to them when you brought out the new the new deployment you see your 4xx where",
    "start": "1938160",
    "end": "1944560"
  },
  {
    "text": "our rate spiked you can roll back roll back your the content that's referencing",
    "start": "1944560",
    "end": "1950530"
  },
  {
    "text": "those assets and know that the the of the previous version of the assets are still in cache either in the browser",
    "start": "1950530",
    "end": "1957010"
  },
  {
    "text": "cache of the on the end users and or in the cloud friend cache and we see two",
    "start": "1957010",
    "end": "1962280"
  },
  {
    "text": "two different ways that the customers per typically do this the first one including some version key in the in the",
    "start": "1962280",
    "end": "1970000"
  },
  {
    "text": "URL here we've included a simple version though but you might want to applaud few scape that maybe you make that the size",
    "start": "1970000",
    "end": "1976390"
  },
  {
    "text": "of the file so it's not guessable so people can try and guess where your or your asset urls are and the other way is",
    "start": "1976390",
    "end": "1983530"
  },
  {
    "text": "to include the md5 sum out of the content as a query string parameter at",
    "start": "1983530",
    "end": "1989020"
  },
  {
    "text": "the end of end of the URL most static assets or most file stores or looking or",
    "start": "1989020",
    "end": "1995770"
  },
  {
    "text": "query strings and serving files that you can include that the query string in your cache key and CloudFront giving you",
    "start": "1995770",
    "end": "2002670"
  },
  {
    "text": "a different way a different mechanism to version my assets our second best",
    "start": "2002670",
    "end": "2009360"
  },
  {
    "start": "2007000",
    "end": "2056000"
  },
  {
    "text": "practice is to utilize cache control and expires headers to to give you fine",
    "start": "2009360",
    "end": "2014910"
  },
  {
    "text": "grain control over how long you want your assets all your content to stay in cash before CloudFront or intermediary",
    "start": "2014910",
    "end": "2021420"
  },
  {
    "text": "caches will revalidate them so cache control the very powerful header will we'll talk a little bit more about that",
    "start": "2021420",
    "end": "2026910"
  },
  {
    "text": "in a moment and it expires is another header that also tells cloud front and",
    "start": "2026910",
    "end": "2032880"
  },
  {
    "text": "caches that this object expires at this point in time and that's when you need to go and revalidate with the origin contract offer also offers a feature",
    "start": "2032880",
    "end": "2041850"
  },
  {
    "text": "called minimum maximum and default TTL we show now you to override these values as they're applied to the cloud hunt",
    "start": "2041850",
    "end": "2047940"
  },
  {
    "text": "cache and this only affects the camphor and cache it does not affect the browser cache as it did not change any",
    "start": "2047940",
    "end": "2053600"
  },
  {
    "text": "as they're served out the door so count",
    "start": "2053600",
    "end": "2058850"
  },
  {
    "start": "2056000",
    "end": "2208000"
  },
  {
    "text": "cache-control as I mentioned very powerful header lots of different direct if you can including it and depending on",
    "start": "2058850",
    "end": "2064820"
  },
  {
    "text": "the type of content you're cashing when serving you may want to set very specific settings so for our CSS our",
    "start": "2064820",
    "end": "2072950"
  },
  {
    "text": "JavaScript and images which we've versioned we're confident are they're never going to change we're going to set a one-year expiry time oh so our max age",
    "start": "2072950",
    "end": "2080240"
  },
  {
    "text": "is a really big number which is one year in seconds and that's going to talk",
    "start": "2080240",
    "end": "2085730"
  },
  {
    "text": "cloud front and browser caches to try and catch that as long as possible a different use case might be if your",
    "start": "2085730",
    "end": "2092300"
  },
  {
    "text": "index page or a landing page you might want to set a lower cache control header expiry time in our example here is 30",
    "start": "2092300",
    "end": "2099920"
  },
  {
    "text": "seconds it may be content this refresh fairly frequently but you still want to leverage caching of that content so that",
    "start": "2099920",
    "end": "2108070"
  },
  {
    "text": "you know users do get the benefit of the performance benefit of Caltrans and in",
    "start": "2108070",
    "end": "2114710"
  },
  {
    "text": "our example here we've also included a no cache directive which says no cash equals set cookie and what this tells cloud friends to do",
    "start": "2114710",
    "end": "2121280"
  },
  {
    "text": "and other intermediary caches is to strip the set-cookie header on cache",
    "start": "2121280",
    "end": "2126590"
  },
  {
    "text": "hits and this is important for landing pages login pages indexed pages and so on if your application is generating a",
    "start": "2126590",
    "end": "2134180"
  },
  {
    "text": "session cookie for every unique visitor you don't want to leak that session across across users so you want to",
    "start": "2134180",
    "end": "2140780"
  },
  {
    "text": "instruct the cache any caches to to strip a set cookie header our third use",
    "start": "2140780",
    "end": "2146390"
  },
  {
    "text": "case is for live streaming with live streaming you might create a cache",
    "start": "2146390",
    "end": "2151700"
  },
  {
    "text": "behavior in cloud front for your Nana festivai or m3u8 for a H last live stream and ideally your origin will be",
    "start": "2151700",
    "end": "2159290"
  },
  {
    "text": "presented cache-control public max-age equals to so that the manifest is constantly being refreshed which allows",
    "start": "2159290",
    "end": "2165980"
  },
  {
    "text": "your users to follow your live stream to protect against origins not sending that",
    "start": "2165980",
    "end": "2171320"
  },
  {
    "text": "header what you might want to do in your conference tribution is to configure the minimum maximum and default TTL for that one cache",
    "start": "2171320",
    "end": "2178040"
  },
  {
    "text": "behavior to be equal to two seconds and what this does is gives you some confidence that CloudFront isn't going",
    "start": "2178040",
    "end": "2184070"
  },
  {
    "text": "to cache your dynamic be effective your dynamic manifest for too long worst case scenario you don't return",
    "start": "2184070",
    "end": "2190490"
  },
  {
    "text": "anything in the deep out the the out-of-the-box defaults which happen apply and count will cache that for",
    "start": "2190490",
    "end": "2195940"
  },
  {
    "text": "86,400 seconds or one day and your users are going to see the first segment of your live stream and nothing else so",
    "start": "2195940",
    "end": "2202810"
  },
  {
    "text": "minimum maximum default TTL is a useful feature to help you protect against that",
    "start": "2202810",
    "end": "2209230"
  },
  {
    "start": "2208000",
    "end": "2294000"
  },
  {
    "text": "the third best practice I want to talk to you about is shared distributions and",
    "start": "2209230",
    "end": "2214250"
  },
  {
    "text": "this is something that clean mentioned in his talk and this is a use case where",
    "start": "2214250",
    "end": "2220370"
  },
  {
    "text": "you may have separate several website properties perhaps you're running a CMS or a blogging platform where there's a",
    "start": "2220370",
    "end": "2227960"
  },
  {
    "text": "common set of shared assets it could be JavaScript it could be CSS it could be images and what you might want to do is",
    "start": "2227960",
    "end": "2234350"
  },
  {
    "text": "create a current distribution here we've got assets called example.com is that CloudFront distribution serving all",
    "start": "2234350",
    "end": "2239870"
  },
  {
    "text": "those static assets from s3 and we have two different website properties",
    "start": "2239870",
    "end": "2244990"
  },
  {
    "text": "example.com and example two org which are pulling their shared assets from that shared distribution this is",
    "start": "2244990",
    "end": "2251780"
  },
  {
    "text": "beneficial to you because you are now going to get a better cache hit rate ratio if users are switching between",
    "start": "2251780",
    "end": "2257990"
  },
  {
    "text": "multiple of your website properties assets may already be in their local browser cache good chance they can",
    "start": "2257990",
    "end": "2264050"
  },
  {
    "text": "remain in the cloud front edge location caches because now the popularity of your objects which determines",
    "start": "2264050",
    "end": "2269240"
  },
  {
    "text": "effectively how likely they are to stay in cache is magnified by the number of different properties referencing them",
    "start": "2269240",
    "end": "2276470"
  },
  {
    "text": "and this is a technique that's used by the amazon.com retail website and the regional variants of that the Amazon",
    "start": "2276470",
    "end": "2282830"
  },
  {
    "text": "logo is the same whether you're in the United States or Canada for example so",
    "start": "2282830",
    "end": "2289120"
  },
  {
    "text": "amazon.com uses a shared distribution to survey images the fourth best practice",
    "start": "2289120",
    "end": "2296780"
  },
  {
    "start": "2294000",
    "end": "2350000"
  },
  {
    "text": "I'm going to talk about is for devalues CloudFront allows you to configure various different forwarded values on",
    "start": "2296780",
    "end": "2304250"
  },
  {
    "text": "for your different cache behaviors which is a powerful ways for you to deliver unique and personalized content to users but",
    "start": "2304250",
    "end": "2312410"
  },
  {
    "text": "the the effect is that these values are not only forwarded back to your origin but they're also form part of your CAD",
    "start": "2312410",
    "end": "2317660"
  },
  {
    "text": "foreign cash key so if you're forwarding a lot of values and that's gonna impact the potentially impact the cash hit",
    "start": "2317660",
    "end": "2325369"
  },
  {
    "text": "ratio and last week trusted advisor at lon launched two new checks one of which",
    "start": "2325369",
    "end": "2332140"
  },
  {
    "text": "integrates with a cloud front a scheduled distribution configuration it checks to see if your forwarding values",
    "start": "2332140",
    "end": "2338210"
  },
  {
    "text": "which have a great impact on the cash hit rate ratios such as user agent you know actually make recommendations to",
    "start": "2338210",
    "end": "2344270"
  },
  {
    "text": "you so you can be notified of changes you can make to improve them improve the cash efficacy of conference and my half",
    "start": "2344270",
    "end": "2351830"
  },
  {
    "start": "2350000",
    "end": "2396000"
  },
  {
    "text": "best practice if we followed all that versioning versioning and cache control",
    "start": "2351830",
    "end": "2359150"
  },
  {
    "text": "and forwarded values best practices we won't have to issue any invalidations",
    "start": "2359150",
    "end": "2365590"
  },
  {
    "text": "but you can use it as a last resort it only applies to the cloud front cache it you can't invalidate and purge things",
    "start": "2365590",
    "end": "2372560"
  },
  {
    "text": "from end-user caches and the easiest way to do this is to use the path prefix",
    "start": "2372560",
    "end": "2377660"
  },
  {
    "text": "invalidation feature that we launched earlier this year which allows you to use a wild-card at the end of a path and",
    "start": "2377660",
    "end": "2384650"
  },
  {
    "text": "say if everything that matches this path prefix invalidated and every the next",
    "start": "2384650",
    "end": "2390740"
  },
  {
    "text": "access to that will be a and miss on the calpro header location and we'll go and pull the new veteran from your origin",
    "start": "2390740",
    "end": "2396910"
  },
  {
    "start": "2396000",
    "end": "2566000"
  },
  {
    "text": "cause this I go to a demo and I'll take you through some of the things we just talked about okay so here we have our",
    "start": "2397000",
    "end": "2407990"
  },
  {
    "text": "the CloudFront console and we have distribution for our demonstration",
    "start": "2407990",
    "end": "2413720"
  },
  {
    "text": "website and you can see here we have",
    "start": "2413720",
    "end": "2419869"
  },
  {
    "text": "multiple cache behaviors each type behavior different different thing let's",
    "start": "2419869",
    "end": "2425330"
  },
  {
    "text": "take a look at the cookie cache behavior",
    "start": "2425330",
    "end": "2432020"
  },
  {
    "text": "and one of the one of the things we've",
    "start": "2432020",
    "end": "2437210"
  },
  {
    "text": "done here is we've whitelisted some cookies that we want to forward to the origin and make part of our cloud from",
    "start": "2437210",
    "end": "2442640"
  },
  {
    "text": "cache key any cookie that matches CloudFront dash star and the J session",
    "start": "2442640",
    "end": "2448369"
  },
  {
    "text": "ID our web application is a java application and we want to make sure that the session ID for our users is",
    "start": "2448369",
    "end": "2454910"
  },
  {
    "text": "forwarded to the origin on this cache behavior if we switch back to assets",
    "start": "2454910",
    "end": "2463190"
  },
  {
    "text": "cache behavior where our static factors are coming from from s3 we can scroll",
    "start": "2463190",
    "end": "2469910"
  },
  {
    "text": "down here and we see here we're not forwarding any cookies and then it make any sense for our assets so we're going",
    "start": "2469910",
    "end": "2476630"
  },
  {
    "text": "to maximize the chance of cash tips at the edge by reducing the cache key space",
    "start": "2476630",
    "end": "2482210"
  },
  {
    "text": "effectively here we go here our hero",
    "start": "2482210",
    "end": "2488150"
  },
  {
    "text": "assets and so we talked a little bit",
    "start": "2488150",
    "end": "2494000"
  },
  {
    "text": "about the minimum maximum and default TTL earlier so on this cache behaviour",
    "start": "2494000",
    "end": "2500089"
  },
  {
    "text": "our live stream cache behavior we've set our minimum TTL to zero we said I'm Mac maximum TTL to 300 our default TTL to 60",
    "start": "2500089",
    "end": "2506540"
  },
  {
    "text": "and what that's gonna do is any-any the minimum TTL comes into effect when a an",
    "start": "2506540",
    "end": "2514849"
  },
  {
    "text": "Origin may return a cache control header with the value that's less than the minimum the configuring account Rankin",
    "start": "2514849",
    "end": "2520040"
  },
  {
    "text": "California is going to clamp the age in the californication an example here so",
    "start": "2520040",
    "end": "2525530"
  },
  {
    "text": "we changed this to 210 an origin returns cache-control 5 Karen's gonna apply a 10",
    "start": "2525530",
    "end": "2531020"
  },
  {
    "text": "second TTL the maximum tto works in the same way and it plays if the origin",
    "start": "2531020",
    "end": "2536720"
  },
  {
    "text": "returns with a cache control 600 we're gonna clamp it to 300 in the account",
    "start": "2536720",
    "end": "2541910"
  },
  {
    "text": "engine location and the default TTL comes into play when your origin doesn't provide any",
    "start": "2541910",
    "end": "2547190"
  },
  {
    "text": "cache control or expires header and gives us no idea of how long you want to cache things for so we we have to make a",
    "start": "2547190",
    "end": "2553250"
  },
  {
    "text": "decision and we apply in the default TTL in this case and these values justify to the californication we don't modify any",
    "start": "2553250",
    "end": "2559339"
  },
  {
    "text": "headers as they're served out to the viewer",
    "start": "2559339",
    "end": "2563200"
  },
  {
    "start": "2566000",
    "end": "2633000"
  },
  {
    "text": "also the key takeaways version your assets and they've you to quickly roll forward and roll back use multiple",
    "start": "2567440",
    "end": "2574859"
  },
  {
    "text": "counter behaviors separate the forwarded values and the mid set appropriate",
    "start": "2574859",
    "end": "2579869"
  },
  {
    "text": "minimum maximum default TTLs ford only the required headers that make sense for the different parts of your web",
    "start": "2579869",
    "end": "2585209"
  },
  {
    "text": "application and ideally only use writing validations is a last resort as I said",
    "start": "2585209",
    "end": "2590999"
  },
  {
    "text": "that only applies to the current cash it does not apply to browser caches or other intermediary caches thank you very",
    "start": "2590999",
    "end": "2596819"
  },
  {
    "text": "much I'm gonna hand over to Alex to take you through testing your configuration",
    "start": "2596819",
    "end": "2602779"
  },
  {
    "text": "cool I'm gonna go quickly through some best practices around basically how do you know all this stuff actually worked",
    "start": "2604759",
    "end": "2610969"
  },
  {
    "text": "so specifically we're gonna look at pseudo development mode that you can use",
    "start": "2610969",
    "end": "2616319"
  },
  {
    "text": "to test your cloud front and configuration how you ensure caching how",
    "start": "2616319",
    "end": "2622739"
  },
  {
    "text": "do you know that your stuff is going to be cached correctly how do you perform its tests how do you load tests and how",
    "start": "2622739",
    "end": "2628769"
  },
  {
    "text": "do you validate your ssl settings so those are the five things I'm going to walk through pretty quickly so",
    "start": "2628769",
    "end": "2633920"
  },
  {
    "start": "2633000",
    "end": "2707000"
  },
  {
    "text": "development mode there's no switch to turn on development mode in in cloud",
    "start": "2633920",
    "end": "2640559"
  },
  {
    "text": "front but basically there are some things that you can do that allow you to validate that your CloudFront",
    "start": "2640559",
    "end": "2646079"
  },
  {
    "text": "distribution is set up correctly without exposing your site to the to the whole",
    "start": "2646079",
    "end": "2651749"
  },
  {
    "text": "world so the first thing to do is to set the maximum TTL to zero so that was this feature that Matthew just showed this",
    "start": "2651749",
    "end": "2659039"
  },
  {
    "text": "will basically ensure that cloud front doesn't catch anything that allows you to you know sort of experiment work in",
    "start": "2659039",
    "end": "2666390"
  },
  {
    "text": "your development environment without having to fight and cache objects for a very long time and without actually",
    "start": "2666390",
    "end": "2672269"
  },
  {
    "text": "changing the headers on the object so that's very useful also without having to wait for invalidations to apply the",
    "start": "2672269",
    "end": "2679049"
  },
  {
    "text": "second is it also lets you not have to change forwarding headers so you can do",
    "start": "2679049",
    "end": "2684869"
  },
  {
    "text": "this all with the forward header behavior that you're going to use for your live site you can also whitelist",
    "start": "2684869",
    "end": "2690869"
  },
  {
    "text": "your IP address using a wsof so that an application is only accessible via",
    "start": "2690869",
    "end": "2696390"
  },
  {
    "text": "your your internal network and then finally you can use sign cookies to use our private content future again to",
    "start": "2696390",
    "end": "2703200"
  },
  {
    "text": "further restrict access so it's only valid for a certain period of time",
    "start": "2703200",
    "end": "2708380"
  },
  {
    "start": "2707000",
    "end": "2746000"
  },
  {
    "text": "one of the things that Jared showed you was looking at the ratio of hits and",
    "start": "2708799",
    "end": "2715829"
  },
  {
    "text": "misses from a CloudFront cache you can also see on an individual object whether",
    "start": "2715829",
    "end": "2721319"
  },
  {
    "text": "an object is a a cache hit or a cache mitt by looking at the headers returned",
    "start": "2721319",
    "end": "2727109"
  },
  {
    "text": "by CloudFront associate this is in demos for the headers to look at in the developer console in Chrome or Firefox",
    "start": "2727109",
    "end": "2732809"
  },
  {
    "text": "or the H header the FF header the cache control headers and the HSPs header that",
    "start": "2732809",
    "end": "2739890"
  },
  {
    "text": "clean showed you earlier so in the demo we'll look at the developer console and see how you can see those headers",
    "start": "2739890",
    "end": "2747079"
  },
  {
    "start": "2746000",
    "end": "2862000"
  },
  {
    "text": "performance testing performance testing is super hard I'll start with being",
    "start": "2747079",
    "end": "2752670"
  },
  {
    "text": "honest with you that is not easy to get an accurate perspective of what your end-users see in terms of performance",
    "start": "2752670",
    "end": "2758460"
  },
  {
    "text": "you can get one view which is your performance from your site but how do you get an overall view of your",
    "start": "2758460",
    "end": "2765450"
  },
  {
    "text": "performance so when we start a cloud front most customers use what were to call backbone tests these are tests that",
    "start": "2765450",
    "end": "2771420"
  },
  {
    "text": "are run by third-party services that run in data centers and test cloud front from those data centers and they get a",
    "start": "2771420",
    "end": "2778410"
  },
  {
    "text": "fairly good view of availability but",
    "start": "2778410",
    "end": "2784109"
  },
  {
    "text": "they don't feel great in terms of performance because you don't have a whole lot of end users that access your",
    "start": "2784109",
    "end": "2789509"
  },
  {
    "text": "site from data centers your users don't live in data centers they live in homes and they have ISPs or they're in",
    "start": "2789509",
    "end": "2795390"
  },
  {
    "text": "businesses that have ISPs that aren't representative by backbone tests so the",
    "start": "2795390",
    "end": "2801240"
  },
  {
    "text": "the next generation of performance testing what we've seen customers use is last mile testing last mile testing is",
    "start": "2801240",
    "end": "2807059"
  },
  {
    "text": "still thin synthetics so it's running a set test downloading an object or testing a website using a pre-programmed script or",
    "start": "2807059",
    "end": "2814170"
  },
  {
    "text": "script or other synthetic monitoring but it's doing it for more consumer grade",
    "start": "2814170",
    "end": "2819599"
  },
  {
    "text": "ISPs again good but it can be incomplete so the way we recommend as sort of four",
    "start": "2819599",
    "end": "2827430"
  },
  {
    "text": "best practice to give a most complete view of perform and availability is real user testing",
    "start": "2827430",
    "end": "2833109"
  },
  {
    "text": "what real user testing does is it takes instrumentation from the same end users that are actually downloading content",
    "start": "2833109",
    "end": "2840940"
  },
  {
    "text": "from their sites so basically instruments your web pages and records information around availability and",
    "start": "2840940",
    "end": "2847539"
  },
  {
    "text": "performance from the same people who are actually coming to your site this is the gold standard for four point performance",
    "start": "2847539",
    "end": "2853269"
  },
  {
    "text": "testing there are actually several real user testing companies that are on the",
    "start": "2853269",
    "end": "2858400"
  },
  {
    "text": "exhibit floor here at reinvents so I encourage you to check those out load testing load testing is another thing",
    "start": "2858400",
    "end": "2865210"
  },
  {
    "start": "2862000",
    "end": "2930000"
  },
  {
    "text": "that is fairly tricky to do with a CDN what traditional load testing tools do",
    "start": "2865210",
    "end": "2872019"
  },
  {
    "text": "is they take an IEEE single IP address from a single client and they run it super hard what that does is it",
    "start": "2872019",
    "end": "2878890"
  },
  {
    "text": "circumvents a bunch of the load balancing that we've built into cloud front and it doesn't actually simulate a",
    "start": "2878890",
    "end": "2884230"
  },
  {
    "text": "real real user environment so if you have say a load test script running from an ec2 instance that pulls down one",
    "start": "2884230",
    "end": "2890769"
  },
  {
    "text": "cloud for an IP address what that do will do is test a single cloud front edge location and a limited set of",
    "start": "2890769",
    "end": "2898029"
  },
  {
    "text": "servers within that application just the set of servers that happen to be behind that one IP address an ideal load",
    "start": "2898029",
    "end": "2905349"
  },
  {
    "text": "testing system tests from multiple client locations using independent DNS",
    "start": "2905349",
    "end": "2912609"
  },
  {
    "text": "resolutions so that's the key thing cloud front uses DNS in order to accomplish a large portion of its load",
    "start": "2912609",
    "end": "2918970"
  },
  {
    "text": "balancing so a effective load test will simulate the DNS behavior that end-users",
    "start": "2918970",
    "end": "2924640"
  },
  {
    "text": "do use different DNS resolvers to make independent DNS requests that's the best practice and then the last thing we will",
    "start": "2924640",
    "end": "2932980"
  },
  {
    "start": "2930000",
    "end": "2952000"
  },
  {
    "text": "show you there's a cool tool that's out there that will verify your SSL config so it goes through a this is a test from",
    "start": "2932980",
    "end": "2939460"
  },
  {
    "text": "SSL labs goes through a series of tests on your SSL configuration and ensures",
    "start": "2939460",
    "end": "2945190"
  },
  {
    "text": "that it hits the various marks that are important for securing your your content",
    "start": "2945190",
    "end": "2951249"
  },
  {
    "text": "while in transit let me very quickly just go through I'm going to show you a couple of things so",
    "start": "2951249",
    "end": "2960059"
  },
  {
    "start": "2952000",
    "end": "2998000"
  },
  {
    "text": "this is the developer console and so this is a site that we put up at Edge reinvent and if you enable the developer",
    "start": "2961530",
    "end": "2969640"
  },
  {
    "text": "console I'm using Chrome here but there's a similar version in Firefox you can look at what we see here in the",
    "start": "2969640",
    "end": "2975880"
  },
  {
    "text": "response headers so here you see the age you'll see the cache control directives that are set by your origin and then",
    "start": "2975880",
    "end": "2982570"
  },
  {
    "text": "here's that strict transferred security header that year that clean talked about and so that is saying that hey we want",
    "start": "2982570",
    "end": "2989349"
  },
  {
    "text": "to make sure that only content is available from over an SSL connection",
    "start": "2989349",
    "end": "2997990"
  },
  {
    "text": "and then lastly sort of wrapping up very quickly you can see here is qual sis's",
    "start": "2997990",
    "end": "3004260"
  },
  {
    "start": "2998000",
    "end": "3021000"
  },
  {
    "text": "SSL labs report on edge reinvent comm and you can see that it goes through a",
    "start": "3004260",
    "end": "3009750"
  },
  {
    "text": "variety of different tests and in this case we've got any plus which is pretty cool come back and so key takeaways",
    "start": "3009750",
    "end": "3022790"
  },
  {
    "start": "3021000",
    "end": "3065000"
  },
  {
    "text": "switch off caching in development mode that's going to make your testing much more productive allow you to iterate",
    "start": "3022790",
    "end": "3028260"
  },
  {
    "text": "more quickly second use real user metrics for performance tests that's gonna get you a end user view of what",
    "start": "3028260",
    "end": "3034859"
  },
  {
    "text": "performance and availability really look like and finally if you do do a load test do it from multiple locations do",
    "start": "3034859",
    "end": "3041910"
  },
  {
    "text": "independent DNS lookups so you get a wide set of IP addresses you don't just test a single set of servers in a single",
    "start": "3041910",
    "end": "3048329"
  },
  {
    "text": "edge location you really test cloud front as a network thank you very much I hope that you've taken some things away",
    "start": "3048329",
    "end": "3054510"
  },
  {
    "text": "that are gonna really help you configure cloud front better the group here will stay behind and answer any questions",
    "start": "3054510",
    "end": "3059849"
  },
  {
    "text": "that you might have but thank you for coming",
    "start": "3059849",
    "end": "3064099"
  }
]