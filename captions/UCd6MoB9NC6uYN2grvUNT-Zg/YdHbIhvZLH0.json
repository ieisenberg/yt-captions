[
  {
    "start": "0",
    "end": "70000"
  },
  {
    "text": "hello everyone in this session we are",
    "start": "960",
    "end": "3600"
  },
  {
    "text": "going to learn",
    "start": "3600",
    "end": "4480"
  },
  {
    "text": "how to incorporate graph databases in",
    "start": "4480",
    "end": "7279"
  },
  {
    "text": "your dot net applications with amazon",
    "start": "7279",
    "end": "9519"
  },
  {
    "text": "neptune",
    "start": "9519",
    "end": "11040"
  },
  {
    "text": "my name is srivan tattanaika and i'm a",
    "start": "11040",
    "end": "13360"
  },
  {
    "text": "senior partner solution architect at",
    "start": "13360",
    "end": "15360"
  },
  {
    "text": "amazon web services focusing around",
    "start": "15360",
    "end": "17440"
  },
  {
    "text": "microsoft technologies",
    "start": "17440",
    "end": "20640"
  },
  {
    "text": "what's the agenda for today we will go",
    "start": "20640",
    "end": "23359"
  },
  {
    "text": "through graph database use cases",
    "start": "23359",
    "end": "25920"
  },
  {
    "text": "then introduce you into amazon neptune",
    "start": "25920",
    "end": "29039"
  },
  {
    "text": "we will then create a neptune database",
    "start": "29039",
    "end": "31199"
  },
  {
    "text": "cluster",
    "start": "31199",
    "end": "32320"
  },
  {
    "text": "and then create a jupyter notebook to",
    "start": "32320",
    "end": "34559"
  },
  {
    "text": "create and query database",
    "start": "34559",
    "end": "37520"
  },
  {
    "text": "we will finally spend more time on",
    "start": "37520",
    "end": "39520"
  },
  {
    "text": "programming for msm neptune",
    "start": "39520",
    "end": "42840"
  },
  {
    "text": "using.net",
    "start": "42840",
    "end": "45840"
  },
  {
    "text": "graph databases are heavily used in",
    "start": "45840",
    "end": "48719"
  },
  {
    "text": "multitude of",
    "start": "48719",
    "end": "50239"
  },
  {
    "text": "use cases like social networking in",
    "start": "50239",
    "end": "53360"
  },
  {
    "text": "recommendation engine",
    "start": "53360",
    "end": "55280"
  },
  {
    "text": "in knowledge graphs to organize your",
    "start": "55280",
    "end": "57039"
  },
  {
    "text": "knowledge",
    "start": "57039",
    "end": "58320"
  },
  {
    "text": "we also use graph databases in fraud",
    "start": "58320",
    "end": "60640"
  },
  {
    "text": "detection",
    "start": "60640",
    "end": "61840"
  },
  {
    "text": "and in life science in situations like",
    "start": "61840",
    "end": "64559"
  },
  {
    "text": "dna sequencing",
    "start": "64559",
    "end": "66400"
  },
  {
    "text": "and in network and it operations",
    "start": "66400",
    "end": "70159"
  },
  {
    "start": "70000",
    "end": "150000"
  },
  {
    "text": "amazon neptune is a fast reliable fully",
    "start": "71600",
    "end": "74799"
  },
  {
    "text": "managed",
    "start": "74799",
    "end": "75439"
  },
  {
    "text": "graph database that makes it easy to",
    "start": "75439",
    "end": "77840"
  },
  {
    "text": "build and",
    "start": "77840",
    "end": "78720"
  },
  {
    "text": "run application that work with highly",
    "start": "78720",
    "end": "81119"
  },
  {
    "text": "connected data sets",
    "start": "81119",
    "end": "83360"
  },
  {
    "text": "the core of amazon neptune is a",
    "start": "83360",
    "end": "85439"
  },
  {
    "text": "purposely build high performance graph",
    "start": "85439",
    "end": "87920"
  },
  {
    "text": "database engine",
    "start": "87920",
    "end": "89280"
  },
  {
    "text": "optimized for storing billions of",
    "start": "89280",
    "end": "91759"
  },
  {
    "text": "relationships",
    "start": "91759",
    "end": "93040"
  },
  {
    "text": "and querying the graph with milliseconds",
    "start": "93040",
    "end": "94880"
  },
  {
    "text": "latency",
    "start": "94880",
    "end": "96560"
  },
  {
    "text": "neptune support the popular graph models",
    "start": "96560",
    "end": "99680"
  },
  {
    "text": "property graphs and w3s rdfs and their",
    "start": "99680",
    "end": "102799"
  },
  {
    "text": "respective query language",
    "start": "102799",
    "end": "104560"
  },
  {
    "text": "like apache thinker probe gremlin and",
    "start": "104560",
    "end": "106880"
  },
  {
    "text": "sparkul allowing you to",
    "start": "106880",
    "end": "108640"
  },
  {
    "text": "easily build queries that efficiently",
    "start": "108640",
    "end": "111360"
  },
  {
    "text": "navigate",
    "start": "111360",
    "end": "112000"
  },
  {
    "text": "highly connected data sets network is",
    "start": "112000",
    "end": "115360"
  },
  {
    "text": "highly available with read replicas",
    "start": "115360",
    "end": "117600"
  },
  {
    "text": "point in time recovery continuous backup",
    "start": "117600",
    "end": "120320"
  },
  {
    "text": "to amazon s3",
    "start": "120320",
    "end": "121840"
  },
  {
    "text": "and replication across availabilities on",
    "start": "121840",
    "end": "124640"
  },
  {
    "text": "neptune is secure",
    "start": "124640",
    "end": "125759"
  },
  {
    "text": "with support for encryption at rest and",
    "start": "125759",
    "end": "128160"
  },
  {
    "text": "in transit",
    "start": "128160",
    "end": "129759"
  },
  {
    "text": "neptune is fully managed so you don't",
    "start": "129759",
    "end": "131680"
  },
  {
    "text": "have to worry about database management",
    "start": "131680",
    "end": "133840"
  },
  {
    "text": "tasks such as hardware provisioning",
    "start": "133840",
    "end": "135840"
  },
  {
    "text": "software patching",
    "start": "135840",
    "end": "136879"
  },
  {
    "text": "setup configurations and so on",
    "start": "136879",
    "end": "141040"
  },
  {
    "text": "let's now go for a demo and then see how",
    "start": "141040",
    "end": "143760"
  },
  {
    "text": "to create a database cluster",
    "start": "143760",
    "end": "145760"
  },
  {
    "text": "and then access it with jupyter",
    "start": "145760",
    "end": "147520"
  },
  {
    "text": "notebooks and also in.net",
    "start": "147520",
    "end": "151680"
  },
  {
    "start": "150000",
    "end": "287000"
  },
  {
    "text": "i'm in my aws console let's go into the",
    "start": "152640",
    "end": "155360"
  },
  {
    "text": "neptune section of the console",
    "start": "155360",
    "end": "158480"
  },
  {
    "text": "the first thing i'm going to do is to",
    "start": "158480",
    "end": "160000"
  },
  {
    "text": "create a subnet group to deploy this",
    "start": "160000",
    "end": "162319"
  },
  {
    "text": "database",
    "start": "162319",
    "end": "163599"
  },
  {
    "text": "let's call it my nature subnet group",
    "start": "163599",
    "end": "166319"
  },
  {
    "text": "give the same description",
    "start": "166319",
    "end": "167840"
  },
  {
    "text": "select the vpc that you want to deploy",
    "start": "167840",
    "end": "170560"
  },
  {
    "text": "and then select the subnets in different",
    "start": "170560",
    "end": "172319"
  },
  {
    "text": "availability zones that you want to",
    "start": "172319",
    "end": "174160"
  },
  {
    "text": "deploy this database",
    "start": "174160",
    "end": "176400"
  },
  {
    "text": "in this case i'm deploying into a sydney",
    "start": "176400",
    "end": "179840"
  },
  {
    "text": "ac1 and ac2 so i created my subnet",
    "start": "179840",
    "end": "184000"
  },
  {
    "text": "group let's now create the neptune",
    "start": "184000",
    "end": "185680"
  },
  {
    "text": "database",
    "start": "185680",
    "end": "187040"
  },
  {
    "text": "you need to give it a name in this case",
    "start": "187040",
    "end": "188959"
  },
  {
    "text": "i'm going to select the production",
    "start": "188959",
    "end": "190400"
  },
  {
    "text": "template and then select the instance",
    "start": "190400",
    "end": "192080"
  },
  {
    "text": "type that i want to run this",
    "start": "192080",
    "end": "194159"
  },
  {
    "text": "i'm going to deploy a multi-ac",
    "start": "194159",
    "end": "195840"
  },
  {
    "text": "deployment",
    "start": "195840",
    "end": "197360"
  },
  {
    "text": "and then for the connectivity i'm going",
    "start": "197360",
    "end": "198959"
  },
  {
    "text": "to select the vpc that i want to deploy",
    "start": "198959",
    "end": "201040"
  },
  {
    "text": "this",
    "start": "201040",
    "end": "201680"
  },
  {
    "text": "and then select the subnet group i",
    "start": "201680",
    "end": "203280"
  },
  {
    "text": "created the moment ago",
    "start": "203280",
    "end": "205599"
  },
  {
    "text": "i'm going to leave the database port as",
    "start": "205599",
    "end": "207959"
  },
  {
    "text": "8182",
    "start": "207959",
    "end": "209519"
  },
  {
    "text": "and then create the database it will",
    "start": "209519",
    "end": "212000"
  },
  {
    "text": "take some time to provision this",
    "start": "212000",
    "end": "213440"
  },
  {
    "text": "database once it is created the status",
    "start": "213440",
    "end": "215920"
  },
  {
    "text": "will be marked as available",
    "start": "215920",
    "end": "219360"
  },
  {
    "text": "after few moments my database is",
    "start": "220640",
    "end": "222640"
  },
  {
    "text": "available",
    "start": "222640",
    "end": "223680"
  },
  {
    "text": "let's now go to notebooks and create a",
    "start": "223680",
    "end": "225680"
  },
  {
    "text": "notebook",
    "start": "225680",
    "end": "227200"
  },
  {
    "text": "select the database name the type of the",
    "start": "227200",
    "end": "229599"
  },
  {
    "text": "notebook instance",
    "start": "229599",
    "end": "230720"
  },
  {
    "text": "give it the notebook name and then leave",
    "start": "230720",
    "end": "234080"
  },
  {
    "text": "all the parameters as default you need",
    "start": "234080",
    "end": "236000"
  },
  {
    "text": "to of course give a role",
    "start": "236000",
    "end": "237439"
  },
  {
    "text": "to execute this notebook leave all these",
    "start": "237439",
    "end": "240080"
  },
  {
    "text": "things as default and then",
    "start": "240080",
    "end": "241599"
  },
  {
    "text": "create the notebook once the notebook is",
    "start": "241599",
    "end": "245040"
  },
  {
    "text": "available we will go there and then",
    "start": "245040",
    "end": "247040"
  },
  {
    "text": "query our database using this notebook",
    "start": "247040",
    "end": "251200"
  },
  {
    "text": "by default when you create the database",
    "start": "251200",
    "end": "253920"
  },
  {
    "text": "it does not allow",
    "start": "253920",
    "end": "255200"
  },
  {
    "text": "traffic from outside so you need to set",
    "start": "255200",
    "end": "258160"
  },
  {
    "text": "up the security group",
    "start": "258160",
    "end": "259600"
  },
  {
    "text": "that allows traffic from your",
    "start": "259600",
    "end": "261600"
  },
  {
    "text": "development environment",
    "start": "261600",
    "end": "264160"
  },
  {
    "text": "so in my case i have these security",
    "start": "264160",
    "end": "267199"
  },
  {
    "text": "groups assigned for neptune database and",
    "start": "267199",
    "end": "269520"
  },
  {
    "text": "i'm going to edit the inbound rules",
    "start": "269520",
    "end": "272000"
  },
  {
    "text": "and then allow traffic from my",
    "start": "272000",
    "end": "274080"
  },
  {
    "text": "development machine",
    "start": "274080",
    "end": "275280"
  },
  {
    "text": "so i have this development view machine",
    "start": "275280",
    "end": "276960"
  },
  {
    "text": "the security group is this security",
    "start": "276960",
    "end": "278800"
  },
  {
    "text": "group",
    "start": "278800",
    "end": "279600"
  },
  {
    "text": "and i'm going to allow traffic from the",
    "start": "279600",
    "end": "281680"
  },
  {
    "text": "security group",
    "start": "281680",
    "end": "282800"
  },
  {
    "text": "so my development machine can access",
    "start": "282800",
    "end": "285280"
  },
  {
    "text": "this database",
    "start": "285280",
    "end": "288160"
  },
  {
    "start": "287000",
    "end": "381000"
  },
  {
    "text": "i have created a very simple.net core",
    "start": "288880",
    "end": "291600"
  },
  {
    "text": "application",
    "start": "291600",
    "end": "294240"
  },
  {
    "text": "in this application i have added a",
    "start": "294400",
    "end": "296400"
  },
  {
    "text": "nougat package",
    "start": "296400",
    "end": "297680"
  },
  {
    "text": "called gremlin.net",
    "start": "297680",
    "end": "301039"
  },
  {
    "text": "gremlin.net allows you to communicate",
    "start": "301039",
    "end": "303520"
  },
  {
    "text": "with amazon neptune",
    "start": "303520",
    "end": "305600"
  },
  {
    "text": "using apache tinkerpop gremlin",
    "start": "305600",
    "end": "308639"
  },
  {
    "text": "as the query language",
    "start": "308639",
    "end": "311840"
  },
  {
    "text": "in my code i have given the endpoint",
    "start": "312560",
    "end": "316479"
  },
  {
    "text": "the endpoint you can find it in your",
    "start": "316479",
    "end": "318720"
  },
  {
    "text": "database section of the application",
    "start": "318720",
    "end": "322320"
  },
  {
    "text": "if you are doing only read operation you",
    "start": "322320",
    "end": "324080"
  },
  {
    "text": "can use the read endpoint",
    "start": "324080",
    "end": "325840"
  },
  {
    "text": "but if you want to do read and write",
    "start": "325840",
    "end": "328160"
  },
  {
    "text": "operations you can",
    "start": "328160",
    "end": "329440"
  },
  {
    "text": "use the right endpoint",
    "start": "329440",
    "end": "332960"
  },
  {
    "text": "so i copy this right endpoint and use it",
    "start": "332960",
    "end": "335520"
  },
  {
    "text": "in my application",
    "start": "335520",
    "end": "338479"
  },
  {
    "text": "i have given my endpoint",
    "start": "338479",
    "end": "341759"
  },
  {
    "text": "and then create a very simple gremlin",
    "start": "341759",
    "end": "344160"
  },
  {
    "text": "server",
    "start": "344160",
    "end": "345280"
  },
  {
    "text": "giving the port and enabling the ssl",
    "start": "345280",
    "end": "348400"
  },
  {
    "text": "then i create a gremlin client gremlin",
    "start": "348400",
    "end": "351039"
  },
  {
    "text": "client is a disposable object",
    "start": "351039",
    "end": "353280"
  },
  {
    "text": "but in this case i just create a very",
    "start": "353280",
    "end": "354960"
  },
  {
    "text": "simple uh execution of this method",
    "start": "354960",
    "end": "358240"
  },
  {
    "text": "here i'm executing a gremlin",
    "start": "358240",
    "end": "361280"
  },
  {
    "text": "command in this tutorial we'll not go",
    "start": "361280",
    "end": "364400"
  },
  {
    "text": "into gremlin as a language",
    "start": "364400",
    "end": "366240"
  },
  {
    "text": "that itself is another complete tutorial",
    "start": "366240",
    "end": "369120"
  },
  {
    "text": "but when you run this command you can",
    "start": "369120",
    "end": "370639"
  },
  {
    "text": "see that i'm getting the",
    "start": "370639",
    "end": "372000"
  },
  {
    "text": "number of vertices in this graph as of",
    "start": "372000",
    "end": "374720"
  },
  {
    "text": "now you can see",
    "start": "374720",
    "end": "375680"
  },
  {
    "text": "the number is zero because i haven't",
    "start": "375680",
    "end": "378000"
  },
  {
    "text": "added any",
    "start": "378000",
    "end": "379120"
  },
  {
    "text": "data into this database let's go into",
    "start": "379120",
    "end": "382639"
  },
  {
    "start": "381000",
    "end": "556000"
  },
  {
    "text": "our jupyter notebook",
    "start": "382639",
    "end": "384319"
  },
  {
    "text": "and then execute some command to",
    "start": "384319",
    "end": "386080"
  },
  {
    "text": "populate this database",
    "start": "386080",
    "end": "388960"
  },
  {
    "text": "if you open the notebook by default",
    "start": "388960",
    "end": "392000"
  },
  {
    "text": "it is populated with some information",
    "start": "392000",
    "end": "395600"
  },
  {
    "text": "so you can see there are some folders",
    "start": "395600",
    "end": "398720"
  },
  {
    "text": "and there's a getting started guide that",
    "start": "398720",
    "end": "400240"
  },
  {
    "text": "you can use to learn about amazon",
    "start": "400240",
    "end": "402800"
  },
  {
    "text": "neptune",
    "start": "402800",
    "end": "403680"
  },
  {
    "text": "and also about gremlin as a language",
    "start": "403680",
    "end": "409199"
  },
  {
    "text": "if you go through this notebook you will",
    "start": "409199",
    "end": "411680"
  },
  {
    "text": "find",
    "start": "411680",
    "end": "412400"
  },
  {
    "text": "some commands that you can use you need",
    "start": "412400",
    "end": "415120"
  },
  {
    "text": "to specify",
    "start": "415120",
    "end": "416560"
  },
  {
    "text": "a percentage percentage gremlin in this",
    "start": "416560",
    "end": "419520"
  },
  {
    "text": "notebook queries if you are going to",
    "start": "419520",
    "end": "421680"
  },
  {
    "text": "execute gremlin commands",
    "start": "421680",
    "end": "425360"
  },
  {
    "text": "you can execute commands on the notebook",
    "start": "425759",
    "end": "427840"
  },
  {
    "text": "itself so if you run this",
    "start": "427840",
    "end": "429599"
  },
  {
    "text": "status you can see the status of the",
    "start": "429599",
    "end": "433440"
  },
  {
    "text": "database i have created a very simple",
    "start": "434840",
    "end": "437360"
  },
  {
    "text": "gremlin command",
    "start": "437360",
    "end": "438400"
  },
  {
    "text": "to add three people",
    "start": "438400",
    "end": "441520"
  },
  {
    "text": "vertices into my database and i added",
    "start": "441520",
    "end": "444479"
  },
  {
    "text": "few properties in this case",
    "start": "444479",
    "end": "446319"
  },
  {
    "text": "the name so you have dan mike and",
    "start": "446319",
    "end": "449440"
  },
  {
    "text": "say current let's run this",
    "start": "449440",
    "end": "453919"
  },
  {
    "text": "you can see that it has added a few",
    "start": "453919",
    "end": "456800"
  },
  {
    "text": "vertices",
    "start": "456800",
    "end": "459360"
  },
  {
    "text": "if you now execute graph get all the",
    "start": "459919",
    "end": "463280"
  },
  {
    "text": "vertices you will find that there are",
    "start": "463280",
    "end": "465039"
  },
  {
    "text": "three vertices",
    "start": "465039",
    "end": "467919"
  },
  {
    "text": "back in my visual studio let's run my",
    "start": "469120",
    "end": "471919"
  },
  {
    "text": "simple",
    "start": "471919",
    "end": "472720"
  },
  {
    "text": "program again",
    "start": "472720",
    "end": "475599"
  },
  {
    "text": "and here you will now find the count",
    "start": "475759",
    "end": "477919"
  },
  {
    "text": "coming as",
    "start": "477919",
    "end": "478879"
  },
  {
    "text": "3 because i added 3 vertices",
    "start": "478879",
    "end": "483759"
  },
  {
    "text": "as you can see the count is 3.",
    "start": "486560",
    "end": "493840"
  },
  {
    "text": "let's now see this database with some",
    "start": "494960",
    "end": "497280"
  },
  {
    "text": "more",
    "start": "497280",
    "end": "498080"
  },
  {
    "text": "advanced data set if you call this seed",
    "start": "498080",
    "end": "501440"
  },
  {
    "text": "command",
    "start": "501440",
    "end": "502560"
  },
  {
    "text": "and then populate with airpods it will",
    "start": "502560",
    "end": "505039"
  },
  {
    "text": "get populated",
    "start": "505039",
    "end": "506240"
  },
  {
    "text": "with a large graph",
    "start": "506240",
    "end": "509280"
  },
  {
    "text": "with nodes as airport and",
    "start": "509280",
    "end": "512560"
  },
  {
    "text": "edges connecting different airports",
    "start": "512560",
    "end": "516399"
  },
  {
    "text": "the data set is available on github",
    "start": "516399",
    "end": "520320"
  },
  {
    "text": "you can read about this database it's",
    "start": "520320",
    "end": "522080"
  },
  {
    "text": "similar to like airport routes",
    "start": "522080",
    "end": "525040"
  },
  {
    "text": "you can access it through github and",
    "start": "525040",
    "end": "526720"
  },
  {
    "text": "then explore the data set",
    "start": "526720",
    "end": "528399"
  },
  {
    "text": "to know what kind of information you can",
    "start": "528399",
    "end": "530399"
  },
  {
    "text": "find in this graph",
    "start": "530399",
    "end": "532720"
  },
  {
    "text": "we will use this graph to query our",
    "start": "532720",
    "end": "534560"
  },
  {
    "text": "database",
    "start": "534560",
    "end": "536480"
  },
  {
    "text": "let's first populate the database",
    "start": "536480",
    "end": "540000"
  },
  {
    "text": "i created a very simple gremlin query",
    "start": "540000",
    "end": "541839"
  },
  {
    "text": "here",
    "start": "541839",
    "end": "543600"
  },
  {
    "text": "it maps out all the routes from new",
    "start": "543600",
    "end": "546720"
  },
  {
    "text": "zealand to australia",
    "start": "546720",
    "end": "549279"
  },
  {
    "text": "so this is a gremlin command let's see",
    "start": "549279",
    "end": "552000"
  },
  {
    "text": "how we can",
    "start": "552000",
    "end": "552720"
  },
  {
    "text": "execute this using.net",
    "start": "552720",
    "end": "557120"
  },
  {
    "start": "556000",
    "end": "643000"
  },
  {
    "text": "back in my visual studio i have added",
    "start": "557680",
    "end": "562720"
  },
  {
    "text": "this gremlin client but in this case",
    "start": "562720",
    "end": "564640"
  },
  {
    "text": "i'm properly disposing it",
    "start": "564640",
    "end": "567839"
  },
  {
    "text": "let's now do a read operation to read",
    "start": "567839",
    "end": "570640"
  },
  {
    "text": "the",
    "start": "570640",
    "end": "571040"
  },
  {
    "text": "information that i got in my jupyter",
    "start": "571040",
    "end": "573600"
  },
  {
    "text": "notebook",
    "start": "573600",
    "end": "575360"
  },
  {
    "text": "here i create a graph and then create an",
    "start": "575360",
    "end": "577519"
  },
  {
    "text": "anonymous traversal source",
    "start": "577519",
    "end": "580160"
  },
  {
    "text": "and then construct my query",
    "start": "580160",
    "end": "581760"
  },
  {
    "text": "declaratively",
    "start": "581760",
    "end": "583360"
  },
  {
    "text": "rather than executing it as a string",
    "start": "583360",
    "end": "587839"
  },
  {
    "text": "let's run this program and then see the",
    "start": "588320",
    "end": "591200"
  },
  {
    "text": "output we are going to get",
    "start": "591200",
    "end": "594320"
  },
  {
    "text": "if you expand this vset you will find",
    "start": "595040",
    "end": "597360"
  },
  {
    "text": "there are 19 edges",
    "start": "597360",
    "end": "599120"
  },
  {
    "text": "so this corresponds to different path",
    "start": "599120",
    "end": "602000"
  },
  {
    "text": "that you can take",
    "start": "602000",
    "end": "603200"
  },
  {
    "text": "if you explore this object you can see",
    "start": "603200",
    "end": "604720"
  },
  {
    "text": "there's a path from sydney to queenstown",
    "start": "604720",
    "end": "607839"
  },
  {
    "text": "uh there's another path from queenstown",
    "start": "607839",
    "end": "610160"
  },
  {
    "text": "to melbourne",
    "start": "610160",
    "end": "612320"
  },
  {
    "text": "so you get the point so this is how you",
    "start": "612320",
    "end": "614640"
  },
  {
    "text": "read from",
    "start": "614640",
    "end": "615440"
  },
  {
    "text": "neptune database",
    "start": "615440",
    "end": "618959"
  },
  {
    "text": "you can use the drop method to drop the",
    "start": "618959",
    "end": "622000"
  },
  {
    "text": "entire database",
    "start": "622000",
    "end": "623839"
  },
  {
    "text": "so here i'm executing the",
    "start": "623839",
    "end": "626959"
  },
  {
    "text": "drop command of gremling to delete",
    "start": "626959",
    "end": "630480"
  },
  {
    "text": "all the vertices",
    "start": "630480",
    "end": "633839"
  },
  {
    "text": "once we drop it if you take the count of",
    "start": "634800",
    "end": "637680"
  },
  {
    "text": "the database like before",
    "start": "637680",
    "end": "639839"
  },
  {
    "text": "you will find that the count will come",
    "start": "639839",
    "end": "642000"
  },
  {
    "text": "as 0.",
    "start": "642000",
    "end": "644560"
  },
  {
    "start": "643000",
    "end": "873000"
  },
  {
    "text": "let's now do some write operation to our",
    "start": "644560",
    "end": "647760"
  },
  {
    "text": "database",
    "start": "647760",
    "end": "649200"
  },
  {
    "text": "so i have this simple write method here",
    "start": "649200",
    "end": "652399"
  },
  {
    "text": "i'm adding three vertices",
    "start": "652399",
    "end": "655839"
  },
  {
    "text": "two have label person and one",
    "start": "655839",
    "end": "659040"
  },
  {
    "text": "has the label software",
    "start": "659040",
    "end": "663279"
  },
  {
    "text": "and the person one the id is p1 person",
    "start": "663279",
    "end": "666240"
  },
  {
    "text": "two",
    "start": "666240",
    "end": "666720"
  },
  {
    "text": "the id is p2 and the software has an ids",
    "start": "666720",
    "end": "669519"
  },
  {
    "text": "one",
    "start": "669519",
    "end": "670640"
  },
  {
    "text": "and also i added few different",
    "start": "670640",
    "end": "673120"
  },
  {
    "text": "properties",
    "start": "673120",
    "end": "674000"
  },
  {
    "text": "one is called name john another one is",
    "start": "674000",
    "end": "676160"
  },
  {
    "text": "called brand name visual studio for the",
    "start": "676160",
    "end": "677920"
  },
  {
    "text": "software",
    "start": "677920",
    "end": "679519"
  },
  {
    "text": "so let's run this and then submit the",
    "start": "679519",
    "end": "682000"
  },
  {
    "text": "query",
    "start": "682000",
    "end": "683360"
  },
  {
    "text": "and then check what is the output we are",
    "start": "683360",
    "end": "685200"
  },
  {
    "text": "getting so as of now i don't have any",
    "start": "685200",
    "end": "686880"
  },
  {
    "text": "entries because i drop all the vertices",
    "start": "686880",
    "end": "690160"
  },
  {
    "text": "so let's run this command to check what",
    "start": "690160",
    "end": "693040"
  },
  {
    "text": "kind of information that it populates",
    "start": "693040",
    "end": "696079"
  },
  {
    "text": "so execution is done so when i run it",
    "start": "696079",
    "end": "698480"
  },
  {
    "text": "you can see that i have three vertices",
    "start": "698480",
    "end": "700959"
  },
  {
    "text": "one with name john one with brand name",
    "start": "700959",
    "end": "703360"
  },
  {
    "text": "visual studio",
    "start": "703360",
    "end": "706160"
  },
  {
    "text": "so this is how you can view the values",
    "start": "706240",
    "end": "708720"
  },
  {
    "text": "so if i",
    "start": "708720",
    "end": "709360"
  },
  {
    "text": "run this g got get all the vertices you",
    "start": "709360",
    "end": "713360"
  },
  {
    "text": "can see the id of",
    "start": "713360",
    "end": "714639"
  },
  {
    "text": "all the vertices let's now do some",
    "start": "714639",
    "end": "718399"
  },
  {
    "text": "update operations to update the existing",
    "start": "718399",
    "end": "722399"
  },
  {
    "text": "vertices so here i'm going to add",
    "start": "722399",
    "end": "726000"
  },
  {
    "text": "for the p1 a name called martin",
    "start": "726000",
    "end": "729760"
  },
  {
    "text": "and also i'm going to add an age called",
    "start": "729760",
    "end": "732160"
  },
  {
    "text": "27",
    "start": "732160",
    "end": "733839"
  },
  {
    "text": "you need to specify the cardinality if",
    "start": "733839",
    "end": "736320"
  },
  {
    "text": "you don't specify what will happen is",
    "start": "736320",
    "end": "739120"
  },
  {
    "text": "it will include this edge as",
    "start": "739120",
    "end": "742560"
  },
  {
    "text": "an append to existing set",
    "start": "742560",
    "end": "745839"
  },
  {
    "text": "so as of now i don't have an edge",
    "start": "745839",
    "end": "747440"
  },
  {
    "text": "property but if you have an edge",
    "start": "747440",
    "end": "748880"
  },
  {
    "text": "property previously defined it will",
    "start": "748880",
    "end": "750880"
  },
  {
    "text": "add into this but if you specify the",
    "start": "750880",
    "end": "753519"
  },
  {
    "text": "cardinality as single",
    "start": "753519",
    "end": "755360"
  },
  {
    "text": "it will update the edge so i'm going to",
    "start": "755360",
    "end": "758959"
  },
  {
    "text": "add this name martin",
    "start": "758959",
    "end": "762480"
  },
  {
    "text": "and also i'm going to update the age",
    "start": "762480",
    "end": "766880"
  },
  {
    "text": "so if you get the value map again you",
    "start": "766880",
    "end": "769839"
  },
  {
    "text": "will see",
    "start": "769839",
    "end": "770720"
  },
  {
    "text": "different values here as of now you can",
    "start": "770720",
    "end": "772399"
  },
  {
    "text": "see that the martin has",
    "start": "772399",
    "end": "774480"
  },
  {
    "text": "no name but after i execute this command",
    "start": "774480",
    "end": "779360"
  },
  {
    "text": "those values will get updated so let's",
    "start": "779360",
    "end": "782079"
  },
  {
    "text": "run this again",
    "start": "782079",
    "end": "783519"
  },
  {
    "text": "as you can see now the name is martin",
    "start": "783519",
    "end": "785680"
  },
  {
    "text": "age is 27.",
    "start": "785680",
    "end": "787680"
  },
  {
    "text": "if the cardinality is set if you add the",
    "start": "787680",
    "end": "790160"
  },
  {
    "text": "edge again",
    "start": "790160",
    "end": "792160"
  },
  {
    "text": "if it is not set to single it will",
    "start": "792160",
    "end": "794320"
  },
  {
    "text": "append to that existing list",
    "start": "794320",
    "end": "796240"
  },
  {
    "text": "so similarly i'm going to update some",
    "start": "796240",
    "end": "798079"
  },
  {
    "text": "other properties of these vertices and",
    "start": "798079",
    "end": "800000"
  },
  {
    "text": "also i'm going to add an",
    "start": "800000",
    "end": "801200"
  },
  {
    "text": "edge so this is one way to add an edge",
    "start": "801200",
    "end": "805680"
  },
  {
    "text": "so here once you update it you can see",
    "start": "805680",
    "end": "807519"
  },
  {
    "text": "the brand name is visual studio",
    "start": "807519",
    "end": "810399"
  },
  {
    "text": "and as i said before if you don't",
    "start": "810399",
    "end": "812560"
  },
  {
    "text": "specify the cardinality",
    "start": "812560",
    "end": "814639"
  },
  {
    "text": "neptune by default will append these",
    "start": "814639",
    "end": "817839"
  },
  {
    "text": "values",
    "start": "817839",
    "end": "819120"
  },
  {
    "text": "to the end",
    "start": "819120",
    "end": "821760"
  },
  {
    "text": "you can add these edges so i'm going to",
    "start": "822320",
    "end": "824720"
  },
  {
    "text": "add",
    "start": "824720",
    "end": "825440"
  },
  {
    "text": "one edge uh in this case uh",
    "start": "825440",
    "end": "828880"
  },
  {
    "text": "called nose from p1",
    "start": "828880",
    "end": "832000"
  },
  {
    "text": "into p2 h can also have properties so in",
    "start": "832000",
    "end": "835839"
  },
  {
    "text": "this case i have a property called",
    "start": "835839",
    "end": "837680"
  },
  {
    "text": "weight",
    "start": "837680",
    "end": "838560"
  },
  {
    "text": "sign for this edge called",
    "start": "838560",
    "end": "841760"
  },
  {
    "text": "i had another edge called install so in",
    "start": "841760",
    "end": "844399"
  },
  {
    "text": "this case it's from",
    "start": "844399",
    "end": "845519"
  },
  {
    "text": "p1 to the software s1 and in the case",
    "start": "845519",
    "end": "849600"
  },
  {
    "text": "that edge has a property called computer",
    "start": "849600",
    "end": "852000"
  },
  {
    "text": "and the name of that property is my",
    "start": "852000",
    "end": "854839"
  },
  {
    "text": "value",
    "start": "854839",
    "end": "857360"
  },
  {
    "text": "and the name of that property is",
    "start": "857360",
    "end": "859680"
  },
  {
    "text": "computers",
    "start": "859680",
    "end": "860560"
  },
  {
    "text": "and the value is my laptop",
    "start": "860560",
    "end": "864000"
  },
  {
    "text": "that's how you can interact with amazon",
    "start": "864560",
    "end": "866480"
  },
  {
    "text": "neptune using.net",
    "start": "866480",
    "end": "871839"
  }
]