[
  {
    "start": "0",
    "end": "26000"
  },
  {
    "text": "[Music]",
    "start": "650",
    "end": "1010"
  },
  {
    "text": "[Applause]",
    "start": "1010",
    "end": "4088"
  },
  {
    "text": "[Music]",
    "start": "4960",
    "end": "11679"
  },
  {
    "text": "hello i am ananya a cloud support",
    "start": "11679",
    "end": "14320"
  },
  {
    "text": "engineer here at the ews office in",
    "start": "14320",
    "end": "16560"
  },
  {
    "text": "bangalore",
    "start": "16560",
    "end": "17760"
  },
  {
    "text": "today i'm going to show you how to",
    "start": "17760",
    "end": "20000"
  },
  {
    "text": "configure aws vaf to protect your",
    "start": "20000",
    "end": "22160"
  },
  {
    "text": "resources from common attacks",
    "start": "22160",
    "end": "24560"
  },
  {
    "text": "let's get started",
    "start": "24560",
    "end": "26800"
  },
  {
    "start": "26000",
    "end": "111000"
  },
  {
    "text": "migrate from awsvaf classic to aws path",
    "start": "26800",
    "end": "30240"
  },
  {
    "text": "if applicable",
    "start": "30240",
    "end": "31920"
  },
  {
    "text": "there are two versions of aws valve",
    "start": "31920",
    "end": "34000"
  },
  {
    "text": "available aws valve classic and aws",
    "start": "34000",
    "end": "36880"
  },
  {
    "text": "valve if you are still using prior",
    "start": "36880",
    "end": "39120"
  },
  {
    "text": "version that is aws5 classic then it's a",
    "start": "39120",
    "end": "41920"
  },
  {
    "text": "best practice to migrate to awsvaf",
    "start": "41920",
    "end": "45120"
  },
  {
    "text": "to perform this migration you can",
    "start": "45120",
    "end": "47280"
  },
  {
    "text": "leverage the automated migration tool",
    "start": "47280",
    "end": "50640"
  },
  {
    "text": "to find out more view migrating of",
    "start": "50640",
    "end": "53120"
  },
  {
    "text": "webacl automated migration documentation",
    "start": "53120",
    "end": "56559"
  },
  {
    "text": "linked in the associated knowledge",
    "start": "56559",
    "end": "58160"
  },
  {
    "text": "center article",
    "start": "58160",
    "end": "60079"
  },
  {
    "text": "run penetration testing against your",
    "start": "60079",
    "end": "62160"
  },
  {
    "text": "application to identify vulnerabilities",
    "start": "62160",
    "end": "65680"
  },
  {
    "text": "to understand an application specific",
    "start": "65680",
    "end": "68240"
  },
  {
    "text": "vulnerabilities and to customize your",
    "start": "68240",
    "end": "70799"
  },
  {
    "text": "firewall rules based on it it's a best",
    "start": "70799",
    "end": "73119"
  },
  {
    "text": "practice to carry out penetration",
    "start": "73119",
    "end": "75040"
  },
  {
    "text": "testing against your application",
    "start": "75040",
    "end": "77920"
  },
  {
    "text": "review incoming requests to optimize",
    "start": "77920",
    "end": "79920"
  },
  {
    "text": "your custom rules",
    "start": "79920",
    "end": "81920"
  },
  {
    "text": "before creating custom rules to protect",
    "start": "81920",
    "end": "84400"
  },
  {
    "text": "your application review the incoming",
    "start": "84400",
    "end": "86640"
  },
  {
    "text": "request in your environment to identify",
    "start": "86640",
    "end": "88960"
  },
  {
    "text": "attack patents you can generate logs for",
    "start": "88960",
    "end": "91759"
  },
  {
    "text": "aws vaf amazon cloudfront",
    "start": "91759",
    "end": "94960"
  },
  {
    "text": "application load balancer and amazon api",
    "start": "94960",
    "end": "97600"
  },
  {
    "text": "gateway and then store them on amazon",
    "start": "97600",
    "end": "99840"
  },
  {
    "text": "simple storage service",
    "start": "99840",
    "end": "102320"
  },
  {
    "text": "finally use amazon athena to query the",
    "start": "102320",
    "end": "105600"
  },
  {
    "text": "logs and identify patterns",
    "start": "105600",
    "end": "109680"
  },
  {
    "start": "111000",
    "end": "190000"
  },
  {
    "text": "if you know every supported uri for your",
    "start": "111200",
    "end": "113600"
  },
  {
    "text": "application you can find the request",
    "start": "113600",
    "end": "115680"
  },
  {
    "text": "made to your environment for the uris",
    "start": "115680",
    "end": "118000"
  },
  {
    "text": "that don't exist from this result",
    "start": "118000",
    "end": "121040"
  },
  {
    "text": "this query gives the total requests for",
    "start": "121040",
    "end": "124000"
  },
  {
    "text": "each uri after running this query you",
    "start": "124000",
    "end": "127280"
  },
  {
    "text": "can see that for uri forward slash there",
    "start": "127280",
    "end": "130800"
  },
  {
    "text": "are 901 requests",
    "start": "130800",
    "end": "133599"
  },
  {
    "text": "this ethernet query counts requests with",
    "start": "133599",
    "end": "136000"
  },
  {
    "text": "different host header values",
    "start": "136000",
    "end": "138400"
  },
  {
    "text": "here in the output we can see that there",
    "start": "138400",
    "end": "140640"
  },
  {
    "text": "were 387 requests with this toast header",
    "start": "140640",
    "end": "144879"
  },
  {
    "text": "after identifying a patent you can",
    "start": "144879",
    "end": "147520"
  },
  {
    "text": "create aws faf rules in count mode to",
    "start": "147520",
    "end": "150319"
  },
  {
    "text": "verify that the rule is configured to",
    "start": "150319",
    "end": "152800"
  },
  {
    "text": "match those requests",
    "start": "152800",
    "end": "154640"
  },
  {
    "text": "then",
    "start": "154640",
    "end": "155519"
  },
  {
    "text": "move the rule to block mode",
    "start": "155519",
    "end": "159120"
  },
  {
    "text": "create a not match on the host header",
    "start": "159760",
    "end": "162160"
  },
  {
    "text": "with value www.example.com",
    "start": "162160",
    "end": "166040"
  },
  {
    "text": "set the action to block",
    "start": "166239",
    "end": "168560"
  },
  {
    "text": "then any requests to your environment",
    "start": "168560",
    "end": "170480"
  },
  {
    "text": "that don't have a host header of",
    "start": "170480",
    "end": "173640"
  },
  {
    "text": "www.example.com are now blocked",
    "start": "173640",
    "end": "176720"
  },
  {
    "text": "use aws managed rule groups to protect",
    "start": "176720",
    "end": "179599"
  },
  {
    "text": "against common attacks",
    "start": "179599",
    "end": "182319"
  },
  {
    "text": "use",
    "start": "182319",
    "end": "183200"
  },
  {
    "text": "aws managed rule groups to prevent",
    "start": "183200",
    "end": "186560"
  },
  {
    "text": "common attacks that apply to most",
    "start": "186560",
    "end": "189200"
  },
  {
    "text": "applications",
    "start": "189200",
    "end": "190640"
  },
  {
    "start": "190000",
    "end": "298000"
  },
  {
    "text": "including requests that",
    "start": "190640",
    "end": "193599"
  },
  {
    "text": "don't contain a user agent",
    "start": "193599",
    "end": "196480"
  },
  {
    "text": "represent bot requests",
    "start": "196480",
    "end": "199200"
  },
  {
    "text": "use localhost as the http host header",
    "start": "199200",
    "end": "203519"
  },
  {
    "text": "use the prop find http method",
    "start": "203519",
    "end": "207840"
  },
  {
    "text": "at first include these baseline rule",
    "start": "207840",
    "end": "210640"
  },
  {
    "text": "groups in your web access control list",
    "start": "210640",
    "end": "213599"
  },
  {
    "text": "in count mode",
    "start": "213599",
    "end": "215280"
  },
  {
    "text": "you do this to check if the rules in the",
    "start": "215280",
    "end": "217599"
  },
  {
    "text": "rule group",
    "start": "217599",
    "end": "218799"
  },
  {
    "text": "match a legitimate request",
    "start": "218799",
    "end": "221120"
  },
  {
    "text": "and might then block the request when",
    "start": "221120",
    "end": "223440"
  },
  {
    "text": "configuring the rule group to block mode",
    "start": "223440",
    "end": "226400"
  },
  {
    "text": "let's enable a rule group in count mode",
    "start": "226400",
    "end": "231040"
  },
  {
    "text": "open the aws valve console",
    "start": "231040",
    "end": "234640"
  },
  {
    "text": "select your web apple",
    "start": "234640",
    "end": "237360"
  },
  {
    "text": "choose the rules tab",
    "start": "237360",
    "end": "240640"
  },
  {
    "text": "select the amr rule group that's",
    "start": "240640",
    "end": "243519"
  },
  {
    "text": "preventing your legitimate requests",
    "start": "243519",
    "end": "246319"
  },
  {
    "text": "for this demonstration i'll select aws",
    "start": "246319",
    "end": "249280"
  },
  {
    "text": "managed rules common rule set",
    "start": "249280",
    "end": "253599"
  },
  {
    "text": "choose edit",
    "start": "253599",
    "end": "255840"
  },
  {
    "text": "in rules",
    "start": "255840",
    "end": "257120"
  },
  {
    "text": "select",
    "start": "257120",
    "end": "258239"
  },
  {
    "text": "set all rule actions to count",
    "start": "258239",
    "end": "262000"
  },
  {
    "text": "choose save rule",
    "start": "262000",
    "end": "264400"
  },
  {
    "text": "now",
    "start": "264400",
    "end": "265280"
  },
  {
    "text": "review the aws valve logs and amazon",
    "start": "265280",
    "end": "268479"
  },
  {
    "text": "cloud watch metrics to determine",
    "start": "268479",
    "end": "270880"
  },
  {
    "text": "whether the manage rule group matches",
    "start": "270880",
    "end": "273040"
  },
  {
    "text": "any legitimate traffic for some time",
    "start": "273040",
    "end": "276000"
  },
  {
    "text": "if it doesn't move the rule group to",
    "start": "276000",
    "end": "278320"
  },
  {
    "text": "block by disabling enable count mode",
    "start": "278320",
    "end": "282400"
  },
  {
    "text": "you can also set a specific rule in a",
    "start": "282400",
    "end": "284880"
  },
  {
    "text": "rule group in count mode for example",
    "start": "284880",
    "end": "288160"
  },
  {
    "text": "no user agent header and keep the rule",
    "start": "288160",
    "end": "290639"
  },
  {
    "text": "group in block mode by setting the rule",
    "start": "290639",
    "end": "293199"
  },
  {
    "text": "action of the rule as count",
    "start": "293199",
    "end": "296720"
  },
  {
    "text": "use your baseline ews vav using the rate",
    "start": "296720",
    "end": "300240"
  },
  {
    "start": "298000",
    "end": "382000"
  },
  {
    "text": "of legitimate requests",
    "start": "300240",
    "end": "302880"
  },
  {
    "text": "perform an analysis of your traffic to",
    "start": "302880",
    "end": "306000"
  },
  {
    "text": "identify the number of requests",
    "start": "306000",
    "end": "308479"
  },
  {
    "text": "made by legitimate client ip addresses",
    "start": "308479",
    "end": "311680"
  },
  {
    "text": "using amazon antenna or quick site on",
    "start": "311680",
    "end": "315280"
  },
  {
    "text": "aws vaf locks",
    "start": "315280",
    "end": "317759"
  },
  {
    "text": "using the information you get from this",
    "start": "317759",
    "end": "319759"
  },
  {
    "text": "analysis baseline your aws faf to the",
    "start": "319759",
    "end": "322960"
  },
  {
    "text": "rate of request",
    "start": "322960",
    "end": "324400"
  },
  {
    "text": "made by a legit male client then",
    "start": "324400",
    "end": "326880"
  },
  {
    "text": "configure the aws valve rate based rule",
    "start": "326880",
    "end": "329759"
  },
  {
    "text": "to ensure that if the rate of request",
    "start": "329759",
    "end": "332080"
  },
  {
    "text": "from an ip address is greater than a set",
    "start": "332080",
    "end": "334639"
  },
  {
    "text": "threshold then request from this ip get",
    "start": "334639",
    "end": "338160"
  },
  {
    "text": "temporarily blocked",
    "start": "338160",
    "end": "340400"
  },
  {
    "text": "has an athena query performed on aws",
    "start": "340400",
    "end": "343039"
  },
  {
    "text": "valve logs to count the number of",
    "start": "343039",
    "end": "344800"
  },
  {
    "text": "requests",
    "start": "344800",
    "end": "345919"
  },
  {
    "text": "from a single ip address between a given",
    "start": "345919",
    "end": "348800"
  },
  {
    "text": "timestamp",
    "start": "348800",
    "end": "350320"
  },
  {
    "text": "you can see from the output that the",
    "start": "350320",
    "end": "352160"
  },
  {
    "text": "total number of requests made from this",
    "start": "352160",
    "end": "354560"
  },
  {
    "text": "iep is 11 and the country is gb",
    "start": "354560",
    "end": "358639"
  },
  {
    "text": "this is an ethernet query performed on",
    "start": "358639",
    "end": "361039"
  },
  {
    "text": "aws valve logs to count the number of",
    "start": "361039",
    "end": "363759"
  },
  {
    "text": "requests from all ipr addresses between",
    "start": "363759",
    "end": "366720"
  },
  {
    "text": "the same time frame",
    "start": "366720",
    "end": "368720"
  },
  {
    "text": "you can see from the output that the",
    "start": "368720",
    "end": "370240"
  },
  {
    "text": "total number of requests made from the",
    "start": "370240",
    "end": "372400"
  },
  {
    "text": "first ip address is 11. second ip",
    "start": "372400",
    "end": "375520"
  },
  {
    "text": "address is 18",
    "start": "375520",
    "end": "377120"
  },
  {
    "text": "and third is",
    "start": "377120",
    "end": "378840"
  },
  {
    "text": "10.",
    "start": "378840",
    "end": "380800"
  },
  {
    "text": "use the aws 5 security automations",
    "start": "380800",
    "end": "383600"
  },
  {
    "start": "382000",
    "end": "511000"
  },
  {
    "text": "template to prevent common attacks",
    "start": "383600",
    "end": "386400"
  },
  {
    "text": "aws vaf security automation solution",
    "start": "386400",
    "end": "390000"
  },
  {
    "text": "deploys a set of aws valve rules",
    "start": "390000",
    "end": "393280"
  },
  {
    "text": "use the solution to provide additional",
    "start": "393280",
    "end": "396080"
  },
  {
    "text": "protection from common attacks",
    "start": "396080",
    "end": "398319"
  },
  {
    "text": "for example you can enable protection",
    "start": "398319",
    "end": "400960"
  },
  {
    "text": "against",
    "start": "400960",
    "end": "402240"
  },
  {
    "text": "scanner and probes",
    "start": "402240",
    "end": "404000"
  },
  {
    "text": "bad bots",
    "start": "404000",
    "end": "405360"
  },
  {
    "text": "bad ip addresses",
    "start": "405360",
    "end": "407680"
  },
  {
    "text": "note the solution uses other aws",
    "start": "407680",
    "end": "410880"
  },
  {
    "text": "services that incur costs",
    "start": "410880",
    "end": "413840"
  },
  {
    "text": "protect against sql injection and",
    "start": "413840",
    "end": "416400"
  },
  {
    "text": "cross-site scripting",
    "start": "416400",
    "end": "418319"
  },
  {
    "text": "to protect your applications against sql",
    "start": "418319",
    "end": "421599"
  },
  {
    "text": "injection and cross-site scripting or",
    "start": "421599",
    "end": "424720"
  },
  {
    "text": "xss attacks use the built-in sql",
    "start": "424720",
    "end": "427680"
  },
  {
    "text": "injection and cross-site scripting",
    "start": "427680",
    "end": "429919"
  },
  {
    "text": "engines",
    "start": "429919",
    "end": "431440"
  },
  {
    "text": "note that attacks can be performed on",
    "start": "431440",
    "end": "434240"
  },
  {
    "text": "different parts of the http request such",
    "start": "434240",
    "end": "437520"
  },
  {
    "text": "as the http header query string or uri",
    "start": "437520",
    "end": "442080"
  },
  {
    "text": "so configure the aws vaf rules to",
    "start": "442080",
    "end": "444960"
  },
  {
    "text": "inspect different parts of http request",
    "start": "444960",
    "end": "447840"
  },
  {
    "text": "against the built-in mitigation engines",
    "start": "447840",
    "end": "451840"
  },
  {
    "text": "restrict access from cloudfront if you",
    "start": "451840",
    "end": "454000"
  },
  {
    "text": "are using aws vap on cloudfront to make",
    "start": "454000",
    "end": "457120"
  },
  {
    "text": "sure that the requests do not hit your",
    "start": "457120",
    "end": "459039"
  },
  {
    "text": "application directly by bypassing",
    "start": "459039",
    "end": "461120"
  },
  {
    "text": "cloudfront and vaf you can use either of",
    "start": "461120",
    "end": "463520"
  },
  {
    "text": "these two strategies",
    "start": "463520",
    "end": "466080"
  },
  {
    "text": "restrict access to cloudfront ip",
    "start": "466080",
    "end": "468400"
  },
  {
    "text": "addresses",
    "start": "468400",
    "end": "469680"
  },
  {
    "text": "add a custom header in cloudfront for",
    "start": "469680",
    "end": "472000"
  },
  {
    "text": "origin requests",
    "start": "472000",
    "end": "473840"
  },
  {
    "text": "on the origin allow access only if",
    "start": "473840",
    "end": "476160"
  },
  {
    "text": "custom header and value are present",
    "start": "476160",
    "end": "479039"
  },
  {
    "text": "if the origin is an application or",
    "start": "479039",
    "end": "481680"
  },
  {
    "text": "balancer or api gateway then use aws vaf",
    "start": "481680",
    "end": "485680"
  },
  {
    "text": "on the origin to allow requests that",
    "start": "485680",
    "end": "488400"
  },
  {
    "text": "contain custom header and value",
    "start": "488400",
    "end": "491440"
  },
  {
    "text": "protect against ddos attacks",
    "start": "491440",
    "end": "494240"
  },
  {
    "text": "for protection from distributed denial",
    "start": "494240",
    "end": "497120"
  },
  {
    "text": "of service datos attacks",
    "start": "497120",
    "end": "499680"
  },
  {
    "text": "c aws best practices for ddos resiliency",
    "start": "499680",
    "end": "503919"
  },
  {
    "text": "and aws shield features documentation",
    "start": "503919",
    "end": "507280"
  },
  {
    "text": "pages both linked in the associated",
    "start": "507280",
    "end": "509919"
  },
  {
    "text": "knowledge center article",
    "start": "509919",
    "end": "512399"
  },
  {
    "start": "511000",
    "end": "528000"
  },
  {
    "text": "thanks for watching and happy cloud",
    "start": "512399",
    "end": "514479"
  },
  {
    "text": "computing from all of us here at aws",
    "start": "514479",
    "end": "518080"
  },
  {
    "text": "[Music]",
    "start": "518080",
    "end": "519120"
  },
  {
    "text": "[Applause]",
    "start": "519120",
    "end": "520870"
  },
  {
    "text": "[Music]",
    "start": "520870",
    "end": "524039"
  },
  {
    "text": "you",
    "start": "527440",
    "end": "529519"
  }
]