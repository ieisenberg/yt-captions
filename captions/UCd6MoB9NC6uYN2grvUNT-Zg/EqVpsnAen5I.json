[
  {
    "start": "0",
    "end": "336000"
  },
  {
    "text": "all right so did did anyone else get the weather",
    "start": "3080",
    "end": "10280"
  },
  {
    "text": "report that we're getting snow in Las",
    "start": "10280",
    "end": "15639"
  },
  {
    "text": "Vegas yeah so who wants to join me so there's Mount Charleston just north of",
    "start": "15640",
    "end": "20760"
  },
  {
    "text": "here ski slope we're going to go up there and we're going to ski today who's with me all right good so what would you",
    "start": "20760",
    "end": "29759"
  },
  {
    "text": "what what would you do if you were prevented from going into",
    "start": "29759",
    "end": "36600"
  },
  {
    "text": "work if there was a a snowstorm what would you do here at work",
    "start": "36600",
    "end": "43680"
  },
  {
    "text": "back home what would you do I said cheer oh cheer so you would be you could join me",
    "start": "43680",
    "end": "51199"
  },
  {
    "text": "and we'll hit the slopes you know we call it a snow day uh what would your users do",
    "start": "51199",
    "end": "58920"
  },
  {
    "text": "though cheer what about the business how would",
    "start": "58920",
    "end": "65360"
  },
  {
    "text": "the business um do if all of the users",
    "start": "65360",
    "end": "70960"
  },
  {
    "text": "were unable to work for a day or two",
    "start": "70960",
    "end": "77880"
  },
  {
    "text": "days or three days or maybe even an entire",
    "start": "77880",
    "end": "83680"
  },
  {
    "text": "week the the business could have a hard time with that",
    "start": "84240",
    "end": "91159"
  },
  {
    "text": "so my name is darl Osborne I'm a Solutions architect uh you know it's great to be",
    "start": "91159",
    "end": "97439"
  },
  {
    "text": "back in Las Vegas actually uh I lived here a number of years ago and my two",
    "start": "97439",
    "end": "102560"
  },
  {
    "text": "oldest kids um were actually born here so it's great to be back here in Las Vegas this week it's it's it's even uh",
    "start": "102560",
    "end": "110479"
  },
  {
    "text": "it's very exciting because AWS we're we're back here in town with reinvent",
    "start": "110479",
    "end": "115799"
  },
  {
    "text": "our partners are here but most important you're here our customer uh so we're glad that you",
    "start": "115799",
    "end": "123360"
  },
  {
    "text": "took this week out of your of your your schedule to be with us and uh you know",
    "start": "123360",
    "end": "128920"
  },
  {
    "text": "we've already been here a couple of days we've got one day left so let's make the",
    "start": "128920",
    "end": "133959"
  },
  {
    "text": "most of it so let's go back to that question what would your users do",
    "start": "133959",
    "end": "141599"
  },
  {
    "text": "if if they were unable to commute and to work because of maybe a storm",
    "start": "141800",
    "end": "150480"
  },
  {
    "text": "or a natural disaster or maybe a social or economic or some type of political",
    "start": "150480",
    "end": "158680"
  },
  {
    "text": "event what would they do well if they were like some of the users that I would know they would go ahead and get their",
    "start": "158680",
    "end": "165879"
  },
  {
    "text": "laptops open up their VPN client they would pull",
    "start": "165879",
    "end": "171560"
  },
  {
    "text": "out their token and try to connect but if that was all of your",
    "start": "171560",
    "end": "178680"
  },
  {
    "text": "users what would happen to your VPN",
    "start": "178680",
    "end": "185080"
  },
  {
    "text": "infrastructure your VPN headends would be",
    "start": "185080",
    "end": "190159"
  },
  {
    "text": "overloaded you would run out of connections you would run out of",
    "start": "190159",
    "end": "195200"
  },
  {
    "text": "licenses the whole thing may just tip",
    "start": "195200",
    "end": "199519"
  },
  {
    "text": "over so I think we have we have two outcomes may maybe three so if it was",
    "start": "200920",
    "end": "207159"
  },
  {
    "text": "snowing then go skiing with me and we could we could have some fun uh but the the other two outcomes would",
    "start": "207159",
    "end": "214400"
  },
  {
    "text": "be just that they wouldn't be able to connect the other outcome is maybe you",
    "start": "214400",
    "end": "221400"
  },
  {
    "text": "thought this through and you provisioned you over-provisioned your VPN",
    "start": "221400",
    "end": "226920"
  },
  {
    "text": "infrastructure you have the hardware the software the licenses already in place",
    "start": "226920",
    "end": "232560"
  },
  {
    "text": "so that all of your users can connect remotely at the same time",
    "start": "232560",
    "end": "240319"
  },
  {
    "text": "what's wrong with that it's pricey how expensive would",
    "start": "240360",
    "end": "245519"
  },
  {
    "text": "that be 99 99.9% of the time that Hardware is",
    "start": "245519",
    "end": "252760"
  },
  {
    "text": "going to be sitting there idle is that the best",
    "start": "252760",
    "end": "258120"
  },
  {
    "text": "use of your company's resources well we've got two great AWS",
    "start": "258120",
    "end": "265800"
  },
  {
    "text": "Solutions Architects with us Matt Lewis and Joe Fontes he guys and they're here",
    "start": "265800",
    "end": "272720"
  },
  {
    "text": "to present some solutions to help us with this use case so I'll turn the time",
    "start": "272720",
    "end": "279280"
  },
  {
    "text": "over to uh over to Matt all right thanks very much Daryl okay uh welcome guys so we' really",
    "start": "279280",
    "end": "285880"
  },
  {
    "text": "set the stage there snowstorm got you trapped at home is your VPN infrastructure really going to scale so",
    "start": "285880",
    "end": "291919"
  },
  {
    "text": "we're going to start with an overview on traditional Remote Access VPN solution so what do they actually look like how",
    "start": "291919",
    "end": "296960"
  },
  {
    "text": "do you connect to your corporate network via a VPN solution solution then we're going to go through the scenario the whatif the disaster scenario and then",
    "start": "296960",
    "end": "303960"
  },
  {
    "text": "we'll roll through how to build a VPN Solution on AWS both um in two two different uh types of solutions so I'm",
    "start": "303960",
    "end": "310680"
  },
  {
    "text": "going to talk about the Enterprise based solution so really using Enterprise uh vendors and vendors you know and love today um and then Joe's going to come in",
    "start": "310680",
    "end": "317160"
  },
  {
    "text": "and talk about the open source solution and he's also going to expand on a few different features that on top of the",
    "start": "317160",
    "end": "322400"
  },
  {
    "text": "Enterprise solution so we're going to we're going to roll through those and hopefully you can get a bit of an idea on how you can build VPN Solutions on",
    "start": "322400",
    "end": "328520"
  },
  {
    "text": "AWS today all right so let's talk about the traditional um architecture of a VPN",
    "start": "328520",
    "end": "334800"
  },
  {
    "text": "solution so at a very high level you probably got a a corporate HQ um with",
    "start": "334800",
    "end": "340120"
  },
  {
    "start": "336000",
    "end": "336000"
  },
  {
    "text": "with a lot of your users that are generally on net so they're plugged into a land they're within your security perimeter they're within your um Network",
    "start": "340120",
    "end": "347120"
  },
  {
    "text": "you can control what they do you can control where they can access through proxies Etc you've probably got some other sites and maybe a small site like",
    "start": "347120",
    "end": "354880"
  },
  {
    "text": "a like a small office uh for example and they're probably all connected by something like an uls ipvpn so a service",
    "start": "354880",
    "end": "361680"
  },
  {
    "text": "provider Network that you still control it's still within your domain almost",
    "start": "361680",
    "end": "367000"
  },
  {
    "text": "you've probably then got a data center with some data center stuff uh in it some servers and they're all connected",
    "start": "367000",
    "end": "372400"
  },
  {
    "text": "in this nice ecosystem now we've got users that want to connect to this ecosystem so you need a secure um so an",
    "start": "372400",
    "end": "379599"
  },
  {
    "text": "encrypted way of coming into that ecosystem and uh not opening it up to the rest of the world so really these",
    "start": "379599",
    "end": "385800"
  },
  {
    "text": "users probably have the internet so they probably have internet connectivity and uh they can connect through to your",
    "start": "385800",
    "end": "391560"
  },
  {
    "text": "data center the data center probably has internet connectivity as well so from there you probably deploy some VPN",
    "start": "391560",
    "end": "397280"
  },
  {
    "text": "appliances that are internet connected so they have public interfaces or they're connected and can be reached via",
    "start": "397280",
    "end": "402639"
  },
  {
    "text": "the public internet and your users can then use an encrypted VPN to these devices once they connect to these",
    "start": "402639",
    "end": "408639"
  },
  {
    "text": "devices they get probably a uh a static onetoone natat so that they've got an identifier and an IP within your network",
    "start": "408639",
    "end": "416080"
  },
  {
    "text": "you've extended your um perimeter now out to the US users and they can now talk to your HQ they can now talk to",
    "start": "416080",
    "end": "422080"
  },
  {
    "text": "file servers they can now talk to the private things that you have within your within your network now keep in mind in this",
    "start": "422080",
    "end": "429120"
  },
  {
    "text": "solution this is physical infrastructure so as Daryl said we've provisioned some VPN infrastructure inside our data",
    "start": "429120",
    "end": "435800"
  },
  {
    "text": "center so from here if we look at the capacity of of the infrastructure itself it's probably going to be based on VPN",
    "start": "435800",
    "end": "441720"
  },
  {
    "text": "users and bandwidth that's generally what a a physical VPN Servo is looking at so how many users can you connect to",
    "start": "441720",
    "end": "448160"
  },
  {
    "text": "that uh piece of equipment and how much bandwidth can you put through that piece of equipment now um if we do have a",
    "start": "448160",
    "end": "454960"
  },
  {
    "text": "snowstorm for instance and we all get locked in all of your users start working from",
    "start": "454960",
    "end": "460960"
  },
  {
    "text": "home your office is closed now you've got a large flash crowd of users that actually need to connect to your private",
    "start": "460960",
    "end": "468039"
  },
  {
    "text": "Network so what does that look like well as we start scaling out our users our",
    "start": "468039",
    "end": "473159"
  },
  {
    "text": "VPN infrastructure starts getting overrun our capacity gets overrun so we",
    "start": "473159",
    "end": "478479"
  },
  {
    "text": "breach the number of PN users that we can support we also breach the amount of band that our VPN Hardware Appliances",
    "start": "478479",
    "end": "484319"
  },
  {
    "text": "can support so we have a capacity shortfall here and that means users can't",
    "start": "484319",
    "end": "490720"
  },
  {
    "text": "connect so what do you do well you hit the help button now in our case and I'll talk about what the help button actually",
    "start": "490720",
    "end": "496960"
  },
  {
    "text": "is it is a a physical thing almost that you can can uh press to deploy VPN infrastructure in",
    "start": "496960",
    "end": "502879"
  },
  {
    "text": "AWS so you've hit the red button what happens now let's let's watch our Enterprise VPN solution grow out so",
    "start": "502879",
    "end": "509240"
  },
  {
    "start": "508000",
    "end": "508000"
  },
  {
    "text": "first we need some requirements what what do we need this VPN uh solution uh to do so we want we want oneclick",
    "start": "509240",
    "end": "516000"
  },
  {
    "text": "deployment so how would we do that probably AWS cloud formation template so we build a cloud formation template that deploys an Ami inside a VPC that's based",
    "start": "516000",
    "end": "523680"
  },
  {
    "text": "on a VPN uh instance um and all of the other stuff that goes along with that we also want to take advantage of our five",
    "start": "523680",
    "end": "530600"
  },
  {
    "text": "um advantages of AWS so we've got agility cost savings breadth of functionality the ability to Glow uh",
    "start": "530600",
    "end": "536800"
  },
  {
    "text": "deploy globally in minutes so we have 11 regions world worldwide you can deploy in any one of these regions and",
    "start": "536800",
    "end": "542040"
  },
  {
    "text": "elasticity that's the important thing here so remember we had a capacity overrun with our physical infrastructure",
    "start": "542040",
    "end": "547560"
  },
  {
    "text": "we want to try and get around that limitation um also uh with that um we want complete infrastructure automation",
    "start": "547560",
    "end": "553839"
  },
  {
    "text": "so we don't want to have to actually go and rack and stack something we don't want to have to touch keyboard uh fingers to keyboard and deploy something",
    "start": "553839",
    "end": "560320"
  },
  {
    "text": "we want to click one button and have it all automated and deployed for us and lastly fault",
    "start": "560320",
    "end": "566399"
  },
  {
    "text": "tolerance so how do we build the solution in AWS well we've still got our private Network",
    "start": "566399",
    "end": "572240"
  },
  {
    "text": "we haven't changed anything there we've still got our data center we've still probably got some other servers in the data center so you don't need to move",
    "start": "572240",
    "end": "578519"
  },
  {
    "text": "those to AWS you can still connect to those we're not talking about a lift and shift or anything like that we're only talking about",
    "start": "578519",
    "end": "584680"
  },
  {
    "text": "connectivity so we've still got our users they've still got the internet but now instead of coming directly to the",
    "start": "584680",
    "end": "590200"
  },
  {
    "text": "data center they're actually going to an AWS region So within the AWS region we're deploying some instances so in",
    "start": "590200",
    "end": "596360"
  },
  {
    "text": "this case some ec2 instances within a VPC now we can connect back to our data",
    "start": "596360",
    "end": "601959"
  },
  {
    "text": "center either via Direct Connect uh if you have one in place or you can just use VPN and you can automatically",
    "start": "601959",
    "end": "607480"
  },
  {
    "text": "provision VPN as well now AWS by default is connected to the internet through an igw if you so",
    "start": "607480",
    "end": "614440"
  },
  {
    "text": "configure that and now our VPN users are actually VPN to the AWS infrastructure",
    "start": "614440",
    "end": "619480"
  },
  {
    "text": "instead of VPN to the data center so now we as we turn on more",
    "start": "619480",
    "end": "624640"
  },
  {
    "text": "users or more users are working from home our infrastructure is going to automatically scale scale",
    "start": "624640",
    "end": "631040"
  },
  {
    "text": "okay so instead of the capacity shortfall being a distinct line that we can only overcome by deploying physical",
    "start": "631040",
    "end": "637720"
  },
  {
    "text": "infrastructure it's now something that grows with our infrastructure and also can track so when you don't have a large",
    "start": "637720",
    "end": "643839"
  },
  {
    "text": "number of VPN users you can contract your infrastructure now these are all 101 tenants of AWS where um their",
    "start": "643839",
    "end": "651399"
  },
  {
    "text": "advantages that you can take care take advantage of today Al righty",
    "start": "651399",
    "end": "659560"
  },
  {
    "text": "so depending on whether you're coming in through a direct connector or a VPN the architecture is a little bit different but I I'll talk about that okay so let's",
    "start": "659560",
    "end": "666920"
  },
  {
    "start": "665000",
    "end": "665000"
  },
  {
    "text": "look at the architecture in AWS let's really zoom in here so we've still got our users nothing's changed there we",
    "start": "666920",
    "end": "673200"
  },
  {
    "text": "still have a data center some uh other servers that are sitting in that data center now we have our Amazon region so",
    "start": "673200",
    "end": "679440"
  },
  {
    "text": "you select a region to deploy the VPN infrastructure from there we deploy a",
    "start": "679440",
    "end": "685519"
  },
  {
    "text": "VPC now what a VPC really is it's a private isolated section of the AWS Cloud that you deploy instances in or",
    "start": "685519",
    "end": "691800"
  },
  {
    "text": "ec2 that's what where your ec2 instances are going to set okay so you have your Amazon VPC you designate a cedar address",
    "start": "691800",
    "end": "698839"
  },
  {
    "text": "range for that VPC as well then we've got some availability zones so these are our fault domains within an Amazon",
    "start": "698839",
    "end": "704600"
  },
  {
    "text": "region so um consider instances that are deployed in multiple availability zones",
    "start": "704600",
    "end": "709800"
  },
  {
    "text": "to be um not in the same fault domain so that if one does go down one a does go down your other instances won't be",
    "start": "709800",
    "end": "715720"
  },
  {
    "text": "affected so in this case we're choosing two availability zones you can choose more than one there's generally uh two",
    "start": "715720",
    "end": "721560"
  },
  {
    "text": "to three uh in most regions from here we deploy our subnets",
    "start": "721560",
    "end": "727000"
  },
  {
    "text": "so I'm actually deploying a few different types of instances I'm deploying a VPN instance in this case",
    "start": "727000",
    "end": "732040"
  },
  {
    "text": "and I'm deploying a worker node subnet so I'm deploying a a watcher or a witness or a worker no which is going to be doing a bit of processing for me and",
    "start": "732040",
    "end": "738600"
  },
  {
    "text": "I'll talk about how that works uh in just a moment um but ultimately I'd like to have that as a service and I'll talk",
    "start": "738600",
    "end": "745199"
  },
  {
    "text": "about that too okay now we've got our VPN instance sub there from there we've got an igw",
    "start": "745199",
    "end": "752760"
  },
  {
    "text": "now don't be deceived here that I've actually got two igws we only have one so with a VPC you can attach an igw and",
    "start": "752760",
    "end": "759240"
  },
  {
    "text": "a vgw the only reason why I have two up here is just to show the the flow of",
    "start": "759240",
    "end": "764800"
  },
  {
    "text": "traffic if I if I had one the traffic would go in and kind of come out again and that's really what's happening but",
    "start": "764800",
    "end": "770279"
  },
  {
    "text": "just for ease of demonstration here I've got two igws okay then we have Amazon Route 53",
    "start": "770279",
    "end": "777360"
  },
  {
    "text": "so this is important to load balance across the VPN instances so what's basically going to happen is a user will",
    "start": "777360",
    "end": "783720"
  },
  {
    "text": "um try and hit a c name to uh VPN do um I think unicorn rentals.com something as",
    "start": "783720",
    "end": "790079"
  },
  {
    "text": "a as a as our company um so VPN unicorn rentals.com and that will be resolved to",
    "start": "790079",
    "end": "795440"
  },
  {
    "text": "a VPN instance so we can use Route 53 to load balce across the VPN instances we deploy so we're using Route 53 for DNS",
    "start": "795440",
    "end": "802639"
  },
  {
    "text": "load bouncing now DNS load balancing is probably not the best when you've got a web server or a lot of content traffic",
    "start": "802639",
    "end": "808760"
  },
  {
    "text": "like this but for this case it's actually perfect because the VPN user resolves the C name to an IP address and",
    "start": "808760",
    "end": "815240"
  },
  {
    "text": "we can just return a different IP of a different uh VPN instance as we go along and it actually works quite",
    "start": "815240",
    "end": "821160"
  },
  {
    "text": "well Okay so we've got our worker nodes deployed within our worker node subnets and I'll talk about those and what they",
    "start": "821160",
    "end": "826839"
  },
  {
    "text": "do in a second then we've got our VPN instances deployed in our VPN instance subnet now you'll notice I've actually",
    "start": "826839",
    "end": "834199"
  },
  {
    "text": "got some Downstream vpns now we do need to build some Downstream vpns in this case whether we're connecting to another",
    "start": "834199",
    "end": "840600"
  },
  {
    "text": "VPC or our data center could be another VPC um or if we're connecting to your on premise the reason being we don't",
    "start": "840600",
    "end": "847320"
  },
  {
    "text": "actually allow transitive traffic through a VPC today it's not something that's allowed um uh within the Amazon",
    "start": "847320",
    "end": "853240"
  },
  {
    "text": "infrastructure so what we're basically doing here is building a VPN to a VPN instance and then using the VPN down the",
    "start": "853240",
    "end": "859800"
  },
  {
    "text": "downstream VPN tunnel to either our on premise data center routers or another VPC in this case in the diagram we're",
    "start": "859800",
    "end": "866160"
  },
  {
    "text": "using our on premise data center routers now we're actually using on the downstream VPN um in the actual solution",
    "start": "866160",
    "end": "871920"
  },
  {
    "text": "itself we're using IPC and we're also using bgp for load balancing so our VPN instances had bgp capability so if one",
    "start": "871920",
    "end": "879759"
  },
  {
    "text": "goes down um the um routers within the data center can actually load balance across those if need",
    "start": "879759",
    "end": "886759"
  },
  {
    "text": "be all right so we're putting our VPN instances in an autoscaling group so that's quite important we want them to",
    "start": "886759",
    "end": "892600"
  },
  {
    "text": "scale out and scale in so in this case I've got a minimum instances set to two so at a minimum we've got two VPN",
    "start": "892600",
    "end": "898360"
  },
  {
    "text": "instances that are taking traffic and uh these can scale as we need",
    "start": "898360",
    "end": "904040"
  },
  {
    "text": "to so we can deploy multiple VPN instances um with the Autos scaling group and provision the downstream vpns",
    "start": "904040",
    "end": "911240"
  },
  {
    "text": "as well all righty so um for the load",
    "start": "911240",
    "end": "916440"
  },
  {
    "text": "balancing um DNS load balancing basically a user will come in and hit Route 53 who's the authority of DNS for",
    "start": "916440",
    "end": "922079"
  },
  {
    "text": "our um vn. unicorn rentals.com the response will be one of the VPN instances",
    "start": "922079",
    "end": "929199"
  },
  {
    "text": "and then the uh VPN user will connect to the VPN instance using the VPN client um",
    "start": "929199",
    "end": "934519"
  },
  {
    "text": "so you can use uh various different clients in this case we're using an Enterprise solution with an Enterprise based",
    "start": "934519",
    "end": "940880"
  },
  {
    "text": "client so as our users connect they get connected to different VPN instances so",
    "start": "940880",
    "end": "946120"
  },
  {
    "text": "we're basically load balancing and spreading the load across the instances themselves now one important point that",
    "start": "946120",
    "end": "954040"
  },
  {
    "text": "we needed in this solution was two-way Communications so our users themselves",
    "start": "954040",
    "end": "959279"
  },
  {
    "text": "actually had soft IP phones which they run on their on their desktop and they needed inbound calling so we needed a",
    "start": "959279",
    "end": "965399"
  },
  {
    "text": "way to identify each user over the VPN session um uniquely so what we were",
    "start": "965399",
    "end": "970680"
  },
  {
    "text": "actually doing is matching the instance IDs and actually we were matching the IP address of the um the worker node to a",
    "start": "970680",
    "end": "976880"
  },
  {
    "text": "sl20 subnet now you'll notice our Cedar address range is actually 10 000016 we've also got a",
    "start": "976880",
    "end": "984680"
  },
  {
    "text": "100640 z20 for example allocated to each VPN instance so what happens is the VPN",
    "start": "984680",
    "end": "991519"
  },
  {
    "text": "instance when a user connects to it will take an IP address out of the sl20 range",
    "start": "991519",
    "end": "996959"
  },
  {
    "text": "which is outside of the VPC range and allocate that sl32 in that case to that",
    "start": "996959",
    "end": "1002079"
  },
  {
    "text": "user so as um let's say someone picks up the phone in the head head office and",
    "start": "1002079",
    "end": "1007199"
  },
  {
    "text": "wants to call someone who's vpnn in there's a unique IP address that you can have two-way Communications with so",
    "start": "1007199",
    "end": "1012680"
  },
  {
    "text": "we're doing a static onetoone net to each one of these /32s on the VPN instances themselves and we were",
    "start": "1012680",
    "end": "1019240"
  },
  {
    "text": "actually tracking that database or um we were just using a text file in this case and I think Joe does some pretty awesome",
    "start": "1019240",
    "end": "1024839"
  },
  {
    "text": "stuff on on his using some using one of our database Solutions okay so autoscaling",
    "start": "1024839",
    "end": "1031640"
  },
  {
    "start": "1030000",
    "end": "1030000"
  },
  {
    "text": "integration what does it actually look like so um when you think about the work node what's it actually doing to integrate these VPN instances into um",
    "start": "1031640",
    "end": "1039199"
  },
  {
    "text": "autoscaling so we have our worker node and we have a VPN instance we're actually polling the VPN instance the",
    "start": "1039199",
    "end": "1045240"
  },
  {
    "text": "VPN instance in this case when it was an Enterprise based solution we're polling the VPN instance using SNMP polling",
    "start": "1045240",
    "end": "1051360"
  },
  {
    "text": "we're taking those SNMP SN stats and then pushing them to Amazon cloudwatch",
    "start": "1051360",
    "end": "1056440"
  },
  {
    "text": "okay so you can have custom metrics in Amazon cloudwatch cloudwatch then has the ability to trigger alarms as we",
    "start": "1056440",
    "end": "1064080"
  },
  {
    "text": "reach our capacity shortfalls so we know what what the limits are and we set them in in cloudwatch and we trigger an alarm",
    "start": "1064080",
    "end": "1071440"
  },
  {
    "text": "which triggers an autoscaling event and autoscaling then spins up multiple instances based upon our policy",
    "start": "1071440",
    "end": "1079000"
  },
  {
    "text": "now what happens then is our autoscaling group is referencing an Ami the Ami is uh something from the marketplace or",
    "start": "1079000",
    "end": "1085360"
  },
  {
    "text": "something we've built um which is preconfigured but there needs to be some static or dynamic configuration the so",
    "start": "1085360",
    "end": "1091280"
  },
  {
    "text": "far this is only static configuration on the VPN so as the VPN instance comes up we need to dynamically configure it",
    "start": "1091280",
    "end": "1098200"
  },
  {
    "text": "somehow so as we're launching more instances we need something to get notified that we have more instances and",
    "start": "1098200",
    "end": "1104159"
  },
  {
    "text": "then push a configuration to these okay so for the configuration of",
    "start": "1104159",
    "end": "1109200"
  },
  {
    "start": "1107000",
    "end": "1107000"
  },
  {
    "text": "the VPN instances we've had an autoscaling event the autoscaling group has launched some instances so in this",
    "start": "1109200",
    "end": "1115720"
  },
  {
    "text": "case we've launched another VPN instance using an instance launching",
    "start": "1115720",
    "end": "1120919"
  },
  {
    "text": "hook or a life cycle hook we push a notification to sqs or Amazon simple Q",
    "start": "1120919",
    "end": "1127120"
  },
  {
    "text": "service what we then have is the worker node polling the simple Q service on on",
    "start": "1127120",
    "end": "1132400"
  },
  {
    "text": "a um every 30 seconds or something like that looking for new instances so as a",
    "start": "1132400",
    "end": "1137440"
  },
  {
    "text": "new instance comes up the ID of the new instance and the IP address gets pushed to uh the simple Q service via the uh",
    "start": "1137440",
    "end": "1144679"
  },
  {
    "text": "launch hook notification once the worker node has the uh new instance ID it then",
    "start": "1144679",
    "end": "1150280"
  },
  {
    "text": "builds a config that it needs to so once it builds the config it'll actually push that out to the VPN instance itself",
    "start": "1150280",
    "end": "1156840"
  },
  {
    "text": "using the API on the instance after the instance has been configured and is ready to go with its",
    "start": "1156840",
    "end": "1163039"
  },
  {
    "text": "um Dynamic configuration one of the pieces of the dynamic configuration was that sl20 address range we needed to",
    "start": "1163039",
    "end": "1168200"
  },
  {
    "text": "allocate to to each instance we then put the worker node in uh to oh sorry we then put the VPN",
    "start": "1168200",
    "end": "1174600"
  },
  {
    "text": "instance to work so we notify Route 53 that we have a new instance that's ready to now take VPN users so we've",
    "start": "1174600",
    "end": "1181400"
  },
  {
    "text": "effectively scaled out our infrastructure automatically okay so on the worker note",
    "start": "1181400",
    "end": "1187240"
  },
  {
    "start": "1185000",
    "end": "1185000"
  },
  {
    "text": "I've just got a sample configuration now in this case I'm building a VPN tunnel back to another vgw so in this sample",
    "start": "1187240",
    "end": "1194120"
  },
  {
    "text": "the um I've got a VPC where the DAT the on-premise data center was actually another VP PC with a vgw attached so you",
    "start": "1194120",
    "end": "1200799"
  },
  {
    "text": "can see here we start with a um we've got a a call to uh grab the public IP or",
    "start": "1200799",
    "end": "1207200"
  },
  {
    "text": "or with the instance ID so we're getting details of the instance itself then we're going to create a new cgw in this",
    "start": "1207200",
    "end": "1212840"
  },
  {
    "text": "case so the worker node's got the AWS CLI and it can go through and create a new cgw which will actually um be the",
    "start": "1212840",
    "end": "1219360"
  },
  {
    "text": "VPN instance because in this case the cgw is the VPN instance and we're connecting via an Amazon VPN connection",
    "start": "1219360",
    "end": "1225360"
  },
  {
    "text": "to a vgw and we're also creating a VPN connection and then the last thing that you see here is just doing a HTTP post",
    "start": "1225360",
    "end": "1232200"
  },
  {
    "text": "which is taking the config that we've actually built in the background here onto the to the Enterprise um Appliance",
    "start": "1232200",
    "end": "1238679"
  },
  {
    "text": "itself now if we have a look at that config um and we were actually using a foret forgate for our Enterprise",
    "start": "1238679",
    "end": "1244559"
  },
  {
    "start": "1240000",
    "end": "1240000"
  },
  {
    "text": "solution so this is actually a a real foret forgate configuration and you'll see that we have various different um",
    "start": "1244559",
    "end": "1250960"
  },
  {
    "text": "variables inside the configuration itself so the worker node knows to poll AWS and gather the information that we",
    "start": "1250960",
    "end": "1257640"
  },
  {
    "text": "need and then replace each of these items with the various pieces of information it needs to build out the",
    "start": "1257640",
    "end": "1262840"
  },
  {
    "text": "configuration on the VPN instance so o overall I think the co the line the configuration for the 4ate was about",
    "start": "1262840",
    "end": "1268919"
  },
  {
    "text": "3,000 lines um and we had probably about 20 different variables that we just needed to populate in",
    "start": "1268919",
    "end": "1276120"
  },
  {
    "text": "that all righty so um overall we've basically got a solution",
    "start": "1276440",
    "end": "1282400"
  },
  {
    "text": "where the VPN instances can scale out um automatically based upon the users and the bandwidth so where where ping the",
    "start": "1282400",
    "end": "1289440"
  },
  {
    "text": "VPN instances for their bandwidth and their users um utilization and then",
    "start": "1289440",
    "end": "1294600"
  },
  {
    "text": "triggering an autoscaling event from there once auto scaling is triggered we um P push something to sqs Via a life",
    "start": "1294600",
    "end": "1301960"
  },
  {
    "text": "cycle hook or or an auto scaling hook and then our worker Noe is actually um pulling that sqs and building a config",
    "start": "1301960",
    "end": "1308480"
  },
  {
    "text": "and then building the infrastructure needed to support the VPN instances now one last thing I want I want one last",
    "start": "1308480",
    "end": "1315159"
  },
  {
    "text": "point I want to make here well users can grow uh with no structure shortfalls or capacity but one last thing I wanted to",
    "start": "1315159",
    "end": "1321480"
  },
  {
    "text": "make here a point I wanted to make we had worker nodes inside our VPC this is actually their physical or physical",
    "start": "1321480",
    "end": "1328640"
  },
  {
    "text": "infrastructure or um they're actually ec2 instances that is something you you can touch and almost and you can",
    "start": "1328640",
    "end": "1334600"
  },
  {
    "text": "configure right we wanted to replace those with something like a codified as a service now we actually have Lambda",
    "start": "1334600",
    "end": "1340320"
  },
  {
    "text": "AWS Lambda which can run code as a service we wanted to replace the worker nodes with Lambda in this case so we",
    "start": "1340320",
    "end": "1346480"
  },
  {
    "text": "could completely get rid of the worker nodes all together unfortunately at this point in time Lambda only functions outside of a VPC um so with Chron on",
    "start": "1346480",
    "end": "1354919"
  },
  {
    "text": "Lambda and the ability to function within a VPC this architecture would actually get a lot simpler so we would",
    "start": "1354919",
    "end": "1360559"
  },
  {
    "text": "just have a service that's running code pulling sqs doing autoscaling and everything would be just uh there and",
    "start": "1360559",
    "end": "1366640"
  },
  {
    "text": "running without having to manage these ec2 instances as worker nodes but in this case the worker nodes actually work",
    "start": "1366640",
    "end": "1371919"
  },
  {
    "text": "quite well and that's a quite a common solution we see on AWS Aon I think",
    "start": "1371919",
    "end": "1380440"
  },
  {
    "text": "was possibly um I I think um what we actually need lamb to do is run inside",
    "start": "1381960",
    "end": "1387760"
  },
  {
    "text": "the VPC not just access the VPC um so you can access the VPC and that that would be fine but in our case we",
    "start": "1387760",
    "end": "1394200"
  },
  {
    "text": "actually wanted Lambda calls inside the VPC so we can have that security perimeter still around the whole VPC",
    "start": "1394200",
    "end": "1399279"
  },
  {
    "text": "itself um so I think that's something we're we're we're still looking for but um pretty awesome anyway okay so",
    "start": "1399279",
    "end": "1407080"
  },
  {
    "text": "from there I mean I was using the the foret fortigates is an Enterprise based solution um they they were actually",
    "start": "1407080",
    "end": "1412400"
  },
  {
    "text": "quite quite good they I mean the support guys I've got two of the fortigate guys or foret guys here in the front of the room they fantastic in in uh configuring",
    "start": "1412400",
    "end": "1419400"
  },
  {
    "text": "and deploying this this solution um and the support was excellent but um what if you wanted to kind of roll your own and",
    "start": "1419400",
    "end": "1426080"
  },
  {
    "text": "just kind of roll with things like that Joe yeah talk about that now thank you thank a thanks um so what if your budget",
    "start": "1426080",
    "end": "1433880"
  },
  {
    "text": "constraints don't allow to you uh the use of um other products uh or if you're",
    "start": "1433880",
    "end": "1439520"
  },
  {
    "text": "simply want to put together a proof of concept how can we go about doing this with uh some of the open source tools",
    "start": "1439520",
    "end": "1445279"
  },
  {
    "text": "that we have that uh our disposal um you know throughout this segment we're going",
    "start": "1445279",
    "end": "1450480"
  },
  {
    "text": "to be covering some key uh key areas uh we'll start off with the design overview uh go through a little bit of uh how",
    "start": "1450480",
    "end": "1456760"
  },
  {
    "text": "we're going to be load balancing the setup of a dedicated routing instance uh the VPN config some details about",
    "start": "1456760",
    "end": "1463720"
  },
  {
    "text": "cloudwatch uh but I wanted to you know as Matt mentioned initially this is going to be a slightly different",
    "start": "1463720",
    "end": "1469360"
  },
  {
    "text": "configuration uh to make it a little bit more exciting I didn't want to just rehash the same configuration using a",
    "start": "1469360",
    "end": "1475720"
  },
  {
    "text": "different Tool uh so we're going to be doing things a little bit differently um but as a recap uh here's the um here's",
    "start": "1475720",
    "end": "1483159"
  },
  {
    "text": "the infrastructure uh that Matt first presented uh you know we've got our autoscaling infrastructure that scales",
    "start": "1483159",
    "end": "1490039"
  },
  {
    "text": "up in order to meet demand uh and uh just like you mentioned uh there's a",
    "start": "1490039",
    "end": "1495360"
  },
  {
    "text": "multitude of options in order to connect this VPC infrastructure back to your corporate environment uh and so we'll be",
    "start": "1495360",
    "end": "1502320"
  },
  {
    "text": "looking at a few of those different options as well uh in our example that",
    "start": "1502320",
    "end": "1507520"
  },
  {
    "start": "1506000",
    "end": "1506000"
  },
  {
    "text": "we're going to be using here uh we're looking at a global Workforce right so",
    "start": "1507520",
    "end": "1512720"
  },
  {
    "text": "if you have an organization that's maybe based out of New York but has staff that",
    "start": "1512720",
    "end": "1517960"
  },
  {
    "text": "are based all around the world then you want a VPN solution that meets the needs of the entire uh the entire staff so you",
    "start": "1517960",
    "end": "1525919"
  },
  {
    "text": "know here we have the map that lays out our regions along with the number of availability zones in each region and",
    "start": "1525919",
    "end": "1533000"
  },
  {
    "text": "we're going to use those as the end points for clients to be able to connect here's a here's an overview of",
    "start": "1533000",
    "end": "1540640"
  },
  {
    "text": "the final product uh that does scale with the uh with the needs of the uh end",
    "start": "1540640",
    "end": "1545760"
  },
  {
    "text": "users um this is the design overview for a single a implementation uh the end",
    "start": "1545760",
    "end": "1552799"
  },
  {
    "text": "goal of today's discussion is going to be multi-az multi VPC uh and multi-",
    "start": "1552799",
    "end": "1557840"
  },
  {
    "text": "region uh in order to be able to scale in order to be able to isolate uh where those",
    "start": "1557840",
    "end": "1563320"
  },
  {
    "text": "resource constraints are and also for high avilability so Joe um I think only really talked about a single VPC",
    "start": "1563320",
    "end": "1569559"
  },
  {
    "text": "deployment so you're deploying multiple vpcs then in every region uh so uh",
    "start": "1569559",
    "end": "1576000"
  },
  {
    "text": "standard is one VPC per region but depending on your business needs this",
    "start": "1576000",
    "end": "1581399"
  },
  {
    "text": "certainly can be duplicated into multi multiple vpcs per region okay",
    "start": "1581399",
    "end": "1586840"
  },
  {
    "text": "awesome and here here's uh here's the overview of what it's going to look like uh once we have those multiple vpcs once",
    "start": "1586840",
    "end": "1594200"
  },
  {
    "text": "we have those multi- regions uh it's uh you know just like uh Matt mentioned with cloud formation you can use a stack",
    "start": "1594200",
    "end": "1600720"
  },
  {
    "text": "a cloud formation stack to roll out these initial implementations and then utilize services like AWS autoscaling in",
    "start": "1600720",
    "end": "1608360"
  },
  {
    "text": "order to scale the solutions that have been rolled out uh kind of Step One is",
    "start": "1608360",
    "end": "1614399"
  },
  {
    "text": "uh we're going to reserve some IP address ranges um you know as part of the proof of concept we're going to be",
    "start": "1614399",
    "end": "1620120"
  },
  {
    "text": "working with static routing today uh but at the end I'll talk about some of the different options we could have had with",
    "start": "1620120",
    "end": "1625279"
  },
  {
    "text": "OPF and bgp uh but right now one of the one of the first cases we want to avoid",
    "start": "1625279",
    "end": "1631600"
  },
  {
    "text": "is subnet overlap right um you know I I I really hate having to do Source nting",
    "start": "1631600",
    "end": "1636640"
  },
  {
    "text": "when you get you know your your your client IP address overlaps with your corporate IP address uh and it makes",
    "start": "1636640",
    "end": "1642360"
  },
  {
    "text": "things difficult even if you're running sip traffic and you have you know eston for instance um it's still preferable to",
    "start": "1642360",
    "end": "1647799"
  },
  {
    "text": "be able to to do those direct IP connections so uh we're going to be using some of the terms from this",
    "start": "1647799",
    "end": "1652960"
  },
  {
    "text": "example um the VPN address pool that is a reserved sl16 broken into multiple 24s",
    "start": "1652960",
    "end": "1661840"
  },
  {
    "text": "um we're going to be isolating traffic between a private subnet a public subnet and a routing subnet so we want those",
    "start": "1661840",
    "end": "1667720"
  },
  {
    "text": "addresses uh reserved as well um the X denotes which region it's going to be",
    "start": "1667720",
    "end": "1673840"
  },
  {
    "text": "running in so for instance we'll assume the corporate network is 10.00 we'll assume Northern Virginia is 10.11",
    "start": "1673840",
    "end": "1681840"
  },
  {
    "text": "maybe Oregon is 10.12 and so the IP schema would look like um you know for",
    "start": "1681840",
    "end": "1686919"
  },
  {
    "text": "the private subnet for example in 10.11 Northern Virginia we have multiple",
    "start": "1686919",
    "end": "1692679"
  },
  {
    "text": "private subnets uh across different availability zones because we should have multi-az deployments and so those",
    "start": "1692679",
    "end": "1699840"
  },
  {
    "text": "three would be you know 10.11.12 do3 uh and this allows us to you know span across multiple AC's that",
    "start": "1699840",
    "end": "1707360"
  },
  {
    "text": "same uh IDE idea works for the public subnets as well as for the routing subnets uh and once again just to make",
    "start": "1707360",
    "end": "1713720"
  },
  {
    "text": "sure that we can simplify those routing destinations and also make sure that we know you know where the traffic is",
    "start": "1713720",
    "end": "1720279"
  },
  {
    "text": "destined to and we're not going to reuse these IPS in the so I need unique IPS in",
    "start": "1720279",
    "end": "1726039"
  },
  {
    "text": "every VPC worldwide uh it yes so you do a uh you",
    "start": "1726039",
    "end": "1731600"
  },
  {
    "text": "know for your private subnet for example it'd be a unique uh sl16 uh po uh per uh VPC within each",
    "start": "1731600",
    "end": "1739799"
  },
  {
    "text": "region uh with the VPN pool you would be assigned multiple SL 24s one per VPN",
    "start": "1739799",
    "end": "1746840"
  },
  {
    "text": "server that you're firing up okay and and I'm asking these questions because um Joe did a little bit more advanced",
    "start": "1746840",
    "end": "1752399"
  },
  {
    "text": "work than me so I want to try and steal some of his ideas and implement it in my solution as",
    "start": "1752399",
    "end": "1758120"
  },
  {
    "text": "well uh here's uh and here are the uh the IP reservations as used in one",
    "start": "1758120",
    "end": "1764320"
  },
  {
    "start": "1760000",
    "end": "1760000"
  },
  {
    "text": "example um you know you can use Dynamic assignment of ipss with in each subnet",
    "start": "1764320",
    "end": "1769640"
  },
  {
    "text": "uh I find it easier to just statically uh assign things for like the routing instances so all of my routing instances",
    "start": "1769640",
    "end": "1776399"
  },
  {
    "text": "are you know 101012 111411 7.11 so that when I ping",
    "start": "1776399",
    "end": "1782360"
  },
  {
    "text": "across the sub ping ping across multiple uh regions I don't have to look up you know what the IP addresses are or what",
    "start": "1782360",
    "end": "1789159"
  },
  {
    "text": "the uh you know public DNS and private DNS entry should be uh so yep here we",
    "start": "1789159",
    "end": "1794360"
  },
  {
    "text": "have uh you know the exact examples um in the middle you'll see the outing instance it's between those three",
    "start": "1794360",
    "end": "1800360"
  },
  {
    "text": "subnets to denote that it has an eni and elastic network interface in each subnet",
    "start": "1800360",
    "end": "1807200"
  },
  {
    "text": "same thing for the uh VPN instances they uh they span two subnets",
    "start": "1807200",
    "end": "1814840"
  },
  {
    "text": "which would be the private and the public uh subnets and that is to denote that they have one uh interface in each",
    "start": "1814840",
    "end": "1821519"
  },
  {
    "text": "uh in each subnet um so how do we decide uh what",
    "start": "1821519",
    "end": "1828080"
  },
  {
    "text": "subnet gets assigned to which VPN server uh as Matt mentioned uh there's a lot of",
    "start": "1828080",
    "end": "1833159"
  },
  {
    "text": "different ways that you can do this uh they were using flat files in the previous example uh in this example",
    "start": "1833159",
    "end": "1838279"
  },
  {
    "text": "we're going to be using Dynamo DB uh and this is a uh this is a a screenshot of an actual um implementation that we're",
    "start": "1838279",
    "end": "1845519"
  },
  {
    "text": "running um so the uh the entries that you see here are unique network ID and",
    "start": "1845519",
    "end": "1852000"
  },
  {
    "text": "what uh subnet is assigned per VPN server now if you have two if you a one",
    "start": "1852000",
    "end": "1858480"
  },
  {
    "text": "subnet assigned to two unique servers that's going to cause some issues because it's not you're not going to be",
    "start": "1858480",
    "end": "1863880"
  },
  {
    "text": "it's not going to be as clearcut what direction we should route in in order to get back to the client traffic right so",
    "start": "1863880",
    "end": "1870159"
  },
  {
    "text": "in uh in this example you get an instance ID as well as what region that",
    "start": "1870159",
    "end": "1875240"
  },
  {
    "text": "instance exists in h assigned to that subnet um just so everybody's aware you",
    "start": "1875240",
    "end": "1880919"
  },
  {
    "text": "can have the same instance ID in multiple regions without that uh without",
    "start": "1880919",
    "end": "1886039"
  },
  {
    "text": "that instance being associated in any anyway so this is why you know to get the true uniqueness it is instance ID",
    "start": "1886039",
    "end": "1893039"
  },
  {
    "text": "and region so I think um one of the issues that we had with the worker nodes we had flat files on those and um if we",
    "start": "1893039",
    "end": "1900000"
  },
  {
    "text": "had a worker node that went down um we would have to replicate that flat file somehow to the secondary worker node so",
    "start": "1900000",
    "end": "1906000"
  },
  {
    "text": "we'd have to keep track of that it was a it was a static thing so I think maybe if I use Dynamo DB instead as an IP",
    "start": "1906000",
    "end": "1911760"
  },
  {
    "text": "allocation table that that would be pretty awesome solution kind and and the beauty is that it's already designed for",
    "start": "1911760",
    "end": "1917519"
  },
  {
    "text": "high a ability you know you don't have to be a DBA this isn't something that you know you need to be able to maintain",
    "start": "1917519",
    "end": "1924080"
  },
  {
    "text": "you know this is a regional construct so it will fail over automatically which you know is is something that you just",
    "start": "1924080",
    "end": "1929880"
  },
  {
    "text": "don't want to have to build I mean we could have used um alternate open source database engines but that just increases",
    "start": "1929880",
    "end": "1936000"
  },
  {
    "text": "our administrative overhead so if you think about it um I was building an IP allocation system with a text file um I",
    "start": "1936000",
    "end": "1942880"
  },
  {
    "text": "could have built a queuing server with an ec2 instance but instead I use Simple Q server so probably a good idea to see",
    "start": "1942880",
    "end": "1948639"
  },
  {
    "text": "what other services I could use in place of things where I'm doing manual work in this case Dynamo DB for IP allocation",
    "start": "1948639",
    "end": "1955000"
  },
  {
    "text": "yeah and you know just as easily we could have gone with RDS with the multi-az deployment okay that would have been cool too yeah yeah so I mean",
    "start": "1955000",
    "end": "1961399"
  },
  {
    "text": "there's a there's a lot of um there's a lot of options on which way to move forward and it's not just you know with",
    "start": "1961399",
    "end": "1967399"
  },
  {
    "text": "the AWS Services um and there are multiple ways that you can uh link the AWS Services together you know using",
    "start": "1967399",
    "end": "1974320"
  },
  {
    "text": "Kinesis as opposed to sqs type of thing or um you know we could use RDS as opposed to Dynamo uh but just you just",
    "start": "1974320",
    "end": "1981480"
  },
  {
    "text": "as we can uh have different options there within the routing instance we have different options too uh we're",
    "start": "1981480",
    "end": "1986799"
  },
  {
    "text": "using open VPN for the point-to-point connections it could easily just as easily have been open",
    "start": "1986799",
    "end": "1992880"
  },
  {
    "text": "Swan so uh you know Ma got into um using DNS Route 53 for the load balancing of",
    "start": "1993000",
    "end": "1999200"
  },
  {
    "text": "the VPN instances we're going to use the uh same method here uh using Route 53 uh",
    "start": "1999200",
    "end": "2005039"
  },
  {
    "text": "we're going to do it at two different tiers first is going to be a Geo uh",
    "start": "2005039",
    "end": "2010159"
  },
  {
    "text": "resolution the second is going to be a latency based resolution so let's say you've got your staff sitting in",
    "start": "2010159",
    "end": "2016320"
  },
  {
    "text": "Frankfurt right now and they are buried under 10 ft of snow um you know you only want to have to scale the the the",
    "start": "2016320",
    "end": "2024200"
  },
  {
    "text": "location where uh where that traffic is destined to so you know you have",
    "start": "2024200",
    "end": "2029600"
  },
  {
    "text": "somebody so here's a great example the UK right uh it's a little bit better uh so the UK sits between um you know the",
    "start": "2029600",
    "end": "2036000"
  },
  {
    "text": "Ireland region and the us EU central region um so with something like geob",
    "start": "2036000",
    "end": "2041799"
  },
  {
    "text": "based routing you can say well everybody in England should end up in the Irish",
    "start": "2041799",
    "end": "2047240"
  },
  {
    "text": "data center so they'll resolve something like us I'm sorry EU West one. VPN do",
    "start": "2047240",
    "end": "2054878"
  },
  {
    "text": "unicorn. rentals uh and then once they have that name resolved it'll then further go down into which is the lowest",
    "start": "2054879",
    "end": "2062960"
  },
  {
    "text": "latency connection that they connect to so if you have 10 instances of the VPN running in EU West one they'll be",
    "start": "2062960",
    "end": "2070079"
  },
  {
    "text": "connected to the one that is the lowest latency so does the UK get snow uh I've",
    "start": "2070079",
    "end": "2076000"
  },
  {
    "text": "never been I I I actually don't know I I can tell you Seattle doesn't seem to occasionally right right uh and this is",
    "start": "2076000",
    "end": "2083720"
  },
  {
    "text": "what it kind of looks like for the uh breakdown of uh that latency based routing so when you get to the second",
    "start": "2083720",
    "end": "2089919"
  },
  {
    "text": "tier you've already been assigned uh a region that you're going to be connecting into uh this just decides",
    "start": "2089919",
    "end": "2096240"
  },
  {
    "text": "what particular instance you're going to be utilizing for that VPN connectivity and here we have the",
    "start": "2096240",
    "end": "2103079"
  },
  {
    "text": "overall workflow that you'll be using so you know VPN do uh region name uh do you",
    "start": "2103079",
    "end": "2109560"
  },
  {
    "text": "know domain name uh and then go down to the latency figure and you know there's a lot of options with this you know this",
    "start": "2109560",
    "end": "2115839"
  },
  {
    "text": "is just one example of how we can do it we could use um we could use different weights uh for maybe machines that can",
    "start": "2115839",
    "end": "2121760"
  },
  {
    "text": "handle more traffic uh as opposed to machines that have less bandwidth um you know we can use uh uh you know latency",
    "start": "2121760",
    "end": "2129000"
  },
  {
    "text": "base routing without goo or you know uh just standard round robin uh type of",
    "start": "2129000",
    "end": "2135400"
  },
  {
    "text": "load balancing uh so I mean it's a lot of it is up to uh personal preference we'll be talking about a little bit of",
    "start": "2135400",
    "end": "2141520"
  },
  {
    "text": "those preferences in a bit uh but uh in in in scripting out",
    "start": "2141520",
    "end": "2147680"
  },
  {
    "text": "this actual process uh here's an example that we're using uh and this is an example that we have running in uh one",
    "start": "2147680",
    "end": "2153960"
  },
  {
    "text": "of the VPN instances within the proofer concept uh so here we see we're adding a",
    "start": "2153960",
    "end": "2159200"
  },
  {
    "text": "Route 53 resource record uh as well as uh we're creating a health check so um",
    "start": "2159200",
    "end": "2165599"
  },
  {
    "text": "you know just I don't want to go too deep on it but with the health check uh you know usually when you create a health check you're looking at uh you",
    "start": "2165599",
    "end": "2172680"
  },
  {
    "text": "know is that TCP Port listening and that's the extent of your health check uh but what we wanted to do is really",
    "start": "2172680",
    "end": "2179200"
  },
  {
    "text": "make sure that this service is running and is running correctly uh so you know",
    "start": "2179200",
    "end": "2184240"
  },
  {
    "text": "our health check actually has a call an hdp call to a status uh page of the",
    "start": "2184240",
    "end": "2190880"
  },
  {
    "text": "actual instance that's running and that double checks things like are the routes set up properly are the subnets attached",
    "start": "2190880",
    "end": "2197880"
  },
  {
    "text": "properly are the DNS entries in there properly and as long as it passes it'll",
    "start": "2197880",
    "end": "2203040"
  },
  {
    "text": "pass the health check and then it'll you know be a part of those uh that latency based resolution and if it doesn't then",
    "start": "2203040",
    "end": "2209680"
  },
  {
    "text": "it won't be added to the cluster and it won't uh and it won't uh mess up you know all these VPN connections",
    "start": "2209680",
    "end": "2218160"
  },
  {
    "text": "you know if you have 10 VPN servers in one region and you have one",
    "start": "2218240",
    "end": "2224480"
  },
  {
    "text": "tenth of your customers or your your employees reporting an error that could be kind of tough to track down so really",
    "start": "2224480",
    "end": "2230880"
  },
  {
    "text": "we want to get them out of those machines out of the rotation with something as simple as an automated health",
    "start": "2230880",
    "end": "2237839"
  },
  {
    "text": "check so uh one of the differences with this configuration is the use of a",
    "start": "2237839",
    "end": "2243839"
  },
  {
    "text": "routing instance um you know there's uh the there's multiple ways that we can connect the routing instance back to",
    "start": "2243839",
    "end": "2250200"
  },
  {
    "text": "corporate there's multiple ways that we can connect the routing instance to another routing instance to get that",
    "start": "2250200",
    "end": "2256040"
  },
  {
    "text": "cross region VPC peering um and uh you know there's a lot of different things that we could put on that routing",
    "start": "2256040",
    "end": "2262480"
  },
  {
    "text": "instance to make it a little bit more useful and a little bit more flexible so Joe I like the idea of the routing",
    "start": "2262480",
    "end": "2268240"
  },
  {
    "start": "2267000",
    "end": "2267000"
  },
  {
    "text": "instance I mean it it seems logical that you have a device that you can send traffic through and put some policy in",
    "start": "2268240",
    "end": "2273359"
  },
  {
    "text": "place but um what are you actually using like a Cisco CSR or is it like a VR or Vos or yeah great question right I mean",
    "start": "2273359",
    "end": "2280960"
  },
  {
    "text": "it's uh it's kind of like what's your personal preference um you know I'm pretty sure everybody is familiar with",
    "start": "2280960",
    "end": "2286079"
  },
  {
    "text": "this thirdparty ecosystem that we have and how many you know vendor supplied products uh we could put in place um in",
    "start": "2286079",
    "end": "2293520"
  },
  {
    "text": "the proof of concept uh since we're sticking with open source uh we're just going to use a standard Linux box uh and",
    "start": "2293520",
    "end": "2299880"
  },
  {
    "text": "that's more than capable to R do that with the standard Linux box Amazon Ami yeah absolutely even uh especially with",
    "start": "2299880",
    "end": "2306440"
  },
  {
    "text": "the Amazon Linux Mi where it has uh the network pass through the sov built in",
    "start": "2306440",
    "end": "2312480"
  },
  {
    "text": "and turned on by default you know you get this box that's capable of routing with just a few simple changes like IP",
    "start": "2312480",
    "end": "2319040"
  },
  {
    "text": "forwarding so Sr guys hands up who uses instances with srov or knows what",
    "start": "2319040",
    "end": "2324480"
  },
  {
    "text": "enhanced networking is couple of guys um I think that's a that's a big thing with our customers that um we do get",
    "start": "2324480",
    "end": "2331040"
  },
  {
    "text": "questions about how much throughput an instance can actually get and in a lot of cases um if a customer is having",
    "start": "2331040",
    "end": "2336400"
  },
  {
    "text": "issues they're not using one one of our enhanced networking instances so in your case using sov uh we what pushing some",
    "start": "2336400",
    "end": "2342760"
  },
  {
    "text": "of the TCP stack onto our uh Hardware or into the PCI controller which is giving you more throughput as well which is",
    "start": "2342760",
    "end": "2348720"
  },
  {
    "text": "absolutely I mean yeah and and you know you want to be able to take advantage of that you know um if you look through the",
    "start": "2348720",
    "end": "2354760"
  },
  {
    "text": "instance type some will have uh they'll have different levels of networking capabilities especially if you have a 10",
    "start": "2354760",
    "end": "2360520"
  },
  {
    "text": "gig uh instance that you're running you want to make sure that you've enabled all of the features in order to take",
    "start": "2360520",
    "end": "2366160"
  },
  {
    "text": "full advantage of that NK that sounds like a pretty beefy routing instance yes yes so within our example we did not go",
    "start": "2366160",
    "end": "2373319"
  },
  {
    "text": "with a 10 gig uh but uh but it's still quite uh quite quick um and so uh here's here's a uh",
    "start": "2373319",
    "end": "2381440"
  },
  {
    "start": "2378000",
    "end": "2378000"
  },
  {
    "text": "example configuration that we use for that point-to-point connectivity between two routing instances uh like I said you",
    "start": "2381440",
    "end": "2388200"
  },
  {
    "text": "know there's a there's a bunch of different ways to do this we could have used open Swan with a connection to vgw",
    "start": "2388200",
    "end": "2393359"
  },
  {
    "text": "we could have done open Swan to open Swan we could in this example we're using open V VN to open VPN uh if the",
    "start": "2393359",
    "end": "2399599"
  },
  {
    "text": "two reg if the two vpcs are in the same region we could use cross VP uh uh cross",
    "start": "2399599",
    "end": "2404839"
  },
  {
    "text": "VPC peering um so you know there's a lot of different ways that we can do this and it's kind of like you know what fits",
    "start": "2404839",
    "end": "2411520"
  },
  {
    "text": "your personal preference here um this is an example of uh uh the commands that we",
    "start": "2411520",
    "end": "2417079"
  },
  {
    "text": "run in order to set up that pointto point uh and this is also something that's uh you know that can be automated",
    "start": "2417079",
    "end": "2423280"
  },
  {
    "text": "with the cloud formation template when that's deployed um but but when we look at the path of the traffic that comes",
    "start": "2423280",
    "end": "2431280"
  },
  {
    "text": "through these routing instances what we uh what we see is an opportunity right",
    "start": "2431280",
    "end": "2436480"
  },
  {
    "text": "um you know just like I you know I believe that I mentioned um you know you can deploy a VPN as a split tunnel but",
    "start": "2436480",
    "end": "2443920"
  },
  {
    "text": "uh you know an anecdotal experience uh more often I've had requests to just funnel all traffic from uh the VPN",
    "start": "2443920",
    "end": "2450839"
  },
  {
    "text": "clients through corporate and usually that's to enable something like web filtering and web filtering has some",
    "start": "2450839",
    "end": "2457359"
  },
  {
    "text": "overhead um you know maybe it's uh something simple like a caching server so you want to deploy squid uh as a",
    "start": "2457359",
    "end": "2463400"
  },
  {
    "text": "proxy as a invisible proxy in the middle maybe you want to use uh network access controls right um You know open source",
    "start": "2463400",
    "end": "2470520"
  },
  {
    "text": "we could use packet fence uh you know maybe you just want to get an idea of what does my uh corporate traffic look",
    "start": "2470520",
    "end": "2476319"
  },
  {
    "text": "like running something like end toop to be able to graph out you know how much of this is HTP how much as this is like",
    "start": "2476319",
    "end": "2482560"
  },
  {
    "text": "mqtt uh and then uh you know you know basically just get an idea for what uh",
    "start": "2482560",
    "end": "2489319"
  },
  {
    "text": "you know what hazards are on the network as well so if you deploy maybe snort on one of these boxes this could be a",
    "start": "2489319",
    "end": "2496000"
  },
  {
    "text": "source for IDs traffic when you have all of the client traffic uh you know streaming through these route instances",
    "start": "2496000",
    "end": "2502839"
  },
  {
    "text": "you know there's a there's a real um real opportunity there to be able to find things maybe issues that you",
    "start": "2502839",
    "end": "2509880"
  },
  {
    "text": "ordinarily wouldn't be able to find if you know you did a split tunnel route um you know the Trojan traffic or even",
    "start": "2509880",
    "end": "2516920"
  },
  {
    "text": "something as simple as you know have they installed a toolbar uh you can discover that with uh with IDs",
    "start": "2516920",
    "end": "2525240"
  },
  {
    "text": "sensors uh oh yes so um what we're looking at is when we have these point-to-point routes we know that an",
    "start": "2534480",
    "end": "2542160"
  },
  {
    "text": "entire sl6 exists in this one VPC so we're",
    "start": "2542160",
    "end": "2547280"
  },
  {
    "text": "saying you know even if we're not using it just send all of that all of that sl16 over uh but we're only using some",
    "start": "2547280",
    "end": "2554680"
  },
  {
    "text": "chunks of it so you know but I mean you know it's you still have the capabilities to deploy additionally so",
    "start": "2554680",
    "end": "2560880"
  },
  {
    "text": "with a static routing environment which we're using for this proof of concept you know to make it a little bit easier",
    "start": "2560880",
    "end": "2566640"
  },
  {
    "text": "to just visualize we just say push you know all uh 10.11 traffic through that",
    "start": "2566640",
    "end": "2573319"
  },
  {
    "text": "one routing instance so that you know once it gets to that routing instance it'll figure out what subnet to pass it",
    "start": "2573319",
    "end": "2580319"
  },
  {
    "text": "to but we just know that everything that's 101 should definitely go to that",
    "start": "2580319",
    "end": "2586760"
  },
  {
    "text": "VPC so it just makes it easier for a static routing scenario uh we'll go",
    "start": "2586760",
    "end": "2592040"
  },
  {
    "text": "through some of the different examples that we could use if it was like OPF or bgp um but we're just looking at this as",
    "start": "2592040",
    "end": "2597520"
  },
  {
    "text": "like one example like I said you know there's so many different ways that you can put this together and uh and here's uh here's an",
    "start": "2597520",
    "end": "2605359"
  },
  {
    "text": "example of the routing table that we're going to be using utilizing uh in this example we have um some configuration",
    "start": "2605359",
    "end": "2611520"
  },
  {
    "text": "samples that uh you know you enter manually like the default route uh if you notice the 10.33 entry here that was",
    "start": "2611520",
    "end": "2619839"
  },
  {
    "text": "automatically created when a VPN instance came up as part of the boot",
    "start": "2619839",
    "end": "2625280"
  },
  {
    "text": "process it grabs you know a24 that it can use and then it just enters it into",
    "start": "2625280",
    "end": "2631200"
  },
  {
    "text": "the routing table pointing it to the eni of the instance",
    "start": "2631200",
    "end": "2638359"
  },
  {
    "text": "so we've talked about um you know some of the things that we could use with the uh with the VPN server I mean with the",
    "start": "2639359",
    "end": "2645200"
  },
  {
    "text": "routing instance uh but now to look at the individual VPN servers um you know",
    "start": "2645200",
    "end": "2650800"
  },
  {
    "text": "the the routing instance we we can take advantage of so many opportunities like I said um and since it's you know",
    "start": "2650800",
    "end": "2656880"
  },
  {
    "text": "geographically closest to the end users there's a lot of additional stuff you could do like let's say that you want to",
    "start": "2656880",
    "end": "2663200"
  },
  {
    "text": "put a DFS replication server over there have the documents that you know these that these employees are editing have",
    "start": "2663200",
    "end": "2669720"
  },
  {
    "text": "them be as close to the end as possible and then maybe that they're maybe they're editing these documents within",
    "start": "2669720",
    "end": "2675079"
  },
  {
    "text": "the region and it's replicated back via DFS over to uh back to the corporate network uh you know you can put uh uh",
    "start": "2675079",
    "end": "2681880"
  },
  {
    "text": "read only domain controllers over there you could put application servers over there just have them replicate content",
    "start": "2681880",
    "end": "2687520"
  },
  {
    "text": "back uh so there's there's really a lot of opportunity to kind of save bandwidth in between um in between each",
    "start": "2687520",
    "end": "2695800"
  },
  {
    "text": "point so so with the uh with the actual VPN deployment here are some of the",
    "start": "2695800",
    "end": "2701839"
  },
  {
    "text": "steps that we follow in order to get uh in order to get an image ready for this",
    "start": "2701839",
    "end": "2707200"
  },
  {
    "text": "scalable VPN solution uh so it's your usual stuff with application servers you",
    "start": "2707200",
    "end": "2712720"
  },
  {
    "text": "want to get that Baseline image created so this is the same whether you're putting together an Apache web server uh",
    "start": "2712720",
    "end": "2718520"
  },
  {
    "text": "with u maybe a custom application or in our case we're putting together a bpn server um so we want to get that uh we",
    "start": "2718520",
    "end": "2724960"
  },
  {
    "text": "want to get that initial image created with the startup scripts that allow it to be automatically added into um into",
    "start": "2724960",
    "end": "2733440"
  },
  {
    "text": "this uh VPN configuration uh we're going to go over some of the uh some of the scripts in a bit um and once you have",
    "start": "2733440",
    "end": "2740079"
  },
  {
    "text": "this image we're going to create a launch configuration uh which is what autoscaling uses in order to add and",
    "start": "2740079",
    "end": "2746119"
  },
  {
    "text": "remove uh in order to add new instances uh into that uh autoscaling",
    "start": "2746119",
    "end": "2751520"
  },
  {
    "text": "group so uh you know you don't have to read all of this uh these are kind of some highle steps uh that the scripts uh",
    "start": "2751520",
    "end": "2758400"
  },
  {
    "start": "2752000",
    "end": "2752000"
  },
  {
    "text": "that individual scripts are using um the VPN config script uh that's where you get a lot of variable information so um",
    "start": "2758400",
    "end": "2765920"
  },
  {
    "text": "if you're is is everybody familiar with getting ec2 data elements from The Meta",
    "start": "2765920",
    "end": "2772319"
  },
  {
    "text": "call yeah all right so yeah everybody's pretty familiar with that so yeah the VPN script is what we use to get you",
    "start": "2772319",
    "end": "2778440"
  },
  {
    "text": "know the instance ID subnet uh subnet ID VPC ID all that basic stuff that we need",
    "start": "2778440",
    "end": "2783720"
  },
  {
    "text": "in order to create routing information so so this is almost what I had the work and OE doing in my solution right except",
    "start": "2783720",
    "end": "2789960"
  },
  {
    "text": "you've got it on the VPN instance now itself right right so yeah we wanted to",
    "start": "2789960",
    "end": "2795079"
  },
  {
    "text": "um yeah I mean it it's specifically on the VPN instance uh the VPN instance is the one that does the call to Dynamo uh",
    "start": "2795079",
    "end": "2802400"
  },
  {
    "text": "in order to get what is my Subnet assignment and then to update uh Dynamo and say you know this instance has this",
    "start": "2802400",
    "end": "2808400"
  },
  {
    "text": "subnet assignment so nobody else can have it and that actually comes up in the assign address script um so you know",
    "start": "2808400",
    "end": "2816240"
  },
  {
    "text": "that's when you get your subnet assignment uh and then you go to the next gript which is checking the routes",
    "start": "2816240",
    "end": "2821680"
  },
  {
    "text": "is there already a route to this subnet that exists if so we're going to delete it to create the new one if not we're",
    "start": "2821680",
    "end": "2827640"
  },
  {
    "text": "just going to create the new one and it's going to be that route entry that we pointed out which is this sl24 P",
    "start": "2827640",
    "end": "2834040"
  },
  {
    "text": "pointing to the network interface of the VPN server uh you know we just like uh",
    "start": "2834040",
    "end": "2840319"
  },
  {
    "text": "we we talked about Route 53 there's our DNS script uh that says you know is there already a DNS entry for this",
    "start": "2840319",
    "end": "2847400"
  },
  {
    "text": "uh if so it's probably old let's delete it if not let's just add it to there so that it's part of that latency based",
    "start": "2847400",
    "end": "2853440"
  },
  {
    "text": "routing uh and then finally um you know the cloud watch metrics that we're uh collecting we're going to go through",
    "start": "2853440",
    "end": "2859520"
  },
  {
    "text": "that in a couple of slides talk about the different options that we have when it comes to scaling and what metrics to",
    "start": "2859520",
    "end": "2865119"
  },
  {
    "text": "use when it comes to scaling because there's once again there's a lot of different things that you can do with",
    "start": "2865119",
    "end": "2871359"
  },
  {
    "text": "that uh you know so with the uh with some of the tools that we were talking about earlier um you know using snort",
    "start": "2871359",
    "end": "2878640"
  },
  {
    "text": "using web filtering using web uh proxy caching uh you know network access controls uh using Mac um here's a little",
    "start": "2878640",
    "end": "2886280"
  },
  {
    "text": "here's what the traffic flow looks like uh you you have the end users coming in through a uh a public interface um you",
    "start": "2886280",
    "end": "2893200"
  },
  {
    "text": "know they're hitting the VPN instance uh and then they're routing through to the route instance and back out via the",
    "start": "2893200",
    "end": "2899480"
  },
  {
    "start": "2897000",
    "end": "2897000"
  },
  {
    "text": "route instance and so this is the way that the route instance is able to catch capture all this traffic heading out if",
    "start": "2899480",
    "end": "2906240"
  },
  {
    "text": "it's for the corporate Network it's not going to go out the routing instance public interface it's going to go across",
    "start": "2906240",
    "end": "2911640"
  },
  {
    "text": "the routing instance routing subnet uh and uh there there was um uh",
    "start": "2911640",
    "end": "2919559"
  },
  {
    "text": "uh a call a command that needed to be run uh that does force that traffic in",
    "start": "2919559",
    "end": "2924720"
  },
  {
    "text": "this pattern um we add a new uh uh routing table to the instance such that",
    "start": "2924720",
    "end": "2931240"
  },
  {
    "text": "all s all VPN uh traffic which is part of that 10.33",
    "start": "2931240",
    "end": "2937040"
  },
  {
    "text": "four I think for this example when it goes to hit a default destination a default gateway",
    "start": "2937040",
    "end": "2943760"
  },
  {
    "text": "automatically it would assume oh I'll just go out the interface that I just came in which is you know probably",
    "start": "2943760",
    "end": "2948920"
  },
  {
    "text": "ethernet zero of the VPN instance but we don't want it to go in that direction so we create this alternate routing table",
    "start": "2948920",
    "end": "2955880"
  },
  {
    "text": "uh to say if traffic matches this cider we're going to send it over to the routing instance and then that routing",
    "start": "2955880",
    "end": "2961960"
  },
  {
    "text": "instance sends it out to the rest of the world",
    "start": "2961960",
    "end": "2966559"
  },
  {
    "text": "uh you know just as I as I mentioned we're going to be talking a little bit about the uh Cloud watch",
    "start": "2967760",
    "end": "2974359"
  },
  {
    "start": "2971000",
    "end": "2971000"
  },
  {
    "text": "options so uh this example is um the script that",
    "start": "2974400",
    "end": "2981119"
  },
  {
    "text": "allows us to Scale based upon number of users connected um this creates a custom",
    "start": "2981119",
    "end": "2987760"
  },
  {
    "text": "metric within cloudwatch uh and it's per uh per instance um you know uh one of",
    "start": "2987760",
    "end": "2994280"
  },
  {
    "text": "the things you want to um pay attention to is the use of Dimensions here within cloudwatch if you set a dimension and my",
    "start": "2994280",
    "end": "3000799"
  },
  {
    "text": "example is the most used example uh within the documentation which is to use instance ID but you can set your",
    "start": "3000799",
    "end": "3007079"
  },
  {
    "text": "Dimensions as maybe a department you can set your Dimensions as whatever you want uh but this allows you to break down uh",
    "start": "3007079",
    "end": "3013200"
  },
  {
    "text": "those stats so I can say you know just report on this one instance ID how many users has it seen across the last month",
    "start": "3013200",
    "end": "3019799"
  },
  {
    "text": "and let's look at what the graph of that looks like um but this is the uh example",
    "start": "3019799",
    "end": "3025440"
  },
  {
    "text": "that we would use to bail to Scale based upon number of users connecting let's",
    "start": "3025440",
    "end": "3030760"
  },
  {
    "text": "say that you know you have these two users connecting but they are very bandwidth intensive users and they need",
    "start": "3030760",
    "end": "3037280"
  },
  {
    "text": "to get every piece of bandwidth that they that they can you can instead scale on the built-in metrics of network bytes",
    "start": "3037280",
    "end": "3044400"
  },
  {
    "text": "in and network bytes out so you know it would scale to meet you know bandwidth demand rather than individual demand so",
    "start": "3044400",
    "end": "3051720"
  },
  {
    "text": "you know this is a business decision a leadership decision you know do we want to force people people into you know 100",
    "start": "3051720",
    "end": "3058160"
  },
  {
    "text": "people onto one instance where they have to share the bandwidth or you know should it Scale based upon that",
    "start": "3058160",
    "end": "3063520"
  },
  {
    "text": "bandwidth need um you know uh so here's a look at",
    "start": "3063520",
    "end": "3069200"
  },
  {
    "text": "what those custom Cloud watch metrics look like uh you know we have the graphing that shows here are the number",
    "start": "3069200",
    "end": "3074240"
  },
  {
    "text": "of uh users that have connected in this amount of time uh and uh you know we can",
    "start": "3074240",
    "end": "3079880"
  },
  {
    "text": "do it reporting based upon instance ID it's a very flexible platform and you can pass in custom metrics of your",
    "start": "3079880",
    "end": "3088400"
  },
  {
    "text": "choice so we have our metrics that are coming into cloudwatch how do we do",
    "start": "3088400",
    "end": "3093520"
  },
  {
    "text": "something based upon those metrics right uh so we're going to create an alarm a cloud watch alarm uh and we set the",
    "start": "3093520",
    "end": "3100520"
  },
  {
    "text": "variables for this so for example let's say that we stick with the user count uh and we say that um you know on the type",
    "start": "3100520",
    "end": "3108119"
  },
  {
    "text": "of instance that we're running for this VPN instance we know that we can get 100 VPN uh users onto this instance with the",
    "start": "3108119",
    "end": "3115760"
  },
  {
    "text": "the amount of bandwidth that they should have so when should the alarm kick off at 100 because that gives you no time to",
    "start": "3115760",
    "end": "3122079"
  },
  {
    "text": "actually scale the infrastructure so you have to make that decision here depending on and you know you figure how",
    "start": "3122079",
    "end": "3127559"
  },
  {
    "text": "how fast do people scale up how fast do we need to scale up so maybe you know your threshold is 60 so once a VPN",
    "start": "3127559",
    "end": "3134400"
  },
  {
    "text": "server gets the six once uh the average of all VPN uh servers hits 60 it starts",
    "start": "3134400",
    "end": "3140720"
  },
  {
    "text": "to scale up so that you don't hit that threshold and have users really uh lagging along uh but once again you know",
    "start": "3140720",
    "end": "3147520"
  },
  {
    "text": "this is a business decision something that uh you know you'd have to work out um and you know it impacts some of the",
    "start": "3147520",
    "end": "3153599"
  },
  {
    "text": "financials as well uh so autoscaling this is kind of",
    "start": "3153599",
    "end": "3159400"
  },
  {
    "text": "the uh big important piece of all this uh you know it uh you know just as Matt mentioned with all those graphs um we",
    "start": "3159400",
    "end": "3166559"
  },
  {
    "text": "want to be able to scale up to meet demand and we want to reduce our footprint when demand is lowest with an",
    "start": "3166559",
    "end": "3172880"
  },
  {
    "text": "implementation like this uh you know like I if if england is covered in 10 ft",
    "start": "3172880",
    "end": "3178520"
  },
  {
    "text": "of snow but everything's sunny and Rosy and the rest of the in all of the United States we're only going to be scaling up",
    "start": "3178520",
    "end": "3185079"
  },
  {
    "text": "the data center that uh you know England connects to uh so what you know you need your Baseline configuration which is",
    "start": "3185079",
    "end": "3192319"
  },
  {
    "text": "maybe we always want two VPN servers running in each region and you always",
    "start": "3192319",
    "end": "3197359"
  },
  {
    "text": "have that routing instance running in each region so you know one of the things I really want to point out is uh",
    "start": "3197359",
    "end": "3203720"
  },
  {
    "text": "you know the opportunity to do uh reserved instance pricing here uh you know you're not going to shut off the",
    "start": "3203720",
    "end": "3209760"
  },
  {
    "text": "routing instances and you know that you're going to need at least one VPN instance per region so you really want",
    "start": "3209760",
    "end": "3215920"
  },
  {
    "text": "to take advantage of some of the pricing models there and and really look at that RI pricing",
    "start": "3215920",
    "end": "3222440"
  },
  {
    "text": "scheme and uh you know going through um some of the opportunities uh here like I",
    "start": "3222440",
    "end": "3228480"
  },
  {
    "text": "said it would have been nice if uh you know we we could add OPF to this we could add bgp to this those are built",
    "start": "3228480",
    "end": "3235520"
  },
  {
    "text": "into qua which is the old uh the old zebra project uh project we could have",
    "start": "3235520",
    "end": "3240760"
  },
  {
    "text": "multiple points of Entry per VPC uh you know we could use the vgw direct connect",
    "start": "3240760",
    "end": "3245920"
  },
  {
    "text": "we could have a tertiary failover using you know some kind you know another ipsec or a VPN pointto Point um you know",
    "start": "3245920",
    "end": "3253200"
  },
  {
    "text": "really it's whatever you can think of at this point this is a this is one example",
    "start": "3253200",
    "end": "3259319"
  },
  {
    "text": "of many possibilities uh but this is and but you know this this does work there",
    "start": "3259319",
    "end": "3264839"
  },
  {
    "text": "are other ways to make it work as well it's kind of you know how how creative do you want to get it actually sounds",
    "start": "3264839",
    "end": "3271000"
  },
  {
    "text": "like I needed a little bit of work on my Enterprise solution I'm getting some ideas as we go",
    "start": "3271000",
    "end": "3276119"
  },
  {
    "text": "through this it's good excellent so uh Daryl yeah um great uh I'm a little",
    "start": "3276119",
    "end": "3283920"
  },
  {
    "text": "disappointed though because it sounds like if we Implement their Solutions I don't get a snow day I can't go skiing",
    "start": "3283920",
    "end": "3291599"
  },
  {
    "text": "anymore but uh great great presentation guys uh the solutions if you take a look",
    "start": "3291599",
    "end": "3297040"
  },
  {
    "text": "at them they leverage so many different AWS services from Route 53 to Amazon VPC",
    "start": "3297040",
    "end": "3304480"
  },
  {
    "text": "to ec2 Auto scaling Dynamo DB uh we could",
    "start": "3304480",
    "end": "3310040"
  },
  {
    "text": "even use uh Amazon RDS uh so there and Cloud watch so there's so many different",
    "start": "3310040",
    "end": "3315520"
  },
  {
    "text": "services that are leveraged to to create this uh to create these these different solutions one and Enterprise solution",
    "start": "3315520",
    "end": "3321039"
  },
  {
    "text": "and one an open source solution so thank you so much for uh for coming do um fill",
    "start": "3321039",
    "end": "3327960"
  },
  {
    "text": "out the evaluations and uh thanks again [Applause]",
    "start": "3327960",
    "end": "3338660"
  }
]