[
  {
    "text": "such a full room so my name is pierre i'm from america a small company in canada uh we make",
    "start": "80",
    "end": "7200"
  },
  {
    "text": "mobile application uh this talk's actually sponsored by new relic so i've got my friend nate here",
    "start": "7200",
    "end": "12719"
  },
  {
    "text": "who's going to be talking more about what they do and how it relates to mobile application performance as well",
    "start": "12719",
    "end": "19840"
  },
  {
    "text": "um so that's kind of weird let me get the clicker",
    "start": "19840",
    "end": "25199"
  },
  {
    "text": "so just quick introduction of who i am and why am i here to talk about mobile",
    "start": "25199",
    "end": "31279"
  },
  {
    "text": "application performance so like i said i work at mirago we do mobile application we mainly do native",
    "start": "31279",
    "end": "38399"
  },
  {
    "text": "mobile application both on ios android uh windows phone and blackberry you know where i'm canadian so i got to do",
    "start": "38399",
    "end": "44559"
  },
  {
    "text": "blackberry phones um so word cloud of you know if you look at",
    "start": "44559",
    "end": "50320"
  },
  {
    "text": "my linkedin profile that's pretty much what comes up i did a lot of software development for i've been doing this for",
    "start": "50320",
    "end": "56480"
  },
  {
    "text": "15 years now and mirigo has been working with major",
    "start": "56480",
    "end": "61920"
  },
  {
    "text": "brands mostly in canada some of them you you'll know aldo pfizer",
    "start": "61920",
    "end": "67360"
  },
  {
    "text": "and we built like i said mainly no native applications for them",
    "start": "67360",
    "end": "73439"
  },
  {
    "text": "uh throughout that uh experience what we've noticed is when you're making a mobile application",
    "start": "73439",
    "end": "80159"
  },
  {
    "text": "the first the first thing is the user experience that's really important",
    "start": "80159",
    "end": "86560"
  },
  {
    "text": "an average session on a mobile phone is between one and four minutes and it really depends if",
    "start": "86560",
    "end": "91840"
  },
  {
    "text": "you're looking at tablets you usually get a longer session time two and a half three minutes on a phone one minute two",
    "start": "91840",
    "end": "98720"
  },
  {
    "text": "minutes is pretty much what you'll be looking at so you got to do the most of what you can in in that time and",
    "start": "98720",
    "end": "104720"
  },
  {
    "text": "performance is a big thing now if you look at an application most of them",
    "start": "104720",
    "end": "110320"
  },
  {
    "text": "what they tend to do is present you a shell and give you the information uh they're getting back from server",
    "start": "110320",
    "end": "117520"
  },
  {
    "text": "and looking at the data uh that neural collected and you know other",
    "start": "117520",
    "end": "123280"
  },
  {
    "text": "some of our application the average time it's gonna take from my phone to the server and getting the response back is",
    "start": "123280",
    "end": "130679"
  },
  {
    "text": "1.24 seconds so a bit above a second if you think about that",
    "start": "130680",
    "end": "136400"
  },
  {
    "text": "uh so if i say i've got an average session if two minutes and a half i've",
    "start": "136400",
    "end": "141760"
  },
  {
    "text": "got 1.24 seconds to do all my my calls that means i can do about 120",
    "start": "141760",
    "end": "148000"
  },
  {
    "text": "api calls before you know my session ends so the amount of information i can give to the user",
    "start": "148000",
    "end": "154239"
  },
  {
    "text": "at that point is limited and if you start thinking about when you're making your application you start thinking about it in that sense",
    "start": "154239",
    "end": "161120"
  },
  {
    "text": "you know how can i get the most information to that user so it's the application has the most value to them",
    "start": "161120",
    "end": "167840"
  },
  {
    "text": "i i can improve their user experience and improve the chances that they're going to keep my application running",
    "start": "167840",
    "end": "173760"
  },
  {
    "text": "and keep another phone so i did a few tests uh at home these are by no means uh formal numbers or actual real",
    "start": "173760",
    "end": "180959"
  },
  {
    "text": "benchmark but i i tried it out and so for just checking my balance starting",
    "start": "180959",
    "end": "186480"
  },
  {
    "text": "the application checking my balance on my bank account it's it took me about 70 seconds and it's 43 api calls",
    "start": "186480",
    "end": "194800"
  },
  {
    "text": "uh i check in on foursquare starting the application just doing a check-in again 46 reading a message on basecamp from",
    "start": "194800",
    "end": "202920"
  },
  {
    "text": "opening24 so what we can see is even doing a simple uh action",
    "start": "202920",
    "end": "208560"
  },
  {
    "text": "people will tend to think of it as just that one api call that's checking the message but there's a lot of stuff going",
    "start": "208560",
    "end": "214480"
  },
  {
    "text": "around it downloading the images that goes with that message downloading the profile information for the user wrote",
    "start": "214480",
    "end": "220159"
  },
  {
    "text": "that message for example if you look at basecamp all of that are separate api calls and all of those you know are",
    "start": "220159",
    "end": "226799"
  },
  {
    "text": "taking a significant amount of time so putting them all together doing that single action is not just that one call",
    "start": "226799",
    "end": "233280"
  },
  {
    "text": "but the sum of all of them so in looking at the lifespan well",
    "start": "233280",
    "end": "240720"
  },
  {
    "text": "there's two big sections when everything is tuned out and going very well uh you're spending about 80 of your time",
    "start": "240720",
    "end": "247519"
  },
  {
    "text": "on the network while you're on a cellular network there's you know bandwidth fluctuate uh there's a latency",
    "start": "247519",
    "end": "253680"
  },
  {
    "text": "issue there and then you've got that 20 that's really what's going on your server so computing the request going to",
    "start": "253680",
    "end": "260000"
  },
  {
    "text": "the database if you need to going back and that's if everything is tuned out",
    "start": "260000",
    "end": "265280"
  },
  {
    "text": "in some cases you know i've seen like the exact reverse but the real section",
    "start": "265280",
    "end": "271520"
  },
  {
    "text": "you've got control of if you're a back-end developer is looking at that 20 if you're",
    "start": "271520",
    "end": "277360"
  },
  {
    "text": "on the mobile side then what you want to do is try to have the fewest requests possible to do your",
    "start": "277360",
    "end": "284080"
  },
  {
    "text": "your action with the smallest payload even though if you want to get all that information in",
    "start": "284080",
    "end": "290400"
  },
  {
    "text": "uh so you know getting to a better world you know we're here if we can reduce the amount of requests",
    "start": "290400",
    "end": "296560"
  },
  {
    "text": "and there's a couple of tips around that and get only the information that we need we can get to a better experience in a",
    "start": "296560",
    "end": "303840"
  },
  {
    "text": "better world for our users",
    "start": "303840",
    "end": "307280"
  },
  {
    "text": "so well getting there is pretty much what i i just said uh the one thing you want to take advantage of and a lot of",
    "start": "308960",
    "end": "315120"
  },
  {
    "text": "people overlook is the caching that's a lot of what i'll be talking about uh how",
    "start": "315120",
    "end": "320160"
  },
  {
    "text": "you can get caching going on the device uh most api developer uh will think in a",
    "start": "320160",
    "end": "326080"
  },
  {
    "text": "web framework where the browser will cache everything for you",
    "start": "326080",
    "end": "331199"
  },
  {
    "text": "uh where on mobile phone the default especially if you're writing a native app the default is actually not to cache",
    "start": "331199",
    "end": "337440"
  },
  {
    "text": "anything that's where you got a big difference so you got to do all those calls every time",
    "start": "337440",
    "end": "342479"
  },
  {
    "text": "uh where you shouldn't have to do that so first step on getting that going and",
    "start": "342479",
    "end": "349280"
  },
  {
    "text": "being better at communicating between a mobile application and uh your browser is",
    "start": "349280",
    "end": "355680"
  },
  {
    "text": "being specific with your http header so i'm mostly talking to the uh backend",
    "start": "355680",
    "end": "360800"
  },
  {
    "text": "developer here so basic basic thing",
    "start": "360800",
    "end": "366400"
  },
  {
    "text": "you make a request the server comes back and says here's your data and when you're talking to the browser the",
    "start": "366400",
    "end": "371680"
  },
  {
    "text": "browser will store that most of the time even if you don't put cache editor the default for a browser is actually to",
    "start": "371680",
    "end": "376880"
  },
  {
    "text": "cache pretty much everything you give it when you look at the mobile phone actually it's going to get the data and",
    "start": "376880",
    "end": "383680"
  },
  {
    "text": "then discard it right away it's going to process it show it on the screen",
    "start": "383680",
    "end": "388720"
  },
  {
    "text": "but if you're talking about a native application most of the time that's going to get thrown away as as the",
    "start": "388720",
    "end": "394960"
  },
  {
    "text": "request gets processed now if you're declarative and you say if your server tells the mobile application",
    "start": "394960",
    "end": "401919"
  },
  {
    "text": "you should keep this data for this amount of time then you know depending on the mobile",
    "start": "401919",
    "end": "406960"
  },
  {
    "text": "platform i'll go in more details after you know a bit further down uh",
    "start": "406960",
    "end": "412960"
  },
  {
    "text": "the phone will keep some of that data how do you get there well the first thing is for this to work",
    "start": "412960",
    "end": "419919"
  },
  {
    "text": "you need that one object so that one restful api call gotta be one url",
    "start": "419919",
    "end": "426960"
  },
  {
    "text": "a couple of things i we've noticed throughout the time talking with uh clients back end",
    "start": "426960",
    "end": "433280"
  },
  {
    "text": "was you've got okay",
    "start": "433280",
    "end": "439360"
  },
  {
    "text": "so you've got an object um let's say um a cheese database",
    "start": "439360",
    "end": "446000"
  },
  {
    "text": "and they like they want their cheese their application they put in french and english and they made one object for the for the",
    "start": "446000",
    "end": "453599"
  },
  {
    "text": "cheese and they look at the request editor to say well i'm going to give you",
    "start": "453599",
    "end": "459199"
  },
  {
    "text": "uh the description in english if you say your accepted language is english and give you the the description in french",
    "start": "459199",
    "end": "465039"
  },
  {
    "text": "if you see the description your language is french the problem with that is if the user switches languages so it's",
    "start": "465039",
    "end": "471520"
  },
  {
    "text": "starting in english and switch the application to uh to french and i cache the data then i'm going to start having",
    "start": "471520",
    "end": "478160"
  },
  {
    "text": "data that's both french and english so we need a way to make sure that when i'm talking about a cheese i'm giving you",
    "start": "478160",
    "end": "483599"
  },
  {
    "text": "all the information possible about it and i want to have collision language is",
    "start": "483599",
    "end": "489120"
  },
  {
    "text": "kind of an edge case but i've seen other cases where",
    "start": "489120",
    "end": "494479"
  },
  {
    "text": "one object could have more than one url or worse multiple object have the same",
    "start": "494479",
    "end": "499599"
  },
  {
    "text": "url and that will cause you problem when you're starting thinking about caching all those requests",
    "start": "499599",
    "end": "506840"
  },
  {
    "text": "so what do i mean when i say declaring well there's the client side which is",
    "start": "506879",
    "end": "512959"
  },
  {
    "text": "uh if modified since if non-match you got to make sure you",
    "start": "512959",
    "end": "518159"
  },
  {
    "text": "ask your uh the server you know i already have some data as a change and on the server side and",
    "start": "518159",
    "end": "525279"
  },
  {
    "text": "that's the most important side you know to start with is let me know if it was modified with the last modify",
    "start": "525279",
    "end": "533040"
  },
  {
    "text": "an e-tag if it's something that will change every time i come with a request but that checksum will",
    "start": "533040",
    "end": "539760"
  },
  {
    "text": "let me know if it's actually different the expires how long should i keep this",
    "start": "539760",
    "end": "546000"
  },
  {
    "text": "in cash so we know that information is good for an hour a day a month",
    "start": "546000",
    "end": "552240"
  },
  {
    "text": "all of that can be handled on the client side and make sure that",
    "start": "552240",
    "end": "558160"
  },
  {
    "text": "we keep what you said for the specific amount of time and if during the operation of the app this needs to",
    "start": "558160",
    "end": "564240"
  },
  {
    "text": "change because there is a lot of change to the content you can be can either tune",
    "start": "564240",
    "end": "570080"
  },
  {
    "text": "down those time or uh actually bump them up if you're expecting a lot of load",
    "start": "570080",
    "end": "578240"
  },
  {
    "text": "so uh i i think it went over most of them so etag yeah for eat die for dynamic",
    "start": "578720",
    "end": "584240"
  },
  {
    "text": "content uh that's really when a date last modifier is the easiest one that's the one you should use by default",
    "start": "584240",
    "end": "591120"
  },
  {
    "text": "e-tag is when your content is dynamic and really a date of modification doesn't",
    "start": "591120",
    "end": "596800"
  },
  {
    "text": "apply a lot of time that's a record set so not just one record but a",
    "start": "596800",
    "end": "603120"
  },
  {
    "text": "set of records then the e-tag meaning the status and change makes more sense than using a last modifier and trying to",
    "start": "603120",
    "end": "609680"
  },
  {
    "text": "compute and all those records which one is the youngest uh cache control and expires so cache",
    "start": "609680",
    "end": "616640"
  },
  {
    "text": "control is the one you want to have on the web expires is is honored pretty",
    "start": "616640",
    "end": "623120"
  },
  {
    "text": "much everywhere in mobile applications is actually cache control that's the first one the",
    "start": "623120",
    "end": "628160"
  },
  {
    "text": "application will look for especially if you're looking at ios so being specific about uh if the max",
    "start": "628160",
    "end": "635600"
  },
  {
    "text": "age is it uh is it revalidate or not those are the two things you need to look at",
    "start": "635600",
    "end": "641680"
  },
  {
    "text": "uh specifically on the client side you need to put those entered if modify most",
    "start": "641680",
    "end": "646959"
  },
  {
    "text": "of the api stack will do it for you uh if not match you usually have to do",
    "start": "646959",
    "end": "652079"
  },
  {
    "text": "it by yourself if is not match is for the e tag",
    "start": "652079",
    "end": "657120"
  },
  {
    "text": "so just a quick example of what i just went over uh using amazon s3 and one small gotcha you may get into",
    "start": "658079",
    "end": "665040"
  },
  {
    "text": "with with s3 actually so any final and s3 will give you a last modify and an e",
    "start": "665040",
    "end": "670160"
  },
  {
    "text": "tag uh you don't have to do anything just upload your file on stream you'll get either",
    "start": "670160",
    "end": "677200"
  },
  {
    "text": "now the question is will it be cache well it won't be cached by default on mobile",
    "start": "677200",
    "end": "683920"
  },
  {
    "text": "devices because there's no cache control and no expires on ios if you're uh if you're lucky",
    "start": "683920",
    "end": "691680"
  },
  {
    "text": "depending on which version you're running you can expect most of the cash time of the day most likely six hour or not at all and",
    "start": "691680",
    "end": "699200"
  },
  {
    "text": "on android it really depends on which api you're using to make your request if you're using just a standard http",
    "start": "699200",
    "end": "705600"
  },
  {
    "text": "request or if using a cache http request you'll get different results",
    "start": "705600",
    "end": "712480"
  },
  {
    "text": "so on s3 what you want to do and that's that's fairly straightforward uh you can",
    "start": "713200",
    "end": "719120"
  },
  {
    "text": "set you can set actually specific cache control letters for your",
    "start": "719120",
    "end": "724880"
  },
  {
    "text": "object when you upload them in the metadata so you just set the x amazon meta cache",
    "start": "724880",
    "end": "732880"
  },
  {
    "text": "control which is the cache control editor and then amazon will send that cache control letter to everyone",
    "start": "732880",
    "end": "738639"
  },
  {
    "text": "you object uh you know in our experience it's kind of the gotchas that every junior developer",
    "start": "738639",
    "end": "745120"
  },
  {
    "text": "will do uh they're gonna say well i'll put all my uh for example profile picture on s3",
    "start": "745120",
    "end": "751200"
  },
  {
    "text": "and won't set the cache control letters so every single time the application goes out and get that profile picture",
    "start": "751200",
    "end": "757760"
  },
  {
    "text": "you can get a lot of performance if you just cache it for a certain amount of time you don't really care if it takes a",
    "start": "757760",
    "end": "764000"
  },
  {
    "text": "day for my profile picture to change to in somebody else's account you just want",
    "start": "764000",
    "end": "769200"
  },
  {
    "text": "that data to be stored now if you look at the same thing on",
    "start": "769200",
    "end": "774240"
  },
  {
    "text": "ruby on rails and i'm using ruby on rails here simply because it's fairly common and",
    "start": "774240",
    "end": "780480"
  },
  {
    "text": "it's easy enough to set up and try out what i'm going to be talking about with with rails you really just want to uh",
    "start": "780480",
    "end": "788480"
  },
  {
    "text": "play around with the different settings and understand how cache control will influence your application",
    "start": "788480",
    "end": "794720"
  },
  {
    "text": "uh i use uh elastic beamstalk to to do that those different tests",
    "start": "795120",
    "end": "801440"
  },
  {
    "text": "i actually have get up if you want to try to look at the code i use with fairly small amount of code",
    "start": "801440",
    "end": "807040"
  },
  {
    "text": "and setting it up well very well documented on on amazon",
    "start": "807040",
    "end": "813440"
  },
  {
    "text": "developer network but uh going through it you know it's a git repo",
    "start": "813440",
    "end": "818560"
  },
  {
    "text": "uh just a standard empty rails application and you just started and look at what",
    "start": "818560",
    "end": "825519"
  },
  {
    "text": "happens so starting with a",
    "start": "825519",
    "end": "831600"
  },
  {
    "text": "basic rails application what the first thing you'll notice is i get the nice e tag so",
    "start": "831600",
    "end": "837680"
  },
  {
    "text": "every single one of my pages are actually a tag with an md5 checksum so i can",
    "start": "837680",
    "end": "844160"
  },
  {
    "text": "implement caching on the client side the problem is i'm getting a cache control letter",
    "start": "844160",
    "end": "850639"
  },
  {
    "text": "and the cache control editor says maximum age zero",
    "start": "850639",
    "end": "856320"
  },
  {
    "text": "private and must revalidate so what's going to happen from the mobile application perspective",
    "start": "856320",
    "end": "861440"
  },
  {
    "text": "is i'm going to go out get that content say you can keep it for",
    "start": "861440",
    "end": "867519"
  },
  {
    "text": "zero seconds even if i kept it i need to go back to",
    "start": "867519",
    "end": "872639"
  },
  {
    "text": "the server every single time to validate that it's still good",
    "start": "872639",
    "end": "877519"
  },
  {
    "text": "the reason why most framework will do that by default and not just where else does that",
    "start": "878000",
    "end": "884800"
  },
  {
    "text": "most others will do it is because it's a dynamically rendered page so they don't want to assume that the content will not",
    "start": "884800",
    "end": "892240"
  },
  {
    "text": "change you've got to take action in either stack you're doing to tell it no this",
    "start": "892240",
    "end": "899120"
  },
  {
    "text": "content is good for a certain amount of time and that actually forces you to think about so what am i returning it",
    "start": "899120",
    "end": "905519"
  },
  {
    "text": "here and what value is after user and how long can we live with something that would have been",
    "start": "905519",
    "end": "911839"
  },
  {
    "text": "cached so fixing it in rails",
    "start": "911839",
    "end": "916959"
  },
  {
    "text": "requires either using fresh wind or expires in ideally boat so fresh wind will",
    "start": "916959",
    "end": "924480"
  },
  {
    "text": "force the expires adder and also uh the duration and the expire in will",
    "start": "924480",
    "end": "930880"
  },
  {
    "text": "set the control the the cash control duration to a specific amount of time so",
    "start": "930880",
    "end": "936000"
  },
  {
    "text": "in this case in this example it's three days i'm saying it's public and we don't have to revalidate so whatever comes out",
    "start": "936000",
    "end": "943519"
  },
  {
    "text": "of this the client will keep as it is for the next three days and for anything that's uh like browsing",
    "start": "943519",
    "end": "949600"
  },
  {
    "text": "a directory of information in a lot of cases you want to have an expiring that's not you know 15 seconds but at",
    "start": "949600",
    "end": "956399"
  },
  {
    "text": "least hours if not days uh especially if you think your information is not likely to change that much",
    "start": "956399",
    "end": "963279"
  },
  {
    "text": "yeah and if the other very important part in there is the must revalidate",
    "start": "963279",
    "end": "968320"
  },
  {
    "text": "must revalidate is really really cool most people tend to to say yes so the",
    "start": "968320",
    "end": "974800"
  },
  {
    "text": "client will go back to the server and say as this change and the server will say most likely say no",
    "start": "974800",
    "end": "980560"
  },
  {
    "text": "the problem with doing this is on a cell phone you're i'm still you know powering up the antenna going down to the server",
    "start": "980560",
    "end": "987360"
  },
  {
    "text": "getting the answer uh back and that's that 1.24 seconds you know average",
    "start": "987360",
    "end": "993759"
  },
  {
    "text": "you took 20 out of that so it's you're now down to a bit under a second because the server didn't do that much",
    "start": "993759",
    "end": "1000000"
  },
  {
    "text": "processing but i'm still down you know just going back and forth it's a second there that i don't want to spend waiting",
    "start": "1000000",
    "end": "1006880"
  },
  {
    "text": "for the server so if you look at uh at this i've got a",
    "start": "1006880",
    "end": "1015120"
  },
  {
    "text": "cash control it says max age 86 400 and it's public just by a show of",
    "start": "1015120",
    "end": "1021920"
  },
  {
    "text": "hands and from what i've said do you think it's going to be cash on the on the phone",
    "start": "1021920",
    "end": "1028880"
  },
  {
    "text": "so anybody says yes who says no we've got through says yes",
    "start": "1028959",
    "end": "1035438"
  },
  {
    "text": "about five we say no everybody else doesn't know i guess",
    "start": "1035439",
    "end": "1040558"
  },
  {
    "text": "well it depends actually so on android the answer is it depends really",
    "start": "1040559",
    "end": "1046798"
  },
  {
    "text": "what you're using to make your network requests some have caching built in some don't and there's like 20",
    "start": "1046799",
    "end": "1053919"
  },
  {
    "text": "different ways i can do a network connection in http client under android on ios",
    "start": "1053919",
    "end": "1059200"
  },
  {
    "text": "it most likely all with all the defaults set nobody did anything about the cache is",
    "start": "1059200",
    "end": "1064559"
  },
  {
    "text": "going to be cached for six hours to a day because i've got a cache controller and ios",
    "start": "1064559",
    "end": "1070640"
  },
  {
    "text": "and surl connection will actually honor that",
    "start": "1070640",
    "end": "1074880"
  },
  {
    "text": "and that slide is actually wrong it should be crossed out the first bullet should be crossed out there is a cache",
    "start": "1079520",
    "end": "1084960"
  },
  {
    "text": "control letter in that call",
    "start": "1084960",
    "end": "1089039"
  },
  {
    "text": "okay uh so caching on the device so what i talked about up to now is what",
    "start": "1091360",
    "end": "1098880"
  },
  {
    "text": "can the server do for the client you know what how can i be declarative about",
    "start": "1098880",
    "end": "1105600"
  },
  {
    "text": "the different editors i should use how long the the client should store it and under what condition should it check",
    "start": "1105600",
    "end": "1111919"
  },
  {
    "text": "back with the server if that change on the device there's still a couple of",
    "start": "1111919",
    "end": "1117440"
  },
  {
    "text": "things i need to do to make sure i can respect what the what the server wishes",
    "start": "1117440",
    "end": "1122480"
  },
  {
    "text": "are so if we go back to uh the the big picture of this is",
    "start": "1122480",
    "end": "1130080"
  },
  {
    "text": "the server now goes on and say here's your data please keep it for a while",
    "start": "1130080",
    "end": "1135520"
  },
  {
    "text": "and the device then comes down to where am i going to store this",
    "start": "1135520",
    "end": "1142000"
  },
  {
    "text": "so again don't rely on the default so on rails you don't want to rely on",
    "start": "1142480",
    "end": "1148000"
  },
  {
    "text": "the default because you won't get any caching on your ios device or on your android",
    "start": "1148000",
    "end": "1153760"
  },
  {
    "text": "device it's the same thing if you go in with the default uh",
    "start": "1153760",
    "end": "1159039"
  },
  {
    "text": "top of mind if you know the ios default cache size it's 10 mega memory 50 megs",
    "start": "1159039",
    "end": "1164080"
  },
  {
    "text": "on disk uh starting with ios 6. so it's a fairly small amount of data that you can keep",
    "start": "1164080",
    "end": "1169919"
  },
  {
    "text": "in there especially if you've got images uh you know i definition images will take a couple of meg each you don't want",
    "start": "1169919",
    "end": "1176160"
  },
  {
    "text": "to go back and get them often the other thing you don't want to do is art code",
    "start": "1176160",
    "end": "1182320"
  },
  {
    "text": "that logic one experience we had was with a tv guide application and a tv guide",
    "start": "1182320",
    "end": "1188480"
  },
  {
    "text": "application what we ended up doing",
    "start": "1188480",
    "end": "1193400"
  },
  {
    "text": "it seemed very logical at the time we knew that the server would refresh",
    "start": "1193840",
    "end": "1198880"
  },
  {
    "text": "its data twice a day once around noon and once at midnight so",
    "start": "1198880",
    "end": "1204320"
  },
  {
    "text": "what we did is on the client side says whatever the client returned the server returns i'm going to take it and store",
    "start": "1204320",
    "end": "1210240"
  },
  {
    "text": "it and after that specific after midnight or after uh you know",
    "start": "1210240",
    "end": "1216320"
  },
  {
    "text": "afternoon i'm going to wipe the data and go back to the server and we are coded that logic the problem",
    "start": "1216320",
    "end": "1222240"
  },
  {
    "text": "is is six months into production we changed the time at which the server would with reimported data and now we",
    "start": "1222240",
    "end": "1227919"
  },
  {
    "text": "got out of sync using the http editor means that the server side can actually",
    "start": "1227919",
    "end": "1234880"
  },
  {
    "text": "ensure that if that change we know when everything's gonna expire we can set shorter or longer delays",
    "start": "1234880",
    "end": "1242000"
  },
  {
    "text": "and tune out the load on our server as well",
    "start": "1242000",
    "end": "1246080"
  },
  {
    "text": "so as you might have guessed and you know my background is on ios and testing this",
    "start": "1247280",
    "end": "1253200"
  },
  {
    "text": "on an ios device is actually fairly easy uh so i'm going to go over how you would",
    "start": "1253200",
    "end": "1258320"
  },
  {
    "text": "do it on ios but it's essentially the same on android it's really a question of choosing the",
    "start": "1258320",
    "end": "1264400"
  },
  {
    "text": "right http client so the first thing in in this case in",
    "start": "1264400",
    "end": "1270159"
  },
  {
    "text": "ios i you want to be specific about how much memory and how much disciplicity",
    "start": "1270159",
    "end": "1275280"
  },
  {
    "text": "your cache should use i know that my application is going to be downloading a fair amount of images",
    "start": "1275280",
    "end": "1281360"
  },
  {
    "text": "so i'll go in and say you know android meg disk that's pretty standard in an application",
    "start": "1281360",
    "end": "1287840"
  },
  {
    "text": "50 meg in memory that's because i think i'm going to be accessing those images frequently so i want a bunch above load",
    "start": "1287840",
    "end": "1295120"
  },
  {
    "text": "of them to be just kept in memory whenever i need them if you don't think you can be reusing the",
    "start": "1295120",
    "end": "1301200"
  },
  {
    "text": "same content often then reduce the memory size and really rely on your desk it still flashes pretty",
    "start": "1301200",
    "end": "1308000"
  },
  {
    "text": "fast so if i'm not scrolling through a bunch of them i don't need that much uh",
    "start": "1308000",
    "end": "1314400"
  },
  {
    "text": "ram memory to be used for the cache but the disk is the most important one",
    "start": "1314400",
    "end": "1320559"
  },
  {
    "text": "and the cost of going back to disk is not that big compared to going back to the server or not having the information",
    "start": "1320559",
    "end": "1327440"
  },
  {
    "text": "at all the other thing you want to look at is your cache policies",
    "start": "1327440",
    "end": "1333520"
  },
  {
    "text": "so the full cache policy is usually just to under what cache control says ios android is same",
    "start": "1333520",
    "end": "1338799"
  },
  {
    "text": "on ios you can also give it a couple of more instructions when you make your request",
    "start": "1338799",
    "end": "1344799"
  },
  {
    "text": "you can say i want to reload ignoring the cash so for those specific requests",
    "start": "1344799",
    "end": "1350559"
  },
  {
    "text": "whatever the server says disregarded or on the other side you can also say",
    "start": "1350559",
    "end": "1355919"
  },
  {
    "text": "whatever happens give me what's in cash so i only go for the first i only go get the data on the",
    "start": "1355919",
    "end": "1362400"
  },
  {
    "text": "first time and understanding the difference you know the different settings as far as cache policies",
    "start": "1362400",
    "end": "1368880"
  },
  {
    "text": "for your specific os is very very very important going back and ignoring you know",
    "start": "1368880",
    "end": "1375280"
  },
  {
    "text": "uh the worst one is return cash data else load is you can get a lot of stale",
    "start": "1375280",
    "end": "1380640"
  },
  {
    "text": "data if you got a big disk cache and you're not wiping through it with you data",
    "start": "1380640",
    "end": "1388280"
  },
  {
    "text": "the other thing is etag so on your mobile stack i haven't seen one deals with etag",
    "start": "1389520",
    "end": "1395919"
  },
  {
    "text": "properly so that means that's the part of of cash logic you you need to implement on your",
    "start": "1395919",
    "end": "1401280"
  },
  {
    "text": "client uh fairly easy you know it's a it's essentially a dictionary etag url when",
    "start": "1401280",
    "end": "1408880"
  },
  {
    "text": "you make your request you keep that uh stored ideally stored on disk so it's kind of synced up with your with your",
    "start": "1408880",
    "end": "1415120"
  },
  {
    "text": "cache and making sure that when you're making your request you go get for this url the last thing i got was the c tag",
    "start": "1415120",
    "end": "1422799"
  },
  {
    "text": "and get the data back the small gacha is making sure",
    "start": "1422799",
    "end": "1428159"
  },
  {
    "text": "that you've got that data in cache what will happen when you implement your",
    "start": "1428159",
    "end": "1434559"
  },
  {
    "text": "own logic around this is you don't sync up your cache and your",
    "start": "1434559",
    "end": "1440000"
  },
  {
    "text": "dictionary of etag versus url you start with uh going",
    "start": "1440000",
    "end": "1445840"
  },
  {
    "text": "basic logic i go to the to my dictionary and say okay this is the e type for my request i make the request the server says it doesn't",
    "start": "1445840",
    "end": "1452559"
  },
  {
    "text": "change i get the data from disk oh and they all i get nothing",
    "start": "1452559",
    "end": "1458559"
  },
  {
    "text": "so now i go back wipe and do that second request",
    "start": "1458559",
    "end": "1463440"
  },
  {
    "text": "so now is it going to be cash and again you know par most of it should",
    "start": "1465440",
    "end": "1471039"
  },
  {
    "text": "be uh borrowed by now so now that we",
    "start": "1471039",
    "end": "1476400"
  },
  {
    "text": "the server returns actually control and it expires uh ios we just specify what's going to",
    "start": "1476400",
    "end": "1481440"
  },
  {
    "text": "happen and what we know is if we choose the proper cache control on android will",
    "start": "1481440",
    "end": "1487760"
  },
  {
    "text": "get caching going on on the client side we know that we'll only make relevant requests and that the server will get to",
    "start": "1487760",
    "end": "1495039"
  },
  {
    "text": "decide if we should make those requests or not",
    "start": "1495039",
    "end": "1500520"
  },
  {
    "text": "so in the end you're doing more requests because i've got more data locally in less time i'm giving more",
    "start": "1502159",
    "end": "1510640"
  },
  {
    "text": "more content to my user in the same amount of time because some of it is already on the",
    "start": "1510640",
    "end": "1515840"
  },
  {
    "text": "phone that's all good and nice",
    "start": "1515840",
    "end": "1522000"
  },
  {
    "text": "now the problem that the second thing you need to look at so now i know i'm caching my stuff my server is giving me",
    "start": "1522000",
    "end": "1528799"
  },
  {
    "text": "the proper information you need to measure what the performance of all of that is because you'll be",
    "start": "1528799",
    "end": "1534720"
  },
  {
    "text": "tuning what your cash headers are based on your load",
    "start": "1534720",
    "end": "1539919"
  },
  {
    "text": "based on the fluctuation in the information so as more data gets",
    "start": "1539919",
    "end": "1546400"
  },
  {
    "text": "into the database you may need to cache less of some more of others you need to",
    "start": "1546400",
    "end": "1552559"
  },
  {
    "text": "adapt and if you're not measuring you don't know if you need to adapt to it so when we start a project",
    "start": "1552559",
    "end": "1559600"
  },
  {
    "text": "the first thing we ask ourselves is you know what's the this application objective",
    "start": "1559600",
    "end": "1565440"
  },
  {
    "text": "uh and from there we'll put a couple of metrics in place to say",
    "start": "1565440",
    "end": "1571200"
  },
  {
    "text": "this is you know we know it's going well if we're serving uh",
    "start": "1571200",
    "end": "1576559"
  },
  {
    "text": "if for example yeah best example i've got for of this is again let's go with my cheese",
    "start": "1576559",
    "end": "1582400"
  },
  {
    "text": "directory application so the cheese application what it does is very simple you know you get to",
    "start": "1582400",
    "end": "1590240"
  },
  {
    "text": "uh you get to see a list of cheese",
    "start": "1590240",
    "end": "1595520"
  },
  {
    "text": "and say i've tasted it or not and i liked it or not just remember you know different types of cheese you you enjoy",
    "start": "1595520",
    "end": "1600640"
  },
  {
    "text": "it so for us the key metric for this application is user retention",
    "start": "1600640",
    "end": "1606559"
  },
  {
    "text": "and the number of uh rating they put on cheese and it could be the same for an",
    "start": "1606559",
    "end": "1612000"
  },
  {
    "text": "application directory it could be the same that kind of directory application often is that the key interaction that",
    "start": "1612000",
    "end": "1617679"
  },
  {
    "text": "works and the the so the question that then comes in is",
    "start": "1617679",
    "end": "1623039"
  },
  {
    "text": "how fast and how smoothly is that process going so looking at the events around that the api calls",
    "start": "1623039",
    "end": "1630640"
  },
  {
    "text": "what kind of return am i getting there will really help me understand",
    "start": "1630640",
    "end": "1637120"
  },
  {
    "text": "to help me understand what's the right number so you're starting a new project do you know that if you should take one",
    "start": "1637279",
    "end": "1643279"
  },
  {
    "text": "second or five seconds to do that that specific you know rating action you don't know",
    "start": "1643279",
    "end": "1648960"
  },
  {
    "text": "so if you put your uh your metrics in place early",
    "start": "1648960",
    "end": "1654480"
  },
  {
    "text": "usually the first before your first user stories is completed your framework of the application should have your",
    "start": "1654480",
    "end": "1660159"
  },
  {
    "text": "analytics and should have your apm and should have you know",
    "start": "1660159",
    "end": "1665279"
  },
  {
    "text": "of course crash reporting in so you know what's happening as you start testing it out and see you know i'm doing my first",
    "start": "1665279",
    "end": "1671520"
  },
  {
    "text": "training ever and it takes five seconds it felt kind of slow but you know as good as that we don't know yet and as we",
    "start": "1671520",
    "end": "1678480"
  },
  {
    "text": "move on making the application making it better adding more feature to it even before 1.0",
    "start": "1678480",
    "end": "1684559"
  },
  {
    "text": "our qa team usually can inform us is this is too slow this is too fast you know nobody says it's too fast but",
    "start": "1684559",
    "end": "1693120"
  },
  {
    "text": "it feels like the action didn't take place it was so fast i didn't see it going so being able to tune what should",
    "start": "1693120",
    "end": "1699679"
  },
  {
    "text": "happen uh if you start measuring early you can you've got real data to look at and know",
    "start": "1699679",
    "end": "1706080"
  },
  {
    "text": "if you should be doing it so what measuring all all of that means",
    "start": "1706080",
    "end": "1711520"
  },
  {
    "text": "is you'll know what's going on uh if you're meeting your objective and you know does it matter or not then",
    "start": "1711520",
    "end": "1718320"
  },
  {
    "text": "it takes one second or five seconds uh having objective will help you do that",
    "start": "1718320",
    "end": "1725080"
  },
  {
    "text": "last slide and it's really ending it off to you by your leg friends is how do you make things better and you",
    "start": "1726159",
    "end": "1732960"
  },
  {
    "text": "make things better by measuring and knowing what's happening so i'll invite nate to come in and show",
    "start": "1732960",
    "end": "1738320"
  },
  {
    "text": "you what neuro can do with both your mobile application and your web back-end now you can track the",
    "start": "1738320",
    "end": "1744399"
  },
  {
    "text": "performance around that",
    "start": "1744399",
    "end": "1748200"
  },
  {
    "text": "am i on all right excellent hi my name is nate i'm a technical account manager at new relic and",
    "start": "1752640",
    "end": "1760320"
  },
  {
    "text": "as pierre luke mentioned it's really important when you're making",
    "start": "1760320",
    "end": "1765679"
  },
  {
    "text": "these changes just to understand your application's performance and to do that you can use new relic",
    "start": "1765679",
    "end": "1771120"
  },
  {
    "text": "so new relic is an application performance management tool and",
    "start": "1771120",
    "end": "1778240"
  },
  {
    "text": "i'm going to try in about 20 minutes give you a high level understanding of what new relic does so um at a really",
    "start": "1778320",
    "end": "1785679"
  },
  {
    "text": "high level we have agents oh so we monitor both the back ends and the",
    "start": "1785679",
    "end": "1792240"
  },
  {
    "text": "actual mobile devices directly and we're going to i'm going to show you how we kind of",
    "start": "1792240",
    "end": "1797440"
  },
  {
    "text": "piece that data together the story really starts with the back end where new relics started",
    "start": "1797440",
    "end": "1803200"
  },
  {
    "text": "what we do is we have agents that go inside the application engine so we actually have agents for anything",
    "start": "1803200",
    "end": "1809120"
  },
  {
    "text": "written in ruby java.net python php and node node being one of those",
    "start": "1809120",
    "end": "1814960"
  },
  {
    "text": "really hot languages for mobile applications so it's pretty neat that we we just introduced support for node",
    "start": "1814960",
    "end": "1821600"
  },
  {
    "text": "but the whole um so the story starts there we take those agents they go into your application",
    "start": "1821600",
    "end": "1827679"
  },
  {
    "text": "engines they automatically fire up really easy install and they start reporting up to our servers",
    "start": "1827679",
    "end": "1834720"
  },
  {
    "text": "where we collect and aggregate that information you log into new relic and you see your data and what we're",
    "start": "1834720",
    "end": "1841200"
  },
  {
    "text": "looking at here is the data from the backend applications the your traditional web applications in",
    "start": "1841200",
    "end": "1847600"
  },
  {
    "text": "your traditional that this beacon here is a collector",
    "start": "1847600",
    "end": "1853840"
  },
  {
    "text": "back-end batching application and it's written in java and the rpm ui application is a",
    "start": "1853840",
    "end": "1859600"
  },
  {
    "text": "traditional web application that i'm actually using right now so we're we're looking at the web applications",
    "start": "1859600",
    "end": "1865519"
  },
  {
    "text": "performance so from there i'm also gonna i'm gonna",
    "start": "1865519",
    "end": "1870880"
  },
  {
    "text": "take it out to the mobile device where um as pierre was talking about",
    "start": "1870880",
    "end": "1876840"
  },
  {
    "text": "understanding that mobile device's performance to what traditionally was your web",
    "start": "1876840",
    "end": "1882000"
  },
  {
    "text": "application back end so the real story i'm going to have to start as the rpm ui",
    "start": "1882000",
    "end": "1889600"
  },
  {
    "text": "understanding just really where new relic started and then i'll switch on over to the mobile",
    "start": "1889600",
    "end": "1896480"
  },
  {
    "text": "so i've clicked here on",
    "start": "1896480",
    "end": "1900240"
  },
  {
    "text": "the overview of this rpm ui application again it's a ruby application the agents inside of the",
    "start": "1902720",
    "end": "1910720"
  },
  {
    "text": "inside of these six servers as you can see in the upper right here i'm looking",
    "start": "1910720",
    "end": "1916000"
  },
  {
    "text": "at a three hour period where we processed uh 19 almost 2 000 pages per",
    "start": "1916000",
    "end": "1922720"
  },
  {
    "text": "minute in under 2.3 seconds so the overview of this application we",
    "start": "1922720",
    "end": "1927760"
  },
  {
    "text": "understand how long it's taken to get requests out to the end users in a traditional website",
    "start": "1927760",
    "end": "1935559"
  },
  {
    "text": "so from here we're going to start diving down deep into the application so this",
    "start": "1935760",
    "end": "1942000"
  },
  {
    "text": "is the overview of all the pages around the world as you can see we've got a graph of",
    "start": "1942000",
    "end": "1948640"
  },
  {
    "text": "the relative performance around the globe and that's in the the map here",
    "start": "1948640",
    "end": "1954559"
  },
  {
    "text": "so that's out to the end users then the application backend is a ruby application and we can see over this",
    "start": "1957840",
    "end": "1964159"
  },
  {
    "text": "three hour period the performance of these 30 30 000 requests per minute across the",
    "start": "1964159",
    "end": "1971760"
  },
  {
    "text": "entire six servers took around 222 milliseconds now i can change the time frame and say okay well",
    "start": "1971760",
    "end": "1978080"
  },
  {
    "text": "let's just look at the last 60 minutes and understand okay well right now how many people are using new relic and how",
    "start": "1978080",
    "end": "1984399"
  },
  {
    "text": "many pages are we processing and you can see here we're processing pretty much the same",
    "start": "1984399",
    "end": "1990480"
  },
  {
    "text": "227 milliseconds for 31 000 requests per minute",
    "start": "1990480",
    "end": "1996080"
  },
  {
    "text": "so now we're going to dive in deep deeper",
    "start": "1997200",
    "end": "2001760"
  },
  {
    "text": "and my app does 20 30 40 different things it's processing all these different pages so now i'm going to",
    "start": "2003440",
    "end": "2009519"
  },
  {
    "text": "understand okay everybody around the world is getting their pages in 2.5 seconds and aggregate across my",
    "start": "2009519",
    "end": "2015840"
  },
  {
    "text": "application but what pages are slow what pages are fast what transactions are slow which ajax calls are slow it's",
    "start": "2015840",
    "end": "2023200"
  },
  {
    "text": "measuring everything and understanding the performance of the different calls to my back-end server",
    "start": "2023200",
    "end": "2030399"
  },
  {
    "text": "and what we can see here is the slowest or actually the most time-consuming transaction is this recent events",
    "start": "2030399",
    "end": "2036080"
  },
  {
    "text": "transaction if i uh if i click on that over on the right i will see the",
    "start": "2036080",
    "end": "2043279"
  },
  {
    "text": "understanding of how long it takes to process the recent events transaction on average it takes",
    "start": "2043279",
    "end": "2049358"
  },
  {
    "text": "700 and 800 milliseconds and it's called 900 times per minute",
    "start": "2049359",
    "end": "2054878"
  },
  {
    "text": "so now i'm getting a little deeper in understanding the different calls and how long they're taking and you can see",
    "start": "2054879",
    "end": "2060800"
  },
  {
    "text": "here that most of the time is spent is a layer graph most of the time spent in code but",
    "start": "2060800",
    "end": "2065839"
  },
  {
    "text": "there's a little bit of time in the database i can also get a breakdown table of the different",
    "start": "2065839",
    "end": "2072240"
  },
  {
    "text": "components in this transaction but really what we're really doing is we're going to get to this point where we've got a",
    "start": "2072240",
    "end": "2078638"
  },
  {
    "text": "transaction choice now transaction trace is an individual",
    "start": "2078639",
    "end": "2083839"
  },
  {
    "text": "call into the system a new relic presents a lot of information gathering it from many many data points you know",
    "start": "2083839",
    "end": "2090320"
  },
  {
    "text": "users around the world these six servers to make sense of these millions and thousands of data points we aggregate a",
    "start": "2090320",
    "end": "2097118"
  },
  {
    "text": "lot of data what's the performance of my application out to end users at the mobile device",
    "start": "2097119",
    "end": "2103359"
  },
  {
    "text": "what's the performance across all of my servers how well is this transaction being processed but a transaction trace",
    "start": "2103359",
    "end": "2109920"
  },
  {
    "text": "is an individual call that gives you actionable data about what actually happened when that call came into the",
    "start": "2109920",
    "end": "2115920"
  },
  {
    "text": "system so we can see here that this call happened just a few minutes ago it took",
    "start": "2115920",
    "end": "2122320"
  },
  {
    "text": "exactly 4.7 seconds to process on the server side",
    "start": "2122320",
    "end": "2128000"
  },
  {
    "text": "we can see how someone was calling this transaction they were this url was here and we've added some custom parameters",
    "start": "2128320",
    "end": "2134079"
  },
  {
    "text": "so we know exactly in production how this call came into the system and we click on the trace details we get",
    "start": "2134079",
    "end": "2141119"
  },
  {
    "text": "the call stack in production or what actually happened at time zero the call came in we spent uh 11",
    "start": "2141119",
    "end": "2147280"
  },
  {
    "text": "milliseconds 11 milliseconds doing these five fast things i called this specific database",
    "start": "2147280",
    "end": "2154720"
  },
  {
    "text": "call uh it took one millisecond so these things were not the slowdown in",
    "start": "2154720",
    "end": "2161760"
  },
  {
    "text": "terms of when this call why did this call take 4.7 seconds it took 4.7 seconds because we have this setup event",
    "start": "2161760",
    "end": "2168320"
  },
  {
    "text": "list set of functionality and we actually end up calling the database",
    "start": "2168320",
    "end": "2174720"
  },
  {
    "text": "several hundred times as i scroll down here it's an inefficient pattern and rail is pretty common because of or",
    "start": "2174720",
    "end": "2181040"
  },
  {
    "text": "mapping but as i can see here it took 4.7 seconds to call the database probably three four hundred times in and",
    "start": "2181040",
    "end": "2187920"
  },
  {
    "text": "of themselves this data call database called only took six milliseconds",
    "start": "2187920",
    "end": "2194400"
  },
  {
    "text": "that's not the problem it's the fact that i'm doing it 400 times ends up taking 4.7 seconds",
    "start": "2194560",
    "end": "2201560"
  },
  {
    "text": "so that's transaction trace functionality it really is that that meat and potatoes",
    "start": "2202400",
    "end": "2208880"
  },
  {
    "text": "what new relic does it gives you that deep visibility in your back end",
    "start": "2208880",
    "end": "2215160"
  },
  {
    "text": "so now let's step back and bring this back full circle to the",
    "start": "2215839",
    "end": "2221359"
  },
  {
    "text": "mobile yesterday new relic introduced a open",
    "start": "2221359",
    "end": "2227280"
  },
  {
    "text": "beta for our v2 of our mobile so i'm going to be sharing with you",
    "start": "2227280",
    "end": "2234240"
  },
  {
    "text": "what this new features that we just internet just announced will provide",
    "start": "2234240",
    "end": "2241960"
  },
  {
    "text": "um but before i get there the agents do have a built-in map",
    "start": "2242079",
    "end": "2247920"
  },
  {
    "text": "functionality and this is this is really going to paint the picture why i started with the back end",
    "start": "2247920",
    "end": "2254560"
  },
  {
    "text": "first so as we can see here the rpm ui application is sitting here in the middle and this map functionality",
    "start": "2254560",
    "end": "2261200"
  },
  {
    "text": "is automatically dynamically generated on actually what's coming into my application",
    "start": "2261200",
    "end": "2266640"
  },
  {
    "text": "and what my back-end or what my application is talking to and as we can see here we've got end",
    "start": "2266640",
    "end": "2272560"
  },
  {
    "text": "users which were what we talked about in the beginning what's the performance of my traditional web application out to",
    "start": "2272560",
    "end": "2279839"
  },
  {
    "text": "browsers around the world and we can see that's the same graph as we had before we can also see that there",
    "start": "2279839",
    "end": "2287440"
  },
  {
    "text": "is a there's a documentation application that gets information from my rpm ui which is",
    "start": "2287440",
    "end": "2292800"
  },
  {
    "text": "my my back-end application but we have a native mobile",
    "start": "2292800",
    "end": "2298400"
  },
  {
    "text": "solution where you can go to the app store you can look at all the new relic data directly from an ios device",
    "start": "2298400",
    "end": "2304880"
  },
  {
    "text": "so within that application the mobile device is talking and this is",
    "start": "2304880",
    "end": "2311839"
  },
  {
    "text": "the performance of the mobile device to our backend so that's you can see that in the map and how all these things are",
    "start": "2311839",
    "end": "2318000"
  },
  {
    "text": "interconnected if i click over here on the left on mobile you can see",
    "start": "2318000",
    "end": "2323359"
  },
  {
    "text": "that we at new relic are monitoring our own applications and we actually have a few demo ones the",
    "start": "2323359",
    "end": "2330400"
  },
  {
    "text": "production one is called the new relic for ios production it's it's basically",
    "start": "2330400",
    "end": "2335520"
  },
  {
    "text": "an app that you can go and you can look all this data into that application",
    "start": "2335520",
    "end": "2341838"
  },
  {
    "text": "we have installed our mobile monitoring sdk so what this is is for android or ios you",
    "start": "2341920",
    "end": "2350079"
  },
  {
    "text": "go to new relic you download into sdk you link it into your application",
    "start": "2350079",
    "end": "2356000"
  },
  {
    "text": "you uh compile a couple things and then uh once it gets released into the app",
    "start": "2356000",
    "end": "2362640"
  },
  {
    "text": "store you might have a hundred thousand million users our agent automatically is going to start collecting information",
    "start": "2362640",
    "end": "2368800"
  },
  {
    "text": "from those million devices and we'll collect and aggregate all that information for you so and present you",
    "start": "2368800",
    "end": "2375680"
  },
  {
    "text": "this data here so that's how that's the mechanics of",
    "start": "2375680",
    "end": "2381119"
  },
  {
    "text": "how we get our agent onto you know your application and when you're trying to understand i'm",
    "start": "2381119",
    "end": "2387440"
  },
  {
    "text": "trying to make my application as fast as possible first is just having the agent what is its current performance",
    "start": "2387440",
    "end": "2393920"
  },
  {
    "text": "and then you can work on this caching techniques to and you can use new relic to confirm",
    "start": "2393920",
    "end": "2400560"
  },
  {
    "text": "that hey we made this big change we spent a lot of effort in here and we can measurably",
    "start": "2400560",
    "end": "2405680"
  },
  {
    "text": "see a performance improvement in terms of our applications out on those devices",
    "start": "2405680",
    "end": "2412480"
  },
  {
    "text": "so i'm going to jump in here once you have the agent on those devices",
    "start": "2412720",
    "end": "2418160"
  },
  {
    "text": "it's out there in the wild you can this is the kind of measurements you can get you can see that over the",
    "start": "2418160",
    "end": "2427680"
  },
  {
    "text": "last 60 minutes we had 24 active 25 active users",
    "start": "2427680",
    "end": "2432800"
  },
  {
    "text": "using our application and this is how they're and where are they in the world got the performance",
    "start": "2432800",
    "end": "2439359"
  },
  {
    "text": "around the world and they're talking to different back-end systems right generally when we write these mobile",
    "start": "2439359",
    "end": "2445280"
  },
  {
    "text": "applications they need to get data from certain places our application is kind of small here",
    "start": "2445280",
    "end": "2451119"
  },
  {
    "text": "talks to gravatar talks to staging.newrelic.com and it also stock talks to",
    "start": "2451119",
    "end": "2457200"
  },
  {
    "text": "apinenewalk.com",
    "start": "2457200",
    "end": "2460200"
  },
  {
    "text": "if we go to the network which was a big focus of this right anytime i have to go",
    "start": "2463280",
    "end": "2469520"
  },
  {
    "text": "and get something from the back end how long does it take well we can see across these 25 users",
    "start": "2469520",
    "end": "2475280"
  },
  {
    "text": "on average it takes 1.4 seconds to get a response back network wise",
    "start": "2475280",
    "end": "2481200"
  },
  {
    "text": "from gravatar and from new relic to get the data to fill the new relic charts about how my",
    "start": "2481200",
    "end": "2486640"
  },
  {
    "text": "web application is performing on average it's taking 1.4 seconds",
    "start": "2486640",
    "end": "2492160"
  },
  {
    "text": "but because i have an agent in that back end here",
    "start": "2492160",
    "end": "2497039"
  },
  {
    "text": "i can see right here that i'm talking to rpm ui",
    "start": "2497280",
    "end": "2504240"
  },
  {
    "text": "and i can see that the slowest call overall is this components controller index it's kind of",
    "start": "2504240",
    "end": "2509440"
  },
  {
    "text": "hard to read a little small but this is the performance when somebody is using the device and they're trying to get the",
    "start": "2509440",
    "end": "2518000"
  },
  {
    "text": "performance from the components this is how long it's taking to get a response back from that back end tier",
    "start": "2518000",
    "end": "2524800"
  },
  {
    "text": "and since i do have an agent on that back end i can actually drill what was the performance of this",
    "start": "2524800",
    "end": "2531040"
  },
  {
    "text": "person's device getting some information and i can drill back down into the transactions",
    "start": "2531040",
    "end": "2538240"
  },
  {
    "text": "that's on the server side so there's a nice connection between",
    "start": "2538240",
    "end": "2544800"
  },
  {
    "text": "what i traditionally wrote for just an end user's uh browser",
    "start": "2545200",
    "end": "2550480"
  },
  {
    "text": "i can see that same interaction from a mobile device down to that",
    "start": "2550480",
    "end": "2555520"
  },
  {
    "text": "the back end here and maybe you can see that the users on the mobile device are having a poor",
    "start": "2555520",
    "end": "2560640"
  },
  {
    "text": "experience because the database is really really slow so you just connect all the dots together",
    "start": "2560640",
    "end": "2567119"
  },
  {
    "text": "so that is there's a lot more features in terms of our mobile monitoring in terms of our",
    "start": "2569599",
    "end": "2574720"
  },
  {
    "text": "back end we've got you know how fast is version x performing how fast is version y",
    "start": "2574720",
    "end": "2580880"
  },
  {
    "text": "performing what is the os metrics how well does my app run on ios 701",
    "start": "2580880",
    "end": "2589040"
  },
  {
    "text": "versus 702 for example can do all these comparisons because we're gathering all these data points",
    "start": "2589040",
    "end": "2596560"
  },
  {
    "text": "the first version of new relic basically focused on that network performance the",
    "start": "2598000",
    "end": "2603040"
  },
  {
    "text": "v2 that we announced for beta yesterday and you can go to the site right now",
    "start": "2603040",
    "end": "2608960"
  },
  {
    "text": "sign up for a free 30-day trial a new relic you can download the sdk and get the new version here",
    "start": "2608960",
    "end": "2615920"
  },
  {
    "text": "focuses on what we call interactions the biggest feature is interactions so instead of just knowing how long did it",
    "start": "2615920",
    "end": "2623040"
  },
  {
    "text": "take to you know for network packets to get back and forth uh when i made specific api calls",
    "start": "2623040",
    "end": "2630319"
  },
  {
    "text": "how long did it take when i pushed this button for it to get that information and then render on the screen",
    "start": "2630319",
    "end": "2636400"
  },
  {
    "text": "so these are called interactions and it's it's different than the transaction trace that i showed you because the",
    "start": "2636400",
    "end": "2641680"
  },
  {
    "text": "transaction trace is a single threaded operation where you're processing a request talking to",
    "start": "2641680",
    "end": "2648160"
  },
  {
    "text": "the database talking to paypal finishing the request and building a page and sending it to the end user that's what",
    "start": "2648160",
    "end": "2654400"
  },
  {
    "text": "the that's what these back-end servers are doing on a mobile device you have access",
    "start": "2654400",
    "end": "2660319"
  },
  {
    "text": "to fire off threads and basically do a whole lot of",
    "start": "2660319",
    "end": "2665599"
  },
  {
    "text": "managing of layouts and then the end result is you get a rendered screen so there's a little bit more going on",
    "start": "2665599",
    "end": "2672800"
  },
  {
    "text": "so what i have here so when i click um the app interactions",
    "start": "2672800",
    "end": "2680318"
  },
  {
    "text": "basically we're going to start and stop timers on mobile devices particular functionality",
    "start": "2680800",
    "end": "2686000"
  },
  {
    "text": "i really like uber so i always like to use the example of what would be the amount of time it",
    "start": "2686000",
    "end": "2691920"
  },
  {
    "text": "would take if i click the uber button and how long does it that interaction take",
    "start": "2691920",
    "end": "2697119"
  },
  {
    "text": "until it comes back and say hey your uber is arriving or it's been picked out and it'll be there in five minutes",
    "start": "2697119",
    "end": "2704800"
  },
  {
    "text": "and that's what the interactions are a measurement of um",
    "start": "2704800",
    "end": "2710560"
  },
  {
    "text": "i gonna switch here to um oh here we go so over the last 24 hours these are the",
    "start": "2710560",
    "end": "2716640"
  },
  {
    "text": "different interactions that we've had if you did load these are just the names",
    "start": "2716640",
    "end": "2721760"
  },
  {
    "text": "of our transactions not super helpful in terms of",
    "start": "2721760",
    "end": "2726800"
  },
  {
    "text": "what might mean something to you but this is pretty neat this is uh one",
    "start": "2727440",
    "end": "2733119"
  },
  {
    "text": "of the calls that came through yesterday and you can see the interaction of the memory",
    "start": "2733119",
    "end": "2739599"
  },
  {
    "text": "so when we talk about caching like what was the effect of",
    "start": "2739599",
    "end": "2746640"
  },
  {
    "text": "calling this transaction on the memory of the device we can see the interaction the memory",
    "start": "2746640",
    "end": "2752560"
  },
  {
    "text": "the interaction the cpu at time zero we started this interaction we have a main",
    "start": "2752560",
    "end": "2757920"
  },
  {
    "text": "thread and then it fired off six different threads",
    "start": "2757920",
    "end": "2764480"
  },
  {
    "text": "paused in terms of its interaction it took exactly two seconds to do this interaction",
    "start": "2765520",
    "end": "2772560"
  },
  {
    "text": "and as you can see um we fired off these threads they did this call stack here that was basically uh dispatching so for",
    "start": "2772560",
    "end": "2780079"
  },
  {
    "text": "some information further on down here we made a network call it took",
    "start": "2780079",
    "end": "2787039"
  },
  {
    "text": "at um point uh it took 200 milliseconds to call on the back-end server",
    "start": "2787520",
    "end": "2793359"
  },
  {
    "text": "we fired once we got that off we fired off another thread to help render this it's a layout",
    "start": "2793359",
    "end": "2799920"
  },
  {
    "text": "once it's laid once it was laid out and rendered that interaction was done",
    "start": "2799920",
    "end": "2806160"
  },
  {
    "text": "so so all these things pieced together to understand okay across let's imagine if",
    "start": "2807680",
    "end": "2814960"
  },
  {
    "text": "you would you you release your app to the app store you have you have a really big success and you",
    "start": "2814960",
    "end": "2821359"
  },
  {
    "text": "have a million people using device we can understand each one of the interactions across those million devices how long does it",
    "start": "2821359",
    "end": "2827760"
  },
  {
    "text": "take on average and then we're going to pull out individual interactions and give you that visibility say i can see",
    "start": "2827760",
    "end": "2834480"
  },
  {
    "text": "at time zero these are calling in and i keep seeing myself going back calling network",
    "start": "2834480",
    "end": "2840559"
  },
  {
    "text": "using the network to pull back a picture my profile picture why don't i",
    "start": "2840559",
    "end": "2846160"
  },
  {
    "text": "make a change to cache that data and then",
    "start": "2846160",
    "end": "2852160"
  },
  {
    "text": "use new relic once you make that change you can come back and say okay we may we have a marked improvement because we",
    "start": "2852160",
    "end": "2857920"
  },
  {
    "text": "cached that we went from three seconds for this interaction down to two seconds and we can confirm that we're not going",
    "start": "2857920",
    "end": "2864640"
  },
  {
    "text": "back and getting that data from the back end here that's really kind of tying it all together um i believe we're going to",
    "start": "2864640",
    "end": "2871599"
  },
  {
    "text": "open it up for questions two minutes i only have two minutes left",
    "start": "2871599",
    "end": "2876640"
  },
  {
    "text": "if you have any questions about new relic or caching we can field any of those",
    "start": "2876640",
    "end": "2883880"
  },
  {
    "text": "doesn't look like anyone's got any questions today so thank you very much for your time we appreciate it",
    "start": "2888079",
    "end": "2896440"
  }
]