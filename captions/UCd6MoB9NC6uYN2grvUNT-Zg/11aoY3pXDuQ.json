[
  {
    "text": "hello everybody how was the keynote for you guys good cool thank you very very much",
    "start": "8599",
    "end": "17560"
  },
  {
    "text": "uh for attending uh AWS uh New York Summit uh I'm super excited to be here",
    "start": "17560",
    "end": "23760"
  },
  {
    "text": "uh and and especially because it's not only New York but also the fact that I",
    "start": "23760",
    "end": "29199"
  },
  {
    "text": "get to speak about the topic that I'm really passionate about uh which is which is optimizing for cost uh in the",
    "start": "29199",
    "end": "36680"
  },
  {
    "text": "AWS Cloud uh so welcome to the technical track there are going to be lots of uh",
    "start": "36680",
    "end": "41879"
  },
  {
    "text": "uh great technical uh speakers solution Architects evangelists coming in and talking about variety of different ways",
    "start": "41879",
    "end": "48840"
  },
  {
    "text": "you can architect for scale for high availability for for disaster recy and",
    "start": "48840",
    "end": "54480"
  },
  {
    "text": "so forth so uh stay tuned and there is plenty of opportunity to ask questions",
    "start": "54480",
    "end": "60199"
  },
  {
    "text": "uh maybe after the session at the AWS Lounge uh at the partner expo hall and",
    "start": "60199",
    "end": "65799"
  },
  {
    "text": "we would love to gather your feedback and if you have any questions concerns feature requests feel free to reach out",
    "start": "65799",
    "end": "72080"
  },
  {
    "text": "to us um I have been at Amazon web services uh since almost 6 years now",
    "start": "72080",
    "end": "77400"
  },
  {
    "text": "I've been focusing um I'm a technology evangelist and focusing on a variety of different application and I love to uh",
    "start": "77400",
    "end": "85119"
  },
  {
    "text": "my my passion lies in architecture and Cloud architectures so I've written a couple of white paper that most of you",
    "start": "85119",
    "end": "90840"
  },
  {
    "text": "might have got a chance to read just Google for cloud architectures uh the first link would come up or or maybe",
    "start": "90840",
    "end": "97799"
  },
  {
    "text": "architecting U best architecture best practices which will which will tell you a few uh white papers that we have",
    "start": "97799",
    "end": "104360"
  },
  {
    "text": "written and also there is AWS architecture uh Center which will give",
    "start": "104360",
    "end": "109399"
  },
  {
    "text": "you more details about the data however I'm going to for there are",
    "start": "109399",
    "end": "114840"
  },
  {
    "text": "when it comes to Cloud there are multiple different ways and multiple",
    "start": "114840",
    "end": "119920"
  },
  {
    "text": "different dimensions to optimize um in this talk I'm going to focus only on one",
    "start": "119920",
    "end": "125880"
  },
  {
    "text": "which is now optimizing for cost how do you architect for spend how do you make",
    "start": "125880",
    "end": "131599"
  },
  {
    "text": "sure that you can know further save from what you have been uh you have",
    "start": "131599",
    "end": "137560"
  },
  {
    "text": "implemented in in your architecture in a variety of different ways now cloud computing there's no doubt that it saves",
    "start": "137560",
    "end": "146080"
  },
  {
    "text": "uh know lot of money for the customers who who who move in into the cloud from an when you compare it from an on-",
    "start": "146080",
    "end": "152000"
  },
  {
    "text": "premise setup however now when you optimize and when you further optimize into into your architecture this gives",
    "start": "152000",
    "end": "159360"
  },
  {
    "text": "you enormous flexibility as well as enormous power to the hands of a developer to make a significant impact",
    "start": "159360",
    "end": "166519"
  },
  {
    "text": "on the uh on the bottom line of the of of the business itself in terms of savings and this is what I really love",
    "start": "166519",
    "end": "173599"
  },
  {
    "text": "about Cloud that it really the architect can actually know think about how we can",
    "start": "173599",
    "end": "178920"
  },
  {
    "text": "save money while not cutting corners on security scalability availability and",
    "start": "178920",
    "end": "185440"
  },
  {
    "text": "all the other aspects about about go so the one thing which I absolutely love",
    "start": "185440",
    "end": "191879"
  },
  {
    "text": "about the fact that when you turn off resources you stop paying for them and",
    "start": "191879",
    "end": "198799"
  },
  {
    "text": "that has been the fundamental you know ways of how you can save on on the cloud",
    "start": "198799",
    "end": "204720"
  },
  {
    "text": "and you saw in the keynote uh with Pinterest of how they are optimizing for C and Avail I'm going to talk about",
    "start": "204720",
    "end": "211480"
  },
  {
    "text": "these different uh variety of different strategies and five takeaways that you can take home when you're optimizing for",
    "start": "211480",
    "end": "219239"
  },
  {
    "text": "cost and what I have seen and when I talk to variety of different customers and I've gathered some of their design",
    "start": "219239",
    "end": "225599"
  },
  {
    "text": "patterns and best practices from we learn from our customers as well uh that as you continuously optimize there are",
    "start": "225599",
    "end": "232959"
  },
  {
    "text": "different ways to continuously integrate continuously optimize as well as continuous deployment now you can see",
    "start": "232959",
    "end": "240040"
  },
  {
    "text": "recurring Savings in your as early as your next one's bill right so that's the",
    "start": "240040",
    "end": "245239"
  },
  {
    "text": "best part if you implement a cashing service and reduce the number of requests to the database or the io you",
    "start": "245239",
    "end": "250760"
  },
  {
    "text": "see immediate savings as early as your next month Bill and that you can say",
    "start": "250760",
    "end": "255879"
  },
  {
    "text": "with the developer in when to to your manager or or a business owner that",
    "start": "255879",
    "end": "261320"
  },
  {
    "text": "that's what know have cost has has made uh your dramatic savings for your bill",
    "start": "261320",
    "end": "268919"
  },
  {
    "text": "and elastic is the fundamental property of the cloud which drives most of the economic benefits so let me dive into a",
    "start": "268919",
    "end": "275320"
  },
  {
    "text": "few of these simple you know very easy to grasp optimizing for cost strategies",
    "start": "275320",
    "end": "281479"
  },
  {
    "text": "the first one which is obvious in this scenario that now you only use what you",
    "start": "281479",
    "end": "286759"
  },
  {
    "text": "what you need you only um you turn off anything excess that you have and kind",
    "start": "286759",
    "end": "293880"
  },
  {
    "text": "of automate those aspects in a variety of different ways uh and and there are",
    "start": "293880",
    "end": "299120"
  },
  {
    "text": "variety different ways customers have done it there are variety of different strategies that we recommend and then",
    "start": "299120",
    "end": "305880"
  },
  {
    "text": "there are amazing amount of creativity that that that can go into building uh",
    "start": "305880",
    "end": "311199"
  },
  {
    "text": "applications that will uh that will um uh scale and optimize so first thing",
    "start": "311199",
    "end": "316600"
  },
  {
    "text": "when I see is optimize by the time of the day now when you see every single",
    "start": "316600",
    "end": "321840"
  },
  {
    "text": "web application or I would say most of the web application has some sort of uh",
    "start": "321840",
    "end": "327280"
  },
  {
    "text": "spikiness they have applications that Peak During certain time of the day and",
    "start": "327280",
    "end": "332880"
  },
  {
    "text": "and then and and know and they are no going down the traffic goes down at a",
    "start": "332880",
    "end": "338080"
  },
  {
    "text": "certain time of the day and you will see as you saw in Pinterest as well in the in the keynote that if you provision for",
    "start": "338080",
    "end": "345639"
  },
  {
    "text": "p capacity which is the normal case in the scenario and typically people spend a lot of time trying to predict that GED",
    "start": "345639",
    "end": "353520"
  },
  {
    "text": "line that they see right so in order to really see and understand the value the",
    "start": "353520",
    "end": "359000"
  },
  {
    "text": "the the that that the cloud can provide is that is that you can see significant",
    "start": "359000",
    "end": "364520"
  },
  {
    "text": "savings when you are aligning your traffic as closely as your demand and",
    "start": "364520",
    "end": "370919"
  },
  {
    "text": "and there are IM there are cool ways to do that too so there are the first strategy that I see with customers is",
    "start": "370919",
    "end": "377680"
  },
  {
    "text": "they are optimizing by the time of the day so a typical example here when you",
    "start": "377680",
    "end": "383039"
  },
  {
    "text": "have a simple 3D web application with with uh know um web application web",
    "start": "383039",
    "end": "388680"
  },
  {
    "text": "servers servers and database servers you can actually build websites that sleep",
    "start": "388680",
    "end": "394080"
  },
  {
    "text": "at night essentially shrink when when they don't need to be running so from a",
    "start": "394080",
    "end": "400479"
  },
  {
    "text": "six server web app web server uh Fleet you can shrink to a two server Fleet and",
    "start": "400479",
    "end": "406280"
  },
  {
    "text": "run minimum servers that you need to run during the night time and nobody's accessing it so so know just you know",
    "start": "406280",
    "end": "414120"
  },
  {
    "text": "shrinking your web servers or app servers will automatically give you the savings that you need and and that can",
    "start": "414120",
    "end": "419919"
  },
  {
    "text": "be achieved through you know multiple different ways and one of the ways is Autos scaling which I talk about in in",
    "start": "419919",
    "end": "426039"
  },
  {
    "text": "in two in two minutes the other strategy that I see which is sort of optimizing",
    "start": "426039",
    "end": "431199"
  },
  {
    "text": "by the time of the year like if you have an application that you are expecting to",
    "start": "431199",
    "end": "436680"
  },
  {
    "text": "let's say a tax application which will Peak during the uh during the April time frame or you have an e-commerce",
    "start": "436680",
    "end": "442879"
  },
  {
    "text": "application which will Peak during during um the December and November time frame if you have a promot otal campaign",
    "start": "442879",
    "end": "450400"
  },
  {
    "text": "that you know that it's going to run uh at a certain given point of time and your your application needs to handle",
    "start": "450400",
    "end": "457639"
  },
  {
    "text": "that amount of demand or if you have know an application which is just going to know um know you don't know it's just",
    "start": "457639",
    "end": "465120"
  },
  {
    "text": "going to be uncertain you don't know how much traffic you will you are going to have that all these strategies when you",
    "start": "465120",
    "end": "471000"
  },
  {
    "text": "kind of combine you optimize during the year you you can also see the same effect while in instead of um optimizing",
    "start": "471000",
    "end": "478919"
  },
  {
    "text": "for 3p capacity you essentially optimize for now only during that time frame when",
    "start": "478919",
    "end": "484240"
  },
  {
    "text": "you run those applications when you need it you have significant savings so how can you achieve that what are the",
    "start": "484240",
    "end": "491319"
  },
  {
    "text": "different ways customers are leveraging one of the ways is autoscaling autoscaling is a service where it you",
    "start": "491319",
    "end": "499879"
  },
  {
    "text": "provision a simple Autos scaling group uh or or you specify in the console uh",
    "start": "499879",
    "end": "506039"
  },
  {
    "text": "or your autoscaling uh settings if you're running AWS bean stock or you can",
    "start": "506039",
    "end": "511840"
  },
  {
    "text": "specify through the command line tools that now I want to have a launch configuration of uh which defines your",
    "start": "511840",
    "end": "519200"
  },
  {
    "text": "which Amazon machine image you want to you want to provision uh which how what is the minimum number of ac2 instances I",
    "start": "519200",
    "end": "525720"
  },
  {
    "text": "would like to have in a Autos scaling group what is the maximum number of ec2 instances I would like to have and then",
    "start": "525720",
    "end": "531279"
  },
  {
    "text": "you specify your your minimum threshold and the maximum threshold of your uh",
    "start": "531279",
    "end": "537680"
  },
  {
    "text": "triggers um so that that means that I can set up very quickly that if the",
    "start": "537680",
    "end": "543560"
  },
  {
    "text": "utilization or the aggregate or average utilization of my entire ec2 fleet which",
    "start": "543560",
    "end": "549000"
  },
  {
    "text": "are in this autoscaling group now the the CPU utilization goes above 85% and",
    "start": "549000",
    "end": "555440"
  },
  {
    "text": "it stays there for five minutes cause an alarm or trigger and by trigger you can",
    "start": "555440",
    "end": "562560"
  },
  {
    "text": "specify how you want to actually scale you can scale by schedule or you can",
    "start": "562560",
    "end": "568120"
  },
  {
    "text": "scale by policies scaling by schedule is essentially during a particular time of",
    "start": "568120",
    "end": "573959"
  },
  {
    "text": "the day now during the particular time of the event that is going to happen or",
    "start": "573959",
    "end": "579120"
  },
  {
    "text": "or the promotional campaign that you are running and you need to you need to make sure that you have enough capacity know",
    "start": "579120",
    "end": "585160"
  },
  {
    "text": "10 10 minutes before or 10 hours before the actual promotional email goes out to",
    "start": "585160",
    "end": "591079"
  },
  {
    "text": "all your customers right scaling by policy is is really saying that I want",
    "start": "591079",
    "end": "596200"
  },
  {
    "text": "to double my capacity or I want to increase my Capac capacity by 20% or 50%",
    "start": "596200",
    "end": "601519"
  },
  {
    "text": "or 100% And increment in a steps of five or 10 based on based on your",
    "start": "601519",
    "end": "607399"
  },
  {
    "text": "requirements right so what this allows you to do is by specifying the launch configuration autoscaling service will",
    "start": "607399",
    "end": "615079"
  },
  {
    "text": "monitor your resources make sure that the load balancer as well as the cloud",
    "start": "615079",
    "end": "620720"
  },
  {
    "text": "watch which is the monitoring service connects together as well as gives you that that level of automatically scaling",
    "start": "620720",
    "end": "627720"
  },
  {
    "text": "as you as you grow grow as your CPU utilization grows um there are multiple",
    "start": "627720",
    "end": "633440"
  },
  {
    "text": "different dimensions and triggers that you can set on you can uh there is a way by which you can within the cloudwatch",
    "start": "633440",
    "end": "640560"
  },
  {
    "text": "alarms there is way by which you can have a custom metrix feature uh so you",
    "start": "640560",
    "end": "645760"
  },
  {
    "text": "can specify your own metrics based on like number of hits per second for your",
    "start": "645760",
    "end": "651480"
  },
  {
    "text": "uh web server or your application Matrix or or Java Heap size or whatever that",
    "start": "651480",
    "end": "658480"
  },
  {
    "text": "you are measuring on H you can specify that have Cloud watch uh meter those and",
    "start": "658480",
    "end": "664680"
  },
  {
    "text": "and and and record those and create a trigger based on that and then Scale",
    "start": "664680",
    "end": "670800"
  },
  {
    "text": "based on that particular trigger so how Cloud Watch Works is cloud watch load",
    "start": "670800",
    "end": "676480"
  },
  {
    "text": "balancing and auto scaling all works works together to create that effect that you need when you want to scale",
    "start": "676480",
    "end": "684880"
  },
  {
    "text": "horizontally so uh there are variety of different practices that I see when lot",
    "start": "684880",
    "end": "690680"
  },
  {
    "text": "of customers as typically uh also have there are few which we have published",
    "start": "690680",
    "end": "696040"
  },
  {
    "text": "there are few that are published by our customers too uh one one that I see most",
    "start": "696040",
    "end": "701200"
  },
  {
    "text": "often being used is leveraging autoscaling tags so tagging allows you to identify and provide multiple",
    "start": "701200",
    "end": "708240"
  },
  {
    "text": "different Autos scaling groups for different Le different Fleet size on your on your same application and you",
    "start": "708240",
    "end": "715200"
  },
  {
    "text": "can specify multiple Auto scaling that will give you ability to know kind of query them understand what you want and",
    "start": "715200",
    "end": "722200"
  },
  {
    "text": "then resume and suspend those processes in case you don't want to uh know uh",
    "start": "722200",
    "end": "727600"
  },
  {
    "text": "trigger those those autoscaling groups in in certain cases this we hear a lot of feedback from",
    "start": "727600",
    "end": "733279"
  },
  {
    "text": "them the other areas which I like to um focus on is the fact that you can have",
    "start": "733279",
    "end": "739760"
  },
  {
    "text": "scale up and scale down symmetrically so if you are scaling up by 20% uh for your",
    "start": "739760",
    "end": "746480"
  },
  {
    "text": "ec2 instance Fleet and so also scale back down by 20% so you don't uh AO to",
    "start": "746480",
    "end": "753160"
  },
  {
    "text": "avoid situations like capacity trashing what Netflix calls uh capacity trashing",
    "start": "753160",
    "end": "759279"
  },
  {
    "text": "essentially is that you have more capacity than you need and then you don't know how many how how many ec2",
    "start": "759279",
    "end": "764680"
  },
  {
    "text": "instances have actually gone down the third best practice that I see most of the time that people use is as you saw",
    "start": "764680",
    "end": "771880"
  },
  {
    "text": "in Pinterest presentation also they have a buffer maintained between your demand as well as your uh ex um",
    "start": "771880",
    "end": "779839"
  },
  {
    "text": "existing uh traffic that buffer is really around 20 to 25% in order to just",
    "start": "779839",
    "end": "786560"
  },
  {
    "text": "make sure that you have if in case you get a big peak uh during that uh during this short amount of time you have",
    "start": "786560",
    "end": "793839"
  },
  {
    "text": "enough buffer in space in in time so that your ec2 instances um take around",
    "start": "793839",
    "end": "800079"
  },
  {
    "text": "two or three minutes uh to to launch it it has uh know the the required time to",
    "start": "800079",
    "end": "806760"
  },
  {
    "text": "meet that particular demand uh Autos scaling can span across multiple availability zones and that",
    "start": "806760",
    "end": "814279"
  },
  {
    "text": "that is uh introducing some variety of different ways of um or of architecting",
    "start": "814279",
    "end": "820440"
  },
  {
    "text": "you have to make sure that you have enough capacity to to have in your availability Zone by making sure that",
    "start": "820440",
    "end": "826760"
  },
  {
    "text": "either you are guaranteeing that capacity by reserved instances by purchasing reserved instances or you are",
    "start": "826760",
    "end": "834320"
  },
  {
    "text": "having an ability to create a um an autoscaling group group that will that",
    "start": "834320",
    "end": "840560"
  },
  {
    "text": "will use some of the know different strategies which I discussed from from spot instances",
    "start": "840560",
    "end": "846880"
  },
  {
    "text": "side one of the Hidden best practice or the hidden feature of autoscaling group",
    "start": "846880",
    "end": "852720"
  },
  {
    "text": "is that it will if you specify the minimum number of ec2 instances that is that you need it will it will make sure",
    "start": "852720",
    "end": "860320"
  },
  {
    "text": "that it maintains the healthy state of your autoscaling group so it automatically self heals the application",
    "start": "860320",
    "end": "867519"
  },
  {
    "text": "in a way because specifying minimum uh let's say two instances or minimum one",
    "start": "867519",
    "end": "873360"
  },
  {
    "text": "instance as soon as it finds that the ec2 instance has has died or it's terminated it will automatically bring",
    "start": "873360",
    "end": "880639"
  },
  {
    "text": "that up again and and uh and make sure it maintains that inner Fleet so so it's a great way to make sure that you have",
    "start": "880639",
    "end": "888279"
  },
  {
    "text": "Auto Autos scaling not only for uh scaling up or scaling down but also for",
    "start": "888279",
    "end": "894000"
  },
  {
    "text": "now um self-healing site of application so you automatically fail over into a",
    "start": "894000",
    "end": "899959"
  },
  {
    "text": "newer instance so a typical example that I I like to uh highlight is so you can",
    "start": "899959",
    "end": "906399"
  },
  {
    "text": "specify these types of rules right as in scale up by 10% if the CPU utilization is greater than you know",
    "start": "906399",
    "end": "913399"
  },
  {
    "text": "60% um aggregate CPU across all your Fleet and then for five minutes and then",
    "start": "913399",
    "end": "920399"
  },
  {
    "text": "scale down by 10% if the CP utilization is less than 30% so if you I typically",
    "start": "920399",
    "end": "927320"
  },
  {
    "text": "like 20% threshold uh to be maintained above your uh from your Peak from",
    "start": "927320",
    "end": "933759"
  },
  {
    "text": "desired through uh desired uh level so in order so that you maintain that",
    "start": "933759",
    "end": "939199"
  },
  {
    "text": "particular buffer and also as I mentioned 10% and 10% remain the same so you're symmetrically scaling up and",
    "start": "939199",
    "end": "945199"
  },
  {
    "text": "scaling down and then know you're scaling up early so you have between if",
    "start": "945199",
    "end": "951279"
  },
  {
    "text": "five minutes is the trigger you want to stay that to five minutes you create that level and then up to 10 20 minutes",
    "start": "951279",
    "end": "957519"
  },
  {
    "text": "you are scaling down slowly so you in case you need the capacity when you need",
    "start": "957519",
    "end": "962600"
  },
  {
    "text": "and traffic goes up you have an ability to scale up uh quickly as well so this",
    "start": "962600",
    "end": "968040"
  },
  {
    "text": "is one typical best practice that a lot of customers uh take advantage of when they when they leverage this is the",
    "start": "968040",
    "end": "974120"
  },
  {
    "text": "graph of of Netflix now how do you optimize for cost",
    "start": "974120",
    "end": "980440"
  },
  {
    "text": "and how do you optimize this in sort of a data center or an on premise setup today it's not possible Right in an in",
    "start": "980440",
    "end": "988199"
  },
  {
    "text": "an to setup you what you're seeing on the upper graph here is they have this aggregate C CPU of all the instances",
    "start": "988199",
    "end": "994720"
  },
  {
    "text": "that are running on the web server Fleet and these is their step up approach of how many instances they are running and",
    "start": "994720",
    "end": "1000800"
  },
  {
    "text": "as you can see it completely mimics your your traffic as well to have a bit buffer in between so in it it it all",
    "start": "1000800",
    "end": "1009279"
  },
  {
    "text": "these white space that you see essentially is um um is cost savings",
    "start": "1009279",
    "end": "1015079"
  },
  {
    "text": "because you're only running your infrastructure when you need it so that's one of the know simple uh tool or",
    "start": "1015079",
    "end": "1022920"
  },
  {
    "text": "ways in which customers are optimizing for cost and I highly encourage you to invest more time in in know thinking",
    "start": "1022920",
    "end": "1030400"
  },
  {
    "text": "about autoscaling and and creating a way so that you can also save and further reduce your cost the other strategy that",
    "start": "1030400",
    "end": "1037959"
  },
  {
    "text": "I see most of the time is optimizing during the time of the month so if you have let's say a database instance uh",
    "start": "1037959",
    "end": "1045000"
  },
  {
    "text": "which is running uh uh which is running which you need to run U for a web application or",
    "start": "1045000",
    "end": "1052280"
  },
  {
    "text": "running different reports and you want to run reports at the end of the month or you want to do an indexing job at the",
    "start": "1052280",
    "end": "1058160"
  },
  {
    "text": "end of the month so instead of provisioning for Peak capacity or provisioning a higher ec2 instance or",
    "start": "1058160",
    "end": "1064280"
  },
  {
    "text": "RDS instance in this scenario you are know you're you're specifying you're",
    "start": "1064280",
    "end": "1069840"
  },
  {
    "text": "only you're running a smaller instance during that time and only upgrading or scaling up vertically uh during that 3 4",
    "start": "1069840",
    "end": "1078400"
  },
  {
    "text": "4 hour time frame uh or or 3 four days time frame and then you will see significant savings because you're",
    "start": "1078400",
    "end": "1084559"
  },
  {
    "text": "running a lower in lower instance type for the rest of the for most of the month and then only scaling up uh",
    "start": "1084559",
    "end": "1091919"
  },
  {
    "text": "vertically when you need it and this literally happens within one click in the in Amazon RDS so you you specify",
    "start": "1091919",
    "end": "1100320"
  },
  {
    "text": "your Amazon RDS uh database you click on it and you have modified AB instance and",
    "start": "1100320",
    "end": "1105760"
  },
  {
    "text": "then you can specify and change your instance type it will go and know do the magic behind the scenes they'll snapshot",
    "start": "1105760",
    "end": "1112600"
  },
  {
    "text": "it get the data put it on the newer instance type and then reload so so it's",
    "start": "1112600",
    "end": "1118120"
  },
  {
    "text": "a it's a great way to to make sure that you're you're you're know saving on",
    "start": "1118120",
    "end": "1123240"
  },
  {
    "text": "optimizing on that cost as well so one other benefit of um turning",
    "start": "1123240",
    "end": "1130360"
  },
  {
    "text": "off when you don't need it is that you have reminder scripts right and the these are obvious things to do which are",
    "start": "1130360",
    "end": "1137919"
  },
  {
    "text": "uh which which I think most of you might already be doing but know make making sure that you know you don't have any",
    "start": "1137919",
    "end": "1143400"
  },
  {
    "text": "unused eips your unassociated e EBS volumes are terminated you have you are",
    "start": "1143400",
    "end": "1148440"
  },
  {
    "text": "leveraging things like S3 object expiration and other features that are there which will help you and you can",
    "start": "1148440",
    "end": "1154559"
  },
  {
    "text": "automate this whole process very very easily one of the interesting ideas that",
    "start": "1154559",
    "end": "1159600"
  },
  {
    "text": "I came across with one of the um customers was leveraging custom metrics",
    "start": "1159600",
    "end": "1165679"
  },
  {
    "text": "featured for cloud watch to actually scale down uh and on saving when you",
    "start": "1165679",
    "end": "1171360"
  },
  {
    "text": "don't need it so it measures your free CPU your free free hard disk and your at",
    "start": "1171360",
    "end": "1176520"
  },
  {
    "text": "at one minute time intervals and you shove it inside the uh custom metric",
    "start": "1176520",
    "end": "1181880"
  },
  {
    "text": "feature Uh custom metric for cloudwatch and then there you go you have like oh I want to just com know downgrade my ec2",
    "start": "1181880",
    "end": "1188960"
  },
  {
    "text": "instance from a large instance to a small instance with this cloud formation script so that's another interesting",
    "start": "1188960",
    "end": "1196640"
  },
  {
    "text": "ideas and creativity that emerge due to this um new ways of of uh know building",
    "start": "1196640",
    "end": "1204080"
  },
  {
    "text": "architectures so that's that's just one obvious best practice around Autos",
    "start": "1204080",
    "end": "1209320"
  },
  {
    "text": "scaling and I would highly recommend you to invest more time in Autos scaling the second one which is uh which is",
    "start": "1209320",
    "end": "1216240"
  },
  {
    "text": "important to understand and this is also given that reserved instances are a great way to further reduce your cost",
    "start": "1216240",
    "end": "1224360"
  },
  {
    "text": "and then I will quickly go into this most of you already know about the these are that that if you have Baseline",
    "start": "1224360",
    "end": "1230679"
  },
  {
    "text": "capacity and you are you know that that that you are going to run less than more",
    "start": "1230679",
    "end": "1236600"
  },
  {
    "text": "than 177% of your of your uh utilization or your time for the running your ec2",
    "start": "1236600",
    "end": "1242720"
  },
  {
    "text": "instance you make you invest in reserved instances because it's going to give you more cost savings so so there are Amazon",
    "start": "1242720",
    "end": "1252039"
  },
  {
    "text": "was listening to lots of customers and understanding now that not only that they need reserved in for just plain",
    "start": "1252039",
    "end": "1260480"
  },
  {
    "text": "guaranteeing capacity and lowering cost but they need it in a variety of different ways today reserved instances",
    "start": "1260480",
    "end": "1266559"
  },
  {
    "text": "are available for one year and threee terms and there are three different utilization types when is the higher",
    "start": "1266559",
    "end": "1272760"
  },
  {
    "text": "utilization lower utiliz light utilization and the medium utilization the medium ones are the standard ones",
    "start": "1272760",
    "end": "1278960"
  },
  {
    "text": "which were there earlier by by making sure the light utilization are essentially a way by which you can you",
    "start": "1278960",
    "end": "1286159"
  },
  {
    "text": "know um create for ideal situations like Disaster Recovery where you don't know",
    "start": "1286159",
    "end": "1291919"
  },
  {
    "text": "uh you when the disaster will occur and you can actually spin up only during the disaster recovery time and still make",
    "start": "1291919",
    "end": "1298240"
  },
  {
    "text": "sure that you have guaranteed capacity at the same time you're lowering costs so higher utilization uh heavy",
    "start": "1298240",
    "end": "1304960"
  },
  {
    "text": "utilization have uh slightly higher upfront cost but they significant",
    "start": "1304960",
    "end": "1310840"
  },
  {
    "text": "savings when you do a three-year period or a one-ear period total cost so a",
    "start": "1310840",
    "end": "1315960"
  },
  {
    "text": "typical way of of how customers can think about uh optimizations is to think",
    "start": "1315960",
    "end": "1321720"
  },
  {
    "text": "about Break Even points so this is a graph for M2 uh extra large uh uh Linux",
    "start": "1321720",
    "end": "1328880"
  },
  {
    "text": "running in the US east region for two threee period and you can see that as",
    "start": "1328880",
    "end": "1334240"
  },
  {
    "text": "you can this is a graph against on demand the blue line is the on demand the red line is the heavy utilization",
    "start": "1334240",
    "end": "1340760"
  },
  {
    "text": "the green line is the medium and the purple line is sorry purple line is the light and the uh green line is the",
    "start": "1340760",
    "end": "1347720"
  },
  {
    "text": "medium medum instances medium utilization instances and if you do the graph and you understand the break even",
    "start": "1347720",
    "end": "1353360"
  },
  {
    "text": "point for this particular instance type in this region is that if you run less",
    "start": "1353360",
    "end": "1358559"
  },
  {
    "text": "than 10% on demand will be the best P but if you're running for 10 to 40% light utilization will give you maximum",
    "start": "1358559",
    "end": "1365360"
  },
  {
    "text": "savings and up to 46% um uh uh sorry 56% savings for if",
    "start": "1365360",
    "end": "1372279"
  },
  {
    "text": "you're running and you know that this is a database and you're running it for 75%",
    "start": "1372279",
    "end": "1377440"
  },
  {
    "text": "of their time time and you're not never going to turn it off then I would I would highly recommend you to Leverage",
    "start": "1377440",
    "end": "1383279"
  },
  {
    "text": "The Heavy utilization types which will give you maximum savings up to 71% of uh",
    "start": "1383279",
    "end": "1388919"
  },
  {
    "text": "savings so in this case you are you are running kind of a recommended architecture is to have mix of mix of",
    "start": "1388919",
    "end": "1395559"
  },
  {
    "text": "both reserved as well as on demand in order to maximize your savings so typical patterns that I see",
    "start": "1395559",
    "end": "1403039"
  },
  {
    "text": "in in in customers is like if you have a web application with a steady state pattern if you have a web application",
    "start": "1403039",
    "end": "1409120"
  },
  {
    "text": "with a uh know spiky predictable pattern or if you have a web application which is completely uncertain unpredictable",
    "start": "1409120",
    "end": "1416120"
  },
  {
    "text": "pattern what are the different best practices and recommendations you can have in in in this setup so if you in a",
    "start": "1416120",
    "end": "1422919"
  },
  {
    "text": "case of study State setup I would plain know recommend to invest in a three-year heavy utilization because you're going",
    "start": "1422919",
    "end": "1430039"
  },
  {
    "text": "to uh run that for 100% of your time for your spiky predictable usage where you",
    "start": "1430039",
    "end": "1436159"
  },
  {
    "text": "know that you what your spike is going to be because you of your historical data you you you are uh you know from a",
    "start": "1436159",
    "end": "1443000"
  },
  {
    "text": "past setup that this this is the only uh this is the only spike it can go up to",
    "start": "1443000",
    "end": "1448440"
  },
  {
    "text": "then you can you are in the on premise setup you are actually provisioning for Peak capacity in this one you only",
    "start": "1448440",
    "end": "1454679"
  },
  {
    "text": "provision your threeyear heavy utilization instance Ty for your basine while you use on demand for your spiking",
    "start": "1454679",
    "end": "1462240"
  },
  {
    "text": "spiky use case and you will see maximum savings and that's a result for your uncertain I would recommend for your",
    "start": "1462240",
    "end": "1468600"
  },
  {
    "text": "again Baseline instances go for heavy utilization give you maximum savings the minimum number of applications that you",
    "start": "1468600",
    "end": "1474799"
  },
  {
    "text": "servers that you need to run um uh for for the application to to uh to uh",
    "start": "1474799",
    "end": "1481520"
  },
  {
    "text": "execute and the for your medium you invest in a one year um or a three-year",
    "start": "1481520",
    "end": "1487720"
  },
  {
    "text": "light utilization so you know you can actually save on a variable aspect if",
    "start": "1487720",
    "end": "1493480"
  },
  {
    "text": "the traffic goes below the certain certain level you will you will stop",
    "start": "1493480",
    "end": "1498640"
  },
  {
    "text": "using reserved instances uh stop using light reserved instances and say further save your cost during that",
    "start": "1498640",
    "end": "1505200"
  },
  {
    "text": "time so a typical example of how this will work in a three tier web application like you just saw earlier",
    "start": "1505200",
    "end": "1511520"
  },
  {
    "text": "where you have two web servers two app servers and two database servers in a multi-az setup uh and there are",
    "start": "1511520",
    "end": "1517200"
  },
  {
    "text": "different configurations that you can have and and and reserved instances is just a billing thing it's not really and",
    "start": "1517200",
    "end": "1524080"
  },
  {
    "text": "your instances remain the same your applications remain the same your configurations remain the same however",
    "start": "1524080",
    "end": "1530600"
  },
  {
    "text": "now once you purchase a reserved instance and if you have a reserved instance your billing thing will change and you will be me you will be",
    "start": "1530600",
    "end": "1536799"
  },
  {
    "text": "essentially metered at that rate at a lower rate essentially so your typical",
    "start": "1536799",
    "end": "1542760"
  },
  {
    "text": "savings for these three options or four options would be in this in this way you will see know maximum savings resulting",
    "start": "1542760",
    "end": "1549799"
  },
  {
    "text": "in know heavy utilization giving up to 54% savings over on demand so I highly",
    "start": "1549799",
    "end": "1555559"
  },
  {
    "text": "recommend you leveraging some of those as well so that's was investing your time in and",
    "start": "1555559",
    "end": "1561120"
  },
  {
    "text": "energy into little bit of in The Reserve side to understand how you can further optimize your cost the third U and the",
    "start": "1561120",
    "end": "1568760"
  },
  {
    "text": "most favorite of mine one of the best ways in which you can architect for spend is to leverage spot architectures",
    "start": "1568760",
    "end": "1575720"
  },
  {
    "text": "um now as you can see spot is the third way you having an ability to bid for",
    "start": "1575720",
    "end": "1581240"
  },
  {
    "text": "unused dc2 capacity how many people are using spot today okay few of them that that's cool",
    "start": "1581240",
    "end": "1587679"
  },
  {
    "text": "so this is a great way to further optimize your cost by not having to pay",
    "start": "1587679",
    "end": "1594360"
  },
  {
    "text": "UPF front as well as know um um getting a lower lower fee very close to On",
    "start": "1594360",
    "end": "1600360"
  },
  {
    "text": "Demand sorry very close to the reserved rate um so what uh spat instances are is",
    "start": "1600360",
    "end": "1605960"
  },
  {
    "text": "essentially that you give you get an ability to bid for unused dc2 capacity",
    "start": "1605960",
    "end": "1611360"
  },
  {
    "text": "and typically customers see up to uh 56% 56 to uh 69% savings as a result of",
    "start": "1611360",
    "end": "1619559"
  },
  {
    "text": "using spot however the tradeoff is that Amazon will reclaim those resources if",
    "start": "1619559",
    "end": "1625200"
  },
  {
    "text": "your spot price exceeds the maximum bid price so you essentially say to tell",
    "start": "1625200",
    "end": "1631720"
  },
  {
    "text": "Amazon that I'm willing to pay uh x amount uh not three cents for a small",
    "start": "1631720",
    "end": "1637120"
  },
  {
    "text": "instance um uh for this region in this availability Zone and if you have this",
    "start": "1637120",
    "end": "1643080"
  },
  {
    "text": "re available please know start my ec2 instances so there is amazing new ways",
    "start": "1643080",
    "end": "1648960"
  },
  {
    "text": "of know architecture that that emerg due to that and there are variety of different use cases that can be enabled",
    "start": "1648960",
    "end": "1655840"
  },
  {
    "text": "so if you have logs today that you need to process now I would highly recommend",
    "start": "1655840",
    "end": "1660960"
  },
  {
    "text": "you to Simply take advantage of spot in this in in this way if you have lots of other areas like scientific Computing",
    "start": "1660960",
    "end": "1667760"
  },
  {
    "text": "testing uh other areas where you need this additional capacity you can also bid for that so it's not just for only",
    "start": "1667760",
    "end": "1675080"
  },
  {
    "text": "time insensitive task but also for know if you need that excess capacity when",
    "start": "1675080",
    "end": "1681200"
  },
  {
    "text": "when you're not able to get in an ond demand setup you can bid higher than the on demand price and get that capacity",
    "start": "1681200",
    "end": "1688120"
  },
  {
    "text": "when you need it so what are the different strategies that are that are bidding strategies that evolve due to",
    "start": "1688120",
    "end": "1694320"
  },
  {
    "text": "that right this is a simple way we publish um uh 90day traffic on our",
    "start": "1694320",
    "end": "1700320"
  },
  {
    "text": "console so you can predict how much uh what your bid price should be so your",
    "start": "1700320",
    "end": "1705360"
  },
  {
    "text": "maximum bid price is is essentially going to be uh what you request for",
    "start": "1705360",
    "end": "1710919"
  },
  {
    "text": "however one thing to note and this is a question that comes up all the time is that is Amazon going to charge me at the",
    "start": "1710919",
    "end": "1718039"
  },
  {
    "text": "maximum bid rate bid uh bid price or is it going to be lower it's always going",
    "start": "1718039",
    "end": "1723279"
  },
  {
    "text": "to be the spot price that Amazon will be charging you uh when when your requ when",
    "start": "1723279",
    "end": "1728720"
  },
  {
    "text": "your servers are started so you always I will recommend you to bid for maximum",
    "start": "1728720",
    "end": "1734440"
  },
  {
    "text": "price your threshold but and because you know that whatever is a spot price",
    "start": "1734440",
    "end": "1739720"
  },
  {
    "text": "Amazon if it's lower than the spot uh the current rate it will it will provision that infrastructure and then",
    "start": "1739720",
    "end": "1745840"
  },
  {
    "text": "uh you can run those uh queries again typically we have seen that the spot price ranges between the reserved hourly",
    "start": "1745840",
    "end": "1752679"
  },
  {
    "text": "price uh and the on demand price so so your setup can be built in a way that",
    "start": "1752679",
    "end": "1758760"
  },
  {
    "text": "will give you maximum savings so let's see what are the different bidding strategies that come due to due to this",
    "start": "1758760",
    "end": "1765320"
  },
  {
    "text": "effect there are a variety of different applications that can be built from scientific Computing Big Data as you saw",
    "start": "1765320",
    "end": "1770799"
  },
  {
    "text": "uh as well as know testing and running Hado jobs on on on spot so there are",
    "start": "1770799",
    "end": "1777399"
  },
  {
    "text": "three or four obvious strategies that come out of it but each one has its own pros and cons and and and I would highly",
    "start": "1777399",
    "end": "1785279"
  },
  {
    "text": "recommend you taking uh the one that will that will work for you the first one is really um oops I okay first one",
    "start": "1785279",
    "end": "1794279"
  },
  {
    "text": "is really bidding near the reserved price in this setup you will have get",
    "start": "1794279",
    "end": "1799960"
  },
  {
    "text": "the maximum savings because you are bidding at the reserved rate uh but your",
    "start": "1799960",
    "end": "1805720"
  },
  {
    "text": "the time to complete your job might be extended because you might not get those ec2 instances in the first place the",
    "start": "1805720",
    "end": "1811799"
  },
  {
    "text": "second PR second one is really around oops the second one is really around",
    "start": "1811799",
    "end": "1818200"
  },
  {
    "text": "um bidding for uh the spot price history itself so this is the bid bid",
    "start": "1818200",
    "end": "1823559"
  },
  {
    "text": "distribution from the last 6 months that we got and to understand how how customers are really bidding and you see",
    "start": "1823559",
    "end": "1830159"
  },
  {
    "text": "that the second bid price is around the spot price history they're looking at over 90 90day period uh finding out how",
    "start": "1830159",
    "end": "1837200"
  },
  {
    "text": "many E2 instances or what is the price going on and they bid around that so above a little bit of reserved rate but",
    "start": "1837200",
    "end": "1844720"
  },
  {
    "text": "below the on demand price and you can see the 100% is actually the on demand",
    "start": "1844720",
    "end": "1850039"
  },
  {
    "text": "rate and that are maximum number bid in in in this setup you you are bidding at",
    "start": "1850039",
    "end": "1855880"
  },
  {
    "text": "the on demand rate or around the on demand rate by doing that you know that",
    "start": "1855880",
    "end": "1861000"
  },
  {
    "text": "you can easily know switch over to On Demand in case you don't get spot inan",
    "start": "1861000",
    "end": "1866360"
  },
  {
    "text": "is provisioned so that's the best way and as you can see most of the customers bid around that area where they can know",
    "start": "1866360",
    "end": "1874000"
  },
  {
    "text": "bid for on demand and then get a lower price and see maximum savings around that oops sorry about this and the last",
    "start": "1874000",
    "end": "1881240"
  },
  {
    "text": "setup is the bit above the on demand price so if you see that you need that",
    "start": "1881240",
    "end": "1886399"
  },
  {
    "text": "capacity right now and you need to you know you are testing load testing a",
    "start": "1886399",
    "end": "1891559"
  },
  {
    "text": "scenario need 5,000 Institute instances bombarding a particular application then you would bid for know a higher on",
    "start": "1891559",
    "end": "1898960"
  },
  {
    "text": "demand rate and you will excess capacity and then you will get that request provision so there are different",
    "start": "1898960",
    "end": "1904720"
  },
  {
    "text": "strategies depending upon your application depending upon your use case select the right bidding strategy around",
    "start": "1904720",
    "end": "1910760"
  },
  {
    "text": "it so I have variety of different examples of how customers take this into consideration so the first bidding",
    "start": "1910760",
    "end": "1917200"
  },
  {
    "text": "strategy University of Melbourne and University of Barcelona they wanted to do particle physics simulation and they",
    "start": "1917200",
    "end": "1923440"
  },
  {
    "text": "are know always bidding for reserved instances uh near sorry spot price which",
    "start": "1923440",
    "end": "1929159"
  },
  {
    "text": "is near to the reserved instance so in this setup they get maximum savings because they are running lower their",
    "start": "1929159",
    "end": "1935880"
  },
  {
    "text": "demand rate um however one thing which to note is Amazon will not charge you",
    "start": "1935880",
    "end": "1941760"
  },
  {
    "text": "for the last instance hour uh where your instance is terminated so in an",
    "start": "1941760",
    "end": "1947559"
  },
  {
    "text": "aggregate you won't lose anything right you are still get know getting the lowest price for that particular",
    "start": "1947559",
    "end": "1953399"
  },
  {
    "text": "instance even though Amazon terminated that instance during because your spot price was higher than the bid price the",
    "start": "1953399",
    "end": "1960880"
  },
  {
    "text": "second one is Vimeo one of my favorite examples in here they always bid for now",
    "start": "1960880",
    "end": "1966519"
  },
  {
    "text": "um between the spot price history and the on demand rate they get maximum savings due to that but they get around",
    "start": "1966519",
    "end": "1973080"
  },
  {
    "text": "50% savings due to that uh but so that if they bid for around on demand rate",
    "start": "1973080",
    "end": "1979200"
  },
  {
    "text": "all these savings they will any any price around this area they will see a lot of savings the third one is a",
    "start": "1979200",
    "end": "1986200"
  },
  {
    "text": "numerate it's essentially always bids for higher than the on demand rate so",
    "start": "1986200",
    "end": "1991240"
  },
  {
    "text": "you will see as soon as the spot price is below um certain uh certain um um use",
    "start": "1991240",
    "end": "1998559"
  },
  {
    "text": "cases they will see maximum Savings in that area and if they feel that it is not available during that time the spot",
    "start": "1998559",
    "end": "2005000"
  },
  {
    "text": "price SWOT instances they will fail over to an on demand instance and then provision that on demand instance and",
    "start": "2005000",
    "end": "2010679"
  },
  {
    "text": "then get that only during that time for example around this area they Pro they are leveraging on demand instances in",
    "start": "2010679",
    "end": "2017519"
  },
  {
    "text": "this scenario and the last one which is litmus again they bid above the on demand price much more higher than the",
    "start": "2017519",
    "end": "2023799"
  },
  {
    "text": "on demand price they're doing email and synchronous email uh um search and other areas they they always um know bid for",
    "start": "2023799",
    "end": "2031519"
  },
  {
    "text": "higher than the on demand so they get excess they can leverage the excess capacity when they need it and and and",
    "start": "2031519",
    "end": "2037360"
  },
  {
    "text": "leverage around that area they get around 7 57% savings for that so one of",
    "start": "2037360",
    "end": "2044279"
  },
  {
    "text": "the interesting aspects about about uh the tradeoff of the spot price is the",
    "start": "2044279",
    "end": "2049358"
  },
  {
    "text": "fact that you have to know manage this Interruption process Amazon will take away those resources uh um when the spot",
    "start": "2049359",
    "end": "2056679"
  },
  {
    "text": "price goes above the maximum bid price and how do you manage that Interruption and how do you architect for your",
    "start": "2056679",
    "end": "2063440"
  },
  {
    "text": "architect your application so that it handles that that failing so there are different scenarios here uh if you're",
    "start": "2063440",
    "end": "2070000"
  },
  {
    "text": "running um elastic map ruce Hado jobs on spot instance instances you can run that",
    "start": "2070000",
    "end": "2076520"
  },
  {
    "text": "entire cluster on spot instances and it will give you maximum savings however some of the customers don't want to know",
    "start": "2076520",
    "end": "2084638"
  },
  {
    "text": "let don't want to miss the hdfs the data that they have and they don't want to if",
    "start": "2084639",
    "end": "2090079"
  },
  {
    "text": "terminate that instances so that in that scenario they only um uh convert and use",
    "start": "2090079",
    "end": "2095839"
  },
  {
    "text": "spot instances for or their task node and their core nodes are running uh on",
    "start": "2095839",
    "end": "2101079"
  },
  {
    "text": "on demand or reserved instances so by that they can quickly provision the task",
    "start": "2101079",
    "end": "2106359"
  },
  {
    "text": "node if they want in a way that will create know um they will make sure that",
    "start": "2106359",
    "end": "2112000"
  },
  {
    "text": "the cluster is running and they get maximum savings and this is C currently being utilized by back type which is",
    "start": "2112000",
    "end": "2118320"
  },
  {
    "text": "doing a search um uh and web crawling in use case where they always leverage",
    "start": "2118320",
    "end": "2124640"
  },
  {
    "text": "Hadoop for for crawling use cases and and are indexing their their jobs",
    "start": "2124640",
    "end": "2130400"
  },
  {
    "text": "however they The Leverage task node to create for on spot and get around 66%",
    "start": "2130400",
    "end": "2136680"
  },
  {
    "text": "savings as they run most of their task node on on on uh spot itself itself so",
    "start": "2136680",
    "end": "2142920"
  },
  {
    "text": "and Beauty about EMR or beauty about elastic map reduce is that it will automatically provision Hadoop will",
    "start": "2142920",
    "end": "2149680"
  },
  {
    "text": "automatically provision now necessary infrastructure that you need and if the if the ec2 instance is ter minated so in",
    "start": "2149680",
    "end": "2157720"
  },
  {
    "text": "this scenario the you have you get best of both the worlds where you get the fall tolerance as well as the Hadoop uh",
    "start": "2157720",
    "end": "2165200"
  },
  {
    "text": "the the massive parallel processing so the second example is the",
    "start": "2165200",
    "end": "2171319"
  },
  {
    "text": "video transcoding example and this is know leveraging cues in your architecture to manage Interruption and",
    "start": "2171319",
    "end": "2178359"
  },
  {
    "text": "how in a typical setup know you will have Amazon ec2 instances sending raw data your know AVI files and so queuing",
    "start": "2178359",
    "end": "2185839"
  },
  {
    "text": "up your jobs and then storing either in simple DB or Dynamo DB and you have this large cluster of transcoding servers",
    "start": "2185839",
    "end": "2192400"
  },
  {
    "text": "which will actually know provision your TransCore your video and then store the",
    "start": "2192400",
    "end": "2197480"
  },
  {
    "text": "results back into the queue as well as store the results back into the uh into",
    "start": "2197480",
    "end": "2202560"
  },
  {
    "text": "converted video back into the S into S3 and then you're monitoring this whole process and this can Le leverage spot",
    "start": "2202560",
    "end": "2209079"
  },
  {
    "text": "instances very easily how essentially by leveraging cues in between and cues are",
    "start": "2209079",
    "end": "2215520"
  },
  {
    "text": "the best ways to build highly distributed architectures and and and one of the most you know one of the",
    "start": "2215520",
    "end": "2221560"
  },
  {
    "text": "greatest features of sqs is the visibility timeout feature what this allows you to do is if you have a job in",
    "start": "2221560",
    "end": "2228640"
  },
  {
    "text": "the queue you can uh if the spot instan is terminates it will automatically",
    "start": "2228640",
    "end": "2234440"
  },
  {
    "text": "reappear in the queue if it's not deleted and that's called the visibility timeout feature so if the ec2 instance",
    "start": "2234440",
    "end": "2240640"
  },
  {
    "text": "you know is terminated due to uh the spot price going up you know you can you don't have to worry because the Q is",
    "start": "2240640",
    "end": "2247040"
  },
  {
    "text": "going to make sure that your your job reappears back as it was not deleted",
    "start": "2247040",
    "end": "2253359"
  },
  {
    "text": "from that queue itself and this visibility timeout feature allows you to create a way so you can have more",
    "start": "2253359",
    "end": "2260079"
  },
  {
    "text": "resiliency in your architecture and and when it comes back up it automatically starts processing fetching the jobs from",
    "start": "2260079",
    "end": "2267480"
  },
  {
    "text": "the queue and then and and creating that way so so how does Vimeo um leverage",
    "start": "2267480",
    "end": "2275560"
  },
  {
    "text": "queuing mechanisms so this was an aimu example that they are running video transcoding application uh using variety",
    "start": "2275560",
    "end": "2282880"
  },
  {
    "text": "of different uh instance types as well as variety of different pricing models",
    "start": "2282880",
    "end": "2288079"
  },
  {
    "text": "so they have a free tier where customers upload videos and that gets transcoded",
    "start": "2288079",
    "end": "2293880"
  },
  {
    "text": "they have optimized that one for um for reducing cost because it's a free tier",
    "start": "2293880",
    "end": "2300040"
  },
  {
    "text": "nobody pays for it however it's okay to have acceptable delay limits that you",
    "start": "2300040",
    "end": "2305800"
  },
  {
    "text": "upload your video and you get your video after 45 minutes or maybe an hour or over the weekend or so so how they do is",
    "start": "2305800",
    "end": "2312480"
  },
  {
    "text": "they create persistent requests they use on demand instances if it is delayed and they leverage spot AR spot instances and",
    "start": "2312480",
    "end": "2320000"
  },
  {
    "text": "always bid for maximum bid price lower than the ond demand rate in order to really get that reduced price and",
    "start": "2320000",
    "end": "2326400"
  },
  {
    "text": "optimizing for cost for their free toer offering for their premium offering they",
    "start": "2326400",
    "end": "2332359"
  },
  {
    "text": "optimize for faster response time people are paying for it they cannot afford afford to wait for a video uh to",
    "start": "2332359",
    "end": "2339400"
  },
  {
    "text": "transort and and uh and take time so in this scenario they are optimizing for",
    "start": "2339400",
    "end": "2345319"
  },
  {
    "text": "faster response type each uh the number of number of uh reserved number of",
    "start": "2345319",
    "end": "2351880"
  },
  {
    "text": "Premium customers have a direct relationship with the number of reserved instances that they are purchasing and",
    "start": "2351880",
    "end": "2357440"
  },
  {
    "text": "in case when during the weekend when they see a big surge of traffic uh when",
    "start": "2357440",
    "end": "2363200"
  },
  {
    "text": "lots of people are uploading video and they get time to upload video during weekend time no they they actually use",
    "start": "2363200",
    "end": "2370000"
  },
  {
    "text": "on demand for for that additional capacity and even though if they don't get additional capacity in on demand",
    "start": "2370000",
    "end": "2376839"
  },
  {
    "text": "they bid a higher rate on spot in order to make sure that they maintain that SLA",
    "start": "2376839",
    "end": "2382440"
  },
  {
    "text": "for that customer so it's an amazing way to see how they use in a very smart way",
    "start": "2382440",
    "end": "2388920"
  },
  {
    "text": "reserved spot as well as uh on demand to make sure that they have the right SLA",
    "start": "2388920",
    "end": "2395640"
  },
  {
    "text": "for the customer so this is a small screenshot about how you can leverage now with persistent requests you create",
    "start": "2395640",
    "end": "2401520"
  },
  {
    "text": "a persistent request it will stay and then you can uh bid for that and you always will be charged at the spot price",
    "start": "2401520",
    "end": "2408720"
  },
  {
    "text": "even though your maximum bid price is higher than the spot price so the different best practices that I see all",
    "start": "2408720",
    "end": "2415200"
  },
  {
    "text": "the time is managing Interruption there a best way to do is to split up your work into smaller chunks and and make",
    "start": "2415200",
    "end": "2422280"
  },
  {
    "text": "sure that you are know incre incrementing in in a smaller chunks way",
    "start": "2422280",
    "end": "2427599"
  },
  {
    "text": "the the other way is checkpointing checkpointing is a way that you maintain a particular state of your application",
    "start": "2427599",
    "end": "2434240"
  },
  {
    "text": "uh at every single hour and um so either you're maintaining that state in S3 or",
    "start": "2434240",
    "end": "2440160"
  },
  {
    "text": "you're maintaining it a simple DB or you're maintaining in in some other database since you are maintaining that",
    "start": "2440160",
    "end": "2445560"
  },
  {
    "text": "state you know where to to restart from and resume your other jobs so that's a great way of how you can leverage SWAT",
    "start": "2445560",
    "end": "2453280"
  },
  {
    "text": "architectures in your application also one thing which I feel is the most important is testing your application",
    "start": "2453280",
    "end": "2459880"
  },
  {
    "text": "and making sure that it is highly fault tolerant all the design principles of distributed systems things that wner",
    "start": "2459880",
    "end": "2465880"
  },
  {
    "text": "talked about in his keynote are extremely important in this scenario as well you're designing for failure if",
    "start": "2465880",
    "end": "2471520"
  },
  {
    "text": "something fails it automatically s of notifies you or tells",
    "start": "2471520",
    "end": "2476599"
  },
  {
    "text": "you where it has stopped and then you can resume from that current state and continue your processing based on that",
    "start": "2476599",
    "end": "2483079"
  },
  {
    "text": "if your persistent requests are made currently so so again know architecting",
    "start": "2483079",
    "end": "2488440"
  },
  {
    "text": "for scale architecting for spot architecting for spend in order to further reduce your cost and highly",
    "start": "2488440",
    "end": "2494640"
  },
  {
    "text": "recommend you to leverage spot in your architectures the third the fourth one seems very obvious but it is one of the",
    "start": "2494640",
    "end": "2501079"
  },
  {
    "text": "most important ways in which you can further save like every customer that I",
    "start": "2501079",
    "end": "2506280"
  },
  {
    "text": "talked to are maintaining different um know queuing architectures and maintaining different um you know",
    "start": "2506280",
    "end": "2512119"
  },
  {
    "text": "monitoring architectures monitoring use case they have a separate instance which is which is running naos and and know",
    "start": "2512119",
    "end": "2519640"
  },
  {
    "text": "creating monitoring stats for for the for the use case they're running ha",
    "start": "2519640",
    "end": "2525079"
  },
  {
    "text": "proxy on an ec2 instance trying to make sure that they are fa tolerant and other areas and there are know pros and cons",
    "start": "2525079",
    "end": "2532200"
  },
  {
    "text": "to each of those architectures from Feature Feature side as well as from Fault tolerance side ability to run a",
    "start": "2532200",
    "end": "2539839"
  },
  {
    "text": "know having an ability to use a service versus running your own open source software on top of ec2 instance they are",
    "start": "2539839",
    "end": "2547079"
  },
  {
    "text": "going to be you know dramatic cost savings if you run it as a if you leverage the service so I highly",
    "start": "2547079",
    "end": "2553160"
  },
  {
    "text": "recommend you taking advantage of these Services essentially if you are learning load balancer take advantage of the",
    "start": "2553160",
    "end": "2559480"
  },
  {
    "text": "elastic load balancer uh instead of running a load balancer uh on premise sorry on on an ec2 instance so typical",
    "start": "2559480",
    "end": "2567280"
  },
  {
    "text": "savings that you will see because of running as a because it's running a service you don't have to worry about",
    "start": "2567280",
    "end": "2572520"
  },
  {
    "text": "fall tolerance it is a service it will make sure that it will scale and you don't have to have a no parallel",
    "start": "2572520",
    "end": "2578680"
  },
  {
    "text": "infrastructure running uh same goes with other services like SNS and sqs and swf",
    "start": "2578680",
    "end": "2585880"
  },
  {
    "text": "as well as no sces like your send mail service know because it's a service it",
    "start": "2585880",
    "end": "2591040"
  },
  {
    "text": "is designed to be optimized to run in a highly distributed setup as well as for",
    "start": "2591040",
    "end": "2596200"
  },
  {
    "text": "optimized for scale so instead of running it in on on ec2 instance you'll have a leverage uh you will have further",
    "start": "2596200",
    "end": "2602720"
  },
  {
    "text": "savings so you remove bunch of your infrastructure uh that is running on ec2 and other",
    "start": "2602720",
    "end": "2608559"
  },
  {
    "text": "areas and then turn it into a service by leveraging these components of your",
    "start": "2608559",
    "end": "2614440"
  },
  {
    "text": "application so that's the the fourth one and the last one which is um which is also obvious is the caching piece",
    "start": "2614440",
    "end": "2621680"
  },
  {
    "text": "caching all the time is um not only for the customer uh no for cost savings but",
    "start": "2621680",
    "end": "2628880"
  },
  {
    "text": "also for performance and and I see that this is one of the best ways in which uh",
    "start": "2628880",
    "end": "2633960"
  },
  {
    "text": "you can leverage and there are multiple layers of caching that you can build either you have page caches and object",
    "start": "2633960",
    "end": "2640160"
  },
  {
    "text": "caches or you can have a database caching uh build it so it will reduce the number of requests to the server",
    "start": "2640160",
    "end": "2646160"
  },
  {
    "text": "reduce the number of request load on the database you need a lighter database and",
    "start": "2646160",
    "end": "2651400"
  },
  {
    "text": "you have an ability to cash um ability to know further save because you're",
    "start": "2651400",
    "end": "2656920"
  },
  {
    "text": "running in a smaller ec2 instance type so typical uh from a uh from a static",
    "start": "2656920",
    "end": "2663240"
  },
  {
    "text": "object caching perspective I highly recommend you to leverage a Content delivery Network like cloudfront uh in",
    "start": "2663240",
    "end": "2669839"
  },
  {
    "text": "this scenario you will see that the C because your objects are getting or your",
    "start": "2669839",
    "end": "2675000"
  },
  {
    "text": "pages your your JavaScript files your HTML files your video files are Edge cast and much more closer to the",
    "start": "2675000",
    "end": "2681839"
  },
  {
    "text": "customer they're not only having low latency for the customer but also because of caching you have you will",
    "start": "2681839",
    "end": "2688800"
  },
  {
    "text": "save much more because of of the for the data transfer out charges and that's how",
    "start": "2688800",
    "end": "2694119"
  },
  {
    "text": "lots of customer leverage like of all the static content as you saw PBS know",
    "start": "2694119",
    "end": "2699760"
  },
  {
    "text": "leveraging around 40 terabytes of of video content and and running across on",
    "start": "2699760",
    "end": "2705319"
  },
  {
    "text": "that one of the best advantages of running Cloud front or leveraging Cloud front is that if you have a streaming",
    "start": "2705319",
    "end": "2712319"
  },
  {
    "text": "service and you want to uh you're leveraging let's say Adobe FMS for your",
    "start": "2712319",
    "end": "2717520"
  },
  {
    "text": "streaming service then you don't need to run a separate Adobe FMS server uh in in",
    "start": "2717520",
    "end": "2723640"
  },
  {
    "text": "in that scenario it has built-in stream uh into it so you that itself is cost",
    "start": "2723640",
    "end": "2729520"
  },
  {
    "text": "savings running on an versus running uh on an ec2 instance um itself if you have",
    "start": "2729520",
    "end": "2735640"
  },
  {
    "text": "live streaming however there is you need to run it on an ec2 instance and um and",
    "start": "2735640",
    "end": "2741920"
  },
  {
    "text": "Adobe FMS will will uh kick in and do the savings there however so uh",
    "start": "2741920",
    "end": "2747800"
  },
  {
    "text": "leveraging caching wherever possible is a best practice that I highly recommend whether it is object caching and Page",
    "start": "2747800",
    "end": "2754200"
  },
  {
    "text": "caching or whether it is plastic cache uh where you are caching your database",
    "start": "2754200",
    "end": "2759839"
  },
  {
    "text": "objects and not and and reducing the request on the on the server so these are the five different ways I would",
    "start": "2759839",
    "end": "2766319"
  },
  {
    "text": "highly recommend you to leverage within your infrastructure within your architecture to further save on your",
    "start": "2766319",
    "end": "2774160"
  },
  {
    "text": "application further save or your infrastructure this is the best ways this cannot happen in the on premise",
    "start": "2774160",
    "end": "2780160"
  },
  {
    "text": "setup because you are turning off your resources when you don't need it and you have an ability to to further optimize",
    "start": "2780160",
    "end": "2787119"
  },
  {
    "text": "and make a dramatic impact on your bottom line itself so thank you very much if you have any questions concerns",
    "start": "2787119",
    "end": "2793359"
  },
  {
    "text": "suggestions or featured request would love to know more about you uh and your application use case feel free to send",
    "start": "2793359",
    "end": "2799319"
  },
  {
    "text": "me an email and I would love to update uh with uh you with other questions and",
    "start": "2799319",
    "end": "2804880"
  },
  {
    "text": "concerns as well thanks a",
    "start": "2804880",
    "end": "2808759"
  },
  {
    "text": "lot",
    "start": "2814800",
    "end": "2817800"
  }
]