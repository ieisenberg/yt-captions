[
  {
    "start": "0",
    "end": "24000"
  },
  {
    "text": "hello so welcome back we are here with episode 3 of database deep-dive they",
    "start": "30",
    "end": "6029"
  },
  {
    "text": "have not cancelled us yet so Randall and I are back your favorite co-host and we have with us a special guest who are you",
    "start": "6029",
    "end": "13290"
  },
  {
    "text": "hi I'm yo Avila I am a product manager for Amazon aura which is another",
    "start": "13290",
    "end": "19199"
  },
  {
    "text": "database from AWS really excited to be talking about it today wonderful so last week we were living in",
    "start": "19199",
    "end": "26130"
  },
  {
    "start": "24000",
    "end": "187000"
  },
  {
    "text": "the world of no SQL talking a little bit about dynamodb with Rick but let's let's",
    "start": "26130",
    "end": "31320"
  },
  {
    "text": "look at the other side now we're talking about Aurora relational databases yeah",
    "start": "31320",
    "end": "37500"
  },
  {
    "text": "where do we start here okay so I think what helps to understand this is to go back to our first episode where we",
    "start": "37500",
    "end": "43710"
  },
  {
    "text": "talked about the evolution of databases and you go back to the 1970s and the",
    "start": "43710",
    "end": "48719"
  },
  {
    "text": "1980s and you have storage being the most expensive part of your data story",
    "start": "48719",
    "end": "55670"
  },
  {
    "text": "you end up optimizing your data model around storage and this is great for a",
    "start": "55670",
    "end": "64110"
  },
  {
    "text": "lot of different use cases it allows for very efficient queries and very efficient storage of different types of",
    "start": "64110",
    "end": "69510"
  },
  {
    "text": "data but then as scale grew as people went from you know millions of users to",
    "start": "69510",
    "end": "74909"
  },
  {
    "text": "tens of millions of users or hundred you know in cases like duolingo they have 300 million users and they're using",
    "start": "74909",
    "end": "80340"
  },
  {
    "text": "DynamoDB as people scaled out to lots and lots and lots of different users and lots and lots of different use cases",
    "start": "80340",
    "end": "85560"
  },
  {
    "text": "that model starts to break down because you're limited in the the number of",
    "start": "85560",
    "end": "91710"
  },
  {
    "text": "nodes that can simultaneously access and transact on those pieces of information so what I what I like about you know",
    "start": "91710",
    "end": "100460"
  },
  {
    "text": "relational databases is that it's a very good way apparently I'm barely audible",
    "start": "100460",
    "end": "105979"
  },
  {
    "text": "what I liked about relational databases is a very good way to access the the",
    "start": "105979",
    "end": "112829"
  },
  {
    "text": "underlying normal form of the data you don't know the third normal form so if",
    "start": "112829",
    "end": "118049"
  },
  {
    "text": "you if you want to go ahead and get your background in in databases go Google",
    "start": "118049",
    "end": "123899"
  },
  {
    "text": "third normal form and read you know six hours of that and you'll know just as much as we do she's not",
    "start": "123899",
    "end": "131640"
  },
  {
    "text": "well so before we even dig into access patterns and querying relational databases for most people are the way",
    "start": "131640",
    "end": "138209"
  },
  {
    "text": "that they sort of normally think about data right like a lot of people before you know you you learn about all these",
    "start": "138209",
    "end": "145230"
  },
  {
    "text": "different tools that your disposable do you think about things and columns you think about things in rows and so even",
    "start": "145230",
    "end": "151500"
  },
  {
    "text": "though other databases may be permutations on that for your optimize for different use cases people still",
    "start": "151500",
    "end": "157110"
  },
  {
    "text": "have a hard time breaking out of this relational shell but for good reason right yeah a lot of data fits very well into the relational mam you reach those",
    "start": "157110",
    "end": "163769"
  },
  {
    "text": "you reach those thresholds that I was talking about and one of the things that I love about Aurora is it says hey it's",
    "start": "163769",
    "end": "170280"
  },
  {
    "text": "2019 or you know when was it 26 2014 2014 hey it's 2014 we have all this",
    "start": "170280",
    "end": "176819"
  },
  {
    "text": "modern technology available why don't we reimagine databases in the cloud so maybe this is a great point for you to",
    "start": "176819",
    "end": "183390"
  },
  {
    "text": "kind of tell us more about it and how it works and all the magic behind it sure yeah so so relational databases are",
    "start": "183390",
    "end": "189630"
  },
  {
    "start": "187000",
    "end": "273000"
  },
  {
    "text": "still really important it still were a very large percentage of the world's data still lives they've been around for",
    "start": "189630",
    "end": "196019"
  },
  {
    "text": "40 50 years and you know it's really good that today you have other options so for so for data that doesn't fit very",
    "start": "196019",
    "end": "204030"
  },
  {
    "text": "well you know for objects for you know key value for certain things it's really good that there's other options some",
    "start": "204030",
    "end": "209670"
  },
  {
    "text": "people continue to put them into relational databases just out of habit and that's fine too so it's good to have",
    "start": "209670",
    "end": "214829"
  },
  {
    "text": "those other options but still there are many many many cases where the data does fit fairly well into tables Rose Collins",
    "start": "214829",
    "end": "222239"
  },
  {
    "text": "there's complex queries that you want to run relational databases are still very good at doing that and the sequel",
    "start": "222239",
    "end": "229829"
  },
  {
    "text": "language is still as relevant as ever it's even being used for non relational databases because it's kind of you know it's the standard so simple no it's what",
    "start": "229829",
    "end": "236790"
  },
  {
    "text": "people know and it's very powerful and it's an industry standard so it's still very important and like you said getting",
    "start": "236790",
    "end": "243510"
  },
  {
    "text": "into you know this decade it was time to start rethinking the way that relational databases were always built and like you",
    "start": "243510",
    "end": "251040"
  },
  {
    "text": "said I mean one of the assumptions was storage is expensive but you know looking at today's world you know",
    "start": "251040",
    "end": "256620"
  },
  {
    "text": "storage is kind of cheap so if we make that assumption how can we build a database that will be you know be more",
    "start": "256620",
    "end": "264550"
  },
  {
    "text": "more durable will store your data maybe you know in more copies because if storage is cheap a let's back it up like",
    "start": "264550",
    "end": "269710"
  },
  {
    "text": "crazy because you know we can't afford to do that yeah so that's a great point so we looked at these bindings and",
    "start": "269710",
    "end": "275949"
  },
  {
    "start": "273000",
    "end": "348000"
  },
  {
    "text": "interfaces for querying data in a relational world that people love my sequel or Postgres for example but what",
    "start": "275949",
    "end": "282879"
  },
  {
    "text": "what are the real innovations around Aurora and how do they leverage those things that people already loved but then on the operation side make it a",
    "start": "282879",
    "end": "289419"
  },
  {
    "text": "more valuable product right so the problem so you know like almost anything",
    "start": "289419",
    "end": "295180"
  },
  {
    "text": "at Amazon you know it starts from the customer and works backwards so we asked ourselves we meaning it was even before",
    "start": "295180",
    "end": "300610"
  },
  {
    "text": "my time or I guess any of the three of us but you know a few years back the question was you know what do people",
    "start": "300610",
    "end": "306699"
  },
  {
    "text": "like and dislike about databases that are available on the market on databases and the vendors that provide those",
    "start": "306699",
    "end": "313419"
  },
  {
    "text": "databases gain kind of a you know a reputation for being expensive and being very restrictive and AWS wanted to kind",
    "start": "313419",
    "end": "321460"
  },
  {
    "text": "of provide a better option that would be much cheaper and would be much easier and open and flexible be based on open",
    "start": "321460",
    "end": "329409"
  },
  {
    "text": "source which is we'd rather pay engineers than lawyers exactly and auditors and yeah so so yeah",
    "start": "329409",
    "end": "337330"
  },
  {
    "text": "it was really a long time of going we joked that it was probably before all of us but I think Randall you were actually around and I was exactly just kind of",
    "start": "337330",
    "end": "349779"
  },
  {
    "start": "348000",
    "end": "385000"
  },
  {
    "text": "blew my mind I mean hindsight it's obvious right that all the best discoveries are when we",
    "start": "349779",
    "end": "355210"
  },
  {
    "text": "control that whole platform so we meaning AWS we have this whole control plane and we can say well we know",
    "start": "355210",
    "end": "361509"
  },
  {
    "text": "exactly what kind of semantics and what kind of pieces of hardware gonna be running this control plane why don't we",
    "start": "361509",
    "end": "369159"
  },
  {
    "text": "optimize and specialize an engine for that and it was this realization that we could separate that compute tier from",
    "start": "369159",
    "end": "376479"
  },
  {
    "text": "the storage tier and and just blow that out as much as we needed to in order to make the database scale to whatever kind",
    "start": "376479",
    "end": "383259"
  },
  {
    "text": "of workload it needed to correct so or on that that's a that's a good this is a good point meant to point out ora is a",
    "start": "383259",
    "end": "390520"
  },
  {
    "start": "385000",
    "end": "488000"
  },
  {
    "text": "database engine that runs on under M RDS relational database service so RDS",
    "start": "390520",
    "end": "396569"
  },
  {
    "text": "itself is a managed service where you know your database is managed for you you don't need to do any backups you",
    "start": "396569",
    "end": "402149"
  },
  {
    "text": "don't need to do any patching don't need to set up and provision the hardware or any of that so running Ora inside of a",
    "start": "402149",
    "end": "408929"
  },
  {
    "text": "managed service like any managed services it comes with certain trade-offs right so on one hand you",
    "start": "408929",
    "end": "414059"
  },
  {
    "text": "don't need to do any work you know any of that work it kind of does all the administer almost all the administration",
    "start": "414059",
    "end": "420659"
  },
  {
    "text": "for you at least in terms of hardware operating systems VMs or patches all of that it comes with certain restrictions",
    "start": "420659",
    "end": "427559"
  },
  {
    "text": "that you know you don't just get root access and do whatever you want because in order to run a service at high scale",
    "start": "427559",
    "end": "433559"
  },
  {
    "text": "like we're doing you need to make certain assumptions that people are not messing too much with you know we need to standardize all those instances to",
    "start": "433559",
    "end": "440129"
  },
  {
    "text": "make sure that they're all the same and then we know that our patches will actually work so so or our runs under",
    "start": "440129",
    "end": "445499"
  },
  {
    "text": "that environment we know what the hardware is we know what the operating said we know all of that and I remember working on databases back in 2010 with",
    "start": "445499",
    "end": "453209"
  },
  {
    "text": "the kind of the CC ones maybe it was earlier than that even you know the first version of ec2 and we started I",
    "start": "453209",
    "end": "459659"
  },
  {
    "text": "think this before RDS even came around my RDS came out in what like 2011 I",
    "start": "459659",
    "end": "464969"
  },
  {
    "text": "guess was 2009 I believe thousand I guess was already around the place that I was working at we weren't using it yet",
    "start": "464969",
    "end": "471419"
  },
  {
    "text": "and I remember having the tinkerer with you know read ahead settings and mounting the volumes with know a time",
    "start": "471419",
    "end": "478379"
  },
  {
    "text": "and mounting the volumes so that the the underlying storage section could be shared across multiple nodes with this",
    "start": "478379",
    "end": "485129"
  },
  {
    "text": "insane NFS set up and exactly you know all people did this just to run WordPress at scale yes so nobody wants",
    "start": "485129",
    "end": "492329"
  },
  {
    "start": "488000",
    "end": "605000"
  },
  {
    "text": "to do that anymore so so RDS grew into a family of multiple database engines that",
    "start": "492329",
    "end": "498389"
  },
  {
    "text": "are offered there's six or seven depending on how you count and Ora is kind of the crown jewel and let's get",
    "start": "498389",
    "end": "504239"
  },
  {
    "text": "into more details on that and what we did in terms of changing the engine so the engine so taking so building a",
    "start": "504239",
    "end": "510959"
  },
  {
    "text": "database in a sort of more modern way that makes all of those assumptions about you know about storage about",
    "start": "510959",
    "end": "517800"
  },
  {
    "text": "network about all of those things so some of the first things that were first",
    "start": "517800",
    "end": "524370"
  },
  {
    "text": "design principles is we wanted it to be compatible with open source so instead of and I'm sure that the people who were",
    "start": "524370",
    "end": "530759"
  },
  {
    "text": "there at the time debated this you know the pros and cons if we started from scratch I'm sure we could have changed a",
    "start": "530759",
    "end": "536490"
  },
  {
    "text": "few things maybe you know have some advantages but they was sequel compatible exactly so did not go in that",
    "start": "536490",
    "end": "549209"
  },
  {
    "text": "direction and thankfully be it's the aura started out as a completely by sequel compatible database where",
    "start": "549209",
    "end": "555630"
  },
  {
    "text": "basically we took the my sequel source code first of all made a few changes in the storage layer in order to make it",
    "start": "555630",
    "end": "561959"
  },
  {
    "text": "much more available much more durable we'll talk about that plus a few extra features that are at the database",
    "start": "561959",
    "end": "568199"
  },
  {
    "text": "instance like in the database executable itself so you get a lot of advantages",
    "start": "568199",
    "end": "573839"
  },
  {
    "text": "and then a few years later we added Postgres so now you have a my sequin Postgres compatible database it's a",
    "start": "573839",
    "end": "580379"
  },
  {
    "text": "complete drop-in replacement which means that you will not suppose you will not",
    "start": "580379",
    "end": "585389"
  },
  {
    "text": "have to ever change a single line of code in your application switching back and forth between Ora and the complete",
    "start": "585389",
    "end": "592290"
  },
  {
    "text": "the open source my sequel in Postgres so you can move back and forth if portability is a concern to anyone you",
    "start": "592290",
    "end": "598410"
  },
  {
    "text": "can write it on or you can take the same application running in a different cloud or on-premises and you don't need to",
    "start": "598410",
    "end": "603990"
  },
  {
    "text": "change any code yes so richard boyd from twitch wants to know how do i get billed for or you said towards the pricing",
    "start": "603990",
    "end": "610110"
  },
  {
    "start": "605000",
    "end": "655000"
  },
  {
    "text": "so hora is billed for with the number of items one is the database instance or",
    "start": "610110",
    "end": "617310"
  },
  {
    "text": "the compute layer that's running you pay for that hourly there's discounts if you sign up for a long-term plan Reserve is ever observed",
    "start": "617310",
    "end": "624570"
  },
  {
    "text": "instance I'm in addition to that you pay for storage so whatever your database creates you pay you pay for that plus a",
    "start": "624570",
    "end": "631440"
  },
  {
    "text": "few networking and I oh there's IO charges there's a few special items that",
    "start": "631440",
    "end": "636660"
  },
  {
    "text": "like a few special features which are separately priced so that's all on the Performing formats and sites and most",
    "start": "636660",
    "end": "642270"
  },
  {
    "text": "people don't pay anything only if you want to keep it for two years backtrack track so there's a few special",
    "start": "642270",
    "end": "648450"
  },
  {
    "text": "items like that but for the simple answer is you pay for the running instance and you pay for the storage",
    "start": "648450",
    "end": "654060"
  },
  {
    "text": "that you're using great so that's actually an almost Segway because there are a lot of things that make managing",
    "start": "654060",
    "end": "659130"
  },
  {
    "start": "655000",
    "end": "709000"
  },
  {
    "text": "your own service or your being your own database administrator difficult um one of the things that you touched on was",
    "start": "659130",
    "end": "664200"
  },
  {
    "text": "scaling and separating compute and storage so this is one of the bread-and-butter value propositions of",
    "start": "664200",
    "end": "669450"
  },
  {
    "text": "Arora how does that happen and how do users have to think about scaling of storage and compute when they're using it right",
    "start": "669450",
    "end": "676430"
  },
  {
    "text": "so let's start with compute perhaps so with compute you know the standard thing",
    "start": "676430",
    "end": "682050"
  },
  {
    "text": "you know you you you launch a database you have one instance you know one one server running it with or you can go and",
    "start": "682050",
    "end": "690180"
  },
  {
    "text": "you can say I want to create additional Reid replicas or read notes which increase your read scalability so given",
    "start": "690180",
    "end": "696750"
  },
  {
    "text": "that it's a cloud given that we know the environment it's very easy for us to go and just create you know another read",
    "start": "696750",
    "end": "702630"
  },
  {
    "text": "replicas you can do that across three availability zones like you know pretty much any AWS service so we have that",
    "start": "702630",
    "end": "709560"
  },
  {
    "start": "709000",
    "end": "787000"
  },
  {
    "text": "advantage that's actually the smart thing to do is if you're going to run three you know like one master one",
    "start": "709560",
    "end": "715050"
  },
  {
    "text": "primary instance and to read replicas you know put them in the two other availability zones they make more sense",
    "start": "715050",
    "end": "720240"
  },
  {
    "text": "and you could put them in other regions so a feature called global database",
    "start": "720240",
    "end": "725670"
  },
  {
    "text": "which was announced that we invent in 2018 allows you to replicate to another region and I need to mention that each",
    "start": "725670",
    "end": "733470"
  },
  {
    "text": "each database can have v up to 15 read replicas and the same in the other regions so you can have a",
    "start": "733470",
    "end": "740360"
  },
  {
    "text": "based with 15 replicas copied into another region where there is another 16 and so on every other region has another",
    "start": "740360",
    "end": "746600"
  },
  {
    "text": "up to 16 reed replicas so given that it's cloud it's very easy for us to just go and do that you just chip you know",
    "start": "746600",
    "end": "753410"
  },
  {
    "text": "check a few boxes now your database is running across the world we have some",
    "start": "753410",
    "end": "759050"
  },
  {
    "text": "customer examples into it was a really good example so they're one of our references for this feature",
    "start": "759050",
    "end": "764300"
  },
  {
    "text": "so they put classic thing you put one on the west coast one on the east coast and now people in each region get very fast",
    "start": "764300",
    "end": "771680"
  },
  {
    "text": "local access and if there's a disaster then for disaster recovery purposes one",
    "start": "771680",
    "end": "777260"
  },
  {
    "text": "goes down the other one it's a tiny tiny tiny bit behind it's like less than a second and then you can continue you can",
    "start": "777260",
    "end": "784220"
  },
  {
    "text": "continue working from the other agent great and that's it really pulls a lot",
    "start": "784220",
    "end": "789709"
  },
  {
    "start": "787000",
    "end": "840000"
  },
  {
    "text": "under like the scaling out concept right but as for scaling up um typically you see for databases certain tiers right",
    "start": "789709",
    "end": "796970"
  },
  {
    "text": "it's like what speed do you want for a network bandwidth and so on and so forth but um and predicting when you need to",
    "start": "796970",
    "end": "803810"
  },
  {
    "text": "make that jump to a larger storage a unit but Aurora doesn't have that right you are scaled dynamically to whatever",
    "start": "803810",
    "end": "809750"
  },
  {
    "text": "data you have not just charge you for that but you don't have to worry about flipping the switch to provision a",
    "start": "809750",
    "end": "815240"
  },
  {
    "text": "larger presence right correct so yes so or on the storage level it's completely auto scaling so what it does is it",
    "start": "815240",
    "end": "821779"
  },
  {
    "text": "allocates the storage in ten gigabyte chunks and every time you need more storage it just allocates the next chunk",
    "start": "821779",
    "end": "827449"
  },
  {
    "text": "and you pay for exactly what you use she don't really need to think about it you just write to your database and it kind",
    "start": "827449",
    "end": "832640"
  },
  {
    "text": "of takes care of itself up to you know so right now we have a limit of 64",
    "start": "832640",
    "end": "837800"
  },
  {
    "text": "terabytes good enough for pretty much anybody I've never created as I don't think I've ever created a one terabyte",
    "start": "837800",
    "end": "843470"
  },
  {
    "start": "840000",
    "end": "908000"
  },
  {
    "text": "database yeah you can you can do that",
    "start": "843470",
    "end": "848750"
  },
  {
    "text": "with one line of code I know so yeah and",
    "start": "848750",
    "end": "853930"
  },
  {
    "text": "going back to the computer layer you can also scale up on the computer onto some pretty you know big beefy instances so",
    "start": "853930",
    "end": "862850"
  },
  {
    "text": "we do with you know multiple cores and it's maybe consider a little old-fashioned these days I mean back in",
    "start": "862850",
    "end": "869360"
  },
  {
    "text": "the 90s I think you know the way to scale your application is to put a bigger and bigger database as you users and applications were kind of",
    "start": "869360",
    "end": "876470"
  },
  {
    "text": "built that way and inevitably you get into these monster hardware for your database when your application is",
    "start": "876470",
    "end": "883520"
  },
  {
    "text": "written that way today in the cloud you know you can scale out you can create replicas you can write you can you can",
    "start": "883520",
    "end": "889850"
  },
  {
    "text": "write your application in a more you know kind of easier to scale way that's how web applications get built they",
    "start": "889850",
    "end": "895460"
  },
  {
    "text": "wouldn't get built by you know putting a faster and faster CPU you know to put all of them as on Comm on one CPU that's",
    "start": "895460",
    "end": "902210"
  },
  {
    "text": "not gonna work so moderate applications are obviously built with scale out in mind in regional expansion in mind",
    "start": "902210",
    "end": "907940"
  },
  {
    "text": "modern-day problems require modern solutions so if you hear me say that too",
    "start": "907940",
    "end": "913400"
  },
  {
    "start": "908000",
    "end": "985000"
  },
  {
    "text": "many times I'm sorry so I think it's C or is asking about running Aurora in a",
    "start": "913400",
    "end": "920510"
  },
  {
    "text": "docker instance the good news about that is you don't need to because it's just sequel or Postgres so it's it's really just you know yeah regular you can run",
    "start": "920510",
    "end": "928610"
  },
  {
    "text": "my sequel in a docker instance where you could run Postgres in a docker instance and then you would be able to use the",
    "start": "928610",
    "end": "933920"
  },
  {
    "text": "exact same commands and queries to access the Aurora database and prod correct yeah there's some mug",
    "start": "933920",
    "end": "940070"
  },
  {
    "text": "I guess best practices which we can point to some documents that we have around how you would do that like if you",
    "start": "940070",
    "end": "946580"
  },
  {
    "text": "have multiple docker containers and you're accessing the same database and like exactly how that would work which goes you know deeper then I guess we",
    "start": "946580",
    "end": "953060"
  },
  {
    "text": "want to cover today but the database itself I mean it's just you know it's an endpoint to you it's you know you just",
    "start": "953060",
    "end": "959660"
  },
  {
    "text": "access it there is also a preview of an",
    "start": "959660",
    "end": "965210"
  },
  {
    "text": "HTTP access to the database which might use for with data API which might be useful to some people like if you have",
    "start": "965210",
    "end": "971240"
  },
  {
    "text": "many clients kind of with short-lived connections like from IOT devices or this is the classic use case then you",
    "start": "971240",
    "end": "978290"
  },
  {
    "text": "can just connect you know those what may be running in containers or may be running out of nowhere and they can just connect through HTTP so what a lot of",
    "start": "978290",
    "end": "986120"
  },
  {
    "start": "985000",
    "end": "1055000"
  },
  {
    "text": "people don't realize is when they are accessing my seek or Postgres the ORM or",
    "start": "986120",
    "end": "991940"
  },
  {
    "text": "the client that they're using to connect in their code is responsible for a couple of different things right it's",
    "start": "991940",
    "end": "997790"
  },
  {
    "text": "doing connection pooling it is doing retries and maintaining state maintaining session you know session",
    "start": "997790",
    "end": "1004600"
  },
  {
    "text": "variables that you set for for different transactions and time so all of those things that client is responsible for setting all that steep",
    "start": "1004600",
    "end": "1010570"
  },
  {
    "text": "and it's typically abstracted away from the the code that you really write but",
    "start": "1010570",
    "end": "1016810"
  },
  {
    "text": "the cool thing about the data API is your your sequel kind of query is",
    "start": "1016810",
    "end": "1022660"
  },
  {
    "text": "transformed into an HP request yes and the other advantage of that is if you go",
    "start": "1022660",
    "end": "1027699"
  },
  {
    "text": "into an environment with like lambda functions you don't have to run a PG bounce which would be a common method",
    "start": "1027699",
    "end": "1034240"
  },
  {
    "text": "for pooling different connections together you don't have to run PG bounce",
    "start": "1034240",
    "end": "1041048"
  },
  {
    "text": "on some Fargate container out in the cloud somewhere you can just go and say I'm gonna you know hammer this instance",
    "start": "1041049",
    "end": "1048250"
  },
  {
    "text": "with lots and lots of connections and it handles the connection pooling on that data API side exactly it's very powerful",
    "start": "1048250",
    "end": "1054490"
  },
  {
    "text": "and there was another question from D lawyer about the the local development",
    "start": "1054490",
    "end": "1060760"
  },
  {
    "start": "1055000",
    "end": "1115000"
  },
  {
    "text": "and the docker side of things and the other thing that I'll point out is one of the advantages of Aurora is previously if you wanted to spin up a",
    "start": "1060760",
    "end": "1067720"
  },
  {
    "text": "dev instance right of your of your production workload to do that would",
    "start": "1067720",
    "end": "1073299"
  },
  {
    "text": "take time because you would have to say if you had a couple terabytes worth of data it would take time to go and get",
    "start": "1073299",
    "end": "1078880"
  },
  {
    "text": "into the the the dev VPC and then you'd have to have it you know restore from",
    "start": "1078880",
    "end": "1084160"
  },
  {
    "text": "the snapshot and it would take hours and hours snapshots in Aurora are like minutes rest it's straight dope it's",
    "start": "1084160",
    "end": "1092590"
  },
  {
    "text": "super cool I sorry no idea how much time in my life has been spent on a CLI",
    "start": "1092590",
    "end": "1099360"
  },
  {
    "text": "pleasingly looking at you know how far along that rsync command is and to not have to do that",
    "start": "1099360",
    "end": "1105730"
  },
  {
    "text": "yes very technical term straight though fraida yeah highest praise we can give",
    "start": "1105730",
    "end": "1111400"
  },
  {
    "text": "it but well yeah it's an extremely technical term yeah we actually had some other awesome questions in the concept",
    "start": "1111400",
    "end": "1116770"
  },
  {
    "start": "1115000",
    "end": "1166000"
  },
  {
    "text": "of scaling before you move on so Richard asked with respects to the multi region replication do we does the service",
    "start": "1116770",
    "end": "1124210"
  },
  {
    "text": "charge for network out fees on the data or is it just the per as per the like",
    "start": "1124210",
    "end": "1129940"
  },
  {
    "text": "line items that you listed before yeah George with you it does yes so when you use that feature called global database",
    "start": "1129940",
    "end": "1136480"
  },
  {
    "text": "you're basically paying for the databases that you that you running in whatever region they're running and you're paying for the data",
    "start": "1136480",
    "end": "1142650"
  },
  {
    "text": "transfer between those regions okay that's correct and just a correction from earlier we actually built per second now we do we'll per second yeah",
    "start": "1142650",
    "end": "1149610"
  },
  {
    "text": "that's very new if you're keeping your database up for one second one second you know no I think there's a 10-minute",
    "start": "1149610",
    "end": "1156360"
  },
  {
    "text": "little there's a minimum right yes so if you're keeping it for 10 minutes you gain those 50 minutes yeah feel good",
    "start": "1156360",
    "end": "1162870"
  },
  {
    "text": "about yourself yeah and this is a we talk about auto scaling a lot across a",
    "start": "1162870",
    "end": "1168630"
  },
  {
    "start": "1166000",
    "end": "1315000"
  },
  {
    "text": "lot of different services but in relation to in auto scaling to more data that you put into it does it",
    "start": "1168630",
    "end": "1174600"
  },
  {
    "text": "automatically scale back down or do you just not even need to worry about the ops under the hood you just worry about that the fact that your data lives in",
    "start": "1174600",
    "end": "1180960"
  },
  {
    "text": "that database right so let's talk a little bit about auto scaling so there's basically two types of auto scaling in Ora one which is scale scaling in and",
    "start": "1180960",
    "end": "1188040"
  },
  {
    "text": "out and the other one is up-and-down so starting with in-and-out it's based on the auto scaling capability that's built",
    "start": "1188040",
    "end": "1193740"
  },
  {
    "text": "into ec2 and a bunch of other aw services but there is basically a set of rules and if certain thresholds are met",
    "start": "1193740",
    "end": "1200280"
  },
  {
    "text": "it'll start another replica and then it'll shut it down when you know when when it falls below that minimum so Ora",
    "start": "1200280",
    "end": "1207090"
  },
  {
    "text": "supports that and you can scale out that way so that's one the second thing which is kind of more fun according to most",
    "start": "1207090",
    "end": "1213840"
  },
  {
    "text": "people is what's called Ora serverless which makes the database server lists in the same way that a lot of things are",
    "start": "1213840",
    "end": "1219900"
  },
  {
    "text": "serviced like lambda like others so if your completion layer is serverless and",
    "start": "1219900",
    "end": "1225540"
  },
  {
    "text": "that's the way you write it how about if your database layer was also serviced I think that's a good match so in a serverless database you never",
    "start": "1225540",
    "end": "1231870"
  },
  {
    "text": "think about the hardware you don't know how much memory it has you don't know any of that you just say I need a",
    "start": "1231870",
    "end": "1238590"
  },
  {
    "text": "database and it's measured in units which we called Ora capacity units and you start with you know maybe one of",
    "start": "1238590",
    "end": "1244590"
  },
  {
    "text": "those or two of those you know how much they cost and if the load on your database grows it will move your",
    "start": "1244590",
    "end": "1250980"
  },
  {
    "text": "database it'll scale it up into a bigger instance size so you know bigger CPU",
    "start": "1250980",
    "end": "1256140"
  },
  {
    "text": "more memory or whatever you need and it can scale up multiple times or it can scale down even all the way to zero so",
    "start": "1256140",
    "end": "1262470"
  },
  {
    "text": "if you want you can configure it that way if nobody if there's no traffic on the database at all then after a certain",
    "start": "1262470",
    "end": "1267930"
  },
  {
    "text": "amount of time it'll shut it down completely at that point you'll pay exactly zero hmm until traffic starts up again and",
    "start": "1267930",
    "end": "1275330"
  },
  {
    "text": "then within a few seconds it'll go back so for some people that's not acceptable they don't want the first user that",
    "start": "1275330",
    "end": "1280580"
  },
  {
    "text": "comes along after the break they have to wait for you know ten or twenty or thirty seconds if that's acceptable to",
    "start": "1280580",
    "end": "1287060"
  },
  {
    "text": "you can save money that way it's amazing for a dev workloads to be able to go down to zero right I mean I actually I went in and I",
    "start": "1287060",
    "end": "1293540"
  },
  {
    "text": "took snapshots and I restored into these Aurora service clusters for pretty much every production application that I run",
    "start": "1293540",
    "end": "1299150"
  },
  {
    "text": "because a lot of them you know don't get that many hits unless I'm actually out there in the field demoing it yet so I",
    "start": "1299150",
    "end": "1305660"
  },
  {
    "text": "have a scale down to zero and then right before I go onstage you know I do one little refresh request and then it's",
    "start": "1305660",
    "end": "1310850"
  },
  {
    "text": "golden for the next 30 minutes as I'm demonstrating it yeah and I believe this is just one of the biggest pain points",
    "start": "1310850",
    "end": "1316340"
  },
  {
    "start": "1315000",
    "end": "1431000"
  },
  {
    "text": "in general about pay per unit of time like services right it's like you forget",
    "start": "1316340",
    "end": "1321650"
  },
  {
    "text": "you left it on or yeah you know you don't want have to then inherit the workload of like spinning something up",
    "start": "1321650",
    "end": "1326750"
  },
  {
    "text": "and tearing it down every single time you just want to show somebody right so this gives you that flexibility but also only charging you for exactly what",
    "start": "1326750",
    "end": "1332570"
  },
  {
    "text": "you're using yeah I mean it's good for it for different types of scenarios so one is if you if",
    "start": "1332570",
    "end": "1337670"
  },
  {
    "text": "the load is unpredictable so if you have you know some of the examples visually",
    "start": "1337670",
    "end": "1343190"
  },
  {
    "text": "give our blogs or newspaper sites or things like that or something if there's a big breaking news item now suddenly a",
    "start": "1343190",
    "end": "1349130"
  },
  {
    "text": "million people you know jump on your website and you know you can't predict that ahead of time and that's and that's",
    "start": "1349130",
    "end": "1356240"
  },
  {
    "text": "how you know you would deal with an unpredictable situation another one going back to what Reynolds like what",
    "start": "1356240",
    "end": "1361400"
  },
  {
    "text": "you said earlier spend all that time spinning up databases for a dev test and if you could get back that time so here",
    "start": "1361400",
    "end": "1367340"
  },
  {
    "text": "this one surprised me I have to say I was wrong about this one because I thought that it was kind of stupid for",
    "start": "1367340",
    "end": "1372770"
  },
  {
    "text": "to use server lists for dev tests because while you're too lazy to shut down your QA instances at the end of the",
    "start": "1372770",
    "end": "1378020"
  },
  {
    "text": "day I mean come on you just go you don't know how many demos and not you I mean",
    "start": "1378020",
    "end": "1384140"
  },
  {
    "text": "it's totally predictable but even so being able to walk in there and click and not have to wait for the whole thing",
    "start": "1384140",
    "end": "1390200"
  },
  {
    "text": "to come up that's the point for developers and testers that's a lot of time savings so it's nice because yeah",
    "start": "1390200",
    "end": "1396200"
  },
  {
    "text": "you're getting you're not having to worry about you know if we if we want to go a little bit deeper you know this is going to be",
    "start": "1396200",
    "end": "1401960"
  },
  {
    "text": "steep dive yeah Aurora even takes care of like the cache",
    "start": "1401960",
    "end": "1407090"
  },
  {
    "text": "files the page files and there's like a whole layer there and you can read about this in the Aurora paper so the there",
    "start": "1407090",
    "end": "1413029"
  },
  {
    "text": "are a couple different overworked papers now but we publish I think three now I think I think three or four three or",
    "start": "1413029",
    "end": "1419840"
  },
  {
    "text": "four now different papers on the architecture of Aurora and the learnings that we've had the first one came out in 2015 and then yes all the subsequent",
    "start": "1419840",
    "end": "1427460"
  },
  {
    "text": "ones have been iterations on that and we're trying to open up about the the",
    "start": "1427460",
    "end": "1432830"
  },
  {
    "start": "1431000",
    "end": "1468000"
  },
  {
    "text": "realizations that we've had and running these great clubs at scale and I kind of forgot where I'm going but the fact that",
    "start": "1432830",
    "end": "1438710"
  },
  {
    "text": "even that you you're snapshot layer is like a direct restore or like fort or a",
    "start": "1438710",
    "end": "1446269"
  },
  {
    "text": "pointer to the new data that you're trying to access so instead of you having to wait for this compute layer to",
    "start": "1446269",
    "end": "1452740"
  },
  {
    "text": "what's the the word that people use when it it has to it's like the same word that people use for water instead it Oh",
    "start": "1452740",
    "end": "1459649"
  },
  {
    "text": "2d HUD yeah hydrating these compute nodes with all the data sorry I brain",
    "start": "1459649",
    "end": "1465679"
  },
  {
    "text": "messed up today yeah so hydrating these nodes just pointing at the storage that",
    "start": "1465679",
    "end": "1472369"
  },
  {
    "start": "1468000",
    "end": "1582000"
  },
  {
    "text": "already exists yes and I'm twerking off in another direction from the storage and it's like I know it's instant it's",
    "start": "1472369",
    "end": "1478159"
  },
  {
    "text": "so and there's and there's a little fleet of instances or like you know proxies sitting there waiting because",
    "start": "1478159",
    "end": "1484279"
  },
  {
    "text": "you can't because the application doesn't doesn't need to know that the database went down it needs to keep the",
    "start": "1484279",
    "end": "1489860"
  },
  {
    "text": "kinetic to see the connection still there so that fleet is waiting there at our expense and if if there's a new read",
    "start": "1489860",
    "end": "1496639"
  },
  {
    "text": "or write then it'll actually start up the actual instance from the pool of databases that it has there so yeah it's",
    "start": "1496639",
    "end": "1503480"
  },
  {
    "text": "pretty cool so let's also talk a little bit about us of what what how that works",
    "start": "1503480",
    "end": "1508909"
  },
  {
    "text": "on the storage layer yeah so they're going let me mention two features one",
    "start": "1508909",
    "end": "1514009"
  },
  {
    "text": "which is called fast database cloning and the other which is called backtrack just kind of related to the type of problem that you were talking about",
    "start": "1514009",
    "end": "1520100"
  },
  {
    "text": "where you want to just have a copy of you restore from a snapshot you know so",
    "start": "1520100",
    "end": "1525259"
  },
  {
    "text": "with fast database cloning you actually create a clone of your database without using any storage right",
    "start": "1525259",
    "end": "1530710"
  },
  {
    "text": "because all it does and there's similar features and usually storage systems things like that where you can create a",
    "start": "1530710",
    "end": "1536110"
  },
  {
    "text": "clone and now you can give people as many copies as they want because each of them has you know just the clone doesn't",
    "start": "1536110",
    "end": "1541690"
  },
  {
    "text": "actually use any any store it doesn't consume any storage unless they write something at unless the messers are",
    "start": "1541690",
    "end": "1547690"
  },
  {
    "text": "different if means that they write something so except for so that's one thing that's one way to quickly quickly",
    "start": "1547690",
    "end": "1553690"
  },
  {
    "text": "create a database for your development so that's called fast database coding available in both or my sequel and",
    "start": "1553690",
    "end": "1560470"
  },
  {
    "text": "Postgres backtrack is a way to restore your database to a previous point in",
    "start": "1560470",
    "end": "1565659"
  },
  {
    "text": "time so you can define a window based on",
    "start": "1565659",
    "end": "1570730"
  },
  {
    "text": "basically how much you want to keep how much history you want to keep wait does that window start it seven days or does",
    "start": "1570730",
    "end": "1576429"
  },
  {
    "text": "it starts at 72 hours a default and so even without turning even without opting",
    "start": "1576429",
    "end": "1583840"
  },
  {
    "start": "1582000",
    "end": "1670000"
  },
  {
    "text": "in you already have sort of that protection for three days or I think you have to turn on you don't have to pay",
    "start": "1583840",
    "end": "1589330"
  },
  {
    "text": "for the storage though if you want to keep that you keep as much as you want but that's you know yeah you're paying for that story so that's pretty cool if",
    "start": "1589330",
    "end": "1596380"
  },
  {
    "text": "you make a mistake you can just roll back and given the way that the or a storage system works we haven't actually",
    "start": "1596380",
    "end": "1602169"
  },
  {
    "text": "talked about the the architecture but but you can move back to that point in time within seconds it doesn't need to",
    "start": "1602169",
    "end": "1608080"
  },
  {
    "text": "restore from a backup it's just a storage layer operation in Ora so either it's good for recovering for mistakes or",
    "start": "1608080",
    "end": "1614559"
  },
  {
    "text": "another nice use case for back for backtracking is for QA so imagine that you have a",
    "start": "1614559",
    "end": "1622090"
  },
  {
    "text": "test case which is destructive to the data so one of the examples I like to give is let's say that you're an",
    "start": "1622090",
    "end": "1628179"
  },
  {
    "text": "e-commerce I don't know why I thought of that example let's say that you're an e-commerce company and you're testing a",
    "start": "1628179",
    "end": "1634840"
  },
  {
    "text": "test case where you're taking the last item out of inventory you want to see how your application deals with that so",
    "start": "1634840",
    "end": "1641440"
  },
  {
    "text": "you run your test you take the last item you know everything works fine now let's say you make some code changes you want to test it again you can't because you",
    "start": "1641440",
    "end": "1648309"
  },
  {
    "text": "just took the last item out of inventory there's the the data doesn't you don't have it so what you can do is just use",
    "start": "1648309",
    "end": "1653350"
  },
  {
    "text": "backtrack just move it back a few minutes before and now you're ready for",
    "start": "1653350",
    "end": "1658600"
  },
  {
    "text": "the next text test run so just put that in your test script and then you know what it'll do it'll",
    "start": "1658600",
    "end": "1663920"
  },
  {
    "text": "backtrack now you have the item back run the test and every time the item comes back so I think for QA it would be",
    "start": "1663920",
    "end": "1669680"
  },
  {
    "text": "pretty useful and I like that the underlying storage layer you know one of the things I guess we realized is we can",
    "start": "1669680",
    "end": "1676130"
  },
  {
    "start": "1670000",
    "end": "1874000"
  },
  {
    "text": "break the data into all these smaller chunks and move those smaller chunks around and kind of replicated in",
    "start": "1676130",
    "end": "1681290"
  },
  {
    "text": "multiple availability zones correct have we ever had like an entire easy go dark",
    "start": "1681290",
    "end": "1686870"
  },
  {
    "text": "not that I replay I can do this a long time I've never seen it but even in it even if we did have like one entire easy",
    "start": "1686870",
    "end": "1692750"
  },
  {
    "text": "just drop off the face of the internet right you know you still have two other Easy's at least where that data is",
    "start": "1692750",
    "end": "1699650"
  },
  {
    "text": "replicated correct and within a given availability zone we take a lot of measures to make sure that that is durable if for a lot of it are worried",
    "start": "1699650",
    "end": "1706910"
  },
  {
    "text": "right like availability zone consists of having multiple geographically separated",
    "start": "1706910",
    "end": "1712340"
  },
  {
    "text": "data centers such that if you know the power goes down at one of them or a natural disaster yeah exactly that and",
    "start": "1712340",
    "end": "1719210"
  },
  {
    "text": "they're physically separated to prevent that from that's like taking an entire ability zone they're far enough away",
    "start": "1719210",
    "end": "1724580"
  },
  {
    "text": "from each other so that if there's a disaster in one it's not likely that it'll be on the other in the other but",
    "start": "1724580",
    "end": "1729590"
  },
  {
    "text": "they're close enough so that the latency is low so that we can be send data very we don't push the boundaries and laws of",
    "start": "1729590",
    "end": "1735080"
  },
  {
    "text": "physics exactly and there's three separate or an AC has multiple well the",
    "start": "1735080",
    "end": "1743690"
  },
  {
    "text": "the line that you know I guess we hear from Peter de Santos pertains Hamilton and those folks is that these are",
    "start": "1743690",
    "end": "1751400"
  },
  {
    "text": "typically comprised multiple data centers so they're connected with you",
    "start": "1751400",
    "end": "1758120"
  },
  {
    "text": "know if we scale out us east one for instance you go and you look at you know one a one building as many as six",
    "start": "1758120",
    "end": "1764390"
  },
  {
    "text": "different buildings and then between those buildings you have two inch metro fiber connecting them with like or two",
    "start": "1764390",
    "end": "1770180"
  },
  {
    "text": "inch conduit full of like six thousand nine hundred twelve fiber pairs and the trucks that they used to spice these",
    "start": "1770180",
    "end": "1775640"
  },
  {
    "text": "fibers are totally crazy by the way it's a you you need a literal truck like an 18-wheeler to go and fix these and then",
    "start": "1775640",
    "end": "1782990"
  },
  {
    "text": "they have you know you know in US East one a I'm saying one a but one a is not",
    "start": "1782990",
    "end": "1790070"
  },
  {
    "text": "the same for everyone but you know their internal descriptors so today what these are we have as many as three hundred eighty four unique fiber paths through",
    "start": "1790070",
    "end": "1796700"
  },
  {
    "text": "the different buildings which is how many 384 no way it sounds like me another",
    "start": "1796700",
    "end": "1802480"
  },
  {
    "text": "show about diving deep on cable technology I know I spent some time in Australia and Sydney with our networking",
    "start": "1802480",
    "end": "1809110"
  },
  {
    "text": "team there and the things they have told me about our cabling and the stuff that",
    "start": "1809110",
    "end": "1814300"
  },
  {
    "text": "we do is just phenomenally we built a special coating for Australia because the termites there evolved to eat",
    "start": "1814300",
    "end": "1820180"
  },
  {
    "text": "plastic modern problems modern solutions",
    "start": "1820180",
    "end": "1825970"
  },
  {
    "text": "right - right - wouldn't be able to exist if we weren't innovating at every",
    "start": "1825970",
    "end": "1831430"
  },
  {
    "text": "single layer of the stack so you can't you can't just you know invent some amazing new piece of software you",
    "start": "1831430",
    "end": "1836440"
  },
  {
    "text": "actually need people who are gonna be able to go through that whole stack of problems and solutions and attack each",
    "start": "1836440",
    "end": "1843430"
  },
  {
    "text": "one and try and innovate on each one and that's honestly that's what's kind of unique about Amazon I've worked at other places and and they kind of offload some",
    "start": "1843430",
    "end": "1850570"
  },
  {
    "text": "of that innovation effort to suppliers and stuff like that but here you know yeah it's like hey let me let me invest",
    "start": "1850570",
    "end": "1856420"
  },
  {
    "text": "as much time and effort into finding a better solution and we make no assumptions about the past and it's available to anyone I mean if you",
    "start": "1856420",
    "end": "1862270"
  },
  {
    "text": "thought about like 10 20 years ago you know if you started a company and having your a copy of your data on the on the",
    "start": "1862270",
    "end": "1867790"
  },
  {
    "text": "west coast and on the East Coast and in Sydney though it would have been unthinkable yeah 10 years ago it's pretty",
    "start": "1867790",
    "end": "1873310"
  },
  {
    "text": "interesting yeah there's we have a lot of questions we're gonna have a hard stop here at 1:00 p.m. yes so maybe we",
    "start": "1873310",
    "end": "1881110"
  },
  {
    "text": "should just show launching an Aurora cluster for a second and kind of go through that could we get the computer",
    "start": "1881110",
    "end": "1888600"
  },
  {
    "text": "disk you wonderful ok great so I am",
    "start": "1888690",
    "end": "1894570"
  },
  {
    "text": "looking at the AWS console or the RDS console specifically here you can see a",
    "start": "1894570",
    "end": "1900130"
  },
  {
    "text": "list of my databases I don't have any running right now let me go and create a database and I won't do the whole the",
    "start": "1900130",
    "end": "1906100"
  },
  {
    "text": "whole process but let's just show a few things that are interesting that some of",
    "start": "1906100",
    "end": "1912040"
  },
  {
    "text": "what we talked about today so first of all as we said in Amazon RDS or relational database service you need to",
    "start": "1912040",
    "end": "1918220"
  },
  {
    "text": "choose which engine you want to run so I will choose Amazon or R which is the first one you can see that there's other",
    "start": "1918220",
    "end": "1924160"
  },
  {
    "text": "popular databases available here one of the first questions that I will",
    "start": "1924160",
    "end": "1929750"
  },
  {
    "text": "one answer is do I want it to be my sequel or Postgres compatible so these are two editions of the or a database",
    "start": "1929750",
    "end": "1936740"
  },
  {
    "text": "and which version of those of those database engines I want to use so you",
    "start": "1936740",
    "end": "1942830"
  },
  {
    "text": "know five six is a standard my sequel version and there's other ones there's a there's five seven and other other",
    "start": "1942830",
    "end": "1949970"
  },
  {
    "text": "options we talked about regional so when I choose about you know global database",
    "start": "1949970",
    "end": "1957830"
  },
  {
    "text": "so when I choose to run my database in just one region that's the simplest option I choose one AWS region and",
    "start": "1957830",
    "end": "1964400"
  },
  {
    "text": "that's where it runs or I can say I want global database which means I can choose other places that it'll get that it'll",
    "start": "1964400",
    "end": "1971180"
  },
  {
    "text": "get copied to a few other things that that you can choose aside from the",
    "start": "1971180",
    "end": "1979940"
  },
  {
    "text": "default option where you have a primary instance and multiple readers or read replicas up to 15 read replicas you can",
    "start": "1979940",
    "end": "1987170"
  },
  {
    "text": "also use what's called parallel query which is an option that we didn't talk about today but it's basically you know",
    "start": "1987170",
    "end": "1993710"
  },
  {
    "text": "going back to what Randall that you said that we have a powerful storage layer where we spread out the data across",
    "start": "1993710",
    "end": "1999560"
  },
  {
    "text": "hundreds of nodes and they're all basically you know like storage nodes",
    "start": "1999560",
    "end": "2004600"
  },
  {
    "text": "that are doing the work of you know storing and reading and writing your data why not also put them to work to",
    "start": "2004600",
    "end": "2012190"
  },
  {
    "text": "work on your query so since we have all that components that it's tough but it's also like MapReduce you have these",
    "start": "2012190",
    "end": "2017500"
  },
  {
    "text": "hundreds of nodes and each one of them holds a little piece of your data now if you're doing a big you know full table",
    "start": "2017500",
    "end": "2023260"
  },
  {
    "text": "scan not that you do that every day but let us say that that's what you're doing then each of them can look at the data",
    "start": "2023260",
    "end": "2029350"
  },
  {
    "text": "that's on that local disk on that node do some pre-processing it doesn't know everything about your query but it can",
    "start": "2029350",
    "end": "2036280"
  },
  {
    "text": "do some of that send a much smaller amount of data to the head node and then you know the the database instance",
    "start": "2036280",
    "end": "2042130"
  },
  {
    "text": "compute instance will actually do the rest of the work so that's called parallel query basically putting these to work this is a question for me and we",
    "start": "2042130",
    "end": "2049540"
  },
  {
    "text": "have a bunch of questions from the stream that we're gonna get to your but like do we have parallel query and",
    "start": "2049540",
    "end": "2054760"
  },
  {
    "text": "Postgres as well not yet not yet this is yeah this is you'll notice that I selected the my sequel option and let me",
    "start": "2054760",
    "end": "2062530"
  },
  {
    "text": "just answer that question in a general way which is the my sequel edition of Evora came came out",
    "start": "2062530",
    "end": "2069220"
  },
  {
    "text": "you know more than four years ago Postgres came out less than two years ago end of 2017 so you know there was a",
    "start": "2069220",
    "end": "2076480"
  },
  {
    "text": "two and a half year gap it's it's shrinking I mean we're adding features to Postgres all the time it's still you know I",
    "start": "2076480",
    "end": "2082868"
  },
  {
    "text": "wouldn't say it's two years behind but it's still more you know it's still behind in terms of some of these features looking for it to more Postgres",
    "start": "2082869",
    "end": "2089589"
  },
  {
    "text": "time I mean I love post guys how's my seatbelt but the Postgres is where okay it's my favorite so so you'll be happy",
    "start": "2089589",
    "end": "2096128"
  },
  {
    "text": "to hear that serverless which is an option available for my sequel it's coming out pretty soon for Postgres as",
    "start": "2096129",
    "end": "2102069"
  },
  {
    "text": "well it's been a preview for for a few months now and you know the release is getting very",
    "start": "2102069",
    "end": "2107710"
  },
  {
    "text": "near so server this is what we mentioned earlier where it'll scale up and down your database okay so that's kind of",
    "start": "2107710",
    "end": "2115420"
  },
  {
    "text": "these are kind of the domain I'm trying to think if there's any other we were earlier we were talking about applet we",
    "start": "2115420",
    "end": "2122589"
  },
  {
    "text": "were talking about auto scaling and one of the interesting things about scaling Aurora and RDS is we released a service",
    "start": "2122589",
    "end": "2128380"
  },
  {
    "text": "a couple years ago called application auto scaling so we within ec2 you have auto scaling groups and that service and",
    "start": "2128380",
    "end": "2135609"
  },
  {
    "text": "they can do predictive auto scaling and all that good stuff we actually four RDS and four DynamoDB",
    "start": "2135609",
    "end": "2140650"
  },
  {
    "start": "2138000",
    "end": "2213000"
  },
  {
    "text": "and from everything else we kind of wrapped up the semantics the common items into something called an",
    "start": "2140650",
    "end": "2145989"
  },
  {
    "text": "application auto scaling so now when you want to go and auto scale the virulence",
    "start": "2145989",
    "end": "2151779"
  },
  {
    "text": "and says that will actually happen through application auto scaling yeah there's some some page in the console",
    "start": "2151779",
    "end": "2158289"
  },
  {
    "text": "where you group through yeah yeah and on ec2 right well no it's in application",
    "start": "2158289",
    "end": "2163420"
  },
  {
    "text": "almost okay own ServiceNow so ec2 still has its own auto scaling groups but you can import ec2 auto scaling groups into",
    "start": "2163420",
    "end": "2169539"
  },
  {
    "text": "application auto scaling and you can even read metrics CloudWatch metrics from that to trigger scaling on the database layer or scaling on some other",
    "start": "2169539",
    "end": "2176140"
  },
  {
    "text": "layer and it wraps it all into one nice little package and you can build CloudFormation scripts with this and I",
    "start": "2176140",
    "end": "2181359"
  },
  {
    "text": "was gonna say because this is a huge topic right like just like oh just scale it right just spin up more or make use",
    "start": "2181359",
    "end": "2186549"
  },
  {
    "text": "bigger instances scale up like that's a gross over generalization of like what it really means to efficiently scale",
    "start": "2186549",
    "end": "2191769"
  },
  {
    "text": "things and every single one of these different services whether you're just random applications on ec2 server",
    "start": "2191769",
    "end": "2197090"
  },
  {
    "text": "databases will have different optimal pathways to scaling and so sometimes you need to have entire services dedicated",
    "start": "2197090",
    "end": "2203480"
  },
  {
    "text": "to doing that in efficient manner whole micro-service dedicated just auto-scaling it's true and it's probably",
    "start": "2203480",
    "end": "2208880"
  },
  {
    "text": "among its macro service so they're probably several micro services around that there's a one question that I'm",
    "start": "2208880",
    "end": "2214430"
  },
  {
    "start": "2213000",
    "end": "2418000"
  },
  {
    "text": "still a little unclear on which is the storage that grows automatically correct",
    "start": "2214430",
    "end": "2220850"
  },
  {
    "text": "and and we actually didn't mention that we keep six copies of your data that's actually a one of them oh yeah biggest claims to fame in Ora is that if you",
    "start": "2220850",
    "end": "2227840"
  },
  {
    "text": "look at so we have three a-z availability zones AZ's we keep two copies of your data in each of those",
    "start": "2227840",
    "end": "2233750"
  },
  {
    "text": "agencies so a total of six which you know talking is going back to what we started you know the show with I mean",
    "start": "2233750",
    "end": "2240170"
  },
  {
    "text": "would have been crazy you know 20 30 years ago six copies I mean two is kind of generous but now we can keep six and",
    "start": "2240170",
    "end": "2246890"
  },
  {
    "text": "it's highly highly unlikely that all six of them will die we have rules around",
    "start": "2246890",
    "end": "2252590"
  },
  {
    "text": "what happens when you know four out of six are alive three out of six or alive",
    "start": "2252590",
    "end": "2257600"
  },
  {
    "text": "which again doesn't really happen in real life I mean it's pretty rare these are but we need to plan for them you always have to present as various fond",
    "start": "2257600",
    "end": "2264260"
  },
  {
    "text": "of saying at scale everything fails all the time okay so so I get why we build",
    "start": "2264260",
    "end": "2270740"
  },
  {
    "text": "out that kind of you know high availability ridiculously high availability in some cases correct",
    "start": "2270740",
    "end": "2276500"
  },
  {
    "text": "so at scale things break um you also start to notice different patterns that",
    "start": "2276500",
    "end": "2281780"
  },
  {
    "text": "only you may face and so we talk a lot about the value behind it but I I want",
    "start": "2281780",
    "end": "2287690"
  },
  {
    "text": "to highlight sort of and talk about our usage of Aurora internally at Amazon because we are one of the largest users",
    "start": "2287690",
    "end": "2293930"
  },
  {
    "text": "of Rover right um so recently we finally migrated from a nother company's",
    "start": "2293930",
    "end": "2300590"
  },
  {
    "text": "database off to Aurora and this was a really big deal right because for a long time we recognize that rora",
    "start": "2300590",
    "end": "2307150"
  },
  {
    "text": "solved the problems for other customers but it was a very long transition to be able to use it internally for",
    "start": "2307150",
    "end": "2312860"
  },
  {
    "text": "fulfillment services what was that like or like what does Aurora really provide there that we weren't able to get prior",
    "start": "2312860",
    "end": "2318740"
  },
  {
    "text": "to that yeah so that's been a multi-year process to migrate pretty much you know",
    "start": "2318740",
    "end": "2325100"
  },
  {
    "text": "all of Amazon to database services specifically for aft Amazon Fulfillment technology I think",
    "start": "2325100",
    "end": "2332390"
  },
  {
    "text": "it's what it stands for and these are the this is the group that's running our fulfillment centers basically these",
    "start": "2332390",
    "end": "2337759"
  },
  {
    "text": "warehouses were where you get stuff you know in two days to your home so we",
    "start": "2337759",
    "end": "2343909"
  },
  {
    "text": "switched all you know there were many many hundreds of instances which we switched from you know another database",
    "start": "2343909",
    "end": "2351499"
  },
  {
    "text": "company has you called them and those were switched I'm gonna snap like it's",
    "start": "2351499",
    "end": "2357199"
  },
  {
    "text": "Oracle yeah let's call it call it speaking with derision about a",
    "start": "2357199",
    "end": "2363709"
  },
  {
    "text": "particular database that's Oracle it's very you know you know if they have a",
    "start": "2363709",
    "end": "2369979"
  },
  {
    "text": "lot of credit as you know we've been a very you know successful and you know they have good product and you know we",
    "start": "2369979",
    "end": "2377109"
  },
  {
    "text": "we can do anything that we need today with our own you know with our own database services we don't and when we",
    "start": "2377109",
    "end": "2383749"
  },
  {
    "text": "get all kinds of advantages that you think that you could not do with Oracle in terms of scaling in terms of cost in",
    "start": "2383749",
    "end": "2389329"
  },
  {
    "text": "terms of other you know other advantages so we were able to move the last",
    "start": "2389329",
    "end": "2394749"
  },
  {
    "text": "fulfillment center to Bora Postgres in at the end of March so there was a tweet",
    "start": "2394749",
    "end": "2400699"
  },
  {
    "text": "from Vernon Falls and others about that so that was a very happy moment and that",
    "start": "2400699",
    "end": "2407839"
  },
  {
    "text": "was you know that was in a long line of other you know migrations that we did in - you know from Oracle to AWS database",
    "start": "2407839",
    "end": "2415969"
  },
  {
    "text": "and analytic services you know over the last four years it's not just people that are operating in Amazon scale there",
    "start": "2415969",
    "end": "2420979"
  },
  {
    "start": "2418000",
    "end": "2828000"
  },
  {
    "text": "are a number of different customers that I've worked with just based in Los Angeles where I am that are excited",
    "start": "2420979",
    "end": "2426499"
  },
  {
    "text": "about not having to enter into these long term contracts and long support contracts and things like that just to",
    "start": "2426499",
    "end": "2431839"
  },
  {
    "text": "be able to store their data and access their data correct so I like to pay the pay as you go model and you're only",
    "start": "2431839",
    "end": "2437900"
  },
  {
    "text": "paying for what you use all those things that are typical of the cloud it's really that realization and so should we",
    "start": "2437900",
    "end": "2446119"
  },
  {
    "text": "maybe get to questions or enough time I think we can get back to questions really quickly I just wanted to talk",
    "start": "2446119",
    "end": "2452539"
  },
  {
    "text": "about that process right like that's a very long process there's multiple years as you mentioned um obviously not",
    "start": "2452539",
    "end": "2458390"
  },
  {
    "text": "everyone is off skills Amazon Sony I'll take the multiple years and by the way if you if you break that down into smaller chunks",
    "start": "2458390",
    "end": "2464069"
  },
  {
    "text": "you know some of these fulfillment centers were I think one of them was migrated it was less than an hour why",
    "start": "2464069",
    "end": "2470309"
  },
  {
    "text": "might I remember so your application might and your database might be no bigger than one of you know like one",
    "start": "2470309",
    "end": "2476190"
  },
  {
    "text": "fulfillment center at Amazon so maybe you I'm not saying any but everybody can migrate from Oracle to tour in an hour",
    "start": "2476190",
    "end": "2481980"
  },
  {
    "text": "but I'm just saying you know it doesn't need to be necessarily very difficult there's there's certain steps you need",
    "start": "2481980",
    "end": "2488280"
  },
  {
    "text": "to take yeah I know I'm opening a bit of a can of worms here but we offer in",
    "start": "2488280",
    "end": "2493290"
  },
  {
    "text": "tools internally to be able to help with that right database migration is a common workflow that people need to",
    "start": "2493290",
    "end": "2498660"
  },
  {
    "text": "undergo what are those tools that we offer and don't have to go too deep because that'll be its own episode later on but",
    "start": "2498660",
    "end": "2505530"
  },
  {
    "text": "you know what does that look like for someone saying hey I want to get on to Aurora from another database so two main",
    "start": "2505530",
    "end": "2511380"
  },
  {
    "text": "things that we offer so in terms of product the schema conversion tool is a tool that you can download for free and",
    "start": "2511380",
    "end": "2517619"
  },
  {
    "text": "what it does it will look at your database schema from pretty almost anything to anything I mean they keep",
    "start": "2517619",
    "end": "2522809"
  },
  {
    "text": "adding these new combinations almost you know it looks like feels like every morning so you want to migrate from",
    "start": "2522809",
    "end": "2528690"
  },
  {
    "text": "Oracle to - or - DynamoDB wanna couldn't you know convert from data warehouse to",
    "start": "2528690",
    "end": "2535890"
  },
  {
    "text": "a relational database to a non relation and all these different combinations it makes it much easier it converts what it",
    "start": "2535890",
    "end": "2541319"
  },
  {
    "text": "can and then shows you the the things that you need to convert manually if there's some line of you know PL sequel",
    "start": "2541319",
    "end": "2546630"
  },
  {
    "text": "code that it didn't understand or couldn't convert was another person okay exactly and so that's another really",
    "start": "2546630",
    "end": "2552960"
  },
  {
    "text": "cool thing with the lawyers you have like the lambda function stored procedures correct yeah we could talk about that",
    "start": "2552960",
    "end": "2558450"
  },
  {
    "text": "only have five minutes of you this is office hours right this is this is for you guys to ask us questions so we're",
    "start": "2558450",
    "end": "2564210"
  },
  {
    "text": "gonna do some rapid fire questions now are you ready the first question is from via email to our database deep dive at",
    "start": "2564210",
    "end": "2570180"
  },
  {
    "text": "Amazon databases deep dive at amazon.com from Bojan Ajit I don't know how to say that",
    "start": "2570180",
    "end": "2576420"
  },
  {
    "text": "last name I apologize he asks what are the differences and what are the best practices for operating Aurora post-grad",
    "start": "2576420",
    "end": "2583170"
  },
  {
    "text": "sources operating traditional Postgres they want to optimize for read heavy versus kind of write workloads read",
    "start": "2583170",
    "end": "2591150"
  },
  {
    "text": "heavy right workloads so for I mean one of the biggest differences with standard",
    "start": "2591150",
    "end": "2597240"
  },
  {
    "text": "Postgres is what you don't need to do obviously so you don't need to do all that management and backups and patching",
    "start": "2597240",
    "end": "2602280"
  },
  {
    "text": "and all of those things you can definitely you know for read heavy workloads you you add read replicas and",
    "start": "2602280",
    "end": "2608850"
  },
  {
    "text": "you have the you know if 21 regions read replicas is up to 15 of them right so 21",
    "start": "2608850",
    "end": "2614550"
  },
  {
    "text": "times 16 different nodes and it's like 336 nodes or something correct yeah I just need to just a caveat that the",
    "start": "2614550",
    "end": "2620910"
  },
  {
    "text": "version that is deployed right now copies to one other region we're coming out with the one that copies to all of",
    "start": "2620910",
    "end": "2626130"
  },
  {
    "text": "them pretty soon yeah so if you want to get started you can start with copying to one other region and just wait for",
    "start": "2626130",
    "end": "2631410"
  },
  {
    "text": "the other version to the language is pretty soon but my sequel is multiple regions right now well what I just",
    "start": "2631410",
    "end": "2638100"
  },
  {
    "text": "described is my sequel so if I'm asking about the butter pressing specific about about Postgres and using global database",
    "start": "2638100",
    "end": "2643620"
  },
  {
    "text": "that's on the road okay so we will do that for post Chris as well I have another question from the chat this one",
    "start": "2643620",
    "end": "2649020"
  },
  {
    "text": "here is from home row Coe question is if they distribute over multiple zones and",
    "start": "2649020",
    "end": "2654300"
  },
  {
    "text": "then also scale EBS over multiple zones how do they know which EBS server is accessing which Aurora instance in which",
    "start": "2654300",
    "end": "2660720"
  },
  {
    "text": "them so we've got a lot of like multi region will TV it does not that's not so",
    "start": "2660720",
    "end": "2667560"
  },
  {
    "text": "Ora has its own unique storage system we haven't actually talked about that but",
    "start": "2667560",
    "end": "2672830"
  },
  {
    "text": "EBS is what we use for actually for other database engines for the standard my sequel you know RDS my sequel engine",
    "start": "2672830",
    "end": "2679920"
  },
  {
    "text": "revvs for Ora we built a completely purpose-built storage system which is",
    "start": "2679920",
    "end": "2685050"
  },
  {
    "text": "log structured so and talk about that for our cycle it's really cool writes",
    "start": "2685050",
    "end": "2691140"
  },
  {
    "text": "all of your changes as a kind of endless log it's actually a little bit more like what databases usually do then what",
    "start": "2691140",
    "end": "2697170"
  },
  {
    "text": "storage systems you have to do and moving back to a previous state as a matter of just you know using previous",
    "start": "2697170",
    "end": "2703920"
  },
  {
    "text": "record logs that are still there and just using them instead of the last ones it's a pretty cool thing so so that's",
    "start": "2703920",
    "end": "2712050"
  },
  {
    "text": "how it works it allows us to do a whole bunch of interesting things and not that there's anything wrong with EBS but just",
    "start": "2712050",
    "end": "2717540"
  },
  {
    "text": "this is a more unique fit for database one is optimized for kind of random access box storage or sequential access",
    "start": "2717540",
    "end": "2723810"
  },
  {
    "text": "box storage and one is optimized for you know databases and any kind of",
    "start": "2723810",
    "end": "2728940"
  },
  {
    "text": "database storage and correct you know if you I'm sure your team is probably hiring if people wanted to come work on",
    "start": "2728940",
    "end": "2734490"
  },
  {
    "text": "this actually yeah if they did if they are I mean if you want to work on the storage there for example you know lots",
    "start": "2734490",
    "end": "2739860"
  },
  {
    "text": "of lots of opportunity and by the way these logs guess how we do global databases we copy those new logs to the",
    "start": "2739860",
    "end": "2745260"
  },
  {
    "text": "other region that's exactly what it is yeah so we have another you know home rovco's clarifying human elastic",
    "start": "2745260",
    "end": "2751620"
  },
  {
    "text": "beanstalk and i think that was a little bit of confusion the way you connected this is through the the endpoint so you get a connection to strain uri you go",
    "start": "2751620",
    "end": "2757590"
  },
  {
    "text": "and you connect to that uri and you say hey it doesn't really matter what a Z you're connecting to or from because",
    "start": "2757590",
    "end": "2763530"
  },
  {
    "text": "that URI is gonna be unique to that Aurora cluster have you have time for you yeah we have time for one last",
    "start": "2763530",
    "end": "2769110"
  },
  {
    "text": "question we have I think we knew a little over one so last question is from Richard Boyd again he asks if if",
    "start": "2769110",
    "end": "2778530"
  },
  {
    "text": "Aurora's based on ec2 and related services does it have to be in a V PC how does this relate to you know the",
    "start": "2778530",
    "end": "2783570"
  },
  {
    "text": "fact that it's server lists or has a circle is configuration available but can you be an MVP C - absolutely yeah so",
    "start": "2783570",
    "end": "2789690"
  },
  {
    "text": "quickly yes you you need to be in the V PC I think there's an older way that",
    "start": "2789690",
    "end": "2794790"
  },
  {
    "text": "might still work for some customers but I think that's kind of getting deprecated I mean you can still use it",
    "start": "2794790",
    "end": "2800430"
  },
  {
    "text": "but it's getting deprecated so yes you do want to be in a V PC in the specific case of serverless it uses a networking",
    "start": "2800430",
    "end": "2807750"
  },
  {
    "text": "technology whose name I keep forgetting and that means that either your",
    "start": "2807750",
    "end": "2812820"
  },
  {
    "text": "application is in the same V PC as the database or you can use the data API",
    "start": "2812820",
    "end": "2818250"
  },
  {
    "text": "that we mentioned earlier a new access here or a serverless database through HTTP coming through hyperplane not",
    "start": "2818250",
    "end": "2824190"
  },
  {
    "text": "hyperplane of some other name and then school pressure for life has what I",
    "start": "2824190",
    "end": "2829740"
  },
  {
    "start": "2828000",
    "end": "3025000"
  },
  {
    "text": "think is a pretty good feature request for your team which is okay when spinning up a fast DV clone off of prod",
    "start": "2829740",
    "end": "2836400"
  },
  {
    "text": "can you run any sort of data masking script on the data or any sort of transform on that snapshot so that you",
    "start": "2836400",
    "end": "2842220"
  },
  {
    "text": "could remove PII data so the customer ID wanted to run a developer right close could be masked like the social security",
    "start": "2842220",
    "end": "2848190"
  },
  {
    "text": "numbers yeah yeah we've thought about that we don't have that feature today you can use third-party masking",
    "start": "2848190",
    "end": "2855210"
  },
  {
    "text": "solutions you know with even with who you can profit yeah correct if people feel strongly that we",
    "start": "2855210",
    "end": "2862530"
  },
  {
    "text": "should have that as our own feature provided by the or RDS team that you know let us know we we're definitely",
    "start": "2862530",
    "end": "2868140"
  },
  {
    "text": "open to that kind of input what's called crusher for life which is whatever your",
    "start": "2868140",
    "end": "2873180"
  },
  {
    "text": "name is very enthusiastic about that and you have any other questions from the",
    "start": "2873180",
    "end": "2878250"
  },
  {
    "text": "stream um let me just give it a quick look I think we're good",
    "start": "2878250",
    "end": "2884010"
  },
  {
    "text": "but das Dylan is asking if a Roy post Christ instances will be available because now Aurora my sequel instances",
    "start": "2884010",
    "end": "2891480"
  },
  {
    "text": "you can go to like t3c to you know water if I think is the smallest now at each a medium T to medium I believe so maybe",
    "start": "2891480",
    "end": "2898800"
  },
  {
    "text": "small I think small for my sequel it's awesome oh nice okay you know what I don't I'll have to look I I can look and",
    "start": "2898800",
    "end": "2905670"
  },
  {
    "text": "follow up with you after this but the question is when will Postgres be able to run on smaller instant sizes as well",
    "start": "2905670",
    "end": "2911850"
  },
  {
    "text": "so Posterous i will need to check on that definitely t3 series I don't",
    "start": "2911850",
    "end": "2919740"
  },
  {
    "text": "remember if it's available now we can so I'm gonna post the email for the",
    "start": "2919740",
    "end": "2924870"
  },
  {
    "text": "questions that we didn't get to today okay so it's databases deep dive at amazon.com any questions that we weren't",
    "start": "2924870",
    "end": "2931650"
  },
  {
    "text": "able to answer on the stream follow-up and will either answer them in the next show or will answer them just via email",
    "start": "2931650",
    "end": "2936720"
  },
  {
    "text": "because you have access to all these amazing experts a couple things to cover we will not meet on next week because",
    "start": "2936720",
    "end": "2944150"
  },
  {
    "text": "something important is happening we're gonna be at a conference of yeah yeah we're gonna be in Canada which is you",
    "start": "2944150",
    "end": "2950670"
  },
  {
    "text": "know not that important but important part is we're gonna be here in the",
    "start": "2950670",
    "end": "2955950"
  },
  {
    "text": "studio so we're gonna be taking a week off we will be back again in two weeks I believe with one of our favorite guests",
    "start": "2955950",
    "end": "2963330"
  },
  {
    "text": "to Joseph to talk about document DB yeah so thank you for all of your questions again we have the email in the chat",
    "start": "2963330",
    "end": "2969300"
  },
  {
    "text": "we're looking forward to hearing from you and if we don't hear from you before then we will see you in two weeks on",
    "start": "2969300",
    "end": "2975360"
  },
  {
    "text": "Tuesday for the next episode you have that's so much a lot of fun it's been it's been fun we'll have to have you",
    "start": "2975360",
    "end": "2981090"
  },
  {
    "text": "back all right take it easy everyone have a great day",
    "start": "2981090",
    "end": "2985940"
  },
  {
    "text": "[Applause] [Music]",
    "start": "2987830",
    "end": "2991719"
  },
  {
    "text": "[Music] [Applause] [Music]",
    "start": "2995340",
    "end": "3001929"
  },
  {
    "text": "[Applause]",
    "start": "3006440",
    "end": "3009578"
  },
  {
    "text": "[Applause] here we go here we go here we go here we",
    "start": "3015750",
    "end": "3022770"
  },
  {
    "text": "go here we go here we go",
    "start": "3022770",
    "end": "3027410"
  }
]