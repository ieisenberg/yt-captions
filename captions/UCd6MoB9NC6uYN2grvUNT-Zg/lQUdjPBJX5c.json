[
  {
    "text": "hey everybody uh we're gonna get started now i guess so uh if you can grab your seats and settle in here uh thanks for coming",
    "start": "1520",
    "end": "7440"
  },
  {
    "text": "today to uh this talk called they don't hug back my name is chris muns i'm a solutions architect with amazon web services",
    "start": "7440",
    "end": "13440"
  },
  {
    "text": "based on our new york city office i'm also joined up here by martin rhodes from airbnb based in san francisco one of their sres",
    "start": "13440",
    "end": "20480"
  },
  {
    "text": "and so with that let's get started so why are we here today",
    "start": "20480",
    "end": "25519"
  },
  {
    "text": "my job as solutions architect is working with customers of all different shapes and sizes and helping them build and move their",
    "start": "25519",
    "end": "31599"
  },
  {
    "text": "infrastructure to aws cloud and what i find is that old school i.t practices continue to weigh companies",
    "start": "31599",
    "end": "37760"
  },
  {
    "text": "down every single day as they're looking to move to the cloud and as they're looking to move away from",
    "start": "37760",
    "end": "43040"
  },
  {
    "text": "old school physical infrastructure to a dynamic kind of highly virtualized cloud environment so",
    "start": "43040",
    "end": "48960"
  },
  {
    "text": "i'd like to start off the session today with a quote this is a great quote everything now is a programmable resource",
    "start": "48960",
    "end": "54879"
  },
  {
    "text": "there are no physical things anymore in the cloud things that you need to do by walking to the data center",
    "start": "54879",
    "end": "60480"
  },
  {
    "text": "by hugging your servers by doing your cervicals in a physical sense you don't need to do anymore",
    "start": "60480",
    "end": "65600"
  },
  {
    "text": "and believe me i've hugged enough servers in my life they do not hug you back this quote is from dr verner vogels the",
    "start": "65600",
    "end": "72240"
  },
  {
    "text": "cto of amazon from last year during his keynote presentation here at re invent",
    "start": "72240",
    "end": "77680"
  },
  {
    "text": "and so if you are a what i would term as a server hugger here you're thinking to yourself but i love my servers i love",
    "start": "77680",
    "end": "83200"
  },
  {
    "text": "going to the data center i love interacting with them another quote is that they hate you actually i honestly",
    "start": "83200",
    "end": "89840"
  },
  {
    "text": "believe that they hate you at least that's how they've always behaved towards me this is also from uh",
    "start": "89840",
    "end": "95680"
  },
  {
    "text": "from werner in his keynote last year so now that we've kind of established that and we've gotten through the fact that",
    "start": "95680",
    "end": "101280"
  },
  {
    "text": "as much as you love your servers they may not necessarily love you as much back",
    "start": "101280",
    "end": "107040"
  },
  {
    "text": "so so where does server hooking come from where is this term what does it mean so what are some of the things that we",
    "start": "107040",
    "end": "112479"
  },
  {
    "text": "do that that define someone who is a server hugger so what i consider one of the most primary things",
    "start": "112479",
    "end": "118399"
  },
  {
    "text": "that we do is we name them we give them all sorts of really interesting creative names so why do we name them we name them",
    "start": "118399",
    "end": "125280"
  },
  {
    "text": "because we had to find them where did we have to find them we had to find them here",
    "start": "125280",
    "end": "131599"
  },
  {
    "text": "more importantly we had to find them somewhere in here if you come from a large environment we've got several",
    "start": "131599",
    "end": "137360"
  },
  {
    "text": "several racks several cages maybe several data centers you have to know where to find these things you had to know where they would",
    "start": "137360",
    "end": "143040"
  },
  {
    "text": "be located and boy you had a really bad day if this thing was out of tape and you were",
    "start": "143040",
    "end": "148319"
  },
  {
    "text": "racking a bunch of new equipment because then no one was ever going to find anything that you just racked and",
    "start": "148319",
    "end": "153519"
  },
  {
    "text": "plugged in and started working with so why did we have to find them in person what was really the reason that",
    "start": "153519",
    "end": "159360"
  },
  {
    "text": "we had to go and do this well we had to because we had to fix them right we had to go there",
    "start": "159360",
    "end": "164959"
  },
  {
    "text": "and deal with these servers so what was the real reason for having to go there and do that well we had really finite resources that",
    "start": "164959",
    "end": "171360"
  },
  {
    "text": "led us to having to go to the data center to touch these servers to interact with them we had a finite amount of servers we had",
    "start": "171360",
    "end": "178400"
  },
  {
    "text": "a finite amount of space and we had a finite amount of time so if we had infrastructure",
    "start": "178400",
    "end": "184000"
  },
  {
    "text": "that was down if we had infrastructure that was broken if we had to replace a number of servers this was something that we had to go",
    "start": "184000",
    "end": "190000"
  },
  {
    "text": "there in person we had to do it we had to do it quickly because if we didn't well there was a lot of things that we were wasting",
    "start": "190000",
    "end": "195840"
  },
  {
    "text": "dead servers meant dead space on our racks we have a finite amount of space on our racks usually i don't think most",
    "start": "195840",
    "end": "200959"
  },
  {
    "text": "people have an infinite amount of physical rack space in the data centers that dead space is wasting money you're still paying for",
    "start": "200959",
    "end": "206560"
  },
  {
    "text": "power and cooling you're paying for the space and you've got this server that's probably not doing anything for you",
    "start": "206560",
    "end": "212400"
  },
  {
    "text": "dead servers could also equal worse performance so you've got this now useless piece of hardware again sitting",
    "start": "212400",
    "end": "217680"
  },
  {
    "text": "in your data center not doing anything for you if it was part of a larger pool of servers you know part of a web pool there's a",
    "start": "217680",
    "end": "223840"
  },
  {
    "text": "couple of these and you're going to start having performance problems with your applications",
    "start": "223840",
    "end": "229360"
  },
  {
    "text": "so where else does server have hugging come from it comes to treating them as our pets so",
    "start": "229360",
    "end": "234879"
  },
  {
    "text": "we think of these things we care about them again because we name them because we know where they're located",
    "start": "234879",
    "end": "240000"
  },
  {
    "text": "because we know exactly what they do because we have to go and physically take care of them like coming home at the end of the day",
    "start": "240000",
    "end": "246000"
  },
  {
    "text": "and letting your dog go outside you have to go to the data center and fix a bad hard drive very similar thing where we cared so",
    "start": "246000",
    "end": "252159"
  },
  {
    "text": "much about the resources and the components inside these servers going back to what we name our pets i've",
    "start": "252159",
    "end": "258000"
  },
  {
    "text": "heard so many different creative names over the years there's the greek god thing and i'm sure if i asked people to raise their hands",
    "start": "258000",
    "end": "264160"
  },
  {
    "text": "they would have definitely across one part in their life run into a greek god naming scheme there's elements",
    "start": "264160",
    "end": "269840"
  },
  {
    "text": "another really common one cities countries comic book heroes all sorts of things",
    "start": "269840",
    "end": "275919"
  },
  {
    "text": "that you can think about musicians bands and then you get to the names that are a little bit more useful",
    "start": "275919",
    "end": "281360"
  },
  {
    "text": "prod web 01 broad api 01 db master 01 these types of things and",
    "start": "281360",
    "end": "286960"
  },
  {
    "text": "while they give you a little bit of a glimpse into what the purpose is of the server that's basically all that they do they",
    "start": "286960",
    "end": "292800"
  },
  {
    "text": "rarely tell you where they are they really tell you what the hardware is they really tell you anything further about it",
    "start": "292800",
    "end": "298960"
  },
  {
    "text": "there's also really fun creative names like this one here at the bottom",
    "start": "298960",
    "end": "303680"
  },
  {
    "text": "p1cfw01vo3 so a few weeks ago i put out on twitter asking all of my friends in the",
    "start": "304520",
    "end": "309600"
  },
  {
    "text": "operations world to send me the absolute worst host name they could come up with and this one won out for me so when you",
    "start": "309600",
    "end": "316400"
  },
  {
    "text": "think about a host name like this p1cfw01vo3",
    "start": "316400",
    "end": "321440"
  },
  {
    "text": "all you could think about it is that it's a unique snowflake there are many other snowflakes that have other create",
    "start": "321440",
    "end": "326880"
  },
  {
    "text": "creative unique names but this one has one so peculiar and so specific for it that it makes",
    "start": "326880",
    "end": "332479"
  },
  {
    "text": "this piece of hardware this server so unique and what happens when it's so unique when",
    "start": "332479",
    "end": "338000"
  },
  {
    "text": "it's so individualized is that you start to think of it as a baby and you sit there and you watch over",
    "start": "338000",
    "end": "343759"
  },
  {
    "text": "your server babies and you care about each of them and you think to yourself oh look at p1",
    "start": "343759",
    "end": "349400"
  },
  {
    "text": "cfw01vo3 how cute it is i wonder how it's doing today is it cranky has it not slept well and so what",
    "start": "349400",
    "end": "356639"
  },
  {
    "text": "happens then is we allow these things to wake us up when they cry i'm sure many of you have seen an email like this before and more",
    "start": "356639",
    "end": "362800"
  },
  {
    "text": "importantly a page early on in the morning sometime around three or four a.m when you should be in the middle of your",
    "start": "362800",
    "end": "368400"
  },
  {
    "text": "your rem sleep happily dreaming about anything but servers but here we have a message from an",
    "start": "368400",
    "end": "374000"
  },
  {
    "text": "example web server high cpu load and we've now let this thing wake us up and disturb our happy rest",
    "start": "374000",
    "end": "382080"
  },
  {
    "text": "and so you know that that nagios alert that we saw back there that alert from that server",
    "start": "382080",
    "end": "387120"
  },
  {
    "text": "what is it really telling us what how useful is that to us right is the site actually performing",
    "start": "387120",
    "end": "392160"
  },
  {
    "text": "worse are customers actually impacted what is the rest of our server fleet doing are any of them impacted",
    "start": "392160",
    "end": "399440"
  },
  {
    "text": "what do i need to do to react to this is there anything unique about this host going back to the other server p1 before",
    "start": "399440",
    "end": "404880"
  },
  {
    "text": "how do we know what has happened to that host to know about how unique it might potentially be",
    "start": "404880",
    "end": "410400"
  },
  {
    "text": "you know what are the steps i'm going to need to take to remediate this problem and why am i remediating this problem again right so i had",
    "start": "410400",
    "end": "416080"
  },
  {
    "text": "a fleet of 20 web servers if web 03 is waking me up why should i care about that one so",
    "start": "416080",
    "end": "423440"
  },
  {
    "text": "i like to kind of summarize some of the bad practices that i see that i think define server hugging the first one is the",
    "start": "423440",
    "end": "429759"
  },
  {
    "text": "concept around petting right that's the idea of giving it a unique name about caring about its well-being about letting it",
    "start": "429759",
    "end": "435520"
  },
  {
    "text": "wake us up to let us know that there's something wrong with it it's a concept of snowflakes one-off servers in a pool that are",
    "start": "435520",
    "end": "442400"
  },
  {
    "text": "hand-built potentially that aren't uh in any way shape or form just completely the same as every other host",
    "start": "442400",
    "end": "448720"
  },
  {
    "text": "in our infrastructure there's something really unique to them another one is a process called model teeing",
    "start": "448720",
    "end": "454160"
  },
  {
    "text": "the ability that are people taking the time to build a server one off building it by hand installing packages",
    "start": "454160",
    "end": "459840"
  },
  {
    "text": "configuring it another practice that people bring from the hardware days or you didn't have automation tools",
    "start": "459840",
    "end": "465199"
  },
  {
    "text": "and you're doing that same type of thing in the cloud and the last one is names in stone so this is using a host's dns name as",
    "start": "465199",
    "end": "472560"
  },
  {
    "text": "its key identifier and how you're going to use it going forward again it doesn't tell you a whole lot about the the",
    "start": "472560",
    "end": "478560"
  },
  {
    "text": "host itself and what it's doing and when you take these practices and you bring them from old school data center ways",
    "start": "478560",
    "end": "484479"
  },
  {
    "text": "and physical infrastructure to aws into the cloud you lose out on a lot of the benefits of the cloud",
    "start": "484479",
    "end": "490720"
  },
  {
    "text": "things like being able to dynamically scale up or down self-healing infrastructure the increased flexibility that you get with",
    "start": "490720",
    "end": "496800"
  },
  {
    "text": "the cloud and be able to make use of automation so we're here to talk to you about today is",
    "start": "496800",
    "end": "501840"
  },
  {
    "text": "a little bit of the the light at the end of the tunnel the things that you can do to get away from server hugging and get used to the ability of just",
    "start": "501840",
    "end": "507680"
  },
  {
    "text": "throwing away your infrastructure not caring how it's doing and be able to continue to have your applications and your infrastructure",
    "start": "507680",
    "end": "513360"
  },
  {
    "text": "live on and letting go of these old school practices is really what's going to enable you",
    "start": "513360",
    "end": "518800"
  },
  {
    "text": "to make best use of aws to make use of all the great things you're going to hear about this week or might have heard about already today",
    "start": "518800",
    "end": "525440"
  },
  {
    "text": "some of the cool features that we have and some of the amazing capabilities and what some of our awesome customers are doing so",
    "start": "525440",
    "end": "532480"
  },
  {
    "text": "there's a couple of things that i'm going to talk about specifically today the first one is using auto scaling on everything",
    "start": "532480",
    "end": "538000"
  },
  {
    "text": "we'll talk about that in a minute the next one is enis and eips talk about using tags as the new dns",
    "start": "538000",
    "end": "544800"
  },
  {
    "text": "talk about using deployment tools and host-based configuration management to help automate the deployment of infrastructure and then lastly we'll talk about service",
    "start": "544800",
    "end": "551040"
  },
  {
    "text": "registries and at the end of that i'll hand it off to martin to talk about a really awesome tool that airbnb has",
    "start": "551040",
    "end": "556240"
  },
  {
    "text": "built deployed and open sourced and the whole idea here is to enable you",
    "start": "556240",
    "end": "561519"
  },
  {
    "text": "to have the ability to sleep through infrastructure recovery not sleep through infrastructure failure",
    "start": "561519",
    "end": "566720"
  },
  {
    "text": "that's a bad thing sleep through infrastructure recovery that's the idea that we want to have here a recovery that happens without us",
    "start": "566720",
    "end": "572320"
  },
  {
    "text": "having to wake up without us having to intervene and ever know anything about potentially what's gone wrong so i",
    "start": "572320",
    "end": "579839"
  },
  {
    "text": "in going along with that there are things that should never wake you up right high utilization of resources on a host high cpu",
    "start": "579839",
    "end": "585839"
  },
  {
    "text": "high memory a disk being full a process not running failed instances thread starvation",
    "start": "585839",
    "end": "592000"
  },
  {
    "text": "things like that these are things that we used to alert on on physical resources because we were bound by those physical resources",
    "start": "592000",
    "end": "598640"
  },
  {
    "text": "the pot was only so big when the water boiled over the top we had to clean up the mess in the cloud you don't have the same",
    "start": "598640",
    "end": "604560"
  },
  {
    "text": "problem so one of the first key ways or i'm sorry going back and just talking a little bit",
    "start": "604560",
    "end": "609760"
  },
  {
    "text": "about metrics here so if we were to think about the kind of metrics that we do care about the top thing the top picture that you",
    "start": "609760",
    "end": "615839"
  },
  {
    "text": "see here on this slide is cpu utilization from an ec2 instance the bottom one is latency off of an elb",
    "start": "615839",
    "end": "622079"
  },
  {
    "text": "a load balancer so if we were to think about the types of things that we would want to wake us up while cp utilization isn't one of them",
    "start": "622079",
    "end": "630000"
  },
  {
    "text": "latency off of an eob is because it could be much more telling about what is happening in the big picture of our",
    "start": "630000",
    "end": "635040"
  },
  {
    "text": "infrastructure and what our customers are actually experiencing so i urge you all when you go home after",
    "start": "635040",
    "end": "641120"
  },
  {
    "text": "uh your time here at re invent go back to your office and clear out all those cpu checks from nagios",
    "start": "641120",
    "end": "647440"
  },
  {
    "text": "and start thinking about checking for resources that actually matter to your users into your applications",
    "start": "647440",
    "end": "653680"
  },
  {
    "text": "uh the things that we do when we react to these type of alerts right we look at logs we look at graphs like",
    "start": "653680",
    "end": "659040"
  },
  {
    "text": "the ones i just showed you and then maybe we're restarting a service or rebooting an instance or doing something similar these are some",
    "start": "659040",
    "end": "665120"
  },
  {
    "text": "of the most common things that we do if you're dealing with on-call if you're taking care of an infrastructure but the problem with this is that the",
    "start": "665120",
    "end": "670959"
  },
  {
    "text": "first two that you're doing are actually already in the past the second that you look at data in a",
    "start": "670959",
    "end": "676640"
  },
  {
    "text": "centralized log tool you're looking at graphs the information is dated you don't really have a way to be sure",
    "start": "676640",
    "end": "682720"
  },
  {
    "text": "that it is accurate right this second until you wait for the next refresh of it in which case that data is dated",
    "start": "682720",
    "end": "688880"
  },
  {
    "text": "so we're constantly looking at past data that's not something we need to be doing as humans the next thing is the way that",
    "start": "688880",
    "end": "694640"
  },
  {
    "text": "we react to these things they're very common ways that we deal with it again we're dealing with computers all of the things that we are",
    "start": "694640",
    "end": "700720"
  },
  {
    "text": "doing to these computers are computerized so why are we manually going in restarting a service",
    "start": "700720",
    "end": "706480"
  },
  {
    "text": "restarting an instance adding more killing some things like that so everyone here should",
    "start": "706480",
    "end": "712959"
  },
  {
    "text": "be familiar with auto scaling it's a part of ec2 and part of the aws platform really awesome service",
    "start": "712959",
    "end": "718240"
  },
  {
    "text": "if we were to look at a a traffic graph here this was actually an old slide here for us here at aws",
    "start": "718240",
    "end": "724320"
  },
  {
    "text": "this was web traffic to amazon.com and in november one time kind of a rough",
    "start": "724320",
    "end": "729600"
  },
  {
    "text": "estimation of it and what typically most companies would do when they're doing capacity planning is say draw a line above 15 percent of",
    "start": "729600",
    "end": "736240"
  },
  {
    "text": "potential peak capacity and that is what we will build out i'm sorry 15",
    "start": "736240",
    "end": "741360"
  },
  {
    "text": "above peak utilization and then put our capacity at that what this results in is a lot of wasted",
    "start": "741360",
    "end": "747040"
  },
  {
    "text": "hardware a lot of wasted resources we're only really utilizing 24 of our resources if we were to plan this out",
    "start": "747040",
    "end": "752560"
  },
  {
    "text": "over a 30-day period so horribly inefficient and so essentially auto scaling allows us to",
    "start": "752560",
    "end": "757920"
  },
  {
    "text": "map our capacity resources to the utilization that we have at any given point in time so auto",
    "start": "757920",
    "end": "764480"
  },
  {
    "text": "scaling great service wonderful for large pools but not everything we have in our infrastructure is a large pool",
    "start": "764480",
    "end": "772000"
  },
  {
    "text": "so i give you kind of an example here of of this and how it can help you out there's a term out there stauneth i",
    "start": "772000",
    "end": "778160"
  },
  {
    "text": "don't know if you're familiar with it shoot the other node in the head the idea here being that when you have a cluster of instances",
    "start": "778160",
    "end": "784000"
  },
  {
    "text": "and something goes wrong with with one of them or multiples of them as long as the pool is large enough you",
    "start": "784000",
    "end": "789360"
  },
  {
    "text": "should feel comfortable to terminate that one instance that's misbehaving and allow the rest of the cluster to",
    "start": "789360",
    "end": "794639"
  },
  {
    "text": "live on what's great about doing this auto scaling is that if you kill an instance and it",
    "start": "794639",
    "end": "800079"
  },
  {
    "text": "brings you down below some threshold that your auto scaling group is set for maybe the minimum number of instances needed",
    "start": "800079",
    "end": "805839"
  },
  {
    "text": "or the desired number that you've set auto scaling is going to heal that instance for you so as an example here we've got an",
    "start": "805839",
    "end": "812399"
  },
  {
    "text": "infrastructure just showing a couple of bits here we've got a multi-az web application we've got three web hosts behind an elb",
    "start": "812399",
    "end": "819360"
  },
  {
    "text": "inside of a vpc so our traffic goes from our web hosts through our elb",
    "start": "819360",
    "end": "824560"
  },
  {
    "text": "out through our internet gateway out to to our customers and all of these instances and the elbs",
    "start": "824560",
    "end": "830800"
  },
  {
    "text": "and all the pieces of our infrastructure are reporting back a lot of information to cloudwatch our metrics and monitoring service that",
    "start": "830800",
    "end": "836480"
  },
  {
    "text": "we have across the platform so we've got these instances we've got these elbs they're reporting our metrics",
    "start": "836480",
    "end": "841519"
  },
  {
    "text": "back up to cloudwatch at some point let's say that we have a web instance that starts misbehaving",
    "start": "841519",
    "end": "847680"
  },
  {
    "text": "so something's gone wrong here based on how we have cloud watch configured we can have an alert created that alert",
    "start": "847680",
    "end": "854240"
  },
  {
    "text": "goes to sns simple notification service we can have that go to sqs simple queue",
    "start": "854240",
    "end": "859360"
  },
  {
    "text": "service we can have an instance that is polling sqs and that instance then can act upon",
    "start": "859360",
    "end": "865040"
  },
  {
    "text": "those alerts so in this case this web instance is clearly doing something wrong maybe it's spinning out more errors than",
    "start": "865040",
    "end": "870639"
  },
  {
    "text": "other ones maybe it's because it's on failed hardware maybe somebody's gotten corrupted with it something bad is going on with it",
    "start": "870639",
    "end": "877680"
  },
  {
    "text": "based off of that we can have our watcher instance actually tell the ec2 api kill this instance shoot it in the",
    "start": "877680",
    "end": "883760"
  },
  {
    "text": "head terminate it remove it from being in production right now clearly there's something going wrong with it and i'd rather not go and check",
    "start": "883760",
    "end": "890639"
  },
  {
    "text": "on it to deal with it as long as i know that the rest of the cluster that i have is good and fine what will happen is the instance will go",
    "start": "890639",
    "end": "896959"
  },
  {
    "text": "away and then auto scaling will go and look at the group and look at the pool of resources that are inside of that group and say huh",
    "start": "896959",
    "end": "903519"
  },
  {
    "text": "you know if i had a min of three here and right now i have two i need to heal that so we'll go back and replace the",
    "start": "903519",
    "end": "908639"
  },
  {
    "text": "instance and traffic will continue to throw through after it's uh restarted so just again",
    "start": "908639",
    "end": "913680"
  },
  {
    "text": "kind of an example here of the concept of being able to take a pool of auto scanning we're not necessarily",
    "start": "913680",
    "end": "918959"
  },
  {
    "text": "scaling up and down but we've got this minimal amount that we want to always have available for our",
    "start": "918959",
    "end": "924839"
  },
  {
    "text": "application so again auto scaling does all this for you uh it's pretty straightforward to",
    "start": "924839",
    "end": "930240"
  },
  {
    "text": "set up to do this where we're not worried about triggering an up or down motion we're worried about keeping a consistent pool size available for us",
    "start": "930240",
    "end": "937600"
  },
  {
    "text": "but what we can also do with auto scaling is set a min of one and a max of one around a single host essentially what that will do is give us",
    "start": "937600",
    "end": "943920"
  },
  {
    "text": "a singular host that if it ever dies it'll simply get recreated another great thing about auto scaling is that you can",
    "start": "943920",
    "end": "950000"
  },
  {
    "text": "actually spread it to say that it will utilize multiple availability zones with this min of one and max of one so",
    "start": "950000",
    "end": "955680"
  },
  {
    "text": "if you ever reach a time where you can't launch an instance inside of a certain a z auto skill will",
    "start": "955680",
    "end": "960720"
  },
  {
    "text": "actually attempt to launch it in the other ac so this can be really helpful if you do have a singular instance in your infrastructure",
    "start": "960720",
    "end": "965920"
  },
  {
    "text": "you can only have one of them running it's not something maybe that's poolable but you need to always have it running",
    "start": "965920",
    "end": "971199"
  },
  {
    "text": "the other great thing about autoscaling is that it has built-in notifications so notifications either at instance",
    "start": "971199",
    "end": "976800"
  },
  {
    "text": "termination or instance creation and you can use that same sns to sqs and then have a worker instance method there",
    "start": "976800",
    "end": "983920"
  },
  {
    "text": "for doing out of band things with that instance and also lastly auto scaling is free so there's",
    "start": "983920",
    "end": "989440"
  },
  {
    "text": "no extra charge for auto scaling which means that it is a tool that you should be thinking about utilizing because there's absolutely no penalty",
    "start": "989440",
    "end": "995600"
  },
  {
    "text": "to using it in terms of cost now the other thing you can do with auto scaling is that you could pass in things",
    "start": "995600",
    "end": "1001680"
  },
  {
    "text": "like metadata and user data to that instance if you are again a pool of one here such",
    "start": "1001680",
    "end": "1006720"
  },
  {
    "text": "that it can act upon that instance so you can do great things like reattach an ebs volume maybe restore an ebs",
    "start": "1006720",
    "end": "1012399"
  },
  {
    "text": "snapshot and then attach it reattaching an eni updating a service registry",
    "start": "1012399",
    "end": "1017920"
  },
  {
    "text": "updating dns updating some sort of other reliant applications inside of your infrastructure",
    "start": "1017920",
    "end": "1023199"
  },
  {
    "text": "so again with auto scaling this concept of auto healing your infrastructure not necessarily the scale up and down or",
    "start": "1023199",
    "end": "1029199"
  },
  {
    "text": "technically in and out horizontally it's still very very powerful so i want",
    "start": "1029199",
    "end": "1034798"
  },
  {
    "text": "to talk to you about two resources that you have also in ec2 that can work really really well with auto scaling",
    "start": "1034799",
    "end": "1040480"
  },
  {
    "text": "so the first one is eni or elastic network interface this is basically a resource that you",
    "start": "1040480",
    "end": "1046000"
  },
  {
    "text": "have inside of vpc that allows you to add another interface to your host",
    "start": "1046000",
    "end": "1051360"
  },
  {
    "text": "these are really great for doing things such as having a service interface or service ip that your other applications will talk",
    "start": "1051360",
    "end": "1057039"
  },
  {
    "text": "to so whereas you have the ability for the main interface on a host to be set by dhcp potentially change",
    "start": "1057039",
    "end": "1063120"
  },
  {
    "text": "inside of a relaunch of that instance or as a dhcp lease might expire with an eni you can have a static ip",
    "start": "1063120",
    "end": "1069919"
  },
  {
    "text": "address assigned to the eni and then assign it to a host it has its own mac address so if you have",
    "start": "1069919",
    "end": "1075039"
  },
  {
    "text": "applications that are tied to a mac address for some reason you could have this eni reattach",
    "start": "1075039",
    "end": "1080080"
  },
  {
    "text": "itself to an instance and have your application continue to work and you can also assign security groups to your enis",
    "start": "1080080",
    "end": "1085520"
  },
  {
    "text": "uh you can also assign tags to enis which uh we'll show that's really useful here in a minute and then lastly these are also free so",
    "start": "1085520",
    "end": "1092160"
  },
  {
    "text": "you can continue to add uh eni's two instances without having to worry about incurring any other charge",
    "start": "1092160",
    "end": "1098240"
  },
  {
    "text": "eips i'm sure everyone is actually familiar with this one been around for a while now elastic ip addresses this is the ability for you",
    "start": "1098240",
    "end": "1104559"
  },
  {
    "text": "to assign another ip address to an instance to give you a static ip address",
    "start": "1104559",
    "end": "1109600"
  },
  {
    "text": "usually externally facing and these can be assigned directly to an instance or to an eni you have that",
    "start": "1109600",
    "end": "1115200"
  },
  {
    "text": "option inside of upc and it doesn't replace the private ip address so inside of your infrastructure",
    "start": "1115200",
    "end": "1120559"
  },
  {
    "text": "you still have whatever private ip there might be inside of your vpc or an ec2 classic and there's a small hourly charge for",
    "start": "1120559",
    "end": "1126559"
  },
  {
    "text": "them if they are not attached to an instance so generally you want to keep on top of these resources if you're not utilizing them",
    "start": "1126559",
    "end": "1132960"
  },
  {
    "text": "so eni's are really powerful things and i'm actually very surprised my customers don't utilize them better because there's a lot of functionality",
    "start": "1132960",
    "end": "1138880"
  },
  {
    "text": "you get with them so you can use them to create a management network again maybe you want to attach an eni to",
    "start": "1138880",
    "end": "1144400"
  },
  {
    "text": "a host that lives in different subnets all talking to the same host such that you don't have to worry about",
    "start": "1144400",
    "end": "1150240"
  },
  {
    "text": "opening up a single ip address or opening things up outside of that subnet to that host you can do uh networks certain sorry",
    "start": "1150240",
    "end": "1157440"
  },
  {
    "text": "certain appliances that we have make use of them so some of the appliances that we have that are available in our marketplace",
    "start": "1157440",
    "end": "1162640"
  },
  {
    "text": "make use of eni to allow traffic to be routed through them or for security services and things like that",
    "start": "1162640",
    "end": "1168080"
  },
  {
    "text": "uh you can create dual home instances pretty self-explanatory but then the last one is really the most important the ability for you to create",
    "start": "1168080",
    "end": "1174559"
  },
  {
    "text": "a low budget high availability solution so how exactly would you do that",
    "start": "1174559",
    "end": "1180000"
  },
  {
    "text": "so we'll walk you through a quick example scenario here of healing a single instance and using an eni to give yourself a a",
    "start": "1180000",
    "end": "1186640"
  },
  {
    "text": "highly available application so assume we have our infrastructure here we're inside aws region at the ec2 api",
    "start": "1186640",
    "end": "1193280"
  },
  {
    "text": "and we're using cloud formation to deploy this application we have a vpc and in this case we just",
    "start": "1193280",
    "end": "1199440"
  },
  {
    "text": "have a single subnet we've got a nat instance and an internet gateway so the host inside of our vpc could talk to the outside world",
    "start": "1199440",
    "end": "1206159"
  },
  {
    "text": "and then we have our app instance whatever it might be so we're going to wrap this app instance inside of an auto scaling group",
    "start": "1206159",
    "end": "1212400"
  },
  {
    "text": "and then we're going to do is we're actually going to create an eni for it that our other infrastructure will talk to that eni",
    "start": "1212400",
    "end": "1218080"
  },
  {
    "text": "instead of talking directly to the instance and maybe we'll have our critical application data on ebs volume",
    "start": "1218080",
    "end": "1224960"
  },
  {
    "text": "and so they're attached and then our other instances are talking to the eni",
    "start": "1225039",
    "end": "1230400"
  },
  {
    "text": "so let's say that something bad happens in this instance it's on failed hardware something gets corrupted with it we do",
    "start": "1230400",
    "end": "1236240"
  },
  {
    "text": "shoot the other node in the head with it which you could do in this case and so it dies so it goes down our",
    "start": "1236240",
    "end": "1241919"
  },
  {
    "text": "instances that are trying to talk this instance can't talk to the eni because the eni is no longer attached to anything and so",
    "start": "1241919",
    "end": "1248240"
  },
  {
    "text": "technically for a short period of time we would not be able to to reach the service so because we're in auto scaling it's",
    "start": "1248240",
    "end": "1254159"
  },
  {
    "text": "going to take that terminated instance to replace it with a good one and then what we can do inside the user data the",
    "start": "1254159",
    "end": "1259919"
  },
  {
    "text": "metadata of this instance is do some bootstrap actions so we can do is talk outbound to the ec2 api",
    "start": "1259919",
    "end": "1266320"
  },
  {
    "text": "and say hey i need to attach this eni and this ebs volume so i can start up my applications so you",
    "start": "1266320",
    "end": "1272240"
  },
  {
    "text": "reach out to the ec2 api tell them that i need to attach these resources attach the resources",
    "start": "1272240",
    "end": "1278640"
  },
  {
    "text": "and then my instances can start talking to this host again this whole process can happen in seconds",
    "start": "1278640",
    "end": "1284640"
  },
  {
    "text": "to minutes depending on how long it takes for your ec2 instance to boot up again based on your ami so a really",
    "start": "1284640",
    "end": "1290640"
  },
  {
    "text": "quick way to give you a very quickly healing component in your infrastructure with very minimal downtime",
    "start": "1290640",
    "end": "1298320"
  },
  {
    "text": "uh if we were thinking about how this would work behind the scenes let's say that this is the eni that i have launched for this instance this is an",
    "start": "1298320",
    "end": "1303919"
  },
  {
    "text": "example from a cloud formation template the two things that are the things i really want to call out on here if you look at the properties",
    "start": "1303919",
    "end": "1310000"
  },
  {
    "text": "group are tags so you'll see here that i have two tags i have a key for name and a key for",
    "start": "1310000",
    "end": "1315919"
  },
  {
    "text": "project and the rest of it here just a subnet id and a private ip address not as important right here if we were",
    "start": "1315919",
    "end": "1322159"
  },
  {
    "text": "to think about what would be necessary for me to attach this eni to my instance programmatically it's actually very simple so this is",
    "start": "1322159",
    "end": "1329039"
  },
  {
    "text": "what would be required to do it in boto our python sdk that we have",
    "start": "1329039",
    "end": "1335200"
  },
  {
    "text": "i am not really super strong with python so i for this slide i wanted to challenge myself to figure out how to do",
    "start": "1335200",
    "end": "1340480"
  },
  {
    "text": "this and so it might look like a whole lot of stuff going on here but there's really only three things that we're doing we're connected to the api we're saying",
    "start": "1340480",
    "end": "1347760"
  },
  {
    "text": "hey give me the eni that matches these tags and then we're attaching that eni to our instance",
    "start": "1347760",
    "end": "1354000"
  },
  {
    "text": "so again here if we were to look at this code if you go down to the fourth line i'm filtering by the name of a tag and the name i'm",
    "start": "1354000",
    "end": "1361360"
  },
  {
    "text": "sorry of an eni and the project that i associated it as tags and then down below further i'm attaching it to the instance so these",
    "start": "1361360",
    "end": "1368320"
  },
  {
    "text": "these short eight lines seven lines of code right here are all that we would need to put into the user data from my",
    "start": "1368320",
    "end": "1373919"
  },
  {
    "text": "instance to reattach that elastic network interface and inside of the auto scaling group again this will heal for me",
    "start": "1373919",
    "end": "1381440"
  },
  {
    "text": "so the next thing i want to talk to you about is using tags as a source of truth in your infrastructure again with aws resources many of the",
    "start": "1382080",
    "end": "1389520"
  },
  {
    "text": "resources most of them these days you can add tags and you can tag them however you want this is a key and a value that you set",
    "start": "1389520",
    "end": "1395600"
  },
  {
    "text": "yourself on that resource and comparably i like to think of that as a good replacement",
    "start": "1395600",
    "end": "1401120"
  },
  {
    "text": "these days for dns so we're all familiar with dns we all use dns if you're on the internet use dns if you think about the original",
    "start": "1401120",
    "end": "1407679"
  },
  {
    "text": "purpose for dns it was really just to address systems out on the internet is to let you know hey this is how you",
    "start": "1407679",
    "end": "1413840"
  },
  {
    "text": "get to this server that is over here on this for this web property or for this uh college or institute",
    "start": "1413840",
    "end": "1421120"
  },
  {
    "text": "and then this is how you get to this other one but today we rely on dns for so much we give really descriptive dns names",
    "start": "1421120",
    "end": "1428000"
  },
  {
    "text": "right going back to uh the examples i had before um well then again some of them aren't as",
    "start": "1428000",
    "end": "1433440"
  },
  {
    "text": "descriptive for instance zeus and uh beetles but some of them might be prod api one prod web 01 things like",
    "start": "1433440",
    "end": "1440880"
  },
  {
    "text": "that our good friend p1 from before uh you know we give these dns names and then we use this as a structure for",
    "start": "1440880",
    "end": "1447760"
  },
  {
    "text": "for spelling out inside of our organization how people are going to know what host is doing what and then what happens is",
    "start": "1447760",
    "end": "1454159"
  },
  {
    "text": "you bring in someone new into the team and they have to spend three months learning the dns patterns that you have inside your",
    "start": "1454159",
    "end": "1459679"
  },
  {
    "text": "company and they're ones that really aren't transferable anywhere else so it's something very siloed very unique to you",
    "start": "1459679",
    "end": "1465279"
  },
  {
    "text": "it's really not a great thing that you could share with the wider world dns only tells us really a single thing",
    "start": "1465279",
    "end": "1470720"
  },
  {
    "text": "about a host right it's a name to ip mapping there's no further information about that host via that dns record",
    "start": "1470720",
    "end": "1477840"
  },
  {
    "text": "you also have to worry about dns and the fragility of it right if you're doing dns inside your infrastructure you",
    "start": "1477840",
    "end": "1482880"
  },
  {
    "text": "usually have a primary and secondary there's replication between the two of them there's fragility there",
    "start": "1482880",
    "end": "1488240"
  },
  {
    "text": "you could have split brain you can have all sorts of issues and then lastly one of the biggest problems of dns is caching caching caching caching",
    "start": "1488240",
    "end": "1495760"
  },
  {
    "text": "i think anyone here who's ever administered dns knows that caching is your single worst enemy as well as one of your best friends but",
    "start": "1495760",
    "end": "1502080"
  },
  {
    "text": "in dns and our infrastructure it can cause a lot of problems so with tags what you have here is a",
    "start": "1502080",
    "end": "1508559"
  },
  {
    "text": "much better flexibility in being able to have multiple tags assigned to a resource and then using those tags",
    "start": "1508559",
    "end": "1514000"
  },
  {
    "text": "for to find out more about that resource again the key and the value are totally up to you",
    "start": "1514000",
    "end": "1519679"
  },
  {
    "text": "you can have several per resource most resources you can have up to 10 tags today and again there's no cost for you to",
    "start": "1519679",
    "end": "1525279"
  },
  {
    "text": "implement these or to query these there's nothing you have to do there's nothing you have to run this is all going to be via the apis for",
    "start": "1525279",
    "end": "1531840"
  },
  {
    "text": "the different services so some examples here again web 3 we know that it has an ip address",
    "start": "1531840",
    "end": "1538240"
  },
  {
    "text": "we don't know much else about it however that same tag based on its image by its instance id we",
    "start": "1538240",
    "end": "1544400"
  },
  {
    "text": "could find out perhaps its name what pool it's part of what environment it's part of",
    "start": "1544400",
    "end": "1550080"
  },
  {
    "text": "who deployed it is it part of an auto scaling group was it deployed by a cloud formation template or any other thing that you",
    "start": "1550080",
    "end": "1556559"
  },
  {
    "text": "might put into the tags that becomes identifiable inside of your infrastructure and again this could be useful for the example we",
    "start": "1556559",
    "end": "1562799"
  },
  {
    "text": "just saw where we tagged an eni and then we pragmatically called it to attach to our server",
    "start": "1562799",
    "end": "1568000"
  },
  {
    "text": "so think of the different things that you could do by being able to pragmatically query tags and then have your applications",
    "start": "1568000",
    "end": "1573919"
  },
  {
    "text": "react based on that lots of different use cases and so again you can use these to tie",
    "start": "1573919",
    "end": "1579679"
  },
  {
    "text": "various resources together tags also play a big part in building reports these days so you can do building reports that are",
    "start": "1579679",
    "end": "1586240"
  },
  {
    "text": "broken out by tags so think about how you could do that potentially for internal chargebacks or just knowing how much we're spending",
    "start": "1586240",
    "end": "1592159"
  },
  {
    "text": "on project a versus project b production versus development things like that we also a few months ago",
    "start": "1592159",
    "end": "1598720"
  },
  {
    "text": "launched the ability for people to do uh very fine-grained ec2 resource management via tags",
    "start": "1598720",
    "end": "1604159"
  },
  {
    "text": "also in rds and a couple of other services so what you could do now is you can set an iem policy that says that",
    "start": "1604159",
    "end": "1609360"
  },
  {
    "text": "members of this group do not have the ability to terminate instances that are tagged with",
    "start": "1609360",
    "end": "1614960"
  },
  {
    "text": "environment production or project a or whatever it might be and that's all done via tags tied in",
    "start": "1614960",
    "end": "1621120"
  },
  {
    "text": "with iem it can also be useful for things like build automation deployment automation deploy this app on every host that has a",
    "start": "1621120",
    "end": "1627919"
  },
  {
    "text": "tag whatever so you think about tools like capistrano which typically you're providing a list",
    "start": "1627919",
    "end": "1633919"
  },
  {
    "text": "of instances in an auto scaled environment in a highly dynamic environment that can be problematic",
    "start": "1633919",
    "end": "1639279"
  },
  {
    "text": "so what makes more sense is to say give me all the hosts that match the tag web or name web and then run my",
    "start": "1639279",
    "end": "1646080"
  },
  {
    "text": "deployment tool against all of those hosts to play out my new code and then lastly what you can do is things like security resource grouping",
    "start": "1646080",
    "end": "1653120"
  },
  {
    "text": "so being able to say that all of these resources are part of this single environment and based on that i'm not going to allow people to",
    "start": "1653120",
    "end": "1659279"
  },
  {
    "text": "maybe access them or modify them so one of the other things that we do that go into server hugging is hand",
    "start": "1659279",
    "end": "1665840"
  },
  {
    "text": "crafting our servers and there's that bit of pride after you have booted a server from an iso cd or",
    "start": "1665840",
    "end": "1671440"
  },
  {
    "text": "pixie booted it and logged into it and installed some software and configured some files and done some other things",
    "start": "1671440",
    "end": "1677200"
  },
  {
    "text": "and maybe you did something differently this time than last time and oh how did tommy set up this one compared to how bob set up that one and",
    "start": "1677200",
    "end": "1683760"
  },
  {
    "text": "so forth and so we do these things still these are things that we did a lot in physical data centers because we didn't have good tools for doing them",
    "start": "1683760",
    "end": "1689760"
  },
  {
    "text": "previously but nowadays we have a lot of automation that we can use for deploying our resources so instead of hand building them there",
    "start": "1689760",
    "end": "1696399"
  },
  {
    "text": "are all these great tools that we have available to us so first off their number tools that we have here at aws",
    "start": "1696399",
    "end": "1703440"
  },
  {
    "text": "elastic beanstalk opsworks cloud formation slightly different purposes slightly different capabilities between them",
    "start": "1703440",
    "end": "1709760"
  },
  {
    "text": "but if you are not using one of these tools today in your infrastructure i find that you are most likely not doing things as optimized as you could",
    "start": "1709760",
    "end": "1716240"
  },
  {
    "text": "be especially when it comes down to cloud formation which is incredibly flexible and incredibly useful inside of your",
    "start": "1716240",
    "end": "1721760"
  },
  {
    "text": "infrastructure regardless of what it is that you're deploying or doing elastic bean stock",
    "start": "1721760",
    "end": "1726880"
  },
  {
    "text": "and opsworks can help you doing more application deployment application monitoring they do some mattress collection",
    "start": "1726880",
    "end": "1733120"
  },
  {
    "text": "and opsworks actually ties in with ops code chef so lots of capabilities there lots of things that you can do to automate the",
    "start": "1733120",
    "end": "1739679"
  },
  {
    "text": "building of your infrastructure to get away from doing them by hand beyond just the aws tools that we have",
    "start": "1739679",
    "end": "1745679"
  },
  {
    "text": "there are a number of third-party tools that are available that do host-based configuration management for you hopefully most of you",
    "start": "1745679",
    "end": "1751440"
  },
  {
    "text": "in this room are familiar with some of these names that are up here on the slide here companies like chef puppet labs",
    "start": "1751440",
    "end": "1757200"
  },
  {
    "text": "salt stack ansible cf engine and tools like fabric a number of these companies are actually",
    "start": "1757200",
    "end": "1762480"
  },
  {
    "text": "just downstairs at the exhibit hall i definitely urge you to go and visit them if you're not familiar and you want to",
    "start": "1762480",
    "end": "1768000"
  },
  {
    "text": "learn out more you want to learn more about them but these are really great tools to help you again in building out your",
    "start": "1768000",
    "end": "1773120"
  },
  {
    "text": "infrastructure they all more or less do a lot of the same thing right they're going to install packages for you they're going",
    "start": "1773120",
    "end": "1779279"
  },
  {
    "text": "to set up configuration files maybe create users create groups start and stop services",
    "start": "1779279",
    "end": "1785520"
  },
  {
    "text": "so the kind of things that you're doing every day manually these tools get you away from having to log into a host",
    "start": "1785520",
    "end": "1791600"
  },
  {
    "text": "to do something for them they all have their own syntax and that sometimes is a bit of caution for people",
    "start": "1791600",
    "end": "1796799"
  },
  {
    "text": "but for the most part they're not too dissimilar there's only so many ways you can write code that are going to install a package on a host",
    "start": "1796799",
    "end": "1802720"
  },
  {
    "text": "so it definitely makes sense to not worry about which one you're picking here but pick one spend the time required to",
    "start": "1802720",
    "end": "1808720"
  },
  {
    "text": "learn it and start working along and start you know building this into your infrastructure some of them are agent-based some of",
    "start": "1808720",
    "end": "1814880"
  },
  {
    "text": "them are agentless uh you know there's different ways you can contrast them and compare them and it's definitely something you should spend",
    "start": "1814880",
    "end": "1820640"
  },
  {
    "text": "the time looking to do you really can't easily scale a large infrastructure today without one of these tools or if you do",
    "start": "1820640",
    "end": "1827520"
  },
  {
    "text": "you're spending a lot of time doing things that you shouldn't do so another thing and a bit of advice that i get when i work with my customers",
    "start": "1827520",
    "end": "1833520"
  },
  {
    "text": "is i hear things like i don't have the time to learn something like chef we're too busy i don't have time to do that",
    "start": "1833520",
    "end": "1839360"
  },
  {
    "text": "and i say well what what did you do to to handle you know setting up all these instances you know installing all the software updating",
    "start": "1839360",
    "end": "1845520"
  },
  {
    "text": "these configuration files i wrote some shell scripts and that took care of it and everything was fine",
    "start": "1845520",
    "end": "1851520"
  },
  {
    "text": "i say so you took the time to write shell scripts to do things like package management and configuration management",
    "start": "1851520",
    "end": "1857360"
  },
  {
    "text": "and start and stop services and then you tested them and then you you know went through them",
    "start": "1857360",
    "end": "1862399"
  },
  {
    "text": "and sanded down the rough edges and taught someone else in your group how they worked and did all of these things when you really should have just",
    "start": "1862399",
    "end": "1868320"
  },
  {
    "text": "started spending the time to learn one of these tools so again i really urge you to go downstairs later on sometime this week",
    "start": "1868320",
    "end": "1874799"
  },
  {
    "text": "and talk to some of these companies that are here i know for a fact that ops code and puppet are here and i believe some of",
    "start": "1874799",
    "end": "1879919"
  },
  {
    "text": "the others are also so the last thing i'm going to talk a bit about about here today",
    "start": "1879919",
    "end": "1885440"
  },
  {
    "text": "is making use of service registries so we're all familiar with registries and no not this kind of registry",
    "start": "1885440",
    "end": "1892240"
  },
  {
    "text": "service registries are a little bit of a different thing here so a service registry is a key component of a service oriented architecture it's",
    "start": "1892240",
    "end": "1899360"
  },
  {
    "text": "something that is kind of fundamental to having a large service oriented architecture being able to scale it well",
    "start": "1899360",
    "end": "1904720"
  },
  {
    "text": "handle dynamicness and continue to grow out your infrastructure and the resources that you might have",
    "start": "1904720",
    "end": "1911360"
  },
  {
    "text": "so what is kind of the workflow that typically you would see well a new instance would start up it would register itself with the",
    "start": "1911360",
    "end": "1917279"
  },
  {
    "text": "service registry changes to that registry might kick off pushes or you might have other instances that are pulling that service registry to see",
    "start": "1917279",
    "end": "1923519"
  },
  {
    "text": "what those changes are the other instances now know about our new instance so the risk or infrastructure says hey",
    "start": "1923519",
    "end": "1929279"
  },
  {
    "text": "there's this new application server here i know that it hosts xyz so i know i can talk to that host for",
    "start": "1929279",
    "end": "1935200"
  },
  {
    "text": "that application and then lastly if there was any sort of that instance going away it being shut down and being",
    "start": "1935200",
    "end": "1940320"
  },
  {
    "text": "terminated for some reason an update to the registry should hopefully update those other instances of that service going away",
    "start": "1940320",
    "end": "1946159"
  },
  {
    "text": "so this allows you to do is build a very dynamic also you know self-healing infrastructure",
    "start": "1946159",
    "end": "1951279"
  },
  {
    "text": "making use of a service like this so some examples of this there's open source solutions like zookeeper",
    "start": "1951279",
    "end": "1957120"
  },
  {
    "text": "uh then there's also some paid for services things like mulesofts any point service registry ibm's web",
    "start": "1957120",
    "end": "1963440"
  },
  {
    "text": "sphere service registry there are tools from companies like netflix and airbnb airbnb one which",
    "start": "1963440",
    "end": "1968640"
  },
  {
    "text": "we'll hear about in a little bit here so there's lots of really awesome examples out there lots of code that you can dive into",
    "start": "1968640",
    "end": "1974000"
  },
  {
    "text": "or if you're looking for something a little bit more supported and paid for you can find that too",
    "start": "1974000",
    "end": "1979039"
  },
  {
    "text": "so talking a little bit about zookeeper uh one of the most popular open source solutions that i that i see people using as far as the service registry goes",
    "start": "1979039",
    "end": "1986640"
  },
  {
    "text": "zookeeper is a centralized service for maintaining configuration information naming providing distributed",
    "start": "1986640",
    "end": "1992559"
  },
  {
    "text": "synchronization group services and so forth you can do things like leader election",
    "start": "1992559",
    "end": "1998720"
  },
  {
    "text": "group membership configuration maintenance stuff like that it's a really awesome service zookeeper underpins things like hbase",
    "start": "1998720",
    "end": "2005279"
  },
  {
    "text": "it could be used with solar for for doing search and a number of different options and there's a lot of companies",
    "start": "2005279",
    "end": "2010399"
  },
  {
    "text": "that have built zookeeper into their infrastructure essentially how it works is that you",
    "start": "2010399",
    "end": "2015519"
  },
  {
    "text": "have a cluster of zookeeper nodes a minimum of three is recommended those zookeeper nodes would do an election",
    "start": "2015519",
    "end": "2021840"
  },
  {
    "text": "process to figure out who the master is inside of their cluster and then you would have your applications and your",
    "start": "2021840",
    "end": "2028159"
  },
  {
    "text": "instances talk to this cluster to you know maybe find out okay what is the",
    "start": "2028159",
    "end": "2033519"
  },
  {
    "text": "primary database in this cluster right now what is the lead worker node for this cluster right now",
    "start": "2033519",
    "end": "2039279"
  },
  {
    "text": "and so essentially that's something that zookeeper can help you out with so uh with that enough for me here i",
    "start": "2039279",
    "end": "2045840"
  },
  {
    "text": "think i've kind of gone over a number of different things that you can do hopefully you can start thinking about implementing some of these solutions and",
    "start": "2045840",
    "end": "2052000"
  },
  {
    "text": "pulling your arms away from the server slowly and uh getting used to infrastructure that can be",
    "start": "2052000",
    "end": "2057200"
  },
  {
    "text": "tossed away and self-healing and self-scaling so i a few weeks ago before i handed over",
    "start": "2057200",
    "end": "2063280"
  },
  {
    "text": "here to uh to martin airbnb released something called smart stack",
    "start": "2063280",
    "end": "2068398"
  },
  {
    "text": "and as soon as i saw the blog post for you i was just blown away this is an example of a customer of ours",
    "start": "2068399",
    "end": "2075040"
  },
  {
    "text": "uh writing really awesome software really getting the cloud and really following these kind of best",
    "start": "2075040",
    "end": "2080878"
  },
  {
    "text": "practices that we try to preach and so as soon as i saw i reached out to airbnb and i said i need someone from your company to come",
    "start": "2080879",
    "end": "2087520"
  },
  {
    "text": "to las vegas and speak at my session luckily martin replied and was available so with to that i'd like",
    "start": "2087520",
    "end": "2094720"
  },
  {
    "text": "to introduce martin rhodes from airbnb",
    "start": "2094720",
    "end": "2103838"
  },
  {
    "text": "so thank you chris um yeah so like chris mentioned we released smart stack two weeks ago it's how we",
    "start": "2113760",
    "end": "2119040"
  },
  {
    "text": "solve service discovery within airbnb um chris asked me if i'd like to join this talk and i'm a very",
    "start": "2119040",
    "end": "2125280"
  },
  {
    "text": "um very much against hugging servers so i had to say yes there was no other option",
    "start": "2125280",
    "end": "2130320"
  },
  {
    "text": "but it fits in quite well so it's basically designed to help you",
    "start": "2130320",
    "end": "2136560"
  },
  {
    "text": "build service oriented architectures first let me start by pointing out this was built by myself and a co-worker igor",
    "start": "2136560",
    "end": "2143359"
  },
  {
    "text": "igor is one of the fantastic engineers that i get to work with at airbnb and he has a really strong background in",
    "start": "2143359",
    "end": "2150160"
  },
  {
    "text": "coding specifically around automating systems myself i've been using aws since it was",
    "start": "2150160",
    "end": "2156800"
  },
  {
    "text": "released deploying scalable applications for for a good long time now",
    "start": "2156800",
    "end": "2162400"
  },
  {
    "text": "my specific interest is in automation making things easier to use in reducing the barriers that it takes to launch and scale",
    "start": "2162400",
    "end": "2169119"
  },
  {
    "text": "complex applications on top of ec2",
    "start": "2169119",
    "end": "2173838"
  },
  {
    "text": "right so um about you know somewhere in december of last year we",
    "start": "2174480",
    "end": "2179680"
  },
  {
    "text": "were faced with a problem of service discovery you know like how do servers find each other how do you know what servers are",
    "start": "2179680",
    "end": "2186000"
  },
  {
    "text": "down what servers are up where you should send traffic to these kinds of basic problems that once you hit a certain scale",
    "start": "2186000",
    "end": "2192320"
  },
  {
    "text": "become very big problems and you need solutions for there's nothing that we deemed off the",
    "start": "2192320",
    "end": "2197920"
  },
  {
    "text": "shelf that was really going to work for our use case so we decided to take a new approach",
    "start": "2197920",
    "end": "2203760"
  },
  {
    "text": "and we came up with smartstack so um",
    "start": "2203760",
    "end": "2209040"
  },
  {
    "text": "so i just wanted to go through a little background about why you'd actually want to do an soa so um it provides you a way to",
    "start": "2210480",
    "end": "2218480"
  },
  {
    "text": "to allow multiple developers split your code bases apart allow multiple teams to work on different parts of the code also you can",
    "start": "2218480",
    "end": "2225119"
  },
  {
    "text": "maintain your server separately for example you might have a crucial component of your infrastructure that",
    "start": "2225119",
    "end": "2230400"
  },
  {
    "text": "you don't you want a heavy rigorous testing cycle before you deploy it there might be another component of your",
    "start": "2230400",
    "end": "2236400"
  },
  {
    "text": "infrastructure that doesn't really matter you want to move really fast you're experimenting with it you want to do continuous deployment and deploy to",
    "start": "2236400",
    "end": "2242400"
  },
  {
    "text": "it multiple times a day we wanted a solution that would that would work for both",
    "start": "2242400",
    "end": "2247680"
  },
  {
    "text": "um also graceful degradation so you want if you have a system that's not crucial to your infrastructure and it goes down",
    "start": "2247680",
    "end": "2254400"
  },
  {
    "text": "the whole service goes down you don't want it to bring down the rest of your infrastructure um so i'm gonna go through a little um",
    "start": "2254400",
    "end": "2261359"
  },
  {
    "text": "view that's actually fairly accurate from our perspective as far as what happened um to us specifically so you know just",
    "start": "2261359",
    "end": "2268240"
  },
  {
    "text": "like any startup you probably start with one ruby on royals website running on top of ec2",
    "start": "2268240",
    "end": "2274000"
  },
  {
    "text": "probably heard that kind of story before so before you know it you know rails loves its cpus so you max",
    "start": "2274000",
    "end": "2281119"
  },
  {
    "text": "out this server after it becomes popular so you throw it behind an elb and you have a pool of these servers and",
    "start": "2281119",
    "end": "2287839"
  },
  {
    "text": "everything works well for a while um until you want to split out your first service",
    "start": "2287839",
    "end": "2293040"
  },
  {
    "text": "what you do you know at that point what we did is we just ran a second elb instance with a second pool of servers",
    "start": "2293040",
    "end": "2298960"
  },
  {
    "text": "and instances would go through the elb to talk to each other after a while we want to add more",
    "start": "2298960",
    "end": "2305119"
  },
  {
    "text": "functionality we need custom metrics we want to be able to do a b testing we need to",
    "start": "2305119",
    "end": "2310880"
  },
  {
    "text": "get data on how people are using our site and how we can improve it so we're a very data driven company so",
    "start": "2310880",
    "end": "2316320"
  },
  {
    "text": "we need a custom monitoring solution or logging solution rather where we can aggregate these metrics and",
    "start": "2316320",
    "end": "2321520"
  },
  {
    "text": "then run analytics on them through our etl pipeline um also another",
    "start": "2321520",
    "end": "2327680"
  },
  {
    "text": "key thing that we do is is take a component that is either a little bit complex or really",
    "start": "2327680",
    "end": "2332960"
  },
  {
    "text": "needs to be performant in this slide the pricing service so what started is code in the front end",
    "start": "2332960",
    "end": "2339280"
  },
  {
    "text": "um if you how many of you by the way have booked a place on airbnb just so i can get a sense of like who's used to",
    "start": "2339280",
    "end": "2345040"
  },
  {
    "text": "say so when you look at places you want to know how much they cost obviously that needs to be quick because it's in",
    "start": "2345040",
    "end": "2352240"
  },
  {
    "text": "the response cycle so when users are requesting this information they need to see it really fast so pieces of code that either one need to",
    "start": "2352240",
    "end": "2358320"
  },
  {
    "text": "be very performant or two are very complex we can split out into different backend services so in the",
    "start": "2358320",
    "end": "2364160"
  },
  {
    "text": "case of our pricing service we took code out of our monorail code base wrote it in java threw it in a back end",
    "start": "2364160",
    "end": "2370480"
  },
  {
    "text": "and now it's made as web requests and so on and so forth the same with",
    "start": "2370480",
    "end": "2376079"
  },
  {
    "text": "calendars in this slide as well shows the mobile website",
    "start": "2376079",
    "end": "2381760"
  },
  {
    "text": "so as you can see from this picture really quick with you know 10 to 15 servers it's already starting to get a little",
    "start": "2381760",
    "end": "2387280"
  },
  {
    "text": "bit a little bit complex this next slide is a subset of our production traffic and you can",
    "start": "2387280",
    "end": "2393760"
  },
  {
    "text": "see how many nodes there are what they're talking to you can see at the bottom left is a logging sorry a monitoring node at",
    "start": "2393760",
    "end": "2400640"
  },
  {
    "text": "the bottom right is an aggregation node that aggregates metrics for us and at this scale you obviously do not",
    "start": "2400640",
    "end": "2406319"
  },
  {
    "text": "want to manage this by hand you also probably don't care if a couple of these servers go down like it's not going to affect your service you just",
    "start": "2406319",
    "end": "2412319"
  },
  {
    "text": "kill them move on so basically this is like the end state",
    "start": "2412319",
    "end": "2418800"
  },
  {
    "text": "that we we get to so just to recap real quick services help you scale",
    "start": "2418800",
    "end": "2425200"
  },
  {
    "text": "and soa architecture helps you do that and smart stack is designed to make this problem easier",
    "start": "2425200",
    "end": "2432640"
  },
  {
    "text": "um so enough about the uh the what let's talk about the sorry the y let's talk about the what",
    "start": "2432640",
    "end": "2439838"
  },
  {
    "text": "um so there's kind of four parts that we're talking about here one is the service that you",
    "start": "2439920",
    "end": "2446160"
  },
  {
    "text": "want to publish potentially also subscribe to other services with that um two is zookeeper we need a data store",
    "start": "2446160",
    "end": "2452480"
  },
  {
    "text": "to hold information about whether instances are alive or not um zookeeper worked very well for for",
    "start": "2452480",
    "end": "2458000"
  },
  {
    "text": "our needs um and then there's two custom demons one called nerve which runs on the client boxes",
    "start": "2458000",
    "end": "2463440"
  },
  {
    "text": "doing health checks locally and coordinates with zookeeper when services go up and down",
    "start": "2463440",
    "end": "2468480"
  },
  {
    "text": "and another component called synapse which reads from zookeeper gets push-based notifications from zookeeper",
    "start": "2468480",
    "end": "2473920"
  },
  {
    "text": "and reconfigures ha proxy on the client machines we run h.a proxy on all of our client machines for this",
    "start": "2473920",
    "end": "2480720"
  },
  {
    "text": "which is a different pattern than most people would do so h.a proxy is another piece of",
    "start": "2480720",
    "end": "2485839"
  },
  {
    "text": "software that we use as well i'll talk a little bit more about that later so to go through an example for in this",
    "start": "2485839",
    "end": "2493200"
  },
  {
    "text": "case the mobile website trying to talk to the main monorail website um first nerve is running as a client on",
    "start": "2493200",
    "end": "2499760"
  },
  {
    "text": "the client is a demon sitting there doing health checks so if you if if the config says it's supposed to",
    "start": "2499760",
    "end": "2504960"
  },
  {
    "text": "listen on port 80 and respond to slash health there's just a demon sitting there repeating this this operation over and",
    "start": "2504960",
    "end": "2511200"
  },
  {
    "text": "over and over um once it gets a notification that the service is up",
    "start": "2511200",
    "end": "2516240"
  },
  {
    "text": "it writes into the zookeeper um and it maintains what's known as a",
    "start": "2516240",
    "end": "2522160"
  },
  {
    "text": "ephemeral node in zookeeper for those of you who aren't familiar with zookeeper it exposes you a file system basically",
    "start": "2522160",
    "end": "2528400"
  },
  {
    "text": "or what looks like a file system so we just write a couple json blobs in there we tag it with the instance id we don't",
    "start": "2528400",
    "end": "2535280"
  },
  {
    "text": "actually care what the name is so we don't name our service at all we use the ec2 instance id because it's",
    "start": "2535280",
    "end": "2541599"
  },
  {
    "text": "mutually exclusive no other reason and then in there is a little json blob with a host and a port",
    "start": "2541599",
    "end": "2547680"
  },
  {
    "text": "which allows the service to be found so when moab wants to talk to",
    "start": "2547680",
    "end": "2554240"
  },
  {
    "text": "to sorry once a new node comes up or goes down that",
    "start": "2554240",
    "end": "2561760"
  },
  {
    "text": "information is immediately communicated to synapse and h.a proxy on the client boxes are reconfigured to either talk to the new",
    "start": "2561760",
    "end": "2567920"
  },
  {
    "text": "machine or to stop talking to an older machine so for mobile web's standpoint it just",
    "start": "2567920",
    "end": "2574480"
  },
  {
    "text": "talks to localhost to port in this case seven eight and traffic transparently gets routed reverse",
    "start": "2574480",
    "end": "2580079"
  },
  {
    "text": "proxied back to an available server that can handle this request in this example there's only two servers but you could",
    "start": "2580079",
    "end": "2585119"
  },
  {
    "text": "imagine each of these being a pool um and it would make a little bit more sense so",
    "start": "2585119",
    "end": "2590240"
  },
  {
    "text": "um like i said we use h8 proxy so in this is a this is a screenshot from the stats page that they have you can see",
    "start": "2590240",
    "end": "2596880"
  },
  {
    "text": "four different services in a pool um that are in each service so um",
    "start": "2596880",
    "end": "2602160"
  },
  {
    "text": "when you hit h a proxy on whatever port you defined it on it will fan out those requests and you can there's several algorithms you can",
    "start": "2602160",
    "end": "2609200"
  },
  {
    "text": "use round robin or at least connections are probably the most popular but there's several other",
    "start": "2609200",
    "end": "2615280"
  },
  {
    "text": "as well and it's highly configurable h apox is a very solid piece of software that's been around for a long time most people ran this",
    "start": "2615280",
    "end": "2623839"
  },
  {
    "text": "before elb existed as a reverse proxy on ec2 so yeah so just to go over that",
    "start": "2623839",
    "end": "2631520"
  },
  {
    "text": "one more time you can see starting with nerve nerve will sit there do",
    "start": "2631520",
    "end": "2637119"
  },
  {
    "text": "health checks on your application on let's say port 80. um once it's up it'll write to zookeeper",
    "start": "2637119",
    "end": "2643040"
  },
  {
    "text": "with the host uh sorry the ip and the port and then that immediately gets sent to",
    "start": "2643040",
    "end": "2648960"
  },
  {
    "text": "synapse which reconfigures h.a proxy in this case mobile web wants to talk to",
    "start": "2648960",
    "end": "2654800"
  },
  {
    "text": "monorail it knows it's just hard-coded to talk to localhost port 5678 it just shoots traffic there and it just",
    "start": "2654800",
    "end": "2661040"
  },
  {
    "text": "gets fanned out to whatever available server can handle the request so um okay so let's talk a little bit",
    "start": "2661040",
    "end": "2668079"
  },
  {
    "text": "about like why this is a good thing or why it works for us what it gives us so first of all code",
    "start": "2668079",
    "end": "2673440"
  },
  {
    "text": "abstraction you can implement this yourself in your application but then you're kind of limited to just",
    "start": "2673440",
    "end": "2681280"
  },
  {
    "text": "using the same code base or or re-implementing it for every language you want to support",
    "start": "2681280",
    "end": "2687359"
  },
  {
    "text": "in our infrastructure we run java we run rails we run node.js and we don't want to limit our",
    "start": "2687359",
    "end": "2692800"
  },
  {
    "text": "developers into what they can do we want to give people full ability to run whatever stack they want",
    "start": "2692800",
    "end": "2698000"
  },
  {
    "text": "so we didn't want to have to re-implement this in all these different languages so this solution is completely transparent",
    "start": "2698000",
    "end": "2703920"
  },
  {
    "text": "it just works over like layer three um so applications don't even know that it exists nobody",
    "start": "2703920",
    "end": "2710160"
  },
  {
    "text": "the application doesn't have any knowledge that it's publishing itself to the world it also doesn't have any knowledge of like what servers are up and it can",
    "start": "2710160",
    "end": "2716839"
  },
  {
    "text": "consume that's set in the configs but not in the application the other one is automatic failure",
    "start": "2716839",
    "end": "2722720"
  },
  {
    "text": "handling which is obviously awesome you do not want to wake up at night there's two levels of this happening one",
    "start": "2722720",
    "end": "2728960"
  },
  {
    "text": "is the nerve agent itself so if you stop the service nerve will immediately recognize that it's down",
    "start": "2728960",
    "end": "2734240"
  },
  {
    "text": "remove it from zookeeper also if nerve dies it's",
    "start": "2734240",
    "end": "2739920"
  },
  {
    "text": "using what's known as a femoral node in zookeeper which will be removed after a certain timeout if there's a",
    "start": "2739920",
    "end": "2746240"
  },
  {
    "text": "hard stop on the server if it can't close the socket correctly um the other level of health checks comes from aj",
    "start": "2746240",
    "end": "2752319"
  },
  {
    "text": "proxy so the actual clients themselves are checking in with the list of servers to make sure they're up available",
    "start": "2752319",
    "end": "2758079"
  },
  {
    "text": "um so even if if nerve breaks um h.a proxy will take bad servers out",
    "start": "2758079",
    "end": "2764240"
  },
  {
    "text": "of the pool on its own um and another big piece here i should have pointed it out",
    "start": "2764240",
    "end": "2770240"
  },
  {
    "text": "in this slide is there's no dns in my opinion dns is for people it's not for servers right it's it's",
    "start": "2770240",
    "end": "2775760"
  },
  {
    "text": "taking a name and converting it to an ip like i don't need my servers to even know what a name is like",
    "start": "2775760",
    "end": "2781599"
  },
  {
    "text": "just give it the ip and be done with it also it'll work around network partitions or at least the aha proxy",
    "start": "2781599",
    "end": "2787760"
  },
  {
    "text": "health checks to be clear we'll work around network partitions because each client is individually checking to see if it can connect to the host and",
    "start": "2787760",
    "end": "2794480"
  },
  {
    "text": "this is all done through ha proxy like on the back end completely transparent",
    "start": "2794480",
    "end": "2800160"
  },
  {
    "text": "since all the traffic is going through h.a proxy we can get a ton of information about our system and how",
    "start": "2800160",
    "end": "2805200"
  },
  {
    "text": "things are functioning we can get how much traffic is going in between each host so if you had a network graph we know like the",
    "start": "2805200",
    "end": "2811599"
  },
  {
    "text": "exact edge weights basically on every node that we have bi-directional we know sessions we know whether servers",
    "start": "2811599",
    "end": "2818640"
  },
  {
    "text": "are up and down i took this screenshot of production so everything was running but if any of these servers were down",
    "start": "2818640",
    "end": "2825280"
  },
  {
    "text": "you would see a yellow or red line um",
    "start": "2825280",
    "end": "2830720"
  },
  {
    "text": "i should have made a better better slide that showed something failing but sorry it works well",
    "start": "2830720",
    "end": "2836000"
  },
  {
    "text": "um also it's distributed by design like i said we're running h.a proxy on the client boxes which is like",
    "start": "2836000",
    "end": "2841440"
  },
  {
    "text": "kind of weird that's kind of a different way to think about the problem typically what people would have done is put a tier in the middle so your box",
    "start": "2841440",
    "end": "2847760"
  },
  {
    "text": "talks to another box that knows how to talk to the next box that's like typically how people would implement a reverse proxy solution like",
    "start": "2847760",
    "end": "2854079"
  },
  {
    "text": "this but in this case there is no no central load balancer box like there's no",
    "start": "2854079",
    "end": "2859839"
  },
  {
    "text": "no extra tier as well we chose zookeeper because it is able to",
    "start": "2859839",
    "end": "2866480"
  },
  {
    "text": "to run with as long as it has a quorum it can still make decisions and move forward so we",
    "start": "2866480",
    "end": "2872640"
  },
  {
    "text": "run five nodes in production if you take two of those nodes out everything still continues working perfectly this system is also designed",
    "start": "2872640",
    "end": "2879359"
  },
  {
    "text": "to work correctly if zookeeper just straight goes out so even if you killed zookeeper hard",
    "start": "2879359",
    "end": "2885599"
  },
  {
    "text": "everything should just stay perfectly running we don't take any extra configuration if um if we can't talk to zookeeper so",
    "start": "2885599",
    "end": "2893359"
  },
  {
    "text": "as far as what it's what it's done for us we've over the course of the last year converted everything that we're running",
    "start": "2893359",
    "end": "2898800"
  },
  {
    "text": "imported everything over to running on smart stock it was very very easy to port actually and now we have over",
    "start": "2898800",
    "end": "2904800"
  },
  {
    "text": "100 services currently on this system all of our production traffic is pushed through it",
    "start": "2904800",
    "end": "2910319"
  },
  {
    "text": "we ended up being able to delete about 3000 lines of code in java and in ruby and we were starting",
    "start": "2910319",
    "end": "2917760"
  },
  {
    "text": "to implement the same solution for node.js so we just got to like nuke all that code it made all of our applications much much",
    "start": "2917760",
    "end": "2923599"
  },
  {
    "text": "more simple and it's like easy enough for for all of our web application",
    "start": "2923599",
    "end": "2930160"
  },
  {
    "text": "developers to use it um and they're able to implement it on their own they don't need to get help from sre or from any other team",
    "start": "2930160",
    "end": "2936960"
  },
  {
    "text": "to to run it they're just able to use it on their own and consume it so we've gotten very good feedback",
    "start": "2936960",
    "end": "2944319"
  },
  {
    "text": "you can see what some people have said about it it's been very well received",
    "start": "2944319",
    "end": "2949359"
  },
  {
    "text": "so as far as the future we're continuing to improve our testing",
    "start": "2952000",
    "end": "2957680"
  },
  {
    "text": "suite it's not as full as i would like zookeeper does have plenty of edge cases that can",
    "start": "2957680",
    "end": "2963200"
  },
  {
    "text": "kind of get tripped up on um so we're working to expand the test",
    "start": "2963200",
    "end": "2968240"
  },
  {
    "text": "suite we're working actively with the community to see what people want and what direction they want to push it in",
    "start": "2968240",
    "end": "2973599"
  },
  {
    "text": "we've been working on things like docker integration in other models to more dynamically configure",
    "start": "2973599",
    "end": "2979920"
  },
  {
    "text": "nerve and synapse without restarting them so if you guys are interested all of",
    "start": "2979920",
    "end": "2986480"
  },
  {
    "text": "this code is open sourced there's a vagrant setup that will basically with you know one command",
    "start": "2986480",
    "end": "2992880"
  },
  {
    "text": "launch the test suite after configuring an instance so if you download the code install vagrant install virtualbox if you don't",
    "start": "2992880",
    "end": "2999599"
  },
  {
    "text": "have those already you can get those for free um just check out the code and run vagrant up and it'll fully install",
    "start": "2999599",
    "end": "3005520"
  },
  {
    "text": "everything and run the test suite which is a very nice functionality",
    "start": "3005520",
    "end": "3011040"
  },
  {
    "text": "it's on github airbnb no big surprise so um so i",
    "start": "3011040",
    "end": "3017440"
  },
  {
    "text": "encourage you guys to check it out if you think this is a useful tool for you guys we think it's",
    "start": "3017440",
    "end": "3022559"
  },
  {
    "text": "general enough to where it is useful for for lots of people not just not just us so",
    "start": "3022559",
    "end": "3028640"
  },
  {
    "text": "we're already working with several companies that are um integrating and deploying this system right now so",
    "start": "3028640",
    "end": "3035440"
  },
  {
    "text": "great well thank you guys very much that's it for me",
    "start": "3035440",
    "end": "3041838"
  },
  {
    "text": "thank you martin uh so just in closing here um first of all thank you all for attending this session today and coming out to re",
    "start": "3045040",
    "end": "3051280"
  },
  {
    "text": "invent and again on behalf of martin and myself thank you very much for for coming in this session",
    "start": "3051280",
    "end": "3056720"
  },
  {
    "text": "uh we invite you guys to join us we're both going to be at the pub crawl later on today hopefully you guys know about where that is",
    "start": "3056720",
    "end": "3062240"
  },
  {
    "text": "uh it starts at uh caneletto uh here on the the second floor there'll be a lot of startup folks there",
    "start": "3062240",
    "end": "3067920"
  },
  {
    "text": "a lot of the aws startup team people um there's also gonna be companies that are launching this week at re invent",
    "start": "3067920",
    "end": "3073280"
  },
  {
    "text": "so you can come and meet with them and talk with them further also uh tomorrow there are a number of",
    "start": "3073280",
    "end": "3078880"
  },
  {
    "text": "really great sessions with uh with werner the from the quotes earlier that you saw in my presentation",
    "start": "3078880",
    "end": "3084640"
  },
  {
    "text": "uh there's a fireside chat tomorrow at 1 30 with a number of different uh senior executives from different technology",
    "start": "3084640",
    "end": "3091119"
  },
  {
    "text": "companies and then at three o'clock there are startup influencers talks with people from the vc and the",
    "start": "3091119",
    "end": "3098079"
  },
  {
    "text": "investing world and then lastly at 4 15 that's when those five companies are going to start actually",
    "start": "3098079",
    "end": "3104240"
  },
  {
    "text": "do their actual launch here at reinvent so again thank you all for coming enjoy the rest of your week here in vegas and your time",
    "start": "3104240",
    "end": "3110400"
  },
  {
    "text": "at re events we'll be over to the side here to ask questions in a minute or two but thank you and have a great day",
    "start": "3110400",
    "end": "3124800"
  }
]